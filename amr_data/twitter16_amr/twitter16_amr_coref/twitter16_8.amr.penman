# ::snt Nah. Just bury the poll &amp; remove all the links it. Keep denying the truth.
# ::tokens ["Nah", ".", "Just", "bury", "the", "poll", "&", "amp", ";", "remove", "all", "the", "links", "it", ".", "Keep", "denying", "the", "truth", "."]
# ::lemmas ["Nah", ".", "just", "bury", "the", "poll", "&", "amp", ";", "remove", "all", "the", "link", "it", ".", "keep", "deny", "the", "truth", "."]
(c3-9 / multi-sentence
      :snt1 (c3-11 / nah)
      :snt2 (c3-0 / and
                  :op1 (c3-5 / bury-01
                             :ARG0 (c3-8 / you)
                             :ARG1 (c3-14 / and
                                          :op1 (c3-12 / poll-01)
                                          :op2 (c3-1 / amp))
                             :mod (c3-4 / just)
                             :mode imperative)
                  :op2 (c3-3 / remove-01
                             :ARG0 c3-8
                             :ARG1 (c3-13 / link
                                          :mod (c3-10 / all))
                             :mode imperative)
                  :snt3 (c3-6 / keep-02
                              :ARG0 c3-8
                              :ARG1 (c3-7 / deny-01
                                          :ARG0 c3-8
                                          :ARG1 (c3-2 / truth))
                              :mode imperative)))

# ::snt yes I'm feeling that vibration intensely from family interviews MSM but will pass
# ::tokens ["yes", "I", "'m", "feeling", "that", "vibration", "intensely", "from", "family", "interviews", "MSM", "but", "will", "pass"]
# ::lemmas ["yes", "i", "be", "feel", "that", "vibration", "intensely", "from", "family", "interview", "MSM", "but", "will", "pass"]
(c4-9 / contrast-01
      :ARG1 (c4-7 / feel-01
                  :ARG0 (c4-4 / i)
                  :ARG1 (c4-6 / vibration
                              :mod (c4-0 / that))
                  :ARG1-of (c4-8 / intense-02)
                  :source (c4-3 / interview-01
                                :ARG0 (c4-2 / media)
                                :ARG1 (c4-1 / family)))
      :ARG2 (c4-5 / pass-03
                  :ARG1 c4-4))

# ::snt Big Headline today.."Why Bernie Sanders is Un-Electable" What a bunch of disinfo agents!
# ::tokens ["Big", "Headline", "today", "..", "\"Why", "Bernie", "Sanders", "is", "Un", "-", "Electable", "\"", "What", "a", "bunch", "of", "disinfo", "agents", "!"]
# ::lemmas ["Big", "Headline", "today", "..", "\"why", "Bernie", "Sanders", "be", "Un", "-", "Electable", "\"", "what", "a", "bunch", "of", "disinfo", "agent", "!"]
(c5-6 / multi-sentence
      :snt1 (c5-11 / headline-01
                   :ARG2 (c5-12 / cause-01
                                :ARG0 (c5-0 / amr-unknown)
                                :ARG1 (c5-9 / possible-01
                                            :ARG1 (c5-2 / elect-01
                                                        :ARG1 (c5-7 / person
                                                                    :name (c5-10 / name
                                                                                 :op1 "Bernie"
                                                                                 :op2 "Sanders")))
                                            :polarity -))
                   :mod (c5-3 / big)
                   :time (c5-1 / today))
      :snt2 (c5-5 / bunch
                  :consist-of (c5-8 / agent
                                    :ARG0-of (c5-4 / disinfo-00))
                  :degree c5-0))

# ::snt actually
# ::tokens ["actually"]
# ::lemmas ["actually"]
(c6-0 / actual-02)

# ::snt Good thing you Good Folks got a ScreenShot cause done DELETED IT!
# ::tokens ["Good", "thing", "you", "Good", "Folks", "got", "a", "ScreenShot", "cause", "done", "DELETED", "IT", "!"]
# ::lemmas ["good", "thing", "you", "Good", "Folks", "get", "a", "ScreenShot", "cause", "do", "delete", "it", "!"]
(c7-4 / good-02
      :ARG1 (c7-3 / get-01
                  :ARG0 (c7-2 / you
                              :mod (c7-6 / folk
                                         :ARG1-of c7-4)))
      :ARG1 (c7-5 / screenShot)
      :ARG1-of (c7-7 / cause-01
                     :ARG0 (c7-1 / do-02
                                 :ARG1 (c7-0 / deplete-01
                                             :ARG1 c7-5))))

# ::snt IN OTHER WORDS, TAKE WHAT CNN SAY WITH A GRAIN OF SALT! BOUGHT &amp; PAID FOR!
# ::tokens ["IN", "OTHER", "WORDS", ",", "TAKE", "WHAT", "CNN", "SAY", "WITH", "A", "GRAIN", "OF", "SALT", "!", "BOUGHT", "&", "amp", ";", "PAID", "FOR", "!"]
# ::lemmas ["in", "other", "word", ",", "take", "what", "CNN", "SAY", "with", "a", "GRAIN", "of", "SALT", "!", "BOUGHT", "&", "amp", ";", "PAID", "for", "!"]
(c8-6 / multi-sentence
      :snt1 (c8-9 / say-01
                  :ARG0 (c8-10 / publication
                               :name (c8-11 / name
                                            :op1 "CNN"))
                  :ARG1 (c8-2 / take-01
                              :ARG0 (c8-5 / you)
                              :ARG1 (c8-4 / thing
                                          :ARG1-of c8-9
                                          :ARG0 c8-10)
                              :mode imperative)
                  :manner (c8-7 / gag-01
                                :ARG1 (c8-0 / salt)))
      :snt2 (c8-1 / and
                  :op1 (c8-3 / bake-01)
                  :op2 (c8-14 / amp-01)
                  :op3 (c8-8 / pay-01
                             :ARG0 c8-5
                             :mode imperative))
      :snt3 (c8-13 / word-01
                   :mod (c8-12 / other)))

# ::snt Plus he kind of looks and sounds like Larry David. That's a good thing.
# ::tokens ["Plus", "he", "kind", "of", "looks", "and", "sounds", "like", "Larry", "David", ".", "That", "'s", "a", "good", "thing", "."]
# ::lemmas ["plus", "he", "kind", "of", "look", "and", "sound", "like", "Larry", "David", ".", "that", "be", "a", "good", "thing", "."]
(c9-4 / multi-sentence
      :snt1 (c9-0 / and
                  :op1 (c9-10 / look-02
                              :ARG0 (c9-11 / he)
                              :ARG1 (c9-8 / person
                                          :name (c9-9 / name
                                                      :op1 "Larry"
                                                      :op2 "David"))
                              :degree (c9-2 / kind-of))
                  :op2 (c9-7 / sound-01
                             :ARG1 c9-11
                             :ARG2 c9-8)
                  :mod (c9-5 / plus))
      :snt2 (c9-1 / thing
                  :ARG1-of (c9-6 / good-02)
                  :domain (c9-3 / that)))

# ::snt reported on SGRT&gt; TimeWarner OWNS CNN &amp; They are CONTRIBUTOR to HRC
# ::tokens ["reported", "on", "SGRT&gt", ";", "TimeWarner", "OWNS", "CNN", "&", "amp", ";", "They", "are", "CONTRIBUTOR", "to", "HRC"]
# ::lemmas ["report", "on", "SGRT&gt", ";", "TimeWarner", "OWNS", "CNN", "&", "amp", ";", "they", "be", "contributor", "to", "HRC"]
(c10-15 / multi-sentence
        :snt1 (c10-3 / report-01
                     :ARG0 (c10-7 / and
                                  :op1 (c10-12 / publication
                                               :name (c10-1 / name
                                                            :op1 "SGRT"))
                                  :op2 (c10-10 / publication
                                               :name (c10-4 / name
                                                            :op1 "STG"))))
        :snt2 (c10-18 / OWNS-01
                      :ARG0 (c10-14 / person
                                    :name (c10-13 / name
                                                  :op1 "TimeWarner"))
                      :ARG1 (c10-6 / and
                                   :op1 (c10-11 / publication
                                                :name (c10-8 / name
                                                             :op1 "CNN"))
                                   :op2 (c10-16 / publication
                                                :name (c10-2 / name
                                                             :op1 "amp"))))
        :snt3 (c10-5 / contribute-01
                     :ARG0 (c10-0 / they)
                     :ARG2 (c10-9 / organization
                                  :name (c10-17 / name
                                                :op1 "HRC"))))

# ::snt Show Bernie some love!
# ::tokens ["Show", "Bernie", "some", "love", "!"]
# ::lemmas ["Show", "Bernie", "some", "love", "!"]
(c11-2 / show-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-5 / love-01
                    :ARG0 c11-1
                    :quant (c11-0 / some))
       :ARG2 (c11-3 / person
                    :name (c11-4 / name
                                 :op1 "Bernie"))
       :mode imperative)

# ::snt &lt;FASCIST BEHAVIOR
# ::tokens ["&", "lt;FASCIST", "BEHAVIOR"]
# ::lemmas ["&", "lt;fascist", "BEHAVIOR"]
(c13-0 / and
       :op2 (c13-1 / person
                   :name (c13-2 / name
                                :op1 "Beha :op2 ")))

# ::snt I am not a Democrat but if Sanders goes for President, I may vote for him.
# ::tokens ["I", "am", "not", "a", "Democrat", "but", "if", "Sanders", "goes", "for", "President", ",", "I", "may", "vote", "for", "him", "."]
# ::lemmas ["i", "be", "not", "a", "Democrat", "but", "if", "Sanders", "go", "for", "President", ",", "i", "may", "vote", "for", "he", "."]
(c14-12 / contrast-01
        :ARG1 (c14-11 / have-org-role-91
                      :ARG0 (c14-7 / i)
                      :ARG1 (c14-8 / political-party
                                   :name (c14-9 / name
                                                :op1 "Democrat"))
                      :polarity -)
        :ARG2 (c14-2 / possible-01
                     :ARG1 (c14-10 / vote-01
                                   :ARG0 c14-7
                                   :ARG1 (c14-0 / person
                                                :name (c14-1 / name
                                                             :op1 "Sanders")))
                     :condition (c14-3 / go-03
                                       :ARG0 c14-0
                                       :ARG1 (c14-5 / person
                                                    :ARG0-of (c14-6 / have-org-role-91
                                                                    :ARG2 (c14-4 / president))))))

# ::snt Quick poll, registered Dems - Hillary nailed the boys
# ::tokens ["Quick", "poll", ",", "registered", "Dems", "-", "Hillary", "nailed", "the", "boys"]
# ::lemmas ["Quick", "poll", ",", "register", "Dems", "-", "Hillary", "nail", "the", "boy"]
(c15-9 / nail-03
       :ARG0 (c15-8 / person
                    :name (c15-3 / name
                                 :op1 "Hillary"))
       :ARG1 (c15-2 / boy)
       :ARG1-of (c15-7 / say-01
                       :ARG0 (c15-4 / poll-01
                                    :ARG0 (c15-0 / person
                                                 :ARG1-of (c15-1 / register-02)
                                                 :ARG0-of (c15-11 / have-org-role-91
                                                                  :ARG1 (c15-6 / political-party
                                                                               :name (c15-10 / name
                                                                                             :op1 "Democrat"))))
                                    :ARG1-of (c15-5 / quick-02))))

# ::snt ... Might want to report on this.
# ::tokens ["...", "Might", "want", "to", "report", "on", "this", "."]
# ::lemmas ["...", "might", "want", "to", "report", "on", "this", "."]
(c16-3 / possible-01
       :ARG1 (c16-4 / want-01
                    :ARG0 (c16-2 / i)
                    :ARG1 (c16-1 / report-01
                                 :ARG0 c16-2
                                 :ARG1 (c16-0 / this))))

# ::snt They obviously removed it for the technical error.
# ::tokens ["They", "obviously", "removed", "it", "for", "the", "technical", "error", "."]
# ::lemmas ["they", "obviously", "remove", "it", "for", "the", "technical", "error", "."]
(c18-1 / remove-01
       :ARG0 (c18-0 / they)
       :ARG1 (c18-4 / it)
       :ARG1-of (c18-5 / obvious-01)
       :ARG1-of (c18-6 / cause-01
                       :ARG0 (c18-2 / err-01
                                    :mod (c18-3 / technical))))

# ::snt CNN is the epitome of pathetic. You people are full of shit.
# ::tokens ["CNN", "is", "the", "epitome", "of", "pathetic", ".", "You", "people", "are", "full", "of", "shit", "."]
# ::lemmas ["CNN", "be", "the", "epitome", "of", "pathetic", ".", "you", "people", "be", "full", "of", "shit", "."]
(c19-4 / multi-sentence
       :snt1 (c19-1 / epitome-01
                    :ARG1 (c19-7 / publication
                                 :name (c19-6 / name
                                              :op1 "CNN"))
                    :ARG2 (c19-3 / pathetic))
       :snt2 (c19-8 / fill-01
                    :ARG1 (c19-2 / you
                                 :mod (c19-0 / person))
                    :ARG2 (c19-5 / shit)))

# ::snt hey guys why is this not being reported
# ::tokens ["hey", "guys", "why", "is", "this", "not", "being", "reported"]
# ::lemmas ["hey", "guy", "why", "be", "this", "not", "be", "report"]
(c22-4 / say-01
       :ARG1 (c22-6 / cause-01
                    :ARG0 (c22-0 / amr-unknown)
                    :ARG1 (c22-2 / report-01
                                 :ARG1 (c22-1 / this)
                                 :polarity -))
       :ARG2 (c22-3 / guy)
       :mod (c22-5 / hey
                   :mode expressive))

# ::snt So what the fuck is going on?
# ::tokens ["So", "what", "the", "fuck", "is", "going", "on", "?"]
# ::lemmas ["so", "what", "the", "fuck", "be", "go", "on", "?"]
(c23-1 / infer-01
       :ARG1 (c23-0 / amr-unknown
                    :mod (c23-2 / fuck
                                :mode expressive)))

# ::snt Just curious what the Clinton's paid you to take this down?
# ::tokens ["Just", "curious", "what", "the", "Clinton", "'s", "paid", "you", "to", "take", "this", "down", "?"]
# ::lemmas ["just", "curious", "what", "the", "Clinton", "'s", "pay", "you", "to", "take", "this", "down", "?"]
(c25-8 / curious-01
       :ARG0 (c25-0 / thing
                    :ARG1-of (c25-6 / pay-01
                                    :ARG0 (c25-5 / person
                                                 :name (c25-7 / name
                                                              :op1 "Clinton"))
                                    :ARG2 (c25-4 / you)
                                    :ARG3 (c25-2 / take-down-27
                                                 :ARG0 c25-4
                                                 :ARG1 (c25-3 / this))))
       :ARG1 c25-4
       :mod (c25-1 / just))

# ::snt CNN &amp; New York Times spinning for the establishment.
# ::tokens ["CNN", "&", "amp", ";", "New", "York", "Times", "spinning", "for", "the", "establishment", "."]
# ::lemmas ["CNN", "&", "amp", ";", "New", "York", "Times", "spin", "for", "the", "establishment", "."]
(c27-4 / spin-03
       :ARG0 (c27-0 / and
                    :op1 (c27-5 / publication
                                :name (c27-6 / name
                                             :op1 "CNN"))
                    :op2 (c27-3 / publication
                                :name (c27-2 / name
                                             :op1 "New"
                                             :op2 "York"
                                             :op3 "Times")))
       :beneficiary (c27-1 / establishment))

# ::snt Who won, truly? Can you define what "narrative" is for us?
# ::tokens ["Who", "won", ",", "truly", "?", "Can", "you", "define", "what", "\"", "narrative", "\"", "is", "for", "us", "?"]
# ::lemmas ["who", "win", ",", "truly", "?", "can", "you", "define", "what", "\"", "narrative", "\"", "be", "for", "we", "?"]
(c28-4 / multi-sentence
       :snt1 (c28-8 / win-01
                    :ARG0 (c28-0 / amr-unknown)
                    :ARG1-of (c28-1 / true-01))
       :snt2 (c28-6 / possible-01
                    :ARG1 (c28-9 / define-01
                                 :ARG0 (c28-3 / you)
                                 :ARG1 (c28-7 / narrative)
                                 :ARG3 (c28-2 / we))
                    :polarity (c28-5 / amr-unknown)))

# ::snt Really a shame that you would take this down because it doesn't show the results you want..
# ::tokens ["Really", "a", "shame", "that", "you", "would", "take", "this", "down", "because", "it", "does", "n't", "show", "the", "results", "you", "want", ".."]
# ::lemmas ["really", "a", "shame", "that", "you", "would", "take", "this", "down", "because", "it", "do", "not", "show", "the", "result", "you", "want", ".."]
(c29-7 / shame-02
       :ARG0 (c29-1 / take-down-22
                    :ARG0 (c29-5 / you)
                    :ARG1 (c29-3 / this)
                    :ARG1-of (c29-9 / cause-01
                                    :ARG0 (c29-0 / show-01
                                                 :ARG0 c29-3
                                                 :ARG1 (c29-4 / thing
                                                              :ARG2-of (c29-2 / result-01)
                                                              :ARG1-of (c29-8 / want-01
                                                                              :ARG0 c29-5))
                                                 :polarity -)))
       :degree (c29-6 / really))

# ::snt There was only one debate last eve right?
# ::tokens ["There", "was", "only", "one", "debate", "last", "eve", "right", "?"]
# ::lemmas ["there", "be", "only", "one", "debate", "last", "eve", "right", "?"]
(c30-4 / debate-01
       :mod (c30-2 / only)
       :time (c30-1 / eve
                    :mod (c30-3 / last))
       :ARG1-of (c30-0 / request-confirmation-91)
       :quant 1)

# ::snt YESSS!!! IVE BEEN LOOKING ALL DAY. THE MEDIA IS RIGGED !!
# ::tokens ["YESSS", "!", "!", "!", "IVE", "BEEN", "LOOKING", "ALL", "DAY", ".", "THE", "MEDIA", "IS", "RIGGED", "!", "!"]
# ::lemmas ["yesss", "!", "!", "!", "IVE", "been", "look", "all", "DAY", ".", "the", "MEDIA", "be", "RIGGED", "!", "!"]
(c31-4 / multi-sentence
       :snt1 (c31-3 / yes)
       :snt2 (c31-6 / look-01
                    :ARG0 (c31-5 / i)
                    :time (c31-7 / day
                                 :mod (c31-0 / all)))
       :snt3 (c31-1 / Rigge-01
                    :ARG1 (c31-2 / media)
                    :mode expressive))

# ::snt CNN maybe keep your polls up, even if you're unhappy with the outcome?
# ::tokens ["CNN", "maybe", "keep", "your", "polls", "up", ",", "even", "if", "you", "'re", "unhappy", "with", "the", "outcome", "?"]
# ::lemmas ["CNN", "maybe", "keep", "your", "poll", "up", ",", "even", "if", "you", "be", "unhappy", "with", "the", "outcome", "?"]
(c32-7 / possible-01
       :ARG1 (c32-3 / keep-02
                    :ARG0 (c32-5 / publication
                                 :name (c32-8 / name
                                              :op1 "CNN"))
                    :ARG1 (c32-1 / poll-01
                                 :ARG0 (c32-4 / you))
                    :ARG2 (c32-6 / up)
                    :concession (c32-2 / even-if
                                       :op1 (c32-10 / happy-01
                                                    :ARG0 (c32-9 / outcome)
                                                    :ARG1 c32-4
                                                    :polarity -)))
       :polarity (c32-0 / amr-unknown))

# ::snt shame on you
# ::tokens ["shame", "on", "you"]
# ::lemmas ["shame", "on", "you"]
(c33-1 / shame-01
       :ARG1 (c33-0 / you))

# ::snt Whadup CNN?
# ::tokens ["Whadup", "CNN", "?"]
# ::lemmas ["whadup", "CNN", "?"]
(c34-1 / whadup-00
       :ARG1 (c34-2 / publication
                    :name (c34-3 / name
                                 :op1 "CNN"))
       :polarity (c34-0 / amr-unknown))

# ::snt Must be nice to be funded by Time Warner. Top donors
# ::tokens ["Must", "be", "nice", "to", "be", "funded", "by", "Time", "Warner", ".", "Top", "donors"]
# ::lemmas ["must", "be", "nice", "to", "be", "fund", "by", "Time", "Warner", ".", "top", "donor"]
(c35-3 / multi-sentence
       :snt1 (c35-6 / obligate-01
                    :ARG2 (c35-4 / nice-01
                                 :ARG1 (c35-7 / fund-01
                                              :ARG0 (c35-8 / company
                                                           :name (c35-1 / name
                                                                        :op1 "Time"
                                                                        :op2 "Warner")))))
       :snt2 (c35-5 / person
                    :ARG0-of (c35-2 / donate-01)
                    :mod (c35-0 / top)))

# ::snt :Lol, The people on chan voted him as a joke.
# ::tokens [":", "Lol", ",", "The", "people", "on", "chan", "voted", "him", "as", "a", "joke", "."]
# ::lemmas [":", "Lol", ",", "the", "people", "on", "chan", "vote", "he", "as", "a", "joke", "."]
(c36-4 / vote-01
       :ARG0 (c36-2 / person
                    :location (c36-7 / country
                                     :name (c36-3 / name
                                                  :op1 "China")))
       :ARG1 (c36-6 / he)
       :ARG3 (c36-1 / joke-01)
       :mod (c36-5 / laugh-01
                   :manner (c36-0 / loud)
                   :mode expressive))

# ::snt Seems like they didn't like the outcome
# ::tokens ["Seems", "like", "they", "did", "n't", "like", "the", "outcome"]
# ::lemmas ["seem", "like", "they", "do", "not", "like", "the", "outcome"]
(c37-2 / seem-01
       :ARG1 (c37-3 / dislike-01
                    :ARG0 (c37-1 / they)
                    :ARG1 (c37-0 / outcome)))

# ::snt but Bernie isn't paying them and Hillary is, so Hillary clearly won
# ::tokens ["but", "Bernie", "is", "n't", "paying", "them", "and", "Hillary", "is", ",", "so", "Hillary", "clearly", "won"]
# ::lemmas ["but", "Bernie", "be", "not", "pay", "they", "and", "Hillary", "be", ",", "so", "Hillary", "clearly", "win"]
(c38-11 / contrast-01
        :ARG2 (c38-6 / cause-01
                     :ARG0 (c38-0 / and
                                  :op1 (c38-8 / pay-01
                                              :ARG0 (c38-5 / person
                                                           :name (c38-9 / name
                                                                        :op1 "Bernie"))
                                              :ARG3 (c38-2 / they)
                                              :polarity -)
                                  :op2 (c38-1 / pay-01
                                              :ARG0 (c38-7 / person
                                                           :name (c38-4 / name
                                                                        :op1 "Hillary"))
                                              :ARG3 c38-2))
                     :ARG1 (c38-10 / win-01
                                   :ARG0 c38-7
                                   :ARG1-of (c38-3 / clear-06))))

# ::snt STOP DENYING THE PEOPLES CHAMPION!!!!
# ::tokens ["STOP", "DENYING", "THE", "PEOPLES", "CHAMPION", "!", "!", "!", "!"]
# ::lemmas ["stop", "deny", "the", "PEOPLES", "CHAMPION", "!", "!", "!", "!"]
(c39-3 / stop-01
       :ARG0 (c39-1 / you)
       :ARG1 (c39-0 / deny-01
                    :ARG1 (c39-5 / custody
                                 :poss (c39-2 / country
                                              :name (c39-4 / name
                                                           :op1 "Palestine"))))
       :mode imperative)

# ::snt The fix is in.
# ::tokens ["The", "fix", "is", "in", "."]
# ::lemmas ["the", "fix", "be", "in", "."]
(c41-1 / fix-02
       :location (c41-0 / inside))

# ::snt more polls that were disregarded by CNN although it was their own
# ::tokens ["more", "polls", "that", "were", "disregarded", "by", "CNN", "although", "it", "was", "their", "own"]
# ::lemmas ["more", "poll", "that", "be", "disregard", "by", "CNN", "although", "it", "be", "their", "own"]
(c43-5 / disregarded-01
       :ARG0 (c43-2 / publication
                    :name (c43-3 / name
                                 :op1 "CNN"))
       :ARG1 (c43-1 / poll-01
                    :quant (c43-0 / more))
       :concession (c43-4 / own-01
                          :ARG0 c43-2
                          :ARG1 c43-1))

# ::snt stop lying CNN
# ::tokens ["stop", "lying", "CNN"]
# ::lemmas ["stop", "lie", "CNN"]
(c44-2 / say-01
       :ARG0 (c44-1 / i)
       :ARG1 (c44-0 / stop-01
                    :ARG0 (c44-3 / publication
                                 :name (c44-4 / name
                                              :op1 "CNN"))
                    :ARG1 (c44-5 / lie-08
                                 :ARG0 c44-3))
       :ARG2 c44-3)

# ::snt how do i retweet this
# ::tokens ["how", "do", "i", "retweet", "this"]
# ::lemmas ["how", "do", "i", "retweet", "this"]
(c45-3 / retribute-01
       :ARG0 (c45-2 / i)
       :ARG1 (c45-1 / this)
       :manner (c45-0 / amr-unknown))

# ::snt Yeah what the hell,
# ::tokens ["Yeah", "what", "the", "hell", ","]
# ::lemmas ["yeah", "what", "the", "hell", ","]
(c46-1 / thing
       :mod (c46-2 / hell
                   :mode expressive)
       :mod (c46-0 / yeah))

# ::snt just wow cnn
# ::tokens ["just", "wow", "cnn"]
# ::lemmas ["just", "wow", "cnn"]
(c47-1 / wow
       :mod (c47-3 / just)
       :source (c47-2 / publication
                      :name (c47-0 / name
                                   :op1 "CNN"))
       :mode expressive)

# ::snt Time Warner supports Hilary Clinton and provides a lot of money for her campaign.
# ::tokens ["Time", "Warner", "supports", "Hilary", "Clinton", "and", "provides", "a", "lot", "of", "money", "for", "her", "campaign", "."]
# ::lemmas ["Time", "Warner", "support", "Hilary", "Clinton", "and", "provide", "a", "lot", "of", "money", "for", "her", "campaign", "."]
(c48-0 / and
       :op1 (c48-5 / support-01
                   :ARG0 (c48-9 / company
                                :name (c48-7 / name
                                             :op1 "Time"
                                             :op2 "Warner"))
                   :ARG1 (c48-6 / person
                                :name (c48-1 / name
                                             :op1 "Hilary"
                                             :op2 "Clinton")))
       :op2 (c48-2 / provide-01
                   :ARG0 c48-9
                   :ARG1 (c48-3 / money
                                :quant (c48-8 / lot))
                   :ARG2 (c48-4 / campaign-01
                                :ARG0 c48-6)))

# ::snt Gee, i wonder if CNN benefits at all if Hillary does good?
# ::tokens ["Gee", ",", "i", "wonder", "if", "CNN", "benefits", "at", "all", "if", "Hillary", "does", "good", "?"]
# ::lemmas ["Gee", ",", "i", "wonder", "if", "CNN", "benefit", "at", "all", "if", "Hillary", "do", "good", "?"]
(c49-10 / wonder-01
        :ARG0 (c49-6 / i)
        :ARG1 (c49-1 / benefit-01
                     :ARG0 (c49-8 / publication
                                  :name (c49-9 / name
                                               :op1 "CNN"))
                     :mod (c49-0 / at-all)
                     :condition (c49-11 / do-02
                                        :ARG0 (c49-3 / person
                                                     :name (c49-2 / name
                                                                  :op1 "Hillary"))
                                        :ARG1 (c49-4 / good-02)))
        :polarity (c49-7 / amr-unknown)
        :mod (c49-5 / gee
                    :mode expressive))
