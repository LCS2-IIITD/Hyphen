# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c1-0 / amr-empty)

# ::snt if Steve's father stayed around, Steve could have become a suicide bomber!
# ::tokens ["if", "Steve", "'s", "father", "stayed", "around", ",", "Steve", "could", "have", "become", "a", "suicide", "bomber", "!"]
# ::lemmas ["if", "Steve", "'s", "father", "stay", "around", ",", "Steve", "could", "have", "become", "a", "suicide", "bomber", "!"]
(c2-8 / possible-01
      :ARG1 (c2-3 / become-01
                  :ARG1 (c2-5 / person
                              :name (c2-9 / name
                                          :op1 "Steve"))
                  :ARG2 (c2-1 / person
                              :ARG0-of (c2-4 / bomb-01
                                             :mod (c2-7 / suicide))))
      :condition (c2-0 / stay-01
                       :ARG1 (c2-6 / person
                                   :ARG0-of (c2-11 / have-rel-role-91
                                                   :ARG1 c2-5
                                                   :ARG2 (c2-10 / father)))
                       :location (c2-2 / around)))

# ::snt let them stay in Syria !
# ::tokens ["let", "them", "stay", "in", "Syria", "!"]
# ::lemmas ["let", "they", "stay", "in", "Syria", "!"]
(c3-4 / let-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-2 / stay-01
                  :ARG1 (c3-0 / they)
                  :location (c3-5 / country
                                  :name (c3-3 / name
                                              :op1 "Syria")))
      :mode imperative)

# ::snt Steve's father abandoned him &amp; Steve was adopted by American couple, his adoptive parents! Syrians R asset to Syria, let them
# ::tokens ["Steve", "'s", "father", "abandoned", "him", "&", "amp", ";", "Steve", "was", "adopted", "by", "American", "couple", ",", "his", "adoptive", "parents", "!", "Syrians", "R", "asset", "to", "Syria", ",", "let", "them"]
# ::lemmas ["Steve", "'s", "father", "abandon", "he", "&", "amp", ";", "Steve", "be", "adopt", "by", "American", "couple", ",", "his", "adoptive", "parent", "!", "Syrians", "r", "asset", "to", "Syria", ",", "let", "they"]
(c4-22 / multi-sentence
       :snt1 (c4-12 / abandon-01
                    :ARG0 (c4-19 / person
                                 :ARG0-of (c4-9 / have-rel-role-91
                                                :ARG1 (c4-15 / person
                                                             :name (c4-2 / name
                                                                         :op1 "Steve"))
                                                :ARG2 (c4-3 / father)))
                    :ARG1 (c4-11 / and
                                 :op1 c4-15
                                 :op2 (c4-21 / person
                                             :name (c4-5 / name
                                                         :op1 "amp"))))
       :snt2 (c4-1 / adopt-01
                   :ARG0 (c4-10 / couple
                                :mod (c4-16 / country
                                            :name (c4-20 / name
                                                         :op1 "America"))
                                :ARG1-of (c4-4 / mean-01
                                               :ARG2 (c4-17 / person
                                                            :ARG0-of (c4-18 / have-rel-role-91
                                                                            :ARG1 c4-15
                                                                            :ARG2 (c4-23 / parent))
                                                            :ARG0-of (c4-7 / adopt-01
                                                                           :ARG1 c4-15))))
                   :ARG1 c4-15)
       :snt3 (c4-8 / let-01
                   :ARG0 (c4-13 / person
                                :mod (c4-6 / country
                                           :name (c4-14 / name
                                                        :op1 "Syria")))
                   :ARG1 (c4-0 / asset
                               :beneficiary c4-6)))

# ::snt : "The father of Steve Jobs, the ground-breaking founder of Apple, was a refugee" in United Kingdom
# ::tokens [":", "\"", "The", "father", "of", "Steve", "Jobs", ",", "the", "ground", "-", "breaking", "founder", "of", "Apple", ",", "was", "a", "refugee", "\"", "in", "United", "Kingdom"]
# ::lemmas [":", "\"", "the", "father", "of", "Steve", "Jobs", ",", "the", "ground", "-", "break", "founder", "of", "Apple", ",", "be", "a", "refugee", "\"", "in", "United", "Kingdom"]
(c5-0 / refugee
      :location (c5-11 / country
                       :name (c5-7 / name
                                   :op1 "United"
                                   :op2 "Kingdom"))
      :domain (c5-6 / person
                    :ARG0-of (c5-10 / have-rel-role-91
                                    :ARG1 (c5-4 / person
                                                :name (c5-3 / name
                                                            :op1 "Steve"
                                                            :op2 "Jobs")
                                                :ARG0-of (c5-9 / found-01
                                                               :ARG1 (c5-5 / company
                                                                           :name (c5-8 / name
                                                                                       :op1 "Apple"))
                                                               :ARG0-of (c5-2 / break-ground-28)))
                                    :ARG2 (c5-1 / father))))

# ::snt wikipedia says his father was sent to study to USA and Steve's father's parents were not poor.
# ::tokens ["wikipedia", "says", "his", "father", "was", "sent", "to", "study", "to", "USA", "and", "Steve", "'s", "father", "'s", "parents", "were", "not", "poor", "."]
# ::lemmas ["wikipedia", "say", "his", "father", "be", "send", "to", "study", "to", "USA", "and", "Steve", "'s", "father", "'s", "parent", "be", "not", "poor", "."]
(c6-8 / say-01
      :ARG0 (c6-9 / publication
                  :name (c6-10 / name
                               :op1 "wikipedia"))
      :ARG1 (c6-0 / and
                  :op1 (c6-1 / send-03
                             :ARG1 (c6-4 / person
                                         :ARG0-of (c6-14 / have-rel-role-91
                                                         :ARG1 (c6-2 / person
                                                                     :name (c6-3 / name
                                                                                 :op1 "Steve"))
                                                         :ARG2 (c6-13 / father)))
                             :ARG2 (c6-11 / study-01
                                          :ARG0 c6-4
                                          :location (c6-15 / country
                                                           :name (c6-12 / name
                                                                        :op1 "USA"))))
                  :op2 (c6-6 / poor
                             :domain (c6-5 / person
                                           :ARG0-of (c6-7 / have-rel-role-91
                                                          :ARG1 c6-2
                                                          :ARG2 c6-13))
                             :polarity -)))

# ::snt we need more of these type of refugees to Finland. And we need a more open mind.
# ::tokens ["we", "need", "more", "of", "these", "type", "of", "refugees", "to", "Finland", ".", "And", "we", "need", "a", "more", "open", "mind", "."]
# ::lemmas ["we", "need", "more", "of", "these", "type", "of", "refugee", "to", "Finland", ".", "and", "we", "need", "a", "more", "open", "mind", "."]
(c7-7 / multi-sentence
      :snt1 (c7-9 / need-01
                  :ARG0 (c7-13 / we)
                  :ARG1 (c7-2 / refugee
                              :mod (c7-1 / type
                                         :mod (c7-4 / this))
                              :ARG1-of (c7-15 / have-quant-91
                                              :ARG3 (c7-3 / more))
                              :destination (c7-16 / country
                                                  :name (c7-5 / name
                                                              :op1 "Finland"))))
      :snt2 (c7-0 / and
                  :op2 (c7-12 / need-01
                              :ARG0 (c7-6 / we)
                              :ARG1 (c7-10 / mind
                                           :ARG1-of (c7-8 / have-degree-91
                                                          :ARG2 (c7-11 / open-05
                                                                       :ARG1 c7-10)
                                                          :ARG3 (c7-14 / more))))))

# ::snt Refugees made the USA great.
# ::tokens ["Refugees", "made", "the", "USA", "great", "."]
# ::lemmas ["refugee", "make", "the", "USA", "great", "."]
(c9-2 / make-02
      :ARG0 (c9-0 / refugee)
      :ARG1 (c9-1 / great
                  :domain (c9-4 / country
                                :name (c9-3 / name
                                            :op1 "USA"))))

# ::snt /Earnings Announcement Soon$MXL MSNBuyTarget18-SOROSBuysRead&amproductsrunALLVideoL2
# ::tokens ["/Earnings", "Announcement", "Soon$MXL", "MSNBuyTarget18", "-", "SOROSBuysRead&amproductsrunALLVideoL2"]
# ::lemmas ["/earnings", "announcement", "Soon$MXL", "msnbuytarget18", "-", "SOROSBuysRead&amproductsrunALLVideoL2"]
(c10-0 / announce-01
       :ARG1 (c10-2 / earnings)
       :time (c10-6 / soon)
       :ARG3-of (c10-3 / buy-01
                       :ARG1 (c10-10 / and
                                     :op1 (c10-7 / product
                                                 :name (c10-8 / name
                                                              :op1 "MXL"))
                                     :op2 (c10-5 / product
                                                 :name (c10-4 / name
                                                              :op1 "Target18-SOROSBuys"))
                                     :op3 (c10-1 / product
                                                 :name (c10-9 / name
                                                              :op1 "Read&amproductsrunALLVideoL2")))))

# ::snt /EarningsAnnouncement Soon$MXL MSNBuyTarget18-SOROSBuyRead&amproductsrunALLVideo
# ::tokens ["/EarningsAnnouncement", "Soon$MXL", "MSNBuyTarget18", "-", "SOROSBuyRead&amproductsrunALLVideo"]
# ::lemmas ["/earningsannouncement", "Soon$MXL", "MSNBuyTarget18", "-", "sorosbuyread&amproductsrunallvideo"]
(c11-0 / announce-01
       :ARG1 (c11-1 / earn-01)
       :time (c11-5 / soon)
       :ARG3-of (c11-2 / buy-01
                       :ARG1 (c11-8 / and
                                    :op1 (c11-6 / product
                                                :name (c11-7 / name
                                                             :op1 "MXL"))
                                    :op2 (c11-4 / product
                                                :name (c11-3 / name
                                                             :op1 "Target18-SOROSBuyRead&amproductsrunALLVideo")))))

# ::snt the "biological" father; the father is the one who loves his children
# ::tokens ["the", "\"", "biological", "\"", "father", ";", "the", "father", "is", "the", "one", "who", "loves", "his", "children"]
# ::lemmas ["the", "\"", "biological", "\"", "father", ";", "the", "father", "be", "the", "one", "who", "love", "his", "child"]
(c12-3 / multi-sentence
       :snt1 (c12-8 / person
                    :ARG0-of (c12-12 / have-rel-role-91
                                     :ARG2 (c12-11 / father))
                    :mod (c12-2 / biologic))
       :snt2 (c12-4 / person
                    :ARG0-of (c12-5 / have-rel-role-91
                                    :ARG1 (c12-0 / person)
                                    :ARG2 (c12-1 / father))
                    :ARG0-of (c12-10 / love-01
                                     :ARG1 (c12-6 / person
                                                  :ARG0-of (c12-7 / have-rel-role-91
                                                                  :ARG1 c12-4
                                                                  :ARG2 (c12-13 / child))))
                    :domain (c12-9 / father)))

# ::snt Louis Farrakhan loved Syria &amp; Lebanon but not Jordan or Israel maybe cause KKK was tramping there getting donations with Al-Q.
# ::tokens ["Louis", "Farrakhan", "loved", "Syria", "&", "amp", ";", "Lebanon", "but", "not", "Jordan", "or", "Israel", "maybe", "cause", "KKK", "was", "tramping", "there", "getting", "donations", "with", "Al", "-", "Q."]
# ::lemmas ["Louis", "Farrakhan", "love", "Syria", "&", "amp", ";", "Lebanon", "but", "not", "Jordan", "or", "Israel", "maybe", "cause", "KKK", "be", "tramp", "there", "get", "donation", "with", "Al", "-", "Q."]
(c13-17 / multi-sentence
        :snt1 (c13-8 / love-01
                     :ARG0 (c13-14 / person
                                   :name (c13-2 / name
                                                :op1 "Louis"
                                                :op2 "Farrakhan"))
                     :ARG1 (c13-10 / and
                                   :op1 (c13-9 / country
                                               :name (c13-5 / name
                                                            :op1 "Syria"))
                                   :op2 (c13-13 / country
                                                :name (c13-15 / name
                                                              :op1 "Lebanon"))))
        :snt2 (c13-12 / possible-01
                      :ARG1 (c13-4 / cause-01
                                   :ARG0 (c13-0 / tramp-01
                                                :ARG0 (c13-18 / organization
                                                              :name (c13-11 / name
                                                                            :op1 "KKK"))
                                                :ARG1 (c13-7 / get-01
                                                             :ARG0 c13-18
                                                             :ARG1 (c13-1 / thing
                                                                          :ARG1-of (c13-16 / donate-01))
                                                             :instrument c13-18
                                                             :name (c13-3 / name
                                                                          :op1 "Al-Q"))
                                                :polarity -)
                                   :location (c13-6 / there))))

# ::snt what's the point?
# ::tokens ["what", "'s", "the", "point", "?"]
# ::lemmas ["what", "be", "the", "point", "?"]
(c14-1 / point-03
       :ARG2 (c14-0 / amr-unknown))

# ::snt so are we expecting 's of apple like companies in yrs time? What's ur argument?
# ::tokens ["so", "are", "we", "expecting", "'s", "of", "apple", "like", "companies", "in", "yrs", "time", "?", "What", "'s", "ur", "argument", "?"]
# ::lemmas ["so", "be", "we", "expect", "be", "of", "apple", "like", "company", "in", "yrs", "time", "?", "what", "be", "ur", "argument", "?"]
(c15-8 / multi-sentence
       :snt1 (c15-5 / expect-01
                    :ARG0 (c15-12 / we)
                    :ARG1 (c15-13 / company
                                  :ARG1-of (c15-4 / resemble-01
                                                  :ARG2 (c15-0 / apple)))
                    :time (c15-10 / after
                                  :op1 (c15-11 / now)
                                  :quant (c15-2 / temporal-quantity
                                                :unit (c15-7 / year)
                                                :quant 1))
                    :polarity (c15-3 / amr-unknown))
       :snt2 (c15-9 / argue-01
                    :ARG0 (c15-6 / you)
                    :ARG1 (c15-1 / amr-unknown)))

# ::snt So what? The father of was emigrant from
# ::tokens ["So", "what", "?", "The", "father", "of", "was", "emigrant", "from"]
# ::lemmas ["so", "what", "?", "the", "father", "of", "be", "emigrant", "from"]
(c16-1 / multi-sentence
       :snt1 (c16-4 / so
                    :mod (c16-0 / amr-unknown))
       :snt2 (c16-5 / person
                    :ARG0-of (c16-3 / immigrate-01
                                    :ARG2 (c16-9 / country
                                                 :name (c16-6 / name
                                                              :op1 "America")))
                    :ARG0-of (c16-8 / have-rel-role-91
                                    :ARG1 (c16-2 / person)
                                    :ARG2 (c16-7 / father))))

# ::snt was only about Dreams of My Father Obama's Book about Obama not Daddies esp Jobs daddy who could be a Muslim as Obama Daddy.
# ::tokens ["was", "only", "about", "Dreams", "of", "My", "Father", "Obama", "'s", "Book", "about", "Obama", "not", "Daddies", "esp", "Jobs", "daddy", "who", "could", "be", "a", "Muslim", "as", "Obama", "Daddy", "."]
# ::lemmas ["be", "only", "about", "Dreams", "of", "my", "Father", "Obama", "'s", "Book", "about", "Obama", "not", "daddy", "esp", "Jobs", "daddy", "who", "could", "be", "a", "Muslim", "as", "Obama", "Daddy", "."]
(c17-15 / concern-02
        :ARG1 (c17-4 / book
                     :name (c17-11 / name
                                   :op1 "Dreams"
                                   :op2 "of"
                                   :op3 "Obama")
                     :source (c17-10 / person
                                     :name (c17-5 / name
                                                  :op1 "My"
                                                  :op2 "Father"
                                                  :op3 "Obama"))
                     :topic (c17-7 / person
                                   :ARG0-of (c17-14 / have-rel-role-91
                                                    :ARG1 (c17-0 / person
                                                                 :name (c17-13 / name
                                                                               :op1 "Obama"))
                                                    :ARG2 (c17-6 / dad))
                                   :mod (c17-2 / religious-group
                                               :name (c17-3 / name
                                                            :op1 "Muslim"))
                                   :ARG1-of (c17-8 / possible-01)
                                   :domain c17-0
                                   :ARG0-of (c17-9 / have-rel-role-91
                                                   :ARG1 c17-0
                                                   :ARG2 (c17-1 / dad))
                                   :polarity -))
        :mod (c17-12 / only))

# ::snt The plight of refugees needs to be addressed and taken serious by all countries around the world. We must not be short sighted
# ::tokens ["The", "plight", "of", "refugees", "needs", "to", "be", "addressed", "and", "taken", "serious", "by", "all", "countries", "around", "the", "world", ".", "We", "must", "not", "be", "short", "sighted"]
# ::lemmas ["the", "plight", "of", "refugee", "need", "to", "be", "address", "and", "take", "serious", "you", "all", "country", "around", "the", "world", ".", "we", "must", "not", "be", "short", "sighted"]
(c18-6 / multi-sentence
       :snt1 (c18-11 / obligate-01
                     :ARG2 (c18-8 / sight-01
                                  :ARG0 (c18-13 / we)
                                  :ARG1-of (c18-0 / short-07)
                                  :polarity -))
       :snt2 (c18-9 / need-01
                    :ARG1 (c18-1 / and
                                 :op1 (c18-15 / address-02
                                              :ARG0 (c18-14 / country
                                                            :mod (c18-2 / all)
                                                            :location (c18-7 / around
                                                                             :op1 (c18-5 / world)))
                                              :ARG1 (c18-10 / plight
                                                            :poss (c18-4 / refugee)))
                                 :op2 (c18-3 / take-04
                                             :ARG0 c18-14
                                             :ARG1 c18-10
                                             :ARG2 (c18-12 / serious-02
                                                           :ARG1 c18-10)))))

# ::snt why specifically Muslim refugees? the logic about solving homelessness in America makes sense; but why not all?
# ::tokens ["why", "specifically", "Muslim", "refugees", "?", "the", "logic", "about", "solving", "homelessness", "in", "America", "makes", "sense", ";", "but", "why", "not", "all", "?"]
# ::lemmas ["why", "specifically", "Muslim", "refugee", "?", "the", "logic", "about", "solve", "homelessness", "in", "America", "make", "sense", ";", "but", "why", "not", "all", "?"]
(c19-6 / multi-sentence
       :snt1 (c19-15 / cause-01
                     :ARG0 (c19-0 / amr-unknown)
                     :ARG1 (c19-3 / refugee
                                  :mod (c19-8 / religious-group
                                              :name (c19-11 / name
                                                            :op1 "Muslim"))
                                  :manner (c19-10 / specific-02)))
       :snt2 (c19-1 / sense-02
                    :ARG1 (c19-13 / logic
                                  :topic (c19-12 / solve-01
                                                 :ARG1 (c19-14 / homelessness
                                                               :location (c19-7 / country
                                                                                :name (c19-5 / name
                                                                                             :op1 "America")))))
                    :concession (c19-4 / cause-01
                                       :ARG0 (c19-9 / amr-unknown)
                                       :ARG1 (c19-2 / all
                                                    :polarity -))))

# ::snt No America has an ongoing immigration issue with Central America already complicating the politic.
# ::tokens ["No", "America", "has", "an", "ongoing", "immigration", "issue", "with", "Central", "America", "already", "complicating", "the", "politic", "."]
# ::lemmas ["no", "America", "have", "an", "ongoing", "immigration", "issue", "with", "Central", "America", "already", "complicate", "the", "politic", "."]
(c20-3 / have-03
       :ARG0 (c20-8 / country
                    :name (c20-5 / name
                                 :op1 "America"))
       :ARG1 (c20-4 / issue-02
                    :ARG0 (c20-7 / immigrate-01)
                    :ARG1 c20-8
                    :ARG1-of (c20-1 / go-on-15)
                    :ARG0-of (c20-2 / complicate-01
                                    :ARG1 (c20-6 / politic)
                                    :time (c20-0 / already)))
       :polarity -)

# ::snt very nice
# ::tokens ["very", "nice"]
# ::lemmas ["very", "nice"]
(c21-1 / nice-01
       :degree (c21-0 / very))

# ::snt klik dan main games event mini games trbaru berhadiah pluhan juta hanya di
# ::tokens ["klik", "dan", "main", "games", "event", "mini", "games", "trbaru", "berhadiah", "pluhan", "juta", "hanya", "di"]
# ::lemmas ["klik", "dan", "main", "game", "event", "mini", "games", "trbaru", "berhadiah", "pluhan", "juta", "hanya", "di"]
(c22-5 / multi-sentence
       :snt1 (c22-0 / and
                    :op1 (c22-6 / game
                                :mod (c22-2 / main))
                    :op2 (c22-4 / game
                                :mod (c22-11 / mini)))
       :snt2 (c22-9 / say-01
                    :ARG0 (c22-8 / i)
                    :ARG1 (c22-3 / bahhadiah
                                 :ARG0-of (c22-10 / pluhan-01
                                                  :ARG1 (c22-1 / juta)))
                    :ARG2 (c22-7 / person
                                 :name (c22-12 / name
                                               :op1 "Trabu")))
       :snt3 (c22-13 / hanya
                     :mode expressive))

# ::snt that was another era-your agenda be showing
# ::tokens ["that", "was", "another", "era", "-", "your", "agenda", "be", "showing"]
# ::lemmas ["that", "be", "another", "era", "-", "your", "agenda", "be", "show"]
(c23-2 / era
       :mod (c23-0 / another)
       :domain (c23-1 / that)
       :ARG0-of (c23-4 / show-01
                       :ARG1 (c23-5 / agenda
                                    :poss (c23-3 / you))))

# ::snt Good one less terrorist to kill
# ::tokens ["Good", "one", "less", "terrorist", "to", "kill"]
# ::lemmas ["good", "one", "less", "terrorist", "to", "kill"]
(c24-0 / kill-01
       :ARG1 (c24-2 / terrorist
                    :quant (c24-1 / less
                                  :quant 1)
                    :ARG1-of (c24-3 / good-02)))

# ::snt And?
# ::tokens ["And", "?"]
# ::lemmas ["and", "?"]
(c25-0 / and
       :polarity (c25-1 / amr-unknown))
