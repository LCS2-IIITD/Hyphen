# ::snt When will Europe and the rest of thus f....d up world understand, Islam is the enemy. Not Extremism
# ::tokens ["When", "will", "Europe", "and", "the", "rest", "of", "thus", "f", "....", "d", "up", "world", "understand", ",", "Islam", "is", "the", "enemy", ".", "Not", "Extremism"]
# ::lemmas ["when", "will", "Europe", "and", "the", "rest", "of", "thus", "f", "....", "d", "up", "world", "understand", ",", "Islam", "be", "the", "enemy", ".", "not", "Extremism"]
(c1-4 / multi-sentence
      :snt1 (c1-6 / understand-01
                  :ARG0 (c1-0 / and
                              :op1 (c1-11 / continent
                                          :name (c1-8 / name
                                                      :op1 "Europe"))
                              :op2 (c1-1 / rest
                                         :part-of (c1-10 / world)))
                  :ARG1 (c1-2 / enemy
                              :domain (c1-5 / religious-group
                                            :name (c1-3 / name
                                                        :op1 "Islam")))
                  :time (c1-7 / amr-unknown))
      :snt2 (c1-9 / Extremism
                  :polarity -))

# ::snt Round them all up and deport these rats to the desert.
# ::tokens ["Round", "them", "all", "up", "and", "deport", "these", "rats", "to", "the", "desert", "."]
# ::lemmas ["round", "they", "all", "up", "and", "deport", "these", "rat", "to", "the", "desert", "."]
(c2-0 / and
      :op1 (c2-3 / round-up-02
                 :ARG0 (c2-6 / you)
                 :ARG1 (c2-1 / they
                             :mod (c2-8 / all))
                 :mode imperative)
      :op2 (c2-4 / deport-01
                 :ARG0 c2-6
                 :ARG1 (c2-7 / rat
                             :mod (c2-5 / this))
                 :destination (c2-2 / desert)
                 :mode imperative))

# ::snt report now dead in Paris. Muslims set off suicide bombs &amp; went into the theater balcony &amp; shot down people
# ::tokens ["report", "now", "dead", "in", "Paris", ".", "Muslims", "set", "off", "suicide", "bombs", "&", "amp", ";", "went", "into", "the", "theater", "balcony", "&", "amp", ";", "shot", "down", "people"]
# ::lemmas ["report", "now", "dead", "in", "Paris", ".", "Muslims", "set", "off", "suicide", "bomb", "&", "amp", ";", "go", "into", "the", "theater", "balcony", "&", "amp", ";", "shoot", "down", "people"]
(c3-8 / multi-sentence
      :snt1 (c3-3 / report-01
                  :ARG1 (c3-5 / die-01
                              :time (c3-13 / now)
                              :location (c3-17 / city
                                               :name (c3-6 / name
                                                           :op1 "Paris"))))
      :snt2 (c3-0 / and
                  :op1 (c3-12 / set-off-05
                              :ARG0 (c3-14 / person
                                           :mod (c3-11 / religious-group
                                                       :name (c3-16 / name
                                                                    :op1 "Muslim")))
                              :ARG1 (c3-4 / bomb
                                          :mod (c3-1 / suicide)))
                  :op2 (c3-9 / go-02
                             :ARG0 c3-14
                             :ARG4 (c3-7 / balcony
                                         :mod (c3-2 / theater)))
                  :op3 (c3-15 / shoot-down-05
                              :ARG0 c3-14
                              :ARG1 (c3-10 / person))))

# ::snt Hey, , your guests are here.
# ::tokens ["Hey", ",", ",", "your", "guests", "are", "here", "."]
# ::lemmas ["hey", ",", ",", "your", "guest", "be", "here", "."]
(c4-0 / be-located-at-91
      :ARG1 (c4-2 / guest
                  :poss (c4-1 / you))
      :ARG2 (c4-4 / here)
      :mod (c4-3 / hey
                 :mode expressive))

# ::snt I don't really care which.. they don't belong here, the lefties will regret this.
# ::tokens ["I", "do", "n't", "really", "care", "which", "..", "they", "do", "n't", "belong", "here", ",", "the", "lefties", "will", "regret", "this", "."]
# ::lemmas ["i", "do", "not", "really", "care", "which", "..", "they", "do", "not", "belong", "here", ",", "the", "lefty", "will", "regret", "this", "."]
(c5-4 / multi-sentence
      :snt1 (c5-11 / care-01
                   :ARG0 (c5-6 / i)
                   :ARG1 (c5-0 / amr-unknown)
                   :ARG1-of (c5-2 / real-04)
                   :polarity -)
      :snt2 (c5-7 / and
                  :op1 (c5-3 / belong-01
                             :ARG0 (c5-1 / they)
                             :ARG1 (c5-10 / here)
                             :polarity -)
                  :op2 (c5-5 / regret-01
                             :ARG0 (c5-8 / person
                                         :ARG1-of (c5-9 / left-19))
                             :ARG1 c5-3)))

# ::snt So sick of reading this type of stuff, when is anyone going to act.Why are these people allowed to walk over us
# ::tokens ["So", "sick", "of", "reading", "this", "type", "of", "stuff", ",", "when", "is", "anyone", "going", "to", "act", ".", "Why", "are", "these", "people", "allowed", "to", "walk", "over", "us"]
# ::lemmas ["so", "sick", "of", "read", "this", "type", "of", "stuff", ",", "when", "be", "anyone", "go", "to", "act", ".", "why", "be", "these", "people", "allow", "to", "walk", "over", "we"]
(c6-8 / multi-sentence
      :snt1 (c6-10 / sick-04
                   :ARG0 (c6-4 / read-01
                               :ARG1 (c6-0 / stuff
                                           :mod (c6-2 / type
                                                      :mod (c6-5 / this))))
                   :ARG1 (c6-1 / anyone)
                   :degree (c6-11 / so))
      :snt2 (c6-16 / act-01
                   :ARG0 c6-1)
      :time (c6-3 / amr-unknown)
      :snt3 (c6-9 / allow-01
                  :ARG1 (c6-14 / walk-01
                               :ARG0 (c6-12 / person
                                            :mod (c6-6 / this))
                               :ARG2 (c6-13 / over
                                            :op1 (c6-7 / we)))
                  :ARG1-of (c6-15 / cause-01
                                  :ARG0 c6-3)))

# ::snt Idiot!
# ::tokens ["Idiot", "!"]
# ::lemmas ["Idiot", "!"]
(c9-0 / idiot)

# ::snt So you know this photo is from , right?
# ::tokens ["So", "you", "know", "this", "photo", "is", "from", ",", "right", "?"]
# ::lemmas ["so", "you", "know", "this", "photo", "be", "from", ",", "right", "?"]
(c10-2 / know-01
       :ARG0 (c10-3 / you)
       :ARG1 (c10-5 / originate-01
                    :ARG1 (c10-4 / photo
                                 :mod (c10-0 / this)))
       :ARG1-of (c10-1 / request-confirmation-91
                       :ARG2 c10-3))

# ::snt , lies, hatred?!=home grown terrorismor = better than this
# ::tokens [",", "lies", ",", "hatred?!=home", "grown", "terrorismor", "=", "better", "than", "this"]
# ::lemmas [",", "lie", ",", "hatred?!=home", "grow", "terrorismor", "=", "well", "than", "this"]
(c11-6 / or
       :op1 (c11-7 / lie-08)
       :op2 (c11-8 / hatred)
       :ARG1-of (c11-1 / equal-01
                       :ARG2 (c11-0 / terrorism
                                    :ARG1-of (c11-3 / grow-03
                                                    :location (c11-4 / home))))
       :ARG1-of (c11-5 / equal-01
                       :ARG2 (c11-2 / this)))

# ::snt , lies, hatred?!=home grown terrorismor = better than this
# ::tokens [",", "lies", ",", "hatred?!=home", "grown", "terrorismor", "=", "better", "than", "this"]
# ::lemmas [",", "lie", ",", "hatred?!=home", "grow", "terrorismor", "=", "well", "than", "this"]
(c12-6 / or
       :op1 (c12-7 / lie-08)
       :op2 (c12-8 / hatred)
       :ARG1-of (c12-1 / equal-01
                       :ARG2 (c12-0 / terrorism
                                    :ARG1-of (c12-3 / grow-03
                                                    :location (c12-4 / home))))
       :ARG1-of (c12-5 / equal-01
                       :ARG2 (c12-2 / this)))

# ::snt Story was wrong- the "leaked photo" isn't evidence of refugees.CP lifted the image from a '12 story
# ::tokens ["Story", "was", "wrong-", "the", "\"", "leaked", "photo", "\"", "is", "n't", "evidence", "of", "refugees", ".", "CP", "lifted", "the", "image", "from", "a", "'", "12", "story"]
# ::lemmas ["story", "be", "wrong-", "the", "\"", "leak", "photo", "\"", "be", "not", "evidence", "of", "refugee", ".", "CP", "lift", "the", "image", "from", "a", "'", "12", "story"]
(c13-4 / multi-sentence
       :snt1 (c13-10 / wrong-04
                     :ARG1 (c13-7 / story))
       :snt2 (c13-3 / evidence-01
                    :ARG0 (c13-8 / photo
                                 :ARG1-of (c13-11 / leak-01))
                    :ARG1 (c13-2 / refugee)
                    :polarity -)
       :snt3 (c13-1 / lift-01
                    :ARG0 (c13-5 / publication
                                 :name (c13-9 / name
                                              :op1 "CP"))
                    :ARG1 (c13-6 / image)
                    :ARG2 (c13-0 / story
                                 :time (c13-12 / date-entity
                                               :year 12))))

# ::snt :Stay tuned, soon to be seen in America!Someone advise them that Obama is the King of the infidels.
# ::tokens [":", "Stay", "tuned", ",", "soon", "to", "be", "seen", "in", "America!Someone", "advise", "them", "that", "Obama", "is", "the", "King", "of", "the", "infidels", "."]
# ::lemmas [":", "stay", "tune", ",", "soon", "to", "be", "see", "in", "america!someone", "advise", "they", "that", "Obama", "be", "the", "King", "of", "the", "infidel", "."]
(c14-6 / multi-sentence
       :snt1 (c14-11 / stay-01
                     :ARG1 (c14-5 / you)
                     :ARG3 (c14-2 / tune-01
                                  :ARG1 c14-5)
                     :mode imperative)
       :snt2 (c14-0 / see-01
                    :ARG1-of (c14-12 / possible-01)
                    :location (c14-16 / country
                                      :name (c14-13 / name
                                                    :op1 "America"))
                    :time (c14-14 / soon))
       :snt3 (c14-1 / advise-01
                    :ARG0 (c14-15 / someone)
                    :ARG1 (c14-3 / they)
                    :ARG2 (c14-9 / have-org-role-91
                                 :ARG0 (c14-7 / person
                                              :name (c14-4 / name
                                                           :op1 "Obama"))
                                 :ARG1 (c14-10 / infidel)
                                 :ARG2 (c14-8 / king))))

# ::snt The US did in
# ::tokens ["The", "US", "did", "in"]
# ::lemmas ["the", "US", "do", "in"]
(c15-2 / do-02
       :ARG0 (c15-1 / country
                    :name (c15-3 / name
                                 :op1 "US"))
       :time (c15-0 / in))

# ::snt The refugees? An organised approach but there getting in without any structure
# ::tokens ["The", "refugees", "?", "An", "organised", "approach", "but", "there", "getting", "in", "without", "any", "structure"]
# ::lemmas ["the", "refugee", "?", "an", "organised", "approach", "but", "there", "get", "in", "without", "any", "structure"]
(c16-3 / multi-sentence
       :snt1 (c16-2 / refugee
                    :polarity (c16-0 / amr-unknown))
       :snt2 (c16-9 / approach-02
                    :manner (c16-7 / organize-01)
                    :ARG1-of (c16-8 / contrast-01
                                    :ARG2 (c16-4 / get-05
                                                 :ARG2 (c16-5 / inside)
                                                 :manner (c16-6 / structure
                                                                :mod (c16-1 / any)
                                                                :polarity -)))))

# ::snt Okay but you asked my solution and I gave it
# ::tokens ["Okay", "but", "you", "asked", "my", "solution", "and", "I", "gave", "it"]
# ::lemmas ["okay", "but", "you", "ask", "my", "solution", "and", "i", "give", "it"]
(c17-6 / contrast-01
       :ARG1 (c17-5 / okay-04)
       :ARG2 (c17-0 / and
                    :op1 (c17-7 / ask-01
                                :ARG0 (c17-1 / you)
                                :ARG1 (c17-4 / solution
                                             :poss (c17-3 / i
                                                          :ARG2-of c17-7)))
                    :op2 (c17-2 / give-01
                                :ARG0 c17-3
                                :ARG1 c17-4)))

# ::snt No the Marshall plan was done at national not supra national level
# ::tokens ["No", "the", "Marshall", "plan", "was", "done", "at", "national", "not", "supra", "national", "level"]
# ::lemmas ["no", "the", "Marshall", "plan", "be", "do", "at", "national", "not", "supra", "national", "level"]
(c18-9 / contrast-01
       :ARG1 (c18-10 / do-02
                     :ARG1 (c18-5 / plan
                                  :mod (c18-3 / company
                                              :name (c18-6 / name
                                                           :op1 "Marshall")))
                     :location (c18-8 / level
                                      :mod (c18-2 / nation))
                     :polarity -)
       :ARG2 (c18-0 / do-02
                    :ARG1 c18-5
                    :location (c18-1 / level
                                     :mod (c18-4 / supra)
                                     :mod (c18-7 / nation))
                    :polarity -))

# ::snt No its not and why is a plan used before pie in the sky
# ::tokens ["No", "its", "not", "and", "why", "is", "a", "plan", "used", "before", "pie", "in", "the", "sky"]
# ::lemmas ["no", "its", "not", "and", "why", "be", "a", "plan", "use", "before", "pie", "in", "the", "sky"]
(c19-0 / and
       :op1 (c19-7 / have-polarity-91
                   :ARG2 -)
       :op2 (c19-3 / use-01
                   :ARG1 (c19-5 / plan-01)
                   :time (c19-1 / before
                                :op1 (c19-2 / pie
                                            :location (c19-4 / sky)))
                   :ARG1-of (c19-8 / cause-01
                                   :ARG0 (c19-6 / amr-unknown))))

# ::snt Round 'em up and ship the bastards out!
# ::tokens ["Round", "'em", "up", "and", "ship", "the", "bastards", "out", "!"]
# ::lemmas ["round", "'em", "up", "and", "ship", "the", "bastard", "out", "!"]
(c20-0 / and
       :op1 (c20-2 / round-up-02
                   :ARG0 (c20-4 / you)
                   :ARG1 (c20-1 / they)
                   :mode imperative)
       :op2 (c20-5 / ship-01
                   :ARG0 c20-4
                   :ARG1 (c20-3 / bastard)
                   :ARG2 (c20-6 / out)
                   :mode imperative))

# ::snt The Marshall plan was enacted and saved Europe post WW2
# ::tokens ["The", "Marshall", "plan", "was", "enacted", "and", "saved", "Europe", "post", "WW2"]
# ::lemmas ["the", "Marshall", "plan", "be", "enact", "and", "save", "Europe", "post", "WW2"]
(c21-0 / and
       :op1 (c21-1 / enact-01
                   :ARG1 (c21-7 / plan
                                :mod (c21-10 / company
                                             :name (c21-6 / name
                                                          :op1 "Marshall"))))
       :op2 (c21-5 / save-02
                   :ARG0 c21-7
                   :ARG1 (c21-3 / continent
                                :name (c21-2 / name
                                             :op1 "Europe")))
       :time (c21-4 / after
                    :op1 (c21-9 / war
                                :name (c21-8 / name
                                             :op1 "World"
                                             :op2 "War"
                                             :op3 "II"))))

# ::snt I don't think it was anyone player - we can either fail at dealing with the symptoms or cure the underlying issues
# ::tokens ["I", "do", "n't", "think", "it", "was", "anyone", "player", "-", "we", "can", "either", "fail", "at", "dealing", "with", "the", "symptoms", "or", "cure", "the", "underlying", "issues"]
# ::lemmas ["i", "do", "not", "think", "it", "be", "anyone", "player", "-", "we", "can", "either", "fail", "at", "deal", "with", "the", "symptom", "or", "cure", "the", "underlying", "issue"]
(c22-1 / think-01
       :ARG0 (c22-5 / i)
       :ARG1 (c22-7 / play-01
                    :ARG0 (c22-0 / anyone))
       :ARG1-of (c22-13 / cause-01
                        :ARG0 (c22-3 / possible-01
                                     :ARG1 (c22-9 / or
                                                  :op1 (c22-11 / fail-01
                                                               :ARG1 (c22-10 / we)
                                                               :ARG2 (c22-2 / deal-01
                                                                            :ARG0 c22-10
                                                                            :ARG2 (c22-6 / symptom)))
                                                  :op2 (c22-4 / cure-01
                                                              :ARG0 c22-10
                                                              :ARG1 (c22-12 / issue-02
                                                                            :ARG0-of (c22-8 / underlie-01))))))
       :polarity -)

# ::snt OMG!!
# ::tokens ["OMG", "!", "!"]
# ::lemmas ["OMG", "!", "!"]
(c23-0 / oh-my-god
       :mode expressive)

# ::snt I'd rather help them fix there home nations
# ::tokens ["I", "'d", "rather", "help", "them", "fix", "there", "home", "nations"]
# ::lemmas ["i", "would", "rather", "help", "they", "fix", "there", "home", "nation"]
(c24-3 / prefer-01
       :ARG0 (c24-2 / i)
       :ARG1 (c24-6 / help-01
                    :ARG0 c24-2
                    :ARG1 (c24-5 / fix-02
                                 :ARG0 (c24-0 / they)
                                 :ARG1 (c24-4 / nation
                                              :mod (c24-1 / home)))
                    :ARG2 c24-0))

# ::snt THE
# ::tokens ["THE"]
# ::lemmas ["the"]
(c25-0 / amr-empty)

# ::snt Read the next tweets
# ::tokens ["Read", "the", "next", "tweets"]
# ::lemmas ["read", "the", "next", "tweet"]
(c26-2 / read-01
       :ARG0 (c26-0 / you)
       :ARG1 (c26-1 / tweet-01
                    :mod (c26-3 / next))
       :mode imperative)

# ::snt We need to deal with the root cause and I suggest a marshal plan for the middle east and north Africa
# ::tokens ["We", "need", "to", "deal", "with", "the", "root", "cause", "and", "I", "suggest", "a", "marshal", "plan", "for", "the", "middle", "east", "and", "north", "Africa"]
# ::lemmas ["we", "need", "to", "deal", "with", "the", "root", "cause", "and", "i", "suggest", "a", "marshal", "plan", "for", "the", "middle", "east", "and", "north", "Africa"]
(c27-0 / and
       :op1 (c27-8 / need-01
                   :ARG0 (c27-12 / we)
                   :ARG1 (c27-14 / deal-01
                                 :ARG0 c27-12
                                 :ARG2 (c27-1 / root-02
                                              :ARG1 (c27-13 / cause))))
       :op2 (c27-7 / suggest-01
                   :ARG0 (c27-6 / i)
                   :ARG1 (c27-9 / plan-01
                                :ARG1 (c27-10 / and
                                              :op1 (c27-2 / world-region
                                                          :name (c27-3 / name
                                                                       :op1 "Middle"
                                                                       :op2 "East"))
                                              :op2 (c27-5 / world-region
                                                          :name (c27-11 / name
                                                                        :op1 "North"
                                                                        :op2 "Africa")))
                                :mod (c27-4 / marshal))))

# ::snt There is a mix of refugees and economic migrants and we can not stop them all
# ::tokens ["There", "is", "a", "mix", "of", "refugees", "and", "economic", "migrants", "and", "we", "can", "not", "stop", "them", "all"]
# ::lemmas ["there", "be", "a", "mix", "of", "refugee", "and", "economic", "migrant", "and", "we", "can", "not", "stop", "they", "all"]
(c28-0 / and
       :op1 (c28-4 / mix-01
                   :ARG1 (c28-1 / refugee)
                   :ARG2 (c28-7 / person
                                :mod (c28-2 / economy)
                                :ARG0-of (c28-3 / migrate-01)))
       :op2 (c28-5 / possible-01
                   :ARG1 (c28-6 / stop-01
                                :ARG0 (c28-8 / we)
                                :ARG1 c28-7)
                   :polarity -))

# ::snt If you read my tweets I was saying the current position is very complex
# ::tokens ["If", "you", "read", "my", "tweets", "I", "was", "saying", "the", "current", "position", "is", "very", "complex"]
# ::lemmas ["if", "you", "read", "my", "tweet", "i", "be", "say", "the", "current", "position", "be", "very", "complex"]
(c29-5 / say-01
       :ARG0 (c29-4 / i)
       :ARG1 (c29-8 / complex
                    :domain (c29-6 / position-02
                                   :time (c29-3 / current))
                    :degree (c29-7 / very))
       :condition (c29-1 / read-01
                         :ARG0 (c29-2 / you)
                         :ARG1 (c29-0 / tweet-02
                                      :ARG0 c29-4)))

# ::snt Not that you care but this picture has been doing the rounds on twitter long before the Syrian crisis
# ::tokens ["Not", "that", "you", "care", "but", "this", "picture", "has", "been", "doing", "the", "rounds", "on", "twitter", "long", "before", "the", "Syrian", "crisis"]
# ::lemmas ["not", "that", "you", "care", "but", "this", "picture", "have", "be", "do", "the", "round", "on", "twitter", "long", "before", "the", "Syrian", "crisis"]
(c30-12 / contrast-01
        :ARG1 (c30-8 / care-01
                     :ARG0 (c30-6 / you)
                     :polarity -)
        :ARG2 (c30-1 / round-03
                     :ARG1 (c30-9 / picture
                                  :mod (c30-0 / this))
                     :location (c30-7 / publication
                                      :name (c30-10 / name
                                                    :op1 "Twitter"))
                     :time (c30-3 / before
                                  :op1 (c30-4 / crisis
                                              :mod (c30-2 / country
                                                          :name (c30-5 / name
                                                                       :op1 "Syria")))
                                  :ARG1-of (c30-11 / long-03))))

# ::snt Normal civil rules do not apply to followers of Islam. Germans were suckers for welcoming them.
# ::tokens ["Normal", "civil", "rules", "do", "not", "apply", "to", "followers", "of", "Islam", ".", "Germans", "were", "suckers", "for", "welcoming", "them", "."]
# ::lemmas ["normal", "civil", "rule", "do", "not", "apply", "to", "follower", "of", "Islam", ".", "Germans", "be", "sucker", "for", "welcome", "they", "."]
(c31-4 / multi-sentence
       :snt1 (c31-0 / apply-02
                    :ARG1 (c31-1 / rule
                                 :mod (c31-14 / civil)
                                 :ARG1-of (c31-9 / normal-02))
                    :ARG2 (c31-10 / person
                                  :ARG0-of (c31-13 / follow-02
                                                   :ARG1 (c31-7 / religious-group
                                                                :name (c31-3 / name
                                                                             :op1 "Islam"))))
                    :polarity -)
       :snt2 (c31-8 / sucker
                    :domain (c31-5 / person
                                   :mod (c31-6 / country
                                               :name (c31-11 / name
                                                             :op1 "Germany")))
                    :ARG1-of (c31-2 / cause-01
                                    :ARG0 (c31-12 / welcome-01
                                                  :ARG0 c31-5
                                                  :ARG1 c31-10))))

# ::snt open up on these fucks! this insane wtf. Round em send them packing.
# ::tokens ["open", "up", "on", "these", "fucks", "!", "this", "insane", "wtf", ".", "Round", "em", "send", "them", "packing", "."]
# ::lemmas ["open", "up", "on", "these", "fuck", "!", "this", "insane", "wtf", ".", "round", "em", "send", "they", "pack", "."]
(c32-7 / multi-sentence
       :snt1 (c32-12 / open-up-03
                     :ARG0 (c32-6 / you)
                     :ARG1 (c32-13 / fuck
                                   :mod (c32-1 / this))
                     :mode imperative)
       :snt2 (c32-0 / amr-unknown
                    :mod (c32-9 / insane)
                    :mod (c32-4 / this))
       :snt3 (c32-2 / round-out-01
                    :ARG0 (c32-3 / you)
                    :ARG1 (c32-5 / they)
                    :mode imperative)
       :snt4 (c32-10 / send-03
                     :ARG0 c32-3
                     :ARG1 (c32-8 / they
                                  :ARG4 (c32-11 / pack-01
                                                :ARG1 c32-8))
                     :mode imperative))

# ::snt ,?!))) , , , ,)))
# ::tokens [",", "?", "!", ")", ")", ")", ",", ",", ",", ",", ")", ")", ")"]
# ::lemmas [",", "?", "!", ")", ")", ")", ",", ",", ",", ",", ")", ")", ")"]
(c33-0 / and
       :op1 (c33-2 / emoticon
                   :value ",")
       :op2 (c33-1 / emoticon
                   :value ","))

# ::snt proves a lot this picture
# ::tokens ["proves", "a", "lot", "this", "picture"]
# ::lemmas ["prove", "a", "lot", "this", "picture"]
(c34-3 / prove-01
       :ARG1 (c34-2 / picture
                    :mod (c34-0 / this))
       :degree (c34-1 / lot))

# ::snt What a surprise eh?
# ::tokens ["What", "a", "surprise", "eh", "?"]
# ::lemmas ["what", "a", "surprise", "eh", "?"]
(c36-1 / surprise-01
       :mod (c36-0 / so)
       :ARG1-of (c36-2 / request-confirmation-91))

# ::snt they are opening a second front to attack US
# ::tokens ["they", "are", "opening", "a", "second", "front", "to", "attack", "US"]
# ::lemmas ["they", "be", "open", "a", "second", "front", "to", "attack", "US"]
(c37-4 / open-01
       :ARG0 (c37-1 / they)
       :ARG1 (c37-5 / front
                    :ord (c37-2 / ordinal-entity
                                :value 2))
       :purpose (c37-0 / attack-01
                       :ARG0 c37-1
                       :ARG1 (c37-6 / country
                                    :name (c37-3 / name
                                                 :op1 "US"))))

# ::snt Those countries who let them in will have to accept all of the consequences.
# ::tokens ["Those", "countries", "who", "let", "them", "in", "will", "have", "to", "accept", "all", "of", "the", "consequences", "."]
# ::lemmas ["those", "country", "who", "let", "they", "in", "will", "have", "to", "accept", "all", "of", "the", "consequence", "."]
(c38-6 / obligate-01
       :ARG1 (c38-8 / country
                    :mod (c38-1 / that)
                    :ARG0-of (c38-7 / let-01
                                    :ARG1 (c38-2 / enter-01
                                                 :ARG0 (c38-3 / they))))
       :ARG2 (c38-0 / accept-01
                    :ARG0 c38-8
                    :ARG1 (c38-4 / consequence-03
                                 :mod (c38-5 / all))))

# ::snt they're not refugees. That's from a muslim demonstration. Fact check level - Nonce
# ::tokens ["they", "'re", "not", "refugees", ".", "That", "'s", "from", "a", "muslim", "demonstration", ".", "Fact", "check", "level", "-", "Nonce"]
# ::lemmas ["they", "be", "not", "refugee", ".", "that", "be", "from", "a", "muslim", "demonstration", ".", "fact", "check", "level", "-", "nonce"]
(c40-5 / multi-sentence
       :snt1 (c40-1 / refugee
                    :domain (c40-0 / they)
                    :polarity -)
       :snt2 (c40-2 / be-from-91
                    :ARG1 (c40-3 / that)
                    :ARG2 (c40-12 / demonstrate-01
                                  :ARG0 (c40-7 / person
                                               :mod (c40-6 / religious-group
                                                           :name (c40-8 / name
                                                                        :op1 "Muslim")))))
       :snt3 (c40-9 / level
                    :mod (c40-10 / check-01
                                 :ARG1 (c40-11 / fact))
                    :mod (c40-4 / nonce)))

# ::snt -Germany failed think this Refugee Invasion through &amp; could haveBeen avoided. (WAKE UP CONGRESS orSame will happen here)
# ::tokens ["-Germany", "failed", "think", "this", "Refugee", "Invasion", "through", "&", "amp", ";", "could", "haveBeen", "avoided", ".", "(", "WAKE", "UP", "CONGRESS", "orSame", "will", "happen", "here", ")"]
# ::lemmas ["-germany", "fail", "think", "this", "Refugee", "Invasion", "through", "&", "amp", ";", "could", "havebeen", "avoid", ".", "(", "wake", "UP", "CONGRESS", "orsame", "will", "happen", "here", ")"]
(c41-6 / multi-sentence
       :snt1 (c41-15 / fail-01
                     :ARG1 (c41-17 / country
                                   :name (c41-10 / name
                                                 :op1 "Germany"))
                     :ARG2 (c41-1 / think-01
                                  :ARG0 c41-17
                                  :ARG1 (c41-8 / invade-01
                                               :ARG0 (c41-2 / refugee)
                                               :mod (c41-3 / this)
                                               :manner (c41-0 / and
                                                              :op1 (c41-4 / through
                                                                          :op2-of c41-0)))))
       :snt2 (c41-11 / possible-01
                     :ARG1 (c41-9 / avoid-01
                                  :ARG1 c41-8))
       :snt3 (c41-12 / or
                     :op1 (c41-14 / wake-up-02
                                  :ARG0 (c41-5 / you)
                                  :ARG1 (c41-7 / populace)
                                  :mode imperative)
                     :op2 (c41-13 / same-01
                                  :location (c41-16 / here))))

# ::snt Do you get the picture? The EU would be outraged if the UN...Works for all continents.
# ::tokens ["Do", "you", "get", "the", "picture", "?", "The", "EU", "would", "be", "outraged", "if", "the", "UN", "...", "Works", "for", "all", "continents", "."]
# ::lemmas ["do", "you", "get", "the", "picture", "?", "the", "EU", "would", "be", "outraged", "if", "the", "UN", "...", "work", "for", "all", "continent", "."]
(c42-4 / multi-sentence
       :snt1 (c42-5 / get-30
                    :polarity (c42-0 / amr-unknown)
                    :ARG0 (c42-3 / you)
                    :ARG1 (c42-7 / picture))
       :snt2 (c42-9 / outrage-01
                    :ARG1 (c42-1 / organization
                                 :name (c42-8 / name
                                              :op1 "EU"))
                    :condition (c42-10 / work-09
                                       :ARG0 c42-1
                                       :name (c42-2 / name
                                                    :op1 "UN"))
                    :ARG2 (c42-11 / continent
                                  :mod (c42-6 / all))))

# ::snt The German civil war begins while the UN is getting ready to rescue. Setting stage for Global Government.
# ::tokens ["The", "German", "civil", "war", "begins", "while", "the", "UN", "is", "getting", "ready", "to", "rescue", ".", "Setting", "stage", "for", "Global", "Government", "."]
# ::lemmas ["the", "German", "civil", "war", "begin", "while", "the", "UN", "be", "get", "ready", "to", "rescue", ".", "set", "stage", "for", "Global", "Government", "."]
(c43-4 / multi-sentence
       :snt1 (c43-2 / begin-01
                    :ARG1 (c43-13 / war
                                  :mod (c43-14 / civil)
                                  :mod (c43-6 / country
                                              :name (c43-10 / name
                                                            :op1 "Germany")))
                    :time (c43-1 / ready-01
                                 :ARG1 (c43-11 / organization
                                               :name (c43-3 / name
                                                            :op1 "UN"))
                                 :ARG2 (c43-8 / rescue-01
                                              :ARG0 c43-11
                                              :ARG1 c43-6)))
       :snt2 (c43-9 / set-01
                    :ARG1 (c43-0 / stage)
                    :ARG2 (c43-5 / government-organization
                                 :ARG0-of (c43-7 / govern-01
                                                 :ARG1 (c43-12 / globe)))))

# ::snt well we knew it was happening...didn't we...
# ::tokens ["well", "we", "knew", "it", "was", "happening", "...", "didn't", "we", "..."]
# ::lemmas ["well", "we", "know", "it", "be", "happen", "...", "didn't", "we", "..."]
(c44-1 / know-01
       :ARG0 (c44-4 / we)
       :ARG1 (c44-3 / it)
       :mod (c44-2 / well)
       :ARG1-of (c44-0 / request-confirmation-91))

# ::snt Red, yes too. Thought perhaps E European. I'm asking for a new Jan Sobieski.
# ::tokens ["Red", ",", "yes", "too", ".", "Thought", "perhaps", "E", "European", ".", "I", "'m", "asking", "for", "a", "new", "Jan", "Sobieski", "."]
# ::lemmas ["Red", ",", "yes", "too", ".", "think", "perhaps", "E", "European", ".", "i", "be", "ask", "for", "a", "new", "Jan", "Sobieski", "."]
(c45-5 / multi-sentence
       :snt1 (c45-4 / yes
                    :mod (c45-1 / too))
       :snt2 (c45-2 / think-01
                    :ARG1 (c45-8 / possible-01
                                 :ARG1 (c45-11 / continent
                                               :name (c45-9 / name
                                                            :op1 "Europe"))))
       :snt3 (c45-0 / ask-02
                    :ARG0 (c45-7 / i)
                    :ARG1 (c45-6 / person
                                 :name (c45-3 / name
                                              :op1 "Jan"
                                              :op2 "Sobieski")
                                 :ARG1-of (c45-10 / new-01))))

# ::snt Yes, skinhead, Wasn't thinking!
# ::tokens ["Yes", ",", "skinhead", ",", "Was", "n't", "thinking", "!"]
# ::lemmas ["yes", ",", "skinhead", ",", "be", "not", "think", "!"]
(c46-2 / say-01
       :ARG1 (c46-1 / think-01
                    :ARG0 (c46-0 / skinhead
                                 :ARG2-of c46-2)
                    :polarity -
                    :mode expressive))

# ::snt before years there is no i s is
# ::tokens ["before", "years", "there", "is", "no", "i", "s", "is"]
# ::lemmas ["before", "year", "there", "be", "no", "i", "s", "be"]
(c47-2 / no
       :time (c47-0 / before
                    :op1 (c47-1 / year)))

# ::snt there are already m in refugees in Jordania, Turkey, ea.
# ::tokens ["there", "are", "already", "m", "in", "refugees", "in", "Jordania", ",", "Turkey", ",", "ea", "."]
# ::lemmas ["there", "be", "already", "m", "in", "refugee", "in", "Jordania", ",", "Turkey", ",", "ea", "."]
(c48-3 / be-located-at-91
       :ARG1 (c48-1 / refugee)
       :ARG2 (c48-7 / country-region
                    :name (c48-6 / name
                                 :op1 "Jordania")
                    :location (c48-5 / country
                                     :name (c48-4 / name
                                                  :op1 "Turkey")))
       :time (c48-0 / already)
       :mod (c48-2 / emoticon
                   :value "a"))

# ::snt various video's showed already in Hungary they do not want FOOD and WATER they want GERMANY
# ::tokens ["various", "video", "'s", "showed", "already", "in", "Hungary", "they", "do", "not", "want", "FOOD", "and", "WATER", "they", "want", "GERMANY"]
# ::lemmas ["various", "video", "'s", "show", "already", "in", "Hungary", "they", "do", "not", "want", "food", "and", "WATER", "they", "want", "GERMANY"]
(c49-6 / show-01
       :ARG0 (c49-8 / video
                    :mod (c49-1 / various))
       :ARG1 (c49-9 / want-01
                    :ARG0 (c49-2 / they)
                    :ARG1 (c49-0 / and
                                 :op1 (c49-10 / food)
                                 :op2 (c49-3 / water)
                                 :ARG1-of (c49-4 / want-01
                                                 :ARG0 c49-2
                                                 :ARG2 (c49-11 / country
                                                               :name (c49-7 / name
                                                                            :op1 "Hungary")
                                                               :location-of c49-6)))
                    :polarity -)
       :time (c49-5 / already))

# ::snt picture is from a riot in , it's nothing to do with refugees
# ::tokens ["picture", "is", "from", "a", "riot", "in", ",", "it", "'s", "nothing", "to", "do", "with", "refugees"]
# ::lemmas ["picture", "be", "from", "a", "riot", "in", ",", "it", "be", "nothing", "to", "do", "with", "refugee"]
(c50-0 / and
       :op1 (c50-2 / be-from-91
                   :ARG1 (c50-4 / picture-01)
                   :ARG2 (c50-1 / riot-01))
       :op2 (c50-6 / have-to-do-with-04
                   :ARG0 c50-4
                   :ARG1 (c50-3 / refugee)
                   :ARG2 (c50-5 / nothing)))
