# ::snt hail the light
# ::tokens ["hail", "the", "light"]
# ::lemmas ["hail", "the", "light"]
(c1-2 / Hail-01
      :ARG0 (c1-0 / you)
      :ARG1 (c1-1 / light)
      :mode imperative)

# ::snt is this actually fit happened?
# ::tokens ["is", "this", "actually", "fit", "happened", "?"]
# ::lemmas ["be", "this", "actually", "fit", "happen", "?"]
(c2-2 / fit-06
      :polarity (c2-0 / amr-unknown)
      :ARG1 (c2-1 / this)
      :ARG1-of (c2-3 / actual-02))

# ::snt , or what does it mean for all that days of darkness?
# ::tokens [",", "or", "what", "does", "it", "mean", "for", "all", "that", "days", "of", "darkness", "?"]
# ::lemmas [",", "or", "what", "do", "it", "mean", "for", "all", "that", "day", "of", "darkness", "?"]
(c3-6 / or
      :op2 (c3-3 / mean-01
                 :ARG1 (c3-4 / it)
                 :ARG2 (c3-0 / amr-unknown)
                 :ARG3 (c3-7 / day
                             :mod (c3-5 / all)
                             :mod (c3-1 / darkness)
                             :mod (c3-2 / that))))

# ::snt are u against the illuminati or for it?
# ::tokens ["are", "u", "against", "the", "illuminati", "or", "for", "it", "?"]
# ::lemmas ["be", "u", "against", "the", "illuminati", "or", "for", "it", "?"]
(c4-6 / oppose-01
      :ARG0 (c4-2 / you)
      :ARG1 (c4-1 / or
                  :op1 (c4-5 / organization
                             :name (c4-4 / name
                                         :op1 "Illuminati"))
                  :op2 (c4-3 / it))
      :polarity (c4-0 / amr-unknown))

# ::snt I call BS on that one!
# ::tokens ["I", "call", "BS", "on", "that", "one", "!"]
# ::lemmas ["i", "call", "bs", "on", "that", "one", "!"]
(c5-4 / call-11
      :ARG0 (c5-2 / i)
      :ARG1 (c5-1 / bullshit-01)
      :ARG2 (c5-3 / one
                  :mod (c5-0 / that))
      :mode expressive)

# ::snt I'm scared
# ::tokens ["I", "'m", "scared"]
# ::lemmas ["i", "be", "scared"]
(c6-1 / scare-01
      :ARG1 (c6-0 / i))

# ::snt yeah &amp; they said humanity would be over in &amp; but did that happen?
# ::tokens ["yeah", "&", "amp", ";", "they", "said", "humanity", "would", "be", "over", "in", "&", "amp", ";", "but", "did", "that", "happen", "?"]
# ::lemmas ["yeah", "&", "amp", ";", "they", "say", "humanity", "would", "be", "over", "in", "&", "amp", ";", "but", "do", "that", "happen", "?"]
(c7-0 / and
      :op1 (c7-3 / yeah
                 :mode expressive)
      :op2 (c7-10 / contrast-01
                  :ARG1 (c7-6 / say-01
                              :ARG0 (c7-1 / they)
                              :ARG1 (c7-8 / over-01
                                          :ARG1 (c7-9 / humanity)
                                          :location c7-0
                                          :op1 (c7-4 / country
                                                     :name (c7-7 / name
                                                                 :op1 "United"
                                                                 :op2 "States")
                                                     :op2-of c7-8))))
      :ARG2 (c7-2 / event
                  :polarity (c7-5 / amr-unknown)))

# ::snt trash no way buddy.
# ::tokens ["trash", "no", "way", "buddy", "."]
# ::lemmas ["trash", "no", "way", "buddy", "."]
(c8-3 / say-01
      :ARG0 (c8-2 / i)
      :ARG1 (c8-0 / trash-01
                  :manner (c8-4 / way
                                :polarity -))
      :ARG2 (c8-1 / buddy))

# ::snt -,-
# ::tokens ["-,-"]
# ::lemmas ["-,-"]
(c9-0 / amr-empty)

# ::snt (y)
# ::tokens ["(", "y", ")"]
# ::lemmas ["(", "y", ")"]
(c10-0 / string-entity
       :value "y")

# ::snt how can the illuminati be so gullible
# ::tokens ["how", "can", "the", "illuminati", "be", "so", "gullible"]
# ::lemmas ["how", "can", "the", "illuminati", "be", "so", "gullible"]
(c11-3 / possible-01
       :ARG1 (c11-1 / gullible
                    :domain (c11-5 / organization
                                   :name (c11-4 / name
                                                :op1 "Illuminati"))
                    :degree (c11-2 / so))
       :manner (c11-0 / amr-unknown))

# ::snt sure they said this last year
# ::tokens ["sure", "they", "said", "this", "last", "year"]
# ::lemmas ["sure", "they", "say", "this", "last", "year"]
(c12-4 / sure-02
       :ARG1 (c12-0 / say-01
                    :ARG0 (c12-1 / they)
                    :ARG1 (c12-2 / this)
                    :time (c12-3 / year
                                 :mod (c12-5 / last))))
