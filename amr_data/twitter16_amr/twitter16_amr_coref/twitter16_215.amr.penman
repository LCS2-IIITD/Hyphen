# ::snt Likewise, you can substitute other killers for Roof. (And some of the killers are cops.) And if you do you will notice a trend. Actually, YOU will probably argue that theres no difference and its a media hoax...
# ::tokens ["Likewise", ",", "you", "can", "substitute", "other", "killers", "for", "Roof", ".", "(", "And", "some", "of", "the", "killers", "are", "cops", ".", ")", "And", "if", "you", "do", "you", "will", "notice", "a", "trend", ".", "Actually", ",", "YOU", "will", "probably", "argue", "that", "there", "s", "no", "difference", "and", "its", "a", "media", "hoax", "..."]
# ::lemmas ["likewise", ",", "you", "can", "substitute", "other", "killer", "for", "Roof", ".", "(", "and", "some", "of", "the", "killer", "be", "cop", ".", ")", "and", "if", "you", "do", "you", "will", "notice", "a", "trend", ".", "actually", ",", "you", "will", "probably", "argue", "that", "there", "s", "no", "difference", "and", "its", "a", "media", "hoax", "..."]
(c1-26 / multi-sentence
       :snt1 (c1-17 / and
                    :op1 (c1-22 / possible-01
                                :ARG1 (c1-12 / substitute-01
                                             :ARG0 (c1-25 / you)
                                             :ARG1 (c1-20 / person
                                                          :ARG0-of (c1-9 / kill-01)
                                                          :mod (c1-29 / other))
                                             :ARG2 (c1-24 / person
                                                          :name (c1-7 / name
                                                                      :op1 "Roosevelt")))
                                :mod (c1-13 / likewise))
                    :op2 (c1-15 / cop
                                :domain (c1-21 / person
                                               :ARG1-of (c1-6 / include-91
                                                              :ARG2 (c1-27 / person
                                                                           :ARG0-of (c1-5 / kill-01))
                                                              :ARG3 (c1-0 / some))))
                    :op3 (c1-10 / notice-01
                                :ARG0 (c1-4 / you)
                                :ARG1 (c1-1 / trend-01)
                                :condition (c1-23 / do-02
                                                  :ARG0 c1-4)))
       :snt2 (c1-16 / argue-01
                    :ARG0 (c1-28 / you)
                    :ARG1 (c1-2 / and
                                :op1 (c1-3 / differ-02
                                           :polarity -)
                                :op2 (c1-14 / hoax-01
                                            :ARG0 (c1-8 / media)
                                            :ARG1 (c1-18 / it)))
                    :mod (c1-19 / probable)
                    :ARG1-of (c1-11 / actual-02)))

# ::snt After arrest, roof was treated humanely. Floyd was smothered to death. Roof killed people. In a church. Floyd was killed for a $20 crime without resisting arrest. And you can substitute a bunch of unarmed victims for Floyd.
# ::tokens ["After", "arrest", ",", "roof", "was", "treated", "humanely", ".", "Floyd", "was", "smothered", "to", "death", ".", "Roof", "killed", "people", ".", "In", "a", "church", ".", "Floyd", "was", "killed", "for", "a", "$", "20", "crime", "without", "resisting", "arrest", ".", "And", "you", "can", "substitute", "a", "bunch", "of", "unarmed", "victims", "for", "Floyd", "."]
# ::lemmas ["after", "arrest", ",", "roof", "be", "treat", "humanely", ".", "Floyd", "be", "smother", "to", "death", ".", "Roof", "kill", "people", ".", "in", "a", "church", ".", "Floyd", "be", "kill", "for", "a", "$", "20", "crime", "without", "resist", "arrest", ".", "and", "you", "can", "substitute", "a", "bunch", "of", "unarmed", "victim", "for", "Floyd", "."]
(c2-28 / multi-sentence
       :snt1 (c2-2 / treat-01
                   :ARG1 (c2-9 / roof)
                   :manner (c2-15 / humane)
                   :time (c2-18 / after
                                :op1 (c2-17 / arrest-01
                                            :ARG1 (c2-23 / person
                                                         :name (c2-8 / name
                                                                     :op1 "Floyd")))))
       :snt2 (c2-14 / smother-01
                    :ARG1 (c2-20 / person
                                 :name (c2-11 / name
                                              :op1 "Floyd"))
                    :degree (c2-25 / die-01
                                   :ARG1 c2-20))
       :snt3 (c2-12 / kill-01
                    :ARG0 c2-9)
       :ARG1 (c2-26 / person)
       :location (c2-16 / church)
       :snt4 (c2-6 / kill-01
                   :ARG1 (c2-22 / person
                                :name (c2-24 / name
                                             :op1 "Floyd"))
                   :ARG3 (c2-21 / crime-02
                                :ARG0 c2-22
                                :ARG1 (c2-10 / monetary-quantity
                                             :unit (c2-3 / dollar)
                                             :quant 20)
                                :manner (c2-7 / resist-01
                                              :ARG0 c2-22
                                              :ARG1 (c2-4 / arrest-01
                                                          :ARG1 c2-22)
                                              :polarity -)))
       :snt5 (c2-13 / and
                    :op2 (c2-29 / possible-01
                                :ARG1 (c2-0 / substitute-01
                                            :ARG0 (c2-27 / you)
                                            :ARG1 (c2-5 / bunch
                                                        :consist-of (c2-19 / person
                                                                           :ARG1-of (c2-1 / arm-01
                                                                                          :polarity -)))
                                            :ARG2 c2-22))))

# ::snt This is why its called Systemic. It starts with the first interaction, and flows all tge way through arrest, trial, jury selection, and sentencing. In this example, roof was taken into custody while armed without being injured. Unarmed Floyd was killed instead.
# ::tokens ["This", "is", "why", "its", "called", "Systemic", ".", "It", "starts", "with", "the", "first", "interaction", ",", "and", "flows", "all", "tge", "way", "through", "arrest", ",", "trial", ",", "jury", "selection", ",", "and", "sentencing", ".", "In", "this", "example", ",", "roof", "was", "taken", "into", "custody", "while", "armed", "without", "being", "injured", ".", "Unarmed", "Floyd", "was", "killed", "instead", "."]
# ::lemmas ["this", "be", "why", "its", "call", "Systemic", ".", "it", "start", "with", "the", "first", "interaction", ",", "and", "flow", "all", "tge", "way", "through", "arrest", ",", "trial", ",", "jury", "selection", ",", "and", "sentencing", ".", "in", "this", "example", ",", "roof", "be", "take", "into", "custody", "while", "armed", "without", "be", "injure", ".", "Unarmed", "Floyd", "be", "kill", "instead", "."]
(c3-27 / multi-sentence
       :snt1 (c3-20 / cause-01
                    :ARG0 (c3-2 / this)
                    :ARG1 (c3-22 / call-01
                                 :ARG1 (c3-7 / it)
                                 :ARG2 (c3-17 / systemic)))
       :snt2 (c3-21 / and
                    :op1 (c3-0 / start-01
                               :ARG0 (c3-18 / it)
                               :ARG2 (c3-25 / interact-01
                                            :ord (c3-28 / ordinal-entity
                                                        :value 1)))
                    :op2 (c3-11 / flow-01
                                :ARG1 c3-18
                                :ARG2 (c3-19 / and
                                             :op1 (c3-3 / arrest-01)
                                             :op2 (c3-5 / try-02)
                                             :op3 (c3-8 / select-01
                                                        :ARG3 (c3-4 / jury))
                                             :op4 (c3-29 / sentence-01))
                                :extent (c3-16 / all-the-way)))
       :snt3 (c3-26 / exemplify-01
                    :ARG0 (c3-15 / take-01
                                 :ARG1 (c3-12 / roof)
                                 :ARG3 (c3-13 / custody)
                                 :time (c3-1 / arm-01
                                             :ARG1 c3-12
                                             :polarity -)
                                 :manner (c3-9 / injure-01
                                               :ARG1 c3-12))
                    :snt4 (c3-14 / kill-01
                                 :ARG1 (c3-23 / person
                                              :name (c3-10 / name
                                                           :op1 "Floyd")
                                              :ARG1-of (c3-6 / arm-01
                                                             :polarity -))
                                 :ARG1-of (c3-24 / instead-of-91))))

# ::snt Roof isnt the only example of this type. There are videos circulating of white suspects getting away with behavior that gets black suspects shot. Equal protection under the law is a fantasy, not reality. See Florida sentencing disparity.
# ::tokens ["Roof", "is", "nt", "the", "only", "example", "of", "this", "type", ".", "There", "are", "videos", "circulating", "of", "white", "suspects", "getting", "away", "with", "behavior", "that", "gets", "black", "suspects", "shot", ".", "Equal", "protection", "under", "the", "law", "is", "a", "fantasy", ",", "not", "reality", ".", "See", "Florida", "sentencing", "disparity", "."]
# ::lemmas ["Roof", "be", "not", "the", "only", "example", "of", "this", "type", ".", "there", "be", "video", "circulate", "of", "white", "suspect", "get", "away", "with", "behavior", "that", "get", "black", "suspect", "shoot", ".", "equal", "protection", "under", "the", "law", "be", "a", "fantasy", ",", "not", "reality", ".", "see", "Florida", "sentencing", "disparity", "."]
(c4-27 / multi-sentence
       :snt1 (c4-25 / exemplify-01
                    :ARG0 (c4-22 / person
                                 :name (c4-5 / name
                                             :op1 "Roof"))
                    :ARG1 (c4-1 / type
                                :mod (c4-3 / this))
                    :mod (c4-28 / only)
                    :polarity -)
       :snt2 (c4-18 / circulate-01
                    :ARG1 (c4-6 / video
                                :topic (c4-12 / get-away-08
                                              :ARG0 (c4-19 / person
                                                           :ARG2-of (c4-14 / suspect-01)
                                                           :ARG1-of (c4-7 / white-02))
                                              :ARG1 (c4-2 / behave-01
                                                          :ARG0 c4-19)
                                              :ARG0-of (c4-13 / get-04
                                                              :ARG1 (c4-0 / shoot-02
                                                                          :ARG1 (c4-24 / person
                                                                                       :ARG2-of c4-14)
                                                                          :ARG1-of (c4-11 / black-05))))))
       :snt3 (c4-20 / contrast-01
                    :ARG1 (c4-8 / fantasy
                                :domain (c4-21 / protect-01
                                               :ARG1 (c4-15 / equal-01)
                                               :prep-under (c4-16 / law)))
                    :ARG2 (c4-9 / reality
                                :domain (c4-23 / disparity
                                               :mod (c4-4 / sentence-01)
                                               :mod (c4-29 / state
                                                           :name (c4-10 / name
                                                                        :op1 "Florida")))
                                :polarity -))
       :snt4 (c4-17 / see-01
                    :ARG0 (c4-26 / you)
                    :ARG1 c4-23
                    :mode imperative))

# ::snt Its a comparison. An armed mass murderer is arrested and fed. An unarmed man with a fake $20 bill is executed in the street. They looked different...
# ::tokens ["Its", "a", "comparison", ".", "An", "armed", "mass", "murderer", "is", "arrested", "and", "fed", ".", "An", "unarmed", "man", "with", "a", "fake", "$", "20", "bill", "is", "executed", "in", "the", "street", ".", "They", "looked", "different", "..."]
# ::lemmas ["its", "a", "comparison", ".", "an", "armed", "mass", "murderer", "be", "arrest", "and", "fed", ".", "an", "unarmed", "man", "with", "a", "fake", "$", "20", "bill", "be", "execute", "in", "the", "street", ".", "they", "look", "different", "..."]
(c5-20 / multi-sentence
       :snt1 (c5-13 / compare-01
                    :ARG1 (c5-4 / it))
       :snt2 (c5-14 / and
                    :op1 (c5-15 / arrest-01
                                :ARG1 (c5-16 / person
                                             :ARG0-of (c5-6 / murder-01
                                                            :mod (c5-9 / mass))
                                             :ARG1-of (c5-0 / arm-01)))
                    :op2 (c5-5 / feed-01
                               :ARG2 c5-16))
       :snt3 (c5-18 / execute-01
                    :ARG1 (c5-8 / man
                                :ARG1-of c5-0
                                :polarity -)
                    :ARG0-of (c5-11 / have-03
                                    :ARG1 (c5-3 / bill
                                                :mod (c5-12 / monetary-quantity
                                                            :unit (c5-17 / dollar)
                                                            :quant 20)
                                                :ARG1-of (c5-19 / fake-02))
                                    :polarity -))
       :location (c5-7 / street)
       :snt4 (c5-10 / look-02
                    :ARG0 (c5-1 / they)
                    :ARG1 (c5-2 / differ-02)))

# ::snt . Dylann Roof is a Hoax and saying this also happened is being done to trigger you into more distraction
# ::tokens [".", "Dylann", "Roof", "is", "a", "Hoax", "and", "saying", "this", "also", "happened", "is", "being", "done", "to", "trigger", "you", "into", "more", "distraction"]
# ::lemmas [".", "Dylann", "Roof", "be", "a", "Hoax", "and", "say", "this", "also", "happen", "be", "be", "do", "to", "trigger", "you", "into", "more", "distraction"]
(c6-0 / and
      :op1 (c6-11 / hoax-01
                  :ARG0 (c6-9 / person
                              :name (c6-10 / name
                                           :op1 "Dylann"
                                           :op2 "Roof")))
      :op2 (c6-8 / say-01
                 :ARG0 c6-9
                 :ARG1 (c6-12 / do-02
                              :ARG1 (c6-1 / this
                                          :mod (c6-7 / also))
                              :purpose (c6-3 / trigger-01
                                             :ARG1 (c6-4 / you)
                                             :ARG2 (c6-2 / distract-01
                                                         :ARG0 c6-4
                                                         :ARG1-of (c6-6 / have-quant-91
                                                                        :ARG3 (c6-5 / more)))
                                             :ARG0 c6-12))))

# ::snt Idiots, that's what tax dollars do?
# ::tokens ["Idiots", ",", "that", "'s", "what", "tax", "dollars", "do", "?"]
# ::lemmas ["idiot", ",", "that", "be", "what", "tax", "dollar", "do", "?"]
(c7-5 / say-01
      :ARG0 (c7-4 / idiot)
      :ARG1 (c7-6 / do-02
                  :ARG0 (c7-1 / dollar
                              :ARG1-of (c7-2 / tax-01))
                  :ARG1 (c7-3 / that)
                  :polarity (c7-0 / amr-unknown))
      :ARG2 c7-4)

# ::snt Pls blur murderer's face. Isn't newsworthy, doesn't add to story
# ::tokens ["Pls", "blur", "murderer", "'s", "face", ".", "Is", "n't", "newsworthy", ",", "does", "n't", "add", "to", "story"]
# ::lemmas ["pls", "blur", "murderer", "'s", "face", ".", "be", "not", "newsworthy", ",", "do", "not", "add", "to", "story"]
(c8-4 / multi-sentence
      :snt1 (c8-1 / blur-01
                  :ARG0 (c8-7 / person
                              :name (c8-8 / name
                                          :op1 "Pls"))
                  :ARG1 (c8-9 / face
                              :part-of (c8-5 / person
                                             :ARG0-of (c8-2 / murder-01))))
      :snt2 (c8-0 / and
                  :op1 (c8-3 / newsworthy
                             :domain c8-3
                             :polarity -))
      :op2 (c8-10 / add-02
                  :ARG2 (c8-6 / story)
                  :polarity -))

# ::snt should have let him die of hunger
# ::tokens ["should", "have", "let", "him", "die", "of", "hunger"]
# ::lemmas ["should", "have", "let", "he", "die", "of", "hunger"]
(c9-0 / recommend-01
      :ARG1 (c9-2 / let-01
                  :ARG1 (c9-5 / die-01
                              :ARG1 (c9-4 / he)
                              :ARG1-of (c9-3 / cause-01
                                             :ARG0 (c9-1 / hunger-01
                                                         :ARG0 c9-4)))))

# ::snt disgusted. I'm disgusted.
# ::tokens ["disgusted", ".", "I", "'m", "disgusted", "."]
# ::lemmas ["disgusted", ".", "i", "be", "disgusted", "."]
(c10-1 / multi-sentence
       :snt1 (c10-4 / disgust-01
                    :ARG1 (c10-2 / i))
       :snt2 (c10-0 / disgust-01
                    :ARG1 (c10-3 / i)))

# ::snt ABC news is tripping for that one
# ::tokens ["ABC", "news", "is", "tripping", "for", "that", "one"]
# ::lemmas ["ABC", "news", "be", "trip", "for", "that", "one"]
(c11-0 / tripe-01
       :ARG0 (c11-1 / broadcast-program
                    :name (c11-3 / name
                                 :op1 "ABC"
                                 :op2 "News"))
       :ARG1 (c11-4 / one
                    :mod (c11-2 / that)))

# ::snt law enforcement and everything about the USA is screwed up.
# ::tokens ["law", "enforcement", "and", "everything", "about", "the", "USA", "is", "screwed", "up", "."]
# ::lemmas ["law", "enforcement", "and", "everything", "about", "the", "USA", "be", "screw", "up", "."]
(c12-2 / screw-up-01
       :ARG1 (c12-0 / and
                    :op1 (c12-1 / enforce-01
                                :ARG1 (c12-5 / law))
                    :op2 (c12-4 / everything
                                :topic (c12-6 / country
                                              :name (c12-3 / name
                                                           :op1 "USA")))))

# ::snt I'm asking for tacos and a large horchata if I ever get taken in
# ::tokens ["I", "'m", "asking", "for", "tacos", "and", "a", "large", "horchata", "if", "I", "ever", "get", "taken", "in"]
# ::lemmas ["i", "be", "ask", "for", "taco", "and", "a", "large", "horchata", "if", "i", "ever", "get", "take", "in"]
(c13-0 / ask-02
       :ARG0 (c13-4 / i)
       :ARG1 (c13-7 / and
                    :op1 (c13-1 / taco)
                    :op2 (c13-6 / horchata
                                :mod (c13-5 / large)))
       :condition (c13-3 / take-in-06
                         :ARG1 c13-4
                         :time (c13-2 / ever)))

# ::snt omg ricky D
# ::tokens ["omg", "ricky", "D"]
# ::lemmas ["omg", "ricky", "D"]
(c14-1 / person
       :name (c14-2 / name
                    :op1 "Ricky"
                    :op2 "D")
       :mod (c14-0 / old))

# ::snt :that's what the report says... all I know that is beyond ridiculous . Whenever I want BK ima go kill people
# ::tokens [":", "that", "'s", "what", "the", "report", "says", "...", "all", "I", "know", "that", "is", "beyond", "ridiculous", ".", "Whenever", "I", "want", "BK", "i", "m", "a", "go", "kill", "people"]
# ::lemmas [":", "that", "be", "what", "the", "report", "say", "...", "all", "i", "know", "that", "be", "beyond", "ridiculous", ".", "whenever", "i", "want", "BK", "i", "m", "a", "go", "kill", "people"]
(c15-6 / multi-sentence
       :snt1 (c15-12 / say-01
                     :ARG0 (c15-2 / report)
                     :ARG1 (c15-1 / that))
       :snt2 (c15-9 / ridiculous-02
                    :ARG1 (c15-4 / that)
                    :degree (c15-3 / beyond)
                    :ARG1-of (c15-5 / know-01
                                    :ARG0 (c15-11 / i)
                                    :mod (c15-0 / all)))
       :snt3 (c15-7 / go-05
                    :ARG0 (c15-16 / i)
                    :ARG1 (c15-10 / kill-01
                                  :ARG0 c15-16
                                  :ARG1 (c15-13 / person))
                    :time (c15-15 / want-01
                                  :ARG0 c15-16
                                  :ARG1 (c15-8 / publication
                                               :name (c15-14 / name
                                                             :op1 "Burger"
                                                             :op2 "King")))))

# ::snt in days? bruhhhhhhhhh
# ::tokens ["in", "days", "?", "bruhhhhhhhhh"]
# ::lemmas ["in", "days", "?", "bruhhhhhhhhh"]
(c16-3 / multiple
       :op1 (c16-1 / temporal-quantity
                   :unit (c16-4 / day)
                   :quant 1)
       :polarity (c16-0 / amr-unknown)
       :mod (c16-2 / bruh
                   :mode expressive))

# ::snt he hadn't eaten in days. I guess he had it his way lol
# ::tokens ["he", "had", "n't", "eaten", "in", "days", ".", "I", "guess", "he", "had", "it", "his", "way", "lol"]
# ::lemmas ["he", "have", "not", "eat", "in", "days", ".", "i", "guess", "he", "have", "it", "his", "way", "lol"]
(c17-6 / multi-sentence
       :snt1 (c17-2 / eat-01
                    :ARG0 (c17-14 / he)
                    :time (c17-3 / before
                                 :op1 (c17-11 / now)
                                 :duration (c17-4 / multiple
                                                  :op1 (c17-0 / temporal-quantity
                                                              :unit (c17-15 / day)
                                                              :quant 1)))
                    :polarity -)
       :snt2 (c17-7 / guess-01
                    :ARG0 (c17-9 / i)
                    :ARG1 (c17-8 / have-03
                                 :ARG0 (c17-10 / he)
                                 :ARG1 (c17-12 / way
                                               :poss c17-10))
                    :ARG2-of (c17-13 / laugh-01
                                     :ARG0 (c17-5 / i
                                                  :manner (c17-1 / loud)))))

# ::snt are you fucking kidding me?
# ::tokens ["are", "you", "fucking", "kidding", "me", "?"]
# ::lemmas ["be", "you", "fucking", "kid", "i", "?"]
(c18-1 / kid-01
       :polarity (c18-0 / amr-unknown)
       :ARG0 (c18-2 / you)
       :ARG2 (c18-3 / i)
       :mod (c18-4 / fucking
                   :mode expressive))

# ::snt should of starved his dumbass
# ::tokens ["should", "of", "starved", "his", "dumbass"]
# ::lemmas ["should", "of", "starve", "his", "dumbass"]
(c19-3 / recommend-01
       :ARG1 (c19-2 / starve-01
                    :ARG0 (c19-1 / he)
                    :ARG1 (c19-0 / dumbass
                                 :poss c19-1)))

# ::snt you can't starve people that in-custody!!
# ::tokens ["you", "ca", "n't", "starve", "people", "that", "in", "-", "custody", "!", "!"]
# ::lemmas ["you", "can", "not", "starve", "people", "that", "in", "-", "custody", "!", "!"]
(c20-5 / possible-01
       :ARG1 (c20-4 / starve-01
                    :ARG0 (c20-1 / you)
                    :ARG1 (c20-2 / person
                                 :mod (c20-0 / that)
                                 :ARG1-of (c20-3 / imprison-01)))
       :polarity -)

# ::snt He's in their custody. Would you rather they starve him and make the news that way??
# ::tokens ["He", "'s", "in", "their", "custody", ".", "Would", "you", "rather", "they", "starve", "him", "and", "make", "the", "news", "that", "way", "?", "?"]
# ::lemmas ["he", "be", "in", "their", "custody", ".", "would", "you", "rather", "they", "starve", "he", "and", "make", "the", "news", "that", "way", "?", "?"]
(c21-6 / multi-sentence
       :snt1 (c21-14 / custody
                     :poss (c21-1 / they)
                     :domain (c21-13 / he))
       :snt2 (c21-10 / prefer-01
                     :polarity (c21-0 / amr-unknown)
                     :ARG0 (c21-5 / you)
                     :ARG1 (c21-8 / and
                                  :op1 (c21-9 / starve-01
                                              :ARG0 (c21-3 / they)
                                              :ARG1 (c21-7 / he))
                                  :op2 (c21-2 / make-18
                                              :ARG0 c21-3
                                              :ARG1 (c21-11 / news)
                                              :manner (c21-12 / way
                                                              :mod (c21-4 / that))))))

# ::snt nobody gives a fuck that a deranged, racist, serial killer engaging in a hate crime got fake meat from Burger King, REPORT REAL NEWS!
# ::tokens ["nobody", "gives", "a", "fuck", "that", "a", "deranged", ",", "racist", ",", "serial", "killer", "engaging", "in", "a", "hate", "crime", "got", "fake", "meat", "from", "Burger", "King", ",", "REPORT", "REAL", "NEWS", "!"]
# ::lemmas ["nobody", "give", "a", "fuck", "that", "a", "derange", ",", "racist", ",", "serial", "killer", "engage", "in", "a", "hate", "crime", "get", "fake", "meat", "from", "Burger", "King", ",", "REPORT", "REAL", "news", "!"]
(c22-8 / give-16
       :ARG0 (c22-1 / nobody)
       :ARG1 (c22-2 / fuck)
       :ARG2 (c22-7 / get-01
                    :ARG0 (c22-13 / person
                                  :ARG0-of (c22-5 / kill-01)
                                  :mod (c22-15 / deranged)
                                  :mod (c22-3 / racist)
                                  :mod (c22-9 / serial)
                                  :ARG0-of (c22-17 / engage-01
                                                   :ARG2 (c22-11 / crime-02
                                                                 :ARG1 (c22-10 / hate-01))))
                    :ARG1 (c22-19 / meat
                                  :ARG1-of (c22-18 / fake-02))
                    :ARG2 (c22-12 / company
                                  :name (c22-6 / name
                                               :op1 "Burger"
                                               :op2 "King"))
                    :ARG1-of (c22-4 / cause-01
                                    :ARG0 (c22-0 / report-01
                                                 :ARG0 c22-13
                                                 :ARG1 (c22-14 / news
                                                               :ARG1-of (c22-16 / real-04))))))

# ::snt It's common police practice to do things like this especially if they need for them to corporate.
# ::tokens ["It", "'s", "common", "police", "practice", "to", "do", "things", "like", "this", "especially", "if", "they", "need", "for", "them", "to", "corporate", "."]
# ::lemmas ["it", "be", "common", "police", "practice", "to", "do", "thing", "like", "this", "especially", "if", "they", "need", "for", "they", "to", "corporate", "."]
(c23-6 / practice-01
       :ARG0 (c23-4 / police)
       :ARG1 (c23-9 / do-02
                    :ARG0 c23-4
                    :ARG1 (c23-0 / thing
                                 :ARG1-of (c23-1 / resemble-01
                                                 :ARG2 (c23-3 / this))))
       :mod (c23-8 / common)
       :condition (c23-7 / need-01
                         :ARG0 c23-4
                         :ARG1 c23-0
                         :beneficiary (c23-5 / corporation))
       :degree (c23-2 / especially))

# ::snt Don't they always do this? It's to get him to cooperate and confess.
# ::tokens ["Do", "n't", "they", "always", "do", "this", "?", "It", "'s", "to", "get", "him", "to", "cooperate", "and", "confess", "."]
# ::lemmas ["do", "not", "they", "always", "do", "this", "?", "it", "be", "to", "get", "he", "to", "cooperate", "and", "confess", "."]
(c24-3 / multi-sentence
       :snt1 (c24-11 / do-02
                     :ARG0 (c24-1 / they)
                     :ARG1 (c24-2 / this)
                     :time (c24-0 / always)
                     :polarity -)
       :snt2 (c24-10 / have-purpose-91
                     :ARG1 (c24-7 / it)
                     :ARG2 (c24-4 / get-04
                                  :ARG1 (c24-8 / and
                                               :op1 (c24-9 / cooperate-01
                                                           :ARG0 (c24-6 / he))
                                               :op2 (c24-5 / confess-01
                                                           :ARG0 c24-6)))))

# ::snt feed him rat shit
# ::tokens ["feed", "him", "rat", "shit"]
# ::lemmas ["feed", "he", "rat", "shit"]
(c25-3 / feed-01
       :ARG0 (c25-1 / you)
       :ARG1 (c25-2 / shit
                    :mod (c25-0 / rat))
       :ARG2 (c25-4 / he)
       :mode imperative)

# ::snt this is disgusting
# ::tokens ["this", "is", "disgusting"]
# ::lemmas ["this", "be", "disgusting"]
(c26-1 / disgust-01
       :ARG0 (c26-0 / this))

# ::snt lmao for $5
# ::tokens ["lmao", "for", "$", "5"]
# ::lemmas ["lmao", "for", "$", "5"]
(c27-4 / cost-01
       :ARG1 (c27-1 / monetary-quantity
                    :unit (c27-5 / dollar)
                    :quant 5)
       :ARG2 (c27-3 / laugh-01
                    :ARG0 (c27-2 / i)
                    :manner (c27-0 / loud)
                    :mode expressive))

# ::snt i think they heard about the two for $5 deal
# ::tokens ["i", "think", "they", "heard", "about", "the", "two", "for", "$", "5", "deal"]
# ::lemmas ["i", "think", "they", "hear", "about", "the", "two", "for", "$", "5", "deal"]
(c28-0 / think-01
       :ARG0 (c28-4 / i)
       :ARG1 (c28-6 / hear-01
                    :ARG0 (c28-2 / they)
                    :ARG1 (c28-7 / deal-01
                                 :ARG1 (c28-5 / person
                                              :quant 2)
                                 :ARG3 (c28-3 / monetary-quantity
                                              :unit (c28-1 / dollar)
                                              :quant 5))))

# ::snt There is no logical reason for them to do that. He deserved nothing kind at all!
# ::tokens ["There", "is", "no", "logical", "reason", "for", "them", "to", "do", "that", ".", "He", "deserved", "nothing", "kind", "at", "all", "!"]
# ::lemmas ["there", "be", "no", "logical", "reason", "for", "they", "to", "do", "that", ".", "he", "deserve", "nothing", "kind", "at", "all", "!"]
(c29-7 / multi-sentence
       :snt1 (c29-3 / reason
                    :mod (c29-8 / logic)
                    :ARG0-of (c29-10 / cause-01
                                     :ARG1 (c29-4 / do-02
                                                  :ARG0 (c29-1 / they)
                                                  :ARG1 (c29-5 / that)))
                    :polarity -)
       :snt2 (c29-2 / deserve-01
                    :ARG0 (c29-9 / he)
                    :ARG1 (c29-6 / kind
                                 :mod (c29-0 / at-all)
                                 :polarity -)))

# ::snt Which is common practice for many police departments since they aren't equipped with kitchens and are required to feed their prisoners
# ::tokens ["Which", "is", "common", "practice", "for", "many", "police", "departments", "since", "they", "are", "n't", "equipped", "with", "kitchens", "and", "are", "required", "to", "feed", "their", "prisoners"]
# ::lemmas ["which", "be", "common", "practice", "for", "many", "police", "department", "since", "they", "be", "not", "equip", "with", "kitchen", "and", "be", "require", "to", "feed", "their", "prisoner"]
(c30-10 / practice-01
        :ARG0 (c30-13 / department
                      :mod (c30-7 / police)
                      :quant (c30-6 / many))
        :ARG1 (c30-2 / thing)
        :mod (c30-11 / common)
        :ARG1-of (c30-8 / cause-01
                        :ARG0 (c30-0 / and
                                     :op1 (c30-4 / equip-01
                                                 :ARG1 c30-13
                                                 :ARG2 (c30-5 / kitchen)
                                                 :polarity -)
                                     :op2 (c30-3 / require-01
                                                 :ARG1 (c30-12 / feed-01
                                                               :ARG0 c30-13
                                                               :ARG2 (c30-1 / person
                                                                            :ARG1-of (c30-9 / imprison-01
                                                                                            :ARG0 c30-13)))
                                                 :ARG2 c30-13))))

# ::snt really !!!!! Buy the racist killer Burger King I would have given him nothing
# ::tokens ["really", "!", "!", "!", "!", "!", "Buy", "the", "racist", "killer", "Burger", "King", "I", "would", "have", "given", "him", "nothing"]
# ::lemmas ["really", "!", "!", "!", "!", "!", "buy", "the", "racist", "killer", "Burger", "King", "i", "would", "have", "give", "he", "nothing"]
(c31-5 / multi-sentence
       :snt1 (c31-0 / real-04
                    :mode expressive)
       :snt2 (c31-1 / buy-01
                    :ARG0 (c31-4 / you)
                    :ARG1 (c31-11 / company
                                  :name (c31-9 / name
                                               :op1 "Burger"
                                               :op2 "King")
                                  :mod (c31-7 / racist)
                                  :ARG0-of (c31-2 / kill-01))
                    :ARG3-of (c31-6 / give-01
                                    :ARG0 (c31-8 / i)
                                    :ARG1 (c31-3 / nothing)
                                    :ARG2 (c31-10 / he))
                    :mode imperative))

# ::snt its a good tactic lol
# ::tokens ["its", "a", "good", "tactic", "lol"]
# ::lemmas ["its", "a", "good", "tactic", "lol"]
(c32-2 / good-02
       :ARG1 (c32-0 / tactic)
       :ARG2-of (c32-1 / laugh-01
                       :manner (c32-3 / loud)
                       :mode expressive))

# ::snt Eyewitness news?? Unfollow
# ::tokens ["Eyewitness", "news", "?", "?", "Unfollow"]
# ::lemmas ["eyewitness", "news", "?", "?", "unfollow"]
(c33-2 / multi-sentence
       :snt1 (c33-3 / news
                    :mod (c33-0 / eyewitness))
       :snt2 (c33-4 / follow-02
                    :ARG0 (c33-1 / you)
                    :polarity -
                    :mode imperative))

# ::snt Probably to convince him to confess. Thats not uncommon.
# ::tokens ["Probably", "to", "convince", "him", "to", "confess", ".", "That", "s", "not", "uncommon", "."]
# ::lemmas ["probably", "to", "convince", "he", "to", "confess", ".", "that", "s", "not", "uncommon", "."]
(c34-2 / multi-sentence
       :snt1 (c34-5 / probable
                    :domain (c34-6 / have-purpose-91
                                   :ARG2 (c34-7 / convince-01
                                                :ARG1 (c34-4 / he)
                                                :ARG2 (c34-3 / confess-01
                                                             :ARG0 c34-4))))
       :snt2 (c34-1 / common
                    :domain (c34-0 / that)
                    :polarity -))
