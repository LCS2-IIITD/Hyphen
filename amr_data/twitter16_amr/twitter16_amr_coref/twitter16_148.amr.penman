# ::snt Maybe if the government is informed that Americans will NOT be going after, but will be recruiting refugees if there is an attack&gt;
# ::tokens ["Maybe", "if", "the", "government", "is", "informed", "that", "Americans", "will", "NOT", "be", "going", "after", ",", "but", "will", "be", "recruiting", "refugees", "if", "there", "is", "an", "attack&gt", ";"]
# ::lemmas ["maybe", "if", "the", "government", "be", "inform", "that", "Americans", "will", "not", "be", "go", "after", ",", "but", "will", "be", "recruit", "refugee", "if", "there", "be", "an", "attack&gt", ";"]
(c1-10 / possible-01
       :ARG1 (c1-13 / have-condition-91
                    :ARG2 (c1-8 / inform-01
                                :ARG1 (c1-4 / government-organization
                                            :ARG0-of (c1-3 / govern-01))
                                :ARG2 (c1-14 / contrast-01
                                             :ARG1 (c1-12 / go-03
                                                          :ARG0 (c1-5 / person
                                                                      :mod (c1-6 / country
                                                                                 :name (c1-11 / name
                                                                                              :op1 "America")))
                                                          :polarity -)
                                             :ARG2 (c1-1 / recruit-01
                                                         :ARG0 c1-4
                                                         :ARG1 (c1-7 / refugee)
                                                         :condition (c1-0 / and
                                                                          :op1 (c1-9 / attack-01)
                                                                          :op2 (c1-2 / gt)))))))

# ::snt very muscle
# ::tokens ["very", "muscle"]
# ::lemmas ["very", "muscle"]
(c2-1 / muscle
      :degree (c2-0 / very))

# ::snt on vas dguster les mec. Et le gvt bobo pensent a rien et bien CA vas tre chaud pour les mettre dehors
# ::tokens ["on", "vas", "dguster", "les", "mec", ".", "Et", "le", "gvt", "bobo", "pensent", "a", "rien", "et", "bien", "CA", "vas", "tre", "chaud", "pour", "les", "mettre", "dehors"]
# ::lemmas ["on", "va", "dguster", "les", "mec", ".", "Et", "le", "gvt", "bobo", "pensent", "a", "rien", "et", "bien", "CA", "vas", "tre", "chaud", "pour", "les", "mettre", "dehor"]
(c3-21 / multi-sentence
       :snt1 (c3-6 / guster-01
                   :ARG0 (c3-14 / amr-unintelligible
                                :value "Vegas")
                   :ARG1 (c3-13 / amr-unintelligible
                                :value "mec"))
       :snt2 (c3-0 / and
                   :op1 (c3-18 / pensent-01
                               :ARG0 (c3-1 / bobo
                                           :mod (c3-7 / government-organization
                                                      :ARG0-of (c3-12 / govern-01)))
                               :ARG1 (c3-4 / rien))
                   :op2 (c3-16 / penent-01
                               :ARG0 (c3-10 / state
                                            :name (c3-2 / name
                                                        :op1 "CA"))
                               :ARG1 (c3-9 / amr-unintelligible
                                           :value "Vien"))
                   :op3 (c3-19 / et-cetera)
                   :snt3 (c3-11 / et-cetera
                                :op1 (c3-15 / et-cetera)
                                :op2 (c3-3 / et-cetera)
                                :op4 (c3-5 / et-cetera
                                           :op1 (c3-8 / et-cetera)
                                           :op2 (c3-20 / et-cetera
                                                       :op1 (c3-17 / et-cetera))))))

# ::snt it's drug smugglers in Australia years ago
# ::tokens ["it", "'s", "drug", "smugglers", "in", "Australia", "years", "ago"]
# ::lemmas ["it", "be", "drug", "smuggler", "in", "Australia", "years", "ago"]
(c4-5 / smuggle-01
      :ARG0 (c4-6 / person)
      :ARG1 (c4-9 / drug)
      :location (c4-8 / country
                      :name (c4-7 / name
                                  :op1 "Australia"))
      :time (c4-1 / before
                  :op1 (c4-2 / now)
                  :quant (c4-4 / multiple
                               :op1 (c4-0 / temporal-quantity
                                          :unit (c4-3 / year)
                                          :quant 1))))

# ::snt via
# ::tokens ["via"]
# ::lemmas ["via"]
(c5-0 / via)

# ::snt yeah, when the line forms, only thugs are the first guys.
# ::tokens ["yeah", ",", "when", "the", "line", "forms", ",", "only", "thugs", "are", "the", "first", "guys", "."]
# ::lemmas ["yeah", ",", "when", "the", "line", "form", ",", "only", "thug", "be", "the", "first", "guy", "."]
(c6-2 / guy
      :ord (c6-3 / ordinal-entity
                 :value 1)
      :mod (c6-0 / only)
      :time (c6-5 / form-01
                  :ARG1 (c6-4 / line))
      :mod (c6-1 / yeah
                 :mode expressive))

# ::snt Wish I could afford the guy's designer clothing.
# ::tokens ["Wish", "I", "could", "afford", "the", "guy", "'s", "designer", "clothing", "."]
# ::lemmas ["wish", "i", "could", "afford", "the", "guy", "'s", "designer", "clothing", "."]
(c7-6 / wish-01
      :ARG0 (c7-4 / i)
      :ARG1 (c7-5 / possible-01
                  :ARG1 (c7-0 / afford-01
                              :ARG0 c7-4
                              :ARG1 (c7-7 / clothing
                                          :poss (c7-2 / guy)
                                          :mod (c7-3 / person
                                                     :ARG0-of (c7-1 / design-01))))))

# ::snt hate to question your detective work, but...
# ::tokens ["hate", "to", "question", "your", "detective", "work", ",", "but", "..."]
# ::lemmas ["hate", "to", "question", "your", "detective", "work", ",", "but", "..."]
(c8-6 / contrast-01
      :ARG1 (c8-5 / hate-01
                  :ARG0 (c8-3 / i)
                  :ARG1 (c8-2 / question-01
                              :ARG0 c8-3
                              :ARG1 (c8-4 / work-01
                                          :ARG0 (c8-1 / you)
                                          :ARG1 (c8-0 / detective)))))

# ::snt bloody hell, fit.
# ::tokens ["bloody", "hell", ",", "fit", "."]
# ::lemmas ["bloody", "hell", ",", "fit", "."]
(c9-1 / fit-05
      :mod (c9-2 / hell
                 :mod (c9-0 / bloody)))

# ::snt Good grief! Assassins, soldiers, definitely not here to assimilate.
# ::tokens ["Good", "grief", "!", "Assassins", ",", "soldiers", ",", "definitely", "not", "here", "to", "assimilate", "."]
# ::lemmas ["good", "grief", "!", "assassin", ",", "soldier", ",", "definitely", "not", "here", "to", "assimilate", "."]
(c10-5 / multi-sentence
       :snt1 (c10-6 / grief
                    :ARG1-of (c10-4 / good-02)
                    :mode expressive)
       :snt2 (c10-2 / be-located-at-91
                    :ARG1 (c10-0 / and
                                 :op1 (c10-10 / person
                                              :ARG0-of (c10-12 / assassinate-01))
                                 :op2 (c10-7 / person
                                             :ARG0-of (c10-11 / have-org-role-91
                                                              :ARG2 (c10-9 / soldier))))
                    :ARG2 (c10-8 / here)
                    :mod (c10-3 / definite)
                    :purpose (c10-1 / assimilate-01
                                    :ARG1 c10-0)
                    :polarity -))

# ::snt ...no dubt
# ::tokens ["...", "no", "dubt"]
# ::lemmas ["...", "no", "dubt"]
(c11-0 / dubt
       :polarity -)

# ::snt Are they sure they didn't swim across the Med, towing boats behind them!
# ::tokens ["Are", "they", "sure", "they", "did", "n't", "swim", "across", "the", "Med", ",", "towing", "boats", "behind", "them", "!"]
# ::lemmas ["be", "they", "sure", "they", "do", "not", "swim", "across", "the", "Med", ",", "tow", "boat", "behind", "they", "!"]
(c12-7 / sure-02
       :polarity (c12-0 / amr-unknown)
       :ARG0 (c12-2 / they)
       :ARG1 (c12-1 / swim-01
                    :ARG0 c12-2
                    :ARG1 (c12-9 / across
                                 :op1 (c12-3 / river
                                             :name (c12-8 / name
                                                          :op1 "Med")))
                    :manner (c12-5 / tow-01
                                   :ARG0 c12-2
                                   :ARG1 (c12-4 / boat)
                                   :ARG2 (c12-6 / behind
                                                :op1 c12-2))
                    :polarity -))

# ::snt Die brede gasten zijn leden van de australische kustwacht.
# ::tokens ["Die", "brede", "gasten", "zijn", "leden", "van", "de", "australische", "kustwacht", "."]
# ::lemmas ["die", "brede", "gasten", "zijn", "leden", "van", "de", "australische", "kustwacht", "."]
(c13-2 / zijn-01
       :ARG0 (c13-3 / person
                    :name (c13-4 / name
                                 :op1 "Die"
                                 :op2 "Breede"
                                 :op3 "Gasten"))
       :ARG1 (c13-5 / lead-01
                    :ARG0 c13-3
                    :ARG2 (c13-0 / kustwacht
                                 :mod (c13-6 / country
                                             :name (c13-1 / name
                                                          :op1 "Australia")))))

# ::snt Wat een klein beetje knippen en plakken doet met een plaatje. Dat zijn geen vluchtelingen.
# ::tokens ["Wat", "een", "klein", "beetje", "knippen", "en", "plakken", "doet", "met", "een", "plaatje", ".", "Dat", "zijn", "geen", "vluchtelingen", "."]
# ::lemmas ["Wat", "een", "klein", "beetje", "knippen", "en", "plakken", "doet", "meet", "een", "plaatje", ".", "dat", "zijn", "geen", "vluchtelingen", "."]
(c14-6 / multi-sentence
       :snt1 (c14-16 / doet-02
                     :ARG0 (c14-0 / and
                                  :op1 (c14-12 / person
                                               :mod (c14-3 / beetje
                                                           :ARG1-of (c14-7 / plant-01)))
                                  :op2 (c14-1 / person
                                              :mod (c14-5 / beetje))
                                  :ARG1-of (c14-11 / plant-01
                                                   :ARG1-of (c14-8 / plant-01)))
                     :ARG1 (c14-4 / meet-03
                                  :ARG0 c14-0
                                  :ARG1 (c14-15 / plakken
                                                :mod (c14-2 / et-cetera)))
                     :mod (c14-14 / wat))
       :snt2 (c14-10 / zijn-01
                     :ARG1 (c14-13 / vluchteling
                                   :mod (c14-9 / geen))))
