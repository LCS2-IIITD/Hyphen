# ::snt Rupert's on a global mission to make the world dumb!
# ::tokens ["Rupert", "'s", "on", "a", "global", "mission", "to", "make", "the", "world", "dumb", "!"]
# ::lemmas ["Rupert", "'s", "on", "a", "global", "mission", "to", "make", "the", "world", "dumb", "!"]
(c1-1 / mission-01
      :ARG0 (c1-3 / person
                  :name (c1-4 / name
                              :op1 "Rupert"))
      :ARG1 (c1-0 / make-02
                  :ARG0 c1-3
                  :ARG1 (c1-6 / dumb
                              :domain (c1-5 / world)))
      :mod (c1-2 / globe))

# ::snt - David Koch now has control of NPR and the American Museum of Natural History. Head of CBS love Trump. Pattern
# ::tokens ["-", "David", "Koch", "now", "has", "control", "of", "NPR", "and", "the", "American", "Museum", "of", "Natural", "History", ".", "Head", "of", "CBS", "love", "Trump", ".", "Pattern"]
# ::lemmas ["-", "David", "Koch", "now", "have", "control", "of", "NPR", "and", "the", "American", "Museum", "of", "Natural", "History", ".", "head", "of", "CBS", "love", "Trump", ".", "pattern"]
(c2-5 / multi-sentence
      :snt1 (c2-17 / control-01
                   :ARG0 (c2-10 / person
                                :name (c2-11 / name
                                             :op1 "David"
                                             :op2 "Koch"))
                   :ARG1 (c2-0 / and
                               :op1 (c2-6 / publication
                                          :name (c2-4 / name
                                                      :op1 "NPR"))
                               :op2 (c2-1 / publication
                                          :name (c2-13 / name
                                                       :op1 "American"
                                                       :op2 "Museum"
                                                       :op3 "of"
                                                       :op4 "Natural"
                                                       :op5 "History")))
                   :time (c2-3 / now))
      :snt2 (c2-15 / love-01
                   :ARG0 (c2-9 / person
                               :ARG0-of (c2-16 / head-01
                                               :ARG1 (c2-7 / publication
                                                           :name (c2-14 / name
                                                                        :op1 "CBS"))))
                   :ARG1 (c2-2 / person
                               :name (c2-12 / name
                                            :op1 "Trump")))
      :snt3 (c2-8 / pattern-01))

# ::snt Murdock keeping his stupid sheep in line with ANYTHING but Truth! If there is a hell he should rot there! RT
# ::tokens ["Murdock", "keeping", "his", "stupid", "sheep", "in", "line", "with", "ANYTHING", "but", "Truth", "!", "If", "there", "is", "a", "hell", "he", "should", "rot", "there", "!", "RT"]
# ::lemmas ["murdock", "keep", "his", "stupid", "sheep", "in", "line", "with", "anything", "but", "Truth", "!", "if", "there", "be", "a", "hell", "he", "should", "rot", "there", "!", "rt"]
(c3-7 / multi-sentence
      :snt1 (c3-5 / keep-02
                  :ARG0 (c3-11 / person
                               :name (c3-12 / name
                                            :op1 "Murdock"))
                  :ARG1 (c3-10 / sheep
                               :mod (c3-0 / stupid)
                               :poss c3-11)
                  :prep-in (c3-13 / line-up-02
                                  :ARG1 (c3-1 / anything
                                              :ARG2-of (c3-4 / except-01
                                                             :ARG1 (c3-2 / truth)))))
      :snt2 (c3-3 / recommend-01
                  :ARG1 (c3-8 / rot-01
                              :ARG1 (c3-14 / he)
                              :location (c3-6 / there)
                              :condition (c3-9 / hell))))

# ::snt knew once Murdoch got his hand on it the whole purpose of the mag would be to suit his greed grab.
# ::tokens ["knew", "once", "Murdoch", "got", "his", "hand", "on", "it", "the", "whole", "purpose", "of", "the", "mag", "would", "be", "to", "suit", "his", "greed", "grab", "."]
# ::lemmas ["know", "once", "Murdoch", "get", "his", "hand", "on", "it", "the", "whole", "purpose", "of", "the", "mag", "would", "be", "to", "suit", "his", "greed", "grab", "."]
(c4-0 / know-01
      :ARG1 (c4-11 / have-purpose-91
                   :ARG1 (c4-1 / magazine)
                   :ARG2 (c4-6 / suit-01
                               :ARG1 c4-1
                               :ARG2 (c4-2 / grab-01
                                           :ARG0 (c4-7 / person
                                                       :name (c4-8 / name
                                                                   :op1 "Murdoch")
                                                       :part (c4-4 / hand))
                                           :ARG1 (c4-3 / greed)))
                   :mod (c4-10 / whole)
                   :time (c4-9 / get-04
                               :ARG0 c4-7
                               :ARG1 c4-4
                               :prep-on (c4-5 / it))))

# ::snt - Good by to an American Icon! RIP
# ::tokens ["-", "Good", "by", "to", "an", "American", "Icon", "!", "RIP"]
# ::lemmas ["-", "good", "by", "to", "an", "American", "Icon", "!", "RIP"]
(c5-1 / multi-sentence
      :snt1 (c5-4 / say-01
                  :ARG1 (c5-2 / goodbye)
                  :ARG2 (c5-3 / icon
                              :mod (c5-6 / country
                                         :name (c5-5 / name
                                                     :op1 "America"))))
      :snt2 (c5-0 / RIP-01))

# ::snt well, another one bites the dust unfortunately .....
# ::tokens ["well", ",", "another", "one", "bites", "the", "dust", "unfortunately", "....."]
# ::lemmas ["well", ",", "another", "one", "bite", "the", "dust", "unfortunately", "....."]
(c6-1 / bite-01
      :ARG0 (c6-2 / one
                  :mod (c6-0 / another))
      :ARG1 (c6-4 / dust)
      :ARG2-of (c6-3 / fortunate-01
                     :polarity -))

# ::snt so sad!
# ::tokens ["so", "sad", "!"]
# ::lemmas ["so", "sad", "!"]
(c7-1 / sad-02
      :degree (c7-0 / so))

# ::snt Murdoch is a fucking slimy scum merchant.
# ::tokens ["Murdoch", "is", "a", "fucking", "slimy", "scum", "merchant", "."]
# ::lemmas ["Murdoch", "be", "a", "fucking", "slimy", "scum", "merchant", "."]
(c8-4 / person
      :ARG0-of (c8-1 / merchandise-01
                     :ARG1 (c8-3 / scum))
      :mod (c8-0 / slimy
                 :mod (c8-6 / fucking))
      :domain (c8-2 / person
                    :name (c8-5 / name
                                :op1 "Murdoch")))

# ::snt *Sigh* - f**king tragic.
# ::tokens ["*", "Sigh", "*", "-", "f**king", "tragic", "."]
# ::lemmas ["*", "sigh", "*", "-", "f**ke", "tragic", "."]
(c9-0 / and
      :op1 (c9-3 / sigh-02)
      :op2 (c9-2 / tragic
                 :mod (c9-1 / fucking
                            :mode expressive)))

# ::snt ghosts bro
# ::tokens ["ghosts", "bro"]
# ::lemmas ["ghost", "bro"]
(c10-3 / person
       :ARG0-of (c10-2 / have-rel-role-91
                       :ARG1 (c10-1 / ghost)
                       :ARG2 (c10-0 / bro)))

# ::snt I cancelled my NG subscription years ago. The writing then wasn't much better.
# ::tokens ["I", "cancelled", "my", "NG", "subscription", "years", "ago", ".", "The", "writing", "then", "was", "n't", "much", "better", "."]
# ::lemmas ["i", "cancel", "my", "NG", "subscription", "years", "ago", ".", "the", "writing", "then", "be", "not", "much", "well", "."]
(c11-5 / multi-sentence
       :snt1 (c11-16 / cancel-01
                     :ARG0 (c11-8 / i)
                     :ARG1 (c11-9 / subscribe-01
                                  :ARG0 c11-8
                                  :ARG1 (c11-10 / product
                                                :name (c11-11 / name
                                                              :op1 "NG")))
                     :time (c11-1 / before
                                  :op1 (c11-2 / now)
                                  :quant (c11-3 / multiple
                                                :op1 (c11-0 / temporal-quantity
                                                            :unit (c11-4 / year)
                                                            :quant 1))))
       :snt2 (c11-6 / good-02
                    :ARG1 (c11-14 / write-01
                                  :time (c11-7 / then))
                    :ARG2-of (c11-15 / have-degree-91
                                     :ARG1 c11-14
                                     :ARG3 (c11-12 / more
                                                   :quant (c11-13 / much)))
                    :polarity -))

# ::snt noooooooo! That's so dumb.
# ::tokens ["noooooooo", "!", "That", "'s", "so", "dumb", "."]
# ::lemmas ["noooooooo", "!", "that", "be", "so", "dumb", "."]
(c12-2 / dumb
       :domain (c12-0 / that)
       :degree (c12-1 / so))

# ::snt That is a terrible source. Also, the edition "just hit stands" last month, so it's a flat lie.
# ::tokens ["That", "is", "a", "terrible", "source", ".", "Also", ",", "the", "edition", "\"", "just", "hit", "stands", "\"", "last", "month", ",", "so", "it", "'s", "a", "flat", "lie", "."]
# ::lemmas ["that", "be", "a", "terrible", "source", ".", "also", ",", "the", "edition", "\"", "just", "hit", "stand", "\"", "last", "month", ",", "so", "it", "be", "a", "flat", "lie", "."]
(c13-7 / multi-sentence
       :snt1 (c13-9 / source
                    :ARG1-of (c13-1 / terrible-01)
                    :domain (c13-5 / that))
       :snt2 (c13-13 / cause-01
                     :ARG0 (c13-12 / hit-stand-04
                                   :ARG1 (c13-3 / edition)
                                   :mod (c13-4 / just)
                                   :time (c13-6 / month
                                                :mod (c13-10 / last)))
                     :ARG1 (c13-2 / lie-08
                                  :ARG1 (c13-8 / it)
                                  :ARG1-of (c13-11 / flat-06))
                     :mod (c13-0 / also)))

# ::snt This isn't true, it's an old cover that's doing the rounds
# ::tokens ["This", "is", "n't", "true", ",", "it", "'s", "an", "old", "cover", "that", "'s", "doing", "the", "rounds"]
# ::lemmas ["this", "be", "not", "true", ",", "it", "be", "an", "old", "cover", "that", "be", "do", "the", "round"]
(c14-5 / contrast-01
       :ARG1 (c14-0 / true-01
                    :ARG1 (c14-2 / this)
                    :polarity -)
       :ARG2 (c14-3 / cover
                    :mod (c14-4 / old)
                    :ARG0-of (c14-1 / round-03)
                    :domain c14-2))

# ::snt Come on folks, check your bloody sources.
# ::tokens ["Come", "on", "folks", ",", "check", "your", "bloody", "sources", "."]
# ::lemmas ["come", "on", "folk", ",", "check", "your", "bloody", "source", "."]
(c15-0 / and
       :op1 (c15-5 / come-on-25
                   :ARG1 (c15-4 / folk)
                   :mode imperative)
       :op2 (c15-2 / check-01
                   :ARG0 c15-4
                   :ARG1 (c15-3 / source
                                :poss c15-4
                                :mod (c15-1 / bloody
                                            :mode expressive))
                   :mode imperative))

# ::snt this is something sad to learn of. NatGeo was one of the last.
# ::tokens ["this", "is", "something", "sad", "to", "learn", "of", ".", "NatGeo", "was", "one", "of", "the", "last", "."]
# ::lemmas ["this", "be", "something", "sad", "to", "learn", "of", ".", "NatGeo", "be", "one", "of", "the", "last", "."]
(c16-3 / multi-sentence
       :snt1 (c16-6 / sad-02
                    :ARG0 (c16-9 / learn-01
                                 :ARG1 (c16-0 / something
                                              :domain (c16-1 / this))))
       :snt2 (c16-5 / include-91
                    :ARG1 (c16-7 / person
                                 :name (c16-8 / name
                                              :op1 "NatGeo"))
                    :ARG2 (c16-4 / person
                                 :mod (c16-2 / last))))

# ::snt that's an insult and spit in the eye to everything NG stood for.
# ::tokens ["that", "'s", "an", "insult", "and", "spit", "in", "the", "eye", "to", "everything", "NG", "stood", "for", "."]
# ::lemmas ["that", "be", "an", "insult", "and", "spit", "in", "the", "eye", "to", "everything", "NG", "stand", "for", "."]
(c17-0 / and
       :op1 (c17-4 / insult-01
                   :domain (c17-2 / that))
       :op2 (c17-5 / spit-01
                   :ARG2 (c17-3 / eye)
                   :beneficiary (c17-7 / everything
                                       :ARG1-of (c17-1 / stand-08
                                                       :ARG0 (c17-6 / person
                                                                    :name (c17-8 / name
                                                                                 :op1 "NG"))))))

# ::snt is there anything he doesn't ruin?!
# ::tokens ["is", "there", "anything", "he", "does", "n't", "ruin", "?", "!"]
# ::lemmas ["be", "there", "anything", "he", "do", "not", "ruin", "?", "!"]
(c18-0 / anything
       :polarity (c18-3 / amr-unknown)
       :ARG1-of (c18-1 / ruin-01
                       :ARG0 (c18-2 / he)
                       :polarity -))

# ::snt sad
# ::tokens ["sad"]
# ::lemmas ["sad"]
(c19-0 / sad-02)

# ::snt hwhhhhhhyyyyyy
# ::tokens ["hwhhhhhhyyyyyy"]
# ::lemmas ["hwhhhhhhyyyyyy"]
(c20-0 / hwh
       :mode expressive)

# ::snt someone should do something!
# ::tokens ["someone", "should", "do", "something", "!"]
# ::lemmas ["someone", "should", "do", "something", "!"]
(c21-3 / recommend-01
       :ARG1 (c21-1 / do-02
                    :ARG0 (c21-2 / someone)
                    :ARG1 (c21-0 / something))
       :mode expressive)

# ::snt Mmm, yes and no
# ::tokens ["Mmm", ",", "yes", "and", "no"]
# ::lemmas ["mmm", ",", "yes", "and", "no"]
(c22-0 / and
       :op1 (c22-1 / yes)
       :op2 (c22-3 / no)
       :mod (c22-2 / hmm))

# ::snt There's a special room in hell that awaits him.
# ::tokens ["There", "'s", "a", "special", "room", "in", "hell", "that", "awaits", "him", "."]
# ::lemmas ["there", "be", "a", "special", "room", "in", "hell", "that", "await", "he", "."]
(c23-0 / await-01
       :ARG1 (c23-4 / he)
       :ARG2 (c23-1 / room
                    :ARG1-of (c23-3 / special-02)
                    :location (c23-2 / hell)))

# ::snt This is sad, so sad.
# ::tokens ["This", "is", "sad", ",", "so", "sad", "."]
# ::lemmas ["this", "be", "sad", ",", "so", "sad", "."]
(c24-2 / sad-02
       :ARG0 (c24-1 / this)
       :degree (c24-0 / so))

# ::snt Hmm. Doesn't look like the kind of cover one wd expect from the NG. And I don't mean that in a good way.
# ::tokens ["Hmm", ".", "Does", "n't", "look", "like", "the", "kind", "of", "cover", "one", "wd", "expect", "from", "the", "NG", ".", "And", "I", "do", "n't", "mean", "that", "in", "a", "good", "way", "."]
# ::lemmas ["hmm", ".", "do", "not", "look", "like", "the", "kind", "of", "cover", "one", "wd", "expect", "from", "the", "NG", ".", "and", "i", "do", "not", "mean", "that", "in", "a", "good", "way", "."]
(c25-5 / multi-sentence
       :snt1 (c25-13 / hmm
                     :mode expressive)
       :snt2 (c25-0 / and
                    :op2 (c25-12 / look-02
                                 :ARG1 (c25-14 / cover-03
                                               :mod (c25-4 / kind)
                                               :ARG1-of (c25-2 / expect-01
                                                               :ARG0 (c25-10 / one)
                                                               :source (c25-8 / publication
                                                                              :name (c25-9 / name
                                                                                           :op1 "NG"))))
                                 :polarity -)
                    :snt3-of c25-5)
       :op2 (c25-3 / mean-01
                   :ARG0 (c25-7 / i)
                   :ARG1 (c25-1 / that)
                   :manner (c25-11 / way
                                   :ARG1-of (c25-6 / good-02))
                   :polarity -))

# ::snt This hurts my soul.
# ::tokens ["This", "hurts", "my", "soul", "."]
# ::lemmas ["this", "hurt", "my", "soul", "."]
(c26-2 / hurt-01
       :ARG0 (c26-1 / this)
       :ARG1 (c26-3 / soul
                    :part-of (c26-0 / i)))
