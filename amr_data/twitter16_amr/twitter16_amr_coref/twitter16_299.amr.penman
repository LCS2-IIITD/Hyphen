# ::snt yes from her newly decorated LA living room. Just like Egypt.
# ::tokens ["yes", "from", "her", "newly", "decorated", "LA", "living", "room", ".", "Just", "like", "Egypt", "."]
# ::lemmas ["yes", "from", "her", "newly", "decorate", "LA", "living", "room", ".", "just", "like", "Egypt", "."]
(c1-4 / multi-sentence
      :snt1 (c1-3 / yes
                  :source (c1-0 / room
                                :mod (c1-10 / living)
                                :ARG1-of (c1-12 / decorate-01
                                                :ARG2 (c1-7 / she)
                                                :ARG1-of (c1-8 / new-01))
                                :location (c1-11 / city
                                                 :name (c1-2 / name
                                                             :op1 "LA"))))
      :snt2 (c1-6 / resemble-01
                  :ARG2 (c1-5 / country
                              :name (c1-9 / name
                                          :op1 "Egypt"))
                  :mod (c1-1 / just)))

# ::snt agreed.
# ::tokens ["agreed", "."]
# ::lemmas ["agree", "."]
(c2-0 / agree-01)

# ::snt ": The gunman in Ottawa has been shot and killed. I'm at a loss for words this morning. That isn't my Canada.
# ::tokens ["\"", ":", "The", "gunman", "in", "Ottawa", "has", "been", "shot", "and", "killed", ".", "I", "'m", "at", "a", "loss", "for", "words", "this", "morning", ".", "That", "is", "n't", "my", "Canada", "."]
# ::lemmas ["\"", ":", "the", "gunman", "in", "Ottawa", "have", "be", "shoot", "and", "kill", ".", "i", "be", "at", "a", "loss", "for", "word", "this", "morning", ".", "that", "be", "not", "my", "Canada", "."]
(c3-6 / multi-sentence
      :snt1 (c3-0 / and
                  :op1 (c3-10 / shoot-02
                              :ARG1 (c3-7 / gunman
                                          :location (c3-14 / city
                                                           :name (c3-11 / name
                                                                        :op1 "Ottawa"))))
                  :op2 (c3-3 / kill-01
                             :ARG1 c3-7))
      :snt2 (c3-13 / lose-07
                   :ARG1 (c3-12 / word)
                   :ARG2 (c3-9 / i)
                   :time (c3-4 / date-entity
                               :dayperiod (c3-2 / morning)
                               :mod (c3-1 / today)))
      :snt3 (c3-8 / country
                  :name (c3-5 / name
                              :op1 "Canada")
                  :poss c3-9
                  :polarity -))

# ::snt It would seem that indeed it IS our Canada.
# ::tokens ["It", "would", "seem", "that", "indeed", "it", "IS", "our", "Canada", "."]
# ::lemmas ["it", "would", "seem", "that", "indeed", "it", "be", "our", "Canada", "."]
(c4-1 / seem-01
      :ARG1 (c4-5 / country
                  :name (c4-2 / name
                              :op1 "Canada")
                  :poss (c4-3 / we)
                  :domain (c4-0 / it)
                  :mod (c4-4 / indeed)))
