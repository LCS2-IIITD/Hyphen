# ::snt is that so?
# ::tokens ["is", "that", "so", "?"]
# ::lemmas ["be", "that", "so", "?"]
(c1-2 / so
      :polarity (c1-0 / amr-unknown)
      :domain (c1-1 / that))

# ::snt Really?
# ::tokens ["Really", "?"]
# ::lemmas ["really", "?"]
(c2-1 / real-04
      :polarity (c2-0 / amr-unknown))

# ::snt OMG Trump.
# ::tokens ["OMG", "Trump", "."]
# ::lemmas ["OMG", "Trump", "."]
(c3-1 / person
      :name (c3-2 / name
                  :op1 "Trump")
      :mod (c3-0 / oh-my-god
                 :mode expressive)
      :mode expressive)

# ::snt I love u el chapo
# ::tokens ["I", "love", "u", "el", "chapo"]
# ::lemmas ["i", "love", "u", "el", "chapo"]
(c4-1 / love-01
      :ARG0 (c4-2 / i)
      :ARG1 (c4-0 / you
                  :mod (c4-3 / chapo)))

# ::snt Shit I'm trying to get paid bye bye Trump
# ::tokens ["Shit", "I", "'m", "trying", "to", "get", "paid", "bye", "bye", "Trump"]
# ::lemmas ["shit", "i", "be", "try", "to", "get", "pay", "bye", "bye", "Trump"]
(c5-5 / say-01
      :ARG1 (c5-0 / shit-01
                  :ARG1 (c5-1 / try-01
                              :ARG0 (c5-4 / i)
                              :ARG1 (c5-6 / pay-01
                                          :ARG2 c5-4
                                          :manner (c5-2 / bye))))
      :ARG2 (c5-3 / person
                  :name (c5-7 / name
                              :op1 "Trump")))

# ::snt oops~
# ::tokens ["oops~"]
# ::lemmas ["oops~"]
(c6-0 / oops
      :mode expressive)

# ::snt I'm on a mission famo let call in my team real quick this is to EZ
# ::tokens ["I", "'m", "on", "a", "mission", "famo", "let", "call", "in", "my", "team", "real", "quick", "this", "is", "to", "EZ"]
# ::lemmas ["i", "be", "on", "a", "mission", "famo", "let", "call", "in", "my", "team", "real", "quick", "this", "be", "to", "EZ"]
(c7-6 / multi-sentence
      :snt1 (c7-3 / mission-01
                  :ARG0 (c7-8 / i))
      :snt2 (c7-11 / let-01
                   :ARG0 (c7-5 / you)
                   :ARG1 (c7-13 / call-in-04
                                :ARG0 (c7-2 / you)
                                :ARG1 (c7-0 / team
                                            :poss (c7-12 / i))
                                :ARG1-of (c7-7 / quick-02
                                               :degree (c7-1 / really))
                                :domain (c7-4 / this
                                              :beneficiary (c7-9 / person
                                                                 :name (c7-10 / name
                                                                              :op1 "EZ"))))
                   :mode imperative))

# ::snt where he at?
# ::tokens ["where", "he", "at", "?"]
# ::lemmas ["where", "he", "at", "?"]
(c8-1 / he
      :location (c8-0 / amr-unknown))

# ::snt ...Well... Who here couldn't use some money?
# ::tokens ["...", "Well", "...", "Who", "here", "could", "n't", "use", "some", "money", "?"]
# ::lemmas ["...", "well", "...", "who", "here", "could", "not", "use", "some", "money", "?"]
(c9-4 / possible-01
      :ARG1 (c9-2 / use-01
                  :ARG0 (c9-0 / amr-unknown
                              :location (c9-6 / here))
                  :ARG1 (c9-1 / money
                              :quant (c9-3 / some)))
      :mod (c9-5 / well)
      :polarity -)

# ::snt Makes you wonder if he'll turn himself in for the cash?
# ::tokens ["Makes", "you", "wonder", "if", "he", "'ll", "turn", "himself", "in", "for", "the", "cash", "?"]
# ::lemmas ["make", "you", "wonder", "if", "he", "'ll", "turn", "himself", "in", "for", "the", "cash", "?"]
(c10-3 / make-02
       :ARG1 (c10-4 / wonder-01
                    :ARG0 (c10-2 / you)
                    :ARG1 (c10-0 / truth-value
                                 :polarity-of (c10-1 / turn-in-22
                                                     :ARG0 (c10-5 / he
                                                                  :ARG1-of c10-1)
                                                     :ARG3 (c10-6 / cash)))))

# ::snt me to he let's his money do all the talking Noone can be as rich as him
# ::tokens ["me", "to", "he", "let", "'s", "his", "money", "do", "all", "the", "talking", "Noone", "can", "be", "as", "rich", "as", "him"]
# ::lemmas ["i", "to", "he", "let", "us", "his", "money", "do", "all", "the", "talk", "Noone", "can", "be", "as", "rich", "as", "he"]
(c11-7 / let-01
       :ARG0 (c11-8 / he)
       :ARG1 (c11-9 / do-02
                    :ARG0 (c11-4 / money
                                 :poss c11-8)
                    :ARG1 (c11-1 / talk-01
                                 :ARG0 c11-4
                                 :mod (c11-0 / all)))
       :beneficiary (c11-6 / no-one
                           :ARG1-of (c11-5 / have-degree-91
                                           :ARG2 (c11-2 / rich)
                                           :ARG3 (c11-3 / equal)
                                           :ARG4 c11-8))
       :mode imperative)

# ::snt what's chapo's ?
# ::tokens ["what", "'s", "chapo", "'s", "?"]
# ::lemmas ["what", "be", "chapo", "'s", "?"]
(c12-1 / chapo
       :domain (c12-0 / amr-unknown))

# ::snt you guys still trynna house him
# ::tokens ["you", "guys", "still", "trynna", "house", "him"]
# ::lemmas ["you", "guy", "still", "trynna", "house", "he"]
(c14-0 / try-01
       :ARG0 (c14-1 / you
                    :mod (c14-2 / guy))
       :ARG1 (c14-5 / house-01
                    :ARG0 c14-1
                    :ARG1 (c14-3 / he))
       :mod (c14-4 / still))

# ::snt hit up your uncle I'm flying back tomorrow we got some work to do
# ::tokens ["hit", "up", "your", "uncle", "I", "'m", "flying", "back", "tomorrow", "we", "got", "some", "work", "to", "do"]
# ::lemmas ["hit", "up", "your", "uncle", "i", "be", "fly", "back", "tomorrow", "we", "get", "some", "work", "to", "do"]
(c15-5 / multi-sentence
       :snt1 (c15-14 / hit-up-05
                     :ARG0 (c15-7 / i)
                     :ARG1 (c15-9 / person
                                  :ARG0-of (c15-6 / have-rel-role-91
                                                  :ARG1 (c15-4 / you)
                                                  :ARG2 (c15-8 / uncle))))
       :snt2 (c15-13 / fly-01
                     :ARG1 (c15-1 / i)
                     :time (c15-0 / tomorrow)
                     :direction (c15-2 / back))
       :snt3 (c15-11 / obligate-01
                     :ARG1 (c15-12 / we)
                     :ARG2 (c15-3 / work-01
                                  :ARG0 c15-12
                                  :quant (c15-10 / some))))

# ::snt chapo ain't even got million to spend stfu lol
# ::tokens ["chapo", "ai", "n't", "even", "got", "million", "to", "spend", "stfu", "lol"]
# ::lemmas ["chapo", "be", "not", "even", "get", "million", "to", "spend", "stfu", "lol"]
(c16-9 / have-03
       :ARG0 (c16-6 / person
                    :name (c16-7 / name
                                 :op1 "chapo"))
       :ARG1 (c16-3 / monetary-quantity
                    :unit (c16-10 / dollar)
                    :quant 1000000)
       :mod (c16-2 / even)
       :purpose (c16-5 / spend-01
                       :ARG0 c16-6
                       :ARG3 (c16-0 / stuff
                                    :name c16-7
                                    :op1 "Stfu"))
       :ARG2-of (c16-8 / laugh-01
                       :ARG0 (c16-4 / i)
                       :manner (c16-1 / loud)
                       :mode expressive)
       :polarity -)

# ::snt i give him month
# ::tokens ["i", "give", "him", "month"]
# ::lemmas ["i", "give", "he", "month"]
(c17-2 / give-01
       :ARG0 (c17-3 / i)
       :ARG1 (c17-0 / temporal-quantity
                    :unit (c17-1 / month)
                    :quant 1)
       :ARG2 (c17-4 / he))

# ::snt whats his number to tell him when its done?
# ::tokens ["what", "s", "his", "number", "to", "tell", "him", "when", "its", "done", "?"]
# ::lemmas ["what", "s", "his", "number", "to", "tell", "he", "when", "its", "do", "?"]
(c18-4 / number
       :polarity (c18-0 / amr-unknown)
       :poss (c18-5 / he)
       :ARG0-of (c18-1 / tell-01
                       :ARG1 (c18-2 / be-done-08
                                    :ARG1 (c18-3 / it))
                       :ARG2 c18-5))

# ::snt its over
# ::tokens ["its", "over"]
# ::lemmas ["its", "over"]
(c19-0 / over-01
       :ARG1 (c19-1 / it))

# ::snt why do you guys even entertain this garbage?
# ::tokens ["why", "do", "you", "guys", "even", "entertain", "this", "garbage", "?"]
# ::lemmas ["why", "do", "you", "guy", "even", "entertain", "this", "garbage", "?"]
(c21-2 / entertain-01
       :ARG0 (c21-3 / you
                    :mod (c21-5 / guy))
       :ARG1 (c21-4 / garbage
                    :mod (c21-1 / this))
       :mod (c21-6 / even)
       :ARG1-of (c21-7 / cause-01
                       :ARG0 (c21-0 / amr-unknown)))

# ::snt Donald is ignorant when it comes to the history of this Nation and its indigenous people.
# ::tokens ["Donald", "is", "ignorant", "when", "it", "comes", "to", "the", "history", "of", "this", "Nation", "and", "its", "indigenous", "people", "."]
# ::lemmas ["Donald", "be", "ignorant", "when", "it", "come", "to", "the", "history", "of", "this", "Nation", "and", "its", "indigenous", "people", "."]
(c22-5 / ignorant-02
       :ARG1 (c22-6 / person
                    :name (c22-7 / name
                                 :op1 "Donald"))
       :ARG2 (c22-8 / history
                    :poss (c22-0 / and
                                 :op1 (c22-3 / nation
                                             :mod (c22-1 / this))
                                 :op2 (c22-4 / person
                                             :mod (c22-2 / indigenous)
                                             :poss c22-3))))

# ::snt random niggas about to be searchin for this nigga
# ::tokens ["random", "niggas", "about", "to", "be", "searchin", "for", "this", "nigga"]
# ::lemmas ["random", "niggas", "about", "to", "be", "searchin", "for", "this", "nigga"]
(c23-3 / search-01
       :ARG0 (c23-4 / nigga
                    :mod (c23-2 / random)
                    :ARG2-of c23-3)
       :mod (c23-1 / this)
       :time (c23-0 / about-to))

# ::snt fuck this puto
# ::tokens ["fuck", "this", "puto"]
# ::lemmas ["fuck", "this", "puto"]
(c25-2 / fuck-01
       :ARG0 (c25-1 / you)
       :ARG1 (c25-3 / puto
                    :mod (c25-0 / this))
       :mode imperative)

# ::snt ya but look at how long it took to find him the first time he escaped
# ::tokens ["ya", "but", "look", "at", "how", "long", "it", "took", "to", "find", "him", "the", "first", "time", "he", "escaped"]
# ::lemmas ["ya", "but", "look", "at", "how", "long", "it", "take", "to", "find", "he", "the", "first", "time", "he", "escape"]
(c26-8 / contrast-01
       :ARG2 (c26-5 / look-01
                    :ARG0 (c26-3 / you)
                    :ARG1 (c26-0 / temporal-quantity
                                 :ARG1-of (c26-2 / take-10
                                                 :ARG0 (c26-6 / find-01
                                                              :ARG1 (c26-7 / he)
                                                              :ord (c26-4 / ordinal-entity
                                                                          :value 1)
                                                              :time-of (c26-1 / escape-01
                                                                              :ARG0 c26-7))))
                    :mode imperative))

# ::snt but he has been caught twice ...
# ::tokens ["but", "he", "has", "been", "caught", "twice", "..."]
# ::lemmas ["but", "he", "have", "be", "catch", "twice", "..."]
(c27-2 / contrast-01
       :ARG2 (c27-0 / catch-03
                    :ARG1 (c27-1 / he)
                    :frequency 2))

# ::snt hahaha no lo dudo
# ::tokens ["hahaha", "no", "lo", "dudo"]
# ::lemmas ["hahaha", "no", "lo", "dudo"]
(c28-0 / lo-dudo
       :mod (c28-1 / haha
                   :mode expressive)
       :polarity -)

# ::snt it lit!!
# ::tokens ["it", "lit", "!", "!"]
# ::lemmas ["it", "light", "!", "!"]
(c30-0 / light-04
       :ARG1 (c30-1 / it))

# ::snt That number is HUGE
# ::tokens ["That", "number", "is", "HUGE"]
# ::lemmas ["that", "number", "be", "huge"]
(c31-1 / huge
       :domain (c31-2 / number
                      :mod (c31-0 / that)))

# ::snt who just might be one of them to collect the million...
# ::tokens ["who", "just", "might", "be", "one", "of", "them", "to", "collect", "the", "million", "..."]
# ::lemmas ["who", "just", "might", "be", "one", "of", "they", "to", "collect", "the", "million", "..."]
(c32-6 / possible-01
       :ARG1 (c32-3 / person
                    :ARG1-of (c32-5 / include-91
                                    :ARG2 (c32-0 / they))
                    :ARG0-of (c32-7 / collect-01
                                    :ARG1 (c32-4 / monetary-quantity
                                                 :unit (c32-2 / dollar)
                                                 :quant 1000000)))
       :mod (c32-1 / just))

# ::snt he says Mexicans are drugies rapists that they are plotting American Actually they are coming to provide for their families
# ::tokens ["he", "says", "Mexicans", "are", "drugies", "rapists", "that", "they", "are", "plotting", "American", "Actually", "they", "are", "coming", "to", "provide", "for", "their", "families"]
# ::lemmas ["he", "say", "Mexicans", "be", "drugie", "rapist", "that", "they", "be", "plot", "American", "actually", "they", "be", "come", "to", "provide", "for", "their", "family"]
(c33-12 / say-01
        :ARG0 (c33-16 / he)
        :ARG1 (c33-0 / and
                     :op1 (c33-13 / person
                                  :ARG0-of (c33-2 / rape-01)
                                  :domain (c33-5 / person
                                                 :mod (c33-17 / country
                                                              :name (c33-14 / name
                                                                            :op1 "Mexico"))))
                     :op2 (c33-1 / plot-01
                                 :ARG0 c33-5
                                 :ARG1 (c33-9 / person
                                              :mod (c33-7 / country
                                                          :name (c33-4 / name
                                                                       :op1 "America"))))
                     :op3 (c33-3 / come-01
                                 :ARG1 c33-5
                                 :purpose (c33-8 / provide-01
                                                 :ARG0 c33-5
                                                 :ARG2 (c33-15 / family
                                                               :ARG1-of (c33-10 / have-org-role-91
                                                                                :ARG0 c33-5
                                                                                :ARG2 (c33-6 / member))))
                                 :ARG1-of (c33-11 / actual-02))))

# ::snt NSA
# ::tokens ["NSA"]
# ::lemmas ["NSA"]
(c34-0 / government-organization
       :name (c34-1 / name
                    :op1 "NSA"))

# ::snt hilarious
# ::tokens ["hilarious"]
# ::lemmas ["hilarious"]
(c35-0 / hilarious)

# ::snt Looks like I'm about to catch a body
# ::tokens ["Looks", "like", "I", "'m", "about", "to", "catch", "a", "body"]
# ::lemmas ["look", "like", "i", "be", "about", "to", "catch", "a", "body"]
(c36-3 / look-02
       :ARG1 (c36-4 / catch-01
                    :ARG0 (c36-2 / i)
                    :ARG1 (c36-1 / body)
                    :time (c36-0 / about-to)))

# ::snt you are a dumb fuck..
# ::tokens ["you", "are", "a", "dumb", "fuck", ".."]
# ::lemmas ["you", "be", "a", "dumb", "fuck", ".."]
(c37-1 / fuck
       :mod (c37-2 / dumb)
       :domain (c37-0 / you))

# ::snt I'll do it for free.
# ::tokens ["I", "'ll", "do", "it", "for", "free", "."]
# ::lemmas ["i", "'ll", "do", "it", "for", "free", "."]
(c38-3 / do-02
       :ARG0 (c38-1 / i)
       :ARG1 (c38-2 / it)
       :ARG3 (c38-0 / free-03
                    :ARG1 c38-1))

# ::snt Doubt he even gives a fuck about Trump.
# ::tokens ["Doubt", "he", "even", "gives", "a", "fuck", "about", "Trump", "."]
# ::lemmas ["Doubt", "he", "even", "give", "a", "fuck", "about", "Trump", "."]
(c39-6 / doubt-01
       :ARG1 (c39-1 / give-16
                    :ARG0 (c39-5 / he)
                    :ARG1 (c39-4 / fuck)
                    :ARG2 (c39-2 / person
                                 :name (c39-3 / name
                                              :op1 "Trump"))
                    :mod (c39-0 / even)))

# ::snt lmaooo your like all the way done RIP buddy
# ::tokens ["lmaooo", "your", "like", "all", "the", "way", "done", "RIP", "buddy"]
# ::lemmas ["lmaooo", "your", "like", "all", "the", "way", "do", "RIP", "buddy"]
(c40-4 / say-01
       :ARG0 (c40-3 / i)
       :ARG1 (c40-0 / and
                    :op1 (c40-5 / like-01
                                :ARG0 (c40-1 / buddy)
                                :degree (c40-6 / all-the-way))
                    :op2 (c40-2 / do-02
                                :ARG1 c40-1))
       :ARG2 c40-1)

# ::snt called it
# ::tokens ["called", "it"]
# ::lemmas ["call", "it"]
(c41-1 / call-01
       :ARG1 (c41-0 / it))

# ::snt LETTTS GET IT!!
# ::tokens ["LETTTS", "GET", "IT", "!", "!"]
# ::lemmas ["LETTTS", "get", "IT", "!", "!"]
(c42-1 / get-01
       :ARG0 (c42-0 / they)
       :ARG1 (c42-2 / it)
       :ARG1-of (c42-3 / know-01
                       :polarity -))

# ::snt while we're add it, throw in some extra incentive to lay out George Zimmerman, too
# ::tokens ["while", "we", "'re", "add", "it", ",", "throw", "in", "some", "extra", "incentive", "to", "lay", "out", "George", "Zimmerman", ",", "too"]
# ::lemmas ["while", "we", "be", "add", "it", ",", "throw", "in", "some", "extra", "incentive", "to", "lay", "out", "George", "Zimmerman", ",", "too"]
(c43-1 / throw-in-02
       :ARG0 (c43-8 / we)
       :ARG1 (c43-4 / incentivize-01
                    :ARG0 (c43-9 / lay-out-03
                                 :ARG0 c43-8
                                 :ARG1 (c43-6 / person
                                              :name (c43-7 / name
                                                           :op1 "George"
                                                           :op2 "Zimmerman"))
                                 :mod (c43-3 / too))
                    :mod (c43-2 / extra)
                    :mod (c43-5 / some))
       :time (c43-0 / add-02
                    :ARG0 c43-8
                    :ARG1 (c43-10 / it))
       :mode imperative)

# ::snt quick come up?
# ::tokens ["quick", "come", "up", "?"]
# ::lemmas ["quick", "come", "up", "?"]
(c44-1 / come-up-11
       :polarity (c44-0 / amr-unknown)
       :ARG1-of (c44-2 / quick-02))

# ::snt wow this is getting serious
# ::tokens ["wow", "this", "is", "getting", "serious"]
# ::lemmas ["wow", "this", "be", "get", "serious"]
(c45-2 / serious-01
       :ARG1 (c45-1 / this)
       :mod (c45-0 / wow
                   :mode expressive))

# ::snt $100,000,000 you say? ... Yo you wanna chill later fam?
# ::tokens ["$", "100,000,000", "you", "say", "?", "...", "Yo", "you", "wanna", "chill", "later", "fam", "?"]
# ::lemmas ["$", "100,000,000", "you", "say", "?", "...", "Yo", "you", "wanna", "chill", "later", "fam", "?"]
(c47-5 / multi-sentence
       :snt1 (c47-8 / say-01
                    :ARG0 (c47-4 / you)
                    :ARG1 (c47-3 / monetary-quantity
                                 :unit (c47-13 / dollar)
                                 :quant 100000000)
                    :polarity (c47-0 / amr-unknown)
                    :snt2-of c47-5)
       :ARG0 (c47-2 / you)
       :ARG1 (c47-10 / want-01
                     :ARG0 (c47-6 / you)
                     :ARG1 (c47-11 / chill-02
                                   :ARG0 c47-6
                                   :time (c47-7 / after
                                                :op1 (c47-9 / now)))
                     :polarity (c47-1 / amr-unknown))
       :ARG2 (c47-12 / family))

# ::snt he just should of kept his mouth shut cause El capo will never be caught
# ::tokens ["he", "just", "should", "of", "kept", "his", "mouth", "shut", "cause", "El", "capo", "will", "never", "be", "caught"]
# ::lemmas ["he", "just", "should", "of", "keep", "his", "mouth", "shut", "cause", "El", "capo", "will", "never", "be", "catch"]
(c48-10 / cause-01
        :ARG0 (c48-5 / catch-03
                     :ARG1 (c48-7 / person
                                  :name (c48-8 / name
                                               :op1 "El"
                                               :op2 "Capo"))
                     :time (c48-1 / ever)
                     :polarity -)
        :ARG1 (c48-0 / recommend-01
                     :ARG1 (c48-3 / keep-04
                                  :ARG0 (c48-9 / he
                                               :part (c48-4 / mouth))
                                  :ARG1 (c48-6 / shut-01
                                               :ARG1 c48-4)
                                  :mod (c48-2 / just))))

# ::snt I'll do it
# ::tokens ["I", "'ll", "do", "it"]
# ::lemmas ["i", "'ll", "do", "it"]
(c49-2 / do-02
       :ARG0 (c49-0 / i)
       :ARG1 (c49-1 / it))

# ::snt Who's down?
# ::tokens ["Who", "'s", "down", "?"]
# ::lemmas ["who", "be", "down", "?"]
(c50-1 / down-01
       :ARG1 (c50-0 / amr-unknown))
