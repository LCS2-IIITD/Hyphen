# ::snt People will buy anything. This is crazy...
# ::tokens ["People", "will", "buy", "anything", ".", "This", "is", "crazy", "..."]
# ::lemmas ["people", "will", "buy", "anything", ".", "this", "be", "crazy", "..."]
(c1-3 / multi-sentence
      :snt1 (c1-2 / buy-01
                  :ARG0 (c1-4 / person)
                  :ARG1 (c1-0 / anything))
      :snt2 (c1-5 / crazy-03
                  :ARG1 (c1-1 / this)))

# ::snt and garlic and parmesan cheese... on my asparagus, not in my water.
# ::tokens ["and", "garlic", "and", "parmesan", "cheese", "...", "on", "my", "asparagus", ",", "not", "in", "my", "water", "."]
# ::lemmas ["and", "garlic", "and", "parmesan", "cheese", "...", "on", "my", "asparagus", ",", "not", "in", "my", "water", "."]
(c2-0 / and
      :op2 (c2-8 / and
                 :op1 (c2-3 / garlic)
                 :op2 (c2-7 / cheese
                            :mod (c2-5 / parmesan))
                 :location (c2-1 / asparagus
                                 :poss (c2-4 / i)))
      :op3 (c2-2 / be-located-at-91
                 :ARG1 c2-8
                 :ARG2 (c2-6 / water
                             :poss c2-4)
                 :polarity -))

# ::snt I... uh... I...uh... speechless! :~
# ::tokens ["I", "...", "uh", "...", "I", "...", "uh", "...", "speechless", "!", ":", "~"]
# ::lemmas ["i", "...", "uh", "...", "i", "...", "uh", "...", "speechless", "!", ":", "~"]
(c3-1 / speechless
      :domain (c3-0 / i))

# ::snt The water itself is crazy to me, but the price?!? Whoah!
# ::tokens ["The", "water", "itself", "is", "crazy", "to", "me", ",", "but", "the", "price", "?", "!", "?", "Whoah", "!"]
# ::lemmas ["the", "water", "itself", "be", "crazy", "to", "i", ",", "but", "the", "price", "?", "!", "?", "Whoah", "!"]
(c4-7 / contrast-01
      :ARG1 (c4-3 / crazy-03
                  :ARG1 (c4-6 / water)
                  :prep-to (c4-4 / i))
      :ARG2 (c4-2 / monetary-quantity
                  :ARG2-of (c4-5 / price-01)
                  :polarity (c4-0 / amr-unknown))
      :mod (c4-1 / whoah
                 :mode expressive))

# ::snt jajaj wtf! Yo quiero de rucula
# ::tokens ["jajaj", "wtf", "!", "Yo", "quiero", "de", "rucula"]
# ::lemmas ["jajaj", "wtf", "!", "Yo", "quiero", "de", "rucula"]
(c5-3 / multi-sentence
      :snt1 (c5-0 / amr-unknown
                  :mod (c5-7 / fuck
                             :mode expressive)
                  :domain (c5-5 / person
                                :name (c5-6 / name
                                            :op1 "Jajaj")))
      :snt2 (c5-4 / quiero
                  :mod (c5-1 / rucula)
                  :mod (c5-2 / yo)))

# ::snt really?
# ::tokens ["really", "?"]
# ::lemmas ["really", "?"]
(c6-1 / real-04
      :polarity (c6-0 / amr-unknown))

# ::snt There are some stores here in Brazil that sell peeled bananas and tangerines. Yes, the End is near.
# ::tokens ["There", "are", "some", "stores", "here", "in", "Brazil", "that", "sell", "peeled", "bananas", "and", "tangerines", ".", "Yes", ",", "the", "End", "is", "near", "."]
# ::lemmas ["there", "be", "some", "store", "here", "in", "Brazil", "that", "sell", "peel", "banana", "and", "tangerine", ".", "yes", ",", "the", "end", "be", "near", "."]
(c7-7 / multi-sentence
      :snt1 (c7-8 / sell-01
                  :ARG0 (c7-0 / store
                              :quant (c7-9 / some)
                              :location (c7-12 / here
                                               :location (c7-13 / country
                                                                :name (c7-10 / name
                                                                             :op1 "Brazil"))))
                  :ARG1 (c7-1 / and
                              :op1 (c7-4 / banana
                                         :ARG1-of (c7-11 / peel-01))
                              :op2 (c7-2 / tangerine)))
      :snt2 (c7-5 / near-02
                  :ARG1 (c7-3 / end)
                  :mod (c7-6 / yes)))

# ::snt uses plastic &amp; paper heavily yes,green surely not
# ::tokens ["uses", "plastic", "&", "amp", ";", "paper", "heavily", "yes", ",", "green", "surely", "not"]
# ::lemmas ["use", "plastic", "&", "amp", ";", "paper", "heavily", "yes", ",", "green", "surely", "not"]
(c8-1 / multi-sentence
      :snt1 (c8-4 / use-01
                  :ARG1 (c8-0 / and
                              :op1 (c8-6 / plastic)
                              :op2 (c8-8 / amp)))
      :snt2 (c8-2 / paper
                  :manner (c8-7 / heavy))
      :snt3 (c8-3 / green
                  :ARG1-of (c8-5 / sure-02)
                  :polarity -))

# ::snt For sure!
# ::tokens ["For", "sure", "!"]
# ::lemmas ["for", "sure", "!"]
(c9-0 / sure-02
      :mode expressive)

# ::snt Wow, I gotta get to work. Carrot water, Green onion water, green bean water, french fry water,
# ::tokens ["Wow", ",", "I", "got", "ta", "get", "to", "work", ".", "Carrot", "water", ",", "Green", "onion", "water", ",", "green", "bean", "water", ",", "french", "fry", "water", ","]
# ::lemmas ["wow", ",", "i", "got", "to", "get", "to", "work", ".", "Carrot", "water", ",", "green", "onion", "water", ",", "green", "bean", "water", ",", "french", "fry", "water", ","]
(c10-5 / multi-sentence
       :snt1 (c10-6 / get-05
                    :ARG0 (c10-10 / i
                                  :ARG1-of c10-6)
                    :ARG2 (c10-11 / work-01
                                  :ARG0 c10-10)
                    :mod (c10-4 / wow
                                :mode expressive))
       :snt2 (c10-0 / and
                    :op1 (c10-7 / water
                                :mod (c10-14 / carrot))
                    :op2 (c10-9 / water
                                :mod (c10-8 / green-03))
                    :op3 (c10-1 / water
                                :mod (c10-3 / bean
                                            :ARG1-of c10-8)))
       :op4 (c10-12 / water
                    :mod (c10-13 / fry-01
                                 :mod (c10-2 / french))))

# ::snt SMH : Whole Foods' Selling Asparagus Water Is A Sign The End Times Are Near
# ::tokens ["SMH", ":", "Whole", "Foods", "'", "Selling", "Asparagus", "Water", "Is", "A", "Sign", "The", "End", "Times", "Are", "Near"]
# ::lemmas ["smh", ":", "Whole", "Foods", "'", "Selling", "Asparagus", "Water", "Is", "A", "Sign", "the", "End", "Times", "be", "near"]
(c11-6 / say-01
       :ARG0 (c11-7 / publication
                    :name (c11-8 / name
                                 :op1 "SMH"))
       :ARG1 (c11-0 / signal-07
                    :ARG0 (c11-5 / sell-01
                                 :ARG0 (c11-11 / company
                                               :name (c11-4 / name
                                                            :op1 " Whole"
                                                            :op2 "Foods"))
                                 :ARG1 (c11-10 / water
                                               :mod (c11-1 / asparagus)))
                    :ARG1 (c11-9 / near-01
                                 :ARG1 (c11-2 / time
                                              :ARG1-of (c11-3 / end-01)))))

# ::snt I am sure there r the stupid booshie ppl who ll find this fancy. Wegmans WholeFoods
# ::tokens ["I", "am", "sure", "there", "r", "the", "stupid", "booshie", "ppl", "who", "ll", "find", "this", "fancy", ".", "Wegmans", "WholeFoods"]
# ::lemmas ["i", "be", "sure", "there", "r", "the", "stupid", "booshie", "ppl", "who", "ll", "find", "this", "fancy", ".", "Wegmans", "wholefood"]
(c12-4 / multi-sentence
       :snt1 (c12-6 / sure-02
                    :ARG0 (c12-5 / i)
                    :ARG1 (c12-9 / find-01
                                 :ARG0 (c12-7 / person
                                              :mod (c12-0 / stupid)
                                              :mod (c12-3 / booshie))
                                 :ARG1 (c12-2 / fancy
                                              :mod (c12-1 / this))))
       :snt2 (c12-10 / company
                     :name (c12-8 / name
                                  :op1 "Wegmans"
                                  :op2 "WholeFoods")))

# ::snt for some sticks of Asparagus in water! Is this for real?
# ::tokens ["for", "some", "sticks", "of", "Asparagus", "in", "water", "!", "Is", "this", "for", "real", "?"]
# ::lemmas ["for", "some", "stick", "of", "Asparagus", "in", "water", "!", "be", "this", "for", "real", "?"]
(c13-4 / multi-sentence
       :snt1 (c13-7 / for
                    :op1 (c13-5 / stick
                                :consist-of (c13-0 / Asparagus)
                                :quant (c13-1 / some)
                                :location (c13-6 / water)))
       :snt2 (c13-3 / real-04
                    :polarity (c13-8 / amr-unknown)
                    :ARG1 (c13-2 / this)))

# ::snt When you want your pee to smell like death. All of the time.
# ::tokens ["When", "you", "want", "your", "pee", "to", "smell", "like", "death", ".", "All", "of", "the", "time", "."]
# ::lemmas ["when", "you", "want", "your", "pee", "to", "smell", "like", "death", ".", "all", "of", "the", "time", "."]
(c14-4 / multi-sentence
       :snt1 (c14-2 / be-temporally-at-91
                    :ARG2 (c14-8 / want-01
                                 :ARG0 (c14-3 / you)
                                 :ARG1 (c14-6 / smell-02
                                              :ARG1 (c14-7 / pee-01
                                                           :ARG0 c14-3)
                                              :ARG2 (c14-9 / die-01
                                                           :ARG1 c14-3))))
       :snt2 (c14-5 / be-temporally-at-91
                    :ARG2 (c14-1 / time
                                 :mod (c14-0 / all))))

# ::snt wow! Only $5.99.
# ::tokens ["wow", "!", "Only", "$", "5.99", "."]
# ::lemmas ["wow", "!", "Only", "$", "5.99", "."]
(c15-3 / cost-01
       :ARG2 (c15-0 / monetary-quantity
                    :unit (c15-4 / dollar)
                    :mod (c15-1 / only)
                    :quant 5.99)
       :mod (c15-2 / wow
                   :mode expressive))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c16-0 / laugh-01
       :manner (c16-1 / loud)
       :mode expressive)

# ::snt algo estamos haciendo mal
# ::tokens ["algo", "estamos", "haciendo", "mal"]
# ::lemmas ["algo", "estamos", "haciendo", "mal"]
(c17-2 / haciendo-00
       :ARG0 (c17-3 / estamos)
       :ARG1 (c17-1 / mal)
       :mod (c17-0 / algo))

# ::snt -- now going to asparagus water??
# ::tokens ["--", "now", "going", "to", "asparagus", "water", "?", "?"]
# ::lemmas ["--", "now", "go", "to", "asparagus", "water", "?", "?"]
(c18-2 / go-01
       :polarity (c18-0 / amr-unknown)
       :ARG1 (c18-1 / you)
       :ARG4 (c18-4 / water
                    :mod (c18-5 / asparagus))
       :time (c18-3 / now))

# ::snt wait whut?
# ::tokens ["wait", "whut", "?"]
# ::lemmas ["wait", "whut", "?"]
(c19-2 / wait-01
       :polarity (c19-0 / amr-unknown)
       :ARG1 (c19-3 / you)
       :mod (c19-1 / whut))

# ::snt I'm just jealous that I didn't think of this first. $$$$$$$$$$$$$$$$$$$$$$$$$
# ::tokens ["I", "'m", "just", "jealous", "that", "I", "did", "n't", "think", "of", "this", "first", ".", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$"]
# ::lemmas ["i", "be", "just", "jealous", "that", "i", "do", "not", "think", "of", "this", "first", ".", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$", "$"]
(c20-4 / multi-sentence
       :snt1 (c20-1 / jealous-02
                    :ARG0 (c20-5 / i)
                    :ARG2 (c20-0 / think-01
                                 :ARG0 c20-5
                                 :ARG1 (c20-3 / this)
                                 :ord (c20-7 / ordinal-entity
                                             :value 1)
                                 :polarity -)
                    :mod (c20-6 / just))
       :snt2 (c20-2 / money
                    :mode expressive))

# ::snt $5.99 yikes
# ::tokens ["$", "5.99", "yikes"]
# ::lemmas ["$", "5.99", "yike"]
(c21-0 / yikes
       :value (c21-1 / monetary-quantity
                     :unit (c21-2 / dollar)
                     :quant 5.99))

# ::snt $6 LOLOL
# ::tokens ["$", "6", "LOLOL"]
# ::lemmas ["$", "6", "lolol"]
(c22-3 / laugh-01
       :ARG0 (c22-2 / i)
       :ARG2 (c22-1 / monetary-quantity
                    :unit (c22-4 / dollar)
                    :quant 6)
       :manner (c22-0 / loud))

# ::snt That is just wrong.
# ::tokens ["That", "is", "just", "wrong", "."]
# ::lemmas ["that", "be", "just", "wrong", "."]
(c23-0 / wrong-04
       :ARG2 (c23-1 / that)
       :mod (c23-2 / just))
