# ::subgraphs [["c1-3", "c1-4", "c1-1", "c1-2", "c1-5", "c1-0"], ["c2-1", "c2-0", "c2-5", "c2-2", "c2-3", "c2-4", "c2-7", "c2-6"], ["c3-10", "c3-8", "c3-2", "c3-24", "c3-25", "c3-20", "c3-9", "c3-11", "c3-19", "c3-13", "c3-3", "c3-22", "c3-21", "c3-5", "c3-4", "c3-14", "c3-16", "c3-23", "c3-1", "c3-0", "c3-18", "c3-15", "c3-7", "c3-6", "c3-12", "c3-17"], ["c4-11", "c4-10", "c4-9", "c4-1", "c4-3", "c4-8", "c4-0", "c4-5", "c4-4", "c4-2", "c4-12", "c4-6", "c4-7"]]
(d / dummy
   :COMMENT (c1-3 / point
                  :ARG1 (c1-4 / mandate
                              :ARG1 (c1-1 / product
                                          :name (c1-2 / name
                                                      :op1 "Vax"
                                                      :SAME c3-1
                                                      :SAME c3-11))
                              :concession (c1-5 / know
                                                :ARG1-of (c1-0 / serious)
                                                :polarity -))
                  :SAME c4-8)
   :COMMENT (c2-1 / contrast
                  :ARG1 (c2-0 / agree
                              :ARG0 (c2-5 / i
                                          :SAME c4-4
                                          :SAME c3-16
                                          :SAME c3-2
                                          :COREF c4-4
                                          :COREF c3-2
                                          :COREF c3-16))
                  :ARG2 (c2-2 / have-to-do-with
                              :ARG0 (c2-3 / tweet)
                              :ARG1 (c2-4 / respond
                                          :ARG0 (c2-7 / you))
                              :ARG2 (c2-6 / nothing))
                  :SAME c4-0)
   :COMMENT (c3-10 / multi
                   :snt1 (c3-8 / think
                               :ARG0 (c3-2 / i)
                               :ARG1 (c3-24 / be-temporally-at
                                            :ARG1 (c3-25 / person
                                                         :ARG0-of (c3-20 / believe)
                                                         :mod (c3-9 / religious
                                                                    :name (c3-11 / name
                                                                                 :op1 "Jesushave"))
                                                         :SAME c3-23)
                                            :ARG2 (c3-19 / yet))
                               :polarity -)
                   :snt2 (c3-13 / event
                                :mod (c3-3 / concurrent)
                                :ARG1-of (c3-22 / have-quant
                                                :ARG2 (c3-21 / many)
                                                :ARG3 (c3-5 / too
                                                            :quant (c3-4 / way)))
                                :ARG1-of (c3-14 / say
                                                :ARG0 (c3-16 / i)
                                                :ARG2 (c3-23 / person
                                                             :name (c3-1 / name
                                                                         :op1 "Luke"))
                                                :time (c3-0 / date
                                                            :op1 (c3-18 / date
                                                                        :day 28
                                                                        :month 1)
                                                            :op2 (c3-15 / date
                                                                        :day 31
                                                                        :month 1)
                                                            :SAME c3-15
                                                            :SAME c3-18)))
                   :snt3 (c3-7 / draw
                               :ARG0 (c3-6 / redemption
                                           :poss (c3-12 / we))
                               :ARG1 (c3-17 / near))
                   :SAME c4-11)
   :COMMENT (c4-11 / multi
                   :snt1 (c4-10 / prove
                                :ARG1 (c4-9 / true
                                            :ARG1 (c4-1 / all))
                                :ARG0-of (c4-3 / cause
                                               :ARG1 (c4-8 / point
                                                           :ARG1 c4-10)))
                   :snt2 (c4-0 / contrast
                               :ARG1 (c4-5 / try
                                           :ARG0 (c4-4 / i)
                                           :ARG1 (c4-2 / figure-out
                                                       :ARG0 c4-4
                                                       :ARG1 c4-10))
                               :ARG2 (c4-12 / tell
                                            :ARG0 (c4-6 / time)
                                            :ARG1 c4-10
                                            :mod (c4-7 / only)))))
