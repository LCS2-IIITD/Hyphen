# ::subgraphs [["c1-3", "c1-1", "c1-0", "c1-2"], ["c2-8", "c2-5", "c2-9", "c2-2", "c2-0", "c2-7", "c2-1", "c2-4", "c2-6", "c2-3"], ["c3-2", "c3-1", "c3-0", "c3-3"], ["c4-0", "c4-2", "c4-6", "c4-7", "c4-3", "c4-5", "c4-4", "c4-1"], ["c5-1", "c5-0", "c5-2"], ["c6-2", "c6-5", "c6-1", "c6-3", "c6-4", "c6-0"], ["c7-0", "c7-2", "c7-1"]]
(d / dummy
   :COMMENT (c1-3 / feel
                  :ARG0 (c1-1 / i
                              :SAME c2-3
                              :COREF c2-3)
                  :ARG1 (c1-0 / sleepy
                              :ARG1 c1-1)
                  :time (c1-2 / today)
                  :polarity -
                  :SAME c3-2)
   :COMMENT (c2-8 / multi
                  :snt1 (c2-5 / take
                              :ARG0 (c2-9 / you
                                          :SAME c6-5
                                          :SAME c4-6
                                          :COREF c6-5
                                          :COREF c4-6)
                              :ARG1 (c2-2 / flu
                                          :time (c2-0 / date
                                                      :dayperiod (c2-7 / daytime))
                                          :quant (c2-1 / some))
                              :ARG0-of (c2-4 / help)
                              :mode imperative
                              :SAME c4-2)
                  :snt2 (c2-6 / promise
                              :ARG0 (c2-3 / i)))
   :COMMENT (c3-2 / feel
                  :polarity (c3-1 / amr
                                  :SAME c5-0)
                  :ARG1 (c3-0 / will
                              :ARG1-of (c3-3 / cold)))
   :COMMENT (c4-0 / and
                  :op1 (c4-2 / take
                             :ARG0 (c4-6 / you
                                         :part (c4-7 / arm))
                             :ARG1 (c4-3 / product
                                         :name (c4-5 / name
                                                     :op1 "Advil"
                                                     :SAME c6-4))
                             :mode imperative)
                  :op2 (c4-4 / move
                             :ARG0 c4-6
                             :ARG1 c4-7
                             :manner (c4-1 / circular)
                             :mode imperative))
   :COMMENT (c5-1 / make
                  :ARG0 (c5-0 / amr)
                  :ARG1 (c5-2 / this))
   :COMMENT (c6-2 / get
                  :ARG0 (c6-5 / you)
                  :ARG1 (c6-1 / chip
                              :mod (c6-3 / person
                                         :name (c6-4 / name
                                                     :op1 "Biden")))
                  :mod (c6-0 / gg
                             :mode expressive))
   :COMMENT (c7-0 / set
                  :ARG1 (c7-2 / microchip)
                  :location (c7-1 / it)))
