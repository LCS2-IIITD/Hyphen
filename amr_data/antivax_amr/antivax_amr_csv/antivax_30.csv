comment,amr
NOOO,"# ::snt NOOO
(n / no)"
YES U ARE,"# ::snt YES U ARE
(y / yes
      :domain (w / we))"
HUSH IM NOT,"# ::snt HUSH IM NOT
(a / and
      :op1 (h / hug-01
            :mode imperative
            :ARG0 (y / you))
      :op2 (h2 / have-polarity-91
            :ARG1 (ii / i)
            :ARG2 -))"
wait i stop being so cute,"# ::snt wait i stop being so cute
(w / wait-01
      :ARG1 (ii / i)
      :ARG2 (s / stop-01
            :ARG0 ii
            :ARG1 (c / cute
                  :domain ii
                  :degree (s2 / so))))"
okay i will wait (,"# ::snt okay i will wait (
(w / wait-01
      :ARG1 (ii / i)
      :ARG1-of (o / okay-04))"
:BFJDBJF,"# ::snt :BFJDBJF
(s / string-entity
      :value "":BFJDBJF"")"
get in line,"# ::snt get in line
(l / line-up-02
      :mode imperative
      :ARG1 (y / you))"
(SLASH J SLASH J /J /J),"# ::snt (SLASH J SLASH J /J /J)
(a / and
      :op1 (s / slap-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 y)
      :op2 (s2 / slap-01
            :mode imperative
            :ARG0 y
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""J""))))"
i worry about u,"# ::snt i worry about u
(w / worry-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
it's me i ate sand as a kid. Crun ch,"# ::snt it's me i ate sand as a kid. Crun ch
(m / multi-sentence
      :snt1 (e / eat-01
            :ARG0 (ii / i)
            :ARG1 (s / sand)
            :time (k / kid
                  :domain ii))
      :snt2 (c / crun-ch))"
