comment,amr
Yes.,"# ::snt Yes.
(y / yes)"
Trying to trigger the bird?,"# ::snt Trying to trigger the bird?
(t / try-01
      :polarity (a / amr-unknown)
      :ARG1 (t2 / trigger-01
            :ARG1 (b / bird)))"
"Try adding ""D*mini*n"" to that list, but with the correct letter in place of the asterisks.","# ::snt Try adding ""D*mini*n"" to that list, but with the correct letter in place of the asterisks.
(t / try-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / add-02
            :ARG0 y
            :ARG1 (s / string-entity
                  :value ""D*mini*n"")
            :ARG2 (l / list-01
                  :mod (t2 / that))
            :ARG1-of (c / contrast-01
                  :ARG2 (h / have-03
                        :ARG0 y
                        :ARG1 (l2 / letter
                              :ARG1-of (c2 / correct-02)
                              :ARG1-of (ii / instead-of-91
                                    :ARG2 (a2 / asterisk)))))))"
masks,"# ::snt masks
(t / thing
      :ARG1-of (m / mask-01))"
Hmm didn't work.,"# ::snt Hmm didn't work.
(w / work-09
      :polarity -
      :mod (h / hmm
            :mode expressive))"
