comment,amr
,"# ::snt 
(a / amr-empty)"
Thank you!,"# ::snt Thank you!
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you)
      :mode expressive)"
Thank you!,"# ::snt Thank you!
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you)
      :mode expressive)"
"Thank you, I appreciate it!","# ::snt Thank you, I appreciate it!
(a / and
      :op1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you))
      :op2 (a2 / appreciate-02
            :ARG0 ii
            :ARG1 (ii2 / it)))"
Thank you! Im proud of you too!,"# ::snt Thank you! Im proud of you too!
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you))
      :snt2 (p / pride-01
            :ARG0 (ii2 / i)
            :ARG1 (y2 / you)
            :mod (t2 / too)))"
,"# ::snt 
(a / amr-empty)"
Great congratulations,"# ::snt Great congratulations
(c / congratulate-01
      :mod (g / great))"
,"# ::snt 
(a / amr-empty)"
Thank youuu!,"# ::snt Thank youuu!
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
Awww thank you so much! And I definitely appreciate the advice!,"# ::snt Awww thank you so much! And I definitely appreciate the advice!
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :degree (m2 / much
                  :degree (s / so))
            :mod (a / awww
                  :mode expressive))
      :snt2 (a2 / and
            :op2 (a3 / appreciate-02
                  :ARG0 (ii2 / i)
                  :ARG1 (a4 / advice)
                  :mod (d / definite))))"
"Have you some juice, tylenol and popsicles ready just in case, So Proud!!!!","# ::snt Have you some juice, tylenol and popsicles ready just in case, So Proud!!!!
(p / pride-01
      :mode expressive
      :ARG0 (ii / i)
      :ARG1 (h / have-04
            :ARG0 ii
            :ARG1 (r / ready-02
                  :ARG1 (a / and
                        :op1 (j / juice
                              :quant (s / some))
                        :op2 (t / tylenol
                              :quant (s2 / some))
                        :op3 (p2 / popsicle
                              :quant (s3 / some)))
                  :condition (c / case
                        :mod (j2 / just))))
      :degree (s4 / so))"
"Congratulation, good luck.","# ::snt Congratulation, good luck.
(a / and
      :op1 (c / congratulate-01)
      :op2 (l / luck
            :ARG1-of (g / good-02)))"
Congratulations,"# ::snt Congratulations
(c / congratulate-01)"
,"# ::snt 
(a / amr-empty)"
