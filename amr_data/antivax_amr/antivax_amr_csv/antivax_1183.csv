comment,amr
You need an exorcist for that,"# ::snt You need an exorcist for that
(n / need-01
      :ARG0 (y / you)
      :ARG1 (p / person
            :ARG0-of (e / exorcise-01))
      :purpose (t / that))"
LOGANSKKSJSJHSSJ,"# ::snt LOGANSKKSJSJHSSJ
(p / person
      :name (n / name
            :op1 ""LOGANSKKSJSJHSSJ""))"
I knew this was the plan all along,"# ::snt I knew this was the plan all along
(k / know-01
      :ARG0 (ii / i)
      :ARG1 (p / plan-01
            :ARG1 (t / this)
            :duration (a / all-along)))"
LOGAN?$:&amp;:&amp;/&amp;,"# ::snt LOGAN?$:&amp;:&amp;/&amp;
(l / logan
      :polarity (a / amr-unknown))"
:all along* fuck,"# ::snt :all along* fuck
(f / fuck-01
      :duration (a / all-along))"
HAKAKSOAJAO,"# ::snt HAKAKSOAJAO
(p / person
      :name (n / name
            :op1 ""HakshojaO""))"
hmm...bk//dk *is* very gay...,"# ::snt hmm...bk//dk *is* very gay...
(g / gay-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""bk""))
      :degree (v / very)
      :mod (h / hmm
            :mode expressive))"
My arm is very very sore and I feel significantly gayerIll let you know if these side effects persist,"# ::snt My arm is very very sore and I feel significantly gayerIll let you know if these side effects persist
(a / and
      :op1 (s / sore
            :domain (a2 / arm
                  :part-of (ii / i))
            :degree (v / very))
      :op2 (f / feel-01
            :ARG0 ii
            :ARG1 (g / gayer
                  :ARG1-of (s2 / significant-02)))
      :op3 (l / let-know-07
            :ARG0 ii
            :ARG1 (y / you)
            :ARG2 (t / truth-value
                  :polarity-of (p / persist-01
                        :ARG1 (e / effect-03
                              :ARG1 (e2 / event
                                    :mod (s3 / side)
                                    :mod (t2 / this)))))))"
this was Joe Bidens plan along,"# ::snt this was Joe Bidens plan along
(p / plan-01
      :ARG0 (p2 / person
            :name (n / name
                  :op1 ""Joe""
                  :op2 ""Bidens""))
      :ARG1 (t / this)
      :manner (a / along))"
Congration on the vaccine though how does it feel,"# ::snt Congration on the vaccine though how does it feel
(h / have-concession-91
      :ARG1 (f / feel-05
            :ARG1 (c / Congrate-01
                  :ARG1 (v / vaccine))
            :ARG2 (a / amr-unknown)))"
LOGAN FKSMJDKSDJ,"# ::snt LOGAN FKSMJDKSDJ
(p / person
      :name (n / name
            :op1 ""LOGAN""
            :op2 ""FSMJDKSDJ""))"
LOGAN PLEASE AHSKAK,"# ::snt LOGAN PLEASE AHSKAK
(l / log-on-02
      :mode imperative
      :polite +
      :ARG0 (y / you))"
please get vaccinated,"# ::snt please get vaccinated
(v / vaccinate-01
      :mode imperative
      :polite +
      :ARG1 (y / you))"
this is a joke,"# ::snt this is a joke
(j / joke-01
      :ARG2 (t / this))"
