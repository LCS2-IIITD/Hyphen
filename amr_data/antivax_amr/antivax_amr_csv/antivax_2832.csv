comment,amr
"Lemme just say the vibe aint good xD. Got a shitty headache and pain in the arm, along with chills. Definitely worse than the first dose","# ::snt Lemme just say the vibe aint good xD. Got a shitty headache and pain in the arm, along with chills. Definitely worse than the first dose
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (g / good-02
                  :polarity -
                  :ARG1 (v / vibe))
            :mod (j / just)
            :mod (e / emoticon
                  :value ""xD""))
      :snt2 (a / and
            :op1 (g2 / get-01
                  :ARG0 (ii2 / i
                        :part (a2 / arm))
                  :ARG1 (a3 / and
                        :op1 (h / headache
                              :mod (s2 / shitty))
                        :op2 (p / pain
                              :location a2)
                        :op3 (c / chill)))
            :op2 (h2 / have-degree-91
                  :ARG1 (t / thing)
                  :ARG2 (b / bad-07
                        :ARG1 t)
                  :ARG3 (m2 / more)
                  :ARG4 (t2 / thing
                        :ARG2-of (d / dose-01)
                        :ord (o / ordinal-entity
                              :value 1))
                  :mod (d2 / definite))))"
"Ah ok. The first one just gave me a headache and my arm hurt a bit. This one is supposedly gonna be worse, from what Ive heard","# ::snt Ah ok. The first one just gave me a headache and my arm hurt a bit. This one is supposedly gonna be worse, from what Ive heard
(m / multi-sentence
      :snt1 (o / okay-01
            :mod (a / ah
                  :mode expressive))
      :snt2 (a2 / and
            :op1 (g / give-01
                  :ARG0 (o2 / one
                        :ord (o3 / ordinal-entity
                              :value 1))
                  :ARG1 (h / headache)
                  :ARG2 (ii / i
                        :part (a3 / arm))
                  :mod (j / just))
            :op2 (h2 / hurt-01
                  :ARG1 a3
                  :degree (b / bit)))
      :snt3 (s / suppose-02
            :ARG1 (h3 / have-degree-91
                  :ARG1 (o4 / one
                        :mod (t / this))
                  :ARG2 (b2 / bad-07
                        :ARG1 o4)
                  :ARG3 (m2 / more))
            :ARG1-of (h4 / hear-01
                  :ARG0 (ii2 / i))))"
i got my first like weeks ago and was Pfizer,"# ::snt i got my first like weeks ago and was Pfizer
(a / and
      :op1 (g / get-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ord (o / ordinal-entity
                        :value 1)
                  :poss ii)
            :time (b / before
                  :op1 (n / now)
                  :quant (l / like
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week)))))
      :op2 (c / company
            :name (n2 / name
                  :op1 ""Pfizer"")
            :domain ii))"
When did u get ur first and which one did u get,"# ::snt When did u get ur first and which one did u get
(a / and
      :op1 (g / get-01
            :ARG0 (y / you)
            :ARG1 y
            :ord (o / ordinal-entity
                  :value 1)
            :time (a2 / amr-unknown))
      :op2 (g2 / get-01
            :ARG0 y
            :ARG1 (a3 / amr-unknown
                  :ARG1-of (ii / include-91
                        :ARG2 y))))"
ill be the judge of that in a week or so. first shot didnt do anything,"# ::snt ill be the judge of that in a week or so. first shot didnt do anything
(m / multi-sentence
      :snt1 (j / judge-01
            :ARG0 (ii / i)
            :ARG1 (t / that)
            :time (a / after
                  :op1 (n / now)
                  :quant (a2 / about
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week)))))
      :snt2 (d / do-02
            :polarity -
            :ARG0 (s / shot
                  :ord (o / ordinal-entity
                        :value 1))
            :ARG1 (a3 / anything)))"
