comment,amr
She said over budget by k so that thing could have been over m,"# ::snt She said over budget by k so that thing could have been over m
(c / cause-01
      :ARG0 (s / say-01
            :ARG0 (s2 / she)
            :ARG1 (o / over-
                  :ARG1 (t / thing
                        :mod (t2 / that)))
            :manner (k / k))
      :ARG1 (p / possible-01
            :ARG1 o
            :ARG1 t))"
Wow can I be ur friend,"# ::snt Wow can I be ur friend
(p / possible-01
      :ARG1 (h / have-rel-role-91
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :ARG2 (f / friend))
      :mod (w / wow
            :mode expressive))"
Congratulations bestie!!,"# ::snt Congratulations bestie!!
(c / congratulate-01
      :ARG1 (y / you
            :ARG1-of (h / have-degree-91
                  :ARG2 (g / good-02
                        :ARG1 c)
                  :ARG3 (m / most))))"
Worth it,"# ::snt Worth it
(w / worth-02
      :ARG2 (ii / it))"
"Excuse my ignorance, but what would exactly make a closet such an expensive purchase?","# ::snt Excuse my ignorance, but what would exactly make a closet such an expensive purchase?
(c / contrast-01
      :ARG1 (e / excuse-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / i)
            :ARG2 (ii2 / ignorance
                  :poss ii))
      :ARG2 (m / make-02
            :ARG0 (a / amr-unknown
                  :mod (e2 / exact))
            :ARG1 (p / purchase-01
                  :ARG1 (c2 / closet)
                  :mod (e3 / expensive
                        :degree (s / such)))))"
"Good to hear, isn't litterbox training fun?!","# ::snt Good to hear, isn't litterbox training fun?!
(g / good-02
      :ARG1 (h / hear-01
            :ARG1 (f / fun-01
                  :ARG1 (t / train-01
                        :ARG1 (b / box
                              :purpose (l / litter)))
                  :ARG1-of (r / request-confirmation-91))))"
Your new closet k? WTF I need to se that!,"# ::snt Your new closet k? WTF I need to se that!
(m / multi-sentence
      :snt1 (a / amr-unknown
            :domain (c / closet
                  :poss (y / you)
                  :ARG1-of (n / new-01)))
      :snt2 (n2 / need-01
            :ARG0 (ii / i)
            :ARG1 (s / se-01
                  :ARG0 ii
                  :ARG1 (t / that))
            :mod (f / fuck
                  :mode expressive)))"
You need to litter box train your little meow! Back to sleep sounds good though,"# ::snt You need to litter box train your little meow! Back to sleep sounds good though
(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (y / you)
            :ARG1 (t / train-01
                  :ARG0 y
                  :ARG1 (m2 / meow-01
                        :ARG0 (y2 / you)
                        :mod (l / little))
                  :ARG2 y2))
      :snt2 (s / sound-01
            :ARG1 (b / back-02
                  :destination (s2 / sleep-01
                        :ARG0 y2))
            :ARG2 (g / good-02)
            :ARG1-of (h / have-concession-91)))"
The weekend's starting early it sounds,"# ::snt The weekend's starting early it sounds
(s / start-01
      :ARG1 (w / weekend)
      :ARG2 (e / early
            :op1 (s2 / sound-01)))"
"Starting to get the chills and aches as well from shot , but that is where our similarities end. Also, you guys should just make a youtube series where Sypher does IRL projects. Like lighting candles, changing tires; building closets. What could go wrong?","# ::snt Starting to get the chills and aches as well from shot , but that is where our similarities end. Also, you guys should just make a youtube series where Sypher does IRL projects. Like lighting candles, changing tires; building closets. What could go wrong?
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (s / start-01
                  :ARG1 (g / get-01
                        :ARG1 (a / and
                              :op1 (c2 / chill-01)
                              :op2 (a2 / ache-01))
                        :source (s2 / shot)
                        :mod (a3 / as-well)))
            :ARG2 (e / end-01
                  :ARG1 (r / resemble-01
                        :ARG1 (w / we))
                  :location (t / that)))
      :snt2 (r2 / recommend-01
            :ARG1 (m2 / make-01
                  :ARG0 (g2 / guy
                        :mod (y / you))
                  :ARG1 (s3 / series
                        :medium (p / publication
                              :name (n / name
                                    :op1 ""YouTube""))
                        :medium-of (d / do-02
                              :ARG0 (p2 / person
                                    :name (n2 / name
                                          :op1 ""Sypher""))
                              :ARG1 (p3 / project
                                    :ARG1-of (r3 / RL-00)
                                    :example (a4 / and
                                          :op1 (l / light-04
                                                :ARG0 p2
                                                :ARG1 (c3 / candle))
                                          :op2 (c4 / change-01
                                                :ARG0 p2
                                                :ARG1 (t2 / tire))
                                          :op3 (c5 / closet
                                                :location-of (b / build-01))))))
                  :mod (j / just))
            :mod (a5 / also))
      :snt3 (p4 / possible-01
            :ARG1 (g3 / go-08
                  :ARG1 (w2 / wrong-02
                        :ARG1 (a6 / amr-unknown)))))"
if you're going back to sleep it better be on the couch and not on cat pee,"# ::snt if you're going back to sleep it better be on the couch and not on cat pee
(r / recommend-01
      :ARG1 (a / and
            :op1 (b / be-located-at-91
                  :ARG1 (y / you)
                  :ARG2 (c / couch))
            :op2 (b2 / be-located-at-91
                  :polarity -
                  :ARG1 y
                  :ARG2 (p / pee-01
                        :ARG0 (c2 / cat))))
      :condition (g / go-back-19
            :ARG1 y
            :ARG2 (s / sleep-01
                  :ARG0 y)))"
Those trans dimensional portals are expensive...,"# ::snt Those trans dimensional portals are expensive...
(e / expensive
      :domain (p / portal
            :mod (t / transdimensional)
            :mod (t2 / that)))"
you only live once,"# ::snt you only live once
(l / live-01
      :ARG0 (y / you)
      :ARG1-of (h / have-frequency-91
            :ARG2 1
            :mod (o / only)))"
The project is my new closet,"# ::snt The project is my new closet
(c / closet
      :ARG1-of (n / new-01)
      :poss (ii / i)
      :domain (p / project))"
Maybe can help by taking a pay cut for issue and also not blaming the cat for issue ?,"# ::snt Maybe can help by taking a pay cut for issue and also not blaming the cat for issue ?
(p / possible-01
      :ARG1 (h / help-01
            :manner (a / and
                  :op1 (t / take-01
                        :ARG1 (c / cut-02
                              :ARG1 (p2 / pay-01))
                        :ARG3 (ii / issue-02))
                  :op2 (b / blame-01
                        :polarity -
                        :ARG1 (c2 / cat)
                        :ARG2 ii
                        :mod (a2 / also))))
      :polarity (a3 / amr-unknown))"
boys we are going to need yall to win every FNCS for the rest of the year and next year! Looks like the expansion to the bunnies room went a little over budget!!Feel better Queen.,"# ::snt boys we are going to need yall to win every FNCS for the rest of the year and next year! Looks like the expansion to the bunnies room went a little over budget!!Feel better Queen.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (n / need-01
                  :ARG0 (w / we)
                  :ARG1 (w2 / win-01
                        :ARG0 (y / you
                              :mod (a / all))
                        :ARG2 (g / game
                              :name (n2 / name
                                    :op1 ""FNCS"")
                              :mod (e / every))
                        :duration (a2 / and
                              :op1 (r / rest
                                    :part-of (y2 / year))
                              :op2 (y3 / year
                                    :mod (n3 / next)))))
            :ARG2 (b / boy))
      :snt2 (l / look-02
            :ARG1 (g2 / go-08
                  :ARG1 (e2 / expand-01
                        :ARG4 (r2 / room
                              :mod (b2 / bunny)))
                  :ARG2 (o / over-03
                        :ARG1 e2
                        :ARG2 (b3 / budget-01)
                        :degree (l2 / little))))
      :snt3 (f / feel-01
            :mode imperative
            :ARG0 y)
      :ARG1 (g3 / good-02
            :ARG2-of (h / have-degree-91
                  :ARG1 y
                  :ARG3 (m2 / more)))
      :ARG2 (q / queen))"
Thankfully I have an impermeable liner on my bed at all times,"# ::snt Thankfully I have an impermeable liner on my bed at all times
(h / have-03
      :ARG0 (ii / i)
      :ARG1 (t / thing
            :ARG0-of (l / liner-01)
            :ARG1-of (ii2 / impermeable-02)
            :location (b / bed
                  :poss ii))
      :ARG2-of (t2 / thankful-02
            :ARG0 ii)
      :time (a / all))"
"Cat pee on bed, if that got into the mattress you need a new one, that smell never leaves","# ::snt Cat pee on bed, if that got into the mattress you need a new one, that smell never leaves
(a / and
      :op1 (p / pee-01
            :ARG0 (c / cat)
            :location (b / bed))
      :op2 (n / need-01
            :ARG0 (y / you)
            :ARG1 (m / mattress
                  :ARG1-of (n2 / new-01))
            :condition (g / get-05
                  :ARG1 p
                  :ARG2 m))
      :op3 (l / leave-13
            :polarity -
            :ARG0 (s / smell-02
                  :ARG1 p)
            :time (e / ever)))"
Oh no! Feel better Queen,"# ::snt Oh no! Feel better Queen
(m / multi-sentence
      :snt1 (o / oh-no
            :mode expressive)
      :snt2 (s / say-01
            :ARG1 (f / feel-01
                  :mode imperative
                  :ARG0 (q / queen)
                  :ARG1 (g / good-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 f
                              :ARG3 (m2 / more))))
            :ARG2 q))"
good morning &amp; sending positive vibes your way luv,"# ::snt good morning &amp; sending positive vibes your way luv
(a / and
      :op1 (m / morning
            :ARG1-of (g / good-02))
      :op2 (s / send-01
            :ARG1 (v / vibes
                  :mod (p / positive))
            :path (w / way
                  :poss (y / you)))
      :ARG1-of (l / laugh-01
            :mode expressive
            :ARG0 (ii / i)
            :manner (l2 / loud)))"
Try putting it in rice?,"# ::snt Try putting it in rice?
(t / try-01
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG1 (p / put-01
            :ARG0 y
            :ARG1 (ii / it)
            :ARG2 (r / rice)))"
These are some crazy odd side effects,"# ::snt These are some crazy odd side effects
(e / effect-03
      :ARG0 (t / this)
      :ARG1 (e2 / event
            :mod (s / side)
            :ARG1-of (c / crazy-03)
            :mod (o / odd)
            :mod (s2 / some)))"
k omg,"# ::snt k omg
(o / opine-01
      :ARG0 (ii / i)
      :mod (f / fuck
            :mode expressive))"
Atleast didnt make this tweet.,"# ::snt Atleast didnt make this tweet.
(t / tweet-02
      :polarity -
      :ARG0 (ii / i)
      :mod (a / at-least)
      :mod (t2 / this))"
are you gonna clean up that cat pee first or do you just don't care?,"# ::snt are you gonna clean up that cat pee first or do you just don't care?
(a / amr-choice
      :op1 (c / clean-up-02
            :ARG0 (y / you)
            :ARG1 (p / pee-01
                  :ARG0 (c2 / cat))
            :ord (o / ordinal-entity
                  :value 1))
      :op2 (c3 / care-01
            :polarity -
            :ARG0 y
            :mod (j / just)))"
"Sorry, time to tag in","# ::snt Sorry, time to tag in
(a / and
      :op1 (s / sorry-01
            :ARG1 (ii / i))
      :op2 (t / time
            :time-of (t2 / tag-in-02
                  :ARG0 ii)))"
welllllllll,"# ::snt welllllllll
(w / well
      :mode expressive)"
Sleep well,"# ::snt Sleep well
(s / sleep-01
      :mode imperative
      :ARG0 (y / you)
      :manner (w / well-09))"
