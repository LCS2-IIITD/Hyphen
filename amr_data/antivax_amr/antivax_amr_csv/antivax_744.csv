comment,amr
,"# ::snt 
(a / amr-empty)"
.,"# ::snt .
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
"Thanks,","# ::snt Thanks,
(t / thank-01)"
,"# ::snt 
(a / amr-empty)"
Yes,"# ::snt Yes
(y / yes)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Yes UAE,"# ::snt Yes UAE
(y / yes
      :op1 (c / country
            :name (n / name
                  :op1 ""UAE"")))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
vaccine.. ...,"# ::snt vaccine.. ...
(v / vaccine)"
,"# ::snt 
(a / amr-empty)"
"Great, congrats dear","# ::snt Great, congrats dear
(s / say-01
      :ARG1 (a / and
            :op1 (g / great)
            :op2 (c / congratulate-01))
      :ARG2 (d / dear))"
UAE,"# ::snt UAE
(c / country
      :name (n / name
            :op1 ""UAE""))"
Really where when,"# ::snt Really where when
(b / be-located-at-91
      :ARG2 (a / amr-unknown)
      :ARG1-of (r / real-04))"
"I should wait at least or days to see, but I think nothing will happen","# ::snt I should wait at least or days to see, but I think nothing will happen
(c / contrast-01
      :ARG1 (r / recommend-01
            :ARG1 (w / wait-01
                  :ARG1 (ii / i)
                  :ARG2 (s / see-01
                        :ARG0 ii)
                  :duration (a / at-least
                        :op1 (o / or
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (d / day))
                              :op2 (t2 / temporal-quantity
                                    :quant 1
                                    :unit d)))))
      :ARG2 (t3 / think-01
            :ARG0 ii
            :ARG1 (e / event
                  :polarity -)))"
Any side effects?,"# ::snt Any side effects?
(e / event
      :polarity (a / amr-unknown)
      :mod (s / side)
      :ARG1-of (e2 / effect-03))"
,"# ::snt 
(a / amr-empty)"
Full package,"# ::snt Full package
(p / package
      :ARG1-of (f / full-09))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Mabrouk,"# ::snt Mabrouk
(p / person
      :name (n / name
            :op1 ""Mabrouk""))"
Congratulations,"# ::snt Congratulations
(c / congratulate-01)"
Congrats!,"# ::snt Congrats!
(c / congratulate-01
      :mode expressive)"
The Chinese one,"# ::snt The Chinese one
(o / one
      :mod (c / country
            :name (n / name
                  :op1 ""China"")))"
,"# ::snt 
(a / amr-empty)"
which vaccine??,"# ::snt which vaccine??
(v / vaccine
      :mod (a / amr-unknown))"
.,"# ::snt .
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
good luck and take care,"# ::snt good luck and take care
(a / and
      :op1 (l / luck
            :ARG1-of (g / good-02))
      :op2 (c / care-03
            :ARG1-of g))"
