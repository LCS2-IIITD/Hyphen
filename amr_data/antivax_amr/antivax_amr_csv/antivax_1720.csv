comment,amr
"so so SO much nicer than infernos, I cannot stress how much of a hellhole Infernos is","# ::snt so so SO much nicer than infernos, I cannot stress how much of a hellhole Infernos is
(c / cause-01
      :ARG0 (n / nice-01
            :ARG2 (p / product
                  :name (n2 / name
                        :op1 ""Inferno""))
            :ARG1-of (h / have-quant-91
                  :ARG2 (m / much
                        :degree (s / so))
                  :ARG3 s))
      :ARG1 (p2 / possible-01
            :polarity -
            :ARG1 (s2 / stress-02
                  :ARG0 (ii / i)
                  :ARG1 (t / thing
                        :degree-of (h2 / hellhole
                              :domain p)))))"
,"# ::snt 
(a / amr-empty)"
"Vividly!! Wasnt that Valentines night???? God, you just stuck to the floor","# ::snt Vividly!! Wasnt that Valentines night???? God, you just stuck to the floor
(m / multi-sentence
      :snt1 (h / hilarious)
      :snt2 (c / cause-01
            :ARG0 (n / night
                  :polarity -
                  :mod (t / that)
                  :time-of (f / festival
                        :name (n2 / name
                              :op1 ""Valentine's"")))
            :ARG1 (s / stick-01
                  :ARG1 (y / you)
                  :ARG2 (f2 / floor)
                  :mod (j / just)
                  :mod (p / person
                        :mode expressive
                        :name (n3 / name
                              :op1 ""God"")))))"
My immune system was built in that place.,"# ::snt My immune system was built in that place.
(b / build-01
      :ARG1 (s / system
            :ARG1-of (ii / immune-02)
            :poss (ii2 / i))
      :location (p / place
            :mod (t / that)))"
So many happy memories. do you remember getting drunk in there and then randomly getting in a parked taxi outside and having a good old chat with the taxi driver? And then he got an actual passenger and we had to get out?!,"# ::snt So many happy memories. do you remember getting drunk in there and then randomly getting in a parked taxi outside and having a good old chat with the taxi driver? And then he got an actual passenger and we had to get out?!
(m / multi-sentence
      :snt1 (m2 / memory
            :ARG1-of (h / happy-02)
            :ARG1-of (h2 / have-quant-91
                  :ARG2 (m3 / many)
                  :ARG3 (s / so)))
      :snt2 (r / remember-01
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (g / get-03
                        :ARG1 y
                        :ARG2 (d / drunk)
                        :location (t / there))
                  :op2 (a2 / and
                        :op1 (g2 / get-05
                              :ARG1 y
                              :ARG2 (t2 / taxi
                                    :ARG1-of (p / park-01
                                          :location (o / outside)))
                              :manner (r2 / random)
                              :time (t3 / then))
                        :op2 (c / chat-01
                              :ARG0 y
                              :ARG2 (p2 / person
                                    :ARG0-of (d2 / drive-01
                                          :ARG1 (t4 / taxi)))
                              :mod (o2 / old
                                    :ARG1-of (g3 / good-02))
                              :time (t5 / then)))
                  :polarity (a3 / amr-unknown))
            :snt3 (a4 / and
                  :op2 (g4 / get-05
                        :ARG0 (h3 / he)
                        :ARG1 (p3 / passenger
                              :ARG1-of (a5 / actual-02))
                        :time (t6 / then))
                  :op3 (o3 / obligate-01
                        :ARG1 (w / we)
                        :ARG2 (g5 / get-05
                              :ARG1 w
                              :ARG2 (o4 / out-06
                                    :ARG1 w))))))"
I must have missed that memo by a decade - it was always the Clapham Grand for me!,"# ::snt I must have missed that memo by a decade - it was always the Clapham Grand for me!
(m / multi-sentence
      :snt1 (ii / infer-01
            :ARG1 (m2 / miss-02
                  :ARG0 (ii2 / i)
                  :ARG1 (m3 / memo
                        :mod (t / that))
                  :ARG2 (t2 / temporal-quantity
                        :quant 1
                        :unit (d / decade))))
      :snt2 (e / event
            :name (n / name
                  :op1 ""Clapham""
                  :op2 ""Grand"")
            :beneficiary (ii3 / i)
            :time (a / always)))"
Hahah loved that place - and Two Brewers down the road,"# ::snt Hahah loved that place - and Two Brewers down the road
(a / and
      :op1 (l / love-01
            :ARG0 (ii / i)
            :ARG1 (p / place
                  :mod (t / that))
            :mod (h / haha
                  :mode expressive))
      :op2 (b / be-located-at-91
            :ARG1 (p2 / person
                  :quant 2
                  :mod (p3 / political-movement
                        :name (n / name
                              :op1 ""Brewery"")))
            :ARG2 (r / road
                  :direction (d / down))))"
Lol,"# ::snt Lol
(l / laugh-01
      :mode expressive
      :manner (l2 / loud))"
Hahahahahhahah. And don't worry....same over here hoping normality might restart in....August??,"# ::snt Hahahahahhahah. And don't worry....same over here hoping normality might restart in....August??
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / haha
                  :mode expressive)
            :op2 (w / worry-01
                  :polarity -
                  :mode imperative
                  :ARG0 (y / you)))
      :snt2 (s / same-01
            :ARG2 (y2 / you
                  :location (h2 / here)
                  :ARG0-of (h3 / hope-01
                        :ARG1 (p / possible-01
                              :ARG1 (r / restart-01
                                    :ARG1 (n / normality)
                                    :time (d / date-entity
                                          :month 8)))))
            :polarity (a2 / amr-unknown)))"
