comment,amr
Corbyn was better! He would have done as he was told exactly like the other puppets! Ffs wake up,"# ::snt Corbyn was better! He would have done as he was told exactly like the other puppets! Ffs wake up
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Corbyn""))
            :ARG2-of (h / have-degree-91
                  :ARG1 p
                  :ARG3 (m2 / more)))
      :snt2 (d / do-02
            :ARG0 (h2 / he)
            :ARG1 (t / thing
                  :ARG1-of (t2 / tell-01
                        :ARG2 h2)
                  :ARG1-of (r / resemble-01
                        :ARG2 (p2 / puppet
                              :mod (o / other))
                        :mod (e / exact))))
      :snt3 (w / wake-up-02
            :mode imperative
            :ARG1 (p3 / person
                  :ARG0-of (h3 / have-rel-role-91
                        :ARG1 (y / you)
                        :ARG2 (f / fiance)))))"
"Sorry USA, not Canada. Watch it!","# ::snt Sorry USA, not Canada. Watch it!
(m / multi-sentence
      :snt1 (s / sorry-01
            :ARG1 (ii / instead-of-91
                  :ARG1 (c / country
                        :name (n / name
                              :op1 ""USA""))
                  :ARG2 (c2 / country
                        :name (n2 / name
                              :op1 ""Canada""))))
      :snt2 (w / watch-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii2 / it)))"
"We are under a dictatorship under the very brain dead people who voted them in...corbyn was better, but people listened to the brain dead media and tory lies and Israeli lobby lies and Labour corruption with in who voted against him","# ::snt We are under a dictatorship under the very brain dead people who voted them in...corbyn was better, but people listened to the brain dead media and tory lies and Israeli lobby lies and Labour corruption with in who voted against him
(m / multi-sentence
      :snt1 (d / dictatorship
            :domain (w / we)
            :prep-under (p / person
                  :ARG0-of (v / vote-01
                        :ARG1 (t / they))
                  :mod (b / brain
                        :ARG1-of (d2 / die-01)
                        :mod (v2 / very))))
      :snt2 (c / contrast-01
            :ARG1 (h / have-degree-91
                  :ARG1 (p2 / person
                        :name (n / name
                              :op1 ""Corbyn""))
                  :ARG2 (g / good-02
                        :ARG1 p2)
                  :ARG3 (m2 / more))
            :ARG2 (l / listen-01
                  :ARG0 (p3 / person)
                  :ARG1 (a / and
                        :op1 (m3 / media
                              :ARG1-of d2
                              :ARG1 b))
                  :op2 (l2 / lie-08
                        :ARG0 (p4 / political-party
                              :name (n2 / name
                                    :op1 ""Tory"")))
                  :op3 (l3 / lie-08
                        :ARG0 (l4 / lobby-01
                              :ARG0 (c2 / country
                                    :name (n3 / name
                                          :op1 ""Israel""))))
                  :op4 (c3 / corrupt-01
                        :ARG1 (p5 / person
                              :ARG0-of (v3 / vote-01
                                    :ARG1 (a2 / against
                                          :op1 p2)))))))"
What was outcome?,"# ::snt What was outcome?
(o / outcome
      :domain (a / amr-unknown))"
Anyone wanting to know the ADRs of the vaccine click the link below and type covishield in the search box,"# ::snt Anyone wanting to know the ADRs of the vaccine click the link below and type covishield in the search box
(a / and
      :op1 (c / click-01
            :mode imperative
            :ARG0 (a2 / anyone
                  :ARG0-of (w / want-01
                        :ARG1 (k / know-01
                              :ARG0 a2
                              :ARG1 (p / product
                                    :name (n / name
                                          :op1 ""ADR"")
                                    :poss (v / vaccine)))))
            :ARG1 (l / link
                  :location (b / below)))
      :op2 (t / type-01
            :mode imperative
            :ARG0 a2
            :ARG1 (t2 / thing
                  :name (n2 / name
                        :op1 ""Covishield""))
            :location (b2 / box
                  :ARG0-of (s / search-01))))"
"They gonna skirt around it, never answer the question and when they do its always a may or may not bottom line they know they cant implement that so will drag it out for as long as they can","# ::snt They gonna skirt around it, never answer the question and when they do its always a may or may not bottom line they know they cant implement that so will drag it out for as long as they can
(a / and
      :op1 (a2 / and
            :op1 (s / skirt-02
                  :ARG0 (t / they)
                  :ARG1 (ii / it))
            :op2 (a3 / answer-01
                  :polarity -
                  :ARG0 t
                  :ARG1 (q / question-01)
                  :time (e / ever)))
      :op2 (o / or
            :op1 (p / possible-01
                  :ARG1 (l / line
                        :mod (b / bottom)))
            :op2 (p2 / possible-01
                  :polarity -
                  :ARG1 l)
            :time (a4 / always)
            :ARG0-of (c / cause-01
                  :ARG1 (k / know-01
                        :ARG0 t
                        :ARG1 (p3 / possible-01
                              :polarity -
                              :ARG1 (ii2 / implement-01
                                    :ARG0 t
                                    :ARG1 (t2 / that))
                              :ARG0-of (c2 / cause-01
                                    :ARG1 (d / drag-01
                                          :ARG0 t
                                          :ARG1 ii
                                          :direction (o2 / out)
                                          :duration (l2 / long-03
                                                :ARG2-of (h / have-degree-91
                                                      :ARG1 d
                                                      :ARG3 (e2 / equal)
                                                      :ARG4 (p4 / possible-01
                                                            :ARG1 d))))))))))"
"Oh cheers, got it","# ::snt Oh cheers, got it
(a / and
      :op1 (c / cheer-01
            :mod (o / oh))
      :op2 (g / get-01
            :ARG1 (ii / it)))"
YouTube,"# ::snt YouTube
(p / publication
      :name (n / name
            :op1 ""YouTube""))"
any way of watching it other than through the bbc?,"# ::snt any way of watching it other than through the bbc?
(w / way
      :polarity (a / amr-unknown)
      :mod (a2 / any)
      :manner-of (w2 / watch-01
            :ARG1 (ii / it))
      :ARG2-of (e / except-01
            :ARG1 (t / through
                  :op1 (p / publication
                        :name (n / name
                              :op1 ""BBC"")))))"
Still can't believe we are here.,"# ::snt Still can't believe we are here.
(p / possible-01
      :polarity -
      :ARG1 (b / believe-01
            :ARG1 (b2 / be-located-at-91
                  :ARG1 (w / we)
                  :ARG2 (h / here)))
      :mod (s / still))"
