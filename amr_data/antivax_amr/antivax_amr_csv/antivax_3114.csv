comment,amr
Mightve also just been hungover,"# ::snt Mightve also just been hungover
(p / possible-01
      :ARG1 (h / hangover
            :domain (ii / i)
            :mod (a / also)
            :mod (j / just)))"
"New symptoms today were headache and tiredness. Manageable, felt like a very mild hangover. Took tylenol a couple times through the day. Perfectly fine.","# ::snt New symptoms today were headache and tiredness. Manageable, felt like a very mild hangover. Took tylenol a couple times through the day. Perfectly fine.
(m / multi-sentence
      :snt1 (s / symptom
            :ARG1-of (n / new-01)
            :domain (a / and
                  :op1 (h / headache)
                  :op2 (t / tire-01))
            :time (t2 / today))
      :snt2 (p / possible-01
            :ARG1 (m2 / manage-01
                  :ARG1 (f / feel-01
                        :ARG1 (h2 / hangover
                              :mod (m3 / mild
                                    :degree (v / very))))))
      :snt3 (t3 / take-01
            :ARG1 (t4 / tylenol)
            :frequency (r / rate-entity-91
                  :ARG1 2
                  :ARG2 (t5 / temporal-quantity
                        :quant 1
                        :unit (d / day))))
      :snt4 (f2 / fine-04
            :ARG1-of (p2 / perfect-02)))"
Good! Glad to hear. Ive been vaccinated since early Jan. The first dose had me very fatigue and soreness and the second dose gave me a fever.,"# ::snt Good! Glad to hear. Ive been vaccinated since early Jan. The first dose had me very fatigue and soreness and the second dose gave me a fever.
(m / multi-sentence
      :snt1 (g / good-02
            :mode expressive
            :ARG1 (h / hear-01))
      :snt2 (v / vaccinate-01
            :ARG1 (ii / i)
            :time (s / since
                  :op1 (e / early
                        :op1 (d / date-entity
                              :month 1))))
      :snt3 (a / and
            :op1 (h2 / have-03
                  :ARG0 (d2 / dose
                        :ord (o / ordinal-entity
                              :value 1))
                  :ARG1 (a2 / and
                        :op1 (f / fatigue-01
                              :ARG1 (ii2 / i)
                              :degree (v2 / very))
                        :op2 (s2 / soreness
                              :degree v2)))
            :op2 (g2 / give-01
                  :ARG0 (d3 / dose
                        :ord (o2 / ordinal-entity
                              :value 2))
                  :ARG1 (f2 / fever)
                  :ARG2 ii2)))"
Okay,"# ::snt Okay
(o / okay-04)"
"Arm is sore, thats it!","# ::snt Arm is sore, thats it!
(s / sore
      :domain (a / arm)
      :ARG1-of (b / be-it-08))"
Arm soreness is literally all Im dealing with. Its not that severe or anything! Def bearable,"# ::snt Arm soreness is literally all Im dealing with. Its not that severe or anything! Def bearable
(m / multi-sentence
      :snt1 (d / deal-01
            :ARG0 (ii / i)
            :ARG2 (s / soreness
                  :mod (a / arm))
            :mod (l / literal)
            :mod (a2 / all))
      :snt2 (o / or
            :op1 (s2 / severe
                  :polarity -
                  :domain (ii2 / it))
            :op2 (a3 / anything)
            :degree (t / that))
      :snt3 (p / possible-01
            :ARG1 (b / bear-02
                  :ARG1 ii2)))"
How was it .? Im considering it,"# ::snt How was it .? Im considering it
(m / multi-sentence
      :snt1 (h / have-manner-91
            :ARG1 (ii / it)
            :ARG2 (a / amr-unknown))
      :snt2 (c / consider-02
            :ARG0 (ii2 / i)
            :ARG1 (ii3 / it)))"
How you feeling so far? Arm soreness?,"# ::snt How you feeling so far? Arm soreness?
(m / multi-sentence
      :snt1 (f / feel-01
            :ARG0 (y / you)
            :ARG1 (a / amr-unknown)
            :time (s / so-far))
      :snt2 (s2 / sore-03
            :ARG1 (a2 / arm)
            :polarity (a3 / amr-unknown)))"
st dose Moderna,"# ::snt st dose Moderna
(d / dose-01
      :ARG2 (p / product
            :name (n / name
                  :op1 ""Moderna""))
      :ord (o / ordinal-entity
            :value 1))"
