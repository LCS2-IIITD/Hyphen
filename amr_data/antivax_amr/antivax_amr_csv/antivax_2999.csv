comment,amr
Me toooooStronk immune system,"# ::snt Me toooooStronk immune system
(ii / immune-02
      :ARG1 (ii2 / i)
      :mod (t / too)
      :mod (s / system
            :name (n / name
                  :op1 ""Stronk"")))"
My first one was today so Almost the same schedule lol,"# ::snt My first one was today so Almost the same schedule lol
(c / cause-01
      :ARG0 (b / be-temporally-at-91
            :ARG1 (t / thing
                  :ord (o / ordinal-entity
                        :value 1)
                  :poss (ii / i))
            :ARG2 (t2 / today))
      :ARG1 (s / same-01
            :ARG1 (s2 / schedule)
            :mod (a / almost)
            :ARG2-of (l / laugh-01
                  :mode expressive
                  :ARG0 ii
                  :manner (l2 / loud))))"
Did you get yours today??!?!?!?!,"# ::snt Did you get yours today??!?!?!?!
(g / get-01
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG1 (t / thing
            :poss y)
      :time (t2 / today))"
okay fair i did forget about that,"# ::snt okay fair i did forget about that
(a / and
      :op1 (f / fair-01
            :ARG1-of (o / okay-04))
      :op2 (f2 / forget-01
            :ARG0 (ii / i)
            :ARG1 (t / that)))"
All i had to do to get my vaccine in California was sign up in august to voluntarily hang out with dying people,"# ::snt All i had to do to get my vaccine in California was sign up in august to voluntarily hang out with dying people
(o / obligate-01
      :ARG1 (ii / i)
      :ARG2 (d / do-02
            :ARG0 ii
            :ARG1 (s / sign-up-03
                  :ARG1 ii
                  :ARG3 (h / hang-out-06
                        :ARG1 ii
                        :ARG2 (p / person
                              :ARG1-of (d2 / die-01))
                        :ARG1-of (v / volunteer-01))
                  :time (d3 / date-entity
                        :month 11))
            :mod (a / all)
            :purpose (g / get-01
                  :ARG0 ii
                  :ARG1 (v2 / vaccine
                        :poss ii)
                  :location (s2 / state
                        :name (n / name
                              :op1 ""California"")))))"
yearns in ohio,"# ::snt yearns in ohio
(y / yearns
      :location (c / city
            :name (n / name
                  :op1 ""Ohio"")))"
