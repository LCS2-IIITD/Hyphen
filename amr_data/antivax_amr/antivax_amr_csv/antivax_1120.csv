comment,amr
Way to hide you personal info.Just say no to identity theft.Smart.,"# ::snt Way to hide you personal info.Just say no to identity theft.Smart.
(m / multi-sentence
      :snt1 (w / way
            :manner-of (h / hide-01
                  :ARG1 (ii / information
                        :ARG1-of (p / personal-02
                              :ARG2 (y / you)))))
      :snt2 (s / say-01
            :mode imperative
            :ARG0 y
            :ARG1 (n / no)
            :ARG2 (t / thieve-01
                  :ARG1 (ii2 / identity))
            :mod (j / just))
      :snt3 (s2 / smart-06))"
Obviously you dont live in Canada this means,"# ::snt Obviously you dont live in Canada this means
(m / mean-01
      :ARG1 (t / this)
      :ARG2 (l / live-01
            :polarity -
            :ARG0 (y / you)
            :location (c / country
                  :name (n / name
                        :op1 ""Canada"")))
      :ARG1-of (o / obvious-01))"
you got vaccinated,"# ::snt you got vaccinated
(v / vaccinate-01
      :ARG1 (y / you))"
,"# ::snt 
(a / amr-empty)"
Congratulations Kaylyn!,"# ::snt Congratulations Kaylyn!
(c / congratulate-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Kaylyn"")))"
enjoy your discount on Microsoft products,"# ::snt enjoy your discount on Microsoft products
(e / enjoy-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / discount-01
            :ARG0 y
            :ARG1 (p / product
                  :poss (c / company
                        :name (n / name
                              :op1 ""Microsoft"")))))"
"Perfectly said! Congrats!!!! Such a good feeling, I got mine yesterday.","# ::snt Perfectly said! Congrats!!!! Such a good feeling, I got mine yesterday.
(m / multi-sentence
      :snt1 (s / say-01
            :manner (p / perfect-02))
      :snt2 (c / congratulate-01
            :mode expressive
            :ARG1 (y / you))
      :snt3 (f / feel-01
            :ARG0 (ii / i)
            :ARG1 (t / thing)
            :ARG1-of (g / good-02
                  :degree (s2 / such))
            :ARG1-of (c2 / cause-01
                  :ARG0 (g2 / get-01
                        :ARG0 ii
                        :ARG1 (t2 / thing
                              :poss ii)
                        :time (y2 / yesterday)))))"
