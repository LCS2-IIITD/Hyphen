comment,amr
Awesome,"# ::snt Awesome
(a / awe-01)"
"hours in I felt foggy , but next day it hit me so hard, I never felt so sick before. I prepped myself with soup: broth and your gonna get hella dehydrated.","# ::snt hours in I felt foggy , but next day it hit me so hard, I never felt so sick before. I prepped myself with soup: broth and your gonna get hella dehydrated.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (f / feel-01
                  :ARG0 (ii / i)
                  :ARG1 (f2 / foggy)
                  :time (m2 / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (h / hour))))
            :ARG2 (h2 / hit-01
                  :ARG0 (ii2 / it)
                  :ARG1 ii
                  :time (d / day
                        :mod (n / next))
                  :ARG1-of (h3 / hard-02
                        :degree (s / so))))
      :snt2 (f3 / feel-01
            :polarity -
            :ARG0 (ii3 / i)
            :ARG1 (s2 / sick-05
                  :degree (s3 / so))
            :time (b / before)
            :time (e / ever))
      :snt3 (p / prep-02
            :ARG0 (ii4 / i)
            :ARG1 ii4
            :ARG2 (s4 / soup
                  :ARG1-of (m3 / mean-01
                        :ARG2 (a / and
                              :op1 (b2 / broth)
                              :op2 (d2 / dehydrate-01
                                    :ARG1 (y / you)
                                    :degree (h4 / hell)))))))"
nd Phizer hit me around hours later.,"# ::snt nd Phizer hit me around hours later.
(h / hit-01
      :ARG0 (p / product
            :name (n / name
                  :op1 ""Phizer""))
      :ARG1 (ii / i)
      :time (a / after
            :quant (m / multiple
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (h2 / hour)))))"
Vr chat?,"# ::snt Vr chat?
(c / chat-01
      :polarity (a / amr-unknown)
      :mod (v / virtual))"
Yeah in wondering if it'll hit me,"# ::snt Yeah in wondering if it'll hit me
(w / wonder-01
      :ARG1 (t / truth-value
            :polarity-of (h / hit-01
                  :ARG0 (ii / it)
                  :ARG1 (ii2 / i)))
      :mod (y / yeah
            :mode expressive))"
,"# ::snt 
(a / amr-empty)"
"Yea i got it yesterday afternoon and it hit me hard this morning. Fever, chills, headache, nausea. The usual flu stuff. Hopefully it doesn't last too long","# ::snt Yea i got it yesterday afternoon and it hit me hard this morning. Fever, chills, headache, nausea. The usual flu stuff. Hopefully it doesn't last too long
(m / multi-sentence
      :snt1 (a / and
            :op1 (g / get-01
                  :ARG0 (ii / i)
                  :ARG1 (ii2 / it)
                  :time (d / date-entity
                        :dayperiod (a2 / afternoon)
                        :mod (y / yesterday)))
            :op2 (h / hit-01
                  :ARG0 (ii3 / it)
                  :ARG1 ii
                  :ARG1-of (h2 / hard-02)
                  :time (d2 / date-entity
                        :dayperiod (m2 / morning)
                        :mod (t / today))))
      :snt2 (a3 / and
            :op1 (f / fever)
            :op2 (c / chill)
            :op3 (h3 / headache)
            :op4 (n / nausea)
            :op5 (s / stuff
                  :mod (u / usual)
                  :topic (d3 / disease
                        :name (n2 / name
                              :op1 ""influenza""))))
      :snt3 (h4 / hope-01
            :ARG1 (l / last-01
                  :polarity -
                  :ARG1 (ii4 / it)
                  :ARG2 (l2 / long-03
                        :ARG2-of (h5 / have-degree-91
                              :ARG1 ii4
                              :ARG3 (t2 / too))))))"
,"# ::snt 
(a / amr-empty)"
Uhh oh,"# ::snt Uhh oh
(u / uhh
      :mode expressive)"
Ok!,"# ::snt Ok!
(o / okay-01
      :mode expressive)"
We'll see haha,"# ::snt We'll see haha
(s / see-01
      :ARG0 (w / we)
      :mod (h / haha
            :mode expressive))"
Have that option thankfully,"# ::snt Have that option thankfully
(h / have-03
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (o / option
            :mod (t / that))
      :ARG2-of (t2 / thankful-02
            :ARG0 y))"
Nothing yet haha,"# ::snt Nothing yet haha
(n / nothing
      :time (y / yet)
      :mod (h / haha
            :mode expressive))"
Yes!,"# ::snt Yes!
(y / yes)"
Curious to see what happens!,"# ::snt Curious to see what happens!
(c / curious-01
      :ARG0 (s / see-01
            :ARG1 (e / event)))"
naptime incoming,"# ::snt naptime incoming
(ii / incoming
      :domain (n / nap-01))"
Same and im really feeling it rn,"# ::snt Same and im really feeling it rn
(a / and
      :op1 (s / same-01)
      :op2 (f / feel-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / it)
            :ARG1-of (r / real-04))
      :ARG1-of (r2 / request-confirmation-91))"
Lets hang out.,"# ::snt Lets hang out.
(h / hang-out-06
      :mode imperative
      :ARG1 (w / we))"
"Nice! I didn't feel much myself (was just more tired than usual), but that could have been because I was on Tylenol those few days. Hopefully your body can brush it off like it's nothing!","# ::snt Nice! I didn't feel much myself (was just more tired than usual), but that could have been because I was on Tylenol those few days. Hopefully your body can brush it off like it's nothing!
(m / multi-sentence
      :snt1 (n / nice-01
            :mode expressive)
      :snt2 (c / contrast-01
            :ARG1 (f / feel-01
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (m2 / much)
                  :ARG1-of (m3 / mean-01
                        :ARG2 (t / tire-01
                              :ARG1 ii
                              :ARG2-of (h / have-degree-91
                                    :ARG1 ii
                                    :ARG3 (m4 / more)
                                    :ARG4 (u / usual)))))
            :ARG2 (p / possible-01
                  :ARG1 (c2 / cause-01
                        :ARG0 (t2 / take-01
                              :ARG0 ii
                              :ARG1 (p2 / product
                                    :name (n2 / name
                                          :op1 ""Tylenol""))
                              :time (f2 / few
                                    :op1 (t3 / temporal-quantity
                                          :quant 1
                                          :unit (d / day))
                                    :mod (t4 / that)))
                        :ARG1 f)))
      :snt3 (h2 / hope-01
            :ARG1 p
            :ARG1 (b / brush-off-02
                  :ARG0 (b2 / body
                        :poss (y / you))
                  :ARG1 (ii2 / it)
                  :ARG1-of (r / resemble-01
                        :ARG2 (n3 / nothing
                              :domain ii2)))))"
Might wanna make sure you have tomorrow off just in case; the second dose did me IN,"# ::snt Might wanna make sure you have tomorrow off just in case; the second dose did me IN
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (w / want-01
                  :ARG0 (ii / i)
                  :ARG1 (e / ensure-01
                        :ARG0 ii
                        :ARG1 (h / have-03
                              :ARG0 (y / you)
                              :ARG1 (t / tomorrow)
                              :mod (o / off)
                              :mod (c / case
                                    :mod (j / just))))))
      :snt2 (d / do-02
            :ARG0 (d2 / dose
                  :ord (o2 / ordinal-entity
                        :value 2))
            :ARG1 (ii2 / i)
            :location (ii3 / inside)))"
jabbers for makkers!,"# ::snt jabbers for makkers!
(j / jabber-01
      :mode expressive
      :beneficiary (m / makker))"
Getting my second dose today too after work!! How are you feeling so far?,"# ::snt Getting my second dose today too after work!! How are you feeling so far?
(m / multi-sentence
      :snt1 (g / get-01
            :ARG0 (ii / i)
            :ARG1 (d / dose
                  :ord (o / ordinal-entity
                        :value 2))
            :time (t / today)
            :time (a / after
                  :op1 (w / work-01
                        :ARG0 ii))
            :mod (t2 / too))
      :snt2 (f / feel-01
            :ARG0 (y / you)
            :ARG1 (a2 / amr-unknown)
            :time (s / so-far)))"
freedom soon!,"# ::snt freedom soon!
(f / free-04
      :time (s / soon))"
Prepare to nap!,"# ::snt Prepare to nap!
(p / prepare-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 y
      :ARG2 (n / nap-01
            :ARG0 y))"
