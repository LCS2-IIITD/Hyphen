comment,amr
Woohoo! Brilliant news.,"# ::snt Woohoo! Brilliant news.
(m / multi-sentence
      :snt1 (w / Woohoo
            :mode expressive)
      :snt2 (n / news
            :ARG1-of (b / brilliant-01)))"
Good on you Sophie,"# ::snt Good on you Sophie
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (g / good-02
            :ARG1 (o / on
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Sophie""))))
      :ARG2 p)"
Good news Sophie,"# ::snt Good news Sophie
(s / say-01
      :ARG1 (n / news
            :ARG1-of (g / good-02))
      :ARG2 (p / person
            :name (n2 / name
                  :op1 ""Sophie"")))"
Thanks,"# ::snt Thanks
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you))"
I know,"# ::snt I know
(k / know-01
      :ARG0 (ii / i))"
Thats good! I know,"# ::snt Thats good! I know
(g / good-02
      :ARG1 (t / that)
      :ARG1-of (k / know-01
            :ARG0 (ii / i)))"
Thats great good luck x,"# ::snt Thats great good luck x
(l / luck
      :domain (t / that)
      :ARG1-of (g / good-02)
      :mod (g2 / great))"
Happy Days. Have three days of paracetamol pre: jab. Besties daughter is in an army vaccination squad. They were told to do that. Should help. We didnt know till after my first jab. Had Astra Zeneca. Man down for two days.,"# ::snt Happy Days. Have three days of paracetamol pre: jab. Besties daughter is in an army vaccination squad. They were told to do that. Should help. We didnt know till after my first jab. Had Astra Zeneca. Man down for two days.
(m / multi-sentence
      :snt1 (d / day
            :ARG1-of (h / happy-02))
      :snt2 (h2 / have-03
            :ARG1 (p / paracetamol
                  :duration (t / temporal-quantity
                        :quant 3
                        :unit (d2 / day))
                  :time (b / before
                        :op1 (j / jab))))
      :snt3 (h3 / have-org-role-91
            :ARG0 (p2 / person
                  :ARG0-of (h4 / have-rel-role-91
                        :ARG1 (p3 / person
                              :name (n / name
                                    :op1 ""Besties""))
                        :ARG2 (d3 / daughter)))
            :ARG1 (s / squad
                  :ARG0-of (v / vaccinate-01
                        :ARG1 (a / army))))
      :snt4 (t2 / tell-01
            :ARG1 (d4 / do-02
                  :ARG0 (t3 / they)
                  :ARG1 (t4 / that))
            :ARG2 t3)
      :snt5 (r / recommend-01
            :ARG1 (h5 / help-01))
      :snt6 (k / know-01
            :polarity -
            :ARG0 (w / we)
            :time (u / until
                  :op1 (a2 / after
                        :op1 (j2 / jab
                              :ord (o / ordinal-entity
                                    :value 1)))))
      :snt7 (h6 / have-03
            :ARG1 (p4 / product
                  :name (n2 / name
                        :op1 ""Astra""
                        :op2 ""Zeneca"")))
      :snt7 (d5 / down-03
            :ARG1 (m2 / man)
            :duration (t5 / temporal-quantity
                  :quant 2
                  :unit (d6 / day))))"
It is xx,"# ::snt It is xx
(ii / it
      :mod (e / emoticon
            :value ""xx""))"
Brilliant Sophie xx,"# ::snt Brilliant Sophie xx
(p / person
      :name (n / name
            :op1 ""Sophie""
            :op2 ""xx"")
      :mod (b / brilliant))"
Yeah!,"# ::snt Yeah!
(y / yeah
      :mode expressive)"
Thats good,"# ::snt Thats good
(g / good-02
      :ARG1 (t / that))"
Thanks. Thats good,"# ::snt Thanks. Thats good
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you))
      :snt2 (g / good-02
            :ARG1 (t2 / that)))"
So happy,"# ::snt So happy
(h / happy-01
      :degree (s / so))"
I know,"# ::snt I know
(k / know-01
      :ARG0 (ii / i))"
I know,"# ::snt I know
(k / know-01
      :ARG0 (ii / i))"
Thats good. Thanks,"# ::snt Thats good. Thanks
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (t / that))
      :snt2 (t2 / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)))"
"Great news Sophie, I literally just had my nd today. Good luck.","# ::snt Great news Sophie, I literally just had my nd today. Good luck.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (n / news
                  :mod (g / great))
            :ARG2 (p / person
                  :name (n2 / name
                        :op1 ""Sophie"")))
      :snt2 (h / have-03
            :ARG0 (ii / i)
            :ARG1 (n3 / nd
                  :poss ii)
            :time (t / today)
            :mod (l / literal)
            :mod (j / just))
      :snt3 (l2 / luck
            :ARG1-of (g2 / good-02)))"
Awesome,"# ::snt Awesome
(a / awe-01)"
Thats great,"# ::snt Thats great
(g / great
      :domain (t / that))"
Thats great Sophie,"# ::snt Thats great Sophie
(s / say-01
      :ARG1 (g / great
            :domain (t / that))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Sophie"")))"
Brilliant,"# ::snt Brilliant
(b / brilliant-01)"
Great news. I've got my nd on Saturday.,"# ::snt Great news. I've got my nd on Saturday.
(m / multi-sentence
      :snt1 (n / news
            :mod (g / great))
      :snt2 (h / have-03
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :ARG0-of (h2 / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (n2 / nd)))
            :time (d / date-entity
                  :weekday (s / saturday))))"
Literally sitting in my car for mins before driving home from my second,"# ::snt Literally sitting in my car for mins before driving home from my second
(s / sit-01
      :ARG1 (ii / i)
      :ARG2 (c / car
            :poss ii)
      :duration (t / temporal-quantity
            :quant 1
            :unit (m / minute))
      :mod (l / literal)
      :time (b / before
            :op1 (d / drive-01
                  :ARG0 ii
                  :ARG1 (h / home)
                  :source (t2 / thing
                        :ord (o / ordinal-entity
                              :value 2)
                        :poss ii))))"
Was so excited when I got mine,"# ::snt Was so excited when I got mine
(e / excite-01
      :ARG0 (g / get-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :poss ii))
      :ARG1 ii
      :degree (s / so))"
I know,"# ::snt I know
(k / know-01
      :ARG0 (ii / i))"
Great news!,"# ::snt Great news!
(n / news
      :mod (g / great))"
So happy,"# ::snt So happy
(h / happy-01
      :degree (s / so))"
Aww thats good. I bet you were,"# ::snt Aww thats good. I bet you were
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (t / that)
            :mod (a / aw
                  :mode expressive))
      :snt2 (b / bet-01
            :ARG0 (ii / i)
            :ARG2 (g2 / good-02
                  :ARG1 (y / you))))"
Thats good. Thanks,"# ::snt Thats good. Thanks
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (t / that))
      :snt2 (t2 / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)))"
Already had both of mine. Good luck,"# ::snt Already had both of mine. Good luck
(m / multi-sentence
      :snt1 (h / have-03
            :ARG1 (t / thing
                  :mod (b / both)
                  :poss (ii / i))
            :time (a / already))
      :snt2 (l / luck
            :ARG1-of (g / good-02)))"
Aww thats good,"# ::snt Aww thats good
(g / good-02
      :ARG1 (t / that)
      :mod (a / aw
            :mode expressive))"
"I've had of those texts, plus letters all of which have been deleted or chucked in the fire","# ::snt I've had of those texts, plus letters all of which have been deleted or chucked in the fire
(h / have-03
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (t / text-01
                  :mod (t2 / that))
            :op2 (l / letter
                  :mod (a2 / all)
                  :ARG1-of (d / delete-01
                        :ARG1-of (c / cause-01
                              :ARG0 (f / fire)))
                  :ARG1-of (c2 / chuck-01
                        :ARG2 f))))"
,"# ::snt 
(a / amr-empty)"
"Good for you, Sophie. Ive had both jabs already and its not as bad as everyone says. Keep smiling. It bodes well with you.","# ::snt Good for you, Sophie. Ive had both jabs already and its not as bad as everyone says. Keep smiling. It bodes well with you.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (g / good-04
                  :ARG2 (y / you))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Sophie"")))
      :snt2 (a / and
            :op1 (h / have-03
                  :ARG0 (ii2 / i)
                  :ARG1 (j / jab
                        :mod (b / both))
                  :time (a2 / already))
            :op2 (b2 / bad-07
                  :polarity -
                  :ARG1 j
                  :ARG2-of (h2 / have-degree-91
                        :ARG1 j
                        :ARG3 (e / equal)
                        :ARG4 (s2 / say-01
                              :ARG0 (e2 / everyone)))))
      :snt3 (k / keep-02
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (s3 / smile-01
                  :ARG0 y2))
      :snt4 (b3 / bodes-01
            :ARG1 (ii3 / it)
            :ARG3 (w / well-09)
            :beneficiary y2))"
"You will love it, Ive had two and might go back for more!","# ::snt You will love it, Ive had two and might go back for more!
(m / multi-sentence
      :snt1 (l / love-01
            :ARG0 (y / you)
            :ARG1 (ii / it))
      :snt2 (a / and
            :op1 (h / have-03
                  :ARG0 (ii2 / i)
                  :ARG1 (t / thing
                        :quant 2))
            :op2 (p / possible-01
                  :ARG1 (g / go-back-19
                        :ARG1 ii2
                        :ARG2 t
                        :purpose (t2 / thing
                              :quant (m2 / more))))))"
,"# ::snt 
(a / amr-empty)"
