comment,amr
"Adele said it seems to be just men that are rough with it!, even though shes not had hers yet!","# ::snt Adele said it seems to be just men that are rough with it!, even though shes not had hers yet!
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Adele""))
      :ARG1 (r / rough-04
            :ARG0 (m / man
                  :mod (j / just))
            :ARG1 (ii / it)
            :concession (h / have-03
                  :polarity -
                  :ARG0 p
                  :ARG1 (t / thing
                        :poss p)
                  :time (y / yet))))"
I had mine yesterday and I've felt rough all day. Achy and next to no energy.,"# ::snt I had mine yesterday and I've felt rough all day. Achy and next to no energy.
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / have-03
                  :ARG0 (ii / i)
                  :ARG1 (t / thing
                        :poss ii)
                  :time (y / yesterday))
            :op2 (f / feel-01
                  :ARG0 ii
                  :ARG1 (r / rough-05
                        :ARG1 ii)
                  :time (d / day
                        :mod (a2 / all))))
      :snt2 (a3 / and
            :op1 (a4 / Achy)
            :op2 (e / energy
                  :polarity -
                  :mod (n / next-to))))"
Wait til tmoz!,"# ::snt Wait til tmoz!
(w / wait-01
      :mode imperative
      :ARG1 (y / you)
      :time (u / until
            :op1 (t / tuesday)))"
"Nothing yet, but its only been a few hours.","# ::snt Nothing yet, but its only been a few hours.
(c / contrast-01
      :ARG1 (n / nothing
            :time (y / yet))
      :ARG2 (f / few
            :op1 (t / temporal-quantity
                  :quant 1
                  :unit (h / hour))
            :mod (o / only)))"
I ached like a bitch for two days after!,"# ::snt I ached like a bitch for two days after!
(a / ache-01
      :ARG1 (ii / i)
      :manner (r / resemble-01
            :ARG2 (b / bitch))
      :time (a2 / after
            :quant (t / temporal-quantity
                  :quant 2
                  :unit (d / day))))"
