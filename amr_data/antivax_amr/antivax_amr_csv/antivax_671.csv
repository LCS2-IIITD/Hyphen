comment,amr
love you too &lt;33,"# ::snt love you too &lt;33
(a / and
      :op1 (l / love-01
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :mod (t / too))
      :op2 (s / string-entity
            :value ""&lt;33""))"
"yh idk why it's like that for me, some of my friends were fine only their hand hurt a bit but then I have friends that like had fever so Idk (im talking about the first batch)","# ::snt yh idk why it's like that for me, some of my friends were fine only their hand hurt a bit but then I have friends that like had fever so Idk (im talking about the first batch)
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (t / that)
            :ARG1 (r / resemble-01
                  :ARG1 (ii / it)
                  :ARG2 (t2 / that)
                  :beneficiary (ii2 / i))
            :mod (y / yh
                  :mode expressive))
      :snt2 (c2 / contrast-01
            :ARG1 (f / fine-04
                  :ARG1 (p / person
                        :ARG1-of (ii3 / include-91
                              :ARG2 (p2 / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 ii2
                                          :ARG2 (f2 / friend)))
                              :quant (s / some))
                        :part (h2 / hand))
                  :mod (o / only)
                  :degree (b / bit))
            :ARG2 (h3 / hurt-01
                  :ARG1 h2
                  :degree b))
      :snt3 (h4 / have-03
            :ARG0 (ii4 / i)
            :ARG1 (p3 / person
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 ii4
                        :ARG2 (f3 / friend))
                  :ARG0-of h4
                  :ARG1 (f4 / fever)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (p4 / person
                              :ARG0-of (h6 / have-rel-role-91
                                    :ARG1 ii4
                                    :ARG2 (f5 / friend))))))
      :ARG0-of (c3 / cause-01
            :ARG1 (t3 / talk-01
                  :ARG0 ii4
                  :ARG1 (b2 / batch
                        :ord (o2 / ordinal-entity
                              :value 1)))))"
oh wow is it that bad?,"# ::snt oh wow is it that bad?
(b / bad-07
      :polarity (a / amr-unknown)
      :ARG1 (ii / it)
      :degree (t / that)
      :mod (o / oh-wow
            :mode expressive))"
love u &lt;3,"# ::snt love u &lt;3
(l / love-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""lt;3"")))"
"okay bb, hope u r okay &lt;33","# ::snt okay bb, hope u r okay &lt;33
(a / and
      :op1 (o / okay-04
            :ARG1 (ii / i))
      :op2 (h / hope-01
            :ARG0 ii
            :ARG1 (o2 / okay-04
                  :ARG1 (a2 / and
                        :op1 ii
                        :op2 (p / person
                              :name (n / name
                                    :op1 ""lt;33""))))))"
"yh bb dw ily just some side effects, means it's working","# ::snt yh bb dw ily just some side effects, means it's working
(m / mean-01
      :ARG1 (e / event
            :mod (s / side)
            :quant (s2 / some)
            :mod (j / just)
            :mod (h / hey
                  :mode expressive))
      :ARG2 (w / work-09
            :ARG1 (ii / it)))"
yh ik had to take a pill today,"# ::snt yh ik had to take a pill today
(o / obligate-01
      :ARG1 (ii / i)
      :ARG2 (t / take-01
            :ARG0 ii
            :ARG1 (p / pill)
            :time (t2 / today))
      :mod (h / hey
            :mode expressive))"
omg are u okay?,"# ::snt omg are u okay?
(o / okay-04
      :polarity (a / amr-unknown)
      :ARG1 (y / you))"
yeah but dont worry tomorrow it will hurt too but then it'll stop,"# ::snt yeah but dont worry tomorrow it will hurt too but then it'll stop
(c / contrast-01
      :ARG1 (y / yeah
            :mode expressive)
      :ARG2 (w / worry-02
            :polarity -
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 y2
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / contrast-01
                        :ARG1 (h / hurt-02
                              :ARG0 (ii / it)
                              :mod (t / too))
                        :ARG2 (s / stop-01
                              :ARG1 ii
                              :time (t2 / then))))
            :time (t3 / tomorrow)))"
yh god I didn't know it hurts so much,"# ::snt yh god I didn't know it hurts so much
(k / know-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (h / hurt-02
            :ARG1 (ii2 / it)
            :degree (m / much
                  :degree (s / so)))
      :mod (g / god
            :mode expressive
            :mod (y / yh)))"
oh is your hand hurting?,"# ::snt oh is your hand hurting?
(h / hurt-02
      :polarity (a / amr-unknown)
      :ARG1 (h2 / hand
            :part-of (y / you))
      :mod (o / oh
            :mode expressive))"
shush u love me too,"# ::snt shush u love me too
(l / love-01
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :mod (t / too)
      :mod (s / shush
            :mode expressive))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
I mean yh ig for some reason i still love her (jana im kidding don't u dare use that again me),"# ::snt I mean yh ig for some reason i still love her (jana im kidding don't u dare use that again me)
(m / multi-sentence
      :snt1 (m2 / mean-01
            :ARG0 (ii / i)
            :ARG2 (y / you))
      :snt2 (a / and
            :op1 (l / love-01
                  :ARG0 (ii2 / i)
                  :ARG1 (s / she)
                  :mod (s2 / still)
                  :ARG1-of (c / cause-01
                        :ARG0 (r / reason
                              :mod (s3 / some))))
            :op2 (s4 / say-01
                  :ARG0 (ii3 / i)
                  :ARG1 (k / kid-01
                        :ARG0 ii3
                        :ARG2 (d / dare-01
                              :polarity -
                              :ARG1 (y2 / you)
                              :ARG2 (u / use-01
                                    :ARG0 y2
                                    :ARG1 (t / that)
                                    :mod (a2 / again))))
                  :ARG2 (p / person
                        :name (n / name
                              :op1 ""jana"")))))"
Two*,"# ::snt Two*
(t / thing
      :quant 2)"
You too r so cute,"# ::snt You too r so cute
(c / cute
      :degree (s / so)
      :domain (y / you)
      :mod (t / too))"
I love you ig,"# ::snt I love you ig
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (l / love-01
            :ARG0 ii
            :ARG1 (y / you))
      :ARG2 y)"
,"# ::snt 
(a / amr-empty)"
yw ig,"# ::snt yw ig
(y / yw
      :mode expressive)"
,"# ::snt 
(a / amr-empty)"
thanks ig,"# ::snt thanks ig
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 "" ig"")))"
,"# ::snt 
(a / amr-empty)"
JUST INTERACT WITH PEOPLE BISH IDK,"# ::snt JUST INTERACT WITH PEOPLE BISH IDK
(ii / interview-01
      :ARG1 (p / person)
      :mod (j / just))"
I DON'T KNOW I'M THE ONE THAT FORGOT HOW TO USE TWT NOT U,"# ::snt I DON'T KNOW I'M THE ONE THAT FORGOT HOW TO USE TWT NOT U
(k / know-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (o / one
            :ARG0-of (f / FORG1
                  :manner-of (u / use-01)
                  :ARG1-of (ii2 / instead-of-91
                        :ARG2 (p / person
                              :name (n / name
                                    :op1 ""U""))))))"
how?!,"# ::snt how?!
(a / amr-unknown
      :mode expressive)"
well help me then,"# ::snt well help me then
(h / help-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :mod (w / well)
      :mod (t / then))"
not that,"# ::snt not that
(t / that
      :polarity -)"
wtf am I supposed to tweet then i don't remember how to use twt shush,"# ::snt wtf am I supposed to tweet then i don't remember how to use twt shush
(a / and
      :op1 (s / suppose-02
            :ARG1 (ii / i)
            :ARG2 (t / tweet-02
                  :ARG0 ii)
            :mod (f / fuck
                  :mode expressive))
      :op2 (r / remember-01
            :polarity -
            :ARG0 ii
            :ARG1 (t2 / thing
                  :manner-of (u / use-01
                        :ARG0 ii
                        :ARG1 (s2 / shit
                              :mod (t3 / twt))))
            :time (t4 / then)))"
that's what u tweet after so long i-,"# ::snt that's what u tweet after so long i-
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (t / tweet-01
            :ARG0 (y / you)
            :ARG1 (t2 / that)
            :time (a / after
                  :op1 (l / long-03
                        :degree (s2 / so))))
      :ARG2 y)"
