comment,amr
Also I read this today and I think you should too.,"# ::snt Also I read this today and I think you should too.
(a / and
      :op1 (r / read-01
            :ARG0 (ii / i)
            :ARG1 (t / this)
            :mod (a2 / also)
            :time (t2 / today))
      :op2 (t3 / think-01
            :ARG0 ii
            :ARG1 (r2 / recommend-01
                  :ARG0 ii
                  :ARG1 (r3 / read-01
                        :ARG0 (y / you)
                        :ARG1 t
                        :mod (t4 / too)))))"
"Best dosing protocol I've found for Vitamin C is to take Sodium Ascorbate powder in water. Up the dose until things get ""loose"", then reduce it until that problem resolves. This is a how you find the max amount your body will absorb.","# ::snt Best dosing protocol I've found for Vitamin C is to take Sodium Ascorbate powder in water. Up the dose until things get ""loose"", then reduce it until that problem resolves. This is a how you find the max amount your body will absorb.
(m / multi-sentence
      :snt1 (h / have-degree-91
            :ARG1 (t / take-01
                  :ARG1 (s / small-molecule
                        :name (n / name
                              :op1 ""sodium""
                              :op2 ""Ascorbate"")
                        :ARG1-of (p / powder-01))
                  :ARG2 (w / water))
            :ARG2 (g / good-03
                  :ARG1 (p2 / protocol
                        :purpose (d / dose-01))
                  :ARG2 (s2 / small-molecule
                        :name (n2 / name
                              :op1 ""vitamin""
                              :op2 ""C"")))
            :ARG3 (m2 / most)
            :ARG5 (f / find-01
                  :ARG0 (ii / i)
                  :ARG1 p2))
      :snt2 (r / reduce-01
            :ARG1 (t2 / thing)
            :time (u / until
                  :op1 (g2 / get-03
                        :ARG1 (l / loose-03
                              :ARG1 t2)))
            :time (t3 / then))
      :snt3 (t4 / this
            :manner-of f
            :ARG0 (y / you)
            :ARG1 (a / amount
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (b / body
                              :poss y))
                  :ARG1-of (h2 / have-quant-91
                        :ARG3 (m3 / maximum)))))"
What kind of documentation did they give you for taking the shot? Do they give you a certificate or something? I'm genuinely curious as to how this gets recorded.,"# ::snt What kind of documentation did they give you for taking the shot? Do they give you a certificate or something? I'm genuinely curious as to how this gets recorded.
(m / multi-sentence
      :snt1 (g / give-01
            :ARG0 (t / they)
            :ARG1 (d / document-01
                  :mod (k / kind
                        :mod (a / amr-unknown)))
            :ARG2 (y / you)
            :purpose (t2 / take-01
                  :ARG0 y
                  :ARG1 (s / shoot-01)))
      :snt2 (g2 / give-01
            :ARG0 (t3 / they)
            :ARG1 (o / or
                  :op1 (c / certificate)
                  :op2 (s2 / something))
            :ARG2 (y2 / you))
      :snt3 (c2 / curious-01
            :ARG0 (t4 / thing
                  :manner-of (r / record-01
                        :ARG1 (t5 / this)))
            :ARG1 (ii / i)
            :manner (g3 / genuine)))"
"I'm not sure why one thinks the booster shots for new variants won't work. this one works very well for specific known strains and the boosters will do the same for those specific strains, and this thing mutates but not as fast as the flu","# ::snt I'm not sure why one thinks the booster shots for new variants won't work. this one works very well for specific known strains and the boosters will do the same for those specific strains, and this thing mutates but not as fast as the flu
(m / multi-sentence
      :snt1 (s / sure-02
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (t2 / think-01
                              :ARG0 (o / one)
                              :ARG1 (w / work-09
                                    :polarity -
                                    :ARG1 (s2 / shot
                                          :ARG0-of (b / boost-01)
                                          :purpose (v / variant
                                                :ARG1-of (n / new-01))))))))
      :snt2 (a / and
            :op1 (w2 / work-09
                  :ARG1 o
                  :mod (t3 / this))
            :ARG2 (s3 / strain
                  :ARG1-of (s4 / specific-02)
                  :ARG1-of (k / know-01))
            :ARG1-of (w3 / well-09
                  :degree (v2 / very)))
      :op2 (d / do-02
            :ARG0 (b2 / boosters)
            :ARG1 (t4 / thing
                  :ARG0-of (b3 / boost-01))
            :ARG2 (s5 / strain
                  :ARG1-of (s6 / specific-02)
                  :mod (t5 / that)))
      :op3 (m2 / mutate-01
            :ARG1 (t6 / thing)
            :ARG1-of (c2 / contrast-01
                  :ARG2 (h / have-degree-91
                        :polarity -
                        :ARG1 m2
                        :ARG2 (f / fast-02)
                        :ARG3 (e / equal)
                        :ARG4 (d2 / disease
                              :name (n2 / name
                                    :op1 ""influenza""))))))"
"Why do you need to supplenent D, don't you get enough sun in California?","# ::snt Why do you need to supplenent D, don't you get enough sun in California?
(a / and
      :op1 (n / need-01
            :ARG0 (y / you)
            :ARG1 (s / supplenent-01
                  :ARG1 y
                  :ARG2 (p / person
                        :name (n2 / name
                              :op1 ""D"")))
            :ARG1-of (c / cause-01
                  :ARG0 (a2 / amr-unknown)))
      :op2 (g / get-01
            :polarity -
            :ARG0 y
            :ARG1 (s2 / sun
                  :ARG1-of (h / have-quant-91
                        :ARG3 (e / enough)))
            :location (s3 / state
                  :name (n3 / name
                        :op1 ""California""))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a3 / amr-unknown))))"
I was exposed two weeks ago. Working directly with someone who was not symptomatic yet. I tested negative and am fine. Take NAC every day. Have for years. Its powerful shit.,"# ::snt I was exposed two weeks ago. Working directly with someone who was not symptomatic yet. I tested negative and am fine. Take NAC every day. Have for years. Its powerful shit.
(m / multi-sentence
      :snt1 (e / expose-01
            :ARG1 (ii / i)
            :time (b / before
                  :op1 (n / now)
                  :quant (t / temporal-quantity
                        :quant 2
                        :unit (w / week))))
      :snt2 (w2 / work-01
            :ARG2 (s / someone
                  :ARG1-of (s2 / symptom
                        :polarity -
                        :time (y / yet)))
            :ARG1-of (d / direct-02))
      :snt3 (a / and
            :op1 (t2 / test-01
                  :ARG1 (ii2 / i)
                  :ARG2 (n2 / negative-03
                        :ARG1 ii2))
            :op2 (f / fine-04
                  :ARG1 ii2))
      :snt4 (t3 / take-01
            :ARG0 (y2 / you)
            :ARG1 (p / product
                  :name (n3 / name
                        :op1 ""NCAC""))
            :frequency (r / rate-entity-91
                  :ARG3 (t4 / temporal-quantity
                        :quant 1
                        :unit (d2 / day))))
      :snt5 (t5 / take-01
            :ARG0 (ii3 / i)
            :duration (m2 / multiple
                  :op1 (t6 / temporal-quantity
                        :quant 1
                        :unit (y3 / year)))
            :snt6 (s3 / shit
                  :ARG1-of (p2 / powerful-02))))"
Well theres a lid for every pot,"# ::snt Well theres a lid for every pot
(l / lid
      :location (p / pot
            :mod (e / every))
      :mod (w / well))"
I maintain that NAC and vitamin D is the best way to go. NAC also helps you recover from exercise.,"# ::snt I maintain that NAC and vitamin D is the best way to go. NAC also helps you recover from exercise.
(m / multi-sentence
      :snt1 (m2 / maintain-01
            :ARG0 (ii / i)
            :ARG1 (w / way
                  :manner-of (g / go-06)
                  :domain (a / and
                        :op1 (s / small-molecule
                              :name (n / name
                                    :op1 ""NAC""))
                        :op2 (s2 / small-molecule
                              :name (n2 / name
                                    :op1 ""vitamin""
                                    :op2 ""D"")))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (g2 / good-02
                              :ARG1 w)
                        :ARG3 (m3 / most))))
      :snt2 (h2 / help-01
            :ARG0 (s3 / small-molecule
                  :name (n3 / name
                        :op1 ""NCAC""))
            :ARG1 (r / recover-01
                  :ARG1 (y / you)
                  :ARG2 (e / exercise-02
                        :ARG0 y))
            :ARG2 y
            :mod (a2 / also)))"
Probably the zinc did it.,"# ::snt Probably the zinc did it.
(p / probable
      :domain (d / do-02
            :ARG0 (z / zinc)
            :ARG1 (ii / it)))"
"Vitamins C, D, E and zinc","# ::snt Vitamins C, D, E and zinc
(a / and
      :op1 (s / small-molecule
            :name (n / name
                  :op1 ""vitamins""
                  :op2 ""C""))
      :op2 (s2 / small-molecule
            :name (n2 / name
                  :op1 ""D""))
      :op3 (s3 / small-molecule
            :name (n3 / name
                  :op1 ""E""))
      :op4 (z / zinc))"
"I don't know what you have in US, i get regular flu shots second year, no sides for me, it works apparently (no flu).","# ::snt I don't know what you have in US, i get regular flu shots second year, no sides for me, it works apparently (no flu).
(m / multi-sentence
      :snt1 (k / know-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (h / have-03
                        :ARG0 (y / you)
                        :location (c / country
                              :name (n / name
                                    :op1 ""US"")))))
      :snt2 (g / get-01
            :ARG0 (ii2 / i)
            :ARG1 (s / shoot-01
                  :ARG1-of (r / regular-03)
                  :ARG0-of (c2 / counter-01
                        :polarity -
                        :ARG1 ii2))
            :time (y2 / year
                  :ord (o / ordinal-entity
                        :value 2)))
      :snt3 (s2 / side
            :polarity -
            :beneficiary (ii3 / i))
      :snt4 (w / work-09
            :ARG1 (ii4 / it)
            :ARG1-of (a / appear-02)
            :concession (d / disease
                  :polarity -
                  :name n
                  :op1 ""influenza"")))"
Theyre gonna make regular Covid shots mandatory lmao,"# ::snt Theyre gonna make regular Covid shots mandatory lmao
(m / make-02
      :ARG0 (t / they)
      :ARG1 (m2 / mandatory
            :domain (s / shoot-01
                  :ARG1-of (r / regular-02)
                  :mod (c / city
                        :name (n / name
                              :op1 ""Covid""))))
      :ARG2-of (l / laugh-01
            :mode expressive
            :ARG0 (ii / i)
            :manner (l2 / loud)))"
What the heck were you taking?,"# ::snt What the heck were you taking?
(t / take-01
      :ARG0 (y / you)
      :ARG1 (a / amr-unknown
            :mod (h / heck
                  :mode expressive)))"
You'll get the new experimental Covid-2X mutation vaccine every October and you'll like it,"# ::snt You'll get the new experimental Covid-2X mutation vaccine every October and you'll like it
(a / and
      :op1 (g / get-01
            :ARG0 (y / you)
            :ARG1 (v / vaccine
                  :name (n / name
                        :op1 ""Covid-2X"")
                  :ARG1-of (n2 / new-01)
                  :mod (e / experiment)
                  :ARG1-of (m / mutate-01
                        :ARG2 (s / small-molecule
                              :name n
                              :op1 ""2X""))))
      :frequency (r / rate-entity-91
            :ARG4 (d / date-entity
                  :month 10))
      :op2 (l / like-01
            :ARG0 y
            :ARG1 v))"
"Brilliant play, suiciding by taking the vaccine so that your writings would be properly respected after your death, like all great authors","# ::snt Brilliant play, suiciding by taking the vaccine so that your writings would be properly respected after your death, like all great authors
(p / play-01
      :ARG0-of (b / brilliant-01)
      :ARG0-of (m / mean-01
            :ARG1 (s / suiciding
                  :manner (t / take-01
                        :ARG0 (y / you)
                        :ARG1 (v / vaccine)
                        :purpose (r / respect-01
                              :ARG1 (t2 / thing
                                    :ARG1-of (w / write-01
                                          :ARG0 y))
                              :manner (p2 / proper)
                              :time (a / after
                                    :op1 (d / die-01
                                          :ARG1 y))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (p3 / person
                                          :mod (a2 / all)
                                          :ARG0-of (a3 / author-01)
                                          :mod (g / great))))))))"
Literally nobody who has gotten the vaccine has ended up in the hospital sick with Covid. You feel crummy for a a few days after the booster shot and then you can resume your life without fear of severe Covid symptoms.,"# ::snt Literally nobody who has gotten the vaccine has ended up in the hospital sick with Covid. You feel crummy for a a few days after the booster shot and then you can resume your life without fear of severe Covid symptoms.
(m / multi-sentence
      :snt1 (e / end-up-03
            :ARG1 (n / nobody
                  :ARG0-of (g / get-01
                        :ARG1 (v / vaccine)
                        :ARG1-of (s / sick-05
                              :ARG0 (d / disease
                                    :name (n2 / name
                                          :op1 ""Covid"")))))
            :ARG2 (b / be-located-at-91
                  :ARG1 n
                  :ARG2 (h / hospital))
            :mod (l / literal))
      :snt2 (a / and
            :op1 (f / feel-01
                  :ARG0 (y / you)
                  :ARG1 (c / crummy)
                  :time (a2 / after
                        :op1 (s2 / shoot-02
                              :ARG2 (b2 / booster))
                        :duration (f2 / few
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (d2 / day)))))
            :op2 (p / possible-01
                  :ARG1 (r / resume-01
                        :ARG0 y
                        :ARG1 (l2 / life
                              :poss y)
                        :manner (f3 / fear-01
                              :polarity -
                              :ARG0 y
                              :ARG1 (s3 / symptom
                                    :mod d
                                    :mod (s4 / severe))))
                  :time (t2 / then))))"
It takes a lot of chutzpah for a guy named Delicious Tacos to criticize Big Diarrhea,"# ::snt It takes a lot of chutzpah for a guy named Delicious Tacos to criticize Big Diarrhea
(t / take-10
      :ARG0 (c / criticize-01
            :ARG0 (g / guy
                  :name (n / name
                        :op1 ""Delight""
                        :op2 ""Tacos""))
            :ARG1 (p / person
                  :name (n2 / name
                        :op1 ""Big""
                        :op2 ""Diarrhea"")))
      :ARG1 (c2 / chutzpah
            :quant (l / lot)))"
"My understanding is the booster shot activates an immune response and thats why you feel ill. I understand vaccine hesitancy since they got this out so quickly, but Ill choose exposure to the vaccine over the virus. Even healthy people have died, had strokes, etc from Covid.","# ::snt My understanding is the booster shot activates an immune response and thats why you feel ill. I understand vaccine hesitancy since they got this out so quickly, but Ill choose exposure to the vaccine over the virus. Even healthy people have died, had strokes, etc from Covid.
(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (ii / i)
            :ARG1 (a / activate-01
                  :ARG0 (s / shot
                        :ARG0-of (b / boost-01))
                  :ARG1 (r / respond-01
                        :ARG2 (ii2 / immune-02))
                  :ARG0-of (c / cause-01
                        :ARG1 (f / feel-01
                              :ARG0 (y / you)
                              :ARG1 (ii3 / ill-01
                                    :ARG1 y)))))
      :snt2 (c2 / contrast-01
            :ARG1 (u2 / understand-01
                  :ARG0 (ii4 / i)
                  :ARG1 (h / hesitate-01
                        :ARG1 (v / vaccine)
                        :ARG1-of (c3 / cause-01
                              :ARG0 (g / get-out-07
                                    :ARG0 (t / they)
                                    :ARG1 (t2 / this)
                                    :ARG1-of (q / quick-02
                                          :degree (s2 / so))))))
            :ARG2 (c4 / choose-01
                  :ARG0 ii4
                  :ARG1 (e / expose-01
                        :ARG1 ii4
                        :ARG2 (v2 / vaccine)
                        :ARG1-of (c5 / cause-01
                              :ARG0 (v3 / virus)))))
      :snt3 (a2 / and
            :op1 (d / die-01
                  :ARG1 (p / person
                        :mod (h2 / healthy)
                        :mod (e2 / even)))
            :op2 (s3 / stroke-02
                  :ARG1 p)
            :op3 (e3 / et-cetera)
            :source (d2 / disease
                  :name (n / name
                        :op1 ""Covid""))))"
Of note: taking vitamins to prevent corona like Joe Rogan told me also made me sick. Supplements are a conspiracy from Big Diarrhea,"# ::snt Of note: taking vitamins to prevent corona like Joe Rogan told me also made me sick. Supplements are a conspiracy from Big Diarrhea
(m / multi-sentence
      :snt1 (n / note-01
            :ARG1 (m2 / make-02
                  :ARG0 (t / take-01
                        :ARG1 (v / vitamin)
                        :purpose (p / prevent-01
                              :ARG1 (c / corona))
                        :ARG1-of (r / resemble-01
                              :ARG2 (t2 / tell-01
                                    :ARG0 (p2 / person
                                          :name (n2 / name
                                                :op1 ""Joe""
                                                :op2 ""Rogan""))
                                    :ARG2 (ii / i))))
                  :ARG1 (s / sick-05
                        :ARG0 t
                        :ARG1 ii)
                  :mod (a / also)))
      :snt2 (c2 / conspire-01
            :ARG0 (d / disease
                  :name (n3 / name
                        :op1 ""Big""
                        :op2 ""Diarrhea""))
            :ARG1 (s2 / supplement)))"
are you feeling sterile?,"# ::snt are you feeling sterile?
(f / feel-01
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG1 (s / sterile-02
            :ARG1 y))"
"Make your own decisions, either choice is not the end of the world","# ::snt Make your own decisions, either choice is not the end of the world
(a / and
      :op1 (d / decide-01
            :ARG0 (y / you)
            :ARG1-of (o / own-01
                  :ARG0 y))
      :op2 (e / end-01
            :polarity -
            :ARG0 (c / choose-01
                  :mod (e2 / either))
            :ARG1 (w / world)))"
Get healthy and get in shape,"# ::snt Get healthy and get in shape
(a / and
      :op1 (g / get-03
            :mode imperative
            :ARG0 (y / you)
            :ARG1 y
            :ARG2 (h / healthy)
            :op2-of a)
      :mode imperative
      :ARG0 y
      :ARG1 y
      :ARG2 (s / shape-03
            :ARG1 y))"
"It doesn't have to prevent infection, just prevent you from ending up in the ICU.","# ::snt It doesn't have to prevent infection, just prevent you from ending up in the ICU.
(c / contrast-01
      :ARG1 (o / obligate-01
            :polarity -
            :ARG1 (ii / it)
            :ARG2 (p / prevent-01
                  :ARG0 ii
                  :ARG1 (ii2 / infect-01)))
      :ARG2 (p2 / prevent-01
            :ARG0 ii
            :ARG1 (e / end-up-03
                  :ARG1 (y / you)
                  :ARG2 (b / be-located-at-91
                        :ARG1 y
                        :ARG2 (ii3 / ICU)))
            :mod (j / just)))"
"Like the flu shot, vulnerable people should take it. I took it to do my part for public health and bc I think itll be required for travel","# ::snt Like the flu shot, vulnerable people should take it. I took it to do my part for public health and bc I think itll be required for travel
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (t / take-01
                  :ARG0 (p / person
                        :ARG1-of (v / vulnerable-01))
                  :ARG1 (ii / it)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (s / shoot-01
                              :ARG2 (d / disease
                                    :name (n / name
                                          :op1 ""influenza""))))))
      :snt2 (t2 / take-01
            :ARG0 (ii2 / i)
            :ARG1 (ii3 / it)
            :purpose (a / and
                  :op1 (h / healthy
                        :domain (p2 / public))
                  :op2 (c / cause-01
                        :ARG0 (t3 / think-01
                              :ARG0 ii2
                              :ARG1 (r3 / require-01
                                    :ARG1 ii3
                                    :purpose (t4 / travel-01)))))))"
