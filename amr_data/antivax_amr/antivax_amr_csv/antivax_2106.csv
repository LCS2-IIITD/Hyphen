comment,amr
Good good,"# ::snt Good good
(g / good-02
      :ARG1 (t / thing))"
Good morning,"# ::snt Good morning
(m / morning
      :ARG1-of (g / good-02))"
"Well and good and may be I m gonna sleep u can try to sleep a bit earlier each day , I hv tried my best , mins before","# ::snt Well and good and may be I m gonna sleep u can try to sleep a bit earlier each day , I hv tried my best , mins before
(m / multi-sentence
      :snt1 (a / and
            :op1 (w / well)
            :op2 (g / good-02)
            :op3 (p / possible-01
                  :ARG1 (s / sleep-01
                        :ARG0 (ii / i))))
      :snt2 (p2 / possible-01
            :ARG1 (s2 / sleep-01
                  :ARG0 (ii2 / i)
                  :time (b / before
                        :op1 (n / now)
                        :quant (t / temporal-quantity
                              :quant 1
                              :unit (m2 / minute)))))
      :snt3 (t2 / try-01
            :ARG0 (ii3 / i)
            :ARG1 (h / have-degree-91
                  :ARG1 ii3
                  :ARG2 g
                  :ARG1 ii3)
            :ARG3 (m3 / most))
      :time (b2 / before
            :op1 (n2 / now)
            :quant (t3 / temporal-quantity
                  :quant 1
                  :unit m2)))"
Shall we appreciate each other again? You dont have to make me feel good by saying I m interesting Lollld,"# ::snt Shall we appreciate each other again? You dont have to make me feel good by saying I m interesting Lollld
(m / multi-sentence
      :snt1 (a / appreciate-02
            :ARG0 (w / we)
            :ARG1 w
            :mod (a2 / again)
            :polarity (a3 / amr-unknown)
            :mod (a4 / all))
      :snt2 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (o / obligate-01
                  :polarity -
                  :ARG1 (y / you)
                  :ARG2 (m2 / make-02
                        :ARG0 y
                        :ARG1 (f / feel-01
                              :ARG0 (ii2 / i)
                              :ARG1 (g / good-02))
                        :manner (s2 / say-01
                              :ARG0 y
                              :ARG1 (ii3 / interest-01
                                    :ARG1 ii2))))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Lollld""))
            :polarity (a5 / amr-unknown)))"
"You hav already seen a ss of my drafts, what do you even find interesting in that , what is drold","# ::snt You hav already seen a ss of my drafts, what do you even find interesting in that , what is drold
(a / and
      :op1 (s / see-01
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :mod (s2 / ss)
                  :ARG1-of (d / draft-01
                        :ARG0 (ii / i)))
            :time (a2 / already))
      :op2 (f / find-02
            :ARG0 y
            :ARG1 (ii2 / interest-01
                  :ARG0 (t2 / that)
                  :ARG1 y
                  :ARG2 (t3 / thing
                        :ARG1-of (d2 / drold-01)))
            :mod (e / even)))"
*me feeling sorry for the TL if I tweet my drafsh*,"# ::snt *me feeling sorry for the TL if I tweet my drafsh*
(f / feel-01
      :ARG0 (ii / i)
      :ARG1 (s / sorry-01
            :ARG1 ii
            :ARG2 (p / person
                  :ARG0-of (p2 / post-01
                        :manner (o / original))))
      :ARG2 p
      :condition (t / tweet-02
            :ARG0 ii
            :ARG1 (p3 / product
                  :name (n / name
                        :op1 "" drafsh"")
                  :poss ii)))"
*me reading my drafts and feeling sorry for you*,"# ::snt *me reading my drafts and feeling sorry for you*
(a / and
      :op1 (r / read-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (d / draft-01
                        :ARG0 ii)))
      :op2 (f / feel-01
            :ARG0 ii
            :ARG1 (s / sorry-01
                  :ARG1 ii
                  :ARG2 (y / you))))"
As u wish Phew I can now tweet my draftsPS it is a joke. I never simp,"# ::snt As u wish Phew I can now tweet my draftsPS it is a joke. I never simp
(m / multi-sentence
      :snt1 (w / wish-01
            :ARG0 (y / you)
            :ARG1 (p / possible-01
                  :ARG1 (t / tweet-02
                        :ARG0 (ii / i)
                        :ARG1 (t2 / thing
                              :ARG1-of (d / draft-01
                                    :ARG0 ii))
                        :time (n / now))
                  :ARG1-of (c / cause-01
                        :ARG0 w
                        :ARG0 y
                        :ARG1 p
                        :ARG1 t
                        :ARG0 ii
                        :ARG1 (t3 / thing
                              :ARG1-of (p2 / post-01
                                    :ARG0 ii)))))
      :snt2 (s / simp-00
            :polarity -
            :ARG0 (ii2 / i)
            :time (e / ever)))"
And you are the president of this club?! I never simp dude!,"# ::snt And you are the president of this club?! I never simp dude!
(m / multi-sentence
      :snt1 (a / and
            :op2 (h / have-org-role-91
                  :ARG0 (y / you)
                  :ARG1 (c / club
                        :mod (t / this))
                  :ARG2 (p / president))
            :polarity (a2 / amr-unknown))
      :snt2 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (s2 / simp-01
                  :polarity -
                  :mode expressive
                  :ARG0 ii
                  :time (e / ever))
            :ARG2 (d / dude)))"
That is called writing and not simping,"# ::snt That is called writing and not simping
(c / call-01
      :ARG1 (t / that)
      :ARG2 (a / and
            :op1 (w / write-01)
            :op2 (s / simpolarity)))"
I m not glad at all,"# ::snt I m not glad at all
(g / glad-02
      :polarity -
      :ARG1 (ii / i)
      :degree (a / at-all))"
An absolute NoOmg i should hv kept my mouth shut,"# ::snt An absolute NoOmg i should hv kept my mouth shut
(n / no
      :mod (a / absolute)
      :ARG0-of (m / mean-01
            :ARG1 (r / recommend-01
                  :ARG1 (k / keep-01
                        :ARG0 (ii / i
                              :part (m2 / mouth))
                        :ARG1 (s / shut-01
                              :ARG0 ii
                              :ARG1 m2))
                  :ARG2 ii)))"
Shushhh I should hav drafted,"# ::snt Shushhh I should hav drafted
(r / recommend-01
      :ARG1 (d / draft-02
            :ARG1 (ii / i))
      :mod (s / shush
            :mode expressive))"
