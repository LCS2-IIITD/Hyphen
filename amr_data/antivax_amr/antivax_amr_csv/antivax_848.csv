comment,amr
Wt?,"# ::snt Wt?
(p / person
      :name (n / name
            :op1 ""t"")
      :polarity (a / amr-unknown))"
I think well find more to be invalid than wed have hoped. Be well and carry on,"# ::snt I think well find more to be invalid than wed have hoped. Be well and carry on
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (f / find-01
                  :ARG0 ii
                  :ARG1 (v / valid-02
                        :polarity -
                        :ARG1-of (h / have-quant-91
                              :ARG3 (m2 / more)
                              :ARG4 (h2 / hope-01
                                    :ARG0 (w / wed))))
                  :mod (w2 / well)))
      :snt2 (a / and
            :op1 (w3 / well
                  :mode imperative
                  :domain (y / you))
            :op2 (c / carry-on-02
                  :mode imperative
                  :ARG0 y)))"
"Personally, when there are so many conflicting arguments, many of them seemingly monetarily based. I do whats best for me and my family circle. As long as this is America, we should be free to be free.","# ::snt Personally, when there are so many conflicting arguments, many of them seemingly monetarily based. I do whats best for me and my family circle. As long as this is America, we should be free to be free.
(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (g / good-02
                        :ARG2-of (h / have-degree-91
                              :ARG1 t
                              :ARG3 (m2 / most))))
            :ARG2 (a / and
                  :op1 ii
                  :op2 (c / circle
                        :mod (f / family)
                        :poss ii)))
      :snt2 (r / recommend-01
            :ARG1 (f2 / free-04
                  :ARG1 (w / we)
                  :purpose (f3 / free-04
                        :ARG1 w))
            :condition (a2 / as-long-as
                  :op1 (c2 / country
                        :name (n / name
                              :op1 ""America"")
                        :domain (t2 / this))))
      :ARG1-of (p / personal-02))"
Listen to your heart,"# ::snt Listen to your heart
(l / listen-01
      :mode imperative
      :ARG0 (y / you
            :part (h / heart))
      :ARG1 h)"
"What concerns me is unvaccinated people. From the get go, scientists have talked about potential booster shots. It could potentially be a yearly vaccine like the flu shot. I trust the scientists. Be well","# ::snt What concerns me is unvaccinated people. From the get go, scientists have talked about potential booster shots. It could potentially be a yearly vaccine like the flu shot. I trust the scientists. Be well
(m / multi-sentence
      :snt1 (c / concern-01
            :ARG0 (v / vaccinate-01
                  :polarity -
                  :ARG1 (p / person))
            :ARG1 (ii / i))
      :snt2 (t / talk-01
            :ARG0 (s / scientist)
            :ARG1 (s2 / shot
                  :ARG0-of (b / boost-01)
                  :mod (p2 / potential))
            :time (f / from
                  :op1 (g / get-go)))
      :snt3 (p3 / possible-01
            :ARG1 (v2 / vaccine
                  :ARG1-of (r / resemble-01
                        :ARG2 (s3 / shoot
                              :ARG0-of (c2 / counter-01
                                    :ARG1 (d / disease
                                          :name (n / name
                                                :op1 ""influenza""))))
                        :frequency (r2 / rate-entity-91
                              :ARG3 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (y / year)))))
            :snt4 (t3 / trust-02
                  :ARG0 (ii2 / i)
                  :ARG1 (s4 / scientist))
            :snt5 (w / well-09
                  :mode imperative
                  :ARG1 (y2 / you))))"
I would not listen to me. Listen to your health officials.,"# ::snt I would not listen to me. Listen to your health officials.
(m / multi-sentence
      :snt1 (l / listen-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 ii)
      :snt2 (l2 / listen-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (y2 / you)
                        :ARG2 (o / official
                              :topic (h2 / health))))))"
Maximum wifi,"# ::snt Maximum wifi
(b / be-located-at-91
      :ARG2 (f / facility
            :name (n / name
                  :op1 ""Wifi""))
      :mod (m / maximum))"
Congrats! I heard thats where the side effects are the most euphoric!,"# ::snt Congrats! I heard thats where the side effects are the most euphoric!
(m / multi-sentence
      :snt1 (c / congratulate-01
            :mode expressive
            :ARG0 (ii / i))
      :snt2 (h / hear-01
            :ARG0 (ii2 / i)
            :ARG1 (t / that
                  :location-of (e / euphoria
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 (e2 / effect-03
                                    :ARG1 (s / side))
                              :ARG3 (m2 / most))))))"
Pregnant with sextuplets?,"# ::snt Pregnant with sextuplets?
(ii / impregnate-01
      :polarity (a / amr-unknown)
      :ARG1 (p / person
            :ARG0-of (h / have-03
                  :ARG1 (s / sextuplet))))"
This is not a good idea - they should be mixed evenly: moderna/8 Pfizer is much better than moderna,"# ::snt This is not a good idea - they should be mixed evenly: moderna/8 Pfizer is much better than moderna
(m / multi-sentence
      :snt1 (ii / idea
            :polarity -
            :ARG1-of (g / good-02)
            :domain (t / this))
      :snt2 (r / recommend-01
            :ARG1 (m2 / mix-01
                  :ARG1 (t2 / they)
                  :ARG1-of (e / even-02)))
      :snt3 g
      :ARG1 (p / product
            :name (n / name
                  :op1 ""Pfizer"")
            :ARG1-of (e2 / equal-01
                  :ARG2 (p2 / product
                        :name (n2 / name
                              :op1 ""Moderna""))))
      :ARG2-of (h / have-degree-91
            :ARG1 p
            :ARG3 (m3 / more
                  :quant (m4 / much))
            :ARG4 p2))"
Did the chip finally take?,"# ::snt Did the chip finally take?
(t / take-01
      :ARG0 (c / chip)
      :time (f / final)
      :polarity (a / amr-unknown))"
