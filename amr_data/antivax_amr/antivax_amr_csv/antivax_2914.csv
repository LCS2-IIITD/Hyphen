comment,amr
This is amazing Sandy,"# ::snt This is amazing Sandy
(s / say-01
      :ARG1 (a / amaze-01
            :ARG0 (t / this))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Sandy"")))"
The guy on the left looks like he has an IQ of about .,"# ::snt The guy on the left looks like he has an IQ of about .
(l / look-02
      :ARG0 (g / guy
            :location (l2 / left-19))
      :ARG1 (h / have-03
            :ARG0 g
            :ARG1 (q / quotient
                  :quant-of (ii / intelligent-01)
                  :ARG1-of (e / equal-01
                        :ARG2 (a / about)))))"
There are idiots everywhere. You ignorant anti-vaxx idiots are just helping to create much more dangerous mutations of the virus the longer it continues to spread.,"# ::snt There are idiots everywhere. You ignorant anti-vaxx idiots are just helping to create much more dangerous mutations of the virus the longer it continues to spread.
(m / multi-sentence
      :snt1 (ii / idiot
            :location (e / everywhere))
      :snt2 (h / help-01
            :ARG0 (ii2 / idiot
                  :ARG0-of (o / oppose-01
                        :ARG1 (l / law
                              :name (n / name
                                    :op1 ""vaxx"")))
                  :ARG1-of (ii3 / ignorant-02))
            :ARG1 (c / create-01
                  :ARG0 ii2
                  :ARG1 (m2 / mutate-01
                        :ARG1 (v / virus)
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (e2 / endanger-01
                                    :ARG0 m2)
                              :ARG3 (m3 / more
                                    :quant (m4 / much)))))
            :mod (j / just)
            :ARG1-of (c2 / cause-01
                  :ARG0 (c3 / correlate-91
                        :ARG1 (m5 / more
                              :ARG3-of (h3 / have-degree-91
                                    :ARG1 (s / spread-03
                                          :ARG1 v)
                                    :ARG2 (l2 / long-03
                                          :ARG1 s)))
                        :ARG2 (m6 / more
                              :ARG3-of (h4 / have-degree-91
                                    :ARG1 s
                                    :ARG2 l2
                                    :ARG1 s))))))"
Im considering the shingles vax.,"# ::snt Im considering the shingles vax.
(c / consider-02
      :ARG0 (ii / i)
      :ARG1 (p / product
            :name (n / name
                  :op1 ""Shingles""
                  :op2 ""Vax"")))"
Thanks much Pal!,"# ::snt Thanks much Pal!
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (t / thank-01
            :ARG0 ii
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Pal""))
            :mod (m / much))
      :ARG2 p)"
"Ok! here is it Pal , Bookmark and check your download page if i don't respond. REF: /12","# ::snt Ok! here is it Pal , Bookmark and check your download page if i don't respond. REF: /12
(m / multi-sentence
      :snt1 (o / okay-01
            :mode expressive
            :ARG1 (a / and
                  :op1 (b / be-located-at-91
                        :ARG1 (ii / it)
                        :ARG2 (h / here))
                  :op2 (b2 / bookmark)
                  :op3 (c / check-01
                        :mode imperative
                        :ARG0 (y / you)
                        :ARG1 (p / page
                              :mod (d / download-01)
                              :poss y)
                        :condition (r / respond-01
                              :polarity -
                              :ARG0 (ii2 / i)))))
      :snt2 (p2 / publication
            :name (n / name
                  :op1 ""REF"")
            :time (d2 / date-entity
                  :month 12)))"
,"# ::snt 
(a / amr-empty)"
I LOVE that singer!!!!!!!!,"# ::snt I LOVE that singer!!!!!!!!
(l / love-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :ARG0-of (s / sing-01)
            :mod (t / that)))"
,"# ::snt 
(a / amr-empty)"
"UK! ""You can stick your poison vaccines up your arse...""The Brits know how to protest!Other presentation by Franky","# ::snt UK! ""You can stick your poison vaccines up your arse...""The Brits know how to protest!Other presentation by Franky
(m / multi-sentence
      :snt1 (c / country
            :name (n / name
                  :op1 ""UK""))
      :snt2 (p / possible-01
            :ARG1 (s / stick-01
                  :ARG0 (y / you)
                  :ARG1 (v / vaccine
                        :ARG0-of (p2 / poison-01)
                        :poss y)
                  :ARG2 (u / up-03
                        :ARG1 v
                        :ARG2 (a / ass
                              :poss y))))
      :snt3 (k / know-03
            :ARG0 (p3 / person
                  :mod c
                  :name (n2 / name
                        :op1 ""Britain"")))
      :ARG1 (p4 / protest-01
            :ARG0 (p5 / person
                  :name (n3 / name
                        :op1 ""Franky"")))
      :snt4 (p6 / presentation
            :mod (o / other)
            :ARG1-of (a2 / author-01
                  :ARG0 (p7 / person
                        :name (n4 / name
                              :op1 ""Franky"")))))"
,"# ::snt 
(a / amr-empty)"
Wow.,"# ::snt Wow.
(w / wow
      :mode expressive)"
"Vaccine are meds and like all meds have side effects, depending on body chemistry, other meds you're taking. Some people can't take baby aspirin without a reaction and vaccines are not poison. Millions have been vaccinated without reactions from it.","# ::snt Vaccine are meds and like all meds have side effects, depending on body chemistry, other meds you're taking. Some people can't take baby aspirin without a reaction and vaccines are not poison. Millions have been vaccinated without reactions from it.
(m / multi-sentence
      :snt1 (a / and
            :op1 (m2 / med
                  :domain (v / vaccine))
            :op2 (e / effect-03
                  :ARG0 v
                  :mod (s / side)
                  :ARG1-of (r / resemble-01
                        :ARG2 (e2 / effect-03
                              :ARG0 (m3 / medication
                                    :mod (a2 / all)
                                    :ARG1-of (t / take-01
                                          :ARG0 (y / you)))
                              :ARG0-of (d / depend-01
                                    :ARG1 (c / chemistry
                                          :mod (b / body)))))))
      :snt2 (a3 / and
            :op1 (p / possible-01
                  :polarity -
                  :ARG1 (t2 / take-01
                        :ARG0 (p2 / person
                              :mod (s2 / some))
                        :ARG1 (a4 / aspirin
                              :mod (b2 / baby))
                        :manner (r2 / react-01
                              :polarity -
                              :ARG0 p2)))
            :op2 (p3 / poison-02
                  :polarity -
                  :ARG0 (v2 / vaccine)))
      :snt3 (v3 / vaccinate-01
            :ARG1 p2
            :quant (m4 / multiple
                  :op1 1000000))
      :manner (r3 / react-01
            :polarity -
            :ARG0 v2))"
Absolutely awesome!!!,"# ::snt Absolutely awesome!!!
(a / awesome-02
      :degree (a2 / absolute))"
Tdap vax almost killed me and I've been battling skin issues and my allergies got worse!! Never getting another vax again !!!!,"# ::snt Tdap vax almost killed me and I've been battling skin issues and my allergies got worse!! Never getting another vax again !!!!
(m / multi-sentence
      :snt1 (a / and
            :op1 (k / kill-01
                  :ARG0 (p / product
                        :name (n / name
                              :op1 ""Tdap""
                              :op2 ""vax""))
                  :ARG1 (ii / i)
                  :mod (a2 / almost))
            :op2 (b / battle-01
                  :ARG0 ii
                  :ARG1 (ii2 / issue-02
                        :ARG0 (s / skin)
                        :ARG1 ii))
            :op3 (w / worsen-01
                  :ARG0 p
                  :ARG1 (a3 / allergy
                        :poss ii)))
      :snt2 (g / get-01
            :polarity -
            :ARG0 (ii3 / i)
            :ARG1 (v / vax
                  :mod (a4 / another))
            :time (e / ever)
            :mod (a5 / again)))"
Best Tune I've heard all day,"# ::snt Best Tune I've heard all day
(h / have-degree-91
      :ARG1 (t / tune)
      :ARG2 (g / good-02
            :ARG1 t)
      :ARG3 (m / most)
      :ARG5 (h2 / hear-01
            :ARG0 (ii / i)
            :time (d / day
                  :mod (a / all))))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Best British tune!!!,"# ::snt Best British tune!!!
(t / tune
      :mode expressive
      :mod (c / country
            :name (n / name
                  :op1 ""Great""
                  :op2 ""Britain""))
      :ARG1-of (h / have-degree-91
            :ARG2 (g / good-02
                  :ARG1 t)
            :ARG3 (m / most)))"
"Lol my dad used to make wine when I was a child, took a few weeks to brew","# ::snt Lol my dad used to make wine when I was a child, took a few weeks to brew
(a / and
      :op1 (m / make-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (d / dad)))
            :ARG1 (w / wine)
            :time (c / child
                  :domain ii)
            :time (u / use-03)
            :manner (l / laugh-01
                  :mode expressive
                  :ARG0 ii
                  :manner (l2 / loud)))
      :op2 (t / take-10
            :ARG0 (b / brew-01
                  :ARG1 w)
            :ARG1 (f / few
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (w2 / week)))
            :ARG2 ii))"
&lt;3 &lt;3 &lt;3,"# ::snt &lt;3 &lt;3 &lt;3
(a / and
      :op1 3
      :op2 3)"
Apparently it was knocked up in two days,"# ::snt Apparently it was knocked up in two days
(k / knock-up-03
      :ARG1 (ii / it)
      :manner (a / apparent)
      :time (a2 / after
            :op1 (n / now)
            :quant (t / temporal-quantity
                  :quant 2
                  :unit (d / day))))"
Cool,"# ::snt Cool
(c / cool-04)"
,"# ::snt 
(a / amr-empty)"
Me,"# ::snt Me
(ii / i)"
:This is awesome,"# ::snt :This is awesome
(a / awe-01
      :ARG0 (t / this))"
Awesome.,"# ::snt Awesome.
(a / awe-01)"
you'll appreciate this,"# ::snt you'll appreciate this
(a / appreciate-02
      :ARG0 (y / you)
      :ARG1 (t / this))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Where is this ?,"# ::snt Where is this ?
(b / be-located-at-91
      :ARG1 (t / this)
      :ARG2 (a / amr-unknown))"
Not in the UK. It goes down your throat then up your nose!,"# ::snt Not in the UK. It goes down your throat then up your nose!
(m / multi-sentence
      :snt1 (b / be-located-at-91
            :polarity -
            :ARG2 (c / country
                  :name (n / name
                        :op1 ""UK"")))
      :snt2 (g / go-01
            :ARG1 (ii / it)
            :ARG4 (d / down-03
                  :ARG1 ii
                  :path (t / throat
                        :part-of (y / you
                              :part (n2 / nose))))
            :direction (u / up-03
                  :ARG1 ii
                  :ARG2 n2)))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
% chance youre wrong,"# ::snt % chance youre wrong
(c / chance-02
      :ARG1 (w / wrong-04
            :ARG1 (y / you))
      :ARG2 (p / percentage-entity
            :value 90))"
"just Like all the dead BLM protesters who died from Covid last year. Useful idiots are a plenty, dont be one too","# ::snt just Like all the dead BLM protesters who died from Covid last year. Useful idiots are a plenty, dont be one too
(m / multi-sentence
      :snt1 (r / resemble-01
            :ARG2 (p / person
                  :ARG0-of (p2 / protest-01)
                  :mod (a / all)
                  :ARG1-of (d / die-01
                        :location (c / city
                              :name (n / name
                                    :op1 ""Covid""))
                        :time (y / year
                              :mod (l / last)))
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (o / organization
                              :name (n2 / name
                                    :op1 ""BLM""))))
            :mod (j / just))
      :snt2 (p3 / plenty
            :domain (ii / idiot
                  :ARG1-of (u / useful-05)))
      :snt3 (ii2 / idiot
            :polarity -
            :domain (y2 / you)
            :mod (t / too)))"
HEROS!,"# ::snt HEROS!
(l / lucky
      :mode expressive)"
Love!,"# ::snt Love!
(l / love-01)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
What a bunch of idiots.,"# ::snt What a bunch of idiots.
(ii / idiot
      :quant (b / bunch)
      :degree (s / so))"
"Man, that handle made me spit out my drink. Props lol","# ::snt Man, that handle made me spit out my drink. Props lol
(m / multi-sentence
      :snt1 (m2 / make-02
            :ARG0 (h / handle
                  :mod (t / that))
            :ARG1 (s / spit-01
                  :ARG0 (ii / i)
                  :ARG1 (d / drink
                        :poss ii))
            :mod (m3 / man
                  :mode expressive))
      :snt2 (p / post-scriptum
            :ARG2-of (l / laugh-01
                  :ARG0 (ii2 / i)
                  :manner (l2 / loud))))"
Lol,"# ::snt Lol
(l / laugh-01
      :mode expressive
      :manner (l2 / loud))"
,"# ::snt 
(a / amr-empty)"
This video is older than a couple weeks and no mass deaths.,"# ::snt This video is older than a couple weeks and no mass deaths.
(h / have-degree-91
      :ARG1 (v / video
            :mod (t / this))
      :ARG2 (o / old)
      :ARG3 (m / more)
      :ARG4 (a / and
            :op1 (c / couple
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (w / week)))
            :op2 (d / die-01
                  :polarity -
                  :mod (m2 / mass))))"
,"# ::snt 
(a / amr-empty)"
Idiots. Thats where the swab goes!,"# ::snt Idiots. Thats where the swab goes!
(m / multi-sentence
      :snt1 (ii / idiot)
      :snt2 (g / go-01
            :ARG1 (s / swab)
            :ARG4 (t / that)))"
Wow...that's awesome,"# ::snt Wow...that's awesome
(a / awe-01
      :ARG0 (t / that))"
I have never heard londoner song anything in public before.,"# ::snt I have never heard londoner song anything in public before.
(h / hear-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (s / song
            :poss (c / city
                  :name (n / name
                        :op1 ""London"")))
      :time (e / ever)
      :location (a / anything
            :ARG1-of (p / public-02)))"
,"# ::snt 
(a / amr-empty)"
