comment,amr
Thats good to hear. Cant even imagine. So great you have been able to help.,"# ::snt Thats good to hear. Cant even imagine. So great you have been able to help.
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (h / hear-01
                  :ARG1 (t / that)))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (ii / imagine-01
                  :ARG0 (ii2 / i)
                  :mod (e / even)))
      :snt3 (g2 / great
            :degree (s / so)
            :degree (p2 / possible-01
                  :ARG1 (h2 / help-01
                        :ARG0 (y / you)))))"
"It is. Ive been in and around testing sites since June. Ive loved being able to help, but the fear was still in the back of my head","# ::snt It is. Ive been in and around testing sites since June. Ive loved being able to help, but the fear was still in the back of my head
(m / multi-sentence
      :snt1 (ii / it)
      :snt2 (b / be-located-at-91
            :ARG1 (ii2 / i)
            :ARG2 (a / and
                  :op1 (s / site
                        :location-of (t / test-01))
                  :op2 (a2 / around
                        :op1 s))
            :time (s2 / since
                  :op1 (d / date-entity
                        :month 6)))
      :snt3 (c / contrast-01
            :ARG1 (l / love-01
                  :ARG0 (ii3 / i
                        :part (h / head))
                  :ARG1 (c2 / capable-01
                        :ARG1 ii3
                        :ARG2 (h2 / help-01
                              :ARG0 ii3)))
            :ARG2 (f / fear-01
                  :location (b2 / back
                        :part-of h
                        :mod (s3 / still)))))"
It must be a relief as well,"# ::snt It must be a relief as well
(o / obligate-01
      :ARG2 (r / relieve-01
            :ARG0 (ii / it)
            :mod (a / as-well)))"
"Very happy and relieved for you, pup","# ::snt Very happy and relieved for you, pup
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (h / happy-01
                  :ARG1 ii
                  :degree (v / very))
            :op2 (r / relieve-01
                  :ARG1 ii
                  :degree v))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""pup"")))"
,"# ::snt 
(a / amr-empty)"
