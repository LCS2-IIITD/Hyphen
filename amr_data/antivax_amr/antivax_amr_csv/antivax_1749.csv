comment,amr
It is so wrong.,"# ::snt It is so wrong.
(w / wrong-02
      :ARG1 (ii / it)
      :degree (s / so))"
Thats great. Im just so angry that they cancelled mine. X,"# ::snt Thats great. Im just so angry that they cancelled mine. X
(m / multi-sentence
      :snt1 (g / great
            :domain (t / that))
      :snt2 (a / anger-01
            :ARG0 (c / cancel-01
                  :ARG0 (t2 / they)
                  :ARG1 (t3 / thing
                        :poss (ii / i)))
            :ARG1 ii
            :mod (j / just)
            :ARG2-of (h / have-degree-91
                  :ARG1 ii
                  :ARG3 (s / so))))"
How much did the needle hurt,"# ::snt How much did the needle hurt
(h / hurt-01
      :ARG0 (n / needle)
      :quant (a / amr-unknown))"
I had mine done,"# ::snt I had mine done
(d / do-02
      :ARG0 (ii / i)
      :ARG1 (t / thing
            :poss ii))"
So sorry Baz. It is really terrible.,"# ::snt So sorry Baz. It is really terrible.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (s2 / sorry-01
                  :degree (s3 / so))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Baz"")))
      :snt2 (t / terrible-01
            :ARG1 (ii / it)
            :degree (r / really)))"
Oh no.. the nurse just told me that they are cancelling from today,"# ::snt Oh no.. the nurse just told me that they are cancelling from today
(t / tell-01
      :ARG0 (n / nurse)
      :ARG1 (c / cancel-01
            :ARG0 (t2 / they)
            :ARG1 (t3 / today))
      :ARG2 (ii / i)
      :mod (o / oh-no
            :mode expressive)
      :time (j / just))"
My second one was postponed until weeks after the first. Raging.,"# ::snt My second one was postponed until weeks after the first. Raging.
(m / multi-sentence
      :snt1 (p / postpone-01
            :ARG1 (t / thing
                  :ord (o / ordinal-entity
                        :value 2)
                  :poss (ii / i))
            :time (u / until
                  :op1 (a / after
                        :op1 (t2 / thing
                              :ord (o2 / ordinal-entity
                                    :value 1))
                        :quant (m2 / multiple
                              :op1 (t3 / temporal-quantity
                                    :quant 1
                                    :unit (w / week))))))
      :snt2 (r / ration-01))"
