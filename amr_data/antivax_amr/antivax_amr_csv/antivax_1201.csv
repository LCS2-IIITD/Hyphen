comment,amr
Yet anyone who dies writhing days of testing positive is said to have died of covid.,"# ::snt Yet anyone who dies writhing days of testing positive is said to have died of covid.
(h / have-concession-91
      :ARG1 (s / say-01
            :ARG1 (d / die-01
                  :ARG1 (a / anyone
                        :ARG1-of (d2 / die-01
                              :ARG1-of (w / writhing-00
                                    :duration (m / multiple
                                          :op1 (t / temporal-quantity
                                                :quant 1
                                                :unit (d3 / day))))
                              :time (t2 / test-01
                                    :ARG2 (p / positive))))
                  :ARG1-of (c / cause-01
                        :ARG0 (p2 / product
                              :name (n / name
                                    :op1 "" covid""))))))"
Sure. Lets have more elderly die then in order to establish causation,"# ::snt Sure. Lets have more elderly die then in order to establish causation
(m / multi-sentence
      :snt1 (s / sure-02)
      :snt2 (h / have-04
            :mode imperative
            :ARG0 (w / we)
            :ARG1 (d / die-01
                  :ARG1 (p / person
                        :mod (e / elderly)
                        :ARG1-of (h2 / have-quant-91
                              :ARG3 (m2 / more))))
            :purpose (e2 / establish-01
                  :ARG0 w
                  :ARG1 (c / causation))
            :mod (t / then)))"
Is ADE the cause?,"# ::snt Is ADE the cause?
(c / cause-01
      :ARG0 (a / affirmative-action)
      :polarity (a2 / amr-unknown))"
Do vaccines used by UK kill? Without much room for doubt!,"# ::snt Do vaccines used by UK kill? Without much room for doubt!
(m / multi-sentence
      :snt1 (k / kill-01
            :polarity (a / amr-unknown)
            :ARG0 (v / vaccine
                  :ARG1-of (u / use-01
                        :ARG0 (c / country
                              :name (n / name
                                    :op1 ""UK"")))))
      :snt2 (r / room
            :polarity -
            :purpose (d / doubt-01)
            :quant (m2 / much)))"
