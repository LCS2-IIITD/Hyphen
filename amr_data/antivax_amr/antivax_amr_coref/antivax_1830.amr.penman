# ::snt Yes how does it shed??
# ::tokens ["Yes", "how", "does", "it", "shed", "?", "?"]
# ::lemmas ["yes", "how", "do", "it", "shed", "?", "?"]
(c1-0 / shed-01
      :ARG1 (c1-1 / it)
      :manner (c1-2 / amr-unknown))

# ::snt Actually, If continuing widespread, long-term fear is what you want....this is perfect
# ::tokens ["Actually", ",", "If", "continuing", "widespread", ",", "long", "-", "term", "fear", "is", "what", "you", "want", "....", "this", "is", "perfect"]
# ::lemmas ["actually", ",", "if", "continue", "widespread", ",", "long", "-", "term", "fear", "be", "what", "you", "want", "....", "this", "be", "perfect"]
(c2-7 / perfect-02
      :ARG1 (c2-5 / this)
      :ARG1-of (c2-1 / actual-02)
      :condition (c2-3 / continue-01
                       :ARG1 (c2-2 / fear-01
                                   :ARG1-of (c2-0 / spread-02
                                                  :ARG1-of (c2-4 / wide-02))
                                   :duration (c2-6 / long-03))
                       :ARG1-of (c2-9 / want-01
                                      :ARG0 (c2-8 / you))))

# ::snt Thats a terrifying thought. Source please!
# ::tokens ["That", "s", "a", "terrifying", "thought", ".", "Source", "please", "!"]
# ::lemmas ["that", "s", "a", "terrifying", "thought", ".", "source", "please", "!"]
(c3-5 / multi-sentence
      :snt1 (c3-3 / thing
                  :ARG1-of (c3-1 / think-01)
                  :ARG0-of (c3-6 / terrify-01)
                  :domain (c3-2 / that))
      :snt2 (c3-0 / source-01
                  :ARG0 (c3-4 / you)
                  :polite +
                  :mode imperative))

# ::snt That is not what that chart says. Over million Americans have been vaccinated. If you picked that many people at random, thousand would die within the next week. There are about on that chart.
# ::tokens ["That", "is", "not", "what", "that", "chart", "says", ".", "Over", "million", "Americans", "have", "been", "vaccinated", ".", "If", "you", "picked", "that", "many", "people", "at", "random", ",", "thousand", "would", "die", "within", "the", "next", "week", ".", "There", "are", "about", "on", "that", "chart", "."]
# ::lemmas ["that", "be", "not", "what", "that", "chart", "say", ".", "Over", "million", "Americans", "have", "be", "vaccinate", ".", "if", "you", "pick", "that", "many", "people", "at", "random", ",", "thousand", "would", "die", "within", "the", "next", "week", ".", "there", "be", "about", "on", "that", "chart", "."]
(c4-11 / multi-sentence
       :snt1 (c4-15 / say-01
                    :ARG0 (c4-3 / chart
                                :mod (c4-9 / that))
                    :ARG1 (c4-5 / that)
                    :polarity -)
       :snt2 (c4-7 / vaccinate-01
                   :ARG1 (c4-25 / person
                                :mod (c4-0 / country
                                           :name (c4-12 / name
                                                        :op1 "America"))
                                :quant (c4-8 / over
                                             :op1 1000000)))
       :snt3 (c4-1 / die-01
                   :ARG1 (c4-23 / person
                                :quant 1000)
                   :condition (c4-17 / pick-01
                                     :ARG0 (c4-19 / you)
                                     :ARG1 (c4-16 / person
                                                  :quant (c4-22 / many
                                                                :mod (c4-13 / that)))
                                     :manner (c4-10 / random))
                   :time (c4-4 / within
                               :op1 (c4-14 / week
                                           :mod (c4-2 / next))))
       :snt4 (c4-24 / be-located-at-91
                    :ARG1 (c4-18 / thing
                                 :quant (c4-20 / about))
                    :ARG2 (c4-6 / chart
                                :mod (c4-21 / that))))

# ::snt Let's keep encouraging liberals to get the vaccine.
# ::tokens ["Let", "'s", "keep", "encouraging", "liberals", "to", "get", "the", "vaccine", "."]
# ::lemmas ["let", "us", "keep", "encourage", "liberal", "to", "get", "the", "vaccine", "."]
(c5-5 / keep-02
      :ARG0 (c5-0 / we)
      :ARG1 (c5-6 / encourage-01
                  :ARG0 c5-0
                  :ARG1 (c5-4 / person
                              :ARG1-of (c5-2 / liberal-02))
                  :ARG2 (c5-3 / get-01
                              :ARG0 c5-4
                              :ARG1 (c5-1 / vaccine)))
      :mode imperative)

# ::snt Just dumb. He never said that
# ::tokens ["Just", "dumb", ".", "He", "never", "said", "that"]
# ::lemmas ["just", "dumb", ".", "he", "never", "say", "that"]
(c6-5 / multi-sentence
      :snt1 (c6-0 / dumb
                  :mod (c6-4 / just))
      :snt2 (c6-1 / say-01
                  :ARG0 (c6-2 / he)
                  :ARG1 (c6-3 / that)
                  :time (c6-6 / ever)
                  :polarity -))

# ::snt His name is Mike Yeadon. Do your (non Google) research - hes got a lot of really important things to say, that everyone should consider before getting a shot.
# ::tokens ["His", "name", "is", "Mike", "Yeadon", ".", "Do", "your", "(", "non", "Google", ")", "research", "-", "he", "s", "got", "a", "lot", "of", "really", "important", "things", "to", "say", ",", "that", "everyone", "should", "consider", "before", "getting", "a", "shot", "."]
# ::lemmas ["his", "name", "be", "Mike", "Yeadon", ".", "do", "your", "(", "non", "Google", ")", "research", "-", "he", "s", "get", "a", "lot", "of", "really", "important", "thing", "to", "say", ",", "that", "everyone", "should", "consider", "before", "get", "a", "shot", "."]
(c8-12 / multi-sentence
       :snt1 (c8-13 / name-01
                    :ARG1 (c8-18 / he)
                    :ARG2 (c8-22 / person
                                 :name (c8-2 / name
                                             :op1 "Mike"
                                             :op2 "Yeadon")))
       :snt2 (c8-0 / do-02
                   :ARG0 (c8-17 / you)
                   :ARG1 (c8-9 / research-01
                               :ARG0 c8-17
                               :manner (c8-5 / company
                                             :name (c8-16 / name
                                                          :op1 "Google")
                                             :polarity -))
                   :ARG1-of (c8-1 / cause-01
                                  :ARG0 (c8-3 / have-03
                                              :ARG0 c8-18)
                                  :ARG1 (c8-15 / say-01
                                               :ARG0 c8-18
                                               :ARG1 (c8-8 / thing
                                                           :quant (c8-19 / lot)
                                                           :ARG1-of (c8-4 / important-01
                                                                          :degree (c8-6 / really))
                                                           :ARG1-of (c8-7 / consider-02
                                                                          :ARG0 (c8-14 / everyone)
                                                                          :time (c8-20 / before
                                                                                       :op1 (c8-10 / get-01
                                                                                                   :ARG0 c8-14
                                                                                                   :ARG1 (c8-21 / shoot-02)))
                                                                          :ARG1-of (c8-11 / recommend-01)))))
                   :mode imperative))

# ::snt Back, to your "hole" !!
# ::tokens ["Back", ",", "to", "your", "\"", "hole", "\"", "!", "!"]
# ::lemmas ["back", ",", "to", "your", "\"", "hole", "\"", "!", "!"]
(c9-0 / back-02
      :destination (c9-1 / hole
                         :poss (c9-2 / you)))

# ::snt Direct message me i can share a link how this will happen with the gene therapy shot
# ::tokens ["Direct", "message", "me", "i", "can", "share", "a", "link", "how", "this", "will", "happen", "with", "the", "gene", "therapy", "shot"]
# ::lemmas ["direct", "message", "i", "i", "can", "share", "a", "link", "how", "this", "will", "happen", "with", "the", "gene", "therapy", "shoot"]
(c10-2 / and
       :op1 (c10-11 / message-01
                    :ARG0 (c10-12 / you)
                    :ARG1 (c10-10 / i)
                    :ARG1-of (c10-0 / direct-02)
                    :mode imperative)
       :op2 (c10-6 / possible-01
                   :ARG1 (c10-1 / share-01
                                :ARG0 c10-10
                                :ARG1 (c10-7 / link
                                             :topic (c10-5 / thing
                                                           :manner-of (c10-4 / this
                                                                             :prep-with (c10-9 / shot
                                                                                               :mod (c10-3 / therapy
                                                                                                           :mod (c10-8 / gene)))))))))

# ::snt Lookup Agenda /2030. It outlines the New World Order.
# ::tokens ["Lookup", "Agenda", "/2030", ".", "It", "outlines", "the", "New", "World", "Order", "."]
# ::lemmas ["Lookup", "Agenda", "/2030", ".", "it", "outline", "the", "New", "World", "Order", "."]
(c11-5 / multi-sentence
       :snt1 (c11-4 / publication
                    :name (c11-6 / name
                                 :op1 "Lookup"
                                 :op2 "Agenda")
                    :time (c11-0 / date-entity
                                 :year 2030))
       :snt2 (c11-3 / outline-01
                    :ARG0 (c11-1 / it)
                    :ARG1 (c11-2 / order
                                 :name c11-6
                                 :op1 "New"
                                 :op2 "World"
                                 :op3 "Order")))

# ::snt Ex-act-ly.
# ::tokens ["Ex", "-", "act", "-", "ly", "."]
# ::lemmas ["Ex", "-", "act", "-", "ly", "."]
(c12-1 / event
       :mod (c12-0 / immediate))

# ::snt Theres no protections for someone taking the vaccine. Because its experimental, the pharma companies are not liable for any damages it causes to someone. So if they have adverse reactions or die, you cant sue.
# ::tokens ["There", "s", "no", "protections", "for", "someone", "taking", "the", "vaccine", ".", "Because", "its", "experimental", ",", "the", "pharma", "companies", "are", "not", "liable", "for", "any", "damages", "it", "causes", "to", "someone", ".", "So", "if", "they", "have", "adverse", "reactions", "or", "die", ",", "you", "ca", "nt", "sue", "."]
# ::lemmas ["there", "s", "no", "protection", "for", "someone", "take", "the", "vaccine", ".", "because", "its", "experimental", ",", "the", "pharma", "company", "be", "not", "liable", "for", "any", "damage", "it", "cause", "to", "someone", ".", "so", "if", "they", "have", "adverse", "reaction", "or", "die", ",", "you", "can", "not", "sue", "."]
(c13-10 / multi-sentence
        :snt1 (c13-21 / protect-01
                      :ARG1 (c13-13 / someone
                                    :ARG0-of (c13-8 / take-01
                                                    :ARG1 (c13-6 / vaccine)))
                      :polarity -)
        :snt2 (c13-19 / liable-01
                      :ARG0 (c13-3 / company
                                   :mod (c13-18 / pharma))
                      :ARG2 (c13-0 / damages-02
                                   :ARG1-of (c13-1 / cause-01
                                                   :ARG0 c13-6)
                                   :mod (c13-17 / any))
                      :ARG1-of (c13-5 / cause-01
                                      :ARG0 (c13-12 / experiment-01
                                                    :ARG1 c13-6))
                      :polarity -)
        :snt3 (c13-2 / infer-01
                     :ARG1 (c13-14 / possible-01
                                   :ARG1 (c13-20 / sue-02
                                                 :ARG0 (c13-16 / you))
                                   :condition (c13-7 / or
                                                     :op1 (c13-9 / react-01
                                                                 :ARG0 (c13-4 / they)
                                                                 :manner (c13-11 / adverse))
                                                     :op2 (c13-15 / die-01
                                                                  :ARG1 c13-4))
                                   :polarity -)))

# ::snt They have been talking about this long before the vaccine rollout. It has just been censored by the media.
# ::tokens ["They", "have", "been", "talking", "about", "this", "long", "before", "the", "vaccine", "rollout", ".", "It", "has", "just", "been", "censored", "by", "the", "media", "."]
# ::lemmas ["they", "have", "be", "talk", "about", "this", "long", "before", "the", "vaccine", "rollout", ".", "it", "have", "just", "be", "censor", "by", "the", "medium", "."]
(c14-10 / multi-sentence
        :snt1 (c14-4 / talk-01
                     :ARG0 (c14-2 / they)
                     :ARG1 (c14-11 / this)
                     :time (c14-7 / before
                                  :op1 (c14-5 / roll-out-02
                                              :ARG1 (c14-3 / vaccine))
                                  :ARG1-of (c14-6 / long-03)))
        :snt2 (c14-0 / censor-01
                     :ARG0 (c14-1 / media)
                     :ARG1 (c14-9 / it)
                     :mod (c14-8 / just)))

# ::snt And all those liberal socialist democratic leaders that took a placebo will blame Trump.
# ::tokens ["And", "all", "those", "liberal", "socialist", "democratic", "leaders", "that", "took", "a", "placebo", "will", "blame", "Trump", "."]
# ::lemmas ["and", "all", "those", "liberal", "socialist", "democratic", "leader", "that", "take", "a", "placebo", "will", "blame", "Trump", "."]
(c16-0 / and
       :op2 (c16-9 / blame-01
                   :ARG0 (c16-10 / person
                                 :ARG0-of (c16-7 / lead-02)
                                 :mod (c16-4 / political-movement
                                             :name (c16-11 / name
                                                           :op1 "socialism"))
                                 :ARG1-of (c16-8 / liberal-02)
                                 :mod (c16-5 / that)
                                 :mod (c16-12 / all)
                                 :ARG0-of (c16-2 / take-01
                                                 :ARG1 (c16-3 / placebo)))
                   :ARG1 (c16-1 / person
                                :name (c16-6 / name
                                             :op1 "Trump"))))

# ::snt Dr Yeadon is not an "antivaxxer", he just has major concerns about the experiential Covid vaccines.
# ::tokens ["Dr", "Yeadon", "is", "not", "an", "\"", "antivaxxer", "\"", ",", "he", "just", "has", "major", "concerns", "about", "the", "experiential", "Covid", "vaccines", "."]
# ::lemmas ["Dr", "Yeadon", "be", "not", "an", "\"", "antivaxxer", "\"", ",", "he", "just", "have", "major", "concern", "about", "the", "experiential", "Covid", "vaccine", "."]
(c17-1 / contrast-01
       :ARG1 (c17-7 / person
                    :name (c17-9 / name
                                 :op1 "Dr"
                                 :op2 "Yeadon")
                    :mod (c17-0 / company
                                :name (c17-5 / name
                                             :op1 "antivaxxer")))
       :ARG2 (c17-2 / concern-01
                    :ARG0 (c17-3 / vaccine
                                 :name (c17-4 / name
                                              :op1 "Covid")
                                 :mod (c17-10 / experiential))
                    :ARG1 c17-7
                    :ARG1-of (c17-8 / major-02)
                    :mod (c17-6 / just)))

# ::snt It's here too.
# ::tokens ["It", "'s", "here", "too", "."]
# ::lemmas ["it", "be", "here", "too", "."]
(c18-0 / be-located-at-91
       :ARG1 (c18-1 / it)
       :ARG2 (c18-2 / here)
       :mod (c18-3 / too))

# ::snt Go via this article, which contains a transcript of the interview.
# ::tokens ["Go", "via", "this", "article", ",", "which", "contains", "a", "transcript", "of", "the", "interview", "."]
# ::lemmas ["go", "via", "this", "article", ",", "which", "contain", "a", "transcript", "of", "the", "interview", "."]
(c19-4 / go-02
       :ARG0 (c19-6 / you)
       :ARG4 (c19-0 / article
                    :mod (c19-3 / this)
                    :ARG0-of (c19-1 / contain-01
                                    :ARG1 (c19-2 / transcribe-01
                                                 :ARG1 (c19-5 / interview-01))))
       :mode imperative)

# ::snt It's Dr Mike Yeadon, and the latest interview I listened to hinted that as a possibility, but was not so explicit, IMO.It's a four part transcript published here,with a link to the podcast, which could not be on YouTube for obvious reasons.
# ::tokens ["It", "'s", "Dr", "Mike", "Yeadon", ",", "and", "the", "latest", "interview", "I", "listened", "to", "hinted", "that", "as", "a", "possibility", ",", "but", "was", "not", "so", "explicit", ",", "IMO.It", "'s", "a", "four", "part", "transcript", "published", "here", ",", "with", "a", "link", "to", "the", "podcast", ",", "which", "could", "not", "be", "on", "YouTube", "for", "obvious", "reasons", "."]
# ::lemmas ["it", "be", "Dr", "Mike", "Yeadon", ",", "and", "the", "late", "interview", "i", "listen", "to", "hint", "that", "as", "a", "possibility", ",", "but", "be", "not", "so", "explicit", ",", "IMO.It", "be", "a", "four", "part", "transcript", "publish", "here", ",", "with", "a", "link", "to", "the", "podcast", ",", "which", "could", "not", "be", "on", "YouTube", "for", "obvious", "reason", "."]
(c20-1 / and
       :op1 (c20-12 / person
                    :name (c20-13 / name
                                  :op1 "Dr"
                                  :op2 "Mike"
                                  :op3 "Yeadon")
                    :domain (c20-2 / it))
       :op2 (c20-4 / hint-01
                   :ARG0 (c20-5 / interview-01
                                :ARG1-of (c20-10 / listen-01
                                                 :ARG0 (c20-6 / i))
                                :mod (c20-11 / last))
                   :ARG1 (c20-8 / possible-01
                                :ARG1 (c20-9 / that)
                                :ARG1-of (c20-3 / contrast-01
                                                :ARG2 (c20-14 / explicit-03
                                                              :ARG1 c20-5
                                                              :degree (c20-0 / so
                                                                             :polarity -)
                                                              :ARG1-of (c20-7 / opine-01
                                                                              :ARG0 c20-6))))))

# ::snt you can find it on duckduckgo
# ::tokens ["you", "can", "find", "it", "on", "duckduckgo"]
# ::lemmas ["you", "can", "find", "it", "on", "duckduckgo"]
(c21-3 / possible-01
       :ARG1 (c21-0 / find-01
                    :ARG0 (c21-5 / you)
                    :ARG1 (c21-2 / it)
                    :location (c21-1 / company
                                     :name (c21-4 / name
                                                  :op1 " duckduckgo"))))

# ::snt Yes I'm learning that most people are happy at the prospect of traveling and partying again and are completely ignorant to these inconvenient alternate news
# ::tokens ["Yes", "I", "'m", "learning", "that", "most", "people", "are", "happy", "at", "the", "prospect", "of", "traveling", "and", "partying", "again", "and", "are", "completely", "ignorant", "to", "these", "inconvenient", "alternate", "news"]
# ::lemmas ["yes", "i", "be", "learn", "that", "most", "people", "be", "happy", "at", "the", "prospect", "of", "travel", "and", "party", "again", "and", "be", "completely", "ignorant", "to", "these", "inconvenient", "alternate", "news"]
(c22-11 / learn-01
        :ARG0 (c22-13 / i)
        :ARG1 (c22-2 / and
                     :op1 (c22-6 / happy-01
                                 :ARG0 (c22-12 / prospect-02
                                               :ARG0 (c22-9 / person
                                                            :mod (c22-14 / most))
                                               :ARG1 (c22-16 / and
                                                             :op1 (c22-10 / travel-01
                                                                          :ARG0 c22-9)
                                                             :op2 (c22-5 / party-01
                                                                         :ARG0 c22-9)
                                                             :mod (c22-1 / again)))
                                 :ARG1 c22-9)
                     :op2 (c22-7 / ignorant-02
                                 :ARG1 c22-9
                                 :ARG2 (c22-15 / news
                                               :mod (c22-8 / alternate)
                                               :mod (c22-3 / convenient
                                                           :polarity -)
                                               :mod (c22-4 / this))
                                 :ARG1-of (c22-0 / complete-02))))

# ::snt Look up Dr. Sherry Tenpenny as well
# ::tokens ["Look", "up", "Dr.", "Sherry", "Tenpenny", "as", "well"]
# ::lemmas ["look", "up", "Dr.", "Sherry", "Tenpenny", "as", "well"]
(c24-1 / look-up-05
       :ARG0 (c24-4 / you)
       :ARG1 (c24-2 / person
                    :name (c24-3 / name
                                 :op1 "Dr."
                                 :op2 "Sherry"
                                 :op3 "Tenpenny"))
       :mod (c24-0 / as-well)
       :mode imperative)

# ::snt Please cite your source. Where is this published? Was the ex vp interviewed?
# ::tokens ["Please", "cite", "your", "source", ".", "Where", "is", "this", "published", "?", "Was", "the", "ex", "vp", "interviewed", "?"]
# ::lemmas ["please", "cite", "your", "source", ".", "where", "be", "this", "publish", "?", "be", "the", "ex", "vp", "interview", "?"]
(c27-9 / multi-sentence
       :snt1 (c27-2 / cite-01
                    :ARG0 (c27-10 / you)
                    :ARG1 (c27-0 / source
                                 :poss c27-10)
                    :mode imperative
                    :polite +)
       :snt2 (c27-8 / publish-01
                    :ARG1 (c27-7 / this)
                    :location (c27-1 / amr-unknown))
       :snt3 (c27-3 / interview-01
                    :ARG1 (c27-6 / person
                                 :ARG0-of (c27-4 / have-org-role-91
                                                 :ARG2 (c27-5 / vp)
                                                 :time (c27-11 / ex)))
                    :polarity c27-1))

# ::snt If the only reason someone is getting it is because the government is telling them to or out of fear without it they won't be allowed by the government to work, shop, go places etc...they want to rethink it...but as always, at least for now, its their choice....
# ::tokens ["If", "the", "only", "reason", "someone", "is", "getting", "it", "is", "because", "the", "government", "is", "telling", "them", "to", "or", "out", "of", "fear", "without", "it", "they", "wo", "n't", "be", "allowed", "by", "the", "government", "to", "work", ",", "shop", ",", "go", "places", "etc", "...", "they", "want", "to", "rethink", "it", "...", "but", "as", "always", ",", "at", "least", "for", "now", ",", "its", "their", "choice", "...."]
# ::lemmas ["if", "the", "only", "reason", "someone", "be", "get", "it", "be", "because", "the", "government", "be", "tell", "they", "to", "or", "out", "of", "fear", "without", "it", "they", "will", "not", "be", "allow", "by", "the", "government", "to", "work", ",", "shop", ",", "go", "place", "etc", "...", "they", "want", "to", "rethink", "it", "...", "but", "as", "always", ",", "at", "least", "for", "now", ",", "its", "their", "choice", "...."]
(c28-12 / multi-sentence
        :snt1 (c28-24 / have-condition-91
                      :ARG1 (c28-8 / or
                                   :op1 (c28-5 / cause-01
                                               :ARG0 (c28-9 / tell-01
                                                            :ARG0 (c28-11 / government-organization
                                                                          :ARG0-of (c28-21 / govern-01))
                                                            :ARG1 (c28-2 / get-01
                                                                         :ARG0 (c28-16 / someone)
                                                                         :ARG1 (c28-4 / it))
                                                            :ARG2 c28-16)
                                               :ARG1 (c28-22 / allow-01
                                                             :ARG0 c28-11
                                                             :ARG1 (c28-14 / and
                                                                           :op1 (c28-6 / work-01
                                                                                       :ARG0 c28-16)
                                                                           :op2 (c28-25 / shop-01
                                                                                        :ARG0 c28-16)
                                                                           :op3 (c28-18 / go-02
                                                                                        :ARG0 c28-16
                                                                                        :ARG4 (c28-26 / place))
                                                                           :op4 (c28-15 / et-cetera))
                                                             :polarity -))
                                   :op2 (c28-0 / cause-01
                                               :ARG0 (c28-23 / fear-01
                                                             :ARG0 c28-16
                                                             :polarity -)
                                               :ARG1 (c28-1 / allow-01
                                                            :ARG0 c28-11
                                                            :ARG1 (c28-19 / get-01
                                                                          :ARG0 c28-16
                                                                          :ARG1 c28-4))))
                      :ARG2 c28-2)
        :snt2 (c28-7 / contrast-01
                     :ARG1 (c28-17 / want-01
                                   :ARG0 c28-16
                                   :ARG1 (c28-10 / rethink-01
                                                 :ARG0 c28-16
                                                 :ARG1 c28-4)))
        :ARG2 (c28-20 / choose-01
                      :ARG0 c28-16
                      :ARG1 c28-4
                      :time (c28-27 / always)
                      :mod (c28-3 / at-least)
                      :time (c28-13 / now)))

# ::snt I've known for years.
# ::tokens ["I", "'ve", "known", "for", "years", "."]
# ::lemmas ["i", "'ve", "know", "for", "years", "."]
(c29-3 / know-01
       :ARG0 (c29-1 / i)
       :duration (c29-2 / multiple
                        :op1 (c29-0 / temporal-quantity
                                    :unit (c29-4 / year)
                                    :quant 1)))

# ::snt Just wait till they turn up the G lol
# ::tokens ["Just", "wait", "till", "they", "turn", "up", "the", "G", "lol"]
# ::lemmas ["just", "wait", "till", "they", "turn", "up", "the", "G", "lol"]
(c30-1 / wait-01
       :ARG1 (c30-9 / you)
       :mod (c30-7 / just)
       :time (c30-3 / until
                    :op1 (c30-4 / turn-up-15
                                :ARG0 (c30-2 / they)
                                :ARG1 (c30-0 / string-entity
                                             :value "G")))
       :ARG2-of (c30-5 / laugh-01
                       :ARG0 (c30-8 / i)
                       :manner (c30-6 / loud)
                       :mode expressive)
       :mode imperative)

# ::snt The CDC shows its experimental. People didnt do their homework. They just felt they needed a shot. There is no cure for a cold or flu...but they miraculously found a cure for a fake pandemic in months.
# ::tokens ["The", "CDC", "shows", "its", "experimental", ".", "People", "did", "nt", "do", "their", "homework", ".", "They", "just", "felt", "they", "needed", "a", "shot", ".", "There", "is", "no", "cure", "for", "a", "cold", "or", "flu", "...", "but", "they", "miraculously", "found", "a", "cure", "for", "a", "fake", "pandemic", "in", "months", "."]
# ::lemmas ["the", "CDC", "show", "its", "experimental", ".", "people", "do", "not", "do", "their", "homework", ".", "they", "just", "feel", "they", "need", "a", "shot", ".", "there", "be", "no", "cure", "for", "a", "cold", "or", "flu", "...", "but", "they", "miraculously", "find", "a", "cure", "for", "a", "fake", "pandemic", "in", "months", "."]
(c31-11 / multi-sentence
        :snt1 (c31-15 / show-01
                      :ARG0 (c31-9 / government-organization
                                   :name (c31-12 / name
                                                 :op1 "CDC"))
                      :ARG1 (c31-14 / experiment-01
                                    :ARG0 c31-9))
        :snt2 (c31-0 / do-02
                     :ARG0 (c31-28 / person)
                     :ARG1 (c31-25 / homework
                                   :poss c31-28)
                     :polarity -)
        :snt3 (c31-23 / feel-01
                      :ARG0 (c31-8 / they)
                      :ARG1 (c31-3 / need-01
                                   :ARG0 c31-8
                                   :ARG1 (c31-21 / shoot-02
                                                 :ARG0 c31-8))
                      :mod (c31-27 / just))
        :snt4 (c31-4 / contrast-01
                     :ARG1 (c31-1 / cure-01
                                  :ARG2 (c31-7 / or
                                               :op1 (c31-6 / cold-01)
                                               :op2 (c31-17 / flu-01))
                                  :polarity -)
                     :ARG2 (c31-19 / find-01
                                   :ARG0 c31-8
                                   :ARG1 (c31-5 / thing
                                                :ARG2-of (c31-20 / cure-01
                                                                 :ARG1 (c31-26 / pandemic
                                                                               :ARG1-of (c31-2 / fake-02))))
                                   :manner (c31-24 / miraculous)
                                   :time (c31-22 / after
                                                 :op1 (c31-18 / now)
                                                 :quant (c31-16 / multiple
                                                                :op1 (c31-13 / temporal-quantity
                                                                             :unit (c31-10 / month)
                                                                             :quant 1))))))

# ::snt Was a pretty simple search. Try researching for yourself.
# ::tokens ["Was", "a", "pretty", "simple", "search", ".", "Try", "researching", "for", "yourself", "."]
# ::lemmas ["be", "a", "pretty", "simple", "search", ".", "try", "research", "for", "yourself", "."]
(c32-6 / multi-sentence
       :snt1 (c32-0 / search-01
                    :ARG1-of (c32-4 / simple-02
                                    :degree (c32-5 / pretty)))
       :snt2 (c32-1 / try-01
                    :ARG0 (c32-7 / you)
                    :ARG1 (c32-2 / research-01
                                 :ARG0 c32-7
                                 :mod (c32-3 / by-oneself))
                    :mode imperative))

# ::snt I believe they are targeting the bottom feeders of society for depopulation. Follow the money....werent they trying to bribe people with a check if they received vaccination? Most of the ones that go for free handouts are the non-working, dependent on government, minimum wage
# ::tokens ["I", "believe", "they", "are", "targeting", "the", "bottom", "feeders", "of", "society", "for", "depopulation", ".", "Follow", "the", "money", "....", "werent", "they", "trying", "to", "bribe", "people", "with", "a", "check", "if", "they", "received", "vaccination", "?", "Most", "of", "the", "ones", "that", "go", "for", "free", "handouts", "are", "the", "non", "-", "working", ",", "dependent", "on", "government", ",", "minimum", "wage"]
# ::lemmas ["i", "believe", "they", "be", "target", "the", "bottom", "feeder", "of", "society", "for", "depopulation", ".", "follow", "the", "money", "....", "werent", "they", "try", "to", "bribe", "people", "with", "a", "check", "if", "they", "receive", "vaccination", "?", "most", "of", "the", "one", "that", "go", "for", "free", "handout", "be", "the", "non", "-", "working", ",", "dependent", "on", "government", ",", "minimum", "wage"]
(c33-12 / multi-sentence
        :snt1 (c33-33 / believe-01
                      :ARG0 (c33-3 / i)
                      :ARG1 (c33-8 / target-01
                                   :ARG0 (c33-6 / they)
                                   :ARG1 (c33-29 / feeder
                                                 :mod (c33-27 / bottom)
                                                 :poss (c33-16 / society))
                                   :purpose (c33-0 / depopulate-01)))
        :snt2 (c33-22 / follow-02
                      :ARG0 (c33-25 / you)
                      :ARG1 (c33-30 / money)
                      :mode imperative)
        :snt3 (c33-13 / try-01
                      :ARG0 (c33-20 / they)
                      :ARG1 (c33-17 / bribe-01
                                    :ARG0 c33-20
                                    :ARG1 (c33-34 / person)
                                    :ARG2 (c33-4 / check)
                                    :condition (c33-9 / receive-01
                                                      :ARG0 c33-34
                                                      :ARG1 (c33-7 / vaccinate-01
                                                                   :ARG1 c33-34)))
                      :ARG1-of (c33-1 / cause-01
                                      :ARG0 (c33-28 / amr-unknown)))
        :snt4 (c33-19 / include-91
                      :ARG1 (c33-32 / person
                                    :ARG0-of (c33-5 / work-01
                                                    :polarity -)
                                    :ARG0-of (c33-24 / depend-01
                                                     :ARG1 (c33-14 / and
                                                                   :op1 (c33-10 / government-organization
                                                                                :ARG0-of (c33-26 / govern-01))
                                                                   :op2 (c33-15 / wage
                                                                                :mod (c33-21 / minimum)))))
                      :ARG2 (c33-18 / person
                                    :ARG0-of (c33-2 / go-03
                                                    :ARG1 (c33-31 / handout
                                                                  :ARG1-of (c33-23 / free-03))))
                      :ARG3 (c33-11 / most)))

# ::snt Or certain information was withheld from him and he was just told what they wanted him to think they were doing and not what they actually were doing?
# ::tokens ["Or", "certain", "information", "was", "withheld", "from", "him", "and", "he", "was", "just", "told", "what", "they", "wanted", "him", "to", "think", "they", "were", "doing", "and", "not", "what", "they", "actually", "were", "doing", "?"]
# ::lemmas ["or", "certain", "information", "be", "withhold", "from", "he", "and", "he", "be", "just", "tell", "what", "they", "want", "he", "to", "think", "they", "be", "do", "and", "not", "what", "they", "actually", "be", "do", "?"]
(c34-10 / or
        :op2 (c34-2 / and
                    :op1 (c34-5 / withhold-01
                                :ARG1 (c34-14 / information
                                              :mod (c34-4 / certain))
                                :ARG2 (c34-8 / he))
                    :op2 (c34-12 / tell-01
                                 :ARG1 (c34-16 / and
                                               :op1 (c34-6 / thing
                                                           :ARG1-of (c34-0 / do-02
                                                                           :ARG0 (c34-15 / they)
                                                                           :ARG1-of (c34-9 / think-01
                                                                                           :ARG0 c34-8)))
                                               :op2 (c34-3 / thing
                                                           :ARG1-of (c34-7 / do-02
                                                                           :ARG0 c34-15
                                                                           :ARG1-of (c34-1 / actual-02)
                                                                           :polarity -)))
                                 :ARG2 c34-8
                                 :mod (c34-13 / just))
                    :polarity (c34-11 / amr-unknown)))

# ::snt This may be an unpopular question but does anyone else wonder if Trump had any knowledge of this or just believed in the pharma companies to tell him the truth, just innocently ignorant because he did push Warp speed? He had to know it wasn't properly tested &amp; not FDA approved?
# ::tokens ["This", "may", "be", "an", "unpopular", "question", "but", "does", "anyone", "else", "wonder", "if", "Trump", "had", "any", "knowledge", "of", "this", "or", "just", "believed", "in", "the", "pharma", "companies", "to", "tell", "him", "the", "truth", ",", "just", "innocently", "ignorant", "because", "he", "did", "push", "Warp", "speed", "?", "He", "had", "to", "know", "it", "was", "n't", "properly", "tested", "&", "amp", ";", "not", "FDA", "approved", "?"]
# ::lemmas ["this", "may", "be", "an", "unpopular", "question", "but", "do", "anyone", "else", "wonder", "if", "Trump", "have", "any", "knowledge", "of", "this", "or", "just", "believe", "in", "the", "pharma", "company", "to", "tell", "he", "the", "truth", ",", "just", "innocently", "ignorant", "because", "he", "do", "push", "warp", "speed", "?", "he", "have", "to", "know", "it", "be", "not", "properly", "test", "&", "amp", ";", "not", "FDA", "approve", "?"]
(c35-15 / multi-sentence
        :snt1 (c35-8 / contrast-01
                     :ARG1 (c35-34 / possible-01
                                   :ARG1 (c35-4 / question-01
                                                :ARG1 (c35-13 / this)
                                                :ARG1-of (c35-31 / popular-02
                                                                 :polarity -)))
                     :ARG2 (c35-9 / wonder-01
                                  :ARG0 (c35-27 / anyone
                                                :mod (c35-19 / else))
                                  :ARG1 (c35-12 / or
                                                :op1 (c35-35 / know-01
                                                             :ARG0 (c35-23 / person
                                                                           :name (c35-16 / name
                                                                                         :op1 "Trump"))
                                                             :ARG1 (c35-10 / this)
                                                             :mod (c35-18 / any))
                                                :op2 (c35-32 / believe-01
                                                             :ARG0 c35-23
                                                             :ARG1 (c35-0 / company
                                                                          :mod (c35-22 / pharma))
                                                             :ARG2 (c35-17 / tell-01
                                                                           :ARG0 c35-0
                                                                           :ARG1 (c35-24 / truth)
                                                                           :ARG2 c35-23)
                                                             :mod (c35-33 / just)
                                                             :ARG1-of (c35-11 / cause-01
                                                                              :ARG0 (c35-2 / push-01
                                                                                           :ARG0 c35-23
                                                                                           :ARG1 (c35-20 / speed
                                                                                                         :mod (c35-21 / warp-01))))))
                                  :polarity (c35-1 / amr-unknown)))
        :snt2 (c35-30 / obligate-01
                      :ARG1 (c35-29 / he)
                      :ARG2 (c35-7 / know-01
                                   :ARG0 c35-29
                                   :ARG1 (c35-36 / and
                                                 :op1 (c35-28 / test-01
                                                              :ARG1 (c35-6 / it)
                                                              :manner (c35-25 / proper)
                                                              :polarity -)
                                                 :op2 (c35-3 / approve-01
                                                             :ARG0 (c35-14 / government-organization
                                                                           :name (c35-5 / name
                                                                                        :op1 "FDA"))
                                                             :ARG1 c35-6
                                                             :polarity -))
                                   :polarity (c35-26 / amr-unknown))))

# ::snt Uh Yep...but the only scientists the Dem's are listening to aren't those ones...
# ::tokens ["Uh", "Yep", "...", "but", "the", "only", "scientists", "the", "Dem", "'s", "are", "listening", "to", "are", "n't", "those", "ones", "..."]
# ::lemmas ["uh", "Yep", "...", "but", "the", "only", "scientist", "the", "Dem", "'s", "be", "listen", "to", "be", "not", "those", "one", "..."]
(c36-1 / contrast-01
       :ARG1 (c36-3 / uh
                    :mode expressive)
       :ARG2 (c36-6 / listen-01
                    :ARG0 (c36-7 / person
                                 :ARG0-of (c36-2 / have-org-role-91
                                                 :ARG1 (c36-5 / political-party
                                                              :name (c36-8 / name
                                                                           :op1 "Democrat"))))
                    :ARG1 (c36-0 / scientist
                                 :mod (c36-4 / only))
                    :polarity -))

# ::snt I did. I posted an article, I believe from the U.K. of people dying from the Experimental biological agent. Just a couple hours ago.
# ::tokens ["I", "did", ".", "I", "posted", "an", "article", ",", "I", "believe", "from", "the", "U.K.", "of", "people", "dying", "from", "the", "Experimental", "biological", "agent", ".", "Just", "a", "couple", "hours", "ago", "."]
# ::lemmas ["i", "do", ".", "i", "post", "an", "article", ",", "i", "believe", "from", "the", "U.K.", "of", "people", "die", "from", "the", "experimental", "biological", "agent", ".", "Just", "a", "couple", "hours", "ago", "."]
(c37-7 / multi-sentence
       :snt1 (c37-0 / do-02
                    :ARG0 (c37-3 / i))
       :snt2 (c37-20 / post-01
                     :ARG0 (c37-12 / i)
                     :ARG1 (c37-15 / article
                                   :source (c37-4 / country
                                                  :name (c37-8 / name
                                                               :op1 "U.K."))
                                   :topic (c37-17 / person
                                                  :ARG1-of (c37-13 / die-01
                                                                   :ARG1-of (c37-1 / cause-01
                                                                                   :ARG0 (c37-9 / agent
                                                                                                :mod (c37-18 / biology)
                                                                                                :mod (c37-10 / experiment-01)))))
                                   :ARG1-of (c37-14 / believe-01
                                                    :ARG0 c37-12))
                     :time (c37-11 / before
                                   :op1 (c37-2 / now)
                                   :quant (c37-5 / couple
                                                 :op1 (c37-6 / temporal-quantity
                                                             :unit (c37-16 / hour)
                                                             :quant 1))
                                   :mod (c37-19 / just))))

# ::snt Me too.
# ::tokens ["Me", "too", "."]
# ::lemmas ["i", "too", "."]
(c38-0 / i
       :mod (c38-1 / too))

# ::snt The sheep around here are lined up to get this poison.
# ::tokens ["The", "sheep", "around", "here", "are", "lined", "up", "to", "get", "this", "poison", "."]
# ::lemmas ["the", "sheep", "around", "here", "be", "line", "up", "to", "get", "this", "poison", "."]
(c39-4 / line-up-02
       :ARG1 (c39-0 / sheep
                    :location (c39-1 / around
                                     :op1 (c39-2 / here)))
       :purpose (c39-5 / get-01
                       :ARG0 c39-0
                       :ARG1 (c39-6 / poison
                                    :mod (c39-3 / this))))

# ::snt Me too!
# ::tokens ["Me", "too", "!"]
# ::lemmas ["i", "too", "!"]
(c40-0 / i
       :mod (c40-1 / too))

# ::snt Looks like only if you don't come in contact with vaccinated people.
# ::tokens ["Looks", "like", "only", "if", "you", "do", "n't", "come", "in", "contact", "with", "vaccinated", "people", "."]
# ::lemmas ["look", "like", "only", "if", "you", "do", "not", "come", "in", "contact", "with", "vaccinated", "people", "."]
(c41-4 / look-02
       :ARG1 (c41-1 / have-condition-91
                    :ARG2 (c41-0 / contact-01
                                 :ARG0 (c41-6 / you)
                                 :ARG1 (c41-5 / person
                                              :ARG1-of (c41-2 / vaccinate-01))
                                 :polarity -)
                    :mod (c41-3 / only)))

# ::snt Are they saying... might not be now, but later down the road the vaccine will kill you after it destroys your DNA and leaving with you no immune system.
# ::tokens ["Are", "they", "saying", "...", "might", "not", "be", "now", ",", "but", "later", "down", "the", "road", "the", "vaccine", "will", "kill", "you", "after", "it", "destroys", "your", "DNA", "and", "leaving", "with", "you", "no", "immune", "system", "."]
# ::lemmas ["be", "they", "say", "...", "might", "not", "be", "now", ",", "but", "later", "down", "the", "road", "the", "vaccine", "will", "kill", "you", "after", "it", "destroy", "your", "dna", "and", "leave", "with", "you", "no", "immune", "system", "."]
(c43-4 / contrast-01
       :ARG1 (c43-10 / say-01
                     :ARG0 (c43-6 / they)
                     :ARG1 (c43-17 / possible-01
                                   :time (c43-8 / now)
                                   :polarity -))
       :ARG2 (c43-18 / kill-01
                     :ARG0 (c43-5 / vaccine)
                     :ARG1 (c43-13 / you)
                     :time (c43-14 / after
                                   :op1 (c43-9 / and
                                               :op1 (c43-0 / destroy-01
                                                           :ARG0 c43-5
                                                           :ARG1 (c43-2 / nucleic-acid
                                                                        :name (c43-11 / name
                                                                                      :op1 "DNA")
                                                                        :poss c43-13))
                                               :op2 (c43-15 / leave-12
                                                            :ARG0 c43-5
                                                            :ARG1 (c43-16 / system
                                                                          :ARG1-of (c43-3 / immune-02)
                                                                          :domain c43-13
                                                                          :polarity -))))
                     :time c43-14)
       :location (c43-7 / road
                        :direction (c43-12 / down))
       :polarity (c43-1 / amr-unknown))

# ::snt Where*
# ::tokens ["Where", "*"]
# ::lemmas ["where", "*"]
(c44-0 / be-located-at-91)

# ::snt No he said he thinks that is were it could go because the boosters are so close to what is there now, they won't be tested for safety and they could sneak in things that could be lethal
# ::tokens ["No", "he", "said", "he", "thinks", "that", "is", "were", "it", "could", "go", "because", "the", "boosters", "are", "so", "close", "to", "what", "is", "there", "now", ",", "they", "wo", "n't", "be", "tested", "for", "safety", "and", "they", "could", "sneak", "in", "things", "that", "could", "be", "lethal"]
# ::lemmas ["no", "he", "say", "he", "think", "that", "be", "be", "it", "could", "go", "because", "the", "booster", "be", "so", "close", "to", "what", "be", "there", "now", ",", "they", "will", "not", "be", "test", "for", "safety", "and", "they", "could", "sneak", "in", "thing", "that", "could", "be", "lethal"]
(c45-9 / say-01
       :ARG0 (c45-15 / he)
       :ARG1 (c45-5 / think-01
                    :ARG0 c45-15
                    :ARG1 (c45-21 / possible-01
                                  :ARG1 (c45-6 / go-01
                                               :ARG1 (c45-1 / it)))
                    :ARG1-of (c45-3 / cause-01
                                    :ARG0 (c45-13 / and
                                                  :op1 (c45-0 / close-10
                                                              :ARG1 (c45-4 / thing
                                                                           :ARG0-of (c45-19 / boost-01))
                                                              :ARG2 (c45-8 / thing
                                                                           :location (c45-11 / there)
                                                                           :time (c45-7 / now))
                                                              :degree (c45-20 / so))
                                                  :op2 (c45-14 / test-01
                                                               :ARG1 c45-4
                                                               :ARG2 (c45-12 / safe-01
                                                                             :ARG1 c45-4)
                                                               :polarity -)
                                                  :op3 (c45-17 / possible-01
                                                               :ARG1 (c45-2 / sneak-01
                                                                            :ARG0 c45-4
                                                                            :ARG1 (c45-16 / thing
                                                                                          :mod (c45-18 / lethal)
                                                                                          :ARG1-of (c45-10 / possible-01))))))))

# ::snt When I comes into contact with certain organisms. That it could be possible in the future
# ::tokens ["When", "I", "comes", "into", "contact", "with", "certain", "organisms", ".", "That", "it", "could", "be", "possible", "in", "the", "future"]
# ::lemmas ["when", "i", "come", "into", "contact", "with", "certain", "organism", ".", "that", "it", "could", "be", "possible", "in", "the", "future"]
(c46-8 / multi-sentence
       :snt1 (c46-6 / be-temporally-at-91
                    :ARG2 (c46-2 / contact-01
                                 :ARG0 (c46-7 / i)
                                 :ARG1 (c46-4 / organism
                                              :mod (c46-0 / certain))))
       :snt2 (c46-5 / possible-01
                    :ARG1 (c46-3 / it)
                    :time (c46-1 / future)))

# ::snt What he said was he thinks it is going to get to a point when they have the boosters that since they're so similar to what they have now they won't be tested and it will be easy to insert stuff that could be lethal. Something that can cause kidney failure in months.
# ::tokens ["What", "he", "said", "was", "he", "thinks", "it", "is", "going", "to", "get", "to", "a", "point", "when", "they", "have", "the", "boosters", "that", "since", "they", "'re", "so", "similar", "to", "what", "they", "have", "now", "they", "wo", "n't", "be", "tested", "and", "it", "will", "be", "easy", "to", "insert", "stuff", "that", "could", "be", "lethal", ".", "Something", "that", "can", "cause", "kidney", "failure", "in", "months", "."]
# ::lemmas ["what", "he", "say", "be", "he", "think", "it", "be", "go", "to", "get", "to", "a", "point", "when", "they", "have", "the", "booster", "that", "since", "they", "be", "so", "similar", "to", "what", "they", "have", "now", "they", "will", "not", "be", "test", "and", "it", "will", "be", "easy", "to", "insert", "stuff", "that", "could", "be", "lethal", ".", "something", "that", "can", "cause", "kidney", "failure", "in", "months", "."]
(c47-11 / multi-sentence
        :snt1 (c47-16 / say-01
                      :ARG0 (c47-27 / he)
                      :ARG1 (c47-8 / think-01
                                   :ARG0 c47-27
                                   :ARG1 (c47-10 / get-03
                                                 :ARG1 (c47-2 / it)
                                                 :ARG2 (c47-32 / point)
                                                 :time (c47-1 / have-03
                                                              :ARG0 (c47-6 / they)
                                                              :ARG1 (c47-13 / thing
                                                                            :ARG0-of (c47-30 / boost-01)
                                                                            :ARG0-of (c47-5 / cause-01
                                                                                            :ARG1 (c47-23 / and
                                                                                                          :op1 (c47-19 / test-01
                                                                                                                       :ARG1 c47-13
                                                                                                                       :ARG1-of (c47-0 / cause-01
                                                                                                                                       :ARG0 (c47-9 / resemble-01
                                                                                                                                                    :ARG1 c47-13
                                                                                                                                                    :ARG2 (c47-24 / thing
                                                                                                                                                                  :ARG1-of (c47-4 / have-03
                                                                                                                                                                                  :ARG0 c47-6
                                                                                                                                                                                  :time (c47-12 / now))))
                                                                                                                                       :degree (c47-31 / so))
                                                                                                                       :polarity -)
                                                                                                          :op2 (c47-15 / easy-05
                                                                                                                       :ARG1 (c47-18 / insert-01
                                                                                                                                     :ARG1 (c47-20 / stuff
                                                                                                                                                   :ARG0-of (c47-7 / cause-01
                                                                                                                                                                   :ARG1 (c47-25 / fail-01
                                                                                                                                                                                 :ARG1 (c47-33 / kidney)
                                                                                                                                                                                 :time (c47-14 / after
                                                                                                                                                                                               :quant (c47-26 / multiple
                                                                                                                                                                                                              :op1 (c47-28 / temporal-quantity
                                                                                                                                                                                                                           :unit (c47-21 / month)
                                                                                                                                                                                                                           :quant 1))))
                                                                                                                                                                   :ARG1-of (c47-29 / possible-01))))))))))))
        :snt2 (c47-3 / something
                     :ARG0-of (c47-22 / cause-01
                                      :ARG1 c47-25
                                      :ARG1 c47-33
                                      :time c47-26
                                      :op1 c47-28
                                      :unit c47-21
                                      :quant 1))
        :ARG1-of (c47-17 / possible-01))

# ::snt Our armed services all got this vacine!
# ::tokens ["Our", "armed", "services", "all", "got", "this", "vacine", "!"]
# ::lemmas ["our", "armed", "service", "all", "get", "this", "vacine", "!"]
(c48-5 / get-02
       :ARG0 (c48-0 / service
                    :ARG1-of (c48-1 / arm-01)
                    :poss (c48-2 / we)
                    :mod (c48-6 / all))
       :ARG1 (c48-3 / vacine
                    :mod (c48-4 / this)))

# ::snt Well, on the news today they said that % of the Democrats have been fully vaccinated. And only % of Republicans... hmmm in years it looks like Trump will have clear sailing towards a re-election.
# ::tokens ["Well", ",", "on", "the", "news", "today", "they", "said", "that", "%", "of", "the", "Democrats", "have", "been", "fully", "vaccinated", ".", "And", "only", "%", "of", "Republicans", "...", "hmmm", "in", "years", "it", "looks", "like", "Trump", "will", "have", "clear", "sailing", "towards", "a", "re", "-", "election", "."]
# ::lemmas ["well", ",", "on", "the", "news", "today", "they", "say", "that", "%", "of", "the", "Democrats", "have", "be", "fully", "vaccinated", ".", "and", "only", "%", "of", "Republicans", "...", "hmmm", "in", "years", "it", "look", "like", "Trump", "will", "have", "clear", "sailing", "towards", "a", "re", "-", "election", "."]
(c49-12 / multi-sentence
        :snt1 (c49-15 / say-01
                      :ARG0 (c49-10 / they)
                      :ARG1 (c49-8 / vaccinate-01
                                   :ARG1 (c49-31 / person
                                                 :ARG1-of (c49-3 / include-91
                                                                 :ARG2 (c49-28 / person
                                                                               :ARG0-of (c49-27 / have-org-role-91
                                                                                                :ARG1 (c49-17 / political-party
                                                                                                              :name (c49-13 / name
                                                                                                                            :op1 "Democrat"))))
                                                                 :ARG3 (c49-16 / percentage-entity
                                                                               :mod (c49-24 / full)
                                                                               :value 1)))
                                   :time (c49-7 / today)
                                   :medium (c49-1 / news))
                      :snt2 (c49-23 / and
                                    :op2 (c49-18 / include-91
                                                 :ARG1 (c49-0 / person
                                                              :ARG0-of (c49-2 / have-org-role-91
                                                                              :ARG1 (c49-20 / political-party
                                                                                            :name (c49-21 / name
                                                                                                          :op1 "Republican"))))
                                                 :ARG2 (c49-32 / percentage-entity
                                                               :value 2)
                                                 :mod (c49-9 / only)))
                      :snt3 (c49-29 / look-02
                                    :ARG0 (c49-19 / it)
                                    :ARG1 (c49-30 / sail-01
                                                  :ARG0 (c49-25 / person
                                                                :name (c49-5 / name
                                                                             :op1 "Trump"))
                                                  :direction (c49-11 / reelect-01
                                                                     :ARG1 c49-25)
                                                  :ARG1-of (c49-6 / clear-06))
                                    :time (c49-26 / multiple
                                                  :op1 (c49-14 / temporal-quantity
                                                               :unit (c49-22 / year)
                                                               :quant 1))
                                    :mod (c49-4 / hmm
                                                :mode expressive))))

# ::snt She didnt say it, exactly.He did.
# ::tokens ["She", "did", "nt", "say", "it", ",", "exactly", ".", "He", "did", "."]
# ::lemmas ["she", "do", "not", "say", "it", ",", "exactly", ".", "he", "do", "."]
(c50-5 / multi-sentence
       :snt1 (c50-0 / say-01
                    :ARG0 (c50-3 / she)
                    :ARG1 (c50-4 / it)
                    :mod (c50-6 / exact)
                    :polarity -)
       :snt2 (c50-1 / do-02
                    :ARG0 (c50-2 / he)))
