# ::snt if it goes bad i hope in years there will be a commercial like if you or a loved one received the covid vaccination in ... YOU may be entitled to compensation
# ::tokens ["if", "it", "goes", "bad", "i", "hope", "in", "years", "there", "will", "be", "a", "commercial", "like", "if", "you", "or", "a", "loved", "one", "received", "the", "covid", "vaccination", "in", "...", "YOU", "may", "be", "entitled", "to", "compensation"]
# ::lemmas ["if", "it", "go", "bad", "i", "hope", "in", "years", "there", "will", "be", "a", "commercial", "like", "if", "you", "or", "a", "love", "one", "receive", "the", "covid", "vaccination", "in", "...", "you", "may", "be", "entitle", "to", "compensation"]
(c1-17 / hope-01
       :ARG0 (c1-2 / i)
       :ARG1 (c1-3 / commercial
                   :ARG1-of (c1-8 / resemble-01
                                  :ARG2 (c1-22 / possible-01
                                               :ARG1 (c1-12 / entitle-01
                                                            :ARG1 (c1-0 / compensate-01
                                                                        :ARG2 (c1-14 / you
                                                                                     :ARG2-of c1-12)))
                                               :condition (c1-4 / receive-01
                                                                :ARG0 (c1-6 / or
                                                                            :op1 c1-14
                                                                            :op2 (c1-18 / one
                                                                                        :ARG1-of (c1-20 / love-01)))
                                                                :ARG1 (c1-5 / vaccinate-01
                                                                            :mod (c1-19 / product
                                                                                        :name (c1-11 / name
                                                                                                     :op1 "Covid"))))))
                   :time (c1-16 / after
                                :op1 (c1-1 / now)
                                :quant (c1-10 / multiple
                                              :op1 (c1-7 / temporal-quantity
                                                         :unit (c1-15 / year)
                                                         :quant 1)))
                   :condition (c1-9 / go-08
                                    :ARG1 (c1-13 / it)
                                    :ARG2 (c1-21 / bad-07
                                                 :ARG1 c1-13))))

# ::snt ooo ah get it i guess
# ::tokens ["ooo", "ah", "get", "it", "i", "guess"]
# ::lemmas ["ooo", "ah", "get", "it", "i", "guess"]
(c2-2 / guess-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-4 / get-30
                  :ARG0 c2-3
                  :ARG1 (c2-1 / it)
                  :mod (c2-0 / ah
                             :mode expressive)))
