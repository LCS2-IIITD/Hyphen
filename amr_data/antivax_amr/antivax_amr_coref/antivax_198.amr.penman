# ::snt Oh I totally understand! Im always in a fog! Well Im glad you received both vaccs! Ive never had Covid, but I heard its rough!
# ::tokens ["Oh", "I", "totally", "understand", "!", "I", "m", "always", "in", "a", "fog", "!", "Well", "I", "m", "glad", "you", "received", "both", "vaccs", "!", "I", "ve", "never", "had", "Covid", ",", "but", "I", "heard", "its", "rough", "!"]
# ::lemmas ["oh", "i", "totally", "understand", "!", "i", "m", "always", "in", "a", "fog", "!", "well", "i", "m", "glad", "you", "receive", "both", "vaccs", "!", "i", "ve", "never", "have", "Covid", ",", "but", "i", "hear", "its", "rough", "!"]
(c1-10 / multi-sentence
       :snt1 (c1-19 / understand-01
                    :ARG0 (c1-1 / i)
                    :mod (c1-7 / total)
                    :mod (c1-6 / oh
                               :mode expressive))
       :snt2 (c1-17 / fog-01
                    :ARG1 (c1-13 / i)
                    :time (c1-16 / always))
       :snt3 (c1-9 / glad-02
                   :ARG0 (c1-8 / receive-01
                               :ARG0 (c1-15 / you)
                               :ARG1 (c1-5 / vaccinate-01
                                           :mod (c1-21 / both)))
                   :ARG1 (c1-14 / i)
                   :mod (c1-3 / well))
       :snt4 (c1-2 / contrast-01
                   :ARG1 (c1-18 / have-03
                                :ARG0 (c1-20 / i)
                                :ARG1 (c1-22 / product
                                             :name (c1-11 / name
                                                          :op1 "Covid"))
                                :time (c1-12 / ever)
                                :polarity -)
                   :ARG2 (c1-0 / hear-01
                               :ARG0 c1-20
                               :ARG1 (c1-4 / rough-04
                                           :ARG1 c1-22))))

# ::snt And I totally read your question wrong. I will say, the Covid brain fog is a real thing. Its been months since I had Covid and my reading comprehension is still crap. As is word-finding.
# ::tokens ["And", "I", "totally", "read", "your", "question", "wrong", ".", "I", "will", "say", ",", "the", "Covid", "brain", "fog", "is", "a", "real", "thing", ".", "Its", "been", "months", "since", "I", "had", "Covid", "and", "my", "reading", "comprehension", "is", "still", "crap", ".", "As", "is", "word", "-", "finding", "."]
# ::lemmas ["and", "i", "totally", "read", "your", "question", "wrong", ".", "i", "will", "say", ",", "the", "Covid", "brain", "fog", "be", "a", "real", "thing", ".", "its", "be", "months", "since", "i", "have", "Covid", "and", "my", "reading", "comprehension", "be", "still", "crap", ".", "as", "be", "word", "-", "finding", "."]
(c2-12 / multi-sentence
       :snt1 (c2-23 / and
                    :op2 (c2-10 / read-01
                                :ARG0 (c2-3 / i)
                                :ARG1 (c2-2 / question-01
                                            :ARG0 (c2-22 / you))
                                :ARG2-of (c2-5 / wrong-04
                                               :ARG1 c2-3
                                               :degree (c2-9 / total))))
       :snt2 (c2-17 / say-01
                    :ARG0 (c2-18 / i)
                    :ARG1 (c2-6 / thing
                                :ARG1-of (c2-7 / real-04)
                                :domain (c2-24 / fog
                                               :mod (c2-28 / brain)
                                               :mod (c2-4 / city
                                                          :name (c2-13 / name
                                                                       :op1 "Covid")))))
       :snt3 (c2-15 / and
                    :op1 (c2-30 / pass-03
                                :ARG1 (c2-25 / multiple
                                             :op1 (c2-14 / temporal-quantity
                                                         :unit (c2-20 / month)
                                                         :quant 1))
                                :time (c2-29 / since
                                             :op1 (c2-26 / have-03
                                                         :ARG0 c2-18
                                                         :ARG1 (c2-27 / product
                                                                      :name c2-13
                                                                      :op1 "Covid")))))
       :op2 (c2-0 / crap-01
                  :ARG1 (c2-8 / comprehend-01
                              :ARG0 c2-18
                              :ARG1 (c2-11 / read-01
                                           :ARG0 c2-18))
                  :mod (c2-19 / still))
       :snt4 (c2-1 / and
                   :op1 (c2-21 / find-01
                               :ARG1 (c2-16 / word))))

# ::snt I will get mine on /1. I think its Pfizer.
# ::tokens ["I", "will", "get", "mine", "on", "/1", ".", "I", "think", "its", "Pfizer", "."]
# ::lemmas ["i", "will", "get", "mine", "on", "/1", ".", "i", "think", "its", "Pfizer", "."]
(c3-9 / multi-sentence
      :snt1 (c3-7 / get-01
                  :ARG0 (c3-8 / i)
                  :ARG1 (c3-5 / thing
                              :poss c3-8)
                  :location (c3-1 / company
                                  :name (c3-10 / name
                                               :op1 "1/1")))
      :snt2 (c3-2 / think-01
                  :ARG0 (c3-3 / i)
                  :ARG1 (c3-0 / company
                              :name (c3-6 / name
                                          :op1 "Pfizer")
                              :domain (c3-4 / it))))

# ::snt Moderna. You?
# ::tokens ["Moderna", ".", "You", "?"]
# ::lemmas ["Moderna", ".", "you", "?"]
(c4-1 / multi-sentence
      :snt1 (c4-3 / modern-02)
      :snt2 (c4-2 / you
                  :polarity (c4-0 / amr-unknown)))

# ::snt HYDRATE!
# ::tokens ["HYDRATE", "!"]
# ::lemmas ["hydrate", "!"]
(c5-0 / Hyde
      :mode expressive)

# ::snt Which one did they give you?
# ::tokens ["Which", "one", "did", "they", "give", "you", "?"]
# ::lemmas ["which", "one", "do", "they", "give", "you", "?"]
(c6-0 / give-01
      :ARG0 (c6-2 / they)
      :ARG1 (c6-1 / amr-unknown)
      :ARG2 (c6-3 / you))

# ::snt The second one. The first shot was great until hours in. Then the chills, body aches, etc. This one might be better tho? Its been hours and my arm isnt even sore.
# ::tokens ["The", "second", "one", ".", "The", "first", "shot", "was", "great", "until", "hours", "in", ".", "Then", "the", "chills", ",", "body", "aches", ",", "etc", ".", "This", "one", "might", "be", "better", "tho", "?", "Its", "been", "hours", "and", "my", "arm", "is", "nt", "even", "sore", "."]
# ::lemmas ["the", "second", "one", ".", "the", "first", "shot", "be", "great", "until", "hours", "in", ".", "then", "the", "chill", ",", "body", "ache", ",", "etc", ".", "this", "one", "might", "be", "well", "tho", "?", "its", "be", "hour", "and", "my", "arm", "be", "not", "even", "sore", "."]
(c7-12 / multi-sentence
       :snt1 (c7-7 / one
                   :ord (c7-24 / ordinal-entity
                               :value 2))
       :snt2 (c7-10 / great
                    :domain (c7-16 / shot
                                   :ord (c7-4 / ordinal-entity
                                              :value 1))
                    :time (c7-26 / until
                                 :op1 (c7-22 / multiple
                                             :op1 (c7-9 / temporal-quantity
                                                        :unit (c7-23 / hour)
                                                        :quant 1))))
       :snt3 (c7-21 / and
                    :op1 (c7-5 / chill-01
                               :time (c7-6 / then))
                    :op2 (c7-14 / ache-01
                                :ARG0 (c7-28 / body))
                    :op3 (c7-15 / et-cetera))
       :snt4 (c7-1 / have-concession-91
                   :ARG1 (c7-30 / possible-01
                                :ARG1 (c7-19 / good-02
                                             :ARG1 (c7-20 / one
                                                          :mod (c7-13 / this))
                                             :ARG2-of (c7-3 / have-degree-91
                                                            :ARG1 c7-20
                                                            :ARG3 (c7-18 / more))))
                   :snt5 (c7-0 / and
                               :op1 (c7-27 / last-01
                                           :ARG1 (c7-11 / multiple
                                                        :op1 (c7-17 / temporal-quantity
                                                                    :unit (c7-8 / hour)
                                                                    :quant 1)))
                               :op2 (c7-29 / sore
                                           :domain (c7-31 / arm
                                                          :part-of (c7-2 / i))
                                           :mod (c7-25 / even)
                                           :polarity -))))

# ::snt Thats pretty accurate! Which one?
# ::tokens ["That", "s", "pretty", "accurate", "!", "Which", "one", "?"]
# ::lemmas ["that", "s", "pretty", "accurate", "!", "which", "one", "?"]
(c8-4 / multi-sentence
      :snt1 (c8-0 / accurate
                  :domain (c8-2 / that)
                  :degree (c8-3 / pretty))
      :snt2 (c8-5 / amr-unknown
                  :domain (c8-1 / one)))
