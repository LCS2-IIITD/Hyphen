# ::snt $32 to potentially kill yourself for the company...good deal!
# ::tokens ["$", "32", "to", "potentially", "kill", "yourself", "for", "the", "company", "...", "good", "deal", "!"]
# ::lemmas ["$", "32", "to", "potentially", "kill", "yourself", "for", "the", "company", "...", "good", "deal", "!"]
(c1-7 / multi-sentence
      :snt1 (c1-2 / cost-01
                  :ARG1 (c1-8 / kill-01
                              :ARG0 (c1-9 / you
                                          :ARG1-of c1-8)
                              :ARG2 (c1-0 / company)
                              :mod (c1-6 / potential))
                  :ARG2 (c1-3 / monetary-quantity
                              :unit (c1-1 / dollar)
                              :quant 32))
      :snt2 (c1-4 / deal-01
                  :ARG1-of (c1-5 / good-02)))

# ::snt % Truth.
# ::tokens ["%", "Truth", "."]
# ::lemmas ["%", "truth", "."]
(c2-1 / truth
      :quant (c2-0 / percentage-entity
                   :value 2))

# ::snt Knowing the masons, it probably equals out to $33
# ::tokens ["Knowing", "the", "masons", ",", "it", "probably", "equals", "out", "to", "$", "33"]
# ::lemmas ["know", "the", "mason", ",", "it", "probably", "equal", "out", "to", "$", "33"]
(c4-3 / probable
      :domain (c4-6 / equal-01
                    :ARG1 (c4-1 / it)
                    :ARG2 (c4-4 / monetary-quantity
                                :unit (c4-0 / dollar)
                                :quant 33))
      :condition (c4-5 / know-01
                       :ARG1 (c4-2 / mason)))

# ::snt Wow so they get a whole $60 if theyre at &amp;15 an hour. They throw pennies at people to sacrifice their health
# ::tokens ["Wow", "so", "they", "get", "a", "whole", "$", "60", "if", "they", "re", "at", "&", "amp;15", "an", "hour", ".", "They", "throw", "pennies", "at", "people", "to", "sacrifice", "their", "health"]
# ::lemmas ["wow", "so", "they", "get", "a", "whole", "$", "60", "if", "they", "re", "at", "&", "amp;15", "an", "hour", ".", "they", "throw", "penny", "at", "people", "to", "sacrifice", "their", "health"]
(c5-9 / multi-sentence
      :snt1 (c5-8 / get-01
                  :ARG0 (c5-6 / they)
                  :ARG1 (c5-7 / rate-entity-91
                              :ARG1 (c5-15 / monetary-quantity
                                           :unit (c5-0 / dollar)
                                           :quant 60)
                              :ARG2 (c5-4 / temporal-quantity
                                          :unit (c5-16 / hour)
                                          :quant 1)
                              :mod (c5-3 / whole))
                  :condition (c5-18 / be-located-at-91
                                    :ARG1 c5-6
                                    :ARG2 (c5-14 / and
                                                 :op1 (c5-5 / office)
                                                 :op2 (c5-1 / home)))
                  :mod (c5-11 / wow
                              :mode expressive))
      :snt2 (c5-10 / throw-01
                   :ARG0 (c5-13 / they)
                   :ARG1 (c5-19 / penny)
                   :ARG2 (c5-17 / person)
                   :purpose (c5-12 / sacrifice-01
                                   :ARG0 c5-17)
                   :ARG1 (c5-2 / health
                               :poss c5-17)))

# ::snt Sad. For the love of money is a root of all kinds of evil. Timothy :10a It really takes a sociopaths at the top to manage this evil system. Prayer sent to everyone affected by big pharma. Here's a minute video of the Gospel if anyone wants to be saved
# ::tokens ["Sad", ".", "For", "the", "love", "of", "money", "is", "a", "root", "of", "all", "kinds", "of", "evil", ".", "Timothy", ":", "10a", "It", "really", "takes", "a", "sociopaths", "at", "the", "top", "to", "manage", "this", "evil", "system", ".", "Prayer", "sent", "to", "everyone", "affected", "by", "big", "pharma", ".", "Here", "'s", "a", "minute", "video", "of", "the", "Gospel", "if", "anyone", "wants", "to", "be", "saved"]
# ::lemmas ["sad", ".", "for", "the", "love", "of", "money", "be", "a", "root", "of", "all", "kind", "of", "evil", ".", "Timothy", ":", "10a", "it", "really", "take", "a", "sociopath", "at", "the", "top", "to", "manage", "this", "evil", "system", ".", "Prayer", "send", "to", "everyone", "affect", "by", "big", "pharma", ".", "here", "be", "a", "minute", "video", "of", "the", "Gospel", "if", "anyone", "want", "to", "be", "save"]
(c6-11 / multi-sentence
       :snt1 (c6-16 / sad-02)
       :snt2 (c6-9 / root-02
                   :ARG1 (c6-15 / evil
                                :mod (c6-31 / kind
                                            :mod (c6-21 / all)))
                   :ARG2 (c6-27 / love-01
                                :ARG1 (c6-23 / money)))
       :snt3 (c6-7 / verse
                   :part-of (c6-28 / book
                                   :name (c6-12 / name
                                                :op1 "Timothy"))
                   :mod 10)
       :snt4 (c6-8 / take-10
                   :ARG0 (c6-19 / manage-01
                                :ARG0 (c6-29 / sociopath
                                             :location (c6-5 / top))
                                :ARG1 (c6-17 / system
                                             :mod (c6-25 / evil)
                                             :mod (c6-13 / this)))
                   :ARG1 (c6-30 / pray-01)
                   :ARG2 (c6-1 / everyone
                               :ARG1-of (c6-14 / affect-01
                                               :ARG0 (c6-26 / pharma
                                                            :mod (c6-20 / big))))
                   :ARG1-of (c6-6 / real-04)
                   :li "a")
       :snt5 (c6-24 / have-condition-91
                    :ARG1 (c6-22 / video
                                 :duration (c6-18 / temporal-quantity
                                                  :unit (c6-10 / minute)
                                                  :quant 1)
                                 :topic c6-28
                                 :name (c6-2 / name
                                             :op1 "Gospel")))
       :ARG2 (c6-4 / want-01
                   :ARG0 (c6-0 / anyone)
                   :ARG1 (c6-3 / save-02
                               :ARG1 c6-0)))

# ::snt Sad. For the love of money is a root of all kinds of evil. Timothy :10a It really takes a sociopaths at the top to manage this evil system. Prayer sent to everyone affected by big pharma. Here's a minute video of the Gospel if anyone wants to be saved
# ::tokens ["Sad", ".", "For", "the", "love", "of", "money", "is", "a", "root", "of", "all", "kinds", "of", "evil", ".", "Timothy", ":", "10a", "It", "really", "takes", "a", "sociopaths", "at", "the", "top", "to", "manage", "this", "evil", "system", ".", "Prayer", "sent", "to", "everyone", "affected", "by", "big", "pharma", ".", "Here", "'s", "a", "minute", "video", "of", "the", "Gospel", "if", "anyone", "wants", "to", "be", "saved"]
# ::lemmas ["sad", ".", "for", "the", "love", "of", "money", "be", "a", "root", "of", "all", "kind", "of", "evil", ".", "Timothy", ":", "10a", "it", "really", "take", "a", "sociopath", "at", "the", "top", "to", "manage", "this", "evil", "system", ".", "Prayer", "send", "to", "everyone", "affect", "by", "big", "pharma", ".", "here", "be", "a", "minute", "video", "of", "the", "Gospel", "if", "anyone", "want", "to", "be", "save"]
(c7-11 / multi-sentence
       :snt1 (c7-16 / sad-02)
       :snt2 (c7-9 / root-02
                   :ARG1 (c7-15 / evil
                                :mod (c7-31 / kind
                                            :mod (c7-21 / all)))
                   :ARG2 (c7-27 / love-01
                                :ARG1 (c7-23 / money)))
       :snt3 (c7-7 / verse
                   :part-of (c7-28 / book
                                   :name (c7-12 / name
                                                :op1 "Timothy"))
                   :mod 10)
       :snt4 (c7-8 / take-10
                   :ARG0 (c7-19 / manage-01
                                :ARG0 (c7-29 / sociopath
                                             :location (c7-5 / top))
                                :ARG1 (c7-17 / system
                                             :mod (c7-25 / evil)
                                             :mod (c7-13 / this)))
                   :ARG1 (c7-30 / pray-01)
                   :ARG2 (c7-1 / everyone
                               :ARG1-of (c7-14 / affect-01
                                               :ARG0 (c7-26 / pharma
                                                            :mod (c7-20 / big))))
                   :ARG1-of (c7-6 / real-04)
                   :li "a")
       :snt5 (c7-24 / have-condition-91
                    :ARG1 (c7-22 / video
                                 :duration (c7-18 / temporal-quantity
                                                  :unit (c7-10 / minute)
                                                  :quant 1)
                                 :topic c7-28
                                 :name (c7-2 / name
                                             :op1 "Gospel")))
       :ARG2 (c7-4 / want-01
                   :ARG0 (c7-0 / anyone)
                   :ARG1 (c7-3 / save-02
                               :ARG1 c7-0)))

# ::snt Pathetic
# ::tokens ["Pathetic"]
# ::lemmas ["Pathetic"]
(c8-0 / pathetic)

# ::snt Border is fully open again. Replacement workers on the way!
# ::tokens ["Border", "is", "fully", "open", "again", ".", "Replacement", "workers", "on", "the", "way", "!"]
# ::lemmas ["border", "be", "fully", "open", "again", ".", "replacement", "worker", "on", "the", "way", "!"]
(c9-8 / multi-sentence
      :snt1 (c9-4 / open-01
                  :ARG1 (c9-6 / border)
                  :mod (c9-1 / again)
                  :degree (c9-2 / full))
      :snt2 (c9-0 / be-located-at-91
                  :ARG1 (c9-7 / person
                              :ARG0-of (c9-3 / work-01)
                              :ARG1-of (c9-5 / replace-01))
                  :ARG2 (c9-9 / way)))

# ::snt So an employee troubled about the vax, either bc of aborted babies used in developing it, or dissatisfaction about effectiveness/safety, is being bribed to go against their own best moral or practical judgment? Not right. Give the $ to every employee to do with what they want.
# ::tokens ["So", "an", "employee", "troubled", "about", "the", "vax", ",", "either", "bc", "of", "aborted", "babies", "used", "in", "developing", "it", ",", "or", "dissatisfaction", "about", "effectiveness", "/", "safety", ",", "is", "being", "bribed", "to", "go", "against", "their", "own", "best", "moral", "or", "practical", "judgment", "?", "Not", "right", ".", "Give", "the", "$", "to", "every", "employee", "to", "do", "with", "what", "they", "want", "."]
# ::lemmas ["so", "an", "employee", "trouble", "about", "the", "vax", ",", "either", "bc", "of", "aborted", "baby", "use", "in", "develop", "it", ",", "or", "dissatisfaction", "about", "effectiveness", "/", "safety", ",", "be", "be", "bribe", "to", "go", "against", "their", "own", "good", "moral", "or", "practical", "judgment", "?", "not", "right", ".", "give", "the", "$", "to", "every", "employee", "to", "do", "with", "what", "they", "want", "."]
(c10-13 / multi-sentence
        :snt1 (c10-36 / bribed-01
                      :ARG1 (c10-38 / person
                                    :ARG1-of (c10-15 / employ-01)
                                    :ARG1-of (c10-10 / trouble-01
                                                     :ARG0 (c10-34 / product
                                                                   :name (c10-14 / name
                                                                                 :op1 "Vax"))
                                                     :ARG1-of (c10-5 / cause-01
                                                                     :ARG0 (c10-8 / or
                                                                                  :op1 (c10-26 / bear-02
                                                                                               :ARG1 (c10-18 / baby
                                                                                                             :ARG1-of (c10-28 / abort-01)
                                                                                                             :ARG1-of (c10-33 / use-01
                                                                                                                              :ARG2 (c10-0 / develop-02
                                                                                                                                           :ARG1 c10-34))))
                                                                                  :op2 (c10-23 / dissatisfy-01
                                                                                               :ARG0 (c10-16 / slash
                                                                                                             :op1 (c10-31 / effective-04)
                                                                                                             :op2 (c10-37 / safe-01))))))
                                    :ARG2 (c10-12 / go-06
                                                  :ARG1 (c10-32 / oppose-01
                                                                :ARG0 c10-38
                                                                :ARG1 (c10-4 / or
                                                                             :op1 (c10-35 / judge-01
                                                                                          :ARG0 c10-38
                                                                                          :ARG1-of (c10-30 / have-degree-91
                                                                                                           :ARG2 (c10-24 / good-02
                                                                                                                         :ARG1 c10-35)
                                                                                                           :ARG3 (c10-29 / most)
                                                                                                           :ARG5 (c10-39 / judge-01
                                                                                                                         :ARG0 c10-38
                                                                                                                         :ARG1-of (c10-19 / practical-02))))
                                                                             :op2 (c10-22 / judge-01
                                                                                          :ARG0 c10-38
                                                                                          :ARG1-of (c10-3 / have-degree-91
                                                                                                          :ARG2 c10-24
                                                                                                          :ARG1 c10-22)
                                                                                          :ARG3 (c10-21 / most)
                                                                                          :ARG5 c10-39))))
                                    :ARG0-of c10-12))
        :snt2 (c10-11 / right-02
                      :ARG1 (c10-1 / give-01
                                   :ARG0 (c10-25 / you)
                                   :ARG1 (c10-17 / dollar)
                                   :ARG2 (c10-20 / person
                                                 :ARG1-of (c10-2 / employ-01)
                                                 :mod (c10-27 / every))
                                   :purpose (c10-9 / do-02
                                                   :ARG0 c10-20
                                                   :ARG1 (c10-7 / thing
                                                                :ARG1-of (c10-6 / want-01
                                                                                :ARG0 c10-20)))
                                   :mode imperative)
                      :polarity -))

# ::snt Wow, getting paid to die or get physically injured. No thx.
# ::tokens ["Wow", ",", "getting", "paid", "to", "die", "or", "get", "physically", "injured", ".", "No", "thx", "."]
# ::lemmas ["wow", ",", "getting", "pay", "to", "die", "or", "get", "physically", "injure", ".", "no", "thx", "."]
(c11-8 / multi-sentence
       :snt1 (c11-7 / pay-01
                    :ARG2 (c11-4 / or
                                 :op1 (c11-0 / die-01
                                             :ARG1 (c11-6 / they))
                                 :op2 (c11-1 / injure-01
                                             :ARG1 c11-6
                                             :manner (c11-5 / physical)))
                    :mod (c11-2 / wow
                                :mode expressive))
       :snt2 (c11-3 / thx
                    :polarity -))

# ::snt In real pandemics you don't need to pay people to participate in real solutions.
# ::tokens ["In", "real", "pandemics", "you", "do", "n't", "need", "to", "pay", "people", "to", "participate", "in", "real", "solutions", "."]
# ::lemmas ["in", "real", "pandemic", "you", "do", "not", "need", "to", "pay", "people", "to", "participate", "in", "real", "solution", "."]
(c12-7 / need-01
       :ARG0 (c12-8 / you)
       :ARG1 (c12-6 / pay-01
                    :ARG0 c12-8
                    :ARG2 (c12-4 / person)
                    :ARG3 (c12-2 / participate-01
                                 :ARG0 c12-4
                                 :ARG1 (c12-0 / solve-01
                                              :ARG1-of (c12-5 / real-04))))
       :location (c12-1 / pandemic
                        :ARG1-of (c12-3 / real-04))
       :polarity -)

# ::snt When they need to offer incentives to take this thing, that there alone should raise red flags. The get rich scheme with recurring income is not working quite as planned.
# ::tokens ["When", "they", "need", "to", "offer", "incentives", "to", "take", "this", "thing", ",", "that", "there", "alone", "should", "raise", "red", "flags", ".", "The", "get", "rich", "scheme", "with", "recurring", "income", "is", "not", "working", "quite", "as", "planned", "."]
# ::lemmas ["when", "they", "need", "to", "offer", "incentive", "to", "take", "this", "thing", ",", "that", "there", "alone", "should", "raise", "red", "flag", ".", "the", "get", "rich", "scheme", "with", "recur", "income", "be", "not", "work", "quite", "as", "plan", "."]
(c13-11 / multi-sentence
        :snt1 (c13-8 / recommend-01
                     :ARG1 (c13-4 / raise-01
                                  :ARG0 (c13-7 / they
                                               :mod (c13-18 / alone))
                                  :ARG1 (c13-20 / flag
                                                :ARG1-of (c13-10 / red-02)))
                     :time (c13-12 / need-01
                                   :ARG0 c13-7
                                   :ARG1 (c13-5 / offer-01
                                                :ARG0 c13-7
                                                :ARG1 (c13-3 / thing
                                                             :ARG0-of (c13-1 / incentivize-01
                                                                             :ARG1 c13-7
                                                                             :ARG2 (c13-13 / take-01
                                                                                           :ARG0 c13-7
                                                                                           :ARG1 (c13-17 / thing
                                                                                                         :mod (c13-19 / this))))))))
        :snt2 (c13-2 / work-09
                     :ARG1 (c13-14 / scheme
                                   :mod (c13-9 / get-03
                                               :ARG2 (c13-6 / rich))
                                   :ARG0-of (c13-21 / have-03
                                                    :ARG1 (c13-16 / income
                                                                  :ARG1-of (c13-15 / repeat-01))))
                     :ARG1-of (c13-22 / plan-01
                                      :degree (c13-0 / quite))
                     :polarity -))

# ::snt nothin like a macdonalds employee an easy guinea pig.These corporations will do anythin to be in business even if it means sacrificin their barely-livin employees
# ::tokens ["nothin", "like", "a", "macdonalds", "employee", "an", "easy", "guinea", "pig", ".", "These", "corporations", "will", "do", "anythin", "to", "be", "in", "business", "even", "if", "it", "means", "sacrificin", "their", "barely", "-", "livin", "employees"]
# ::lemmas ["nothin", "like", "a", "macdonalds", "employee", "an", "easy", "guinea", "pig", ".", "these", "corporation", "will", "do", "anythin", "to", "be", "in", "business", "even", "if", "it", "mean", "sacrificin", "their", "barely", "-", "livin", "employee"]
(c14-7 / multi-sentence
       :snt1 (c14-5 / resemble-01
                    :ARG2 (c14-6 / guinea-pig
                                 :ARG1-of (c14-9 / easy-05)
                                 :domain (c14-19 / person
                                                 :ARG1-of (c14-15 / employ-01
                                                                  :ARG0 (c14-3 / company
                                                                               :name (c14-8 / name
                                                                                            :op1 "MacDonalds")))))
                    :polarity -)
       :snt2 (c14-0 / do-02
                    :ARG0 (c14-1 / corporation
                                 :mod (c14-4 / this))
                    :ARG1 (c14-13 / any)
                    :ARG2 (c14-18 / business)
                    :concession (c14-2 / even-if
                                       :op1 (c14-14 / mean-01
                                                    :ARG1 (c14-10 / sacrifice-01
                                                                  :ARG0 c14-1
                                                                  :ARG1 (c14-16 / person
                                                                                :ARG1-of (c14-12 / employ-01
                                                                                                 :ARG0 c14-1)
                                                                                :mod (c14-17 / livin
                                                                                             :degree (c14-11 / barely))))
                                                    :ARG2 c14-18))))

# ::snt So who gets the better jab dealMicky Ds or Kroger?
# ::tokens ["So", "who", "gets", "the", "better", "jab", "dealMicky", "Ds", "or", "Kroger", "?"]
# ::lemmas ["so", "who", "get", "the", "well", "jab", "dealmicky", "ds", "or", "Kroger", "?"]
(c15-6 / get-01
       :ARG0 (c15-1 / amr-unknown)
       :ARG1 (c15-0 / deal-01
                    :ARG2 (c15-7 / jab-01)
                    :ARG1-of (c15-3 / have-degree-91
                                    :ARG2 (c15-11 / good-02
                                                  :ARG1 c15-0)
                                    :ARG3 (c15-9 / more)))
       :ARG2 (c15-4 / or
                    :op1 (c15-8 / person
                                :name (c15-10 / name
                                              :op1 "Micky"
                                              :op2 "Ds"))
                    :op2 (c15-2 / company
                                :name (c15-5 / name
                                             :op1 "Kroger"))))

# ::snt It's fitting they have a clown as their mascot
# ::tokens ["It", "'s", "fitting", "they", "have", "a", "clown", "as", "their", "mascot"]
# ::lemmas ["it", "be", "fitting", "they", "have", "a", "clown", "as", "their", "mascot"]
(c16-0 / fitting-02
       :ARG1 (c16-2 / have-03
                    :ARG0 (c16-3 / they)
                    :ARG1 (c16-1 / clown
                                 :ARG0-of (c16-4 / have-org-role-91
                                                 :ARG1 c16-3
                                                 :ARG2 (c16-5 / mascot)))))

# ::snt Still wont get $15.00 an hour
# ::tokens ["Still", "wo", "nt", "get", "$", "15.00", "an", "hour"]
# ::lemmas ["still", "will", "not", "get", "$", "15.00", "an", "hour"]
(c17-5 / get-01
       :ARG0 (c17-6 / i)
       :ARG1 (c17-4 / rate-entity-91
                    :ARG1 (c17-7 / monetary-quantity
                                 :unit (c17-0 / dollar)
                                 :quant 15.00)
                    :ARG2 (c17-3 / temporal-quantity
                                 :unit (c17-2 / hour)
                                 :quant 1))
       :mod (c17-1 / still)
       :polarity -)

# ::snt Yeah, cause their main concern has always been the health of the communities they service
# ::tokens ["Yeah", ",", "cause", "their", "main", "concern", "has", "always", "been", "the", "health", "of", "the", "communities", "they", "service"]
# ::lemmas ["yeah", ",", "cause", "their", "main", "concern", "have", "always", "be", "the", "health", "of", "the", "community", "they", "service"]
(c18-3 / cause-01
       :ARG0 (c18-0 / concern-01
                    :ARG0 (c18-4 / health
                                 :poss (c18-5 / community
                                              :ARG2-of (c18-1 / service-05
                                                              :ARG0 (c18-6 / they
                                                                           :ARG1-of c18-0))))
                    :mod (c18-7 / main)
                    :time (c18-2 / always))
       :mod (c18-8 / yeah
                   :mode expressive))

# ::snt Wow so they give you a whole $30 after tax
# ::tokens ["Wow", "so", "they", "give", "you", "a", "whole", "$", "30", "after", "tax"]
# ::lemmas ["wow", "so", "they", "give", "you", "a", "whole", "$", "30", "after", "tax"]
(c19-5 / give-01
       :ARG0 (c19-4 / they)
       :ARG1 (c19-6 / monetary-quantity
                    :unit (c19-0 / dollar)
                    :mod (c19-2 / whole)
                    :quant 30)
       :ARG2 (c19-7 / you)
       :time (c19-1 / after
                    :op1 (c19-3 / tax-01))
       :mod (c19-8 / wow
                   :mode expressive))

# ::snt Mc Donalds and there one eye symbolism.
# ::tokens ["Mc", "Donalds", "and", "there", "one", "eye", "symbolism", "."]
# ::lemmas ["Mc", "Donalds", "and", "there", "one", "eye", "symbolism", "."]
(c20-1 / and
       :op1 (c20-2 / person
                   :name (c20-3 / name
                                :op1 "McDonalds"))
       :op2 (c20-0 / symbolism
                   :mod (c20-4 / eye
                               :quant 1)))

# ::snt McJab
# ::tokens ["McJab"]
# ::lemmas ["McJab"]
(c21-0 / person
       :name (c21-1 / name
                    :op1 "McJab"))

# ::snt Disgusting
# ::tokens ["Disgusting"]
# ::lemmas ["disgusting"]
(c22-0 / disgust-01)
