# ::snt My second dose just wore me out.Like, I thought I was fine but after running errands and taking a walk...I crashed hard. Like, five-hour nap hard.
# ::tokens ["My", "second", "dose", "just", "wore", "me", "out", ".", "Like", ",", "I", "thought", "I", "was", "fine", "but", "after", "running", "errands", "and", "taking", "a", "walk", "...", "I", "crashed", "hard", ".", "Like", ",", "five", "-", "hour", "nap", "hard", "."]
# ::lemmas ["my", "second", "dose", "just", "wear", "i", "out", ".", "like", ",", "i", "think", "i", "be", "fine", "but", "after", "run", "errand", "and", "take", "a", "walk", "...", "i", "crash", "hard", ".", "like", ",", "five", "-", "hour", "nap", "hard", "."]
(c1-13 / multi-sentence
       :snt1 (c1-6 / wear-out-03
                   :ARG0 (c1-0 / dose-01
                               :ARG1 (c1-3 / i)
                               :ord (c1-9 / ordinal-entity
                                          :value 2))
                   :ARG1 c1-3
                   :mod (c1-22 / just))
       :snt2 (c1-5 / contrast-01
                   :ARG1 (c1-10 / think-01
                                :ARG0 (c1-18 / i)
                                :ARG1 (c1-20 / fine-04
                                             :ARG1 c1-18))
                   :ARG2 (c1-1 / crash-01
                               :ARG0 c1-18
                               :ARG1-of (c1-21 / hard-02)
                               :time (c1-19 / after
                                            :op1 (c1-16 / and
                                                        :op1 (c1-11 / run-01
                                                                    :ARG0 c1-18
                                                                    :ARG1 (c1-17 / errand))
                                                        :op2 (c1-15 / walk-01
                                                                    :ARG0 c1-18))))
                   :ARG1-of (c1-8 / resemble-01))
       :snt3 (c1-14 / nap-01
                    :duration (c1-7 / temporal-quantity
                                    :unit (c1-2 / hour)
                                    :ARG1-of (c1-4 / hard-02)
                                    :quant 5)
                    :ARG1-of (c1-12 / resemble-01)))

# ::snt Im glad too! Surprised that Im spiking up to because I had no fever after the first dose, but at least I get to lay in bed and not work today
# ::tokens ["I", "m", "glad", "too", "!", "Surprised", "that", "I", "m", "spiking", "up", "to", "because", "I", "had", "no", "fever", "after", "the", "first", "dose", ",", "but", "at", "least", "I", "get", "to", "lay", "in", "bed", "and", "not", "work", "today"]
# ::lemmas ["i", "m", "glad", "too", "!", "surprised", "that", "i", "m", "spike", "up", "to", "because", "i", "have", "no", "fever", "after", "the", "first", "dose", ",", "but", "at", "least", "i", "get", "to", "lay", "in", "bed", "and", "not", "work", "today"]
(c2-9 / multi-sentence
      :snt1 (c2-8 / glad-02
                  :ARG1 (c2-2 / i)
                  :mod (c2-7 / too))
      :snt2 (c2-11 / surprise-01
                   :ARG0 (c2-19 / spiking-01
                                :ARG0 (c2-12 / i)
                                :ARG1-of (c2-3 / cause-01
                                               :ARG0 (c2-16 / have-03
                                                            :ARG0 c2-12
                                                            :ARG1 (c2-15 / fever)
                                                            :time (c2-14 / after
                                                                         :op1 (c2-0 / dose-01
                                                                                    :ord (c2-6 / ordinal-entity
                                                                                               :value 1)))
                                                            :polarity -)))
                   :ARG1 c2-12
                   :concession-of (c2-13 / get-22
                                         :ARG0 c2-12
                                         :ARG1 (c2-10 / and
                                                      :op1 (c2-17 / lay-01
                                                                  :ARG1 c2-12
                                                                  :ARG2 (c2-18 / bed))
                                                      :op2 (c2-4 / work-01
                                                                 :ARG0 c2-12
                                                                 :time (c2-5 / today)
                                                                 :polarity -))
                                         :mod (c2-1 / at-least))))

# ::snt Hope it doesn't get worse. Glad you got your nd. Get better soon.
# ::tokens ["Hope", "it", "does", "n't", "get", "worse", ".", "Glad", "you", "got", "your", "nd", ".", "Get", "better", "soon", "."]
# ::lemmas ["hope", "it", "do", "not", "get", "bad", ".", "glad", "you", "get", "your", "nd", ".", "get", "well", "soon", "."]
(c3-10 / multi-sentence
       :snt1 (c3-5 / hope-01
                   :ARG0 (c3-9 / i)
                   :ARG1 (c3-3 / worsen-01
                               :ARG1 (c3-6 / it)
                               :polarity -))
       :snt2 (c3-8 / glad-02
                   :ARG0 (c3-12 / get-01
                                :ARG0 (c3-7 / you)
                                :ARG1 (c3-11 / nd
                                             :poss c3-7))
                   :ARG1 (c3-2 / get-03
                               :ARG1 (c3-13 / you)
                               :ARG2 (c3-4 / well-05
                                           :ARG1 c3-13)
                               :time (c3-0 / soon)
                               :snt3-of c3-10))
       :ARG1 (c3-1 / you)
       :ARG2 c3-4
       :ARG1 c3-1)

# ::snt fever
# ::tokens ["fever"]
# ::lemmas ["fever"]
(c4-0 / have-concession-91
      :ARG1 (c4-1 / forever))

# ::snt arm already hurty
# ::tokens ["arm", "already", "hurty"]
# ::lemmas ["arm", "already", "hurty"]
(c5-0 / say-01
      :ARG1 (c5-1 / arm-01
                  :time (c5-4 / already))
      :ARG2 (c5-2 / person
                  :name (c5-3 / name
                              :op1 "Hurty")))

# ::snt *could still be a carrier*
# ::tokens ["*", "could", "still", "be", "a", "carrier", "*"]
# ::lemmas ["*", "could", "still", "be", "a", "carrier", "*"]
(c6-1 / possible-01
      :ARG1 (c6-3 / carrier
                  :domain (c6-2 / i)
                  :mod (c6-0 / still)))
