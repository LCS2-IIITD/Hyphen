# ::snt I just finished getting it and thats what I did I didnt even have to prove it lmao kinda funny lmao
# ::tokens ["I", "just", "finished", "getting", "it", "and", "that", "s", "what", "I", "did", "I", "did", "nt", "even", "have", "to", "prove", "it", "lmao", "kinda", "funny", "lmao"]
# ::lemmas ["i", "just", "finish", "get", "it", "and", "that", "s", "what", "i", "do", "i", "do", "not", "even", "have", "to", "prove", "it", "lmao", "kinda", "funny", "lmao"]
(c1-8 / multi-sentence
      :snt1 (c1-13 / and
                   :op1 (c1-14 / finish-01
                               :ARG0 (c1-2 / i)
                               :ARG1 (c1-7 / get-01
                                           :ARG0 c1-2
                                           :ARG1 (c1-10 / it))
                               :time (c1-17 / just))
                   :op2 (c1-0 / do-02
                              :ARG0 c1-2
                              :ARG1 (c1-6 / thing
                                          :domain (c1-4 / that))))
      :snt2 (c1-5 / obligate-01
                  :ARG1 (c1-11 / i)
                  :ARG2 (c1-18 / prove-01
                               :ARG0 c1-11
                               :ARG1 (c1-15 / it))
                  :mod (c1-9 / even)
                  :polarity -)
      :snt3 (c1-12 / funny-02
                   :degree (c1-19 / kind-of)
                   :ARG1-of (c1-16 / laugh-01
                                   :ARG0 (c1-3 / i)
                                   :manner (c1-1 / loud))))

# ::snt Yea Im depressed about my weight but atleast it qualifies me to get the vaccine :,)))
# ::tokens ["Yea", "I", "m", "depressed", "about", "my", "weight", "but", "atleast", "it", "qualifies", "me", "to", "get", "the", "vaccine", ":", ",", ")", ")", ")"]
# ::lemmas ["yea", "i", "m", "depressed", "about", "my", "weight", "but", "atleast", "it", "qualify", "i", "to", "get", "the", "vaccine", ":", ",", ")", ")", ")"]
(c2-0 / depress-01
      :ARG0 (c2-2 / weight
                  :poss (c2-6 / i
                              :ARG1-of c2-0))
      :concession-of (c2-3 / qualify-02
                           :ARG1 c2-2
                           :ARG2 (c2-5 / get-01
                                       :ARG0 c2-6
                                       :ARG1 (c2-4 / vaccine))
                           :mod (c2-1 / at-least))
      :mod (c2-7 / yea
                 :mode expressive))
