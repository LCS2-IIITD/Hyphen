# ::snt My nd shot the th
# ::tokens ["My", "nd", "shot", "the", "th"]
# ::lemmas ["my", "nd", "shoot", "the", "th"]
(c1-0 / shoot-01
      :ARG0 (c1-1 / i)
      :ARG1 (c1-2 / th))

# ::snt Damn Rekha fun as hell
# ::tokens ["Damn", "Rekha", "fun", "as", "hell"]
# ::lemmas ["Damn", "Rekha", "fun", "as", "hell"]
(c2-2 / fun-01
      :ARG1 (c2-4 / event
                  :name (c2-3 / name
                              :op1 "Rekha"))
      :mod (c2-0 / damn)
      :degree (c2-1 / as-hell))

# ::snt I feel great, too...congrats!
# ::tokens ["I", "feel", "great", ",", "too", "...", "congrats", "!"]
# ::lemmas ["i", "feel", "great", ",", "too", "...", "congrat", "!"]
(c3-0 / and
      :op1 (c3-1 / feel-01
                 :ARG0 (c3-5 / i)
                 :ARG1 (c3-4 / great)
                 :mod (c3-3 / too))
      :op2 (c3-2 / congratulate-01
                 :ARG0 c3-5
                 :ARG1 (c3-6 / you)))

# ::snt Tired and very thirsty!! Arm is a little sore.
# ::tokens ["Tired", "and", "very", "thirsty", "!", "!", "Arm", "is", "a", "little", "sore", "."]
# ::lemmas ["tired", "and", "very", "thirsty", "!", "!", "arm", "be", "a", "little", "sore", "."]
(c4-6 / multi-sentence
      :snt1 (c4-1 / and
                  :op1 (c4-4 / tire-01)
                  :op2 (c4-2 / thirst-01
                             :degree (c4-3 / very)))
      :snt2 (c4-0 / sore
                  :mod (c4-5 / little)
                  :domain (c4-7 / arm)))

# ::snt How are you feeling today after being Rekha-Pfized yesterday?
# ::tokens ["How", "are", "you", "feeling", "today", "after", "being", "Rekha", "-", "Pfized", "yesterday", "?"]
# ::lemmas ["how", "be", "you", "feel", "today", "after", "be", "Rekha", "-", "Pfized", "yesterday", "?"]
(c5-2 / feel-01
      :ARG0 (c5-5 / you)
      :ARG1 (c5-0 / amr-unknown)
      :time (c5-4 / today)
      :time (c5-6 / after
                  :op1 (c5-3 / traumatize-01
                             :ARG1 c5-5
                             :time (c5-1 / yesterday))))

# ::snt Yup; got my first shot yesterday too!
# ::tokens ["Yup", ";", "got", "my", "first", "shot", "yesterday", "too", "!"]
# ::lemmas ["yup", ";", "get", "my", "first", "shot", "yesterday", "too", "!"]
(c6-1 / and
      :op1 (c6-6 / yup)
      :op2 (c6-4 / get-01
                 :ARG0 (c6-5 / i)
                 :ARG1 (c6-0 / shoot-01
                             :ARG0 c6-5
                             :ord (c6-2 / ordinal-entity
                                        :value 1))
                 :time (c6-7 / yesterday)
                 :mod (c6-3 / too)))

# ::snt You are too cool.
# ::tokens ["You", "are", "too", "cool", "."]
# ::lemmas ["you", "be", "too", "cool", "."]
(c7-0 / have-degree-91
      :ARG1 (c7-2 / you)
      :ARG2 (c7-3 / cool-04
                  :ARG1 c7-2)
      :ARG3 (c7-1 / too))

# ::snt I remember drinking a lot after my first shot - dont worry, youll be fine
# ::tokens ["I", "remember", "drinking", "a", "lot", "after", "my", "first", "shot", "-", "do", "nt", "worry", ",", "you", "ll", "be", "fine"]
# ::lemmas ["i", "remember", "drink", "a", "lot", "after", "my", "first", "shot", "-", "do", "nt", "worry", ",", "you", "ll", "be", "fine"]
(c8-6 / remember-01
      :ARG0 (c8-8 / i)
      :ARG1 (c8-0 / drink-01
                  :ARG0 c8-8
                  :quant (c8-7 / lot)
                  :time (c8-2 / after
                              :op1 (c8-1 / shoot-02
                                         :ARG0 c8-8
                                         :ord (c8-5 / ordinal-entity
                                                    :value 1))))
      :ARG0-of (c8-4 / cause-01
                     :ARG1 (c8-3 / fine-04
                                 :ARG1 (c8-9 / you))))

# ::snt Very well done, I'm happy that my Mom will have the nd the first of May, hope to have my first very soon
# ::tokens ["Very", "well", "done", ",", "I", "'m", "happy", "that", "my", "Mom", "will", "have", "the", "nd", "the", "first", "of", "May", ",", "hope", "to", "have", "my", "first", "very", "soon"]
# ::lemmas ["very", "well", "do", ",", "i", "be", "happy", "that", "my", "mom", "will", "have", "the", "nd", "the", "first", "of", "May", ",", "hope", "to", "have", "my", "first", "very", "soon"]
(c9-3 / and
      :op1 (c9-0 / do-02
                 :ARG1-of (c9-6 / well-09
                                :degree (c9-10 / very)))
      :op2 (c9-8 / happy-01
                 :ARG0 (c9-14 / have-03
                              :ARG0 (c9-15 / person
                                           :ARG0-of (c9-1 / have-rel-role-91
                                                          :ARG1 (c9-5 / i)
                                                          :ARG2 (c9-16 / mom)))
                              :ARG1 c9-5
                              :time (c9-7 / date-entity
                                          :month 5
                                          :day 1))
                 :ARG1 c9-5)
      :op3 (c9-11 / hope-01
                  :ARG0 c9-5
                  :ARG1 (c9-9 / have-03
                              :ARG0 c9-5
                              :ARG1 (c9-13 / thing
                                           :ord (c9-12 / ordinal-entity
                                                       :value 1))
                              :time (c9-2 / soon
                                          :degree (c9-4 / very)))))

# ::snt I am looking forward to the faster internet connection that comes with it
# ::tokens ["I", "am", "looking", "forward", "to", "the", "faster", "internet", "connection", "that", "comes", "with", "it"]
# ::lemmas ["i", "be", "look", "forward", "to", "the", "fast", "internet", "connection", "that", "come", "with", "it"]
(c10-5 / look-forward-03
       :ARG0 (c10-6 / i)
       :ARG1 (c10-2 / connection
                    :mod (c10-3 / internet)
                    :ARG1-of (c10-4 / have-degree-91
                                    :ARG2 (c10-1 / fast-02
                                                 :ARG1 c10-2)
                                    :ARG3 (c10-7 / more))
                    :ARG1-of (c10-0 / come-03
                                    :ARG2 c10-2)))

# ::snt Im booked for the th. So excited!
# ::tokens ["I", "m", "booked", "for", "the", "th", ".", "So", "excited", "!"]
# ::lemmas ["i", "m", "book", "for", "the", "th", ".", "so", "excited", "!"]
(c12-4 / multi-sentence
       :snt1 (c12-2 / book-03
                    :ARG0 (c12-3 / i)
                    :ARG1 (c12-1 / th))
       :snt2 (c12-5 / excite-01
                    :degree (c12-0 / so)
                    :mode expressive))

# ::snt Awesome. ! Sooo happy to hear!
# ::tokens ["Awesome", ".", "!", "Sooo", "happy", "to", "hear", "!"]
# ::lemmas ["Awesome", ".", "!", "Sooo", "happy", "to", "hear", "!"]
(c13-4 / multi-sentence
       :snt1 (c13-1 / awe-01)
       :snt2 (c13-2 / happy-01
                    :ARG0 (c13-3 / hear-01)
                    :degree (c13-0 / so)
                    :mode expressive))

# ::snt Omg I'm like a camel rn. SO THIRSTY
# ::tokens ["Omg", "I", "'m", "like", "a", "camel", "rn", ".", "SO", "THIRSTY"]
# ::lemmas ["Omg", "i", "be", "like", "a", "camel", "rn", ".", "so", "THIRSTY"]
(c14-5 / multi-sentence
       :snt1 (c14-3 / resemble-01
                    :ARG1 (c14-4 / i)
                    :ARG2 (c14-1 / camel)
                    :mod (c14-2 / oh-my-god
                                :mode expressive))
       :snt2 (c14-6 / nice-01
                    :degree (c14-0 / so)))

# ::snt Wonderful Wackadoodly!
# ::tokens ["Wonderful", "Wackadoodly", "!"]
# ::lemmas ["Wonderful", "Wackadoodly", "!"]
(c15-0 / wonderful-03
       :mode expressive)

# ::snt I had a hankering for schnitzel, wurst und kraut after mine
# ::tokens ["I", "had", "a", "hankering", "for", "schnitzel", ",", "wurst", "und", "kraut", "after", "mine"]
# ::lemmas ["i", "have", "a", "hankering", "for", "schnitzel", ",", "wurst", "und", "kraut", "after", "mine"]
(c16-3 / have-03
       :ARG0 (c16-6 / i)
       :ARG1 (c16-5 / hanker-01
                    :ARG0 c16-6
                    :ARG1 (c16-1 / and
                                 :op1 (c16-0 / schnitzel)
                                 :op2 (c16-2 / wurst)
                                 :op3 (c16-7 / kraut)))
       :time (c16-8 / after
                    :op1 (c16-4 / thing
                                :poss c16-6)))

# ::snt I had both of mine and apart from a sore arm was fine.
# ::tokens ["I", "had", "both", "of", "mine", "and", "apart", "from", "a", "sore", "arm", "was", "fine", "."]
# ::lemmas ["i", "have", "both", "of", "mine", "and", "apart", "from", "a", "sore", "arm", "be", "fine", "."]
(c17-1 / and
       :op1 (c17-3 / have-03
                   :ARG0 (c17-6 / i
                                :part (c17-7 / arm))
                   :ARG1 (c17-4 / thing
                                :mod (c17-5 / both)
                                :poss c17-6))
       :op2 (c17-2 / fine-04
                   :ARG1 c17-7
                   :ARG2-of (c17-8 / except-01
                                   :ARG1 (c17-0 / sore
                                                :domain c17-7))))

# ::snt Glad you "youngsters" are getting your shots now, great news
# ::tokens ["Glad", "you", "\"", "youngsters", "\"", "are", "getting", "your", "shots", "now", ",", "great", "news"]
# ::lemmas ["glad", "you", "\"", "youngster", "\"", "be", "get", "your", "shot", "now", ",", "great", "news"]
(c19-5 / multi-sentence
       :snt1 (c19-4 / glad-02
                    :ARG0 (c19-2 / get-01
                                 :ARG0 (c19-7 / you
                                              :mod (c19-8 / young))
                                 :ARG1 (c19-0 / shoot-02
                                              :ARG1 c19-7)
                                 :time (c19-6 / now))
                    :ARG1 (c19-3 / news
                                 :mod (c19-1 / great
                                             :snt2-of c19-5))))

# ::snt Im so happy for you, Rekha! Got my first shot (Astra-Zeneca) in March here in the UK, will get my nd in June. Do get some rest and drink plenty of water
# ::tokens ["I", "m", "so", "happy", "for", "you", ",", "Rekha", "!", "Got", "my", "first", "shot", "(", "Astra", "-", "Zeneca", ")", "in", "March", "here", "in", "the", "UK", ",", "will", "get", "my", "nd", "in", "June", ".", "Do", "get", "some", "rest", "and", "drink", "plenty", "of", "water"]
# ::lemmas ["i", "m", "so", "happy", "for", "you", ",", "Rekha", "!", "get", "my", "first", "shot", "(", "Astra", "-", "Zeneca", ")", "in", "March", "here", "in", "the", "UK", ",", "will", "get", "my", "nd", "in", "June", ".", "do", "get", "some", "rest", "and", "drink", "plenty", "of", "water"]
(c20-13 / multi-sentence
        :snt1 (c20-16 / say-01
                      :ARG0 (c20-4 / i)
                      :ARG1 (c20-28 / happy-01
                                    :ARG0 (c20-31 / person
                                                  :name (c20-14 / name
                                                                :op1 "Rekha"))
                                    :ARG1 c20-4
                                    :degree (c20-30 / so))
                      :ARG2 c20-31)
        :snt2 (c20-26 / and
                      :op1 (c20-12 / get-01
                                   :ARG0 (c20-20 / i)
                                   :ARG1 (c20-21 / shoot-01
                                                 :ARG0 c20-20
                                                 :ord (c20-10 / ordinal-entity
                                                              :value 1)
                                                 :ARG1-of (c20-27 / mean-01
                                                                  :ARG2 (c20-29 / product
                                                                                :name (c20-2 / name
                                                                                             :op1 "Astra-Zeneca"))))
                                   :time (c20-0 / date-entity
                                                :month 3)
                                   :location (c20-3 / here
                                                    :location (c20-8 / country
                                                                     :name (c20-22 / name
                                                                                   :op1 "UK"))))
                      :op2 (c20-24 / get-01
                                   :ARG0 c20-20
                                   :ARG1 (c20-19 / person
                                                 :ARG0-of (c20-6 / have-rel-role-91
                                                                 :ARG1 c20-20
                                                                 :ARG2 (c20-7 / nd)))
                                   :time (c20-23 / date-entity
                                                 :month 6)))
        :snt3 (c20-15 / and
                      :op1 (c20-1 / get-01
                                  :ARG0 (c20-25 / you)
                                  :ARG1 (c20-11 / rest-01
                                                :mod (c20-5 / some))
                                  :mode imperative)
                      :op2 (c20-17 / drink-01
                                   :ARG0 c20-25
                                   :ARG1 (c20-9 / water
                                                :quant (c20-18 / plenty))
                                   :mode imperative)))

# ::snt Happy for you! All my elders are vaccinated already (dad gets his shot today) which makes me cry tears of joy. Now waiting for my turn!
# ::tokens ["Happy", "for", "you", "!", "All", "my", "elders", "are", "vaccinated", "already", "(", "dad", "gets", "his", "shot", "today", ")", "which", "makes", "me", "cry", "tears", "of", "joy", ".", "Now", "waiting", "for", "my", "turn", "!"]
# ::lemmas ["happy", "for", "you", "!", "all", "my", "elder", "be", "vaccinate", "already", "(", "dad", "get", "his", "shot", "today", ")", "which", "make", "i", "cry", "tear", "of", "joy", ".", "now", "wait", "for", "my", "turn", "!"]
(c21-11 / multi-sentence
        :snt1 (c21-21 / happy-01
                      :ARG1 (c21-18 / you))
        :snt2 (c21-19 / and
                      :op1 (c21-8 / vaccinate-01
                                  :ARG1 (c21-15 / elder
                                                :mod (c21-14 / all)
                                                :poss (c21-4 / i))
                                  :time (c21-1 / already))
                      :op2 (c21-10 / get-01
                                   :ARG0 (c21-23 / person
                                                 :ARG0-of (c21-3 / have-rel-role-91
                                                                 :ARG1 c21-4
                                                                 :ARG2 (c21-0 / dad)))
                                   :ARG1 (c21-16 / shoot-01
                                                 :ARG1 c21-23)
                                   :time (c21-9 / today)
                                   :ARG0-of (c21-20 / make-02
                                                    :ARG1 (c21-5 / cry-02
                                                                 :ARG0 c21-4
                                                                 :ARG1 (c21-7 / tear-03
                                                                              :ARG0 c21-4
                                                                              :ARG1-of (c21-2 / cause-01
                                                                                              :ARG0 (c21-22 / joy)))))))
        :snt3 (c21-6 / wait-01
                     :ARG1 (c21-17 / i)
                     :ARG2 (c21-13 / turn-01
                                   :ARG0 c21-17)
                     :time (c21-12 / now)))

# ::snt You two look fine as always! Congratulations for getting the shot!
# ::tokens ["You", "two", "look", "fine", "as", "always", "!", "Congratulations", "for", "getting", "the", "shot", "!"]
# ::lemmas ["you", "two", "look", "fine", "as", "always", "!", "congratulation", "for", "get", "the", "shot", "!"]
(c22-6 / multi-sentence
       :snt1 (c22-4 / look-02
                    :ARG0 (c22-7 / you
                                 :quant 2)
                    :ARG1 (c22-2 / fine-04)
                    :time (c22-1 / always))
       :snt2 (c22-3 / congratulate-01
                    :ARG1 (c22-8 / you)
                    :ARG2 (c22-5 / get-01
                                 :ARG0 c22-8
                                 :ARG1 (c22-0 / shoot-02))))

# ::snt just think of them hot from the oven with melted butter, jam, cream...(Homer moment) mmmm......scones......
# ::tokens ["just", "think", "of", "them", "hot", "from", "the", "oven", "with", "melted", "butter", ",", "jam", ",", "cream", "...", "(Homer", "moment", ")", "mmmm", "......", "scones", "......"]
# ::lemmas ["just", "think", "of", "they", "hot", "from", "the", "oven", "with", "melted", "butter", ",", "jam", ",", "cream", "...", "(Homer", "moment", ")", "mmmm", "......", "scones", "......"]
(c23-13 / multi-sentence
        :snt1 (c23-8 / think-01
                     :ARG0 (c23-15 / you)
                     :ARG1 (c23-3 / they
                                  :ARG1-of (c23-4 / hot-05
                                                  :source (c23-7 / oven))
                                  :prep-with (c23-0 / and
                                                    :op1 (c23-10 / butter
                                                                 :ARG1-of (c23-1 / melt-01))
                                                    :op2 (c23-11 / jam)
                                                    :op3 (c23-2 / cream)))
                     :mod (c23-14 / just)
                     :mode imperative)
        :snt2 (c23-6 / moment
                     :mod (c23-12 / person
                                  :name (c23-9 / name
                                               :op1 "Homer"))
                     :mod (c23-5 / hmm
                                 :mode expressive)))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c24-0 / congratulate-01
       :mode expressive)

# ::snt Dunno if I'll ever find the courage to make scones!
# ::tokens ["Dunno", "if", "I", "'ll", "ever", "find", "the", "courage", "to", "make", "scones", "!"]
# ::lemmas ["Dunno", "if", "i", "'ll", "ever", "find", "the", "courage", "to", "make", "scone", "!"]
(c25-6 / know-01
       :ARG0 (c25-4 / i)
       :ARG1 (c25-3 / truth-value
                    :polarity-of (c25-1 / find-01
                                        :ARG0 c25-4
                                        :ARG1 (c25-2 / courage
                                                     :purpose (c25-5 / make-01
                                                                     :ARG0 c25-4
                                                                     :ARG1 (c25-0 / scones)))
                                        :time (c25-7 / ever)))
       :polarity -)

# ::snt Got yesterday - Pfizer. I also thought it would be June/July.
# ::tokens ["Got", "yesterday", "-", "Pfizer", ".", "I", "also", "thought", "it", "would", "be", "June", "/", "July", "."]
# ::lemmas ["got", "yesterday", "-", "Pfizer", ".", "i", "also", "think", "it", "would", "be", "June", "/", "July", "."]
(c26-8 / multi-sentence
       :snt1 (c26-6 / get-01
                    :ARG0 (c26-3 / company
                                 :name (c26-9 / name
                                              :op1 "Pfizer"))
                    :time (c26-10 / yesterday))
       :snt2 (c26-5 / think-01
                    :ARG0 (c26-7 / i)
                    :ARG1 (c26-0 / slash
                                 :op1 (c26-1 / date-entity
                                             :month 6)
                                 :op2 (c26-4 / date-entity
                                             :month 7))
                    :mod (c26-2 / also)))

# ::snt Bless you, got the Pfizer here too in Ireland last week, sadly not so good, oh and where are my scones lol
# ::tokens ["Bless", "you", ",", "got", "the", "Pfizer", "here", "too", "in", "Ireland", "last", "week", ",", "sadly", "not", "so", "good", ",", "oh", "and", "where", "are", "my", "scones", "lol"]
# ::lemmas ["bless", "you", ",", "get", "the", "Pfizer", "here", "too", "in", "Ireland", "last", "week", ",", "sadly", "not", "so", "good", ",", "oh", "and", "where", "be", "my", "scone", "lol"]
(c28-9 / multi-sentence
       :snt1 (c28-22 / bless-01
                     :ARG0 (c28-3 / i)
                     :ARG1 (c28-17 / you))
       :snt2 (c28-8 / get-01
                    :ARG0 (c28-13 / i)
                    :ARG1 (c28-24 / product
                                  :name (c28-10 / name
                                                :op1 "Pfizer"))
                    :location (c28-20 / here
                                      :location (c28-4 / country
                                                       :name (c28-1 / name
                                                                    :op1 "Ireland")))
                    :time (c28-5 / week
                                 :mod (c28-21 / last))
                    :mod (c28-7 / too)
                    :ARG1-of (c28-16 / good-02
                                     :degree (c28-12 / so)
                                     :ARG0-of (c28-23 / sad-02)
                                     :polarity -))
       :snt3 (c28-19 / and
                     :op2 (c28-18 / be-located-at-91
                                  :ARG1 (c28-14 / scone
                                                :poss (c28-15 / i))
                                  :ARG2 (c28-11 / amr-unknown))
                     :mod (c28-6 / oh)
                     :ARG2-of (c28-2 / laugh-01
                                     :ARG0 c28-15
                                     :manner (c28-0 / loud)
                                     :mode expressive)))

# ::snt i would but im usually allergic to the preservatives in injections. so im screwed.
# ::tokens ["i", "would", "but", "i", "m", "usually", "allergic", "to", "the", "preservatives", "in", "injections", ".", "so", "i", "m", "screwed", "."]
# ::lemmas ["i", "would", "but", "i", "m", "usually", "allergic", "to", "the", "preservative", "in", "injection", ".", "so", "i", "m", "screw", "."]
(c29-8 / multi-sentence
       :snt1 (c29-3 / have-concession-91
                    :ARG1 (c29-1 / allergic-01
                                 :ARG1 (c29-2 / i)
                                 :ARG2 (c29-7 / preservative
                                              :part-of (c29-4 / inject-01))
                                 :mod (c29-6 / usual)))
       :snt2 (c29-0 / screw-02
                    :ARG1 (c29-5 / i)))

# ::snt Yep. She's the best
# ::tokens ["Yep", ".", "She", "'s", "the", "best"]
# ::lemmas ["yep", ".", "she", "be", "the", "good"]
(c30-2 / have-degree-91
       :ARG1 (c30-0 / she)
       :ARG2 (c30-3 / good-02
                    :ARG1 c30-0)
       :ARG3 (c30-1 / most))

# ::snt Is that your mommy? She's beautiful
# ::tokens ["Is", "that", "your", "mommy", "?", "She", "'s", "beautiful"]
# ::lemmas ["be", "that", "your", "mommy", "?", "she", "be", "beautiful"]
(c31-7 / multi-sentence
       :snt1 (c31-6 / person
                    :polarity (c31-1 / amr-unknown)
                    :ARG0-of (c31-3 / have-rel-role-91
                                    :ARG1 (c31-8 / you)
                                    :ARG2 (c31-2 / mommy))
                    :domain (c31-4 / that))
       :snt2 (c31-5 / beautiful-02
                    :ARG1 (c31-0 / she)))

# ::snt AZ here... side effects near non-existent for me so I'm not complaining.
# ::tokens ["AZ", "here", "...", "side", "effects", "near", "non", "-", "existent", "for", "me", "so", "I", "'m", "not", "complaining", "."]
# ::lemmas ["AZ", "here", "...", "side", "effect", "near", "non", "-", "existent", "for", "i", "so", "i", "be", "not", "complain", "."]
(c34-0 / say-01
       :ARG0 (c34-8 / i)
       :ARG1 (c34-2 / cause-01
                    :ARG0 (c34-10 / event
                                  :mod (c34-7 / side)
                                  :ARG1-of (c34-4 / exist-01
                                                  :ARG1-of (c34-9 / near-02)
                                                  :beneficiary c34-8
                                                  :polarity -))
                    :ARG1 (c34-1 / complain-01
                                 :ARG0 c34-8
                                 :polarity -))
       :ARG2 (c34-6 / person
                    :name (c34-5 / name
                                 :op1 "AZ")
                    :location (c34-3 / here)))

# ::snt Awesome news...when I got mine I called it Jaeger Pfizer.
# ::tokens ["Awesome", "news", "...", "when", "I", "got", "mine", "I", "called", "it", "Jaeger", "Pfizer", "."]
# ::lemmas ["Awesome", "news", "...", "when", "i", "get", "mine", "i", "call", "it", "Jaeger", "Pfizer", "."]
(c35-1 / and
       :op1 (c35-8 / news
                   :ARG0-of (c35-9 / awe-01))
       :op2 (c35-2 / call-01
                   :ARG0 (c35-7 / i)
                   :ARG1 (c35-3 / it)
                   :ARG2 (c35-0 / company
                                :name (c35-5 / name
                                             :op1 "Jaeger"
                                             :op2 "Pfizer"))
                   :time (c35-6 / get-01
                                :ARG0 c35-7
                                :ARG1 (c35-4 / thing
                                             :poss c35-7))))

# ::snt We're all Pfizerfied here. Good luck!
# ::tokens ["We", "'re", "all", "Pfizerfied", "here", ".", "Good", "luck", "!"]
# ::lemmas ["we", "be", "all", "Pfizerfied", "here", ".", "good", "luck", "!"]
(c36-6 / multi-sentence
       :snt1 (c36-1 / company
                    :name (c36-7 / name
                                 :op1 "Pfizerfied")
                    :domain (c36-2 / we
                                   :mod (c36-0 / all))
                    :location (c36-3 / here))
       :snt2 (c36-4 / luck
                    :ARG1-of (c36-5 / good-02)))

# ::snt Hey, we're vax buddies! I got my second shot today. Don't worry about the cross eyes, the second shot will cross them all the way back normal. Pretty much.
# ::tokens ["Hey", ",", "we", "'re", "vax", "buddies", "!", "I", "got", "my", "second", "shot", "today", ".", "Do", "n't", "worry", "about", "the", "cross", "eyes", ",", "the", "second", "shot", "will", "cross", "them", "all", "the", "way", "back", "normal", ".", "Pretty", "much", "."]
# ::lemmas ["hey", ",", "we", "be", "vax", "buddy", "!", "i", "get", "my", "second", "shot", "today", ".", "do", "not", "worry", "about", "the", "cross", "eye", ",", "the", "second", "shot", "will", "cross", "they", "all", "the", "way", "back", "normal", ".", "pretty", "much", "."]
(c37-9 / multi-sentence
       :snt1 (c37-21 / buddy
                     :domain (c37-3 / we)
                     :mod (c37-5 / vax)
                     :mod (c37-19 / hey
                                  :mode expressive))
       :snt2 (c37-8 / get-01
                    :ARG0 (c37-1 / i)
                    :ARG1 (c37-13 / shoot-02
                                  :ARG0 c37-1
                                  :ord (c37-6 / ordinal-entity
                                              :value 2))
                    :time (c37-7 / today))
       :snt3 (c37-11 / worry-02
                     :ARG0 (c37-16 / you)
                     :ARG1 (c37-2 / cross-02
                                  :ARG0 (c37-22 / shot-02
                                                :ARG0 (c37-23 / person
                                                              :ord c37-6
                                                              :value 2)))
                     :ARG1 (c37-12 / eye
                                   :ARG0-of (c37-0 / cross-02))
                     :ARG1-of (c37-4 / cause-01
                                     :ARG0 (c37-15 / cross-02
                                                   :ARG0 (c37-14 / shot-02
                                                                 :ARG0 c37-23
                                                                 :ord c37-6)
                                                   :ARG1 c37-12
                                                   :ARG1-of (c37-10 / normal-02)
                                                   :direction (c37-17 / back
                                                                      :extent (c37-18 / all-the-way))))
                     :polarity -
                     :mode imperative)
       :snt4 (c37-20 / pretty-much))

# ::snt I guess I can officially welcome you to the club
# ::tokens ["I", "guess", "I", "can", "officially", "welcome", "you", "to", "the", "club"]
# ::lemmas ["i", "guess", "i", "can", "officially", "welcome", "you", "to", "the", "club"]
(c38-4 / guess-01
       :ARG0 (c38-5 / i)
       :ARG1 (c38-3 / possible-01
                    :ARG1 (c38-1 / welcome-01
                                 :ARG0 c38-5
                                 :ARG1 (c38-6 / you)
                                 :ARG2 (c38-0 / club)
                                 :mod (c38-2 / official))))

# ::snt Second P-shot may kick you just a bit if mine was any indication, but don't sweat it overmuch.
# ::tokens ["Second", "P", "-", "shot", "may", "kick", "you", "just", "a", "bit", "if", "mine", "was", "any", "indication", ",", "but", "do", "n't", "sweat", "it", "overmuch", "."]
# ::lemmas ["Second", "p", "-", "shot", "may", "kick", "you", "just", "a", "bit", "if", "mine", "be", "any", "indication", ",", "but", "do", "not", "sweat", "it", "overmuch", "."]
(c39-3 / have-concession-91
       :ARG1 (c39-0 / sweat-01
                    :ARG0 (c39-11 / you)
                    :ARG1 (c39-10 / kick-01
                                  :ARG0 (c39-7 / shot
                                               :ord (c39-5 / ordinal-entity
                                                           :value 2)
                                               :instrument-of (c39-4 / shoot-01))
                                  :ARG1 c39-11
                                  :degree (c39-9 / much
                                                 :mod (c39-6 / just)))
                    :polarity -
                    :mode imperative)
       :ARG2 (c39-8 / possible-01
                    :ARG1 c39-10
                    :condition (c39-2 / indicate-01
                                      :ARG0 c39-4
                                      :mod (c39-1 / any))))

# ::snt No hate; the only way we're gonna beat this is to step up and get our shots.
# ::tokens ["No", "hate", ";", "the", "only", "way", "we", "'re", "gon", "na", "beat", "this", "is", "to", "step", "up", "and", "get", "our", "shots", "."]
# ::lemmas ["no", "hate", ";", "the", "only", "way", "we", "be", "going", "to", "beat", "this", "be", "to", "step", "up", "and", "get", "our", "shot", "."]
(c40-9 / multi-sentence
       :snt1 (c40-3 / hate-01
                    :polarity -)
       :snt2 (c40-2 / way
                    :mod (c40-4 / only)
                    :manner-of (c40-7 / beat-03
                                      :ARG0 (c40-10 / we)
                                      :ARG1 (c40-5 / this))
                    :domain (c40-1 / and
                                   :op1 (c40-0 / step-up-00
                                               :ARG1 c40-10)
                                   :op2 (c40-6 / get-01
                                               :ARG0 c40-10
                                               :ARG1 (c40-8 / shoot-01
                                                            :ARG0 c40-10)))))

# ::snt trying to get an appointment in the uk is bloody awkward. glad you got yours mate.
# ::tokens ["trying", "to", "get", "an", "appointment", "in", "the", "uk", "is", "bloody", "awkward", ".", "glad", "you", "got", "yours", "mate", "."]
# ::lemmas ["try", "to", "get", "an", "appointment", "in", "the", "uk", "be", "bloody", "awkward", ".", "glad", "you", "get", "yours", "mate", "."]
(c41-11 / multi-sentence
        :snt1 (c41-1 / awkward
                     :mod (c41-10 / bloody)
                     :domain (c41-8 / try-01
                                    :ARG1 (c41-9 / get-01
                                                 :ARG1 (c41-14 / appointment-02
                                                               :ARG0 (c41-13 / you)
                                                               :location (c41-4 / country
                                                                                :name (c41-12 / name
                                                                                              :op1 "UK"))))))
        :snt2 (c41-2 / glad-02
                     :ARG0 (c41-0 / get-01
                                  :ARG0 (c41-3 / you
                                               :ARG0-of (c41-7 / have-rel-role-91
                                                               :ARG2 (c41-5 / mate)))
                                  :ARG1 (c41-6 / thing
                                               :poss c41-3))
                     :ARG1 c41-5))
