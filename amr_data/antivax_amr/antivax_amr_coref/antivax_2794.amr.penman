# ::snt They'll never rake in all the money they think they 'need'.
# ::tokens ["They", "'ll", "never", "rake", "in", "all", "the", "money", "they", "think", "they", "'", "need", "'", "."]
# ::lemmas ["they", "'ll", "never", "rake", "in", "all", "the", "money", "they", "think", "they", "'", "need", "'", "."]
(c1-3 / rake-in-02
      :ARG0 (c1-2 / they)
      :ARG1 (c1-4 / money
                  :mod (c1-0 / all)
                  :ARG1-of (c1-5 / need-01
                                 :ARG0 c1-2
                                 :ARG1-of (c1-1 / think-01
                                                :ARG0 c1-2)))
      :time (c1-6 / ever)
      :polarity -)

# ::snt Just remember to get your dose of "variant" every days so they can keep this thing going until they see fit!
# ::tokens ["Just", "remember", "to", "get", "your", "dose", "of", "\"", "variant", "\"", "every", "days", "so", "they", "can", "keep", "this", "thing", "going", "until", "they", "see", "fit", "!"]
# ::lemmas ["just", "remember", "to", "get", "your", "dose", "of", "\"", "variant", "\"", "every", "day", "so", "they", "can", "keep", "this", "thing", "go", "until", "they", "see", "fit", "!"]
(c2-5 / remember-01
      :ARG0 (c2-12 / you)
      :ARG1 (c2-6 / get-01
                  :ARG0 c2-12
                  :ARG1 (c2-0 / dose-01
                              :ARG1 c2-12
                              :ARG2 (c2-4 / thing
                                          :ARG1-of (c2-3 / vary-01)))
                  :frequency (c2-2 / rate-entity-91
                                   :ARG3 (c2-1 / temporal-quantity
                                               :unit (c2-10 / day)
                                               :quant 1))
                  :purpose (c2-17 / possible-01
                                  :ARG1 (c2-18 / keep-01
                                               :ARG0 (c2-7 / they)
                                               :ARG1 (c2-11 / go-01
                                                            :ARG1 (c2-9 / thing
                                                                        :mod (c2-13 / this)))
                                               :duration (c2-15 / until
                                                                :op1 (c2-8 / see-01
                                                                           :ARG0 c2-7
                                                                           :ARG1 (c2-14 / fit-06
                                                                                        :ARG1 c2-9))))))
      :mod (c2-16 / just)
      :mode imperative)
