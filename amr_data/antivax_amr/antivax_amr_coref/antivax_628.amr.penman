# ::snt Thank you Rebecca I appreciate you telling me what to expect
# ::tokens ["Thank", "you", "Rebecca", "I", "appreciate", "you", "telling", "me", "what", "to", "expect"]
# ::lemmas ["thank", "you", "Rebecca", "i", "appreciate", "you", "tell", "i", "what", "to", "expect"]
(c2-0 / and
      :op1 (c2-2 / thank-01
                 :ARG0 (c2-4 / i)
                 :ARG1 (c2-3 / person
                             :name (c2-5 / name
                                         :op1 "Rebecca")))
      :op2 (c2-7 / appreciate-02
                 :ARG0 c2-4
                 :ARG1 (c2-1 / tell-01
                             :ARG0 c2-3
                             :ARG1 (c2-6 / thing
                                         :ARG1-of (c2-8 / expect-01
                                                        :ARG0 c2-4))
                             :ARG2 c2-4)))

# ::snt Me too! Im so happy for you. I get my second one next week and I cant wait.
# ::tokens ["Me", "too", "!", "I", "m", "so", "happy", "for", "you", ".", "I", "get", "my", "second", "one", "next", "week", "and", "I", "ca", "nt", "wait", "."]
# ::lemmas ["i", "too", "!", "i", "m", "so", "happy", "for", "you", ".", "i", "get", "my", "second", "one", "next", "week", "and", "i", "can", "not", "wait", "."]
(c3-10 / multi-sentence
       :snt1 (c3-9 / i)
       :snt2 (c3-3 / happy-01
                   :ARG0 (c3-12 / you)
                   :ARG1 (c3-4 / i)
                   :degree (c3-0 / so))
       :snt3 (c3-1 / and
                   :op1 (c3-8 / get-01
                              :ARG0 (c3-5 / i)
                              :ARG1 (c3-7 / one
                                          :poss c3-5
                                          :ord (c3-6 / ordinal-entity
                                                     :value 2))
                              :time (c3-2 / week
                                          :mod (c3-11 / next)))
                   :op2 (c3-13 / wait-01
                               :ARG1 c3-5
                               :ARG2 c3-8
                               :polarity -)))

# ::snt I receive my nd dose on the th so I know how youre feeling! Just had a bit of a sore arm for a few days &amp; thats it! Good Luck &amp; Good Health!!
# ::tokens ["I", "receive", "my", "nd", "dose", "on", "the", "th", "so", "I", "know", "how", "you", "re", "feeling", "!", "Just", "had", "a", "bit", "of", "a", "sore", "arm", "for", "a", "few", "days", "&", "amp", ";", "that", "s", "it", "!", "Good", "Luck", "&", "amp", ";", "Good", "Health", "!", "!"]
# ::lemmas ["i", "receive", "my", "nd", "dose", "on", "the", "th", "so", "i", "know", "how", "you", "re", "feel", "!", "just", "have", "a", "bit", "of", "a", "sore", "arm", "for", "a", "few", "days", "&", "amp", ";", "that", "s", "it", "!", "Good", "Luck", "&", "amp", ";", "Good", "Health", "!", "!"]
(c4-10 / multi-sentence
       :snt1 (c4-8 / receive-01
                   :ARG0 (c4-3 / i)
                   :ARG1 (c4-0 / dose
                               :mod (c4-17 / dear)
                               :poss c4-3)
                   :time (c4-14 / date-entity
                                :dayperiod (c4-11 / night))
                   :ARG0-of (c4-4 / cause-01
                                  :ARG1 (c4-27 / know-01
                                               :ARG0 c4-3
                                               :ARG1 (c4-7 / thing
                                                           :ARG1-of (c4-22 / feel-01
                                                                           :ARG0 (c4-18 / you))))))
       :snt2 (c4-21 / and
                    :op1 (c4-23 / have-03
                                :ARG0 (c4-15 / i)
                                :ARG1 (c4-13 / sore
                                             :degree (c4-25 / bit)
                                             :domain (c4-12 / arm))
                                :duration (c4-16 / few
                                                 :op1 (c4-5 / temporal-quantity
                                                            :unit (c4-6 / day)
                                                            :quant 1))
                                :mod (c4-26 / just))
                    :op2 (c4-20 / be-it-08
                                :ARG1 (c4-1 / and
                                            :op1 (c4-24 / luck
                                                        :ARG1-of (c4-9 / good-02))
                                            :op2 (c4-2 / health
                                                       :ARG1-of (c4-19 / good-02))))))

# ::snt I'm so relieved Mary
# ::tokens ["I", "'m", "so", "relieved", "Mary"]
# ::lemmas ["i", "be", "so", "relieved", "Mary"]
(c5-0 / say-01
      :ARG0 (c5-4 / i)
      :ARG1 (c5-1 / relieve-01
                  :ARG1 c5-4
                  :degree (c5-3 / so))
      :ARG2 (c5-2 / person
                  :name (c5-5 / name
                              :op1 "Mary")))

# ::snt For sure
# ::tokens ["For", "sure"]
# ::lemmas ["for", "sure"]
(c6-0 / sure-02)

# ::snt Hellz yeah !!!!!
# ::tokens ["Hellz", "yeah", "!", "!", "!", "!", "!"]
# ::lemmas ["Hellz", "yeah", "!", "!", "!", "!", "!"]
(c7-1 / yeah
      :mod (c7-0 / hell
                 :mode expressive)
      :mode expressive)

# ::snt Congratulations. Expect to spend -30 after for observation.
# ::tokens ["Congratulations", ".", "Expect", "to", "spend", "-30", "after", "for", "observation", "."]
# ::lemmas ["congratulation", ".", "expect", "to", "spend", "-30", "after", "for", "observation", "."]
(c8-4 / multi-sentence
      :snt1 (c8-2 / congratulate-01)
      :snt2 (c8-5 / expect-01
                  :ARG1 (c8-0 / spend-01
                              :ARG3 -30)
                  :time (c8-1 / after
                              :op1 (c8-3 / observe-01))))

# ::snt I'm getting mine on Thursday.
# ::tokens ["I", "'m", "getting", "mine", "on", "Thursday", "."]
# ::lemmas ["i", "be", "get", "mine", "on", "Thursday", "."]
(c9-3 / get-01
      :ARG0 (c9-4 / i)
      :ARG1 (c9-2 / thing
                  :poss c9-4)
      :time (c9-0 / date-entity
                  :weekday (c9-1 / thursday)))
