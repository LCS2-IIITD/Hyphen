# ::snt Almost forgot to give yall the hour update: My arm feels much better. Its no longer tender to touch, but its still a little sore at the injection site. I can finally lay on my left side now, so Im happy about that.
# ::tokens ["Almost", "forgot", "to", "give", "y", "all", "the", "hour", "update", ":", "My", "arm", "feels", "much", "better", ".", "Its", "no", "longer", "tender", "to", "touch", ",", "but", "its", "still", "a", "little", "sore", "at", "the", "injection", "site", ".", "I", "can", "finally", "lay", "on", "my", "left", "side", "now", ",", "so", "I", "m", "happy", "about", "that", "."]
# ::lemmas ["almost", "forget", "to", "give", "you", "all", "the", "hour", "update", ":", "my", "arm", "feel", "much", "well", ".", "its", "no", "long", "tender", "to", "touch", ",", "but", "its", "still", "a", "little", "sore", "at", "the", "injection", "site", ".", "i", "can", "finally", "lay", "on", "my", "left", "side", "now", ",", "so", "i", "m", "happy", "about", "that", "."]
(c1-13 / multi-sentence
       :snt1 (c1-24 / forget-01
                    :ARG0 (c1-6 / i)
                    :ARG1 (c1-27 / update-02
                                 :ARG0 c1-6
                                 :ARG2 (c1-26 / hour
                                              :mod (c1-23 / all)))
                    :mod (c1-15 / almost))
       :snt2 (c1-21 / feel-01
                    :ARG0 (c1-1 / arm
                                :part-of (c1-17 / i))
                    :ARG1 (c1-12 / good-02
                                 :ARG2-of (c1-5 / have-degree-91
                                                :ARG1 c1-21
                                                :ARG3 (c1-25 / more
                                                             :quant (c1-20 / much)))))
       :snt3 (c1-9 / contrast-01
                   :ARG1 (c1-11 / tender-02
                                :ARG1 (c1-18 / it)
                                :time (c1-14 / no-longer)
                                :ARG2-of c1-5
                                :ARG1 c1-18
                                :ARG3 c1-25))
       :ARG2 (c1-16 / sore
                    :mod (c1-29 / little)
                    :location (c1-30 / site
                                     :mod (c1-28 / inject-01))
                    :mod (c1-19 / still))
       :snt4 (c1-0 / cause-01
                   :ARG0 (c1-31 / possible-01
                                :ARG1 (c1-4 / lay-01
                                            :ARG1 (c1-10 / i)
                                            :ARG2 (c1-7 / side
                                                        :ARG1-of (c1-2 / left-20)
                                                        :poss c1-10)
                                            :time (c1-22 / final))
                                :time (c1-3 / now))
                   :ARG1 (c1-8 / happy-01
                               :ARG0 c1-4
                               :ARG1 c1-10)))

# ::snt no
# ::tokens ["no"]
# ::lemmas ["no"]
(c2-0 / no)

# ::snt So you gon be annoying everyday? Take a break.
# ::tokens ["So", "you", "gon", "be", "annoying", "everyday", "?", "Take", "a", "break", "."]
# ::lemmas ["so", "you", "gon", "be", "annoying", "everyday", "?", "take", "a", "break", "."]
(c3-6 / multi-sentence
      :snt1 (c3-2 / cause-01
                  :ARG1 (c3-1 / annoy-01
                              :ARG0 (c3-7 / you)
                              :frequency (c3-4 / rate-entity-91
                                               :ARG3 (c3-3 / temporal-quantity
                                                           :unit (c3-0 / day)
                                                           :quant 1))))
      :snt2 (c3-5 / break-19
                  :ARG0 (c3-8 / you)
                  :mode imperative))

# ::snt Welcome babes
# ::tokens ["Welcome", "babes"]
# ::lemmas ["welcome", "babe"]
(c5-0 / say-01
      :ARG1 (c5-1 / welcome-01
                  :ARG1 (c5-2 / babes
                              :ARG2-of c5-0)))

# ::snt Lmk how it goes.
# ::tokens ["Lmk", "how", "it", "goes", "."]
# ::lemmas ["Lmk", "how", "it", "go", "."]
(c6-0 / go-01
      :ARG1 (c6-1 / it)
      :manner (c6-2 / amr-unintelligible
                    :value "Lmk"))

# ::snt appreciate you for doing this fr!
# ::tokens ["appreciate", "you", "for", "doing", "this", "fr", "!"]
# ::lemmas ["appreciate", "you", "for", "do", "this", "fr", "!"]
(c7-1 / appreciate-02
      :ARG0 (c7-3 / i)
      :ARG1 (c7-4 / you)
      :ARG2 (c7-0 / do-02
                  :ARG0 c7-4
                  :ARG1 (c7-2 / this))
      :mode expressive)

# ::snt iight back with a hour update: My upper arm is tender to touch &amp; sore. But other than that, I feel fine.
# ::tokens ["iight", "back", "with", "a", "hour", "update", ":", "My", "upper", "arm", "is", "tender", "to", "touch", "&", "amp", ";", "sore", ".", "But", "other", "than", "that", ",", "I", "feel", "fine", "."]
# ::lemmas ["iight", "back", "with", "a", "hour", "update", ":", "my", "upper", "arm", "be", "tender", "to", "touch", "&", "amp", ";", "sore", ".", "but", "other", "than", "that", ",", "i", "feel", "fine", "."]
(c8-6 / multi-sentence
      :snt1 (c8-19 / look-01
                   :ARG0 (c8-2 / i)
                   :direction (c8-20 / back)
                   :accompanier (c8-18 / update-02
                                       :duration (c8-5 / temporal-quantity
                                                       :unit (c8-17 / hour)
                                                       :quant 1)))
      :snt2 (c8-15 / and
                   :op1 (c8-4 / tender-02
                              :ARG1 (c8-8 / arm
                                          :part-of (c8-11 / i)
                                          :mod (c8-1 / upper))
                              :ARG2 (c8-7 / touch-01
                                          :ARG0 c8-11))
                   :op2 (c8-0 / amp-01
                              :ARG1 c8-8)
                   :op3 (c8-10 / sore
                               :domain c8-11))
      :snt3 (c8-3 / contrast-01
                  :ARG2 (c8-16 / feel-01
                               :ARG0 (c8-12 / i)
                               :ARG1 (c8-14 / fine-04)
                               :ARG2-of (c8-9 / except-01
                                              :ARG1 (c8-13 / that)))))

# ::snt Annoying
# ::tokens ["Annoying"]
# ::lemmas ["annoying"]
(c9-1 / thing
      :ARG0-of (c9-0 / annoy-01))

# ::snt As an attending at Grey Sloan Memorial, I need all chart, scans, and tests ran by me. I said what I said.
# ::tokens ["As", "an", "attending", "at", "Grey", "Sloan", "Memorial", ",", "I", "need", "all", "chart", ",", "scans", ",", "and", "tests", "ran", "by", "me", ".", "I", "said", "what", "I", "said", "."]
# ::lemmas ["as", "an", "attending", "at", "Grey", "Sloan", "Memorial", ",", "i", "need", "all", "chart", ",", "scan", ",", "and", "test", "run", "by", "i", ".", "i", "say", "what", "i", "say", "."]
(c10-14 / multi-sentence
        :snt1 (c10-15 / need-01
                      :ARG0 (c10-13 / i)
                      :ARG1 (c10-2 / and
                                   :op1 (c10-4 / chart)
                                   :op2 (c10-0 / scan-01)
                                   :op3 (c10-8 / test-01)
                                   :mod (c10-16 / all)
                                   :ARG1-of (c10-9 / run-01
                                                   :manner (c10-11 / by
                                                                   :op1 c10-13)))
                      :prep-as (c10-1 / attend-01
                                      :ARG0 c10-13
                                      :location (c10-3 / facility
                                                       :name (c10-10 / name
                                                                     :op1 "Grey"
                                                                     :op2 "Sloan"
                                                                     :op3 "Memorial"))))
        :snt2 (c10-12 / say-01
                      :ARG0 (c10-6 / i)
                      :ARG1 (c10-5 / thing
                                   :ARG1-of (c10-7 / say-01
                                                   :ARG0 c10-6))))

# ::snt No problem sis
# ::tokens ["No", "problem", "sis"]
# ::lemmas ["no", "problem", "sis"]
(c11-0 / say-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-3 / problem
                    :polarity -)
       :ARG2 (c11-1 / sister))

# ::snt Thats what Ive been hearing, thank God lol
# ::tokens ["That", "s", "what", "I", "ve", "been", "hearing", ",", "thank", "God", "lol"]
# ::lemmas ["that", "s", "what", "i", "ve", "be", "hear", ",", "thank", "God", "lol"]
(c12-2 / hear-01
       :ARG0 (c12-6 / i)
       :ARG1 (c12-3 / that)
       :ARG2-of (c12-1 / thank-01
                       :ARG0 c12-6
                       :ARG1 (c12-4 / person
                                    :name (c12-7 / name
                                                 :op1 "God"))
                       :ARG2-of (c12-5 / laugh-01
                                       :ARG0 c12-6
                                       :manner (c12-0 / loud))))

# ::snt Ahaha imma chill sis.
# ::tokens ["Ahaha", "imma", "chill", "sis", "."]
# ::lemmas ["Ahaha", "imma", "chill", "sis", "."]
(c13-0 / say-01
       :ARG0 (c13-6 / i)
       :ARG1 (c13-2 / chill-01
                    :ARG0 (c13-7 / you)
                    :mode imperative)
       :ARG2 (c13-4 / person
                    :ARG0-of (c13-3 / have-rel-role-91
                                    :ARG1 c13-6
                                    :ARG2 (c13-5 / sister)))
       :mod (c13-1 / ah
                   :mode expressive))

# ::snt My dad got the same one about weeks ago. Hes fine so far, no complaints just the usually soreness from an IM injection.
# ::tokens ["My", "dad", "got", "the", "same", "one", "about", "weeks", "ago", ".", "He", "s", "fine", "so", "far", ",", "no", "complaints", "just", "the", "usually", "soreness", "from", "an", "IM", "injection", "."]
# ::lemmas ["my", "dad", "get", "the", "same", "one", "about", "weeks", "ago", ".", "he", "s", "fine", "so", "far", ",", "no", "complaint", "just", "the", "usually", "soreness", "from", "an", "IM", "injection", "."]
(c14-11 / multi-sentence
        :snt1 (c14-10 / get-01
                      :ARG0 (c14-24 / person
                                    :ARG0-of (c14-18 / have-rel-role-91
                                                     :ARG1 (c14-4 / i)
                                                     :ARG2 (c14-0 / dad)))
                      :ARG1 (c14-8 / one
                                   :ARG1-of (c14-13 / same-01))
                      :time (c14-22 / before
                                    :op1 (c14-12 / now)
                                    :quant (c14-16 / about
                                                   :op1 (c14-9 / temporal-quantity
                                                               :unit (c14-7 / week)
                                                               :quant 1))))
        :snt2 (c14-17 / fine-04
                      :ARG1 (c14-3 / he)
                      :mod (c14-23 / so-far))
        :snt3 (c14-6 / complain-01
                     :ARG1 (c14-15 / sore-02
                                   :ARG1 (c14-5 / he)
                                   :ARG1-of (c14-1 / cause-01
                                                   :ARG0 (c14-14 / inject-01
                                                                 :mod (c14-20 / product
                                                                              :name (c14-2 / name
                                                                                           :op1 "IM"))))
                                   :mod (c14-19 / usual))
                     :mod (c14-21 / just)
                     :polarity -))

# ::snt I got it two days ago, no issues yet
# ::tokens ["I", "got", "it", "two", "days", "ago", ",", "no", "issues", "yet"]
# ::lemmas ["i", "get", "it", "two", "days", "ago", ",", "no", "issue", "yet"]
(c15-1 / and
       :op1 (c15-6 / get-01
                   :ARG0 (c15-7 / i)
                   :ARG1 (c15-2 / it)
                   :time (c15-8 / before
                                :op1 (c15-5 / now)
                                :quant (c15-4 / temporal-quantity
                                              :unit (c15-0 / day)
                                              :quant 2)))
       :op2 (c15-3 / issue-02
                   :time (c15-9 / yet)
                   :polarity -))

# ::snt aht aht. you stay where tf you are. ain't no food round here.
# ::tokens ["aht", "aht", ".", "you", "stay", "where", "tf", "you", "are", ".", "ai", "n't", "no", "food", "round", "here", "."]
# ::lemmas ["aht", "aht", ".", "you", "stay", "where", "tf", "you", "be", ".", "be", "not", "no", "food", "round", "here", "."]
(c17-6 / multi-sentence
       :snt1 (c17-1 / ah
                    :mode expressive)
       :snt2 (c17-0 / stay-01
                    :ARG1 (c17-7 / you)
                    :ARG3 (c17-5 / be-located-at-91
                                 :ARG1 c17-7
                                 :ARG2 (c17-8 / amr-unknown)))
       :snt3 (c17-2 / food
                    :location (c17-4 / round
                                     :op1 (c17-3 / here))
                    :polarity -))

# ::snt Im coming straight to you first.
# ::tokens ["I", "m", "coming", "straight", "to", "you", "first", "."]
# ::lemmas ["i", "m", "come", "straight", "to", "you", "first", "."]
(c18-1 / come-01
       :ARG1 (c18-3 / i)
       :ARG4 (c18-4 / you)
       :ARG1-of (c18-0 / straight-04)
       :ord (c18-2 / ordinal-entity
                   :value 1))

# ::snt can't wait til you morph
# ::tokens ["ca", "n't", "wait", "til", "you", "morph"]
# ::lemmas ["can", "not", "wait", "til", "you", "morph"]
(c19-0 / wait-01
       :ARG1 (c19-1 / i)
       :ARG2 (c19-2 / morph-01
                    :ARG1 (c19-3 / you))
       :polarity -)

# ::snt Youre so irritating
# ::tokens ["You", "re", "so", "irritating"]
# ::lemmas ["you", "re", "so", "irritate"]
(c20-1 / irritate-01
       :ARG0 (c20-2 / you)
       :degree (c20-0 / so))

# ::snt Yeah, February st.
# ::tokens ["Yeah", ",", "February", "st", "."]
# ::lemmas ["yeah", ",", "February", "st", "."]
(c22-0 / date-entity
       :mod (c22-1 / yeah)
       :month 2
       :day 29)

# ::snt You going back for your second dose ?
# ::tokens ["You", "going", "back", "for", "your", "second", "dose", "?"]
# ::lemmas ["you", "go", "back", "for", "your", "second", "dose", "?"]
(c23-3 / go-back-19
       :polarity (c23-1 / amr-unknown)
       :ARG1 (c23-4 / you)
       :purpose (c23-0 / dose-01
                       :ARG1 c23-4
                       :ord (c23-2 / ordinal-entity
                                   :value 2)))

# ::snt Awww thats good, youll be fine sis. Just relax &amp; pray, God got you.
# ::tokens ["Awww", "that", "s", "good", ",", "you", "ll", "be", "fine", "sis", ".", "Just", "relax", "&", "amp", ";", "pray", ",", "God", "got", "you", "."]
# ::lemmas ["Awww", "that", "s", "good", ",", "you", "ll", "be", "fine", "sis", ".", "Just", "relax", "&", "amp", ";", "pray", ",", "God", "get", "you", "."]
(c24-13 / multi-sentence
        :snt1 (c24-10 / good-02
                      :ARG1 (c24-7 / that)
                      :mod (c24-2 / awww
                                  :mode expressive))
        :snt2 (c24-5 / fine-04
                     :ARG1 (c24-15 / you)
                     :ARG1-of (c24-0 / say-01
                                     :ARG2 (c24-11 / sister)))
        :snt3 (c24-16 / and
                      :op1 (c24-8 / relax-01
                                  :ARG0 (c24-4 / you)
                                  :mod (c24-9 / just)
                                  :mode imperative)
                      :op2 (c24-1 / amp)
                      :op4 (c24-12 / pray-01
                                   :ARG0 c24-4
                                   :ARG1 (c24-3 / get-02
                                                :ARG0 (c24-6 / person
                                                             :name (c24-14 / name
                                                                           :op1 "God"))
                                                :ARG1 c24-4)
                                   :mode imperative)))

# ::snt Im back yall, small update. So I got the Moderna vaccine around pm and around like :30 pm I started feeling a little soreness at the injection site. That is completely normal when getting a vaccine, especially when it is intramuscular. Other than that, Im straight so far.
# ::tokens ["I", "m", "back", "y", "all", ",", "small", "update", ".", "So", "I", "got", "the", "Moderna", "vaccine", "around", "pm", "and", "around", "like", ":", "30", "pm", "I", "started", "feeling", "a", "little", "soreness", "at", "the", "injection", "site", ".", "That", "is", "completely", "normal", "when", "getting", "a", "vaccine", ",", "especially", "when", "it", "is", "intramuscular", ".", "Other", "than", "that", ",", "I", "m", "straight", "so", "far", "."]
# ::lemmas ["i", "m", "back", "you", "all", ",", "small", "update", ".", "so", "i", "get", "the", "Moderna", "vaccine", "around", "pm", "and", "around", "like", ":", "30", "pm", "i", "start", "feel", "a", "little", "soreness", "at", "the", "injection", "site", ".", "that", "be", "completely", "normal", "when", "get", "a", "vaccine", ",", "especially", "when", "it", "be", "intramuscular", ".", "other", "than", "that", ",", "i", "m", "straight", "so", "far", "."]
(c25-11 / multi-sentence
        :snt1 (c25-30 / be-located-at-91
                      :ARG1 (c25-27 / update-02
                                    :mod (c25-16 / small))
                      :ARG2 (c25-23 / back
                                    :op1 (c25-21 / you
                                                 :mod (c25-24 / all))))
        :snt2 (c25-14 / and
                      :op1 (c25-10 / get-01
                                   :ARG0 (c25-3 / i)
                                   :ARG1 (c25-8 / vaccine
                                                :name (c25-12 / name
                                                              :op1 "Moderna"))
                                   :time (c25-1 / around
                                                :op1 (c25-0 / date-entity
                                                            :time "19:00")))
                      :op2 (c25-31 / start-01
                                   :ARG0 c25-3
                                   :ARG1 (c25-25 / feel-01
                                                 :ARG0 c25-3
                                                 :ARG1 (c25-18 / soreness
                                                               :quant (c25-29 / little))
                                                 :location (c25-4 / site
                                                                  :location-of (c25-17 / inject-01)))
                                   :time (c25-32 / around
                                                 :op1 (c25-20 / date-entity
                                                              :time "19:00"))))
        :snt3 (c25-2 / normal-02
                     :ARG1 (c25-9 / that)
                     :time (c25-22 / get-01
                                   :ARG0 (c25-19 / i)
                                   :ARG1 (c25-26 / vaccine))
                     :ARG1-of (c25-6 / complete-02)
                     :ARG2-of (c25-15 / except-01
                                      :ARG1 (c25-7 / that))
                     :time (c25-5 / so-far))
        :snt4 (c25-28 / straight-04
                      :ARG1 c25-19
                      :ARG2-of c25-15
                      :ARG1 (c25-13 / that)))

# ::snt Thank you hun.
# ::tokens ["Thank", "you", "hun", "."]
# ::lemmas ["thank", "you", "hun", "."]
(c26-0 / say-01
       :ARG0 (c26-1 / i)
       :ARG1 (c26-3 / thank-01
                    :ARG0 c26-1
                    :ARG1 (c26-2 / hun
                                 :ARG2-of c26-0)))

# ::snt Annoying
# ::tokens ["Annoying"]
# ::lemmas ["annoying"]
(c28-1 / thing
       :ARG0-of (c28-0 / annoy-01))

# ::snt It was actually. Quick, barely felt it because of how small the needle was.
# ::tokens ["It", "was", "actually", ".", "Quick", ",", "barely", "felt", "it", "because", "of", "how", "small", "the", "needle", "was", "."]
# ::lemmas ["it", "be", "actually", ".", "Quick", ",", "barely", "feel", "it", "because", "of", "how", "small", "the", "needle", "be", "."]
(c29-9 / multi-sentence
       :snt1 (c29-8 / it
                    :ARG1-of (c29-1 / actual-02))
       :snt2 (c29-4 / quick-02
                    :ARG1 (c29-2 / feel-01
                                 :ARG1 (c29-5 / it)
                                 :degree (c29-6 / barely)
                                 :ARG1-of (c29-3 / cause-01
                                                 :ARG0 (c29-0 / small
                                                              :degree (c29-7 / so)
                                                              :domain (c29-10 / needle))))))

# ::snt praying that it does what its supposed to do and that your body has a good reaction to it sis
# ::tokens ["praying", "that", "it", "does", "what", "its", "supposed", "to", "do", "and", "that", "your", "body", "has", "a", "good", "reaction", "to", "it", "sis"]
# ::lemmas ["pray", "that", "it", "do", "what", "its", "suppose", "to", "do", "and", "that", "your", "body", "have", "a", "good", "reaction", "to", "it", "sis"]
(c30-0 / say-01
       :ARG0 (c30-13 / i)
       :ARG1 (c30-2 / and
                    :op1 (c30-1 / do-02
                                :ARG0 (c30-4 / it)
                                :ARG1 (c30-7 / thing
                                             :ARG1-of (c30-3 / do-02
                                                             :ARG0 c30-4
                                                             :ARG2-of (c30-12 / suppose-02))))
                    :op2 (c30-8 / react-01
                                :ARG0 (c30-11 / body
                                              :poss (c30-14 / you))
                                :ARG1 c30-4
                                :ARG1-of (c30-9 / good-02)))
       :ARG2 (c30-10 / person
                     :ARG0-of (c30-5 / have-rel-role-91
                                     :ARG2 (c30-6 / sister))))

# ::snt We about to see Gech in Captain Marvel
# ::tokens ["We", "about", "to", "see", "Gech", "in", "Captain", "Marvel"]
# ::lemmas ["we", "about", "to", "see", "Gech", "in", "Captain", "Marvel"]
(c31-0 / see-01
       :ARG0 (c31-2 / we)
       :ARG1 (c31-4 / person
                    :name (c31-5 / name
                                 :op1 "Gech"))
       :time (c31-1 / about-to)
       :prep-in (c31-6 / work-of-art
                       :name (c31-3 / name
                                    :op1 "Captain"
                                    :op2 "Marvel")))

# ::snt Much appreciated Gech
# ::tokens ["Much", "appreciated", "Gech"]
# ::lemmas ["much", "appreciated", "Gech"]
(c33-2 / appreciate-02
       :ARG1 (c33-1 / person
                    :name (c33-3 / name
                                 :op1 "Gech"))
       :degree (c33-0 / much))

# ::snt Hahahah was the process simple?
# ::tokens ["Hahahah", "was", "the", "process", "simple", "?"]
# ::lemmas ["Hahahah", "be", "the", "process", "simple", "?"]
(c34-0 / simple-02
       :polarity (c34-2 / amr-unknown)
       :ARG1 (c34-1 / process-02)
       :mod (c34-3 / haha
                   :mode expressive))

# ::snt Brooo
# ::tokens ["Brooo"]
# ::lemmas ["Brooo"]
(c35-0 / break-Brooo)

# ::snt You might be at Avengers Headquarters by next week
# ::tokens ["You", "might", "be", "at", "Avengers", "Headquarters", "by", "next", "week"]
# ::lemmas ["you", "might", "be", "at", "Avengers", "Headquarters", "by", "next", "week"]
(c36-5 / possible-01
       :ARG1 (c36-7 / you
                    :location (c36-1 / headquarters
                                     :poss (c36-2 / organization
                                                  :name (c36-6 / name
                                                               :op1 "Avengers")))
                    :time (c36-4 / by
                                 :op1 (c36-0 / week
                                             :mod (c36-3 / next)))))
