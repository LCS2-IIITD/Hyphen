# ::snt Imagine believing Chinese Psyops!
# ::tokens ["Imagine", "believing", "Chinese", "Psyops", "!"]
# ::lemmas ["imagine", "believe", "Chinese", "Psyops", "!"]
(c1-3 / imagine-01
      :ARG0 (c1-5 / you)
      :ARG1 (c1-2 / believe-01
                  :ARG0 c1-5
                  :ARG1 (c1-1 / psyops
                              :mod (c1-0 / country
                                         :name (c1-4 / name
                                                     :op1 "China"))))
      :mode imperative)

# ::snt I grew up in the era where the government told us to build a nuclear bomb shelter under the stairs using and old mattress and telephone directories.... Crazy but true!!
# ::tokens ["I", "grew", "up", "in", "the", "era", "where", "the", "government", "told", "us", "to", "build", "a", "nuclear", "bomb", "shelter", "under", "the", "stairs", "using", "and", "old", "mattress", "and", "telephone", "directories", "....", "Crazy", "but", "true", "!", "!"]
# ::lemmas ["i", "grow", "up", "in", "the", "era", "where", "the", "government", "tell", "we", "to", "build", "a", "nuclear", "bomb", "shelter", "under", "the", "stair", "use", "and", "old", "mattress", "and", "telephone", "directory", "....", "crazy", "but", "true", "!", "!"]
(c2-11 / multi-sentence
       :snt1 (c2-10 / grow-up-04
                    :ARG1 (c2-4 / i)
                    :time (c2-14 / era
                                 :time-of (c2-9 / tell-01
                                                :ARG0 (c2-16 / government-organization
                                                             :ARG0-of (c2-2 / govern-01))
                                                :ARG1 (c2-21 / build-01
                                                             :ARG0 (c2-6 / we)
                                                             :ARG1 (c2-15 / shelter
                                                                          :mod (c2-17 / bomb
                                                                                      :mod (c2-12 / nucleus))
                                                                          :location (c2-20 / under
                                                                                           :op1 (c2-22 / stair)))
                                                             :ARG2 c2-6)
                                                :ARG2 c2-6)
                                 :ARG2 (c2-3 / use-01
                                             :ARG0 c2-6
                                             :ARG1 (c2-18 / and
                                                          :op1 (c2-19 / mattress
                                                                      :mod (c2-8 / old))
                                                          :op2 (c2-0 / direct-01
                                                                     :ARG2 (c2-7 / telephone))))))
       :snt2 (c2-5 / contrast-01
                   :ARG1 (c2-1 / crazy-03)
                   :ARG2 (c2-13 / true-01)))

# ::snt When you know the lie about germ theory you can never unknow. People getting sick does not make a virus. Just that their body is too toxic. Giving more toxins can result in death.
# ::tokens ["When", "you", "know", "the", "lie", "about", "germ", "theory", "you", "can", "never", "unknow", ".", "People", "getting", "sick", "does", "not", "make", "a", "virus", ".", "Just", "that", "their", "body", "is", "too", "toxic", ".", "Giving", "more", "toxins", "can", "result", "in", "death", "."]
# ::lemmas ["when", "you", "know", "the", "lie", "about", "germ", "theory", "you", "can", "never", "unknow", ".", "people", "get", "sick", "do", "not", "make", "a", "virus", ".", "just", "that", "their", "body", "be", "too", "toxic", ".", "give", "more", "toxin", "can", "result", "in", "death", "."]
(c3-6 / multi-sentence
      :snt1 (c3-22 / possible-01
                   :ARG1 (c3-23 / know-01
                                :ARG0 (c3-13 / you)
                                :ARG1 (c3-19 / lie-08
                                             :ARG3 (c3-3 / theory
                                                         :topic (c3-5 / germ)))
                                :time (c3-8 / ever))
                   :polarity -)
      :snt2 (c3-16 / make-01
                   :ARG0 (c3-9 / sick-05
                               :ARG1 (c3-18 / person))
                   :ARG1 (c3-2 / virus)
                   :polarity -)
      :snt3 (c3-17 / have-degree-91
                   :ARG1 (c3-20 / body
                                :poss (c3-1 / they))
                   :ARG2 (c3-7 / toxic)
                   :ARG3 (c3-11 / too)
                   :mod (c3-21 / just))
      :snt4 (c3-10 / possible-01
                   :ARG1 (c3-4 / result-01
                               :ARG1 (c3-14 / give-01
                                            :ARG1 (c3-15 / toxin
                                                         :quant (c3-12 / more)))
                               :ARG2 (c3-0 / die-01))))

# ::snt To clarify: not non - existent. It exists. Has for decades. Simply non lethal to % of those under who contract it.
# ::tokens ["To", "clarify", ":", "not", "non", "-", "existent", ".", "It", "exists", ".", "Has", "for", "decades", ".", "Simply", "non", "lethal", "to", "%", "of", "those", "under", "who", "contract", "it", "."]
# ::lemmas ["to", "clarify", ":", "not", "non", "-", "existent", ".", "it", "exist", ".", "have", "for", "decades", ".", "simply", "non", "lethal", "to", "%", "of", "those", "under", "who", "contract", "it", "."]
(c5-13 / multi-sentence
       :snt1 (c5-14 / exist-01
                    :ARG1 (c5-12 / it)
                    :purpose (c5-3 / clarify-10)
                    :polarity -)
       :snt2 (c5-6 / exist-01
                   :ARG1 (c5-5 / it)
                   :duration (c5-4 / multiple
                                   :op1 (c5-9 / temporal-quantity
                                              :unit (c5-0 / decade)
                                              :quant 1)))
       :snt3 (c5-10 / lethal
                    :mod (c5-1 / simple)
                    :beneficiary (c5-11 / percentage
                                        :ARG1-of (c5-7 / include-91
                                                       :ARG2 (c5-8 / person
                                                                   :ARG0-of (c5-2 / contract-02
                                                                                  :ARG1 c5-5))))
                    :polarity -))

# ::snt The first wave came from vaccines second from masks.
# ::tokens ["The", "first", "wave", "came", "from", "vaccines", "second", "from", "masks", "."]
# ::lemmas ["the", "first", "wave", "come", "from", "vaccine", "second", "from", "mask", "."]
(c6-0 / come-03
      :ARG1 (c6-1 / wave-04
                  :ord (c6-4 / ordinal-entity
                             :value 1))
      :ARG2 (c6-3 / vaccine)
      :ARG3 (c6-6 / wave-04
                  :ord (c6-2 / ordinal-entity
                             :value 2))
      :ARG4 (c6-5 / mask))

# ::snt Very valid point.
# ::tokens ["Very", "valid", "point", "."]
# ::lemmas ["very", "valid", "point", "."]
(c7-1 / point-04
      :ARG1-of (c7-0 / valid-02
                     :degree (c7-2 / very)))
