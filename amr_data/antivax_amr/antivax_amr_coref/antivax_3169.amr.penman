# ::snt Think you answered your own question there.
# ::tokens ["Think", "you", "answered", "your", "own", "question", "there", "."]
# ::lemmas ["think", "you", "answer", "your", "own", "question", "there", "."]
(c1-3 / think-01
      :ARG1 (c1-0 / answer-01
                  :ARG0 (c1-4 / you)
                  :ARG1 (c1-1 / question-01
                              :ARG0 c1-4)
                  :location (c1-2 / there)))

# ::snt Big mistake on their part. Anyone who listened to them and suffered as a result may sue.Unless they had a caveat when they spoke which I doubt.
# ::tokens ["Big", "mistake", "on", "their", "part", ".", "Anyone", "who", "listened", "to", "them", "and", "suffered", "as", "a", "result", "may", "sue", ".", "Unless", "they", "had", "a", "caveat", "when", "they", "spoke", "which", "I", "doubt", "."]
# ::lemmas ["big", "mistake", "on", "their", "part", ".", "anyone", "who", "listen", "to", "they", "and", "suffer", "as", "a", "result", "may", "sue", ".", "unless", "they", "have", "a", "caveat", "when", "they", "speak", "which", "i", "doubt", "."]
(c2-15 / multi-sentence
       :snt1 (c2-3 / mistake-02
                   :ARG0 (c2-9 / they)
                   :mod (c2-12 / big))
       :snt2 (c2-14 / possible-01
                    :ARG1 (c2-0 / sue-02
                                :ARG0 (c2-2 / anyone
                                            :ARG0-of (c2-11 / listen-01
                                                            :ARG1 (c2-5 / they))
                                            :ARG0-of (c2-13 / suffer-01
                                                            :ARG2-of (c2-10 / result-01
                                                                            :ARG1 c2-11))))
                    :condition (c2-7 / have-03
                                     :ARG0 c2-5
                                     :ARG1 (c2-4 / caveat)
                                     :time (c2-8 / speak-01
                                                 :ARG0 c2-5)
                                     :ARG1-of (c2-1 / doubt-01
                                                    :ARG0 (c2-6 / i))
                                     :polarity -)))

# ::snt I thought so.The same as the celebs who are pro vacine.
# ::tokens ["I", "thought", "so", ".", "The", "same", "as", "the", "celebs", "who", "are", "pro", "vacine", "."]
# ::lemmas ["i", "think", "so", ".", "the", "same", "as", "the", "celebs", "who", "be", "pro", "vacine", "."]
(c3-7 / multi-sentence
      :snt1 (c3-4 / think-01
                  :ARG0 (c3-6 / i)
                  :ARG1 (c3-0 / so))
      :snt2 (c3-5 / same-01
                  :ARG2 (c3-2 / celebrity
                              :ARG0-of (c3-1 / favor-01
                                             :ARG1 (c3-3 / vacine-01)))))

# ::snt Britain is without Talent..You can't sing and tell a joke and be recognised for possessing the grey matter too.
# ::tokens ["Britain", "is", "without", "Talent", "..", "You", "ca", "n't", "sing", "and", "tell", "a", "joke", "and", "be", "recognised", "for", "possessing", "the", "grey", "matter", "too", "."]
# ::lemmas ["Britain", "be", "without", "talent", "..", "you", "can", "not", "sing", "and", "tell", "a", "joke", "and", "be", "recognise", "for", "possess", "the", "grey", "matter", "too", "."]
(c4-12 / multi-sentence
       :snt1 (c4-5 / have-03
                   :ARG0 (c4-2 / country
                               :name (c4-13 / name
                                            :op1 "Britain"))
                   :ARG1 (c4-7 / talent)
                   :polarity -)
       :snt2 (c4-11 / possible-01
                    :ARG1 (c4-1 / and
                                :op1 (c4-0 / sing-01
                                           :ARG0 (c4-14 / you))
                                :op2 (c4-10 / joke-01
                                            :ARG0 c4-14)
                                :op3 (c4-8 / recognize-01
                                           :ARG1 c4-14
                                           :ARG2 (c4-6 / possess-01
                                                       :ARG0 c4-14
                                                       :ARG1 (c4-3 / matter
                                                                   :ARG1-of (c4-9 / gray-02))
                                                       :mod (c4-4 / too))))
                    :polarity -))

# ::snt My qualifications are, Common-sense.
# ::tokens ["My", "qualifications", "are", ",", "Common", "-", "sense", "."]
# ::lemmas ["my", "qualification", "be", ",", "Common", "-", "sense", "."]
(c5-0 / qualify-02
      :ARG1 (c5-2 / i)
      :mod (c5-3 / sense
                 :mod (c5-1 / common)))

# ::snt They get adrenochrome for appearing. Lenny looks like he needs a hit soon!
# ::tokens ["They", "get", "adrenochrome", "for", "appearing", ".", "Lenny", "looks", "like", "he", "needs", "a", "hit", "soon", "!"]
# ::lemmas ["they", "get", "adrenochrome", "for", "appear", ".", "Lenny", "look", "like", "he", "need", "a", "hit", "soon", "!"]
(c6-9 / multi-sentence
      :snt1 (c6-7 / get-01
                  :ARG0 (c6-4 / they)
                  :ARG1 (c6-1 / adrenochrome)
                  :ARG1-of (c6-2 / cause-01
                                 :ARG0 (c6-11 / appear-01
                                              :ARG1 c6-4)))
      :snt2 (c6-6 / look-02
                  :ARG0 (c6-8 / person
                              :name (c6-10 / name
                                           :op1 "Lenny"))
                  :ARG1 (c6-5 / need-01
                              :ARG0 c6-8
                              :ARG1 (c6-3 / hit-01
                                          :ARG1 c6-8)
                              :time (c6-0 / soon))))

# ::snt Equally, what are your qualifications to be anti vacine?
# ::tokens ["Equally", ",", "what", "are", "your", "qualifications", "to", "be", "anti", "vacine", "?"]
# ::lemmas ["equally", ",", "what", "be", "your", "qualification", "to", "be", "anti", "vacine", "?"]
(c7-1 / qualify-02
      :ARG1 (c7-4 / you)
      :ARG2 (c7-3 / oppose-01
                  :ARG0 c7-4
                  :ARG1 (c7-2 / vacate-01))
      :ARG1-of (c7-5 / equal-01)
      :ARG3 (c7-0 / amr-unknown))

# ::snt They trust the people that have the knowledge
# ::tokens ["They", "trust", "the", "people", "that", "have", "the", "knowledge"]
# ::lemmas ["they", "trust", "the", "people", "that", "have", "the", "knowledge"]
(c8-3 / trust-01
      :ARG0 (c8-1 / they)
      :ARG2 (c8-2 / person
                  :ARG0-of (c8-0 / know-01)))

# ::snt They think we believe every word that pours from their lips because they are celebritiesYes I should imagine money is involved, or perhaps the free publicity is enough!
# ::tokens ["They", "think", "we", "believe", "every", "word", "that", "pours", "from", "their", "lips", "because", "they", "are", "celebritiesYes", "I", "should", "imagine", "money", "is", "involved", ",", "or", "perhaps", "the", "free", "publicity", "is", "enough", "!"]
# ::lemmas ["they", "think", "we", "believe", "every", "word", "that", "pour", "from", "their", "lip", "because", "they", "be", "celebritiesyes", "i", "should", "imagine", "money", "be", "involve", ",", "or", "perhaps", "the", "free", "publicity", "be", "enough", "!"]
(c9-8 / multi-sentence
      :snt1 (c9-6 / think-01
                  :ARG0 (c9-4 / they)
                  :ARG1 (c9-21 / believe-01
                               :ARG0 (c9-3 / we)
                               :ARG1 (c9-10 / word
                                            :mod (c9-11 / every)
                                            :ARG1-of (c9-22 / pour-01
                                                            :ARG3 (c9-20 / lips
                                                                         :part-of (c9-9 / they))
                                                            :ARG1-of (c9-2 / cause-01
                                                                           :ARG0 (c9-0 / celebrity
                                                                                       :domain c9-9))))))
      :snt2 (c9-5 / or
                  :op1 (c9-7 / recommend-01
                             :ARG1 (c9-1 / imagine-01
                                         :ARG0 (c9-13 / i)
                                         :ARG1 (c9-14 / involve-01
                                                      :ARG1 (c9-16 / money))))
                  :op2 (c9-19 / possible-01
                              :ARG1 (c9-17 / have-quant-91
                                           :ARG1 (c9-12 / publicity
                                                        :ARG1-of (c9-15 / free-03))
                                           :ARG3 (c9-18 / enough)))))

# ::snt Allegiance and money walk hand in hand.
# ::tokens ["Allegiance", "and", "money", "walk", "hand", "in", "hand", "."]
# ::lemmas ["allegiance", "and", "money", "walk", "hand", "in", "hand", "."]
(c10-1 / walk-01
       :ARG0 (c10-0 / and
                    :op1 (c10-4 / affirmative-action)
                    :op2 (c10-3 / money))
       :manner (c10-2 / hand-in-hand))

# ::snt You have a suspicious mind, and quite rightly so!
# ::tokens ["You", "have", "a", "suspicious", "mind", ",", "and", "quite", "rightly", "so", "!"]
# ::lemmas ["you", "have", "a", "suspicious", "mind", ",", "and", "quite", "rightly", "so", "!"]
(c11-2 / have-03
       :ARG0 (c11-5 / you)
       :ARG1 (c11-4 / mind
                    :ARG0-of (c11-0 / suspicious-02))
       :ARG1-of (c11-3 / right-02
                       :degree (c11-1 / quite)))

# ::snt If you dont like someone trying to advice you then why are you doing the same on opposite direction. Whats so wrong to listen or not and keep your opinions to yourself, after all youre not an expert either
# ::tokens ["If", "you", "do", "nt", "like", "someone", "trying", "to", "advice", "you", "then", "why", "are", "you", "doing", "the", "same", "on", "opposite", "direction", ".", "What", "s", "so", "wrong", "to", "listen", "or", "not", "and", "keep", "your", "opinions", "to", "yourself", ",", "after", "all", "you", "re", "not", "an", "expert", "either"]
# ::lemmas ["if", "you", "do", "not", "like", "someone", "try", "to", "advice", "you", "then", "why", "be", "you", "do", "the", "same", "on", "opposite", "direction", ".", "what", "s", "so", "wrong", "to", "listen", "or", "not", "and", "keep", "your", "opinion", "to", "yourself", ",", "after", "all", "you", "re", "not", "an", "expert", "either"]
(c12-8 / multi-sentence
       :snt1 (c12-20 / have-condition-91
                     :ARG1 (c12-3 / cause-01
                                  :ARG0 (c12-19 / amr-unknown)
                                  :ARG1 (c12-0 / do-02
                                               :ARG0 (c12-17 / you)
                                               :ARG1 (c12-7 / thing
                                                            :ARG1-of (c12-12 / same-01))
                                               :ARG2 (c12-16 / direction
                                                             :ARG1-of (c12-6 / opposite-01))))
                     :ARG2 (c12-13 / dislike-01
                                   :ARG0 c12-17
                                   :ARG1 (c12-5 / try-01
                                                :ARG0 (c12-24 / someone)
                                                :ARG1 (c12-9 / thing
                                                             :ARG2-of (c12-10 / advise-01
                                                                              :ARG0 c12-24
                                                                              :ARG1 c12-17)))))
       :snt2 (c12-4 / wrong-02
                    :ARG1 (c12-1 / and
                                 :op1 (c12-23 / listen-01
                                              :ARG0 (c12-18 / you)
                                              :polarity -)
                                 :op2 (c12-25 / keep-02
                                              :ARG0 c12-18
                                              :ARG1 (c12-14 / thing
                                                            :ARG1-of (c12-21 / opine-01
                                                                             :ARG0 c12-18))
                                              :polarity -))
                    :degree (c12-15 / so))
       :snt3 (c12-11 / expert-01
                     :ARG1 (c12-2 / you)
                     :mod (c12-22 / either)
                     :mod (c12-26 / after-all)
                     :polarity -))

# ::snt One it's killed many already dying within their terms of days of jab.
# ::tokens ["One", "it", "'s", "killed", "many", "already", "dying", "within", "their", "terms", "of", "days", "of", "jab", "."]
# ::lemmas ["One", "it", "be", "kill", "many", "already", "die", "within", "their", "term", "of", "days", "of", "jab", "."]
(c13-10 / kill-01
        :ARG0 (c13-8 / it)
        :ARG1 (c13-6 / person
                     :quant (c13-9 / many)
                     :ARG1-of (c13-0 / die-01
                                     :time (c13-1 / already)
                                     :manner (c13-5 / term-01
                                                    :ARG0 c13-6
                                                    :ARG1 (c13-7 / jab-01)
                                                    :duration (c13-2 / multiple
                                                                     :op1 (c13-3 / temporal-quantity
                                                                                 :unit (c13-4 / day)
                                                                                 :quant 1))))))

# ::snt Can our families sue their arses if one of us dies?
# ::tokens ["Can", "our", "families", "sue", "their", "arses", "if", "one", "of", "us", "dies", "?"]
# ::lemmas ["can", "our", "family", "sue", "their", "arsis", "if", "one", "of", "we", "die", "?"]
(c14-7 / possible-01
       :ARG1 (c14-0 / sue-02
                    :ARG0 (c14-3 / family
                                 :poss (c14-5 / we))
                    :ARG1 (c14-2 / ass
                                 :poss c14-3)
                    :condition (c14-1 / die-01
                                      :ARG1 (c14-6 / person
                                                   :ARG1-of (c14-4 / include-91
                                                                   :ARG2 c14-5)
                                                   :quant 1)))
       :polarity (c14-8 / amr-unknown))

# ::snt All lefty types?
# ::tokens ["All", "lefty", "types", "?"]
# ::lemmas ["all", "lefty", "type", "?"]
(c15-2 / type
       :polarity (c15-1 / amr-unknown)
       :mod (c15-3 / all)
       :mod (c15-0 / lefty))

# ::snt Well said.
# ::tokens ["Well", "said", "."]
# ::lemmas ["well", "say", "."]
(c16-0 / say-01
       :manner (c16-1 / good-02))
