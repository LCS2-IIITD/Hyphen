# ::snt i got Pfizer back in Jan and just felt feverish/body aches but it all went away after going to bed, nothing else since then! hope yours goes well &lt;3
# ::tokens ["i", "got", "Pfizer", "back", "in", "Jan", "and", "just", "felt", "feverish", "/", "body", "aches", "but", "it", "all", "went", "away", "after", "going", "to", "bed", ",", "nothing", "else", "since", "then", "!", "hope", "yours", "goes", "well", "&", "lt;3"]
# ::lemmas ["i", "get", "Pfizer", "back", "in", "Jan", "and", "just", "feel", "feverish", "/", "body", "ache", "but", "it", "all", "go", "away", "after", "go", "to", "bed", ",", "nothing", "else", "since", "then", "!", "hope", "yours", "go", "well", "&", "lt;3"]
(c1-11 / multi-sentence
       :snt1 (c1-6 / contrast-01
                   :ARG1 (c1-23 / and
                                :op1 (c1-10 / get-01
                                            :ARG0 (c1-5 / i)
                                            :ARG1 (c1-0 / company
                                                        :name (c1-12 / name
                                                                     :op1 "Pfizer"))
                                            :time (c1-1 / date-entity
                                                        :month 1)
                                            :mod (c1-26 / back))
                                :op2 (c1-24 / feel-01
                                            :ARG0 c1-5
                                            :ARG1 (c1-14 / slash
                                                         :op1 (c1-17 / feverish)
                                                         :op2 (c1-13 / ache-01
                                                                     :ARG1 (c1-22 / body)))
                                            :mod (c1-27 / just)))
                   :ARG2 (c1-20 / go-01
                                :ARG1 (c1-16 / it
                                             :mod (c1-2 / all))
                                :ARG4 (c1-28 / away)
                                :time (c1-4 / after
                                            :op1 (c1-3 / go-02
                                                       :ARG0 c1-5
                                                       :ARG4 (c1-15 / bed-02
                                                                    :ARG0 c1-5)))))
       :snt2 (c1-25 / hope-01
                    :ARG0 c1-5
                    :ARG1 (c1-18 / go-06
                                 :ARG0 (c1-19 / and
                                              :op1 (c1-9 / thing
                                                         :poss (c1-21 / you))
                                              :op2 (c1-8 / thing
                                                         :poss c1-21))
                                 :ARG1-of (c1-7 / well-09))))

# ::snt thank u i hope everything goes away quick for u
# ::tokens ["thank", "u", "i", "hope", "everything", "goes", "away", "quick", "for", "u"]
# ::lemmas ["thank", "u", "i", "hope", "everything", "go", "away", "quick", "for", "u"]
(c2-7 / multi-sentence
      :snt1 (c2-4 / thank-01
                  :ARG0 (c2-6 / i)
                  :ARG1 (c2-8 / you))
      :snt2 (c2-2 / hope-01
                  :ARG0 (c2-3 / i)
                  :ARG1 (c2-5 / go-01
                              :ARG1 (c2-10 / everything)
                              :direction (c2-0 / away)
                              :ARG1-of (c2-1 / quick-02)
                              :beneficiary (c2-9 / you))))

# ::snt omg no im getting mine tuesday &amp; im so not ready
# ::tokens ["omg", "no", "i", "m", "getting", "mine", "tuesday", "&", "amp", ";", "i", "m", "so", "not", "ready"]
# ::lemmas ["omg", "no", "i", "m", "get", "mine", "tuesday", "&", "amp", ";", "i", "m", "so", "not", "ready"]
(c3-3 / cause-01
      :ARG0 (c3-7 / ready-02
                  :ARG1 (c3-9 / i)
                  :degree (c3-0 / so)
                  :polarity -)
      :ARG1 (c3-2 / and
                  :op1 (c3-8 / get-01
                             :ARG0 c3-9
                             :ARG1 (c3-6 / thing
                                         :poss c3-9)
                             :time (c3-1 / date-entity
                                         :weekday (c3-4 / tuesday)))
                  :op2 (c3-10 / get-01
                              :ARG0 c3-9
                              :ARG1 c3-6))
      :mod (c3-5 / oh-my-god
                 :mode expressive))
