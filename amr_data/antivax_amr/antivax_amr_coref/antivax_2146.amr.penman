# ::snt Thanks! Me too!
# ::tokens ["Thanks", "!", "Me", "too", "!"]
# ::lemmas ["thank", "!", "i", "too", "!"]
(c1-4 / multi-sentence
      :snt1 (c1-2 / thank-01
                  :ARG0 (c1-3 / i)
                  :ARG1 (c1-5 / you)
                  :mode expressive)
      :snt2 (c1-1 / i
                  :mod (c1-0 / too)))

# ::snt Thanks! I'm so glad you'll be eligible next week!
# ::tokens ["Thanks", "!", "I", "'m", "so", "glad", "you", "'ll", "be", "eligible", "next", "week", "!"]
# ::lemmas ["thank", "!", "i", "be", "so", "glad", "you", "'ll", "be", "eligible", "next", "week", "!"]
(c2-6 / multi-sentence
      :snt1 (c2-3 / thank-01
                  :ARG0 (c2-5 / i)
                  :ARG1 (c2-8 / you)
                  :mode expressive)
      :snt2 (c2-4 / glad-02
                  :ARG0 (c2-1 / qualify-02
                              :ARG1 (c2-9 / you)
                              :time (c2-2 / week
                                          :mod (c2-7 / next)))
                  :ARG1 c2-5
                  :degree (c2-0 / so)))

# ::snt Yas!!!! So happy for you friend!! I can start trying to get mine starting next week!
# ::tokens ["Yas", "!", "!", "!", "!", "So", "happy", "for", "you", "friend", "!", "!", "I", "can", "start", "trying", "to", "get", "mine", "starting", "next", "week", "!"]
# ::lemmas ["Yas", "!", "!", "!", "!", "so", "happy", "for", "you", "friend", "!", "!", "i", "can", "start", "try", "to", "get", "mine", "start", "next", "week", "!"]
(c3-12 / multi-sentence
       :snt1 (c3-14 / ya)
       :snt2 (c3-6 / happy-01
                   :ARG1 (c3-11 / person
                                :ARG0-of (c3-10 / have-rel-role-91
                                                :ARG2 (c3-2 / friend)))
                   :degree (c3-0 / so)
                   :mode expressive)
       :snt3 (c3-7 / possible-01
                   :ARG1 (c3-1 / start-01
                               :ARG0 (c3-3 / i)
                               :ARG1 (c3-8 / try-01
                                           :ARG0 c3-3
                                           :ARG1 (c3-9 / get-01
                                                       :ARG0 c3-3
                                                       :ARG1 (c3-5 / thing
                                                                   :poss c3-3)))
                               :ARG1 c3-1
                               :time (c3-4 / week
                                           :mod (c3-13 / next)))))
