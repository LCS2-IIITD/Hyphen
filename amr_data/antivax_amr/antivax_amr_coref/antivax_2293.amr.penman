# ::snt Dude
# ::tokens ["Dude"]
# ::lemmas ["dude"]
(c1-0 / dude)

# ::snt My room is a mix of a bunch of fandoms and crap. The only one from this list is TP, though.
# ::tokens ["My", "room", "is", "a", "mix", "of", "a", "bunch", "of", "fandoms", "and", "crap", ".", "The", "only", "one", "from", "this", "list", "is", "TP", ",", "though", "."]
# ::lemmas ["my", "room", "be", "a", "mix", "of", "a", "bunch", "of", "fandom", "and", "crap", ".", "the", "only", "one", "from", "this", "list", "be", "TP", ",", "though", "."]
(c2-13 / multi-sentence
       :snt1 (c2-2 / mix-01
                   :ARG1 (c2-9 / room
                               :poss (c2-12 / i))
                   :ARG2 (c2-11 / bunch
                                :quant-of (c2-0 / and
                                                :op1 (c2-1 / fandom)
                                                :op2 (c2-3 / crap))))
       :snt2 (c2-8 / TP
                   :domain (c2-7 / one
                                 :mod (c2-6 / only)
                                 :ARG1-of (c2-10 / list-01
                                                 :mod (c2-4 / this)))
                   :ARG1-of (c2-5 / have-concession-91)))

# ::snt BDBABHAAA
# ::tokens ["BDBABHAAA"]
# ::lemmas ["BDBABHAAA"]
(c3-0 / bwahaha
      :mode expressive)

# ::snt u really took my room and put it in there like i wouldnt notice/j
# ::tokens ["u", "really", "took", "my", "room", "and", "put", "it", "in", "there", "like", "i", "would", "nt", "notice", "/", "j"]
# ::lemmas ["u", "really", "take", "my", "room", "and", "put", "it", "in", "there", "like", "i", "would", "not", "notice", "/", "j"]
(c4-1 / and
      :op1 (c4-4 / take-01
                 :ARG0 (c4-11 / you)
                 :ARG1 (c4-5 / room
                             :poss (c4-9 / i))
                 :ARG1-of (c4-2 / real-04))
      :op2 (c4-6 / put-01
                 :ARG0 c4-11
                 :ARG1 c4-5
                 :ARG2 c4-5
                 :ARG1-of (c4-8 / resemble-01
                                :ARG2 (c4-10 / notice-01
                                             :ARG0 c4-9
                                             :polarity -)))
      :ARG1-of (c4-0 / say-01
                     :ARG0 (c4-3 / person
                                 :name (c4-7 / name
                                             :op1 "j"))))

# ::snt its okay twitter for ipad check
# ::tokens ["its", "okay", "twitter", "for", "ipad", "check"]
# ::lemmas ["its", "okay", "twitter", "for", "ipad", "check"]
(c5-1 / okay-04
      :ARG1 (c5-3 / publication
                  :name (c5-4 / name
                              :op1 "Twitter"))
      :ARG2 (c5-0 / check-01
                  :ARG1 (c5-2 / product
                              :name c5-4
                              :op1 "IPad")))

# ::snt sorry anna
# ::tokens ["sorry", "anna"]
# ::lemmas ["sorry", "anna"]
(c6-0 / say-01
      :ARG1 (c6-1 / sorry-01)
      :ARG2 (c6-2 / person
                  :name (c6-3 / name
                              :op1 " anna")))

# ::snt I JUST SEARCHED UP ROOM COVERED IN KPOP MERCH IM SORRY
# ::tokens ["I", "JUST", "SEARCHED", "UP", "ROOM", "COVERED", "IN", "KPOP", "MERCH", "IM", "SORRY"]
# ::lemmas ["i", "just", "search", "up", "ROOM", "COVERED", "in", "KPOP", "MERCH", "IM", "SORRY"]
(c7-2 / and
      :op1 (c7-0 / search-01
                 :ARG0 (c7-9 / i)
                 :ARG1 (c7-5 / row
                             :ARG1-of (c7-4 / cover-up-04
                                            :location (c7-3 / facility
                                                            :name (c7-10 / name
                                                                         :op1 "KPOP"))))
                 :time (c7-8 / just))
      :op2 (c7-1 / cheer-02
                 :ARG0 c7-9
                 :ARG1 (c7-6 / person
                             :name (c7-7 / name
                                         :op1 "Merch"))))

# ::snt go away
# ::tokens ["go", "away"]
# ::lemmas ["go", "away"]
(c8-0 / go-02
      :ARG0 (c8-2 / you)
      :ARG4 (c8-1 / away)
      :mode imperative)

# ::snt No tengo habitacin, vivo arriba de la basura de la calle
# ::tokens ["No", "tengo", "habitacin", ",", "vivo", "arriba", "de", "la", "basura", "de", "la", "calle"]
# ::lemmas ["no", "tengo", "habitacin", ",", "vivo", "arriba", "de", "la", "basura", "de", "la", "calle"]
(c9-0 / say-01
      :ARG0 (c9-8 / i)
      :ARG1 (c9-1 / and
                  :op1 (c9-3 / tengo
                             :polarity -)
                  :op2 (c9-10 / arriba
                              :mod (c9-6 / basura
                                         :mod (c9-4 / la))
                              :op3-of c9-1)
                  :mod (c9-5 / la
                             :mod (c9-2 / calle)))
      :ARG2 (c9-7 / person
                  :name (c9-9 / name
                              :op1 "Marcos")))

# ::snt leave my man hobi alone
# ::tokens ["leave", "my", "man", "hobi", "alone"]
# ::lemmas ["leave", "my", "man", "hobi", "alone"]
(c10-1 / leave-14
       :ARG0 (c10-4 / you)
       :ARG1 (c10-0 / alone
                    :domain (c10-3 / man-hobi
                                   :poss (c10-2 / i)))
       :mode imperative)

# ::snt self call out post
# ::tokens ["self", "call", "out", "post"]
# ::lemmas ["self", "call", "out", "post"]
(c11-0 / post-01
       :mod (c11-2 / call-out-15
                   :ARG0 (c11-1 / i)))
