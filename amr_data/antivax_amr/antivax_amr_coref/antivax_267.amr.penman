# ::snt Yay! Congrats!
# ::tokens ["Yay", "!", "Congrats", "!"]
# ::lemmas ["Yay", "!", "Congrats", "!"]
(c1-0 / multi-sentence
      :snt1 (c1-1 / yay)
      :snt2 (c1-2 / congratulate-01
                  :mode expressive))

# ::snt Yay!!
# ::tokens ["Yay", "!", "!"]
# ::lemmas ["Yay", "!", "!"]
(c2-0 / yay
      :mode expressive)

# ::snt Very happy for you!
# ::tokens ["Very", "happy", "for", "you", "!"]
# ::lemmas ["very", "happy", "for", "you", "!"]
(c3-1 / happy-01
      :ARG1 (c3-2 / you)
      :degree (c3-0 / very))

# ::snt Never been more proud to be one!
# ::tokens ["Never", "been", "more", "proud", "to", "be", "one", "!"]
# ::lemmas ["never", "be", "more", "proud", "to", "be", "one", "!"]
(c4-3 / pride-01
      :ARG0 (c4-0 / i)
      :ARG2 (c4-2 / one)
      :time (c4-5 / ever)
      :ARG2-of (c4-1 / have-degree-91
                     :ARG1 c4-0
                     :ARG3 (c4-4 / more))
      :polarity -)

# ::snt Ditto!
# ::tokens ["Ditto", "!"]
# ::lemmas ["ditto", "!"]
(c5-0 / ditto)

# ::snt Pfizer, I think!
# ::tokens ["Pfizer", ",", "I", "think", "!"]
# ::lemmas ["Pfizer", ",", "i", "think", "!"]
(c6-2 / think-01
      :ARG0 (c6-1 / i)
      :ARG1 (c6-3 / company
                  :name (c6-0 / name
                              :op1 "Pfizer")))

# ::snt Woohoo
# ::tokens ["Woohoo"]
# ::lemmas ["Woohoo"]
(c7-0 / Woohoo
      :mode expressive)

# ::snt Ditto! Happy Monday! Pfizer or Moderna?
# ::tokens ["Ditto", "!", "Happy", "Monday", "!", "Pfizer", "or", "Moderna", "?"]
# ::lemmas ["ditto", "!", "happy", "Monday", "!", "Pfizer", "or", "Moderna", "?"]
(c8-8 / multi-sentence
      :snt1 (c8-0 / ditto
                  :mode expressive)
      :snt2 (c8-5 / happy-01
                  :ARG1 (c8-7 / date-entity
                              :weekday (c8-3 / monday))
                  :ARG2 (c8-2 / amr-choice
                              :op1 (c8-4 / company
                                         :name (c8-9 / name
                                                     :op1 "Pfizer"))
                              :op2 (c8-1 / company
                                         :name (c8-6 / name
                                                     :op1 "Moderna")))
                  :mode expressive))

# ::snt Soooo happy for you!!!
# ::tokens ["Soooo", "happy", "for", "you", "!", "!", "!"]
# ::lemmas ["Soooo", "happy", "for", "you", "!", "!", "!"]
(c9-1 / happy-01
      :ARG1 (c9-2 / you)
      :degree (c9-0 / so))

# ::snt Lol at this gif. But yay for vaccine!!
# ::tokens ["Lol", "at", "this", "gif", ".", "But", "yay", "for", "vaccine", "!", "!"]
# ::lemmas ["Lol", "at", "this", "gif", ".", "but", "yay", "for", "vaccine", "!", "!"]
(c10-7 / multi-sentence
       :snt1 (c10-3 / laugh-01
                    :ARG0 (c10-6 / i)
                    :ARG2 (c10-5 / gif
                                 :mod (c10-2 / this))
                    :manner (c10-4 / loud)
                    :mode expressive)
       :snt2 (c10-0 / contrast-01
                    :ARG2 (c10-8 / yay
                                 :prep-for (c10-1 / vaccine))))

# ::snt Understood. Im starting weeks of COVID ICU on Monday so Ill take every bit of protection that I can get!
# ::tokens ["Understood", ".", "I", "m", "starting", "weeks", "of", "COVID", "ICU", "on", "Monday", "so", "Ill", "take", "every", "bit", "of", "protection", "that", "I", "can", "get", "!"]
# ::lemmas ["Understood", ".", "i", "m", "start", "weeks", "of", "covid", "ICU", "on", "Monday", "so", "Ill", "take", "every", "bit", "of", "protection", "that", "i", "can", "get", "!"]
(c12-14 / multi-sentence
        :snt1 (c12-7 / understand-01)
        :snt2 (c12-0 / start-01
                     :ARG0 (c12-13 / i)
                     :ARG1 (c12-3 / week
                                  :duration-of (c12-10 / program
                                                       :name (c12-15 / name
                                                                     :op1 "CVID")
                                                       :mod (c12-6 / intercontinental)))
                     :time (c12-1 / date-entity
                                  :weekday (c12-2 / monday))
                     :ARG0-of (c12-4 / cause-01
                                     :ARG1 (c12-9 / take-01
                                                  :ARG0 c12-13
                                                  :ARG1 (c12-8 / protect-01
                                                               :ARG1 c12-13
                                                               :mod (c12-12 / bit
                                                                            :mod (c12-16 / every)
                                                                            :ARG1-of (c12-11 / get-01
                                                                                             :ARG0 c12-13
                                                                                             :ARG1-of (c12-5 / possible-01))))))))

# ::snt Well my initial invitation got lost in my junk mail folder and Ive been out of town, but I got it scheduled for my first day back in town!
# ::tokens ["Well", "my", "initial", "invitation", "got", "lost", "in", "my", "junk", "mail", "folder", "and", "I", "ve", "been", "out", "of", "town", ",", "but", "I", "got", "it", "scheduled", "for", "my", "first", "day", "back", "in", "town", "!"]
# ::lemmas ["well", "my", "initial", "invitation", "got", "lose", "in", "my", "junk", "mail", "folder", "and", "i", "ve", "be", "out", "of", "town", ",", "but", "i", "get", "it", "schedule", "for", "my", "first", "day", "back", "in", "town", "!"]
(c13-4 / contrast-01
       :ARG1 (c13-2 / and
                    :op1 (c13-12 / lose-02
                                 :ARG1 (c13-15 / invite-01
                                               :ARG1 (c13-7 / i)
                                               :mod (c13-8 / initial))
                                 :location (c13-3 / folder
                                                  :mod (c13-16 / mail
                                                               :mod (c13-14 / junk))
                                                  :poss c13-7))
                    :op2 (c13-10 / out-06
                                 :ARG1 c13-7
                                 :ARG2 (c13-11 / town)))
       :ARG2 (c13-13 / get-04
                     :ARG0 c13-7
                     :ARG1 (c13-0 / schedule-01
                                  :ARG1 c13-15
                                  :ARG3 (c13-1 / day
                                               :ord (c13-9 / ordinal-entity
                                                           :value 1)
                                               :time-of (c13-17 / be-located-at-91
                                                                :ARG1 c13-7
                                                                :ARG2 (c13-6 / town)))))
       :mod (c13-5 / well))
