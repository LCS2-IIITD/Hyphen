# ::snt I don't know anyone who has died from the vaccine. Can you say the same about Covid?
# ::tokens ["I", "do", "n't", "know", "anyone", "who", "has", "died", "from", "the", "vaccine", ".", "Can", "you", "say", "the", "same", "about", "Covid", "?"]
# ::lemmas ["i", "do", "not", "know", "anyone", "who", "have", "die", "from", "the", "vaccine", ".", "can", "you", "say", "the", "same", "about", "Covid", "?"]
(c1-10 / multi-sentence
       :snt1 (c1-11 / know-02
                    :ARG0 (c1-9 / i)
                    :ARG1 (c1-3 / anyone
                                :ARG1-of (c1-0 / die-01
                                               :ARG1-of (c1-4 / cause-01
                                                              :ARG0 (c1-5 / vaccine))))
                    :polarity -)
       :snt2 (c1-6 / possible-01
                   :ARG1 (c1-1 / say-01
                               :ARG0 (c1-12 / you)
                               :ARG1 (c1-8 / same-01)
                               :ARG3 (c1-2 / city
                                           :name (c1-7 / name
                                                       :op1 "Covid"))
                               :polarity (c1-13 / amr-unknown))))

# ::snt ok. Good luck.
# ::tokens ["ok", ".", "Good", "luck", "."]
# ::lemmas ["ok", ".", "good", "luck", "."]
(c2-2 / multi-sentence
      :snt1 (c2-1 / okay-04)
      :snt2 (c2-3 / luck
                  :ARG1-of (c2-0 / good-02)))

# ::snt I have checked the science. It is a "true vaccine". It's just different than the ones before it. As for being tested, over a billion ppl have been vaccinated worldwide. Problems would have surfaced by now. That's science.
# ::tokens ["I", "have", "checked", "the", "science", ".", "It", "is", "a", "\"", "true", "vaccine", "\"", ".", "It", "'s", "just", "different", "than", "the", "ones", "before", "it", ".", "As", "for", "being", "tested", ",", "over", "a", "billion", "ppl", "have", "been", "vaccinated", "worldwide", ".", "Problems", "would", "have", "surfaced", "by", "now", ".", "That", "'s", "science", "."]
# ::lemmas ["i", "have", "check", "the", "science", ".", "it", "be", "a", "\"", "true", "vaccine", "\"", ".", "it", "be", "just", "different", "than", "the", "one", "before", "it", ".", "as", "for", "be", "test", ",", "over", "a", "billion", "ppl", "have", "be", "vaccinate", "worldwide", ".", "problem", "would", "have", "surface", "by", "now", ".", "that", "be", "science", "."]
(c3-8 / multi-sentence
      :snt1 (c3-2 / check-01
                  :ARG0 (c3-1 / i)
                  :ARG1 (c3-11 / science))
      :snt2 (c3-5 / vaccine
                  :ARG1-of (c3-7 / true-01)
                  :domain (c3-12 / it))
      :snt3 (c3-0 / differ-02
                  :ARG1 (c3-13 / it)
                  :ARG2 (c3-17 / vaccine
                               :time (c3-21 / before
                                            :op1 (c3-18 / it)))
                  :mod (c3-20 / just))
      :snt4 (c3-14 / vaccinate-01
                   :ARG1 (c3-23 / person
                                :quant (c3-6 / over
                                             :op1 1000000000))
                   :location (c3-3 / worldwide)
                   :topic (c3-4 / test-01))
      :snt5 (c3-22 / surface-01
                   :ARG1 (c3-19 / problem)
                   :time (c3-16 / by
                                :op1 (c3-9 / now)))
      :snt6 (c3-15 / science
                   :mod (c3-10 / that)))

# ::snt Check the Science bro. This is not a true vaccine. This technology is new to mankind and not fully tested.
# ::tokens ["Check", "the", "Science", "bro", ".", "This", "is", "not", "a", "true", "vaccine", ".", "This", "technology", "is", "new", "to", "mankind", "and", "not", "fully", "tested", "."]
# ::lemmas ["check", "the", "Science", "bro", ".", "this", "be", "not", "a", "true", "vaccine", ".", "this", "technology", "be", "new", "to", "mankind", "and", "not", "fully", "test", "."]
(c4-12 / multi-sentence
       :snt1 (c4-3 / check-01
                   :ARG0 (c4-14 / you)
                   :ARG1 (c4-11 / book
                                :name (c4-13 / name
                                             :op1 "Science"
                                             :op2 "Bro"))
                   :mode imperative)
       :snt2 (c4-8 / vaccine
                   :ARG1-of (c4-9 / true-01)
                   :domain (c4-5 / this)
                   :polarity -)
       :snt3 (c4-0 / and
                   :op1 (c4-10 / new-02
                               :ARG1 (c4-4 / technology
                                           :mod (c4-7 / this))
                               :ARG2 (c4-6 / mankind))
                   :op2 (c4-1 / test-01
                              :ARG1 c4-4
                              :degree (c4-2 / full
                                            :polarity -))))

# ::snt Vaccinations have been part of our lives for decades. I don't want smallpox or the measles, do you?
# ::tokens ["Vaccinations", "have", "been", "part", "of", "our", "lives", "for", "decades", ".", "I", "do", "n't", "want", "smallpox", "or", "the", "measles", ",", "do", "you", "?"]
# ::lemmas ["vaccination", "have", "be", "part", "of", "our", "life", "for", "decades", ".", "i", "do", "not", "want", "smallpox", "or", "the", "measle", ",", "do", "you", "?"]
(c5-12 / multi-sentence
       :snt1 (c5-5 / vaccinate-01
                   :part-of (c5-9 / life
                                  :poss (c5-2 / we))
                   :duration (c5-1 / multiple
                                   :op1 (c5-7 / temporal-quantity
                                              :unit (c5-0 / decade)
                                              :quant 1)))
       :snt2 (c5-14 / want-01
                    :ARG0 (c5-11 / i)
                    :ARG1 (c5-6 / or
                                :op1 (c5-3 / disease
                                           :name (c5-13 / name
                                                        :op1 "Smallpox"))
                                :op2 (c5-4 / disease
                                           :name (c5-8 / name
                                                       :op1 "measles")))
                    :ARG1-of (c5-10 / request-confirmation-91)
                    :polarity -))

# ::snt Stop the planet - I wanna get off.
# ::tokens ["Stop", "the", "planet", "-", "I", "wanna", "get", "off", "."]
# ::lemmas ["stop", "the", "planet", "-", "i", "wanna", "get", "off", "."]
(c6-1 / and
      :op1 (c6-0 / stop-01
                 :ARG0 (c6-7 / you)
                 :ARG1 (c6-6 / planet)
                 :mode imperative)
      :op2 (c6-3 / want-01
                 :ARG0 (c6-2 / i)
                 :ARG1 (c6-5 / get-05
                             :ARG1 c6-2
                             :ARG2 (c6-4 / off))))

# ::snt NO. Don't be ludicrous! Running around threatening ADULTS.
# ::tokens ["NO", ".", "Do", "n't", "be", "ludicrous", "!", "Running", "around", "threatening", "ADULTS", "."]
# ::lemmas ["no", ".", "do", "not", "be", "ludicrous", "!", "run", "around", "threaten", "adult", "."]
(c7-6 / multi-sentence
      :snt1 (c7-7 / no)
      :snt2 (c7-4 / ludicrous
                  :domain (c7-8 / you)
                  :polarity -
                  :mode imperative)
      :snt3 (c7-3 / run-02
                  :ARG0 c7-8
                  :direction (c7-0 / around)
                  :manner (c7-2 / threaten-01
                                :ARG0 c7-8
                                :ARG2 (c7-5 / person
                                            :ARG0-of (c7-1 / injure-01)))))

# ::snt Lovely! Ppl running around threatening kids with needles. Welcome to the brave New World.
# ::tokens ["Lovely", "!", "Ppl", "running", "around", "threatening", "kids", "with", "needles", ".", "Welcome", "to", "the", "brave", "New", "World", "."]
# ::lemmas ["lovely", "!", "Ppl", "run", "around", "threaten", "kid", "with", "needle", ".", "welcome", "to", "the", "brave", "New", "World", "."]
(c8-10 / multi-sentence
       :snt1 (c8-6 / love-01
                   :mode expressive)
       :snt2 (c8-5 / run-02
                   :ARG0 (c8-9 / person
                               :name (c8-11 / name
                                            :op1 "Ppl"))
                   :direction (c8-0 / around)
                   :manner (c8-4 / threaten-01
                                 :ARG0 c8-9
                                 :ARG1 (c8-1 / kid)
                                 :ARG2 (c8-7 / needle)))
       :snt3 (c8-2 / welcome-01
                   :ARG1 (c8-12 / world
                                :ARG0-of (c8-8 / brave-02)
                                :ARG2-of c8-2)
                   :name (c8-3 / name
                               :op1 "New"
                               :op2 "World")))

# ::snt &amp; place a bounty amount to be given to those who can legally/lawfully wield and vaccinate, on the heads of the unvaccinated. Surely we have those in the medical field, whose hobby is hunting, ikr?
# ::tokens ["&", "amp", ";", "place", "a", "bounty", "amount", "to", "be", "given", "to", "those", "who", "can", "legally", "/", "lawfully", "wield", "and", "vaccinate", ",", "on", "the", "heads", "of", "the", "unvaccinated", ".", "Surely", "we", "have", "those", "in", "the", "medical", "field", ",", "whose", "hobby", "is", "hunting", ",", "ikr", "?"]
# ::lemmas ["&", "amp", ";", "place", "a", "bounty", "amount", "to", "be", "give", "to", "those", "who", "can", "legally", "/", "lawfully", "wield", "and", "vaccinate", ",", "on", "the", "head", "of", "the", "unvaccinated", ".", "surely", "we", "have", "those", "in", "the", "medical", "field", ",", "whose", "hobby", "be", "hunt", ",", "ikr", "?"]
(c9-9 / multi-sentence
      :snt1 (c9-15 / and
                   :op2 (c9-22 / place-01
                               :ARG1 (c9-11 / amount
                                            :ARG1-of (c9-8 / give-01
                                                           :ARG2 (c9-20 / person
                                                                        :ARG0-of (c9-4 / wield-01
                                                                                       :ARG1-of (c9-14 / possible-01))
                                                                        :ARG0-of (c9-5 / vaccinate-01
                                                                                       :ARG1 (c9-13 / person
                                                                                                    :ARG1-of (c9-16 / vaccinate-01
                                                                                                                    :polarity -))
                                                                                       :ARG1-of (c9-21 / legal-02))
                                                                        :part (c9-19 / head))))
                               :ARG2 c9-22
                               :ARG1 c9-11
                               :ARG2 c9-19))
      :snt2 (c9-2 / have-03
                  :ARG0 (c9-10 / we)
                  :ARG1 (c9-1 / person
                              :mod (c9-7 / that)
                              :location (c9-17 / field
                                               :mod (c9-18 / medicine))
                              :ARG0-of c9-2
                              :ARG1 (c9-3 / hobby
                                          :topic (c9-6 / hunt-01)
                                          :poss c9-1)))
      :ARG1-of (c9-12 / sure-02)
      :polarity (c9-0 / amr-unknown))

# ::snt Yay
# ::tokens ["Yay"]
# ::lemmas ["yay"]
(c10-0 / yay)

# ::snt Yay
# ::tokens ["Yay"]
# ::lemmas ["yay"]
(c11-0 / yay)

# ::snt Yay
# ::tokens ["Yay"]
# ::lemmas ["yay"]
(c12-0 / yay)

# ::snt Thanks, we'll take that offer. Not so sure vax is harmless, esp to others in proximity, and esp for someone young and fertile. Maybe there is more to this than just a virus??Just my opinion - based on research.
# ::tokens ["Thanks", ",", "we", "'ll", "take", "that", "offer", ".", "Not", "so", "sure", "vax", "is", "harmless", ",", "esp", "to", "others", "in", "proximity", ",", "and", "esp", "for", "someone", "young", "and", "fertile", ".", "Maybe", "there", "is", "more", "to", "this", "than", "just", "a", "virus??Just", "my", "opinion", "-", "based", "on", "research", "."]
# ::lemmas ["thank", ",", "we", "'ll", "take", "that", "offer", ".", "not", "so", "sure", "vax", "be", "harmless", ",", "esp", "to", "other", "in", "proximity", ",", "and", "esp", "for", "someone", "young", "and", "fertile", ".", "maybe", "there", "be", "more", "to", "this", "than", "just", "a", "virus??just", "my", "opinion", "-", "base", "on", "research", "."]
(c13-9 / multi-sentence
       :snt1 (c13-7 / thank-01
                    :ARG0 (c13-0 / i)
                    :ARG1 (c13-17 / you)
                    :ARG2 (c13-6 / offer-01
                                 :ARG1 (c13-4 / take-01
                                              :ARG0 (c13-3 / we)
                                              :ARG1 c13-6
                                              :mod (c13-11 / that))))
       :snt2 (c13-13 / sure-02
                     :ARG0 (c13-14 / i)
                     :ARG1 (c13-22 / harmful-02
                                   :ARG0 (c13-28 / product
                                                 :name (c13-10 / name
                                                               :op1 "vax"))
                                   :ARG1 (c13-19 / and
                                                 :op1 (c13-23 / other
                                                              :ARG1-of (c13-2 / close-10))
                                                 :op2 (c13-27 / someone
                                                              :mod (c13-18 / young)
                                                              :mod (c13-20 / fertile)))
                                   :polarity -)
                     :degree (c13-15 / so)
                     :polarity -)
       :snt3 (c13-24 / possible-01
                     :ARG1 (c13-21 / more-than
                                   :op1 (c13-5 / virus
                                               :mod (c13-25 / just)))
                     :polarity (c13-12 / amr-unknown)
                     :ARG1-of (c13-1 / opine-01
                                     :ARG0 (c13-16 / i)
                                     :mod c13-25)
                     :ARG1-of (c13-26 / base-02
                                      :ARG2 (c13-8 / research-01))))

# ::snt Yay. YAY!!
# ::tokens ["Yay", ".", "YAY", "!", "!"]
# ::lemmas ["Yay", ".", "YAY", "!", "!"]
(c14-0 / multi-sentence
       :snt1 (c14-1 / yay)
       :snt2 (c14-2 / yay))

# ::snt I never heard that story. Can't say. If I have some time, I'll check it out.
# ::tokens ["I", "never", "heard", "that", "story", ".", "Ca", "n't", "say", ".", "If", "I", "have", "some", "time", ",", "I", "'ll", "check", "it", "out", "."]
# ::lemmas ["i", "never", "hear", "that", "story", ".", "can", "not", "say", ".", "if", "i", "have", "some", "time", ",", "i", "'ll", "check", "it", "out", "."]
(c15-12 / multi-sentence
        :snt1 (c15-3 / hear-01
                     :ARG0 (c15-11 / i)
                     :ARG1 (c15-0 / story
                                  :mod (c15-8 / that))
                     :time (c15-13 / ever)
                     :polarity -)
        :snt2 (c15-9 / possible-01
                     :ARG1 (c15-10 / say-01
                                   :ARG0 c15-11)
                     :polarity -)
        :snt3 (c15-1 / check-out-05
                     :ARG0 (c15-4 / i)
                     :ARG1 (c15-5 / it)
                     :condition (c15-6 / have-03
                                       :ARG0 c15-4
                                       :ARG1 (c15-2 / time
                                                    :quant (c15-7 / some)))))

# ::snt The gov't WANTS you to use guilt and shame for those opposed to the virus. They are happy to shift the blame from their failures.
# ::tokens ["The", "gov't", "WANTS", "you", "to", "use", "guilt", "and", "shame", "for", "those", "opposed", "to", "the", "virus", ".", "They", "are", "happy", "to", "shift", "the", "blame", "from", "their", "failures", "."]
# ::lemmas ["the", "gov't", "want", "you", "to", "use", "guilt", "and", "shame", "for", "those", "oppose", "to", "the", "virus", ".", "they", "be", "happy", "to", "shift", "the", "blame", "from", "their", "failure", "."]
(c16-14 / multi-sentence
        :snt1 (c16-4 / want-01
                     :ARG0 (c16-11 / government-organization
                                   :ARG0-of (c16-16 / govern-01))
                     :ARG1 (c16-6 / use-01
                                  :ARG0 (c16-9 / you)
                                  :ARG1 (c16-2 / and
                                               :op1 (c16-1 / guilt)
                                               :op2 (c16-0 / shame))
                                  :beneficiary (c16-13 / person
                                                       :ARG0-of (c16-8 / oppose-01
                                                                       :ARG1 (c16-7 / virus)))))
        :snt2 (c16-5 / happy-01
                     :ARG0 (c16-12 / shift-01
                                   :ARG0 (c16-10 / they)
                                   :ARG1 (c16-15 / blame-01)
                                   :ARG2 (c16-3 / fail-01
                                                :ARG1 c16-10))
                     :ARG1 c16-10))

# ::snt Is it? I never heard it. I know the Twinkie one is true.
# ::tokens ["Is", "it", "?", "I", "never", "heard", "it", ".", "I", "know", "the", "Twinkie", "one", "is", "true", "."]
# ::lemmas ["be", "it", "?", "i", "never", "hear", "it", ".", "i", "know", "the", "Twinkie", "one", "be", "true", "."]
(c17-9 / multi-sentence
       :snt1 (c17-8 / it
                    :polarity (c17-0 / amr-unknown))
       :snt2 (c17-2 / hear-01
                    :ARG0 (c17-3 / i)
                    :ARG1 (c17-4 / it)
                    :time (c17-11 / ever)
                    :polarity -)
       :snt3 (c17-10 / know-01
                     :ARG0 (c17-5 / i)
                     :ARG1 (c17-7 / true-01
                                  :ARG1 (c17-6 / one
                                               :mod (c17-1 / Twinkie)))))

# ::snt Can I ask you?Did you speak up last Feb and March when the government refused to close international travel?Or this year when thousands arrived from India carrying the variant? Did you hold gov't accountable?Curious.
# ::tokens ["Can", "I", "ask", "you?Did", "you", "speak", "up", "last", "Feb", "and", "March", "when", "the", "government", "refused", "to", "close", "international", "travel?Or", "this", "year", "when", "thousands", "arrived", "from", "India", "carrying", "the", "variant", "?", "Did", "you", "hold", "gov't", "accountable?Curious", "."]
# ::lemmas ["can", "i", "ask", "you?did", "you", "speak", "up", "last", "Feb", "and", "March", "when", "the", "government", "refuse", "to", "close", "international", "travel?or", "this", "year", "when", "thousands", "arrive", "from", "India", "carry", "the", "variant", "?", "do", "you", "hold", "gov't", "accountable?curious", "."]
(c18-13 / multi-sentence
        :snt1 (c18-28 / possible-01
                      :ARG1 (c18-25 / ask-01
                                    :ARG0 (c18-5 / i)
                                    :ARG2 (c18-24 / you))
                      :polarity (c18-15 / amr-unknown))
        :snt2 (c18-1 / and
                     :op1 (c18-16 / speak-up-02
                                  :ARG0 (c18-23 / you)
                                  :time (c18-29 / and
                                                :op1 (c18-0 / date-entity
                                                            :mod (c18-27 / last)
                                                            :month 2)
                                                :op2 (c18-21 / date-entity
                                                             :mod c18-27
                                                             :month 3)
                                                :time-of (c18-11 / refuse-01
                                                                 :ARG0 (c18-12 / government-organization
                                                                               :ARG0-of (c18-22 / govern-01))
                                                                 :ARG1 (c18-6 / close-01
                                                                              :ARG0 c18-12
                                                                              :ARG1 (c18-10 / travel-01
                                                                                            :mod (c18-18 / international))))))
                     :op2 (c18-2 / year
                                 :mod (c18-7 / this)
                                 :time-of (c18-4 / arrive-01
                                                 :ARG1 (c18-26 / multiple
                                                               :op1 1000)
                                                 :ARG3 (c18-3 / country
                                                              :name (c18-14 / name
                                                                            :op1 "India"))
                                                 :manner (c18-8 / carry-01
                                                                :ARG0 c18-26
                                                                :ARG1 (c18-9 / variant))))
                     :polarity (c18-19 / amr-unknown))
        :snt3 (c18-20 / curious-01
                      :ARG1 (c18-17 / you)))

# ::snt Good point. True. Not all have the choice. Ad far as the rest of what you said. No. I disagree.
# ::tokens ["Good", "point", ".", "True", ".", "Not", "all", "have", "the", "choice", ".", "Ad", "far", "as", "the", "rest", "of", "what", "you", "said", ".", "No", ".", "I", "disagree", "."]
# ::lemmas ["good", "point", ".", "true", ".", "not", "all", "have", "the", "choice", ".", "ad", "far", "as", "the", "rest", "of", "what", "you", "say", ".", "no", ".", "i", "disagree", "."]
(c19-11 / multi-sentence
        :snt1 (c19-10 / point-04
                      :ARG1-of (c19-9 / good-02))
        :snt2 (c19-7 / true-01)
        :snt3 (c19-6 / have-03
                     :ARG0 (c19-2 / all)
                     :ARG1 (c19-3 / choose-01)
                     :polarity -)
        :snt4 (c19-14 / ad-hominem
                      :topic (c19-8 / rest
                                    :part-of (c19-5 / thing
                                                    :ARG1-of (c19-0 / say-01
                                                                    :ARG0 (c19-13 / you)))))
        :snt5 (c19-12 / no)
        :snt6 (c19-1 / disagree-01
                     :ARG0 (c19-4 / i)))

# ::snt That big mac story is old BS. Bury one in your garden for week, dig it up and eat it.
# ::tokens ["That", "big", "mac", "story", "is", "old", "BS", ".", "Bury", "one", "in", "your", "garden", "for", "week", ",", "dig", "it", "up", "and", "eat", "it", "."]
# ::lemmas ["that", "big", "mac", "story", "be", "old", "BS", ".", "Bury", "one", "in", "your", "garden", "for", "week", ",", "dig", "it", "up", "and", "eat", "it", "."]
(c20-13 / multi-sentence
        :snt1 (c20-12 / bullshit-01
                      :ARG1 (c20-0 / story
                                   :topic (c20-4 / mac
                                                 :mod (c20-1 / big))
                                   :mod (c20-10 / that))
                      :mod (c20-9 / old))
        :snt2 (c20-3 / and
                     :op1 (c20-6 / bury-01
                                 :ARG0 (c20-14 / you)
                                 :ARG1 (c20-8 / one)
                                 :location (c20-11 / garden
                                                   :poss c20-14)
                                 :duration (c20-7 / temporal-quantity
                                                  :unit (c20-5 / week)
                                                  :quant 1)
                                 :mode imperative)
                     :op2 (c20-2 / dig-up-02
                                 :ARG0 c20-14
                                 :ARG1 c20-8
                                 :mode imperative)
                     :op3 (c20-15 / eat-01
                                  :ARG0 c20-14
                                  :ARG1 c20-8
                                  :mode imperative)))

# ::snt Some people have no choice. They are immune compromised due to chemo, organ transplant and other conditions. These people live in fear that people will spread disease. Sometimes you have to think of other peopleand change the channel. Listen to scientists that help tou live
# ::tokens ["Some", "people", "have", "no", "choice", ".", "They", "are", "immune", "compromised", "due", "to", "chemo", ",", "organ", "transplant", "and", "other", "conditions", ".", "These", "people", "live", "in", "fear", "that", "people", "will", "spread", "disease", ".", "Sometimes", "you", "have", "to", "think", "of", "other", "peopleand", "change", "the", "channel", ".", "Listen", "to", "scientists", "that", "help", "tou", "live"]
# ::lemmas ["some", "people", "have", "no", "choice", ".", "they", "be", "immune", "compromise", "due", "to", "chemo", ",", "organ", "transplant", "and", "other", "condition", ".", "these", "people", "live", "in", "fear", "that", "people", "will", "spread", "disease", ".", "sometimes", "you", "have", "to", "think", "of", "other", "peopleand", "change", "the", "channel", ".", "listen", "to", "scientist", "that", "help", "tou", "live"]
(c21-13 / multi-sentence
        :snt1 (c21-8 / choose-01
                     :ARG0 (c21-31 / person
                                   :mod (c21-16 / some))
                     :polarity -)
        :snt2 (c21-0 / compromise-02
                     :ARG0 (c21-24 / and
                                   :op1 (c21-10 / chemo)
                                   :op2 (c21-12 / transplant-01
                                                :ARG1 (c21-11 / organ))
                                   :op3 (c21-21 / condition
                                                :mod (c21-27 / other)))
                     :ARG1 c21-31)
        :snt3 (c21-29 / live-01
                      :ARG0 (c21-28 / person
                                    :mod (c21-9 / this))
                      :manner (c21-25 / fear-01
                                      :ARG0 c21-28
                                      :ARG1 (c21-30 / spread-03
                                                    :ARG0 (c21-19 / person)
                                                    :ARG1 (c21-1 / disease))))
        :snt4 (c21-7 / obligate-01
                     :ARG1 (c21-22 / you)
                     :ARG2 (c21-15 / and
                                   :op1 (c21-14 / think-01
                                                :ARG0 c21-22
                                                :ARG1 (c21-17 / person
                                                              :mod (c21-23 / other)))
                                   :op2 (c21-18 / change-01
                                                :ARG0 c21-22
                                                :ARG1 (c21-6 / channel)))
                     :frequency (c21-20 / sometimes))
        :snt5 (c21-4 / listen-01
                     :ARG0 c21-22
                     :ARG1 (c21-5 / scientist
                                  :ARG0-of (c21-26 / help-01
                                                   :ARG1 (c21-2 / live-01
                                                                :ARG0 (c21-3 / person))))))

# ::snt Same thing with Twinkies. I'm . I live a fairly healthy lifestyle. I work out daily, run, bike, hike, etc... Rarely drink, but in the end, people still have the ultimate choice of what they put in their body. That's a basic right and freedom of choice.
# ::tokens ["Same", "thing", "with", "Twinkies", ".", "I", "'m", ".", "I", "live", "a", "fairly", "healthy", "lifestyle", ".", "I", "work", "out", "daily", ",", "run", ",", "bike", ",", "hike", ",", "etc", "...", "Rarely", "drink", ",", "but", "in", "the", "end", ",", "people", "still", "have", "the", "ultimate", "choice", "of", "what", "they", "put", "in", "their", "body", ".", "That", "'s", "a", "basic", "right", "and", "freedom", "of", "choice", "."]
# ::lemmas ["same", "thing", "with", "Twinkies", ".", "i", "be", ".", "i", "live", "a", "fairly", "healthy", "lifestyle", ".", "i", "work", "out", "daily", ",", "run", ",", "bike", ",", "hike", ",", "etc", "...", "rarely", "drink", ",", "but", "in", "the", "end", ",", "people", "still", "have", "the", "ultimate", "choice", "of", "what", "they", "put", "in", "their", "body", ".", "that", "be", "a", "basic", "right", "and", "freedom", "of", "choice", "."]
(c22-15 / multi-sentence
        :snt1 (c22-18 / same-01
                      :ARG1 (c22-12 / thing
                                    :topic (c22-34 / product
                                                   :name (c22-16 / name
                                                                 :op1 "Twinkies")))
                      :ARG2 (c22-4 / i))
        :snt2 (c22-31 / live-01
                      :ARG0 (c22-21 / i)
                      :ARG1 (c22-2 / lifestyle
                                   :mod (c22-27 / healthy
                                                :ARG1-of (c22-26 / fair-04))))
        :snt3 (c22-6 / contrast-01
                     :ARG1 (c22-7 / work-out-03
                                  :ARG0 c22-21
                                  :frequency (c22-13 / rate-entity-91
                                                     :ARG3 (c22-8 / temporal-quantity
                                                                  :unit (c22-0 / day)
                                                                  :quant 1)))
                     :ARG2 (c22-25 / and
                                   :op1 (c22-9 / run-02
                                               :ARG0 c22-21)
                                   :op2 (c22-32 / bike-01
                                                :ARG0 c22-21)
                                   :op3 (c22-3 / hike-01
                                               :ARG0 c22-21)
                                   :op4 (c22-17 / et-cetera))
                     :ARG2 (c22-23 / drink-01
                                   :ARG0 c22-21
                                   :ARG1-of (c22-14 / rare-02)))
        :ARG2 (c22-5 / have-03
                     :ARG0 (c22-30 / person)
                     :ARG1 (c22-1 / choose-01
                                  :ARG0 c22-30
                                  :ARG1 c22-12
                                  :ARG1-of (c22-20 / put-01
                                                   :ARG0 c22-30
                                                   :ARG2 (c22-24 / body
                                                                 :poss c22-30)))
                     :mod (c22-29 / ultimate))
        :time (c22-28 / end-01)
        :mod (c22-33 / still)
        :snt4 c22-25
        :op1 (c22-11 / right-05
                     :ARG1 c22-30)
        :mod (c22-19 / basic)
        :op2 (c22-22 / free-04
                     :ARG1 c22-30
                     :ARG3 (c22-10 / choose-01)))

# ::snt . Probably true for many.
# ::tokens [".", "Probably", "true", "for", "many", "."]
# ::lemmas [".", "probably", "true", "for", "many", "."]
(c23-1 / probable
       :domain (c23-3 / true-01
                      :ARG1 (c23-2 / person
                                   :quant (c23-0 / many))))

# ::snt your citation
# ::tokens ["your", "citation"]
# ::lemmas ["your", "citation"]
(c24-1 / cite-01
       :ARG0 (c24-0 / you))

# ::snt Nay
# ::tokens ["Nay"]
# ::lemmas ["nay"]
(c25-0 / nay)

# ::snt Aye
# ::tokens ["Aye"]
# ::lemmas ["aye"]
(c26-0 / person
       :name (c26-1 / name
                    :op1 "Aye"))

# ::snt Oh dear. That doesnt sound right. I havent looked at the app version just the paper one I got in the post.
# ::tokens ["Oh", "dear", ".", "That", "does", "nt", "sound", "right", ".", "I", "have", "nt", "looked", "at", "the", "app", "version", "just", "the", "paper", "one", "I", "got", "in", "the", "post", "."]
# ::lemmas ["oh", "dear", ".", "that", "do", "not", "sound", "right", ".", "i", "have", "not", "look", "at", "the", "app", "version", "just", "the", "paper", "one", "i", "get", "in", "the", "post", "."]
(c27-13 / multi-sentence
        :snt1 (c27-0 / dear
                     :mod (c27-4 / oh))
        :snt2 (c27-1 / sound-01
                     :ARG1 (c27-6 / that)
                     :ARG2 (c27-7 / right-06
                                  :ARG1 c27-6)
                     :polarity -)
        :snt3 (c27-8 / look-01
                     :ARG0 (c27-12 / i)
                     :ARG1 (c27-3 / version
                                  :mod (c27-2 / app))
                     :mod (c27-11 / just)
                     :concession (c27-9 / paper
                                        :ARG1-of (c27-10 / get-01
                                                         :ARG0 c27-12
                                                         :location (c27-5 / post)))
                     :polarity -))

# ::snt Managed to download it onto the app - it says it expires in days! Only got the second jab about a month ago
# ::tokens ["Managed", "to", "download", "it", "onto", "the", "app", "-", "it", "says", "it", "expires", "in", "days", "!", "Only", "got", "the", "second", "jab", "about", "a", "month", "ago"]
# ::lemmas ["manage", "to", "download", "it", "onto", "the", "app", "-", "it", "say", "it", "expire", "in", "days", "!", "only", "get", "the", "second", "jab", "about", "a", "month", "ago"]
(c28-8 / multi-sentence
       :snt1 (c28-17 / manage-02
                     :ARG1 (c28-0 / download-01
                                  :ARG1 (c28-2 / it)
                                  :destination (c28-16 / app)))
       :snt2 (c28-12 / say-01
                     :ARG0 (c28-13 / it)
                     :ARG1 (c28-11 / expire-01
                                   :ARG1 c28-13
                                   :time (c28-10 / after
                                                 :quant (c28-14 / multiple
                                                                :op1 (c28-5 / temporal-quantity
                                                                            :unit (c28-15 / day)
                                                                            :quant 1)))))
       :snt3 (c28-6 / get-01
                    :ARG1 (c28-20 / jab-01
                                  :ord (c28-4 / ordinal-entity
                                              :value 2))
                    :mod (c28-18 / only)
                    :time (c28-19 / before
                                  :op1 (c28-9 / now)
                                  :quant (c28-1 / about
                                                :op1 (c28-3 / temporal-quantity
                                                            :unit (c28-7 / month)
                                                            :quant 1)))))

# ::snt Yes to all indoor acrivity
# ::tokens ["Yes", "to", "all", "indoor", "acrivity"]
# ::lemmas ["yes", "to", "all", "indoor", "acrivity"]
(c29-2 / yes
       :prep-to (c29-0 / incredible
                       :location (c29-1 / indoor)
                       :mod (c29-3 / all)))

# ::snt Nay
# ::tokens ["Nay"]
# ::lemmas ["nay"]
(c30-0 / nay)

# ::snt Okay thank you
# ::tokens ["Okay", "thank", "you"]
# ::lemmas ["okay", "thank", "you"]
(c31-1 / thank-01
       :ARG0 (c31-0 / i)
       :ARG1 (c31-2 / you))

# ::snt Yea
# ::tokens ["Yea"]
# ::lemmas ["yea"]
(c32-0 / yea)

# ::snt Yeah
# ::tokens ["Yeah"]
# ::lemmas ["yeah"]
(c33-0 / yeah)

# ::snt The vaccine passport is country specific. For events in Canada the limited number of people from Haiti going to a Gordon Lightfoot concert can present a recent negative Covid PCR test.
# ::tokens ["The", "vaccine", "passport", "is", "country", "specific", ".", "For", "events", "in", "Canada", "the", "limited", "number", "of", "people", "from", "Haiti", "going", "to", "a", "Gordon", "Lightfoot", "concert", "can", "present", "a", "recent", "negative", "Covid", "PCR", "test", "."]
# ::lemmas ["the", "vaccine", "passport", "be", "country", "specific", ".", "for", "event", "in", "Canada", "the", "limited", "number", "of", "people", "from", "Haiti", "go", "to", "a", "Gordon", "Lightfoot", "concert", "can", "present", "a", "recent", "negative", "Covid", "PCR", "test", "."]
(c34-12 / multi-sentence
        :snt1 (c34-15 / specific-02
                      :ARG1 (c34-23 / passport
                                    :mod (c34-7 / vaccine))
                      :ARG2 (c34-4 / country))
        :snt2 (c34-21 / possible-01
                      :ARG1 (c34-17 / present-01
                                    :ARG0 (c34-13 / number
                                                  :ARG1-of (c34-22 / limit-01)
                                                  :quant-of (c34-16 / person
                                                                    :source (c34-0 / country
                                                                                   :name (c34-2 / name
                                                                                                :op1 "Haiti"))
                                                                    :ARG0-of (c34-11 / go-02
                                                                                     :ARG4 (c34-6 / concert
                                                                                                  :mod (c34-1 / person
                                                                                                              :name (c34-18 / name
                                                                                                                            :op1 "Gordon"
                                                                                                                            :op2 "Lightfoot"))))))
                                    :ARG1 (c34-8 / test-01
                                                 :ARG1 c34-16
                                                 :ARG2 (c34-5 / thing
                                                              :name (c34-3 / name
                                                                           :op1 "Covid"
                                                                           :op2 "PCR"))
                                                 :ARG0-of (c34-9 / negative-02)
                                                 :time (c34-10 / recent))
                                    :purpose (c34-14 / event
                                                     :location (c34-19 / country
                                                                       :name (c34-20 / name
                                                                                     :op1 "Canada"))))))

# ::snt Good point. Ive actually heard that in Haiti, nobody has gotten vaccine.
# ::tokens ["Good", "point", ".", "I", "ve", "actually", "heard", "that", "in", "Haiti", ",", "nobody", "has", "gotten", "vaccine", "."]
# ::lemmas ["good", "point", ".", "i", "ve", "actually", "hear", "that", "in", "Haiti", ",", "nobody", "have", "get", "vaccine", "."]
(c35-8 / multi-sentence
       :snt1 (c35-7 / point-04
                    :ARG1-of (c35-6 / good-02))
       :snt2 (c35-3 / hear-01
                    :ARG0 (c35-1 / i)
                    :ARG1 (c35-10 / get-01
                                  :ARG0 (c35-9 / nobody)
                                  :ARG1 (c35-4 / vaccine)
                                  :location (c35-2 / country
                                                   :name (c35-5 / name
                                                                :op1 "Haiti"))
                                  :polarity -)
                    :ARG1-of (c35-0 / actual-02)))

# ::snt I'm more talking about those in other countries.
# ::tokens ["I", "'m", "more", "talking", "about", "those", "in", "other", "countries", "."]
# ::lemmas ["i", "be", "more", "talk", "about", "those", "in", "other", "country", "."]
(c36-3 / talk-01
       :ARG0 (c36-4 / i)
       :ARG1 (c36-1 / that
                    :location (c36-0 / country
                                     :mod (c36-2 / other)))
       :mod (c36-5 / more))

# ::snt Yay
# ::tokens ["Yay"]
# ::lemmas ["yay"]
(c37-0 / yay)

# ::snt Yeah
# ::tokens ["Yeah"]
# ::lemmas ["yeah"]
(c38-0 / yeah)

# ::snt When your family was in the Military the kids had a yellow shot record. We had a shot record and going to school children parents had to show a shot record from a doctor. This is no different !
# ::tokens ["When", "your", "family", "was", "in", "the", "Military", "the", "kids", "had", "a", "yellow", "shot", "record", ".", "We", "had", "a", "shot", "record", "and", "going", "to", "school", "children", "parents", "had", "to", "show", "a", "shot", "record", "from", "a", "doctor", ".", "This", "is", "no", "different", "!"]
# ::lemmas ["when", "your", "family", "be", "in", "the", "Military", "the", "kid", "have", "a", "yellow", "shot", "record", ".", "we", "have", "a", "shot", "record", "and", "go", "to", "school", "child", "parent", "have", "to", "show", "a", "shot", "record", "from", "a", "doctor", ".", "this", "be", "no", "different", "!"]
(c39-15 / multi-sentence
        :snt1 (c39-24 / have-03
                      :ARG0 (c39-28 / kid)
                      :ARG1 (c39-12 / record
                                    :topic (c39-16 / shoot-01)
                                    :ARG1-of (c39-19 / yellow-02))
                      :time (c39-1 / have-03
                                   :ARG0 (c39-22 / family
                                                 :ARG1-of (c39-4 / have-org-role-91
                                                                 :ARG0 (c39-20 / you)
                                                                 :ARG2 (c39-23 / member)))
                                   :ARG1 (c39-8 / record
                                                :topic (c39-26 / shoot-01))))
        :snt2 (c39-21 / and
                      :op1 (c39-9 / have-03
                                  :ARG0 (c39-6 / we)
                                  :ARG1 (c39-14 / record
                                                :topic (c39-17 / shoot-01)))
                      :op2 (c39-10 / obligate-01
                                   :ARG1 (c39-27 / person
                                                 :ARG0-of (c39-7 / have-rel-role-91
                                                                 :ARG1 (c39-5 / child)
                                                                 :ARG2 (c39-25 / parent)))
                                   :ARG2 (c39-2 / show-01
                                                :ARG0 c39-27
                                                :ARG1 c39-14
                                                :ARG2 (c39-0 / doctor))
                                   :time (c39-13 / go-02
                                                 :ARG0 c39-5
                                                 :ARG4 (c39-3 / school))))
        :snt3 (c39-18 / differ-02
                      :ARG1 (c39-11 / this)
                      :polarity -
                      :mode expressive))

# ::snt yay
# ::tokens ["yay"]
# ::lemmas ["yay"]
(c40-0 / yay)

# ::snt Yes, I understand. Dont have a direct line to my government but assume that they will figure it out
# ::tokens ["Yes", ",", "I", "understand", ".", "Do", "nt", "have", "a", "direct", "line", "to", "my", "government", "but", "assume", "that", "they", "will", "figure", "it", "out"]
# ::lemmas ["yes", ",", "i", "understand", ".", "do", "not", "have", "a", "direct", "line", "to", "my", "government", "but", "assume", "that", "they", "will", "figure", "it", "out"]
(c41-11 / multi-sentence
        :snt1 (c41-7 / understand-01
                     :ARG0 (c41-10 / i))
        :snt2 (c41-3 / contrast-01
                     :ARG1 (c41-4 / have-03
                                  :ARG0 (c41-5 / i)
                                  :ARG1 (c41-8 / line
                                               :ARG1-of (c41-0 / direct-02)
                                               :destination (c41-9 / government-organization
                                                                   :ARG0-of (c41-12 / govern-01
                                                                                    :ARG1 c41-5)))
                                  :polarity -)
                     :ARG2 (c41-1 / assume-02
                                  :ARG0 c41-5
                                  :ARG1 (c41-2 / figure-out-05
                                               :ARG0 c41-9
                                               :ARG1 (c41-6 / it)))))

# ::snt That's great. I'm happy for you that you took it. That's your choice.
# ::tokens ["That", "'s", "great", ".", "I", "'m", "happy", "for", "you", "that", "you", "took", "it", ".", "That", "'s", "your", "choice", "."]
# ::lemmas ["that", "be", "great", ".", "i", "be", "happy", "for", "you", "that", "you", "take", "it", ".", "that", "be", "your", "choice", "."]
(c42-8 / multi-sentence
       :snt1 (c42-6 / great
                    :domain (c42-5 / that))
       :snt2 (c42-3 / happy-01
                    :ARG0 (c42-2 / take-01
                                 :ARG0 (c42-9 / you)
                                 :ARG1 (c42-7 / it))
                    :ARG1 (c42-4 / i))
       :snt3 (c42-0 / choose-01
                    :ARG0 (c42-10 / you)
                    :ARG1 (c42-1 / that)))

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c43-0 / yes)

# ::snt Once % of the population is vaccinated, it wont matter, so everyone saying well be back at square one is just wrong.
# ::tokens ["Once", "%", "of", "the", "population", "is", "vaccinated", ",", "it", "wo", "nt", "matter", ",", "so", "everyone", "saying", "well", "be", "back", "at", "square", "one", "is", "just", "wrong", "."]
# ::lemmas ["once", "%", "of", "the", "population", "be", "vaccinate", ",", "it", "will", "not", "matter", ",", "so", "everyone", "say", "well", "be", "back", "at", "square", "one", "be", "just", "wrong", "."]
(c44-2 / cause-01
       :ARG0 (c44-10 / matter-01
                     :ARG1 (c44-4 / vaccinate-01
                                  :ARG1 (c44-9 / percentage-entity
                                               :ARG3-of (c44-1 / include-91
                                                               :ARG2 (c44-5 / populate-01))
                                               :value 1))
                     :polarity -)
       :ARG1 (c44-3 / wrong-04
                    :ARG1 (c44-12 / everyone
                                  :ARG0-of (c44-0 / say-01
                                                  :ARG1 (c44-7 / be-located-at-91
                                                               :ARG1 c44-12
                                                               :ARG2 (c44-8 / square-one)
                                                               :mod (c44-11 / well))))
                    :mod (c44-6 / just)))

# ::snt Yaay, you should have to have one to leave your house!
# ::tokens ["Yaay", ",", "you", "should", "have", "to", "have", "one", "to", "leave", "your", "house", "!"]
# ::lemmas ["Yaay", ",", "you", "should", "have", "to", "have", "one", "to", "leave", "your", "house", "!"]
(c45-3 / recommend-01
       :ARG1 (c45-2 / obligate-01
                    :ARG1 (c45-6 / you)
                    :ARG2 (c45-0 / have-03
                                 :ARG0 c45-6
                                 :ARG1 (c45-1 / one)
                                 :purpose (c45-4 / leave-11
                                                 :ARG0 c45-1
                                                 :ARG1 (c45-5 / house
                                                              :poss c45-6))))
       :mod (c45-7 / yay
                   :mode expressive))

# ::snt Yup.
# ::tokens ["Yup", "."]
# ::lemmas ["yup", "."]
(c46-0 / yup)

# ::snt Yes! Already have them in NY
# ::tokens ["Yes", "!", "Already", "have", "them", "in", "NY"]
# ::lemmas ["yes", "!", "already", "have", "they", "in", "NY"]
(c47-4 / multi-sentence
       :snt1 (c47-6 / yes
                    :mode expressive)
       :snt2 (c47-2 / have-03
                    :ARG1 (c47-3 / they)
                    :time (c47-1 / already)
                    :location (c47-0 / state
                                     :name (c47-5 / name
                                                  :op1 "NY"))))

# ::snt Ive been thinking about what you said and I absolutely disagree with your statement. Every living thing has value, all of it. We have the intelligence and empathy to take care and value all of it. Its time to step up and be counted not cower and run! Be brave. Be kind.
# ::tokens ["I", "ve", "been", "thinking", "about", "what", "you", "said", "and", "I", "absolutely", "disagree", "with", "your", "statement", ".", "Every", "living", "thing", "has", "value", ",", "all", "of", "it", ".", "We", "have", "the", "intelligence", "and", "empathy", "to", "take", "care", "and", "value", "all", "of", "it", ".", "Its", "time", "to", "step", "up", "and", "be", "counted", "not", "cower", "and", "run", "!", "Be", "brave", ".", "Be", "kind", "."]
# ::lemmas ["i", "ve", "be", "think", "about", "what", "you", "say", "and", "i", "absolutely", "disagree", "with", "your", "statement", ".", "every", "live", "thing", "have", "value", ",", "all", "of", "it", ".", "we", "have", "the", "intelligence", "and", "empathy", "to", "take", "care", "and", "value", "all", "of", "it", ".", "its", "time", "to", "step", "up", "and", "be", "count", "not", "cower", "and", "run", "!", "be", "brave", ".", "be", "kind", "."]
(c48-12 / multi-sentence
        :snt1 (c48-25 / and
                      :op1 (c48-10 / think-01
                                   :ARG0 (c48-4 / i)
                                   :ARG1 (c48-7 / thing
                                                :ARG1-of (c48-16 / say-01
                                                                 :ARG0 (c48-23 / you))))
                      :op2 (c48-0 / disagree-01
                                  :ARG0 c48-4
                                  :ARG1 c48-23
                                  :ARG2 (c48-13 / thing
                                                :ARG1-of (c48-31 / state-01
                                                                 :ARG0 c48-23))
                                  :degree (c48-15 / absolute)))
        :snt2 (c48-9 / value-02
                     :ARG0 (c48-6 / we)
                     :ARG1 (c48-20 / thing
                                   :mod (c48-17 / every)
                                   :ARG0-of (c48-29 / live-01)))
        :snt3 (c48-26 / have-03
                      :ARG0 (c48-14 / we)
                      :ARG1 (c48-1 / and
                                   :op1 (c48-19 / intelligent-01
                                                :ARG1 c48-14)
                                   :op2 (c48-27 / empathy
                                                :ARG0-of (c48-5 / cause-01
                                                                :ARG1 (c48-2 / care-03
                                                                             :ARG0 c48-14)))))
        :snt4 (c48-8 / contrast-01
                     :ARG1 (c48-21 / step-01
                                   :ARG1 c48-14
                                   :direction (c48-28 / up))
                     :ARG2 (c48-22 / count-01
                                   :ARG1 c48-14))
        :ARG2 (c48-33 / and
                      :op1 (c48-18 / cower-01
                                   :ARG0 c48-14
                                   :polarity -)
                      :op2 (c48-11 / run-02
                                   :ARG0 c48-14
                                   :polarity -))
        :snt5 (c48-3 / and
                     :op1 (c48-30 / brave-02
                                  :ARG0 (c48-24 / you))
                     :op2 (c48-32 / kind-01
                                  :ARG0 c48-24)))

# ::snt Yay
# ::tokens ["Yay"]
# ::lemmas ["yay"]
(c49-0 / yay)

# ::snt Yay
# ::tokens ["Yay"]
# ::lemmas ["yay"]
(c50-0 / yay)
