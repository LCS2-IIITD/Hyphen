# ::snt Thats Johnson &amp; Johnson heehee
# ::tokens ["That", "s", "Johnson", "&", "amp", ";", "Johnson", "heehee"]
# ::lemmas ["that", "s", "Johnson", "&", "amp", ";", "Johnson", "heehee"]
(c1-0 / and
      :op1 (c1-2 / that
                 :mod (c1-1 / company
                            :name (c1-5 / name
                                        :op1 "Johnson"
                                        :op2 "&"
                                        :op3 "amp")))
      :op2 (c1-4 / person
                 :name (c1-3 / name
                             :op1 "Johnson"
                             :op2 "heehee")))

# ::snt Is that one for stupids ?
# ::tokens ["Is", "that", "one", "for", "stupids", "?"]
# ::lemmas ["be", "that", "one", "for", "stupid", "?"]
(c2-4 / benefit-01
      :polarity (c2-1 / amr-unknown)
      :ARG0 (c2-2 / one
                  :mod (c2-3 / that))
      :ARG1 (c2-0 / stupid))

# ::snt Pfizer gang or dont bang
# ::tokens ["Pfizer", "gang", "or", "do", "nt", "bang"]
# ::lemmas ["Pfizer", "gang", "or", "do", "not", "bang"]
(c3-0 / amr-choice
      :op1 (c3-3 / gang
                 :mod (c3-1 / company
                            :name (c3-4 / name
                                        :op1 "Pfizer")))
      :op2 (c3-2 / bang
                 :polarity -))
