# ::snt Aight bet
# ::tokens ["Aight", "bet"]
# ::lemmas ["aight", "bet"]
(c1-0 / bet-01
      :ARG1-of (c1-1 / ight-09))

# ::snt When I get home Im playing ranked with you
# ::tokens ["When", "I", "get", "home", "I", "m", "playing", "ranked", "with", "you"]
# ::lemmas ["when", "i", "get", "home", "i", "m", "play", "rank", "with", "you"]
(c2-4 / play-01
      :ARG0 (c2-0 / i)
      :ARG3 (c2-5 / you)
      :manner (c2-2 / rank-01
                    :ARG1 c2-0)
      :time (c2-3 / get-05
                  :ARG1 c2-0
                  :ARG2 (c2-1 / home)))

# ::snt I just got off made it plat finally lmao
# ::tokens ["I", "just", "got", "off", "made", "it", "plat", "finally", "lmao"]
# ::lemmas ["i", "just", "get", "off", "make", "it", "plat", "finally", "lmao"]
(c3-1 / and
      :op1 (c3-5 / get-off-23
                 :ARG1 (c3-7 / i)
                 :mod (c3-6 / just))
      :op2 (c3-3 / platitude-00
                 :ARG0 c3-7
                 :time (c3-2 / final)
                 :mod (c3-4 / laugh-01
                            :ARG0 c3-7
                            :manner (c3-0 / loud)
                            :mode expressive)))

# ::snt I just played like games half an hour ago
# ::tokens ["I", "just", "played", "like", "games", "half", "an", "hour", "ago"]
# ::lemmas ["i", "just", "play", "like", "game", "half", "an", "hour", "ago"]
(c4-7 / play-01
      :ARG0 (c4-0 / i)
      :time (c4-5 / before
                  :op1 (c4-8 / now)
                  :quant (c4-2 / temporal-quantity
                               :unit (c4-1 / hour)
                               :quant 0.5))
      :mod (c4-6 / just)
      :ARG1-of (c4-3 / resemble-01
                     :ARG2 (c4-4 / game)))

# ::snt Apex...
# ::tokens ["Apex", "..."]
# ::lemmas ["apex", "..."]
(c5-0 / pex)

# ::snt Yeah good question... why are you still awake lmao
# ::tokens ["Yeah", "good", "question", "...", "why", "are", "you", "still", "awake", "lmao"]
# ::lemmas ["yeah", "good", "question", "...", "why", "be", "you", "still", "awake", "lmao"]
(c6-2 / and
      :op1 (c6-5 / question-01
                 :ARG1-of (c6-8 / good-02)
                 :mod (c6-10 / yeah))
      :op2 (c6-4 / cause-01
                 :ARG0 (c6-11 / amr-unknown)
                 :ARG1 (c6-1 / awake-03
                             :ARG1 (c6-3 / you)
                             :mod (c6-0 / still))
                 :mod (c6-6 / laugh-01
                            :ARG0 (c6-9 / i)
                            :manner (c6-7 / loud)
                            :mode expressive)))

# ::snt Kayla its am why are you still awake???
# ::tokens ["Kayla", "its", "am", "why", "are", "you", "still", "awake", "?", "?", "?"]
# ::lemmas ["kayla", "its", "am", "why", "be", "you", "still", "awake", "?", "?", "?"]
(c7-0 / say-01
      :ARG1 (c7-1 / awake-03
                  :ARG1 (c7-4 / person
                              :name (c7-5 / name
                                          :op1 "Kayla"))
                  :mod (c7-3 / still)
                  :ARG1-of (c7-2 / cause-01
                                 :ARG0 (c7-6 / amr-unknown)))
      :ARG2 c7-4)

# ::snt Wtf
# ::tokens ["Wtf"]
# ::lemmas ["wtf"]
(c8-0 / amr-unknown
      :mod (c8-1 / fuck))
