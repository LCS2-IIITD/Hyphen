# ::snt You brave..lettuce know how it goes. Want to see a few take it first.
# ::tokens ["You", "brave", "..", "lettuce", "know", "how", "it", "goes", ".", "Want", "to", "see", "a", "few", "take", "it", "first", "."]
# ::lemmas ["you", "brave", "..", "lettuce", "know", "how", "it", "go", ".", "want", "to", "see", "a", "few", "take", "it", "first", "."]
(c1-11 / multi-sentence
       :snt1 (c1-9 / brave-02
                   :ARG0 (c1-13 / you))
       :snt2 (c1-12 / know-01
                    :ARG0 (c1-14 / you)
                    :ARG1 (c1-6 / thing
                                :manner-of (c1-7 / go-09
                                                 :ARG1 (c1-10 / it))))
       :snt3 (c1-2 / want-01
                   :ARG0 (c1-4 / i)
                   :ARG1 (c1-0 / see-01
                               :ARG0 c1-4
                               :ARG1 (c1-3 / take-01
                                           :ARG0 (c1-8 / person
                                                       :quant (c1-1 / few))
                                           :ARG1 c1-10
                                           :ord (c1-5 / ordinal-entity
                                                      :value 1)))))

# ::snt Nah..my tweets get my foul mouth
# ::tokens ["Nah", "..", "my", "tweets", "get", "my", "foul", "mouth"]
# ::lemmas ["Nah", "..", "my", "tweet", "get", "my", "foul", "mouth"]
(c2-6 / multi-sentence
      :snt1 (c2-7 / nah)
      :snt2 (c2-4 / get-01
                  :ARG0 (c2-3 / thing
                              :ARG1-of (c2-2 / tweet-01
                                             :ARG0 (c2-5 / i)))
                  :ARG1 (c2-1 / mouth
                              :ARG1-of (c2-0 / foul-01)
                              :part-of c2-5)))

# ::snt Just sarcasm No need for foul language
# ::tokens ["Just", "sarcasm", "No", "need", "for", "foul", "language"]
# ::lemmas ["just", "sarcasm", "no", "need", "for", "foul", "language"]
(c3-1 / and
      :op1 (c3-0 / sarcasm
                 :mod (c3-4 / just))
      :op2 (c3-5 / need-01
                 :ARG1 (c3-3 / language
                             :mod (c3-2 / foul))
                 :polarity -))

# ::snt I am in healthcare but I will not get it unless they handcuff me literally.
# ::tokens ["I", "am", "in", "healthcare", "but", "I", "will", "not", "get", "it", "unless", "they", "handcuff", "me", "literally", "."]
# ::lemmas ["i", "be", "in", "healthcare", "but", "i", "will", "not", "get", "it", "unless", "they", "handcuff", "i", "literally", "."]
(c4-0 / contrast-01
      :ARG1 (c4-6 / i
                  :prep-in (c4-1 / healthcare))
      :ARG2 (c4-4 / get-01
                  :ARG0 c4-6
                  :ARG1 c4-1
                  :condition (c4-5 / handcuff-01
                                   :ARG0 (c4-2 / they)
                                   :ARG1 c4-6
                                   :manner (c4-3 / literal))
                  :polarity -))

# ::snt So Fred is this sarcasm? I don't follow you to know... don't come at me with bullshit
# ::tokens ["So", "Fred", "is", "this", "sarcasm", "?", "I", "do", "n't", "follow", "you", "to", "know", "...", "do", "n't", "come", "at", "me", "with", "bullshit"]
# ::lemmas ["so", "Fred", "be", "this", "sarcasm", "?", "i", "do", "not", "follow", "you", "to", "know", "...", "do", "not", "come", "at", "i", "with", "bullshit"]
(c5-10 / multi-sentence
       :snt1 (c5-0 / sarcasm
                   :domain (c5-9 / person
                                 :name (c5-11 / name
                                              :op1 "Fred"))
                   :polarity (c5-1 / amr-unknown)
                   :mod (c5-7 / this)
                   :polarity (c5-13 / amr-unknown))
       :snt2 (c5-3 / follow-02
                   :ARG0 (c5-4 / i)
                   :ARG1 (c5-12 / you)
                   :purpose (c5-2 / know-01
                                  :ARG0 c5-12)
                   :polarity -)
       :snt3 (c5-5 / come-01
                   :ARG1 c5-12
                   :polarity -
                   :mode imperative)
       :ARG4 (c5-6 / i)
       :manner (c5-8 / bullshit-01
                     :ARG0 c5-12))

# ::snt Ok Paul don't get a shot. you don't know me, so don't judge me
# ::tokens ["Ok", "Paul", "do", "n't", "get", "a", "shot", ".", "you", "do", "n't", "know", "me", ",", "so", "do", "n't", "judge", "me"]
# ::lemmas ["ok", "Paul", "do", "not", "get", "a", "shot", ".", "you", "do", "not", "know", "i", ",", "so", "do", "not", "judge", "i"]
(c7-8 / multi-sentence
      :snt1 (c7-5 / get-01
                  :ARG0 (c7-7 / person
                              :name (c7-9 / name
                                          :op1 "Paul"))
                  :ARG1 (c7-0 / shoot-01)
                  :mod (c7-4 / ok)
                  :polarity -)
      :snt2 (c7-1 / know-02
                  :ARG0 (c7-10 / you)
                  :ARG1 (c7-2 / i)
                  :ARG0-of (c7-3 / cause-01
                                 :ARG1 (c7-6 / judge-01
                                             :ARG0 c7-10
                                             :ARG1 c7-2
                                             :polarity -
                                             :mode imperative))
                  :polarity -))

# ::snt This vaccine stuff has got me all fired up. It is NOT good for YOU! It is poisons all mixed up to do what? Protect? From what, for how long?
# ::tokens ["This", "vaccine", "stuff", "has", "got", "me", "all", "fired", "up", ".", "It", "is", "NOT", "good", "for", "YOU", "!", "It", "is", "poisons", "all", "mixed", "up", "to", "do", "what", "?", "Protect", "?", "From", "what", ",", "for", "how", "long", "?"]
# ::lemmas ["this", "vaccine", "stuff", "have", "get", "i", "all", "fire", "up", ".", "it", "be", "not", "good", "for", "you", "!", "it", "be", "poison", "all", "mix", "up", "to", "do", "what", "?", "protect", "?", "from", "what", ",", "for", "how", "long", "?"]
(c8-8 / multi-sentence
      :snt1 (c8-7 / get-04
                  :ARG0 (c8-11 / stuff
                               :mod (c8-5 / vaccine)
                               :mod (c8-6 / this))
                  :ARG1 (c8-17 / fire-up-02
                               :ARG0 (c8-3 / i)
                               :mod (c8-16 / all)))
      :snt2 (c8-15 / good-04
                   :ARG1 (c8-12 / it)
                   :ARG2 (c8-14 / you)
                   :polarity -)
      :snt3 (c8-20 / poison-02
                   :mod (c8-10 / all)
                   :ARG1-of (c8-18 / mix-up-03
                                   :purpose (c8-0 / do-02
                                                  :ARG1 (c8-1 / amr-unknown))))
      :snt4 (c8-19 / protect-01
                   :polarity (c8-21 / amr-unknown)
                   :snt5-of c8-8)
      :polarity (c8-2 / amr-unknown)
      :time (c8-13 / after
                   :op1 (c8-9 / now)
                   :quant (c8-4 / amr-unknown)))

# ::snt Yes ma'am..in days
# ::tokens ["Yes", "ma'am", "..", "in", "days"]
# ::lemmas ["yes", "ma'am", "..", "in", "days"]
(c9-2 / multi-sentence
      :snt1 (c9-3 / yes)
      :snt2 (c9-0 / be-temporally-at-91
                  :ARG2 (c9-1 / day)))

# ::snt Good girl! Now you have to get the second one?
# ::tokens ["Good", "girl", "!", "Now", "you", "have", "to", "get", "the", "second", "one", "?"]
# ::lemmas ["good", "girl", "!", "now", "you", "have", "to", "get", "the", "second", "one", "?"]
(c10-7 / multi-sentence
       :snt1 (c10-6 / girl
                    :ARG1-of (c10-2 / good-02))
       :snt2 (c10-5 / obligate-01
                    :ARG1 (c10-9 / you)
                    :ARG2 (c10-0 / get-01
                                 :ARG0 c10-9
                                 :ARG1 (c10-4 / one
                                              :ord (c10-1 / ordinal-entity
                                                          :value 2)))
                    :time (c10-8 / now)
                    :polarity (c10-3 / amr-unknown)))

# ::snt Use them for good
# ::tokens ["Use", "them", "for", "good"]
# ::lemmas ["use", "they", "for", "good"]
(c12-3 / use-01
       :ARG0 (c12-2 / you)
       :ARG1 (c12-1 / they)
       :ARG2 (c12-0 / good-02)
       :mode imperative)

# ::snt And what will you do with your new powers?
# ::tokens ["And", "what", "will", "you", "do", "with", "your", "new", "powers", "?"]
# ::lemmas ["and", "what", "will", "you", "do", "with", "your", "new", "power", "?"]
(c13-1 / and
       :op2 (c13-0 / do-02
                   :ARG0 (c13-4 / you)
                   :ARG1 (c13-5 / amr-unknown)
                   :ARG2 (c13-2 / power
                                :poss c13-4
                                :ARG1-of (c13-3 / new-01))))

# ::snt I not yet lol
# ::tokens ["I", "not", "yet", "lol"]
# ::lemmas ["i", "not", "yet", "lol"]
(c14-2 / be-temporally-at-91
       :ARG1 (c14-3 / i)
       :ARG2 (c14-4 / yet)
       :ARG2-of (c14-0 / laugh-01
                       :ARG0 c14-3
                       :manner (c14-1 / loud)
                       :mode expressive)
       :polarity -)

# ::snt Ha ha..no. we're all essential
# ::tokens ["Ha", "ha", "..", "no", ".", "we", "'re", "all", "essential"]
# ::lemmas ["ha", "ha", "..", "no", ".", "we", "be", "all", "essential"]
(c15-3 / essential
       :domain (c15-0 / we
                      :mod (c15-1 / all))
       :mod (c15-2 / ha
                   :mode expressive))

# ::snt Cool beans how are they doing ? Do you take a note from your employer stating that your an essential employee
# ::tokens ["Cool", "beans", "how", "are", "they", "doing", "?", "Do", "you", "take", "a", "note", "from", "your", "employer", "stating", "that", "your", "an", "essential", "employee"]
# ::lemmas ["cool", "bean", "how", "be", "they", "do", "?", "do", "you", "take", "a", "note", "from", "your", "employer", "state", "that", "your", "an", "essential", "employee"]
(c16-9 / multi-sentence
       :snt1 (c16-3 / cool-04
                    :ARG1 (c16-7 / bean))
       :snt2 (c16-0 / do-02
                    :ARG0 (c16-6 / they)
                    :ARG1 (c16-2 / amr-unknown))
       :snt3 (c16-10 / note-01
                     :ARG0 (c16-8 / person
                                  :ARG0-of (c16-12 / employ-01
                                                   :ARG1 (c16-11 / you)))
                     :ARG1 (c16-1 / state-01
                                  :ARG0 c16-8
                                  :ARG1 (c16-4 / employ-01
                                               :ARG1 c16-11
                                               :mod (c16-5 / essential)))
                     :ARG2 c16-11))

# ::snt I require my staff to have to wear mask to
# ::tokens ["I", "require", "my", "staff", "to", "have", "to", "wear", "mask", "to"]
# ::lemmas ["i", "require", "my", "staff", "to", "have", "to", "wear", "mask", "to"]
(c17-3 / require-01
       :ARG0 (c17-5 / i)
       :ARG1 (c17-2 / obligate-01
                    :ARG1 (c17-4 / person
                                 :ARG2-of (c17-0 / staff-01
                                                 :ARG0 c17-5))
                    :ARG2 (c17-1 / wear-01
                                 :ARG0 c17-4
                                 :ARG1 (c17-6 / mask))))

# ::snt I got mine at the pharmacy at my work.
# ::tokens ["I", "got", "mine", "at", "the", "pharmacy", "at", "my", "work", "."]
# ::lemmas ["i", "get", "mine", "at", "the", "pharmacy", "at", "my", "work", "."]
(c18-3 / get-01
       :ARG0 (c18-4 / i)
       :ARG1 (c18-1 / thing
                    :poss c18-4)
       :location (c18-2 / pharmacy
                        :location (c18-0 / work-01
                                         :ARG0 c18-4)))

# ::snt Oh I am waiting for them to tell me I can get it . Hope this shit goes away
# ::tokens ["Oh", "I", "am", "waiting", "for", "them", "to", "tell", "me", "I", "can", "get", "it", ".", "Hope", "this", "shit", "goes", "away"]
# ::lemmas ["oh", "i", "be", "wait", "for", "they", "to", "tell", "i", "i", "can", "get", "it", ".", "hope", "this", "shit", "go", "away"]
(c19-13 / multi-sentence
        :snt1 (c19-3 / wait-01
                     :ARG1 (c19-12 / i)
                     :ARG2 (c19-9 / tell-01
                                  :ARG0 (c19-4 / they)
                                  :ARG1 (c19-10 / possible-01
                                                :ARG1 (c19-11 / get-01
                                                              :ARG0 c19-12
                                                              :ARG1 (c19-5 / it)))
                                  :ARG2 c19-12)
                     :mod (c19-8 / oh
                                 :mode expressive))
        :snt2 (c19-6 / hope-01
                     :ARG0 (c19-7 / i)
                     :ARG1 (c19-14 / go-01
                                   :ARG1 (c19-0 / shit
                                                :mod (c19-2 / this))
                                   :direction (c19-1 / away))))

# ::snt And yes I need a second shot in days
# ::tokens ["And", "yes", "I", "need", "a", "second", "shot", "in", "days"]
# ::lemmas ["and", "yes", "i", "need", "a", "second", "shot", "in", "days"]
(c20-2 / and
       :op2 (c20-8 / need-01
                   :ARG0 (c20-6 / i)
                   :ARG1 (c20-0 / shoot-02
                                :ord (c20-3 / ordinal-entity
                                            :value 2))
                   :time (c20-9 / after
                                :op1 (c20-5 / now)
                                :quant (c20-7 / multiple
                                              :op1 (c20-4 / temporal-quantity
                                                          :unit (c20-1 / day)
                                                          :quant 1)))))

# ::snt My job requires us to wear a mask. So I'll keep wearing mine. Most places request folks to wear one so I will. I made the choice to get the shot.
# ::tokens ["My", "job", "requires", "us", "to", "wear", "a", "mask", ".", "So", "I", "'ll", "keep", "wearing", "mine", ".", "Most", "places", "request", "folks", "to", "wear", "one", "so", "I", "will", ".", "I", "made", "the", "choice", "to", "get", "the", "shot", "."]
# ::lemmas ["my", "job", "require", "we", "to", "wear", "a", "mask", ".", "so", "i", "'ll", "keep", "wear", "mine", ".", "most", "place", "request", "folk", "to", "wear", "one", "so", "i", "will", ".", "i", "make", "the", "choice", "to", "get", "the", "shot", "."]
(c21-10 / multi-sentence
        :snt1 (c21-7 / require-01
                     :ARG0 (c21-20 / job
                                   :poss (c21-3 / i))
                     :ARG1 (c21-5 / wear-01
                                  :ARG0 (c21-12 / we)
                                  :ARG1 (c21-19 / mask))
                     :ARG2 c21-12)
        :snt2 (c21-22 / keep-02
                      :ARG0 (c21-14 / i)
                      :ARG1 (c21-2 / wear-01
                                   :ARG0 c21-14
                                   :ARG1 (c21-16 / mask
                                                 :poss c21-14)))
        :snt3 (c21-6 / request-01
                     :ARG0 (c21-21 / place
                                   :quant (c21-9 / most))
                     :ARG1 (c21-1 / wear-01
                                  :ARG0 (c21-18 / folk)
                                  :ARG1 (c21-11 / mask
                                                :poss c21-18))
                     :ARG2 c21-14
                     :ARG0-of (c21-4 / cause-01
                                     :ARG1 (c21-17 / wear-01
                                                   :ARG0 c21-14
                                                   :ARG1 c21-11)))
        :snt4 (c21-0 / choose-01
                     :ARG0 (c21-15 / i)
                     :ARG1 (c21-8 / get-01
                                  :ARG0 c21-15
                                  :ARG1 (c21-13 / shoot-01))))

# ::snt Thats what we do . Just playing it safe .
# ::tokens ["That", "s", "what", "we", "do", ".", "Just", "playing", "it", "safe", "."]
# ::lemmas ["that", "s", "what", "we", "do", ".", "just", "play", "it", "safe", "."]
(c22-7 / multi-sentence
       :snt1 (c22-0 / do-02
                    :ARG0 (c22-3 / we)
                    :ARG1 (c22-4 / that))
       :snt2 (c22-6 / play-01
                    :ARG0 (c22-8 / you)
                    :ARG1 (c22-2 / it)
                    :manner (c22-1 / safe-01)
                    :mod (c22-5 / just)))

# ::snt I go to work and Im the CEO of home company on the building I come home I go to the store once a week and I go to the post office in the morning to get the mail from my business thats the extent of what I do and when Im at the office building I wear my mask except in my office
# ::tokens ["I", "go", "to", "work", "and", "I", "m", "the", "CEO", "of", "home", "company", "on", "the", "building", "I", "come", "home", "I", "go", "to", "the", "store", "once", "a", "week", "and", "I", "go", "to", "the", "post", "office", "in", "the", "morning", "to", "get", "the", "mail", "from", "my", "business", "that", "s", "the", "extent", "of", "what", "I", "do", "and", "when", "I", "m", "at", "the", "office", "building", "I", "wear", "my", "mask", "except", "in", "my", "office"]
# ::lemmas ["i", "go", "to", "work", "and", "i", "m", "the", "CEO", "of", "home", "company", "on", "the", "building", "i", "come", "home", "i", "go", "to", "the", "store", "once", "a", "week", "and", "i", "go", "to", "the", "post", "office", "in", "the", "morning", "to", "get", "the", "mail", "from", "my", "business", "that", "s", "the", "extent", "of", "what", "i", "do", "and", "when", "i", "m", "at", "the", "office", "building", "i", "wear", "my", "mask", "except", "in", "my", "office"]
(c23-29 / and
        :op1 (c23-20 / and
                     :op1 (c23-17 / go-02
                                  :ARG0 (c23-6 / i)
                                  :ARG4 (c23-11 / work-01
                                                :ARG0 c23-6))
                     :op2 (c23-31 / have-org-role-91
                                  :ARG0 c23-6
                                  :ARG1 (c23-10 / company
                                                :mod (c23-5 / home)
                                                :location (c23-34 / building))
                                  :ARG2 (c23-14 / officer
                                                :mod (c23-0 / chief)
                                                :mod (c23-22 / executive))))
        :op2 (c23-13 / come-01
                     :ARG1 c23-6
                     :ARG4 (c23-8 / home))
        :op3 (c23-27 / go-02
                     :ARG0 c23-6
                     :ARG4 (c23-21 / store)
                     :frequency (c23-16 / rate-entity-91
                                        :ARG2 (c23-15 / temporal-quantity
                                                      :unit (c23-19 / week)
                                                      :quant 1)
                                        :ARG1 1))
        :op4 (c23-2 / go-02
                    :ARG0 c23-6
                    :ARG4 (c23-32 / office
                                  :mod (c23-35 / post))
                    :time (c23-1 / date-entity
                                 :dayperiod (c23-18 / morning))
                    :purpose (c23-25 / get-01
                                     :ARG0 c23-6
                                     :ARG1 (c23-30 / mail)
                                     :ARG2 (c23-28 / business
                                                   :poss c23-6)))
        :op5 (c23-3 / and
                    :op1 (c23-33 / extent
                                 :domain (c23-12 / thing
                                                 :ARG1-of (c23-26 / do-02
                                                                  :ARG0 c23-6)))
                    :op2 (c23-7 / wear-01
                                :ARG0 c23-6
                                :ARG1 (c23-24 / mask
                                              :poss c23-6)
                                :ARG2-of (c23-4 / except-01
                                                :ARG1 (c23-9 / office
                                                             :poss c23-6))
                                :time (c23-23 / be-located-at-91
                                              :ARG1 c23-6
                                              :ARG2 c23-34))))

# ::snt I will wear my mask until they tell us different
# ::tokens ["I", "will", "wear", "my", "mask", "until", "they", "tell", "us", "different"]
# ::lemmas ["i", "will", "wear", "my", "mask", "until", "they", "tell", "we", "different"]
(c24-1 / wear-01
       :ARG0 (c24-5 / i)
       :ARG1 (c24-6 / mask
                    :poss c24-5)
       :time (c24-3 / until
                    :op1 (c24-4 / tell-01
                                :ARG0 (c24-2 / they)
                                :ARG1 (c24-7 / thing
                                             :ARG1-of (c24-0 / differ-02))
                                :ARG2 (c24-8 / we))))

# ::snt Do you still have to wear a mask thou? Or you still need the nd shot ?
# ::tokens ["Do", "you", "still", "have", "to", "wear", "a", "mask", "thou", "?", "Or", "you", "still", "need", "the", "nd", "shot", "?"]
# ::lemmas ["do", "you", "still", "have", "to", "wear", "a", "mask", "thou", "?", "or", "you", "still", "need", "the", "nd", "shot", "?"]
(c25-9 / multi-sentence
       :snt1 (c25-5 / obligate-01
                    :polarity (c25-1 / amr-unknown)
                    :ARG1 (c25-11 / you)
                    :ARG2 (c25-3 / wear-01
                                 :ARG0 c25-11
                                 :ARG1 (c25-2 / mask))
                    :mod (c25-0 / still))
       :snt2 (c25-4 / or
                    :op2 (c25-10 / need-01
                                 :ARG0 (c25-12 / you)
                                 :ARG1 (c25-8 / product
                                              :name (c25-6 / name
                                                           :op1 "ND"
                                                           :op2 "Shot"))
                                 :mod (c25-7 / still)
                                 :polarity c25-1)))

# ::snt Not yet..I was told my arm would be sore and I might get a head ache
# ::tokens ["Not", "yet", "..", "I", "was", "told", "my", "arm", "would", "be", "sore", "and", "I", "might", "get", "a", "head", "ache"]
# ::lemmas ["not", "yet", "..", "i", "be", "tell", "my", "arm", "would", "be", "sore", "and", "i", "might", "get", "a", "head", "ache"]
(c26-7 / multi-sentence
       :snt1 (c26-8 / yet
                    :polarity -)
       :snt2 (c26-4 / tell-01
                    :ARG1 (c26-2 / and
                                 :op1 (c26-0 / sore-03
                                             :ARG1 (c26-9 / arm
                                                          :part-of (c26-6 / i)))
                                 :op2 (c26-5 / possible-01
                                             :ARG1 (c26-1 / ache-01
                                                          :ARG0 c26-6
                                                          :ARG1 (c26-3 / head))))
                    :ARG2 c26-6))

# ::snt Nice
# ::tokens ["Nice"]
# ::lemmas ["nice"]
(c27-0 / nice-01)

# ::snt Good luck
# ::tokens ["Good", "luck"]
# ::lemmas ["good", "luck"]
(c28-1 / luck
       :ARG1-of (c28-0 / good-02))

# ::snt Thats are good news! Wish I had mine
# ::tokens ["That", "s", "are", "good", "news", "!", "Wish", "I", "had", "mine"]
# ::lemmas ["that", "s", "be", "good", "news", "!", "wish", "i", "have", "mine"]
(c29-6 / multi-sentence
       :snt1 (c29-4 / good-02
                    :ARG1 (c29-7 / news
                                 :domain (c29-2 / that)))
       :snt2 (c29-0 / wish-01
                    :ARG0 (c29-5 / i)
                    :ARG1 (c29-1 / have-03
                                 :ARG0 c29-5
                                 :ARG1 (c29-3 / news
                                              :poss c29-5))))

# ::snt Good April
# ::tokens ["Good", "April"]
# ::lemmas ["Good", "April"]
(c30-0 / date-entity
       :ARG1-of (c30-1 / good-02)
       :month 4)
