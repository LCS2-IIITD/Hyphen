# ::snt yes i really hope so
# ::tokens ["yes", "i", "really", "hope", "so"]
# ::lemmas ["yes", "i", "really", "hope", "so"]
(c1-2 / hope-01
      :ARG0 (c1-1 / i)
      :ARG1 (c1-0 / so)
      :ARG1-of (c1-3 / real-04))

# ::snt Hopefully your immune systen got used to it with the first shot. My second vaccine shot was a lot chiller than the first one so let's hope it's going to be the same for you
# ::tokens ["Hopefully", "your", "immune", "systen", "got", "used", "to", "it", "with", "the", "first", "shot", ".", "My", "second", "vaccine", "shot", "was", "a", "lot", "chiller", "than", "the", "first", "one", "so", "let", "'s", "hope", "it", "'s", "going", "to", "be", "the", "same", "for", "you"]
# ::lemmas ["hopefully", "your", "immune", "systen", "got", "use", "to", "it", "with", "the", "first", "shot", ".", "my", "second", "vaccine", "shoot", "be", "a", "lot", "chill", "than", "the", "first", "one", "so", "let", "us", "hope", "it", "be", "go", "to", "be", "the", "same", "for", "you"]
(c2-11 / multi-sentence
       :snt1 (c2-10 / get-03
                    :ARG1 (c2-12 / systen
                                 :ARG1-of (c2-2 / immune-02)
                                 :poss (c2-16 / you))
                    :ARG2 (c2-21 / use-02
                                 :ARG0 c2-16
                                 :ARG1 (c2-13 / it)
                                 :ARG2 (c2-23 / shot
                                              :ord (c2-9 / ordinal-entity
                                                         :value 1)))
                    :ARG1-of (c2-19 / hope-01))
       :snt2 (c2-7 / chiller
                   :ARG2-of (c2-1 / have-degree-91
                                  :ARG1 (c2-14 / shot
                                               :poss (c2-15 / i)
                                               :ord (c2-20 / ordinal-entity
                                                           :value 2))
                                  :ARG3 (c2-18 / more
                                               :quant (c2-22 / lot))
                                  :ARG4 (c2-3 / shot
                                              :ord (c2-6 / ordinal-entity
                                                         :value 1)))
                   :ARG0-of (c2-0 / cause-01
                                  :ARG1 (c2-5 / hope-01
                                              :ARG0 (c2-8 / we)
                                              :ARG1 (c2-4 / same-01
                                                          :ARG1 c2-14
                                                          :beneficiary (c2-17 / you))))))

# ::snt you're sweet yes i'm so happy!! I truly hope it doesn't come back when i take the next shot in a few weeks
# ::tokens ["you", "'re", "sweet", "yes", "i", "'m", "so", "happy", "!", "!", "I", "truly", "hope", "it", "does", "n't", "come", "back", "when", "i", "take", "the", "next", "shot", "in", "a", "few", "weeks"]
# ::lemmas ["you", "be", "sweet", "yes", "i", "be", "so", "happy", "!", "!", "i", "truly", "hope", "it", "do", "not", "come", "back", "when", "i", "take", "the", "next", "shot", "in", "a", "few", "weeks"]
(c3-7 / multi-sentence
      :snt1 (c3-10 / sweet-03
                   :ARG1 (c3-14 / you))
      :snt2 (c3-17 / happy-01
                   :ARG1 (c3-2 / i)
                   :degree (c3-19 / so))
      :snt3 (c3-1 / hope-01
                  :ARG0 (c3-11 / i)
                  :ARG1 (c3-3 / come-01
                              :ARG1 (c3-12 / it)
                              :direction (c3-18 / back)
                              :time (c3-6 / take-01
                                          :ARG0 c3-11
                                          :ARG1 (c3-13 / shot
                                                       :mod (c3-8 / next))
                                          :time (c3-15 / after
                                                       :op1 (c3-0 / now)
                                                       :quant (c3-16 / few
                                                                     :op1 (c3-5 / temporal-quantity
                                                                                :unit (c3-4 / week)
                                                                                :quant 1))))
                              :ARG1-of (c3-9 / true-01)
                              :polarity -)))

# ::snt Yaaaaay I'm so so happy darling I was so worried, I'm happy it really was a temporary side effect
# ::tokens ["Yaaaaay", "I", "'m", "so", "so", "happy", "darling", "I", "was", "so", "worried", ",", "I", "'m", "happy", "it", "really", "was", "a", "temporary", "side", "effect"]
# ::lemmas ["yaaaaay", "i", "be", "so", "so", "happy", "darling", "i", "be", "so", "worried", ",", "i", "be", "happy", "it", "really", "be", "a", "temporary", "side", "effect"]
(c4-1 / and
      :op1 (c4-3 / happy-01
                 :ARG1 (c4-10 / i)
                 :degree (c4-0 / so))
      :op2 (c4-2 / worry-02
                 :ARG0 c4-10
                 :degree (c4-9 / so))
      :op3 (c4-6 / happy-01
                 :ARG1 c4-10
                 :ARG2 (c4-12 / effect-03
                              :ARG1 (c4-4 / it)
                              :mod (c4-5 / side)
                              :duration (c4-7 / temporary)
                              :ARG1-of (c4-8 / real-04)))
      :mod (c4-11 / yaaaaay))

# ::snt right now I don't feel anything so hopefully it's not coming back
# ::tokens ["right", "now", "I", "do", "n't", "feel", "anything", "so", "hopefully", "it", "'s", "not", "coming", "back"]
# ::lemmas ["right", "now", "i", "do", "not", "feel", "anything", "so", "hopefully", "it", "be", "not", "come", "back"]
(c5-2 / feel-01
      :ARG0 (c5-7 / i)
      :ARG1 (c5-1 / anything)
      :time (c5-8 / now
                  :mod (c5-5 / right))
      :ARG0-of (c5-3 / cause-01
                     :ARG1 (c5-4 / hopeful-03
                                 :ARG0 c5-7
                                 :ARG1 (c5-0 / come-01
                                             :ARG1 c5-1
                                             :direction (c5-6 / back)
                                             :polarity -)))
      :polarity -)

# ::snt Thank god I hope you will really get better for good
# ::tokens ["Thank", "god", "I", "hope", "you", "will", "really", "get", "better", "for", "good"]
# ::lemmas ["thank", "god", "i", "hope", "you", "will", "really", "get", "well", "for", "good"]
(c6-0 / and
      :op1 (c6-4 / thank-01
                 :ARG0 (c6-9 / i)
                 :ARG1 (c6-6 / person
                             :name (c6-11 / name
                                          :op1 "God")))
      :op2 (c6-3 / hope-01
                 :ARG0 c6-9
                 :ARG1 (c6-7 / get-03
                             :ARG1 (c6-12 / you)
                             :ARG2 (c6-2 / well-05
                                         :ARG1 c6-12
                                         :ARG2-of (c6-8 / have-degree-91
                                                        :ARG1 c6-12
                                                        :ARG3 (c6-10 / more)))
                             :ARG1-of (c6-5 / real-04)
                             :ARG1-of (c6-1 / good-02))))

# ::snt it feels better for everyday luckily
# ::tokens ["it", "feels", "better", "for", "everyday", "luckily"]
# ::lemmas ["it", "feel", "well", "for", "everyday", "luckily"]
(c7-0 / feel-05
      :ARG1 (c7-4 / it)
      :ARG2 (c7-3 / good-02
                  :ARG2-of (c7-1 / have-degree-91
                                 :ARG1 c7-4
                                 :ARG3 (c7-5 / more)))
      :ARG3 (c7-6 / everyday)
      :manner (c7-2 / lucky))

# ::snt I'm so glad to hear that darling this scare was big enough, it should really go away now sigh
# ::tokens ["I", "'m", "so", "glad", "to", "hear", "that", "darling", "this", "scare", "was", "big", "enough", ",", "it", "should", "really", "go", "away", "now", "sigh"]
# ::lemmas ["i", "be", "so", "glad", "to", "hear", "that", "darle", "this", "scare", "be", "big", "enough", ",", "it", "should", "really", "go", "away", "now", "sigh"]
(c8-3 / and
      :op1 (c8-10 / glad-02
                  :ARG0 (c8-4 / hear-01
                              :ARG0 (c8-12 / i)
                              :ARG1 (c8-11 / have-degree-91
                                           :ARG1 (c8-0 / scare-01
                                                       :mod (c8-7 / this)
                                                       :mod (c8-1 / darling))
                                           :ARG2 (c8-13 / big)
                                           :ARG3 (c8-16 / enough)))
                  :ARG1 c8-12
                  :degree (c8-2 / so))
      :op2 (c8-5 / sigh-02
                 :ARG0 c8-12
                 :ARG1 (c8-8 / recommend-01
                             :ARG1 (c8-14 / go-01
                                          :ARG1 c8-0
                                          :direction (c8-15 / away)
                                          :ARG1-of (c8-6 / real-04)
                                          :time (c8-9 / now)))))

# ::snt things have luckily been a little better, still not fully recovered but at least it's manageble now
# ::tokens ["things", "have", "luckily", "been", "a", "little", "better", ",", "still", "not", "fully", "recovered", "but", "at", "least", "it", "'s", "manageble", "now"]
# ::lemmas ["thing", "have", "luckily", "be", "a", "little", "well", ",", "still", "not", "fully", "recover", "but", "at", "least", "it", "be", "manageble", "now"]
(c9-5 / have-concession-91
      :ARG1 (c9-12 / manageble
                   :domain (c9-6 / thing)
                   :time (c9-13 / now)
                   :mod (c9-1 / at-least))
      :ARG2 (c9-11 / have-degree-91
                   :ARG1 c9-6
                   :ARG2 (c9-10 / good-02
                                :ARG1 c9-6
                                :mod (c9-8 / lucky))
                   :ARG3 (c9-3 / more
                               :quant (c9-9 / little)))
      :ARG1-of (c9-4 / cause-01
                     :ARG0 (c9-7 / recover-01
                                 :ARG1 c9-6
                                 :degree (c9-2 / full)
                                 :mod (c9-0 / still)
                                 :polarity -)))

# ::snt My poor babie how have you been feeling nowdays? Does the breathing situation got a bit better?
# ::tokens ["My", "poor", "babie", "how", "have", "you", "been", "feeling", "nowdays", "?", "Does", "the", "breathing", "situation", "got", "a", "bit", "better", "?"]
# ::lemmas ["my", "poor", "babie", "how", "have", "you", "be", "feel", "nowday", "?", "do", "the", "breathing", "situation", "get", "a", "bit", "well", "?"]
(c10-12 / multi-sentence
        :snt1 (c10-4 / feel-01
                     :ARG0 (c10-14 / you)
                     :ARG1 (c10-2 / amr-unknown)
                     :time (c10-9 / today))
        :snt2 (c10-10 / get-03
                      :ARG1 (c10-0 / situation
                                   :mod (c10-13 / breathe-01))
                      :ARG2 (c10-8 / have-degree-91
                                   :ARG1 c10-0
                                   :ARG2 (c10-3 / good-02
                                                :ARG1 c10-0)
                                   :ARG3 (c10-5 / more
                                                :quant (c10-1 / bit)))
                      :polarity (c10-15 / amr-unknown))
        :snt3 (c10-7 / babie
                     :mod (c10-11 / poor)
                     :poss (c10-6 / i)))

# ::snt yeah i've heard that as well, i've been feeling so shit since the first shot so i might not even be able to take a second tbh
# ::tokens ["yeah", "i", "'ve", "heard", "that", "as", "well", ",", "i", "'ve", "been", "feeling", "so", "shit", "since", "the", "first", "shot", "so", "i", "might", "not", "even", "be", "able", "to", "take", "a", "second", "tbh"]
# ::lemmas ["yeah", "i", "'ve", "hear", "that", "as", "well", ",", "i", "'ve", "be", "feel", "so", "shit", "since", "the", "first", "shot", "so", "i", "might", "not", "even", "be", "able", "to", "take", "a", "second", "tbh"]
(c11-14 / and
        :op1 (c11-16 / hear-01
                     :ARG0 (c11-1 / i)
                     :ARG1 (c11-7 / that)
                     :mod (c11-13 / yeah
                                  :mode expressive)
                     :mod (c11-9 / as-well))
        :op2 (c11-15 / feel-01
                     :ARG0 c11-1
                     :ARG1 (c11-11 / shit
                                   :degree (c11-17 / so))
                     :time (c11-12 / since
                                   :op1 (c11-2 / shoot-02
                                               :ord (c11-6 / ordinal-entity
                                                           :value 1)))
                     :ARG0-of (c11-4 / cause-01
                                     :ARG1 (c11-18 / possible-01
                                                   :ARG1 (c11-5 / take-01
                                                                :ARG0 c11-1
                                                                :ARG1 (c11-8 / temporal-quantity
                                                                             :unit (c11-3 / second)
                                                                             :quant 2)
                                                                :mod (c11-10 / even))
                                                   :ARG1-of (c11-0 / honest-01
                                                                   :ARG0 c11-1)
                                                   :polarity -))))

# ::snt Every country has different informations I can't it will turn out sooner or later, the only thing I know is that these two vaccines give one the most antibodies out of all the available ones
# ::tokens ["Every", "country", "has", "different", "informations", "I", "ca", "n't", "it", "will", "turn", "out", "sooner", "or", "later", ",", "the", "only", "thing", "I", "know", "is", "that", "these", "two", "vaccines", "give", "one", "the", "most", "antibodies", "out", "of", "all", "the", "available", "ones"]
# ::lemmas ["every", "country", "have", "different", "information", "i", "can", "not", "it", "will", "turn", "out", "soon", "or", "later", ",", "the", "only", "thing", "i", "know", "be", "that", "these", "two", "vaccine", "give", "one", "the", "most", "antibodie", "out", "of", "all", "the", "available", "one"]
(c12-16 / and
        :op1 (c12-18 / have-03
                     :ARG0 (c12-5 / country
                                  :mod (c12-13 / every))
                     :ARG1 (c12-4 / inform-01
                                  :ARG1-of (c12-0 / differ-02))
                     :ARG1-of (c12-21 / possible-01
                                      :ARG0 (c12-14 / i)
                                      :polarity -))
        :op2 (c12-9 / turn-out-11
                    :ARG1 c12-4
                    :time (c12-19 / eventual))
        :op3 (c12-22 / know-01
                     :ARG0 c12-14
                     :ARG1 (c12-10 / give-01
                                   :ARG0 (c12-7 / vaccine
                                                :mod (c12-6 / this)
                                                :quant 2)
                                   :ARG1 (c12-3 / have-quant-91
                                                :ARG1 (c12-12 / antibody)
                                                :ARG3 (c12-11 / most)
                                                :ARG5 (c12-1 / antibody
                                                             :ARG2-of (c12-15 / include-91
                                                                              :ARG1 (c12-17 / vaccine
                                                                                            :ARG2-of (c12-23 / available-02)
                                                                                            :mod (c12-2 / all)))))
                                   :ARG2 (c12-8 / one))
                     :mod (c12-20 / only)))

# ::snt oh really? I heard it only lasts a few months, i don't think anyone really knows tho
# ::tokens ["oh", "really", "?", "I", "heard", "it", "only", "lasts", "a", "few", "months", ",", "i", "do", "n't", "think", "anyone", "really", "knows", "tho"]
# ::lemmas ["oh", "really", "?", "i", "hear", "it", "only", "last", "a", "few", "months", ",", "i", "do", "not", "think", "anyone", "really", "know", "tho"]
(c13-13 / multi-sentence
        :snt1 (c13-10 / real-04
                      :polarity (c13-0 / amr-unknown)
                      :mod (c13-8 / oh))
        :snt2 (c13-4 / hear-01
                     :ARG0 (c13-12 / i)
                     :ARG1 (c13-11 / last-01
                                   :ARG1 (c13-5 / it)
                                   :ARG2 (c13-1 / few
                                                :op1 (c13-9 / temporal-quantity
                                                            :unit (c13-2 / month)
                                                            :quant 1))
                                   :mod (c13-6 / only)))
        :snt3 (c13-3 / think-01
                     :ARG0 c13-12
                     :ARG1 (c13-14 / know-01
                                   :ARG0 (c13-15 / anyone)
                                   :ARG1-of (c13-7 / real-04))
                     :polarity -))

# ::snt Not yet, though I'm thinking about getting one because I like getting vaccines shjshjs but I can only get it around october anyway. Honestly a new shot will be needed after some while for sure, though I read that pfizer/moderna lasts for quite a few years
# ::tokens ["Not", "yet", ",", "though", "I", "'m", "thinking", "about", "getting", "one", "because", "I", "like", "getting", "vaccines", "shjshjs", "but", "I", "can", "only", "get", "it", "around", "october", "anyway", ".", "Honestly", "a", "new", "shot", "will", "be", "needed", "after", "some", "while", "for", "sure", ",", "though", "I", "read", "that", "pfizer", "/", "moderna", "lasts", "for", "quite", "a", "few", "years"]
# ::lemmas ["not", "yet", ",", "though", "i", "be", "think", "about", "get", "one", "because", "i", "like", "get", "vaccine", "shjshjs", "but", "i", "can", "only", "get", "it", "around", "october", "anyway", ".", "honestly", "a", "new", "shot", "will", "be", "need", "after", "some", "while", "for", "sure", ",", "though", "i", "read", "that", "pfizer", "/", "moderna", "last", "for", "quite", "a", "few", "years"]
(c14-17 / multi-sentence
        :snt1 (c14-29 / have-concession-91
                      :ARG1 (c14-14 / think-01
                                    :ARG0 (c14-6 / i)
                                    :ARG1 (c14-16 / get-01
                                                  :ARG0 c14-6
                                                  :ARG1 (c14-13 / one))
                                    :ARG1-of (c14-9 / cause-01
                                                    :ARG0 (c14-31 / like-01
                                                                  :ARG0 c14-6
                                                                  :ARG1 (c14-25 / get-01
                                                                                :ARG0 c14-6
                                                                                :ARG1 (c14-12 / vaccine
                                                                                              :mod (c14-20 / shjshj))))))
                      :ARG2 (c14-33 / possible-01
                                    :ARG1 (c14-2 / get-01
                                                 :ARG0 c14-6
                                                 :ARG1 c14-12
                                                 :time (c14-27 / around
                                                               :op1 (c14-0 / date-entity
                                                                           :month 11))
                                                 :mod (c14-19 / anyway))))
        :snt2 (c14-18 / need-01
                      :ARG1 (c14-32 / shot
                                    :ARG1-of (c14-4 / new-01))
                      :time (c14-1 / after
                                   :quant (c14-10 / while
                                                  :quant (c14-23 / some)))
                      :ARG1-of (c14-7 / sure-02)
                      :concession (c14-15 / read-01
                                          :ARG0 (c14-22 / i)
                                          :ARG1 (c14-5 / last-01
                                                       :ARG1 (c14-8 / slash
                                                                    :op1 (c14-30 / pfizer)
                                                                    :op2 (c14-21 / product
                                                                                 :name (c14-24 / name
                                                                                               :op1 "Moderna")))
                                                       :ARG2 (c14-28 / many
                                                                     :op1 (c14-11 / temporal-quantity
                                                                                  :unit (c14-26 / year)
                                                                                  :quant 1)
                                                                     :degree (c14-3 / quite))))))

# ::snt I meant third i think we will probably get a third here as well but in a year or something like that
# ::tokens ["I", "meant", "third", "i", "think", "we", "will", "probably", "get", "a", "third", "here", "as", "well", "but", "in", "a", "year", "or", "something", "like", "that"]
# ::lemmas ["i", "mean", "third", "i", "think", "we", "will", "probably", "get", "a", "third", "here", "as", "well", "but", "in", "a", "year", "or", "something", "like", "that"]
(c15-13 / mean-01
        :ARG0 (c15-12 / i)
        :ARG2 (c15-2 / contrast-01
                     :ARG1 (c15-8 / think-01
                                  :ARG0 c15-12
                                  :ARG1 (c15-11 / get-01
                                                :ARG0 (c15-3 / we)
                                                :ARG1 (c15-7 / ordinal-entity
                                                             :value 3)
                                                :location (c15-5 / here)
                                                :mod (c15-1 / as-well)
                                                :mod (c15-10 / probable)))
                     :ARG2 (c15-6 / or
                                  :op1 (c15-4 / temporal-quantity
                                              :unit (c15-14 / year)
                                              :quant 1)
                                  :op2 (c15-0 / something
                                              :ARG1-of (c15-9 / resemble-01
                                                              :ARG2 c15-4)))))

# ::snt Yess, at the beginning of June I got my second shot. I have the feeling that at some point the third shot really is going to be mandatory, especially because we're really acting like rona is on holiday
# ::tokens ["Yess", ",", "at", "the", "beginning", "of", "June", "I", "got", "my", "second", "shot", ".", "I", "have", "the", "feeling", "that", "at", "some", "point", "the", "third", "shot", "really", "is", "going", "to", "be", "mandatory", ",", "especially", "because", "we", "'re", "really", "acting", "like", "rona", "is", "on", "holiday"]
# ::lemmas ["Yess", ",", "at", "the", "beginning", "of", "June", "i", "get", "my", "second", "shot", ".", "i", "have", "the", "feeling", "that", "at", "some", "point", "the", "third", "shot", "really", "be", "go", "to", "be", "mandatory", ",", "especially", "because", "we", "be", "really", "act", "like", "rona", "be", "on", "holiday"]
(c16-8 / multi-sentence
       :snt1 (c16-7 / get-01
                    :ARG0 (c16-1 / i)
                    :ARG1 (c16-11 / shot
                                  :ord (c16-5 / ordinal-entity
                                              :value 2)
                                  :poss c16-1)
                    :time (c16-20 / begin-01
                                  :ARG1 (c16-0 / date-entity
                                               :month 6)))
       :snt2 (c16-15 / feel-02
                     :ARG0 (c16-12 / i)
                     :ARG1 (c16-16 / mandatory
                                   :domain (c16-21 / shot
                                                   :ord (c16-18 / ordinal-entity
                                                                :value 3))
                                   :ARG1-of (c16-6 / real-04)
                                   :time (c16-22 / point
                                                 :mod (c16-13 / some))
                                   :ARG1-of (c16-2 / cause-01
                                                   :ARG0 (c16-14 / act-01
                                                                 :ARG0 (c16-3 / we)
                                                                 :ARG1 (c16-17 / holiday-01
                                                                               :ARG0 (c16-19 / person
                                                                                             :name (c16-9 / name
                                                                                                          :op1 "Rona")))
                                                                 :ARG1-of (c16-4 / real-04))
                                                   :mod (c16-10 / especially)))))

# ::snt ohh thanks for the advice, i deffo will Oh really??? Have you gotten your second shot yet?
# ::tokens ["ohh", "thanks", "for", "the", "advice", ",", "i", "deffo", "will", "Oh", "really", "?", "?", "?", "Have", "you", "gotten", "your", "second", "shot", "yet", "?"]
# ::lemmas ["ohh", "thank", "for", "the", "advice", ",", "i", "deffo", "will", "oh", "really", "?", "?", "?", "have", "you", "get", "your", "second", "shot", "yet", "?"]
(c17-12 / multi-sentence
        :snt1 (c17-8 / thank-01
                     :ARG0 (c17-11 / i)
                     :ARG1 (c17-13 / you)
                     :ARG2 (c17-3 / advise-01
                                  :ARG0 c17-13)
                     :mod (c17-7 / oh
                                 :mode expressive))
        :snt2 (c17-0 / do-02
                     :ARG0 (c17-5 / i)
                     :ARG1 (c17-14 / amr-unknown)
                     :mod c17-7
                     :ARG1-of (c17-9 / real-04))
        :snt3 (c17-10 / get-01
                      :ARG0 (c17-4 / you)
                      :ARG1 (c17-1 / shoot-02
                                   :ARG0 c17-4
                                   :ord (c17-6 / ordinal-entity
                                               :value 2))
                      :time (c17-2 / yet)
                      :polarity c17-14))

# ::snt Definitely recommend ice on the arms, my left arm was in pain for a week because I wad lazy shjshjsThey are overdoing it just a tiny bit shjshjs meanwhile here we can get a third shot after months of the second one shjshsjjs AND by mixing different vaccines, a real adventure
# ::tokens ["Definitely", "recommend", "ice", "on", "the", "arms", ",", "my", "left", "arm", "was", "in", "pain", "for", "a", "week", "because", "I", "wad", "lazy", "shjshjsThey", "are", "overdoing", "it", "just", "a", "tiny", "bit", "shjshjs", "meanwhile", "here", "we", "can", "get", "a", "third", "shot", "after", "months", "of", "the", "second", "one", "shjshsjjs", "AND", "by", "mixing", "different", "vaccines", ",", "a", "real", "adventure"]
# ::lemmas ["definitely", "recommend", "ice", "on", "the", "arm", ",", "my", "left", "arm", "be", "in", "pain", "for", "a", "week", "because", "i", "wad", "lazy", "shjshjsThey", "be", "overdo", "it", "just", "a", "tiny", "bit", "shjshjs", "meanwhile", "here", "we", "can", "get", "a", "third", "shot", "after", "months", "of", "the", "second", "one", "shjshsjjs", "and", "by", "mix", "different", "vaccine", ",", "a", "real", "adventure"]
(c18-12 / multi-sentence
        :snt1 (c18-8 / recommend-01
                     :ARG1 (c18-11 / ice
                                   :location (c18-2 / arm
                                                    :ARG1-of (c18-9 / left-20)))
                     :mod (c18-0 / definite)
                     :ARG1-of (c18-3 / cause-01
                                     :ARG0 (c18-10 / pain-01
                                                   :ARG1 (c18-13 / arm
                                                                 :ARG1-of c18-9)
                                                   :poss (c18-6 / i))
                                     :duration (c18-7 / temporal-quantity
                                                      :unit (c18-4 / week)
                                                      :quant 1)
                                     :ARG1-of (c18-1 / cause-01
                                                     :ARG0 (c18-5 / wad-02
                                                                  :ARG0 c18-6)))))

# ::snt yes i'm so happy it worked out in the end guessing my arm will be stiff on vacation then sbsjks I guess it's a good thing they are being careful but I think that was a bit over the top tbh sjsjsj
# ::tokens ["yes", "i", "'m", "so", "happy", "it", "worked", "out", "in", "the", "end", "guessing", "my", "arm", "will", "be", "stiff", "on", "vacation", "then", "sbsjks", "I", "guess", "it", "'s", "a", "good", "thing", "they", "are", "being", "careful", "but", "I", "think", "that", "was", "a", "bit", "over", "the", "top", "tbh", "sjsjsj"]
# ::lemmas ["yes", "i", "be", "so", "happy", "it", "work", "out", "in", "the", "end", "guess", "my", "arm", "will", "be", "stiff", "on", "vacation", "then", "sbsjks", "i", "guess", "it", "be", "a", "good", "thing", "they", "be", "be", "careful", "but", "i", "think", "that", "be", "a", "bit", "over", "the", "top", "tbh", "sjsjsj"]
(c19-11 / multi-sentence
        :snt1 (c19-20 / happy-01
                      :ARG0 (c19-5 / work-out-02
                                   :ARG1 (c19-10 / guess-01
                                                 :ARG0 (c19-2 / i
                                                              :part (c19-19 / arm))
                                                 :ARG1 (c19-15 / stiff-04
                                                               :ARG1 c19-19
                                                               :time (c19-7 / vacation-01
                                                                            :ARG0 c19-2)))
                                   :time (c19-14 / end))
                      :ARG1 (c19-16 / i)
                      :ARG2-of (c19-1 / have-degree-91
                                      :ARG1 c19-16
                                      :ARG3 (c19-22 / so)))
        :snt2 (c19-13 / and
                      :op1 (c19-18 / guess-01
                                   :ARG0 (c19-17 / i)
                                   :ARG1 (c19-0 / good-02
                                                :ARG1 (c19-4 / care-04
                                                             :ARG0 (c19-9 / they))))
                      :op2 (c19-6 / think-01
                                  :ARG0 c19-17
                                  :ARG1 (c19-8 / over-the-top
                                               :degree (c19-21 / bit)
                                               :domain (c19-12 / that))
                                  :ARG1-of (c19-3 / honest-01
                                                  :ARG0 c19-17))))

# ::snt My poor babie I'm so happy it got fixed at the end!! it would have been so stupid if you couldn't get vaccinated, here people wasn't even checked for anything and then there's Sweden where they overdo the checking, the other side of the coin.
# ::tokens ["My", "poor", "babie", "I", "'m", "so", "happy", "it", "got", "fixed", "at", "the", "end", "!", "!", "it", "would", "have", "been", "so", "stupid", "if", "you", "could", "n't", "get", "vaccinated", ",", "here", "people", "was", "n't", "even", "checked", "for", "anything", "and", "then", "there", "'s", "Sweden", "where", "they", "overdo", "the", "checking", ",", "the", "other", "side", "of", "the", "coin", "."]
# ::lemmas ["my", "poor", "babie", "i", "be", "so", "happy", "it", "got", "fix", "at", "the", "end", "!", "!", "it", "would", "have", "be", "so", "stupid", "if", "you", "could", "not", "get", "vaccinate", ",", "here", "people", "be", "not", "even", "check", "for", "anything", "and", "then", "there", "be", "Sweden", "where", "they", "overdo", "the", "checking", ",", "the", "other", "side", "of", "the", "coin", "."]
(c20-11 / multi-sentence
        :snt1 (c20-22 / happy-01
                      :ARG0 (c20-21 / fix-02
                                    :ARG1 (c20-2 / it)
                                    :time (c20-13 / end-01))
                      :ARG1 (c20-15 / i)
                      :degree (c20-14 / so))
        :snt2 (c20-1 / have-condition-91
                     :ARG1 (c20-3 / have-mod-91
                                  :ARG1 (c20-16 / it)
                                  :ARG2 (c20-26 / stupid))
                     :ARG2 (c20-27 / possible-01
                                   :ARG1 (c20-7 / vaccinate-01
                                                :ARG1 (c20-19 / you))
                                   :polarity -))
        :snt3 (c20-4 / check-01
                     :ARG1 (c20-25 / person)
                     :ARG2 (c20-20 / anything)
                     :location (c20-8 / here)
                     :mod (c20-23 / even)
                     :polarity -)
        :snt4 (c20-0 / country
                     :name (c20-12 / name
                                   :op1 "Sweden")
                     :location-of (c20-9 / overdo-01
                                         :ARG0 (c20-10 / they)
                                         :ARG1 (c20-6 / check-01
                                                      :location (c20-17 / side
                                                                        :mod (c20-24 / other)
                                                                        :part-of (c20-18 / coin))))
                     :time (c20-5 / then)))

# ::snt i honestly don't understand either... luckily i didn't cancel the appointment next week and i've talked to a doctor so it's fine for me to take it next week. But i was so disappointed, no joke i cried for like hours straight after i didn't get vaccinated
# ::tokens ["i", "honestly", "do", "n't", "understand", "either", "...", "luckily", "i", "did", "n't", "cancel", "the", "appointment", "next", "week", "and", "i", "'ve", "talked", "to", "a", "doctor", "so", "it", "'s", "fine", "for", "me", "to", "take", "it", "next", "week", ".", "But", "i", "was", "so", "disappointed", ",", "no", "joke", "i", "cried", "for", "like", "hours", "straight", "after", "i", "did", "n't", "get", "vaccinated"]
# ::lemmas ["i", "honestly", "do", "not", "understand", "either", "...", "luckily", "i", "do", "not", "cancel", "the", "appointment", "next", "week", "and", "i", "'ve", "talk", "to", "a", "doctor", "so", "it", "be", "fine", "for", "i", "to", "take", "it", "next", "week", ".", "but", "i", "be", "so", "disappointed", ",", "no", "joke", "i", "cry", "for", "like", "hour", "straight", "after", "i", "do", "not", "get", "vaccinate"]
(c21-12 / multi-sentence
        :snt1 (c21-27 / understand-01
                      :ARG0 (c21-5 / i)
                      :mod (c21-16 / either)
                      :ARG1-of (c21-26 / honest-01)
                      :polarity -)
        :snt2 (c21-23 / and
                      :op1 (c21-6 / cancel-01
                                  :ARG0 (c21-18 / i)
                                  :ARG1 (c21-15 / appointment-02
                                                :ARG0 c21-18
                                                :time (c21-7 / week
                                                             :mod (c21-13 / next)))
                                  :manner (c21-29 / lucky)
                                  :polarity -)
                      :op2 (c21-11 / talk-01
                                   :ARG0 c21-18
                                   :ARG2 (c21-0 / doctor))
                      :ARG0-of (c21-1 / cause-01
                                      :ARG1 (c21-24 / fine-04
                                                    :ARG1 (c21-8 / take-01
                                                                 :ARG0 c21-18
                                                                 :ARG1 (c21-19 / it)
                                                                 :time c21-7))))
        :snt3 (c21-9 / contrast-01
                     :ARG2 (c21-21 / disappoint-01
                                   :ARG1 (c21-28 / i)
                                   :degree (c21-17 / so)))
        :snt4 (c21-2 / and
                     :op1 (c21-30 / joke-01
                                  :polarity -)
                     :op2 (c21-20 / cry-02
                                  :ARG0 c21-28
                                  :time (c21-31 / after
                                                :op1 (c21-10 / vaccinate-01
                                                             :ARG1 c21-28
                                                             :polarity -)
                                                :quant (c21-3 / like
                                                              :op1 (c21-25 / multiple
                                                                           :op1 (c21-14 / temporal-quantity
                                                                                        :unit (c21-4 / hour)
                                                                                        :quant 1))
                                                              :ARG1-of (c21-22 / straight-04))))))

# ::snt Nooo it makes no sense, I know you have a lot of allergies but I'm not sure how the vaccine would trigger any of them
# ::tokens ["Nooo", "it", "makes", "no", "sense", ",", "I", "know", "you", "have", "a", "lot", "of", "allergies", "but", "I", "'m", "not", "sure", "how", "the", "vaccine", "would", "trigger", "any", "of", "them"]
# ::lemmas ["Nooo", "it", "make", "no", "sense", ",", "i", "know", "you", "have", "a", "lot", "of", "allergy", "but", "i", "be", "not", "sure", "how", "the", "vaccine", "would", "trigger", "any", "of", "they"]
(c22-0 / sense-02
       :ARG1 (c22-12 / it)
       :ARG1-of (c22-3 / cause-01
                       :ARG0 (c22-1 / contrast-01
                                    :ARG1 (c22-13 / know-01
                                                  :ARG0 (c22-5 / i)
                                                  :ARG1 (c22-6 / have-03
                                                               :ARG0 (c22-14 / you)
                                                               :ARG1 (c22-2 / allergy
                                                                            :quant (c22-10 / lot))))
                                    :ARG2 (c22-11 / sure-02
                                                  :ARG0 c22-5
                                                  :ARG1 (c22-9 / thing
                                                               :manner-of (c22-4 / trigger-01
                                                                                 :ARG0 (c22-8 / vaccine)
                                                                                 :ARG1 (c22-15 / any
                                                                                               :ARG1-of (c22-7 / include-91
                                                                                                               :ARG2 c22-2))))
                                                  :polarity -)))
       :polarity -)

# ::snt yes i'm so relieved
# ::tokens ["yes", "i", "'m", "so", "relieved"]
# ::lemmas ["yes", "i", "be", "so", "relieved"]
(c23-2 / relieve-01
       :ARG1 (c23-1 / i)
       :degree (c23-0 / so))

# ::snt Ohh, that's good, everything will be fine
# ::tokens ["Ohh", ",", "that", "'s", "good", ",", "everything", "will", "be", "fine"]
# ::lemmas ["Ohh", ",", "that", "be", "good", ",", "everything", "will", "be", "fine"]
(c24-4 / multi-sentence
       :snt1 (c24-3 / good-02
                    :ARG1 (c24-2 / that)
                    :mod (c24-1 / oh
                                :mode expressive))
       :snt2 (c24-0 / fine-04
                    :ARG1 (c24-5 / everything)))

# ::snt I talked to a doctor today and I can take it in two weeks luckily
# ::tokens ["I", "talked", "to", "a", "doctor", "today", "and", "I", "can", "take", "it", "in", "two", "weeks", "luckily"]
# ::lemmas ["i", "talk", "to", "a", "doctor", "today", "and", "i", "can", "take", "it", "in", "two", "weeks", "luckily"]
(c25-1 / and
       :op1 (c25-6 / talk-01
                   :ARG0 (c25-9 / i)
                   :ARG2 (c25-0 / doctor)
                   :time (c25-3 / today))
       :op2 (c25-7 / possible-01
                   :ARG1 (c25-10 / take-01
                                 :ARG0 c25-9
                                 :ARG1 (c25-4 / it)
                                 :duration (c25-5 / temporal-quantity
                                                  :unit (c25-2 / week)
                                                  :quant 2))
                   :manner (c25-8 / lucky)))

# ::snt ohh noo , don't worry, you'll definitely get your vaccine as soon as possible
# ::tokens ["ohh", "noo", ",", "do", "n't", "worry", ",", "you", "'ll", "definitely", "get", "your", "vaccine", "as", "soon", "as", "possible"]
# ::lemmas ["ohh", "noo", ",", "do", "not", "worry", ",", "you", "'ll", "definitely", "get", "your", "vaccine", "as", "soon", "as", "possible"]
(c26-3 / worry-02
       :ARG0 (c26-9 / you)
       :ARG1-of (c26-2 / cause-01
                       :ARG0 (c26-7 / get-01
                                    :ARG0 c26-9
                                    :ARG1 (c26-5 / vaccine
                                                 :poss c26-9)
                                    :mod (c26-0 / definite)
                                    :time (c26-1 / soon
                                                 :ARG2-of (c26-4 / have-degree-91
                                                                 :ARG1 c26-7
                                                                 :ARG3 (c26-10 / equal)
                                                                 :ARG4 (c26-8 / possible-01
                                                                              :ARG1 c26-7)))))
       :mod (c26-6 / oh
                   :mode expressive)
       :polarity -
       :mode imperative)

# ::snt hopefully i can take it in two weeks, i was so disapointed that i cried for like two hours
# ::tokens ["hopefully", "i", "can", "take", "it", "in", "two", "weeks", ",", "i", "was", "so", "disapointed", "that", "i", "cried", "for", "like", "two", "hours"]
# ::lemmas ["hopefully", "i", "can", "take", "it", "in", "two", "weeks", ",", "i", "be", "so", "disapointed", "that", "i", "cry", "for", "like", "two", "hours"]
(c27-3 / and
       :op1 (c27-7 / hopeful-03
                   :ARG0 (c27-13 / i)
                   :ARG1 (c27-10 / possible-01
                                 :ARG1 (c27-9 / take-01
                                              :ARG0 c27-13
                                              :ARG1 (c27-8 / it)
                                              :time (c27-16 / after
                                                            :op1 (c27-14 / now)
                                                            :quant (c27-6 / temporal-quantity
                                                                          :unit (c27-5 / week)
                                                                          :quant 2)))))
       :op2 (c27-0 / disapoint-01
                   :ARG1 c27-13
                   :ARG2-of (c27-12 / have-degree-91
                                    :ARG1 c27-13
                                    :ARG3 (c27-1 / so)
                                    :ARG6 (c27-4 / cry-02
                                                 :ARG0 c27-13
                                                 :duration (c27-11 / like
                                                                   :op1 (c27-15 / temporal-quantity
                                                                                :unit (c27-2 / hour)
                                                                                :quant 2))))))

# ::snt Ohh no I hope they solve the problem, it was finally your turn to get the vaccine
# ::tokens ["Ohh", "no", "I", "hope", "they", "solve", "the", "problem", ",", "it", "was", "finally", "your", "turn", "to", "get", "the", "vaccine"]
# ::lemmas ["Ohh", "no", "i", "hope", "they", "solve", "the", "problem", ",", "it", "be", "finally", "your", "turn", "to", "get", "the", "vaccine"]
(c28-10 / multi-sentence
        :snt1 (c28-3 / hope-01
                     :ARG0 (c28-9 / i)
                     :ARG1 (c28-0 / solve-01
                                  :ARG0 (c28-6 / they)
                                  :ARG1 (c28-7 / problem))
                     :mod (c28-5 / oh
                                 :mode expressive))
        :snt2 (c28-2 / turn-14
                     :ARG0 (c28-11 / you)
                     :ARG1 (c28-8 / get-01
                                  :ARG0 c28-11
                                  :ARG1 (c28-4 / vaccine))
                     :time (c28-1 / final)))

# ::snt Frstr det :/
# ::tokens ["Frstr", "det", ":/"]
# ::lemmas ["Frstr", "det", ":/"]
(c29-0 / string-entity
       :value "Frstr det")

# ::snt Tur att du gjorde det, annars hade du nog inte heller ftt ta. Ja det suger...jag r s sjukt besviken
# ::tokens ["Tur", "att", "du", "gjorde", "det", ",", "annars", "hade", "du", "nog", "inte", "heller", "ftt", "ta", ".", "Ja", "det", "suger", "...", "jag", "r", "s", "sjukt", "besviken"]
# ::lemmas ["Tur", "att", "du", "gjorde", "det", ",", "annar", "hade", "du", "nog", "inte", "heller", "ftt", "ta", ".", "Ja", "det", "suger", "...", "jag", "r", "s", "sjukt", "besviken"]
(c30-8 / multi-sentence
       :snt1 (c30-14 / and
                     :op1 (c30-15 / have-03
                                  :ARG0 (c30-19 / person
                                                :name (c30-9 / name
                                                             :op1 "Tur"))
                                  :ARG1 (c30-16 / person
                                                :name (c30-0 / name
                                                             :op1 "Gjorde")))
                     :op2 (c30-1 / have-03
                                 :ARG0 (c30-11 / person
                                               :name (c30-12 / name
                                                             :op1 "Annars"))
                                 :ARG1 (c30-3 / nog
                                              :mod (c30-2 / hell)))
                     :op3 (c30-5 / have-03
                                 :ARG0 c30-11
                                 :ARG1 (c30-6 / ta))
                     :snt2-of c30-8)
       :op1 (c30-4 / have-03
                   :ARG0 (c30-10 / person
                                 :name (c30-7 / name
                                              :op1 "Ja"))
                   :ARG1 c30-3)
       :op2 (c30-20 / have-03
                    :ARG0 c30-10
                    :ARG1 c30-3)
       :op3 (c30-13 / have-03
                    :ARG0 c30-10
                    :ARG1 c30-3)
       :op4 (c30-17 / have-03
                    :ARG0 c30-10
                    :ARG1 c30-3
                    :op5-of c30-8)
       :ARG0 c30-10
       :ARG1 c30-3
       :snt3 (c30-18 / besviken))

# ::snt Ah jag har bokat p en vrdcentral, tur! Men s trkigt att du inte fick den idag
# ::tokens ["Ah", "jag", "har", "bokat", "p", "en", "vrdcentral", ",", "tur", "!", "Men", "s", "trkigt", "att", "du", "inte", "fick", "den", "idag"]
# ::lemmas ["ah", "jag", "har", "bokat", "p", "en", "vrdcentral", ",", "tur", "!", "man", "s", "trkigt", "att", "du", "inte", "fick", "den", "idag"]
(c31-15 / multi-sentence
        :snt1 (c31-2 / and
                     :op1 (c31-13 / jag
                                  :mode expressive)
                     :op2 (c31-12 / bokat
                                  :mode expressive)
                     :op3 (c31-0 / be-located-at-91
                                 :ARG1 (c31-14 / person)
                                 :ARG2 (c31-9 / publication
                                              :name (c31-16 / name
                                                            :op1 "Vrdcentral")))
                     :op4 (c31-6 / person
                                 :name (c31-11 / name
                                               :op1 "Tur"))
                     :mod (c31-17 / ah
                                  :mode expressive))
        :snt2 (c31-10 / try-01
                      :ARG0 (c31-4 / man)
                      :ARG1 (c31-5 / person
                                   :ARG0-of (c31-3 / fuck-01
                                                   :ARG1 (c31-1 / person
                                                                :name (c31-8 / name
                                                                             :op1 "Idag"))))
                      :ARG1-of (c31-7 / possible-01)))

# ::snt Man fr nog ta om man gr det p en vrdcentral, de ville att jag skulle kontakta fr skerhetsskull
# ::tokens ["Man", "fr", "nog", "ta", "om", "man", "gr", "det", "p", "en", "vrdcentral", ",", "de", "ville", "att", "jag", "skulle", "kontakta", "fr", "skerhetsskull"]
# ::lemmas ["man", "fr", "nog", "ta", "om", "man", "gr", "det", "p", "en", "vrdcentral", ",", "de", "ville", "att", "jag", "skulle", "kontakta", "fr", "skerhetsskull"]
(c32-2 / and
       :op1 (c32-13 / man
                    :location (c32-4 / city
                                     :name (c32-14 / name
                                                   :op1 "Nog")))
       :op2 (c32-12 / person
                    :location (c32-0 / city
                                     :name (c32-10 / name
                                                   :op1 "Ville")))
       :op3 (c32-9 / person
                   :location (c32-7 / city
                                    :name (c32-8 / name
                                                 :op1 "Vrdcentral"))
                   :ARG0-of (c32-3 / fuck-01
                                   :mode expressive))
       :op4 (c32-5 / person
                   :location c32-0
                   :ARG0-of (c32-6 / have-03
                                   :ARG1 (c32-11 / job
                                                 :mod (c32-1 / skerhetsskull))
                                   :ARG0 c32-5)
                   :ARG1 c32-11))

# ::snt men gud jag r ocks allergisk mot mycket undra om jag kommer att f ta d
# ::tokens ["men", "gud", "jag", "r", "ocks", "allergisk", "mot", "mycket", "undra", "om", "jag", "kommer", "att", "f", "ta", "d"]
# ::lemmas ["man", "gud", "jag", "r", "ock", "allergisk", "mot", "mycket", "undra", "om", "jag", "kommer", "att", "f", "ta", "d"]
(c33-1 / and
       :op1 (c33-6 / gud)
       :op2 (c33-5 / truck-01
                   :ARG0 (c33-8 / person)
                   :ARG1 (c33-4 / person
                                :mod (c33-11 / allergy)))
       :op3 (c33-9 / mot
                   :poss (c33-3 / person
                                :name (c33-10 / name
                                              :op1 "Mycket")))
       :op4 (c33-12 / et-cetera
                    :op5-of c33-1)
       :op6 c33-1
       :op1 (c33-7 / jag
                   :mode expressive)
       :op2 (c33-2 / person
                   :name c33-10
                   :mode expressive
                   :op1 "God")
       :op3 (c33-0 / person
                   :name c33-10
                   :mode expressive
                   :op1 " att"
                   :op2 "f ta"
                   :op3 "d"))

# ::snt de hade ingen lkare p plats och var rdda att jag skulle f en allergisk reaktion... s besviken
# ::tokens ["de", "hade", "ingen", "lkare", "p", "plats", "och", "var", "rdda", "att", "jag", "skulle", "f", "en", "allergisk", "reaktion", "...", "s", "besviken"]
# ::lemmas ["de", "hade", "ingen", "lkare", "p", "plat", "och", "var", "rdda", "att", "jag", "skulle", "f", "en", "allergisk", "reaktion", "...", "s", "besviken"]
(c34-0 / say-01
       :ARG0 (c34-11 / person
                     :name (c34-12 / name
                                   :op1 "S besviken"))
       :ARG1 (c34-1 / and
                    :op1 (c34-3 / have-03
                                :ARG0 (c34-2 / we)
                                :ARG1 (c34-8 / location
                                             :name (c34-7 / name
                                                          :op1 " ingenuous"
                                                          :op2 "lkare"))
                                :op2-of c34-1)
                    :ARG0 c34-2
                    :ARG1 c34-8)
       :op3 c34-3
       :ARG0 c34-2
       :ARG1 c34-8
       :op4 c34-3
       :ARG0 c34-2
       :ARG1 (c34-6 / thing
                    :ARG1-of (c34-9 / reaktion-00
                                    :ARG0 (c34-4 / organization
                                                 :name (c34-5 / name
                                                              :op1 "Allerisk"))))
       :op5 c34-3
       :ARG0 c34-2
       :ARG1 (c34-10 / string-entity
                     :value "nestle")
       :op6 c34-3
       :ARG0 c34-2
       :ARG1 c34-10)

# ::snt Vnta va?? Varfr inte?
# ::tokens ["Vnta", "va", "?", "?", "Varfr", "inte", "?"]
# ::lemmas ["Vnta", "va", "?", "?", "Varfr", "inte", "?"]
(c35-5 / multi-sentence
       :snt1 (c35-4 / possible-01
                    :polarity (c35-1 / amr-unknown)
                    :ARG1 (c35-2 / Va))
       :snt2 (c35-3 / possible-01
                    :polarity (c35-7 / amr-unknown)
                    :ARG1 (c35-0 / answer-01
                                 :ARG0 (c35-6 / you))))
