# ::snt Thank you, but that is not necessary. Ruben is feeling fine and he makes awesome soups! (Miss you and Adele!)
# ::tokens ["Thank", "you", ",", "but", "that", "is", "not", "necessary", ".", "Ruben", "is", "feeling", "fine", "and", "he", "makes", "awesome", "soups", "!", "(", "Miss", "you", "and", "Adele", "!", ")"]
# ::lemmas ["thank", "you", ",", "but", "that", "be", "not", "necessary", ".", "Ruben", "be", "feel", "fine", "and", "he", "make", "awesome", "soup", "!", "(", "miss", "you", "and", "Adele", "!", ")"]
(c1-6 / multi-sentence
      :snt1 (c1-3 / contrast-01
                  :ARG1 (c1-5 / thank-01
                              :ARG0 (c1-2 / i)
                              :ARG1 (c1-14 / you))
                  :ARG2 (c1-7 / need-01
                              :ARG1 (c1-4 / that)
                              :polarity -))
      :snt2 (c1-16 / and
                   :op1 (c1-17 / feel-01
                               :ARG0 (c1-20 / person
                                            :name (c1-1 / name
                                                        :op1 "Ruben"))
                               :ARG1 (c1-12 / fine-04
                                            :ARG1 c1-20))
                   :op2 (c1-18 / make-01
                               :ARG0 c1-20
                               :ARG1 (c1-9 / soup
                                           :ARG1-of (c1-8 / awe-01)))
                   :snt3 (c1-11 / miss-01
                                :ARG0 (c1-10 / i)
                                :ARG1 (c1-0 / and
                                            :op1 (c1-15 / you)
                                            :op2 (c1-19 / person
                                                        :name (c1-13 / name
                                                                     :op1 "Adele")))
                                :mode expressive)))

# ::snt Let me know if you need soup delivery!
# ::tokens ["Let", "me", "know", "if", "you", "need", "soup", "delivery", "!"]
# ::lemmas ["let", "i", "know", "if", "you", "need", "soup", "delivery", "!"]
(c2-3 / let-know-07
      :ARG0 (c2-6 / you)
      :ARG1 (c2-4 / i)
      :ARG2 (c2-2 / truth-value
                  :polarity-of (c2-5 / need-01
                                     :ARG0 c2-6
                                     :ARG1 (c2-0 / deliver-01
                                                 :ARG1 (c2-1 / soup))))
      :mode imperative)

# ::snt So glad you got it, Claudette! Hope you feel better fast!
# ::tokens ["So", "glad", "you", "got", "it", ",", "Claudette", "!", "Hope", "you", "feel", "better", "fast", "!"]
# ::lemmas ["so", "glad", "you", "get", "it", ",", "Claudette", "!", "hope", "you", "feel", "well", "fast", "!"]
(c3-13 / multi-sentence
       :snt1 (c3-0 / say-01
                   :ARG0 (c3-12 / i)
                   :ARG1 (c3-10 / glad-02
                                :ARG0 (c3-15 / get-01
                                             :ARG0 (c3-9 / person
                                                         :name (c3-14 / name
                                                                      :op1 "Claudette"))
                                             :ARG1 (c3-4 / it))
                                :degree (c3-11 / so))
                   :ARG2 c3-9)
       :snt2 (c3-5 / hope-01
                   :ARG0 (c3-6 / i)
                   :ARG1 (c3-7 / have-degree-91
                               :ARG1 (c3-1 / feel-01
                                           :ARG0 c3-9)
                               :ARG2 (c3-3 / well-05
                                           :ARG1 c3-9)
                               :ARG3 (c3-2 / more)
                               :ARG1-of (c3-8 / fast-02))))
