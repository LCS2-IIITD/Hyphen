# ::snt This is better than the tweet
# ::tokens ["This", "is", "better", "than", "the", "tweet"]
# ::lemmas ["this", "be", "well", "than", "the", "tweet"]
(c2-1 / have-degree-91
      :ARG1 (c2-2 / this)
      :ARG2 (c2-3 / good-02
                  :ARG1 c2-2)
      :ARG3 (c2-4 / more)
      :ARG4 (c2-0 / thing
                  :ARG1-of (c2-5 / tweet-01)))

# ::snt Following you
# ::tokens ["Following", "you"]
# ::lemmas ["follow", "you"]
(c3-1 / follow-02
      :ARG1 (c3-0 / you))

# ::snt an easy way to tell a pretentious food snob w shit taste in food...
# ::tokens ["an", "easy", "way", "to", "tell", "a", "pretentious", "food", "snob", "w", "shit", "taste", "in", "food", "..."]
# ::lemmas ["an", "easy", "way", "to", "tell", "a", "pretentious", "food", "snob", "w", "shit", "taste", "in", "food", "..."]
(c5-3 / way
      :ARG1-of (c5-10 / easy-05)
      :manner-of (c5-7 / tell-01
                       :ARG1 (c5-1 / and
                                   :op1 (c5-0 / snob
                                              :mod (c5-2 / food)
                                              :mod (c5-9 / pretentious))
                                   :op2 (c5-4 / taste
                                              :mod (c5-5 / food)
                                              :mod (c5-8 / shit)))
                       :ARG2 (c5-6 / person)))

# ::snt What's not to love
# ::tokens ["What", "'s", "not", "to", "love"]
# ::lemmas ["what", "be", "not", "to", "love"]
(c7-1 / love-01
      :ARG1 (c7-0 / amr-unknown)
      :polarity -)

# ::snt i love instant noodles and will defend them passionately.
# ::tokens ["i", "love", "instant", "noodles", "and", "will", "defend", "them", "passionately", "."]
# ::lemmas ["i", "love", "instant", "noodle", "and", "will", "defend", "they", "passionately", "."]
(c8-1 / and
      :op1 (c8-3 / love-01
                 :ARG0 (c8-5 / i)
                 :ARG1 (c8-6 / noodle
                             :mod (c8-2 / instant)))
      :op2 (c8-0 / defend-01
                 :ARG0 c8-5
                 :ARG1 c8-6
                 :manner (c8-4 / passionate)))

# ::snt That's for sure!Don't worry about the vaccine if you eat Ramen!
# ::tokens ["That", "'s", "for", "sure!Don't", "worry", "about", "the", "vaccine", "if", "you", "eat", "Ramen", "!"]
# ::lemmas ["that", "be", "for", "sure!don't", "worry", "about", "the", "vaccine", "if", "you", "eat", "Ramen", "!"]
(c9-0 / sure-02
      :ARG1 (c9-1 / that)
      :mode expressive)

# ::snt You know what's good in instant Ramen noodles?After boiling as directed, crack an egg or into the hot water and let them cook, off the burner. You can even mix them while they get done. But I prefer to keep them whole till your preferred doneness (soft or harder yolks)
# ::tokens ["You", "know", "what", "'s", "good", "in", "instant", "Ramen", "noodles?After", "boiling", "as", "directed", ",", "crack", "an", "egg", "or", "into", "the", "hot", "water", "and", "let", "them", "cook", ",", "off", "the", "burner", ".", "You", "can", "even", "mix", "them", "while", "they", "get", "done", ".", "But", "I", "prefer", "to", "keep", "them", "whole", "till", "your", "preferred", "doneness", "(", "soft", "or", "harder", "yolks", ")"]
# ::lemmas ["you", "know", "what", "be", "good", "in", "instant", "Ramen", "noodles?after", "boil", "as", "direct", ",", "crack", "an", "egg", "or", "into", "the", "hot", "water", "and", "let", "they", "cook", ",", "off", "the", "burner", ".", "you", "can", "even", "mix", "they", "while", "they", "get", "do", ".", "but", "i", "prefer", "to", "keep", "they", "whole", "till", "your", "preferred", "doneness", "(", "soft", "or", "hard", "yolk", ")"]
(c10-14 / multi-sentence
        :snt1 (c10-37 / know-01
                      :ARG0 (c10-25 / you)
                      :ARG1 (c10-11 / thing
                                    :ARG1-of (c10-13 / good-02
                                                     :ARG2 (c10-15 / noodle
                                                                   :mod (c10-4 / instant)
                                                                   :mod (c10-12 / rice))))
                      :polarity (c10-28 / amr-unknown)
                      :time (c10-16 / after
                                    :op1 (c10-35 / boil-01
                                                 :ARG1 c10-15
                                                 :ARG1-of (c10-0 / direct-02))))
        :snt2 (c10-1 / and
                     :op1 (c10-6 / crack-01
                                 :ARG1 (c10-17 / egg))
                     :op2 (c10-36 / put-01
                                  :ARG1 c10-17
                                  :ARG2 (c10-7 / water
                                               :ARG1-of (c10-30 / hot-05)))
                     :op3 (c10-34 / let-01
                                  :ARG1 (c10-2 / cook-01
                                               :ARG1 c10-15
                                               :location (c10-10 / off
                                                                 :op1 c10-11
                                                                 :ARG0-of (c10-27 / burn-01)))))
        :snt3 (c10-33 / possible-01
                      :ARG1 (c10-29 / mix-01
                                    :ARG0 (c10-26 / you)
                                    :ARG1 c10-15
                                    :time (c10-20 / be-done-08
                                                  :ARG0 c10-26))
                      :mod (c10-31 / even))
        :snt4 (c10-9 / contrast-01
                     :ARG2 (c10-21 / prefer-01
                                   :ARG0 (c10-22 / i)
                                   :ARG1 (c10-5 / keep-01
                                                :ARG0 c10-26
                                                :ARG1 (c10-18 / whole)
                                                :time (c10-8 / till
                                                             :op1 (c10-19 / prefer-01
                                                                          :ARG0 c10-26
                                                                          :ARG1 (c10-24 / doneness
                                                                                        :ARG1-of (c10-23 / mean-01
                                                                                                         :ARG2 (c10-32 / or
                                                                                                                       :op1 (c10-3 / hard-04
                                                                                                                                   :op2-of c10-32))))))))))

# ::snt Well Im all good then. Just had my ramen fix yesterday
# ::tokens ["Well", "I", "m", "all", "good", "then", ".", "Just", "had", "my", "ramen", "fix", "yesterday"]
# ::lemmas ["well", "i", "m", "all", "good", "then", ".", "just", "have", "my", "raman", "fix", "yesterday"]
(c15-9 / multi-sentence
       :snt1 (c15-6 / good-02
                    :ARG1 (c15-8 / i)
                    :mod (c15-0 / all)
                    :mod (c15-4 / then)
                    :mod (c15-2 / well))
       :snt2 (c15-1 / fix-02
                    :ARG0 (c15-3 / i)
                    :ARG1 (c15-5 / ramen)
                    :time (c15-10 / yesterday)
                    :mod (c15-7 / just)))

# ::snt Or McDonalds, Wendys or any other fast food
# ::tokens ["Or", "McDonalds", ",", "Wendys", "or", "any", "other", "fast", "food"]
# ::lemmas ["or", "McDonalds", ",", "Wendys", "or", "any", "other", "fast", "food"]
(c17-6 / or
       :op1 (c17-3 / company
                   :name (c17-8 / name
                                :op1 "McDonalds"))
       :op2 (c17-0 / company
                   :name (c17-7 / name
                                :op1 "Wendys"))
       :op3 (c17-2 / food
                   :ARG1-of (c17-5 / fast-02)
                   :mod (c17-4 / other)
                   :mod (c17-1 / any)))

# ::snt Exactly
# ::tokens ["Exactly"]
# ::lemmas ["exactly"]
(c18-0 / exact)

# ::snt Yeah, seriously! Theres enough sodium in one of those to kill a baby!
# ::tokens ["Yeah", ",", "seriously", "!", "There", "s", "enough", "sodium", "in", "one", "of", "those", "to", "kill", "a", "baby", "!"]
# ::lemmas ["yeah", ",", "seriously", "!", "there", "s", "enough", "sodium", "in", "one", "of", "those", "to", "kill", "a", "baby", "!"]
(c20-7 / multi-sentence
       :snt1 (c20-0 / serious-01
                    :mod (c20-9 / yeah)
                    :mode expressive)
       :snt2 (c20-5 / sodium
                    :location (c20-2 / one
                                     :ARG1-of (c20-6 / include-91
                                                     :ARG2 (c20-3 / that)))
                    :ARG1-of (c20-1 / have-quant-91
                                    :ARG3 (c20-10 / enough)
                                    :ARG6 (c20-8 / kill-01
                                                 :ARG1 (c20-4 / baby)))))

# ::snt Im kinda hungry for ramen now
# ::tokens ["I", "m", "kinda", "hungry", "for", "ramen", "now"]
# ::lemmas ["i", "m", "kinda", "hungry", "for", "raman", "now"]
(c21-0 / hunger-01
       :ARG0 (c21-3 / i)
       :ARG1 (c21-1 / ramen)
       :degree (c21-4 / kind-of)
       :time (c21-2 / now))

# ::snt Love this.
# ::tokens ["Love", "this", "."]
# ::lemmas ["love", "this", "."]
(c23-1 / love-01
       :ARG1 (c23-0 / this))

# ::snt Its already been done.
# ::tokens ["Its", "already", "been", "done", "."]
# ::lemmas ["its", "already", "be", "do", "."]
(c25-0 / be-done-08
       :ARG1 (c25-1 / it)
       :time (c25-2 / already))

# ::snt Ive been amazed when people tell me they wont take the shot because they dont know whats in it. They will then go to the grocery store and buy a variety of prepackaged foods containing chemicals they cannot pronounce, then eat and drink those things daily.
# ::tokens ["I", "ve", "been", "amazed", "when", "people", "tell", "me", "they", "wo", "nt", "take", "the", "shot", "because", "they", "do", "nt", "know", "what", "s", "in", "it", ".", "They", "will", "then", "go", "to", "the", "grocery", "store", "and", "buy", "a", "variety", "of", "prepackaged", "foods", "containing", "chemicals", "they", "can", "not", "pronounce", ",", "then", "eat", "and", "drink", "those", "things", "daily", "."]
# ::lemmas ["i", "ve", "be", "amazed", "when", "people", "tell", "i", "they", "will", "not", "take", "the", "shot", "because", "they", "do", "not", "know", "what", "s", "in", "it", ".", "they", "will", "then", "go", "to", "the", "grocery", "store", "and", "buy", "a", "variety", "of", "prepackage", "food", "contain", "chemical", "they", "can", "not", "pronounce", ",", "then", "eat", "and", "drink", "those", "thing", "daily", "."]
(c26-12 / multi-sentence
        :snt1 (c26-22 / amaze-01
                      :ARG0 (c26-9 / tell-01
                                   :ARG0 (c26-29 / person)
                                   :ARG1 (c26-5 / take-01
                                                :ARG0 c26-29
                                                :ARG1 (c26-16 / shot)
                                                :ARG1-of (c26-4 / cause-01
                                                                :ARG0 (c26-30 / know-01
                                                                              :ARG0 c26-29
                                                                              :ARG1 (c26-13 / thing
                                                                                            :location c26-16)
                                                                              :polarity -))
                                                :polarity -)
                                   :ARG2 (c26-3 / i))
                      :snt2 (c26-14 / and
                                    :op1 (c26-11 / go-02
                                                 :ARG0 (c26-19 / they)
                                                 :ARG4 (c26-28 / store
                                                               :mod (c26-21 / grocery))
                                                 :time (c26-23 / then))
                                    :op2 (c26-27 / buy-01
                                                 :ARG0 c26-19
                                                 :ARG1 (c26-24 / food
                                                               :ARG1-of (c26-26 / prepackage-00)
                                                               :ARG0-of (c26-0 / contain-01
                                                                               :ARG1 (c26-6 / chemical
                                                                                            :ARG1-of (c26-18 / pronounce-01
                                                                                                             :ARG0 c26-19
                                                                                                             :ARG1-of (c26-17 / possible-01
                                                                                                                              :polarity -))))
                                                               :mod (c26-7 / variety)))
                                    :op3 (c26-1 / and
                                                :op1 (c26-15 / eat-01
                                                             :ARG0 c26-19)
                                                :op2 (c26-2 / drink-01
                                                            :ARG0 c26-19
                                                            :ARG1 c26-24)
                                                :time (c26-25 / then)
                                                :frequency (c26-10 / rate-entity-91
                                                                   :ARG3 (c26-8 / temporal-quantity
                                                                                :unit (c26-20 / day)
                                                                                :quant 1))))))

# ::snt What if you grow it yourself?
# ::tokens ["What", "if", "you", "grow", "it", "yourself", "?"]
# ::lemmas ["what", "if", "you", "grow", "it", "yourself", "?"]
(c27-2 / amr-unknown
       :condition (c27-0 / grow-03
                         :ARG0 (c27-3 / you)
                         :ARG1 (c27-1 / it)
                         :mod c27-3))

# ::snt If you've eaten lettuce, don't worry about what's in the vaccine.
# ::tokens ["If", "you", "'ve", "eaten", "lettuce", ",", "do", "n't", "worry", "about", "what", "'s", "in", "the", "vaccine", "."]
# ::lemmas ["if", "you", "'ve", "eat", "lettuce", ",", "do", "not", "worry", "about", "what", "be", "in", "the", "vaccine", "."]
(c28-0 / worry-02
       :ARG0 (c28-2 / thing
                    :part-of (c28-1 / vaccine))
       :ARG1 (c28-4 / you)
       :condition (c28-5 / eat-01
                         :ARG0 c28-4
                         :ARG1 (c28-3 / lettuce))
       :polarity -)

# ::snt I will take my chances on the noodles The Vax? No frickin way in cornbread hell
# ::tokens ["I", "will", "take", "my", "chances", "on", "the", "noodles", "The", "Vax", "?", "No", "frickin", "way", "in", "cornbread", "hell"]
# ::lemmas ["i", "will", "take", "my", "chance", "on", "the", "noodle", "the", "Vax", "?", "no", "frickin", "way", "in", "cornbread", "hell"]
(c29-8 / multi-sentence
       :snt1 (c29-3 / chance-01
                    :ARG0 (c29-7 / i)
                    :ARG1 (c29-9 / noodle)
                    :polarity (c29-1 / amr-unknown))
       :snt2 (c29-4 / way
                    :mod (c29-2 / frickin)
                    :location (c29-5 / hell
                                     :mod (c29-0 / cornbread))
                    :polarity -)
       :snt3 (c29-6 / have-polarity-91
                    :ARG1 c29-4)
       :polarity (c29-10 / amr-unknown)
       :ARG2 -)

# ::snt Hahaha!
# ::tokens ["Hahaha", "!"]
# ::lemmas ["Hahaha", "!"]
(c30-0 / haha
       :mode expressive)

# ::snt i went to a noodle factory years ago its takes longer. to make them in the factory then it does at home, thats some noodle magic !
# ::tokens ["i", "went", "to", "a", "noodle", "factory", "years", "ago", "its", "takes", "longer", ".", "to", "make", "them", "in", "the", "factory", "then", "it", "does", "at", "home", ",", "that", "s", "some", "noodle", "magic", "!"]
# ::lemmas ["i", "go", "to", "a", "noodle", "factory", "year", "ago", "its", "take", "long", ".", "to", "make", "they", "in", "the", "factory", "then", "it", "do", "at", "home", ",", "that", "s", "some", "noodle", "magic", "!"]
(c32-7 / multi-sentence
       :snt1 (c32-5 / go-02
                    :ARG0 (c32-2 / i)
                    :ARG4 (c32-18 / factory
                                  :mod (c32-8 / noodle))
                    :time (c32-22 / before
                                  :op1 (c32-0 / now)
                                  :quant (c32-19 / multiple
                                                 :op1 (c32-4 / temporal-quantity
                                                             :unit (c32-16 / year)
                                                             :quant 1))))
       :snt2 (c32-3 / take-10
                    :ARG0 (c32-13 / make-01
                                  :ARG1 (c32-9 / they)
                                  :location (c32-14 / factory))
                    :ARG1-of (c32-20 / have-degree-91
                                     :ARG2 (c32-21 / long-03
                                                   :ARG1 c32-3)
                                     :ARG3 (c32-6 / more)
                                     :ARG4 (c32-10 / make-01
                                                   :ARG1 c32-9
                                                   :location (c32-1 / home))))
       :snt3 (c32-17 / magic
                     :mod (c32-15 / noodle)
                     :mod (c32-11 / some)
                     :domain (c32-12 / that)))
