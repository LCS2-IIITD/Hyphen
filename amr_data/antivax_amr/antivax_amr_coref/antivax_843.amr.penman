# ::snt Which province do you live in? I know for a fact that they supplied those to non-admitted Covid patients in KZN, and even more, delivered to their homes.
# ::tokens ["Which", "province", "do", "you", "live", "in", "?", "I", "know", "for", "a", "fact", "that", "they", "supplied", "those", "to", "non", "-", "admitted", "Covid", "patients", "in", "KZN", ",", "and", "even", "more", ",", "delivered", "to", "their", "homes", "."]
# ::lemmas ["which", "province", "do", "you", "live", "in", "?", "i", "know", "for", "a", "fact", "that", "they", "supply", "those", "to", "non", "-", "admit", "Covid", "patient", "in", "KZN", ",", "and", "even", "more", ",", "deliver", "to", "their", "home", "."]
(c1-7 / multi-sentence
      :snt1 (c1-18 / live-01
                   :ARG0 (c1-12 / you)
                   :location (c1-20 / province
                                    :mod (c1-13 / amr-unknown)))
      :snt2 (c1-21 / know-01
                   :ARG0 (c1-3 / i)
                   :ARG1 (c1-11 / supply-01
                                :ARG0 (c1-6 / they)
                                :ARG1 (c1-4 / that)
                                :ARG2 (c1-9 / and
                                            :op1 (c1-17 / patient
                                                        :ARG1-of (c1-1 / admit-02
                                                                       :polarity -)
                                                        :mod (c1-5 / organization
                                                                   :name (c1-8 / name
                                                                               :op1 "Covid"))
                                                        :location (c1-19 / state
                                                                         :name (c1-2 / name
                                                                                     :op1 "KZN")))
                                            :op2 (c1-15 / more
                                                        :mod (c1-10 / even))
                                            :ARG1-of (c1-0 / deliver-01
                                                           :ARG2 (c1-16 / home
                                                                        :poss c1-17))))
                   :mod (c1-14 / fact)))
