# ::snt Quite right too
# ::tokens ["Quite", "right", "too"]
# ::lemmas ["quite", "right", "too"]
(c1-2 / right-06
      :mod (c1-1 / too)
      :degree (c1-0 / quite))

# ::snt Absolutely x
# ::tokens ["Absolutely", "x"]
# ::lemmas ["absolutely", "x"]
(c2-0 / person
      :name (c2-2 / name
                  :op1 "x")
      :mod (c2-1 / absolute))

# ::snt Thats the key to this, lets vacinate like there is no tomorrow, or there might not be a tomorrow.
# ::tokens ["That", "s", "the", "key", "to", "this", ",", "lets", "vacinate", "like", "there", "is", "no", "tomorrow", ",", "or", "there", "might", "not", "be", "a", "tomorrow", "."]
# ::lemmas ["that", "s", "the", "key", "to", "this", ",", "let", "vacinate", "like", "there", "be", "no", "tomorrow", ",", "or", "there", "might", "not", "be", "a", "tomorrow", "."]
(c3-11 / key-02
       :ARG1 (c3-7 / that)
       :ARG2 (c3-2 / this)
       :ARG1-of (c3-10 / mean-01
                       :ARG2 (c3-6 / or
                                   :op1 (c3-5 / vacate-01
                                              :ARG0 (c3-1 / we)
                                              :ARG1-of (c3-8 / resemble-01
                                                             :ARG2 (c3-0 / vacate-01
                                                                         :time (c3-12 / tomorrow)
                                                                         :polarity -))
                                              :mode imperative)
                                   :op2 (c3-9 / possible-01
                                              :ARG1 (c3-4 / vacate-01
                                                          :time (c3-3 / tomorrow)
                                                          :polarity -)))))

# ::snt Definitely xx
# ::tokens ["Definitely", "xx"]
# ::lemmas ["definitely", "xx"]
(c4-0 / definite
      :domain (c4-1 / person
                    :name (c4-2 / name
                                :op1 " xx")))

# ::snt Lets hope so xx
# ::tokens ["Lets", "hope", "so", "xx"]
# ::lemmas ["let", "hope", "so", "xx"]
(c5-1 / hope-01
      :ARG0 (c5-0 / we)
      :ARG1 (c5-2 / so)
      :mode imperative)

# ::snt Fab
# ::tokens ["Fab"]
# ::lemmas ["Fab"]
(c6-0 / person
      :name (c6-1 / name
                  :op1 "Fab"))

# ::snt Awww that must have been a worry . Glad she got through it x
# ::tokens ["Awww", "that", "must", "have", "been", "a", "worry", ".", "Glad", "she", "got", "through", "it", "x"]
# ::lemmas ["Awww", "that", "must", "have", "be", "a", "worry", ".", "glad", "she", "get", "through", "it", "x"]
(c7-8 / multi-sentence
      :snt1 (c7-7 / infer-01
                  :ARG1 (c7-2 / worry-01
                              :ARG0 (c7-5 / that))
                  :mod (c7-1 / awww
                             :mode expressive))
      :snt2 (c7-6 / glad-02
                  :ARG0 (c7-9 / get-through-13
                              :ARG0 (c7-0 / she)
                              :ARG1 (c7-3 / it))
                  :ARG1 (c7-4 / i)))

# ::snt My youngest sister who also works in the NHS, had her's last weds, she also had covid last year
# ::tokens ["My", "youngest", "sister", "who", "also", "works", "in", "the", "NHS", ",", "had", "her", "'s", "last", "weds", ",", "she", "also", "had", "covid", "last", "year"]
# ::lemmas ["my", "young", "sister", "who", "also", "work", "in", "the", "NHS", ",", "have", "her", "'s", "last", "wed", ",", "she", "also", "have", "covid", "last", "year"]
(c8-14 / and
       :op1 (c8-15 / have-03
                   :ARG0 (c8-18 / person
                                :ARG0-of (c8-1 / have-rel-role-91
                                               :ARG1 (c8-2 / i)
                                               :ARG2 (c8-11 / sister))
                                :ARG0-of (c8-4 / work-01
                                               :ARG2 (c8-6 / government-organization
                                                           :name (c8-8 / name
                                                                       :op1 "NHS"))
                                               :mod (c8-10 / also))
                                :ARG1-of (c8-3 / have-degree-91
                                               :ARG2 (c8-12 / young)
                                               :ARG3 (c8-7 / most)))
                   :ARG1 (c8-9 / weds
                               :poss c8-18
                               :mod (c8-17 / last)))
       :op2 (c8-5 / have-03
                  :ARG0 c8-18
                  :ARG1 (c8-16 / product
                               :name c8-8
                               :op1 " covid"))
       :time (c8-13 / year
                    :mod c8-17)
       :mod (c8-0 / also))

# ::snt My sister goes tomorrow midwife
# ::tokens ["My", "sister", "goes", "tomorrow", "midwife"]
# ::lemmas ["my", "sister", "go", "tomorrow", "midwife"]
(c9-4 / go-02
      :ARG0 (c9-5 / person
                  :ARG0-of (c9-2 / have-rel-role-91
                                 :ARG1 (c9-1 / i)
                                 :ARG2 (c9-0 / sister)))
      :ARG4 (c9-6 / midwife)
      :time (c9-3 / tomorrow))

# ::snt effects*
# ::tokens ["effects", "*"]
# ::lemmas ["effect", "*"]
(c10-0 / effect-03)

# ::snt my missus had hers last week (new years eve), she's not had any adverse affects and she is allergic to a lot of things.....fingers crossed
# ::tokens ["my", "missus", "had", "hers", "last", "week", "(", "new", "years", "eve", ")", ",", "she", "'s", "not", "had", "any", "adverse", "affects", "and", "she", "is", "allergic", "to", "a", "lot", "of", "things", ".....", "fingers", "crossed"]
# ::lemmas ["my", "missus", "have", "hers", "last", "week", "(", "new", "years", "eve", ")", ",", "she", "be", "not", "have", "any", "adverse", "affect", "and", "she", "be", "allergic", "to", "a", "lot", "of", "thing", ".....", "finger", "cross"]
(c11-7 / multi-sentence
       :snt1 (c11-16 / have-03
                     :ARG0 (c11-15 / missus
                                   :poss (c11-2 / i))
                     :ARG1 (c11-6 / thing
                                  :poss c11-15)
                     :time (c11-4 / week
                                  :mod (c11-17 / last)
                                  :ARG1-of (c11-11 / mean-01
                                                   :ARG2 (c11-14 / festival
                                                                 :name (c11-8 / name
                                                                              :op1 "New"
                                                                              :op2 "Years"
                                                                              :op3 "Eve")))))
       :snt2 (c11-13 / and
                     :op1 (c11-9 / affect-01
                                 :ARG0 (c11-0 / adverse)
                                 :ARG1 (c11-10 / she)
                                 :polarity -)
                     :op2 (c11-18 / allergy
                                  :domain c11-10
                                  :topic (c11-5 / thing
                                                :quant (c11-1 / lot))))
       :snt3 (c11-3 / cross-01
                    :ARG1 (c11-12 / finger)))
