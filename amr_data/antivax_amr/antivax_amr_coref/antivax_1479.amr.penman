# ::snt joo haha men trodde du inte fattade frst elrkeoeokrbr3i
# ::tokens ["joo", "haha", "men", "trodde", "du", "inte", "fattade", "frst", "elrkeoeokrbr3i"]
# ::lemmas ["joo", "haha", "man", "trodde", "du", "inte", "fattade", "frst", "elrkeoeokrbr3i"]
(c1-0 / and
      :op1 (c1-2 / laugh-01
                 :ARG0 (c1-5 / i)
                 :manner (c1-3 / loud)
                 :mode expressive)
      :op2 (c1-1 / trodde
                 :poss (c1-4 / person
                             :name (c1-6 / name
                                         :op1 "Elrkeoeokrbr3i"))))

# ::snt du frstod inte mitt skmt.
# ::tokens ["du", "frstod", "inte", "mitt", "skmt", "."]
# ::lemmas ["du", "frstod", "inte", "mitt", "skmt", "."]
(c2-3 / inte-li-91
      :ARG1 (c2-1 / organization
                  :name (c2-4 / name
                              :op1 "United"
                              :op2 "States"
                              :op3 "of"
                              :op4 "America"))
      :ARG2 (c2-0 / organization
                  :name (c2-2 / name
                              :op1 "Mitt"
                              :op2 "Skmt")))

# ::snt JAHA DE E COVID SKLART OBVIOUSLY LOL
# ::tokens ["JAHA", "DE", "E", "COVID", "SKLART", "OBVIOUSLY", "LOL"]
# ::lemmas ["JAHA", "DE", "E", "covid", "sklart", "obviously", "lol"]
(c3-0 / laugh-01
      :ARG0 (c3-3 / i)
      :ARG2 (c3-2 / person
                  :name (c3-4 / name
                              :op1 "Jah"
                              :op2 "de"
                              :op3 "E"
                              :op4 "Covenie"))
      :manner (c3-1 / loud)
      :mode expressive)

# ::snt vaccin roulette, stelkramp, covid, pssjukan INGEN VET
# ::tokens ["vaccin", "roulette", ",", "stelkramp", ",", "covid", ",", "pssjukan", "INGEN", "VET"]
# ::lemmas ["vaccin", "roulette", ",", "stelkramp", ",", "covid", ",", "pssjukan", "INGEN", "VET"]
(c4-0 / and
      :op1 (c4-4 / vaccinate-01
                 :ARG1 (c4-8 / person
                             :name (c4-9 / name
                                         :op1 "Vaccin"
                                         :op2 "Roulette")))
      :op2 (c4-6 / person
                 :name (c4-7 / name
                             :op1 "Stelkramp"))
      :op3 (c4-3 / person
                 :name (c4-5 / name
                             :op1 "Vick"))
      :op4 (c4-2 / person
                 :name (c4-1 / name
                             :op1 "Pssjukan"
                             :op2 "Ingen"
                             :op3 "VET")))

# ::snt hahah va
# ::tokens ["hahah", "va"]
# ::lemmas ["hahah", "va"]
(c5-1 / laugh-01
      :ARG0 (c5-0 / i)
      :manner (c5-2 / loud)
      :mode expressive)

# ::snt Ingen aning! De r en surprise
# ::tokens ["Ingen", "aning", "!", "De", "r", "en", "surprise"]
# ::lemmas ["Ingen", "aning", "!", "De", "r", "en", "surprise"]
(c6-2 / multi-sentence
      :snt1 (c6-1 / inen-Aning
                  :mode expressive)
      :snt2 (c6-0 / surprise-01
                  :polarity -
                  :mode expressive))

# ::snt omg va ska du f?!?
# ::tokens ["omg", "va", "ska", "du", "f", "?", "!", "?"]
# ::lemmas ["omg", "va", "ska", "du", "f", "?", "!", "?"]
(c7-2 / possible-01
      :polarity (c7-3 / amr-unknown)
      :ARG1 (c7-0 / du-f?!
                  :mode expressive)
      :mod (c7-1 / oh-my-god
                 :mode expressive))

# ::snt Yass I'm so excited for daddy lven to spy on me
# ::tokens ["Yass", "I", "'m", "so", "excited", "for", "daddy", "lven", "to", "spy", "on", "me"]
# ::lemmas ["yass", "i", "be", "so", "excited", "for", "daddy", "lven", "to", "spy", "on", "i"]
(c8-8 / excite-01
      :ARG0 (c8-0 / spy-01
                  :ARG0 (c8-7 / person
                              :ARG0-of (c8-4 / have-rel-role-91
                                             :ARG1 (c8-3 / i)
                                             :ARG2 (c8-1 / daddy)
                                             :ARG3 (c8-5 / lven)))
                  :ARG1 c8-3)
      :ARG1 c8-3
      :degree (c8-6 / so)
      :mod (c8-2 / ass
                 :mode expressive))

# ::snt go get that goverment tracker bestie
# ::tokens ["go", "get", "that", "goverment", "tracker", "bestie"]
# ::lemmas ["go", "get", "that", "goverment", "tracker", "bestie"]
(c9-0 / say-01
      :ARG0 (c9-8 / i)
      :ARG1 (c9-7 / go-05
                  :ARG0 (c9-3 / you)
                  :ARG1 (c9-9 / get-01
                              :ARG0 c9-3
                              :ARG1 (c9-5 / person
                                          :ARG0-of (c9-4 / track-01
                                                         :ARG1 (c9-1 / government-organization
                                                                     :ARG0-of (c9-6 / govern-01)))
                                          :mod (c9-2 / that)
                                          :ARG2-of c9-0))
                  :mode imperative))
