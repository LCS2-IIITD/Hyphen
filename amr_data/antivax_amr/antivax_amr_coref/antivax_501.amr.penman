# ::snt You should be getting a call from Nick Fury pretty soon...
# ::tokens ["You", "should", "be", "getting", "a", "call", "from", "Nick", "Fury", "pretty", "soon", "..."]
# ::lemmas ["you", "should", "be", "get", "a", "call", "from", "Nick", "Fury", "pretty", "soon", "..."]
(c1-3 / recommend-01
      :ARG1 (c1-4 / get-01
                  :ARG0 (c1-7 / you)
                  :ARG1 (c1-1 / call-02
                              :ARG0 (c1-5 / person
                                          :name (c1-6 / name
                                                      :op1 "Nick"
                                                      :op2 "Fury"))
                              :ARG1 c1-7)
                  :time (c1-0 / soon
                              :mod (c1-2 / pretty))))

# ::snt Got AstraZeneca Today ... so far, so good
# ::tokens ["Got", "AstraZeneca", "Today", "...", "so", "far", ",", "so", "good"]
# ::lemmas ["got", "AstraZeneca", "Today", "...", "so", "far", ",", "so", "good"]
(c2-5 / multi-sentence
      :snt1 (c2-3 / get-01
                  :ARG0 (c2-4 / i)
                  :ARG1 (c2-1 / company
                              :name (c2-6 / name
                                          :op1 "AstraZeneca"))
                  :time (c2-2 / today))
      :snt2 (c2-7 / good-02
                  :mod (c2-0 / so-far)))

# ::snt Mazel tov!
# ::tokens ["Mazel", "tov", "!"]
# ::lemmas ["mazel", "tov", "!"]
(c3-0 / azel
      :mode expressive)

# ::snt I have had superpowers for years !!!That's why I'm still here
# ::tokens ["I", "have", "had", "superpowers", "for", "years", "!", "!", "!", "That", "'s", "why", "I", "'m", "still", "here"]
# ::lemmas ["i", "have", "have", "superpower", "for", "years", "!", "!", "!", "that", "be", "why", "i", "be", "still", "here"]
(c4-0 / superpower
      :beneficiary (c4-6 / i)
      :duration (c4-7 / multiple
                      :op1 (c4-3 / temporal-quantity
                                 :unit (c4-8 / year)
                                 :quant 1))
      :ARG0-of (c4-1 / cause-01
                     :ARG1 (c4-4 / be-located-at-91
                                 :ARG1 c4-6
                                 :ARG2 (c4-2 / here)
                                 :mod (c4-5 / still)))
      :mode expressive)

# ::snt Butterfly effect. You stroking those Twitter keys!
# ::tokens ["Butterfly", "effect", ".", "You", "stroking", "those", "Twitter", "keys", "!"]
# ::lemmas ["Butterfly", "effect", ".", "you", "stroke", "those", "Twitter", "key", "!"]
(c5-6 / multi-sentence
      :snt1 (c5-9 / effect
                  :mod (c5-5 / person
                             :name (c5-7 / name
                                         :op1 "Butterfly")))
      :snt2 (c5-0 / stroke-01
                  :ARG0 (c5-8 / you)
                  :ARG1 (c5-1 / key
                              :mod (c5-2 / publication
                                         :name (c5-4 / name
                                                     :op1 "Twitter"))
                              :mod (c5-3 / that))))

# ::snt Primary care doc is thru Johns Hopkins... apparently they have a lottery system where I was automatically entered and picked. So...luck?
# ::tokens ["Primary", "care", "doc", "is", "thru", "Johns", "Hopkins", "...", "apparently", "they", "have", "a", "lottery", "system", "where", "I", "was", "automatically", "entered", "and", "picked", ".", "So", "...", "luck", "?"]
# ::lemmas ["primary", "care", "doc", "be", "thru", "Johns", "Hopkins", "...", "apparently", "they", "have", "a", "lottery", "system", "where", "i", "be", "automatically", "enter", "and", "pick", ".", "so", "...", "luck", "?"]
(c6-6 / multi-sentence
      :snt1 (c6-16 / be-from-91
                   :ARG1 (c6-0 / doctor
                               :mod (c6-4 / care-03
                                          :mod (c6-17 / primary)))
                   :ARG2 (c6-12 / facility
                                :name (c6-7 / name
                                            :op1 "Johns"
                                            :op2 "Hopkins")))
      :snt2 (c6-13 / have-03
                   :ARG0 (c6-5 / they)
                   :ARG1 (c6-10 / system
                                :mod (c6-15 / lottery)
                                :location-of (c6-11 / and
                                                    :op1 (c6-9 / enter-01
                                                               :ARG0 (c6-3 / i)
                                                               :manner (c6-8 / automatic))
                                                    :op2 (c6-14 / pick-01
                                                                :ARG1 c6-3)))
                   :ARG1-of (c6-1 / appear-02))
      :snt3 (c6-2 / luck
                  :polarity (c6-18 / amr-unknown)))

# ::snt Without getting too nosey, how did you end up getting scheduled?
# ::tokens ["Without", "getting", "too", "nosey", ",", "how", "did", "you", "end", "up", "getting", "scheduled", "?"]
# ::lemmas ["without", "get", "too", "nosey", ",", "how", "do", "you", "end", "up", "getting", "schedule", "?"]
(c7-7 / end-up-03
      :ARG1 (c7-6 / you)
      :ARG2 (c7-0 / schedule-01
                  :ARG1 c7-6)
      :manner (c7-1 / amr-unknown)
      :condition (c7-4 / get-03
                       :ARG1 c7-6
                       :ARG2 (c7-5 / nosey
                                   :ARG2-of (c7-2 / have-degree-91
                                                  :ARG1 c7-6
                                                  :ARG3 (c7-3 / too)))
                       :polarity -))

# ::snt Just wait until the super powers kick in!
# ::tokens ["Just", "wait", "until", "the", "super", "powers", "kick", "in", "!"]
# ::lemmas ["just", "wait", "until", "the", "super", "power", "kick", "in", "!"]
(c8-1 / wait-01
      :ARG1 (c8-6 / you)
      :mod (c8-3 / just)
      :time (c8-2 / until
                  :op1 (c8-5 / kick-in-02
                             :ARG1 (c8-4 / power
                                         :mod (c8-0 / super))))
      :mode imperative)

# ::snt Shouldnt that be written in a greeting card, along with a fat check?
# ::tokens ["Should", "nt", "that", "be", "written", "in", "a", "greeting", "card", ",", "along", "with", "a", "fat", "check", "?"]
# ::lemmas ["should", "not", "that", "be", "write", "in", "a", "greeting", "card", ",", "along", "with", "a", "fat", "check", "?"]
(c9-6 / recommend-01
      :ARG1 (c9-4 / write-01
                  :ARG1 (c9-5 / that)
                  :location (c9-1 / and
                                  :op1 (c9-3 / card
                                             :ARG2-of (c9-7 / greet-01))
                                  :op2 (c9-0 / check
                                             :ARG1-of (c9-2 / fat-03))))
      :polarity (c9-8 / amr-unknown)
      :polarity -)

# ::snt Only if you wear this I love Bron Bron t shirt Im making for you!
# ::tokens ["Only", "if", "you", "wear", "this", "I", "love", "Bron", "Bron", "t", "shirt", "I", "m", "making", "for", "you", "!"]
# ::lemmas ["only", "if", "you", "wear", "this", "i", "love", "Bron", "Bron", "t", "shirt", "i", "m", "make", "for", "you", "!"]
(c10-4 / love-01
       :ARG0 (c10-6 / i)
       :ARG1 (c10-3 / t-shirt
                    :mod (c10-5 / person
                                :name (c10-8 / name
                                             :op1 "Bron"
                                             :op2 "Bron"))
                    :ARG1-of (c10-7 / make-01
                                    :ARG0 c10-6
                                    :ARG3 (c10-9 / you)))
       :condition (c10-0 / wear-01
                         :ARG0 c10-9
                         :ARG1 (c10-1 / this)
                         :mod (c10-2 / only)))

# ::snt Congrats!
# ::tokens ["Congrats", "!"]
# ::lemmas ["Congrats", "!"]
(c11-0 / congratulate-01
       :mode expressive)

# ::snt I just had my first moderna yesterday..And I feel great.No pain or redness at site..Next month
# ::tokens ["I", "just", "had", "my", "first", "moderna", "yesterday", "..", "And", "I", "feel", "great", ".", "No", "pain", "or", "redness", "at", "site", "..", "Next", "month"]
# ::lemmas ["i", "just", "have", "my", "first", "moderna", "yesterday", "..", "and", "i", "feel", "great", ".", "no", "pain", "or", "redness", "at", "site", "..", "Next", "month"]
(c12-15 / multi-sentence
        :snt1 (c12-3 / have-03
                     :ARG0 (c12-14 / i)
                     :ARG1 (c12-10 / product
                                   :name (c12-16 / name
                                                 :op1 "Moderna")
                                   :ord (c12-7 / ordinal-entity
                                               :value 1)
                                   :poss c12-14)
                     :mod (c12-13 / just)
                     :time (c12-17 / yesterday))
        :snt2 (c12-1 / feel-01
                     :ARG0 (c12-4 / i)
                     :ARG1 (c12-12 / great))
        :snt3 (c12-5 / or
                     :op1 (c12-8 / pain-01
                                 :ARG1 (c12-6 / i)
                                 :polarity -)
                     :op2 (c12-9 / red-02
                                 :ARG1 c12-6
                                 :polarity -)
                     :location (c12-0 / site))
        :snt4 (c12-2 / month
                     :mod (c12-11 / next)))

# ::snt Appreciate the insight..just got my Pfizer and the second is scheduled for nd week in April. Onward!
# ::tokens ["Appreciate", "the", "insight", "..", "just", "got", "my", "Pfizer", "and", "the", "second", "is", "scheduled", "for", "nd", "week", "in", "April", ".", "Onward", "!"]
# ::lemmas ["appreciate", "the", "insight", "..", "just", "get", "my", "Pfizer", "and", "the", "second", "be", "schedule", "for", "nd", "week", "in", "April", ".", "onward", "!"]
(c13-13 / multi-sentence
        :snt1 (c13-3 / appreciate-02
                     :ARG1 (c13-12 / insight))
        :snt2 (c13-14 / and
                      :op1 (c13-10 / get-01
                                   :ARG0 (c13-6 / i)
                                   :ARG1 (c13-9 / thing
                                                :ord (c13-8 / ordinal-entity
                                                            :value 2))
                                   :mod (c13-11 / just))
                      :op2 (c13-0 / schedule-01
                                  :ARG1 (c13-5 / thing
                                               :ord (c13-7 / ordinal-entity
                                                           :value 2))
                                  :ARG3 (c13-4 / week
                                               :mod (c13-1 / date-entity
                                                           :month 4))))
        :snt3 (c13-2 / onward
                     :mode expressive))

# ::snt Arm was a little sore the second night. After that, zilch!
# ::tokens ["Arm", "was", "a", "little", "sore", "the", "second", "night", ".", "After", "that", ",", "zilch", "!"]
# ::lemmas ["arm", "be", "a", "little", "sore", "the", "second", "night", ".", "after", "that", ",", "zilch", "!"]
(c14-7 / multi-sentence
       :snt1 (c14-0 / sore
                    :domain (c14-2 / arm)
                    :degree (c14-6 / little)
                    :time (c14-1 / date-entity
                                 :dayperiod (c14-8 / night
                                                   :ord (c14-3 / ordinal-entity
                                                               :value 2))))
       :snt2 (c14-4 / zilch
                    :time (c14-9 / after
                                 :op1 (c14-5 / that))
                    :mode expressive))

# ::snt Would the reply to you be Mazel Shot?
# ::tokens ["Would", "the", "reply", "to", "you", "be", "Mazel", "Shot", "?"]
# ::lemmas ["would", "the", "reply", "to", "you", "be", "Mazel", "Shot", "?"]
(c15-2 / reply-01
       :ARG1 (c15-5 / you)
       :ARG2 (c15-0 / shoot-01
                    :ARG2 (c15-3 / product
                                 :name (c15-4 / name
                                              :op1 "Mazel")))
       :polarity (c15-1 / amr-unknown))

# ::snt Im getting number one, today. Not sure which brand.
# ::tokens ["I", "m", "getting", "number", "one", ",", "today", ".", "Not", "sure", "which", "brand", "."]
# ::lemmas ["i", "m", "get", "number", "one", ",", "today", ".", "not", "sure", "which", "brand", "."]
(c16-7 / multi-sentence
       :snt1 (c16-5 / get-01
                    :ARG0 (c16-6 / i)
                    :ARG1 (c16-8 / number
                                 :ord (c16-3 / ordinal-entity
                                             :value 1))
                    :time (c16-4 / today))
       :snt2 (c16-0 / sure-02
                    :ARG0 c16-6
                    :ARG1 (c16-2 / brand
                                 :mod (c16-1 / amr-unknown))
                    :polarity -))

# ::snt Mazel-tovaccine!
# ::tokens ["Mazel", "-", "tovaccine", "!"]
# ::lemmas ["mazel", "-", "tovaccine", "!"]
(c17-0 / person
       :name (c17-1 / name
                    :op1 "Mazel-tovaccine"))

# ::snt Mazel tov!
# ::tokens ["Mazel", "tov", "!"]
# ::lemmas ["mazel", "tov", "!"]
(c20-0 / azel
       :mode expressive)

# ::snt getting my first today... all the best!
# ::tokens ["getting", "my", "first", "today", "...", "all", "the", "best", "!"]
# ::lemmas ["get", "my", "first", "today", "...", "all", "the", "good", "!"]
(c21-9 / multi-sentence
       :snt1 (c21-7 / get-01
                    :ARG0 (c21-8 / i)
                    :ARG1 (c21-6 / thing
                                 :ord (c21-5 / ordinal-entity
                                             :value 1))
                    :time (c21-3 / today))
       :snt2 (c21-2 / wish-01
                    :ARG1 c21-6
                    :mod (c21-0 / all)
                    :ARG1-of (c21-4 / have-degree-91
                                    :ARG2 (c21-10 / good-02
                                                  :ARG1 c21-6)
                                    :ARG3 (c21-1 / most))))
