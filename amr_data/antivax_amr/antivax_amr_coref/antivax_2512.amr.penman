# ::snt youre children are blessed to have a mother such as your self. good job momma !
# ::tokens ["you", "re", "children", "are", "blessed", "to", "have", "a", "mother", "such", "as", "your", "self", ".", "good", "job", "momma", "!"]
# ::lemmas ["you", "re", "child", "be", "bless", "to", "have", "a", "mother", "such", "as", "your", "self", ".", "good", "job", "momma", "!"]
(c1-11 / multi-sentence
       :snt1 (c1-8 / bless-01
                   :ARG0 (c1-3 / have-rel-role-91
                               :ARG0 (c1-10 / person
                                            :ARG0-of (c1-9 / have-rel-role-91
                                                           :ARG1 (c1-12 / you)
                                                           :ARG2 (c1-1 / child)))
                               :ARG1 c1-12
                               :ARG2 (c1-2 / mother
                                           :example c1-12)))
       :snt2 (c1-6 / job
                   :ARG1-of (c1-7 / good-02)
                   :domain (c1-5 / person
                                 :ARG0-of (c1-0 / have-rel-role-91
                                                :ARG1 (c1-13 / you)
                                                :ARG2 (c1-4 / momma)))))

# ::snt Lmao !!
# ::tokens ["Lmao", "!", "!"]
# ::lemmas ["Lmao", "!", "!"]
(c3-1 / laugh-01
      :ARG0 (c3-0 / i)
      :manner (c3-2 / loud)
      :mode expressive)

# ::snt Exactly! She was even wearing a mask Even still I could tell how dumbfounded she looked
# ::tokens ["Exactly", "!", "She", "was", "even", "wearing", "a", "mask", "Even", "still", "I", "could", "tell", "how", "dumbfounded", "she", "looked"]
# ::lemmas ["exactly", "!", "she", "be", "even", "wear", "a", "mask", "even", "still", "i", "could", "tell", "how", "dumbfound", "she", "look"]
(c4-12 / multi-sentence
       :snt1 (c4-13 / exact
                    :mode expressive)
       :snt2 (c4-3 / wear-01
                   :ARG0 (c4-0 / she)
                   :ARG1 (c4-2 / mask)
                   :mod (c4-5 / even))
       :snt3 (c4-11 / possible-01
                    :ARG1 (c4-8 / tell-01
                                :ARG0 (c4-4 / i)
                                :ARG1 (c4-9 / look-02
                                            :ARG0 (c4-10 / she)
                                            :ARG1 (c4-1 / dumbfound-01
                                                        :ARG1 c4-10)))
                    :mod (c4-6 / still
                               :mod (c4-7 / even))))

# ::snt Or fail to read the bad ingredients, or fail to notice its experimental &amp; not approved, or fail to notice that year olds are dying of cardiac arrest. Schtupid.
# ::tokens ["Or", "fail", "to", "read", "the", "bad", "ingredients", ",", "or", "fail", "to", "notice", "its", "experimental", "&", "amp", ";", "not", "approved", ",", "or", "fail", "to", "notice", "that", "year", "olds", "are", "dying", "of", "cardiac", "arrest", ".", "Schtupid", "."]
# ::lemmas ["or", "fail", "to", "read", "the", "bad", "ingredient", ",", "or", "fail", "to", "notice", "its", "experimental", "&", "amp", ";", "not", "approve", ",", "or", "fail", "to", "notice", "that", "year", "olds", "be", "die", "of", "cardiac", "arrest", ".", "Schtupid", "."]
(c5-8 / multi-sentence
      :snt1 (c5-5 / or
                  :op2 (c5-18 / fail-01
                              :op1 (c5-7 / read-01
                                         :ARG1 (c5-3 / ingredient
                                                     :ARG1-of (c5-20 / bad-07)))
                              :op2 (c5-14 / fail-01
                                          :ARG2 (c5-9 / notice-01
                                                      :ARG1 (c5-17 / and
                                                                   :op1 (c5-11 / experiment-01)
                                                                   :op2 (c5-10 / amp)
                                                                   :poss (c5-13 / it))))
                              :op3 (c5-1 / approve-01
                                         :ARG1 c5-17
                                         :polarity -)
                              :op4 (c5-15 / fail-01
                                          :ARG2 (c5-2 / notice-01
                                                      :ARG1 (c5-0 / die-01
                                                                  :ARG1 (c5-21 / person
                                                                               :age (c5-6 / temporal-quantity
                                                                                          :unit (c5-16 / year)
                                                                                          :quant 1))
                                                                  :ARG1-of (c5-4 / cause-01
                                                                                 :ARG0 (c5-22 / arrest-01
                                                                                              :mod (c5-19 / heart))))))
                              :ARG2 c5-5))
      :snt2 (c5-12 / stupid))

# ::snt Oh God I hope I did.
# ::tokens ["Oh", "God", "I", "hope", "I", "did", "."]
# ::lemmas ["oh", "God", "i", "hope", "i", "do", "."]
(c6-0 / hope-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-4 / event
                  :mod c6-3)
      :mod (c6-1 / oh
                 :mod (c6-2 / god)
                 :mode expressive))

# ::snt How can someone be a doctor &amp; not realize mostly all drugs come from nature.. blows my mind
# ::tokens ["How", "can", "someone", "be", "a", "doctor", "&", "amp", ";", "not", "realize", "mostly", "all", "drugs", "come", "from", "nature", "..", "blows", "my", "mind"]
# ::lemmas ["how", "can", "someone", "be", "a", "doctor", "&", "amp", ";", "not", "realize", "you", "all", "drug", "come", "from", "nature", "..", "blow", "my", "mind"]
(c7-13 / multi-sentence
       :snt1 (c7-12 / possible-01
                    :ARG1 (c7-3 / and
                                :op1 (c7-0 / doctor)
                                :op2 (c7-15 / amp)
                                :domain (c7-1 / someone))
                    :manner (c7-2 / amr-unknown))
       :snt2 (c7-10 / realize-01
                    :ARG0 (c7-4 / i)
                    :ARG1 (c7-5 / come-03
                                :ARG1 (c7-6 / drug
                                            :mod (c7-9 / all)
                                            :mod (c7-7 / most))
                                :ARG2 (c7-14 / nature))
                    :ARG0-of (c7-11 / blow-01
                                    :ARG1 (c7-8 / mind
                                                :part-of c7-4))
                    :polarity -))

# ::snt Doctors think they are soooo smart because they paid so much to be brainwashed by a corrupt system. Good for you planting seeds
# ::tokens ["Doctors", "think", "they", "are", "soooo", "smart", "because", "they", "paid", "so", "much", "to", "be", "brainwashed", "by", "a", "corrupt", "system", ".", "Good", "for", "you", "planting", "seeds"]
# ::lemmas ["doctor", "think", "they", "be", "soooo", "smart", "because", "they", "pay", "so", "much", "to", "be", "brainwash", "by", "a", "corrupt", "system", ".", "good", "for", "you", "plant", "seed"]
(c8-13 / multi-sentence
       :snt1 (c8-7 / think-01
                   :ARG0 (c8-0 / doctor)
                   :ARG1 (c8-1 / smart-06
                               :ARG1 c8-0
                               :degree (c8-11 / so)
                               :ARG1-of (c8-3 / cause-01
                                              :ARG0 (c8-12 / pay-01
                                                           :ARG0 c8-0
                                                           :ARG1 (c8-4 / much
                                                                       :degree (c8-5 / so))
                                                           :ARG3 (c8-10 / brainwash-01
                                                                        :ARG0 (c8-8 / system
                                                                                    :ARG1-of (c8-2 / corrupt-01))
                                                                        :ARG1 c8-0)))))
       :snt2 (c8-9 / good-04
                   :ARG2 (c8-6 / plant-01
                               :ARG0 (c8-14 / you)
                               :ARG1 (c8-15 / seed))))

# ::snt PrOgRaMmEd
# ::tokens ["PrOgRaMmEd"]
# ::lemmas ["programmed"]
(c9-1 / thing
      :name (c9-0 / name
                  :op1 "PrOgRaMmEd"))
