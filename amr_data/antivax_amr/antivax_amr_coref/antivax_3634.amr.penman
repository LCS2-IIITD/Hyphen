# ::snt Your communication is always professional and respectful. Thanks for being a breath of fresh air and thank you for supporting the science that will get us out of this pandemic.
# ::tokens ["Your", "communication", "is", "always", "professional", "and", "respectful", ".", "Thanks", "for", "being", "a", "breath", "of", "fresh", "air", "and", "thank", "you", "for", "supporting", "the", "science", "that", "will", "get", "us", "out", "of", "this", "pandemic", "."]
# ::lemmas ["your", "communication", "be", "always", "professional", "and", "respectful", ".", "thank", "for", "be", "a", "breath", "of", "fresh", "air", "and", "thank", "you", "for", "support", "the", "science", "that", "will", "get", "we", "out", "of", "this", "pandemic", "."]
(c1-8 / multi-sentence
      :snt1 (c1-14 / and
                   :op1 (c1-19 / professional
                               :domain (c1-1 / communicate-01
                                             :ARG0 (c1-12 / you)))
                   :op2 (c1-6 / respect-01
                              :ARG0 c1-1)
                   :time (c1-10 / always))
      :snt2 (c1-0 / and
                  :op1 (c1-5 / thank-01
                             :ARG1 (c1-13 / you)
                             :ARG2 (c1-17 / breathe-01
                                          :ARG0 c1-13
                                          :ARG1 (c1-20 / air
                                                       :ARG1-of (c1-15 / fresh-04))))
                  :op2 (c1-3 / thank-01
                             :ARG1 c1-13
                             :ARG2 (c1-11 / support-01
                                          :ARG0 c1-13
                                          :ARG1 (c1-18 / science
                                                       :ARG0-of (c1-7 / get-05
                                                                      :ARG1 (c1-2 / we)
                                                                      :ARG2 (c1-4 / out-06
                                                                                  :ARG1 c1-2
                                                                                  :ARG2 (c1-16 / pandemic
                                                                                               :mod (c1-9 / this)))))))))

# ::snt +1You don't have to see me getting the vaccine to know I believe in it. Take my word for it.
# ::tokens ["+1You", "do", "n't", "have", "to", "see", "me", "getting", "the", "vaccine", "to", "know", "I", "believe", "in", "it", ".", "Take", "my", "word", "for", "it", "."]
# ::lemmas ["+1you", "do", "not", "have", "to", "see", "i", "get", "the", "vaccine", "to", "know", "i", "believe", "in", "it", ".", "take", "my", "word", "for", "it", "."]
(c2-10 / multi-sentence
       :snt1 (c2-6 / obligate-01
                   :ARG1 (c2-12 / you)
                   :ARG2 (c2-0 / see-01
                               :ARG0 c2-12
                               :ARG1 (c2-8 / get-01
                                           :ARG0 (c2-9 / i)
                                           :ARG1 (c2-5 / vaccine)))
                   :purpose (c2-11 / know-01
                                   :ARG0 c2-12
                                   :ARG1 (c2-4 / believe-01
                                               :ARG0 c2-9
                                               :ARG1 c2-5))
                   :polarity -
                   :li 1)
       :snt2 (c2-7 / take-01
                   :ARG0 c2-12
                   :mode imperative)
       :ARG1 (c2-1 / word
                   :poss (c2-2 / i)
                   :topic (c2-3 / it)))

# ::snt Many have asked whether I will receive the vaccine. YES! But only after every medical worker, teacher, public safety worker, &amp; person w underlying conditions who want the vaccine get it first. I'm in line, but I wont cut line until those far more important get it first! /2
# ::tokens ["Many", "have", "asked", "whether", "I", "will", "receive", "the", "vaccine", ".", "YES", "!", "But", "only", "after", "every", "medical", "worker", ",", "teacher", ",", "public", "safety", "worker", ",", "&", "amp", ";", "person", "w", "underlying", "conditions", "who", "want", "the", "vaccine", "get", "it", "first", ".", "I", "'m", "in", "line", ",", "but", "I", "wo", "nt", "cut", "line", "until", "those", "far", "more", "important", "get", "it", "first", "!", "/2"]
# ::lemmas ["many", "have", "ask", "whether", "i", "will", "receive", "the", "vaccine", ".", "yes", "!", "but", "only", "after", "every", "medical", "worker", ",", "teacher", ",", "public", "safety", "worker", ",", "&", "amp", ";", "person", "w", "underlie", "condition", "who", "want", "the", "vaccine", "get", "it", "first", ".", "i", "be", "in", "line", ",", "but", "i", "will", "not", "cut", "line", "until", "those", "far", "more", "important", "get", "it", "first", "!", "/2"]
(c3-14 / multi-sentence
       :snt1 (c3-26 / ask-01
                    :ARG0 (c3-35 / person
                                 :quant (c3-28 / many))
                    :ARG1 (c3-10 / truth-value
                                 :polarity-of (c3-11 / receive-01
                                                     :ARG0 (c3-3 / i)
                                                     :ARG1 (c3-8 / vaccine)))
                    :ARG2 c3-3)
       :snt2 (c3-4 / contrast-01
                   :ARG1 (c3-24 / yes)
                   :ARG2 (c3-12 / get-01
                                :ARG0 (c3-33 / person
                                             :ARG0-of (c3-5 / work-01
                                                            :ARG1 (c3-23 / medicine))
                                             :mod (c3-17 / every)
                                             :ARG0-of (c3-6 / teach-01)
                                             :ARG0-of (c3-16 / work-01
                                                             :ARG1 (c3-18 / safe-01
                                                                          :ARG1 (c3-20 / public)))
                                             :ARG0-of (c3-32 / underlie-01
                                                             :ARG1 (c3-0 / condition)))
                                :ARG1 (c3-27 / vaccine)
                                :ord (c3-9 / ordinal-entity
                                           :value 1))
                   :mod (c3-31 / only))
       :snt3 (c3-7 / contrast-01
                   :ARG1 (c3-34 / line-01
                                :ARG1 (c3-21 / i))
                   :ARG2 (c3-2 / line-01
                               :ARG1 c3-21
                               :time (c3-1 / until
                                           :op1 (c3-25 / get-01
                                                       :ARG0 (c3-19 / person
                                                                    :mod (c3-15 / that)
                                                                    :ARG1-of (c3-30 / have-degree-91
                                                                                    :ARG2 (c3-22 / important-01
                                                                                                 :ARG1 c3-19)
                                                                                    :ARG3 (c3-13 / more
                                                                                                 :quant (c3-29 / far))))
                                                       :ARG1 c3-27
                                                       :ord c3-9
                                                       :value 2))
                               :polarity -)))
