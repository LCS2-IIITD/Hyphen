# ::snt im not completely sure. both doses i received took me out for like at least a week each time tho, your symptoms might be worse considering
# ::tokens ["i", "m", "not", "completely", "sure", ".", "both", "doses", "i", "received", "took", "me", "out", "for", "like", "at", "least", "a", "week", "each", "time", "tho", ",", "your", "symptoms", "might", "be", "worse", "considering"]
# ::lemmas ["i", "m", "not", "completely", "sure", ".", "both", "dose", "i", "receive", "take", "i", "out", "for", "like", "at", "least", "a", "week", "each", "time", "tho", ",", "your", "symptom", "might", "be", "bad", "consider"]
(c1-10 / multi-sentence
       :snt1 (c1-11 / sure-02
                    :ARG0 (c1-3 / i)
                    :ARG1-of (c1-4 / complete-02)
                    :polarity -)
       :snt2 (c1-8 / take-out-11
                   :ARG0 (c1-0 / dose
                               :mod (c1-17 / both)
                               :ARG1-of (c1-9 / receive-01
                                              :ARG0 c1-3))
                   :ARG1 c1-3
                   :frequency (c1-7 / rate-entity-91
                                    :ARG3 (c1-14 / at-least
                                                 :op1 (c1-6 / temporal-quantity
                                                            :unit (c1-5 / week)
                                                            :quant 1)))
                   :ARG1-of (c1-16 / have-concession-91))
       :snt3 (c1-19 / possible-01
                    :ARG1 (c1-2 / have-degree-91
                                :ARG1 (c1-18 / symptom
                                             :poss (c1-12 / you))
                                :ARG2 (c1-13 / bad-07
                                             :ARG1 c1-18)
                                :ARG3 (c1-15 / more))
                    :condition (c1-1 / consider-02)))

# ::snt Damn even if I had covid before ?
# ::tokens ["Damn", "even", "if", "I", "had", "covid", "before", "?"]
# ::lemmas ["damn", "even", "if", "i", "have", "covid", "before", "?"]
(c2-2 / have-concession-91
      :polarity (c2-1 / amr-unknown)
      :ARG2 (c2-8 / even-if
                  :op1 (c2-5 / have-03
                             :ARG0 (c2-6 / i)
                             :ARG1 (c2-3 / product
                                         :name (c2-7 / name
                                                     :op1 " covid"))
                             :time (c2-4 / before)))
      :mod (c2-0 / damn
                 :mode expressive))

# ::snt youre so welcome hun. the first week is just the worst so i had to say sum, fatigue like no other
# ::tokens ["you", "re", "so", "welcome", "hun", ".", "the", "first", "week", "is", "just", "the", "worst", "so", "i", "had", "to", "say", "sum", ",", "fatigue", "like", "no", "other"]
# ::lemmas ["you", "re", "so", "welcome", "hun", ".", "the", "first", "week", "be", "just", "the", "bad", "so", "i", "have", "to", "say", "sum", ",", "fatigue", "like", "no", "other"]
(c3-5 / welcome-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-15 / hun)
      :degree (c3-10 / so)
      :ARG1-of (c3-4 / cause-01
                     :ARG0 (c3-1 / have-degree-91
                                 :ARG1 (c3-9 / week
                                             :ord (c3-6 / ordinal-entity
                                                        :value 1))
                                 :ARG2 (c3-18 / bad-07
                                              :ARG1 c3-9)
                                 :ARG3 (c3-8 / most)
                                 :mod (c3-17 / just)
                                 :ARG0-of (c3-0 / cause-01
                                                :ARG1 (c3-16 / obligate-01
                                                             :ARG1 c3-2
                                                             :ARG2 (c3-19 / say-01
                                                                          :ARG0 c3-2
                                                                          :ARG1 (c3-13 / and
                                                                                       :op1 (c3-11 / sum)
                                                                                       :op2 (c3-14 / fatigue
                                                                                                   :ARG1-of (c3-7 / resemble-01
                                                                                                                  :ARG2 (c3-12 / fatigue
                                                                                                                               :mod (c3-3 / other))
                                                                                                                  :polarity -)))))))))

# ::snt Ok thank you for the advice!
# ::tokens ["Ok", "thank", "you", "for", "the", "advice", "!"]
# ::lemmas ["ok", "thank", "you", "for", "the", "advice", "!"]
(c4-2 / thank-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-4 / you)
      :ARG2 (c4-0 / advise-01
                  :ARG0 c4-4)
      :ARG1-of (c4-1 / okay-01))

# ::snt drink lots of water and get some rest fasho
# ::tokens ["drink", "lots", "of", "water", "and", "get", "some", "rest", "fasho"]
# ::lemmas ["drink", "lot", "of", "water", "and", "get", "some", "rest", "fasho"]
(c5-2 / and
      :op1 (c5-0 / drink-01
                 :ARG0 (c5-8 / you)
                 :ARG1 (c5-4 / water
                             :quant (c5-6 / lot))
                 :mode imperative)
      :op2 (c5-7 / get-01
                 :ARG0 c5-8
                 :ARG1 (c5-5 / rest-01
                             :quant (c5-1 / some))
                 :mod (c5-3 / fasho)
                 :mode imperative))

# ::snt First dose
# ::tokens ["First", "dose"]
# ::lemmas ["First", "dose"]
(c6-0 / dose
      :ord (c6-1 / ordinal-entity
                 :value 1))

# ::snt :lmk how it go.
# ::tokens [":", "lmk", "how", "it", "go", "."]
# ::lemmas [":", "lmk", "how", "it", "go", "."]
(c7-0 / go-09
      :ARG1 (c7-1 / it)
      :manner (c7-2 / amr-unintelligible
                    :value ":lmk"))
