# ::snt Thank god this isnt Small Pox or Polio or ..... Thank god those doctors knew what they were doing. Thank god I dont have the little round vaccination scar on my shoulder or for sure Id be dead by now....
# ::tokens ["Thank", "god", "this", "is", "nt", "Small", "Pox", "or", "Polio", "or", ".....", "Thank", "god", "those", "doctors", "knew", "what", "they", "were", "doing", ".", "Thank", "god", "I", "do", "nt", "have", "the", "little", "round", "vaccination", "scar", "on", "my", "shoulder", "or", "for", "sure", "I", "d", "be", "dead", "by", "now", "...."]
# ::lemmas ["thank", "god", "this", "be", "not", "small", "Pox", "or", "Polio", "or", ".....", "thank", "god", "those", "doctor", "know", "what", "they", "be", "do", ".", "thank", "god", "i", "do", "not", "have", "the", "little", "round", "vaccination", "scar", "on", "my", "shoulder", "or", "for", "sure", "i", "d", "be", "dead", "by", "now", "...."]
(c1-10 / multi-sentence
       :snt1 (c1-7 / thank-01
                   :ARG1 (c1-28 / person
                                :name (c1-11 / name
                                             :op1 "God"))
                   :ARG2 (c1-4 / this
                               :mod (c1-6 / or
                                          :op1 (c1-24 / person
                                                      :name (c1-1 / name
                                                                  :op1 "Small"
                                                                  :op2 "Pox"))
                                          :op2 (c1-15 / person
                                                      :name (c1-18 / name
                                                                   :op1 "Polio")))
                               :polarity -))
       :snt2 (c1-12 / thank-01
                    :ARG1 c1-28
                    :ARG2 (c1-29 / know-01
                                 :ARG0 (c1-0 / doctor
                                             :mod (c1-16 / that))
                                 :ARG1 (c1-20 / thing
                                              :ARG1-of (c1-19 / do-02
                                                              :ARG0 c1-0))))
       :snt3 (c1-23 / thank-01
                    :ARG1 (c1-9 / god)
                    :ARG2 (c1-22 / or
                                 :op1 (c1-21 / have-03
                                             :ARG0 (c1-2 / i
                                                         :part (c1-13 / shoulder))
                                             :ARG1 (c1-27 / scar
                                                          :mod (c1-8 / round)
                                                          :mod (c1-25 / little)
                                                          :mod (c1-5 / vaccinate-01))
                                             :location c1-13
                                             :polarity -)
                                 :op2 (c1-17 / sure-02
                                             :ARG1 (c1-14 / die-01
                                                          :ARG1 c1-2
                                                          :time (c1-26 / by
                                                                       :op1 (c1-3 / now)))))))

# ::snt No, they aren't even claiming that it will stop transmission.So straight up it's just take the dubious jab and continue ceding your entire way of life indefinitely - because we said so.
# ::tokens ["No", ",", "they", "are", "n't", "even", "claiming", "that", "it", "will", "stop", "transmission", ".", "So", "straight", "up", "it", "'s", "just", "take", "the", "dubious", "jab", "and", "continue", "ceding", "your", "entire", "way", "of", "life", "indefinitely", "-", "because", "we", "said", "so", "."]
# ::lemmas ["no", ",", "they", "be", "not", "even", "claim", "that", "it", "will", "stop", "transmission", ".", "so", "straight", "up", "it", "be", "just", "take", "the", "dubious", "jab", "and", "continue", "cede", "your", "entire", "way", "of", "life", "indefinitely", "-", "because", "we", "say", "so", "."]
(c2-3 / claim-01
      :ARG0 (c2-7 / they)
      :ARG1 (c2-12 / stop-01
                   :ARG0 (c2-2 / it)
                   :ARG1 (c2-5 / transmit-01))
      :mod (c2-11 / even)
      :mod (c2-8 / no)
      :ARG0-of (c2-0 / cause-01
                     :ARG1 (c2-19 / and
                                  :op1 (c2-9 / take-01
                                             :ARG1 (c2-23 / jab-01
                                                          :ARG0 c2-7
                                                          :ARG1-of (c2-1 / dubious-02))
                                             :mod (c2-22 / just))
                                  :op2 (c2-6 / continue-01
                                             :ARG1 (c2-16 / cede-01
                                                          :ARG0 c2-7
                                                          :ARG1 (c2-4 / way
                                                                      :mod (c2-20 / entire)
                                                                      :poss (c2-17 / you)
                                                                      :mod (c2-21 / life))
                                                          :duration (c2-14 / indefinite)))
                                  :ARG1-of (c2-18 / straight-04)
                                  :ARG1-of (c2-13 / cause-01
                                                  :ARG0 (c2-15 / say-01
                                                               :ARG0 (c2-10 / we)
                                                               :ARG1 c2-6))))
      :polarity -)

# ::snt 'Largely untested'...lol!This is so fucking dishonest.
# ::tokens ["'", "Largely", "untested'", "...", "lol!This", "is", "so", "fucking", "dishonest", "."]
# ::lemmas ["'", "largely", "untested'", "...", "lol!this", "be", "so", "fucking", "dishonest", "."]
(c3-2 / honest-01
      :ARG1 (c3-3 / this)
      :mod (c3-1 / fucking
                 :degree (c3-0 / so))
      :ARG2-of (c3-4 / laugh-01
                     :manner (c3-5 / loud)
                     :mode expressive)
      :polarity -)

# ::snt Very
# ::tokens ["Very"]
# ::lemmas ["very"]
(c4-0 / very)

# ::snt Always
# ::tokens ["Always"]
# ::lemmas ["always"]
(c5-0 / be-temporally-at-91
      :ARG2 (c5-1 / always))

# ::snt Omg!!! YES!! HOW STUPID ARE THESE PEOPLE????
# ::tokens ["Omg", "!", "!", "!", "YES", "!", "!", "HOW", "STUPID", "ARE", "THESE", "PEOPLE", "?", "?", "?", "?"]
# ::lemmas ["Omg", "!", "!", "!", "yes", "!", "!", "how", "stupid", "be", "these", "people", "?", "?", "?", "?"]
(c6-5 / multi-sentence
      :snt1 (c6-2 / oh-my-god
                  :mode expressive)
      :snt2 (c6-6 / yes
                  :mode expressive)
      :snt3 (c6-0 / stupid
                  :degree (c6-1 / amr-unknown)
                  :domain (c6-4 / person
                                :mod (c6-3 / this))))

# ::snt It is utterly asanine.
# ::tokens ["It", "is", "utterly", "asanine", "."]
# ::lemmas ["it", "be", "utterly", "asanine", "."]
(c7-1 / asanine
      :domain (c7-0 / it)
      :ARG1-of (c7-2 / utter-02))

# ::snt Nailed it Juergen!
# ::tokens ["Nailed", "it", "Juergen", "!"]
# ::lemmas ["nail", "it", "Juergen", "!"]
(c8-0 / say-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-5 / nail-01
                  :ARG0 (c8-3 / product
                              :name (c8-2 / name
                                          :op1 "Juergen"))
                  :ARG1 (c8-1 / it)
                  :mode imperative)
      :ARG2 c8-3)

# ::snt Preaching to the choir.....preaching to the choir!
# ::tokens ["Preaching", "to", "the", "choir", ".....", "preaching", "to", "the", "choir", "!"]
# ::lemmas ["preach", "to", "the", "choir", ".....", "preach", "to", "the", "choir", "!"]
(c9-2 / and
      :op1 (c9-1 / preach-01
                 :ARG2 (c9-3 / choir))
      :op2 (c9-0 / preach-01
                 :ARG2 c9-3))

# ::snt Or you can't have a job. Or travel. Or maybe go to university. Or get on a bus. Maybe easier to enforce that than a personal ration. Or will there be both?
# ::tokens ["Or", "you", "ca", "n't", "have", "a", "job", ".", "Or", "travel", ".", "Or", "maybe", "go", "to", "university", ".", "Or", "get", "on", "a", "bus", ".", "Maybe", "easier", "to", "enforce", "that", "than", "a", "personal", "ration", ".", "Or", "will", "there", "be", "both", "?"]
# ::lemmas ["or", "you", "can", "not", "have", "a", "job", ".", "or", "travel", ".", "or", "maybe", "go", "to", "university", ".", "or", "get", "on", "a", "bus", ".", "maybe", "easy", "to", "enforce", "that", "than", "a", "personal", "ration", ".", "or", "will", "there", "be", "both", "?"]
(c10-8 / multi-sentence
       :snt1 (c10-4 / or
                    :op2 (c10-25 / possible-01
                                 :ARG1 (c10-18 / have-03
                                               :ARG0 (c10-13 / you)
                                               :ARG1 (c10-24 / job))
                                 :polarity -))
       :snt2 (c10-19 / or
                     :op1 (c10-5 / travel-01)
                     :op2 (c10-22 / possible-01
                                  :ARG1 (c10-7 / go-02
                                               :ARG0 c10-13
                                               :ARG4 (c10-21 / university))))
       :snt3 (c10-2 / or
                    :op2 (c10-12 / get-05
                                 :ARG0 c10-13
                                 :ARG1 c10-13
                                 :ARG2 (c10-23 / bus)))
       :snt4 (c10-11 / possible-01
                     :ARG1 (c10-9 / enforce-01
                                  :ARG1 (c10-3 / that)
                                  :ARG1-of (c10-1 / have-degree-91
                                                  :ARG2 (c10-20 / easy-05)
                                                  :ARG3 (c10-17 / more)
                                                  :ARG4 (c10-6 / ration-01
                                                               :ARG1-of (c10-10 / personal-02)))))
       :snt5 (c10-14 / or
                     :op2 (c10-0 / exist-01
                                 :ARG1 (c10-15 / both)
                                 :polarity (c10-16 / amr-unknown))))

# ::snt Sounds about right. Why risk % chance of dying when we can shoot ourselves up with a vaccine that has so many unknowns.
# ::tokens ["Sounds", "about", "right", ".", "Why", "risk", "%", "chance", "of", "dying", "when", "we", "can", "shoot", "ourselves", "up", "with", "a", "vaccine", "that", "has", "so", "many", "unknowns", "."]
# ::lemmas ["sound", "about", "right", ".", "why", "risk", "%", "chance", "of", "die", "when", "we", "can", "shoot", "ourselves", "up", "with", "a", "vaccine", "that", "have", "so", "many", "unknown", "."]
(c11-15 / multi-sentence
        :snt1 (c11-0 / sound-01
                     :ARG2 (c11-12 / right-06
                                   :mod (c11-3 / about)))
        :snt2 (c11-4 / cause-01
                     :ARG0 (c11-17 / amr-unknown)
                     :ARG1 (c11-9 / risk-01
                                  :ARG2 (c11-1 / chance-02
                                               :ARG1 (c11-2 / die-01
                                                            :ARG1 (c11-5 / we))
                                               :ARG2 (c11-14 / percentage))
                                  :condition (c11-11 / possible-01
                                                     :ARG1 (c11-13 / shoot-up-08
                                                                   :ARG1 c11-5
                                                                   :instrument (c11-10 / vaccine
                                                                                       :ARG1-of (c11-16 / know-01
                                                                                                        :ARG1-of (c11-7 / have-quant-91
                                                                                                                        :ARG2 (c11-6 / many)
                                                                                                                        :ARG3 (c11-8 / so))
                                                                                                        :polarity -)))))))

# ::snt Go figure
# ::tokens ["Go", "figure"]
# ::lemmas ["go", "figure"]
(c12-1 / figure-01
       :ARG0 (c12-0 / you)
       :mode imperative)

# ::snt If they are going to control population, you must make them sterile...
# ::tokens ["If", "they", "are", "going", "to", "control", "population", ",", "you", "must", "make", "them", "sterile", "..."]
# ::lemmas ["if", "they", "be", "go", "to", "control", "population", ",", "you", "must", "make", "they", "sterile", "..."]
(c13-2 / obligate-01
       :ARG1 (c13-6 / you)
       :ARG2 (c13-5 / make-02
                    :ARG0 c13-6
                    :ARG1 (c13-0 / sterile-02
                                 :ARG1 (c13-4 / population)))
       :condition (c13-1 / control-01
                         :ARG0 (c13-3 / they)
                         :ARG1 c13-4))

# ::snt The mice are relieved for the human trials
# ::tokens ["The", "mice", "are", "relieved", "for", "the", "human", "trials"]
# ::lemmas ["the", "mouse", "be", "relieve", "for", "the", "human", "trial"]
(c14-3 / relieve-01
       :ARG0 (c14-2 / try-01
                    :ARG1 (c14-1 / human))
       :ARG1 (c14-0 / mouse))
