# ::snt I got your donut right here!
# ::tokens ["I", "got", "your", "donut", "right", "here", "!"]
# ::lemmas ["i", "get", "your", "donut", "right", "here", "!"]
(c1-3 / get-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-0 / donut
                  :poss (c1-5 / you))
      :location (c1-1 / here
                      :mod (c1-2 / right)))

# ::snt Id argue that you do!
# ::tokens ["I", "d", "argue", "that", "you", "do", "!"]
# ::lemmas ["i", "d", "argue", "that", "you", "do", "!"]
(c2-2 / argue-01
      :ARG0 (c2-1 / i)
      :ARG1 (c2-0 / do-02
                  :ARG0 (c2-3 / you)))

# ::snt Thanks , sucks they left the
# ::tokens ["Thanks", ",", "sucks", "they", "left", "the"]
# ::lemmas ["thank", ",", "suck", "they", "leave", "the"]
(c5-1 / and
      :op1 (c5-3 / thank-01
                 :ARG0 (c5-5 / i)
                 :ARG1 (c5-6 / you))
      :op2 (c5-0 / suck-03
                 :ARG0 (c5-4 / leave-11
                             :ARG0 (c5-2 / they))))

# ::snt Where is this free donut?!
# ::tokens ["Where", "is", "this", "free", "donut", "?", "!"]
# ::lemmas ["where", "be", "this", "free", "donut", "?", "!"]
(c8-4 / be-located-at-91
      :ARG1 (c8-0 / donut
                  :ARG1-of (c8-2 / free-03)
                  :mod (c8-3 / this))
      :ARG2 (c8-1 / amr-unknown))

# ::snt Where do u get a donut at?
# ::tokens ["Where", "do", "u", "get", "a", "donut", "at", "?"]
# ::lemmas ["where", "do", "u", "get", "a", "donut", "at", "?"]
(c9-0 / get-01
      :ARG0 (c9-3 / you)
      :ARG1 (c9-1 / donut)
      :location (c9-2 / amr-unknown))

# ::snt definitely adds an extra sec/400m
# ::tokens ["definitely", "adds", "an", "extra", "sec/400", "m"]
# ::lemmas ["definitely", "add", "an", "extra", "sec/400", "m"]
(c11-2 / add-02
       :ARG1 (c11-0 / distance-quantity
                    :unit (c11-1 / second)
                    :mod (c11-4 / extra)
                    :quant 400)
       :mod (c11-3 / definite))

# ::snt If you told your team they get a donut after sets, would you give them half of one after the first set?
# ::tokens ["If", "you", "told", "your", "team", "they", "get", "a", "donut", "after", "sets", ",", "would", "you", "give", "them", "half", "of", "one", "after", "the", "first", "set", "?"]
# ::lemmas ["if", "you", "tell", "your", "team", "they", "get", "a", "donut", "after", "set", ",", "would", "you", "give", "they", "half", "of", "one", "after", "the", "first", "set", "?"]
(c13-9 / give-01
       :ARG0 (c13-11 / you)
       :ARG1 (c13-6 / half
                    :quant-of (c13-0 / donut))
       :ARG2 (c13-8 / team
                    :poss c13-11)
       :polarity (c13-3 / amr-unknown)
       :condition (c13-5 / tell-01
                         :ARG0 c13-11
                         :ARG1 (c13-4 / get-01
                                      :ARG0 c13-8
                                      :ARG1 c13-0
                                      :time (c13-12 / after
                                                    :op1 (c13-1 / set
                                                                :ord (c13-7 / ordinal-entity
                                                                            :value 1))))
                         :ARG2 c13-8
                         :time (c13-2 / after
                                      :op1 (c13-10 / set))))

# ::snt If I got my first of the shots do I get half a donut? Or one donut every days? These are the things that keep me up at night.
# ::tokens ["If", "I", "got", "my", "first", "of", "the", "shots", "do", "I", "get", "half", "a", "donut", "?", "Or", "one", "donut", "every", "days", "?", "These", "are", "the", "things", "that", "keep", "me", "up", "at", "night", "."]
# ::lemmas ["if", "i", "get", "my", "first", "of", "the", "shot", "do", "i", "get", "half", "a", "donut", "?", "or", "one", "donut", "every", "day", "?", "these", "be", "the", "thing", "that", "keep", "i", "up", "at", "night", "."]
(c14-9 / multi-sentence
       :snt1 (c14-8 / get-01
                    :polarity (c14-18 / amr-unknown)
                    :ARG0 (c14-2 / i)
                    :ARG1 (c14-0 / donut
                                 :quant "1/2")
                    :condition (c14-17 / get-01
                                       :ARG0 c14-2
                                       :ARG1 (c14-12 / shoot-02
                                                     :ord (c14-4 / ordinal-entity
                                                                 :value 1)
                                                     :ARG1-of (c14-14 / include-91
                                                                      :ARG2 (c14-21 / shoot-02)))))
       :snt2 (c14-19 / or
                     :op2 (c14-1 / get-01
                                 :ARG0 (c14-15 / i)
                                 :ARG1 (c14-16 / donut
                                               :quant 1)
                                 :frequency (c14-7 / rate-entity-91
                                                   :ARG3 (c14-6 / temporal-quantity
                                                                :unit (c14-13 / day)
                                                                :quant 1)))
                     :snt3 (c14-22 / keep-up-05
                                   :ARG0 (c14-3 / thing
                                                :mod (c14-11 / this))
                                   :ARG1 (c14-20 / i)
                                   :time (c14-5 / date-entity
                                                :dayperiod (c14-10 / night)))))

# ::snt Thats real talk
# ::tokens ["That", "s", "real", "talk"]
# ::lemmas ["that", "s", "real", "talk"]
(c15-1 / talk-01
       :ARG1-of (c15-2 / real-04)
       :domain (c15-0 / that))
