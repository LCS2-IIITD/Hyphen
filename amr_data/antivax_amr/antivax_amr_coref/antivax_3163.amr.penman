# ::snt happy to hear that Keane!
# ::tokens ["happy", "to", "hear", "that", "Keane", "!"]
# ::lemmas ["happy", "to", "hear", "that", "Keane", "!"]
(c1-0 / say-01
      :ARG1 (c1-1 / happy-01
                  :ARG0 (c1-4 / hear-01
                              :ARG0 (c1-5 / i)
                              :ARG1 (c1-2 / that))
                  :ARG1 c1-5)
      :ARG2 (c1-3 / person
                  :name (c1-6 / name
                              :op1 "Keane")))

# ::snt Seriously... and I totally know what you mean about the excuse. It made my homebody nature feel responsible.
# ::tokens ["Seriously", "...", "and", "I", "totally", "know", "what", "you", "mean", "about", "the", "excuse", ".", "It", "made", "my", "homebody", "nature", "feel", "responsible", "."]
# ::lemmas ["seriously", "...", "and", "i", "totally", "know", "what", "you", "mean", "about", "the", "excuse", ".", "it", "make", "my", "homebody", "nature", "feel", "responsible", "."]
(c2-12 / multi-sentence
       :snt1 (c2-0 / and
                   :op2 (c2-13 / know-01
                               :ARG0 (c2-11 / i)
                               :ARG1 (c2-8 / thing
                                           :ARG2-of (c2-2 / mean-01
                                                          :ARG0 (c2-14 / you)
                                                          :ARG1 (c2-15 / excuse-02)))
                               :degree (c2-3 / total)))
       :snt2 (c2-7 / make-02
                   :ARG0 (c2-4 / it)
                   :ARG1 (c2-1 / feel-01
                               :ARG0 (c2-10 / nature
                                            :mod (c2-5 / homebody)
                                            :poss (c2-6 / i))
                               :ARG1 (c2-9 / responsible-02
                                           :ARG0 c2-10))))

# ::snt I'm really going to miss not having to make up any excuses to stay home. So glad you're (nearly) fully vaxxed. I remember so vividly all the madness with your parents' cruise last year! Glad that's in the rear view mirror.
# ::tokens ["I", "'m", "really", "going", "to", "miss", "not", "having", "to", "make", "up", "any", "excuses", "to", "stay", "home", ".", "So", "glad", "you", "'re", "(", "nearly", ")", "fully", "vaxxed", ".", "I", "remember", "so", "vividly", "all", "the", "madness", "with", "your", "parents", "'", "cruise", "last", "year", "!", "Glad", "that", "'s", "in", "the", "rear", "view", "mirror", "."]
# ::lemmas ["i", "be", "really", "go", "to", "miss", "not", "have", "to", "make", "up", "any", "excuse", "to", "stay", "home", ".", "so", "glad", "you", "be", "(", "nearly", ")", "fully", "vaxxed", ".", "i", "remember", "so", "you", "all", "the", "madness", "with", "your", "parent", "'", "cruise", "last", "year", "!", "glad", "that", "be", "in", "the", "rear", "view", "mirror", "."]
(c3-12 / multi-sentence
       :snt1 (c3-26 / miss-01
                    :ARG0 (c3-2 / i)
                    :ARG1 (c3-6 / obligate-01
                                :ARG1 c3-2
                                :ARG2 (c3-20 / make-up-10
                                             :ARG0 c3-2
                                             :ARG1 (c3-15 / excuse-02
                                                          :ARG0 c3-2
                                                          :ARG1 (c3-16 / stay-01
                                                                       :ARG1 c3-2
                                                                       :ARG3 (c3-28 / home))
                                                          :mod (c3-24 / any)))
                                :polarity -)
                    :ARG1-of (c3-8 / real-04))
       :snt2 (c3-9 / glad-02
                   :ARG0 (c3-5 / vaxx-00
                               :ARG1 (c3-21 / you)
                               :degree (c3-25 / full)
                               :mod (c3-29 / early))
                   :ARG1 (c3-17 / i)
                   :degree (c3-33 / so))
       :snt3 (c3-4 / remember-01
                   :ARG0 (c3-18 / i)
                   :ARG1 (c3-10 / madness
                                :mod (c3-14 / all)
                                :accompanier (c3-3 / cruise-01
                                                   :ARG0 (c3-34 / person
                                                                :ARG0-of (c3-1 / have-rel-role-91
                                                                               :ARG1 (c3-22 / you)
                                                                               :ARG2 (c3-30 / parent)))
                                                   :time (c3-0 / year
                                                               :mod (c3-31 / last)))
                                :ARG1-of (c3-27 / vivid
                                                :degree (c3-19 / so)))
                   :snt4 (c3-23 / glad-02
                                :ARG0 (c3-32 / be-located-at-91
                                             :ARG1 (c3-7 / that)
                                             :ARG2 (c3-13 / mirror
                                                          :mod (c3-11 / rearview))))))

# ::snt Its also my excuse to do nothing on my birthday except stay in and eat snacks, which, I suppose, is something.
# ::tokens ["Its", "also", "my", "excuse", "to", "do", "nothing", "on", "my", "birthday", "except", "stay", "in", "and", "eat", "snacks", ",", "which", ",", "I", "suppose", ",", "is", "something", "."]
# ::lemmas ["its", "also", "my", "excuse", "to", "do", "nothing", "on", "my", "birthday", "except", "stay", "in", "and", "eat", "snack", ",", "which", ",", "i", "suppose", ",", "be", "something", "."]
(c4-15 / excuse-02
       :ARG0 (c4-11 / i)
       :ARG1 (c4-0 / do-02
                   :ARG0 c4-11
                   :ARG1 (c4-13 / nothing
                                :ARG2-of (c4-5 / except-01
                                               :ARG1 (c4-3 / and
                                                           :op1 (c4-1 / stay-01
                                                                      :ARG1 c4-11
                                                                      :ARG3 (c4-9 / be-located-at-91
                                                                                  :ARG1 c4-11
                                                                                  :ARG2 (c4-4 / inside)))
                                                           :op2 (c4-6 / eat-01
                                                                      :ARG0 c4-11
                                                                      :ARG1 (c4-10 / snack))
                                                           :mod (c4-7 / something
                                                                      :ARG1-of (c4-12 / suppose-01
                                                                                      :ARG0 c4-11)))))
                   :time (c4-2 / birthday
                               :poss c4-11))
       :ARG2 (c4-8 / it)
       :mod (c4-14 / also))

# ::snt Yay!
# ::tokens ["Yay", "!"]
# ::lemmas ["Yay", "!"]
(c5-0 / yay
      :mode expressive)

# ::snt Lol I misread that as you getting your third dose
# ::tokens ["Lol", "I", "misread", "that", "as", "you", "getting", "your", "third", "dose"]
# ::lemmas ["Lol", "i", "misread", "that", "as", "you", "get", "your", "third", "dose"]
(c6-7 / misread-01
      :ARG0 (c6-6 / i)
      :ARG1 (c6-2 / that)
      :time (c6-5 / get-01
                  :ARG0 (c6-8 / you)
                  :ARG1 (c6-0 / dose-01
                              :ARG1 c6-8
                              :ord (c6-1 / ordinal-entity
                                         :value 3)))
      :ARG2-of (c6-3 / laugh-01
                     :ARG0 c6-6
                     :manner (c6-4 / loud)
                     :mode expressive))

# ::snt I got my second days after my bday!
# ::tokens ["I", "got", "my", "second", "days", "after", "my", "bday", "!"]
# ::lemmas ["i", "get", "my", "second", "day", "after", "my", "bday", "!"]
(c7-3 / get-01
      :ARG0 (c7-4 / i)
      :ARG1 (c7-0 / day
                  :ord (c7-2 / ordinal-entity
                             :value 2))
      :time (c7-1 / after
                  :op1 (c7-5 / birthday
                             :poss c7-4))
      :mode expressive)
