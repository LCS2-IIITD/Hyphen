# ::snt HAHAHAHHAHAHAHA
# ::tokens ["HAHAHAHHAHAHAHA"]
# ::lemmas ["hahahahhahahaha"]
(c1-0 / haha
      :mode expressive)

# ::snt aslan yekhrebetko fadahtoona
# ::tokens ["aslan", "yekhrebetko", "fadahtoona"]
# ::lemmas ["aslan", "yekhrebetko", "fadahtoona"]
(c2-2 / fadahtoona
      :mod (c2-0 / person
                 :name (c2-1 / name
                             :op1 "aslan"
                             :op2 "Yekhrebetko")))

# ::snt malkeesh da3wa
# ::tokens ["malkeesh", "da3wa"]
# ::lemmas ["malkeesh", "da3wa"]
(c3-0 / person
      :name (c3-1 / name
                  :op1 "Malkeesh"
                  :op2 "da3wa"))

# ::snt bara ani
# ::tokens ["bara", "ani"]
# ::lemmas ["bara", "ani"]
(c4-0 / amr-unintelligible
      :value "bara ani")

# ::snt Ehdy ba2a
# ::tokens ["Ehdy", "ba2a"]
# ::lemmas ["ehdy", "ba2a"]
(c5-0 / string-entity
      :value "Ehdy ba2a")

# ::snt get educated
# ::tokens ["get", "educated"]
# ::lemmas ["get", "educate"]
(c6-1 / educate-01
      :ARG1 (c6-0 / you)
      :mode imperative)

# ::snt jelh w danya el motakhalefeen
# ::tokens ["jelh", "w", "danya", "el", "motakhalefeen"]
# ::lemmas ["jelh", "w", "danya", "el", "motakhalefeen"]
(c7-0 / and
      :op1 (c7-3 / person
                 :name (c7-4 / name
                             :op1 "Jelh"))
      :op2 (c7-1 / person
                 :name (c7-2 / name
                             :op1 "Danya"
                             :op2 "El"
                             :op3 "Makhalefeen")))

# ::snt shut up
# ::tokens ["shut", "up"]
# ::lemmas ["shut", "up"]
(c8-0 / shut-up-06
      :ARG0 (c8-1 / you
                  :ARG1-of c8-0)
      :mode imperative)

# ::snt AHHAHAHAHAHAHA are u talking about jelh
# ::tokens ["AHHAHAHAHAHAHA", "are", "u", "talking", "about", "jelh"]
# ::lemmas ["AHHAHAHAHAHAHA", "be", "u", "talk", "about", "jelh"]
(c9-1 / talk-01
      :ARG0 (c9-4 / you)
      :ARG1 (c9-2 / person
                  :name (c9-3 / name
                              :op1 "Jesus"))
      :mod (c9-0 / haha
                 :mode expressive))

# ::snt la bas msh ashan ded el vaccines
# ::tokens ["la", "bas", "msh", "ashan", "ded", "el", "vaccines"]
# ::lemmas ["la", "bas", "msh", "ashan", "ded", "el", "vaccine"]
(c10-0 / dedicating-02
       :ARG0 (c10-2 / person
                    :name (c10-3 / name
                                 :op1 "la"
                                 :op2 "bsh"
                                 :op3 "ashan"))
       :ARG1 (c10-1 / vaccine))

# ::snt enty vaccined?
# ::tokens ["enty", "vaccined", "?"]
# ::lemmas ["enty", "vaccine", "?"]
(c11-0 / vaccinate-01
       :polarity (c11-1 / amr-unknown)
       :mod (c11-2 / enty))
