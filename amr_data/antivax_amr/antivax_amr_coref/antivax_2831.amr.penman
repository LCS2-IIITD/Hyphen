# ::snt Very much so.
# ::tokens ["Very", "much", "so", "."]
# ::lemmas ["very", "much", "so", "."]
(c1-1 / much
      :degree (c1-0 / very))

# ::snt Lmao they need to get their shit together then
# ::tokens ["Lmao", "they", "need", "to", "get", "their", "shit", "together", "then"]
# ::lemmas ["Lmao", "they", "need", "to", "get", "their", "shit", "together", "then"]
(c2-7 / need-01
      :ARG0 (c2-2 / they)
      :ARG1 (c2-5 / get-together-14
                  :ARG0 c2-2
                  :ARG1 (c2-0 / shit
                              :poss c2-2))
      :mod (c2-3 / laugh-01
                 :ARG0 (c2-6 / i)
                 :manner (c2-4 / loud)
                 :mode expressive)
      :mod (c2-1 / then))

# ::snt It doesnt come with an iPhone charger so you know ppl skeptical
# ::tokens ["It", "does", "nt", "come", "with", "an", "iPhone", "charger", "so", "you", "know", "ppl", "skeptical"]
# ::lemmas ["it", "do", "not", "come", "with", "an", "iPhone", "charger", "so", "you", "know", "ppl", "skeptical"]
(c3-3 / come-01
      :ARG1 (c3-7 / it)
      :ARG3 (c3-5 / thing
                  :ARG3-of (c3-0 / charge-01
                                 :ARG1 (c3-6 / phone
                                             :name (c3-8 / name
                                                         :op1 "iPhone"))))
      :ARG0-of (c3-4 / cause-01
                     :ARG1 (c3-2 / know-01
                                 :ARG0 (c3-9 / you)
                                 :ARG1 (c3-1 / skeptical
                                             :domain c3-9)))
      :polarity -)

# ::snt No I have yet to receive my ill*minati shot. Soon as appointments open im gonna become a wifi hotspot
# ::tokens ["No", "I", "have", "yet", "to", "receive", "my", "ill*minati", "shot", ".", "Soon", "as", "appointments", "open", "i", "m", "gon", "na", "become", "a", "wifi", "hotspot"]
# ::lemmas ["no", "i", "have", "yet", "to", "receive", "my", "ill*minati", "shot", ".", "soon", "as", "appointment", "open", "i", "m", "going", "to", "become", "a", "wifi", "hotspot"]
(c4-13 / multi-sentence
       :snt1 (c4-3 / have-11
                   :ARG0 (c4-12 / i)
                   :ARG1 (c4-14 / yet)
                   :ARG2 (c4-8 / receive-01
                               :ARG0 c4-12
                               :ARG1 (c4-0 / shoot-02
                                           :ARG0 c4-12
                                           :ARG1 (c4-9 / person
                                                       :mod (c4-7 / poor)
                                                       :ARG1-of (c4-4 / ill-02))))
                   :polarity -)
       :snt2 (c4-10 / become-01
                    :ARG1 (c4-5 / i)
                    :ARG2 (c4-11 / hotspot
                                 :mod (c4-2 / wifi))
                    :time (c4-1 / as
                                :op1 (c4-6 / open-02
                                           :ARG1 (c4-15 / appointment-02)))))

# ::snt Imagine thinking we could do *all* of that with *one* vaccine but folks still dying of cancer and other chronic conditions.Imagine....
# ::tokens ["Imagine", "thinking", "we", "could", "do", "*", "all", "*", "of", "that", "with", "*", "one", "*", "vaccine", "but", "folks", "still", "dying", "of", "cancer", "and", "other", "chronic", "conditions", ".", "Imagine", "...."]
# ::lemmas ["imagine", "think", "we", "could", "do", "*", "all", "*", "of", "that", "with", "*", "one", "*", "vaccine", "but", "folk", "still", "die", "of", "cancer", "and", "other", "chronic", "condition", ".", "imagine", "...."]
(c5-2 / imagine-01
      :ARG0 (c5-16 / you)
      :ARG1 (c5-9 / think-01
                  :ARG0 c5-16
                  :ARG1 (c5-19 / possible-01
                               :ARG1 (c5-3 / contrast-01
                                           :ARG1 (c5-0 / do-02
                                                       :ARG0 (c5-4 / we)
                                                       :ARG1 (c5-7 / vaccine
                                                                   :quant 1)
                                                       :ARG2 (c5-5 / that
                                                                   :mod (c5-17 / all)))
                                           :ARG2 (c5-15 / die-01
                                                        :ARG1 (c5-18 / folk)
                                                        :ARG1-of (c5-1 / cause-01
                                                                       :ARG0 (c5-11 / and
                                                                                    :op1 (c5-13 / disease
                                                                                                :name (c5-10 / name
                                                                                                             :op1 "cancer"))
                                                                                    :op2 (c5-6 / condition
                                                                                               :mod (c5-14 / chronic)
                                                                                               :mod (c5-8 / other))))
                                                        :mod (c5-12 / still)))))
      :mode imperative)

# ::snt Good morning. Ya started communication yet??
# ::tokens ["Good", "morning", ".", "Ya", "started", "communication", "yet", "?", "?"]
# ::lemmas ["good", "morning", ".", "Ya", "start", "communication", "yet", "?", "?"]
(c6-5 / multi-sentence
      :snt1 (c6-2 / morning
                  :ARG1-of (c6-4 / good-02))
      :snt2 (c6-0 / start-01
                  :ARG0 (c6-6 / you)
                  :ARG1 (c6-3 / communicate-01
                              :ARG0 c6-6)
                  :time (c6-7 / yet)
                  :polarity (c6-1 / amr-unknown)))

# ::snt Hello good morning neighbour
# ::tokens ["Hello", "good", "morning", "neighbour"]
# ::lemmas ["hello", "good", "morning", "neighbour"]
(c7-0 / say-01
      :ARG1 (c7-2 / hello)
      :ARG2 (c7-5 / neighbor)
      :time (c7-1 / date-entity
                  :dayperiod (c7-4 / morning)
                  :ARG1-of (c7-3 / good-02)))
