# ::snt so so SO much nicer than infernos, I cannot stress how much of a hellhole Infernos is
# ::tokens ["so", "so", "SO", "much", "nicer", "than", "infernos", ",", "I", "can", "not", "stress", "how", "much", "of", "a", "hellhole", "Infernos", "is"]
# ::lemmas ["so", "so", "so", "much", "nice", "than", "infernos", ",", "i", "can", "not", "stress", "how", "much", "of", "a", "hellhole", "Infernos", "be"]
(c1-1 / cause-01
      :ARG0 (c1-11 / nice-01
                   :ARG2 (c1-9 / product
                               :name (c1-7 / name
                                           :op1 "Inferno"))
                   :ARG1-of (c1-3 / have-quant-91
                                  :ARG2 (c1-10 / much
                                               :degree (c1-0 / so
                                                             :ARG3-of c1-3))))
      :ARG1 (c1-5 / possible-01
                  :ARG1 (c1-8 / stress-02
                              :ARG0 (c1-2 / i)
                              :ARG1 (c1-6 / thing
                                          :degree-of (c1-4 / hellhole
                                                           :domain c1-9)))
                  :polarity -))

# ::snt Vividly!! Wasnt that Valentines night???? God, you just stuck to the floor
# ::tokens ["Vividly", "!", "!", "Was", "nt", "that", "Valentines", "night", "?", "?", "?", "?", "God", ",", "you", "just", "stuck", "to", "the", "floor"]
# ::lemmas ["vividly", "!", "!", "be", "not", "that", "Valentines", "night", "?", "?", "?", "?", "God", ",", "you", "just", "stick", "to", "the", "floor"]
(c3-10 / multi-sentence
       :snt1 (c3-3 / hilarious)
       :snt2 (c3-2 / cause-01
                   :ARG0 (c3-11 / night
                                :mod (c3-6 / that)
                                :time-of (c3-1 / festival
                                               :name (c3-7 / name
                                                           :op1 "Valentine's"))
                                :polarity -)
                   :ARG1 (c3-0 / stick-01
                               :ARG1 (c3-12 / you)
                               :ARG2 (c3-4 / floor)
                               :mod (c3-8 / just)
                               :mod (c3-9 / person
                                          :name (c3-5 / name
                                                      :op1 "God")
                                          :mode expressive))))

# ::snt My immune system was built in that place.
# ::tokens ["My", "immune", "system", "was", "built", "in", "that", "place", "."]
# ::lemmas ["my", "immune", "system", "be", "build", "in", "that", "place", "."]
(c4-4 / build-01
      :ARG1 (c4-0 / system
                  :ARG1-of (c4-5 / immune-02)
                  :poss (c4-1 / i))
      :location (c4-3 / place
                      :mod (c4-2 / that)))

# ::snt So many happy memories. do you remember getting drunk in there and then randomly getting in a parked taxi outside and having a good old chat with the taxi driver? And then he got an actual passenger and we had to get out?!
# ::tokens ["So", "many", "happy", "memories", ".", "do", "you", "remember", "getting", "drunk", "in", "there", "and", "then", "randomly", "getting", "in", "a", "parked", "taxi", "outside", "and", "having", "a", "good", "old", "chat", "with", "the", "taxi", "driver", "?", "And", "then", "he", "got", "an", "actual", "passenger", "and", "we", "had", "to", "get", "out", "?", "!"]
# ::lemmas ["so", "many", "happy", "memory", ".", "do", "you", "remember", "get", "drunk", "in", "there", "and", "then", "randomly", "get", "in", "a", "park", "taxi", "outside", "and", "have", "a", "good", "old", "chat", "with", "the", "taxi", "driver", "?", "and", "then", "he", "get", "an", "actual", "passenger", "and", "we", "have", "to", "get", "out", "?", "!"]
(c5-15 / multi-sentence
       :snt1 (c5-30 / memory
                    :ARG1-of (c5-31 / happy-02)
                    :ARG1-of (c5-4 / have-quant-91
                                   :ARG2 (c5-21 / many)
                                   :ARG3 (c5-18 / so)))
       :snt2 (c5-13 / remember-01
                    :ARG0 (c5-26 / you)
                    :ARG1 (c5-28 / and
                                 :op1 (c5-14 / get-03
                                             :ARG1 c5-26
                                             :ARG2 (c5-0 / drunk)
                                             :location (c5-12 / there))
                                 :op2 (c5-17 / and
                                             :op1 (c5-25 / get-05
                                                         :ARG1 c5-26
                                                         :ARG2 (c5-9 / taxi
                                                                     :ARG1-of (c5-35 / park-01
                                                                                     :location (c5-11 / outside)))
                                                         :manner (c5-10 / random)
                                                         :time (c5-16 / then))
                                             :op2 (c5-7 / chat-01
                                                        :ARG0 c5-26
                                                        :ARG2 (c5-34 / person
                                                                     :ARG0-of (c5-24 / drive-01
                                                                                     :ARG1 (c5-20 / taxi)))
                                                        :mod (c5-32 / old
                                                                    :ARG1-of (c5-2 / good-02))
                                                        :time (c5-29 / then)))
                                 :polarity (c5-1 / amr-unknown))
                    :snt3 (c5-36 / and
                                 :op2 (c5-22 / get-05
                                             :ARG0 (c5-5 / he)
                                             :ARG1 (c5-19 / passenger
                                                          :ARG1-of (c5-3 / actual-02))
                                             :time (c5-33 / then))
                                 :op3 (c5-6 / obligate-01
                                            :ARG1 (c5-8 / we)
                                            :ARG2 (c5-23 / get-05
                                                         :ARG1 c5-8
                                                         :ARG2 (c5-27 / out-06
                                                                      :ARG1 c5-8))))))

# ::snt I must have missed that memo by a decade - it was always the Clapham Grand for me!
# ::tokens ["I", "must", "have", "missed", "that", "memo", "by", "a", "decade", "-", "it", "was", "always", "the", "Clapham", "Grand", "for", "me", "!"]
# ::lemmas ["i", "must", "have", "miss", "that", "memo", "by", "a", "decade", "-", "it", "be", "always", "the", "Clapham", "Grand", "for", "i", "!"]
(c6-9 / multi-sentence
      :snt1 (c6-8 / infer-01
                  :ARG1 (c6-2 / miss-02
                              :ARG0 (c6-4 / i)
                              :ARG1 (c6-6 / memo
                                          :mod (c6-7 / that))
                              :ARG2 (c6-3 / temporal-quantity
                                          :unit (c6-0 / decade)
                                          :quant 1)))
      :snt2 (c6-11 / event
                   :name (c6-10 / name
                                :op1 "Clapham"
                                :op2 "Grand")
                   :beneficiary (c6-5 / i)
                   :time (c6-1 / always)))

# ::snt Hahah loved that place - and Two Brewers down the road
# ::tokens ["Hahah", "loved", "that", "place", "-", "and", "Two", "Brewers", "down", "the", "road"]
# ::lemmas ["Hahah", "love", "that", "place", "-", "and", "Two", "Brewers", "down", "the", "road"]
(c7-1 / and
      :op1 (c7-7 / love-01
                 :ARG0 (c7-10 / i)
                 :ARG1 (c7-8 / place
                             :mod (c7-5 / that))
                 :mod (c7-3 / haha
                            :mode expressive))
      :op2 (c7-9 / be-located-at-91
                 :ARG1 (c7-4 / person
                             :mod (c7-2 / political-movement
                                        :name (c7-11 / name
                                                     :op1 "Brewery"))
                             :quant 2)
                 :ARG2 (c7-6 / road
                             :direction (c7-0 / down))))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c8-0 / laugh-01
      :manner (c8-1 / loud)
      :mode expressive)

# ::snt Hahahahahhahah. And don't worry....same over here hoping normality might restart in....August??
# ::tokens ["Hahahahahhahah", ".", "And", "do", "n't", "worry", "....", "same", "over", "here", "hoping", "normality", "might", "restart", "in", "....", "August", "?", "?"]
# ::lemmas ["hahahahahhahah", ".", "and", "do", "not", "worry", "....", "same", "over", "here", "hope", "normality", "might", "restart", "in", "....", "August", "?", "?"]
(c9-10 / multi-sentence
       :snt1 (c9-3 / and
                   :op1 (c9-5 / haha
                              :mode expressive)
                   :op2 (c9-4 / worry-01
                              :ARG0 (c9-12 / you)
                              :polarity -
                              :mode imperative))
       :snt2 (c9-0 / same-01
                   :ARG2 (c9-13 / you
                                :location (c9-8 / here)
                                :ARG0-of (c9-1 / hope-01
                                               :ARG1 (c9-9 / possible-01
                                                           :ARG1 (c9-7 / restart-01
                                                                       :ARG1 (c9-11 / normality)
                                                                       :time (c9-2 / date-entity
                                                                                   :month 8)))))
                   :polarity (c9-6 / amr-unknown)))
