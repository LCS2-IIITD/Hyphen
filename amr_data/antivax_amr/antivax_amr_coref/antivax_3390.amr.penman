# ::snt I dont have online access to my history... need to sort that out.
# ::tokens ["I", "do", "nt", "have", "online", "access", "to", "my", "history", "...", "need", "to", "sort", "that", "out", "."]
# ::lemmas ["i", "do", "not", "have", "online", "access", "to", "my", "history", "...", "need", "to", "sort", "that", "out", "."]
(c1-2 / cause-01
      :ARG0 (c1-1 / access-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-3 / history
                              :poss c1-6)
                  :medium (c1-4 / online)
                  :polarity -)
      :ARG1 (c1-7 / need-01
                  :ARG0 c1-6
                  :ARG1 (c1-0 / sort-out-02
                              :ARG1 (c1-5 / that))))

# ::snt Under medications history
# ::tokens ["Under", "medications", "history"]
# ::lemmas ["under", "medication", "history"]
(c2-1 / history
      :mod (c2-0 / medication))

# ::snt Where is this information on the app?
# ::tokens ["Where", "is", "this", "information", "on", "the", "app", "?"]
# ::lemmas ["where", "be", "this", "information", "on", "the", "app", "?"]
(c3-0 / information
      :mod (c3-2 / this)
      :location (c3-1 / app)
      :location (c3-3 / amr-unknown))

# ::snt And what about the devolved nations?
# ::tokens ["And", "what", "about", "the", "devolved", "nations", "?"]
# ::lemmas ["and", "what", "about", "the", "devolve", "nation", "?"]
(c4-1 / and
      :op2 (c4-3 / amr-unknown
                 :topic (c4-2 / nation
                              :ARG1-of (c4-0 / devolve-01))))

# ::snt Sort of...I agree when it works. But my vaccinations originally not logged and now logged twice each under immunisations. However, now which recorded accurately under Medications ... yes def way forward if properly captured. Will other countries accept?
# ::tokens ["Sort", "of", "...", "I", "agree", "when", "it", "works", ".", "But", "my", "vaccinations", "originally", "not", "logged", "and", "now", "logged", "twice", "each", "under", "immunisations", ".", "However", ",", "now", "which", "recorded", "accurately", "under", "Medications", "...", "yes", "def", "way", "forward", "if", "properly", "captured", ".", "Will", "other", "countries", "accept", "?"]
# ::lemmas ["sort", "of", "...", "i", "agree", "when", "it", "work", ".", "but", "my", "vaccination", "originally", "not", "log", "and", "now", "log", "twice", "each", "under", "immunisation", ".", "however", ",", "now", "which", "record", "accurately", "under", "Medications", "...", "yes", "def", "way", "forward", "if", "properly", "capture", ".", "will", "other", "country", "accept", "?"]
(c5-13 / multi-sentence
       :snt1 (c5-22 / agree-01
                    :ARG0 (c5-6 / i)
                    :ARG1 (c5-8 / work-09
                                :ARG1 (c5-18 / it))
                    :degree (c5-17 / sort-of))
       :snt2 (c5-7 / contrast-01
                   :ARG2 (c5-15 / and
                                :op1 (c5-27 / log-01
                                            :ARG1 (c5-10 / vaccinate-01
                                                         :ARG1 c5-6)
                                            :mod (c5-11 / original)
                                            :polarity -)
                                :op2 (c5-5 / log-01
                                           :ARG1 c5-10
                                           :time (c5-14 / now)
                                           :time (c5-26 / under
                                                        :op1 (c5-19 / immunize-01
                                                                    :ARG1 c5-6))
                                           :frequency 2)))
       :snt3 (c5-0 / contrast-01
                   :ARG2 (c5-12 / record-01
                                :ARG1 (c5-23 / vaccinate-01
                                             :ARG1 c5-6)
                                :manner (c5-1 / accurate)
                                :time (c5-4 / now)))
       :snt4 (c5-16 / way
                    :direction (c5-24 / forward)
                    :mod (c5-21 / yes)
                    :mod (c5-2 / definite)
                    :condition (c5-9 / capture-01
                                     :manner (c5-28 / proper)))
       :snt5 (c5-29 / accept-01
                    :ARG0 (c5-20 / country
                                 :mod (c5-25 / other))
                    :polarity (c5-3 / amr-unknown)))

# ::snt Doesnt work on my phone, or any other more than years old
# ::tokens ["Does", "nt", "work", "on", "my", "phone", ",", "or", "any", "other", "more", "than", "years", "old"]
# ::lemmas ["do", "nt", "work", "on", "my", "phone", ",", "or", "any", "other", "more", "than", "years", "old"]
(c6-2 / work-09
      :location (c6-4 / or
                      :op1 (c6-6 / phone
                                 :poss (c6-1 / i))
                      :op2 (c6-3 / other
                                 :mod (c6-0 / any)
                                 :age (c6-7 / more-than
                                            :op1 (c6-5 / temporal-quantity
                                                       :unit (c6-8 / year)
                                                       :quant 1))))
      :polarity -)

# ::snt What makes no sense is caring whether other people are vaccinated or not.
# ::tokens ["What", "makes", "no", "sense", "is", "caring", "whether", "other", "people", "are", "vaccinated", "or", "not", "."]
# ::lemmas ["what", "make", "no", "sense", "be", "care", "whether", "other", "people", "be", "vaccinate", "or", "not", "."]
(c7-0 / sense-02
      :ARG1 (c7-1 / care-03
                  :ARG1 (c7-4 / truth-value
                              :polarity-of (c7-2 / vaccinate-01
                                                 :ARG1 (c7-5 / person
                                                             :mod (c7-3 / other)))))
      :polarity -)

# ::snt Exactly. Why waste money on something that actually already exists.
# ::tokens ["Exactly", ".", "Why", "waste", "money", "on", "something", "that", "actually", "already", "exists", "."]
# ::lemmas ["exactly", ".", "why", "waste", "money", "on", "something", "that", "actually", "already", "exist", "."]
(c8-7 / multi-sentence
      :snt1 (c8-9 / exact)
      :snt2 (c8-3 / cause-01
                  :ARG0 (c8-2 / amr-unknown)
                  :ARG1 (c8-4 / waste-01
                              :ARG1 (c8-5 / money)
                              :ARG2 (c8-0 / something
                                          :ARG1-of (c8-6 / exist-01
                                                         :time (c8-8 / already)
                                                         :ARG1-of (c8-1 / actual-02))))))

# ::snt Just downloaded it. How it checks your identity is very clever.
# ::tokens ["Just", "downloaded", "it", ".", "How", "it", "checks", "your", "identity", "is", "very", "clever", "."]
# ::lemmas ["just", "download", "it", ".", "how", "it", "check", "your", "identity", "be", "very", "clever", "."]
(c9-9 / multi-sentence
      :snt1 (c9-0 / download-01
                  :ARG1 (c9-8 / it)
                  :mod (c9-7 / just))
      :snt2 (c9-2 / clever-01
                  :ARG1 (c9-6 / thing
                              :manner-of (c9-1 / check-01
                                               :ARG0 (c9-3 / it)
                                               :ARG1 (c9-4 / identity
                                                           :poss (c9-10 / you))))
                  :degree (c9-5 / very)))

# ::snt This is literally what my colleagues at the Hospital told me when they administered the second dose, it works beautifully and makes total sense.
# ::tokens ["This", "is", "literally", "what", "my", "colleagues", "at", "the", "Hospital", "told", "me", "when", "they", "administered", "the", "second", "dose", ",", "it", "works", "beautifully", "and", "makes", "total", "sense", "."]
# ::lemmas ["this", "be", "literally", "what", "my", "colleague", "at", "the", "Hospital", "tell", "i", "when", "they", "administer", "the", "second", "dose", ",", "it", "work", "beautifully", "and", "make", "total", "sense", "."]
(c10-10 / tell-01
        :ARG0 (c10-14 / person
                      :ARG0-of (c10-7 / have-rel-role-91
                                      :ARG1 (c10-4 / i)
                                      :ARG2 (c10-3 / colleague))
                      :location (c10-13 / hospital))
        :ARG1 (c10-2 / and
                     :op1 (c10-5 / work-09
                                 :ARG1 (c10-8 / it)
                                 :ARG1-of (c10-12 / beautiful-02))
                     :op2 (c10-0 / sense-02
                                 :ARG1 c10-8
                                 :degree (c10-6 / total)))
        :ARG2 c10-4
        :manner (c10-11 / literal)
        :time (c10-15 / administer-01
                      :ARG0 c10-14
                      :ARG1 (c10-1 / dose
                                   :ord (c10-9 / ordinal-entity
                                               :value 2))
                      :ARG2 c10-4))
