# ::snt IT DIDNT HURT THAT MUCH TBH !! JUST KEEP MOVING IT AROUND AND DRINK WATER AFTER !!! altho i have a massive headache rn too
# ::tokens ["IT", "DIDNT", "HURT", "THAT", "MUCH", "TBH", "!", "!", "JUST", "KEEP", "MOVING", "IT", "AROUND", "AND", "DRINK", "WATER", "AFTER", "!", "!", "!", "altho", "i", "have", "a", "massive", "headache", "rn", "too"]
# ::lemmas ["it", "didnt", "hurt", "that", "much", "TBH", "!", "!", "just", "keep", "move", "it", "around", "and", "DRINK", "WATER", "after", "!", "!", "!", "altho", "i", "have", "a", "massive", "headache", "rn", "too"]
(c1-9 / multi-sentence
      :snt1 (c1-16 / hurt-01
                   :ARG0 (c1-3 / it)
                   :ARG1-of (c1-2 / have-quant-91
                                  :ARG2 (c1-15 / much)
                                  :ARG3 (c1-7 / too))
                   :mod (c1-4 / haha
                              :mode expressive)
                   :polarity -)
      :snt2 (c1-14 / and
                   :op1 (c1-19 / keep-02
                               :ARG0 (c1-11 / i)
                               :ARG1 (c1-13 / move-01
                                            :ARG0 c1-11
                                            :ARG1 (c1-12 / it)
                                            :ARG2 (c1-10 / across))
                               :mod (c1-18 / just))
                   :op2 (c1-0 / drink-01
                              :ARG0 c1-11
                              :ARG1 (c1-5 / water)
                              :time (c1-1 / after))
                   :snt3 (c1-6 / headache
                               :degree (c1-8 / massive)
                               :domain (c1-17 / i)
                               :mod c1-7)))

# ::snt u can come w me :]
# ::tokens ["u", "can", "come", "w", "me", ":]"]
# ::lemmas ["u", "can", "come", "w", "i", ":]"]
(c2-0 / possible-01
      :ARG1 (c2-3 / come-01
                  :ARG1 (c2-2 / you)
                  :ARG4 (c2-1 / i)))

# ::snt !!!
# ::tokens ["!", "!", "!"]
# ::lemmas ["!", "!", "!"]
(c3-0 / thing
      :mode expressive)

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c4-0 / amr-empty)

# ::snt thanks kk
# ::tokens ["thanks", "kk"]
# ::lemmas ["thank", "kk"]
(c5-1 / thank-01
      :ARG0 (c5-0 / i)
      :ARG1 (c5-2 / person
                  :name (c5-3 / name
                              :op1 "k")))
