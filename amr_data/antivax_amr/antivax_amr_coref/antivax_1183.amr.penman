# ::snt You need an exorcist for that
# ::tokens ["You", "need", "an", "exorcist", "for", "that"]
# ::lemmas ["you", "need", "an", "exorcist", "for", "that"]
(c1-2 / need-01
      :ARG0 (c1-3 / you)
      :ARG1 (c1-1 / person
                  :ARG0-of (c1-4 / exorcise-01))
      :purpose (c1-0 / that))

# ::snt LOGANSKKSJSJHSSJ
# ::tokens ["LOGANSKKSJSJHSSJ"]
# ::lemmas ["LOGANSKKSJSJHSSJ"]
(c2-0 / person
      :name (c2-1 / name
                  :op1 "LOGANSKKSJSJHSSJ"))

# ::snt I knew this was the plan all along
# ::tokens ["I", "knew", "this", "was", "the", "plan", "all", "along"]
# ::lemmas ["i", "know", "this", "be", "the", "plan", "all", "along"]
(c3-4 / know-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-2 / plan-01
                  :ARG1 (c3-1 / this)
                  :duration (c3-0 / all-along)))

# ::snt LOGAN?$:&amp;:&amp;/&amp;
# ::tokens ["LOGAN?$:&amp;:&amp;/&amp", ";"]
# ::lemmas ["logan?$:&amp;:&amp;/&amp", ";"]
(c4-1 / logan
      :polarity (c4-0 / amr-unknown))

# ::snt :all along* fuck
# ::tokens [":", "all", "along", "*", "fuck"]
# ::lemmas [":", "all", "along", "*", "fuck"]
(c5-1 / fuck-01
      :duration (c5-0 / all-along))

# ::snt HAKAKSOAJAO
# ::tokens ["HAKAKSOAJAO"]
# ::lemmas ["HAKAKSOAJAO"]
(c6-0 / person
      :name (c6-1 / name
                  :op1 "HakshojaO"))

# ::snt hmm...bk//dk *is* very gay...
# ::tokens ["hmm", "...", "bk//dk", "*", "is", "*", "very", "gay", "..."]
# ::lemmas ["hmm", "...", "bk//dk", "*", "be", "*", "very", "gay", "..."]
(c7-2 / gay-01
      :ARG1 (c7-3 / person
                  :name (c7-4 / name
                              :op1 "bk"))
      :degree (c7-1 / very)
      :mod (c7-0 / hmm
                 :mode expressive))

# ::snt My arm is very very sore and I feel significantly gayerIll let you know if these side effects persist
# ::tokens ["My", "arm", "is", "very", "very", "sore", "and", "I", "feel", "significantly", "gayerIll", "let", "you", "know", "if", "these", "side", "effects", "persist"]
# ::lemmas ["my", "arm", "be", "very", "very", "sore", "and", "i", "feel", "significantly", "gayerIll", "let", "you", "know", "if", "these", "side", "effect", "persist"]
(c8-1 / and
      :op1 (c8-0 / sore
                 :domain (c8-14 / arm
                                :part-of (c8-12 / i))
                 :degree (c8-6 / very))
      :op2 (c8-2 / feel-01
                 :ARG0 c8-12
                 :ARG1 (c8-10 / gayer
                              :ARG1-of (c8-11 / significant-02)))
      :op3 (c8-8 / let-know-07
                 :ARG0 c8-12
                 :ARG1 (c8-13 / you)
                 :ARG2 (c8-7 / truth-value
                             :polarity-of (c8-9 / persist-01
                                                :ARG1 (c8-15 / effect-03
                                                             :ARG1 (c8-4 / event
                                                                         :mod (c8-5 / side)
                                                                         :mod (c8-3 / this)))))))

# ::snt this was Joe Bidens plan along
# ::tokens ["this", "was", "Joe", "Bidens", "plan", "along"]
# ::lemmas ["this", "be", "Joe", "Bidens", "plan", "along"]
(c9-3 / plan-01
      :ARG0 (c9-1 / person
                  :name (c9-4 / name
                              :op1 "Joe"
                              :op2 "Bidens"))
      :ARG1 (c9-2 / this)
      :manner (c9-0 / along))

# ::snt Congration on the vaccine though how does it feel
# ::tokens ["Congration", "on", "the", "vaccine", "though", "how", "does", "it", "feel"]
# ::lemmas ["congration", "on", "the", "vaccine", "though", "how", "do", "it", "feel"]
(c10-3 / have-concession-91
       :ARG1 (c10-1 / feel-05
                    :ARG1 (c10-2 / Congrate-01
                                 :ARG1 (c10-4 / vaccine))
                    :ARG2 (c10-0 / amr-unknown)))

# ::snt LOGAN FKSMJDKSDJ
# ::tokens ["LOGAN", "FKSMJDKSDJ"]
# ::lemmas ["LOGAN", "FKSMJDKSDJ"]
(c11-0 / person
       :name (c11-1 / name
                    :op1 "LOGAN"
                    :op2 "FSMJDKSDJ"))

# ::snt LOGAN PLEASE AHSKAK
# ::tokens ["LOGAN", "PLEASE", "AHSKAK"]
# ::lemmas ["LOGAN", "PLEASE", "AHSKAK"]
(c12-1 / log-on-02
       :ARG0 (c12-0 / you)
       :mode imperative
       :polite +)

# ::snt please get vaccinated
# ::tokens ["please", "get", "vaccinated"]
# ::lemmas ["please", "get", "vaccinate"]
(c13-0 / vaccinate-01
       :ARG1 (c13-1 / you)
       :mode imperative
       :polite +)

# ::snt this is a joke
# ::tokens ["this", "is", "a", "joke"]
# ::lemmas ["this", "be", "a", "joke"]
(c14-0 / joke-01
       :ARG2 (c14-1 / this))
