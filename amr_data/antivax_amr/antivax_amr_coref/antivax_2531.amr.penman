# ::snt no i was just dying to use that meme too
# ::tokens ["no", "i", "was", "just", "dying", "to", "use", "that", "meme", "too"]
# ::lemmas ["no", "i", "be", "just", "die", "to", "use", "that", "meme", "too"]
(c1-0 / die-01
      :ARG1 (c1-5 / i)
      :ARG2 (c1-2 / use-01
                  :ARG0 c1-5
                  :ARG1 (c1-6 / meme
                              :mod (c1-3 / that))
                  :mod (c1-1 / too))
      :mod (c1-4 / just)
      :mod (c1-7 / no))

# ::snt ....you said you were happy that i am your child just yesterday and now you aren't letting your child express opinions...ok
# ::tokens ["....", "you", "said", "you", "were", "happy", "that", "i", "am", "your", "child", "just", "yesterday", "and", "now", "you", "are", "n't", "letting", "your", "child", "express", "opinions", "...", "ok"]
# ::lemmas ["....", "you", "say", "you", "be", "happy", "that", "i", "be", "your", "child", "just", "yesterday", "and", "now", "you", "be", "not", "let", "your", "child", "express", "opinion", "...", "ok"]
(c2-2 / and
      :op1 (c2-0 / say-01
                 :ARG0 (c2-14 / you)
                 :ARG1 (c2-5 / happy-01
                             :ARG0 (c2-12 / person
                                          :ARG0-of (c2-11 / have-rel-role-91
                                                          :ARG1 c2-14
                                                          :ARG2 (c2-3 / child))
                                          :domain (c2-4 / i))
                             :ARG1 c2-14
                             :time (c2-15 / yesterday
                                          :mod (c2-9 / just))))
      :op2 (c2-10 / let-01
                  :ARG0 c2-14
                  :ARG1 (c2-16 / express-01
                               :ARG0 (c2-8 / person
                                           :ARG0-of (c2-1 / have-rel-role-91
                                                          :ARG1 c2-14
                                                          :ARG2 c2-3))
                               :ARG1 (c2-7 / opine-01
                                           :ARG0 c2-8))
                  :time (c2-13 / now)
                  :polarity -)
      :ARG1-of (c2-6 / okay-04))

# ::snt i have been dying to use it jdkdsh
# ::tokens ["i", "have", "been", "dying", "to", "use", "it", "jdkdsh"]
# ::lemmas ["i", "have", "be", "die", "to", "use", "it", "jdkdsh"]
(c4-0 / say-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-1 / die-01
                  :ARG1 c4-5
                  :ARG2 (c4-3 / use-01
                              :ARG0 c4-5
                              :ARG1 (c4-2 / it)))
      :ARG2 (c4-4 / person
                  :name (c4-6 / name
                              :op1 "Jdkdsh")))

# ::snt yeah mental illness
# ::tokens ["yeah", "mental", "illness"]
# ::lemmas ["yeah", "mental", "illness"]
(c6-0 / ill-01
      :ARG2 (c6-1 / mental)
      :mod (c6-2 / yeah))

# ::snt i check the followers going up every hour and what about it
# ::tokens ["i", "check", "the", "followers", "going", "up", "every", "hour", "and", "what", "about", "it"]
# ::lemmas ["i", "check", "the", "follower", "go", "up", "every", "hour", "and", "what", "about", "it"]
(c7-0 / and
      :op1 (c7-2 / check-01
                 :ARG0 (c7-9 / i)
                 :ARG1 (c7-7 / person
                             :ARG0-of (c7-1 / follow-01)
                             :ARG1-of (c7-8 / go-01
                                            :direction (c7-4 / up)
                                            :frequency (c7-6 / rate-entity-91
                                                             :ARG3 (c7-5 / temporal-quantity
                                                                         :unit (c7-3 / hour)
                                                                         :quant 1)))))
      :op2 (c7-10 / amr-unknown
                  :topic c7-2))
