# ::snt Terrific! Congratulations. So happy to hear that that you are now safe.
# ::tokens ["Terrific", "!", "Congratulations", ".", "So", "happy", "to", "hear", "that", "that", "you", "are", "now", "safe", "."]
# ::lemmas ["terrific", "!", "congratulation", ".", "so", "happy", "to", "hear", "that", "that", "you", "be", "now", "safe", "."]
(c1-7 / multi-sentence
      :snt1 (c1-6 / incredible
                  :mode expressive)
      :snt2 (c1-2 / congratulate-01)
      :snt3 (c1-3 / happy-01
                  :ARG0 (c1-5 / hear-01
                              :ARG1 (c1-0 / safe-01
                                          :ARG1 (c1-9 / you)
                                          :time (c1-8 / now)))
                  :ARG1 (c1-4 / i)
                  :degree (c1-1 / so)))

# ::snt My symptoms only lasted a day. I hope yours are short-lived.
# ::tokens ["My", "symptoms", "only", "lasted", "a", "day", ".", "I", "hope", "yours", "are", "short", "-", "lived", "."]
# ::lemmas ["my", "symptom", "only", "last", "a", "day", ".", "i", "hope", "your", "be", "short", "-", "live", "."]
(c2-11 / multi-sentence
       :snt1 (c2-7 / last-01
                   :ARG1 (c2-0 / symptom
                               :poss (c2-10 / i))
                   :ARG2 (c2-6 / temporal-quantity
                               :unit (c2-1 / day)
                               :quant 1)
                   :mod (c2-5 / only))
       :snt2 (c2-2 / hope-01
                   :ARG0 (c2-3 / i)
                   :ARG1 (c2-8 / live-01
                               :ARG1 (c2-9 / symptom
                                           :poss (c2-12 / you))
                               :ARG1-of (c2-4 / short-07))))

# ::snt Good for you, my wife got her first today.
# ::tokens ["Good", "for", "you", ",", "my", "wife", "got", "her", "first", "today", "."]
# ::lemmas ["good", "for", "you", ",", "my", "wife", "get", "she", "first", "today", "."]
(c3-9 / multi-sentence
      :snt1 (c3-7 / good-02
                  :ARG2 (c3-5 / you))
      :snt2 (c3-10 / get-01
                   :ARG0 (c3-8 / person
                               :ARG0-of (c3-3 / have-rel-role-91
                                              :ARG1 (c3-1 / i)
                                              :ARG2 (c3-2 / wife)))
                   :ARG1 (c3-0 / she)
                   :ord (c3-4 / ordinal-entity
                              :value 1)
                   :time (c3-6 / today)))

# ::snt Hope the symptoms pass quickly but congratulations on getting the vaccination.
# ::tokens ["Hope", "the", "symptoms", "pass", "quickly", "but", "congratulations", "on", "getting", "the", "vaccination", "."]
# ::lemmas ["hope", "the", "symptom", "pass", "quickly", "but", "congratulation", "on", "get", "the", "vaccination", "."]
(c4-2 / contrast-01
      :ARG1 (c4-4 / hope-01
                  :ARG1 (c4-7 / pass-03
                              :ARG1 (c4-0 / symptom)
                              :ARG1-of (c4-3 / quick-02)))
      :ARG2 (c4-1 / congratulate-01
                  :ARG2 (c4-6 / get-01
                              :ARG1 (c4-5 / vaccinate-01))))

# ::snt Hope you feel better soon sweetheart
# ::tokens ["Hope", "you", "feel", "better", "soon", "sweetheart"]
# ::lemmas ["hope", "you", "feel", "well", "soon", "sweetheart"]
(c5-0 / say-01
      :ARG1 (c5-3 / hope-01
                  :ARG0 (c5-7 / i)
                  :ARG1 (c5-1 / feel-01
                              :ARG0 (c5-6 / sweetheart)
                              :ARG1 (c5-2 / well-05
                                          :ARG1 c5-6
                                          :ARG2-of (c5-5 / have-degree-91
                                                         :ARG1 c5-6
                                                         :ARG3 (c5-8 / more)))
                              :time (c5-4 / soon)))
      :ARG2 c5-6)

# ::snt My second shot is in two weeks.
# ::tokens ["My", "second", "shot", "is", "in", "two", "weeks", "."]
# ::lemmas ["my", "second", "shot", "be", "in", "two", "weeks", "."]
(c6-0 / shoot-01
      :ARG0 (c6-5 / i)
      :ord (c6-3 / ordinal-entity
                 :value 2)
      :time (c6-1 / after
                  :op1 (c6-6 / now)
                  :quant (c6-4 / temporal-quantity
                               :unit (c6-2 / week)
                               :quant 2)))
