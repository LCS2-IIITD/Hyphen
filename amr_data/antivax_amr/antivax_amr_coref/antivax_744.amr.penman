# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c2-0 / amr-empty)

# ::snt Thanks,
# ::tokens ["Thanks", ","]
# ::lemmas ["thank", ","]
(c5-0 / thank-01)

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c7-0 / yes)

# ::snt Yes UAE
# ::tokens ["Yes", "UAE"]
# ::lemmas ["yes", "UAE"]
(c14-1 / yes
       :op1 (c14-2 / country
                   :name (c14-0 / name
                                :op1 "UAE")))

# ::snt vaccine.. ...
# ::tokens ["vaccine", "..", "..."]
# ::lemmas ["vaccine", "..", "..."]
(c17-0 / vaccine)

# ::snt Great, congrats dear
# ::tokens ["Great", ",", "congrats", "dear"]
# ::lemmas ["great", ",", "congrat", "dear"]
(c19-0 / say-01
       :ARG1 (c19-2 / and
                    :op1 (c19-4 / great)
                    :op2 (c19-3 / congratulate-01))
       :ARG2 (c19-1 / dear))

# ::snt UAE
# ::tokens ["UAE"]
# ::lemmas ["uae"]
(c20-1 / country
       :name (c20-0 / name
                    :op1 "UAE"))

# ::snt Really where when
# ::tokens ["Really", "where", "when"]
# ::lemmas ["really", "where", "when"]
(c21-0 / be-located-at-91
       :ARG2 (c21-1 / amr-unknown)
       :ARG1-of (c21-2 / real-04))

# ::snt I should wait at least or days to see, but I think nothing will happen
# ::tokens ["I", "should", "wait", "at", "least", "or", "days", "to", "see", ",", "but", "I", "think", "nothing", "will", "happen"]
# ::lemmas ["i", "should", "wait", "at", "least", "or", "days", "to", "see", ",", "but", "i", "think", "nothing", "will", "happen"]
(c22-3 / contrast-01
       :ARG1 (c22-8 / recommend-01
                    :ARG1 (c22-4 / wait-01
                                 :ARG1 (c22-9 / i)
                                 :ARG2 (c22-0 / see-01
                                              :ARG0 c22-9)
                                 :duration (c22-2 / at-least
                                                  :op1 (c22-6 / or
                                                              :op1 (c22-7 / temporal-quantity
                                                                          :unit (c22-1 / day)
                                                                          :quant 1)
                                                              :op2 (c22-5 / temporal-quantity
                                                                          :unit c22-1
                                                                          :quant 1)))))
       :ARG2 (c22-10 / think-01
                     :ARG0 c22-9
                     :ARG1 (c22-11 / event
                                   :polarity -)))

# ::snt Any side effects?
# ::tokens ["Any", "side", "effects", "?"]
# ::lemmas ["any", "side", "effect", "?"]
(c23-3 / event
       :polarity (c23-1 / amr-unknown)
       :mod (c23-0 / side)
       :ARG1-of (c23-2 / effect-03))

# ::snt Full package
# ::tokens ["Full", "package"]
# ::lemmas ["full", "package"]
(c25-0 / package
       :ARG1-of (c25-1 / full-09))

# ::snt Mabrouk
# ::tokens ["Mabrouk"]
# ::lemmas ["Mabrouk"]
(c34-0 / person
       :name (c34-1 / name
                    :op1 "Mabrouk"))

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c35-0 / congratulate-01)

# ::snt Congrats!
# ::tokens ["Congrats", "!"]
# ::lemmas ["Congrats", "!"]
(c36-0 / congratulate-01
       :mode expressive)

# ::snt The Chinese one
# ::tokens ["The", "Chinese", "one"]
# ::lemmas ["the", "Chinese", "one"]
(c37-0 / one
       :mod (c37-2 / country
                   :name (c37-1 / name
                                :op1 "China")))

# ::snt which vaccine??
# ::tokens ["which", "vaccine", "?", "?"]
# ::lemmas ["which", "vaccine", "?", "?"]
(c39-0 / vaccine
       :mod (c39-1 / amr-unknown))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c40-0 / amr-empty)

# ::snt good luck and take care
# ::tokens ["good", "luck", "and", "take", "care"]
# ::lemmas ["good", "luck", "and", "take", "care"]
(c42-1 / and
       :op1 (c42-2 / luck
                   :ARG1-of (c42-0 / good-02))
       :op2 (c42-3 / care-03
                   :ARG1-of c42-0))
