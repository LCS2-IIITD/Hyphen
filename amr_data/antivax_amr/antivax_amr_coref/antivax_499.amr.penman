# ::snt My point exactly black child will forever be on their own
# ::tokens ["My", "point", "exactly", "black", "child", "will", "forever", "be", "on", "their", "own"]
# ::lemmas ["my", "point", "exactly", "black", "child", "will", "forever", "be", "on", "their", "own"]
(c1-4 / by-oneself
      :domain (c1-2 / child
                    :ARG1-of (c1-0 / black-05)
                    :mod (c1-6 / exact))
      :duration (c1-1 / forever)
      :ARG1-of (c1-5 / point-04
                     :ARG0 (c1-3 / i)))

# ::snt That will never happen coz it will benefit the African child. Remember they discredited that Madagascar vaccine before they even test it.
# ::tokens ["That", "will", "never", "happen", "coz", "it", "will", "benefit", "the", "African", "child", ".", "Remember", "they", "discredited", "that", "Madagascar", "vaccine", "before", "they", "even", "test", "it", "."]
# ::lemmas ["that", "will", "never", "happen", "coz", "it", "will", "benefit", "the", "African", "child", ".", "remember", "they", "discredit", "that", "Madagascar", "vaccine", "before", "they", "even", "test", "it", "."]
(c2-9 / multi-sentence
      :snt1 (c2-3 / cause-01
                  :ARG0 (c2-19 / benefit-01
                               :ARG0 (c2-7 / that)
                               :ARG1 (c2-0 / child
                                           :location (c2-5 / continent
                                                           :name (c2-10 / name
                                                                        :op1 "Africa"))))
                  :ARG1 (c2-17 / have-polarity-91
                               :ARG1 (c2-4 / that)
                               :time (c2-12 / ever)
                               :ARG2 -))
      :snt2 (c2-8 / remember-01
                  :ARG0 (c2-15 / you)
                  :ARG1 (c2-1 / discredit-01
                              :ARG0 (c2-11 / they)
                              :ARG1 (c2-6 / vaccine
                                          :mod (c2-14 / country
                                                      :name (c2-2 / name
                                                                  :op1 "Madagascar")))
                              :time (c2-16 / before
                                           :op1 (c2-13 / test-01
                                                       :ARG0 c2-11
                                                       :ARG1 c2-6
                                                       :mod (c2-18 / even))))
                  :mode imperative))
