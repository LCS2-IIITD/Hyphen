# ::snt Exactly! I got it just in time.
# ::tokens ["Exactly", "!", "I", "got", "it", "just", "in", "time", "."]
# ::lemmas ["exactly", "!", "i", "get", "it", "just", "in", "time", "."]
(c1-5 / multi-sentence
      :snt1 (c1-6 / exact
                  :mode expressive)
      :snt2 (c1-2 / get-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-0 / it)
                  :time (c1-1 / in-time
                              :mod (c1-3 / just))))

# ::snt Probably cuz so many people were waiting for that particular vaccine so they only have to do it one time
# ::tokens ["Probably", "cuz", "so", "many", "people", "were", "waiting", "for", "that", "particular", "vaccine", "so", "they", "only", "have", "to", "do", "it", "one", "time"]
# ::lemmas ["probably", "cuz", "so", "many", "people", "be", "wait", "for", "that", "particular", "vaccine", "so", "they", "only", "have", "to", "do", "it", "one", "time"]
(c2-3 / cause-01
      :ARG0 (c2-4 / wait-01
                  :ARG1 (c2-12 / person
                               :ARG1-of (c2-6 / have-quant-91
                                              :ARG2 (c2-13 / many)
                                              :ARG3 (c2-0 / so)))
                  :ARG2 (c2-8 / vaccine
                              :mod (c2-10 / particular)
                              :mod (c2-11 / that))
                  :ARG0-of (c2-1 / cause-01
                                 :ARG1 (c2-9 / obligate-01
                                             :ARG1 c2-12
                                             :ARG2 (c2-2 / do-02
                                                         :ARG0 c2-12
                                                         :ARG1 c2-8
                                                         :mod (c2-7 / only)
                                                         :frequency 1))))
      :ARG1 (c2-5 / probable))

# ::snt Yep! Dont have to get a second dose. I just saw on local news that theres a shortage of it now in Tampa.
# ::tokens ["Yep", "!", "Do", "nt", "have", "to", "get", "a", "second", "dose", ".", "I", "just", "saw", "on", "local", "news", "that", "there", "s", "a", "shortage", "of", "it", "now", "in", "Tampa", "."]
# ::lemmas ["yep", "!", "do", "not", "have", "to", "get", "a", "second", "dose", ".", "i", "just", "see", "on", "local", "news", "that", "there", "s", "a", "shortage", "of", "it", "now", "in", "Tampa", "."]
(c3-13 / multi-sentence
       :snt1 (c3-5 / obligate-01
                   :ARG2 (c3-10 / get-01
                                :ARG1 (c3-0 / dose
                                            :ord (c3-4 / ordinal-entity
                                                       :value 2)))
                   :polarity -)
       :snt2 (c3-1 / see-01
                   :ARG0 (c3-12 / i)
                   :ARG1 (c3-11 / short-06
                                :ARG2 (c3-3 / it)
                                :location (c3-2 / city
                                                :name (c3-14 / name
                                                             :op1 "Tampa"))
                                :time (c3-7 / now))
                   :time (c3-8 / just)
                   :medium (c3-6 / news
                                 :ARG1-of (c3-9 / local-02))))

# ::snt Awesome that's what my sister got the other day
# ::tokens ["Awesome", "that", "'s", "what", "my", "sister", "got", "the", "other", "day"]
# ::lemmas ["Awesome", "that", "be", "what", "my", "sister", "get", "the", "other", "day"]
(c4-2 / awe-01
      :ARG0 (c4-6 / that
                  :ARG1-of (c4-7 / get-01
                                 :ARG0 (c4-8 / person
                                             :ARG0-of (c4-4 / have-rel-role-91
                                                            :ARG1 (c4-3 / i)
                                                            :ARG2 (c4-0 / sister)))
                                 :time (c4-1 / day
                                             :mod (c4-5 / other)))))

# ::snt J&amp;J. ( one dose)
# ::tokens ["J&amp;J.", "(", "one", "dose", ")"]
# ::lemmas ["J&amp;J.", "(", "one", "dose", ")"]
(c5-1 / and
      :op1 (c5-4 / person
                 :name (c5-5 / name
                             :op1 "J"))
      :op2 (c5-2 / person
                 :name (c5-3 / name
                             :op1 "amp"))
      :ARG1-of (c5-0 / dose-01
                     :quant 1))

# ::snt YAAAAY which one did you get?
# ::tokens ["YAAAAY", "which", "one", "did", "you", "get", "?"]
# ::lemmas ["yaaaay", "which", "one", "do", "you", "get", "?"]
(c6-2 / get-01
      :ARG0 (c6-3 / you)
      :ARG1 (c6-1 / one
                  :mod (c6-0 / amr-unknown))
      :mod (c6-4 / yep))
