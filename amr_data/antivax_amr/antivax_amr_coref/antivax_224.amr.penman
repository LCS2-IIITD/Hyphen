# ::snt Yayayayayay!
# ::tokens ["Yayayayayay", "!"]
# ::lemmas ["Yayayayayay", "!"]
(c1-0 / yayayay)

# ::snt Nice!!!! Happy for you! Saber some champagne yet?
# ::tokens ["Nice", "!", "!", "!", "!", "Happy", "for", "you", "!", "Saber", "some", "champagne", "yet", "?"]
# ::lemmas ["nice", "!", "!", "!", "!", "happy", "for", "you", "!", "saber", "some", "champagne", "yet", "?"]
(c2-5 / multi-sentence
      :snt1 (c2-6 / nice-01
                  :mode expressive)
      :snt2 (c2-3 / happy-01
                  :ARG1 (c2-7 / you))
      :snt3 (c2-2 / champagne
                  :mod (c2-0 / some)
                  :polarity (c2-1 / amr-unknown)
                  :mod (c2-4 / Saber)
                  :time (c2-8 / yet)))

# ::snt Boom! Got one!
# ::tokens ["Boom", "!", "Got", "one", "!"]
# ::lemmas ["Boom", "!", "Got", "one", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / boom
                  :mode expressive)
      :snt2 (c3-3 / get-01
                  :ARG1 (c3-1 / one)
                  :mode expressive))

# ::snt Well, I think I just got an appointment (I won't believe it until I get a shot in my arm). Thank you!
# ::tokens ["Well", ",", "I", "think", "I", "just", "got", "an", "appointment", "(", "I", "wo", "n't", "believe", "it", "until", "I", "get", "a", "shot", "in", "my", "arm", ")", ".", "Thank", "you", "!"]
# ::lemmas ["well", ",", "i", "think", "i", "just", "get", "an", "appointment", "(", "i", "will", "not", "believe", "it", "until", "i", "get", "a", "shot", "in", "my", "arm", ")", ".", "thank", "you", "!"]
(c4-11 / multi-sentence
       :snt1 (c4-6 / think-01
                   :ARG0 (c4-10 / i
                                :part (c4-1 / arm))
                   :ARG1 (c4-8 / get-01
                               :ARG0 c4-10
                               :ARG1 (c4-14 / appointment-02
                                            :ARG0 c4-10)
                               :mod (c4-9 / just))
                   :ARG1-of (c4-2 / mean-01
                                  :ARG2 (c4-12 / believe-01
                                               :ARG0 c4-10
                                               :ARG1 c4-8
                                               :time (c4-5 / until
                                                           :op1 (c4-13 / get-01
                                                                       :ARG0 c4-10
                                                                       :ARG1 (c4-0 / shoot-01
                                                                                   :location c4-1)))
                                               :polarity -)))
       :snt2 (c4-3 / thank-01
                   :ARG0 (c4-4 / i
                               :part c4-1)
                   :ARG1 (c4-7 / you)
                   :mode expressive))

# ::snt Yeah make sure all your notifications are on and your phone is loud, as far as Ive been able to tell theres no specific times they are tweeting. Good luck!
# ::tokens ["Yeah", "make", "sure", "all", "your", "notifications", "are", "on", "and", "your", "phone", "is", "loud", ",", "as", "far", "as", "I", "ve", "been", "able", "to", "tell", "there", "s", "no", "specific", "times", "they", "are", "tweeting", ".", "Good", "luck", "!"]
# ::lemmas ["yeah", "make", "sure", "all", "your", "notification", "be", "on", "and", "your", "phone", "be", "loud", ",", "as", "far", "as", "i", "ve", "be", "able", "to", "tell", "there", "s", "no", "specific", "time", "they", "be", "tweet", ".", "good", "luck", "!"]
(c5-7 / multi-sentence
      :snt1 (c5-11 / ensure-01
                   :ARG0 (c5-14 / you)
                   :ARG1 (c5-16 / and
                                :op1 (c5-4 / on-01
                                           :ARG1 (c5-5 / thing
                                                       :ARG0-of (c5-8 / notify-01
                                                                      :ARG1 c5-14)
                                                       :mod (c5-10 / all)))
                                :op2 (c5-19 / loud
                                            :domain (c5-20 / phone
                                                           :poss c5-14)))
                   :mod (c5-15 / yeah
                               :mode expressive)
                   :concession (c5-0 / as-far-as
                                     :op1 (c5-18 / possible-01
                                                 :ARG1 (c5-3 / tell-01
                                                             :ARG0 (c5-2 / i)
                                                             :ARG1 (c5-9 / time
                                                                         :ARG1-of (c5-12 / specific-02)
                                                                         :time-of (c5-13 / tweet-02
                                                                                         :ARG0 (c5-17 / they))
                                                                         :polarity -))))
                   :snt2 (c5-1 / luck
                               :ARG1-of (c5-6 / good-02))
                   :mode imperative))

# ::snt Thanks. Just signed up for notifications
# ::tokens ["Thanks", ".", "Just", "signed", "up", "for", "notifications"]
# ::lemmas ["thank", ".", "just", "sign", "up", "for", "notification"]
(c6-5 / multi-sentence
      :snt1 (c6-2 / thank-01
                  :ARG0 (c6-4 / i)
                  :ARG1 (c6-7 / you))
      :snt2 (c6-0 / sign-up-03
                  :ARG1 (c6-1 / i)
                  :ARG3 (c6-6 / notify-01)
                  :time (c6-3 / just)))

# ::snt I was able to get one through
# ::tokens ["I", "was", "able", "to", "get", "one", "through"]
# ::lemmas ["i", "be", "able", "to", "get", "one", "through"]
(c7-1 / possible-01
      :ARG1 (c7-0 / get-through-13
                  :ARG0 (c7-3 / i)
                  :ARG1 (c7-2 / one)))

# ::snt Hey! Did you do preregistration with the state before making the appointment or just go ahead and make one? Just curious
# ::tokens ["Hey", "!", "Did", "you", "do", "preregistration", "with", "the", "state", "before", "making", "the", "appointment", "or", "just", "go", "ahead", "and", "make", "one", "?", "Just", "curious"]
# ::lemmas ["hey", "!", "do", "you", "do", "preregistration", "with", "the", "state", "before", "make", "the", "appointment", "or", "just", "go", "ahead", "and", "make", "one", "?", "just", "curious"]
(c8-13 / multi-sentence
       :snt1 (c8-5 / hey
                   :mode expressive)
       :snt2 (c8-6 / or
                   :op1 (c8-8 / register-02
                              :ARG0 (c8-0 / state)
                              :ARG1 (c8-14 / you)
                              :time (c8-10 / before
                                           :op1 (c8-3 / make-01
                                                      :ARG0 c8-14
                                                      :ARG1 (c8-2 / appointment-02
                                                                  :ARG0 c8-14))))
                   :op2 (c8-15 / and
                               :op1 (c8-9 / go-06
                                          :ARG0 c8-14
                                          :ARG2 (c8-1 / ahead)
                                          :mod (c8-11 / just))
                               :op2 c8-3
                               :ARG0 c8-14
                               :ARG1 c8-2))
       :polarity (c8-7 / amr-unknown)
       :snt3 (c8-4 / curious-01
                   :ARG1 (c8-12 / i)
                   :mod c8-11))

# ::snt Fussing with the CVS website for the last hours has been - like a Ticketmaster in the s.
# ::tokens ["Fussing", "with", "the", "CVS", "website", "for", "the", "last", "hours", "has", "been", "-", "like", "a", "Ticketmaster", "in", "the", "s."]
# ::lemmas ["fuss", "with", "the", "CVS", "website", "for", "the", "last", "hours", "have", "be", "-", "like", "a", "Ticketmaster", "in", "the", "s."]
(c9-6 / resemble-01
      :ARG1 (c9-1 / fuss-01
                  :ARG1 (c9-3 / website
                              :poss (c9-2 / company
                                          :name (c9-10 / name
                                                       :op1 "CVS")))
                  :time (c9-8 / before
                              :op1 (c9-7 / now)
                              :duration (c9-9 / multiple
                                              :op1 (c9-5 / temporal-quantity
                                                         :unit (c9-4 / hour)
                                                         :quant 1))))
      :ARG2 c9-2
      :name c9-10
      :location (c9-0 / state
                      :name c9-10
                      :op1 "S")
      :op1 "Ticketmaster")
