# ::snt This is amazing Sandy
# ::tokens ["This", "is", "amazing", "Sandy"]
# ::lemmas ["this", "be", "amazing", "Sandy"]
(c1-0 / say-01
      :ARG1 (c1-1 / amaze-01
                  :ARG0 (c1-2 / this))
      :ARG2 (c1-3 / person
                  :name (c1-4 / name
                              :op1 "Sandy")))

# ::snt The guy on the left looks like he has an IQ of about .
# ::tokens ["The", "guy", "on", "the", "left", "looks", "like", "he", "has", "an", "IQ", "of", "about", "."]
# ::lemmas ["the", "guy", "on", "the", "left", "look", "like", "he", "have", "an", "iq", "of", "about", "."]
(c2-3 / look-02
      :ARG0 (c2-5 / guy
                  :location (c2-4 / left-19))
      :ARG1 (c2-2 / have-03
                  :ARG0 c2-5
                  :ARG1 (c2-1 / quotient
                              :quant-of (c2-6 / intelligent-01)
                              :ARG1-of (c2-7 / equal-01
                                             :ARG2 (c2-0 / about)))))

# ::snt There are idiots everywhere. You ignorant anti-vaxx idiots are just helping to create much more dangerous mutations of the virus the longer it continues to spread.
# ::tokens ["There", "are", "idiots", "everywhere", ".", "You", "ignorant", "anti", "-", "vaxx", "idiots", "are", "just", "helping", "to", "create", "much", "more", "dangerous", "mutations", "of", "the", "virus", "the", "longer", "it", "continues", "to", "spread", "."]
# ::lemmas ["there", "be", "idiot", "everywhere", ".", "you", "ignorant", "anti", "-", "vaxx", "idiot", "be", "just", "help", "to", "create", "much", "more", "dangerous", "mutation", "of", "the", "virus", "the", "long", "it", "continue", "to", "spread", "."]
(c3-11 / multi-sentence
       :snt1 (c3-3 / idiot
                   :location (c3-14 / everywhere))
       :snt2 (c3-21 / help-01
                    :ARG0 (c3-16 / idiot
                                 :ARG0-of (c3-8 / oppose-01
                                                :ARG1 (c3-23 / law
                                                             :name (c3-12 / name
                                                                          :op1 "vaxx")))
                                 :ARG1-of (c3-17 / ignorant-02))
                    :ARG1 (c3-5 / create-01
                                :ARG0 c3-16
                                :ARG1 (c3-20 / mutate-01
                                             :ARG1 (c3-7 / virus)
                                             :ARG1-of (c3-2 / have-degree-91
                                                            :ARG2 (c3-22 / endanger-01
                                                                         :ARG0 c3-20)
                                                            :ARG3 (c3-18 / more
                                                                         :quant (c3-10 / much)))))
                    :mod (c3-24 / just)
                    :ARG1-of (c3-0 / cause-01
                                   :ARG0 (c3-6 / correlate-91
                                               :ARG1 (c3-13 / more
                                                            :ARG3-of (c3-4 / have-degree-91
                                                                           :ARG1 (c3-15 / spread-03
                                                                                        :ARG1 c3-7)
                                                                           :ARG2 (c3-1 / long-03
                                                                                       :ARG1 c3-15)))
                                               :ARG2 (c3-19 / more
                                                            :ARG3-of (c3-9 / have-degree-91
                                                                           :ARG1 c3-15
                                                                           :ARG2 c3-1
                                                                           :ARG1 c3-15))))))

# ::snt Im considering the shingles vax.
# ::tokens ["I", "m", "considering", "the", "shingles", "vax", "."]
# ::lemmas ["i", "m", "consider", "the", "shingle", "vax", "."]
(c4-3 / consider-02
      :ARG0 (c4-0 / i)
      :ARG1 (c4-2 / product
                  :name (c4-1 / name
                              :op1 "Shingles"
                              :op2 "Vax")))

# ::snt Thanks much Pal!
# ::tokens ["Thanks", "much", "Pal", "!"]
# ::lemmas ["thank", "much", "Pal", "!"]
(c5-0 / say-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-1 / thank-01
                  :ARG0 c5-3
                  :ARG1 (c5-2 / person
                              :name (c5-5 / name
                                          :op1 "Pal"))
                  :mod (c5-4 / much))
      :ARG2 c5-2)

# ::snt Ok! here is it Pal , Bookmark and check your download page if i don't respond. REF: /12
# ::tokens ["Ok", "!", "here", "is", "it", "Pal", ",", "Bookmark", "and", "check", "your", "download", "page", "if", "i", "do", "n't", "respond", ".", "REF", ":", "/12"]
# ::lemmas ["ok", "!", "here", "be", "it", "Pal", ",", "Bookmark", "and", "check", "your", "download", "page", "if", "i", "do", "not", "respond", ".", "REF", ":", "/12"]
(c6-13 / multi-sentence
       :snt1 (c6-7 / okay-01
                   :ARG1 (c6-2 / and
                               :op1 (c6-11 / be-located-at-91
                                           :ARG1 (c6-12 / it)
                                           :ARG2 (c6-5 / here))
                               :op2 (c6-1 / bookmark)
                               :op3 (c6-3 / check-01
                                          :ARG0 (c6-15 / you)
                                          :ARG1 (c6-10 / page
                                                       :mod (c6-0 / download-01)
                                                       :poss c6-15)
                                          :condition (c6-9 / respond-01
                                                           :ARG0 (c6-6 / i)
                                                           :polarity -)
                                          :mode imperative))
                   :mode expressive)
       :snt2 (c6-8 / publication
                   :name (c6-14 / name
                                :op1 "REF")
                   :time (c6-4 / date-entity
                               :month 12)))

# ::snt I LOVE that singer!!!!!!!!
# ::tokens ["I", "LOVE", "that", "singer", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "love", "that", "singer", "!", "!", "!", "!", "!", "!", "!", "!"]
(c8-2 / love-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-3 / person
                  :ARG0-of (c8-0 / sing-01)
                  :mod (c8-1 / that)))

# ::snt UK! "You can stick your poison vaccines up your arse..."The Brits know how to protest!Other presentation by Franky
# ::tokens ["UK", "!", "\"", "You", "can", "stick", "your", "poison", "vaccines", "up", "your", "arse", "...", "\"The", "Brits", "know", "how", "to", "protest!Other", "presentation", "by", "Franky"]
# ::lemmas ["UK", "!", "\"", "you", "can", "stick", "your", "poison", "vaccine", "up", "your", "arse", "...", "\"the", "Brits", "know", "how", "to", "protest!other", "presentation", "by", "Franky"]
(c10-6 / multi-sentence
       :snt1 (c10-3 / country
                    :name (c10-7 / name
                                 :op1 "UK"))
       :snt2 (c10-19 / possible-01
                     :ARG1 (c10-9 / stick-01
                                  :ARG0 (c10-15 / you)
                                  :ARG1 (c10-4 / vaccine
                                               :ARG0-of (c10-18 / poison-01)
                                               :poss c10-15)
                                  :ARG2 (c10-17 / up-03
                                                :ARG1 c10-4
                                                :ARG2 (c10-16 / ass
                                                              :poss c10-15))))
       :snt3 (c10-20 / know-03
                     :ARG0 (c10-12 / person
                                   :mod c10-3
                                   :name (c10-1 / name
                                                :op1 "Britain")))
       :ARG1 (c10-11 / protest-01
                     :ARG0 (c10-0 / person
                                  :name (c10-14 / name
                                                :op1 "Franky")))
       :snt4 (c10-13 / presentation
                     :mod (c10-5 / other)
                     :ARG1-of (c10-8 / author-01
                                     :ARG0 (c10-10 / person
                                                   :name (c10-2 / name
                                                                :op1 "Franky")))))

# ::snt Wow.
# ::tokens ["Wow", "."]
# ::lemmas ["wow", "."]
(c12-0 / wow
       :mode expressive)

# ::snt Vaccine are meds and like all meds have side effects, depending on body chemistry, other meds you're taking. Some people can't take baby aspirin without a reaction and vaccines are not poison. Millions have been vaccinated without reactions from it.
# ::tokens ["Vaccine", "are", "meds", "and", "like", "all", "meds", "have", "side", "effects", ",", "depending", "on", "body", "chemistry", ",", "other", "meds", "you", "'re", "taking", ".", "Some", "people", "ca", "n't", "take", "baby", "aspirin", "without", "a", "reaction", "and", "vaccines", "are", "not", "poison", ".", "Millions", "have", "been", "vaccinated", "without", "reactions", "from", "it", "."]
# ::lemmas ["Vaccine", "be", "med", "and", "like", "all", "med", "have", "side", "effect", ",", "depend", "on", "body", "chemistry", ",", "other", "med", "you", "be", "take", ".", "some", "people", "can", "not", "take", "baby", "aspirin", "without", "a", "reaction", "and", "vaccine", "be", "not", "poison", ".", "Millions", "have", "be", "vaccinate", "without", "reaction", "from", "it", "."]
(c13-10 / multi-sentence
        :snt1 (c13-19 / and
                      :op1 (c13-21 / med
                                   :domain (c13-5 / vaccine))
                      :op2 (c13-12 / effect-03
                                   :ARG0 c13-5
                                   :mod (c13-13 / side)
                                   :ARG1-of (c13-7 / resemble-01
                                                   :ARG2 (c13-22 / effect-03
                                                                 :ARG0 (c13-16 / medication
                                                                               :mod (c13-11 / all)
                                                                               :ARG1-of (c13-6 / take-01
                                                                                               :ARG0 (c13-17 / you)))
                                                                 :ARG0-of (c13-0 / depend-01
                                                                                 :ARG1 (c13-2 / chemistry
                                                                                              :mod (c13-24 / body)))))))
        :snt2 (c13-1 / and
                     :op1 (c13-26 / possible-01
                                  :ARG1 (c13-3 / take-01
                                               :ARG0 (c13-23 / person
                                                             :mod (c13-25 / some))
                                               :ARG1 (c13-27 / aspirin
                                                             :mod (c13-18 / baby))
                                               :manner (c13-4 / react-01
                                                              :ARG0 c13-23
                                                              :polarity -))
                                  :polarity -)
                     :op2 (c13-14 / poison-02
                                  :ARG0 (c13-20 / vaccine)
                                  :polarity -))
        :snt3 (c13-15 / vaccinate-01
                      :ARG1 c13-23
                      :quant (c13-8 / multiple
                                    :op1 1000000))
        :manner (c13-9 / react-01
                       :ARG0 c13-20
                       :polarity -))

# ::snt Absolutely awesome!!!
# ::tokens ["Absolutely", "awesome", "!", "!", "!"]
# ::lemmas ["absolutely", "awesome", "!", "!", "!"]
(c14-0 / awesome-02
       :degree (c14-1 / absolute))

# ::snt Tdap vax almost killed me and I've been battling skin issues and my allergies got worse!! Never getting another vax again !!!!
# ::tokens ["Tdap", "vax", "almost", "killed", "me", "and", "I", "'ve", "been", "battling", "skin", "issues", "and", "my", "allergies", "got", "worse", "!", "!", "Never", "getting", "another", "vax", "again", "!", "!", "!", "!"]
# ::lemmas ["Tdap", "vax", "almost", "kill", "i", "and", "i", "'ve", "be", "battle", "skin", "issue", "and", "my", "allergy", "get", "bad", "!", "!", "never", "get", "another", "vax", "again", "!", "!", "!", "!"]
(c15-14 / multi-sentence
        :snt1 (c15-2 / and
                     :op1 (c15-15 / kill-01
                                  :ARG0 (c15-13 / product
                                                :name (c15-11 / name
                                                              :op1 "Tdap"
                                                              :op2 "vax"))
                                  :ARG1 (c15-3 / i)
                                  :mod (c15-16 / almost))
                     :op2 (c15-12 / battle-01
                                  :ARG0 c15-3
                                  :ARG1 (c15-6 / issue-02
                                               :ARG0 (c15-0 / skin)
                                               :ARG1 c15-3))
                     :op3 (c15-4 / worsen-01
                                 :ARG0 c15-13
                                 :ARG1 (c15-1 / allergy
                                              :poss c15-3)))
        :snt2 (c15-10 / get-01
                      :ARG0 (c15-7 / i)
                      :ARG1 (c15-8 / vax
                                   :mod (c15-9 / another))
                      :time (c15-17 / ever)
                      :mod (c15-5 / again)
                      :polarity -))

# ::snt Best Tune I've heard all day
# ::tokens ["Best", "Tune", "I", "'ve", "heard", "all", "day"]
# ::lemmas ["good", "tune", "i", "'ve", "hear", "all", "day"]
(c16-2 / have-degree-91
       :ARG1 (c16-3 / tune)
       :ARG2 (c16-4 / good-02
                    :ARG1 c16-3)
       :ARG3 (c16-7 / most)
       :ARG5 (c16-5 / hear-01
                    :ARG0 (c16-6 / i)
                    :time (c16-0 / day
                                 :mod (c16-1 / all))))

# ::snt Best British tune!!!
# ::tokens ["Best", "British", "tune", "!", "!", "!"]
# ::lemmas ["good", "British", "tune", "!", "!", "!"]
(c19-2 / tune
       :mod (c19-0 / country
                   :name (c19-5 / name
                                :op1 "Great"
                                :op2 "Britain"))
       :ARG1-of (c19-1 / have-degree-91
                       :ARG2 (c19-3 / good-02
                                    :ARG1 c19-2)
                       :ARG3 (c19-4 / most))
       :mode expressive)

# ::snt Lol my dad used to make wine when I was a child, took a few weeks to brew
# ::tokens ["Lol", "my", "dad", "used", "to", "make", "wine", "when", "I", "was", "a", "child", ",", "took", "a", "few", "weeks", "to", "brew"]
# ::lemmas ["Lol", "my", "dad", "use", "to", "make", "wine", "when", "i", "be", "a", "child", ",", "take", "a", "few", "weeks", "to", "brew"]
(c20-1 / and
       :op1 (c20-14 / make-01
                    :ARG0 (c20-13 / person
                                  :ARG0-of (c20-7 / have-rel-role-91
                                                  :ARG1 (c20-3 / i)
                                                  :ARG2 (c20-0 / dad)))
                    :ARG1 (c20-4 / wine)
                    :time (c20-5 / child
                                 :domain c20-3)
                    :time (c20-8 / use-03)
                    :manner (c20-10 / laugh-01
                                    :ARG0 c20-3
                                    :manner (c20-11 / loud)
                                    :mode expressive))
       :op2 (c20-9 / take-10
                   :ARG0 (c20-12 / brew-01
                                 :ARG1 c20-4)
                   :ARG1 (c20-2 / few
                                :op1 (c20-6 / temporal-quantity
                                            :unit (c20-15 / week)
                                            :quant 1))
                   :ARG2 c20-3))

# ::snt &lt;3 &lt;3 &lt;3
# ::tokens ["&", "lt;3", "&", "lt;3", "&", "lt;3"]
# ::lemmas ["&", "lt;3", "&", "lt;3", "&", "lt;3"]
(c21-0 / and
       :op1 3
       :op2 3)

# ::snt Apparently it was knocked up in two days
# ::tokens ["Apparently", "it", "was", "knocked", "up", "in", "two", "days"]
# ::lemmas ["apparently", "it", "be", "knock", "up", "in", "two", "days"]
(c22-5 / knock-up-03
       :ARG1 (c22-4 / it)
       :manner (c22-1 / apparent)
       :time (c22-6 / after
                    :op1 (c22-3 / now)
                    :quant (c22-2 / temporal-quantity
                                  :unit (c22-0 / day)
                                  :quant 2)))

# ::snt Cool
# ::tokens ["Cool"]
# ::lemmas ["cool"]
(c23-0 / cool-04)

# ::snt Me
# ::tokens ["Me"]
# ::lemmas ["i"]
(c25-0 / i)

# ::snt :This is awesome
# ::tokens [":", "This", "is", "awesome"]
# ::lemmas [":", "this", "be", "awesome"]
(c26-0 / awe-01
       :ARG0 (c26-1 / this))

# ::snt Awesome.
# ::tokens ["Awesome", "."]
# ::lemmas ["Awesome", "."]
(c27-0 / awe-01)

# ::snt you'll appreciate this
# ::tokens ["you", "'ll", "appreciate", "this"]
# ::lemmas ["you", "'ll", "appreciate", "this"]
(c28-0 / appreciate-02
       :ARG0 (c28-2 / you)
       :ARG1 (c28-1 / this))

# ::snt Where is this ?
# ::tokens ["Where", "is", "this", "?"]
# ::lemmas ["where", "be", "this", "?"]
(c31-0 / be-located-at-91
       :ARG1 (c31-2 / this)
       :ARG2 (c31-1 / amr-unknown))

# ::snt Not in the UK. It goes down your throat then up your nose!
# ::tokens ["Not", "in", "the", "UK", ".", "It", "goes", "down", "your", "throat", "then", "up", "your", "nose", "!"]
# ::lemmas ["not", "in", "the", "UK", ".", "it", "go", "down", "your", "throat", "then", "up", "your", "nose", "!"]
(c32-8 / multi-sentence
       :snt1 (c32-6 / be-located-at-91
                    :ARG2 (c32-1 / country
                                 :name (c32-9 / name
                                              :op1 "UK"))
                    :polarity -)
       :snt2 (c32-5 / go-01
                    :ARG1 (c32-7 / it)
                    :ARG4 (c32-0 / down-03
                                 :ARG1 c32-7
                                 :path (c32-3 / throat
                                              :part-of (c32-10 / you
                                                               :part (c32-4 / nose))))
                    :direction (c32-2 / up-03
                                      :ARG1 c32-7
                                      :ARG2 c32-4)))

# ::snt % chance youre wrong
# ::tokens ["%", "chance", "you", "re", "wrong"]
# ::lemmas ["%", "chance", "you", "re", "wrong"]
(c35-3 / chance-02
       :ARG1 (c35-0 / wrong-04
                    :ARG1 (c35-2 / you))
       :ARG2 (c35-1 / percentage-entity
                    :value 90))

# ::snt just Like all the dead BLM protesters who died from Covid last year. Useful idiots are a plenty, dont be one too
# ::tokens ["just", "Like", "all", "the", "dead", "BLM", "protesters", "who", "died", "from", "Covid", "last", "year", ".", "Useful", "idiots", "are", "a", "plenty", ",", "do", "nt", "be", "one", "too"]
# ::lemmas ["just", "like", "all", "the", "dead", "BLM", "protester", "who", "die", "from", "Covid", "last", "year", ".", "useful", "idiot", "be", "a", "plenty", ",", "do", "not", "be", "one", "too"]
(c36-7 / multi-sentence
       :snt1 (c36-6 / resemble-01
                    :ARG2 (c36-19 / person
                                  :ARG0-of (c36-16 / protest-01)
                                  :mod (c36-13 / all)
                                  :ARG1-of (c36-0 / die-01
                                                  :location (c36-3 / city
                                                                   :name (c36-8 / name
                                                                                :op1 "Covid"))
                                                  :time (c36-11 / year
                                                                :mod (c36-17 / last)))
                                  :ARG0-of (c36-14 / have-org-role-91
                                                   :ARG1 (c36-4 / organization
                                                                :name (c36-1 / name
                                                                             :op1 "BLM"))))
                    :mod (c36-18 / just))
       :snt2 (c36-9 / plenty
                    :domain (c36-2 / idiot
                                   :ARG1-of (c36-15 / useful-05)))
       :snt3 (c36-10 / idiot
                     :domain (c36-12 / you)
                     :mod (c36-5 / too)
                     :polarity -))

# ::snt HEROS!
# ::tokens ["HEROS", "!"]
# ::lemmas ["HEROS", "!"]
(c37-0 / lucky
       :mode expressive)

# ::snt Love!
# ::tokens ["Love", "!"]
# ::lemmas ["love", "!"]
(c38-0 / love-01)

# ::snt What a bunch of idiots.
# ::tokens ["What", "a", "bunch", "of", "idiots", "."]
# ::lemmas ["what", "a", "bunch", "of", "idiot", "."]
(c41-1 / idiot
       :quant (c41-0 / bunch)
       :degree (c41-2 / so))

# ::snt Man, that handle made me spit out my drink. Props lol
# ::tokens ["Man", ",", "that", "handle", "made", "me", "spit", "out", "my", "drink", ".", "Props", "lol"]
# ::lemmas ["man", ",", "that", "handle", "make", "i", "spit", "out", "my", "drink", ".", "prop", "lol"]
(c42-11 / multi-sentence
        :snt1 (c42-3 / make-02
                     :ARG0 (c42-4 / handle
                                  :mod (c42-7 / that))
                     :ARG1 (c42-0 / spit-01
                                  :ARG0 (c42-10 / i)
                                  :ARG1 (c42-1 / drink
                                               :poss c42-10))
                     :mod (c42-6 / man
                                 :mode expressive))
        :snt2 (c42-8 / post-scriptum
                     :ARG2-of (c42-9 / laugh-01
                                     :ARG0 (c42-5 / i)
                                     :manner (c42-2 / loud))))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c43-0 / laugh-01
       :manner (c43-1 / loud)
       :mode expressive)

# ::snt This video is older than a couple weeks and no mass deaths.
# ::tokens ["This", "video", "is", "older", "than", "a", "couple", "weeks", "and", "no", "mass", "deaths", "."]
# ::lemmas ["this", "video", "be", "old", "than", "a", "couple", "week", "and", "no", "mass", "death", "."]
(c45-6 / have-degree-91
       :ARG1 (c45-7 / video
                    :mod (c45-9 / this))
       :ARG2 (c45-8 / old)
       :ARG3 (c45-10 / more)
       :ARG4 (c45-1 / and
                    :op1 (c45-2 / couple
                                :op1 (c45-4 / temporal-quantity
                                            :unit (c45-3 / week)
                                            :quant 1))
                    :op2 (c45-0 / die-01
                                :mod (c45-5 / mass)
                                :polarity -)))

# ::snt Idiots. Thats where the swab goes!
# ::tokens ["Idiots", ".", "That", "s", "where", "the", "swab", "goes", "!"]
# ::lemmas ["idiot", ".", "that", "s", "where", "the", "swab", "go", "!"]
(c47-4 / multi-sentence
       :snt1 (c47-3 / idiot)
       :snt2 (c47-2 / go-01
                    :ARG1 (c47-0 / swab)
                    :ARG4 (c47-1 / that)))

# ::snt Wow...that's awesome
# ::tokens ["Wow", "...", "that", "'s", "awesome"]
# ::lemmas ["wow", "...", "that", "be", "awesome"]
(c48-0 / awe-01
       :ARG0 (c48-1 / that))

# ::snt I have never heard londoner song anything in public before.
# ::tokens ["I", "have", "never", "heard", "londoner", "song", "anything", "in", "public", "before", "."]
# ::lemmas ["i", "have", "never", "hear", "londoner", "song", "anything", "in", "public", "before", "."]
(c49-3 / hear-01
       :ARG0 (c49-5 / i)
       :ARG1 (c49-0 / song
                    :poss (c49-2 / city
                                 :name (c49-6 / name
                                              :op1 "London")))
       :time (c49-7 / ever)
       :location (c49-1 / anything
                        :ARG1-of (c49-4 / public-02))
       :polarity -)
