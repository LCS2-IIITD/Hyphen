# ::snt fola, fuck off. respectfully
# ::tokens ["fola", ",", "fuck", "off", ".", "respectfully"]
# ::lemmas ["fola", ",", "fuck", "off", ".", "respectfully"]
(c1-0 / say-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-1 / fuck-off-03
                  :ARG0 (c1-3 / person
                              :name (c1-5 / name
                                          :op1 "Fola")
                              :ARG2-of c1-0)
                  :mode imperative)
      :manner (c1-2 / respect-01
                    :ARG0 c1-4
                    :ARG1 c1-3))

# ::snt just go away man.
# ::tokens ["just", "go", "away", "man", "."]
# ::lemmas ["just", "go", "away", "man", "."]
(c2-0 / say-01
      :ARG1 (c2-2 / go-02
                  :ARG0 (c2-4 / man)
                  :ARG4 (c2-1 / away)
                  :mod (c2-3 / just)
                  :mode imperative)
      :ARG2 c2-4)

# ::snt ????
# ::tokens ["?", "?", "?", "?"]
# ::lemmas ["?", "?", "?", "?"]
(c3-0 / amr-empty)

# ::snt what
# ::tokens ["what"]
# ::lemmas ["what"]
(c4-0 / amr-unknown)

# ::snt youbakeeeeee
# ::tokens ["youbakeeeeee"]
# ::lemmas ["youbakeeeeee"]
(c6-0 / youbake-00
      :ARG0 (c6-1 / you)
      :mode imperative)

# ::snt bovvvvv
# ::tokens ["bovvvvv"]
# ::lemmas ["bovvvvv"]
(c7-1 / laugh-01
      :ARG0 (c7-0 / i)
      :manner (c7-2 / loud)
      :mode expressive)

# ::snt Im on it if youre on it
# ::tokens ["I", "m", "on", "it", "if", "you", "re", "on", "it"]
# ::lemmas ["i", "m", "on", "it", "if", "you", "re", "on", "it"]
(c8-0 / have-condition-91
      :ARG1 (c8-2 / be-located-at-91
                  :ARG1 (c8-3 / i)
                  :ARG2 (c8-1 / it)
                  :ARG2-of c8-0)
      :ARG1 (c8-4 / you)
      :ARG2 c8-1)

# ::snt im being so forreal
# ::tokens ["i", "m", "being", "so", "forreal"]
# ::lemmas ["i", "m", "be", "so", "forreal"]
(c9-2 / forreal
      :domain (c9-1 / i)
      :degree (c9-0 / so))

# ::snt we're all tired of this
# ::tokens ["we", "'re", "all", "tired", "of", "this"]
# ::lemmas ["we", "be", "all", "tired", "of", "this"]
(c10-3 / tire-03
       :ARG0 (c10-1 / this)
       :ARG1 (c10-0 / we
                    :mod (c10-2 / all)))

# ::snt .....
# ::tokens ["....."]
# ::lemmas ["....."]
(c11-0 / amr-empty)
