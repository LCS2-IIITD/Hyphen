# ::snt Well done.
# ::tokens ["Well", "done", "."]
# ::lemmas ["well", "do", "."]
(c1-0 / do-02
      :ARG1-of (c1-1 / well-09))

# ::snt Very very pleased.
# ::tokens ["Very", "very", "pleased", "."]
# ::lemmas ["very", "very", "pleased", "."]
(c2-1 / please-01
      :degree (c2-0 / very))

# ::snt Hoorah!
# ::tokens ["Hoorah", "!"]
# ::lemmas ["Hoorah", "!"]
(c3-0 / hoorah
      :mode expressive)

# ::snt I was desperate. Husband now a bit peeved.
# ::tokens ["I", "was", "desperate", ".", "Husband", "now", "a", "bit", "peeved", "."]
# ::lemmas ["i", "be", "desperate", ".", "husband", "now", "a", "bit", "peeved", "."]
(c4-8 / multi-sentence
      :snt1 (c4-0 / despair-01
                  :ARG0 (c4-7 / i))
      :snt2 (c4-4 / pee-03
                  :ARG0 (c4-3 / person
                              :ARG0-of (c4-1 / have-rel-role-91
                                             :ARG1 (c4-2 / i)
                                             :ARG2 (c4-6 / husband)))
                  :degree (c4-5 / bit)
                  :time (c4-9 / now)))

# ::snt Brilliant- lucky you! Ive never looked forward to having a jab so badly.
# ::tokens ["Brilliant-", "lucky", "you", "!", "I", "ve", "never", "looked", "forward", "to", "having", "a", "jab", "so", "badly", "."]
# ::lemmas ["Brilliant-", "lucky", "you", "!", "i", "ve", "never", "look", "forward", "to", "have", "a", "jab", "so", "badly", "."]
(c5-7 / multi-sentence
      :snt1 (c5-4 / brilliant-01
                  :ARG1 (c5-8 / you)
                  :mode expressive)
      :snt2 (c5-2 / lucky
                  :domain c5-8)
      :snt3 (c5-3 / look-forward-03
                  :ARG0 (c5-6 / i)
                  :ARG1 (c5-5 / jab-01
                              :ARG0 c5-6
                              :ARG1-of (c5-1 / bad-05
                                             :degree (c5-0 / so)))
                  :time (c5-9 / ever)
                  :polarity -))

# ::snt Mmmm. Tricky balance for the courts. Glad Im not having to resolve those sorts of challenges.
# ::tokens ["Mmmm", ".", "Tricky", "balance", "for", "the", "courts", ".", "Glad", "I", "m", "not", "having", "to", "resolve", "those", "sorts", "of", "challenges", "."]
# ::lemmas ["Mmmm", ".", "tricky", "balance", "for", "the", "court", ".", "glad", "i", "m", "not", "have", "to", "resolve", "those", "sort", "of", "challenge", "."]
(c6-11 / multi-sentence
       :snt1 (c6-4 / hmm
                   :mode expressive)
       :snt2 (c6-9 / balance-01
                   :ARG0 (c6-2 / court)
                   :ARG1-of (c6-6 / tricky-02))
       :snt3 (c6-8 / glad-02
                   :ARG0 (c6-5 / obligate-01
                               :ARG1 (c6-10 / i)
                               :ARG2 (c6-7 / resolve-01
                                           :ARG0 c6-10
                                           :ARG1 (c6-0 / challenge-01
                                                       :mod (c6-1 / sort
                                                                  :mod (c6-3 / that))))
                               :polarity -)
                   :ARG1 c6-10))

# ::snt Oh god, yes. That sounds gruelling.
# ::tokens ["Oh", "god", ",", "yes", ".", "That", "sounds", "gruelling", "."]
# ::lemmas ["oh", "god", ",", "yes", ".", "that", "sound", "gruelle", "."]
(c7-4 / multi-sentence
      :snt1 (c7-5 / yes
                  :mod (c7-1 / oh
                             :mode expressive))
      :snt2 (c7-0 / sound-01
                  :ARG1 (c7-2 / that)
                  :ARG2 (c7-3 / gruelling)))

# ::snt And hes kept working all all the way through, face to face. Court system not partic covid-safe. So I understand why peeved.
# ::tokens ["And", "he", "s", "kept", "working", "all", "all", "the", "way", "through", ",", "face", "to", "face", ".", "Court", "system", "not", "partic", "covid", "-", "safe", ".", "So", "I", "understand", "why", "peeved", "."]
# ::lemmas ["and", "he", "s", "keep", "work", "all", "all", "the", "way", "through", ",", "face", "to", "face", ".", "court", "system", "not", "partic", "covid", "-", "safe", ".", "so", "i", "understand", "why", "peeve", "."]
(c9-13 / multi-sentence
       :snt1 (c9-2 / and
                   :op2 (c9-14 / keep-02
                               :ARG0 (c9-7 / he)
                               :ARG1 (c9-5 / work-01
                                           :ARG0 c9-7
                                           :duration (c9-15 / all-the-way)
                                           :manner (c9-3 / face-to-face))))
       :snt2 (c9-0 / safe-01
                   :ARG1 (c9-11 / system
                                :mod (c9-4 / court))
                   :mod (c9-12 / proper)
                   :polarity -)
       :snt3 (c9-8 / understand-01
                   :ARG0 (c9-6 / i)
                   :ARG1 (c9-10 / thing
                                :ARG0-of (c9-1 / cause-01
                                               :ARG1 (c9-9 / peeve-01
                                                           :ARG1 c9-6)))))

# ::snt Yes! Sod off, South African variant, Im covered. Tim a bit miffed, however. And hes not stopped working, face to face stuff, all the way through. Courts not partic covid-safe.
# ::tokens ["Yes", "!", "Sod", "off", ",", "South", "African", "variant", ",", "I", "m", "covered", ".", "Tim", "a", "bit", "miffed", ",", "however", ".", "And", "he", "s", "not", "stopped", "working", ",", "face", "to", "face", "stuff", ",", "all", "the", "way", "through", ".", "Courts", "not", "partic", "covid", "-", "safe", "."]
# ::lemmas ["yes", "!", "sod", "off", ",", "South", "African", "variant", ",", "i", "m", "cover", ".", "Tim", "a", "bit", "miffed", ",", "however", ".", "and", "he", "s", "not", "stop", "work", ",", "face", "to", "face", "stuff", ",", "all", "the", "way", "through", ".", "court", "not", "partic", "covid", "-", "safe", "."]
(c10-9 / multi-sentence
       :snt1 (c10-4 / cover-03
                    :ARG0 (c10-3 / i)
                    :mod (c10-14 / yes)
                    :mod (c10-7 / off)
                    :mod (c10-0 / country
                                :name (c10-10 / name
                                              :op1 "South"
                                              :op2 "Africa")))
       :snt2 (c10-6 / contrast-01
                    :ARG2 (c10-17 / miff-01
                                  :ARG1 (c10-22 / person
                                                :name (c10-2 / name
                                                             :op1 "Tim"))
                                  :degree (c10-20 / bit)))
       :snt3 (c10-15 / and
                     :op2 (c10-11 / and
                                  :op1 (c10-12 / stop-01
                                               :ARG0 (c10-18 / he)
                                               :ARG1 (c10-5 / work-01
                                                            :ARG0 c10-18
                                                            :manner (c10-16 / face-to-face))
                                               :time (c10-8 / through
                                                            :extent (c10-1 / all-the-way))
                                               :polarity -))
                     :snt4 (c10-21 / safe-01
                                   :ARG1 (c10-13 / court)
                                   :mod (c10-19 / particular)
                                   :polarity -)))

# ::snt Yes. I was going to keep on moaning till the date that bloody vacc calculator gave me, start of bloody April.
# ::tokens ["Yes", ".", "I", "was", "going", "to", "keep", "on", "moaning", "till", "the", "date", "that", "bloody", "vacc", "calculator", "gave", "me", ",", "start", "of", "bloody", "April", "."]
# ::lemmas ["yes", ".", "i", "be", "go", "to", "keep", "on", "moaning", "till", "the", "date", "that", "bloody", "vacc", "calculator", "give", "i", ",", "start", "of", "bloody", "April", "."]
(c11-11 / keep-on-08
        :ARG1 (c11-10 / moan-01
                      :ARG0 (c11-9 / i))
        :time (c11-6 / until
                     :op1 (c11-0 / date
                                 :ARG1-of (c11-8 / give-01
                                                 :ARG0 (c11-3 / calculator
                                                              :topic (c11-7 / vaccinate-01)
                                                              :mod (c11-5 / bloody))
                                                 :ARG2 c11-9)
                                 :ARG0-of (c11-1 / start-01
                                                 :ARG1 (c11-4 / date-entity
                                                              :mod (c11-2 / bloody)
                                                              :month 4)))))

# ::snt Pfizer looking like a goodun too.
# ::tokens ["Pfizer", "looking", "like", "a", "goodun", "too", "."]
# ::lemmas ["pfizer", "look", "like", "a", "goodun", "too", "."]
(c12-2 / look-02
       :ARG0 (c12-0 / company
                    :name (c12-4 / name
                                 :op1 "Pfizer"))
       :ARG1 (c12-3 / goodun)
       :mod (c12-1 / too))

# ::snt Well now, what a relief for all of us.
# ::tokens ["Well", "now", ",", "what", "a", "relief", "for", "all", "of", "us", "."]
# ::lemmas ["well", "now", ",", "what", "a", "relief", "for", "all", "of", "we", "."]
(c13-3 / relieve-01
       :ARG2 (c13-2 / we
                    :mod (c13-1 / all))
       :time (c13-4 / now
                    :mod (c13-5 / well))
       :degree (c13-0 / so))

# ::snt Oh poor bugger.
# ::tokens ["Oh", "poor", "bugger", "."]
# ::lemmas ["oh", "poor", "bugger", "."]
(c14-0 / bugger
       :mod (c14-1 / poor)
       :mod (c14-2 / oh
                   :mode expressive))

# ::snt Was v jealous of my son and sister, both vulnerable, both vaccd a couple of weeks ago. Husband now furious, obvs.
# ::tokens ["Was", "v", "jealous", "of", "my", "son", "and", "sister", ",", "both", "vulnerable", ",", "both", "vaccd", "a", "couple", "of", "weeks", "ago", ".", "Husband", "now", "furious", ",", "obvs", "."]
# ::lemmas ["be", "v", "jealous", "of", "my", "son", "and", "sister", ",", "both", "vulnerable", ",", "both", "vaccd", "a", "couple", "of", "weeks", "ago", ".", "husband", "now", "furious", ",", "obvs", "."]
(c15-10 / multi-sentence
        :snt1 (c15-20 / jealous-02
                      :ARG0 (c15-2 / i)
                      :ARG1 (c15-15 / and
                                    :op1 (c15-23 / person
                                                 :ARG0-of (c15-18 / have-rel-role-91
                                                                  :ARG1 c15-2
                                                                  :ARG2 (c15-12 / son)))
                                    :op2 (c15-19 / person
                                                 :ARG0-of (c15-1 / have-rel-role-91
                                                                 :ARG1 c15-2
                                                                 :ARG2 (c15-22 / sister)))
                                    :mod (c15-21 / both)
                                    :ARG1-of (c15-6 / vulnerable-01)
                                    :ARG1-of (c15-16 / vaccinate-01
                                                     :time (c15-14 / before
                                                                   :op1 (c15-11 / now)
                                                                   :quant (c15-4 / couple
                                                                                 :op1 (c15-9 / temporal-quantity
                                                                                             :unit (c15-5 / week)
                                                                                             :quant 1))))))
        :snt2 (c15-17 / furious-02
                      :ARG1 (c15-13 / person
                                    :ARG0-of (c15-3 / have-rel-role-91
                                                    :ARG1 c15-2)
                                    :ARG2 (c15-7 / husband)))
        :time (c15-0 / now)
        :mod (c15-8 / obvs))

# ::snt Ha ha good!
# ::tokens ["Ha", "ha", "good", "!"]
# ::lemmas ["ha", "ha", "good", "!"]
(c16-0 / good-02
       :mod (c16-1 / ha
                   :mode expressive))

# ::snt Absolutely, they should. So jealous. Hope mines not too long. x
# ::tokens ["Absolutely", ",", "they", "should", ".", "So", "jealous", ".", "Hope", "mines", "not", "too", "long", ".", "x"]
# ::lemmas ["absolutely", ",", "they", "should", ".", "so", "jealous", ".", "hope", "mine", "not", "too", "long", ".", "x"]
(c17-10 / multi-sentence
        :snt1 (c17-7 / recommend-01
                     :ARG2 (c17-6 / they)
                     :mod (c17-1 / absolute))
        :snt2 (c17-9 / jealous-02
                     :degree (c17-0 / so))
        :snt3 (c17-4 / hope-01
                     :ARG1 (c17-2 / mine
                                  :ARG1-of (c17-5 / have-degree-91
                                                  :ARG2 (c17-8 / long-03
                                                               :ARG1 c17-2)
                                                  :ARG3 (c17-3 / too)
                                                  :polarity -))))

# ::snt I am trippingly happy.
# ::tokens ["I", "am", "trippingly", "happy", "."]
# ::lemmas ["i", "be", "trippingly", "happy", "."]
(c18-1 / happy-01
       :ARG1 (c18-0 / i)
       :mod (c18-2 / tripping))

# ::snt Exactly what Paul Nurse said clinics should be doing.
# ::tokens ["Exactly", "what", "Paul", "Nurse", "said", "clinics", "should", "be", "doing", "."]
# ::lemmas ["exactly", "what", "Paul", "Nurse", "say", "clinic", "should", "be", "do", "."]
(c19-3 / thing
       :ARG1-of (c19-0 / do-02
                       :ARG0 (c19-2 / clinic)
                       :ARG1-of (c19-4 / recommend-01
                                       :ARG0 (c19-5 / person
                                                    :name (c19-6 / name
                                                                 :op1 "Paul"
                                                                 :op2 "Nurse")))
                       :ARG1-of (c19-1 / say-01
                                       :ARG0 c19-5))
       :mod (c19-7 / exact))

# ::snt Snuck in via a reserve list to use up a dose that hadnt been given before it reached its use-by date.
# ::tokens ["Snuck", "in", "via", "a", "reserve", "list", "to", "use", "up", "a", "dose", "that", "had", "nt", "been", "given", "before", "it", "reached", "its", "use", "-", "by", "date", "."]
# ::lemmas ["snuck", "in", "via", "a", "reserve", "list", "to", "use", "up", "a", "dose", "that", "have", "not", "be", "give", "before", "it", "reach", "its", "use", "-", "by", "date", "."]
(c20-0 / sneak-01
       :ARG0 (c20-10 / you)
       :destination (c20-6 / list
                           :ARG2-of (c20-5 / reserve-01))
       :purpose (c20-3 / use-up-04
                       :ARG0 c20-10
                       :ARG1 (c20-1 / dose-01
                                    :ARG1-of (c20-7 / give-01
                                                    :time (c20-9 / before
                                                                 :op1 (c20-4 / reach-01
                                                                             :ARG0 (c20-8 / it)
                                                                             :ARG1 (c20-2 / use-by-date)))
                                                    :polarity -))))

# ::snt That is beautiful x
# ::tokens ["That", "is", "beautiful", "x"]
# ::lemmas ["that", "be", "beautiful", "x"]
(c21-0 / beautiful-02
       :ARG1 (c21-1 / that))
