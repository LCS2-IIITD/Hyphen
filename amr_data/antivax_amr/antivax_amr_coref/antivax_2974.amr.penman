# ::snt SJEHAJJWHD
# ::tokens ["SJEHAJJWHD"]
# ::lemmas ["SJEHAJJWHD"]
(c2-0 / person
      :name (c2-1 / name
                  :op1 "SJEHAJJWHD"))

# ::snt IM RIGHT
# ::tokens ["IM", "RIGHT"]
# ::lemmas ["IM", "right"]
(c3-1 / right-06
      :ARG1 (c3-0 / i))

# ::snt EXACTLY THANK YOU
# ::tokens ["EXACTLY", "THANK", "YOU"]
# ::lemmas ["exactly", "thank", "you"]
(c4-0 / thank-01
      :ARG1 (c4-1 / you)
      :mod (c4-2 / exact))

# ::snt my school was weird lol
# ::tokens ["my", "school", "was", "weird", "lol"]
# ::lemmas ["my", "school", "be", "weird", "lol"]
(c5-1 / weird
      :domain (c5-0 / school
                    :poss (c5-4 / i))
      :ARG2-of (c5-2 / laugh-01
                     :ARG0 c5-4
                     :manner (c5-3 / loud)))

# ::snt youre so wrong
# ::tokens ["you", "re", "so", "wrong"]
# ::lemmas ["you", "re", "so", "wrong"]
(c6-0 / wrong-04
      :ARG1 (c6-1 / you)
      :degree (c6-2 / so))

# ::snt math is red ,,,,
# ::tokens ["math", "is", "red", ",", ",", ",", ","]
# ::lemmas ["math", "be", "red", ",", ",", ",", ","]
(c7-1 / red-02
      :ARG1 (c7-0 / mathematics))

# ::snt NO.
# ::tokens ["NO", "."]
# ::lemmas ["no", "."]
(c8-0 / no)

# ::snt ... i dont even know what to say to that
# ::tokens ["...", "i", "do", "nt", "even", "know", "what", "to", "say", "to", "that"]
# ::lemmas ["...", "i", "do", "not", "even", "know", "what", "to", "say", "to", "that"]
(c9-4 / know-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-2 / thing
                  :ARG1-of (c9-0 / say-01
                                 :ARG0 c9-3
                                 :ARG3 (c9-1 / that)))
      :mod (c9-5 / even)
      :polarity -)

# ::snt MATH IS BLUE
# ::tokens ["MATH", "IS", "BLUE"]
# ::lemmas ["MATH", "be", "blue"]
(c10-0 / blUE-01
       :ARG1 (c10-1 / person
                    :name (c10-2 / name
                                 :op1 "MATH")))

# ::snt math was white for me
# ::tokens ["math", "was", "white", "for", "me"]
# ::lemmas ["math", "be", "white", "for", "i"]
(c11-0 / white-02
       :ARG1 (c11-2 / mathematics)
       :beneficiary (c11-1 / i))

# ::snt IT IS RED THANK YOU!! were so smart
# ::tokens ["IT", "IS", "RED", "THANK", "YOU", "!", "!", "were", "so", "smart"]
# ::lemmas ["it", "be", "RED", "thank", "you", "!", "!", "be", "so", "smart"]
(c12-6 / multi-sentence
       :snt1 (c12-3 / red-02
                    :ARG1 (c12-5 / it))
       :snt2 (c12-2 / thank-01
                    :ARG0 (c12-1 / i)
                    :ARG1 (c12-7 / you))
       :snt3 (c12-0 / smart-06
                    :ARG1 c12-7
                    :degree (c12-4 / so)))

# ::snt YUP SO TRUE math is red
# ::tokens ["YUP", "SO", "TRUE", "math", "is", "red"]
# ::lemmas ["yup", "so", "true", "math", "be", "red"]
(c13-2 / red-02
       :ARG1 (c13-3 / mathematics)
       :ARG1-of (c13-1 / true-01
                       :degree (c13-0 / so))
       :mod (c13-4 / yup
                   :mode expressive))
