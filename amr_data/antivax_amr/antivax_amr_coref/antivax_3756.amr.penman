# ::snt How it feels to chew gum
# ::tokens ["How", "it", "feels", "to", "chew", "gum"]
# ::lemmas ["how", "it", "feel", "to", "chew", "gum"]
(c1-1 / thing
      :ARG2-of (c1-2 / feel-05
                     :ARG1 (c1-3 / chew-01
                                 :ARG1 (c1-0 / gum))))

# ::snt then its sketchy why u gotta have that much mint
# ::tokens ["then", "its", "sketchy", "why", "u", "got", "ta", "have", "that", "much", "mint"]
# ::lemmas ["then", "its", "sketchy", "why", "u", "got", "to", "have", "that", "much", "mint"]
(c2-0 / sketchy
      :domain (c2-7 / thing
                    :ARG0-of (c2-1 / cause-01
                                   :ARG1 (c2-6 / obligate-01
                                               :ARG1 (c2-5 / have-03
                                                           :ARG0 (c2-9 / you)
                                                           :ARG1 (c2-8 / mint
                                                                       :quant (c2-2 / much
                                                                                    :degree (c2-3 / that)))))))
      :time (c2-4 / then))

# ::snt There's an innuendo here I swear
# ::tokens ["There", "'s", "an", "innuendo", "here", "I", "swear"]
# ::lemmas ["there", "be", "an", "innuendo", "here", "i", "swear"]
(c4-0 / swear-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-2 / innuendo
                  :location (c4-3 / here)))

# ::snt What if it's minty tho
# ::tokens ["What", "if", "it", "'s", "minty", "tho"]
# ::lemmas ["what", "if", "it", "be", "minty", "tho"]
(c5-2 / have-concession-91
      :ARG1 (c5-0 / minty
                  :domain (c5-1 / it))
      :ARG2 (c5-3 / amr-unknown))
