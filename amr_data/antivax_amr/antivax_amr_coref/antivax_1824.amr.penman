# ::snt Absolutely. Thank you
# ::tokens ["Absolutely", ".", "Thank", "you"]
# ::lemmas ["absolutely", ".", "thank", "you"]
(c1-1 / multi-sentence
      :snt1 (c1-0 / absolute)
      :snt2 (c1-2 / thank-01
                  :ARG1 (c1-3 / you)))

# ::snt I hope both of your shots go as well as mine. Nothing a nap and some Advil couldn't fix. People had me worried, but it was all for nothing. I want the same for you
# ::tokens ["I", "hope", "both", "of", "your", "shots", "go", "as", "well", "as", "mine", ".", "Nothing", "a", "nap", "and", "some", "Advil", "could", "n't", "fix", ".", "People", "had", "me", "worried", ",", "but", "it", "was", "all", "for", "nothing", ".", "I", "want", "the", "same", "for", "you"]
# ::lemmas ["i", "hope", "both", "of", "your", "shot", "go", "as", "well", "as", "mine", ".", "nothing", "a", "nap", "and", "some", "Advil", "could", "not", "fix", ".", "people", "have", "i", "worried", ",", "but", "it", "be", "all", "for", "nothing", ".", "i", "want", "the", "same", "for", "you"]
(c2-11 / multi-sentence
       :snt1 (c2-25 / hope-01
                    :ARG0 (c2-3 / i)
                    :ARG1 (c2-10 / go-09
                                 :ARG1 (c2-15 / shot
                                              :mod (c2-28 / both)
                                              :poss (c2-21 / you))
                                 :ARG1-of (c2-9 / well-09
                                                :ARG2-of (c2-2 / have-degree-91
                                                               :ARG1 (c2-29 / shoot
                                                                            :ARG3 (c2-14 / equal)
                                                                            :ARG4 (c2-18 / shoot
                                                                                         :mod (c2-17 / i))))))
                    :snt2 (c2-23 / and
                                 :op1 (c2-12 / nothing
                                             :time (c2-1 / nap-01))
                                 :op2 (c2-30 / possible-01
                                             :ARG1 (c2-24 / fix-02
                                                          :ARG0 (c2-13 / and
                                                                       :op1 c2-3
                                                                       :op2 (c2-27 / product
                                                                                   :name (c2-20 / name
                                                                                                :op1 "Advil")
                                                                                   :quant (c2-4 / some)))
                                                          :ARG1 (c2-7 / nothing))
                                             :polarity -))
                    :snt3 (c2-8 / contrast-01
                                :ARG1 (c2-16 / worry-01
                                             :ARG0 (c2-19 / it
                                                          :mod (c2-0 / all))
                                             :ARG1 (c2-26 / i))
                                :ARG2 (c2-5 / want-01
                                            :ARG0 c2-26
                                            :ARG1 (c2-6 / same-01
                                                        :ARG1 c2-19
                                                        :ARG2 (c2-22 / you))))))

# ::snt Congrats!
# ::tokens ["Congrats", "!"]
# ::lemmas ["Congrats", "!"]
(c3-0 / congratulate-01
      :mode expressive)

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c4-1 / thank-01
      :ARG0 (c4-0 / i)
      :ARG1 (c4-2 / you))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c5-1 / thank-01
      :ARG0 (c5-0 / i)
      :ARG1 (c5-2 / you))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c7-1 / thank-01
      :ARG0 (c7-0 / i)
      :ARG1 (c7-2 / you))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c8-1 / thank-01
      :ARG0 (c8-0 / i)
      :ARG1 (c8-2 / you))

# ::snt Amen.
# ::tokens ["Amen", "."]
# ::lemmas ["amen", "."]
(c9-0 / man)

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c10-0 / yes)

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c11-1 / thank-01
       :ARG0 (c11-0 / i)
       :ARG1 (c11-2 / you))

# ::snt Took a nap. I live alone
# ::tokens ["Took", "a", "nap", ".", "I", "live", "alone"]
# ::lemmas ["take", "a", "nap", ".", "i", "live", "alone"]
(c12-3 / multi-sentence
       :snt1 (c12-4 / nap-01
                    :ARG0 (c12-5 / you)
                    :mode imperative)
       :snt2 (c12-1 / live-01
                    :ARG0 (c12-2 / i)
                    :manner (c12-0 / alone
                                   :domain c12-2)))

# ::snt Indeed
# ::tokens ["Indeed"]
# ::lemmas ["indeed"]
(c13-0 / indeed)

# ::snt Nice
# ::tokens ["Nice"]
# ::lemmas ["nice"]
(c14-0 / nice-01)

# ::snt Moderna
# ::tokens ["Moderna"]
# ::lemmas ["Moderna"]
(c15-0 / person
       :name (c15-1 / name
                    :op1 "Moderna"))

# ::snt Yep
# ::tokens ["Yep"]
# ::lemmas ["yep"]
(c16-0 / yep)

# ::snt I did. Thanks
# ::tokens ["I", "did", ".", "Thanks"]
# ::lemmas ["i", "do", ".", "thank"]
(c17-4 / multi-sentence
       :snt1 (c17-0 / do-02
                    :ARG0 (c17-3 / i))
       :snt2 (c17-2 / thank-01
                    :ARG0 (c17-1 / i)))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c18-1 / thank-01
       :ARG0 (c18-0 / i)
       :ARG1 (c18-2 / you))

# ::snt Yes! Thank you
# ::tokens ["Yes", "!", "Thank", "you"]
# ::lemmas ["yes", "!", "thank", "you"]
(c19-1 / thank-01
       :ARG0 (c19-0 / i)
       :ARG1 (c19-2 / you)
       :mode expressive)

# ::snt This is awesome!! So great to hear.
# ::tokens ["This", "is", "awesome", "!", "!", "So", "great", "to", "hear", "."]
# ::lemmas ["this", "be", "awesome", "!", "!", "so", "great", "to", "hear", "."]
(c20-5 / multi-sentence
       :snt1 (c20-1 / awesome-02
                    :ARG0 (c20-3 / this)
                    :mode expressive)
       :snt2 (c20-4 / great
                    :degree (c20-0 / so)
                    :domain (c20-2 / hear-01)))

# ::snt House of Moderna FTW!
# ::tokens ["House", "of", "Moderna", "FTW", "!"]
# ::lemmas ["House", "of", "Moderna", "FTW", "!"]
(c21-3 / free-03
       :ARG1 (c21-1 / house
                    :name (c21-2 / name
                                 :op1 "House"
                                 :op2 "of"
                                 :op3 "Moderna"))
       :ARG3 (c21-0 / wage)
       :mode expressive)

# ::snt Yeahhhh!
# ::tokens ["Yeahhhh", "!"]
# ::lemmas ["Yeahhhh", "!"]
(c22-0 / yeah
       :mode expressive)

# ::snt Couldn't be happier for you. Glad you for your shot.
# ::tokens ["Could", "n't", "be", "happier", "for", "you", ".", "Glad", "you", "for", "your", "shot", "."]
# ::lemmas ["could", "not", "be", "happy", "for", "you", ".", "glad", "you", "for", "your", "shot", "."]
(c23-6 / multi-sentence
       :snt1 (c23-5 / possible-01
                    :ARG1 (c23-2 / happy-01
                                 :ARG0 (c23-1 / i)
                                 :ARG1 (c23-7 / you))
                    :polarity -)
       :snt2 (c23-4 / glad-02
                    :ARG0 (c23-3 / i)
                    :ARG1 (c23-8 / you)
                    :topic (c23-0 / shoot-02
                                  :ARG0 c23-8)))

# ::snt Yay!!!
# ::tokens ["Yay", "!", "!", "!"]
# ::lemmas ["Yay", "!", "!", "!"]
(c24-0 / yay
       :mode expressive)

# ::snt Welcome to the house.
# ::tokens ["Welcome", "to", "the", "house", "."]
# ::lemmas ["welcome", "to", "the", "house", "."]
(c25-0 / welcome-01
       :ARG2 (c25-1 / house))

# ::snt Welcome to the Moderna Mafia. I get my nd dose on Tuesday.
# ::tokens ["Welcome", "to", "the", "Moderna", "Mafia", ".", "I", "get", "my", "nd", "dose", "on", "Tuesday", "."]
# ::lemmas ["welcome", "to", "the", "Moderna", "Mafia", ".", "i", "get", "my", "nd", "dose", "on", "Tuesday", "."]
(c27-8 / multi-sentence
       :snt1 (c27-2 / welcome-01
                    :ARG1 (c27-10 / you)
                    :ARG2 (c27-1 / criminal-organization
                                 :name (c27-9 / name
                                              :op1 "Moderna"
                                              :op2 "Mafia")))
       :snt2 (c27-6 / get-01
                    :ARG0 (c27-7 / i)
                    :ARG1 (c27-0 / dose
                                 :mod (c27-5 / nucleus)
                                 :poss c27-7)
                    :time (c27-3 / date-entity
                                 :weekday (c27-4 / tuesday))))

# ::snt Hope any side-effects are mild and brief!
# ::tokens ["Hope", "any", "side", "-", "effects", "are", "mild", "and", "brief", "!"]
# ::lemmas ["hope", "any", "side", "-", "effect", "be", "mild", "and", "brief", "!"]
(c28-2 / hope-01
       :ARG1 (c28-1 / and
                    :op1 (c28-4 / mild)
                    :op2 (c28-3 / brief)
                    :domain (c28-6 / effect-03
                                   :mod (c28-0 / side)
                                   :mod (c28-5 / any)))
       :mode expressive)

# ::snt Awesome!!
# ::tokens ["Awesome", "!", "!"]
# ::lemmas ["Awesome", "!", "!"]
(c29-0 / awe-01
       :mode expressive)

# ::snt Congratulations!!!! Pfizer Club in the house.
# ::tokens ["Congratulations", "!", "!", "!", "!", "Pfizer", "Club", "in", "the", "house", "."]
# ::lemmas ["congratulation", "!", "!", "!", "!", "Pfizer", "Club", "in", "the", "house", "."]
(c30-1 / congratulate-01
       :ARG1 (c30-0 / club
                    :mod (c30-3 / company
                                :name (c30-4 / name
                                             :op1 "Pfizer"
                                             :op2 "Club"))
                    :location (c30-2 / house))
       :mode expressive)

# ::snt Welcome to House Moderna!
# ::tokens ["Welcome", "to", "House", "Moderna", "!"]
# ::lemmas ["welcome", "to", "House", "Moderna", "!"]
(c31-0 / welcome-01
       :ARG1 (c31-3 / you)
       :ARG2 (c31-1 / house
                    :name (c31-2 / name
                                 :op1 "House"
                                 :op2 "Moderna")))

# ::snt First step done!
# ::tokens ["First", "step", "done", "!"]
# ::lemmas ["First", "step", "do", "!"]
(c32-0 / do-02
       :ARG1 (c32-2 / step-01
                    :ord (c32-1 / ordinal-entity
                                :value 1)))

# ::snt Okay. Folks are stressing me out with my sore arm
# ::tokens ["Okay", ".", "Folks", "are", "stressing", "me", "out", "with", "my", "sore", "arm"]
# ::lemmas ["okay", ".", "folk", "be", "stress", "i", "out", "with", "my", "sore", "arm"]
(c33-6 / multi-sentence
       :snt1 (c33-3 / okay-04)
       :snt2 (c33-0 / stress-out-03
                    :ARG0 (c33-2 / folk)
                    :ARG1 (c33-5 / i
                                 :part (c33-1 / arm
                                              :mod (c33-4 / sore)
                                              :instrument-of c33-0))))

# ::snt Woohoo!!!!! Congratulations!!!
# ::tokens ["Woohoo", "!", "!", "!", "!", "!", "Congratulations", "!", "!", "!"]
# ::lemmas ["Woohoo", "!", "!", "!", "!", "!", "congratulation", "!", "!", "!"]
(c34-1 / multi-sentence
       :snt1 (c34-0 / whohoo
                    :mode expressive)
       :snt2 (c34-2 / congratulate-01
                    :mode expressive))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c35-0 / congratulate-01
       :mode expressive)

# ::snt One down and one to go. Yes!!
# ::tokens ["One", "down", "and", "one", "to", "go", ".", "Yes", "!", "!"]
# ::lemmas ["One", "down", "and", "one", "to", "go", ".", "yes", "!", "!"]
(c36-5 / multi-sentence
       :snt1 (c36-1 / and
                    :op1 (c36-0 / down-03
                                :ARG1 (c36-3 / one))
                    :op2 (c36-4 / go-01
                                :ARG1 (c36-2 / one)))
       :snt2 (c36-6 / yes
                    :mode expressive))

# ::snt Congratulations. It's such a satisfying feeling when they hand you that card, isn't it? An even better feeling when they fill in the second line. But still be careful out there!
# ::tokens ["Congratulations", ".", "It", "'s", "such", "a", "satisfying", "feeling", "when", "they", "hand", "you", "that", "card", ",", "is", "n't", "it", "?", "An", "even", "better", "feeling", "when", "they", "fill", "in", "the", "second", "line", ".", "But", "still", "be", "careful", "out", "there", "!"]
# ::lemmas ["congratulation", ".", "it", "be", "such", "a", "satisfying", "feeling", "when", "they", "hand", "you", "that", "card", ",", "be", "not", "it", "?", "an", "even", "well", "feeling", "when", "they", "fill", "in", "the", "second", "line", ".", "but", "still", "be", "careful", "out", "there", "!"]
(c37-9 / multi-sentence
       :snt1 (c37-2 / congratulate-01)
       :snt2 (c37-17 / feel-01
                     :ARG1 (c37-12 / satisfy-01)
                     :time (c37-19 / hand-01
                                   :ARG0 (c37-6 / they)
                                   :ARG1 (c37-0 / card
                                                :mod (c37-3 / that))
                                   :ARG2 (c37-16 / you))
                     :ARG1-of (c37-7 / request-confirmation-91))
       :snt3 (c37-1 / have-degree-91
                    :ARG1 (c37-13 / feel-01
                                  :time (c37-14 / fill-in-05
                                                :ARG0 (c37-10 / they)
                                                :ARG1 (c37-21 / line
                                                              :ord (c37-5 / ordinal-entity
                                                                          :value 2))))
                    :ARG2 (c37-8 / good-02
                                 :ARG1 c37-13)
                    :ARG3 (c37-18 / more
                                  :mod (c37-11 / even)))
       :snt4 (c37-4 / contrast-01
                    :ARG2 (c37-15 / care-04
                                  :ARG0 c37-16
                                  :location (c37-20 / out-there)
                                  :mod (c37-22 / still)
                                  :mode imperative)))

# ::snt Moderna in the House! Congrats
# ::tokens ["Moderna", "in", "the", "House", "!", "Congrats"]
# ::lemmas ["Moderna", "in", "the", "House", "!", "Congrats"]
(c38-3 / multi-sentence
       :snt1 (c38-2 / person
                    :name (c38-4 / name
                                 :op1 "Moderna")
                    :location (c38-1 / house)
                    :mode expressive)
       :snt2 (c38-0 / congratulate-01))
