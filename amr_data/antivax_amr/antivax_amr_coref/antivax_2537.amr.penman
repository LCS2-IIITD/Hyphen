# ::snt Mine is through work
# ::tokens ["Mine", "is", "through", "work"]
# ::lemmas ["mine", "be", "through", "work"]
(c1-0 / be-temporally-at-91
      :ARG1 (c1-3 / event
                  :mod (c1-2 / i))
      :ARG2 (c1-1 / work-01))

# ::snt Thats great news
# ::tokens ["That", "s", "great", "news"]
# ::lemmas ["that", "s", "great", "news"]
(c2-1 / news
      :mod (c2-0 / great)
      :domain (c2-2 / that))

# ::snt You take it Kate. Your just as important cooking for the OAPs. Grab it with both hands and dont feel guilty
# ::tokens ["You", "take", "it", "Kate", ".", "Your", "just", "as", "important", "cooking", "for", "the", "OAPs", ".", "Grab", "it", "with", "both", "hands", "and", "do", "nt", "feel", "guilty"]
# ::lemmas ["you", "take", "it", "Kate", ".", "your", "just", "as", "important", "cooking", "for", "the", "oap", ".", "grab", "it", "with", "both", "hand", "and", "do", "not", "feel", "guilty"]
(c3-6 / multi-sentence
      :snt1 (c3-9 / say-01
                  :ARG0 (c3-2 / i)
                  :ARG1 (c3-4 / take-01
                              :ARG0 (c3-22 / person
                                           :name (c3-7 / name
                                                       :op1 "Kate"))
                              :ARG1 (c3-10 / it))
                  :ARG2 c3-22)
      :snt2 (c3-3 / cook-01
                  :ARG0 (c3-12 / you)
                  :ARG3 (c3-19 / product
                               :name (c3-0 / name
                                           :op1 "OAP"))
                  :ARG1-of (c3-11 / important-01
                                  :ARG2-of (c3-17 / have-degree-91
                                                  :ARG1 c3-3
                                                  :ARG3 (c3-8 / equal
                                                              :mod (c3-21 / just)))))
      :snt3 (c3-15 / and
                   :op1 (c3-5 / grab-01
                              :ARG0 (c3-13 / you)
                              :ARG1 (c3-18 / it)
                              :manner (c3-1 / hand
                                            :mod (c3-20 / both)))
                   :op2 (c3-16 / feel-01
                               :ARG0 c3-13
                               :ARG1 (c3-14 / guilty-01
                                            :ARG1 c3-13)
                               :polarity -)))

# ::snt Don't feel guilty!
# ::tokens ["Do", "n't", "feel", "guilty", "!"]
# ::lemmas ["do", "not", "feel", "guilty", "!"]
(c4-2 / feel-01
      :ARG0 (c4-1 / you)
      :ARG1 (c4-0 / guilty-01
                  :ARG1 c4-1)
      :polarity -
      :mode imperative)

# ::snt Thank you! Hope you will get yours soon
# ::tokens ["Thank", "you", "!", "Hope", "you", "will", "get", "yours", "soon"]
# ::lemmas ["thank", "you", "!", "hope", "you", "will", "get", "yours", "soon"]
(c5-7 / multi-sentence
      :snt1 (c5-4 / thank-01
                  :ARG0 (c5-6 / i)
                  :ARG1 (c5-8 / you))
      :snt2 (c5-2 / hope-01
                  :ARG0 (c5-3 / i)
                  :ARG1 (c5-5 / get-01
                              :ARG0 (c5-9 / you)
                              :ARG1 (c5-1 / thing
                                          :poss c5-9)
                              :time (c5-0 / soon))))

# ::snt Yeah I bet happy for you Kate
# ::tokens ["Yeah", "I", "bet", "happy", "for", "you", "Kate"]
# ::lemmas ["yeah", "i", "bet", "happy", "for", "you", "Kate"]
(c6-0 / say-01
      :ARG0 (c6-4 / i)
      :ARG1 (c6-3 / bet-01
                  :ARG0 c6-4
                  :ARG2 (c6-1 / happy-01
                              :ARG1 (c6-2 / person
                                          :name (c6-5 / name
                                                      :op1 "Kate")))
                  :mod (c6-6 / yeah))
      :ARG2 c6-2)

# ::snt What a relief!!
# ::tokens ["What", "a", "relief", "!", "!"]
# ::lemmas ["what", "a", "relief", "!", "!"]
(c7-1 / relieve-01
      :degree (c7-0 / so)
      :mode expressive)

# ::snt Ta!
# ::tokens ["Ta", "!"]
# ::lemmas ["Ta", "!"]
(c8-0 / Ta
      :mode expressive)

# ::snt Thank you and so happy for you!!!
# ::tokens ["Thank", "you", "and", "so", "happy", "for", "you", "!", "!", "!"]
# ::lemmas ["thank", "you", "and", "so", "happy", "for", "you", "!", "!", "!"]
(c9-1 / and
      :op1 (c9-3 / thank-01
                 :ARG0 (c9-4 / i)
                 :ARG1 (c9-5 / you))
      :op2 (c9-2 / happy-01
                 :ARG0 c9-5
                 :degree (c9-0 / so)))

# ::snt Me too! Hope yours goes well
# ::tokens ["Me", "too", "!", "Hope", "yours", "goes", "well"]
# ::lemmas ["i", "too", "!", "hope", "yours", "go", "well"]
(c10-6 / multi-sentence
       :snt1 (c10-5 / i
                    :mod (c10-3 / too))
       :snt2 (c10-2 / hope-01
                    :ARG0 c10-5
                    :ARG1 (c10-4 / go-on-15
                                 :ARG1 (c10-1 / thing
                                              :poss (c10-7 / you))
                                 :mod (c10-0 / well))))

# ::snt Nice! That will be good
# ::tokens ["Nice", "!", "That", "will", "be", "good"]
# ::lemmas ["nice", "!", "that", "will", "be", "good"]
(c11-1 / multi-sentence
       :snt1 (c11-2 / nice-01
                    :mode expressive)
       :snt2 (c11-0 / good-02
                    :ARG1 (c11-3 / that)))

# ::snt Hope you guys will get it soon too!
# ::tokens ["Hope", "you", "guys", "will", "get", "it", "soon", "too", "!"]
# ::lemmas ["hope", "you", "guy", "will", "get", "it", "soon", "too", "!"]
(c12-1 / hope-01
       :ARG0 (c12-6 / i)
       :ARG1 (c12-5 / get-01
                    :ARG0 (c12-3 / you
                                 :mod (c12-7 / guy))
                    :ARG1 (c12-2 / it)
                    :time (c12-0 / soon)
                    :mod (c12-4 / too))
       :mode expressive)

# ::snt So many jobs need it to be honest like yourself and teachers, police, supermarket workers and many more. I feel bit guilty but I am not silly enough to refuse it.
# ::tokens ["So", "many", "jobs", "need", "it", "to", "be", "honest", "like", "yourself", "and", "teachers", ",", "police", ",", "supermarket", "workers", "and", "many", "more", ".", "I", "feel", "bit", "guilty", "but", "I", "am", "not", "silly", "enough", "to", "refuse", "it", "."]
# ::lemmas ["so", "many", "job", "need", "it", "to", "be", "honest", "like", "yourself", "and", "teacher", ",", "police", ",", "supermarket", "worker", "and", "many", "more", ".", "i", "feel", "bit", "guilty", "but", "i", "be", "not", "silly", "enough", "to", "refuse", "it", "."]
(c13-9 / multi-sentence
       :snt1 (c13-10 / need-01
                     :ARG0 (c13-24 / job
                                   :ARG1-of (c13-22 / have-quant-91
                                                    :ARG2 (c13-21 / many)
                                                    :ARG3 (c13-12 / so)))
                     :ARG1 (c13-1 / it)
                     :condition (c13-0 / honest-01
                                       :ARG0 (c13-18 / you))
                     :example (c13-19 / and
                                      :op1 c13-18)
                     :op2 (c13-27 / person
                                  :ARG0-of (c13-5 / teach-01))
                     :op3 (c13-23 / police)
                     :op4 (c13-13 / person
                                  :ARG0-of (c13-4 / work-01
                                                  :ARG2 (c13-26 / supermarket)))
                     :op5 (c13-17 / more
                                  :quant (c13-8 / many)))
       :snt2 (c13-3 / contrast-01
                    :ARG1 (c13-20 / feel-01
                                  :ARG0 (c13-14 / i)
                                  :ARG1 (c13-7 / guilty-01
                                               :ARG1 c13-14
                                               :degree (c13-25 / bit)))
                    :ARG2 (c13-2 / have-degree-91
                                 :ARG1 c13-14
                                 :ARG2 (c13-15 / silly)
                                 :ARG3 (c13-11 / enough)
                                 :ARG6 (c13-6 / refuse-01
                                              :ARG0 c13-14
                                              :ARG1 (c13-16 / it))
                                 :polarity -)))

# ::snt Must admit I thought my company would get us drivers the vaccine early. But never mind I will just wait. Good on you Kate .
# ::tokens ["Must", "admit", "I", "thought", "my", "company", "would", "get", "us", "drivers", "the", "vaccine", "early", ".", "But", "never", "mind", "I", "will", "just", "wait", ".", "Good", "on", "you", "Kate", "."]
# ::lemmas ["must", "admit", "i", "think", "my", "company", "would", "get", "we", "driver", "the", "vaccine", "early", ".", "but", "never", "mind", "i", "will", "just", "wait", ".", "good", "on", "you", "Kate", "."]
(c14-9 / multi-sentence
       :snt1 (c14-6 / obligate-01
                    :ARG1 (c14-2 / i)
                    :ARG2 (c14-17 / admit-01
                                  :ARG0 c14-2
                                  :ARG1 (c14-7 / think-01
                                               :ARG0 c14-2
                                               :ARG1 (c14-8 / get-01
                                                            :ARG0 (c14-3 / company
                                                                         :poss c14-2)
                                                            :ARG1 (c14-5 / vaccine)
                                                            :ARG2 (c14-21 / person
                                                                          :ARG0-of (c14-0 / drive-01)
                                                                          :poss (c14-4 / we))
                                                            :time (c14-12 / early)))))
       :snt2 (c14-1 / contrast-01
                    :ARG2 (c14-11 / wait-01
                                  :ARG1 (c14-14 / i)
                                  :mod (c14-20 / just)
                                  :time (c14-19 / ever)
                                  :concession (c14-18 / mind-15
                                                      :ARG0 (c14-15 / i)
                                                      :ARG1 c14-11
                                                      :mode expressive)
                                  :polarity -))
       :snt3 (c14-13 / say-01
                     :ARG1 (c14-16 / good-02
                                   :ARG1 c14-21
                                   :name (c14-10 / name
                                                 :op1 "Kate")))
       :ARG2 c14-21)

# ::snt Ignore any negative its important to have
# ::tokens ["Ignore", "any", "negative", "its", "important", "to", "have"]
# ::lemmas ["ignore", "any", "negative", "its", "important", "to", "have"]
(c15-2 / ignore-01
       :ARG0 (c15-4 / you)
       :ARG1 (c15-3 / negative-03
                    :mod (c15-0 / any)
                    :ARG1-of (c15-1 / important-01))
       :mode imperative)

# ::snt Not sad at all. You have to have it when it is offered
# ::tokens ["Not", "sad", "at", "all", ".", "You", "have", "to", "have", "it", "when", "it", "is", "offered"]
# ::lemmas ["not", "sad", "at", "all", ".", "you", "have", "to", "have", "it", "when", "it", "be", "offer"]
(c16-6 / multi-sentence
       :snt1 (c16-0 / sad-02
                    :degree (c16-1 / at-all)
                    :polarity -)
       :snt2 (c16-4 / obligate-01
                    :ARG1 (c16-7 / you)
                    :ARG2 (c16-2 / have-03
                                 :ARG0 c16-7
                                 :ARG1 (c16-5 / it)
                                 :time (c16-3 / offer-01
                                              :ARG1 c16-5))))

# ::snt Fabulous!!! I got mine through work kind of sad I am ahead of my husband but I am not risking anything
# ::tokens ["Fabulous", "!", "!", "!", "I", "got", "mine", "through", "work", "kind", "of", "sad", "I", "am", "ahead", "of", "my", "husband", "but", "I", "am", "not", "risking", "anything"]
# ::lemmas ["fabulous", "!", "!", "!", "i", "get", "mine", "through", "work", "kind", "of", "sad", "i", "be", "ahead", "of", "my", "husband", "but", "i", "be", "not", "risk", "anything"]
(c17-12 / multi-sentence
        :snt1 (c17-3 / fabulous
                     :mode expressive)
        :snt2 (c17-4 / contrast-01
                     :ARG1 (c17-9 / get-through-13
                                  :ARG0 (c17-11 / i)
                                  :ARG1 (c17-5 / work-01
                                               :ARG0 c17-11))
                     :ARG2 (c17-0 / sad-02
                                  :ARG0 (c17-13 / be-located-at-91
                                                :ARG1 (c17-6 / i)
                                                :ARG2 (c17-1 / ahead
                                                             :op1 (c17-8 / person
                                                                         :ARG0-of (c17-7 / have-rel-role-91
                                                                                         :ARG1 c17-6
                                                                                         :ARG2 (c17-10 / husband))))
                                                :degree (c17-2 / kind-of))
                                  :ARG1 c17-6)))

# ::snt Thank you! I am so happy perks of my work for a change
# ::tokens ["Thank", "you", "!", "I", "am", "so", "happy", "perks", "of", "my", "work", "for", "a", "change"]
# ::lemmas ["thank", "you", "!", "i", "be", "so", "happy", "perk", "of", "my", "work", "for", "a", "change"]
(c18-7 / multi-sentence
       :snt1 (c18-4 / thank-01
                    :ARG0 (c18-6 / i)
                    :ARG1 (c18-8 / you))
       :snt2 (c18-2 / happy-01
                    :ARG0 (c18-5 / perk
                                 :poss (c18-1 / work-01
                                              :ARG0 (c18-3 / i
                                                           :ARG1-of c18-2)))
                    :degree (c18-0 / so)))

# ::snt I'm having mine next Wednesday
# ::tokens ["I", "'m", "having", "mine", "next", "Wednesday"]
# ::lemmas ["i", "be", "have", "mine", "next", "Wednesday"]
(c19-2 / have-06
       :ARG0 (c19-4 / i)
       :ARG1 (c19-3 / thing
                    :poss c19-4)
       :time (c19-0 / date-entity
                    :weekday (c19-1 / wednesday)
                    :mod (c19-5 / next)))

# ::snt Thats great news
# ::tokens ["That", "s", "great", "news"]
# ::lemmas ["that", "s", "great", "news"]
(c20-1 / news
       :mod (c20-0 / great)
       :domain (c20-2 / that))
