# ::snt thanks bro
# ::tokens ["thanks", "bro"]
# ::lemmas ["thank", "bro"]
(c2-1 / thank-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-2 / person
                  :ARG0-of (c2-0 / have-rel-role-91
                                 :ARG2 (c2-3 / bro))))

# ::snt Good luck g
# ::tokens ["Good", "luck", "g"]
# ::lemmas ["good", "luck", "g"]
(c3-3 / luck
      :ARG1-of (c3-0 / good-02)
      :mod (c3-1 / person
                 :name (c3-2 / name
                             :op1 "G")))

# ::snt if you say so
# ::tokens ["if", "you", "say", "so"]
# ::lemmas ["if", "you", "say", "so"]
(c4-2 / have-condition-91
      :ARG2 (c4-0 / say-01
                  :ARG0 (c4-3 / you)
                  :ARG1 (c4-1 / so)))

# ::snt youre right
# ::tokens ["you", "re", "right"]
# ::lemmas ["you", "re", "right"]
(c5-1 / right-06
      :ARG1 (c5-0 / you))

# ::snt ofc
# ::tokens ["ofc"]
# ::lemmas ["ofc"]
(c6-0 / person
      :name (c6-1 / name
                  :op1 "ofc"))

# ::snt lass mich doch in Ruhe
# ::tokens ["lass", "mich", "doch", "in", "Ruhe"]
# ::lemmas ["lass", "mich", "doch", "in", "Ruhe"]
(c7-2 / be-located-at-91
      :ARG1 (c7-4 / event
                  :name (c7-3 / name
                              :op1 "Llass"
                              :op2 "doch"))
      :ARG2 (c7-0 / city
                  :name (c7-1 / name
                              :op1 "Ruhe")))

# ::snt youre a big balkan (i think) man, u got this
# ::tokens ["you", "re", "a", "big", "balkan", "(", "i", "think", ")", "man", ",", "u", "got", "this"]
# ::lemmas ["you", "re", "a", "big", "balkan", "(", "i", "think", ")", "man", ",", "u", "get", "this"]
(c8-1 / think-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-5 / man
                  :mod (c8-3 / big)
                  :mod (c8-8 / ethnic-group
                             :name (c8-6 / name
                                         :op1 "Balkans"))
                  :domain (c8-7 / you)
                  :ARG0-of (c8-2 / get-01
                                 :ARG1 (c8-0 / this))))

# ::snt lmaoo youre right
# ::tokens ["lmaoo", "you", "re", "right"]
# ::lemmas ["lmaoo", "you", "re", "right"]
(c9-0 / right-06
      :ARG1 (c9-4 / you)
      :mod (c9-1 / laugh-01
                 :ARG0 (c9-3 / i)
                 :manner (c9-2 / loud)
                 :mode expressive))

# ::snt heard both sides so idek what to expect but we move
# ::tokens ["heard", "both", "sides", "so", "idek", "what", "to", "expect", "but", "we", "move"]
# ::lemmas ["hear", "both", "side", "so", "idek", "what", "to", "expect", "but", "we", "move"]
(c10-2 / hear-01
       :ARG1 (c10-5 / have-concession-91
                    :ARG1 (c10-7 / move-03
                                 :ARG0 (c10-1 / we))
                    :ARG2 (c10-6 / ideologue
                                 :domain (c10-0 / side
                                                :mod (c10-4 / both))))
       :ARG2 c10-2
       :ARG1 (c10-3 / thing
                    :ARG1-of (c10-8 / expect-01
                                    :ARG0 c10-0))
       :ARG2 c10-0)

# ::snt Am Ende wchst so drittes Auge digga
# ::tokens ["Am", "Ende", "wchst", "so", "drittes", "Auge", "digga"]
# ::lemmas ["be", "ende", "wchst", "so", "dritte", "Auge", "digga"]
(c11-5 / ende-01
       :ARG1 (c11-1 / amr-unintelligible
                    :value "Auge")
       :ARG0-of (c11-2 / cause-01
                       :ARG1 (c11-4 / get-03
                                    :ARG1 (c11-0 / digga
                                                 :mod (c11-3 / uge)))))

# ::snt olm hoffe auch
# ::tokens ["olm", "hoffe", "auch"]
# ::lemmas ["olm", "hoffe", "auch"]
(c12-1 / auch
       :mod (c12-2 / laugh-01
                   :ARG0 (c12-0 / i)
                   :manner (c12-3 / loud))
       :mode expressive)

# ::snt its calm honestly
# ::tokens ["its", "calm", "honestly"]
# ::lemmas ["its", "calm", "honestly"]
(c13-2 / calm-03
       :ARG1 (c13-0 / it)
       :ARG1-of (c13-1 / honest-01))

# ::snt Inshallah am Ende wchst kein dritter Arm oder so
# ::tokens ["Inshallah", "am", "Ende", "wchst", "kein", "dritter", "Arm", "oder", "so"]
# ::lemmas ["Inshallah", "be", "ende", "wchst", "kein", "dritter", "Arm", "oder", "so"]
(c14-7 / end-01
       :ARG1 (c14-3 / event
                    :name (c14-5 / name
                                 :op1 "Inshallah"))
       :manner (c14-6 / kein-01
                      :ARG1 (c14-1 / arm
                                   :mod (c14-2 / country
                                               :name (c14-4 / name
                                                            :op1 "United"
                                                            :op2 "Kingdom")))
                      :manner (c14-0 / so)))

# ::snt thanks bro, ill try
# ::tokens ["thanks", "bro", ",", "ill", "try"]
# ::lemmas ["thank", "bro", ",", "ill", "try"]
(c15-0 / and
       :op1 (c15-4 / thank-01
                   :ARG0 (c15-7 / i)
                   :ARG1 (c15-5 / person
                                :ARG0-of (c15-2 / have-rel-role-91
                                                :ARG2 (c15-6 / bro))))
       :op2 (c15-1 / try-01
                   :ARG0 c15-7
                   :ARG1-of (c15-3 / ill-02)))

# ::snt hopefully bro
# ::tokens ["hopefully", "bro"]
# ::lemmas ["hopefully", "bro"]
(c16-3 / hope-01
       :ARG1 (c16-2 / person
                    :ARG0-of (c16-1 / have-rel-role-91
                                    :ARG2 (c16-0 / bro))))

# ::snt You gon be fine bro!
# ::tokens ["You", "gon", "be", "fine", "bro", "!"]
# ::lemmas ["you", "gon", "be", "fine", "bro", "!"]
(c17-3 / fine-04
       :ARG1 (c17-2 / you
                    :ARG0-of (c17-1 / have-rel-role-91
                                    :ARG2 (c17-0 / bro))))
