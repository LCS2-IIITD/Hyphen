# ::snt Im in Florida. Its not much better. Keep trying, it will be worth it.
# ::tokens ["I", "m", "in", "Florida", ".", "Its", "not", "much", "better", ".", "Keep", "trying", ",", "it", "will", "be", "worth", "it", "."]
# ::lemmas ["i", "m", "in", "Florida", ".", "its", "not", "much", "well", ".", "keep", "try", ",", "it", "will", "be", "worth", "it", "."]
(c1-13 / multi-sentence
       :snt1 (c1-11 / be-located-at-91
                    :ARG1 (c1-12 / i)
                    :ARG2 (c1-0 / state
                                :name (c1-14 / name
                                             :op1 "Florida")))
       :snt2 (c1-10 / good-02
                    :ARG1 (c1-5 / it)
                    :ARG2-of (c1-6 / have-degree-91
                                   :ARG1 c1-5
                                   :ARG3 (c1-2 / more
                                               :quant (c1-8 / much)))
                    :polarity -)
       :snt3 (c1-1 / keep-02
                   :ARG0 (c1-15 / you)
                   :ARG1 (c1-9 / try-01
                               :ARG0 c1-15)
                   :ARG0-of (c1-3 / cause-01
                                  :ARG1 (c1-4 / worth-02
                                              :ARG1 (c1-7 / it)))
                   :mode imperative))

# ::snt The health dept is supposed to be bringing them to us but dont know when. I tried registering at the hospital but havent heard one way or the other. But then I am in Kansas so I guess they are sending it through the PO.
# ::tokens ["The", "health", "dept", "is", "supposed", "to", "be", "bringing", "them", "to", "us", "but", "do", "nt", "know", "when", ".", "I", "tried", "registering", "at", "the", "hospital", "but", "have", "nt", "heard", "one", "way", "or", "the", "other", ".", "But", "then", "I", "am", "in", "Kansas", "so", "I", "guess", "they", "are", "sending", "it", "through", "the", "PO", "."]
# ::lemmas ["the", "health", "dept", "be", "suppose", "to", "be", "bring", "they", "to", "we", "but", "do", "not", "know", "when", ".", "i", "try", "register", "at", "the", "hospital", "but", "have", "not", "hear", "one", "way", "or", "the", "other", ".", "but", "then", "i", "be", "in", "Kansas", "so", "i", "guess", "they", "be", "send", "it", "through", "the", "PO", "."]
(c2-14 / multi-sentence
       :snt1 (c2-6 / contrast-01
                   :ARG1 (c2-18 / suppose-02
                                :ARG1 (c2-0 / department
                                            :topic (c2-26 / health))
                                :ARG2 (c2-29 / bring-01
                                             :ARG0 c2-0
                                             :ARG1 (c2-11 / they)
                                             :ARG2 (c2-7 / we)))
                   :ARG2 (c2-31 / know-01
                                :ARG0 (c2-3 / i)
                                :ARG1 (c2-8 / time)
                                :polarity -))
       :snt2 (c2-1 / contrast-01
                   :ARG1 (c2-16 / try-01
                                :ARG0 (c2-19 / i)
                                :ARG1 (c2-12 / register-02
                                             :ARG0 c2-19
                                             :ARG2 (c2-2 / hospital)))
                   :ARG2 (c2-5 / hear-01
                               :ARG0 c2-19
                               :ARG1 (c2-10 / or
                                            :op1 (c2-17 / way
                                                        :quant 1)
                                            :op2 (c2-4 / way
                                                       :mod (c2-27 / other)))
                               :polarity -))
       :snt3 (c2-9 / contrast-01
                   :ARG2 (c2-24 / be-located-at-91
                                :ARG1 (c2-20 / i)
                                :ARG2 (c2-30 / state
                                             :name (c2-15 / name
                                                          :op1 "Kansas"))
                                :ARG0-of (c2-23 / cause-01
                                                :ARG1 (c2-13 / guess-01
                                                             :ARG0 c2-20
                                                             :ARG1 (c2-21 / send-01
                                                                          :ARG0 c2-11)
                                                             :ARG1 (c2-28 / it)
                                                             :path (c2-22 / thing
                                                                          :name c2-15
                                                                          :op1 "Postal"
                                                                          :op2 "Office")))))
       :time (c2-25 / then))

# ::snt It took me a month of trying to get online to book it. Dont give up.
# ::tokens ["It", "took", "me", "a", "month", "of", "trying", "to", "get", "online", "to", "book", "it", ".", "Do", "nt", "give", "up", "."]
# ::lemmas ["it", "take", "i", "a", "month", "of", "try", "to", "get", "online", "to", "book", "it", ".", "do", "not", "give", "up", "."]
(c3-9 / multi-sentence
      :snt1 (c3-5 / take-10
                  :ARG0 (c3-2 / try-01
                              :ARG0 (c3-8 / i)
                              :ARG1 (c3-7 / get-04
                                          :ARG0 c3-8
                                          :ARG1 (c3-4 / online)
                                          :purpose (c3-10 / book-03
                                                          :ARG0 c3-8
                                                          :ARG1 (c3-3 / it))))
                  :ARG1 (c3-11 / temporal-quantity
                               :unit (c3-1 / month)
                               :quant 1)
                  :ARG2 c3-8)
      :snt2 (c3-0 / give-up-07
                  :ARG0 (c3-6 / you)
                  :mode imperative
                  :polarity -))

# ::snt Congrats on your first vaccine. Still waiting for mine.
# ::tokens ["Congrats", "on", "your", "first", "vaccine", ".", "Still", "waiting", "for", "mine", "."]
# ::lemmas ["congrat", "on", "your", "first", "vaccine", ".", "still", "wait", "for", "mine", "."]
(c4-7 / multi-sentence
      :snt1 (c4-2 / congratulate-01
                  :ARG1 (c4-8 / you)
                  :ARG2 (c4-4 / vaccine
                              :ord (c4-5 / ordinal-entity
                                         :value 1)
                              :poss c4-8))
      :snt2 (c4-3 / wait-01
                  :ARG2 (c4-1 / vaccine
                              :poss (c4-6 / i))
                  :mod (c4-0 / still)))

# ::snt Castor was all over the place. The only thing he said that makes sense is that trump should be arrested. lol
# ::tokens ["Castor", "was", "all", "over", "the", "place", ".", "The", "only", "thing", "he", "said", "that", "makes", "sense", "is", "that", "trump", "should", "be", "arrested", ".", "lol"]
# ::lemmas ["castor", "be", "all", "over", "the", "place", ".", "the", "only", "thing", "he", "say", "that", "make", "sense", "be", "that", "trump", "should", "be", "arrest", ".", "lol"]
(c5-13 / multi-sentence
       :snt1 (c5-10 / be-located-at-91
                    :ARG1 (c5-12 / person
                                 :name (c5-14 / name
                                              :op1 "Castor"))
                    :ARG2 (c5-2 / all-over
                                :op1 (c5-6 / place)))
       :snt2 (c5-0 / say-01
                   :ARG0 (c5-4 / he)
                   :ARG1 (c5-11 / sense-02
                                :ARG1 (c5-7 / recommend-01
                                            :ARG1 (c5-15 / arrest-01
                                                         :ARG1 (c5-3 / person
                                                                     :name (c5-8 / name
                                                                                 :op1 " trump"))))
                                :mod (c5-5 / only))
                   :ARG2-of (c5-9 / laugh-01
                                  :manner (c5-1 / loud)
                                  :mode expressive)))

# ::snt Thanks, Thats what I figured.
# ::tokens ["Thanks", ",", "That", "s", "what", "I", "figured", "."]
# ::lemmas ["thank", ",", "that", "s", "what", "i", "figure", "."]
(c6-0 / and
      :op1 (c6-3 / thank-01
                 :ARG0 (c6-4 / i)
                 :ARG1 (c6-5 / you))
      :op2 (c6-1 / figure-01
                 :ARG0 c6-4
                 :ARG1 (c6-2 / that)))

# ::snt Just slop.
# ::tokens ["Just", "slop", "."]
# ::lemmas ["just", "slop", "."]
(c7-0 / slop-01
      :mod (c7-1 / just))
