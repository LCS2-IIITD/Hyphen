# ::snt I received my First Jabbed last Saturday - felt quite unwell for hours . Anyway , am alive , an kicking
# ::tokens ["I", "received", "my", "First", "Jabbed", "last", "Saturday", "-", "felt", "quite", "unwell", "for", "hours", ".", "Anyway", ",", "am", "alive", ",", "an", "kicking"]
# ::lemmas ["i", "receive", "my", "First", "Jabbed", "last", "Saturday", "-", "feel", "quite", "unwell", "for", "hours", ".", "anyway", ",", "be", "alive", ",", "an", "kicking"]
(c2-8 / multi-sentence
      :snt1 (c2-7 / receive-01
                  :ARG0 (c2-3 / i)
                  :ARG1 (c2-18 / jab-01
                               :ARG1 c2-3
                               :ord (c2-5 / ordinal-entity
                                          :value 1))
                  :time (c2-0 / date-entity
                              :weekday (c2-10 / saturday)
                              :mod (c2-17 / last)))
      :snt2 (c2-14 / feel-01
                   :ARG0 (c2-11 / i)
                   :ARG1 (c2-4 / well-05
                               :degree (c2-1 / quite)
                               :polarity -)
                   :duration (c2-15 / multiple
                                    :op1 (c2-6 / temporal-quantity
                                               :unit (c2-16 / hour)
                                               :quant 1)))
      :snt3 (c2-13 / and
                   :op1 (c2-2 / live-01
                              :ARG0 (c2-12 / i))
                   :op2 (c2-19 / kick-01
                               :ARG0 c2-12)
                   :mod (c2-9 / anyway)))

# ::snt I just dont believe
# ::tokens ["I", "just", "do", "nt", "believe"]
# ::lemmas ["i", "just", "do", "not", "believe"]
(c3-0 / believe-01
      :ARG0 (c3-2 / i)
      :mod (c3-1 / just)
      :polarity -)

# ::snt I dont believe he got it how is it that the cotton is given to us afterwards to press on the spot to stop bleeding or is it that he does not bleed
# ::tokens ["I", "do", "nt", "believe", "he", "got", "it", "how", "is", "it", "that", "the", "cotton", "is", "given", "to", "us", "afterwards", "to", "press", "on", "the", "spot", "to", "stop", "bleeding", "or", "is", "it", "that", "he", "does", "not", "bleed"]
# ::lemmas ["i", "do", "not", "believe", "he", "get", "it", "how", "be", "it", "that", "the", "cotton", "be", "give", "to", "we", "afterwards", "to", "press", "on", "the", "spot", "to", "stop", "bleed", "or", "be", "it", "that", "he", "do", "not", "bleed"]
(c4-10 / believe-01
       :ARG0 (c4-12 / i)
       :ARG1 (c4-8 / get-30
                   :ARG0 (c4-6 / he)
                   :ARG1 (c4-7 / it))
       :ARG1-of (c4-4 / cause-01
                      :ARG0 (c4-3 / amr-choice
                                  :op1 (c4-13 / give-01
                                              :ARG1 (c4-0 / cotton)
                                              :ARG2 (c4-5 / we)
                                              :time (c4-14 / afterwards)
                                              :purpose (c4-9 / press-01
                                                             :ARG0 c4-0
                                                             :manner (c4-1 / spot)
                                                             :purpose (c4-11 / stop-01
                                                                             :ARG0 c4-0
                                                                             :ARG1 (c4-2 / bleed-01
                                                                                         :ARG1 c4-6
                                                                                         :op2-of c4-3))))))
       :polarity -)

# ::snt Tink wi a fool
# ::tokens ["Tink", "wi", "a", "fool"]
# ::lemmas ["Tink", "wi", "a", "fool"]
(c5-0 / try-01
      :ARG0 (c5-1 / you)
      :ARG1 (c5-2 / fool)
      :mode imperative)

# ::snt U didnt take it we all saw....set up tink ppl a idiot
# ::tokens ["U", "did", "nt", "take", "it", "we", "all", "saw", "....", "set", "up", "tink", "ppl", "a", "idiot"]
# ::lemmas ["U", "do", "not", "take", "it", "we", "all", "see", "....", "set", "up", "tink", "ppl", "a", "idiot"]
(c6-8 / multi-sentence
      :snt1 (c6-4 / take-02
                  :ARG0 (c6-9 / you)
                  :ARG1 (c6-7 / it
                              :ARG1-of (c6-0 / see-01
                                             :ARG0 (c6-2 / we
                                                         :mod (c6-1 / all))))
                  :polarity -)
      :snt2 (c6-6 / set-up-15
                  :ARG0 (c6-10 / you)
                  :ARG1 (c6-5 / person
                              :mod (c6-3 / idiot))
                  :mode imperative))

# ::snt Yayy Tweep ! here is it , If i don't respond, do check your personal video page REF: /10
# ::tokens ["Yayy", "Tweep", "!", "here", "is", "it", ",", "If", "i", "do", "n't", "respond", ",", "do", "check", "your", "personal", "video", "page", "REF", ":", "/10"]
# ::lemmas ["Yayy", "Tweep", "!", "here", "be", "it", ",", "if", "i", "do", "not", "respond", ",", "do", "check", "your", "personal", "video", "page", "REF", ":", "/10"]
(c7-11 / multi-sentence
       :snt1 (c7-13 / yay
                    :domain (c7-10 / person
                                   :name (c7-12 / name
                                                :op1 "Tweep"))
                    :mode expressive)
       :snt2 (c7-0 / and
                   :op1 (c7-9 / be-located-at-91
                              :ARG1 (c7-1 / it)
                              :ARG2 (c7-4 / here))
                   :op2 (c7-2 / check-01
                              :ARG0 (c7-14 / you)
                              :ARG1 (c7-7 / page
                                          :mod (c7-6 / video)
                                          :ARG1-of (c7-3 / personal-02
                                                         :ARG2 c7-14))
                              :condition (c7-8 / respond-01
                                               :ARG0 (c7-5 / i)
                                               :polarity -)
                              :mode imperative)))

# ::snt You cannot see the vaccine go in
# ::tokens ["You", "can", "not", "see", "the", "vaccine", "go", "in"]
# ::lemmas ["you", "can", "not", "see", "the", "vaccine", "go", "in"]
(c10-3 / possible-01
       :ARG1 (c10-0 / see-01
                    :ARG0 (c10-4 / you)
                    :ARG1 (c10-2 / go-01
                                 :ARG1 (c10-1 / vaccine)))
       :polarity -)

# ::snt Omg why did she cover it with her hand??? Now EVERYONE is doubting this!!!!! No other camera angle????
# ::tokens ["Omg", "why", "did", "she", "cover", "it", "with", "her", "hand", "?", "?", "?", "Now", "EVERYONE", "is", "doubting", "this", "!", "!", "!", "!", "!", "No", "other", "camera", "angle", "?", "?", "?", "?"]
# ::lemmas ["Omg", "why", "do", "she", "cover", "it", "with", "her", "hand", "?", "?", "?", "now", "everyone", "be", "doubt", "this", "!", "!", "!", "!", "!", "no", "other", "camera", "angle", "?", "?", "?", "?"]
(c11-11 / multi-sentence
        :snt1 (c11-4 / cover-01
                     :ARG0 (c11-0 / she
                                  :part (c11-5 / hand))
                     :ARG1 (c11-10 / it)
                     :ARG2 c11-5
                     :ARG1-of (c11-1 / cause-01
                                     :ARG0 (c11-3 / amr-unknown)
                                     :mod (c11-8 / oh-my-god
                                                 :mode expressive)))
        :snt2 (c11-2 / doubt-01
                     :ARG0 (c11-14 / everyone)
                     :ARG1 (c11-9 / this)
                     :time (c11-12 / now))
        :snt3 (c11-13 / angle
                      :mod (c11-7 / camera)
                      :mod (c11-6 / other)
                      :polarity c11-3
                      :polarity -))

# ::snt why you allow the nurse to touch your body without a gloves on???
# ::tokens ["why", "you", "allow", "the", "nurse", "to", "touch", "your", "body", "without", "a", "gloves", "on", "?", "?", "?"]
# ::lemmas ["why", "you", "allow", "the", "nurse", "to", "touch", "your", "body", "without", "a", "glove", "on", "?", "?", "?"]
(c12-1 / cause-01
       :ARG0 (c12-0 / amr-unknown)
       :ARG1 (c12-7 / allow-01
                    :ARG0 (c12-6 / you
                                 :part (c12-4 / body))
                    :ARG1 (c12-2 / touch-01
                                 :ARG0 (c12-5 / nurse)
                                 :ARG1 c12-4
                                 :manner (c12-3 / glove
                                                :polarity -))))

# ::snt (3/3) I want to assure the public that your Government is putting in the requisite measures to ensure the continued effective roll out of the COVID-19 vaccination programme.
# ::tokens ["(", "3/3", ")", "I", "want", "to", "assure", "the", "public", "that", "your", "Government", "is", "putting", "in", "the", "requisite", "measures", "to", "ensure", "the", "continued", "effective", "roll", "out", "of", "the", "COVID-19", "vaccination", "programme", "."]
# ::lemmas ["(", "3/3", ")", "i", "want", "to", "assure", "the", "public", "that", "your", "Government", "be", "put", "in", "the", "requisite", "measure", "to", "ensure", "the", "continue", "effective", "roll", "out", "of", "the", "COVID-19", "vaccination", "programme", "."]
(c13-2 / want-01
       :ARG0 (c13-12 / i)
       :ARG1 (c13-0 / assure-01
                    :ARG0 c13-12
                    :ARG1 (c13-10 / public)
                    :ARG2 (c13-7 / put-in-05
                                 :ARG0 (c13-11 / government-organization
                                               :ARG0-of (c13-15 / govern-01
                                                                :ARG1 (c13-8 / you)))
                                 :ARG1 (c13-13 / measure-02
                                               :ARG1-of (c13-9 / require-01))
                                 :purpose (c13-16 / ensure-01
                                                  :ARG0 c13-11
                                                  :ARG1 (c13-5 / roll-out-02
                                                               :ARG1 (c13-3 / program
                                                                            :name (c13-14 / name
                                                                                          :op1 "COVID-19")
                                                                            :topic (c13-6 / vaccinate-01))
                                                               :ARG1-of (c13-1 / continue-01)
                                                               :ARG0-of (c13-4 / effective-04)))))
       :li 3)

# ::snt (2/2) Our goal is to ensure that when persons come to take the vaccine, it is done in an orderly manner and that the process is safe for all concerned.
# ::tokens ["(", "2/2", ")", "Our", "goal", "is", "to", "ensure", "that", "when", "persons", "come", "to", "take", "the", "vaccine", ",", "it", "is", "done", "in", "an", "orderly", "manner", "and", "that", "the", "process", "is", "safe", "for", "all", "concerned", "."]
# ::lemmas ["(", "2/2", ")", "our", "goal", "be", "to", "ensure", "that", "when", "person", "come", "to", "take", "the", "vaccine", ",", "it", "be", "do", "in", "an", "orderly", "manner", "and", "that", "the", "process", "be", "safe", "for", "all", "concerned", "."]
(c14-5 / have-purpose-91
       :ARG1 (c14-4 / we)
       :ARG2 (c14-13 / ensure-01
                     :ARG0 c14-4
                     :ARG1 (c14-2 / and
                                  :op1 (c14-0 / do-02
                                              :ARG1 (c14-11 / it)
                                              :manner (c14-7 / orderly)
                                              :time (c14-3 / come-01
                                                           :ARG1 (c14-10 / person
                                                                         :mod (c14-12 / all))
                                                           :purpose (c14-9 / take-01
                                                                           :ARG0 c14-10
                                                                           :ARG1 (c14-6 / vaccine))))
                                  :op2 (c14-1 / safe-01
                                              :ARG1 (c14-8 / process-02)
                                              :ARG2 c14-10)))
       :li 2)
