# ::snt Disappointing, could get so much extra checking done.
# ::tokens ["Disappointing", ",", "could", "get", "so", "much", "extra", "checking", "done", "."]
# ::lemmas ["disappointing", ",", "could", "get", "so", "much", "extra", "checking", "do", "."]
(c1-0 / disappoint-01
      :ARG0 (c1-4 / possible-01
                  :ARG1 (c1-5 / get-04
                              :ARG1 (c1-6 / do-02
                                          :ARG1 (c1-2 / check-01
                                                      :mod (c1-8 / extra)
                                                      :ARG1-of (c1-3 / have-quant-91
                                                                     :ARG2 (c1-7 / much)
                                                                     :ARG3 (c1-1 / so)))))))

# ::snt Nope - bit of an anticlimax tbh. No pain, no days off work, no extra arm.
# ::tokens ["Nope", "-", "bit", "of", "an", "anticlimax", "tbh", ".", "No", "pain", ",", "no", "days", "off", "work", ",", "no", "extra", "arm", "."]
# ::lemmas ["nope", "-", "bit", "of", "an", "anticlimax", "tbh", ".", "no", "pain", ",", "no", "days", "off", "work", ",", "no", "extra", "arm", "."]
(c2-7 / multi-sentence
      :snt1 (c2-8 / nope)
      :snt2 (c2-1 / anticlimax
                  :degree (c2-5 / bit)
                  :ARG1-of (c2-3 / honest-01))
      :snt3 (c2-9 / and
                  :op1 (c2-6 / pain-01
                             :polarity -)
                  :op2 (c2-4 / off
                             :op1 (c2-2 / work-01))
                  :op3 (c2-0 / arm
                             :mod (c2-10 / extra)
                             :polarity -)))

# ::snt Gain any powers?
# ::tokens ["Gain", "any", "powers", "?"]
# ::lemmas ["gain", "any", "power", "?"]
(c3-0 / gain-02
      :polarity (c3-2 / amr-unknown)
      :ARG1 (c3-1 / power
                  :mod (c3-3 / any)))

# ::snt Ive had my first one
# ::tokens ["I", "ve", "had", "my", "first", "one"]
# ::lemmas ["i", "ve", "have", "my", "first", "one"]
(c4-2 / have-03
      :ARG0 (c4-1 / i)
      :ARG1 (c4-3 / thing
                  :ord (c4-0 / ordinal-entity
                             :value 1)
                  :poss c4-1))

# ::snt Yaaaaasssss
# ::tokens ["Yaaaaasssss"]
# ::lemmas ["yaaaaasssss"]
(c5-0 / yaaaaasssss
      :mode expressive)
