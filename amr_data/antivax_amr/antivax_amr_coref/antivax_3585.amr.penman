# ::snt Good to know youre all ok...keep safe
# ::tokens ["Good", "to", "know", "you", "re", "all", "ok", "...", "keep", "safe"]
# ::lemmas ["good", "to", "know", "you", "re", "all", "ok", "...", "keep", "safe"]
(c1-5 / good-02
      :ARG1 (c1-6 / know-01
                  :ARG1 (c1-4 / okay-03
                              :ARG1 (c1-7 / you
                                          :mod (c1-2 / all))))
      :ARG1-of (c1-3 / cause-01
                     :ARG0 (c1-1 / keep-02
                                 :ARG1 (c1-0 / safe-01
                                             :ARG1 c1-7))))

# ::snt Thank you, Maureen and yes we have all recovered from it now.Stay safe.
# ::tokens ["Thank", "you", ",", "Maureen", "and", "yes", "we", "have", "all", "recovered", "from", "it", "now", ".", "Stay", "safe", "."]
# ::lemmas ["thank", "you", ",", "Maureen", "and", "yes", "we", "have", "all", "recover", "from", "it", "now", ".", "stay", "safe", "."]
(c2-10 / multi-sentence
       :snt1 (c2-1 / and
                   :op1 (c2-5 / thank-01
                              :ARG0 (c2-2 / i)
                              :ARG1 (c2-9 / person
                                          :name (c2-11 / name
                                                       :op1 "Maureen")))
                   :op2 (c2-6 / recover-01
                              :ARG1 (c2-3 / we
                                          :mod (c2-13 / all))
                              :ARG2 (c2-4 / it)
                              :time (c2-7 / now)))
       :snt2 (c2-0 / stay-01
                   :ARG1 (c2-12 / you)
                   :ARG3 (c2-8 / safe-01
                               :ARG1 c2-12)))

# ::snt Not been on Twitter for a while. You were all on a gogglebox repeat tonight (trying to get John to give a paw). Hope you are all recovered from the virus. Glad youve had your jab.
# ::tokens ["Not", "been", "on", "Twitter", "for", "a", "while", ".", "You", "were", "all", "on", "a", "gogglebox", "repeat", "tonight", "(", "trying", "to", "get", "John", "to", "give", "a", "paw", ")", ".", "Hope", "you", "are", "all", "recovered", "from", "the", "virus", ".", "Glad", "you", "ve", "had", "your", "jab", "."]
# ::lemmas ["not", "be", "on", "Twitter", "for", "a", "while", ".", "you", "be", "all", "on", "a", "gogglebox", "repeat", "tonight", "(", "try", "to", "get", "John", "to", "give", "a", "paw", ")", ".", "hope", "you", "be", "all", "recover", "from", "the", "virus", ".", "glad", "you", "ve", "have", "your", "jab", "."]
(c3-12 / multi-sentence
       :snt1 (c3-24 / be-located-at-91
                    :ARG1 (c3-4 / i)
                    :ARG2 (c3-26 / publication
                                 :name (c3-13 / name
                                              :op1 "Twitter"))
                    :duration (c3-5 / while)
                    :polarity -)
       :snt2 (c3-10 / repeat-01
                    :ARG1 (c3-19 / you
                                 :mod (c3-21 / all))
                    :time (c3-0 / date-entity
                                :dayperiod (c3-2 / night)
                                :mod (c3-9 / today))
                    :manner (c3-6 / try-01
                                  :ARG0 c3-19
                                  :ARG1 (c3-11 / get-04
                                               :ARG0 c3-19
                                               :ARG1 (c3-18 / give-01
                                                            :ARG0 (c3-23 / person
                                                                         :name (c3-17 / name
                                                                                      :op1 "John"))
                                                            :ARG1 (c3-15 / paw)))))
       :snt3 (c3-22 / hope-01
                    :ARG0 (c3-16 / i)
                    :ARG1 (c3-7 / recover-01
                                :ARG1 (c3-20 / you
                                             :mod (c3-14 / all))
                                :ARG2 (c3-8 / virus)))
       :snt4 (c3-1 / glad-02
                   :ARG0 (c3-3 / have-03
                               :ARG0 c3-20
                               :ARG1 (c3-25 / jab-01
                                            :ARG1 c3-20))
                   :ARG1 c3-16))

# ::snt You too Caz.
# ::tokens ["You", "too", "Caz", "."]
# ::lemmas ["you", "too", "Caz", "."]
(c4-0 / say-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-2 / person
                  :name (c4-4 / name
                              :op1 "Caz")
                  :mod (c4-1 / too)
                  :ARG2-of c4-0))

# ::snt Yes indeed, the place was bursting at the seems, but it was controlled.Well done all at Stanground, good effort.
# ::tokens ["Yes", "indeed", ",", "the", "place", "was", "bursting", "at", "the", "seems", ",", "but", "it", "was", "controlled", ".", "Well", "done", "all", "at", "Stanground", ",", "good", "effort", "."]
# ::lemmas ["yes", "indeed", ",", "the", "place", "be", "burst", "at", "the", "seem", ",", "but", "it", "be", "control", ".", "well", "do", "all", "at", "Stanground", ",", "good", "effort", "."]
(c5-11 / multi-sentence
       :snt1 (c5-4 / contrast-01
                   :ARG1 (c5-9 / burst-02
                               :ARG1 (c5-10 / place)
                               :ARG1-of (c5-0 / seem-01))
                   :ARG2 (c5-1 / control-01
                               :ARG1 c5-10)
                   :mod (c5-5 / indeed))
       :snt2 (c5-2 / do-02
                   :ARG1 (c5-3 / all)
                   :location (c5-7 / city
                                   :name (c5-12 / name
                                                :op1 "Stanground"))
                   :ARG1-of (c5-6 / well-09))
       :snt3 (c5-13 / effort-01
                    :ARG1-of (c5-8 / good-02)))

# ::snt You too Dee.
# ::tokens ["You", "too", "Dee", "."]
# ::lemmas ["you", "too", "Dee", "."]
(c6-0 / say-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-5 / you
                  :mod (c6-1 / too))
      :ARG2 (c6-2 / person
                  :name (c6-4 / name
                              :op1 "Dee")))

# ::snt Good job done hope alls good with you and family xxx love Dee xxxx stay safe
# ::tokens ["Good", "job", "done", "hope", "alls", "good", "with", "you", "and", "family", "xxx", "love", "Dee", "xxxx", "stay", "safe"]
# ::lemmas ["good", "job", "do", "hope", "all", "good", "with", "you", "and", "family", "xxx", "love", "Dee", "xxxx", "stay", "safe"]
(c7-11 / multi-sentence
       :snt1 (c7-0 / do-02
                   :ARG1 (c7-9 / job
                               :ARG1-of (c7-8 / good-02)))
       :snt2 (c7-5 / hope-01
                   :ARG1 (c7-13 / good-02
                                :ARG1 (c7-3 / all)
                                :topic (c7-14 / and
                                              :op1 (c7-6 / you)
                                              :op2 (c7-4 / family))))
       :snt3 (c7-1 / stay-01
                   :ARG1 (c7-10 / person
                                :name (c7-12 / name
                                             :op1 "Dee")
                                :ARG0-of (c7-7 / love-01))
                   :ARG3 (c7-2 / safe-01
                               :ARG1 c7-10)))

# ::snt I had mine today too( fellow msers).
# ::tokens ["I", "had", "mine", "today", "too", "(", "fellow", "msers", ")", "."]
# ::lemmas ["i", "have", "mine", "today", "too", "(", "fellow", "mser", ")", "."]
(c8-3 / have-03
      :ARG0 (c8-7 / i)
      :ARG1 (c8-5 / thing
                  :poss c8-7)
      :mod (c8-2 / too)
      :time (c8-9 / today)
      :ARG1-of (c8-8 / mean-01
                     :ARG2 (c8-0 / fellow
                                 :domain (c8-6 / person
                                               :ARG0-of (c8-4 / post-01
                                                              :mod (c8-1 / msn1))))))

# ::snt Great to hear this. Hopefully get our first one by May.
# ::tokens ["Great", "to", "hear", "this", ".", "Hopefully", "get", "our", "first", "one", "by", "May."]
# ::lemmas ["great", "to", "hear", "this", ".", "hopefully", "get", "our", "first", "one", "by", "May."]
(c9-8 / multi-sentence
      :snt1 (c9-6 / great
                  :domain (c9-2 / hear-01
                                :ARG1 (c9-5 / this)))
      :snt2 (c9-7 / hope-01
                  :ARG1 (c9-10 / get-01
                               :ARG0 (c9-1 / we)
                               :ARG1 (c9-4 / one
                                           :ord (c9-3 / ordinal-entity
                                                      :value 1))
                               :time (c9-9 / by
                                           :op1 (c9-0 / date-entity
                                                      :month 5)))))

# ::snt Good news Sir !
# ::tokens ["Good", "news", "Sir", "!"]
# ::lemmas ["good", "news", "Sir", "!"]
(c10-0 / say-01
       :ARG1 (c10-2 / news
                    :ARG1-of (c10-3 / good-02))
       :ARG2 (c10-1 / sir)
       :mode expressive)

# ::snt So very glad to hear. Yes they are busy places. I have done a couple a volunteering shifts at a vaccination centre as a Marshall to keep the queue moving, but all done very safely. Take care.
# ::tokens ["So", "very", "glad", "to", "hear", ".", "Yes", "they", "are", "busy", "places", ".", "I", "have", "done", "a", "couple", "a", "volunteering", "shifts", "at", "a", "vaccination", "centre", "as", "a", "Marshall", "to", "keep", "the", "queue", "moving", ",", "but", "all", "done", "very", "safely", ".", "Take", "care", "."]
# ::lemmas ["so", "very", "glad", "to", "hear", ".", "yes", "they", "be", "busy", "place", ".", "i", "have", "do", "a", "couple", "a", "volunteering", "shift", "at", "a", "vaccination", "centre", "as", "a", "Marshall", "to", "keep", "the", "queue", "move", ",", "but", "all", "do", "very", "safely", ".", "take", "care", "."]
(c11-11 / multi-sentence
        :snt1 (c11-10 / glad-02
                      :ARG0 (c11-21 / hear-01)
                      :degree (c11-8 / very))
        :snt2 (c11-24 / place
                      :ARG1-of (c11-22 / busy-02)
                      :domain (c11-9 / they)
                      :mod (c11-17 / yes))
        :snt3 (c11-5 / contrast-01
                     :ARG1 (c11-19 / volunteer-01
                                   :ARG0 (c11-4 / i)
                                   :ARG1 (c11-13 / shift
                                                 :quant (c11-0 / couple))
                                   :location (c11-7 / center
                                                    :mod (c11-15 / vaccinate-01))
                                   :manner (c11-16 / company
                                                   :name (c11-12 / name
                                                                 :op1 "Marshall"))
                                   :purpose (c11-25 / keep-02
                                                    :ARG0 c11-4
                                                    :ARG1 (c11-20 / move-01
                                                                  :ARG1 (c11-2 / queue))))
                     :ARG2 (c11-1 / do-02
                                  :ARG0 c11-4
                                  :ARG1 (c11-18 / all)
                                  :ARG0-of (c11-23 / safe-01
                                                   :degree (c11-3 / very))))
        :snt4 (c11-14 / care-03
                      :ARG1-of (c11-6 / take-01)))

# ::snt Stay safe love.x
# ::tokens ["Stay", "safe", "love.x"]
# ::lemmas ["stay", "safe", "love.x"]
(c12-0 / stay-01
       :ARG1 (c12-2 / love)
       :ARG3 (c12-1 / safe-01
                    :ARG1 c12-2))

# ::snt Welcome fellow vaccine taker.
# ::tokens ["Welcome", "fellow", "vaccine", "taker", "."]
# ::lemmas ["welcome", "fellow", "vaccine", "taker", "."]
(c13-1 / welcome-01
       :ARG1 (c13-4 / person
                    :ARG0-of (c13-3 / taker-01
                                    :ARG1 (c13-2 / vaccine))
                    :mod (c13-0 / fellow)))
