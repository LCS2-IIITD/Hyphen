# ::snt It's only fair - you give me an injection...
# ::tokens ["It", "'s", "only", "fair", "-", "you", "give", "me", "an", "injection", "..."]
# ::lemmas ["it", "be", "only", "fair", "-", "you", "give", "i", "an", "injection", "..."]
(c1-0 / fair-01
      :ARG1 (c1-3 / give-01
                  :ARG0 (c1-5 / you)
                  :ARG1 (c1-4 / inject-01)
                  :ARG2 (c1-1 / i))
      :mod (c1-2 / only))

# ::snt i'd tell her i'll trade her for a free ticket tomorrow
# ::tokens ["i", "'d", "tell", "her", "i", "'ll", "trade", "her", "for", "a", "free", "ticket", "tomorrow"]
# ::lemmas ["i", "would", "tell", "she", "i", "'ll", "trade", "she", "for", "a", "free", "ticket", "tomorrow"]
(c3-4 / tell-01
      :ARG0 (c3-5 / i)
      :ARG1 (c3-2 / trade-01
                  :ARG0 c3-5
                  :ARG1 (c3-0 / she)
                  :ARG3 (c3-6 / ticket
                              :ARG1-of (c3-1 / free-03))
                  :time (c3-3 / tomorrow))
      :ARG2 c3-0)

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c4-0 / laugh-01
      :manner (c4-1 / loud)
      :mode expressive)

# ::snt Jon jones calling dibs
# ::tokens ["Jon", "jones", "calling", "dibs"]
# ::lemmas ["Jon", "jones", "call", "dib"]
(c7-3 / call-10
      :ARG0 (c7-1 / person
                  :name (c7-2 / name
                              :op1 "Jon"
                              :op2 "Jones"))
      :ARG1 (c7-0 / dib))

# ::snt I swear i just watch this episode last night.. rewatching the whole show for the th time
# ::tokens ["I", "swear", "i", "just", "watch", "this", "episode", "last", "night", "..", "rewatching", "the", "whole", "show", "for", "the", "th", "time"]
# ::lemmas ["i", "swear", "i", "just", "watch", "this", "episode", "last", "night", "..", "rewatche", "the", "whole", "show", "for", "the", "th", "time"]
(c8-0 / swear-01
      :ARG0 (c8-10 / i)
      :ARG1 (c8-3 / and
                  :op1 (c8-4 / watch-01
                             :ARG0 c8-10
                             :ARG1 (c8-14 / episode
                                          :mod (c8-7 / this))
                             :time (c8-1 / date-entity
                                         :dayperiod (c8-11 / night)
                                         :mod (c8-12 / yesterday))
                             :mod (c8-9 / just))
                  :op2 (c8-13 / watch-01
                              :ARG0 c8-10
                              :ARG1 (c8-2 / show
                                          :mod (c8-8 / whole))
                              :ord (c8-6 / ordinal-entity
                                         :value (c8-5 / value-interval
                                                      :op1 1
                                                      :op2 2)))))

# ::snt : (
# ::tokens [":", "("]
# ::lemmas [":", "("]
(c9-0 / emoticon)

# ::snt I dead ass didnt realize I had to get one to go until I saw this post
# ::tokens ["I", "dead", "ass", "did", "nt", "realize", "I", "had", "to", "get", "one", "to", "go", "until", "I", "saw", "this", "post"]
# ::lemmas ["i", "dead", "ass", "do", "not", "realize", "i", "have", "to", "get", "one", "to", "go", "until", "i", "see", "this", "post"]
(c10-8 / realize-01
       :ARG0 (c10-11 / i
                     :mod (c10-2 / ass
                                 :ARG1-of (c10-0 / die-01)))
       :ARG1 (c10-6 / obligate-01
                    :ARG1 c10-11
                    :ARG2 (c10-10 / get-04
                                  :ARG0 c10-11
                                  :ARG1 (c10-12 / go-01
                                                :ARG1 (c10-4 / one))))
       :time (c10-5 / until
                    :op1 (c10-1 / see-01
                                :ARG0 c10-11
                                :ARG1 (c10-7 / thing
                                             :ARG1-of (c10-9 / post-01)
                                             :mod (c10-3 / this))))
       :polarity -)

# ::snt Still better than AstraZeneca
# ::tokens ["Still", "better", "than", "AstraZeneca"]
# ::lemmas ["still", "well", "than", "AstraZeneca"]
(c11-2 / have-degree-91
       :ARG2 (c11-3 / good-02)
       :ARG3 (c11-4 / more)
       :ARG4 (c11-1 / company
                    :name (c11-5 / name
                                 :op1 "AstraZeneca"))
       :mod (c11-0 / still))

# ::snt Follow your heart
# ::tokens ["Follow", "your", "heart"]
# ::lemmas ["follow", "your", "heart"]
(c12-2 / follow-02
       :ARG0 (c12-1 / you
                    :part (c12-0 / heart
                                 :ARG1-of c12-2))
       :mode imperative)

# ::snt None of this is normal
# ::tokens ["None", "of", "this", "is", "normal"]
# ::lemmas ["none", "of", "this", "be", "normal"]
(c14-0 / normal-02
       :ARG1 (c14-2 / this
                    :quant (c14-1 / none)))

# ::snt This is from breaking bad
# ::tokens ["This", "is", "from", "breaking", "bad"]
# ::lemmas ["this", "be", "from", "break", "bad"]
(c16-2 / this
       :ARG1-of (c16-3 / cause-01
                       :ARG0 (c16-0 / break-13
                                    :ARG1-of (c16-1 / bad-07))))

# ::snt not to my knowledge
# ::tokens ["not", "to", "my", "knowledge"]
# ::lemmas ["not", "to", "my", "knowledge"]
(c17-1 / know-01
       :ARG0 (c17-0 / i)
       :polarity -)

# ::snt Is this a movie lol
# ::tokens ["Is", "this", "a", "movie", "lol"]
# ::lemmas ["be", "this", "a", "movie", "lol"]
(c18-4 / movie
       :polarity (c18-0 / amr-unknown)
       :domain (c18-1 / this)
       :ARG2-of (c18-2 / laugh-01
                       :manner (c18-3 / loud)))

# ::snt Have tickets gone on sale yet?
# ::tokens ["Have", "tickets", "gone", "on", "sale", "yet", "?"]
# ::lemmas ["have", "ticket", "go", "on", "sale", "yet", "?"]
(c20-0 / sell-01
       :polarity (c20-1 / amr-unknown)
       :ARG1 (c20-2 / ticket)
       :time (c20-3 / yet))

# ::snt That new vaccine makes me feel funny. Is that normal?
# ::tokens ["That", "new", "vaccine", "makes", "me", "feel", "funny", ".", "Is", "that", "normal", "?"]
# ::lemmas ["that", "new", "vaccine", "make", "i", "feel", "funny", ".", "be", "that", "normal", "?"]
(c21-9 / multi-sentence
       :snt1 (c21-2 / make-02
                    :ARG0 (c21-5 / vaccine
                                 :ARG1-of (c21-10 / new-01)
                                 :mod (c21-6 / that))
                    :ARG1 (c21-1 / feel-01
                                 :ARG0 (c21-8 / i)
                                 :ARG1 (c21-4 / funny-02
                                              :ARG1 c21-8)))
       :snt2 (c21-7 / normal-02
                    :ARG1 (c21-3 / that)
                    :polarity (c21-0 / amr-unknown)))

# ::snt Paulo Costa's hotel room
# ::tokens ["Paulo", "Costa", "'s", "hotel", "room"]
# ::lemmas ["Paulo", "Costa", "'s", "hotel", "room"]
(c22-3 / room
       :mod (c22-1 / hotel)
       :poss (c22-0 / person
                    :name (c22-2 / name
                                 :op1 "Paulo"
                                 :op2 "Costa")))
