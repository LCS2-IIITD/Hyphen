# ::snt I get mine on Tuesday congratulations!
# ::tokens ["I", "get", "mine", "on", "Tuesday", "congratulations", "!"]
# ::lemmas ["i", "get", "mine", "on", "Tuesday", "congratulation", "!"]
(c1-1 / and
      :op1 (c1-5 / get-01
                 :ARG0 (c1-6 / i)
                 :ARG1 (c1-4 / thing
                             :poss c1-6)
                 :time (c1-0 / date-entity
                             :weekday (c1-3 / tuesday)))
      :op2 (c1-2 / congratulate-01))

# ::snt Yay!
# ::tokens ["Yay", "!"]
# ::lemmas ["Yay", "!"]
(c2-0 / yay
      :mode expressive)

# ::snt Yay!!!
# ::tokens ["Yay", "!", "!", "!"]
# ::lemmas ["Yay", "!", "!", "!"]
(c4-0 / yay
      :mode expressive)

# ::snt I get my first on Monday. Are you experiencing any side effects?
# ::tokens ["I", "get", "my", "first", "on", "Monday", ".", "Are", "you", "experiencing", "any", "side", "effects", "?"]
# ::lemmas ["i", "get", "my", "first", "on", "Monday", ".", "be", "you", "experience", "any", "side", "effect", "?"]
(c5-10 / multi-sentence
       :snt1 (c5-8 / get-01
                   :ARG0 (c5-9 / i)
                   :ARG1 (c5-7 / thing
                               :ord (c5-6 / ordinal-entity
                                          :value 1)
                               :poss c5-9)
                   :time (c5-0 / date-entity
                               :weekday (c5-3 / monday)))
       :snt2 (c5-13 / experience-01
                    :ARG0 (c5-11 / you)
                    :ARG1 (c5-4 / effect-03
                                :ARG1 (c5-5 / event
                                            :mod (c5-1 / side))
                                :mod (c5-2 / any))
                    :polarity (c5-12 / amr-unknown)))

# ::snt I am done with both shots and the waiting period. But nowhere to go!
# ::tokens ["I", "am", "done", "with", "both", "shots", "and", "the", "waiting", "period", ".", "But", "nowhere", "to", "go", "!"]
# ::lemmas ["i", "be", "do", "with", "both", "shot", "and", "the", "waiting", "period", ".", "but", "nowhere", "to", "go", "!"]
(c6-9 / multi-sentence
      :snt1 (c6-7 / be-done-08
                  :ARG0 (c6-8 / i)
                  :ARG1 (c6-2 / and
                              :op1 (c6-0 / shoot-02
                                         :mod (c6-1 / both))
                              :op2 (c6-5 / period
                                         :time-of (c6-4 / wait-01
                                                        :ARG1 c6-8))))
      :snt2 (c6-3 / contrast-01
                  :ARG2 (c6-10 / nowhere
                               :ARG4-of (c6-6 / go-01))))

# ::snt Yay!!!
# ::tokens ["Yay", "!", "!", "!"]
# ::lemmas ["Yay", "!", "!", "!"]
(c8-0 / yay
      :mode expressive)

# ::snt Congrats!
# ::tokens ["Congrats", "!"]
# ::lemmas ["Congrats", "!"]
(c9-0 / congratulate-01
      :mode expressive)

# ::snt Yay! Now stay masked and everything. Takes a month just to get to % immunity. Nothing for days acc to CDC.
# ::tokens ["Yay", "!", "Now", "stay", "masked", "and", "everything", ".", "Takes", "a", "month", "just", "to", "get", "to", "%", "immunity", ".", "Nothing", "for", "days", "acc", "to", "CDC", "."]
# ::lemmas ["Yay", "!", "now", "stay", "masked", "and", "everything", ".", "take", "a", "month", "just", "to", "get", "to", "%", "immunity", ".", "nothing", "for", "days", "acc", "to", "CDC", "."]
(c11-7 / multi-sentence
       :snt1 (c11-15 / yay
                     :mode expressive)
       :snt2 (c11-12 / stay-01
                     :ARG1 (c11-16 / you)
                     :ARG3 (c11-18 / and
                                   :op1 (c11-19 / mask-01)
                                   :op2 (c11-11 / everything))
                     :time (c11-8 / now)
                     :mode imperative)
       :snt3 (c11-4 / take-10
                    :ARG0 (c11-5 / get-05
                                 :ARG1 (c11-2 / immune-02)
                                 :mod (c11-20 / just))
                    :ARG1 (c11-3 / temporal-quantity
                                 :unit (c11-13 / month)
                                 :quant 1))
       :snt4 (c11-1 / nothing
                    :duration (c11-6 / multiple
                                     :op1 (c11-9 / temporal-quantity
                                                 :unit (c11-0 / day)
                                                 :quant 1))
                    :ARG1-of (c11-10 / accord-02
                                     :ARG2 (c11-17 / government-organization
                                                   :name (c11-14 / name
                                                                 :op1 "CDC")))))

# ::snt pro tip: if you take a magnifying glass when u get the second dose of the vaccine, theyll let you look at your chip before they put it in
# ::tokens ["pro", "tip", ":", "if", "you", "take", "a", "magnifying", "glass", "when", "u", "get", "the", "second", "dose", "of", "the", "vaccine", ",", "they", "ll", "let", "you", "look", "at", "your", "chip", "before", "they", "put", "it", "in"]
# ::lemmas ["pro", "tip", ":", "if", "you", "take", "a", "magnify", "glass", "when", "u", "get", "the", "second", "dose", "of", "the", "vaccine", ",", "they", "ll", "let", "you", "look", "at", "your", "chip", "before", "they", "put", "it", "in"]
(c12-7 / tip-05
       :ARG1 (c12-8 / let-01
                    :ARG0 (c12-3 / they)
                    :ARG1 (c12-9 / look-01
                                 :ARG0 (c12-14 / you)
                                 :ARG1 (c12-1 / chip
                                              :poss c12-14)
                                 :time (c12-10 / before
                                               :op1 (c12-12 / put-01
                                                            :ARG0 c12-3
                                                            :ARG1 (c12-4 / vaccine)))))
       :ARG2 c12-14
       :mod (c12-6 / pro)
       :condition (c12-2 / take-01
                         :ARG0 c12-14
                         :ARG1 (c12-11 / glass
                                       :ARG0-of (c12-13 / magnify-01))
                         :time (c12-0 / dose-01
                                      :ARG1 c12-14
                                      :ARG2 c12-4
                                      :ord (c12-5 / ordinal-entity
                                                  :value 2))))

# ::snt Yea got mine Tues Ole Ole Ole Ole
# ::tokens ["Yea", "got", "mine", "Tues", "Ole", "Ole", "Ole", "Ole"]
# ::lemmas ["Yea", "get", "mine", "Tues", "Ole", "Ole", "Ole", "Ole"]
(c14-0 / say-01
       :ARG0 (c14-6 / i)
       :ARG1 (c14-5 / get-01
                    :ARG0 (c14-3 / they)
                    :ARG1 c14-6
                    :time (c14-1 / date-entity
                                 :weekday (c14-2 / tuesday)))
       :ARG2 (c14-4 / person
                    :name (c14-7 / name
                                 :op1 "Ole"
                                 :op2 "Ole")))

# ::snt Congratulations! I get my second Vaccine next Wednesday!!
# ::tokens ["Congratulations", "!", "I", "get", "my", "second", "Vaccine", "next", "Wednesday", "!", "!"]
# ::lemmas ["congratulation", "!", "i", "get", "my", "second", "Vaccine", "next", "Wednesday", "!", "!"]
(c15-7 / multi-sentence
       :snt1 (c15-1 / congratulate-01
                    :ARG1 (c15-6 / i)
                    :mode expressive)
       :snt2 (c15-5 / get-01
                    :ARG0 c15-6
                    :ARG1 (c15-3 / vaccine
                                 :ord (c15-4 / ordinal-entity
                                             :value 2)
                                 :poss c15-6)
                    :time (c15-0 / date-entity
                                 :weekday (c15-2 / wednesday)
                                 :mod (c15-8 / next))))

# ::snt Good luck!
# ::tokens ["Good", "luck", "!"]
# ::lemmas ["good", "luck", "!"]
(c16-1 / luck
       :ARG1-of (c16-0 / good-02)
       :mode expressive)

# ::snt Im getting J&amp;J tomorrow AM.
# ::tokens ["I", "m", "getting", "J&amp;J", "tomorrow", "AM", "."]
# ::lemmas ["i", "m", "get", "J&amp;J", "tomorrow", "am", "."]
(c17-6 / get-01
       :ARG0 (c17-7 / i)
       :ARG1 (c17-1 / and
                    :op1 (c17-4 / thing
                                :name (c17-8 / name
                                             :op1 "J&J"))
                    :op2 (c17-2 / thing
                                :name (c17-5 / name
                                             :op1 "J&J")))
       :time (c17-0 / date-entity
                    :dayperiod (c17-3 / night)
                    :mod (c17-9 / tomorrow)))

# ::snt I used to joke that people believed the paranoid nonsense but didnt realize they existed... why would Bill Gates care to bug anyone at our level? And if he did... what bad would come of it, given his history?
# ::tokens ["I", "used", "to", "joke", "that", "people", "believed", "the", "paranoid", "nonsense", "but", "did", "nt", "realize", "they", "existed", "...", "why", "would", "Bill", "Gates", "care", "to", "bug", "anyone", "at", "our", "level", "?", "And", "if", "he", "did", "...", "what", "bad", "would", "come", "of", "it", ",", "given", "his", "history", "?"]
# ::lemmas ["i", "use", "to", "joke", "that", "people", "believe", "the", "paranoid", "nonsense", "but", "do", "not", "realize", "they", "exist", "...", "why", "would", "Bill", "Gates", "care", "to", "bug", "anyone", "at", "our", "level", "?", "and", "if", "he", "do", "...", "what", "bad", "would", "come", "of", "it", ",", "give", "his", "history", "?"]
(c18-10 / multi-sentence
        :snt1 (c18-24 / joke-01
                      :ARG0 (c18-5 / i)
                      :ARG2 (c18-6 / contrast-01
                                   :ARG1 (c18-23 / believe-01
                                                 :ARG0 (c18-25 / person)
                                                 :ARG1 (c18-11 / nonsense
                                                               :mod (c18-21 / paranoid)))
                                   :ARG2 (c18-9 / realize-01
                                                :ARG0 c18-25
                                                :ARG1 (c18-13 / exist-01
                                                              :ARG1 c18-11)
                                                :polarity -))
                      :time (c18-20 / use-03))
        :snt2 (c18-0 / care-02
                     :ARG0 (c18-15 / person
                                   :name (c18-3 / name
                                                :op1 "Bill"
                                                :op2 "Gates"))
                     :ARG1 (c18-17 / bug-01
                                   :ARG0 c18-15
                                   :ARG1 (c18-18 / anyone
                                                 :location (c18-22 / level
                                                                   :poss (c18-7 / we))))
                     :ARG1-of (c18-8 / cause-01
                                     :ARG0 (c18-12 / amr-unknown)))
        :snt3 (c18-1 / and
                     :op2 (c18-19 / have-condition-91
                                  :ARG1 (c18-26 / amr-unknown
                                                :ARG1-of (c18-14 / bad-07)
                                                :ARG1-of (c18-16 / cause-01
                                                                 :ARG0 (c18-4 / history
                                                                              :poss c18-15)))
                                  :ARG2 (c18-2 / do-02
                                               :ARG0 c18-15))))

# ::snt Woohoooo
# ::tokens ["Woohoooo"]
# ::lemmas ["Woohoooo"]
(c19-0 / Woohoooo
       :mode expressive)

# ::snt I did, too!
# ::tokens ["I", "did", ",", "too", "!"]
# ::lemmas ["i", "do", ",", "too", "!"]
(c20-2 / event
       :mod (c20-0 / i)
       :mod (c20-1 / too))

# ::snt WooHoo!
# ::tokens ["WooHoo", "!"]
# ::lemmas ["WooHoo", "!"]
(c21-0 / wooHoo
       :mode expressive)

# ::snt Awesome. and done for me.
# ::tokens ["Awesome", ".", "and", "done", "for", "me", "."]
# ::lemmas ["Awesome", ".", "and", "do", "for", "i", "."]
(c22-2 / and
       :op1 (c22-3 / awe-01)
       :op2 (c22-0 / be-done-for-08
                   :ARG1 (c22-1 / i)))

# ::snt YAHHOOO.Now don't let your guard down. Don't let others sense of security hurt you. Like that stupid Rand Paul.
# ::tokens ["YAHHOOO.Now", "do", "n't", "let", "your", "guard", "down", ".", "Do", "n't", "let", "others", "sense", "of", "security", "hurt", "you", ".", "Like", "that", "stupid", "Rand", "Paul", "."]
# ::lemmas ["yahhooo.now", "do", "not", "let", "your", "guard", "down", ".", "do", "not", "let", "other", "sense", "of", "security", "hurt", "you", ".", "like", "that", "stupid", "Rand", "Paul", "."]
(c23-14 / multi-sentence
        :snt1 (c23-16 / yep
                      :mode expressive)
        :snt2 (c23-9 / let-01
                     :ARG0 (c23-17 / you)
                     :ARG1 (c23-0 / down-01
                                  :ARG1 (c23-11 / guard-01
                                                :ARG0 c23-17))
                     :time (c23-15 / now)
                     :polarity -
                     :mode imperative)
        :snt3 (c23-10 / let-01
                      :ARG0 (c23-1 / you)
                      :ARG1 (c23-4 / hurt-01
                                   :ARG0 (c23-2 / sense-01
                                                :ARG0 (c23-6 / other)
                                                :ARG1 (c23-12 / secure-02
                                                              :ARG1 c23-1))
                                   :ARG1 c23-1)
                      :mode imperative
                      :polarity -)
        :snt4 (c23-8 / resemble-01
                     :ARG2 (c23-13 / person
                                   :name (c23-3 / name
                                                :op1 "Rand"
                                                :op2 "Paul")
                                   :mod (c23-5 / stupid)
                                   :mod (c23-7 / that))))

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c25-0 / congratulate-01)

# ::snt I just got my first vaccine about an hour ago.
# ::tokens ["I", "just", "got", "my", "first", "vaccine", "about", "an", "hour", "ago", "."]
# ::lemmas ["i", "just", "get", "my", "first", "vaccine", "about", "an", "hour", "ago", "."]
(c26-6 / get-01
       :ARG0 (c26-8 / i)
       :ARG1 (c26-2 / vaccine
                    :ord (c26-3 / ordinal-entity
                                :value 1)
                    :poss c26-8)
       :time (c26-9 / before
                    :op1 (c26-5 / now)
                    :quant (c26-0 / about
                                  :op1 (c26-4 / temporal-quantity
                                              :unit (c26-1 / hour)
                                              :quant 1)))
       :mod (c26-7 / just))

# ::snt Go LG.
# ::tokens ["Go", "LG", "."]
# ::lemmas ["go", "LG", "."]
(c27-0 / go-03
       :ARG0 (c27-2 / company
                    :name (c27-1 / name
                                 :op1 "LG"))
       :mode imperative)

# ::snt Like I didn't have anything done.
# ::tokens ["Like", "I", "did", "n't", "have", "anything", "done", "."]
# ::lemmas ["like", "i", "do", "not", "have", "anything", "do", "."]
(c28-3 / resemble-01
       :ARG2 (c28-0 / do-02
                    :ARG0 (c28-1 / i)
                    :ARG1 (c28-2 / anything)
                    :polarity -))

# ::snt Yay!!!
# ::tokens ["Yay", "!", "!", "!"]
# ::lemmas ["Yay", "!", "!", "!"]
(c29-0 / yay
       :mode expressive)

# ::snt Me too !
# ::tokens ["Me", "too", "!"]
# ::lemmas ["i", "too", "!"]
(c31-0 / i
       :mod (c31-1 / too))

# ::snt Yay!
# ::tokens ["Yay", "!"]
# ::lemmas ["Yay", "!"]
(c33-0 / yay
       :mode expressive)

# ::snt Me too!
# ::tokens ["Me", "too", "!"]
# ::lemmas ["i", "too", "!"]
(c34-0 / i
       :mod (c34-1 / too))

# ::snt Yea!! Happy for you.
# ::tokens ["Yea", "!", "!", "Happy", "for", "you", "."]
# ::lemmas ["yea", "!", "!", "happy", "for", "you", "."]
(c36-0 / multi-sentence
       :snt1 (c36-1 / yea)
       :snt2 (c36-3 / happy-01
                    :ARG1 (c36-2 / you)))

# ::snt WooHoo!!!!
# ::tokens ["WooHoo", "!", "!", "!", "!"]
# ::lemmas ["WooHoo", "!", "!", "!", "!"]
(c39-0 / woohoo
       :mode expressive)

# ::snt Got mine Wednesday. Thurs I was a little sore and very tired. Today Im just a little tired. Its like Im recovering from a minor illness that I never actually had.
# ::tokens ["Got", "mine", "Wednesday", ".", "Thurs", "I", "was", "a", "little", "sore", "and", "very", "tired", ".", "Today", "I", "m", "just", "a", "little", "tired", ".", "Its", "like", "I", "m", "recovering", "from", "a", "minor", "illness", "that", "I", "never", "actually", "had", "."]
# ::lemmas ["got", "mine", "Wednesday", ".", "thur", "i", "be", "a", "little", "sore", "and", "very", "tired", ".", "Today", "i", "m", "just", "a", "little", "tired", ".", "its", "like", "i", "m", "recover", "from", "a", "minor", "illness", "that", "i", "never", "actually", "have", "."]
(c40-10 / multi-sentence
        :snt1 (c40-9 / get-01
                     :ARG0 (c40-1 / i)
                     :ARG1 (c40-7 / thing
                                  :poss c40-1)
                     :time (c40-0 / date-entity
                                  :weekday (c40-3 / wednesday)))
        :snt2 (c40-18 / and
                      :op1 (c40-14 / sore
                                   :domain (c40-15 / i)
                                   :degree (c40-22 / little))
                      :op2 (c40-4 / tire-01
                                  :ARG1 c40-15
                                  :degree (c40-6 / very))
                      :time (c40-17 / date-entity
                                    :weekday (c40-11 / thursday)))
        :snt3 (c40-8 / resemble-01
                     :ARG1 (c40-16 / it)
                     :ARG2 (c40-5 / recover-01
                                  :ARG1 (c40-21 / i)
                                  :ARG2 (c40-2 / ill-01
                                               :ARG1 c40-21
                                               :ARG1-of (c40-19 / minor-01)
                                               :ARG1-of (c40-20 / have-03
                                                                :ARG0 c40-21
                                                                :time (c40-13 / ever)
                                                                :ARG1-of (c40-12 / actual-02)
                                                                :polarity -)))))

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c41-0 / congratulate-01)

# ::snt Yay!!!
# ::tokens ["Yay", "!", "!", "!"]
# ::lemmas ["Yay", "!", "!", "!"]
(c42-0 / yay
       :mode expressive)

# ::snt Congratulations! Doesn't it feel unbelievable?
# ::tokens ["Congratulations", "!", "Does", "n't", "it", "feel", "unbelievable", "?"]
# ::lemmas ["congratulation", "!", "do", "not", "it", "feel", "unbelievable", "?"]
(c44-5 / multi-sentence
       :snt1 (c44-2 / congratulate-01)
       :snt2 (c44-1 / feel-01
                    :ARG1 (c44-4 / possible-01
                                 :ARG1 (c44-3 / believe-01)
                                 :polarity -)
                    :polarity (c44-0 / amr-unknown)
                    :polarity -))

# ::snt Congratulations! Me too!
# ::tokens ["Congratulations", "!", "Me", "too", "!"]
# ::lemmas ["congratulation", "!", "i", "too", "!"]
(c45-3 / multi-sentence
       :snt1 (c45-0 / congratulate-01
                    :ARG1 (c45-4 / you)
                    :mode expressive)
       :snt2 (c45-2 / i
                    :mod (c45-1 / too)))

# ::snt I just got mine min ago!
# ::tokens ["I", "just", "got", "mine", "min", "ago", "!"]
# ::lemmas ["i", "just", "get", "mine", "min", "ago", "!"]
(c46-3 / get-01
       :ARG0 (c46-5 / i)
       :ARG1 (c46-1 / thing
                    :poss c46-5)
       :mod (c46-4 / just)
       :time (c46-7 / before
                    :op1 (c46-2 / now)
                    :quant (c46-0 / temporal-quantity
                                  :unit (c46-6 / minute)
                                  :quant 1))
       :mode expressive)

# ::snt Congrats! Me too!
# ::tokens ["Congrats", "!", "Me", "too", "!"]
# ::lemmas ["Congrats", "!", "i", "too", "!"]
(c47-3 / multi-sentence
       :snt1 (c47-0 / congratulate-01
                    :ARG1 (c47-4 / you)
                    :mode expressive)
       :snt2 (c47-2 / i
                    :mod (c47-1 / too)))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c48-0 / congratulate-01
       :mode expressive)

# ::snt Same.
# ::tokens ["Same", "."]
# ::lemmas ["same", "."]
(c49-0 / same-01)
