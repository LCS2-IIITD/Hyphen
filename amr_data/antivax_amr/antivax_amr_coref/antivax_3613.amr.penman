# ::snt Next Week!!! Cue the Lonesome Dove Mini Series binge while I contend with nd dose aftermath, if any.Thank you
# ::tokens ["Next", "Week", "!", "!", "!", "Cue", "the", "Lonesome", "Dove", "Mini", "Series", "binge", "while", "I", "contend", "with", "nd", "dose", "aftermath", ",", "if", "any", ".", "Thank", "you"]
# ::lemmas ["Next", "Week", "!", "!", "!", "Cue", "the", "Lonesome", "Dove", "Mini", "Series", "binge", "while", "i", "contend", "with", "nd", "dose", "aftermath", ",", "if", "any", ".", "thank", "you"]
(c3-11 / multi-sentence
       :snt1 (c3-5 / week
                   :mod (c3-12 / next))
       :snt2 (c3-4 / Cue-01
                   :ARG1 (c3-9 / binge-01
                               :ARG0 (c3-10 / i)
                               :ARG1 (c3-1 / broadcast-program
                                           :name (c3-8 / name
                                                       :op1 "Lonesome"
                                                       :op2 "Dove"
                                                       :op3 "Mini"
                                                       :op4 "Series")))
                   :time (c3-0 / contend-01
                               :ARG0 c3-10
                               :ARG1 (c3-3 / aftermath-01
                                           :ARG1 (c3-2 / dose-01
                                                       :mod (c3-6 / blood))
                                           :mod (c3-14 / any)))
                   :mode expressive)
       :snt3 (c3-7 / thank-01
                   :ARG0 c3-10
                   :mode expressive)
       :ARG1 (c3-13 / you))

# ::snt Yay!!
# ::tokens ["Yay", "!", "!"]
# ::lemmas ["Yay", "!", "!"]
(c5-0 / yay
      :mode expressive)

# ::snt Wonderful, I get my second one on /10
# ::tokens ["Wonderful", ",", "I", "get", "my", "second", "one", "on", "/10"]
# ::lemmas ["wonderful", ",", "i", "get", "my", "second", "one", "on", "/10"]
(c6-6 / multi-sentence
      :snt1 (c6-0 / wonderful-03)
      :snt2 (c6-4 / get-01
                  :ARG0 (c6-5 / i)
                  :ARG1 (c6-2 / one
                              :ord (c6-1 / ordinal-entity
                                         :value 2)
                              :poss c6-5)
                  :medium (c6-7 / broadcast-program
                                :name (c6-3 / name
                                            :op1 " /10"))))
