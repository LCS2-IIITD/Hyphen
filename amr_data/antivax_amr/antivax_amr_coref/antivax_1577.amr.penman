# ::snt That's totally normal, sis! It won't last long.
# ::tokens ["That", "'s", "totally", "normal", ",", "sis", "!", "It", "wo", "n't", "last", "long", "."]
# ::lemmas ["that", "be", "totally", "normal", ",", "sis", "!", "it", "will", "not", "last", "long", "."]
(c1-7 / multi-sentence
      :snt1 (c1-8 / normal-02
                  :ARG1 (c1-2 / that)
                  :degree (c1-1 / total)
                  :ARG1-of (c1-0 / say-01
                                 :ARG2 (c1-5 / sister)))
      :snt2 (c1-3 / last-04
                  :ARG1 (c1-6 / it)
                  :ARG2 (c1-4 / long-03)
                  :polarity -))

# ::snt Hmm im going on hours with this fever wtfffff hmmmm
# ::tokens ["Hmm", "i", "m", "going", "on", "hours", "with", "this", "fever", "wtfffff", "hmmmm"]
# ::lemmas ["hmm", "i", "m", "go", "on", "hours", "with", "this", "fever", "wtfffff", "hmmmm"]
(c2-5 / go-on-15
      :ARG1 (c2-7 / multiple
                  :op1 (c2-4 / temporal-quantity
                             :unit (c2-2 / hour)
                             :quant 1))
      :accompanier (c2-0 / fever
                         :mod (c2-1 / this))
      :mod (c2-6 / hmm
                 :mode expressive)
      :mod (c2-3 / off))

# ::snt -6 hours
# ::tokens ["-6", "hours"]
# ::lemmas ["-6", "hours"]
(c3-1 / temporal-quantity
      :unit (c3-0 / hour)
      :quant 6)

# ::snt How long did your fever last?
# ::tokens ["How", "long", "did", "your", "fever", "last", "?"]
# ::lemmas ["how", "long", "do", "your", "fever", "last", "?"]
(c4-3 / last-01
      :ARG1 (c4-0 / fever
                  :poss (c4-2 / you))
      :ARG2 (c4-1 / amr-unknown))

# ::snt hit me like a truck too but i slept through the fever now its just body aches
# ::tokens ["hit", "me", "like", "a", "truck", "too", "but", "i", "slept", "through", "the", "fever", "now", "its", "just", "body", "aches"]
# ::lemmas ["hit", "i", "like", "a", "truck", "too", "but", "i", "sleep", "through", "the", "fever", "now", "its", "just", "body", "ache"]
(c5-4 / contrast-01
      :ARG1 (c5-6 / hit-01
                  :ARG1 (c5-11 / i)
                  :ARG1-of (c5-8 / resemble-01
                                 :ARG2 (c5-7 / truck))
                  :mod (c5-5 / too))
      :ARG2 (c5-0 / sleep-01
                  :ARG0 c5-11
                  :manner (c5-3 / fever)
                  :time (c5-12 / now))
      :ARG1-of (c5-1 / cause-01
                     :ARG0 (c5-2 / ache-01
                                 :ARG0 (c5-9 / body)
                                 :mod (c5-10 / just))))

# ::snt Hope you get well soon Kass
# ::tokens ["Hope", "you", "get", "well", "soon", "Kass"]
# ::lemmas ["hope", "you", "get", "well", "soon", "Kass"]
(c6-0 / say-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-1 / hope-01
                  :ARG0 c6-5
                  :ARG1 (c6-3 / get-well-09
                              :ARG1 (c6-2 / person
                                          :name (c6-6 / name
                                                      :op1 "Kass"))
                              :time (c6-4 / soon)))
      :ARG2 c6-2)

# ::snt I hope things get better for youWe'll be rooting for ya, you got this!
# ::tokens ["I", "hope", "things", "get", "better", "for", "youWe'll", "be", "rooting", "for", "ya", ",", "you", "got", "this", "!"]
# ::lemmas ["i", "hope", "thing", "get", "well", "for", "youwe'll", "be", "root", "for", "ya", ",", "you", "get", "this", "!"]
(c7-12 / multi-sentence
       :snt1 (c7-5 / hope-01
                   :ARG0 (c7-11 / i)
                   :ARG1 (c7-9 / get-03
                               :ARG1 (c7-6 / thing
                                           :ARG1-of (c7-10 / have-degree-91
                                                           :ARG2 (c7-13 / good-02
                                                                        :ARG1 c7-6
                                                                        :ARG2 (c7-7 / you))
                                                           :ARG3 (c7-1 / more)))
                               :ARG2 c7-7))
       :snt2 (c7-8 / root-03
                   :ARG0 (c7-2 / we)
                   :ARG1 (c7-14 / you)
                   :ARG1-of (c7-3 / cause-01
                                  :ARG0 (c7-0 / get-02
                                              :ARG0 c7-14
                                              :ARG1 (c7-4 / this)))))

# ::snt oh no... be safe! hopefully things will improve! hang in there!
# ::tokens ["oh", "no", "...", "be", "safe", "!", "hopefully", "things", "will", "improve", "!", "hang", "in", "there", "!"]
# ::lemmas ["oh", "no", "...", "be", "safe", "!", "hopefully", "thing", "will", "improve", "!", "hang", "in", "there", "!"]
(c8-7 / multi-sentence
      :snt1 (c8-3 / oh-no
                  :mode expressive)
      :snt2 (c8-0 / safe-01
                  :ARG1 (c8-8 / you)
                  :mode imperative)
      :snt3 (c8-2 / hope-01
                  :ARG1 (c8-6 / improve-01
                              :ARG1 (c8-4 / thing)))
      :snt4 (c8-5 / hang-01
                  :ARG0 c8-8
                  :ARG2 (c8-1 / there)
                  :mode imperative))

# ::snt Yessss bestieeeeee
# ::tokens ["Yessss", "bestieeeeee"]
# ::lemmas ["Yessss", "bestieeeeee"]
(c9-2 / have-degree-91
      :ARG1 (c9-3 / you)
      :ARG2 (c9-0 / good-02
                  :ARG1 c9-3)
      :ARG3 (c9-1 / most))

# ::snt You got it bestie
# ::tokens ["You", "got", "it", "bestie"]
# ::lemmas ["you", "get", "it", "bestie"]
(c10-1 / get-02
       :ARG0 (c10-4 / you)
       :ARG1 (c10-2 / it)
       :ARG2 (c10-0 / person
                    :name (c10-3 / name
                                 :op1 "Bestie")))

# ::snt Zane run some sets with me when im better please pleaseeeee
# ::tokens ["Zane", "run", "some", "sets", "with", "me", "when", "i", "m", "better", "please", "pleaseeeee"]
# ::lemmas ["Zane", "run", "some", "set", "with", "i", "when", "i", "m", "well", "please", "pleaseeeee"]
(c11-3 / run-01
       :ARG0 (c11-6 / person
                    :name (c11-8 / name
                                 :op1 "Zane"))
       :ARG1 (c11-0 / set
                    :quant (c11-5 / some))
       :accompanier (c11-1 / i)
       :time (c11-4 / good-02
                    :ARG1 c11-1
                    :ARG2-of (c11-2 / have-degree-91
                                    :ARG1 c11-1
                                    :ARG3 (c11-7 / more)))
       :mode imperative
       :polite +)

# ::snt Enjoy the butterfly wings when it's over!wait, um... maybe just enjoy the heightened immunity I guess. Man... why don't we get wings?
# ::tokens ["Enjoy", "the", "butterfly", "wings", "when", "it", "'s", "over!wait", ",", "um", "...", "maybe", "just", "enjoy", "the", "heightened", "immunity", "I", "guess", ".", "Man", "...", "why", "do", "n't", "we", "get", "wings", "?"]
# ::lemmas ["enjoy", "the", "butterfly", "wing", "when", "it", "be", "over!wait", ",", "um", "...", "maybe", "just", "enjoy", "the", "heighten", "immunity", "i", "guess", ".", "man", "...", "why", "do", "not", "we", "get", "wing", "?"]
(c12-7 / multi-sentence
       :snt1 (c12-9 / enjoy-01
                    :ARG0 (c12-13 / you)
                    :ARG1 (c12-4 / wing
                                 :mod (c12-19 / butterfly))
                    :time (c12-5 / over-01
                                 :ARG1 (c12-2 / it))
                    :mod (c12-18 / um
                                 :mode expressive)
                    :ARG1-of (c12-8 / wait-01
                                    :ARG1-of (c12-15 / mean-01
                                                     :ARG2 (c12-21 / possible-01
                                                                   :ARG1 (c12-17 / enjoy-01
                                                                                 :ARG0 c12-13
                                                                                 :ARG1 (c12-10 / immune-02
                                                                                               :ARG1-of (c12-16 / heighten-01))
                                                                                 :mod (c12-20 / just)
                                                                                 :ARG1-of (c12-6 / guess-01
                                                                                                 :ARG0 (c12-11 / i))
                                                                                 :mode imperative))))
                    :mode imperative)
       :snt2 (c12-12 / get-01
                     :ARG0 (c12-1 / we)
                     :ARG1 (c12-0 / wing)
                     :ARG1-of (c12-3 / cause-01
                                     :ARG0 (c12-14 / amr-unknown))
                     :polarity -))

# ::snt You should start feeling better by late tonight! Just be sure to rest, get fluids, take Tylenol and use an ice pack
# ::tokens ["You", "should", "start", "feeling", "better", "by", "late", "tonight", "!", "Just", "be", "sure", "to", "rest", ",", "get", "fluids", ",", "take", "Tylenol", "and", "use", "an", "ice", "pack"]
# ::lemmas ["you", "should", "start", "feel", "well", "by", "late", "tonight", "!", "just", "be", "sure", "to", "rest", ",", "get", "fluid", ",", "take", "Tylenol", "and", "use", "an", "ice", "pack"]
(c13-8 / multi-sentence
       :snt1 (c13-6 / recommend-01
                    :ARG1 (c13-11 / start-01
                                  :ARG0 (c13-14 / you)
                                  :ARG1 (c13-17 / feel-01
                                                :ARG0 c13-14
                                                :ARG1 (c13-7 / good-02
                                                             :ARG2-of (c13-19 / have-degree-91
                                                                              :ARG1 c13-17
                                                                              :ARG3 (c13-18 / more))))
                                  :time (c13-23 / by
                                                :op1 (c13-22 / late
                                                             :op1 (c13-0 / date-entity
                                                                         :dayperiod (c13-9 / night)
                                                                         :mod (c13-5 / today))))))
       :snt2 (c13-10 / ensure-01
                     :ARG0 (c13-15 / you)
                     :ARG1 (c13-16 / and
                                   :op1 (c13-4 / rest-01
                                               :ARG0 c13-15)
                                   :op2 (c13-13 / get-01
                                                :ARG0 c13-15
                                                :ARG1 (c13-12 / fluid))
                                   :op3 (c13-3 / take-01
                                               :ARG0 c13-15
                                               :ARG1 (c13-25 / product
                                                             :name (c13-1 / name
                                                                          :op1 "Tylenol")))
                                   :op4 (c13-20 / use-01
                                                :ARG0 c13-15
                                                :ARG1 (c13-21 / pack
                                                              :consist-of (c13-2 / ice))))
                     :mod (c13-24 / just)
                     :mode imperative))

# ::snt That sucks fam, it should wear off in a few days.Get well soon!
# ::tokens ["That", "sucks", "fam", ",", "it", "should", "wear", "off", "in", "a", "few", "days", ".", "Get", "well", "soon", "!"]
# ::lemmas ["that", "suck", "fam", ",", "it", "should", "wear", "off", "in", "a", "few", "days", ".", "get", "well", "soon", "!"]
(c14-12 / multi-sentence
        :snt1 (c14-0 / suck-03
                     :ARG0 (c14-7 / that)
                     :ARG1 (c14-3 / family))
        :snt2 (c14-8 / recommend-01
                     :ARG1 (c14-4 / wear-off-02
                                  :ARG1 (c14-11 / it)
                                  :time (c14-2 / after
                                               :op1 (c14-13 / now)
                                               :quant (c14-6 / few
                                                             :op1 (c14-5 / temporal-quantity
                                                                         :unit (c14-1 / day)
                                                                         :quant 1)))))
        :snt3 (c14-9 / get-05
                     :ARG1 (c14-14 / you)
                     :ARG2 (c14-15 / well-05
                                   :ARG1 c14-14)
                     :time (c14-10 / soon)
                     :mode imperative))

# ::snt Please do rest up! I have to fear this soon.
# ::tokens ["Please", "do", "rest", "up", "!", "I", "have", "to", "fear", "this", "soon", "."]
# ::lemmas ["please", "do", "rest", "up", "!", "i", "have", "to", "fear", "this", "soon", "."]
(c15-6 / multi-sentence
       :snt1 (c15-4 / rest-up-02
                    :ARG0 (c15-7 / you)
                    :mode imperative
                    :polite +)
       :snt2 (c15-2 / obligate-01
                    :ARG1 (c15-5 / i)
                    :ARG2 (c15-1 / fear-01
                                 :ARG0 c15-5
                                 :ARG1 (c15-3 / this)
                                 :time (c15-0 / soon))))

# ::snt Feel better Kassy!
# ::tokens ["Feel", "better", "Kassy", "!"]
# ::lemmas ["feel", "well", "Kassy", "!"]
(c16-0 / say-01
       :ARG1 (c16-1 / feel-01
                    :ARG0 (c16-4 / person
                                 :name (c16-6 / name
                                              :op1 "Kassy"))
                    :ARG1 (c16-3 / good-02
                                 :ARG2-of (c16-2 / have-degree-91
                                                 :ARG1 c16-1
                                                 :ARG3 (c16-5 / more)))
                    :mode imperative)
       :ARG2 c16-4)

# ::snt Get well soon my good friend &lt;
# ::tokens ["Get", "well", "soon", "my", "good", "friend", "&", "lt", ";"]
# ::lemmas ["get", "well", "soon", "my", "good", "friend", "&", "lt", ";"]
(c17-0 / say-01
       :ARG0 (c17-7 / i)
       :ARG1 (c17-5 / get-03
                    :ARG1 (c17-4 / person
                                 :ARG0-of (c17-3 / have-rel-role-91
                                                 :ARG1 c17-7
                                                 :ARG2 (c17-1 / friend
                                                              :ARG1-of (c17-8 / good-02))))
                    :ARG2 (c17-2 / well-05
                                 :ARG1 c17-4)
                    :time (c17-6 / soon)
                    :mode imperative)
       :ARG2 c17-4)

# ::snt Yeah. Im preparing for this to happen to me with my nd shot this Tuesday.It should last for -2 days, though. It varies.
# ::tokens ["Yeah", ".", "I", "m", "preparing", "for", "this", "to", "happen", "to", "me", "with", "my", "nd", "shot", "this", "Tuesday", ".", "It", "should", "last", "for", "-2", "days", ",", "though", ".", "It", "varies", "."]
# ::lemmas ["yeah", ".", "i", "m", "prepare", "for", "this", "to", "happen", "to", "i", "with", "my", "nd", "shoot", "this", "Tuesday", ".", "it", "should", "last", "for", "-2", "days", ",", "though", ".", "it", "vary", "."]
(c18-15 / multi-sentence
        :snt1 (c18-16 / yeah
                      :mode expressive)
        :snt2 (c18-14 / prepare-02
                      :ARG0 (c18-2 / i)
                      :ARG2 (c18-12 / this)
                      :instrument (c18-0 / shot
                                         :mod (c18-1 / dear)
                                         :poss c18-2)
                      :time (c18-4 / date-entity
                                   :weekday (c18-5 / tuesday)
                                   :mod (c18-3 / this)))
        :snt3 (c18-6 / have-concession-91
                     :ARG1 (c18-11 / probable
                                   :domain (c18-13 / last-01
                                                   :ARG1 (c18-7 / it)
                                                   :op1 (c18-8 / temporal-quantity
                                                               :unit (c18-9 / day)
                                                               :quant 2)
                                                   :ARG2 -2)))
        :snt4 (c18-10 / vary-01
                      :ARG1 c18-7))

# ::snt Hope you feel better soon homie, take care
# ::tokens ["Hope", "you", "feel", "better", "soon", "homie", ",", "take", "care"]
# ::lemmas ["hope", "you", "feel", "well", "soon", "homie", ",", "take", "care"]
(c19-0 / say-01
       :ARG0 (c19-9 / i)
       :ARG1 (c19-2 / and
                    :op1 (c19-6 / hope-01
                                :ARG0 c19-9
                                :ARG1 (c19-3 / feel-01
                                             :ARG0 (c19-8 / homie)
                                             :ARG1 (c19-5 / well-05
                                                          :ARG1 c19-8)
                                             :time (c19-1 / soon)))
                    :op2 (c19-7 / take-01
                                :ARG0 (c19-10 / you)
                                :ARG1 (c19-4 / care-03
                                             :ARG0 c19-10)))
       :ARG2 c19-8)

# ::snt Get well soon
# ::tokens ["Get", "well", "soon"]
# ::lemmas ["get", "well", "soon"]
(c20-0 / get-03
       :ARG1 (c20-2 / you)
       :ARG2 (c20-1 / well-05
                    :ARG1 c20-2)
       :time (c20-3 / soon)
       :mode imperative)

# ::snt get well soon!
# ::tokens ["get", "well", "soon", "!"]
# ::lemmas ["get", "well", "soon", "!"]
(c21-0 / get-03
       :ARG1 (c21-2 / you)
       :ARG2 (c21-1 / well-05
                    :ARG1 c21-2)
       :time (c21-3 / soon)
       :mode imperative)
