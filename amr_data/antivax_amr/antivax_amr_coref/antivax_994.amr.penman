# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c1-0 / laugh-01
      :manner (c1-1 / loud)
      :mode expressive)

# ::snt One small step. Just get poked.
# ::tokens ["One", "small", "step", ".", "Just", "get", "poked", "."]
# ::lemmas ["One", "small", "step", ".", "just", "get", "poke", "."]
(c2-4 / multi-sentence
      :snt1 (c2-0 / step-01
                  :mod (c2-2 / small)
                  :quant 1)
      :snt2 (c2-3 / poke-01
                  :ARG1 (c2-5 / you)
                  :mod (c2-1 / just)))

# ::snt I've always wanted to be Bill Murray
# ::tokens ["I", "'ve", "always", "wanted", "to", "be", "Bill", "Murray"]
# ::lemmas ["i", "'ve", "always", "want", "to", "be", "Bill", "Murray"]
(c3-1 / want-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-2 / person
                  :name (c3-4 / name
                              :op1 "Bill"
                              :op2 "Murray")
                  :domain c3-3)
      :time (c3-0 / always))

# ::snt Ive always wanted to be a zombie
# ::tokens ["I", "ve", "always", "wanted", "to", "be", "a", "zombie"]
# ::lemmas ["i", "ve", "always", "want", "to", "be", "a", "zombie"]
(c4-0 / want-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-3 / zombie
                  :domain c4-1)
      :time (c4-2 / always))

# ::snt What if it turns into I Am Legend?
# ::tokens ["What", "if", "it", "turns", "into", "I", "Am", "Legend", "?"]
# ::lemmas ["what", "if", "it", "turn", "into", "I", "Am", "Legend", "?"]
(c5-2 / have-condition-91
      :ARG1 (c5-0 / amr-unknown)
      :ARG2 (c5-3 / turn-02
                  :ARG1 (c5-1 / it)
                  :ARG2 (c5-4 / publication
                              :name (c5-5 / name
                                          :op1 "I"
                                          :op2 "Am"
                                          :op3 "Legends"))))
