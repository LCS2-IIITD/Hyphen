# ::snt Ugh Im so sorry!!
# ::tokens ["Ugh", "I", "m", "so", "sorry", "!", "!"]
# ::lemmas ["ugh", "i", "m", "so", "sorry", "!", "!"]
(c1-0 / sorry-01
      :ARG1 (c1-2 / i)
      :degree (c1-1 / so)
      :mod (c1-3 / ugh
                 :mode expressive))

# ::snt I am so jealous! I couldnt really tell at the time cos I was too busy brainfogging in the fetal position... but I think mine were abnormally bad lol.
# ::tokens ["I", "am", "so", "jealous", "!", "I", "could", "nt", "really", "tell", "at", "the", "time", "cos", "I", "was", "too", "busy", "brainfogging", "in", "the", "fetal", "position", "...", "but", "I", "think", "mine", "were", "abnormally", "bad", "lol", "."]
# ::lemmas ["i", "be", "so", "jealous", "!", "i", "could", "not", "really", "tell", "at", "the", "time", "cos", "i", "be", "too", "busy", "brainfogging", "in", "the", "fetal", "position", "...", "but", "i", "think", "mine", "be", "abnormally", "bad", "lol", "."]
(c2-7 / multi-sentence
      :snt1 (c2-21 / jealous-01
                   :ARG0 (c2-2 / i)
                   :degree (c2-9 / so))
      :snt2 (c2-3 / contrast-01
                  :ARG1 (c2-0 / cause-01
                              :ARG0 (c2-20 / busy-01
                                           :ARG1 (c2-11 / i)
                                           :ARG2 (c2-13 / brainfog-00
                                                        :ARG0 c2-11
                                                        :manner (c2-22 / position
                                                                       :mod (c2-16 / fetal)))
                                           :ARG2-of (c2-17 / have-degree-91
                                                           :ARG1 c2-11
                                                           :ARG3 (c2-5 / too)))
                              :ARG1 (c2-18 / possible-01
                                           :ARG1 (c2-4 / tell-02
                                                       :ARG0 c2-11
                                                       :time (c2-8 / time)
                                                       :ARG1-of (c2-6 / real-04))
                                           :polarity -))
                  :ARG2 (c2-12 / think-01
                               :ARG0 c2-11
                               :ARG1 (c2-10 / bad-07
                                            :ARG1 (c2-15 / thing
                                                         :poss c2-11)
                                            :mod (c2-14 / abnormally))
                               :ARG2-of (c2-19 / laugh-01
                                               :ARG0 c2-11
                                               :manner (c2-1 / loud)))))

# ::snt I havent had any from my Pfizer either!
# ::tokens ["I", "have", "nt", "had", "any", "from", "my", "Pfizer", "either", "!"]
# ::lemmas ["i", "have", "not", "have", "any", "from", "my", "Pfizer", "either", "!"]
(c3-2 / have-03
      :ARG0 (c3-3 / i)
      :ARG1 (c3-0 / any
                  :source (c3-1 / company
                                :name (c3-4 / name
                                            :op1 "Pfizer")
                                :poss c3-3))
      :mod (c3-5 / either)
      :polarity -)

# ::snt Yay! Me too! I couldnt believe it.
# ::tokens ["Yay", "!", "Me", "too", "!", "I", "could", "nt", "believe", "it", "."]
# ::lemmas ["Yay", "!", "i", "too", "!", "i", "could", "not", "believe", "it", "."]
(c4-6 / multi-sentence
      :snt1 (c4-7 / yay)
      :snt2 (c4-5 / i
                  :mod (c4-2 / too))
      :snt3 (c4-3 / possible-01
                  :ARG1 (c4-4 / believe-01
                              :ARG0 (c4-0 / i)
                              :ARG1 (c4-1 / it))
                  :polarity -))

# ::snt Explosive gas? Cause I heard explosive gas was a symptom.
# ::tokens ["Explosive", "gas", "?", "Cause", "I", "heard", "explosive", "gas", "was", "a", "symptom", "."]
# ::lemmas ["explosive", "gas", "?", "cause", "i", "hear", "explosive", "gas", "be", "a", "symptom", "."]
(c5-7 / multi-sentence
      :snt1 (c5-5 / gas
                  :mod (c5-9 / explosive)
                  :polarity (c5-1 / amr-unknown))
      :snt2 (c5-2 / cause-01
                  :ARG0 (c5-3 / hear-01
                              :ARG0 (c5-6 / i)
                              :ARG1 (c5-8 / gas
                                          :mod (c5-4 / explosive)
                                          :domain (c5-0 / symptom)))))

# ::snt Yay!I got my second on Monday, and I dont remember Tuesday. The nurse said that was pretty normal for folks whod had Covid.
# ::tokens ["Yay!I", "got", "my", "second", "on", "Monday", ",", "and", "I", "do", "nt", "remember", "Tuesday", ".", "The", "nurse", "said", "that", "was", "pretty", "normal", "for", "folks", "who", "d", "had", "Covid", "."]
# ::lemmas ["Yay!I", "get", "my", "second", "on", "Monday", ",", "and", "i", "do", "not", "remember", "Tuesday", ".", "the", "nurse", "say", "that", "be", "pretty", "normal", "for", "folk", "who", "d", "have", "Covid", "."]
(c6-8 / multi-sentence
      :snt1 (c6-14 / yay
                   :mode expressive)
      :snt2 (c6-15 / and
                   :op1 (c6-7 / get-01
                              :ARG0 (c6-2 / i)
                              :ARG1 (c6-5 / thing
                                          :ord (c6-4 / ordinal-entity
                                                     :value 2)
                                          :poss c6-2)
                              :time (c6-0 / date-entity
                                          :weekday (c6-17 / monday)))
                   :op2 (c6-6 / remember-01
                              :ARG0 c6-2
                              :ARG1 (c6-13 / date-entity
                                           :weekday (c6-3 / tuesday))
                              :polarity -))
      :snt3 (c6-11 / say-01
                   :ARG0 (c6-9 / nurse)
                   :ARG1 (c6-1 / normal-02
                               :ARG1 (c6-10 / that)
                               :ARG2 (c6-16 / folk
                                            :ARG0-of (c6-18 / have-03
                                                            :ARG1 (c6-20 / product
                                                                         :name (c6-12 / name
                                                                                      :op1 "Covid"))))
                               :degree (c6-19 / pretty))))
