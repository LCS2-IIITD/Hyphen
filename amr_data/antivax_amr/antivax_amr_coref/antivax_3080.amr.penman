# ::snt Excellent post, thank you!
# ::tokens ["Excellent", "post", ",", "thank", "you", "!"]
# ::lemmas ["excellent", "post", ",", "thank", "you", "!"]
(c1-0 / and
      :op1 (c1-5 / excellent-02
                 :ARG1 (c1-3 / post-01
                             :ARG0 (c1-4 / you)))
      :op2 (c1-2 / thank-01
                 :ARG0 (c1-1 / i)
                 :ARG1 c1-4))

# ::snt This is an eye opener isnt it? Another example of how a conservative (premier) would screw us all to own the Libs. In some cases even kill us all.
# ::tokens ["This", "is", "an", "eye", "opener", "is", "nt", "it", "?", "Another", "example", "of", "how", "a", "conservative", "(", "premier", ")", "would", "screw", "us", "all", "to", "own", "the", "Libs", ".", "In", "some", "cases", "even", "kill", "us", "all", "."]
# ::lemmas ["this", "be", "an", "eye", "opener", "be", "not", "it", "?", "another", "example", "of", "how", "a", "conservative", "(", "premier", ")", "would", "screw", "we", "all", "to", "own", "the", "Libs", ".", "in", "some", "case", "even", "kill", "we", "all", "."]
(c2-8 / multi-sentence
      :snt1 (c2-5 / open-01
                  :ARG0 (c2-6 / this)
                  :ARG1 (c2-11 / eye)
                  :ARG1-of (c2-7 / request-confirmation-91))
      :snt2 (c2-16 / exemplify-01
                   :ARG0 (c2-12 / screw-02
                                :ARG0 (c2-20 / person
                                             :mod (c2-3 / conservative)
                                             :ARG0-of (c2-15 / have-org-role-91
                                                             :ARG2 (c2-18 / premier)))
                                :ARG1 (c2-4 / we
                                            :mod (c2-14 / all))
                                :purpose (c2-17 / own-01
                                                :ARG0 c2-20
                                                :ARG1 (c2-13 / political-party
                                                             :name (c2-9 / name
                                                                         :op1 "Liberal"
                                                                         :op2 "Party"))))
                   :ARG1 c2-4
                   :mod (c2-10 / another))
      :snt3 (c2-21 / kill-01
                   :ARG1 c2-4
                   :mod (c2-1 / all))
      :mod (c2-0 / case-04
                 :mod (c2-19 / some))
      :mod (c2-2 / even))

# ::snt Not only that, as a company that was formed on with an angel investor, it's too small and if it hadn't placed a PO for all of the equipment to manufacture, package, and distribute, they are out of luck for next years, minimum.
# ::tokens ["Not", "only", "that", ",", "as", "a", "company", "that", "was", "formed", "on", "with", "an", "angel", "investor", ",", "it", "'s", "too", "small", "and", "if", "it", "had", "n't", "placed", "a", "PO", "for", "all", "of", "the", "equipment", "to", "manufacture", ",", "package", ",", "and", "distribute", ",", "they", "are", "out", "of", "luck", "for", "next", "years", ",", "minimum", "."]
# ::lemmas ["not", "only", "that", ",", "as", "a", "company", "that", "be", "form", "on", "with", "an", "angel", "investor", ",", "it", "be", "too", "small", "and", "if", "it", "have", "not", "place", "a", "PO", "for", "all", "of", "the", "equipment", "to", "manufacture", ",", "package", ",", "and", "distribute", ",", "they", "be", "out", "of", "luck", "for", "next", "years", ",", "minimum", "."]
(c3-17 / and
       :op1 (c3-20 / have-degree-91
                   :ARG1 (c3-5 / company
                               :ARG1-of (c3-18 / form-01
                                               :prep-with (c3-23 / person
                                                                 :ARG0-of (c3-4 / invest-01)
                                                                 :mod (c3-10 / angel))))
                   :ARG2 (c3-12 / small)
                   :ARG3 (c3-7 / too))
       :op2 (c3-3 / have-condition-91
                  :ARG1 (c3-6 / out-05
                              :ARG1 c3-5
                              :ARG2 (c3-22 / luck)
                              :time (c3-16 / year
                                           :mod (c3-9 / next))
                              :mod (c3-8 / minimum))
                  :ARG2 (c3-21 / place-01
                               :ARG0 c3-5
                               :ARG1 (c3-14 / post-01
                                            :ARG0 c3-5
                                            :ARG1 (c3-13 / personnel
                                                         :mod (c3-2 / post))
                                            :purpose (c3-1 / and
                                                           :op1 (c3-19 / manufacture-01
                                                                       :ARG0 c3-5
                                                                       :ARG1 (c3-11 / equipment
                                                                                    :mod (c3-24 / all)))
                                                           :op2 (c3-15 / package-01
                                                                       :ARG0 c3-5
                                                                       :ARG1 c3-11)
                                                           :op3 (c3-0 / distribute-01
                                                                      :ARG0 c3-5
                                                                      :ARG1 c3-11)))
                               :polarity -)))

# ::snt Oh i thought it was from someone who is relevant
# ::tokens ["Oh", "i", "thought", "it", "was", "from", "someone", "who", "is", "relevant"]
# ::lemmas ["oh", "i", "think", "it", "be", "from", "someone", "who", "be", "relevant"]
(c4-3 / think-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-1 / it
                  :source (c4-0 / someone
                                :ARG1-of (c4-4 / relevant-01)))
      :mod (c4-2 / oh
                 :mode expressive))

# ::snt Conservatives &amp; NDP are complaining about the cost
# ::tokens ["Conservatives", "&", "amp", ";", "NDP", "are", "complaining", "about", "the", "cost"]
# ::lemmas ["Conservatives", "&", "amp", ";", "NDP", "be", "complain", "about", "the", "cost"]
(c5-2 / complain-01
      :ARG0 (c5-1 / and
                  :op1 (c5-9 / person
                             :ARG0-of (c5-5 / have-org-role-91
                                            :ARG1 (c5-6 / political-party
                                                        :name (c5-10 / name
                                                                     :op1 "Conservative"
                                                                     :op2 "Party"))))
                  :op2 (c5-4 / person
                             :ARG0-of (c5-8 / have-org-role-91
                                            :ARG1 (c5-3 / political-party
                                                        :name (c5-7 / name
                                                                    :op1 "New"
                                                                    :op2 "NDP")))))
      :ARG1 (c5-0 / cost-01))

# ::snt Who is complaining about the cost? A little over $8 to save millions of lives. AstraZeneca is one of the only firms selling their product at cost.
# ::tokens ["Who", "is", "complaining", "about", "the", "cost", "?", "A", "little", "over", "$", "8", "to", "save", "millions", "of", "lives", ".", "AstraZeneca", "is", "one", "of", "the", "only", "firms", "selling", "their", "product", "at", "cost", "."]
# ::lemmas ["who", "be", "complain", "about", "the", "cost", "?", "A", "little", "over", "$", "8", "to", "save", "millions", "of", "life", ".", "astrazeneca", "be", "one", "of", "the", "only", "firm", "sell", "their", "product", "at", "cost", "."]
(c6-7 / multi-sentence
      :snt1 (c6-4 / complain-01
                  :ARG0 (c6-13 / amr-unknown)
                  :ARG1 (c6-0 / cost-01))
      :snt2 (c6-5 / cost-01
                  :ARG1 (c6-6 / over
                              :op1 (c6-15 / monetary-quantity
                                          :unit (c6-1 / dollar)
                                          :quant 8)
                              :degree (c6-17 / little))
                  :purpose (c6-9 / save-01
                                 :ARG1 (c6-2 / life
                                             :quant (c6-11 / multiple
                                                           :op1 1000000))))
      :snt3 (c6-3 / include-91
                  :ARG1 (c6-12 / company
                               :name (c6-8 / name
                                           :op1 "AstraZeneca"))
                  :ARG2 (c6-14 / firm
                               :mod (c6-16 / only)
                               :ARG0-of (c6-18 / sell-01
                                               :ARG1 (c6-19 / product
                                                            :poss c6-12
                                                            :ARG1-of (c6-10 / cost-01))))))

# ::snt Yes, I am aware - I know he admits, somewhere, he did not even file paper work to try - I think he only wants Fed funding
# ::tokens ["Yes", ",", "I", "am", "aware", "-", "I", "know", "he", "admits", ",", "somewhere", ",", "he", "did", "not", "even", "file", "paper", "work", "to", "try", "-", "I", "think", "he", "only", "wants", "Fed", "funding"]
# ::lemmas ["yes", ",", "i", "be", "aware", "-", "i", "know", "he", "admit", ",", "somewhere", ",", "he", "do", "not", "even", "file", "paper", "work", "to", "try", "-", "i", "think", "he", "only", "want", "Fed", "funding"]
(c7-10 / realize-01
       :ARG0 (c7-14 / i)
       :ARG1 (c7-1 / and
                   :op1 (c7-15 / know-01
                               :ARG0 c7-14
                               :ARG1 (c7-16 / admit-01
                                            :ARG0 (c7-6 / he)
                                            :ARG1 (c7-2 / file-01
                                                        :ARG0 c7-6
                                                        :ARG1 (c7-3 / work-01
                                                                    :ARG1 (c7-11 / paper))
                                                        :mod (c7-17 / even)
                                                        :location (c7-0 / somewhere)
                                                        :purpose (c7-9 / try-01
                                                                       :ARG0 c7-6)
                                                        :polarity -)))
                   :op2 (c7-4 / think-01
                              :ARG0 c7-14
                              :ARG1 (c7-5 / want-01
                                          :ARG0 c7-6
                                          :ARG1 (c7-7 / fund-01
                                                      :ARG0 (c7-13 / government-organization
                                                                   :name (c7-12 / name
                                                                                :op1 "Fed")))
                                          :mod (c7-8 / only)))))

# ::snt well for starters - they don't have the capacity to produce in Canada - having to OUTSOURCE their production to Switzerland &amp; USAwhich is what Trudeau said all along - Canada DOES NOT have mRNA domestic capabilities right now
# ::tokens ["well", "for", "starters", "-", "they", "do", "n't", "have", "the", "capacity", "to", "produce", "in", "Canada", "-", "having", "to", "OUTSOURCE", "their", "production", "to", "Switzerland", "&", "amp", ";", "USAwhich", "is", "what", "Trudeau", "said", "all", "along", "-", "Canada", "DOES", "NOT", "have", "mRNA", "domestic", "capabilities", "right", "now"]
# ::lemmas ["well", "for", "starter", "-", "they", "do", "not", "have", "the", "capacity", "to", "produce", "in", "Canada", "-", "have", "to", "outsource", "their", "production", "to", "Switzerland", "&", "amp", ";", "USAwhich", "be", "what", "Trudeau", "say", "all", "along", "-", "Canada", "do", "not", "have", "mrna", "domestic", "capability", "right", "now"]
(c8-21 / and
       :op1 (c8-6 / capable-01
                  :ARG1 (c8-10 / they)
                  :ARG2 (c8-25 / produce-01
                               :ARG0 c8-10
                               :location (c8-0 / country
                                               :name (c8-13 / name
                                                            :op1 "Canada")))
                  :ARG0-of (c8-8 / cause-01
                                 :ARG1 (c8-9 / obligate-01
                                             :ARG1 c8-10
                                             :ARG2 (c8-22 / outsource-01
                                                          :ARG1 (c8-23 / produce-01
                                                                       :ARG0 c8-10)
                                                          :ARG2 (c8-14 / and
                                                                       :op1 (c8-20 / country
                                                                                   :name (c8-3 / name
                                                                                               :op1 "Switzerland"))
                                                                       :op2 (c8-16 / company
                                                                                   :name (c8-19 / name
                                                                                                :op1 "amp"))))))
                  :ARG1-of (c8-15 / say-01
                                  :ARG0 (c8-18 / person
                                               :name (c8-5 / name
                                                           :op1 "Truman"))
                                  :duration (c8-1 / all-along))
                  :polarity -)
       :op2 (c8-4 / capable-01
                  :ARG1 c8-0
                  :ARG2 (c8-17 / produce-01
                               :location c8-0)
                  :time (c8-11 / now
                               :mod (c8-12 / right))
                  :mod (c8-2 / domestic)
                  :polarity -)
       :mod (c8-7 / well
                  :prep-for (c8-24 / starters)))

# ::snt Do you have a thread explaining providence and why it did not work from day one for them, due to themselves not have capability, etc, and just wanting Fed funding?
# ::tokens ["Do", "you", "have", "a", "thread", "explaining", "providence", "and", "why", "it", "did", "not", "work", "from", "day", "one", "for", "them", ",", "due", "to", "themselves", "not", "have", "capability", ",", "etc", ",", "and", "just", "wanting", "Fed", "funding", "?"]
# ::lemmas ["do", "you", "have", "a", "thread", "explain", "providence", "and", "why", "it", "do", "not", "work", "from", "day", "one", "for", "they", ",", "due", "to", "themselves", "not", "have", "capability", ",", "etc", ",", "and", "just", "want", "Fed", "funding", "?"]
(c9-20 / have-03
       :ARG0 (c9-17 / you)
       :ARG1 (c9-9 / thread
                   :ARG0-of (c9-15 / explain-01
                                   :ARG1 (c9-18 / and
                                                :op1 (c9-6 / thing
                                                           :ARG0-of (c9-4 / cause-01
                                                                          :ARG1 (c9-5 / work-09
                                                                                      :ARG1 (c9-3 / it)
                                                                                      :ARG2 (c9-12 / they)
                                                                                      :ARG1-of (c9-0 / cause-01
                                                                                                     :ARG0 (c9-14 / and
                                                                                                                  :op1 (c9-7 / capable-01
                                                                                                                             :ARG1 c9-12
                                                                                                                             :polarity -)
                                                                                                                  :op2 (c9-21 / et-cetera)))
                                                                                      :time (c9-19 / from
                                                                                                   :op1 (c9-1 / day
                                                                                                              :ord (c9-8 / ordinal-entity
                                                                                                                         :value 1)))
                                                                                      :polarity -))
                                                           :op2 (c9-13 / want-01
                                                                       :ARG0 c9-12
                                                                       :ARG1 (c9-16 / fund-01
                                                                                    :ARG0 (c9-10 / government-organization
                                                                                                 :name (c9-11 / name
                                                                                                              :op1 "Fed")))
                                                                       :mod (c9-22 / just))))))
       :polarity (c9-2 / amr-unknown))
