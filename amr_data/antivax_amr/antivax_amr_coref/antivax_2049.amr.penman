# ::snt They forgot to put in my chip when I got my second Pfizer dose. I'm SO disappointed. My dogs and cat are microchipped. I wanted to have one, too!
# ::tokens ["They", "forgot", "to", "put", "in", "my", "chip", "when", "I", "got", "my", "second", "Pfizer", "dose", ".", "I", "'m", "SO", "disappointed", ".", "My", "dogs", "and", "cat", "are", "microchipped", ".", "I", "wanted", "to", "have", "one", ",", "too", "!"]
# ::lemmas ["they", "forgot", "to", "put", "in", "my", "chip", "when", "i", "get", "my", "second", "Pfizer", "dose", ".", "i", "be", "so", "disappointed", ".", "my", "dog", "and", "cat", "be", "microchippe", ".", "i", "want", "to", "have", "one", ",", "too", "!"]
(c1-10 / multi-sentence
       :snt1 (c1-18 / forget-01
                    :ARG0 (c1-8 / they)
                    :ARG1 (c1-21 / put-01
                                 :ARG0 c1-8
                                 :ARG1 (c1-3 / chip
                                             :poss (c1-2 / i))
                                 :time (c1-9 / get-01
                                             :ARG0 c1-2
                                             :ARG1 (c1-0 / dose-01
                                                         :ARG0 (c1-1 / company
                                                                     :name (c1-11 / name
                                                                                  :op1 "Pfizer"))
                                                         :ARG1 c1-2
                                                         :ord (c1-7 / ordinal-entity
                                                                    :value 2)))))
       :snt2 (c1-16 / disappoint-01
                    :ARG0 (c1-19 / microchip-00
                                 :ARG1 (c1-17 / and
                                              :op1 (c1-13 / dog
                                                          :poss (c1-14 / i))
                                              :op2 (c1-6 / cat
                                                         :poss c1-14)))
                    :degree (c1-12 / so))
       :snt3 (c1-4 / want-01
                   :ARG0 (c1-15 / i)
                   :ARG1 (c1-20 / have-03
                                :ARG0 c1-15
                                :ARG1 c1-3
                                :mod (c1-5 / too))))

# ::snt Congrats and thank you. G is no big deal. Just get plenty of rest and stay hydrated.
# ::tokens ["Congrats", "and", "thank", "you", ".", "G", "is", "no", "big", "deal", ".", "Just", "get", "plenty", "of", "rest", "and", "stay", "hydrated", "."]
# ::lemmas ["congrat", "and", "thank", "you", ".", "g", "be", "no", "big", "deal", ".", "just", "get", "plenty", "of", "rest", "and", "stay", "hydrated", "."]
(c2-13 / multi-sentence
       :snt1 (c2-2 / and
                   :op1 (c2-4 / congratulate-01
                              :ARG1 (c2-15 / you))
                   :op2 (c2-7 / thank-01
                              :ARG1 c2-15))
       :snt2 (c2-0 / deal-03
                   :ARG1 (c2-12 / person
                                :name (c2-14 / name
                                             :op1 "G"))
                   :mod (c2-10 / big)
                   :polarity -)
       :snt3 (c2-16 / and
                    :op1 (c2-9 / get-01
                               :ARG0 (c2-3 / you)
                               :ARG1 (c2-8 / rest-01
                                           :quant (c2-6 / plenty))
                               :mode imperative)
                    :op2 (c2-1 / stay-01
                               :ARG1 c2-3
                               :ARG3 (c2-5 / hydrate-01
                                           :ARG1 c2-3)
                               :mode imperative)
                    :mod (c2-11 / just)))

# ::snt Congrats!
# ::tokens ["Congrats", "!"]
# ::lemmas ["Congrats", "!"]
(c3-0 / congratulate-01
      :mode expressive)

# ::snt Thx Jeff!
# ::tokens ["Thx", "Jeff", "!"]
# ::lemmas ["Thx", "Jeff", "!"]
(c4-0 / say-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-2 / goodbye)
      :ARG2 (c4-1 / person
                  :name (c4-4 / name
                              :op1 "Jeff")))

# ::snt Ha. Congrats!
# ::tokens ["Ha", ".", "Congrats", "!"]
# ::lemmas ["ha", ".", "Congrats", "!"]
(c5-0 / multi-sentence
      :snt1 (c5-1 / ha
                  :mode expressive)
      :snt2 (c5-2 / congratulate-01))
