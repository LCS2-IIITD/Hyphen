# ::snt As said all is well
# ::tokens ["As", "said", "all", "is", "well"]
# ::lemmas ["as", "say", "all", "be", "well"]
(c1-0 / well-09
      :ARG1 (c1-1 / all)
      :ARG1-of (c1-2 / say-01))

# ::snt Its working very smoothly go ahead and register please.
# ::tokens ["Its", "working", "very", "smoothly", "go", "ahead", "and", "register", "please", "."]
# ::lemmas ["its", "working", "very", "smoothly", "go", "ahead", "and", "register", "please", "."]
(c2-1 / and
      :op1 (c2-4 / go-06
                 :ARG0 (c2-5 / you)
                 :ARG2 (c2-6 / ahead)
                 :mode imperative
                 :polite +)
      :op2 (c2-3 / register-02
                 :ARG0 c2-5
                 :mode imperative
                 :polite +)
      :ARG1-of (c2-0 / smooth-04
                     :degree (c2-2 / very)))

# ::snt I just got my daughters registered without any problem in minutes...
# ::tokens ["I", "just", "got", "my", "daughters", "registered", "without", "any", "problem", "in", "minutes", "..."]
# ::lemmas ["i", "just", "get", "my", "daughter", "register", "without", "any", "problem", "in", "minutes", "..."]
(c3-6 / register-02
      :ARG0 (c3-9 / i)
      :ARG1 (c3-7 / person
                  :ARG0-of (c3-3 / have-rel-role-91
                                 :ARG1 c3-9
                                 :ARG2 (c3-0 / daughter)))
      :manner (c3-4 / problem
                    :mod (c3-1 / any)
                    :polarity -)
      :time (c3-12 / after
                   :op1 (c3-11 / now)
                   :quant (c3-10 / multiple
                                 :op1 (c3-5 / temporal-quantity
                                            :unit (c3-2 / minute)
                                            :quant 1)))
      :mod (c3-8 / just))

# ::snt But we have to get it registered. State govt is working hard to get vaccine and hoped they will get it.
# ::tokens ["But", "we", "have", "to", "get", "it", "registered", ".", "State", "govt", "is", "working", "hard", "to", "get", "vaccine", "and", "hoped", "they", "will", "get", "it", "."]
# ::lemmas ["but", "we", "have", "to", "get", "it", "register", ".", "state", "govt", "be", "work", "hard", "to", "get", "vaccine", "and", "hope", "they", "will", "get", "it", "."]
(c4-13 / multi-sentence
       :snt1 (c4-3 / contrast-01
                   :ARG2 (c4-7 / obligate-01
                               :ARG1 (c4-4 / we)
                               :ARG2 (c4-9 / register-02
                                           :ARG1 (c4-12 / it))))
       :snt2 (c4-2 / and
                   :op1 (c4-15 / work-01
                               :ARG0 (c4-10 / government-organization
                                            :ARG0-of (c4-14 / govern-01)
                                            :mod (c4-0 / state))
                               :ARG1 (c4-1 / get-01
                                           :ARG0 c4-10
                                           :ARG1 (c4-6 / vaccine))
                               :ARG1-of (c4-5 / hard-02))
                   :op2 (c4-11 / hope-01
                               :ARG0 c4-10
                               :ARG1 (c4-8 / get-01
                                           :ARG0 c4-10
                                           :ARG1 c4-6))))

# ::snt Maharashtra is anyways not giving it to till some time
# ::tokens ["Maharashtra", "is", "anyways", "not", "giving", "it", "to", "till", "some", "time"]
# ::lemmas ["Maharashtra", "be", "anyways", "not", "give", "it", "to", "till", "some", "time"]
(c5-5 / give-01
      :ARG0 (c5-2 / country
                  :name (c5-7 / name
                              :op1 "Maharashtra"))
      :ARG1 (c5-6 / it)
      :mod (c5-1 / anyways)
      :time (c5-4 / till
                  :op1 (c5-3 / time
                             :quant (c5-0 / some)))
      :polarity -)
