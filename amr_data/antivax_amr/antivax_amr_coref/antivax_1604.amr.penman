# ::snt So sorry I couldn't find the link.
# ::tokens ["So", "sorry", "I", "could", "n't", "find", "the", "link", "."]
# ::lemmas ["so", "sorry", "i", "could", "not", "find", "the", "link", "."]
(c1-0 / sorry-01
      :ARG1 (c1-5 / i)
      :ARG2 (c1-3 / possible-01
                  :ARG1 (c1-1 / find-01
                              :ARG0 c1-5
                              :ARG1 (c1-2 / link))
                  :polarity -)
      :degree (c1-4 / so))

# ::snt I felt very sad and bad. Our nation is not able to help a disabled Citizen Incredible India
# ::tokens ["I", "felt", "very", "sad", "and", "bad", ".", "Our", "nation", "is", "not", "able", "to", "help", "a", "disabled", "Citizen", "Incredible", "India"]
# ::lemmas ["i", "feel", "very", "sad", "and", "bad", ".", "our", "nation", "be", "not", "able", "to", "help", "a", "disabled", "Citizen", "Incredible", "India"]
(c5-13 / multi-sentence
       :snt1 (c5-4 / feel-01
                   :ARG0 (c5-12 / i)
                   :ARG1 (c5-3 / and
                               :op1 (c5-0 / sad-02
                                          :ARG1 c5-12
                                          :degree (c5-8 / very))
                               :op2 (c5-11 / bad-05
                                           :ARG1 c5-12
                                           :degree c5-8)))
       :snt2 (c5-10 / possible-01
                    :ARG1 (c5-7 / help-01
                                :ARG0 (c5-14 / nation
                                             :poss (c5-6 / we))
                                :ARG1 (c5-5 / citizen
                                            :ARG1-of (c5-1 / disable-01)
                                            :mod (c5-2 / country
                                                       :name (c5-9 / name
                                                                   :op1 "India"))))
                    :polarity -))

# ::snt If he got elected as MP or MLA or CM or a PM- then for sure he will be getting vaccine on time at home
# ::tokens ["If", "he", "got", "elected", "as", "MP", "or", "MLA", "or", "CM", "or", "a", "PM-", "then", "for", "sure", "he", "will", "be", "getting", "vaccine", "on", "time", "at", "home"]
# ::lemmas ["if", "he", "got", "elect", "as", "MP", "or", "MLA", "or", "CM", "or", "a", "pm-", "then", "for", "sure", "he", "will", "be", "get", "vaccine", "on", "time", "at", "home"]
(c6-10 / get-01
       :ARG0 (c6-3 / he)
       :ARG1 (c6-7 / vaccine)
       :mod (c6-8 / on-time)
       :location (c6-11 / home)
       :ARG1-of (c6-0 / sure-02)
       :condition (c6-14 / elect-01
                         :ARG1 c6-3
                         :ARG2 (c6-4 / or
                                     :op1 (c6-1 / have-org-role-91
                                                :ARG0 c6-3
                                                :ARG2 (c6-13 / member))
                                     :op2 (c6-9 / have-org-role-91
                                                :ARG0 c6-3
                                                :ARG2 (c6-2 / member))
                                     :op3 (c6-5 / have-org-role-91
                                                :ARG0 c6-3
                                                :ARG2 (c6-6 / minister
                                                            :mod (c6-12 / prime))))))

# ::snt Private hospitals have no vaccines..register on Cowin app ..they will give you an appointment in the closest centre
# ::tokens ["Private", "hospitals", "have", "no", "vaccines", "..", "register", "on", "Cowin", "app", "..", "they", "will", "give", "you", "an", "appointment", "in", "the", "closest", "centre"]
# ::lemmas ["private", "hospital", "have", "no", "vaccine", "..", "register", "on", "Cowin", "app", "..", "they", "will", "give", "you", "an", "appointment", "in", "the", "close", "centre"]
(c8-14 / multi-sentence
       :snt1 (c8-5 / have-03
                   :ARG0 (c8-12 / hospital
                                :ARG1-of (c8-13 / private-03))
                   :ARG1 (c8-7 / vaccine)
                   :polarity -)
       :snt2 (c8-10 / register-02
                    :ARG0 (c8-16 / you)
                    :ARG3 (c8-8 / product
                                :name (c8-15 / name
                                             :op1 "Cowin"
                                             :op2 "App"))
                    :ARG1-of (c8-3 / cause-01
                                   :ARG0 (c8-11 / give-01
                                                :ARG0 (c8-9 / they)
                                                :ARG1 (c8-2 / appointment-02
                                                            :ARG0 c8-9
                                                            :location (c8-0 / center
                                                                            :ARG1-of (c8-6 / close-10
                                                                                           :ARG2-of (c8-1 / have-degree-91
                                                                                                          :ARG1 c8-0
                                                                                                          :ARG3 (c8-4 / most)))))
                                                :ARG2 c8-16))
                    :mode imperative))

# ::snt Please can you help?
# ::tokens ["Please", "can", "you", "help", "?"]
# ::lemmas ["please", "can", "you", "help", "?"]
(c9-0 / possible-01
      :polarity (c9-1 / amr-unknown)
      :ARG1 (c9-3 / help-01
                  :ARG0 (c9-2 / you))
      :polite +)

# ::snt Best wishes.
# ::tokens ["Best", "wishes", "."]
# ::lemmas ["good", "wish", "."]
(c10-0 / wish-01
       :ARG1-of (c10-2 / have-degree-91
                       :ARG2 (c10-3 / good-02
                                    :ARG1 c10-0)
                       :ARG3 (c10-1 / most)))

# ::snt please see your DM.
# ::tokens ["please", "see", "your", "DM", "."]
# ::lemmas ["please", "see", "your", "DM", "."]
(c11-0 / see-01
       :ARG0 (c11-3 / you)
       :ARG1 (c11-2 / thing
                    :ARG2-of (c11-1 / DM-01
                                    :ARG0 c11-3))
       :mode imperative
       :polite +)

# ::snt Request guide and suggest please. Always has a solution
# ::tokens ["Request", "guide", "and", "suggest", "please", ".", "Always", "has", "a", "solution"]
# ::lemmas ["request", "guide", "and", "suggest", "please", ".", "always", "have", "a", "solution"]
(c12-6 / multi-sentence
       :snt1 (c12-1 / and
                    :op1 (c12-4 / guide-01
                                :ARG1 (c12-7 / you))
                    :op2 (c12-0 / suggest-01
                                :ARG0 c12-7
                                :polite +))
       :snt2 (c12-2 / have-03
                    :ARG0 (c12-8 / you)
                    :ARG1 (c12-5 / solution)
                    :time (c12-3 / always)))

# ::snt can you help us please?
# ::tokens ["can", "you", "help", "us", "please", "?"]
# ::lemmas ["can", "you", "help", "we", "please", "?"]
(c13-3 / possible-01
       :polarity (c13-0 / amr-unknown)
       :ARG1 (c13-2 / help-01
                    :ARG0 (c13-4 / you)
                    :ARG2 (c13-1 / we))
       :polite +)

# ::snt Guide
# ::tokens ["Guide"]
# ::lemmas ["guide"]
(c14-1 / thing
       :ARG2-of (c14-0 / guide-01))

# ::snt Dm me in the morning if nothing works. Will find a private operator who will happily do this.
# ::tokens ["Dm", "me", "in", "the", "morning", "if", "nothing", "works", ".", "Will", "find", "a", "private", "operator", "who", "will", "happily", "do", "this", "."]
# ::lemmas ["Dm", "i", "in", "the", "morning", "if", "nothing", "work", ".", "will", "find", "a", "private", "operator", "who", "will", "happily", "do", "this", "."]
(c16-14 / multi-sentence
        :snt1 (c16-6 / have-condition-91
                     :ARG1 (c16-11 / be-temporally-at-91
                                   :ARG1 (c16-13 / i)
                                   :ARG2 (c16-0 / date-entity
                                                :dayperiod (c16-3 / morning))
                                   :mode imperative)
                     :ARG2 (c16-4 / work-09
                                  :ARG1 (c16-1 / anything)
                                  :polarity -))
        :snt2 (c16-2 / find-01
                     :ARG1 (c16-10 / person
                                   :ARG0-of (c16-7 / operate-01)
                                   :ARG1-of (c16-8 / private-03)
                                   :ARG0-of (c16-12 / happy-01)
                                   :ARG0-of (c16-5 / do-02
                                                   :ARG1 (c16-9 / this)))))

# ::snt Okay. Will connect Tomorrow with you.
# ::tokens ["Okay", ".", "Will", "connect", "Tomorrow", "with", "you", "."]
# ::lemmas ["okay", ".", "will", "connect", "Tomorrow", "with", "you", "."]
(c17-4 / multi-sentence
       :snt1 (c17-1 / okay-04)
       :snt2 (c17-0 / connect-01
                    :ARG1 (c17-3 / i)
                    :ARG2 (c17-5 / you)
                    :time (c17-2 / tomorrow)))

# ::snt If the first dose was covishield, then MAX blr is beat place to book and viait they will carry on strecher from parking.!N if it is covaxin then Fortis Gurgaon, both the places have beat in facility for these kind of service chargable. wont be poaaible anyway at govt centers.
# ::tokens ["If", "the", "first", "dose", "was", "covishield", ",", "then", "MAX", "blr", "is", "beat", "place", "to", "book", "and", "viait", "they", "will", "carry", "on", "strecher", "from", "parking.!N", "if", "it", "is", "covaxin", "then", "Fortis", "Gurgaon", ",", "both", "the", "places", "have", "beat", "in", "facility", "for", "these", "kind", "of", "service", "chargable", ".", "wo", "nt", "be", "poaaible", "anyway", "at", "govt", "centers", "."]
# ::lemmas ["if", "the", "first", "dose", "be", "covishield", ",", "then", "MAX", "blr", "be", "beat", "place", "to", "book", "and", "viait", "they", "will", "carry", "on", "strecher", "from", "parking.!n", "if", "it", "be", "covaxin", "then", "Fortis", "Gurgaon", ",", "both", "the", "place", "have", "beat", "in", "facility", "for", "these", "kind", "of", "service", "chargable", ".", "will", "not", "be", "poaaible", "anyway", "at", "govt", "center", "."]
(c18-9 / multi-sentence
       :snt1 (c18-22 / and
                     :op1 (c18-25 / beat-03
                                  :ARG1 (c18-27 / place
                                                :name (c18-10 / name
                                                              :op1 "Max"
                                                              :op2 "Blr"))
                                  :ARG2 (c18-21 / book-02
                                                :ARG0 c18-27)
                                  :time (c18-0 / dose-01
                                               :ord (c18-6 / ordinal-entity
                                                           :value 1)))
                     :op2 (c18-3 / carry-on-02
                                 :ARG0 c18-27
                                 :ARG1 (c18-13 / strecher)
                                 :source (c18-24 / park-01))
                     :condition c18-0
                     :ARG1 (c18-1 / city
                                  :name (c18-2 / name
                                               :op1 "Covishield"))
                     :ord c18-6
                     :snt2-of c18-9
                     :value 1)
       :op1 (c18-15 / beat-03
                    :ARG1 (c18-5 / city
                                 :name (c18-18 / name
                                               :op1 "Fortis"
                                               :op2 "Gurgaon"))
                    :ARG2 (c18-23 / facility)
                    :purpose (c18-7 / thing
                                    :ARG2-of (c18-19 / charge-03
                                                     :ARG1 (c18-26 / serve-01))
                                    :mod (c18-28 / kind
                                                 :mod (c18-4 / this)))
                    :time (c18-11 / then))
       :op2 (c18-16 / possible-01
                    :ARG1 (c18-14 / pay-01
                                  :ARG0 (c18-17 / center
                                                :mod (c18-8 / government-organization
                                                            :ARG0-of (c18-20 / govern-01))))
                    :mod (c18-12 / anyway)
                    :polarity -))

# ::snt Pudda, it's near sector .
# ::tokens ["Pudda", ",", "it", "'s", "near", "sector", "."]
# ::lemmas ["Pudda", ",", "it", "be", "near", "sector", "."]
(c19-2 / near-02
       :ARG1 (c19-1 / it)
       :ARG2 (c19-0 / sector)
       :mod (c19-3 / pudda
                   :mode expressive))

# ::snt Please find out more.. He cannot be on wheel chair.Let's get it done Tomorrow.
# ::tokens ["Please", "find", "out", "more", "..", "He", "can", "not", "be", "on", "wheel", "chair", ".", "Let", "'s", "get", "it", "done", "Tomorrow", "."]
# ::lemmas ["please", "find", "out", "more", "..", "he", "can", "not", "be", "on", "wheel", "chair", ".", "let", "us", "get", "it", "do", "Tomorrow", "."]
(c20-11 / multi-sentence
        :snt1 (c20-1 / find-out-03
                     :ARG0 (c20-12 / you)
                     :mod (c20-2 / more)
                     :mode imperative
                     :polite +)
        :snt2 (c20-10 / possible-01
                      :ARG1 (c20-9 / be-located-at-91
                                   :ARG1 (c20-6 / he)
                                   :ARG2 (c20-3 / chair
                                                :mod (c20-4 / wheel)))
                      :polarity -)
        :snt3 (c20-8 / let-01
                     :ARG1 (c20-0 / do-02
                                  :ARG0 (c20-13 / we)
                                  :ARG1 (c20-5 / it)
                                  :time (c20-7 / tomorrow))))

# ::snt You can go to Manesar Urban Primary Health centre, it's about kms from Kherki Daula Toll, the car almost reaches the Vaccination point. The staff there is very helpful, they surely will come over to your car.
# ::tokens ["You", "can", "go", "to", "Manesar", "Urban", "Primary", "Health", "centre", ",", "it", "'s", "about", "kms", "from", "Kherki", "Daula", "Toll", ",", "the", "car", "almost", "reaches", "the", "Vaccination", "point", ".", "The", "staff", "there", "is", "very", "helpful", ",", "they", "surely", "will", "come", "over", "to", "your", "car", "."]
# ::lemmas ["you", "can", "go", "to", "Manesar", "Urban", "Primary", "Health", "centre", ",", "it", "be", "about", "kms", "from", "Kherki", "Daula", "Toll", ",", "the", "car", "almost", "reach", "the", "Vaccination", "point", ".", "the", "staff", "there", "be", "very", "helpful", ",", "they", "surely", "will", "come", "over", "to", "your", "car", "."]
(c21-12 / multi-sentence
        :snt1 (c21-25 / possible-01
                      :ARG1 (c21-11 / go-02
                                    :ARG0 (c21-18 / you)
                                    :ARG4 (c21-3 / center
                                                 :name (c21-13 / name
                                                               :op1 "Manesar"
                                                               :op2 "Urban"
                                                               :op3 "Primary"
                                                               :op4 "Health"
                                                               :op5 "Center")
                                                 :location (c21-10 / relative-position
                                                                   :op1 (c21-9 / toll
                                                                               :name (c21-2 / name
                                                                                            :op1 "Kherki"
                                                                                            :op2 "Daula"
                                                                                            :op3 "Toll"))
                                                                   :quant (c21-20 / about
                                                                                  :op1 (c21-0 / distance-quantity
                                                                                              :unit (c21-26 / kilometer)
                                                                                              :quant 1))))))
        :snt2 (c21-5 / reach-01
                     :ARG0 (c21-1 / car)
                     :ARG1 (c21-23 / point
                                   :mod (c21-7 / vaccinate-01))
                     :mod (c21-14 / almost))
        :snt3 (c21-22 / helpful-04
                      :ARG0 (c21-16 / person
                                    :ARG2-of (c21-15 / staff-01))
                      :degree (c21-21 / very))
        :snt4 (c21-6 / come-01
                     :ARG1 (c21-4 / they)
                     :ARG4 (c21-8 / over
                                  :op1 (c21-17 / car
                                               :poss (c21-19 / you)))
                     :ARG1-of (c21-24 / sure-02)))

# ::snt I do not think that facility is anywhere in guragon, needs to atleast walk -300 metres, may be on wheel chair or strecher.
# ::tokens ["I", "do", "not", "think", "that", "facility", "is", "anywhere", "in", "guragon", ",", "needs", "to", "atleast", "walk", "-300", "metres", ",", "may", "be", "on", "wheel", "chair", "or", "strecher", "."]
# ::lemmas ["i", "do", "not", "think", "that", "facility", "be", "anywhere", "in", "guragon", ",", "need", "to", "atleast", "walk", "-300", "metre", ",", "may", "be", "on", "wheel", "chair", "or", "strecher", "."]
(c22-10 / think-01
        :ARG0 (c22-14 / i)
        :ARG1 (c22-3 / and
                     :op1 (c22-13 / be-located-at-91
                                  :ARG1 (c22-5 / facility)
                                  :ARG2 (c22-17 / anywhere
                                                :location (c22-6 / country
                                                                 :name (c22-16 / name
                                                                               :op1 "Guragon"))))
                     :op2 (c22-11 / need-01
                                  :ARG0 c22-5
                                  :ARG1 (c22-7 / walk-01
                                               :ARG0 c22-5
                                               :extent (c22-1 / at-least
                                                              :op1 (c22-0 / distance-quantity
                                                                          :unit (c22-15 / meter)
                                                                          :quant 300))))
                     :op3 (c22-12 / possible-01
                                  :ARG1 c22-13
                                  :ARG1 c22-5
                                  :ARG2 (c22-9 / or
                                               :op1 (c22-2 / chair
                                                           :mod (c22-8 / wheel))
                                               :op2 (c22-4 / strecher))))
        :polarity -)

# ::snt anything?
# ::tokens ["anything", "?"]
# ::lemmas ["anything", "?"]
(c23-0 / anything
       :polarity (c23-1 / amr-unknown))

# ::snt Okay will check on this.
# ::tokens ["Okay", "will", "check", "on", "this", "."]
# ::lemmas ["okay", "will", "check", "on", "this", "."]
(c24-3 / check-01
       :ARG0 (c24-1 / i)
       :ARG1 (c24-2 / this)
       :ARG1-of (c24-0 / okay-04))

# ::snt Phc sector
# ::tokens ["Phc", "sector"]
# ::lemmas ["Phc", "sector"]
(c26-0 / sector
       :mod (c26-1 / pharmaceutical))

# ::snt Thanks Shreya! Could you share the details?
# ::tokens ["Thanks", "Shreya", "!", "Could", "you", "share", "the", "details", "?"]
# ::lemmas ["thank", "Shreya", "!", "could", "you", "share", "the", "detail", "?"]
(c27-7 / multi-sentence
       :snt1 (c27-4 / thank-01
                    :ARG0 (c27-6 / i)
                    :ARG1 (c27-5 / person
                                 :name (c27-8 / name
                                              :op1 "Shreya")))
       :snt2 (c27-3 / possible-01
                    :ARG1 (c27-0 / share-01
                                 :ARG0 (c27-9 / you)
                                 :ARG1 (c27-1 / detail))
                    :polarity (c27-2 / amr-unknown)))

# ::snt anything?
# ::tokens ["anything", "?"]
# ::lemmas ["anything", "?"]
(c28-0 / anything
       :polarity (c28-1 / amr-unknown))

# ::snt This is personal. Can you please help/guide.
# ::tokens ["This", "is", "personal", ".", "Can", "you", "please", "help", "/", "guide", "."]
# ::lemmas ["this", "be", "personal", ".", "can", "you", "please", "help", "/", "guide", "."]
(c29-7 / multi-sentence
       :snt1 (c29-6 / personal-02
                    :ARG1 (c29-4 / this))
       :snt2 (c29-3 / possible-01
                    :polarity (c29-1 / amr-unknown)
                    :ARG1 (c29-0 / slash
                                 :op1 (c29-2 / help-01
                                             :ARG0 (c29-8 / you))
                                 :op2 (c29-5 / guide-01
                                             :ARG0 c29-8))
                    :polite +))

# ::snt someone in your network might be able to help
# ::tokens ["someone", "in", "your", "network", "might", "be", "able", "to", "help"]
# ::lemmas ["someone", "in", "your", "network", "might", "be", "able", "to", "help"]
(c30-3 / possible-01
       :ARG1 (c30-1 / capable-01
                    :ARG1 (c30-0 / someone
                                 :location (c30-4 / network
                                                  :poss (c30-5 / you)))
                    :ARG2 (c30-2 / help-01
                                 :ARG0 c30-0)))

# ::snt Not aware of this Suhas, will check with some friends in ggn
# ::tokens ["Not", "aware", "of", "this", "Suhas", ",", "will", "check", "with", "some", "friends", "in", "ggn"]
# ::lemmas ["not", "aware", "of", "this", "Suhas", ",", "will", "check", "with", "some", "friend", "in", "ggn"]
(c31-2 / and
       :op1 (c31-7 / realize-01
                   :ARG0 (c31-10 / i)
                   :ARG1 (c31-0 / Suhas
                                :mod (c31-6 / this))
                   :polarity -)
       :op2 (c31-4 / check-01
                   :ARG0 c31-10
                   :accompanier (c31-8 / person
                                       :ARG0-of (c31-5 / have-rel-role-91
                                                       :ARG1 c31-10
                                                       :ARG2 (c31-3 / friend))
                                       :quant (c31-9 / some))
                   :location (c31-1 / country
                                    :name (c31-11 / name
                                                  :op1 "gn"))))

# ::snt Hi Abhishek. Thanks so much. Im trying to send you a DM.
# ::tokens ["Hi", "Abhishek", ".", "Thanks", "so", "much", ".", "I", "m", "trying", "to", "send", "you", "a", "DM", "."]
# ::lemmas ["hi", "Abhishek", ".", "thank", "so", "much", ".", "i", "m", "try", "to", "send", "you", "a", "dm", "."]
(c32-10 / multi-sentence
        :snt1 (c32-0 / say-01
                     :ARG1 (c32-5 / hi)
                     :ARG2 (c32-9 / person
                                  :name (c32-11 / name
                                                :op1 "Abhishek")))
        :snt2 (c32-7 / thank-01
                     :ARG0 (c32-2 / i)
                     :ARG1 c32-9
                     :degree (c32-3 / much
                                    :degree (c32-8 / so)))
        :snt3 (c32-4 / try-01
                     :ARG0 c32-2
                     :ARG1 (c32-6 / send-01
                                  :ARG0 c32-2
                                  :ARG1 (c32-1 / DM)
                                  :ARG2 c32-9)))

# ::snt Hey , please can you help with this??
# ::tokens ["Hey", ",", "please", "can", "you", "help", "with", "this", "?", "?"]
# ::lemmas ["hey", ",", "please", "can", "you", "help", "with", "this", "?", "?"]
(c33-4 / possible-01
       :polarity (c33-0 / amr-unknown)
       :ARG1 (c33-1 / help-01
                    :ARG0 (c33-5 / you)
                    :ARG1 (c33-2 / this))
       :mod (c33-3 / hey
                   :mode expressive)
       :polite +)

# ::snt They have a drive in facility at GK.
# ::tokens ["They", "have", "a", "drive", "in", "facility", "at", "GK", "."]
# ::lemmas ["they", "have", "a", "drive", "in", "facility", "at", "GK", "."]
(c34-2 / have-03
       :ARG0 (c34-3 / they)
       :ARG1 (c34-1 / facility
                    :purpose (c34-0 / drive-in-04)
                    :location c34-1
                    :name (c34-4 / name
                                 :op1 "GK")))

# ::snt Sending you a DM
# ::tokens ["Sending", "you", "a", "DM"]
# ::lemmas ["send", "you", "a", "DM"]
(c37-0 / send-01
       :ARG1 (c37-1 / DM)
       :ARG2 (c37-2 / you))

# ::snt Pls connect
# ::tokens ["Pls", "connect"]
# ::lemmas ["pls", "connect"]
(c38-1 / connect-01
       :ARG1 (c38-0 / cell))

# ::snt Plz go to the any near by gurudwara sahib they will definitely help u out plz help
# ::tokens ["Plz", "go", "to", "the", "any", "near", "by", "gurudwara", "sahib", "they", "will", "definitely", "help", "u", "out", "plz", "help"]
# ::lemmas ["plz", "go", "to", "the", "any", "near", "by", "gurudwara", "sahib", "they", "will", "definitely", "help", "u", "out", "plz", "help"]
(c39-6 / multi-sentence
       :snt1 (c39-5 / go-02
                    :ARG0 (c39-8 / you)
                    :ARG4 (c39-1 / any
                                 :ARG1-of (c39-7 / near-02
                                                 :ARG2 (c39-2 / city
                                                              :name (c39-4 / name
                                                                           :op1 "Gurudwara"
                                                                           :op2 "Sarkhib"))))
                    :mode imperative
                    :polite +)
       :snt2 (c39-3 / help-out-03
                    :ARG0 (c39-9 / you)
                    :mod (c39-0 / definite)
                    :mode imperative
                    :polite +))

# ::snt please share the following and I will let you know by tomorrow Age:Which Vaccine:Where was the first dose taken and whenin code
# ::tokens ["please", "share", "the", "following", "and", "I", "will", "let", "you", "know", "by", "tomorrow", "Age", ":", "Which", "Vaccine", ":", "Where", "was", "the", "first", "dose", "taken", "and", "whenin", "code"]
# ::lemmas ["please", "share", "the", "following", "and", "i", "will", "let", "you", "know", "by", "tomorrow", "age", ":", "which", "Vaccine", ":", "where", "be", "the", "first", "dose", "take", "and", "whenin", "code"]
(c40-3 / and
       :op1 (c40-0 / share-01
                   :ARG0 (c40-14 / you)
                   :ARG1 (c40-10 / thing
                                 :ARG1-of (c40-5 / follow-04))
                   :mode imperative
                   :polite +)
       :op2 (c40-11 / let-know-07
                    :ARG0 (c40-13 / i)
                    :ARG1 c40-14
                    :ARG2 (c40-15 / and
                                  :op1 (c40-12 / be-located-at-91
                                               :ARG1 (c40-1 / dose
                                                            :ord (c40-9 / ordinal-entity
                                                                        :value 1))
                                               :ARG2 (c40-2 / amr-unknown)
                                               :op2-of c40-15)
                                  :ARG1 c40-1
                                  :ARG2 (c40-6 / code)))
       :time (c40-4 / by
                    :op1 (c40-7 / tomorrow))
       :topic (c40-8 / vaccine))

# ::snt :can you help in this case?
# ::tokens [":", "can", "you", "help", "in", "this", "case", "?"]
# ::lemmas [":", "can", "you", "help", "in", "this", "case", "?"]
(c41-4 / possible-01
       :polarity (c41-0 / amr-unknown)
       :ARG1 (c41-2 / help-01
                    :ARG0 (c41-5 / you)
                    :ARG1 (c41-1 / case-03
                                 :mod (c41-3 / this))))

# ::snt I will keep you informed if I find anyone who can do this
# ::tokens ["I", "will", "keep", "you", "informed", "if", "I", "find", "anyone", "who", "can", "do", "this"]
# ::lemmas ["i", "will", "keep", "you", "informed", "if", "i", "find", "anyone", "who", "can", "do", "this"]
(c42-7 / keep-02
       :ARG0 (c42-6 / i)
       :ARG1 (c42-3 / inform-01
                    :ARG0 c42-6
                    :ARG1 (c42-8 / you))
       :condition (c42-2 / find-01
                         :ARG0 c42-6
                         :ARG1 (c42-1 / anyone
                                      :ARG0-of (c42-0 / do-02
                                                      :ARG1 (c42-4 / this)
                                                      :ARG1-of (c42-5 / possible-01)))))

# ::snt Check instagram DM!
# ::tokens ["Check", "instagram", "DM", "!"]
# ::lemmas ["check", "instagram", "dm", "!"]
(c43-1 / check-01
       :ARG0 (c43-4 / you)
       :ARG1 (c43-2 / publication
                    :name (c43-3 / name
                                 :op1 "Instagram")
                    :ARG2-of (c43-0 / DM-01))
       :mode imperative)

# ::snt Thats helpful to know. Ill call them. Thanks so much!
# ::tokens ["That", "s", "helpful", "to", "know", ".", "Ill", "call", "them", ".", "Thanks", "so", "much", "!"]
# ::lemmas ["that", "s", "helpful", "to", "know", ".", "Ill", "call", "they", ".", "thank", "so", "much", "!"]
(c44-8 / multi-sentence
       :snt1 (c44-4 / helpful-04
                    :ARG0 (c44-9 / know-01
                                 :ARG1 (c44-5 / that)))
       :snt2 (c44-1 / call-02
                    :ARG0 (c44-7 / i)
                    :ARG1 (c44-3 / they))
       :snt3 (c44-10 / thank-01
                     :ARG0 c44-7)
       :ARG1 (c44-6 / you)
       :degree (c44-2 / much
                      :degree (c44-0 / so)))

# ::snt Thanks Deepak. Even if its not a drive-in, would just need someone to come to the car to administer the dose. Appreciate any advice.
# ::tokens ["Thanks", "Deepak", ".", "Even", "if", "its", "not", "a", "drive", "-", "in", ",", "would", "just", "need", "someone", "to", "come", "to", "the", "car", "to", "administer", "the", "dose", ".", "Appreciate", "any", "advice", "."]
# ::lemmas ["thank", "Deepak", ".", "even", "if", "its", "not", "a", "drive", "-", "in", ",", "would", "just", "need", "someone", "to", "come", "to", "the", "car", "to", "administer", "the", "dose", ".", "appreciate", "any", "advice", "."]
(c45-7 / multi-sentence
       :snt1 (c45-6 / thank-01
                    :ARG0 (c45-4 / i)
                    :ARG1 (c45-18 / person
                                  :name (c45-8 / name
                                               :op1 "Deepak")))
       :snt2 (c45-3 / need-01
                    :ARG0 (c45-12 / i)
                    :ARG1 (c45-5 / come-01
                                 :ARG1 (c45-11 / someone)
                                 :ARG4 (c45-0 / car)
                                 :purpose (c45-15 / administer-01
                                                  :ARG0 c45-11
                                                  :ARG1 (c45-1 / dose)))
                    :mod (c45-17 / just)
                    :concession (c45-10 / even-if
                                        :op1 (c45-14 / drive-in-02
                                                     :domain (c45-13 / it)
                                                     :polarity -)))
       :snt3 (c45-9 / appreciate-02
                    :ARG0 (c45-16 / i)
                    :ARG1 (c45-2 / advise-01
                                 :ARG0 c45-16
                                 :mod (c45-19 / any))))

# ::snt May be you can try DLF medanta e-clinic &amp; request nurse to come outside and give a jab. Im not sure though, but there is a drive way that is really accessible &amp; next to the entrance. Call them once &amp; confirm.
# ::tokens ["May", "be", "you", "can", "try", "DLF", "medanta", "e", "-", "clinic", "&", "amp", ";", "request", "nurse", "to", "come", "outside", "and", "give", "a", "jab", ".", "I", "m", "not", "sure", "though", ",", "but", "there", "is", "a", "drive", "way", "that", "is", "really", "accessible", "&", "amp", ";", "next", "to", "the", "entrance", ".", "Call", "them", "once", "&", "amp", ";", "confirm", "."]
# ::lemmas ["may", "be", "you", "can", "try", "DLF", "medanta", "e", "-", "clinic", "&", "amp", ";", "request", "nurse", "to", "come", "outside", "and", "give", "a", "jab", ".", "i", "m", "not", "sure", "though", ",", "but", "there", "be", "a", "drive", "way", "that", "be", "really", "accessible", "&", "amp", ";", "next", "to", "the", "entrance", ".", "call", "they", "once", "&", "amp", ";", "confirm", "."]
(c46-14 / multi-sentence
        :snt1 (c46-28 / possible-01
                      :ARG1 (c46-24 / and
                                    :op1 (c46-11 / try-01
                                                 :ARG0 (c46-22 / you)
                                                 :ARG1 (c46-5 / clinic
                                                              :name (c46-15 / name
                                                                            :op1 "LDF")
                                                              :mod (c46-25 / medicine)))
                                    :op2 (c46-12 / request-01
                                                 :ARG0 c46-22
                                                 :ARG1 (c46-16 / and
                                                               :op1 (c46-0 / come-01
                                                                           :ARG1 (c46-3 / nurse)
                                                                           :ARG4 (c46-10 / outside))
                                                               :op2 (c46-13 / give-01
                                                                            :ARG0 c46-3
                                                                            :ARG1 (c46-27 / jab))))))
        :snt2 (c46-8 / contrast-01
                     :ARG1 (c46-18 / sure-02
                                   :ARG0 (c46-4 / i)
                                   :ARG1-of (c46-26 / have-concession-91)
                                   :polarity -)
                     :ARG2 (c46-1 / and
                                  :op1 (c46-29 / access-01
                                               :ARG1 (c46-6 / way
                                                            :mod (c46-2 / drive-01))
                                               :ARG1-of (c46-9 / real-04)
                                               :location (c46-20 / next-to
                                                                 :op1 (c46-17 / entrance)))
                                  :op2 (c46-21 / call-02
                                               :ARG0 (c46-23 / you)
                                               :ARG1 (c46-7 / they)
                                               :frequency 1)))
        :snt3 (c46-19 / confirm-01
                      :ARG0 c46-23
                      :mode imperative))

# ::snt That Covid App Setu is thereCheck there cc
# ::tokens ["That", "Covid", "App", "Setu", "is", "thereCheck", "there", "cc"]
# ::lemmas ["that", "Covid", "App", "Setu", "be", "thereCheck", "there", "cc"]
(c47-0 / check-01
       :ARG0 (c47-8 / you)
       :ARG1 (c47-5 / be-located-at-91
                    :ARG1 (c47-2 / organization
                                 :name (c47-7 / name
                                              :op1 "Covid"
                                              :op2 "App"
                                              :op3 "Setu")
                                 :mod (c47-3 / that))
                    :ARG2 (c47-1 / there))
       :mod (c47-6 / product
                   :name (c47-4 / name
                                :op1 "CC"))
       :mode imperative)

# ::snt Following this thread
# ::tokens ["Following", "this", "thread"]
# ::lemmas ["follow", "this", "thread"]
(c48-2 / follow-02
       :ARG1 (c48-1 / thread
                    :mod (c48-0 / this)))

# ::snt Gurgaon is extremely short on supply for now
# ::tokens ["Gurgaon", "is", "extremely", "short", "on", "supply", "for", "now"]
# ::lemmas ["Gurgaon", "be", "extremely", "short", "on", "supply", "for", "now"]
(c49-0 / short-06
       :ARG1 (c49-1 / city
                    :name (c49-4 / name
                                 :op1 "Gurgaon"))
       :ARG2 (c49-3 / supply-01)
       :degree (c49-5 / extreme)
       :time (c49-2 / now))

# ::snt Why though? Seems bizarre.
# ::tokens ["Why", "though", "?", "Seems", "bizarre", "."]
# ::lemmas ["why", "though", "?", "seem", "bizarre", "."]
(c50-4 / multi-sentence
       :snt1 (c50-2 / have-concession-91
                    :ARG2 (c50-1 / amr-unknown))
       :snt2 (c50-0 / seem-01
                    :ARG1 (c50-3 / bizarre)))
