# ::snt Thank you very much, I also hope for good
# ::tokens ["Thank", "you", "very", "much", ",", "I", "also", "hope", "for", "good"]
# ::lemmas ["thank", "you", "very", "much", ",", "i", "also", "hope", "for", "good"]
(c1-0 / and
      :op1 (c1-3 / thank-01
                 :ARG0 (c1-5 / i)
                 :ARG1 (c1-7 / you)
                 :mod (c1-6 / much
                            :degree (c1-2 / very)))
      :op2 (c1-1 / hope-01
                 :ARG0 c1-5
                 :ARG1 (c1-4 / good-02)
                 :mod (c1-8 / also)))

# ::snt Good luck. I had some side effects but nothing debilitating, nothing as bad as a ventilator.
# ::tokens ["Good", "luck", ".", "I", "had", "some", "side", "effects", "but", "nothing", "debilitating", ",", "nothing", "as", "bad", "as", "a", "ventilator", "."]
# ::lemmas ["good", "luck", ".", "i", "have", "some", "side", "effect", "but", "nothing", "debilitate", ",", "nothing", "as", "bad", "as", "a", "ventilator", "."]
(c2-13 / multi-sentence
       :snt1 (c2-9 / luck
                   :ARG1-of (c2-10 / good-02))
       :snt2 (c2-4 / have-concession-91
                   :ARG1 (c2-3 / and
                               :op1 (c2-14 / nothing
                                           :ARG0-of (c2-0 / debilitate-01))
                               :op2 (c2-11 / have-degree-91
                                           :ARG1 (c2-8 / nothing)
                                           :ARG2 (c2-6 / bad-07)
                                           :ARG3 (c2-15 / equal)
                                           :ARG4 (c2-7 / ventilator)))
                   :ARG2 (c2-5 / effect-03
                               :ARG1 (c2-12 / i)
                               :mod (c2-1 / side)
                               :quant (c2-2 / some))))

# ::snt think that if we have a heavy side effect how we take care of them. (Although we have very good neighbours who will happily help us and already offered us help if we need) Well, fingers crossed
# ::tokens ["think", "that", "if", "we", "have", "a", "heavy", "side", "effect", "how", "we", "take", "care", "of", "them", ".", "(", "Although", "we", "have", "very", "good", "neighbours", "who", "will", "happily", "help", "us", "and", "already", "offered", "us", "help", "if", "we", "need", ")", "Well", ",", "fingers", "crossed"]
# ::lemmas ["think", "that", "if", "we", "have", "a", "heavy", "side", "effect", "how", "we", "take", "care", "of", "they", ".", "(", "although", "we", "have", "very", "good", "neighbour", "who", "will", "happily", "help", "we", "and", "already", "offer", "we", "help", "if", "we", "need", ")", "well", ",", "finger", "cross"]
(c3-13 / multi-sentence
       :snt1 (c3-11 / think-01
                    :ARG1 (c3-4 / care-03
                                :ARG0 (c3-5 / we)
                                :ARG1 (c3-6 / they)
                                :condition (c3-18 / affect-01
                                                  :ARG0 (c3-17 / side
                                                               :mod (c3-20 / heavy))
                                                  :ARG1 c3-5)))
       :snt2 (c3-2 / have-concession-91
                   :ARG1 (c3-3 / have-03
                               :ARG0 (c3-16 / we)
                               :ARG1 (c3-14 / neighbor
                                            :ARG1-of (c3-12 / good-02
                                                            :degree (c3-8 / very))
                                            :ARG0-of (c3-9 / help-01
                                                           :ARG2 c3-16
                                                           :ARG0-of (c3-7 / happy-01))
                                            :ARG0-of (c3-10 / offer-01
                                                            :ARG1 (c3-21 / help-01
                                                                         :ARG0 c3-14
                                                                         :ARG2 c3-16)
                                                            :ARG2 c3-16
                                                            :time (c3-15 / already)
                                                            :condition (c3-1 / need-01
                                                                             :ARG0 c3-16))))
                   :ARG2 (c3-19 / finger
                                :ARG1-of (c3-0 / cross-01))))
