# ::snt Gratulerer!!
# ::tokens ["Gratulerer", "!", "!"]
# ::lemmas ["Gratulerer", "!", "!"]
(c1-1 / person
      :ARG0-of (c1-0 / succeed-01)
      :mode expressive)

# ::snt Tfw du innser at folk fdt i fyller r
# ::tokens ["Tfw", "du", "innser", "at", "folk", "fdt", "i", "fyller", "r"]
# ::lemmas ["Tfw", "du", "innser", "at", "folk", "fdt", "i", "fyller", "r"]
(c2-0 / and
      :op1 (c2-6 / person
                 :name (c2-7 / name
                             :op1 "Tfw"
                             :op2 "du"
                             :op3 " innser")
                 :location (c2-1 / folk))
      :op2 (c2-3 / person
                 :name (c2-5 / name
                             :op1 "I")
                 :ARG0-of (c2-4 / tell-01
                                :ARG1 (c2-2 / truth-value))))

# ::snt YAYYYYYY!!!!
# ::tokens ["YAYYYYYY", "!", "!", "!", "!"]
# ::lemmas ["YAYYYYYY", "!", "!", "!", "!"]
(c4-0 / yay
      :mode expressive)

# ::snt smol babbies
# ::tokens ["smol", "babbies"]
# ::lemmas ["smol", "babbie"]
(c6-0 / babie
      :ARG1-of (c6-1 / laugh-01
                     :manner (c6-2 / loud))
      :mode expressive)

# ::snt u and me both
# ::tokens ["u", "and", "me", "both"]
# ::lemmas ["u", "and", "i", "both"]
(c7-2 / and
      :op1 (c7-3 / you)
      :op2 (c7-1 / i)
      :mod (c7-0 / both))

# ::snt nei fyfaen n flte jeg meg HVERT FALL som en baby
# ::tokens ["nei", "fyfaen", "n", "flte", "jeg", "meg", "HVERT", "FALL", "som", "en", "baby"]
# ::lemmas ["nei", "fyfaen", "n", "flte", "jeg", "meg", "HVERT", "FALL", "som", "en", "baby"]
(c8-2 / and
      :op1 (c8-4 / have-03
                 :ARG0 (c8-3 / folk)
                 :ARG1 (c8-5 / fyfaen))
      :op2 (c8-8 / have-03
                 :ARG0 c8-3
                 :ARG1 (c8-6 / fuck-01
                             :ARG1 (c8-9 / person
                                         :name (c8-10 / name
                                                      :op1 "Meg"
                                                      :op2 "HVERT"))))
      :op3 (c8-0 / fuck-01
                 :ARG1 c8-9
                 :ARG0-of (c8-1 / have-rel-role-91
                                :ARG2 (c8-7 / baby))))

# ::snt Lil babies
# ::tokens ["Lil", "babies"]
# ::lemmas ["Lil", "baby"]
(c9-0 / baby
      :mod (c9-1 / little))

# ::snt first
# ::tokens ["first"]
# ::lemmas ["first"]
(c10-0 / have-li-91
       :ARG2 1)

# ::snt Den eldste elevgruppa eg har undervist var -are
# ::tokens ["Den", "eldste", "elevgruppa", "eg", "har", "undervist", "var", "-are"]
# ::lemmas ["Den", "eldste", "elevgruppa", "eg", "har", "undervist", "var", "-are"]
(c11-1 / and
       :op1 (c11-0 / deny-01
                   :ARG1 (c11-2 / work-of-art
                                :name (c11-5 / name
                                             :op1 "Eldste"
                                             :op2 "Elevgruppa")))
       :op2 (c11-3 / har-02
                   :ARG1 (c11-4 / undervist))
       :op3 (c11-6 / et-cetera))

# ::snt smol Sarah
# ::tokens ["smol", "Sarah"]
# ::lemmas ["smol", "Sarah"]
(c12-0 / say-01
       :ARG0 (c12-4 / i)
       :ARG1 (c12-3 / laugh-01
                    :ARG0 c12-4
                    :manner (c12-1 / loud))
       :ARG2 (c12-2 / person
                    :name (c12-5 / name
                                 :op1 "Sarah")))

# ::snt accidental problematic fave
# ::tokens ["accidental", "problematic", "fave"]
# ::lemmas ["accidental", "problematic", "fave"]
(c13-2 / fave
       :ARG1-of (c13-0 / problematic-02
                       :ARG1-of (c13-1 / accident-01)))

# ::snt der har vi det ja!!!!!!!!! -baiting
# ::tokens ["der", "har", "vi", "det", "ja", "!", "!", "!", "!", "!", "!", "!", "!", "!", "-baiting"]
# ::lemmas ["der", "har", "vi", "det", "ja", "!", "!", "!", "!", "!", "!", "!", "!", "!", "-baite"]
(c14-0 / bait-01
       :mod (c14-2 / har-har-har
                   :mode expressive)
       :mod (c14-1 / det))

# ::snt FUCK OFF BREAD
# ::tokens ["FUCK", "OFF", "BREAD"]
# ::lemmas ["fuck", "off", "BREAD"]
(c15-1 / fuck-off-03
       :ARG1 (c15-0 / thread))

# ::snt jeg har bursdag i november da s jeg er fortsatt r gammel hvis det hjelper queen
# ::tokens ["jeg", "har", "bursdag", "i", "november", "da", "s", "jeg", "er", "fortsatt", "r", "gammel", "hvis", "det", "hjelper", "queen"]
# ::lemmas ["jeg", "har", "bursdag", "i", "november", "da", "s", "jeg", "er", "fortsatt", "r", "gammel", "hvis", "det", "hjelper", "queen"]
(c17-1 / and
       :op1 (c17-10 / person
                    :name (c17-11 / name
                                  :op1 "Jeg"))
       :op2 (c17-7 / person
                   :name (c17-8 / name
                                :op1 "Bursdag"))
       :op3 (c17-4 / person
                   :name (c17-6 / name
                                :op1 "Jesus"))
       :op4 (c17-3 / person
                   :name (c17-2 / name
                                :op1 "Hvis"))
       :op5 (c17-0 / person
                   :name (c17-9 / name
                                :op1 "Hjelper"
                                :op2 " queen"))
       :time (c17-5 / no-vember))

# ::snt WHAT???? var % sikker p at vi var like gamle
# ::tokens ["WHAT", "?", "?", "?", "?", "var", "%", "sikker", "p", "at", "vi", "var", "like", "gamle"]
# ::lemmas ["what", "?", "?", "?", "?", "var", "%", "sikker", "p", "at", "vi", "var", "like", "gamle"]
(c18-1 / amr-unknown
       :ARG1-of (c18-2 / resemble-01
                       :ARG2 (c18-0 / gamle)))

# ::snt jeg er -er, how dare you disrespect me like this
# ::tokens ["jeg", "er", "-er", ",", "how", "dare", "you", "disrespect", "me", "like", "this"]
# ::lemmas ["jeg", "er", "-er", ",", "how", "dare", "you", "disrespect", "i", "like", "this"]
(c19-1 / ask-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-0 / dare-01
                    :ARG0 (c19-8 / you
                                 :ARG1-of c19-0)
                    :ARG2 (c19-6 / disrespect-01
                                 :ARG0 c19-8
                                 :ARG1 c19-2
                                 :ARG1-of (c19-4 / resemble-01
                                                 :ARG2 (c19-3 / this)))
                    :manner (c19-9 / amr-unknown))
       :ARG2 (c19-5 / person
                    :name (c19-7 / name
                                 :op1 "jeg er-er")))

# ::snt -babes har en bra dag i dag, fordi same, bare at sangen var starman av david bowie
# ::tokens ["-babes", "har", "en", "bra", "dag", "i", "dag", ",", "fordi", "same", ",", "bare", "at", "sangen", "var", "starman", "av", "david", "bowie"]
# ::lemmas ["-babes", "har", "en", "bra", "dag", "i", "dag", ",", "fordi", "same", ",", "bare", "at", "sangen", "var", "starman", "av", "david", "bowie"]
(c20-3 / and
       :op1 (c20-15 / and
                    :op1 (c20-7 / har-
                                :op1 (c20-11 / bra))
                    :op2 (c20-0 / dag)
                    :op3 (c20-5 / fordi
                                :ARG1-of (c20-1 / same-01)))
       :op2 (c20-2 / bare-02
                   :ARG0 (c20-14 / you)
                   :ARG1 (c20-4 / and
                                :op1 (c20-12 / person
                                             :name (c20-13 / name
                                                           :op1 "Christian"))
                                :op2 (c20-9 / person
                                            :name (c20-10 / name
                                                          :op1 "Starman"))
                                :op3 (c20-6 / person
                                            :name (c20-8 / name
                                                         :op1 "David"
                                                         :op2 "bowie")))
                   :mode imperative))
