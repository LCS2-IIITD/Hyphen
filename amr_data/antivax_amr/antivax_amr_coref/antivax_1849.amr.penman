# ::snt I'm not watching it I know the alternative media is seductive. The people who make it are making money from telling you unsubstantiated things. I'm not saying there isn't truth from alternative media, but there is also an incentive for them to find more and more things to scare u
# ::tokens ["I", "'m", "not", "watching", "it", "I", "know", "the", "alternative", "media", "is", "seductive", ".", "The", "people", "who", "make", "it", "are", "making", "money", "from", "telling", "you", "unsubstantiated", "things", ".", "I", "'m", "not", "saying", "there", "is", "n't", "truth", "from", "alternative", "media", ",", "but", "there", "is", "also", "an", "incentive", "for", "them", "to", "find", "more", "and", "more", "things", "to", "scare", "u"]
# ::lemmas ["i", "be", "not", "watch", "it", "i", "know", "the", "alternative", "medium", "be", "seductive", ".", "the", "people", "who", "make", "it", "be", "make", "money", "from", "tell", "you", "unsubstantiated", "thing", ".", "i", "be", "not", "say", "there", "be", "not", "truth", "from", "alternative", "medium", ",", "but", "there", "be", "also", "an", "incentive", "for", "they", "to", "find", "more", "and", "more", "thing", "to", "scare", "u"]
(c1-10 / multi-sentence
       :snt1 (c1-5 / watch-01
                   :ARG0 (c1-2 / i)
                   :ARG1 (c1-15 / it)
                   :polarity -)
       :snt2 (c1-28 / know-01
                    :ARG0 (c1-16 / i)
                    :ARG1 (c1-14 / seduce-01
                                 :ARG0 (c1-24 / media
                                              :mod (c1-21 / alternative))))
       :snt3 (c1-19 / make-05
                    :ARG0 (c1-27 / person
                                 :ARG1 (c1-9 / money)
                                 :ARG0-of c1-19))
       :ARG1 (c1-8 / tell-01
                   :ARG0 c1-27
                   :ARG1 (c1-6 / thing
                               :ARG1-of (c1-26 / substantiate-01
                                               :polarity -))
                   :ARG2 (c1-20 / you))
       :snt4 (c1-4 / contrast-01
                   :ARG1 (c1-17 / say-01
                                :ARG0 (c1-25 / i)
                                :ARG1 (c1-11 / truth
                                             :source (c1-12 / media
                                                            :mod (c1-13 / alternative))
                                             :polarity -)
                                :polarity -)
                   :ARG2 (c1-7 / incentivize-01
                               :ARG1 (c1-18 / they)
                               :ARG2 (c1-23 / find-01
                                            :ARG0 c1-18
                                            :ARG1 (c1-22 / thing
                                                         :ARG1-of (c1-1 / increase-01))
                                            :purpose (c1-3 / scare-01
                                                           :ARG0 c1-18
                                                           :ARG1 c1-20)))
                   :mod (c1-0 / also)))

# ::snt They are just trolls!!
# ::tokens ["They", "are", "just", "trolls", "!", "!"]
# ::lemmas ["they", "be", "just", "troll", "!", "!"]
(c2-1 / troll
      :domain (c2-0 / they)
      :mod (c2-2 / just))

# ::snt much more appropriate for you, catcha
# ::tokens ["much", "more", "appropriate", "for", "you", ",", "catcha"]
# ::lemmas ["much", "more", "appropriate", "for", "you", ",", "catcha"]
(c3-0 / say-01
      :ARG1 (c3-3 / have-degree-91
                  :ARG1 (c3-1 / appropriate-02
                              :ARG2 (c3-7 / you)
                              :ARG2-of c3-3)
                  :ARG2 c3-7)
      :ARG3 (c3-5 / more
                  :quant (c3-2 / much))
      :ARG2 (c3-4 / person
                  :name (c3-6 / name
                              :op1 "catcha")))

# ::snt See my point
# ::tokens ["See", "my", "point"]
# ::lemmas ["see", "my", "point"]
(c4-0 / see-01
      :ARG0 (c4-2 / you)
      :ARG1 (c4-1 / point-04
                  :ARG0 (c4-3 / i))
      :mode imperative)

# ::snt Na your awright numbnuts, catcha
# ::tokens ["Na", "your", "awright", "numbnuts", ",", "catcha"]
# ::lemmas ["na", "your", "awright", "numbnut", ",", "catcha"]
(c5-0 / say-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-6 / numbnuts
                  :ARG1-of (c5-2 / right-06)
                  :domain (c5-7 / you)
                  :mod (c5-1 / awright))
      :ARG2 (c5-3 / person
                  :name (c5-4 / name
                              :op1 "catcha")))

# ::snt I've seen better, try a bit harder you never know how low you can go.Just makes you all the more irrelevant
# ::tokens ["I", "'ve", "seen", "better", ",", "try", "a", "bit", "harder", "you", "never", "know", "how", "low", "you", "can", "go", ".", "Just", "makes", "you", "all", "the", "more", "irrelevant"]
# ::lemmas ["i", "'ve", "see", "well", ",", "try", "a", "bit", "hard", "you", "never", "know", "how", "low", "you", "can", "go", ".", "just", "make", "you", "all", "the", "more", "irrelevant"]
(c6-9 / multi-sentence
      :snt1 (c6-12 / see-01
                   :ARG0 (c6-1 / i)
                   :ARG1-of (c6-19 / have-degree-91
                                   :ARG2 (c6-7 / good-02
                                               :ARG1 c6-12)
                                   :ARG3 (c6-18 / more
                                                :quant (c6-20 / bit))))
      :snt2 (c6-5 / try-01
                  :ARG0 (c6-15 / you)
                  :ARG1-of (c6-0 / have-degree-91
                                 :ARG2 (c6-2 / hard-02
                                             :ARG1 c6-5)
                                 :ARG3 (c6-13 / more
                                              :quant c6-20))
                  :mode imperative)
      :snt3 (c6-23 / know-01
                   :ARG0 (c6-16 / you)
                   :ARG1 (c6-3 / thing
                               :ARG4-of (c6-14 / go-01
                                               :ARG1 c6-16
                                               :ARG1-of (c6-22 / possible-01)))
                   :time (c6-11 / ever)
                   :polarity -)
      :snt4 (c6-8 / make-02
                  :ARG0 (c6-21 / just)
                  :ARG1 (c6-6 / relevant-01
                              :ARG1 c6-16
                              :ARG2-of (c6-4 / have-degree-91
                                             :ARG1 c6-16
                                             :ARG3 (c6-10 / more
                                                          :mod (c6-17 / all)))
                              :polarity -)))

# ::snt Who the fuck is this walaper? Bite ma shite Graeme, away lie in your own pish, get tae fuck there is that enough insults for you.
# ::tokens ["Who", "the", "fuck", "is", "this", "walaper", "?", "Bite", "ma", "shite", "Graeme", ",", "away", "lie", "in", "your", "own", "pish", ",", "get", "tae", "fuck", "there", "is", "that", "enough", "insults", "for", "you", "."]
# ::lemmas ["who", "the", "fuck", "be", "this", "walaper", "?", "bite", "ma", "shite", "Graeme", ",", "away", "lie", "in", "your", "own", "pish", ",", "get", "tae", "fuck", "there", "be", "that", "enough", "insult", "for", "you", "."]
(c7-4 / multi-sentence
      :snt1 (c7-20 / person
                   :polarity (c7-13 / amr-unknown)
                   :domain (c7-16 / person
                                  :mod (c7-2 / this)
                                  :ARG0-of (c7-8 / skim-02))
                   :mod (c7-14 / fuck))
      :snt2 (c7-6 / and
                  :op1 (c7-18 / bite-01
                              :ARG0 (c7-12 / you)
                              :ARG1 (c7-10 / person
                                           :name (c7-5 / name
                                                       :op1 "Geme")
                                           :mod (c7-19 / shit
                                                       :mode expressive))
                              :mode imperative)
                  :op2 (c7-17 / lie-07
                              :ARG0 c7-12
                              :ARG2 (c7-9 / pish
                                          :poss c7-12)
                              :direction (c7-0 / away)
                              :mode imperative)
                  :op3 (c7-3 / get-05
                             :ARG0 c7-12
                             :ARG1 (c7-1 / insult-01
                                         :ARG1 c7-12
                                         :ARG1-of (c7-15 / have-quant-91
                                                         :ARG3 (c7-7 / enough)))
                             :ARG2 (c7-11 / fuck)
                             :mode imperative)))

# ::snt Perhaps you should go, the only insults and foul contributions seem to be coming from you.True sign of an argument lost and rationality thrown out the window.
# ::tokens ["Perhaps", "you", "should", "go", ",", "the", "only", "insults", "and", "foul", "contributions", "seem", "to", "be", "coming", "from", "you", ".", "True", "sign", "of", "an", "argument", "lost", "and", "rationality", "thrown", "out", "the", "window", "."]
# ::lemmas ["perhaps", "you", "should", "go", ",", "the", "only", "insult", "and", "foul", "contribution", "seem", "to", "be", "come", "from", "you", ".", "true", "sign", "of", "an", "argument", "lose", "and", "rationality", "throw", "out", "the", "window", "."]
(c8-12 / multi-sentence
       :snt1 (c8-21 / possible-01
                    :ARG1 (c8-10 / recommend-01
                                 :ARG1 (c8-11 / go-02
                                              :ARG0 (c8-15 / you)))
                    :ARG1-of (c8-3 / cause-01
                                   :ARG0 (c8-14 / seem-01
                                                :ARG1 (c8-0 / come-03
                                                            :ARG1 (c8-16 / and
                                                                         :op1 (c8-2 / insult-01)
                                                                         :op2 (c8-6 / contribute-01
                                                                                    :mod (c8-17 / foul))
                                                                         :mod (c8-8 / only))
                                                            :ARG2 c8-15))))
       :snt2 (c8-20 / signal-07
                    :ARG1 (c8-13 / and
                                 :op1 (c8-19 / lose-02
                                             :ARG1 (c8-1 / argue-01))
                                 :op2 (c8-9 / throw-01
                                            :ARG1 (c8-7 / rationality)
                                            :ARG2 (c8-18 / out-06
                                                         :ARG2 (c8-4 / window)))
                                 :ARG1-of (c8-5 / true-01))))

# ::snt Great. I was about to do the same, Im slow because guess what, my life doesnt revolve around Twitter. Its entirely up to you what you do, Im not concerned about you just your family, friends and those you meet. But best wishes, believe whatever you like, its your right.
# ::tokens ["Great", ".", "I", "was", "about", "to", "do", "the", "same", ",", "I", "m", "slow", "because", "guess", "what", ",", "my", "life", "does", "nt", "revolve", "around", "Twitter", ".", "Its", "entirely", "up", "to", "you", "what", "you", "do", ",", "I", "m", "not", "concerned", "about", "you", "just", "your", "family", ",", "friends", "and", "those", "you", "meet", ".", "But", "best", "wishes", ",", "believe", "whatever", "you", "like", ",", "its", "your", "right", "."]
# ::lemmas ["great", ".", "i", "be", "about", "to", "do", "the", "same", ",", "i", "m", "slow", "because", "guess", "what", ",", "my", "life", "do", "not", "revolve", "around", "Twitter", ".", "its", "entirely", "up", "to", "you", "what", "you", "do", ",", "i", "m", "not", "concerned", "about", "you", "just", "your", "family", ",", "friend", "and", "those", "you", "meet", ".", "but", "good", "wish", ",", "believe", "whatever", "you", "like", ",", "its", "your", "right", "."]
(c9-15 / multi-sentence
       :snt1 (c9-14 / great
                    :domain (c9-0 / do-02
                                  :ARG0 (c9-6 / i)
                                  :ARG1 (c9-12 / thing
                                               :ARG1-of (c9-20 / same-01))
                                  :time (c9-32 / about-to)))
       :snt2 (c9-40 / slow-05
                    :ARG1 c9-6
                    :ARG1-of (c9-7 / cause-01
                                   :ARG0 (c9-13 / revolve-02
                                                :ARG1 (c9-9 / thing
                                                            :ARG1-of (c9-38 / live-01
                                                                            :ARG0 c9-6))
                                                :ARG2 (c9-41 / publication
                                                             :name (c9-16 / name
                                                                          :op1 "Twitter"))
                                                :ARG1-of (c9-29 / guess-01
                                                                :ARG0 c9-6)
                                                :polarity -)))
       :snt3 (c9-18 / and
                    :op1 (c9-28 / depend-01
                                :ARG0 (c9-17 / thing
                                             :ARG1-of (c9-22 / do-02
                                                             :ARG0 (c9-30 / you)))
                                :ARG1 (c9-31 / you)
                                :degree (c9-19 / entire)
                                :polarity -)
                    :op2 (c9-1 / concern-01
                               :ARG0 (c9-2 / and
                                           :op1 (c9-33 / family
                                                       :poss c9-31)
                                           :op2 (c9-36 / person
                                                       :ARG0-of (c9-35 / have-rel-role-91
                                                                       :ARG1 c9-31
                                                                       :ARG2 (c9-27 / friend)))
                                           :op3 (c9-23 / person
                                                       :ARG1-of (c9-34 / meet-02
                                                                       :ARG0 c9-31))
                                           :mod (c9-37 / just))
                               :ARG1 (c9-24 / i)))
       :snt4 (c9-10 / contrast-01
                    :ARG2 (c9-42 / and
                                 :op1 (c9-8 / wish-01
                                            :ARG0 c9-31
                                            :ARG1 (c9-25 / thing
                                                         :ARG1-of (c9-4 / like-01
                                                                        :ARG0 c9-31))
                                            :ARG1-of (c9-5 / have-degree-91
                                                           :ARG2 (c9-3 / good-02
                                                                       :ARG1 c9-8)
                                                           :ARG3 (c9-26 / most)))
                                 :op2 (c9-39 / believe-01
                                             :ARG0 c9-31
                                             :ARG1 (c9-21 / whatever
                                                          :ARG1-of c9-4
                                                          :ARG0 c9-31)))
                    :op3 (c9-11 / right-02
                                :ARG1 c9-31)))

# ::snt Hey pal Im cutting this short, cant be arsed with this and to be honest your slow as a weekend in the jail, by the time you get back to my comments iv lost the will to live reading your shite, cut to end and just bloke me, save the insults flying back and forth, catcha
# ::tokens ["Hey", "pal", "I", "m", "cutting", "this", "short", ",", "ca", "nt", "be", "arsed", "with", "this", "and", "to", "be", "honest", "your", "slow", "as", "a", "weekend", "in", "the", "jail", ",", "by", "the", "time", "you", "get", "back", "to", "my", "comments", "iv", "lost", "the", "will", "to", "live", "reading", "your", "shite", ",", "cut", "to", "end", "and", "just", "bloke", "me", ",", "save", "the", "insults", "flying", "back", "and", "forth", ",", "catcha"]
# ::lemmas ["hey", "pal", "i", "m", "cut", "this", "short", ",", "can", "not", "be", "arse", "with", "this", "and", "to", "be", "honest", "your", "slow", "as", "a", "weekend", "in", "the", "jail", ",", "by", "the", "time", "you", "get", "back", "to", "my", "comment", "iv", "lose", "the", "will", "to", "live", "read", "your", "shite", ",", "cut", "to", "end", "and", "just", "bloke", "i", ",", "save", "the", "insult", "fly", "back", "and", "forth", ",", "catcha"]
(c10-11 / multi-sentence
        :snt1 (c10-14 / say-01
                      :ARG0 (c10-3 / i)
                      :ARG1 (c10-21 / and
                                    :op1 (c10-4 / cut-02
                                                :ARG0 c10-3
                                                :ARG1 (c10-8 / this)
                                                :ARG1-of (c10-27 / short-07))
                                    :op2 (c10-28 / possible-01
                                                 :ARG1 (c10-12 / arry-00
                                                               :ARG1 (c10-19 / you)
                                                               :ARG2 (c10-6 / this))
                                                 :ARG1-of (c10-22 / honest-01
                                                                  :ARG0 c10-3)
                                                 :polarity -))
                      :ARG2 (c10-23 / pal))
        :snt2 (c10-25 / lose-02
                      :ARG0 (c10-16 / i)
                      :ARG1 (c10-5 / will-02
                                   :ARG0 (c10-20 / you)
                                   :ARG1 (c10-2 / live-01
                                                :ARG0 c10-20
                                                :ARG1 (c10-9 / read-01
                                                             :ARG0 c10-20
                                                             :ARG1 (c10-17 / shit
                                                                           :poss c10-20))))
                      :time (c10-10 / get-back-10
                                    :ARG1 c10-20
                                    :ARG2 (c10-0 / comment-01
                                                 :ARG0 c10-16))
                      :ARG1-of (c10-7 / cause-01
                                      :ARG0 (c10-1 / and
                                                   :op1 (c10-18 / cut-02
                                                                :time (c10-13 / end-01))
                                                   :op2 (c10-26 / bloke-01
                                                                :ARG0 c10-20
                                                                :ARG1 c10-16
                                                                :mod (c10-24 / just)))))
        :snt3 (c10-15 / catch-03))

# ::snt So I take it you did t really give a shit pre about passing on the flu or cold to a vulnerable person that could lead to pneumonia and possibly death?
# ::tokens ["So", "I", "take", "it", "you", "did", "t", "really", "give", "a", "shit", "pre", "about", "passing", "on", "the", "flu", "or", "cold", "to", "a", "vulnerable", "person", "that", "could", "lead", "to", "pneumonia", "and", "possibly", "death", "?"]
# ::lemmas ["so", "i", "take", "it", "you", "do", "t", "really", "give", "a", "shit", "pre", "about", "pass", "on", "the", "flu", "or", "cold", "to", "a", "vulnerable", "person", "that", "could", "lead", "to", "pneumonia", "and", "possibly", "death", "?"]
(c11-2 / infer-01
       :ARG1 (c11-6 / take-04
                    :ARG0 (c11-14 / i)
                    :ARG1 (c11-8 / give-16
                                 :ARG0 (c11-16 / you)
                                 :ARG1 (c11-11 / shit)
                                 :ARG2 (c11-21 / pass-on-09
                                               :ARG1 (c11-5 / or
                                                            :op1 (c11-0 / disease
                                                                        :name (c11-9 / name
                                                                                     :op1 "influenza"))
                                                            :op2 (c11-3 / cold-01))
                                               :ARG2 (c11-18 / person
                                                             :ARG1-of (c11-4 / vulnerable-01)
                                                             :ARG1-of (c11-19 / lead-03
                                                                              :ARG2 (c11-17 / and
                                                                                            :op1 (c11-13 / pneumonia)
                                                                                            :op2 (c11-15 / die-01
                                                                                                         :ARG1-of (c11-12 / possible-01)))
                                                                              :ARG1-of (c11-1 / possible-01))))
                                 :ARG1-of (c11-7 / real-04)
                                 :time (c11-20 / before)
                                 :polarity (c11-10 / amr-unknown)
                                 :polarity -)))

# ::snt What? Why did who go to Edinburgh normal times for meals?
# ::tokens ["What", "?", "Why", "did", "who", "go", "to", "Edinburgh", "normal", "times", "for", "meals", "?"]
# ::lemmas ["what", "?", "why", "do", "who", "go", "to", "Edinburgh", "normal", "time", "for", "meal", "?"]
(c12-8 / multi-sentence
       :snt1 (c12-2 / amr-unknown)
       :snt2 (c12-3 / cause-01
                    :ARG0 (c12-10 / amr-unknown)
                    :ARG1 (c12-7 / go-02
                                 :ARG0 (c12-1 / amr-unknown)
                                 :ARG4 (c12-0 / city
                                              :name (c12-9 / name
                                                           :op1 "Edinburgh"))
                                 :purpose (c12-4 / meal)
                                 :time (c12-5 / time
                                              :ARG1-of (c12-6 / normal-02)))))

# ::snt So you wore a mask pre did you?
# ::tokens ["So", "you", "wore", "a", "mask", "pre", "did", "you", "?"]
# ::lemmas ["so", "you", "wear", "a", "mask", "pre", "do", "you", "?"]
(c13-3 / infer-01
       :ARG1 (c13-0 / wear-01
                    :ARG0 (c13-5 / you)
                    :ARG1 (c13-4 / mask)
                    :time (c13-2 / before
                                 :op1 (c13-6 / event
                                             :mod c13-5))
                    :ARG1-of (c13-1 / request-confirmation-91)))

# ::snt So why do they go to Edinburgh during normal times for meals?
# ::tokens ["So", "why", "do", "they", "go", "to", "Edinburgh", "during", "normal", "times", "for", "meals", "?"]
# ::lemmas ["so", "why", "do", "they", "go", "to", "Edinburgh", "during", "normal", "time", "for", "meal", "?"]
(c14-6 / go-02
       :ARG0 (c14-4 / they)
       :ARG4 (c14-2 / city
                    :name (c14-8 / name
                                 :op1 "Edinburgh"))
       :purpose (c14-7 / meal)
       :ARG1-of (c14-0 / cause-01
                       :ARG0 (c14-1 / amr-unknown))
       :time (c14-3 / time
                    :ARG1-of (c14-5 / normal-02)))

# ::snt Not fictitious an ex navy oppo and his family that Ive known for years
# ::tokens ["Not", "fictitious", "an", "ex", "navy", "oppo", "and", "his", "family", "that", "I", "ve", "known", "for", "years"]
# ::lemmas ["not", "fictitious", "an", "ex", "navy", "oppo", "and", "his", "family", "that", "i", "ve", "know", "for", "years"]
(c15-2 / fictitious
       :domain (c15-0 / and
                      :op1 (c15-8 / person
                                  :name (c15-10 / name
                                                :op1 "Obama")
                                  :ARG0-of (c15-4 / have-org-role-91
                                                  :ARG1 (c15-7 / navy)
                                                  :time (c15-12 / ex)))
                      :op2 (c15-5 / family
                                  :poss c15-8)
                      :ARG1-of (c15-1 / know-02
                                      :ARG0 (c15-3 / i)
                                      :duration (c15-9 / multiple
                                                       :op1 (c15-6 / temporal-quantity
                                                                   :unit (c15-11 / year)
                                                                   :quant 1))))
       :polarity -)

# ::snt Yes, because I help care for year old mum in law that has care visits a day, if those carers pass it to mum and I get it and pass it on through thoughtlessness Id feel incredibly guilty, which is why I dont see my grandchildren
# ::tokens ["Yes", ",", "because", "I", "help", "care", "for", "year", "old", "mum", "in", "law", "that", "has", "care", "visits", "a", "day", ",", "if", "those", "carers", "pass", "it", "to", "mum", "and", "I", "get", "it", "and", "pass", "it", "on", "through", "thoughtlessness", "I", "d", "feel", "incredibly", "guilty", ",", "which", "is", "why", "I", "do", "nt", "see", "my", "grandchildren"]
# ::lemmas ["yes", ",", "because", "i", "help", "care", "for", "year", "old", "mum", "in", "law", "that", "have", "care", "visit", "a", "day", ",", "if", "those", "carer", "pass", "it", "to", "mum", "and", "i", "get", "it", "and", "pass", "it", "on", "through", "thoughtlessness", "i", "d", "feel", "incredibly", "guilty", ",", "which", "be", "why", "i", "do", "not", "see", "my", "grandchild"]
(c16-18 / feel-01
        :ARG0 (c16-3 / i)
        :ARG1 (c16-10 / guilty-01
                      :degree (c16-13 / incredible))
        :ARG1-of (c16-4 / cause-01
                        :ARG0 (c16-19 / help-01
                                      :ARG0 c16-3
                                      :ARG1 (c16-0 / care-03
                                                   :ARG0 c16-3
                                                   :ARG1 (c16-22 / person
                                                                 :ARG0-of (c16-2 / have-rel-role-91
                                                                                 :ARG1 c16-3
                                                                                 :ARG2 (c16-11 / mum
                                                                                               :mod (c16-14 / in-law))
                                                                                 :age (c16-8 / temporal-quantity
                                                                                             :unit (c16-16 / year)
                                                                                             :quant 1))
                                                                 :ARG0-of (c16-7 / visit-01
                                                                                 :frequency (c16-9 / rate-entity-91
                                                                                                   :ARG3 c16-8
                                                                                                   :unit (c16-1 / day)
                                                                                                   :quant 1)
                                                                                 :ARG1 c16-22))))
                        :condition (c16-17 / and
                                           :op1 (c16-21 / pass-on-09
                                                        :ARG0 c16-22
                                                        :ARG1 (c16-20 / it)
                                                        :ARG2 c16-22)
                                           :op2 (c16-12 / pass-on-09
                                                        :ARG0 c16-3
                                                        :ARG1 c16-20
                                                        :manner (c16-5 / think-01
                                                                       :ARG0 c16-3
                                                                       :polarity -))))
        :ARG1-of (c16-6 / cause-01
                        :ARG0 c16-19
                        :ARG0 c16-3
                        :ARG1 (c16-15 / care-03
                                      :ARG0 c16-3
                                      :ARG1 c16-22)))

# ::snt So can I ask did you wear a mask, social distance, isolate and follow same restrictions pre ?
# ::tokens ["So", "can", "I", "ask", "did", "you", "wear", "a", "mask", ",", "social", "distance", ",", "isolate", "and", "follow", "same", "restrictions", "pre", "?"]
# ::lemmas ["so", "can", "i", "ask", "do", "you", "wear", "a", "mask", ",", "social", "distance", ",", "isolate", "and", "follow", "same", "restriction", "pre", "?"]
(c17-11 / possible-01
        :ARG1 (c17-3 / ask-01
                     :ARG0 (c17-5 / i)
                     :ARG1 (c17-14 / and
                                   :op1 (c17-6 / wear-01
                                               :ARG0 (c17-13 / you)
                                               :ARG1 (c17-12 / mask))
                                   :op2 (c17-0 / distance-01
                                               :ARG1 c17-13
                                               :ARG2 (c17-1 / society))
                                   :op3 (c17-7 / isolate-01
                                               :ARG0 c17-13)
                                   :op4 (c17-4 / follow-02
                                               :ARG0 c17-13
                                               :ARG1 (c17-8 / restrict-01
                                                            :ARG1-of (c17-10 / same-01))
                                               :time (c17-9 / before))
                                   :polarity (c17-2 / amr-unknown
                                                    :polarity-of c17-11))))

# ::snt Fife small part of Scotland, so what you have a fictitious friend in Fife? Or is Fife the only Scottish town you know?
# ::tokens ["Fife", "small", "part", "of", "Scotland", ",", "so", "what", "you", "have", "a", "fictitious", "friend", "in", "Fife", "?", "Or", "is", "Fife", "the", "only", "Scottish", "town", "you", "know", "?"]
# ::lemmas ["fife", "small", "part", "of", "Scotland", ",", "so", "what", "you", "have", "a", "fictitious", "friend", "in", "Fife", "?", "or", "be", "Fife", "the", "only", "Scottish", "town", "you", "know", "?"]
(c18-6 / multi-sentence
       :snt1 (c18-14 / have-03
                     :ARG0 (c18-10 / you)
                     :ARG1 (c18-17 / person
                                   :ARG0-of (c18-2 / have-rel-role-91
                                                   :ARG1 c18-10
                                                   :ARG2 (c18-13 / friend))
                                   :mod (c18-9 / fictitious)
                                   :location (c18-16 / local-region
                                                     :name (c18-7 / name
                                                                  :op1 "Fife")))
                     :ARG1-of (c18-3 / cause-01
                                     :ARG0 (c18-12 / amr-unknown)))
       :snt2 (c18-4 / or
                    :op2 (c18-18 / know-02
                                 :ARG0 (c18-11 / you)
                                 :ARG1 (c18-5 / town
                                              :mod (c18-15 / only)
                                              :mod (c18-0 / country
                                                          :name (c18-1 / name
                                                                       :op1 "Scotland"))
                                              :domain c18-16
                                              :polarity (c18-8 / amr-unknown)))))

# ::snt Fife? You do know all these places a stated aint anywhere near Fife. I can play this game aswell, I have friends down south who would disagree with you, a lot of friends who have visited hospitals and recorded empty hospitals
# ::tokens ["Fife", "?", "You", "do", "know", "all", "these", "places", "a", "stated", "ai", "nt", "anywhere", "near", "Fife", ".", "I", "can", "play", "this", "game", "aswell", ",", "I", "have", "friends", "down", "south", "who", "would", "disagree", "with", "you", ",", "a", "lot", "of", "friends", "who", "have", "visited", "hospitals", "and", "recorded", "empty", "hospitals"]
# ::lemmas ["fife", "?", "you", "do", "know", "all", "these", "place", "a", "state", "be", "nt", "anywhere", "near", "Fife", ".", "i", "can", "play", "this", "game", "aswell", ",", "i", "have", "friend", "down", "south", "who", "would", "disagree", "with", "you", ",", "a", "lot", "of", "friend", "who", "have", "visit", "hospital", "and", "record", "empty", "hospital"]
(c19-14 / multi-sentence
        :snt1 (c19-29 / know-02
                      :polarity (c19-22 / amr-unknown)
                      :ARG0 (c19-28 / person
                                    :name (c19-15 / name
                                                  :op1 "Fife"))
                      :ARG1 (c19-25 / place
                                    :mod (c19-16 / all)
                                    :mod (c19-11 / this)
                                    :ARG1-of (c19-18 / state-01)
                                    :location (c19-3 / near-02
                                                     :ARG1 c19-25
                                                     :ARG2 c19-28
                                                     :polarity -)))
        :snt2 (c19-20 / possible-01
                      :ARG1 (c19-19 / play-01
                                    :ARG0 (c19-5 / i)
                                    :ARG1 (c19-13 / game
                                                  :mod (c19-8 / this))
                                    :mod (c19-1 / as-well))
                      :ARG1-of (c19-7 / cause-01
                                      :ARG0 (c19-30 / and
                                                    :op1 (c19-24 / have-rel-role-91
                                                                 :ARG0 c19-5
                                                                 :ARG1 (c19-2 / person
                                                                              :location (c19-27 / south)
                                                                              :ARG0-of (c19-0 / disagree-01
                                                                                              :ARG1 c19-5))
                                                                 :ARG2 (c19-23 / friend))
                                                    :op2 (c19-4 / have-rel-role-91
                                                                :ARG0 c19-5
                                                                :ARG2 (c19-21 / friend)
                                                                :quant (c19-26 / lot)
                                                                :ARG0-of (c19-9 / visit-01
                                                                                :ARG1 (c19-6 / hospital))
                                                                :ARG0-of (c19-12 / record-01
                                                                                 :ARG1 (c19-10 / hospital
                                                                                               :ARG1-of (c19-17 / empty-02))))))))

# ::snt What about Chris witty stating that % of people who contract it would be fine and wouldnt even know they had it? Or the other nugget stating covid deaths havent been tested for covid? What about covid being downgraded on the th march , no longer highly infectious?
# ::tokens ["What", "about", "Chris", "witty", "stating", "that", "%", "of", "people", "who", "contract", "it", "would", "be", "fine", "and", "would", "nt", "even", "know", "they", "had", "it", "?", "Or", "the", "other", "nugget", "stating", "covid", "deaths", "have", "nt", "been", "tested", "for", "covid", "?", "What", "about", "covid", "being", "downgraded", "on", "the", "th", "march", ",", "no", "longer", "highly", "infectious", "?"]
# ::lemmas ["what", "about", "Chris", "witty", "state", "that", "%", "of", "people", "who", "contract", "it", "would", "be", "fine", "and", "would", "not", "even", "know", "they", "have", "it", "?", "or", "the", "other", "nugget", "state", "covid", "death", "have", "not", "be", "test", "for", "covid", "?", "what", "about", "covid", "be", "downgrade", "on", "the", "th", "march", ",", "no", "long", "highly", "infectious", "?"]
(c20-11 / multi-sentence
        :snt1 (c20-22 / amr-unknown
                      :topic (c20-29 / person
                                     :name (c20-12 / name
                                                   :op1 "Chris"
                                                   :op2 " witty")
                                     :ARG0-of (c20-15 / state-01
                                                      :ARG1 (c20-13 / and
                                                                    :op1 (c20-23 / fine-04
                                                                                 :ARG1 (c20-27 / percentage-entity
                                                                                               :value-of (c20-18 / person
                                                                                                                 :ARG0-of (c20-7 / contract-02
                                                                                                                                 :ARG1 (c20-5 / it)))))
                                                                    :op2 (c20-30 / know-01
                                                                                 :ARG0 c20-18
                                                                                 :ARG1 (c20-25 / have-03
                                                                                               :ARG0 c20-18
                                                                                               :ARG1 c20-5)
                                                                                 :mod (c20-14 / even)
                                                                                 :polarity -)))))
        :snt2 (c20-9 / or
                     :op2 (c20-3 / nugget
                                 :mod (c20-26 / other)
                                 :ARG0-of (c20-28 / state-01
                                                  :ARG1 (c20-10 / test-01
                                                                :ARG1 (c20-16 / person
                                                                              :ARG1-of (c20-0 / die-01)
                                                                              :ARG1-of (c20-1 / cause-01
                                                                                              :ARG0 (c20-21 / disease
                                                                                                            :name (c20-20 / name
                                                                                                                          :op1 " covid"))))
                                                                :polarity -)))
                     :snt3 (c20-2 / amr-unknown
                                  :topic (c20-17 / downgrade-01
                                                 :ARG1 c20-21
                                                 :time (c20-24 / march-01
                                                               :mod (c20-8 / th))
                                                 :ARG0-of c20-1
                                                 :ARG1 (c20-19 / infect-01
                                                               :ARG2 c20-21
                                                               :degree (c20-4 / high-02)
                                                               :time (c20-6 / no-longer))))))

# ::snt No no, this hasnt been spoken you can find this statement on official documents, it has been said you need to check again. Maybe you need to stop watching your tv.
# ::tokens ["No", "no", ",", "this", "has", "nt", "been", "spoken", "you", "can", "find", "this", "statement", "on", "official", "documents", ",", "it", "has", "been", "said", "you", "need", "to", "check", "again", ".", "Maybe", "you", "need", "to", "stop", "watching", "your", "tv", "."]
# ::lemmas ["no", "no", ",", "this", "have", "not", "be", "speak", "you", "can", "find", "this", "statement", "on", "official", "document", ",", "it", "have", "be", "say", "you", "need", "to", "check", "again", ".", "maybe", "you", "need", "to", "stop", "watch", "your", "tv", "."]
(c21-8 / multi-sentence
       :snt1 (c21-17 / and
                     :op1 (c21-12 / speak-01
                                  :ARG1 (c21-7 / this)
                                  :polarity -)
                     :op2 (c21-21 / possible-01
                                  :ARG1 (c21-18 / find-01
                                                :ARG0 (c21-15 / you)
                                                :ARG1 (c21-5 / thing
                                                             :ARG1-of (c21-20 / state-01)
                                                             :mod (c21-10 / this))
                                                :location (c21-0 / document
                                                                 :mod (c21-6 / official))))
                     :op3 (c21-13 / say-01
                                  :ARG1 (c21-9 / need-01
                                               :ARG0 c21-15
                                               :ARG1 (c21-3 / check-01
                                                            :ARG0 c21-15
                                                            :mod (c21-11 / again)))))
       :snt2 (c21-19 / possible-01
                     :ARG1 (c21-1 / need-01
                                  :ARG0 (c21-16 / you)
                                  :ARG1 (c21-2 / stop-01
                                               :ARG0 c21-16
                                               :ARG1 (c21-4 / watch-01
                                                            :ARG0 c21-16
                                                            :ARG1 (c21-14 / television
                                                                          :poss c21-16))))))

# ::snt Strange, my friends in Fife would disagree with you.
# ::tokens ["Strange", ",", "my", "friends", "in", "Fife", "would", "disagree", "with", "you", "."]
# ::lemmas ["strange", ",", "my", "friend", "in", "Fife", "would", "disagree", "with", "you", "."]
(c22-0 / strange
       :domain (c22-1 / disagree-01
                      :ARG0 (c22-6 / person
                                   :ARG0-of (c22-5 / have-rel-role-91
                                                   :ARG1 (c22-3 / i)
                                                   :ARG2 (c22-2 / friend))
                                   :location (c22-4 / city
                                                    :name (c22-7 / name
                                                                 :op1 "Fife")))
                      :ARG1 (c22-8 / you)))

# ::snt Now that is typical bad MSM reporter speak, that's not what has been said, check again!!!
# ::tokens ["Now", "that", "is", "typical", "bad", "MSM", "reporter", "speak", ",", "that", "'s", "not", "what", "has", "been", "said", ",", "check", "again", "!", "!", "!"]
# ::lemmas ["now", "that", "be", "typical", "bad", "MSM", "reporter", "speak", ",", "that", "be", "not", "what", "have", "be", "say", ",", "check", "again", "!", "!", "!"]
(c23-13 / multi-sentence
        :snt1 (c23-0 / speak-01
                     :ARG0 (c23-12 / person
                                   :ARG0-of (c23-7 / report-01)
                                   :ARG1-of (c23-10 / bad-07)
                                   :ARG0-of (c23-4 / have-org-role-91
                                                   :ARG1 (c23-5 / publication
                                                                :name (c23-14 / name
                                                                              :op1 "MSM"))))
                     :ARG1-of (c23-6 / typical-02
                                     :ARG2 c23-0)
                     :time (c23-8 / now))
        :snt2 (c23-11 / say-01
                      :ARG1 (c23-3 / thing
                                   :domain (c23-15 / that))
                      :polarity -)
        :snt3 (c23-2 / check-01
                     :ARG0 (c23-9 / you)
                     :mod (c23-1 / again)
                     :mode imperative))

# ::snt This is Brilliant! Blows it all open! Very good stuff about the Vax!
# ::tokens ["This", "is", "Brilliant", "!", "Blows", "it", "all", "open", "!", "Very", "good", "stuff", "about", "the", "Vax", "!"]
# ::lemmas ["this", "be", "brilliant", "!", "blow", "it", "all", "open", "!", "very", "good", "stuff", "about", "the", "Vax", "!"]
(c24-9 / multi-sentence
       :snt1 (c24-7 / brilliant-01
                    :ARG1 (c24-4 / this)
                    :mode expressive)
       :snt2 (c24-1 / blow-01
                    :ARG1 (c24-8 / it
                                 :mod (c24-2 / all))
                    :mode expressive)
       :snt3 (c24-0 / stuff
                    :ARG1-of (c24-5 / good-02
                                    :degree (c24-3 / very))
                    :topic (c24-6 / product
                                  :name (c24-10 / name
                                                :op1 "Vax"))))

# ::snt PRC rest % false positives kinda says it all.
# ::tokens ["PRC", "rest", "%", "false", "positives", "kinda", "says", "it", "all", "."]
# ::lemmas ["PRC", "rest", "%", "false", "positive", "kinda", "say", "it", "all", "."]
(c26-0 / say-01
       :ARG0 (c26-6 / rest
                    :mod (c26-7 / pressurize-01)
                    :mod (c26-5 / percentage-entity
                                :mod (c26-2 / false)
                                :quant-of (c26-4 / positive)
                                :value 2))
       :ARG1 (c26-3 / it
                    :mod (c26-1 / all))
       :degree (c26-8 / kind-of))

# ::snt Its disgusting! Its there for everyone to see, the death count is a Lie, they also count the flu and pneumonia in the same category as covid! CV19 doesnt exist, the freedom of info request has confirmed it has not been isolated. Pcr tests do not test for it either! Massiv scam
# ::tokens ["Its", "disgusting", "!", "Its", "there", "for", "everyone", "to", "see", ",", "the", "death", "count", "is", "a", "Lie", ",", "they", "also", "count", "the", "flu", "and", "pneumonia", "in", "the", "same", "category", "as", "covid", "!", "CV19", "does", "nt", "exist", ",", "the", "freedom", "of", "info", "request", "has", "confirmed", "it", "has", "not", "been", "isolated", ".", "Pcr", "tests", "do", "not", "test", "for", "it", "either", "!", "Massiv", "scam"]
# ::lemmas ["its", "disgusting", "!", "its", "there", "for", "everyone", "to", "see", ",", "the", "death", "count", "be", "a", "lie", ",", "they", "also", "count", "the", "flu", "and", "pneumonia", "in", "the", "same", "category", "as", "covid", "!", "CV19", "do", "not", "exist", ",", "the", "freedom", "of", "info", "request", "have", "confirm", "it", "have", "not", "be", "isolate", ".", "pcr", "test", "do", "not", "test", "for", "it", "either", "!", "Massiv", "scam"]
(c27-13 / multi-sentence
        :snt1 (c27-0 / disgust-01
                     :ARG0 (c27-5 / it)
                     :ARG1 (c27-17 / everyone))
        :snt2 (c27-27 / and
                      :op1 (c27-33 / lie-08
                                   :ARG1 (c27-7 / count-01
                                                :ARG1 (c27-26 / die-01)))
                      :op2 (c27-1 / count-01
                                  :ARG0 (c27-11 / they)
                                  :ARG1 (c27-16 / and
                                                :op1 (c27-19 / disease
                                                             :name (c27-14 / name
                                                                           :op1 "influenza"))
                                                :op2 (c27-35 / pneumonia))
                                  :mod (c27-2 / also)
                                  :prep-in (c27-9 / category
                                                  :ARG1-of (c27-18 / same-01
                                                                   :ARG2 (c27-25 / count-01
                                                                                 :ARG1 (c27-10 / disease
                                                                                               :name (c27-4 / name
                                                                                                            :op1 " covid"))))))
                      :snt3 (c27-36 / and
                                    :op1 (c27-30 / exist-01
                                                 :ARG1 (c27-8 / thing
                                                              :name (c27-24 / name
                                                                            :op1 "CV19"))
                                                 :polarity -)
                                    :op2 (c27-20 / confirm-01
                                                 :ARG0 (c27-12 / request-01
                                                               :ARG1 (c27-28 / free-04
                                                                             :ARG3 (c27-21 / information)))
                                                 :ARG1 (c27-22 / isolate-01
                                                               :ARG1 (c27-31 / it)
                                                               :polarity -))
                                    :op3 (c27-15 / test-01
                                                 :ARG0 (c27-23 / test-01
                                                               :ARG1 (c27-6 / correct-02
                                                                            :mod (c27-32 / politics)))
                                                 :ARG1 c27-31
                                                 :mod (c27-3 / either)
                                                 :polarity -))
                      :snt4 (c27-34 / scam-01
                                    :mod (c27-29 / massiv))))

# ::snt Heres a bit of MSM information thats their for everyone to see, die of anything within days of a positive test, your marked as a covid death, and now I think that has been increased to days, do you just disregard this information?
# ::tokens ["Heres", "a", "bit", "of", "MSM", "information", "that", "s", "their", "for", "everyone", "to", "see", ",", "die", "of", "anything", "within", "days", "of", "a", "positive", "test", ",", "your", "marked", "as", "a", "covid", "death", ",", "and", "now", "I", "think", "that", "has", "been", "increased", "to", "days", ",", "do", "you", "just", "disregard", "this", "information", "?"]
# ::lemmas ["here", "a", "bit", "of", "MSM", "information", "that", "s", "their", "for", "everyone", "to", "see", ",", "die", "of", "anything", "within", "days", "of", "a", "positive", "test", ",", "your", "mark", "as", "a", "covid", "death", ",", "and", "now", "i", "think", "that", "have", "be", "increase", "to", "day", ",", "do", "you", "just", "disregard", "this", "information", "?"]
(c28-22 / and
        :op1 (c28-4 / information
                    :source (c28-28 / publication
                                    :name (c28-10 / name
                                                  :op1 "MSM"))
                    :quant (c28-26 / bit)
                    :domain (c28-12 / and
                                    :op1 (c28-14 / see-01
                                                 :ARG0 (c28-13 / everyone)
                                                 :ARG1 c28-4)
                                    :op2 (c28-0 / die-01
                                                :ARG1 c28-13
                                                :ARG2 (c28-1 / anything)
                                                :time (c28-29 / after
                                                              :op1 (c28-8 / test-01
                                                                          :mod (c28-25 / positive))
                                                              :quant (c28-24 / up-to
                                                                             :op1 (c28-9 / multiple
                                                                                         :op1 (c28-6 / temporal-quantity
                                                                                                     :unit (c28-20 / day)
                                                                                                     :quant 1)))))
                                    :op3 (c28-23 / mark-01
                                                 :ARG1 (c28-21 / you)
                                                 :ARG2 (c28-16 / die-01
                                                               :mod (c28-5 / covid)))
                                    :op4 (c28-11 / think-01
                                                 :ARG0 (c28-17 / i)
                                                 :ARG1 (c28-18 / increase-01
                                                               :ARG1 c28-4
                                                               :ARG4 c28-9
                                                               :op1 (c28-19 / temporal-quantity
                                                                            :unit (c28-7 / day)
                                                                            :quant 1))
                                                 :time (c28-3 / now))))
        :op2 (c28-15 / disregard-01
                     :ARG0 c28-21
                     :ARG1 c28-4
                     :mod (c28-27 / just)
                     :polarity (c28-2 / amr-unknown)))

# ::snt If you believe any information from the MSM then you yourself are not a reliable source.
# ::tokens ["If", "you", "believe", "any", "information", "from", "the", "MSM", "then", "you", "yourself", "are", "not", "a", "reliable", "source", "."]
# ::lemmas ["if", "you", "believe", "any", "information", "from", "the", "MSM", "then", "you", "yourself", "be", "not", "a", "reliable", "source", "."]
(c29-0 / source
       :ARG1-of (c29-4 / rely-01
                       :ARG1-of (c29-6 / possible-01))
       :domain (c29-8 / you)
       :condition (c29-5 / believe-01
                         :ARG0 c29-8
                         :ARG1 (c29-2 / information
                                      :source (c29-3 / publication
                                                     :name (c29-7 / name
                                                                  :op1 "MSM"))
                                      :mod (c29-1 / any))))

# ::snt St. Johns Livingston, the royal infirmary Edinburgh, sick kids Edinburgh, roodlands haddington East Lothian, would like to know why we where at these hospitals? Now I could quite easy insinuate like you did that your talking shite but whos to know.
# ::tokens ["St.", "Johns", "Livingston", ",", "the", "royal", "infirmary", "Edinburgh", ",", "sick", "kids", "Edinburgh", ",", "roodlands", "haddington", "East", "Lothian", ",", "would", "like", "to", "know", "why", "we", "where", "at", "these", "hospitals", "?", "Now", "I", "could", "quite", "easy", "insinuate", "like", "you", "did", "that", "your", "talking", "shite", "but", "who", "s", "to", "know", "."]
# ::lemmas ["St.", "Johns", "Livingston", ",", "the", "royal", "infirmary", "Edinburgh", ",", "sick", "kid", "Edinburgh", ",", "roodland", "haddington", "East", "Lothian", ",", "would", "like", "to", "know", "why", "we", "where", "at", "these", "hospital", "?", "now", "i", "could", "quite", "easy", "insinuate", "like", "you", "do", "that", "your", "talk", "shite", "but", "who", "s", "to", "know", "."]
(c30-16 / multi-sentence
        :snt1 (c30-32 / like-02
                      :ARG0 (c30-29 / and
                                    :op1 (c30-35 / person
                                                 :name (c30-17 / name
                                                               :op1 "St."
                                                               :op2 "Johns"
                                                               :op3 "Livingston"))
                                    :op2 (c30-31 / person
                                                 :mod (c30-4 / infirmary)
                                                 :mod (c30-13 / royal)
                                                 :location (c30-7 / city
                                                                  :name (c30-3 / name
                                                                               :op1 "Edinburgh")))
                                    :op3 (c30-36 / kid
                                                 :ARG1-of (c30-21 / sick-05)
                                                 :location c30-7)
                                    :op4 (c30-0 / city
                                                :name (c30-26 / name
                                                              :op1 "Edinburgh"))
                                    :op5 (c30-10 / city
                                                 :name (c30-6 / name
                                                              :op1 "Rodlands"
                                                              :op2 "Haddington"
                                                              :op3 "East"
                                                              :op4 "Lothian")))
                      :ARG1 (c30-5 / know-01
                                   :ARG0 c30-29
                                   :ARG1 (c30-12 / thing
                                                 :ARG0-of (c30-27 / cause-01
                                                                  :ARG1 (c30-33 / be-located-at-91
                                                                                :ARG1 (c30-8 / we)
                                                                                :ARG2 (c30-30 / hospital
                                                                                              :mod (c30-9 / this)))))))
        :snt2 (c30-23 / possible-01
                      :ARG1 (c30-24 / insinuate-01
                                    :ARG0 (c30-25 / i)
                                    :ARG1-of (c30-20 / easy-05
                                                     :degree (c30-2 / quite))
                                    :ARG1-of (c30-11 / resemble-01
                                                     :ARG2 (c30-1 / do-02
                                                                  :ARG0 (c30-28 / you)
                                                                  :ARG1 (c30-34 / shit
                                                                                :ARG0-of (c30-18 / talk-01)
                                                                                :poss c30-28
                                                                                :ARG1-of (c30-22 / contrast-01
                                                                                                 :ARG2 (c30-15 / know-01
                                                                                                               :ARG0 (c30-19 / amr-unknown))))))
                                    :time (c30-14 / now))))

# ::snt Not just MSM the hospitals I've visited, East Surrey at Redhill, St. Richards at Chichester, QA at Cosham and more. What hospital are you talking about?
# ::tokens ["Not", "just", "MSM", "the", "hospitals", "I", "'ve", "visited", ",", "East", "Surrey", "at", "Redhill", ",", "St.", "Richards", "at", "Chichester", ",", "QA", "at", "Cosham", "and", "more", ".", "What", "hospital", "are", "you", "talking", "about", "?"]
# ::lemmas ["not", "just", "MSM", "the", "hospital", "i", "'ve", "visit", ",", "East", "Surrey", "at", "Redhill", ",", "St.", "Richards", "at", "Chichester", ",", "QA", "at", "Cosham", "and", "more", ".", "what", "hospital", "be", "you", "talk", "about", "?"]
(c31-11 / multi-sentence
        :snt1 (c31-9 / talk-01
                     :ARG0 (c31-15 / you)
                     :ARG1 (c31-19 / hospital
                                   :mod (c31-17 / amr-unknown)))
        :snt2 (c31-13 / and
                      :op1 (c31-23 / publication
                                   :name (c31-12 / name
                                                 :op1 "MSM")
                                   :mod (c31-22 / just
                                                :polarity -)
                                   :ARG1-of (c31-8 / visit-01
                                                   :ARG0 (c31-5 / i))
                                   :location (c31-21 / local-region
                                                     :name (c31-2 / name
                                                                  :op1 "East"
                                                                  :op2 "Surrey")
                                                     :location (c31-3 / local-region
                                                                      :name (c31-14 / name
                                                                                    :op1 "Redhill"))))
                      :op2 (c31-4 / hospital
                                  :name (c31-7 / name
                                               :op1 "St."
                                               :op2 "Richards")
                                  :location (c31-0 / local-region
                                                   :name (c31-10 / name
                                                                 :op1 "Chichester")))
                      :op3 (c31-6 / hospital
                                  :name (c31-20 / name
                                                :op1 "QA")
                                  :location (c31-1 / local-region
                                                   :name (c31-16 / name
                                                                 :op1 "Cosham")))
                      :op4 (c31-18 / more)))

# ::snt Brilliant Thanks pal! My friend was in hospital last week with pneumonia and she said there was ppl on the covid ward and none of them had covid! They tested her and then said she had covid as her nd test came back Positive, she didnt even have a nd test. All bollocks!
# ::tokens ["Brilliant", "Thanks", "pal", "!", "My", "friend", "was", "in", "hospital", "last", "week", "with", "pneumonia", "and", "she", "said", "there", "was", "ppl", "on", "the", "covid", "ward", "and", "none", "of", "them", "had", "covid", "!", "They", "tested", "her", "and", "then", "said", "she", "had", "covid", "as", "her", "nd", "test", "came", "back", "Positive", ",", "she", "did", "nt", "even", "have", "a", "nd", "test", ".", "All", "bollocks", "!"]
# ::lemmas ["Brilliant", "Thanks", "pal", "!", "my", "friend", "be", "in", "hospital", "last", "week", "with", "pneumonia", "and", "she", "say", "there", "be", "ppl", "on", "the", "covid", "ward", "and", "none", "of", "they", "have", "covid", "!", "they", "test", "she", "and", "then", "say", "she", "have", "covid", "as", "her", "nd", "test", "come", "back", "Positive", ",", "she", "do", "not", "even", "have", "a", "nd", "test", ".", "all", "bollock", "!"]
(c32-14 / multi-sentence
        :snt1 (c32-37 / brilliant-01
                      :ARG1 (c32-13 / thank-01
                                    :ARG0 (c32-4 / i)
                                    :ARG1 (c32-39 / pal)))
        :snt2 (c32-30 / and
                      :op1 (c32-29 / be-located-at-91
                                   :ARG1 (c32-35 / person
                                                 :ARG0-of (c32-33 / have-rel-role-91
                                                                  :ARG1 (c32-24 / i)
                                                                  :ARG2 (c32-32 / friend)))
                                   :ARG2 (c32-3 / hospital)
                                   :time (c32-8 / week
                                                :mod (c32-36 / last))
                                   :ARG1-of (c32-7 / cause-01
                                                   :ARG0 (c32-23 / pneumonia)))
                      :op2 (c32-19 / say-01
                                   :ARG0 c32-35
                                   :ARG1 (c32-17 / and
                                                 :op1 c32-29
                                                 :ARG1 (c32-21 / person
                                                               :ARG1-of (c32-25 / include-91
                                                                                :ARG2 c32-35))
                                                 :ARG2 (c32-18 / ward
                                                               :mod (c32-0 / care-03
                                                                           :ARG1 (c32-6 / health))))
                                   :op2 (c32-12 / have-03
                                                :ARG0 c32-21
                                                :ARG1 (c32-2 / product
                                                             :name (c32-15 / name
                                                                           :op1 " covid"))
                                                :polarity -)))
        :snt3 (c32-1 / and
                     :op1 (c32-9 / test-01
                                 :ARG0 (c32-16 / they)
                                 :ARG1 (c32-38 / she)
                                 :time (c32-26 / then)
                                 :ARG1-of (c32-11 / cause-01
                                                  :ARG0 (c32-28 / come-01
                                                                :ARG1 (c32-31 / test-01
                                                                              :ARG0 c32-38
                                                                              :mod (c32-27 / positive))
                                                                :direction (c32-22 / back)))
                                 :op2 (c32-10 / have-03
                                              :ARG0 c32-38
                                              :ARG1 (c32-34 / test-01
                                                            :mod (c32-20 / even))
                                              :polarity -))
                     :snt4 (c32-5 / bollocks
                                  :mod (c32-40 / all))))

# ::snt Yes I have, took a trip to my local A&amp;E and Seen it empty, like him I also have friends and family who work for the NHS who have stated their hospitals are empty. You say yeah why should we believe him, well you believe the MSM and govs bullshite, so why isnt his word any good?
# ::tokens ["Yes", "I", "have", ",", "took", "a", "trip", "to", "my", "local", "A&amp;E", "and", "Seen", "it", "empty", ",", "like", "him", "I", "also", "have", "friends", "and", "family", "who", "work", "for", "the", "NHS", "who", "have", "stated", "their", "hospitals", "are", "empty", ".", "You", "say", "yeah", "why", "should", "we", "believe", "him", ",", "well", "you", "believe", "the", "MSM", "and", "govs", "bullshite", ",", "so", "why", "is", "nt", "his", "word", "any", "good", "?"]
# ::lemmas ["yes", "i", "have", ",", "take", "a", "trip", "to", "my", "local", "a&amp;e", "and", "see", "it", "empty", ",", "like", "he", "i", "also", "have", "friend", "and", "family", "who", "work", "for", "the", "NHS", "who", "have", "state", "their", "hospital", "be", "empty", ".", "you", "say", "yeah", "why", "should", "we", "believe", "he", ",", "well", "you", "believe", "the", "MSM", "and", "govs", "bullshite", ",", "so", "why", "be", "nt", "his", "word", "any", "good", "?"]
(c33-20 / multi-sentence
        :snt1 (c33-36 / and
                      :op1 (c33-17 / trip-03
                                   :ARG0 (c33-7 / i)
                                   :ARG1 (c33-0 / department
                                                :topic (c33-22 / and
                                                               :op1 (c33-1 / accident)
                                                               :op2 (c33-23 / emergency))
                                                :ARG1-of (c33-41 / local-02)
                                                :poss c33-7))
                      :op2 (c33-24 / see-01
                                   :ARG0 c33-7
                                   :ARG1 (c33-39 / empty-02
                                                 :ARG1 (c33-28 / it)))
                      :op3 (c33-38 / have-03
                                   :ARG0 (c33-29 / i)
                                   :ARG1 (c33-46 / and
                                                 :op1 (c33-44 / person
                                                              :ARG0-of (c33-6 / have-rel-role-91
                                                                              :ARG1 c33-29
                                                                              :ARG2 (c33-37 / friend)))
                                                 :op2 (c33-40 / person
                                                              :ARG0-of (c33-9 / have-rel-role-91
                                                                              :ARG1 c33-29
                                                                              :ARG2 (c33-31 / family)))
                                                 :ARG0-of (c33-11 / work-01
                                                                  :ARG2 (c33-19 / government-organization
                                                                                :name (c33-21 / name
                                                                                              :op1 "NHS")))
                                                 :ARG0-of (c33-43 / state-01
                                                                  :ARG1 (c33-5 / empty-02
                                                                               :ARG1 (c33-16 / hospital
                                                                                             :poss c33-46))))
                                   :mod (c33-4 / also))
                      :ARG1-of (c33-18 / resemble-01
                                       :ARG2 (c33-13 / he)))
        :snt2 (c33-30 / say-01
                      :ARG0 (c33-33 / you)
                      :ARG1 (c33-10 / cause-01
                                    :ARG0 (c33-32 / amr-unknown)
                                    :ARG1 (c33-14 / recommend-01
                                                  :ARG1 (c33-42 / believe-01
                                                                :ARG0 (c33-25 / we)
                                                                :ARG1 (c33-45 / he)))))
        :snt3 (c33-2 / cause-01
                     :ARG0 (c33-35 / believe-01
                                   :ARG0 c33-33
                                   :ARG1 (c33-15 / and
                                                 :op1 (c33-27 / publication
                                                              :name c33-21
                                                              :op1 "MSM"))
                                   :op2 (c33-26 / bullshit
                                                :mod (c33-34 / gov))))
        :ARG1 (c33-3 / good-02
                     :ARG1 (c33-8 / word
                                  :poss c33-45)
                     :mod (c33-12 / any)
                     :polarity -))

# ::snt Why should we believe him?? The hospitals Ive been in during my lifetime have never ever looked like the videos he refers to and Ive never seen an empty A&amp;E. have you?
# ::tokens ["Why", "should", "we", "believe", "him", "?", "?", "The", "hospitals", "I", "ve", "been", "in", "during", "my", "lifetime", "have", "never", "ever", "looked", "like", "the", "videos", "he", "refers", "to", "and", "I", "ve", "never", "seen", "an", "empty", "A&amp;E.", "have", "you", "?"]
# ::lemmas ["why", "should", "we", "believe", "he", "?", "?", "the", "hospital", "i", "ve", "be", "in", "during", "my", "lifetime", "have", "never", "ever", "look", "like", "the", "video", "he", "refer", "to", "and", "i", "ve", "never", "see", "an", "empty", "a&amp;e.", "have", "you", "?"]
(c34-12 / multi-sentence
        :snt1 (c34-5 / cause-01
                     :ARG0 (c34-16 / amr-unknown)
                     :ARG1 (c34-10 / recommend-01
                                   :ARG1 (c34-20 / believe-01
                                                 :ARG0 (c34-6 / we)
                                                 :ARG1 (c34-17 / he))))
        :snt2 (c34-13 / and
                      :op1 (c34-7 / resemble-01
                                  :ARG1 (c34-2 / hospital
                                               :location-of (c34-19 / live-01
                                                                    :ARG0 (c34-3 / i)))
                                  :ARG2 (c34-8 / video
                                               :ARG1-of (c34-11 / refer-01
                                                                :ARG0 (c34-4 / he)))
                                  :time (c34-14 / ever)
                                  :polarity -)
                      :op2 (c34-15 / see-01
                                   :ARG0 c34-3
                                   :ARG1 (c34-21 / person
                                                 :ARG0-of (c34-0 / assist-01)
                                                 :ARG1-of (c34-18 / empty-02))
                                   :time (c34-1 / ever)
                                   :ARG1-of (c34-9 / request-confirmation-91)
                                   :polarity -)))

# ::snt Don't ask me I have, thankfully, been blocked
# ::tokens ["Do", "n't", "ask", "me", "I", "have", ",", "thankfully", ",", "been", "blocked"]
# ::lemmas ["do", "not", "ask", "i", "i", "have", ",", "thankfully", ",", "be", "block"]
(c35-0 / ask-01
       :ARG0 (c35-4 / you)
       :ARG1 (c35-2 / block-01
                    :ARG1 (c35-3 / i)
                    :ARG2-of (c35-1 / thankful-02
                                    :ARG0 c35-3))
       :ARG2 c35-3
       :polarity -
       :mode imperative)

# ::snt Why shouldnt we believe him?
# ::tokens ["Why", "should", "nt", "we", "believe", "him", "?"]
# ::lemmas ["why", "should", "not", "we", "believe", "he", "?"]
(c36-1 / cause-01
       :ARG0 (c36-0 / amr-unknown)
       :ARG1 (c36-4 / recommend-01
                    :ARG1 (c36-5 / believe-01
                                 :ARG0 (c36-2 / we)
                                 :ARG1 (c36-3 / he)
                                 :polarity -)))

# ::snt Must be referring to the Nightingale, then again probably won't know anything about it.
# ::tokens ["Must", "be", "referring", "to", "the", "Nightingale", ",", "then", "again", "probably", "wo", "n't", "know", "anything", "about", "it", "."]
# ::lemmas ["must", "be", "refer", "to", "the", "Nightingale", ",", "then", "again", "probably", "will", "not", "know", "anything", "about", "it", "."]
(c37-5 / infer-01
       :ARG1 (c37-3 / refer-01
                    :ARG1 (c37-1 / aircraft-type
                                 :name (c37-6 / name
                                              :op1 "Nightingale")))
       :ARG2 (c37-4 / probable
                    :domain (c37-2 / know-01
                                   :ARG1 (c37-7 / anything
                                                :topic c37-1)
                                   :mod (c37-0 / again)
                                   :polarity -)))

# ::snt Yeah, and of course we all believe you
# ::tokens ["Yeah", ",", "and", "of", "course", "we", "all", "believe", "you"]
# ::lemmas ["yeah", ",", "and", "of", "course", "we", "all", "believe", "you"]
(c38-0 / and
       :op2 (c38-3 / believe-01
                   :ARG0 (c38-1 / we
                                :mod (c38-5 / all))
                   :ARG1 (c38-4 / you)
                   :mod (c38-2 / of-course)))

# ::snt I know people who work in the London Hospitals. They are empty!
# ::tokens ["I", "know", "people", "who", "work", "in", "the", "London", "Hospitals", ".", "They", "are", "empty", "!"]
# ::lemmas ["i", "know", "people", "who", "work", "in", "the", "London", "Hospitals", ".", "they", "be", "empty", "!"]
(c39-7 / multi-sentence
       :snt1 (c39-8 / know-02
                    :ARG0 (c39-6 / i)
                    :ARG1 (c39-4 / person
                                 :ARG0-of (c39-1 / work-01
                                                 :ARG2 (c39-2 / hospital
                                                              :location (c39-0 / city
                                                                               :name (c39-5 / name
                                                                                            :op1 "London"))))))
       :snt2 (c39-9 / empty-02
                    :ARG1 (c39-3 / they)))

# ::snt It seems that he's a "Free your Minds" advocates. It would appear his has gone walkabout.
# ::tokens ["It", "seems", "that", "he", "'s", "a", "\"", "Free", "your", "Minds", "\"", "advocates", ".", "It", "would", "appear", "his", "has", "gone", "walkabout", "."]
# ::lemmas ["it", "seem", "that", "he", "be", "a", "\"", "free", "your", "mind", "\"", "advocate", ".", "it", "would", "appear", "his", "have", "go", "walkabout", "."]
(c41-8 / multi-sentence
       :snt1 (c41-0 / seem-01
                    :ARG1 (c41-1 / advocate-01
                                 :ARG0 (c41-5 / he)
                                 :ARG1 (c41-2 / free-04
                                              :ARG1 (c41-3 / mind
                                                           :part-of (c41-9 / you)))))
       :snt2 (c41-10 / appear-02
                     :ARG1 (c41-6 / go-02
                                  :ARG0 (c41-7 / he)
                                  :ARG1 (c41-4 / walkabout))))

# ::snt You really have no idea how stupid you are being!!
# ::tokens ["You", "really", "have", "no", "idea", "how", "stupid", "you", "are", "being", "!", "!"]
# ::lemmas ["you", "really", "have", "no", "idea", "how", "stupid", "you", "be", "be", "!", "!"]
(c42-1 / have-03
       :ARG0 (c42-5 / you)
       :ARG1 (c42-4 / idea
                    :topic (c42-0 / stupid
                                  :domain c42-5
                                  :degree (c42-3 / so)))
       :degree (c42-2 / really)
       :polarity -)

# ::snt Fool!!!
# ::tokens ["Fool", "!", "!", "!"]
# ::lemmas ["fool", "!", "!", "!"]
(c43-0 / ool-00
       :mode expressive)

# ::snt Volunteer your time to any one of the London Hospitals see for yourself otherwise get in boat, set sail for the edge of the World and go directly to be the st man to set foot on the Moon.
# ::tokens ["Volunteer", "your", "time", "to", "any", "one", "of", "the", "London", "Hospitals", "see", "for", "yourself", "otherwise", "get", "in", "boat", ",", "set", "sail", "for", "the", "edge", "of", "the", "World", "and", "go", "directly", "to", "be", "the", "st", "man", "to", "set", "foot", "on", "the", "Moon", "."]
# ::lemmas ["volunteer", "your", "time", "to", "any", "one", "of", "the", "London", "Hospitals", "see", "for", "yourself", "otherwise", "get", "in", "boat", ",", "set", "sail", "for", "the", "edge", "of", "the", "World", "and", "go", "directly", "to", "be", "the", "st", "man", "to", "set", "foot", "on", "the", "Moon", "."]
(c44-16 / and
        :op1 (c44-5 / volunteer-01
                    :ARG0 (c44-14 / you)
                    :ARG1 (c44-11 / see-01
                                  :ARG0 (c44-9 / any
                                               :ARG1-of (c44-1 / include-91
                                                               :ARG2 (c44-19 / hospital
                                                                             :location (c44-3 / city
                                                                                              :name (c44-8 / name
                                                                                                           :op1 "London")))))
                                  :mod (c44-20 / by-oneself))
                    :mode imperative)
        :op2 (c44-6 / get-05
                    :ARG0 c44-14
                    :ARG1 c44-14
                    :ARG2 (c44-15 / boat)
                    :mode imperative)
        :op3 (c44-21 / set-
                     :ARG0 c44-14
                     :direction (c44-10 / edge
                                        :mod (c44-4 / world))
                     :mode imperative)
        :op4 (c44-13 / go-02
                     :ARG0 c44-14
                     :ARG4 (c44-7 / man
                                  :mod (c44-12 / st)
                                  :ARG0-of (c44-2 / set-01
                                                  :ARG1 c44-14
                                                  :ARG2 (c44-17 / foot
                                                                :location (c44-18 / moon))))
                     :ARG1-of (c44-0 / direct-02)
                     :mode imperative))

# ::snt They are not overflowing they are empty. Open your eyes. It the Tv that tells you that they are overflowing!
# ::tokens ["They", "are", "not", "overflowing", "they", "are", "empty", ".", "Open", "your", "eyes", ".", "It", "the", "Tv", "that", "tells", "you", "that", "they", "are", "overflowing", "!"]
# ::lemmas ["they", "be", "not", "overflow", "they", "be", "empty", ".", "open", "your", "eye", ".", "it", "the", "Tv", "that", "tell", "you", "that", "they", "be", "overflow", "!"]
(c45-9 / multi-sentence
       :snt1 (c45-6 / overflow-01
                    :ARG1 (c45-7 / they)
                    :polarity -)
       :snt2 (c45-12 / empty-02
                     :ARG1 (c45-2 / they))
       :snt3 (c45-3 / open-01
                    :ARG0 (c45-11 / you)
                    :ARG1 (c45-4 / eye
                                 :part-of c45-11)
                    :mode imperative)
       :snt4 (c45-1 / tell-01
                    :ARG0 (c45-8 / publication
                                 :name (c45-10 / name
                                               :op1 "TSV"))
                    :ARG1 (c45-0 / overflow-01
                                 :ARG1 (c45-5 / they))
                    :ARG2 c45-11))

# ::snt Sorry, youre right, put it down to my old fingers
# ::tokens ["Sorry", ",", "you", "re", "right", ",", "put", "it", "down", "to", "my", "old", "fingers"]
# ::lemmas ["sorry", ",", "you", "re", "right", ",", "put", "it", "down", "to", "my", "old", "finger"]
(c46-2 / and
       :op1 (c46-0 / sorry-01
                   :ARG1 (c46-8 / i
                                :part (c46-3 / finger
                                             :mod (c46-5 / old))))
       :op2 (c46-6 / right-06
                   :ARG1 (c46-9 / you))
       :op3 (c46-7 / put-01
                   :ARG0 c46-9
                   :ARG1 (c46-4 / it)
                   :ARG2 (c46-1 / down-03
                                :ARG2 c46-3)))

# ::snt Presuming reply is not to me?
# ::tokens ["Presuming", "reply", "is", "not", "to", "me", "?"]
# ::lemmas ["presuming", "reply", "be", "not", "to", "i", "?"]
(c47-2 / reply-01
       :ARG2 (c47-0 / i)
       :ARG1-of (c47-3 / presume-01)
       :polarity (c47-1 / amr-unknown)
       :polarity -)

# ::snt Oh!! So overflowing hospitals won't cause any problems then, that's good to know.
# ::tokens ["Oh", "!", "!", "So", "overflowing", "hospitals", "wo", "n't", "cause", "any", "problems", "then", ",", "that", "'s", "good", "to", "know", "."]
# ::lemmas ["oh", "!", "!", "so", "overflow", "hospital", "will", "not", "cause", "any", "problem", "then", ",", "that", "be", "good", "to", "know", "."]
(c48-8 / multi-sentence
       :snt1 (c48-4 / oh
                    :mode expressive)
       :snt2 (c48-1 / cause-01
                    :ARG0 (c48-2 / hospital
                                 :ARG1-of (c48-3 / overflow-01))
                    :ARG1 (c48-7 / problem
                                 :mod (c48-0 / any))
                    :mod (c48-5 / then)
                    :ARG1-of (c48-6 / good-02)
                    :polarity -))

# ::snt Plus this
# ::tokens ["Plus", "this"]
# ::lemmas ["plus", "this"]
(c49-0 / and
       :op2 (c49-1 / this))

# ::snt Wonderful thing percentages during a pandemic, add the long term damage , the distressing anxiety for friends, family and carers.It's not all about deaths and the vaccine only ever promised to slow the spread and diminish symptoms.The facts that dissers choose to avoid
# ::tokens ["Wonderful", "thing", "percentages", "during", "a", "pandemic", ",", "add", "the", "long", "term", "damage", ",", "the", "distressing", "anxiety", "for", "friends", ",", "family", "and", "carers", ".", "It", "'s", "not", "all", "about", "deaths", "and", "the", "vaccine", "only", "ever", "promised", "to", "slow", "the", "spread", "and", "diminish", "symptoms", ".", "The", "facts", "that", "dissers", "choose", "to", "avoid"]
# ::lemmas ["wonderful", "thing", "percentage", "during", "a", "pandemic", ",", "add", "the", "long", "term", "damage", ",", "the", "distressing", "anxiety", "for", "friend", ",", "family", "and", "carer", ".", "it", "be", "not", "all", "about", "death", "and", "the", "vaccine", "only", "ever", "promise", "to", "slow", "the", "spread", "and", "diminish", "symptom", ".", "the", "fact", "that", "disser", "choose", "to", "avoid"]
(c50-14 / multi-sentence
        :snt1 (c50-17 / say-01
                      :ARG1 (c50-13 / thing
                                    :ARG1-of (c50-8 / wonderful-03)
                                    :time (c50-31 / pandemic))
                      :ARG2 (c50-25 / add-02
                                    :ARG1 (c50-15 / and
                                                  :op1 (c50-0 / damage-01
                                                              :ARG1-of (c50-29 / long-03))
                                                  :op2 (c50-1 / anxiety
                                                              :ARG0-of (c50-24 / distress-01
                                                                               :ARG1 (c50-32 / and
                                                                                             :op1 (c50-28 / person
                                                                                                          :ARG0-of (c50-27 / have-rel-role-91
                                                                                                                           :ARG2 (c50-26 / friend)))
                                                                                             :op2 (c50-20 / person
                                                                                                          :ARG0-of (c50-5 / have-rel-role-91
                                                                                                                          :ARG2 (c50-22 / family)))
                                                                                             :op3 (c50-18 / person
                                                                                                          :ARG0-of (c50-7 / care-03)))))))
                      :snt2 (c50-4 / and
                                   :op1 (c50-2 / concern-02
                                               :ARG0 (c50-19 / die-01)
                                               :degree (c50-23 / all)
                                               :polarity -)
                                   :op2 (c50-3 / promise-01
                                               :ARG0 (c50-10 / vaccine)
                                               :ARG1 (c50-9 / and
                                                            :op1 (c50-30 / slow-01
                                                                         :ARG0 c50-10
                                                                         :ARG1 (c50-21 / spread-02))
                                                            :op2 (c50-11 / diminish-01
                                                                         :ARG0 c50-10
                                                                         :ARG1 (c50-6 / symptom)))
                                               :time (c50-16 / ever)
                                               :mod (c50-12 / only)))))
