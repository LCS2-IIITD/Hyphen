# ::snt He throws his back out more times than he should for someones whos only . He was getting Baylee out of the van &amp; he had to crawl into the back to do so.
# ::tokens ["He", "throws", "his", "back", "out", "more", "times", "than", "he", "should", "for", "someones", "who", "s", "only", ".", "He", "was", "getting", "Baylee", "out", "of", "the", "van", "&", "amp", ";", "he", "had", "to", "crawl", "into", "the", "back", "to", "do", "so", "."]
# ::lemmas ["he", "throw", "his", "back", "out", "more", "time", "than", "he", "should", "for", "someone", "who", "s", "only", ".", "he", "be", "get", "Baylee", "out", "of", "the", "van", "&", "amp", ";", "he", "have", "to", "crawl", "into", "the", "back", "to", "do", "so", "."]
(c1-12 / multi-sentence
       :snt1 (c1-9 / throw-out-06
                   :ARG0 (c1-20 / he)
                   :ARG1 (c1-22 / back
                                :part-of (c1-0 / he))
                   :ARG1-of (c1-1 / have-quant-91
                                  :ARG3 (c1-19 / more)
                                  :ARG4 (c1-4 / throw-out-06
                                              :ARG0 c1-0
                                              :ARG1-of (c1-10 / recommend-01)
                                              :beneficiary (c1-16 / someone
                                                                  :ARG0-of (c1-14 / throw-out-06
                                                                                  :ARG1 c1-22
                                                                                  :mod (c1-7 / only))))))
       :snt2 (c1-11 / get-05
                    :ARG0 (c1-8 / he)
                    :ARG1 (c1-23 / person
                                 :name (c1-13 / name
                                              :op1 "Baylee"))
                    :ARG2 (c1-21 / out-06
                                 :ARG1 c1-23
                                 :ARG2 (c1-18 / and
                                              :op1 (c1-6 / van)
                                              :op2 (c1-15 / amp))))
       :snt3 (c1-2 / obligate-01
                   :ARG1 (c1-5 / he)
                   :ARG2 (c1-3 / crawl-01
                               :ARG0 c1-5
                               :destination (c1-17 / back)
                               :purpose c1-11)))

# ::snt Lol could be true Ive had people tell me they had muscle aches and pains after the first shot
# ::tokens ["Lol", "could", "be", "true", "I", "ve", "had", "people", "tell", "me", "they", "had", "muscle", "aches", "and", "pains", "after", "the", "first", "shot"]
# ::lemmas ["Lol", "could", "be", "true", "i", "ve", "have", "people", "tell", "i", "they", "have", "muscle", "ache", "and", "pain", "after", "the", "first", "shot"]
(c2-13 / possible-01
       :ARG1 (c2-10 / true-01)
       :ARG2-of (c2-11 / laugh-01
                       :ARG0 (c2-3 / i)
                       :manner (c2-12 / loud)
                       :mode expressive)
       :ARG1-of (c2-4 / cause-01
                      :ARG0 (c2-5 / tell-01
                                  :ARG0 (c2-9 / person)
                                  :ARG1 (c2-7 / have-03
                                              :ARG0 c2-9
                                              :ARG1 (c2-2 / and
                                                          :op1 (c2-15 / ache-01
                                                                      :ARG0 c2-9
                                                                      :ARG1 (c2-14 / muscle))
                                                          :op2 (c2-6 / pain-01
                                                                     :ARG1 c2-9))
                                              :time (c2-1 / after
                                                          :op1 (c2-0 / shoot-02
                                                                     :ord (c2-8 / ordinal-entity
                                                                                :value 1))))
                                  :ARG2 c2-3)))

# ::snt Jons immune system is garbage. He gets pneumonia &amp; bronchitis every single year. He was lucky enough to get an extra vaccine before it had to go in the trash.
# ::tokens ["Jons", "immune", "system", "is", "garbage", ".", "He", "gets", "pneumonia", "&", "amp", ";", "bronchitis", "every", "single", "year", ".", "He", "was", "lucky", "enough", "to", "get", "an", "extra", "vaccine", "before", "it", "had", "to", "go", "in", "the", "trash", "."]
# ::lemmas ["jon", "immune", "system", "be", "garbage", ".", "he", "get", "pneumonia", "&", "amp", ";", "bronchitis", "every", "single", "year", ".", "he", "be", "lucky", "enough", "to", "get", "an", "extra", "vaccine", "before", "it", "have", "to", "go", "in", "the", "trash", "."]
(c3-9 / multi-sentence
      :snt1 (c3-8 / garbage
                  :domain (c3-13 / system
                                 :ARG1-of (c3-2 / immune-02
                                                :ARG2 (c3-24 / person
                                                             :name (c3-10 / name
                                                                          :op1 "Jons")))))
      :snt2 (c3-15 / get-01
                   :ARG0 c3-24
                   :ARG1 (c3-17 / and
                                :op1 (c3-20 / pneumonia)
                                :op2 (c3-11 / amp)
                                :op3 (c3-22 / bronchitis))
                   :frequency (c3-7 / rate-entity-91
                                    :ARG3 (c3-6 / temporal-quantity
                                                :unit (c3-14 / year)
                                                :ARG1-of (c3-23 / single-02)
                                                :quant 1)))
      :snt3 (c3-18 / have-degree-91
                   :ARG1 (c3-1 / he)
                   :ARG2 (c3-21 / lucky)
                   :ARG3 (c3-12 / enough)
                   :ARG6 c3-15
                   :ARG0 c3-1
                   :ARG1 (c3-4 / vaccine
                               :mod (c3-19 / extra))
                   :time (c3-16 / before
                                :op1 (c3-5 / obligate-01
                                           :ARG2 (c3-0 / go-01
                                                       :ARG1 c3-4
                                                       :ARG4 (c3-3 / trash))))))

# ::snt They told me that the younger people have been having reactions and they think its just because their immune systems are stronger and responding how it should
# ::tokens ["They", "told", "me", "that", "the", "younger", "people", "have", "been", "having", "reactions", "and", "they", "think", "its", "just", "because", "their", "immune", "systems", "are", "stronger", "and", "responding", "how", "it", "should"]
# ::lemmas ["they", "tell", "i", "that", "the", "young", "people", "have", "be", "have", "reaction", "and", "they", "think", "its", "just", "because", "their", "immune", "system", "be", "strong", "and", "respond", "how", "it", "should"]
(c4-5 / tell-01
      :ARG0 (c4-3 / they)
      :ARG1 (c4-15 / and
                   :op1 (c4-6 / react-01
                              :ARG0 (c4-19 / person
                                           :ARG1-of (c4-17 / have-degree-91
                                                           :ARG2 (c4-13 / young)
                                                           :ARG3 (c4-8 / more))))
                   :op2 (c4-9 / think-01
                              :ARG0 c4-19
                              :ARG1 (c4-2 / cause-01
                                          :ARG0 (c4-10 / and
                                                       :op1 (c4-11 / strong-02
                                                                   :ARG1 (c4-14 / system
                                                                                :ARG1-of (c4-1 / immune-02)
                                                                                :poss c4-19)
                                                                   :ARG2-of (c4-0 / have-degree-91
                                                                                  :ARG1 c4-14
                                                                                  :ARG3 (c4-16 / more)))
                                                       :op2 (c4-4 / respond-01
                                                                  :ARG0 c4-19
                                                                  :ARG1-of (c4-7 / recommend-01)))
                                          :ARG1 c4-6
                                          :mod (c4-18 / just))))
      :ARG2 (c4-12 / i))

# ::snt Jon gets his second does in weeks so well see how he reacts to it. Cindy &amp; Donnies shots were awful for them. Theres no way Id sign up for that.
# ::tokens ["Jon", "gets", "his", "second", "does", "in", "weeks", "so", "well", "see", "how", "he", "reacts", "to", "it", ".", "Cindy", "&", "amp", ";", "Donnies", "shots", "were", "awful", "for", "them", ".", "There", "s", "no", "way", "I", "d", "sign", "up", "for", "that", "."]
# ::lemmas ["Jon", "get", "his", "second", "do", "in", "weeks", "so", "well", "see", "how", "he", "react", "to", "it", ".", "Cindy", "&", "amp", ";", "donnie", "shot", "be", "awful", "for", "they", ".", "there", "s", "no", "way", "i", "d", "sign", "up", "for", "that", "."]
(c5-11 / multi-sentence
       :snt1 (c5-10 / get-01
                    :ARG0 (c5-25 / person
                                 :name (c5-12 / name
                                              :op1 "Jon"))
                    :ARG1 (c5-0 / do-02
                                :ord (c5-7 / ordinal-entity
                                           :value 2))
                    :time (c5-21 / after
                                 :op1 (c5-1 / now)
                                 :quant (c5-22 / multiple
                                               :op1 (c5-8 / temporal-quantity
                                                          :unit (c5-5 / week)
                                                          :quant 1)))
                    :ARG0-of (c5-4 / cause-01
                                   :ARG1 (c5-16 / see-01
                                                :ARG1 (c5-6 / thing
                                                            :manner-of (c5-9 / react-01
                                                                             :ARG0 c5-25
                                                                             :ARG1 (c5-2 / it)))
                                                :ARG1-of (c5-15 / well-09))))
       :snt2 (c5-14 / awful
                    :domain (c5-24 / shoot-02
                                   :ARG1 (c5-23 / person
                                                :name (c5-20 / name
                                                             :op1 "Donnies")))
                    :beneficiary (c5-13 / they))
       :snt3 (c5-3 / way
                   :manner-of (c5-18 / sign-up-03
                                     :ARG1 (c5-17 / i)
                                     :ARG3 (c5-19 / that))
                   :polarity -))

# ::snt I got Pfizer too. Ive heard a lot of people didnt feel good with both moderna.
# ::tokens ["I", "got", "Pfizer", "too", ".", "I", "ve", "heard", "a", "lot", "of", "people", "did", "nt", "feel", "good", "with", "both", "moderna", "."]
# ::lemmas ["i", "get", "Pfizer", "too", ".", "i", "ve", "hear", "a", "lot", "of", "people", "do", "not", "feel", "good", "with", "both", "moderna", "."]
(c6-12 / multi-sentence
       :snt1 (c6-10 / get-01
                    :ARG0 (c6-11 / i)
                    :ARG1 (c6-1 / company
                                :name (c6-13 / name
                                             :op1 "Pfizer"))
                    :mod (c6-6 / too))
       :snt2 (c6-2 / hear-01
                   :ARG0 (c6-3 / i)
                   :ARG1 (c6-0 / feel-01
                               :ARG0 (c6-8 / person
                                           :quant (c6-9 / lot))
                               :ARG1 (c6-14 / good-02)
                               :ARG2 (c6-5 / product
                                           :name (c6-7 / name
                                                       :op1 "Moderna")
                                           :mod (c6-4 / both))
                               :polarity -)))

# ::snt Thats how Jons mom reacted to both doses. His dad got his first shot Saturday &amp; still feels like crap from it. Jon got his first shot yesterday &amp; feels fine but he got the Pfizer one. His parents got the Moderna.
# ::tokens ["That", "s", "how", "Jons", "mom", "reacted", "to", "both", "doses", ".", "His", "dad", "got", "his", "first", "shot", "Saturday", "&", "amp", ";", "still", "feels", "like", "crap", "from", "it", ".", "Jon", "got", "his", "first", "shot", "yesterday", "&", "amp", ";", "feels", "fine", "but", "he", "got", "the", "Pfizer", "one", ".", "His", "parents", "got", "the", "Moderna", "."]
# ::lemmas ["that", "s", "how", "Jons", "mom", "react", "to", "both", "dose", ".", "his", "dad", "get", "his", "first", "shoot", "Saturday", "&", "amp", ";", "still", "feel", "like", "crap", "from", "it", ".", "Jon", "get", "his", "first", "shot", "yesterday", "&", "amp", ";", "feel", "fine", "but", "he", "get", "the", "Pfizer", "one", ".", "his", "parent", "get", "the", "Moderna", "."]
(c7-15 / multi-sentence
       :snt1 (c7-12 / thing
                    :ARG2-of (c7-13 / react-01
                                    :ARG0 (c7-34 / person
                                                 :ARG0-of (c7-29 / have-rel-role-91
                                                                 :ARG1 (c7-31 / person
                                                                              :name (c7-16 / name
                                                                                           :op1 "Jons"))
                                                                 :ARG2 (c7-28 / mom)))
                                    :ARG1 (c7-0 / dose
                                                :mod (c7-32 / both)))
                    :domain (c7-9 / that))
       :snt2 (c7-26 / and
                    :op1 (c7-14 / get-01
                                :ARG0 (c7-20 / person
                                             :ARG0-of (c7-5 / have-rel-role-91
                                                            :ARG1 c7-31
                                                            :ARG2 (c7-24 / dad)))
                                :ARG1 (c7-17 / shoot-02
                                             :ARG0 c7-20
                                             :ord (c7-11 / ordinal-entity
                                                         :value 1))
                                :time (c7-18 / date-entity
                                             :weekday (c7-33 / saturday)))
                    :op2 (c7-27 / feel-01
                                :ARG0 c7-20
                                :ARG1 (c7-8 / crap-01)
                                :ARG2 c7-17
                                :mod (c7-21 / still))
                    :ARG1-of (c7-1 / cause-01
                                   :ARG0 (c7-25 / get-01
                                                :ARG0 c7-20
                                                :ARG1 (c7-6 / shot-02
                                                            :ARG0 (c7-10 / company
                                                                         :name (c7-4 / name
                                                                                     :op1 "Pfizer"))
                                                            :ord (c7-30 / ordinal-entity
                                                                        :value 1)))))
       :snt3 (c7-2 / get-01
                   :ARG0 (c7-19 / person
                                :ARG0-of (c7-7 / have-rel-role-91
                                               :ARG1 c7-31
                                               :ARG2 (c7-3 / parent)))
                   :ARG1 (c7-22 / product
                                :name (c7-23 / name
                                             :op1 "Moderna"))))

# ::snt The second one killed me. I felt like death for a sold hours.
# ::tokens ["The", "second", "one", "killed", "me", ".", "I", "felt", "like", "death", "for", "a", "sold", "hours", "."]
# ::lemmas ["the", "second", "one", "kill", "i", ".", "i", "feel", "like", "death", "for", "a", "sell", "hours", "."]
(c8-10 / multi-sentence
       :snt1 (c8-11 / kill-01
                    :ARG0 (c8-7 / one
                                :ord (c8-5 / ordinal-entity
                                           :value 2))
                    :ARG1 (c8-9 / i))
       :snt2 (c8-2 / feel-01
                   :ARG0 (c8-4 / i)
                   :ARG1 (c8-0 / die-01
                               :ARG1 c8-4)
                   :duration (c8-3 / multiple
                                   :op1 (c8-8 / temporal-quantity
                                              :unit (c8-6 / hour)
                                              :quant 1)
                                   :ARG1-of (c8-1 / sell-01))))
