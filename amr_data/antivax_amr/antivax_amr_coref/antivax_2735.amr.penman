# ::snt McVaccine
# ::tokens ["McVaccine"]
# ::lemmas ["McVaccine"]
(c1-0 / person
      :name (c1-1 / name
                  :op1 "McVaccine"))

# ::snt Hoo boy. I'll be prepared!
# ::tokens ["Hoo", "boy", ".", "I", "'ll", "be", "prepared", "!"]
# ::lemmas ["Hoo", "boy", ".", "i", "'ll", "be", "prepare", "!"]
(c2-4 / multi-sentence
      :snt1 (c2-1 / hoo
                  :mod (c2-2 / boy)
                  :mode expressive)
      :snt2 (c2-3 / prepare-02
                  :ARG0 (c2-0 / i)))

# ::snt great! nd dose hit me like a ton of bricks the day after
# ::tokens ["great", "!", "nd", "dose", "hit", "me", "like", "a", "ton", "of", "bricks", "the", "day", "after"]
# ::lemmas ["great", "!", "nd", "dose", "hit", "i", "like", "a", "ton", "of", "brick", "the", "day", "after"]
(c3-11 / multi-sentence
       :snt1 (c3-9 / great
                   :mode expressive)
       :snt2 (c3-6 / hit-01
                   :ARG1 (c3-10 / i)
                   :ARG2 (c3-0 / dose
                               :mod (c3-4 / dear))
                   :ARG1-of (c3-8 / resemble-01
                                  :ARG2 (c3-12 / brick
                                               :quant (c3-2 / mass-quantity
                                                            :unit (c3-7 / ton)
                                                            :quant 1)))
                   :time (c3-1 / after
                               :quant (c3-5 / temporal-quantity
                                            :unit (c3-3 / day)
                                            :quant 1))))

# ::snt BTW, it was a drive-through vaccination. Literally! I drove up, rolled the window down, and they gave me the jab while I sat in my car. I find it kinda funny for some reason.
# ::tokens ["BTW", ",", "it", "was", "a", "drive", "-", "through", "vaccination", ".", "Literally", "!", "I", "drove", "up", ",", "rolled", "the", "window", "down", ",", "and", "they", "gave", "me", "the", "jab", "while", "I", "sat", "in", "my", "car", ".", "I", "find", "it", "kinda", "funny", "for", "some", "reason", "."]
# ::lemmas ["btw", ",", "it", "be", "a", "drive", "-", "through", "vaccination", ".", "literally", "!", "i", "drive", "up", ",", "roll", "the", "window", "down", ",", "and", "they", "give", "i", "the", "jab", "while", "i", "sit", "in", "my", "car", ".", "i", "find", "it", "kinda", "funny", "for", "some", "reason", "."]
(c4-10 / multi-sentence
       :snt1 (c4-6 / vaccinate-01
                   :mod (c4-0 / drive-through)
                   :domain (c4-2 / it)
                   :mod (c4-21 / by-the-way))
       :snt2 (c4-19 / mean-01
                    :ARG2 (c4-17 / and
                                 :op1 (c4-15 / drive-01
                                             :ARG0 (c4-13 / i)
                                             :direction (c4-20 / up))
                                 :op2 (c4-8 / roll-01
                                            :ARG0 c4-13
                                            :ARG1 (c4-4 / window)
                                            :direction (c4-12 / down))
                                 :op3 (c4-9 / give-01
                                            :ARG0 (c4-7 / they)
                                            :ARG1 (c4-22 / jab)
                                            :ARG2 c4-13
                                            :time (c4-11 / sit-01
                                                         :ARG1 c4-13
                                                         :ARG2 (c4-3 / car
                                                                     :poss c4-13)))))
       :snt3 (c4-18 / find-02
                    :ARG0 c4-13
                    :ARG1 (c4-14 / funny-02
                                 :ARG1 c4-2)
                    :degree (c4-23 / kind-of)
                    :ARG1-of (c4-1 / cause-01
                                   :ARG0 (c4-5 / reason
                                               :mod (c4-16 / some)))))

# ::snt Without gin? No, no youre not.
# ::tokens ["Without", "gin", "?", "No", ",", "no", "you", "re", "not", "."]
# ::lemmas ["without", "gin", "?", "no", ",", "no", "you", "re", "not", "."]
(c5-3 / multi-sentence
      :snt1 (c5-1 / have-polarity-91
                  :polarity (c5-0 / amr-unknown)
                  :condition (c5-2 / gin
                                   :polarity -)
                  :ARG2 -)
      :snt2 (c5-4 / no))

# ::snt Thanks, man! I chugged coffee followed by electrolytes. Am I doing it right?
# ::tokens ["Thanks", ",", "man", "!", "I", "chugged", "coffee", "followed", "by", "electrolytes", ".", "Am", "I", "doing", "it", "right", "?"]
# ::lemmas ["thank", ",", "man", "!", "i", "chug", "coffee", "follow", "by", "electrolyte", ".", "be", "i", "do", "it", "right", "?"]
(c6-11 / multi-sentence
       :snt1 (c6-8 / thank-01
                   :ARG0 (c6-10 / i)
                   :ARG1 (c6-4 / man))
       :snt2 (c6-3 / chugge-01
                   :ARG0 (c6-5 / i)
                   :ARG1 (c6-0 / coffee
                               :ARG2-of (c6-2 / follow-01
                                              :ARG1 (c6-12 / electrolyte))))
       :snt3 (c6-1 / do-02
                   :ARG0 (c6-6 / i)
                   :ARG1 (c6-7 / it)
                   :ARG1-of (c6-9 / request-confirmation-91)))

# ::snt I hope you fare better than I did... Felt like I got hot by a truck. Several trucks, actually. Take some ibuprofen and stay hydrated. Good luck
# ::tokens ["I", "hope", "you", "fare", "better", "than", "I", "did", "...", "Felt", "like", "I", "got", "hot", "by", "a", "truck", ".", "Several", "trucks", ",", "actually", ".", "Take", "some", "ibuprofen", "and", "stay", "hydrated", ".", "Good", "luck"]
# ::lemmas ["i", "hope", "you", "fare", "well", "than", "i", "do", "...", "Felt", "like", "i", "get", "hot", "by", "a", "truck", ".", "several", "truck", ",", "actually", ".", "take", "some", "ibuprofen", "and", "stay", "hydrated", ".", "good", "luck"]
(c7-8 / multi-sentence
      :snt1 (c7-23 / hope-01
                   :ARG0 (c7-2 / i)
                   :ARG1 (c7-21 / fare-01
                                :ARG0 (c7-18 / you)
                                :ARG1-of (c7-1 / have-degree-91
                                               :ARG2 (c7-7 / good-02
                                                           :ARG1 c7-21)
                                               :ARG3 (c7-22 / more)
                                               :ARG4 (c7-15 / fare-01
                                                            :ARG0 c7-2))))
      :snt2 (c7-16 / feel-01
                   :ARG0 (c7-12 / i)
                   :ARG1 (c7-17 / get-03
                                :ARG1 c7-12
                                :ARG2 (c7-3 / hot-05
                                            :ARG1 c7-12)
                                :source (c7-6 / truck)))
      :snt3 (c7-4 / truck
                  :quant (c7-11 / several)
                  :ARG1-of (c7-20 / actual-02))
      :snt4 (c7-10 / and
                   :op1 (c7-9 / take-01
                              :ARG0 (c7-19 / you)
                              :ARG1 (c7-13 / ibuprofen
                                           :quant (c7-25 / some))
                              :mode imperative)
                   :op2 (c7-14 / stay-01
                               :ARG1 c7-19
                               :ARG3 (c7-5 / hydrate-01
                                           :ARG1 c7-19)
                               :mode imperative))
      :snt5 (c7-24 / luck
                   :ARG1-of (c7-0 / good-02)))

# ::snt Water, vitamins, Gatorade, SLEEP! + hrs if you can. Good luck!!!
# ::tokens ["Water", ",", "vitamins", ",", "Gatorade", ",", "SLEEP", "!", "+", "hrs", "if", "you", "can", ".", "Good", "luck", "!", "!", "!"]
# ::lemmas ["water", ",", "vitamin", ",", "Gatorade", ",", "SLEEP", "!", "+", "hrs", "if", "you", "can", ".", "good", "luck", "!", "!", "!"]
(c8-10 / multi-sentence
       :snt1 (c8-1 / and
                   :op1 (c8-2 / water)
                   :op2 (c8-4 / vitamin)
                   :op3 (c8-9 / product
                              :name (c8-11 / name
                                           :op1 "Gatorade"))
                   :op4 (c8-0 / seep-01))
       :snt2 (c8-12 / work-01
                    :op1 (c8-6 / temporal-quantity
                               :unit (c8-3 / hour)
                               :quant 1)
                    :duration +)
       :condition (c8-5 / possible-01)
       :snt3 (c8-7 / luck
                   :ARG1-of (c8-8 / good-02)))

# ::snt Congrats, Sam!
# ::tokens ["Congrats", ",", "Sam", "!"]
# ::lemmas ["Congrats", ",", "Sam", "!"]
(c9-0 / say-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-1 / congratulate-01
                  :ARG0 c9-3
                  :ARG1 (c9-2 / person
                              :name (c9-4 / name
                                          :op1 "Sam")
                              :ARG2-of c9-0)))

# ::snt Hope you have a better time with it than I did. Was out with a fever and headache for a couple days. But totally worth it.
# ::tokens ["Hope", "you", "have", "a", "better", "time", "with", "it", "than", "I", "did", ".", "Was", "out", "with", "a", "fever", "and", "headache", "for", "a", "couple", "days", ".", "But", "totally", "worth", "it", "."]
# ::lemmas ["hope", "you", "have", "a", "well", "time", "with", "it", "than", "i", "do", ".", "be", "out", "with", "a", "fever", "and", "headache", "for", "a", "couple", "days", ".", "but", "totally", "worth", "it", "."]
(c10-14 / multi-sentence
        :snt1 (c10-23 / hope-01
                      :ARG0 (c10-3 / i)
                      :ARG1 (c10-2 / have-03
                                   :ARG0 (c10-19 / you)
                                   :ARG1 (c10-12 / time
                                                 :ARG1-of (c10-4 / have-degree-91
                                                                 :ARG2 (c10-13 / good-02
                                                                               :ARG1 c10-12)
                                                                 :ARG3 (c10-22 / more)
                                                                 :ARG4 (c10-7 / time
                                                                              :ARG1-of c10-2
                                                                              :ARG0 (c10-16 / i)))))
                      :accompanier (c10-17 / it))
        :snt2 (c10-10 / out-06
                      :ARG1 (c10-24 / i)
                      :ARG1-of (c10-5 / cause-01
                                      :ARG0 (c10-20 / and
                                                    :op1 (c10-21 / fever)
                                                    :op2 (c10-11 / headache)))
                      :duration (c10-0 / couple
                                       :op1 (c10-15 / temporal-quantity
                                                    :unit (c10-1 / day)
                                                    :quant 1)))
        :snt3 (c10-9 / contrast-01
                     :ARG2 (c10-6 / worth-02
                                  :ARG2 (c10-8 / it)
                                  :degree (c10-18 / total))))
