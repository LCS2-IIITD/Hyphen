# ::snt Oh more sleep?
# ::tokens ["Oh", "more", "sleep", "?"]
# ::lemmas ["oh", "more", "sleep", "?"]
(c1-0 / sleep-01
      :polarity (c1-3 / amr-unknown)
      :mod (c1-1 / more)
      :mod (c1-2 / oh
                 :mode expressive))

# ::snt Just really fatigued. I slept a lot, but afterwards I felt fine.
# ::tokens ["Just", "really", "fatigued", ".", "I", "slept", "a", "lot", ",", "but", "afterwards", "I", "felt", "fine", "."]
# ::lemmas ["just", "really", "fatigued", ".", "i", "sleep", "a", "lot", ",", "but", "afterwards", "i", "feel", "fine", "."]
(c2-11 / multi-sentence
       :snt1 (c2-2 / fatigue-01
                   :ARG1 (c2-10 / i)
                   :degree (c2-6 / really)
                   :mod (c2-9 / just))
       :snt2 (c2-3 / contrast-01
                   :ARG1 (c2-0 / sleep-01
                               :ARG0 (c2-4 / i)
                               :quant (c2-7 / lot))
                   :ARG2 (c2-5 / feel-01
                               :ARG0 c2-4
                               :ARG1 (c2-8 / fine-04
                                           :ARG1 c2-4)
                               :time (c2-1 / afterwards))))

# ::snt Tell me about it. How did you feel?
# ::tokens ["Tell", "me", "about", "it", ".", "How", "did", "you", "feel", "?"]
# ::lemmas ["tell", "i", "about", "it", ".", "how", "do", "you", "feel", "?"]
(c3-5 / multi-sentence
      :snt1 (c3-3 / tell-01
                  :ARG0 (c3-6 / you)
                  :ARG1 (c3-4 / it)
                  :ARG2 (c3-2 / i)
                  :mode imperative)
      :snt2 (c3-1 / feel-01
                  :ARG0 (c3-7 / you)
                  :ARG1 (c3-0 / amr-unknown)))

# ::snt Hopefully it doesn't sucker punch you hours later like it did me
# ::tokens ["Hopefully", "it", "does", "n't", "sucker", "punch", "you", "hours", "later", "like", "it", "did", "me"]
# ::lemmas ["hopefully", "it", "do", "not", "sucker", "punch", "you", "hour", "later", "like", "it", "do", "i"]
(c4-3 / hope-01
      :ARG1 (c4-9 / punch-01
                  :ARG0 (c4-2 / it)
                  :ARG1 (c4-11 / you)
                  :ARG3 (c4-0 / sucker)
                  :time (c4-1 / after
                              :quant (c4-10 / multiple
                                            :op1 (c4-6 / temporal-quantity
                                                       :unit (c4-8 / hour)
                                                       :quant 1)))
                  :ARG1-of (c4-7 / resemble-01
                                 :ARG2 (c4-5 / punch-01
                                             :ARG0 c4-2
                                             :ARG1 (c4-4 / i)
                                             :ARG3 c4-0))
                  :polarity -))
