# ::snt Bruh my food was getting seasoning before you could even walk and Im not talking bout no salt and pepper
# ::tokens ["Bruh", "my", "food", "was", "getting", "seasoning", "before", "you", "could", "even", "walk", "and", "I", "m", "not", "talking", "bout", "no", "salt", "and", "pepper"]
# ::lemmas ["Bruh", "my", "food", "be", "get", "seasoning", "before", "you", "could", "even", "walk", "and", "i", "m", "not", "talk", "bout", "no", "salt", "and", "pepper"]
(c1-2 / and
      :op1 (c1-9 / bruh
                 :domain (c1-7 / get-04
                               :ARG1 (c1-0 / season-01
                                           :ARG1 (c1-3 / food
                                                       :poss (c1-11 / i)))
                               :time (c1-1 / before
                                           :op1 (c1-8 / possible-01
                                                      :ARG1 (c1-4 / walk-01
                                                                  :ARG0 (c1-12 / you)
                                                                  :mod (c1-14 / even)))))
                 :mode expressive)
      :op2 (c1-6 / talk-01
                 :ARG0 c1-11
                 :ARG1 (c1-13 / and
                              :op1 (c1-10 / salt)
                              :op2 (c1-5 / pepper)
                              :polarity -)
                 :polarity -))

# ::snt Bet you chicken comes like this too, questionable tastebuds if you dont like bbq base
# ::tokens ["Bet", "you", "chicken", "comes", "like", "this", "too", ",", "questionable", "tastebuds", "if", "you", "do", "nt", "like", "bbq", "base"]
# ::lemmas ["Bet", "you", "chicken", "come", "like", "this", "too", ",", "questionable", "tastebud", "if", "you", "do", "not", "like", "bbq", "base"]
(c2-11 / bet-01
       :ARG0 (c2-12 / i)
       :ARG2 (c2-3 / and
                   :op1 (c2-4 / come-01
                              :ARG1 (c2-0 / chicken)
                              :ARG1-of (c2-9 / resemble-01
                                             :ARG2 (c2-8 / this))
                              :mod (c2-6 / too))
                   :op2 (c2-14 / tastebud
                               :ARG1-of (c2-5 / question-03))
                   :condition (c2-1 / dislike-01
                                    :ARG0 (c2-10 / you)
                                    :ARG1 (c2-2 / base
                                                :mod (c2-7 / company
                                                           :name (c2-13 / name
                                                                        :op1 "Bbq"))))))

# ::snt Bbq base if for inbreds.. I hope your not inbred x
# ::tokens ["Bbq", "base", "if", "for", "inbreds", "..", "I", "hope", "your", "not", "inbred", "x"]
# ::lemmas ["bbq", "base", "if", "for", "inbred", "..", "i", "hope", "your", "not", "inbreed", "x"]
(c5-6 / multi-sentence
      :snt1 (c5-4 / base-02
                  :ARG2 (c5-0 / company
                              :name (c5-7 / name
                                          :op1 "Bbq"))
                  :condition (c5-5 / inbred
                                   :polarity -))
      :snt2 (c5-1 / hope-01
                  :ARG0 (c5-2 / i)
                  :ARG1 (c5-3 / inbred
                              :domain (c5-8 / you)
                              :polarity -)))

# ::snt Do you think youre mature for not having bbq?
# ::tokens ["Do", "you", "think", "you", "re", "mature", "for", "not", "having", "bbq", "?"]
# ::lemmas ["do", "you", "think", "you", "re", "mature", "for", "not", "have", "bbq", "?"]
(c6-3 / think-01
      :ARG0 (c6-7 / you)
      :ARG1 (c6-5 / mature-02
                  :ARG1 c6-7
                  :ARG1-of (c6-1 / cause-01
                                 :ARG0 (c6-2 / have-03
                                             :ARG0 c6-7
                                             :ARG1 (c6-4 / publication
                                                         :name (c6-6 / name
                                                                     :op1 "Bbq"))
                                             :polarity -)))
      :polarity (c6-0 / amr-unknown))

# ::snt Chaldish
# ::tokens ["Chaldish"]
# ::lemmas ["chaldish"]
(c7-0 / person
      :name (c7-1 / name
                  :op1 "Chaldish"))

# ::snt Love you all but your wrong Bbq base on pizza ruins the whole pizza x
# ::tokens ["Love", "you", "all", "but", "your", "wrong", "Bbq", "base", "on", "pizza", "ruins", "the", "whole", "pizza", "x"]
# ::lemmas ["love", "you", "all", "but", "your", "wrong", "Bbq", "base", "on", "pizza", "ruin", "the", "whole", "pizza", "x"]
(c9-1 / contrast-01
      :ARG1 (c9-5 / love-01
                  :ARG1 (c9-9 / you
                              :mod (c9-0 / all)))
      :ARG2 (c9-4 / ruin-01
                  :ARG0 (c9-6 / base
                              :mod (c9-7 / publication
                                         :name (c9-8 / name
                                                     :op1 "Bbq"))
                              :ARG2-of (c9-2 / wrong-04)
                              :poss c9-9)
                  :ARG1 (c9-3 / pizza
                              :mod (c9-10 / whole))))

# ::snt Dont hate on Texas bbq pls
# ::tokens ["Do", "nt", "hate", "on", "Texas", "bbq", "pls"]
# ::lemmas ["do", "nt", "hate", "on", "Texas", "bbq", "pls"]
(c10-1 / hate-01
       :ARG0 (c10-3 / you)
       :ARG1 (c10-0 / publication
                    :name (c10-2 / name
                                 :op1 "Texas"
                                 :op2 "Bbq"))
       :polarity -
       :mode imperative)

# ::snt Its elite wys
# ::tokens ["Its", "elite", "wys"]
# ::lemmas ["its", "elite", "wys"]
(c11-0 / wy
       :mod (c11-2 / elite)
       :domain (c11-1 / it))
