# ::snt Same here. When I got my first vaccination, my right arm really hurt. It lastet for about days. It didn't keep my from playing though. The side effects kicked in on the day after the vaccination and disappeared completely after one day.
# ::tokens ["Same", "here", ".", "When", "I", "got", "my", "first", "vaccination", ",", "my", "right", "arm", "really", "hurt", ".", "It", "lastet", "for", "about", "days", ".", "It", "did", "n't", "keep", "my", "from", "playing", "though", ".", "The", "side", "effects", "kicked", "in", "on", "the", "day", "after", "the", "vaccination", "and", "disappeared", "completely", "after", "one", "day", "."]
# ::lemmas ["same", "here", ".", "when", "i", "get", "my", "first", "vaccination", ",", "my", "right", "arm", "really", "hurt", ".", "it", "lastet", "for", "about", "days", ".", "it", "do", "not", "keep", "my", "from", "play", "though", ".", "the", "side", "effect", "kick", "in", "on", "the", "day", "after", "the", "vaccination", "and", "disappear", "completely", "after", "one", "day", "."]
(c1-16 / multi-sentence
       :snt1 (c1-20 / same-01
                    :location (c1-28 / here))
       :snt2 (c1-3 / hurt-01
                   :ARG1 (c1-27 / arm
                                :ARG1-of (c1-14 / right-04)
                                :part-of (c1-4 / i))
                   :degree (c1-9 / really)
                   :time (c1-15 / get-01
                                :ARG0 c1-4
                                :ARG1 (c1-10 / vaccinate-01
                                             :ARG1 c1-4
                                             :ord (c1-11 / ordinal-entity
                                                         :value 1))))
       :snt3 (c1-29 / last-01
                    :ARG1 (c1-23 / it)
                    :ARG2 (c1-18 / about
                                 :op1 (c1-13 / temporal-quantity
                                             :unit (c1-0 / day)
                                             :quant 1)
                                 :duration-of c1-29)
                    :op1 (c1-8 / temporal-quantity
                               :unit (c1-26 / day)
                               :quant 1))
       :snt4 (c1-32 / keep-04
                    :ARG0 c1-23
                    :polarity -)
       :ARG1 (c1-24 / i)
       :ARG2 (c1-31 / play-01
                    :ARG0 c1-24)
       :ARG1-of (c1-5 / have-concession-91)
       :snt5 (c1-1 / and
                   :op1 (c1-6 / kick-in-02
                              :ARG1 (c1-19 / effect
                                           :mod (c1-30 / side))
                              :time (c1-33 / after
                                           :op1 c1-10
                                           :quant (c1-17 / temporal-quantity
                                                         :unit (c1-22 / day)
                                                         :quant 1)))
                   :op2 (c1-12 / disappear-01
                               :ARG1 c1-19
                               :ARG1-of (c1-7 / complete-02)
                               :time (c1-2 / after
                                           :op1 c1-10
                                           :quant (c1-25 / temporal-quantity
                                                         :unit (c1-21 / day)
                                                         :quant 1)))))

# ::snt if you feel pain and sore it means immune system is working
# ::tokens ["if", "you", "feel", "pain", "and", "sore", "it", "means", "immune", "system", "is", "working"]
# ::lemmas ["if", "you", "feel", "pain", "and", "sore", "it", "mean", "immune", "system", "be", "work"]
(c2-7 / mean-01
      :ARG1 (c2-2 / feel-01
                  :ARG0 (c2-8 / you)
                  :ARG1 (c2-1 / and
                              :op1 (c2-6 / pain-01)
                              :op2 (c2-0 / sore)))
      :ARG2 (c2-4 / work-09
                  :ARG1 (c2-5 / system
                              :ARG1-of (c2-3 / immune-02)))
      :condition c2-2)

# ::snt I havent felt much at all, gl to you though
# ::tokens ["I", "have", "nt", "felt", "much", "at", "all", ",", "gl", "to", "you", "though"]
# ::lemmas ["i", "have", "not", "feel", "much", "at", "all", ",", "gl", "to", "you", "though"]
(c3-1 / feel-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-5 / much)
      :mod (c3-0 / at-all)
      :ARG1-of (c3-2 / have-concession-91)
      :ARG2-of (c3-3 / thank-01
                     :ARG0 c3-4
                     :ARG1 (c3-6 / you))
      :polarity -)

# ::snt Yeah my arm hurt for a week, but it's better than getting covid lol
# ::tokens ["Yeah", "my", "arm", "hurt", "for", "a", "week", ",", "but", "it", "'s", "better", "than", "getting", "covid", "lol"]
# ::lemmas ["yeah", "my", "arm", "hurt", "for", "a", "week", ",", "but", "it", "be", "well", "than", "get", "covid", "lol"]
(c4-3 / hurt-01
      :ARG1 (c4-1 / arm
                  :part-of (c4-10 / i))
      :duration (c4-5 / temporal-quantity
                      :unit (c4-2 / week)
                      :quant 1)
      :concession-of (c4-8 / good-02
                           :ARG1 (c4-4 / it)
                           :ARG2-of (c4-9 / have-degree-91
                                          :ARG1 c4-4
                                          :ARG3 (c4-11 / more)
                                          :ARG4 (c4-13 / get-01
                                                       :ARG1 (c4-6 / product
                                                                   :name (c4-12 / name
                                                                                :op1 "Covid"))))
                           :ARG2-of (c4-7 / laugh-01
                                          :ARG0 c4-10
                                          :manner (c4-0 / loud)
                                          :mode expressive)))

# ::snt Typical zoomer convo Kappa
# ::tokens ["Typical", "zoomer", "convo", "Kappa"]
# ::lemmas ["typical", "zoomer", "convo", "Kappa"]
(c5-3 / convo-00
      :ARG0 (c5-0 / person
                  :ARG0-of (c5-2 / zoom-01))
      :ARG1-of (c5-1 / typical-02))

# ::snt Ok, this bit is getting annoying now
# ::tokens ["Ok", ",", "this", "bit", "is", "getting", "annoying", "now"]
# ::lemmas ["ok", ",", "this", "bit", "be", "getting", "annoying", "now"]
(c6-0 / annoy-01
      :ARG0 (c6-3 / bit
                  :mod (c6-2 / this))
      :time (c6-4 / now)
      :ARG1-of (c6-1 / okay-04))

# ::snt also i am very omega sensitive to pain so i will feel it
# ::tokens ["also", "i", "am", "very", "omega", "sensitive", "to", "pain", "so", "i", "will", "feel", "it"]
# ::lemmas ["also", "i", "be", "very", "omega", "sensitive", "to", "pain", "so", "i", "will", "feel", "it"]
(c7-0 / sensitive-03
      :ARG0 (c7-6 / i)
      :ARG1 (c7-5 / pain-01)
      :degree (c7-4 / very)
      :mod (c7-1 / also)
      :ARG0-of (c7-3 / cause-01
                     :ARG1 (c7-2 / feel-01
                                 :ARG0 c7-6
                                 :ARG1 c7-5)))

# ::snt well i mean the actual shot itself not the after effects but yeah it takes everyone out of commision for a couple days
# ::tokens ["well", "i", "mean", "the", "actual", "shot", "itself", "not", "the", "after", "effects", "but", "yeah", "it", "takes", "everyone", "out", "of", "commision", "for", "a", "couple", "days"]
# ::lemmas ["well", "i", "mean", "the", "actual", "shot", "itself", "not", "the", "after", "effect", "but", "yeah", "it", "take", "everyone", "out", "of", "commision", "for", "a", "couple", "days"]
(c8-11 / mean-01
       :ARG0 (c8-10 / i)
       :ARG2 (c8-5 / contrast-01
                   :ARG1 (c8-0 / shot
                               :ARG1-of (c8-3 / actual-02)
                               :ARG0-of (c8-13 / affect-01
                                               :time (c8-1 / after)))
                   :ARG2 (c8-9 / take-out-11
                               :ARG0 c8-0
                               :ARG1 (c8-14 / everyone)
                               :source (c8-2 / commision)
                               :duration (c8-8 / couple
                                               :op1 (c8-7 / temporal-quantity
                                                          :unit (c8-4 / day)
                                                          :quant 1))
                               :mod (c8-12 / yeah)))
       :mod (c8-6 / well))

# ::snt my mom felt pain and sore for like a week
# ::tokens ["my", "mom", "felt", "pain", "and", "sore", "for", "like", "a", "week"]
# ::lemmas ["my", "mom", "feel", "pain", "and", "sore", "for", "like", "a", "week"]
(c9-2 / feel-01
      :ARG0 (c9-9 / person
                  :ARG0-of (c9-5 / have-rel-role-91
                                 :ARG1 (c9-3 / i)
                                 :ARG2 (c9-10 / mom)))
      :ARG1 (c9-1 / and
                  :op1 (c9-6 / pain-01
                             :ARG1 c9-9)
                  :op2 (c9-0 / sore))
      :duration (c9-8 / like
                      :op1 (c9-7 / temporal-quantity
                                 :unit (c9-4 / week)
                                 :quant 1)))

# ::snt how
# ::tokens ["how"]
# ::lemmas ["how"]
(c10-0 / amr-unknown)

# ::snt i've heard you don't even feel it
# ::tokens ["i", "'ve", "heard", "you", "do", "n't", "even", "feel", "it"]
# ::lemmas ["i", "'ve", "hear", "you", "do", "not", "even", "feel", "it"]
(c11-1 / hear-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-0 / feel-01
                    :ARG0 (c11-4 / you)
                    :ARG1 (c11-2 / it)
                    :mod (c11-5 / even)
                    :polarity -))

# ::snt I know that it was discovered in
# ::tokens ["I", "know", "that", "it", "was", "discovered", "in"]
# ::lemmas ["i", "know", "that", "it", "be", "discover", "in"]
(c12-4 / know-01
       :ARG0 (c12-3 / i)
       :ARG1 (c12-0 / discover-01
                    :ARG1 (c12-1 / it)
                    :location (c12-2 / location)))

# ::snt My only possible response to that is to make you confused, so I'll tell you that !=1
# ::tokens ["My", "only", "possible", "response", "to", "that", "is", "to", "make", "you", "confused", ",", "so", "I", "'ll", "tell", "you", "that", "!", "=", "1"]
# ::lemmas ["my", "only", "possible", "response", "to", "that", "be", "to", "make", "you", "confuse", ",", "so", "i", "'ll", "tell", "you", "that", "!", "=", "1"]
(c14-7 / possible-01
       :ARG1 (c14-6 / respond-01
                    :ARG0 (c14-1 / i)
                    :ARG1 (c14-5 / that)
                    :ARG2 (c14-8 / make-02
                                 :ARG0 c14-1
                                 :ARG1 (c14-2 / confuse-01
                                              :ARG1 (c14-9 / you)))
                    :mod (c14-4 / only))
       :ARG0-of (c14-0 / cause-01
                       :ARG1 (c14-3 / tell-01
                                    :ARG0 c14-1
                                    :ARG1 (c14-10 / err-01
                                                  :ARG0 c14-9)
                                    :ARG2 c14-9)))

# ::snt i'm trying to tell you that they multiplied this is serious godbup there are of them now
# ::tokens ["i", "'m", "trying", "to", "tell", "you", "that", "they", "multiplied", "this", "is", "serious", "godbup", "there", "are", "of", "them", "now"]
# ::lemmas ["i", "be", "try", "to", "tell", "you", "that", "they", "multiply", "this", "be", "serious", "godbup", "there", "be", "of", "they", "now"]
(c15-9 / multi-sentence
       :snt1 (c15-5 / try-01
                    :ARG0 (c15-8 / i)
                    :ARG1 (c15-2 / tell-01
                                 :ARG0 c15-8
                                 :ARG1 (c15-1 / multiply-01
                                              :ARG0 (c15-11 / they))
                                 :ARG2 (c15-6 / you)))
       :snt2 (c15-0 / serious-02
                    :ARG1 (c15-3 / they
                                 :quant (c15-4 / multiple
                                               :op1 1)
                                 :time (c15-10 / now)))
       :snt3 (c15-7 / godbup
                    :domain c15-6
                    :mode expressive))

# ::snt Bro what are you trying to tell me, I know what a masochist is
# ::tokens ["Bro", "what", "are", "you", "trying", "to", "tell", "me", ",", "I", "know", "what", "a", "masochist", "is"]
# ::lemmas ["Bro", "what", "be", "you", "try", "to", "tell", "i", ",", "i", "know", "what", "a", "masochist", "be"]
(c16-6 / multi-sentence
       :snt1 (c16-4 / try-01
                    :ARG0 (c16-8 / you)
                    :ARG1 (c16-2 / tell-01
                                 :ARG0 c16-8
                                 :ARG1 (c16-0 / amr-unknown)
                                 :ARG2 (c16-5 / i)))
       :snt2 (c16-7 / know-01
                    :ARG0 (c16-3 / i)
                    :ARG1 (c16-1 / masochist
                                 :domain c16-0)))

# ::snt oh no they multiplied
# ::tokens ["oh", "no", "they", "multiplied"]
# ::lemmas ["oh", "no", "they", "multiply"]
(c17-1 / multiply-01
       :ARG1 (c17-2 / they)
       :mod (c17-0 / oh-no
                   :mode expressive))

# ::snt I know what a masochist is, Im making the joke about how most of us are masochists
# ::tokens ["I", "know", "what", "a", "masochist", "is", ",", "I", "m", "making", "the", "joke", "about", "how", "most", "of", "us", "are", "masochists"]
# ::lemmas ["i", "know", "what", "a", "masochist", "be", ",", "i", "m", "make", "the", "joke", "about", "how", "most", "of", "we", "be", "masochist"]
(c18-0 / and
       :op1 (c18-10 / know-01
                    :ARG0 (c18-8 / i)
                    :ARG1 (c18-9 / masochist
                                 :domain (c18-6 / person)))
       :op2 (c18-7 / joke-01
                   :ARG0 c18-8
                   :ARG2 (c18-1 / masochist
                                :domain (c18-5 / person
                                               :ARG1-of (c18-3 / include-91
                                                               :ARG2 (c18-2 / we)
                                                               :ARG3 (c18-4 / most))))))

# ::snt But-but you're a mario maker player, you're supposed to be a masochist
# ::tokens ["But", "-", "but", "you", "'re", "a", "mario", "maker", "player", ",", "you", "'re", "supposed", "to", "be", "a", "masochist"]
# ::lemmas ["but", "-", "but", "you", "be", "a", "mario", "maker", "player", ",", "you", "be", "suppose", "to", "be", "a", "masochist"]
(c20-1 / contrast-01
       :ARG2 (c20-0 / suppose-02
                    :ARG1 (c20-7 / you)
                    :ARG2 (c20-6 / masochist))
       :concession (c20-5 / person
                          :ARG0-of (c20-4 / play-01
                                          :ARG1 (c20-2 / make-01
                                                       :ARG1 (c20-3 / mario)))
                          :domain c20-7))

# ::snt Yeah it's definitely annoying, but it only lasts like a day. You'll get through it. If anything it was the chills/fatigue that got to me more than the arm aches
# ::tokens ["Yeah", "it", "'s", "definitely", "annoying", ",", "but", "it", "only", "lasts", "like", "a", "day", ".", "You", "'ll", "get", "through", "it", ".", "If", "anything", "it", "was", "the", "chills", "/", "fatigue", "that", "got", "to", "me", "more", "than", "the", "arm", "aches"]
# ::lemmas ["yeah", "it", "be", "definitely", "annoying", ",", "but", "it", "only", "last", "like", "a", "day", ".", "you", "'ll", "get", "through", "it", ".", "if", "anything", "it", "be", "the", "chill", "/", "fatigue", "that", "get", "to", "i", "more", "than", "the", "arm", "ache"]
(c21-9 / multi-sentence
       :snt1 (c21-5 / contrast-01
                    :ARG1 (c21-16 / annoy-01
                                  :ARG0 (c21-4 / it)
                                  :mod (c21-0 / definite))
                    :ARG2 (c21-20 / last-01
                                  :ARG1 c21-4
                                  :ARG2 (c21-7 / temporal-quantity
                                               :unit (c21-14 / day)
                                               :quant 1)
                                  :mod (c21-6 / only)))
       :snt2 (c21-8 / get-through-13
                    :ARG0 (c21-15 / you)
                    :ARG1 (c21-12 / it))
       :snt3 (c21-19 / have-condition-91
                     :ARG1 c21-8
                     :ARG0 (c21-11 / slash
                                   :op1 (c21-1 / chill-01)
                                   :op2 (c21-17 / fat-03))
                     :ARG1 (c21-13 / i)
                     :ARG2-of (c21-3 / have-degree-91
                                     :ARG1 c21-11
                                     :ARG3 (c21-18 / more)
                                     :ARG4 (c21-10 / ache-01
                                                   :ARG0 (c21-2 / arm))))
       :ARG2 (c21-21 / anything))
