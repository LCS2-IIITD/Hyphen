# ::snt Good good
# ::tokens ["Good", "good"]
# ::lemmas ["good", "good"]
(c1-0 / good-02
      :ARG1 (c1-1 / thing))

# ::snt Good morning
# ::tokens ["Good", "morning"]
# ::lemmas ["good", "morning"]
(c2-1 / morning
      :ARG1-of (c2-0 / good-02))

# ::snt Well and good and may be I m gonna sleep u can try to sleep a bit earlier each day , I hv tried my best , mins before
# ::tokens ["Well", "and", "good", "and", "may", "be", "I", "m", "gon", "na", "sleep", "u", "can", "try", "to", "sleep", "a", "bit", "earlier", "each", "day", ",", "I", "hv", "tried", "my", "best", ",", "mins", "before"]
# ::lemmas ["well", "and", "good", "and", "may", "be", "i", "m", "going", "to", "sleep", "u", "can", "try", "to", "sleep", "a", "bit", "earlier", "each", "day", ",", "i", "hv", "try", "my", "good", ",", "min", "before"]
(c3-6 / multi-sentence
      :snt1 (c3-14 / and
                   :op1 (c3-2 / well)
                   :op2 (c3-5 / good-02)
                   :op3 (c3-20 / possible-01
                               :ARG1 (c3-9 / sleep-01
                                           :ARG0 (c3-1 / i))))
      :snt2 (c3-17 / possible-01
                   :ARG1 (c3-19 / sleep-01
                                :ARG0 (c3-10 / i)
                                :time (c3-18 / before
                                             :op1 (c3-7 / now)
                                             :quant (c3-4 / temporal-quantity
                                                          :unit (c3-15 / minute)
                                                          :quant 1))))
      :snt3 (c3-3 / try-01
                  :ARG0 (c3-11 / i)
                  :ARG1 (c3-16 / have-degree-91
                               :ARG1 c3-11
                               :ARG2 c3-5
                               :ARG1 c3-11)
                  :ARG3 (c3-12 / most))
      :time (c3-13 / before
                   :op1 (c3-0 / now)
                   :quant (c3-8 / temporal-quantity
                                :unit c3-15
                                :quant 1)))

# ::snt Shall we appreciate each other again? You dont have to make me feel good by saying I m interesting Lollld
# ::tokens ["Shall", "we", "appreciate", "each", "other", "again", "?", "You", "do", "nt", "have", "to", "make", "me", "feel", "good", "by", "saying", "I", "m", "interesting", "Lollld"]
# ::lemmas ["shall", "we", "appreciate", "each", "other", "again", "?", "you", "do", "not", "have", "to", "make", "i", "feel", "good", "by", "say", "i", "m", "interesting", "Lollld"]
(c4-6 / multi-sentence
      :snt1 (c4-13 / appreciate-02
                   :ARG0 (c4-3 / we
                               :ARG1-of c4-13)
                   :mod (c4-8 / again)
                   :polarity (c4-0 / amr-unknown)
                   :mod (c4-18 / all))
      :snt2 (c4-9 / say-01
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-4 / obligate-01
                              :ARG1 (c4-12 / you)
                              :ARG2 (c4-15 / make-02
                                           :ARG0 c4-12
                                           :ARG1 (c4-14 / feel-01
                                                        :ARG0 (c4-10 / i)
                                                        :ARG1 (c4-5 / good-02))
                                           :manner (c4-16 / say-01
                                                          :ARG0 c4-12
                                                          :ARG1 (c4-11 / interest-01
                                                                       :ARG1 c4-10)))
                              :polarity -)
                  :ARG2 (c4-17 / person
                               :name (c4-7 / name
                                           :op1 "Lollld"))
                  :polarity (c4-1 / amr-unknown)))

# ::snt You hav already seen a ss of my drafts, what do you even find interesting in that , what is drold
# ::tokens ["You", "hav", "already", "seen", "a", "ss", "of", "my", "drafts", ",", "what", "do", "you", "even", "find", "interesting", "in", "that", ",", "what", "is", "drold"]
# ::lemmas ["you", "hav", "already", "see", "a", "ss", "of", "my", "draft", ",", "what", "do", "you", "even", "find", "interesting", "in", "that", ",", "what", "be", "drold"]
(c5-2 / and
      :op1 (c5-0 / see-01
                 :ARG0 (c5-11 / you)
                 :ARG1 (c5-8 / thing
                             :mod (c5-9 / ss)
                             :ARG1-of (c5-1 / draft-01
                                            :ARG0 (c5-10 / i)))
                 :time (c5-12 / already))
      :op2 (c5-3 / find-02
                 :ARG0 c5-11
                 :ARG1 (c5-7 / interest-01
                             :ARG0 (c5-5 / that)
                             :ARG1 c5-11
                             :ARG2 (c5-4 / thing
                                         :ARG1-of (c5-6 / drold-01)))
                 :mod (c5-13 / even)))

# ::snt *me feeling sorry for the TL if I tweet my drafsh*
# ::tokens ["*", "me", "feeling", "sorry", "for", "the", "TL", "if", "I", "tweet", "my", "drafsh", "*"]
# ::lemmas ["*", "i", "feel", "sorry", "for", "the", "TL", "if", "i", "tweet", "my", "drafsh", "*"]
(c6-1 / feel-01
      :ARG0 (c6-7 / i)
      :ARG1 (c6-0 / sorry-01
                  :ARG1 c6-7
                  :ARG2 (c6-6 / person
                              :ARG0-of (c6-4 / post-01
                                             :manner (c6-3 / original))
                              :ARG2-of c6-1))
      :condition (c6-5 / tweet-02
                       :ARG0 c6-7
                       :ARG1 (c6-2 / product
                                   :name (c6-8 / name
                                               :op1 " drafsh")
                                   :poss c6-7)))

# ::snt *me reading my drafts and feeling sorry for you*
# ::tokens ["*", "me", "reading", "my", "drafts", "and", "feeling", "sorry", "for", "you", "*"]
# ::lemmas ["*", "i", "read", "my", "draft", "and", "feel", "sorry", "for", "you", "*"]
(c7-2 / and
      :op1 (c7-5 / read-01
                 :ARG0 (c7-6 / i)
                 :ARG1 (c7-4 / thing
                             :ARG1-of (c7-0 / draft-01
                                            :ARG0 c7-6)))
      :op2 (c7-3 / feel-01
                 :ARG0 c7-6
                 :ARG1 (c7-1 / sorry-01
                             :ARG1 c7-6
                             :ARG2 (c7-7 / you))))

# ::snt As u wish Phew I can now tweet my draftsPS it is a joke. I never simp
# ::tokens ["As", "u", "wish", "Phew", "I", "can", "now", "tweet", "my", "draftsPS", "it", "is", "a", "joke", ".", "I", "never", "simp"]
# ::lemmas ["as", "u", "wish", "Phew", "i", "can", "now", "tweet", "my", "draftsPS", "it", "be", "a", "joke", ".", "i", "never", "simp"]
(c8-11 / multi-sentence
       :snt1 (c8-3 / wish-01
                   :ARG0 (c8-13 / you)
                   :ARG1 (c8-10 / possible-01
                                :ARG1 (c8-9 / tweet-02
                                            :ARG0 (c8-2 / i)
                                            :ARG1 (c8-4 / thing
                                                        :ARG1-of (c8-0 / draft-01
                                                                       :ARG0 c8-2))
                                            :time (c8-12 / now))
                                :ARG1-of (c8-5 / cause-01
                                               :ARG0 c8-3
                                               :ARG0 c8-13
                                               :ARG1 c8-10
                                               :ARG1 c8-9
                                               :ARG0 c8-2
                                               :ARG1 (c8-6 / thing
                                                           :ARG1-of (c8-8 / post-01
                                                                          :ARG0 c8-2)))))
       :snt2 (c8-1 / simp-00
                   :ARG0 (c8-7 / i)
                   :time (c8-14 / ever)
                   :polarity -))

# ::snt And you are the president of this club?! I never simp dude!
# ::tokens ["And", "you", "are", "the", "president", "of", "this", "club", "?", "!", "I", "never", "simp", "dude", "!"]
# ::lemmas ["and", "you", "be", "the", "president", "of", "this", "club", "?", "!", "i", "never", "simp", "dude", "!"]
(c9-9 / multi-sentence
      :snt1 (c9-2 / and
                  :op2 (c9-5 / have-org-role-91
                             :ARG0 (c9-10 / you)
                             :ARG1 (c9-3 / club
                                         :mod (c9-6 / this))
                             :ARG2 (c9-8 / president))
                  :polarity (c9-11 / amr-unknown))
      :snt2 (c9-0 / say-01
                  :ARG0 (c9-4 / i)
                  :ARG1 (c9-7 / simp-01
                              :ARG0 c9-4
                              :time (c9-12 / ever)
                              :polarity -
                              :mode expressive)
                  :ARG2 (c9-1 / dude)))

# ::snt That is called writing and not simping
# ::tokens ["That", "is", "called", "writing", "and", "not", "simping"]
# ::lemmas ["that", "be", "call", "writing", "and", "not", "simpe"]
(c10-2 / call-01
       :ARG1 (c10-4 / that)
       :ARG2 (c10-1 / and
                    :op1 (c10-3 / write-01)
                    :op2 (c10-0 / simpolarity)))

# ::snt I m not glad at all
# ::tokens ["I", "m", "not", "glad", "at", "all"]
# ::lemmas ["i", "m", "not", "glad", "at", "all"]
(c11-0 / glad-02
       :ARG1 (c11-1 / i)
       :degree (c11-2 / at-all)
       :polarity -)

# ::snt An absolute NoOmg i should hv kept my mouth shut
# ::tokens ["An", "absolute", "NoOmg", "i", "should", "hv", "kept", "my", "mouth", "shut"]
# ::lemmas ["an", "absolute", "NoOmg", "i", "should", "hv", "keep", "my", "mouth", "shut"]
(c12-5 / no
       :mod (c12-1 / absolute)
       :ARG0-of (c12-6 / mean-01
                       :ARG1 (c12-4 / recommend-01
                                    :ARG1 (c12-7 / keep-01
                                                 :ARG0 (c12-2 / i
                                                              :part (c12-3 / mouth))
                                                 :ARG1 (c12-0 / shut-01
                                                              :ARG0 c12-2
                                                              :ARG1 c12-3))
                                    :ARG2 c12-2)))

# ::snt Shushhh I should hav drafted
# ::tokens ["Shushhh", "I", "should", "hav", "drafted"]
# ::lemmas ["shushhh", "i", "should", "hav", "draft"]
(c13-2 / recommend-01
       :ARG1 (c13-0 / draft-02
                    :ARG1 (c13-1 / i))
       :mod (c13-3 / shush
                   :mode expressive))
