# ::snt x
# ::tokens ["x"]
# ::lemmas ["x"]
(c1-0 / string-entity
      :value "x")

# ::snt Hope its very soon x
# ::tokens ["Hope", "its", "very", "soon", "x"]
# ::lemmas ["hope", "its", "very", "soon", "x"]
(c2-3 / hope-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-0 / soon
                  :degree (c2-1 / very)))

# ::snt Yes thats what Id planned. Prefer to stay local. Ill keep you posted
# ::tokens ["Yes", "that", "s", "what", "I", "d", "planned", ".", "Prefer", "to", "stay", "local", ".", "Ill", "keep", "you", "posted"]
# ::lemmas ["yes", "that", "s", "what", "I", "d", "plan", ".", "prefer", "to", "stay", "local", ".", "ill", "keep", "you", "post"]
(c3-8 / multi-sentence
      :snt1 (c3-7 / plan-01
                  :ARG0 (c3-1 / i)
                  :ARG1 (c3-5 / that))
      :snt2 (c3-4 / prefer-01
                  :ARG0 (c3-10 / you)
                  :ARG1 (c3-0 / stay-01
                              :ARG1 c3-10
                              :ARG3 (c3-6 / local-02
                                          :ARG1 c3-10)))
      :snt3 (c3-9 / keep-01
                  :ARG0 (c3-3 / i)
                  :ARG1 (c3-2 / post-02
                              :ARG0 c3-3
                              :ARG2 (c3-11 / you))))

# ::snt Stay patient... they will get to you soon! You may find you get a letter first, like I did, but when you go online to book somewhere, theyre all too far away! Just ignore it and then youll get a text from your GP surgery for an appointment thats more local to you! Let me know!
# ::tokens ["Stay", "patient", "...", "they", "will", "get", "to", "you", "soon", "!", "You", "may", "find", "you", "get", "a", "letter", "first", ",", "like", "I", "did", ",", "but", "when", "you", "go", "online", "to", "book", "somewhere", ",", "they", "re", "all", "too", "far", "away", "!", "Just", "ignore", "it", "and", "then", "you", "ll", "get", "a", "text", "from", "your", "GP", "surgery", "for", "an", "appointment", "that", "s", "more", "local", "to", "you", "!", "Let", "me", "know", "!"]
# ::lemmas ["stay", "patient", "...", "they", "will", "get", "to", "you", "soon", "!", "you", "may", "find", "you", "get", "a", "letter", "first", ",", "like", "i", "do", ",", "but", "when", "you", "go", "online", "to", "book", "somewhere", ",", "they", "re", "all", "too", "far", "away", "!", "just", "ignore", "it", "and", "then", "you", "ll", "get", "a", "text", "from", "your", "GP", "surgery", "for", "an", "appointment", "that", "s", "more", "local", "to", "you", "!", "let", "i", "know", "!"]
(c4-15 / multi-sentence
       :snt1 (c4-32 / and
                    :op1 (c4-18 / stay-01
                                :ARG1 (c4-29 / you)
                                :ARG3 (c4-43 / patient)
                                :mode imperative)
                    :op2 (c4-14 / get-05
                                :ARG0 (c4-12 / they)
                                :ARG1 c4-29
                                :time (c4-42 / soon)))
       :snt2 (c4-9 / contrast-01
                   :ARG1 (c4-38 / possible-01
                                :ARG1 (c4-34 / find-01
                                             :ARG0 (c4-30 / you)
                                             :ARG1 (c4-28 / get-01
                                                          :ARG0 c4-30
                                                          :ARG1 (c4-40 / letter)
                                                          :ord (c4-11 / ordinal-entity
                                                                      :value 1)
                                                          :ARG1-of (c4-13 / resemble-01
                                                                          :ARG2 (c4-0 / do-02
                                                                                      :ARG0 (c4-7 / i))))))
                   :ARG2 (c4-41 / be-located-at-91
                                :ARG1 (c4-10 / they)
                                :ARG2 (c4-25 / far
                                             :ARG2-of (c4-36 / have-degree-91
                                                             :ARG1 c4-10
                                                             :ARG3 (c4-16 / too
                                                                          :mod (c4-17 / all))))
                                :time (c4-2 / go-02
                                            :ARG0 c4-30
                                            :ARG4 (c4-37 / online)
                                            :purpose (c4-31 / book-01
                                                            :ARG0 c4-30
                                                            :ARG2 (c4-22 / somewhere)))))
       :snt3 (c4-1 / and
                   :op1 (c4-21 / ignore-01
                               :ARG0 (c4-3 / you)
                               :ARG1 (c4-23 / it)
                               :mod (c4-39 / just)
                               :mode imperative)
                   :op2 (c4-26 / get-01
                               :ARG0 c4-3
                               :ARG1 (c4-24 / text)
                               :ARG2 (c4-8 / surgery-01
                                           :ARG1 c4-3
                                           :ARG2 (c4-20 / person
                                                        :ARG0-of (c4-6 / have-rel-role-91
                                                                       :ARG1 c4-3
                                                                       :ARG2 (c4-19 / practitioner
                                                                                    :mod (c4-27 / general))))
                                           :purpose (c4-44 / appointment-02
                                                           :ARG0 c4-3
                                                           :ARG1-of (c4-5 / local-02
                                                                          :ARG2-of c4-36
                                                                          :ARG1 c4-44
                                                                          :ARG3 (c4-35 / more))))
                               :time (c4-33 / then)))
       :snt4 (c4-4 / let-know-07
                   :ARG0 c4-3
                   :ARG1 c4-7
                   :mode imperative))

# ::snt still wait here.
# ::tokens ["still", "wait", "here", "."]
# ::lemmas ["still", "wait", "here", "."]
(c5-0 / wait-01
      :mod (c5-2 / still)
      :location (c5-1 / here))

# ::snt Ah nurse was lovely
# ::tokens ["Ah", "nurse", "was", "lovely"]
# ::lemmas ["ah", "nurse", "be", "lovely"]
(c6-2 / lovely
      :domain (c6-1 / nurse)
      :mod (c6-0 / ah
                 :mode expressive))

# ::snt No way to talk about the lovely doctor who injected you!?
# ::tokens ["No", "way", "to", "talk", "about", "the", "lovely", "doctor", "who", "injected", "you", "!", "?"]
# ::lemmas ["no", "way", "to", "talk", "about", "the", "lovely", "doctor", "who", "inject", "you", "!", "?"]
(c7-2 / way
      :manner-of (c7-3 / talk-01
                       :ARG1 (c7-0 / doctor
                                   :mod (c7-4 / lovely)
                                   :ARG0-of (c7-5 / inject-01
                                                  :ARG2 (c7-6 / you))))
      :polarity (c7-1 / amr-unknown)
      :polarity -)

# ::snt Had mine Sat and my arm aches considering how small the prick was
# ::tokens ["Had", "mine", "Sat", "and", "my", "arm", "aches", "considering", "how", "small", "the", "prick", "was"]
# ::lemmas ["have", "mine", "Sat", "and", "my", "arm", "ache", "consider", "how", "small", "the", "prick", "be"]
(c8-3 / and
      :op1 (c8-5 / have-03
                 :ARG0 (c8-9 / i
                             :part (c8-10 / arm))
                 :ARG1 (c8-6 / thing
                             :poss c8-9)
                 :time (c8-0 / date-entity
                             :weekday (c8-1 / saturday)))
      :op2 (c8-2 / ache-01
                 :ARG0 c8-10)
      :condition (c8-4 / consider-01
                       :ARG0 c8-9
                       :ARG1 c8-6
                       :degree-of (c8-8 / small
                                        :domain (c8-7 / prick))))

# ::snt Thanks lovely x
# ::tokens ["Thanks", "lovely", "x"]
# ::lemmas ["thank", "lovely", "x"]
(c9-0 / say-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-1 / thank-01
                  :ARG0 c9-3
                  :ARG1 (c9-4 / you)
                  :mod (c9-2 / lovely))
      :ARG2 c9-4)

# ::snt Hits us all differently, I guess... hope youre ok
# ::tokens ["Hits", "us", "all", "differently", ",", "I", "guess", "...", "hope", "you", "re", "ok"]
# ::lemmas ["hit", "we", "all", "differently", ",", "i", "guess", "...", "hope", "you", "re", "ok"]
(c11-8 / multi-sentence
       :snt1 (c11-6 / guess-01
                    :ARG0 (c11-7 / i)
                    :ARG1 (c11-0 / differ-02
                                 :ARG1 (c11-3 / it)
                                 :ARG3 (c11-2 / we
                                              :mod (c11-1 / all))))
       :snt2 (c11-4 / hope-01
                    :ARG0 c11-7
                    :ARG1 (c11-5 / okay-03
                                 :ARG1 (c11-9 / you))))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c12-1 / thank-01
       :ARG0 (c12-0 / i)
       :ARG1 (c12-2 / you))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c13-1 / thank-01
       :ARG0 (c13-0 / i)
       :ARG1 (c13-2 / you))

# ::snt Was expecting to feel a bit rubbish but Im absolutely fine... hope it goes the same for you
# ::tokens ["Was", "expecting", "to", "feel", "a", "bit", "rubbish", "but", "I", "m", "absolutely", "fine", "...", "hope", "it", "goes", "the", "same", "for", "you"]
# ::lemmas ["be", "expect", "to", "feel", "a", "bit", "rubbish", "but", "i", "m", "absolutely", "fine", "...", "hope", "it", "go", "the", "same", "for", "you"]
(c14-12 / multi-sentence
        :snt1 (c14-14 / expect-01
                      :ARG0 (c14-11 / i)
                      :ARG1 (c14-2 / feel-01
                                   :ARG0 c14-11
                                   :ARG1 (c14-8 / rubbish
                                                :degree (c14-10 / bit)))
                      :concession-of (c14-7 / fine-04
                                            :ARG1 (c14-3 / i)
                                            :degree (c14-1 / absolute)))
        :snt2 (c14-4 / hope-01
                     :ARG0 (c14-5 / i)
                     :ARG1 (c14-9 / go-09
                                  :ARG1 (c14-6 / it)
                                  :ARG2 (c14-0 / same-01)
                                  :beneficiary (c14-13 / you))))

# ::snt Had mine yesterday too just a bit of fuzzy head and arm ache
# ::tokens ["Had", "mine", "yesterday", "too", "just", "a", "bit", "of", "fuzzy", "head", "and", "arm", "ache"]
# ::lemmas ["have", "mine", "yesterday", "too", "just", "a", "bit", "of", "fuzzy", "head", "and", "arm", "ache"]
(c15-3 / have-03
       :ARG0 (c15-8 / i)
       :ARG1 (c15-1 / and
                    :op1 (c15-7 / head
                                :ARG1-of (c15-2 / fuzz-01)
                                :quant (c15-6 / bit
                                              :mod (c15-5 / just)))
                    :op2 (c15-10 / ache-01
                                 :ARG0 c15-8
                                 :ARG1 (c15-0 / arm)))
       :time (c15-9 / yesterday)
       :mod (c15-4 / too))

# ::snt Well done Claire
# ::tokens ["Well", "done", "Claire"]
# ::lemmas ["well", "do", "Claire"]
(c16-0 / say-01
       :ARG0 (c16-4 / i)
       :ARG1 (c16-1 / do-02
                    :ARG1-of (c16-2 / well-09))
       :ARG2 (c16-3 / person
                    :name (c16-5 / name
                                 :op1 "Claire")))

# ::snt Well done Claire
# ::tokens ["Well", "done", "Claire"]
# ::lemmas ["well", "do", "Claire"]
(c17-0 / say-01
       :ARG0 (c17-4 / i)
       :ARG1 (c17-1 / do-02
                    :ARG1-of (c17-2 / well-09))
       :ARG2 (c17-3 / person
                    :name (c17-5 / name
                                 :op1 "Claire")))

# ::snt Hope I feel the same on Saturday!
# ::tokens ["Hope", "I", "feel", "the", "same", "on", "Saturday", "!"]
# ::lemmas ["hope", "i", "feel", "the", "same", "on", "Saturday", "!"]
(c18-3 / hope-01
       :ARG0 (c18-6 / i)
       :ARG1 (c18-2 / feel-01
                    :ARG0 c18-6
                    :ARG1 (c18-4 / thing
                                 :ARG1-of (c18-0 / same-01))
                    :time (c18-1 / date-entity
                                 :weekday (c18-5 / saturday)))
       :mode expressive)
