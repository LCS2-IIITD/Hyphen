# ::snt Hi love too
# ::tokens ["Hi", "love", "too"]
# ::lemmas ["hi", "love", "too"]
(c1-2 / love-01
      :mod (c1-0 / hi)
      :mod (c1-1 / too))

# ::snt You guys are Far further on in the US than the UK (who pretend theyre leading the world because the UK is led by a lying clown called .) good on ya
# ::tokens ["You", "guys", "are", "Far", "further", "on", "in", "the", "US", "than", "the", "UK", "(", "who", "pretend", "they", "re", "leading", "the", "world", "because", "the", "UK", "is", "led", "by", "a", "lying", "clown", "called", ".", ")", "good", "on", "ya"]
# ::lemmas ["you", "guy", "be", "far", "far", "on", "in", "the", "US", "than", "the", "UK", "(", "who", "pretend", "they", "re", "lead", "the", "world", "because", "the", "UK", "be", "lead", "by", "a", "lie", "clown", "call", ".", ")", "good", "on", "ya"]
(c3-13 / be-located-at-91
       :ARG1 (c3-11 / guy
                    :mod (c3-17 / you))
       :ARG2 (c3-4 / country
                   :name (c3-16 / name
                                :op1 "US"))
       :ARG1-of (c3-7 / have-degree-91
                      :ARG2 (c3-3 / far)
                      :ARG3 (c3-15 / more)
                      :ARG4 (c3-0 / country
                                  :name (c3-10 / name
                                               :op1 "UK")
                                  :ARG0-of (c3-14 / pretend-01
                                                  :ARG1 (c3-12 / lead-02
                                                               :ARG0 c3-0
                                                               :ARG1 (c3-5 / world)
                                                               :ARG1-of (c3-8 / cause-01
                                                                              :ARG0 (c3-2 / clown
                                                                                          :ARG0-of (c3-1 / lie-08)
                                                                                          :ARG1-of (c3-6 / call-01
                                                                                                         :ARG2 (c3-9 / name
                                                                                                                     :op1 "Jesus")))
                                                                              :ARG0 c3-12))))))

# ::snt Now the only thing infectious here is that smile!
# ::tokens ["Now", "the", "only", "thing", "infectious", "here", "is", "that", "smile", "!"]
# ::lemmas ["now", "the", "only", "thing", "infectious", "here", "be", "that", "smile", "!"]
(c4-4 / infectious
      :domain (c4-0 / smile-01
                    :mod (c4-3 / that))
      :mod (c4-2 / only)
      :location (c4-1 / here)
      :time (c4-5 / now))

# ::snt The next two weeks is crucial, if you even see someone with the beer bug you might have to go on a ventilator.
# ::tokens ["The", "next", "two", "weeks", "is", "crucial", ",", "if", "you", "even", "see", "someone", "with", "the", "beer", "bug", "you", "might", "have", "to", "go", "on", "a", "ventilator", "."]
# ::lemmas ["The", "next", "two", "weeks", "be", "crucial", ",", "if", "you", "even", "see", "someone", "with", "the", "beer", "bug", "you", "might", "have", "to", "go", "on", "a", "ventilator", "."]
(c5-3 / crucial
      :domain (c5-9 / temporal-quantity
                    :unit (c5-4 / week)
                    :mod (c5-13 / next)
                    :quant 2)
      :ARG1-of (c5-0 / cause-01
                     :ARG0 (c5-12 / possible-01
                                  :ARG1 (c5-8 / obligate-01
                                              :ARG1 (c5-14 / you)
                                              :ARG2 (c5-10 / go-on-15
                                                           :ARG1 (c5-7 / ventilator)))
                                  :condition (c5-1 / see-01
                                                   :ARG0 c5-14
                                                   :ARG1 (c5-11 / someone
                                                                :ARG0-of (c5-5 / have-03
                                                                               :ARG1 (c5-6 / bug
                                                                                           :mod (c5-2 / beer))))
                                                   :mod (c5-15 / even)))))

# ::snt Congrats, I've started the journey yesterday. Second one is mid-April.
# ::tokens ["Congrats", ",", "I", "'ve", "started", "the", "journey", "yesterday", ".", "Second", "one", "is", "mid", "-", "April", "."]
# ::lemmas ["Congrats", ",", "i", "'ve", "start", "the", "journey", "yesterday", ".", "Second", "one", "be", "mid", "-", "April", "."]
(c6-7 / multi-sentence
      :snt1 (c6-2 / congratulate-01
                  :ARG1 (c6-6 / i)
                  :ARG2 (c6-0 / start-01
                              :ARG0 c6-6
                              :ARG1 (c6-5 / journey-01
                                          :ARG0 c6-6)
                              :time (c6-8 / yesterday)))
      :snt2 (c6-4 / be-temporally-at-91
                  :ARG1 (c6-1 / date-entity
                              :mod (c6-3 / mid
                                         :ARG2-of c6-4)
                              :month 4)
                  :li 2))

# ::snt In two weeks when the vaccine fully hits:.
# ::tokens ["In", "two", "weeks", "when", "the", "vaccine", "fully", "hits", ":", "."]
# ::lemmas ["in", "two", "weeks", "when", "the", "vaccine", "fully", "hit", ":", "."]
(c7-3 / hit-01
      :ARG0 (c7-4 / vaccine)
      :mod (c7-1 / full)
      :time (c7-0 / after
                  :op1 (c7-6 / now)
                  :quant (c7-5 / temporal-quantity
                               :unit (c7-2 / week)
                               :quant 2)))

# ::snt Yayy!! I got my first vaccine a couple days ago, now just waiting on the second.
# ::tokens ["Yayy", "!", "!", "I", "got", "my", "first", "vaccine", "a", "couple", "days", "ago", ",", "now", "just", "waiting", "on", "the", "second", "."]
# ::lemmas ["Yayy", "!", "!", "i", "get", "my", "first", "vaccine", "a", "couple", "days", "ago", ",", "now", "just", "wait", "on", "the", "second", "."]
(c8-14 / multi-sentence
       :snt1 (c8-16 / yay
                    :mode expressive)
       :snt2 (c8-3 / contrast-01
                   :ARG1 (c8-11 / get-01
                                :ARG0 (c8-13 / i)
                                :ARG1 (c8-6 / vaccine
                                            :ord (c8-7 / ordinal-entity
                                                       :value 1)
                                            :poss c8-13)
                                :time (c8-15 / before
                                             :op1 (c8-10 / now)
                                             :quant (c8-0 / couple
                                                          :op1 (c8-8 / temporal-quantity
                                                                     :unit (c8-1 / day)
                                                                     :quant 1))))
                   :ARG2 (c8-4 / wait-01
                               :ARG1 c8-13
                               :ARG2 (c8-2 / vaccine
                                           :ord (c8-5 / ordinal-entity
                                                      :value 2))
                               :time (c8-9 / now)
                               :mod (c8-12 / just))))

# ::snt I felt and continue to feel the same way!
# ::tokens ["I", "felt", "and", "continue", "to", "feel", "the", "same", "way", "!"]
# ::lemmas ["i", "feel", "and", "continue", "to", "feel", "the", "same", "way", "!"]
(c9-1 / and
      :op1 (c9-2 / feel-01
                 :ARG0 (c9-6 / i)
                 :ARG1 (c9-4 / way
                             :ARG1-of (c9-0 / same-01
                                            :ARG2 (c9-7 / way))))
      :op2 (c9-3 / continue-01
                 :ARG1 (c9-5 / feel-01
                             :ARG0 c9-6
                             :ARG1 c9-4)))

# ::snt You do understand that this vaccine does not create antibodies of covid, but spike proteins. And its immunosuppressive.Best wishes
# ::tokens ["You", "do", "understand", "that", "this", "vaccine", "does", "not", "create", "antibodies", "of", "covid", ",", "but", "spike", "proteins", ".", "And", "its", "immunosuppressive", ".", "Best", "wishes"]
# ::lemmas ["you", "do", "understand", "that", "this", "vaccine", "do", "not", "create", "antibody", "of", "covid", ",", "but", "spike", "protein", ".", "and", "its", "immunosuppressive", ".", "good", "wish"]
(c10-13 / multi-sentence
        :snt1 (c10-7 / understand-01
                     :ARG0 (c10-14 / you)
                     :ARG1 (c10-2 / contrast-01
                                  :ARG1 (c10-0 / create-01
                                               :ARG0 (c10-9 / vaccine
                                                            :mod (c10-10 / this))
                                               :ARG1 (c10-12 / immunosuppressive
                                                             :domain c10-9)
                                               :polarity -)
                                  :ARG2 (c10-8 / create-01
                                               :ARG0 c10-9
                                               :ARG1 (c10-5 / immunosuppressive
                                                            :domain c10-9))))
        :snt2 (c10-1 / and
                     :op2 (c10-11 / good-02
                                  :ARG1 (c10-3 / wish-01)
                                  :ARG2-of (c10-6 / have-degree-91
                                                  :ARG1 c10-3
                                                  :ARG3 (c10-4 / most)))))

# ::snt Im getting my second shot today. So excited!
# ::tokens ["I", "m", "getting", "my", "second", "shot", "today", ".", "So", "excited", "!"]
# ::lemmas ["i", "m", "get", "my", "second", "shot", "today", ".", "so", "excited", "!"]
(c12-7 / multi-sentence
       :snt1 (c12-4 / get-01
                    :ARG0 (c12-6 / i)
                    :ARG1 (c12-0 / shoot-02
                                 :ARG0 c12-6
                                 :ord (c12-2 / ordinal-entity
                                             :value 2))
                    :time (c12-3 / today))
       :snt2 (c12-8 / excite-01
                    :ARG0 (c12-1 / i)
                    :degree (c12-5 / so)
                    :mode expressive))

# ::snt Colgate
# ::tokens ["Colgate"]
# ::lemmas ["Colgate"]
(c13-1 / company
       :name (c13-0 / name
                    :op1 "Colgate"))

# ::snt Where is your mask?
# ::tokens ["Where", "is", "your", "mask", "?"]
# ::lemmas ["where", "be", "your", "mask", "?"]
(c14-1 / mask
       :location (c14-0 / amr-unknown)
       :poss (c14-2 / you))

# ::snt You got a plaster? I didnt get a plaster! I didnt even get a sticker! Not fair!
# ::tokens ["You", "got", "a", "plaster", "?", "I", "did", "nt", "get", "a", "plaster", "!", "I", "did", "nt", "even", "get", "a", "sticker", "!", "Not", "fair", "!"]
# ::lemmas ["you", "get", "a", "plaster", "?", "i", "do", "not", "get", "a", "plaster", "!", "i", "do", "not", "even", "get", "a", "sticker", "!", "not", "fair", "!"]
(c15-8 / multi-sentence
       :snt1 (c15-6 / get-01
                    :polarity (c15-2 / amr-unknown)
                    :ARG0 (c15-9 / you)
                    :ARG1 (c15-7 / plaster))
       :snt2 (c15-3 / get-01
                    :ARG0 (c15-5 / i)
                    :ARG1 c15-7
                    :polarity -)
       :snt3 (c15-1 / get-01
                    :ARG0 c15-5
                    :ARG1 (c15-0 / sticker)
                    :mod (c15-10 / even)
                    :polarity -)
       :snt4 (c15-4 / fair-01
                    :polarity -
                    :mode expressive))

# ::snt Hey it's good to hear it but don't forget precaution Good Luck
# ::tokens ["Hey", "it", "'s", "good", "to", "hear", "it", "but", "do", "n't", "forget", "precaution", "Good", "Luck"]
# ::lemmas ["hey", "it", "be", "good", "to", "hear", "it", "but", "do", "not", "forget", "precaution", "Good", "Luck"]
(c16-1 / contrast-01
       :ARG1 (c16-5 / good-02
                    :ARG1 (c16-2 / hear-01
                                 :ARG1 (c16-7 / it))
                    :mod (c16-6 / hey
                                :mode expressive))
       :ARG2 (c16-0 / forget-01
                    :ARG0 (c16-8 / you)
                    :ARG1 (c16-3 / precaution-02)
                    :mod (c16-4 / luck
                                :ARG1-of c16-5)
                    :polarity -
                    :mode imperative))

# ::snt Are you gonna do an antibody test in a month or so as well?
# ::tokens ["Are", "you", "gon", "na", "do", "an", "antibody", "test", "in", "a", "month", "or", "so", "as", "well", "?"]
# ::lemmas ["be", "you", "going", "to", "do", "an", "antibody", "test", "in", "a", "month", "or", "so", "as", "well", "?"]
(c17-6 / test-01
       :polarity (c17-2 / amr-unknown)
       :ARG0 (c17-9 / you)
       :ARG1 (c17-10 / antibody)
       :time (c17-4 / or
                    :op1 (c17-1 / after
                                :op1 (c17-8 / now)
                                :quant (c17-3 / temporal-quantity
                                              :unit (c17-7 / month)
                                              :quant 1))
                    :op2 (c17-0 / so))
       :mod (c17-5 / as-well))

# ::snt You win
# ::tokens ["You", "win"]
# ::lemmas ["you", "win"]
(c18-0 / win-01
       :ARG0 (c18-1 / you))

# ::snt Dumb you are
# ::tokens ["Dumb", "you", "are"]
# ::lemmas ["dumb", "you", "be"]
(c19-0 / dumb
       :domain (c19-1 / you))

# ::snt Savaccina Nance!!
# ::tokens ["Savaccina", "Nance", "!", "!"]
# ::lemmas ["Savaccina", "Nance", "!", "!"]
(c20-0 / person
       :name (c20-1 / name
                    :op1 "Savaccina"
                    :op2 "Nance")
       :mode expressive)

# ::snt Congrats! I still have a long wait, theyre vaccinating the over-70s now in my country (82-year old parents got their st on Fri). Working age folks will start getting their vaccinations in July probably.
# ::tokens ["Congrats", "!", "I", "still", "have", "a", "long", "wait", ",", "they", "re", "vaccinating", "the", "over-70s", "now", "in", "my", "country", "(", "82", "-", "year", "old", "parents", "got", "their", "st", "on", "Fri", ")", ".", "Working", "age", "folks", "will", "start", "getting", "their", "vaccinations", "in", "July", "probably", "."]
# ::lemmas ["Congrats", "!", "i", "still", "have", "a", "long", "wait", ",", "they", "re", "vaccinate", "the", "over-70", "now", "in", "my", "country", "(", "82", "-", "year", "old", "parent", "get", "their", "st", "on", "Fri", ")", ".", "work", "age", "folk", "will", "start", "get", "their", "vaccination", "in", "July", "probably", "."]
(c21-13 / multi-sentence
        :snt1 (c21-5 / congratulate-01
                     :ARG0 (c21-4 / i)
                     :mode expressive)
        :snt2 (c21-6 / wait-01
                     :ARG1 (c21-20 / i)
                     :mod (c21-17 / still)
                     :ARG1-of (c21-31 / long-03)
                     :ARG1-of (c21-0 / cause-01
                                     :ARG0 (c21-9 / vaccinate-01
                                                  :ARG0 (c21-11 / they)
                                                  :ARG1 (c21-33 / person
                                                                :age (c21-10 / over
                                                                             :op1 (c21-7 / temporal-quantity
                                                                                         :unit (c21-24 / year)
                                                                                         :quant 70))
                                                                :time (c21-14 / now)
                                                                :location (c21-8 / country
                                                                                 :poss c21-20)))))
        :snt3 (c21-27 / vaccinate-01
                      :ARG0 (c21-30 / person
                                    :ARG0-of (c21-29 / have-rel-role-91
                                                     :ARG2 (c21-19 / parent))
                                    :age (c21-15 / temporal-quantity
                                                 :unit (c21-25 / year)
                                                 :quant 82))
                      :ARG1 (c21-18 / person
                                    :age (c21-21 / temporal-quantity
                                                 :unit (c21-1 / year)
                                                 :quant 89))
                      :time (c21-2 / date-entity
                                   :weekday (c21-28 / friday)))
        :snt4 (c21-32 / start-01
                      :ARG0 (c21-23 / folk
                                    :age (c21-26 / temporal-quantity
                                                 :ARG3-of (c21-16 / work-01)))
                      :ARG1 (c21-12 / get-01
                                    :ARG0 c21-23
                                    :ARG1 (c21-22 / vaccinate-01
                                                  :ARG1 c21-23)
                                    :time (c21-3 / probable)
                                    :time c21-2
                                    :month 7)))

# ::snt yeah no thanks I'll just continue to ware a mask and wash my hands ......
# ::tokens ["yeah", "no", "thanks", "I", "'ll", "just", "continue", "to", "ware", "a", "mask", "and", "wash", "my", "hands", "......"]
# ::lemmas ["yeah", "no", "thanks", "i", "'ll", "just", "continue", "to", "ware", "a", "mask", "and", "wash", "my", "hand", "......"]
(c22-0 / and
       :op1 (c22-4 / have-concession-91
                   :ARG1 (c22-10 / yeah
                                 :mode expressive)
                   :ARG2 (c22-5 / thank-01
                                :ARG0 (c22-8 / i
                                             :part (c22-7 / hand))))
       :op2 (c22-1 / continue-01
                   :ARG0 c22-8
                   :ARG1 (c22-11 / and
                                 :op1 (c22-2 / wear-01
                                             :ARG0 c22-8
                                             :ARG1 (c22-9 / mask))
                                 :op2 (c22-3 / wash-01
                                             :ARG0 c22-8
                                             :ARG1 c22-7))
                   :mod (c22-6 / just)))

# ::snt Cutieeee
# ::tokens ["Cutieeee"]
# ::lemmas ["Cutieeee"]
(c23-0 / person
       :name (c23-1 / name
                    :op1 "Cutieeee"))

# ::snt Yay!
# ::tokens ["Yay", "!"]
# ::lemmas ["Yay", "!"]
(c24-0 / yay
       :mode expressive)

# ::snt Pfizer, Moderna
# ::tokens ["Pfizer", ",", "Moderna"]
# ::lemmas ["Pfizer", ",", "Moderna"]
(c25-3 / company
       :name (c25-1 / name
                    :op1 "Pfizer")
       :mod (c25-0 / company
                   :name (c25-2 / name
                                :op1 "Moderna")))

# ::snt I get my nd on Friday. Had absolutely no symptoms from the first dose
# ::tokens ["I", "get", "my", "nd", "on", "Friday", ".", "Had", "absolutely", "no", "symptoms", "from", "the", "first", "dose"]
# ::lemmas ["i", "get", "my", "nd", "on", "Friday", ".", "have", "absolutely", "no", "symptom", "from", "the", "first", "dose"]
(c26-12 / multi-sentence
        :snt1 (c26-10 / get-01
                      :ARG0 (c26-11 / i)
                      :ARG1 (c26-0 / dosage
                                   :poss c26-11)
                      :time (c26-6 / date-entity
                                   :weekday (c26-3 / friday)))
        :snt2 (c26-7 / have-03
                     :ARG0 (c26-8 / i)
                     :ARG1 (c26-1 / symptom
                                  :ARG1-of (c26-4 / cause-01
                                                  :ARG0 (c26-5 / dose
                                                               :ord (c26-9 / ordinal-entity
                                                                           :value 1))))
                     :mod (c26-2 / absolute)
                     :polarity -))

# ::snt Love that multimillion dollar smile
# ::tokens ["Love", "that", "multimillion", "dollar", "smile"]
# ::lemmas ["love", "that", "multimillion", "dollar", "smile"]
(c27-4 / love-01
       :ARG1 (c27-0 / smile-01
                    :ARG1-of (c27-3 / cost-01
                                    :ARG2 (c27-5 / multiple
                                                 :op1 (c27-2 / monetary-quantity
                                                             :unit (c27-1 / dollar)
                                                             :quant 1000000000)))))

# ::snt Stay well .
# ::tokens ["Stay", "well", "."]
# ::lemmas ["stay", "well", "."]
(c29-0 / stay-01
       :ARG1 (c29-2 / you)
       :ARG3 (c29-1 / well-09
                    :ARG1 c29-2))

# ::snt Yay, Im so glad for you!
# ::tokens ["Yay", ",", "I", "m", "so", "glad", "for", "you", "!"]
# ::lemmas ["Yay", ",", "i", "m", "so", "glad", "for", "you", "!"]
(c30-1 / glad-02
       :ARG0 (c30-3 / you)
       :ARG1 (c30-2 / i)
       :degree (c30-0 / so)
       :mod (c30-4 / yay))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c31-0 / congratulate-01
       :mode expressive)

# ::snt Wow good news. Got my first last weds, have to wait until June for nd. First gave me a strong fever during the first night afterwards, some arm ache for a few days. Don't forget it's circa weeks to build the immunity.
# ::tokens ["Wow", "good", "news", ".", "Got", "my", "first", "last", "weds", ",", "have", "to", "wait", "until", "June", "for", "nd", ".", "First", "gave", "me", "a", "strong", "fever", "during", "the", "first", "night", "afterwards", ",", "some", "arm", "ache", "for", "a", "few", "days", ".", "Do", "n't", "forget", "it", "'s", "circa", "weeks", "to", "build", "the", "immunity", "."]
# ::lemmas ["wow", "good", "news", ".", "got", "my", "first", "last", "wed", ",", "have", "to", "wait", "until", "June", "for", "nd", ".", "First", "give", "i", "a", "strong", "fever", "during", "the", "first", "night", "afterwards", ",", "some", "arm", "ache", "for", "a", "few", "days", ".", "do", "not", "forget", "it", "be", "circa", "weeks", "to", "build", "the", "immunity", "."]
(c32-14 / multi-sentence
        :snt1 (c32-15 / news
                      :ARG1-of (c32-13 / good-02)
                      :mod (c32-10 / wow
                                   :mode expressive))
        :snt2 (c32-28 / and
                      :op1 (c32-26 / get-01
                                   :ARG0 (c32-7 / i)
                                   :ARG1 (c32-17 / weds
                                                 :ord (c32-11 / ordinal-entity
                                                              :value 1)
                                                 :poss c32-7))
                      :op2 (c32-30 / obligate-01
                                   :ARG1 c32-7
                                   :ARG2 (c32-6 / wait-01
                                                :ARG1 c32-7
                                                :ARG2 (c32-0 / die-01
                                                             :ARG1 c32-7)
                                                :time (c32-31 / until
                                                              :op1 (c32-25 / date-entity
                                                                           :month 6)))))
        :snt3 (c32-16 / and
                      :op1 (c32-2 / give-01
                                  :ARG0 (c32-33 / person
                                                :name (c32-5 / name
                                                             :op1 "first"))
                                  :ARG1 (c32-29 / fever
                                                :ARG1-of (c32-18 / strong-02))
                                  :ARG2 (c32-20 / i)
                                  :time (c32-1 / afterwards
                                               :op1 (c32-23 / night
                                                            :ord (c32-8 / ordinal-entity
                                                                        :value 1))))
                      :op2 (c32-34 / ache-01
                                   :ARG0 (c32-4 / arm)
                                   :duration (c32-22 / few
                                                     :op1 (c32-12 / temporal-quantity
                                                                  :unit (c32-19 / day)
                                                                  :quant 1))))
        :snt4 (c32-24 / forget-01
                      :ARG0 (c32-27 / you)
                      :ARG1 (c32-32 / build-02
                                    :ARG0 c32-27
                                    :ARG1 (c32-21 / immune-02)
                                    :time (c32-9 / circa
                                                 :op1 c32-12
                                                 :unit (c32-3 / week)
                                                 :quant 1))
                      :polarity -
                      :mode imperative))

# ::snt You have a great smile.
# ::tokens ["You", "have", "a", "great", "smile", "."]
# ::lemmas ["you", "have", "a", "great", "smile", "."]
(c33-1 / have-03
       :ARG0 (c33-2 / you)
       :ARG1 (c33-0 / smile-01
                    :ARG0 c33-2
                    :mod (c33-3 / great)))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c34-0 / congratulate-01
       :mode expressive)

# ::snt you might be one of the first Egyptians to get vaccinated Right now you can get a reservation, but no news about when we'll actually get it as far as I know
# ::tokens ["you", "might", "be", "one", "of", "the", "first", "Egyptians", "to", "get", "vaccinated", "Right", "now", "you", "can", "get", "a", "reservation", ",", "but", "no", "news", "about", "when", "we", "'ll", "actually", "get", "it", "as", "far", "as", "I", "know"]
# ::lemmas ["you", "might", "be", "one", "of", "the", "first", "Egyptians", "to", "get", "vaccinate", "right", "now", "you", "can", "get", "a", "reservation", ",", "but", "no", "news", "about", "when", "we", "'ll", "actually", "get", "it", "as", "far", "as", "i", "know"]
(c36-3 / contrast-01
       :ARG1 (c36-20 / possible-01
                     :ARG1 (c36-2 / include-91
                                  :ARG1 (c36-17 / you)
                                  :ARG2 (c36-19 / person
                                                :mod (c36-0 / country
                                                            :name (c36-11 / name
                                                                          :op1 "Egypt"))
                                                :ord (c36-7 / ordinal-entity
                                                            :value 1)
                                                :ARG1-of (c36-6 / vaccinate-01))))
       :ARG2 (c36-13 / possible-01
                     :ARG1 (c36-10 / get-01
                                   :ARG0 c36-17
                                   :ARG1 (c36-9 / reservation))
                     :time (c36-1 / now
                                  :mod (c36-5 / right)))
       :ARG1 c36-3
       :ARG2 (c36-15 / news
                     :topic (c36-8 / time
                                   :time-of (c36-16 / get-01
                                                    :ARG0 (c36-4 / we)
                                                    :ARG1 c36-9
                                                    :ARG1-of (c36-18 / actual-02)))
                     :concession (c36-12 / as-far-as
                                         :op1 (c36-21 / know-01
                                                      :ARG0 (c36-14 / i)))
                     :polarity -))

# ::snt Don't forget your mask though. Still need that for a few months at least
# ::tokens ["Do", "n't", "forget", "your", "mask", "though", ".", "Still", "need", "that", "for", "a", "few", "months", "at", "least"]
# ::lemmas ["do", "not", "forget", "your", "mask", "though", ".", "still", "need", "that", "for", "a", "few", "months", "at", "least"]
(c37-8 / multi-sentence
       :snt1 (c37-4 / have-concession-91
                    :ARG1 (c37-2 / forget-01
                                 :ARG0 (c37-10 / you)
                                 :ARG1 (c37-3 / mask
                                              :poss c37-10)
                                 :polarity -
                                 :mode imperative))
       :snt2 (c37-9 / need-01
                    :ARG0 (c37-11 / you)
                    :ARG1 c37-3
                    :mod (c37-0 / still)
                    :duration (c37-1 / at-least
                                     :op1 (c37-6 / few
                                                 :op1 (c37-7 / temporal-quantity
                                                             :unit (c37-5 / month)
                                                             :quant 1)))))

# ::snt i wish
# ::tokens ["i", "wish"]
# ::lemmas ["i", "wish"]
(c41-0 / wish-01
       :ARG0 (c41-1 / i))

# ::snt [NEW ON CHART] - Chill Now featured on Spotify Electro Lounge Playlist.
# ::tokens ["[", "NEW", "ON", "CHART", "]", "-", "Chill", "Now", "featured", "on", "Spotify", "Electro", "Lounge", "Playlist", "."]
# ::lemmas ["[", "NEW", "ON", "CHART", "]", "-", "Chill", "Now", "feature", "on", "Spotify", "Electro", "Lounge", "Playlist", "."]
(c42-1 / feature-01
       :ARG1 (c42-6 / music
                    :name (c42-7 / name
                                 :op1 "Chill"
                                 :op2 "Now"))
       :ARG2 (c42-2 / music
                    :name (c42-4 / name
                                 :op1 "Spotify"
                                 :op2 "Electro"
                                 :op3 "Lounge"
                                 :op4 "Playlist"))
       :ARG1-of (c42-3 / new-01
                       :location (c42-5 / publication
                                        :name (c42-0 / name
                                                     :op1 "ChART"))))

# ::snt Why don't ants ever get sick?
# ::tokens ["Why", "do", "n't", "ants", "ever", "get", "sick", "?"]
# ::lemmas ["why", "do", "not", "ant", "ever", "get", "sick", "?"]
(c43-2 / cause-01
       :ARG0 (c43-1 / amr-unknown)
       :ARG1 (c43-0 / sick-05
                    :ARG1 (c43-3 / ant)
                    :time (c43-4 / ever)
                    :polarity -))

# ::snt Pfizer or AZ?
# ::tokens ["Pfizer", "or", "AZ", "?"]
# ::lemmas ["Pfizer", "or", "AZ", "?"]
(c45-1 / amr-choice
       :op1 (c45-2 / company
                   :name (c45-4 / name
                                :op1 "Pfizer"))
       :op2 (c45-0 / state
                   :name (c45-3 / name
                                :op1 "AZ")))

# ::snt Fantastic!I got my first dose today. April th, I'll be a part of the club!
# ::tokens ["Fantastic!I", "got", "my", "first", "dose", "today", ".", "April", "th", ",", "I", "'ll", "be", "a", "part", "of", "the", "club", "!"]
# ::lemmas ["Fantastic!I", "get", "my", "first", "dose", "today", ".", "April", "th", ",", "i", "'ll", "be", "a", "part", "of", "the", "club", "!"]
(c46-9 / multi-sentence
       :snt1 (c46-1 / fantastic-02
                    :ARG1 (c46-0 / dose-01
                                 :ARG1 (c46-8 / i)
                                 :ord (c46-5 / ordinal-entity
                                             :value 1)
                                 :time (c46-6 / today))
                    :mode expressive)
       :snt2 (c46-7 / participate-01
                    :ARG0 (c46-4 / i)
                    :ARG1 (c46-2 / club)
                    :time (c46-3 / date-entity
                                 :month 4
                                 :day 14)))

# ::snt Every time I see a picture with your lovely smile, I admire your beautiful teeth! Im so jealous
# ::tokens ["Every", "time", "I", "see", "a", "picture", "with", "your", "lovely", "smile", ",", "I", "admire", "your", "beautiful", "teeth", "!", "I", "m", "so", "jealous"]
# ::lemmas ["every", "time", "i", "see", "a", "picture", "with", "your", "lovely", "smile", ",", "i", "admire", "your", "beautiful", "tooth", "!", "i", "m", "so", "jealous"]
(c47-11 / multi-sentence
        :snt1 (c47-1 / admire-01
                     :ARG0 (c47-10 / i)
                     :ARG1 (c47-4 / tooth
                                  :ARG1-of (c47-8 / beautiful-02)
                                  :part-of (c47-13 / you))
                     :frequency (c47-5 / rate-entity-91
                                       :ARG4 (c47-0 / see-01
                                                    :ARG0 c47-10
                                                    :ARG1 (c47-6 / picture-01
                                                                 :ARG1 (c47-9 / smile-01
                                                                              :ARG0 c47-13
                                                                              :mod (c47-7 / lovely))))))
        :snt2 (c47-12 / jealous-02
                      :ARG0 (c47-2 / i)
                      :degree (c47-3 / so)))

# ::snt You should be well into the IgG switch by now, with your B-cells a-humming in the background.
# ::tokens ["You", "should", "be", "well", "into", "the", "IgG", "switch", "by", "now", ",", "with", "your", "B", "-", "cells", "a", "-", "humming", "in", "the", "background", "."]
# ::lemmas ["you", "should", "be", "well", "into", "the", "IgG", "switch", "by", "now", ",", "with", "your", "b", "-", "cell", "a", "-", "humming", "in", "the", "background", "."]
(c48-7 / recommend-01
       :ARG1 (c48-10 / be-destined-for-91
                     :ARG1 (c48-12 / you
                                   :part (c48-2 / cell
                                                :mod (c48-6 / variable
                                                            :name (c48-11 / name
                                                                          :op1 "B"))))
                     :ARG2 (c48-0 / switch-01
                                  :ARG1 (c48-8 / gene
                                               :name c48-11
                                               :op1 "IgG")))
       :degree (c48-3 / well)
       :time (c48-1 / by
                    :op1 (c48-9 / now))
       :manner (c48-5 / humming-01
                      :ARG0 (c48-4 / background)
                      :ARG1 c48-2))

# ::snt I love your smile. Pure happiness! I get my second shot next week!
# ::tokens ["I", "love", "your", "smile", ".", "Pure", "happiness", "!", "I", "get", "my", "second", "shot", "next", "week", "!"]
# ::lemmas ["i", "love", "your", "smile", ".", "pure", "happiness", "!", "i", "get", "my", "second", "shot", "next", "week", "!"]
(c49-10 / multi-sentence
        :snt1 (c49-5 / love-01
                     :ARG0 (c49-9 / i)
                     :ARG1 (c49-0 / smile-01
                                  :ARG0 (c49-12 / you)))
        :snt2 (c49-2 / happiness
                     :ARG1-of (c49-6 / pure-02)
                     :domain (c49-7 / get-01
                                    :ARG0 (c49-3 / i)
                                    :ARG1 (c49-8 / shoot-02
                                                 :ARG0 c49-3
                                                 :ord (c49-4 / ordinal-entity
                                                             :value 2))
                                    :time (c49-1 / week
                                                 :mod (c49-11 / next)))
                     :mode expressive))

# ::snt Just got my first today (Pfizer) and no issues thus far
# ::tokens ["Just", "got", "my", "first", "today", "(", "Pfizer", ")", "and", "no", "issues", "thus", "far"]
# ::lemmas ["just", "get", "my", "first", "today", "(", "Pfizer", ")", "and", "no", "issue", "thus", "far"]
(c50-0 / and
       :op1 (c50-6 / get-01
                   :ARG0 (c50-8 / i)
                   :ARG1 (c50-4 / thing
                                :ord (c50-3 / ordinal-entity
                                            :value 1)
                                :ARG1-of (c50-9 / mean-01
                                                :ARG2 (c50-5 / product
                                                             :name (c50-10 / name
                                                                           :op1 "Pfizer"))))
                   :time (c50-1 / today)
                   :mod (c50-7 / just))
       :op2 (c50-2 / issue-02
                   :time (c50-11 / thus-far)
                   :polarity -))
