# ::snt yes! i work at a nursing home, so all staff were offered it
# ::tokens ["yes", "!", "i", "work", "at", "a", "nursing", "home", ",", "so", "all", "staff", "were", "offered", "it"]
# ::lemmas ["yes", "!", "i", "work", "at", "a", "nursing", "home", ",", "so", "all", "staff", "be", "offer", "it"]
(c1-8 / multi-sentence
      :snt1 (c1-10 / yes
                   :mode expressive)
      :snt2 (c1-2 / cause-01
                  :ARG0 (c1-3 / work-01
                              :ARG0 (c1-7 / i)
                              :ARG2 (c1-4 / home
                                          :mod (c1-9 / nurse-01)))
                  :ARG1 (c1-6 / offer-01
                              :ARG1 (c1-5 / it)
                              :ARG3 (c1-0 / staff
                                          :mod (c1-1 / all)))))

# ::snt If you dont mind me asking, but how? Like is it available for the general public now? Or do you work in like the medical field? Just curious
# ::tokens ["If", "you", "do", "nt", "mind", "me", "asking", ",", "but", "how", "?", "Like", "is", "it", "available", "for", "the", "general", "public", "now", "?", "Or", "do", "you", "work", "in", "like", "the", "medical", "field", "?", "Just", "curious"]
# ::lemmas ["if", "you", "do", "not", "mind", "i", "ask", ",", "but", "how", "?", "like", "be", "it", "available", "for", "the", "general", "public", "now", "?", "or", "do", "you", "work", "in", "like", "the", "medical", "field", "?", "just", "curious"]
(c2-15 / multi-sentence
       :snt1 (c2-7 / contrast-01
                   :ARG1 (c2-6 / mind-01
                               :ARG0 (c2-16 / you)
                               :ARG1 (c2-3 / ask-01
                                           :ARG0 (c2-14 / i)
                                           :ARG2 c2-16)
                               :polarity -)
                   :ARG2 (c2-9 / have-manner-91
                               :ARG1 c2-3
                               :ARG2 (c2-17 / amr-unknown)))
       :snt2 (c2-11 / or
                    :op2 (c2-8 / work-01
                               :ARG0 (c2-4 / you)
                               :location (c2-12 / resemble-01
                                                :ARG2 (c2-5 / field
                                                            :mod (c2-10 / medicine))))
                    :op3 (c2-0 / curious-01
                               :ARG1 (c2-1 / you)
                               :mod (c2-13 / just))
                    :polarity (c2-2 / amr-unknown)))

# ::snt ty bby
# ::tokens ["ty", "bby"]
# ::lemmas ["ty", "bby"]
(c4-0 / person
      :name (c4-1 / name
                  :op1 "ty"
                  :op2 "bby"))

# ::snt thanks dea ilyyy
# ::tokens ["thanks", "dea", "ilyyy"]
# ::lemmas ["thank", "dea", "ilyyy"]
(c5-1 / thank-01
      :ARG0 (c5-0 / i)
      :ARG1 (c5-2 / person
                  :name (c5-3 / name
                              :op1 "dea")))

# ::snt tysm amanda ilyy
# ::tokens ["tysm", "amanda", "ilyy"]
# ::lemmas ["tysm", "amanda", "ilyy"]
(c6-0 / person
      :name (c6-1 / name
                  :op1 "tysm"
                  :op2 "anda"))

# ::snt ily katie
# ::tokens ["ily", "katie"]
# ::lemmas ["ily", "katie"]
(c7-0 / person
      :name (c7-1 / name
                  :op1 "ily"
                  :op2 "Katie"))

# ::snt love uuuu
# ::tokens ["love", "uuuu"]
# ::lemmas ["love", "uuuu"]
(c8-2 / love-01
      :ARG0 (c8-0 / i)
      :ARG1 (c8-1 / you))

# ::snt yayyy mik!! happy for you
# ::tokens ["yayyy", "mik", "!", "!", "happy", "for", "you"]
# ::lemmas ["yayyy", "mik", "!", "!", "happy", "for", "you"]
(c9-3 / multi-sentence
      :snt1 (c9-0 / say-01
                  :ARG1 (c9-5 / yay)
                  :ARG2 (c9-2 / person
                              :name (c9-4 / name
                                          :op1 "Mik")))
      :snt2 (c9-1 / happy-01
                  :ARG0 (c9-6 / you)
                  :ARG1 c9-2))

# ::snt yay!! happy for you
# ::tokens ["yay", "!", "!", "happy", "for", "you"]
# ::lemmas ["yay", "!", "!", "happy", "for", "you"]
(c10-0 / multi-sentence
       :snt1 (c10-1 / yay)
       :snt2 (c10-3 / happy-01
                    :ARG1 (c10-2 / you)))

# ::snt omg, yay!!!
# ::tokens ["omg", ",", "yay", "!", "!", "!"]
# ::lemmas ["omg", ",", "yay", "!", "!", "!"]
(c11-1 / yay
       :mod (c11-0 / oh-my-god
                   :mode expressive))

# ::snt thank youuu ily
# ::tokens ["thank", "youuu", "ily"]
# ::lemmas ["thank", "youuu", "ily"]
(c13-0 / thank-01
       :ARG1 (c13-1 / you)
       :mod (c13-2 / easy))
