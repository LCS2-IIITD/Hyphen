# ::snt congrats!!
# ::tokens ["congrats", "!", "!"]
# ::lemmas ["congrat", "!", "!"]
(c1-0 / congratulate-01
      :mode expressive)

# ::snt so true mwah mwah
# ::tokens ["so", "true", "mwah", "mwah"]
# ::lemmas ["so", "true", "mwah", "mwah"]
(c2-2 / true-01
      :degree (c2-0 / so)
      :mod (c2-1 / mwah)
      :mod (c2-3 / mwah))

# ::snt cool now u can come over and smooch me
# ::tokens ["cool", "now", "u", "can", "come", "over", "and", "smooch", "me"]
# ::lemmas ["cool", "now", "u", "can", "come", "over", "and", "smooch", "i"]
(c3-3 / cool-04
      :ARG1 (c3-6 / possible-01
                  :ARG1 (c3-2 / and
                              :op1 (c3-0 / come-01
                                         :ARG1 (c3-8 / you)
                                         :ARG4 (c3-5 / over))
                              :op2 (c3-1 / smooch-01
                                         :ARG0 c3-8
                                         :ARG1 (c3-4 / i))))
      :time (c3-7 / now))

# ::snt Poggg my mom is getting hers rn
# ::tokens ["Poggg", "my", "mom", "is", "getting", "hers", "rn"]
# ::lemmas ["Poggg", "my", "mom", "be", "get", "hers", "rn"]
(c4-4 / get-01
      :ARG0 (c4-5 / person
                  :ARG0-of (c4-1 / have-rel-role-91
                                 :ARG1 (c4-0 / i)
                                 :ARG2 (c4-6 / mom)))
      :ARG1 (c4-3 / thing
                  :poss c4-5)
      :mod (c4-2 / poggg
                 :mode expressive))

# ::snt lets go
# ::tokens ["lets", "go"]
# ::lemmas ["let", "go"]
(c5-0 / go-02
      :ARG0 (c5-1 / we)
      :mode imperative)

# ::snt AYO
# ::tokens ["AYO"]
# ::lemmas ["AYO"]
(c6-0 / oops
      :mode expressive)

# ::snt POG THATS DOPE
# ::tokens ["POG", "THATS", "DOPE"]
# ::lemmas ["POG", "THATS", "DOPE"]
(c7-0 / hope-01
      :ARG1 (c7-1 / that))
