# ::snt She said over budget by k so that thing could have been over m
# ::tokens ["She", "said", "over", "budget", "by", "k", "so", "that", "thing", "could", "have", "been", "over", "m"]
# ::lemmas ["she", "say", "over", "budget", "by", "k", "so", "that", "thing", "could", "have", "be", "over", "m"]
(c1-1 / cause-01
      :ARG0 (c1-0 / say-01
                  :ARG0 (c1-5 / she)
                  :ARG1 (c1-3 / over-
                              :ARG1 (c1-4 / thing
                                          :mod (c1-2 / that)))
                  :manner (c1-7 / k))
      :ARG1 (c1-6 / possible-01
                  :ARG1 c1-3
                  :ARG1 c1-4))

# ::snt Wow can I be ur friend
# ::tokens ["Wow", "can", "I", "be", "ur", "friend"]
# ::lemmas ["wow", "can", "i", "be", "ur", "friend"]
(c2-4 / possible-01
      :ARG1 (c2-3 / have-rel-role-91
                  :ARG0 (c2-1 / i)
                  :ARG1 (c2-5 / you)
                  :ARG2 (c2-0 / friend))
      :mod (c2-2 / wow
                 :mode expressive))

# ::snt Congratulations bestie!!
# ::tokens ["Congratulations", "bestie", "!", "!"]
# ::lemmas ["congratulation", "bestie", "!", "!"]
(c3-0 / congratulate-01
      :ARG1 (c3-4 / you
                  :ARG1-of (c3-1 / have-degree-91
                                 :ARG2 (c3-2 / good-02
                                             :ARG1 c3-0)
                                 :ARG3 (c3-3 / most))))

# ::snt Worth it
# ::tokens ["Worth", "it"]
# ::lemmas ["worth", "it"]
(c4-0 / worth-02
      :ARG2 (c4-1 / it))

# ::snt Excuse my ignorance, but what would exactly make a closet such an expensive purchase?
# ::tokens ["Excuse", "my", "ignorance", ",", "but", "what", "would", "exactly", "make", "a", "closet", "such", "an", "expensive", "purchase", "?"]
# ::lemmas ["excuse", "my", "ignorance", ",", "but", "what", "would", "exactly", "make", "a", "closet", "such", "an", "expensive", "purchase", "?"]
(c5-3 / contrast-01
      :ARG1 (c5-11 / excuse-01
                   :ARG0 (c5-10 / you)
                   :ARG1 (c5-8 / i)
                   :ARG2 (c5-4 / ignorance
                               :poss c5-8)
                   :mode imperative)
      :ARG2 (c5-9 / make-02
                  :ARG0 (c5-2 / amr-unknown
                              :mod (c5-5 / exact))
                  :ARG1 (c5-7 / purchase-01
                              :ARG1 (c5-0 / closet)
                              :mod (c5-6 / expensive
                                         :degree (c5-1 / such)))))

# ::snt Good to hear, isn't litterbox training fun?!
# ::tokens ["Good", "to", "hear", ",", "is", "n't", "litterbox", "training", "fun", "?", "!"]
# ::lemmas ["good", "to", "hear", ",", "be", "not", "litterbox", "training", "fun", "?", "!"]
(c6-5 / good-02
      :ARG1 (c6-1 / hear-01
                  :ARG1 (c6-0 / fun-01
                              :ARG1 (c6-2 / train-01
                                          :ARG1 (c6-6 / box
                                                      :purpose (c6-4 / litter)))
                              :ARG1-of (c6-3 / request-confirmation-91))))

# ::snt Your new closet k? WTF I need to se that!
# ::tokens ["Your", "new", "closet", "k", "?", "WTF", "I", "need", "to", "se", "that", "!"]
# ::lemmas ["your", "new", "closet", "k", "?", "WTF", "i", "need", "to", "se", "that", "!"]
(c7-7 / multi-sentence
      :snt1 (c7-1 / amr-unknown
                  :domain (c7-3 / closet
                                :poss (c7-9 / you)
                                :ARG1-of (c7-8 / new-01)))
      :snt2 (c7-5 / need-01
                  :ARG0 (c7-6 / i)
                  :ARG1 (c7-0 / se-01
                              :ARG0 c7-6
                              :ARG1 (c7-4 / that))
                  :mod (c7-2 / fuck
                             :mode expressive)))

# ::snt You need to litter box train your little meow! Back to sleep sounds good though
# ::tokens ["You", "need", "to", "litter", "box", "train", "your", "little", "meow", "!", "Back", "to", "sleep", "sounds", "good", "though"]
# ::lemmas ["you", "need", "to", "litter", "box", "train", "your", "little", "meow", "!", "back", "to", "sleep", "sound", "good", "though"]
(c8-8 / multi-sentence
      :snt1 (c8-9 / need-01
                  :ARG0 (c8-10 / you)
                  :ARG1 (c8-3 / train-01
                              :ARG0 c8-10
                              :ARG1 (c8-1 / meow-01
                                          :ARG0 (c8-11 / you)
                                          :mod (c8-4 / little))
                              :ARG2 c8-11))
      :snt2 (c8-0 / sound-01
                  :ARG1 (c8-6 / back-02
                              :destination (c8-7 / sleep-01
                                                 :ARG0 c8-11))
                  :ARG2 (c8-5 / good-02)
                  :ARG1-of (c8-2 / have-concession-91)))

# ::snt The weekend's starting early it sounds
# ::tokens ["The", "weekend", "'s", "starting", "early", "it", "sounds"]
# ::lemmas ["the", "weekend", "'s", "start", "early", "it", "sound"]
(c9-0 / start-01
      :ARG1 (c9-2 / weekend)
      :ARG2 (c9-3 / early
                  :op1 (c9-1 / sound-01)))

# ::snt Starting to get the chills and aches as well from shot , but that is where our similarities end. Also, you guys should just make a youtube series where Sypher does IRL projects. Like lighting candles, changing tires; building closets. What could go wrong?
# ::tokens ["Starting", "to", "get", "the", "chills", "and", "aches", "as", "well", "from", "shot", ",", "but", "that", "is", "where", "our", "similarities", "end", ".", "Also", ",", "you", "guys", "should", "just", "make", "a", "youtube", "series", "where", "Sypher", "does", "IRL", "projects", ".", "Like", "lighting", "candles", ",", "changing", "tires", ";", "building", "closets", ".", "What", "could", "go", "wrong", "?"]
# ::lemmas ["start", "to", "get", "the", "chill", "and", "ache", "as", "well", "from", "shot", ",", "but", "that", "be", "where", "our", "similarity", "end", ".", "also", ",", "you", "guy", "should", "just", "make", "a", "youtube", "series", "where", "Sypher", "do", "IRL", "project", ".", "like", "lighting", "candle", ",", "change", "tire", ";", "building", "closet", ".", "what", "could", "go", "wrong", "?"]
(c10-15 / multi-sentence
        :snt1 (c10-6 / contrast-01
                     :ARG1 (c10-19 / start-01
                                   :ARG1 (c10-13 / get-01
                                                 :ARG1 (c10-29 / and
                                                               :op1 (c10-0 / chill-01)
                                                               :op2 (c10-17 / ache-01))
                                                 :source (c10-35 / shot)
                                                 :mod (c10-1 / as-well)))
                     :ARG2 (c10-18 / end-01
                                   :ARG1 (c10-12 / resemble-01
                                                 :ARG1 (c10-7 / we))
                                   :location (c10-11 / that)))
        :snt2 (c10-9 / recommend-01
                     :ARG1 (c10-30 / make-01
                                   :ARG0 (c10-28 / guy
                                                 :mod (c10-27 / you))
                                   :ARG1 (c10-24 / series
                                                 :medium (c10-36 / publication
                                                                 :name (c10-16 / name
                                                                               :op1 "YouTube"))
                                                 :medium-of (c10-2 / do-02
                                                                   :ARG0 (c10-31 / person
                                                                                 :name (c10-5 / name
                                                                                              :op1 "Sypher"))
                                                                   :ARG1 (c10-23 / project
                                                                                 :ARG1-of (c10-14 / RL-00)
                                                                                 :example (c10-37 / and
                                                                                                  :op1 (c10-33 / light-04
                                                                                                               :ARG0 c10-31
                                                                                                               :ARG1 (c10-10 / candle))
                                                                                                  :op2 (c10-25 / change-01
                                                                                                               :ARG0 c10-31
                                                                                                               :ARG1 (c10-8 / tire))
                                                                                                  :op3 (c10-21 / closet
                                                                                                               :location-of (c10-34 / build-01))))))
                                   :mod (c10-32 / just))
                     :mod (c10-4 / also))
        :snt3 (c10-22 / possible-01
                      :ARG1 (c10-3 / go-08
                                   :ARG1 (c10-20 / wrong-02
                                                 :ARG1 (c10-26 / amr-unknown)))))

# ::snt if you're going back to sleep it better be on the couch and not on cat pee
# ::tokens ["if", "you", "'re", "going", "back", "to", "sleep", "it", "better", "be", "on", "the", "couch", "and", "not", "on", "cat", "pee"]
# ::lemmas ["if", "you", "be", "go", "back", "to", "sleep", "it", "well", "be", "on", "the", "couch", "and", "not", "on", "cat", "pee"]
(c11-5 / recommend-01
       :ARG1 (c11-3 / and
                    :op1 (c11-7 / be-located-at-91
                                :ARG1 (c11-9 / you)
                                :ARG2 (c11-4 / couch))
                    :op2 (c11-1 / be-located-at-91
                                :ARG1 c11-9
                                :ARG2 (c11-8 / pee-01
                                             :ARG0 (c11-0 / cat))
                                :polarity -))
       :condition (c11-6 / go-back-19
                         :ARG1 c11-9
                         :ARG2 (c11-2 / sleep-01
                                      :ARG0 c11-9)))

# ::snt Those trans dimensional portals are expensive...
# ::tokens ["Those", "trans", "dimensional", "portals", "are", "expensive", "..."]
# ::lemmas ["those", "trans", "dimensional", "portal", "be", "expensive", "..."]
(c12-3 / expensive
       :domain (c12-1 / portal
                      :mod (c12-2 / transdimensional)
                      :mod (c12-0 / that)))

# ::snt you only live once
# ::tokens ["you", "only", "live", "once"]
# ::lemmas ["you", "only", "live", "once"]
(c13-3 / live-01
       :ARG0 (c13-2 / you)
       :ARG1-of (c13-1 / have-frequency-91
                       :mod (c13-0 / only)
                       :ARG2 1))

# ::snt The project is my new closet
# ::tokens ["The", "project", "is", "my", "new", "closet"]
# ::lemmas ["the", "project", "be", "my", "new", "closet"]
(c14-3 / closet
       :ARG1-of (c14-1 / new-01)
       :poss (c14-0 / i)
       :domain (c14-2 / project))

# ::snt Maybe can help by taking a pay cut for issue and also not blaming the cat for issue ?
# ::tokens ["Maybe", "can", "help", "by", "taking", "a", "pay", "cut", "for", "issue", "and", "also", "not", "blaming", "the", "cat", "for", "issue", "?"]
# ::lemmas ["maybe", "can", "help", "by", "take", "a", "pay", "cut", "for", "issue", "and", "also", "not", "blame", "the", "cat", "for", "issue", "?"]
(c15-9 / possible-01
       :ARG1 (c15-5 / help-01
                    :manner (c15-2 / and
                                   :op1 (c15-7 / take-01
                                               :ARG1 (c15-3 / cut-02
                                                            :ARG1 (c15-6 / pay-01))
                                               :ARG3 (c15-4 / issue-02))
                                   :op2 (c15-8 / blame-01
                                               :ARG1 (c15-0 / cat)
                                               :ARG2 c15-4
                                               :mod (c15-10 / also)
                                               :polarity -)))
       :polarity (c15-1 / amr-unknown))

# ::snt boys we are going to need yall to win every FNCS for the rest of the year and next year! Looks like the expansion to the bunnies room went a little over budget!!Feel better Queen.
# ::tokens ["boys", "we", "are", "going", "to", "need", "y", "all", "to", "win", "every", "FNCS", "for", "the", "rest", "of", "the", "year", "and", "next", "year", "!", "Looks", "like", "the", "expansion", "to", "the", "bunnies", "room", "went", "a", "little", "over", "budget!!Feel", "better", "Queen", "."]
# ::lemmas ["boy", "we", "be", "go", "to", "need", "you", "all", "to", "win", "every", "fncs", "for", "the", "rest", "of", "the", "year", "and", "next", "year", "!", "look", "like", "the", "expansion", "to", "the", "bunny", "room", "go", "a", "little", "over", "budget!!Feel", "well", "Queen", "."]
(c16-11 / multi-sentence
        :snt1 (c16-15 / say-01
                      :ARG0 (c16-5 / i)
                      :ARG1 (c16-12 / need-01
                                    :ARG0 (c16-6 / we)
                                    :ARG1 (c16-14 / win-01
                                                  :ARG0 (c16-21 / you
                                                                :mod (c16-23 / all))
                                                  :ARG2 (c16-10 / game
                                                                :name (c16-3 / name
                                                                             :op1 "FNCS")
                                                                :mod (c16-16 / every))
                                                  :duration (c16-13 / and
                                                                    :op1 (c16-9 / rest
                                                                                :part-of (c16-20 / year))
                                                                    :op2 (c16-0 / year
                                                                                :mod (c16-18 / next)))))
                      :ARG2 (c16-29 / boy))
        :snt2 (c16-28 / look-02
                      :ARG1 (c16-19 / go-08
                                    :ARG1 (c16-27 / expand-01
                                                  :ARG4 (c16-7 / room
                                                               :mod (c16-22 / bunny)))
                                    :ARG2 (c16-8 / over-03
                                                 :ARG1 c16-27
                                                 :ARG2 (c16-17 / budget-01)
                                                 :degree (c16-4 / little))))
        :snt3 (c16-24 / feel-01
                      :ARG0 c16-21
                      :mode imperative)
        :ARG1 (c16-1 / good-02
                     :ARG2-of (c16-26 / have-degree-91
                                      :ARG1 c16-21
                                      :ARG3 (c16-25 / more)))
        :ARG2 (c16-2 / queen))

# ::snt Thankfully I have an impermeable liner on my bed at all times
# ::tokens ["Thankfully", "I", "have", "an", "impermeable", "liner", "on", "my", "bed", "at", "all", "times"]
# ::lemmas ["thankfully", "i", "have", "an", "impermeable", "liner", "on", "my", "bed", "at", "all", "time"]
(c17-2 / have-03
       :ARG0 (c17-7 / i)
       :ARG1 (c17-4 / thing
                    :ARG0-of (c17-5 / liner-01)
                    :ARG1-of (c17-3 / impermeable-02)
                    :location (c17-6 / bed
                                     :poss c17-7))
       :ARG2-of (c17-1 / thankful-02
                       :ARG0 c17-7)
       :time (c17-0 / all))

# ::snt Cat pee on bed, if that got into the mattress you need a new one, that smell never leaves
# ::tokens ["Cat", "pee", "on", "bed", ",", "if", "that", "got", "into", "the", "mattress", "you", "need", "a", "new", "one", ",", "that", "smell", "never", "leaves"]
# ::lemmas ["Cat", "pee", "on", "bed", ",", "if", "that", "get", "into", "the", "mattress", "you", "need", "a", "new", "one", ",", "that", "smell", "never", "leave"]
(c18-1 / and
       :op1 (c18-7 / pee-01
                   :ARG0 (c18-2 / cat)
                   :location (c18-6 / bed))
       :op2 (c18-9 / need-01
                   :ARG0 (c18-10 / you)
                   :ARG1 (c18-8 / mattress
                                :ARG1-of (c18-3 / new-01))
                   :condition (c18-4 / get-05
                                     :ARG1 c18-7
                                     :ARG2 c18-8))
       :op3 (c18-5 / leave-13
                   :ARG0 (c18-0 / smell-02
                                :ARG1 c18-7)
                   :time (c18-11 / ever)
                   :polarity -))

# ::snt Oh no! Feel better Queen
# ::tokens ["Oh", "no", "!", "Feel", "better", "Queen"]
# ::lemmas ["oh", "no", "!", "feel", "well", "queen"]
(c19-7 / multi-sentence
       :snt1 (c19-5 / oh-no
                    :mode expressive)
       :snt2 (c19-0 / say-01
                    :ARG1 (c19-1 / feel-01
                                 :ARG0 (c19-3 / queen)
                                 :ARG1 (c19-6 / good-02
                                              :ARG2-of (c19-4 / have-degree-91
                                                              :ARG1 c19-1
                                                              :ARG3 (c19-2 / more)))
                                 :mode imperative)
                    :ARG2 c19-3))

# ::snt good morning &amp; sending positive vibes your way luv
# ::tokens ["good", "morning", "&", "amp", ";", "sending", "positive", "vibes", "your", "way", "luv"]
# ::lemmas ["good", "morning", "&", "amp", ";", "send", "positive", "vibe", "your", "way", "luv"]
(c20-1 / and
       :op1 (c20-9 / morning
                   :ARG1-of (c20-7 / good-02))
       :op2 (c20-0 / send-01
                   :ARG1 (c20-4 / vibes
                                :mod (c20-8 / positive))
                   :path (c20-3 / way
                                :poss (c20-10 / you)))
       :ARG1-of (c20-5 / laugh-01
                       :ARG0 (c20-2 / i)
                       :manner (c20-6 / loud)
                       :mode expressive))

# ::snt Try putting it in rice?
# ::tokens ["Try", "putting", "it", "in", "rice", "?"]
# ::lemmas ["try", "put", "it", "in", "rice", "?"]
(c21-2 / try-01
       :polarity (c21-0 / amr-unknown)
       :ARG0 (c21-5 / you)
       :ARG1 (c21-4 / put-01
                    :ARG0 c21-5
                    :ARG1 (c21-1 / it)
                    :ARG2 (c21-3 / rice)))

# ::snt These are some crazy odd side effects
# ::tokens ["These", "are", "some", "crazy", "odd", "side", "effects"]
# ::lemmas ["these", "be", "some", "crazy", "odd", "side", "effect"]
(c22-6 / effect-03
       :ARG0 (c22-4 / this)
       :ARG1 (c22-2 / event
                    :mod (c22-0 / side)
                    :ARG1-of (c22-1 / crazy-03)
                    :mod (c22-3 / odd)
                    :mod (c22-5 / some)))

# ::snt k omg
# ::tokens ["k", "omg"]
# ::lemmas ["k", "omg"]
(c23-0 / opine-01
       :ARG0 (c23-2 / i)
       :mod (c23-1 / fuck
                   :mode expressive))

# ::snt Atleast didnt make this tweet.
# ::tokens ["Atleast", "did", "nt", "make", "this", "tweet", "."]
# ::lemmas ["Atleast", "do", "not", "make", "this", "tweet", "."]
(c24-3 / tweet-02
       :ARG0 (c24-1 / i)
       :mod (c24-2 / at-least)
       :mod (c24-0 / this)
       :polarity -)

# ::snt are you gonna clean up that cat pee first or do you just don't care?
# ::tokens ["are", "you", "gon", "na", "clean", "up", "that", "cat", "pee", "first", "or", "do", "you", "just", "do", "n't", "care", "?"]
# ::lemmas ["be", "you", "going", "to", "clean", "up", "that", "cat", "pee", "first", "or", "do", "you", "just", "do", "not", "care", "?"]
(c25-1 / amr-choice
       :op1 (c25-2 / clean-up-02
                   :ARG0 (c25-7 / you)
                   :ARG1 (c25-6 / pee-01
                                :ARG0 (c25-0 / cat))
                   :ord (c25-4 / ordinal-entity
                               :value 1))
       :op2 (c25-3 / care-01
                   :ARG0 c25-7
                   :mod (c25-5 / just)
                   :polarity -))

# ::snt Sorry, time to tag in
# ::tokens ["Sorry", ",", "time", "to", "tag", "in"]
# ::lemmas ["sorry", ",", "time", "to", "tag", "in"]
(c26-1 / and
       :op1 (c26-0 / sorry-01
                   :ARG1 (c26-4 / i))
       :op2 (c26-3 / time
                   :time-of (c26-2 / tag-in-02
                                   :ARG0 c26-4)))

# ::snt welllllllll
# ::tokens ["welllllllll"]
# ::lemmas ["welllllllll"]
(c27-0 / well
       :mode expressive)

# ::snt Sleep well
# ::tokens ["Sleep", "well"]
# ::lemmas ["sleep", "well"]
(c28-0 / sleep-01
       :ARG0 (c28-2 / you)
       :manner (c28-1 / well-09)
       :mode imperative)
