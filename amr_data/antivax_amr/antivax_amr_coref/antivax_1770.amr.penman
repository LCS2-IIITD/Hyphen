# ::snt years ago, % of all Oxford food poisoning cases derived from the kebab vans on St Giles. Luckily I built up immunity
# ::tokens ["years", "ago", ",", "%", "of", "all", "Oxford", "food", "poisoning", "cases", "derived", "from", "the", "kebab", "vans", "on", "St", "Giles", ".", "Luckily", "I", "built", "up", "immunity"]
# ::lemmas ["years", "ago", ",", "%", "of", "all", "Oxford", "food", "poisoning", "case", "derive", "from", "the", "kebab", "van", "on", "St", "Giles", ".", "luckily", "i", "build", "up", "immunity"]
(c1-8 / multi-sentence
      :snt1 (c1-0 / derive-01
                  :ARG1 (c1-4 / case-04
                              :ARG1 (c1-23 / poison-02
                                           :ARG1 (c1-18 / food))
                              :ARG1-of (c1-3 / include-91
                                             :ARG2 (c1-1 / case-04
                                                         :ARG1 c1-23
                                                         :location (c1-20 / university
                                                                          :name (c1-9 / name
                                                                                      :op1 "Oxford"))
                                                         :mod (c1-17 / all))
                                             :ARG3 (c1-21 / percentage-entity
                                                          :value 80)))
                  :ARG2 (c1-6 / van
                              :mod (c1-24 / kebab)
                              :location (c1-10 / street
                                               :name (c1-2 / name
                                                           :op1 "St"
                                                           :op2 "Giles")))
                  :time (c1-22 / before
                               :op1 (c1-14 / now)
                               :quant (c1-19 / multiple
                                             :op1 (c1-7 / temporal-quantity
                                                        :unit (c1-15 / year)
                                                        :quant 1)))
                  :ARG2-of (c1-13 / fortunate-01
                                  :polarity -))
      :snt2 (c1-16 / build-up-05
                   :ARG0 (c1-11 / i)
                   :ARG1 (c1-12 / immunity)
                   :ARG2-of (c1-5 / thankful-02
                                  :ARG1 c1-11)))

# ::snt Preferred the purple onion at loughborough students uni. Followed by a fish takeaway from the zoo spartans
# ::tokens ["Preferred", "the", "purple", "onion", "at", "loughborough", "students", "uni", ".", "Followed", "by", "a", "fish", "takeaway", "from", "the", "zoo", "spartans"]
# ::lemmas ["prefer", "the", "purple", "onion", "at", "loughborough", "student", "uni", ".", "follow", "by", "a", "fish", "takeaway", "from", "the", "zoo", "spartan"]
(c2-11 / multi-sentence
       :snt1 (c2-10 / prefer-01
                    :ARG1 (c2-6 / product
                                :name (c2-12 / name
                                             :op1 "Purple"
                                             :op2 "Onion"))
                    :location (c2-3 / university
                                    :name (c2-8 / name
                                                :op1 "Loughborough")
                                    :poss (c2-2 / person
                                                :ARG0-of (c2-0 / study-01)
                                                :mod c2-3)))
       :snt2 (c2-1 / follow-01
                   :ARG1 (c2-7 / take-01
                               :ARG1 (c2-4 / fish)
                               :ARG3 (c2-9 / spartan
                                           :mod (c2-5 / zoo)))))

# ::snt If you've ever been to any nightclub where a sticky carpet was a 'must have' ...
# ::tokens ["If", "you", "'ve", "ever", "been", "to", "any", "nightclub", "where", "a", "sticky", "carpet", "was", "a", "'", "must", "have", "'", "..."]
# ::lemmas ["if", "you", "'ve", "ever", "be", "to", "any", "nightclub", "where", "a", "sticky", "carpet", "be", "a", "'", "must", "have", "'", "..."]
(c3-3 / have-condition-91
      :ARG2 (c3-5 / go-02
                  :ARG0 (c3-7 / you)
                  :ARG4 (c3-6 / nightclub
                              :mod (c3-1 / any)
                              :location-of (c3-4 / obligate-01
                                                 :ARG2 (c3-2 / carpet
                                                             :ARG1-of (c3-0 / stick-01))))
                  :time (c3-8 / ever)))

# ::snt Pretty sure every town will have a place like that but certainly it wasn't just the babe that was colourful
# ::tokens ["Pretty", "sure", "every", "town", "will", "have", "a", "place", "like", "that", "but", "certainly", "it", "was", "n't", "just", "the", "babe", "that", "was", "colourful"]
# ::lemmas ["pretty", "sure", "every", "town", "will", "have", "a", "place", "like", "that", "but", "certainly", "it", "be", "not", "just", "the", "babe", "that", "be", "colourful"]
(c4-2 / contrast-01
      :ARG1 (c4-0 / sure-02
                  :ARG1 (c4-4 / have-03
                              :ARG0 (c4-7 / town
                                          :mod (c4-13 / every))
                              :ARG1 (c4-12 / place
                                           :ARG1-of (c4-8 / resemble-01
                                                          :ARG2 (c4-3 / that))))
                  :degree (c4-6 / pretty))
      :ARG2 (c4-11 / have-mod-91
                   :ARG1 (c4-10 / babe)
                   :ARG2 (c4-1 / colorful)
                   :mod (c4-9 / just)
                   :mod (c4-5 / certain)
                   :polarity -))

# ::snt Lolololol
# ::tokens ["Lolololol"]
# ::lemmas ["lolololol"]
(c5-1 / laugh-01
      :ARG0 (c5-0 / i)
      :manner (c5-2 / loud))

# ::snt I was just about to ask about that
# ::tokens ["I", "was", "just", "about", "to", "ask", "about", "that"]
# ::lemmas ["i", "be", "just", "about", "to", "ask", "about", "that"]
(c6-0 / ask-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-1 / that)
      :time (c6-4 / about-to)
      :mod (c6-2 / just))

# ::snt I'll never forget the time I felt something hard and dusty clobber me over the head and realized the place was actually crumbling all around us.
# ::tokens ["I", "'ll", "never", "forget", "the", "time", "I", "felt", "something", "hard", "and", "dusty", "clobber", "me", "over", "the", "head", "and", "realized", "the", "place", "was", "actually", "crumbling", "all", "around", "us", "."]
# ::lemmas ["i", "'ll", "never", "forget", "the", "time", "i", "feel", "something", "hard", "and", "dusty", "clobber", "i", "over", "the", "head", "and", "realize", "the", "place", "be", "actually", "crumble", "all", "around", "we", "."]
(c7-15 / forget-01
       :ARG0 (c7-4 / i
                   :part (c7-16 / head))
       :ARG1 (c7-8 / time
                   :time-of (c7-14 / and
                                   :op1 (c7-13 / feel-01
                                               :ARG0 c7-4
                                               :ARG1 (c7-12 / something
                                                            :ARG1-of (c7-3 / hard-04)
                                                            :ARG0-of (c7-5 / clobber-01
                                                                           :ARG1 c7-4
                                                                           :location (c7-7 / over
                                                                                           :op1 c7-16)
                                                                           :mod (c7-0 / dusty))))
                                   :op2 (c7-9 / realize-01
                                              :ARG0 c7-4
                                              :ARG1 (c7-1 / crumble-01
                                                          :ARG1 (c7-17 / place)
                                                          :ARG1-of (c7-10 / actual-02)
                                                          :location (c7-2 / around
                                                                          :op1 (c7-6 / we)
                                                                          :mod (c7-18 / all))))))
       :time (c7-11 / ever)
       :polarity -)

# ::snt and unedifying how special a niche tweet can make you feel!
# ::tokens ["and", "unedifying", "how", "special", "a", "niche", "tweet", "can", "make", "you", "feel", "!"]
# ::lemmas ["and", "unedifye", "how", "special", "a", "niche", "tweet", "can", "make", "you", "feel", "!"]
(c8-1 / and
      :op2 (c8-4 / unify-01
                 :ARG1 (c8-5 / thing
                             :degree-of (c8-0 / special-02
                                              :ARG1 (c8-3 / tweet-01
                                                          :mod (c8-8 / niche))
                                              :ARG2-of (c8-7 / make-02
                                                             :ARG0 (c8-9 / you)
                                                             :ARG1 (c8-2 / feel-01
                                                                         :ARG0 c8-9)
                                                             :ARG1-of (c8-6 / possible-01))))))

# ::snt I reckon Ill be fine then.
# ::tokens ["I", "reckon", "Ill", "be", "fine", "then", "."]
# ::lemmas ["i", "reckon", "Ill", "be", "fine", "then", "."]
(c9-2 / reckon-01
      :ARG0 (c9-0 / i)
      :ARG1 (c9-3 / fine-04
                  :ARG1 c9-0)
      :mod (c9-1 / then))

# ::snt Ha oh I have been to the one in Reading and that is fair comment
# ::tokens ["Ha", "oh", "I", "have", "been", "to", "the", "one", "in", "Reading", "and", "that", "is", "fair", "comment"]
# ::lemmas ["ha", "oh", "i", "have", "be", "to", "the", "one", "in", "reading", "and", "that", "be", "fair", "comment"]
(c10-1 / and
       :op1 (c10-7 / be-located-at-91
                   :ARG1 (c10-8 / i)
                   :ARG2 (c10-5 / one
                                :location (c10-3 / city
                                                 :name (c10-9 / name
                                                              :op1 "Reading")))
                   :mod (c10-4 / ha
                               :mode expressive))
       :op2 (c10-0 / comment-01
                   :ARG1-of (c10-2 / fair-01)
                   :domain (c10-6 / that)))

# ::snt Same with its twin in Reading.
# ::tokens ["Same", "with", "its", "twin", "in", "Reading", "."]
# ::lemmas ["same", "with", "its", "twin", "in", "Reading", "."]
(c12-0 / same-01
       :ARG2 (c12-2 / twin
                    :location (c12-1 / city
                                     :name (c12-4 / name
                                                  :op1 "Reading"))
                    :poss (c12-3 / it)))

# ::snt What about the one in Kitchener, Ontario?I mean, probably the same.
# ::tokens ["What", "about", "the", "one", "in", "Kitchener", ",", "Ontario?I", "mean", ",", "probably", "the", "same", "."]
# ::lemmas ["what", "about", "the", "one", "in", "Kitchener", ",", "Ontario?I", "mean", ",", "probably", "the", "same", "."]
(c13-8 / mean-01
       :ARG0 (c13-7 / i)
       :ARG2 (c13-6 / probable
                    :domain (c13-0 / same-01
                                   :ARG1 (c13-3 / one
                                                :location (c13-2 / city
                                                                 :name (c13-9 / name
                                                                              :op1 "Kitchener")
                                                                 :location (c13-4 / province
                                                                                  :name (c13-5 / name
                                                                                               :op1 "Ontario"))))))
       :polarity (c13-1 / amr-unknown))

# ::snt Hahaha. Fair.
# ::tokens ["Hahaha", ".", "Fair", "."]
# ::lemmas ["Hahaha", ".", "fair", "."]
(c14-0 / multi-sentence
       :snt1 (c14-1 / haha
                    :mode expressive)
       :snt2 (c14-2 / fair-01))

# ::snt Youre too young to remember the Zodiac but...aaaaaah similar
# ::tokens ["You", "re", "too", "young", "to", "remember", "the", "Zodiac", "but", "...", "aaaaaah", "similar"]
# ::lemmas ["you", "re", "too", "young", "to", "remember", "the", "Zodiac", "but", "...", "aaaaaah", "similar"]
(c15-1 / contrast-01
       :ARG1 (c15-2 / have-degree-91
                    :ARG1 (c15-8 / you)
                    :ARG2 (c15-9 / young)
                    :ARG3 (c15-4 / too)
                    :ARG6 (c15-5 / remember-01
                                 :ARG0 c15-8
                                 :ARG1 (c15-6 / book
                                              :name (c15-7 / name
                                                           :op1 "Zodiac"))))
       :ARG2 (c15-3 / resemble-01
                    :mod (c15-0 / aha
                                :mode expressive)))

# ::snt I miss her
# ::tokens ["I", "miss", "her"]
# ::lemmas ["i", "miss", "she"]
(c16-2 / miss-01
       :ARG0 (c16-1 / i)
       :ARG1 (c16-0 / she))

# ::snt Preach.
# ::tokens ["Preach", "."]
# ::lemmas ["Preach", "."]
(c17-0 / preach-01
       :ARG0 (c17-1 / you)
       :mode imperative)
