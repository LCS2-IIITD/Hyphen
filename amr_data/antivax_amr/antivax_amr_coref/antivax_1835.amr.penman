# ::snt But is he cute?!?
# ::tokens ["But", "is", "he", "cute", "?", "!", "?"]
# ::lemmas ["but", "be", "he", "cute", "?", "!", "?"]
(c1-3 / contrast-01
      :ARG2 (c1-0 / cute
                  :domain (c1-2 / he)
                  :polarity (c1-1 / amr-unknown)))

# ::snt Honestly forgot that was a name and assumed its just wherever in Texas you are
# ::tokens ["Honestly", "forgot", "that", "was", "a", "name", "and", "assumed", "its", "just", "wherever", "in", "Texas", "you", "are"]
# ::lemmas ["honestly", "forget", "that", "be", "a", "name", "and", "assume", "its", "just", "wherever", "in", "Texas", "you", "be"]
(c2-1 / and
      :op1 (c2-2 / forget-01
                 :ARG0 (c2-10 / you)
                 :ARG1 (c2-5 / thing
                             :ARG2-of (c2-9 / name-01)
                             :domain (c2-3 / that))
                 :ARG1-of (c2-4 / honest-01))
      :op2 (c2-11 / assume-02
                  :ARG0 c2-10
                  :ARG1 c2-5
                  :location (c2-7 / location
                                  :part-of (c2-0 / state
                                                 :name (c2-6 / name
                                                             :op1 "Texas"))
                                  :mod (c2-8 / just))))

# ::snt Lol at me trying to hide name and missing one oops
# ::tokens ["Lol", "at", "me", "trying", "to", "hide", "name", "and", "missing", "one", "oops"]
# ::lemmas ["Lol", "at", "i", "try", "to", "hide", "name", "and", "miss", "one", "oop"]
(c3-5 / laugh-01
      :ARG0 (c3-7 / i)
      :ARG2 (c3-0 / and
                  :op1 (c3-4 / try-01
                             :ARG0 c3-7
                             :ARG1 (c3-2 / hide-01
                                         :ARG0 c3-7
                                         :ARG1 (c3-1 / thing
                                                     :ARG2-of (c3-9 / name-01))))
                  :op2 (c3-8 / miss-01
                             :ARG0 c3-7
                             :ARG1 c3-1
                             :quant 1)
                  :mod (c3-3 / oops
                             :mode expressive))
      :manner (c3-6 / loud)
      :mode expressive)

# ::snt This is magical.
# ::tokens ["This", "is", "magical", "."]
# ::lemmas ["this", "be", "magical", "."]
(c4-0 / magic
      :domain (c4-1 / this))

# ::snt AAAAAAAAA
# ::tokens ["AAAAAAAAA"]
# ::lemmas ["AAAAAAAAA"]
(c5-0 / string-entity
      :value "AAAAAAAAA")
