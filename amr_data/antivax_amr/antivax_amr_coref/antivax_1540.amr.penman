# ::snt Noice
# ::tokens ["Noice"]
# ::lemmas ["Noice"]
(c1-0 / person
      :name (c1-1 / name
                  :op1 "Noice"))

# ::snt just booked it, definitely put my correct dob in
# ::tokens ["just", "booked", "it", ",", "definitely", "put", "my", "correct", "dob", "in"]
# ::lemmas ["just", "book", "it", ",", "definitely", "put", "my", "correct", "dob", "in"]
(c2-1 / and
      :op1 (c2-6 / book-03
                 :ARG0 (c2-8 / i)
                 :ARG1 (c2-4 / it)
                 :time (c2-7 / just))
      :op2 (c2-5 / put-01
                 :ARG0 c2-8
                 :ARG1 (c2-0 / dob
                             :ARG1-of (c2-2 / correct-02)
                             :poss c2-8)
                 :mod (c2-3 / definite)))

# ::snt Let me know if you can, Im paranoid I put the wrong age in ahah
# ::tokens ["Let", "me", "know", "if", "you", "can", ",", "I", "m", "paranoid", "I", "put", "the", "wrong", "age", "in", "ahah"]
# ::lemmas ["let", "i", "know", "if", "you", "can", ",", "i", "m", "paranoid", "i", "put", "the", "wrong", "age", "in", "ahah"]
(c3-6 / let-know-07
      :ARG0 (c3-9 / you)
      :ARG1 (c3-8 / i)
      :ARG2 (c3-7 / possible-01
                  :ARG1 (c3-0 / do-02
                              :ARG0 c3-9))
      :ARG1-of (c3-2 / cause-01
                     :ARG0 (c3-5 / paranoid
                                 :domain c3-8
                                 :topic (c3-4 / put-01
                                              :ARG0 c3-8
                                              :ARG1 (c3-1 / age
                                                          :ARG1-of (c3-3 / wrong-04))
                                              :ARG2 (c3-10 / ahah
                                                           :mode expressive))))
      :mode imperative)

# ::snt ah dope okay i will have a go
# ::tokens ["ah", "dope", "okay", "i", "will", "have", "a", "go"]
# ::lemmas ["ah", "dope", "okay", "i", "will", "have", "a", "go"]
(c4-2 / okay-01
      :mod (c4-0 / dope
                 :mode expressive)
      :ARG1 (c4-1 / have-06
                  :ARG0 (c4-4 / i)
                  :ARG1 (c4-3 / go-01)))

# ::snt Yeh but if you put in your date of birth it accepts it which it didnt this morning. It usually goes live before they change the text
# ::tokens ["Yeh", "but", "if", "you", "put", "in", "your", "date", "of", "birth", "it", "accepts", "it", "which", "it", "did", "nt", "this", "morning", ".", "It", "usually", "goes", "live", "before", "they", "change", "the", "text"]
# ::lemmas ["Yeh", "but", "if", "you", "put", "in", "your", "date", "of", "birth", "it", "accept", "it", "which", "it", "do", "not", "this", "morning", ".", "it", "usually", "go", "live", "before", "they", "change", "the", "text"]
(c5-7 / multi-sentence
      :snt1 (c5-3 / contrast-01
                  :ARG2 (c5-15 / accept-01
                               :ARG0 (c5-2 / it)
                               :ARG1 (c5-10 / it)
                               :condition (c5-20 / put-in-05
                                                 :ARG0 (c5-13 / you)
                                                 :ARG1 (c5-0 / date
                                                             :time-of (c5-19 / bear-02
                                                                             :ARG1 c5-13)))
                               :ARG1-of c5-3
                               :ARG2 (c5-9 / accept-01
                                           :ARG0 c5-10
                                           :time (c5-12 / date-entity
                                                        :dayperiod (c5-16 / morning)
                                                        :mod (c5-5 / today))
                                           :polarity -)
                               :polarity -))
      :snt2 (c5-6 / go-08
                  :ARG1 (c5-11 / it)
                  :ARG2 (c5-18 / live-01)
                  :mod (c5-17 / usual)
                  :time (c5-14 / before
                               :op1 (c5-1 / change-01
                                          :ARG0 (c5-4 / they)
                                          :ARG1 (c5-8 / text)))))

# ::snt it says i need to be tho
# ::tokens ["it", "says", "i", "need", "to", "be", "tho"]
# ::lemmas ["it", "say", "i", "need", "to", "be", "tho"]
(c6-1 / have-concession-91
      :ARG1 (c6-0 / say-01
                  :ARG0 (c6-3 / it)
                  :ARG1 (c6-4 / need-01
                              :ARG0 (c6-2 / i))))

# ::snt Website let me
# ::tokens ["Website", "let", "me"]
# ::lemmas ["website", "let", "i"]
(c7-2 / let-01
      :ARG0 (c7-0 / website)
      :ARG1 (c7-3 / see-01
                  :ARG0 (c7-1 / i)))

# ::snt how
# ::tokens ["how"]
# ::lemmas ["how"]
(c8-0 / amr-unknown)

# ::snt Kind of feel like I did something wrong aha. Never thought it would happen
# ::tokens ["Kind", "of", "feel", "like", "I", "did", "something", "wrong", "aha", ".", "Never", "thought", "it", "would", "happen"]
# ::lemmas ["kind", "of", "feel", "like", "i", "do", "something", "wrong", "aha", ".", "never", "think", "it", "would", "happen"]
(c9-8 / multi-sentence
      :snt1 (c9-3 / feel-01
                  :ARG0 (c9-7 / i)
                  :ARG1 (c9-0 / do-02
                              :ARG0 c9-7
                              :ARG1 (c9-1 / something
                                          :ARG1-of (c9-4 / wrong-02)))
                  :degree (c9-9 / kind-of)
                  :mod (c9-2 / aha
                             :mode expressive))
      :snt2 (c9-6 / think-01
                  :ARG0 c9-7
                  :ARG1 (c9-5 / it)
                  :time (c9-10 / ever)
                  :polarity -))
