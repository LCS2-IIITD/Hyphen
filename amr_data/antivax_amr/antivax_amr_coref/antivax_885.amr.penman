# ::snt No, STAY streaming Minish Cap. Never stop(Though if you pursue all the kinstone sidequests, you might actually end up like this)
# ::tokens ["No", ",", "STAY", "streaming", "Minish", "Cap", ".", "Never", "stop(Though", "if", "you", "pursue", "all", "the", "kinstone", "sidequests", ",", "you", "might", "actually", "end", "up", "like", "this", ")"]
# ::lemmas ["no", ",", "stay", "stream", "Minish", "Cap", ".", "never", "stop(Though", "if", "you", "pursue", "all", "the", "kinstone", "sidequest", ",", "you", "might", "actually", "end", "up", "like", "this", ")"]
(c1-3 / multi-sentence
      :snt1 (c1-11 / and
                   :op1 (c1-12 / have-polarity-91
                               :ARG2 -)
                   :op2 (c1-7 / stay-01
                              :ARG1 (c1-9 / you)
                              :ARG3 (c1-16 / stream-01
                                           :ARG0 c1-9
                                           :ARG1 (c1-15 / broadcast-program
                                                        :name (c1-4 / name
                                                                    :op1 "Minish"
                                                                    :op2 "Cap")))
                              :mode imperative))
      :snt2 (c1-8 / stop-01
                  :ARG0 (c1-10 / you)
                  :time (c1-6 / ever)
                  :concession (c1-17 / possible-01
                                     :ARG1 (c1-13 / end-up-03
                                                  :ARG1 c1-10
                                                  :ARG2 (c1-2 / resemble-01
                                                              :ARG1 c1-10
                                                              :ARG2 (c1-1 / this)))
                                     :condition (c1-14 / pursue-01
                                                       :ARG0 c1-10
                                                       :ARG1 (c1-0 / sidequests
                                                                   :mod (c1-18 / kinstone)
                                                                   :mod (c1-5 / all))))
                  :polarity -
                  :mode imperative))

# ::snt *start streaming, sorry, typo
# ::tokens ["*", "start", "streaming", ",", "sorry", ",", "typo"]
# ::lemmas ["*", "start", "stream", ",", "sorry", ",", "typo"]
(c2-1 / and
      :op1 (c2-0 / start-01
                 :ARG0 (c2-6 / you)
                 :ARG1 (c2-4 / stream-01
                             :ARG0 c2-6)
                 :mode imperative)
      :op2 (c2-2 / sorry-01
                 :ARG1 (c2-5 / i)
                 :mod (c2-3 / typo)))
