# ::snt I'm on this CBD Calm of mine
# ::tokens ["I", "'m", "on", "this", "CBD", "Calm", "of", "mine"]
# ::lemmas ["i", "be", "on", "this", "CBD", "Calm", "of", "mine"]
(c1-3 / be-located-at-91
      :ARG1 (c1-4 / i)
      :ARG2 (c1-1 / calm-03
                  :ARG1 c1-4
                  :mod (c1-0 / city-district
                             :name (c1-5 / name
                                         :op1 "CBD"))
                  :mod (c1-2 / this)))

# ::snt Must we offer you some sort of chocolate or something to ease the anxiety? I know nothing helps but
# ::tokens ["Must", "we", "offer", "you", "some", "sort", "of", "chocolate", "or", "something", "to", "ease", "the", "anxiety", "?", "I", "know", "nothing", "helps", "but"]
# ::lemmas ["must", "we", "offer", "you", "some", "sort", "of", "chocolate", "or", "something", "to", "ease", "the", "anxiety", "?", "i", "know", "nothing", "help", "but"]
(c2-14 / multi-sentence
       :snt1 (c2-10 / truth-value
                    :polarity-of (c2-9 / obligate-01
                                       :ARG1 (c2-5 / we)
                                       :ARG2 (c2-7 / offer-01
                                                   :ARG0 c2-5
                                                   :ARG1 (c2-2 / or
                                                               :op1 (c2-4 / chocolate
                                                                          :mod (c2-0 / sort
                                                                                     :mod (c2-12 / some)))
                                                               :op2 (c2-8 / something))
                                                   :ARG3 (c2-16 / you)
                                                   :purpose (c2-17 / ease-02
                                                                   :ARG0 c2-2
                                                                   :ARG1 (c2-3 / anxiety)))))
       :snt2 (c2-15 / know-01
                    :ARG0 (c2-13 / i)
                    :ARG1 (c2-6 / help-01
                                :ARG0 (c2-11 / nothing)
                                :ARG1-of (c2-1 / contrast-01
                                               :ARG2 c2-9))))

# ::snt Ya man, I'm actually fine....
# ::tokens ["Ya", "man", ",", "I", "'m", "actually", "fine", "...."]
# ::lemmas ["Ya", "man", ",", "i", "be", "actually", "fine", "...."]
(c5-0 / say-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-2 / fine-04
                  :ARG1 c5-3
                  :ARG1-of (c5-1 / actual-02))
      :ARG2 (c5-4 / man
                  :mod (c5-5 / ya)))

# ::snt Lol youll be fine man thats why they call it a jab, quick quick
# ::tokens ["Lol", "you", "ll", "be", "fine", "man", "that", "s", "why", "they", "call", "it", "a", "jab", ",", "quick", "quick"]
# ::lemmas ["Lol", "you", "ll", "be", "fine", "man", "that", "s", "why", "they", "call", "it", "a", "jab", ",", "quick", "quick"]
(c6-11 / multi-sentence
       :snt1 (c6-1 / fine-04
                   :ARG1 (c6-2 / man)
                   :ARG2-of (c6-7 / laugh-01
                                  :manner (c6-8 / loud)
                                  :mode expressive))
       :snt2 (c6-3 / cause-01
                   :ARG0 (c6-6 / that)
                   :ARG1 (c6-0 / call-01
                               :ARG0 (c6-4 / they)
                               :ARG1 (c6-10 / it)
                               :ARG2 (c6-9 / jab)))
       :snt3 (c6-5 / quick-02
                   :ARG1 c6-5))

# ::snt I am unashamedly bang of needles
# ::tokens ["I", "am", "unashamedly", "bang", "of", "needles"]
# ::lemmas ["i", "be", "unashamedly", "bang", "of", "needle"]
(c7-0 / bang
      :domain (c7-1 / i)
      :ARG1-of (c7-3 / shame-02
                     :polarity -)
      :mod (c7-2 / needle)
      :mode expressive)

# ::snt At least one man on my side of the line.
# ::tokens ["At", "least", "one", "man", "on", "my", "side", "of", "the", "line", "."]
# ::lemmas ["At", "least", "one", "man", "on", "my", "side", "of", "the", "line", "."]
(c8-4 / man
      :quant (c8-1 / at-least
                   :op1 1)
      :location (c8-0 / side
                      :poss (c8-2 / line)
                      :poss (c8-3 / i)))

# ::snt I don't condone violence against woman but if it's a man go right ahead! Hopefully he's a United fan!
# ::tokens ["I", "do", "n't", "condone", "violence", "against", "woman", "but", "if", "it", "'s", "a", "man", "go", "right", "ahead", "!", "Hopefully", "he", "'s", "a", "United", "fan", "!"]
# ::lemmas ["i", "do", "not", "condone", "violence", "against", "woman", "but", "if", "it", "be", "a", "man", "go", "right", "ahead", "!", "hopefully", "he", "be", "a", "United", "fan", "!"]
(c10-14 / multi-sentence
        :snt1 (c10-3 / contrast-01
                     :ARG1 (c10-0 / condone-01
                                  :ARG0 (c10-13 / i)
                                  :ARG1 (c10-8 / violence
                                               :prep-against (c10-4 / woman))
                                  :polarity -)
                     :ARG2 (c10-11 / go-06
                                   :ARG0 (c10-16 / you)
                                   :ARG2 (c10-1 / ahead
                                                :mod (c10-10 / right))
                                   :condition (c10-5 / man
                                                     :domain (c10-6 / it))
                                   :mode imperative))
        :snt2 (c10-7 / hope-01
                     :ARG1 (c10-2 / fan
                                  :mod (c10-9 / team
                                              :name (c10-15 / name
                                                            :op1 "United"))
                                  :domain (c10-12 / he))))

# ::snt Oh I'm definitely down with that idea brother!
# ::tokens ["Oh", "I", "'m", "definitely", "down", "with", "that", "idea", "brother", "!"]
# ::lemmas ["oh", "i", "be", "definitely", "down", "with", "that", "idea", "brother", "!"]
(c12-0 / say-01
       :ARG0 (c12-8 / i)
       :ARG1 (c12-1 / down-01
                    :ARG1 (c12-3 / idea
                                 :mod (c12-5 / that))
                    :mod (c12-2 / definite))
       :ARG2 (c12-6 / person
                    :ARG0-of (c12-4 / have-rel-role-91
                                    :ARG1 c12-8
                                    :ARG2 (c12-7 / brother)))
       :mode expressive)

# ::snt The needle is nothing compared to the feeling of that cold injection
# ::tokens ["The", "needle", "is", "nothing", "compared", "to", "the", "feeling", "of", "that", "cold", "injection"]
# ::lemmas ["the", "needle", "be", "nothing", "compare", "to", "the", "feeling", "of", "that", "cold", "injection"]
(c13-2 / compare-01
       :ARG1 (c13-5 / needle)
       :ARG2 (c13-1 / feel-01
                    :ARG1 (c13-4 / inject-01
                                 :ARG1-of (c13-0 / cold-01)
                                 :mod (c13-3 / that)))
       :polarity -)

# ::snt mate Im with on that and when you expand your empire and your in London come train with me and we show them how is done
# ::tokens ["mate", "I", "m", "with", "on", "that", "and", "when", "you", "expand", "your", "empire", "and", "your", "in", "London", "come", "train", "with", "me", "and", "we", "show", "them", "how", "is", "done"]
# ::lemmas ["mate", "i", "m", "with", "on", "that", "and", "when", "you", "expand", "your", "empire", "and", "your", "in", "London", "come", "train", "with", "i", "and", "we", "show", "they", "how", "be", "do"]
(c15-15 / and
        :op1 (c15-8 / mate-01
                    :ARG0 (c15-14 / you)
                    :ARG1 (c15-3 / i)
                    :ARG2 (c15-7 / that)
                    :mode imperative)
        :op2 (c15-11 / and
                     :op1 (c15-4 / come-01
                                 :ARG1 c15-14
                                 :accompanier c15-3
                                 :accompanier (c15-6 / train))
                     :op2 (c15-13 / show-01
                                  :ARG0 (c15-5 / we)
                                  :ARG1 (c15-0 / do-02
                                               :manner (c15-1 / amr-unknown))
                                  :ARG2 (c15-10 / they))
                     :time (c15-18 / and
                                   :op1 (c15-12 / expand-01
                                                :ARG0 c15-14
                                                :ARG1 (c15-16 / empire
                                                              :poss c15-14))
                                   :op2 (c15-17 / be-located-at-91
                                                :ARG1 c15-14
                                                :ARG2 (c15-2 / city
                                                             :name (c15-9 / name
                                                                          :op1 "London"))))))

# ::snt Lol... A naald is 'n naald jong... I just hear them opening the packaging... Dan sweet ek...
# ::tokens ["Lol", "...", "A", "naald", "is", "'", "n", "naald", "jong", "...", "I", "just", "hear", "them", "opening", "the", "packaging", "...", "Dan", "sweet", "ek", "..."]
# ::lemmas ["Lol", "...", "a", "naald", "be", "'", "n", "naald", "jong", "...", "i", "just", "hear", "they", "open", "the", "packaging", "...", "Dan", "sweet", "ek", "..."]
(c16-14 / multi-sentence
        :snt1 (c16-9 / laugh-01
                     :ARG0 (c16-13 / i)
                     :manner (c16-10 / loud)
                     :mode expressive)
        :snt2 (c16-12 / jong
                      :mod (c16-15 / naald)
                      :domain (c16-11 / person
                                      :name (c16-8 / name
                                                   :op1 "A")))
        :snt3 (c16-3 / hear-01
                     :ARG0 (c16-4 / i)
                     :ARG1 (c16-5 / open-01
                                  :ARG0 (c16-7 / they)
                                  :ARG1 (c16-6 / package))
                     :mod (c16-1 / just))
        :snt4 (c16-17 / ek
                      :ARG1-of (c16-0 / sweet-04)
                      :mod (c16-2 / person
                                  :name (c16-16 / name
                                                :op1 "Dan"))))

# ::snt If I don't give her a bek skoot first
# ::tokens ["If", "I", "do", "n't", "give", "her", "a", "bek", "skoot", "first"]
# ::lemmas ["if", "i", "do", "not", "give", "she", "a", "bek", "skoot", "first"]
(c17-1 / have-condition-91
       :ARG2 (c17-3 / give-01
                    :ARG0 (c17-5 / i)
                    :ARG1 (c17-0 / shoot-01
                                 :mod (c17-6 / bek))
                    :ARG2 (c17-4 / she)
                    :ord (c17-2 / ordinal-entity
                                :value 1)
                    :polarity -))

# ::snt Because it's not the same thing
# ::tokens ["Because", "it", "'s", "not", "the", "same", "thing"]
# ::lemmas ["because", "it", "be", "not", "the", "same", "thing"]
(c18-3 / cause-01
       :ARG0 (c18-0 / same-01
                    :ARG1 (c18-1 / it)
                    :ARG2 (c18-2 / thing)
                    :polarity -))

# ::snt Dude... Im not even joking
# ::tokens ["Dude", "...", "I", "m", "not", "even", "joking"]
# ::lemmas ["dude", "...", "i", "m", "not", "even", "joke"]
(c19-0 / say-01
       :ARG0 (c19-3 / i)
       :ARG1 (c19-2 / joke-01
                    :ARG0 c19-3
                    :mod (c19-4 / even)
                    :polarity -)
       :ARG2 (c19-1 / dude))

# ::snt Don't worry man! The nurse will give you a lollipop when they done!
# ::tokens ["Do", "n't", "worry", "man", "!", "The", "nurse", "will", "give", "you", "a", "lollipop", "when", "they", "done", "!"]
# ::lemmas ["do", "not", "worry", "man", "!", "the", "nurse", "will", "give", "you", "a", "lollipop", "when", "they", "do", "!"]
(c20-6 / multi-sentence
       :snt1 (c20-1 / worry-01
                    :ARG0 (c20-0 / man)
                    :polarity -
                    :mode imperative)
       :snt2 (c20-5 / give-01
                    :ARG0 (c20-7 / nurse)
                    :ARG1 (c20-4 / lollipop)
                    :ARG2 (c20-8 / you)
                    :time (c20-2 / be-done-08
                                 :ARG0 (c20-3 / they))))

# ::snt I feel you!!! I absolutely hate needles... But... I HAVE TATTOOS!!!
# ::tokens ["I", "feel", "you", "!", "!", "!", "I", "absolutely", "hate", "needles", "...", "But", "...", "I", "HAVE", "TATTOOS", "!", "!", "!"]
# ::lemmas ["i", "feel", "you", "!", "!", "!", "i", "absolutely", "hate", "needle", "...", "but", "...", "i", "have", "TATTOOS", "!", "!", "!"]
(c21-8 / multi-sentence
       :snt1 (c21-1 / feel-01
                    :ARG0 (c21-7 / i)
                    :ARG1 (c21-10 / you))
       :snt2 (c21-2 / contrast-01
                    :ARG1 (c21-3 / hate-01
                                 :ARG0 (c21-4 / i)
                                 :ARG1 (c21-9 / needle)
                                 :degree (c21-0 / absolute))
                    :ARG2 (c21-6 / have-03
                                 :ARG0 c21-4
                                 :ARG1 (c21-5 / tatoo))))

# ::snt Please tell me that's an option
# ::tokens ["Please", "tell", "me", "that", "'s", "an", "option"]
# ::lemmas ["please", "tell", "i", "that", "be", "an", "option"]
(c24-2 / tell-01
       :ARG0 (c24-4 / you)
       :ARG1 (c24-1 / option
                    :domain (c24-0 / that))
       :ARG2 (c24-3 / i)
       :mode imperative
       :polite +)

# ::snt Eish but I feel ya for real. I'd take a bullet before an injection
# ::tokens ["Eish", "but", "I", "feel", "ya", "for", "real", ".", "I", "'d", "take", "a", "bullet", "before", "an", "injection"]
# ::lemmas ["eish", "but", "i", "feel", "ya", "for", "real", ".", "i", "would", "take", "a", "bullet", "before", "an", "injection"]
(c25-9 / multi-sentence
       :snt1 (c25-2 / have-concession-91
                    :ARG1 (c25-1 / feel-01
                                 :ARG0 (c25-8 / i)
                                 :ARG1 (c25-10 / you)
                                 :ARG1-of (c25-6 / real-04)))
       :snt2 (c25-5 / take-01
                    :ARG0 (c25-3 / i)
                    :ARG1 (c25-7 / bullet)
                    :time (c25-0 / before
                                 :op1 (c25-4 / inject-01))))

# ::snt Bra.... I was Told to stay off twitter because its going to worsen my anxiety and that person was right Not the story I wanted to hear
# ::tokens ["Bra", "....", "I", "was", "Told", "to", "stay", "off", "twitter", "because", "its", "going", "to", "worsen", "my", "anxiety", "and", "that", "person", "was", "right", "Not", "the", "story", "I", "wanted", "to", "hear"]
# ::lemmas ["bra", "....", "i", "be", "tell", "to", "stay", "off", "twitter", "because", "its", "go", "to", "worsen", "my", "anxiety", "and", "that", "person", "be", "right", "not", "the", "story", "i", "want", "to", "hear"]
(c26-0 / say-01
       :ARG1 (c26-1 / and
                    :op1 (c26-10 / tell-01
                                 :ARG1 (c26-14 / stay-01
                                               :ARG1 (c26-15 / i)
                                               :ARG3 (c26-8 / off
                                                            :medium (c26-12 / publication
                                                                            :name (c26-16 / name
                                                                                          :op1 "Twitter")))
                                               :ARG1-of (c26-2 / cause-01
                                                               :ARG0 (c26-3 / worsen-01
                                                                            :ARG0 c26-14
                                                                            :ARG1 (c26-17 / anxiety
                                                                                          :poss c26-15))))
                                 :ARG2 c26-15)
                    :op2 (c26-11 / right-06
                                 :ARG1 (c26-9 / person
                                              :mod (c26-4 / that)))
                    :op3 (c26-7 / story
                                :ARG1-of (c26-6 / hear-01
                                                :ARG0 c26-15
                                                :ARG1-of (c26-5 / want-01
                                                                :ARG0 c26-15))
                                :polarity -))
       :ARG2 c26-9
       :name (c26-13 / name
                     :op1 "Bra"))

# ::snt I had colleagues comfort me during that ordeal and I still put up a moerse performance. In the end I only almost fainted times because I'm a man's man...
# ::tokens ["I", "had", "colleagues", "comfort", "me", "during", "that", "ordeal", "and", "I", "still", "put", "up", "a", "moerse", "performance", ".", "In", "the", "end", "I", "only", "almost", "fainted", "times", "because", "I", "'m", "a", "man", "'s", "man", "..."]
# ::lemmas ["i", "have", "colleague", "comfort", "i", "during", "that", "ordeal", "and", "i", "still", "put", "up", "a", "moerse", "performance", ".", "in", "the", "end", "i", "only", "almost", "faint", "time", "because", "i", "be", "a", "man", "'s", "man", "..."]
(c27-6 / multi-sentence
       :snt1 (c27-13 / and
                     :op1 (c27-2 / comfort-01
                                 :ARG0 (c27-19 / person
                                               :ARG0-of (c27-16 / have-rel-role-91
                                                                :ARG1 (c27-1 / i)
                                                                :ARG2 (c27-0 / colleague)))
                                 :ARG1 c27-1
                                 :time (c27-4 / ordeal
                                              :mod (c27-5 / that)))
                     :op2 (c27-18 / put-up-11
                                  :ARG0 c27-1
                                  :ARG1 (c27-10 / perform-01
                                                :ARG0 c27-1
                                                :mod (c27-15 / moerse))
                                  :mod (c27-9 / still)))
       :snt2 (c27-14 / fainted-01
                     :ARG1 (c27-11 / i)
                     :mod (c27-7 / almost)
                     :time (c27-8 / end-01)
                     :ARG1-of (c27-3 / cause-01
                                     :ARG0 (c27-12 / man
                                                   :poss c27-11))
                     :mod (c27-17 / only)))

# ::snt I'm the same
# ::tokens ["I", "'m", "the", "same"]
# ::lemmas ["i", "be", "the", "same"]
(c28-0 / same-01
       :ARG1 (c28-1 / i))
