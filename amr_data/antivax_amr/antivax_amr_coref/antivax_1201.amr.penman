# ::snt Yet anyone who dies writhing days of testing positive is said to have died of covid.
# ::tokens ["Yet", "anyone", "who", "dies", "writhing", "days", "of", "testing", "positive", "is", "said", "to", "have", "died", "of", "covid", "."]
# ::lemmas ["yet", "anyone", "who", "die", "writhe", "day", "of", "testing", "positive", "be", "say", "to", "have", "die", "of", "covid", "."]
(c1-7 / have-concession-91
      :ARG1 (c1-0 / say-01
                  :ARG1 (c1-1 / die-01
                              :ARG1 (c1-2 / anyone
                                          :ARG1-of (c1-11 / die-01
                                                          :ARG1-of (c1-4 / writhing-00
                                                                         :duration (c1-12 / multiple
                                                                                          :op1 (c1-9 / temporal-quantity
                                                                                                     :unit (c1-5 / day)
                                                                                                     :quant 1)))
                                                          :time (c1-6 / test-01
                                                                      :ARG2 (c1-10 / positive))))
                              :ARG1-of (c1-3 / cause-01
                                             :ARG0 (c1-8 / product
                                                         :name (c1-13 / name
                                                                      :op1 " covid"))))))

# ::snt Sure. Lets have more elderly die then in order to establish causation
# ::tokens ["Sure", ".", "Lets", "have", "more", "elderly", "die", "then", "in", "order", "to", "establish", "causation"]
# ::lemmas ["sure", ".", "let", "have", "more", "elderly", "die", "then", "in", "order", "to", "establish", "causation"]
(c2-10 / multi-sentence
       :snt1 (c2-0 / sure-02)
       :snt2 (c2-5 / have-04
                   :ARG0 (c2-3 / we)
                   :ARG1 (c2-1 / die-01
                               :ARG1 (c2-9 / person
                                           :mod (c2-11 / elderly)
                                           :ARG1-of (c2-8 / have-quant-91
                                                          :ARG3 (c2-2 / more))))
                   :purpose (c2-6 / establish-01
                                  :ARG0 c2-3
                                  :ARG1 (c2-4 / causation))
                   :mod (c2-7 / then)
                   :mode imperative))

# ::snt Is ADE the cause?
# ::tokens ["Is", "ADE", "the", "cause", "?"]
# ::lemmas ["be", "ADE", "the", "cause", "?"]
(c3-2 / cause-01
      :ARG0 (c3-0 / affirmative-action)
      :polarity (c3-1 / amr-unknown))

# ::snt Do vaccines used by UK kill? Without much room for doubt!
# ::tokens ["Do", "vaccines", "used", "by", "UK", "kill", "?", "Without", "much", "room", "for", "doubt", "!"]
# ::lemmas ["do", "vaccine", "use", "by", "UK", "kill", "?", "without", "much", "room", "for", "doubt", "!"]
(c4-8 / multi-sentence
      :snt1 (c4-9 / kill-01
                  :polarity (c4-1 / amr-unknown)
                  :ARG0 (c4-5 / vaccine
                              :ARG1-of (c4-4 / use-01
                                             :ARG0 (c4-2 / country
                                                         :name (c4-7 / name
                                                                     :op1 "UK")))))
      :snt2 (c4-6 / room
                  :purpose (c4-0 / doubt-01)
                  :quant (c4-3 / much)
                  :polarity -))
