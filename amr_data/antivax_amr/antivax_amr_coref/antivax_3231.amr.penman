# ::snt i had to lie obviously
# ::tokens ["i", "had", "to", "lie", "obviously"]
# ::lemmas ["i", "have", "to", "lie", "obviously"]
(c1-0 / obligate-01
      :ARG1 (c1-3 / i)
      :ARG2 (c1-2 / lie-08
                  :ARG0 c1-3)
      :ARG1-of (c1-1 / obvious-01))

# ::snt as u should!!
# ::tokens ["as", "u", "should", "!", "!"]
# ::lemmas ["as", "u", "should", "!", "!"]
(c2-1 / recommend-01
      :ARG2 (c2-0 / you))

# ::snt ayeeee
# ::tokens ["ayeeee"]
# ::lemmas ["ayeeee"]
(c3-0 / ayee
      :mode expressive)

# ::snt thanks g
# ::tokens ["thanks", "g"]
# ::lemmas ["thank", "g"]
(c4-1 / thank-01
      :ARG1 (c4-0 / person
                  :name (c4-2 / name
                              :op1 "g")))

# ::snt W Roli Flores
# ::tokens ["W", "Roli", "Flores"]
# ::lemmas ["W", "Roli", "flore"]
(c5-0 / person
      :name (c5-1 / name
                  :op1 "W"
                  :op2 "Roli"
                  :op3 "Flores"))

# ::snt W
# ::tokens ["W"]
# ::lemmas ["w"]
(c6-0 / person
      :name (c6-1 / name
                  :op1 "W"))

# ::snt Wovid waccine
# ::tokens ["Wovid", "waccine"]
# ::lemmas ["Wovid", "waccine"]
(c7-0 / waccine
      :mod (c7-1 / wovid))

# ::snt W
# ::tokens ["W"]
# ::lemmas ["w"]
(c8-0 / person
      :name (c8-1 / name
                  :op1 "W"))

# ::snt W
# ::tokens ["W"]
# ::lemmas ["w"]
(c9-0 / person
      :name (c9-1 / name
                  :op1 "W"))

# ::snt W
# ::tokens ["W"]
# ::lemmas ["w"]
(c10-0 / person
       :name (c10-1 / name
                    :op1 "W"))

# ::snt hope so too
# ::tokens ["hope", "so", "too"]
# ::lemmas ["hope", "so", "too"]
(c11-2 / hope-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-0 / so)
       :mod (c11-3 / too))
