# ::snt Give it to the Superior Logic fighters
# ::tokens ["Give", "it", "to", "the", "Superior", "Logic", "fighters"]
# ::lemmas ["give", "it", "to", "the", "Superior", "Logic", "fighter"]
(c1-3 / give-01
      :ARG0 (c1-6 / you)
      :ARG1 (c1-4 / it)
      :ARG2 (c1-2 / person
                  :ARG0-of (c1-0 / fight-01)
                  :mod (c1-1 / company
                             :name (c1-5 / name
                                         :op1 "Superior"
                                         :op2 "Logic")))
      :mode imperative)

# ::snt Bayeke. Kunini sisho. Let them brace themselves.
# ::tokens ["Bayeke", ".", "Kunini", "sisho", ".", "Let", "them", "brace", "themselves", "."]
# ::lemmas ["Bayeke", ".", "Kunini", "sisho", ".", "let", "they", "brace", "themselves", "."]
(c2-6 / multi-sentence
      :snt1 (c2-5 / person
                  :name (c2-7 / name
                              :op1 "Bayeke"))
      :snt2 (c2-0 / person
                  :name (c2-2 / name
                              :op1 "Kunini"
                              :op2 "Sisho"))
      :snt3 (c2-3 / let-01
                  :ARG0 (c2-8 / you)
                  :ARG1 (c2-4 / brace-01
                              :ARG0 (c2-1 / they
                                          :ARG1-of c2-4))
                  :mode imperative))

# ::snt Less social grants to be paid so More money to be looted by thd thieves
# ::tokens ["Less", "social", "grants", "to", "be", "paid", "so", "More", "money", "to", "be", "looted", "by", "thd", "thieves"]
# ::lemmas ["less", "social", "grant", "to", "be", "pay", "so", "more", "money", "to", "be", "loot", "by", "thd", "thief"]
(c4-1 / cause-01
      :ARG0 (c4-8 / pay-01
                  :ARG1 (c4-5 / less)
                  :ARG3 (c4-7 / grant-01
                              :ARG2 (c4-0 / society)))
      :ARG1 (c4-6 / loot-01
                  :ARG0 (c4-3 / person
                              :ARG0-of (c4-4 / thieve-01))
                  :ARG1 (c4-9 / money
                              :mod (c4-2 / more))))

# ::snt Nonsense of people
# ::tokens ["Nonsense", "of", "people"]
# ::lemmas ["nonsense", "of", "people"]
(c5-0 / sense-02
      :ARG1 (c5-1 / person)
      :polarity -)

# ::snt This man's mission is to destroy humanity
# ::tokens ["This", "man", "'s", "mission", "is", "to", "destroy", "humanity"]
# ::lemmas ["this", "man", "'s", "mission", "be", "to", "destroy", "humanity"]
(c6-4 / mission-01
      :ARG0 (c6-1 / man
                  :mod (c6-3 / this))
      :ARG1 (c6-0 / destroy-01
                  :ARG0 c6-1
                  :ARG1 (c6-2 / humanity)))

# ::snt Why do you stress so much, no one said you must take the vaccine. Leave them to those who believe in them
# ::tokens ["Why", "do", "you", "stress", "so", "much", ",", "no", "one", "said", "you", "must", "take", "the", "vaccine", ".", "Leave", "them", "to", "those", "who", "believe", "in", "them"]
# ::lemmas ["why", "do", "you", "stress", "so", "much", ",", "no", "one", "say", "you", "must", "take", "the", "vaccine", ".", "leave", "they", "to", "those", "who", "believe", "in", "they"]
(c8-14 / multi-sentence
       :snt1 (c8-2 / cause-01
                   :ARG0 (c8-1 / amr-unknown)
                   :ARG1 (c8-0 / stress-02
                               :ARG0 (c8-16 / you)
                               :ARG1-of (c8-5 / have-quant-91
                                              :ARG2 (c8-3 / much)
                                              :ARG3 (c8-12 / so))))
       :snt2 (c8-6 / say-01
                   :ARG0 (c8-15 / no-one)
                   :ARG1 (c8-8 / obligate-01
                               :ARG1 (c8-17 / you)
                               :ARG2 (c8-9 / take-01
                                           :ARG0 c8-17
                                           :ARG1 (c8-7 / vaccine))))
       :snt3 (c8-10 / leave-02
                    :ARG1 (c8-4 / they)
                    :ARG2 (c8-13 / person
                                 :ARG0-of (c8-11 / believe-01
                                                 :ARG1 c8-4))))

# ::snt With u understanding and help they can realize this Nonsense
# ::tokens ["With", "u", "understanding", "and", "help", "they", "can", "realize", "this", "Nonsense"]
# ::lemmas ["with", "u", "understanding", "and", "help", "they", "can", "realize", "this", "nonsense"]
(c10-7 / possible-01
       :ARG1 (c10-6 / realize-01
                    :ARG0 (c10-5 / they)
                    :ARG1 (c10-0 / sense-02
                                 :ARG1 (c10-2 / this)
                                 :polarity -))
       :condition (c10-1 / and
                         :op1 (c10-4 / understand-01
                                     :ARG0 (c10-8 / you))
                         :op2 (c10-3 / help-01
                                     :ARG0 c10-8)))

# ::snt But Cyril decided to kill us all ....all the ANC delegates must pay for this Nonsense..no vote for me
# ::tokens ["But", "Cyril", "decided", "to", "kill", "us", "all", "....", "all", "the", "ANC", "delegates", "must", "pay", "for", "this", "Nonsense", "..", "no", "vote", "for", "me"]
# ::lemmas ["but", "Cyril", "decide", "to", "kill", "we", "all", "....", "all", "the", "ANC", "delegate", "must", "pay", "for", "this", "Nonsense", "..", "no", "vote", "for", "i"]
(c11-15 / multi-sentence
        :snt1 (c11-3 / contrast-01
                     :ARG2 (c11-0 / decide-01
                                  :ARG0 (c11-14 / person
                                                :name (c11-16 / name
                                                              :op1 "Cyril"))
                                  :ARG1 (c11-2 / kill-01
                                               :ARG0 c11-14
                                               :ARG1 (c11-4 / we
                                                            :mod (c11-1 / all)))))
        :snt2 (c11-10 / obligate-01
                      :ARG1 (c11-11 / person
                                    :ARG2-of (c11-5 / delegate-01)
                                    :mod (c11-6 / political-party
                                                :name (c11-13 / name
                                                              :op1 "ANC"))
                                    :mod c11-1))
        :ARG2 (c11-7 / pay-01
                     :ARG0 c11-11
                     :ARG3 (c11-12 / this))
        :snt3 (c11-9 / vote-01
                     :ARG0 (c11-8 / i)
                     :polarity -))

# ::snt Most are still asleep, believing everything the media and politicians are saying.
# ::tokens ["Most", "are", "still", "asleep", ",", "believing", "everything", "the", "media", "and", "politicians", "are", "saying", "."]
# ::lemmas ["most", "be", "still", "asleep", ",", "believe", "everything", "the", "medium", "and", "politician", "be", "say", "."]
(c12-1 / and
       :op1 (c12-0 / sleep-01
                   :ARG0 (c12-7 / person
                                :mod (c12-8 / most))
                   :mod (c12-6 / still))
       :op2 (c12-5 / believe-01
                   :ARG0 c12-7
                   :ARG1 (c12-10 / everything
                                 :ARG1-of (c12-3 / say-01
                                                 :ARG0 (c12-9 / and
                                                              :op1 (c12-2 / media)
                                                              :op2 (c12-4 / politician))))))

# ::snt Jesus Christ! You'll be % right: correct if you add this fellow below to that grouo of three to make four! It's the right honest full truth!
# ::tokens ["Jesus", "Christ", "!", "You", "'ll", "be", "%", "right", ":", "correct", "if", "you", "add", "this", "fellow", "below", "to", "that", "grouo", "of", "three", "to", "make", "four", "!", "It", "'s", "the", "right", "honest", "full", "truth", "!"]
# ::lemmas ["Jesus", "Christ", "!", "you", "'ll", "be", "%", "right", ":", "correct", "if", "you", "add", "this", "fellow", "below", "to", "that", "grouo", "of", "three", "to", "make", "four", "!", "it", "be", "the", "right", "honest", "full", "truth", "!"]
(c13-7 / multi-sentence
       :snt1 (c13-21 / person
                     :name (c13-8 / name
                                  :op1 "Jesus"
                                  :op2 "Christ")
                     :mode expressive)
       :snt2 (c13-5 / right-06
                    :ARG1 (c13-12 / you)
                    :degree (c13-19 / percentage))
       :snt3 (c13-1 / correct-02
                    :ARG1 (c13-14 / add-02
                                  :ARG0 (c13-13 / you)
                                  :ARG1 (c13-16 / fellow
                                                :mod (c13-4 / this))
                                  :ARG2 (c13-20 / below)
                                  :prep-to (c13-6 / grouo
                                                  :mod (c13-2 / that)
                                                  :consist-of (c13-9 / thing
                                                                     :quant 3)
                                                  :ARG1-of (c13-17 / make-01
                                                                   :ARG2 (c13-10 / thing
                                                                                 :quant 4)))))
       :snt4 (c13-15 / true-01
                     :ARG1 (c13-0 / it)
                     :ARG1-of (c13-3 / right-06)
                     :mod (c13-11 / full)
                     :ARG1-of (c13-18 / honest-01)))

# ::snt This house negro said on the April2020,he'll fight tirelessly to make sure that New Age Agender is effected... I don't know why z he sleeping nw
# ::tokens ["This", "house", "negro", "said", "on", "the", "April2020,he'll", "fight", "tirelessly", "to", "make", "sure", "that", "New", "Age", "Agender", "is", "effected", "...", "I", "do", "n't", "know", "why", "z", "he", "sleeping", "nw"]
# ::lemmas ["this", "house", "negro", "say", "on", "the", "April2020,he'll", "fight", "tirelessly", "to", "make", "sure", "that", "New", "Age", "Agender", "be", "effect", "...", "i", "do", "not", "know", "why", "z", "he", "sleep", "nw"]
(c15-10 / multi-sentence
        :snt1 (c15-13 / say-01
                      :ARG0 (c15-11 / negro
                                    :mod (c15-16 / house)
                                    :mod (c15-8 / this))
                      :ARG1 (c15-15 / fight-01
                                    :ARG0 c15-11
                                    :ARG2 (c15-12 / ensure-01
                                                  :ARG0 c15-11
                                                  :ARG1 (c15-14 / affect-01
                                                                :ARG1 (c15-18 / person
                                                                              :ARG0-of (c15-2 / have-org-role-91
                                                                                              :ARG1 (c15-7 / organization
                                                                                                           :name (c15-1 / name
                                                                                                                        :op1 "New"
                                                                                                                        :op2 "Age"
                                                                                                                        :op3 "Agender"))))))
                                    :manner (c15-9 / relentless))
                      :time (c15-0 / date-entity
                                   :month 4
                                   :year 2020))
        :snt2 (c15-19 / know-01
                      :ARG0 (c15-3 / i)
                      :ARG1 (c15-6 / thing
                                   :ARG0-of (c15-5 / cause-01
                                                   :ARG1 (c15-17 / sleep-01
                                                                 :ARG0 (c15-4 / he))))
                      :polarity -))

# ::snt Baba Khabazela, along your scientist Kareem, is this name Corona a new name to you? You never head before in 's? Why this didnt kill people before...Why it kills after decades...what proof do you have, have you done a post-mortem ...why not guys?
# ::tokens ["Baba", "Khabazela", ",", "along", "your", "scientist", "Kareem", ",", "is", "this", "name", "Corona", "a", "new", "name", "to", "you", "?", "You", "never", "head", "before", "in", "'s", "?", "Why", "this", "did", "nt", "kill", "people", "before", "...", "Why", "it", "kills", "after", "decades", "...", "what", "proof", "do", "you", "have", ",", "have", "you", "done", "a", "post", "-", "mortem", "...", "why", "not", "guys", "?"]
# ::lemmas ["Baba", "Khabazela", ",", "along", "your", "scientist", "Kareem", ",", "be", "this", "name", "Corona", "a", "new", "name", "to", "you", "?", "you", "never", "head", "before", "in", "be", "?", "why", "this", "do", "not", "kill", "people", "before", "...", "why", "it", "kill", "after", "decades", "...", "what", "proof", "do", "you", "have", ",", "have", "you", "do", "a", "post", "-", "mortem", "...", "why", "not", "guy", "?"]
(c16-15 / multi-sentence
        :snt1 (c16-16 / name
                      :polarity (c16-30 / amr-unknown)
                      :domain (c16-5 / name
                                     :name (c16-23 / name
                                                   :op1 "Corona")
                                     :ARG1-of (c16-7 / name-01
                                                     :ARG2 (c16-36 / person
                                                                   :name (c16-13 / name
                                                                                 :op1 "Baba"
                                                                                 :op2 "Khabazela")))
                                     :mod (c16-17 / along
                                                  :op1 (c16-19 / scientist
                                                               :name (c16-33 / name
                                                                             :op1 "Kareem")
                                                               :poss c16-36)))
                      :ARG1-of (c16-29 / new-01)
                      :beneficiary c16-36)
        :snt2 (c16-32 / head-02
                      :ARG0 (c16-26 / you)
                      :time (c16-18 / ever)
                      :time (c16-35 / before)
                      :time (c16-28 / before)
                      :polarity -)
        :snt3 (c16-8 / cause-01
                     :ARG0 (c16-1 / amr-unknown)
                     :ARG1 (c16-37 / kill-01
                                   :ARG0 (c16-12 / this)
                                   :ARG1 (c16-34 / person)
                                   :time (c16-21 / before)))
        :snt4 (c16-0 / cause-01
                     :ARG0 (c16-38 / amr-unknown)
                     :ARG1 (c16-6 / kill-01
                                  :ARG0 c16-12
                                  :ARG1 (c16-22 / person)
                                  :time (c16-4 / after
                                               :op1 (c16-31 / multiple
                                                            :op1 (c16-9 / temporal-quantity
                                                                        :unit (c16-2 / decade)
                                                                        :quant 1)))))
        :snt5 (c16-20 / prove-01
                      :ARG0 (c16-27 / you)
                      :ARG1 (c16-25 / do-02
                                    :ARG0 c16-27
                                    :ARG1 (c16-24 / autopsy-01
                                                  :ARG0 c16-27
                                                  :mod (c16-3 / post))))
        :snt6 (c16-10 / cause-01
                      :ARG0 (c16-11 / amr-unknown)
                      :ARG1 (c16-14 / guy
                                    :polarity -)))

# ::snt The people would will be getting huge bonus checks once they vaccinate the whole country.
# ::tokens ["The", "people", "would", "will", "be", "getting", "huge", "bonus", "checks", "once", "they", "vaccinate", "the", "whole", "country", "."]
# ::lemmas ["the", "people", "would", "will", "be", "get", "huge", "bonus", "check", "once", "they", "vaccinate", "the", "whole", "country", "."]
(c17-6 / get-01
       :ARG0 (c17-7 / person)
       :ARG1 (c17-1 / check
                    :mod (c17-8 / bonus)
                    :mod (c17-3 / huge))
       :time (c17-4 / vaccinate-01
                    :ARG0 (c17-5 / they)
                    :ARG1 (c17-0 / country
                                 :mod (c17-2 / whole))))

# ::snt For sure
# ::tokens ["For", "sure"]
# ::lemmas ["for", "sure"]
(c18-0 / sure-02)

# ::snt Prove me wrong!
# ::tokens ["Prove", "me", "wrong", "!"]
# ::lemmas ["prove", "i", "wrong", "!"]
(c19-1 / prove-01
       :ARG0 (c19-2 / you)
       :ARG1 (c19-0 / wrong-04
                    :ARG1 c19-2)
       :ARG2 (c19-3 / i)
       :mode imperative)
