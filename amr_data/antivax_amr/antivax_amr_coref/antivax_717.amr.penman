# ::snt A MORE WRETCHED HIVE OF SCUM AND VILLAINY SOMETHING SOMETHING
# ::tokens ["A", "MORE", "WRETCHED", "HIVE", "OF", "SCUM", "AND", "VILLAINY", "SOMETHING", "SOMETHING"]
# ::lemmas ["a", "more", "wretched", "hive", "of", "SCUM", "and", "villainy", "something", "something"]
(c1-2 / and
      :op1 (c1-3 / hunger-01
                 :ARG1 (c1-0 / society)
                 :ARG1-of (c1-5 / have-quant-91
                                :ARG3 (c1-6 / more)))
      :op2 (c1-4 / talk-01
                 :ARG1 (c1-1 / something)))

# ::snt literally anywhere on Tatooine.
# ::tokens ["literally", "anywhere", "on", "Tatooine", "."]
# ::lemmas ["literally", "anywhere", "on", "Tatooine", "."]
(c2-0 / anywhere
      :location (c2-2 / location
                      :name (c2-1 / name
                                  :op1 "Tatooine"))
      :mod (c2-3 / literal))

# ::snt Person : "Is it just tiny razor blades?"Person : "Nope."Person : "Is it poison?"Person : "Everything is poison..."Person : Ingests the whole pile through every possible means.
# ::tokens ["Person", ":", "\"", "Is", "it", "just", "tiny", "razor", "blades?\"Person", ":", "\"", "Nope", ".", "\"Person", ":", "\"", "Is", "it", "poison?\"Person", ":", "\"", "Everything", "is", "poison", "...", "\"Person", ":", "Ingests", "the", "whole", "pile", "through", "every", "possible", "means", "."]
# ::lemmas ["person", ":", "\"", "be", "it", "just", "tiny", "razor", "blades?\"person", ":", "\"", "nope", ".", "\"person", ":", "\"", "be", "it", "poison?\"person", ":", "\"", "everything", "be", "poison", "...", "\"person", ":", "ingest", "the", "whole", "pile", "through", "every", "possible", "mean", "."]
(c3-3 / multi-sentence
      :snt1 (c3-5 / say-01
                  :ARG0 (c3-19 / person)
                  :ARG1 (c3-15 / have-polarity-91
                               :ARG1 (c3-1 / it)
                               :ARG2 -)
                  :polarity (c3-12 / amr-unknown))
      :snt2 (c3-18 / say-01
                   :ARG0 (c3-17 / person)
                   :ARG1 c3-15
                   :ARG1 (c3-7 / poison-02
                               :ARG0 (c3-8 / it))
                   :ARG2 -)
      :snt3 (c3-9 / say-01
                  :ARG0 (c3-6 / person)
                  :ARG1 (c3-0 / poison-02
                              :ARG0 (c3-4 / everything)))
      :snt4 (c3-10 / ingest-00
                   :ARG0 (c3-11 / person)
                   :ARG1 (c3-20 / pile
                                :mod (c3-2 / whole))
                   :manner (c3-13 / means
                                  :mod (c3-16 / every)
                                  :ARG1-of (c3-14 / possible-01))))

# ::snt Or in a parking lot, or in line at the club, or
# ::tokens ["Or", "in", "a", "parking", "lot", ",", "or", "in", "line", "at", "the", "club", ",", "or"]
# ::lemmas ["or", "in", "a", "parking", "lot", ",", "or", "in", "line", "at", "the", "club", ",", "or"]
(c4-1 / or
      :op1 (c4-4 / be-located-at-91
                 :ARG2 (c4-2 / lot
                             :ARG2-of (c4-5 / park-01)))
      :op2 (c4-3 / line-up-02
                 :ARG1 (c4-0 / club)))

# ::snt Or off the back of a dive bar toilet that has no door on the stall and ice being melted in a trough right next to you.
# ::tokens ["Or", "off", "the", "back", "of", "a", "dive", "bar", "toilet", "that", "has", "no", "door", "on", "the", "stall", "and", "ice", "being", "melted", "in", "a", "trough", "right", "next", "to", "you", "."]
# ::lemmas ["or", "off", "the", "back", "of", "a", "dive", "bar", "toilet", "that", "have", "no", "door", "on", "the", "stall", "and", "ice", "be", "melt", "in", "a", "trough", "right", "next", "to", "you", "."]
(c5-8 / or
      :op2 (c5-3 / and
                 :op1 (c5-7 / off
                            :op1 (c5-11 / back
                                        :part-of (c5-9 / toilet
                                                       :mod (c5-1 / bar
                                                                  :mod (c5-0 / dive))
                                                       :ARG0-of (c5-6 / have-03
                                                                      :ARG1 (c5-12 / door
                                                                                   :location (c5-2 / stall))
                                                                      :polarity -))))
                 :op2 (c5-13 / melt-01
                             :ARG1 (c5-4 / ice)
                             :location (c5-5 / trough)
                             :location (c5-14 / next-to
                                              :op1 (c5-15 / you)
                                              :mod (c5-10 / right)))))

# ::snt Esssspecially if you didn't even know what drug it was and you still did it
# ::tokens ["Esssspecially", "if", "you", "did", "n't", "even", "know", "what", "drug", "it", "was", "and", "you", "still", "did", "it"]
# ::lemmas ["esssspecially", "if", "you", "do", "not", "even", "know", "what", "drug", "it", "be", "and", "you", "still", "do", "it"]
(c6-4 / have-condition-91
      :ARG2 (c6-2 / and
                  :op1 (c6-7 / know-01
                             :ARG0 (c6-8 / you)
                             :ARG1 (c6-0 / drug
                                         :domain (c6-6 / it))
                             :mod (c6-9 / even)
                             :polarity -)
                  :op2 (c6-3 / do-02
                             :ARG0 c6-8
                             :ARG1 c6-0
                             :mod (c6-1 / still)))
      :mod (c6-5 / essential))
