# ::snt Stop. People will think this is real.
# ::tokens ["Stop", ".", "People", "will", "think", "this", "is", "real", "."]
# ::lemmas ["stop", ".", "people", "will", "think", "this", "be", "real", "."]
(c1-5 / multi-sentence
      :snt1 (c1-0 / stop-01
                  :ARG0 (c1-6 / you)
                  :mode imperative)
      :snt2 (c1-2 / think-01
                  :ARG0 (c1-4 / person)
                  :ARG1 (c1-3 / real-04
                              :ARG1 (c1-1 / this))))

# ::snt The G isnt working either.
# ::tokens ["The", "G", "is", "nt", "working", "either", "."]
# ::lemmas ["the", "g", "be", "not", "work", "either", "."]
(c2-0 / work-09
      :ARG1 (c2-2 / thing
                  :name (c2-1 / name
                              :op1 "G"))
      :mod (c2-3 / either)
      :polarity -)

# ::snt Based on the tweet before this they aren't co-operating.
# ::tokens ["Based", "on", "the", "tweet", "before", "this", "they", "are", "n't", "co", "-", "operating", "."]
# ::lemmas ["base", "on", "the", "tweet", "before", "this", "they", "be", "not", "co", "-", "operate", "."]
(c3-1 / cooperate-01
      :ARG0 (c3-4 / they)
      :ARG1-of (c3-5 / base-02
                     :ARG2 (c3-2 / thing
                                 :ARG1-of (c3-6 / tweet-01
                                                :time (c3-0 / before
                                                            :op1 (c3-3 / this)))))
      :polarity -)

# ::snt Unsure how the micro chip will react with my tin foil hat...
# ::tokens ["Unsure", "how", "the", "micro", "chip", "will", "react", "with", "my", "tin", "foil", "hat", "..."]
# ::lemmas ["unsure", "how", "the", "micro", "chip", "will", "react", "with", "my", "tin", "foil", "hat", "..."]
(c4-0 / sure-02
      :ARG1 (c4-5 / thing
                  :manner-of (c4-6 / react-01
                                   :ARG0 (c4-2 / chip
                                               :mod (c4-8 / micro))
                                   :ARG1 (c4-4 / hat
                                               :consist-of (c4-1 / foil
                                                                 :consist-of (c4-3 / tin))
                                               :poss (c4-7 / i))))
      :polarity -)
