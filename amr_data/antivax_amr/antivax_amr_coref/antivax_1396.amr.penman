# ::snt Well it is a capitalist system ...... Make money by all means, lose if you have to but always cheat - Dr. Barbara Sizemore
# ::tokens ["Well", "it", "is", "a", "capitalist", "system", "......", "Make", "money", "by", "all", "means", ",", "lose", "if", "you", "have", "to", "but", "always", "cheat", "-", "Dr.", "Barbara", "Sizemore"]
# ::lemmas ["well", "it", "be", "a", "capitalist", "system", "......", "make", "money", "you", "all", "mean", ",", "lose", "if", "you", "have", "to", "but", "always", "cheat", "-", "Dr.", "Barbara", "Sizemore"]
(c3-14 / multi-sentence
       :snt1 (c3-0 / system
                   :mod (c3-4 / capitalist)
                   :domain (c3-13 / it)
                   :mod (c3-5 / well))
       :snt2 (c3-1 / contrast-01
                   :ARG1 (c3-6 / make-05
                               :ARG0 (c3-16 / you)
                               :ARG1 (c3-7 / money)
                               :mod (c3-11 / by-all-means)
                               :mode imperative)
                   :ARG2 (c3-10 / lose-02
                                :ARG0 c3-16
                                :condition (c3-9 / obligate-01
                                                 :ARG1 c3-16
                                                 :ARG2 c3-6)
                                :mode imperative))
       :ARG2 (c3-8 / cheat-02
                   :ARG0 c3-16
                   :time (c3-3 / always)
                   :mode imperative)
       :ARG1-of (c3-12 / say-01
                       :ARG0 (c3-2 / doctor
                                   :name (c3-15 / name
                                                :op1 "Barbara"
                                                :op2 "Sizemore"))))

# ::snt They were just happy with the $40 they got paid ,no knowledge of what it entailed
# ::tokens ["They", "were", "just", "happy", "with", "the", "$", "40", "they", "got", "paid", ",", "no", "knowledge", "of", "what", "it", "entailed"]
# ::lemmas ["they", "be", "just", "happy", "with", "the", "$", "40", "they", "got", "pay", ",", "no", "knowledge", "of", "what", "it", "entail"]
(c4-1 / and
      :op1 (c4-3 / happy-01
                 :ARG0 (c4-7 / monetary-quantity
                             :unit (c4-0 / dollar)
                             :ARG1-of (c4-6 / pay-01
                                            :ARG2 (c4-4 / they
                                                        :ARG1-of c4-3))
                             :quant 40)
                 :mod (c4-5 / just))
      :op2 (c4-8 / know-01
                 :ARG0 c4-4
                 :ARG1 (c4-2 / thing
                             :ARG2-of (c4-9 / entail-01
                                            :ARG1 c4-7))
                 :polarity -))

# ::snt So what does this their cyril think bill gates thinks of him???
# ::tokens ["So", "what", "does", "this", "their", "cyril", "think", "bill", "gates", "thinks", "of", "him", "?", "?", "?"]
# ::lemmas ["so", "what", "do", "this", "their", "cyril", "think", "bill", "gate", "think", "of", "he", "?", "?", "?"]
(c5-5 / think-01
      :ARG0 (c5-1 / cyril
                  :poss (c5-2 / they))
      :ARG1 (c5-0 / amr-unknown)
      :ARG2 (c5-8 / think-01
                  :ARG0 (c5-6 / person
                              :name (c5-7 / name
                                          :op1 "Bill"
                                          :op2 "Gates"))
                  :ARG1 (c5-4 / this)
                  :ARG2 (c5-3 / he)))

# ::snt Even Bill Gates' father was also Euginist and those who don't get this Euginist are people who believe in race supremacy.
# ::tokens ["Even", "Bill", "Gates", "'", "father", "was", "also", "Euginist", "and", "those", "who", "do", "n't", "get", "this", "Euginist", "are", "people", "who", "believe", "in", "race", "supremacy", "."]
# ::lemmas ["even", "Bill", "Gates", "'", "father", "be", "also", "euginist", "and", "those", "who", "do", "not", "get", "this", "euginist", "be", "people", "who", "believe", "in", "race", "supremacy", "."]
(c6-1 / and
      :op1 (c6-13 / Euginist
                  :domain (c6-10 / person
                                 :ARG0-of (c6-4 / have-rel-role-91
                                                :ARG1 (c6-6 / person
                                                            :name (c6-11 / name
                                                                         :op1 "Bill"
                                                                         :op2 "Gates"))
                                                :ARG2 (c6-2 / father))
                                 :mod (c6-5 / even))
                  :mod (c6-12 / also))
      :op2 (c6-9 / believe-01
                 :ARG0 (c6-3 / person
                             :ARG0-of (c6-8 / get-01
                                            :ARG1 c6-13
                                            :polarity -))
                 :ARG1 (c6-0 / supremacy
                             :mod (c6-7 / race))))

# ::snt And humans are now consenting to that shit
# ::tokens ["And", "humans", "are", "now", "consenting", "to", "that", "shit"]
# ::lemmas ["and", "human", "be", "now", "consent", "to", "that", "shit"]
(c7-1 / consent-01
      :ARG0 (c7-2 / human)
      :ARG1 (c7-0 / shit
                  :mod (c7-3 / that))
      :time (c7-4 / now))

# ::snt They first tested this sh on rats &amp; monkeys &amp; it failed dismally.
# ::tokens ["They", "first", "tested", "this", "sh", "on", "rats", "&", "amp", ";", "monkeys", "&", "amp", ";", "it", "failed", "dismally", "."]
# ::lemmas ["they", "first", "test", "this", "sh", "on", "rat", "&", "amp", ";", "monkeys", "&", "amp", ";", "it", "fail", "dismally", "."]
(c8-3 / and
      :op1 (c8-7 / test-01
                 :ARG0 (c8-5 / they)
                 :ARG1 (c8-0 / shit
                             :mod (c8-10 / this))
                 :prep-on (c8-11 / and
                                 :op1 (c8-8 / rat)
                                 :op2 (c8-1 / amp)
                                 :op3 (c8-9 / monkey)
                                 :op4 c8-1))
      :ord (c8-6 / ordinal-entity
                 :value 1)
      :op2 (c8-4 / fail-01
                 :ARG1 c8-0
                 :manner (c8-2 / dismally)))

# ::snt Wasn't aware that they were already tests being conducted
# ::tokens ["Was", "n't", "aware", "that", "they", "were", "already", "tests", "being", "conducted"]
# ::lemmas ["be", "not", "aware", "that", "they", "be", "already", "test", "be", "conduct"]
(c9-4 / realize-01
      :ARG1 (c9-1 / conduct-01
                  :ARG1 (c9-3 / test-01
                              :ARG1 (c9-2 / they))
                  :time (c9-0 / already))
      :polarity -)

# ::snt Profits before safety in this vaccine, just like the others.
# ::tokens ["Profits", "before", "safety", "in", "this", "vaccine", ",", "just", "like", "the", "others", "."]
# ::lemmas ["profit", "before", "safety", "in", "this", "vaccine", ",", "just", "like", "the", "other", "."]
(c10-7 / profit-01
       :ARG1 (c10-0 / safe-01
                    :ARG2 (c10-2 / vaccine
                                 :mod (c10-4 / this)))
       :ARG1-of (c10-5 / resemble-01
                       :ARG1 (c10-1 / vaccine
                                    :mod (c10-3 / other))
                       :ARG2 c10-7)
       :mod (c10-6 / just))
