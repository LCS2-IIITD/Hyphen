# ::snt I'll get a third shot while experiencing ego death then smoke a hot cheeto LFG
# ::tokens ["I", "'ll", "get", "a", "third", "shot", "while", "experiencing", "ego", "death", "then", "smoke", "a", "hot", "cheeto", "LFG"]
# ::lemmas ["i", "'ll", "get", "a", "third", "shot", "while", "experience", "ego", "death", "then", "smoke", "a", "hot", "cheeto", "LFG"]
(c1-3 / and
      :op1 (c1-9 / get-01
                 :ARG0 (c1-11 / i)
                 :ARG1 (c1-0 / shoot-01
                             :ord (c1-7 / ordinal-entity
                                        :value 3))
                 :time (c1-12 / experience-01
                              :ARG0 c1-11
                              :ARG1 (c1-1 / die-01
                                          :ARG1 c1-11
                                          :mod (c1-6 / ego))))
      :op2 (c1-10 / smoke-02
                  :ARG0 c1-11
                  :ARG1 (c1-4 / cigarette
                              :mod (c1-2 / cheeto)
                              :ARG1-of (c1-5 / hot-05))
                  :time (c1-8 / then)))

# ::snt Put whatever in your body eat mdondalds snort sour skittles dust who gives a shit
# ::tokens ["Put", "whatever", "in", "your", "body", "eat", "mdondalds", "snort", "sour", "skittles", "dust", "who", "gives", "a", "shit"]
# ::lemmas ["put", "whatever", "in", "your", "body", "eat", "mdondald", "snort", "sour", "skittle", "dust", "who", "give", "a", "shit"]
(c2-1 / and
      :op1 (c2-8 / put-01
                 :ARG0 (c2-11 / you)
                 :ARG1 (c2-2 / whatever)
                 :ARG2 (c2-6 / body
                             :poss c2-11)
                 :mode imperative)
      :op2 (c2-12 / eat-01
                  :ARG0 c2-11
                  :ARG1 (c2-4 / product
                              :name (c2-10 / name
                                           :op1 "MDondalds")
                              :ARG0-of (c2-0 / snort-01
                                             :ARG1 (c2-7 / skittles
                                                         :mod (c2-3 / sour)))
                              :ARG0-of (c2-5 / give-16
                                             :ARG1 (c2-9 / shit-01)))
                  :mode imperative))

# ::snt For the record, I'm an advocate of both
# ::tokens ["For", "the", "record", ",", "I", "'m", "an", "advocate", "of", "both"]
# ::lemmas ["for", "the", "record", ",", "i", "be", "an", "advocate", "of", "both"]
(c3-2 / advocate-01
      :ARG0 (c3-1 / i)
      :ARG1 (c3-0 / both)
      :purpose (c3-3 / record-01))
