# ::snt Do need a greed and grab lesson, not in my make up like some
# ::tokens ["Do", "need", "a", "greed", "and", "grab", "lesson", ",", "not", "in", "my", "make", "up", "like", "some"]
# ::lemmas ["do", "need", "a", "greed", "and", "grab", "lesson", ",", "not", "in", "my", "make", "up", "like", "some"]
(c1-2 / contrast-01
      :ARG1 (c1-10 / need-01
                   :ARG0 (c1-8 / i)
                   :ARG1 (c1-5 / lesson
                               :topic (c1-1 / and
                                            :op1 (c1-7 / greed)
                                            :op2 (c1-11 / grab-01))))
      :ARG2 (c1-4 / need-01
                  :ARG0 c1-8
                  :ARG1 c1-5
                  :location (c1-9 / makeup
                                  :poss c1-8
                                  :ARG1-of (c1-6 / resemble-01
                                                 :ARG2 (c1-3 / makeup
                                                             :poss (c1-0 / some))))
                  :polarity -))

# ::snt No kidding
# ::tokens ["No", "kidding"]
# ::lemmas ["no", "kidding"]
(c2-0 / kid-01
      :polarity -)

# ::snt Stupid people. You all should have to live together in that slim in Mumbai soYou dont kill the rest of us.
# ::tokens ["Stupid", "people", ".", "You", "all", "should", "have", "to", "live", "together", "in", "that", "slim", "in", "Mumbai", "soYou", "do", "nt", "kill", "the", "rest", "of", "us", "."]
# ::lemmas ["stupid", "people", ".", "you", "all", "should", "have", "to", "live", "together", "in", "that", "slim", "in", "Mumbai", "soyou", "do", "not", "kill", "the", "rest", "of", "we", "."]
(c3-14 / multi-sentence
       :snt1 (c3-13 / person
                    :mod (c3-0 / stupid))
       :snt2 (c3-10 / recommend-01
                    :ARG1 (c3-8 / obligate-01
                                :ARG1 (c3-16 / you
                                             :mod (c3-2 / all))
                                :ARG2 (c3-11 / live-01
                                             :ARG0 c3-16
                                             :manner (c3-9 / together)
                                             :location (c3-12 / slim
                                                              :mod (c3-6 / that)
                                                              :location (c3-4 / city
                                                                              :name (c3-15 / name
                                                                                           :op1 "Mumbai")))
                                             :ARG0-of (c3-1 / cause-01
                                                            :ARG1 (c3-3 / kill-01
                                                                        :ARG0 c3-16
                                                                        :ARG1 (c3-7 / rest
                                                                                    :part-of (c3-5 / we))
                                                                        :polarity -))))))

# ::snt Your choice. Same as its my choice to accept inoculation if I'm offered.
# ::tokens ["Your", "choice", ".", "Same", "as", "its", "my", "choice", "to", "accept", "inoculation", "if", "I", "'m", "offered", "."]
# ::lemmas ["your", "choice", ".", "same", "as", "its", "my", "choice", "to", "accept", "inoculation", "if", "i", "be", "offer", "."]
(c4-7 / multi-sentence
      :snt1 (c4-3 / choose-01
                  :ARG0 (c4-8 / you))
      :snt2 (c4-0 / same-01
                  :ARG2 (c4-1 / choose-01
                              :ARG0 (c4-6 / i)
                              :ARG1 (c4-2 / accept-01
                                          :ARG0 c4-6
                                          :ARG1 (c4-4 / inoculate-01
                                                      :ARG1 c4-6)
                                          :condition (c4-5 / offer-01
                                                           :ARG1 c4-6
                                                           :ARG3 c4-2)))))

# ::snt Id pay to see that!
# ::tokens ["I", "d", "pay", "to", "see", "that", "!"]
# ::lemmas ["i", "d", "pay", "to", "see", "that", "!"]
(c5-1 / pay-01
      :ARG0 (c5-3 / i)
      :ARG3 (c5-0 / see-01
                  :ARG0 c5-3
                  :ARG1 (c5-2 / that)))

# ::snt Up to November the vaccine was tested on people.
# ::tokens ["Up", "to", "November", "the", "vaccine", "was", "tested", "on", "people", "."]
# ::lemmas ["up", "to", "November", "the", "vaccine", "be", "test", "on", "people", "."]
(c6-3 / test-01
      :ARG1 (c6-2 / vaccine)
      :ARG2 (c6-4 / person)
      :time (c6-1 / up-to
                  :op1 (c6-0 / date-entity
                             :month 11)))

# ::snt The cure may accidentally occur in such an environment. But to keep up with an evolving virus are similar odds, so yes. Reservations are required instincts.
# ::tokens ["The", "cure", "may", "accidentally", "occur", "in", "such", "an", "environment", ".", "But", "to", "keep", "up", "with", "an", "evolving", "virus", "are", "similar", "odds", ",", "so", "yes", ".", "Reservations", "are", "required", "instincts", "."]
# ::lemmas ["the", "cure", "may", "accidentally", "occur", "in", "such", "an", "environment", ".", "but", "to", "keep", "up", "with", "an", "evolving", "virus", "be", "similar", "odd", ",", "so", "yes", ".", "reservation", "be", "require", "instinct", "."]
(c7-13 / multi-sentence
       :snt1 (c7-12 / possible-01
                    :ARG1 (c7-3 / cure-01
                                :manner (c7-2 / accidental)
                                :location (c7-16 / environment
                                                 :mod (c7-0 / such))))
       :snt2 (c7-1 / contrast-01
                   :ARG2 (c7-9 / odds
                               :ARG1-of (c7-10 / resemble-01)
                               :domain (c7-14 / keep-up-05
                                              :ARG1 (c7-8 / virus
                                                          :ARG1-of (c7-5 / evolve-01)))
                               :ARG0-of (c7-6 / cause-01
                                              :ARG1 (c7-15 / yes))))
       :snt3 (c7-4 / instinct
                   :ARG1-of (c7-7 / require-01)
                   :domain (c7-11 / Reservate-01)))

# ::snt Good, no holiday or travel for you
# ::tokens ["Good", ",", "no", "holiday", "or", "travel", "for", "you"]
# ::lemmas ["good", ",", "no", "holiday", "or", "travel", "for", "you"]
(c8-0 / and
      :op1 (c8-4 / good-02)
      :op2 (c8-2 / or
                 :op1 (c8-1 / holiday-01
                            :ARG0 (c8-5 / you))
                 :op2 (c8-3 / travel-01
                            :ARG0 c8-5)
                 :polarity -))

# ::snt Problem is I dont care ... what you think or do .. just want to be sure my own are safe . You do what pleases you x
# ::tokens ["Problem", "is", "I", "do", "nt", "care", "...", "what", "you", "think", "or", "do", "..", "just", "want", "to", "be", "sure", "my", "own", "are", "safe", ".", "You", "do", "what", "pleases", "you", "x"]
# ::lemmas ["problem", "be", "i", "do", "not", "care", "...", "what", "you", "think", "or", "do", "..", "just", "want", "to", "be", "sure", "my", "own", "be", "safe", ".", "you", "do", "what", "please", "you", "x"]
(c9-7 / multi-sentence
      :snt1 (c9-20 / problem
                   :domain (c9-2 / care-01
                                 :ARG0 (c9-1 / i)
                                 :ARG1 (c9-5 / or
                                             :op1 (c9-6 / thing
                                                        :ARG1-of (c9-4 / think-01
                                                                       :ARG0 (c9-15 / you)))
                                             :op2 (c9-8 / thing
                                                        :ARG1-of (c9-0 / do-02
                                                                       :ARG0 c9-15)))
                                 :polarity -))
      :snt2 (c9-3 / want-01
                  :ARG0 (c9-12 / i)
                  :ARG1 (c9-9 / ensure-01
                              :ARG0 c9-12
                              :ARG1 (c9-10 / safe-01
                                           :ARG1 (c9-18 / person
                                                        :ARG1-of (c9-17 / own-01
                                                                        :ARG0 c9-12))))
                  :mod (c9-19 / just))
      :snt3 (c9-14 / do-02
                   :ARG0 (c9-16 / you)
                   :ARG1 (c9-13 / thing
                                :ARG1-of (c9-11 / please-01
                                                :ARG0 c9-16))))

# ::snt Will await your input then. But no input will be forthcoming I suspect. Of course not, because your input is just a sound bite. You are all wrapper, no candy!Prove me wrong!
# ::tokens ["Will", "await", "your", "input", "then", ".", "But", "no", "input", "will", "be", "forthcoming", "I", "suspect", ".", "Of", "course", "not", ",", "because", "your", "input", "is", "just", "a", "sound", "bite", ".", "You", "are", "all", "wrapper", ",", "no", "candy!Prove", "me", "wrong", "!"]
# ::lemmas ["will", "await", "your", "input", "then", ".", "but", "no", "input", "will", "be", "forthcoming", "i", "suspect", ".", "of", "course", "not", ",", "because", "your", "input", "be", "just", "a", "sound", "bite", ".", "you", "be", "all", "wrapper", ",", "no", "candy!prove", "i", "wrong", "!"]
(c10-9 / multi-sentence
       :snt1 (c10-18 / await-01
                     :ARG1 (c10-3 / i)
                     :ARG2 (c10-13 / input
                                   :poss (c10-15 / you))
                     :time (c10-8 / then))
       :snt2 (c10-4 / contrast-01
                    :ARG2 (c10-19 / forthcoming
                                  :ARG1 (c10-14 / input
                                                :poss c10-15)
                                  :ARG1-of (c10-12 / suspect-01
                                                   :ARG0 (c10-21 / i))
                                  :polarity -))
       :snt3 (c10-0 / cause-01
                    :ARG0 (c10-22 / bite
                                  :mod (c10-17 / sound)
                                  :mod (c10-23 / just)
                                  :domain c10-14)
                    :ARG1 (c10-20 / have-polarity-91
                                  :mod (c10-7 / of-course)
                                  :ARG2 -))
       :snt4 (c10-10 / and
                     :op1 (c10-5 / wrapper-00
                                 :ARG0 (c10-16 / you
                                               :mod (c10-1 / all)))
                     :op2 (c10-6 / candy
                                 :polarity -))
       :snt5 (c10-24 / prove-01
                     :ARG0 (c10-2 / you)
                     :ARG1 (c10-11 / wrong-04
                                   :ARG1 c10-2
                                   :ARG2 c10-21)
                     :mode imperative))

# ::snt Aaand? Take it as "perhaps I should look into this further!
# ::tokens ["Aaand", "?", "Take", "it", "as", "\"", "perhaps", "I", "should", "look", "into", "this", "further", "!"]
# ::lemmas ["Aaand", "?", "take", "it", "as", "\"", "perhaps", "i", "should", "look", "into", "this", "far", "!"]
(c11-9 / multi-sentence
       :snt1 (c11-0 / and
                    :op2 (c11-11 / amr-unknown))
       :snt2 (c11-4 / take-04
                    :ARG0 (c11-10 / you)
                    :ARG1 (c11-8 / it)
                    :ARG2 (c11-6 / possible-01
                                 :ARG1 (c11-5 / recommend-01
                                              :ARG1 (c11-7 / look-into-11
                                                           :ARG0 (c11-3 / i)
                                                           :ARG1 (c11-2 / this)
                                                           :degree (c11-1 / further))))
                    :mode imperative))

# ::snt Well put Sis
# ::tokens ["Well", "put", "Sis"]
# ::lemmas ["well", "put", "Sis"]
(c12-0 / say-01
       :ARG1 (c12-3 / put-02
                    :ARG1-of (c12-1 / well-09))
       :ARG2 (c12-2 / person
                    :name (c12-4 / name
                                 :op1 "Sis")))

# ::snt I couldn't have put it better myself, except that Bill Gates, the eugenics king is involved.
# ::tokens ["I", "could", "n't", "have", "put", "it", "better", "myself", ",", "except", "that", "Bill", "Gates", ",", "the", "eugenics", "king", "is", "involved", "."]
# ::lemmas ["i", "could", "not", "have", "put", "it", "well", "myself", ",", "except", "that", "Bill", "Gates", ",", "the", "eugenic", "king", "be", "involve", "."]
(c13-10 / possible-01
        :ARG1 (c13-7 / put-02
                     :ARG0 (c13-1 / i)
                     :ARG1 (c13-3 / it)
                     :ARG1-of (c13-8 / good-02
                                     :ARG2-of (c13-4 / have-degree-91
                                                     :ARG1 c13-7
                                                     :ARG3 (c13-11 / more))))
        :ARG2-of (c13-13 / except-01
                         :ARG1 (c13-5 / involve-01
                                      :ARG1 (c13-2 / person
                                                   :name (c13-12 / name
                                                                 :op1 "Bill"
                                                                 :op2 "Gates")
                                                   :ARG0-of (c13-9 / have-org-role-91
                                                                   :ARG2 (c13-0 / king
                                                                                :mod (c13-6 / eugenic))))))
        :polarity -)

# ::snt genuine lol
# ::tokens ["genuine", "lol"]
# ::lemmas ["genuine", "lol"]
(c14-0 / genuine
       :ARG2-of (c14-1 / laugh-01
                       :manner (c14-2 / loud)
                       :mode expressive))

# ::snt No problem be safe x
# ::tokens ["No", "problem", "be", "safe", "x"]
# ::lemmas ["no", "problem", "be", "safe", "x"]
(c15-0 / safe-01
       :ARG0 (c15-1 / problem
                    :polarity -))

# ::snt No problem be safe x
# ::tokens ["No", "problem", "be", "safe", "x"]
# ::lemmas ["no", "problem", "be", "safe", "x"]
(c16-0 / safe-01
       :ARG0 (c16-1 / problem
                    :polarity -))

# ::snt Cool! Bring it on!
# ::tokens ["Cool", "!", "Bring", "it", "on", "!"]
# ::lemmas ["cool", "!", "bring", "it", "on", "!"]
(c17-3 / multi-sentence
       :snt1 (c17-0 / cool-04)
       :snt2 (c17-1 / bring-on-06
                    :ARG0 (c17-4 / you)
                    :ARG1 (c17-2 / it)
                    :mode imperative))

# ::snt For sure at the vaccine is less propbematic than the horrible death Covid causes by pnumena. The very old should take the vaccine. As for the rest, the jury is out.
# ::tokens ["For", "sure", "at", "the", "vaccine", "is", "less", "propbematic", "than", "the", "horrible", "death", "Covid", "causes", "by", "pnumena", ".", "The", "very", "old", "should", "take", "the", "vaccine", ".", "As", "for", "the", "rest", ",", "the", "jury", "is", "out", "."]
# ::lemmas ["for", "sure", "at", "the", "vaccine", "be", "less", "propbematic", "than", "the", "horrible", "death", "Covid", "cause", "by", "pnumena", ".", "the", "very", "old", "should", "take", "the", "vaccine", ".", "as", "for", "the", "rest", ",", "the", "jury", "be", "out", "."]
(c18-8 / multi-sentence
       :snt1 (c18-10 / sure-02
                     :ARG1 (c18-13 / have-degree-91
                                   :ARG1 (c18-4 / vaccine)
                                   :ARG2 (c18-18 / propbematic)
                                   :ARG3 (c18-16 / less)
                                   :ARG4 (c18-0 / die-01
                                                :ARG1-of (c18-2 / cause-01
                                                                :ARG0 (c18-11 / disease
                                                                              :name (c18-9 / name
                                                                                           :op1 "Pnumena")))
                                                :mod (c18-1 / horrible))))
       :snt2 (c18-7 / recommend-01
                    :ARG1 (c18-6 / take-01
                                 :ARG0 (c18-15 / person
                                               :mod (c18-5 / old
                                                           :degree (c18-12 / very)))
                                 :ARG1 c18-4)
                    :snt3 (c18-14 / out-01
                                  :ARG1 (c18-17 / jury)
                                  :topic (c18-3 / rest))))

# ::snt week. Well, I'll bet you any money you were keeping an eye on her for that whole week - just in case. Regardless Sir, no respect, she is YEARS OLD! If she wants to play guinea pig for last few years then God bless her, but if she should suddenly die then, sorry, no surpise.
# ::tokens ["week", ".", "Well", ",", "I", "'ll", "bet", "you", "any", "money", "you", "were", "keeping", "an", "eye", "on", "her", "for", "that", "whole", "week", "-", "just", "in", "case", ".", "Regardless", "Sir", ",", "no", "respect", ",", "she", "is", "YEARS", "OLD", "!", "If", "she", "wants", "to", "play", "guinea", "pig", "for", "last", "few", "years", "then", "God", "bless", "her", ",", "but", "if", "she", "should", "suddenly", "die", "then", ",", "sorry", ",", "no", "surpise", "."]
# ::lemmas ["week", ".", "well", ",", "i", "'ll", "bet", "you", "any", "money", "you", "be", "keep", "an", "eye", "on", "she", "for", "that", "whole", "week", "-", "just", "in", "case", ".", "regardless", "Sir", ",", "no", "respect", ",", "she", "be", "YEARS", "old", "!", "if", "she", "want", "to", "play", "guinea", "pig", "for", "last", "few", "years", "then", "God", "bless", "she", ",", "but", "if", "she", "should", "suddenly", "die", "then", ",", "sorry", ",", "no", "surpise", "."]
(c19-18 / multi-sentence
        :snt1 (c19-36 / bet-01
                      :ARG0 (c19-7 / i)
                      :ARG1 (c19-32 / money
                                    :mod (c19-30 / any)
                                    :ARG1-of (c19-39 / keep-01
                                                     :ARG0 (c19-27 / you)
                                                     :ARG2 (c19-33 / have-eye-on-05
                                                                   :ARG0 c19-27
                                                                   :ARG1 (c19-23 / she)
                                                                   :duration (c19-11 / week
                                                                                     :mod (c19-22 / whole)
                                                                                     :mod (c19-14 / that)))))
                      :ARG2 c19-27
                      :mod (c19-6 / well)
                      :condition (c19-5 / have-polarity-91
                                        :ARG2 -))
        :snt2 (c19-15 / respect-01
                      :ARG0 c19-7
                      :polarity -)
        :ARG1 (c19-37 / she)
        :ARG1-of (c19-13 / regardless-91)
        :ARG1-of (c19-10 / cause-01
                         :ARG0 (c19-21 / age-01
                                       :ARG1 c19-37
                                       :ARG2 (c19-26 / multiple
                                                     :op1 (c19-12 / temporal-quantity
                                                                  :unit (c19-28 / year)
                                                                  :quant 1))))
        :snt3 (c19-0 / contrast-01
                     :ARG1 (c19-29 / bless-01
                                   :ARG0 (c19-38 / person
                                                 :name (c19-19 / name
                                                               :op1 "God"))
                                   :ARG1 (c19-25 / she)
                                   :condition (c19-3 / want-01
                                                     :ARG0 c19-25
                                                     :ARG1 (c19-34 / play-01
                                                                   :ARG0 c19-25
                                                                   :ARG1 (c19-16 / guinea-pig)
                                                                   :time (c19-24 / before
                                                                                 :op1 (c19-4 / now)
                                                                                 :duration (c19-31 / few
                                                                                                   :op1 (c19-20 / temporal-quantity
                                                                                                                :unit (c19-1 / year)
                                                                                                                :quant 1))))))
                     :ARG2 (c19-8 / sorry-01
                                  :ARG1 (c19-9 / surpise-01
                                               :polarity -)
                                  :condition (c19-17 / recommend-01
                                                     :ARG1 (c19-2 / die-01
                                                                  :ARG1 c19-25
                                                                  :manner (c19-35 / sudden))))))

# ::snt Also, why not put your money where your mouth is? How about divulging your name instead of "Hillman Minx Fan"...and take the vaccine! You could put us to shame by describing your positive experiences for the next years or so! Your sacrifice would be greatly appreciated.
# ::tokens ["Also", ",", "why", "not", "put", "your", "money", "where", "your", "mouth", "is", "?", "How", "about", "divulging", "your", "name", "instead", "of", "\"", "Hillman", "Minx", "Fan\"", "...", "and", "take", "the", "vaccine", "!", "You", "could", "put", "us", "to", "shame", "by", "describing", "your", "positive", "experiences", "for", "the", "next", "years", "or", "so", "!", "Your", "sacrifice", "would", "be", "greatly", "appreciated", "."]
# ::lemmas ["also", ",", "why", "not", "put", "your", "money", "where", "your", "mouth", "be", "?", "how", "about", "divulge", "your", "name", "instead", "of", "\"", "Hillman", "Minx", "Fan\"", "...", "and", "take", "the", "vaccine", "!", "you", "could", "put", "we", "to", "shame", "by", "describe", "your", "positive", "experience", "for", "the", "next", "years", "or", "so", "!", "your", "sacrifice", "would", "be", "greatly", "appreciate", "."]
(c20-16 / multi-sentence
        :snt1 (c20-36 / put-01
                      :ARG0 (c20-30 / you)
                      :ARG1 (c20-33 / money
                                    :poss c20-30)
                      :ARG2 (c20-32 / amr-unknown)
                      :location (c20-26 / mouth
                                        :part-of (c20-34 / person
                                                         :name (c20-17 / name
                                                                       :op1 "Hillman"
                                                                       :op2 "Minx"
                                                                       :op3 "Fan")))
                      :mod (c20-18 / also)
                      :ARG1-of (c20-8 / cause-01
                                      :ARG0 (c20-1 / amr-unknown))
                      :polarity -)
        :snt2 (c20-37 / and
                      :op1 (c20-0 / divulge-01
                                  :ARG0 (c20-31 / you)
                                  :ARG1 (c20-5 / name
                                               :poss c20-31)
                                  :ARG1-of (c20-6 / instead-of-91
                                                  :ARG2 (c20-29 / divulge-01
                                                                :ARG0 c20-31
                                                                :ARG1 (c20-27 / name
                                                                              :poss c20-31))))
                      :op2 (c20-13 / take-01
                                   :ARG0 c20-31
                                   :ARG1 (c20-11 / vaccine)))
        :snt3 (c20-24 / possible-01
                      :ARG1 (c20-22 / put-01
                                    :ARG0 (c20-2 / you)
                                    :ARG1 (c20-9 / we)
                                    :ARG2 (c20-20 / shame)
                                    :manner (c20-23 / describe-01
                                                    :ARG0 c20-2
                                                    :ARG1 (c20-19 / experience-01
                                                                  :ARG0 c20-2
                                                                  :mod (c20-3 / positive))
                                                    :time (c20-12 / or
                                                                  :op1 (c20-4 / after
                                                                              :op1 (c20-7 / now)
                                                                              :quant (c20-15 / multiple
                                                                                             :op1 (c20-10 / temporal-quantity
                                                                                                          :unit (c20-21 / year)
                                                                                                          :quant 1)))
                                                                  :op2 (c20-35 / so)))))
        :snt4 (c20-28 / appreciate-02
                      :ARG1 (c20-25 / sacrifice-01
                                    :ARG0 c20-2)
                      :degree (c20-14 / great)))

# ::snt Really. Then I look forward to seeing your name in some Scientific Publication under the heading "Lab Rats"...I, for one, will NOT be on that list of morons willing to let themselves being injected with some experimental Fanken-vaccine! Be my guest, but I will not appreciate them
# ::tokens ["Really", ".", "Then", "I", "look", "forward", "to", "seeing", "your", "name", "in", "some", "Scientific", "Publication", "under", "the", "heading", "\"", "Lab", "Rats\"", "...", "I", ",", "for", "one", ",", "will", "NOT", "be", "on", "that", "list", "of", "morons", "willing", "to", "let", "themselves", "being", "injected", "with", "some", "experimental", "Fanken", "-", "vaccine", "!", "Be", "my", "guest", ",", "but", "I", "will", "not", "appreciate", "them"]
# ::lemmas ["really", ".", "then", "i", "look", "forward", "to", "see", "your", "name", "in", "some", "Scientific", "Publication", "under", "the", "head", "\"", "Lab", "rats\"", "...", "i", ",", "for", "one", ",", "will", "not", "be", "on", "that", "list", "of", "moron", "willing", "to", "let", "themselves", "be", "inject", "with", "some", "experimental", "fanken", "-", "vaccine", "!", "be", "my", "guest", ",", "but", "i", "will", "not", "appreciate", "they"]
(c21-14 / multi-sentence
        :snt1 (c21-12 / real-04)
        :snt2 (c21-29 / look-forward-03
                      :ARG0 (c21-4 / i)
                      :ARG1 (c21-19 / see-01
                                    :ARG0 c21-4
                                    :ARG1 (c21-15 / name
                                                  :poss (c21-23 / you))
                                    :location (c21-31 / publication
                                                      :mod (c21-30 / science)
                                                      :mod (c21-21 / some)
                                                      :ARG1-of (c21-11 / title-01
                                                                       :ARG2 (c21-9 / rat
                                                                                    :mod (c21-3 / lab)))))
                      :time (c21-7 / then))
        :snt3 (c21-20 / include-91
                      :ARG1 (c21-22 / i)
                      :ARG2 (c21-0 / list-01
                                   :ARG1 (c21-26 / moron
                                                 :ARG0-of (c21-6 / will-02
                                                                 :ARG1 (c21-1 / let-01
                                                                              :ARG0 c21-26
                                                                              :ARG1 (c21-28 / inject-01
                                                                                            :ARG1 c21-26
                                                                                            :ARG2 (c21-10 / vaccine
                                                                                                          :mod (c21-25 / animal
                                                                                                                       :name (c21-2 / name
                                                                                                                                    :op1 "Fanken"))
                                                                                                          :mod (c21-18 / experiment-01))))))
                                   :mod (c21-16 / that))
                      :polarity -)
        :snt4 (c21-5 / contrast-01
                     :ARG1 (c21-27 / have-rel-role-91
                                   :ARG0 (c21-24 / you)
                                   :ARG1 (c21-8 / i)
                                   :ARG2 (c21-13 / guest))
                     :ARG2 (c21-17 / appreciate-02
                                   :ARG0 c21-8
                                   :ARG1 c21-26
                                   :polarity -)))

# ::snt Your point being? (other than you needing a rather obvious grammar/spelling course).
# ::tokens ["Your", "point", "being", "?", "(", "other", "than", "you", "needing", "a", "rather", "obvious", "grammar", "/", "spelling", "course", ")", "."]
# ::lemmas ["your", "point", "be", "?", "(", "other", "than", "you", "need", "a", "rather", "obvious", "grammar", "/", "spelling", "course", ")", "."]
(c22-7 / point-04
       :ARG0 (c22-9 / you)
       :ARG1 (c22-1 / amr-unknown)
       :ARG2-of (c22-10 / except-01
                        :ARG1 (c22-8 / need-01
                                     :ARG0 c22-9
                                     :ARG1 (c22-2 / course
                                                  :topic (c22-0 / slash
                                                                :op1 (c22-5 / grammar)
                                                                :op2 (c22-6 / spell-01))
                                                  :ARG1-of (c22-3 / obvious-01
                                                                  :degree (c22-4 / rather)))
                                     :polarity -)))

# ::snt You know, I'm just going to pretend that you're right.Seriously, what better way to pay respects to Darwin! You probably won't get this but somebody once said "Never interrupt an enemy while they are making a mistake"...A Dieu Bozo!
# ::tokens ["You", "know", ",", "I", "'m", "just", "going", "to", "pretend", "that", "you", "'re", "right", ".", "Seriously", ",", "what", "better", "way", "to", "pay", "respects", "to", "Darwin", "!", "You", "probably", "wo", "n't", "get", "this", "but", "somebody", "once", "said", "\"", "Never", "interrupt", "an", "enemy", "while", "they", "are", "making", "a", "mistake\"", "...", "A", "Dieu", "Bozo", "!"]
# ::lemmas ["you", "know", ",", "i", "be", "just", "go", "to", "pretend", "that", "you", "be", "right", ".", "seriously", ",", "what", "well", "way", "to", "pay", "respect", "to", "Darwin", "!", "you", "probably", "will", "not", "get", "this", "but", "somebody", "once", "say", "\"", "never", "interrupt", "an", "enemy", "while", "they", "be", "make", "a", "mistake\"", "...", "a", "Dieu", "Bozo", "!"]
(c23-11 / multi-sentence
        :snt1 (c23-32 / know-01
                      :ARG0 (c23-21 / you)
                      :ARG1 (c23-31 / pretend-01
                                    :ARG0 (c23-3 / i)
                                    :ARG1 (c23-9 / right-06
                                                 :ARG1 c23-21)
                                    :mod (c23-30 / just)))
        :snt2 (c23-5 / way
                     :manner-of (c23-28 / pay-01
                                        :ARG1 (c23-6 / respect-01
                                                     :ARG1 (c23-16 / person
                                                                   :name (c23-12 / name
                                                                                 :op1 "Darwin"))))
                     :ARG1-of (c23-14 / serious-01)
                     :domain (c23-24 / amr-unknown)
                     :ARG1-of (c23-26 / have-degree-91
                                      :ARG2 (c23-10 / good-02
                                                    :ARG1 c23-5)
                                      :ARG3 (c23-25 / more)))
        :snt3 (c23-4 / contrast-01
                     :ARG1 (c23-20 / get-01
                                   :ARG0 (c23-22 / you)
                                   :ARG1 (c23-8 / this)
                                   :mod (c23-15 / probable)
                                   :polarity -)
                     :ARG2 (c23-23 / say-01
                                   :ARG0 (c23-18 / somebody)
                                   :ARG1 (c23-17 / interrupt-01
                                                 :ARG0 c23-22
                                                 :ARG1 (c23-1 / person
                                                              :ARG0-of (c23-2 / have-rel-role-91
                                                                              :ARG1 c23-22
                                                                              :ARG2 (c23-13 / enemy)))
                                                 :time (c23-19 / mistake-02
                                                               :ARG0 c23-1)
                                                 :time (c23-27 / ever)
                                                 :polarity -
                                                 :mode imperative)
                                   :time (c23-7 / once)))
        :snt4 (c23-29 / bozo
                      :mod (c23-0 / dieu)))

# ::snt My wife, , had the vaccine, first dose week ago. No side effects.
# ::tokens ["My", "wife", ",", ",", "had", "the", "vaccine", ",", "first", "dose", "week", "ago", ".", "No", "side", "effects", "."]
# ::lemmas ["my", "wife", ",", ",", "have", "the", "vaccine", ",", "first", "dose", "week", "ago", ".", "no", "side", "effect", "."]
(c24-12 / multi-sentence
        :snt1 (c24-4 / have-06
                     :ARG0 (c24-11 / person
                                   :ARG0-of (c24-10 / have-rel-role-91
                                                    :ARG1 (c24-2 / i)
                                                    :ARG2 (c24-3 / wife)))
                     :ARG1 (c24-6 / vaccine
                                  :ARG1-of (c24-0 / dose-01
                                                  :ord (c24-7 / ordinal-entity
                                                              :value 1)))
                     :time (c24-9 / before
                                  :op1 (c24-13 / now)
                                  :quant (c24-8 / temporal-quantity
                                                :unit (c24-14 / week)
                                                :quant 1)))
        :snt2 (c24-15 / effect-03
                      :ARG1 (c24-5 / event
                                   :mod (c24-1 / side))
                      :polarity -))

# ::snt I think you summed it up perfectly, Merry Christmas to you.
# ::tokens ["I", "think", "you", "summed", "it", "up", "perfectly", ",", "Merry", "Christmas", "to", "you", "."]
# ::lemmas ["i", "think", "you", "sum", "it", "up", "perfectly", ",", "Merry", "Christmas", "to", "you", "."]
(c25-3 / think-01
       :ARG0 (c25-5 / i)
       :ARG1 (c25-0 / sum-up-01
                    :ARG0 (c25-8 / you)
                    :ARG1 (c25-2 / it)
                    :ARG2 (c25-1 / festival
                                 :name (c25-7 / name
                                              :op1 "Christmas")
                                 :mod (c25-6 / merry))
                    :ARG1-of (c25-4 / perfect-02)))

# ::snt I see... months....hmmm...and SHE is the representative of the human race is she? And btw. if she took a (months ago!) experimental drug, then she is certifiable in my view, and deserves NO thanks whatsoever. If she wants to play guinea-pig then that's ALL on her honey....
# ::tokens ["I", "see", "...", "months", "....", "hmmm", "...", "and", "SHE", "is", "the", "representative", "of", "the", "human", "race", "is", "she", "?", "And", "btw", ".", "if", "she", "took", "a", "(", "months", "ago", "!", ")", "experimental", "drug", ",", "then", "she", "is", "certifiable", "in", "my", "view", ",", "and", "deserves", "NO", "thanks", "whatsoever", ".", "If", "she", "wants", "to", "play", "guinea", "-", "pig", "then", "that", "'s", "ALL", "on", "her", "honey", "...."]
# ::lemmas ["i", "see", "...", "months", "....", "hmmm", "...", "and", "SHE", "be", "the", "representative", "of", "the", "human", "race", "be", "she", "?", "and", "btw", ".", "if", "she", "take", "a", "(", "months", "ago", "!", ")", "experimental", "drug", ",", "then", "she", "be", "certifiable", "in", "my", "view", ",", "and", "deserve", "no", "thank", "whatsoever", ".", "if", "she", "want", "to", "play", "guinea", "-", "pig", "then", "that", "be", "all", "on", "her", "honey", "...."]
(c26-15 / multi-sentence
        :snt1 (c26-29 / and
                      :op1 (c26-20 / see-01
                                   :ARG0 (c26-4 / i)
                                   :ARG1 (c26-31 / multiple
                                                 :op1 (c26-11 / temporal-quantity
                                                              :unit (c26-26 / month)
                                                              :quant 1)))
                      :op2 (c26-12 / represent-01
                                   :ARG0 (c26-34 / she)
                                   :ARG1 (c26-9 / race
                                                :mod (c26-32 / human)))
                      :polarity (c26-18 / amr-unknown))
        :snt2 (c26-1 / and
                     :op2 (c26-36 / and
                                  :op1 (c26-6 / certify-01
                                              :ARG1 (c26-24 / she)
                                              :ARG1-of (c26-10 / view-02
                                                               :ARG0 (c26-23 / i))
                                              :condition (c26-8 / take-01
                                                                :ARG0 c26-24
                                                                :ARG1 (c26-0 / drug
                                                                             :mod (c26-19 / experiment-01))
                                                                :time (c26-33 / before
                                                                              :op1 (c26-16 / now)
                                                                              :quant (c26-14 / multiple
                                                                                             :op1 (c26-17 / temporal-quantity
                                                                                                          :unit (c26-21 / month)
                                                                                                          :quant 1)))))
                                  :op2 (c26-27 / deserve-01
                                               :ARG0 c26-24
                                               :ARG1 (c26-25 / thank-01
                                                             :ARG1 c26-24
                                                             :degree (c26-7 / whatsoever)
                                                             :polarity -)))
                     :snt3 (c26-28 / be-located-at-91
                                   :ARG1 (c26-30 / that
                                                 :mod (c26-2 / all))
                                   :ARG2 (c26-3 / honey
                                                :poss (c26-5 / she))
                                   :condition (c26-22 / want-01
                                                      :ARG0 c26-5
                                                      :ARG1 (c26-35 / play-02
                                                                    :ARG0 c26-5
                                                                    :ARG1 (c26-13 / guinea-pig)))
                                   :mod c26-7)))

# ::snt Isn't that interesting that it is actually the other way around! WE, unlike YOU, know that we have a functioning immune system so it is ultimately YOU, who insists on fucking yours up with essentially grab-bag "street drugs" who will end up being eliminated. Darwin rocks!
# ::tokens ["Is", "n't", "that", "interesting", "that", "it", "is", "actually", "the", "other", "way", "around", "!", "WE", ",", "unlike", "YOU", ",", "know", "that", "we", "have", "a", "functioning", "immune", "system", "so", "it", "is", "ultimately", "YOU", ",", "who", "insists", "on", "fucking", "yours", "up", "with", "essentially", "grab", "-", "bag", "\"", "street", "drugs", "\"", "who", "will", "end", "up", "being", "eliminated", ".", "Darwin", "rocks", "!"]
# ::lemmas ["be", "not", "that", "interesting", "that", "it", "be", "actually", "the", "other", "way", "around", "!", "we", ",", "unlike", "you", ",", "know", "that", "we", "have", "a", "function", "immune", "system", "so", "it", "be", "ultimately", "you", ",", "who", "insist", "on", "fuck", "yours", "up", "with", "essentially", "grab", "-", "bag", "\"", "street", "drug", "\"", "who", "will", "end", "up", "be", "eliminate", ".", "Darwin", "rock", "!"]
(c27-9 / multi-sentence
       :snt1 (c27-2 / interest-01
                    :ARG2 (c27-4 / way
                                 :mod (c27-19 / around)
                                 :mod (c27-6 / other)
                                 :ARG1-of (c27-12 / actual-02)
                                 :domain (c27-15 / it))
                    :ARG1-of (c27-7 / request-confirmation-91))
       :snt2 (c27-27 / know-01
                     :ARG0 (c27-11 / we)
                     :ARG1 (c27-21 / have-03
                                   :ARG0 c27-11
                                   :ARG1 (c27-13 / system
                                                 :ARG1-of (c27-20 / function-01)
                                                 :ARG1-of (c27-16 / immune-02)))
                     :ARG1-of (c27-5 / resemble-01
                                     :ARG2 (c27-18 / you)
                                     :polarity -)
                     :ARG0-of (c27-3 / cause-01
                                     :ARG1 (c27-23 / insist-01
                                                   :ARG0 c27-18
                                                   :ARG1 (c27-17 / fuck-up-02
                                                                 :ARG0 c27-18
                                                                 :ARG1 (c27-0 / drug
                                                                              :mod (c27-25 / street)
                                                                              :mod (c27-14 / essential)
                                                                              :poss c27-18))
                                                   :ARG0-of (c27-22 / end-up-03
                                                                    :ARG1 c27-18
                                                                    :ARG2 (c27-1 / eliminate-01
                                                                                 :ARG1 c27-18))
                                                   :time (c27-24 / ultimate)))
                     :polarity -)
       :snt3 (c27-8 / rock-03
                    :ARG0 (c27-26 / person
                                  :name (c27-10 / name
                                                :op1 "Darwin"))))

# ::snt I think when someone puts themselves out and takes the risk to help others they should be appreciated .
# ::tokens ["I", "think", "when", "someone", "puts", "themselves", "out", "and", "takes", "the", "risk", "to", "help", "others", "they", "should", "be", "appreciated", "."]
# ::lemmas ["i", "think", "when", "someone", "put", "themselves", "out", "and", "take", "the", "risk", "to", "help", "other", "they", "should", "be", "appreciate", "."]
(c29-5 / think-01
       :ARG0 (c29-8 / i)
       :ARG1 (c29-6 / recommend-01
                    :ARG1 (c29-1 / appreciate-02
                                 :ARG1 (c29-0 / someone))
                    :time (c29-9 / and
                                 :op1 (c29-7 / put-out-10
                                             :ARG0 c29-0
                                             :ARG1 c29-0)
                                 :op2 (c29-3 / risk-01
                                             :ARG0 c29-0
                                             :ARG2 (c29-2 / help-01
                                                          :ARG0 c29-0
                                                          :ARG2 (c29-4 / other))))))

# ::snt Officialy rejistered as lab scientist all were bogus they worked at south of england hospital trusts. One was found to be a hotel cleaner. Another a peanut seller. The other skiped the Uk back to South Africa. All had ltd companies as well. All linked to a south london town
# ::tokens ["Officialy", "rejistered", "as", "lab", "scientist", "all", "were", "bogus", "they", "worked", "at", "south", "of", "england", "hospital", "trusts", ".", "One", "was", "found", "to", "be", "a", "hotel", "cleaner", ".", "Another", "a", "peanut", "seller", ".", "The", "other", "skiped", "the", "Uk", "back", "to", "South", "Africa", ".", "All", "had", "ltd", "companies", "as", "well", ".", "All", "linked", "to", "a", "south", "london", "town"]
# ::lemmas ["Officialy", "rejistere", "as", "lab", "scientist", "all", "be", "bogus", "they", "work", "at", "south", "of", "england", "hospital", "trust", ".", "One", "be", "find", "to", "be", "a", "hotel", "clean", ".", "another", "a", "peanut", "seller", ".", "the", "other", "skip", "the", "Uk", "back", "to", "South", "Africa", ".", "all", "have", "ltd", "company", "as", "well", ".", "all", "link", "to", "a", "south", "london", "town"]
(c30-16 / multi-sentence
        :snt1 (c30-36 / bogus
                      :domain (c30-38 / person
                                      :ARG0-of (c30-31 / have-org-role-91
                                                       :ARG2 (c30-20 / scientist
                                                                     :topic (c30-37 / science)))
                                      :mod (c30-13 / official)))
        :snt2 (c30-10 / work-01
                      :ARG0 (c30-15 / they
                                    :mod (c30-29 / all))
                      :ARG2 (c30-11 / trust
                                    :mod (c30-4 / hospital)
                                    :location (c30-24 / south
                                                      :part-of (c30-9 / country
                                                                      :name (c30-17 / name
                                                                                    :op1 "England")))))
        :snt3 (c30-30 / find-01
                      :ARG1 (c30-33 / person
                                    :ARG0-of (c30-0 / clean-01
                                                    :ARG1 (c30-7 / hotel))
                                    :domain (c30-32 / one)))
        :snt4 (c30-23 / person
                      :mod (c30-19 / another)
                      :ARG0-of (c30-5 / sell-01
                                      :ARG1 (c30-21 / peanut)))
        :snt5 (c30-6 / skip-01
                     :ARG0 (c30-8 / other)
                     :ARG1 (c30-12 / country
                                   :name (c30-3 / name
                                                :op1 "South"
                                                :op2 "Africa"))
                     :direction (c30-28 / back))
        :snt6 (c30-14 / have-03
                      :ARG0 (c30-1 / all)
                      :ARG1 (c30-27 / company
                                    :mod (c30-18 / td))
                      :mod (c30-39 / as-well))
        :snt7 (c30-35 / link-01
                      :ARG1 (c30-2 / all)
                      :ARG2 (c30-25 / town
                                    :location (c30-34 / south
                                                      :part-of (c30-22 / city
                                                                       :name (c30-26 / name
                                                                                     :op1 "London"))))))

# ::snt My niece has been involved in the tests for months and has not developed any adverse symptoms. And shes a nurse putting herself at risk for you . Glad you appreciate it .
# ::tokens ["My", "niece", "has", "been", "involved", "in", "the", "tests", "for", "months", "and", "has", "not", "developed", "any", "adverse", "symptoms", ".", "And", "she", "s", "a", "nurse", "putting", "herself", "at", "risk", "for", "you", ".", "Glad", "you", "appreciate", "it", "."]
# ::lemmas ["my", "niece", "have", "be", "involve", "in", "the", "test", "for", "months", "and", "have", "not", "develop", "any", "adverse", "symptom", ".", "and", "she", "s", "a", "nurse", "put", "herself", "at", "risk", "for", "you", ".", "glad", "you", "appreciate", "it", "."]
(c31-8 / multi-sentence
       :snt1 (c31-16 / and
                     :op1 (c31-3 / involve-01
                                 :ARG1 (c31-21 / person
                                               :ARG0-of (c31-18 / have-rel-role-91
                                                                :ARG1 (c31-12 / i)
                                                                :ARG2 (c31-9 / niece)))
                                 :ARG2 (c31-5 / test-01)
                                 :duration (c31-17 / multiple
                                                   :op1 (c31-4 / temporal-quantity
                                                               :unit (c31-14 / month)
                                                               :quant 1)))
                     :op2 (c31-0 / develop-02
                                 :ARG1 c31-21
                                 :ARG2 (c31-11 / symptom
                                               :mod (c31-10 / adverse))
                                 :polarity -))
       :snt2 (c31-1 / and
                    :op2 (c31-2 / nurse
                                :domain (c31-20 / she)
                                :ARG0-of (c31-19 / put-01
                                                 :ARG2 (c31-6 / risk-01
                                                              :ARG0 c31-2
                                                              :ARG2 (c31-15 / you))
                                                 :ARG1 c31-2)))
       :snt3 (c31-22 / appreciate-02
                     :ARG0 c31-15
                     :ARG1 (c31-13 / it)
                     :ARG2-of (c31-7 / glad-02)))

# ::snt As the Pharma says - a patient cured is a customer lost.
# ::tokens ["As", "the", "Pharma", "says", "-", "a", "patient", "cured", "is", "a", "customer", "lost", "."]
# ::lemmas ["as", "the", "Pharma", "say", "-", "a", "patient", "cure", "be", "a", "customer", "lose", "."]
(c32-0 / say-01
       :ARG0 (c32-2 / company
                    :name (c32-4 / name
                                 :op1 "Pharma"))
       :ARG1 (c32-3 / lose-02
                    :ARG1 (c32-1 / customer)))
