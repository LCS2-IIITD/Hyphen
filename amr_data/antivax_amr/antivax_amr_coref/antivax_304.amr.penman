# ::snt Yeh still makes me laugh you worked there! What a place. And yes you have
# ::tokens ["Yeh", "still", "makes", "me", "laugh", "you", "worked", "there", "!", "What", "a", "place", ".", "And", "yes", "you", "have"]
# ::lemmas ["Yeh", "still", "make", "i", "laugh", "you", "work", "there", "!", "what", "a", "place", ".", "and", "yes", "you", "have"]
(c1-11 / multi-sentence
       :snt1 (c1-3 / make-02
                   :ARG0 (c1-4 / work-01
                               :ARG0 (c1-12 / you)
                               :ARG2 (c1-6 / there))
                   :ARG1 (c1-7 / laugh-01
                               :ARG0 (c1-10 / i))
                   :mod (c1-0 / still)
                   :mod (c1-13 / yeh
                               :mode expressive))
       :snt2 (c1-8 / place
                   :degree (c1-9 / so))
       :snt3 (c1-2 / and
                   :op2 (c1-5 / have-03
                              :ARG0 (c1-1 / you))))

# ::snt New Street??? Man that was a place to work. The strangest bunch of characters i ever met. And I have met a few havent i
# ::tokens ["New", "Street", "?", "?", "?", "Man", "that", "was", "a", "place", "to", "work", ".", "The", "strangest", "bunch", "of", "characters", "i", "ever", "met", ".", "And", "I", "have", "met", "a", "few", "have", "nt", "i"]
# ::lemmas ["New", "Street", "?", "?", "?", "man", "that", "be", "a", "place", "to", "work", ".", "the", "strange", "bunch", "of", "character", "i", "ever", "meet", ".", "and", "i", "have", "meet", "a", "few", "have", "not", "i"]
(c2-13 / multi-sentence
       :snt1 (c2-0 / street
                   :name (c2-14 / name
                                :op1 "New"
                                :op2 "Street")
                   :polarity (c2-1 / amr-unknown)
                   :mod (c2-3 / man
                              :mode expressive)
                   :location-of (c2-4 / work-01))
       :snt2 (c2-6 / have-degree-91
                   :ARG1 (c2-10 / bunch
                                :consist-of (c2-5 / character)
                                :ARG1-of (c2-9 / meet-02
                                               :ARG0 (c2-12 / i)
                                               :time (c2-17 / ever)))
                   :ARG2 (c2-11 / strange)
                   :ARG3 (c2-7 / most))
       :snt3 (c2-16 / and
                    :op2 (c2-15 / meet-02
                                :ARG0 (c2-8 / i)
                                :ARG1 (c2-2 / few)
                                :polarity -)))

# ::snt Made me think of you
# ::tokens ["Made", "me", "think", "of", "you"]
# ::lemmas ["make", "i", "think", "of", "you"]
(c3-1 / make-02
      :ARG1 (c3-2 / think-01
                  :ARG0 (c3-0 / i)
                  :ARG1 (c3-3 / you)))

# ::snt Yep that's a old peoples home now. I'm tile cross now so not moved far.
# ::tokens ["Yep", "that", "'s", "a", "old", "peoples", "home", "now", ".", "I", "'m", "tile", "cross", "now", "so", "not", "moved", "far", "."]
# ::lemmas ["yep", "that", "be", "a", "old", "people", "home", "now", ".", "i", "be", "tile", "cross", "now", "so", "not", "move", "far", "."]
(c4-10 / multi-sentence
       :snt1 (c4-5 / home
                   :poss (c4-9 / person
                               :mod (c4-6 / old))
                   :domain (c4-7 / that)
                   :time (c4-11 / now))
       :snt2 (c4-3 / tile-cross-00
                   :ARG1 (c4-1 / i)
                   :time (c4-8 / now)
                   :ARG0-of (c4-2 / cause-01
                                  :ARG1 (c4-4 / move-01
                                              :ARG1 c4-1
                                              :extent (c4-0 / far)
                                              :polarity -))))

# ::snt Howdy do neighbour! What a small world Mark. Born at home opposite Adelaide Tower (Packington Av) in the maisonettes before knocked down in the 's......old peoples homes now?? Moved to estate opp Cole Hall Farm aged .
# ::tokens ["Howdy", "do", "neighbour", "!", "What", "a", "small", "world", "Mark", ".", "Born", "at", "home", "opposite", "Adelaide", "Tower", "(", "Packington", "Av", ")", "in", "the", "maisonettes", "before", "knocked", "down", "in", "the", "'s", "......", "old", "peoples", "homes", "now", "?", "?", "Moved", "to", "estate", "opp", "Cole", "Hall", "Farm", "aged", "."]
# ::lemmas ["Howdy", "do", "neighbour", "!", "what", "a", "small", "world", "Mark", ".", "bear", "at", "home", "opposite", "Adelaide", "Tower", "(", "Packington", "Av", ")", "in", "the", "maisonette", "before", "knock", "down", "in", "the", "'", "......", "old", "people", "home", "now", "?", "?", "move", "to", "estate", "opp", "Cole", "Hall", "Farm", "age", "."]
(c5-9 / multi-sentence
      :snt1 (c5-13 / say-01
                   :ARG0 (c5-2 / i)
                   :ARG1 (c5-10 / neighbor)
                   :ARG2 (c5-27 / person
                                :name (c5-0 / name
                                            :op1 "Mark")
                                :mod (c5-26 / small
                                            :degree (c5-15 / so)))
                   :mode expressive)
      :snt2 (c5-19 / and
                   :op1 (c5-25 / bear-02
                               :ARG1 c5-27
                               :location (c5-22 / home
                                                :ARG1-of (c5-6 / opposite-01
                                                               :ARG2 (c5-7 / tower
                                                                           :name (c5-16 / name
                                                                                        :op1 "Adelaide"
                                                                                        :op2 "Tower")
                                                                           :location (c5-4 / city-district
                                                                                           :name (c5-3 / name
                                                                                                       :op1 "Packington"
                                                                                                       :op2 "Av")))))
                               :time (c5-18 / before))
                   :op2 (c5-28 / knock-down-05
                               :ARG1 c5-27
                               :location (c5-1 / home
                                               :poss (c5-24 / person
                                                            :age (c5-5 / temporal-quantity
                                                                       :unit (c5-17 / year)
                                                                       :quant 19)))
                               :time (c5-8 / now)))
      :snt3 (c5-21 / move-01
                   :ARG1 (c5-14 / person)
                   :ARG2 (c5-12 / estate)
                   :location (c5-20 / farm
                                    :name (c5-23 / name
                                                 :op1 "Cole"
                                                 :op2 "Hall"
                                                 :op3 "Farm"))
                   :time (c5-11 / age-01
                                :ARG1 c5-14)))

# ::snt Haha lea village mate
# ::tokens ["Haha", "lea", "village", "mate"]
# ::lemmas ["Haha", "lea", "village", "mate"]
(c6-0 / say-01
      :ARG0 (c6-4 / i)
      :ARG1 (c6-2 / village
                  :mod (c6-3 / lea))
      :ARG2 (c6-5 / mate)
      :mod (c6-1 / haha
                 :mode expressive)
      :mode expressive)

# ::snt Estate opp Cole Hall Farm
# ::tokens ["Estate", "opp", "Cole", "Hall", "Farm"]
# ::lemmas ["estate", "opp", "Cole", "Hall", "Farm"]
(c7-3 / event
      :name (c7-2 / name
                  :op1 "Cole"
                  :op2 "Hall"
                  :op3 "Farm")
      :mod (c7-0 / state)
      :mod (c7-1 / opp))

# ::snt You stalking me? That was my stop.....up Eddish Road, Cole Hall Lane, then on to the estate opposite. Mom and Dad are still there now.
# ::tokens ["You", "stalking", "me", "?", "That", "was", "my", "stop", ".....", "up", "Eddish", "Road", ",", "Cole", "Hall", "Lane", ",", "then", "on", "to", "the", "estate", "opposite", ".", "Mom", "and", "Dad", "are", "still", "there", "now", "."]
# ::lemmas ["you", "stalk", "i", "?", "that", "be", "my", "stop", ".....", "up", "Eddish", "Road", ",", "Cole", "Hall", "Lane", ",", "then", "on", "to", "the", "estate", "opposite", ".", "mom", "and", "Dad", "be", "still", "there", "now", "."]
(c8-10 / multi-sentence
       :snt1 (c8-14 / stalk-02
                    :polarity (c8-20 / amr-unknown)
                    :ARG0 (c8-19 / you)
                    :ARG1 (c8-4 / i))
       :snt2 (c8-26 / stop-01
                    :ARG0 (c8-15 / i)
                    :ARG1-of (c8-21 / mean-01
                                    :ARG2 (c8-12 / and
                                                 :op1 (c8-23 / up-03
                                                             :ARG1 (c8-8 / road
                                                                         :name (c8-11 / name
                                                                                      :op1 "Eddish"
                                                                                      :op2 "Road")
                                                                         :ARG2-of c8-23)
                                                             :name (c8-2 / name
                                                                         :op1 "Cole"
                                                                         :op2 "Hall"
                                                                         :op3 "Lane")))
                                    :op2 (c8-9 / go-02
                                               :ARG0 c8-15
                                               :ARG4 (c8-13 / estate
                                                            :ARG1-of (c8-6 / opposite-01))
                                               :time (c8-7 / then))))
       :snt3 (c8-25 / be-located-at-91
                    :ARG1 (c8-1 / and
                                :op1 (c8-27 / person
                                            :ARG0-of (c8-22 / have-rel-role-91
                                                            :ARG2 (c8-17 / mom)))
                                :op2 (c8-24 / person
                                            :ARG0-of (c8-3 / have-rel-role-91
                                                           :ARG2 (c8-0 / dad))))
                    :ARG2 (c8-5 / there)
                    :mod (c8-16 / still)
                    :time (c8-18 / now)))

# ::snt When I worked at HSamuels late s/ early s I missed many a train home due to being in here!
# ::tokens ["When", "I", "worked", "at", "HSamuels", "late", "s/", "early", "s", "I", "missed", "many", "a", "train", "home", "due", "to", "being", "in", "here", "!"]
# ::lemmas ["when", "i", "work", "at", "HSamuels", "late", "s/", "early", "s", "i", "miss", "many", "a", "train", "home", "due", "to", "be", "in", "here", "!"]
(c9-11 / miss-02
       :ARG0 (c9-10 / i)
       :ARG1 (c9-6 / train
                   :mod (c9-5 / home)
                   :quant (c9-2 / many))
       :ARG1-of (c9-3 / cause-01
                      :ARG0 (c9-8 / be-located-at-91
                                  :ARG1 c9-10
                                  :ARG2 (c9-9 / here)))
       :time (c9-4 / work-01
                   :ARG0 c9-10
                   :ARG2 (c9-0 / company
                               :name (c9-12 / name
                                            :op1 "HSamuels"))
                   :time (c9-7 / late
                               :op1 (c9-1 / date-entity
                                          :year 2000))))

# ::snt Great photo - Fascinating to see how things have changed in Birmingham!
# ::tokens ["Great", "photo", "-", "Fascinating", "to", "see", "how", "things", "have", "changed", "in", "Birmingham", "!"]
# ::lemmas ["great", "photo", "-", "Fascinating", "to", "see", "how", "thing", "have", "change", "in", "Birmingham", "!"]
(c10-7 / multi-sentence
       :snt1 (c10-6 / photo
                    :mod (c10-5 / great))
       :snt2 (c10-2 / fascinate-01
                    :ARG0 (c10-0 / see-01
                                 :ARG1 (c10-4 / thing
                                              :manner-of (c10-3 / change-01
                                                                :location (c10-1 / city
                                                                                 :name (c10-8 / name
                                                                                              :op1 "Birmingham")))))))

# ::snt The cardiff arms was where the back door of waterstones always showed the rugby
# ::tokens ["The", "cardiff", "arms", "was", "where", "the", "back", "door", "of", "waterstones", "always", "showed", "the", "rugby"]
# ::lemmas ["the", "cardiff", "arm", "be", "where", "the", "back", "door", "of", "waterstone", "always", "show", "the", "rugby"]
(c11-7 / be-located-at-91
       :ARG1 (c11-2 / show-01
                    :ARG0 (c11-0 / door
                                 :mod (c11-1 / back)
                                 :part-of (c11-5 / waterstone))
                    :ARG1 (c11-6 / rugby)
                    :time (c11-3 / always))
       :ARG2 (c11-8 / arm
                    :mod (c11-4 / cardiff)))

# ::snt The Cardiff Arms back of now waterstones always hard the rugby scores on a black board outside
# ::tokens ["The", "Cardiff", "Arms", "back", "of", "now", "waterstones", "always", "hard", "the", "rugby", "scores", "on", "a", "black", "board", "outside"]
# ::lemmas ["The", "Cardiff", "Arms", "back", "of", "now", "waterstone", "always", "hard", "the", "rugby", "score", "on", "a", "black", "board", "outside"]
(c12-10 / multi-sentence
        :snt1 (c12-8 / back
                     :part-of (c12-0 / sports-facility
                                     :name (c12-11 / name
                                                   :op1 "Cardiff"
                                                   :op2 "Arms")
                                     :time (c12-6 / now)))
        :snt2 (c12-4 / hard-02
                     :ARG1 (c12-9 / score-01
                                  :ARG1 (c12-7 / rugby)
                                  :location (c12-1 / board
                                                   :ARG1-of (c12-3 / black-04)
                                                   :location (c12-5 / outside)))
                     :time (c12-2 / always)))

# ::snt So poor
# ::tokens ["So", "poor"]
# ::lemmas ["so", "poor"]
(c13-1 / poor
       :degree (c13-0 / so))

# ::snt When I took the kings shilling back in the s it was worth . I went downstairs and thought im going for a beer.
# ::tokens ["When", "I", "took", "the", "kings", "shilling", "back", "in", "the", "s", "it", "was", "worth", ".", "I", "went", "downstairs", "and", "thought", "i", "m", "going", "for", "a", "beer", "."]
# ::lemmas ["when", "i", "take", "the", "king", "shill", "back", "in", "the", "s", "it", "be", "worth", ".", "i", "go", "downstairs", "and", "think", "i", "m", "go", "for", "a", "beer", "."]
(c14-13 / multi-sentence
        :snt1 (c14-3 / worth-01
                     :ARG1 (c14-12 / it)
                     :time (c14-8 / take-01
                                  :ARG0 (c14-5 / i)
                                  :ARG1 (c14-9 / pound)
                                  :ARG3 (c14-11 / back)
                                  :mod (c14-6 / in-the-s)))
        :snt2 (c14-2 / and
                     :op1 (c14-10 / go-02
                                  :ARG0 (c14-7 / i)
                                  :ARG4 (c14-0 / downstairs))
                     :op2 (c14-4 / think-01
                                 :ARG0 c14-7
                                 :ARG1 c14-10
                                 :ARG0 c14-7
                                 :ARG4 (c14-1 / beer))))

# ::snt What a place .... loved it
# ::tokens ["What", "a", "place", "....", "loved", "it"]
# ::lemmas ["what", "a", "place", "....", "love", "it"]
(c15-2 / and
       :op1 (c15-1 / place
                   :mod (c15-0 / such))
       :op2 (c15-3 / love-01
                   :ARG1 c15-1))

# ::snt Wasnt it originally called The Hole in the Wall? Went there many times...... through various name changes!
# ::tokens ["Was", "nt", "it", "originally", "called", "The", "Hole", "in", "the", "Wall", "?", "Went", "there", "many", "times", "......", "through", "various", "name", "changes", "!"]
# ::lemmas ["be", "not", "it", "originally", "call", "the", "Hole", "in", "the", "Wall", "?", "go", "there", "many", "time", "......", "through", "various", "name", "change", "!"]
(c16-11 / multi-sentence
        :snt1 (c16-3 / call-01
                     :polarity (c16-1 / amr-unknown)
                     :ARG1 (c16-10 / it)
                     :ARG2 (c16-2 / facility
                                  :name (c16-12 / name
                                                :op1 "The"
                                                :op2 "Hole"
                                                :op3 "in"
                                                :op4 "the"
                                                :op5 "Wall"))
                     :mod (c16-6 / original))
        :snt2 (c16-9 / go-02
                     :ARG4 (c16-7 / there)
                     :frequency (c16-4 / many)
                     :manner (c16-0 / change-01
                                    :ARG1 (c16-8 / name)
                                    :mod (c16-5 / various))))

# ::snt Used to love a pint here on arrival and post my many early brum visits!!!
# ::tokens ["Used", "to", "love", "a", "pint", "here", "on", "arrival", "and", "post", "my", "many", "early", "brum", "visits", "!", "!", "!"]
# ::lemmas ["use", "to", "love", "a", "pint", "here", "on", "arrival", "and", "post", "my", "many", "early", "brum", "visit", "!", "!", "!"]
(c17-0 / and
       :op1 (c17-5 / love-01
                   :ARG0 (c17-8 / i)
                   :ARG1 (c17-6 / pint)
                   :time (c17-10 / arrive-01
                                 :ARG1 c17-8
                                 :ARG4 (c17-1 / here))
                   :time (c17-2 / use-03))
       :op2 (c17-4 / post-01
                   :ARG0 c17-8
                   :ARG1 (c17-3 / visit-01
                                :ARG0 (c17-7 / brum)
                                :quant (c17-9 / many)
                                :time (c17-11 / early))))

# ::snt The Nightrider was a few doors up from the Guilded Cage.
# ::tokens ["The", "Nightrider", "was", "a", "few", "doors", "up", "from", "the", "Guilded", "Cage", "."]
# ::lemmas ["the", "Nightrider", "be", "a", "few", "door", "up", "from", "the", "Guilded", "Cage", "."]
(c18-7 / be-located-at-91
       :ARG1 (c18-1 / facility
                    :name (c18-8 / name
                                 :op1 "Nightrider"))
       :ARG2 (c18-4 / relative-position
                    :op1 (c18-3 / facility
                                :name (c18-5 / name
                                             :op1 "Guilded"
                                             :op2 "Cage"))
                    :direction (c18-2 / up)
                    :quant (c18-0 / door
                                  :quant (c18-6 / few))))

# ::snt I remember that place !!!
# ::tokens ["I", "remember", "that", "place", "!", "!", "!"]
# ::lemmas ["i", "remember", "that", "place", "!", "!", "!"]
(c19-2 / remember-01
       :ARG0 (c19-0 / i)
       :ARG1 (c19-3 / place
                    :mod (c19-1 / that)))

# ::snt Good grief. That was place was an absolute shocker.
# ::tokens ["Good", "grief", ".", "That", "was", "place", "was", "an", "absolute", "shocker", "."]
# ::lemmas ["good", "grief", ".", "that", "be", "place", "be", "an", "absolute", "shocker", "."]
(c20-5 / multi-sentence
       :snt1 (c20-3 / grief
                    :ARG1-of (c20-6 / good-02))
       :snt2 (c20-0 / shock-01
                    :ARG0 (c20-4 / place
                                 :domain (c20-2 / that))
                    :degree (c20-1 / absolute)))

# ::snt it was in this pub that i made the discovery that a double vodka &amp; Appetiser tastes exactly like a Diamond White.
# ::tokens ["it", "was", "in", "this", "pub", "that", "i", "made", "the", "discovery", "that", "a", "double", "vodka", "&", "amp", ";", "Appetiser", "tastes", "exactly", "like", "a", "Diamond", "White", "."]
# ::lemmas ["it", "be", "in", "this", "pub", "that", "i", "make", "the", "discovery", "that", "a", "double", "vodka", "&", "amp", ";", "Appetiser", "taste", "exactly", "like", "a", "Diamond", "White", "."]
(c21-0 / discover-01
       :ARG0 (c21-7 / i)
       :ARG1 (c21-4 / taste-02
                    :ARG1 (c21-6 / product
                                 :name (c21-8 / name
                                              :op1 "Appetiser"))
                    :ARG2 (c21-3 / product
                                 :name (c21-5 / name
                                              :op1 "Diamond"
                                              :op2 "White"))
                    :mod (c21-9 / exact))
       :location (c21-2 / pub
                        :mod (c21-1 / this)))

# ::snt I seem to remember it being awful but very very cheap - so probably because we were fucking poor
# ::tokens ["I", "seem", "to", "remember", "it", "being", "awful", "but", "very", "very", "cheap", "-", "so", "probably", "because", "we", "were", "fucking", "poor"]
# ::lemmas ["i", "seem", "to", "remember", "it", "be", "awful", "but", "very", "very", "cheap", "-", "so", "probably", "because", "we", "be", "fuck", "poor"]
(c22-0 / seem-01
       :ARG1 (c22-10 / remember-01
                     :ARG0 (c22-12 / i)
                     :ARG1 (c22-4 / contrast-01
                                  :ARG1 (c22-2 / awful
                                               :domain (c22-6 / it))
                                  :ARG2 (c22-1 / cheap-02
                                               :ARG1 c22-6
                                               :degree (c22-8 / very))))
       :ARG0-of (c22-7 / cause-01
                       :ARG1 (c22-11 / poor
                                     :domain (c22-5 / we)
                                     :mod (c22-3 / fucking))
                       :mod (c22-9 / probable)))

# ::snt We definitely went for a drink in here!
# ::tokens ["We", "definitely", "went", "for", "a", "drink", "in", "here", "!"]
# ::lemmas ["we", "definitely", "go", "for", "a", "drink", "in", "here", "!"]
(c23-3 / go-02
       :ARG0 (c23-1 / we)
       :ARG4 (c23-2 / here)
       :purpose (c23-0 / drink-01
                       :ARG0 c23-1)
       :mod (c23-4 / definite))

# ::snt All Bar Ones a bit Brexity, isnt it?
# ::tokens ["All", "Bar", "Ones", "a", "bit", "Brexity", ",", "is", "nt", "it", "?"]
# ::lemmas ["all", "bar", "one", "a", "bit", "brexity", ",", "be", "not", "it", "?"]
(c24-4 / Brexity
       :domain (c24-5 / person
                      :mod (c24-1 / all)
                      :mod (c24-0 / bar))
       :degree (c24-2 / bit)
       :ARG1-of (c24-3 / request-confirmation-91))

# ::snt Had one in there once that actually turned out to be nearer . What a shite hole. Incredible how the station has changed for the better
# ::tokens ["Had", "one", "in", "there", "once", "that", "actually", "turned", "out", "to", "be", "nearer", ".", "What", "a", "shite", "hole", ".", "Incredible", "how", "the", "station", "has", "changed", "for", "the", "better"]
# ::lemmas ["have", "one", "in", "there", "once", "that", "actually", "turn", "out", "to", "be", "near", ".", "what", "a", "shite", "hole", ".", "incredible", "how", "the", "station", "have", "change", "for", "the", "well"]
(c25-9 / multi-sentence
       :snt1 (c25-17 / have-03
                     :polarity (c25-15 / amr-unknown)
                     :ARG0 (c25-2 / i)
                     :ARG1 (c25-6 / one
                                  :location (c25-7 / there)
                                  :ARG1-of (c25-5 / turn-out-11
                                                  :ARG2 (c25-1 / have-degree-91
                                                               :ARG1 c25-6
                                                               :ARG2 (c25-10 / near-02
                                                                             :ARG1 c25-6)
                                                               :ARG3 (c25-16 / more))
                                                  :ARG1-of (c25-12 / actual-02)))
                     :time (c25-18 / once))
       :snt2 (c25-3 / hole
                    :mod (c25-13 / shit)
                    :degree (c25-19 / so))
       :snt3 (c25-0 / amaze-01
                    :ARG0 (c25-11 / thing
                                  :manner-of (c25-4 / change-01
                                                    :ARG1 (c25-14 / station)
                                                    :ARG1-of c25-1
                                                    :ARG2 (c25-8 / good-02
                                                                 :ARG1 c25-14)
                                                    :ARG3 c25-16))))

# ::snt Looking for odd fellows - definitely covid clear
# ::tokens ["Looking", "for", "odd", "fellows", "-", "definitely", "covid", "clear"]
# ::lemmas ["look", "for", "odd", "fellow", "-", "definitely", "covid", "clear"]
(c26-4 / look-01
       :ARG1 (c26-1 / fellow
                    :mod (c26-3 / odd))
       :ARG1-of (c26-2 / clear-06
                       :manner (c26-0 / definite)))

# ::snt anyone know what year this closed ??
# ::tokens ["anyone", "know", "what", "year", "this", "closed", "?", "?"]
# ::lemmas ["anyone", "know", "what", "year", "this", "close", "?", "?"]
(c27-4 / know-01
       :polarity (c27-1 / amr-unknown)
       :ARG0 (c27-6 / anyone)
       :ARG1 (c27-5 / year
                    :time-of (c27-2 / close-01
                                    :ARG1 (c27-3 / this)))
       :polarity (c27-0 / amr-unknown))

# ::snt So many memories of the Newt
# ::tokens ["So", "many", "memories", "of", "the", "Newt"]
# ::lemmas ["so", "many", "memory", "of", "the", "Newt"]
(c28-4 / memory
       :topic (c28-3 / person
                     :name (c28-5 / name
                                  :op1 "Newt"))
       :ARG1-of (c28-2 / have-quant-91
                       :ARG2 (c28-1 / many)
                       :ARG3 (c28-0 / so)))

# ::snt Omg! So so so many day drinking days here! The bus stops were just outside and everyone stumbled to find the right one!
# ::tokens ["Omg", "!", "So", "so", "so", "many", "day", "drinking", "days", "here", "!", "The", "bus", "stops", "were", "just", "outside", "and", "everyone", "stumbled", "to", "find", "the", "right", "one", "!"]
# ::lemmas ["Omg", "!", "so", "so", "so", "many", "day", "drinking", "day", "here", "!", "the", "bus", "stop", "be", "just", "outside", "and", "everyone", "stumble", "to", "find", "the", "right", "one", "!"]
(c29-15 / multi-sentence
        :snt1 (c29-10 / oh-my-god
                      :mode expressive)
        :snt2 (c29-3 / and
                     :op1 (c29-0 / stop-01
                                 :ARG1 (c29-12 / bus)
                                 :location (c29-8 / outside)
                                 :mod (c29-13 / just))
                     :op2 (c29-1 / stumble-01
                                 :ARG0 (c29-16 / everyone)
                                 :purpose (c29-5 / find-01
                                                 :ARG0 c29-16
                                                 :ARG1 (c29-2 / one
                                                              :ARG1-of (c29-11 / right-06))))
                     :domain (c29-4 / day
                                    :time-of (c29-14 / drink-01)
                                    :quant (c29-6 / many
                                                  :degree (c29-9 / so))
                                    :location (c29-7 / here))))

# ::snt GuiltyAnd the costermonger too
# ::tokens ["GuiltyAnd", "the", "costermonger", "too"]
# ::lemmas ["GuiltyAnd", "the", "costermonger", "too"]
(c30-0 / and
       :op1 (c30-3 / guilty-01)
       :op2 (c30-4 / person
                   :ARG0-of (c30-1 / cost-01)
                   :mod (c30-2 / too)))

# ::snt The was my bus home
# ::tokens ["The", "was", "my", "bus", "home"]
# ::lemmas ["the", "be", "my", "bus", "home"]
(c31-0 / bus
       :destination (c31-2 / home)
       :domain (c31-1 / it)
       :poss (c31-3 / i))

# ::snt Strange how I don't remember The Hole in the Wall pub considering it was very near to the old bus stop opposite Foster Menswear.
# ::tokens ["Strange", "how", "I", "do", "n't", "remember", "The", "Hole", "in", "the", "Wall", "pub", "considering", "it", "was", "very", "near", "to", "the", "old", "bus", "stop", "opposite", "Foster", "Menswear", "."]
# ::lemmas ["strange", "how", "i", "do", "not", "remember", "the", "Hole", "in", "the", "Wall", "pub", "consider", "it", "be", "very", "near", "to", "the", "old", "bus", "stop", "opposite", "Foster", "Menswear", "."]
(c32-0 / strange
       :domain (c32-8 / remember-01
                      :ARG0 (c32-13 / i)
                      :ARG1 (c32-9 / location
                                   :name (c32-14 / name
                                                 :op1 "The"
                                                 :op2 "Hole"
                                                 :op3 "in"
                                                 :op4 "the"
                                                 :op5 "Wall"
                                                 :op6 "Pub"))
                      :ARG1-of (c32-2 / cause-01
                                      :ARG0 (c32-1 / consider-01
                                                   :ARG0 c32-13
                                                   :ARG1 (c32-10 / near-02
                                                                 :ARG1 c32-9
                                                                 :ARG2 (c32-12 / stop
                                                                               :mod (c32-11 / bus)
                                                                               :mod (c32-6 / old)
                                                                               :ARG1-of (c32-3 / opposite-01
                                                                                               :ARG2 (c32-4 / company
                                                                                                            :name (c32-7 / name
                                                                                                                         :op1 "Foster"
                                                                                                                         :op2 "Menswear"))))
                                                                 :degree (c32-5 / very))))
                      :polarity -))

# ::snt My God, I can't decide whether it's obscenely gorgeous or utterly nauseating!
# ::tokens ["My", "God", ",", "I", "ca", "n't", "decide", "whether", "it", "'s", "obscenely", "gorgeous", "or", "utterly", "nauseating", "!"]
# ::lemmas ["my", "God", ",", "i", "can", "not", "decide", "whether", "it", "be", "obscenely", "gorgeous", "or", "utterly", "nauseating", "!"]
(c33-10 / possible-01
        :ARG1 (c33-0 / decide-01
                     :ARG0 (c33-1 / i)
                     :ARG1 (c33-7 / truth-value
                                  :polarity-of (c33-5 / or
                                                      :op1 (c33-9 / gorgeous
                                                                  :domain (c33-2 / it)
                                                                  :mod (c33-3 / obscene))
                                                      :op2 (c33-11 / nauseate-01
                                                                   :ARG0 c33-2
                                                                   :ARG1-of (c33-4 / utter-02)))))
        :mod (c33-6 / person
                    :name (c33-8 / name
                                 :op1 "God")
                    :poss c33-1
                    :mode expressive)
        :polarity -)

# ::snt Or its predecessor, The Bridge (IIRC). Occasionally dropped in after a rough day at work. Or while waiting for a train to the NEC for a gig.
# ::tokens ["Or", "its", "predecessor", ",", "The", "Bridge", "(", "IIRC", ")", ".", "Occasionally", "dropped", "in", "after", "a", "rough", "day", "at", "work", ".", "Or", "while", "waiting", "for", "a", "train", "to", "the", "NEC", "for", "a", "gig", "."]
# ::lemmas ["or", "its", "predecessor", ",", "the", "Bridge", "(", "IIRC", ")", ".", "occasionally", "drop", "in", "after", "a", "rough", "day", "at", "work", ".", "or", "while", "wait", "for", "a", "train", "to", "the", "NEC", "for", "a", "gig", "."]
(c34-15 / multi-sentence
        :snt1 (c34-9 / or
                     :op2 (c34-10 / thing
                                  :name (c34-16 / name
                                                :op1 "The"
                                                :op2 "Bridge")
                                  :ARG1-of (c34-14 / precede-01
                                                   :ARG2 (c34-4 / it))))
        :snt2 (c34-0 / drop-in-04
                     :frequency (c34-8 / occasional)
                     :time (c34-2 / after
                                  :op1 (c34-6 / day
                                              :ARG1-of (c34-11 / rough-05)
                                              :location (c34-5 / work-01))))
        :snt3 (c34-1 / or
                     :op2 (c34-17 / wait-01
                                  :ARG2 (c34-7 / train
                                               :destination (c34-3 / facility
                                                                   :name (c34-12 / name
                                                                                 :op1 "NEC")))
                                  :purpose (c34-13 / gig))))

# ::snt Showing my age, and where I used to drink when I was a teenager
# ::tokens ["Showing", "my", "age", ",", "and", "where", "I", "used", "to", "drink", "when", "I", "was", "a", "teenager"]
# ::lemmas ["show", "my", "age", ",", "and", "where", "i", "use", "to", "drink", "when", "i", "be", "a", "teenager"]
(c35-0 / show-01
       :ARG1 (c35-2 / and
                    :op1 (c35-7 / age-01
                                :ARG1 (c35-6 / i))
                    :op2 (c35-5 / thing
                                :location-of (c35-1 / drink-01
                                                    :ARG0 c35-6
                                                    :time (c35-3 / teenager
                                                                 :domain c35-6)
                                                    :time (c35-4 / use-03)))))

# ::snt Toreador Bar interior too.
# ::tokens ["Toreador", "Bar", "interior", "too", "."]
# ::lemmas ["Toreador", "Bar", "interior", "too", "."]
(c36-0 / interior
       :mod (c36-2 / person
                   :name (c36-1 / name
                                :op1 "Toreador"
                                :op2 "Bar"))
       :mod (c36-3 / too))

# ::snt A colleague said it looked like the set from a Tarantino movie
# ::tokens ["A", "colleague", "said", "it", "looked", "like", "the", "set", "from", "a", "Tarantino", "movie"]
# ::lemmas ["a", "colleague", "say", "it", "look", "like", "the", "set", "from", "a", "Tarantino", "movie"]
(c37-0 / say-01
       :ARG0 (c37-6 / person
                    :ARG0-of (c37-3 / have-org-role-91
                                    :ARG2 (c37-1 / colleague)))
       :ARG1 (c37-4 / look-02
                    :ARG0 (c37-2 / it)
                    :ARG1 (c37-5 / set
                                 :source (c37-7 / movie
                                                :mod c37-6
                                                :name (c37-8 / name
                                                             :op1 "Tarantino")))))

# ::snt Wow!!!
# ::tokens ["Wow", "!", "!", "!"]
# ::lemmas ["wow", "!", "!", "!"]
(c38-0 / wow-01
       :mode expressive)

# ::snt This was a bar in s in New St Station - Taurus Bar, I think.
# ::tokens ["This", "was", "a", "bar", "in", "s", "in", "New", "St", "Station", "-", "Taurus", "Bar", ",", "I", "think", "."]
# ::lemmas ["this", "be", "a", "bar", "in", "s", "in", "New", "St", "Station", "-", "Taurus", "Bar", ",", "i", "think", "."]
(c39-5 / bar
       :location (c39-0 / street
                        :name (c39-8 / name
                                     :op1 "New"
                                     :op2 "St"
                                     :op3 "Station"))
       :domain (c39-3 / this)
       :ARG1-of (c39-7 / mean-01
                       :ARG2 (c39-1 / bar
                                    :name (c39-4 / name
                                                 :op1 "Taurus"
                                                 :op2 "Bar")))
       :ARG1-of (c39-2 / think-01
                       :ARG0 (c39-6 / i)))

# ::snt And there was us thinking they'd got UV lights. It was just us glowing in the dark...
# ::tokens ["And", "there", "was", "us", "thinking", "they", "'d", "got", "UV", "lights", ".", "It", "was", "just", "us", "glowing", "in", "the", "dark", "..."]
# ::lemmas ["and", "there", "be", "we", "think", "they", "would", "get", "uv", "light", ".", "it", "be", "just", "we", "glow", "in", "the", "dark", "..."]
(c40-10 / multi-sentence
        :snt1 (c40-2 / and
                     :op2 (c40-5 / think-01
                                 :ARG0 (c40-3 / we)
                                 :ARG1 (c40-8 / get-01
                                              :ARG0 (c40-4 / they)
                                              :ARG1 (c40-6 / light
                                                           :ARG1-of (c40-7 / light-04
                                                                           :ARG0 (c40-0 / sun))))))
        :snt2 (c40-11 / glow-01
                      :ARG1 (c40-12 / we
                                    :mod (c40-9 / just))
                      :location (c40-1 / dark)))

# ::snt Me too!!!!!!!
# ::tokens ["Me", "too", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "too", "!", "!", "!", "!", "!", "!", "!"]
(c41-0 / i
       :mod (c41-1 / too))

# ::snt Ooh I can still remember the smell.... Not sure that's a good thing
# ::tokens ["Ooh", "I", "can", "still", "remember", "the", "smell", "....", "Not", "sure", "that", "'s", "a", "good", "thing"]
# ::lemmas ["ooh", "i", "can", "still", "remember", "the", "smell", "....", "not", "sure", "that", "be", "a", "good", "thing"]
(c42-10 / multi-sentence
        :snt1 (c42-9 / possible-01
                     :ARG1 (c42-6 / remember-01
                                  :ARG0 (c42-1 / i)
                                  :ARG1 (c42-0 / smell-02)
                                  :mod (c42-8 / still))
                     :mod (c42-4 / oh
                                 :mode expressive))
        :snt2 (c42-3 / sure-02
                     :ARG1 (c42-7 / good-02
                                  :ARG1 (c42-5 / thing
                                               :domain (c42-2 / that)))
                     :polarity -))

# ::snt That probably makes me radioactive then! Started drinking there when I was a long, long time ago... back in the mists of time
# ::tokens ["That", "probably", "makes", "me", "radioactive", "then", "!", "Started", "drinking", "there", "when", "I", "was", "a", "long", ",", "long", "time", "ago", "...", "back", "in", "the", "mists", "of", "time"]
# ::lemmas ["that", "probably", "make", "i", "radioactive", "then", "!", "start", "drink", "there", "when", "i", "be", "a", "long", ",", "long", "time", "ago", "...", "back", "in", "the", "mist", "of", "time"]
(c43-5 / multi-sentence
       :snt1 (c43-15 / make-02
                     :ARG0 (c43-3 / that)
                     :ARG1 (c43-4 / radioactive
                                  :domain (c43-1 / i))
                     :mod (c43-18 / probable)
                     :time (c43-2 / then))
       :snt2 (c43-8 / start-01
                    :ARG0 (c43-10 / i)
                    :ARG1 (c43-0 / drink-01
                                 :ARG0 c43-10
                                 :ARG1 (c43-7 / there))
                    :time (c43-17 / before
                                  :op1 (c43-6 / now)
                                  :quant (c43-11 / time
                                                 :ARG1-of (c43-16 / long-03)))
                    :time (c43-13 / be-temporally-at-91
                                  :ARG1 c43-10
                                  :ARG2 (c43-12 / mists
                                                :poss (c43-14 / time))
                                  :mod (c43-9 / back))))

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c44-0 / yes)

# ::snt Beautiful place. Beautiful people.
# ::tokens ["Beautiful", "place", ".", "Beautiful", "people", "."]
# ::lemmas ["beautiful", "place", ".", "beautiful", "people", "."]
(c45-4 / multi-sentence
       :snt1 (c45-3 / place
                    :ARG1-of (c45-2 / beautiful-02))
       :snt2 (c45-1 / person
                    :ARG1-of (c45-0 / beautiful-02)))

# ::snt Wasnt that the hole In the wall in the s ?
# ::tokens ["Was", "nt", "that", "the", "hole", "In", "the", "wall", "in", "the", "s", "?"]
# ::lemmas ["be", "not", "that", "the", "hole", "in", "the", "wall", "in", "the", "s", "?"]
(c46-3 / hole
       :location (c46-2 / wall
                        :part (c46-0 / s))
       :domain (c46-4 / that)
       :polarity (c46-1 / amr-unknown)
       :polarity -)

# ::snt I can't recall this one but may have been in it under another name.
# ::tokens ["I", "ca", "n't", "recall", "this", "one", "but", "may", "have", "been", "in", "it", "under", "another", "name", "."]
# ::lemmas ["i", "can", "not", "recall", "this", "one", "but", "may", "have", "be", "in", "it", "under", "another", "name", "."]
(c47-2 / contrast-01
       :ARG1 (c47-9 / possible-01
                    :ARG1 (c47-7 / recall-02
                                 :ARG0 (c47-1 / i)
                                 :ARG1 (c47-4 / one
                                              :mod (c47-6 / this)))
                    :polarity -)
       :ARG2 (c47-5 / possible-01
                    :ARG1 (c47-8 / be-located-at-91
                                 :ARG1 c47-4
                                 :ARG2 (c47-3 / under
                                              :op1 (c47-10 / name
                                                           :mod (c47-0 / another))))))

# ::snt went in here once asked if I wanted to buy a cache of leather jackets, cash in handdid not go in ever again
# ::tokens ["went", "in", "here", "once", "asked", "if", "I", "wanted", "to", "buy", "a", "cache", "of", "leather", "jackets", ",", "cash", "in", "handdid", "not", "go", "in", "ever", "again"]
# ::lemmas ["go", "in", "here", "once", "ask", "if", "i", "want", "to", "buy", "a", "cache", "of", "leather", "jacket", ",", "cash", "in", "handdid", "not", "go", "in", "ever", "again"]
(c48-2 / and
       :op1 (c48-9 / go-02
                   :ARG0 (c48-11 / i)
                   :ARG4 (c48-5 / here)
                   :purpose (c48-14 / ask-01
                                    :ARG1 (c48-7 / truth-value
                                                 :polarity-of (c48-4 / want-01
                                                                     :ARG0 c48-11
                                                                     :ARG1 (c48-12 / buy-01
                                                                                   :ARG0 c48-11
                                                                                   :ARG1 (c48-3 / cache
                                                                                                :consist-of (c48-10 / jacket
                                                                                                                    :mod (c48-8 / leather)))))
                                                 :ARG2 c48-11))
                   :op2 (c48-13 / go-02
                                :ARG0 c48-11
                                :ARG4 c48-5
                                :mod (c48-1 / again
                                            :mod (c48-15 / ever))
                                :manner (c48-0 / cash
                                               :prep-in (c48-6 / hand))
                                :polarity -)
                   :frequency 1))

# ::snt I worked here when I left school in was so bad there was bones in the steak and kidney pies
# ::tokens ["I", "worked", "here", "when", "I", "left", "school", "in", "was", "so", "bad", "there", "was", "bones", "in", "the", "steak", "and", "kidney", "pies"]
# ::lemmas ["i", "work", "here", "when", "i", "leave", "school", "in", "be", "so", "bad", "there", "be", "bone", "in", "the", "steak", "and", "kidney", "pie"]
(c49-4 / work-01
       :ARG0 (c49-13 / i)
       :ARG2 (c49-6 / here)
       :time (c49-9 / leave-11
                    :ARG0 c49-13
                    :ARG1 (c49-0 / school))
       :ARG1-of (c49-12 / have-degree-91
                        :ARG2 (c49-11 / bad-07
                                      :ARG1 c49-4)
                        :ARG3 (c49-1 / so)
                        :ARG6 (c49-2 / be-located-at-91
                                     :ARG1 (c49-5 / bone)
                                     :ARG2 (c49-3 / and
                                                  :op1 (c49-10 / pie
                                                               :mod (c49-7 / steak))
                                                  :op2 (c49-8 / pie
                                                              :mod (c49-14 / kidney))))))

# ::snt And what about the one by the bus station I think it was the Toreador?? Anyone remember that?
# ::tokens ["And", "what", "about", "the", "one", "by", "the", "bus", "station", "I", "think", "it", "was", "the", "Toreador", "?", "?", "Anyone", "remember", "that", "?"]
# ::lemmas ["and", "what", "about", "the", "one", "by", "the", "bus", "station", "i", "think", "it", "be", "the", "Toreador", "?", "?", "anyone", "remember", "that", "?"]
(c50-10 / multi-sentence
        :snt1 (c50-2 / and
                     :op2 (c50-12 / amr-unknown
                                  :topic (c50-4 / one
                                                :location (c50-0 / station
                                                                 :mod (c50-8 / bus))
                                                :ARG1-of (c50-5 / think-01
                                                                :ARG0 (c50-9 / i))
                                                :mod (c50-7 / person
                                                            :name (c50-11 / name
                                                                          :op1 "Toreador")))))
        :snt2 (c50-6 / remember-01
                     :ARG0 (c50-1 / anyone)
                     :ARG1 (c50-3 / that)
                     :polarity c50-12))
