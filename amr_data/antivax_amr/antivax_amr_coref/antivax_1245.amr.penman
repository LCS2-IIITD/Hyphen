# ::snt Starting March , YOU QUALIFY!!!
# ::tokens ["Starting", "March", ",", "YOU", "QUALIFY", "!", "!", "!"]
# ::lemmas ["start", "March", ",", "you", "QUALIFY", "!", "!", "!"]
(c1-0 / bonus
      :domain (c1-2 / you)
      :ARG1-of (c1-3 / start-01
                     :time (c1-1 / date-entity
                                 :month 3))
      :mode expressive)

# ::snt I was hoping R would have thought to bring you guys!!! But I agree with you completely.
# ::tokens ["I", "was", "hoping", "R", "would", "have", "thought", "to", "bring", "you", "guys", "!", "!", "!", "But", "I", "agree", "with", "you", "completely", "."]
# ::lemmas ["i", "be", "hope", "r", "would", "have", "think", "to", "bring", "you", "guy", "!", "!", "!", "but", "i", "agree", "with", "you", "completely", "."]
(c2-10 / multi-sentence
       :snt1 (c2-3 / hope-01
                   :ARG0 (c2-9 / i)
                   :ARG1 (c2-5 / think-01
                               :ARG0 (c2-6 / person
                                           :name (c2-11 / name
                                                        :op1 "R"))
                               :ARG1 (c2-8 / bring-01
                                           :ARG0 c2-6
                                           :ARG1 (c2-7 / guy
                                                       :mod (c2-12 / you)))))
       :snt2 (c2-2 / contrast-01
                   :ARG2 (c2-1 / agree-01
                               :ARG0 (c2-4 / i)
                               :ARG2 (c2-13 / you)
                               :ARG1-of (c2-0 / complete-02))))

# ::snt I dont know anyone here but J &amp; R. R got his. J doesnt qualify either. Its ok. I just need to be patient. The way I see it, I safely traveled &amp; saw people last year &amp; was fine so what are a few more months of waiting.
# ::tokens ["I", "do", "nt", "know", "anyone", "here", "but", "J", "&", "amp", ";", "R.", "R", "got", "his", ".", "J", "does", "nt", "qualify", "either", ".", "Its", "ok", ".", "I", "just", "need", "to", "be", "patient", ".", "The", "way", "I", "see", "it", ",", "I", "safely", "traveled", "&", "amp", ";", "saw", "people", "last", "year", "&", "amp", ";", "was", "fine", "so", "what", "are", "a", "few", "more", "months", "of", "waiting", "."]
# ::lemmas ["i", "do", "not", "know", "anyone", "here", "but", "J", "&", "amp", ";", "R.", "R", "get", "his", ".", "J", "do", "not", "qualify", "either", ".", "its", "ok", ".", "i", "just", "need", "to", "be", "patient", ".", "the", "way", "i", "see", "it", ",", "i", "safely", "travel", "&", "amp", ";", "see", "people", "last", "year", "&", "amp", ";", "be", "fine", "so", "what", "be", "a", "few", "more", "months", "of", "wait", "."]
(c3-11 / multi-sentence
       :snt1 (c3-35 / know-02
                    :ARG0 (c3-4 / i)
                    :ARG1 (c3-26 / anyone
                                 :location (c3-29 / here)
                                 :ARG2-of (c3-14 / except-01
                                                 :ARG1 (c3-13 / and
                                                              :op1 (c3-34 / person
                                                                          :name (c3-12 / name
                                                                                       :op1 "J"))
                                                              :op2 (c3-31 / person
                                                                          :name (c3-3 / name
                                                                                      :op1 "R.")))))
                    :snt2 (c3-2 / qualify-02
                                :ARG1 (c3-18 / person
                                             :name (c3-23 / name
                                                          :op1 "J"))
                                :mod (c3-30 / either)
                                :polarity -)
                    :snt3 (c3-9 / okay-04
                                :ARG1 (c3-19 / it))
                    :snt4 (c3-5 / need-01
                                :ARG0 (c3-20 / i)
                                :ARG1 (c3-17 / patient-01
                                             :ARG1 c3-20)
                                :mod (c3-33 / just))
                    :snt5 (c3-0 / and
                                :op1 (c3-10 / travel-01
                                            :ARG0 c3-20
                                            :ARG0-of (c3-15 / safe-01))
                                :op2 (c3-25 / see-01
                                            :ARG0 c3-20
                                            :ARG1 (c3-1 / person)
                                            :time (c3-24 / year
                                                         :mod (c3-32 / last)))
                                :op3 (c3-27 / fine-04
                                            :ARG1 c3-20)
                                :ARG0-of (c3-6 / cause-01
                                               :ARG1 (c3-7 / wait-01
                                                           :ARG2 (c3-22 / few
                                                                        :op1 (c3-8 / temporal-quantity
                                                                                   :unit (c3-28 / month)
                                                                                   :quant 1)
                                                                        :mod (c3-21 / more))))
                                :manner (c3-16 / way
                                               :ARG1-of c3-25
                                               :ARG0 c3-20))
                    :polarity -))

# ::snt You may try going with someone who does qualify. Ive heard from friends they went with &amp; got vaccinated too. Idk why or how...maybe people no showed so they dont want to waste. Im trying this too
# ::tokens ["You", "may", "try", "going", "with", "someone", "who", "does", "qualify", ".", "I", "ve", "heard", "from", "friends", "they", "went", "with", "&", "amp", ";", "got", "vaccinated", "too", ".", "Idk", "why", "or", "how", "...", "maybe", "people", "no", "showed", "so", "they", "do", "nt", "want", "to", "waste", ".", "I", "m", "trying", "this", "too"]
# ::lemmas ["you", "may", "try", "go", "with", "someone", "who", "do", "qualify", ".", "i", "ve", "hear", "from", "friend", "they", "go", "with", "&", "amp", ";", "got", "vaccinate", "too", ".", "Idk", "why", "or", "how", "...", "maybe", "people", "no", "show", "so", "they", "do", "not", "want", "to", "waste", ".", "i", "m", "try", "this", "too"]
(c4-11 / multi-sentence
       :snt1 (c4-30 / possible-01
                    :ARG1 (c4-9 / try-01
                                :ARG0 (c4-23 / you)
                                :ARG1 (c4-10 / go-02
                                             :ARG0 c4-23
                                             :accompanier (c4-16 / someone
                                                                 :ARG1-of (c4-2 / qualify-02)))))
       :snt2 (c4-27 / hear-01
                    :ARG0 (c4-4 / i)
                    :ARG1 (c4-24 / and
                                 :op1 (c4-22 / go-02
                                             :ARG0 (c4-7 / they)
                                             :accompanier (c4-14 / and
                                                                 :op1 (c4-5 / company
                                                                            :name (c4-12 / name
                                                                                         :op1 "&"
                                                                                         :op2 "amp"))))
                                 :op2 (c4-8 / vaccinate-01
                                            :ARG1 c4-7
                                            :mod (c4-13 / too)))
                    :ARG2 (c4-28 / person
                                 :ARG0-of (c4-3 / have-rel-role-91
                                                :ARG1 c4-7
                                                :ARG2 (c4-26 / friend))))
       :snt3 (c4-1 / and
                   :op1 (c4-31 / know-01
                               :ARG0 (c4-19 / i)
                               :ARG1 (c4-32 / amr-unknown)
                               :polarity -)
                   :op2 (c4-18 / possible-01
                               :ARG1 (c4-29 / show-01
                                            :ARG1 (c4-17 / person)
                                            :ARG0-of (c4-0 / cause-01
                                                           :ARG1 (c4-6 / want-01
                                                                       :ARG0 c4-17
                                                                       :ARG1 (c4-15 / waste-01
                                                                                    :ARG0 c4-17)
                                                                       :polarity -))
                                            :polarity -)))
       :snt4 (c4-20 / try-01
                    :ARG0 (c4-21 / i)
                    :ARG1 (c4-25 / this)
                    :mod c4-13))
