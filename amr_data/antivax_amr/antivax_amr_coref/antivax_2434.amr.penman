# ::snt Life saving elixir? Idiot.
# ::tokens ["Life", "saving", "elixir", "?", "Idiot", "."]
# ::lemmas ["life", "save", "elixir", "?", "Idiot", "."]
(c1-3 / idiot
      :polarity (c1-1 / amr-unknown)
      :domain (c1-4 / elixir
                    :ARG0-of (c1-0 / save-02
                                   :ARG1 (c1-2 / life))))

# ::snt Thanks for confirming vaccination benefits.
# ::tokens ["Thanks", "for", "confirming", "vaccination", "benefits", "."]
# ::lemmas ["thank", "for", "confirm", "vaccination", "benefit", "."]
(c2-2 / thank-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-5 / you)
      :ARG2 (c2-0 / confirm-01
                  :ARG0 c2-5
                  :ARG1 (c2-3 / benefit-01
                              :ARG0 (c2-1 / vaccinate-01))))

# ::snt One more week and Ill be officially, fully vaccinated!!
# ::tokens ["One", "more", "week", "and", "Ill", "be", "officially", ",", "fully", "vaccinated", "!", "!"]
# ::lemmas ["One", "more", "week", "and", "Ill", "be", "officially", ",", "fully", "vaccinated", "!", "!"]
(c4-2 / have-condition-91
      :ARG1 (c4-3 / vaccinate-01
                  :ARG1 (c4-6 / i)
                  :degree (c4-0 / full)
                  :mod (c4-4 / official))
      :ARG2 (c4-5 / temporal-quantity
                  :unit (c4-1 / week)
                  :mod (c4-7 / more)
                  :quant 1))

# ::snt Woman like you Make this country much more better
# ::tokens ["Woman", "like", "you", "Make", "this", "country", "much", "more", "better"]
# ::lemmas ["woman", "like", "you", "make", "this", "country", "much", "more", "well"]
(c5-8 / make-02
      :ARG0 (c5-1 / woman
                  :ARG1-of (c5-6 / resemble-01
                                 :ARG2 (c5-9 / you)))
      :ARG1 (c5-3 / have-degree-91
                  :ARG1 (c5-0 / country
                              :mod (c5-5 / this))
                  :ARG2 (c5-7 / good-02
                              :ARG1 c5-0)
                  :ARG3 (c5-2 / more
                              :quant (c5-4 / much))))

# ::snt Yeah, baby!!!
# ::tokens ["Yeah", ",", "baby", "!", "!", "!"]
# ::lemmas ["yeah", ",", "baby", "!", "!", "!"]
(c8-0 / baby
      :mode expressive)

# ::snt Wooo Hooo
# ::tokens ["Wooo", "Hooo"]
# ::lemmas ["Wooo", "Hooo"]
(c9-0 / woo-hoo
      :mode expressive)

# ::snt thx GOD , MY FAMILY RECEIVED OURS ; BIDEN*_ PROGRESS - would have Never Happen Under Putin Olargrach d.t., the Con man &amp; the GRIFTER
# ::tokens ["thx", "GOD", ",", "MY", "FAMILY", "RECEIVED", "OURS", ";", "BIDEN", "*", "_", "PROGRESS", "-", "would", "have", "Never", "Happen", "Under", "Putin", "Olargrach", "d.t", ".", ",", "the", "Con", "man", "&", "amp", ";", "the", "GRIFTER"]
# ::lemmas ["thx", "GOD", ",", "my", "FAMILY", "RECEIVED", "OURS", ";", "BIDEN", "*", "_", "progress", "-", "would", "have", "never", "happen", "under", "Putin", "Olargrach", "d.t", ".", ",", "the", "Con", "man", "&", "amp", ";", "the", "GRIFTER"]
(c10-15 / multi-sentence
        :snt1 (c10-10 / remember-01
                      :ARG0 (c10-3 / family
                                   :poss (c10-14 / i)
                                   :ARG1-of c10-10))
        :snt2 (c10-0 / succeed-01
                     :ARG0 (c10-11 / person
                                   :name (c10-16 / name
                                                 :op1 "Putin"))
                     :time (c10-17 / ever))
        :snt3 (c10-9 / person
                     :name (c10-12 / name
                                   :op1 "Olargrach")
                     :ARG0-of (c10-7 / have-rel-role-91
                                     :ARG1 (c10-6 / person
                                                  :name (c10-8 / name
                                                               :op1 "Con"
                                                               :op2 "Man"))
                                     :ARG2 (c10-1 / and
                                                  :op1 (c10-4 / man)
                                                  :op2 (c10-5 / person
                                                              :name (c10-2 / name
                                                                           :op1 "amp")))))
        :snt4 (c10-13 / beautiful-02))

# ::snt Excellent!!
# ::tokens ["Excellent", "!", "!"]
# ::lemmas ["excellent", "!", "!"]
(c11-0 / excellent-02
       :mode expressive)

# ::snt Me too!! And I'm in the CLE -- let's have cocktails ... or something like that
# ::tokens ["Me", "too", "!", "!", "And", "I", "'m", "in", "the", "CLE", "--", "let", "'s", "have", "cocktails", "...", "or", "something", "like", "that"]
# ::lemmas ["i", "too", "!", "!", "and", "i", "be", "in", "the", "CLE", "--", "let", "us", "have", "cocktail", "...", "or", "something", "like", "that"]
(c12-12 / multi-sentence
        :snt1 (c12-11 / i
                      :mod (c12-7 / too))
        :snt2 (c12-2 / and
                     :op2 (c12-10 / be-located-at-91
                                  :ARG1 c12-11
                                  :ARG2 (c12-3 / city-district
                                               :name (c12-13 / name
                                                             :op1 "Cle")))
                     :snt3 (c12-9 / let-01
                                  :ARG1 (c12-5 / have-06
                                               :ARG0 (c12-4 / we)
                                               :ARG1 (c12-6 / or
                                                            :op1 (c12-0 / cocktail)
                                                            :op2 (c12-1 / something
                                                                        :ARG1-of (c12-8 / resemble-01
                                                                                        :ARG2 c12-0)))))))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c13-1 / thank-01
       :ARG0 (c13-0 / i)
       :ARG1 (c13-2 / you))

# ::snt SCIENCE
# ::tokens ["SCIENCE"]
# ::lemmas ["science"]
(c15-0 / science)

# ::snt Dose is administered weeks after the first. Full immunity is two weeks following the second dose. Be very careful when you throw around information regarding vaccines. Peoples lives depend on it.
# ::tokens ["Dose", "is", "administered", "weeks", "after", "the", "first", ".", "Full", "immunity", "is", "two", "weeks", "following", "the", "second", "dose", ".", "Be", "very", "careful", "when", "you", "throw", "around", "information", "regarding", "vaccines", ".", "Peoples", "lives", "depend", "on", "it", "."]
# ::lemmas ["dose", "be", "administer", "weeks", "after", "the", "first", ".", "full", "immunity", "be", "two", "weeks", "follow", "the", "second", "dose", ".", "be", "very", "careful", "when", "you", "throw", "around", "information", "regard", "vaccine", ".", "people", "life", "depend", "on", "it", "."]
(c18-9 / multi-sentence
       :snt1 (c18-19 / administer-01
                     :ARG1 (c18-0 / dose)
                     :time (c18-12 / after
                                   :op1 (c18-17 / dose
                                                :ord (c18-6 / ordinal-entity
                                                            :value 1))
                                   :quant (c18-21 / multiple
                                                  :op1 (c18-8 / temporal-quantity
                                                              :unit (c18-3 / week)
                                                              :quant 1))))
       :snt2 (c18-1 / immune-02
                    :ARG1-of (c18-20 / full-09)
                    :time (c18-16 / follow-01
                                  :ARG2 (c18-13 / dose
                                                :ord (c18-23 / ordinal-entity
                                                             :value 2)))
                    :duration (c18-4 / temporal-quantity
                                     :unit (c18-11 / week)
                                     :quant 2))
       :snt3 (c18-2 / care-04
                    :ARG0 (c18-18 / you)
                    :ARG1 (c18-14 / information
                                  :topic (c18-5 / vaccine))
                    :degree (c18-22 / very)
                    :time (c18-10 / throw-around-04
                                  :ARG0 c18-18
                                  :ARG1 c18-14))
       :snt4 (c18-7 / depend-01
                    :ARG0 (c18-24 / live-01
                                  :ARG0 (c18-25 / person))
                    :ARG1 (c18-15 / it)))

# ::snt Thank you .... hope you will be fully vaccinated soon as well.
# ::tokens ["Thank", "you", "....", "hope", "you", "will", "be", "fully", "vaccinated", "soon", "as", "well", "."]
# ::lemmas ["thank", "you", "....", "hope", "you", "will", "be", "fully", "vaccinate", "soon", "as", "well", "."]
(c20-6 / multi-sentence
       :snt1 (c20-5 / thank-01
                    :ARG1 (c20-7 / you))
       :snt2 (c20-3 / hope-01
                    :ARG1 (c20-4 / vaccinate-01
                                 :ARG1 (c20-8 / you)
                                 :degree (c20-2 / full)
                                 :time (c20-0 / soon)
                                 :mod (c20-1 / as-well))))

# ::snt It's a great feeling!
# ::tokens ["It", "'s", "a", "great", "feeling", "!"]
# ::lemmas ["it", "be", "a", "great", "feeling", "!"]
(c21-2 / feel-01
       :ARG1 (c21-1 / it)
       :mod (c21-0 / great))

# ::snt Congrats Mia...i'm jelly but so happy for you!!!
# ::tokens ["Congrats", "Mia", "...", "i'm", "jelly", "but", "so", "happy", "for", "you", "!", "!", "!"]
# ::lemmas ["Congrats", "Mia", "...", "i'm", "jelly", "but", "so", "happy", "for", "you", "!", "!", "!"]
(c22-0 / say-01
       :ARG0 (c22-6 / i)
       :ARG1 (c22-2 / congratulate-01
                    :ARG0 c22-6
                    :ARG1 (c22-4 / person
                                 :name (c22-7 / name
                                              :op1 "Mia"))
                    :ARG1-of (c22-1 / contrast-01
                                    :ARG2 (c22-3 / happy-01
                                                 :ARG0 c22-4
                                                 :ARG1 c22-6
                                                 :degree (c22-5 / so))))
       :ARG2 c22-4)

# ::snt Hooray.
# ::tokens ["Hooray", "."]
# ::lemmas ["Hooray", "."]
(c24-0 / hooray)

# ::snt Sooo happy for you my friend! Yay!
# ::tokens ["Sooo", "happy", "for", "you", "my", "friend", "!", "Yay", "!"]
# ::lemmas ["Sooo", "happy", "for", "you", "my", "friend", "!", "Yay", "!"]
(c25-6 / multi-sentence
       :snt1 (c25-3 / happy-01
                    :ARG1 (c25-5 / person
                                 :ARG0-of (c25-4 / have-rel-role-91
                                                 :ARG1 (c25-2 / i)
                                                 :ARG2 (c25-1 / friend)))
                    :degree (c25-0 / so))
       :snt2 (c25-7 / yay
                    :mode expressive))

# ::snt I can't wait to get my . Congratulations!
# ::tokens ["I", "ca", "n't", "wait", "to", "get", "my", ".", "Congratulations", "!"]
# ::lemmas ["i", "can", "not", "wait", "to", "get", "my", ".", "congratulation", "!"]
(c26-6 / multi-sentence
       :snt1 (c26-1 / wait-01
                    :ARG1 (c26-5 / i)
                    :ARG2 (c26-4 / get-01
                                 :ARG0 c26-5
                                 :ARG1 (c26-2 / thing
                                              :poss c26-5))
                    :ARG1-of (c26-3 / possible-01
                                    :polarity -))
       :snt2 (c26-0 / congratulate-01
                    :ARG1 (c26-7 / you)
                    :mode expressive))

# ::snt So happy, Mia!!! Love to you and your whole family.
# ::tokens ["So", "happy", ",", "Mia", "!", "!", "!", "Love", "to", "you", "and", "your", "whole", "family", "."]
# ::lemmas ["so", "happy", ",", "Mia", "!", "!", "!", "love", "to", "you", "and", "your", "whole", "family", "."]
(c28-8 / multi-sentence
       :snt1 (c28-0 / say-01
                    :ARG1 (c28-4 / happy-01
                                 :degree (c28-6 / so))
                    :ARG2 (c28-7 / person
                                 :name (c28-9 / name
                                              :op1 "Mia")))
       :snt2 (c28-5 / love-01
                    :ARG1 (c28-1 / and
                                 :op1 (c28-10 / you)
                                 :op2 (c28-2 / family
                                             :poss c28-10
                                             :mod (c28-3 / whole)))))

# ::snt Yes!!
# ::tokens ["Yes", "!", "!"]
# ::lemmas ["yes", "!", "!"]
(c29-0 / yes
       :mode expressive)

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c31-1 / thank-01
       :ARG0 (c31-0 / i)
       :ARG1 (c31-2 / you))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c32-0 / congratulate-01
       :mode expressive)

# ::snt Except for the + people who died from the vaccine
# ::tokens ["Except", "for", "the", "+", "people", "who", "died", "from", "the", "vaccine"]
# ::lemmas ["except", "for", "the", "+", "people", "who", "die", "from", "the", "vaccine"]
(c33-4 / except-01
       :ARG1 (c33-3 / person
                    :quant +)
       :ARG1-of (c33-0 / die-01
                       :ARG1-of (c33-1 / cause-01
                                       :ARG0 (c33-2 / vaccine))))

# ::snt Am hoping that you will too help developing countries.
# ::tokens ["Am", "hoping", "that", "you", "will", "too", "help", "developing", "countries", "."]
# ::lemmas ["be", "hope", "that", "you", "will", "too", "help", "develop", "country", "."]
(c35-2 / hope-01
       :ARG0 (c35-5 / i)
       :ARG1 (c35-4 / help-01
                    :ARG0 (c35-6 / you)
                    :ARG1 (c35-1 / country
                                 :ARG1-of (c35-0 / develop-02))
                    :mod (c35-3 / too)))

# ::snt Happy for you I got my second yesterday
# ::tokens ["Happy", "for", "you", "I", "got", "my", "second", "yesterday"]
# ::lemmas ["happy", "for", "you", "i", "get", "my", "second", "yesterday"]
(c36-6 / multi-sentence
       :snt1 (c36-0 / happy-01
                    :ARG0 (c36-5 / i)
                    :ARG1 (c36-7 / you))
       :snt2 (c36-4 / get-02
                    :ARG0 (c36-1 / i)
                    :ARG1 (c36-3 / thing
                                 :ord (c36-2 / ordinal-entity
                                             :value 2))
                    :time (c36-8 / yesterday)))

# ::snt Yay!
# ::tokens ["Yay", "!"]
# ::lemmas ["Yay", "!"]
(c37-0 / yay
       :mode expressive)

# ::snt Yay!! Thrilled for you!
# ::tokens ["Yay", "!", "!", "Thrilled", "for", "you", "!"]
# ::lemmas ["Yay", "!", "!", "thrill", "for", "you", "!"]
(c39-0 / multi-sentence
       :snt1 (c39-2 / yay)
       :snt2 (c39-1 / thrill-01
                    :ARG1 (c39-3 / you)
                    :mode expressive))

# ::snt Woot woot!Getting my nd a bit later this morning.
# ::tokens ["Woot", "woot!Getting", "my", "nd", "a", "bit", "later", "this", "morning", "."]
# ::lemmas ["Woot", "woot!gette", "my", "nd", "a", "bit", "later", "this", "morning", "."]
(c41-0 / woot-woot
       :mode expressive)
