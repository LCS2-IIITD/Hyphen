# ::snt Im a front line worker so the city got us all vaccinated somehow.
# ::tokens ["I", "m", "a", "front", "line", "worker", "so", "the", "city", "got", "us", "all", "vaccinated", "somehow", "."]
# ::lemmas ["i", "m", "a", "front", "line", "worker", "so", "the", "city", "get", "we", "all", "vaccinate", "somehow", "."]
(c1-4 / cause-01
      :ARG0 (c1-10 / person
                   :ARG0-of (c1-5 / work-01
                                  :ARG2 (c1-8 / line
                                              :mod (c1-3 / front)))
                   :domain (c1-6 / i))
      :ARG1 (c1-9 / get-04
                  :ARG0 (c1-0 / city)
                  :ARG1 (c1-7 / vaccinate-01
                              :ARG1 (c1-11 / we
                                           :mod (c1-2 / all))
                              :manner (c1-1 / somehow))))

# ::snt Actually, if it grew in the back of my head, is kinda be in favor of that. Just sayin'.
# ::tokens ["Actually", ",", "if", "it", "grew", "in", "the", "back", "of", "my", "head", ",", "is", "kinda", "be", "in", "favor", "of", "that", ".", "Just", "sayin", "'", "."]
# ::lemmas ["actually", ",", "if", "it", "grow", "in", "the", "back", "of", "my", "head", ",", "be", "kinda", "be", "in", "favor", "of", "that", ".", "just", "sayin", "'", "."]
(c2-10 / multi-sentence
       :snt1 (c2-2 / favor-01
                   :ARG1 (c2-6 / that)
                   :degree (c2-11 / kind-of)
                   :condition (c2-7 / grow-01
                                    :ARG1 (c2-9 / it)
                                    :location (c2-5 / back
                                                    :part-of (c2-3 / head
                                                                   :part-of (c2-4 / i)))
                                    :ARG1-of (c2-1 / actual-02)))
       :snt2 (c2-0 / say-01
                   :mod (c2-8 / just)))

# ::snt Ive had both doses. Youll be fine.
# ::tokens ["I", "ve", "had", "both", "doses", ".", "You", "ll", "be", "fine", "."]
# ::lemmas ["i", "ve", "have", "both", "dose", ".", "you", "ll", "be", "fine", "."]
(c3-5 / multi-sentence
      :snt1 (c3-2 / have-03
                  :ARG0 (c3-4 / i)
                  :ARG1 (c3-0 / dose
                              :mod (c3-3 / both)))
      :snt2 (c3-1 / fine-04
                  :ARG1 (c3-6 / you)))

# ::snt So glad you got yours! My year old dad gets his on the th! So excited.
# ::tokens ["So", "glad", "you", "got", "yours", "!", "My", "year", "old", "dad", "gets", "his", "on", "the", "th", "!", "So", "excited", "."]
# ::lemmas ["so", "glad", "you", "get", "your", "!", "my", "year", "old", "dad", "get", "his", "on", "the", "th", "!", "so", "excited", "."]
(c4-14 / multi-sentence
       :snt1 (c4-11 / glad-02
                    :ARG0 (c4-3 / get-01
                                :ARG0 (c4-15 / you)
                                :ARG1 (c4-10 / thing
                                             :poss c4-15))
                    :degree (c4-0 / so))
       :snt2 (c4-2 / get-01
                   :ARG0 (c4-13 / person
                                :ARG0-of (c4-8 / have-rel-role-91
                                               :ARG1 (c4-5 / i)
                                               :ARG2 (c4-1 / dad))
                                :age (c4-7 / temporal-quantity
                                           :unit (c4-16 / year)
                                           :quant 1))
                   :ARG1 (c4-6 / thing
                               :poss c4-13)
                   :location (c4-9 / thing
                                   :mod (c4-4 / th)))
       :snt3 (c4-17 / excite-01
                    :degree (c4-12 / so)))

# ::snt How did you get it?? My father in law cant find a place
# ::tokens ["How", "did", "you", "get", "it", "?", "?", "My", "father", "in", "law", "ca", "nt", "find", "a", "place"]
# ::lemmas ["how", "do", "you", "get", "it", "?", "?", "my", "father", "in", "law", "can", "not", "find", "a", "place"]
(c5-10 / multi-sentence
       :snt1 (c5-8 / get-01
                   :ARG0 (c5-11 / you)
                   :ARG1 (c5-9 / it)
                   :manner (c5-0 / amr-unknown))
       :snt2 (c5-7 / possible-01
                   :ARG1 (c5-1 / find-01
                               :ARG0 (c5-6 / person
                                           :ARG0-of (c5-3 / have-rel-role-91
                                                          :ARG1 (c5-4 / i)
                                                          :ARG2 (c5-5 / father-in-law)))
                               :ARG1 (c5-2 / place))
                   :polarity -))

# ::snt I didnt grow any extra appendages (that I know of). I required a couple of Tylenol for the second dose and felt a little tired but that was all.
# ::tokens ["I", "did", "nt", "grow", "any", "extra", "appendages", "(", "that", "I", "know", "of", ")", ".", "I", "required", "a", "couple", "of", "Tylenol", "for", "the", "second", "dose", "and", "felt", "a", "little", "tired", "but", "that", "was", "all", "."]
# ::lemmas ["i", "do", "not", "grow", "any", "extra", "appendage", "(", "that", "i", "know", "of", ")", ".", "i", "require", "a", "couple", "of", "Tylenol", "for", "the", "second", "dose", "and", "feel", "a", "little", "tired", "but", "that", "be", "all", "."]
(c6-9 / multi-sentence
      :snt1 (c6-8 / grow-01
                  :ARG0 (c6-3 / i)
                  :ARG1 (c6-15 / appendage
                               :mod (c6-12 / extra)
                               :mod (c6-11 / any)
                               :ARG1-of (c6-20 / know-01
                                               :ARG0 (c6-13 / i)))
                  :polarity -)
      :snt2 (c6-4 / contrast-01
                  :ARG1 (c6-1 / and
                              :op1 (c6-7 / require-01
                                         :ARG0 (c6-14 / i)
                                         :ARG1 (c6-19 / product
                                                      :name (c6-10 / name
                                                                   :op1 "Tylenol")
                                                      :quant (c6-0 / couple))
                                         :purpose (c6-2 / dose-01
                                                        :ord (c6-5 / ordinal-entity
                                                                   :value 2)))
                              :op2 (c6-16 / feel-01
                                          :ARG0 c6-14
                                          :ARG1 (c6-6 / tire-01
                                                      :ARG1 c6-14
                                                      :degree (c6-17 / little))))
                  :ARG2 (c6-18 / be-it-08
                               :ARG1 c6-1)))

# ::snt I didn't.....
# ::tokens ["I", "did", "n't", "....."]
# ::lemmas ["i", "do", "not", "....."]
(c7-0 / do-02
      :ARG0 (c7-1 / i)
      :polarity -)
