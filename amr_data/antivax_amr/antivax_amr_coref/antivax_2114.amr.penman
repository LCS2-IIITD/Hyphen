# ::snt Am I turkey?
# ::tokens ["Am", "I", "turkey", "?"]
# ::lemmas ["be", "i", "turkey", "?"]
(c1-2 / turkey
      :polarity (c1-1 / amr-unknown)
      :domain (c1-0 / i))

# ::snt ............
# ::tokens ["............"]
# ::lemmas ["............"]
(c2-0 / amr-empty)

# ::snt K
# ::tokens ["K"]
# ::lemmas ["k"]
(c3-0 / person
      :name (c3-1 / name
                  :op1 "K"))

# ::snt LMAO
# ::tokens ["LMAO"]
# ::lemmas ["lmao"]
(c4-3 / laugh-01
      :ARG0 (c4-1 / i
                  :part (c4-2 / ass))
      :ARG3 (c4-0 / off
                  :op1 c4-2))

# ::snt waittt, do people actually defrost their turkey in a bath tub?
# ::tokens ["waittt", ",", "do", "people", "actually", "defrost", "their", "turkey", "in", "a", "bath", "tub", "?"]
# ::lemmas ["waittt", ",", "do", "people", "actually", "defrost", "their", "turkey", "in", "a", "bath", "tub", "?"]
(c5-0 / say-01
      :ARG1 (c5-1 / defrost-01
                  :ARG0 (c5-6 / person)
                  :ARG1 (c5-4 / turkey
                              :poss c5-6)
                  :polarity (c5-2 / amr-unknown)
                  :location (c5-3 / tub
                                  :mod (c5-5 / bath))
                  :ARG1-of (c5-8 / actual-02))
      :ARG2 c5-6
      :name (c5-7 / name
                  :op1 "Waittt"))

# ::snt The Johnson Twins are the best duo out there. Dwayne being a movie star and Rock being a WWE star must make their mom proud
# ::tokens ["The", "Johnson", "Twins", "are", "the", "best", "duo", "out", "there", ".", "Dwayne", "being", "a", "movie", "star", "and", "Rock", "being", "a", "WWE", "star", "must", "make", "their", "mom", "proud"]
# ::lemmas ["The", "Johnson", "Twins", "be", "the", "good", "duo", "out", "there", ".", "Dwayne", "be", "a", "movie", "star", "and", "Rock", "be", "a", "WWE", "star", "must", "make", "their", "mom", "proud"]
(c6-13 / multi-sentence
       :snt1 (c6-23 / have-degree-91
                    :ARG1 (c6-3 / have-rel-role-91
                                :ARG0 (c6-26 / person
                                             :name (c6-14 / name
                                                          :op1 "Johnson"))
                                :ARG2 (c6-10 / twin))
                    :ARG2 (c6-11 / good-02
                                 :ARG1 c6-3)
                    :ARG3 (c6-22 / most)
                    :ARG5 (c6-0 / duo
                                :location (c6-9 / out-there)))
       :snt2 (c6-4 / infer-01
                   :ARG1 (c6-19 / make-02
                                :ARG0 (c6-21 / and
                                             :op1 (c6-16 / star
                                                         :domain (c6-24 / person
                                                                        :name (c6-2 / name
                                                                                    :op1 "Dwayne"))
                                                         :mod (c6-12 / movie))
                                             :op2 (c6-25 / star
                                                         :domain (c6-18 / person
                                                                        :name (c6-20 / name
                                                                                     :op1 "Rock"))
                                                         :mod (c6-7 / company
                                                                    :name (c6-6 / name
                                                                                :op1 "WWE"))))
                                :ARG1 (c6-17 / pride-01
                                             :ARG0 (c6-1 / person
                                                         :ARG0-of (c6-5 / have-rel-role-91
                                                                        :ARG1 (c6-8 / they)
                                                                        :ARG2 (c6-15 / mom))
                                                         :ARG1-of c6-17)))))

# ::snt i completely forgot that happened, thank you for reminding me
# ::tokens ["i", "completely", "forgot", "that", "happened", ",", "thank", "you", "for", "reminding", "me"]
# ::lemmas ["i", "completely", "forget", "that", "happen", ",", "thank", "you", "for", "remind", "i"]
(c7-0 / and
      :op1 (c7-1 / forget-01
                 :ARG0 (c7-6 / i)
                 :ARG1 (c7-4 / that)
                 :ARG1-of (c7-2 / complete-02))
      :op2 (c7-3 / thank-01
                 :ARG0 c7-6
                 :ARG1 (c7-7 / you)
                 :ARG2 (c7-5 / remind-01
                             :ARG0 c7-7
                             :ARG2 c7-6)))

# ::snt Youre legally not allowed to live anymore because of this
# ::tokens ["You", "re", "legally", "not", "allowed", "to", "live", "anymore", "because", "of", "this"]
# ::lemmas ["you", "re", "legally", "not", "allow", "to", "live", "anymore", "because", "of", "this"]
(c8-0 / allow-01
      :ARG1 (c8-3 / live-01
                  :ARG0 (c8-5 / you)
                  :time (c8-6 / anymore))
      :ARG1-of (c8-1 / cause-01
                     :ARG0 (c8-2 / this))
      :manner (c8-4 / law)
      :polarity -)

# ::snt youre the only one....
# ::tokens ["you", "re", "the", "only", "one", "...."]
# ::lemmas ["you", "re", "the", "only", "one", "...."]
(c9-0 / one
      :mod (c9-1 / only)
      :domain (c9-2 / you))

# ::snt This is the only single one of these that's made me laugh so far
# ::tokens ["This", "is", "the", "only", "single", "one", "of", "these", "that", "'s", "made", "me", "laugh", "so", "far"]
# ::lemmas ["this", "be", "the", "only", "single", "one", "of", "these", "that", "be", "make", "i", "laugh", "so", "far"]
(c11-4 / one
       :ARG1-of (c11-0 / single-02)
       :mod (c11-3 / only)
       :ARG1-of (c11-8 / include-91
                       :ARG2 (c11-5 / this))
       :ARG0-of (c11-9 / make-02
                       :ARG1 (c11-6 / laugh-01
                                    :ARG0 (c11-2 / i))
                       :time (c11-7 / so-far))
       :domain (c11-1 / this))

# ::snt Is this what you did?
# ::tokens ["Is", "this", "what", "you", "did", "?"]
# ::lemmas ["be", "this", "what", "you", "do", "?"]
(c12-0 / do-02
       :polarity (c12-1 / amr-unknown)
       :ARG0 (c12-3 / you)
       :ARG1 (c12-2 / this))

# ::snt -You
# ::tokens ["-You"]
# ::lemmas ["-you"]
(c13-0 / you)

# ::snt froste is immune to corona? froste is going to save humanity?
# ::tokens ["froste", "is", "immune", "to", "corona", "?", "froste", "is", "going", "to", "save", "humanity", "?"]
# ::lemmas ["froste", "be", "immune", "to", "corona", "?", "froste", "be", "go", "to", "save", "humanity", "?"]
(c15-7 / multi-sentence
       :snt1 (c15-6 / immune-02
                    :ARG1 (c15-5 / person
                                 :name (c15-8 / name
                                              :op1 "Froste"))
                    :ARG2 (c15-2 / corona))
       :snt2 (c15-0 / save-02
                    :ARG0 c15-5
                    :name (c15-4 / name
                                 :op1 "Froste"))
       :ARG1 (c15-3 / humanity)
       :polarity (c15-1 / amr-unknown))

# ::snt caught yourself in k bro
# ::tokens ["caught", "yourself", "in", "k", "bro"]
# ::lemmas ["catch", "yourself", "in", "k", "bro"]
(c16-0 / catch-02
       :ARG0 (c16-4 / you
                    :ARG1-of c16-0)
       :ARG2 (c16-3 / person
                    :ARG0-of (c16-1 / have-rel-role-91
                                    :ARG1 c16-4
                                    :ARG2 (c16-2 / bro))))

# ::snt Lol I still cant believe that haha
# ::tokens ["Lol", "I", "still", "ca", "nt", "believe", "that", "haha"]
# ::lemmas ["Lol", "i", "still", "can", "not", "believe", "that", "haha"]
(c17-6 / possible-01
       :ARG1 (c17-5 / believe-01
                    :ARG0 (c17-1 / i)
                    :ARG1 (c17-2 / that))
       :mod (c17-0 / still)
       :mod (c17-3 / laugh-01
                   :ARG0 c17-1
                   :manner (c17-4 / loud)
                   :mode expressive)
       :polarity -)

# ::snt COVID=HOAX
# ::tokens ["COVID", "=", "HOAX"]
# ::lemmas ["covid", "=", "hoax"]
(c18-2 / and
       :op1 (c18-0 / video)
       :op2 (c18-1 / publication
                   :name (c18-3 / name
                                :op1 "HOAX")))

# ::snt you gotta be down so bad after that...
# ::tokens ["you", "got", "ta", "be", "down", "so", "bad", "after", "that", "..."]
# ::lemmas ["you", "got", "to", "be", "down", "so", "bad", "after", "that", "..."]
(c19-5 / infer-01
       :ARG1 (c19-0 / down-01
                    :ARG1 (c19-6 / you)
                    :ARG1-of (c19-4 / bad-05
                                    :degree (c19-1 / so))
                    :time (c19-2 / after
                                 :op1 (c19-3 / that))))

# ::snt - someone who defrosted a turkey in the bathtub
# ::tokens ["-", "someone", "who", "defrosted", "a", "turkey", "in", "the", "bathtub"]
# ::lemmas ["-", "someone", "who", "defrost", "a", "turkey", "in", "the", "bathtub"]
(c20-0 / someone
       :ARG0-of (c20-3 / rost-01
                       :ARG1 (c20-2 / turkey)
                       :location (c20-1 / bathtub)))

# ::snt Rock??? Like igneous
# ::tokens ["Rock", "?", "?", "?", "Like", "igneous"]
# ::lemmas ["Rock", "?", "?", "?", "like", "igneous"]
(c21-5 / multi-sentence
       :snt1 (c21-3 / rock
                    :mode expressive)
       :snt2 (c21-1 / resemble-01
                    :ARG1 (c21-4 / rock)
                    :ARG2 (c21-2 / rock
                                 :mod (c21-0 / igneous))))

# ::snt Youre traumatized huh
# ::tokens ["You", "re", "traumatized", "huh"]
# ::lemmas ["you", "re", "traumatize", "huh"]
(c22-1 / traumatize-01
       :ARG1 (c22-2 / you)
       :mod (c22-0 / huh
                   :mode expressive))

# ::snt Aint no way...
# ::tokens ["Ai", "nt", "no", "way", "..."]
# ::lemmas ["ai", "nt", "no", "way", "..."]
(c24-0 / way
       :domain (c24-1 / event)
       :polarity -)

# ::snt My shit built like Dwayne The Rock Johnson
# ::tokens ["My", "shit", "built", "like", "Dwayne", "The", "Rock", "Johnson"]
# ::lemmas ["my", "shit", "build", "like", "Dwayne", "The", "Rock", "Johnson"]
(c25-3 / build-01
       :ARG1 (c25-0 / shit
                    :poss (c25-4 / i))
       :ARG1-of (c25-1 / resemble-01
                       :ARG2 (c25-2 / person
                                    :name (c25-5 / name
                                                 :op1 "Dwayne"
                                                 :op2 "The"
                                                 :op3 "Rock"
                                                 :op4 "Johnson"))))

# ::snt so ur good then
# ::tokens ["so", "ur", "good", "then"]
# ::lemmas ["so", "ur", "good", "then"]
(c26-1 / infer-01
       :ARG1 (c26-0 / good-02
                    :ARG1 (c26-2 / you)))

# ::snt your chance to say deFROSTEd leaving a clue that it was you who did that. word play smh
# ::tokens ["your", "chance", "to", "say", "deFROSTEd", "leaving", "a", "clue", "that", "it", "was", "you", "who", "did", "that", ".", "word", "play", "smh"]
# ::lemmas ["your", "chance", "to", "say", "deFROSTEd", "leave", "a", "clue", "that", "it", "be", "you", "who", "do", "that", ".", "word", "play", "smh"]
(c27-8 / multi-sentence
       :snt1 (c27-3 / chance-02
                    :ARG0 (c27-10 / you)
                    :ARG1 (c27-0 / say-01
                                 :ARG0 c27-10
                                 :ARG1 (c27-5 / leave-13
                                              :ARG0 (c27-7 / person
                                                           :name (c27-9 / name
                                                                        :op1 "deFROSTEd"))
                                              :ARG1 (c27-1 / clue
                                                           :topic (c27-2 / do-02
                                                                         :ARG0 (c27-11 / you)
                                                                         :ARG1 (c27-4 / that))))))
       :snt2 (c27-6 / string-entity
                    :mod c27-6
                    :value "play"
                    :value "smh"))

# ::snt you the only one who did this tho
# ::tokens ["you", "the", "only", "one", "who", "did", "this", "tho"]
# ::lemmas ["you", "the", "only", "one", "who", "do", "this", "tho"]
(c28-3 / one
       :mod (c28-2 / only)
       :domain (c28-5 / you)
       :ARG0-of (c28-0 / do-02
                       :ARG1 (c28-4 / this))
       :ARG1-of (c28-1 / have-concession-91))

# ::snt Wrong your
# ::tokens ["Wrong", "your"]
# ::lemmas ["wrong", "your"]
(c30-0 / wrong-04
       :ARG1 (c30-1 / you))

# ::snt Yo what
# ::tokens ["Yo", "what"]
# ::lemmas ["Yo", "what"]
(c31-1 / yo
       :mod (c31-0 / thing))

# ::snt The immune system is like a muscle, you gotta work it out.
# ::tokens ["The", "immune", "system", "is", "like", "a", "muscle", ",", "you", "got", "ta", "work", "it", "out", "."]
# ::lemmas ["the", "immune", "system", "be", "like", "a", "muscle", ",", "you", "got", "to", "work", "it", "out", "."]
(c33-1 / and
       :op1 (c33-4 / resemble-01
                   :ARG1 (c33-0 / system
                                :ARG1-of (c33-5 / immune-02))
                   :ARG2 (c33-6 / muscle))
       :op2 (c33-3 / obligate-01
                   :ARG1 (c33-7 / you)
                   :ARG2 (c33-2 / work-out-02
                                :ARG0 c33-7
                                :ARG1 c33-0)))

# ::snt Imma be honest I think youre the ONLY one who did this
# ::tokens ["Imma", "be", "honest", "I", "think", "you", "re", "the", "ONLY", "one", "who", "did", "this"]
# ::lemmas ["Imma", "be", "honest", "i", "think", "you", "re", "the", "only", "one", "who", "do", "this"]
(c34-2 / honest-01
       :ARG0 (c34-6 / i)
       :ARG1 (c34-5 / think-01
                    :ARG0 c34-6
                    :ARG1 (c34-4 / one
                                 :mod (c34-3 / only)
                                 :domain (c34-7 / you)
                                 :ARG0-of (c34-0 / do-02
                                                 :ARG1 (c34-1 / this)))))

# ::snt mf ate that turkey tub
# ::tokens ["mf", "ate", "that", "turkey", "tub"]
# ::lemmas ["mf", "eat", "that", "turkey", "tub"]
(c35-5 / eat-01
       :ARG0 (c35-2 / person
                    :name (c35-3 / name
                                 :op1 "Mf"))
       :ARG1 (c35-1 / tub
                    :mod (c35-0 / turkey)
                    :mod (c35-4 / that)))

# ::snt lmfaoo you just like this mf named
# ::tokens ["lmfaoo", "you", "just", "like", "this", "mf", "named"]
# ::lemmas ["lmfaoo", "you", "just", "like", "this", "mf", "name"]
(c36-0 / say-01
       :ARG0 (c36-6 / i)
       :ARG1 (c36-3 / like-01
                    :ARG0 (c36-8 / you)
                    :ARG1 (c36-4 / person
                                 :name (c36-7 / name
                                              :op1 "mf")
                                 :ARG1-of (c36-2 / name-01
                                                 :ARG2 (c36-1 / this)))
                    :mod (c36-5 / just))
       :ARG2 c36-4)
