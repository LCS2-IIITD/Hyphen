# ::snt I been thinking about doing it why not at this point
# ::tokens ["I", "been", "thinking", "about", "doing", "it", "why", "not", "at", "this", "point"]
# ::lemmas ["i", "been", "think", "about", "do", "it", "why", "not", "at", "this", "point"]
(c1-5 / think-01
      :ARG0 (c1-7 / i)
      :ARG1 (c1-0 / do-02
                  :ARG0 c1-7
                  :ARG1 (c1-4 / it))
      :ARG1-of (c1-2 / cause-01
                     :ARG0 (c1-1 / amr-unknown))
      :time (c1-6 / point
                  :mod (c1-3 / this)))

# ::snt God save you Leya
# ::tokens ["God", "save", "you", "Leya"]
# ::lemmas ["God", "save", "you", "Leya"]
(c2-0 / say-01
      :ARG0 (c2-5 / i)
      :ARG1 (c2-4 / save-02
                  :ARG0 (c2-3 / person
                              :name (c2-6 / name
                                          :op1 "God"))
                  :ARG1 (c2-1 / person
                              :name (c2-2 / name
                                          :op1 "Leya")
                              :ARG2-of c2-0)))

# ::snt of the vaccines require shots, one of the vaccines only requires shot. so just curious if she'll have to go back
# ::tokens ["of", "the", "vaccines", "require", "shots", ",", "one", "of", "the", "vaccines", "only", "requires", "shot", ".", "so", "just", "curious", "if", "she", "'ll", "have", "to", "go", "back"]
# ::lemmas ["of", "the", "vaccine", "require", "shot", ",", "one", "of", "the", "vaccine", "only", "require", "shoot", ".", "so", "just", "curious", "if", "she", "'ll", "have", "to", "go", "back"]
(c3-15 / multi-sentence
       :snt1 (c3-10 / require-01
                    :ARG0 (c3-8 / vaccine
                                :ARG1-of (c3-14 / include-91
                                                :ARG2 (c3-1 / vaccine))
                                :quant 1)
                    :ARG1 (c3-0 / shoot-01))
       :snt2 (c3-7 / require-01
                   :ARG0 (c3-5 / vaccine
                               :ARG1-of (c3-3 / include-91
                                              :ARG2 c3-1)
                               :quant 1)
                   :ARG1 (c3-13 / shoot-01)
                   :mod (c3-9 / only))
       :snt3 (c3-2 / curious-01
                   :ARG0 (c3-4 / obligate-01
                               :ARG1 (c3-6 / she)
                               :ARG2 (c3-12 / go-back-19
                                            :ARG1 c3-6))
                   :ARG1 c3-6
                   :mod (c3-11 / just)))

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c4-0 / good-02)

# ::snt Got mine today!! Ready to partay!!
# ::tokens ["Got", "mine", "today", "!", "!", "Ready", "to", "partay", "!", "!"]
# ::lemmas ["got", "mine", "today", "!", "!", "ready", "to", "partay", "!", "!"]
(c5-7 / multi-sentence
      :snt1 (c5-5 / get-01
                  :ARG0 (c5-6 / i)
                  :ARG1 (c5-2 / thing
                              :poss c5-6)
                  :time (c5-0 / today))
      :snt2 (c5-3 / ready-01
                  :ARG1 (c5-1 / i)
                  :ARG2 (c5-4 / part-01
                              :ARG0 c5-1)))

# ::snt final shot? or another one coming?
# ::tokens ["final", "shot", "?", "or", "another", "one", "coming", "?"]
# ::lemmas ["final", "shot", "?", "or", "another", "one", "come", "?"]
(c6-1 / amr-choice
      :op1 (c6-0 / shoot-01
                 :mod (c6-2 / final))
      :op2 (c6-3 / come-01
                 :ARG1 (c6-4 / shot-01
                             :mod (c6-5 / another))))

# ::snt Oh cool theyre the most effective one(95%). I got that one
# ::tokens ["Oh", "cool", "they", "re", "the", "most", "effective", "one(95", "%", ")", ".", "I", "got", "that", "one"]
# ::lemmas ["oh", "cool", "they", "re", "the", "most", "effective", "one(95", "%", ")", ".", "i", "get", "that", "one"]
(c7-7 / multi-sentence
      :snt1 (c7-0 / cool
                  :mod (c7-4 / oh))
      :snt2 (c7-2 / have-degree-91
                  :ARG1 (c7-5 / they)
                  :ARG2 (c7-8 / effective-04
                              :ARG0 c7-5)
                  :ARG3 (c7-1 / most)
                  :ARG5 (c7-3 / one
                              :quant (c7-6 / percentage-entity
                                           :value 95))))

# ::snt Hooray!
# ::tokens ["Hooray", "!"]
# ::lemmas ["Hooray", "!"]
(c8-0 / hooray
      :mode expressive)

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c9-0 / yes)

# ::snt Pfizer?
# ::tokens ["Pfizer", "?"]
# ::lemmas ["Pfizer", "?"]
(c10-2 / company
       :polarity (c10-0 / amr-unknown)
       :name (c10-1 / name
                    :op1 "Pfizer"))
