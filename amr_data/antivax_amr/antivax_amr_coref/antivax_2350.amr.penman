# ::snt Yup, yet people like to tweet incorrect statements just for shock value.
# ::tokens ["Yup", ",", "yet", "people", "like", "to", "tweet", "incorrect", "statements", "just", "for", "shock", "value", "."]
# ::lemmas ["yup", ",", "yet", "people", "like", "to", "tweet", "incorrect", "statement", "just", "for", "shock", "value", "."]
(c1-3 / have-concession-91
      :ARG2 (c1-7 / like-01
                  :ARG0 (c1-9 / person)
                  :ARG1 (c1-5 / tweet-02
                              :ARG0 c1-9
                              :ARG1 (c1-2 / thing
                                          :ARG1-of (c1-0 / state-01)
                                          :ARG1-of (c1-1 / correct-02
                                                         :polarity -))
                              :purpose (c1-4 / value
                                             :mod (c1-8 / shock-01)
                                             :mod (c1-6 / just))))
      :mod (c1-10 / yup))

# ::snt maybe North Dakota will step up
# ::tokens ["maybe", "North", "Dakota", "will", "step", "up"]
# ::lemmas ["maybe", "North", "Dakota", "will", "step", "up"]
(c3-2 / possible-01
      :ARG1 (c3-0 / step-up-03
                  :ARG0 (c3-1 / state
                              :name (c3-3 / name
                                          :op1 "North"
                                          :op2 "Dakota"))))

# ::snt True story. and $12 million trying to fight netflix over a bigfoot cartoon.
# ::tokens ["True", "story", ".", "and", "$", "12", "million", "trying", "to", "fight", "netflix", "over", "a", "bigfoot", "cartoon", "."]
# ::lemmas ["true", "story", ".", "and", "$", "12", "million", "try", "to", "fight", "netflix", "over", "a", "bigfoot", "cartoon", "."]
(c4-9 / multi-sentence
      :snt1 (c4-0 / story
                  :ARG1-of (c4-7 / true-01))
      :snt2 (c4-6 / try-01
                  :ARG1 (c4-3 / fight-01
                              :ARG1 (c4-4 / company
                                          :name (c4-10 / name
                                                       :op1 "Netflix"))
                              :ARG2 (c4-1 / cartoon
                                          :topic (c4-8 / bigfoot)))
                  :ARG3 (c4-5 / monetary-quantity
                              :unit (c4-2 / dollar)
                              :quant 12000000)))

# ::snt Ha, could be worse, you could live in Alberta where our Premier spent billion on a pipeline that was cancelled.
# ::tokens ["Ha", ",", "could", "be", "worse", ",", "you", "could", "live", "in", "Alberta", "where", "our", "Premier", "spent", "billion", "on", "a", "pipeline", "that", "was", "cancelled", "."]
# ::lemmas ["ha", ",", "could", "be", "bad", ",", "you", "could", "live", "in", "Alberta", "where", "our", "Premier", "spend", "billion", "on", "a", "pipeline", "that", "be", "cancel", "."]
(c5-14 / possible-01
       :ARG1 (c5-8 / have-degree-91
                   :ARG1 (c5-11 / live-01
                                :ARG0 (c5-17 / you)
                                :location (c5-10 / province
                                                 :name (c5-16 / name
                                                              :op1 "Alberta")
                                                 :location-of (c5-0 / spend-01
                                                                    :ARG0 (c5-7 / person
                                                                                :ARG0-of (c5-13 / have-org-role-91
                                                                                                :ARG2 (c5-5 / premier))
                                                                                :poss (c5-6 / we))
                                                                    :ARG1 (c5-2 / pipeline
                                                                                :ARG1-of (c5-4 / cancel-01))
                                                                    :ARG3 (c5-15 / monetary-quantity
                                                                                 :unit (c5-1 / dollar)
                                                                                 :quant 1000000000))))
                   :ARG2 (c5-12 / bad-07
                                :ARG1 c5-11)
                   :ARG3 (c5-9 / more))
       :mod (c5-3 / ha
                  :mode expressive))

# ::snt Very helpful, thank-you!
# ::tokens ["Very", "helpful", ",", "thank", "-", "you", "!"]
# ::lemmas ["very", "helpful", ",", "thank", "-", "you", "!"]
(c6-0 / and
      :op1 (c6-1 / helpful-04
                 :degree (c6-2 / very))
      :op2 (c6-3 / thank-01
                 :ARG0 (c6-4 / i)
                 :ARG1 (c6-5 / you)))

# ::snt Might want to get an explanation on the direct award contract for $36 million Central Services awarded to Providence back in February for vaccines thats on the contract disclosure list; then ask whether we can back out of it and how much has been paid to date.
# ::tokens ["Might", "want", "to", "get", "an", "explanation", "on", "the", "direct", "award", "contract", "for", "$", "36", "million", "Central", "Services", "awarded", "to", "Providence", "back", "in", "February", "for", "vaccines", "that", "s", "on", "the", "contract", "disclosure", "list", ";", "then", "ask", "whether", "we", "can", "back", "out", "of", "it", "and", "how", "much", "has", "been", "paid", "to", "date", "."]
# ::lemmas ["might", "want", "to", "get", "an", "explanation", "on", "the", "direct", "award", "contract", "for", "$", "36", "million", "Central", "Services", "award", "to", "Providence", "back", "in", "February", "for", "vaccine", "that", "s", "on", "the", "contract", "disclosure", "list", ";", "then", "ask", "whether", "we", "can", "back", "out", "of", "it", "and", "how", "much", "have", "be", "pay", "to", "date", "."]
(c7-23 / and
       :op1 (c7-27 / possible-01
                   :ARG1 (c7-6 / want-01
                               :ARG0 (c7-4 / i)
                               :ARG1 (c7-17 / explain-01
                                            :ARG0 c7-4
                                            :ARG1 (c7-5 / contract-02
                                                        :ARG1 (c7-16 / award-01
                                                                     :ARG1 (c7-13 / monetary-quantity
                                                                                  :unit (c7-0 / dollar)
                                                                                  :quant 36000000)
                                                                     :ARG2 (c7-10 / organization
                                                                                  :name (c7-14 / name
                                                                                               :op1 "Central"
                                                                                               :op2 "Services")
                                                                                  :ARG1-of c7-16
                                                                                  :ARG2 (c7-1 / company
                                                                                              :name (c7-3 / name
                                                                                                          :op1 "Providence"))
                                                                                  :time (c7-22 / date-entity
                                                                                               :month 2)))
                                                        :ARG3 (c7-9 / vaccine
                                                                    :ARG1-of (c7-25 / list-01
                                                                                    :ARG2 (c7-19 / disclose-01
                                                                                                 :ARG1 c7-5)))
                                                        :ARG1-of (c7-11 / direct-02)))))
       :ARG1-of (c7-24 / possible-01)
       :op2 (c7-2 / ask-01
                  :ARG0 c7-4
                  :ARG1 (c7-12 / truth-value
                               :polarity-of (c7-21 / possible-01
                                                   :ARG1 (c7-26 / back-02
                                                                :ARG0 (c7-18 / we)
                                                                :source c7-16
                                                                :ARG1-of (c7-8 / cause-01
                                                                               :ARG0 c7-13
                                                                               :ARG1-of (c7-20 / pay-01
                                                                                               :time (c7-7 / to-date))))))
                  :time (c7-15 / then)))

# ::snt Appalling? Yes. Shocking? No. Give'em hell, Adrien!
# ::tokens ["Appalling", "?", "Yes", ".", "Shocking", "?", "No", ".", "Give'em", "hell", ",", "Adrien", "!"]
# ::lemmas ["appalling", "?", "yes", ".", "shocking", "?", "no", ".", "give'em", "hell", ",", "Adrien", "!"]
(c8-7 / multi-sentence
      :snt1 (c8-2 / and
                  :op1 (c8-10 / appall-01)
                  :op2 (c8-9 / yes))
      :snt2 (c8-0 / shock-01
                  :polarity (c8-1 / amr-unknown))
      :snt3 (c8-5 / give-01
                  :ARG0 (c8-6 / person
                              :name (c8-8 / name
                                          :op1 "Adrien"))
                  :ARG1 (c8-3 / hell)
                  :ARG2 (c8-4 / they)
                  :mode imperative))
