# ::snt PLZZZZ WHEN WILL THEY COME
# ::tokens ["PLZZZZ", "WHEN", "WILL", "THEY", "COME"]
# ::lemmas ["plzzzz", "when", "will", "they", "come"]
(c1-3 / come-01
      :ARG1 (c1-2 / they)
      :time (c1-1 / amr-unknown)
      :mod (c1-0 / please
                 :mode expressive))

# ::snt EXTINCTION SHAJSNBSHAHAHSHS
# ::tokens ["EXTINCTION", "SHAJSNBSHAHAHSHS"]
# ::lemmas ["EXTINCTION", "SHAJSNBSHAHAHSHS"]
(c2-0 / state
      :name (c2-2 / name
                  :op1 "Shaq")
      :mod (c2-1 / additional))

# ::snt me neither Facts Only
# ::tokens ["me", "neither", "Facts", "Only"]
# ::lemmas ["i", "neither", "fact", "only"]
(c3-1 / fact
      :mod (c3-0 / only)
      :domain (c3-2 / i)
      :polarity -)

# ::snt Do it bestie i want Clout
# ::tokens ["Do", "it", "bestie", "i", "want", "Clout"]
# ::lemmas ["do", "it", "bestie", "i", "want", "Clout"]
(c4-0 / say-01
      :ARG0 (c4-8 / i)
      :ARG1 (c4-1 / do-02
                  :ARG0 (c4-11 / you)
                  :ARG1 (c4-4 / it)
                  :manner (c4-7 / good-02
                                :ARG2-of (c4-5 / have-degree-91
                                               :ARG1 c4-1
                                               :ARG3 (c4-9 / most)))
                  :ARG1-of (c4-2 / cause-01
                                 :ARG0 (c4-3 / want-01
                                             :ARG0 c4-8
                                             :ARG1 (c4-6 / person
                                                         :name (c4-10 / name
                                                                      :op1 "Clout"))))
                  :mode imperative)
      :ARG2 c4-11)

# ::snt im not the one spreading hateful content here
# ::tokens ["i", "m", "not", "the", "one", "spreading", "hateful", "content", "here"]
# ::lemmas ["i", "m", "not", "the", "one", "spread", "hateful", "content", "here"]
(c5-0 / spread-03
      :ARG0 (c5-4 / i)
      :ARG1 (c5-1 / content
                  :ARG0-of (c5-2 / hate-01))
      :location (c5-3 / here)
      :polarity -)

# ::snt WHEN RIN GETS R WORDED AGAIN &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
# ::tokens ["WHEN", "RIN", "GETS", "R", "WORDED", "AGAIN", "&", "gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt", ";"]
# ::lemmas ["when", "RIN", "GETS", "R", "WORDED", "AGAIN", "&", "gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt", ";"]
(c6-0 / get-04
      :ARG1 (c6-1 / word-01
                  :ARG1 (c6-3 / string-entity
                              :value "RIN"))
      :mod (c6-2 / again))

# ::snt get well soon
# ::tokens ["get", "well", "soon"]
# ::lemmas ["get", "well", "soon"]
(c7-0 / get-03
      :ARG1 (c7-2 / you)
      :ARG2 (c7-1 / well-05
                  :ARG1 c7-2)
      :time (c7-3 / soon)
      :mode imperative)

# ::snt TWITTER R WORD RIN JJEONWON NOWWWW LOOK HOW VIOLENT
# ::tokens ["TWITTER", "R", "WORD", "RIN", "JJEONWON", "NOWWWW", "LOOK", "HOW", "VIOLENT"]
# ::lemmas ["TWITTER", "R", "WORD", "RIN", "JJEONWON", "NOWWWW", "LOOK", "how", "violent"]
(c8-5 / look-01
      :ARG0 (c8-9 / you)
      :ARG1 (c8-3 / thing
                  :degree-of (c8-2 / violent))
      :time (c8-8 / now)
      :manner (c8-1 / and
                    :op1 (c8-0 / sign-01
                               :ARG2 (c8-7 / person
                                           :name (c8-4 / name
                                                       :op1 "Robert"
                                                       :op2 "WORD"
                                                       :op3 "Rin"
                                                       :op4 "Jones")))
                    :op2 (c8-6 / laugh-01
                               :ARG0 c8-9
                               :mode imperative))
      :mode imperative)

# ::snt fak u ?!&amp? meaniehae bitch
# ::tokens ["fak", "u", "?", "!", "&", "amp", "?", "meaniehae", "bitch"]
# ::lemmas ["fak", "u", "?", "!", "&", "amp", "?", "meaniehae", "bitch"]
(c9-0 / say-01
      :ARG0 (c9-6 / i)
      :ARG1 (c9-2 / fuck-01
                  :ARG1 (c9-8 / you)
                  :mode expressive)
      :ARG2 (c9-1 / and
                  :op1 (c9-4 / person
                             :name (c9-7 / name
                                         :op1 "amp"))
                  :op2 (c9-3 / person
                             :name c9-7
                             :op1 "meaniehae")
                  :ARG0-of (c9-5 / bitch-01)))

# ::snt Rin Jjeonwon is already in my replies
# ::tokens ["Rin", "Jjeonwon", "is", "already", "in", "my", "replies"]
# ::lemmas ["Rin", "Jjeonwon", "be", "already", "in", "my", "reply"]
(c10-1 / reply-01
       :ARG0 (c10-3 / i)
       :ARG2 (c10-2 / person
                    :name (c10-4 / name
                                 :op1 "Rin"
                                 :op2 "Jjeonwon"))
       :time (c10-0 / already))

# ::snt im about to punch this bitch
# ::tokens ["i", "m", "about", "to", "punch", "this", "bitch"]
# ::lemmas ["i", "m", "about", "to", "punch", "this", "bitch"]
(c11-4 / punch-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-3 / bitch
                    :mod (c11-2 / this))
       :time (c11-0 / about-to))

# ::snt "Exposing , a thread" soon
# ::tokens ["\"", "Exposing", ",", "a", "thread", "\"", "soon"]
# ::lemmas ["\"", "expose", ",", "a", "thread", "\"", "soon"]
(c12-2 / expose-01
       :ARG1 (c12-1 / thread)
       :time (c12-0 / soon))

# ::snt bestie acting like u didnt see it on priv alr
# ::tokens ["bestie", "acting", "like", "u", "did", "nt", "see", "it", "on", "priv", "alr"]
# ::lemmas ["bestie", "act", "like", "u", "do", "not", "see", "it", "on", "priv", "alr"]
(c13-1 / act-01
       :ARG0 (c13-5 / person
                    :name (c13-6 / name
                                 :op1 "bestie"))
       :ARG1 (c13-0 / see-01
                    :ARG0 c13-5
                    :ARG1 (c13-2 / it)
                    :location (c13-3 / publication
                                     :name (c13-4 / name
                                                  :op1 "Public"
                                                  :op2 "Alr"))
                    :polarity -))

# ::snt they gotta do d work for me im tired of blocking them one by one
# ::tokens ["they", "got", "ta", "do", "d", "work", "for", "me", "i", "m", "tired", "of", "blocking", "them", "one", "by", "one"]
# ::lemmas ["they", "got", "to", "do", "d", "work", "for", "i", "i", "m", "tired", "of", "block", "they", "one", "by", "one"]
(c14-8 / multi-sentence
       :snt1 (c14-4 / obligate-01
                    :ARG1 (c14-5 / they)
                    :ARG2 (c14-0 / work-01
                                 :ARG0 c14-5
                                 :ARG2 (c14-7 / i)))
       :snt2 (c14-1 / tire-01
                    :ARG0 (c14-6 / block-01
                                 :ARG0 (c14-2 / i)
                                 :ARG1 (c14-9 / they)
                                 :manner (c14-3 / one-by-one))
                    :ARG1 c14-2))

# ::snt they will come for you
# ::tokens ["they", "will", "come", "for", "you"]
# ::lemmas ["they", "will", "come", "for", "you"]
(c15-2 / come-01
       :ARG1 (c15-0 / they)
       :purpose (c15-1 / you))
