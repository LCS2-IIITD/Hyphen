# ::snt I took it today I don't feel sleepy
# ::tokens ["I", "took", "it", "today", "I", "do", "n't", "feel", "sleepy"]
# ::lemmas ["i", "take", "it", "today", "i", "do", "not", "feel", "sleepy"]
(c1-3 / feel-01
      :ARG0 (c1-1 / i)
      :ARG1 (c1-0 / sleepy-05
                  :ARG1 c1-1)
      :time (c1-2 / today)
      :polarity -)

# ::snt Take some daytime flu, itll help. I promise.
# ::tokens ["Take", "some", "daytime", "flu", ",", "it", "ll", "help", ".", "I", "promise", "."]
# ::lemmas ["take", "some", "daytime", "flu", ",", "it", "ll", "help", ".", "i", "promise", "."]
(c2-8 / multi-sentence
      :snt1 (c2-5 / take-01
                  :ARG0 (c2-9 / you)
                  :ARG1 (c2-2 / flu
                              :time (c2-0 / date-entity
                                          :dayperiod (c2-7 / daytime))
                              :quant (c2-1 / some))
                  :ARG0-of (c2-4 / help-01)
                  :mode imperative)
      :snt2 (c2-6 / promise-01
                  :ARG0 (c2-3 / i)))

# ::snt feeling cold will?
# ::tokens ["feeling", "cold", "will", "?"]
# ::lemmas ["feel", "cold", "will", "?"]
(c3-2 / feel-01
      :polarity (c3-1 / amr-unknown)
      :ARG1 (c3-0 / will
                  :ARG1-of (c3-3 / cold-01)))

# ::snt Take Advil and slowly move ur arm in a circular motion
# ::tokens ["Take", "Advil", "and", "slowly", "move", "ur", "arm", "in", "a", "circular", "motion"]
# ::lemmas ["take", "Advil", "and", "slowly", "move", "ur", "arm", "in", "a", "circular", "motion"]
(c4-0 / and
      :op1 (c4-2 / take-01
                 :ARG0 (c4-6 / you
                             :part (c4-7 / arm))
                 :ARG1 (c4-3 / product
                             :name (c4-5 / name
                                         :op1 "Advil"))
                 :mode imperative)
      :op2 (c4-4 / move-01
                 :ARG0 c4-6
                 :ARG1 c4-7
                 :manner (c4-1 / circular)
                 :mode imperative))

# ::snt Who made this
# ::tokens ["Who", "made", "this"]
# ::lemmas ["who", "make", "this"]
(c5-1 / make-01
      :ARG0 (c5-0 / amr-unknown)
      :ARG1 (c5-2 / this))

# ::snt gg you got the Biden chip
# ::tokens ["gg", "you", "got", "the", "Biden", "chip"]
# ::lemmas ["gg", "you", "get", "the", "Biden", "chip"]
(c6-2 / get-01
      :ARG0 (c6-5 / you)
      :ARG1 (c6-1 / chip
                  :mod (c6-3 / person
                             :name (c6-4 / name
                                         :op1 "Biden")))
      :mod (c6-0 / gg
                 :mode expressive))

# ::snt Its the microchip setting in
# ::tokens ["Its", "the", "microchip", "setting", "in"]
# ::lemmas ["its", "the", "microchip", "set", "in"]
(c7-0 / set-01
      :ARG1 (c7-2 / microchip)
      :location (c7-1 / it))
