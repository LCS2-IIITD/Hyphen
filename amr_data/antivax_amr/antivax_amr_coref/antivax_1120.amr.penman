# ::snt Way to hide you personal info.Just say no to identity theft.Smart.
# ::tokens ["Way", "to", "hide", "you", "personal", "info", ".", "Just", "say", "no", "to", "identity", "theft", ".", "Smart", "."]
# ::lemmas ["way", "to", "hide", "you", "personal", "info", ".", "just", "say", "no", "to", "identity", "theft", ".", "Smart", "."]
(c1-9 / multi-sentence
      :snt1 (c1-2 / way
                  :manner-of (c1-3 / hide-01
                                   :ARG1 (c1-8 / information
                                               :ARG1-of (c1-6 / personal-02
                                                              :ARG2 (c1-11 / you)))))
      :snt2 (c1-0 / say-01
                  :ARG0 c1-11
                  :ARG1 (c1-10 / no)
                  :ARG2 (c1-5 / thieve-01
                              :ARG1 (c1-4 / identity))
                  :mod (c1-7 / just)
                  :mode imperative)
      :snt3 (c1-1 / smart-06))

# ::snt Obviously you dont live in Canada this means
# ::tokens ["Obviously", "you", "do", "nt", "live", "in", "Canada", "this", "means"]
# ::lemmas ["obviously", "you", "do", "not", "live", "in", "Canada", "this", "mean"]
(c2-4 / mean-01
      :ARG1 (c2-2 / this)
      :ARG2 (c2-3 / live-01
                  :ARG0 (c2-6 / you)
                  :location (c2-0 / country
                                  :name (c2-5 / name
                                              :op1 "Canada"))
                  :polarity -)
      :ARG1-of (c2-1 / obvious-01))

# ::snt you got vaccinated
# ::tokens ["you", "got", "vaccinated"]
# ::lemmas ["you", "got", "vaccinate"]
(c3-0 / vaccinate-01
      :ARG1 (c3-1 / you))

# ::snt Congratulations Kaylyn!
# ::tokens ["Congratulations", "Kaylyn", "!"]
# ::lemmas ["Congratulations", "Kaylyn", "!"]
(c5-2 / congratulate-01
      :ARG1 (c5-0 / person
                  :name (c5-1 / name
                              :op1 "Kaylyn")))

# ::snt enjoy your discount on Microsoft products
# ::tokens ["enjoy", "your", "discount", "on", "Microsoft", "products"]
# ::lemmas ["enjoy", "your", "discount", "on", "Microsoft", "product"]
(c6-5 / enjoy-01
      :ARG0 (c6-4 / you)
      :ARG1 (c6-0 / discount-01
                  :ARG0 c6-4
                  :ARG1 (c6-2 / product
                              :poss (c6-1 / company
                                          :name (c6-3 / name
                                                      :op1 "Microsoft"))))
      :mode imperative)

# ::snt Perfectly said! Congrats!!!! Such a good feeling, I got mine yesterday.
# ::tokens ["Perfectly", "said", "!", "Congrats", "!", "!", "!", "!", "Such", "a", "good", "feeling", ",", "I", "got", "mine", "yesterday", "."]
# ::lemmas ["perfectly", "say", "!", "congrat", "!", "!", "!", "!", "such", "a", "good", "feeling", ",", "i", "get", "mine", "yesterday", "."]
(c7-11 / multi-sentence
       :snt1 (c7-0 / say-01
                   :manner (c7-10 / perfect-02))
       :snt2 (c7-4 / congratulate-01
                   :ARG1 (c7-12 / you)
                   :mode expressive)
       :snt3 (c7-3 / feel-01
                   :ARG0 (c7-5 / i)
                   :ARG1 (c7-7 / thing)
                   :ARG1-of (c7-8 / good-02
                                  :degree (c7-9 / such))
                   :ARG1-of (c7-1 / cause-01
                                  :ARG0 (c7-2 / get-01
                                              :ARG0 c7-5
                                              :ARG1 (c7-6 / thing
                                                          :poss c7-5)
                                              :time (c7-13 / yesterday)))))
