# ::snt Yeah same for my st
# ::tokens ["Yeah", "same", "for", "my", "st"]
# ::lemmas ["yeah", "same", "for", "my", "st"]
(c1-0 / same-01
      :mod (c1-4 / yeah)
      :beneficiary (c1-2 / person
                         :name (c1-3 / name
                                     :op1 "St")
                         :poss (c1-1 / i)))

# ::snt Astrazeneca for us here. It was the only one available to us, so I'll take it haha
# ::tokens ["Astrazeneca", "for", "us", "here", ".", "It", "was", "the", "only", "one", "available", "to", "us", ",", "so", "I", "'ll", "take", "it", "haha"]
# ::lemmas ["astrazeneca", "for", "we", "here", ".", "it", "be", "the", "only", "one", "available", "to", "we", ",", "so", "i", "'ll", "take", "it", "haha"]
(c2-10 / multi-sentence
       :snt1 (c2-12 / event
                    :name (c2-11 / name
                                 :op1 "Astrazeneca")
                    :beneficiary (c2-2 / we
                                       :location (c2-3 / here)))
       :snt2 (c2-0 / available-02
                   :ARG1 (c2-9 / it)
                   :ARG2 c2-2
                   :mod (c2-6 / only)
                   :ARG0-of (c2-1 / cause-01
                                  :ARG1 (c2-7 / take-01
                                              :ARG0 (c2-4 / i)
                                              :ARG1 (c2-5 / it)
                                              :mod (c2-8 / haha
                                                         :mode expressive)))))

# ::snt Yeah got my nd in August, which did you get?
# ::tokens ["Yeah", "got", "my", "nd", "in", "August", ",", "which", "did", "you", "get", "?"]
# ::lemmas ["yeah", "get", "my", "nd", "in", "August", ",", "which", "do", "you", "get", "?"]
(c3-4 / get-01
      :ARG0 (c3-5 / i)
      :ARG1 (c3-3 / thing
                  :name (c3-6 / name
                              :op1 "ND")
                  :poss c3-5)
      :mod (c3-7 / yeah)
      :time (c3-0 / date-entity
                  :month 8)
      :ARG1-of (c3-2 / get-01
                     :ARG0 (c3-8 / you)
                     :polarity (c3-1 / amr-unknown)))

# ::snt Yeah it was rough! I feel great now, though. weeks and then I am fully vaccinated! Yay!
# ::tokens ["Yeah", "it", "was", "rough", "!", "I", "feel", "great", "now", ",", "though", ".", "weeks", "and", "then", "I", "am", "fully", "vaccinated", "!", "Yay", "!"]
# ::lemmas ["yeah", "it", "be", "rough", "!", "i", "feel", "great", "now", ",", "though", ".", "weeks", "and", "then", "i", "be", "fully", "vaccinated", "!", "Yay", "!"]
(c4-11 / multi-sentence
       :snt1 (c4-8 / rough-05
                   :ARG1 (c4-10 / it)
                   :mod (c4-13 / yeah
                               :mode expressive))
       :snt2 (c4-0 / feel-01
                   :ARG0 (c4-4 / i)
                   :ARG1 (c4-9 / great)
                   :time (c4-12 / now)
                   :concession (c4-6 / vaccinate-01
                                     :ARG1 c4-4
                                     :degree (c4-5 / full)
                                     :time (c4-7 / then)
                                     :duration (c4-1 / multiple
                                                     :op1 (c4-3 / temporal-quantity
                                                                :unit (c4-2 / week)
                                                                :quant 1))))
       :snt3 (c4-14 / yay
                    :mode expressive))

# ::snt Yeah st dose knocked me for for like /4days
# ::tokens ["Yeah", "st", "dose", "knocked", "me", "for", "for", "like", "/4days"]
# ::lemmas ["yeah", "st", "dose", "knock", "i", "for", "for", "like", "/4days"]
(c5-1 / knock-out-03
      :ARG0 (c5-3 / thing
                  :name (c5-6 / name
                              :op1 "St"
                              :op2 "D"))
      :ARG1 (c5-5 / i)
      :duration (c5-4 / like
                      :op1 (c5-2 / temporal-quantity
                                 :unit (c5-0 / day)
                                 :quant 4)))
