# ::snt How are you doing now?
# ::tokens ["How", "are", "you", "doing", "now", "?"]
# ::lemmas ["how", "be", "you", "do", "now", "?"]
(c1-0 / do-02
      :ARG0 (c1-3 / you)
      :ARG1 (c1-1 / amr-unknown)
      :time (c1-2 / now))

# ::snt Take some Tylenol. Thats what I did and was good the next day.
# ::tokens ["Take", "some", "Tylenol", ".", "That", "s", "what", "I", "did", "and", "was", "good", "the", "next", "day", "."]
# ::lemmas ["take", "some", "Tylenol", ".", "that", "s", "what", "i", "do", "and", "be", "good", "the", "next", "day", "."]
(c2-10 / multi-sentence
       :snt1 (c2-6 / take-01
                   :ARG0 (c2-12 / you)
                   :ARG1 (c2-9 / product
                               :name (c2-11 / name
                                            :op1 "Tylenol")
                               :quant (c2-0 / some))
                   :mode imperative)
       :snt2 (c2-2 / and
                   :op1 (c2-1 / do-02
                              :ARG0 (c2-3 / i)
                              :ARG1 (c2-4 / that))
                   :op2 (c2-8 / good-02
                              :ARG1 c2-3
                              :time (c2-5 / day
                                          :mod (c2-7 / next)))))

# ::snt Uh oh
# ::tokens ["Uh", "oh"]
# ::lemmas ["uh", "oh"]
(c3-0 / uh-oh
      :mode expressive)

# ::snt I know I do
# ::tokens ["I", "know", "I", "do"]
# ::lemmas ["i", "know", "i", "do"]
(c4-1 / know-01
      :ARG0 (c4-0 / i)
      :ARG1 c4-1)

# ::snt I heard people get sick from the second one
# ::tokens ["I", "heard", "people", "get", "sick", "from", "the", "second", "one"]
# ::lemmas ["i", "hear", "people", "get", "sick", "from", "the", "second", "one"]
(c5-1 / hear-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-0 / sick-05
                  :ARG0 (c5-3 / thing
                              :ord (c5-2 / ordinal-entity
                                         :value 2))
                  :ARG1 (c5-4 / person)))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c7-1 / thank-01
      :ARG0 (c7-0 / i)
      :ARG1 (c7-2 / you))

# ::snt aww, feel better king
# ::tokens ["aww", ",", "feel", "better", "king"]
# ::lemmas ["aww", ",", "feel", "well", "king"]
(c8-1 / feel-01
      :ARG0 (c8-6 / you)
      :ARG1 (c8-3 / good-02
                  :ARG2-of (c8-2 / have-degree-91
                                 :ARG1 c8-6
                                 :ARG3 (c8-4 / more)))
      :ARG2 (c8-5 / king)
      :mod (c8-0 / aw
                 :mode expressive)
      :mode imperative)

# ::snt First one all I had was a sore arm. But with this second one I felt perfectly fine right after, but now its kicking in.
# ::tokens ["First", "one", "all", "I", "had", "was", "a", "sore", "arm", ".", "But", "with", "this", "second", "one", "I", "felt", "perfectly", "fine", "right", "after", ",", "but", "now", "its", "kicking", "in", "."]
# ::lemmas ["First", "one", "all", "i", "have", "be", "a", "sore", "arm", ".", "but", "with", "this", "second", "one", "i", "feel", "perfectly", "fine", "right", "after", ",", "but", "now", "its", "kicking", "in", "."]
(c9-7 / multi-sentence
      :snt1 (c9-17 / have-03
                   :ARG0 (c9-1 / i
                               :part (c9-15 / arm
                                            :ARG1-of c9-17))
                   :ARG1-of (c9-10 / sore-03))
      :mod (c9-9 / all)
      :time (c9-4 / one
                  :ord (c9-18 / ordinal-entity
                              :value 1))
      :snt2 (c9-3 / contrast-01
                  :ARG1 (c9-16 / feel-01
                               :ARG0 (c9-11 / i)
                               :ARG1 (c9-13 / fine-04
                                            :ARG1-of (c9-19 / perfect-02))
                               :time (c9-0 / after
                                           :mod (c9-6 / right))
                               :time (c9-2 / one
                                           :ord (c9-14 / ordinal-entity
                                                       :value 2)
                                           :mod (c9-5 / this)))
                  :ARG2 (c9-20 / kick-in-02
                               :ARG1 (c9-12 / it)
                               :time (c9-8 / now))))

# ::snt If I had to describe how I feel in a emoji itd be the one you just typed
# ::tokens ["If", "I", "had", "to", "describe", "how", "I", "feel", "in", "a", "emoji", "it", "d", "be", "the", "one", "you", "just", "typed"]
# ::lemmas ["if", "i", "have", "to", "describe", "how", "i", "feel", "in", "a", "emoji", "it", "d", "be", "the", "one", "you", "just", "type"]
(c10-3 / have-condition-91
       :ARG1 (c10-6 / one
                    :ARG1-of (c10-7 / type-01
                                    :ARG0 (c10-12 / you)
                                    :time (c10-9 / just))
                    :domain (c10-10 / it))
       :ARG2 (c10-4 / obligate-01
                    :ARG1 (c10-5 / i)
                    :ARG2 (c10-0 / describe-01
                                 :ARG0 c10-5
                                 :ARG1 (c10-2 / thing
                                              :ARG1-of (c10-1 / feel-01
                                                              :ARG0 c10-5))
                                 :medium (c10-8 / product
                                                :name (c10-11 / name
                                                              :op1 "Emotion")))))

# ::snt I get my first injection tomorrowww
# ::tokens ["I", "get", "my", "first", "injection", "tomorrowww"]
# ::lemmas ["i", "get", "my", "first", "injection", "tomorrowww"]
(c11-4 / get-01
       :ARG0 (c11-5 / i)
       :ARG1 (c11-1 / inject-01
                    :ARG1 c11-5
                    :ord (c11-2 / ordinal-entity
                                :value 1))
       :time (c11-3 / tomorrow)
       :mod (c11-0 / ww
                   :mode expressive))
