# ::snt me
# ::tokens ["me"]
# ::lemmas ["i"]
(c1-0 / i)

# ::snt perfect
# ::tokens ["perfect"]
# ::lemmas ["perfect"]
(c2-0 / perfect-02)

# ::snt me too abby im
# ::tokens ["me", "too", "abby", "i", "m"]
# ::lemmas ["i", "too", "abby", "i", "m"]
(c4-0 / cause-01
      :ARG0 (c4-4 / i)
      :ARG1 (c4-1 / have-degree-91
                  :ARG1 c4-4
                  :ARG2 (c4-3 / big)
                  :ARG3 (c4-2 / too)))

# ::snt i would not partake
# ::tokens ["i", "would", "not", "partake"]
# ::lemmas ["i", "would", "not", "partake"]
(c5-0 / partake-01
      :ARG0 (c5-1 / i)
      :polarity -)

# ::snt what about from a box under a hotel room desk?
# ::tokens ["what", "about", "from", "a", "box", "under", "a", "hotel", "room", "desk", "?"]
# ::lemmas ["what", "about", "from", "a", "box", "under", "a", "hotel", "room", "desk", "?"]
(c6-1 / amr-unknown
      :source (c6-5 / box
                    :location (c6-3 / under
                                    :op1 (c6-0 / desk
                                               :part-of (c6-4 / room
                                                              :part-of (c6-2 / hotel))))))

# ::snt i only eat leftover pizza if its been stored in a fridge
# ::tokens ["i", "only", "eat", "leftover", "pizza", "if", "its", "been", "stored", "in", "a", "fridge"]
# ::lemmas ["i", "only", "eat", "leftover", "pizza", "if", "its", "be", "store", "in", "a", "fridge"]
(c7-6 / eat-01
      :ARG0 (c7-5 / i)
      :ARG1 (c7-4 / pizza
                  :ARG1-of (c7-3 / leftover-01))
      :mod (c7-2 / only)
      :condition (c7-0 / store-01
                       :ARG1 c7-4
                       :ARG2 (c7-1 / fridge)))

# ::snt ok i thought this was normal
# ::tokens ["ok", "i", "thought", "this", "was", "normal"]
# ::lemmas ["ok", "i", "think", "this", "be", "normal"]
(c8-2 / think-01
      :ARG0 (c8-3 / i)
      :ARG1 (c8-4 / normal-02
                  :ARG1 (c8-0 / this))
      :ARG1-of (c8-1 / okay-04))

# ::snt agreed
# ::tokens ["agreed"]
# ::lemmas ["agree"]
(c9-0 / agree-01)

# ::snt yeah yeah okay
# ::tokens ["yeah", "yeah", "okay"]
# ::lemmas ["yeah", "yeah", "okay"]
(c10-0 / okay-01
       :mod (c10-1 / yeah))

# ::snt not literally OFF the floor, but leftover pizza from the day before eating it from a pizza box sat on the floor
# ::tokens ["not", "literally", "OFF", "the", "floor", ",", "but", "leftover", "pizza", "from", "the", "day", "before", "eating", "it", "from", "a", "pizza", "box", "sat", "on", "the", "floor"]
# ::lemmas ["not", "literally", "off", "the", "floor", ",", "but", "leftover", "pizza", "from", "the", "day", "before", "eat", "it", "from", "a", "pizza", "box", "sit", "on", "the", "floor"]
(c11-4 / contrast-01
       :ARG1 (c11-5 / off
                    :mod (c11-6 / literal)
                    :location (c11-3 / floor)
                    :polarity -)
       :ARG2 (c11-0 / sit-01
                    :ARG1 (c11-9 / pizza
                                 :ARG1-of (c11-7 / leftover-01)
                                 :time (c11-1 / day
                                              :time-of (c11-8 / before
                                                              :op1 (c11-10 / eat-01
                                                                           :ARG1 c11-9
                                                                           :source (c11-2 / box
                                                                                          :mod c11-9)))))
                    :ARG2 c11-3))

# ::snt just to clarify not straight off the floor theyd been in boxes
# ::tokens ["just", "to", "clarify", "not", "straight", "off", "the", "floor", "they", "d", "been", "in", "boxes"]
# ::lemmas ["just", "to", "clarify", "not", "straight", "off", "the", "floor", "they", "d", "be", "in", "box"]
(c12-2 / clarify-10
       :ARG1 (c12-3 / they
                    :location (c12-4 / box)
                    :location (c12-1 / floor
                                     :ARG1-of (c12-0 / straight-04)
                                     :polarity -))
       :mod (c12-5 / just))

# ::snt i would go and find the picture of the pile of boxes we left sitc with but that would be too much effort
# ::tokens ["i", "would", "go", "and", "find", "the", "picture", "of", "the", "pile", "of", "boxes", "we", "left", "sitc", "with", "but", "that", "would", "be", "too", "much", "effort"]
# ::lemmas ["i", "would", "go", "and", "find", "the", "picture", "of", "the", "pile", "of", "box", "we", "leave", "sitc", "with", "but", "that", "would", "be", "too", "much", "effort"]
(c13-2 / contrast-01
       :ARG1 (c13-0 / and
                    :op1 (c13-10 / go-02
                                 :ARG0 (c13-11 / i))
                    :op2 (c13-1 / find-01
                                :ARG0 c13-11
                                :ARG1 (c13-8 / picture
                                             :topic (c13-6 / pile
                                                           :consist-of (c13-13 / box)
                                                           :ARG1-of (c13-9 / leave-12
                                                                           :ARG0 (c13-3 / we)
                                                                           :ARG2 (c13-14 / government-organization
                                                                                         :name (c13-5 / name
                                                                                                      :op1 "Sitc")))))))
       :ARG2 (c13-15 / effort-01
                     :ARG1 c13-0
                     :ARG1-of (c13-4 / have-quant-91
                                     :ARG2 (c13-12 / much)
                                     :ARG3 (c13-7 / too))))

# ::snt Ermmmm ki-
# ::tokens ["Ermmmm", "ki-"]
# ::lemmas ["ermmmm", "ki-"]
(c14-0 / say-01
       :ARG1 (c14-3 / ermmmm
                    :mode expressive)
       :ARG2 (c14-1 / person
                    :name (c14-2 / name
                                 :op1 "Ki-Ki")))

# ::snt literally you
# ::tokens ["literally", "you"]
# ::lemmas ["literally", "you"]
(c15-0 / you
       :mod (c15-1 / literal))
