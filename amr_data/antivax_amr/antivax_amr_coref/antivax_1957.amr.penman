# ::snt LOL. You injected yourself with an experimental poison and now youre sick. Good job dork
# ::tokens ["LOL", ".", "You", "injected", "yourself", "with", "an", "experimental", "poison", "and", "now", "you", "re", "sick", ".", "Good", "job", "dork"]
# ::lemmas ["LOL", ".", "you", "inject", "yourself", "with", "an", "experimental", "poison", "and", "now", "you", "re", "sick", ".", "good", "job", "dork"]
(c1-10 / multi-sentence
       :snt1 (c1-5 / laugh-01
                   :ARG0 (c1-9 / i)
                   :manner (c1-6 / loud)
                   :mode expressive)
       :snt2 (c1-2 / and
                   :op1 (c1-3 / inject-01
                              :ARG0 (c1-12 / you
                                           :ARG1-of c1-3)
                              :ARG2 (c1-7 / poison
                                          :mod (c1-14 / experiment-01)))
                   :op2 (c1-0 / sick-05
                              :ARG1 c1-12
                              :time (c1-11 / now)))
       :snt3 (c1-8 / say-01
                   :ARG1 (c1-4 / job
                               :ARG1-of (c1-13 / good-02))
                   :ARG2 (c1-1 / dork)))

# ::snt I was laid out pretty bad too. I def recommend Tylenol and some food.
# ::tokens ["I", "was", "laid", "out", "pretty", "bad", "too", ".", "I", "def", "recommend", "Tylenol", "and", "some", "food", "."]
# ::lemmas ["i", "be", "lay", "out", "pretty", "bad", "too", ".", "i", "def", "recommend", "Tylenol", "and", "some", "food", "."]
(c2-12 / multi-sentence
       :snt1 (c2-8 / lay-out-06
                   :ARG1 (c2-11 / i)
                   :ARG1-of (c2-10 / bad-05
                                   :degree (c2-9 / pretty))
                   :mod (c2-6 / too))
       :snt2 (c2-7 / recommend-01
                   :ARG0 (c2-4 / i)
                   :ARG1 (c2-2 / and
                               :op1 (c2-5 / product
                                          :name (c2-13 / name
                                                       :op1 "Tylenol"))
                               :op2 (c2-3 / food
                                          :quant (c2-0 / some)))
                   :mod (c2-1 / def)))

# ::snt Hope you get over the effects soon, Jason.
# ::tokens ["Hope", "you", "get", "over", "the", "effects", "soon", ",", "Jason", "."]
# ::lemmas ["hope", "you", "get", "over", "the", "effect", "soon", ",", "Jason", "."]
(c3-0 / say-01
      :ARG0 (c3-6 / i)
      :ARG1 (c3-2 / hope-01
                  :ARG0 c3-6
                  :ARG1 (c3-3 / over-02
                              :ARG1 (c3-4 / person
                                          :name (c3-7 / name
                                                      :op1 "Jason"))
                              :ARG2 (c3-1 / affect-01)
                              :time (c3-5 / soon)))
      :ARG2 c3-4)
