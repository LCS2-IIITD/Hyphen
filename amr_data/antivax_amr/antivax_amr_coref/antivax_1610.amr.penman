# ::snt Had it three weeks ago and feel fine!
# ::tokens ["Had", "it", "three", "weeks", "ago", "and", "feel", "fine", "!"]
# ::lemmas ["have", "it", "three", "weeks", "ago", "and", "feel", "fine", "!"]
(c1-0 / and
      :op1 (c1-3 / have-03
                 :ARG1 (c1-7 / it)
                 :time (c1-6 / before
                             :op1 (c1-8 / now)
                             :quant (c1-5 / temporal-quantity
                                          :unit (c1-2 / week)
                                          :quant 3)))
      :op2 (c1-1 / feel-01
                 :ARG1 (c1-4 / fine-04)))

# ::snt Protecting my cancer patients!
# ::tokens ["Protecting", "my", "cancer", "patients", "!"]
# ::lemmas ["protect", "my", "cancer", "patient", "!"]
(c2-5 / protect-01
      :ARG1 (c2-4 / person
                  :ARG0-of (c2-3 / have-rel-role-91
                                 :ARG1 (c2-1 / i)
                                 :ARG2 (c2-2 / patient
                                             :mod (c2-0 / disease
                                                        :name (c2-6 / name
                                                                    :op1 "cancer"))))))

# ::snt I'm all booked for tomorrow to get my first injection too! .
# ::tokens ["I", "'m", "all", "booked", "for", "tomorrow", "to", "get", "my", "first", "injection", "too", "!", "."]
# ::lemmas ["i", "be", "all", "book", "for", "tomorrow", "to", "get", "my", "first", "injection", "too", "!", "."]
(c3-5 / book-03
      :ARG1 (c3-6 / i)
      :mod (c3-0 / all)
      :purpose (c3-4 / get-01
                     :ARG0 c3-6
                     :ARG1 (c3-1 / inject-01
                                 :ARG1 c3-6
                                 :ord (c3-2 / ordinal-entity
                                            :value 1)))
      :mod (c3-3 / too))

# ::snt Lucky you
# ::tokens ["Lucky", "you"]
# ::lemmas ["lucky", "you"]
(c4-1 / lucky
      :domain (c4-0 / you))

# ::snt This makes me so happy!
# ::tokens ["This", "makes", "me", "so", "happy", "!"]
# ::lemmas ["this", "make", "i", "so", "happy", "!"]
(c5-4 / make-02
      :ARG0 (c5-2 / this)
      :ARG1 (c5-1 / happy-01
                  :ARG1 (c5-3 / i)
                  :degree (c5-0 / so))
      :mode expressive)
