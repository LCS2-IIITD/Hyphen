# ::snt Eat some soup and drink some water or something with electrolytes.
# ::tokens ["Eat", "some", "soup", "and", "drink", "some", "water", "or", "something", "with", "electrolytes", "."]
# ::lemmas ["eat", "some", "soup", "and", "drink", "some", "water", "or", "something", "with", "electrolyte", "."]
(c1-2 / and
      :op1 (c1-11 / eat-01
                  :ARG0 (c1-10 / you)
                  :ARG1 (c1-0 / soup
                              :quant (c1-8 / some))
                  :mode imperative)
      :op2 (c1-1 / drink-01
                 :ARG0 c1-10
                 :ARG1 (c1-7 / or
                             :op1 (c1-3 / water
                                        :quant (c1-5 / some))
                             :op2 (c1-9 / something
                                        :ARG0-of (c1-4 / have-03
                                                       :ARG1 (c1-6 / electrolyte))))
                 :mode imperative))

# ::snt I ate a croissant about hours ago and I cant even think about eating anything without wanting to throw up Im still vaccinated queen tho!!!!
# ::tokens ["I", "ate", "a", "croissant", "about", "hours", "ago", "and", "I", "ca", "nt", "even", "think", "about", "eating", "anything", "without", "wanting", "to", "throw", "up", "I", "m", "still", "vaccinated", "queen", "tho", "!", "!", "!", "!"]
# ::lemmas ["i", "eat", "a", "croissant", "about", "hour", "ago", "and", "i", "can", "not", "even", "think", "about", "eat", "anything", "without", "want", "to", "throw", "up", "i", "m", "still", "vaccinate", "queen", "tho", "!", "!", "!", "!"]
(c2-9 / multi-sentence
      :snt1 (c2-16 / and
                   :op1 (c2-13 / eat-01
                               :ARG0 (c2-3 / i)
                               :ARG1 (c2-4 / croissant)
                               :time (c2-19 / before
                                            :op1 (c2-10 / now)
                                            :quant (c2-12 / about
                                                          :op1 (c2-8 / temporal-quantity
                                                                     :unit (c2-17 / hour)
                                                                     :quant 1))))
                   :op2 (c2-20 / possible-01
                               :ARG1 (c2-6 / think-01
                                           :ARG0 c2-3
                                           :ARG1 (c2-18 / eat-01
                                                        :ARG0 c2-3
                                                        :ARG1 (c2-0 / anything))
                                           :mod (c2-1 / even)
                                           :manner (c2-5 / want-01
                                                         :ARG0 c2-3
                                                         :ARG1 (c2-11 / throw-up-06
                                                                      :ARG0 c2-3)
                                                         :polarity -))
                               :polarity -))
      :snt2 (c2-2 / have-concession-91
                  :ARG1 (c2-7 / vaccinate-01
                              :ARG1 (c2-15 / i)
                              :mod (c2-14 / still))))

# ::snt Update: it definitely feels like Ive been hit by a truck
# ::tokens ["Update", ":", "it", "definitely", "feels", "like", "I", "ve", "been", "hit", "by", "a", "truck"]
# ::lemmas ["update", ":", "it", "definitely", "feel", "like", "i", "ve", "be", "hit", "by", "a", "truck"]
(c3-4 / update-02
      :ARG2 (c3-1 / feel-05
                  :ARG1 (c3-6 / it)
                  :ARG2 (c3-2 / hit-01
                              :ARG0 (c3-5 / truck)
                              :ARG1 (c3-3 / i))
                  :mod (c3-0 / definite)))

# ::snt Wellllllll. I guess Ill be a sick queen
# ::tokens ["Wellllllll", ".", "I", "guess", "Ill", "be", "a", "sick", "queen"]
# ::lemmas ["Wellllllll", ".", "i", "guess", "Ill", "be", "a", "sick", "queen"]
(c4-5 / multi-sentence
      :snt1 (c4-1 / well
                  :mode expressive)
      :snt2 (c4-3 / guess-01
                  :ARG0 (c4-4 / i)
                  :ARG1 (c4-2 / queen
                              :ARG1-of (c4-0 / sick-05)
                              :domain c4-4)))

# ::snt Sis you bout to be sick lmao that second dose wiped me out
# ::tokens ["Sis", "you", "bout", "to", "be", "sick", "lmao", "that", "second", "dose", "wiped", "me", "out"]
# ::lemmas ["Sis", "you", "bout", "to", "be", "sick", "lmao", "that", "second", "dose", "wipe", "i", "out"]
(c5-0 / sick-05
      :polarity (c5-2 / amr-unknown)
      :ARG1 (c5-9 / you)
      :ARG1-of (c5-3 / cause-01
                     :ARG0 (c5-4 / wipe-out-02
                                 :ARG0 (c5-1 / dose
                                             :ord (c5-5 / ordinal-entity
                                                        :value 2))
                                 :ARG1 (c5-8 / i)))
      :ARG1-of (c5-6 / laugh-01
                     :ARG0 c5-8
                     :manner (c5-7 / loud)
                     :mode expressive))
