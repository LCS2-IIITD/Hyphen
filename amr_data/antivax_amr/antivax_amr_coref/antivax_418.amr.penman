# ::snt To expect sensible from Kejri is like expecting a tiger to turn vegan.
# ::tokens ["To", "expect", "sensible", "from", "Kejri", "is", "like", "expecting", "a", "tiger", "to", "turn", "vegan", "."]
# ::lemmas ["to", "expect", "sensible", "from", "Kejri", "be", "like", "expect", "a", "tiger", "to", "turn", "vegan", "."]
(c1-5 / resemble-01
      :ARG1 (c1-9 / expect-01
                  :ARG1 (c1-4 / thing
                              :ARG1-of (c1-0 / sense-02)
                              :source (c1-6 / person
                                            :name (c1-7 / name
                                                        :op1 "Kejri"))))
      :ARG2 (c1-2 / expect-01
                  :ARG1 (c1-1 / turn-02
                              :ARG1 (c1-8 / tiger)
                              :ARG2 (c1-3 / vegan))))

# ::snt Omg
# ::tokens ["Omg"]
# ::lemmas ["Omg"]
(c3-0 / oh-my-god
      :mode expressive)

# ::snt Where there is a shortage and people are send back home , how he got it.
# ::tokens ["Where", "there", "is", "a", "shortage", "and", "people", "are", "send", "back", "home", ",", "how", "he", "got", "it", "."]
# ::lemmas ["where", "there", "be", "a", "shortage", "and", "people", "be", "send", "back", "home", ",", "how", "he", "get", "it", "."]
(c4-5 / get-01
      :ARG0 (c4-2 / he)
      :ARG1 (c4-7 / it)
      :manner (c4-1 / amr-unknown)
      :location (c4-9 / and
                      :op1 (c4-0 / short-06)
                      :op2 (c4-6 / send-01
                                 :ARG1 (c4-4 / person)
                                 :ARG2 (c4-3 / home)
                                 :direction (c4-8 / back))))

# ::snt Hope it makes him do something sensible.
# ::tokens ["Hope", "it", "makes", "him", "do", "something", "sensible", "."]
# ::lemmas ["hope", "it", "make", "he", "do", "something", "sensible", "."]
(c5-3 / hope-01
      :ARG1 (c5-6 / make-02
                  :ARG0 (c5-5 / it)
                  :ARG1 (c5-0 / do-02
                              :ARG0 (c5-4 / he)
                              :ARG1 (c5-1 / something
                                          :ARG1-of (c5-2 / sense-02)))))

# ::snt yes, now that one of the chief virus has vaccinated himself
# ::tokens ["yes", ",", "now", "that", "one", "of", "the", "chief", "virus", "has", "vaccinated", "himself"]
# ::lemmas ["yes", ",", "now", "that", "one", "of", "the", "chief", "virus", "have", "vaccinate", "himself"]
(c6-4 / vaccinate-01
      :ARG0 (c6-0 / virus
                  :ARG1-of (c6-5 / include-91
                                 :ARG2 (c6-3 / virus
                                             :mod (c6-1 / chief)))
                  :quant 1)
      :ARG1 (c6-2 / he)
      :time (c6-6 / now))

# ::snt After to weeks we will beome Covid free .
# ::tokens ["After", "to", "weeks", "we", "will", "beome", "Covid", "free", "."]
# ::lemmas ["after", "to", "weeks", "we", "will", "beome", "Covid", "free", "."]
(c7-1 / free-04
      :ARG1 (c7-3 / we)
      :location (c7-2 / city
                      :name (c7-6 / name
                                  :op1 "Covid"))
      :time (c7-0 / after
                  :quant (c7-5 / multiple
                               :op1 (c7-4 / temporal-quantity
                                          :unit (c7-7 / week)
                                          :quant 1))))
