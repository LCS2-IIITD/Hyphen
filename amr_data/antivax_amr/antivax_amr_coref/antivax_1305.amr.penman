# ::snt Omg thats great. The loop has been CLOSED.
# ::tokens ["Omg", "that", "s", "great", ".", "The", "loop", "has", "been", "CLOSED", "."]
# ::lemmas ["Omg", "that", "s", "great", ".", "the", "loop", "have", "be", "closed", "."]
(c1-5 / multi-sentence
      :snt1 (c1-4 / great
                  :domain (c1-2 / that)
                  :mod (c1-1 / oh-my-god
                             :mode expressive))
      :snt2 (c1-0 / close-01
                  :ARG1 (c1-3 / loop)))

# ::snt Ill do you one better. I got my ears pierced at a mall store called The Loop that doesnt even exist anymore.
# ::tokens ["Ill", "do", "you", "one", "better", ".", "I", "got", "my", "ears", "pierced", "at", "a", "mall", "store", "called", "The", "Loop", "that", "does", "nt", "even", "exist", "anymore", "."]
# ::lemmas ["Ill", "do", "you", "one", "well", ".", "i", "get", "my", "ear", "pierce", "at", "a", "mall", "store", "call", "the", "Loop", "that", "do", "not", "even", "exist", "anymore", "."]
(c2-13 / multi-sentence
       :snt1 (c2-0 / do-02
                   :ARG0 (c2-12 / i
                                :part (c2-16 / ear))
                   :ARG1 (c2-9 / thing
                               :ARG1-of (c2-5 / have-degree-91
                                              :ARG2 (c2-11 / good-02
                                                           :ARG1 c2-9)
                                              :ARG3 (c2-4 / more))
                               :quant 1)
                   :ARG2 (c2-15 / you))
       :snt2 (c2-3 / get-04
                   :ARG0 c2-12
                   :ARG1 (c2-10 / pierce-01
                                :ARG1 c2-16
                                :location (c2-1 / store
                                                :name (c2-14 / name
                                                             :op1 "The"
                                                             :op2 "Loop")
                                                :mod (c2-8 / mall)
                                                :ARG1-of (c2-6 / exist-01
                                                               :mod (c2-7 / even)
                                                               :time (c2-2 / anymore)
                                                               :polarity -)))))
