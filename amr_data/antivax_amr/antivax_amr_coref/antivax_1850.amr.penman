# ::snt I didn't have any reaction at all to the first Terri. Not even a sore arm.
# ::tokens ["I", "did", "n't", "have", "any", "reaction", "at", "all", "to", "the", "first", "Terri", ".", "Not", "even", "a", "sore", "arm", "."]
# ::lemmas ["i", "do", "not", "have", "any", "reaction", "at", "all", "to", "the", "first", "Terri", ".", "not", "even", "a", "sore", "arm", "."]
(c1-6 / multi-sentence
      :snt1 (c1-3 / react-01
                  :ARG0 (c1-5 / i)
                  :ARG1 (c1-4 / person
                              :name (c1-7 / name
                                          :op1 "Terri")
                              :ord (c1-2 / ordinal-entity
                                         :value 1))
                  :mod (c1-1 / at-all)
                  :polarity -)
      :snt2 (c1-0 / sore
                  :domain (c1-8 / arm)
                  :mod (c1-9 / even)
                  :polarity -))

# ::snt Thanks Kim. Fortunate to work in a medical clinic so had easy early access.
# ::tokens ["Thanks", "Kim", ".", "Fortunate", "to", "work", "in", "a", "medical", "clinic", "so", "had", "easy", "early", "access", "."]
# ::lemmas ["thank", "Kim", ".", "Fortunate", "to", "work", "in", "a", "medical", "clinic", "so", "have", "easy", "early", "access", "."]
(c2-9 / multi-sentence
      :snt1 (c2-7 / thank-01
                  :ARG1 (c2-8 / person
                              :name (c2-10 / name
                                           :op1 "Kim")))
      :snt2 (c2-2 / fortunate-01
                  :ARG2 (c2-4 / work-01
                              :ARG2 (c2-3 / clinic
                                          :mod (c2-5 / medicine)))
                  :ARG0-of (c2-0 / cause-01
                                 :ARG1 (c2-1 / access-01
                                             :ARG1-of (c2-11 / easy-05)
                                             :time (c2-6 / early)))))

# ::snt Glad to hear youve got your final shot.
# ::tokens ["Glad", "to", "hear", "you", "ve", "got", "your", "final", "shot", "."]
# ::lemmas ["Glad", "to", "hear", "you", "ve", "get", "your", "final", "shot", "."]
(c3-4 / glad-02
      :ARG0 (c3-3 / hear-01
                  :ARG0 (c3-5 / i)
                  :ARG1 (c3-1 / get-02
                              :ARG0 (c3-6 / you)
                              :ARG1 (c3-0 / shoot-01
                                          :ARG0 c3-6
                                          :mod (c3-2 / final))))
      :ARG1 c3-5)

# ::snt I was wrong about the easing. I just slept for hours after exerting myself this morning by going to have coffee with a friend. Would not want this thing for real.
# ::tokens ["I", "was", "wrong", "about", "the", "easing", ".", "I", "just", "slept", "for", "hours", "after", "exerting", "myself", "this", "morning", "by", "going", "to", "have", "coffee", "with", "a", "friend", ".", "Would", "not", "want", "this", "thing", "for", "real", "."]
# ::lemmas ["i", "be", "wrong", "about", "the", "easing", ".", "i", "just", "sleep", "for", "hours", "after", "exert", "myself", "this", "morning", "by", "go", "to", "have", "coffee", "with", "a", "friend", ".", "would", "not", "want", "this", "thing", "for", "real", "."]
(c4-8 / multi-sentence
      :snt1 (c4-4 / wrong-04
                  :ARG1 (c4-2 / i)
                  :ARG2 (c4-11 / ease-02))
      :snt2 (c4-12 / sleep-01
                   :ARG0 (c4-13 / i)
                   :time (c4-17 / after
                                :op1 (c4-21 / exert-01
                                            :ARG0 c4-13
                                            :ARG1 c4-13
                                            :ARG2 (c4-3 / coffee
                                                        :accompanier (c4-23 / person
                                                                            :ARG0-of (c4-20 / have-rel-role-91
                                                                                            :ARG1 c4-13
                                                                                            :ARG2 (c4-18 / friend))))
                                            :time (c4-0 / date-entity
                                                        :dayperiod (c4-19 / morning)
                                                        :mod (c4-6 / today))))
                   :duration (c4-16 / multiple
                                    :op1 (c4-5 / temporal-quantity
                                               :unit (c4-1 / hour)
                                               :quant 1))
                   :mod (c4-22 / just))
      :snt3 (c4-10 / want-01
                   :ARG0 (c4-14 / i)
                   :ARG1 (c4-7 / real-04
                               :ARG1 (c4-9 / thing
                                           :mod (c4-15 / this)))
                   :polarity -))
