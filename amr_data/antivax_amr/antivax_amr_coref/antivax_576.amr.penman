# ::snt I have tickets for Manic Street for last June, moved to this June but cant see that happening!
# ::tokens ["I", "have", "tickets", "for", "Manic", "Street", "for", "last", "June", ",", "moved", "to", "this", "June", "but", "ca", "nt", "see", "that", "happening", "!"]
# ::lemmas ["i", "have", "ticket", "for", "Manic", "Street", "for", "last", "June", ",", "move", "to", "this", "June", "but", "can", "not", "see", "that", "happen", "!"]
(c1-3 / contrast-01
      :ARG1 (c1-6 / have-03
                  :ARG0 (c1-11 / i)
                  :ARG1 (c1-7 / ticket
                              :beneficiary (c1-0 / street
                                                 :name (c1-13 / name
                                                              :op1 "Manic"
                                                              :op2 "Street")))
                  :time (c1-1 / date-entity
                              :mod (c1-8 / last)
                              :month 6))
      :ARG2 (c1-12 / move-01
                   :ARG1 c1-11
                   :ARG2 (c1-4 / date-entity
                               :mod (c1-5 / this)
                               :month 6))
      :ARG1-of (c1-2 / cause-01
                     :ARG0 (c1-9 / possible-01
                                 :ARG1 (c1-10 / see-01
                                              :ARG0 c1-11
                                              :ARG1 c1-12)
                                 :polarity -)))

# ::snt Play Sinatras my way wait until the last verse!
# ::tokens ["Play", "Sinatras", "my", "way", "wait", "until", "the", "last", "verse", "!"]
# ::lemmas ["Play", "Sinatras", "my", "way", "wait", "until", "the", "last", "verse", "!"]
(c2-1 / wait-01
      :ARG1 (c2-8 / you)
      :ARG2 (c2-6 / play-01
                  :ARG0 c2-8
                  :ARG1 (c2-5 / game
                              :name (c2-7 / name
                                          :op1 "Sinatras"))
                  :manner (c2-9 / way
                                :poss (c2-0 / i)))
      :time (c2-2 / until
                  :op1 (c2-3 / verse
                             :mod (c2-4 / last)))
      :mode imperative)

# ::snt I often play that on the way to the shops, if I'm feeling I don't want to face the muzzled disapproval, listening to that song gives me the determination to say feck them .
# ::tokens ["I", "often", "play", "that", "on", "the", "way", "to", "the", "shops", ",", "if", "I", "'m", "feeling", "I", "do", "n't", "want", "to", "face", "the", "muzzled", "disapproval", ",", "listening", "to", "that", "song", "gives", "me", "the", "determination", "to", "say", "feck", "them", "."]
# ::lemmas ["i", "often", "play", "that", "on", "the", "way", "to", "the", "shop", ",", "if", "i", "be", "feel", "i", "do", "not", "want", "to", "face", "the", "muzzled", "disapproval", ",", "listen", "to", "that", "song", "give", "i", "the", "determination", "to", "say", "feck", "they", "."]
(c3-14 / and
       :op1 (c3-18 / play-11
                   :ARG0 (c3-1 / i)
                   :ARG1 (c3-5 / that)
                   :frequency (c3-4 / often)
                   :time (c3-2 / way
                               :destination (c3-9 / shop)))
       :op2 (c3-6 / give-01
                  :ARG0 (c3-16 / listen-01
                               :ARG0 c3-1
                               :ARG1 (c3-17 / song
                                            :mod c3-5))
                  :ARG1 (c3-0 / determine-01
                              :ARG0 c3-1
                              :ARG1 (c3-10 / say-01
                                           :ARG0 c3-1
                                           :ARG1 (c3-15 / feck-01
                                                        :ARG1 (c3-3 / they))))
                  :ARG2 c3-1
                  :condition (c3-11 / feel-01
                                    :ARG0 c3-1
                                    :ARG1 (c3-8 / want-01
                                                :ARG0 c3-1
                                                :ARG1 (c3-12 / face-01
                                                             :ARG0 c3-1
                                                             :ARG1 (c3-13 / disapprove-01
                                                                          :ARG0 c3-1
                                                                          :ARG1-of (c3-7 / muzzle-01)))
                                                :polarity -))))

# ::snt So explain why a white paper? And if you go back through this thread there is a map who does and doesnt. You are one of the e very few who have
# ::tokens ["So", "explain", "why", "a", "white", "paper", "?", "And", "if", "you", "go", "back", "through", "this", "thread", "there", "is", "a", "map", "who", "does", "and", "does", "nt", ".", "You", "are", "one", "of", "the", "e", "very", "few", "who", "have"]
# ::lemmas ["so", "explain", "why", "a", "white", "paper", "?", "and", "if", "you", "go", "back", "through", "this", "thread", "there", "be", "a", "map", "who", "do", "and", "do", "not", ".", "you", "be", "one", "of", "the", "e", "very", "few", "who", "have"]
(c4-11 / multi-sentence
       :snt1 (c4-13 / explain-01
                    :ARG0 (c4-16 / you)
                    :ARG1 (c4-18 / amr-unknown
                                 :ARG0-of (c4-5 / cause-01
                                                :ARG1 (c4-23 / paper
                                                             :ARG1-of (c4-6 / white-03))))
                    :polarity (c4-12 / amr-unknown)
                    :mode imperative)
       :snt2 (c4-20 / map
                    :location (c4-9 / thread
                                    :mod (c4-7 / this))
                    :ARG0-of (c4-0 / cause-01
                                   :ARG1 (c4-1 / and
                                               :op1 (c4-2 / do-02
                                                          :ARG0 (c4-22 / person))
                                               :op2 (c4-15 / do-02
                                                           :ARG0 c4-22
                                                           :polarity -)))
                    :condition (c4-10 / go-back-19
                                      :ARG1 (c4-17 / you)
                                      :ARG2 c4-9))
       :snt3 (c4-4 / include-91
                   :ARG1 (c4-3 / you)
                   :ARG2 (c4-14 / person
                                :quant (c4-19 / few
                                              :degree (c4-8 / very))
                                :ARG0-of (c4-21 / have-03
                                                :ARG1 c4-20))))

# ::snt Hydroxychloroquine is the way forward as a cure so no need for a vaccine.....
# ::tokens ["Hydroxychloroquine", "is", "the", "way", "forward", "as", "a", "cure", "so", "no", "need", "for", "a", "vaccine", "....."]
# ::lemmas ["Hydroxychloroquine", "be", "the", "way", "forward", "as", "a", "cure", "so", "no", "need", "for", "a", "vaccine", "....."]
(c5-3 / way
      :direction (c5-1 / forward)
      :domain (c5-4 / hydrochloroquine)
      :purpose (c5-2 / cure-01)
      :ARG0-of (c5-0 / cause-01
                     :ARG1 (c5-6 / need-01
                                 :ARG1 (c5-5 / vaccine)
                                 :polarity -)))

# ::snt I stayed in an hotel in Norwich and it smelled like a swimming pool when you turned the shower on. I couldn't drink the tea either, it was disgusting.
# ::tokens ["I", "stayed", "in", "an", "hotel", "in", "Norwich", "and", "it", "smelled", "like", "a", "swimming", "pool", "when", "you", "turned", "the", "shower", "on", ".", "I", "could", "n't", "drink", "the", "tea", "either", ",", "it", "was", "disgusting", "."]
# ::lemmas ["i", "stay", "in", "an", "hotel", "in", "Norwich", "and", "it", "smell", "like", "a", "swimming", "pool", "when", "you", "turn", "the", "shower", "on", ".", "i", "could", "not", "drink", "the", "tea", "either", ",", "it", "be", "disgusting", "."]
(c6-6 / multi-sentence
      :snt1 (c6-15 / and
                   :op1 (c6-9 / stay-01
                              :ARG1 (c6-1 / i)
                              :location (c6-16 / hotel
                                               :location (c6-3 / city
                                                               :name (c6-7 / name
                                                                           :op1 "Norwich"))))
                   :op2 (c6-19 / smell-02
                               :ARG1 (c6-10 / it)
                               :ARG2 (c6-20 / pool
                                            :mod (c6-11 / swim-01))
                               :time (c6-5 / turn-on-13
                                           :ARG0 (c6-14 / you)
                                           :ARG1 (c6-2 / shower-01)))
                   :snt2-of c6-6)
      :op1 (c6-18 / possible-01
                  :ARG1 (c6-0 / drink-01
                              :ARG0 (c6-12 / i)
                              :ARG1 (c6-4 / tea)
                              :mod (c6-8 / either))
                  :polarity -)
      :op2 (c6-13 / disgust-01
                  :ARG0 (c6-17 / it)))

# ::snt I remember fluoride being added to tap water to improve dental health.There was a whole discussion about it a long time ago.Today tap water often comes from the back end of sewage treatment, you should be more concerned about oestrogen from the pill being in your tap water.
# ::tokens ["I", "remember", "fluoride", "being", "added", "to", "tap", "water", "to", "improve", "dental", "health", ".", "There", "was", "a", "whole", "discussion", "about", "it", "a", "long", "time", "ago", ".", "Today", "tap", "water", "often", "comes", "from", "the", "back", "end", "of", "sewage", "treatment", ",", "you", "should", "be", "more", "concerned", "about", "oestrogen", "from", "the", "pill", "being", "in", "your", "tap", "water", "."]
# ::lemmas ["i", "remember", "fluoride", "be", "add", "to", "tap", "water", "to", "improve", "dental", "health", ".", "there", "be", "a", "whole", "discussion", "about", "it", "a", "long", "time", "ago", ".", "Today", "tap", "water", "often", "come", "from", "the", "back", "end", "of", "sewage", "treatment", ",", "you", "should", "be", "more", "concerned", "about", "oestrogen", "from", "the", "pill", "be", "in", "your", "tap", "water", "."]
(c7-13 / multi-sentence
       :snt1 (c7-12 / remember-01
                    :ARG0 (c7-5 / i)
                    :ARG1 (c7-25 / add-02
                                 :ARG1 (c7-27 / fluoride)
                                 :ARG2 (c7-7 / water
                                             :mod (c7-11 / tap))
                                 :purpose (c7-19 / improve-01
                                                 :ARG0 c7-27
                                                 :ARG1 (c7-29 / health
                                                              :mod (c7-0 / dental)))))
       :snt2 (c7-22 / discuss-01
                    :ARG1 (c7-20 / it)
                    :time (c7-32 / before
                                 :op1 (c7-14 / now)
                                 :quant (c7-8 / time
                                              :ARG1-of (c7-31 / long-03)))
                    :mod (c7-16 / whole))
       :snt3 (c7-6 / come-03
                   :ARG1 (c7-4 / water
                               :mod (c7-15 / tap))
                   :ARG2 (c7-17 / end
                                :mod (c7-24 / back)
                                :part-of (c7-21 / treat-04
                                                :ARG1 (c7-18 / sewage)))
                   :frequency (c7-10 / often)
                   :time (c7-26 / today))
       :snt4 (c7-9 / recommend-01
                   :ARG1 (c7-1 / concern-01
                               :ARG0 (c7-30 / oestrogen
                                            :source (c7-33 / pill
                                                           :location (c7-2 / water
                                                                           :mod c7-15
                                                                           :poss (c7-23 / you
                                                                                        :ARG1-of c7-1))))
                               :ARG2-of (c7-3 / have-degree-91
                                              :ARG1 c7-23
                                              :ARG3 (c7-28 / more)))))

# ::snt I thought they already did that.
# ::tokens ["I", "thought", "they", "already", "did", "that", "."]
# ::lemmas ["i", "think", "they", "already", "do", "that", "."]
(c8-3 / think-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-0 / do-02
                  :ARG0 (c8-2 / they)
                  :ARG1 (c8-5 / that)
                  :time (c8-1 / already)))

# ::snt How does one defluorinate it?
# ::tokens ["How", "does", "one", "defluorinate", "it", "?"]
# ::lemmas ["how", "do", "one", "defluorinate", "it", "?"]
(c9-0 / defluorinate-01
      :ARG0 (c9-1 / one)
      :ARG1 (c9-3 / it)
      :manner (c9-2 / amr-unknown))

# ::snt Reverse osmosis
# ::tokens ["Reverse", "osmosis"]
# ::lemmas ["reverse", "osmosis"]
(c10-0 / osmosis
       :mod (c10-1 / reverse))

# ::snt Im not sure
# ::tokens ["I", "m", "not", "sure"]
# ::lemmas ["i", "m", "not", "sure"]
(c12-0 / sure-02
       :ARG0 (c12-1 / i)
       :polarity -)

# ::snt And some of them are not even Vs, they are an experimental gene therapy
# ::tokens ["And", "some", "of", "them", "are", "not", "even", "Vs", ",", "they", "are", "an", "experimental", "gene", "therapy"]
# ::lemmas ["and", "some", "of", "they", "be", "not", "even", "Vs", ",", "they", "be", "an", "experimental", "gene", "therapy"]
(c13-1 / and
       :op2 (c13-9 / and
                   :op1 (c13-3 / have-polarity-91
                               :ARG1 (c13-5 / thing
                                            :quant (c13-0 / some)
                                            :ARG1-of (c13-7 / include-91
                                                            :ARG2 (c13-2 / they)))
                               :mod (c13-10 / even)
                               :ARG2 -)
                   :op2 (c13-8 / therapy
                               :mod (c13-6 / gene)
                               :mod (c13-4 / experiment-01)
                               :domain c13-5)))

# ::snt Best thing to buy is a reverse osmosis unit it filters out everything, can be expensive thou
# ::tokens ["Best", "thing", "to", "buy", "is", "a", "reverse", "osmosis", "unit", "it", "filters", "out", "everything", ",", "can", "be", "expensive", "thou"]
# ::lemmas ["good", "thing", "to", "buy", "be", "a", "reverse", "osmosis", "unit", "it", "filter", "out", "everything", ",", "can", "be", "expensive", "thou"]
(c14-8 / good-02
       :ARG1 (c14-11 / buy-01
                     :ARG1 (c14-5 / unit
                                  :ARG0-of (c14-0 / filter-02
                                                  :ARG1 (c14-12 / everything)
                                                  :direction (c14-6 / out))
                                  :ARG0-of (c14-1 / cause-01
                                                  :ARG1 (c14-9 / possible-01
                                                               :ARG1 (c14-3 / expensive
                                                                            :domain c14-5)))
                                  :mod (c14-4 / osmosis
                                              :ARG1-of (c14-7 / reverse-01))))
       :ARG2-of (c14-2 / have-degree-91
                       :ARG1 c14-11
                       :ARG3 (c14-10 / most)))

# ::snt Its getting ramped up locally here. Both Bristol South Gloucestershire. More test centres opening up and constantly being pushed. If only they would stop to question things - theres enough information. But they listen to MSM.
# ::tokens ["Its", "getting", "ramped", "up", "locally", "here", ".", "Both", "Bristol", "South", "Gloucestershire", ".", "More", "test", "centres", "opening", "up", "and", "constantly", "being", "pushed", ".", "If", "only", "they", "would", "stop", "to", "question", "things", "-", "there", "s", "enough", "information", ".", "But", "they", "listen", "to", "MSM", "."]
# ::lemmas ["its", "getting", "ramp", "up", "locally", "here", ".", "both", "Bristol", "South", "Gloucestershire", ".", "more", "test", "centre", "open", "up", "and", "constantly", "be", "push", ".", "if", "only", "they", "would", "stop", "to", "question", "thing", "-", "there", "s", "enough", "information", ".", "but", "they", "listen", "to", "MSM", "."]
(c15-12 / multi-sentence
        :snt1 (c15-11 / ramp-up-01
                      :ARG1 (c15-5 / it)
                      :location (c15-21 / here)
                      :ARG1-of (c15-24 / local-02))
        :snt2 (c15-6 / city
                     :name (c15-13 / name
                                   :op1 "Bristol"
                                   :op2 "South"
                                   :op3 "Gloucestershire")
                     :mod (c15-25 / both))
        :snt3 (c15-19 / and
                      :op1 (c15-9 / open-up-03
                                  :ARG1 (c15-0 / center
                                               :purpose (c15-10 / test-01)
                                               :quant (c15-20 / more)))
                      :op2 (c15-26 / push-01
                                   :ARG1 c15-0
                                   :frequency (c15-8 / constant)))
        :snt4 (c15-17 / information
                      :ARG1-of (c15-4 / have-quant-91
                                      :ARG3 (c15-15 / enough))
                      :condition (c15-16 / stop-01
                                         :ARG0 (c15-7 / they)
                                         :purpose (c15-1 / question-03
                                                         :ARG0 c15-7
                                                         :ARG1 (c15-14 / thing))
                                         :mod (c15-22 / only)))
        :snt5 (c15-18 / contrast-01
                      :ARG2 (c15-3 / listen-01
                                   :ARG0 c15-7
                                   :ARG1 (c15-23 / publication
                                                 :name (c15-2 / name
                                                              :op1 "MSM")))))

# ::snt It's not just fluoride we also have chlorine
# ::tokens ["It", "'s", "not", "just", "fluoride", "we", "also", "have", "chlorine"]
# ::lemmas ["it", "be", "not", "just", "fluoride", "we", "also", "have", "chlorine"]
(c16-3 / contrast-01
       :ARG1 (c16-2 / fluoride
                    :mod (c16-6 / just
                                :polarity -))
       :ARG2 (c16-5 / have-03
                    :ARG0 (c16-4 / we)
                    :ARG1 (c16-0 / chlorine)
                    :mod (c16-1 / also)))

# ::snt We filter ours too
# ::tokens ["We", "filter", "ours", "too"]
# ::lemmas ["we", "filter", "ours", "too"]
(c17-3 / filter-02
       :ARG0 (c17-0 / we)
       :ARG1 (c17-2 / thing
                    :poss c17-0)
       :mod (c17-1 / too))
