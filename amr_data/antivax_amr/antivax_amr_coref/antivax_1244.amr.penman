# ::snt OOO IK DE E AHDJFJDJD
# ::tokens ["OOO", "IK", "DE", "E", "AHDJFJDJD"]
# ::lemmas ["OOO", "IK", "DE", "E", "AHDJFJDJD"]
(c1-0 / and
      :op1 (c1-1 / oops
                 :mode expressive)
      :op2 (c1-2 / by-oneself)
      :op3 (c1-3 / person
                 :name (c1-4 / name
                             :op1 "AHDJFJDJD")))

# ::snt AUGUSTUS
# ::tokens ["AUGUSTUS"]
# ::lemmas ["AUGUSTUS"]
(c2-1 / country
      :name (c2-0 / name
                  :op1 "AUGUSTUS"))

# ::snt HELL YE WNR HEB JE E
# ::tokens ["HELL", "YE", "WNR", "HEB", "JE", "E"]
# ::lemmas ["hell", "ye", "WNR", "HEB", "JE", "e"]
(c3-1 / and
      :op1 (c3-2 / hey
                 :mode expressive)
      :op2 (c3-4 / hey
                 :mode expressive)
      :op3 (c3-0 / hey
                 :mode expressive)
      :op4 (c3-3 / hey
                 :mode expressive))

# ::snt LMFAOOO so far so good
# ::tokens ["LMFAOOO", "so", "far", "so", "good"]
# ::lemmas ["LMFAOOO", "so", "far", "so", "good"]
(c4-1 / and
      :op1 (c4-4 / laugh-01
                 :ARG0 (c4-6 / i
                             :part (c4-7 / ass
                                         :mod (c4-2 / fucking)))
                 :ARG1 (c4-3 / off))
      :op2 (c4-5 / good-02
                 :mod (c4-0 / so-far)))

# ::snt JAZEKER
# ::tokens ["JAZEKER"]
# ::lemmas ["JAZEKER"]
(c5-0 / person
      :name (c5-1 / name
                  :op1 "JZEKER"))

# ::snt mine didnt. so far
# ::tokens ["mine", "did", "nt", ".", "so", "far"]
# ::lemmas ["mine", "do", "not", ".", "so", "far"]
(c6-0 / do-02
      :ARG0 (c6-2 / thing
                  :poss (c6-1 / i))
      :time (c6-3 / so-far)
      :polarity -)

# ::snt mine didnt so I think ur good xD
# ::tokens ["mine", "did", "nt", "so", "I", "think", "ur", "good", "xD"]
# ::lemmas ["mine", "do", "not", "so", "i", "think", "ur", "good", "xd"]
(c7-1 / cause-01
      :ARG0 (c7-0 / do-02
                  :ARG0 (c7-3 / thing
                              :poss (c7-5 / i))
                  :polarity -)
      :ARG1 (c7-2 / think-01
                  :ARG0 c7-5
                  :ARG1 (c7-4 / good-02
                              :ARG1 (c7-6 / you)))
      :mod (c7-7 / emoticon
                 :value "xD"))

# ::snt AJAJAJAJAJAJAJAJAJ JIJ HEBT JE E OOK AL GEHAD RIGHT OF NIE
# ::tokens ["AJAJAJAJAJAJAJAJAJ", "JIJ", "HEBT", "JE", "E", "OOK", "AL", "GEHAD", "RIGHT", "OF", "NIE"]
# ::lemmas ["AJAJAJAJAJAJAJAJAJ", "JIJ", "HEBT", "JE", "E", "OOK", "AL", "GEHAD", "right", "of", "NIE"]
(c8-0 / right-05
      :ARG2 (c8-1 / lie-08)
      :mod "")

# ::snt THANK U now hoping my arm wont fall off
# ::tokens ["THANK", "U", "now", "hoping", "my", "arm", "wo", "nt", "fall", "off"]
# ::lemmas ["thank", "U", "now", "hope", "my", "arm", "will", "not", "fall", "off"]
(c9-2 / hope-01
      :ARG0 (c9-5 / i
                  :part (c9-0 / arm))
      :ARG1 (c9-1 / fall-01
                  :ARG1 c9-0
                  :ARG4 (c9-3 / off)
                  :polarity -)
      :time (c9-6 / now)
      :mod (c9-4 / thank-01
                 :ARG0 c9-5))

# ::snt WOOOOOO SO SEKC OF U
# ::tokens ["WOOOOOO", "SO", "SEKC", "OF", "U"]
# ::lemmas ["WOOOOOO", "so", "sekc", "of", "U"]
(c10-0 / southeast
       :domain (c10-2 / thing
                      :name (c10-4 / name
                                   :op1 "U"))
       :degree (c10-3 / so)
       :mod (c10-1 / woo
                   :mode expressive))

# ::snt woohoo congratulations
# ::tokens ["woohoo", "congratulations"]
# ::lemmas ["woohoo", "congratulation"]
(c11-1 / congratulate-01
       :mod (c11-0 / woohoo))
