# ::snt Get plenty of sleep and relaxation!
# ::tokens ["Get", "plenty", "of", "sleep", "and", "relaxation", "!"]
# ::lemmas ["get", "plenty", "of", "sleep", "and", "relaxation", "!"]
(c1-3 / get-01
      :ARG0 (c1-5 / you)
      :ARG1 (c1-1 / and
                  :op1 (c1-0 / sleep-01
                             :ARG0 c1-5)
                  :op2 (c1-2 / relax-01
                             :ARG1 c1-5)
                  :quant (c1-4 / plenty))
      :mode imperative)

# ::snt Best of luck!Take it easy if the side effects start kicking your ass
# ::tokens ["Best", "of", "luck!Take", "it", "easy", "if", "the", "side", "effects", "start", "kicking", "your", "ass"]
# ::lemmas ["good", "of", "luck!take", "it", "easy", "if", "the", "side", "effect", "start", "kick", "your", "ass"]
(c2-4 / good-02
      :ARG2-of (c2-2 / have-degree-91
                     :ARG1 (c2-3 / luck)
                     :ARG3 (c2-6 / most))
      :condition (c2-0 / start-01
                       :ARG0 (c2-9 / effect-03
                                   :ARG1 (c2-5 / side))
                       :ARG1 (c2-7 / kick-01
                                   :ARG0 c2-9
                                   :ARG1 (c2-1 / ass
                                               :part-of (c2-8 / you)))))

# ::snt I hope all goes well!
# ::tokens ["I", "hope", "all", "goes", "well", "!"]
# ::lemmas ["i", "hope", "all", "go", "well", "!"]
(c3-2 / hope-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-3 / go-on-15
                  :ARG1 (c3-0 / all)
                  :ARG1-of (c3-1 / well-09))
      :mode expressive)

# ::snt Let me know over the next couple days I'm getting mine tuesday
# ::tokens ["Let", "me", "know", "over", "the", "next", "couple", "days", "I", "'m", "getting", "mine", "tuesday"]
# ::lemmas ["let", "i", "know", "over", "the", "next", "couple", "days", "i", "be", "get", "mine", "tuesday"]
(c4-7 / let-know-07
      :ARG0 (c4-11 / you)
      :ARG1 (c4-9 / i)
      :ARG2 (c4-8 / get-01
                  :ARG0 c4-9
                  :ARG1 (c4-6 / thing
                              :poss c4-9)
                  :time (c4-0 / date-entity
                              :weekday (c4-3 / tuesday)))
      :time (c4-5 / over
                  :op1 (c4-1 / couple
                             :op1 (c4-2 / temporal-quantity
                                        :unit (c4-4 / day)
                                        :quant 1)
                             :mod (c4-10 / next)))
      :mode imperative)

# ::snt Oh god I know how that felt I got a fever with my first dose, and got really sleepy with my second
# ::tokens ["Oh", "god", "I", "know", "how", "that", "felt", "I", "got", "a", "fever", "with", "my", "first", "dose", ",", "and", "got", "really", "sleepy", "with", "my", "second"]
# ::lemmas ["oh", "god", "i", "know", "how", "that", "feel", "i", "get", "a", "fever", "with", "my", "first", "dose", ",", "and", "get", "really", "sleepy", "with", "my", "second"]
(c5-15 / know-01
       :ARG0 (c5-14 / i)
       :ARG1 (c5-11 / thing
                    :manner-of (c5-4 / feel-05
                                     :ARG1 (c5-6 / that)))
       :mod (c5-10 / oh-god
                   :mode expressive)
       :ARG1-of (c5-5 / cause-01
                      :ARG0 (c5-3 / and
                                  :op1 (c5-13 / get-01
                                              :ARG0 c5-14
                                              :ARG1 (c5-9 / fever)
                                              :time (c5-0 / dose-01
                                                          :ARG0 c5-14
                                                          :ord (c5-8 / ordinal-entity
                                                                     :value 1)))
                                  :op2 (c5-1 / sleepy-06
                                             :ARG1 c5-14
                                             :time (c5-7 / dose-01
                                                         :ARG0 c5-14
                                                         :ord (c5-2 / ordinal-entity
                                                                    :value 2))
                                             :degree (c5-12 / really)))))

# ::snt Good luck!! :3
# ::tokens ["Good", "luck", "!", "!", ":3"]
# ::lemmas ["good", "luck", "!", "!", ":3"]
(c6-1 / luck
      :ARG1-of (c6-0 / good-02)
      :mode expressive)

# ::snt Thank you so much me too! Last time I was really sleepy for a handful of days ;w;
# ::tokens ["Thank", "you", "so", "much", "me", "too", "!", "Last", "time", "I", "was", "really", "sleepy", "for", "a", "handful", "of", "days", ";", "w", ";"]
# ::lemmas ["thank", "you", "so", "much", "i", "too", "!", "last", "time", "i", "be", "really", "sleepy", "for", "a", "handful", "of", "day", ";", "w", ";"]
(c7-13 / multi-sentence
       :snt1 (c7-8 / thank-01
                   :ARG0 (c7-12 / i)
                   :ARG1 (c7-14 / you)
                   :mod (c7-4 / too)
                   :ARG1-of (c7-5 / have-quant-91
                                  :ARG2 (c7-2 / much)
                                  :ARG3 (c7-0 / so)))
       :snt2 (c7-11 / sleepy-06
                    :ARG1 (c7-6 / i)
                    :time (c7-10 / last)
                    :degree (c7-9 / really)
                    :duration (c7-7 / handful
                                    :op1 (c7-3 / temporal-quantity
                                               :unit (c7-1 / day)
                                               :quant 1))
                    :mod (c7-15 / emoticon
                                :value ";w")))

# ::snt I hope all goes well Ramune!!
# ::tokens ["I", "hope", "all", "goes", "well", "Ramune", "!", "!"]
# ::lemmas ["i", "hope", "all", "go", "well", "Ramune", "!", "!"]
(c8-0 / say-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-3 / hope-01
                  :ARG0 c8-6
                  :ARG1 (c8-5 / go-on-15
                              :ARG1 (c8-1 / all)
                              :ARG1-of (c8-2 / well-09)))
      :ARG2 (c8-4 / person
                  :name (c8-7 / name
                              :op1 "Ramune")))
