# ::snt corona worona sub fraud hai
# ::tokens ["corona", "worona", "sub", "fraud", "hai"]
# ::lemmas ["corona", "worona", "sub", "fraud", "hai"]
(c1-2 / and
      :op1 (c1-0 / scam-01
                 :location (c1-3 / city
                                 :name (c1-5 / name
                                             :op1 "Corona")))
      :op2 (c1-1 / defraud-01
                 :location c1-3)
      :op3 (c1-4 / hai))

# ::snt nae bella humbe yahoodi agent nae banna
# ::tokens ["nae", "bella", "humbe", "yahoodi", "agent", "nae", "banna"]
# ::lemmas ["nae", "bella", "humbe", "yahoodi", "agent", "nae", "banna"]
(c3-0 / and
      :op1 (c3-5 / person
                 :name (c3-6 / name
                             :op1 "Bella"))
      :op2 (c3-3 / person
                 :name (c3-4 / name
                             :op1 "Howsoodi"))
      :op3 (c3-1 / person
                 :name (c3-2 / name
                             :op1 "Nae"
                             :op2 "banna")))

# ::snt aao ko bhi convince ker sakti
# ::tokens ["aao", "ko", "bhi", "convince", "ker", "sakti"]
# ::lemmas ["aao", "ko", "bhi", "convince", "ker", "sakti"]
(c4-3 / convince-01
      :ARG1 (c4-1 / person
                  :name (c4-2 / name
                              :op1 "Kur"
                              :op2 "Sakti"))
      :mod (c4-0 / bhi
                 :mode expressive))

# ::snt yahoodi agent banne k liye taiyyar hain ap bella ??
# ::tokens ["yahoodi", "agent", "banne", "k", "liye", "taiyyar", "hain", "ap", "bella", "?", "?"]
# ::lemmas ["yahoodi", "agent", "banne", "k", "liye", "taiyyar", "hain", "ap", "bella", "?", "?"]
(c5-10 / multi-sentence
       :snt1 (c5-9 / person
                   :ARG0-of (c5-3 / have-org-role-91
                                  :ARG2 (c5-0 / agent))
                   :domain (c5-4 / person
                                 :name (c5-11 / name
                                              :op1 "yahoodi")))
       :snt2 (c5-8 / have-manner-91
                   :ARG1 (c5-2 / person
                               :name (c5-5 / name
                                           :op1 "Banne"))
                   :ARG2 (c5-1 / person
                               :ARG0-of (c5-6 / laugh-01
                                              :manner (c5-7 / loud)))))

# ::snt Mashallah
# ::tokens ["Mashallah"]
# ::lemmas ["Mashallah"]
(c6-0 / person
      :name (c6-1 / name
                  :op1 "Mashallah"))

# ::snt Ohhh I see
# ::tokens ["Ohhh", "I", "see"]
# ::lemmas ["ohhh", "i", "see"]
(c7-0 / see-01
      :ARG0 (c7-1 / i)
      :mod (c7-2 / oh
                 :mode expressive))

# ::snt Yes in July InshaAllah
# ::tokens ["Yes", "in", "July", "InshaAllah"]
# ::lemmas ["yes", "in", "July", "InshaAllah"]
(c8-0 / say-01
      :ARG1 (c8-4 / yes
                  :time (c8-1 / date-entity
                              :month 7))
      :ARG2 (c8-2 / person
                  :name (c8-3 / name
                              :op1 "InshaAllah")))

# ::snt We have an app by our state
# ::tokens ["We", "have", "an", "app", "by", "our", "state"]
# ::lemmas ["we", "have", "an", "app", "by", "our", "state"]
(c9-2 / have-03
      :ARG0 (c9-0 / we)
      :ARG1 (c9-1 / app)
      :source (c9-3 / state
                    :poss c9-0))

# ::snt Pakistan ana hai?
# ::tokens ["Pakistan", "ana", "hai", "?"]
# ::lemmas ["Pakistan", "ana", "hai", "?"]
(c10-3 / country
       :name (c10-1 / name
                    :op1 "Pakistan")
       :polarity (c10-0 / amr-unknown)
       :mod (c10-2 / ana))

# ::snt How do you do that?
# ::tokens ["How", "do", "you", "do", "that", "?"]
# ::lemmas ["how", "do", "you", "do", "that", "?"]
(c11-0 / do-02
       :ARG0 (c11-3 / you)
       :ARG1 (c11-2 / that)
       :manner (c11-1 / amr-unknown))
