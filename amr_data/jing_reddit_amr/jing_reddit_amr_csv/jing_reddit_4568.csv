comment,amr
"The paradox of needing experience, but not being able to get it without working the job is such a damn pain in the ass.","# ::snt The paradox of needing experience, but not being able to get it without working the job is such a damn pain in the ass.
(p / pain-01
      :ARG0 (p2 / paradox
            :topic (c / contrast-01
                  :ARG1 (n / need-01
                        :ARG1 (e / experience-01))
                  :ARG2 (p3 / possible-01
                        :polarity -
                        :ARG1 (g / get-01
                              :ARG1 e
                              :manner (w / work-01
                                    :polarity -
                                    :ARG1 (j / job)))))
            :part (a / ass))
      :ARG1 a
      :mod (d / damn
            :degree (s / such)))"
"That's a pretty lame excuse. You should have gotten internships during college. Even if you're at the bottom of your class, you can usually find a bottom tier job in the same industry and work your way up (eg. IT helpdesk -> get certifications -> sys/network admin -> datacenter / virtualization / devops / whatever) I don't see how you're not getting where you want to go.","# ::snt That's a pretty lame excuse. You should have gotten internships during college. Even if you're at the bottom of your class, you can usually find a bottom tier job in the same industry and work your way up (eg. IT helpdesk -> get certifications -> sys/network admin -> datacenter / virtualization / devops / whatever) I don't see how you're not getting where you want to go.
(m / multi-sentence
      :snt1 (e / excuse-02
            :ARG1 (t / that)
            :mod (l / lame
                  :degree (p / pretty)))
      :snt2 (r / recommend-01
            :ARG1 (g / get-01
                  :ARG0 (y / you)
                  :ARG1 (ii / internship)
                  :time (c / college)))
      :snt3 (p2 / possible-01
            :ARG1 (a / and
                  :op1 (f / find-01
                        :ARG0 (y2 / you)
                        :ARG1 (j / job
                              :mod (t2 / tier
                                    :mod (b / bottom))
                              :location (ii2 / industry
                                    :ARG1-of (s / same-01)))
                        :mod (u / usual))
                  :op2 (w / work-01
                        :ARG0 y2
                        :ARG1 (w2 / way
                              :poss y2)
                        :direction (u2 / up)
                        :example (o / or
                              :op1 (h / helpdesk
                                    :topic (t3 / technology
                                          :mod (ii3 / information)))
                              :op2 (p3 / person
                                    :ARG0-of (a2 / administrate-01
                                          :ARG1 (n / network)))
                              :op3 (d / datacenter)
                              :op4 (v / virtualize)
                              :op5 (d2 / devops)
                              :op6 (e2 / et-cetera))))
            :concession (e3 / even-if
                  :op1 (b2 / be-located-at-91
                        :ARG1 y2
                        :ARG2 (b3 / bottom
                              :part-of (c2 / class
                                    :poss y2)))))
      :snt4 (s2 / see-01
            :polarity -
            :ARG0 (ii4 / i)
            :ARG1 (t4 / thing
                  :manner-of (g2 / get-05
                        :polarity -
                        :ARG1 (y3 / you)
                        :ARG2 t4
                        :ARG4-of (g3 / go-02
                              :ARG0 y3
                              :ARG1-of (w3 / want-01
                                    :ARG0 y3))))))"
"""Excuse"" for what? And why would you having a way to hopefully work around the problem by playing their painful game make it less of a ""pain in the ass""?","# ::snt ""Excuse"" for what? And why would you having a way to hopefully work around the problem by playing their painful game make it less of a ""pain in the ass""?
(m / multi-sentence
      :snt1 (e / excuse-01
            :ARG2 (a / amr-unknown)
            :purpose (a2 / amr-unknown))
      :snt2 (a3 / and
            :op2 (c / cause-01
                  :ARG0 (a4 / amr-unknown)
                  :ARG1 (h / have-03
                        :ARG0 (y / you)
                        :ARG1 (w / way
                              :manner-of (w2 / work-around-04
                                    :ARG0 y
                                    :ARG1 (p / problem)
                                    :ARG1-of (h2 / hope-01)
                                    :manner (p2 / play-01
                                          :ARG0 y
                                          :ARG1 (g / game
                                                :poss (t / they)
                                                :ARG0-of (p3 / pain-01)))
                                    :ARG0-of (m2 / make-02
                                          :ARG1 (p4 / pain-01
                                                :ARG1 (a5 / ass)
                                                :ARG2-of (h3 / have-degree-91
                                                      :ARG3 (l / less))
                                                :ARG1-of h3))))))))"
"It's not a workaround, it's reality. You get experience by working the job right below the one you want. Or the one below that. There is no ""paradox,"" he's just making excuses for himself.","# ::snt It's not a workaround, it's reality. You get experience by working the job right below the one you want. Or the one below that. There is no ""paradox,"" he's just making excuses for himself.
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (w / workaround
                  :polarity -
                  :domain (ii / it))
            :ARG2 (r / reality
                  :domain (ii2 / it)))
      :snt2 (g / get-01
            :ARG0 (y / you)
            :ARG1 (e / experience-01)
            :manner (w2 / work-01
                  :ARG0 y
                  :ARG1 (j / job
                        :location (b / below
                              :op1 (j2 / job
                                    :ARG1-of (w3 / want-01
                                          :ARG0 y))
                              :mod (r2 / right)))))
      :snt3 (o / or
            :op2 (j3 / job
                  :location (b2 / below
                        :op1 (t / that))))
      :snt4 (p / paradox
            :polarity -)
      :snt5 (e2 / excuse-02
            :ARG0 (h / he)
            :ARG1 h
            :mod (j4 / just)))"
"There isn't a ""job you want"" or a hierarchy of jobs. There's no ""you can't have this job but there's a part one you can have until this one becomes suitable."" There's just jobs, which you often won't get because you haven't had experience doing that exact job. People are telling you how things too often work, and you're dismissing it simply because you've apparently been lucky enough not to experience it.","# ::snt There isn't a ""job you want"" or a hierarchy of jobs. There's no ""you can't have this job but there's a part one you can have until this one becomes suitable."" There's just jobs, which you often won't get because you haven't had experience doing that exact job. People are telling you how things too often work, and you're dismissing it simply because you've apparently been lucky enough not to experience it.
(m / multi-sentence
      :snt1 (o / or
            :op1 (j / job
                  :polarity -
                  :ARG1-of (w / want-01
                        :ARG0 (y / you)))
            :op2 (h / hierarchy
                  :polarity -
                  :mod (j2 / job)))
      :snt2 (c / contrast-01
            :ARG1 (p / possible-01
                  :polarity -
                  :ARG1 (h2 / have-03
                        :ARG0 (y2 / you)
                        :ARG1 (j3 / job
                              :mod (t / this))))
            :ARG2 (p2 / possible-01
                  :ARG1 (h3 / have-03
                        :ARG0 y2
                        :ARG1 (p3 / part
                              :mod (t2 / this))
                        :time (u / until
                              :op1 (b / become-01
                                    :ARG1 p3
                                    :ARG2 (s / suitable-04
                                          :ARG1 p3))))))
      :snt3 (j4 / job
            :mod (j5 / just)
            :ARG1-of (g / get-01
                  :polarity -
                  :ARG0 (y3 / you)
                  :frequency (o2 / often)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (e / experience-01
                              :polarity -
                              :ARG0 y3
                              :ARG1 (d / do-02
                                    :ARG0 y3
                                    :ARG1 (j6 / job
                                          :mod (e2 / exact))))))
            :snt4 (a / and
                  :op1 (t3 / tell-01
                        :ARG0 (p4 / person)
                        :ARG1 (t4 / thing
                              :manner-of (w2 / work-01
                                    :ARG1 (t5 / thing)
                                    :frequency (o3 / often
                                          :ARG2-of (h4 / have-degree-91
                                                :ARG1 w2
                                                :ARG3 (t6 / too))))
                              :ARG2 y3)
                        :op2 (d2 / dismiss-01
                              :ARG0 y3
                              :ARG1 (ii / it)
                              :ARG1-of (c3 / cause-01
                                    :ARG0 (e3 / experience-01
                                          :polarity -
                                          :ARG0 y3
                                          :ARG1 ii)
                                    :ARG1-of (a2 / appear-02))
                              :mod (s2 / simple))))))"
"The path one takes. Not a path from a-b-c (okay, in some professions, yes, in which case *of course* you start at the bottom and work your way up). This is a really artificial idea of how jobs work, this concept of ""careers"", as though it's an escalator you climb aboard and ride up to the top. Most people move from job to job, from profession to profession, and bank on their gained experience -- which they can't get if they can't get jobs because they don't have experience.","# ::snt The path one takes. Not a path from a-b-c (okay, in some professions, yes, in which case *of course* you start at the bottom and work your way up). This is a really artificial idea of how jobs work, this concept of ""careers"", as though it's an escalator you climb aboard and ride up to the top. Most people move from job to job, from profession to profession, and bank on their gained experience -- which they can't get if they can't get jobs because they don't have experience.
(m / multi-sentence
      :snt1 (p / path
            :ARG1-of (t / take-01
                  :ARG0 (o / one)))
      :snt2 (p2 / path
            :polarity -
            :source (s / string-entity
                  :value ""a-b-c"")
            :ARG1-of (g / get-01
                  :ARG0 (t2 / they)
                  :condition (p3 / possible-01
                        :polarity -
                        :ARG1 (g2 / get-01
                              :ARG0 t2
                              :ARG1 (j / job))
                        :ARG1-of (c / cause-01
                              :ARG0 (e / experience-01
                                    :ARG0 t2)))
                  :ARG1-of (o2 / okay-04)
                  :location (p4 / profession
                        :quant (s2 / some))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (e2 / experience-01
                              :polarity -
                              :ARG0 t2))))
      :snt3 (ii / idea
            :mod (a / artificial
                  :degree (r / really))
            :topic (a2 / and
                  :op1 (t3 / thing
                        :manner-of (w / work-01
                              :ARG0 (j2 / job)))
                  :op2 (c3 / concept
                        :topic (p5 / person
                              :ARG0-of (c4 / care-03))
                        :ARG1-of (c5 / climb-01
                              :ARG0 (y / you)
                              :ARG2 (a3 / aboard))
                        :op3 (r2 / ride-01
                              :ARG0 y
                              :ARG1 (u / up-03
                                    :ARG1 y
                                    :ARG2 (t4 / top)))))
            :domain (t5 / this))
      :snt4 (a4 / and
            :op1 (m2 / move-01
                  :ARG0 p5
                  :mod (m3 / most))
            :ARG2 j2
            :source (p6 / profession)
            :destination (p7 / profession))
      :op2 (b / bank-01
            :ARG0 p5
            :ARG1 e2
            :ARG1-of (g3 / gain-02
                  :ARG0 p5)))"
"> from profession to profession No they don't. It's not an artificial idea to go from a-b-c, it's what everyone with a decent job has done.","# ::snt > from profession to profession No they don't. It's not an artificial idea to go from a-b-c, it's what everyone with a decent job has done.
(m / multi-sentence
      :snt1 (d / do-02
            :polarity -
            :ARG0 (t / they)
            :source (p / profession)
            :mod (n / no))
      :snt2 (c / contrast-01
            :ARG1 (ii / idea
                  :polarity -
                  :mod (a / artificial)
                  :domain (g / go-01
                        :ARG3 (s / string-entity
                              :value ""a-b-c"")))
            :ARG2 d
            :ARG0 (e / everyone
                  :ARG0-of (h / have-03
                        :ARG1 (j / job
                              :mod (d2 / decent))))
            :ARG1 (ii2 / it)))"
