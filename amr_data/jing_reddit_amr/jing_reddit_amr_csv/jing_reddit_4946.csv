comment,amr
Those amoeba are reproducing asexually! This excludes women! Sexism!,"# ::snt Those amoeba are reproducing asexually! This excludes women! Sexism!
(m / multi-sentence
      :snt1 (r / reproduce-01
            :ARG0 (a / amoeba
                  :mod (t / that))
            :manner (s / sexual))
      :snt2 (e / exclude-01
            :ARG0 (t2 / this)
            :ARG1 (w / woman))
      :snt3 (s2 / sexism))"
Watching the double standards of feminists is an entertaining show in itself,"# ::snt Watching the double standards of feminists is an entertaining show in itself
(s / show-04
      :ARG0-of (e / entertain-01)
      :domain (w / watch-01
            :ARG1 (s2 / standard
                  :mod (d / double)
                  :poss (f / feminist))))"
:I see no feminist designation there. Silly to hand people flags like that.,"# ::snt :I see no feminist designation there. Silly to hand people flags like that.
(m / multi-sentence
      :snt1 (s / see-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (d / designation
                  :mod (f / feminism))
            :location (t / there))
      :snt2 (s2 / silly
            :domain (h / hand-01
                  :ARG1 (f2 / flag
                        :ARG1-of (r / resemble-01
                              :ARG2 (t2 / that)))
                  :ARG2 (p / person))))"
Relevant Username,"# ::snt Relevant Username
(u / Username
      :ARG1-of (r / relevant-01))"
I'm with you. People generalize and categorize their fellow humans way to much.,"# ::snt I'm with you. People generalize and categorize their fellow humans way to much.
(m / multi-sentence
      :snt1 (a / accompany-01
            :ARG0 (ii / i)
            :ARG1 (y / you))
      :snt2 (a2 / and
            :op1 (g / generalize-01
                  :ARG0 (p / person)
                  :ARG1 (h / human
                        :poss p
                        :mod (f / fellow)))
            :op2 (c / categorize-01
                  :ARG0 p
                  :ARG1 h)
            :quant (m2 / much
                  :degree (w / way))))"
