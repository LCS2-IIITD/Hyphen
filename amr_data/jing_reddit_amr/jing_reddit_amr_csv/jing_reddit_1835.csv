comment,amr
What does (sic) mean?,"# ::snt What does (sic) mean?
(m / mean-01
      :ARG1 (a / amr-unknown))"
"It means it's written like that, the person quoting it is leaving the autocorrector errors like they were originally written.","# ::snt It means it's written like that, the person quoting it is leaving the autocorrector errors like they were originally written.
(m / multi-sentence
      :snt1 (m2 / mean-01
            :ARG1 (ii / it)
            :ARG2 (w / write-01
                  :ARG1 (ii2 / it)
                  :ARG1-of (r / resemble-01
                        :ARG2 (t / that))))
      :snt2 (l / leave-15
            :ARG0 (p / person
                  :ARG0-of (q / quote-01
                        :ARG2 (ii3 / it)))
            :ARG1 (e / err-01
                  :ARG0 p
                  :ARG0-of (c / correct-01
                        :polarity -))
            :ARG1-of (r2 / resemble-01
                  :ARG2 (w2 / write-01
                        :ARG1 e
                        :mod (o / original)))))"
Kinda counterintuitive spamming the text with a (sic) after every grammatical error to keep the text original,"# ::snt Kinda counterintuitive spamming the text with a (sic) after every grammatical error to keep the text original
(c / counterintuitive
      :degree (k / kind-of)
      :domain (s / spam-01
            :ARG1 (t / text)
            :ARG2 (s2 / string-entity
                  :value ""a"")
            :time (a / after
                  :op1 (e / err-01
                        :ARG1 (g / grammar)
                        :mod (e2 / every)))
            :purpose (k2 / keep-01
                  :ARG1 (o / original
                        :domain t))))"
">Think of it like the ""/s"" for comments - it shouldn't be needed but it helps autists to feel better. You cant imagine how often that /s helped me out. More often than i like to admit.","# ::snt >Think of it like the ""/s"" for comments - it shouldn't be needed but it helps autists to feel better. You cant imagine how often that /s helped me out. More often than i like to admit.
(m / multi-sentence
      :snt1 (t / think-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / it
                  :ARG1-of (r / resemble-01
                        :ARG2 (s / string-entity
                              :value ""/s""
                              :purpose (c / comment-01))))
            :snt2 (c2 / contrast-01
                  :ARG1 (r2 / recommend-01
                        :ARG1 (n / need-01
                              :polarity -
                              :ARG1 (ii2 / it)))
                  :ARG2 (h / help-01
                        :ARG0 ii2
                        :ARG1 (f / feel-01
                              :ARG0 (p / person
                                    :ARG0-of (a / autist-01))
                              :ARG1 (g / good-02
                                    :ARG2-of (h2 / have-degree-91
                                          :ARG1 f
                                          :ARG3 (m2 / more))))))
            :snt3 (p2 / possible-01
                  :polarity -
                  :ARG1 (ii3 / imagine-01
                        :ARG0 (y2 / you)
                        :ARG1 (o / often
                              :ARG2-of (h3 / have-degree-91
                                    :ARG1 (h4 / help-01
                                          :ARG0 (t2 / that)
                                          :ARG1 (o2 / out-06
                                                :ARG1 (ii4 / i)))
                                    :ARG3 (s2 / so)))))
            :snt4 (h5 / have-degree-91
                  :ARG1 (h6 / help-01
                        :ARG0 (t3 / that)
                        :ARG1 o2
                        :ARG1 (ii5 / i)))
            :ARG2 (o3 / often)
            :ARG3 (m3 / more)
            :ARG4 (l / like-02
                  :ARG0 ii5
                  :ARG1 (a2 / admit-01
                        :ARG0 ii5))))"
[deleted],"# ::snt [deleted]
(d / delete-01)"
"Okay, so consider literally any situation with a hostile actor misquoting you as well as failing to quote things properly? For example; you've got an intern who for some reason has English as their second language and not only did you spell one word incorrectly (sic) but the intern also made a bunch of spelling mistakes. How do I know what is you, and what is the fault of the editor?","# ::snt Okay, so consider literally any situation with a hostile actor misquoting you as well as failing to quote things properly? For example; you've got an intern who for some reason has English as their second language and not only did you spell one word incorrectly (sic) but the intern also made a bunch of spelling mistakes. How do I know what is you, and what is the fault of the editor?
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (c2 / consider-02
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (s / situation
                        :mod (a / any)
                        :mod (h / hostile)
                        :ARG0-of (m2 / misquote-01
                              :ARG1 y
                              :ARG2 (p / person
                                    :ARG0-of (a2 / act-01)))
                        :ARG0-of (f / fail-01
                              :ARG1 (q / quote-01
                                    :ARG0 p
                                    :ARG2 (t / thing)
                                    :manner (p2 / proper))))
                  :ARG1-of (o / okay-04))
            :snt2 (e / exemplify-01
                  :ARG0 (a3 / and
                        :op1 (h2 / have-03
                              :ARG0 (y2 / you)
                              :ARG1 (p3 / person
                                    :ARG0-of (ii / intern-01)
                                    :ARG0-of h2
                                    :ARG1 (l / language
                                          :name (n / name
                                                :op1 ""English"")
                                          :mod (l2 / language
                                                :ord (o2 / ordinal-entity
                                                      :value 2))))
                              :ARG0-of (s2 / spell-01
                                    :ARG1 (w / word
                                          :quant 1)
                                    :ARG1-of (c3 / correct-02
                                          :polarity -))))
                  :op2 (s3 / spell-01
                        :ARG0 p3
                        :ARG1 w
                        :quant 1)
                  :ARG1-of (c4 / correct-02
                        :polarity -))
            :op3 (m3 / mistake-02
                  :ARG0 p3
                  :ARG1 (s4 / spell-01)
                  :quant (b / bunch)
                  :mod (a4 / also)))
      :snt3 (a5 / and
            :op1 (k / know-01
                  :ARG0 (ii2 / i)
                  :ARG1 (a6 / amr-unknown))
            :op2 (f2 / fault-01
                  :ARG0 (e2 / editor)
                  :ARG1 p3
                  :ARG2 (a7 / amr-unknown))
            :ARG1-of o))"
[deleted],"# ::snt [deleted]
(d / delete-01)"
Did you even read what *they* wrote?,"# ::snt Did you even read what *they* wrote?
(r / read-01
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG1 (t / thing
            :ARG1-of (w / write-01
                  :ARG0 (t2 / they)))
      :mod (e / even))"
[deleted],"# ::snt [deleted]
(d / delete-01)"
Get over it dude,"# ::snt Get over it dude
(s / say-01
      :ARG1 (o / over-02
            :mode imperative
            :ARG1 (d / dude)
            :ARG2 (ii / it))
      :ARG2 d)"
Okay.,"# ::snt Okay.
(o / okay-04)"
Stop using a medical condition as an insult.,"# ::snt Stop using a medical condition as an insult.
(s / stop-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (u / use-01
            :ARG0 y
            :ARG1 (c / condition
                  :mod (m / medicine))
            :ARG2 (ii / insult-01
                  :ARG0 y)))"
"hey man, i think that ""r"" word slipped on you on accident. All your other language points are so well made.","# ::snt hey man, i think that ""r"" word slipped on you on accident. All your other language points are so well made.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (t / think-01
                  :ARG0 ii
                  :ARG1 (s2 / slip-02
                        :ARG1 (w / word
                              :mod (s3 / string-entity
                                    :value ""r""))
                        :ARG4 (y / you)
                        :time (a / accident)))
            :ARG2 (m2 / man)
            :mod (h / hey
                  :mode expressive))
      :snt2 (p / point-04
            :ARG0 y
            :mod (l / language)
            :mod (o / other)
            :mod (a2 / all)
            :ARG1-of (g / good-02
                  :degree (s4 / so))))"
"""Don't resort to calling people names just because you want to explain how their job works a little better.:","# ::snt ""Don't resort to calling people names just because you want to explain how their job works a little better.:
(r / resort-01
      :polarity -
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (c / call-01
            :ARG0 y
            :ARG1 (p / person)
            :ARG2 (n / name))
      :ARG1-of (c2 / cause-01
            :ARG0 (w / want-01
                  :ARG0 y
                  :ARG1 (e / explain-01
                        :ARG0 y
                        :ARG1 (h / have-manner-91
                              :ARG1 (w2 / work-09
                                    :ARG1 (j / job
                                          :poss p)
                                    :ARG1-of (h2 / have-degree-91
                                          :ARG2 (g / good-02
                                                :ARG1 w2)
                                          :ARG3 (m / more
                                                :quant (l / little))))))
                  :mod (j2 / just))))"
