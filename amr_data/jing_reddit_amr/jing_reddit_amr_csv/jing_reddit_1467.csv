comment,amr
Destroy evidence that she invited you for sex so she can claim rape later,"# ::snt Destroy evidence that she invited you for sex so she can claim rape later
(d / destroy-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (e / evidence-01
            :ARG1 (ii / invite-01
                  :ARG0 (s / she)
                  :ARG1 y
                  :ARG2 (s2 / sex-01
                        :ARG0 y)))
      :purpose (p / possible-01
            :ARG1 (c / claim-01
                  :ARG0 s
                  :ARG1 (r / rape-01
                        :ARG0 s)
                  :time (a / after
                        :op1 ii))))"
Refrain from calling the female gender that vulgar term.,"# ::snt Refrain from calling the female gender that vulgar term.
(r / refrain-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (c / call-01
            :ARG0 y
            :ARG1 (g / gender
                  :mod (f / female))
            :ARG2 (t / term
                  :mod (v / vulgar)
                  :mod (t2 / that))))"
I'd be more open to your perspective if you didn't use that kind of language.,"# ::snt I'd be more open to your perspective if you didn't use that kind of language.
(o / open-05
      :ARG1 (ii / i)
      :ARG2 (p / perspective
            :poss (y / you))
      :condition (u / use-01
            :polarity -
            :ARG0 y
            :ARG1 (l / language
                  :mod (k / kind
                        :mod (t / that))))
      :ARG2-of (h / have-degree-91
            :ARG1 ii
            :ARG3 (m / more)))"
"use of the C-word only diminishes your argument; if you left that out, you may even garner som sympathy!","# ::snt use of the C-word only diminishes your argument; if you left that out, you may even garner som sympathy!
(a / and
      :op1 (d / diminish-01
            :ARG0 (u / use-01
                  :ARG0 (y / you)
                  :ARG1 (w / word
                        :mod (s / string-entity
                              :value ""C-word"")))
            :ARG1 (a2 / argue-01
                  :ARG0 y)
            :mod (o / only))
      :op2 (p / possible-01
            :ARG1 (g / garner-01
                  :ARG0 y
                  :ARG1 (s2 / sympathy)
                  :mod (e / even))
            :condition (l / leave-out-03
                  :ARG0 y
                  :ARG1 (t / that))))"
