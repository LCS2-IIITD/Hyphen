comment,amr
[deleted],"# ::snt [deleted]
(d / delete-01)"
Consider using different language in the future that does not undermine your points with hatred,"# ::snt Consider using different language in the future that does not undermine your points with hatred
(c / consider-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (u / use-01
            :ARG0 y
            :ARG1 (l / language
                  :ARG1-of (d / differ-02))
            :time (f / future)
            :ARG0-of (u2 / undermine-01
                  :polarity -
                  :ARG1 (p / point-04
                        :ARG0 y)
                  :manner (h / hatred))))"
I'm pretty sure if someone attempts (or commits) suicide it doesn't change their sexuality.,"# ::snt I'm pretty sure if someone attempts (or commits) suicide it doesn't change their sexuality.
(s / sure-02
      :ARG0 (ii / i)
      :ARG1 (c / change-01
            :polarity -
            :ARG0 (o / or
                  :op1 (a / attempt-01
                        :ARG0 (s2 / someone)
                        :ARG1 (s3 / suicide))
                  :op2 (c2 / commit-02
                        :ARG0 s2
                        :ARG1 s3))
            :ARG1 (s4 / sexuality
                  :poss s2))
      :degree (p / pretty))"
"Says a lot that instead of making a detailed response all you can come up with is ""kys faggot""","# ::snt Says a lot that instead of making a detailed response all you can come up with is ""kys faggot""
(s / say-01
      :ARG1 (t / thing
            :quant (l / lot)
            :ARG1-of (c / come-up-11
                  :ARG0 (y / you)
                  :ARG1-of (p / possible-01)
                  :mod (a / all)
                  :ARG1-of (ii / instead-of-91
                        :ARG2 (t2 / thing
                              :ARG2-of (r / respond-01
                                    :ARG0 y)
                              :ARG1-of (d / detail-01))))
            :domain (f / faggot
                  :poss (p2 / person
                        :name (n / name
                              :op1 ""Kys"")))))"
