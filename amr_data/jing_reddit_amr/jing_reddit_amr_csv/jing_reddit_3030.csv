comment,amr
But somehow they still weren't smart enough to register the fking car...,"# ::snt But somehow they still weren't smart enough to register the fking car...
(c / contrast-01
      :ARG2 (s / smart-06
            :polarity -
            :ARG1 (t / they)
            :mod (s2 / still)
            :mod (s3 / somehow)
            :ARG2-of (h / have-degree-91
                  :ARG1 t
                  :ARG3 (e / enough)
                  :ARG6 (r / register-02
                        :ARG0 t
                        :ARG1 (c2 / car
                              :mod (f / fucking
                                    :mode expressive))))))"
No doubt it was the fourth passenger that owns the car. The only one without a PhD.,"# ::snt No doubt it was the fourth passenger that owns the car. The only one without a PhD.
(m / multi-sentence
      :snt1 (d / doubt-01
            :polarity -
            :ARG1 (o / own-01
                  :ARG0 (p / passenger
                        :ord (o2 / ordinal-entity
                              :value 4))
                  :ARG1 (c / car)))
      :snt2 (p2 / passenger
            :mod (o3 / only)
            :ARG0-of (h / have-03
                  :polarity -
                  :ARG1 (p3 / PhD))))"
It's the final test for getting your PhD,"# ::snt It's the final test for getting your PhD
(t / test-01
      :ARG2 (g / get-01
            :ARG0 (y / you)
            :ARG1 (d / doctorate
                  :mod (p / philosophy)))
      :mod (f / final)
      :domain (ii / it))"
"well she had TWO kids make it through the SCHOOL SYSTEM, I mean, c'mon! Are we splitting hairs here?","# ::snt well she had TWO kids make it through the SCHOOL SYSTEM, I mean, c'mon! Are we splitting hairs here?
(m / multi-sentence
      :snt1 (m2 / make-18
            :ARG0 (p / person
                  :quant 2
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (s / she)
                        :ARG2 (k / kid)))
            :ARG1 (s2 / system
                  :mod (s3 / school))
            :mod (w / well)
            :ARG1-of (m3 / mean-01
                  :ARG0 (ii / i)))
      :snt2 (c / come-on-25
            :mode imperative
            :ARG1 (y / you))
      :snt3 (s4 / split-01
            :ARG0 (w2 / we)
            :ARG1 (h2 / hair)
            :location (h3 / here)
            :polarity (a / amr-unknown)))"
"they should have stated they had a Costco rotisserie chicken in the car thats getting cold, probably would have worked better lol","# ::snt they should have stated they had a Costco rotisserie chicken in the car thats getting cold, probably would have worked better lol
(a / and
      :op1 (r / recommend-01
            :ARG1 (s / state-01
                  :ARG0 (t / they)
                  :ARG1 (h / have-03
                        :ARG0 t
                        :ARG1 (c / chicken
                              :mod (r2 / rotisserie)
                              :location (c2 / company
                                    :name (n / name
                                          :op1 ""Costco""))
                              :ARG1-of (c3 / cold-01))
                        :location (c4 / car))))
      :op2 (p / probable
            :domain (w / work-09
                  :ARG1 h
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (g / good-02
                              :ARG1 w)
                        :ARG3 (m / more)))
            :ARG2-of (l / laugh-01
                  :mode expressive
                  :ARG0 (ii / i)
                  :manner (l2 / loud))))"
I laughed.,"# ::snt I laughed.
(l / laugh-01
      :ARG0 (ii / i))"
"PHD students that don't know how to carry insurance, register a car, or have visible plates.","# ::snt PHD students that don't know how to carry insurance, register a car, or have visible plates.
(p / person
      :ARG0-of (s / study-01
            :location (s2 / school
                  :name (n / name
                        :op1 ""PHD"")))
      :ARG0-of (k / know-01
            :polarity -
            :ARG1 (o / or
                  :op1 (c / carry-01
                        :ARG0 p
                        :ARG1 (ii / insure-02))
                  :op2 (r / register-02
                        :ARG0 p
                        :ARG1 (c2 / car))
                  :op3 (h / have-03
                        :ARG0 p
                        :ARG1 (p2 / plate
                              :ARG1-of (s3 / see-01
                                    :ARG1-of (p3 / possible-01)))))))"
PHD!!!,"# ::snt PHD!!!
(p / pHD
      :mode expressive)"
"If this how she is with cops imagine how this piece of trash treats retail worker, waiters/waitresses, and her own family.","# ::snt If this how she is with cops imagine how this piece of trash treats retail worker, waiters/waitresses, and her own family.
(ii / imagine-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / treat-01
            :ARG0 (p / piece
                  :consist-of (t2 / trash)
                  :mod (t3 / this))
            :ARG1 (a / and
                  :op1 (p2 / person
                        :ARG0-of (w / work-01
                              :ARG2 (r / retail-01)))
                  :op2 (s / slash
                        :op1 (p3 / person
                              :ARG0-of (w2 / wait-01))
                        :op2 (p4 / person
                              :ARG0-of w2)))
            :op3 (f / family
                  :poss p2))
      :condition (t4 / this
            :manner-of (h / have-03
                  :ARG0 (s2 / she)
                  :ARG1 (c / cop))))"
"oh christ, i bet her husband wants to kill himself every second","# ::snt oh christ, i bet her husband wants to kill himself every second
(b / bet-01
      :ARG0 (ii / i)
      :ARG2 (w / want-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (s / she)
                        :ARG2 (h2 / husband)))
            :ARG1 (k / kill-01
                  :ARG0 p
                  :ARG1 p
                  :frequency (r / rate-entity-91
                        :ARG3 (t / temporal-quantity
                              :quant 1
                              :unit (s2 / second)))))
      :mod (o / oh
            :mode expressive
            :mod (c / christ)))"
Assuming she is still married. Zing.,"# ::snt Assuming she is still married. Zing.
(m / multi-sentence
      :snt1 (a / assume-02
            :ARG1 (m2 / marry-01
                  :ARG1 (s / she)
                  :mod (s2 / still)))
      :snt2 (z / zing))"
Do you know who I am... ?,"# ::snt Do you know who I am... ?
(k / know-01
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :polarity (a / amr-unknown))"
Manager. .,"# ::snt Manager. .
(p / person
      :ARG0-of (m / manage-01))"
