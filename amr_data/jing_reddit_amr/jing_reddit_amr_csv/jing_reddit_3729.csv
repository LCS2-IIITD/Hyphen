comment,amr
"Pretend I'm a sexual predator. I can log on to this app, contact a woman, and she will tell me here train stop and I know she will be alone because I'm supposed to be from the app. Sounds safe","# ::snt Pretend I'm a sexual predator. I can log on to this app, contact a woman, and she will tell me here train stop and I know she will be alone because I'm supposed to be from the app. Sounds safe
(m / multi-sentence
      :snt1 (p / pretend-01
            :ARG0 (ii / i)
            :ARG1 (p2 / person
                  :ARG0-of (p3 / prey-01
                        :ARG1 (s / sex-01))
                  :domain ii))
      :snt2 (a / and
            :op1 (p4 / possible-01
                  :ARG1 (l / log-on-02
                        :ARG0 (ii2 / i)
                        :ARG1 (a2 / app)))
            :op2 (c / contact-01
                  :ARG0 ii2
                  :ARG1 (w / woman))
            :op3 (t / tell-01
                  :ARG0 w
                  :ARG1 (a3 / alone
                        :domain w
                        :location (h / here))
                  :ARG2 ii2
                  :ARG1-of (c2 / cause-01
                        :ARG0 (s2 / suppose-02
                              :ARG1 ii2
                              :ARG2 (b / be-from-91
                                    :ARG1 ii2
                                    :ARG2 (a4 / app)))))
            :op4 (k / know-01
                  :ARG0 ii2
                  :ARG1 a3))
      :snt3 (s3 / sound-01
            :ARG1 (s4 / safe-01)))"
Great idea! Heres $3k.,"# ::snt Great idea! Heres $3k.
(m / multi-sentence
      :snt1 (ii / idea
            :mod (g / great))
      :snt2 (c / cost-01
            :ARG1 (e / event)
            :ARG2 (m2 / monetary-quantity
                  :quant 3000
                  :unit (d / dollar))))"
Do I actually need to make the app?,"# ::snt Do I actually need to make the app?
(n / need-01
      :polarity (a / amr-unknown)
      :ARG0 (ii / i)
      :ARG1 (m / make-01
            :ARG0 ii
            :ARG1 (a2 / app))
      :ARG1-of (a3 / actual-02))"
Just fork their app!,"# ::snt Just fork their app!
(f / fork-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / app
            :poss (t / they))
      :mod (j / just))"
"Ah, sweet, thanks!","# ::snt Ah, sweet, thanks!
(a / and
      :op1 (s / sweet-03)
      :op2 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you))
      :mod (a2 / ah
            :mode expressive))"
upvotes Nice.,"# ::snt upvotes Nice.
(v / vote-01
      :ARG1 (t / thing
            :ARG1-of (n / nice-01))
      :direction (u / up))"
