# ::snt Translating from English to English shouldn't cause any problems.
# ::tokens ["Translating", "from", "English", "to", "English", "should", "n't", "cause", "any", "problems", "."]
# ::lemmas ["translate", "from", "English", "to", "English", "should", "not", "cause", "any", "problem", "."]
(c1-5 / recommend-01
      :ARG1 (c1-2 / cause-01
                  :ARG0 (c1-4 / translate-01
                              :ARG2 (c1-6 / person
                                          :mod (c1-0 / country
                                                     :name (c1-7 / name
                                                                 :op1 "England"))
                                          :ARG3-of c1-4))
                  :ARG1 (c1-3 / problem
                              :mod (c1-1 / any))
                  :polarity -))

# ::snt It's just the beta test. Soon they will be translating from English to English (Woke)
# ::tokens ["It", "'s", "just", "the", "beta", "test", ".", "Soon", "they", "will", "be", "translating", "from", "English", "to", "English", "(", "Woke", ")"]
# ::lemmas ["it", "be", "just", "the", "beta", "test", ".", "soon", "they", "will", "be", "translate", "from", "English", "to", "English", "(", "Woke", ")"]
(c2-8 / multi-sentence
      :snt1 (c2-2 / test-01
                  :mod (c2-5 / beta)
                  :mod (c2-6 / just))
      :snt2 (c2-1 / translate-01
                  :ARG0 (c2-10 / they)
                  :ARG2 (c2-3 / language
                              :name (c2-9 / name
                                          :op1 "English")
                              :ARG3-of c2-1)
                  :time (c2-0 / soon)
                  :ARG1-of (c2-4 / laugh-01
                                 :ARG0 (c2-7 / i)
                                 :mode expressive)))

# ::snt Whos english are they using? Normal people's or NPC english?
# ::tokens ["Who", "s", "english", "are", "they", "using", "?", "Normal", "people", "'s", "or", "NPC", "english", "?"]
# ::lemmas ["who", "s", "english", "be", "they", "use", "?", "normal", "people", "'s", "or", "NPC", "english", "?"]
(c3-11 / multi-sentence
       :snt1 (c3-2 / use-01
                   :ARG0 (c3-5 / they)
                   :ARG1 (c3-7 / language
                               :name (c3-12 / name
                                            :op1 "English")
                               :domain (c3-0 / amr-unknown)))
       :snt2 (c3-3 / or
                   :op1 (c3-10 / person
                               :ARG1-of (c3-6 / normal-02))
                   :op2 (c3-4 / person
                              :ARG0-of (c3-1 / have-org-role-91
                                             :ARG1 (c3-9 / government-organization
                                                         :name (c3-8 / name
                                                                     :op1 "NPC"))))
                   :polarity (c3-13 / amr-unknown)))

# ::snt That would be true if that's what this showcases. Clearly this bot is translating from wrongspeak to English.
# ::tokens ["That", "would", "be", "true", "if", "that", "'s", "what", "this", "showcases", ".", "Clearly", "this", "bot", "is", "translating", "from", "wrongspeak", "to", "English", "."]
# ::lemmas ["that", "would", "be", "true", "if", "that", "be", "what", "this", "showcase", ".", "clearly", "this", "bot", "be", "translate", "from", "wrongspeak", "to", "English", "."]
(c4-11 / multi-sentence
       :snt1 (c4-7 / true-01
                   :ARG1 (c4-4 / that)
                   :condition (c4-0 / showcase-01
                                    :ARG0 (c4-13 / this)
                                    :ARG1 (c4-5 / that)))
       :snt2 (c4-1 / translate-01
                   :ARG0 (c4-9 / bot
                               :mod (c4-6 / this))
                   :ARG2 (c4-10 / speak-01
                                :ARG1-of (c4-3 / wrong-04))
                   :ARG3 (c4-8 / language
                               :name (c4-12 / name
                                            :op1 "English"))
                   :ARG1-of (c4-2 / clear-06)))

# ::snt Nononono, Translating American to English won't cause problems.
# ::tokens ["Nononono", ",", "Translating", "American", "to", "English", "wo", "n't", "cause", "problems", "."]
# ::lemmas ["Nononono", ",", "translate", "American", "to", "English", "will", "not", "cause", "problem", "."]
(c5-0 / say-01
      :ARG0 (c5-10 / i)
      :ARG1 (c5-2 / cause-01
                  :ARG0 (c5-7 / translate-01
                              :ARG1 (c5-9 / person
                                          :mod (c5-1 / country
                                                     :name (c5-11 / name
                                                                  :op1 "America")))
                              :ARG2 (c5-6 / person
                                          :mod c5-1
                                          :name (c5-8 / name
                                                      :op1 "England")))
                  :polarity -)
      :ARG1 (c5-4 / problem)
      :ARG2 (c5-3 / person
                  :name (c5-5 / name
                              :op1 "Nononono")))

# ::snt I'm not talking about translating MURICAN to Britbong, eh.
# ::tokens ["I", "'m", "not", "talking", "about", "translating", "MURICAN", "to", "Britbong", ",", "eh", "."]
# ::lemmas ["i", "be", "not", "talk", "about", "translate", "murican", "to", "Britbong", ",", "eh", "."]
(c6-1 / talk-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-0 / translate-01
                  :ARG1 (c6-3 / language
                              :name (c6-6 / name
                                          :op1 "MURICAN"))
                  :ARG2 (c6-4 / language
                              :name (c6-2 / name
                                          :op1 "Britbong")))
      :mod (c6-7 / eh
                 :mode expressive)
      :polarity -)

# ::snt ["Hope you know a lot about towing trailers......"]()
# ::tokens ["[", "\"", "Hope", "you", "know", "a", "lot", "about", "towing", "trailers", "......", "\"", "]", "(", ")"]
# ::lemmas ["[", "\"", "hope", "you", "know", "a", "lot", "about", "tow", "trailer", "......", "\"", "]", "(", ")"]
(c7-1 / hope-01
      :ARG0 (c7-4 / i)
      :ARG1 (c7-5 / know-01
                  :ARG0 (c7-6 / you)
                  :ARG1 (c7-3 / lot
                              :topic (c7-2 / trailer
                                           :ARG0-of (c7-0 / tow-01)))))

# ::snt Probably the result of diversity hires programming shit
# ::tokens ["Probably", "the", "result", "of", "diversity", "hires", "programming", "shit"]
# ::lemmas ["probably", "the", "result", "of", "diversity", "hire", "program", "shit"]
(c8-5 / probable
      :domain (c8-4 / result-01
                    :ARG1 (c8-2 / hire-01
                                :ARG1 (c8-0 / diversity))
                    :ARG2 (c8-1 / shit
                                :mod (c8-3 / program-01))))

# ::snt This slur should not be conflated to mean "inept" or "incapable." The word used has real consequences and harm to a group of people.
# ::tokens ["This", "slur", "should", "not", "be", "conflated", "to", "mean", "\"", "inept", "\"", "or", "\"", "incapable", ".", "\"", "The", "word", "used", "has", "real", "consequences", "and", "harm", "to", "a", "group", "of", "people", "."]
# ::lemmas ["this", "slur", "should", "not", "be", "conflate", "to", "mean", "\"", "inept", "\"", "or", "\"", "incapable", ".", "\"", "the", "word", "use", "have", "real", "consequence", "and", "harm", "to", "a", "group", "of", "people", "."]
(c9-16 / multi-sentence
       :snt1 (c9-12 / recommend-01
                    :ARG1 (c9-3 / conflate-01
                                :ARG1 (c9-0 / slur
                                            :mod (c9-11 / this))
                                :ARG2 (c9-4 / mean-01
                                            :ARG1 c9-0
                                            :ARG2 (c9-9 / or
                                                        :op1 (c9-15 / intelligent-01
                                                                    :polarity -)
                                                        :op2 (c9-13 / possible-01
                                                                    :ARG1 (c9-2 / apable-02)
                                                                    :polarity -))))
                    :polarity -)
       :snt2 (c9-17 / and
                    :op1 (c9-1 / consequence-03
                               :ARG1 (c9-5 / word
                                           :ARG1-of (c9-7 / use-01))
                               :ARG1-of (c9-8 / real-04))
                    :op2 (c9-6 / harm-01
                               :ARG1 (c9-14 / group
                                            :consist-of (c9-10 / person)))))

# ::snt YouTube shouldn't be able to edit my comments without me checking them first. That is how false allegations start.
# ::tokens ["YouTube", "should", "n't", "be", "able", "to", "edit", "my", "comments", "without", "me", "checking", "them", "first", ".", "That", "is", "how", "false", "allegations", "start", "."]
# ::lemmas ["YouTube", "should", "not", "be", "able", "to", "edit", "my", "comment", "without", "i", "check", "they", "first", ".", "that", "be", "how", "false", "allegation", "start", "."]
(c10-12 / multi-sentence
        :snt1 (c10-10 / recommend-01
                      :ARG1 (c10-11 / possible-01
                                    :ARG1 (c10-14 / edit-01
                                                  :ARG0 (c10-8 / publication
                                                               :name (c10-13 / name
                                                                             :op1 "YouTube"))
                                                  :ARG1 (c10-9 / thing
                                                               :ARG1-of (c10-4 / comment-01
                                                                               :ARG0 (c10-5 / i)))
                                                  :manner (c10-0 / check-01
                                                                 :ARG0 c10-5
                                                                 :ARG1 c10-9
                                                                 :time (c10-3 / first)
                                                                 :polarity -)))
                      :polarity -)
        :snt2 (c10-1 / start-01
                     :ARG1 (c10-2 / allege-01
                                  :mod (c10-7 / false))
                     :manner (c10-6 / that)))

# ::snt The term used here is very offensive towards the disabled community; there are better, less offensive words that can be used instead.
# ::tokens ["The", "term", "used", "here", "is", "very", "offensive", "towards", "the", "disabled", "community", ";", "there", "are", "better", ",", "less", "offensive", "words", "that", "can", "be", "used", "instead", "."]
# ::lemmas ["the", "term", "use", "here", "be", "very", "offensive", "towards", "the", "disabled", "community", ";", "there", "be", "well", ",", "less", "offensive", "word", "that", "can", "be", "use", "instead", "."]
(c11-2 / and
       :op1 (c11-11 / offend-01
                    :ARG0 (c11-12 / term
                                  :ARG1-of (c11-9 / use-01
                                                  :location (c11-7 / here)))
                    :ARG1 (c11-3 / community
                                 :ARG1-of (c11-0 / disable-01))
                    :degree (c11-10 / very))
       :op2 (c11-4 / word
                   :ARG1-of (c11-15 / have-degree-91
                                    :ARG2 (c11-14 / good-02
                                                  :ARG1 c11-4)
                                    :ARG3 (c11-17 / more))
                   :ARG1-of (c11-1 / have-degree-91
                                   :ARG2 (c11-8 / offend-01
                                                :ARG0 c11-4)
                                   :ARG3 (c11-13 / less))
                   :ARG1-of (c11-6 / use-01
                                   :ARG1-of (c11-16 / possible-01)
                                   :ARG1-of (c11-5 / instead-of-91))))
