# ::snt Surely not. Waleed Aly promised us there is no African gang problem.
# ::tokens ["Surely", "not", ".", "Waleed", "Aly", "promised", "us", "there", "is", "no", "African", "gang", "problem", "."]
# ::lemmas ["surely", "not", ".", "Waleed", "Aly", "promise", "we", "there", "be", "no", "African", "gang", "problem", "."]
(c1-9 / multi-sentence
      :snt1 (c1-4 / have-polarity-91
                  :ARG1-of (c1-0 / sure-02)
                  :ARG2 -)
      :snt2 (c1-8 / promise-01
                  :ARG0 (c1-5 / person
                              :name (c1-10 / name
                                           :op1 "Waleed"
                                           :op2 "Aly"))
                  :ARG1 (c1-2 / we)
                  :ARG2 (c1-3 / problem
                              :topic (c1-7 / gang)
                              :mod (c1-1 / continent
                                         :name (c1-6 / name
                                                     :op1 "Africa"))
                              :polarity -)))

# ::snt Fuck I hate that cunt
# ::tokens ["Fuck", "I", "hate", "that", "cunt"]
# ::lemmas ["fuck", "i", "hate", "that", "cunt"]
(c2-2 / hate-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-1 / cunt
                  :mod (c2-3 / that))
      :mod (c2-0 / fuck
                 :mode expressive))

# ::snt How does he even get on television? Such a sanctimonious cunt. Never met anyone who liked him
# ::tokens ["How", "does", "he", "even", "get", "on", "television", "?", "Such", "a", "sanctimonious", "cunt", ".", "Never", "met", "anyone", "who", "liked", "him"]
# ::lemmas ["how", "do", "he", "even", "get", "on", "television", "?", "such", "a", "sanctimonious", "cunt", ".", "never", "meet", "anyone", "who", "like", "he"]
(c3-12 / multi-sentence
       :snt1 (c3-9 / get-05
                   :ARG1 (c3-4 / he)
                   :ARG2 (c3-7 / television)
                   :manner (c3-1 / amr-unknown)
                   :mod (c3-14 / even))
       :snt2 (c3-2 / cunt
                   :mod (c3-0 / sanctimonious
                              :degree (c3-10 / such)))
       :snt3 (c3-3 / meet-02
                   :ARG0 (c3-11 / i)
                   :ARG1 (c3-13 / anyone
                                :ARG0-of (c3-8 / like-01
                                               :ARG1 (c3-6 / he)))
                   :time (c3-5 / ever)
                   :polarity -))

# ::snt That show was trash before him, that Charlie fuck was as bad.
# ::tokens ["That", "show", "was", "trash", "before", "him", ",", "that", "Charlie", "fuck", "was", "as", "bad", "."]
# ::lemmas ["that", "show", "be", "trash", "before", "he", ",", "that", "Charlie", "fuck", "be", "as", "bad", "."]
(c4-2 / and
      :op1 (c4-6 / trash
                 :domain (c4-0 / show
                               :mod (c4-4 / that))
                 :time (c4-7 / before
                             :op1 (c4-5 / he)))
      :op2 (c4-8 / have-degree-91
                 :ARG1 (c4-9 / person
                             :name (c4-10 / name
                                          :op1 "Charlie")
                             :mod (c4-3 / fuck
                                        :mode expressive))
                 :ARG2 (c4-1 / bad-07
                             :ARG1 c4-9)
                 :ARG3 (c4-11 / equal)))

# ::snt He must be so at home working at the ABC now. That's if his show hasn't been canceled yet.
# ::tokens ["He", "must", "be", "so", "at", "home", "working", "at", "the", "ABC", "now", ".", "That", "'s", "if", "his", "show", "has", "n't", "been", "canceled", "yet", "."]
# ::lemmas ["he", "must", "be", "so", "at", "home", "work", "at", "the", "ABC", "now", ".", "that", "be", "if", "his", "show", "have", "not", "be", "cancel", "yet", "."]
(c5-12 / multi-sentence
       :snt1 (c5-11 / infer-01
                    :ARG1 (c5-9 / be-located-at-91
                                :ARG1 (c5-4 / he)
                                :ARG2 (c5-10 / home)
                                :manner (c5-3 / work-01
                                              :ARG0 c5-4
                                              :ARG2 (c5-8 / publication
                                                          :name (c5-13 / name
                                                                       :op1 "ABC")))
                                :time (c5-7 / now)))
       :snt2 (c5-1 / have-condition-91
                   :ARG1 (c5-6 / that)
                   :ARG2 (c5-2 / cancel-01
                               :ARG1 (c5-0 / show-04
                                           :ARG0 (c5-5 / he))
                               :time (c5-14 / yet)
                               :polarity -)))

# ::snt Same and his wife
# ::tokens ["Same", "and", "his", "wife"]
# ::lemmas ["same", "and", "his", "wife"]
(c6-1 / and
      :op1 (c6-0 / same-01)
      :op2 (c6-5 / person
                 :ARG0-of (c6-3 / have-rel-role-91
                                :ARG1 (c6-4 / he)
                                :ARG2 (c6-2 / wife))))

# ::snt People who want others to think they progressive and non racists
# ::tokens ["People", "who", "want", "others", "to", "think", "they", "progressive", "and", "non", "racists"]
# ::lemmas ["people", "who", "want", "other", "to", "think", "they", "progressive", "and", "non", "racist"]
(c7-7 / person
      :ARG0-of (c7-1 / want-01
                     :ARG1 (c7-5 / think-01
                                 :ARG0 (c7-4 / person
                                             :mod (c7-3 / other))
                                 :ARG1 (c7-0 / and
                                             :op1 (c7-2 / progressive-02
                                                        :ARG1 c7-7)
                                             :op2 (c7-6 / racist
                                                        :domain c7-7
                                                        :polarity -)))))
