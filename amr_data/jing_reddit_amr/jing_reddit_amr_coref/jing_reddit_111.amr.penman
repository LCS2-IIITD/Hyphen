# ::snt Well, they've had years where the GOP legally couldn't go after voter fraud.
# ::tokens ["Well", ",", "they", "'ve", "had", "years", "where", "the", "GOP", "legally", "could", "n't", "go", "after", "voter", "fraud", "."]
# ::lemmas ["well", ",", "they", "'ve", "have", "years", "where", "the", "GOP", "legally", "could", "not", "go", "after", "voter", "fraud", "."]
(c1-4 / have-03
      :ARG0 (c1-7 / they)
      :ARG1 (c1-11 / multiple
                   :op1 (c1-2 / temporal-quantity
                              :unit (c1-13 / year)
                              :quant 1))
      :time (c1-10 / possible-01
                   :ARG1 (c1-9 / go-03
                               :ARG0 (c1-6 / political-party
                                           :name (c1-12 / name
                                                        :op1 "GOP"))
                               :ARG1 (c1-0 / defraud-01
                                           :ARG0 (c1-3 / person
                                                       :ARG0-of (c1-5 / vote-01)))
                               :manner (c1-8 / law))
                   :polarity -)
      :mod (c1-1 / well))

# ::snt I would really love to know what the Judas that agreed to such a thing actually received.
# ::tokens ["I", "would", "really", "love", "to", "know", "what", "the", "Judas", "that", "agreed", "to", "such", "a", "thing", "actually", "received", "."]
# ::lemmas ["i", "would", "really", "love", "to", "know", "what", "the", "Judas", "that", "agree", "to", "such", "a", "thing", "actually", "receive", "."]
(c2-7 / love-02
      :ARG0 (c2-10 / i)
      :ARG1 (c2-11 / know-01
                   :ARG0 c2-10
                   :ARG1 (c2-5 / thing
                               :ARG1-of (c2-6 / receive-01
                                              :ARG0 (c2-8 / person
                                                          :mod (c2-3 / religious-group
                                                                     :name (c2-4 / name
                                                                                 :op1 "Judaism"))
                                                          :ARG0-of (c2-1 / agree-01
                                                                         :ARG1 (c2-2 / thing
                                                                                     :mod (c2-0 / such))))
                                              :ARG1-of (c2-12 / actual-02))))
      :degree (c2-9 / really))

# ::snt I dont get that either. If youre going to cheat, make it seem somewhat realistic.
# ::tokens ["I", "do", "nt", "get", "that", "either", ".", "If", "you", "re", "going", "to", "cheat", ",", "make", "it", "seem", "somewhat", "realistic", "."]
# ::lemmas ["i", "do", "not", "get", "that", "either", ".", "if", "you", "re", "go", "to", "cheat", ",", "make", "it", "seem", "somewhat", "realistic", "."]
(c3-9 / multi-sentence
      :snt1 (c3-6 / get-01
                  :ARG0 (c3-8 / i)
                  :ARG1 (c3-4 / that
                              :mod (c3-11 / either))
                  :polarity -)
      :snt2 (c3-1 / make-02
                  :ARG0 (c3-10 / you)
                  :ARG1 (c3-0 / seem-01
                              :ARG1 (c3-5 / realistic-03
                                          :ARG1 (c3-3 / it)
                                          :degree (c3-7 / somewhat)))
                  :condition (c3-2 / cheat-02
                                   :ARG0 c3-10)
                  :mode imperative))

# ::snt Their problem is that anyone with statistics knowledge could show the unusual slant to added votes. Their tactics only work because no one stops them, so they don't have to make it seem reasonable.
# ::tokens ["Their", "problem", "is", "that", "anyone", "with", "statistics", "knowledge", "could", "show", "the", "unusual", "slant", "to", "added", "votes", ".", "Their", "tactics", "only", "work", "because", "no", "one", "stops", "them", ",", "so", "they", "do", "n't", "have", "to", "make", "it", "seem", "reasonable", "."]
# ::lemmas ["their", "problem", "be", "that", "anyone", "with", "statistic", "knowledge", "could", "show", "the", "unusual", "slant", "to", "add", "vote", ".", "their", "tactic", "only", "work", "because", "no", "one", "stop", "they", ",", "so", "they", "do", "not", "have", "to", "make", "it", "seem", "reasonable", "."]
(c4-9 / multi-sentence
      :snt1 (c4-20 / problem
                   :poss (c4-7 / they)
                   :domain (c4-18 / possible-01
                                  :ARG1 (c4-12 / show-01
                                               :ARG0 (c4-14 / anyone
                                                            :ARG0-of (c4-21 / know-01
                                                                            :ARG1 (c4-19 / statistics)))
                                               :ARG1 (c4-13 / slant
                                                            :mod (c4-17 / usual
                                                                        :polarity -))
                                               :ARG2 (c4-5 / vote-01
                                                           :ARG1-of (c4-11 / add-02)))))
      :snt2 (c4-2 / cause-01
                  :ARG0 (c4-3 / work-09
                              :ARG1 (c4-4 / tactic
                                          :poss (c4-10 / they))
                              :mod (c4-6 / only))
                  :ARG1 (c4-16 / obligate-01
                               :ARG1 c4-10
                               :ARG2 (c4-15 / make-02
                                            :ARG0 c4-10
                                            :ARG1 (c4-1 / seem-01
                                                        :ARG1 (c4-8 / reasonable-02
                                                                    :ARG1 (c4-0 / it))))
                               :polarity -)))

# ::snt No-one stopped them, because we legally couldnt. Now we can, and we will.
# ::tokens ["No", "-", "one", "stopped", "them", ",", "because", "we", "legally", "could", "nt", ".", "Now", "we", "can", ",", "and", "we", "will", "."]
# ::lemmas ["no", "-", "one", "stop", "they", ",", "because", "we", "legally", "could", "not", ".", "now", "we", "can", ",", "and", "we", "will", "."]
(c5-10 / multi-sentence
       :snt1 (c5-0 / stop-01
                   :ARG0 (c5-11 / no-one)
                   :ARG1 (c5-6 / they)
                   :ARG1-of (c5-3 / cause-01
                                  :ARG0 (c5-9 / possible-01
                                              :ARG1 c5-0
                                              :ARG1-of (c5-8 / legal-02)
                                              :polarity -)))
       :snt2 (c5-2 / and
                   :op1 (c5-5 / possible-01
                              :ARG1 (c5-4 / we)
                              :time (c5-7 / now))
                   :op2 (c5-1 / do-02
                              :ARG0 c5-4)))

# ::snt Too much ground to make up. If they held their traditional balance they'd have to come up with s of thousands of more ballots than they already have.
# ::tokens ["Too", "much", "ground", "to", "make", "up", ".", "If", "they", "held", "their", "traditional", "balance", "they", "'d", "have", "to", "come", "up", "with", "s", "of", "thousands", "of", "more", "ballots", "than", "they", "already", "have", "."]
# ::lemmas ["too", "much", "ground", "to", "make", "up", ".", "if", "they", "hold", "their", "traditional", "balance", "they", "would", "have", "to", "come", "up", "with", "s", "of", "thousands", "of", "more", "ballot", "than", "they", "already", "have", "."]
(c6-10 / multi-sentence
       :snt1 (c6-18 / have-quant-91
                    :ARG1 (c6-8 / ground)
                    :ARG2 (c6-17 / much)
                    :ARG3 (c6-7 / too)
                    :ARG6 (c6-14 / make-up-10
                                 :ARG1 c6-8))
       :snt2 (c6-0 / have-condition-91
                   :ARG1 (c6-5 / obligate-01
                               :ARG1 (c6-3 / they)
                               :ARG2 (c6-2 / come-up-11
                                           :ARG0 c6-3
                                           :ARG1 (c6-19 / ballot
                                                        :ARG1-of (c6-1 / have-quant-91
                                                                       :ARG3 (c6-9 / more
                                                                                   :quant (c6-11 / multiple
                                                                                                 :op1 1000))
                                                                       :ARG4 (c6-15 / ballot
                                                                                    :ARG1-of (c6-6 / have-03
                                                                                                   :ARG0 c6-3
                                                                                                   :time (c6-16 / already)))))))
                   :ARG2 (c6-4 / hold-01
                               :ARG0 c6-3
                               :ARG1 (c6-13 / balance
                                            :poss c6-3
                                            :mod (c6-12 / traditional)))))

# ::snt exactly. they'd have had to find nearly half a million ballots if they did /40 o /45
# ::tokens ["exactly", ".", "they", "'d", "have", "had", "to", "find", "nearly", "half", "a", "million", "ballots", "if", "they", "did", "/40", "o", "/45"]
# ::lemmas ["exactly", ".", "they", "would", "have", "have", "to", "find", "nearly", "half", "a", "million", "ballot", "if", "they", "do", "/40", "o", "/45"]
(c7-7 / multi-sentence
      :snt1 (c7-10 / exact)
      :snt2 (c7-4 / obligate-01
                  :ARG1 (c7-5 / they)
                  :ARG2 (c7-2 / find-01
                              :ARG0 c7-5
                              :ARG1 (c7-6 / ballot
                                          :quant (c7-8 / nearly
                                                       :op1 500000)))
                  :condition (c7-0 / do-02
                                   :ARG0 c7-5
                                   :ARG1 (c7-1 / slash
                                               :op1 (c7-3 / thing
                                                          :quant 40)
                                               :op2 (c7-9 / thing
                                                          :quant 45)))))

# ::snt Fact is they needed too many votes to play it smart. If you are k votes behind and you go /40 to hide it, you're going to have to "find" over votes to close the gap. if you start finding more votes than there are registered voters that's going to be a problem. far easier to find votes of /10 split. And that's why it happened.
# ::tokens ["Fact", "is", "they", "needed", "too", "many", "votes", "to", "play", "it", "smart", ".", "If", "you", "are", "k", "votes", "behind", "and", "you", "go", "/40", "to", "hide", "it", ",", "you", "'re", "going", "to", "have", "to", "\"", "find", "\"", "over", "votes", "to", "close", "the", "gap", ".", "if", "you", "start", "finding", "more", "votes", "than", "there", "are", "registered", "voters", "that", "'s", "going", "to", "be", "a", "problem", ".", "far", "easier", "to", "find", "votes", "of", "/10", "split", ".", "And", "that", "'s", "why", "it", "happened", "."]
# ::lemmas ["fact", "be", "they", "need", "too", "many", "vote", "to", "play", "it", "smart", ".", "if", "you", "be", "k", "vote", "behind", "and", "you", "go", "/40", "to", "hide", "it", ",", "you", "be", "go", "to", "have", "to", "\"", "find", "\"", "over", "vote", "to", "close", "the", "gap", ".", "if", "you", "start", "find", "more", "vote", "than", "there", "be", "register", "voter", "that", "be", "go", "to", "be", "a", "problem", ".", "far", "easy", "to", "find", "vote", "of", "/10", "split", ".", "and", "that", "be", "why", "it", "happen", "."]
(c8-19 / multi-sentence
       :snt1 (c8-35 / fact
                    :domain (c8-20 / need-01
                                   :ARG0 (c8-14 / they)
                                   :ARG1 (c8-11 / vote
                                                :ARG1-of (c8-38 / have-quant-91
                                                                :ARG2 (c8-36 / many)
                                                                :ARG3 (c8-9 / too)
                                                                :ARG6 (c8-42 / play-01
                                                                             :ARG0 c8-14
                                                                             :ARG1 (c8-4 / it)
                                                                             :manner (c8-24 / smart-06))))))
       :snt2 (c8-12 / obligate-01
                    :ARG1 (c8-32 / you)
                    :ARG2 (c8-29 / find-01
                                 :ARG0 c8-32
                                 :ARG1 (c8-37 / vote
                                              :ARG1-of (c8-3 / have-quant-91
                                                             :ARG3 (c8-28 / more)
                                                             :ARG4 (c8-27 / vote
                                                                          :ARG1-of (c8-41 / split-01)))))
                    :condition (c8-34 / and
                                      :op1 (c8-40 / behind
                                                  :domain (c8-33 / you)
                                                  :mod (c8-2 / vote
                                                             :mod (c8-43 / k)))
                                      :op2 (c8-16 / go-01
                                                  :ARG1 c8-33
                                                  :ARG4 (c8-26 / slash
                                                               :op1 40)
                                                  :purpose (c8-6 / hide-01
                                                                 :ARG0 c8-33
                                                                 :ARG1 c8-4)))
                    :snt3 (c8-39 / problem
                                 :domain (c8-5 / start-01
                                               :ARG0 (c8-1 / you)
                                               :ARG1 (c8-30 / find-01
                                                            :ARG0 c8-1
                                                            :ARG1 (c8-31 / vote
                                                                         :ARG1-of (c8-13 / have-quant-91
                                                                                         :ARG3 (c8-17 / more)
                                                                                         :ARG4 (c8-7 / vote
                                                                                                     :ARG1-of (c8-15 / register-02))))))
                                 :condition (c8-10 / have-degree-91
                                                   :ARG1 (c8-0 / find-01
                                                               :ARG0 c8-1
                                                               :ARG1 (c8-18 / vote
                                                                            :ARG1-of c8-41)))
                                 :ARG2 (c8-23 / easy-05
                                              :ARG1 c8-0)
                                 :ARG3 (c8-21 / more
                                              :quant (c8-25 / far)))
                    :snt4 c8-34
                    :op2 (c8-8 / cause-01
                               :ARG0 (c8-22 / that)
                               :ARG1 c8-4)))

# ::snt They'd only need K to get K on a D/40R split.
# ::tokens ["They", "'d", "only", "need", "K", "to", "get", "K", "on", "a", "D/40R", "split", "."]
# ::lemmas ["they", "would", "only", "need", "K", "to", "get", "K", "on", "a", "D/40R", "split", "."]
(c9-6 / need-01
      :ARG0 (c9-3 / they)
      :ARG1 (c9-1 / thing
                  :name (c9-4 / name
                              :op1 "K"))
      :mod (c9-2 / only)
      :purpose (c9-0 / split-01
                     :ARG0 c9-3
                     :ARG1 (c9-5 / product
                                 :name c9-4
                                 :op1 "D/40R")))

# ::snt They do, it goes about /30.
# ::tokens ["They", "do", ",", "it", "goes", "about", "/30", "."]
# ::lemmas ["they", "do", ",", "it", "go", "about", "/30", "."]
(c10-1 / and
       :op1 (c10-10 / event
                    :mod (c10-4 / they))
       :op2 (c10-6 / go-01
                   :ARG1 (c10-7 / it)
                   :ARG2 (c10-9 / about
                                :op1 (c10-5 / rate-entity-91
                                            :ARG1 (c10-8 / monetary-quantity
                                                         :unit (c10-0 / dollar)
                                                         :quant 30)
                                            :ARG2 (c10-2 / temporal-quantity
                                                         :unit (c10-3 / day)
                                                         :quant 1)))))
