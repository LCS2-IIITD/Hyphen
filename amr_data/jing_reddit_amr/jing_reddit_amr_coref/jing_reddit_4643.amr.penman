# ::snt and these interrogators perform this in a studio with a live studio audience for entertainment purposes do they? fuck off!
# ::tokens ["and", "these", "interrogators", "perform", "this", "in", "a", "studio", "with", "a", "live", "studio", "audience", "for", "entertainment", "purposes", "do", "they", "?", "fuck", "off", "!"]
# ::lemmas ["and", "these", "interrogator", "perform", "this", "in", "a", "studio", "with", "a", "live", "studio", "audience", "for", "entertainment", "purpose", "do", "they", "?", "fuck", "off", "!"]
(c1-10 / multi-sentence
       :snt1 (c1-1 / and
                   :op2 (c1-6 / perform-01
                              :ARG0 (c1-4 / person
                                          :ARG0-of (c1-9 / interrogate-01)
                                          :mod (c1-5 / this))
                              :ARG1 (c1-3 / this)
                              :location (c1-0 / studio)
                              :accompanier (c1-11 / audience
                                                  :mod (c1-8 / studio
                                                             :mod (c1-7 / live)))
                              :purpose (c1-12 / entertain-01
                                              :ARG0 c1-11)))
       :snt2 (c1-2 / fuck-off-03
                   :mode expressive))

# ::snt Literally irrelevant to my point. fuck off!
# ::tokens ["Literally", "irrelevant", "to", "my", "point", ".", "fuck", "off", "!"]
# ::lemmas ["literally", "irrelevant", "to", "my", "point", ".", "fuck", "off", "!"]
(c2-5 / multi-sentence
      :snt1 (c2-2 / relevant-01
                  :ARG2 (c2-4 / point-04
                              :ARG0 (c2-1 / i))
                  :manner (c2-3 / literal)
                  :polarity -)
      :snt2 (c2-0 / fuck-off-03
                  :ARG0 (c2-6 / you)
                  :mode imperative))

# ::snt I have no idea why you would get downvoted for saying this. This video does not belong in this sub. The comments and upvotes just show how toxic a community this has become.
# ::tokens ["I", "have", "no", "idea", "why", "you", "would", "get", "downvoted", "for", "saying", "this", ".", "This", "video", "does", "not", "belong", "in", "this", "sub", ".", "The", "comments", "and", "upvotes", "just", "show", "how", "toxic", "a", "community", "this", "has", "become", "."]
# ::lemmas ["i", "have", "no", "idea", "why", "you", "would", "get", "downvote", "for", "say", "this", ".", "this", "video", "do", "not", "belong", "in", "this", "sub", ".", "the", "comment", "and", "upvote", "just", "show", "how", "toxic", "a", "community", "this", "have", "become", "."]
(c3-9 / multi-sentence
      :snt1 (c3-20 / have-03
                   :ARG0 (c3-2 / i)
                   :ARG1 (c3-12 / idea
                                :topic (c3-8 / thing
                                             :ARG0-of (c3-4 / cause-01
                                                            :ARG1 (c3-0 / downvote-01
                                                                        :ARG1 (c3-16 / you)
                                                                        :ARG1-of (c3-1 / cause-01
                                                                                       :ARG0 (c3-11 / say-01
                                                                                                    :ARG0 c3-16
                                                                                                    :ARG1 (c3-5 / this)))))))
                   :polarity -)
      :snt2 (c3-24 / belong-01
                   :ARG0 (c3-7 / video
                               :mod (c3-10 / this))
                   :ARG1 (c3-25 / sub
                                :mod (c3-13 / this))
                   :polarity -)
      :snt3 (c3-14 / show-01
                   :ARG0 (c3-18 / and
                                :op1 (c3-6 / comment-01)
                                :op2 (c3-21 / upvote-01))
                   :ARG1 (c3-17 / become-01
                                :ARG1 (c3-15 / community
                                             :mod (c3-19 / this))
                                :ARG2 (c3-22 / toxic
                                             :degree (c3-3 / so)))
                   :mod (c3-23 / just)))
