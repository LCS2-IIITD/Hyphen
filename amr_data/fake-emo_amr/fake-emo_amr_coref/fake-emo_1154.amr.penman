# ::snt @MetTaskforce How boring‚Ä¶
# ::tokens ["@MetTaskforce", "How", "boring", "\u2026"]
# ::lemmas ["@MetTaskforce", "how", "boring", "\u2026"]
(c1-3 / say-01
      :ARG0 (c1-5 / i)
      :ARG1 (c1-0 / bore-02
                  :degree (c1-1 / so))
      :ARG2 (c1-4 / organization
                  :name (c1-2 / name
                              :op1 "MetTaskforce")))

# ::snt @MetTaskforce I don‚Äôt understand though why a car registered in Yorkshire and found to be driving in London is a problem or reason for a stop? Given it was legally on the road, no other defects, no poor driving, no offences why stop it?
# ::tokens ["@MetTaskforce", "I", "do", "n\u2019t", "understand", "though", "why", "a", "car", "registered", "in", "Yorkshire", "and", "found", "to", "be", "driving", "in", "London", "is", "a", "problem", "or", "reason", "for", "a", "stop", "?", "Given", "it", "was", "legally", "on", "the", "road", ",", "no", "other", "defects", ",", "no", "poor", "driving", ",", "no", "offences", "why", "stop", "it", "?"]
# ::lemmas ["@mettaskforce", "i", "do", "not", "understand", "though", "why", "a", "car", "register", "in", "Yorkshire", "and", "find", "to", "be", "drive", "in", "London", "be", "a", "problem", "or", "reason", "for", "a", "stop", "?", "give", "it", "be", "legally", "on", "the", "road", ",", "no", "other", "defect", ",", "no", "poor", "driving", ",", "no", "offence", "why", "stop", "it", "?"]
(c2-20 / multi-sentence
       :snt1 (c2-26 / have-concession-91
                    :ARG1 (c2-4 / understand-01
                                :ARG0 (c2-31 / i)
                                :ARG1 (c2-28 / amr-unknown
                                             :ARG0-of (c2-19 / cause-01
                                                             :ARG1 (c2-10 / stop-01
                                                                          :ARG1 (c2-16 / car
                                                                                       :ARG1-of (c2-8 / register-02
                                                                                                      :location (c2-2 / county
                                                                                                                      :name (c2-21 / name
                                                                                                                                   :op1 "Yorkshire")))
                                                                                       :ARG0-of (c2-24 / drive-01
                                                                                                       :ARG1 (c2-11 / city
                                                                                                                    :name (c2-12 / name
                                                                                                                                 :op1 "London"))
                                                                                                       :ARG1-of (c2-3 / find-01))))))
                                :polarity -)
                    :ARG2 (c2-22 / amr-unknown
                                 :ARG0-of (c2-25 / cause-01
                                                 :ARG1 (c2-6 / stop-01
                                                             :ARG1 c2-16))))
       :snt2 (c2-18 / cause-01
                    :ARG0 (c2-23 / and
                                 :op1 (c2-5 / be-located-at-91
                                            :ARG1 (c2-7 / it)
                                            :ARG2 (c2-27 / road)
                                            :ARG1-of (c2-0 / legal-02))
                                 :op2 (c2-14 / defect
                                             :mod (c2-17 / other)
                                             :polarity -)
                                 :op3 (c2-9 / drive-01
                                            :mod (c2-1 / poor))
                                 :op4 (c2-13 / offend-03
                                             :polarity -))
                    :ARG1 (c2-15 / stop-01
                                 :ARG1 c2-7)
                    :ARG1-of (c2-29 / cause-01
                                    :ARG0 (c2-30 / amr-unknown))))

# ::snt @MetTaskforce @GMB spreading fake news, reporting search was carried out
# ::tokens ["@MetTaskforce", "@GMB", "spreading", "fake", "news", ",", "reporting", "search", "was", "carried", "out"]
# ::lemmas ["@MetTaskforce", "@GMB", "spread", "fake", "news", ",", "report", "search", "be", "carry", "out"]
(c3-6 / and
      :op1 (c3-7 / spread-out-04
                 :ARG0 (c3-2 / person
                             :name (c3-3 / name
                                         :op1 "MetTaskforce"))
                 :ARG1 (c3-0 / news
                             :ARG1-of (c3-4 / fake-02)))
      :op2 (c3-1 / search-01
                 :ARG2 (c3-5 / report-01)))

# ::snt @MetTaskforce Keep up the good work more if this please üëèüëèüëè
# ::tokens ["@MetTaskforce", "Keep", "up", "the", "good", "work", "more", "if", "this", "please", "\ud83d\udc4f", "\ud83d\udc4f", "\ud83d\udc4f"]
# ::lemmas ["@MetTaskforce", "keep", "up", "the", "good", "work", "more", "if", "this", "please", "\ud83d\udc4f", "\ud83d\udc4f", "\ud83d\udc4f"]
(c4-8 / say-01
      :ARG0 (c4-9 / i)
      :ARG1 (c4-1 / keep-up-10
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-7 / work-01
                              :ARG0 c4-0
                              :ARG1-of (c4-2 / good-02)
                              :mod (c4-3 / more))
                  :condition (c4-6 / this)
                  :mode imperative
                  :polite +)
      :ARG2 (c4-4 / person
                  :name (c4-5 / name
                              :op1 "MetTaskforce")))

# ::snt @MetTaskforce Well said should do this all the time Challenge all this fake news !
# ::tokens ["@MetTaskforce", "Well", "said", "should", "do", "this", "all", "the", "time", "Challenge", "all", "this", "fake", "news", "!"]
# ::lemmas ["@MetTaskforce", "well", "say", "should", "do", "this", "all", "the", "time", "Challenge", "all", "this", "fake", "news", "!"]
(c5-13 / say-01
       :ARG0 (c5-3 / person
                   :name (c5-4 / name
                               :op1 "MetTaskforce"))
       :ARG1 (c5-9 / recommend-01
                   :ARG1 (c5-8 / do-02
                               :ARG1 (c5-7 / this)
                               :frequency (c5-1 / time
                                                :mod (c5-11 / all))))
       :ARG1-of (c5-10 / well-09)
       :ARG0-of (c5-0 / challenge-01
                      :ARG2 (c5-2 / news
                                  :ARG1-of (c5-6 / fake-02)
                                  :mod (c5-12 / this)
                                  :mod (c5-5 / all))))

# ::snt @MetTaskforce I‚Äôm glad the police were able to admit their mistake
# ::tokens ["@MetTaskforce", "I", "\u2019m", "glad", "the", "police", "were", "able", "to", "admit", "their", "mistake"]
# ::lemmas ["@MetTaskforce", "i", "\u2019m", "glad", "the", "police", "be", "able", "to", "admit", "their", "mistake"]
(c6-6 / say-01
      :ARG0 (c6-8 / i)
      :ARG1 (c6-0 / glad-02
                  :ARG0 (c6-2 / possible-01
                              :ARG1 (c6-5 / admit-01
                                          :ARG0 (c6-1 / police)
                                          :ARG1 (c6-3 / mistake-02
                                                      :ARG0 c6-1)))
                  :ARG1 c6-8)
      :ARG2 (c6-7 / organization
                  :name (c6-4 / name
                              :op1 "MetTaskforce")))

# ::snt @MetTaskforce @jewdrop52 Did you ask her about her expenses claims?
# ::tokens ["@MetTaskforce", "@jewdrop52", "Did", "you", "ask", "her", "about", "her", "expenses", "claims", "?"]
# ::lemmas ["@MetTaskforce", "@jewdrop52", "do", "you", "ask", "she", "about", "her", "expense", "claim", "?"]
(c7-5 / ask-01
      :ARG0 (c7-7 / i)
      :ARG1 (c7-0 / claim-01
                  :ARG1 (c7-2 / monetary-quantity
                              :ARG1-of (c7-1 / expend-01
                                             :ARG0 (c7-6 / she
                                                         :ARG2-of c7-5))))
      :polarity (c7-3 / amr-unknown)
      :medium (c7-4 / email-address-entity
                    :value "MetTaskforce"))

# ::snt @MetTaskforce Should of handcuffed the passengers for your safety while you searched the Vehicleü§£
# ::tokens ["@MetTaskforce", "Should", "of", "handcuffed", "the", "passengers", "for", "your", "safety", "while", "you", "searched", "the", "Vehicle", "\ud83e\udd23"]
# ::lemmas ["@MetTaskforce", "should", "of", "handcuff", "the", "passenger", "for", "your", "safety", "while", "you", "search", "the", "Vehicle", "\ud83e\udd23"]
(c8-5 / recommend-01
      :ARG0 (c8-10 / i)
      :ARG1 (c8-7 / handcuff-01
                  :ARG0 (c8-3 / person
                              :ARG0-of (c8-0 / have-org-role-91
                                             :ARG1 (c8-9 / organization
                                                         :name (c8-4 / name
                                                                     :op1 "MetTaskforce"))))
                  :ARG1 (c8-1 / passenger)
                  :purpose (c8-8 / safe-01
                                 :ARG1 c8-1)
                  :time (c8-2 / search-01
                              :ARG0 c8-3
                              :ARG1 (c8-6 / vehicle))))

# ::snt @MetTaskforce https://t.co/BWpEKXJznt
# ::tokens ["@MetTaskforce", "https://t.co/BWpEKXJznt"]
# ::lemmas ["@MetTaskforce", "https://t.co/BWpEKXJznt"]
(c9-1 / say-01
      :ARG0 (c9-3 / i)
      :ARG2 (c9-2 / organization
                  :name (c9-0 / name
                              :op1 "MetTaskforce")))
