comment,amr
"@D_Alex_connect Thatâ€™s OK, old sloppy Joe will smells her hair, sheâ€™ll have a change  of heartðŸ˜‚ðŸ˜‚","# ::snt @D_Alex_connect Thatâ€™s OK, old sloppy Joe will smells her hair, sheâ€™ll have a change  of heartðŸ˜‚ðŸ˜‚
(a / and
      :op1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (o / okay-04
                  :ARG1 (t / that))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""D_Alex_connect"")))
      :op2 (s2 / smell-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Joe"")
                  :mod (s3 / sloppy)
                  :mod (o2 / old))
            :ARG1 (h / hair
                  :part-of (s4 / she)))
      :op3 (c / change-01
            :ARG0 s4
            :ARG1 (h2 / heart))
      :op4 (l / laugh-01
            :mode expressive
            :ARG0 ii
            :manner (l2 / loud)))"
"@D_Alex_connect Anchor is right, Yes she is qualified for vice president of WHO.","# ::snt @D_Alex_connect Anchor is right, Yes she is qualified for vice president of WHO.
(r / right-06
      :ARG1 (p / person
            :name (n / name
                  :op1 ""D_Alex_connect""
                  :op2 ""Anchor""))
      :ARG2 (q / qualify-02
            :ARG1 p
            :ARG2 (p2 / president
                  :mod (v / vice)
                  :ARG2-of (h / have-org-role-91
                        :ARG0 p
                        :ARG1 (o / organization
                              :name (n2 / name
                                    :op1 ""WHO""))))
            :mod (y / yes)))"
@D_Alex_connect Well that statement tells you all you need to know about Gayle Kings judgement. She obviously has 0 ability to judge whether or not someone is qualified for anything.,"# ::snt @D_Alex_connect Well that statement tells you all you need to know about Gayle Kings judgement. She obviously has 0 ability to judge whether or not someone is qualified for anything.
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (t / tell-01
                  :ARG0 (t2 / thing
                        :ARG1-of (s2 / state-01)
                        :mod (t3 / that))
                  :ARG1 (a / all
                        :ARG1-of (k / know-01
                              :ARG0 (y / you)
                              :ARG1-of (n / need-01
                                    :ARG0 y)
                              :topic (j / judge-01
                                    :ARG0 (p / person
                                          :name (n2 / name
                                                :op1 ""Gayle""
                                                :op2 ""Kings"")))))
                  :ARG2 y
                  :mod (w / well))
            :snt2 (c / capable-01
                  :quant 0
                  :ARG1 (s3 / she)
                  :ARG2 (j2 / judge-01
                        :ARG0 s3
                        :ARG1 (o / or
                              :op1 (q / qualify-02
                                    :ARG1 (s4 / someone)
                                    :ARG2 (a2 / anything))
                              :op2 (q2 / qualify-02
                                    :polarity -
                                    :ARG1 s4
                                    :ARG2 a2)))
                  :ARG1-of (o2 / obvious-01))))"
@D_Alex_connect Tells you how misinformed CBS is,"# ::snt @D_Alex_connect Tells you how misinformed CBS is
(t / tell-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""D_Alex_connect""))
      :ARG1 (t2 / thing
            :degree-of (m / misinform-01
                  :ARG0 (p2 / publication
                        :name (n2 / name
                              :op1 ""CBS""))))
      :ARG2 (y / you))"
@D_Alex_connect What a joke,"# ::snt @D_Alex_connect What a joke
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (j / joke-01
            :mod (s2 / so))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""D_Alex_connect"")))"
@D_Alex_connect https://t.co/RDHFph9prL,"# ::snt @D_Alex_connect https://t.co/RDHFph9prL
(s / say-01
      :ARG0 (ii / i)
      :ARG2 (p / person
            :name (n / name
                  :op1 ""D_Alex_connect""))
      :medium (u / url-entity
            :value ""https://t.co/RDHFph9prL""))"
@D_Alex_connect https://t.co/Mf4U2XlWBs,"# ::snt @D_Alex_connect https://t.co/Mf4U2XlWBs
(s / say-01
      :ARG0 (ii / i)
      :ARG2 (p / person
            :name (n / name
                  :op1 ""D_Alex_connect""))
      :medium (u / url-entity
            :value ""https://t.co/Mf4U2XlWBs""))"
