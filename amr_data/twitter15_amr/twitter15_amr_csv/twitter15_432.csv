comment,amr
"poor guy, shame on the person who left him. Lots of Love , .home.for.Kai","# ::snt poor guy, shame on the person who left him. Lots of Love , .home.for.Kai
(m / multi-sentence
      :snt1 (g / guy
            :mod (p / poor))
      :snt2 (s / shame-01
            :ARG1 (p2 / person
                  :ARG0-of (l / leave-15
                        :ARG1 g)))
      :snt3 (l2 / love-01
            :quant (l3 / lot))
      :snt4 (h / home))"
""": Dog found abandoned at Scottish train station with suitcase filled with belongings: ""","# ::snt "": Dog found abandoned at Scottish train station with suitcase filled with belongings: ""
(f / find-01
      :ARG1 (d / dog
            :ARG1-of (a / abandon-01
                  :location (s / station
                        :mod (t / train)
                        :mod (c / country
                              :name (n / name
                                    :op1 ""Scotland""))))
            :ARG0-of (h / have-03
                  :ARG1 (s2 / suitcase
                        :ARG1-of (f2 / fill-01
                              :ARG2 (t2 / thing
                                    :ARG0-of (b / belong-01
                                          :ARG1 d)))))))"
"MT "". Dog w/ suitcase filled with it's belongings""Heartless humans...","# ::snt MT "". Dog w/ suitcase filled with it's belongings""Heartless humans...
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""MT""))
      :snt2 (h / human
            :mod (h2 / heartless)
            :ARG0-of (f / fill-01
                  :ARG1 (s / suitcase)
                  :ARG2 (t / thing
                        :ARG0-of (b / belong-01
                              :ARG1 (d / dog))))))"
"lololllolollll! Bad dogs definitely want to be left, somewhere... If that. Lolol","# ::snt lololllolollll! Bad dogs definitely want to be left, somewhere... If that. Lolol
(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (d / dog
                  :ARG1-of (b / bad-07))
            :ARG1 (l / leave-12
                  :ARG1 d
                  :ARG2 (s / somewhere))
            :mod (d2 / definite)
            :mod (l2 / laugh-01
                  :mode expressive
                  :manner (l3 / loud)))
      :snt2 (h / have-condition-91
            :ARG2 (t / that)
            :mod l2
            :mode expressive
            :manner (l4 / loud)))"
"unless he's a bad dog, that bites people. Then, this wouldn't be sad, at all. Lollllll","# ::snt unless he's a bad dog, that bites people. Then, this wouldn't be sad, at all. Lollllll
(m / multi-sentence
      :snt1 (h / have-condition-91
            :ARG1 (s / sad-02
                  :polarity -
                  :ARG0 (t / this)
                  :mod (a / at-all)
                  :time (t2 / then))
            :ARG2 (d / dog
                  :ARG1-of (b / bad-07)
                  :domain (h2 / he)
                  :ARG0-of (b2 / bite-01
                        :ARG1 (p / person))))
      :snt2 p
      :name (n / name
            :op1 ""Lollll""))"
That is sad. All I need now is a horsewhip and the miscreant.,"# ::snt That is sad. All I need now is a horsewhip and the miscreant.
(m / multi-sentence
      :snt1 (s / sad-02
            :ARG0 (t / that))
      :snt2 (n / need-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (h / horsewhip)
                  :op2 (m2 / miscreant)
                  :mod (a2 / all))
            :time (n2 / now)))"
DEFINITELY makes me want to cry....,"# ::snt DEFINITELY makes me want to cry....
(m / make-02
      :ARG1 (w / want-01
            :ARG0 (ii / i)
            :ARG1 (c / cry-02
                  :ARG0 ii))
      :mod (d / definite))"
THIS IS SO SAD! He's beautiful!,"# ::snt THIS IS SO SAD! He's beautiful!
(m / multi-sentence
      :snt1 (s / sad-02
            :ARG1 (t / this)
            :degree (s2 / so))
      :snt2 (b / beautiful-02
            :ARG1 (h / he)))"
"How to make any laptop a ""wifi hotspot""","# ::snt How to make any laptop a ""wifi hotspot""
(m / make-01
      :ARG1 (h / hotspot
            :mod (ii / ifi))
      :manner (a / amr-unknown)
      :ARG2 (l / laptop
            :mod (a2 / any)))"
,"# ::snt 
(a / amr-empty)"
 Dog abandoned at train stn w/suitcase with it's belongings: also w/extra apostrophe,"# ::snt  Dog abandoned at train stn w/suitcase with it's belongings: also w/extra apostrophe
(a / and
      :op1 (a2 / abandon-01
            :ARG1 (d / dog)
            :location (t / train))
      :op2 (a3 / accompany-01
            :ARG0 (s / suitcase)
            :ARG1 (t2 / thing
                  :ARG0-of (b / belong-01
                        :ARG1 d)))
      :op3 (a4 / apostrophe
            :mod (e / extra)
            :mod (a5 / also)))"
. Reminds me of the classic children's story Bear.,"# ::snt . Reminds me of the classic children's story Bear.
(r / remind-01
      :ARG1 (s / story
            :name (n / name
                  :op1 ""Bear"")
            :mod (c / classic)
            :mod (c2 / child))
      :ARG2 (ii / i))"
Ahhhhh,"# ::snt Ahhhhh
(a / ah
      :mode expressive)"
