comment,amr
I'm just kidding guys. f dat puta,"# ::snt I'm just kidding guys. f dat puta
(m / multi-sentence
      :snt1 (k / kid-01
            :ARG0 (ii / i)
            :ARG1 (g / guy)
            :mod (j / just))
      :snt2 (p / puta
            :mode expressive
            :mod (t / that)))"
what! Lame. Was gonna tell you to bring Debbie. HAHAHAHA.,"# ::snt what! Lame. Was gonna tell you to bring Debbie. HAHAHAHA.
(m / multi-sentence
      :snt1 (l / lame)
      :snt2 (t / tell-01
            :ARG0 (ii / i)
            :ARG1 (b / bring-01
                  :ARG0 (y / you)
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Debbie"")))
            :ARG2 y)
      :snt3 (h / haha
            :mode expressive))"
you know where we stay. Come without her. Hahahahaha,"# ::snt you know where we stay. Come without her. Hahahahaha
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :location-of (s / stay-01
                        :ARG1 (w / we))))
      :snt2 (c / come-01
            :mode imperative
            :ARG1 y)
      :manner (a / accompany-01
            :polarity -
            :ARG0 (s2 / she)
            :ARG1 y)
      :snt3 (h / haha
            :mode expressive))"
This one's for you : Starbucks Is Testing A New Latte That Tastes Exactly Like Guinness,"# ::snt This one's for you : Starbucks Is Testing A New Latte That Tastes Exactly Like Guinness
(o / one
      :mod (t / this)
      :prep-for (y / you)
      :ARG1-of (m / mean-01
            :ARG2 (t2 / test-01
                  :ARG0 (c / company
                        :name (n / name
                              :op1 ""Starbucks""))
                  :ARG1 (l / Latte
                        :ARG1-of (n2 / new-01)
                        :ARG0-of (t3 / taste-02
                              :ARG1-of (r / resemble-01
                                    :ARG2 (c2 / company
                                          :name (n3 / name
                                                :op1 ""Guinness""))
                                    :mod (e / exact)))))))"
it was good with the raspberry in it! We need to hang out again guys. Stop being gay,"# ::snt it was good with the raspberry in it! We need to hang out again guys. Stop being gay
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (ii / it)
            :ARG2 (r / raspberry
                  :location (ii2 / it)))
      :snt2 (s / say-01
            :ARG1 (o / obligate-01
                  :ARG1 (w / we)
                  :ARG2 (h / hang-out-06
                        :ARG1 w
                        :mod (a / again)))
            :ARG2 (g2 / guy))
      :snt3 (s2 / stop-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (g3 / gay-01
                  :ARG1 y)))"
why did it taste like BBQ that one night! Imma try it again.,"# ::snt why did it taste like BBQ that one night! Imma try it again.
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (t / taste-02
                  :ARG1 (ii / it)
                  :ARG2 (b / barbecue-01)
                  :time (d / date-entity
                        :dayperiod (n / night)
                        :mod (o / one))))
      :snt2 (t2 / try-01
            :ARG0 (ii2 / i)
            :ARG1 (ii3 / it)
            :mod (a2 / again)))"
Guinness,"# ::snt Guinness
(p / person
      :name (n / name
            :op1 ""Guinness""))"
that beer you bought is still sitting in the box tastes like BBQ wth!,"# ::snt that beer you bought is still sitting in the box tastes like BBQ wth!
(t / taste-02
      :mode expressive
      :ARG1 (b / beer
            :ARG1-of (b2 / buy-01
                  :ARG0 (y / you))
            :ARG1-of (s / sit-01
                  :ARG2 (b3 / box)
                  :mod (s2 / still)))
      :ARG2 (b4 / barbecue-01)
      :degree (q / quite))"
"Cc: RT : ""Starbucks Is Testing A New Latte That Tastes Exactly Like Guinness","# ::snt Cc: RT : ""Starbucks Is Testing A New Latte That Tastes Exactly Like Guinness
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Cc""))
      :ARG1 (p2 / publication
            :name (n2 / name
                  :op1 ""RT"")
            :ARG0-of (s2 / say-01
                  :ARG1 (t / test-01
                        :ARG0 (c / company
                              :name (n3 / name
                                    :op1 ""Starbucks""))
                        :ARG1 (l / Latte
                              :ARG1-of (n4 / new-01)
                              :ARG0-of (t2 / taste-02
                                    :ARG1-of (r / resemble-01
                                          :ARG2 (c2 / company
                                                :name (n5 / name
                                                      :op1 ""Guinness""))
                                          :mod (e / exact))))))))"
: Starbucks Is Testing A New Latte That Tastes Exactly Like Guinness,"# ::snt : Starbucks Is Testing A New Latte That Tastes Exactly Like Guinness
(t / test-01
      :ARG0 (c / company
            :name (n / name
                  :op1 ""Starbucks""))
      :ARG1 (l / Latte
            :ARG1-of (n2 / new-01)
            :ARG0-of (t2 / taste-02
                  :ARG1-of (r / resemble-01
                        :ARG2 (c2 / company
                              :name (n3 / name
                                    :op1 ""Guinness""))
                        :mod (e / exact)))))"
Gross! I hate Guinness : Starbucks Is Testing A New Latte That Tastes Exactly Like Guinness,"# ::snt Gross! I hate Guinness : Starbucks Is Testing A New Latte That Tastes Exactly Like Guinness
(h / hate-01
      :ARG0 (ii / i)
      :ARG1 (c / company
            :name (n / name
                  :op1 ""Guinness""))
      :ARG1-of (c2 / cause-01
            :ARG0 (t / test-01
                  :ARG0 c
                  :name (n2 / name
                        :op1 ""Starbucks""))
            :ARG1 (l / Latte
                  :ARG1-of (n3 / new-01)
                  :ARG0-of (t2 / taste-02
                        :ARG1-of (r / resemble-01
                              :ARG2 c
                              :mod (e / exact)))))
      :mod (g / gross
            :mode expressive))"
