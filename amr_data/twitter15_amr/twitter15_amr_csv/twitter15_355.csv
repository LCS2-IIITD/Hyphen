comment,amr
Hope the other soldier who was so close is ok,"# ::snt Hope the other soldier who was so close is ok
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (o / okay-03
            :ARG1 (s / soldier
                  :mod (o2 / other)
                  :ARG1-of (c / close-13
                        :degree (s2 / so)))))"
RIP,"# ::snt RIP
(r / rest-01
      :ARG1 (y / you)
      :manner (p / peace))"
"so our other poor soldier, unarmed also, couldn't return fire!","# ::snt so our other poor soldier, unarmed also, couldn't return fire!
(c / cause-01
      :ARG1 (p / possible-01
            :polarity -
            :ARG1 (r / return-02
                  :ARG0 (s / soldier
                        :poss (w / we)
                        :mod (p2 / poor)
                        :mod (o / other)
                        :ARG1-of (a / arm-01
                              :polarity -
                              :mod (a2 / also)))
                  :ARG1 (f / fire-01
                        :ARG0 s))))"
My deepest sympathies to his family.,"# ::snt My deepest sympathies to his family.
(s / sympathize-01
      :ARG0 (ii / i)
      :ARG1 (f / family
            :ARG1-of (h / have-org-role-91
                  :ARG0 (h2 / he)
                  :ARG2 (m / member)))
      :ARG1-of (h3 / have-degree-91
            :ARG2 (d / deep-02
                  :ARG1 s)
            :ARG3 (m2 / most)))"
Mr. Mansbridge thx for your balanced coverage today. Canada had lost innocence this week,"# ::snt Mr. Mansbridge thx for your balanced coverage today. Canada had lost innocence this week
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Mr.""
                        :op2 ""Mansbridge""))
            :ARG2 (c / cover-03
                  :ARG0 (y / you)
                  :ARG1-of (b / balance-01)
                  :time (t2 / today)))
      :snt2 (l / lose-02
            :ARG0 (c2 / country
                  :name (n2 / name
                        :op1 ""Canada""))
            :ARG1 (ii2 / innocent-01)
            :time (w / week
                  :mod (t3 / this))))"
How could someone be so despicable!,"# ::snt How could someone be so despicable!
(p / possible-01
      :ARG1 (d / despicable
            :degree (s / so)
            :domain (s2 / someone))
      :manner (a / amr-unknown))"
so so sad. Blessings to his family.,"# ::snt so so sad. Blessings to his family.
(m / multi-sentence
      :snt1 (s / sad-02
            :degree (s2 / so))
      :snt2 (b / bless-01
            :ARG1 (f / family
                  :ARG1-of (h / have-org-role-91
                        :ARG0 (h2 / he)
                        :ARG2 (m2 / member)))))"
really the man's Life. Yes I understand bad news travels fast but not even knowing the man?R.I.P. !!!,"# ::snt really the man's Life. Yes I understand bad news travels fast but not even knowing the man?R.I.P. !!!
(m / multi-sentence
      :snt1 (l / life
            :poss (m2 / man)
            :ARG1-of (r / real-04))
      :snt2 (c / contrast-01
            :ARG1 (u / understand-01
                  :ARG0 (ii / i)
                  :ARG1 (t / travel-01
                        :ARG0 (n / news
                              :ARG1-of (b / bad-07))
                        :ARG1-of (f / fast-02))
                  :mod (y / yes))
            :ARG2 (k / know-02
                  :polarity -
                  :ARG0 ii
                  :ARG1 (m3 / man)
                  :mod (e / even))
            :polarity (a / amr-unknown)))"
I can't even imagine how the man that was standing beside him must be feeling...,"# ::snt I can't even imagine how the man that was standing beside him must be feeling...
(p / possible-01
      :polarity -
      :ARG1 (ii / imagine-01
            :ARG0 (ii2 / i)
            :ARG1 (t / thing
                  :ARG1-of (f / feel-01
                        :ARG0 (m / man
                              :ARG1-of (s / stand-01
                                    :ARG2 (b / beside
                                          :op1 (h / he)))
                              :ARG1-of (ii3 / infer-01))))
            :mod (e / even)))"
"the soldier on the right, is Cpl Nathan Cirillo Southern Highlanders of Canada! RIP","# ::snt the soldier on the right, is Cpl Nathan Cirillo Southern Highlanders of Canada! RIP
(m / multi-sentence
      :snt1 (s / soldier
            :ARG1-of (r / right-04)
            :domain (p / person
                  :name (n / name
                        :op1 ""Cpl""
                        :op2 ""Nathan""
                        :op3 ""Cirillo"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 s)))
      :mod (l / local-region
            :name (n2 / name
                  :op1 ""Southern""
                  :op2 ""Highlanders"")
            :location (c / country
                  :name (n3 / name
                        :op1 ""Canada"")))
      :snt2 (r2 / rest-01
            :mode imperative
            :ARG1 (y / you)))"
"Why shoot a soldier guarding the memorial to fallen soldiers, how is that a threat to any idealogy? Attack on all Canadians","# ::snt Why shoot a soldier guarding the memorial to fallen soldiers, how is that a threat to any idealogy? Attack on all Canadians
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (s / shoot-02
                  :ARG1 (s2 / soldier
                        :ARG0-of (g / guard-01
                              :ARG1 (m2 / memorial
                                    :beneficiary (s3 / soldier
                                          :ARG1-of (f / fall-05)))))))
      :snt2 (t / threaten-01
            :ARG0 (t2 / that)
            :ARG2 (ii / idealogy
                  :mod (a2 / any)))
      :snt3 (a3 / attack-01
            :ARG1 (p / person
                  :mod (c2 / country
                        :name (n / name
                              :op1 ""Canada""))
                  :mod (a4 / all))))"
Nathan Cirillo is on the left.,"# ::snt Nathan Cirillo is on the left.
(l / left-19
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Nathan""
                  :op2 ""Cirillo"")))"
which one is he?,"# ::snt which one is he?
(h / he
      :domain (a / amr-unknown))"
