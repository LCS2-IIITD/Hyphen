comment,amr
Hellooo his name is Aragog you stoopaaaad,"# ::snt Hellooo his name is Aragog you stoopaaaad
(s / say-01
      :ARG1 (n / name-01
            :ARG1 (h / he)
            :ARG2 (p / person
                  :name (n2 / name
                        :op1 ""Aragog""))
            :mod (h2 / hell
                  :mode expressive))
      :ARG2 (y / you
            :mod (s2 / stoopad)))"
that got my fears for spiders high!!,"# ::snt that got my fears for spiders high!!
(g / get-04
      :ARG0 (t / that)
      :ARG1 (h / high-02
            :ARG1 (f / fear-01
                  :ARG0 (ii / i)
                  :ARG1 (s / spiders))))"
yes that is true,"# ::snt yes that is true
(t / true-01
      :ARG1 (t2 / that))"
get out,"# ::snt get out
(g / get-05
      :mode imperative
      :ARG0 (y / you)
      :ARG2 (o / out))"
: A puppy-sized spider was found ... 'South American Goliath Birdeater.' BYEADIOSSAYONARA,"# ::snt : A puppy-sized spider was found ... 'South American Goliath Birdeater.' BYEADIOSSAYONARA
(m / multi-sentence
      :snt1 (f / find-01
            :ARG1 (s / spider
                  :ARG1-of (s2 / size-01
                        :ARG2 (p / puppy))
                  :mod (s3 / species
                        :name (n / name
                              :op1 ""South""
                              :op2 ""American""
                              :op3 ""Goliath""
                              :op4 ""Birdeater""))))
      :snt2 (b / byeadiussayonara))"
"If you look closely, I did not swear at all, my vocabulary is beautiful","# ::snt If you look closely, I did not swear at all, my vocabulary is beautiful
(s / swear-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (b / beautiful-02
            :ARG1 (v / vocabulary
                  :poss ii))
      :mod (a / at-all)
      :condition (l / look-01
            :ARG0 (y / you)
            :ARG1-of (c / close-10)))"
NOPE. THATS IT. IM DONE WITH PLANET EARTH.,"# ::snt NOPE. THATS IT. IM DONE WITH PLANET EARTH.
(m / multi-sentence
      :snt1 (n / nope)
      :snt2 (b / be-it-07
            :ARG1 (t / that))
      :snt3 (b2 / be-done-08
            :ARG0 (ii / i)
            :ARG1 (p / planet
                  :name (n2 / name
                        :op1 ""Planet""
                        :op2 ""Earth""))))"
well I know not going there to see that spider,"# ::snt well I know not going there to see that spider
(k / know-01
      :ARG0 (ii / i)
      :ARG1 (g / go-02
            :polarity -
            :ARG4 (t / there)
            :purpose (s / see-01
                  :ARG0 ii
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Spider"")
                        :mod (t2 / that))))
      :mod (w / well))"
,"# ::snt 
(a / amr-empty)"
"Found this sucker a few weeks ago. Needless to say, I'm planning on moving.","# ::snt Found this sucker a few weeks ago. Needless to say, I'm planning on moving.
(m / multi-sentence
      :snt1 (f / find-01
            :ARG0 (ii / i)
            :ARG1 (s / sucker
                  :mod (t / this))
            :time (b / before
                  :op1 (n / now)
                  :quant (f2 / few
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (w / week)))))
      :snt2 (p / plan-01
            :ARG0 (ii2 / i)
            :ARG1 (m2 / move-01
                  :ARG1 ii2)
            :ARG1-of (s2 / say-01
                  :ARG0 ii2
                  :ARG1-of (n2 / need-01
                        :polarity -))))"
dude tomorrow is going to be so dope,"# ::snt dude tomorrow is going to be so dope
(d / dope
      :domain (t / tomorrow)
      :degree (s / so))"
: A puppy-sized spider was found in South America and is known as the 'Goliath Birdeater.' Super nope.,"# ::snt : A puppy-sized spider was found in South America and is known as the 'Goliath Birdeater.' Super nope.
(m / multi-sentence
      :snt1 (a / and
            :op1 (f / find-01
                  :ARG1 (s / spider
                        :ARG1-of (s2 / size-01
                              :ARG2 (p / puppy)))
                  :location (w / world-region
                        :name (n / name
                              :op1 ""South""
                              :op2 ""America"")))
            :op2 (k / know-02
                  :ARG1 s
                  :ARG2 (b / birdeater
                        :name (n2 / name
                              :op1 ""Goliath""
                              :op2 ""Birdeater""))))
      :snt2 (n3 / nope
            :mod (s3 / super)))"
umm shall we not,"# ::snt umm shall we not
(r / request-confirmation-91
      :ARG1 (w / we))"
,"# ::snt 
(a / amr-empty)"
I feel like I kinda hate you right now,"# ::snt I feel like I kinda hate you right now
(f / feel-01
      :ARG0 (ii / i)
      :ARG1 (h / hate-01
            :ARG0 ii
            :ARG1 (y / you)
            :degree (k / kind-of)
            :time (n / now
                  :mod (r / right))))"
,"# ::snt 
(a / amr-empty)"
: A puppy-sized spider found in South America known as 'South American Goliath Birdeater.',"# ::snt : A puppy-sized spider found in South America known as 'South American Goliath Birdeater.'
(t / thing
      :ARG1-of (f / find-01
            :location (c / continent
                  :name (n / name
                        :op1 ""South""
                        :op2 ""America"")))
      :ARG1-of (k / know-02
            :ARG2 (s / species
                  :name (n2 / name
                        :op1 ""South""
                        :op2 ""American""
                        :op3 ""Goliath""
                        :op4 ""Birdeater"")))
      :ARG1-of (s2 / size-01
            :ARG2 (p / puppy)))"
Harry potter films coming to life,"# ::snt Harry potter films coming to life
(c / come-04
      :ARG1 (f / film
            :name (n / name
                  :op1 ""Harry""
                  :op2 ""Potter""))
      :ARG2 (l / life))"
,"# ::snt 
(a / amr-empty)"
": A puppy-sized spider was found in South America is Aragog from Harry Potter, feel old yet?","# ::snt : A puppy-sized spider was found in South America is Aragog from Harry Potter, feel old yet?
(m / multi-sentence
      :snt1 (f / find-01
            :ARG1 (s / spider
                  :ARG1-of (s2 / size-01
                        :ARG2 (p / puppy))
                  :domain (p2 / person
                        :name (n / name
                              :op1 ""Aragog"")
                        :source (b / book
                              :name (n2 / name
                                    :op1 ""Harry""
                                    :op2 ""Potter""))))
            :location (w / world-region
                  :name (n3 / name
                        :op1 ""South""
                        :op2 ""America"")))
      :snt2 (f2 / feel-01
            :ARG0 (y / you)
            :ARG1 (o / old)
            :time (y2 / yet)
            :polarity (a / amr-unknown)))"
"if you aren't a friend of spiders, then you aren't a friend of mine!!!","# ::snt if you aren't a friend of spiders, then you aren't a friend of mine!!!
(h / have-condition-91
      :ARG1 (h2 / have-rel-role-91
            :polarity -
            :ARG0 (y / you)
            :ARG1 (ii / i)
            :ARG2 (f / friend))
      :ARG2 (h3 / have-rel-role-91
            :polarity -
            :ARG0 y
            :ARG1 ii
            :ARG2 (f2 / friend)))"
Like I couldn't catch of them,"# ::snt Like I couldn't catch of them
(r / resemble-01
      :ARG2 (p / possible-01
            :polarity -
            :ARG1 (c / catch-01
                  :ARG0 (ii / i)
                  :ARG1 (t / they))))"
nah but seriously,"# ::snt nah but seriously
(c / contrast-01
      :ARG1 (n / nah)
      :ARG2 (s / serious-01))"
,"# ::snt 
(a / amr-empty)"
Afraid not! Apparently its harmless to humans. After you? Ladies first.,"# ::snt Afraid not! Apparently its harmless to humans. After you? Ladies first.
(m / multi-sentence
      :snt1 (f / fear-01
            :polarity -)
      :snt2 (a / appear-02
            :ARG1 (h / harmful-02
                  :polarity -
                  :ARG0 (ii / it)
                  :ARG1 (h2 / human)))
      :snt3 (a2 / after
            :op1 (y / you)
            :polarity (a3 / amr-unknown)
            :ord (o / ordinal-entity
                  :value 1))
      :snt4 (s / say-01
            :ARG0 (ii2 / i)
            :ARG2 (l / lady)))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
they're seriously so cute!! I want to cuddle one,"# ::snt they're seriously so cute!! I want to cuddle one
(m / multi-sentence
      :snt1 (c / cute
            :domain (t / they)
            :ARG2-of (s / serious-01)
            :degree (s2 / so))
      :snt2 (w / want-01
            :ARG0 (ii / i)
            :ARG1 (c2 / cuddle-01
                  :ARG0 ii
                  :ARG1 (o / one))))"
yeah when I light it up in flames,"# ::snt yeah when I light it up in flames
(l / light-up-09
      :ARG0 (ii / i)
      :ARG1 (ii2 / it)
      :manner (f / flame-01
            :ARG1 ii2)
      :mod (y / yeah
            :mode expressive))"
this some Harry Potter bullshit,"# ::snt this some Harry Potter bullshit
(b / bullshit-01
      :ARG1 (t / this)
      :mod (b2 / book
            :name (n / name
                  :op1 ""Harry""
                  :op2 ""Potter""))
      :mod (s / some))"
"Jajajajajajajajajajajajaja ahora q me acuerdo, me levante a las :00am iba a enviarte el screenshot a esa hora, sea la madre","# ::snt Jajajajajajajajajajajajaja ahora q me acuerdo, me levante a las :00am iba a enviarte el screenshot a esa hora, sea la madre
(m / multi-sentence
      :snt1 (a / ahora
            :mode expressive
            :mod (p / person
                  :name (n / name))))"
: A puppy-sized spider was found in South America will never see me in South America ever,"# ::snt : A puppy-sized spider was found in South America will never see me in South America ever
(s / see-01
      :polarity -
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :location (c / continent
            :name (n / name
                  :op1 ""South""
                  :op2 ""America""))
      :time (e / ever)
      :time (f / find-01
            :ARG1 (s2 / spider
                  :ARG1-of (s3 / size-01
                        :ARG2 (p / puppy)))))"
Reasons I don't fuck w/ South America : A puppy-sized spider was found in South America,"# ::snt Reasons I don't fuck w/ South America : A puppy-sized spider was found in South America
(c / cause-01
      :ARG0 (f / find-01
            :ARG1 (s / spider
                  :ARG1-of (s2 / size-01
                        :ARG2 (p / puppy)))
            :location (w / world-region
                  :name (n / name
                        :op1 ""South""
                        :op2 ""America"")))
      :ARG1 (r / reason
            :ARG1-of (f2 / fuck-01
                  :polarity -
                  :ARG0 (ii / i))))"
omg!!! Look at that mother fucker!!! It's a fucking radioactive goliath spiderdevil!!! It is literally the spawn of satan,"# ::snt omg!!! Look at that mother fucker!!! It's a fucking radioactive goliath spiderdevil!!! It is literally the spawn of satan
(m / multi-sentence
      :snt1 (o / oh-my-god
            :mode expressive)
      :snt2 (l / look-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p / person
                  :ARG0-of (f / fuck-01
                        :ARG1 (p2 / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (m2 / mother))))))
      :snt3 (g / goliath
            :mod (r / radioactive)
            :mod (f2 / fucking)
            :domain (ii / it))
      :snt4 (s / spawn
            :poss (s2 / satan)
            :mod (l2 / literal)
            :domain (ii2 / it)))"
mate that thing would end wars.,"# ::snt mate that thing would end wars.
(e / end-01
      :ARG0 (m / mate-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (t / thing
                  :mod (t2 / that)))
      :ARG1 (w / war))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
THATS NOT REAL.,"# ::snt THATS NOT REAL.
(r / real-04
      :polarity -
      :ARG1 (t / that))"
Same here - the pic is bad enough!,"# ::snt Same here - the pic is bad enough!
(m / multi-sentence
      :snt1 (s / same-01
            :location (h / here))
      :snt2 (b / bad-07
            :ARG1 (p / pic)
            :ARG2-of (h2 / have-degree-91
                  :ARG1 p
                  :ARG3 (e / enough))))"
thought you should know,"# ::snt thought you should know
(t / think-01
      :ARG1 (r / recommend-01
            :ARG1 (k / know-01
                  :ARG0 (y / you))
            :ARG2 y))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
absolutely not,"# ::snt absolutely not
(h / have-polarity-91
      :ARG2 -
      :degree (a / absolute))"
,"# ::snt 
(a / amr-empty)"
right... I hope that isn't real...,"# ::snt right... I hope that isn't real...
(m / multi-sentence
      :snt1 (r / right-06)
      :snt2 (h / hope-01
            :ARG0 (ii / i)
            :ARG1 (r2 / real-04
                  :polarity -
                  :ARG1 (t / that))))"
I've never seen so much nope in one picture.,"# ::snt I've never seen so much nope in one picture.
(s / see-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (n / nope
            :quant (m / much
                  :degree (s2 / so)))
      :time (e / ever)
      :location (p / picture
            :quant 1))"
,"# ::snt 
(a / amr-empty)"
that's PROB under your bed with the rest of the spiders,"# ::snt that's PROB under your bed with the rest of the spiders
(b / be-located-at-91
      :ARG1 (a / and
            :op1 (r / reputation
                  :domain (t / that))
            :op2 (r2 / rest
                  :ARG1-of (ii / include-91
                        :ARG2 (s / spider))))
      :ARG2 (u / under
            :op1 (b2 / bed
                  :poss (y / you))))"
You should get one as a pet and walk it down the street on a leash to freak out your neighbors,"# ::snt You should get one as a pet and walk it down the street on a leash to freak out your neighbors
(r / recommend-01
      :ARG1 (a / and
            :op1 (g / get-01
                  :ARG0 (y / you)
                  :ARG1 (o / one)
                  :prep-as (p / pet))
            :op2 (w / walk-01
                  :ARG0 y
                  :ARG1 o
                  :ARG2 (s / street)
                  :direction (d / down)
                  :manner (l / leash-01
                        :ARG1 o)
                  :purpose (f / freak-out-02
                        :ARG1 (n / neighbor
                              :poss y))))
      :ARG2 y)"
