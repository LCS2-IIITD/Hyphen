comment,amr
WHAT IF HE BREEDS THOSE DOG SPIDERS,"# ::snt WHAT IF HE BREEDS THOSE DOG SPIDERS
(h / have-condition-91
      :ARG1 (a / amr-unknown)
      :ARG2 (b / break-01
            :ARG0 (h2 / he)
            :ARG1 (t / thing
                  :ARG2-of (s / spoil-01
                        :ARG1 (d / dog))
                  :mod (t2 / that))))"
: Meet the South American Goliath birdeater - a the size of a puppy,"# ::snt : Meet the South American Goliath birdeater - a the size of a puppy
(m / meet-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (b / birdeater
            :name (n / name
                  :op1 ""South""
                  :op2 ""American""
                  :op3 ""Goliath"")
            :ARG1-of (s / size-01
                  :ARG2 (p / puppy))))"
,"# ::snt 
(a / amr-empty)"
:OMG I Heard About It But I Sure Didn't Wanna See It,"# ::snt :OMG I Heard About It But I Sure Didn't Wanna See It
(c / contrast-01
      :ARG1 (h / hear-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / it))
      :ARG2 (w / want-01
            :polarity -
            :ARG0 ii
            :ARG1 (s / see-01
                  :ARG0 ii
                  :ARG1 ii2)
            :ARG1-of (s2 / sure-02)))"
and,"# ::snt and
(a / and)"
: Meet the South American Goliath birdeater -- a spider the size of a puppy,"# ::snt : Meet the South American Goliath birdeater -- a spider the size of a puppy
(m / meet-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (b / birdeater
            :name (n / name
                  :op1 ""South""
                  :op2 ""American""
                  :op3 ""Goliath"")
            :mod (s / species
                  :name (n2 / name
                        :op1 ""Spider"")
                  :ARG1-of (s2 / size-01
                        :ARG2 (p / puppy)))))"
,"# ::snt 
(a / amr-empty)"
 South American Goliath birdeater -- the size of a puppy: dis shit gives me nightmares,"# ::snt  South American Goliath birdeater -- the size of a puppy: dis shit gives me nightmares
(b / birdeater
      :name (n / name
            :op1 ""Goliath"")
      :mod (c / country
            :name (n2 / name
                  :op1 ""South""
                  :op2 ""America""))
      :ARG1-of (s / size-01
            :ARG2 (p / puppy))
      :ARG0-of (g / give-01
            :ARG1 (n3 / nightmares)
            :ARG2 (ii / i)))"
,"# ::snt 
(a / amr-empty)"
