comment,amr
OMG! Make it go away! Make it go away!,"# ::snt OMG! Make it go away! Make it go away!
(m / multi-sentence
      :snt1 (o / oh-my-god
            :mode expressive)
      :snt2 (m2 / make-02
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (g / go-02
                  :ARG0 (ii / it)
                  :direction (a / away)))
      :snt3 (m3 / make-02
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (g2 / go-02
                  :ARG0 (ii2 / it)
                  :direction (a2 / away))))"
holee crap....that's huge,"# ::snt holee crap....that's huge
(m / multi-sentence
      :snt1 (c / crap-01
            :mod (h / hole))
      :snt2 (h2 / huge
            :domain (t / that)))"
"I want to do a test on it too. It's, how loud the squish sound will be from it getting smashed!","# ::snt I want to do a test on it too. It's, how loud the squish sound will be from it getting smashed!
(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (ii / i)
            :ARG1 (t / test-01
                  :ARG0 ii
                  :ARG1 (ii2 / it)
                  :mod (t2 / too)))
      :snt2 (a / and
            :op1 (ii3 / it)
            :op2 (l / loud
                  :degree (s / so)
                  :ARG1-of (c / cause-01
                        :ARG0 (s2 / smash-01
                              :ARG1 (ii4 / it)))
                  :domain (s3 / sound
                        :mod (s4 / squish-01)))))"
here you go.,"# ::snt here you go.
(g / go-01
      :ARG1 (y / you)
      :ARG4 (h / here))"
Holy bleep! That's huge!!!,"# ::snt Holy bleep! That's huge!!!
(m / multi-sentence
      :snt1 (b / bleep-01
            :mode expressive
            :mod (h / holy))
      :snt2 (h2 / huge
            :domain (t / that)))"
"that huge spider? How about a ""Scared S**tless"" myth? See who spoils their shorts first.","# ::snt that huge spider? How about a ""Scared S**tless"" myth? See who spoils their shorts first.
(m / multi-sentence
      :snt1 (t / thing
            :polarity (a / amr-unknown)
            :topic (s / spider
                  :mod (h / huge)
                  :mod (t2 / that)))
      :snt2 (a2 / amr-unknown
            :topic (m2 / myth
                  :mod (s2 / scare-01
                        :ARG0 (s3 / shitless))))
      :snt3 (s4 / see-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s5 / spoil-01
                  :ARG0 (a3 / amr-unknown)
                  :ARG1 (s6 / shorts
                        :poss (t3 / they))
                  :ord (o / ordinal-entity
                        :value 1))))"
have you seen this one.,"# ::snt have you seen this one.
(s / see-01
      :polarity (a / amr-unknown)
      :ARG0 (y / you)
      :ARG1 (o / one
            :mod (t / this)))"
yr old: not even phased by the large grossness.,"# ::snt yr old: not even phased by the large grossness.
(p / phase-01
      :polarity -
      :ARG0 (g / gross-03
            :mod (l / large))
      :ARG1 (p2 / person
            :age (t / temporal-quantity
                  :quant 1
                  :unit (y / year)))
      :mod (e / even))"
I think he's over there with Grant sprinting at top speed...away,"# ::snt I think he's over there with Grant sprinting at top speed...away
(a / and
      :op1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (b / be-located-at-91
                  :ARG1 (h / he)
                  :ARG2 (t2 / there)))
      :op2 (s / sprint-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Grant""))
            :manner (s2 / speed
                  :mod (t3 / top))
            :direction (a2 / away)))"
Yep. Similar to this pic of 'Giant Camel Spiders'. Subject much closer to camera.,"# ::snt Yep. Similar to this pic of 'Giant Camel Spiders'. Subject much closer to camera.
(m / multi-sentence
      :snt1 (y / yep)
      :snt2 (r / resemble-01
            :ARG1 (p / pic
                  :topic (s / spaceship
                        :name (n / name
                              :op1 ""Giant""
                              :op2 ""Camel""
                              :op3 ""Spiders"")))
            :ARG2 (p2 / pic
                  :mod (t / this)))
      :snt3 (c / close-10
            :ARG1 (s2 / subject)
            :ARG2 (c2 / camera)
            :ARG2-of (h / have-degree-91
                  :ARG1 s2
                  :ARG3 (m2 / more
                        :quant (m3 / much)))))"
(announcer voice) How fast can a mythbuster move when this creapy crawly lands on them.,"# ::snt (announcer voice) How fast can a mythbuster move when this creapy crawly lands on them.
(m / multi-sentence
      :snt1 (v / voice-01
            :ARG0 (p / person
                  :ARG0-of (a / announce-01)))
      :snt2 (p2 / possible-01
            :ARG1 (m2 / move-02
                  :ARG0 (m3 / mythbuster)
                  :time (l / land-01
                        :ARG1 (c / crawly
                              :mod (t / this)
                              :ARG0-of (c2 / creak-01))
                        :ARG2 (t2 / they))
                  :ARG1-of (f / fast-02
                        :degree (a2 / amr-unknown)))))"
that's actual size.,"# ::snt that's actual size.
(s / size
      :ARG1-of (a / actual-02)
      :domain (t / that))"
: Adam we should do a test with this spider! ...Adam?,"# ::snt : Adam we should do a test with this spider! ...Adam?
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (r / recommend-01
            :ARG0 ii
            :ARG1 (t / test-01
                  :ARG0 (w / we)
                  :ARG1 (s2 / spider
                        :mod (t2 / this)))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Adam""))
            :polarity (a / amr-unknown))
      :ARG2 p)"
"can you call the epic spider episode ""NOPE"" and combine it with some kind of fire weapon test?","# ::snt can you call the epic spider episode ""NOPE"" and combine it with some kind of fire weapon test?
(p / possible-01
      :polarity (a / amr-unknown)
      :ARG1 (a2 / and
            :op1 (c / call-01
                  :ARG0 (y / you)
                  :ARG1 (e / episode
                        :mod (e2 / epic)
                        :topic (t / thing
                              :name (n / name
                                    :op1 ""Spider"")))
                  :ARG2 (t2 / thing
                        :name n
                        :op1 ""NOPE"")))
      :op2 (c2 / combine-01
            :ARG0 y
            :ARG1 e
            :ARG2 (t3 / test-01
                  :ARG1 (w / weapon
                        :ARG2-of (f / fire-01))
                  :mod (k / kind
                        :mod (s / some)))))"
Well I know what's haunting my nightmares tonight.,"# ::snt Well I know what's haunting my nightmares tonight.
(k / know-01
      :ARG0 (ii / i)
      :ARG1 (h / haunt-01
            :ARG0 (t / thing)
            :ARG1 (n / nightmare
                  :poss ii)
            :time (d / date-entity
                  :dayperiod (n2 / night)
                  :mod (t2 / today)))
      :mod (w / well))"
Yes drop it in a room full of soccer moms to see which one dives out of a window &amp; which runs through a wall leaving an outline,"# ::snt Yes drop it in a room full of soccer moms to see which one dives out of a window &amp; which runs through a wall leaving an outline
(d / drop-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / it)
      :location (r / room
            :ARG1-of (f / full-09
                  :ARG2 (m / mom
                        :mod (s / soccer))))
      :purpose (s2 / see-01
            :ARG0 y
            :ARG1 (d2 / dive-01
                  :ARG0 (o / one)
                  :source (a / and
                        :op1 (w / window)
                        :op2 (a2 / amp)
                        :ARG1-of (r2 / run-04
                              :path (t / through
                                    :op1 (w2 / wall))
                              :ARG0-of (l / leave-13
                                    :ARG1 (o2 / outline-01)))))))"
no no no.... What is it!!!,"# ::snt no no no.... What is it!!!
(m / multi-sentence
      :snt1 (n / no)
      :snt2 n
      :snt3 (a / amr-unknown
            :domain (ii / it)))"
"Petite little beauty ain't it, what?!","# ::snt Petite little beauty ain't it, what?!
(b / beautiful-02
      :ARG1 (t / thing)
      :mod (l / little)
      :mod (p / precious)
      :ARG1-of (r / request-confirmation-91))"
How big would your slipper have to be?,"# ::snt How big would your slipper have to be?
(o / obligate-01
      :ARG2 (b / big
            :degree (a / amr-unknown)
            :domain (s / slipper
                  :poss (y / you))))"
"I think has been replaced by a series of clouds that spell out, ""hell no.""","# ::snt I think has been replaced by a series of clouds that spell out, ""hell no.""
(r / replace-01
      :ARG1 (c / cloud
            :quant (s / series)
            :ARG0-of (s2 / spell-out-03
                  :ARG1 (n / no
                        :mod (h / hell
                              :mode expressive))))
      :ARG2 (t / think-01
            :ARG0 (ii / i)))"
That's actually Adam in costume. He's outdone himself this time.,"# ::snt That's actually Adam in costume. He's outdone himself this time.
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Adam"")
            :domain (t / that)
            :ARG1-of (c / costume-01)
            :ARG1-of (a / actual-02))
      :snt2 (o / outdo-01
            :ARG0 (h / he)
            :ARG1 h
            :time (t2 / time
                  :mod (t3 / this))))"
Only if it's different ways to kill it.,"# ::snt Only if it's different ways to kill it.
(h / have-condition-91
      :ARG2 (w / way
            :manner-of (k / kill-01
                  :ARG1 (ii / it))
            :ARG1-of (d / differ-02))
      :mod (o / only))"
&lt;has officially died of a massive heart attack *shiver*,"# ::snt &lt;has officially died of a massive heart attack *shiver*
(a / and
      :op2 (d / die-01
            :ARG1 (h / he)
            :ARG1-of (c / cause-01
                  :ARG0 (h2 / heart-attack
                        :mod (m / massive)))
            :mod (o / official)
            :mod (s / shiver-01)))"
: Adam we should do a test with this spider! ...Adam?,"# ::snt : Adam we should do a test with this spider! ...Adam?
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (r / recommend-01
            :ARG0 ii
            :ARG1 (t / test-01
                  :ARG0 (w / we)
                  :ARG1 (s2 / spider
                        :mod (t2 / this)))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Adam""))
            :polarity (a / amr-unknown))
      :ARG2 p)"
"ale kurwa czemu ja na to zdjecie patrze,mam zy w oczach","# ::snt ale kurwa czemu ja na to zdjecie patrze,mam zy w oczach
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Czemu""
                        :op2 ""Ja"")
                  :mod (k / kurwa))
            :ARG1 (z / zdjecie))
      :snt2 (p2 / possible-01
            :ARG1 (z2 / zy
                  :manner (w / w))))"
"piotr naskrecki,hmm poland","# ::snt piotr naskrecki,hmm poland
(p / person
      :name (n / name
            :op1 ""piotr""
            :op2 ""Naskrecki"")
      :mod (h / hmm
            :mode expressive))"
Get. The. Fuck.,"# ::snt Get. The. Fuck.
(g / get-02
      :mode imperative
      :ARG0 (y / you)
      :mod (f / fuck
            :mode expressive))"
Forced Perspective!,"# ::snt Forced Perspective!
(p / perspective
      :ARG1-of (f / force-02))"
ewwww!,"# ::snt ewwww!
(e / ewww
      :mode expressive)"
An underwear absorption test perhaps?,"# ::snt An underwear absorption test perhaps?
(p / possible-01
      :ARG1 (t / test-01
            :ARG1 (a / absorb-01
                  :ARG1 (u / underwear)))
      :polarity (a2 / amr-unknown))"
