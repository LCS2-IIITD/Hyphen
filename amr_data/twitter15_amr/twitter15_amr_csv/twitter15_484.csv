comment,amr
"Nope! RT : Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew","# ::snt Nope! RT : Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew
(m / multi-sentence
      :snt1 (n / nope
            :mode expressive)
      :snt2 (s / say-01
            :ARG0 (p / publication
                  :name (n2 / name
                        :op1 ""RT""))
            :ARG1 (t / test-01
                  :ARG0 (c / company
                        :name (n3 / name
                              :op1 ""Pepsi""))
                  :ARG1 (p2 / product
                        :name (n4 / name
                              :op1 ""Mountain""
                              :op2 ""Dew"")
                        :ARG1-of (f / Flavor-01
                              :ARG2 c
                              :name (n5 / name
                                    :op1 ""Doritos""))))
            :ARG1-of (a / actual-02))
      :ARG2 (p3 / person
            :name (n6 / name
                  :op1 ""Sweet""
                  :op2 ""Lord"")
            :ARG1-of (g / good-02)))"
haha.. This has to be delicious right,"# ::snt haha.. This has to be delicious right
(o / obligate-01
      :ARG2 (d / delicious
            :domain (t / this))
      :ARG1-of (r / right-02)
      :mod (h / haha
            :mode expressive))"
Yuck!,"# ::snt Yuck!
(y / yuck
      :mode expressive)"
,"# ::snt 
(a / amr-empty)"
not sure how I feel about this,"# ::snt not sure how I feel about this
(s / sure-02
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (t / thing
            :ARG1-of (f / feel-01
                  :ARG0 ii
                  :ARG2 (t2 / this))))"
": Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew science has gone too far","# ::snt : Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew science has gone too far
(g / go-01
      :ARG1 (s / science
            :topic (c / company
                  :name (n / name
                        :op1 ""Mountain""
                        :op2 ""Dew"")
                  :ARG1-of (f / favor-01
                        :ARG2 (c2 / company
                              :name (n2 / name
                                    :op1 ""Pepsi""))))
            :ARG1-of (a / actual-02))
      :ARG4 (f2 / far
            :ARG2-of (h / have-degree-91
                  :ARG1 s
                  :ARG3 (t / too)))
      :ARG1-of (s2 / say-01
            :ARG0 (p / person
                  :name (n3 / name
                        :op1 ""Sweet""
                        :op2 ""Lord"")
                  :ARG1-of (g2 / good-02))))"
...,"# ::snt ...
(a / amr-empty)"
": Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew","# ::snt : Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew
(s / say-01
      :ARG1 (t / test-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Pepsi""))
            :ARG1 (p / product
                  :name (n2 / name
                        :op1 ""Mountain""
                        :op2 ""Dew"")
                  :ARG1-of (f / Flavor-01
                        :ARG2 c
                        :name (n3 / name
                              :op1 ""Doritos""))))
      :ARG1-of (a / actual-02)
      :ARG2 (p2 / person
            :name (n4 / name
                  :op1 ""Sweet""
                  :op2 ""Lord"")
            :ARG1-of (g / good-02)))"
sounds like something Barry Kripke invented on the,"# ::snt sounds like something Barry Kripke invented on the
(s / sound-01
      :ARG2 (s2 / something
            :ARG1-of (ii / invent-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Barry""
                              :op2 ""Kripke""))
                  :medium (t / thing))))"
"because this is what America needs, liquid diabetes.","# ::snt because this is what America needs, liquid diabetes.
(c / cause-01
      :ARG0 (n / need-01
            :ARG0 (c2 / country
                  :name (n2 / name
                        :op1 ""America""))
            :ARG1 (d / diabetes
                  :mod (l / liquid))))"
": Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew gross","# ::snt : Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew gross
(s / say-01
      :ARG1 (t / test-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Pepsi""))
            :ARG1 (p / product
                  :name (n2 / name
                        :op1 ""Mountain""
                        :op2 ""Dew"")
                  :ARG1-of (f / Flavor-01
                        :ARG2 c
                        :name (n3 / name
                              :op1 ""Doritos""))))
      :ARG1-of (a / actual-02)
      :ARG2 (p2 / person
            :name (n4 / name
                  :op1 ""Sweet""
                  :op2 ""Lord"")
            :ARG1-of (g / good-02)))"
": Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew what the hell","# ::snt : Good Sweet Lord, Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew what the hell
(s / say-01
      :ARG1 (t / test-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Pepsi""))
            :ARG1 (p / product
                  :name (n2 / name
                        :op1 ""Mountain""
                        :op2 ""Dew"")
                  :ARG1-of (f / Flavor-01
                        :ARG2 c
                        :name (n3 / name
                              :op1 ""Doritos""))))
      :ARG1-of (a / actual-02)
      :mod (a2 / amr-unknown
            :mod (h / hell
                  :mode expressive))
      :ARG2 (p2 / person
            :name (n4 / name
                  :op1 ""Sweet""
                  :op2 ""Lord"")
            :ARG1-of (g / good-02)))"
Dewitos is how Kripke says Doritos on The Big Bang Theory.,"# ::snt Dewitos is how Kripke says Doritos on The Big Bang Theory.
(t / thing
      :manner-of (s / say-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Kripke""))
            :ARG1 (p2 / product
                  :name (n2 / name
                        :op1 ""Doritos""))
            :medium (b / broadcast-program
                  :name (n3 / name
                        :op1 ""The""
                        :op2 ""Big""
                        :op3 ""Bang""
                        :op4 ""Theory"")))
      :domain p2)"
"that is truely horrid. Now, if it was fondue flavour...","# ::snt that is truely horrid. Now, if it was fondue flavour...
(m / multi-sentence
      :snt1 (h / horrid
            :degree (t / true-01)
            :domain (t2 / that))
      :snt2 (h2 / have-condition-91
            :ARG2 (f / flavor
                  :mod (f2 / fondue)
                  :domain (ii / it))
            :time (n / now)))"
,"# ::snt 
(a / amr-empty)"
kinjax AMAZING RESULTS SEE BELOWGET YOURS NOW!HURRY WHILE STOCKS LAST,"# ::snt kinjax AMAZING RESULTS SEE BELOWGET YOURS NOW!HURRY WHILE STOCKS LAST
(m / multi-sentence
      :snt1 (s / see-01
            :mode expressive
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""kinjax""))
            :ARG1 (r / result
                  :ARG0-of (a / amaze-01))
            :location (b / below))
      :snt2 (g / get-05
            :mode imperative
            :ARG0 (y / you)
            :ARG1 y
            :time (n2 / now)
            :time (l / lock-01
                  :time (l2 / last))))"
: Pepsi Is Testing A Doritos-Flavored Mountain Dew. Not even sure what to say,"# ::snt : Pepsi Is Testing A Doritos-Flavored Mountain Dew. Not even sure what to say
(m / multi-sentence
      :snt1 (t / test-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Pepsi""))
            :ARG1 (p / product
                  :name (n2 / name
                        :op1 ""Mountain""
                        :op2 ""Dew"")
                  :ARG1-of (f / favor-01
                        :ARG2 (p2 / product
                              :name (n3 / name
                                    :op1 ""Doritos"")))))
      :snt2 (s / sure-02
            :polarity -
            :ARG1 (t2 / thing
                  :ARG1-of (s2 / say-01))
            :mod (e / even)))"
Is this real life? MT : Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew,"# ::snt Is this real life? MT : Pepsi Is Actually Testing A Doritos-Flavored Mountain Dew
(m / multi-sentence
      :snt1 (l / life
            :polarity (a / amr-unknown)
            :ARG1-of (r / real-04)
            :domain (t / this))
      :snt2 (t2 / test-01
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""Pepsi""))
            :ARG1 (p / product
                  :name (n2 / name
                        :op1 ""Mountain""
                        :op2 ""Dew"")
                  :ARG1-of (f / Flavor-00
                        :ARG2 c
                        :name (n3 / name
                              :op1 ""Doritos""))))
      :ARG1-of (a2 / actual-02))"
"aka ""the onion"" feed bag","# ::snt aka ""the onion"" feed bag
(b / bag
      :ARG2-of (f / feed-01
            :ARG1 (a / animal
                  :name (n / name
                        :op1 ""ion"")))
      :ARG1-of (n2 / name-01
            :ARG2 a))"
breaking the mold.,"# ::snt breaking the mold.
(b / break-01
      :ARG1 (m / mold))"
