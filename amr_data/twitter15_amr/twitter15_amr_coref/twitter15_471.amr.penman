# ::snt yes I'd say puppy size, my pup is a tea cup so this spider would scare the crap outta her!
# ::tokens ["yes", "I", "'d", "say", "puppy", "size", ",", "my", "pup", "is", "a", "tea", "cup", "so", "this", "spider", "would", "scare", "the", "crap", "outta", "her", "!"]
# ::lemmas ["yes", "i", "would", "say", "puppy", "size", ",", "my", "pup", "be", "a", "tea", "cup", "so", "this", "spider", "would", "scare", "the", "crap", "outta", "she", "!"]
(c2-7 / multi-sentence
      :snt1 (c2-0 / say-01
                  :ARG0 (c2-2 / i)
                  :ARG1 (c2-1 / size-01
                              :ARG1 (c2-3 / puppy)))
      :snt2 (c2-10 / cup
                   :mod (c2-5 / tea)
                   :domain (c2-16 / person
                                  :ARG0-of (c2-12 / have-rel-role-91
                                                  :ARG1 (c2-14 / i)
                                                  :ARG2 (c2-15 / pup)))
                   :ARG0-of (c2-8 / cause-01
                                  :ARG1 (c2-9 / scare-01
                                              :ARG0 (c2-6 / thing
                                                          :mod (c2-4 / this)
                                                          :ARG0-of (c2-11 / crawl-01))
                                              :ARG1 (c2-17 / she)
                                              :ARG1-of (c2-13 / crap-01)))))

# ::snt If that came into my house I'd burn the whole thing!
# ::tokens ["If", "that", "came", "into", "my", "house", "I", "'d", "burn", "the", "whole", "thing", "!"]
# ::lemmas ["if", "that", "come", "into", "my", "house", "i", "would", "burn", "the", "whole", "thing", "!"]
(c3-1 / burn-01
      :ARG0 (c3-0 / i)
      :ARG1 (c3-2 / thing
                  :mod (c3-6 / whole))
      :condition (c3-4 / come-01
                       :ARG1 (c3-3 / that)
                       :ARG4 (c3-5 / house
                                   :poss c3-0)))

# ::snt I think I'd call it something other than surprised!
# ::tokens ["I", "think", "I", "'d", "call", "it", "something", "other", "than", "surprised", "!"]
# ::lemmas ["i", "think", "i", "would", "call", "it", "something", "other", "than", "surprised", "!"]
(c4-3 / think-01
      :ARG0 (c4-1 / i)
      :ARG1 (c4-5 / call-01
                  :ARG0 c4-1
                  :ARG1 (c4-6 / it)
                  :ARG2 (c4-0 / something
                              :mod (c4-4 / other)
                              :ARG2-of (c4-7 / except-01
                                             :ARG1 (c4-2 / surprise-01)))))

# ::snt Wait, are you saying we made this somehow?
# ::tokens ["Wait", ",", "are", "you", "saying", "we", "made", "this", "somehow", "?"]
# ::lemmas ["wait", ",", "be", "you", "say", "we", "make", "this", "somehow", "?"]
(c5-8 / and
      :op1 (c5-1 / wait-01
                 :ARG1 (c5-7 / you)
                 :mode imperative)
      :op2 (c5-0 / say-01
                 :ARG0 c5-7
                 :ARG1 (c5-4 / make-01
                             :ARG0 (c5-6 / we)
                             :ARG1 (c5-3 / this)
                             :manner (c5-2 / somehow))
                 :polarity (c5-5 / amr-unknown)))

# ::snt Au sacuvaj Boze koliki pauk,pa ovo da sretnem ispod kreveta podigao bi i krevet na plafon
# ::tokens ["Au", "sacuvaj", "Boze", "koliki", "pauk", ",", "pa", "ovo", "da", "sretnem", "ispod", "kreveta", "podigao", "bi", "i", "krevet", "na", "plafon"]
# ::lemmas ["Au", "sacuvaj", "Boze", "koliki", "pauk", ",", "pa", "ovo", "da", "sretnem", "ispod", "kreveta", "podigao", "bi", "i", "krevet", "na", "plafon"]
(c7-11 / multi-sentence
       :snt1 (c7-0 / say-01
                   :ARG0 (c7-1 / i)
                   :ARG1 (c7-10 / person
                                :name (c7-14 / name
                                             :op1 "Bolaze"))
                   :ARG2 (c7-16 / person
                                :name (c7-13 / name
                                             :op1 "Pauk")))
       :snt2 (c7-17 / have-mod-91
                    :ARG1 (c7-8 / person
                                :ARG0-of (c7-3 / have-org-role-91
                                               :ARG1 (c7-5 / political-party
                                                           :name (c7-6 / name
                                                                       :op1 "PKK"))
                                               :ARG2 (c7-7 / member)))
                    :ARG2 (c7-12 / person
                                 :ARG0-of (c7-4 / shit-01)))
       :snt3 (c7-2 / podigao
                   :mod (c7-9 / person
                              :ARG0-of c7-3
                              :ARG1 c7-5))
       :snt4 (c7-18 / krevet
                    :mod (c7-19 / person
                                :name (c7-15 / name
                                             :op1 "plafon"))))

# ::snt sjeez scary
# ::tokens ["sjeez", "scary"]
# ::lemmas ["sjeez", "scary"]
(c8-0 / scary-03
      :mod (c8-1 / jeez
                 :mode expressive))

# ::snt you can barely see it in the first pic
# ::tokens ["you", "can", "barely", "see", "it", "in", "the", "first", "pic"]
# ::lemmas ["you", "can", "barely", "see", "it", "in", "the", "first", "pic"]
(c10-3 / possible-01
       :ARG1 (c10-0 / see-01
                    :ARG0 (c10-5 / you)
                    :ARG1 (c10-2 / it)
                    :degree (c10-1 / barely)
                    :location (c10-6 / pic
                                     :ord (c10-4 / ordinal-entity
                                                 :value 1))))

# ::snt See?! You made me miss my idiotic auto correct!
# ::tokens ["See", "?", "!", "You", "made", "me", "miss", "my", "idiotic", "auto", "correct", "!"]
# ::lemmas ["see", "?", "!", "you", "make", "i", "miss", "my", "idiotic", "auto", "correct", "!"]
(c11-3 / multi-sentence
       :snt1 (c11-1 / see-01
                    :ARG0 (c11-6 / you)
                    :mode expressive)
       :snt2 (c11-9 / make-02
                    :ARG0 (c11-0 / you)
                    :ARG1 (c11-4 / miss-02
                                 :ARG0 (c11-2 / i)
                                 :ARG1 (c11-5 / correct-02
                                              :ARG1 (c11-8 / auto
                                                           :poss c11-2)
                                              :mod (c11-7 / idiotic)))))

# ::snt that is one big spidey
# ::tokens ["that", "is", "one", "big", "spidey"]
# ::lemmas ["that", "be", "one", "big", "spidey"]
(c12-0 / spidey
       :mod (c12-1 / big)
       :domain (c12-2 / that)
       :quant 1)

# ::snt I am going to MUTE you!! I'm too damn inquisition &amp; I'll end up looking!
# ::tokens ["I", "am", "going", "to", "MUTE", "you", "!", "!", "I", "'m", "too", "damn", "inquisition", "&", "amp", ";", "I", "'ll", "end", "up", "looking", "!"]
# ::lemmas ["i", "be", "go", "to", "MUTE", "you", "!", "!", "i", "be", "too", "damn", "inquisition", "&", "amp", ";", "i", "'ll", "end", "up", "look", "!"]
(c13-5 / multi-sentence
       :snt1 (c13-12 / make-02
                     :ARG0 (c13-1 / i)
                     :ARG1 (c13-8 / you)
                     :mode expressive)
       :snt2 (c13-11 / and
                     :op1 (c13-10 / inquire-01
                                  :ARG0 (c13-2 / i)
                                  :ARG1-of (c13-0 / damn-01)
                                  :ARG2-of (c13-9 / have-degree-91
                                                  :ARG1 c13-2
                                                  :ARG3 (c13-3 / too)))
                     :op2 (c13-6 / amp)
                     :ARG0-of (c13-7 / cause-01
                                     :ARG1 (c13-13 / end-up-03
                                                   :ARG1 c13-2
                                                   :ARG2 (c13-4 / look-02
                                                                :ARG0 c13-2)))))

# ::snt Nope! : Goliath Encounter: Puppy-Sized Spider Surprises Scientist in Rainforest
# ::tokens ["Nope", "!", ":", "Goliath", "Encounter", ":", "Puppy", "-", "Sized", "Spider", "Surprises", "Scientist", "in", "Rainforest"]
# ::lemmas ["nope", "!", ":", "Goliath", "Encounter", ":", "Puppy", "-", "Sized", "Spider", "Surprises", "Scientist", "in", "Rainforest"]
(c14-4 / multi-sentence
       :snt1 (c14-8 / nope
                    :mode expressive)
       :snt2 (c14-0 / surprise-01
                    :ARG0 (c14-10 / encounter-01
                                  :ARG1 (c14-2 / person
                                               :name (c14-7 / name
                                                            :op1 "Goliath")))
                    :ARG1 (c14-11 / person
                                  :ARG0-of (c14-6 / have-org-role-91
                                                  :ARG2 (c14-1 / scientist))
                                  :ARG1-of (c14-5 / size-01
                                                  :ARG2 (c14-12 / Spider
                                                                :mod (c14-9 / puppy))))
                    :location (c14-3 / rainforest)))

# ::snt The real reason behind wildfires...
# ::tokens ["The", "real", "reason", "behind", "wildfires", "..."]
# ::lemmas ["the", "real", "reason", "behind", "wildfire", "..."]
(c15-2 / cause-01
       :ARG0 (c15-0 / wildfire)
       :ARG1-of (c15-1 / real-04))

# ::snt : Goliath Encounter: Puppy-Sized Spider Surprises Scientist in Rainforest chilll
# ::tokens [":", "Goliath", "Encounter", ":", "Puppy", "-", "Sized", "Spider", "Surprises", "Scientist", "in", "Rainforest", "chilll"]
# ::lemmas [":", "Goliath", "Encounter", ":", "Puppy", "-", "Sized", "Spider", "Surprises", "Scientist", "in", "Rainforest", "chilll"]
(c16-10 / and
        :op1 (c16-12 / encounter-01
                     :ARG1 (c16-2 / person
                                  :name (c16-6 / name
                                               :op1 "Goliath")))
        :op2 (c16-0 / surprise-01
                    :ARG0 (c16-3 / thing
                                 :name (c16-9 / name
                                              :op1 "Spider")
                                 :ARG1-of (c16-1 / size-01
                                                 :ARG2 (c16-13 / puppy)))
                    :ARG1 (c16-11 / person
                                  :ARG0-of (c16-8 / have-org-role-91
                                                  :ARG2 (c16-5 / scientist)))
                    :location (c16-7 / chilll
                                     :location (c16-4 / rainforest))))

# ::snt it is rat sized .. water rat sized. Not Puppy sized at all .. even if that were the same volume
# ::tokens ["it", "is", "rat", "sized", "..", "water", "rat", "sized", ".", "Not", "Puppy", "sized", "at", "all", "..", "even", "if", "that", "were", "the", "same", "volume"]
# ::lemmas ["it", "be", "rat", "sized", "..", "water", "rat", "size", ".", "not", "Puppy", "size", "at", "all", "..", "even", "if", "that", "be", "the", "same", "volume"]
(c17-8 / multi-sentence
       :snt1 (c17-0 / size-01
                    :ARG1 (c17-3 / it)
                    :ARG2 (c17-10 / rat))
       :snt2 (c17-2 / size-01
                    :ARG1 (c17-1 / water)
                    :ARG2 (c17-5 / rat))
       :snt3 (c17-9 / size-01
                    :ARG1 (c17-4 / puppy)
                    :ARG2 (c17-7 / at-all)
                    :concession (c17-12 / even-if
                                        :op1 (c17-11 / volume
                                                     :ARG1-of (c17-13 / same-01)
                                                     :domain (c17-6 / that)))
                    :polarity -))

# ::snt impressive!!
# ::tokens ["impressive", "!", "!"]
# ::lemmas ["impressive", "!", "!"]
(c18-0 / impress-01
       :mode expressive)

# ::snt Amazing i want one... kinda
# ::tokens ["Amazing", "i", "want", "one", "...", "kinda"]
# ::lemmas ["amazing", "i", "want", "one", "...", "kinda"]
(c19-3 / amaze-01
       :ARG0 (c19-0 / want-01
                    :ARG0 (c19-1 / i)
                    :ARG1 (c19-2 / one))
       :degree (c19-4 / kind-of))

# ::snt nope
# ::tokens ["nope"]
# ::lemmas ["nope"]
(c20-0 / nope)
