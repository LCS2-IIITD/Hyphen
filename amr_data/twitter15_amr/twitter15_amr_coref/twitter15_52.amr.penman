# ::snt : . successfully predicted the final score of .Very true they predicted it just right
# ::tokens [":", ".", "successfully", "predicted", "the", "final", "score", "of", ".Very", "true", "they", "predicted", "it", "just", "right"]
# ::lemmas [":", ".", "successfully", "predict", "the", "final", "score", "of", ".very", "true", "they", "predict", "it", "just", "right"]
(c1-6 / multi-sentence
      :snt1 (c1-2 / predict-01
                  :ARG1 (c1-0 / score
                              :mod (c1-11 / final))
                  :ARG1-of (c1-1 / succeed-01))
      :snt2 (c1-8 / and
                  :op1 (c1-3 / true-01
                             :degree (c1-9 / very))
                  :op2 (c1-10 / predict-01
                              :ARG0 (c1-4 / they)
                              :ARG1 c1-0
                              :ARG1-of (c1-5 / right-06
                                             :mod (c1-7 / just)))))

# ::snt : . successfully predicted the final score of .YES, it's true
# ::tokens [":", ".", "successfully", "predicted", "the", "final", "score", "of", ".YES", ",", "it", "'s", "true"]
# ::lemmas [":", ".", "successfully", "predict", "the", "final", "score", "of", ".yes", ",", "it", "be", "true"]
(c2-5 / multi-sentence
      :snt1 (c2-3 / predict-01
                  :ARG1 (c2-0 / score
                              :mod (c2-6 / final))
                  :ARG1-of (c2-1 / succeed-01))
      :snt2 (c2-4 / true-01
                  :ARG1 (c2-2 / it)))

# ::snt :that a conspiracy! That super bowl was rigged
# ::tokens [":", "that", "a", "conspiracy", "!", "That", "super", "bowl", "was", "rigged"]
# ::lemmas [":", "that", "a", "conspiracy", "!", "that", "super", "bowl", "be", "rig"]
(c3-4 / multi-sentence
      :snt1 (c3-5 / conspiracy
                  :domain (c3-2 / that))
      :snt2 (c3-6 / rig-01
                  :ARG1 (c3-1 / bowl
                              :mod (c3-0 / super)
                              :mod (c3-3 / that))))

# ::snt RT : . successfully predicted the final score of .YES, it's true
# ::tokens ["RT", ":", ".", "successfully", "predicted", "the", "final", "score", "of", ".YES", ",", "it", "'s", "true"]
# ::lemmas ["RT", ":", ".", "successfully", "predict", "the", "final", "score", "of", ".yes", ",", "it", "be", "true"]
(c5-5 / multi-sentence
      :snt1 (c5-3 / predict-01
                  :ARG0 (c5-8 / publication
                              :name (c5-6 / name
                                          :op1 "RT"))
                  :ARG1 (c5-0 / score
                              :mod (c5-7 / final))
                  :ARG1-of (c5-1 / succeed-01))
      :snt2 (c5-4 / true-01
                  :ARG1 (c5-2 / it)))

# ::snt :seahawks shouldve won
# ::tokens [":", "seahawks", "should", "ve", "won"]
# ::lemmas [":", "seahawk", "should", "ve", "win"]
(c6-0 / recommend-01
      :ARG1 (c6-2 / win-01
                  :ARG0 (c6-1 / team
                              :name (c6-3 / name
                                          :op1 "Seahawks"))))

# ::snt : . successfully predicted the final score of .YES, it's true
# ::tokens [":", ".", "successfully", "predicted", "the", "final", "score", "of", ".YES", ",", "it", "'s", "true"]
# ::lemmas [":", ".", "successfully", "predict", "the", "final", "score", "of", ".yes", ",", "it", "be", "true"]
(c7-5 / multi-sentence
      :snt1 (c7-3 / predict-01
                  :ARG1 (c7-0 / score
                              :mod (c7-6 / final))
                  :ARG1-of (c7-1 / succeed-01))
      :snt2 (c7-4 / true-01
                  :ARG1 (c7-2 / it)))

# ::snt :as did I. Man vs machine.
# ::tokens [":", "as", "did", "I.", "Man", "vs", "machine", "."]
# ::lemmas [":", "as", "do", "I.", "Man", "vs", "machine", "."]
(c8-1 / multi-sentence
      :snt1 (c8-5 / event
                  :mod (c8-0 / i))
      :snt2 (c8-4 / versus
                  :op1 (c8-3 / man)
                  :op2 (c8-2 / machine)))

# ::snt : . successfully predicted the final score of .YES, it's true: RIGGED
# ::tokens [":", ".", "successfully", "predicted", "the", "final", "score", "of", ".YES", ",", "it", "'s", "true", ":", "RIGGED"]
# ::lemmas [":", ".", "successfully", "predict", "the", "final", "score", "of", ".yes", ",", "it", "be", "true", ":", "RIGGED"]
(c9-5 / multi-sentence
      :snt1 (c9-3 / predict-01
                  :ARG1 (c9-0 / score
                              :mod (c9-7 / final))
                  :ARG1-of (c9-1 / succeed-01))
      :snt2 (c9-4 / true-01
                  :ARG1 (c9-2 / it))
      :snt3 (c9-6 / rigge-01))

# ::snt : . successfully predicted the final score of .YES, it's true: wtf
# ::tokens [":", ".", "successfully", "predicted", "the", "final", "score", "of", ".YES", ",", "it", "'s", "true", ":", "wtf"]
# ::lemmas [":", ".", "successfully", "predict", "the", "final", "score", "of", ".yes", ",", "it", "be", "true", ":", "wtf"]
(c10-6 / multi-sentence
       :snt1 (c10-4 / predict-01
                    :ARG1 (c10-1 / score
                                 :mod (c10-7 / final))
                    :ARG1-of (c10-2 / succeed-01))
       :snt2 (c10-5 / true-01
                    :ARG1 (c10-3 / it))
       :snt3 (c10-0 / fuck
                    :mode expressive))

# ::snt : . successfully predicted the final score of .YES, it's true
# ::tokens [":", ".", "successfully", "predicted", "the", "final", "score", "of", ".YES", ",", "it", "'s", "true"]
# ::lemmas [":", ".", "successfully", "predict", "the", "final", "score", "of", ".yes", ",", "it", "be", "true"]
(c11-5 / multi-sentence
       :snt1 (c11-3 / predict-01
                    :ARG1 (c11-0 / score
                                 :mod (c11-6 / final))
                    :ARG1-of (c11-1 / succeed-01))
       :snt2 (c11-4 / true-01
                    :ARG1 (c11-2 / it)))

# ::snt  . successfully predicted the final score of .YES, it's true: lucky?
# ::tokens [" ", ".", "successfully", "predicted", "the", "final", "score", "of", ".YES", ",", "it", "'s", "true", ":", "lucky", "?"]
# ::lemmas [" ", ".", "successfully", "predict", "the", "final", "score", "of", ".yes", ",", "it", "be", "true", ":", "lucky", "?"]
(c13-6 / multi-sentence
       :snt1 (c13-3 / predict-01
                    :ARG1 (c13-0 / score
                                 :mod (c13-8 / final))
                    :ARG1-of (c13-1 / succeed-01))
       :snt2 (c13-5 / true-01
                    :ARG1 (c13-2 / it)
                    :polarity (c13-7 / amr-unknown))
       :snt3 (c13-4 / lucky
                    :polarity c13-7))

# ::snt : . successfully predicted the final score of .YES, it's true: rigged
# ::tokens [":", ".", "successfully", "predicted", "the", "final", "score", "of", ".YES", ",", "it", "'s", "true", ":", "rigged"]
# ::lemmas [":", ".", "successfully", "predict", "the", "final", "score", "of", ".yes", ",", "it", "be", "true", ":", "rig"]
(c14-4 / multi-sentence
       :snt1 (c14-2 / predict-01
                    :ARG1 (c14-0 / score
                                 :mod (c14-6 / final))
                    :ARG1-of (c14-1 / succeed-01))
       :snt2 (c14-3 / true-01
                    :polarity -)
       :snt3 (c14-5 / rig-01))

# ::snt Wow crazy! RT . successfully predicted the final score of .It's true
# ::tokens ["Wow", "crazy", "!", "RT", ".", "successfully", "predicted", "the", "final", "score", "of", ".It", "'s", "true"]
# ::lemmas ["wow", "crazy", "!", "RT", ".", "successfully", "predict", "the", "final", "score", "of", ".It", "'s", "true"]
(c15-3 / multi-sentence
       :snt1 (c15-4 / crazy-03
                    :mod (c15-6 / wow)
                    :mode expressive)
       :snt2 (c15-2 / predict-01
                    :ARG0 (c15-8 / publication
                                 :name (c15-5 / name
                                              :op1 "RT."))
                    :ARG1 (c15-0 / score-01
                                 :mod (c15-7 / final))
                    :ARG1-of (c15-1 / succeed-01
                                    :ARG0 c15-8)))

# ::snt :id put money on it that this was recorded after the super bowl happened.
# ::tokens [":", "i", "d", "put", "money", "on", "it", "that", "this", "was", "recorded", "after", "the", "super", "bowl", "happened", "."]
# ::lemmas [":", "i", "d", "put", "money", "on", "it", "that", "this", "be", "record", "after", "the", "super", "bowl", "happen", "."]
(c16-3 / put-01
       :ARG0 (c16-1 / i)
       :ARG1 (c16-6 / money)
       :ARG2 (c16-7 / it)
       :purpose (c16-8 / record-01
                       :ARG1 (c16-4 / this)
                       :time (c16-5 / after
                                    :op1 (c16-2 / bowl
                                                :mod (c16-0 / super)))))

# ::snt . successfully predicted the final score of . , it's true:
# ::tokens [".", "successfully", "predicted", "the", "final", "score", "of", ".", ",", "it", "'s", "true", ":"]
# ::lemmas [".", "successfully", "predict", "the", "final", "score", "of", ".", ",", "it", "be", "true", ":"]
(c17-4 / multi-sentence
       :snt1 (c17-2 / predict-01
                    :ARG1 (c17-0 / score
                                 :mod (c17-5 / final))
                    :ARG1-of (c17-1 / succeed-01))
       :snt2 (c17-3 / true-01))
