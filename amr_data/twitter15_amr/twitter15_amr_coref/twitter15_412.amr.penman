# ::snt . really, it's barrackhussseinobama
# ::tokens [".", "really", ",", "it", "'s", "barrackhussseinobama"]
# ::lemmas [".", "really", ",", "it", "be", "barrackhussseinobama"]
(c1-2 / person
      :name (c1-0 / name
                  :op1 "Barackhussseinobama")
      :ARG1-of (c1-1 / real-04))

# ::snt . His dog BO would make a better president. His legacy can be summed up in one phrase "Never Again"
# ::tokens [".", "His", "dog", "BO", "would", "make", "a", "better", "president", ".", "His", "legacy", "can", "be", "summed", "up", "in", "one", "phrase", "\"", "Never", "Again", "\""]
# ::lemmas [".", "his", "dog", "BO", "would", "make", "a", "well", "president", ".", "his", "legacy", "can", "be", "sum", "up", "in", "one", "phrase", "\"", "Never", "Again", "\""]
(c2-14 / multi-sentence
       :snt1 (c2-10 / make-06
                    :ARG1 (c2-13 / person
                                 :name (c2-16 / name
                                              :op1 "Boy"
                                              :op2 "Boom")
                                 :poss (c2-18 / he)
                                 :mod (c2-9 / dog))
                    :ARG2 (c2-17 / person
                                 :ARG0-of (c2-4 / have-org-role-91
                                                :ARG2 (c2-11 / president))
                                 :ARG1-of (c2-3 / have-degree-91
                                                :ARG2 (c2-19 / good-02
                                                             :ARG1 c2-17)
                                                :ARG3 (c2-7 / more))))
       :snt2 (c2-6 / possible-01
                   :ARG1 (c2-0 / sum-up-01
                               :ARG0 (c2-15 / phrase
                                            :ARG1 (c2-5 / have-polarity-91
                                                        :time (c2-12 / ever)
                                                        :mod (c2-8 / again)
                                                        :ARG2 -)
                                            :quant 1)
                               :ARG1 (c2-1 / legacy
                                           :poss (c2-2 / he)))))

# ::snt excuse my language but she is a bitch
# ::tokens ["excuse", "my", "language", "but", "she", "is", "a", "bitch"]
# ::lemmas ["excuse", "my", "language", "but", "she", "be", "a", "bitch"]
(c3-4 / contrast-01
      :ARG1 (c3-6 / excuse-01
                  :ARG0 (c3-5 / you)
                  :ARG1 (c3-3 / language
                              :poss (c3-1 / i))
                  :mode imperative)
      :ARG2 (c3-2 / bitch
                  :domain (c3-0 / she)))

# ::snt Stahhhp!! Don't be mean to Abe Vigoda! SP makes Abe Vigoda seem like Einstein!
# ::tokens ["Stahhhp", "!", "!", "Do", "n't", "be", "mean", "to", "Abe", "Vigoda", "!", "SP", "makes", "Abe", "Vigoda", "seem", "like", "Einstein", "!"]
# ::lemmas ["Stahhhp", "!", "!", "do", "not", "be", "mean", "to", "Abe", "Vigoda", "!", "SP", "make", "Abe", "Vigoda", "seem", "like", "Einstein", "!"]
(c4-4 / multi-sentence
      :snt1 (c4-0 / stahhh
                  :mode expressive)
      :snt2 (c4-11 / mean-04
                   :ARG0 (c4-8 / you)
                   :ARG1 (c4-2 / person
                               :name (c4-10 / name
                                            :op1 "Abe"
                                            :op2 "Vigoda"))
                   :ARG1-of (c4-5 / cause-01
                                  :ARG0 (c4-6 / make-02
                                              :ARG0 (c4-3 / thing
                                                          :name (c4-9 / name
                                                                      :op1 "SP"))
                                              :ARG1 (c4-1 / seem-01
                                                          :ARG1 (c4-12 / person
                                                                       :name (c4-7 / name
                                                                                   :op1 "Einstein")))))
                   :polarity -
                   :mode imperative))

# ::snt Crrryyyyyyying ": Sarah you are The Abe Lincoln of our generation"
# ::tokens ["Crrryyyyyyying", "\"", ":", "Sarah", "you", "are", "The", "Abe", "Lincoln", "of", "our", "generation", "\""]
# ::lemmas ["crrryyyyyyye", "\"", ":", "Sarah", "you", "be", "The", "Abe", "Lincoln", "of", "our", "generation", "\""]
(c5-0 / say-01
      :ARG0 (c5-2 / person
                  :name (c5-6 / name
                              :op1 "Crrryyyy"))
      :ARG1 (c5-8 / person
                  :name (c5-4 / name
                              :op1 "Abe"
                              :op2 "Lincoln")
                  :domain (c5-7 / person
                                :name (c5-3 / name
                                            :op1 "Sarah"))
                  :time (c5-5 / generation
                              :poss (c5-1 / we))))

# ::snt good moning
# ::tokens ["good", "moning"]
# ::lemmas ["good", "moning"]
(c6-0 / monologue
      :ARG1-of (c6-1 / good-02))

# ::snt Run for President in or the scumbags like Carol Costello , Martin Bashir, Joe McGinniss win.
# ::tokens ["Run", "for", "President", "in", "or", "the", "scumbags", "like", "Carol", "Costello", ",", "Martin", "Bashir", ",", "Joe", "McGinniss", "win", "."]
# ::lemmas ["run", "for", "President", "in", "or", "the", "scumbag", "like", "Carol", "Costello", ",", "Martin", "Bashir", ",", "Joe", "McGinniss", "win", "."]
(c7-3 / or
      :op1 (c7-9 / run-02
                 :ARG0 (c7-0 / scumbag
                             :example (c7-4 / and
                                            :op1 (c7-2 / person
                                                       :name (c7-6 / name
                                                                   :op1 "Carol"
                                                                   :op2 "Costello"))
                                            :op2 (c7-11 / person
                                                        :name (c7-8 / name
                                                                    :op1 "Martin"
                                                                    :op2 "Bashir"))
                                            :op3 (c7-10 / person
                                                        :name (c7-7 / name
                                                                    :op1 "Joe"
                                                                    :op2 "McGinniss"))))
                 :ARG1 (c7-5 / president))
      :op2 (c7-1 / win-01
                 :ARG0 c7-0))

# ::snt Stop! And think about it Obama. Ask Wife's opinion. She good with that ? Never mind
# ::tokens ["Stop", "!", "And", "think", "about", "it", "Obama", ".", "Ask", "Wife", "'s", "opinion", ".", "She", "good", "with", "that", "?", "Never", "mind"]
# ::lemmas ["stop", "!", "and", "think", "about", "it", "Obama", ".", "ask", "Wife", "'s", "opinion", ".", "she", "good", "with", "that", "?", "never", "mind"]
(c8-11 / multi-sentence
       :snt1 (c8-6 / and
                   :op2 (c8-15 / think-01
                               :ARG0 (c8-9 / person
                                           :name (c8-13 / name
                                                        :op1 "Obama"))
                               :ARG1 (c8-1 / it)
                               :mode imperative))
       :snt2 (c8-2 / ask-01
                   :ARG0 (c8-12 / you)
                   :ARG1 (c8-10 / thing
                                :ARG1-of (c8-4 / opine-01
                                               :ARG0 (c8-14 / person
                                                            :ARG0-of (c8-17 / have-rel-role-91
                                                                            :ARG2 (c8-5 / wife)))))
                   :mode imperative)
       :snt3 (c8-18 / good-03
                    :ARG1 (c8-0 / she)
                    :ARG2 (c8-3 / that)
                    :polarity (c8-16 / amr-unknown)
                    :time (c8-8 / ever)
                    :concession (c8-7 / mind-15
                                      :ARG0 c8-12
                                      :ARG1 c8-2
                                      :polarity -
                                      :mode imperative)))

# ::snt That's because he is an idiot
# ::tokens ["That", "'s", "because", "he", "is", "an", "idiot"]
# ::lemmas ["that", "be", "because", "he", "be", "an", "idiot"]
(c9-3 / cause-01
      :ARG0 (c9-2 / idiot
                  :domain (c9-1 / he))
      :ARG1 (c9-0 / that))

# ::snt No wonder we call him the Commander in Sheik: he thinks like a extremist muslim.
# ::tokens ["No", "wonder", "we", "call", "him", "the", "Commander", "in", "Sheik", ":", "he", "thinks", "like", "a", "extremist", "muslim", "."]
# ::lemmas ["no", "wonder", "we", "call", "he", "the", "Commander", "in", "Sheik", ":", "he", "think", "like", "a", "extremist", "muslim", "."]
(c10-13 / wonder-02
        :ARG1 (c10-7 / call-01
                     :ARG0 (c10-6 / we)
                     :ARG1 (c10-10 / he)
                     :ARG2 (c10-1 / person
                                  :ARG0-of (c10-0 / have-org-role-91
                                                  :ARG2 (c10-5 / commander))
                                  :location (c10-8 / city
                                                   :name (c10-9 / name
                                                                :op1 "Sheik"))))
        :ARG1-of (c10-11 / cause-01
                         :ARG0 (c10-3 / think-01
                                      :ARG0 c10-10
                                      :ARG1 (c10-4 / resemble-01
                                                   :ARG1 c10-10
                                                   :ARG2 (c10-15 / person
                                                                 :mod (c10-2 / religious-group
                                                                             :name (c10-12 / name
                                                                                           :op1 "Islam"))
                                                                 :mod (c10-14 / extremism)))))
        :polarity -)

# ::snt Helluva "choice" if you ask me!
# ::tokens ["Helluva", "\"", "choice", "\"", "if", "you", "ask", "me", "!"]
# ::lemmas ["Helluva", "\"", "choice", "\"", "if", "you", "ask", "i", "!"]
(c11-1 / choose-01
       :mod (c11-2 / hell
                   :mode expressive)
       :condition (c11-4 / ask-01
                         :ARG0 (c11-3 / you)
                         :ARG2 (c11-0 / i)))

# ::snt Obozo's Idea Of Female Empowerment!
# ::tokens ["Obozo", "'s", "Idea", "Of", "Female", "Empowerment", "!"]
# ::lemmas ["Obozo", "'s", "Idea", "Of", "Female", "Empowerment", "!"]
(c12-0 / idea
       :mod (c12-3 / empower-01
                   :ARG1 (c12-4 / female))
       :poss (c12-1 / person
                    :name (c12-2 / name
                                 :op1 "Obozo"))
       :mode expressive)

# ::snt ignore is a fraud who falsely claims to be a ranger and club owner.
# ::tokens ["ignore", "is", "a", "fraud", "who", "falsely", "claims", "to", "be", "a", "ranger", "and", "club", "owner", "."]
# ::lemmas ["ignore", "be", "a", "fraud", "who", "falsely", "claim", "to", "be", "a", "ranger", "and", "club", "owner", "."]
(c13-0 / person
       :ARG0-of (c13-7 / defraud-01)
       :domain (c13-9 / person
                      :name (c13-6 / name
                                   :op1 "ignore"))
       :ARG0-of (c13-5 / claim-01
                       :ARG1 (c13-1 / own-01
                                    :ARG0 c13-9
                                    :ARG1 (c13-2 / and
                                                 :op1 (c13-3 / ranger)
                                                 :op2 (c13-4 / club)))
                       :manner (c13-8 / false)))

# ::snt SMH.
# ::tokens ["SMH", "."]
# ::lemmas ["smh", "."]
(c14-0 / shit
       :ARG1-of (c14-1 / same-01))

# ::snt REALLY NOW!!!
# ::tokens ["REALLY", "NOW", "!", "!", "!"]
# ::lemmas ["REALLY", "now", "!", "!", "!"]
(c15-2 / be-temporally-at-91
       :ARG2 (c15-0 / now
                    :ARG1-of (c15-1 / real-04))
       :mode expressive)
