# ::snt OMG! Make it go away! Make it go away!
# ::tokens ["OMG", "!", "Make", "it", "go", "away", "!", "Make", "it", "go", "away", "!"]
# ::lemmas ["OMG", "!", "make", "it", "go", "away", "!", "make", "it", "go", "away", "!"]
(c1-3 / multi-sentence
      :snt1 (c1-2 / oh-my-god
                  :mode expressive)
      :snt2 (c1-10 / make-02
                   :ARG0 (c1-7 / you)
                   :ARG1 (c1-11 / go-02
                                :ARG0 (c1-1 / it)
                                :direction (c1-9 / away))
                   :mode imperative)
      :snt3 (c1-6 / make-02
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-4 / go-02
                              :ARG0 (c1-8 / it)
                              :direction (c1-5 / away))
                  :mode imperative))

# ::snt holee crap....that's huge
# ::tokens ["holee", "crap", "....", "that", "'s", "huge"]
# ::lemmas ["holee", "crap", "....", "that", "be", "huge"]
(c2-2 / multi-sentence
      :snt1 (c2-3 / crap-01
                  :mod (c2-4 / hole))
      :snt2 (c2-0 / huge
                  :domain (c2-1 / that)))

# ::snt I want to do a test on it too. It's, how loud the squish sound will be from it getting smashed!
# ::tokens ["I", "want", "to", "do", "a", "test", "on", "it", "too", ".", "It", "'s", ",", "how", "loud", "the", "squish", "sound", "will", "be", "from", "it", "getting", "smashed", "!"]
# ::lemmas ["i", "want", "to", "do", "a", "test", "on", "it", "too", ".", "it", "be", ",", "how", "loud", "the", "squish", "sound", "will", "be", "from", "it", "getting", "smash", "!"]
(c3-7 / multi-sentence
      :snt1 (c3-13 / want-01
                   :ARG0 (c3-1 / i)
                   :ARG1 (c3-4 / test-01
                               :ARG0 c3-1
                               :ARG1 (c3-12 / it)
                               :mod (c3-5 / too)))
      :snt2 (c3-6 / and
                  :op1 (c3-3 / it)
                  :op2 (c3-8 / loud
                             :degree (c3-0 / so)
                             :ARG1-of (c3-10 / cause-01
                                             :ARG0 (c3-2 / smash-01
                                                         :ARG1 (c3-9 / it)))
                             :domain (c3-11 / sound
                                            :mod (c3-14 / squish-01)))))

# ::snt here you go.
# ::tokens ["here", "you", "go", "."]
# ::lemmas ["here", "you", "go", "."]
(c4-2 / go-01
      :ARG1 (c4-0 / you)
      :ARG4 (c4-1 / here))

# ::snt Holy bleep! That's huge!!!
# ::tokens ["Holy", "bleep", "!", "That", "'s", "huge", "!", "!", "!"]
# ::lemmas ["holy", "bleep", "!", "that", "be", "huge", "!", "!", "!"]
(c5-3 / multi-sentence
      :snt1 (c5-1 / bleep-01
                  :mod (c5-4 / holy)
                  :mode expressive)
      :snt2 (c5-0 / huge
                  :domain (c5-2 / that)))

# ::snt that huge spider? How about a "Scared S**tless" myth? See who spoils their shorts first.
# ::tokens ["that", "huge", "spider", "?", "How", "about", "a", "\"", "Scared", "S**tless", "\"", "myth", "?", "See", "who", "spoils", "their", "shorts", "first", "."]
# ::lemmas ["that", "huge", "spider", "?", "how", "about", "a", "\"", "scared", "s**tless", "\"", "myth", "?", "see", "who", "spoil", "their", "short", "first", "."]
(c6-6 / multi-sentence
      :snt1 (c6-3 / thing
                  :polarity (c6-14 / amr-unknown)
                  :topic (c6-0 / spider
                               :mod (c6-12 / huge)
                               :mod (c6-4 / that)))
      :snt2 (c6-7 / amr-unknown
                  :topic (c6-15 / myth
                                :mod (c6-1 / scare-01
                                           :ARG0 (c6-8 / shitless))))
      :snt3 (c6-16 / see-01
                   :ARG0 (c6-13 / you)
                   :ARG1 (c6-5 / spoil-01
                               :ARG0 (c6-9 / amr-unknown)
                               :ARG1 (c6-10 / shorts
                                            :poss (c6-2 / they))
                               :ord (c6-11 / ordinal-entity
                                           :value 1))
                   :mode imperative))

# ::snt have you seen this one.
# ::tokens ["have", "you", "seen", "this", "one", "."]
# ::lemmas ["have", "you", "see", "this", "one", "."]
(c7-0 / see-01
      :polarity (c7-4 / amr-unknown)
      :ARG0 (c7-3 / you)
      :ARG1 (c7-2 / one
                  :mod (c7-1 / this)))

# ::snt yr old: not even phased by the large grossness.
# ::tokens ["yr", "old", ":", "not", "even", "phased", "by", "the", "large", "grossness", "."]
# ::lemmas ["yr", "old", ":", "not", "even", "phase", "by", "the", "large", "grossness", "."]
(c8-0 / phase-01
      :ARG0 (c8-6 / gross-03
                  :mod (c8-1 / large))
      :ARG1 (c8-5 / person
                  :age (c8-2 / temporal-quantity
                             :unit (c8-3 / year)
                             :quant 1))
      :mod (c8-4 / even)
      :polarity -)

# ::snt I think he's over there with Grant sprinting at top speed...away
# ::tokens ["I", "think", "he", "'s", "over", "there", "with", "Grant", "sprinting", "at", "top", "speed", "...", "away"]
# ::lemmas ["i", "think", "he", "be", "over", "there", "with", "Grant", "sprinting", "at", "top", "speed", "...", "away"]
(c9-11 / and
       :op1 (c9-6 / think-01
                  :ARG0 (c9-2 / i)
                  :ARG1 (c9-1 / be-located-at-91
                              :ARG1 (c9-10 / he)
                              :ARG2 (c9-7 / there)))
       :op2 (c9-0 / sprint-01
                  :ARG0 (c9-3 / person
                              :name (c9-9 / name
                                          :op1 "Grant"))
                  :manner (c9-4 / speed
                                :mod (c9-5 / top))
                  :direction (c9-8 / away)))

# ::snt Yep. Similar to this pic of 'Giant Camel Spiders'. Subject much closer to camera.
# ::tokens ["Yep", ".", "Similar", "to", "this", "pic", "of", "'", "Giant", "Camel", "Spiders", "'", ".", "Subject", "much", "closer", "to", "camera", "."]
# ::lemmas ["yep", ".", "similar", "to", "this", "pic", "of", "'", "Giant", "Camel", "Spiders", "'", ".", "subject", "much", "close", "to", "camera", "."]
(c10-4 / multi-sentence
       :snt1 (c10-9 / yep)
       :snt2 (c10-11 / resemble-01
                     :ARG1 (c10-2 / pic
                                  :topic (c10-0 / spaceship
                                                :name (c10-6 / name
                                                             :op1 "Giant"
                                                             :op2 "Camel"
                                                             :op3 "Spiders")))
                     :ARG2 (c10-13 / pic
                                   :mod (c10-3 / this)))
       :snt3 (c10-7 / close-10
                    :ARG1 (c10-1 / subject)
                    :ARG2 (c10-5 / camera)
                    :ARG2-of (c10-10 / have-degree-91
                                     :ARG1 c10-1
                                     :ARG3 (c10-12 / more
                                                   :quant (c10-8 / much)))))

# ::snt (announcer voice) How fast can a mythbuster move when this creapy crawly lands on them.
# ::tokens ["(", "announcer", "voice", ")", "How", "fast", "can", "a", "mythbuster", "move", "when", "this", "creapy", "crawly", "lands", "on", "them", "."]
# ::lemmas ["(", "announcer", "voice", ")", "how", "fast", "can", "a", "mythbuster", "move", "when", "this", "creapy", "crawly", "land", "on", "they", "."]
(c11-5 / multi-sentence
       :snt1 (c11-12 / voice-01
                     :ARG0 (c11-1 / person
                                  :ARG0-of (c11-10 / announce-01)))
       :snt2 (c11-13 / possible-01
                     :ARG1 (c11-11 / move-02
                                   :ARG0 (c11-8 / mythbuster)
                                   :time (c11-2 / land-01
                                                :ARG1 (c11-9 / crawly
                                                             :mod (c11-3 / this)
                                                             :ARG0-of (c11-6 / creak-01))
                                                :ARG2 (c11-4 / they))
                                   :ARG1-of (c11-0 / fast-02
                                                   :degree (c11-7 / amr-unknown)))))

# ::snt that's actual size.
# ::tokens ["that", "'s", "actual", "size", "."]
# ::lemmas ["that", "be", "actual", "size", "."]
(c12-1 / size
       :ARG1-of (c12-0 / actual-02)
       :domain (c12-2 / that))

# ::snt : Adam we should do a test with this spider! ...Adam?
# ::tokens [":", "Adam", "we", "should", "do", "a", "test", "with", "this", "spider", "!", "...", "Adam", "?"]
# ::lemmas [":", "Adam", "we", "should", "do", "a", "test", "with", "this", "spider", "!", "...", "Adam", "?"]
(c13-0 / say-01
       :ARG0 (c13-2 / i)
       :ARG1 (c13-9 / recommend-01
                    :ARG0 c13-2
                    :ARG1 (c13-5 / test-01
                                 :ARG0 (c13-1 / we)
                                 :ARG1 (c13-3 / spider
                                              :mod (c13-6 / this)))
                    :ARG2 (c13-4 / person
                                 :name (c13-8 / name
                                              :op1 "Adam"))
                    :polarity (c13-7 / amr-unknown))
       :ARG2 c13-4)

# ::snt can you call the epic spider episode "NOPE" and combine it with some kind of fire weapon test?
# ::tokens ["can", "you", "call", "the", "epic", "spider", "episode", "\"", "NOPE", "\"", "and", "combine", "it", "with", "some", "kind", "of", "fire", "weapon", "test", "?"]
# ::lemmas ["can", "you", "call", "the", "epic", "spider", "episode", "\"", "NOPE", "\"", "and", "combine", "it", "with", "some", "kind", "of", "fire", "weapon", "test", "?"]
(c14-2 / possible-01
       :polarity (c14-12 / amr-unknown)
       :ARG1 (c14-7 / and
                    :op1 (c14-9 / call-01
                                :ARG0 (c14-11 / you)
                                :ARG1 (c14-14 / episode
                                              :mod (c14-4 / epic)
                                              :topic (c14-5 / thing
                                                            :name (c14-10 / name
                                                                          :op1 "Spider")))
                                :ARG2 (c14-6 / thing
                                             :name c14-10
                                             :op1 "NOPE")))
       :op2 (c14-8 / combine-01
                   :ARG0 c14-11
                   :ARG1 c14-14
                   :ARG2 (c14-3 / test-01
                                :ARG1 (c14-1 / weapon
                                             :ARG2-of (c14-15 / fire-01))
                                :mod (c14-13 / kind
                                             :mod (c14-0 / some)))))

# ::snt Well I know what's haunting my nightmares tonight.
# ::tokens ["Well", "I", "know", "what", "'s", "haunting", "my", "nightmares", "tonight", "."]
# ::lemmas ["well", "i", "know", "what", "be", "haunt", "my", "nightmare", "tonight", "."]
(c15-8 / know-01
       :ARG0 (c15-2 / i)
       :ARG1 (c15-5 / haunt-01
                    :ARG0 (c15-3 / thing)
                    :ARG1 (c15-7 / nightmare
                                 :poss c15-2)
                    :time (c15-0 / date-entity
                                 :dayperiod (c15-6 / night)
                                 :mod (c15-4 / today)))
       :mod (c15-1 / well))

# ::snt Yes drop it in a room full of soccer moms to see which one dives out of a window &amp; which runs through a wall leaving an outline
# ::tokens ["Yes", "drop", "it", "in", "a", "room", "full", "of", "soccer", "moms", "to", "see", "which", "one", "dives", "out", "of", "a", "window", "&", "amp", ";", "which", "runs", "through", "a", "wall", "leaving", "an", "outline"]
# ::lemmas ["yes", "drop", "it", "in", "a", "room", "full", "of", "soccer", "mom", "to", "see", "which", "one", "dive", "out", "of", "a", "window", "&", "amp", ";", "which", "run", "through", "a", "wall", "leave", "an", "outline"]
(c16-15 / drop-01
        :ARG0 (c16-13 / you)
        :ARG1 (c16-3 / it)
        :location (c16-14 / room
                          :ARG1-of (c16-17 / full-09
                                           :ARG2 (c16-9 / mom
                                                        :mod (c16-0 / soccer))))
        :purpose (c16-4 / see-01
                        :ARG0 c16-13
                        :ARG1 (c16-1 / dive-01
                                     :ARG0 (c16-6 / one)
                                     :source (c16-7 / and
                                                    :op1 (c16-2 / window)
                                                    :op2 (c16-10 / amp)
                                                    :ARG1-of (c16-5 / run-04
                                                                    :path (c16-8 / through
                                                                                 :op1 (c16-12 / wall))
                                                                    :ARG0-of (c16-11 / leave-13
                                                                                     :ARG1 (c16-16 / outline-01))))))
        :mode imperative)

# ::snt no no no.... What is it!!!
# ::tokens ["no", "no", "no", "....", "What", "is", "it", "!", "!", "!"]
# ::lemmas ["no", "no", "no", "....", "what", "be", "it", "!", "!", "!"]
(c17-3 / multi-sentence
       :snt1 (c17-0 / no
                    :snt2-of c17-3)
       :snt3 (c17-2 / amr-unknown
                    :domain (c17-1 / it)))

# ::snt Petite little beauty ain't it, what?!
# ::tokens ["Petite", "little", "beauty", "ai", "n't", "it", ",", "what", "?", "!"]
# ::lemmas ["petite", "little", "beauty", "be", "not", "it", ",", "what", "?", "!"]
(c18-0 / beautiful-02
       :ARG1 (c18-3 / thing)
       :mod (c18-2 / little)
       :mod (c18-1 / precious)
       :ARG1-of (c18-4 / request-confirmation-91))

# ::snt How big would your slipper have to be?
# ::tokens ["How", "big", "would", "your", "slipper", "have", "to", "be", "?"]
# ::lemmas ["how", "big", "would", "your", "slipper", "have", "to", "be", "?"]
(c19-2 / obligate-01
       :ARG2 (c19-1 / big
                    :degree (c19-4 / amr-unknown)
                    :domain (c19-0 / slipper
                                   :poss (c19-3 / you))))

# ::snt I think has been replaced by a series of clouds that spell out, "hell no."
# ::tokens ["I", "think", "has", "been", "replaced", "by", "a", "series", "of", "clouds", "that", "spell", "out", ",", "\"", "hell", "no", ".", "\""]
# ::lemmas ["i", "think", "have", "be", "replace", "by", "a", "series", "of", "cloud", "that", "spell", "out", ",", "\"", "hell", "no", ".", "\""]
(c20-7 / replace-01
       :ARG1 (c20-5 / cloud
                    :quant (c20-0 / series)
                    :ARG0-of (c20-1 / spell-out-03
                                    :ARG1 (c20-4 / no
                                                 :mod (c20-6 / hell
                                                             :mode expressive))))
       :ARG2 (c20-3 / think-01
                    :ARG0 (c20-2 / i)))

# ::snt That's actually Adam in costume. He's outdone himself this time.
# ::tokens ["That", "'s", "actually", "Adam", "in", "costume", ".", "He", "'s", "outdone", "himself", "this", "time", "."]
# ::lemmas ["that", "be", "actually", "Adam", "in", "costume", ".", "he", "be", "outdone", "himself", "this", "time", "."]
(c21-5 / multi-sentence
       :snt1 (c21-0 / person
                    :name (c21-9 / name
                                 :op1 "Adam")
                    :domain (c21-2 / that)
                    :ARG1-of (c21-7 / costume-01)
                    :ARG1-of (c21-3 / actual-02))
       :snt2 (c21-4 / outdo-01
                    :ARG0 (c21-8 / he
                                 :ARG1-of c21-4)
                    :time (c21-6 / time
                                 :mod (c21-1 / this))))

# ::snt Only if it's different ways to kill it.
# ::tokens ["Only", "if", "it", "'s", "different", "ways", "to", "kill", "it", "."]
# ::lemmas ["only", "if", "it", "be", "different", "way", "to", "kill", "it", "."]
(c22-3 / have-condition-91
       :ARG2 (c22-4 / way
                    :manner-of (c22-5 / kill-01
                                      :ARG1 (c22-1 / it))
                    :ARG1-of (c22-0 / differ-02))
       :mod (c22-2 / only))

# ::snt &lt;has officially died of a massive heart attack *shiver*
# ::tokens ["&", "lt;has", "officially", "died", "of", "a", "massive", "heart", "attack", "*", "shiver", "*"]
# ::lemmas ["&", "lt;has", "officially", "die", "of", "a", "massive", "heart", "attack", "*", "shiver", "*"]
(c23-6 / and
       :op2 (c23-7 / die-01
                   :ARG1 (c23-5 / he)
                   :ARG1-of (c23-4 / cause-01
                                   :ARG0 (c23-1 / heart-attack
                                                :mod (c23-3 / massive)))
                   :mod (c23-2 / official)
                   :mod (c23-0 / shiver-01)))

# ::snt : Adam we should do a test with this spider! ...Adam?
# ::tokens [":", "Adam", "we", "should", "do", "a", "test", "with", "this", "spider", "!", "...", "Adam", "?"]
# ::lemmas [":", "Adam", "we", "should", "do", "a", "test", "with", "this", "spider", "!", "...", "Adam", "?"]
(c24-0 / say-01
       :ARG0 (c24-2 / i)
       :ARG1 (c24-9 / recommend-01
                    :ARG0 c24-2
                    :ARG1 (c24-5 / test-01
                                 :ARG0 (c24-1 / we)
                                 :ARG1 (c24-3 / spider
                                              :mod (c24-6 / this)))
                    :ARG2 (c24-4 / person
                                 :name (c24-8 / name
                                              :op1 "Adam"))
                    :polarity (c24-7 / amr-unknown))
       :ARG2 c24-4)

# ::snt ale kurwa czemu ja na to zdjecie patrze,mam zy w oczach
# ::tokens ["ale", "kurwa", "czemu", "ja", "na", "to", "zdjecie", "patrze", ",", "mam", "zy", "w", "oczach"]
# ::lemmas ["ale", "kurwa", "czemu", "ja", "na", "to", "zdjecie", "patrze", ",", "mam", "zy", "w", "oczach"]
(c25-4 / multi-sentence
       :snt1 (c25-5 / cause-01
                    :ARG0 (c25-2 / person
                                 :name (c25-6 / name
                                              :op1 "Czemu"
                                              :op2 "Ja")
                                 :mod (c25-7 / kurwa))
                    :ARG1 (c25-0 / zdjecie))
       :snt2 (c25-8 / possible-01
                    :ARG1 (c25-3 / zy
                                 :manner (c25-1 / w))))

# ::snt piotr naskrecki,hmm poland
# ::tokens ["piotr", "naskrecki", ",", "hmm", "poland"]
# ::lemmas ["piotr", "naskrecki", ",", "hmm", "poland"]
(c26-2 / person
       :name (c26-0 / name
                    :op1 "piotr"
                    :op2 "Naskrecki")
       :mod (c26-1 / hmm
                   :mode expressive))

# ::snt Get. The. Fuck.
# ::tokens ["Get", ".", "The", ".", "Fuck", "."]
# ::lemmas ["get", ".", "the", ".", "fuck", "."]
(c27-2 / get-02
       :ARG0 (c27-0 / you)
       :mod (c27-1 / fuck
                   :mode expressive)
       :mode imperative)

# ::snt Forced Perspective!
# ::tokens ["Forced", "Perspective", "!"]
# ::lemmas ["Forced", "Perspective", "!"]
(c28-1 / perspective
       :ARG1-of (c28-0 / force-02))

# ::snt ewwww!
# ::tokens ["ewwww", "!"]
# ::lemmas ["ewwww", "!"]
(c29-0 / ewww
       :mode expressive)

# ::snt An underwear absorption test perhaps?
# ::tokens ["An", "underwear", "absorption", "test", "perhaps", "?"]
# ::lemmas ["an", "underwear", "absorption", "test", "perhaps", "?"]
(c30-0 / possible-01
       :ARG1 (c30-1 / test-01
                    :ARG1 (c30-4 / absorb-01
                                 :ARG1 (c30-3 / underwear)))
       :polarity (c30-2 / amr-unknown))
