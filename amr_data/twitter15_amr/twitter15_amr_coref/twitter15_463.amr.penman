# ::snt I just cracked a rib, hahahaaa
# ::tokens ["I", "just", "cracked", "a", "rib", ",", "hahahaaa"]
# ::lemmas ["i", "just", "crack", "a", "rib", ",", "hahahaaa"]
(c1-1 / crack-01
      :ARG0 (c1-0 / i)
      :ARG1 (c1-4 / rib)
      :time (c1-2 / just)
      :mod (c1-3 / hahaha
                 :mode expressive))

# ::snt I thought it was going to be called ( this is how Jew cook!)
# ::tokens ["I", "thought", "it", "was", "going", "to", "be", "called", "(", "this", "is", "how", "Jew", "cook", "!", ")"]
# ::lemmas ["i", "think", "it", "be", "go", "to", "be", "call", "(", "this", "be", "how", "Jew", "cook", "!", ")"]
(c2-3 / multi-sentence
      :snt1 (c2-1 / think-01
                  :ARG0 (c2-0 / i)
                  :ARG1 (c2-5 / call-01
                              :ARG1 (c2-7 / it)))
      :snt2 (c2-4 / cook-01
                  :ARG0 (c2-8 / religious-group
                              :name (c2-6 / name
                                          :op1 "Jew"))
                  :manner (c2-2 / this)
                  :mode expressive))

# ::snt Awww, how mean
# ::tokens ["Awww", ",", "how", "mean"]
# ::lemmas ["Awww", ",", "how", "mean"]
(c3-2 / mean-04
      :degree (c3-1 / so)
      :mod (c3-0 / awww
                 :mode expressive))

# ::snt *blows dust off cover* Ohh it's actually "How to Cook FOR a Jew."
# ::tokens ["*", "blows", "dust", "off", "cover", "*", "Ohh", "it", "'s", "actually", "\"", "How", "to", "Cook", "FOR", "a", "Jew", ".", "\""]
# ::lemmas ["*", "blow", "dust", "off", "cover", "*", "ohh", "it", "be", "actually", "\"", "how", "to", "Cook", "for", "a", "Jew", ".", "\""]
(c4-6 / multi-sentence
      :snt1 (c4-0 / show-01
                  :ARG1 (c4-12 / dust-01
                               :ARG2 (c4-8 / cover)))
      :snt2 (c4-10 / have-mod-91
                   :ARG1 (c4-1 / it)
                   :ARG2 (c4-3 / thing
                               :manner-of (c4-7 / cook-01
                                                :ARG0 (c4-2 / person
                                                            :mod (c4-11 / religious-group
                                                                        :name (c4-9 / name
                                                                                    :op1 "Jew")))))
                   :ARG1-of (c4-4 / actual-02)
                   :mod (c4-5 / oh
                              :mode expressive)))

# ::snt I hope her recipe for Wop-Corn is in there.
# ::tokens ["I", "hope", "her", "recipe", "for", "Wop", "-", "Corn", "is", "in", "there", "."]
# ::lemmas ["i", "hope", "her", "recipe", "for", "Wop", "-", "Corn", "be", "in", "there", "."]
(c5-6 / hope-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-1 / be-located-at-91
                  :ARG1 (c5-7 / recipe
                              :poss (c5-0 / she)
                              :topic (c5-5 / corn
                                           :mod (c5-3 / poppy)))
                  :ARG2 (c5-4 / there)))

# ::snt Isn't it ironic that the meat from Jews isn't kosher?
# ::tokens ["Is", "n't", "it", "ironic", "that", "the", "meat", "from", "Jews", "is", "n't", "kosher", "?"]
# ::lemmas ["be", "not", "it", "ironic", "that", "the", "meat", "from", "Jews", "be", "not", "kosher", "?"]
(c6-0 / ironic
      :domain (c6-6 / kosher
                    :domain (c6-3 / meat
                                  :source (c6-1 / person
                                                :mod (c6-5 / religious-group
                                                           :name (c6-4 / name
                                                                       :op1 "Jew"))))
                    :polarity -)
      :polarity (c6-2 / amr-unknown)
      :polarity -)

# ::snt Funny, I was told the new Paula Deen book was "Mick Mondays: Favorite Potato Dishes"
# ::tokens ["Funny", ",", "I", "was", "told", "the", "new", "Paula", "Deen", "book", "was", "\"", "Mick", "Mondays", ":", "Favorite", "Potato", "Dishes", "\""]
# ::lemmas ["funny", ",", "i", "be", "tell", "the", "new", "Paula", "Deen", "book", "be", "\"", "Mick", "Mondays", ":", "Favorite", "Potato", "Dishes", "\""]
(c7-7 / funny-02
      :ARG1 (c7-3 / tell-01
                  :ARG1 (c7-0 / book
                              :name (c7-6 / name
                                          :op1 "Mick"
                                          :op2 " Mondays"
                                          :op3 ": Favorite"
                                          :op4 "Potato"
                                          :op5 "Dishes")
                              :ARG1-of (c7-5 / new-01)
                              :poss (c7-2 / person
                                          :name (c7-4 / name
                                                      :op1 "Paula"
                                                      :op2 "Deen")))
                  :ARG2 (c7-1 / i)))

# ::snt I thought it was called "Cooking with the Klan"
# ::tokens ["I", "thought", "it", "was", "called", "\"", "Cooking", "with", "the", "Klan", "\""]
# ::lemmas ["i", "think", "it", "be", "call", "\"", "Cooking", "with", "the", "Klan", "\""]
(c8-1 / think-01
      :ARG0 (c8-0 / i)
      :ARG1 (c8-4 / call-01
                  :ARG1 (c8-5 / it)
                  :ARG2 (c8-3 / cook-01
                              :accompanier (c8-2 / organization
                                                 :name (c8-6 / name
                                                             :op1 "Klan")))))

# ::snt just choked on my spit!!!!
# ::tokens ["just", "choked", "on", "my", "spit", "!", "!", "!", "!"]
# ::lemmas ["just", "choke", "on", "my", "spit", "!", "!", "!", "!"]
(c9-3 / choke-01
      :ARG0 (c9-2 / i
                  :part (c9-0 / spit
                              :ARG1-of c9-3))
      :mod (c9-1 / just))

# ::snt : Paula Deen moves to have discrimination suit dismissed. Just in time for her new book "How To Cook A Jew"
# ::tokens [":", "Paula", "Deen", "moves", "to", "have", "discrimination", "suit", "dismissed", ".", "Just", "in", "time", "for", "her", "new", "book", "\"", "How", "To", "Cook", "A", "Jew", "\""]
# ::lemmas [":", "Paula", "Deen", "move", "to", "have", "discrimination", "suit", "dismiss", ".", "just", "in", "time", "for", "her", "new", "book", "\"", "How", "To", "Cook", "A", "Jew", "\""]
(c10-6 / multi-sentence
       :snt1 (c10-11 / move-02
                     :ARG0 (c10-5 / person
                                  :name (c10-10 / name
                                                :op1 "Paula"
                                                :op2 "Deen"))
                     :ARG2 (c10-0 / dismiss-01
                                  :ARG0 c10-5
                                  :ARG1 (c10-1 / sue-02
                                               :ARG2 (c10-2 / discriminate-02))))
       :snt2 (c10-3 / in-time
                    :op1 (c10-4 / book
                                :name (c10-9 / name
                                             :op1 "How"
                                             :op2 "To"
                                             :op3 "Cook"
                                             :op4 "A"
                                             :op5 "Jew")
                                :poss c10-5
                                :ARG1-of (c10-7 / new-01))
                    :mod (c10-8 / just)))

# ::snt I wonder if Kosher Jew would tastes better.
# ::tokens ["I", "wonder", "if", "Kosher", "Jew", "would", "tastes", "better", "."]
# ::lemmas ["i", "wonder", "if", "Kosher", "Jew", "would", "taste", "well", "."]
(c11-8 / wonder-01
       :ARG0 (c11-0 / i)
       :ARG1 (c11-2 / truth-value
                    :polarity-of (c11-7 / have-degree-91
                                        :ARG1 (c11-3 / taste-02
                                                     :ARG1 (c11-1 / person
                                                                  :mod (c11-4 / religious-group
                                                                              :name (c11-6 / name
                                                                                           :op1 "Kosher"
                                                                                           :op2 "Jew"))))
                                        :ARG2 (c11-9 / good-02
                                                     :ARG1 c11-3)
                                        :ARG3 (c11-5 / more))))

# ::snt clearly shed need a propane grill for that recipe. You know, because gas.
# ::tokens ["clearly", "shed", "need", "a", "propane", "grill", "for", "that", "recipe", ".", "You", "know", ",", "because", "gas", "."]
# ::lemmas ["clearly", "shed", "need", "a", "propane", "grill", "for", "that", "recipe", ".", "you", "know", ",", "because", "gas", "."]
(c12-3 / multi-sentence
       :snt1 (c12-8 / need-01
                    :ARG1 (c12-10 / grill
                                  :mod (c12-0 / propane))
                    :purpose (c12-1 / recipe
                                    :mod (c12-2 / that))
                    :ARG1-of (c12-6 / clear-06))
       :snt2 (c12-9 / know-01
                    :ARG0 (c12-7 / you)
                    :ARG1-of (c12-4 / cause-01
                                    :ARG0 (c12-5 / gas))))

# ::snt Nice. My folks grew up under the German Occupation. Boy do they have some some sour 'Escapism humour'
# ::tokens ["Nice", ".", "My", "folks", "grew", "up", "under", "the", "German", "Occupation", ".", "Boy", "do", "they", "have", "some", "some", "sour", "'", "Escapism", "humour", "'"]
# ::lemmas ["nice", ".", "my", "folk", "grow", "up", "under", "the", "german", "Occupation", ".", "boy", "do", "they", "have", "some", "some", "sour", "'", "escapism", "humour", "'"]
(c13-7 / multi-sentence
       :snt1 (c13-13 / nice-01)
       :snt2 (c13-11 / grow-up-04
                     :ARG1 (c13-15 / folk
                                   :poss (c13-1 / i))
                     :prep-under (c13-5 / occupy-01
                                        :ARG0 (c13-9 / country
                                                     :name (c13-12 / name
                                                                   :op1 "Germany"))))
       :snt3 (c13-10 / have-03
                     :ARG0 (c13-6 / they)
                     :ARG1 (c13-2 / humor
                                  :mod (c13-14 / escapism)
                                  :mod (c13-0 / sour)
                                  :mod (c13-3 / some)
                                  :mod (c13-8 / some))
                     :mod (c13-4 / boy
                                 :mode expressive)))

# ::snt Ok she's a redneck Republican--but what's that got to do with cooking?
# ::tokens ["Ok", "she", "'s", "a", "redneck", "Republican", "--", "but", "what", "'s", "that", "got", "to", "do", "with", "cooking", "?"]
# ::lemmas ["ok", "she", "be", "a", "redneck", "Republican", "--", "but", "what", "be", "that", "get", "to", "do", "with", "cooking", "?"]
(c14-7 / contrast-01
       :ARG1 (c14-8 / have-org-role-91
                    :ARG0 (c14-0 / she)
                    :ARG1 (c14-2 / political-party
                                 :name (c14-9 / name
                                              :op1 "Republican"))
                    :mod (c14-3 / redneck)
                    :ARG1-of (c14-4 / okay-01))
       :ARG2 (c14-1 / have-to-do-with-04
                    :ARG0 (c14-5 / amr-unknown)
                    :ARG1 (c14-6 / cook-01)))

# ::snt Ha RT: Paula Deen moves to have discrimination suit dismissed. Just in time for her new book "How To Cook A Jew".
# ::tokens ["Ha", "RT", ":", "Paula", "Deen", "moves", "to", "have", "discrimination", "suit", "dismissed", ".", "Just", "in", "time", "for", "her", "new", "book", "\"", "How", "To", "Cook", "A", "Jew", "\"", "."]
# ::lemmas ["ha", "RT", ":", "Paula", "Deen", "move", "to", "have", "discrimination", "suit", "dismiss", ".", "just", "in", "time", "for", "her", "new", "book", "\"", "How", "To", "Cook", "A", "Jew", "\"", "."]
(c15-7 / multi-sentence
       :snt1 (c15-13 / move-02
                     :ARG0 (c15-5 / person
                                  :name (c15-12 / name
                                                :op1 "Paula"
                                                :op2 "Deen"))
                     :ARG2 (c15-9 / have-04
                                  :ARG0 c15-5
                                  :ARG1 (c15-0 / dismiss-01
                                               :ARG0 c15-5
                                               :ARG1 (c15-1 / sue-02
                                                            :ARG2 (c15-2 / discriminate-02))))
                     :mod (c15-3 / ha
                                 :mode expressive))
       :snt2 (c15-4 / in-time
                    :op1 (c15-6 / book
                                :name (c15-11 / name
                                              :op1 "How"
                                              :op2 "To"
                                              :op3 "Cook"
                                              :op4 "A"
                                              :op5 "Jew")
                                :poss c15-5
                                :ARG1-of (c15-8 / new-01))
                    :mod (c15-10 / just)))

# ::snt we all make mistakes but a yr old mistake n still condemn for it what a shame.
# ::tokens ["we", "all", "make", "mistakes", "but", "a", "yr", "old", "mistake", "n", "still", "condemn", "for", "it", "what", "a", "shame", "."]
# ::lemmas ["we", "all", "make", "mistake", "but", "a", "yr", "old", "mistake", "n", "still", "condemn", "for", "it", "what", "a", "shame", "."]
(c16-7 / contrast-01
       :ARG1 (c16-5 / mistake-02
                    :ARG0 (c16-10 / we
                                  :mod (c16-3 / all)))
       :ARG2 (c16-4 / and
                    :op1 (c16-11 / mistake-02
                                 :ARG0 c16-10
                                 :age (c16-2 / temporal-quantity
                                             :unit (c16-9 / year)
                                             :quant 1))
                    :op2 (c16-6 / condemn-01
                                :ARG0 c16-10
                                :ARG2 c16-11
                                :mod (c16-0 / still)
                                :polarity -)
                    :ARG0-of (c16-1 / shame-02
                                    :degree (c16-8 / so))))

# ::snt On what planet is this funny?
# ::tokens ["On", "what", "planet", "is", "this", "funny", "?"]
# ::lemmas ["on", "what", "planet", "be", "this", "funny", "?"]
(c17-3 / funny
       :domain (c17-1 / this)
       :location (c17-0 / amr-unknown
                        :mod (c17-2 / planet)))

# ::snt yes it absolutely is
# ::tokens ["yes", "it", "absolutely", "is"]
# ::lemmas ["yes", "it", "absolutely", "be"]
(c18-1 / yes
       :degree (c18-0 / absolute))

# ::snt that's not funny!!
# ::tokens ["that", "'s", "not", "funny", "!", "!"]
# ::lemmas ["that", "be", "not", "funny", "!", "!"]
(c19-1 / funny
       :domain (c19-0 / that)
       :polarity -)

# ::snt Denis Leary. Saying what people think for years.
# ::tokens ["Denis", "Leary", ".", "Saying", "what", "people", "think", "for", "years", "."]
# ::lemmas ["Denis", "Leary", ".", "say", "what", "people", "think", "for", "years", "."]
(c20-5 / multi-sentence
       :snt1 (c20-1 / person
                    :name (c20-7 / name
                                 :op1 "Denis"
                                 :op2 "Leary"))
       :snt2 (c20-0 / say-01
                    :ARG1 (c20-3 / thing
                                 :ARG1-of (c20-4 / think-01
                                                 :ARG0 (c20-9 / person)))
                    :duration (c20-8 / multiple
                                     :op1 (c20-2 / temporal-quantity
                                                 :unit (c20-6 / year)
                                                 :quant 1))))

# ::snt I hope Paula gets released of any wrong doing. It's not right what they are doing to her.
# ::tokens ["I", "hope", "Paula", "gets", "released", "of", "any", "wrong", "doing", ".", "It", "'s", "not", "right", "what", "they", "are", "doing", "to", "her", "."]
# ::lemmas ["i", "hope", "Paula", "gets", "release", "of", "any", "wrong", "doing", ".", "it", "be", "not", "right", "what", "they", "be", "do", "to", "she", "."]
(c21-7 / multi-sentence
       :snt1 (c21-9 / hope-01
                    :ARG0 (c21-1 / i)
                    :ARG1 (c21-10 / release-01
                                  :ARG1 (c21-2 / person
                                               :name (c21-8 / name
                                                            :op1 "Paula"))
                                  :ARG1-of (c21-0 / wrong-02
                                                  :mod (c21-5 / any))))
       :snt2 (c21-3 / right-02
                    :ARG1 (c21-4 / thing
                                 :ARG1-of (c21-11 / do-02
                                                  :ARG0 (c21-6 / they)
                                                  :ARG2 c21-2))
                    :polarity -))

# ::snt that's "how to cook FOR a jew."
# ::tokens ["that", "'s", "\"", "how", "to", "cook", "FOR", "a", "jew", ".", "\""]
# ::lemmas ["that", "be", "\"", "how", "to", "cook", "for", "a", "jew", ".", "\""]
(c22-1 / thing
       :manner-of (c22-4 / cook-01
                         :ARG0 (c22-0 / person
                                      :mod (c22-5 / religious-group
                                                  :name (c22-3 / name
                                                               :op1 "Jew"))))
       :domain (c22-2 / that))

# ::snt are you serious???
# ::tokens ["are", "you", "serious", "?", "?", "?"]
# ::lemmas ["be", "you", "serious", "?", "?", "?"]
(c23-1 / serious-01
       :polarity (c23-0 / amr-unknown)
       :ARG1 (c23-2 / you))

# ::snt wow Melissa. I hope u never misspeak, &amp; if u do, I hope ur sake,other celebs r much more forgiving &amp; compassionate than u
# ::tokens ["wow", "Melissa", ".", "I", "hope", "u", "never", "misspeak", ",", "&", "amp", ";", "if", "u", "do", ",", "I", "hope", "ur", "sake", ",", "other", "celebs", "r", "much", "more", "forgiving", "&", "amp", ";", "compassionate", "than", "u"]
# ::lemmas ["wow", "Melissa", ".", "i", "hope", "u", "never", "misspeak", ",", "&", "amp", ";", "if", "u", "do", ",", "i", "hope", "ur", "sake", ",", "other", "celebs", "r", "much", "more", "forgiving", "&", "amp", ";", "compassionate", "than", "u"]
(c24-16 / multi-sentence
        :snt1 (c24-0 / say-01
                     :ARG1 (c24-11 / wow
                                   :mode expressive)
                     :ARG2 (c24-15 / person
                                   :name (c24-18 / name
                                                 :op1 "Melissa")))
        :snt2 (c24-10 / and
                      :op1 (c24-21 / hope-01
                                   :ARG0 (c24-1 / i)
                                   :ARG1 (c24-12 / miss-02
                                                 :ARG0 (c24-17 / you)
                                                 :ARG1 (c24-19 / peak-01)
                                                 :time (c24-13 / ever)
                                                 :polarity -))
                      :op2 (c24-6 / have-condition-91
                                  :ARG1 (c24-5 / hope-01
                                               :ARG0 c24-1
                                               :ARG1 (c24-2 / and
                                                            :op1 (c24-14 / forgive-01
                                                                         :ARG0 (c24-3 / celebrity
                                                                                      :mod (c24-7 / other))
                                                                         :ARG2 c24-17
                                                                         :ARG2-of (c24-8 / have-degree-91
                                                                                         :ARG1 c24-3
                                                                                         :ARG3 (c24-9 / more
                                                                                                      :quant (c24-22 / much))
                                                                                         :ARG4 c24-17))
                                                            :op2 (c24-20 / compassionate
                                                                         :ARG2-of (c24-4 / have-degree-91
                                                                                         :ARG1 c24-3
                                                                                         :ARG3 c24-9)
                                                                         :ARG4 c24-17))))
                      :ARG2 c24-12))

# ::snt That's really not funny.
# ::tokens ["That", "'s", "really", "not", "funny", "."]
# ::lemmas ["that", "be", "really", "not", "funny", "."]
(c25-2 / funny
       :domain (c25-1 / that)
       :degree (c25-0 / really)
       :polarity -)

# ::snt Lawsuit is based on sexual harassment and filed by a white woman
# ::tokens ["Lawsuit", "is", "based", "on", "sexual", "harassment", "and", "filed", "by", "a", "white", "woman"]
# ::lemmas ["Lawsuit", "be", "base", "on", "sexual", "harassment", "and", "file", "by", "a", "white", "woman"]
(c26-6 / and
       :op1 (c26-3 / base-02
                   :ARG1 (c26-0 / sue-02)
                   :ARG2 (c26-5 / harass-01
                                :ARG2 (c26-2 / sex-01)))
       :op2 (c26-7 / file-01
                   :ARG0 (c26-1 / woman
                                :ARG1-of (c26-4 / white-02))
                   :ARG1 c26-0))

# ::snt I'd be willing to sell her the rights, if only she could remember to return the favor.
# ::tokens ["I", "'d", "be", "willing", "to", "sell", "her", "the", "rights", ",", "if", "only", "she", "could", "remember", "to", "return", "the", "favor", "."]
# ::lemmas ["i", "would", "be", "willing", "to", "sell", "she", "the", "right", ",", "if", "only", "she", "could", "remember", "to", "return", "the", "favor", "."]
(c27-7 / will-02
       :ARG0 (c27-2 / i)
       :ARG1 (c27-0 / sell-01
                    :ARG0 c27-2
                    :ARG1 (c27-5 / right-05
                                 :ARG2 (c27-1 / she
                                              :ARG2-of c27-0)))
       :condition (c27-3 / possible-01
                         :ARG1 (c27-4 / remember-01
                                      :ARG0 c27-1
                                      :ARG1 (c27-8 / return-02
                                                   :ARG0 c27-1
                                                   :ARG1 (c27-9 / favor))
                                      :mod (c27-6 / only))))

# ::snt I hope someday people admit that this was a witch hunt.
# ::tokens ["I", "hope", "someday", "people", "admit", "that", "this", "was", "a", "witch", "hunt", "."]
# ::lemmas ["i", "hope", "someday", "people", "admit", "that", "this", "be", "a", "witch", "hunt", "."]
(c28-6 / hope-01
       :ARG0 (c28-3 / i)
       :ARG1 (c28-7 / admit-01
                    :ARG0 (c28-4 / person)
                    :ARG1 (c28-2 / hunt-01
                                 :ARG0 (c28-1 / witch)
                                 :domain (c28-5 / this))
                    :time (c28-0 / someday)))

# ::snt come on Melissa! That's a bit harsh. She who is without sin cast the first stone.
# ::tokens ["come", "on", "Melissa", "!", "That", "'s", "a", "bit", "harsh", ".", "She", "who", "is", "without", "sin", "cast", "the", "first", "stone", "."]
# ::lemmas ["come", "on", "Melissa", "!", "that", "be", "a", "bit", "harsh", ".", "she", "who", "be", "without", "sin", "cast", "the", "first", "stone", "."]
(c29-6 / multi-sentence
       :snt1 (c29-9 / come-on-25
                    :ARG1 (c29-3 / person
                                 :name (c29-11 / name
                                               :op1 "Melissa"))
                    :mode imperative)
       :snt2 (c29-10 / harsh-02
                     :ARG1 (c29-4 / that)
                     :degree (c29-1 / bit))
       :snt3 (c29-7 / cast-01
                    :ARG0 (c29-0 / she
                                 :ARG0-of (c29-2 / sin-01
                                                 :polarity -))
                    :ARG1 (c29-8 / stone
                                 :ord (c29-5 / ordinal-entity
                                             :value 1))))

# ::snt : Paula Deen moves to have discrimination suit dismissed. Just in time for her new book "How To Cook A Jew". just spit my tea.
# ::tokens [":", "Paula", "Deen", "moves", "to", "have", "discrimination", "suit", "dismissed", ".", "Just", "in", "time", "for", "her", "new", "book", "\"", "How", "To", "Cook", "A", "Jew", "\"", ".", "just", "spit", "my", "tea", "."]
# ::lemmas [":", "Paula", "Deen", "move", "to", "have", "discrimination", "suit", "dismiss", ".", "just", "in", "time", "for", "her", "new", "book", "\"", "How", "To", "Cook", "A", "Jew", "\"", ".", "just", "spit", "my", "tea", "."]
(c30-8 / multi-sentence
       :snt1 (c30-15 / move-02
                     :ARG0 (c30-5 / person
                                  :name (c30-14 / name
                                                :op1 "Paula"
                                                :op2 "Deen"))
                     :ARG2 (c30-0 / dismiss-01
                                  :ARG0 c30-5
                                  :ARG1 (c30-1 / sue-02
                                               :ARG2 (c30-2 / discriminate-02))))
       :snt2 (c30-3 / spit-01
                    :ARG0 (c30-4 / i)
                    :ARG1 (c30-7 / tea
                                 :poss c30-4)
                    :mod (c30-11 / just)
                    :time (c30-12 / in-time
                                  :op1 (c30-6 / book
                                              :name (c30-13 / name
                                                            :op1 "How"
                                                            :op2 "To"
                                                            :op3 "Cook"
                                                            :op4 "A"
                                                            :op5 "Jew")
                                              :poss c30-5
                                              :ARG1-of (c30-9 / new-01))
                                  :mod (c30-10 / just))
                    :mode expressive))

# ::snt when does that new show that you're involved in start? hope I haven't missed it.
# ::tokens ["when", "does", "that", "new", "show", "that", "you", "'re", "involved", "in", "start", "?", "hope", "I", "have", "n't", "missed", "it", "."]
# ::lemmas ["when", "do", "that", "new", "show", "that", "you", "be", "involve", "in", "start", "?", "hope", "i", "have", "not", "miss", "it", "."]
(c31-5 / multi-sentence
       :snt1 (c31-0 / start-01
                    :ARG1 (c31-1 / show
                                 :ARG1-of (c31-9 / new-01)
                                 :ARG1-of (c31-2 / involve-01
                                                 :ARG0 (c31-6 / you)))
                    :time (c31-4 / amr-unknown))
       :snt2 (c31-7 / hope-01
                    :ARG0 (c31-8 / i)
                    :ARG1 (c31-10 / miss-02
                                  :ARG0 c31-8
                                  :ARG1 (c31-3 / it)
                                  :polarity -)))

# ::snt mmmmm...so tender.
# ::tokens ["mmmmm", "...", "so", "tender", "."]
# ::lemmas ["mmmmm", "...", "so", "tender", "."]
(c32-0 / tender-02
       :degree (c32-2 / so)
       :mod (c32-1 / hmm))

# ::snt that makes me wonder how to cook a Mick? With potatoes, right?
# ::tokens ["that", "makes", "me", "wonder", "how", "to", "cook", "a", "Mick", "?", "With", "potatoes", ",", "right", "?"]
# ::lemmas ["that", "make", "i", "wonder", "how", "to", "cook", "a", "Mick", "?", "with", "potato", ",", "right", "?"]
(c33-5 / multi-sentence
       :snt1 (c33-10 / make-02
                     :ARG0 (c33-2 / that)
                     :ARG1 (c33-9 / wonder-01
                                  :ARG0 (c33-0 / i)
                                  :ARG1 (c33-3 / thing
                                               :manner-of (c33-7 / cook-01
                                                                 :ARG0 c33-0
                                                                 :ARG1 (c33-1 / person
                                                                              :name (c33-8 / name
                                                                                           :op1 "Mick"))))))
       :snt2 (c33-4 / accompany-01
                    :ARG0 (c33-11 / potato)
                    :ARG1 c33-1
                    :ARG1-of (c33-6 / request-confirmation-91)))

# ::snt QT: Paula Deen moves to have discrimination suit dismissed. Just in time for her new book "How To Cook A Jew".
# ::tokens ["QT", ":", "Paula", "Deen", "moves", "to", "have", "discrimination", "suit", "dismissed", ".", "Just", "in", "time", "for", "her", "new", "book", "\"", "How", "To", "Cook", "A", "Jew", "\"", "."]
# ::lemmas ["qt", ":", "Paula", "Deen", "move", "to", "have", "discrimination", "suit", "dismiss", ".", "just", "in", "time", "for", "her", "new", "book", "\"", "How", "To", "Cook", "A", "Jew", "\"", "."]
(c34-8 / multi-sentence
       :snt1 (c34-1 / say-01
                    :ARG0 (c34-5 / publication
                                 :name (c34-13 / name
                                               :op1 "QT"))
                    :ARG1 (c34-14 / move-02
                                  :ARG0 (c34-15 / person
                                                :name (c34-12 / name
                                                              :op1 "Paula"
                                                              :op2 "Deen"))
                                  :ARG1 (c34-10 / have-04
                                                :ARG0 c34-15
                                                :ARG1 (c34-0 / dismiss-01
                                                             :ARG0 c34-15
                                                             :ARG1 (c34-3 / sue-02
                                                                          :ARG2 (c34-2 / discriminate-02))))))
       :snt2 (c34-4 / in-time
                    :op1 (c34-6 / book
                                :name (c34-9 / name
                                             :op1 "How"
                                             :op2 "To"
                                             :op3 "Cook"
                                             :op4 "A"
                                             :op5 "Jew")
                                :poss c34-15
                                :ARG1-of (c34-7 / new-01))
                    :mod (c34-11 / just)))

# ::snt your better than that
# ::tokens ["your", "better", "than", "that"]
# ::lemmas ["your", "well", "than", "that"]
(c35-2 / have-degree-91
       :ARG1 (c35-3 / you)
       :ARG2 (c35-4 / good-02
                    :ARG1 c35-3)
       :ARG3 (c35-1 / more)
       :ARG4 (c35-0 / that))

# ::snt spoiler alert: don't add bacon
# ::tokens ["spoiler", "alert", ":", "do", "n't", "add", "bacon"]
# ::lemmas ["spoiler", "alert", ":", "do", "not", "add", "bacon"]
(c36-4 / alert-01
       :ARG2 (c36-2 / add-02
                    :ARG0 (c36-3 / you)
                    :ARG1 (c36-1 / bacon)
                    :polarity -
                    :mode imperative)
       :mod (c36-0 / spoil-01))

# ::snt : Paula Deen moves to have discrimination suit dismissed. Just in time for her new book 'How To Cook A Jew'.
# ::tokens [":", "Paula", "Deen", "moves", "to", "have", "discrimination", "suit", "dismissed", ".", "Just", "in", "time", "for", "her", "new", "book", "'", "How", "To", "Cook", "A", "Jew", "'", "."]
# ::lemmas [":", "Paula", "Deen", "move", "to", "have", "discrimination", "suit", "dismiss", ".", "just", "in", "time", "for", "her", "new", "book", "'", "How", "To", "Cook", "A", "Jew", "'", "."]
(c37-6 / multi-sentence
       :snt1 (c37-11 / move-02
                     :ARG0 (c37-5 / person
                                  :name (c37-10 / name
                                                :op1 "Paula"
                                                :op2 "Deen"))
                     :ARG2 (c37-0 / dismiss-01
                                  :ARG0 c37-5
                                  :ARG1 (c37-1 / sue-02
                                               :ARG2 (c37-2 / discriminate-02))))
       :snt2 (c37-3 / in-time
                    :op1 (c37-4 / book
                                :name (c37-9 / name
                                             :op1 "How"
                                             :op2 "To"
                                             :op3 "Cook"
                                             :op4 "A"
                                             :op5 "Jew")
                                :poss c37-5
                                :ARG1-of (c37-7 / new-01))
                    :mod (c37-8 / just)))

# ::snt Mulligan Jew?
# ::tokens ["Mulligan", "Jew", "?"]
# ::lemmas ["Mulligan", "Jew", "?"]
(c38-1 / person
       :polarity (c38-0 / amr-unknown)
       :name (c38-2 / name
                    :op1 "Mulligan"
                    :op2 "Jew"))
