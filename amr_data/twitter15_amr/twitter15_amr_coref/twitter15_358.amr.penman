# ::snt READERS WATCH THE VIDEO IN THIS EXPERT ARTICLE. Note the expert's caution how walls stop SIAs, Special Interest Alien, govt speak for terrorist. PRESIDENT we banned Kool Aid Speech for all of
# ::tokens ["READERS", "WATCH", "THE", "VIDEO", "IN", "THIS", "EXPERT", "ARTICLE", ".", "Note", "the", "expert", "'s", "caution", "how", "walls", "stop", "SIAs", ",", "Special", "Interest", "Alien", ",", "govt", "speak", "for", "terrorist", ".", "PRESIDENT", "we", "banned", "Kool", "Aid", "Speech", "for", "all", "of"]
# ::lemmas ["reader", "watch", "the", "video", "in", "this", "expert", "article", ".", "note", "the", "expert", "'s", "caution", "how", "wall", "stop", "sia", ",", "Special", "Interest", "Alien", ",", "govt", "speak", "for", "terrorist", ".", "PRESIDENT", "we", "ban", "Kool", "Aid", "Speech", "for", "all", "of"]
(c1-18 / multi-sentence
       :snt1 (c1-12 / watch-01
                    :ARG0 (c1-15 / person
                                 :ARG0-of (c1-4 / read-01))
                    :ARG1 (c1-25 / video)
                    :location (c1-11 / article
                                     :ARG1-of (c1-14 / EXPERT-01)
                                     :mod (c1-27 / this)))
       :snt2 (c1-24 / note-01
                    :ARG0 (c1-22 / you)
                    :ARG1 (c1-2 / caution-01
                                :ARG0 (c1-26 / person
                                             :ARG1-of (c1-16 / expert-01))
                                :ARG2 (c1-17 / thing
                                             :manner-of (c1-0 / stop-01
                                                              :ARG0 (c1-29 / wall)
                                                              :ARG1 (c1-13 / person
                                                                           :ARG1-of (c1-6 / specialize-01)
                                                                           :ARG1-of (c1-1 / alien-01)
                                                                           :ARG1-of (c1-9 / speak-01
                                                                                          :ARG3 (c1-31 / government-organization
                                                                                                       :ARG0-of (c1-19 / govern-01))
                                                                                          :beneficiary (c1-8 / terrorist))))))
                    :mode imperative)
       :snt3 (c1-7 / ban-01
                   :ARG0 (c1-3 / we)
                   :ARG1 (c1-5 / speak-01
                               :ARG1 (c1-28 / aid
                                            :name (c1-23 / name
                                                         :op1 "Kool"
                                                         :op2 "Aid"))
                               :mod (c1-21 / all))
                   :ARG2 (c1-10 / person
                                :ARG0-of (c1-30 / have-org-role-91
                                                :ARG2 (c1-20 / president)))))

# ::snt READERS WATCH THE VIDEO IN THIS EXPERT ARTICLE. Note the expert's caution how walls stop SIAs, Special Interest Alien, govt speak for terrorist. PRESIDENT we banned Kool Aid Speech for all of .
# ::tokens ["READERS", "WATCH", "THE", "VIDEO", "IN", "THIS", "EXPERT", "ARTICLE", ".", "Note", "the", "expert", "'s", "caution", "how", "walls", "stop", "SIAs", ",", "Special", "Interest", "Alien", ",", "govt", "speak", "for", "terrorist", ".", "PRESIDENT", "we", "banned", "Kool", "Aid", "Speech", "for", "all", "of", "."]
# ::lemmas ["reader", "watch", "the", "video", "in", "this", "expert", "article", ".", "note", "the", "expert", "'s", "caution", "how", "wall", "stop", "sia", ",", "Special", "Interest", "Alien", ",", "govt", "speak", "for", "terrorist", ".", "PRESIDENT", "we", "ban", "Kool", "Aid", "Speech", "for", "all", "of", "."]
(c2-17 / multi-sentence
       :snt1 (c2-11 / watch-01
                    :ARG0 (c2-14 / person
                                 :ARG0-of (c2-4 / read-01))
                    :ARG1 (c2-23 / video)
                    :location (c2-10 / article
                                     :ARG1-of (c2-13 / EXPERT-01)
                                     :mod (c2-25 / this)))
       :snt2 (c2-22 / note-01
                    :ARG0 (c2-20 / you)
                    :ARG1 (c2-2 / caution-01
                                :ARG0 (c2-24 / person
                                             :ARG1-of (c2-15 / expert-01))
                                :ARG2 (c2-16 / thing
                                             :manner-of (c2-0 / stop-01
                                                              :ARG0 (c2-27 / wall)
                                                              :ARG1 (c2-12 / person
                                                                           :ARG1-of (c2-6 / specialize-01)
                                                                           :ARG1-of (c2-1 / alien-01)
                                                                           :ARG1-of (c2-9 / speak-01
                                                                                          :ARG2 (c2-28 / government-organization
                                                                                                       :ARG0-of (c2-18 / govern-01))
                                                                                          :beneficiary (c2-8 / terrorist))))))
                    :mode imperative)
       :snt3 (c2-7 / ban-01
                   :ARG0 (c2-3 / we)
                   :ARG1 (c2-5 / speak-01
                               :ARG1 (c2-26 / aid
                                            :name (c2-21 / name
                                                         :op1 "Kool"
                                                         :op2 "Aid")))
                   :beneficiary (c2-19 / all)))

# ::snt WATCH: Trump promised Mexico would pay for the border wall. Now he says he'll make U.S. tax payers to pay for it.
# ::tokens ["WATCH", ":", "Trump", "promised", "Mexico", "would", "pay", "for", "the", "border", "wall", ".", "Now", "he", "says", "he", "'ll", "make", "U.S.", "tax", "payers", "to", "pay", "for", "it", "."]
# ::lemmas ["watch", ":", "Trump", "promise", "Mexico", "would", "pay", "for", "the", "border", "wall", ".", "now", "he", "say", "he", "'ll", "make", "U.S.", "tax", "payer", "to", "pay", "for", "it", "."]
(c3-10 / multi-sentence
       :snt1 (c3-6 / watch-01
                   :ARG1 (c3-9 / promise-01
                               :ARG0 (c3-15 / person
                                            :name (c3-13 / name
                                                         :op1 "Trump"))
                               :ARG1 (c3-1 / country
                                           :name (c3-12 / name
                                                        :op1 "Mexico"))
                               :ARG2 (c3-8 / pay-01
                                           :ARG0 c3-1
                                           :ARG3 (c3-18 / wall
                                                        :location (c3-3 / border)))))
       :snt2 (c3-0 / say-01
                   :ARG0 (c3-19 / he)
                   :ARG1 (c3-7 / make-02
                               :ARG0 c3-19
                               :ARG1 (c3-4 / pay-01
                                           :ARG0 (c3-11 / person
                                                        :ARG0-of (c3-2 / pay-01
                                                                       :ARG3 (c3-16 / tax))
                                                        :mod (c3-17 / country
                                                                    :name (c3-5 / name
                                                                                :op1 "U.S.")))
                                           :ARG3 c3-18)
                               :time (c3-14 / now))))

# ::snt . hasnt spent % of the border security money over the last two years. %! This isnt about border security, its about politics.
# ::tokens [".", "has", "nt", "spent", "%", "of", "the", "border", "security", "money", "over", "the", "last", "two", "years", ".", "%", "!", "This", "is", "nt", "about", "border", "security", ",", "its", "about", "politics", "."]
# ::lemmas [".", "have", "not", "spend", "%", "of", "the", "border", "security", "money", "over", "the", "last", "two", "years", ".", "%", "!", "this", "be", "not", "about", "border", "security", ",", "its", "about", "politic", "."]
(c4-6 / multi-sentence
      :snt1 (c4-0 / spend-01
                  :ARG3 (c4-3 / percentage-entity
                              :value-of (c4-13 / money
                                               :purpose (c4-1 / secure-02
                                                              :ARG1 (c4-2 / border))))
                  :time (c4-10 / before
                               :op1 (c4-12 / now)
                               :duration (c4-4 / temporal-quantity
                                               :unit (c4-11 / year)
                                               :quant 2))
                  :polarity -)
      :snt2 (c4-8 / contrast-01
                  :ARG1 (c4-7 / concern-02
                              :ARG0 (c4-5 / this)
                              :ARG1 c4-1
                              :polarity -)
                  :ARG2 (c4-9 / concern-02
                              :ARG0 c4-5
                              :ARG1 (c4-14 / politics))))

# ::snt So, you're saying that ISIS is coming up from Honduras? You should probably spend some time with a map, a history book, and a therapist.
# ::tokens ["So", ",", "you", "'re", "saying", "that", "ISIS", "is", "coming", "up", "from", "Honduras", "?", "You", "should", "probably", "spend", "some", "time", "with", "a", "map", ",", "a", "history", "book", ",", "and", "a", "therapist", "."]
# ::lemmas ["so", ",", "you", "be", "say", "that", "ISIS", "be", "come", "up", "from", "Honduras", "?", "you", "should", "probably", "spend", "some", "time", "with", "a", "map", ",", "a", "history", "book", ",", "and", "a", "therapist", "."]
(c5-13 / multi-sentence
       :snt1 (c5-0 / say-01
                   :ARG0 (c5-14 / you)
                   :ARG1 (c5-2 / come-up-13
                               :ARG1 (c5-18 / criminal-organization
                                            :name (c5-16 / name
                                                         :op1 "ISI"))
                               :ARG2 (c5-7 / country
                                           :name (c5-15 / name
                                                        :op1 "Honduras")))
                   :polarity (c5-8 / amr-unknown))
       :snt2 (c5-3 / recommend-01
                   :ARG1 (c5-4 / spend-02
                               :ARG0 (c5-10 / you)
                               :ARG1 (c5-17 / time
                                            :quant (c5-6 / some))
                               :ARG2 (c5-1 / and
                                           :op1 (c5-9 / map)
                                           :op2 (c5-5 / book
                                                      :topic (c5-19 / history))
                                           :op3 (c5-12 / therapist))
                               :mod (c5-11 / probable))
                   :ARG2 c5-10))

# ::snt Bathe ISIS and bring them to me!
# ::tokens ["Bathe", "ISIS", "and", "bring", "them", "to", "me", "!"]
# ::lemmas ["bathe", "ISIS", "and", "bring", "they", "to", "i", "!"]
(c6-6 / and
      :op1 (c6-0 / bathe-01
                 :ARG0 (c6-5 / you)
                 :ARG1 (c6-3 / criminal-organization
                             :name (c6-2 / name
                                         :op1 "Islamic"
                                         :op2 "organization"))
                 :mode imperative)
      :op2 (c6-4 / bring-01
                 :ARG0 c6-5
                 :ARG1 c6-3
                 :ARG2 (c6-1 / i)
                 :mode imperative))

# ::snt It's "ISES". Make English Great Again!
# ::tokens ["It", "'s", "\"", "ISES", "\"", ".", "Make", "English", "Great", "Again", "!"]
# ::lemmas ["it", "be", "\"", "ISES", "\"", ".", "Make", "English", "Great", "again", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-0 / it
                  :ARG1-of (c7-5 / identical-01))
      :snt2 (c7-7 / make-01
                  :ARG0 (c7-4 / you)
                  :ARG1 (c7-8 / great
                              :domain (c7-3 / country
                                            :name (c7-6 / name
                                                        :op1 "England")))
                  :mod (c7-1 / again)
                  :mode imperative))

# ::snt MAGA. THANK YOY
# ::tokens ["MAGA", ".", "THANK", "YOY"]
# ::lemmas ["MAGA", ".", "thank", "YOY"]
(c8-3 / multi-sentence
      :snt1 (c8-2 / thank-01
                  :ARG0 (c8-0 / i)
                  :ARG1 (c8-1 / person
                              :name (c8-6 / name
                                          :op1 "MAGA"))
                  :snt2-of c8-3)
      :ARG0 (c8-5 / i)
      :ARG1 (c8-4 / you))

# ::snt It will be a great wall. ft. tall should do it.
# ::tokens ["It", "will", "be", "a", "great", "wall", ".", "ft", ".", "tall", "should", "do", "it", "."]
# ::lemmas ["it", "will", "be", "a", "great", "wall", ".", "ft", ".", "tall", "should", "do", "it", "."]
(c9-4 / recommend-01
      :ARG1 (c9-5 / do-02
                  :ARG0 (c9-1 / wall
                              :mod (c9-7 / great)
                              :ARG1-of (c9-3 / tall-02
                                             :ARG2 (c9-0 / distance-quantity
                                                         :unit (c9-6 / foot)
                                                         :quant 1)))
                  :ARG1 (c9-2 / it)))

# ::snt Just glad to have my faith in the God Emperor restored
# ::tokens ["Just", "glad", "to", "have", "my", "faith", "in", "the", "God", "Emperor", "restored"]
# ::lemmas ["just", "glad", "to", "have", "my", "faith", "in", "the", "God", "Emperor", "restore"]
(c10-5 / glad-02
       :ARG0 (c10-6 / restore-02
                    :ARG1 (c10-8 / faith
                                 :poss (c10-0 / i)
                                 :prep-in (c10-1 / person
                                                 :name (c10-2 / name
                                                              :op1 "God")
                                                 :ARG0-of (c10-3 / have-org-role-91
                                                                 :ARG2 (c10-7 / emperor)))))
       :ARG1 c10-0
       :mod (c10-4 / just))

# ::snt no problem good sir
# ::tokens ["no", "problem", "good", "sir"]
# ::lemmas ["no", "problem", "good", "sir"]
(c11-0 / say-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-3 / problem
                    :polarity -)
       :ARG2 (c11-1 / sir))

# ::snt Oh shit thank you! My bad, my bad
# ::tokens ["Oh", "shit", "thank", "you", "!", "My", "bad", ",", "my", "bad"]
# ::lemmas ["oh", "shit", "thank", "you", "!", "my", "bad", ",", "my", "bad"]
(c12-6 / multi-sentence
       :snt1 (c12-4 / thank-01
                    :ARG0 (c12-1 / i)
                    :ARG1 (c12-8 / you)
                    :mod (c12-0 / shit
                                :mode expressive))
       :snt2 (c12-10 / and
                     :op1 (c12-5 / thing
                                 :ARG1-of (c12-2 / bad-07
                                                 :ARG0 (c12-9 / i)))
                     :op2 (c12-3 / thing
                                 :ARG1-of (c12-7 / bad-07
                                                 :ARG0 c12-9))))

# ::snt Yea, you missed it...
# ::tokens ["Yea", ",", "you", "missed", "it", "..."]
# ::lemmas ["yea", ",", "you", "miss", "it", "..."]
(c13-2 / miss-02
       :ARG0 (c13-1 / you)
       :ARG1 (c13-0 / it))

# ::snt Maybe I missed it, but when, sir? Ive not heard you give even a vague year. Now is not the time to delay.
# ::tokens ["Maybe", "I", "missed", "it", ",", "but", "when", ",", "sir", "?", "I", "ve", "not", "heard", "you", "give", "even", "a", "vague", "year", ".", "Now", "is", "not", "the", "time", "to", "delay", "."]
# ::lemmas ["maybe", "i", "miss", "it", ",", "but", "when", ",", "sir", "?", "i", "ve", "not", "hear", "you", "give", "even", "a", "vague", "year", ".", "now", "be", "not", "the", "time", "to", "delay", "."]
(c14-7 / multi-sentence
       :snt1 (c14-8 / contrast-01
                    :ARG1 (c14-5 / possible-01
                                 :ARG1 (c14-14 / miss-02
                                               :ARG0 (c14-3 / i)
                                               :ARG1 (c14-12 / it)))
                    :ARG2 (c14-4 / be-temporally-at-91
                                 :ARG2 (c14-13 / amr-unknown)))
       :snt2 (c14-10 / hear-01
                     :ARG0 c14-3
                     :ARG1 (c14-17 / give-01
                                   :ARG0 (c14-11 / you)
                                   :ARG1 (c14-1 / year
                                                :mod (c14-15 / vague)
                                                :mod (c14-16 / even)))
                     :ARG2 (c14-2 / sir)
                     :polarity -)
       :snt3 (c14-9 / now
                    :domain (c14-6 / time
                                   :purpose (c14-0 / delay-01)
                                   :polarity -)))

# ::snt So what's stopping you? Build that wall Now n Bzn Muslims from entering our country.
# ::tokens ["So", "what", "'s", "stopping", "you", "?", "Build", "that", "wall", "Now", "n", "Bzn", "Muslims", "from", "entering", "our", "country", "."]
# ::lemmas ["so", "what", "be", "stop", "you", "?", "build", "that", "wall", "now", "n", "Bzn", "Muslims", "from", "enter", "our", "country", "."]
(c15-6 / multi-sentence
       :snt1 (c15-0 / stop-03
                    :ARG0 (c15-12 / amr-unknown)
                    :ARG1 (c15-10 / you))
       :snt2 (c15-3 / build-01
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-2 / wall)
                    :time (c15-7 / now)
                    :purpose (c15-4 / prevent-01
                                    :ARG0 c15-1
                                    :ARG1 (c15-14 / enter-01
                                                  :ARG0 (c15-15 / person
                                                                :mod (c15-5 / religious-group
                                                                            :name (c15-11 / name
                                                                                          :op1 "Muslim"))
                                                                :mod (c15-13 / political-movement
                                                                             :name c15-11
                                                                             :op1 "BZ"))
                                                  :polarity -)
                                    :ARG1 (c15-8 / country
                                                 :poss (c15-9 / we)))
                    :mode imperative))

# ::snt Still waiting on his plan to defeat ISIL. Didn't he say he'd have a plan on "Day One?"
# ::tokens ["Still", "waiting", "on", "his", "plan", "to", "defeat", "ISIL", ".", "Did", "n't", "he", "say", "he", "'d", "have", "a", "plan", "on", "\"", "Day", "One", "?", "\""]
# ::lemmas ["still", "wait", "on", "his", "plan", "to", "defeat", "ISIL", ".", "do", "not", "he", "say", "he", "would", "have", "a", "plan", "on", "\"", "Day", "one", "?", "\""]
(c16-7 / multi-sentence
       :snt1 (c16-11 / wait-01
                     :ARG1 (c16-10 / he)
                     :ARG2 (c16-4 / plan-01
                                  :ARG0 c16-10
                                  :ARG1 (c16-12 / defeat-01
                                                :ARG0 c16-10
                                                :ARG1 (c16-8 / criminal-organization
                                                             :name (c16-9 / name
                                                                          :op1 "ISI"))))
                     :mod (c16-0 / still))
       :snt2 (c16-2 / say-01
                    :ARG0 (c16-3 / he)
                    :ARG1 (c16-13 / plan-01
                                  :ARG0 c16-3
                                  :time (c16-1 / day
                                               :ord (c16-5 / ordinal-entity
                                                           :value 1)))
                    :polarity (c16-6 / amr-unknown)
                    :polarity -))

# ::snt You're a Dumbass!
# ::tokens ["You", "'re", "a", "Dumbass", "!"]
# ::lemmas ["you", "be", "a", "Dumbass", "!"]
(c17-0 / dumbass
       :domain (c17-1 / you))

# ::snt Wall will not be big enough. Import tax will kill the US economy. Isolation is not the solution.
# ::tokens ["Wall", "will", "not", "be", "big", "enough", ".", "Import", "tax", "will", "kill", "the", "US", "economy", ".", "Isolation", "is", "not", "the", "solution", "."]
# ::lemmas ["Wall", "will", "not", "be", "big", "enough", ".", "import", "tax", "will", "kill", "the", "US", "economy", ".", "isolation", "be", "not", "the", "solution", "."]
(c18-6 / multi-sentence
       :snt1 (c18-8 / have-degree-91
                    :ARG1 (c18-12 / market-sector
                                  :name (c18-11 / name
                                                :op1 "Wall"))
                    :ARG2 (c18-2 / big)
                    :ARG3 (c18-13 / enough)
                    :polarity -)
       :snt2 (c18-1 / kill-01
                    :ARG0 (c18-4 / tax-01
                                 :ARG1-of (c18-3 / import-01))
                    :ARG1 (c18-5 / economy
                                 :mod (c18-7 / country
                                             :name (c18-9 / name
                                                          :op1 "US"))))
       :snt3 (c18-0 / solve-01
                    :ARG2 (c18-10 / isolate-01)
                    :polarity -))

# ::snt I understand.
# ::tokens ["I", "understand", "."]
# ::lemmas ["i", "understand", "."]
(c20-0 / understand-01
       :ARG0 (c20-1 / i))

# ::snt True!
# ::tokens ["True", "!"]
# ::lemmas ["true", "!"]
(c21-0 / true-01)

# ::snt Some read it; others read into it.
# ::tokens ["Some", "read", "it", ";", "others", "read", "into", "it", "."]
# ::lemmas ["some", "read", "it", ";", "other", "read", "into", "it", "."]
(c22-5 / contrast-01
       :ARG1 (c22-6 / read-01
                    :ARG0 (c22-2 / person
                                 :quant (c22-0 / some))
                    :ARG1 (c22-1 / it))
       :ARG2 (c22-3 / read-01
                    :ARG0 (c22-7 / person
                                 :mod (c22-4 / other))
                    :ARG2 c22-1))

# ::snt you have the money, your the great builder, why haven't you built it already ?Cruz appropriated $ to build
# ::tokens ["you", "have", "the", "money", ",", "your", "the", "great", "builder", ",", "why", "have", "n't", "you", "built", "it", "already", "?", "Cruz", "appropriated", "$", "to", "build"]
# ::lemmas ["you", "have", "the", "money", ",", "your", "the", "great", "builder", ",", "why", "have", "not", "you", "build", "it", "already", "?", "Cruz", "appropriate", "$", "to", "build"]
(c25-12 / multi-sentence
        :snt1 (c25-18 / have-03
                      :ARG0 (c25-13 / you)
                      :ARG1 (c25-8 / money))
        :snt2 (c25-11 / person
                      :ARG0-of (c25-5 / build-01)
                      :mod (c25-19 / great)
                      :domain (c25-10 / you))
        :snt3 (c25-3 / cause-01
                     :ARG0 (c25-7 / amr-unknown)
                     :ARG1 (c25-4 / build-01
                                  :ARG0 (c25-15 / person
                                                :name (c25-14 / name
                                                              :op1 "Cruz"))
                                  :ARG1 (c25-0 / it)
                                  :time (c25-2 / already)
                                  :polarity -))
        :snt4 (c25-16 / appropriate-01
                      :ARG0 (c25-9 / person
                                   :name c25-14
                                   :op1 "Cruz"))
        :ARG1 (c25-6 / monetary-quantity
                     :ARG1-of (c25-17 / cost-01
                                      :ARG2 (c25-1 / build-01))))

# ::snt Protecting the citizens of America is the priority...
# ::tokens ["Protecting", "the", "citizens", "of", "America", "is", "the", "priority", "..."]
# ::lemmas ["protect", "the", "citizen", "of", "America", "be", "the", "priority", "..."]
(c26-0 / prioritize-01
       :ARG1 (c26-4 / protect-01
                    :ARG1 (c26-2 / citizen
                                 :mod (c26-1 / country
                                             :name (c26-3 / name
                                                          :op1 "America")))))

# ::snt thats a lie thats been debunked .. yet u still spread the fear factor smh ur disgusting
# ::tokens ["that", "s", "a", "lie", "that", "s", "been", "debunked", "..", "yet", "u", "still", "spread", "the", "fear", "factor", "smh", "ur", "disgusting"]
# ::lemmas ["that", "s", "a", "lie", "that", "s", "be", "debunk", "..", "yet", "u", "still", "spread", "the", "fear", "factor", "smh", "ur", "disgust"]
(c27-7 / and
       :op1 (c27-8 / debunk-01
                   :ARG1 (c27-4 / lie-08
                                :ARG1 (c27-5 / that)))
       :op2 (c27-1 / spread-03
                   :ARG0 (c27-6 / you)
                   :ARG1 (c27-9 / factor
                                :topic (c27-0 / fear-01))
                   :mod (c27-3 / still)
                   :concession-of (c27-2 / disgust-01
                                         :ARG0 c27-6)))

# ::snt Mr. Trump is indeed a DNA drone who inherited a ton of dough. Run for office, Mr.Trump !
# ::tokens ["Mr.", "Trump", "is", "indeed", "a", "DNA", "drone", "who", "inherited", "a", "ton", "of", "dough", ".", "Run", "for", "office", ",", "Mr.", "Trump", "!"]
# ::lemmas ["Mr.", "Trump", "be", "indeed", "a", "dna", "drone", "who", "inherit", "a", "ton", "of", "dough", ".", "run", "for", "office", ",", "Mr.", "Trump", "!"]
(c28-7 / multi-sentence
       :snt1 (c28-13 / drone
                     :mod (c28-12 / nucleic-acid
                                  :name (c28-10 / name
                                                :op1 "DNA"))
                     :ARG0-of (c28-1 / inherit-01
                                     :ARG1 (c28-0 / dough
                                                  :quant (c28-2 / mass-quantity
                                                                :unit (c28-4 / ton)
                                                                :quant 1)))
                     :domain (c28-3 / person
                                    :name (c28-8 / name
                                                 :op1 "Mr."
                                                 :op2 "Trump"))
                     :mod (c28-11 / indeed))
       :snt2 (c28-5 / run-02
                    :ARG0 (c28-9 / you)
                    :ARG1 (c28-6 / office)
                    :mode imperative))

# ::snt I hear is one cup guy but if you're not throwing s then take that up with mrs. V, house rules
# ::tokens ["I", "hear", "is", "one", "cup", "guy", "but", "if", "you", "'re", "not", "throwing", "s", "then", "take", "that", "up", "with", "mrs", ".", "V", ",", "house", "rules"]
# ::lemmas ["i", "hear", "be", "one", "cup", "guy", "but", "if", "you", "be", "not", "throw", "s", "then", "take", "that", "up", "with", "mrs", ".", "V", ",", "house", "rule"]
(c29-8 / contrast-01
       :ARG1 (c29-9 / hear-01
                    :ARG0 (c29-1 / i)
                    :ARG1 (c29-12 / guy
                                  :mod (c29-7 / cup)
                                  :quant 1))
       :ARG2 (c29-2 / have-condition-91
                    :ARG1 (c29-4 / take-up-31
                                 :ARG0 (c29-10 / you)
                                 :ARG1 (c29-5 / throw-01
                                              :ARG0 c29-10
                                              :ARG1 c29-7
                                              :polarity -)
                                 :ARG2 (c29-3 / person
                                              :name (c29-11 / name
                                                            :op1 "Mr."
                                                            :op2 "V")
                                              :ARG0-of (c29-0 / say-01
                                                              :ARG1 (c29-6 / rule-01
                                                                           :ARG1 (c29-13 / house)))))
                    :ARG2 c29-5))

# ::snt a real amrrican
# ::tokens ["a", "real", "amrrican"]
# ::lemmas ["a", "real", "amrrican"]
(c30-2 / person
       :mod (c30-3 / country
                   :name (c30-0 / name
                                :op1 "America"))
       :ARG1-of (c30-1 / real-04))

# ::snt that didn't include the guard towers and searchlights
# ::tokens ["that", "did", "n't", "include", "the", "guard", "towers", "and", "searchlights"]
# ::lemmas ["that", "do", "not", "include", "the", "guard", "tower", "and", "searchlight"]
(c31-0 / include-01
       :ARG1 (c31-4 / and
                    :op1 (c31-1 / tower
                                :mod (c31-3 / guard))
                    :op2 (c31-5 / flashlight))
       :ARG2 (c31-2 / that)
       :polarity -)

# ::snt have you been watching game of thrones?
# ::tokens ["have", "you", "been", "watching", "game", "of", "thrones", "?"]
# ::lemmas ["have", "you", "be", "watch", "game", "of", "throne", "?"]
(c32-3 / watch-01
       :ARG0 (c32-2 / you)
       :ARG1 (c32-4 / game
                    :name (c32-1 / name
                                 :op1 "Game"
                                 :op2 "of"
                                 :op3 "Thrones"))
       :polarity (c32-0 / amr-unknown))

# ::snt They do look pretty dangerous.
# ::tokens ["They", "do", "look", "pretty", "dangerous", "."]
# ::lemmas ["they", "do", "look", "pretty", "dangerous", "."]
(c33-0 / look-02
       :ARG0 (c33-1 / they)
       :ARG1 (c33-2 / dangerous
                    :degree (c33-3 / pretty)))

# ::snt maybe you two should talk..
# ::tokens ["maybe", "you", "two", "should", "talk", ".."]
# ::lemmas ["maybe", "you", "two", "should", "talk", ".."]
(c34-3 / possible-01
       :ARG1 (c34-0 / recommend-01
                    :ARG1 (c34-1 / talk-01
                                 :ARG0 (c34-2 / you
                                              :quant 2))))

# ::snt cough cough
# ::tokens ["cough", "cough"]
# ::lemmas ["cough", "cough"]
(c35-0 / cough-01
       :mod c35-0)
