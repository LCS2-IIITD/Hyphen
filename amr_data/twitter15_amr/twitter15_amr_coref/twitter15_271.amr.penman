# ::snt U have to be the most beautiful woman, at least % of that beauty comes from your mind you're incredibly intelligent
# ::tokens ["U", "have", "to", "be", "the", "most", "beautiful", "woman", ",", "at", "least", "%", "of", "that", "beauty", "comes", "from", "your", "mind", "you", "'re", "incredibly", "intelligent"]
# ::lemmas ["u", "have", "to", "be", "the", "most", "beautiful", "woman", ",", "at", "least", "%", "of", "that", "beauty", "come", "from", "your", "mind", "you", "be", "incredibly", "intelligent"]
(c1-13 / and
       :op1 (c1-5 / obligate-01
                  :ARG1 (c1-0 / woman
                              :domain (c1-10 / you)
                              :ARG1-of (c1-11 / have-degree-91
                                              :ARG2 (c1-1 / beautiful-02
                                                          :ARG1 c1-0)
                                              :ARG3 (c1-6 / most))))
       :op2 (c1-8 / come-03
                  :ARG1 (c1-9 / beauty
                              :ARG1-of (c1-2 / include-91
                                             :ARG2 c1-1
                                             :ARG1 c1-9)
                              :ARG3 (c1-7 / at-least
                                          :op1 (c1-3 / percentage-entity
                                                     :value "-1"))))
       :ARG2 (c1-14 / mind
                    :part-of c1-10)
       :op3 (c1-12 / intelligent-01
                   :ARG1 c1-10
                   :degree (c1-4 / incredible)))

# ::snt Put him in a room with a bunch of hungry pigs.....
# ::tokens ["Put", "him", "in", "a", "room", "with", "a", "bunch", "of", "hungry", "pigs", "....."]
# ::lemmas ["put", "he", "in", "a", "room", "with", "a", "bunch", "of", "hungry", "pig", "....."]
(c2-2 / put-01
      :ARG0 (c2-3 / you)
      :ARG1 (c2-4 / he)
      :ARG2 (c2-5 / room
                  :prep-with (c2-6 / pig
                                   :ARG0-of (c2-0 / hunger-01)
                                   :quant (c2-1 / bunch)))
      :mode imperative)

# ::snt Alweed is the man at Fox is that reason you do not have Robert Spencer on your show?
# ::tokens ["Alweed", "is", "the", "man", "at", "Fox", "is", "that", "reason", "you", "do", "not", "have", "Robert", "Spencer", "on", "your", "show", "?"]
# ::lemmas ["alweed", "be", "the", "man", "at", "Fox", "be", "that", "reason", "you", "do", "not", "have", "Robert", "Spencer", "on", "your", "show", "?"]
(c3-4 / man
      :domain (c3-2 / person
                    :name (c3-10 / name
                                 :op1 "Alweed"))
      :location (c3-1 / broadcast-program
                      :name (c3-9 / name
                                  :op1 "Fox"))
      :ARG0-of (c3-5 / cause-01
                     :ARG1 (c3-7 / have-03
                                 :ARG0 (c3-8 / you)
                                 :ARG1 (c3-11 / person
                                              :name (c3-6 / name
                                                          :op1 "Robert"
                                                          :op2 "Spencer"))
                                 :location (c3-0 / show-04
                                                 :ARG0 c3-8)
                                 :polarity -)
                     :polarity (c3-3 / amr-unknown)))

# ::snt Given world events, Fox should give Robert his own show.
# ::tokens ["Given", "world", "events", ",", "Fox", "should", "give", "Robert", "his", "own", "show", "."]
# ::lemmas ["give", "world", "event", ",", "Fox", "should", "give", "Robert", "his", "own", "show", "."]
(c4-7 / recommend-01
      :ARG1 (c4-9 / give-01
                  :ARG0 (c4-2 / broadcast-program
                              :name (c4-4 / name
                                          :op1 "Fox"))
                  :ARG1 (c4-0 / show-04
                              :ARG0 (c4-3 / person
                                          :name (c4-6 / name
                                                      :op1 "Robert")
                                          :ARG2-of c4-9)))
      :ARG1-of (c4-5 / cause-01
                     :ARG0 (c4-8 / event
                                 :mod (c4-1 / world))))

# ::snt Good.
# ::tokens ["Good", "."]
# ::lemmas ["good", "."]
(c5-0 / good-02)

# ::snt Islam is not peaceful
# ::tokens ["Islam", "is", "not", "peaceful"]
# ::lemmas ["Islam", "be", "not", "peaceful"]
(c6-1 / peaceful
      :domain (c6-0 / religious-group
                    :name (c6-2 / name
                                :op1 "Islam"))
      :polarity -)

# ::snt the death penalty means death ! He better not sit in a cell for years on our dime !
# ::tokens ["the", "death", "penalty", "means", "death", "!", "He", "better", "not", "sit", "in", "a", "cell", "for", "years", "on", "our", "dime", "!"]
# ::lemmas ["the", "death", "penalty", "mean", "death", "!", "he", "well", "not", "sit", "in", "a", "cell", "for", "years", "on", "our", "dime", "!"]
(c7-7 / multi-sentence
      :snt1 (c7-3 / mean-01
                  :ARG1 (c7-5 / penalty
                              :mod (c7-13 / die-01))
                  :ARG2 (c7-0 / die-01))
      :snt2 (c7-12 / recommend-01
                   :ARG1 (c7-1 / sit-01
                               :ARG1 (c7-10 / he)
                               :ARG2 (c7-8 / cell)
                               :duration (c7-9 / multiple
                                               :op1 (c7-6 / temporal-quantity
                                                          :unit (c7-11 / year)
                                                          :quant 1))
                               :prep-on (c7-2 / dime
                                              :poss (c7-4 / we))
                               :polarity -)))

# ::snt the Prophet Muhammad had several wifes.One wife, Aisha, he married at age and took her into his house at .We don't hear that!
# ::tokens ["the", "Prophet", "Muhammad", "had", "several", "wifes", ".", "One", "wife", ",", "Aisha", ",", "he", "married", "at", "age", "and", "took", "her", "into", "his", "house", "at", ".We", "do", "n't", "hear", "that", "!"]
# ::lemmas ["the", "Prophet", "Muhammad", "have", "several", "wife", ".", "One", "wife", ",", "Aisha", ",", "he", "marry", "at", "age", "and", "take", "she", "into", "his", "house", "at", ".we", "do", "not", "hear", "that", "!"]
(c8-13 / multi-sentence
       :snt1 (c8-19 / have-03
                    :ARG0 (c8-11 / person
                                 :name (c8-14 / name
                                              :op1 "Prophet"
                                              :op2 "Muhammad"))
                    :ARG1 (c8-15 / person
                                 :quant (c8-0 / several)
                                 :ARG0-of (c8-5 / have-rel-role-91
                                                :ARG1 c8-11
                                                :ARG2 (c8-7 / wife))))
       :snt2 (c8-8 / and
                   :op1 (c8-9 / marry-01
                              :ARG1 (c8-4 / he)
                              :ARG2 (c8-10 / person
                                           :ARG0-of (c8-6 / have-rel-role-91
                                                          :ARG1 c8-4
                                                          :ARG2 (c8-17 / wife))
                                           :quant 1)
                              :time (c8-1 / age-01
                                          :ARG1 c8-4))
                   :op2 (c8-16 / take-01
                               :ARG0 c8-4
                               :ARG1 c8-10
                               :ARG3 (c8-3 / house
                                           :poss c8-4)))
       :snt3 (c8-18 / hear-01
                    :ARG0 (c8-2 / we)
                    :ARG1 (c8-12 / that)
                    :polarity -))

# ::snt Don't see any problem with that. Still guillotine out there?
# ::tokens ["Do", "n't", "see", "any", "problem", "with", "that", ".", "Still", "guillotine", "out", "there", "?"]
# ::lemmas ["do", "not", "see", "any", "problem", "with", "that", ".", "still", "guillotine", "out", "there", "?"]
(c9-6 / multi-sentence
      :snt1 (c9-0 / see-01
                  :ARG0 (c9-1 / i)
                  :ARG1 (c9-3 / problem
                              :mod (c9-8 / any)
                              :topic (c9-4 / that))
                  :polarity -)
      :snt2 (c9-9 / guillotine
                  :mod (c9-2 / still)
                  :location (c9-5 / out-there)
                  :polarity (c9-7 / amr-unknown)))

# ::snt Yea he ,PamellaGellar,Bridgete have been kept silent! No one knows more than they do on Islamic sources! ?
# ::tokens ["Yea", "he", ",", "PamellaGellar", ",", "Bridgete", "have", "been", "kept", "silent", "!", "No", "one", "knows", "more", "than", "they", "do", "on", "Islamic", "sources", "!", "?"]
# ::lemmas ["yea", "he", ",", "PamellaGellar", ",", "Bridgete", "have", "be", "keep", "silent", "!", "no", "one", "know", "more", "than", "they", "do", "on", "Islamic", "source", "!", "?"]
(c10-8 / multi-sentence
       :snt1 (c10-16 / keep-02
                     :ARG1 (c10-0 / silent
                                  :domain (c10-15 / and
                                                  :op1 (c10-4 / person
                                                              :name (c10-10 / name
                                                                            :op1 "PamellaGellar"))
                                                  :op2 (c10-17 / person
                                                               :name (c10-14 / name
                                                                             :op1 "Bridgete"))))
                     :mod (c10-12 / yea
                                  :mode expressive))
       :snt2 (c10-1 / know-01
                    :ARG0 (c10-11 / no-one)
                    :ARG1-of (c10-13 / have-quant-91
                                     :ARG3 (c10-2 / more)
                                     :ARG4 (c10-5 / know-01
                                                  :ARG0 c10-11
                                                  :ARG1 (c10-3 / source
                                                               :mod (c10-6 / religious-group
                                                                           :name (c10-7 / name
                                                                                        :op1 "Islam")))))
                    :polarity (c10-9 / amr-unknown)))

# ::snt he deserves a beheading of his little head and then finish off with his big head
# ::tokens ["he", "deserves", "a", "beheading", "of", "his", "little", "head", "and", "then", "finish", "off", "with", "his", "big", "head"]
# ::lemmas ["he", "deserve", "a", "beheading", "of", "his", "little", "head", "and", "then", "finish", "off", "with", "his", "big", "head"]
(c11-6 / and
       :op1 (c11-7 / deserve-01
                   :ARG0 (c11-5 / he
                                :part (c11-0 / head
                                             :mod (c11-2 / little)))
                   :ARG1 (c11-1 / behead-01
                                :ARG1 c11-0))
       :op2 (c11-8 / finish-off-05
                   :ARG0 c11-5
                   :ARG2 (c11-9 / head
                                :mod (c11-4 / big)
                                :part-of c11-5)
                   :time (c11-3 / then)))

# ::snt sexy in black gurl
# ::tokens ["sexy", "in", "black", "gurl"]
# ::lemmas ["sexy", "in", "black", "gurl"]
(c12-0 / xy
       :condition (c12-2 / gurl
                         :ARG1-of (c12-1 / black-04)))

# ::snt you always have a great show. Tonight is no different. Many thanks for reporting the truth!
# ::tokens ["you", "always", "have", "a", "great", "show", ".", "Tonight", "is", "no", "different", ".", "Many", "thanks", "for", "reporting", "the", "truth", "!"]
# ::lemmas ["you", "always", "have", "a", "great", "show", ".", "Tonight", "be", "no", "different", ".", "many", "thank", "for", "report", "the", "truth", "!"]
(c13-7 / multi-sentence
       :snt1 (c13-9 / have-03
                    :ARG0 (c13-10 / you)
                    :ARG1 (c13-0 / show-04
                                 :ARG0 c13-10
                                 :mod (c13-13 / great))
                    :time (c13-11 / always))
       :snt2 (c13-12 / differ-02
                     :ARG1 (c13-1 / date-entity
                                  :dayperiod (c13-8 / night)
                                  :mod (c13-4 / today))
                     :polarity -)
       :snt3 (c13-5 / thank-01
                    :ARG1 (c13-2 / many)
                    :ARG2 (c13-6 / report-01
                                 :ARG1 (c13-3 / truth))))

# ::snt why can't the truth be told about the prophet Mohammad? He ordered and witnessed the beheading of enemy Qurayza Jews.
# ::tokens ["why", "ca", "n't", "the", "truth", "be", "told", "about", "the", "prophet", "Mohammad", "?", "He", "ordered", "and", "witnessed", "the", "beheading", "of", "enemy", "Qurayza", "Jews", "."]
# ::lemmas ["why", "can", "not", "the", "truth", "be", "tell", "about", "the", "prophet", "Mohammad", "?", "he", "order", "and", "witness", "the", "beheading", "of", "enemy", "Qurayza", "Jews", "."]
(c14-13 / multi-sentence
        :snt1 (c14-1 / cause-01
                     :ARG0 (c14-8 / amr-unknown)
                     :ARG1 (c14-11 / possible-01
                                   :ARG1 (c14-17 / tell-01
                                                 :ARG1 (c14-12 / truth
                                                               :topic (c14-16 / person
                                                                              :name (c14-15 / name
                                                                                            :op1 "Mohammad")
                                                                              :ARG0-of (c14-18 / have-rel-role-91
                                                                                               :ARG2 (c14-9 / prophet)))))
                                   :polarity -))
        :snt2 (c14-0 / and
                     :op1 (c14-5 / order-01
                                 :ARG0 (c14-3 / he)
                                 :ARG1 (c14-4 / behead-01
                                              :ARG1 (c14-6 / person
                                                           :mod (c14-2 / religious-group
                                                                       :name (c14-14 / name
                                                                                     :op1 "Qurayza"))
                                                           :mod (c14-10 / enemy)
                                                           :mod c14-2)))
                     :op2 (c14-7 / witness-01
                                 :ARG0 c14-3
                                 :ARG1 c14-4)))

# ::snt Time to get Robert Spencer on the show Megyn....nobody knows more about Islamic
# ::tokens ["Time", "to", "get", "Robert", "Spencer", "on", "the", "show", "Megyn", "....", "nobody", "knows", "more", "about", "Islamic"]
# ::lemmas ["time", "to", "get", "Robert", "Spencer", "on", "the", "show", "Megyn", "....", "nobody", "know", "more", "about", "Islamic"]
(c15-6 / multi-sentence
       :snt1 (c15-3 / time
                    :time-of (c15-11 / get-04
                                     :ARG1 (c15-2 / person
                                                  :name (c15-9 / name
                                                               :op1 "Robert"
                                                               :op2 "Spencer"))
                                     :location (c15-0 / show
                                                      :name (c15-8 / name
                                                                   :op1 "Megyn"))))
       :snt2 (c15-10 / know-01
                     :ARG0 (c15-7 / nobody)
                     :ARG1 (c15-1 / more
                                  :topic (c15-4 / religious-group
                                                :name (c15-5 / name
                                                             :op1 "Islam")))))

# ::snt An unpowered chainsaw.
# ::tokens ["An", "unpowered", "chainsaw", "."]
# ::lemmas ["an", "unpowered", "chainsaw", "."]
(c16-1 / chainsaw
       :ARG1-of (c16-0 / power-01
                       :polarity -))

# ::snt ok death penalty YES, Death row NO.once immediate Guilt is established , straight to the Firing Squad.
# ::tokens ["ok", "death", "penalty", "YES", ",", "Death", "row", "NO.once", "immediate", "Guilt", "is", "established", ",", "straight", "to", "the", "Firing", "Squad", "."]
# ::lemmas ["ok", "death", "penalty", "yes", ",", "Death", "row", "NO.once", "immediate", "Guilt", "be", "establish", ",", "straight", "to", "the", "Firing", "Squad", "."]
(c18-8 / multi-sentence
       :snt1 (c18-9 / yes
                    :domain (c18-4 / penalty
                                   :mod (c18-12 / die-01)))
       :snt2 (c18-11 / no
                     :domain (c18-6 / row
                                    :mod (c18-0 / die-01)))
       :snt3 (c18-2 / be-destined-for-91
                    :ARG1 (c18-1 / squad
                                 :ARG0-of (c18-13 / fire-01))
                    :ARG2 (c18-10 / guilty-01
                                  :mod (c18-3 / immediate))
                    :ARG1-of (c18-5 / straight-04))
       :ARG1-of (c18-7 / okay-04))

# ::snt innocent til proven guilty! it don't matter how many saw him do it. political correctness ya know. (sarcasm intended
# ::tokens ["innocent", "til", "proven", "guilty", "!", "it", "do", "n't", "matter", "how", "many", "saw", "him", "do", "it", ".", "political", "correctness", "ya", "know", ".", "(", "sarcasm", "intended"]
# ::lemmas ["innocent", "til", "prove", "guilty", "!", "it", "do", "not", "matter", "how", "many", "see", "he", "do", "it", ".", "political", "correctness", "ya", "know", ".", "(", "sarcasm", "intend"]
(c19-11 / multi-sentence
        :snt1 (c19-1 / innocent-01
                     :time (c19-4 / until
                                  :op1 (c19-10 / prove-01
                                               :ARG1 (c19-18 / guilty-01))))
        :snt2 (c19-8 / matter-01
                     :ARG1 (c19-13 / number
                                   :quant-of (c19-14 / person
                                                     :ARG0-of (c19-0 / see-01
                                                                     :ARG1 (c19-7 / do-02
                                                                                  :ARG0 (c19-16 / he)
                                                                                  :ARG1 (c19-5 / it)))))
                     :ARG1-of (c19-3 / cause-01
                                     :ARG0 (c19-15 / correctness
                                                   :mod (c19-9 / politics)))
                     :polarity -)
        :snt3 (c19-17 / know-01
                      :ARG0 (c19-12 / you)
                      :ARG1 (c19-6 / sarcasm
                                   :ARG1-of (c19-2 / intend-01))))

# ::snt No Terrorism Charges for Obamas Moozlum brother
# ::tokens ["No", "Terrorism", "Charges", "for", "Obamas", "Moozlum", "brother"]
# ::lemmas ["no", "Terrorism", "charge", "for", "Obamas", "Moozlum", "brother"]
(c20-3 / charge-05
       :ARG1 (c20-1 / person
                    :ARG0-of (c20-4 / have-rel-role-91
                                    :ARG1 (c20-6 / person
                                                 :name (c20-5 / name
                                                              :op1 "Obama"))
                                    :ARG2 (c20-0 / brother)))
       :ARG2 (c20-2 / terrorism)
       :polarity -)

# ::snt ironically the death penalty is not harsh enough for this mutt...I recommend lifetime in solitary
# ::tokens ["ironically", "the", "death", "penalty", "is", "not", "harsh", "enough", "for", "this", "mutt", "...", "I", "recommend", "lifetime", "in", "solitary"]
# ::lemmas ["ironically", "the", "death", "penalty", "be", "not", "harsh", "enough", "for", "this", "mutt", "...", "i", "recommend", "lifetime", "in", "solitary"]
(c21-7 / multi-sentence
       :snt1 (c21-8 / have-degree-91
                    :ARG1 (c21-3 / penalize-01
                                 :manner (c21-11 / die-01))
                    :ARG2 (c21-1 / harsh-02
                                 :ARG1 c21-3
                                 :beneficiary (c21-2 / mutt
                                                     :mod (c21-6 / this)))
                    :ARG3 (c21-12 / enough)
                    :mod (c21-4 / irony)
                    :polarity -)
       :snt2 (c21-10 / recommend-01
                     :ARG0 (c21-9 / i)
                     :ARG1 (c21-5 / lifetime
                                  :location (c21-0 / solitary))))

# ::snt Death penalty by beheading?
# ::tokens ["Death", "penalty", "by", "beheading", "?"]
# ::lemmas ["death", "penalty", "by", "behead", "?"]
(c22-3 / penalize-01
       :polarity (c22-0 / amr-unknown)
       :manner (c22-2 / behead-01)
       :ARG1-of (c22-1 / die-01))

# ::snt and he should!!
# ::tokens ["and", "he", "should", "!", "!"]
# ::lemmas ["and", "he", "should", "!", "!"]
(c23-0 / and
       :op2 (c23-1 / recommend-01
                   :ARG2 (c23-2 / he)))

# ::snt chop his head OFF
# ::tokens ["chop", "his", "head", "OFF"]
# ::lemmas ["chop", "his", "head", "OFF"]
(c24-3 / chop-off-04
       :ARG0 (c24-0 / you)
       :ARG1 (c24-2 / head
                    :part-of (c24-1 / he))
       :mode imperative)

# ::snt " off with HIS head!"
# ::tokens ["\"", "off", "with", "HIS", "head", "!", "\""]
# ::lemmas ["\"", "off", "with", "his", "head", "!", "\""]
(c25-0 / off
       :op1 (c25-1 / head
                   :part-of (c25-2 / he)))

# ::snt He obviously has his head about him.
# ::tokens ["He", "obviously", "has", "his", "head", "about", "him", "."]
# ::lemmas ["he", "obviously", "have", "his", "head", "about", "he", "."]
(c26-1 / have-03
       :ARG0 (c26-2 / he
                    :part (c26-3 / head
                                 :ARG1-of c26-1
                                 :location-of c26-1))
       :ARG1-of (c26-0 / obvious-01))

# ::snt "Suspect"?!?! Really?!?! HE DID IT!!!!!! He's not a "suspect"!!!
# ::tokens ["\"", "Suspect", "\"", "?", "!", "?", "!", "Really", "?", "!", "?", "!", "HE", "DID", "IT", "!", "!", "!", "!", "!", "!", "He", "'s", "not", "a", "\"", "suspect", "\"", "!", "!", "!"]
# ::lemmas ["\"", "suspect", "\"", "?", "!", "?", "!", "really", "?", "!", "?", "!", "he", "do", "it", "!", "!", "!", "!", "!", "!", "he", "be", "not", "a", "\"", "suspect", "\"", "!", "!", "!"]
(c27-6 / multi-sentence
       :snt1 (c27-3 / person
                    :ARG1-of (c27-0 / suspect-01)
                    :polarity (c27-9 / amr-unknown)
                    :mode expressive)
       :snt2 (c27-10 / do-02
                     :ARG0 (c27-8 / he)
                     :ARG1 (c27-1 / it)
                     :ARG1-of (c27-5 / real-04
                                     :polarity (c27-7 / amr-unknown)))
       :snt3 c27-3
       :domain (c27-2 / he)
       :ARG1-of (c27-4 / sin-01)
       :polarity -)
