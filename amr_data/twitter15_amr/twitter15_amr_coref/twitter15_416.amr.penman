# ::snt it's brilliant isn't it. Love to the three of you x
# ::tokens ["it", "'s", "brilliant", "is", "n't", "it", ".", "Love", "to", "the", "three", "of", "you", "x"]
# ::lemmas ["it", "be", "brilliant", "be", "not", "it", ".", "love", "to", "the", "three", "of", "you", "x"]
(c1-4 / multi-sentence
      :snt1 (c1-2 / brilliant-01
                  :ARG1 (c1-1 / it)
                  :ARG1-of (c1-6 / request-confirmation-91))
      :snt2 (c1-0 / say-01
                  :ARG1 (c1-3 / love-01)
                  :ARG2 (c1-5 / you
                              :quant 3)))

# ::snt I think Minecraft gives same opportunities, now, as Lego...electronically
# ::tokens ["I", "think", "Minecraft", "gives", "same", "opportunities", ",", "now", ",", "as", "Lego", "...", "electronically"]
# ::lemmas ["i", "think", "Minecraft", "give", "same", "opportunity", ",", "now", ",", "as", "Lego", "...", "electronically"]
(c2-2 / think-01
      :ARG0 (c2-1 / i)
      :ARG1 (c2-12 / give-01
                   :ARG0 (c2-6 / company
                               :name (c2-9 / name
                                           :op1 "Minecraft"))
                   :ARG1 (c2-3 / opportunity
                               :ARG1-of (c2-0 / same-01
                                              :ARG2 (c2-10 / opportunity
                                                           :ARG1-of (c2-4 / give-01
                                                                          :ARG0 (c2-5 / company
                                                                                      :name (c2-8 / name
                                                                                                  :op1 "Lego"))
                                                                          :time (c2-7 / now)))))
                   :ARG2 c2-5
                   :manner (c2-11 / electronics)))

# ::snt Can't see my little lad wanting to assemble this!!
# ::tokens ["Ca", "n't", "see", "my", "little", "lad", "wanting", "to", "assemble", "this", "!", "!"]
# ::lemmas ["can", "not", "see", "my", "little", "lad", "want", "to", "assemble", "this", "!", "!"]
(c3-2 / possible-01
      :ARG1 (c3-0 / see-01
                  :ARG0 (c3-1 / i)
                  :ARG1 (c3-7 / want-01
                              :ARG0 (c3-3 / lad
                                          :mod (c3-6 / little)
                                          :poss c3-1)
                              :ARG1 (c3-5 / assemble-01
                                          :ARG0 c3-3
                                          :ARG1 (c3-4 / this))))
      :polarity -)

# ::snt :Lego letter from the s still offers a powerful message "
# ::tokens [":", "Lego", "letter", "from", "the", "s", "still", "offers", "a", "powerful", "message", "\""]
# ::lemmas [":", "Lego", "letter", "from", "the", "s", "still", "offer", "a", "powerful", "message", "\""]
(c4-3 / offer-01
      :ARG0 (c4-2 / letter
                  :mod (c4-5 / law)
                  :source (c4-1 / person
                                :name (c4-6 / name
                                            :op1 "S")))
      :ARG1 (c4-4 / message-01
                  :ARG1-of (c4-7 / powerful-02))
      :mod (c4-0 / still))

# ::snt or dolls' house if more than one doll in the house.
# ::tokens ["or", "dolls", "'", "house", "if", "more", "than", "one", "doll", "in", "the", "house", "."]
# ::lemmas ["or", "doll", "'", "house", "if", "more", "than", "one", "doll", "in", "the", "house", "."]
(c5-2 / or
      :op2 (c5-4 / house
                 :poss (c5-5 / doll)
                 :condition (c5-1 / be-located-at-91
                                  :ARG1 (c5-0 / doll
                                              :quant (c5-3 / more-than
                                                           :op1 1))
                                  :ARG2 c5-4)))

# ::snt doll's house misspelt all those years ago as it surely would be today.
# ::tokens ["doll", "'s", "house", "misspelt", "all", "those", "years", "ago", "as", "it", "surely", "would", "be", "today", "."]
# ::lemmas ["doll", "'s", "house", "misspelt", "all", "those", "years", "ago", "as", "it", "surely", "would", "be", "today", "."]
(c6-6 / misspelt-00
      :ARG0 (c6-8 / house
                  :poss (c6-2 / person
                              :name (c6-11 / name
                                           :op1 "Doll")))
      :time (c6-1 / before
                  :op1 (c6-10 / now)
                  :quant (c6-9 / year
                               :mod (c6-3 / that)
                               :mod (c6-4 / all)))
      :ARG1-of (c6-5 / resemble-01
                     :ARG2 (c6-12 / misspelt-00
                                  :ARG1 c6-8
                                  :time (c6-7 / today)
                                  :ARG1-of (c6-0 / sure-02))))
