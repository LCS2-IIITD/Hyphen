# ::snt I agree. But true he did. But did not see it all. But admitted it.
# ::tokens ["I", "agree", ".", "But", "true", "he", "did", ".", "But", "did", "not", "see", "it", "all", ".", "But", "admitted", "it", "."]
# ::lemmas ["i", "agree", ".", "but", "true", "he", "do", ".", "but", "do", "not", "see", "it", "all", ".", "but", "admit", "it", "."]
(c1-4 / multi-sentence
      :snt1 (c1-11 / agree-01
                   :ARG0 (c1-1 / i))
      :snt2 (c1-7 / contrast-01
                  :ARG2 (c1-2 / true-01
                              :ARG1 (c1-12 / do-02
                                           :ARG0 (c1-9 / he))))
      :snt3 (c1-5 / contrast-01
                  :ARG2 (c1-0 / see-01
                              :ARG0 c1-1
                              :polarity -)
                  :ARG1 (c1-10 / it
                               :mod (c1-6 / all)))
      :snt4 (c1-8 / contrast-01
                  :ARG2 (c1-3 / admit-01
                              :ARG0 c1-9
                              :ARG1 c1-10)))

# ::snt &lth, exactly! Wonder how much $$? Just like LYING
# ::tokens ["&", "lth", ",", "exactly", "!", "Wonder", "how", "much", "$", "$", "?", "Just", "like", "LYING"]
# ::lemmas ["&", "lth", ",", "exactly", "!", "wonder", "how", "much", "$", "$", "?", "just", "like", "lie"]
(c2-5 / multi-sentence
      :snt1 (c2-11 / exact
                   :domain (c2-9 / and
                                 :op2 (c2-3 / that)))
      :snt2 (c2-1 / wonder-01
                  :ARG0 (c2-7 / you)
                  :ARG1 (c2-10 / monetary-quantity
                               :quant (c2-6 / amr-unknown)
                               :unit (c2-0 / dollar))
                  :ARG1-of (c2-4 / resemble-01
                                 :ARG2 (c2-2 / lie-08)
                                 :mod (c2-8 / just))))

# ::snt &lthe also told what, stories? Such a reliable witness, lol.
# ::tokens ["&", "lthe", "also", "told", "what", ",", "stories", "?", "Such", "a", "reliable", "witness", ",", "lol", "."]
# ::lemmas ["&", "lthe", "also", "tell", "what", ",", "story", "?", "such", "a", "reliable", "witness", ",", "lol", "."]
(c3-8 / multi-sentence
      :snt1 (c3-6 / tell-01
                  :ARG0 (c3-12 / and
                               :op2 (c3-4 / person
                                          :name (c3-10 / name
                                                       :op1 "lthe")))
                  :ARG1 (c3-0 / story)
                  :mod (c3-9 / also))
      :snt2 (c3-14 / person
                   :ARG0-of (c3-1 / witness-01)
                   :ARG1-of (c3-7 / rely-01
                                  :ARG1-of (c3-13 / possible-01)
                                  :degree (c3-2 / such))
                   :ARG2-of (c3-5 / laugh-01
                                  :ARG0 (c3-3 / i)
                                  :manner (c3-11 / loud)
                                  :mode expressive)))

# ::snt &lt;Yep! In fact SHE CALLED THEM! LOL
# ::tokens ["&", "lt;Yep", "!", "In", "fact", "SHE", "CALLED", "THEM", "!", "LOL"]
# ::lemmas ["&", "lt;Yep", "!", "in", "fact", "she", "call", "they", "!", "LOL"]
(c4-4 / call-01
      :ARG0 (c4-0 / she)
      :ARG1 (c4-3 / they)
      :mod (c4-1 / in-fact)
      :ARG2-of (c4-2 / laugh-01
                     :ARG0 (c4-6 / i)
                     :manner (c4-5 / loud)
                     :mode expressive)
      :mode expressive)

# ::snt &lt;I blocked &gt;&gt; So can you please removed me from mentions her.
# ::tokens ["&", "lt;I", "blocked", "&", "gt;&gt", ";", "So", "can", "you", "please", "removed", "me", "from", "mentions", "her", "."]
# ::lemmas ["&", "lt;I", "block", "&", "gt;&gt", ";", "so", "can", "you", "please", "remove", "i", "from", "mention", "she", "."]
(c5-7 / and
      :op1 (c5-2 / block-01
                 :ARG0 (c5-1 / i))
      :op2 (c5-3 / possible-01
                 :ARG1 (c5-4 / remove-01
                             :ARG0 (c5-6 / you)
                             :ARG1 c5-1
                             :ARG2 (c5-5 / mention-01
                                         :ARG1 (c5-0 / she))
                             :polite +)))

# ::snt &ltme ppl REFUSE see truth!
# ::tokens ["&", "ltme", "ppl", "REFUSE", "see", "truth", "!"]
# ::lemmas ["&", "ltme", "ppl", "REFUSE", "see", "truth", "!"]
(c6-4 / and
      :op2 (c6-0 / see-01
                 :ARG0 (c6-1 / we)
                 :ARG1 (c6-3 / truth)
                 :ARG1-of (c6-2 / thankful-02
                                :ARG0 c6-1)
                 :mode imperative))

# ::snt I guess Mr Joe klein can excuse this as a metaphor/aggression
# ::tokens ["I", "guess", "Mr", "Joe", "klein", "can", "excuse", "this", "as", "a", "metaphor", "/", "aggression"]
# ::lemmas ["i", "guess", "Mr", "Joe", "klein", "can", "excuse", "this", "as", "a", "metaphor", "/", "aggression"]
(c7-6 / guess-01
      :ARG0 (c7-0 / i)
      :ARG1 (c7-1 / possible-01
                  :ARG1 (c7-8 / excuse-01
                              :ARG0 (c7-9 / person
                                          :name (c7-7 / name
                                                      :op1 "Mr"
                                                      :op2 "Joe"
                                                      :op3 "Klein"))
                              :ARG1 (c7-2 / this)
                              :ARG2 (c7-3 / or
                                          :op1 (c7-5 / metaphor)
                                          :op2 (c7-4 / aggression)))))

# ::snt I'm sure you'll be able to link ne a clip of him saying it?
# ::tokens ["I", "'m", "sure", "you", "'ll", "be", "able", "to", "link", "ne", "a", "clip", "of", "him", "saying", "it", "?"]
# ::lemmas ["i", "be", "sure", "you", "'ll", "be", "able", "to", "link", "ne", "a", "clip", "of", "he", "say", "it", "?"]
(c8-0 / sure-02
      :ARG0 (c8-1 / i)
      :ARG1 (c8-3 / possible-01
                  :ARG1 (c8-4 / link-01
                              :ARG0 (c8-6 / you)
                              :ARG1 (c8-5 / clip-01
                                          :ARG1 (c8-2 / say-01
                                                      :ARG0 (c8-7 / he)
                                                      :ARG1 (c8-8 / it))))
                  :polarity (c8-9 / amr-unknown)))

# ::snt &lt;Cops their lives on the line EVERY DAY! Thugs r out on control!
# ::tokens ["&", "lt;Cops", "their", "lives", "on", "the", "line", "EVERY", "DAY", "!", "Thugs", "r", "out", "on", "control", "!"]
# ::lemmas ["&", "lt;cop", "their", "life", "on", "the", "line", "every", "DAY", "!", "thug", "r", "out", "on", "control", "!"]
(c9-5 / multi-sentence
      :snt1 (c9-7 / crap-01
                  :location (c9-1 / line)
                  :frequency (c9-10 / rate-entity-91
                                    :ARG3 (c9-2 / temporal-quantity
                                                :unit (c9-11 / day)
                                                :quant 1))
                  :domain (c9-8 / life
                                :poss (c9-3 / they))
                  :mode expressive)
      :snt2 (c9-4 / out-06
                  :ARG1 (c9-0 / person
                              :ARG0-of (c9-9 / hug-01))
                  :ARG2 (c9-6 / control-01
                              :ARG1 c9-0)))

# ::snt i totally agree - cops are dangerous and out of control
# ::tokens ["i", "totally", "agree", "-", "cops", "are", "dangerous", "and", "out", "of", "control"]
# ::lemmas ["i", "totally", "agree", "-", "cop", "be", "dangerous", "and", "out", "of", "control"]
(c10-6 / agree-01
       :ARG0 (c10-0 / i)
       :ARG1 (c10-3 / and
                    :op1 (c10-7 / dangerous
                                :domain (c10-5 / cop))
                    :op2 (c10-1 / out-06
                                :ARG1 c10-5
                                :ARG2 (c10-4 / control-01
                                             :ARG1 c10-5)))
       :degree (c10-2 / total))

# ::snt I look forward to hearing your excuse when those prove you wrong too
# ::tokens ["I", "look", "forward", "to", "hearing", "your", "excuse", "when", "those", "prove", "you", "wrong", "too"]
# ::lemmas ["i", "look", "forward", "to", "hear", "your", "excuse", "when", "those", "prove", "you", "wrong", "too"]
(c11-2 / look-forward-03
       :ARG0 (c11-0 / i)
       :ARG1 (c11-5 / hear-01
                    :ARG0 c11-0
                    :ARG1 (c11-8 / excuse-02
                                 :ARG0 (c11-6 / you))
                    :time (c11-1 / prove-01
                                 :ARG0 (c11-3 / that)
                                 :ARG1 (c11-7 / wrong-04
                                              :ARG1 c11-6)
                                 :mod (c11-4 / too))))

# ::snt U r not even in this country or from it? &amp; NO ONE has seen autopsy!
# ::tokens ["U", "r", "not", "even", "in", "this", "country", "or", "from", "it", "?", "&", "amp", ";", "NO", "ONE", "has", "seen", "autopsy", "!"]
# ::lemmas ["u", "r", "not", "even", "in", "this", "country", "or", "from", "it", "?", "&", "amp", ";", "no", "one", "have", "see", "autopsy", "!"]
(c12-6 / multi-sentence
       :snt1 (c12-1 / be-located-at-91
                    :ARG1 (c12-11 / you)
                    :ARG2 (c12-3 / or
                                 :op1 (c12-9 / country
                                             :mod (c12-4 / this))
                                 :op2 (c12-7 / country
                                             :source (c12-2 / it)))
                    :mod (c12-13 / even)
                    :polarity (c12-12 / amr-unknown)
                    :polarity -)
       :snt2 (c12-0 / see-01
                    :ARG0 (c12-10 / no-one)
                    :ARG1 (c12-8 / autopsy)
                    :polarity (c12-5 / amr-unknown)))

# ::snt I just believe the independent witnesses. You believe your racist fantasy.
# ::tokens ["I", "just", "believe", "the", "independent", "witnesses", ".", "You", "believe", "your", "racist", "fantasy", "."]
# ::lemmas ["i", "just", "believe", "the", "independent", "witness", ".", "you", "believe", "your", "racist", "fantasy", "."]
(c14-4 / multi-sentence
       :snt1 (c14-1 / believe-01
                    :ARG0 (c14-0 / i)
                    :ARG1 (c14-2 / person
                                 :ARG0-of (c14-8 / witness-01)
                                 :ARG0-of (c14-9 / depend-01
                                                 :polarity -))
                    :mod (c14-6 / just))
       :snt2 (c14-5 / believe-01
                    :ARG0 (c14-7 / you)
                    :ARG1 (c14-10 / fantasy
                                  :poss c14-7
                                  :mod (c14-3 / racist))))

# ::snt we're done here. The facts speak for themselves. Delude yourself if you want to.
# ::tokens ["we", "'re", "done", "here", ".", "The", "facts", "speak", "for", "themselves", ".", "Delude", "yourself", "if", "you", "want", "to", "."]
# ::lemmas ["we", "be", "do", "here", ".", "the", "fact", "speak", "for", "themselves", ".", "delude", "yourself", "if", "you", "want", "to", "."]
(c15-2 / multi-sentence
       :snt1 (c15-1 / be-done-08
                    :ARG0 (c15-7 / we)
                    :location (c15-5 / here))
       :snt2 (c15-0 / speak-01
                    :ARG0 (c15-9 / fact)
                    :mod (c15-4 / by-oneself))
       :snt3 (c15-8 / delude-01
                    :ARG0 (c15-6 / you
                                 :ARG1-of c15-8)
                    :condition (c15-3 / want-01
                                      :ARG0 c15-6
                                      :ARG1 c15-8)
                    :mode imperative))

# ::snt even if it were true, and it happened, it shouldnt. Assault doesnt = death sentence
# ::tokens ["even", "if", "it", "were", "true", ",", "and", "it", "happened", ",", "it", "should", "nt", ".", "Assault", "does", "nt", "=", "death", "sentence"]
# ::lemmas ["even", "if", "it", "be", "true", ",", "and", "it", "happen", ",", "it", "should", "not", ".", "assault", "do", "not", "=", "death", "sentence"]
(c16-5 / multi-sentence
       :snt1 (c16-9 / recommend-01
                    :ARG1 (c16-1 / it)
                    :concession (c16-11 / even-if
                                        :op1 (c16-3 / and
                                                    :op1 (c16-2 / true-01
                                                                :ARG1 (c16-7 / it))
                                                    :op2 (c16-4 / event)))
                    :polarity -)
       :snt2 (c16-8 / equal-01
                    :ARG1 (c16-6 / assault-01)
                    :ARG2 (c16-0 / sentence-01
                                 :ARG2 (c16-10 / die-01))
                    :polarity -))

# ::snt &lt;You would as you HIDE behind your keyboard and make up ur narrative.
# ::tokens ["&", "lt;You", "would", "as", "you", "HIDE", "behind", "your", "keyboard", "and", "make", "up", "ur", "narrative", "."]
# ::lemmas ["&", "lt;You", "would", "as", "you", "hide", "behind", "your", "keyboard", "and", "make", "up", "ur", "narrative", "."]
(c17-6 / and
       :op2 (c17-1 / and
                   :op1 (c17-0 / be-located-at-91
                               :ARG1 (c17-5 / you)
                               :ARG2 (c17-4 / behind
                                            :op1 (c17-7 / keyboard
                                                        :poss c17-5)))
                   :op2 (c17-2 / make-up-10
                               :ARG0 c17-5
                               :ARG1 (c17-3 / narrate-01
                                            :ARG0 c17-5))))

# ::snt I'm not your homie, but I'll take that as a "yes"
# ::tokens ["I", "'m", "not", "your", "homie", ",", "but", "I", "'ll", "take", "that", "as", "a", "\"", "yes", "\""]
# ::lemmas ["i", "be", "not", "your", "homie", ",", "but", "i", "'ll", "take", "that", "as", "a", "\"", "yes", "\""]
(c18-3 / contrast-01
       :ARG1 (c18-4 / homie
                    :poss (c18-5 / you)
                    :domain (c18-1 / i)
                    :polarity -)
       :ARG2 (c18-2 / take-04
                    :ARG0 c18-1
                    :ARG1 c18-4
                    :ARG2 (c18-0 / yes)))

# ::snt why would Crenshaw lie? Or more to the point, why do you believe she did?
# ::tokens ["why", "would", "Crenshaw", "lie", "?", "Or", "more", "to", "the", "point", ",", "why", "do", "you", "believe", "she", "did", "?"]
# ::lemmas ["why", "would", "Crenshaw", "lie", "?", "or", "more", "to", "the", "point", ",", "why", "do", "you", "believe", "she", "do", "?"]
(c19-4 / multi-sentence
       :snt1 (c19-7 / cause-01
                    :ARG0 (c19-11 / amr-unknown)
                    :ARG1 (c19-2 / lie-08
                                 :ARG0 (c19-1 / person
                                              :name (c19-8 / name
                                                           :op1 "Crenshaw"))))
       :snt2 (c19-3 / or
                    :op2 (c19-5 / cause-01
                                :ARG0 (c19-6 / amr-unknown)
                                :ARG1 (c19-0 / believe-01
                                             :ARG0 (c19-9 / you)
                                             :ARG1 c19-2)
                                :ARG2-of (c19-10 / have-degree-91
                                                 :ARG1 c19-0
                                                 :ARG3 (c19-12 / more)))))

# ::snt they aren't. only one of the witnesses, Johnson, was a friend of his
# ::tokens ["they", "are", "n't", ".", "only", "one", "of", "the", "witnesses", ",", "Johnson", ",", "was", "a", "friend", "of", "his"]
# ::lemmas ["they", "be", "not", ".", "only", "one", "of", "the", "witness", ",", "Johnson", ",", "be", "a", "friend", "of", "his"]
(c20-6 / multi-sentence
       :snt1 (c20-4 / they
                    :polarity -)
       :snt2 (c20-7 / have-rel-role-91
                    :ARG0 (c20-3 / person
                                 :name (c20-8 / name
                                              :op1 "Johnson")
                                 :ARG1-of (c20-2 / include-91
                                                 :ARG2 (c20-10 / person
                                                               :ARG0-of (c20-1 / witness-01)))
                                 :mod (c20-5 / only))
                    :ARG1 (c20-9 / person)
                    :ARG2 (c20-0 / friend)))

# ::snt &lt;Truth will come out that is was JUSTIFIED!
# ::tokens ["&", "lt;Truth", "will", "come", "out", "that", "is", "was", "JUSTIFIED", "!"]
# ::lemmas ["&", "lt;truth", "will", "come", "out", "that", "be", "be", "JUSTIFIED", "!"]
(c21-0 / and
       :op2 (c21-3 / come-out-09
                   :ARG1 (c21-1 / truth
                                :ARG1-of (c21-2 / justify-01
                                                :mode expressive))))

# ::snt willing to believe you typed it out wrong as it doesnt show up in google, but id like to see the IRL quote
# ::tokens ["willing", "to", "believe", "you", "typed", "it", "out", "wrong", "as", "it", "does", "nt", "show", "up", "in", "google", ",", "but", "i", "d", "like", "to", "see", "the", "IRL", "quote"]
# ::lemmas ["willing", "to", "believe", "you", "type", "it", "out", "wrong", "as", "it", "do", "not", "show", "up", "in", "google", ",", "but", "i", "d", "like", "to", "see", "the", "IRL", "quote"]
(c22-8 / contrast-01
       :ARG1 (c22-14 / will-02
                     :ARG0 (c22-2 / i)
                     :ARG1 (c22-1 / believe-01
                                  :ARG0 c22-2
                                  :ARG1 (c22-6 / type-out-03
                                               :ARG0 (c22-12 / you)
                                               :ARG1 (c22-13 / it)
                                               :ARG1-of (c22-9 / wrong-02)))
                     :ARG1-of (c22-7 / cause-01
                                     :ARG0 (c22-0 / show-up-02
                                                  :ARG1 c22-13
                                                  :medium (c22-10 / company
                                                                  :name (c22-11 / name
                                                                                :op1 "Google"))
                                                  :polarity -)))
       :ARG2 (c22-5 / like-02
                    :ARG0 c22-2
                    :ARG1 (c22-3 / see-01
                                 :ARG0 c22-2
                                 :ARG1 (c22-15 / quote-01
                                               :mod (c22-4 / publication
                                                           :name c22-11
                                                           :op1 "IRL")))))

# ::snt Or to ATTACK!
# ::tokens ["Or", "to", "ATTACK", "!"]
# ::lemmas ["or", "to", "ATTACK", "!"]
(c23-1 / or
       :op2 (c23-0 / attack-01))

# ::snt As I wasn't there, I'll go with the independent witnesses on this one. So no attack.
# ::tokens ["As", "I", "was", "n't", "there", ",", "I", "'ll", "go", "with", "the", "independent", "witnesses", "on", "this", "one", ".", "So", "no", "attack", "."]
# ::lemmas ["as", "i", "be", "not", "there", ",", "i", "'ll", "go", "with", "the", "independent", "witness", "on", "this", "one", ".", "so", "no", "attack", "."]
(c24-6 / multi-sentence
       :snt1 (c24-8 / cause-01
                    :ARG0 (c24-1 / be-located-at-91
                                 :ARG1 (c24-0 / i)
                                 :ARG2 (c24-3 / there)
                                 :polarity -)
                    :ARG1 (c24-11 / go-06
                                  :ARG0 c24-0
                                  :ARG1 (c24-2 / person
                                               :ARG0-of (c24-9 / witness-01
                                                               :topic (c24-4 / this))
                                               :ARG0-of (c24-10 / depend-01
                                                                :polarity -))))
       :snt2 (c24-7 / cause-01
                    :ARG1 (c24-5 / attack-01
                                 :polarity -)))

# ::snt yup and when it does you'll have some new excuse for why Wilson shot a kid to death
# ::tokens ["yup", "and", "when", "it", "does", "you", "'ll", "have", "some", "new", "excuse", "for", "why", "Wilson", "shot", "a", "kid", "to", "death"]
# ::lemmas ["yup", "and", "when", "it", "do", "you", "'ll", "have", "some", "new", "excuse", "for", "why", "Wilson", "shoot", "a", "kid", "to", "death"]
(c25-11 / and
        :op2 (c25-8 / have-03
                    :ARG0 (c25-9 / you)
                    :ARG1 (c25-13 / excuse-02
                                  :ARG1 (c25-4 / thing
                                               :ARG0-of (c25-6 / cause-01
                                                               :ARG1 (c25-1 / shoot-02
                                                                            :ARG0 (c25-3 / person
                                                                                         :name (c25-7 / name
                                                                                                      :op1 "Wilson"))
                                                                            :ARG1 (c25-12 / kid)
                                                                            :ARG0-of c25-6
                                                                            :ARG1 (c25-0 / die-01
                                                                                         :ARG1 c25-12)))))
                    :ARG1-of (c25-10 / new-01)
                    :mod (c25-2 / some))
        :time (c25-5 / event))

# ::snt Instead of reporting a story, you're creating one. UnRespected So-called News
# ::tokens ["Instead", "of", "reporting", "a", "story", ",", "you", "'re", "creating", "one", ".", "UnRespected", "So", "-", "called", "News"]
# ::lemmas ["instead", "of", "report", "a", "story", ",", "you", "be", "create", "one", ".", "unrespected", "so", "-", "call", "news"]
(c26-4 / multi-sentence
       :snt1 (c26-1 / instead-of-91
                    :ARG1 (c26-6 / create-01
                                 :ARG0 (c26-8 / you)
                                 :ARG1 (c26-0 / story))
                    :ARG2 (c26-9 / report-01
                                 :ARG0 c26-8
                                 :ARG1 (c26-2 / story)))
       :snt2 (c26-7 / news
                    :ARG1-of (c26-3 / respect-01
                                    :polarity -)
                    :mod (c26-5 / so-called)))

# ::snt no, no, im sure youre right - independent witnesses, who didnt know MB, all lied for him. Sure.
# ::tokens ["no", ",", "no", ",", "i", "m", "sure", "you", "re", "right", "-", "independent", "witnesses", ",", "who", "did", "nt", "know", "MB", ",", "all", "lied", "for", "him", ".", "Sure", "."]
# ::lemmas ["no", ",", "no", ",", "i", "m", "sure", "you", "re", "right", "-", "independent", "witness", ",", "who", "do", "not", "know", "MB", ",", "all", "lie", "for", "he", ".", "sure", "."]
(c27-9 / multi-sentence
       :snt1 (c27-12 / no)
       :snt2 (c27-0 / sure-02
                    :ARG0 (c27-3 / i)
                    :ARG1 (c27-7 / right-06
                                 :ARG1 (c27-10 / you)))
       :snt3 (c27-6 / lie-08
                    :ARG0 (c27-5 / person
                                 :ARG0-of (c27-1 / witness-01)
                                 :ARG0-of (c27-13 / depend-01
                                                  :polarity -)
                                 :ARG0-of (c27-2 / know-01
                                                 :ARG1 (c27-14 / person
                                                               :name (c27-11 / name
                                                                             :op1 "MB"))
                                                 :polarity -)
                                 :mod (c27-8 / all))
                    :beneficiary c27-14)
       :snt4 (c27-4 / sure-02))

# ::snt ignore or, rather, don't report it because it isn't true
# ::tokens ["ignore", "or", ",", "rather", ",", "do", "n't", "report", "it", "because", "it", "is", "n't", "true"]
# ::lemmas ["ignore", "or", ",", "rather", ",", "do", "not", "report", "it", "because", "it", "be", "not", "true"]
(c28-1 / or
       :op1 (c28-0 / ignore-01
                   :ARG0 (c28-4 / you)
                   :ARG1 (c28-5 / it)
                   :mode imperative)
       :op2 (c28-6 / report-01
                   :ARG0 c28-4
                   :ARG1 c28-5
                   :ARG1-of (c28-3 / cause-01
                                   :ARG0 (c28-2 / true-01
                                                :ARG1 c28-5
                                                :polarity -))
                   :mode imperative
                   :polarity -))

# ::snt wait so the guy in the background audio who you cant really hear properly is science now?
# ::tokens ["wait", "so", "the", "guy", "in", "the", "background", "audio", "who", "you", "ca", "nt", "really", "hear", "properly", "is", "science", "now", "?"]
# ::lemmas ["wait", "so", "the", "guy", "in", "the", "background", "audio", "who", "you", "can", "not", "really", "hear", "properly", "be", "science", "now", "?"]
(c29-9 / wait-01
       :ARG1 (c29-7 / you)
       :ARG2 (c29-0 / science
                    :domain (c29-11 / guy
                                    :medium (c29-4 / audio
                                                   :mod (c29-1 / background))
                                    :ARG1-of (c29-8 / hear-01
                                                    :ARG0 c29-7
                                                    :ARG1-of (c29-2 / possible-01
                                                                    :polarity -)
                                                    :manner (c29-10 / proper)
                                                    :ARG1-of (c29-3 / real-04)))
                    :time (c29-6 / now))
       :polarity (c29-5 / amr-unknown))

# ::snt I don't doubt that the facebook post existed. I doubt the veracity of the Facebook post's contents.
# ::tokens ["I", "do", "n't", "doubt", "that", "the", "facebook", "post", "existed", ".", "I", "doubt", "the", "veracity", "of", "the", "Facebook", "post", "'s", "contents", "."]
# ::lemmas ["i", "do", "not", "doubt", "that", "the", "facebook", "post", "exist", ".", "i", "doubt", "the", "veracity", "of", "the", "Facebook", "post", "'s", "content", "."]
(c30-4 / multi-sentence
       :snt1 (c30-8 / doubt-01
                    :ARG0 (c30-1 / i)
                    :ARG1 (c30-10 / exist-01
                                  :ARG1 (c30-2 / post-01
                                               :medium (c30-11 / publication
                                                               :name (c30-7 / name
                                                                            :op1 "Facebook"))))
                    :polarity -)
       :snt2 (c30-0 / doubt-01
                    :ARG0 (c30-6 / i)
                    :ARG1 (c30-9 / veracity
                                 :poss (c30-3 / thing
                                              :ARG1-of (c30-5 / contain-01
                                                              :ARG0 c30-2)))))

# ::snt that's another blog reporting on the same Facebook post. That's not two sources, it's one very shakey one.
# ::tokens ["that", "'s", "another", "blog", "reporting", "on", "the", "same", "Facebook", "post", ".", "That", "'s", "not", "two", "sources", ",", "it", "'s", "one", "very", "shakey", "one", "."]
# ::lemmas ["that", "be", "another", "blog", "report", "on", "the", "same", "Facebook", "post", ".", "that", "be", "not", "two", "source", ",", "it", "be", "one", "very", "shakey", "one", "."]
(c31-9 / multi-sentence
       :snt1 (c31-1 / blog
                    :domain (c31-6 / that)
                    :mod (c31-13 / another)
                    :ARG0-of (c31-7 / report-01
                                    :ARG1 (c31-8 / thing
                                                 :ARG1-of (c31-3 / post-01
                                                                 :ARG0 (c31-15 / publication
                                                                               :name (c31-12 / name
                                                                                             :op1 "Facebook")))
                                                 :ARG1-of (c31-0 / same-01))))
       :snt2 (c31-10 / and
                     :op1 (c31-2 / source-01
                                 :ARG1 (c31-4 / that)
                                 :polarity -
                                 :quant 2)
                     :op2 (c31-11 / source-01
                                  :domain (c31-5 / it)
                                  :mod (c31-16 / shakey
                                               :degree (c31-14 / very))
                                  :quant 1)))

# ::snt a journalist would get huge ratings &amp; revenues from this story, if it were true. But it isn't.
# ::tokens ["a", "journalist", "would", "get", "huge", "ratings", "&", "amp", ";", "revenues", "from", "this", "story", ",", "if", "it", "were", "true", ".", "But", "it", "is", "n't", "."]
# ::lemmas ["a", "journalist", "would", "get", "huge", "rating", "&", "amp", ";", "revenue", "from", "this", "story", ",", "if", "it", "be", "true", ".", "but", "it", "be", "not", "."]
(c32-7 / multi-sentence
       :snt1 (c32-14 / get-01
                     :ARG0 (c32-10 / journalist)
                     :ARG1 (c32-13 / and
                                   :op1 (c32-4 / rate-01
                                               :mod (c32-11 / huge))
                                   :op2 (c32-8 / amp)
                                   :op3 (c32-3 / revenue
                                               :source (c32-0 / story
                                                              :mod (c32-5 / this))))
                     :condition (c32-6 / true-01
                                       :ARG1 (c32-1 / it)))
       :snt2 (c32-9 / contrast-01
                    :ARG2 (c32-2 / true-01
                                 :ARG1 (c32-12 / it)
                                 :polarity -)))

# ::snt um, this is some convervative blog reporting on a Facebook post. Have you got anything credible? Like national news?
# ::tokens ["um", ",", "this", "is", "some", "convervative", "blog", "reporting", "on", "a", "Facebook", "post", ".", "Have", "you", "got", "anything", "credible", "?", "Like", "national", "news", "?"]
# ::lemmas ["um", ",", "this", "be", "some", "convervative", "blog", "reporting", "on", "a", "Facebook", "post", ".", "have", "you", "get", "anything", "credible", "?", "like", "national", "news", "?"]
(c33-6 / multi-sentence
       :snt1 (c33-1 / blog
                    :domain (c33-4 / this)
                    :ARG0-of (c33-9 / converge-01)
                    :ARG0-of (c33-16 / report-01
                                     :location (c33-2 / post-01
                                                      :ARG0 (c33-17 / publication
                                                                    :name (c33-10 / name
                                                                                  :op1 "Facebook"))))
                    :mod (c33-12 / um
                                 :mode expressive)
                    :mod (c33-0 / some))
       :snt2 (c33-14 / get-02
                     :ARG0 (c33-13 / you)
                     :ARG1 (c33-7 / credible
                                  :domain (c33-5 / anything))
                     :polarity (c33-8 / amr-unknown))
       :snt3 (c33-3 / resemble-01
                    :ARG1 (c33-15 / news
                                  :mod (c33-11 / nation))
                    :ARG2 c33-8))

# ::snt no, he didn't - though trying to take a gun off someone trying to shoot you is, again, self defence
# ::tokens ["no", ",", "he", "did", "n't", "-", "though", "trying", "to", "take", "a", "gun", "off", "someone", "trying", "to", "shoot", "you", "is", ",", "again", ",", "self", "defence"]
# ::lemmas ["no", ",", "he", "do", "not", "-", "though", "try", "to", "take", "a", "gun", "off", "someone", "try", "to", "shoot", "you", "be", ",", "again", ",", "self", "defence"]
(c34-8 / have-concession-91
       :ARG1 (c34-11 / do-02
                     :ARG0 (c34-2 / he)
                     :polarity -)
       :ARG2 (c34-7 / mean-01
                    :ARG1 (c34-5 / try-01
                                 :ARG0 c34-2
                                 :ARG1 (c34-6 / take-off-07
                                              :ARG0 c34-2
                                              :ARG1 (c34-12 / gun)
                                              :source (c34-0 / someone
                                                             :ARG0-of (c34-4 / try-01
                                                                             :ARG1 (c34-3 / shoot-02
                                                                                          :ARG0 c34-0
                                                                                          :ARG1 (c34-9 / you))))))
                    :ARG2 (c34-1 / defend-01
                                 :ARG0 c34-2
                                 :ARG1 c34-2
                                 :mod (c34-10 / again))))

# ::snt if wilson had already shot him repeatedly by the time MB rushed him, wouldnt the rush be self defence?
# ::tokens ["if", "wilson", "had", "already", "shot", "him", "repeatedly", "by", "the", "time", "MB", "rushed", "him", ",", "would", "nt", "the", "rush", "be", "self", "defence", "?"]
# ::lemmas ["if", "wilson", "have", "already", "shoot", "he", "repeatedly", "by", "the", "time", "MB", "rush", "he", ",", "would", "not", "the", "rush", "be", "self", "defence", "?"]
(c35-8 / have-condition-91
       :ARG1 (c35-11 / defend-01
                     :ARG0 (c35-3 / person
                                  :name (c35-10 / name
                                                :op1 "William"
                                                :op2 "Wilson"))
                     :manner (c35-0 / self)
                     :polarity (c35-6 / amr-unknown))
       :ARG2 (c35-1 / shoot-02
                    :ARG0 c35-3
                    :ARG1 (c35-2 / he)
                    :ARG1-of (c35-5 / repeat-01)
                    :time (c35-4 / rush-01
                                 :ARG0 c35-3
                                 :name (c35-9 / name
                                              :op1 "MB"))
                    :ARG1 c35-2)
       :time (c35-7 / already))

# ::snt true. Two wrongs don't make it all right.
# ::tokens ["true", ".", "Two", "wrongs", "do", "n't", "make", "it", "all", "right", "."]
# ::lemmas ["true", ".", "Two", "wrong", "do", "not", "make", "it", "all", "right", "."]
(c36-4 / multi-sentence
       :snt1 (c36-1 / true-01)
       :snt2 (c36-7 / make-02
                    :ARG0 (c36-2 / thing
                                 :ARG1-of (c36-6 / wrong-02)
                                 :quant 2)
                    :ARG1 (c36-3 / right-02
                                 :ARG1 (c36-0 / it)
                                 :mod (c36-5 / all))
                    :polarity -))

# ::snt I'm referring to all the riots &amp; looting don't make sense to want equal treatment but then go comment crimes
# ::tokens ["I", "'m", "referring", "to", "all", "the", "riots", "&", "amp", ";", "looting", "do", "n't", "make", "sense", "to", "want", "equal", "treatment", "but", "then", "go", "comment", "crimes"]
# ::lemmas ["i", "be", "refer", "to", "all", "the", "riot", "&", "amp", ";", "loot", "do", "not", "make", "sense", "to", "want", "equal", "treatment", "but", "then", "go", "comment", "crime"]
(c37-7 / multi-sentence
       :snt1 (c37-14 / refer-01
                     :ARG0 (c37-2 / i)
                     :ARG1 (c37-5 / and
                                  :op1 (c37-3 / riot-01
                                              :mod (c37-8 / all))
                                  :op2 (c37-6 / amp)))
       :snt2 (c37-0 / sense-02
                    :ARG1 (c37-4 / loot-01)
                    :purpose (c37-1 / want-01
                                    :ARG0 c37-4
                                    :ARG1 (c37-9 / treat-01
                                                 :ARG1 c37-4
                                                 :ARG1-of (c37-15 / equal-01)))
                    :concession-of (c37-16 / go-05
                                           :ARG0 (c37-13 / you)
                                           :ARG1 (c37-10 / comment-01
                                                         :ARG0 c37-13
                                                         :ARG3 (c37-11 / crime-02
                                                                       :ARG0 c37-13))
                                           :time (c37-12 / then)
                                           :mode imperative)
                    :polarity -))

# ::snt what does fla have to do with it?
# ::tokens ["what", "does", "fla", "have", "to", "do", "with", "it", "?"]
# ::lemmas ["what", "do", "fla", "have", "to", "do", "with", "it", "?"]
(c38-1 / have-to-do-with-04
       :ARG0 (c38-3 / fla)
       :ARG1 (c38-2 / it)
       :ARG2 (c38-0 / amr-unknown))

# ::snt whats not OK is cry racism want equal treatment b they go riot &amp; loot commit crimes in their towns Just plain dumb
# ::tokens ["what", "s", "not", "OK", "is", "cry", "racism", "want", "equal", "treatment", "b", "they", "go", "riot", "&", "amp", ";", "loot", "commit", "crimes", "in", "their", "towns", "Just", "plain", "dumb"]
# ::lemmas ["what", "s", "not", "ok", "be", "cry", "racism", "want", "equal", "treatment", "b", "they", "go", "riot", "&", "amp", ";", "loot", "commit", "crime", "in", "their", "town", "just", "plain", "dumb"]
(c39-5 / okay-04
       :ARG1 (c39-9 / and
                    :op1 (c39-2 / cry-01
                                :ARG1 (c39-8 / want-01
                                             :ARG0 (c39-12 / person
                                                           :mod (c39-3 / racism))
                                             :ARG1 (c39-16 / treat-01
                                                           :ARG1 c39-12
                                                           :ARG1-of (c39-11 / equal-01))))
                    :op2 (c39-19 / go-05
                                 :ARG0 (c39-13 / they)
                                 :ARG1 (c39-1 / and
                                              :op1 (c39-15 / riot-01
                                                           :ARG0 c39-13)
                                              :op2 (c39-17 / amp)))
                    :op3 (c39-18 / commit-02
                                 :ARG0 (c39-0 / loot)
                                 :ARG1 (c39-6 / crime-02
                                              :ARG0 c39-0)
                                 :location (c39-4 / town
                                                  :poss c39-13)))
       :op4 (c39-10 / dumb
                    :mod (c39-14 / plain)
                    :mod (c39-7 / just))
       :polarity -)

# ::snt what does fla have to do with it? My opinion I'm entitled to.
# ::tokens ["what", "does", "fla", "have", "to", "do", "with", "it", "?", "My", "opinion", "I", "'m", "entitled", "to", "."]
# ::lemmas ["what", "do", "fla", "have", "to", "do", "with", "it", "?", "my", "opinion", "i", "be", "entitle", "to", "."]
(c40-2 / multi-sentence
       :snt1 (c40-4 / have-to-do-with-04
                    :polarity (c40-6 / amr-unknown)
                    :ARG0 (c40-8 / fla)
                    :ARG1 (c40-0 / it)
                    :ARG2 (c40-3 / amr-unknown))
       :snt2 (c40-1 / opine-01
                    :ARG0 (c40-5 / i)
                    :ARG1 (c40-7 / entitle-01
                                 :ARG1 c40-0)
                    :ARG2 c40-5))

# ::snt And thiiiiiis is why you don't trust people who magically appear on TV to give their magical "eyewitness testimony."
# ::tokens ["And", "thiiiiiis", "is", "why", "you", "do", "n't", "trust", "people", "who", "magically", "appear", "on", "TV", "to", "give", "their", "magical", "\"", "eyewitness", "testimony", ".", "\""]
# ::lemmas ["and", "thiiiiiis", "be", "why", "you", "do", "not", "trust", "people", "who", "magically", "appear", "on", "tv", "to", "give", "their", "magical", "\"", "eyewitness", "testimony", ".", "\""]
(c41-9 / and
       :op2 (c41-6 / cause-01
                   :ARG0 (c41-2 / that)
                   :ARG1 (c41-3 / trust-02
                                :ARG0 (c41-8 / you)
                                :ARG1 (c41-11 / give-01
                                              :ARG0 (c41-0 / person
                                                           :ARG1-of (c41-4 / appear-01
                                                                           :manner (c41-5 / magic)
                                                                           :medium (c41-1 / television)))
                                              :ARG1 (c41-7 / testify-01
                                                           :ARG0 c41-0
                                                           :mod (c41-10 / eyewitness)
                                                           :mod c41-5))
                                :polarity -)))

# ::snt Do you believe everything you see on TV?
# ::tokens ["Do", "you", "believe", "everything", "you", "see", "on", "TV", "?"]
# ::lemmas ["do", "you", "believe", "everything", "you", "see", "on", "tv", "?"]
(c42-1 / believe-01
       :polarity (c42-4 / amr-unknown)
       :ARG0 (c42-3 / you)
       :ARG1 (c42-5 / everything
                    :ARG1-of (c42-0 / see-01
                                    :ARG0 c42-3
                                    :location (c42-2 / television))))

# ::snt Do you throw away every witness that ever goes on TV? That seems like a silly measure for integrity.
# ::tokens ["Do", "you", "throw", "away", "every", "witness", "that", "ever", "goes", "on", "TV", "?", "That", "seems", "like", "a", "silly", "measure", "for", "integrity", "."]
# ::lemmas ["do", "you", "throw", "away", "every", "witness", "that", "ever", "go", "on", "tv", "?", "that", "seem", "like", "a", "silly", "measure", "for", "integrity", "."]
(c43-8 / multi-sentence
       :snt1 (c43-5 / throw-away-07
                    :polarity (c43-11 / amr-unknown)
                    :ARG0 (c43-10 / you)
                    :ARG1 (c43-4 / person
                                 :ARG0-of (c43-1 / witness-01)
                                 :mod (c43-13 / every)
                                 :ARG1-of (c43-14 / go-06
                                                  :ARG2 (c43-6 / television)
                                                  :time (c43-7 / ever))))
       :snt2 (c43-0 / seem-01
                    :ARG1 (c43-9 / resemble-01
                                 :ARG1 c43-5
                                 :ARG2 (c43-12 / measure-02
                                               :ARG1 (c43-2 / integrity)
                                               :mod (c43-3 / silly)))))

# ::snt Question is if tape is authentic why wait this long to come forward?Probably his tv in the background!Smells fishy!
# ::tokens ["Question", "is", "if", "tape", "is", "authentic", "why", "wait", "this", "long", "to", "come", "forward?Probably", "his", "tv", "in", "the", "background!Smells", "fishy", "!"]
# ::lemmas ["question", "be", "if", "tape", "be", "authentic", "why", "wait", "this", "long", "to", "come", "forward?probably", "his", "tv", "in", "the", "background!smells", "fishy", "!"]
(c44-9 / multi-sentence
       :snt1 (c44-16 / question-01
                     :ARG1 (c44-14 / have-condition-91
                                   :ARG1 (c44-15 / wait-01
                                                 :ARG1 (c44-12 / come-forward-31
                                                               :ARG0 (c44-6 / tape))
                                                 :ARG2 (c44-5 / long-03
                                                              :mod (c44-7 / this))
                                                 :ARG1-of (c44-10 / cause-01
                                                                  :ARG0 (c44-8 / amr-unknown)))
                                   :ARG2 (c44-11 / authentic-02
                                                 :ARG1 c44-6)))
       :snt2 (c44-3 / probable
                    :domain (c44-1 / be-located-at-91
                                   :ARG1 (c44-4 / television
                                                :poss (c44-2 / he))
                                   :ARG2 (c44-13 / background)))
       :snt3 (c44-0 / smell-02
                    :ARG1 (c44-17 / fishy)))

# ::snt Don lemon needs to give it a break and get back to real news this is getting old
# ::tokens ["Don", "lemon", "needs", "to", "give", "it", "a", "break", "and", "get", "back", "to", "real", "news", "this", "is", "getting", "old"]
# ::lemmas ["Don", "lemon", "need", "to", "give", "it", "a", "break", "and", "get", "back", "to", "real", "news", "this", "be", "get", "old"]
(c45-0 / say-01
       :ARG0 (c45-1 / i)
       :ARG1 (c45-10 / need-01
                     :ARG0 (c45-3 / person
                                  :name (c45-8 / name
                                               :op1 "Don"
                                               :op2 "Lemon"))
                     :ARG1 (c45-5 / and
                                  :op1 (c45-11 / give-01
                                               :ARG0 c45-3
                                               :ARG1 (c45-2 / break-19)
                                               :ARG2 (c45-9 / it))
                                  :op2 (c45-6 / get-back-10
                                              :ARG1 c45-3
                                              :ARG2 (c45-7 / news
                                                           :ARG1-of (c45-4 / real-04)))))
       :ARG2 c45-3)

# ::snt image of the source
# ::tokens ["image", "of", "the", "source"]
# ::lemmas ["image", "of", "the", "source"]
(c46-1 / image
       :poss (c46-0 / thing
                    :ARG0-of (c46-2 / source-02)))

# ::snt : Attorney: New audio reveals pause in gunfire when Michael Brown was shot.
# ::tokens [":", "Attorney", ":", "New", "audio", "reveals", "pause", "in", "gunfire", "when", "Michael", "Brown", "was", "shot", "."]
# ::lemmas [":", "attorney", ":", "new", "audio", "reveal", "pause", "in", "gunfire", "when", "Michael", "Brown", "be", "shoot", "."]
(c47-6 / reveal-01
       :ARG0 (c47-2 / audio
                    :ARG1-of (c47-4 / new-01))
       :ARG1 (c47-1 / pause-01
                    :ARG1 (c47-8 / gunfire)
                    :time (c47-0 / shoot-02
                                 :ARG1 (c47-7 / person
                                              :name (c47-5 / name
                                                           :op1 "Michael"
                                                           :op2 "Brown"))))
       :ARG2 (c47-3 / attorney))

# ::snt Oh my RT: Attorney: New audio reveals pause in gunfire when Michael Brown was shot.
# ::tokens ["Oh", "my", "RT", ":", "Attorney", ":", "New", "audio", "reveals", "pause", "in", "gunfire", "when", "Michael", "Brown", "was", "shot", "."]
# ::lemmas ["oh", "my", "RT", ":", "Attorney", ":", "new", "audio", "reveal", "pause", "in", "gunfire", "when", "Michael", "Brown", "be", "shoot", "."]
(c48-0 / say-01
       :ARG0 (c48-1 / i)
       :ARG1 (c48-12 / reveal-01
                     :ARG0 (c48-5 / audio
                                  :ARG1-of (c48-9 / new-01))
                     :ARG1 (c48-3 / pause-01
                                  :ARG1 (c48-15 / gunfire)
                                  :time (c48-2 / shoot-02
                                               :ARG1 (c48-14 / person
                                                             :name (c48-11 / name
                                                                           :op1 "Michael"
                                                                           :op2 "Brown")))))
       :ARG2 (c48-13 / person
                     :ARG0-of (c48-10 / have-rel-role-91
                                      :ARG2 (c48-7 / attorney)))
       :mod (c48-4 / oh
                   :mode expressive)
       :ARG1-of (c48-6 / tell-01
                       :ARG0 (c48-8 / publication
                                    :name c48-11
                                    :op1 "RT"))
       :ARG2 c48-1)

# ::snt y'all will think th worst of it all cause it don't &amp; won't go your way
# ::tokens ["y'", "all", "will", "think", "th", "worst", "of", "it", "all", "cause", "it", "do", "n't", "&", "amp", ";", "wo", "n't", "go", "your", "way"]
# ::lemmas ["you", "all", "will", "think", "th", "bad", "of", "it", "all", "cause", "it", "do", "not", "&", "amp", ";", "will", "not", "go", "your", "way"]
(c49-3 / think-01
       :ARG0 (c49-10 / you
                     :mod (c49-12 / all))
       :ARG1 (c49-4 / thing
                    :ARG1-of (c49-11 / have-degree-91
                                     :ARG2 (c49-1 / bad-07
                                                  :ARG1 c49-4)
                                     :ARG3 (c49-6 / most)
                                     :ARG5 (c49-2 / it
                                                  :mod (c49-7 / all))))
       :ARG1-of (c49-8 / cause-01
                       :ARG0 (c49-5 / and
                                    :op1 c49-5
                                    :op1 (c49-13 / do-02
                                                 :ARG0 c49-4
                                                 :polarity -)
                                    :op2 (c49-9 / amp-01
                                                :ARG0 c49-4
                                                :polarity -)
                                    :op3 (c49-14 / go-01
                                                 :ARG1 c49-4
                                                 :path (c49-0 / way
                                                              :poss c49-10)
                                                 :polarity -))))
