# ::snt I read into the headline of the vid wrong. &gt;&gt;I thought a Cop got towed because maybe he parked in a no parking area.
# ::tokens ["I", "read", "into", "the", "headline", "of", "the", "vid", "wrong", ".", "&", "gt;&gt;I", "thought", "a", "Cop", "got", "towed", "because", "maybe", "he", "parked", "in", "a", "no", "parking", "area", "."]
# ::lemmas ["i", "read", "into", "the", "headline", "of", "the", "vid", "wrong", ".", "&", "gt;&gt;i", "think", "a", "Cop", "got", "tow", "because", "maybe", "he", "park", "in", "a", "no", "parking", "area", "."]
(c1-11 / read-01
       :ARG0 (c1-1 / i)
       :ARG1 (c1-4 / thing
                   :ARG2-of (c1-10 / headline-01
                                   :ARG1 (c1-12 / video))
                   :ARG2-of (c1-0 / wrong-04))
       :ARG3 (c1-5 / think-01
                   :ARG0 c1-1
                   :ARG1 (c1-3 / tow-01
                               :ARG1 (c1-8 / cop)
                               :ARG1-of (c1-7 / cause-01
                                              :ARG0 (c1-2 / possible-01
                                                          :ARG1 (c1-13 / park-01
                                                                       :ARG0 c1-8
                                                                       :ARG2 (c1-6 / area
                                                                                   :ARG1-of (c1-9 / park-01
                                                                                                  :polarity -))))))))

# ::snt lol hope he didn't get a ticket for towing without a license or PSC (Public Service Commission) Kudos to Subaru
# ::tokens ["lol", "hope", "he", "did", "n't", "get", "a", "ticket", "for", "towing", "without", "a", "license", "or", "PSC", "(", "Public", "Service", "Commission", ")", "Kudos", "to", "Subaru"]
# ::lemmas ["lol", "hope", "he", "do", "not", "get", "a", "ticket", "for", "tow", "without", "a", "license", "or", "PSC", "(", "Public", "Service", "Commission", ")", "Kudos", "to", "Subaru"]
(c2-11 / multi-sentence
       :snt1 (c2-18 / hope-01
                    :ARG0 (c2-0 / i)
                    :ARG1 (c2-16 / ticket-02
                                 :ARG1 (c2-4 / he)
                                 :ARG2 (c2-10 / tow-01
                                              :ARG0 c2-4
                                              :ARG1-of (c2-1 / license-01
                                                             :ARG2 (c2-5 / or
                                                                         :op1 (c2-2 / company
                                                                                    :name (c2-14 / name
                                                                                                 :op1 "Public"
                                                                                                 :op2 "Service"
                                                                                                 :op3 "Commission"))
                                                                         :op2 (c2-17 / company
                                                                                     :name (c2-13 / name
                                                                                                  :op1 "Subway")))
                                                             :polarity -))
                                 :ARG0-of (c2-7 / cause-01
                                                :ARG1 (c2-19 / kudos
                                                             :beneficiary (c2-12 / company
                                                                                 :name (c2-8 / name
                                                                                             :op1 "Subway"))))
                                 :polarity -)
                    :manner (c2-3 / laugh-01
                                  :ARG0 c2-0
                                  :manner (c2-9 / loud)
                                  :mode expressive))
       :snt2 c2-19
       :beneficiary (c2-6 / company
                          :name (c2-15 / name
                                       :op1 "Subway")))

# ::snt u kno, i had a Subaru Forrester in Toronto and it was GREAT in snow... Loved it... Best car ever...
# ::tokens ["u", "kno", ",", "i", "had", "a", "Subaru", "Forrester", "in", "Toronto", "and", "it", "was", "GREAT", "in", "snow", "...", "Loved", "it", "...", "Best", "car", "ever", "..."]
# ::lemmas ["u", "kno", ",", "i", "have", "a", "Subaru", "Forrester", "in", "Toronto", "and", "it", "be", "GREAT", "in", "snow", "...", "love", "it", "...", "good", "car", "ever", "..."]
(c3-4 / multi-sentence
      :snt1 (c3-13 / and
                   :op1 (c3-10 / have-03
                               :ARG0 (c3-1 / i)
                               :ARG1 (c3-7 / car
                                           :name (c3-8 / name
                                                       :op1 "Subaru"
                                                       :op2 "Forrester"))
                               :location (c3-5 / city
                                               :name (c3-12 / name
                                                            :op1 "Toronto")))
                   :op2 (c3-16 / great
                               :domain c3-7
                               :location (c3-0 / snow)))
      :snt2 (c3-3 / love-01
                  :ARG0 c3-1
                  :ARG1 c3-7)
      :snt3 (c3-9 / car
                  :ARG1-of (c3-2 / have-degree-91
                                 :ARG2 (c3-6 / good-02
                                             :ARG1 c3-9)
                                 :ARG3 (c3-14 / most)
                                 :ARG5 (c3-11 / car
                                              :time (c3-15 / ever)))))

# ::snt Wonder if he'll get a ticket next time in his WRX Impreza?
# ::tokens ["Wonder", "if", "he", "'ll", "get", "a", "ticket", "next", "time", "in", "his", "WRX", "Impreza", "?"]
# ::lemmas ["wonder", "if", "he", "'ll", "get", "a", "ticket", "next", "time", "in", "his", "WRX", "Impreza", "?"]
(c4-5 / wonder-01
      :ARG0 (c4-0 / i)
      :ARG1 (c4-1 / ticket-02
                  :ARG1 (c4-3 / he)
                  :time (c4-2 / next)
                  :subevent-of (c4-6 / event
                                     :name (c4-4 / name
                                                 :op1 "WRX"
                                                 :op2 "Impreza")
                                     :poss c4-3)))
