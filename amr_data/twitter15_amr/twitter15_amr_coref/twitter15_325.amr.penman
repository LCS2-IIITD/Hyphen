# ::snt ISIS video.
# ::tokens ["ISIS", "video", "."]
# ::lemmas ["ISIS", "video", "."]
(c1-1 / video
      :mod (c1-2 / criminal-organization
                 :name (c1-0 / name
                             :op1 "ISIS")))

# ::snt there are no "golf carts" in the area here
# ::tokens ["there", "are", "no", "\"", "golf", "carts", "\"", "in", "the", "area", "here"]
# ::lemmas ["there", "be", "no", "\"", "golf", "cart", "\"", "in", "the", "area", "here"]
(c2-1 / be-located-at-91
      :ARG1 (c2-3 / cart
                  :purpose (c2-2 / golf-01))
      :ARG2 (c2-0 / area)
      :polarity -)

# ::snt there has to be a STRONG COALITION of countries helping over here! not to hid their heads in the sand! THEY COULD BE NEXT!
# ::tokens ["there", "has", "to", "be", "a", "STRONG", "COALITION", "of", "countries", "helping", "over", "here", "!", "not", "to", "hid", "their", "heads", "in", "the", "sand", "!", "THEY", "COULD", "BE", "NEXT", "!"]
# ::lemmas ["there", "have", "to", "be", "a", "strong", "coalition", "of", "country", "help", "over", "here", "!", "not", "to", "hid", "their", "head", "in", "the", "sand", "!", "they", "could", "be", "NEXT", "!"]
(c3-6 / multi-sentence
      :snt1 (c3-4 / obligate-01
                  :ARG2 (c3-9 / cooperate-01
                              :ARG0 (c3-7 / country
                                          :part (c3-10 / head))
                              :ARG2 (c3-1 / help-01
                                          :location (c3-12 / here))
                              :ARG1-of (c3-0 / strong-02)))
      :snt2 (c3-8 / hide-01
                  :ARG0 (c3-5 / they
                              :part c3-10)
                  :ARG1 c3-10
                  :location (c3-2 / sand)
                  :polarity -)
      :snt3 (c3-3 / possible-01
                  :ARG1 (c3-11 / next
                               :domain c3-5)))

# ::snt OK enough with the name calling. Don't all of our fearless leaders think it 'a time for some sticks and stones ?
# ::tokens ["OK", "enough", "with", "the", "name", "calling", ".", "Do", "n't", "all", "of", "our", "fearless", "leaders", "think", "it", "'", "a", "time", "for", "some", "sticks", "and", "stones", "?"]
# ::lemmas ["ok", "enough", "with", "the", "name", "call", ".", "do", "not", "all", "of", "our", "fearless", "leader", "think", "it", "'", "a", "time", "for", "some", "stick", "and", "stone", "?"]
(c4-8 / multi-sentence
      :snt1 (c4-5 / okay-01
                  :ARG1 (c4-11 / call-01
                               :ARG2 (c4-15 / name))
                  :ARG2-of (c4-14 / have-degree-91
                                  :ARG1 c4-11
                                  :ARG3 (c4-16 / enough)))
      :snt2 (c4-6 / think-01
                  :ARG0 (c4-3 / person
                              :ARG0-of (c4-4 / lead-02
                                             :ARG1 (c4-1 / we))
                              :mod (c4-17 / fear-01
                                          :polarity -)
                              :mod (c4-7 / all))
                  :ARG1 (c4-9 / time
                              :purpose (c4-10 / and
                                              :op1 (c4-0 / stick)
                                              :op2 (c4-2 / stone)
                                              :quant (c4-12 / some)))
                  :polarity (c4-13 / amr-unknown)
                  :polarity -))

# ::snt yeah but did he go golfing afterwards?
# ::tokens ["yeah", "but", "did", "he", "go", "golfing", "afterwards", "?"]
# ::lemmas ["yeah", "but", "do", "he", "go", "golf", "afterwards", "?"]
(c5-4 / golf-01
      :polarity (c5-3 / amr-unknown)
      :ARG0 (c5-2 / he)
      :time (c5-0 / afterwards)
      :concession (c5-1 / yeah
                        :mode expressive))

# ::snt Go back to regular programming. I want to see Huckabee.Know beheading. Break in when NEW news. Other wise keep with regular program
# ::tokens ["Go", "back", "to", "regular", "programming", ".", "I", "want", "to", "see", "Huckabee", ".", "Know", "beheading", ".", "Break", "in", "when", "NEW", "news", ".", "Other", "wise", "keep", "with", "regular", "program"]
# ::lemmas ["go", "back", "to", "regular", "programming", ".", "i", "want", "to", "see", "Huckabee", ".", "Know", "behead", ".", "break", "in", "when", "new", "news", ".", "other", "wise", "keep", "with", "regular", "program"]
(c8-12 / multi-sentence
       :snt1 (c8-20 / go-back-19
                    :ARG1 (c8-13 / you)
                    :ARG2 (c8-11 / program-01
                                 :ARG1-of (c8-5 / regular-02))
                    :mode imperative)
       :snt2 (c8-9 / want-01
                   :ARG0 (c8-2 / i)
                   :ARG1 (c8-0 / see-01
                               :ARG0 c8-2
                               :ARG1 (c8-16 / person
                                            :name (c8-15 / name
                                                         :op1 "Huckabee"))))
       :snt3 (c8-19 / know-01
                    :ARG0 (c8-4 / i)
                    :ARG1 (c8-6 / behead-01))
       :snt4 (c8-3 / break-in-06
                   :time (c8-14 / news
                                :ARG1-of (c8-8 / new-01)))
       :snt5 (c8-1 / keep-02
                   :ARG0 (c8-18 / wise
                                :mod (c8-7 / other))
                   :ARG1 (c8-10 / program-01
                                :ARG1-of (c8-17 / regular-02))))

# ::snt It was evil !
# ::tokens ["It", "was", "evil", "!"]
# ::lemmas ["it", "be", "evil", "!"]
(c10-1 / evil
       :domain (c10-0 / it)
       :mode expressive)

# ::snt disgusting sub-human dogs....they must be put down like any other rabid dog...
# ::tokens ["disgusting", "sub", "-", "human", "dogs", "....", "they", "must", "be", "put", "down", "like", "any", "other", "rabid", "dog", "..."]
# ::lemmas ["disgusting", "sub", "-", "human", "dog", "....", "they", "must", "be", "put", "down", "like", "any", "other", "rabid", "dog", "..."]
(c11-8 / multi-sentence
       :snt1 (c11-10 / dog
                     :ARG0-of (c11-0 / disgust-01)
                     :mod (c11-1 / sub-human))
       :snt2 (c11-5 / obligate-01
                    :ARG2 (c11-3 / put-down-15
                                 :ARG1 (c11-6 / they)
                                 :ARG1-of (c11-9 / resemble-01
                                                 :ARG2 (c11-12 / put-down-15
                                                               :ARG1 (c11-2 / dog
                                                                            :mod (c11-4 / rabies)
                                                                            :mod (c11-11 / other)
                                                                            :mod (c11-7 / any)))))))

# ::snt Mohammed beheaded hundreds. Nothing new from his followers.
# ::tokens ["Mohammed", "beheaded", "hundreds", ".", "Nothing", "new", "from", "his", "followers", "."]
# ::lemmas ["Mohammed", "behead", "hundreds", ".", "nothing", "new", "from", "his", "follower", "."]
(c12-3 / multi-sentence
       :snt1 (c12-1 / behead-01
                    :ARG0 (c12-2 / person
                                 :name (c12-6 / name
                                              :op1 "Mohammed"))
                    :ARG1 (c12-9 / person
                                 :quant (c12-7 / multiple
                                               :op1 100)))
       :snt2 (c12-5 / new-01
                    :ARG1 (c12-4 / nothing)
                    :ARG2 (c12-8 / person
                                 :ARG0-of (c12-0 / follow-02
                                                 :ARG1 c12-2))))
