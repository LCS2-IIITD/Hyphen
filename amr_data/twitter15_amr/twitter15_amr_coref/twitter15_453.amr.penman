# ::snt The biggest threat of them all!
# ::tokens ["The", "biggest", "threat", "of", "them", "all", "!"]
# ::lemmas ["the", "big", "threat", "of", "they", "all", "!"]
(c1-2 / threaten-01
      :ARG1-of (c1-5 / have-degree-91
                     :ARG2 (c1-0 / big)
                     :ARG3 (c1-4 / most))
      :ARG1-of (c1-1 / include-91
                     :ARG2 (c1-3 / they
                                 :mod (c1-6 / all))))

# ::snt a long time ago.
# ::tokens ["a", "long", "time", "ago", "."]
# ::lemmas ["a", "long", "time", "ago", "."]
(c2-2 / before
      :op1 (c2-0 / now)
      :quant (c2-1 / time
                   :ARG1-of (c2-3 / long-03)))

# ::snt I am glad somebody noticed the body language of the jihadists
# ::tokens ["I", "am", "glad", "somebody", "noticed", "the", "body", "language", "of", "the", "jihadists"]
# ::lemmas ["i", "be", "glad", "somebody", "notice", "the", "body", "language", "of", "the", "jihadists"]
(c3-6 / glad-02
      :ARG0 (c3-5 / notice-01
                  :ARG0 (c3-0 / somebody)
                  :ARG1 (c3-3 / language
                              :mod (c3-1 / body)
                              :poss (c3-4 / jihadist)))
      :ARG1 (c3-2 / i))

# ::snt NAd El-Baghdadi told obama he would see him in NY
# ::tokens ["NAd", "El", "-", "Baghdadi", "told", "obama", "he", "would", "see", "him", "in", "NY"]
# ::lemmas ["nad", "El", "-", "Baghdadi", "tell", "obama", "he", "would", "see", "he", "in", "NY"]
(c4-2 / tell-01
      :ARG0 (c4-1 / person
                  :name (c4-6 / name
                              :op1 "NAd"
                              :op2 "El-Baghdadi"))
      :ARG1 (c4-0 / see-01
                  :ARG0 c4-1
                  :ARG1 (c4-7 / person
                              :name (c4-5 / name
                                          :op1 "Obama"))
                  :location (c4-3 / city
                                  :name (c4-4 / name
                                              :op1 "NY")))
      :ARG2 c4-7)

# ::snt Obama IS cunning as many already knew.
# ::tokens ["Obama", "IS", "cunning", "as", "many", "already", "knew", "."]
# ::lemmas ["Obama", "IS", "cunning", "as", "many", "already", "know", "."]
(c5-3 / cunning
      :domain (c5-0 / person
                    :name (c5-4 / name
                                :op1 "Obama"))
      :ARG1-of (c5-5 / know-01
                     :ARG0 (c5-6 / person
                                 :quant (c5-2 / many))
                     :time (c5-1 / already)))

# ::snt It smells just like your Momma.
# ::tokens ["It", "smells", "just", "like", "your", "Momma", "."]
# ::lemmas ["it", "smell", "just", "like", "your", "Momma", "."]
(c6-0 / smell-02
      :ARG1 (c6-1 / it)
      :ARG2 (c6-2 / person
                  :ARG0-of (c6-5 / have-rel-role-91
                                 :ARG1 (c6-4 / you)
                                 :ARG2 (c6-3 / mum)))
      :mod (c6-6 / just))

# ::snt What ever your smoking has PCP in it.
# ::tokens ["What", "ever", "your", "smoking", "has", "PCP", "in", "it", "."]
# ::lemmas ["what", "ever", "your", "smoking", "have", "PCP", "in", "it", "."]
(c7-3 / have-03
      :ARG0 (c7-0 / smoke-02
                  :ARG0 (c7-4 / you)
                  :mod (c7-5 / any))
      :ARG1 (c7-1 / thing
                  :name (c7-2 / name
                              :op1 "PCP")
                  :location c7-0))

# ::snt LOL TO BAD HIS HEAD WASNT IN PICTURE ON THE RIGHT
# ::tokens ["LOL", "TO", "BAD", "HIS", "HEAD", "WASNT", "IN", "PICTURE", "ON", "THE", "RIGHT"]
# ::lemmas ["LOL", "to", "BAD", "his", "head", "WASNT", "in", "picture", "on", "the", "right"]
(c8-1 / blame-01
      :ARG1 (c8-6 / he
                  :part (c8-0 / head))
      :ARG2 (c8-2 / picture-01
                  :ARG1 c8-0
                  :ARG1-of (c8-7 / right-08))
      :ARG2-of (c8-4 / laugh-01
                     :ARG0 (c8-3 / i)
                     :manner (c8-5 / loud)
                     :mode expressive)
      :polarity -)

# ::snt and there was me thinking it meant "have you smelled my latest rape victim?"
# ::tokens ["and", "there", "was", "me", "thinking", "it", "meant", "\"", "have", "you", "smelled", "my", "latest", "rape", "victim", "?", "\""]
# ::lemmas ["and", "there", "be", "i", "think", "it", "mean", "\"", "have", "you", "smell", "my", "late", "rape", "victim", "?", "\""]
(c9-9 / and
      :op2 (c9-3 / think-01
                 :ARG0 (c9-1 / i)
                 :ARG1 (c9-5 / mean-01
                             :ARG1 (c9-8 / it)
                             :ARG2 (c9-0 / smell-01
                                         :ARG0 (c9-7 / you)
                                         :ARG1 (c9-10 / victim
                                                      :ARG1-of (c9-4 / rape-01
                                                                     :ARG0 c9-1)
                                                      :mod (c9-2 / last))
                                         :polarity (c9-6 / amr-unknown)))))

# ::snt Tell me he's not a muslin
# ::tokens ["Tell", "me", "he", "'s", "not", "a", "muslin"]
# ::lemmas ["tell", "i", "he", "be", "not", "a", "muslin"]
(c10-1 / tell-01
       :ARG0 (c10-3 / you)
       :ARG1 (c10-5 / religious-group
                    :name (c10-2 / name
                                 :op1 "Muslim")
                    :domain (c10-4 / he)
                    :polarity -)
       :ARG2 (c10-0 / i)
       :mode imperative)

# ::snt MUZLUM sign for "one Allah". Really means "One shit sandwich, please".
# ::tokens ["MUZLUM", "sign", "for", "\"", "one", "Allah", "\"", ".", "Really", "means", "\"", "One", "shit", "sandwich", ",", "please", "\"", "."]
# ::lemmas ["MUZLUM", "sign", "for", "\"", "one", "Allah", "\"", ".", "really", "mean", "\"", "One", "shit", "sandwich", ",", "please", "\"", "."]
(c11-4 / multi-sentence
       :snt1 (c11-0 / sign
                    :mod (c11-8 / mosque)
                    :topic (c11-2 / person
                                  :name (c11-7 / name
                                               :op1 "Allah")
                                  :quant 1))
       :snt2 (c11-6 / mean-01
                    :ARG1 (c11-1 / sandwich
                                 :mod (c11-5 / shit)
                                 :quant 1)
                    :ARG2 (c11-9 / please)
                    :ARG1-of (c11-3 / real-04)))
