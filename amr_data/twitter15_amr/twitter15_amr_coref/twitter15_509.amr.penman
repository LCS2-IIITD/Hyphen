# ::snt so is this gonna be a thing or nah?
# ::tokens ["so", "is", "this", "gon", "na", "be", "a", "thing", "or", "nah", "?"]
# ::lemmas ["so", "be", "this", "going", "to", "be", "a", "thing", "or", "nah", "?"]
(c1-0 / infer-01
      :ARG1 (c1-4 / amr-choice
                  :op1 (c1-1 / thing
                             :domain (c1-2 / this))
                  :op2 (c1-3 / nah)))

# ::snt Actually, they decided to put it in their vault based on feedback.
# ::tokens ["Actually", ",", "they", "decided", "to", "put", "it", "in", "their", "vault", "based", "on", "feedback", "."]
# ::lemmas ["actually", ",", "they", "decide", "to", "put", "it", "in", "their", "vault", "base", "on", "feedback", "."]
(c2-5 / decide-01
      :ARG0 (c2-3 / they)
      :ARG1 (c2-2 / put-01
                  :ARG0 c2-3
                  :ARG1 (c2-0 / it)
                  :ARG2 (c2-6 / vault
                              :poss c2-3))
      :ARG1-of (c2-4 / actual-02)
      :ARG1-of (c2-1 / base-02
                     :ARG2 (c2-7 / feedback)))

# ::snt perfect! When I'm too lazy to grab a snack and a drink while in the middle of a game I can just grab both at the same time!
# ::tokens ["perfect", "!", "When", "I", "'m", "too", "lazy", "to", "grab", "a", "snack", "and", "a", "drink", "while", "in", "the", "middle", "of", "a", "game", "I", "can", "just", "grab", "both", "at", "the", "same", "time", "!"]
# ::lemmas ["perfect", "!", "when", "i", "be", "too", "lazy", "to", "grab", "a", "snack", "and", "a", "drink", "while", "in", "the", "middle", "of", "a", "game", "i", "can", "just", "grab", "both", "at", "the", "same", "time", "!"]
(c3-7 / multi-sentence
      :snt1 (c3-3 / perfect-02
                  :mode expressive)
      :snt2 (c3-14 / possible-01
                   :ARG1 (c3-11 / grab-01
                                :ARG0 (c3-1 / i)
                                :ARG1 (c3-12 / and
                                             :op1 (c3-0 / snack)
                                             :op2 (c3-13 / drink))
                                :time (c3-2 / middle
                                            :part-of (c3-8 / game))
                                :mod (c3-9 / just)
                                :time (c3-10 / have-degree-91
                                             :ARG1 c3-1
                                             :ARG2 (c3-4 / lazy)
                                             :ARG3 (c3-5 / too)
                                             :ARG6 (c3-6 / grab-01
                                                         :ARG0 c3-1
                                                         :ARG1 c3-12
                                                         :time c3-2)))))

# ::snt Way to understand your target audience MT : Pepsi is currently taste-testing Doritos flavored Mountrain Dew. Would you try it?
# ::tokens ["Way", "to", "understand", "your", "target", "audience", "MT", ":", "Pepsi", "is", "currently", "taste", "-", "testing", "Doritos", "flavored", "Mountrain", "Dew", ".", "Would", "you", "try", "it", "?"]
# ::lemmas ["way", "to", "understand", "your", "target", "audience", "MT", ":", "Pepsi", "be", "currently", "taste", "-", "testing", "Doritos", "flavor", "Mountrain", "Dew", ".", "would", "you", "try", "it", "?"]
(c5-12 / multi-sentence
       :snt1 (c5-20 / have-manner-91
                    :ARG1 (c5-3 / understand-01
                                :ARG0 (c5-13 / you)
                                :ARG1 (c5-7 / audience
                                            :ARG1-of (c5-17 / target-01
                                                            :ARG0 c5-13)))
                    :ARG2 (c5-6 / way))
       :snt2 (c5-11 / test-01
                    :ARG0 (c5-2 / company
                                :name (c5-15 / name
                                             :op1 "Pepsi"))
                    :ARG1 (c5-10 / product
                                 :name (c5-14 / name
                                              :op1 "Mountain"
                                              :op2 "Dew")
                                 :ARG1-of (c5-8 / flavor-01
                                                :ARG2 (c5-16 / product
                                                             :name (c5-5 / name
                                                                         :op1 "Doritos"))))
                    :time (c5-18 / current)
                    :manner (c5-4 / taste))
       :snt3 (c5-19 / try-01
                    :ARG0 (c5-9 / you)
                    :ARG1 (c5-0 / it)
                    :polarity (c5-1 / amr-unknown)))

# ::snt That's what's up!
# ::tokens ["That", "'s", "what", "'s", "up", "!"]
# ::lemmas ["that", "be", "what", "be", "up", "!"]
(c6-1 / event
      :mod (c6-0 / that))

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c7-0 / request-confirmation-91)

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c9-0 / amr-empty)

# ::snt hells yeah I would!!!
# ::tokens ["hells", "yeah", "I", "would", "!", "!", "!"]
# ::lemmas ["hell", "yeah", "i", "would", "!", "!", "!"]
(c10-0 / do-02
       :ARG0 (c10-2 / i)
       :mod (c10-1 / yeah
                   :degree (c10-3 / hell)
                   :mode expressive)
       :mode expressive)

# ::snt that's for certain. A beautiful lunch in SF I must say.
# ::tokens ["that", "'s", "for", "certain", ".", "A", "beautiful", "lunch", "in", "SF", "I", "must", "say", "."]
# ::lemmas ["that", "be", "for", "certain", ".", "a", "beautiful", "lunch", "in", "SF", "i", "must", "say", "."]
(c11-6 / multi-sentence
       :snt1 (c11-8 / certain
                    :domain (c11-4 / that))
       :snt2 (c11-5 / obligate-01
                    :ARG1 (c11-1 / i)
                    :ARG2 (c11-0 / say-01
                                 :ARG0 c11-1
                                 :ARG1 (c11-3 / lunch-01
                                              :ARG1-of (c11-2 / beautiful-02)
                                              :location (c11-7 / city
                                                               :name (c11-9 / name
                                                                            :op1 "SF"))))))

# ::snt friend of mine used to GM there (and RN in Seattle). He's never led me astray and believes in service.
# ::tokens ["friend", "of", "mine", "used", "to", "GM", "there", "(", "and", "RN", "in", "Seattle", ")", ".", "He", "'s", "never", "led", "me", "astray", "and", "believes", "in", "service", "."]
# ::lemmas ["friend", "of", "mine", "use", "to", "GM", "there", "(", "and", "RN", "in", "Seattle", ")", ".", "he", "be", "never", "lead", "i", "astray", "and", "believe", "in", "service", "."]
(c12-18 / multi-sentence
        :snt1 (c12-14 / and
                      :op1 (c12-17 / person
                                   :ARG0-of (c12-25 / have-rel-role-91
                                                    :ARG1 (c12-1 / i)
                                                    :ARG2 (c12-16 / friend))
                                   :ARG0-of (c12-10 / have-org-role-91
                                                    :ARG1 (c12-4 / company
                                                                 :name (c12-20 / name
                                                                               :op1 "General"
                                                                               :op2 "Motors")))
                                   :location (c12-22 / there)
                                   :time (c12-5 / use-03))
                      :op2 (c12-21 / person
                                   :ARG0-of (c12-8 / have-rel-role-91
                                                   :ARG1 c12-1
                                                   :ARG2 (c12-9 / friend))
                                   :ARG0-of (c12-12 / have-rel-role-91
                                                    :ARG1 c12-1
                                                    :ARG2 (c12-19 / nurse))
                                   :location (c12-24 / city
                                                     :name (c12-13 / name
                                                                   :op1 "Seattle"))
                                   :time c12-5))
        :snt2 (c12-3 / and
                     :op1 (c12-2 / lead-01
                                 :ARG0 (c12-7 / he)
                                 :ARG1 (c12-6 / i)
                                 :ARG4 (c12-23 / astray)
                                 :time (c12-15 / ever)
                                 :polarity -)
                     :op2 (c12-11 / believe-01
                                  :ARG0 c12-7
                                  :ARG1 (c12-0 / serve-01))))

# ::snt weird, right? I find most SF service to me smug - not awesome - but that place throws me.
# ::tokens ["weird", ",", "right", "?", "I", "find", "most", "SF", "service", "to", "me", "smug", "-", "not", "awesome", "-", "but", "that", "place", "throws", "me", "."]
# ::lemmas ["weird", ",", "right", "?", "i", "find", "most", "SF", "service", "to", "i", "smug", "-", "not", "awesome", "-", "but", "that", "place", "throw", "i", "."]
(c13-7 / multi-sentence
       :snt1 (c13-12 / weird
                     :ARG1-of (c13-4 / request-confirmation-91))
       :snt2 (c13-10 / contrast-01
                     :ARG1 (c13-14 / find-02
                                   :ARG0 (c13-1 / i)
                                   :ARG1 (c13-0 / smug
                                                :domain (c13-2 / serve-01
                                                               :ARG2 c13-1
                                                               :mod (c13-8 / city
                                                                           :name (c13-11 / name
                                                                                         :op1 "SF"))
                                                               :quant (c13-13 / most)
                                                               :ARG0-of (c13-5 / awe-01
                                                                               :polarity -))))
                     :ARG2 (c13-6 / throw-01
                                  :ARG0 (c13-3 / place
                                               :mod (c13-9 / that))
                                  :ARG1 c13-1)))

# ::snt last time we ordered a started and nada mas and the somm came out about :00:30 later with matching wine. Random.
# ::tokens ["last", "time", "we", "ordered", "a", "started", "and", "nada", "mas", "and", "the", "somm", "came", "out", "about", ":", "00:30", "later", "with", "matching", "wine", ".", "Random", "."]
# ::lemmas ["last", "time", "we", "order", "a", "start", "and", "nada", "mas", "and", "the", "somm", "come", "out", "about", ":", "00:30", "later", "with", "match", "wine", ".", "random", "."]
(c14-15 / multi-sentence
        :snt1 (c14-7 / order-02
                     :ARG0 (c14-11 / we)
                     :ARG1 (c14-10 / and
                                   :op1 (c14-18 / wine
                                                :ARG1-of (c14-0 / start-01))
                                   :op2 (c14-4 / wine
                                               :ARG1-of (c14-13 / match-01)))
                     :time (c14-1 / last))
        :snt2 c14-10
        :op1 c14-0
        :op2 (c14-16 / nada
                     :mod (c14-8 / mas))
        :snt3 (c14-3 / come-out-09
                     :ARG1 (c14-14 / person
                                   :ARG0-of (c14-19 / have-rel-role-91
                                                    :ARG2 (c14-6 / sister)))
                     :time (c14-2 / after
                                  :time (c14-17 / about
                                                :op1 (c14-12 / date-entity
                                                             :time "00:30")))
                     :accompanier (c14-9 / wine)
                     :ARG1-of (c14-5 / random-02)))

# ::snt did you have he lobster pot pie? IMO the service reigns. Food has moments.
# ::tokens ["did", "you", "have", "he", "lobster", "pot", "pie", "?", "IMO", "the", "service", "reigns", ".", "Food", "has", "moments", "."]
# ::lemmas ["do", "you", "have", "he", "lobster", "pot", "pie", "?", "imo", "the", "service", "reign", ".", "food", "have", "moment", "."]
(c15-7 / multi-sentence
       :snt1 (c15-8 / have-03
                    :polarity (c15-10 / amr-unknown)
                    :ARG0 (c15-9 / you)
                    :ARG1 (c15-3 / pie
                                 :mod (c15-13 / pot
                                              :consist-of (c15-4 / lobster))))
       :snt2 (c15-5 / reign-01
                    :ARG0 (c15-0 / service)
                    :ARG1-of (c15-6 / opine-01
                                    :ARG0 (c15-1 / i)))
       :snt3 (c15-2 / have-03
                    :ARG0 (c15-12 / food)
                    :ARG1 (c15-11 / moment)))

# ::snt in SF? Yeah they are out of control. The vegas spot might be the best service I've had in my life. For real.
# ::tokens ["in", "SF", "?", "Yeah", "they", "are", "out", "of", "control", ".", "The", "vegas", "spot", "might", "be", "the", "best", "service", "I", "'ve", "had", "in", "my", "life", ".", "For", "real", "."]
# ::lemmas ["in", "SF", "?", "yeah", "they", "be", "out", "of", "control", ".", "the", "vegas", "spot", "might", "be", "the", "good", "service", "i", "'ve", "have", "in", "my", "life", ".", "for", "real", "."]
(c16-6 / multi-sentence
       :snt1 (c16-4 / out-06
                    :ARG1 (c16-5 / they)
                    :ARG2 (c16-8 / control-01
                                 :ARG1 c16-5)
                    :polarity (c16-12 / amr-unknown)
                    :mod (c16-10 / yeah))
       :snt2 (c16-2 / possible-01
                    :ARG1 (c16-11 / have-degree-91
                                  :ARG1 (c16-0 / serve-02
                                               :ARG0 (c16-1 / i)
                                               :location (c16-7 / city
                                                                :name (c16-9 / name
                                                                             :op1 "Vegas")))
                                  :ARG2 (c16-15 / good-02
                                                :ARG1 c16-0)
                                  :ARG3 (c16-13 / most))
                    :time (c16-3 / live-01
                                 :ARG0 c16-1))
       :snt3 (c16-14 / for-real-04))

# ::snt also, we need to go to rn74
# ::tokens ["also", ",", "we", "need", "to", "go", "to", "rn74"]
# ::lemmas ["also", ",", "we", "need", "to", "go", "to", "rn74"]
(c17-3 / need-01
       :ARG0 (c17-0 / we)
       :ARG1 (c17-4 / go-02
                    :ARG0 c17-0
                    :ARG4 (c17-2 / url-entity
                                 :value "rn74"))
       :mod (c17-1 / also))

# ::snt okay. Let's plan to catch up should the returns come in as hoped.
# ::tokens ["okay", ".", "Let", "'s", "plan", "to", "catch", "up", "should", "the", "returns", "come", "in", "as", "hoped", "."]
# ::lemmas ["okay", ".", "let", "us", "plan", "to", "catch", "up", "should", "the", "return", "come", "in", "as", "hope", "."]
(c18-3 / multi-sentence
       :snt1 (c18-1 / okay-04)
       :snt2 (c18-0 / plan-01
                    :ARG0 (c18-7 / we)
                    :ARG1 (c18-5 / catch-up-04
                                 :ARG1 c18-7)
                    :condition (c18-4 / come-01
                                      :ARG1 (c18-2 / return-01)
                                      :manner (c18-6 / hope-01))
                    :mode imperative))

# ::snt dude do we need to plan for you to LA tomorrow night if the game goes as planned? Asking for .
# ::tokens ["dude", "do", "we", "need", "to", "plan", "for", "you", "to", "LA", "tomorrow", "night", "if", "the", "game", "goes", "as", "planned", "?", "Asking", "for", "."]
# ::lemmas ["dude", "do", "we", "need", "to", "plan", "for", "you", "to", "LA", "tomorrow", "night", "if", "the", "game", "go", "as", "plan", "?", "ask", "for", "."]
(c19-6 / multi-sentence
       :snt1 (c19-13 / ask-01
                     :ARG0 (c19-2 / i)
                     :ARG1 (c19-9 / need-01
                                  :ARG0 (c19-1 / we)
                                  :ARG1 (c19-3 / plan-01
                                               :ARG0 c19-1
                                               :ARG1 (c19-16 / go-02
                                                             :ARG0 (c19-14 / dude)
                                                             :ARG4 (c19-10 / city
                                                                           :name (c19-12 / name
                                                                                         :op1 "LA"))
                                                             :time (c19-0 / date-entity
                                                                          :dayperiod (c19-11 / night)
                                                                          :mod (c19-4 / tomorrow))
                                                             :condition (c19-7 / go-06
                                                                               :ARG1 (c19-5 / game)
                                                                               :ARG1-of (c19-15 / plan-01))))
                                  :polarity (c19-8 / amr-unknown))
                     :snt2 c19-13
                     :ARG0 c19-14))

# ::snt if master chief is on the cover then yes
# ::tokens ["if", "master", "chief", "is", "on", "the", "cover", "then", "yes"]
# ::lemmas ["if", "master", "chief", "be", "on", "the", "cover", "then", "yes"]
(c21-1 / yes
       :condition (c21-3 / cover-03
                         :ARG1 (c21-2 / person
                                      :name (c21-0 / name
                                                   :op1 "Master"
                                                   :op2 "Chief"))))

# ::snt Follow it up with a tall cold glass of put words in a CEO's mouth?
# ::tokens ["Follow", "it", "up", "with", "a", "tall", "cold", "glass", "of", "put", "words", "in", "a", "CEO", "'s", "mouth", "?"]
# ::lemmas ["follow", "it", "up", "with", "a", "tall", "cold", "glass", "of", "put", "word", "in", "a", "CEO", "'s", "mouth", "?"]
(c22-11 / follow-up-03
        :polarity (c22-10 / amr-unknown)
        :ARG0 (c22-8 / you)
        :ARG1 (c22-1 / it)
        :ARG2 (c22-13 / glass
                      :ARG1-of (c22-7 / cold-01)
                      :mod (c22-3 / tall)
                      :consist-of (c22-0 / word)
                      :location (c22-5 / mouth
                                       :part-of (c22-2 / person
                                                       :ARG0-of (c22-9 / have-org-role-91
                                                                       :ARG2 (c22-4 / officer
                                                                                    :mod (c22-6 / chief)
                                                                                    :mod (c22-12 / executive)))))))

# ::snt just like the Mountain Dew flavoured Twisties I had in Japan recently lol
# ::tokens ["just", "like", "the", "Mountain", "Dew", "flavoured", "Twisties", "I", "had", "in", "Japan", "recently", "lol"]
# ::lemmas ["just", "like", "the", "Mountain", "Dew", "flavoured", "twistie", "i", "have", "in", "Japan", "recently", "lol"]
(c23-12 / resemble-01
        :ARG2 (c23-3 / thing
                     :name (c23-5 / name
                                  :op1 "Twisties")
                     :ARG1-of (c23-13 / flavor-01
                                      :ARG2 (c23-1 / product
                                                   :name (c23-11 / name
                                                                 :op1 "Mountain"
                                                                 :op2 "Dew")))
                     :ARG1-of (c23-9 / have-03
                                     :ARG0 (c23-0 / i)
                                     :location (c23-6 / country
                                                      :name (c23-7 / name
                                                                   :op1 "Japan"))
                                     :time (c23-2 / recent))
                     :ARG2-of (c23-4 / laugh-01
                                     :ARG0 c23-0
                                     :manner (c23-8 / loud)
                                     :mode expressive))
        :mod (c23-10 / just))

# ::snt Thanks for the slick wallpaper.
# ::tokens ["Thanks", "for", "the", "slick", "wallpaper", "."]
# ::lemmas ["thank", "for", "the", "slick", "wallpaper", "."]
(c24-1 / thank-01
       :ARG1 (c24-2 / you)
       :ARG2 (c24-0 / wallpaper
                    :mod (c24-3 / slick)))

# ::snt yes I'd try it
# ::tokens ["yes", "I", "'d", "try", "it"]
# ::lemmas ["yes", "i", "would", "try", "it"]
(c25-0 / try-01
       :ARG0 (c25-1 / i)
       :ARG1 (c25-2 / it))

# ::snt Uh, that's disgusting if you ask me...
# ::tokens ["Uh", ",", "that", "'s", "disgusting", "if", "you", "ask", "me", "..."]
# ::lemmas ["uh", ",", "that", "be", "disgusting", "if", "you", "ask", "i", "..."]
(c26-4 / disgust-01
       :ARG0 (c26-3 / ask-01
                    :ARG0 (c26-2 / you)
                    :ARG2 (c26-0 / i))
       :mod (c26-1 / uh
                   :mode expressive))

# ::snt ?
# ::tokens ["?"]
# ::lemmas ["?"]
(c27-0 / request-confirmation-91)

# ::snt I almost did did when I imagined the taste/texture combo...
# ::tokens ["I", "almost", "did", "did", "when", "I", "imagined", "the", "taste", "/", "texture", "combo", "..."]
# ::lemmas ["i", "almost", "do", "do", "when", "i", "imagine", "the", "taste", "/", "texture", "combo", "..."]
(c28-6 / do-02
       :ARG0 (c28-0 / i)
       :mod (c28-5 / almost)
       :time (c28-4 / imagine-01
                    :ARG0 c28-0
                    :ARG1 (c28-3 / combo
                                 :mod (c28-1 / taste)
                                 :mod (c28-2 / texture))))

# ::snt not my pic, but Yea...
# ::tokens ["not", "my", "pic", ",", "but", "Yea", "..."]
# ::lemmas ["not", "my", "pic", ",", "but", "yea", "..."]
(c29-3 / contrast-01
       :ARG1 (c29-2 / picture
                    :poss (c29-1 / i)
                    :polarity -)
       :ARG2 (c29-0 / yea))

# ::snt NO
# ::tokens ["NO"]
# ::lemmas ["no"]
(c31-0 / no
       :mode expressive)

# ::snt no
# ::tokens ["no"]
# ::lemmas ["no"]
(c32-0 / no)

# ::snt shit was gucci
# ::tokens ["shit", "was", "gucci"]
# ::lemmas ["shit", "be", "gucci"]
(c33-1 / gucci
       :domain (c33-0 / shit))

# ::snt SHIT WAS FIRE
# ::tokens ["SHIT", "WAS", "FIRE"]
# ::lemmas ["SHIT", "WAS", "FIRE"]
(c34-1 / fire-04
       :ARG1 (c34-0 / shit))

# ::snt nope
# ::tokens ["nope"]
# ::lemmas ["nope"]
(c37-0 / nope)

# ::snt No RT : Pepsi is currently taste-testing Doritos flavored Mountrain Dew. Would you try it?
# ::tokens ["No", "RT", ":", "Pepsi", "is", "currently", "taste", "-", "testing", "Doritos", "flavored", "Mountrain", "Dew", ".", "Would", "you", "try", "it", "?"]
# ::lemmas ["no", "RT", ":", "Pepsi", "be", "currently", "taste", "-", "testing", "Doritos", "flavor", "Mountrain", "Dew", ".", "would", "you", "try", "it", "?"]
(c38-6 / multi-sentence
       :snt1 (c38-1 / publication
                    :name (c38-13 / name
                                  :op1 "No"
                                  :op2 "RT"))
       :snt2 (c38-3 / test-01
                    :ARG0 (c38-8 / company
                                 :name (c38-12 / name
                                               :op1 "Pepsi"))
                    :ARG1 (c38-16 / product
                                  :name (c38-9 / name
                                               :op1 "Doritos")
                                  :ARG1-of (c38-15 / flavor-01
                                                   :ARG2 (c38-10 / product
                                                                 :name (c38-14 / name
                                                                               :op1 "Mountrain"
                                                                               :op2 "Dew"))))
                    :time (c38-7 / current)
                    :mod (c38-4 / taste))
       :snt3 (c38-2 / try-01
                    :ARG0 (c38-11 / you)
                    :ARG1 (c38-0 / it)
                    :polarity (c38-5 / amr-unknown)))

# ::snt : Pepsi is currently taste-testing Doritos flavored Mountrain Dew. Would you try it?" No. Yuck.
# ::tokens [":", "Pepsi", "is", "currently", "taste", "-", "testing", "Doritos", "flavored", "Mountrain", "Dew", ".", "Would", "you", "try", "it", "?", "\"", "No", ".", "Yuck", "."]
# ::lemmas [":", "Pepsi", "be", "currently", "taste", "-", "testing", "Doritos", "flavor", "Mountrain", "Dew", ".", "would", "you", "try", "it", "?", "\"", "no", ".", "Yuck", "."]
(c39-7 / multi-sentence
       :snt1 (c39-4 / test-01
                    :ARG0 (c39-9 / company
                                 :name (c39-13 / name
                                               :op1 "Pepsi"))
                    :ARG1 (c39-2 / product
                                 :name (c39-12 / name
                                               :op1 "Doritos")
                                 :ARG1-of (c39-15 / flavor-01
                                                  :ARG2 (c39-14 / product
                                                                :name (c39-10 / name
                                                                              :op1 "Mountrain"
                                                                              :op2 "Dew"))))
                    :time (c39-8 / current)
                    :mod (c39-5 / taste))
       :snt2 (c39-3 / try-01
                    :ARG0 (c39-11 / you)
                    :ARG1 (c39-1 / it)
                    :polarity (c39-6 / amr-unknown))
       :snt3 (c39-0 / yuck
                    :mode expressive))
