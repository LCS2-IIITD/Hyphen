# ::snt The guys at already made their own version!
# ::tokens ["The", "guys", "at", "already", "made", "their", "own", "version", "!"]
# ::lemmas ["the", "guy", "at", "already", "make", "their", "own", "version", "!"]
(c1-1 / make-01
      :ARG0 (c1-4 / guy
                  :location (c1-0 / there))
      :ARG1 (c1-3 / version
                  :poss c1-4)
      :time (c1-2 / already))

# ::snt This is scary RT Just your Monday reminder that Doritos-flavored Mountain Dew exists
# ::tokens ["This", "is", "scary", "RT", "Just", "your", "Monday", "reminder", "that", "Doritos", "-", "flavored", "Mountain", "Dew", "exists"]
# ::lemmas ["this", "be", "scary", "RT", "Just", "your", "Monday", "reminder", "that", "Doritos", "-", "flavor", "Mountain", "Dew", "exist"]
(c2-4 / multi-sentence
      :snt1 (c2-0 / scary-03
                  :ARG0 (c2-3 / this))
      :snt2 (c2-9 / remind-01
                  :ARG0 (c2-6 / you)
                  :ARG1 (c2-11 / exist-01
                               :ARG1 (c2-2 / product
                                           :name (c2-5 / name
                                                       :op1 "Mountain"
                                                       :op2 "Dew")
                                           :ARG1-of (c2-12 / favor-01
                                                           :name (c2-8 / name
                                                                       :op1 "Doritos")
                                                           :ARG2 c2-2))))
      :ARG2 c2-6
      :time (c2-10 / date-entity
                   :weekday (c2-1 / monday))
      :mod (c2-7 / just))

# ::snt I think said it best: "Ew"
# ::tokens ["I", "think", "said", "it", "best", ":", "\"", "Ew", "\""]
# ::lemmas ["i", "think", "say", "it", "well", ":", "\"", "ew", "\""]
(c3-2 / think-01
      :ARG0 (c3-1 / i)
      :ARG1 (c3-0 / say-01
                  :ARG1 (c3-5 / ew)
                  :ARG1-of (c3-4 / have-degree-91
                                 :ARG2 (c3-6 / good-02
                                             :ARG1 c3-0)
                                 :ARG3 (c3-3 / most))))

# ::snt . ew no thanks
# ::tokens [".", "ew", "no", "thanks"]
# ::lemmas [".", "ew", "no", "thank"]
(c4-1 / have-concession-91
      :ARG1 (c4-0 / no)
      :ARG2 (c4-2 / ew
                  :mode expressive))

# ::snt Hurk! Just your Monday reminder that Doritos-flavored Mountain Dew exists.
# ::tokens ["Hurk", "!", "Just", "your", "Monday", "reminder", "that", "Doritos", "-", "flavored", "Mountain", "Dew", "exists", "."]
# ::lemmas ["Hurk", "!", "just", "your", "Monday", "reminder", "that", "Doritos", "-", "flavor", "Mountain", "Dew", "exist", "."]
(c5-2 / multi-sentence
      :snt1 (c5-4 / hurt-01
                  :mode expressive)
      :snt2 (c5-8 / remind-01
                  :ARG0 (c5-5 / you)
                  :ARG1 (c5-10 / exist-01
                               :ARG1 (c5-1 / product
                                           :name (c5-3 / name
                                                       :op1 "Mountain"
                                                       :op2 "Dew")
                                           :ARG1-of (c5-11 / favor-01
                                                           :name (c5-7 / name
                                                                       :op1 "Doritos")
                                                           :ARG2 c5-1))))
      :time (c5-9 / date-entity
                  :weekday (c5-0 / monday))
      :mod (c5-6 / just)
      :poss c5-5)

# ::snt we did this to ourselves.
# ::tokens ["we", "did", "this", "to", "ourselves", "."]
# ::lemmas ["we", "do", "this", "to", "ourselves", "."]
(c6-2 / do-02
      :ARG0 (c6-0 / we)
      :ARG1 (c6-1 / this)
      :ARG2 c6-0)
