# ::snt bro what? Even if true the acidity of those damn sodas would eat that shit up.
# ::tokens ["bro", "what", "?", "Even", "if", "true", "the", "acidity", "of", "those", "damn", "sodas", "would", "eat", "that", "shit", "up", "."]
# ::lemmas ["bro", "what", "?", "even", "if", "true", "the", "acidity", "of", "those", "damn", "soda", "would", "eat", "that", "shit", "up", "."]
(c1-4 / multi-sentence
      :snt1 (c1-7 / amr-unknown)
      :snt2 (c1-6 / have-concession-91
                  :ARG1 (c1-9 / eat-up-02
                              :ARG0 (c1-0 / sodam
                                          :mod (c1-1 / that)
                                          :mod (c1-8 / damn))
                              :ARG1 (c1-5 / acidity
                                          :poss c1-0))
                  :ARG2 (c1-2 / even-if
                              :op1 (c1-3 / true-01
                                         :ARG1 c1-5))))

# ::snt I am pretty sure that's the opening scene to the incredible hulk movie with Edward Norton
# ::tokens ["I", "am", "pretty", "sure", "that", "'s", "the", "opening", "scene", "to", "the", "incredible", "hulk", "movie", "with", "Edward", "Norton"]
# ::lemmas ["i", "be", "pretty", "sure", "that", "be", "the", "opening", "scene", "to", "the", "incredible", "hulk", "movie", "with", "Edward", "Norton"]
(c5-0 / sure-02
      :ARG0 (c5-2 / i)
      :ARG1 (c5-1 / scene
                  :ARG0-of (c5-4 / open-02
                                 :ARG1 (c5-6 / movie
                                             :mod (c5-7 / hulk)
                                             :ARG1-of (c5-8 / incredible-03)
                                             :accompanier (c5-3 / person
                                                                :name (c5-9 / name
                                                                            :op1 "Edward"
                                                                            :op2 "Norton"))))
                  :domain (c5-5 / that))
      :degree (c5-10 / pretty))

# ::snt irresponsible retweet. Dickhead!
# ::tokens ["irresponsible", "retweet", ".", "Dickhead", "!"]
# ::lemmas ["irresponsible", "retweet", ".", "dickhead", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-1 / thing
                  :ARG1-of (c7-3 / retweet-01)
                  :ARG0-of (c7-0 / responsible-01
                                 :polarity -))
      :snt2 (c7-4 / dickhead
                  :mode expressive))

# ::snt People Forget!
# ::tokens ["People", "Forget", "!"]
# ::lemmas ["people", "forget", "!"]
(c9-1 / forget-01
      :ARG0 (c9-0 / person)
      :mode expressive)

# ::snt agreed, I'm sure only a few Pepsi drinks contain AIDS but it's definitely not worth the risk
# ::tokens ["agreed", ",", "I", "'m", "sure", "only", "a", "few", "Pepsi", "drinks", "contain", "AIDS", "but", "it", "'s", "definitely", "not", "worth", "the", "risk"]
# ::lemmas ["agree", ",", "i", "be", "sure", "only", "a", "few", "Pepsi", "drink", "contain", "AIDS", "but", "it", "be", "definitely", "not", "worth", "the", "risk"]
(c11-13 / agree-01
        :ARG0 (c11-3 / i)
        :ARG1 (c11-9 / contrast-01
                     :ARG1 (c11-0 / sure-02
                                  :ARG0 c11-3
                                  :ARG1 (c11-8 / contain-01
                                               :ARG0 (c11-5 / thing
                                                            :ARG1-of (c11-14 / drink-01
                                                                             :ARG0 (c11-10 / company
                                                                                           :name (c11-11 / name
                                                                                                         :op1 "Pepsi")))
                                                            :quant (c11-15 / few
                                                                           :mod (c11-6 / only)))
                                               :ARG1 (c11-1 / disease
                                                            :name (c11-12 / name
                                                                          :op1 "AIDS"))))
                     :ARG2 (c11-2 / worth-02
                                  :ARG1 c11-8
                                  :ARG2 (c11-7 / risk-01)
                                  :mod (c11-4 / definite)
                                  :polarity -)))

# ::snt I'm obligated
# ::tokens ["I", "'m", "obligated"]
# ::lemmas ["i", "be", "obligate"]
(c13-0 / obligate-01
       :ARG1 (c13-1 / i))

# ::snt eddie my man...........is pepsi soda safe to drink again
# ::tokens ["eddie", "my", "man", "...........", "is", "pepsi", "soda", "safe", "to", "drink", "again"]
# ::lemmas ["eddie", "my", "man", "...........", "be", "pepsi", "soda", "safe", "to", "drink", "again"]
(c14-0 / say-01
       :ARG1 (c14-1 / safe-01
                    :ARG1 (c14-5 / soda
                                 :mod (c14-3 / pepsi))
                    :mod (c14-8 / again))
       :ARG2 (c14-9 / person
                    :name (c14-6 / name
                                 :op1 "eddie")
                    :ARG0-of (c14-7 / have-rel-role-91
                                    :ARG1 (c14-2 / i)
                                    :ARG2 (c14-4 / man))))

# ::snt I don't drink Pepsi cause it sucks. War
# ::tokens ["I", "do", "n't", "drink", "Pepsi", "cause", "it", "sucks", ".", "War"]
# ::lemmas ["i", "do", "not", "drink", "Pepsi", "cause", "it", "suck", ".", "war"]
(c15-3 / multi-sentence
       :snt1 (c15-7 / drink-01
                    :ARG0 (c15-2 / i)
                    :ARG1 (c15-5 / company
                                 :name (c15-6 / name
                                              :op1 "Pepsi"))
                    :ARG1-of (c15-4 / cause-01
                                    :ARG0 (c15-0 / suck-03
                                                 :ARG0 c15-5))
                    :polarity -)
       :snt2 (c15-1 / war-01))

# ::snt That was so ...
# ::tokens ["That", "was", "so", "..."]
# ::lemmas ["that", "be", "so", "..."]
(c16-0 / so
       :domain (c16-1 / that))

# ::snt how even did you even find this even
# ::tokens ["how", "even", "did", "you", "even", "find", "this", "even"]
# ::lemmas ["how", "even", "do", "you", "even", "find", "this", "even"]
(c17-6 / find-01
       :ARG0 (c17-2 / you)
       :ARG1 (c17-0 / this
                    :mod (c17-5 / even))
       :mod (c17-1 / even)
       :manner (c17-4 / amr-unknown)
       :mod (c17-3 / even))

# ::snt Lmaooo I been searching his name with random words for the last hour
# ::tokens ["Lmaooo", "I", "been", "searching", "his", "name", "with", "random", "words", "for", "the", "last", "hour"]
# ::lemmas ["Lmaooo", "i", "been", "search", "his", "name", "with", "random", "word", "for", "the", "last", "hour"]
(c18-0 / search-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-10 / name
                     :poss (c18-9 / he))
       :ARG2 (c18-1 / word
                    :mod (c18-5 / random))
       :duration (c18-6 / temporal-quantity
                        :unit (c18-3 / hour)
                        :mod (c18-4 / last)
                        :quant 1)
       :mod (c18-8 / laugh-01
                   :ARG0 c18-2
                   :manner (c18-7 / loud)
                   :mode expressive))

# ::snt bad on my part XD
# ::tokens ["bad", "on", "my", "part", "XD"]
# ::lemmas ["bad", "on", "my", "part", "XD"]
(c19-0 / say-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-1 / bad-02
                    :ARG1 (c19-5 / event
                                 :mod c19-2))
       :ARG2 (c19-3 / person
                    :name (c19-4 / name
                                 :op1 " XD")))

# ::snt rip
# ::tokens ["rip"]
# ::lemmas ["rip"]
(c20-0 / rip)

# ::snt WHAT LMAOOOO
# ::tokens ["WHAT", "LMAOOOO"]
# ::lemmas ["what", "lmaoooo"]
(c21-0 / laugh-01
       :ARG0 (c21-2 / i)
       :manner (c21-1 / loud)
       :mode expressive)

# ::snt Maybe this is what the trainers at Alabama had to tell him in order to get him to stop drinking sugary soda
# ::tokens ["Maybe", "this", "is", "what", "the", "trainers", "at", "Alabama", "had", "to", "tell", "him", "in", "order", "to", "get", "him", "to", "stop", "drinking", "sugary", "soda"]
# ::lemmas ["maybe", "this", "be", "what", "the", "trainer", "at", "Alabama", "have", "to", "tell", "he", "in", "order", "to", "get", "he", "to", "stop", "drink", "sugary", "soda"]
(c22-2 / possible-01
       :ARG1 (c22-4 / thing
                    :ARG1-of (c22-5 / tell-01
                                    :ARG0 (c22-13 / person
                                                  :ARG0-of (c22-3 / train-01)
                                                  :location (c22-0 / state
                                                                   :name (c22-11 / name
                                                                                 :op1 "Alabama")))
                                    :ARG2 (c22-9 / he)
                                    :ARG2-of (c22-6 / obligate-01)
                                    :purpose (c22-10 / get-04
                                                     :ARG0 c22-13
                                                     :ARG1 (c22-1 / stop-01
                                                                  :ARG0 c22-9
                                                                  :ARG1 (c22-12 / drink-01
                                                                                :ARG0 c22-9
                                                                                :ARG1 (c22-7 / soda
                                                                                             :mod (c22-14 / sugary))))))
                    :domain (c22-8 / this)))

# ::snt i just drank a whole bottle... noice
# ::tokens ["i", "just", "drank", "a", "whole", "bottle", "...", "noice"]
# ::lemmas ["i", "just", "drink", "a", "whole", "bottle", "...", "noice"]
(c23-5 / drink-01
       :ARG0 (c23-0 / i)
       :ARG1 (c23-1 / bottle
                    :mod (c23-4 / whole))
       :mod (c23-3 / just)
       :mod (c23-2 / noice))

# ::snt does that make it better?
# ::tokens ["does", "that", "make", "it", "better", "?"]
# ::lemmas ["do", "that", "make", "it", "well", "?"]
(c25-2 / make-02
       :polarity (c25-4 / amr-unknown)
       :ARG0 (c25-1 / that)
       :ARG1 (c25-3 / have-degree-91
                    :ARG1 (c25-0 / it)
                    :ARG2 (c25-6 / good-02
                                 :ARG1 c25-0)
                    :ARG3 (c25-5 / more)))

# ::snt what's "AIDs"?
# ::tokens ["what", "'s", "\"", "AIDs", "\"", "?"]
# ::lemmas ["what", "be", "\"", "aid", "\"", "?"]
(c26-1 / disease
       :name (c26-0 / name
                    :op1 "AIDs")
       :domain (c26-2 / amr-unknown))

# ::snt good looking out bro. Just poured out all my Pepsi soda
# ::tokens ["good", "looking", "out", "bro", ".", "Just", "poured", "out", "all", "my", "Pepsi", "soda"]
# ::lemmas ["good", "look", "out", "bro", ".", "just", "pour", "out", "all", "my", "Pepsi", "soda"]
(c27-5 / multi-sentence
       :snt1 (c27-3 / look-out-08
                    :ARG0 (c27-7 / you)
                    :ARG1-of (c27-10 / good-02)
                    :mode imperative)
       :snt2 (c27-2 / pour-01
                    :ARG0 (c27-1 / i)
                    :ARG1 (c27-0 / soda
                                 :mod (c27-6 / company
                                             :name (c27-9 / name
                                                          :op1 "Pepsi"))
                                 :mod (c27-4 / all)
                                 :poss c27-1)
                    :mod (c27-8 / just)))

# ::snt HAHAHAHAHHAHAHAHHAHAHUHASDFHASDUFIHASDUKFHJADSJKFHADS;KFHJ
# ::tokens ["HAHAHAHAHHAHAHAHHAHAHUHASDFHASDUFIHASDUKFHJADSJKFHADS;KFHJ"]
# ::lemmas ["HAHAHAHAHHAHAHAHHAHAHUHASDFHASDUFIHASDUKFHJADSJKFHADS;KFHJ"]
(c28-0 / laugh-01
       :mode expressive)

# ::snt LOLOLOL HOLY SHIT
# ::tokens ["LOLOLOL", "HOLY", "SHIT"]
# ::lemmas ["LOLOLOL", "HOLY", "SHIT"]
(c29-1 / shit
       :ARG1-of (c29-0 / laugh-01
                       :manner (c29-2 / loud)
                       :mode expressive)
       :ARG1-of (c29-3 / holiday-01))

# ::snt more for you fatboy?
# ::tokens ["more", "for", "you", "fatboy", "?"]
# ::lemmas ["more", "for", "you", "fatboy", "?"]
(c30-0 / say-01
       :ARG1 (c30-1 / more)
       :ARG2 (c30-4 / fatboy
                    :domain (c30-2 / you))
       :polarity (c30-3 / amr-unknown))

# ::snt drink this quickly.....
# ::tokens ["drink", "this", "quickly", "....."]
# ::lemmas ["drink", "this", "quickly", "....."]
(c31-1 / drink-01
       :ARG0 (c31-2 / you)
       :ARG1 (c31-0 / this)
       :ARG1-of (c31-3 / quick-02)
       :mode imperative)

# ::snt wtf lmao
# ::tokens ["wtf", "lmao"]
# ::lemmas ["wtf", "lmao"]
(c32-0 / laugh-01
       :ARG0 (c32-2 / i)
       :manner (c32-1 / loud)
       :mod (c32-3 / fuck
                   :mode expressive)
       :mode expressive)

# ::snt LMAO
# ::tokens ["LMAO"]
# ::lemmas ["lmao"]
(c33-0 / laugh-01
       :ARG0 (c33-3 / i
                    :part (c33-2 / ass))
       :ARG3 (c33-1 / off
                    :op1 c33-2))

# ::snt this is dated /14/2011
# ::tokens ["this", "is", "dated", "/14/2011"]
# ::lemmas ["this", "be", "date", "/14/2011"]
(c34-1 / date-entity
       :ARG1 (c34-0 / this)
       :year 2011
       :month 2
       :day 14)
