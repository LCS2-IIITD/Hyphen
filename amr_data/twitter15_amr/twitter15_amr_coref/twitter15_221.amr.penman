# ::snt : R.I.P to the driver that died with Paul Walker that no one cares about because he wasn't famous.
# ::tokens [":", "R.I.P", "to", "the", "driver", "that", "died", "with", "Paul", "Walker", "that", "no", "one", "cares", "about", "because", "he", "was", "n't", "famous", "."]
# ::lemmas [":", "R.I.P", "to", "the", "driver", "that", "die", "with", "Paul", "Walker", "that", "no", "one", "care", "about", "because", "he", "be", "not", "famous", "."]
(c1-8 / apologize-01
      :ARG1 (c1-2 / person
                  :name (c1-4 / name
                              :op1 "R.I.P."))
      :ARG2 (c1-11 / person
                   :ARG0-of (c1-9 / drive-01)
                   :ARG1-of (c1-0 / die-01
                                  :accompanier (c1-10 / person
                                                      :name (c1-7 / name
                                                                  :op1 "Paul"
                                                                  :op2 "Walker")))
                   :ARG1-of (c1-5 / care-01
                                  :ARG0 (c1-6 / no-one)
                                  :ARG1-of (c1-3 / cause-01
                                                 :ARG0 (c1-1 / fame-01
                                                             :ARG1 c1-10
                                                             :polarity -)))))

# ::snt : R.I.P to the driver that died with Paul Walker that no one cares about because he wasn't famous.
# ::tokens [":", "R.I.P", "to", "the", "driver", "that", "died", "with", "Paul", "Walker", "that", "no", "one", "cares", "about", "because", "he", "was", "n't", "famous", "."]
# ::lemmas [":", "R.I.P", "to", "the", "driver", "that", "die", "with", "Paul", "Walker", "that", "no", "one", "care", "about", "because", "he", "be", "not", "famous", "."]
(c2-8 / apologize-01
      :ARG1 (c2-2 / person
                  :name (c2-4 / name
                              :op1 "R.I.P."))
      :ARG2 (c2-11 / person
                   :ARG0-of (c2-9 / drive-01)
                   :ARG1-of (c2-0 / die-01
                                  :accompanier (c2-10 / person
                                                      :name (c2-7 / name
                                                                  :op1 "Paul"
                                                                  :op2 "Walker")))
                   :ARG1-of (c2-5 / care-01
                                  :ARG0 (c2-6 / no-one)
                                  :ARG1-of (c2-3 / cause-01
                                                 :ARG0 (c2-1 / fame-01
                                                             :ARG1 c2-10
                                                             :polarity -)))))

# ::snt fuck the driver!
# ::tokens ["fuck", "the", "driver", "!"]
# ::lemmas ["fuck", "the", "driver", "!"]
(c3-3 / fuck-01
      :ARG0 (c3-2 / you)
      :ARG1 (c3-0 / person
                  :ARG0-of (c3-1 / drive-01))
      :mode imperative)
