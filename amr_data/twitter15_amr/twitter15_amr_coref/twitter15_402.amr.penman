# ::snt If Apple did this on purpose just for the punny scandal name I'd be okay with it
# ::tokens ["If", "Apple", "did", "this", "on", "purpose", "just", "for", "the", "punny", "scandal", "name", "I", "'d", "be", "okay", "with", "it"]
# ::lemmas ["if", "Apple", "do", "this", "on", "purpose", "just", "for", "the", "punny", "scandal", "name", "i", "would", "be", "okay", "with", "it"]
(c1-3 / okay-01
      :ARG0 (c1-1 / i)
      :ARG1 (c1-9 / do-02
                  :ARG0 (c1-5 / company
                              :name (c1-8 / name
                                          :op1 "Apple"))
                  :ARG1 (c1-4 / this)
                  :purpose c1-8
                  :mod (c1-0 / scandal
                             :mod (c1-2 / punny))
                  :mod (c1-6 / just))
      :ARG1-of (c1-7 / have-purpose-91)
      :condition c1-9)

# ::snt Bad news for hipsters. RT : Apple fans' tight pants are bending the iPhone Plus
# ::tokens ["Bad", "news", "for", "hipsters", ".", "RT", ":", "Apple", "fans", "'", "tight", "pants", "are", "bending", "the", "iPhone", "Plus"]
# ::lemmas ["bad", "news", "for", "hipster", ".", "RT", ":", "Apple", "fan", "'", "tight", "pant", "be", "bend", "the", "iPhone", "Plus"]
(c2-3 / multi-sentence
      :snt1 (c2-9 / news
                  :ARG1-of (c2-0 / bad-04
                                 :ARG2 (c2-7 / hipster)))
      :snt2 (c2-6 / bend-01
                  :ARG0 (c2-1 / pant
                              :ARG1-of (c2-2 / tight-05)
                              :poss (c2-13 / fan
                                           :mod (c2-4 / company
                                                      :name (c2-8 / name
                                                                  :op1 "Apple"))))
                  :ARG1 (c2-12 / product
                               :name (c2-5 / name
                                           :op1 "iPhone"
                                           :op2 "Plus")))
      :snt3 (c2-11 / publication
                   :name (c2-10 / name
                                :op1 "RT")))

# ::snt that made my day
# ::tokens ["that", "made", "my", "day"]
# ::lemmas ["that", "make", "my", "day"]
(c3-2 / make-02
      :ARG0 (c3-0 / that)
      :ARG1 (c3-1 / day
                  :poss (c3-3 / i)))
