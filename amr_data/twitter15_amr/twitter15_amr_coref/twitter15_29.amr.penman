# ::snt you're nobody 'til somebody kills you
# ::tokens ["you", "'re", "nobody", "'", "til", "somebody", "kills", "you"]
# ::lemmas ["you", "be", "nobody", "'", "til", "somebody", "kill", "you"]
(c1-3 / nobody
      :domain (c1-2 / you)
      :time (c1-1 / until
                  :op1 (c1-4 / kill-01
                             :ARG0 (c1-0 / somebody)
                             :ARG1 c1-2)))

# ::snt I was legit too sad about this! Thank goodness it's not true!
# ::tokens ["I", "was", "legit", "too", "sad", "about", "this", "!", "Thank", "goodness", "it", "'s", "not", "true", "!"]
# ::lemmas ["i", "be", "legit", "too", "sad", "about", "this", "!", "thank", "goodness", "it", "be", "not", "true", "!"]
(c2-6 / multi-sentence
      :snt1 (c2-0 / sad-02
                  :ARG0 (c2-4 / this)
                  :ARG1 (c2-1 / i)
                  :ARG1-of (c2-3 / legitimate-02)
                  :ARG2-of (c2-8 / have-degree-91
                                 :ARG1 c2-1
                                 :ARG3 (c2-5 / too)))
      :snt2 (c2-2 / thank-01
                  :ARG0 c2-1)
      :ARG1 (c2-10 / goodness)
      :ARG2 (c2-7 / true-01
                  :ARG1 (c2-9 / it)
                  :polarity -))

# ::snt Papi
# ::tokens ["Papi"]
# ::lemmas ["papi"]
(c3-1 / person
      :name (c3-0 / name
                  :op1 "Papi"))

# ::snt you no that.guy on the news
# ::tokens ["you", "no", "that.guy", "on", "the", "news"]
# ::lemmas ["you", "no", "that.guy", "on", "the", "news"]
(c4-1 / multi-sentence
      :snt1 (c4-0 / that
                  :domain (c4-2 / you)
                  :polarity -)
      :snt2 (c4-4 / guy
                  :location (c4-3 / news)))

# ::snt awww
# ::tokens ["awww"]
# ::lemmas ["awww"]
(c5-0 / aw
      :mode expressive)

# ::snt rale Fluffy! U know u made it big now that there's a fake news site writing about ur death
# ::tokens ["rale", "Fluffy", "!", "U", "know", "u", "made", "it", "big", "now", "that", "there", "'s", "a", "fake", "news", "site", "writing", "about", "ur", "death"]
# ::lemmas ["rale", "Fluffy", "!", "u", "know", "u", "make", "it", "big", "now", "that", "there", "be", "a", "fake", "news", "site", "write", "about", "ur", "death"]
(c6-1 / say-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-13 / know-01
                   :ARG0 c6-3
                   :ARG1 (c6-7 / make-it-14
                               :ARG0 (c6-5 / person
                                           :name (c6-12 / name
                                                        :op1 "Rale"
                                                        :op2 "Fluuffy"))
                               :ARG1 (c6-10 / it)
                               :mod (c6-4 / big)
                               :time (c6-11 / now)
                               :ARG1-of (c6-8 / cause-01
                                              :ARG0 (c6-6 / site
                                                          :mod (c6-9 / news
                                                                     :ARG1-of (c6-14 / fake-02))
                                                          :ARG0-of (c6-2 / write-01
                                                                         :ARG1 (c6-0 / die-01
                                                                                     :ARG1 c6-5))))))
      :ARG2 c6-5)

# ::snt I officially trust TMZ over these guys.
# ::tokens ["I", "officially", "trust", "TMZ", "over", "these", "guys", "."]
# ::lemmas ["i", "officially", "trust", "TMZ", "over", "these", "guy", "."]
(c7-1 / trust-02
      :ARG0 (c7-0 / i)
      :ARG1 (c7-4 / company
                  :name (c7-5 / name
                              :op1 "TMZ"))
      :ARG2 (c7-6 / guy
                  :mod (c7-2 / this))
      :mod (c7-3 / official))

# ::snt I had to go to a trusted new source see if it was true glad they didn't have it there, stay breathing bro
# ::tokens ["I", "had", "to", "go", "to", "a", "trusted", "new", "source", "see", "if", "it", "was", "true", "glad", "they", "did", "n't", "have", "it", "there", ",", "stay", "breathing", "bro"]
# ::lemmas ["i", "have", "to", "go", "to", "a", "trusted", "new", "source", "see", "if", "it", "be", "true", "glad", "they", "do", "not", "have", "it", "there", ",", "stay", "breathing", "bro"]
(c9-8 / multi-sentence
      :snt1 (c9-5 / obligate-01
                  :ARG1 (c9-1 / i)
                  :ARG2 (c9-16 / go-01
                               :ARG1 c9-1
                               :ARG4 (c9-0 / source
                                           :ARG1-of (c9-15 / new-01)
                                           :ARG1-of (c9-6 / trust-01))
                               :purpose (c9-2 / see-01
                                              :ARG0 c9-1
                                              :ARG1 (c9-7 / truth-value
                                                          :polarity-of (c9-4 / true-01
                                                                             :ARG1 (c9-14 / it))))))
      :snt2 (c9-9 / glad-02
                  :ARG0 (c9-12 / have-03
                               :ARG0 c9-0
                               :ARG1 c9-14
                               :location (c9-11 / there)
                               :polarity -)
                  :ARG1 c9-1)
      :snt3 (c9-10 / stay-01
                   :ARG1 (c9-13 / you)
                   :ARG3 (c9-3 / breathe-01
                               :ARG0 c9-13)
                   :mode imperative))

# ::snt whaaaaat? Dude that is awsome zombies are real huh
# ::tokens ["whaaaaat", "?", "Dude", "that", "is", "awsome", "zombies", "are", "real", "huh"]
# ::lemmas ["whaaaaat", "?", "dude", "that", "be", "awsome", "zombie", "be", "real", "huh"]
(c10-4 / multi-sentence
       :snt1 (c10-5 / whaaat
                    :mode expressive)
       :snt2 (c10-2 / real-04
                    :ARG1 (c10-0 / zombie
                                 :mod (c10-3 / awsome)
                                 :mod (c10-6 / dude))
                    :ARG1-of (c10-1 / request-confirmation-91)))

# ::snt there's been a murder in Savannah
# ::tokens ["there", "'s", "been", "a", "murder", "in", "Savannah"]
# ::lemmas ["there", "be", "be", "a", "murder", "in", "Savannah"]
(c11-1 / murder-01
       :location (c11-2 / city
                        :name (c11-0 / name
                                     :op1 "Savannah")))

# ::snt I went on an adventure for the tweet and found this xD
# ::tokens ["I", "went", "on", "an", "adventure", "for", "the", "tweet", "and", "found", "this", "xD"]
# ::lemmas ["i", "go", "on", "an", "adventure", "for", "the", "tweet", "and", "find", "this", "xd"]
(c12-4 / and
       :op1 (c12-7 / go-02
                   :ARG0 (c12-0 / i)
                   :ARG1 (c12-3 / adventure)
                   :purpose (c12-1 / tweet-01))
       :op2 (c12-5 / find-01
                   :ARG0 c12-0
                   :ARG1 (c12-2 / this))
       :mod (c12-6 / emoticon
                   :value "xD"))

# ::snt hehehe
# ::tokens ["hehehe"]
# ::lemmas ["hehehe"]
(c14-0 / hehe
       :mode expressive)

# ::snt what?
# ::tokens ["what", "?"]
# ::lemmas ["what", "?"]
(c15-0 / amr-unknown)

# ::snt Now you can use this for your shows!
# ::tokens ["Now", "you", "can", "use", "this", "for", "your", "shows", "!"]
# ::lemmas ["now", "you", "can", "use", "this", "for", "your", "show", "!"]
(c16-1 / possible-01
       :ARG1 (c16-3 / use-01
                    :ARG0 (c16-4 / you)
                    :ARG1 (c16-2 / this)
                    :ARG2 (c16-0 / show-04
                                 :ARG0 c16-4))
       :time (c16-5 / now))

# ::snt thank god you are alive fluffy I was about to cry
# ::tokens ["thank", "god", "you", "are", "alive", "fluffy", "I", "was", "about", "to", "cry"]
# ::lemmas ["thank", "god", "you", "be", "alive", "fluffy", "i", "be", "about", "to", "cry"]
(c17-3 / thank-01
       :ARG0 (c17-0 / i)
       :ARG1 (c17-1 / person
                    :name (c17-8 / name
                                 :op1 "God"))
       :ARG2 (c17-2 / live-01
                    :ARG0 (c17-7 / you))
       :mod (c17-9 / fluffy)
       :ARG0-of (c17-6 / cause-01
                       :ARG1 (c17-5 / cry-02
                                    :ARG0 c17-0
                                    :time (c17-4 / about-to))))

# ::snt either the news made a mistake or last nights episode of was onto something...
# ::tokens ["either", "the", "news", "made", "a", "mistake", "or", "last", "nights", "episode", "of", "was", "onto", "something", "..."]
# ::lemmas ["either", "the", "news", "make", "a", "mistake", "or", "last", "nights", "episode", "of", "be", "onto", "something", "..."]
(c18-2 / or
       :op1 (c18-3 / mistake-02
                   :ARG0 (c18-5 / news))
       :op2 (c18-6 / on-to-01
                   :ARG0 (c18-7 / episode
                                :mod (c18-1 / broadcast-program
                                            :name (c18-4 / name
                                                         :op1 "Last"
                                                         :op2 "Night")))
                   :ARG1 (c18-0 / something)))

# ::snt Ur not fooling anyone. It's just the twinkies holding u up now isn't it?
# ::tokens ["Ur", "not", "fooling", "anyone", ".", "It", "'s", "just", "the", "twinkies", "holding", "u", "up", "now", "is", "n't", "it", "?"]
# ::lemmas ["ur", "not", "fool", "anyone", ".", "it", "be", "just", "the", "twinkie", "hold", "u", "up", "now", "be", "not", "it", "?"]
(c19-3 / multi-sentence
       :snt1 (c19-9 / fool-01
                    :ARG0 (c19-5 / you)
                    :ARG1 (c19-8 / anyone)
                    :polarity -)
       :snt2 (c19-6 / hold-up-11
                    :ARG0 (c19-1 / twinkie
                                 :mod (c19-7 / just))
                    :ARG1 (c19-0 / you)
                    :time (c19-4 / now)
                    :ARG1-of (c19-2 / request-confirmation-91)))

# ::snt no manchen enseri
# ::tokens ["no", "manchen", "enseri"]
# ::lemmas ["no", "manchen", "enseri"]
(c20-1 / person
       :name (c20-0 / name
                    :op1 "No"
                    :op2 "Manchen"
                    :op3 "Enseri")
       :polarity -)

# ::snt NO just NO
# ::tokens ["NO", "just", "NO"]
# ::lemmas ["no", "just", "no"]
(c21-0 / no
       :mod (c21-1 / just))
