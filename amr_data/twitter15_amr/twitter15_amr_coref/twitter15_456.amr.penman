# ::snt Simone follow please. Thank you if you did
# ::tokens ["Simone", "follow", "please", ".", "Thank", "you", "if", "you", "did"]
# ::lemmas ["simone", "follow", "please", ".", "thank", "you", "if", "you", "do"]
(c2-3 / multi-sentence
      :snt1 (c2-7 / follow-02
                  :ARG0 (c2-1 / person
                              :name (c2-5 / name
                                          :op1 "Simone"))
                  :mode imperative
                  :polite +)
      :snt2 (c2-2 / thank-01
                  :ARG0 (c2-0 / i)
                  :ARG1 (c2-4 / you)
                  :condition (c2-6 / do-02
                                   :ARG0 c2-4)))

# ::snt Looking forward to the new album. Living/working in NYC need something to help me relax.
# ::tokens ["Looking", "forward", "to", "the", "new", "album", ".", "Living", "/", "working", "in", "NYC", "need", "something", "to", "help", "me", "relax", "."]
# ::lemmas ["look", "forward", "to", "the", "new", "album", ".", "live", "/", "work", "in", "NYC", "need", "something", "to", "help", "i", "relax", "."]
(c3-6 / multi-sentence
      :snt1 (c3-4 / look-forward-03
                  :ARG0 (c3-2 / i)
                  :ARG1 (c3-14 / album
                               :ARG1-of (c3-7 / new-01)))
      :snt2 (c3-12 / need-01
                   :ARG0 (c3-13 / i)
                   :ARG1 (c3-0 / something
                               :ARG0-of (c3-11 / help-01
                                               :ARG1 (c3-5 / relax-01
                                                           :ARG1 c3-13)
                                               :ARG2 c3-13))
                   :condition (c3-3 / slash
                                    :op1 (c3-10 / live-01
                                                :ARG0 c3-13)
                                    :op2 (c3-1 / work-01
                                               :ARG0 c3-13)
                                    :location (c3-8 / city
                                                    :name (c3-9 / name
                                                                :op1 "NYC")))))

# ::snt : Drift into a peaceful slumber w/' new album. . :// !
# ::tokens [":", "Drift", "into", "a", "peaceful", "slumber", "w/", "'", "new", "album", ".", ".", ":", "//", "!"]
# ::lemmas [":", "drift", "into", "a", "peaceful", "slumber", "w/", "'", "new", "album", ".", ".", ":", "//", "!"]
(c4-5 / drift-01
      :ARG1 (c4-3 / you)
      :ARG4 (c4-0 / slumber-01
                  :ARG1 c4-3
                  :manner (c4-1 / peaceful))
      :subevent-of (c4-4 / album
                         :ARG1-of (c4-2 / new-01))
      :mode expressive)

# ::snt SNL needs to do a spoof on this!!! I &lt;3 it but it is utterly ridiculous
# ::tokens ["SNL", "needs", "to", "do", "a", "spoof", "on", "this", "!", "!", "!", "I", "&", "lt;3", "it", "but", "it", "is", "utterly", "ridiculous"]
# ::lemmas ["SNL", "need", "to", "do", "a", "spoof", "on", "this", "!", "!", "!", "i", "&", "lt;3", "it", "but", "it", "be", "utterly", "ridiculous"]
(c5-5 / multi-sentence
      :snt1 (c5-10 / need-01
                   :ARG0 (c5-1 / broadcast-program
                               :name (c5-8 / name
                                           :op1 "SNL"))
                   :ARG1 (c5-11 / do-02
                                :ARG0 c5-1
                                :ARG1 (c5-0 / spoof
                                            :topic (c5-3 / this))))
      :snt2 (c5-6 / contrast-01
                  :ARG1 (c5-2 / i)
                  :ARG2 (c5-4 / ridiculous-02
                              :ARG1 (c5-9 / it)
                              :ARG1-of (c5-7 / utter-02))))

# ::snt Awesome
# ::tokens ["Awesome"]
# ::lemmas ["Awesome"]
(c6-0 / awe-01)

# ::snt Help Retweet "Revitaderm Treatment" BUY Pharmacy For "
# ::tokens ["Help", "Retweet", "\"", "Revitaderm", "Treatment", "\"", "BUY", "Pharmacy", "For", "\""]
# ::lemmas ["help", "Retweet", "\"", "Revitaderm", "Treatment", "\"", "BUY", "Pharmacy", "for", "\""]
(c7-4 / help-01
      :ARG0 (c7-5 / you)
      :ARG1 (c7-6 / retweet-01
                  :ARG0 c7-5
                  :ARG1 (c7-2 / treat-03
                              :ARG2 (c7-7 / disease
                                          :name (c7-3 / name
                                                      :op1 "Revitaderm")))
                  :purpose (c7-0 / buy-01
                                 :ARG0 c7-5
                                 :ARG1 (c7-1 / pharmacy)
                                 :mode imperative))
      :mode imperative)

# ::snt hey its the Dude! Loved the ad during the game.
# ::tokens ["hey", "its", "the", "Dude", "!", "Loved", "the", "ad", "during", "the", "game", "."]
# ::lemmas ["hey", "its", "the", "Dude", "!", "love", "the", "ad", "during", "the", "game", "."]
(c8-1 / multi-sentence
      :snt1 (c8-2 / hey
                  :mode expressive)
      :snt2 (c8-0 / love-01
                  :ARG1 (c8-3 / advertise-01)
                  :time (c8-4 / game)))

# ::snt Check out this funny vine!!
# ::tokens ["Check", "out", "this", "funny", "vine", "!", "!"]
# ::lemmas ["check", "out", "this", "funny", "vine", "!", "!"]
(c9-1 / check-out-05
      :ARG0 (c9-2 / you)
      :ARG1 (c9-3 / vine
                  :ARG1-of (c9-4 / funny-02)
                  :mod (c9-0 / this))
      :mode imperative)

# ::snt Boycott Squarespace for sponsoring Super Bowl until fires Roger Goodell
# ::tokens ["Boycott", "Squarespace", "for", "sponsoring", "Super", "Bowl", "until", "fires", "Roger", "Goodell"]
# ::lemmas ["Boycott", "Squarespace", "for", "sponsor", "Super", "Bowl", "until", "fire", "Roger", "Goodell"]
(c10-1 / boycott-01
       :ARG0 (c10-6 / you)
       :ARG1 (c10-3 / company
                    :name (c10-8 / name
                                 :op1 "Squarespace"))
       :ARG3 (c10-0 / sponsor-01
                    :ARG0 c10-3
                    :ARG1 (c10-10 / game
                                  :name (c10-7 / name
                                               :op1 "Super"
                                               :op2 "Bowl")))
       :time (c10-5 / until
                    :op1 (c10-9 / fire-02
                                :ARG0 c10-3
                                :ARG1 (c10-2 / person
                                             :name (c10-4 / name
                                                          :op1 "Roger"
                                                          :op2 "Goodell"))))
       :mode imperative)

# ::snt " Drift into a peaceful slumber w/' new album. ."
# ::tokens ["\"", "Drift", "into", "a", "peaceful", "slumber", "w/", "'", "new", "album", ".", ".", "\""]
# ::lemmas ["\"", "drift", "into", "a", "peaceful", "slumber", "w/", "'", "new", "album", ".", ".", "\""]
(c11-5 / drift-01
       :ARG0 (c11-3 / you)
       :ARG4 (c11-0 / slumber-01
                    :ARG1 c11-3
                    :manner (c11-1 / peaceful))
       :accompanier (c11-4 / album
                           :ARG1-of (c11-2 / new-01))
       :mode imperative)

# ::snt please tell me this is a comedy album! I can't stop laughing!!!!
# ::tokens ["please", "tell", "me", "this", "is", "a", "comedy", "album", "!", "I", "ca", "n't", "stop", "laughing", "!", "!", "!", "!"]
# ::lemmas ["please", "tell", "i", "this", "be", "a", "comedy", "album", "!", "i", "can", "not", "stop", "laugh", "!", "!", "!", "!"]
(c12-6 / multi-sentence
       :snt1 (c12-4 / tell-01
                    :ARG0 (c12-8 / you)
                    :ARG1 (c12-9 / album
                                 :mod (c12-7 / comedy)
                                 :domain (c12-5 / this))
                    :ARG2 (c12-1 / i)
                    :polite +
                    :mode imperative)
       :snt2 (c12-2 / possible-01
                    :ARG1 (c12-0 / stop-01
                                 :ARG0 c12-1
                                 :ARG1 (c12-3 / laugh-01
                                              :ARG0 c12-1))
                    :polarity -))

# ::snt This is so "right up my alley". What a goovy idea man. Love it!
# ::tokens ["This", "is", "so", "\"", "right", "up", "my", "alley", "\"", ".", "What", "a", "goovy", "idea", "man", ".", "Love", "it", "!"]
# ::lemmas ["this", "be", "so", "\"", "right", "up", "my", "alley", "\"", ".", "what", "a", "goovy", "idea", "man", ".", "love", "it", "!"]
(c13-6 / multi-sentence
       :snt1 (c13-7 / up-03
                    :ARG1 (c13-4 / this)
                    :ARG2 (c13-9 / alley
                                 :poss (c13-1 / i))
                    :degree (c13-0 / so))
       :snt2 (c13-2 / say-01
                    :ARG1 (c13-8 / idea
                                 :mod (c13-11 / goovy
                                              :degree c13-0)))
       :ARG2 (c13-10 / man)
       :snt3 (c13-3 / love-01
                    :ARG1 (c13-5 / it)))

# ::snt A continuous loop of 's Lincoln ads would work better
# ::tokens ["A", "continuous", "loop", "of", "'s", "Lincoln", "ads", "would", "work", "better"]
# ::lemmas ["a", "continuous", "loop", "of", "'s", "Lincoln", "ad", "would", "work", "well"]
(c15-6 / have-degree-91
       :ARG1 (c15-7 / work-09
                    :ARG1 (c15-0 / loop
                                 :ARG1-of (c15-4 / continue-01)
                                 :mod (c15-1 / advertise-01
                                             :ARG0 (c15-3 / company
                                                          :name (c15-5 / name
                                                                       :op1 "Lincoln")))))
       :ARG2 (c15-8 / good-02)
       :ARG3 (c15-2 / more))

# ::snt . Is that like, some eastern thing?
# ::tokens [".", "Is", "that", "like", ",", "some", "eastern", "thing", "?"]
# ::lemmas [".", "be", "that", "like", ",", "some", "eastern", "thing", "?"]
(c16-6 / resemble-01
       :polarity (c16-3 / amr-unknown)
       :ARG1 (c16-2 / that)
       :ARG2 (c16-4 / thing
                    :mod (c16-1 / world-region
                                :name (c16-5 / name
                                             :op1 "East"))
                    :mod (c16-0 / some)))

# ::snt can he just come and speak to me all night. His voice!!
# ::tokens ["can", "he", "just", "come", "and", "speak", "to", "me", "all", "night", ".", "His", "voice", "!", "!"]
# ::lemmas ["can", "he", "just", "come", "and", "speak", "to", "i", "all", "night", ".", "his", "voice", "!", "!"]
(c18-4 / multi-sentence
       :snt1 (c18-3 / possible-01
                    :ARG1 (c18-10 / and
                                  :op1 (c18-6 / come-01
                                              :ARG1 (c18-8 / he)
                                              :mod (c18-9 / just))
                                  :op2 (c18-0 / speak-01
                                              :ARG0 c18-8
                                              :ARG2 (c18-1 / i))
                                  :time (c18-11 / date-entity
                                                :dayperiod (c18-7 / night)
                                                :mod (c18-5 / all))))
       :snt2 (c18-12 / voice
                     :poss (c18-2 / he)))

# ::snt Jeff you get me every time. I don't care if this is a promoted tweet....
# ::tokens ["Jeff", "you", "get", "me", "every", "time", ".", "I", "do", "n't", "care", "if", "this", "is", "a", "promoted", "tweet", "...."]
# ::lemmas ["Jeff", "you", "get", "i", "every", "time", ".", "i", "do", "not", "care", "if", "this", "be", "a", "promoted", "tweet", "...."]
(c20-5 / multi-sentence
       :snt1 (c20-12 / get-01
                     :ARG0 (c20-1 / person
                                  :name (c20-10 / name
                                                :op1 "Jeff"))
                     :ARG1 (c20-0 / i)
                     :frequency (c20-3 / time
                                       :mod (c20-11 / every)))
       :snt2 (c20-6 / care-01
                    :ARG0 (c20-9 / i)
                    :ARG1 (c20-4 / truth-value
                                 :polarity-of (c20-2 / tweet-01
                                                     :ARG1-of (c20-7 / promote-02)
                                                     :domain (c20-8 / this)))
                    :polarity -))

# ::snt Thank you Love the album. Love your work Jeff Bridges.
# ::tokens ["Thank", "you", "Love", "the", "album", ".", "Love", "your", "work", "Jeff", "Bridges", "."]
# ::lemmas ["thank", "you", "Love", "the", "album", ".", "love", "your", "work", "Jeff", "Bridges", "."]
(c21-6 / multi-sentence
       :snt1 (c21-5 / thank-01
                    :ARG1 (c21-9 / you)
                    :ARG2 (c21-4 / love-01
                                 :ARG0 c21-9
                                 :ARG1 (c21-10 / album)))
       :snt2 (c21-0 / say-01
                    :ARG1 (c21-8 / love-01
                                 :ARG0 (c21-2 / i)
                                 :ARG1 (c21-1 / work-01
                                              :ARG0 (c21-3 / person
                                                           :name (c21-7 / name
                                                                        :op1 "Jeff"
                                                                        :op2 "Bridges")
                                                           :ARG2-of c21-0)))))
