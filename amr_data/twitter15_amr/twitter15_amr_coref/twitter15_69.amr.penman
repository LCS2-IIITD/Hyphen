# ::snt Prayers are answered.
# ::tokens ["Prayers", "are", "answered", "."]
# ::lemmas ["prayer", "be", "answer", "."]
(c1-0 / answer-01
      :ARG1 (c1-1 / pray-01))

# ::snt It's gonna be a rude awakening once the free ride ends and it will soon.
# ::tokens ["It", "'s", "gon", "na", "be", "a", "rude", "awakening", "once", "the", "free", "ride", "ends", "and", "it", "will", "soon", "."]
# ::lemmas ["it", "be", "going", "to", "be", "a", "rude", "awakening", "once", "the", "free", "ride", "end", "and", "it", "will", "soon", "."]
(c2-5 / and
      :op1 (c2-1 / wake-up-02
                 :ARG1-of (c2-3 / rude-01)
                 :time (c2-6 / end-01
                             :ARG1 (c2-2 / ride-01
                                         :ARG1-of (c2-7 / free-04))))
      :op2 (c2-4 / end-01
                 :ARG1 c2-2
                 :time (c2-0 / soon)))

# ::snt That's the biggest problem.
# ::tokens ["That", "'s", "the", "biggest", "problem", "."]
# ::lemmas ["that", "be", "the", "big", "problem", "."]
(c3-4 / have-degree-91
      :ARG1 (c3-1 / problem
                  :domain (c3-2 / that))
      :ARG2 (c3-0 / big)
      :ARG3 (c3-3 / most))

# ::snt They like the free ride!
# ::tokens ["They", "like", "the", "free", "ride", "!"]
# ::lemmas ["they", "like", "the", "free", "ride", "!"]
(c4-0 / like-01
      :ARG0 (c4-1 / they)
      :ARG1 (c4-2 / ride-01
                  :ARG1-of (c4-3 / free-03)))

# ::snt Obama thinks he's done no wrong. So do the low info voters. It's a stretch happen
# ::tokens ["Obama", "thinks", "he", "'s", "done", "no", "wrong", ".", "So", "do", "the", "low", "info", "voters", ".", "It", "'s", "a", "stretch", "happen"]
# ::lemmas ["Obama", "think", "he", "be", "do", "no", "wrong", ".", "so", "do", "the", "low", "info", "voter", ".", "it", "be", "a", "stretch", "happen"]
(c5-7 / multi-sentence
      :snt1 (c5-6 / think-01
                  :ARG0 (c5-4 / person
                              :name (c5-9 / name
                                          :op1 "Obama"))
                  :ARG1 (c5-10 / do-02
                               :ARG0 c5-4
                               :ARG1 (c5-1 / wrong-02)
                               :snt2-of c5-7
                               :polarity -))
      :ARG0 (c5-12 / person
                   :ARG0-of (c5-11 / vote-01)
                   :mod (c5-2 / information
                              :ARG1-of (c5-5 / low-04)))
      :ARG1 (c5-0 / so)
      :snt3 (c5-3 / stretch-01
                  :ARG1 (c5-8 / it)))

# ::snt How about Obama answering for his crimes???
# ::tokens ["How", "about", "Obama", "answering", "for", "his", "crimes", "?", "?", "?"]
# ::lemmas ["how", "about", "Obama", "answer", "for", "his", "crime", "?", "?", "?"]
(c6-4 / amr-unknown
      :topic (c6-1 / answer-01
                   :ARG0 (c6-0 / person
                               :name (c6-3 / name
                                           :op1 "Obama"))
                   :ARG1 (c6-2 / crime-02
                               :ARG0 c6-0)))

# ::snt Why do you distort? You appear to be an agent for whom? To have your followers followed by gov't. ? Your conclusions,factless
# ::tokens ["Why", "do", "you", "distort", "?", "You", "appear", "to", "be", "an", "agent", "for", "whom", "?", "To", "have", "your", "followers", "followed", "by", "gov't", ".", "?", "Your", "conclusions", ",", "factless"]
# ::lemmas ["why", "do", "you", "distort", "?", "you", "appear", "to", "be", "an", "agent", "for", "whom", "?", "to", "have", "your", "follower", "follow", "by", "gov't", ".", "?", "your", "conclusion", ",", "factless"]
(c7-5 / multi-sentence
      :snt1 (c7-14 / distort-01
                   :ARG0 (c7-11 / you)
                   :ARG1-of (c7-8 / cause-01
                                  :ARG0 (c7-13 / amr-unknown)))
      :snt2 (c7-6 / appear-02
                  :ARG1 (c7-4 / agent
                              :beneficiary (c7-9 / amr-unknown)
                              :domain (c7-1 / you)))
      :snt3 (c7-15 / follow-02
                   :ARG0 (c7-12 / government-organization
                                :ARG0-of (c7-7 / govern-01))
                   :ARG1 (c7-3 / person
                               :ARG1 c7-1)
                   :ARG0 c7-3)
      :snt4 (c7-0 / fact
                  :domain (c7-10 / conclude-01
                                 :ARG0 (c7-2 / you))
                  :polarity -))

# ::snt It shall be done!!! GOD BLESS!!!!
# ::tokens ["It", "shall", "be", "done", "!", "!", "!", "GOD", "BLESS", "!", "!", "!", "!"]
# ::lemmas ["it", "shall", "be", "do", "!", "!", "!", "GOD", "BLESS", "!", "!", "!", "!"]
(c8-3 / multi-sentence
      :snt1 (c8-5 / do-02
                  :ARG1 (c8-0 / it))
      :snt2 (c8-1 / blESS
                  :mod (c8-2 / person
                             :name (c8-4 / name
                                         :op1 "God"))
                  :mode expressive))

# ::snt You have almost x the followers I do. Now if we can get many of them to RT it, we got a start.
# ::tokens ["You", "have", "almost", "x", "the", "followers", "I", "do", ".", "Now", "if", "we", "can", "get", "many", "of", "them", "to", "RT", "it", ",", "we", "got", "a", "start", "."]
# ::lemmas ["you", "have", "almost", "x", "the", "follower", "i", "do", ".", "now", "if", "we", "can", "get", "many", "of", "they", "to", "RT", "it", ",", "we", "get", "a", "start", "."]
(c9-14 / multi-sentence
       :snt1 (c9-19 / have-03
                    :ARG0 (c9-16 / you)
                    :ARG1 (c9-13 / person
                                 :ARG0-of (c9-12 / follow-02)
                                 :quant (c9-8 / almost
                                              :op1 "x"))
                    :ARG1-of (c9-10 / do-02
                                    :ARG0 (c9-1 / i)))
       :snt2 (c9-20 / get-01
                    :ARG0 (c9-7 / we)
                    :ARG1 (c9-0 / start-01)
                    :condition (c9-18 / possible-01
                                      :ARG1 (c9-15 / get-04
                                                   :ARG0 c9-7
                                                   :ARG1 (c9-11 / person
                                                                :ARG1-of (c9-3 / include-91
                                                                               :ARG2 (c9-6 / person
                                                                                           :ARG0-of (c9-5 / follow-02))
                                                                               :ARG3 (c9-9 / many))
                                                                :ARG2 (c9-4 / RT-01
                                                                            :ARG1 (c9-2 / it)
                                                                            :ARG0 c9-11))))
                    :time (c9-17 / now)))

# ::snt I did it and will again to more. I do have followers who have lots more followers than me. It could be done.
# ::tokens ["I", "did", "it", "and", "will", "again", "to", "more", ".", "I", "do", "have", "followers", "who", "have", "lots", "more", "followers", "than", "me", ".", "It", "could", "be", "done", "."]
# ::lemmas ["i", "do", "it", "and", "will", "again", "to", "more", ".", "i", "do", "have", "follower", "who", "have", "lot", "more", "follower", "than", "i", ".", "it", "could", "be", "do", "."]
(c10-14 / multi-sentence
        :snt1 (c10-9 / and
                     :op1 (c10-11 / do-02
                                  :ARG0 (c10-1 / i)
                                  :ARG1 (c10-6 / it))
                     :op2 (c10-0 / do-02
                                 :ARG0 c10-1
                                 :ARG1 (c10-2 / it)
                                 :mod (c10-4 / again)
                                 :mod (c10-10 / more)))
        :snt2 (c10-18 / have-03
                      :ARG0 (c10-5 / i)
                      :ARG1 (c10-13 / person
                                    :ARG0-of (c10-12 / follow-02
                                                     :ARG1 c10-5)
                                    :ARG1-of (c10-7 / have-quant-91
                                                    :ARG3 (c10-8 / more
                                                                 :quant (c10-3 / lot))
                                                    :ARG4 c10-5)))
        :snt3 (c10-15 / possible-01
                      :ARG1 (c10-17 / do-02
                                    :ARG1 (c10-16 / it))))

# ::snt If we could just get million people to tweet their senators what I just tweeted the of you, it could happen
# ::tokens ["If", "we", "could", "just", "get", "million", "people", "to", "tweet", "their", "senators", "what", "I", "just", "tweeted", "the", "of", "you", ",", "it", "could", "happen"]
# ::lemmas ["if", "we", "could", "just", "get", "million", "people", "to", "tweet", "their", "senator", "what", "i", "just", "tweet", "the", "of", "you", ",", "it", "could", "happen"]
(c11-1 / possible-01
       :ARG1 (c11-16 / get-04
                     :ARG0 (c11-13 / we)
                     :ARG1 (c11-3 / tweet-02
                                  :ARG0 (c11-15 / person
                                                :quant 1000000)
                                  :ARG1 (c11-4 / thing
                                               :ARG1-of (c11-2 / tweet-02
                                                               :ARG0 (c11-0 / i)
                                                               :ARG2 (c11-14 / person
                                                                             :ARG1-of (c11-12 / include-91
                                                                                              :ARG2 (c11-9 / you)))
                                                               :mod (c11-10 / just)))
                                  :ARG2 (c11-6 / person
                                               :ARG0-of (c11-11 / have-org-role-91
                                                                :ARG1 (c11-5 / government-organization
                                                                             :name (c11-7 / name
                                                                                          :op1 "Senate")))
                                               :poss c11-15))
                     :mod (c11-8 / just)))

# ::snt Got any suggestions as to how to fix American government?? . ???? .???
# ::tokens ["Got", "any", "suggestions", "as", "to", "how", "to", "fix", "American", "government", "?", "?", ".", "?", "?", "?", "?", ".", "?", "?", "?"]
# ::lemmas ["get", "any", "suggestion", "as", "to", "how", "to", "fix", "American", "government", "?", "?", ".", "?", "?", "?", "?", ".", "?", "?", "?"]
(c12-6 / get-02
       :ARG1 (c12-1 / thing
                    :ARG1-of (c12-0 / suggest-01)
                    :topic (c12-8 / fix-02
                                  :ARG1 (c12-4 / government-organization
                                               :ARG0-of (c12-2 / govern-01
                                                               :ARG1 (c12-5 / country
                                                                            :name (c12-7 / name
                                                                                         :op1 "America"))))))
       :polarity (c12-3 / amr-unknown))

# ::snt This is a nationwide epidemic w/o party lines. Take the gang of . WTH?
# ::tokens ["This", "is", "a", "nationwide", "epidemic", "w/o", "party", "lines", ".", "Take", "the", "gang", "of", ".", "WTH", "?"]
# ::lemmas ["this", "be", "a", "nationwide", "epidemic", "w/o", "party", "line", ".", "take", "the", "gang", "of", ".", "WTH", "?"]
(c13-6 / multi-sentence
       :snt1 (c13-9 / epidemic
                    :domain (c13-3 / this)
                    :location (c13-8 / nationwide)
                    :prep-without (c13-2 / line
                                         :mod (c13-1 / party)))
       :snt2 (c13-4 / take-01
                    :ARG0 (c13-7 / you)
                    :ARG1 (c13-10 / gang
                                  :poss (c13-0 / you))
                    :polarity (c13-5 / amr-unknown)
                    :mode imperative))

# ::snt How many Libtards &amp; uninformed live by assumption? All of them.
# ::tokens ["How", "many", "Libtards", "&", "amp", ";", "uninformed", "live", "by", "assumption", "?", "All", "of", "them", "."]
# ::lemmas ["how", "many", "Libtards", "&", "amp", ";", "uninformed", "live", "by", "assumption", "?", "all", "of", "they", "."]
(c14-5 / multi-sentence
       :snt1 (c14-2 / live-01
                    :ARG0 (c14-10 / and
                                  :op1 (c14-1 / person
                                              :ARG1-of (c14-9 / liberal-02))
                                  :op2 (c14-11 / person
                                               :name (c14-7 / name
                                                            :op1 "amp"))
                                  :quant (c14-6 / amr-unknown))
                    :ARG1-of (c14-4 / assume-02))
       :snt2 (c14-0 / include-91
                    :ARG1 (c14-3 / they
                                 :mod (c14-8 / all)
                                 :ARG2-of c14-0)))

# ::snt Even worse if they stand by and knowingly let it happen.
# ::tokens ["Even", "worse", "if", "they", "stand", "by", "and", "knowingly", "let", "it", "happen", "."]
# ::lemmas ["even", "worse", "if", "they", "stand", "by", "and", "knowingly", "let", "it", "happen", "."]
(c15-6 / have-degree-91
       :ARG2 (c15-1 / bad-07)
       :ARG3 (c15-5 / more
                    :mod (c15-9 / even))
       :condition (c15-7 / and
                         :op1 (c15-0 / stand-by-05
                                     :ARG0 (c15-4 / they))
                         :op2 (c15-3 / let-01
                                     :ARG0 c15-4
                                     :ARG1 (c15-2 / it)
                                     :manner (c15-8 / know-01
                                                    :ARG0 c15-4))))

# ::snt All demographics voted for Obama. He wouldn't have made it on those groups alone.
# ::tokens ["All", "demographics", "voted", "for", "Obama", ".", "He", "would", "n't", "have", "made", "it", "on", "those", "groups", "alone", "."]
# ::lemmas ["all", "demographic", "vote", "for", "Obama", ".", "he", "would", "not", "have", "make", "it", "on", "those", "group", "alone", "."]
(c16-3 / multi-sentence
       :snt1 (c16-9 / vote-01
                    :ARG0 (c16-8 / demographics
                                 :mod (c16-7 / all))
                    :ARG1 (c16-1 / person
                                 :name (c16-5 / name
                                              :op1 "Obama")))
       :snt2 (c16-0 / make-it-14
                    :ARG0 (c16-6 / he)
                    :prep-on (c16-10 / group
                                     :mod (c16-2 / that)
                                     :mod (c16-4 / alone))
                    :polarity -))

# ::snt Honest and NO ID, NO VOTE.
# ::tokens ["Honest", "and", "NO", "ID", ",", "NO", "VOTE", "."]
# ::lemmas ["honest", "and", "no", "ID", ",", "NO", "VOTE", "."]
(c17-2 / and
       :op1 (c17-0 / honest-01)
       :op2 (c17-3 / document-01
                   :polarity -)
       :op3 (c17-4 / vote-01
                   :ARG0 (c17-1 / you)
                   :polarity -
                   :mode imperative))

# ::snt No worries. Take ur time.
# ::tokens ["No", "worries", ".", "Take", "ur", "time", "."]
# ::lemmas ["no", "worry", ".", "take", "ur", "time", "."]
(c18-2 / multi-sentence
       :snt1 (c18-4 / worry-01
                    :polarity -)
       :snt2 (c18-0 / take-01
                    :ARG0 (c18-3 / you)
                    :ARG1 (c18-1 / time)
                    :mode imperative))

# ::snt If it's a crime, we're complicit. This is our country, not just Obama's.
# ::tokens ["If", "it", "'s", "a", "crime", ",", "we", "'re", "complicit", ".", "This", "is", "our", "country", ",", "not", "just", "Obama", "'s", "."]
# ::lemmas ["if", "it", "be", "a", "crime", ",", "we", "be", "complicit", ".", "this", "be", "our", "country", ",", "not", "just", "Obama", "'s", "."]
(c19-4 / multi-sentence
       :snt1 (c19-6 / complicit
                    :domain (c19-12 / we)
                    :condition (c19-5 / crime-02
                                      :ARG1 (c19-0 / it)))
       :snt2 (c19-3 / and
                    :op1 (c19-7 / country
                                :poss (c19-8 / we)
                                :domain (c19-2 / this))
                    :op2 (c19-11 / country
                                 :poss (c19-1 / person
                                              :name (c19-9 / name
                                                           :op1 "Obama"))
                                 :mod (c19-10 / just
                                              :polarity -)
                                 :domain c19-2)))

# ::snt Sorry buddy I'm very busy right now but I will get back to ya.
# ::tokens ["Sorry", "buddy", "I", "'m", "very", "busy", "right", "now", "but", "I", "will", "get", "back", "to", "ya", "."]
# ::lemmas ["sorry", "buddy", "i", "be", "very", "busy", "right", "now", "but", "i", "will", "get", "back", "to", "ya", "."]
(c20-0 / say-01
       :ARG0 (c20-2 / i)
       :ARG1 (c20-1 / sorry-01
                    :ARG1 c20-2
                    :ARG2 (c20-3 / busy-01
                                 :ARG1 c20-2
                                 :degree (c20-7 / very)
                                 :time (c20-6 / now
                                              :mod (c20-4 / right))
                                 :concession-of (c20-8 / get-back-10
                                                       :ARG0 c20-2
                                                       :ARG1 (c20-5 / buddy
                                                                    :ARG2-of c20-0)))))

# ::snt Same point was made on the left abt GWB.
# ::tokens ["Same", "point", "was", "made", "on", "the", "left", "abt", "GWB", "."]
# ::lemmas ["same", "point", "be", "make", "on", "the", "left", "abt", "GWB", "."]
(c21-1 / point-04
       :ARG0 (c21-2 / left-19)
       :ARG1-of (c21-0 / same-01)
       :topic (c21-4 / person
                     :name (c21-3 / name
                                  :op1 "GWB")))

# ::snt He wouldn't have been reelected except for massive voter fraud.
# ::tokens ["He", "would", "n't", "have", "been", "reelected", "except", "for", "massive", "voter", "fraud", "."]
# ::lemmas ["he", "would", "not", "have", "be", "reelect", "except", "for", "massive", "voter", "fraud", "."]
(c22-3 / reelect-01
       :ARG1 (c22-2 / he)
       :ARG2-of (c22-6 / except-01
                       :ARG1 (c22-4 / defraud-01
                                    :ARG0 (c22-0 / person
                                                 :ARG0-of (c22-5 / vote-01))
                                    :degree (c22-1 / massive)))
       :polarity -)

# ::snt He was elected TWICE, remember? (Again assuming the elections were honest.)
# ::tokens ["He", "was", "elected", "TWICE", ",", "remember", "?", "(", "Again", "assuming", "the", "elections", "were", "honest", ".", ")"]
# ::lemmas ["he", "be", "elect", "twice", ",", "remember", "?", "(", "again", "assume", "the", "election", "be", "honest", ".", ")"]
(c23-7 / elect-01
       :ARG1 (c23-5 / he)
       :ARG1-of (c23-6 / remember-01
                       :polarity (c23-2 / amr-unknown))
       :condition (c23-4 / assume-02
                         :ARG1 (c23-1 / elect-01
                                      :ARG1-of (c23-0 / honest-01))
                         :mod (c23-3 / again))
       :frequency 2)

# ::snt This is OUR govt. It is what WE make of it. If corruption rules it's b/c we voted it.
# ::tokens ["This", "is", "OUR", "govt", ".", "It", "is", "what", "WE", "make", "of", "it", ".", "If", "corruption", "rules", "it", "'s", "b", "/", "c", "we", "voted", "it", "."]
# ::lemmas ["this", "be", "our", "govt", ".", "it", "be", "what", "we", "make", "of", "it", ".", "if", "corruption", "rule", "it", "be", "b", "/", "c", "we", "vote", "it", "."]
(c24-5 / multi-sentence
       :snt1 (c24-14 / government-organization
                     :ARG0-of (c24-6 / govern-01)
                     :poss (c24-11 / we)
                     :domain (c24-2 / this))
       :snt2 (c24-3 / thing
                    :ARG1-of (c24-12 / make-18
                                     :ARG0 (c24-8 / we)
                                     :ARG2 c24-14)
                    :domain c24-2)
       :snt3 (c24-9 / cause-01
                    :ARG0 (c24-13 / vote-01
                                  :ARG0 (c24-10 / we)
                                  :ARG1 (c24-0 / it)
                                  :condition (c24-4 / rule-01
                                                    :ARG1 (c24-7 / corrupt-01)))
                    :ARG1 (c24-1 / bwahaha)))

# ::snt Don't be so sure. Most Americans want their information given to them. It's all abt emotion nowadays.
# ::tokens ["Do", "n't", "be", "so", "sure", ".", "Most", "Americans", "want", "their", "information", "given", "to", "them", ".", "It", "'s", "all", "abt", "emotion", "nowadays", "."]
# ::lemmas ["do", "not", "be", "so", "sure", ".", "most", "Americans", "want", "their", "information", "give", "to", "they", ".", "it", "be", "all", "abt", "emotion", "nowadays", "."]
(c25-5 / multi-sentence
       :snt1 (c25-0 / sure-02
                    :ARG0 (c25-8 / you)
                    :degree (c25-1 / so)
                    :polarity -
                    :mode imperative)
       :snt2 (c25-11 / want-01
                     :ARG0 (c25-3 / person
                                  :mod (c25-6 / country
                                              :name (c25-7 / name
                                                           :op1 "America"))
                                  :mod (c25-12 / most))
                     :ARG1 (c25-14 / give-01
                                   :ARG1 (c25-2 / information
                                                :poss c25-3)
                                   :ARG2 c25-3))
       :snt3 (c25-13 / emotion
                     :mod (c25-4 / all)
                     :time (c25-9 / nowadays)
                     :domain (c25-10 / it)))

# ::snt Obama just slightly won the election &amp; he wouldn't win if it was held today. He's a liar &amp; cheat
# ::tokens ["Obama", "just", "slightly", "won", "the", "election", "&", "amp", ";", "he", "would", "n't", "win", "if", "it", "was", "held", "today", ".", "He", "'s", "a", "liar", "&", "amp", ";", "cheat"]
# ::lemmas ["Obama", "just", "slightly", "win", "the", "election", "&", "amp", ";", "he", "would", "not", "win", "if", "it", "be", "hold", "today", ".", "he", "be", "a", "liar", "&", "amp", ";", "cheat"]
(c26-6 / multi-sentence
       :snt1 (c26-13 / and
                     :op1 (c26-1 / win-01
                                 :ARG0 (c26-3 / person
                                              :name (c26-8 / name
                                                           :op1 "Obama"))
                                 :ARG2 (c26-14 / elect-01)
                                 :degree (c26-0 / slight
                                                :mod (c26-11 / just)))
                     :op2 (c26-9 / win-01
                                 :ARG0 c26-3
                                 :condition (c26-12 / hold-04
                                                    :ARG1 c26-14
                                                    :time (c26-5 / today))
                                 :polarity -))
       :snt2 (c26-7 / and
                    :op1 (c26-4 / lie-08
                                :ARG0 (c26-2 / he))
                    :op2 (c26-10 / cheat-03
                                 :ARG0 c26-2)))

# ::snt My point exactly
# ::tokens ["My", "point", "exactly"]
# ::lemmas ["my", "point", "exactly"]
(c27-2 / point-04
       :ARG0 (c27-0 / i)
       :manner (c27-1 / exact))

# ::snt We unanimously voted for Obama so "We the People" are responsible for any outcome. Good or bad.
# ::tokens ["We", "unanimously", "voted", "for", "Obama", "so", "\"", "We", "the", "People", "\"", "are", "responsible", "for", "any", "outcome", ".", "Good", "or", "bad", "."]
# ::lemmas ["we", "unanimously", "vote", "for", "Obama", "so", "\"", "we", "the", "people", "\"", "be", "responsible", "for", "any", "outcome", ".", "good", "or", "bad", "."]
(c28-5 / multi-sentence
       :snt1 (c28-13 / vote-01
                     :ARG0 (c28-11 / we)
                     :ARG1 (c28-1 / person
                                  :name (c28-6 / name
                                               :op1 "Obama"))
                     :mod (c28-9 / unanimous)
                     :ARG0-of (c28-7 / cause-01
                                     :ARG1 (c28-2 / responsible-01
                                                  :ARG0 (c28-8 / we
                                                               :mod (c28-14 / people))
                                                  :ARG1 (c28-3 / outcome
                                                               :mod (c28-4 / any)))))
       :snt2 (c28-12 / or
                     :op1 (c28-10 / good-02)
                     :op2 (c28-0 / bad-07)))

# ::snt The best way to speak is by educating ppl and voting for the right person for the job.
# ::tokens ["The", "best", "way", "to", "speak", "is", "by", "educating", "ppl", "and", "voting", "for", "the", "right", "person", "for", "the", "job", "."]
# ::lemmas ["the", "good", "way", "to", "speak", "be", "by", "educate", "ppl", "and", "voting", "for", "the", "right", "person", "for", "the", "job", "."]
(c29-6 / have-degree-91
       :ARG1 (c29-8 / way
                    :manner-of (c29-0 / speak-01))
       :ARG2 (c29-11 / good-02)
       :ARG3 (c29-4 / most)
       :ARG5 c29-8
       :ARG5 (c29-3 / and
                    :op1 (c29-10 / educate-01
                                 :ARG1 (c29-1 / person))
                    :op2 (c29-9 / vote-01
                                :ARG1 (c29-5 / person
                                             :ARG1-of (c29-2 / right-03
                                                             :ARG2 (c29-7 / job))))))

# ::snt I don't!! He just brought Obama's crime to light.
# ::tokens ["I", "do", "n't", "!", "!", "He", "just", "brought", "Obama", "'s", "crime", "to", "light", "."]
# ::lemmas ["i", "do", "not", "!", "!", "he", "just", "bring", "Obama", "'s", "crime", "to", "light", "."]
(c30-3 / multi-sentence
       :snt1 (c30-8 / do-02
                    :ARG0 (c30-1 / i)
                    :polarity -)
       :snt2 (c30-0 / shed-light-10
                    :ARG0 (c30-5 / he)
                    :ARG1 (c30-4 / crime-02
                                 :ARG0 (c30-2 / person
                                              :name (c30-7 / name
                                                           :op1 "Obama")))
                    :time (c30-6 / just)))

# ::snt foreign troops have been in the mix for years now. Our troops will hesitate. Other troops will shoot Americans dead
# ::tokens ["foreign", "troops", "have", "been", "in", "the", "mix", "for", "years", "now", ".", "Our", "troops", "will", "hesitate", ".", "Other", "troops", "will", "shoot", "Americans", "dead"]
# ::lemmas ["foreign", "troop", "have", "be", "in", "the", "mix", "for", "years", "now", ".", "our", "troop", "will", "hesitate", ".", "other", "troop", "will", "shoot", "Americans", "dead"]
(c31-12 / multi-sentence
        :snt1 (c31-8 / mix-01
                     :ARG1 (c31-16 / troop
                                   :mod (c31-9 / foreign))
                     :time (c31-2 / before
                                  :op1 (c31-15 / now)
                                  :duration (c31-5 / multiple
                                                   :op1 (c31-11 / temporal-quantity
                                                                :unit (c31-13 / year)
                                                                :quant 1))))
        :snt2 (c31-18 / hesitate-01
                      :ARG0 (c31-3 / troop
                                   :poss (c31-6 / we)))
        :snt3 (c31-0 / shoot-02
                     :ARG0 (c31-17 / troop
                                   :mod (c31-4 / other))
                     :ARG2 (c31-7 / die-01
                                  :ARG1 (c31-10 / person
                                                :mod (c31-1 / country
                                                            :name (c31-14 / name
                                                                          :op1 "America"))))))

# ::snt Snowden has really made us look weak, so I don't think there is any other alternative.
# ::tokens ["Snowden", "has", "really", "made", "us", "look", "weak", ",", "so", "I", "do", "n't", "think", "there", "is", "any", "other", "alternative", "."]
# ::lemmas ["Snowden", "have", "really", "make", "we", "look", "weak", ",", "so", "i", "do", "not", "think", "there", "be", "any", "other", "alternative", "."]
(c32-10 / cause-01
        :ARG0 (c32-7 / make-02
                     :ARG0 (c32-2 / person
                                  :name (c32-12 / name
                                                :op1 "Snowden"))
                     :ARG1 (c32-3 / look-02
                                  :ARG0 (c32-0 / we)
                                  :ARG1 (c32-11 / weak-02
                                                :ARG1 c32-0))
                     :ARG1-of (c32-4 / real-04))
        :ARG1 (c32-5 / think-01
                     :ARG0 (c32-1 / i)
                     :ARG1 (c32-6 / alternative
                                  :mod (c32-8 / any)
                                  :mod (c32-9 / other))
                     :polarity -))

# ::snt I hope we get him back and he goes to trial. He needs to answer for his crimes.
# ::tokens ["I", "hope", "we", "get", "him", "back", "and", "he", "goes", "to", "trial", ".", "He", "needs", "to", "answer", "for", "his", "crimes", "."]
# ::lemmas ["i", "hope", "we", "get", "he", "back", "and", "he", "go", "to", "trial", ".", "he", "need", "to", "answer", "for", "his", "crime", "."]
(c33-4 / multi-sentence
       :snt1 (c33-9 / hope-01
                    :ARG0 (c33-1 / i)
                    :ARG1 (c33-10 / and
                                  :op1 (c33-11 / get-back-09
                                               :ARG0 (c33-0 / we)
                                               :ARG1 (c33-2 / he))
                                  :op2 (c33-5 / go-02
                                              :ARG0 c33-2
                                              :ARG1 (c33-3 / try-02
                                                           :ARG1 c33-2))))
       :snt2 (c33-7 / need-01
                    :ARG0 (c33-12 / he)
                    :ARG1 (c33-6 / answer-01
                                 :ARG0 c33-12
                                 :ARG1 (c33-8 / crime-02
                                              :ARG0 c33-12))))

# ::snt I hope Putin gives Snowden refuge just to spite Obama. Obama should be on trial for treason.
# ::tokens ["I", "hope", "Putin", "gives", "Snowden", "refuge", "just", "to", "spite", "Obama", ".", "Obama", "should", "be", "on", "trial", "for", "treason", "."]
# ::lemmas ["i", "hope", "Putin", "give", "Snowden", "refuge", "just", "to", "spite", "Obama", ".", "Obama", "should", "be", "on", "trial", "for", "treason", "."]
(c34-7 / multi-sentence
       :snt1 (c34-10 / hope-01
                     :ARG0 (c34-1 / i)
                     :ARG1 (c34-17 / give-01
                                   :ARG0 (c34-2 / person
                                                :name (c34-13 / name
                                                              :op1 "Putin"))
                                   :ARG1 (c34-4 / refuge)
                                   :ARG2 (c34-16 / person
                                                 :name (c34-12 / name
                                                               :op1 "Snowden"))
                                   :purpose (c34-0 / spite-01
                                                   :ARG0 c34-16
                                                   :ARG1 (c34-15 / person
                                                                 :name (c34-9 / name
                                                                              :op1 "Obama"))
                                                   :mod (c34-11 / just))))
       :snt2 (c34-3 / recommend-01
                    :ARG1 (c34-5 / try-02
                                 :ARG1 (c34-8 / person
                                              :name (c34-14 / name
                                                            :op1 "Obama"))
                                 :ARG3 (c34-6 / treason))))

# ::snt Does Obama think our forces are too inept, our do they refuse to do what he wants done? Unbelievable!
# ::tokens ["Does", "Obama", "think", "our", "forces", "are", "too", "inept", ",", "our", "do", "they", "refuse", "to", "do", "what", "he", "wants", "done", "?", "Unbelievable", "!"]
# ::lemmas ["do", "Obama", "think", "our", "force", "be", "too", "inept", ",", "our", "do", "they", "refuse", "to", "do", "what", "he", "wants", "do", "?", "unbelievable", "!"]
(c35-13 / multi-sentence
        :snt1 (c35-16 / think-01
                      :ARG0 (c35-11 / person
                                    :name (c35-14 / name
                                                  :op1 "Obama"))
                      :ARG1 (c35-20 / have-degree-91
                                    :ARG1 (c35-10 / force
                                                  :poss (c35-7 / we))
                                    :ARG2 (c35-8 / apt-04
                                                 :ARG1 c35-10
                                                 :polarity -)
                                    :ARG3 (c35-12 / too))
                      :polarity (c35-1 / amr-unknown))
        :snt2 (c35-3 / refuse-01
                     :ARG0 (c35-6 / they
                                  :poss (c35-18 / we))
                     :ARG1 (c35-9 / do-02
                                  :ARG0 c35-6
                                  :ARG1 (c35-19 / thing
                                                :ARG1-of (c35-0 / do-02
                                                                :ARG0 (c35-4 / he)
                                                                :ARG1-of (c35-2 / want-01
                                                                                :ARG0 c35-4))))
                     :polarity (c35-17 / amr-unknown))
        :snt3 (c35-15 / possible-01
                      :ARG1 (c35-5 / believe-01
                                   :ARG1-of c35-15)
                      :polarity -))

# ::snt Interesting considering Putin is housing one of our fugitives.
# ::tokens ["Interesting", "considering", "Putin", "is", "housing", "one", "of", "our", "fugitives", "."]
# ::lemmas ["interesting", "consider", "Putin", "be", "house", "one", "of", "our", "fugitive", "."]
(c36-2 / interest-01
       :ARG2 (c36-4 / consider-01
                    :ARG1 (c36-5 / house-01
                                 :ARG0 (c36-3 / person
                                              :name (c36-7 / name
                                                           :op1 "Putin"))
                                 :ARG1 (c36-9 / person
                                              :ARG1-of (c36-6 / include-91
                                                              :ARG2 (c36-8 / person
                                                                           :ARG1-of (c36-0 / fugitive-03)
                                                                           :poss (c36-1 / we)))
                                              :quant 1))))

# ::snt exactly over here the BBC owns the media and forces people to pay tv licence. When they dont have to
# ::tokens ["exactly", "over", "here", "the", "BBC", "owns", "the", "media", "and", "forces", "people", "to", "pay", "tv", "licence", ".", "When", "they", "do", "nt", "have", "to"]
# ::lemmas ["exactly", "over", "here", "the", "BBC", "own", "the", "medium", "and", "force", "people", "to", "pay", "tv", "licence", ".", "when", "they", "do", "not", "have", "to"]
(c37-6 / multi-sentence
       :snt1 (c37-9 / and
                    :op1 (c37-3 / own-01
                                :ARG0 (c37-1 / publication
                                             :name (c37-7 / name
                                                          :op1 "BBC"))
                                :ARG1 (c37-10 / media))
                    :op2 (c37-14 / force-01
                                 :ARG0 c37-1
                                 :ARG1 (c37-13 / person)
                                 :ARG2 (c37-12 / pay-01
                                               :ARG0 c37-13
                                               :ARG3 (c37-2 / license
                                                            :mod (c37-4 / television))))
                    :location (c37-8 / here
                                     :mod (c37-11 / exact)))
       :snt2 (c37-0 / obligate-01
                    :ARG1 (c37-5 / they)
                    :ARG2 c37-12
                    :polarity -))

# ::snt RT : Expect to see Russian Forces At US Events to Provide Security
# ::tokens ["RT", ":", "Expect", "to", "see", "Russian", "Forces", "At", "US", "Events", "to", "Provide", "Security"]
# ::lemmas ["rt", ":", "expect", "to", "see", "Russian", "Forces", "at", "US", "event", "to", "provide", "security"]
(c39-10 / expect-01
        :ARG0 (c39-2 / publication
                     :name (c39-9 / name
                                  :op1 "RT"))
        :ARG1 (c39-0 / see-01
                     :ARG0 c39-2
                     :ARG1 (c39-11 / force
                                   :mod (c39-5 / country
                                               :name (c39-8 / name
                                                            :op1 "Russia")))
                     :location (c39-3 / event
                                      :mod (c39-4 / country
                                                  :name (c39-6 / name
                                                               :op1 "US")))
                     :purpose (c39-7 / provide-01
                                     :ARG0 c39-11
                                     :ARG1 (c39-1 / security))))

# ::snt I can spell I just wanted to shorten what I said to get it all in but yes the media brainwashed you into buying things
# ::tokens ["I", "can", "spell", "I", "just", "wanted", "to", "shorten", "what", "I", "said", "to", "get", "it", "all", "in", "but", "yes", "the", "media", "brainwashed", "you", "into", "buying", "things"]
# ::lemmas ["i", "can", "spell", "i", "just", "want", "to", "shorten", "what", "i", "say", "to", "get", "it", "all", "in", "but", "yes", "the", "medium", "brainwash", "you", "into", "buy", "thing"]
(c40-11 / contrast-01
        :ARG1 (c40-4 / possible-01
                     :ARG1 (c40-0 / spell-01
                                  :ARG0 (c40-2 / i)
                                  :ARG1 (c40-16 / want-01
                                                :ARG0 c40-2
                                                :ARG1 (c40-3 / shorten-04
                                                             :ARG0 c40-2
                                                             :ARG1 (c40-6 / thing
                                                                          :ARG1-of (c40-10 / say-01
                                                                                           :ARG0 c40-2))
                                                             :purpose (c40-17 / get-05
                                                                              :ARG0 c40-2
                                                                              :ARG1 (c40-15 / it
                                                                                            :mod (c40-7 / all))))
                                                :mod (c40-13 / just))))
        :ARG2 (c40-5 / brainwash-01
                     :ARG0 (c40-9 / media)
                     :ARG1 (c40-14 / you)
                     :ARG2 (c40-12 / buy-01
                                   :ARG0 c40-14
                                   :ARG1 (c40-8 / thing))
                     :mod (c40-1 / yes)))

# ::snt people have to make a living if u had the brains u wud he isnt forcin u to buy his products like the media do
# ::tokens ["people", "have", "to", "make", "a", "living", "if", "u", "had", "the", "brains", "u", "wud", "he", "is", "nt", "forcin", "u", "to", "buy", "his", "products", "like", "the", "media", "do"]
# ::lemmas ["people", "have", "to", "make", "a", "living", "if", "u", "have", "the", "brain", "u", "wud", "he", "be", "not", "forcin", "u", "to", "buy", "his", "product", "like", "the", "medium", "do"]
(c41-9 / have-condition-91
       :ARG1 (c41-5 / obligate-01
                    :ARG1 (c41-2 / person)
                    :ARG2 (c41-6 / make-05
                                 :ARG0 c41-2
                                 :ARG1 (c41-4 / live-01)))
       :ARG2 (c41-0 / have-03
                    :ARG0 (c41-10 / you)
                    :ARG1 (c41-1 / brain))
       :ARG0-of (c41-7 / cause-01
                       :ARG1 (c41-14 / possible-01
                                     :ARG1 (c41-8 / buy-01
                                                  :ARG0 (c41-15 / he)
                                                  :ARG1 (c41-13 / product
                                                                :poss c41-15)
                                                  :ARG1-of (c41-11 / resemble-01
                                                                   :ARG2 (c41-3 / buy-01
                                                                                :ARG0 (c41-12 / media))))
                                     :polarity -)))

# ::snt daddy
# ::tokens ["daddy"]
# ::lemmas ["daddy"]
(c42-1 / person
       :name (c42-0 / name
                    :op1 "Daddy"))

# ::snt million my bad...but that plan was established in the s when their were a third less americans
# ::tokens ["million", "my", "bad", "...", "but", "that", "plan", "was", "established", "in", "the", "s", "when", "their", "were", "a", "third", "less", "americans"]
# ::lemmas ["million", "my", "bad", "...", "but", "that", "plan", "be", "establish", "in", "the", "s", "when", "their", "be", "a", "third", "less", "americans"]
(c43-7 / contrast-01
       :ARG1 (c43-4 / thing
                    :ARG1-of (c43-0 / bad-07
                                    :ARG0 (c43-1 / i))
                    :quant 1000000)
       :ARG2 (c43-11 / establish-01
                     :ARG1 (c43-2 / plan
                                  :mod (c43-5 / that))
                     :time (c43-10 / date-entity
                                   :time-of (c43-8 / have-quant-91
                                                   :ARG1 (c43-12 / person
                                                                 :mod (c43-6 / country
                                                                             :name (c43-9 / name
                                                                                          :op1 "America")))
                                                   :ARG3 (c43-3 / less
                                                                :quant 3))
                                   :ARG4 c43-12
                                   :year 2000)))

# ::snt Things are getting crazier every day; no worry, I read these tweets in a bad dream; tomorrow all is fine again...........
# ::tokens ["Things", "are", "getting", "crazier", "every", "day", ";", "no", "worry", ",", "I", "read", "these", "tweets", "in", "a", "bad", "dream", ";", "tomorrow", "all", "is", "fine", "again", "..........."]
# ::lemmas ["thing", "be", "get", "crazy", "every", "day", ";", "no", "worry", ",", "i", "read", "these", "tweet", "in", "a", "bad", "dream", ";", "tomorrow", "all", "be", "fine", "again", "..........."]
(c44-13 / multi-sentence
        :snt1 (c44-19 / get-03
                      :ARG1 (c44-16 / thing)
                      :ARG2 (c44-3 / crazy-03
                                   :ARG1 c44-16
                                   :ARG2-of (c44-18 / have-degree-91
                                                    :ARG1 c44-16
                                                    :ARG3 (c44-10 / more)))
                      :frequency (c44-4 / rate-entity-91
                                        :ARG3 (c44-12 / temporal-quantity
                                                      :unit (c44-9 / day)
                                                      :quant 1)))
        :snt2 (c44-7 / worry-02
                     :ARG0 (c44-15 / read-01
                                   :ARG0 (c44-1 / i)
                                   :ARG1 c44-16
                                   :ARG1-of (c44-6 / tweet-01)
                                   :mod (c44-17 / this))
                     :time (c44-0 / dream-01
                                  :ARG1-of (c44-5 / bad-07))
                     :polarity -)
        :snt3 (c44-11 / fine-04
                      :ARG1 (c44-8 / all)
                      :mod (c44-2 / again)
                      :time (c44-14 / tomorrow)))

# ::snt fort Carson....the troops are already here...William Carey's plan kill million Americans,give land to Russia,China ..oops
# ::tokens ["fort", "Carson", "....", "the", "troops", "are", "already", "here", "...", "William", "Carey", "'s", "plan", "kill", "million", "Americans", ",", "give", "land", "to", "Russia", ",", "China", "..", "oops"]
# ::lemmas ["fort", "Carson", "....", "the", "troop", "be", "already", "here", "...", "William", "Carey", "'s", "plan", "kill", "million", "Americans", ",", "give", "land", "to", "Russia", ",", "China", "..", "oop"]
(c45-12 / multi-sentence
        :snt1 (c45-11 / person
                      :name (c45-14 / name
                                    :op1 "Carson"))
        :snt2 (c45-3 / be-located-at-91
                     :ARG1 (c45-17 / troop)
                     :ARG2 (c45-20 / here)
                     :time (c45-9 / already))
        :snt3 (c45-16 / plan-01
                      :ARG0 (c45-10 / person
                                    :name (c45-13 / name
                                                  :op1 "William"
                                                  :op2 "Carey"))
                      :ARG1 (c45-1 / and
                                   :op1 (c45-21 / kill-01
                                                :ARG0 c45-16
                                                :ARG1 (c45-5 / person
                                                             :mod (c45-2 / country
                                                                         :name (c45-6 / name
                                                                                      :op1 "America"))
                                                             :quant 1000000))
                                   :op2 (c45-22 / give-01
                                                :ARG0 c45-16
                                                :ARG1 (c45-0 / land)
                                                :ARG2 (c45-18 / and
                                                              :op1 (c45-19 / country
                                                                           :name (c45-15 / name
                                                                                         :op1 "Russia"))
                                                              :op2 (c45-7 / country
                                                                          :name (c45-8 / name
                                                                                       :op1 "China")))))
                      :mod (c45-4 / oops
                                  :mode expressive)))

# ::snt Paranoid. Delusional. Idiotic.
# ::tokens ["Paranoid", ".", "Delusional", ".", "Idiotic", "."]
# ::lemmas ["Paranoid", ".", "delusional", ".", "Idiotic", "."]
(c46-0 / and
       :op1 (c46-3 / paranoid)
       :op2 (c46-1 / delude-01)
       :op3 (c46-2 / idiot))

# ::snt Alex you are a fat douchebag u make us look stupid...go eat another cheeseburger fat man
# ::tokens ["Alex", "you", "are", "a", "fat", "douchebag", "u", "make", "us", "look", "stupid", "...", "go", "eat", "another", "cheeseburger", "fat", "man"]
# ::lemmas ["Alex", "you", "be", "a", "fat", "douchebag", "u", "make", "we", "look", "stupid", "...", "go", "eat", "another", "cheeseburger", "fat", "man"]
(c47-7 / multi-sentence
       :snt1 (c47-12 / douchebag
                     :ARG1-of (c47-14 / fat-03)
                     :domain (c47-4 / person
                                    :name (c47-11 / name
                                                  :op1 "Alex")))
       :snt2 (c47-3 / make-02
                    :ARG0 (c47-9 / you)
                    :ARG1 (c47-5 / look-02
                                 :ARG0 (c47-2 / we)
                                 :ARG1 (c47-1 / stupid)))
       :snt3 (c47-10 / go-05
                     :ARG0 c47-9
                     :mode imperative)
       :ARG1 (c47-13 / eat-01
                     :ARG0 c47-9
                     :ARG1 (c47-8 / cheeseburger
                                  :ARG1-of (c47-0 / fat-03)
                                  :mod (c47-6 / another))))

# ::snt You have got to be kidding me, WOW. Good ole BIG BROTHER is up to something. Put your helmets on! 'mmovingtoCanada
# ::tokens ["You", "have", "got", "to", "be", "kidding", "me", ",", "WOW", ".", "Good", "ole", "BIG", "BROTHER", "is", "up", "to", "something", ".", "Put", "your", "helmets", "on", "!", "'", "mmovingtoCanada"]
# ::lemmas ["you", "have", "get", "to", "be", "kid", "i", ",", "WOW", ".", "good", "ole", "big", "brother", "be", "up", "to", "something", ".", "put", "your", "helmet", "on", "!", "'", "mmovingtoCanada"]
(c48-5 / multi-sentence
       :snt1 (c48-14 / get-06
                     :ARG0 (c48-9 / you)
                     :ARG1 (c48-12 / kid-01
                                   :ARG0 c48-9
                                   :ARG1 (c48-2 / i))
                     :mod (c48-11 / wow
                                  :mode expressive))
       :snt2 (c48-8 / up-to
                    :op1 (c48-0 / something)
                    :domain (c48-3 / person
                                   :name (c48-7 / name
                                                :op1 "Big"
                                                :op2 "Brother")
                                   :mod (c48-4 / old)
                                   :ARG1-of (c48-6 / good-02)))
       :snt3 (c48-13 / put-on-08
                     :ARG0 (c48-1 / you)
                     :ARG1 (c48-10 / helmet
                                   :poss c48-1)
                     :mode imperative))

# ::snt where did you get the news about this? I believe you thou. Its sounds scary me
# ::tokens ["where", "did", "you", "get", "the", "news", "about", "this", "?", "I", "believe", "you", "thou", ".", "Its", "sounds", "scary", "me"]
# ::lemmas ["where", "do", "you", "get", "the", "news", "about", "this", "?", "i", "believe", "you", "thou", ".", "its", "sound", "scary", "i"]
(c49-8 / multi-sentence
       :snt1 (c49-12 / get-01
                     :ARG0 (c49-9 / you)
                     :ARG1 (c49-11 / news
                                   :topic (c49-6 / this))
                     :source (c49-7 / amr-unknown))
       :snt2 (c49-2 / believe-01
                    :ARG0 (c49-3 / i)
                    :ARG1 (c49-0 / you))
       :snt3 (c49-1 / sound-01
                    :ARG1 (c49-10 / it)
                    :ARG2 (c49-4 / scary-03
                                 :ARG0 c49-10
                                 :ARG1 (c49-5 / i))))

# ::snt Lol. There goes that tinfoiled hat wearing fear monger alex jones!
# ::tokens ["Lol", ".", "There", "goes", "that", "tinfoiled", "hat", "wearing", "fear", "monger", "alex", "jones", "!"]
# ::lemmas ["Lol", ".", "there", "go", "that", "tinfoile", "hat", "wear", "fear", "monger", "alex", "jones", "!"]
(c50-5 / multi-sentence
       :snt1 (c50-2 / laugh-01
                    :manner (c50-7 / loud)
                    :mode expressive)
       :snt2 (c50-11 / go-01
                     :ARG1 (c50-8 / hat
                                  :ARG1-of (c50-3 / tinfoil-01)
                                  :ARG0-of (c50-9 / wear-01)
                                  :mod (c50-4 / that)
                                  :mod (c50-1 / person
                                              :name (c50-6 / name
                                                           :op1 "Alex"
                                                           :op2 "Jones")
                                              :ARG0-of (c50-0 / have-org-role-91
                                                              :ARG2 (c50-10 / monger))))))
