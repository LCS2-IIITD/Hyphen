# ::snt unfortunately when you portray yourself as a living god you can't admit publicly that you were in hospital with gout...
# ::tokens ["unfortunately", "when", "you", "portray", "yourself", "as", "a", "living", "god", "you", "ca", "n't", "admit", "publicly", "that", "you", "were", "in", "hospital", "with", "gout", "..."]
# ::lemmas ["unfortunately", "when", "you", "portray", "yourself", "as", "a", "live", "god", "you", "can", "not", "admit", "publicly", "that", "you", "be", "in", "hospital", "with", "gout", "..."]
(c1-10 / fortunate-01
       :ARG2 (c1-1 / possible-01
                   :ARG1 (c1-7 / admit-01
                               :ARG0 (c1-4 / you)
                               :ARG1 (c1-0 / be-located-at-91
                                           :ARG1 c1-4
                                           :ARG2 (c1-5 / hospital)
                                           :manner (c1-6 / gout))
                               :ARG1-of (c1-9 / public-02))
                   :time (c1-8 / portray-01
                               :ARG0 c1-4
                               :ARG1 c1-4
                               :ARG2 (c1-3 / god
                                           :ARG0-of (c1-2 / live-01)))
                   :polarity -)
       :polarity -)

# ::snt ALIENS
# ::tokens ["ALIENS"]
# ::lemmas ["ALIENS"]
(c2-1 / island
      :name (c2-0 / name
                  :op1 "ALIENS"))

# ::snt He went out and was tempted? Good, hoping he is now a Christian and out making disciples in Jesus name all over the place.
# ::tokens ["He", "went", "out", "and", "was", "tempted", "?", "Good", ",", "hoping", "he", "is", "now", "a", "Christian", "and", "out", "making", "disciples", "in", "Jesus", "name", "all", "over", "the", "place", "."]
# ::lemmas ["he", "go", "out", "and", "be", "tempt", "?", "good", ",", "hope", "he", "be", "now", "a", "Christian", "and", "out", "make", "disciple", "in", "Jesus", "name", "all", "over", "the", "place", "."]
(c3-9 / multi-sentence
      :snt1 (c3-5 / and
                  :op1 (c3-18 / go-out-17
                              :ARG0 (c3-17 / he))
                  :op2 (c3-15 / tempt-01
                              :ARG1 c3-17)
                  :polarity (c3-0 / amr-unknown))
      :snt2 (c3-16 / and
                   :op1 (c3-3 / hope-01
                              :ARG1 (c3-1 / religious-group
                                          :name (c3-13 / name
                                                       :op1 "Christian")
                                          :domain (c3-2 / he)
                                          :time (c3-12 / now)))
                   :op2 (c3-6 / make-01
                              :ARG0 c3-2
                              :ARG1 (c3-8 / person
                                          :ARG1 (c3-14 / person
                                                       :name (c3-4 / name
                                                                   :op1 "Jesus"))
                                          :ARG0-of c3-6))
                   :location (c3-11 / all-over
                                    :op1 (c3-7 / place)))
      :ARG1-of (c3-10 / good-02))

# ::snt ; kim jong un, look a like in Android from dragon ball z this awarkd !!
# ::tokens [";", "kim", "jong", "un", ",", "look", "a", "like", "in", "Android", "from", "dragon", "ball", "z", "this", "awarkd", "!", "!"]
# ::lemmas [";", "kim", "jong", "un", ",", "look", "a", "like", "in", "Android", "from", "dragon", "ball", "z", "this", "awarkd", "!", "!"]
(c4-2 / look-01
      :ARG0 (c4-1 / person
                  :name (c4-6 / name
                              :op1 "Kim"
                              :op2 "Jong"
                              :op3 "Un"))
      :ARG1 (c4-3 / thing
                  :ARG1-of (c4-8 / resemble-01
                                 :ARG2 (c4-10 / product
                                              :name (c4-7 / name
                                                          :op1 "Android"))))
      :source (c4-0 / ball
                    :mod (c4-9 / dragon))
      :mod (c4-4 / awarkd
                 :mod (c4-5 / this))
      :mode expressive)

# ::snt he's clearly a cyborg replacement
# ::tokens ["he", "'s", "clearly", "a", "cyborg", "replacement"]
# ::lemmas ["he", "be", "clearly", "a", "cyborg", "replacement"]
(c5-0 / replace-01
      :ARG1 (c5-1 / he)
      :ARG2 (c5-3 / cyborg)
      :ARG1-of (c5-2 / clear-06))

# ::snt he was playing minecraft on Xbox one
# ::tokens ["he", "was", "playing", "minecraft", "on", "Xbox", "one"]
# ::lemmas ["he", "be", "play", "minecraft", "on", "Xbox", "one"]
(c6-0 / play-01
      :ARG0 (c6-1 / he)
      :ARG1 (c6-4 / game
                  :name (c6-2 / name
                              :op1 "Minecraft"))
      :medium (c6-3 / product
                    :name c6-2
                    :op1 "Xbox"
                    :op2 "One"))

# ::snt Are you sure this is not from SNL?
# ::tokens ["Are", "you", "sure", "this", "is", "not", "from", "SNL", "?"]
# ::lemmas ["be", "you", "sure", "this", "be", "not", "from", "SNL", "?"]
(c7-0 / sure-02
      :ARG0 (c7-5 / you)
      :ARG1 (c7-1 / be-from-91
                  :ARG1 (c7-2 / this)
                  :ARG2 (c7-4 / broadcast-program
                              :name (c7-6 / name
                                          :op1 "SNL"))
                  :polarity -)
      :polarity (c7-3 / amr-unknown))

# ::snt : North Korea Kim Jong Un has made appearance after + days missing
# ::tokens [":", "North", "Korea", "Kim", "Jong", "Un", "has", "made", "appearance", "after", "+", "days", "missing"]
# ::lemmas [":", "North", "Korea", "Kim", "Jong", "Un", "have", "make", "appearance", "after", "+", "days", "miss"]
(c8-8 / appear-01
      :ARG1 (c8-1 / person
                  :name (c8-6 / name
                              :op1 "Kim"
                              :op2 "Jong"
                              :op3 "Un")
                  :mod (c8-5 / country
                             :name (c8-7 / name
                                         :op1 "North"
                                         :op2 "Korea")))
      :time (c8-3 / after
                  :op1 (c8-4 / miss-01
                             :ARG1 c8-1
                             :duration (c8-9 / more-than
                                             :op1 (c8-2 / temporal-quantity
                                                        :unit (c8-0 / day)
                                                        :quant 1)))))

# ::snt :where's he been hiding and why?
# ::tokens [":", "where", "'s", "he", "been", "hiding", "and", "why", "?"]
# ::lemmas [":", "where", "be", "he", "be", "hide", "and", "why", "?"]
(c9-4 / and
      :op1 (c9-3 / hide-01
                 :ARG1 (c9-0 / he)
                 :location (c9-1 / amr-unknown))
      :op2 (c9-2 / cause-01
                 :ARG0 c9-3))

# ::snt I love the dictators job, if he hadn't appeared now I probably sent out a search party
# ::tokens ["I", "love", "the", "dictators", "job", ",", "if", "he", "had", "n't", "appeared", "now", "I", "probably", "sent", "out", "a", "search", "party"]
# ::lemmas ["i", "love", "the", "dictator", "job", ",", "if", "he", "have", "not", "appear", "now", "i", "probably", "send", "out", "a", "search", "party"]
(c10-8 / and
       :op1 (c10-4 / love-01
                   :ARG0 (c10-1 / i)
                   :ARG1 (c10-7 / job
                                :poss (c10-9 / dictator)))
       :op2 (c10-0 / send-01
                   :ARG0 c10-1
                   :ARG1 (c10-3 / party
                                :purpose (c10-2 / search-01))
                   :condition (c10-5 / appear-01
                                     :ARG1 c10-9
                                     :time (c10-6 / now)
                                     :polarity -)
                   :mod (c10-10 / probable)))

# ::snt Good he makes things interesting!
# ::tokens ["Good", "he", "makes", "things", "interesting", "!"]
# ::lemmas ["good", "he", "make", "thing", "interesting", "!"]
(c11-4 / good-02
       :ARG1 (c11-2 / make-02
                    :ARG0 (c11-3 / he)
                    :ARG1 (c11-0 / interest-01
                                 :ARG0 (c11-1 / thing))))

# ::snt He was on holidays, ,, he went to??? Central north Korea?
# ::tokens ["He", "was", "on", "holidays", ",", ",", ",", "he", "went", "to", "?", "?", "?", "Central", "north", "Korea", "?"]
# ::lemmas ["he", "be", "on", "holiday", ",", ",", ",", "he", "go", "to", "?", "?", "?", "central", "north", "Korea", "?"]
(c12-5 / go-02
       :ARG0 (c12-3 / he)
       :ARG4 (c12-0 / holiday-01
                    :ARG0 c12-3)
       :ARG4 (c12-2 / country-region
                    :name (c12-4 / name
                                 :op1 "Central"
                                 :op2 "North"
                                 :op3 "Korea")
                    :polarity (c12-1 / amr-unknown)))

# ::snt Well, from where, here on earth or space? Definitely not earth b'cos they'd not find him, so, where, crying out loud!
# ::tokens ["Well", ",", "from", "where", ",", "here", "on", "earth", "or", "space", "?", "Definitely", "not", "earth", "b'cos", "they", "'d", "not", "find", "him", ",", "so", ",", "where", ",", "crying", "out", "loud", "!"]
# ::lemmas ["well", ",", "from", "where", ",", "here", "on", "earth", "or", "space", "?", "definitely", "not", "earth", "b'cos", "they", "would", "not", "find", "he", ",", "so", ",", "where", ",", "cry", "out", "loud", "!"]
(c13-7 / multi-sentence
       :snt1 (c13-1 / be-from-91
                    :ARG2 (c13-14 / amr-unknown)
                    :location (c13-5 / or
                                     :op1 (c13-13 / here
                                                  :location (c13-3 / planet
                                                                   :name (c13-10 / name
                                                                                 :op1 "Earth")))
                                     :op2 (c13-0 / space
                                                 :location (c13-2 / here))))
       :snt2 (c13-11 / cause-01
                     :ARG0 (c13-16 / find-01
                                   :ARG0 (c13-6 / they)
                                   :ARG1 (c13-17 / he)
                                   :polarity -)
                     :ARG1 (c13-12 / be-located-at-91
                                   :ARG2 (c13-8 / amr-unknown))
                     :mod (c13-15 / definite))
       :snt3 (c13-9 / cry-out-03
                    :location (c13-4 / loud)
                    :mode expressive))

# ::snt someone should shoot that prick
# ::tokens ["someone", "should", "shoot", "that", "prick"]
# ::lemmas ["someone", "should", "shoot", "that", "prick"]
(c14-4 / recommend-01
       :ARG1 (c14-0 / shoot-01
                    :ARG2 (c14-2 / prick
                                 :mod (c14-3 / that)))
       :ARG2 (c14-1 / someone))

# ::snt oh heck, why was everyone looking for him, I was hoping he was lost, and would never be found.
# ::tokens ["oh", "heck", ",", "why", "was", "everyone", "looking", "for", "him", ",", "I", "was", "hoping", "he", "was", "lost", ",", "and", "would", "never", "be", "found", "."]
# ::lemmas ["oh", "heck", ",", "why", "be", "everyone", "look", "for", "he", ",", "i", "be", "hope", "he", "be", "lose", ",", "and", "would", "never", "be", "find", "."]
(c15-5 / multi-sentence
       :snt1 (c15-7 / cause-01
                    :ARG0 (c15-10 / amr-unknown)
                    :ARG1 (c15-2 / look-01
                                 :ARG0 (c15-12 / everyone)
                                 :ARG1 (c15-9 / he))
                    :mod (c15-3 / oh-hell
                                :mode expressive))
       :snt2 (c15-0 / hope-01
                    :ARG0 (c15-1 / i)
                    :ARG1 (c15-6 / and
                                 :op1 (c15-8 / lose-02
                                             :ARG1 (c15-13 / he))
                                 :op2 (c15-11 / find-01
                                              :ARG1 c15-13
                                              :time (c15-4 / ever)
                                              :polarity -))))

# ::snt Nice. For how long this will go on ? Civilized world must take note.
# ::tokens ["Nice", ".", "For", "how", "long", "this", "will", "go", "on", "?", "Civilized", "world", "must", "take", "note", "."]
# ::lemmas ["nice", ".", "for", "how", "long", "this", "will", "go", "on", "?", "civilized", "world", "must", "take", "note", "."]
(c16-4 / multi-sentence
       :snt1 (c16-8 / nice-01)
       :snt2 (c16-1 / obligate-01
                    :ARG2 (c16-7 / note-01
                                 :ARG0 (c16-0 / world
                                              :ARG1-of (c16-6 / civilize-01)))
                    :ARG1-of (c16-5 / cause-01
                                    :ARG0 (c16-2 / amr-unknown
                                                 :duration-of (c16-9 / go-on-15
                                                                     :ARG1 (c16-3 / this))))))

# ::snt those NKoreans are a wily bunch......of psychos.
# ::tokens ["those", "NKoreans", "are", "a", "wily", "bunch", "......", "of", "psychos", "."]
# ::lemmas ["those", "NKoreans", "be", "a", "wily", "bunch", "......", "of", "psychos", "."]
(c17-0 / bunch
       :mod (c17-5 / wily)
       :domain (c17-1 / person
                      :mod (c17-4 / country
                                  :name (c17-3 / name
                                               :op1 "North"
                                               :op2 "Korea"))
                      :mod (c17-2 / that))
       :consist-of (c17-6 / psychoan))

# ::snt RT North Korea media says Kim Jong Un has made appearance after + days missing
# ::tokens ["RT", "North", "Korea", "media", "says", "Kim", "Jong", "Un", "has", "made", "appearance", "after", "+", "days", "missing"]
# ::lemmas ["RT", "North", "Korea", "medium", "say", "Kim", "Jong", "Un", "have", "make", "appearance", "after", "+", "days", "miss"]
(c18-1 / say-01
       :ARG0 (c18-2 / publication
                    :name (c18-10 / name
                                  :op1 "RT")
                    :mod (c18-7 / country
                                :name (c18-9 / name
                                             :op1 "North"
                                             :op2 "Korea")))
       :ARG1 (c18-4 / appear-01
                    :ARG1 (c18-12 / person
                                  :name (c18-8 / name
                                               :op1 "Kim"
                                               :op2 "Jong"
                                               :op3 "Un"))
                    :time (c18-5 / after
                                 :op1 (c18-6 / miss-01
                                             :ARG1 c18-12
                                             :duration (c18-11 / multiple
                                                               :op1 (c18-3 / temporal-quantity
                                                                           :unit (c18-0 / day)
                                                                           :quant 1))))))

# ::snt :he is still fat and ugly
# ::tokens [":", "he", "is", "still", "fat", "and", "ugly"]
# ::lemmas [":", "he", "be", "still", "fat", "and", "ugly"]
(c19-3 / and
       :op1 (c19-4 / fat-03
                   :ARG1 (c19-2 / he))
       :op2 (c19-1 / ugly
                   :domain c19-2)
       :mod (c19-0 / still))

# ::snt De herrijzenis van Kim Jong Un!!!
# ::tokens ["De", "herrijzenis", "van", "Kim", "Jong", "Un", "!", "!", "!"]
# ::lemmas ["De", "herrijzenis", "van", "Kim", "Jong", "Un", "!", "!", "!"]
(c21-1 / herrijzenis
       :name (c21-0 / name
                    :op1 "Kim"
                    :op2 "Jong"
                    :op3 "Un"))

# ::snt All the time and he couldn't let that horrible haircut grow out
# ::tokens ["All", "the", "time", "and", "he", "could", "n't", "let", "that", "horrible", "haircut", "grow", "out"]
# ::lemmas ["all", "the", "time", "and", "he", "could", "not", "let", "that", "horrible", "haircut", "grow", "out"]
(c22-7 / and
       :op1 (c22-3 / time
                   :mod (c22-5 / all))
       :op2 (c22-1 / possible-01
                   :ARG1 (c22-2 / let-01
                                :ARG0 (c22-6 / he)
                                :ARG1 (c22-8 / grow-out-05
                                             :ARG1 (c22-0 / haircut
                                                          :mod (c22-9 / horrible)
                                                          :mod (c22-4 / that))))
                   :polarity -))

# ::snt Not even cheese can keep this man down.
# ::tokens ["Not", "even", "cheese", "can", "keep", "this", "man", "down", "."]
# ::lemmas ["not", "even", "cheese", "can", "keep", "this", "man", "down", "."]
(c23-0 / possible-01
       :ARG1 (c23-4 / keep-down-00
                    :ARG0 (c23-3 / cheese
                                 :mod (c23-5 / even))
                    :ARG1 (c23-2 / man
                                 :mod (c23-1 / this)))
       :polarity -)
