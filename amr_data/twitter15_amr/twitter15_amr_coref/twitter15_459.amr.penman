# ::snt Next will be the No Go Zones!
# ::tokens ["Next", "will", "be", "the", "No", "Go", "Zones", "!"]
# ::lemmas ["Next", "will", "be", "the", "no", "Go", "zone", "!"]
(c1-1 / zone
      :mod (c1-3 / go-02
                 :ARG0 (c1-2 / you)
                 :polarity -
                 :mode imperative)
      :mod (c1-0 / next))

# ::snt Like Hell thier Are! We hav enough trouble in Texas with crosing the Border, NOW they want to setup camp here!
# ::tokens ["Like", "Hell", "thier", "Are", "!", "We", "hav", "enough", "trouble", "in", "Texas", "with", "crosing", "the", "Border", ",", "NOW", "they", "want", "to", "setup", "camp", "here", "!"]
# ::lemmas ["like", "Hell", "thi", "be", "!", "we", "hav", "enough", "trouble", "in", "Texas", "with", "crose", "the", "Border", ",", "now", "they", "want", "to", "setup", "camp", "here", "!"]
(c2-12 / multi-sentence
       :snt1 (c2-2 / resemble-01
                   :ARG2 (c2-18 / hell
                                :domain (c2-15 / they)))
       :snt2 (c2-4 / have-trouble-04
                   :ARG0 (c2-9 / we)
                   :ARG1 (c2-1 / cros-01
                               :ARG0 c2-9
                               :ARG1 (c2-5 / border))
                   :ARG1-of (c2-3 / have-quant-91
                                  :ARG3 (c2-10 / enough))
                   :ARG1-of (c2-16 / cause-01
                                   :ARG0 (c2-17 / want-01
                                                :ARG0 (c2-11 / they)
                                                :ARG1 (c2-0 / set-up-03
                                                            :ARG0 c2-11
                                                            :ARG1 (c2-8 / camp)
                                                            :location (c2-7 / here))
                                                :time (c2-14 / now)))
                   :location (c2-6 / state
                                   :name (c2-13 / name
                                                :op1 "Texas"))))

# ::snt :Can't believe,is it true!?
# ::tokens [":", "Ca", "n't", "believe", ",", "is", "it", "true", "!", "?"]
# ::lemmas [":", "can", "not", "believe", ",", "be", "it", "true", "!", "?"]
(c3-2 / possible-01
      :ARG1 (c3-0 / believe-01
                  :ARG1 (c3-3 / true-01
                              :ARG1 (c3-1 / it)))
      :polarity (c3-4 / amr-unknown)
      :polarity -)

# ::snt : Islamic Tribunal using Sharia law in TX has been confirmed
# ::tokens [":", "Islamic", "Tribunal", "using", "Sharia", "law", "in", "TX", "has", "been", "confirmed"]
# ::lemmas [":", "Islamic", "Tribunal", "use", "Sharia", "law", "in", "TX", "have", "be", "confirm"]
(c4-4 / confirm-01
      :ARG1 (c4-2 / tribunal
                  :mod (c4-8 / religious-group
                             :name (c4-3 / name
                                         :op1 "Islam"))
                  :ARG0-of (c4-6 / use-01
                                 :ARG1 (c4-1 / law
                                             :name (c4-7 / name
                                                         :op1 "Sharia"))
                                 :location (c4-0 / state
                                                 :name (c4-5 / name
                                                             :op1 "Texas")))))

# ::snt Dallas Texas is a sell-out &amp; the trouble JUST begins. SMH I USE to be a proud Texan. Use to be.
# ::tokens ["Dallas", "Texas", "is", "a", "sell", "-", "out", "&", "amp", ";", "the", "trouble", "JUST", "begins", ".", "SMH", "I", "USE", "to", "be", "a", "proud", "Texan", ".", "Use", "to", "be", "."]
# ::lemmas ["Dallas", "Texas", "be", "a", "sell", "-", "out", "&", "amp", ";", "the", "trouble", "just", "begin", ".", "smh", "i", "use", "to", "be", "a", "proud", "Texan", ".", "use", "to", "be", "."]
(c5-6 / multi-sentence
      :snt1 (c5-16 / and
                   :op1 (c5-0 / sell-out-03
                              :ARG1 (c5-9 / city
                                          :name (c5-8 / name
                                                      :op1 "Dallas")
                                          :location (c5-1 / state
                                                          :name (c5-15 / name
                                                                       :op1 "Texas"))))
                   :op2 (c5-2 / begin-01
                              :ARG1 (c5-5 / trouble-05)
                              :mod (c5-12 / just)))
      :snt2 (c5-11 / use-02
                   :ARG0 (c5-3 / i)
                   :ARG1 (c5-4 / pride-01
                               :ARG0 c5-3
                               :ARG1 c5-1
                               :name (c5-10 / name
                                            :op1 "Texas")))
      :mod (c5-7 / shit
                 :mode expressive)
      :snt3 (c5-13 / use-02
                   :ARG0 (c5-14 / you)
                   :ARG1 c5-4))

# ::snt look at Paris. It's here! Political correctness, destroying us
# ::tokens ["look", "at", "Paris", ".", "It", "'s", "here", "!", "Political", "correctness", ",", "destroying", "us"]
# ::lemmas ["look", "at", "Paris", ".", "it", "be", "here", "!", "political", "correctness", ",", "destroy", "we"]
(c6-5 / multi-sentence
      :snt1 (c6-4 / look-01
                  :ARG0 (c6-8 / you)
                  :ARG1 (c6-7 / city
                              :name (c6-10 / name
                                           :op1 "Paris"))
                  :mode imperative)
      :snt2 (c6-1 / be-located-at-91
                  :ARG1 (c6-2 / it)
                  :ARG2 (c6-9 / here))
      :snt3 (c6-6 / correct-02
                  :mod (c6-3 / politics)
                  :ARG0-of (c6-11 / destroy-01
                                  :ARG1 (c6-0 / we))))

# ::snt where is Chuck Norris, Tx Ranger when you need him?
# ::tokens ["where", "is", "Chuck", "Norris", ",", "Tx", "Ranger", "when", "you", "need", "him", "?"]
# ::lemmas ["where", "be", "Chuck", "Norris", ",", "Tx", "Ranger", "when", "you", "need", "he", "?"]
(c8-0 / be-located-at-91
      :ARG1 (c8-1 / person
                  :name (c8-7 / name
                              :op1 "Chuck"
                              :op2 "Norris")
                  :ARG0-of (c8-4 / have-org-role-91
                                 :name (c8-6 / name
                                             :op1 "Tx"
                                             :op2 "Ranger")
                                 :ARG2 c8-1))
      :ARG2 (c8-2 / amr-unknown)
      :time (c8-3 / need-01
                  :ARG0 (c8-5 / you)
                  :ARG1 c8-1))
