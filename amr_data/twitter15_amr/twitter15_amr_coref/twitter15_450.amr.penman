# ::snt wow!really!?unbelievable...
# ::tokens ["wow!really!?unbelievable", "..."]
# ::lemmas ["wow!really!?unbelievable", "..."]
(c2-3 / multi-sentence
      :snt1 (c2-4 / wow
                  :ARG1-of (c2-2 / real-04)
                  :mode expressive)
      :snt2 (c2-1 / possible-01
                  :ARG1 (c2-0 / believe-01)
                  :polarity -))

# ::snt bullshit! Spider not that big. Get the facts.
# ::tokens ["bullshit", "!", "Spider", "not", "that", "big", ".", "Get", "the", "facts", "."]
# ::lemmas ["bullshit", "!", "Spider", "not", "that", "big", ".", "get", "the", "fact", "."]
(c3-3 / multi-sentence
      :snt1 (c3-0 / bullshit-01
                  :mode expressive)
      :snt2 (c3-4 / big
                  :degree (c3-2 / that)
                  :domain (c3-1 / person
                                :name (c3-6 / name
                                            :op1 "Spider"))
                  :polarity -)
      :snt3 (c3-8 / get-30
                  :ARG0 (c3-5 / you)
                  :ARG1 (c3-7 / fact)
                  :mode imperative))

# ::snt saw this and just laughed and laughed and thought you would get a kick out of it!
# ::tokens ["saw", "this", "and", "just", "laughed", "and", "laughed", "and", "thought", "you", "would", "get", "a", "kick", "out", "of", "it", "!"]
# ::lemmas ["see", "this", "and", "just", "laugh", "and", "laugh", "and", "think", "you", "would", "get", "a", "kick", "out", "of", "it", "!"]
(c4-8 / and
      :op1 (c4-0 / see-01
                 :ARG0 (c4-1 / i)
                 :ARG1 (c4-3 / this))
      :op2 (c4-2 / laugh-01
                 :ARG0 c4-1
                 :mod (c4-6 / just))
      :op3 (c4-5 / laugh-01
                 :ARG0 c4-1
                 :mod c4-6)
      :op4 (c4-4 / think-01
                 :ARG0 c4-1
                 :ARG1 (c4-10 / get-01
                              :ARG0 (c4-7 / you)
                              :ARG1 (c4-9 / kick-01)
                              :ARG2 c4-3)))

# ::snt : : Goliath encounter: Puppy-sized spider! I would die
# ::tokens [":", ":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "!", "I", "would", "die"]
# ::lemmas [":", ":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "!", "i", "would", "die"]
(c5-4 / multi-sentence
      :snt1 (c5-7 / encounter-01
                  :ARG0 (c5-3 / person
                              :name (c5-5 / name
                                          :op1 "Goliath")))
      :snt2 (c5-0 / size-01
                  :ARG1 (c5-1 / spider)
                  :ARG2 (c5-8 / puppy))
      :snt3 (c5-6 / die-01
                  :ARG1 (c5-2 / i)))

# ::snt OKAY I WASNT THE ONLY ONE THINKING IT
# ::tokens ["OKAY", "I", "WASNT", "THE", "ONLY", "ONE", "THINKING", "IT"]
# ::lemmas ["okay", "i", "wasnt", "the", "only", "one", "thinking", "it"]
(c7-1 / think-01
      :ARG0 (c7-0 / i
                  :mod (c7-2 / only))
      :ARG1 (c7-3 / it)
      :ARG1-of (c7-4 / okay-04)
      :polarity -)

# ::snt Size of a puppy, huh? What do ya throw this guy when you wanna play catch? Scary.
# ::tokens ["Size", "of", "a", "puppy", ",", "huh", "?", "What", "do", "ya", "throw", "this", "guy", "when", "you", "wanna", "play", "catch", "?", "Scary", "."]
# ::lemmas ["size", "of", "a", "puppy", ",", "huh", "?", "what", "do", "ya", "throw", "this", "guy", "when", "you", "wanna", "play", "catch", "?", "scary", "."]
(c8-7 / multi-sentence
      :snt1 (c8-10 / request-confirmation-91
                   :ARG1 (c8-0 / size
                               :poss (c8-3 / puppy)))
      :snt2 (c8-4 / throw-01
                  :ARG0 (c8-9 / you)
                  :ARG1 (c8-12 / guy
                               :mod (c8-5 / this))
                  :ARG2 (c8-6 / amr-unknown)
                  :time (c8-1 / want-01
                              :ARG0 c8-9
                              :ARG1 (c8-11 / play-01
                                           :ARG0 c8-9
                                           :ARG1 (c8-8 / catch-03
                                                       :ARG0 c8-9))))
      :snt3 (c8-2 / scary-03))

# ::snt I love tarantulas-- as entrees and as pets.
# ::tokens ["I", "love", "tarantulas--", "as", "entrees", "and", "as", "pets", "."]
# ::lemmas ["i", "love", "tarantulas--", "as", "entree", "and", "as", "pet", "."]
(c10-2 / love-01
       :ARG0 (c10-0 / i)
       :ARG1 (c10-3 / tarantula
                    :prep-as (c10-4 / and
                                    :op1 (c10-5 / entree)
                                    :op2 (c10-1 / pet))))

# ::snt : Puppy-sized spider surprises scientist in rainforest -
# ::tokens [":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-"]
# ::lemmas [":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainforest", "-"]
(c11-0 / surprise-01
       :ARG0 (c11-1 / spider
                    :ARG1-of (c11-3 / size-01
                                    :ARG2 (c11-2 / puppy)))
       :ARG1 (c11-5 / scientist)
       :location (c11-4 / rainforest))

# ::snt ahhh hell no id shoot it
# ::tokens ["ahhh", "hell", "no", "i", "d", "shoot", "it"]
# ::lemmas ["ahhh", "hell", "no", "i", "d", "shoot", "it"]
(c12-0 / shoot-02
       :ARG0 (c12-1 / i)
       :ARG1 (c12-3 / it)
       :mod (c12-2 / hell
                   :mod (c12-4 / ah
                               :mode expressive)
                   :mode expressive)
       :polarity -)

# ::snt : Goliath encounter: Puppy-sized spider surprises scientist in rainforest -
# ::tokens [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-"]
# ::lemmas [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainforest", "-"]
(c13-6 / and
       :op1 (c13-7 / encounter-01
                   :ARG1 (c13-2 / person
                                :name (c13-5 / name
                                             :op1 "Goliath")))
       :op2 (c13-0 / surprise-01
                   :ARG0 (c13-1 / spider
                                :ARG1-of (c13-4 / size-01
                                                :ARG2 (c13-8 / puppy)))
                   :ARG1 (c13-9 / scientist)
                   :location (c13-3 / rainforest)))

# ::snt Lol!
# ::tokens ["Lol", "!"]
# ::lemmas ["Lol", "!"]
(c14-0 / laugh-01
       :manner (c14-1 / loud)
       :mode expressive)

# ::snt I'll concur.
# ::tokens ["I", "'ll", "concur", "."]
# ::lemmas ["i", "'ll", "concur", "."]
(c15-1 / concur-01
       :ARG0 (c15-0 / i))

# ::snt : Goliath encounter: Puppy-sized spider surprises scientist in rainforest - I'm out
# ::tokens [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-", "I", "'m", "out"]
# ::lemmas [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainfor", "-", "i", "be", "out"]
(c16-7 / multi-sentence
       :snt1 (c16-10 / encounter-01
                     :ARG1 (c16-3 / person
                                  :name (c16-9 / name
                                               :op1 "Goliath")))
       :snt2 (c16-0 / surprise-01
                    :ARG0 (c16-1 / spider
                                 :ARG1-of (c16-8 / size-01
                                                 :ARG2 (c16-11 / puppy)))
                    :ARG1 (c16-12 / scientist)
                    :location (c16-5 / rainforest))
       :snt3 (c16-2 / be-located-at-91
                    :ARG1 (c16-4 / i)
                    :ARG2 (c16-6 / out)))

# ::snt : Goliath encounter: Puppy-sized spider surprises scientist in rainforest -
# ::tokens [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-"]
# ::lemmas [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainforest", "-"]
(c17-6 / and
       :op1 (c17-7 / encounter-01
                   :ARG1 (c17-2 / person
                                :name (c17-5 / name
                                             :op1 "Goliath")))
       :op2 (c17-0 / surprise-01
                   :ARG0 (c17-1 / spider
                                :ARG1-of (c17-4 / size-01
                                                :ARG2 (c17-8 / puppy)))
                   :ARG1 (c17-9 / scientist)
                   :location (c17-3 / rainforest)))

# ::snt . No longer positive of mine,,,,Definately not spiders though...was zombies....but now hooked on The Walking Dead
# ::tokens [".", "No", "longer", "positive", "of", "mine,,,,Definately", "not", "spiders", "though", "...", "was", "zombies", "....", "but", "now", "hooked", "on", "The", "Walking", "Dead"]
# ::lemmas [".", "no", "long", "positive", "of", "mine,,,,definately", "not", "spider", "though", "...", "be", "zombie", "....", "but", "now", "hook", "on", "The", "Walking", "Dead"]
(c18-7 / multi-sentence
       :snt1 (c18-4 / positive
                    :domain (c18-6 / thing
                                   :poss (c18-2 / i))
                    :time (c18-11 / no-longer)
                    :ARG1-of (c18-9 / have-concession-91
                                    :snt2-of c18-7))
       :ARG1 (c18-0 / zombie
                    :domain (c18-13 / person
                                    :ARG0-of (c18-1 / spiders-01)
                                    :mod (c18-12 / definite
                                                 :polarity -)))
       :ARG2 (c18-3 / hook-01
                    :ARG1 c18-13
                    :ARG2 (c18-5 / book
                                 :name (c18-10 / name
                                               :op1 "The"
                                               :op2 "Walking"
                                               :op3 "Dead"))
                    :time (c18-8 / now)))

# ::snt oh helllllllllll no
# ::tokens ["oh", "helllllllllll", "no"]
# ::lemmas ["oh", "helllllllllll", "no"]
(c19-0 / hell
       :mode expressive)

# ::snt spiders
# ::tokens ["spiders"]
# ::lemmas ["spider"]
(c20-1 / person
       :ARG0-of (c20-0 / spy-01))

# ::snt EEEEEWWWWW!!!!!
# ::tokens ["EEEEEWWWWW", "!", "!", "!", "!", "!"]
# ::lemmas ["EEEEEWWWWW", "!", "!", "!", "!", "!"]
(c21-0 / ewww)

# ::snt it's just one of them isn't it
# ::tokens ["it", "'s", "just", "one", "of", "them", "is", "n't", "it"]
# ::lemmas ["it", "be", "just", "one", "of", "they", "be", "not", "it"]
(c22-0 / include-91
       :ARG1 (c22-3 / it)
       :ARG2 (c22-1 / thing
                    :quant 1)
       :mod (c22-2 / just)
       :ARG1-of (c22-4 / request-confirmation-91))

# ::snt My Son found this in his garden in Kew, London today
# ::tokens ["My", "Son", "found", "this", "in", "his", "garden", "in", "Kew", ",", "London", "today"]
# ::lemmas ["my", "Son", "find", "this", "in", "his", "garden", "in", "Kew", ",", "London", "today"]
(c23-10 / find-01
        :ARG0 (c23-2 / person
                     :ARG0-of (c23-6 / have-rel-role-91
                                     :ARG1 (c23-1 / i)
                                     :ARG2 (c23-0 / son)))
        :ARG1 (c23-3 / this)
        :location (c23-7 / garden
                         :poss c23-2
                         :location (c23-5 / city
                                          :name (c23-9 / name
                                                       :op1 "Kew")
                                          :location c23-5
                                          :name (c23-8 / name
                                                       :op1 "London")))
        :time (c23-4 / today))

# ::snt sweet dreams xx
# ::tokens ["sweet", "dreams", "xx"]
# ::lemmas ["sweet", "dream", "xx"]
(c24-1 / dream-01
       :mod (c24-0 / sweet))

# ::snt . friendlier photos on the guy's website! Eg, yoda the tube nosed fruit bat
# ::tokens [".", "friendlier", "photos", "on", "the", "guy", "'s", "website", "!", "Eg", ",", "yoda", "the", "tube", "nosed", "fruit", "bat"]
# ::lemmas [".", "friendly", "photo", "on", "the", "guy", "'s", "website", "!", "Eg", ",", "yoda", "the", "tube", "nosed", "fruit", "bat"]
(c25-5 / multi-sentence
       :snt1 (c25-3 / photo
                    :medium (c25-9 / website
                                   :poss (c25-13 / guy))
                    :ARG1-of (c25-7 / have-degree-91
                                    :ARG2 (c25-11 / friendly-01
                                                  :ARG1 c25-3)
                                    :ARG3 (c25-10 / more)))
       :snt2 (c25-1 / say-01
                    :ARG1 (c25-12 / ewww)
                    :ARG2 (c25-8 / you)
                    :ARG3 (c25-2 / bat
                                 :mod (c25-0 / fruit)
                                 :ARG1-of (c25-6 / nose-01
                                                 :ARG2 (c25-4 / tube)))))

# ::snt  Puppy-sized spider surprises scientist in rainforest - this!
# ::tokens [" ", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-", "this", "!"]
# ::lemmas [" ", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainfor", "-", "this", "!"]
(c27-0 / surprise-01
       :ARG0 (c27-1 / spider
                    :ARG1-of (c27-4 / size-01
                                    :ARG2 (c27-2 / puppy)))
       :ARG1 (c27-6 / scientist)
       :location (c27-5 / rainforest)
       :mod (c27-3 / this
                   :mode expressive))

# ::snt FUCK. RT Goliath encounter: Puppy-sized spider surprises scientist in rainforest -
# ::tokens ["FUCK", ".", "RT", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-"]
# ::lemmas ["FUCK", ".", "RT", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainforest", "-"]
(c28-4 / multi-sentence
       :snt1 (c28-11 / fuck-01
                     :mode expressive)
       :snt2 (c28-10 / encounter-01
                     :ARG1 (c28-2 / person
                                  :name (c28-8 / name
                                               :op1 "Goliath"))
                     :mod (c28-6 / person
                                 :name (c28-7 / name
                                              :op1 "RT")))
       :snt3 (c28-0 / surprise-01
                    :ARG0 (c28-1 / spider
                                 :ARG1-of (c28-5 / size-01
                                                 :ARG2 (c28-9 / puppy)))
                    :ARG1 (c28-12 / scientist)
                    :location (c28-3 / rainforest)))

# ::snt I think they should put then in "I'm a celeb" this year lol
# ::tokens ["I", "think", "they", "should", "put", "then", "in", "\"", "I", "'m", "a", "celeb", "\"", "this", "year", "lol"]
# ::lemmas ["i", "think", "they", "should", "put", "then", "in", "\"", "i", "be", "a", "celeb", "\"", "this", "year", "lol"]
(c30-4 / think-01
       :ARG0 (c30-0 / i)
       :ARG1 (c30-10 / recommend-01
                     :ARG1 (c30-1 / put-01
                                  :ARG0 (c30-5 / they)
                                  :ARG1 (c30-11 / person
                                                :mod (c30-6 / celebrity)
                                                :domain c30-0)
                                  :time (c30-9 / year
                                               :mod (c30-2 / this))
                                  :mod (c30-7 / then)))
       :ARG2-of (c30-3 / laugh-01
                       :ARG0 c30-0
                       :manner (c30-8 / loud)))

# ::snt OMG!!!!!! Nightmares ahead!!!!!
# ::tokens ["OMG", "!", "!", "!", "!", "!", "!", "Nightmares", "ahead", "!", "!", "!", "!", "!"]
# ::lemmas ["OMG", "!", "!", "!", "!", "!", "!", "nightmare", "ahead", "!", "!", "!", "!", "!"]
(c32-3 / multi-sentence
       :snt1 (c32-1 / oh-my-god
                    :mode expressive)
       :snt2 (c32-0 / nightmare
                    :time (c32-2 / ahead)))

# ::snt That's one of my worse nightmares! Hodgins'd love have one of those in the lab.Cam not so much.
# ::tokens ["That", "'s", "one", "of", "my", "worse", "nightmares", "!", "Hodgins'd", "love", "have", "one", "of", "those", "in", "the", "lab", ".", "Cam", "not", "so", "much", "."]
# ::lemmas ["that", "be", "one", "of", "my", "bad", "nightmare", "!", "hodgins'd", "love", "have", "one", "of", "those", "in", "the", "lab", ".", "cam", "not", "so", "much", "."]
(c33-14 / multi-sentence
        :snt1 (c33-17 / nightmare
                      :ARG1-of (c33-1 / include-91
                                      :ARG2 (c33-16 / nightmare
                                                    :poss (c33-5 / i)
                                                    :ARG1-of (c33-21 / have-degree-91
                                                                     :ARG2 (c33-7 / bad-07
                                                                                  :ARG1 c33-16)
                                                                     :ARG3 (c33-12 / more))))
                      :domain (c33-20 / that))
        :snt2 (c33-2 / love-01
                     :ARG0 (c33-13 / person
                                   :name (c33-9 / name
                                                :op1 "Hodgins"))
                     :ARG1 (c33-8 / have-03
                                  :ARG0 c33-13
                                  :ARG1 (c33-18 / nightmare
                                                :ARG1-of (c33-3 / include-91
                                                                :ARG2 (c33-11 / nightmare
                                                                              :location (c33-4 / lab))))))
        :snt3 (c33-6 / have-mod-91
                     :ARG1 (c33-19 / person
                                   :name (c33-15 / name
                                                 :op1 "Cam"))
                     :ARG2 (c33-10 / much
                                   :degree (c33-0 / so
                                                  :polarity -))))

# ::snt Eek! I think needs one as a pet in the lab...
# ::tokens ["Eek", "!", "I", "think", "needs", "one", "as", "a", "pet", "in", "the", "lab", "..."]
# ::lemmas ["eek", "!", "i", "think", "need", "one", "as", "a", "pet", "in", "the", "lab", "..."]
(c34-3 / think-01
       :ARG0 (c34-0 / i)
       :ARG1 (c34-5 / need-01
                    :ARG0 c34-0
                    :ARG1 (c34-4 / one)
                    :prep-as (c34-1 / pet)
                    :location (c34-2 / lab))
       :mod (c34-6 / eek
                   :mode expressive))

# ::snt : Goliath encounter: Puppy-sized spider surprises scientist in rainforest - . WHOA!!
# ::tokens [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-", ".", "WHOA", "!", "!"]
# ::lemmas [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainforest", "-", ".", "whoa", "!", "!"]
(c35-5 / multi-sentence
       :snt1 (c35-8 / encounter-01
                    :ARG1 (c35-3 / person
                                 :name (c35-7 / name
                                              :op1 "Goliath")))
       :snt2 (c35-0 / surprise-01
                    :ARG0 (c35-2 / spider
                                 :ARG1-of (c35-6 / size-01
                                                 :ARG2 (c35-9 / puppy)))
                    :ARG1 (c35-10 / scientist)
                    :location (c35-4 / rainforest))
       :snt3 (c35-1 / WHOA
                    :mode expressive))

# ::snt Remind me never to go to Guyana
# ::tokens ["Remind", "me", "never", "to", "go", "to", "Guyana"]
# ::lemmas ["remind", "i", "never", "to", "go", "to", "Guyana"]
(c36-4 / remind-01
       :ARG0 (c36-3 / you)
       :ARG1 (c36-6 / go-02
                    :ARG0 (c36-0 / i)
                    :ARG4 (c36-1 / country
                                 :name (c36-2 / name
                                              :op1 "Guyana"))
                    :time (c36-5 / ever)
                    :polarity -)
       :ARG2 c36-0
       :mode imperative)

# ::snt  Puppy-sized spider surprises scientist in rainforest
# ::tokens [" ", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest"]
# ::lemmas [" ", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainfor"]
(c37-0 / surprise-01
       :ARG0 (c37-1 / spider
                    :ARG1-of (c37-3 / size-01
                                    :ARG2 (c37-2 / puppy)))
       :ARG1 (c37-5 / scientist)
       :location (c37-4 / rainforest))

# ::snt :Cat-sized?!? Not cool dawg.
# ::tokens [":", "Cat", "-", "sized", "?", "!", "?", "Not", "cool", "dawg", "."]
# ::lemmas [":", "cat", "-", "sized", "?", "!", "?", "not", "cool", "dawg", "."]
(c38-1 / multi-sentence
       :snt1 (c38-0 / size-01
                    :polarity (c38-4 / amr-unknown)
                    :ARG1 (c38-3 / cat))
       :snt2 (c38-2 / cool-04
                    :ARG1 (c38-5 / dawg)
                    :polarity -
                    :mode expressive))

# ::snt : Goliath encounter: Puppy-sized spider surprises scientist in rainforest -
# ::tokens [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-"]
# ::lemmas [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainforest", "-"]
(c39-6 / and
       :op1 (c39-7 / encounter-01
                   :ARG1 (c39-2 / person
                                :name (c39-5 / name
                                             :op1 "Goliath")))
       :op2 (c39-0 / surprise-01
                   :ARG0 (c39-1 / spider
                                :ARG1-of (c39-4 / size-01
                                                :ARG2 (c39-8 / puppy)))
                   :ARG1 (c39-9 / scientist)
                   :location (c39-3 / rainforest)))

# ::snt . -, Theraphosa blondi,
# ::tokens [".", "-", ",", "Theraphosa", "blondi", ","]
# ::lemmas [".", "-", ",", "Theraphosa", "blondi", ","]
(c40-1 / person
       :name (c40-0 / name
                    :op1 "Theraphosa"
                    :op2 "Blairi"))

# ::snt : Goliath encounter: Puppy-sized spider surprises scientist in rainforest - OH FUCK
# ::tokens [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-", "OH", "FUCK"]
# ::lemmas [":", "Goliath", "encounter", ":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainfor", "-", "oh", "FUCK"]
(c41-5 / multi-sentence
       :snt1 (c41-8 / encounter-01
                    :ARG1 (c41-2 / person
                                 :name (c41-7 / name
                                              :op1 "Goliath")))
       :snt2 (c41-0 / surprise-01
                    :ARG0 (c41-1 / spider
                                 :ARG1-of (c41-6 / size-01
                                                 :ARG2 (c41-9 / puppy)))
                    :ARG1 (c41-10 / scientist)
                    :location (c41-3 / rainforest))
       :snt3 (c41-4 / oh-my-god
                    :mode expressive))

# ::snt that's bigger than my dick on a cold wet Wednesday night in stoke
# ::tokens ["that", "'s", "bigger", "than", "my", "dick", "on", "a", "cold", "wet", "Wednesday", "night", "in", "stoke"]
# ::lemmas ["that", "be", "big", "than", "my", "dick", "on", "a", "cold", "wet", "Wednesday", "night", "in", "stoke"]
(c42-9 / have-degree-91
       :ARG1 (c42-4 / that)
       :ARG2 (c42-2 / big)
       :ARG3 (c42-5 / more)
       :ARG4 (c42-11 / dick
                     :part-of (c42-3 / i)
                     :location (c42-0 / stoke)
                     :ARG1-of (c42-10 / wet-01
                                      :ARG1-of (c42-6 / cold-01)
                                      :time (c42-1 / date-entity
                                                   :weekday (c42-7 / wednesday)
                                                   :dayperiod (c42-8 / night)))))

# ::snt GOODBYE RT : Puppy-sized spider surprises scientist in rainforest -
# ::tokens ["GOODBYE", "RT", ":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-"]
# ::lemmas ["GOODBYE", "rt", ":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainforest", "-"]
(c43-7 / and
       :op1 (c43-1 / byline-91
                   :ARG1 (c43-3 / publication
                                :name (c43-6 / name
                                             :op1 "Goodbye")))
       :op2 (c43-0 / surprise-01
                   :ARG0 (c43-2 / spider
                                :ARG1-of (c43-5 / size-01
                                                :ARG2 (c43-8 / puppy)))
                   :ARG1 (c43-9 / scientist)
                   :location (c43-4 / rainforest)))

# ::snt uppy-sized spider in rainforest -
# ::tokens ["uppy", "-", "sized", "spider", "in", "rainforest", "-"]
# ::lemmas ["uppy", "-", "sized", "spider", "in", "rainfor", "-"]
(c44-2 / be-located-at-91
       :ARG1 (c44-0 / spider
                    :ARG1-of (c44-1 / size-01
                                    :ARG2 (c44-3 / uppy)))
       :ARG2 (c44-4 / rainforest))

# ::snt ewwwww can you say nasty kill that ugly thing
# ::tokens ["ewwwww", "can", "you", "say", "nasty", "kill", "that", "ugly", "thing"]
# ::lemmas ["ewwwww", "can", "you", "say", "nasty", "kill", "that", "ugly", "thing"]
(c45-1 / possible-01
       :ARG1 (c45-0 / say-01
                    :ARG0 (c45-5 / you)
                    :ARG1 (c45-7 / kill-01
                                 :ARG0 (c45-6 / nasty)
                                 :ARG1 (c45-2 / thing
                                              :mod (c45-4 / ugly)
                                              :mod (c45-3 / that))))
       :mod (c45-8 / ewww
                   :mode expressive))

# ::snt Jesus Christ!
# ::tokens ["Jesus", "Christ", "!"]
# ::lemmas ["Jesus", "Christ", "!"]
(c46-1 / person
       :name (c46-0 / name
                    :op1 "Jesus"
                    :op2 "Christ")
       :mode expressive)

# ::snt is that the one on old Sheldon road heading to beaufort
# ::tokens ["is", "that", "the", "one", "on", "old", "Sheldon", "road", "heading", "to", "beaufort"]
# ::lemmas ["be", "that", "the", "one", "on", "old", "Sheldon", "road", "head", "to", "beaufort"]
(c47-6 / event
       :mod (c47-0 / one
                   :location (c47-5 / road
                                    :name (c47-1 / name
                                                 :op1 "Old"
                                                 :op2 "Sheldon"
                                                 :op3 "Road"))
                   :ARG0-of (c47-3 / head-02
                                   :ARG1 (c47-2 / city
                                                :name (c47-4 / name
                                                             :op1 "Beaufort")))))

# ::snt DONT WANNA SEE THAT!!!!! it can stay where it is thanks.
# ::tokens ["DONT", "WANNA", "SEE", "THAT", "!", "!", "!", "!", "!", "it", "can", "stay", "where", "it", "is", "thanks", "."]
# ::lemmas ["dont", "wanna", "SEE", "that", "!", "!", "!", "!", "!", "it", "can", "stay", "where", "it", "be", "thank", "."]
(c48-9 / multi-sentence
       :snt1 (c48-0 / see-01
                    :ARG0 (c48-10 / you)
                    :ARG1 (c48-7 / that)
                    :polarity -
                    :mode imperative)
       :snt2 (c48-4 / possible-01
                    :ARG1 (c48-2 / stay-01
                                 :ARG1 (c48-3 / it)
                                 :location (c48-8 / thing
                                                  :ARG2-of (c48-5 / be-located-at-91
                                                                  :ARG1 c48-3)))
                    :ARG2-of (c48-6 / thank-01
                                    :ARG1 (c48-1 / you))))

# ::snt : Puppy-sized spider surprises scientist in rainforest -
# ::tokens [":", "Puppy", "-", "sized", "spider", "surprises", "scientist", "in", "rainforest", "-"]
# ::lemmas [":", "Puppy", "-", "sized", "spider", "surprise", "scientist", "in", "rainforest", "-"]
(c49-0 / surprise-01
       :ARG0 (c49-1 / spider
                    :ARG1-of (c49-3 / size-01
                                    :ARG2 (c49-2 / puppy)))
       :ARG1 (c49-5 / scientist)
       :location (c49-4 / rainforest))

# ::snt the end times are near
# ::tokens ["the", "end", "times", "are", "near"]
# ::lemmas ["the", "end", "time", "be", "near"]
(c50-0 / near-01
       :ARG1 (c50-1 / time
                    :ARG1-of (c50-2 / end-01)))
