# ::snt : Cops swarm star Stephen Collins' home after suicide report The irony.
# ::tokens [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report", "The", "irony", "."]
# ::lemmas [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report", "the", "irony", "."]
(c1-6 / multi-sentence
      :snt1 (c1-0 / swarm-01
                  :ARG0 (c1-8 / cop)
                  :ARG1 (c1-9 / home
                              :poss (c1-3 / person
                                          :name (c1-10 / name
                                                       :op1 "Stephen"
                                                       :op2 "Collins")
                                          :ARG0-of (c1-1 / star-01)))
                  :time (c1-5 / after
                              :op1 (c1-4 / report-01
                                         :ARG1 (c1-7 / suicide))))
      :snt2 (c1-2 / irony))

# ::snt : Cops swarm star Stephen Collins' home after suicide report HOMIE&gt;
# ::tokens [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report", "HOMIE&gt", ";"]
# ::lemmas [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report", "HOMIE&gt", ";"]
(c2-0 / swarm-01
      :ARG0 (c2-6 / cop)
      :ARG1 (c2-7 / home
                  :poss (c2-2 / person
                              :name (c2-8 / name
                                          :op1 "Stephen"
                                          :op2 "Collins")
                              :ARG0-of (c2-1 / star-01)))
      :time (c2-4 / after
                  :op1 (c2-3 / report-01
                             :ARG1 (c2-5 / suicide))))

# ::snt This is from last week!
# ::tokens ["This", "is", "from", "last", "week", "!"]
# ::lemmas ["this", "be", "from", "last", "week", "!"]
(c3-2 / be-from-91
      :ARG1 (c3-1 / this)
      :ARG2 (c3-0 / week
                  :mod (c3-3 / last)))

# ::snt : Cops swarm star Stephen Collins' home after suicide report gerl
# ::tokens [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report", "gerl"]
# ::lemmas [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report", "gerl"]
(c4-0 / swarm-01
      :ARG0 (c4-6 / cop)
      :ARG1 (c4-7 / home
                  :poss (c4-2 / person
                              :name (c4-9 / name
                                          :op1 "Stephen"
                                          :op2 "Collins")
                              :ARG0-of (c4-1 / star-01)))
      :time (c4-4 / after
                  :op1 (c4-3 / report-01
                             :ARG1 (c4-5 / suicide)))
      :ARG1-of (c4-11 / say-01
                      :ARG0 (c4-10 / publication
                                   :name (c4-8 / name
                                               :op1 "Gerl"))))

# ::snt This family is going through a tough time. I think media should step back while they iron things out.
# ::tokens ["This", "family", "is", "going", "through", "a", "tough", "time", ".", "I", "think", "media", "should", "step", "back", "while", "they", "iron", "things", "out", "."]
# ::lemmas ["this", "family", "be", "go", "through", "a", "tough", "time", ".", "i", "think", "medium", "should", "step", "back", "while", "they", "iron", "thing", "out", "."]
(c5-6 / multi-sentence
      :snt1 (c5-8 / go-through-20
                  :ARG0 (c5-13 / family
                               :mod (c5-5 / this))
                  :ARG1 (c5-4 / time
                              :ARG1-of (c5-3 / tough-02)))
      :snt2 (c5-7 / think-01
                  :ARG0 (c5-1 / i)
                  :ARG1 (c5-10 / recommend-01
                               :ARG1 (c5-0 / step-01
                                           :ARG1 (c5-12 / media)
                                           :ARG2 (c5-2 / back)
                                           :time (c5-9 / iron-out-02
                                                       :ARG0 c5-12
                                                       :ARG1 (c5-11 / thing))))))

# ::snt this is a week old!!! I'm tired if repeats!
# ::tokens ["this", "is", "a", "week", "old", "!", "!", "!", "I", "'m", "tired", "if", "repeats", "!"]
# ::lemmas ["this", "be", "a", "week", "old", "!", "!", "!", "i", "be", "tired", "if", "repeat", "!"]
(c6-6 / multi-sentence
      :snt1 (c6-7 / age-01
                  :ARG1 (c6-3 / this)
                  :ARG2 (c6-4 / temporal-quantity
                              :unit (c6-0 / week)
                              :quant 1))
      :snt2 (c6-2 / tire-01
                  :ARG0 (c6-5 / repeat-01
                              :ARG1 c6-3)
                  :ARG1 (c6-1 / i)))

# ::snt why repost this when it happened days ago?
# ::tokens ["why", "repost", "this", "when", "it", "happened", "days", "ago", "?"]
# ::lemmas ["why", "repost", "this", "when", "it", "happen", "days", "ago", "?"]
(c7-5 / cause-01
      :ARG0 (c7-7 / amr-unknown)
      :ARG1 (c7-1 / repost-01
                  :ARG1 (c7-2 / this)
                  :time (c7-0 / before
                              :op1 (c7-6 / now)
                              :quant (c7-4 / multiple
                                           :op1 (c7-3 / temporal-quantity
                                                      :unit (c7-8 / day)
                                                      :quant 1)))))

# ::snt TMZ wrong for this repeat story.
# ::tokens ["TMZ", "wrong", "for", "this", "repeat", "story", "."]
# ::lemmas ["tmz", "wrong", "for", "this", "repeat", "story", "."]
(c8-5 / wrong-04
      :ARG1 (c8-1 / person
                  :name (c8-4 / name
                              :op1 "TMZ"))
      :ARG2 (c8-0 / story
                  :ARG1-of (c8-2 / repeat-01)
                  :mod (c8-3 / this)))

# ::snt He wasn't on suicide watch after the first incident? I guess People wanted him to kill himself.
# ::tokens ["He", "was", "n't", "on", "suicide", "watch", "after", "the", "first", "incident", "?", "I", "guess", "People", "wanted", "him", "to", "kill", "himself", "."]
# ::lemmas ["he", "be", "not", "on", "suicide", "watch", "after", "the", "first", "incident", "?", "i", "guess", "people", "want", "he", "to", "kill", "himself", "."]
(c9-6 / multi-sentence
      :snt1 (c9-11 / watch-01
                   :ARG0 (c9-9 / he)
                   :ARG1 (c9-0 / suicide)
                   :time (c9-5 / after
                               :op1 (c9-1 / incident
                                          :ord (c9-4 / ordinal-entity
                                                     :value 1)))
                   :polarity (c9-7 / amr-unknown)
                   :polarity -)
      :snt2 (c9-13 / guess-01
                   :ARG0 (c9-10 / i)
                   :ARG1 (c9-8 / want-01
                               :ARG0 (c9-3 / person)
                               :ARG1 (c9-12 / kill-01
                                            :ARG0 (c9-2 / he
                                                        :ARG1-of c9-12)))))

# ::snt Why on earth are you retweeting your old mistaken stories? Dumb.
# ::tokens ["Why", "on", "earth", "are", "you", "retweeting", "your", "old", "mistaken", "stories", "?", "Dumb", "."]
# ::lemmas ["why", "on", "earth", "be", "you", "retweete", "your", "old", "mistaken", "story", "?", "dumb", "."]
(c10-4 / multi-sentence
       :snt1 (c10-5 / cause-01
                    :ARG0 (c10-7 / amr-unknown
                                 :location (c10-9 / earth))
                    :ARG1 (c10-2 / retweet-01
                                 :ARG0 (c10-6 / you)
                                 :ARG1 (c10-1 / story
                                              :ARG1-of (c10-8 / mistake-01
                                                              :ARG0 c10-6)
                                              :mod (c10-3 / old))))
       :snt2 (c10-0 / dumb))

# ::snt wow, this saga will not end well regardless.
# ::tokens ["wow", ",", "this", "saga", "will", "not", "end", "well", "regardless", "."]
# ::lemmas ["wow", ",", "this", "saga", "will", "not", "end", "well", "regardless", "."]
(c11-5 / end-01
       :ARG1 (c11-0 / saga
                    :mod (c11-2 / this))
       :manner (c11-4 / well-09)
       :ARG1-of (c11-1 / regardless-91)
       :mod (c11-3 / wow
                   :mode expressive)
       :polarity -)

# ::snt I wonder how many of his victims have wanted or have attempted or had suicidal ideations regarding what happened to them
# ::tokens ["I", "wonder", "how", "many", "of", "his", "victims", "have", "wanted", "or", "have", "attempted", "or", "had", "suicidal", "ideations", "regarding", "what", "happened", "to", "them"]
# ::lemmas ["i", "wonder", "how", "many", "of", "his", "victim", "have", "want", "or", "have", "attempt", "or", "have", "suicidal", "ideation", "regard", "what", "happen", "to", "they"]
(c12-10 / wonder-01
        :ARG0 (c12-1 / i)
        :ARG1 (c12-4 / or
                     :op1 (c12-7 / want-01
                                 :ARG0 (c12-3 / person
                                              :ARG1-of (c12-11 / victimize-01
                                                               :ARG0 (c12-8 / he))
                                              :quant (c12-6 / many))
                                 :ARG1 (c12-0 / suicide))
                     :op2 (c12-5 / attempt-01
                                 :ARG0 c12-3
                                 :ARG1 c12-0)
                     :op3 (c12-2 / have-03
                                 :ARG0 c12-3
                                 :ARG1 (c12-9 / ideation
                                              :mod c12-0
                                              :topic (c12-12 / event
                                                             :beneficiary c12-3)))))

# ::snt how many times you gonna post this shit?
# ::tokens ["how", "many", "times", "you", "gon", "na", "post", "this", "shit", "?"]
# ::lemmas ["how", "many", "time", "you", "going", "to", "post", "this", "shit", "?"]
(c13-1 / post-01
       :ARG0 (c13-3 / you)
       :ARG1 (c13-0 / shit
                    :mod (c13-2 / this))
       :frequency (c13-4 / amr-unknown))

# ::snt : Cops swarm star Stephen Collins' home after suicide report
# ::tokens [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report"]
# ::lemmas [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report"]
(c14-0 / swarm-01
       :ARG0 (c14-6 / cop)
       :ARG1 (c14-7 / home
                    :poss (c14-2 / person
                                 :name (c14-8 / name
                                              :op1 "Stephen"
                                              :op2 "Collins")
                                 :ARG0-of (c14-1 / star-01)))
       :time (c14-4 / after
                    :op1 (c14-3 / report-01
                                :ARG1 (c14-5 / suicide))))

# ::snt hopefully it's a done deal.
# ::tokens ["hopefully", "it", "'s", "a", "done", "deal", "."]
# ::lemmas ["hopefully", "it", "be", "a", "do", "deal", "."]
(c15-2 / hope-01
       :ARG1 (c15-1 / deal-03
                    :ARG1 (c15-3 / it)
                    :ARG1-of (c15-0 / do-02)))

# ::snt Idiots!That was last Tuesday,the th.
# ::tokens ["Idiots!That", "was", "last", "Tuesday", ",", "the", "th", "."]
# ::lemmas ["idiots!that", "be", "last", "Tuesday", ",", "the", "th", "."]
(c16-0 / idiot
       :domain (c16-3 / that
                      :time (c16-5 / date-entity
                                   :weekday (c16-4 / tuesday
                                                   :mod (c16-2 / last))
                                   :domain (c16-1 / th))))

# ::snt who??
# ::tokens ["who", "?", "?"]
# ::lemmas ["who", "?", "?"]
(c17-0 / amr-unknown)

# ::snt JESUS DID IT
# ::tokens ["JESUS", "DID", "IT"]
# ::lemmas ["JESUS", "do", "it"]
(c18-1 / do-02
       :ARG0 (c18-3 / country
                    :name (c18-0 / name
                                 :op1 "Japan"))
       :ARG1 (c18-2 / it))

# ::snt this is an old story. ThoughtIt just happened again. Confusing.
# ::tokens ["this", "is", "an", "old", "story", ".", "ThoughtIt", "just", "happened", "again", ".", "Confusing", "."]
# ::lemmas ["this", "be", "an", "old", "story", ".", "ThoughtIt", "just", "happen", "again", ".", "confusing", "."]
(c19-6 / multi-sentence
       :snt1 (c19-0 / story
                    :mod (c19-3 / old)
                    :domain (c19-4 / this))
       :snt2 (c19-5 / think-01
                    :ARG1 (c19-1 / it
                                 :mod (c19-8 / again)))
       :snt3 (c19-2 / thing
                    :ARG0-of (c19-7 / curious-01)))

# ::snt : Cops swarm star Stephen Collins' home after suicide report not surprised.
# ::tokens [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report", "not", "surprised", "."]
# ::lemmas [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report", "not", "surprised", "."]
(c20-0 / surprise-01
       :ARG0 (c20-1 / swarm-01
                    :ARG1 (c20-7 / home
                                 :poss (c20-2 / person
                                              :name (c20-8 / name
                                                           :op1 "Stephen"
                                                           :op2 "Collins")
                                              :ARG0-of (c20-5 / star-01
                                                              :ARG1 (c20-6 / cop))))
                    :time (c20-4 / after
                                 :op1 (c20-3 / report-01
                                             :ARG1 (c20-9 / suicide))))
       :polarity -)

# ::snt GOOD!!!!!!!
# ::tokens ["GOOD", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["good", "!", "!", "!", "!", "!", "!", "!"]
(c21-0 / good-02
       :mode expressive)

# ::snt Wtf?! Smh
# ::tokens ["Wtf", "?", "!", "Smh"]
# ::lemmas ["Wtf", "?", "!", "smh"]
(c22-0 / and
       :op1 (c22-2 / amr-unknown
                   :mod (c22-3 / fuck
                               :mode expressive))
       :op2 (c22-1 / smh
                   :mode expressive))

# ::snt oh gotcha! Tx
# ::tokens ["oh", "gotcha", "!", "Tx"]
# ::lemmas ["oh", "gotcha", "!", "tx"]
(c23-4 / get-01
       :ARG0 (c23-0 / person
                    :name (c23-3 / name
                                 :op1 "Tx"))
       :ARG1 (c23-2 / cha)
       :mod (c23-1 / oh)
       :mode expressive)

# ::snt again??
# ::tokens ["again", "?", "?"]
# ::lemmas ["again", "?", "?"]
(c24-2 / event
       :polarity (c24-0 / amr-unknown)
       :mod (c24-1 / again))

# ::snt : Cops swarm star Stephen Collins' home after suicide report
# ::tokens [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report"]
# ::lemmas [":", "Cops", "swarm", "star", "Stephen", "Collins", "'", "home", "after", "suicide", "report"]
(c25-0 / swarm-01
       :ARG0 (c25-6 / cop)
       :ARG1 (c25-7 / home
                    :poss (c25-2 / person
                                 :name (c25-8 / name
                                              :op1 "Stephen"
                                              :op2 "Collins")
                                 :ARG0-of (c25-1 / star-01)))
       :time (c25-4 / after
                    :op1 (c25-3 / report-01
                                :ARG1 (c25-5 / suicide))))

# ::snt Whats up wit tha suicides in hollywood?? o.O
# ::tokens ["What", "s", "up", "wit", "tha", "suicides", "in", "hollywood", "?", "?", "o.O"]
# ::lemmas ["what", "s", "up", "wit", "tha", "suicide", "in", "hollywood", "?", "?", "o.o"]
(c26-3 / cause-01
       :ARG0 (c26-4 / amr-unknown)
       :ARG1 (c26-0 / suicide
                    :location (c26-1 / market-sector
                                     :name (c26-2 / name
                                                  :op1 "Hollywood"))))

# ::snt | This wasn't today tho.
# ::tokens ["|", "This", "was", "n't", "today", "tho", "."]
# ::lemmas ["|", "this", "be", "not", "today", "tho", "."]
(c27-1 / have-concession-91
       :ARG1 (c27-0 / today
                    :domain (c27-2 / this)
                    :polarity -))
