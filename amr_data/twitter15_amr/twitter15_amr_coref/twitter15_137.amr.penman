# ::snt ma fate pappa e ciccia coi russi ? riuscite sempre a tirare fuori dei passaporti intatti voi !
# ::tokens ["ma", "fate", "pappa", "e", "ciccia", "coi", "russi", "?", "riuscite", "sempre", "a", "tirare", "fuori", "dei", "passaporti", "intatti", "voi", "!"]
# ::lemmas ["ma", "fate", "pappa", "e", "ciccia", "coi", "russi", "?", "riuscite", "sempre", "a", "tirare", "fuori", "dei", "passaporti", "intatti", "voi", "!"]
(c2-7 / multi-sentence
      :snt1 (c2-11 / amr-unintelligible
                   :snt2 (c2-15 / fate
                                :poss (c2-3 / person
                                            :name (c2-9 / name
                                                        :op1 "Pappa"))
                                :mod (c2-10 / ciccia
                                            :mod (c2-8 / coi)))
                   :snt3 (c2-5 / riuscite-00
                               :ARG1 (c2-1 / sempre
                                           :op1 (c2-6 / tirare-00
                                                      :ARG1 (c2-14 / person
                                                                   :ARG0-of (c2-0 / fuck-01))
                                                      :mod (c2-4 / fuori
                                                                 :mod (c2-12 / dei
                                                                             :mod (c2-2 / intatti
                                                                                        :mod (c2-13 / voi))))))
                               :mode expressive)
                   :value "ma"))

# ::snt if you look this picture it tells a lot. Suppose to happened with then nothing left to found
# ::tokens ["if", "you", "look", "this", "picture", "it", "tells", "a", "lot", ".", "Suppose", "to", "happened", "with", "then", "nothing", "left", "to", "found"]
# ::lemmas ["if", "you", "look", "this", "picture", "it", "tell", "a", "lot", ".", "suppose", "to", "happen", "with", "then", "nothing", "leave", "to", "find"]
(c3-6 / multi-sentence
      :snt1 (c3-4 / tell-01
                  :ARG0 (c3-3 / look-01
                              :ARG0 (c3-8 / you)
                              :ARG1 (c3-1 / picture
                                          :mod (c3-5 / this)))
                  :ARG1 (c3-7 / lot)
                  :condition c3-3)
      :snt2 (c3-0 / suppose-01
                  :ARG1 (c3-10 / event
                               :time (c3-2 / then)
                               :mod (c3-9 / nothing
                                          :ARG1-of (c3-11 / find-01)))))

# ::snt if imagine this same thing happen with which I have seen MH17 then what would be left to find in deep sea
# ::tokens ["if", "imagine", "this", "same", "thing", "happen", "with", "which", "I", "have", "seen", "MH17", "then", "what", "would", "be", "left", "to", "find", "in", "deep", "sea"]
# ::lemmas ["if", "imagine", "this", "same", "thing", "happen", "with", "which", "i", "have", "see", "MH17", "then", "what", "would", "be", "leave", "to", "find", "in", "deep", "sea"]
(c4-3 / leave-17
      :ARG1 (c4-11 / amr-unknown
                   :ARG1-of (c4-13 / find-01
                                   :location (c4-0 / sea
                                                   :ARG1-of (c4-12 / deep-02))))
      :condition (c4-1 / imagine-01
                       :ARG0 (c4-9 / you)
                       :ARG1 (c4-4 / thing
                                   :ARG1-of (c4-2 / same-01)
                                   :mod (c4-5 / this)
                                   :ARG1-of (c4-7 / see-01
                                                  :ARG0 (c4-10 / i)
                                                  :ARG1 (c4-6 / aircraft-type
                                                              :name (c4-8 / name
                                                                          :op1 "MH17"))))))

# ::snt well I hope so
# ::tokens ["well", "I", "hope", "so"]
# ::lemmas ["well", "i", "hope", "so"]
(c5-2 / hope-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-1 / so)
      :mod (c5-0 / well))

# ::snt ! !
# ::tokens ["!", "!"]
# ::lemmas ["!", "!"]
(c6-0 / thing
      :mode expressive)

# ::snt RIGHT! Accusations fly as investigators seek answers over crash in
# ::tokens ["RIGHT", "!", "Accusations", "fly", "as", "investigators", "seek", "answers", "over", "crash", "in"]
# ::lemmas ["right", "!", "accusation", "fly", "as", "investigator", "seek", "answer", "over", "crash", "in"]
(c7-4 / multi-sentence
      :snt1 (c7-7 / right-06
                  :mode expressive)
      :snt2 (c7-8 / fly-01
                  :ARG1 (c7-3 / Accusations)
                  :time (c7-0 / seek-01
                              :ARG0 (c7-2 / person
                                          :ARG0-of (c7-1 / investigate-01))
                              :ARG1 (c7-5 / answer-01
                                          :ARG0 c7-2
                                          :ARG1 (c7-6 / crash-01)))))

# ::snt mh17 pilot flew west not normal day path... flt plan error. Route is near night flt. Pilot error?
# ::tokens ["mh17", "pilot", "flew", "west", "not", "normal", "day", "path", "...", "flt", "plan", "error", ".", "Route", "is", "near", "night", "flt", ".", "Pilot", "error", "?"]
# ::lemmas ["mh17", "pilot", "fly", "west", "not", "normal", "day", "path", "...", "flt", "plan", "error", ".", "route", "be", "near", "night", "flt", ".", "pilot", "error", "?"]
(c8-15 / multi-sentence
       :snt1 (c8-12 / fly-01
                    :ARG1 (c8-13 / person
                                 :ARG0-of (c8-19 / pilot-01
                                                 :ARG1 (c8-8 / aircraft-type
                                                             :name (c8-17 / name
                                                                          :op1 "Mh17"))))
                    :path (c8-7 / west)
                    :ARG1-of (c8-16 / normal-02
                                    :ARG2 (c8-10 / path
                                                 :mod (c8-9 / day))
                                    :polarity -))
       :snt2 (c8-11 / err-01
                    :ARG0 (c8-4 / plan-01
                                :ARG0 (c8-2 / company
                                            :name (c8-5 / name
                                                        :op1 "Flt"))))
       :snt3 (c8-18 / near-02
                    :ARG1 (c8-3 / Route)
                    :ARG2 (c8-0 / date-entity
                                :dayperiod (c8-6 / night)))
       :snt4 (c8-14 / err-01
                    :ARG0 c8-13)
       :polarity (c8-1 / amr-unknown))

# ::snt coincidentally every time something is happening around the world a tragic event occurs... don't forget about
# ::tokens ["coincidentally", "every", "time", "something", "is", "happening", "around", "the", "world", "a", "tragic", "event", "occurs", "...", "do", "n't", "forget", "about"]
# ::lemmas ["coincidentally", "every", "time", "something", "be", "happen", "around", "the", "world", "a", "tragic", "event", "occur", "...", "do", "not", "forget", "about"]
(c9-7 / and
      :op1 (c9-8 / event
                 :mod (c9-1 / tragic)
                 :frequency (c9-2 / rate-entity-91
                                  :ARG4 (c9-3 / event
                                              :location (c9-4 / around
                                                              :op1 (c9-0 / world)))
                                  :ARG1-of (c9-5 / coincide-01)))
      :op2 (c9-9 / forget-01
                 :ARG0 (c9-6 / you)
                 :topic c9-8
                 :polarity -
                 :mode imperative))
