# ::snt WTH this site doesn't require that much to run it once they are built, just needs a webmaster to update it! Obama is Evil&amp;wrong
# ::tokens ["WTH", "this", "site", "does", "n't", "require", "that", "much", "to", "run", "it", "once", "they", "are", "built", ",", "just", "needs", "a", "webmaster", "to", "update", "it", "!", "Obama", "is", "Evil&amp;wrong"]
# ::lemmas ["WTH", "this", "site", "do", "not", "require", "that", "much", "to", "run", "it", "once", "they", "be", "build", ",", "just", "need", "a", "webmaster", "to", "update", "it", "!", "Obama", "be", "Evil&amp;wrong"]
(c1-13 / multi-sentence
       :snt1 (c1-3 / require-01
                   :ARG0 (c1-16 / run-01
                                :ARG1 (c1-0 / site
                                            :mod (c1-17 / this))
                                :time (c1-5 / once
                                            :op1 (c1-4 / build-01
                                                       :ARG1 c1-0)))
                   :ARG1 (c1-9 / much
                               :degree (c1-12 / that))
                   :mod (c1-19 / heck
                               :mode expressive)
                   :polarity -)
       :snt2 (c1-15 / need-01
                    :ARG0 (c1-11 / person
                                 :name (c1-14 / name
                                              :op1 "Obama"))
                    :ARG1 (c1-7 / webmaster)
                    :purpose (c1-2 / update-01
                                   :ARG0 c1-11
                                   :ARG1 c1-0)
                    :mod (c1-6 / just))
       :snt3 (c1-8 / and
                   :op1 (c1-10 / evil)
                   :op2 (c1-1 / amp)
                   :ARG2-of (c1-18 / wrong-04)))

# ::snt . that day may come sooner than later
# ::tokens [".", "that", "day", "may", "come", "sooner", "than", "later"]
# ::lemmas [".", "that", "day", "may", "come", "soon", "than", "later"]
(c2-1 / possible-01
      :ARG1 (c2-4 / come-01
                  :ARG1 (c2-6 / day
                              :mod (c2-2 / that))
                  :time (c2-0 / soon
                              :ARG2-of (c2-5 / have-degree-91
                                             :ARG1 c2-4
                                             :ARG3 (c2-3 / more)))))
