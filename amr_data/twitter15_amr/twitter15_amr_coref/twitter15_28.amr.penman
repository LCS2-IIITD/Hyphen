# ::snt is not the police. He posed no threat to your readers. Why don't you guys find the hackers who leaked the celeb's nude photos?
# ::tokens ["is", "not", "the", "police", ".", "He", "posed", "no", "threat", "to", "your", "readers", ".", "Why", "do", "n't", "you", "guys", "find", "the", "hackers", "who", "leaked", "the", "celeb", "'s", "nude", "photos", "?"]
# ::lemmas ["be", "not", "the", "police", ".", "he", "pose", "no", "threat", "to", "your", "reader", ".", "why", "do", "not", "you", "guy", "find", "the", "hacker", "who", "leak", "the", "celeb", "'s", "nude", "photo", "?"]
(c1-11 / multi-sentence
       :snt1 (c1-10 / police
                    :domain (c1-18 / he)
                    :polarity -)
       :snt2 (c1-15 / pose-01
                    :ARG0 (c1-4 / he)
                    :ARG1 (c1-16 / threaten-01
                                 :ARG0 c1-4
                                 :ARG2 (c1-7 / person
                                             :ARG0-of (c1-2 / read-01
                                                            :ARG1 (c1-13 / you))))
                    :polarity -)
       :snt3 (c1-1 / cause-01
                   :ARG0 (c1-6 / amr-unknown)
                   :ARG1 (c1-8 / find-01
                               :ARG0 (c1-9 / you
                                           :mod (c1-19 / guy))
                               :ARG1 (c1-5 / person
                                           :ARG0-of (c1-3 / hack-04)
                                           :ARG0-of (c1-0 / leak-01
                                                          :ARG1 (c1-12 / photo
                                                                       :mod (c1-14 / nude)
                                                                       :poss (c1-17 / celebrity))))
                               :polarity -)))

# ::snt as a father... No I don't feel bad a child predator was exposed.
# ::tokens ["as", "a", "father", "...", "No", "I", "do", "n't", "feel", "bad", "a", "child", "predator", "was", "exposed", "."]
# ::lemmas ["as", "a", "father", "...", "no", "i", "do", "not", "feel", "bad", "a", "child", "predator", "be", "expose", "."]
(c2-9 / feel-01
      :ARG0 (c2-2 / i
                  :ARG0-of (c2-7 / have-rel-role-91
                                 :ARG2 (c2-0 / father)))
      :ARG1 (c2-1 / bad-07)
      :ARG1-of (c2-5 / cause-01
                     :ARG0 (c2-8 / expose-01
                                 :ARG1 (c2-3 / person
                                             :ARG0-of (c2-6 / prey-01
                                                            :ARG1 (c2-4 / child)))))
      :polarity -)

# ::snt Do you guys feel bad at all about disclosing this or is greed &amp; notoriety that important to you?
# ::tokens ["Do", "you", "guys", "feel", "bad", "at", "all", "about", "disclosing", "this", "or", "is", "greed", "&", "amp", ";", "notoriety", "that", "important", "to", "you", "?"]
# ::lemmas ["do", "you", "guy", "feel", "bad", "at", "all", "about", "disclose", "this", "or", "be", "greed", "&", "amp", ";", "notoriety", "that", "important", "to", "you", "?"]
(c3-3 / or
      :op1 (c3-15 / feel-01
                  :ARG0 (c3-12 / you
                               :mod (c3-16 / guy))
                  :ARG1 (c3-1 / bad-07)
                  :ARG2 (c3-14 / disclose-01
                               :ARG0 c3-12
                               :ARG1 (c3-4 / this))
                  :polarity (c3-13 / amr-unknown)
                  :degree (c3-6 / at-all))
      :op2 (c3-5 / amr-unknown
                 :domain (c3-10 / and
                                :op1 (c3-7 / greed)
                                :op2 (c3-8 / amp))
                 :ARG0-of (c3-9 / mean-01
                                :ARG1 (c3-2 / important-01
                                            :ARG1 (c3-0 / fame-01)
                                            :ARG2 c3-12
                                            :degree (c3-11 / that)))
                 :polarity -))

# ::snt Wouldn't surprise me if he did. He's done ": Stephen Collins Cops Swarm Home After Suicide Report False Alarm
# ::tokens ["Would", "n't", "surprise", "me", "if", "he", "did", ".", "He", "'s", "done", "\"", ":", "Stephen", "Collins", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "False", "Alarm"]
# ::lemmas ["would", "not", "surprise", "i", "if", "he", "do", ".", "he", "be", "do", "\"", ":", "Stephen", "Collins", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "False", "Alarm"]
(c4-6 / multi-sentence
      :snt1 (c4-0 / surprise-01
                  :ARG0 (c4-11 / do-02
                               :ARG0 (c4-9 / he))
                  :ARG1 (c4-1 / i)
                  :condition c4-11
                  :polarity -)
      :snt2 c4-11
      :ARG0 (c4-2 / he)
      :snt3 (c4-3 / swarm-01
                  :ARG0 (c4-8 / cop
                              :name (c4-10 / name
                                           :op1 "Stephen"
                                           :op2 "Collins"))
                  :ARG1 (c4-13 / home)
                  :time (c4-5 / after
                              :op1 (c4-4 / report-01
                                         :ARG1 (c4-7 / suicide)))
                  :mod (c4-12 / false)))

# ::snt .... will never see this...she tweeted she was going to bed at :30 lol with all those police around
# ::tokens ["....", "will", "never", "see", "this", "...", "she", "tweeted", "she", "was", "going", "to", "bed", "at", ":", "30", "lol", "with", "all", "those", "police", "around"]
# ::lemmas ["....", "will", "never", "see", "this", "...", "she", "tweet", "she", "be", "go", "to", "bed", "at", ":", "30", "lol", "with", "all", "those", "police", "around"]
(c5-8 / multi-sentence
      :snt1 (c5-0 / see-01
                  :ARG0 (c5-1 / i)
                  :ARG1 (c5-6 / this)
                  :time (c5-13 / ever)
                  :polarity -)
      :snt2 (c5-7 / tweet-01
                  :ARG0 (c5-2 / she)
                  :ARG1 (c5-14 / go-02
                               :ARG0 c5-2
                               :ARG4 (c5-3 / bed-01
                                           :ARG1 c5-2)
                               :time (c5-12 / date-entity
                                            :time ":30")
                               :ARG2-of (c5-5 / laugh-01
                                              :ARG0 c5-1
                                              :manner (c5-10 / loud)
                                              :mode expressive)
                               :accompanier (c5-4 / police
                                                  :mod (c5-11 / all)
                                                  :location (c5-9 / around)))))

# ::snt so is he not in jail? The police didn't swarm his home to take him to jail.
# ::tokens ["so", "is", "he", "not", "in", "jail", "?", "The", "police", "did", "n't", "swarm", "his", "home", "to", "take", "him", "to", "jail", "."]
# ::lemmas ["so", "be", "he", "not", "in", "jail", "?", "the", "police", "do", "not", "swarm", "his", "home", "to", "take", "he", "to", "jail", "."]
(c6-5 / multi-sentence
      :snt1 (c6-7 / jail-01
                  :ARG1 (c6-8 / he)
                  :ARG1-of (c6-1 / infer-01)
                  :polarity -)
      :snt2 (c6-0 / swarm-01
                  :ARG0 (c6-3 / police)
                  :ARG1 (c6-2 / home
                              :poss (c6-9 / he))
                  :purpose (c6-4 / take-01
                                 :ARG0 c6-3
                                 :ARG1 c6-9
                                 :ARG3 (c6-6 / jail))
                  :polarity -))

# ::snt Omg false alarm? Lol : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens ["Omg", "false", "alarm", "?", "Lol", ":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas ["Omg", "false", "alarm", "?", "Lol", ":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c7-7 / multi-sentence
      :snt1 (c7-13 / alarm-01
                   :mod (c7-14 / false)
                   :mod (c7-4 / oh-my-god
                              :mode expressive)
                   :polarity (c7-8 / amr-unknown))
      :snt2 (c7-1 / say-01
                  :ARG0 (c7-3 / person
                              :name (c7-10 / name
                                           :op1 "Stephen"
                                           :op2 "Collins"))
                  :ARG1 (c7-2 / swarm-01
                              :ARG0 (c7-11 / cop)
                              :ARG1 (c7-12 / home)
                              :time (c7-5 / after
                                          :op1 (c7-6 / report-01
                                                     :ARG1 (c7-9 / suicide))))
                  :ARG2 c7-3
                  :name c7-10
                  :op1 "Lol")
      :snt3 c7-13
      :mod (c7-0 / false))

# ::snt Sorry... When I first saw your name, I thought...
# ::tokens ["Sorry", "...", "When", "I", "first", "saw", "your", "name", ",", "I", "thought", "..."]
# ::lemmas ["sorry", "...", "when", "i", "first", "see", "your", "name", ",", "i", "think", "..."]
(c8-5 / multi-sentence
      :snt1 (c8-0 / sorry-01)
      :snt2 (c8-3 / think-01
                  :ARG0 (c8-1 / i)
                  :time (c8-2 / see-01
                              :ARG0 c8-1
                              :ARG1 (c8-7 / name
                                          :poss (c8-6 / you))
                              :ord (c8-4 / ordinal-entity
                                         :value 1))))

# ::snt Oh well that's too bad.
# ::tokens ["Oh", "well", "that", "'s", "too", "bad", "."]
# ::lemmas ["oh", "well", "that", "be", "too", "bad", "."]
(c9-4 / have-degree-91
      :ARG1 (c9-1 / that)
      :ARG2 (c9-0 / bad-07
                  :ARG1 c9-1)
      :ARG3 (c9-2 / too)
      :mod (c9-3 / oh-well
                 :mode expressive))

# ::snt poor guy.. I feel so bad for him.
# ::tokens ["poor", "guy", "..", "I", "feel", "so", "bad", "for", "him", "."]
# ::lemmas ["poor", "guy", "..", "i", "feel", "so", "bad", "for", "he", "."]
(c10-4 / multi-sentence
       :snt1 (c10-6 / guy
                    :mod (c10-3 / poor))
       :snt2 (c10-7 / feel-01
                    :ARG0 (c10-1 / i)
                    :ARG1 (c10-2 / bad-07
                                 :degree (c10-0 / so))
                    :ARG2 (c10-5 / he)))

# ::snt Awwww man.... Now I don't wanna watch that show anymore! (at least those certain re-runs.)
# ::tokens ["Awwww", "man", "....", "Now", "I", "do", "n't", "wanna", "watch", "that", "show", "anymore", "!", "(", "at", "least", "those", "certain", "re", "-", "runs", ".", ")"]
# ::lemmas ["Awwww", "man", "....", "now", "i", "do", "not", "wanna", "watch", "that", "show", "anymore", "!", "(", "at", "least", "those", "certain", "re", "-", "run", ".", ")"]
(c11-7 / multi-sentence
       :snt1 (c11-13 / aw
                     :mode expressive)
       :snt2 (c11-1 / want-01
                    :ARG0 (c11-2 / i)
                    :ARG1 (c11-10 / watch-01
                                  :ARG0 c11-2
                                  :ARG1 (c11-0 / show
                                               :mod (c11-4 / that))
                                  :time (c11-8 / anymore))
                    :mod (c11-5 / at-least
                                :op1 (c11-6 / rerun-01
                                            :ARG1 (c11-9 / that)
                                            :mod (c11-11 / certain)
                                            :mod (c11-3 / that)))
                    :time (c11-12 / now)
                    :polarity -))

# ::snt . collins is an episcopalian. easf th. all wannabe failure creeps.
# ::tokens [".", "collins", "is", "an", "episcopalian", ".", "easf", "th", ".", "all", "wannabe", "failure", "creeps", "."]
# ::lemmas [".", "collins", "be", "an", "episcopalian", ".", "easf", "th", ".", "all", "wannabe", "failure", "creep", "."]
(c12-4 / multi-sentence
       :snt1 (c12-2 / person
                    :mod (c12-6 / country
                                :name (c12-8 / name
                                             :op1 "Episcopalian"))
                    :domain (c12-10 / person
                                    :name (c12-7 / name
                                                 :op1 "Collins")))
       :snt2 (c12-5 / creep-01
                    :ARG0 (c12-9 / person
                                 :ARG0-of (c12-0 / fail-01)
                                 :mod (c12-3 / all)
                                 :mod (c12-1 / wannabe))))

# ::snt : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c13-10 / and
        :op1 (c13-0 / say-01
                    :ARG0 (c13-2 / person
                                 :name (c13-7 / name
                                              :op1 "Stephen"
                                              :op2 "Collins"))
                    :ARG1 (c13-1 / swarm-01
                                 :ARG0 (c13-8 / cop)
                                 :ARG1 (c13-9 / home)
                                 :time (c13-5 / after
                                              :op1 (c13-3 / report-01
                                                          :ARG1 (c13-6 / suicide)))))
        :op2 (c13-4 / arm
                    :mod (c13-11 / false)))

# ::snt c est pas vrai la story?
# ::tokens ["c", "est", "pas", "vrai", "la", "story", "?"]
# ::lemmas ["c", "est", "pas", "vrai", "la", "story", "?"]
(c14-1 / obligate-01
       :ARG1 (c14-3 / you)
       :ARG2 (c14-2 / tell-01
                    :ARG0 c14-3
                    :ARG1 (c14-0 / story))
       :mod (c14-4 / amr-unintelligible
                   :value "c"))

# ::snt : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c15-10 / and
        :op1 (c15-0 / say-01
                    :ARG0 (c15-2 / person
                                 :name (c15-7 / name
                                              :op1 "Stephen"
                                              :op2 "Collins"))
                    :ARG1 (c15-1 / swarm-01
                                 :ARG0 (c15-8 / cop)
                                 :ARG1 (c15-9 / home)
                                 :time (c15-5 / after
                                              :op1 (c15-3 / report-01
                                                          :ARG1 (c15-6 / suicide)))))
        :op2 (c15-4 / arm
                    :mod (c15-11 / false)))

# ::snt Nikki Sixx feels the same way
# ::tokens ["Nikki", "Sixx", "feels", "the", "same", "way"]
# ::lemmas ["Nikki", "Sixx", "feel", "the", "same", "way"]
(c16-4 / feel-01
       :ARG0 (c16-2 / person
                    :name (c16-3 / name
                                 :op1 "Nikki"
                                 :op2 "Sixx"))
       :ARG1 (c16-1 / way
                    :ARG1-of (c16-0 / same-01)))

# ::snt : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm cc
# ::tokens [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm", "cc"]
# ::lemmas [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm", "cc"]
(c17-10 / and
        :op1 (c17-0 / say-01
                    :ARG0 (c17-2 / person
                                 :name (c17-6 / name
                                              :op1 "Stephen"
                                              :op2 "Collins"))
                    :ARG1 (c17-1 / swarm-01
                                 :ARG0 (c17-7 / cop)
                                 :ARG1 (c17-8 / home)
                                 :time (c17-4 / after
                                              :op1 (c17-3 / report-01
                                                          :ARG1 (c17-5 / suicide)))))
        :op2 (c17-11 / publication
                     :name (c17-9 / name
                                  :op1 "False"
                                  :op2 "Alarm"
                                  :op3 "Cup")))

# ::snt  Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens [" ", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas [" ", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c19-5 / multi-sentence
       :snt1 (c19-2 / person
                    :name (c19-9 / name
                                 :op1 "Stephen"
                                 :op2 "Collins"))
       :snt2 (c19-0 / swarm-01
                    :ARG0 (c19-7 / cop)
                    :ARG1 (c19-8 / home)
                    :time (c19-4 / after
                                 :op1 (c19-3 / report-01
                                             :ARG1 (c19-1 / suicide))))
       :snt3 (c19-6 / arm
                    :mod (c19-10 / false)))

# ::snt : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm childtoucher suicide special
# ::tokens [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm", "childtoucher", "suicide", "special"]
# ::lemmas [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm", "childtoucher", "suicide", "special"]
(c20-6 / multi-sentence
       :snt1 (c20-0 / say-01
                    :ARG0 (c20-2 / person
                                 :name (c20-11 / name
                                               :op1 "Stephen"
                                               :op2 "Collins"))
                    :ARG1 (c20-1 / swarm-01
                                 :ARG0 (c20-9 / cop)
                                 :ARG1 (c20-10 / home)
                                 :time (c20-4 / after
                                              :op1 (c20-7 / suicide))
                                 :ARG1-of (c20-3 / report-01)))
       :snt2 (c20-13 / special-02
                     :ARG1 (c20-5 / suicide)
                     :mod (c20-8 / arm
                                 :mod (c20-12 / false))))

# ::snt now he scared go to jail.
# ::tokens ["now", "he", "scared", "go", "to", "jail", "."]
# ::lemmas ["now", "he", "scare", "go", "to", "jail", "."]
(c21-4 / go-02
       :ARG0 (c21-1 / he)
       :ARG4 (c21-2 / jail)
       :ARG1-of (c21-0 / scare-01)
       :time (c21-3 / now))

# ::snt E'j crois plus en TMZ maintenant, non non, trop en retard su les news, due pis toute
# ::tokens ["E'j", "crois", "plus", "en", "TMZ", "maintenant", ",", "non", "non", ",", "trop", "en", "retard", "su", "les", "news", ",", "due", "pis", "toute"]
# ::lemmas ["e'j", "crois", "plus", "en", "TMZ", "maintenant", ",", "non", "non", ",", "trop", "en", "retard", "su", "les", "news", ",", "due", "pis", "toute"]
(c22-10 / and
        :op1 (c22-6 / crois-01
                    :ARG0 (c22-1 / person
                                 :ARG0-of (c22-8 / have-org-role-91
                                                 :ARG1 (c22-12 / publication
                                                               :name (c22-7 / name
                                                                            :op1 "TMZ"))
                                                 :ARG2 (c22-5 / maintenant)))
                    :op2 (c22-0 / have-polarity-91
                                :ARG1 c22-1
                                :ARG2 -)
                    :op3 (c22-2 / trop)
                    :op4 (c22-3 / retard-01
                                :ARG1 (c22-9 / news))
                    :op5 (c22-11 / due-03
                                 :ARG2 (c22-4 / toute))))

# ::snt : -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens [":", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas [":", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c23-7 / and
       :op1 (c23-0 / swarm-01
                   :ARG0 (c23-5 / cop)
                   :ARG1 (c23-6 / home)
                   :time (c23-4 / after
                                :op1 (c23-2 / report-01
                                            :ARG1 (c23-1 / suicide))))
       :op2 (c23-3 / arm
                   :mod (c23-8 / false)))

# ::snt CC
# ::tokens ["CC"]
# ::lemmas ["cc"]
(c24-1 / person
       :name (c24-0 / name
                    :op1 "CC"))

# ::snt tv actors tweeting... can the world get any more MIPS. baywatch gal calls out th heaven dad/ sigh
# ::tokens ["tv", "actors", "tweeting", "...", "can", "the", "world", "get", "any", "more", "MIPS", ".", "baywatch", "gal", "calls", "out", "th", "heaven", "dad/", "sigh"]
# ::lemmas ["tv", "actor", "tweet", "...", "can", "the", "world", "get", "any", "more", "MIPS", ".", "baywatch", "gal", "call", "out", "th", "heaven", "dad/", "sigh"]
(c25-13 / multi-sentence
        :snt1 (c25-18 / tweet-02
                      :ARG0 (c25-11 / person
                                    :ARG0-of (c25-7 / act-01
                                                    :medium (c25-12 / television))))
        :snt2 (c25-17 / possible-01
                      :ARG1 (c25-20 / get-01
                                    :ARG0 (c25-6 / world)
                                    :ARG1 (c25-8 / military
                                                 :name (c25-16 / name
                                                               :op1 "MIPS"))
                                    :mod (c25-5 / more
                                                :mod (c25-1 / any))))
        :snt3 (c25-2 / call-out-15
                     :ARG0 (c25-14 / gal
                                   :mod (c25-3 / baywatch))
                     :ARG1 (c25-10 / person
                                   :ARG0-of (c25-19 / have-rel-role-91
                                                    :ARG1 (c25-4 / person
                                                                 :name (c25-15 / name
                                                                               :op1 "God"))
                                                    :ARG2 (c25-9 / dad))))
        :snt4 (c25-0 / sigh-02))

# ::snt Donc fausse alerte? : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens ["Donc", "fausse", "alerte", "?", ":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas ["Donc", "fausse", "alerte", "?", ":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c26-13 / and
        :op1 (c26-3 / publication-91
                    :ARG0 (c26-15 / person
                                  :name (c26-8 / name
                                               :op1 "Stephen"
                                               :op2 "Collins"))
                    :ARG1 (c26-14 / publication
                                  :name (c26-12 / name
                                                :op1 "Donc"
                                                :op2 "Fausse"
                                                :op3 "Alerte")))
        :op2 (c26-0 / swarm-01
                    :ARG0 (c26-9 / cop)
                    :ARG1 (c26-11 / home)
                    :time (c26-6 / after
                                 :op1 (c26-4 / report-01
                                             :ARG1 (c26-2 / suicide))))
        :op3 (c26-5 / arm
                    :mod (c26-1 / false))
        :ARG1-of (c26-7 / cite-01
                        :ARG2 c26-15)
        :polarity (c26-10 / amr-unknown))

# ::snt now we can still tell him we hate him.: Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens ["now", "we", "can", "still", "tell", "him", "we", "hate", "him", ".", ":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas ["now", "we", "can", "still", "tell", "he", "we", "hate", "he", ".", ":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c27-7 / multi-sentence
       :snt1 (c27-3 / possible-01
                    :ARG1 (c27-4 / tell-01
                                 :ARG0 (c27-13 / we)
                                 :ARG1 (c27-12 / hate-01
                                               :ARG0 c27-13
                                               :ARG1 (c27-1 / he
                                                            :ARG2-of c27-4)))
                    :time (c27-10 / now)
                    :mod (c27-0 / still))
       :snt2 (c27-2 / swarm-01
                    :ARG0 (c27-11 / cop)
                    :ARG1 (c27-15 / home)
                    :time (c27-5 / after
                                 :op1 (c27-6 / report-01
                                             :ARG1 (c27-8 / suicide))))
       :snt3 (c27-9 / arm
                    :mod (c27-14 / false)))

# ::snt : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm Why you lied?
# ::tokens [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm", "Why", "you", "lied", "?"]
# ::lemmas [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm", "why", "you", "lie", "?"]
(c28-7 / multi-sentence
       :snt1 (c28-0 / say-01
                    :ARG0 (c28-2 / person
                                 :name (c28-14 / name
                                               :op1 "Stephen"
                                               :op2 "Collins"))
                    :ARG1 (c28-1 / swarm-01
                                 :ARG0 (c28-10 / cop)
                                 :ARG1 (c28-12 / home)
                                 :time (c28-5 / after
                                              :op1 (c28-4 / report-01
                                                          :ARG1 (c28-8 / suicide)))))
       :snt2 (c28-9 / arm
                    :mod (c28-15 / false))
       :snt3 (c28-11 / cause-01
                     :ARG0 (c28-6 / amr-unknown)
                     :ARG1 (c28-3 / lie-08
                                  :ARG0 (c28-13 / you))))

# ::snt Sorry but if guilty why not? I would rather shoot myself ..child molesters die in prison.........
# ::tokens ["Sorry", "but", "if", "guilty", "why", "not", "?", "I", "would", "rather", "shoot", "myself", "..", "child", "molesters", "die", "in", "prison", "........."]
# ::lemmas ["sorry", "but", "if", "guilty", "why", "not", "?", "i", "would", "rather", "shoot", "myself", "..", "child", "molester", "die", "in", "prison", "........."]
(c29-5 / multi-sentence
       :snt1 (c29-7 / contrast-01
                    :ARG1 (c29-0 / sorry-01)
                    :ARG2 (c29-6 / cause-01
                                 :ARG0 (c29-10 / amr-unknown)
                                 :ARG1 (c29-9 / have-polarity-91
                                              :ARG2 -)
                                 :condition (c29-14 / guilty-01
                                                    :ARG1 (c29-1 / i))))
       :snt2 (c29-3 / prefer-01
                    :ARG0 c29-1
                    :ARG1 (c29-2 / shoot-01
                                 :ARG0 c29-1
                                 :ARG1 c29-1))
       :snt3 (c29-11 / die-01
                     :ARG1 (c29-13 / person
                                   :ARG0-of (c29-4 / molest-01
                                                   :ARG1 (c29-8 / child)))
                     :location (c29-12 / prison)))

# ::snt We'll see who is right soon.
# ::tokens ["We", "'ll", "see", "who", "is", "right", "soon", "."]
# ::lemmas ["we", "'ll", "see", "who", "be", "right", "soon", "."]
(c30-0 / see-01
       :ARG0 (c30-4 / we)
       :ARG1 (c30-2 / person
                    :ARG1-of (c30-3 / right-06))
       :time (c30-1 / soon))

# ::snt : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c31-10 / and
        :op1 (c31-0 / say-01
                    :ARG0 (c31-2 / person
                                 :name (c31-7 / name
                                              :op1 "Stephen"
                                              :op2 "Collins"))
                    :ARG1 (c31-1 / swarm-01
                                 :ARG0 (c31-8 / cop)
                                 :ARG1 (c31-9 / home)
                                 :time (c31-5 / after
                                              :op1 (c31-3 / report-01
                                                          :ARG1 (c31-6 / suicide)))))
        :op2 (c31-4 / arm
                    :mod (c31-11 / false)))

# ::snt But maybe a gave him a good idea? RT Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm
# ::tokens ["But", "maybe", "a", "gave", "him", "a", "good", "idea", "?", "RT", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm"]
# ::lemmas ["but", "maybe", "a", "give", "he", "a", "good", "idea", "?", "RT", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm"]
(c32-11 / multi-sentence
        :snt1 (c32-3 / contrast-01
                     :ARG2 (c32-10 / possible-01
                                   :ARG1 (c32-18 / give-01
                                                 :ARG1 (c32-1 / idea
                                                              :ARG1-of (c32-12 / good-02))
                                                 :ARG2 (c32-17 / he))
                                   :polarity (c32-7 / amr-unknown)))
        :snt2 (c32-14 / publication-91
                      :ARG0 (c32-8 / person
                                   :name (c32-13 / name
                                                 :op1 "Stephen"
                                                 :op2 "Collins"))
                      :ARG1 (c32-0 / swarm-01
                                   :ARG0 (c32-16 / cop)
                                   :ARG1 (c32-5 / home)
                                   :time (c32-2 / after
                                                :op1 (c32-4 / report-01
                                                            :ARG1 (c32-6 / suicide))))
                      :ARG4 (c32-9 / false))
        :snt3 (c32-15 / arm
                      :mod c32-9))

# ::snt seems to know more then ha
# ::tokens ["seems", "to", "know", "more", "then", "ha"]
# ::lemmas ["seem", "to", "know", "more", "then", "ha"]
(c33-0 / seem-01
       :ARG1 (c33-1 / know-01
                    :ARG1 (c33-3 / more))
       :mod (c33-2 / ha
                   :mode expressive))

# ::snt : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm about time! I trust y'all kinda
# ::tokens [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm", "about", "time", "!", "I", "trust", "y'", "all", "kinda"]
# ::lemmas [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm", "about", "time", "!", "i", "trust", "you", "all", "kinda"]
(c34-7 / multi-sentence
       :snt1 (c34-0 / say-01
                    :ARG0 (c34-3 / person
                                 :name (c34-15 / name
                                               :op1 "Stephen"
                                               :op2 "Collins"))
                    :ARG1 (c34-1 / swarm-01
                                 :ARG0 (c34-10 / cop)
                                 :ARG1 (c34-13 / home)
                                 :time (c34-5 / after
                                              :op1 (c34-4 / report-01
                                                          :ARG1 (c34-8 / suicide)))))
       :snt2 (c34-17 / false
                     :domain (c34-9 / arm
                                    :topic (c34-6 / time)))
       :snt3 (c34-11 / trust-02
                     :ARG0 (c34-2 / i)
                     :ARG2 (c34-14 / you
                                   :mod (c34-12 / all))
                     :degree (c34-16 / kind-of)))

# ::snt too bad. I was hoping he'd done the right thing.
# ::tokens ["too", "bad", ".", "I", "was", "hoping", "he", "'d", "done", "the", "right", "thing", "."]
# ::lemmas ["too", "bad", ".", "i", "be", "hope", "he", "have", "do", "the", "right", "thing", "."]
(c35-5 / multi-sentence
       :snt1 (c35-6 / have-degree-91
                    :ARG2 (c35-1 / bad-07)
                    :ARG3 (c35-3 / too))
       :snt2 (c35-0 / hope-01
                    :ARG0 (c35-2 / i)
                    :ARG1 (c35-8 / do-02
                                 :ARG0 (c35-9 / he)
                                 :ARG1 (c35-4 / thing
                                              :ARG1-of (c35-7 / right-02)))))

# ::snt : Stephen Collins -- Cops Swarm Home After Suicide Report ... False Alarm oh
# ::tokens [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "After", "Suicide", "Report", "...", "False", "Alarm", "oh"]
# ::lemmas [":", "Stephen", "Collins", "--", "Cops", "Swarm", "Home", "after", "Suicide", "Report", "...", "False", "Alarm", "oh"]
(c36-6 / multi-sentence
       :snt1 (c36-0 / say-01
                    :ARG0 (c36-2 / person
                                 :name (c36-11 / name
                                               :op1 "Stephen"
                                               :op2 "Collins"))
                    :ARG1 (c36-1 / swarm-01
                                 :ARG0 (c36-9 / cop)
                                 :ARG1 (c36-10 / home)
                                 :time (c36-4 / after
                                              :op1 (c36-3 / report-01
                                                          :ARG1 (c36-7 / suicide)))))
       :snt2 (c36-8 / arm
                    :mod (c36-12 / false)
                    :mod (c36-5 / oh
                                :mode expressive)))

# ::snt odd stuff
# ::tokens ["odd", "stuff"]
# ::lemmas ["odd", "stuff"]
(c37-0 / stuff
       :mod (c37-1 / odd))
