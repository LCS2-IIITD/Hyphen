# ::snt KFC is most likely only a Subsidiary Franchise when ye consider ruling factors of th %s.
# ::tokens ["KFC", "is", "most", "likely", "only", "a", "Subsidiary", "Franchise", "when", "ye", "consider", "ruling", "factors", "of", "th", "%", "s."]
# ::lemmas ["KFC", "be", "most", "likely", "only", "a", "Subsidiary", "Franchise", "when", "ye", "consider", "rule", "factor", "of", "th", "%", "s."]
(c1-3 / likely-01
      :ARG1 (c1-12 / franchise
                   :mod (c1-1 / subsidiary)
                   :domain (c1-4 / organization
                                 :name (c1-10 / name
                                              :op1 "KFC"))
                   :mod (c1-11 / only))
      :ARG2-of (c1-8 / have-degree-91
                     :ARG1 c1-12
                     :ARG3 (c1-6 / most))
      :condition (c1-7 / consider-02
                       :ARG0 (c1-9 / you)
                       :ARG1 (c1-0 / factor
                                   :ARG0-of (c1-5 / rule-01)
                                   :mod (c1-2 / percentage-entity
                                              :value "th"))))

# ::snt No drivel, fact. Prohibition is on drinking alcohol so why ban a hand wipe?
# ::tokens ["No", "drivel", ",", "fact", ".", "Prohibition", "is", "on", "drinking", "alcohol", "so", "why", "ban", "a", "hand", "wipe", "?"]
# ::lemmas ["no", "drivel", ",", "fact", ".", "prohibition", "be", "on", "drink", "alcohol", "so", "why", "ban", "a", "hand", "wipe", "?"]
(c2-3 / multi-sentence
      :snt1 (c2-10 / drivel
                   :mod (c2-11 / fact)
                   :polarity -)
      :snt2 (c2-6 / cause-01
                  :ARG0 (c2-9 / amr-unknown)
                  :ARG1 (c2-2 / ban-01
                              :ARG1 (c2-1 / wipe-01
                                          :ARG2 (c2-8 / hand))))
      :snt3 (c2-7 / ban-01
                  :ARG1 (c2-4 / alcohol)
                  :ARG1-of (c2-5 / cause-01
                                 :ARG0 (c2-0 / drink-01
                                             :ARG1 c2-4))))

# ::snt What kind of drivel is this you're spouting?
# ::tokens ["What", "kind", "of", "drivel", "is", "this", "you", "'re", "spouting", "?"]
# ::lemmas ["what", "kind", "of", "drivel", "be", "this", "you", "be", "spout", "?"]
(c3-0 / spout-01
      :ARG0 (c3-3 / you)
      :ARG1 (c3-5 / drivel
                  :mod (c3-1 / kind
                             :mod (c3-4 / amr-unknown))
                  :domain (c3-2 / this)))

# ::snt Tis something I cant figure out-why come here-we dont believe N Quran-Sharia law-whatever-GO HOME the crazies
# ::tokens ["Tis", "something", "I", "ca", "nt", "figure", "out", "-", "why", "come", "here", "-", "we", "do", "nt", "believe", "N", "Quran", "-", "Sharia", "law", "-", "whatever", "-", "GO", "HOME", "the", "crazies"]
# ::lemmas ["ti", "something", "i", "can", "not", "figure", "out", "-", "why", "come", "here", "-", "we", "do", "not", "believe", "N", "Quran", "-", "Sharia", "law", "-", "whatever", "-", "GO", "HOME", "the", "crazy"]
(c6-0 / something
      :ARG1-of (c6-10 / figure-out-05
                      :ARG0 (c6-1 / i)
                      :ARG1-of (c6-11 / possible-01
                                      :polarity -))
      :domain (c6-3 / come-01
                    :ARG1 (c6-14 / person
                                 :ARG1-of (c6-15 / crazy-03))
                    :ARG4 (c6-17 / here)
                    :ARG1-of (c6-7 / cause-01
                                   :ARG0 (c6-9 / and
                                               :op1 (c6-5 / believe-01
                                                          :ARG0 (c6-8 / we)
                                                          :ARG1 (c6-2 / law
                                                                      :name (c6-13 / name
                                                                                   :op1 "Quran"))
                                                          :polarity -)
                                               :op2 (c6-4 / law
                                                          :name (c6-12 / name
                                                                       :op1 "Sharia"))
                                               :op3 (c6-16 / whatever)
                                               :ARG0-of (c6-18 / go-02
                                                               :ARG4 (c6-6 / home))))))

# ::snt good heavens-what a bunch of freaks.
# ::tokens ["good", "heavens", "-", "what", "a", "bunch", "of", "freaks", "."]
# ::lemmas ["good", "heaven", "-", "what", "a", "bunch", "of", "freak", "."]
(c7-3 / freaks
      :quant (c7-1 / bunch)
      :degree (c7-0 / so)
      :mod (c7-2 / heavens
                 :ARG1-of (c7-4 / good-02)
                 :mode expressive))

# ::snt oh boy I sure like their biscuits and other sides
# ::tokens ["oh", "boy", "I", "sure", "like", "their", "biscuits", "and", "other", "sides"]
# ::lemmas ["oh", "boy", "i", "sure", "like", "their", "biscuit", "and", "other", "side"]
(c8-4 / like-01
      :ARG0 (c8-1 / i)
      :ARG1 (c8-8 / and
                  :op1 (c8-2 / biscuit
                             :poss (c8-5 / they))
                  :op2 (c8-0 / side
                             :mod (c8-6 / other)))
      :ARG1-of (c8-3 / sure-02)
      :mod (c8-7 / boy
                 :mod (c8-9 / oh)
                 :mode expressive))

# ::snt Like I stopped using ... &amp; Enough! Before it goes too far
# ::tokens ["Like", "I", "stopped", "using", "...", "&", "amp", ";", "Enough", "!", "Before", "it", "goes", "too", "far"]
# ::lemmas ["like", "i", "stop", "use", "...", "&", "amp", ";", "Enough", "!", "before", "it", "go", "too", "far"]
(c10-5 / multi-sentence
       :snt1 (c10-9 / resemble-01
                    :ARG2 (c10-0 / stop-01
                                 :ARG0 (c10-1 / i)
                                 :ARG1 (c10-6 / use-01
                                              :ARG0 c10-1)))
       :snt2 (c10-7 / have-quant-91
                    :ARG3 (c10-11 / enough)
                    :time (c10-2 / before
                                 :op1 (c10-12 / go-01
                                              :ARG1 (c10-8 / it)
                                              :ARG4 (c10-10 / far
                                                            :ARG2-of (c10-3 / have-degree-91
                                                                            :ARG1 c10-8
                                                                            :ARG3 (c10-4 / too)))))))

# ::snt then the Muslims go home and drink in private hypocrites to the max
# ::tokens ["then", "the", "Muslims", "go", "home", "and", "drink", "in", "private", "hypocrites", "to", "the", "max"]
# ::lemmas ["then", "the", "Muslims", "go", "home", "and", "drink", "in", "private", "hypocrite", "to", "the", "max"]
(c11-7 / and
       :op1 (c11-10 / go-02
                    :ARG0 (c11-1 / person
                                 :mod (c11-2 / religious-group
                                             :name (c11-5 / name
                                                          :op1 "Islam")))
                    :ARG4 (c11-6 / home))
       :op2 (c11-8 / drink-01
                   :ARG0 c11-1
                   :manner (c11-0 / hypocrite
                                  :ARG1-of (c11-9 / private-02)
                                  :quant (c11-4 / maximum)))
       :time (c11-3 / then))

# ::snt +Tesco!
# ::tokens ["+", "Tesco", "!"]
# ::lemmas ["+", "Tesco", "!"]
(c13-1 / company
       :name (c13-0 / name
                    :op1 "Tesco"))

# ::snt Islam bans drinking alcohol, do KFC provide wipes to suck on?
# ::tokens ["Islam", "bans", "drinking", "alcohol", ",", "do", "KFC", "provide", "wipes", "to", "suck", "on", "?"]
# ::lemmas ["Islam", "ban", "drink", "alcohol", ",", "do", "KFC", "provide", "wipe", "to", "suck", "on", "?"]
(c14-6 / multi-sentence
       :snt1 (c14-2 / ban-01
                    :ARG0 (c14-10 / religious-group
                                  :name (c14-8 / name
                                               :op1 "Islam"))
                    :ARG1 (c14-11 / drink-01
                                  :ARG1 (c14-5 / alcohol)))
       :snt2 (c14-3 / provide-01
                    :ARG0 (c14-4 / organization
                                 :name (c14-9 / name
                                              :op1 "KFC"))
                    :ARG1 (c14-1 / wipe
                                 :purpose (c14-0 / suck-01
                                                 :ARG1 c14-5)))
       :polarity (c14-7 / amr-unknown))

# ::snt yeah in Scotland its World buffet tho its /15
# ::tokens ["yeah", "in", "Scotland", "its", "World", "buffet", "tho", "its", "/15"]
# ::lemmas ["yeah", "in", "Scotland", "its", "World", "buffet", "tho", "its", "/15"]
(c15-3 / have-concession-91
       :ARG1 (c15-0 / buffet
                    :mod (c15-5 / world)
                    :location (c15-2 / country
                                     :name (c15-1 / name
                                                  :op1 "Scotland")))
       :ARG2 (c15-6 / equal-01
                    :ARG2 15)
       :mod (c15-4 / yeah
                   :mode expressive))

# ::snt . It's easy KFC. Consumer choice
# ::tokens [".", "It", "'s", "easy", "KFC", ".", "Consumer", "choice"]
# ::lemmas [".", "it", "be", "easy", "KFC", ".", "consumer", "choice"]
(c16-2 / multi-sentence
       :snt1 (c16-7 / easy-05
                    :ARG1 (c16-0 / it)
                    :source (c16-4 / company
                                   :name (c16-6 / name
                                                :op1 "KFC")))
       :snt2 (c16-3 / choose-01
                    :ARG0 (c16-1 / person
                                 :ARG0-of (c16-5 / consume-01))))

# ::snt None of this is new.
# ::tokens ["None", "of", "this", "is", "new", "."]
# ::lemmas ["none", "of", "this", "be", "new", "."]
(c17-0 / new-01
       :ARG1 (c17-1 / this
                    :quant (c17-2 / none)))

# ::snt for Peppa Pig? Invite the bus passengers to a Hog roast to show there is no ill will.
# ::tokens ["for", "Peppa", "Pig", "?", "Invite", "the", "bus", "passengers", "to", "a", "Hog", "roast", "to", "show", "there", "is", "no", "ill", "will", "."]
# ::lemmas ["for", "Peppa", "Pig", "?", "invite", "the", "bus", "passenger", "to", "a", "Hog", "roast", "to", "show", "there", "be", "no", "ill", "will", "."]
(c18-13 / event
        :polarity (c18-11 / amr-unknown)
        :mod (c18-4 / person
                    :name (c18-7 / name
                                 :op1 "Peppa"
                                 :op2 "Pig"))
        :purpose (c18-2 / invite-01
                        :ARG0 (c18-8 / you)
                        :ARG1 (c18-14 / person
                                      :ARG0-of (c18-12 / passenger-01
                                                       :ARG1 (c18-3 / bus)))
                        :ARG2 (c18-5 / roast-01
                                     :ARG1 (c18-6 / animal
                                                  :name (c18-9 / name
                                                               :op1 "Hog")))
                        :purpose (c18-0 / show-01
                                        :ARG0 c18-8
                                        :ARG1 (c18-1 / will-02
                                                     :ARG1-of (c18-10 / ill-02)
                                                     :polarity -))))

# ::snt We've got jihad against peppa pig. Families thrown off bus for singing to kid
# ::tokens ["We", "'ve", "got", "jihad", "against", "peppa", "pig", ".", "Families", "thrown", "off", "bus", "for", "singing", "to", "kid"]
# ::lemmas ["we", "'ve", "get", "jihad", "against", "peppa", "pig", ".", "family", "throw", "off", "bus", "for", "singe", "to", "kid"]
(c19-4 / multi-sentence
       :snt1 (c19-11 / get-01
                     :ARG0 (c19-7 / we)
                     :ARG1 (c19-6 / jihad
                                  :prep-against (c19-2 / pig
                                                       :mod (c19-10 / pppa))))
       :snt2 (c19-3 / throw-01
                    :ARG1 (c19-9 / family)
                    :ARG2 (c19-1 / bus)
                    :ARG1-of (c19-5 / cause-01
                                    :ARG0 (c19-0 / sing-01
                                                 :ARG0 c19-9
                                                 :ARG2 (c19-8 / kid)))))

# ::snt find out which Abattoirs...they use,because they do not
# ::tokens ["find", "out", "which", "Abattoirs", "...", "they", "use", ",", "because", "they", "do", "not"]
# ::lemmas ["find", "out", "which", "Abattoirs", "...", "they", "use", ",", "because", "they", "do", "not"]
(c20-5 / find-out-03
       :ARG1 (c20-4 / Abattoir
                    :ARG1-of (c20-3 / use-01
                                    :ARG0 (c20-0 / they)
                                    :ARG1-of (c20-1 / cause-01
                                                    :ARG0 (c20-2 / use-01
                                                                 :ARG0 c20-0
                                                                 :polarity -)))))

# ::snt hey i think both of u shud stop voting and not procreate ok good talk
# ::tokens ["hey", "i", "think", "both", "of", "u", "shud", "stop", "voting", "and", "not", "procreate", "ok", "good", "talk"]
# ::lemmas ["hey", "i", "think", "both", "of", "u", "shud", "stop", "vote", "and", "not", "procreate", "ok", "good", "talk"]
(c21-10 / and
        :op1 (c21-4 / think-01
                    :ARG0 (c21-1 / i)
                    :ARG1 (c21-7 / and
                                 :op1 (c21-0 / stop-01
                                             :ARG0 (c21-8 / you
                                                          :mod (c21-2 / both))
                                             :ARG1 (c21-11 / vote-01
                                                           :ARG0 c21-8))
                                 :op2 (c21-3 / procreate-00
                                             :ARG0 c21-8
                                             :polarity -)))
        :op2 (c21-5 / okay-01
                    :ARG1 (c21-6 / talk-01
                                 :ARG1-of (c21-12 / good-02)))
        :mod (c21-9 / hey
                    :mode expressive))

# ::snt Ah well I make the best fried chicken any way I'm from the south
# ::tokens ["Ah", "well", "I", "make", "the", "best", "fried", "chicken", "any", "way", "I", "'m", "from", "the", "south"]
# ::lemmas ["ah", "well", "i", "make", "the", "good", "fry", "chicken", "any", "way", "i", "be", "from", "the", "south"]
(c22-3 / make-01
       :ARG0 (c22-2 / i)
       :ARG1 (c22-5 / chicken
                    :ARG1-of (c22-10 / fry-01)
                    :ARG1-of (c22-6 / have-degree-91
                                    :ARG2 (c22-7 / good-02
                                                 :ARG1 c22-5)
                                    :ARG3 (c22-9 / most)))
       :mod (c22-8 / ah-well
                   :mode expressive)
       :source (c22-0 / south)
       :manner (c22-1 / way
                      :mod (c22-4 / any)))

# ::snt scandal...because it would cost too much to do both....
# ::tokens ["scandal", "...", "because", "it", "would", "cost", "too", "much", "to", "do", "both", "...."]
# ::lemmas ["scandal", "...", "because", "it", "would", "cost", "too", "much", "to", "do", "both", "...."]
(c23-0 / scandal
       :ARG1-of (c23-5 / cause-01
                       :ARG0 (c23-4 / cost-01
                                    :ARG1 (c23-7 / do-02
                                                 :ARG1 (c23-1 / both))
                                    :ARG2 (c23-3 / much
                                                 :ARG2-of (c23-6 / have-degree-91
                                                                 :ARG1 c23-4
                                                                 :ARG3 (c23-2 / too))))))

# ::snt Islam says no alcohol, but raping you white girls is OK. We must return these people to homeland and then nuke the place
# ::tokens ["Islam", "says", "no", "alcohol", ",", "but", "raping", "you", "white", "girls", "is", "OK", ".", "We", "must", "return", "these", "people", "to", "homeland", "and", "then", "nuke", "the", "place"]
# ::lemmas ["Islam", "say", "no", "alcohol", ",", "but", "rape", "you", "white", "girl", "be", "ok", ".", "we", "must", "return", "these", "people", "to", "homeland", "and", "then", "nuke", "the", "place"]
(c24-10 / multi-sentence
        :snt1 (c24-2 / contrast-01
                     :ARG1 (c24-0 / say-01
                                  :ARG0 (c24-3 / religious-group
                                               :name (c24-13 / name
                                                             :op1 "Islam"))
                                  :ARG1 (c24-6 / alcohol
                                               :polarity -))
                     :ARG2 (c24-4 / okay-04
                                  :ARG1 (c24-16 / rape-01
                                                :ARG0 (c24-11 / you)
                                                :ARG1 (c24-20 / girl
                                                              :ARG1-of (c24-5 / white-02)))))
        :snt2 (c24-14 / obligate-01
                      :ARG1 (c24-18 / we)
                      :ARG2 (c24-1 / and
                                   :op1 (c24-7 / return-01
                                               :ARG1 (c24-8 / person
                                                            :mod (c24-17 / this))
                                               :ARG4 (c24-19 / homeland))
                                   :op2 (c24-12 / nuke-01
                                                :ARG0 c24-18
                                                :ARG1 (c24-15 / place)
                                                :time (c24-9 / then)))))

# ::snt they stink
# ::tokens ["they", "stink"]
# ::lemmas ["they", "stink"]
(c25-0 / stink-01
       :ARG1 (c25-1 / they))

# ::snt It's not hard when their food is basically a gizillion calories of tasteless crap
# ::tokens ["It", "'s", "not", "hard", "when", "their", "food", "is", "basically", "a", "gizillion", "calories", "of", "tasteless", "crap"]
# ::lemmas ["it", "be", "not", "hard", "when", "their", "food", "be", "basically", "a", "gizillion", "calorie", "of", "tasteless", "crap"]
(c26-6 / hard-02
       :ARG1 (c26-0 / it)
       :condition (c26-5 / calorie
                         :domain (c26-7 / food
                                        :poss (c26-2 / they))
                         :mod (c26-1 / basic)
                         :consist-of (c26-4 / crap
                                            :mod (c26-3 / tasteless))
                         :quant 1000000000)
       :polarity -)
