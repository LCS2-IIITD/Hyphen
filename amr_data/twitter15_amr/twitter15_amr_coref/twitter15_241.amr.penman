# ::snt : Fast and Furious "Delayed" But "Won't Be Scrapped" Following Paul Walker's Death: Report
# ::tokens [":", "Fast", "and", "Furious", "\"", "Delayed", "\"", "But", "\"", "Wo", "n't", "Be", "Scrapped", "\"", "Following", "Paul", "Walker", "'s", "Death", ":", "Report"]
# ::lemmas [":", "fast", "and", "furious", "\"", "delay", "\"", "but", "\"", "will", "not", "be", "scrap", "\"", "follow", "Paul", "Walker", "'s", "death", ":", "report"]
(c1-8 / report-01
      :ARG1 (c1-6 / contrast-01
                  :ARG1 (c1-9 / delay-01
                              :ARG1 (c1-5 / and
                                          :op1 (c1-10 / fast-02)
                                          :op2 (c1-0 / furious-02)))
                  :ARG2 (c1-1 / Scrap-01
                              :ARG1 (c1-3 / person
                                          :name (c1-7 / name
                                                      :op1 "Paul"
                                                      :op2 "Walker"))
                              :ARG1-of (c1-4 / follow-01
                                             :ARG2 (c1-2 / die-01
                                                         :ARG1 c1-3))
                              :polarity -)))

# ::snt pisseddd
# ::tokens ["pisseddd"]
# ::lemmas ["pisseddd"]
(c2-1 / thing
      :name (c2-0 / name
                  :op1 "Pisseddd"))

# ::snt truuu
# ::tokens ["truuu"]
# ::lemmas ["truuu"]
(c3-1 / thing
      :name (c3-0 / name
                  :op1 "truuu"))

# ::snt I never said the movie would be scrapped
# ::tokens ["I", "never", "said", "the", "movie", "would", "be", "scrapped"]
# ::lemmas ["i", "never", "say", "the", "movie", "would", "be", "scrap"]
(c4-0 / say-01
      :ARG0 (c4-2 / i)
      :ARG1 (c4-1 / scrap-01
                  :ARG1 (c4-3 / movie))
      :time (c4-4 / ever)
      :polarity -)

# ::snt : Fast and Furious "Delayed" But "Won't Be Scrapped" Following Paul Walker's Death: Report
# ::tokens [":", "Fast", "and", "Furious", "\"", "Delayed", "\"", "But", "\"", "Wo", "n't", "Be", "Scrapped", "\"", "Following", "Paul", "Walker", "'s", "Death", ":", "Report"]
# ::lemmas [":", "fast", "and", "furious", "\"", "delay", "\"", "but", "\"", "will", "not", "be", "scrap", "\"", "follow", "Paul", "Walker", "'s", "death", ":", "report"]
(c5-8 / report-01
      :ARG1 (c5-6 / contrast-01
                  :ARG1 (c5-9 / delay-01
                              :ARG1 (c5-5 / and
                                          :op1 (c5-10 / fast-02)
                                          :op2 (c5-0 / furious-02)))
                  :ARG2 (c5-1 / Scrap-01
                              :ARG1 (c5-3 / person
                                          :name (c5-7 / name
                                                      :op1 "Paul"
                                                      :op2 "Walker"))
                              :ARG1-of (c5-4 / follow-01
                                             :ARG2 (c5-2 / die-01
                                                         :ARG1 c5-3))
                              :polarity -)))

# ::snt why is this even important right now?
# ::tokens ["why", "is", "this", "even", "important", "right", "now", "?"]
# ::lemmas ["why", "be", "this", "even", "important", "right", "now", "?"]
(c6-0 / important-01
      :ARG1 (c6-1 / this)
      :mod (c6-6 / even)
      :time (c6-5 / now
                  :mod (c6-2 / right))
      :ARG1-of (c6-4 / cause-01
                     :ARG0 (c6-3 / amr-unknown)))

# ::snt : Fast and Furious "Delayed" But "Won't Be Scrapped" Following Paul Walker's Death: Report
# ::tokens [":", "Fast", "and", "Furious", "\"", "Delayed", "\"", "But", "\"", "Wo", "n't", "Be", "Scrapped", "\"", "Following", "Paul", "Walker", "'s", "Death", ":", "Report"]
# ::lemmas [":", "fast", "and", "furious", "\"", "delay", "\"", "but", "\"", "will", "not", "be", "scrap", "\"", "follow", "Paul", "Walker", "'s", "death", ":", "report"]
(c7-8 / report-01
      :ARG1 (c7-6 / contrast-01
                  :ARG1 (c7-9 / delay-01
                              :ARG1 (c7-5 / and
                                          :op1 (c7-10 / fast-02)
                                          :op2 (c7-0 / furious-02)))
                  :ARG2 (c7-1 / Scrap-01
                              :ARG1 (c7-3 / person
                                          :name (c7-7 / name
                                                      :op1 "Paul"
                                                      :op2 "Walker"))
                              :ARG1-of (c7-4 / follow-01
                                             :ARG2 (c7-2 / die-01
                                                         :ARG1 c7-3))
                              :polarity -)))
