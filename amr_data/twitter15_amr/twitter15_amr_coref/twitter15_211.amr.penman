# ::snt He has a lesser cut of a brain
# ::tokens ["He", "has", "a", "lesser", "cut", "of", "a", "brain"]
# ::lemmas ["he", "have", "a", "less", "cut", "of", "a", "brain"]
(c1-4 / have-03
      :ARG0 (c1-1 / he)
      :ARG1 (c1-3 / cut-01
                  :ARG1 (c1-0 / brain)
                  :ARG1-of (c1-5 / have-quant-91
                                 :ARG3 (c1-2 / less))))

# ::snt And he thinks he's a prime cut??
# ::tokens ["And", "he", "thinks", "he", "'s", "a", "prime", "cut", "?", "?"]
# ::lemmas ["and", "he", "think", "he", "be", "a", "prime", "cut", "?", "?"]
(c2-5 / and
      :op2 (c2-1 / think-01
                 :polarity (c2-2 / amr-unknown)
                 :ARG0 (c2-4 / he)
                 :ARG1 (c2-3 / cut-02
                             :mod (c2-0 / prime)
                             :domain c2-4)))

# ::snt clearly this guy knows food...maybe he is right....no wonder I love eating left overs.
# ::tokens ["clearly", "this", "guy", "knows", "food", "...", "maybe", "he", "is", "right", "....", "no", "wonder", "I", "love", "eating", "left", "overs", "."]
# ::lemmas ["clearly", "this", "guy", "know", "food", "...", "maybe", "he", "be", "right", "....", "no", "wonder", "i", "love", "eat", "left", "over", "."]
(c3-6 / multi-sentence
      :snt1 (c3-12 / know-01
                   :ARG0 (c3-10 / guy
                                :mod (c3-5 / this))
                   :ARG1 (c3-14 / food)
                   :ARG1-of (c3-7 / clear-06))
      :snt2 (c3-3 / possible-01
                  :ARG1 (c3-11 / right-06
                               :ARG1 (c3-9 / he)))
      :snt3 (c3-1 / wonder-02
                  :ARG1 (c3-4 / love-01
                              :ARG0 (c3-2 / i)
                              :ARG1 (c3-13 / eat-01
                                           :ARG0 c3-2
                                           :ARG1 (c3-0 / food
                                                       :ARG1-of (c3-8 / leave-over-08))))
                  :polarity -))

# ::snt Reason million why a Republican will never hold the presidency again in my lifetime.
# ::tokens ["Reason", "million", "why", "a", "Republican", "will", "never", "hold", "the", "presidency", "again", "in", "my", "lifetime", "."]
# ::lemmas ["reason", "million", "why", "a", "Republican", "will", "never", "hold", "the", "presidency", "again", "in", "my", "lifetime", "."]
(c4-8 / reason
      :ARG0-of (c4-5 / cause-01
                     :ARG1 (c4-7 / hold-01
                                 :ARG0 (c4-2 / person
                                             :ARG0-of (c4-0 / have-org-role-91
                                                            :ARG1 (c4-11 / political-party
                                                                         :name (c4-6 / name
                                                                                     :op1 "Republican"
                                                                                     :op2 "Party"))))
                                 :ARG1 (c4-9 / presidency)
                                 :mod (c4-4 / again)
                                 :time (c4-10 / ever)
                                 :time (c4-3 / lifetime
                                             :poss (c4-1 / i))
                                 :polarity -))
      :quant 1000000)

# ::snt broz b4 hoes c*cksucker....
# ::tokens ["broz", "b4", "hoes", "c*cksucker", "...."]
# ::lemmas ["broz", "b4", "hoe", "c*cksucker", "...."]
(c5-0 / say-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-5 / fuck-01
                  :mod (c5-1 / b4)
                  :mode expressive)
      :ARG2 (c5-3 / person
                  :name (c5-4 / name
                              :op1 "broz")))

# ::snt Thanks. We try.
# ::tokens ["Thanks", ".", "We", "try", "."]
# ::lemmas ["thank", ".", "we", "try", "."]
(c6-2 / multi-sentence
      :snt1 (c6-0 / thank-01
                  :ARG1 (c6-3 / you))
      :snt2 (c6-1 / try-01
                  :ARG0 (c6-4 / we)))

# ::snt Says a big fat balding lard bucket.
# ::tokens ["Says", "a", "big", "fat", "balding", "lard", "bucket", "."]
# ::lemmas ["say", "a", "big", "fat", "balding", "lard", "bucket", "."]
(c7-0 / say-01
      :ARG0 (c7-1 / bucket
                  :consist-of (c7-3 / lard)
                  :mod (c7-4 / big)
                  :ARG1-of (c7-5 / fat-03)
                  :mod (c7-2 / balding)))

# ::snt Excellent point.
# ::tokens ["Excellent", "point", "."]
# ::lemmas ["excellent", "point", "."]
(c8-1 / point-04
      :ARG1-of (c8-0 / excellent-02))

# ::snt Whoa. That should get him whatever he wants! at least in South Carolina
# ::tokens ["Whoa", ".", "That", "should", "get", "him", "whatever", "he", "wants", "!", "at", "least", "in", "South", "Carolina"]
# ::lemmas ["whoa", ".", "that", "should", "get", "he", "whatever", "he", "want", "!", "at", "least", "in", "South", "Carolina"]
(c9-4 / multi-sentence
      :snt1 (c9-9 / whoa
                  :mode expressive)
      :snt2 (c9-1 / recommend-01
                  :ARG1 (c9-10 / get-01
                               :ARG0 (c9-2 / that)
                               :ARG1 (c9-5 / whatever
                                           :ARG1-of (c9-6 / want-01
                                                          :ARG0 (c9-8 / he
                                                                      :ARG2-of c9-10)))
                               :location (c9-0 / state
                                               :name (c9-7 / name
                                                           :op1 "South"
                                                           :op2 "Carolina")
                                               :mod (c9-3 / at-least)))))

# ::snt Probably why he won the award.
# ::tokens ["Probably", "why", "he", "won", "the", "award", "."]
# ::lemmas ["probably", "why", "he", "win", "the", "award", "."]
(c10-3 / probable
       :domain (c10-0 / win-01
                      :ARG0 (c10-2 / he)
                      :ARG1 (c10-1 / award)))

# ::snt oh, yes. Analogy. Male humans are the real deal. Females at the lesser (biblical) rib meat. (am I halping?)
# ::tokens ["oh", ",", "yes", ".", "Analogy", ".", "Male", "humans", "are", "the", "real", "deal", ".", "Females", "at", "the", "lesser", "(", "biblical", ")", "rib", "meat", ".", "(", "am", "I", "halping", "?", ")"]
# ::lemmas ["oh", ",", "yes", ".", "analogy", ".", "male", "human", "be", "the", "real", "deal", ".", "female", "at", "the", "less", "(", "biblical", ")", "rib", "meat", ".", "(", "be", "i", "halpe", "?", ")"]
(c11-12 / multi-sentence
        :snt1 (c11-14 / yes)
        :snt2 (c11-18 / genealogy)
        :snt3 (c11-10 / deal
                      :ARG1-of (c11-2 / real-04)
                      :domain (c11-17 / human
                                      :mod (c11-9 / male)))
        :snt4 (c11-4 / have-03
                     :ARG0 (c11-11 / female)
                     :ARG1 (c11-7 / meat
                                  :consist-of (c11-16 / rib)
                                  :ARG1-of (c11-3 / have-degree-91
                                                  :ARG2 (c11-13 / great)
                                                  :ARG3 (c11-1 / less)
                                                  :ARG4 (c11-5 / book
                                                               :name (c11-15 / name
                                                                             :op1 "Bible")))))
        :snt5 (c11-6 / halp-01
                     :ARG0 (c11-0 / i)
                     :polarity (c11-8 / amr-unknown)))

# ::snt comparison to different cuts of beef, most likely.
# ::tokens ["comparison", "to", "different", "cuts", "of", "beef", ",", "most", "likely", "."]
# ::lemmas ["comparison", "to", "different", "cut", "of", "beef", ",", "most", "likely", "."]
(c12-4 / compare-01
       :ARG2 (c12-3 / cut-02
                    :ARG1 (c12-0 / beef)
                    :ARG1-of (c12-6 / differ-02))
       :ARG1-of (c12-1 / likely-01
                       :ARG2-of (c12-5 / have-degree-91
                                       :ARG1 c12-4
                                       :ARG3 (c12-2 / most))))

# ::snt Yeah,he looks like he gets laid all the time.He probably has to climb feet of pussy to get into his house.
# ::tokens ["Yeah", ",", "he", "looks", "like", "he", "gets", "laid", "all", "the", "time", ".", "He", "probably", "has", "to", "climb", "feet", "of", "pussy", "to", "get", "into", "his", "house", "."]
# ::lemmas ["yeah", ",", "he", "look", "like", "he", "gets", "lay", "all", "the", "time", ".", "he", "probably", "have", "to", "climb", "foot", "of", "pussy", "to", "get", "into", "his", "house", "."]
(c13-5 / multi-sentence
       :snt1 (c13-2 / look-02
                    :ARG0 (c13-8 / he)
                    :ARG1 (c13-7 / lay-04
                                 :ARG1 c13-8
                                 :time (c13-3 / time
                                              :mod (c13-10 / all))))
       :snt2 (c13-4 / obligate-01
                    :ARG1 (c13-0 / he)
                    :ARG2 (c13-6 / climb-01
                                 :ARG0 c13-0
                                 :ARG1 (c13-1 / pussy
                                              :quant (c13-12 / foot))
                                 :purpose (c13-9 / get-05
                                                 :ARG1 c13-0
                                                 :ARG2 (c13-13 / house
                                                               :poss c13-0)))
                    :mod (c13-11 / probable)))

# ::snt Ppl who elected Corbin need to call him out. Young ppl learn from adults early &amp; by early adulthood they do the same.
# ::tokens ["Ppl", "who", "elected", "Corbin", "need", "to", "call", "him", "out", ".", "Young", "ppl", "learn", "from", "adults", "early", "&", "amp", ";", "by", "early", "adulthood", "they", "do", "the", "same", "."]
# ::lemmas ["Ppl", "who", "elect", "Corbin", "need", "to", "call", "he", "out", ".", "young", "ppl", "learn", "from", "adult", "early", "&", "amp", ";", "by", "early", "adulthood", "they", "do", "the", "same", "."]
(c14-13 / multi-sentence
        :snt1 (c14-19 / need-01
                      :ARG0 (c14-11 / person
                                    :ARG0-of (c14-10 / elect-01
                                                     :ARG1 (c14-20 / person
                                                                   :name (c14-18 / name
                                                                                 :op1 "Corbin"))))
                      :ARG1 (c14-3 / call-out-15
                                   :ARG0 c14-11))
        :snt2 (c14-7 / and
                     :op1 (c14-1 / learn-01
                                 :ARG0 (c14-9 / person
                                              :mod (c14-17 / young))
                                 :ARG2 (c14-2 / adult)
                                 :time (c14-12 / early))
                     :op2 (c14-4 / learn-01
                                 :ARG0 c14-9
                                 :ARG2 (c14-22 / adult)
                                 :time (c14-5 / early
                                              :op1 (c14-16 / adult
                                                           :mod (c14-14 / adult)))))
        :snt3 (c14-8 / do-02
                     :ARG0 (c14-21 / they)
                     :ARG1 (c14-0 / same-01)
                     :time (c14-6 / by
                                  :op1 (c14-15 / early
                                               :op1 (c14-23 / adult)))))

# ::snt Just amazing thats all I can say!!!!!!
# ::tokens ["Just", "amazing", "that", "s", "all", "I", "can", "say", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["just", "amazing", "that", "s", "all", "i", "can", "say", "!", "!", "!", "!", "!", "!"]
(c15-5 / amaze-01
       :ARG0 (c15-3 / that
                    :ARG1-of (c15-0 / say-01
                                    :ARG0 (c15-1 / i)
                                    :ARG1-of (c15-2 / possible-01)))
       :mod (c15-4 / just)
       :mode expressive)

# ::snt Must have brain impairment due to the abdominal girth and therefore affects brain function.
# ::tokens ["Must", "have", "brain", "impairment", "due", "to", "the", "abdominal", "girth", "and", "therefore", "affects", "brain", "function", "."]
# ::lemmas ["must", "have", "brain", "impairment", "due", "to", "the", "abdominal", "girth", "and", "therefore", "affect", "brain", "function", "."]
(c16-1 / infer-01
       :ARG1 (c16-5 / impair-01
                    :ARG0 (c16-8 / girth
                                 :mod (c16-6 / abdominal))
                    :ARG1 (c16-0 / brain)
                    :ARG0-of (c16-3 / cause-01
                                    :ARG1 (c16-2 / affect-01
                                                 :ARG0 c16-8
                                                 :ARG1 (c16-7 / function-01
                                                              :ARG0 (c16-4 / brain))))))

# ::snt Where's Loretta BOBBIT when a butcher is needed?
# ::tokens ["Where", "'s", "Loretta", "BOBBIT", "when", "a", "butcher", "is", "needed", "?"]
# ::lemmas ["where", "be", "Loretta", "BOBBIT", "when", "a", "butcher", "be", "need", "?"]
(c17-0 / be-located-at-91
       :ARG1 (c17-1 / person
                    :name (c17-5 / name
                                 :op1 "Loretta"
                                 :op2 "BobBIT"))
       :ARG2 (c17-2 / amr-unknown)
       :time (c17-4 / need-01
                    :ARG1 (c17-6 / person
                                 :ARG0-of (c17-3 / butcher-01))))

# ::snt but u said " won world war II"
# ::tokens ["but", "u", "said", "\"", "won", "world", "war", "II", "\""]
# ::lemmas ["but", "u", "say", "\"", "win", "world", "war", "II", "\""]
(c18-2 / contrast-01
       :ARG2 (c18-0 / say-01
                    :ARG0 (c18-4 / you)
                    :ARG1 (c18-5 / win-01
                                 :ARG2 (c18-1 / war
                                              :name (c18-3 / name
                                                           :op1 "World"
                                                           :op2 "War"
                                                           :op3 "II")))))

# ::snt . I didn't say "Soldiers", did I? the Riveter: Real Women Workers in World War II
# ::tokens [".", "I", "did", "n't", "say", "\"", "Soldiers", "\"", ",", "did", "I", "?", "the", "Riveter", ":", "Real", "Women", "Workers", "in", "World", "War", "II"]
# ::lemmas [".", "i", "do", "not", "say", "\"", "soldier", "\"", ",", "do", "i", "?", "the", "riveter", ":", "Real", "Women", "Workers", "in", "World", "War", "II"]
(c19-6 / multi-sentence
       :snt1 (c19-0 / say-01
                    :ARG0 (c19-3 / i)
                    :ARG1 (c19-2 / soldier)
                    :ARG1-of (c19-11 / request-confirmation-91
                                     :ARG0 c19-3)
                    :polarity -)
       :snt2 (c19-4 / publication
                    :name (c19-7 / name
                                 :op1 "The"
                                 :op2 "Riveter")
                    :topic (c19-12 / person
                                   :ARG0-of (c19-1 / work-01
                                                   :ARG2 (c19-8 / woman
                                                                :ARG1-of (c19-5 / real-04)))
                                   :time (c19-9 / war
                                                :name (c19-10 / name
                                                              :op1 "World"
                                                              :op2 "War"
                                                              :op3 "II")))))

# ::snt yeak cuz it was a bunch of women landing on the beach and getting blown to bits.... come on think before u speak
# ::tokens ["yeak", "cuz", "it", "was", "a", "bunch", "of", "women", "landing", "on", "the", "beach", "and", "getting", "blown", "to", "bits", "....", "come", "on", "think", "before", "u", "speak"]
# ::lemmas ["yeak", "cuz", "it", "be", "a", "bunch", "of", "woman", "land", "on", "the", "beach", "and", "getting", "blow", "to", "bit", "....", "come", "on", "think", "before", "u", "speak"]
(c20-5 / multi-sentence
       :snt1 (c20-7 / cause-01
                    :ARG0 (c20-4 / land-01
                                 :ARG1 (c20-11 / woman
                                               :quant (c20-2 / bunch))
                                 :ARG2 (c20-8 / beach))
                    :ARG1 (c20-3 / blow-01
                                 :ARG1 c20-11
                                 :ARG2 (c20-0 / bit)))
       :snt2 (c20-6 / come-on-25
                    :ARG1 (c20-9 / you)
                    :time (c20-10 / before
                                  :op1 (c20-1 / speak-01
                                              :ARG0 c20-9))
                    :mode imperative))

# ::snt How about: A rarer, fine, Number , Grade A, Top Choice.... Maybe that's what he meant by "a lesser cut".
# ::tokens ["How", "about", ":", "A", "rarer", ",", "fine", ",", "Number", ",", "Grade", "A", ",", "Top", "Choice", "....", "Maybe", "that", "'s", "what", "he", "meant", "by", "\"", "a", "lesser", "cut", "\"", "."]
# ::lemmas ["how", "about", ":", "a", "rare", ",", "fine", ",", "Number", ",", "Grade", "A", ",", "Top", "Choice", "....", "maybe", "that", "be", "what", "he", "mean", "by", "\"", "a", "less", "cut", "\"", "."]
(c21-7 / multi-sentence
       :snt1 (c21-2 / possible-01
                    :ARG1 (c21-14 / mean-01
                                  :ARG0 (c21-11 / he)
                                  :ARG1 (c21-9 / cut-02
                                               :ARG1-of (c21-1 / have-quant-91
                                                               :ARG3 (c21-3 / less)))
                                  :ARG2 (c21-4 / that)))
       :snt2 (c21-13 / and
                     :op1 (c21-5 / rare-02
                                 :ARG1 (c21-10 / number))
                     :op2 (c21-15 / fine-03
                                  :ARG1 c21-10)
                     :op3 (c21-12 / grade
                                  :mod (c21-0 / string-entity
                                              :value "A"))
                     :op4 (c21-8 / choose-01
                                 :mod (c21-6 / top))))

# ::snt Been listening to an Imam who said the same thing?
# ::tokens ["Been", "listening", "to", "an", "Imam", "who", "said", "the", "same", "thing", "?"]
# ::lemmas ["been", "listen", "to", "an", "Imam", "who", "say", "the", "same", "thing", "?"]
(c22-3 / listen-01
       :ARG0 (c22-1 / i)
       :ARG1 (c22-5 / imam
                    :ARG0-of (c22-0 / say-01
                                    :ARG1 (c22-4 / thing
                                                 :ARG1-of (c22-2 / same-01))))
       :polarity (c22-6 / amr-unknown))

# ::snt He must like sausage
# ::tokens ["He", "must", "like", "sausage"]
# ::lemmas ["he", "must", "like", "sausage"]
(c23-3 / infer-01
       :ARG1 (c23-0 / like-01
                    :ARG0 (c23-2 / he)
                    :ARG1 (c23-1 / sausage)))

# ::snt - st of all (1/2wit) - If you believe in the Bible, then that lesser cut of meat would be - A man named Adam (genius
# ::tokens ["-", "st", "of", "all", "(", "1/2wit", ")", "-", "If", "you", "believe", "in", "the", "Bible", ",", "then", "that", "lesser", "cut", "of", "meat", "would", "be", "-", "A", "man", "named", "Adam", "(", "genius"]
# ::lemmas ["-", "st", "of", "all", "(", "1/2wit", ")", "-", "if", "you", "believe", "in", "the", "Bible", ",", "then", "that", "less", "cut", "of", "meat", "would", "be", "-", "a", "man", "name", "Adam", "(", "genius"]
(c24-10 / have-condition-91
        :ARG1 (c24-7 / cut-01
                     :ARG1 (c24-6 / meat)
                     :ARG2 (c24-14 / man
                                   :name (c24-13 / name
                                                 :op1 "Adam")
                                   :mod (c24-15 / genius))
                     :mod (c24-5 / that)
                     :ARG1-of (c24-1 / have-quant-91
                                     :ARG3 (c24-4 / less)))
        :ARG2 (c24-2 / believe-01
                     :ARG0 (c24-11 / you)
                     :ARG1 (c24-9 / book
                                  :name (c24-12 / name
                                                :op1 "Bible")))
        :ARG1-of (c24-0 / say-01
                        :ARG0 (c24-3 / publication
                                     :name (c24-8 / name
                                                  :op1 "1/2"))))

# ::snt wonder if he considered how he'd be here without one?!
# ::tokens ["wonder", "if", "he", "considered", "how", "he", "'d", "be", "here", "without", "one", "?", "!"]
# ::lemmas ["wonder", "if", "he", "consider", "how", "he", "would", "be", "here", "without", "one", "?", "!"]
(c25-7 / wonder-01
       :ARG0 (c25-0 / i)
       :ARG1 (c25-5 / consider-02
                    :ARG0 (c25-6 / he)
                    :ARG1 (c25-3 / thing
                                 :manner-of (c25-1 / be-located-at-91
                                                   :ARG1 c25-6
                                                   :ARG2 (c25-2 / here)
                                                   :manner (c25-8 / have-03
                                                                  :ARG0 c25-6
                                                                  :ARG1 (c25-4 / one)
                                                                  :polarity -))))
       :mode expressive)

# ::snt haha. Tht's funny.
# ::tokens ["haha", ".", "Tht", "'s", "funny", "."]
# ::lemmas ["haha", ".", "tht", "be", "funny", "."]
(c26-3 / funny
       :domain (c26-1 / person
                      :name (c26-0 / name
                                   :op1 "t"))
       :mod (c26-2 / haha
                   :mode expressive))

# ::snt He must be part of the meat that has fat!!!
# ::tokens ["He", "must", "be", "part", "of", "the", "meat", "that", "has", "fat", "!", "!", "!"]
# ::lemmas ["he", "must", "be", "part", "of", "the", "meat", "that", "have", "fat", "!", "!", "!"]
(c27-2 / infer-01
       :ARG1 (c27-1 / he
                    :part-of (c27-3 / meat
                                    :ARG1-of (c27-0 / fat-03)))
       :mode expressive)

# ::snt Takes skill to combine a stupid idea with crass choice of wording.
# ::tokens ["Takes", "skill", "to", "combine", "a", "stupid", "idea", "with", "crass", "choice", "of", "wording", "."]
# ::lemmas ["take", "skill", "to", "combine", "a", "stupid", "idea", "with", "crass", "choice", "of", "wording", "."]
(c28-3 / take-10
       :ARG0 (c28-5 / combine-01
                    :ARG1 (c28-1 / idea
                                 :mod (c28-0 / stupid))
                    :ARG2 (c28-4 / choose-01
                                 :ARG1 (c28-7 / word-01)
                                 :mod (c28-6 / crass)))
       :ARG1 (c28-2 / skill))

# ::snt .S. Carolina supermarkets to replace all "lesser cuts of women meat" w Corbin prime dick.
# ::tokens [".S.", "Carolina", "supermarkets", "to", "replace", "all", "\"", "lesser", "cuts", "of", "women", "meat", "\"", "w", "Corbin", "prime", "dick", "."]
# ::lemmas [".s.", "Carolina", "supermarket", "to", "replace", "all", "\"", "less", "cut", "of", "woman", "meat", "\"", "w", "Corbin", "prime", "dick", "."]
(c29-13 / replace-01
        :ARG0 (c29-1 / supermarket
                     :location (c29-3 / state
                                      :name (c29-10 / name
                                                    :op1 "South"
                                                    :op2 "Carolina")))
        :ARG1 (c29-9 / cut-02
                     :ARG1 (c29-7 / meat
                                  :poss (c29-2 / woman))
                     :ARG1-of (c29-11 / have-degree-91
                                      :ARG2 (c29-5 / low-04
                                                   :ARG1 c29-9)
                                      :ARG3 (c29-14 / more))
                     :mod (c29-6 / all))
        :ARG2 (c29-0 / dick
                     :mod (c29-4 / prime)
                     :poss (c29-8 / company
                                  :name (c29-12 / name
                                                :op1 "Corbin"))))

# ::snt smh. Yeah, cause that is how I took it when I read it..oh, what a nice compliment. :eyeroll
# ::tokens ["smh", ".", "Yeah", ",", "cause", "that", "is", "how", "I", "took", "it", "when", "I", "read", "it", "..", "oh", ",", "what", "a", "nice", "compliment", ".", ":", "eyeroll"]
# ::lemmas ["smh", ".", "yeah", ",", "cause", "that", "be", "how", "i", "take", "it", "when", "i", "read", "it", "..", "oh", ",", "what", "a", "nice", "compliment", ".", ":", "eyeroll"]
(c30-7 / multi-sentence
       :snt1 (c30-0 / smh
                    :mode expressive)
       :snt2 (c30-9 / cause-01
                    :ARG0 (c30-4 / that)
                    :ARG1 (c30-5 / take-01
                                 :ARG0 (c30-1 / i)
                                 :ARG1 (c30-11 / it)
                                 :time (c30-13 / read-01
                                               :ARG0 c30-1
                                               :ARG1 c30-11)))
       :snt3 (c30-8 / compliment-01
                    :ARG1-of (c30-10 / nice-01
                                     :degree (c30-2 / so))
                    :mod (c30-6 / oh
                                :mode expressive))
       :snt4 (c30-3 / person
                    :name (c30-12 / name
                                  :op1 "eyeroll")))

# ::snt :unfortunately he is. But, yes, hopefully he will now be a former senator
# ::tokens [":", "unfortunately", "he", "is", ".", "But", ",", "yes", ",", "hopefully", "he", "will", "now", "be", "a", "former", "senator"]
# ::lemmas [":", "unfortunately", "he", "be", ".", "but", ",", "yes", ",", "hopefully", "he", "will", "now", "be", "a", "former", "senator"]
(c31-5 / multi-sentence
       :snt1 (c31-11 / fortunate-01
                     :ARG2 (c31-8 / he)
                     :polarity -)
       :snt2 (c31-7 / contrast-01
                    :ARG2 (c31-2 / hopeful-03
                                 :ARG1 (c31-3 / become-01
                                              :ARG1 (c31-12 / he)
                                              :ARG2 (c31-4 / person
                                                           :ARG0-of (c31-6 / have-org-role-91
                                                                           :ARG2 (c31-1 / senator))
                                                           :time (c31-0 / former))
                                              :time (c31-10 / now))
                                 :mod (c31-9 / yes))))

# ::snt if people are cuts of meat, this dude is what some folks call "THE TURKEY BUTT"
# ::tokens ["if", "people", "are", "cuts", "of", "meat", ",", "this", "dude", "is", "what", "some", "folks", "call", "\"", "THE", "TURKEY", "BUTT", "\""]
# ::lemmas ["if", "people", "be", "cut", "of", "meat", ",", "this", "dude", "be", "what", "some", "folk", "call", "\"", "THE", "TURKEY", "BUTT", "\""]
(c32-6 / call-01
       :ARG0 (c32-9 / folk
                    :quant (c32-0 / some))
       :ARG1 (c32-8 / dude
                    :mod (c32-2 / this))
       :ARG2 (c32-5 / contrast-01
                    :ARG2 (c32-3 / turkey))
       :condition (c32-7 / cut-01
                         :ARG1 (c32-4 / meat)
                         :ARG2 (c32-1 / person)))

# ::snt me neither
# ::tokens ["me", "neither"]
# ::lemmas ["i", "neither"]
(c33-0 / i
       :mod (c33-1 / either))

# ::snt don't even want to know.
# ::tokens ["do", "n't", "even", "want", "to", "know", "."]
# ::lemmas ["do", "not", "even", "want", "to", "know", "."]
(c34-0 / want-01
       :ARG1 (c34-1 / know-01)
       :mod (c34-2 / even)
       :polarity -)

# ::snt ha, I think they do. And these are the things they say publicly, can you imagine what is said in private?!?
# ::tokens ["ha", ",", "I", "think", "they", "do", ".", "And", "these", "are", "the", "things", "they", "say", "publicly", ",", "can", "you", "imagine", "what", "is", "said", "in", "private", "?", "!", "?"]
# ::lemmas ["ha", ",", "i", "think", "they", "do", ".", "and", "these", "be", "the", "thing", "they", "say", "publicly", ",", "can", "you", "imagine", "what", "be", "say", "in", "private", "?", "!", "?"]
(c35-12 / multi-sentence
        :snt1 (c35-16 / think-01
                      :ARG0 (c35-1 / i)
                      :ARG1 (c35-8 / do-02
                                   :ARG0 (c35-11 / they))
                      :mod (c35-18 / ha
                                   :mode expressive))
        :snt2 (c35-7 / and
                     :op2 (c35-0 / say-01
                                 :ARG0 (c35-6 / they)
                                 :ARG1 (c35-17 / thing
                                               :mod (c35-14 / this))
                                 :ARG1-of (c35-10 / public-02)))
        :snt3 (c35-15 / possible-01
                      :ARG1 (c35-4 / imagine-01
                                   :ARG0 (c35-13 / you)
                                   :ARG1 (c35-2 / thing
                                                :ARG1-of (c35-5 / say-01
                                                                :manner (c35-9 / private-02)))
                                   :polarity (c35-3 / amr-unknown))))

# ::snt i mean, do they enter a contest of who can say the most ignorant things? Field trip to Hershey?
# ::tokens ["i", "mean", ",", "do", "they", "enter", "a", "contest", "of", "who", "can", "say", "the", "most", "ignorant", "things", "?", "Field", "trip", "to", "Hershey", "?"]
# ::lemmas ["i", "mean", ",", "do", "they", "enter", "a", "contest", "of", "who", "can", "say", "the", "most", "ignorant", "thing", "?", "field", "trip", "to", "Hershey", "?"]
(c36-6 / multi-sentence
       :snt1 (c36-14 / mean-01
                     :ARG0 (c36-1 / i)
                     :ARG2 (c36-15 / enter-01
                                   :ARG0 (c36-4 / they)
                                   :ARG1 (c36-8 / contest-02
                                                :ARG2 (c36-13 / amr-unknown
                                                              :ARG0-of (c36-0 / say-01
                                                                              :ARG1 (c36-5 / thing
                                                                                           :ARG1-of (c36-12 / ignorant-02
                                                                                                            :ARG2-of (c36-11 / have-degree-91
                                                                                                                             :ARG1 c36-5
                                                                                                                             :ARG3 (c36-9 / most))))
                                                                              :ARG1-of (c36-2 / possible-01))))))
       :snt2 (c36-3 / trip-03
                    :ARG0 (c36-16 / field)
                    :ARG1 (c36-7 / city
                                 :name (c36-10 / name
                                               :op1 "Hershey"))
                    :polarity c36-13))

# ::snt Yep. But, what do I know, I'm a lesser cut of meat.
# ::tokens ["Yep", ".", "But", ",", "what", "do", "I", "know", ",", "I", "'m", "a", "lesser", "cut", "of", "meat", "."]
# ::lemmas ["yep", ".", "but", ",", "what", "do", "i", "know", ",", "i", "be", "a", "less", "cut", "of", "meat", "."]
(c37-3 / multi-sentence
       :snt1 (c37-6 / yep)
       :snt2 (c37-5 / contrast-01
                    :ARG2 (c37-8 / know-01
                                 :ARG0 (c37-0 / i)
                                 :ARG1 (c37-4 / cut-03
                                              :ARG1 (c37-1 / meat)
                                              :ARG1-of (c37-7 / have-quant-91
                                                              :ARG3 (c37-2 / less))
                                              :domain c37-0))))

# ::snt what a dumb ass! Holy cow.
# ::tokens ["what", "a", "dumb", "ass", "!", "Holy", "cow", "."]
# ::lemmas ["what", "a", "dumb", "ass", "!", "holy", "cow", "."]
(c38-1 / multi-sentence
       :snt1 (c38-4 / ass
                    :mod (c38-5 / dumb
                                :degree (c38-0 / so)))
       :snt2 (c38-2 / cow
                    :mod (c38-3 / holy)))

# ::snt : Sen. Thomas Corbin saying women are "a lesser cut of meat"
# ::tokens [":", "Sen.", "Thomas", "Corbin", "saying", "women", "are", "\"", "a", "lesser", "cut", "of", "meat", "\""]
# ::lemmas [":", "Sen.", "Thomas", "Corbin", "say", "woman", "be", "\"", "a", "less", "cut", "of", "meat", "\""]
(c39-0 / say-01
       :ARG0 (c39-4 / person
                    :name (c39-9 / name
                                 :op1 "Thomas"
                                 :op2 "Corbin")
                    :ARG0-of (c39-8 / have-org-role-91
                                    :ARG2 (c39-2 / senator)))
       :ARG1 (c39-7 / cut-03
                    :ARG1 (c39-6 / meat)
                    :ARG2 (c39-1 / woman)
                    :ARG1-of (c39-3 / have-quant-91
                                    :ARG3 (c39-5 / less))))

# ::snt What a total ass.
# ::tokens ["What", "a", "total", "ass", "."]
# ::lemmas ["what", "a", "total", "ass", "."]
(c40-0 / ass
       :degree (c40-1 / total)
       :domain (c40-2 / you))

# ::snt Amen!
# ::tokens ["Amen", "!"]
# ::lemmas ["amen", "!"]
(c41-0 / amen
       :mode expressive)

# ::snt ...and I thought we had it bad here in Aus under the Neanderthal, science-hating, Ayn Rand neolib Abbott govt!
# ::tokens ["...", "and", "I", "thought", "we", "had", "it", "bad", "here", "in", "Aus", "under", "the", "Neanderthal", ",", "science", "-", "hating", ",", "Ayn", "Rand", "neolib", "Abbott", "govt", "!"]
# ::lemmas ["...", "and", "i", "think", "we", "have", "it", "bad", "here", "in", "Aus", "under", "the", "Neanderthal", ",", "science", "-", "hate", ",", "Ayn", "Rand", "neolib", "Abbott", "govt", "!"]
(c42-14 / and
        :op2 (c42-6 / think-01
                    :ARG0 (c42-2 / i)
                    :ARG1 (c42-11 / have-03
                                  :ARG0 (c42-1 / we)
                                  :ARG1 (c42-12 / it)
                                  :ARG1-of (c42-3 / bad-07)
                                  :location (c42-4 / here
                                                   :location (c42-8 / country
                                                                    :name (c42-9 / name
                                                                                 :op1 "Australia")))
                                  :prep-under (c42-16 / government-organization
                                                      :ARG0-of (c42-7 / govern-01)
                                                      :mod (c42-5 / person
                                                                  :name (c42-13 / name
                                                                                :op1 "Neolib"
                                                                                :op2 "Abbott"))
                                                      :ARG0-of (c42-17 / hate-01
                                                                       :ARG1 (c42-0 / science))
                                                      :mod (c42-15 / person
                                                                   :name (c42-10 / name
                                                                                 :op1 "Neanderthal"))))))

# ::snt This RWNJ lunatic actually said this? FFS!!!!
# ::tokens ["This", "RWNJ", "lunatic", "actually", "said", "this", "?", "FFS", "!", "!", "!", "!"]
# ::lemmas ["this", "RWNJ", "lunatic", "actually", "say", "this", "?", "FFS", "!", "!", "!", "!"]
(c43-5 / multi-sentence
       :snt1 (c43-0 / say-01
                    :polarity (c43-8 / amr-unknown)
                    :ARG0 (c43-2 / lunatic
                                 :mod (c43-3 / this)
                                 :mod (c43-1 / publication
                                             :name (c43-7 / name
                                                          :op1 "RWNJ")))
                    :ARG1 (c43-4 / this)
                    :ARG1-of (c43-6 / actual-02))
       :snt2 (c43-9 / fuck-01
                    :mode expressive))

# ::snt South Carolina (?) asshole of the day. I wonder how many men quietly agree with him tho'?
# ::tokens ["South", "Carolina", "(", "?", ")", "asshole", "of", "the", "day", ".", "I", "wonder", "how", "many", "men", "quietly", "agree", "with", "him", "tho", "'", "?"]
# ::lemmas ["South", "Carolina", "(", "?", ")", "asshole", "of", "the", "day", ".", "i", "wonder", "how", "many", "man", "quietly", "agree", "with", "he", "tho", "'", "?"]
(c44-5 / multi-sentence
       :snt1 (c44-10 / asshole
                     :location (c44-0 / state
                                      :name (c44-7 / name
                                                   :op1 "South"
                                                   :op2 "Carolina"))
                     :time (c44-11 / day))
       :snt2 (c44-1 / wonder-01
                    :ARG0 (c44-2 / i)
                    :ARG1 (c44-9 / number
                                 :quant-of (c44-3 / man
                                                  :ARG0-of (c44-6 / agree-01
                                                                  :ARG2 (c44-8 / he)
                                                                  :ARG1-of (c44-12 / quiet-04))))
                    :ARG1-of (c44-4 / request-confirmation-91)))

# ::snt How could that be for Hell has no furry like a Woman's scorn.
# ::tokens ["How", "could", "that", "be", "for", "Hell", "has", "no", "furry", "like", "a", "Woman", "'s", "scorn", "."]
# ::lemmas ["how", "could", "that", "be", "for", "Hell", "have", "no", "furry", "like", "a", "Woman", "'s", "scorn", "."]
(c45-3 / possible-01
       :ARG1 (c45-4 / that
                    :beneficiary (c45-6 / hell)
                    :ARG0-of (c45-2 / have-03
                                    :ARG1 (c45-8 / furry
                                                 :ARG1-of (c45-7 / resemble-01
                                                                 :ARG2 (c45-0 / scorn-01
                                                                              :ARG0 (c45-1 / woman))))
                                    :polarity -))
       :manner (c45-5 / amr-unknown))

# ::snt Ahem...WELCOME TO THE INTERNET
# ::tokens ["Ahem", "...", "WELCOME", "TO", "THE", "INTERNET"]
# ::lemmas ["ahem", "...", "welcome", "to", "the", "internet"]
(c46-0 / welcome-01
       :ARG1 (c46-2 / you)
       :ARG2 (c46-3 / internet)
       :mod (c46-1 / ah
                   :mode expressive)
       :mode expressive)

# ::snt spake the pig...
# ::tokens ["spake", "the", "pig", "..."]
# ::lemmas ["spake", "the", "pig", "..."]
(c47-0 / shake-01
       :ARG0 (c47-1 / you)
       :ARG1 (c47-2 / pig)
       :mode imperative)

# ::snt If he has a wife I would hope she would serve him "well done" after that remark.
# ::tokens ["If", "he", "has", "a", "wife", "I", "would", "hope", "she", "would", "serve", "him", "\"", "well", "done", "\"", "after", "that", "remark", "."]
# ::lemmas ["if", "he", "have", "a", "wife", "i", "would", "hope", "she", "would", "serve", "he", "\"", "well", "do", "\"", "after", "that", "remark", "."]
(c48-9 / hope-01
       :ARG0 (c48-2 / i)
       :ARG1 (c48-0 / serve-01
                    :ARG0 (c48-3 / person
                                 :ARG0-of (c48-1 / have-rel-role-91
                                                 :ARG1 (c48-12 / he)
                                                 :ARG2 (c48-10 / wife)))
                    :ARG1 (c48-11 / do-02
                                  :ARG1-of (c48-8 / well-09))
                    :ARG2 c48-12
                    :time (c48-5 / after
                                 :op1 (c48-4 / remark-01
                                             :mod (c48-6 / that))))
       :condition (c48-7 / have-03
                         :ARG0 c48-12
                         :ARG1 c48-3))
