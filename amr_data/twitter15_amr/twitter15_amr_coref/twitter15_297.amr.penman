# ::snt Obviously - this is now a job for Inspector Cluseau
# ::tokens ["Obviously", "-", "this", "is", "now", "a", "job", "for", "Inspector", "Cluseau"]
# ::lemmas ["obviously", "-", "this", "be", "now", "a", "job", "for", "Inspector", "Cluseau"]
(c1-1 / obvious-01
      :ARG1 (c1-3 / job
                  :domain (c1-2 / this)
                  :beneficiary (c1-0 / person
                                     :name (c1-5 / name
                                                 :op1 "Inspector"
                                                 :op2 "Cluseau"))
                  :time (c1-4 / now)))

# ::snt Is there any proof ?
# ::tokens ["Is", "there", "any", "proof", "?"]
# ::lemmas ["be", "there", "any", "proof", "?"]
(c2-2 / prove-01
      :polarity (c2-0 / amr-unknown)
      :mod (c2-1 / any))

# ::snt might be because the muslim brothers that were killed weren't the real murderes ?Guiltfeelings ?
# ::tokens ["might", "be", "because", "the", "muslim", "brothers", "that", "were", "killed", "were", "n't", "the", "real", "murderes", "?", "Guiltfeelings", "?"]
# ::lemmas ["might", "be", "because", "the", "muslim", "brother", "that", "be", "kill", "be", "not", "the", "real", "murdere", "?", "Guiltfeelings", "?"]
(c3-6 / cause-01
      :polarity (c3-9 / amr-unknown)
      :ARG0 (c3-1 / person
                  :mod (c3-3 / religious-group
                             :name (c3-5 / name
                                         :op1 "Muslim"))
                  :ARG1-of (c3-10 / kill-01)
                  :domain (c3-11 / person
                                 :ARG1-of (c3-4 / murder-01)
                                 :ARG1-of (c3-2 / real-04)
                                 :ARG0-of (c3-7 / have-rel-role-91
                                                :ARG2 (c3-0 / brother))
                                 :polarity -))
      :ARG1 (c3-8 / guess-01))

# ::snt oh that is so sad. may he rest in peace.
# ::tokens ["oh", "that", "is", "so", "sad", ".", "may", "he", "rest", "in", "peace", "."]
# ::lemmas ["oh", "that", "be", "so", "sad", ".", "may", "he", "rest", "in", "peace", "."]
(c4-6 / multi-sentence
      :snt1 (c4-0 / sad-02
                  :ARG0 (c4-4 / that)
                  :degree (c4-1 / so)
                  :mod (c4-3 / oh
                             :mode expressive))
      :snt2 (c4-8 / wish-01
                  :ARG1 (c4-5 / rest-01
                              :ARG1 (c4-7 / he)
                              :manner (c4-2 / peace))))

# ::snt is there a reason? Is it due the case or mental disorder?
# ::tokens ["is", "there", "a", "reason", "?", "Is", "it", "due", "the", "case", "or", "mental", "disorder", "?"]
# ::lemmas ["be", "there", "a", "reason", "?", "be", "it", "due", "the", "case", "or", "mental", "disorder", "?"]
(c5-4 / multi-sentence
      :snt1 (c5-7 / reason
                  :polarity (c5-2 / amr-unknown))
      :snt2 (c5-6 / cause-01
                  :ARG0 (c5-3 / amr-unknown)
                  :ARG1 (c5-1 / or
                              :op1 (c5-5 / case-04)
                              :op2 (c5-8 / disorder
                                         :mod (c5-0 / mind)))))

# ::snt . add this to the punch of Q marks
# ::tokens [".", "add", "this", "to", "the", "punch", "of", "Q", "marks"]
# ::lemmas [".", "add", "this", "to", "the", "punch", "of", "Q", "marks"]
(c6-5 / add-02
      :ARG0 (c6-4 / you)
      :ARG1 (c6-2 / this)
      :ARG2 (c6-1 / punch-01
                  :ARG0 (c6-3 / mark
                              :mod (c6-0 / string-entity
                                         :value "Q")))
      :mode imperative)

# ::snt he probably found truth about who is really behind this ? And got killed ? Sick people
# ::tokens ["he", "probably", "found", "truth", "about", "who", "is", "really", "behind", "this", "?", "And", "got", "killed", "?", "Sick", "people"]
# ::lemmas ["he", "probably", "find", "truth", "about", "who", "be", "really", "behind", "this", "?", "and", "got", "kill", "?", "sick", "people"]
(c8-6 / multi-sentence
      :snt1 (c8-2 / probable
                  :domain (c8-13 / find-01
                                 :ARG0 (c8-8 / he)
                                 :ARG1 (c8-3 / truth
                                             :topic (c8-12 / person
                                                           :location (c8-1 / behind
                                                                           :op1 (c8-4 / this)
                                                                           :ARG1-of (c8-9 / real-04))))))
      :snt2 (c8-5 / and
                  :op2 (c8-10 / kill-01
                              :ARG1 (c8-11 / person
                                           :ARG1-of (c8-0 / sick-05))))
      :snt3 (c8-7 / person
                  :ARG0-of c8-0))
