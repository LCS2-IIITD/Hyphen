# ::subgraphs [["c1-0", "c1-14", "c1-10", "c1-11", "c1-15", "c1-9", "c1-7", "c1-5", "c1-2", "c1-6", "c1-1", "c1-3", "c1-4", "c1-16", "c1-12", "c1-13", "c1-8"], ["c2-18", "c2-9", "c2-12", "c2-8", "c2-0", "c2-5", "c2-19", "c2-6", "c2-4", "c2-3", "c2-14", "c2-17", "c2-10", "c2-13", "c2-7", "c2-16", "c2-1", "c2-15", "c2-11", "c2-20", "c2-2"], ["c3-3", "c3-5", "c3-0", "c3-8", "c3-4", "c3-7", "c3-1", "c3-6", "c3-2", "c3-9"], ["c4-0", "c4-14", "c4-6", "c4-3", "c4-10", "c4-7", "c4-11", "c4-12", "c4-1", "c4-13", "c4-2", "c4-4", "c4-9", "c4-8", "c4-5"]]
(d / dummy
   :COMMENT (c1-0 / sue
                  :ARG0 (c1-14 / person
                               :ARG0-of (c1-10 / have-org-role
                                               :ARG1 (c1-11 / publication
                                                            :name (c1-15 / name
                                                                         :op1 "NYC"
                                                                         :op2 "Fashion"
                                                                         :op3 "Photog"))
                                               :ARG2 (c1-9 / person
                                                           :ARG0-of (c1-7 / photograph
                                                                          :ARG1 (c1-5 / fashion))))
                               :SAME c1-2
                               :SAME c1-9)
                  :ARG1 (c1-2 / person
                              :ARG0-of (c1-6 / cycle))
                  :ARG2 (c1-1 / damage
                              :ARG0 c1-2
                              :ARG1 (c1-3 / car
                                          :poss c1-2))
                  :time (c1-4 / after
                              :op1 (c1-16 / end
                                          :ARG0 c1-2
                                          :ARG1 c1-9
                                          :manner (c1-12 / rear)))
                  :ARG0-of (c1-13 / send
                                  :ARG1 c1-2
                                  :ARG2 (c1-8 / ICU)))
   :COMMENT (c2-18 / lesson
                   :ARG1-of (c2-9 / entitle
                                  :ARG2 (c2-12 / you
                                               :mod (c2-8 / nerd
                                                          :mod (c2-0 / little)
                                                          :ARG0-of (c2-5 / ride
                                                                         :ARG1 (c2-19 / bike
                                                                                      :SAME c4-11)
                                                                         :SAME c4-7))
                                               :SAME c4-14
                                               :SAME c3-8
                                               :COREF c4-14
                                               :COREF c3-8
                                               :COREF c3-7))
                   :domain (c2-6 / get
                                 :ARG0 c2-12
                                 :ARG1 c2-12
                                 :ARG2 (c2-4 / out
                                             :ARG1 c2-12
                                             :ARG2 (c2-3 / way))
                                 :condition (c2-14 / and
                                                   :op1 (c2-17 / have-degree
                                                               :ARG1 (c2-10 / something)
                                                               :ARG2 (c2-13 / big)
                                                               :ARG3 (c2-7 / more
                                                                           :SAME c2-11)
                                                               :ARG4 c2-12
                                                               :SAME c2-1)
                                                   :op2 (c2-16 / move
                                                               :ARG1 c2-10
                                                               :ARG1-of (c2-1 / have-degree
                                                                              :ARG2 (c2-15 / fast
                                                                                           :ARG1 c2-16)
                                                                              :ARG3 (c2-11 / more)
                                                                              :ARG4 c2-12))
                                                   :SAME c3-3)
                                 :mod (c2-20 / just)
                                 :mode imperative)
                   :location (c2-2 / here))
   :COMMENT (c3-3 / and
                  :op2 (c3-5 / have-condition
                             :ARG2 (c3-0 / see
                                         :ARG0 (c3-8 / you)
                                         :ARG1 (c3-4 / come
                                                     :ARG1 (c3-7 / it))
                                         :ARG1-of (c3-1 / cause
                                                        :ARG0 (c3-6 / be-located-at
                                                                    :ARG1 c3-7
                                                                    :ARG2 (c3-2 / behind
                                                                                :op1 c3-8))
                                                        :SAME c4-3)
                                         :polarity -)
                             :polarity (c3-9 / amr)))
   :COMMENT (c4-0 / deserve
                  :ARG0 (c4-14 / you)
                  :ARG1 (c4-6 / hit
                              :ARG1 c4-14)
                  :ARG1-of (c4-3 / cause
                                 :ARG0 (c4-10 / recommend
                                              :ARG1 (c4-7 / ride
                                                          :ARG0 c4-14
                                                          :ARG1 (c4-11 / bike)
                                                          :polarity -)
                                              :condition (c4-12 / realize
                                                                :ARG0 c4-14
                                                                :ARG1 (c4-1 / speed
                                                                            :ARG0 (c4-13 / metal
                                                                                         :quant (c4-2 / few
                                                                                                      :op1 (c4-4 / mass
                                                                                                                 :unit (c4-9 / ton)
                                                                                                                 :quant 1)))
                                                                            :location (c4-8 / vicinity
                                                                                            :poss c4-14))
                                                                :polarity -)))
                  :mod (c4-5 / then)))
