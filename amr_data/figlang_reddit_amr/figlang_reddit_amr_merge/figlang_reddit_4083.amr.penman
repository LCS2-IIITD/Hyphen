# ::subgraphs [["c1-8", "c1-7", "c1-0", "c1-6", "c1-1", "c1-4", "c1-5", "c1-3", "c1-2"], ["c2-4", "c2-7", "c2-5", "c2-3", "c2-0", "c2-6", "c2-2", "c2-1"], ["c3-0", "c3-9", "c3-1", "c3-11", "c3-6", "c3-4", "c3-3", "c3-10", "c3-13", "c3-8", "c3-5", "c3-7", "c3-2", "c3-12"]]
(d / dummy
   :COMMENT (c1-8 / make
                  :ARG0 (c1-7 / i
                              :SAME c3-9
                              :COREF c3-9
                              :COREF c2-7)
                  :ARG1 (c1-0 / arch
                              :ARG0-of (c1-6 / bear
                                             :ARG1 (c1-1 / weight)))
                  :ARG2 (c1-4 / roll
                              :consist-of (c1-5 / paper
                                                :mod (c1-3 / toilet
                                                           :SAME c3-4
                                                           :SAME c2-2)
                                                :SAME c3-6
                                                :SAME c2-6)
                              :SAME c2-1)
                  :time (c1-2 / today))
   :COMMENT (c2-4 / look
                  :ARG0 (c2-7 / you)
                  :ARG1 (c2-5 / guy
                              :mod (c2-3 / rich)
                              :ARG0-of (c2-0 / have
                                             :ARG1 (c2-6 / paper
                                                         :mod (c2-2 / toilet)
                                                         :quant (c2-1 / roll
                                                                      :quant 20))))
                  :mode imperative)
   :COMMENT (c3-0 / see
                  :ARG0 (c3-9 / i
                              :mod (c3-1 / country
                                         :name (c3-11 / name
                                                      :op1 "Venezuela")))
                  :ARG1 (c3-6 / paper
                              :purpose (c3-4 / toilet)
                              :ARG1-of (c3-3 / have-quant
                                             :ARG2 (c3-10 / much)
                                             :ARG3 (c3-13 / equal)))
                  :time (c3-8 / before
                              :op1 (c3-5 / now)
                              :duration (c3-7 / like
                                              :op1 (c3-2 / temporal
                                                         :unit (c3-12 / year)
                                                         :quant 3)))
                  :polarity -))
