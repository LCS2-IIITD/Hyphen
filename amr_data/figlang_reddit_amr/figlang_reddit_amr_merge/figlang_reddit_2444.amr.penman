# ::subgraphs [["c1-10", "c1-9", "c1-3", "c1-8", "c1-4", "c1-0", "c1-17", "c1-11", "c1-18", "c1-14", "c1-15", "c1-5", "c1-1", "c1-7", "c1-16", "c1-2", "c1-6", "c1-13", "c1-12"], ["c2-7", "c2-9", "c2-0", "c2-2", "c2-5", "c2-6", "c2-3", "c2-8", "c2-1", "c2-4", "c2-10"], ["c3-2", "c3-13", "c3-16", "c3-4", "c3-12", "c3-1", "c3-6", "c3-9", "c3-15", "c3-3", "c3-0", "c3-8", "c3-5", "c3-7", "c3-14", "c3-10", "c3-11"], ["c4-2", "c4-0", "c4-8", "c4-4", "c4-5", "c4-9", "c4-7", "c4-1", "c4-6", "c4-3", "c4-10"]]
(d / dummy
   :COMMENT (c1-10 / multi
                   :snt1 (c1-9 / realize
                               :ARG0 (c1-3 / i
                                           :SAME c4-6
                                           :SAME c3-13
                                           :COREF c4-6
                                           :COREF c3-13)
                               :ARG1 (c1-8 / thing
                                           :ARG0-of (c1-4 / cause
                                                          :ARG1 (c1-0 / dry
                                                                      :ARG1 (c1-17 / lake
                                                                                   :name (c1-11 / name
                                                                                                :op1 "Dried"
                                                                                                :op2 "Lake"
                                                                                                :SAME c2-10
                                                                                                :SAME c1-13
                                                                                                :SAME c1-2)))
                                                          :SAME c3-3))
                               :mod (c1-18 / just))
                   :snt2 (c1-14 / divert
                                :ARG0 (c1-15 / aqueduct)
                                :ARG1 (c1-5 / water
                                            :ARG1-of (c1-1 / come
                                                           :ARG3 (c1-7 / off
                                                                       :op1 (c1-16 / mountain
                                                                                   :name (c1-2 / name
                                                                                               :op1 "Highgate"
                                                                                               :op2 "Mountain")))))
                                :ARG3 (c1-6 / city
                                            :name (c1-13 / name
                                                         :op1 "Sarn"))
                                :ARG1-of (c1-12 / instead-of
                                                :ARG2 c1-0)))
   :COMMENT (c2-7 / be-from
                  :ARG1 (c2-9 / it
                              :SAME c4-8
                              :SAME c3-4
                              :COREF c4-8
                              :COREF c3-8
                              :COREF c3-4)
                  :ARG2 (c2-0 / salt
                              :mod (c2-2 / all)
                              :ARG1-of (c2-5 / generate
                                             :ARG0 (c2-6 / person
                                                         :ARG0-of (c2-3 / wonder
                                                                        :ARG1 (c2-8 / location
                                                                                    :location-of (c2-1 / drop
                                                                                                       :mod (c2-4 / person
                                                                                                                  :name (c2-10 / name
                                                                                                                               :op1 "Brittle"
                                                                                                                               :op2 "Emperor"))
                                                                                                       :poss c2-6
                                                                                                       :SAME c4-0)))
                                                         :SAME c2-4))))
   :COMMENT (c3-2 / forget
                  :ARG0 (c3-13 / i)
                  :ARG1 (c3-16 / exist
                               :ARG1 (c3-4 / it))
                  :manner (c3-12 / genuine)
                  :ARG1-of (c3-1 / actual)
                  :time (c3-6 / until
                              :op1 (c3-9 / read
                                         :ARG0 c3-13
                                         :ARG1 (c3-15 / you
                                                      :COREF c4-10)))
                  :ARG1-of (c3-3 / cause
                                 :ARG0 (c3-0 / see
                                             :ARG0 c3-13
                                             :ARG1 (c3-8 / one)
                                             :time (c3-5 / ever)
                                             :time (c3-7 / run
                                                         :quant (c3-14 / multiple
                                                                       :op1 100))
                                             :polarity -))
                  :ARG2-of (c3-10 / laugh
                                  :manner (c3-11 / loud)
                                  :mode expressive))
   :COMMENT (c4-2 / and
                  :op1 (c4-0 / drop
                             :ARG1 (c4-8 / it)
                             :ARG2 (c4-4 / wasteland)
                             :ARG1-of (c4-5 / have-quant
                                            :ARG3 (c4-9 / more
                                                        :quant (c4-7 / lot))))
                  :op2 (c4-1 / suggest
                             :ARG0 (c4-6 / i)
                             :ARG1 (c4-3 / farm
                                         :ARG0 (c4-10 / you
                                                      :SAME-of c3-15)
                                         :location c4-4)
                             :ARG2 c4-10)))
