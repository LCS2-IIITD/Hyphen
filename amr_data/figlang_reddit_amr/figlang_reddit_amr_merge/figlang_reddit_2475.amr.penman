# ::subgraphs [["c1-1", "c1-4", "c1-0", "c1-6", "c1-5", "c1-2", "c1-7", "c1-3"], ["c2-2", "c2-1", "c2-6", "c2-17", "c2-3", "c2-5", "c2-16", "c2-8", "c2-22", "c2-11", "c2-10", "c2-20", "c2-18", "c2-7", "c2-4", "c2-13", "c2-9", "c2-14", "c2-19", "c2-12", "c2-15", "c2-0", "c2-21"], ["c3-2", "c3-10", "c3-9", "c3-5", "c3-3", "c3-7", "c3-0", "c3-11", "c3-6", "c3-8", "c3-1", "c3-4"]]
(d / dummy
   :COMMENT (c1-1 / want
                  :ARG0 (c1-4 / refugee
                              :mod (c1-0 / country
                                         :name (c1-6 / name
                                                     :op1 "Syria"
                                                     :SAME c1-3
                                                     :SAME c1-5)
                                         :location-of c1-4)
                              :name (c1-5 / name
                                          :op1 "Canada")
                              :SAME c3-5
                              :SAME c2-9
                              :SAME c2-4
                              :SAME c2-7
                              :COREF c3-5)
                  :ARG1 (c1-2 / return
                              :ARG1 c1-4
                              :ARG4 (c1-7 / world
                                          :name (c1-3 / name
                                                      :op1 "Middle"
                                                      :op2 "East"))))
   :COMMENT (c2-2 / wonder
                  :ARG0 (c2-1 / i
                              :SAME c3-9
                              :COREF c3-9)
                  :ARG1 (c2-6 / thing
                              :ARG2-of (c2-17 / fast
                                              :ARG1 (c2-3 / turn
                                                          :ARG1 c2-6
                                                          :ARG1-of (c2-5 / opine))))
                  :condition (c2-16 / and
                                    :op1 (c2-8 / get
                                               :ARG0 (c2-22 / person
                                                            :mod (c2-11 / every)
                                                            :ARG0-of (c2-10 / advocate
                                                                            :ARG1 (c2-20 / let
                                                                                         :ARG1 (c2-18 / house
                                                                                                      :ARG1 (c2-7 / refugee)
                                                                                                      :SAME c3-8
                                                                                                      :SAME c2-0))))
                                               :ARG1 (c2-4 / refugee
                                                           :ARG1-of (c2-13 / include
                                                                           :ARG2 (c2-9 / refugee
                                                                                       :poss c2-22))
                                                           :quant 1))
                                    :op2 (c2-14 / feed
                                                :ARG0 c2-22)
                                    :op3 (c2-19 / explain
                                                :ARG0 c2-22
                                                :ARG1 (c2-12 / wait
                                                             :ARG1 (c2-15 / you)
                                                             :ARG2 (c2-0 / house
                                                                         :mod (c2-21 / big))
                                                             :polarity -))
                                    :SAME c3-2))
   :COMMENT (c3-2 / and
                  :op1 (c3-10 / know
                              :ARG0 (c3-9 / i)
                              :ARG1 (c3-5 / refugee))
                  :op2 (c3-3 / happy
                             :ARG0 (c3-7 / give
                                         :ARG0 c3-9
                                         :ARG1 (c3-0 / shelter)
                                         :ARG2 c3-5
                                         :ARG1-of (c3-11 / appart
                                                         :ARG0 c3-9)
                                         :condition (c3-6 / need
                                                          :ARG0 c3-5
                                                          :ARG1 (c3-8 / house)
                                                          :time (c3-1 / day
                                                                      :mod (c3-4 / one))))
                             :ARG1 c3-9)))
