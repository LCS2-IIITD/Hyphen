# ::snt Emily Rogers: "Keep an eye on Eurogamer tomorrow to hear some Switch news."
# ::tokens ["Emily", "Rogers", ":", "\"", "Keep", "an", "eye", "on", "Eurogamer", "tomorrow", "to", "hear", "some", "Switch", "news", ".", "\""]
# ::lemmas ["Emily", "Rogers", ":", "\"", "keep", "an", "eye", "on", "Eurogamer", "tomorrow", "to", "hear", "some", "Switch", "news", ".", "\""]
(c1-0 / say-01
      :ARG0 (c1-10 / person
                   :name (c1-11 / name
                                :op1 "Emily"
                                :op2 "Rogers"))
      :ARG1 (c1-1 / keep-eye-05
                  :ARG0 (c1-12 / you)
                  :ARG1 (c1-5 / publication
                              :name (c1-7 / name
                                          :op1 "Eurogamer"))
                  :time (c1-6 / tomorrow)
                  :purpose (c1-3 / hear-01
                                 :ARG0 c1-12
                                 :ARG1 (c1-4 / news
                                             :mod (c1-8 / game
                                                        :name (c1-2 / name
                                                                    :op1 "Switch"))
                                             :mod (c1-9 / some)))
                  :mode imperative))

# ::snt Why is it always Eurogamer with the leaks?
# ::tokens ["Why", "is", "it", "always", "Eurogamer", "with", "the", "leaks", "?"]
# ::lemmas ["why", "be", "it", "always", "Eurogamer", "with", "the", "leak", "?"]
(c2-1 / cause-01
      :ARG0 (c2-0 / amr-unknown)
      :ARG1 (c2-2 / leak-01
                  :ARG0 (c2-3 / publication
                              :name (c2-4 / name
                                          :op1 "Eurogamer"))
                  :time (c2-5 / always)))

# ::snt I'd hope that until January, Rogers, Eurogamer and Dale would just keep their mouths shut and fingers still, till Nintendo gives as all the proper and full fledged infos they promised.
# ::tokens ["I", "'d", "hope", "that", "until", "January", ",", "Rogers", ",", "Eurogamer", "and", "Dale", "would", "just", "keep", "their", "mouths", "shut", "and", "fingers", "still", ",", "till", "Nintendo", "gives", "as", "all", "the", "proper", "and", "full", "fledged", "infos", "they", "promised", "."]
# ::lemmas ["i", "would", "hope", "that", "until", "January", ",", "Rogers", ",", "Eurogamer", "and", "Dale", "would", "just", "keep", "their", "mouth", "shut", "and", "finger", "still", ",", "till", "Nintendo", "give", "as", "all", "the", "proper", "and", "full", "fledged", "infos", "they", "promise", "."]
(c3-19 / hope-01
       :ARG0 (c3-4 / i)
       :ARG1 (c3-24 / keep-02
                    :ARG0 (c3-17 / and
                                 :op1 (c3-23 / person
                                             :name (c3-9 / name
                                                         :op1 "Rogers"))
                                 :op2 (c3-21 / person
                                             :name (c3-3 / name
                                                         :op1 "Eurogamer"))
                                 :op3 (c3-12 / person
                                             :name (c3-15 / name
                                                          :op1 "Dale"))
                                 :part (c3-8 / mouth)
                                 :part (c3-18 / finger))
                    :ARG1 (c3-10 / and
                                 :op1 c3-8
                                 :op2 c3-18)
                    :mod (c3-22 / just)
                    :time (c3-20 / until
                                 :op1 (c3-7 / give-in-09
                                            :ARG0 (c3-6 / company
                                                        :name (c3-5 / name
                                                                    :op1 "Nintendo"))
                                            :ARG1 (c3-13 / info
                                                         :mod (c3-11 / proper)
                                                         :ARG1-of (c3-14 / fledge-01
                                                                         :degree (c3-16 / full))
                                                         :mod (c3-1 / all)
                                                         :ARG1-of (c3-2 / promise-01
                                                                        :ARG0 c3-6))))
                    :time c3-20
                    :op1 (c3-0 / date-entity
                               :month 1)))
