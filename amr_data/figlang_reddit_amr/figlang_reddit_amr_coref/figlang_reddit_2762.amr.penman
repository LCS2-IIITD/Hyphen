# ::snt TIL of Death Bear, a person in a seven-foot-tall bear costume who could be summoned via text message to visit New York homes to collect and remove painful reminders of breakups
# ::tokens ["TIL", "of", "Death", "Bear", ",", "a", "person", "in", "a", "seven", "-", "foot", "-", "tall", "bear", "costume", "who", "could", "be", "summoned", "via", "text", "message", "to", "visit", "New", "York", "homes", "to", "collect", "and", "remove", "painful", "reminders", "of", "breakups"]
# ::lemmas ["TIL", "of", "Death", "Bear", ",", "a", "person", "in", "a", "seven", "-", "foot", "-", "tall", "bear", "costume", "who", "could", "be", "summon", "via", "text", "message", "to", "visit", "New", "York", "home", "to", "collect", "and", "remove", "painful", "reminder", "of", "breakup"]
(c1-8 / thing
      :name (c1-11 / name
                   :op1 "TIL")
      :topic (c1-23 / person
                    :name (c1-2 / name
                                :op1 "Death"
                                :op2 "Bear")
                    :ARG1-of (c1-3 / costume-01
                                   :ARG2 (c1-22 / bear
                                                :mod (c1-4 / tall
                                                           :quant (c1-0 / distance-quantity
                                                                        :unit (c1-19 / foot)
                                                                        :quant 7))))
                    :ARG1-of (c1-13 / summon-01
                                    :ARG2 (c1-7 / visit-01
                                                :ARG0 c1-23
                                                :ARG1 (c1-20 / home
                                                             :mod (c1-1 / city
                                                                        :name (c1-16 / name
                                                                                     :op1 "New"
                                                                                     :op2 "York")))
                                                :purpose (c1-18 / and
                                                                :op1 (c1-5 / collect-01
                                                                           :ARG0 c1-23
                                                                           :ARG1 (c1-12 / thing
                                                                                        :ARG0-of (c1-9 / remind-01
                                                                                                       :ARG1 (c1-17 / break-up-08)
                                                                                                       :ARG0-of (c1-21 / pain-01))))
                                                                :op2 (c1-6 / remove-01
                                                                           :ARG0 c1-23
                                                                           :ARG1 c1-12)))
                                    :ARG1-of (c1-14 / possible-01)
                                    :medium (c1-10 / message-01
                                                   :medium (c1-15 / text)))))

# ::snt See this is the kind of thing we hear about Japan and assume they are crazy.
# ::tokens ["See", "this", "is", "the", "kind", "of", "thing", "we", "hear", "about", "Japan", "and", "assume", "they", "are", "crazy", "."]
# ::lemmas ["see", "this", "be", "the", "kind", "of", "thing", "we", "hear", "about", "Japan", "and", "assume", "they", "be", "crazy", "."]
(c2-2 / and
      :op1 (c2-0 / see-01
                 :ARG0 (c2-4 / we)
                 :ARG1 (c2-7 / thing
                             :mod (c2-9 / kind)
                             :mod (c2-5 / this)
                             :ARG1-of (c2-6 / hear-01
                                            :ARG0 c2-4
                                            :ARG2 (c2-3 / country
                                                        :name (c2-8 / name
                                                                    :op1 "Japan")))))
      :op2 (c2-10 / assume-02
                  :ARG0 c2-4
                  :ARG1 (c2-1 / crazy-03
                              :ARG1 c2-3)))

# ::snt But Death Bar only services Brooklyn.
# ::tokens ["But", "Death", "Bar", "only", "services", "Brooklyn", "."]
# ::lemmas ["but", "Death", "Bar", "only", "service", "Brooklyn", "."]
(c3-3 / contrast-01
      :ARG2 (c3-0 / serve-01
                  :ARG0 (c3-2 / facility
                              :name (c3-6 / name
                                          :op1 "Death"
                                          :op2 "Bar"))
                  :ARG2 (c3-1 / city-district
                              :name (c3-5 / name
                                          :op1 "Brooklyn"))
                  :mod (c3-4 / only)))
