# ::snt Stefon Diggs learns why you never spin a ball after making a big play
# ::tokens ["Stefon", "Diggs", "learns", "why", "you", "never", "spin", "a", "ball", "after", "making", "a", "big", "play"]
# ::lemmas ["Stefon", "Diggs", "learn", "why", "you", "never", "spin", "a", "ball", "after", "make", "a", "big", "play"]
(c1-6 / learn-01
      :ARG0 (c1-8 / person
                  :name (c1-10 / name
                               :op1 "Stefon"
                               :op2 "Diggs"))
      :ARG1 (c1-5 / thing
                  :ARG0-of (c1-3 / cause-01
                                 :ARG1 (c1-0 / spin-03
                                             :ARG0 (c1-11 / you)
                                             :ARG1 (c1-7 / ball)
                                             :time (c1-12 / ever)
                                             :time (c1-2 / after
                                                         :op1 (c1-9 / make-01
                                                                    :ARG0 c1-11
                                                                    :ARG1 (c1-4 / play-02
                                                                                :mod (c1-1 / big))))
                                             :polarity -))))

# ::snt Wait, Steve smith sr does this literally every catch he makes and he is never flagged.. Why?
# ::tokens ["Wait", ",", "Steve", "smith", "sr", "does", "this", "literally", "every", "catch", "he", "makes", "and", "he", "is", "never", "flagged", "..", "Why", "?"]
# ::lemmas ["wait", ",", "Steve", "smith", "sr", "do", "this", "literally", "every", "catch", "he", "make", "and", "he", "be", "never", "flag", "..", "why", "?"]
(c2-11 / multi-sentence
       :snt1 (c2-5 / wait-01
                   :ARG1 (c2-13 / you)
                   :mode imperative)
       :snt2 (c2-2 / and
                   :op1 (c2-0 / do-02
                              :ARG0 (c2-10 / person
                                           :name (c2-12 / name
                                                        :op1 "Steve"
                                                        :op2 "smith"
                                                        :op3 " sr"))
                              :ARG1 (c2-7 / this)
                              :frequency (c2-8 / rate-entity-91
                                               :ARG4 (c2-4 / catch-03
                                                           :ARG0 c2-10
                                                           :ARG1-of (c2-6 / make-01
                                                                          :ARG0 c2-10))
                                               :mod (c2-9 / literal)))
                   :op2 (c2-3 / flag-02
                              :ARG1 c2-10
                              :time (c2-15 / ever)
                              :polarity -))
       :snt3 (c2-1 / cause-01
                   :ARG0 (c2-14 / amr-unknown)))
