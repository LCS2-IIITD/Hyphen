# ::snt What is your most insane idea for how to improve Formula 1?
# ::tokens ["What", "is", "your", "most", "insane", "idea", "for", "how", "to", "improve", "Formula", "1", "?"]
# ::lemmas ["what", "be", "your", "most", "insane", "idea", "for", "how", "to", "improve", "Formula", "1", "?"]
(c1-1 / have-degree-91
      :ARG1 (c1-5 / idea
                  :topic (c1-4 / thing
                               :manner-of (c1-2 / improve-01
                                                :name (c1-7 / name
                                                            :op1 "Formula"
                                                            :op2 1)
                                                :ARG1 c1-4)))
      :poss (c1-8 / you)
      :ARG2 (c1-3 / insane)
      :ARG3 (c1-6 / most)
      :ARG5 (c1-0 / amr-unknown))

# ::snt Make them all like the multi-class races from the Forza series where there's a completely unrelated race happening at the same time, on the same track.
# ::tokens ["Make", "them", "all", "like", "the", "multi", "-", "class", "races", "from", "the", "Forza", "series", "where", "there", "'s", "a", "completely", "unrelated", "race", "happening", "at", "the", "same", "time", ",", "on", "the", "same", "track", "."]
# ::lemmas ["make", "they", "all", "like", "the", "multi", "-", "class", "race", "from", "the", "Forza", "series", "where", "there", "be", "a", "completely", "unrelated", "race", "happen", "at", "the", "same", "time", ",", "on", "the", "same", "track", "."]
(c2-14 / make-02
       :ARG0 (c2-16 / you)
       :ARG1 (c2-10 / resemble-01
                    :ARG1 (c2-9 / they
                                :mod (c2-2 / all))
                    :ARG2 (c2-7 / race
                                :mod (c2-3 / class
                                           :quant (c2-4 / multiple))
                                :source (c2-11 / broadcast-program
                                               :name (c2-15 / name
                                                            :op1 "Forza"))
                                :location-of (c2-13 / race
                                                    :ARG1-of (c2-8 / relate-01
                                                                   :ARG1-of (c2-0 / complete-02)
                                                                   :polarity -)
                                                    :time (c2-5 / time
                                                                :ARG1-of (c2-1 / same-01))
                                                    :location (c2-6 / track
                                                                    :ARG1-of (c2-12 / same-01)))))
       :mode imperative)
