# ::snt Comedian Amy Schumer to perform in Rochester May 6
# ::tokens ["Comedian", "Amy", "Schumer", "to", "perform", "in", "Rochester", "May", "6"]
# ::lemmas ["Comedian", "Amy", "Schumer", "to", "perform", "in", "Rochester", "May", "6"]
(c1-5 / perform-01
      :ARG0 (c1-3 / person
                  :name (c1-6 / name
                              :op1 "Amy"
                              :op2 "Schumer")
                  :mod (c1-2 / comedian))
      :location (c1-0 / city
                      :name (c1-4 / name
                                  :op1 "Rochester"))
      :time (c1-1 / date-entity
                  :month 5
                  :day 6))

# ::snt Whose jokes will she be performing?
# ::tokens ["Whose", "jokes", "will", "she", "be", "performing", "?"]
# ::lemmas ["whose", "joke", "will", "she", "be", "perform", "?"]
(c2-2 / perform-01
      :ARG0 (c2-0 / she)
      :ARG1 (c2-1 / joke-01
                  :ARG2 (c2-3 / amr-unknown)))

# ::snt The only time you hear about a comedian stealing jokes is when they are more successful with them than the creator.
# ::tokens ["The", "only", "time", "you", "hear", "about", "a", "comedian", "stealing", "jokes", "is", "when", "they", "are", "more", "successful", "with", "them", "than", "the", "creator", "."]
# ::lemmas ["the", "only", "time", "you", "hear", "about", "a", "comedian", "stealing", "joke", "be", "when", "they", "be", "more", "successful", "with", "they", "than", "the", "creator", "."]
(c3-4 / hear-01
      :ARG0 (c3-10 / you)
      :ARG1 (c3-0 / steal-01
                  :ARG0 (c3-3 / comedian)
                  :ARG1 (c3-7 / joke-01))
      :time (c3-1 / succeed-01
                  :ARG0 c3-3
                  :ARG1 c3-0
                  :ARG2-of (c3-5 / have-degree-91
                                 :ARG1 c3-3
                                 :ARG3 (c3-9 / more)
                                 :ARG4 (c3-8 / person
                                             :ARG0-of (c3-2 / create-01))))
      :mod (c3-6 / only))
