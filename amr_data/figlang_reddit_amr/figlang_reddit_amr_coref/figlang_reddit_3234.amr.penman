# ::snt French journalist roughed up by security guards after asking LePen a question.
# ::tokens ["French", "journalist", "roughed", "up", "by", "security", "guards", "after", "asking", "LePen", "a", "question", "."]
# ::lemmas ["French", "journalist", "rough", "up", "by", "security", "guard", "after", "ask", "LePen", "a", "question", "."]
(c1-5 / rou-up-01
      :ARG0 (c1-9 / person
                  :ARG0-of (c1-7 / guard-01
                                 :ARG1 (c1-0 / security)))
      :ARG1 (c1-8 / journalist
                  :mod (c1-2 / country
                             :name (c1-10 / name
                                          :op1 "France")))
      :time (c1-1 / after
                  :op1 (c1-11 / ask-01
                              :ARG0 c1-8
                              :ARG1 (c1-3 / question-01
                                          :ARG0 c1-8
                                          :ARG2 (c1-4 / person
                                                      :name (c1-6 / name
                                                                  :op1 "LePen")
                                                      :ARG2-of c1-11)))))

# ::snt Any background to this or did the guard just not like the question ?
# ::tokens ["Any", "background", "to", "this", "or", "did", "the", "guard", "just", "not", "like", "the", "question", "?"]
# ::lemmas ["any", "background", "to", "this", "or", "do", "the", "guard", "just", "not", "like", "the", "question", "?"]
(c2-1 / amr-choice
      :op1 (c2-5 / background
                 :topic (c2-3 / this)
                 :mod (c2-7 / any))
      :op2 (c2-0 / dislike-01
                 :ARG0 (c2-4 / guard)
                 :ARG1 (c2-2 / question-01)
                 :mod (c2-6 / just)))

# ::snt There will be a proper translation in a few hours, most french people are sleeping atm
# ::tokens ["There", "will", "be", "a", "proper", "translation", "in", "a", "few", "hours", ",", "most", "french", "people", "are", "sleeping", "atm"]
# ::lemmas ["there", "will", "be", "a", "proper", "translation", "in", "a", "few", "hours", ",", "most", "french", "people", "be", "sleep", "atm"]
(c3-10 / translate-01
       :manner (c3-12 / proper)
       :time (c3-3 / after
                   :op1 (c3-14 / now)
                   :quant (c3-4 / few
                                :op1 (c3-6 / temporal-quantity
                                           :unit (c3-7 / hour)
                                           :quant 1)))
       :ARG1-of (c3-5 / cause-01
                      :ARG0 (c3-0 / sleep-01
                                  :ARG0 (c3-9 / person
                                              :mod (c3-1 / country
                                                         :name (c3-11 / name
                                                                      :op1 "France"))
                                              :quant (c3-13 / most))
                                  :time (c3-2 / date-entity
                                              :dayperiod (c3-8 / night)))))

# ::snt I guess we'll have to wait till it's noon tomorrow then.
# ::tokens ["I", "guess", "we", "'ll", "have", "to", "wait", "till", "it", "'s", "noon", "tomorrow", "then", "."]
# ::lemmas ["i", "guess", "we", "'ll", "have", "to", "wait", "till", "it", "be", "noon", "tomorrow", "then", "."]
(c4-4 / guess-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-2 / obligate-01
                  :ARG1 (c4-0 / we)
                  :ARG2 (c4-8 / wait-01
                              :ARG1 c4-0
                              :time (c4-3 / till
                                          :op1 (c4-6 / noon
                                                     :time (c4-1 / tomorrow))))
                  :mod (c4-7 / then)))

# ::snt You guys realize there are French speaking people up here in Canada right?
# ::tokens ["You", "guys", "realize", "there", "are", "French", "speaking", "people", "up", "here", "in", "Canada", "right", "?"]
# ::lemmas ["you", "guy", "realize", "there", "be", "French", "speak", "people", "up", "here", "in", "Canada", "right", "?"]
(c5-5 / realize-01
      :ARG0 (c5-11 / you
                   :mod (c5-8 / guy))
      :ARG1 (c5-9 / person
                  :ARG0-of (c5-0 / speak-01
                                 :ARG3 (c5-6 / language
                                             :name (c5-10 / name
                                                          :op1 "French")))
                  :location (c5-2 / here
                                  :ARG1-of (c5-3 / up-03
                                                 :ARG2 (c5-1 / country
                                                             :name (c5-7 / name
                                                                         :op1 "Canada")))))
      :ARG1-of (c5-4 / request-confirmation-91
                     :ARG2 c5-11))
