# ::snt The country is replete with people who take five minutes each to board a bus.
# ::tokens ["The", "country", "is", "replete", "with", "people", "who", "take", "five", "minutes", "each", "to", "board", "a", "bus", "."]
# ::lemmas ["the", "country", "be", "replete", "with", "people", "who", "take", "five", "minutes", "each", "to", "board", "a", "bus", "."]
(c1-4 / replete
      :domain (c1-1 / country)
      :prep-with (c1-6 / person
                       :ARG0-of (c1-3 / take-10
                                      :ARG1 (c1-2 / temporal-quantity
                                                  :unit (c1-7 / minute)
                                                  :mod (c1-8 / each)
                                                  :quant 5)
                                      :ARG2 (c1-5 / board-01
                                                  :ARG0 c1-6
                                                  :ARG1 (c1-0 / bus)))))

# ::snt But imagine the price of bus fairs if we had a conductor!
# ::tokens ["But", "imagine", "the", "price", "of", "bus", "fairs", "if", "we", "had", "a", "conductor", "!"]
# ::lemmas ["but", "imagine", "the", "price", "of", "bus", "fair", "if", "we", "have", "a", "conductor", "!"]
(c2-2 / contrast-01
      :ARG2 (c2-9 / imagine-01
                  :ARG0 (c2-10 / you)
                  :ARG1 (c2-6 / thing
                              :ARG2-of (c2-7 / price-01
                                             :ARG1 (c2-1 / fair
                                                         :mod (c2-8 / bus))))
                  :condition (c2-4 / have-03
                                   :ARG0 (c2-3 / we)
                                   :ARG1 (c2-5 / person
                                               :ARG0-of (c2-0 / conduct-01)))
                  :mode imperative))

# ::snt I've never been to a bus fair.
# ::tokens ["I", "'ve", "never", "been", "to", "a", "bus", "fair", "."]
# ::lemmas ["i", "'ve", "never", "be", "to", "a", "bus", "fair", "."]
(c3-2 / be-located-at-91
      :ARG1 (c3-3 / i)
      :ARG2 (c3-1 / fair
                  :mod (c3-0 / bus))
      :time (c3-4 / ever)
      :polarity -)
