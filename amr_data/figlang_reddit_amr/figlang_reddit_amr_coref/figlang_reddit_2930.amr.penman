# ::snt Something I never understood about the games that Origins finally clarified for me.
# ::tokens ["Something", "I", "never", "understood", "about", "the", "games", "that", "Origins", "finally", "clarified", "for", "me", "."]
# ::lemmas ["something", "i", "never", "understand", "about", "the", "game", "that", "origin", "finally", "clarify", "for", "i", "."]
(c1-0 / something
      :ARG1-of (c1-3 / understand-01
                     :ARG0 (c1-5 / i)
                     :time (c1-7 / ever)
                     :polarity -)
      :topic (c1-4 / game
                   :name (c1-6 / name
                               :op1 " Origins"))
      :ARG1-of (c1-2 / clarify-10
                     :ARG0 c1-5
                     :mod (c1-1 / final)))

# ::snt One day we could get a game where the gyms aren't linear
# ::tokens ["One", "day", "we", "could", "get", "a", "game", "where", "the", "gyms", "are", "n't", "linear"]
# ::lemmas ["One", "day", "we", "could", "get", "a", "game", "where", "the", "gym", "be", "not", "linear"]
(c2-6 / possible-01
      :ARG1 (c2-5 / get-01
                  :ARG0 (c2-2 / we)
                  :ARG1 (c2-7 / game
                              :topic (c2-4 / linear
                                           :domain (c2-1 / gyms)
                                           :polarity -)))
      :time (c2-0 / day
                  :mod (c2-3 / one)))

# ::snt A Pokemon game with a random spawn point would be somethin else
# ::tokens ["A", "Pokemon", "game", "with", "a", "random", "spawn", "point", "would", "be", "somethin", "else"]
# ::lemmas ["a", "Pokemon", "game", "with", "a", "random", "spawn", "point", "would", "be", "somethin", "else"]
(c3-0 / something
      :mod (c3-7 / else)
      :domain (c3-3 / game
                    :topic c3-3
                    :name (c3-6 / name
                                :op1 "Pokemon"))
      :ARG0-of (c3-1 / have-03
                     :ARG1 (c3-5 / point
                                 :location-of (c3-4 / spawn-01)
                                 :mod (c3-2 / random))))

# ::snt They don't have to innovate, they sell millions by making the same game over and over.
# ::tokens ["They", "do", "n't", "have", "to", "innovate", ",", "they", "sell", "millions", "by", "making", "the", "same", "game", "over", "and", "over", "."]
# ::lemmas ["they", "do", "not", "have", "to", "innovate", ",", "they", "sell", "millions", "by", "make", "the", "same", "game", "over", "and", "over", "."]
(c4-1 / and
      :op1 (c4-4 / obligate-01
                 :ARG1 (c4-5 / they)
                 :ARG2 (c4-8 / innovate-01
                             :ARG0 c4-5)
                 :polarity -)
      :op2 (c4-0 / sell-01
                 :ARG0 c4-5
                 :ARG1 (c4-9 / multiple
                             :op1 1000000)
                 :manner (c4-2 / make-01
                               :ARG0 c4-5
                               :ARG1 (c4-6 / game
                                           :ARG1-of (c4-7 / same-01))
                               :frequency (c4-3 / over-and-over))))
