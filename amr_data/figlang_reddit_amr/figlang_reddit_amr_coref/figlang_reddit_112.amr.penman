# ::snt What intuitively obvious mathematical statements are false?
# ::tokens ["What", "intuitively", "obvious", "mathematical", "statements", "are", "false", "?"]
# ::lemmas ["what", "intuitively", "obvious", "mathematical", "statement", "be", "false", "?"]
(c1-1 / false
      :domain (c1-0 / state-01
                    :mod (c1-4 / mathematics)
                    :ARG1-of (c1-2 / obvious-01
                                   :manner (c1-3 / intuitive))))

# ::snt If a girl called Eve listens to *absolutely everything* you and your friend say to each other, then you can't tell each other secrets without Eve finding out too.
# ::tokens ["If", "a", "girl", "called", "Eve", "listens", "to", "*", "absolutely", "everything", "*", "you", "and", "your", "friend", "say", "to", "each", "other", ",", "then", "you", "ca", "n't", "tell", "each", "other", "secrets", "without", "Eve", "finding", "out", "too", "."]
# ::lemmas ["if", "a", "girl", "call", "Eve", "listen", "to", "*", "absolutely", "everything", "*", "you", "and", "your", "friend", "say", "to", "each", "other", ",", "then", "you", "can", "not", "tell", "each", "other", "secret", "without", "Eve", "find", "out", "too", "."]
(c2-13 / possible-01
       :ARG1 (c2-9 / tell-01
                   :ARG0 (c2-2 / and
                               :op1 (c2-15 / you)
                               :op2 (c2-8 / person
                                          :ARG0-of (c2-5 / have-rel-role-91
                                                         :ARG1 c2-15
                                                         :ARG2 (c2-3 / friend))))
                   :ARG1 (c2-0 / secret)
                   :ARG2 c2-2)
       :condition (c2-10 / listen-01
                         :ARG0 (c2-11 / girl
                                      :name (c2-14 / name
                                                   :op1 "Eve"))
                         :ARG1 (c2-17 / everything
                                      :mod (c2-16 / absolute)
                                      :ARG1-of (c2-12 / say-01
                                                      :ARG0 (c2-1 / and
                                                                  :op1 c2-15
                                                                  :op2 c2-8)
                                                      :ARG2 (c2-6 / each)))
                         :manner (c2-7 / find-out-03
                                       :ARG0 c2-11
                                       :mod (c2-4 / too)
                                       :polarity -))
       :polarity -)

# ::snt How is this untrue?
# ::tokens ["How", "is", "this", "untrue", "?"]
# ::lemmas ["how", "be", "this", "untrue", "?"]
(c3-2 / true-01
      :ARG1 (c3-0 / this)
      :manner (c3-1 / amr-unknown)
      :polarity -)
