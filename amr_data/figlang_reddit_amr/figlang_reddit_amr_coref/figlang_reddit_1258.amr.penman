# ::snt Reddit, what can $1,000 buy me in your hobby?
# ::tokens ["Reddit", ",", "what", "can", "$", "1,000", "buy", "me", "in", "your", "hobby", "?"]
# ::lemmas ["reddit", ",", "what", "can", "$", "1,000", "buy", "i", "in", "your", "hobby", "?"]
(c1-1 / ask-01
      :ARG0 (c1-6 / i)
      :ARG1 (c1-4 / possible-01
                  :ARG1 (c1-5 / buy-01
                              :ARG0 (c1-7 / monetary-quantity
                                          :unit (c1-0 / dollar)
                                          :quant 1000)
                              :ARG1 c1-6
                              :ARG3 (c1-2 / hobby
                                          :poss (c1-9 / you))
                              :ARG4 (c1-10 / amr-unknown)))
      :ARG2 (c1-3 / publication
                  :name (c1-8 / name
                              :op1 "Reddit")))

# ::snt Well, let's assume you already have a car... so it should buy you a cat-back exhaust system and a tuner.
# ::tokens ["Well", ",", "let", "'s", "assume", "you", "already", "have", "a", "car", "...", "so", "it", "should", "buy", "you", "a", "cat", "-", "back", "exhaust", "system", "and", "a", "tuner", "."]
# ::lemmas ["well", ",", "let", "us", "assume", "you", "already", "have", "a", "car", "...", "so", "it", "should", "buy", "you", "a", "cat", "-", "back", "exhaust", "system", "and", "a", "tuner", "."]
(c2-3 / assume-02
      :ARG0 (c2-6 / we)
      :ARG1 (c2-9 / have-03
                  :ARG0 (c2-14 / you)
                  :ARG1 (c2-5 / car)
                  :time (c2-15 / already)
                  :ARG0-of (c2-0 / cause-01
                                 :ARG1 (c2-12 / recommend-01
                                              :ARG1 (c2-13 / buy-01
                                                           :ARG0 c2-5
                                                           :ARG1 (c2-1 / and
                                                                       :op1 (c2-2 / system
                                                                                  :mod (c2-16 / exhaust)
                                                                                  :mod (c2-4 / back
                                                                                             :mod (c2-10 / cat)))
                                                                       :op2 (c2-11 / thing
                                                                                   :ARG2-of (c2-7 / tuner-01)))
                                                           :ARG4 c2-14))))
      :mod (c2-8 / well)
      :mode imperative)
