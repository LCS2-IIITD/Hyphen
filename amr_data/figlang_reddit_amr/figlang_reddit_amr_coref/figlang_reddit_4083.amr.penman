# ::snt Today I made a weight bearing arch out of toilet paper rolls
# ::tokens ["Today", "I", "made", "a", "weight", "bearing", "arch", "out", "of", "toilet", "paper", "rolls"]
# ::lemmas ["Today", "i", "make", "a", "weight", "bearing", "arch", "out", "of", "toilet", "paper", "roll"]
(c1-8 / make-01
      :ARG0 (c1-7 / i)
      :ARG1 (c1-0 / arch
                  :ARG0-of (c1-6 / bear-01
                                 :ARG1 (c1-1 / weight)))
      :ARG2 (c1-4 / roll
                  :consist-of (c1-5 / paper
                                    :mod (c1-3 / toilet)))
      :time (c1-2 / today))

# ::snt Look at Mr rich guy with 20 rolls of toilet paper.
# ::tokens ["Look", "at", "Mr", "rich", "guy", "with", "20", "rolls", "of", "toilet", "paper", "."]
# ::lemmas ["look", "at", "Mr", "rich", "guy", "with", "20", "roll", "of", "toilet", "paper", "."]
(c2-4 / look-01
      :ARG0 (c2-7 / you)
      :ARG1 (c2-5 / guy
                  :mod (c2-3 / rich)
                  :ARG0-of (c2-0 / have-03
                                 :ARG1 (c2-6 / paper
                                             :mod (c2-2 / toilet)
                                             :quant (c2-1 / roll
                                                          :quant 20))))
      :mode imperative)

# ::snt As a venezuelan, I haven't seen that much toilet paper together, in like 3 years.
# ::tokens ["As", "a", "venezuelan", ",", "I", "have", "n't", "seen", "that", "much", "toilet", "paper", "together", ",", "in", "like", "3", "years", "."]
# ::lemmas ["as", "a", "venezuelan", ",", "i", "have", "not", "see", "that", "much", "toilet", "paper", "together", ",", "in", "like", "3", "years", "."]
(c3-0 / see-01
      :ARG0 (c3-9 / i
                  :mod (c3-1 / country
                             :name (c3-11 / name
                                          :op1 "Venezuela")))
      :ARG1 (c3-6 / paper
                  :purpose (c3-4 / toilet)
                  :ARG1-of (c3-3 / have-quant-91
                                 :ARG2 (c3-10 / much)
                                 :ARG3 (c3-13 / equal)))
      :time (c3-8 / before
                  :op1 (c3-5 / now)
                  :duration (c3-7 / like
                                  :op1 (c3-2 / temporal-quantity
                                             :unit (c3-12 / year)
                                             :quant 3)))
      :polarity -)
