# ::snt Idris Elba performs Desiigner's "Panda" At Jimmy Fallon
# ::tokens ["Idris", "Elba", "performs", "Desiigner", "'s", "\"", "Panda", "\"", "At", "Jimmy", "Fallon"]
# ::lemmas ["Idris", "Elba", "perform", "Desiigner", "'s", "\"", "Panda", "\"", "at", "Jimmy", "Fallon"]
(c1-7 / perform-01
      :ARG0 (c1-5 / person
                  :name (c1-9 / name
                              :op1 "Idris"
                              :op2 "Elba"))
      :ARG1 (c1-8 / music
                  :name (c1-6 / name
                              :op1 "Panda")
                  :ARG1-of (c1-1 / author-01
                                 :ARG0 (c1-3 / person
                                             :name (c1-4 / name
                                                         :op1 "Desiigner"))))
      :location (c1-0 / show
                      :name (c1-2 / name
                                  :op1 "Jimmy"
                                  :op2 "Fallon")))

# ::snt I love how he basically did a perfect rendition of Panda despite only knowing the first line and the word panda
# ::tokens ["I", "love", "how", "he", "basically", "did", "a", "perfect", "rendition", "of", "Panda", "despite", "only", "knowing", "the", "first", "line", "and", "the", "word", "panda"]
# ::lemmas ["i", "love", "how", "he", "basically", "do", "a", "perfect", "rendition", "of", "Panda", "despite", "only", "know", "the", "first", "line", "and", "the", "word", "panda"]
(c2-9 / love-01
      :ARG0 (c2-12 / i)
      :ARG1 (c2-0 / do-02
                  :ARG0 (c2-5 / he)
                  :ARG1 (c2-8 / rendition
                              :ARG1-of (c2-10 / perfect-02)
                              :topic (c2-2 / animal
                                           :name (c2-13 / name
                                                        :op1 "Panda")))
                  :mod (c2-11 / basic)
                  :concession (c2-3 / know-01
                                    :ARG0 c2-5
                                    :ARG1 (c2-14 / and
                                                 :op1 (c2-1 / line
                                                            :ord (c2-7 / ordinal-entity
                                                                       :value 1))
                                                 :op2 (c2-4 / word
                                                            :mod c2-2))
                                    :mod (c2-6 / only))))
