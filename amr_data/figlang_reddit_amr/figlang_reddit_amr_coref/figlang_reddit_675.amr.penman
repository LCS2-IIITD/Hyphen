# ::snt In school my French teacher, Mr Cocknose said I wouldn't achieve much in life... well, who has the last laugh now Mr Cocknose?
# ::tokens ["In", "school", "my", "French", "teacher", ",", "Mr", "Cocknose", "said", "I", "would", "n't", "achieve", "much", "in", "life", "...", "well", ",", "who", "has", "the", "last", "laugh", "now", "Mr", "Cocknose", "?"]
# ::lemmas ["in", "school", "my", "French", "teacher", ",", "Mr", "Cocknose", "say", "i", "would", "not", "achieve", "much", "in", "life", "...", "well", ",", "who", "have", "the", "last", "laugh", "now", "Mr", "Cocknose", "?"]
(c1-14 / multi-sentence
       :snt1 (c1-0 / say-01
                   :ARG0 (c1-13 / person
                                :name (c1-15 / name
                                             :op1 "Mr"
                                             :op2 "Cocknose")
                                :ARG0-of (c1-8 / teach-01
                                               :ARG1 (c1-10 / language
                                                            :name (c1-9 / name
                                                                        :op1 "French"))
                                               :ARG2 (c1-3 / i)))
                   :ARG1 (c1-2 / achieve-01
                               :ARG0 c1-3
                               :ARG1 (c1-4 / much)
                               :time (c1-11 / life)
                               :polarity -)
                   :location (c1-12 / school))
       :snt2 (c1-1 / laugh-01
                   :ARG0 (c1-16 / amr-unknown)
                   :mod (c1-6 / last)
                   :time (c1-7 / now)
                   :mod (c1-5 / well)))

# ::snt Why what have you achieved?
# ::tokens ["Why", "what", "have", "you", "achieved", "?"]
# ::lemmas ["why", "what", "have", "you", "achieve", "?"]
(c2-0 / achieve-01
      :ARG0 (c2-1 / you)
      :ARG1 (c2-2 / amr-unknown))

# ::snt A sense of pride knowing that not only is Mr Cocknose out of a job cause noone aint learning French no more, but also that means my F grade in French is invalided cause no one ever needs French again, which means I got a C instead, sonow I got 2 GCSEs not one.
# ::tokens ["A", "sense", "of", "pride", "knowing", "that", "not", "only", "is", "Mr", "Cocknose", "out", "of", "a", "job", "cause", "noone", "ai", "nt", "learning", "French", "no", "more", ",", "but", "also", "that", "means", "my", "F", "grade", "in", "French", "is", "invalided", "cause", "no", "one", "ever", "needs", "French", "again", ",", "which", "means", "I", "got", "a", "C", "instead", ",", "sonow", "I", "got", "2", "GCSEs", "not", "one", "."]
# ::lemmas ["a", "sense", "of", "pride", "know", "that", "not", "only", "be", "Mr", "Cocknose", "out", "of", "a", "job", "cause", "noone", "be", "not", "learn", "French", "no", "more", ",", "but", "also", "that", "mean", "my", "F", "grade", "in", "French", "be", "invalid", "cause", "no", "one", "ever", "need", "French", "again", ",", "which", "mean", "i", "get", "a", "c", "instead", ",", "sonow", "i", "get", "2", "gcse", "not", "one", "."]
(c3-17 / sense-01
       :ARG1 (c3-28 / pride-01)
       :ARG1-of (c3-6 / cause-01
                      :ARG0 (c3-29 / know-01
                                   :ARG1 (c3-0 / cause-01
                                               :ARG0 (c3-26 / learn-01
                                                            :ARG0 (c3-14 / no-one)
                                                            :ARG1 (c3-3 / language
                                                                        :name (c3-2 / name
                                                                                    :op1 "French"))
                                                            :time (c3-23 / anymore)
                                                            :polarity -)
                                               :ARG1 (c3-9 / out-06
                                                           :ARG1 (c3-25 / person
                                                                        :name (c3-19 / name
                                                                                     :op1 "Mr"
                                                                                     :op2 "C"))
                                                           :ARG2 (c3-27 / job)
                                                           :ARG1-of (c3-8 / contrast-01
                                                                          :ARG2 (c3-20 / cause-01
                                                                                       :ARG0 (c3-5 / need-01
                                                                                                   :ARG0 c3-14
                                                                                                   :ARG1 (c3-1 / language
                                                                                                               :name (c3-11 / name
                                                                                                                            :op1 "French"))
                                                                                                   :time (c3-16 / ever)
                                                                                                   :mod (c3-15 / again)
                                                                                                   :ARG1-of (c3-13 / mean-01
                                                                                                                   :ARG2 (c3-12 / get-01
                                                                                                                                :ARG0 (c3-4 / i)
                                                                                                                                :ARG1 (c3-10 / thing
                                                                                                                                             :name (c3-24 / name
                                                                                                                                                          :op1 "C"))
                                                                                                                                :ARG1-of (c3-18 / instead-of-91
                                                                                                                                                :ARG2 (c3-21 / get-01
                                                                                                                                                             :ARG0 c3-4
                                                                                                                                                             :ARG1 (c3-7 / thing
                                                                                                                                                                         :name (c3-22 / name
                                                                                                                                                                                      :op1 "General"
                                                                                                                                                                                      :op2 "Certificate"
                                                                                                                                                                                      :op3 "of"
                                                                                                                                                                                      :op4 "Secondary"
                                                                                                                                                                                      :op5 "Education")
                                                                                                                                                                         :quant 2)
                                                                                                                                                             :polarity -))))))))))))
