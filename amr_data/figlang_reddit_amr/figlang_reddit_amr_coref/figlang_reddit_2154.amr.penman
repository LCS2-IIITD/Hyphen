# ::snt James Morrison - Things Ain't What They Used To Be
# ::tokens ["James", "Morrison", "-", "Things", "Ai", "n't", "What", "They", "Used", "To", "Be"]
# ::lemmas ["James", "Morrison", "-", "thing", "be", "not", "what", "they", "use", "to", "be"]
(c1-0 / say-01
      :ARG0 (c1-4 / person
                  :name (c1-5 / name
                              :op1 "James"
                              :op2 "Morrison"))
      :ARG1 (c1-1 / have-mod-91
                  :ARG1 (c1-3 / thing
                              :ARG2-of c1-1)
                  :time (c1-2 / use-03)
                  :polarity -))

# ::snt He also has an album (Snappy Too) in which he plays every part of a big band except for drums.
# ::tokens ["He", "also", "has", "an", "album", "(", "Snappy", "Too", ")", "in", "which", "he", "plays", "every", "part", "of", "a", "big", "band", "except", "for", "drums", "."]
# ::lemmas ["he", "also", "have", "an", "album", "(", "Snappy", "Too", ")", "in", "which", "he", "play", "every", "part", "of", "a", "big", "band", "except", "for", "drum", "."]
(c2-4 / have-03
      :ARG0 (c2-8 / he)
      :ARG1 (c2-2 / album
                  :ARG1-of (c2-10 / mean-01
                                  :ARG2 (c2-9 / product
                                              :name (c2-11 / name
                                                           :op1 "Snappy"
                                                           :op2 "Too")))
                  :subevent (c2-6 / play-11
                                  :ARG0 c2-8
                                  :ARG1 (c2-3 / part
                                              :mod (c2-13 / every)
                                              :part-of (c2-7 / band
                                                             :mod (c2-1 / big))
                                              :ARG2-of (c2-5 / except-01
                                                             :ARG1 (c2-0 / drum)))))
      :mod (c2-12 / also))

# ::snt Doesn't he have any friends?
# ::tokens ["Does", "n't", "he", "have", "any", "friends", "?"]
# ::lemmas ["do", "not", "he", "have", "any", "friend", "?"]
(c3-3 / have-03
      :ARG0 (c3-4 / he)
      :ARG1 (c3-5 / person
                  :ARG0-of (c3-0 / have-rel-role-91
                                 :ARG1 c3-4
                                 :ARG2 (c3-2 / friend))
                  :mod (c3-1 / any))
      :polarity (c3-6 / amr-unknown)
      :polarity -)
