# ::snt How my girlfriend sees a stop light
# ::tokens ["How", "my", "girlfriend", "sees", "a", "stop", "light"]
# ::lemmas ["how", "my", "girlfriend", "see", "a", "stop", "light"]
(c1-0 / see-01
      :ARG0 (c1-7 / person
                  :ARG0-of (c1-3 / have-rel-role-91
                                 :ARG1 (c1-2 / i)
                                 :ARG2 (c1-5 / girlfriend)))
      :ARG1 (c1-4 / light
                  :ARG0-of (c1-6 / stop-01))
      :manner (c1-1 / amr-unknown))

# ::snt Your girlfriend is going to get someone, and possibly herself killed.
# ::tokens ["Your", "girlfriend", "is", "going", "to", "get", "someone", ",", "and", "possibly", "herself", "killed", "."]
# ::lemmas ["your", "girlfriend", "be", "go", "to", "get", "someone", ",", "and", "possibly", "herself", "kill", "."]
(c2-1 / and
      :op1 (c2-5 / get-02
                 :ARG0 (c2-6 / person
                             :ARG0-of (c2-3 / have-rel-role-91
                                            :ARG1 (c2-8 / you)
                                            :ARG2 (c2-2 / girlfriend)))
                 :ARG1 (c2-0 / someone))
      :op2 (c2-7 / kill-01
                 :ARG1 c2-6
                 :ARG1-of (c2-4 / possible-01)))

# ::snt The worst I could see happening in that situation is that she might get yelled/honked at.
# ::tokens ["The", "worst", "I", "could", "see", "happening", "in", "that", "situation", "is", "that", "she", "might", "get", "yelled", "/", "honked", "at", "."]
# ::lemmas ["the", "bad", "i", "could", "see", "happen", "in", "that", "situation", "be", "that", "she", "might", "get", "yell", "/", "honk", "at", "."]
(c3-11 / possible-01
       :ARG1 (c3-0 / slash
                   :op1 (c3-13 / yell-01
                               :ARG2 (c3-10 / she))
                   :op2 (c3-3 / honk-01
                              :ARG1 c3-10))
       :ARG1-of (c3-4 / see-01
                      :ARG0 (c3-2 / i)
                      :ARG1-of (c3-7 / possible-01)
                      :location (c3-12 / situation
                                       :mod (c3-8 / that))
                      :ARG1-of (c3-5 / have-degree-91
                                     :ARG2 (c3-9 / bad-07
                                                 :ARG1 (c3-6 / or)
                                                 :ARG3 (c3-1 / most)))))

# ::snt Or start driving and hit a pedestrian that she didn't realize was trying to cross the road (obviously that person wouldn't be crossing at the right time but it happens a whole lot)
# ::tokens ["Or", "start", "driving", "and", "hit", "a", "pedestrian", "that", "she", "did", "n't", "realize", "was", "trying", "to", "cross", "the", "road", "(", "obviously", "that", "person", "would", "n't", "be", "crossing", "at", "the", "right", "time", "but", "it", "happens", "a", "whole", "lot", ")"]
# ::lemmas ["or", "start", "drive", "and", "hit", "a", "pedestrian", "that", "she", "do", "not", "realize", "be", "try", "to", "cross", "the", "road", "(", "obviously", "that", "person", "would", "not", "be", "cross", "at", "the", "right", "time", "but", "it", "happen", "a", "whole", "lot", ")"]
(c4-7 / or
      :op2 (c4-15 / and
                  :op1 (c4-13 / start-01
                              :ARG0 (c4-20 / she)
                              :ARG1 (c4-0 / drive-01
                                          :ARG0 c4-20))
                  :op2 (c4-16 / hit-01
                              :ARG0 c4-20
                              :ARG1 (c4-21 / pedestrian
                                           :ARG0-of (c4-8 / try-01
                                                          :ARG1 (c4-2 / cross-02
                                                                      :ARG0 c4-21
                                                                      :ARG1 (c4-9 / road)))
                                           :ARG1-of (c4-5 / realize-01
                                                          :ARG0 c4-20
                                                          :polarity -)))
                  :ARG1-of (c4-11 / mean-01
                                  :ARG2 (c4-1 / contrast-01
                                              :ARG1 (c4-6 / cross-02
                                                          :ARG0 (c4-18 / person
                                                                       :mod (c4-4 / that))
                                                          :time (c4-12 / time
                                                                       :ARG1-of (c4-10 / right-03))
                                                          :ARG1-of (c4-17 / obvious-01)
                                                          :polarity -)
                                              :ARG2 (c4-14 / cross-02
                                                           :frequency (c4-19 / lot
                                                                             :mod (c4-3 / whole)))))))
