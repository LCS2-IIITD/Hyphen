# ::snt "Windows is bloated to the max, idiot."
# ::tokens ["\"", "Windows", "is", "bloated", "to", "the", "max", ",", "idiot", ".", "\""]
# ::lemmas ["\"", "Windows", "be", "bloated", "to", "the", "max", ",", "idiot", ".", "\""]
(c1-0 / say-01
      :ARG0 (c1-3 / idiot)
      :ARG1 (c1-2 / bloat-01
                  :ARG1 (c1-1 / product
                              :name (c1-5 / name
                                          :op1 "Windows"))
                  :ARG2 (c1-4 / maximum)))

# ::snt people have this strange idea that most of your ram should be unused.... this is dumb a good os will use every byte of ram you give it people freaking when they see Vista,7,8,8.1 using nearly all the systems ram then saying 'windows suxs it uses all my ramz' make me giggle
# ::tokens ["people", "have", "this", "strange", "idea", "that", "most", "of", "your", "ram", "should", "be", "unused", "....", "this", "is", "dumb", "a", "good", "os", "will", "use", "every", "byte", "of", "ram", "you", "give", "it", "people", "freaking", "when", "they", "see", "Vista,7,8,8.1", "using", "nearly", "all", "the", "systems", "ram", "then", "saying", "'", "windows", "suxs", "it", "uses", "all", "my", "ramz", "'", "make", "me", "giggle"]
# ::lemmas ["people", "have", "this", "strange", "idea", "that", "most", "of", "your", "ram", "should", "be", "unused", "....", "this", "be", "dumb", "a", "good", "os", "will", "use", "every", "byte", "of", "ram", "you", "give", "it", "people", "freak", "when", "they", "see", "vista,7,8,8.1", "use", "you", "all", "the", "system", "ram", "then", "say", "'", "window", "sux", "it", "use", "all", "my", "ramz", "'", "make", "i", "giggle"]
(c2-17 / multi-sentence
       :snt1 (c2-38 / have-03
                    :ARG0 (c2-42 / person)
                    :ARG1 (c2-6 / idea
                                :mod (c2-21 / strange)
                                :mod (c2-13 / this)
                                :topic (c2-14 / recommend-01
                                              :ARG1 (c2-39 / use-01
                                                           :ARG1 (c2-10 / ram
                                                                        :ARG1-of (c2-25 / include-91
                                                                                        :ARG2 (c2-16 / ram
                                                                                                     :poss (c2-33 / you))
                                                                                        :ARG3 (c2-37 / most)))
                                                           :polarity -))))
       :snt2 (c2-0 / dumb
                   :domain (c2-3 / use-01
                                 :ARG0 (c2-40 / person
                                              :ARG0-of (c2-5 / have-rel-role-91
                                                             :ARG1 (c2-34 / you)
                                                             :ARG2 (c2-11 / os)))
                                 :ARG1 (c2-12 / ram
                                              :mod (c2-20 / every))
                                 :ARG1-of (c2-15 / good-02)))
       :snt3 (c2-28 / make-02
                    :ARG0 (c2-36 / and
                                 :op1 (c2-41 / see-01
                                             :ARG0 (c2-24 / person)
                                             :ARG1 (c2-29 / use-01
                                                          :ARG0 (c2-19 / and
                                                                       :op1 (c2-22 / product
                                                                                   :name (c2-18 / name
                                                                                                :op1 "Vista"))
                                                                       :op2 (c2-2 / product
                                                                                  :name (c2-4 / name
                                                                                              :op1 "7/8"))
                                                                       :op3 (c2-30 / product
                                                                                   :name (c2-31 / name
                                                                                                :op1 "8.1")))
                                                          :ARG1 (c2-23 / ram
                                                                       :mod (c2-26 / system)
                                                                       :mod (c2-1 / all
                                                                                  :degree (c2-8 / near)))))
                                 :op2 (c2-7 / say-01
                                            :ARG0 c2-24
                                            :ARG1 (c2-32 / use-01
                                                         :ARG0 c2-26)
                                            :ARG1 c2-23)
                                 :time (c2-9 / then)))
       :ARG1 (c2-35 / giggle-01
                    :ARG0 (c2-27 / i)))
