# ::snt Varien receives bullshit collab list, confirms one of them is actually happening
# ::tokens ["Varien", "receives", "bullshit", "collab", "list", ",", "confirms", "one", "of", "them", "is", "actually", "happening"]
# ::lemmas ["Varien", "receive", "bullshit", "collab", "list", ",", "confirm", "one", "of", "they", "be", "actually", "happen"]
(c1-1 / and
      :op1 (c1-6 / receive-01
                 :ARG0 (c1-9 / person
                             :name (c1-10 / name
                                          :op1 "Varien"))
                 :ARG1 (c1-5 / thing
                             :ARG2-of (c1-7 / list-01
                                            :ARG1 (c1-2 / collab
                                                        :mod (c1-8 / bullshit)))))
      :op2 (c1-0 / confirm-01
                 :ARG0 c1-9
                 :ARG1 (c1-12 / event
                              :ARG1-of (c1-3 / include-91
                                             :ARG2 (c1-4 / event
                                                         :mod c1-2))
                              :ARG1-of (c1-11 / actual-02)
                              :quant 1)))

# ::snt and here i am still waiting on that varien x halo nova collab
# ::tokens ["and", "here", "i", "am", "still", "waiting", "on", "that", "varien", "x", "halo", "nova", "collab"]
# ::lemmas ["and", "here", "i", "be", "still", "wait", "on", "that", "varien", "x", "halo", "nova", "collab"]
(c2-1 / and
      :op2 (c2-3 / wait-01
                 :ARG1 (c2-10 / i)
                 :ARG2 (c2-2 / collab
                             :mod (c2-6 / that
                                        :mod-of c2-2))
                 :mod (c2-0 / slash
                            :op1 (c2-8 / person
                                       :name (c2-11 / name
                                                    :op1 "Vien"))
                            :op2 (c2-5 / person
                                       :name (c2-7 / name
                                                   :op1 "Halo"
                                                   :op2 "Nova"))))
      :mod (c2-9 / still)
      :location (c2-4 / here))

# ::snt twothirds x lvther would be cool too
# ::tokens ["twothirds", "x", "lvther", "would", "be", "cool", "too"]
# ::lemmas ["twothirds", "x", "lvther", "would", "be", "cool", "too"]
(c3-3 / cool-04
      :ARG1 (c3-0 / person
                  :name (c3-1 / name
                              :op1 "twothirds"
                              :op2 "x"
                              :op3 "lvther"))
      :mod (c3-2 / too))

# ::snt DotEXE x Summer Was Fun tho.
# ::tokens ["DotEXE", "x", "Summer", "Was", "Fun", "tho", "."]
# ::lemmas ["DotEXE", "x", "Summer", "Was", "Fun", "tho", "."]
(c4-0 / have-concession-91
      :ARG1 (c4-2 / fun-01
                  :ARG1 (c4-3 / event
                              :name (c4-1 / name
                                          :op1 "DotEXE"
                                          :op2 "x"
                                          :op3 "Summer"))))

# ::snt What about F.O.O.L and Falcon Funk?
# ::tokens ["What", "about", "F.O.O.L", "and", "Falcon", "Funk", "?"]
# ::lemmas ["what", "about", "F.O.O.L", "and", "Falcon", "Funk", "?"]
(c5-0 / amr-unknown
      :topic (c5-5 / and
                   :op1 (c5-2 / organization
                              :name (c5-4 / name
                                          :op1 "F.O.O.L"))
                   :op2 (c5-1 / company
                              :name (c5-3 / name
                                          :op1 "Falcon"
                                          :op2 "Funk"))))

# ::snt Not as cool as TVDS & Atmozfears imo
# ::tokens ["Not", "as", "cool", "as", "TVDS", "&", "Atmozfears", "imo"]
# ::lemmas ["not", "as", "cool", "as", "TVDS", "&", "Atmozfears", "imo"]
(c6-3 / have-degree-91
      :ARG2 (c6-1 / cool-04)
      :ARG3 (c6-9 / equal)
      :ARG4 (c6-0 / and
                  :op1 (c6-7 / publication
                             :name (c6-8 / name
                                         :op1 "TVDS"))
                  :op2 (c6-5 / publication
                             :name (c6-6 / name
                                         :op1 "Atmozfear")))
      :ARG1-of (c6-4 / opine-01
                     :ARG0 (c6-2 / i))
      :polarity -)
