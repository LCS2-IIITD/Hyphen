# ::snt Marijuana is officially legal in Oregon
# ::tokens ["Marijuana", "is", "officially", "legal", "in", "Oregon"]
# ::lemmas ["Marijuana", "be", "officially", "legal", "in", "Oregon"]
(c1-2 / legal-02
      :ARG1 (c1-3 / marijuana)
      :mod (c1-1 / official)
      :location (c1-0 / state
                      :name (c1-4 / name
                                  :op1 "Oregon")))

# ::snt Is this gonna be like gay marriage?
# ::tokens ["Is", "this", "gon", "na", "be", "like", "gay", "marriage", "?"]
# ::lemmas ["be", "this", "going", "to", "be", "like", "gay", "marriage", "?"]
(c2-2 / resemble-01
      :polarity (c2-0 / amr-unknown)
      :ARG1 (c2-1 / this)
      :ARG2 (c2-4 / marry-01
                  :mod (c2-3 / gay-01)))

# ::snt Let's hope this moves a little quicker and God isn't involved this time.
# ::tokens ["Let", "'s", "hope", "this", "moves", "a", "little", "quicker", "and", "God", "is", "n't", "involved", "this", "time", "."]
# ::lemmas ["let", "us", "hope", "this", "move", "a", "little", "quick", "and", "God", "be", "not", "involve", "this", "time", "."]
(c3-5 / hope-01
      :ARG0 (c3-2 / we)
      :ARG1 (c3-0 / and
                  :op1 (c3-11 / move-01
                              :ARG1 (c3-6 / this)
                              :ARG1-of (c3-3 / quick-02
                                             :ARG2-of (c3-9 / have-degree-91
                                                            :ARG1 c3-11
                                                            :ARG3 (c3-1 / more
                                                                        :quant (c3-7 / little)))))
                  :op2 (c3-10 / involve-01
                              :ARG1 (c3-8 / person
                                          :name (c3-12 / name
                                                       :op1 "God"))
                              :time (c3-4 / time
                                          :mod c3-6)
                              :polarity -))
      :mode imperative)

# ::snt People will always find a way to involve God if it helps their cause.
# ::tokens ["People", "will", "always", "find", "a", "way", "to", "involve", "God", "if", "it", "helps", "their", "cause", "."]
# ::lemmas ["people", "will", "always", "find", "a", "way", "to", "involve", "God", "if", "it", "help", "their", "cause", "."]
(c4-1 / find-01
      :ARG0 (c4-7 / person)
      :ARG1 (c4-3 / way
                  :manner-of (c4-2 / involve-01
                                   :ARG0 c4-7
                                   :ARG1 (c4-6 / person
                                               :name (c4-8 / name
                                                           :op1 "God"))))
      :time (c4-0 / always)
      :condition (c4-5 / help-01
                       :ARG0 c4-2
                       :ARG1 (c4-4 / cause
                                   :poss c4-7)))
