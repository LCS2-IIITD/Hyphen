# ::snt For First Time In 130 Years, More Young Adults Live With Parents Than With Partners
# ::tokens ["For", "First", "Time", "In", "130", "Years", ",", "More", "Young", "Adults", "Live", "With", "Parents", "Than", "With", "Partners"]
# ::lemmas ["for", "First", "Time", "in", "130", "Years", ",", "more", "young", "adult", "live", "with", "parent", "than", "with", "partner"]
(c1-8 / live-02
      :ARG0 (c1-2 / adult
                  :ARG1-of (c1-4 / have-degree-91
                                 :ARG2 (c1-12 / young)
                                 :ARG3 (c1-11 / more)
                                 :ARG4 (c1-13 / adult
                                              :ARG0-of (c1-9 / have-rel-role-91
                                                             :ARG2 (c1-10 / parent)))))
      :accompanier (c1-0 / adult
                         :ARG0-of (c1-1 / have-rel-role-91
                                        :ARG2 (c1-6 / partner)))
      :ord (c1-5 / ordinal-entity
                 :range (c1-7 / temporal-quantity
                              :unit (c1-3 / year)
                              :quant 130)
                 :value 1))

# ::snt Thanks 25 years of stagnant wages matched with increasing costs for everything else(especially rent and education).
# ::tokens ["Thanks", "25", "years", "of", "stagnant", "wages", "matched", "with", "increasing", "costs", "for", "everything", "else(especially", "rent", "and", "education", ")", "."]
# ::lemmas ["thank", "25", "years", "of", "stagnant", "wage", "match", "with", "increase", "cost", "for", "everything", "else(especially", "rent", "and", "education", ")", "."]
(c2-8 / thank-01
      :ARG2 (c2-4 / wage
                  :ARG1-of (c2-0 / stagnate-01)
                  :ARG1-of (c2-11 / match-01
                                  :ARG2 (c2-10 / increase-01
                                               :ARG1 (c2-3 / cost-01
                                                           :ARG1 (c2-13 / everything
                                                                        :mod (c2-6 / else)
                                                                        :example (c2-2 / and
                                                                                       :op1 (c2-9 / rent)
                                                                                       :op2 (c2-7 / educate-01)
                                                                                       :mod (c2-1 / especially))))))
                  :duration (c2-5 / temporal-quantity
                                  :unit (c2-12 / year)
                                  :quant 25)))
