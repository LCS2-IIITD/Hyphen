# ::snt Females of Reddit, What is the biggest fall back of being a women?
# ::tokens ["Females", "of", "Reddit", ",", "What", "is", "the", "biggest", "fall", "back", "of", "being", "a", "women", "?"]
# ::lemmas ["female", "of", "Reddit", ",", "what", "be", "the", "big", "fall", "back", "of", "be", "a", "woman", "?"]
(c1-1 / ask-01
      :ARG1 (c1-2 / fall-01
                  :ARG1 (c1-3 / woman)
                  :ARG4 (c1-12 / amr-unknown)
                  :direction (c1-7 / back)
                  :ARG1-of (c1-4 / have-degree-91
                                 :ARG2 (c1-0 / big)
                                 :ARG3 (c1-10 / most)))
      :ARG2 (c1-9 / person
                  :ARG0-of (c1-8 / have-rel-role-91
                                 :ARG1 (c1-6 / publication
                                             :name (c1-11 / name
                                                          :op1 "Reddit"))
                                 :ARG2 (c1-5 / fiancee))))

# ::snt Knowing that if was raped, regardless of the scenario, there's at least one person out there who thinks it was even a LITTLE bit my fault.
# ::tokens ["Knowing", "that", "if", "was", "raped", ",", "regardless", "of", "the", "scenario", ",", "there", "'s", "at", "least", "one", "person", "out", "there", "who", "thinks", "it", "was", "even", "a", "LITTLE", "bit", "my", "fault", "."]
# ::lemmas ["know", "that", "if", "be", "rape", ",", "regardless", "of", "the", "scenario", ",", "there", "be", "at", "least", "one", "person", "out", "there", "who", "think", "it", "be", "even", "a", "little", "bit", "my", "fault", "."]
(c2-11 / know-01
       :ARG0 (c2-10 / i)
       :ARG1 (c2-7 / person
                   :quant (c2-1 / at-least
                                :op1 1)
                   :location (c2-4 / out-there)
                   :ARG0-of (c2-5 / think-01
                                  :ARG1 (c2-2 / fault-01
                                              :ARG1 c2-10
                                              :ARG2 (c2-6 / rape-01
                                                          :ARG1 c2-10)
                                              :degree (c2-9 / bit
                                                            :mod (c2-8 / little)
                                                            :mod (c2-12 / even))))
                   :condition c2-6)
       :concession (c2-3 / regardless-91
                         :ARG1 (c2-0 / scenario)
                         :ARG2 c2-6))
