# ::snt Donald Trump had nothing to do with our new US jobs, Fiat Chrysler reveals
# ::tokens ["Donald", "Trump", "had", "nothing", "to", "do", "with", "our", "new", "US", "jobs", ",", "Fiat", "Chrysler", "reveals"]
# ::lemmas ["Donald", "Trump", "have", "nothing", "to", "do", "with", "our", "new", "US", "job", ",", "Fiat", "Chrysler", "reveal"]
(c1-6 / reveal-01
      :ARG0 (c1-2 / company
                  :name (c1-11 / name
                               :op1 "Fiat"
                               :op2 "Chrysler"))
      :ARG1 (c1-4 / have-to-do-with-04
                  :ARG0 (c1-10 / person
                               :name (c1-7 / name
                                           :op1 "Donald"
                                           :op2 "Trump"))
                  :ARG1 (c1-9 / job
                              :poss (c1-3 / we)
                              :ARG1-of (c1-5 / new-01)
                              :mod (c1-0 / country
                                         :name (c1-1 / name
                                                     :op1 "US")))
                  :ARG2 (c1-8 / nothing)))

# ::snt I think at this point it's safe to assume that Trump has nothing to do with job creation until proven otherwise.
# ::tokens ["I", "think", "at", "this", "point", "it", "'s", "safe", "to", "assume", "that", "Trump", "has", "nothing", "to", "do", "with", "job", "creation", "until", "proven", "otherwise", "."]
# ::lemmas ["i", "think", "at", "this", "point", "it", "be", "safe", "to", "assume", "that", "Trump", "have", "nothing", "to", "do", "with", "job", "creation", "until", "prove", "otherwise", "."]
(c2-8 / think-01
      :ARG0 (c2-12 / i)
      :ARG1 (c2-0 / safe-01
                  :ARG1 (c2-1 / assume-02
                              :ARG1 (c2-5 / have-to-do-with-04
                                          :ARG0 (c2-10 / person
                                                       :name (c2-13 / name
                                                                    :op1 "Trump"))
                                          :ARG1 (c2-2 / create-01
                                                      :ARG1 (c2-11 / job))
                                          :ARG2 (c2-9 / nothing)
                                          :time (c2-6 / until
                                                      :op1 (c2-7 / prove-01
                                                                 :ARG1 c2-5)))))
      :time (c2-4 / point
                  :mod (c2-3 / this)))
