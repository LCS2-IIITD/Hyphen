# ::snt The world's first 13TB SSD is here
# ::tokens ["The", "world", "'s", "first", "13", "TB", "SSD", "is", "here"]
# ::lemmas ["the", "world", "'s", "first", "13", "TB", "SSD", "be", "here"]
(c1-5 / be-located-at-91
      :ARG1 (c1-4 / thing
                  :name (c1-7 / name
                              :op1 "SSD")
                  :ord (c1-3 / ordinal-entity
                             :value 1)
                  :mod (c1-6 / information-quantity
                             :unit (c1-1 / terabyte)
                             :quant 13)
                  :poss (c1-0 / world))
      :ARG2 (c1-2 / here))

# ::snt This seems a bit pointless - it would surely be better to RAID stripe smaller disks - otherwise you're not going to get much speed out of SATA3.
# ::tokens ["This", "seems", "a", "bit", "pointless", "-", "it", "would", "surely", "be", "better", "to", "RAID", "stripe", "smaller", "disks", "-", "otherwise", "you", "'re", "not", "going", "to", "get", "much", "speed", "out", "of", "SATA3", "."]
# ::lemmas ["this", "seem", "a", "bit", "pointless", "-", "it", "would", "surely", "be", "well", "to", "raid", "stripe", "small", "disk", "-", "otherwise", "you", "be", "not", "go", "to", "get", "much", "speed", "out", "of", "SATA3", "."]
(c2-13 / and
       :op1 (c2-9 / seem-01
                  :ARG1 (c2-19 / point-03
                               :ARG1 (c2-4 / this)
                               :degree (c2-17 / bit)
                               :polarity -))
       :op2 (c2-15 / have-degree-91
                   :ARG1 (c2-5 / RAID-01
                               :ARG1 (c2-0 / disk
                                           :ARG1-of (c2-18 / stripe-01)
                                           :ARG1-of c2-15
                                           :ARG2 (c2-10 / small)
                                           :ARG3 (c2-7 / more))))
       :ARG2 (c2-6 / good-02
                   :ARG1 c2-5)
       :ARG3 c2-7
       :ARG1-of (c2-2 / sure-02)
       :op3 (c2-1 / have-condition-91
                  :ARG1 (c2-12 / get-01
                               :ARG0 (c2-11 / you)
                               :ARG1 (c2-3 / speed
                                           :quant (c2-14 / much))
                               :ARG2 (c2-16 / product
                                            :name (c2-8 / name
                                                        :op1 "SASA3"))
                               :polarity -)))
