# ::snt Has anyone used one of these Reevu (Rear View equipped) Helmets?
# ::tokens ["Has", "anyone", "used", "one", "of", "these", "Reevu", "(", "Rear", "View", "equipped", ")", "Helmets", "?"]
# ::lemmas ["have", "anyone", "use", "one", "of", "these", "Reevu", "(", "Rear", "View", "equip", ")", "Helmets", "?"]
(c1-3 / use-01
      :ARG0 (c1-0 / anyone)
      :ARG1 (c1-6 / product
                  :ARG1-of (c1-1 / include-91
                                 :ARG2 (c1-4 / product
                                             :name (c1-7 / name
                                                         :op1 "Reevu")
                                             :ARG1-of (c1-9 / equip-01
                                                            :ARG2 (c1-2 / product
                                                                        :name c1-7
                                                                        :op1 "Rear"
                                                                        :op2 "View")))
                                 :mod (c1-5 / this))
                  :quant 1)
      :polarity (c1-8 / amr-unknown))

# ::snt would you be blinded if some asshole SUV/truck with halogens or high beams stayed behind you?
# ::tokens ["would", "you", "be", "blinded", "if", "some", "asshole", "SUV", "/", "truck", "with", "halogens", "or", "high", "beams", "stayed", "behind", "you", "?"]
# ::lemmas ["would", "you", "be", "blind", "if", "some", "asshole", "SUV", "/", "truck", "with", "halogen", "or", "high", "beam", "stay", "behind", "you", "?"]
(c2-11 / blind-02
       :ARG1 (c2-14 / you)
       :polarity (c2-3 / amr-unknown)
       :condition (c2-0 / stay-01
                        :ARG1 (c2-12 / slash
                                     :op1 (c2-8 / vehicle
                                                :mod (c2-6 / sport)
                                                :mod (c2-13 / some)
                                                :mod (c2-15 / asshole))
                                     :op2 (c2-10 / truck
                                                 :mod c2-13)
                                     :mod (c2-1 / asshole))
                        :prep-with (c2-9 / or
                                         :op1 (c2-5 / halogen)
                                         :op2 (c2-2 / beam
                                                    :ARG1-of (c2-7 / high-02))))
       :location (c2-4 / behind
                       :op1 c2-14))
