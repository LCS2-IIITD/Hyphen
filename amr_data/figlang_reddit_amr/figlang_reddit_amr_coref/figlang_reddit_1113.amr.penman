# ::snt Is the current Steph Curry actually better than triple double Westbrook?
# ::tokens ["Is", "the", "current", "Steph", "Curry", "actually", "better", "than", "triple", "double", "Westbrook", "?"]
# ::lemmas ["be", "the", "current", "Steph", "Curry", "actually", "well", "than", "triple", "double", "Westbrook", "?"]
(c1-3 / have-degree-91
      :ARG1 (c1-8 / person
                  :name (c1-10 / name
                               :op1 "Steph"
                               :op2 "Curry")
                  :time (c1-2 / current))
      :ARG2 (c1-7 / good-02
                  :ARG1 c1-8)
      :ARG3 (c1-9 / more)
      :ARG4 (c1-4 / person
                  :name (c1-6 / name
                              :op1 "Westbrook")
                  :ARG1-of (c1-0 / double-01
                                 :ARG1-of (c1-5 / triple-01)))
      :polarity (c1-1 / amr-unknown)
      :ARG1-of (c1-11 / actual-02))

# ::snt Russel gets his triple double along with an L So yeah I'll take Curry any day
# ::tokens ["Russel", "gets", "his", "triple", "double", "along", "with", "an", "L", "So", "yeah", "I", "'ll", "take", "Curry", "any", "day"]
# ::lemmas ["Russel", "get", "his", "triple", "double", "along", "with", "an", "l", "so", "yeah", "i", "'ll", "take", "Curry", "any", "day"]
(c2-11 / multi-sentence
       :snt1 (c2-9 / get-01
                   :ARG0 (c2-10 / person
                                :name (c2-12 / name
                                             :op1 "Russel"))
                   :ARG1 (c2-0 / double
                               :mod (c2-7 / triple)
                               :poss c2-10
                               :accompanier (c2-1 / string-entity
                                                  :value "L")))
       :snt2 (c2-4 / take-01
                   :ARG0 (c2-3 / i)
                   :ARG1 (c2-6 / person
                               :name (c2-8 / name
                                           :op1 "Curry"))
                   :mod (c2-13 / yeah
                               :mode expressive)
                   :time (c2-5 / day
                               :mod (c2-2 / any))))
