# ::snt I never realized this
# ::tokens ["I", "never", "realized", "this"]
# ::lemmas ["i", "never", "realize", "this"]
(c1-2 / realize-01
      :ARG0 (c1-0 / i)
      :ARG1 (c1-1 / this)
      :time (c1-3 / ever)
      :polarity -)

# ::snt If you talk to the TV in your house in B1 & W1, it says the TV was bought by your dad
# ::tokens ["If", "you", "talk", "to", "the", "TV", "in", "your", "house", "in", "B1", "&", "W1", ",", "it", "says", "the", "TV", "was", "bought", "by", "your", "dad"]
# ::lemmas ["if", "you", "talk", "to", "the", "tv", "in", "your", "house", "in", "B1", "&", "W1", ",", "it", "say", "the", "tv", "be", "buy", "by", "your", "dad"]
(c2-0 / say-01
      :ARG0 (c2-8 / talk-01
                  :ARG0 (c2-14 / you)
                  :ARG1 (c2-6 / television)
                  :location (c2-7 / house
                                  :poss c2-14
                                  :location (c2-3 / and
                                                  :op1 (c2-4 / company
                                                             :name (c2-13 / name
                                                                          :op1 "B1"))
                                                  :op2 (c2-1 / company
                                                             :name (c2-9 / name
                                                                         :op1 "W1")))))
      :ARG1 (c2-10 / buy-01
                   :ARG0 (c2-12 / person
                                :ARG0-of (c2-11 / have-rel-role-91
                                                :ARG1 c2-14
                                                :ARG2 (c2-2 / dad)))
                   :ARG1 (c2-5 / television))
      :condition c2-8)

# ::snt He just went out to buy some milk.
# ::tokens ["He", "just", "went", "out", "to", "buy", "some", "milk", "."]
# ::lemmas ["he", "just", "go", "out", "to", "buy", "some", "milk", "."]
(c3-2 / go-out-17
      :ARG0 (c3-1 / he)
      :purpose (c3-5 / buy-01
                     :ARG0 c3-1
                     :ARG1 (c3-4 / milk
                                 :quant (c3-0 / some)))
      :mod (c3-3 / just))

# ::snt Or maybe he went out to give some milk *if you know what i mean*
# ::tokens ["Or", "maybe", "he", "went", "out", "to", "give", "some", "milk", "*", "if", "you", "know", "what", "i", "mean", "*"]
# ::lemmas ["or", "maybe", "he", "go", "out", "to", "give", "some", "milk", "*", "if", "you", "know", "what", "i", "mean", "*"]
(c4-4 / or
      :op2 (c4-8 / possible-01
                 :ARG1 (c4-7 / go-out-17
                             :ARG0 (c4-3 / he)
                             :purpose (c4-11 / give-01
                                             :ARG0 c4-3
                                             :ARG1 (c4-9 / milk
                                                         :quant (c4-0 / some))))
                 :condition (c4-10 / know-01
                                   :ARG0 (c4-5 / you)
                                   :ARG1 (c4-6 / thing
                                               :ARG2-of (c4-1 / mean-01
                                                              :ARG0 (c4-2 / i))))))
