# ::snt When people poke fun at me for going to Community College because they think I'm too stupid to get into anywhere else
# ::tokens ["When", "people", "poke", "fun", "at", "me", "for", "going", "to", "Community", "College", "because", "they", "think", "I", "'m", "too", "stupid", "to", "get", "into", "anywhere", "else"]
# ::lemmas ["when", "people", "poke", "fun", "at", "i", "for", "go", "to", "Community", "College", "because", "they", "think", "i", "be", "too", "stupid", "to", "get", "into", "anywhere", "else"]
(c1-11 / poke-fun-04
       :ARG0 (c1-8 / person)
       :ARG1 (c1-4 / i)
       :ARG2 (c1-10 / go-02
                    :ARG0 c1-4
                    :ARG4 (c1-3 / college
                                :mod (c1-0 / community))
                    :ARG1-of (c1-7 / cause-01
                                   :ARG0 (c1-9 / think-01
                                               :ARG0 c1-8
                                               :ARG1 (c1-6 / have-degree-91
                                                           :ARG1 c1-4
                                                           :ARG2 (c1-1 / stupid)
                                                           :ARG3 (c1-5 / too)
                                                           :ARG6 (c1-12 / get-05
                                                                        :ARG1 c1-4
                                                                        :ARG2 (c1-2 / anywhere
                                                                                    :mod (c1-13 / else))))))))

# ::snt I'm just amazed that someone finally used this meme correctly.
# ::tokens ["I", "'m", "just", "amazed", "that", "someone", "finally", "used", "this", "meme", "correctly", "."]
# ::lemmas ["i", "be", "just", "amazed", "that", "someone", "finally", "use", "this", "meme", "correctly", "."]
(c2-1 / amaze-01
      :ARG0 (c2-4 / use-01
                  :ARG0 (c2-0 / someone)
                  :ARG1 (c2-8 / meme
                              :mod (c2-5 / this))
                  :ARG1-of (c2-3 / correct-02)
                  :time (c2-2 / final))
      :ARG1 (c2-7 / i)
      :mod (c2-6 / just))
