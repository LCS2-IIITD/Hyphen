# ::snt TIL That the city of Dresden was ordered to be destroyed by the allies, and they obeyed.
# ::tokens ["TIL", "That", "the", "city", "of", "Dresden", "was", "ordered", "to", "be", "destroyed", "by", "the", "allies", ",", "and", "they", "obeyed", "."]
# ::lemmas ["TIL", "that", "the", "city", "of", "Dresden", "be", "order", "to", "be", "destroy", "by", "the", "ally", ",", "and", "they", "obey", "."]
(c1-1 / and
      :op1 (c1-6 / that
                 :mod (c1-3 / too))
      :op2 (c1-5 / order-01
                 :ARG0 (c1-8 / ally)
                 :ARG1 (c1-0 / destroy-01
                             :ARG0 c1-8
                             :ARG1 (c1-2 / city
                                         :name (c1-7 / name
                                                     :op1 "Dresden"))))
      :op3 (c1-4 / obeyed-01
                 :ARG0 c1-8))

# ::snt The winners write the history.
# ::tokens ["The", "winners", "write", "the", "history", "."]
# ::lemmas ["the", "winner", "write", "the", "history", "."]
(c2-0 / write-01
      :ARG0 (c2-1 / person
                  :ARG0-of (c2-3 / win-01))
      :ARG1 (c2-2 / history))

# ::snt safe to say the Nazis were a little more in the wrong than us.
# ::tokens ["safe", "to", "say", "the", "Nazis", "were", "a", "little", "more", "in", "the", "wrong", "than", "us", "."]
# ::lemmas ["safe", "to", "say", "the", "Nazis", "be", "a", "little", "more", "in", "the", "wrong", "than", "we", "."]
(c3-0 / safe-01
      :ARG1 (c3-5 / say-01
                  :ARG1 (c3-1 / wrong-04
                              :ARG1 (c3-6 / person
                                          :mod (c3-3 / political-movement
                                                     :name (c3-8 / name
                                                                 :op1 "Nazism")))
                              :ARG2-of (c3-2 / have-degree-91
                                             :ARG1 c3-6
                                             :ARG3 (c3-7 / more
                                                         :quant (c3-4 / little))
                                             :ARG4 (c3-9 / we)))))
