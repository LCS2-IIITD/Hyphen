# ::snt Man 'kicked pregnant Muslim woman in the stomach killing unborn twins'
# ::tokens ["Man", "'", "kicked", "pregnant", "Muslim", "woman", "in", "the", "stomach", "killing", "unborn", "twins", "'"]
# ::lemmas ["man", "'", "kick", "pregnant", "Muslim", "woman", "in", "the", "stomach", "kill", "unborn", "twin", "'"]
(c1-8 / kill-01
      :ARG0 (c1-7 / man
                  :part (c1-0 / stomach))
      :ARG1 (c1-1 / woman
                  :ARG1-of (c1-6 / impregnate-01)
                  :mod (c1-3 / religious-group
                             :name (c1-4 / name
                                         :op1 "Muslim")))
      :ARG2 c1-0
      :ARG0 c1-8
      :ARG1 (c1-2 / twin
                  :ARG1-of (c1-5 / bear-02
                                 :polarity -)))

# ::snt "has no fixed abode" That's a really nice way of saying homeless
# ::tokens ["\"", "has", "no", "fixed", "abode", "\"", "That", "'s", "a", "really", "nice", "way", "of", "saying", "homeless"]
# ::lemmas ["\"", "have", "no", "fix", "abode", "\"", "that", "be", "a", "really", "nice", "way", "of", "say", "homeless"]
(c2-3 / way
      :ARG1-of (c2-7 / nice-01
                     :degree (c2-6 / really))
      :manner-of (c2-0 / say-01
                       :ARG1 (c2-4 / have-03
                                   :ARG1 (c2-1 / abode
                                               :ARG1-of (c2-2 / fix-03))
                                   :polarity -))
      :domain (c2-5 / that))

# ::snt I'm gonna go one step further and start referring to the homeless in my area as Abodeless.
# ::tokens ["I", "'m", "gon", "na", "go", "one", "step", "further", "and", "start", "referring", "to", "the", "homeless", "in", "my", "area", "as", "Abodeless", "."]
# ::lemmas ["i", "be", "going", "to", "go", "one", "step", "far", "and", "start", "refer", "to", "the", "homeless", "in", "my", "area", "as", "Abodeless", "."]
(c3-1 / and
      :op1 (c3-8 / go-01
                 :ARG1 (c3-10 / i)
                 :ARG2 (c3-2 / further
                             :quant (c3-5 / one)))
      :op2 (c3-0 / start-01
                 :ARG0 c3-10
                 :ARG1 (c3-6 / refer-01
                             :ARG0 c3-10
                             :ARG1 (c3-7 / person
                                         :ARG0-of (c3-3 / have-03
                                                        :ARG1 (c3-9 / home)
                                                        :polarity -)
                                         :location (c3-11 / area
                                                          :poss c3-10))
                             :ARG2 c3-7
                             :mod (c3-4 / outright))))
