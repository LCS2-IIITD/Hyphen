# ::snt Michelle found out
# ::tokens ["Michelle", "found", "out"]
# ::lemmas ["Michelle", "find", "out"]
(c1-2 / find-out-03
      :ARG0 (c1-0 / person
                  :name (c1-1 / name
                              :op1 "Michelle")))

# ::snt "Look here Barrack, he's your bro and dank memes are funny but I'm your wife!"
# ::tokens ["\"", "Look", "here", "Barrack", ",", "he", "'s", "your", "bro", "and", "dank", "memes", "are", "funny", "but", "I", "'m", "your", "wife", "!", "\""]
# ::lemmas ["\"", "look", "here", "Barrack", ",", "he", "be", "your", "bro", "and", "dank", "meme", "be", "funny", "but", "i", "be", "your", "wife", "!", "\""]
(c2-0 / say-01
      :ARG0 (c2-10 / i)
      :ARG1 (c2-7 / look-01
                  :ARG0 (c2-8 / person
                              :name (c2-12 / name
                                           :op1 "Barack"))
                  :ARG1 (c2-6 / here)
                  :ARG1-of (c2-4 / cause-01
                                 :ARG0 (c2-1 / contrast-01
                                             :ARG1 (c2-3 / funny-02
                                                         :ARG1 (c2-11 / meme
                                                                      :mod (c2-2 / dank)))
                                             :ARG2 (c2-9 / have-rel-role-91
                                                         :ARG0 c2-10
                                                         :ARG1 c2-8
                                                         :ARG2 (c2-5 / wife))))
                  :mode imperative)
      :ARG2 c2-8)

# ::snt I can't believe that after 8 years people still can't spell his name.
# ::tokens ["I", "ca", "n't", "believe", "that", "after", "8", "years", "people", "still", "ca", "n't", "spell", "his", "name", "."]
# ::lemmas ["i", "can", "not", "believe", "that", "after", "8", "years", "people", "still", "can", "not", "spell", "his", "name", "."]
(c3-9 / possible-01
      :ARG1 (c3-7 / believe-01
                  :ARG0 (c3-2 / i)
                  :ARG1 (c3-5 / possible-01
                              :ARG1 (c3-0 / spell-01
                                          :ARG0 (c3-3 / person)
                                          :ARG1 (c3-10 / name
                                                       :poss (c3-4 / he)))
                              :mod (c3-8 / still)
                              :time (c3-1 / after
                                          :quant (c3-6 / temporal-quantity
                                                       :unit (c3-11 / year)
                                                       :quant 8))
                              :polarity -))
      :polarity -)
