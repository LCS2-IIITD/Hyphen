# ::snt The best dollar pizza in NYC
# ::tokens ["The", "best", "dollar", "pizza", "in", "NYC"]
# ::lemmas ["the", "good", "dollar", "pizza", "in", "NYC"]
(c1-3 / pizza
      :location (c1-0 / city
                      :name (c1-5 / name
                                  :op1 "NYC"))
      :ARG1-of (c1-1 / have-degree-91
                     :ARG2 (c1-2 / good-02
                                 :ARG1 c1-3)
                     :ARG3 (c1-4 / most)))

# ::snt Why are shady characters attracted to these places?
# ::tokens ["Why", "are", "shady", "characters", "attracted", "to", "these", "places", "?"]
# ::lemmas ["why", "be", "shady", "character", "attract", "to", "these", "place", "?"]
(c2-2 / attract-01
      :ARG0 (c2-5 / place
                  :mod (c2-4 / this))
      :ARG1 (c2-3 / character
                  :mod (c2-0 / shady))
      :ARG1-of (c2-1 / cause-01
                     :ARG0 (c2-6 / amr-unknown)))

# ::snt So being poor now automatically brands one as being 'shady'?
# ::tokens ["So", "being", "poor", "now", "automatically", "brands", "one", "as", "being", "'", "shady", "'", "?"]
# ::lemmas ["so", "be", "poor", "now", "automatically", "brand", "one", "as", "be", "'", "shady", "'", "?"]
(c3-3 / brand-01
      :polarity (c3-1 / amr-unknown)
      :ARG0 (c3-4 / poor
                  :domain (c3-2 / one
                                :ARG1-of c3-3))
      :ARG2 (c3-0 / shitty)
      :time (c3-5 / now)
      :manner (c3-6 / automatic))

# ::snt I meant the vagrants who hang outside and ask people for money not customers.
# ::tokens ["I", "meant", "the", "vagrants", "who", "hang", "outside", "and", "ask", "people", "for", "money", "not", "customers", "."]
# ::lemmas ["i", "mean", "the", "vagrant", "who", "hang", "outside", "and", "ask", "people", "for", "money", "not", "customer", "."]
(c4-11 / mean-01
       :ARG0 (c4-10 / i)
       :ARG2 (c4-2 / contrast-01
                   :ARG1 (c4-5 / vagrant
                               :ARG1-of (c4-4 / hang-01
                                              :location (c4-6 / outside))
                               :ARG0-of (c4-1 / ask-02
                                              :ARG1 (c4-3 / money)
                                              :ARG2 (c4-8 / person)))
                   :ARG2 (c4-7 / person
                               :ARG0-of (c4-9 / have-rel-role-91
                                              :ARG1 c4-5
                                              :ARG2 (c4-0 / customer))
                               :polarity -)))
