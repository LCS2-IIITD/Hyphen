# ::snt This used to air regularly a few years ago in the UK
# ::tokens ["This", "used", "to", "air", "regularly", "a", "few", "years", "ago", "in", "the", "UK"]
# ::lemmas ["this", "use", "to", "air", "regularly", "a", "few", "years", "ago", "in", "the", "UK"]
(c1-0 / air-01
      :ARG1 (c1-5 / this)
      :ARG1-of (c1-6 / regular-02)
      :time (c1-8 / before
                  :op1 (c1-9 / now)
                  :quant (c1-1 / few
                               :op1 (c1-3 / temporal-quantity
                                          :unit (c1-10 / year)
                                          :quant 1)))
      :location (c1-2 / country
                      :name (c1-7 / name
                                  :op1 "UK"))
      :time (c1-4 / use-03))

# ::snt Funnily enough, Polish community in the UK calls English sausages "dog's dicks" cause they taste horrible hahaha
# ::tokens ["Funnily", "enough", ",", "Polish", "community", "in", "the", "UK", "calls", "English", "sausages", "\"", "dog", "'s", "dicks", "\"", "cause", "they", "taste", "horrible", "hahaha"]
# ::lemmas ["funnily", "enough", ",", "Polish", "community", "in", "the", "UK", "call", "English", "sausage", "\"", "dog", "'s", "dick", "\"", "cause", "they", "taste", "horrible", "hahaha"]
(c2-4 / call-01
      :ARG0 (c2-0 / community
                  :mod (c2-8 / country
                             :name (c2-15 / name
                                          :op1 "Poland"))
                  :location (c2-12 / country
                                   :name (c2-11 / name
                                                :op1 "UK")))
      :ARG1 (c2-1 / sausage
                  :mod (c2-5 / country
                             :name (c2-9 / name
                                         :op1 "England")))
      :ARG2 (c2-2 / dick
                  :part-of (c2-14 / dog))
      :ARG1-of (c2-16 / cause-01
                      :ARG0 (c2-10 / taste-02
                                   :ARG1 c2-1
                                   :ARG2 (c2-6 / horrible)
                                   :mod (c2-13 / haha
                                               :mode expressive)))
      :ARG2-of (c2-3 / have-degree-91
                     :ARG3 (c2-7 / enough)
                     :ARG1 c2-4))
