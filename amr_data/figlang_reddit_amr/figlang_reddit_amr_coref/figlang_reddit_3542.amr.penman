# ::snt Let me present to you "The Trident"
# ::tokens ["Let", "me", "present", "to", "you", "\"", "The", "Trident", "\""]
# ::lemmas ["let", "i", "present", "to", "you", "\"", "The", "Trident", "\""]
(c1-1 / let-01
      :ARG0 (c1-5 / you)
      :ARG1 (c1-3 / present-01
                  :ARG0 (c1-0 / i)
                  :ARG1 (c1-2 / book
                              :name (c1-4 / name
                                          :op1 "The"
                                          :op2 "Trident"))
                  :ARG2 c1-5)
      :mode imperative)

# ::snt How would a team even fight *this*?
# ::tokens ["How", "would", "a", "team", "even", "fight", "*", "this", "*", "?"]
# ::lemmas ["how", "would", "a", "team", "even", "fight", "*", "this", "*", "?"]
(c2-1 / fight-01
      :ARG0 (c2-3 / team)
      :ARG2 (c2-2 / this)
      :manner (c2-0 / amr-unknown)
      :mod (c2-4 / even))

# ::snt Pharah, maybe junkrat for mines and avoiding line of sight with reinhardt and trapping one.
# ::tokens ["Pharah", ",", "maybe", "junkrat", "for", "mines", "and", "avoiding", "line", "of", "sight", "with", "reinhardt", "and", "trapping", "one", "."]
# ::lemmas ["Pharah", ",", "maybe", "junkrat", "for", "mine", "and", "avoid", "line", "of", "sight", "with", "reinhardt", "and", "trap", "one", "."]
(c3-0 / say-01
      :ARG0 (c3-12 / i)
      :ARG1 (c3-9 / possible-01
                  :ARG1 (c3-3 / and
                              :op1 (c3-11 / junkrat
                                          :purpose (c3-13 / mine))
                              :op2 (c3-15 / and
                                          :op1 (c3-1 / avoid-01
                                                     :ARG1 (c3-10 / line
                                                                  :location-of (c3-2 / sight-01))
                                                     :ARG2 (c3-6 / person
                                                                 :name (c3-14 / name
                                                                              :op1 "Reinhardt")))
                                          :op2 (c3-7 / trap-01
                                                     :ARG1 (c3-5 / person
                                                                 :quant 1)))))
      :ARG2 (c3-4 / person
                  :name (c3-8 / name
                              :op1 "Pharah")))

# ::snt 5 Junks and a Lucio will do it every time.
# ::tokens ["5", "Junks", "and", "a", "Lucio", "will", "do", "it", "every", "time", "."]
# ::lemmas ["5", "Junks", "and", "a", "Lucio", "will", "do", "it", "every", "time", "."]
(c4-0 / do-02
      :ARG0 (c4-1 / and
                  :op1 (c4-4 / junky
                             :quant 5)
                  :op2 (c4-3 / Lucio))
      :ARG1 (c4-5 / it)
      :frequency (c4-2 / time
                       :mod (c4-6 / every)))

# ::snt 5 Junkrats will get anything done, but whats the Lucio for?
# ::tokens ["5", "Junkrats", "will", "get", "anything", "done", ",", "but", "what", "s", "the", "Lucio", "for", "?"]
# ::lemmas ["5", "Junkrats", "will", "get", "anything", "do", ",", "but", "what", "s", "the", "Lucio", "for", "?"]
(c5-2 / contrast-01
      :ARG1 (c5-0 / do-02
                  :ARG0 (c5-4 / person
                              :mod (c5-3 / junkrat)
                              :quant 5)
                  :ARG1 (c5-1 / anything))
      :ARG2 c5-4
      :name (c5-5 / name
                  :op1 "Lucio")
      :purpose (c5-6 / amr-unknown))
