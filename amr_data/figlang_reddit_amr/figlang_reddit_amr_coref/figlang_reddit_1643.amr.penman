# ::snt Sessions 'amazed' judge 'sitting on an island in the Pacific' can stop Trump travel order
# ::tokens ["Sessions", "'", "amazed", "'", "judge", "'", "sitting", "on", "an", "island", "in", "the", "Pacific", "'", "can", "stop", "Trump", "travel", "order"]
# ::lemmas ["session", "'", "amazed", "'", "judge", "'", "sit", "on", "an", "island", "in", "the", "Pacific", "'", "can", "stop", "Trump", "travel", "order"]
(c1-2 / amaze-01
      :ARG0 (c1-0 / sit-01
                  :ARG1 (c1-12 / person
                               :ARG0-of (c1-11 / judge-01))
                  :ARG2 (c1-3 / island
                              :location (c1-6 / ocean
                                              :name (c1-13 / name
                                                           :op1 "Pacific"))))
      :ARG1 (c1-7 / person
                  :name (c1-9 / name
                              :op1 "Sessions"))
      :ARG0-of (c1-1 / stop-01
                     :ARG1 (c1-5 / order-01
                                 :ARG0 (c1-4 / person
                                             :name (c1-8 / name
                                                         :op1 "Trump"))
                                 :ARG2 (c1-10 / travel-01
                                              :ARG0 c1-4))))

# ::snt To be fair, Trump's not even sure Hawaii is a state.
# ::tokens ["To", "be", "fair", ",", "Trump", "'s", "not", "even", "sure", "Hawaii", "is", "a", "state", "."]
# ::lemmas ["to", "be", "fair", ",", "Trump", "'s", "not", "even", "sure", "Hawaii", "be", "a", "state", "."]
(c2-0 / sure-02
      :ARG0 (c2-5 / person
                  :name (c2-6 / name
                              :op1 "Trump"))
      :ARG1 (c2-4 / state
                  :domain (c2-2 / state
                                :name (c2-3 / name
                                            :op1 "Hawaii")))
      :mod (c2-7 / even)
      :ARG1-of (c2-1 / fair-04)
      :polarity -)
