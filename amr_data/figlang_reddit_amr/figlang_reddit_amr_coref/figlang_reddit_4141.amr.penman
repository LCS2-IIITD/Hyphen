# ::snt She's figured it out...
# ::tokens ["She", "'s", "figured", "it", "out", "..."]
# ::lemmas ["she", "be", "figure", "it", "out", "..."]
(c1-2 / figure-out-05
      :ARG0 (c1-0 / she)
      :ARG1 (c1-1 / it))

# ::snt Then just say Hulu and Hang
# ::tokens ["Then", "just", "say", "Hulu", "and", "Hang"]
# ::lemmas ["then", "just", "say", "Hulu", "and", "hang"]
(c2-0 / say-01
      :ARG0 (c2-8 / you)
      :ARG1 (c2-2 / and
                  :op1 (c2-3 / company
                             :name (c2-7 / name
                                         :op1 "Hulu"))
                  :op2 (c2-1 / company
                             :name (c2-5 / name
                                         :op1 "Hang")))
      :mod (c2-4 / then)
      :mod (c2-6 / just)
      :mode imperative)

# ::snt Crunchyroll and Coolin.
# ::tokens ["Crunchyroll", "and", "Coolin", "."]
# ::lemmas ["Crunchyroll", "and", "Coolin", "."]
(c3-1 / and
      :op1 (c3-2 / company
                 :name (c3-4 / name
                             :op1 "Crunchyroll"))
      :op2 (c3-0 / company
                 :name (c3-3 / name
                             :op1 "Coolin")))
