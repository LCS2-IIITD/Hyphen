# ::snt What's a shallow reason you wouldn't date someone?
# ::tokens ["What", "'s", "a", "shallow", "reason", "you", "would", "n't", "date", "someone", "?"]
# ::lemmas ["what", "be", "a", "shallow", "reason", "you", "would", "not", "date", "someone", "?"]
(c1-3 / cause-01
      :ARG0 (c1-2 / amr-unknown)
      :ARG1 (c1-0 / date-02
                  :ARG0 (c1-5 / you)
                  :ARG1 (c1-1 / someone)
                  :polarity -)
      :mod (c1-4 / shallow))

# ::snt ate a bag of M&M's, when she was done, she just let it go out of her hand and continued walking.
# ::tokens ["ate", "a", "bag", "of", "M&M", "'s", ",", "when", "she", "was", "done", ",", "she", "just", "let", "it", "go", "out", "of", "her", "hand", "and", "continued", "walking", "."]
# ::lemmas ["eat", "a", "bag", "of", "M&M", "'s", ",", "when", "she", "be", "do", ",", "she", "just", "let", "it", "go", "out", "of", "her", "hand", "and", "continued", "walking", "."]
(c2-11 / and
       :op1 (c2-7 / ate-01
                  :ARG0 (c2-9 / you)
                  :ARG1 (c2-15 / bag
                               :ARG0-of (c2-3 / contain-01
                                              :ARG1 (c2-1 / and
                                                          :op1 (c2-17 / product
                                                                      :name (c2-6 / name
                                                                                  :op1 "M&M"))
                                                          :op2 (c2-13 / product
                                                                      :name (c2-2 / name
                                                                                  :op1 "Zoom")))))
                  :mode imperative)
       :op2 (c2-18 / and
                   :op1 (c2-14 / let-01
                               :ARG0 (c2-8 / she
                                           :part (c2-12 / hand))
                               :ARG1 (c2-5 / go-out-17
                                           :ARG1 c2-15)
                               :mod (c2-16 / just))
                   :op2 (c2-0 / continue-01
                              :ARG0 c2-8
                              :ARG1 (c2-4 / walk-01
                                          :ARG0 c2-8))
                   :time (c2-10 / be-done-08
                                :ARG0 c2-8)))
