# ::snt BTCC CEO: "Let's get everyone to vote!"
# ::tokens ["BTCC", "CEO", ":", "\"", "Let", "'s", "get", "everyone", "to", "vote", "!", "\""]
# ::lemmas ["BTCC", "CEO", ":", "\"", "let", "us", "get", "everyone", "to", "vote", "!", "\""]
(c1-0 / say-01
      :ARG0 (c1-9 / person
                  :ARG0-of (c1-4 / have-org-role-91
                                 :ARG1 (c1-2 / company
                                             :name (c1-10 / name
                                                          :op1 "BTCC"))
                                 :ARG2 (c1-7 / officer
                                             :mod (c1-1 / chief)
                                             :mod (c1-11 / executive))))
      :ARG1 (c1-8 / get-04
                  :ARG0 (c1-3 / we)
                  :ARG1 (c1-6 / vote-01
                              :ARG0 (c1-5 / everyone))
                  :mode imperative))

# ::snt Vote should be function of bitcoin amount one holds I wonder if there is anon system for it
# ::tokens ["Vote", "should", "be", "function", "of", "bitcoin", "amount", "one", "holds", "I", "wonder", "if", "there", "is", "anon", "system", "for", "it"]
# ::lemmas ["vote", "should", "be", "function", "of", "bitcoin", "amount", "one", "hold", "i", "wonder", "if", "there", "be", "anon", "system", "for", "it"]
(c2-11 / multi-sentence
       :snt1 (c2-9 / recommend-01
                   :ARG1 (c2-2 / function-01
                               :ARG0 (c2-7 / vote-01)
                               :ARG1 (c2-1 / amount
                                           :mod (c2-3 / monetary-quantity
                                                      :name (c2-12 / name
                                                                   :op1 "bitcoin"))
                                           :ARG1-of (c2-5 / hold-01
                                                          :ARG0 (c2-8 / one)))))
       :snt2 (c2-4 / wonder-01
                   :ARG0 (c2-10 / i)
                   :ARG1 (c2-0 / system
                               :mod (c2-6 / on)
                               :purpose c2-7)))
