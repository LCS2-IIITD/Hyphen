# ::snt NASCAR looking at track-specific aero packages for 2016 - Aero changes possible *this* year too.
# ::tokens ["NASCAR", "looking", "at", "track", "-", "specific", "aero", "packages", "for", "2016", "-", "Aero", "changes", "possible", "*", "this", "*", "year", "too", "."]
# ::lemmas ["NASCAR", "look", "at", "track", "-", "specific", "aero", "package", "for", "2016", "-", "aero", "change", "possible", "*", "this", "*", "year", "too", "."]
(c1-10 / multi-sentence
       :snt1 (c1-8 / look-01
                   :ARG0 (c1-11 / NASCAR)
                   :ARG1 (c1-9 / package
                               :mod (c1-2 / aero)
                               :ARG1-of (c1-0 / specific-02
                                              :ARG2 (c1-7 / track)))
                   :time (c1-1 / date-entity
                               :year 2016))
       :snt2 (c1-6 / possible-01
                   :ARG1 (c1-3 / change-01
                               :ARG1 (c1-13 / Aero))
                   :time (c1-12 / year
                                :mod (c1-5 / this))
                   :mod (c1-4 / too)))

# ::snt I don't care what they do, as long as they suit the cars to Jeff's driving style lol.
# ::tokens ["I", "do", "n't", "care", "what", "they", "do", ",", "as", "long", "as", "they", "suit", "the", "cars", "to", "Jeff", "'s", "driving", "style", "lol", "."]
# ::lemmas ["i", "do", "not", "care", "what", "they", "do", ",", "as", "long", "as", "they", "suit", "the", "car", "to", "Jeff", "'s", "drive", "style", "lol", "."]
(c2-5 / care-01
      :ARG0 (c2-12 / i)
      :ARG1 (c2-8 / thing
                  :ARG1-of (c2-0 / do-02
                                 :ARG0 (c2-6 / they)))
      :condition (c2-3 / as-long-as
                       :op1 (c2-1 / suit-01
                                  :ARG0 c2-6
                                  :ARG1 (c2-2 / car)
                                  :ARG2 (c2-11 / style
                                               :mod (c2-7 / drive-01)
                                               :poss (c2-9 / person
                                                           :name (c2-13 / name
                                                                        :op1 "Jeff"))))
                       :ARG2-of (c2-10 / laugh-01
                                       :ARG0 c2-12
                                       :manner (c2-4 / loud)))
      :polarity -)
