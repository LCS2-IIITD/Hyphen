# ::snt What's the most ridiculous thing you've heard someone say "should be illegal"?
# ::tokens ["What", "'s", "the", "most", "ridiculous", "thing", "you", "'ve", "heard", "someone", "say", "\"", "should", "be", "illegal", "\"", "?"]
# ::lemmas ["what", "be", "the", "most", "ridiculous", "thing", "you", "'ve", "hear", "someone", "say", "\"", "should", "be", "illegal", "\"", "?"]
(c1-3 / have-degree-91
      :ARG1 (c1-5 / thing
                  :domain (c1-2 / amr-unknown)
                  :ARG1-of (c1-8 / hear-01
                                 :ARG0 (c1-10 / you)
                                 :ARG2 (c1-0 / say-01
                                             :ARG0 (c1-1 / someone)
                                             :ARG1 (c1-6 / recommend-01
                                                         :ARG1 (c1-7 / legal-02
                                                                     :polarity -)))))
      :ARG2 (c1-4 / ridiculous-02
                  :ARG1 c1-5)
      :ARG3 (c1-9 / most))

# ::snt A great uncle told me that my Nintendo ds should be illegal, and that "kids these days spend way too much time playing that garbage"
# ::tokens ["A", "great", "uncle", "told", "me", "that", "my", "Nintendo", "ds", "should", "be", "illegal", ",", "and", "that", "\"", "kids", "these", "days", "spend", "way", "too", "much", "time", "playing", "that", "garbage", "\""]
# ::lemmas ["a", "great", "uncle", "tell", "i", "that", "my", "Nintendo", "ds", "should", "be", "illegal", ",", "and", "that", "\"", "kid", "these", "days", "spend", "way", "too", "much", "time", "play", "that", "garbage", "\""]
(c2-5 / tell-01
      :ARG0 (c2-21 / person
                   :ARG0-of (c2-17 / have-rel-role-91
                                   :ARG1 (c2-2 / i)
                                   :ARG2 (c2-18 / uncle
                                                :mod (c2-7 / great))))
      :ARG1 (c2-15 / and
                   :op1 (c2-6 / recommend-01
                              :ARG1 (c2-20 / legal-02
                                           :ARG1 (c2-19 / product
                                                        :name (c2-9 / name
                                                                    :op1 "DS")
                                                        :mod c2-19
                                                        :name c2-9
                                                        :op1 "Netherlands")
                                           :polarity -)
                              :poss c2-2))
      :op2 (c2-11 / spend-02
                  :ARG0 (c2-22 / kid
                               :time (c2-0 / day
                                           :mod (c2-4 / this)))
                  :ARG1 (c2-10 / time
                               :ARG1-of (c2-1 / have-quant-91
                                              :ARG2 (c2-8 / much)
                                              :ARG3 (c2-13 / too
                                                           :quant (c2-3 / way))))
                  :ARG2 (c2-12 / play-01
                               :ARG0 c2-22
                               :ARG1 (c2-14 / garbage
                                            :mod (c2-16 / that))))
      :ARG2 c2-2)
