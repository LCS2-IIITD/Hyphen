# ::snt If you have to give someone your Social Security number, subtract 1 from each number, email it, and verbally tell them to add 1 to each number.
# ::tokens ["If", "you", "have", "to", "give", "someone", "your", "Social", "Security", "number", ",", "subtract", "1", "from", "each", "number", ",", "email", "it", ",", "and", "verbally", "tell", "them", "to", "add", "1", "to", "each", "number", "."]
# ::lemmas ["if", "you", "have", "to", "give", "someone", "your", "Social", "Security", "number", ",", "subtract", "1", "from", "each", "number", ",", "email", "it", ",", "and", "verbally", "tell", "they", "to", "add", "1", "to", "each", "number", "."]
(c1-4 / have-condition-91
      :ARG2 (c1-7 / obligate-01
                  :ARG1 (c1-15 / you)
                  :ARG2 (c1-2 / and
                              :op1 (c1-12 / give-01
                                          :ARG0 c1-15
                                          :ARG1 (c1-14 / number
                                                       :mod (c1-13 / program
                                                                   :name (c1-10 / name
                                                                                :op1 "Social"
                                                                                :op2 "Security"))
                                                       :poss c1-15)
                                          :ARG2 (c1-0 / someone))
                              :op2 (c1-16 / add-02
                                          :ARG0 c1-15
                                          :ARG1 (c1-8 / numerical-quantity
                                                      :quant 1)
                                          :ARG2 (c1-3 / number
                                                      :mod (c1-17 / each)))
                              :op3 (c1-5 / email-01
                                         :ARG0 c1-15
                                         :ARG1 c1-14)
                              :op4 (c1-9 / tell-01
                                         :ARG0 c1-15
                                         :ARG1 (c1-1 / add-02
                                                     :ARG0 c1-0
                                                     :ARG1 (c1-11 / numerical-quantity
                                                                  :quant 1)
                                                     :ARG2 c1-3
                                                     :manner (c1-6 / verbal))
                                         :ARG2 c1-0))))

# ::snt and hope you don't have any zeroes in it.
# ::tokens ["and", "hope", "you", "do", "n't", "have", "any", "zeroes", "in", "it", "."]
# ::lemmas ["and", "hope", "you", "do", "not", "have", "any", "zero", "in", "it", "."]
(c2-0 / and
      :op2 (c2-1 / hope-01
                 :ARG0 (c2-5 / i)
                 :ARG1 (c2-4 / have-03
                             :ARG0 (c2-6 / you)
                             :ARG1 (c2-3 / zero
                                         :location (c2-2 / it))
                             :polarity -)))

# ::snt 9+1=0
# ::tokens ["9", "+", "1=0"]
# ::lemmas ["9", "+", "1=0"]
(c3-1 / equal-01
      :ARG1 (c3-0 / sum-of
                  :op1 9
                  :op2 1)
      :ARG2 0)
