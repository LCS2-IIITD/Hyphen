# ::snt Anthony Weiner wants to require NYC cops to wear cameras: "Video would ensure citizens have recourse when they are mistreated, provide an invaluable training tool, and protect cops from false accusations."
# ::tokens ["Anthony", "Weiner", "wants", "to", "require", "NYC", "cops", "to", "wear", "cameras", ":", "\"", "Video", "would", "ensure", "citizens", "have", "recourse", "when", "they", "are", "mistreated", ",", "provide", "an", "invaluable", "training", "tool", ",", "and", "protect", "cops", "from", "false", "accusations", ".", "\""]
# ::lemmas ["Anthony", "Weiner", "want", "to", "require", "NYC", "cop", "to", "wear", "camera", ":", "\"", "video", "would", "ensure", "citizen", "have", "recourse", "when", "they", "be", "mistreat", ",", "provide", "an", "invaluable", "training", "tool", ",", "and", "protect", "cop", "from", "false", "accusation", ".", "\""]
(c1-10 / multi-sentence
       :snt1 (c1-3 / want-01
                   :ARG0 (c1-24 / person
                                :name (c1-11 / name
                                             :op1 "Anthony"
                                             :op2 "Weiner"))
                   :ARG1 (c1-9 / require-01
                               :ARG0 c1-24
                               :ARG1 (c1-12 / wear-01
                                            :ARG0 (c1-2 / cop
                                                        :location (c1-0 / city
                                                                        :name (c1-1 / name
                                                                                    :op1 "NYC")))
                                            :ARG1 (c1-5 / camera))))
       :snt2 (c1-19 / and
                    :op1 (c1-13 / ensure-01
                                :ARG0 (c1-7 / video)
                                :ARG1 (c1-6 / recourse
                                            :condition (c1-21 / mistreat-01
                                                              :ARG1 (c1-18 / citizen))))
                    :op2 (c1-23 / provide-01
                                :ARG0 c1-7
                                :ARG1 (c1-8 / tool
                                            :purpose (c1-4 / train-01)
                                            :ARG1-of (c1-20 / value-01
                                                            :ARG1-of (c1-17 / possible-01
                                                                            :polarity -))))
                    :op3 (c1-15 / protect-01
                                :ARG0 c1-7
                                :ARG1 (c1-16 / cop)
                                :ARG2 (c1-14 / accuse-01
                                             :mod (c1-22 / false)))))

# ::snt As long as they can't be turned off and on by the officer.
# ::tokens ["As", "long", "as", "they", "ca", "n't", "be", "turned", "off", "and", "on", "by", "the", "officer", "."]
# ::lemmas ["as", "long", "as", "they", "can", "not", "be", "turn", "off", "and", "on", "by", "the", "officer", "."]
(c2-2 / have-condition-91
      :ARG2 (c2-0 / as-long-as
                  :op1 (c2-6 / possible-01
                             :ARG1 (c2-5 / turn-off-07
                                         :ARG0 (c2-4 / officer)
                                         :ARG1 (c2-1 / they)
                                         :mod (c2-3 / off-and-on))
                             :polarity -)))
