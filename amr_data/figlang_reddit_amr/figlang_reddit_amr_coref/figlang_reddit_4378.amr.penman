# ::snt Slips & Slurs will make a VIP of Divided if he makes it on Best of 2015
# ::tokens ["Slips", "&", "Slurs", "will", "make", "a", "VIP", "of", "Divided", "if", "he", "makes", "it", "on", "Best", "of", "2015"]
# ::lemmas ["Slips", "&", "Slurs", "will", "make", "a", "vip", "of", "divided", "if", "he", "make", "it", "on", "good", "of", "2015"]
(c1-9 / make-06
      :ARG0 (c1-0 / company
                  :name (c1-10 / name
                               :op1 "Slips"
                               :op2 "&"
                               :op3 "Slurs"))
      :ARG1 (c1-8 / person
                  :ARG1-of (c1-3 / VIP-01
                                 :ARG2 (c1-7 / game
                                             :name (c1-6 / name
                                                         :op1 "Divided"))))
      :condition (c1-1 / make-18
                       :ARG0 (c1-2 / he)
                       :ARG1 (c1-5 / thing
                                   :name (c1-4 / name
                                               :op1 "Best"
                                               :op2 "of"
                                               :op3 " 2015"))))

# ::snt inb4 tons of more artists consistently say the same thing about one of their tracks
# ::tokens ["inb4", "tons", "of", "more", "artists", "consistently", "say", "the", "same", "thing", "about", "one", "of", "their", "tracks"]
# ::lemmas ["inb4", "ton", "of", "more", "artist", "consistently", "say", "the", "same", "thing", "about", "one", "of", "their", "track"]
(c2-0 / say-01
      :ARG0 (c2-1 / artist
                  :quant (c2-9 / more-than
                               :op1 (c2-2 / mass-quantity
                                          :unit (c2-6 / ton)
                                          :quant 4)))
      :ARG1 (c2-4 / thing
                  :ARG1-of (c2-7 / same-01))
      :ARG3 (c2-10 / track
                   :ARG1-of (c2-8 / include-91
                                  :ARG2 (c2-5 / track
                                              :poss c2-1))
                   :quant 1)
      :manner (c2-3 / consistent-02))

# ::snt Rootkit Concrete Jungle VIP
# ::tokens ["Rootkit", "Concrete", "Jungle", "VIP"]
# ::lemmas ["Rootkit", "Concrete", "jungle", "vip"]
(c3-0 / organization
      :name (c3-1 / name
                  :op1 "Rootkit"
                  :op2 "Concrete"
                  :op3 "Jungle"
                  :op4 "V VIP"))
