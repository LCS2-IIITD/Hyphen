# ::snt If I'm brushing my teeth next to someone I always brush a bit longer than when I'm by myself.
# ::tokens ["If", "I", "'m", "brushing", "my", "teeth", "next", "to", "someone", "I", "always", "brush", "a", "bit", "longer", "than", "when", "I", "'m", "by", "myself", "."]
# ::lemmas ["if", "i", "be", "brush", "my", "tooth", "next", "to", "someone", "i", "always", "brush", "a", "bit", "long", "than", "when", "i", "be", "by", "myself", "."]
(c1-8 / brush-01
      :ARG0 (c1-9 / i
                  :part (c1-6 / tooth
                              :ARG1-of c1-8))
      :time (c1-2 / always)
      :ARG1-of (c1-7 / long-03
                     :ARG2-of (c1-4 / have-degree-91
                                    :ARG1 c1-8
                                    :ARG3 (c1-10 / more
                                                 :quant (c1-1 / bit))
                                    :ARG4 (c1-3 / brush-01
                                                :ARG0 c1-9
                                                :time (c1-12 / by-oneself))))
      :condition (c1-5 / brush-01
                       :ARG0 c1-9
                       :ARG1 c1-6
                       :location (c1-11 / next-to
                                        :op1 (c1-0 / someone))))

# ::snt And I keep my mouth closed when I brush instead of just keeping it hung open.
# ::tokens ["And", "I", "keep", "my", "mouth", "closed", "when", "I", "brush", "instead", "of", "just", "keeping", "it", "hung", "open", "."]
# ::lemmas ["and", "i", "keep", "my", "mouth", "close", "when", "i", "brush", "instead", "of", "just", "keep", "it", "hang", "open", "."]
(c2-1 / and
      :op2 (c2-10 / keep-01
                  :ARG0 (c2-8 / i
                              :part (c2-9 / mouth))
                  :ARG1 (c2-2 / close-01
                              :ARG0 c2-8
                              :ARG1 c2-9)
                  :time (c2-6 / brush-01
                              :ARG0 c2-8)
                  :ARG1-of (c2-3 / instead-of-91
                                 :ARG2 (c2-0 / keep-01
                                             :ARG0 c2-8
                                             :ARG1 (c2-4 / hang-01
                                                         :ARG1 c2-9
                                                         :ARG2 (c2-5 / open-01))
                                             :mod (c2-7 / just)))))
