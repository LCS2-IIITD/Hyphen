# ::snt CT Scanner without a cover moving at full speed
# ::tokens ["CT", "Scanner", "without", "a", "cover", "moving", "at", "full", "speed"]
# ::lemmas ["CT", "Scanner", "without", "a", "cover", "move", "at", "full", "speed"]
(c1-4 / have-03
      :ARG0 (c1-6 / person
                  :ARG0-of (c1-0 / scan-01
                                 :ARG2 (c1-3 / CT)))
      :ARG1 (c1-1 / cover
                  :ARG1-of (c1-7 / move-01
                                 :ARG1-of (c1-5 / speed-01
                                                :ARG1-of (c1-2 / full-09))))
      :polarity -)

# ::snt Hopefully we can reduce it so all that has to spin is a minor sensor, and not everything, in the future.
# ::tokens ["Hopefully", "we", "can", "reduce", "it", "so", "all", "that", "has", "to", "spin", "is", "a", "minor", "sensor", ",", "and", "not", "everything", ",", "in", "the", "future", "."]
# ::lemmas ["hopefully", "we", "can", "reduce", "it", "so", "all", "that", "have", "to", "spin", "be", "a", "minor", "sensor", ",", "and", "not", "everything", ",", "in", "the", "future", "."]
(c2-5 / hope-01
      :ARG1 (c2-10 / possible-01
                   :ARG1 (c2-8 / reduce-01
                               :ARG0 (c2-4 / we)
                               :ARG1 (c2-3 / it)
                               :purpose (c2-1 / and
                                              :op1 (c2-0 / sensor
                                                         :ARG1-of (c2-11 / minor-01)
                                                         :domain (c2-7 / thing
                                                                       :mod (c2-12 / all)
                                                                       :ARG1-of (c2-9 / spin-03
                                                                                      :ARG1-of (c2-6 / obligate-01))))
                                              :op2 (c2-13 / everything
                                                          :domain c2-7
                                                          :polarity -)
                                              :time (c2-2 / future)))))
