# ::snt HOLY SHIT I JUST DID THE SPEED CHALLANGE WITH 2 SECONDS LEFT MY ADRENALLINE IS THROUGH THE ROOF I HOPE THIS SUB ALLOWS ALL CAPS POSTS
# ::tokens ["HOLY", "SHIT", "I", "JUST", "DID", "THE", "SPEED", "CHALLANGE", "WITH", "2", "SECONDS", "LEFT", "MY", "ADRENALLINE", "IS", "THROUGH", "THE", "ROOF", "I", "HOPE", "THIS", "SUB", "ALLOWS", "ALL", "CAPS", "POSTS"]
# ::lemmas ["HOLY", "SHIT", "i", "just", "do", "the", "speed", "CHALLANGE", "with", "2", "second", "leave", "my", "ADRENALLINE", "be", "through", "the", "roof", "i", "hope", "this", "SUB", "allows", "all", "caps", "posts"]
(c1-7 / multi-sentence
      :snt1 (c1-9 / shit-01
                  :ARG0 (c1-1 / i)
                  :mod (c1-15 / hey
                              :mode expressive))
      :snt2 (c1-3 / change-01
                  :ARG0 (c1-10 / i)
                  :ARG1 (c1-13 / speed)
                  :manner (c1-17 / lay-01
                                 :ARG1 (c1-19 / product
                                              :name (c1-8 / name
                                                          :op1 "Assurance"
                                                          :op2 "of"
                                                          :op3 "My")
                                              :quant 2)
                                 :ARG2 (c1-5 / off))
                  :mod (c1-18 / just))
      :snt3 (c1-0 / hope-01
                  :ARG0 (c1-11 / i)
                  :ARG1 (c1-12 / show-01
                               :ARG0 (c1-2 / SUB
                                           :mod (c1-6 / this))
                               :ARG1 (c1-4 / thing
                                           :ARG1-of (c1-16 / post-01)
                                           :mod (c1-14 / all)))))

# ::snt Should we tell him?
# ::tokens ["Should", "we", "tell", "him", "?"]
# ::lemmas ["should", "we", "tell", "he", "?"]
(c2-4 / recommend-01
      :polarity (c2-0 / amr-unknown)
      :ARG1 (c2-3 / tell-01
                  :ARG0 (c2-1 / we)
                  :ARG2 (c2-2 / he)))

# ::snt About that one achievement in under x min to defeat that one boss?
# ::tokens ["About", "that", "one", "achievement", "in", "under", "x", "min", "to", "defeat", "that", "one", "boss", "?"]
# ::lemmas ["about", "that", "one", "achievement", "in", "under", "x", "min", "to", "defeat", "that", "one", "boss", "?"]
(c3-1 / amr-unknown
      :topic (c3-8 / achieve-01
                   :ARG1 (c3-0 / defeat-01
                               :ARG1 (c3-5 / boss
                                           :mod (c3-4 / that)
                                           :quant 1))
                   :duration (c3-3 / under
                                   :op1 (c3-2 / temporal-quantity
                                              :unit (c3-6 / minute)
                                              :quant 1))
                   :mod (c3-7 / that)
                   :quant 1))

# ::snt And then Eds ghost flies in like "WHO LIKED THE OLD ACHIEVEMENTS ANYWAYS BRB MAKING BEAT DELIRIUM IN 1 SECOND"
# ::tokens ["And", "then", "Eds", "ghost", "flies", "in", "like", "\"", "WHO", "LIKED", "THE", "OLD", "ACHIEVEMENTS", "ANYWAYS", "BRB", "MAKING", "BEAT", "DELIRIUM", "IN", "1", "SECOND", "\""]
# ::lemmas ["and", "then", "eds", "ghost", "fly", "in", "like", "\"", "who", "like", "the", "old", "ACHIEVEMENTS", "anyway", "BRB", "make", "beat", "DELIRIUM", "in", "1", "SECOND", "\""]
(c4-0 / and
      :op2 (c4-1 / fly-01
                 :ARG1 (c4-10 / ghost
                              :poss (c4-11 / person
                                           :name (c4-12 / name
                                                        :op1 "Eds")))
                 :time (c4-7 / then)
                 :manner (c4-8 / resemble-01
                               :ARG2 (c4-6 / person
                                           :ARG0-of (c4-9 / laugh-01
                                                          :ARG2 (c4-13 / engineer-01
                                                                       :ARG0 (c4-3 / person
                                                                                   :name c4-12
                                                                                   :op1 "B"))
                                                          :ARG1 (c4-2 / product
                                                                      :name c4-12
                                                                      :op1 "Beat"
                                                                      :op2 "Delirium")
                                                          :mod (c4-5 / old))
                                           :time (c4-4 / forever))
                               :ARG1 c4-1)))
