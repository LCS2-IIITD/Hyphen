# ::snt Kenny Omega was in a 6 Star match and STILL no Omega flair It's time, mods.
# ::tokens ["Kenny", "Omega", "was", "in", "a", "6", "Star", "match", "and", "STILL", "no", "Omega", "flair", "It", "'s", "time", ",", "mods", "."]
# ::lemmas ["Kenny", "Omega", "be", "in", "a", "6", "Star", "match", "and", "still", "no", "Omega", "flair", "it", "be", "time", ",", "mod", "."]
(c1-10 / multi-sentence
       :snt1 (c1-1 / and
                   :op1 (c1-3 / match-03
                              :ARG0 (c1-9 / person
                                          :name (c1-11 / name
                                                       :op1 "Kenny"
                                                       :op2 "Omega"))
                              :mod (c1-5 / product
                                         :name (c1-7 / name
                                                     :op1 "6"
                                                     :op2 "Star")))
                   :op2 (c1-2 / flair
                              :mod c1-5
                              :mod (c1-0 / still)
                              :polarity -))
       :snt2 (c1-8 / be-temporally-at-91
                   :ARG1 (c1-4 / mod)
                   :ARG2 (c1-6 / time)))

# ::snt the more people complain the longer it gets delayed tbqh like half life 3
# ::tokens ["the", "more", "people", "complain", "the", "longer", "it", "gets", "delayed", "tbqh", "like", "half", "life", "3"]
# ::lemmas ["the", "more", "people", "complain", "the", "long", "it", "get", "delay", "tbqh", "like", "half", "life", "3"]
(c2-3 / correlate-91
      :ARG1 (c2-14 / more
                   :ARG3-of (c2-6 / have-quant-91
                                  :ARG1 (c2-0 / complain-01
                                              :ARG0 (c2-13 / person)
                                              :ARG1 (c2-1 / delay-01
                                                          :ARG1 (c2-4 / it)
                                                          :ARG1-of (c2-9 / resemble-01
                                                                         :ARG2 (c2-10 / life
                                                                                      :mod (c2-12 / half)
                                                                                      :ord (c2-8 / ordinal-entity
                                                                                                 :value 3)))))))
      :ARG2 (c2-5 / more
                  :ARG3-of (c2-2 / have-degree-91
                                 :ARG1 c2-1
                                 :ARG2 (c2-11 / long-03
                                              :ARG1 c2-1)
                                 :ARG3 (c2-7 / more))))
