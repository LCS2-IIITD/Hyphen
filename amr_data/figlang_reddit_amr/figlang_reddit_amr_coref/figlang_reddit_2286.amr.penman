# ::snt I can't shake off the feeling that it still needs something.
# ::tokens ["I", "ca", "n't", "shake", "off", "the", "feeling", "that", "it", "still", "needs", "something", "."]
# ::lemmas ["i", "can", "not", "shake", "off", "the", "feeling", "that", "it", "still", "need", "something", "."]
(c1-6 / possible-01
      :ARG1 (c1-0 / shake-off-02
                  :ARG0 (c1-2 / i)
                  :ARG1 (c1-1 / feel-01
                              :ARG0 c1-2
                              :ARG1 (c1-7 / need-01
                                          :ARG0 (c1-3 / it)
                                          :ARG1 (c1-5 / something)
                                          :mod (c1-4 / still))))
      :polarity -)

# ::snt A winch, and some sort of front recovery points.
# ::tokens ["A", "winch", ",", "and", "some", "sort", "of", "front", "recovery", "points", "."]
# ::lemmas ["a", "winch", ",", "and", "some", "sort", "of", "front", "recovery", "point", "."]
(c2-1 / and
      :op1 (c2-3 / winch)
      :op2 (c2-6 / point
                 :mod (c2-4 / recover-01)
                 :mod (c2-0 / sort
                            :mod (c2-5 / some))
                 :mod (c2-2 / front)))

# ::snt Yeah what sort of aftermarket front bumper both deletes the stock recovery points and doesn't add any but has a spot for a light bar?
# ::tokens ["Yeah", "what", "sort", "of", "aftermarket", "front", "bumper", "both", "deletes", "the", "stock", "recovery", "points", "and", "does", "n't", "add", "any", "but", "has", "a", "spot", "for", "a", "light", "bar", "?"]
# ::lemmas ["yeah", "what", "sort", "of", "aftermarket", "front", "bumper", "both", "delete", "the", "stock", "recovery", "point", "and", "do", "not", "add", "any", "but", "have", "a", "spot", "for", "a", "light", "bar", "?"]
(c3-3 / and
      :op1 (c3-0 / delete-01
                 :ARG0 (c3-12 / bumper
                              :mod (c3-5 / front)
                              :mod (c3-17 / aftermarket)
                              :mod (c3-1 / amr-unknown)
                              :mod (c3-2 / sort
                                         :mod (c3-9 / amr-unknown)))
                 :ARG1 (c3-14 / point
                              :mod (c3-10 / recover-01
                                          :ARG1 (c3-13 / stock))))
      :op2 (c3-6 / add-02
                 :ARG0 c3-12
                 :ARG1 (c3-15 / any)
                 :concession (c3-7 / have-03
                                   :ARG0 c3-12
                                   :ARG1 (c3-8 / spot
                                               :purpose (c3-4 / bar
                                                              :ARG1-of (c3-11 / light-06))))
                 :polarity -)
      :mod (c3-16 / yeah))
