# ::snt Creating my student loan account online
# ::tokens ["Creating", "my", "student", "loan", "account", "online"]
# ::lemmas ["create", "my", "student", "loan", "account", "online"]
(c1-3 / create-01
      :ARG0 (c1-2 / i)
      :ARG1 (c1-1 / account
                  :mod (c1-5 / loan-01
                             :ARG2 c1-2
                             :ARG3 (c1-6 / person
                                         :ARG0-of (c1-0 / study-01))))
      :medium (c1-4 / online))

# ::snt Well, the rule was always: "In order to get a loan, you first have to prove you don't need one"
# ::tokens ["Well", ",", "the", "rule", "was", "always", ":", "\"", "In", "order", "to", "get", "a", "loan", ",", "you", "first", "have", "to", "prove", "you", "do", "n't", "need", "one", "\""]
# ::lemmas ["well", ",", "the", "rule", "be", "always", ":", "\"", "in", "order", "to", "get", "a", "loan", ",", "you", "first", "have", "to", "prove", "you", "do", "not", "need", "one", "\""]
(c2-4 / rule-01
      :ARG1 (c2-3 / obligate-01
                  :ARG2 (c2-7 / prove-01
                              :ARG0 (c2-9 / you)
                              :ARG1 (c2-8 / need-01
                                          :ARG0 c2-9
                                          :ARG1 (c2-5 / loan-01)
                                          :polarity -)
                              :time (c2-1 / first))
                  :purpose (c2-6 / get-01
                                 :ARG0 c2-9
                                 :ARG1 c2-5))
      :time (c2-0 / always)
      :mod (c2-2 / well))

# ::snt Banks love giving money to people who don't need it.
# ::tokens ["Banks", "love", "giving", "money", "to", "people", "who", "do", "n't", "need", "it", "."]
# ::lemmas ["bank", "love", "give", "money", "to", "people", "who", "do", "not", "need", "it", "."]
(c3-1 / love-01
      :ARG0 (c3-2 / bank)
      :ARG1 (c3-0 / give-01
                  :ARG0 c3-2
                  :ARG1 (c3-4 / money)
                  :ARG2 (c3-3 / person
                              :ARG0-of (c3-5 / need-01
                                             :ARG1 c3-4
                                             :polarity -))))
