# ::snt 20 ways to break Europe
# ::tokens ["20", "ways", "to", "break", "Europe"]
# ::lemmas ["20", "way", "to", "break", "Europe"]
(c1-0 / way
      :manner-of (c1-2 / break-13
                       :ARG1 (c1-3 / continent
                                   :name (c1-1 / name
                                               :op1 "Europe")))
      :quant 20)

# ::snt Greece as "new Europe" ...I dont know how to repond
# ::tokens ["Greece", "as", "\"", "new", "Europe", "\"", "...", "I", "do", "nt", "know", "how", "to", "repond"]
# ::lemmas ["Greece", "as", "\"", "new", "Europe", "\"", "...", "i", "do", "not", "know", "how", "to", "repond"]
(c2-9 / multi-sentence
      :snt1 (c2-6 / refer-01
                  :ARG1 (c2-2 / country
                              :name (c2-10 / name
                                           :op1 "Greece"))
                  :ARG2 (c2-0 / continent
                              :name (c2-7 / name
                                          :op1 "Europe")
                              :ARG1-of (c2-4 / new-01)))
      :snt2 (c2-1 / know-01
                  :ARG0 (c2-8 / i)
                  :ARG1 (c2-5 / thing
                              :manner-of (c2-3 / repond-00
                                               :ARG0 c2-8))
                  :polarity -))

# ::snt It's not like Greece is the birth place of modern civilization or anything like that.
# ::tokens ["It", "'s", "not", "like", "Greece", "is", "the", "birth", "place", "of", "modern", "civilization", "or", "anything", "like", "that", "."]
# ::lemmas ["it", "be", "not", "like", "Greece", "be", "the", "birth", "place", "of", "modern", "civilization", "or", "anything", "like", "that", "."]
(c3-4 / resemble-01
      :ARG1 (c3-7 / it)
      :ARG2 (c3-3 / or
                  :op1 (c3-5 / place
                             :location-of (c3-6 / bear-02
                                                :ARG1 (c3-2 / civilization
                                                            :ARG1-of (c3-8 / modern-02)))
                             :domain (c3-0 / country
                                           :name (c3-9 / name
                                                       :op1 "Greece")))
                  :op2 (c3-1 / anything
                             :ARG1-of c3-4
                             :ARG2 c3-5))
      :polarity -)

# ::snt That's why Greece should be put in the "Oldest Europe" category.
# ::tokens ["That", "'s", "why", "Greece", "should", "be", "put", "in", "the", "\"", "Oldest", "Europe", "\"", "category", "."]
# ::lemmas ["that", "be", "why", "Greece", "should", "be", "put", "in", "the", "\"", "Oldest", "Europe", "\"", "category", "."]
(c4-1 / cause-01
      :ARG0 (c4-5 / that)
      :ARG1 (c4-6 / recommend-01
                  :ARG1 (c4-9 / put-01
                              :ARG1 (c4-0 / country
                                          :name (c4-11 / name
                                                       :op1 "Greece"))
                              :ARG2 (c4-3 / category
                                          :mod (c4-8 / continent
                                                     :name (c4-7 / name
                                                                 :op1 "Europe")
                                                     :ARG1-of (c4-2 / have-degree-91
                                                                    :ARG2 (c4-4 / old)
                                                                    :ARG3 (c4-10 / most)))))))
