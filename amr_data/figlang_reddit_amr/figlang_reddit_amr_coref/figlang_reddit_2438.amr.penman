# ::snt Australia's broadband policy is a flimsy, cynical House of Cards - the Register
# ::tokens ["Australia", "'s", "broadband", "policy", "is", "a", "flimsy", ",", "cynical", "House", "of", "Cards", "-", "the", "Register"]
# ::lemmas ["Australia", "'s", "broadband", "policy", "be", "a", "flimsy", ",", "cynical", "House", "of", "Cards", "-", "the", "Register"]
(c1-0 / say-01
      :ARG0 (c1-8 / newspaper
                  :name (c1-5 / name
                              :op1 "The"
                              :op2 "Register"))
      :ARG1 (c1-7 / policy-01
                  :ARG0 (c1-3 / country
                              :name (c1-4 / name
                                          :op1 "Australia"))
                  :ARG2 (c1-6 / broadband)
                  :mod (c1-2 / flimsy)
                  :mod (c1-1 / cynical)))

# ::snt It's been 5 years and he still can't name or hint at any future applications requiring speeds faster than streaming 4k.
# ::tokens ["It", "'s", "been", "5", "years", "and", "he", "still", "ca", "n't", "name", "or", "hint", "at", "any", "future", "applications", "requiring", "speeds", "faster", "than", "streaming", "4k", "."]
# ::lemmas ["it", "be", "be", "5", "years", "and", "he", "still", "can", "not", "name", "or", "hint", "at", "any", "future", "application", "require", "speed", "fast", "than", "stream", "4k", "."]
(c2-14 / and
       :op1 (c2-19 / pass-03
                   :ARG1 (c2-5 / temporal-quantity
                               :unit (c2-13 / year)
                               :quant 5))
       :op2 (c2-17 / possible-01
                   :ARG1 (c2-4 / or
                               :op1 (c2-8 / name-01
                                          :ARG0 (c2-16 / he)
                                          :ARG1 (c2-9 / application
                                                      :mod (c2-0 / any)
                                                      :time (c2-15 / future)
                                                      :ARG0-of (c2-6 / require-01
                                                                     :ARG1 (c2-10 / speed
                                                                                  :ARG1-of (c2-12 / fast-02
                                                                                                  :ARG2-of (c2-1 / have-degree-91
                                                                                                                 :ARG1 c2-10
                                                                                                                 :ARG3 (c2-7 / more)
                                                                                                                 :ARG4 (c2-18 / stream-01
                                                                                                                              :ARG1 (c2-3 / thing
                                                                                                                                          :quant 4000))))))))
                               :op2 (c2-2 / hint-01
                                          :ARG0 c2-16
                                          :ARG1 c2-6))
                   :mod (c2-11 / still)
                   :polarity -))
