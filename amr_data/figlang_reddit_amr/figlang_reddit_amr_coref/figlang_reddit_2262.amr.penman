# ::snt Facebook delivers gold like Dominoes - "Birthday head" proposition
# ::tokens ["Facebook", "delivers", "gold", "like", "Dominoes", "-", "\"", "Birthday", "head", "\"", "proposition"]
# ::lemmas ["Facebook", "deliver", "gold", "like", "Dominoes", "-", "\"", "birthday", "head", "\"", "proposition"]
(c1-0 / deliver-01
      :ARG0 (c1-8 / publication
                  :name (c1-9 / name
                              :op1 "Facebook"))
      :ARG1 (c1-7 / gold
                  :ARG1-of (c1-5 / resemble-01
                                 :ARG2 (c1-4 / product
                                             :name (c1-6 / name
                                                         :op1 "Dinoes"))))
      :ARG1-of (c1-1 / propose-01
                     :ARG0 c1-8
                     :ARG1 (c1-2 / head
                                 :mod (c1-3 / birthday))))

# ::snt i love the "ugh fine" at the end like somehow HE'S the one being inconvenienced by all this
# ::tokens ["i", "love", "the", "\"", "ugh", "fine", "\"", "at", "the", "end", "like", "somehow", "HE", "'S", "the", "one", "being", "inconvenienced", "by", "all", "this"]
# ::lemmas ["i", "love", "the", "\"", "ugh", "fine", "\"", "at", "the", "end", "like", "somehow", "he", "be", "the", "one", "be", "inconvenience", "you", "all", "this"]
(c2-9 / love-01
      :ARG0 (c2-10 / i)
      :ARG1 (c2-2 / fine-04
                  :mod (c2-6 / ugh
                             :mode expressive)
                  :time (c2-11 / end-01)
                  :ARG1-of (c2-8 / resemble-01
                                 :ARG2 (c2-4 / inconvenience
                                             :domain (c2-5 / he)
                                             :ARG1-of (c2-3 / cause-01
                                                            :ARG0 (c2-7 / this
                                                                        :mod (c2-1 / all)))
                                             :manner (c2-0 / somehow)))))

# ::snt I think he may have rubbed one out in the course of this conversation, and that little bit at the end is his rational brain coming back online.
# ::tokens ["I", "think", "he", "may", "have", "rubbed", "one", "out", "in", "the", "course", "of", "this", "conversation", ",", "and", "that", "little", "bit", "at", "the", "end", "is", "his", "rational", "brain", "coming", "back", "online", "."]
# ::lemmas ["i", "think", "he", "may", "have", "rub", "one", "out", "in", "the", "course", "of", "this", "conversation", ",", "and", "that", "little", "bit", "at", "the", "end", "be", "his", "rational", "brain", "come", "back", "online", "."]
(c3-13 / and
       :op1 (c3-7 / think-01
                  :ARG0 (c3-1 / i)
                  :ARG1 (c3-18 / possible-01
                               :ARG1 (c3-8 / rub-01
                                           :ARG0 (c3-14 / he
                                                        :part (c3-17 / brain
                                                                     :ARG1-of (c3-5 / rational-02)))
                                           :ARG1 (c3-6 / one)
                                           :ARG2 (c3-15 / out)
                                           :time (c3-3 / converse-01
                                                       :mod (c3-4 / this)))))
       :op2 (c3-0 / come-01
                  :ARG1 c3-17
                  :ARG4 (c3-2 / online)
                  :direction (c3-12 / back)
                  :time (c3-10 / end-01)
                  :mod (c3-11 / bit
                              :mod (c3-16 / little)
                              :mod (c3-9 / that))))

# ::snt That's exactly what I thought, but the rest of the conversation happens over two months.
# ::tokens ["That", "'s", "exactly", "what", "I", "thought", ",", "but", "the", "rest", "of", "the", "conversation", "happens", "over", "two", "months", "."]
# ::lemmas ["that", "be", "exactly", "what", "i", "think", ",", "but", "the", "rest", "of", "the", "conversation", "happen", "over", "two", "months", "."]
(c4-1 / contrast-01
      :ARG1 (c4-3 / think-01
                  :ARG0 (c4-5 / i)
                  :ARG1 (c4-2 / that
                              :mod (c4-8 / exact)))
      :ARG2 (c4-4 / rest
                  :part-of (c4-0 / converse-01)
                  :duration (c4-7 / temporal-quantity
                                  :unit (c4-6 / month)
                                  :quant 2)))

# ::snt What are you, jealous?
# ::tokens ["What", "are", "you", ",", "jealous", "?"]
# ::lemmas ["what", "be", "you", ",", "jealous", "?"]
(c5-0 / jealous-02
      :ARG0 (c5-2 / you)
      :ARG1 (c5-1 / amr-unknown))

# ::snt ...What?
# ::tokens ["...", "What", "?"]
# ::lemmas ["...", "what", "?"]
(c6-0 / amr-unknown)
