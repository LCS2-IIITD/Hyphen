# ::snt (psa) on premium races only first place gets any money.
# ::tokens ["(", "psa", ")", "on", "premium", "races", "only", "first", "place", "gets", "any", "money", "."]
# ::lemmas ["(", "psa", ")", "on", "premium", "race", "only", "first", "place", "get", "any", "money", "."]
(c1-7 / post-scriptum
      :domain (c1-6 / get-01
                    :ARG0 (c1-5 / race-02
                                :mod (c1-4 / premium)
                                :ARG3 (c1-1 / place
                                            :ord (c1-3 / ordinal-entity
                                                       :value 1)
                                            :mod (c1-2 / only)))
                    :ARG1 (c1-8 / money
                                :mod (c1-0 / any))))

# ::snt 8 People @ $20,000 = $160,000, 1 winner @$100,000 R* are taking $60,000 out of the game with every race, fueling shark card sales no doubt.
# ::tokens ["8", "People", "@", "$", "20,000", "=", "$", "160,000", ",", "1", "winner", "@$100,000", "R", "*", "are", "taking", "$", "60,000", "out", "of", "the", "game", "with", "every", "race", ",", "fueling", "shark", "card", "sales", "no", "doubt", "."]
# ::lemmas ["8", "people", "@", "$", "20,000", "=", "$", "160,000", ",", "1", "winner", "@$100,000", "R", "*", "be", "take", "$", "60,000", "out", "of", "the", "game", "with", "every", "race", ",", "fuel", "shark", "card", "sale", "no", "doubt", "."]
(c2-18 / and
       :op1 (c2-12 / equal-01
                   :ARG1 (c2-24 / person
                                :ARG1-of (c2-6 / rate-entity-91
                                               :ARG2 (c2-10 / monetary-quantity
                                                            :unit (c2-0 / dollar)
                                                            :quant 200000))
                                :quant 8)
                   :ARG2 (c2-20 / monetary-quantity
                                :unit (c2-17 / dollar)
                                :quant 160000))
       :op2 (c2-5 / take-out-11
                  :ARG0 (c2-22 / person
                               :ARG0-of (c2-2 / win-01)
                               :ARG1-of (c2-3 / rate-entity-91
                                              :ARG2 (c2-16 / monetary-quantity
                                                           :unit (c2-15 / dollar)
                                                           :quant 100000))
                               :quant 1)
                  :ARG1 (c2-8 / monetary-quantity
                              :unit (c2-4 / dollar)
                              :quant 60000)
                  :ARG2 (c2-7 / game)
                  :time (c2-9 / race-02
                              :mod (c2-21 / every))
                  :ARG0-of (c2-19 / fuel-01
                                  :ARG1 (c2-13 / sell-01
                                               :ARG1 (c2-1 / card
                                                           :mod (c2-23 / ship
                                                                       :name (c2-11 / name
                                                                                    :op1 "Sharks"))))
                                  :ARG1-of (c2-14 / doubt-01
                                                  :polarity -))))
