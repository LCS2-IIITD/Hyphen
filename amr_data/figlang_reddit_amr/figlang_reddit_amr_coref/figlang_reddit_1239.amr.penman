# ::snt The boy who dipped his cigarette in Mercury and smoked it to 'show off'.
# ::tokens ["The", "boy", "who", "dipped", "his", "cigarette", "in", "Mercury", "and", "smoked", "it", "to", "'", "show", "off", "'", "."]
# ::lemmas ["the", "boy", "who", "dip", "his", "cigarette", "in", "Mercury", "and", "smoke", "it", "to", "'", "show", "off", "'", "."]
(c1-3 / boy
      :ARG0-of (c1-0 / dip-02
                     :ARG1 (c1-2 / cigarette
                                 :poss c1-3)
                     :ARG2 (c1-5 / planet
                                 :name (c1-6 / name
                                             :op1 "Mercury")))
      :ARG0-of (c1-1 / smoke-02
                     :ARG1 c1-2
                     :purpose (c1-4 / show-off-03
                                    :ARG0 c1-3)))

# ::snt "Hey guys I found that barrel full of this weird liquid, let's bask in it and then try to smoke it"
# ::tokens ["\"", "Hey", "guys", "I", "found", "that", "barrel", "full", "of", "this", "weird", "liquid", ",", "let", "'s", "bask", "in", "it", "and", "then", "try", "to", "smoke", "it", "\""]
# ::lemmas ["\"", "hey", "guy", "i", "find", "that", "barrel", "full", "of", "this", "weird", "liquid", ",", "let", "us", "bask", "in", "it", "and", "then", "try", "to", "smoke", "it", "\""]
(c2-0 / say-01
      :ARG0 (c2-16 / i)
      :ARG1 (c2-4 / find-01
                  :ARG0 c2-16
                  :ARG1 (c2-14 / barrel
                               :mod (c2-11 / that)
                               :ARG1-of (c2-10 / fill-01
                                               :ARG2 (c2-12 / liquid
                                                            :mod (c2-6 / weird)
                                                            :mod (c2-7 / this))))
                  :ARG0-of (c2-5 / cause-01
                                 :ARG1 (c2-13 / let-01
                                              :ARG0 (c2-15 / guy)
                                              :ARG1 (c2-3 / and
                                                          :op1 (c2-1 / bask-01
                                                                     :ARG0 c2-15
                                                                     :ARG1 c2-14)
                                                          :op2 (c2-17 / try-01
                                                                      :ARG0 c2-15
                                                                      :ARG1 (c2-2 / smoke-02
                                                                                  :ARG0 c2-15
                                                                                  :ARG1 c2-14)
                                                                      :time (c2-9 / then))))))
      :ARG2 c2-15
      :mod (c2-8 / hey
                 :mode expressive))

# ::snt I don't understand how so many people were exposed to this without one person knowing how dangerous mercury is and reporting it.
# ::tokens ["I", "do", "n't", "understand", "how", "so", "many", "people", "were", "exposed", "to", "this", "without", "one", "person", "knowing", "how", "dangerous", "mercury", "is", "and", "reporting", "it", "."]
# ::lemmas ["i", "do", "not", "understand", "how", "so", "many", "people", "be", "expose", "to", "this", "without", "one", "person", "know", "how", "dangerous", "mercury", "be", "and", "report", "it", "."]
(c3-5 / understand-01
      :ARG0 (c3-10 / i)
      :ARG1 (c3-13 / expose-01
                   :ARG1 (c3-9 / person
                               :ARG1-of (c3-3 / have-quant-91
                                              :ARG2 (c3-11 / many)
                                              :ARG3 (c3-0 / so)))
                   :ARG2 (c3-7 / this)
                   :manner (c3-1 / and
                                 :op1 (c3-12 / know-01
                                             :ARG0 (c3-6 / person)
                                             :ARG1 (c3-2 / mercury
                                                         :ARG1-of (c3-4 / endanger-01))
                                             :polarity -)
                                 :op2 (c3-8 / report-01
                                            :ARG0 c3-6
                                            :ARG1 c3-2
                                            :polarity -)))
      :polarity -)
