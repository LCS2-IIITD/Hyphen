# ::snt If elected Prime Minister, Kevin O'Leary vows to visit Canada at least 4 times per year
# ::tokens ["If", "elected", "Prime", "Minister", ",", "Kevin", "O'Leary", "vows", "to", "visit", "Canada", "at", "least", "4", "times", "per", "year"]
# ::lemmas ["if", "elect", "Prime", "Minister", ",", "Kevin", "O'Leary", "vow", "to", "visit", "Canada", "at", "least", "4", "time", "per", "year"]
(c1-3 / vow-01
      :ARG0 (c1-8 / person
                  :name (c1-10 / name
                               :op1 "Kevin"
                               :op2 "O'Leary"))
      :ARG1 (c1-1 / visit-01
                  :ARG0 c1-8
                  :ARG1 (c1-2 / country
                              :name (c1-6 / name
                                          :op1 "Canada"))
                  :frequency (c1-7 / rate-entity-91
                                   :ARG1 (c1-0 / at-least
                                               :op1 4)
                                   :ARG2 (c1-5 / temporal-quantity
                                               :unit (c1-11 / year)
                                               :quant 1)))
      :condition (c1-12 / elect-01
                        :ARG1 c1-8
                        :ARG2 (c1-9 / minister
                                    :mod (c1-4 / prime))))

# ::snt People need to stop giving this guy any spotlight, even in a comedic sense
# ::tokens ["People", "need", "to", "stop", "giving", "this", "guy", "any", "spotlight", ",", "even", "in", "a", "comedic", "sense"]
# ::lemmas ["people", "need", "to", "stop", "give", "this", "guy", "any", "spotlight", ",", "even", "in", "a", "comedic", "sense"]
(c2-8 / need-01
      :ARG0 (c2-7 / person)
      :ARG1 (c2-0 / stop-01
                  :ARG0 c2-7
                  :ARG1 (c2-5 / give-01
                              :ARG0 c2-7
                              :ARG1 (c2-6 / spotlight-01
                                          :ARG1 (c2-9 / guy
                                                      :mod (c2-4 / this))
                                          :mod (c2-1 / any))
                              :ARG2 c2-9
                              :manner (c2-3 / sense
                                            :mod (c2-2 / comedy)
                                            :mod (c2-10 / even)))))

# ::snt It worked for the US, and it could here too.
# ::tokens ["It", "worked", "for", "the", "US", ",", "and", "it", "could", "here", "too", "."]
# ::lemmas ["it", "work", "for", "the", "US", ",", "and", "it", "could", "here", "too", "."]
(c3-0 / and
      :op1 (c3-2 / work-09
                 :ARG1 (c3-5 / it)
                 :ARG2 (c3-1 / country
                             :name (c3-6 / name
                                         :op1 "US")))
      :op2 (c3-4 / possible-01
                 :ARG1 (c3-7 / work-09
                             :ARG1 c3-5
                             :ARG2 c3-1
                             :mod (c3-3 / too))))
