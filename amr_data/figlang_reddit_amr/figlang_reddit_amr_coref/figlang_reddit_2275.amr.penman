# ::snt Thanks for nothing, Roadhog
# ::tokens ["Thanks", "for", "nothing", ",", "Roadhog"]
# ::lemmas ["thank", "for", "nothing", ",", "Roadhog"]
(c1-0 / say-01
      :ARG1 (c1-1 / thank-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-3 / person
                              :name (c1-5 / name
                                          :op1 "Roadhog"))
                  :ARG2 (c1-2 / nothing))
      :ARG2 c1-3)

# ::snt You should have stayed there until you got call mech!
# ::tokens ["You", "should", "have", "stayed", "there", "until", "you", "got", "call", "mech", "!"]
# ::lemmas ["you", "should", "have", "stay", "there", "until", "you", "get", "call", "mech", "!"]
(c2-4 / recommend-01
      :ARG1 (c2-0 / stay-01
                  :ARG1 (c2-6 / you)
                  :location (c2-3 / there)
                  :time (c2-2 / until
                              :op1 (c2-5 / get-01
                                         :ARG0 c2-6
                                         :ARG1 (c2-1 / call-02
                                                     :ARG1 c2-6))))
      :ARG2 c2-6)

# ::snt Faster to just die and respawn and get back in the fight sooner
# ::tokens ["Faster", "to", "just", "die", "and", "respawn", "and", "get", "back", "in", "the", "fight", "sooner"]
# ::lemmas ["fast", "to", "just", "die", "and", "respawn", "and", "get", "back", "in", "the", "fight", "soon"]
(c3-4 / have-degree-91
      :ARG2 (c3-3 / fast-02
                  :ARG1 (c3-2 / and
                              :op1 (c3-0 / die-01
                                         :mod (c3-8 / just))
                              :op2 (c3-6 / respawn-01
                                         :mod c3-8)
                              :op3 (c3-7 / get-back-10
                                         :ARG2 (c3-5 / fight-01)
                                         :time (c3-1 / soon))))
      :ARG3 (c3-9 / more))
