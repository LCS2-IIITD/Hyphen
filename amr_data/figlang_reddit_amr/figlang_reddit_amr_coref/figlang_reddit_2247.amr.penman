# ::snt The musician Whitey responds to a TV company asking to use his music for free.
# ::tokens ["The", "musician", "Whitey", "responds", "to", "a", "TV", "company", "asking", "to", "use", "his", "music", "for", "free", "."]
# ::lemmas ["the", "musician", "Whitey", "respond", "to", "a", "tv", "company", "ask", "to", "use", "his", "music", "for", "free", "."]
(c1-6 / respond-01
      :ARG0 (c1-7 / person
                  :name (c1-9 / name
                              :op1 "Whitey")
                  :mod (c1-8 / musician))
      :ARG1 (c1-0 / ask-02
                  :ARG0 (c1-2 / company
                              :mod (c1-5 / television))
                  :ARG1 (c1-4 / use-01
                              :ARG0 c1-2
                              :ARG1 (c1-3 / music
                                          :poss c1-7)
                              :ARG1-of (c1-1 / free-03))))

# ::snt The classic example of this on a smaller scale is when someone asks you to fix their computer but aren't willing to do anything for you in return.
# ::tokens ["The", "classic", "example", "of", "this", "on", "a", "smaller", "scale", "is", "when", "someone", "asks", "you", "to", "fix", "their", "computer", "but", "are", "n't", "willing", "to", "do", "anything", "for", "you", "in", "return", "."]
# ::lemmas ["the", "classic", "example", "of", "this", "on", "a", "small", "scale", "be", "when", "someone", "ask", "you", "to", "fix", "their", "computer", "but", "be", "not", "willing", "to", "do", "anything", "for", "you", "in", "return", "."]
(c2-16 / exemplify-01
       :ARG0 (c2-5 / contrast-01
                   :ARG1 (c2-3 / ask-02
                               :ARG0 (c2-0 / someone)
                               :ARG1 (c2-4 / fix-02
                                           :ARG0 c2-0
                                           :ARG1 (c2-1 / computer
                                                       :poss c2-0))
                               :ARG2 (c2-14 / you))
                   :ARG2 (c2-6 / will-02
                               :ARG0 c2-0
                               :ARG1 (c2-2 / do-02
                                           :ARG0 c2-0
                                           :ARG1 (c2-15 / anything)
                                           :ARG2 c2-14
                                           :ARG1-of (c2-11 / return-05
                                                           :ARG0 c2-0
                                                           :ARG2 c2-14))
                               :polarity -))
       :ARG1 (c2-10 / this)
       :mod (c2-9 / classic)
       :manner (c2-12 / scale
                      :ARG1-of (c2-7 / have-degree-91
                                     :ARG2 (c2-8 / small)
                                     :ARG3 (c2-13 / more))))

# ::snt My grandparents just make me dinner or something.
# ::tokens ["My", "grandparents", "just", "make", "me", "dinner", "or", "something", "."]
# ::lemmas ["my", "grandparent", "just", "make", "i", "dinner", "or", "something", "."]
(c3-8 / make-01
      :ARG0 (c3-7 / person
                  :ARG0-of (c3-3 / have-rel-role-91
                                 :ARG1 (c3-2 / i)
                                 :ARG2 (c3-5 / grandparents)))
      :ARG1 (c3-4 / or
                  :op1 (c3-0 / dinner)
                  :op2 (c3-1 / something))
      :ARG2 c3-2
      :mod (c3-6 / just))
