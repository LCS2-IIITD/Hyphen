# ::snt When I tell people I'm a chemist and they follow up with whether I make bombs or meth
# ::tokens ["When", "I", "tell", "people", "I", "'m", "a", "chemist", "and", "they", "follow", "up", "with", "whether", "I", "make", "bombs", "or", "meth"]
# ::lemmas ["when", "i", "tell", "people", "i", "be", "a", "chemist", "and", "they", "follow", "up", "with", "whether", "i", "make", "bomb", "or", "meth"]
(c1-0 / and
      :op1 (c1-6 / tell-01
                 :ARG0 (c1-9 / i)
                 :ARG1 (c1-2 / chemist
                             :domain c1-9)
                 :ARG2 (c1-7 / person))
      :op2 (c1-1 / follow-up-03
                 :ARG0 c1-7
                 :ARG1 (c1-4 / truth-value
                             :polarity-of (c1-10 / make-01
                                                 :ARG0 c1-9
                                                 :ARG1 (c1-5 / or
                                                             :op1 (c1-8 / bomb)
                                                             :op2 (c1-3 / meth))))))

# ::snt It's like asking a mathematician if he just sits around solving equations all day.
# ::tokens ["It", "'s", "like", "asking", "a", "mathematician", "if", "he", "just", "sits", "around", "solving", "equations", "all", "day", "."]
# ::lemmas ["it", "be", "like", "ask", "a", "mathematician", "if", "he", "just", "sit", "around", "solve", "equation", "all", "day", "."]
(c2-5 / resemble-01
      :ARG1 (c2-9 / it)
      :ARG2 (c2-3 / ask-01
                  :ARG1 (c2-4 / truth-value
                              :polarity-of (c2-0 / sit-01
                                                 :ARG1 (c2-6 / person
                                                             :mod (c2-10 / mathematics))
                                                 :ARG2 (c2-11 / around)
                                                 :purpose (c2-8 / solve-01
                                                                :ARG0 c2-6
                                                                :ARG1 (c2-12 / equation))
                                                 :mod (c2-7 / just)
                                                 :duration (c2-1 / day
                                                                 :mod (c2-2 / all))))
                  :ARG2 c2-6))
