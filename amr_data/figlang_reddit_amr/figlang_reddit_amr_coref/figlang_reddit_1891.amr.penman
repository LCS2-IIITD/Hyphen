# ::snt Full Euro 2016 Knockout Stage Bracket so far
# ::tokens ["Full", "Euro", "2016", "Knockout", "Stage", "Bracket", "so", "far"]
# ::lemmas ["full", "Euro", "2016", "Knockout", "Stage", "Bracket", "so", "far"]
(c1-2 / bracket
      :mod (c1-4 / event
                 :name (c1-3 / name
                             :op1 "Euro 2016"
                             :op2 "Knockout"
                             :op3 " Stage"))
      :mod (c1-1 / full)
      :time (c1-0 / so-far))

# ::snt It's going to be hilarious if/when Iceland knock out England.
# ::tokens ["It", "'s", "going", "to", "be", "hilarious", "if", "/", "when", "Iceland", "knock", "out", "England", "."]
# ::lemmas ["it", "be", "go", "to", "be", "hilarious", "if", "/", "when", "Iceland", "knock", "out", "England", "."]
(c2-2 / hilarious
      :domain (c2-0 / knock-out-03
                    :ARG0 (c2-3 / team
                                :name (c2-5 / name
                                            :op1 "Iceland"))
                    :ARG1 (c2-1 / team
                                :name (c2-4 / name
                                            :op1 "England"))
                    :condition-of c2-2))

# ::snt when
# ::tokens ["when"]
# ::lemmas ["when"]
(c3-0 / time
      :time-of (c3-1 / event))

# ::snt Haha, if us scots can't get through at least we get a laugh out of England cocking it up against the smallest country there.
# ::tokens ["Haha", ",", "if", "us", "scots", "ca", "n't", "get", "through", "at", "least", "we", "get", "a", "laugh", "out", "of", "England", "cocking", "it", "up", "against", "the", "smallest", "country", "there", "."]
# ::lemmas ["Haha", ",", "if", "we", "scot", "can", "not", "get", "through", "at", "least", "we", "get", "a", "laugh", "out", "of", "England", "cock", "it", "up", "against", "the", "small", "country", "there", "."]
(c4-9 / get-01
      :ARG0 (c4-4 / we
                  :mod (c4-0 / scots))
      :ARG1 (c4-8 / laugh-01
                  :ARG0 c4-4
                  :ARG2 (c4-3 / cock-up-02
                              :ARG0 (c4-1 / country
                                          :name (c4-13 / name
                                                       :op1 "England")
                                          :ARG1-of c4-3)
                              :prep-against (c4-7 / country
                                                  :ARG1-of (c4-5 / have-degree-91
                                                                 :ARG2 (c4-10 / small)
                                                                 :ARG3 (c4-12 / most)
                                                                 :ARG5 c4-1)
                                                  :location c4-1)))
      :condition (c4-11 / possible-01
                        :ARG1 (c4-14 / get-through-13
                                     :ARG0 c4-4)
                        :mod (c4-2 / at-least)
                        :polarity -)
      :mod (c4-6 / haha
                 :mode expressive))

# ::snt Mate that's a Germany flag
# ::tokens ["Mate", "that", "'s", "a", "Germany", "flag"]
# ::lemmas ["mate", "that", "be", "a", "Germany", "flag"]
(c5-0 / flag
      :mod (c5-1 / country
                 :name (c5-5 / name
                             :op1 "Germany"))
      :domain (c5-3 / person
                    :ARG0-of (c5-2 / have-rel-role-91
                                   :ARG2 (c5-4 / mate))))
