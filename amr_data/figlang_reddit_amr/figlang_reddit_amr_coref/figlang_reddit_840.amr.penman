# ::snt BU is now running closed source patches
# ::tokens ["BU", "is", "now", "running", "closed", "source", "patches"]
# ::lemmas ["BU", "be", "now", "run", "closed", "source", "patch"]
(c1-3 / run-01
      :ARG0 (c1-2 / thing
                  :name (c1-6 / name
                              :op1 "BU"))
      :ARG1 (c1-5 / patch
                  :mod (c1-0 / source
                             :ARG1-of (c1-1 / close-01)))
      :time (c1-4 / now))

# ::snt Brave souls who run this patch with their private keys.
# ::tokens ["Brave", "souls", "who", "run", "this", "patch", "with", "their", "private", "keys", "."]
# ::lemmas ["brave", "soul", "who", "run", "this", "patch", "with", "their", "private", "key", "."]
(c2-0 / soul
      :ARG0-of (c2-4 / Brave-02)
      :ARG0-of (c2-3 / run-01
                     :ARG1 (c2-5 / patch
                                 :mod (c2-2 / this))
                     :instrument (c2-6 / key
                                       :ARG1-of (c2-1 / private-02)
                                       :poss c2-0)))

# ::snt So people still use full nodes to store Bitcoin?
# ::tokens ["So", "people", "still", "use", "full", "nodes", "to", "store", "Bitcoin", "?"]
# ::lemmas ["so", "people", "still", "use", "full", "node", "to", "store", "Bitcoin", "?"]
(c3-3 / use-01
      :polarity (c3-1 / amr-unknown)
      :ARG0 (c3-6 / person)
      :ARG1 (c3-8 / node
                  :mod (c3-2 / full))
      :ARG2 (c3-0 / store-01
                  :ARG0 c3-6
                  :ARG1 (c3-7 / monetary-quantity
                              :name (c3-4 / name
                                          :op1 "Bitcoin")))
      :mod (c3-5 / still))

# ::snt BU is not bitcoin.
# ::tokens ["BU", "is", "not", "bitcoin", "."]
# ::lemmas ["BU", "be", "not", "bitcoin", "."]
(c4-1 / thing
      :name (c4-0 / name
                  :op1 "Bitcoin")
      :domain c4-1
      :name (c4-2 / name
                  :op1 "BU")
      :polarity -)

# ::snt repetition doesn't generate truth
# ::tokens ["repetition", "does", "n't", "generate", "truth"]
# ::lemmas ["repetition", "do", "not", "generate", "truth"]
(c5-0 / generate-01
      :ARG0 (c5-3 / thing
                  :ARG1-of (c5-1 / demand-01))
      :ARG1 (c5-2 / truth)
      :polarity -)
