# ::snt ToysRUs is apparently doing an in store card trading event - and giving out exclusive cards!
# ::tokens ["ToysRUs", "is", "apparently", "doing", "an", "in", "store", "card", "trading", "event", "-", "and", "giving", "out", "exclusive", "cards", "!"]
# ::lemmas ["ToysRUs", "be", "apparently", "do", "an", "in", "store", "card", "trading", "event", "-", "and", "give", "out", "exclusive", "card", "!"]
(c1-3 / appear-02
      :ARG1 (c1-10 / and
                   :op1 (c1-0 / do-02
                              :ARG0 (c1-4 / company
                                          :name (c1-9 / name
                                                      :op1 "ToysRUs"))
                              :ARG1 (c1-11 / event
                                           :mod (c1-7 / trade-01
                                                      :ARG1 (c1-1 / card
                                                                  :mod (c1-2 / store)))))
                   :op2 (c1-8 / give-out-03
                              :ARG0 c1-4
                              :ARG1 (c1-6 / card
                                          :ARG1-of (c1-5 / exclusive-02)))))

# ::snt If I showup past 2 PM and they still have stuff left would they give it out even if I dont have a kid with me?
# ::tokens ["If", "I", "showup", "past", "2", "PM", "and", "they", "still", "have", "stuff", "left", "would", "they", "give", "it", "out", "even", "if", "I", "do", "nt", "have", "a", "kid", "with", "me", "?"]
# ::lemmas ["if", "i", "showup", "past", "2", "pm", "and", "they", "still", "have", "stuff", "leave", "would", "they", "give", "it", "out", "even", "if", "i", "do", "not", "have", "a", "kid", "with", "i", "?"]
(c2-8 / give-out-03
      :ARG0 (c2-6 / they)
      :ARG1 (c2-0 / stuff
                  :ARG1-of (c2-7 / leave-17))
      :polarity (c2-2 / amr-unknown)
      :condition (c2-12 / and
                        :op1 (c2-9 / show-up-02
                                   :ARG1 (c2-10 / i)
                                   :time (c2-1 / date-entity
                                               :time "15:00"))
                        :op2 (c2-3 / have-03
                                   :ARG0 c2-6
                                   :ARG1 c2-0
                                   :mod (c2-4 / still)))
      :concession (c2-13 / even-if
                         :op1 (c2-5 / have-03
                                    :ARG0 c2-10
                                    :ARG1 (c2-11 / kid
                                                 :accompanier c2-10)
                                    :polarity -)))
