# ::snt First Look at Nintendo Switch
# ::tokens ["First", "Look", "at", "Nintendo", "Switch"]
# ::lemmas ["first", "look", "at", "Nintendo", "Switch"]
(c1-1 / look-01
      :ARG0 (c1-4 / you)
      :ARG1 (c1-2 / product
                  :name (c1-3 / name
                              :op1 "Nintendo"
                              :op2 "Switch"))
      :ord (c1-0 / ordinal-entity
                 :value 1)
      :mode imperative)

# ::snt I feel like Nintendo missed an opportunity to show what's sure to be the #1 use case of this hardware: Playing Mario Kart while you're taking a dump.
# ::tokens ["I", "feel", "like", "Nintendo", "missed", "an", "opportunity", "to", "show", "what", "'s", "sure", "to", "be", "the", "#", "1", "use", "case", "of", "this", "hardware", ":", "Playing", "Mario", "Kart", "while", "you", "'re", "taking", "a", "dump", "."]
# ::lemmas ["i", "feel", "like", "Nintendo", "miss", "an", "opportunity", "to", "show", "what", "be", "sure", "to", "be", "the", "#", "1", "use", "case", "of", "this", "hardware", ":", "play", "Mario", "Kart", "while", "you", "be", "take", "a", "dump", "."]
(c2-3 / feel-02
      :ARG0 (c2-14 / i)
      :ARG1 (c2-15 / miss-02
                   :ARG0 (c2-4 / company
                               :name (c2-16 / name
                                            :op1 "Nintendo"))
                   :ARG1 (c2-8 / opportunity
                               :purpose (c2-0 / show-01
                                              :ARG0 c2-4
                                              :ARG1 (c2-1 / case-04
                                                          :ARG1 (c2-11 / play-01
                                                                       :ARG0 (c2-17 / you)
                                                                       :ARG1 (c2-12 / game
                                                                                    :name (c2-10 / name
                                                                                                 :op1 "Mario"
                                                                                                 :op2 "Kart"))
                                                                       :time (c2-2 / dump-01
                                                                                   :ARG0 c2-17))
                                                          :ARG1-of (c2-7 / use-01
                                                                         :ARG0 (c2-5 / hardware
                                                                                     :mod (c2-9 / this))
                                                                         :ARG1-of (c2-13 / sure-02)
                                                                         :ord (c2-6 / ordinal-entity
                                                                                    :value 1)))))))

# ::snt To be fair, that's been possible since Super Circuit.
# ::tokens ["To", "be", "fair", ",", "that", "'s", "been", "possible", "since", "Super", "Circuit", "."]
# ::lemmas ["to", "be", "fair", ",", "that", "be", "be", "possible", "since", "Super", "Circuit", "."]
(c3-4 / possible-01
      :ARG1 (c3-2 / that)
      :time (c3-0 / since
                  :op1 (c3-3 / government-organization
                             :name (c3-5 / name
                                         :op1 "Super"
                                         :op2 "Circuit")))
      :ARG1-of (c3-1 / fair-01))

# ::snt when I was in college I set up a series of mirrors to do this on my tv after college I used a laptop and a wifi-enabled camera now I just have a tv in the bathroom of my house
# ::tokens ["when", "I", "was", "in", "college", "I", "set", "up", "a", "series", "of", "mirrors", "to", "do", "this", "on", "my", "tv", "after", "college", "I", "used", "a", "laptop", "and", "a", "wifi", "-", "enabled", "camera", "now", "I", "just", "have", "a", "tv", "in", "the", "bathroom", "of", "my", "house"]
# ::lemmas ["when", "i", "be", "in", "college", "i", "set", "up", "a", "series", "of", "mirror", "to", "do", "this", "on", "my", "tv", "after", "college", "i", "use", "a", "laptop", "and", "a", "wifi", "-", "enable", "camera", "now", "i", "just", "have", "a", "tv", "in", "the", "bathroom", "of", "my", "house"]
(c4-15 / and
       :op1 (c4-14 / set-up-03
                   :ARG0 (c4-4 / i)
                   :ARG1 (c4-9 / mirror
                               :quant (c4-21 / series))
                   :purpose (c4-0 / do-02
                                  :ARG0 c4-4
                                  :ARG1 (c4-8 / this)
                                  :ARG2 (c4-7 / television
                                              :poss c4-4))
                   :time (c4-5 / college
                               :domain c4-4)
                   :time (c4-12 / after
                                :op1 c4-5))
       :op2 (c4-17 / use-01
                   :ARG0 c4-4
                   :ARG1 (c4-1 / and
                               :op1 (c4-19 / laptop)
                               :op2 (c4-2 / camera
                                          :ARG1-of (c4-13 / enable-01
                                                          :ARG2 (c4-6 / wifi))))
                   :time (c4-10 / now))
       :op3 (c4-16 / have-03
                   :ARG0 c4-4
                   :ARG1 (c4-11 / television
                                :location (c4-20 / bathroom
                                                 :part-of (c4-3 / house
                                                                :poss c4-4)))
                   :mod (c4-18 / just)))

# ::snt Laptop and camera...was that laggy?
# ::tokens ["Laptop", "and", "camera", "...", "was", "that", "laggy", "?"]
# ::lemmas ["laptop", "and", "camera", "...", "be", "that", "laggy", "?"]
(c5-2 / laggy
      :domain (c5-0 / and
                    :op1 (c5-3 / laptop)
                    :op2 (c5-1 / camera))
      :polarity (c5-4 / amr-unknown))

# ::snt yes, but not as laggy as you'd expect
# ::tokens ["yes", ",", "but", "not", "as", "laggy", "as", "you", "'d", "expect"]
# ::lemmas ["yes", ",", "but", "not", "as", "laggy", "as", "you", "would", "expect"]
(c6-0 / have-concession-91
      :ARG1 (c6-2 / laggy
                  :ARG2-of (c6-3 / have-degree-91
                                 :ARG3 (c6-5 / equal)
                                 :ARG4 (c6-1 / expect-01
                                             :ARG0 (c6-4 / you)))
                  :polarity -))
