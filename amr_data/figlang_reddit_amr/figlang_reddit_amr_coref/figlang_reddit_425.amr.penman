# ::snt Vitalik Buterin - "If in the future there is that kind of a dispute in Ethereum, I'd definitely be quite happy to see Ethereum A go in one direction and Ethereum B go to the other"
# ::tokens ["Vitalik", "Buterin", "-", "\"", "If", "in", "the", "future", "there", "is", "that", "kind", "of", "a", "dispute", "in", "Ethereum", ",", "I", "'d", "definitely", "be", "quite", "happy", "to", "see", "Ethereum", "A", "go", "in", "one", "direction", "and", "Ethereum", "B", "go", "to", "the", "other", "\""]
# ::lemmas ["Vitalik", "Buterin", "-", "\"", "if", "in", "the", "future", "there", "be", "that", "kind", "of", "a", "dispute", "in", "Ethereum", ",", "i", "would", "definitely", "be", "quite", "happy", "to", "see", "Ethereum", "A", "go", "in", "one", "direction", "and", "Ethereum", "B", "go", "to", "the", "other", "\""]
(c1-10 / say-01
       :ARG0 (c1-20 / person
                    :name (c1-9 / name
                                :op1 "Vitalik"
                                :op2 "Buterin"))
       :ARG1 (c1-17 / happy-01
                    :ARG0 (c1-19 / see-01
                                 :ARG0 c1-20
                                 :ARG1 (c1-15 / and
                                              :op1 (c1-8 / go-01
                                                         :ARG1 (c1-12 / string-entity
                                                                      :value "A")
                                                         :direction (c1-0 / direction
                                                                          :mod (c1-5 / one)))
                                              :op2 (c1-14 / go-01
                                                          :ARG1 (c1-3 / string-entity
                                                                      :value "B")
                                                          :direction (c1-13 / direction
                                                                            :mod (c1-18 / other)))))
                    :ARG1 c1-20
                    :mod (c1-11 / definite)
                    :degree (c1-1 / quite)
                    :condition (c1-6 / dispute-01
                                     :ARG2 (c1-4 / company
                                                 :name (c1-2 / name
                                                             :op1 "Ethereum"))
                                     :mod (c1-21 / kind
                                                 :mod (c1-7 / that))
                                     :time (c1-16 / future))))

# ::snt "We will bailout people if we deem our interests are at risk against our core vision of ethereum which may be changed anytime for our own gain"
# ::tokens ["\"", "We", "will", "bailout", "people", "if", "we", "deem", "our", "interests", "are", "at", "risk", "against", "our", "core", "vision", "of", "ethereum", "which", "may", "be", "changed", "anytime", "for", "our", "own", "gain", "\""]
# ::lemmas ["\"", "we", "will", "bailout", "people", "if", "we", "deem", "our", "interest", "be", "at", "risk", "against", "our", "core", "vision", "of", "ethereum", "which", "may", "be", "change", "anytime", "for", "our", "own", "gain", "\""]
(c2-10 / bail-out-02
       :ARG0 (c2-4 / we)
       :ARG1 (c2-11 / person)
       :condition (c2-0 / deem-01
                        :ARG0 c2-4
                        :ARG1 (c2-8 / risk-01
                                    :ARG1 (c2-3 / interest-01
                                                :ARG1 c2-4)
                                    :ARG2 (c2-13 / envision-01
                                                 :ARG0 c2-4
                                                 :ARG1 (c2-5 / company
                                                             :name (c2-12 / name
                                                                          :op1 "ethereum"))
                                                 :mod (c2-1 / core)
                                                 :ARG1-of (c2-6 / change-01
                                                                :ARG1-of (c2-7 / possible-01)
                                                                :purpose (c2-9 / gain-02
                                                                               :ARG0 c2-4)
                                                                :time (c2-2 / anytime))))))
