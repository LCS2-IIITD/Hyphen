# ::snt dat feel when logibros land on grid at the last moment
# ::tokens ["dat", "feel", "when", "logibros", "land", "on", "grid", "at", "the", "last", "moment"]
# ::lemmas ["dat", "feel", "when", "logibros", "land", "on", "grid", "at", "the", "last", "moment"]
(c1-2 / feel-01
      :ARG0 (c1-0 / dat)
      :time (c1-3 / land-01
                  :ARG1 (c1-1 / spaceship
                              :name (c1-7 / name
                                          :op1 "Logibros"))
                  :ARG2 (c1-5 / grid)
                  :time (c1-6 / moment
                              :mod (c1-4 / last))))

# ::snt Do you need somebody to teach you how to use Paint?
# ::tokens ["Do", "you", "need", "somebody", "to", "teach", "you", "how", "to", "use", "Paint", "?"]
# ::lemmas ["do", "you", "need", "somebody", "to", "teach", "you", "how", "to", "use", "Paint", "?"]
(c2-6 / need-01
      :polarity (c2-1 / amr-unknown)
      :ARG0 (c2-7 / you)
      :ARG1 (c2-4 / teach-01
                  :ARG0 (c2-0 / somebody)
                  :ARG1 (c2-2 / thing
                              :manner-of (c2-3 / use-01
                                               :ARG0 c2-7
                                               :ARG1 (c2-5 / paint)))
                  :ARG2 c2-7))

# ::snt implying i was the one to make that picture because its totaly possible to lock myself and rep mysef
# ::tokens ["implying", "i", "was", "the", "one", "to", "make", "that", "picture", "because", "its", "totaly", "possible", "to", "lock", "myself", "and", "rep", "mysef"]
# ::lemmas ["imply", "i", "be", "the", "one", "to", "make", "that", "picture", "because", "its", "totaly", "possible", "to", "lock", "myself", "and", "rep", "mysef"]
(c3-10 / imply-01
       :ARG0 (c3-4 / i)
       :ARG1 (c3-1 / cause-01
                   :ARG0 (c3-8 / possible-01
                               :ARG1 (c3-0 / and
                                           :op1 (c3-9 / lock-01
                                                      :ARG0 c3-4
                                                      :ARG1 c3-4)
                                           :op2 (c3-7 / repute-01
                                                      :ARG0 c3-4
                                                      :ARG1 (c3-5 / person
                                                                  :name (c3-12 / name
                                                                               :op1 "Mysef"))))
                               :degree (c3-6 / total))
                   :ARG1 (c3-11 / make-01
                                :ARG0 c3-4
                                :ARG1 (c3-3 / picture
                                            :mod (c3-2 / that)))))
