# ::snt "I will assume that a black person has poor grammar unless proven otherwise, because whenever a black person is interviewed on American TV, they always talk in that ghetto accent."
# ::tokens ["\"", "I", "will", "assume", "that", "a", "black", "person", "has", "poor", "grammar", "unless", "proven", "otherwise", ",", "because", "whenever", "a", "black", "person", "is", "interviewed", "on", "American", "TV", ",", "they", "always", "talk", "in", "that", "ghetto", "accent", ".", "\""]
# ::lemmas ["\"", "i", "will", "assume", "that", "a", "black", "person", "have", "poor", "grammar", "unless", "prove", "otherwise", ",", "because", "whenever", "a", "black", "person", "be", "interview", "on", "American", "TV", ",", "they", "always", "talk", "in", "that", "ghetto", "accent", ".", "\""]
(c1-13 / assume-02
       :ARG0 (c1-2 / i)
       :ARG1 (c1-6 / grammar
                   :mod (c1-17 / poor)
                   :domain (c1-15 / person
                                  :ARG1-of (c1-16 / black-05)))
       :condition (c1-10 / prove-01
                         :ARG1 (c1-14 / have-03
                                      :ARG0 c1-15
                                      :ARG1 c1-6)
                         :polarity -)
       :ARG1-of (c1-3 / cause-01
                      :ARG0 (c1-5 / talk-01
                                  :ARG0 c1-15
                                  :manner (c1-9 / accent
                                                :mod (c1-12 / ghetto)
                                                :mod (c1-4 / that))
                                  :time (c1-11 / interview-01
                                               :ARG0 (c1-8 / television
                                                           :mod (c1-0 / country
                                                                      :name (c1-7 / name
                                                                                  :op1 "America")))
                                               :ARG1 c1-15
                                               :mod (c1-1 / any))
                                  :time (c1-18 / always))))

# ::snt Yeah, like that Barack dude always talking on tv.
# ::tokens ["Yeah", ",", "like", "that", "Barack", "dude", "always", "talking", "on", "tv", "."]
# ::lemmas ["yeah", ",", "like", "that", "Barack", "dude", "always", "talk", "on", "tv", "."]
(c2-4 / resemble-01
      :ARG2 (c2-0 / dude
                  :name (c2-6 / name
                              :op1 "Barack")
                  :ARG0-of (c2-3 / talk-01
                                 :medium (c2-2 / television)
                                 :time (c2-1 / always))
                  :mod (c2-7 / that))
      :mod (c2-5 / yeah
                 :mode expressive))
