# ::snt Humvees failed airdrop
# ::tokens ["Humvees", "failed", "airdrop"]
# ::lemmas ["humvee", "fail", "airdrop"]
(c1-3 / fail-01
      :ARG1 (c1-0 / spaceship
                  :name (c1-1 / name
                              :op1 "Humvee"))
      :ARG2 (c1-2 / radar))

# ::snt All I can think about while watching this is how much money they just wasted.
# ::tokens ["All", "I", "can", "think", "about", "while", "watching", "this", "is", "how", "much", "money", "they", "just", "wasted", "."]
# ::lemmas ["all", "i", "can", "think", "about", "while", "watch", "this", "be", "how", "much", "money", "they", "just", "waste", "."]
(c2-7 / possible-01
      :ARG1 (c2-5 / think-01
                  :ARG0 (c2-1 / i)
                  :ARG1 (c2-3 / thing
                              :quant-of (c2-8 / money
                                              :ARG1-of (c2-2 / waste-01
                                                             :ARG0 (c2-9 / they)
                                                             :mod (c2-6 / just))))
                  :time (c2-10 / watch-01
                               :ARG0 c2-1
                               :ARG1 (c2-4 / this))
                  :mod (c2-0 / all)))

# ::snt All I can think about while watching is is how ~~much money~~ many tax dollars they just wasted.
# ::tokens ["All", "I", "can", "think", "about", "while", "watching", "is", "is", "how", "~~much", "money~~", "many", "tax", "dollars", "they", "just", "wasted", "."]
# ::lemmas ["all", "i", "can", "think", "about", "while", "watch", "be", "be", "how", "~~much", "money~~", "many", "tax", "dollar", "they", "just", "waste", "."]
(c3-5 / thing
      :mod (c3-1 / all)
      :ARG1-of (c3-3 / think-01
                     :ARG0 (c3-8 / i)
                     :time (c3-2 / watch-01
                                 :ARG0 c3-8)
                     :ARG1-of (c3-6 / possible-01))
      :domain (c3-11 / wasted-01
                     :ARG0 (c3-10 / they)
                     :ARG1 (c3-0 / dollar
                                 :mod (c3-4 / tax)
                                 :quant (c3-9 / many))
                     :mod (c3-7 / just)))
