# ::snt JDM's thoughts on the failed USP hit detection.
# ::tokens ["JDM", "'s", "thoughts", "on", "the", "failed", "USP", "hit", "detection", "."]
# ::lemmas ["JDM", "'s", "thought", "on", "the", "fail", "USP", "hit", "detection", "."]
(c1-4 / think-01
      :ARG0 (c1-6 / person
                  :name (c1-7 / name
                              :op1 "JDM"))
      :ARG1 (c1-0 / detect-01
                  :ARG1 (c1-2 / hit-01
                              :ARG1 (c1-3 / product
                                          :name (c1-5 / name
                                                      :op1 "USP")))
                  :ARG1-of (c1-1 / fail-01)))

# ::snt Its pretty nooby for jdm to say this tbh he should know this would never happen on a 128 tick server
# ::tokens ["Its", "pretty", "nooby", "for", "jdm", "to", "say", "this", "tbh", "he", "should", "know", "this", "would", "never", "happen", "on", "a", "128", "tick", "server"]
# ::lemmas ["its", "pretty", "nooby", "for", "jdm", "to", "say", "this", "tbh", "he", "should", "know", "this", "would", "never", "happen", "on", "a", "128", "tick", "server"]
(c2-11 / no-brainer
       :degree (c2-10 / pretty)
       :domain (c2-0 / say-01
                     :ARG0 (c2-5 / person
                                 :name (c2-7 / name
                                             :op1 "jdm"))
                     :ARG1 (c2-6 / this))
       :condition (c2-4 / honest-01
                        :ARG0 c2-5)
       :ARG1-of (c2-2 / cause-01
                      :ARG0 (c2-8 / recommend-01
                                  :ARG1 (c2-1 / know-01
                                              :ARG0 c2-5
                                              :ARG1 (c2-3 / this
                                                          :location (c2-9 / server
                                                                          :mod (c2-12 / tick
                                                                                      :quant 128))
                                                          :time (c2-13 / ever)
                                                          :polarity -)))))
