# ::snt Whenever someone brings up their IQ, no matter the number their argument is invalid to me
# ::tokens ["Whenever", "someone", "brings", "up", "their", "IQ", ",", "no", "matter", "the", "number", "their", "argument", "is", "invalid", "to", "me"]
# ::lemmas ["whenever", "someone", "bring", "up", "their", "iq", ",", "no", "matter", "the", "number", "their", "argument", "be", "invalid", "to", "i"]
(c1-4 / valid-02
      :ARG1 (c1-1 / argue-01
                  :ARG0 (c1-0 / someone))
      :ARG2 (c1-7 / i)
      :time (c1-6 / bring-up-02
                  :ARG0 c1-0
                  :ARG1 (c1-2 / quotient
                              :quant-of (c1-3 / intelligent-01
                                              :ARG1 c1-0))
                  :mod (c1-9 / any))
      :ARG1-of (c1-5 / regardless-91
                     :ARG2 (c1-8 / number))
      :polarity -)

# ::snt Funny how the average IQ is 100, but everyone I meet apparently has an IQ far over that.
# ::tokens ["Funny", "how", "the", "average", "IQ", "is", "100", ",", "but", "everyone", "I", "meet", "apparently", "has", "an", "IQ", "far", "over", "that", "."]
# ::lemmas ["funny", "how", "the", "average", "iq", "be", "100", ",", "but", "everyone", "i", "meet", "apparently", "have", "an", "iq", "far", "over", "that", "."]
(c2-1 / funny
      :domain (c2-2 / contrast-01
                    :ARG1 (c2-5 / have-03
                                :ARG0 (c2-12 / everyone
                                             :ARG1-of (c2-10 / meet-02
                                                             :ARG0 (c2-9 / i)))
                                :ARG1 (c2-3 / quotient
                                            :mod (c2-6 / intelligent-01)
                                            :ARG1-of (c2-0 / average-01)
                                            :quant 100))
                    :ARG2 (c2-11 / appear-02
                                 :ARG1 (c2-8 / have-quant-91
                                             :ARG1 c2-3
                                             :ARG3 (c2-4 / more
                                                         :quant (c2-7 / far))
                                             :ARG4 c2-3))))
