# ::snt TIL that the word "lollapalooza" was a shibboleth used by American soldiers in the Pacific to identify Japanese spies who would mispronounce it as "rorrarooza"
# ::tokens ["TIL", "that", "the", "word", "\"", "lollapalooza", "\"", "was", "a", "shibboleth", "used", "by", "American", "soldiers", "in", "the", "Pacific", "to", "identify", "Japanese", "spies", "who", "would", "mispronounce", "it", "as", "\"", "rorrarooza", "\""]
# ::lemmas ["TIL", "that", "the", "word", "\"", "lollapalooza", "\"", "be", "a", "shibboleth", "use", "by", "American", "soldier", "in", "the", "Pacific", "to", "identify", "Japanese", "spy", "who", "would", "mispronounce", "it", "as", "\"", "rorrarooza", "\""]
(c1-14 / mention-01
       :ARG1 (c1-0 / shibboleth
                   :ARG1-of (c1-6 / use-01
                                  :ARG0 (c1-12 / soldier
                                               :mod (c1-2 / country
                                                          :name (c1-15 / name
                                                                       :op1 "America"))
                                               :location (c1-7 / ocean
                                                               :name (c1-10 / name
                                                                            :op1 "Pacific")))
                                  :ARG2 (c1-13 / identify-01
                                               :ARG0 c1-12
                                               :ARG1 (c1-11 / person
                                                            :ARG0-of (c1-5 / spy-01)
                                                            :mod (c1-1 / country
                                                                       :name (c1-8 / name
                                                                                   :op1 "Japan"))
                                                            :ARG0-of (c1-3 / mispronounce-01
                                                                           :ARG1 (c1-4 / word-01
                                                                                       :ARG2 (c1-9 / string-entity
                                                                                                   :value "rorrarooza")))))
                                  :domain (c1-16 / word
                                                 :mod c1-9
                                                 :value "lollapalooza"))))

# ::snt "They found Scooby Doo's body three days later; lying in a ditch, riddled with bullet holes."
# ::tokens ["\"", "They", "found", "Scooby", "Doo", "'s", "body", "three", "days", "later", ";", "lying", "in", "a", "ditch", ",", "riddled", "with", "bullet", "holes", ".", "\""]
# ::lemmas ["\"", "they", "find", "Scooby", "Doo", "'s", "body", "three", "days", "later", ";", "lie", "in", "a", "ditch", ",", "riddle", "with", "bullet", "hole", ".", "\""]
(c2-3 / find-01
      :ARG0 (c2-8 / they)
      :ARG1 (c2-10 / body
                   :poss (c2-11 / person
                                :name (c2-12 / name
                                             :op1 "Scooby"
                                             :op2 "Doo"))
                   :ARG1-of (c2-9 / lie-07
                                  :ARG2 (c2-0 / ditch)
                                  :ARG1-of (c2-7 / parch-01
                                                 :ARG2 (c2-6 / hole
                                                             :mod (c2-1 / bullet)))))
      :time (c2-2 / after
                  :quant (c2-4 / temporal-quantity
                               :unit (c2-5 / day)
                               :quant 3)))

# ::snt The soldiers were later convicted of assaulting a senior officer.
# ::tokens ["The", "soldiers", "were", "later", "convicted", "of", "assaulting", "a", "senior", "officer", "."]
# ::lemmas ["the", "soldier", "be", "later", "convict", "of", "assault", "a", "senior", "officer", "."]
(c3-2 / convict-01
      :ARG1 (c3-0 / soldier)
      :ARG2 (c3-1 / assault-01
                  :ARG0 c3-0
                  :ARG1 (c3-6 / person
                              :ARG0-of (c3-3 / have-org-role-91
                                             :ARG2 (c3-4 / officer
                                                         :mod (c3-5 / senior)))))
      :time (c3-7 / after))

# ::snt I'm proud of myself because yesterday I wouldn't have understood this.
# ::tokens ["I", "'m", "proud", "of", "myself", "because", "yesterday", "I", "would", "n't", "have", "understood", "this", "."]
# ::lemmas ["i", "be", "proud", "of", "myself", "because", "yesterday", "i", "would", "not", "have", "understand", "this", "."]
(c4-4 / pride-01
      :ARG0 (c4-1 / i
                  :ARG1-of c4-4)
      :ARG1-of (c4-0 / cause-01
                     :ARG0 (c4-2 / understand-01
                                 :ARG0 c4-1
                                 :ARG1 (c4-3 / this)
                                 :time (c4-5 / yesterday)
                                 :polarity -)))

# ::snt I'm proud of myself because 30 years ago I wouldn't have been able to read.
# ::tokens ["I", "'m", "proud", "of", "myself", "because", "30", "years", "ago", "I", "would", "n't", "have", "been", "able", "to", "read", "."]
# ::lemmas ["i", "be", "proud", "of", "myself", "because", "30", "years", "ago", "i", "would", "not", "have", "be", "able", "to", "read", "."]
(c5-6 / pride-01
      :ARG0 (c5-1 / i
                  :ARG1-of c5-6)
      :ARG1-of (c5-0 / cause-01
                     :ARG0 (c5-2 / possible-01
                                 :ARG1 (c5-4 / read-01
                                             :ARG0 c5-1)
                                 :time (c5-5 / before
                                             :op1 (c5-7 / now)
                                             :quant (c5-3 / temporal-quantity
                                                          :unit (c5-8 / year)
                                                          :quant 30))
                                 :polarity -)))

# ::snt I hate myself.
# ::tokens ["I", "hate", "myself", "."]
# ::lemmas ["i", "hate", "myself", "."]
(c6-1 / hate-01
      :ARG0 (c6-0 / i
                  :ARG1-of c6-1))
