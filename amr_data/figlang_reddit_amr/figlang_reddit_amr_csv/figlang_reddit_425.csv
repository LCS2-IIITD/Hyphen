comment,amr
"Vitalik Buterin - ""If in the future there is that kind of a dispute in Ethereum, I'd definitely be quite happy to see Ethereum A go in one direction and Ethereum B go to the other""","# ::snt Vitalik Buterin - ""If in the future there is that kind of a dispute in Ethereum, I'd definitely be quite happy to see Ethereum A go in one direction and Ethereum B go to the other""
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Vitalik""
                  :op2 ""Buterin""))
      :ARG1 (h / happy-01
            :ARG0 (s2 / see-01
                  :ARG0 p
                  :ARG1 (a / and
                        :op1 (g / go-01
                              :ARG1 (s3 / string-entity
                                    :value ""A"")
                              :direction (d / direction
                                    :mod (o / one)))
                        :op2 (g2 / go-01
                              :ARG1 (s4 / string-entity
                                    :value ""B"")
                              :direction (d2 / direction
                                    :mod (o2 / other)))))
            :ARG1 p
            :mod (d3 / definite)
            :degree (q / quite)
            :condition (d4 / dispute-01
                  :ARG2 (c / company
                        :name (n2 / name
                              :op1 ""Ethereum""))
                  :mod (k / kind
                        :mod (t / that))
                  :time (f / future))))"
"""We will bailout people if we deem our interests are at risk against our core vision of ethereum which may be changed anytime for our own gain""","# ::snt ""We will bailout people if we deem our interests are at risk against our core vision of ethereum which may be changed anytime for our own gain""
(b / bail-out-02
      :ARG0 (w / we)
      :ARG1 (p / person)
      :condition (d / deem-01
            :ARG0 w
            :ARG1 (r / risk-01
                  :ARG1 (ii / interest-01
                        :ARG1 w)
                  :ARG2 (e / envision-01
                        :ARG0 w
                        :ARG1 (c / company
                              :name (n / name
                                    :op1 ""ethereum""))
                        :mod (c2 / core)
                        :ARG1-of (c3 / change-01
                              :ARG1-of (p2 / possible-01)
                              :purpose (g / gain-02
                                    :ARG0 w)
                              :time (a / anytime))))))"
