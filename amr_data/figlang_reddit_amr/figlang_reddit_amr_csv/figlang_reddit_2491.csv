comment,amr
Remember when camouflage was actually camouflage?,"# ::snt Remember when camouflage was actually camouflage?
(r / remember-01
      :polarity (a / amr-unknown)
      :ARG1 (t / time
            :time-of (c / camouflage-01
                  :ARG1-of (a2 / actual-02)
                  :domain (c2 / camouflage-01))))"
I want the ghillie suit back.,"# ::snt I want the ghillie suit back.
(w / want-01
      :ARG0 (ii / i)
      :ARG1 (s / suit
            :mod (g / ghillie)
            :mod (b / back)))"
"Oh, I remember the days when Call of Duty had cool things like this rather than over-the-top, bright crap flying at you everywhere.","# ::snt Oh, I remember the days when Call of Duty had cool things like this rather than over-the-top, bright crap flying at you everywhere.
(r / remember-01
      :ARG0 (ii / i)
      :ARG1 (d / day
            :time-of (h / have-03
                  :ARG0 (b / broadcast-program
                        :name (n / name
                              :op1 ""Call""
                              :op2 ""Of""
                              :op3 ""Duty""))
                  :ARG1 (t / thing
                        :ARG1-of (c / cool-04)
                        :ARG1-of (r2 / resemble-01
                              :ARG2 (t2 / thing
                                    :ARG1-of (f / fly-01
                                          :direction (y / you)
                                          :path (e / everywhere))
                                    :ARG1-of (b2 / bright-02)
                                    :ARG1-of (ii2 / instead-of-91
                                          :ARG2 (t3 / thing
                                                :location (o / over-the-top))))))))
      :mod (o2 / oh
            :mode expressive))"
"That wasn't that long ago, Ghosts had Ghillie suits","# ::snt That wasn't that long ago, Ghosts had Ghillie suits
(a / and
      :op1 (b / be-temporally-at-91
            :polarity -
            :ARG1 (t / that)
            :ARG2 (b2 / before
                  :op1 (n / now)
                  :quant (l / long
                        :degree t)))
      :op2 (h / have-03
            :ARG0 (p / person
                  :name (n2 / name
                        :op1 ""Ghost""))
            :ARG1 (s / suit
                  :mod (p2 / person
                        :name (n3 / name
                              :op1 ""Ghillie"")))))"
