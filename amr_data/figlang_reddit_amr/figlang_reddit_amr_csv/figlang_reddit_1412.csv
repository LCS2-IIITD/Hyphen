comment,amr
Meta snapshot: The New Standard,"# ::snt Meta snapshot: The New Standard
(s / snapshot
      :mod (m / Meta)
      :mod (t / thing
            :name (n / name
                  :op1 ""The""
                  :op2 ""New""
                  :op3 ""Standard"")))"
"It's funny seeing people here say, ""great, now the ladder will be flooded with shaman and zoo..."" as if almost every game on ladder wasn't already against shaman or zoo.","# ::snt It's funny seeing people here say, ""great, now the ladder will be flooded with shaman and zoo..."" as if almost every game on ladder wasn't already against shaman or zoo.
(f / funny
      :domain (s / see-01
            :ARG1 (s2 / say-01
                  :ARG0 (p / person
                        :location (h / here))
                  :ARG1 (f2 / flood-01
                        :ARG1 (l / ladder)
                        :ARG2 (a / and
                              :op1 (p2 / person
                                    :name (n / name
                                          :op1 ""Shanghai""))
                              :op2 (z / zoo))
                        :time (n2 / now)
                        :mod (g / great)
                        :ARG1-of (r / resemble-01
                              :ARG2 (o / oppose-01
                                    :polarity -
                                    :ARG0 (g2 / game
                                          :mod (e / every
                                                :mod (a2 / almost))
                                          :location (l2 / ladder))
                                    :ARG1 (o2 / or
                                          :op1 p2
                                          :op2 z)
                                    :time (a3 / already)))))))"
"Around rank 17 on EU, _every_ deck I play has C'Thun in it.","# ::snt Around rank 17 on EU, _every_ deck I play has C'Thun in it.
(h / have-03
      :ARG0 (d / deck
            :ARG1-of (p / play-01
                  :ARG0 (ii / i))
            :mod (e / every))
      :ARG1 (s / string-entity
            :value ""C'Thun"")
      :location d)"
