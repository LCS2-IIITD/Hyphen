comment,amr
while (Headphones == On) do { Find_a_New_Dope_Song(); Listen_To_It_All_Day_Long(); Get_Bored_Of_It_Eventually(); } while (Headphones == On),"# ::snt while (Headphones == On) do { Find_a_New_Dope_Song(); Listen_To_It_All_Day_Long(); Get_Bored_Of_It_Eventually(); } while (Headphones == On)
(c / contrast-01
      :ARG2 (a / and
            :op1 (f / find-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (s / song
                        :name (n / name
                              :op1 ""Find_a_New_Dope_Song"")))))"
That would run code once even if *headphones* aren't equal to *on*,"# ::snt That would run code once even if *headphones* aren't equal to *on*
(r / run-01
      :frequency 1
      :ARG1 (t / that)
      :manner (c / code)
      :concession (e / even-if
            :op1 (e2 / equal-01
                  :polarity -
                  :ARG1 (h / headphones)
                  :ARG2 (o / on))))"
Should be do { if (headphones == on) { Find_a_New_Dope_Song(); Listen_To_It_All_Day_Long(); Get_Bored_Of_It_Eventually(); } else { Try_In_Vain_To_Find_Who_Stole_Your_Headphones(); Listen_To_Random_Overheard_Snippets_Of_Conversations(); } Go_Home(); Use_Computer_All_Evening_In_Slightly_Smaller_Environment(); Sleep(); } while (breathing == true); },"# ::snt Should be do { if (headphones == on) { Find_a_New_Dope_Song(); Listen_To_It_All_Day_Long(); Get_Bored_Of_It_Eventually(); } else { Try_In_Vain_To_Find_Who_Stole_Your_Headphones(); Listen_To_Random_Overheard_Snippets_Of_Conversations(); } Go_Home(); Use_Computer_All_Evening_In_Slightly_Smaller_Environment(); Sleep(); } while (breathing == true); }
(r / recommend-01
      :ARG1 (d / do-02
            :ARG1 (t / thing
                  :name (n / name
                        :op1 ""Find_a_New_Dope_Song""))
            :condition (a / and
                  :op1 (b / be-located-at-91
                        :ARG1 (h / headphones)
                        :ARG2 (o / on))
                  :op2 (s / sleep-01
                        :ARG1 h)
                  :op3 (g / get-01
                        :ARG1 (t2 / thing
                              :name (n2 / name
                                    :op1 ""Get_Bored_Of_It_Eventually"")))
                  :op4 (t3 / try-01
                        :ARG1 (t4 / thing
                              :name (n3 / name
                                    :op1 ""Try_In_Vain_To_Find_Who_Stole_Your_Headphones""))
                        :mod (e / else))))
      :condition a
      :op1 b
      :ARG1 (t5 / thing
            :name (n4 / name
                  :op1 ""Use_Computer_All_Evening_In_Slightly_Smaller_Environment""))
      :op2 b
      :ARG1 t5
      :ARG2 o)"
