comment,amr
"Zero F*CKS Friday 17/07/2015 I didn't see a post for it so I decided I'd just make one, Hope it's not a bother.","# ::snt Zero F*CKS Friday 17/07/2015 I didn't see a post for it so I decided I'd just make one, Hope it's not a bother.
(a / and
      :op1 (s / see-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (p / post-01
                  :topic (ii2 / it))
            :time (d / date-entity
                  :year 2015
                  :month 7
                  :day 17))
      :op2 (d2 / decide-01
            :ARG0 ii
            :ARG1 (m / make-01
                  :ARG0 ii
                  :ARG1 (p2 / post-01
                        :quant 1)
                  :mod (j / just)))
      :op3 (h / hope-01
            :ARG0 ii
            :ARG1 (b / bother-01
                  :polarity -
                  :ARG0 ii2)))"
"ZZ is still shit, Tough Enough is still fake, and you marks still aren't going to ""push"" Patrick to a victory if he wasn't written as the winner back before the show ever aired because IT'S FAKE.","# ::snt ZZ is still shit, Tough Enough is still fake, and you marks still aren't going to ""push"" Patrick to a victory if he wasn't written as the winner back before the show ever aired because IT'S FAKE.
(a / and
      :op1 (s / shit
            :mod (s2 / still)
            :domain (p / person
                  :name (n / name
                        :op1 ""ZZ"")))
      :op2 (f / fake-02
            :ARG1 (t / tough-03
                  :ARG2-of (h / have-degree-91
                        :ARG3 (e / enough)))
            :mod (s3 / still))
      :op3 (p2 / push-01
            :polarity -
            :ARG0 (m / mark
                  :mod (y / you))
            :ARG1 (p3 / person
                  :name (n2 / name
                        :op1 ""Patrick""))
            :ARG2 (w / win-01
                  :ARG0 p3)
            :condition (w2 / write-01
                  :polarity -
                  :ARG1 p3
                  :ARG3 (p4 / person
                        :ARG0-of w))
            :time (b / before
                  :op1 (a2 / air-01
                        :ARG1 (s4 / show)
                        :time (e2 / ever)))
            :mod (b2 / back))
      :ARG1-of (c / cause-01
            :ARG0 f
            :ARG1 s4))"
