# ::snt DaGreatOne Probably because Ty thought he had put out a winning case and wanted the defendants to pay Vic . You can see why that would be foolish , correct ? Because he had no case , as was shown by -17 with no hope for appeal . Come on , that is basic , you should know that .
# ::tokens ["DaGreatOne", "Probably", "because", "Ty", "thought", "he", "had", "put", "out", "a", "winning", "case", "and", "wanted", "the", "defendants", "to", "pay", "Vic", ".", "You", "can", "see", "why", "that", "would", "be", "foolish", ",", "correct", "?", "Because", "he", "had", "no", "case", ",", "as", "was", "shown", "by", "-17", "with", "no", "hope", "for", "appeal", ".", "Come", "on", ",", "that", "is", "basic", ",", "you", "should", "know", "that", "."]
# ::lemmas ["DaGreatOne", "Probably", "because", "ty", "think", "he", "have", "put", "out", "a", "winning", "case", "and", "want", "the", "defendant", "to", "pay", "Vic", ".", "you", "can", "see", "why", "that", "would", "be", "foolish", ",", "correct", "?", "because", "he", "have", "no", "case", ",", "as", "be", "show", "by", "-17", "with", "no", "hope", "for", "appeal", ".", "come", "on", ",", "that", "be", "basic", ",", "you", "should", "know", "that", "."]
(c1-15 / multi-sentence
       :snt1 (c1-7 / cause-01
                   :ARG0 (c1-13 / think-01
                                :ARG0 (c1-35 / person
                                             :name (c1-16 / name
                                                          :op1 "Ty"))
                                :ARG1 (c1-28 / and
                                             :op1 (c1-32 / put-out-10
                                                         :ARG0 c1-35
                                                         :ARG1 (c1-0 / case-03
                                                                     :ARG0 c1-35
                                                                     :ARG0-of (c1-8 / win-01)))
                                             :op2 (c1-18 / want-01
                                                         :ARG0 c1-35
                                                         :ARG1 (c1-23 / pay-01
                                                                      :ARG0 (c1-21 / person
                                                                                   :ARG0-of (c1-1 / defend-01))
                                                                      :ARG2 (c1-2 / person
                                                                                  :name (c1-3 / name
                                                                                              :op1 "Vic"))))))
                   :ARG1 (c1-25 / probable))
       :snt2 (c1-14 / request-confirmation-91
                    :ARG1 (c1-20 / see-01
                                 :ARG0 (c1-27 / you)
                                 :ARG1 (c1-9 / thing
                                             :ARG0-of (c1-10 / cause-01
                                                             :ARG1 (c1-29 / foolish
                                                                          :domain (c1-17 / that))))))
       :snt3 (c1-26 / cause-01
                    :ARG0 (c1-31 / have-03
                                 :ARG0 (c1-4 / he)
                                 :ARG1 (c1-22 / case-03
                                              :ARG1-of (c1-34 / show-01
                                                              :ARG0 (c1-6 / have-03
                                                                          :ARG0 c1-4
                                                                          :ARG1 (c1-12 / hope-01
                                                                                       :ARG0 c1-4
                                                                                       :ARG1 (c1-19 / appeal-01)
                                                                                       :polarity -))))
                                 :polarity -)
                    :snt4 (c1-5 / come-on-25
                                :ARG1 (c1-33 / basic
                                             :domain (c1-24 / that)
                                             :ARG1-of (c1-30 / mean-01
                                                             :ARG2 (c1-11 / recommend-01
                                                                          :ARG1 (c1-36 / know-01
                                                                                       :ARG0 c1-27
                                                                                       :ARG1 c1-33))))
                                :mode imperative)))

# ::snt DaGreatOne What was wrong ? Are you saying Ty offered to have Vic pay the defense fees ? Because that is what you are insinuating if you say I am wrong . That would make him more incompetent than I thought , which isn't really possible .
# ::tokens ["DaGreatOne", "What", "was", "wrong", "?", "Are", "you", "saying", "Ty", "offered", "to", "have", "Vic", "pay", "the", "defense", "fees", "?", "Because", "that", "is", "what", "you", "are", "insinuating", "if", "you", "say", "I", "am", "wrong", ".", "That", "would", "make", "him", "more", "incompetent", "than", "I", "thought", ",", "which", "is", "n't", "really", "possible", "."]
# ::lemmas ["DaGreatOne", "what", "be", "wrong", "?", "be", "you", "say", "Ty", "offer", "to", "have", "Vic", "pay", "the", "defense", "fee", "?", "because", "that", "be", "what", "you", "be", "insinuate", "if", "you", "say", "i", "be", "wrong", ".", "that", "would", "make", "he", "more", "incompetent", "than", "i", "think", ",", "which", "be", "not", "really", "possible", "."]
(c2-12 / multi-sentence
       :snt1 (c2-7 / wrong-02
                   :ARG1 (c2-29 / person
                                :name (c2-13 / name
                                             :op1 "DaGreatOne"))
                   :ARG2 (c2-23 / amr-unknown))
       :snt2 (c2-16 / say-01
                    :ARG0 (c2-22 / you)
                    :ARG1 (c2-9 / offer-01
                                :ARG0 (c2-27 / person
                                             :name (c2-3 / name
                                                         :op1 "Ty"))
                                :ARG1 (c2-18 / pay-01
                                             :ARG0 (c2-17 / person
                                                          :name (c2-21 / name
                                                                       :op1 "Vic"))
                                             :ARG1 (c2-24 / fee
                                                          :mod (c2-0 / defend-01))))
                    :polarity (c2-14 / amr-unknown)
                    :ARG1-of (c2-6 / cause-01
                                   :ARG0 (c2-5 / insinuate-01
                                               :ARG0 c2-22
                                               :ARG1 c2-9
                                               :condition (c2-28 / say-01
                                                                 :ARG0 c2-22
                                                                 :ARG1 (c2-15 / wrong-02
                                                                              :ARG1 (c2-19 / i))))))
       :snt3 (c2-25 / make-02
                    :ARG0 (c2-10 / that)
                    :ARG1 (c2-1 / competent-01
                                :ARG1 (c2-26 / he)
                                :ARG2-of (c2-4 / have-degree-91
                                               :ARG1 c2-26
                                               :ARG3 (c2-20 / more)
                                               :ARG4 (c2-8 / think-01
                                                           :ARG0 c2-19))
                                :polarity -)
                    :ARG1-of (c2-2 / possible-01
                                   :ARG1-of (c2-11 / real-04)
                                   :polarity -)))

# ::snt DaGreatOne And yet monica's motion to dismiss the appeal that was filed by ty beard was denied which means the appeals are going through , nice try
# ::tokens ["DaGreatOne", "And", "yet", "monica", "'s", "motion", "to", "dismiss", "the", "appeal", "that", "was", "filed", "by", "ty", "beard", "was", "denied", "which", "means", "the", "appeals", "are", "going", "through", ",", "nice", "try"]
# ::lemmas ["DaGreatOne", "and", "yet", "monica", "'s", "motion", "to", "dismiss", "the", "appeal", "that", "be", "file", "by", "ty", "beard", "be", "deny", "which", "mean", "the", "appeal", "be", "go", "through", ",", "nice", "try"]
(c3-5 / multi-sentence
      :snt1 (c3-8 / say-01
                  :ARG0 (c3-18 / person
                               :name (c3-6 / name
                                           :op1 "DaGreatOne"))
                  :ARG1 (c3-0 / deny-01
                              :ARG1 (c3-15 / motion
                                           :poss (c3-17 / person
                                                        :name (c3-1 / name
                                                                    :op1 "Monica"))
                                           :topic (c3-12 / dismiss-01
                                                         :ARG0 c3-17
                                                         :ARG1 (c3-13 / appeal-01
                                                                      :ARG1-of (c3-14 / file-01
                                                                                      :ARG0 (c3-9 / person
                                                                                                  :name (c3-11 / name
                                                                                                               :op1 "ty beard"))))))
                              :ARG1-of (c3-16 / have-concession-91)
                              :ARG0-of (c3-10 / mean-01
                                              :ARG1 (c3-4 / go-through-20
                                                          :ARG1 (c3-7 / appeal-01)))))
      :snt2 (c3-3 / try-01
                  :ARG1-of (c3-2 / nice-01)))

# ::snt DaGreatOne The motion to dismiss was only because it was filed too early . He could have refiled even had it been dismissed , so the appeal was expected . No " gotcha " moment there , try again . Though , with the intelligence you are showing , don't expect to get one .
# ::tokens ["DaGreatOne", "The", "motion", "to", "dismiss", "was", "only", "because", "it", "was", "filed", "too", "early", ".", "He", "could", "have", "refiled", "even", "had", "it", "been", "dismissed", ",", "so", "the", "appeal", "was", "expected", ".", "No", "\"", "gotcha", "\"", "moment", "there", ",", "try", "again", ".", "Though", ",", "with", "the", "intelligence", "you", "are", "showing", ",", "do", "n't", "expect", "to", "get", "one", "."]
# ::lemmas ["DaGreatOne", "the", "motion", "to", "dismiss", "be", "only", "because", "it", "be", "file", "too", "early", ".", "he", "could", "have", "refile", "even", "have", "it", "be", "dismiss", ",", "so", "the", "appeal", "be", "expect", ".", "no", "\"", "gotcha", "\"", "moment", "there", ",", "try", "again", ".", "though", ",", "with", "the", "intelligence", "you", "be", "show", ",", "do", "not", "expect", "to", "get", "one", "."]
(c4-13 / multi-sentence
       :snt1 (c4-28 / person
                    :name (c4-14 / name
                                 :op1 "DaGreatOne")
                    :ARG0-of (c4-6 / cause-01
                                   :ARG1 (c4-22 / file-01
                                                :ARG1 (c4-23 / motion
                                                             :ARG1-of (c4-0 / dismiss-01))
                                                :time (c4-16 / early
                                                             :ARG2-of (c4-24 / have-degree-91
                                                                             :ARG1 c4-22
                                                                             :ARG3 (c4-10 / too)))
                                                :mod (c4-9 / only))))
       :snt2 (c4-27 / possible-01
                    :ARG1 (c4-11 / refile-01
                                 :ARG0 (c4-3 / he)
                                 :mod (c4-25 / even)
                                 :condition (c4-18 / dismiss-01
                                                   :ARG1 c4-23)
                                 :ARG0-of (c4-1 / cause-01
                                                :ARG1 (c4-2 / expect-01
                                                            :ARG1 (c4-21 / appeal-01))))
                    :snt3 (c4-5 / have-concession-91
                                :ARG1 (c4-20 / expect-01
                                             :ARG1 (c4-12 / get-01
                                                          :ARG0 (c4-19 / you)
                                                          :ARG1 (c4-26 / one))
                                             :ARG1-of (c4-8 / cause-01
                                                            :ARG0 (c4-4 / intelligence
                                                                        :ARG1-of (c4-17 / show-01
                                                                                        :ARG0 c4-19)))
                                             :polarity -))
                    :snt4 (c4-7 / try-01
                                :ARG0 c4-19
                                :mod (c4-15 / again)
                                :mode imperative)))

# ::snt DaGreatOne Lol your attempts at damage control is pathetic . Cry harder .
# ::tokens ["DaGreatOne", "Lol", "your", "attempts", "at", "damage", "control", "is", "pathetic", ".", "Cry", "harder", "."]
# ::lemmas ["DaGreatOne", "Lol", "your", "attempt", "at", "damage", "control", "be", "pathetic", ".", "cry", "hard", "."]
(c5-11 / multi-sentence
       :snt1 (c5-0 / say-01
                   :ARG0 (c5-10 / i)
                   :ARG1 (c5-8 / pathetic
                               :domain (c5-3 / attempt-01
                                             :ARG0 (c5-7 / person
                                                         :name (c5-12 / name
                                                                      :op1 "DaGreatOne"))
                                             :ARG1 (c5-4 / control-01
                                                         :ARG0 c5-7
                                                         :ARG1 (c5-1 / damage-01))))
                   :ARG2 c5-7)
       :snt2 (c5-2 / cry-02
                   :ARG0 (c5-13 / you)
                   :manner (c5-6 / hard-02
                                 :ARG2-of (c5-9 / have-degree-91
                                                :ARG1 c5-2
                                                :ARG3 (c5-5 / more)))
                   :mode imperative))

# ::snt DaGreatOne He s literally just explaining reality , my dude . You can go fact check him . Ask where to look if you don t know .
# ::tokens ["DaGreatOne", "He", "s", "literally", "just", "explaining", "reality", ",", "my", "dude", ".", "You", "can", "go", "fact", "check", "him", ".", "Ask", "where", "to", "look", "if", "you", "don", "t", "know", "."]
# ::lemmas ["DaGreatOne", "he", "s", "literally", "just", "explain", "reality", ",", "my", "dude", ".", "you", "can", "go", "fact", "check", "he", ".", "ask", "where", "to", "look", "if", "you", "don", "t", "know", "."]
(c6-8 / multi-sentence
      :snt1 (c6-9 / explain-01
                  :ARG0 (c6-15 / he)
                  :ARG1 (c6-6 / reality)
                  :mod (c6-16 / literal)
                  :mod (c6-17 / just)
                  :ARG1-of (c6-10 / say-01
                                  :ARG0 (c6-3 / i)
                                  :ARG2 (c6-0 / dude)))
      :snt2 (c6-18 / possible-01
                   :ARG1 (c6-7 / go-05
                               :ARG0 (c6-11 / you)
                               :ARG1 (c6-4 / check-01
                                           :ARG0 c6-11
                                           :ARG1 (c6-14 / fact)
                                           :ARG2 (c6-2 / he))))
      :snt3 (c6-13 / ask-01
                   :ARG0 (c6-12 / you)
                   :ARG1 (c6-5 / thing
                               :location-of (c6-1 / look-01
                                                  :ARG0 c6-12))
                   :ARG2 c6-2
                   :condition (c6-19 / know-01
                                     :ARG0 c6-12
                                     :polarity -)
                   :mode imperative))

# ::snt DaGreatOne Reality is that there is no evidence against vic , no police reports and if it's true and they knew about it why didn't anyone go to the police ? ! Why didn't they do anything about it ? ! Why didn't they stop him ? ! Why did they allow it to continue for an entire decade ? ! ! !
# ::tokens ["DaGreatOne", "Reality", "is", "that", "there", "is", "no", "evidence", "against", "vic", ",", "no", "police", "reports", "and", "if", "it", "'s", "true", "and", "they", "knew", "about", "it", "why", "did", "n't", "anyone", "go", "to", "the", "police", "?", "!", "Why", "did", "n't", "they", "do", "anything", "about", "it", "?", "!", "Why", "did", "n't", "they", "stop", "him", "?", "!", "Why", "did", "they", "allow", "it", "to", "continue", "for", "an", "entire", "decade", "?", "!", "!", "!"]
# ::lemmas ["DaGreatOne", "Reality", "be", "that", "there", "be", "no", "evidence", "against", "vic", ",", "no", "police", "report", "and", "if", "it", "be", "true", "and", "they", "know", "about", "it", "why", "do", "not", "anyone", "go", "to", "the", "police", "?", "!", "why", "do", "not", "they", "do", "anything", "about", "it", "?", "!", "why", "do", "not", "they", "stop", "he", "?", "!", "why", "do", "they", "allow", "it", "to", "continue", "for", "an", "entire", "decade", "?", "!", "!", "!"]
(c7-27 / and
       :op1 (c7-18 / and
                   :op1 (c7-19 / evidence-01
                               :prep-against (c7-11 / vic)
                               :polarity -)
                   :op2 (c7-14 / report-01
                               :ARG0 (c7-31 / police)
                               :polarity -)
                   :op3 (c7-15 / go-02
                               :ARG0 (c7-1 / anyone)
                               :ARG4 (c7-30 / police)
                               :ARG1-of (c7-6 / cause-01
                                              :ARG0 (c7-33 / amr-unknown))
                               :condition (c7-3 / and
                                                :op1 (c7-13 / true-01
                                                            :ARG1 (c7-4 / it))
                                                :op2 (c7-32 / know-01
                                                            :ARG0 c7-30
                                                            :ARG1 c7-13))
                               :polarity -)
                   :op2 (c7-24 / amr-unknown
                               :ARG0-of (c7-0 / cause-01
                                              :ARG1 (c7-2 / do-02
                                                          :ARG0 c7-30
                                                          :ARG1 (c7-10 / anything)
                                                          :ARG2 c7-4
                                                          :polarity -))
                               :op3 (c7-7 / amr-unknown
                                          :ARG0-of (c7-9 / cause-01
                                                         :ARG1 (c7-20 / stop-01
                                                                      :ARG0 c7-30
                                                                      :ARG1 (c7-28 / he)
                                                                      :polarity -)))
                               :op4 (c7-23 / amr-unknown
                                           :ARG0-of (c7-25 / cause-01
                                                           :ARG1 (c7-21 / allow-01
                                                                        :ARG0 c7-30
                                                                        :ARG1 (c7-22 / continue-01
                                                                                     :ARG1 c7-4
                                                                                     :duration (c7-8 / temporal-quantity
                                                                                                     :unit (c7-26 / decade
                                                                                                                  :mod (c7-29 / entire))
                                                                                                     :quant 1)))))
                               :op5 (c7-16 / amr-unknown
                                           :ARG0-of (c7-5 / cause-01
                                                          :ARG1 c7-21)))
                   :domain (c7-12 / reality
                                  :name (c7-17 / name
                                               :op1 "DaGreatOne"))))

# ::snt DaGreatOne There is evidence , that is what the depositions are . Evidence . And since no one is being charged with perjury , the court feels they are true . Including Vic , who gave damnable testimony against himself .
# ::tokens ["DaGreatOne", "There", "is", "evidence", ",", "that", "is", "what", "the", "depositions", "are", ".", "Evidence", ".", "And", "since", "no", "one", "is", "being", "charged", "with", "perjury", ",", "the", "court", "feels", "they", "are", "true", ".", "Including", "Vic", ",", "who", "gave", "damnable", "testimony", "against", "himself", "."]
# ::lemmas ["DaGreatOne", "there", "be", "evidence", ",", "that", "be", "what", "the", "deposition", "be", ".", "evidence", ".", "and", "since", "no", "one", "be", "be", "charge", "with", "perjury", ",", "the", "court", "feel", "they", "be", "true", ".", "include", "Vic", ",", "who", "give", "damnable", "testimony", "against", "himself", "."]
(c8-8 / multi-sentence
      :snt1 (c8-19 / person
                   :name (c8-9 / name
                               :op1 "DaGreatOne"))
      :snt2 (c8-11 / evidence-01)
      :snt3 (c8-17 / evidence-01)
      :snt4 (c8-15 / and
                   :op2 (c8-16 / feel-02
                               :ARG0 (c8-4 / court)
                               :ARG1 (c8-7 / true-01
                                           :ARG1 (c8-5 / they))
                               :ARG1-of (c8-0 / cause-01
                                              :ARG0 (c8-6 / charge-05
                                                          :ARG1 (c8-2 / no-one)
                                                          :ARG2 (c8-18 / perjure-01
                                                                       :ARG0 c8-2)))))
      :snt5 (c8-3 / include-01
                  :ARG1 (c8-13 / person
                               :name (c8-14 / name
                                            :op1 "Vic")
                               :ARG0-of (c8-10 / testify-01
                                               :ARG1-of (c8-1 / damn-01
                                                              :ARG1-of (c8-12 / possible-01))
                                               :prep-against c8-13))))

# ::snt DaGreatOne So why did lemon try to depose Chris slatosch then ?
# ::tokens ["DaGreatOne", "So", "why", "did", "lemon", "try", "to", "depose", "Chris", "slatosch", "then", "?"]
# ::lemmas ["DaGreatOne", "so", "why", "do", "lemon", "try", "to", "depose", "Chris", "slatosch", "then", "?"]
(c9-1 / ask-01
      :ARG0 (c9-10 / i)
      :ARG1 (c9-2 / cause-01
                  :ARG0 (c9-12 / amr-unknown)
                  :ARG1 (c9-7 / try-01
                              :ARG0 (c9-9 / person
                                          :name (c9-11 / name
                                                       :op1 "Lemon"))
                              :ARG1 (c9-0 / depose-02
                                          :ARG0 c9-9
                                          :ARG1 (c9-6 / person
                                                      :name (c9-8 / name
                                                                  :op1 "Chris"
                                                                  :op2 "Slatosch")))
                              :time (c9-3 / then)))
      :ARG2 (c9-4 / person
                  :name (c9-5 / name
                              :op1 "DaGreatOne")))

# ::snt DaGreatOne I knew some speculation about that at some point , but no longer recall what it was they were going to ask him about . So I can't answer that off the top of my head .
# ::tokens ["DaGreatOne", "I", "knew", "some", "speculation", "about", "that", "at", "some", "point", ",", "but", "no", "longer", "recall", "what", "it", "was", "they", "were", "going", "to", "ask", "him", "about", ".", "So", "I", "ca", "n't", "answer", "that", "off", "the", "top", "of", "my", "head", "."]
# ::lemmas ["DaGreatOne", "i", "know", "some", "speculation", "about", "that", "at", "some", "point", ",", "but", "no", "long", "recall", "what", "it", "be", "they", "be", "go", "to", "ask", "he", "about", ".", "so", "i", "can", "not", "answer", "that", "off", "the", "top", "of", "my", "head", "."]
(c10-9 / multi-sentence
       :snt1 (c10-13 / say-01
                     :ARG0 (c10-3 / i)
                     :ARG1 (c10-5 / contrast-01
                                  :ARG1 (c10-25 / know-01
                                                :ARG0 c10-3
                                                :ARG1 (c10-23 / speculate-01
                                                              :ARG2 (c10-7 / that)
                                                              :quant (c10-16 / some)
                                                              :time (c10-24 / point
                                                                            :mod (c10-4 / some))))
                                  :ARG2 (c10-8 / recall-02
                                               :ARG0 c10-3
                                               :ARG1 (c10-6 / thing
                                                            :ARG1-of (c10-18 / ask-01
                                                                             :ARG0 (c10-11 / they)
                                                                             :ARG2 (c10-20 / he
                                                                                           :part (c10-2 / head))))
                                               :time (c10-10 / no-longer)))
                     :ARG2 (c10-21 / person
                                   :name (c10-1 / name
                                                :op1 "DaGreatOne")))
       :snt2 (c10-0 / cause-01
                    :ARG1 (c10-14 / possible-01
                                  :ARG1 (c10-12 / answer-01
                                                :ARG0 (c10-15 / i
                                                              :part c10-2)
                                                :ARG1 (c10-17 / that)
                                                :manner (c10-22 / be-from-91
                                                                :ARG1 c10-17
                                                                :ARG2 (c10-19 / top
                                                                              :part-of c10-2)))
                                  :polarity -)))

# ::snt DaGreatOne So you don't know why and you're just grasping at straws then ?
# ::tokens ["DaGreatOne", "So", "you", "do", "n't", "know", "why", "and", "you", "'re", "just", "grasping", "at", "straws", "then", "?"]
# ::lemmas ["DaGreatOne", "so", "you", "do", "not", "know", "why", "and", "you", "be", "just", "grasp", "at", "straw", "then", "?"]
(c11-0 / say-01
       :ARG0 (c11-9 / i)
       :ARG1 (c11-1 / and
                    :op1 (c11-10 / know-01
                                 :ARG0 (c11-5 / person
                                              :name (c11-6 / name
                                                           :op1 "DaGreatOne"))
                                 :ARG1 (c11-3 / thing
                                              :ARG0-of (c11-2 / cause-01))
                                 :polarity -)
                    :op2 (c11-7 / grasp-01
                                :ARG0 c11-5
                                :ARG1 (c11-8 / straw)
                                :mod (c11-4 / just))
                    :polarity (c11-11 / amr-unknown))
       :ARG2 c11-5)

# ::snt DaGreatOne Um , no , I have multiple other points that back me up . Read my previous comment in the thread , for example . I know you struggle to keep up with conversations , but do better .
# ::tokens ["DaGreatOne", "Um", ",", "no", ",", "I", "have", "multiple", "other", "points", "that", "back", "me", "up", ".", "Read", "my", "previous", "comment", "in", "the", "thread", ",", "for", "example", ".", "I", "know", "you", "struggle", "to", "keep", "up", "with", "conversations", ",", "but", "do", "better", "."]
# ::lemmas ["DaGreatOne", "Um", ",", "no", ",", "i", "have", "multiple", "other", "point", "that", "back", "i", "up", ".", "read", "my", "previous", "comment", "in", "the", "thread", ",", "for", "example", ".", "i", "know", "you", "struggle", "to", "keep", "up", "with", "conversation", ",", "but", "do", "well", "."]
(c12-10 / multi-sentence
        :snt1 (c12-13 / say-01
                      :ARG0 (c12-3 / i)
                      :ARG1 (c12-20 / have-03
                                    :ARG0 c12-3
                                    :ARG1 (c12-24 / point
                                                  :quant (c12-19 / multiple)
                                                  :mod (c12-6 / other)
                                                  :ARG0-of (c12-22 / back-up-04
                                                                   :ARG1 c12-3)))
                      :ARG2 (c12-21 / person
                                    :name (c12-11 / name
                                                  :op1 "DaGreatOne")))
        :snt2 (c12-12 / exemplify-01
                      :ARG0 (c12-8 / read-01
                                   :ARG0 (c12-18 / you)
                                   :ARG1 (c12-5 / comment-01
                                                :ARG0 (c12-15 / i)
                                                :time (c12-14 / previous)
                                                :location (c12-7 / thread))
                                   :mode imperative))
        :snt3 (c12-25 / know-01
                      :ARG0 (c12-16 / i)
                      :ARG1 (c12-23 / struggle-02
                                    :ARG0 c12-18
                                    :ARG1 (c12-4 / keep-up-05
                                                 :ARG0 c12-18
                                                 :ARG1 (c12-0 / converse-01))
                                    :concession-of (c12-1 / do-02
                                                          :ARG0 c12-18
                                                          :ARG1 (c12-9 / good-02
                                                                       :ARG2-of (c12-2 / have-degree-91
                                                                                       :ARG1 c12-1
                                                                                       :ARG3 (c12-17 / more)))))))

# ::snt DaGreatOne You people seem to forget that the case is a " civil case " and not a criminal one , so the accusations are just " assumed " true ... there's no evidence to back up the affidavits .
# ::tokens ["DaGreatOne", "You", "people", "seem", "to", "forget", "that", "the", "case", "is", "a", "\"", "civil", "case", "\"", "and", "not", "a", "criminal", "one", ",", "so", "the", "accusations", "are", "just", "\"", "assumed", "\"", "true", "...", "there", "'s", "no", "evidence", "to", "back", "up", "the", "affidavits", "."]
# ::lemmas ["DaGreatOne", "you", "people", "seem", "to", "forget", "that", "the", "case", "be", "a", "\"", "civil", "case", "\"", "and", "not", "a", "criminal", "one", ",", "so", "the", "accusation", "be", "just", "\"", "assume", "\"", "true", "...", "there", "be", "no", "evidence", "to", "back", "up", "the", "affidavit", "."]
(c13-10 / say-01
        :ARG0 (c13-2 / i)
        :ARG1 (c13-14 / seem-01
                      :ARG1 (c13-16 / forget-01
                                    :ARG0 (c13-20 / person
                                                  :mod (c13-13 / you))
                                    :ARG1 (c13-15 / and
                                                  :op1 (c13-4 / case-03
                                                              :ARG1 (c13-0 / civil))
                                                  :op2 (c13-5 / case-03
                                                              :ARG1-of (c13-12 / criminal-03)
                                                              :polarity -)
                                                  :domain (c13-11 / case-03))
                                    :ARG0-of (c13-3 / cause-01
                                                    :ARG1 (c13-8 / assume-02
                                                                 :ARG1 (c13-6 / true-01
                                                                              :ARG1 (c13-1 / accuse-01))
                                                                 :mod (c13-19 / just))))
                      :ARG2 (c13-9 / evidence-01
                                   :ARG0-of (c13-18 / back-up-04
                                                    :ARG1 (c13-21 / affidavit))
                                   :polarity -))
        :ARG2 (c13-17 / person
                      :name (c13-7 / name
                                   :op1 "DaGreatOne")))

# ::snt DaGreatOne No . None of that is correct . Do you want the real answer ?
# ::tokens ["DaGreatOne", "No", ".", "None", "of", "that", "is", "correct", ".", "Do", "you", "want", "the", "real", "answer", "?"]
# ::lemmas ["DaGreatOne", "no", ".", "none", "of", "that", "be", "correct", ".", "do", "you", "want", "the", "real", "answer", "?"]
(c14-11 / multi-sentence
        :snt1 (c14-0 / say-01
                     :ARG0 (c14-10 / i)
                     :ARG2 (c14-8 / person
                                  :name (c14-12 / name
                                                :op1 "DaGreatOne"))
                     :mod (c14-7 / no))
        :snt2 (c14-2 / correct-02
                     :ARG1 (c14-6 / that
                                  :mod (c14-5 / none)))
        :snt3 (c14-3 / want-01
                     :ARG0 (c14-13 / you)
                     :ARG1 (c14-4 / thing
                                  :ARG2-of (c14-1 / answer-01)
                                  :ARG1-of (c14-9 / real-04))
                     :polarity (c14-14 / amr-unknown)))

# ::snt DaGreatOne Rabbit , I was talking about this bit : so the accusations are just " assumed " true ... there's no evidence to back up the affidavits . We don t have private prosecution here in the US .
# ::tokens ["DaGreatOne", "Rabbit", ",", "I", "was", "talking", "about", "this", "bit", ":", "so", "the", "accusations", "are", "just", "\"", "assumed", "\"", "true", "...", "there", "'s", "no", "evidence", "to", "back", "up", "the", "affidavits", ".", "We", "don", "t", "have", "private", "prosecution", "here", "in", "the", "US", "."]
# ::lemmas ["DaGreatOne", "Rabbit", ",", "i", "be", "talk", "about", "this", "bit", ":", "so", "the", "accusation", "be", "just", "\"", "assume", "\"", "true", "...", "there", "be", "no", "evidence", "to", "back", "up", "the", "affidavit", ".", "we", "don", "t", "have", "private", "prosecution", "here", "in", "the", "US", "."]
(c15-9 / multi-sentence
       :snt1 (c15-14 / say-01
                     :ARG0 (c15-4 / i)
                     :ARG1 (c15-8 / talk-01
                                  :ARG0 c15-4
                                  :ARG1 (c15-20 / bit
                                                :mod (c15-7 / this)))
                     :ARG2 (c15-22 / person
                                   :name (c15-10 / name
                                                 :op1 "DaGreatOne"
                                                 :op2 "R Rabbit")))
       :snt2 (c15-5 / cause-01
                    :ARG0 (c15-17 / assume-02
                                  :ARG1 (c15-11 / true-01
                                                :ARG1 (c15-12 / accuse-01))
                                  :mod (c15-21 / just))
                    :ARG1 (c15-13 / evidence-01
                                  :ARG0-of (c15-16 / back-up-04
                                                   :ARG1 (c15-1 / affidavit))
                                  :polarity -))
       :snt3 (c15-18 / have-03
                     :ARG0 (c15-6 / we)
                     :ARG1 (c15-19 / prosecute-01
                                   :ARG1-of (c15-15 / private-02)
                                   :location (c15-3 / here
                                                    :location (c15-0 / country
                                                                     :name (c15-2 / name
                                                                                  :op1 "US"))))
                     :polarity -))

# ::snt DaGreatOne Ok , prove that the accusations are true , and that the women are totally traumatized by the events
# ::tokens ["DaGreatOne", "Ok", ",", "prove", "that", "the", "accusations", "are", "true", ",", "and", "that", "the", "women", "are", "totally", "traumatized", "by", "the", "events"]
# ::lemmas ["DaGreatOne", "Ok", ",", "prove", "that", "the", "accusation", "be", "true", ",", "and", "that", "the", "woman", "be", "totally", "traumatize", "by", "the", "event"]
(c16-0 / say-01
       :ARG0 (c16-8 / i)
       :ARG1 (c16-1 / and
                    :op1 (c16-7 / prove-01
                                :ARG0 (c16-5 / person
                                             :name (c16-9 / name
                                                          :op1 "DaGreatOne"))
                                :ARG1 (c16-6 / true-01
                                             :ARG1 (c16-11 / accuse-01))
                                :mode imperative)
                    :op2 (c16-3 / traumatize-01
                                :ARG0 (c16-12 / event)
                                :ARG1 (c16-2 / woman)
                                :degree (c16-10 / total)))
       :ARG2 c16-5
       :ARG1-of (c16-4 / okay-04))

# ::snt DaGreatOne The accusations are true because the court believes the depositions and did not charge anyone with perjury . They are also true because Vic admitted to them . Prove they are not .
# ::tokens ["DaGreatOne", "The", "accusations", "are", "true", "because", "the", "court", "believes", "the", "depositions", "and", "did", "not", "charge", "anyone", "with", "perjury", ".", "They", "are", "also", "true", "because", "Vic", "admitted", "to", "them", ".", "Prove", "they", "are", "not", "."]
# ::lemmas ["DaGreatOne", "the", "accusation", "be", "true", "because", "the", "court", "believe", "the", "deposition", "and", "do", "not", "charge", "anyone", "with", "perjury", ".", "they", "be", "also", "true", "because", "Vic", "admit", "to", "they", ".", "prove", "they", "be", "not", "."]
(c17-9 / multi-sentence
       :snt1 (c17-13 / say-01
                     :ARG0 (c17-21 / person
                                   :name (c17-10 / name
                                                 :op1 "DaGreatOne"))
                     :ARG1 (c17-8 / true-01
                                  :ARG1 (c17-18 / accuse-01)
                                  :ARG1-of (c17-5 / cause-01
                                                  :ARG0 (c17-12 / and
                                                                :op1 (c17-20 / believe-01
                                                                             :ARG0 (c17-0 / court)
                                                                             :ARG1 (c17-1 / deposition-00))
                                                                :op2 (c17-7 / charge-05
                                                                            :ARG0 c17-0
                                                                            :ARG1 (c17-2 / anyone)
                                                                            :ARG2 (c17-19 / perjure-01
                                                                                          :ARG0 c17-2)
                                                                            :polarity -)))))
       :snt2 (c17-6 / true-01
                    :ARG1 c17-18
                    :ARG1-of (c17-17 / cause-01
                                     :ARG0 (c17-22 / admit-01
                                                   :ARG0 (c17-15 / person
                                                                 :name (c17-4 / name
                                                                              :op1 "Vic"))
                                                   :ARG1 (c17-11 / they)))
                    :mod (c17-3 / also))
       :snt3 (c17-14 / prove-01
                     :ARG1 (c17-16 / they
                                   :polarity -)))

# ::snt DaGreatOne Oh yes look how traumatized monica looks when she had dinner with him last year and the emoji she used totally shows that she's traumatized when around vic <URL>
# ::tokens ["DaGreatOne", "Oh", "yes", "look", "how", "traumatized", "monica", "looks", "when", "she", "had", "dinner", "with", "him", "last", "year", "and", "the", "emoji", "she", "used", "totally", "shows", "that", "she", "'s", "traumatized", "when", "around", "vic", "<", "URL", ">"]
# ::lemmas ["DaGreatOne", "oh", "yes", "look", "how", "traumatize", "monica", "look", "when", "she", "have", "dinner", "with", "he", "last", "year", "and", "the", "emoji", "she", "use", "totally", "show", "that", "she", "be", "traumatized", "when", "around", "vic", "<", "URL", ">"]
(c18-7 / multi-sentence
       :snt1 (c18-12 / say-01
                     :ARG0 (c18-4 / i)
                     :ARG1 (c18-17 / and
                                   :op1 (c18-21 / look-01
                                                :ARG0 (c18-23 / person
                                                              :name (c18-8 / name
                                                                           :op1 "DaGreatOne"))
                                                :ARG1 (c18-6 / thing
                                                             :degree-of (c18-5 / traumatize-01
                                                                               :ARG1 (c18-20 / person
                                                                                             :name (c18-1 / name
                                                                                                          :op1 "Monica"))
                                                                               :time (c18-18 / have-06
                                                                                             :ARG0 c18-20
                                                                                             :ARG1 (c18-0 / dinner)
                                                                                             :accompanier (c18-3 / he)
                                                                                             :time (c18-16 / year
                                                                                                           :mod (c18-2 / last)))))
                                                :mode imperative)
                                   :op2 (c18-22 / show-01
                                                :ARG0 (c18-11 / emote-01
                                                              :ARG1-of (c18-19 / use-01
                                                                               :ARG0 c18-20))
                                                :ARG1 (c18-9 / traumatize-01
                                                             :ARG1 c18-20
                                                             :time (c18-10 / around
                                                                           :op1 c18-20))
                                                :mod (c18-14 / total)))
                     :ARG2 c18-23)
       :snt2 (c18-13 / person
                     :name (c18-15 / name
                                   :op1 "DaGreatOne")))
