# ::snt You do realize you're whining about another fan base while calling them whiners . Think about that for a sec . <URL>
# ::tokens ["You", "do", "realize", "you", "'re", "whining", "about", "another", "fan", "base", "while", "calling", "them", "whiners", ".", "Think", "about", "that", "for", "a", "sec", ".", "<", "URL", ">"]
# ::lemmas ["you", "do", "realize", "you", "be", "whine", "about", "another", "fan", "base", "while", "call", "they", "whiner", ".", "think", "about", "that", "for", "a", "sec", ".", "<", "URL", ">"]
(c1-10 / multi-sentence
       :snt1 (c1-7 / realize-01
                   :ARG0 (c1-11 / you)
                   :ARG1 (c1-4 / whine-01
                               :ARG0 c1-11
                               :ARG3 (c1-8 / base
                                           :mod (c1-2 / fan)
                                           :mod (c1-1 / another))
                               :time (c1-3 / call-01
                                           :ARG0 c1-11
                                           :ARG1 c1-8
                                           :ARG2 (c1-9 / person
                                                       :ARG0-of c1-4))))
       :snt2 (c1-6 / think-01
                   :ARG0 (c1-12 / you)
                   :ARG1 c1-4
                   :duration (c1-5 / temporal-quantity
                                   :unit (c1-0 / sec)
                                   :quant 1)
                   :mode imperative))

# ::snt and conveniently leaving out that Purdue fans trashed the hell out of Gary Harris and Branden Dawson
# ::tokens ["and", "conveniently", "leaving", "out", "that", "Purdue", "fans", "trashed", "the", "hell", "out", "of", "Gary", "Harris", "and", "Branden", "Dawson"]
# ::lemmas ["and", "conveniently", "leave", "out", "that", "Purdue", "fan", "trash", "the", "hell", "out", "of", "Gary", "Harris", "and", "Branden", "Dawson"]
(c2-0 / and
      :op2 (c2-9 / leave-out-03
                 :ARG1 (c2-7 / trash-01
                             :ARG0 (c2-1 / fan
                                         :mod (c2-3 / team
                                                    :name (c2-11 / name
                                                                 :op1 "Purdue")))
                             :ARG1 (c2-12 / and
                                          :op1 (c2-10 / person
                                                      :name (c2-8 / name
                                                                  :op1 "Gary"
                                                                  :op2 "Harris"))
                                          :op2 (c2-6 / person
                                                     :name (c2-5 / name
                                                                 :op1 "Branden"
                                                                 :op2 "Dawson")))
                             :degree (c2-4 / hell))
                 :manner (c2-2 / convenient)))

# ::snt didn't painter's own daughter tweet out something like " I hope Dawson gets hit by a truck " ?
# ::tokens ["did", "n't", "painter", "'s", "own", "daughter", "tweet", "out", "something", "like", "\"", "I", "hope", "Dawson", "gets", "hit", "by", "a", "truck", "\"", "?"]
# ::lemmas ["do", "not", "painter", "'s", "own", "daughter", "tweet", "out", "something", "like", "\"", "i", "hope", "Dawson", "gets", "hit", "by", "a", "truck", "\"", "?"]
(c3-10 / tweet-02
       :ARG0 (c3-13 / person
                    :ARG0-of (c3-7 / have-rel-role-91
                                   :ARG1 (c3-9 / person
                                               :ARG0-of (c3-6 / paint-02))
                                   :ARG2 (c3-0 / daughter)))
       :ARG1 (c3-1 / something
                   :ARG1-of (c3-11 / resemble-01
                                   :ARG2 (c3-12 / hope-01
                                                :ARG0 c3-13
                                                :ARG1 (c3-2 / hit-01
                                                            :ARG0 (c3-5 / truck)
                                                            :ARG1 (c3-4 / person
                                                                        :name (c3-14 / name
                                                                                     :op1 "Dawson"))))))
       :direction (c3-8 / out)
       :polarity (c3-3 / amr-unknown)
       :polarity -)
