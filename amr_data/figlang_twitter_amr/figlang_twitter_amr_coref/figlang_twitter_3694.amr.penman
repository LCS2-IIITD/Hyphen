# ::snt Security Graduation confiscated paper , pens , pencils , lipstick , eyebrow pencils , mascaras , anything that can wri <URL>
# ::tokens ["Security", "Graduation", "confiscated", "paper", ",", "pens", ",", "pencils", ",", "lipstick", ",", "eyebrow", "pencils", ",", "mascaras", ",", "anything", "that", "can", "wri", "<", "URL", ">"]
# ::lemmas ["Security", "Graduation", "confiscate", "paper", ",", "pen", ",", "pencil", ",", "lipstick", ",", "eyebrow", "pencil", ",", "mascaras", ",", "anything", "that", "can", "wri", "<", "URL", ">"]
(c1-1 / confiscate-01
      :ARG0 (c1-6 / thing
                  :name (c1-10 / name
                               :op1 "Security"
                               :op2 "Graduate"))
      :ARG1 (c1-0 / and
                  :op1 (c1-8 / paper)
                  :op2 (c1-5 / pen)
                  :op3 (c1-4 / pencil)
                  :op4 (c1-7 / lipstick)
                  :op5 c1-4
                  :part (c1-12 / eyebrow))
      :op6 (c1-9 / mascaras)
      :op7 (c1-11 / anything
                  :ARG0-of (c1-2 / wri-01
                                 :ARG1-of (c1-3 / possible-01))))

# ::snt after the officer who took a baby for a fine , I no longer doubt these security forces will do anything to get tgeir way
# ::tokens ["after", "the", "officer", "who", "took", "a", "baby", "for", "a", "fine", ",", "I", "no", "longer", "doubt", "these", "security", "forces", "will", "do", "anything", "to", "get", "tgeir", "way"]
# ::lemmas ["after", "the", "officer", "who", "take", "a", "baby", "for", "a", "fine", ",", "i", "no", "long", "doubt", "these", "security", "force", "will", "do", "anything", "to", "get", "tgeir", "way"]
(c2-0 / doubt-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-13 / do-02
                   :ARG0 (c2-15 / force
                                :mod (c2-11 / security)
                                :mod (c2-7 / this))
                   :ARG1 (c2-14 / anything)
                   :purpose (c2-8 / get-05
                                  :ARG0 c2-15
                                  :ARG1 (c2-4 / way
                                              :mod (c2-3 / country
                                                         :name (c2-9 / name
                                                                     :op1 "Taiwan")))))
      :time (c2-1 / no-longer)
      :time (c2-10 / after
                   :op1 (c2-18 / person
                               :ARG0-of (c2-16 / have-org-role-91
                                               :ARG2 (c2-6 / officer))
                               :ARG0-of (c2-5 / take-01
                                              :ARG1 (c2-17 / baby)
                                              :ARG3 (c2-12 / fine)))))

# ::snt & he is still free to walk streets ? If ever there was evidence we've achieved banana Rep status
# ::tokens ["&", "he", "is", "still", "free", "to", "walk", "streets", "?", "If", "ever", "there", "was", "evidence", "we", "'ve", "achieved", "banana", "Rep", "status"]
# ::lemmas ["&", "he", "be", "still", "free", "to", "walk", "street", "?", "if", "ever", "there", "be", "evidence", "we", "'ve", "achieve", "banana", "Rep", "status"]
(c3-12 / multi-sentence
       :snt1 (c3-1 / and
                   :op2 (c3-2 / free-04
                              :ARG1 (c3-5 / he)
                              :ARG3 (c3-3 / walk-01
                                          :ARG0 c3-5
                                          :ARG2 (c3-0 / street))
                              :mod (c3-10 / still)))
       :snt2 (c3-8 / have-condition-91
                   :ARG2 (c3-15 / evidence-01
                                :ARG1 (c3-14 / achieve-01
                                             :ARG0 (c3-4 / we)
                                             :ARG1 (c3-6 / status
                                                         :mod (c3-11 / political-party
                                                                     :name (c3-13 / name
                                                                                  :op1 "Rep")
                                                                     :mod (c3-9 / banana)))))
                   :time (c3-7 / ever)))
