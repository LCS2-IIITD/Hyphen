# ::snt Mr CEO my TV and tech supports sucks .. makes me want to return the two sets I purchased ... my TV is not smart ... buyers beware
# ::tokens ["Mr", "CEO", "my", "TV", "and", "tech", "supports", "sucks", "..", "makes", "me", "want", "to", "return", "the", "two", "sets", "I", "purchased", "...", "my", "TV", "is", "not", "smart", "...", "buyers", "beware"]
# ::lemmas ["Mr", "CEO", "my", "tv", "and", "tech", "support", "suck", "..", "make", "i", "want", "to", "return", "the", "two", "set", "i", "purchase", "...", "my", "tv", "be", "not", "smart", "...", "buyer", "beware"]
(c1-16 / multi-sentence
       :snt1 (c1-0 / suck-03
                   :ARG0 (c1-2 / and
                               :op1 (c1-9 / television
                                          :poss (c1-15 / i))
                               :op2 (c1-14 / support-01
                                           :ARG0 c1-15
                                           :ARG1 (c1-5 / tech)))
                   :ARG1 c1-15)
       :snt2 (c1-3 / make-02
                   :ARG0 (c1-7 / smart-06
                               :ARG1 (c1-17 / television
                                            :poss (c1-6 / i))
                               :polarity -)
                   :ARG1 (c1-4 / want-01
                               :ARG0 c1-6
                               :ARG1 (c1-10 / return-02
                                            :ARG0 c1-6
                                            :ARG1 (c1-11 / set
                                                         :ARG1-of (c1-12 / purchase-01
                                                                         :ARG0 c1-6)
                                                         :quant 2))))
       :snt3 (c1-13 / beware-01
                    :ARG0 (c1-8 / person
                                :ARG0-of (c1-1 / buy-01))))

# ::snt I am sorry to hear that you are having an issue with your TV . Do you have a case number I can review ? - Josh
# ::tokens ["I", "am", "sorry", "to", "hear", "that", "you", "are", "having", "an", "issue", "with", "your", "TV", ".", "Do", "you", "have", "a", "case", "number", "I", "can", "review", "?", "-", "Josh"]
# ::lemmas ["i", "be", "sorry", "to", "hear", "that", "you", "be", "have", "an", "issue", "with", "your", "tv", ".", "do", "you", "have", "a", "case", "number", "i", "can", "review", "?", "-", "Josh"]
(c2-13 / multi-sentence
       :snt1 (c2-0 / sorry-01
                   :ARG1 (c2-12 / i)
                   :ARG2 (c2-3 / hear-01
                               :ARG0 c2-12
                               :ARG1 (c2-4 / issue-02
                                           :ARG0 (c2-7 / television
                                                       :poss (c2-15 / you
                                                                    :ARG1-of c2-4)))))
       :snt2 (c2-11 / have-03
                    :ARG0 (c2-16 / you)
                    :ARG1 (c2-14 / number
                                 :mod (c2-2 / case)
                                 :ARG1-of (c2-8 / review-01
                                                :ARG0 (c2-5 / i)
                                                :ARG1-of (c2-9 / possible-01)))
                    :polarity (c2-1 / amr-unknown))
       :snt3 (c2-6 / person
                   :name (c2-10 / name
                                :op1 "Josh")))

# ::snt ... We are continually testing new applications for consideration on our VIA products . At this time I do not have a ... /3
# ::tokens ["...", "We", "are", "continually", "testing", "new", "applications", "for", "consideration", "on", "our", "VIA", "products", ".", "At", "this", "time", "I", "do", "not", "have", "a", "...", "/3"]
# ::lemmas ["...", "we", "be", "continually", "test", "new", "application", "for", "consideration", "on", "our", "VIA", "product", ".", "at", "this", "time", "i", "do", "not", "have", "a", "...", "/3"]
(c3-10 / multi-sentence
       :snt1 (c3-7 / test-01
                   :ARG0 (c3-3 / we)
                   :ARG1 (c3-1 / apply-01
                               :ARG1-of (c3-11 / new-01))
                   :ARG1-of (c3-2 / continue-01)
                   :purpose (c3-0 / consider-02
                                  :ARG1 c3-1
                                  :ARG2 (c3-9 / product
                                              :poss (c3-13 / we)
                                              :mod c3-9
                                              :name (c3-8 / name
                                                          :op1 "VIA"))))
       :snt2 (c3-6 / have-03
                   :ARG0 (c3-4 / i)
                   :ARG1 (c3-5 / thing
                               :mod 3)
                   :time (c3-12 / this)
                   :polarity -))
