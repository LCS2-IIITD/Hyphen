# ::snt secure check out page doesn't load ... can't go beyond ' place order ' .
# ::tokens ["secure", "check", "out", "page", "does", "n't", "load", "...", "ca", "n't", "go", "beyond", "'", "place", "order", "'", "."]
# ::lemmas ["secure", "check", "out", "page", "do", "not", "load", "...", "can", "not", "go", "beyond", "'", "place", "order", "'", "."]
(c1-1 / and
      :op1 (c1-6 / load-01
                 :ARG1 (c1-8 / page
                             :mod (c1-2 / check-out-05)
                             :ARG1-of (c1-0 / secure-02))
                 :polarity -)
      :op2 (c1-5 / possible-01
                 :ARG1 (c1-7 / go-01
                             :ARG1 c1-8
                             :ARG4 (c1-9 / beyond
                                         :op1 (c1-4 / order-01
                                                    :ARG2 (c1-3 / place))))
                 :polarity -))

# ::snt We truly do apologize for this inconvenience you've experienced . Could you drop us a direct message along with details ?
# ::tokens ["We", "truly", "do", "apologize", "for", "this", "inconvenience", "you", "'ve", "experienced", ".", "Could", "you", "drop", "us", "a", "direct", "message", "along", "with", "details", "?"]
# ::lemmas ["we", "truly", "do", "apologize", "for", "this", "inconvenience", "you", "'ve", "experience", ".", "could", "you", "drop", "we", "a", "direct", "message", "along", "with", "detail", "?"]
(c2-13 / multi-sentence
       :snt1 (c2-2 / apologize-01
                   :ARG0 (c2-5 / we)
                   :ARG1 (c2-12 / inconvenience
                                :ARG1-of (c2-16 / experience-01
                                                :ARG0 (c2-14 / you))
                                :mod (c2-10 / this))
                   :ARG1-of (c2-6 / true-01))
       :snt2 (c2-11 / possible-01
                    :polarity (c2-15 / amr-unknown)
                    :ARG1 (c2-0 / drop-05
                                :ARG0 (c2-3 / you)
                                :ARG1 (c2-1 / and
                                            :op1 (c2-4 / message-01
                                                       :ARG0 c2-3
                                                       :ARG1-of (c2-7 / direct-02))
                                            :op2 (c2-8 / detail))
                                :ARG4 (c2-9 / we))))

# ::snt As per firstcry's policy if i cancel my order they return my money within to days . But today days over . I am not getting my money back . Firstcry is a cheater company , just like a begger . Firstcry was not fulfill their promise . <URL>
# ::tokens ["As", "per", "firstcry", "'s", "policy", "if", "i", "cancel", "my", "order", "they", "return", "my", "money", "within", "to", "days", ".", "But", "today", "days", "over", ".", "I", "am", "not", "getting", "my", "money", "back", ".", "Firstcry", "is", "a", "cheater", "company", ",", "just", "like", "a", "begger", ".", "Firstcry", "was", "not", "fulfill", "their", "promise", ".", "<", "URL", ">"]
# ::lemmas ["as", "per", "firstcry", "'s", "policy", "if", "i", "cancel", "my", "order", "they", "return", "my", "money", "within", "to", "day", ".", "but", "today", "day", "over", ".", "i", "be", "not", "get", "my", "money", "back", ".", "firstcry", "be", "a", "cheater", "company", ",", "just", "like", "a", "begger", ".", "firstcry", "be", "not", "fulfill", "their", "promise", ".", "<", "URL", ">"]
(c3-13 / multi-sentence
       :snt1 (c3-10 / return-02
                    :ARG0 (c3-9 / they)
                    :ARG1 (c3-23 / money
                                 :poss (c3-2 / i
                                             :ARG2-of c3-10))
                    :condition (c3-4 / cancel-01
                                     :ARG0 c3-2
                                     :ARG1 (c3-8 / order-02
                                                 :ARG0 (c3-0 / company
                                                             :name (c3-14 / name
                                                                          :op1 "Firstcry"))))
                    :time (c3-21 / after
                                 :quant (c3-24 / up-to
                                               :op1 (c3-19 / multiple
                                                           :op1 (c3-5 / temporal-quantity
                                                                      :unit (c3-1 / day)
                                                                      :quant 1))))
                    :ARG1-of (c3-16 / say-01
                                    :ARG0 (c3-28 / policy-01
                                                 :ARG0 c3-0)))
       :snt2 (c3-6 / contrast-01
                   :ARG2 (c3-11 / get-back-09
                                :ARG0 (c3-18 / i)
                                :ARG1 (c3-12 / money
                                             :poss c3-18)
                                :time (c3-15 / today)
                                :polarity -))
       :snt3 (c3-20 / company
                    :ARG0-of (c3-17 / cheat-02)
                    :ARG1-of (c3-7 / resemble-01
                                   :ARG2 (c3-26 / begger)
                                   :mod (c3-27 / just)))
       :snt4 (c3-22 / fulfill-01
                    :ARG0 (c3-3 / company
                                :name c3-14
                                :op1 "Firstcry")
                    :polarity -)
       :ARG1 (c3-25 / promise-01
                    :ARG0 c3-3))

# ::snt Please allow us some time our team is already working on it .
# ::tokens ["Please", "allow", "us", "some", "time", "our", "team", "is", "already", "working", "on", "it", "."]
# ::lemmas ["please", "allow", "we", "some", "time", "our", "team", "be", "already", "work", "on", "it", "."]
(c4-1 / allow-01
      :ARG0 (c4-6 / you)
      :ARG1 (c4-2 / work-01
                  :ARG0 (c4-4 / team
                              :poss (c4-7 / we))
                  :ARG1 (c4-5 / it)
                  :time (c4-3 / already)
                  :mod (c4-0 / some))
      :ARG2 c4-7
      :mode imperative
      :polite +)
