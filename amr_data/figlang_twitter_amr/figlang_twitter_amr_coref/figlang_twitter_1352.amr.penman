# ::snt As of Thursday per someone close to the show I'm told as far they know they've not been declined by anyone yet . <URL>
# ::tokens ["As", "of", "Thursday", "per", "someone", "close", "to", "the", "show", "I", "'m", "told", "as", "far", "they", "know", "they", "'ve", "not", "been", "declined", "by", "anyone", "yet", ".", "<", "URL", ">"]
# ::lemmas ["as", "of", "Thursday", "per", "someone", "close", "to", "the", "show", "i", "be", "tell", "as", "far", "they", "know", "they", "'ve", "not", "be", "decline", "by", "anyone", "yet", ".", "<", "URL", ">"]
(c1-7 / tell-01
      :ARG0 (c1-0 / someone
                  :ARG1-of (c1-3 / close-10
                                 :ARG2 (c1-8 / show-04)))
      :ARG1 (c1-1 / decline-01
                  :ARG0 (c1-2 / anyone)
                  :ARG1 (c1-5 / they)
                  :time (c1-10 / yet)
                  :polarity -)
      :ARG2 (c1-9 / i)
      :time (c1-11 / as-of
                   :op1 (c1-6 / date-entity
                              :weekday (c1-4 / thursday))))

# ::snt The fandom is basically split again over this . That is what worries me .
# ::tokens ["The", "fandom", "is", "basically", "split", "again", "over", "this", ".", "That", "is", "what", "worries", "me", "."]
# ::lemmas ["the", "fandom", "be", "basically", "split", "again", "over", "this", ".", "that", "be", "what", "worry", "i", "."]
(c2-9 / multi-sentence
      :snt1 (c2-0 / split-01
                  :ARG1 (c2-2 / fandom)
                  :mod (c2-1 / again)
                  :mod (c2-7 / basic)
                  :ARG1-of (c2-3 / cause-01
                                 :ARG0 (c2-6 / this)))
      :snt2 (c2-4 / worry-01
                  :ARG0 (c2-5 / that)
                  :ARG1 (c2-8 / i)))

# ::snt . I don't see a split , I see a group of fans that care a lot about a show they love and want it to continue
# ::tokens [".", "I", "do", "n't", "see", "a", "split", ",", "I", "see", "a", "group", "of", "fans", "that", "care", "a", "lot", "about", "a", "show", "they", "love", "and", "want", "it", "to", "continue"]
# ::lemmas [".", "i", "do", "not", "see", "a", "split", ",", "i", "see", "a", "group", "of", "fan", "that", "care", "a", "lot", "about", "a", "show", "they", "love", "and", "want", "it", "to", "continue"]
(c3-3 / contrast-01
      :ARG1 (c3-0 / see-01
                  :ARG0 (c3-11 / i)
                  :ARG1 (c3-10 / split-01)
                  :polarity -)
      :ARG2 (c3-5 / see-01
                  :ARG0 c3-11
                  :ARG1 (c3-9 / group
                              :consist-of (c3-2 / fan
                                                :ARG0-of (c3-1 / care-01
                                                               :ARG1 (c3-12 / show
                                                                            :ARG1-of (c3-7 / love-01
                                                                                           :ARG0 c3-2))
                                                               :degree (c3-8 / lot))
                                                :ARG0-of (c3-4 / want-01
                                                               :ARG1 (c3-6 / continue-01
                                                                           :ARG1 c3-12))))))

# ::snt I'm guessing no one understood the message from the last episode ? Things change , that's life
# ::tokens ["I", "'m", "guessing", "no", "one", "understood", "the", "message", "from", "the", "last", "episode", "?", "Things", "change", ",", "that", "'s", "life"]
# ::lemmas ["i", "be", "guess", "no", "one", "understand", "the", "message", "from", "the", "last", "episode", "?", "thing", "change", ",", "that", "be", "life"]
(c4-9 / multi-sentence
      :snt1 (c4-7 / guess-01
                  :ARG0 (c4-8 / i)
                  :ARG1 (c4-3 / understand-01
                              :ARG0 (c4-10 / no-one)
                              :ARG1 (c4-0 / message
                                          :source (c4-11 / episode
                                                         :mod (c4-5 / last)))))
      :snt2 (c4-1 / change-01
                  :ARG1 (c4-4 / thing))
      :snt3 (c4-6 / life
                  :domain (c4-2 / that)))

# ::snt yes but at the end says what we feeling we not ready for change
# ::tokens ["yes", "but", "at", "the", "end", "says", "what", "we", "feeling", "we", "not", "ready", "for", "change"]
# ::lemmas ["yes", "but", "at", "the", "end", "say", "what", "we", "feel", "we", "not", "ready", "for", "change"]
(c5-3 / contrast-01
      :ARG1 (c5-7 / yes)
      :ARG2 (c5-0 / say-01
                  :ARG1 (c5-5 / thing
                              :ARG1-of (c5-2 / feel-02
                                             :ARG0 (c5-4 / we)
                                             :ARG2 (c5-6 / ready-02
                                                         :ARG1 c5-4
                                                         :ARG2 (c5-1 / change-01)
                                                         :polarity -)))
                  :time (c5-8 / end-01)))

# ::snt but change will still happen you have to learn to accept it
# ::tokens ["but", "change", "will", "still", "happen", "you", "have", "to", "learn", "to", "accept", "it"]
# ::lemmas ["but", "change", "will", "still", "happen", "you", "have", "to", "learn", "to", "accept", "it"]
(c6-3 / contrast-01
      :ARG2 (c6-0 / change-01
                  :mod (c6-1 / still)
                  :ARG2-of (c6-4 / obligate-01
                                 :ARG1 (c6-6 / you)
                                 :ARG3 (c6-5 / learn-01
                                             :ARG0 c6-6
                                             :ARG1 (c6-2 / accept-01
                                                         :ARG0 c6-6
                                                         :ARG1 c6-0)))))

# ::snt there's GOOD change & BAD , & like the Doctor even after billions of torturous years , BAD change is STILL ~ unacceptable ..
# ::tokens ["there", "'s", "GOOD", "change", "&", "BAD", ",", "&", "like", "the", "Doctor", "even", "after", "billions", "of", "torturous", "years", ",", "BAD", "change", "is", "STILL", "~", "unacceptable", ".."]
# ::lemmas ["there", "be", "good", "change", "&", "BAD", ",", "&", "like", "the", "Doctor", "even", "after", "billions", "of", "torturous", "year", ",", "bad", "change", "be", "still", "~", "unacceptable", ".."]
(c7-3 / and
      :op1 (c7-15 / and
                  :op1 (c7-5 / change-01
                             :ARG1-of (c7-10 / good-02))
                  :op2 (c7-0 / change-01
                             :ARG1-of (c7-13 / bad-07)))
      :op2 (c7-11 / possible-01
                  :ARG1 (c7-1 / accept-01
                              :ARG1 c7-0)
                  :mod (c7-2 / still)
                  :concession (c7-7 / after
                                    :op1 (c7-12 / multiple
                                                :op1 (c7-8 / temporal-quantity
                                                           :unit (c7-14 / year)
                                                           :mod (c7-6 / torturous)
                                                           :quant 1000000000))
                                    :mod (c7-16 / even))
                  :ARG1-of (c7-9 / resemble-01
                                 :ARG2 (c7-4 / doctor))
                  :polarity -))

# ::snt It's a TV SHOW not life or death Just be happy it was on at all A lot of people were mad when Firefly was cancelled too
# ::tokens ["It", "'s", "a", "TV", "SHOW", "not", "life", "or", "death", "Just", "be", "happy", "it", "was", "on", "at", "all", "A", "lot", "of", "people", "were", "mad", "when", "Firefly", "was", "cancelled", "too"]
# ::lemmas ["it", "be", "a", "tv", "SHOW", "not", "life", "or", "death", "just", "be", "happy", "it", "be", "on", "at", "all", "a", "lot", "of", "people", "be", "mad", "when", "Firefly", "be", "cancel", "too"]
(c8-8 / multi-sentence
      :snt1 (c8-10 / show-04
                   :ARG3 (c8-7 / television)
                   :domain (c8-3 / it)
                   :ARG1-of (c8-4 / contrast-01
                                  :ARG2 (c8-6 / or
                                              :op1 (c8-17 / life)
                                              :op2 (c8-0 / die-01))))
      :snt2 (c8-14 / happy-01
                   :ARG0 (c8-15 / on-01
                                :ARG1 (c8-11 / it)
                                :degree (c8-12 / at-all))
                   :ARG1 (c8-19 / person
                                :quant (c8-2 / lot)))
      :snt3 (c8-13 / mad-04
                   :ARG0 (c8-1 / cancel-01
                               :ARG1 (c8-18 / broadcast-program
                                            :name (c8-9 / name
                                                        :op1 "Firefly"))
                               :mod (c8-5 / too))
                   :ARG1 (c8-16 / person
                                :quant c8-2)))

# ::snt But they still got a movie ! Cuz they didnt just give up .. Life is MORE than just saying " oh well " & letting bad things happen !
# ::tokens ["But", "they", "still", "got", "a", "movie", "!", "Cuz", "they", "did", "nt", "just", "give", "up", "..", "Life", "is", "MORE", "than", "just", "saying", "\"", "oh", "well", "\"", "&", "letting", "bad", "things", "happen", "!"]
# ::lemmas ["but", "they", "still", "get", "a", "movie", "!", "cuz", "they", "do", "not", "just", "give", "up", "..", "life", "be", "more", "than", "just", "say", "\"", "oh", "well", "\"", "&", "let", "bad", "thing", "happen", "!"]
(c9-7 / multi-sentence
      :snt1 (c9-2 / contrast-01
                  :ARG2 (c9-6 / get-01
                              :ARG0 (c9-5 / they)
                              :ARG1 (c9-14 / movie)
                              :mod (c9-9 / still)))
      :snt2 (c9-0 / cause-01
                  :ARG0 (c9-12 / give-up-07
                               :ARG0 (c9-3 / they)
                               :mod (c9-15 / just)
                               :polarity -)
                  :ARG1 (c9-16 / life
                               :ARG1-of (c9-10 / mean-01
                                               :ARG2 (c9-13 / and
                                                            :op1 (c9-18 / say-01
                                                                        :ARG0 c9-16
                                                                        :ARG1 (c9-4 / oh-well
                                                                                    :mode expressive))
                                                            :op2 (c9-1 / let-01
                                                                       :ARG0 c9-16
                                                                       :ARG1 (c9-8 / thing
                                                                                   :ARG1-of (c9-11 / bad-07)))
                                                            :mod (c9-17 / just))))))

# ::snt lol Firefly got cancelled after ONE season , it never got a chance to grow . GMW had THREE seasons and the ratings kept going down .
# ::tokens ["lol", "Firefly", "got", "cancelled", "after", "ONE", "season", ",", "it", "never", "got", "a", "chance", "to", "grow", ".", "GMW", "had", "THREE", "seasons", "and", "the", "ratings", "kept", "going", "down", "."]
# ::lemmas ["lol", "Firefly", "got", "cancel", "after", "ONE", "season", ",", "it", "never", "get", "a", "chance", "to", "grow", ".", "GMW", "have", "THREE", "seasons", "and", "the", "rating", "keep", "go", "down", "."]
(c10-8 / multi-sentence
       :snt1 (c10-4 / cancel-01
                    :ARG1 (c10-18 / broadcast-program
                                  :name (c10-9 / name
                                               :op1 "Firefly"))
                    :time (c10-15 / after
                                  :op1 (c10-12 / season
                                               :quant 1))
                    :ARG0-of (c10-0 / cause-01
                                    :ARG1 (c10-5 / chance-02
                                                 :ARG0 c10-18
                                                 :ARG1 (c10-7 / grow-01
                                                              :ARG1 c10-18)
                                                 :time (c10-11 / ever)
                                                 :polarity -))
                    :manner (c10-17 / laugh-01
                                    :ARG0 (c10-3 / i)
                                    :manner (c10-2 / loud)
                                    :mode expressive))
       :snt2 (c10-10 / and
                     :op1 (c10-16 / have-03
                                  :ARG0 (c10-14 / broadcast-program
                                                :name (c10-1 / name
                                                             :op1 "General"
                                                             :op2 "Motors"))
                                  :ARG1 (c10-19 / season
                                                :quant 3))
                     :op2 (c10-20 / keep-02
                                  :ARG1 (c10-13 / go-down-27
                                                :ARG1 (c10-6 / rate-01)))))

# ::snt is a cable series in an era of OnDemand media , ratings still topped . FF was on ~ broadcast , completely diff . I get it , I do .
# ::tokens ["is", "a", "cable", "series", "in", "an", "era", "of", "OnDemand", "media", ",", "ratings", "still", "topped", ".", "FF", "was", "on", "~", "broadcast", ",", "completely", "diff", ".", "I", "get", "it", ",", "I", "do", "."]
# ::lemmas ["be", "a", "cable", "series", "in", "an", "era", "of", "OnDemand", "medium", ",", "rating", "still", "top", ".", "FF", "be", "on", "~", "broadcast", ",", "completely", "diff", ".", "i", "get", "it", ",", "i", "do", "."]
(c11-11 / multi-sentence
        :snt1 (c11-0 / series
                     :mod (c11-2 / cable)
                     :time (c11-12 / era
                                   :time-of (c11-1 / media
                                                   :mod (c11-6 / on-Demand)))
                     :ARG1-of (c11-7 / top-01
                                     :mod (c11-9 / still)))
        :snt2 (c11-8 / broadcast-01
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8
                     :ARG1 c11-8)
        :ARG1-of (c11-5 / understand-01
                        :ARG0 (c11-10 / i))
        :snt3 (c11-3 / understand-01
                     :ARG0 c11-10
                     :ARG1 (c11-4 / it)))

# ::snt I have a LONG list of cancelled series , whether they got /2 / + seasons , broadcast or cable , still always worth standing up for !
# ::tokens ["I", "have", "a", "LONG", "list", "of", "cancelled", "series", ",", "whether", "they", "got", "/2", "/", "+", "seasons", ",", "broadcast", "or", "cable", ",", "still", "always", "worth", "standing", "up", "for", "!"]
# ::lemmas ["i", "have", "a", "long", "list", "of", "cancel", "series", ",", "whether", "they", "get", "/2", "/", "+", "season", ",", "broadcast", "or", "cable", ",", "still", "always", "worth", "stand", "up", "for", "!"]
(c12-5 / have-03
       :ARG0 (c12-13 / i)
       :ARG1 (c12-9 / list
                    :ARG1-of (c12-10 / long-03)
                    :consist-of (c12-0 / series
                                       :ARG1-of (c12-3 / cancel-01))
                    :ARG1-of (c12-4 / worth-02
                                    :ARG2 (c12-12 / stand-up-07
                                                  :ARG1 c12-0
                                                  :time (c12-2 / always))
                                    :mod (c12-6 / still))
                    :condition (c12-7 / or
                                      :op1 (c12-11 / get-01
                                                   :ARG0 c12-0
                                                   :ARG1 (c12-14 / slash
                                                                 :op1 (c12-17 / season
                                                                              :quant 2)
                                                                 :op2 (c12-8 / season
                                                                             :quant +)))
                                      :op2 (c12-16 / get-01
                                                   :ARG0 c12-0
                                                   :ARG1 c12-14)
                                      :op3 c12-7
                                      :op1 (c12-15 / broadcast-01)
                                      :op2 (c12-1 / cable))))
