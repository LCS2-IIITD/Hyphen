# ::snt I really wish I could have Minecraft Bedrock Beta access , AND access to realms instead of one or the other . I wish the opt out process worked . Id love to play on Beta , but also dont want to lose realms . Not at the same time , but on the same device , togglable .
# ::tokens ["I", "really", "wish", "I", "could", "have", "Minecraft", "Bedrock", "Beta", "access", ",", "AND", "access", "to", "realms", "instead", "of", "one", "or", "the", "other", ".", "I", "wish", "the", "opt", "out", "process", "worked", ".", "I", "d", "love", "to", "play", "on", "Beta", ",", "but", "also", "do", "nt", "want", "to", "lose", "realms", ".", "Not", "at", "the", "same", "time", ",", "but", "on", "the", "same", "device", ",", "togglable", "."]
# ::lemmas ["i", "really", "wish", "i", "could", "have", "Minecraft", "Bedrock", "beta", "access", ",", "and", "access", "to", "realm", "instead", "of", "one", "or", "the", "other", ".", "i", "wish", "the", "opt", "out", "process", "work", ".", "i", "d", "love", "to", "play", "on", "Beta", ",", "but", "also", "do", "not", "want", "to", "lose", "realm", ".", "not", "at", "the", "same", "time", ",", "but", "on", "the", "same", "device", ",", "togglable", "."]
(c1-17 / multi-sentence
       :snt1 (c1-10 / wish-01
                    :ARG0 (c1-8 / i)
                    :ARG1 (c1-34 / possible-01
                                 :ARG1 (c1-27 / and
                                              :op1 (c1-20 / access-01
                                                          :ARG0 c1-8
                                                          :ARG1 (c1-30 / product
                                                                       :name (c1-18 / name
                                                                                    :op1 "Minecraft"
                                                                                    :op2 "Bedrock"
                                                                                    :op3 "Beta")))
                                              :op2 (c1-1 / access-01
                                                         :ARG0 c1-8
                                                         :ARG1 (c1-15 / realm)
                                                         :ARG1-of (c1-24 / instead-of-91
                                                                         :ARG2 (c1-35 / access-01
                                                                                      :ARG0 c1-8
                                                                                      :ARG1 (c1-11 / realm
                                                                                                   :mod (c1-12 / other)))))))
                    :ARG1-of (c1-16 / real-04))
       :snt2 (c1-19 / wish-01
                    :ARG0 (c1-25 / i)
                    :ARG1 (c1-7 / work-09
                                :ARG1 (c1-23 / process-02
                                             :ARG1 (c1-28 / opt-01
                                                          :ARG0 c1-25))))
       :snt3 (c1-9 / contrast-01
                   :ARG1 (c1-31 / love-01
                                :ARG0 (c1-29 / i)
                                :ARG1 (c1-22 / play-01
                                             :ARG0 c1-29
                                             :medium (c1-2 / product
                                                           :name (c1-5 / name
                                                                       :op1 "Beta"))))
                   :ARG2 (c1-3 / want-01
                               :ARG0 c1-29
                               :ARG1 (c1-6 / lose-02
                                           :ARG0 c1-29
                                           :ARG1 (c1-13 / realm))
                               :mod (c1-4 / also)
                               :polarity -)
                   :snt4-of c1-17)
       :ARG1 (c1-32 / be-temporally-at-91
                    :ARG2 (c1-14 / time
                                 :ARG1-of (c1-21 / same-01)))
       :ARG2 (c1-26 / be-located-at-91
                    :ARG2 (c1-0 / device
                                :ARG1-of (c1-33 / same-01))))

# ::snt If I could transfer my Bedrock Ed . to you I'd gladly let you have it . As far as Realms there is Java based Realms
# ::tokens ["If", "I", "could", "transfer", "my", "Bedrock", "Ed", ".", "to", "you", "I", "'d", "gladly", "let", "you", "have", "it", ".", "As", "far", "as", "Realms", "there", "is", "Java", "based", "Realms"]
# ::lemmas ["if", "i", "could", "transfer", "my", "Bedrock", "Ed", ".", "to", "you", "i", "would", "gladly", "let", "you", "have", "it", ".", "as", "far", "as", "Realms", "there", "be", "Java", "base", "realm"]
(c2-10 / multi-sentence
       :snt1 (c2-16 / have-condition-91
                    :ARG1 (c2-18 / let-01
                                 :ARG0 (c2-4 / i)
                                 :ARG1 (c2-3 / have-03
                                             :ARG0 (c2-15 / you)
                                             :ARG1 (c2-20 / program
                                                          :name (c2-11 / name
                                                                       :op1 "Bedrock"
                                                                       :op2 "Ed.")
                                                          :poss c2-4))
                                 :manner (c2-9 / glad-02))
                    :ARG2 (c2-17 / possible-01
                                 :ARG1 (c2-7 / transfer-01
                                             :ARG0 c2-4
                                             :ARG1 (c2-13 / program
                                                          :name (c2-1 / name
                                                                      :op1 "Real Realms")
                                                          :ARG1-of (c2-19 / base-02
                                                                          :ARG2 (c2-2 / language
                                                                                      :name (c2-14 / name
                                                                                                   :op1 "Java"))))
                                             :ARG2 c2-15)))
       :snt2 (c2-6 / concern-02
                   :ARG0 (c2-12 / program
                                :name (c2-5 / name
                                            :op1 "Real Realms"))
                   :ARG1 (c2-0 / person
                               :name (c2-8 / name
                                           :op1 "Farmer"))))

# ::snt I appreciate it . I am primarily a bedrock player . I have purchased copies . My problem is that I cannot test anything in Beta while also having access to realms , because opting into Beta locks the device out of realms , not just the account . This is important as a YTer . Ugh ..
# ::tokens ["I", "appreciate", "it", ".", "I", "am", "primarily", "a", "bedrock", "player", ".", "I", "have", "purchased", "copies", ".", "My", "problem", "is", "that", "I", "can", "not", "test", "anything", "in", "Beta", "while", "also", "having", "access", "to", "realms", ",", "because", "opting", "into", "Beta", "locks", "the", "device", "out", "of", "realms", ",", "not", "just", "the", "account", ".", "This", "is", "important", "as", "a", "YTer", ".", "Ugh", ".."]
# ::lemmas ["i", "appreciate", "it", ".", "i", "be", "primarily", "a", "bedrock", "player", ".", "i", "have", "purchase", "copy", ".", "my", "problem", "be", "that", "i", "can", "not", "test", "anything", "in", "Beta", "while", "also", "have", "access", "to", "realm", ",", "because", "opt", "into", "beta", "lock", "the", "device", "out", "of", "realm", ",", "not", "just", "the", "account", ".", "this", "be", "important", "as", "a", "yter", ".", "ugh", ".."]
(c3-15 / multi-sentence
       :snt1 (c3-26 / appreciate-02
                    :ARG0 (c3-7 / i)
                    :ARG1 (c3-21 / it))
       :snt2 (c3-33 / play-01
                    :ARG0 (c3-22 / i)
                    :mod (c3-31 / bedrock)
                    :mod (c3-29 / primary))
       :snt3 (c3-20 / purchase-01
                    :ARG0 (c3-27 / i)
                    :ARG1 (c3-13 / thing
                                 :ARG1-of (c3-8 / copy-01)))
       :snt4 (c3-19 / problem
                    :poss (c3-9 / i)
                    :domain (c3-2 / possible-01
                                  :ARG1 (c3-10 / test-01
                                               :ARG0 c3-9
                                               :ARG1 (c3-18 / anything)
                                               :medium (c3-24 / product
                                                              :name (c3-16 / name
                                                                           :op1 "Beta"))
                                               :time (c3-1 / access-01
                                                           :ARG0 c3-9
                                                           :ARG1 (c3-14 / realm)
                                                           :mod (c3-35 / also)))
                                  :ARG1-of (c3-0 / cause-01
                                                 :ARG0 (c3-5 / and
                                                             :op1 (c3-30 / lock-01
                                                                         :ARG0 (c3-12 / opt-01
                                                                                      :ARG0 c3-9
                                                                                      :ARG1 c3-24)
                                                                         :ARG1 (c3-3 / device)
                                                                         :ARG2 c3-14)
                                                             :op2 (c3-6 / lock-01
                                                                        :ARG0 c3-12
                                                                        :ARG1 c3-3
                                                                        :ARG2 (c3-25 / account
                                                                                     :mod (c3-32 / just))
                                                                        :polarity -)))
                                  :polarity -))
       :snt5 (c3-4 / important-01
                   :ARG1 (c3-17 / this)
                   :mod (c3-11 / as
                               :op1 (c3-34 / person
                                           :ARG0-of c3-33)
                               :mod (c3-23 / territory)))
       :mod (c3-28 / ugh
                   :mode expressive))

# ::snt that is bad news , I guess they need to work betas like snapshots - Realms just flat out refuses to try a connection
# ::tokens ["that", "is", "bad", "news", ",", "I", "guess", "they", "need", "to", "work", "betas", "like", "snapshots", "-", "Realms", "just", "flat", "out", "refuses", "to", "try", "a", "connection"]
# ::lemmas ["that", "be", "bad", "news", ",", "i", "guess", "they", "need", "to", "work", "beta", "like", "snapshot", "-", "Realms", "just", "flat", "out", "refuse", "to", "try", "a", "connection"]
(c4-15 / multi-sentence
       :snt1 (c4-16 / news
                    :ARG1-of (c4-12 / bad-07)
                    :domain (c4-8 / that)
                    :ARG1-of (c4-10 / guess-01
                                    :ARG0 (c4-14 / i)))
       :snt2 (c4-2 / and
                   :op1 (c4-9 / need-01
                              :ARG0 (c4-6 / they)
                              :ARG1 (c4-5 / work-01
                                          :ARG0 c4-6
                                          :manner (c4-1 / betas
                                                        :example (c4-0 / snapshot))))
                   :op2 (c4-11 / refuse-01
                               :ARG0 (c4-7 / real-04)
                               :ARG1 (c4-17 / try-01
                                            :ARG0 c4-7
                                            :ARG1 (c4-4 / connect-01))
                               :mod (c4-3 / flat-out)
                               :mod (c4-13 / just))))

# ::snt No no , realms are totally locked out its not allowed , and for good reason . I just wanna be able to switch back n forth without fiddling with the annoying opt in / out feature .
# ::tokens ["No", "no", ",", "realms", "are", "totally", "locked", "out", "its", "not", "allowed", ",", "and", "for", "good", "reason", ".", "I", "just", "wanna", "be", "able", "to", "switch", "back", "n", "forth", "without", "fiddling", "with", "the", "annoying", "opt", "in", "/", "out", "feature", "."]
# ::lemmas ["no", "no", ",", "realm", "be", "totally", "lock", "out", "its", "not", "allow", ",", "and", "for", "good", "reason", ".", "i", "just", "wanna", "be", "able", "to", "switch", "back", "n", "forth", "without", "fiddle", "with", "the", "annoying", "opt", "in", "/", "out", "feature", "."]
(c5-8 / multi-sentence
      :snt1 (c5-13 / and
                   :op1 (c5-15 / have-polarity-91
                               :ARG2 -)
                   :op2 (c5-18 / lock-out-03
                               :ARG1 (c5-6 / realm)
                               :degree (c5-5 / total)
                               :ARG1-of (c5-1 / cause-01
                                              :ARG0 (c5-3 / reason
                                                          :ARG1-of (c5-7 / good-02)))
                               :polarity -))
      :snt2 (c5-2 / want-01
                  :ARG0 (c5-0 / i)
                  :ARG1 (c5-21 / possible-01
                               :ARG1 (c5-10 / switch-01
                                            :ARG0 c5-0
                                            :ARG2 c5-13
                                            :op1 (c5-19 / back)
                                            :op2 (c5-14 / forth))
                               :manner (c5-11 / fiddle-01
                                              :ARG0 c5-0
                                              :ARG1 (c5-12 / feature
                                                           :mod (c5-20 / slash
                                                                       :op1 (c5-4 / opt-01)
                                                                       :op2 (c5-16 / out-06))
                                                           :ARG0-of (c5-9 / annoy-01))
                                              :polarity -)))
      :mod (c5-17 / just))
