# ::snt No , protestors , you are not entitled to free education <URL> <URL>
# ::tokens ["No", ",", "protestors", ",", "you", "are", "not", "entitled", "to", "free", "education", "<", "URL", ">", "<", "URL", ">"]
# ::lemmas ["no", ",", "protestor", ",", "you", "be", "not", "entitle", "to", "free", "education", "<", "URL", ">", "<", "URL", ">"]
(c1-0 / say-01
      :ARG0 (c1-5 / i)
      :ARG1 (c1-6 / entitle-01
                  :ARG1 (c1-2 / educate-01
                              :ARG1 (c1-4 / person
                                          :ARG0-of (c1-3 / protest-01))
                              :ARG3-of (c1-1 / free-03))
                  :ARG2 c1-4
                  :polarity -)
      :ARG2 c1-4)

# ::snt Under socialism , all education - including college - is indeed free to anyone who can pass the entrance exams .
# ::tokens ["Under", "socialism", ",", "all", "education", "-", "including", "college", "-", "is", "indeed", "free", "to", "anyone", "who", "can", "pass", "the", "entrance", "exams", "."]
# ::lemmas ["under", "socialism", ",", "all", "education", "-", "include", "college", "-", "be", "indeed", "free", "to", "anyone", "who", "can", "pass", "the", "entrance", "exam", "."]
(c2-1 / free-03
      :ARG1 (c2-12 / educate-01
                   :mod (c2-0 / all)
                   :ARG2-of (c2-9 / include-01
                                  :ARG1 (c2-2 / college)))
      :ARG3 (c2-11 / anyone
                   :ARG1-of (c2-8 / pass-07
                                  :ARG2 (c2-5 / exam
                                              :mod (c2-6 / enter-01))
                                  :ARG1-of (c2-7 / possible-01)))
      :mod (c2-4 / indeed)
      :prep-under (c2-3 / political-movement
                        :name (c2-10 / name
                                     :op1 "socialism")))

# ::snt free = stolen from someone else who was productive
# ::tokens ["free", "=", "stolen", "from", "someone", "else", "who", "was", "productive"]
# ::lemmas ["free", "=", "steal", "from", "someone", "else", "who", "be", "productive"]
(c3-5 / equal-01
      :ARG1 (c3-1 / free-04)
      :ARG2 (c3-0 / steal-01
                  :ARG2 (c3-3 / someone
                              :mod (c3-2 / else)
                              :ARG0-of (c3-4 / productive-03))))

# ::snt Capitalism fed , clothed untold hundreds of millions . Socialism starves , tortures them to death .
# ::tokens ["Capitalism", "fed", ",", "clothed", "untold", "hundreds", "of", "millions", ".", "Socialism", "starves", ",", "tortures", "them", "to", "death", "."]
# ::lemmas ["capitalism", "feed", ",", "clothe", "untold", "hundreds", "of", "millions", ".", "socialism", "starve", ",", "torture", "they", "to", "death", "."]
(c4-11 / multi-sentence
       :snt1 (c4-3 / and
                   :op1 (c4-4 / feed-01
                              :ARG0 (c4-6 / capitalism)
                              :ARG2 (c4-5 / multiple
                                          :mod (c4-8 / untold)
                                          :op1 100000000))
                   :op2 (c4-0 / clothe-01
                              :ARG0 c4-6
                              :ARG1 c4-5))
       :snt2 (c4-1 / starve-01
                   :ARG0 (c4-10 / political-movement
                                :name (c4-12 / name
                                             :op1 "socialism"))
                   :ARG1 (c4-9 / they))
       :snt3 (c4-7 / torture-01
                   :ARG0 c4-10
                   :ARG1 c4-9
                   :degree (c4-2 / die-01
                                 :ARG1 c4-9)))

# ::snt so it's OK to fu * k over your fellow man & the planet in the name of capitalism . Getting rich is all !
# ::tokens ["so", "it", "'s", "OK", "to", "fu", "*", "k", "over", "your", "fellow", "man", "&", "the", "planet", "in", "the", "name", "of", "capitalism", ".", "Getting", "rich", "is", "all", "!"]
# ::lemmas ["so", "it", "be", "ok", "to", "fu", "*", "k", "over", "your", "fellow", "man", "&", "the", "planet", "in", "the", "name", "of", "capitalism", ".", "get", "rich", "be", "all", "!"]
(c5-9 / multi-sentence
      :snt1 (c5-5 / okay-04
                  :ARG1 (c5-1 / fuck-01
                              :ARG1 (c5-0 / and
                                          :op1 (c5-2 / man
                                                     :mod (c5-4 / fellow)
                                                     :poss (c5-10 / you))
                                          :op2 (c5-8 / planet))
                              :beneficiary (c5-3 / capitalism)
                              :mode expressive))
      :snt2 (c5-11 / all
                   :domain (c5-7 / get-03
                                 :ARG1 c5-10
                                 :ARG2 (c5-6 / rich))
                   :mode expressive))

# ::snt your hipocracy knows no bounds , if you don't like OUR America , get out !
# ::tokens ["your", "hipocracy", "knows", "no", "bounds", ",", "if", "you", "do", "n't", "like", "OUR", "America", ",", "get", "out", "!"]
# ::lemmas ["your", "hipocracy", "know", "no", "bound", ",", "if", "you", "do", "not", "like", "OUR", "America", ",", "get", "out", "!"]
(c6-1 / and
      :op1 (c6-9 / know-02
                 :ARG0 (c6-4 / hipocracy
                             :poss (c6-10 / you))
                 :ARG1 (c6-7 / bound-09
                             :polarity -))
      :op2 (c6-6 / get-05
                 :ARG0 c6-10
                 :ARG1 c6-10
                 :ARG2 (c6-5 / out)
                 :condition (c6-0 / dislike-01
                                  :ARG0 c6-10
                                  :ARG1 (c6-2 / country
                                              :name (c6-8 / name
                                                          :op1 "America")
                                              :poss (c6-3 / we)))
                 :mode imperative))
