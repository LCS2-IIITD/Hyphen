# ::snt . on : " This was a whitelash against a changing country " <URL> <URL>
# ::tokens [".", "on", ":", "\"", "This", "was", "a", "whitelash", "against", "a", "changing", "country", "\"", "<", "URL", ">", "<", "URL", ">"]
# ::lemmas [".", "on", ":", "\"", "this", "be", "a", "whitelash", "against", "a", "change", "country", "\"", "<", "URL", ">", "<", "URL", ">"]
(c1-0 / whitelash
      :domain (c1-1 / this)
      :prep-against (c1-3 / country
                          :ARG1-of (c1-2 / change-01)))

# ::snt . : It's hard to be a parent tonight . ... You tell your kids don t be a bully " and then have this outcome <URL>
# ::tokens [".", ":", "It", "'s", "hard", "to", "be", "a", "parent", "tonight", ".", "...", "You", "tell", "your", "kids", "don", "t", "be", "a", "bully", "\"", "and", "then", "have", "this", "outcome", "<", "URL", ">"]
# ::lemmas [".", ":", "it", "be", "hard", "to", "be", "a", "parent", "tonight", ".", "...", "you", "tell", "your", "kid", "don", "t", "be", "a", "bully", "\"", "and", "then", "have", "this", "outcome", "<", "URL", ">"]
(c2-7 / multi-sentence
      :snt1 (c2-14 / hard-02
                   :ARG1 (c2-1 / have-rel-role-91
                               :ARG0 (c2-11 / you)
                               :ARG2 (c2-17 / parent)
                               :time (c2-0 / date-entity
                                           :dayperiod (c2-8 / night)
                                           :mod (c2-6 / today))))
      :snt2 (c2-13 / and
                   :op1 (c2-3 / tell-01
                              :ARG0 (c2-12 / you)
                              :ARG1 (c2-16 / bully-01
                                           :ARG0 (c2-15 / person
                                                        :ARG0-of (c2-2 / have-rel-role-91
                                                                       :ARG1 c2-12
                                                                       :ARG2 (c2-18 / kid))
                                                        :ARG2-of c2-3)
                                           :polarity -))
                   :op2 (c2-4 / have-04
                              :ARG0 c2-12
                              :ARG1 (c2-5 / outcome
                                          :mod (c2-9 / this))
                              :time (c2-10 / then))))
