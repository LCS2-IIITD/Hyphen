# ::snt Hey , you must love Jacinda , good to know that . <URL>
# ::tokens ["Hey", ",", "you", "must", "love", "Jacinda", ",", "good", "to", "know", "that", ".", "<", "URL", ">"]
# ::lemmas ["hey", ",", "you", "must", "love", "Jacinda", ",", "good", "to", "know", "that", ".", "<", "URL", ">"]
(c1-5 / infer-01
      :ARG1 (c1-2 / love-01
                  :ARG0 (c1-7 / you)
                  :ARG1 (c1-3 / person
                              :name (c1-6 / name
                                          :op1 "Jacinda")))
      :ARG1-of (c1-4 / good-02
                     :ARG2 (c1-0 / know-01
                                 :ARG0 c1-7
                                 :ARG1 c1-2))
      :mod (c1-1 / hey
                 :mode expressive))

# ::snt Not too bright are you . Have a think about it .
# ::tokens ["Not", "too", "bright", "are", "you", ".", "Have", "a", "think", "about", "it", "."]
# ::lemmas ["not", "too", "bright", "be", "you", ".", "have", "a", "think", "about", "it", "."]
(c2-6 / multi-sentence
      :snt1 (c2-1 / have-degree-91
                  :ARG1 (c2-7 / you)
                  :ARG2 (c2-4 / bright-03
                              :ARG1 c2-7)
                  :ARG3 (c2-2 / too)
                  :ARG1-of (c2-3 / request-confirmation-91)
                  :polarity -)
      :snt2 (c2-0 / think-01
                  :ARG0 c2-7
                  :mode imperative)
      :ARG1 (c2-5 / it))

# ::snt Not too clever are you , don't like having your own crap thrown back at you .
# ::tokens ["Not", "too", "clever", "are", "you", ",", "do", "n't", "like", "having", "your", "own", "crap", "thrown", "back", "at", "you", "."]
# ::lemmas ["not", "too", "clever", "be", "you", ",", "do", "not", "like", "have", "your", "own", "crap", "throw", "back", "at", "you", "."]
(c3-2 / and
      :op1 (c3-5 / have-degree-91
                 :ARG1 (c3-8 / you)
                 :ARG2 (c3-3 / clever-01
                             :ARG1 c3-8)
                 :ARG3 (c3-6 / too)
                 :polarity -)
      :op2 (c3-0 / dislike-01
                 :ARG0 c3-8
                 :ARG1 (c3-4 / throw-01
                             :ARG1 (c3-1 / crap
                                         :poss c3-8)
                             :ARG2 c3-8
                             :direction (c3-7 / back))))

# ::snt Guess I ll have to make this nice and simple for you . When we criticise Jacinda we get accused of misogyny . Yet attacking Paula is fine , apparently .
# ::tokens ["Guess", "I", "ll", "have", "to", "make", "this", "nice", "and", "simple", "for", "you", ".", "When", "we", "criticise", "Jacinda", "we", "get", "accused", "of", "misogyny", ".", "Yet", "attacking", "Paula", "is", "fine", ",", "apparently", "."]
# ::lemmas ["guess", "i", "ll", "have", "to", "make", "this", "nice", "and", "simple", "for", "you", ".", "when", "we", "criticise", "Jacinda", "we", "get", "accuse", "of", "misogyny", ".", "yet", "attack", "Paula", "be", "fine", ",", "apparently", "."]
(c4-8 / multi-sentence
      :snt1 (c4-7 / guess-01
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-5 / obligate-01
                              :ARG1 c4-2
                              :ARG2 (c4-17 / make-02
                                           :ARG0 c4-2
                                           :ARG1 (c4-15 / and
                                                        :op1 (c4-9 / nice-01
                                                                   :ARG1 (c4-6 / this))
                                                        :op2 (c4-11 / simple-02
                                                                    :ARG1 c4-6))
                                           :beneficiary (c4-14 / you))))
      :snt2 (c4-10 / accuse-01
                   :ARG1 (c4-4 / we)
                   :ARG2 (c4-12 / misogyny)
                   :time (c4-3 / criticize-01
                               :ARG0 c4-4
                               :ARG1 (c4-19 / person
                                            :name (c4-1 / name
                                                        :op1 "Jacinda")))
                   :concession-of (c4-16 / fine-04
                                         :ARG1 (c4-0 / attack-01
                                                     :ARG0 c4-4
                                                     :ARG1 (c4-18 / person
                                                                  :name (c4-13 / name
                                                                               :op1 "Paula")))
                                         :ARG1-of (c4-20 / appear-02))))
