# ::snt I'm trying to help him come out , and now he wants to " fight me " <URL>
# ::tokens ["I", "'m", "trying", "to", "help", "him", "come", "out", ",", "and", "now", "he", "wants", "to", "\"", "fight", "me", "\"", "<", "URL", ">"]
# ::lemmas ["i", "be", "try", "to", "help", "he", "come", "out", ",", "and", "now", "he", "want", "to", "\"", "fight", "i", "\"", "<", "URL", ">"]
(c1-0 / and
      :op1 (c1-5 / try-01
                 :ARG0 (c1-7 / i)
                 :ARG1 (c1-4 / help-01
                             :ARG0 c1-7
                             :ARG1 (c1-2 / come-out-09
                                         :ARG0 (c1-6 / he))))
      :op2 (c1-3 / want-01
                 :ARG0 c1-6
                 :ARG1 (c1-1 / fight-01
                             :ARG0 c1-6
                             :ARG1 c1-7)
                 :time (c1-8 / now)))

# ::snt Poor He's not the sharpest tool in the box . Bless him .
# ::tokens ["Poor", "He", "'s", "not", "the", "sharpest", "tool", "in", "the", "box", ".", "Bless", "him", "."]
# ::lemmas ["poor", "he", "be", "not", "the", "sharp", "tool", "in", "the", "box", ".", "bless", "he", "."]
(c2-10 / multi-sentence
       :snt1 (c2-4 / have-mod-91
                   :ARG1 (c2-8 / he)
                   :ARG2 (c2-6 / tool
                               :location (c2-7 / box)
                               :ARG1-of (c2-1 / have-degree-91
                                              :ARG2 (c2-0 / sharp-02
                                                          :ARG1 c2-6)
                                              :ARG3 (c2-3 / most)))
                   :mod (c2-9 / poor)
                   :polarity -)
       :snt2 (c2-2 / bless-01
                   :ARG1 (c2-5 / he)))

# ::snt I know . Funny thing is now when he thinks of Jesus , that pic will come up in his mind . I win
# ::tokens ["I", "know", ".", "Funny", "thing", "is", "now", "when", "he", "thinks", "of", "Jesus", ",", "that", "pic", "will", "come", "up", "in", "his", "mind", ".", "I", "win"]
# ::lemmas ["i", "know", ".", "funny", "thing", "be", "now", "when", "he", "think", "of", "Jesus", ",", "that", "pic", "will", "come", "up", "in", "his", "mind", ".", "i", "win"]
(c3-13 / multi-sentence
       :snt1 (c3-14 / know-01
                    :ARG0 (c3-12 / i))
       :snt2 (c3-0 / funny-02
                   :ARG1 (c3-1 / come-up-11
                               :ARG1 (c3-10 / pic
                                            :mod (c3-8 / that))
                               :location (c3-2 / mind
                                               :part-of (c3-5 / he))
                               :time (c3-11 / now)
                               :time (c3-3 / think-01
                                           :ARG0 c3-5
                                           :ARG1 (c3-7 / person
                                                       :name (c3-9 / name
                                                                   :op1 "Jesus")))))
       :snt3 (c3-4 / win-01
                   :ARG0 (c3-6 / i)))

# ::snt I'm not convinced , ' thinking ' is high on his agenda , poor guy .
# ::tokens ["I", "'m", "not", "convinced", ",", "'", "thinking", "'", "is", "high", "on", "his", "agenda", ",", "poor", "guy", "."]
# ::lemmas ["i", "be", "not", "convinced", ",", "'", "thinking", "'", "be", "high", "on", "his", "agenda", ",", "poor", "guy", "."]
(c4-1 / convince-01
      :ARG1 (c4-6 / i)
      :ARG2 (c4-3 / think-01
                  :ARG0 (c4-5 / guy
                              :mod (c4-4 / poor))
                  :ARG1-of (c4-2 / high-02
                                 :ARG2 (c4-0 / agenda
                                             :poss c4-5)))
      :polarity -)

# ::snt Only if it fits your screwed up beliefs , huh ?
# ::tokens ["Only", "if", "it", "fits", "your", "screwed", "up", "beliefs", ",", "huh", "?"]
# ::lemmas ["only", "if", "it", "fit", "your", "screw", "up", "belief", ",", "huh", "?"]
(c5-4 / request-confirmation-91
      :ARG1 (c5-2 / have-condition-91
                  :ARG2 (c5-1 / fit-06
                              :ARG1 (c5-6 / it)
                              :ARG2 (c5-5 / believe-01
                                          :ARG0 (c5-7 / you)
                                          :ARG1-of (c5-0 / screw-up-01)))
                  :mod (c5-3 / only)))
