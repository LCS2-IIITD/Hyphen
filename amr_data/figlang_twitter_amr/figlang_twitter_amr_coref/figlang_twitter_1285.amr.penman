# ::snt Sorry Theresa ? ! Hits Britons ? ? It's already hitting HUMAN BEINGS . British , Brazilian or Bangladeshi .. it matters not <URL>
# ::tokens ["Sorry", "Theresa", "?", "!", "Hits", "Britons", "?", "?", "It", "'s", "already", "hitting", "HUMAN", "BEINGS", ".", "British", ",", "Brazilian", "or", "Bangladeshi", "..", "it", "matters", "not", "<", "URL", ">"]
# ::lemmas ["sorry", "Theresa", "?", "!", "hit", "Britons", "?", "?", "it", "be", "already", "hit", "human", "being", ".", "British", ",", "Brazilian", "or", "Bangladeshi", "..", "it", "matter", "not", "<", "URL", ">"]
(c1-9 / multi-sentence
      :snt1 (c1-12 / sorry-01
                   :ARG1 (c1-21 / person
                                :name (c1-10 / name
                                             :op1 "Thatcher"))
                   :polarity (c1-17 / amr-unknown)
                   :polarity (c1-11 / amr-unknown))
      :snt2 (c1-19 / hit-01
                   :ARG1 (c1-20 / person
                                :mod (c1-5 / country
                                           :name (c1-3 / name
                                                       :op1 "Britain")))
                   :polarity (c1-1 / amr-unknown)
                   :time (c1-22 / already))
      :snt3 (c1-7 / or
                  :op1 (c1-14 / person
                              :mod (c1-0 / country
                                         :name (c1-15 / name
                                                      :op1 "Great"
                                                      :op2 "Britain")))
                  :op2 (c1-13 / person
                              :mod (c1-6 / country
                                         :name (c1-4 / name
                                                     :op1 "Brazil")))
                  :op3 (c1-2 / person
                             :mod (c1-16 / country
                                         :name (c1-8 / name
                                                     :op1 "Bangladesh")))
                  :ARG1-of (c1-18 / matter-01
                                  :polarity -)))

# ::snt what about the people consistently trying to kill my children Jake ? Those that already hate me and my way of life .
# ::tokens ["what", "about", "the", "people", "consistently", "trying", "to", "kill", "my", "children", "Jake", "?", "Those", "that", "already", "hate", "me", "and", "my", "way", "of", "life", "."]
# ::lemmas ["what", "about", "the", "people", "consistently", "try", "to", "kill", "my", "child", "Jake", "?", "those", "that", "already", "hate", "i", "and", "my", "way", "of", "life", "."]
(c2-8 / multi-sentence
      :snt1 (c2-13 / amr-unknown
                   :topic (c2-17 / person
                                 :ARG0-of (c2-7 / try-01
                                                :ARG1 (c2-18 / kill-01
                                                             :ARG0 c2-17
                                                             :ARG1 (c2-15 / person
                                                                          :name (c2-9 / name
                                                                                      :op1 "Jake")
                                                                          :ARG0-of (c2-14 / have-rel-role-91
                                                                                          :ARG1 (c2-3 / i)
                                                                                          :ARG2 (c2-4 / child))))
                                                :ARG1-of (c2-0 / consistent-02))))
      :snt2 (c2-2 / hate-01
                  :ARG0 (c2-11 / person
                               :mod (c2-6 / that))
                  :ARG1 (c2-10 / and
                               :op1 (c2-12 / i)
                               :op2 (c2-5 / way
                                          :manner-of (c2-16 / live-01
                                                            :ARG0 c2-12)))
                  :time (c2-1 / already)))

# ::snt Sure , we should protect ourselves against that hate , but not by shutting everyone out ! If you like this logic -
# ::tokens ["Sure", ",", "we", "should", "protect", "ourselves", "against", "that", "hate", ",", "but", "not", "by", "shutting", "everyone", "out", "!", "If", "you", "like", "this", "logic", "-"]
# ::lemmas ["sure", ",", "we", "should", "protect", "ourselves", "against", "that", "hate", ",", "but", "not", "by", "shut", "everyone", "out", "!", "if", "you", "like", "this", "logic", "-"]
(c3-14 / multi-sentence
       :snt1 (c3-0 / sure-02
                   :ARG1 (c3-1 / contrast-01
                               :ARG1 (c3-9 / recommend-01
                                           :ARG1 (c3-13 / protect-01
                                                        :ARG0 (c3-2 / we
                                                                    :ARG1-of c3-13)
                                                        :ARG3 (c3-4 / hate-01
                                                                    :mod (c3-8 / that)))
                                           :ARG2 c3-2)
                               :ARG2 (c3-6 / recommend-01
                                           :ARG1 (c3-7 / protect-01
                                                       :ARG0 c3-2
                                                       :ARG1 c3-2
                                                       :manner (c3-12 / shut-out-06
                                                                      :ARG0 c3-2
                                                                      :ARG1 (c3-16 / everyone)))
                                           :polarity -)))
       :snt2 (c3-5 / have-condition-91
                   :ARG2 (c3-10 / like-01
                                :ARG0 (c3-15 / you)
                                :ARG1 (c3-11 / logic
                                             :mod (c3-3 / this)))))

# ::snt where has Trump said ' total ban ' please can you send me a link ?
# ::tokens ["where", "has", "Trump", "said", "'", "total", "ban", "'", "please", "can", "you", "send", "me", "a", "link", "?"]
# ::lemmas ["where", "have", "Trump", "say", "'", "total", "ban", "'", "please", "can", "you", "send", "i", "a", "link", "?"]
(c4-9 / multi-sentence
      :snt1 (c4-0 / say-01
                  :ARG0 (c4-8 / person
                              :name (c4-10 / name
                                           :op1 "Trump"))
                  :ARG1 (c4-6 / ban-01
                              :mod (c4-4 / total))
                  :location (c4-1 / amr-unknown))
      :snt2 (c4-3 / possible-01
                  :ARG1 (c4-7 / send-01
                              :ARG0 (c4-11 / you)
                              :ARG1 (c4-5 / link)
                              :ARG2 (c4-2 / i))
                  :polarity (c4-12 / amr-unknown)
                  :polite +))

# ::snt I didn't say that but he has said that " DT is calling for a total ban , on Muslims coming to this country , until we work out ...
# ::tokens ["I", "did", "n't", "say", "that", "but", "he", "has", "said", "that", "\"", "DT", "is", "calling", "for", "a", "total", "ban", ",", "on", "Muslims", "coming", "to", "this", "country", ",", "until", "we", "work", "out", "..."]
# ::lemmas ["i", "do", "not", "say", "that", "but", "he", "have", "say", "that", "\"", "DT", "be", "call", "for", "a", "total", "ban", ",", "on", "Muslims", "come", "to", "this", "country", ",", "until", "we", "work", "out", "..."]
(c5-3 / contrast-01
      :ARG1 (c5-12 / say-01
                   :ARG0 (c5-2 / i)
                   :ARG1 (c5-7 / that)
                   :polarity -)
      :ARG2 (c5-19 / say-01
                   :ARG0 (c5-15 / he)
                   :ARG1 (c5-0 / call-03
                               :ARG0 (c5-20 / person
                                            :name (c5-9 / name
                                                        :op1 " DT"))
                               :ARG1 (c5-14 / and
                                            :op1 (c5-18 / ban-01
                                                        :ARG1 (c5-6 / come-01
                                                                    :ARG1 (c5-17 / person
                                                                                 :mod (c5-8 / religious-group
                                                                                            :name (c5-1 / name
                                                                                                        :op1 "Muslim")))
                                                                    :ARG4 (c5-13 / country
                                                                                 :mod (c5-5 / this)))
                                                        :mod (c5-10 / total)
                                                        :op2-of c5-14)
                                            :ARG1 c5-6))
                   :time (c5-16 / until
                                :op1 (c5-4 / work-out-02
                                           :ARG0 (c5-11 / we)))))
