# ::snt The KKK seems to think it matters who becomes President . Do you ? <URL>
# ::tokens ["The", "KKK", "seems", "to", "think", "it", "matters", "who", "becomes", "President", ".", "Do", "you", "?", "<", "URL", ">"]
# ::lemmas ["the", "KKK", "seem", "to", "think", "it", "matter", "who", "become", "President", ".", "do", "you", "?", "<", "URL", ">"]
(c1-8 / multi-sentence
      :snt1 (c1-0 / seem-01
                  :ARG1 (c1-5 / think-01
                              :ARG0 (c1-3 / organization
                                          :name (c1-9 / name
                                                      :op1 "KKK"))
                              :ARG1 (c1-2 / matter-01
                                          :ARG1 (c1-7 / person
                                                      :ARG1-of (c1-6 / become-01
                                                                     :ARG2 (c1-4 / president))))))
      :snt2 (c1-11 / event
                   :polarity (c1-1 / amr-unknown)
                   :mod (c1-10 / you)))

# ::snt tell that to or . You work with them . If she loses , it's because of idiots like them .
# ::tokens ["tell", "that", "to", "or", ".", "You", "work", "with", "them", ".", "If", "she", "loses", ",", "it", "'s", "because", "of", "idiots", "like", "them", "."]
# ::lemmas ["tell", "that", "to", "or", ".", "you", "work", "with", "they", ".", "if", "she", "lose", ",", "it", "be", "because", "of", "idiot", "like", "they", "."]
(c2-12 / multi-sentence
       :snt1 (c2-7 / or
                   :op1 (c2-8 / tell-01
                              :ARG0 (c2-13 / you)
                              :ARG1 (c2-4 / that)
                              :ARG2 (c2-2 / they)
                              :mode imperative)
                   :op2 (c2-3 / work-01
                              :ARG0 c2-13
                              :ARG3 (c2-6 / they)
                              :mode imperative))
       :snt2 (c2-5 / cause-01
                   :ARG0 (c2-11 / idiot
                                :ARG1-of (c2-9 / resemble-01
                                               :ARG2 (c2-1 / they)))
                   :ARG1 (c2-10 / lose-03
                                :ARG0 (c2-0 / she)
                                :condition-of c2-5)))

# ::snt If she loses , it's b / c of herself She hasn't even taken a position RE ffs
# ::tokens ["If", "she", "loses", ",", "it", "'s", "b", "/", "c", "of", "herself", "She", "has", "n't", "even", "taken", "a", "position", "RE", "ffs"]
# ::lemmas ["if", "she", "lose", ",", "it", "be", "b", "/", "c", "of", "herself", "she", "have", "not", "even", "take", "a", "position", "RE", "ffs"]
(c3-11 / multi-sentence
       :snt1 (c3-2 / cause-01
                   :ARG0 (c3-4 / have-polarity-91
                               :ARG1 (c3-8 / lose-03
                                           :ARG0 (c3-0 / she))
                               :ARG2 -))
       :snt2 (c3-7 / take-01
                   :ARG0 (c3-9 / she)
                   :ARG1 (c3-10 / position
                                :ARG2-of (c3-1 / favor-01
                                               :ARG1 (c3-6 / person
                                                           :ARG0-of (c3-5 / have-org-role-91
                                                                          :ARG1 (c3-3 / political-party
                                                                                      :name (c3-12 / name
                                                                                                   :op1 "Republican"
                                                                                                   :op2 "Party"))))))
                   :mod (c3-13 / even)
                   :polarity -))

# ::snt Bullshit , and that's what losers say when they a <URL>
# ::tokens ["Bullshit", ",", "and", "that", "'s", "what", "losers", "say", "when", "they", "a", "<", "URL", ">"]
# ::lemmas ["Bullshit", ",", "and", "that", "be", "what", "loser", "say", "when", "they", "a", "<", "URL", ">"]
(c4-1 / and
      :op1 (c4-3 / bullshit-01)
      :op2 (c4-0 / say-01
                 :ARG0 (c4-4 / person
                             :ARG0-of (c4-2 / lose-03))
                 :ARG1 c4-3
                 :time (c4-5 / event
                             :mod c4-4)))

# ::snt Um , YOU just complained RE hrc losing ... Projection much ? HRC was a bad pick .
# ::tokens ["Um", ",", "YOU", "just", "complained", "RE", "hrc", "losing", "...", "Projection", "much", "?", "HRC", "was", "a", "bad", "pick", "."]
# ::lemmas ["um", ",", "you", "just", "complain", "RE", "hrc", "lose", "...", "projection", "much", "?", "HRC", "be", "a", "bad", "pick", "."]
(c5-11 / multi-sentence
       :snt1 (c5-0 / complain-01
                   :ARG0 (c5-13 / you)
                   :ARG1 (c5-7 / lose-03
                               :ARG0 (c5-10 / person
                                            :name (c5-12 / name
                                                         :op1 "RE"
                                                         :op2 "Hrc")))
                   :mod (c5-4 / um
                              :mode expressive)
                   :mod (c5-9 / just))
       :snt2 (c5-5 / project-01
                   :degree (c5-1 / much))
       :snt3 (c5-3 / pick-01
                   :ARG1 (c5-2 / person
                               :name (c5-6 / name
                                           :op1 "HRC"))
                   :ARG1-of (c5-8 / bad-07)))

# ::snt HRC does little to compel Progs to vote FOR her it's just AGAINST Trump Bad strategy
# ::tokens ["HRC", "does", "little", "to", "compel", "Progs", "to", "vote", "FOR", "her", "it", "'s", "just", "AGAINST", "Trump", "Bad", "strategy"]
# ::lemmas ["HRC", "do", "little", "to", "compel", "Progs", "to", "vote", "for", "she", "it", "be", "just", "AGAINST", "Trump", "Bad", "strategy"]
(c6-14 / multi-sentence
       :snt1 (c6-0 / do-02
                   :ARG0 (c6-5 / organization
                               :name (c6-15 / name
                                            :op1 "HRC"))
                   :ARG1 (c6-9 / little)
                   :ARG2 (c6-2 / compel-01
                               :ARG0 c6-5
                               :ARG1 (c6-13 / person
                                            :name (c6-8 / name
                                                        :op1 "Progs"))
                               :ARG2 (c6-4 / vote-01
                                           :ARG0 c6-13
                                           :ARG1 (c6-1 / she))))
       :snt2 (c6-12 / strategy
                    :ARG0-of (c6-3 / oppose-01
                                   :ARG1 (c6-6 / person
                                               :name (c6-7 / name
                                                           :op1 "Trump")))
                    :ARG1-of (c6-11 / bad-07)
                    :mod (c6-10 / just)))

# ::snt Ok , for her , or against Trump . Both legit . You sanctimoni <URL>
# ::tokens ["Ok", ",", "for", "her", ",", "or", "against", "Trump", ".", "Both", "legit", ".", "You", "sanctimoni", "<", "URL", ">"]
# ::lemmas ["ok", ",", "for", "she", ",", "or", "against", "Trump", ".", "both", "legit", ".", "you", "sanctimoni", "<", "URL", ">"]
(c7-7 / multi-sentence
      :snt1 (c7-2 / okay-01
                  :ARG2 (c7-1 / or
                              :op1 (c7-0 / she)
                              :op2 (c7-6 / person
                                         :name (c7-8 / name
                                                     :op1 "Trump"))))
      :snt2 (c7-3 / legit-02
                  :ARG1 (c7-4 / both))
      :snt3 (c7-5 / sanctimoni
                  :domain (c7-9 / you)))

# ::snt The ONLY way Progs will vote AGAINST Trump is if they think HRC is better ENOUGH .
# ::tokens ["The", "ONLY", "way", "Progs", "will", "vote", "AGAINST", "Trump", "is", "if", "they", "think", "HRC", "is", "better", "ENOUGH", "."]
# ::lemmas ["the", "only", "way", "Progs", "will", "vote", "AGAINST", "Trump", "be", "if", "they", "think", "HRC", "be", "well", "ENOUGH", "."]
(c8-1 / way
      :mod (c8-6 / only)
      :manner-of (c8-5 / vote-01
                       :ARG0 (c8-13 / person
                                    :ARG0-of (c8-4 / have-org-role-91
                                                   :ARG1 (c8-7 / political-party
                                                               :name (c8-15 / name
                                                                            :op1 "Progs"))))
                       :ARG1 (c8-0 / against
                                   :op1 (c8-3 / person
                                              :name (c8-9 / name
                                                          :op1 "Trump"))))
      :domain (c8-8 / think-01
                    :ARG0 c8-13
                    :ARG1 (c8-12 / have-degree-91
                                 :ARG1 (c8-2 / person
                                             :name (c8-10 / name
                                                          :op1 "HRC"))
                                 :ARG2 (c8-11 / good-02
                                              :ARG1 c8-2)
                                 :ARG3 (c8-14 / more))))

# ::snt If Progs like / don't think HRC = better ENOUGH , she won't EARN those VOTES
# ::tokens ["If", "Progs", "like", "/", "do", "n't", "think", "HRC", "=", "better", "ENOUGH", ",", "she", "wo", "n't", "EARN", "those", "VOTES"]
# ::lemmas ["if", "Progs", "like", "/", "do", "not", "think", "HRC", "=", "well", "ENOUGH", ",", "she", "will", "not", "earn", "those", "vote"]
(c9-3 / have-condition-91
      :ARG1 (c9-14 / earn-01
                   :ARG0 (c9-11 / person
                                :name (c9-13 / name
                                             :op1 "HRC"))
                   :ARG1 (c9-5 / veto
                               :mod (c9-7 / that))
                   :polarity -)
      :ARG2 (c9-0 / slash
                  :op1 (c9-8 / like-01
                             :ARG0 (c9-6 / person)
                             :ARG1 (c9-4 / equal-01
                                         :ARG1 (c9-2 / person
                                                     :name c9-13
                                                     :op1 "HRC"))
                             :ARG2 (c9-9 / good-02
                                         :ARG2-of (c9-10 / have-degree-91
                                                         :ARG1 c9-2
                                                         :ARG3 (c9-12 / more)))))
      :op2 (c9-1 / think-01
                 :ARG0 c9-6
                 :ARG1 c9-4
                 :polarity -))
