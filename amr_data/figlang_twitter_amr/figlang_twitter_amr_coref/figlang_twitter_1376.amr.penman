# ::snt " what a joke " was sarcasm . & no , your point hasn't been proven . ( Hindu ) Goons making a Muslim actress & her
# ::tokens ["\"", "what", "a", "joke", "\"", "was", "sarcasm", ".", "&", "no", ",", "your", "point", "has", "n't", "been", "proven", ".", "(", "Hindu", ")", "Goons", "making", "a", "Muslim", "actress", "&", "her"]
# ::lemmas ["\"", "what", "a", "joke", "\"", "be", "sarcasm", ".", "&", "no", ",", "your", "point", "have", "not", "be", "prove", ".", "(", "Hindu", ")", "goon", "make", "a", "Muslim", "actress", "&", "she"]
(c1-12 / multi-sentence
       :snt1 (c1-0 / sarcasm
                   :domain (c1-10 / joke-01))
       :snt2 (c1-11 / prove-01
                    :ARG1 (c1-6 / point-04
                                :ARG0 (c1-14 / you))
                    :polarity -)
       :snt3 (c1-3 / make-01
                   :ARG0 (c1-9 / goon)
                   :ARG1 (c1-2 / and
                               :op1 (c1-4 / person
                                          :ARG0-of (c1-15 / act-01)
                                          :mod (c1-7 / religious-group
                                                     :name (c1-13 / name
                                                                  :op1 "Muslim")))
                               :op2 (c1-1 / she)))
       :snt4 (c1-5 / religious-group
                   :name (c1-8 / name
                               :op1 "Hindu")))

# ::snt Why should I prove my point to you who runs with disclaimer and says I don't care about past ?
# ::tokens ["Why", "should", "I", "prove", "my", "point", "to", "you", "who", "runs", "with", "disclaimer", "and", "says", "I", "do", "n't", "care", "about", "past", "?"]
# ::lemmas ["why", "should", "i", "prove", "my", "point", "to", "you", "who", "run", "with", "disclaimer", "and", "say", "i", "do", "not", "care", "about", "past", "?"]
(c2-5 / cause-01
      :ARG0 (c2-3 / amr-unknown)
      :ARG1 (c2-9 / recommend-01
                  :ARG1 (c2-10 / prove-01
                               :ARG0 (c2-4 / i)
                               :ARG1 (c2-8 / point-04
                                           :ARG0 c2-4)
                               :ARG2 (c2-11 / you
                                            :ARG0-of (c2-7 / run-02
                                                           :manner (c2-0 / disclaimer)
                                                           :ARG0-of (c2-1 / say-01
                                                                          :ARG1 (c2-2 / care-01
                                                                                      :ARG0 c2-4
                                                                                      :ARG1 (c2-6 / past)
                                                                                      :polarity -)))))))

# ::snt Let me tell.Amnt supporting attackers.Just like others react if there is a distortion , so would these people
# ::tokens ["Let", "me", "tell", ".", "Amnt", "supporting", "attackers", ".", "Just", "like", "others", "react", "if", "there", "is", "a", "distortion", ",", "so", "would", "these", "people"]
# ::lemmas ["let", "i", "tell", ".", "amnt", "support", "attacker", ".", "just", "like", "other", "react", "if", "there", "be", "a", "distortion", ",", "so", "would", "these", "people"]
(c3-13 / multi-sentence
       :snt1 (c3-9 / let-01
                   :ARG0 (c3-14 / you)
                   :ARG1 (c3-7 / tell-01
                               :ARG0 (c3-12 / i)))
       :snt2 (c3-0 / support-01
                   :ARG0 (c3-3 / i)
                   :ARG1 (c3-10 / person
                                :ARG0-of (c3-2 / attack-01))
                   :ARG1-of (c3-8 / resemble-01
                                  :ARG2 (c3-4 / react-01
                                              :ARG0 (c3-6 / person
                                                          :mod (c3-5 / other))
                                              :condition (c3-1 / distort-01))
                                  :mod (c3-11 / just))
                   :polarity -))

# ::snt I don't think violence is a way to react if you disagree with something so don't try & justify it .
# ::tokens ["I", "do", "n't", "think", "violence", "is", "a", "way", "to", "react", "if", "you", "disagree", "with", "something", "so", "do", "n't", "try", "&", "justify", "it", "."]
# ::lemmas ["i", "do", "not", "think", "violence", "be", "a", "way", "to", "react", "if", "you", "disagree", "with", "something", "so", "do", "not", "try", "&", "justify", "it", "."]
(c4-5 / think-01
      :ARG0 (c4-8 / i)
      :ARG1 (c4-4 / violence
                  :manner-of (c4-6 / react-01
                                   :condition (c4-0 / disagree-01
                                                    :ARG0 (c4-9 / you)
                                                    :ARG1 (c4-1 / something))
                                   :ARG0-of (c4-2 / cause-01
                                                  :ARG1 (c4-3 / try-01
                                                              :ARG0 c4-9
                                                              :ARG1 (c4-7 / justify-01
                                                                          :ARG0 c4-9
                                                                          :ARG1 c4-1)
                                                              :polarity -))))
      :polarity -)

# ::snt I told that clearly but carrying a disclaimer and distorting doesn't do any good
# ::tokens ["I", "told", "that", "clearly", "but", "carrying", "a", "disclaimer", "and", "distorting", "does", "n't", "do", "any", "good"]
# ::lemmas ["i", "tell", "that", "clearly", "but", "carry", "a", "disclaimer", "and", "distort", "do", "not", "do", "any", "good"]
(c5-3 / contrast-01
      :ARG1 (c5-8 / tell-01
                  :ARG0 (c5-10 / i)
                  :ARG1 (c5-5 / that)
                  :ARG1-of (c5-0 / clear-06))
      :ARG2 (c5-1 / do-02
                  :ARG0 (c5-2 / and
                              :op1 (c5-7 / carry-01
                                         :ARG1 (c5-6 / disclaimer))
                              :op2 (c5-4 / distort-01))
                  :ARG1 (c5-9 / good-02)
                  :mod (c5-11 / any)
                  :polarity -))

# ::snt I'm saying this for the nth time , the film did not set out to provide an accurate depiction of history . It
# ::tokens ["I", "'m", "saying", "this", "for", "the", "nth", "time", ",", "the", "film", "did", "not", "set", "out", "to", "provide", "an", "accurate", "depiction", "of", "history", ".", "It"]
# ::lemmas ["i", "be", "say", "this", "for", "the", "nth", "time", ",", "the", "film", "do", "not", "set", "out", "to", "provide", "an", "accurate", "depiction", "of", "history", ".", "it"]
(c6-10 / multi-sentence
       :snt1 (c6-0 / say-01
                   :ARG0 (c6-9 / i)
                   :ARG1 (c6-8 / set-out-07
                               :ARG0 (c6-3 / film)
                               :ARG1 (c6-7 / provide-01
                                           :ARG0 c6-3
                                           :ARG1 (c6-1 / depict-01
                                                       :ARG0 c6-3
                                                       :ARG1 (c6-4 / history)
                                                       :mod (c6-2 / accurate)))
                               :polarity -)
                   :ord (c6-6 / ordinal-entity
                              :value -1))
       :snt2 (c6-5 / it))

# ::snt I telling for the nth time that you run with a disclaimer and show what you want is stupidity
# ::tokens ["I", "telling", "for", "the", "nth", "time", "that", "you", "run", "with", "a", "disclaimer", "and", "show", "what", "you", "want", "is", "stupidity"]
# ::lemmas ["i", "tell", "for", "the", "nth", "time", "that", "you", "run", "with", "a", "disclaimer", "and", "show", "what", "you", "want", "be", "stupidity"]
(c7-6 / tell-01
      :ARG0 (c7-9 / i)
      :ARG1 (c7-0 / stupidity
                  :domain (c7-2 / and
                                :op1 (c7-7 / run-02
                                           :ARG0 (c7-10 / you)
                                           :manner (c7-1 / disclaim-01
                                                         :ARG0 c7-10))
                                :op2 (c7-8 / show-01
                                           :ARG0 c7-10
                                           :ARG1 (c7-4 / thing
                                                       :ARG1-of (c7-3 / want-01
                                                                      :ARG0 c7-10)))))
      :ord (c7-5 / ordinal-entity
                 :value -1))

# ::snt Right from start am talking about know your histo <URL>
# ::tokens ["Right", "from", "start", "am", "talking", "about", "know", "your", "histo", "<", "URL", ">"]
# ::lemmas ["right", "from", "start", "be", "talk", "about", "know", "your", "histo", "<", "URL", ">"]
(c8-3 / talk-01
      :ARG0 (c8-5 / i)
      :ARG1 (c8-6 / know-01
                  :ARG0 (c8-7 / you)
                  :ARG1 (c8-2 / histo
                              :poss c8-7))
      :time (c8-1 / from
                  :op1 (c8-0 / start-01)
                  :mod (c8-4 / right)))

# ::snt I don't care if you carry a disclaimer or not
# ::tokens ["I", "do", "n't", "care", "if", "you", "carry", "a", "disclaimer", "or", "not"]
# ::lemmas ["i", "do", "not", "care", "if", "you", "carry", "a", "disclaimer", "or", "not"]
(c9-2 / care-01
      :ARG0 (c9-5 / i)
      :ARG1 (c9-4 / or
                  :op1 (c9-0 / carry-01
                             :ARG0 (c9-6 / you)
                             :ARG1 (c9-1 / disclaimer))
                  :op2 (c9-3 / carry-01
                             :ARG0 c9-6
                             :ARG1 c9-1
                             :polarity -))
      :polarity -)

# ::snt you still aren't proving a point . Just reiterating the same thing won't make you right .
# ::tokens ["you", "still", "are", "n't", "proving", "a", "point", ".", "Just", "reiterating", "the", "same", "thing", "wo", "n't", "make", "you", "right", "."]
# ::lemmas ["you", "still", "be", "not", "prove", "a", "point", ".", "just", "reiterate", "the", "same", "thing", "will", "not", "make", "you", "right", "."]
(c10-9 / multi-sentence
       :snt1 (c10-8 / prove-01
                    :ARG0 (c10-10 / you)
                    :ARG1 (c10-3 / point-04
                                 :ARG0 c10-10)
                    :mod (c10-0 / still)
                    :polarity -)
       :snt2 (c10-1 / make-02
                    :ARG0 (c10-5 / reiterate-01
                                 :ARG0 (c10-11 / you)
                                 :ARG1 (c10-4 / thing
                                              :ARG1-of (c10-7 / same-01))
                                 :mod (c10-6 / just))
                    :ARG1 (c10-2 / right-06
                                 :ARG1 c10-11)
                    :polarity -))

# ::snt perfect just reiterating the disclaimer doesn't take you anywhere .
# ::tokens ["perfect", "just", "reiterating", "the", "disclaimer", "does", "n't", "take", "you", "anywhere", "."]
# ::lemmas ["perfect", "just", "reiterate", "the", "disclaimer", "do", "not", "take", "you", "anywhere", "."]
(c11-2 / take-01
       :ARG0 (c11-3 / reiterate-01
                    :ARG1 (c11-0 / disclaimer)
                    :mod (c11-4 / just)
                    :ARG1-of (c11-5 / perfect-02))
       :ARG1 (c11-6 / you)
       :ARG3 (c11-1 / anywhere)
       :polarity -)

# ::snt actually , I made multiple points . All you did was quote different people to prove your point .
# ::tokens ["actually", ",", "I", "made", "multiple", "points", ".", "All", "you", "did", "was", "quote", "different", "people", "to", "prove", "your", "point", "."]
# ::lemmas ["actually", ",", "i", "make", "multiple", "point", ".", "all", "you", "do", "be", "quote", "different", "people", "to", "prove", "your", "point", "."]
(c12-10 / multi-sentence
        :snt1 (c12-9 / point-04
                     :ARG0 (c12-3 / i)
                     :quant (c12-2 / multiple)
                     :ARG1-of (c12-1 / actual-02))
        :snt2 (c12-0 / do-02
                     :ARG0 (c12-11 / you)
                     :ARG1 (c12-4 / quote-01
                                  :ARG0 c12-11
                                  :ARG2 (c12-8 / person
                                               :ARG1-of (c12-5 / differ-02))
                                  :purpose (c12-6 / prove-01
                                                  :ARG0 c12-11
                                                  :ARG1 (c12-7 / point-04
                                                               :ARG0 c12-11))
                                  :mod (c12-12 / all))))

# ::snt The day Slb takes a scene bravely where prophet marrys his daughterinlaw & give a disclaimer , we can talk.Bye
# ::tokens ["The", "day", "Slb", "takes", "a", "scene", "bravely", "where", "prophet", "marrys", "his", "daughterinlaw", "&", "give", "a", "disclaimer", ",", "we", "can", "talk", ".", "Bye"]
# ::lemmas ["the", "day", "Slb", "take", "a", "scene", "bravely", "where", "prophet", "marry", "his", "daughterinlaw", "&", "give", "a", "disclaimer", ",", "we", "can", "talk", ".", "bye"]
(c13-14 / possible-01
        :ARG1 (c13-12 / talk-01
                      :ARG0 (c13-4 / we))
        :time (c13-0 / day
                     :time-of (c13-5 / take-01
                                     :ARG0 (c13-11 / person
                                                   :name (c13-16 / name
                                                                 :op1 "Slb"))
                                     :ARG1 (c13-1 / scene
                                                  :topic (c13-3 / and
                                                                :op1 (c13-15 / marry-01
                                                                             :ARG1 (c13-6 / person
                                                                                          :ARG0-of (c13-7 / have-rel-role-91
                                                                                                          :ARG1 (c13-8 / prophet)
                                                                                                          :ARG2 (c13-9 / daughterinlaw))))
                                                                :op2 (c13-10 / disclaim-01
                                                                             :ARG0 c13-6))
                                                  :ARG0-of (c13-13 / brave-02))))
        :mod (c13-2 / bye))

# ::snt Ya I will not make for while Bollywood sleeping when this happened <URL>
# ::tokens ["Ya", "I", "will", "not", "make", "for", "while", "Bollywood", "sleeping", "when", "this", "happened", "<", "URL", ">"]
# ::lemmas ["ya", "i", "will", "not", "make", "for", "while", "Bollywood", "sleep", "when", "this", "happen", "<", "URL", ">"]
(c14-4 / make-for-26
       :ARG0 (c14-3 / i)
       :time (c14-0 / sleep-01
                    :ARG0 (c14-1 / market-sector
                                 :name (c14-5 / name
                                              :op1 "Bollywood"))
                    :time (c14-2 / this))
       :mod (c14-6 / ya
                   :mode expressive)
       :polarity -)

# ::snt I keep saying this to you , stop trying to look for other things to prove your point . Or using random quotes
# ::tokens ["I", "keep", "saying", "this", "to", "you", ",", "stop", "trying", "to", "look", "for", "other", "things", "to", "prove", "your", "point", ".", "Or", "using", "random", "quotes"]
# ::lemmas ["i", "keep", "say", "this", "to", "you", ",", "stop", "try", "to", "look", "for", "other", "thing", "to", "prove", "your", "point", ".", "or", "use", "random", "quote"]
(c15-14 / multi-sentence
        :snt1 (c15-15 / keep-02
                      :ARG0 (c15-13 / i)
                      :ARG1 (c15-0 / say-01
                                   :ARG0 c15-13
                                   :ARG1 (c15-8 / this)
                                   :ARG2 (c15-16 / you)))
        :snt2 (c15-12 / stop-01
                      :ARG0 (c15-17 / you)
                      :ARG1 (c15-3 / try-01
                                   :ARG0 c15-17
                                   :ARG1 (c15-10 / look-01
                                                 :ARG0 c15-17
                                                 :ARG1 (c15-1 / thing
                                                              :mod (c15-6 / other))
                                                 :purpose (c15-11 / prove-01
                                                                  :ARG0 c15-17
                                                                  :ARG1 (c15-7 / point-04
                                                                               :ARG0 c15-17))))
                      :mode imperative)
        :snt3 (c15-4 / or
                     :op2 (c15-5 / use-01
                                 :ARG1 (c15-2 / quote-01
                                              :mod (c15-9 / random)))))

# ::snt forget every quotes . Where were toys guys when there Bengal issued happened ? Europe trip ?
# ::tokens ["forget", "every", "quotes", ".", "Where", "were", "toys", "guys", "when", "there", "Bengal", "issued", "happened", "?", "Europe", "trip", "?"]
# ::lemmas ["forget", "every", "quote", ".", "where", "be", "toy", "guy", "when", "there", "Bengal", "issue", "happen", "?", "Europe", "trip", "?"]
(c16-12 / multi-sentence
        :snt1 (c16-2 / forget-01
                     :ARG0 (c16-14 / you)
                     :ARG1 (c16-4 / quote-01
                                  :mod (c16-16 / every))
                     :mode imperative)
        :snt2 (c16-10 / be-located-at-91
                      :ARG1 (c16-8 / toy)
                      :ARG2 (c16-1 / amr-unknown)
                      :time (c16-11 / issue-01
                                    :ARG1 (c16-5 / thing
                                                 :ARG1-of (c16-3 / toy-01))
                                    :location (c16-0 / state
                                                     :name (c16-13 / name
                                                                   :op1 "Bengal")))
                      :snt3 (c16-7 / trip-03
                                   :ARG0 (c16-15 / you)
                                   :location (c16-6 / continent
                                                    :name (c16-9 / name
                                                                 :op1 "Europe")))))

# ::snt ya scream first in Twitter as doing now then talk . Don't appease the minority along with your bollywood . Bye
# ::tokens ["ya", "scream", "first", "in", "Twitter", "as", "doing", "now", "then", "talk", ".", "Do", "n't", "appease", "the", "minority", "along", "with", "your", "bollywood", ".", "Bye"]
# ::lemmas ["ya", "scream", "first", "in", "Twitter", "as", "do", "now", "then", "talk", ".", "do", "not", "appease", "the", "minority", "along", "with", "your", "bollywood", ".", "bye"]
(c17-12 / multi-sentence
        :snt1 (c17-0 / scream-01
                     :ARG0 (c17-14 / you)
                     :location (c17-11 / publication
                                       :name (c17-13 / name
                                                     :op1 "Twitter"))
                     :ord (c17-5 / ordinal-entity
                                 :value 1)
                     :ARG1-of (c17-7 / resemble-01
                                     :ARG2 (c17-10 / scream-01
                                                   :ARG0 c17-14
                                                   :time (c17-8 / now))))
        :snt2 (c17-6 / talk-01
                     :time (c17-4 / then))
        :snt3 (c17-2 / appease-01
                     :ARG0 (c17-15 / you)
                     :ARG1 (c17-3 / minority)
                     :accompanier (c17-9 / bollywood
                                         :poss c17-15)
                     :polarity -
                     :mode imperative)
        :snt4 (c17-1 / bye))
