# ::snt Awful all around customer service from & . G4s have crashed in months . Told it's back ordered for warranty .
# ::tokens ["Awful", "all", "around", "customer", "service", "from", "&", ".", "G4s", "have", "crashed", "in", "months", ".", "Told", "it", "'s", "back", "ordered", "for", "warranty", "."]
# ::lemmas ["awful", "all", "around", "customer", "service", "from", "&", ".", "G4s", "have", "crash", "in", "months", ".", "tell", "it", "be", "back", "order", "for", "warranty", "."]
(c1-13 / multi-sentence
       :snt1 (c1-3 / crash-01
                   :ARG1 (c1-0 / serve-01
                               :ARG0 (c1-1 / company
                                           :name (c1-14 / name
                                                        :op1 "&."
                                                        :op2 "G4s"))
                               :ARG1 (c1-7 / customer)
                               :mod (c1-2 / awful)
                               :mod (c1-15 / all-around))
                   :duration (c1-4 / multiple
                                   :op1 (c1-10 / temporal-quantity
                                               :unit (c1-8 / month)
                                               :quant 1)))
       :snt2 (c1-5 / tell-01
                   :ARG1 (c1-9 / order-02
                               :ARG1 (c1-12 / it)
                               :mod (c1-11 / back)
                               :purpose (c1-6 / warranty))))

# ::snt glad you've had luck . I had a terrible customer service experience with LG ...
# ::tokens ["glad", "you", "'ve", "had", "luck", ".", "I", "had", "a", "terrible", "customer", "service", "experience", "with", "LG", "..."]
# ::lemmas ["glad", "you", "'ve", "have", "luck", ".", "i", "have", "a", "terrible", "customer", "service", "experience", "with", "LG", "..."]
(c2-8 / multi-sentence
      :snt1 (c2-6 / glad-02
                  :ARG0 (c2-5 / luck
                              :poss (c2-10 / you))
                  :ARG1 (c2-7 / i))
      :snt2 (c2-11 / experience-01
                   :ARG0 (c2-3 / i)
                   :ARG1 (c2-0 / serve-01
                               :ARG0 c2-3
                               :ARG1 (c2-2 / customer)
                               :ARG2 (c2-1 / company
                                           :name (c2-9 / name
                                                       :op1 "LG"))
                               :ARG1-of (c2-4 / terrible-01))
                   :ARG2 c2-1))

# ::snt They basically just said It's on back order so no clue when it will get here . And hope you have a back up .
# ::tokens ["They", "basically", "just", "said", "It", "'s", "on", "back", "order", "so", "no", "clue", "when", "it", "will", "get", "here", ".", "And", "hope", "you", "have", "a", "back", "up", "."]
# ::lemmas ["they", "basically", "just", "say", "it", "be", "on", "back", "order", "so", "no", "clue", "when", "it", "will", "get", "here", ".", "and", "hope", "you", "have", "a", "back", "up", "."]
(c3-9 / multi-sentence
      :snt1 (c3-10 / say-01
                   :ARG0 (c3-7 / they)
                   :ARG1 (c3-6 / order-02
                               :ARG1 (c3-2 / it)
                               :mod (c3-19 / back)
                               :ARG0-of (c3-4 / cause-01
                                              :ARG1 (c3-0 / clue
                                                          :topic (c3-5 / time
                                                                       :time-of (c3-8 / get-05
                                                                                      :ARG1 (c3-12 / it)
                                                                                      :ARG2 (c3-17 / here)))
                                                          :polarity -)))
                   :mod (c3-15 / basic)
                   :mod (c3-20 / just))
      :snt2 (c3-16 / and
                   :op2 (c3-1 / hope-01
                              :ARG0 (c3-13 / i)
                              :ARG1 (c3-3 / have-03
                                          :ARG0 (c3-14 / you)
                                          :ARG1 (c3-11 / back
                                                       :mod (c3-18 / up))))))

# ::snt I totally misread that haha sorry to hear my case wasn't isolated !
# ::tokens ["I", "totally", "misread", "that", "haha", "sorry", "to", "hear", "my", "case", "was", "n't", "isolated", "!"]
# ::lemmas ["i", "totally", "misread", "that", "haha", "sorry", "to", "hear", "my", "case", "be", "not", "isolate", "!"]
(c4-1 / and
      :op1 (c4-9 / misread-01
                 :ARG0 (c4-8 / i)
                 :ARG1 (c4-6 / that)
                 :degree (c4-3 / total))
      :op2 (c4-0 / sorry-01
                 :ARG1 c4-8
                 :ARG2 (c4-4 / hear-01
                             :ARG0 c4-8
                             :ARG1 (c4-5 / isolate-01
                                         :ARG1 (c4-2 / case-03
                                                     :ARG0 c4-8)
                                         :polarity -))
                 :mod (c4-7 / haha
                            :mode expressive)))
