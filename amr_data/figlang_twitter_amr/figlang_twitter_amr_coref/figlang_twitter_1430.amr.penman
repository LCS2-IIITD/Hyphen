# ::snt I can't believe they blew that lead . I blame NFL commissioner James Comey .
# ::tokens ["I", "ca", "n't", "believe", "they", "blew", "that", "lead", ".", "I", "blame", "NFL", "commissioner", "James", "Comey", "."]
# ::lemmas ["i", "can", "not", "believe", "they", "blow", "that", "lead", ".", "i", "blame", "NFL", "commissioner", "James", "Comey", "."]
(c1-14 / multi-sentence
       :snt1 (c1-13 / possible-01
                    :ARG1 (c1-12 / believe-01
                                 :ARG0 (c1-1 / i)
                                 :ARG1 (c1-0 / blow-10
                                             :ARG0 (c1-8 / they)
                                             :ARG1 (c1-10 / lead-01
                                                          :mod (c1-3 / that))))
                    :polarity -)
       :snt2 (c1-4 / blame-01
                   :ARG0 (c1-5 / i)
                   :ARG1 (c1-7 / person
                               :name (c1-15 / name
                                            :op1 "James"
                                            :op2 "Comey")
                               :ARG0-of (c1-6 / have-org-role-91
                                              :ARG1 (c1-11 / league
                                                           :name (c1-9 / name
                                                                       :op1 "NFL"))
                                              :ARG2 (c1-2 / commissioner)))))

# ::snt could you explain just how it could be rigged that's quite an undertaking and do you have proof you can share ?
# ::tokens ["could", "you", "explain", "just", "how", "it", "could", "be", "rigged", "that", "'s", "quite", "an", "undertaking", "and", "do", "you", "have", "proof", "you", "can", "share", "?"]
# ::lemmas ["could", "you", "explain", "just", "how", "it", "could", "be", "rig", "that", "be", "quite", "an", "undertaking", "and", "do", "you", "have", "proof", "you", "can", "share", "?"]
(c2-1 / and
      :op1 (c2-14 / possible-01
                  :ARG1 (c2-17 / explain-01
                               :ARG0 (c2-15 / you)
                               :ARG1 (c2-11 / thing
                                            :manner-of (c2-12 / rig-01
                                                              :ARG1 (c2-2 / it)
                                                              :ARG1-of (c2-10 / possible-01))
                                            :domain (c2-4 / thing
                                                          :ARG0-of (c2-9 / undertake-01
                                                                         :degree (c2-3 / quite))))
                               :mod (c2-13 / just)))
      :op2 (c2-6 / have-03
                 :ARG0 c2-15
                 :ARG1 (c2-5 / thing
                             :ARG0-of (c2-7 / prove-01)
                             :ARG1-of (c2-0 / share-01
                                            :ARG0 c2-15
                                            :ARG1-of (c2-8 / possible-01)))
                 :polarity (c2-16 / amr-unknown)))

# ::snt people I know have been saying and I feel like it was . Fake news is all over about how they won with honor . Shame .
# ::tokens ["people", "I", "know", "have", "been", "saying", "and", "I", "feel", "like", "it", "was", ".", "Fake", "news", "is", "all", "over", "about", "how", "they", "won", "with", "honor", ".", "Shame", "."]
# ::lemmas ["people", "i", "know", "have", "be", "say", "and", "i", "feel", "like", "it", "be", ".", "fake", "news", "be", "all", "over", "about", "how", "they", "win", "with", "honor", ".", "shame", "."]
(c3-13 / multi-sentence
       :snt1 (c3-1 / and
                   :op1 (c3-0 / say-01
                              :ARG0 (c3-12 / person
                                           :ARG1-of (c3-14 / know-02
                                                           :ARG0 (c3-3 / i))))
                   :op2 (c3-2 / feel-01
                              :ARG0 c3-3
                              :ARG1 (c3-9 / resemble-01
                                          :ARG2 c3-0)))
       :snt2 (c3-15 / all-over
                    :domain (c3-10 / news
                                   :ARG1-of (c3-7 / fake-02))
                    :topic (c3-8 / thing
                                 :manner-of (c3-4 / win-01
                                                  :ARG0 (c3-5 / they)
                                                  :manner (c3-6 / honor-01))))
       :snt3 (c3-11 / shame-02))

# ::snt people I know say Elvis is still alive too still doesn't make it true . So you have no proof . Just admit it .
# ::tokens ["people", "I", "know", "say", "Elvis", "is", "still", "alive", "too", "still", "does", "n't", "make", "it", "true", ".", "So", "you", "have", "no", "proof", ".", "Just", "admit", "it", "."]
# ::lemmas ["people", "i", "know", "say", "Elvis", "be", "still", "alive", "too", "still", "do", "not", "make", "it", "true", ".", "so", "you", "have", "no", "proof", ".", "just", "admit", "it", "."]
(c4-4 / multi-sentence
      :snt1 (c4-13 / make-02
                   :ARG0 (c4-7 / say-01
                               :ARG0 (c4-19 / person
                                            :ARG1-of (c4-20 / know-01
                                                            :ARG0 (c4-0 / i)))
                               :ARG1 (c4-17 / live-01
                                            :ARG0 (c4-15 / person
                                                         :name (c4-5 / name
                                                                     :op1 "Elvis"))
                                            :mod (c4-18 / still)
                                            :mod (c4-3 / too)))
                   :ARG1 (c4-2 / true-01
                               :ARG1 (c4-9 / it))
                   :mod (c4-10 / still)
                   :polarity -)
      :snt2 (c4-1 / cause-01
                  :ARG1 (c4-14 / have-03
                               :ARG0 (c4-11 / you)
                               :ARG1 (c4-6 / thing
                                           :ARG0-of (c4-8 / prove-01))
                               :polarity -))
      :snt3 (c4-12 / admit-01
                   :ARG0 c4-11
                   :ARG1 c4-9
                   :mode imperative)
      :mod (c4-16 / just))
