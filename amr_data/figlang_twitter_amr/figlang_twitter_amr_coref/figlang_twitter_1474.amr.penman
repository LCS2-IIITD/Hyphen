# ::snt that must have been fun , it's dangerous just looking outside at Castle greyskull at the moment . Can't believe the concourse is open
# ::tokens ["that", "must", "have", "been", "fun", ",", "it", "'s", "dangerous", "just", "looking", "outside", "at", "Castle", "greyskull", "at", "the", "moment", ".", "Ca", "n't", "believe", "the", "concourse", "is", "open"]
# ::lemmas ["that", "must", "have", "be", "fun", ",", "it", "be", "dangerous", "just", "look", "outside", "at", "Castle", "greyskull", "at", "the", "moment", ".", "can", "not", "believe", "the", "concourse", "be", "open"]
(c1-12 / multi-sentence
       :snt1 (c1-11 / infer-01
                    :ARG1 (c1-1 / fun-01
                                :ARG1 (c1-6 / that)))
       :snt2 (c1-14 / endanger-01
                    :ARG0 (c1-7 / look-01
                                :ARG1 (c1-5 / outside
                                            :op1 (c1-2 / castle
                                                       :name (c1-13 / name
                                                                    :op1 " Castle"
                                                                    :op2 "Greyskull")))
                                :time (c1-3 / moment)
                                :mod (c1-10 / just)))
       :snt3 (c1-8 / possible-01
                   :ARG1 (c1-9 / believe-01
                               :ARG1 (c1-4 / open-09
                                           :ARG1 (c1-0 / concourse)))
                   :polarity -))

# ::snt Sniggers at castle greyskull , Thank you , I'll be using that
# ::tokens ["Sniggers", "at", "castle", "greyskull", ",", "Thank", "you", ",", "I", "'ll", "be", "using", "that"]
# ::lemmas ["snigger", "at", "castle", "greyskull", ",", "thank", "you", ",", "i", "'ll", "be", "use", "that"]
(c2-0 / say-01
      :ARG0 (c2-8 / i)
      :ARG1 (c2-5 / thank-01
                  :ARG0 c2-8
                  :ARG1 (c2-7 / person
                              :name (c2-9 / name
                                          :op1 "Sniggers")
                              :location (c2-2 / castle
                                              :name (c2-6 / name
                                                          :op1 "Greyskull")))
                  :ARG1-of (c2-1 / cause-01
                                 :ARG0 (c2-4 / use-01
                                             :ARG0 c2-8
                                             :ARG1 (c2-3 / that))))
      :ARG2 c2-7)

# ::snt " hell on the hill " .. You work there too ?
# ::tokens ["\"", "hell", "on", "the", "hill", "\"", "..", "You", "work", "there", "too", "?"]
# ::lemmas ["\"", "hell", "on", "the", "hill", "\"", "..", "you", "work", "there", "too", "?"]
(c3-6 / multi-sentence
      :snt1 (c3-3 / hell
                  :location (c3-5 / hill)
                  :mode expressive)
      :snt2 (c3-1 / work-01
                  :ARG0 (c3-7 / you)
                  :location (c3-4 / there)
                  :mod (c3-2 / too)
                  :polarity (c3-0 / amr-unknown)))

# ::snt Not at greyskull lol , The theatre of screams aka the front line down the vale
# ::tokens ["Not", "at", "greyskull", "lol", ",", "The", "theatre", "of", "screams", "aka", "the", "front", "line", "down", "the", "vale"]
# ::lemmas ["not", "at", "greyskull", "lol", ",", "the", "theatre", "of", "scream", "aka", "the", "front", "line", "down", "the", "vale"]
(c4-11 / multi-sentence
       :snt1 (c4-10 / be-located-at-91
                    :ARG2 (c4-4 / city-district
                                :name (c4-12 / name
                                             :op1 "Greyskull"))
                    :ARG2-of (c4-8 / laugh-01
                                   :manner (c4-9 / loud)
                                   :mode expressive)
                    :polarity -)
       :snt2 (c4-7 / theater
                   :mod (c4-0 / scream-01)
                   :ARG1-of (c4-5 / mean-01
                                  :ARG2 (c4-1 / line
                                              :mod (c4-3 / front)
                                              :location (c4-2 / down
                                                              :op1 (c4-6 / vale))))))
