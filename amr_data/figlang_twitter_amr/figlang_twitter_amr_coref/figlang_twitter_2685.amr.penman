# ::snt Thanks , Roma . G R A T I T U D E
# ::tokens ["Thanks", ",", "Roma", ".", "G", "R", "A", "T", "I", "T", "U", "D", "E"]
# ::lemmas ["thank", ",", "Roma", ".", "g", "R", "A", "t", "i", "t", "u", "d", "e"]
(c1-7 / multi-sentence
      :snt1 (c1-4 / thank-01
                  :ARG0 (c1-6 / i)
                  :ARG1 (c1-5 / person
                              :name (c1-8 / name
                                          :op1 "Roma")))
      :snt2 (c1-0 / and
                  :op1 (c1-1 / try-01
                             :ARG0 (c1-2 / i)
                             :ARG1 (c1-3 / it)
                             :op2-of c1-0)
                  :ARG0 c1-2
                  :ARG1 c1-3))

# ::snt Thank you I m grateful too to these A W E S O M E F R I E N D S <URL>
# ::tokens ["Thank", "you", "I", "m", "grateful", "too", "to", "these", "A", "W", "E", "S", "O", "M", "E", "F", "R", "I", "E", "N", "D", "S", "<", "URL", ">"]
# ::lemmas ["thank", "you", "i", "m", "grateful", "too", "to", "these", "a", "w", "e", "s", "o", "m", "e", "F", "R", "i", "e", "n", "d", "S", "<", "URL", ">"]
(c2-5 / thank-01
      :ARG0 (c2-7 / i)
      :ARG1 (c2-9 / you)
      :ARG2 (c2-1 / appreciate-02
                  :ARG0 c2-7
                  :ARG1 (c2-3 / this
                              :ARG1-of (c2-8 / mean-01
                                             :ARG2 (c2-10 / and
                                                          :op1 (c2-0 / string-entity
                                                                     :mod c2-3
                                                                     :value "A"))
                                             :op2 (c2-6 / string-entity
                                                        :mod c2-3
                                                        :value "E")
                                             :op3 (c2-4 / string-entity
                                                        :value "F R I E N D S"))))
      :mod (c2-2 / too))
