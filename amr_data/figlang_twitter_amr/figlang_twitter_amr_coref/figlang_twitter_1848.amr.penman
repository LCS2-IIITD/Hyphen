# ::snt Boeing Reponds To Trump s Air Force One Tweet : You re A F * * king Idiot <URL>
# ::tokens ["Boeing", "Reponds", "To", "Trump", "s", "Air", "Force", "One", "Tweet", ":", "You", "re", "A", "F", "*", "*", "king", "Idiot", "<", "URL", ">"]
# ::lemmas ["Boeing", "Reponds", "to", "Trump", "s", "Air", "Force", "One", "Tweet", ":", "you", "re", "a", "F", "*", "*", "king", "Idiot", "<", "URL", ">"]
(c1-0 / say-01
      :ARG0 (c1-11 / person
                   :ARG0-of (c1-6 / have-org-role-91
                                  :ARG1 (c1-2 / company
                                              :name (c1-13 / name
                                                           :op1 "Boeing"))
                                  :ARG2 (c1-12 / member)))
      :ARG1 (c1-10 / say-01
                   :ARG0 c1-11
                   :ARG1 (c1-8 / person
                               :mod (c1-3 / idiot)
                               :domain (c1-14 / you)
                               :mod (c1-1 / fuck
                                          :mode expressive))
                   :ARG2 (c1-5 / publication
                               :name (c1-9 / name
                                           :op1 "Air"
                                           :op2 "Force"
                                           :op3 "One")
                               :poss (c1-4 / person
                                           :name (c1-7 / name
                                                       :op1 "Trump"))))
      :ARG2 c1-8)

# ::snt Who from Boeing called him a f---king idiot ? Article does not make that clear . The name should be revealed .
# ::tokens ["Who", "from", "Boeing", "called", "him", "a", "f", "---", "king", "idiot", "?", "Article", "does", "not", "make", "that", "clear", ".", "The", "name", "should", "be", "revealed", "."]
# ::lemmas ["who", "from", "Boeing", "call", "he", "a", "f", "---", "king", "idiot", "?", "article", "do", "not", "make", "that", "clear", ".", "the", "name", "should", "be", "reveal", "."]
(c2-12 / multi-sentence
       :snt1 (c2-3 / call-01
                   :ARG0 (c2-1 / amr-unknown
                               :source (c2-0 / company
                                             :name (c2-13 / name
                                                          :op1 "Boeing")))
                   :ARG1 (c2-5 / he)
                   :ARG2 (c2-11 / idiot
                                :mod (c2-2 / fucking
                                           :mode expressive)))
       :snt2 (c2-6 / clarify-10
                   :ARG0 (c2-14 / article)
                   :ARG1 (c2-8 / that)
                   :polarity -)
       :snt3 (c2-9 / recommend-01
                   :ARG1 (c2-7 / reveal-01
                               :ARG1 (c2-4 / thing
                                           :ARG2-of (c2-10 / name-01)))))

# ::snt Implied is inadequate ! If someone said this , identify . If not , it is a false attribution . Fake news !
# ::tokens ["Implied", "is", "inadequate", "!", "If", "someone", "said", "this", ",", "identify", ".", "If", "not", ",", "it", "is", "a", "false", "attribution", ".", "Fake", "news", "!"]
# ::lemmas ["imply", "be", "inadequate", "!", "if", "someone", "say", "this", ",", "identify", ".", "if", "not", ",", "it", "be", "a", "false", "attribution", ".", "fake", "news", "!"]
(c3-10 / multi-sentence
       :snt1 (c3-9 / inadequate
                   :domain (c3-3 / implicate-01))
       :snt2 (c3-4 / identify-01
                   :ARG0 (c3-12 / you)
                   :condition (c3-0 / say-01
                                    :ARG0 (c3-8 / someone)
                                    :ARG1 (c3-7 / this))
                   :mode imperative)
       :snt3 (c3-1 / attribute-01
                   :mod (c3-2 / false)
                   :condition (c3-5 / say-01
                                    :ARG0 c3-8
                                    :ARG1 c3-7
                                    :polarity -))
       :snt4 (c3-11 / news
                    :ARG1-of (c3-6 / fake-02)))

# ::snt I'm willing to say it if it will make you happy .
# ::tokens ["I", "'m", "willing", "to", "say", "it", "if", "it", "will", "make", "you", "happy", "."]
# ::lemmas ["i", "be", "willing", "to", "say", "it", "if", "it", "will", "make", "you", "happy", "."]
(c4-1 / will-02
      :ARG0 (c4-4 / i)
      :ARG1 (c4-0 / say-01
                  :ARG0 c4-4
                  :ARG1 (c4-2 / it))
      :condition (c4-5 / make-02
                       :ARG0 c4-0
                       :ARG1 (c4-3 / happy-01
                                   :ARG0 c4-0
                                   :ARG1 (c4-6 / you))))

# ::snt But the person who wrote the article did say it .
# ::tokens ["But", "the", "person", "who", "wrote", "the", "article", "did", "say", "it", "."]
# ::lemmas ["but", "the", "person", "who", "write", "the", "article", "do", "say", "it", "."]
(c5-2 / contrast-01
      :ARG2 (c5-0 / say-01
                  :ARG0 (c5-5 / person
                              :ARG0-of (c5-3 / write-01
                                             :ARG1 (c5-1 / article)))
                  :ARG1 (c5-4 / it)))

# ::snt But does the person who wrote the article work for Boeing ? If not , it is a false attribution .
# ::tokens ["But", "does", "the", "person", "who", "wrote", "the", "article", "work", "for", "Boeing", "?", "If", "not", ",", "it", "is", "a", "false", "attribution", "."]
# ::lemmas ["but", "do", "the", "person", "who", "write", "the", "article", "work", "for", "Boeing", "?", "if", "not", ",", "it", "be", "a", "false", "attribution", "."]
(c6-8 / multi-sentence
      :snt1 (c6-3 / contrast-01
                  :ARG2 (c6-4 / work-01
                              :ARG0 (c6-7 / person
                                          :ARG0-of (c6-10 / write-01
                                                          :ARG1 (c6-1 / article)))
                              :ARG2 (c6-0 / company
                                          :name (c6-9 / name
                                                      :op1 "Boeing"))))
      :snt2 (c6-5 / have-condition-91
                  :ARG1 (c6-6 / attribute-01
                              :mod (c6-2 / false)
                              :polarity -)
                  :ARG2 c6-4))

# ::snt Joni perhaps to be royalist than the king . A lie is lie despite its origin . Burden or proof is on trump
# ::tokens ["Joni", "perhaps", "to", "be", "royalist", "than", "the", "king", ".", "A", "lie", "is", "lie", "despite", "its", "origin", ".", "Burden", "or", "proof", "is", "on", "trump"]
# ::lemmas ["Joni", "perhaps", "to", "be", "royalist", "than", "the", "king", ".", "a", "lie", "be", "lie", "despite", "its", "origin", ".", "burden", "or", "proof", "be", "on", "trump"]
(c7-13 / multi-sentence
       :snt1 (c7-12 / possible-01
                    :ARG1 (c7-7 / royalist
                                :domain (c7-6 / person
                                              :name (c7-14 / name
                                                           :op1 "Joni"))
                                :ARG2-of (c7-4 / have-degree-91
                                               :ARG1 c7-6
                                               :ARG3 (c7-1 / more)
                                               :ARG4 (c7-3 / person
                                                           :ARG0-of (c7-11 / have-org-role-91
                                                                           :ARG2 (c7-0 / king))))))
       :snt2 (c7-8 / lie-08
                   :ARG1 (c7-9 / lie-08)
                   :concession (c7-5 / originate-01
                                     :ARG1 c7-9))
       :snt3 (c7-10 / burden-01
                    :ARG1 (c7-2 / person
                                :name (c7-15 / name
                                             :op1 " trump"))))

# ::snt No one should be called a f ... king idiot nor have to prove they aren't . Bad manners and ad hominenm attacks are not deserved .
# ::tokens ["No", "one", "should", "be", "called", "a", "f", "...", "king", "idiot", "nor", "have", "to", "prove", "they", "are", "n't", ".", "Bad", "manners", "and", "ad", "hominenm", "attacks", "are", "not", "deserved", "."]
# ::lemmas ["no", "one", "should", "be", "call", "a", "f", "...", "king", "idiot", "nor", "have", "to", "prove", "they", "be", "not", ".", "bad", "manner", "and", "ad", "hominenm", "attack", "be", "not", "deserve", "."]
(c8-13 / multi-sentence
       :snt1 (c8-8 / or
                   :op1 (c8-9 / recommend-01
                              :ARG1 (c8-5 / call-01
                                          :ARG1 (c8-14 / no-one)
                                          :ARG2 (c8-12 / idiot
                                                       :mod (c8-4 / king))))
                   :op2 (c8-7 / obligate-01
                              :ARG1 c8-14
                              :ARG2 (c8-10 / prove-01
                                           :ARG0 c8-14
                                           :ARG1 (c8-0 / call-01
                                                       :ARG1 c8-14
                                                       :ARG2 c8-12
                                                       :polarity -))))
       :snt2 (c8-1 / deserve-01
                   :ARG1 (c8-3 / and
                               :op1 (c8-6 / manner
                                          :ARG1-of (c8-11 / bad-02))
                               :op2 (c8-15 / attack-01
                                           :manner (c8-2 / ad-hominem)))
                   :polarity -))

# ::snt I thought Trump supporters were all for direct , honest talk , and not being all PC . Or is that only one way ?
# ::tokens ["I", "thought", "Trump", "supporters", "were", "all", "for", "direct", ",", "honest", "talk", ",", "and", "not", "being", "all", "PC", ".", "Or", "is", "that", "only", "one", "way", "?"]
# ::lemmas ["i", "think", "Trump", "supporter", "be", "all", "for", "direct", ",", "honest", "talk", ",", "and", "not", "be", "all", "pc", ".", "or", "be", "that", "only", "one", "way", "?"]
(c9-8 / multi-sentence
      :snt1 (c9-7 / think-01
                  :ARG0 (c9-2 / i)
                  :ARG1 (c9-17 / person
                               :ARG0-of (c9-12 / support-01
                                               :ARG1 (c9-16 / person
                                                            :name (c9-9 / name
                                                                        :op1 "Trump")))
                               :mod (c9-13 / all)
                               :purpose (c9-11 / and
                                               :op1 (c9-5 / talk-01
                                                          :ARG1-of (c9-0 / direct-02)
                                                          :ARG0-of (c9-14 / honest-01))
                                               :op2 (c9-3 / correct-02
                                                          :ARG1 c9-17
                                                          :mod (c9-1 / all)
                                                          :polarity -))))
      :snt2 (c9-6 / or
                  :op2 (c9-4 / way
                             :mod (c9-15 / only)
                             :domain (c9-10 / that)
                             :polarity (c9-18 / amr-unknown)
                             :quant 1)))
