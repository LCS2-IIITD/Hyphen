# ::snt You might be cool . But are u in my contacts cool ? ( ok maybe since he just gave his digits to everyone . But uh .. ) Regardless , I m teaching & Tim to shoot guns & bows this year . ... they just have to pick a spot in the schedule <URL>
# ::tokens ["You", "might", "be", "cool", ".", "But", "are", "u", "in", "my", "contacts", "cool", "?", "(", "ok", "maybe", "since", "he", "just", "gave", "his", "digits", "to", "everyone", ".", "But", "uh", "..", ")", "Regardless", ",", "I", "m", "teaching", "&", "Tim", "to", "shoot", "guns", "&", "bows", "this", "year", ".", "...", "they", "just", "have", "to", "pick", "a", "spot", "in", "the", "schedule", "<", "URL", ">"]
# ::lemmas ["you", "might", "be", "cool", ".", "but", "be", "u", "in", "my", "contact", "cool", "?", "(", "ok", "maybe", "since", "he", "just", "give", "his", "digit", "to", "everyone", ".", "but", "uh", "..", ")", "regardless", ",", "i", "m", "teach", "&", "Tim", "to", "shoot", "gun", "&", "bow", "this", "year", ".", "...", "they", "just", "have", "to", "pick", "a", "spot", "in", "the", "schedule", "<", "URL", ">"]
(c1-14 / multi-sentence
       :snt1 (c1-8 / contrast-01
                   :ARG1 (c1-37 / possible-01
                                :ARG1 (c1-0 / cool
                                            :domain (c1-27 / you)))
                   :ARG2 (c1-10 / cool
                                :polarity (c1-31 / amr-unknown)
                                :domain c1-27))
       :snt2 (c1-25 / contrast-01
                    :ARG1 (c1-34 / possible-01
                                 :ARG1 (c1-20 / cause-01
                                              :ARG0 (c1-13 / give-01
                                                           :ARG0 (c1-32 / he)
                                                           :ARG1 (c1-1 / digit
                                                                       :poss c1-32)
                                                           :ARG2 (c1-18 / everyone)
                                                           :mod (c1-36 / just))
                                              :ARG1 c1-0)
                                 :ARG1-of (c1-11 / okay-01)
                                 :ARG1-of (c1-6 / cause-01
                                                :ARG0 c1-13
                                                :ARG0 (c1-4 / he)
                                                :ARG1 c1-1
                                                :ARG2 c1-18
                                                :mod (c1-35 / just))))
       :snt3 (c1-7 / have-concession-91
                   :ARG1 (c1-17 / and
                                :op1 (c1-12 / teach-01
                                            :ARG0 (c1-5 / i)
                                            :ARG1 (c1-19 / shoot-02
                                                         :ARG0 (c1-2 / and
                                                                     :op1 (c1-28 / gun)
                                                                     :op2 (c1-26 / bow))
                                                         :time (c1-29 / year
                                                                      :mod (c1-9 / this)))
                                            :ARG2 (c1-38 / and
                                                         :op1 (c1-22 / person
                                                                     :name (c1-15 / name
                                                                                  :op1 "Tim"))
                                                         :op2 (c1-21 / person
                                                                     :name c1-15
                                                                     :op1 "I"))))
                   :op2 (c1-33 / obligate-01
                               :ARG1 (c1-16 / they)
                               :ARG2 (c1-3 / pick-01
                                           :ARG0 c1-16
                                           :ARG1 (c1-30 / spot
                                                        :location (c1-23 / schedule))
                                           :mod (c1-24 / just)))))

# ::snt When are you going to teach me how to shoot guns and bows ? I'm famous . Okay , maybe just in my own mind .
# ::tokens ["When", "are", "you", "going", "to", "teach", "me", "how", "to", "shoot", "guns", "and", "bows", "?", "I", "'m", "famous", ".", "Okay", ",", "maybe", "just", "in", "my", "own", "mind", "."]
# ::lemmas ["when", "be", "you", "go", "to", "teach", "i", "how", "to", "shoot", "gun", "and", "bow", "?", "i", "be", "famous", ".", "okay", ",", "maybe", "just", "in", "my", "own", "mind", "."]
(c2-14 / multi-sentence
       :snt1 (c2-9 / teach-01
                   :ARG0 (c2-16 / you)
                   :ARG1 (c2-5 / thing
                               :manner-of (c2-0 / shoot-01
                                                :ARG0 (c2-13 / i)
                                                :ARG2 (c2-2 / and
                                                            :op1 (c2-11 / gun)
                                                            :op2 (c2-15 / bow))))
                   :ARG2 (c2-6 / i)
                   :time (c2-17 / amr-unknown))
       :snt2 (c2-3 / fame-01
                   :ARG1 (c2-7 / i))
       :snt3 (c2-8 / okay-04
                   :ARG1 (c2-10 / possible-01
                                :ARG1 (c2-1 / be-located-at-91
                                            :ARG1 c2-5)
                                :ARG2 (c2-4 / mind
                                            :poss c2-7)
                                :mod (c2-12 / just))))

# ::snt Okay , let me know the openings in your schedule .
# ::tokens ["Okay", ",", "let", "me", "know", "the", "openings", "in", "your", "schedule", "."]
# ::lemmas ["okay", ",", "let", "i", "know", "the", "opening", "in", "your", "schedule", "."]
(c3-3 / let-know-07
      :ARG0 (c3-5 / you)
      :ARG1 (c3-4 / i)
      :ARG2 (c3-2 / open-01
                  :location (c3-0 / schedule
                                  :poss c3-5))
      :ARG1-of (c3-1 / okay-04)
      :mode imperative)

# ::snt Somehow I think we would manage to fill ten people's schedules among the people that would want a lesson . I would definitely be one of them .
# ::tokens ["Somehow", "I", "think", "we", "would", "manage", "to", "fill", "ten", "people", "'s", "schedules", "among", "the", "people", "that", "would", "want", "a", "lesson", ".", "I", "would", "definitely", "be", "one", "of", "them", "."]
# ::lemmas ["somehow", "i", "think", "we", "would", "manage", "to", "fill", "ten", "people", "'s", "schedule", "among", "the", "people", "that", "would", "want", "a", "lesson", ".", "i", "would", "definitely", "be", "one", "of", "they", "."]
(c4-14 / multi-sentence
       :snt1 (c4-9 / think-01
                   :ARG0 (c4-13 / i)
                   :ARG1 (c4-3 / manage-02
                               :ARG0 (c4-4 / we)
                               :ARG1 (c4-2 / fill-01
                                           :ARG0 c4-4
                                           :ARG1 (c4-0 / schedule
                                                       :poss (c4-10 / person
                                                                    :quant 10))
                                           :ARG2 (c4-8 / person
                                                       :ARG0-of (c4-15 / want-01
                                                                       :ARG1 (c4-11 / lesson))))
                               :manner (c4-12 / somehow)))
       :snt2 (c4-6 / include-91
                   :ARG1 (c4-7 / i)
                   :ARG2 (c4-5 / person
                               :ARG0-of c4-15
                               :ARG1 c4-11
                               :quant 1))
       :mod (c4-1 / definite))

# ::snt Yeah , she didn't say she was going to give you a lesson though .
# ::tokens ["Yeah", ",", "she", "did", "n't", "say", "she", "was", "going", "to", "give", "you", "a", "lesson", "though", "."]
# ::lemmas ["yeah", ",", "she", "do", "not", "say", "she", "be", "go", "to", "give", "you", "a", "lesson", "though", "."]
(c5-1 / have-concession-91
      :ARG1 (c5-0 / say-01
                  :ARG0 (c5-4 / she)
                  :ARG1 (c5-3 / give-01
                              :ARG0 c5-4
                              :ARG1 (c5-2 / lesson)
                              :ARG2 (c5-5 / you))
                  :polarity -)
      :mod (c5-6 / yeah
                 :mode expressive))

# ::snt Now , now guys . There's no need to get ugly over this . Just form a nice , straight single-file line , directly behind me , and we'll proceed in order and receive our instruction .
# ::tokens ["Now", ",", "now", "guys", ".", "There", "'s", "no", "need", "to", "get", "ugly", "over", "this", ".", "Just", "form", "a", "nice", ",", "straight", "single", "-", "file", "line", ",", "directly", "behind", "me", ",", "and", "we", "'ll", "proceed", "in", "order", "and", "receive", "our", "instruction", "."]
# ::lemmas ["now", ",", "now", "guy", ".", "there", "be", "no", "need", "to", "get", "ugly", "over", "this", ".", "just", "form", "a", "nice", ",", "straight", "single", "-", "file", "line", ",", "directly", "behind", "i", ",", "and", "we", "'ll", "proceed", "in", "order", "and", "receive", "our", "instruction", "."]
(c6-7 / multi-sentence
      :snt1 (c6-8 / now)
      :snt2 (c6-10 / say-01
                   :ARG1 (c6-0 / need-01
                               :ARG1 (c6-6 / get-03
                                           :ARG2 (c6-19 / ugly)
                                           :ARG3 (c6-4 / this))
                               :polarity -)
                   :ARG2 (c6-16 / guy))
      :snt3 (c6-17 / and
                   :op1 (c6-18 / form-01
                               :ARG0 (c6-15 / you)
                               :ARG1 (c6-21 / line
                                            :mod (c6-13 / file
                                                        :ARG1-of (c6-23 / single-02))
                                            :ARG1-of (c6-14 / nice-01)
                                            :ARG1-of (c6-12 / straight-04)
                                            :location (c6-22 / behind
                                                             :op1 (c6-1 / i)))
                               :mod (c6-20 / just)
                               :mode imperative)
                   :op2 (c6-9 / and
                              :op1 (c6-24 / proceed-01
                                          :ARG0 (c6-2 / we)
                                          :manner (c6-3 / order))
                              :op2 (c6-5 / receive-01
                                         :ARG0 c6-2
                                         :ARG1 (c6-11 / instruct-01
                                                      :ARG1 c6-2)))))
