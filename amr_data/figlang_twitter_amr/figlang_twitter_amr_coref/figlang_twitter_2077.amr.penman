# ::snt Trump is asked for his thoughts on God . In rambling answer appears to put himself above God & lay claim to the Paci <URL>
# ::tokens ["Trump", "is", "asked", "for", "his", "thoughts", "on", "God", ".", "In", "rambling", "answer", "appears", "to", "put", "himself", "above", "God", "&", "lay", "claim", "to", "the", "Paci", "<", "URL", ">"]
# ::lemmas ["Trump", "be", "ask", "for", "his", "thought", "on", "God", ".", "in", "ramble", "answer", "appear", "to", "put", "himself", "above", "God", "&", "lie", "claim", "to", "the", "Paci", "<", "URL", ">"]
(c1-14 / multi-sentence
       :snt1 (c1-1 / ask-01
                   :ARG1 (c1-8 / think-01
                               :ARG0 (c1-13 / person
                                            :name (c1-15 / name
                                                         :op1 "Trump"))
                               :ARG2 (c1-7 / person
                                           :name (c1-9 / name
                                                       :op1 "God")))
                   :ARG2 c1-13)
       :snt2 (c1-16 / appear-02
                    :ARG1 (c1-0 / and
                                :op1 (c1-5 / put-01
                                           :ARG0 (c1-6 / answer-01
                                                       :ARG1-of (c1-10 / ramble-02))
                                           :ARG1 c1-13
                                           :ARG2 (c1-2 / above
                                                       :op1 c1-7))
                                :op2 (c1-11 / lay-01
                                            :ARG0 c1-6
                                            :ARG1 (c1-3 / claim-02
                                                        :ARG0 c1-6
                                                        :ARG2 (c1-4 / person
                                                                    :name (c1-12 / name
                                                                                 :op1 "Paci")))))))

# ::snt < It's obvious Trump has never read one page of the bible . His answer is dribble . The world must think we have lost our minds .
# ::tokens ["<", "It", "'s", "obvious", "Trump", "has", "never", "read", "one", "page", "of", "the", "bible", ".", "His", "answer", "is", "dribble", ".", "The", "world", "must", "think", "we", "have", "lost", "our", "minds", "."]
# ::lemmas ["<", "it", "be", "obvious", "Trump", "have", "never", "read", "one", "page", "of", "the", "bible", ".", "his", "answer", "be", "dribble", ".", "the", "world", "must", "think", "we", "have", "lose", "our", "mind", "."]
(c2-14 / multi-sentence
       :snt1 (c2-6 / obvious-01
                   :ARG1 (c2-9 / read-01
                               :ARG0 (c2-13 / person
                                            :name (c2-15 / name
                                                         :op1 "Trump"))
                               :ARG1 (c2-7 / page
                                           :part-of (c2-12 / book
                                                           :name (c2-10 / name
                                                                        :op1 "Bible"))
                                           :quant 1)
                               :time (c2-17 / ever)
                               :polarity -))
       :snt2 (c2-1 / answer-01
                   :ARG0 (c2-4 / he)
                   :ARG2 (c2-0 / dribble-01))
       :snt3 (c2-5 / obligate-01
                   :ARG1 (c2-3 / world)
                   :ARG2 (c2-8 / think-01
                               :ARG0 c2-3
                               :ARG1 (c2-11 / lose-02
                                            :ARG0 (c2-16 / we)
                                            :ARG1 (c2-2 / mind
                                                        :poss c2-16)))))

# ::snt Everything he says is meaningless drivel . I cannot understand how he ever captivated crowds with this nonsense .
# ::tokens ["Everything", "he", "says", "is", "meaningless", "drivel", ".", "I", "can", "not", "understand", "how", "he", "ever", "captivated", "crowds", "with", "this", "nonsense", "."]
# ::lemmas ["everything", "he", "say", "be", "meaningless", "drivel", ".", "i", "can", "not", "understand", "how", "he", "ever", "captivate", "crowd", "with", "this", "nonsense", "."]
(c3-13 / multi-sentence
       :snt1 (c3-0 / drivel
                   :ARG1-of (c3-3 / mean-01
                                  :polarity -)
                   :domain (c3-15 / everything
                                  :ARG1-of (c3-1 / say-01
                                                 :ARG0 (c3-7 / he))))
       :snt2 (c3-12 / possible-01
                    :ARG1 (c3-9 / understand-01
                                :ARG0 (c3-4 / i)
                                :ARG1 (c3-10 / thing
                                             :manner-of (c3-5 / captivate-01
                                                              :ARG0 (c3-11 / he)
                                                              :ARG1 (c3-2 / crowd)
                                                              :ARG2 (c3-14 / nonsense
                                                                           :mod (c3-6 / this))
                                                              :time (c3-8 / ever))))
                    :polarity -))

# ::snt Blithering incoherent simplifications , abrupt disconnects & sudden manic hallucinations until someone applauds ?
# ::tokens ["Blithering", "incoherent", "simplifications", ",", "abrupt", "disconnects", "&", "sudden", "manic", "hallucinations", "until", "someone", "applauds", "?"]
# ::lemmas ["Blithering", "incoherent", "simplification", ",", "abrupt", "disconnect", "&", "sudden", "manic", "hallucination", "until", "someone", "applaud", "?"]
(c4-3 / and
      :op1 (c4-0 / simplify-01
                 :manner (c4-10 / incoherent)
                 :ARG0-of (c4-8 / blithering-01))
      :op2 (c4-1 / disconnect-01
                 :manner (c4-12 / abrupt))
      :op3 (c4-4 / hallucinate-01
                 :manner (c4-11 / manic)
                 :manner (c4-9 / sudden))
      :time (c4-6 / until
                  :op1 (c4-2 / applaud-01
                             :ARG0 (c4-5 / someone)))
      :polarity (c4-7 / amr-unknown))

# ::snt < Trump will never block you when you use big words . They are an unbreakable code for Trump .
# ::tokens ["<", "Trump", "will", "never", "block", "you", "when", "you", "use", "big", "words", ".", "They", "are", "an", "unbreakable", "code", "for", "Trump", "."]
# ::lemmas ["<", "Trump", "will", "never", "block", "you", "when", "you", "use", "big", "word", ".", "they", "be", "an", "unbreakable", "code", "for", "Trump", "."]
(c5-9 / multi-sentence
      :snt1 (c5-7 / block-01
                  :ARG0 (c5-8 / person
                              :name (c5-10 / name
                                           :op1 "Trump"))
                  :ARG1 (c5-11 / you)
                  :time (c5-4 / use-01
                              :ARG0 c5-11
                              :ARG1 (c5-2 / word
                                          :mod (c5-0 / big)))
                  :time (c5-12 / ever)
                  :polarity -)
      :snt2 (c5-1 / code
                  :domain (c5-6 / they)
                  :ARG1-of (c5-3 / break-01
                                 :ARG1-of (c5-5 / possible-01
                                                :polarity -))
                  :beneficiary c5-8))

# ::snt doesn't dig when you ask if there are hidden cams in the rooms so Trump can spy <URL>
# ::tokens ["does", "n't", "dig", "when", "you", "ask", "if", "there", "are", "hidden", "cams", "in", "the", "rooms", "so", "Trump", "can", "spy", "<", "URL", ">"]
# ::lemmas ["do", "not", "dig", "when", "you", "ask", "if", "there", "be", "hide", "cam", "in", "the", "room", "so", "Trump", "can", "spy", "<", "URL", ">"]
(c6-0 / dig-01
      :ARG0 (c6-9 / you)
      :time (c6-2 / ask-01
                  :ARG0 c6-9
                  :ARG1 (c6-3 / cams
                              :ARG1-of (c6-4 / hide-01
                                             :location (c6-6 / room)
                                             :purpose (c6-7 / possible-01
                                                            :ARG1 (c6-1 / spy-01
                                                                        :ARG0 (c6-5 / person
                                                                                    :name (c6-8 / name
                                                                                                :op1 "Trump")))))))
      :polarity -)
