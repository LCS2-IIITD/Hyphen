# ::snt HURRY ! We need your support TODAY . Donate big and let's Make America Great Again ! <URL>
# ::tokens ["HURRY", "!", "We", "need", "your", "support", "TODAY", ".", "Donate", "big", "and", "let", "'s", "Make", "America", "Great", "Again", "!", "<", "URL", ">"]
# ::lemmas ["HURRY", "!", "we", "need", "your", "support", "today", ".", "donate", "big", "and", "let", "us", "make", "America", "Great", "again", "!", "<", "URL", ">"]
(c1-11 / multi-sentence
       :snt1 (c1-7 / rejoice-01
                   :mode expressive)
       :snt2 (c1-12 / need-01
                    :ARG0 (c1-4 / we)
                    :ARG1 (c1-0 / support-01
                                :ARG0 (c1-13 / you))
                    :time (c1-6 / today))
       :snt3 (c1-2 / and
                   :op1 (c1-1 / donate-01
                              :ARG0 c1-13
                              :mod (c1-10 / big)
                              :mode imperative)
                   :op2 (c1-3 / make-02
                              :ARG0 c1-4
                              :mode imperative)
                   :ARG1 (c1-8 / great
                               :domain (c1-5 / country
                                             :name (c1-9 / name
                                                         :op1 "America")))
                   :mod (c1-14 / again)))

# ::snt will you use the money to pay for lawsuits against your victims
# ::tokens ["will", "you", "use", "the", "money", "to", "pay", "for", "lawsuits", "against", "your", "victims"]
# ::lemmas ["will", "you", "use", "the", "money", "to", "pay", "for", "lawsuit", "against", "your", "victim"]
(c2-2 / use-01
      :polarity (c2-1 / amr-unknown)
      :ARG0 (c2-7 / you)
      :ARG1 (c2-6 / money)
      :ARG2 (c2-5 / pay-01
                  :ARG0 c2-7
                  :ARG3 (c2-0 / sue-02
                              :ARG0 c2-7
                              :ARG1 (c2-4 / person
                                          :ARG1-of (c2-3 / victimize-01
                                                         :ARG0 c2-7)))))

# ::snt the sad part is Hill , the DOJ , FBI R all above the law , that's Y they don't have law suits . nobody asked u $ $
# ::tokens ["the", "sad", "part", "is", "Hill", ",", "the", "DOJ", ",", "FBI", "R", "all", "above", "the", "law", ",", "that", "'s", "Y", "they", "do", "n't", "have", "law", "suits", ".", "nobody", "asked", "u", "$", "$"]
# ::lemmas ["the", "sad", "part", "be", "Hill", ",", "the", "DOJ", ",", "FBI", "R", "all", "above", "the", "law", ",", "that", "be", "Y", "they", "do", "not", "have", "law", "suit", ".", "nobody", "ask", "u", "$", "$"]
(c3-9 / multi-sentence
      :snt1 (c3-21 / part
                   :ARG0-of (c3-12 / sad-02)
                   :domain (c3-16 / above
                                  :op1 (c3-19 / law)
                                  :domain (c3-11 / and
                                                 :op1 (c3-8 / government-organization
                                                            :name (c3-10 / name
                                                                         :op1 "Hill"))
                                                 :op2 (c3-14 / government-organization
                                                             :name (c3-3 / name
                                                                         :op1 "DOJ"))
                                                 :op3 (c3-2 / government-organization
                                                            :name (c3-13 / name
                                                                         :op1 "FBI")))
                                  :degree (c3-1 / all)))
      :snt2 (c3-18 / have-03
                   :ARG0 (c3-6 / they)
                   :ARG1 (c3-20 / sue-02
                                :ARG2 (c3-4 / law))
                   :polarity -)
      :snt3 (c3-22 / ask-02
                   :ARG0 (c3-5 / nobody)
                   :ARG1 (c3-17 / monetary-quantity
                                :quant (c3-7 / $
                                             :unit (c3-0 / dollar))
                                :ARG2 (c3-15 / you))))

# ::snt good u , so Y u worried about DJT donations . He didn't ask u . Ask Hill about the Saudi donations = bin Laden
# ::tokens ["good", "u", ",", "so", "Y", "u", "worried", "about", "DJT", "donations", ".", "He", "did", "n't", "ask", "u", ".", "Ask", "Hill", "about", "the", "Saudi", "donations", "=", "bin", "Laden"]
# ::lemmas ["good", "u", ",", "so", "Y", "u", "worried", "about", "DJT", "donation", ".", "he", "do", "not", "ask", "u", ".", "ask", "Hill", "about", "the", "Saudi", "donation", "=", "bin", "Laden"]
(c4-8 / multi-sentence
      :snt1 (c4-4 / cause-01
                  :ARG0 (c4-7 / good-02
                              :ARG1 (c4-13 / you)
                              :mode imperative)
                  :ARG1 (c4-5 / worry-02
                              :ARG0 c4-13
                              :ARG1 (c4-0 / donate-01
                                          :ARG0 (c4-6 / organization
                                                      :name (c4-9 / name
                                                                  :op1 "DDT")))))
      :snt2 (c4-15 / ask-01
                   :ARG0 (c4-16 / he)
                   :ARG2 (c4-14 / you)
                   :snt3-of c4-8
                   :polarity -)
      :ARG0 (c4-18 / person
                   :name (c4-2 / name
                               :op1 "Hill"))
      :ARG1 (c4-12 / donate-01
                   :ARG0 (c4-1 / country
                               :name (c4-11 / name
                                            :op1 "Saudi"
                                            :op2 "Arabia")))
      :ARG2 c4-14
      :ARG1-of (c4-10 / equal-01
                      :ARG2 (c4-17 / person
                                   :name (c4-3 / name
                                               :op1 "bin"
                                               :op2 "Laden"))))

# ::snt I'm muting you . I voted for the candidate of my choice . goodbye
# ::tokens ["I", "'m", "muting", "you", ".", "I", "voted", "for", "the", "candidate", "of", "my", "choice", ".", "goodbye"]
# ::lemmas ["i", "be", "mute", "you", ".", "i", "vote", "for", "the", "candidate", "of", "my", "choice", ".", "goodbye"]
(c5-7 / multi-sentence
      :snt1 (c5-1 / mutter-01
                  :ARG0 (c5-6 / i)
                  :ARG1 (c5-8 / you))
      :snt2 (c5-4 / vote-01
                  :ARG0 (c5-3 / i)
                  :ARG1 (c5-2 / candidate
                              :ARG1-of (c5-0 / choose-01
                                             :ARG0 c5-3)))
      :snt3 (c5-5 / goodbye))

# ::snt looser . Bye . She used donations incite violence on innocent ppl . U can't take the heat . Lol . Block .
# ::tokens ["looser", ".", "Bye", ".", "She", "used", "donations", "incite", "violence", "on", "innocent", "ppl", ".", "U", "ca", "n't", "take", "the", "heat", ".", "Lol", ".", "Block", "."]
# ::lemmas ["looser", ".", "bye", ".", "she", "use", "donation", "incite", "violence", "on", "innocent", "ppl", ".", "u", "can", "not", "take", "the", "heat", ".", "Lol", ".", "Block", "."]
(c6-8 / multi-sentence
      :snt1 (c6-16 / looser)
      :snt2 (c6-17 / bye)
      :snt3 (c6-14 / use-01
                   :ARG0 (c6-9 / she)
                   :ARG1 (c6-7 / thing
                               :ARG1-of (c6-0 / donate-01))
                   :ARG2 (c6-3 / incite-01
                               :ARG0 c6-7
                               :ARG1 (c6-6 / violence)
                               :ARG2 (c6-18 / person
                                            :ARG1-of (c6-10 / innocent-01))))
      :snt4 (c6-15 / possible-01
                   :ARG1 (c6-5 / take-02
                               :ARG0 (c6-4 / we)
                               :ARG1 (c6-13 / heat))
                   :polarity -)
      :snt5 (c6-2 / laugh-01
                  :ARG0 (c6-11 / i)
                  :manner (c6-1 / loud)
                  :mode expressive)
      :snt6 (c6-12 / block-01))

# ::snt ever notice Trump supporters can never spell correctly ? Telling .
# ::tokens ["ever", "notice", "Trump", "supporters", "can", "never", "spell", "correctly", "?", "Telling", "."]
# ::lemmas ["ever", "notice", "Trump", "supporter", "can", "never", "spell", "correctly", "?", "tell", "."]
(c7-7 / notice-01
      :polarity (c7-1 / amr-unknown)
      :ARG0 (c7-8 / you)
      :ARG1 (c7-6 / possible-01
                  :ARG1 (c7-0 / spell-01
                              :ARG0 (c7-3 / person
                                          :ARG0-of (c7-5 / support-01
                                                         :name (c7-4 / name
                                                                     :op1 "Trump")
                                                         :ARG1 c7-3)))
                  :ARG1-of (c7-2 / correct-02)
                  :polarity -)
      :time (c7-9 / ever
                  :time-of c7-7))

# ::snt u so smart , Y u don't have k followers ? Becoz U R not . Just saying .
# ::tokens ["u", "so", "smart", ",", "Y", "u", "do", "n't", "have", "k", "followers", "?", "Becoz", "U", "R", "not", ".", "Just", "saying", "."]
# ::lemmas ["u", "so", "smart", ",", "Y", "u", "do", "not", "have", "k", "follower", "?", "becoz", "U", "r", "not", ".", "just", "say", "."]
(c8-10 / multi-sentence
       :snt1 (c8-0 / smart-06
                   :ARG1 (c8-12 / you)
                   :degree (c8-8 / so))
       :snt2 (c8-2 / contrast-01
                   :ARG1 (c8-4 / have-03
                               :ARG0 (c8-13 / you)
                               :ARG1 (c8-9 / person
                                           :ARG0-of (c8-1 / follow-01
                                                          :ARG1 c8-13))
                               :polarity -)
                   :ARG2 c8-4
                   :ARG0 (c8-6 / person
                               :name (c8-11 / name
                                            :op1 "Becoz"))
                   :ARG1 c8-9
                   :polarity -)
       :snt3 (c8-5 / say-01
                   :ARG0 (c8-3 / i)
                   :mod (c8-7 / just)))

# ::snt wow , just wow haha . Smart = popular ? Becoz ? Good grief .
# ::tokens ["wow", ",", "just", "wow", "haha", ".", "Smart", "=", "popular", "?", "Becoz", "?", "Good", "grief", "."]
# ::lemmas ["wow", ",", "just", "wow", "haha", ".", "Smart", "=", "popular", "?", "becoz", "?", "good", "grief", "."]
(c9-9 / multi-sentence
      :snt1 (c9-2 / wow
                  :mod (c9-7 / just)
                  :mod (c9-3 / haha)
                  :mode expressive)
      :snt2 (c9-1 / and
                  :op1 (c9-12 / equal-01
                              :ARG1 (c9-0 / smart-06)
                              :ARG2 (c9-8 / popular-02))
                  :op2 (c9-4 / equal-01
                             :ARG1 c9-0
                             :ARG2 (c9-5 / person
                                         :name (c9-10 / name
                                                      :op1 "Becoz")))
                  :op3 (c9-6 / grief
                             :ARG1-of (c9-11 / good-02))))

# ::snt very foolish . Every knows u have to fit characters . Never mind , it's ok . I understand , if u R slow
# ::tokens ["very", "foolish", ".", "Every", "knows", "u", "have", "to", "fit", "characters", ".", "Never", "mind", ",", "it", "'s", "ok", ".", "I", "understand", ",", "if", "u", "R", "slow"]
# ::lemmas ["very", "foolish", ".", "every", "know", "u", "have", "to", "fit", "character", ".", "never", "mind", ",", "it", "be", "ok", ".", "i", "understand", ",", "if", "u", "r", "slow"]
(c10-11 / multi-sentence
        :snt1 (c10-1 / foolish
                     :degree (c10-8 / very))
        :snt2 (c10-12 / know-01
                      :ARG0 (c10-15 / every)
                      :ARG1 (c10-9 / obligate-01
                                   :ARG1 (c10-13 / you)
                                   :ARG2 (c10-7 / fit-06
                                                :ARG1 c10-13
                                                :ARG2 (c10-2 / character))))
        :snt3 (c10-4 / okay-04
                     :ARG1 (c10-10 / it)
                     :time (c10-5 / ever)
                     :concession (c10-6 / understand-01
                                        :ARG0 (c10-3 / i)
                                        :condition (c10-0 / slow-03
                                                          :ARG1 (c10-14 / you)))))
