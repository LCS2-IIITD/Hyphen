# ::snt help me understand . You did not load anyone s luggage on Flight from DCA to SEA ? This was done knowingly . I am baffled . The person that made this decision does not fit with the amazing culture at .
# ::tokens ["help", "me", "understand", ".", "You", "did", "not", "load", "anyone", "s", "luggage", "on", "Flight", "from", "DCA", "to", "SEA", "?", "This", "was", "done", "knowingly", ".", "I", "am", "baffled", ".", "The", "person", "that", "made", "this", "decision", "does", "not", "fit", "with", "the", "amazing", "culture", "at", "."]
# ::lemmas ["help", "i", "understand", ".", "you", "do", "not", "load", "anyone", "s", "luggage", "on", "Flight", "from", "DCA", "to", "SEA", "?", "this", "be", "do", "knowingly", ".", "i", "be", "baffle", ".", "the", "person", "that", "make", "this", "decision", "do", "not", "fit", "with", "the", "amazing", "culture", "at", "."]
(c1-7 / multi-sentence
      :snt1 (c1-17 / help-01
                   :ARG0 (c1-13 / you)
                   :ARG1 (c1-18 / understand-01
                                :ARG0 (c1-4 / i))
                   :mode imperative)
      :snt2 (c1-19 / load-01
                   :ARG0 (c1-14 / you)
                   :ARG1 (c1-3 / luggage
                               :poss (c1-15 / anyone))
                   :ARG2 (c1-16 / fly-01
                                :source (c1-9 / airport
                                              :name (c1-8 / name
                                                          :op1 "DCA"))
                                :destination (c1-10 / sea
                                                    :name (c1-2 / name
                                                                :op1 " SEA")))
                   :ARG1-of (c1-22 / know-01
                                   :ARG0 c1-14)
                   :polarity -)
      :snt3 (c1-20 / baffle-01
                   :ARG1 (c1-11 / i))
      :snt4 (c1-12 / fit-06
                   :ARG1 (c1-21 / person
                                :ARG0-of (c1-0 / decide-01
                                               :ARG1 (c1-6 / this)))
                   :ARG2 (c1-5 / culture
                               :ARG0-of (c1-1 / amaze-01))
                   :polarity -))

# ::snt We will have your bags delivered to each of you as soon as possible . The aircraft was downgraded earlier and we could not load all the bags due to weight and balance . - Andre
# ::tokens ["We", "will", "have", "your", "bags", "delivered", "to", "each", "of", "you", "as", "soon", "as", "possible", ".", "The", "aircraft", "was", "downgraded", "earlier", "and", "we", "could", "not", "load", "all", "the", "bags", "due", "to", "weight", "and", "balance", ".", "-", "Andre"]
# ::lemmas ["we", "will", "have", "your", "bag", "deliver", "to", "each", "of", "you", "as", "soon", "as", "possible", ".", "the", "aircraft", "be", "downgrade", "early", "and", "we", "could", "not", "load", "all", "the", "bag", "due", "to", "weight", "and", "balance", ".", "-", "andre"]
(c2-6 / multi-sentence
      :snt1 (c2-0 / deliver-01
                  :ARG0 (c2-5 / we)
                  :ARG1 (c2-22 / bag
                               :poss (c2-15 / you
                                            :mod (c2-11 / each)
                                            :ARG2-of c2-0))
                  :time (c2-10 / soon
                               :ARG2-of (c2-18 / have-degree-91
                                               :ARG1 c2-0
                                               :ARG3 (c2-19 / equal)
                                               :ARG4 (c2-23 / possible-01))))
      :snt2 (c2-17 / and
                   :op1 (c2-14 / downgrade-01
                               :ARG1 (c2-9 / aircraft)
                               :time (c2-16 / before))
                   :op2 (c2-20 / possible-01
                               :ARG1 (c2-21 / load-01
                                            :ARG0 (c2-8 / we)
                                            :ARG1 (c2-12 / bag
                                                         :mod (c2-1 / all)))
                               :ARG1-of (c2-4 / cause-01
                                              :ARG0 (c2-24 / and
                                                           :op1 (c2-2 / weight)
                                                           :op2 (c2-3 / balance)))
                               :polarity -))
      :snt3 (c2-13 / person
                   :name (c2-7 / name
                               :op1 "Andre")))

# ::snt I have a colleague that is flying to San Francisco early morning . just added a lot of stress to its customers . This is not acceptable : $ ? I am checking into a hotel - and I won t sleep because I can t sleep without my CPAP . So in the morning I head home exhausted .
# ::tokens ["I", "have", "a", "colleague", "that", "is", "flying", "to", "San", "Francisco", "early", "morning", ".", "just", "added", "a", "lot", "of", "stress", "to", "its", "customers", ".", "This", "is", "not", "acceptable", ":", "$", "?", "I", "am", "checking", "into", "a", "hotel", "-", "and", "I", "won", "t", "sleep", "because", "I", "can", "t", "sleep", "without", "my", "CPAP", ".", "So", "in", "the", "morning", "I", "head", "home", "exhausted", "."]
# ::lemmas ["i", "have", "a", "colleague", "that", "be", "fly", "to", "San", "Francisco", "early", "morning", ".", "just", "add", "a", "lot", "of", "stress", "to", "its", "customer", ".", "this", "be", "not", "acceptable", ":", "$", "?", "i", "be", "check", "into", "a", "hotel", "-", "and", "i", "win", "t", "sleep", "because", "i", "can", "t", "sleep", "without", "my", "cpap", ".", "so", "in", "the", "morning", "i", "head", "home", "exhausted", "."]
(c3-14 / multi-sentence
       :snt1 (c3-30 / have-03
                    :ARG0 (c3-6 / i)
                    :ARG1 (c3-9 / colleague
                                :ARG0-of (c3-28 / fly-01
                                                :destination (c3-0 / city
                                                                   :name (c3-15 / name
                                                                                :op1 "San"
                                                                                :op2 "Francisco"))
                                                :time (c3-17 / early
                                                             :op1 (c3-1 / date-entity
                                                                        :dayperiod (c3-29 / morning))))))
       :snt2 (c3-27 / add-02
                    :ARG0 c3-9
                    :ARG1 (c3-18 / stress-02
                                 :quant (c3-33 / lot))
                    :ARG2 (c3-11 / customer
                                 :poss (c3-24 / company))
                    :mod (c3-34 / just))
       :snt3 (c3-35 / possible-01
                    :ARG1 (c3-16 / accept-01
                                 :ARG1 (c3-13 / this))
                    :polarity -)
       :snt4 c3-14
       :snt5 (c3-2 / and
                   :op1 (c3-19 / check-in-04
                               :ARG0 (c3-20 / i)
                               :ARG1 (c3-5 / hotel))
                   :op2 (c3-26 / sleep-01
                               :ARG0 c3-20
                               :ARG1-of (c3-7 / cause-01
                                              :ARG0 (c3-32 / possible-01
                                                           :ARG1 (c3-21 / sleep-01
                                                                        :ARG0 c3-20
                                                                        :prep-without (c3-10 / thing
                                                                                             :name (c3-4 / name
                                                                                                         :op1 "CPAP")
                                                                                             :poss c3-20))
                                                           :polarity -))
                               :polarity -))
       :snt6 (c3-3 / cause-01
                   :ARG1 (c3-8 / head-02
                               :ARG0 (c3-22 / i)
                               :ARG1 (c3-12 / home)
                               :manner (c3-31 / exhaust-01
                                              :ARG1 c3-22)
                               :time (c3-25 / date-entity
                                            :dayperiod (c3-23 / morning)))))
