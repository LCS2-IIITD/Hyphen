# ::snt pls know that ur G services is no where in as I was there today & yesterday & couldn't use even G . Guess G is there
# ::tokens ["pls", "know", "that", "ur", "G", "services", "is", "no", "where", "in", "as", "I", "was", "there", "today", "&", "yesterday", "&", "could", "n't", "use", "even", "G", ".", "Guess", "G", "is", "there"]
# ::lemmas ["pls", "know", "that", "ur", "G", "service", "be", "no", "where", "in", "as", "i", "be", "there", "today", "&", "yesterday", "&", "could", "not", "use", "even", "G", ".", "guess", "G", "be", "there"]
(c1-8 / multi-sentence
      :snt1 (c1-24 / know-01
                   :ARG0 (c1-4 / we)
                   :ARG1 (c1-22 / be-located-at-91
                                :ARG1 (c1-13 / service
                                             :mod (c1-23 / person
                                                         :name (c1-9 / name
                                                                     :op1 "G"))
                                             :poss (c1-11 / we))
                                :ARG2 (c1-6 / there)
                                :ARG1-of (c1-3 / cause-01
                                               :ARG0 (c1-19 / and
                                                            :op1 (c1-18 / be-located-at-91
                                                                        :ARG1 (c1-1 / i)
                                                                        :ARG2 (c1-5 / there)
                                                                        :time (c1-10 / today))
                                                            :op2 (c1-17 / yesterday)
                                                            :op3 (c1-21 / possible-01
                                                                        :ARG1 (c1-20 / use-01
                                                                                     :ARG0 c1-1
                                                                                     :ARG1 c1-13
                                                                                     :mod (c1-12 / even))
                                                                        :polarity -)))
                                :polarity -))
      :snt2 (c1-7 / guess-01
                  :ARG0 (c1-2 / we)
                  :ARG1 (c1-14 / be-located-at-91
                               :ARG1 (c1-15 / person
                                            :name (c1-0 / name
                                                        :op1 "G"))
                               :ARG2 (c1-16 / there))))

# ::snt Hello , G coverage is available at LASU . Send G to to check if your device is compatible on the network . TT
# ::tokens ["Hello", ",", "G", "coverage", "is", "available", "at", "LASU", ".", "Send", "G", "to", "to", "check", "if", "your", "device", "is", "compatible", "on", "the", "network", ".", "TT"]
# ::lemmas ["hello", ",", "g", "coverage", "be", "available", "at", "LASU", ".", "send", "g", "to", "to", "check", "if", "your", "device", "be", "compatible", "on", "the", "network", ".", "TT"]
(c2-15 / multi-sentence
       :snt1 (c2-6 / hello)
       :snt2 (c2-3 / available-02
                   :ARG2 (c2-5 / cover-03
                               :mod (c2-14 / product
                                           :name (c2-16 / name
                                                        :op1 "G")))
                   :location (c2-7 / university
                                   :name (c2-11 / name
                                                :op1 "LASU")))
       :snt3 (c2-0 / send-01
                   :ARG0 (c2-17 / you)
                   :ARG1 (c2-10 / product
                                :name (c2-9 / name
                                            :op1 "G"))
                   :purpose (c2-1 / check-01
                                  :ARG0 c2-17
                                  :ARG1 (c2-8 / compatible
                                              :domain (c2-2 / device
                                                            :poss c2-17)
                                              :location (c2-4 / network)))
                   :mode imperative)
       :snt4 (c2-13 / company
                    :name (c2-12 / name
                                 :op1 "TT")))

# ::snt Delta State University , Abraka has G network coverage . Thank you . TT
# ::tokens ["Delta", "State", "University", ",", "Abraka", "has", "G", "network", "coverage", ".", "Thank", "you", ".", "TT"]
# ::lemmas ["Delta", "State", "University", ",", "Abraka", "have", "g", "network", "coverage", ".", "thank", "you", ".", "TT"]
(c3-10 / multi-sentence
       :snt1 (c3-3 / have-03
                   :ARG0 (c3-4 / university
                               :name (c3-11 / name
                                            :op1 "Delta"
                                            :op2 "State"
                                            :op3 "University"))
                   :ARG1 (c3-1 / cover-01
                               :ARG1 (c3-8 / network
                                           :mod (c3-9 / product
                                                      :name (c3-5 / name
                                                                  :op1 "G")))))
       :snt2 (c3-7 / thank-01
                   :ARG0 (c3-2 / i)
                   :ARG1 (c3-6 / person
                               :name (c3-0 / name
                                           :op1 "TT"))))
