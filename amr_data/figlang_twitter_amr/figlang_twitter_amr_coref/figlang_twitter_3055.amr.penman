# ::snt I started watching Lifetime and I realize I m not getting anything done tuh-day !
# ::tokens ["I", "started", "watching", "Lifetime", "and", "I", "realize", "I", "m", "not", "getting", "anything", "done", "tuh", "-", "day", "!"]
# ::lemmas ["i", "start", "watch", "Lifetime", "and", "i", "realize", "i", "m", "not", "get", "anything", "do", "tuh", "-", "day", "!"]
(c1-2 / and
      :op1 (c1-0 / start-01
                 :ARG0 (c1-9 / i)
                 :ARG1 (c1-3 / watch-01
                             :ARG0 c1-9
                             :ARG1 (c1-8 / broadcast-program
                                         :name (c1-10 / name
                                                      :op1 "L Lifetime"))))
      :op2 (c1-5 / realize-01
                 :ARG0 c1-9
                 :ARG1 (c1-6 / get-04
                             :ARG0 c1-9
                             :ARG1 (c1-1 / do-02
                                         :ARG0 c1-9
                                         :ARG1 (c1-11 / anything))
                             :time (c1-4 / day
                                         :mod (c1-7 / last))
                             :polarity -)))

# ::snt I'm jealous - hours of work here for the job that pays the bills . I want my Sunday back ! ! !
# ::tokens ["I", "'m", "jealous", "-", "hours", "of", "work", "here", "for", "the", "job", "that", "pays", "the", "bills", ".", "I", "want", "my", "Sunday", "back", "!", "!", "!"]
# ::lemmas ["i", "be", "jealous", "-", "hour", "of", "work", "here", "for", "the", "job", "that", "pay", "the", "bill", ".", "i", "want", "my", "Sunday", "back", "!", "!", "!"]
(c2-13 / multi-sentence
       :snt1 (c2-11 / jealous-02
                    :ARG0 (c2-12 / i)
                    :ARG2 (c2-4 / work-01
                                :ARG0 c2-12
                                :ARG1 (c2-10 / job
                                             :ARG0-of (c2-9 / pay-01
                                                            :ARG1 (c2-14 / bill-01)))
                                :duration (c2-3 / multiple
                                                :op1 (c2-8 / temporal-quantity
                                                           :unit (c2-5 / hour)
                                                           :quant 1))
                                :location (c2-7 / here)))
       :snt2 (c2-15 / want-01
                    :ARG0 (c2-6 / i)
                    :ARG1 (c2-1 / back
                                :domain (c2-0 / date-entity
                                              :weekday (c2-2 / sunday)
                                              :poss c2-6))))
