# ::snt . : ' s " I Know My Rights Camp " for kids cements his status as a hero in the black community <URL>
# ::tokens [".", ":", "'", "s", "\"", "I", "Know", "My", "Rights", "Camp", "\"", "for", "kids", "cements", "his", "status", "as", "a", "hero", "in", "the", "black", "community", "<", "URL", ">"]
# ::lemmas [".", ":", "'", "s", "\"", "i", "know", "my", "Rights", "Camp", "\"", "for", "kid", "cement", "his", "status", "as", "a", "hero", "in", "the", "black", "community", "<", "URL", ">"]
(c1-2 / cements-01
      :ARG0 (c1-0 / camp
                  :name (c1-7 / name
                              :op1 "I"
                              :op2 "know"
                              :op3 "My"
                              :op4 "Rights"
                              :op5 "Camp")
                  :beneficiary (c1-8 / kid))
      :ARG1 (c1-1 / status
                  :mod (c1-3 / hero)
                  :domain (c1-6 / he)
                  :location (c1-4 / community
                                  :ARG1-of (c1-5 / black-05))))

# ::snt ! The should be of a player who cares about community & trying make difference !
# ::tokens ["!", "The", "should", "be", "of", "a", "player", "who", "cares", "about", "community", "&", "trying", "make", "difference", "!"]
# ::lemmas ["!", "the", "should", "be", "of", "a", "player", "who", "care", "about", "community", "&", "try", "make", "difference", "!"]
(c2-5 / recommend-01
      :ARG1 (c2-6 / person
                  :ARG0-of (c2-3 / play-01)
                  :ARG0-of (c2-2 / care-01
                                 :ARG1 (c2-0 / community))
                  :ARG0-of (c2-4 / try-01
                                 :ARG1 (c2-7 / make-02
                                             :ARG0 c2-6
                                             :ARG1 (c2-1 / differ-02))))
      :mode expressive)

# ::snt actually he cares about the filth community that's it
# ::tokens ["actually", "he", "cares", "about", "the", "filth", "community", "that", "'s", "it"]
# ::lemmas ["actually", "he", "care", "about", "the", "filth", "community", "that", "be", "it"]
(c3-3 / care-01
      :ARG0 (c3-4 / he)
      :ARG1 (c3-0 / community
                  :mod (c3-2 / filth))
      :ARG1-of (c3-1 / actual-02)
      :ARG1-of (c3-5 / be-it-08))

# ::snt hello ! They are kids he is trying help & real filth is ignorant people like you !
# ::tokens ["hello", "!", "They", "are", "kids", "he", "is", "trying", "help", "&", "real", "filth", "is", "ignorant", "people", "like", "you", "!"]
# ::lemmas ["hello", "!", "they", "be", "kid", "he", "be", "try", "help", "&", "real", "filth", "be", "ignorant", "people", "like", "you", "!"]
(c4-11 / multi-sentence
       :snt1 (c4-5 / hello)
       :snt2 (c4-1 / and
                   :op1 (c4-12 / kid
                               :domain (c4-7 / they))
                   :op2 (c4-4 / try-01
                              :ARG0 (c4-9 / he)
                              :ARG1 (c4-0 / help-01
                                          :ARG0 c4-9))
                   :op3 (c4-10 / person
                               :ARG1-of (c4-3 / ignorant-02)
                               :ARG1-of (c4-8 / resemble-01
                                              :ARG2 (c4-13 / you))
                               :domain (c4-2 / filth
                                             :ARG1-of (c4-6 / real-04)))))

# ::snt Putting money into fatherless communities wont change much .
# ::tokens ["Putting", "money", "into", "fatherless", "communities", "wo", "nt", "change", "much", "."]
# ::lemmas ["put", "money", "into", "fatherless", "community", "will", "not", "change", "much", "."]
(c5-2 / change-01
      :ARG1 (c5-5 / put-01
                  :ARG1 (c5-6 / money)
                  :ARG2 (c5-0 / community
                              :ARG0-of (c5-4 / have-03
                                             :ARG1 (c5-1 / father)
                                             :polarity -)))
      :quant (c5-3 / much)
      :polarity -)

# ::snt Right back at you . Crime rates still the same ...
# ::tokens ["Right", "back", "at", "you", ".", "Crime", "rates", "still", "the", "same", "..."]
# ::lemmas ["right", "back", "at", "you", ".", "crime", "rate", "still", "the", "same", "..."]
(c6-8 / multi-sentence
      :snt1 (c6-4 / look-01
                  :ARG0 (c6-7 / i)
                  :ARG1 (c6-9 / you)
                  :direction (c6-5 / back
                                   :mod (c6-3 / right)))
      :snt2 (c6-0 / same-01
                  :ARG1 (c6-2 / rate
                              :mod (c6-1 / crime-02))
                  :mod (c6-6 / still)))
