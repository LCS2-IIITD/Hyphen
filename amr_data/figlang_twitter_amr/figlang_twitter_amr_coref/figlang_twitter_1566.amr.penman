# ::snt .. did Kaepernick reject u at UNLV hence such anger for a man ... im curious really ? Or did u give it up and didnt call u back
# ::tokens ["..", "did", "Kaepernick", "reject", "u", "at", "UNLV", "hence", "such", "anger", "for", "a", "man", "...", "i", "m", "curious", "really", "?", "Or", "did", "u", "give", "it", "up", "and", "did", "nt", "call", "u", "back"]
# ::lemmas ["..", "do", "Kaepernick", "reject", "u", "at", "unlv", "hence", "such", "anger", "for", "a", "man", "...", "i", "m", "curious", "really", "?", "or", "do", "u", "give", "it", "up", "and", "do", "not", "call", "u", "back"]
(c1-9 / multi-sentence
      :snt1 (c1-7 / reject-01
                  :ARG0 (c1-20 / person
                               :name (c1-10 / name
                                            :op1 "Kaepernick"))
                  :ARG1 (c1-14 / you)
                  :location (c1-18 / university
                                   :name (c1-1 / name
                                               :op1 "UNLV"))
                  :ARG0-of (c1-3 / cause-01
                                 :ARG1 (c1-16 / anger-01
                                              :ARG1 (c1-17 / man)
                                              :degree (c1-12 / such))))
      :snt2 (c1-0 / curious-01
                  :ARG1 (c1-2 / i)
                  :ARG1-of (c1-4 / real-04))
      :snt3 (c1-6 / or
                  :op2 (c1-11 / and
                              :op1 (c1-8 / give-up-07
                                         :ARG0 (c1-15 / you)
                                         :ARG1 (c1-13 / it))
                              :op2 (c1-5 / call-02
                                         :ARG0 c1-15
                                         :ARG1 c1-15
                                         :direction (c1-19 / back)
                                         :polarity -))))

# ::snt she needs to fact check herself ... again .. she has no clue . If ur not biased .. lets be vo <URL>
# ::tokens ["she", "needs", "to", "fact", "check", "herself", "...", "again", "..", "she", "has", "no", "clue", ".", "If", "ur", "not", "biased", "..", "lets", "be", "vo", "<", "URL", ">"]
# ::lemmas ["she", "need", "to", "fact", "check", "herself", "...", "again", "..", "she", "have", "no", "clue", ".", "if", "ur", "not", "biased", "..", "let", "be", "vo", "<", "url", ">"]
(c2-10 / multi-sentence
       :snt1 (c2-11 / need-01
                    :ARG0 (c2-0 / she)
                    :ARG1 (c2-4 / check-01
                                :ARG0 c2-0
                                :ARG1 c2-0
                                :mod (c2-3 / fact)
                                :mod (c2-2 / again))
                    :ARG0-of (c2-1 / cause-01
                                   :ARG1 (c2-6 / have-03
                                               :ARG0 c2-0
                                               :ARG1 (c2-7 / clue)
                                               :polarity -)))
       :snt2 (c2-8 / vo
                   :ARG0 (c2-5 / we)
                   :condition (c2-9 / bias-01
                                    :ARG1 (c2-12 / you)
                                    :polarity -)
                   :mode imperative))

# ::snt I'm not biased , I believe in right and wrong . Happens on both sides . What facts did she get wrong though ?
# ::tokens ["I", "'m", "not", "biased", ",", "I", "believe", "in", "right", "and", "wrong", ".", "Happens", "on", "both", "sides", ".", "What", "facts", "did", "she", "get", "wrong", "though", "?"]
# ::lemmas ["i", "be", "not", "biased", ",", "i", "believe", "in", "right", "and", "wrong", ".", "happen", "on", "both", "side", ".", "what", "fact", "do", "she", "get", "wrong", "though", "?"]
(c3-14 / multi-sentence
       :snt1 (c3-3 / and
                   :op1 (c3-11 / bias-01
                               :ARG1 (c3-13 / i)
                               :polarity -)
                   :op2 (c3-1 / believe-01
                              :ARG0 c3-13
                              :ARG1 (c3-15 / and
                                           :op1 (c3-9 / right-02)
                                           :op2 (c3-5 / wrong-02))))
       :snt2 (c3-16 / event
                    :location (c3-0 / side
                                    :mod (c3-6 / both)))
       :snt3 (c3-8 / have-concession-91
                   :ARG1 (c3-10 / get-03
                                :ARG1 (c3-12 / she)
                                :ARG2 (c3-7 / wrong-04
                                            :ARG1 (c3-4 / fact
                                                        :mod (c3-2 / amr-unknown))))))

# ::snt i invite her to spend a day in the real world .. if ur gonna call ppl out .. call everyone out
# ::tokens ["i", "invite", "her", "to", "spend", "a", "day", "in", "the", "real", "world", "..", "if", "ur", "gon", "na", "call", "ppl", "out", "..", "call", "everyone", "out"]
# ::lemmas ["i", "invite", "she", "to", "spend", "a", "day", "in", "the", "real", "world", "..", "if", "ur", "going", "to", "call", "ppl", "out", "..", "call", "everyone", "out"]
(c4-3 / and
      :op1 (c4-10 / invite-01
                  :ARG0 (c4-6 / i)
                  :ARG1 (c4-0 / she)
                  :ARG2 (c4-9 / spend-02
                              :ARG0 c4-0
                              :ARG1 (c4-7 / temporal-quantity
                                          :unit (c4-1 / day)
                                          :quant 1)
                              :ARG2 (c4-5 / world
                                          :ARG1-of (c4-8 / real-04))))
      :op2 (c4-4 / call-out-15
                 :ARG0 (c4-11 / you)
                 :ARG1 (c4-12 / everyone)
                 :condition (c4-2 / call-out-15
                                  :ARG0 c4-11
                                  :ARG1 c4-12)
                 :mode imperative))

# ::snt what world are you assuming she lives in ?
# ::tokens ["what", "world", "are", "you", "assuming", "she", "lives", "in", "?"]
# ::lemmas ["what", "world", "be", "you", "assume", "she", "live", "in", "?"]
(c5-1 / assume-02
      :ARG0 (c5-4 / you)
      :ARG1 (c5-3 / live-01
                  :ARG0 (c5-0 / she)
                  :location (c5-5 / amr-unknown
                                  :mod (c5-2 / world))))

# ::snt sorry step back a bit a republican fact checking now there is a novelty .
# ::tokens ["sorry", "step", "back", "a", "bit", "a", "republican", "fact", "checking", "now", "there", "is", "a", "novelty", "."]
# ::lemmas ["sorry", "step", "back", "a", "bit", "a", "republican", "fact", "check", "now", "there", "be", "a", "novelty", "."]
(c6-0 / sorry-01
      :ARG2 (c6-2 / and
                  :op1 (c6-8 / step-01
                             :ARG2 (c6-7 / back)
                             :degree (c6-1 / bit)
                             :manner (c6-4 / check-01
                                           :ARG0 (c6-9 / political-party
                                                       :name (c6-10 / name
                                                                    :op1 "Republican"))
                                           :ARG1 (c6-3 / fact)))
                  :op2 (c6-6 / novelty
                             :time (c6-5 / now))))

# ::snt can't tell if you are serious or not or maybe just don't know the parties
# ::tokens ["ca", "n't", "tell", "if", "you", "are", "serious", "or", "not", "or", "maybe", "just", "do", "n't", "know", "the", "parties"]
# ::lemmas ["can", "not", "tell", "if", "you", "be", "serious", "or", "not", "or", "maybe", "just", "do", "not", "know", "the", "party"]
(c7-4 / or
      :op1 (c7-8 / possible-01
                 :ARG1 (c7-6 / tell-01
                             :ARG0 (c7-1 / i)
                             :ARG1 (c7-2 / truth-value
                                         :polarity-of (c7-0 / serious-01
                                                            :ARG1 (c7-10 / you))))
                 :polarity -)
      :op2 (c7-5 / possible-01
                 :ARG1 (c7-9 / know-02
                             :ARG0 c7-1
                             :ARG1 (c7-3 / party)
                             :mod (c7-7 / just)
                             :polarity -)))

# ::snt sorry u can't pick up on sarcasm . To be clear fact checking not done throughout campaign by Rep
# ::tokens ["sorry", "u", "ca", "n't", "pick", "up", "on", "sarcasm", ".", "To", "be", "clear", "fact", "checking", "not", "done", "throughout", "campaign", "by", "Rep"]
# ::lemmas ["sorry", "u", "can", "not", "pick", "up", "on", "sarcasm", ".", "to", "be", "clear", "fact", "check", "not", "do", "throughout", "campaign", "by", "Rep"]
(c8-13 / multi-sentence
       :snt1 (c8-0 / sorry-01
                   :ARG1 (c8-12 / i)
                   :ARG2 (c8-10 / possible-01
                                :ARG1 (c8-8 / pick-up-11
                                            :ARG0 (c8-15 / you)
                                            :ARG1 (c8-11 / sarcasm))
                                :polarity -))
       :snt2 (c8-3 / check-01
                   :ARG0 (c8-5 / person
                               :ARG0-of (c8-6 / have-org-role-91
                                              :ARG1 (c8-4 / political-party
                                                          :name (c8-14 / name
                                                                       :op1 "Republican"))))
                   :ARG1 (c8-2 / fact)
                   :ARG1-of (c8-1 / clear-06)
                   :time (c8-9 / throughout
                               :op1 (c8-7 / campaign))
                   :polarity -))
