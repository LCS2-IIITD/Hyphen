# ::snt can help deadbeat family so they can be fed while they are not being paid $ k helps , HAND Up
# ::tokens ["can", "help", "deadbeat", "family", "so", "they", "can", "be", "fed", "while", "they", "are", "not", "being", "paid", "$", "k", "helps", ",", "HAND", "Up"]
# ::lemmas ["can", "help", "deadbeat", "family", "so", "they", "can", "be", "feed", "while", "they", "be", "not", "be", "pay", "$", "k", "help", ",", "hand", "up"]
(c1-1 / and
      :op1 (c1-8 / possible-01
                 :ARG1 (c1-5 / help-01
                             :ARG1 (c1-2 / family
                                         :ARG1-of (c1-0 / die-01))
                             :purpose (c1-7 / possible-01
                                            :ARG1 (c1-6 / feed-01
                                                        :ARG2 c1-2
                                                        :time (c1-4 / pay-01
                                                                    :ARG1 (c1-9 / monetary-quantity
                                                                                :unit (c1-3 / dollar)
                                                                                :quant 5000)
                                                                    :ARG2 c1-2
                                                                    :polarity -)))))
      :op2 (c1-10 / keep-up-10
                  :ARG0 (c1-11 / you)
                  :mode imperative))

# ::snt today's another day to do the right thing to help instead of harm be responsible HOPE
# ::tokens ["today", "'s", "another", "day", "to", "do", "the", "right", "thing", "to", "help", "instead", "of", "harm", "be", "responsible", "HOPE"]
# ::lemmas ["today", "be", "another", "day", "to", "do", "the", "right", "thing", "to", "help", "instead", "of", "harm", "be", "responsible", "HOPE"]
(c2-5 / hope-01
      :ARG1 (c2-0 / day
                  :mod (c2-2 / another)
                  :domain (c2-6 / today)
                  :purpose (c2-9 / do-02
                                 :ARG1 (c2-4 / thing
                                             :ARG1-of (c2-7 / right-02))
                                 :purpose (c2-8 / help-01)
                                 :ARG1-of (c2-3 / instead-of-91
                                                :ARG2 (c2-1 / harm-01)))))

# ::snt correct your DOB in the system stop using your brothers U were born on / /66
# ::tokens ["correct", "your", "DOB", "in", "the", "system", "stop", "using", "your", "brothers", "U", "were", "born", "on", "/", "/66"]
# ::lemmas ["correct", "your", "DOB", "in", "the", "system", "stop", "use", "your", "brother", "u", "be", "bear", "on", "/", "/66"]
(c3-3 / and
      :op1 (c3-4 / correct-01
                 :ARG0 (c3-11 / you)
                 :ARG1 (c3-0 / doB
                             :location (c3-1 / system)
                             :poss c3-11)
                 :mode imperative)
      :op2 (c3-9 / stop-01
                 :ARG0 c3-11
                 :ARG1 (c3-7 / use-01
                             :ARG0 c3-11
                             :ARG1 (c3-10 / person
                                          :ARG0-of (c3-6 / have-rel-role-91
                                                         :ARG1 c3-11
                                                         :ARG2 (c3-8 / brother))))
                 :mode imperative)
      :op3 (c3-2 / bear-02
                 :ARG1 c3-11
                 :time (c3-5 / date-entity
                             :year 1966)))
