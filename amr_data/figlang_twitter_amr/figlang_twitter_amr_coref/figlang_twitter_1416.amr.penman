# ::snt The final order of surrender written by Pdraig Pearse did not meet its reserve at auction in Dublin . Owner says it will now leave Ireland
# ::tokens ["The", "final", "order", "of", "surrender", "written", "by", "Pdraig", "Pearse", "did", "not", "meet", "its", "reserve", "at", "auction", "in", "Dublin", ".", "Owner", "says", "it", "will", "now", "leave", "Ireland"]
# ::lemmas ["the", "final", "order", "of", "surrender", "write", "by", "Pdraig", "Pearse", "do", "not", "meet", "its", "reserve", "at", "auction", "in", "Dublin", ".", "Owner", "say", "it", "will", "now", "leave", "Ireland"]
(c1-8 / multi-sentence
      :snt1 (c1-14 / meet-01
                   :ARG0 (c1-6 / order
                               :mod (c1-10 / surrender-01)
                               :mod (c1-13 / final)
                               :ARG1-of (c1-5 / write-01
                                              :ARG0 (c1-19 / person
                                                           :name (c1-9 / name
                                                                       :op1 "Pdraig"
                                                                       :op2 "Pearse"))))
                   :ARG1 (c1-7 / reserve-01
                               :ARG1 c1-6)
                   :location (c1-12 / auction-off-01
                                    :location (c1-4 / city
                                                    :name (c1-1 / name
                                                                :op1 "Dublin")))
                   :polarity -)
      :snt2 (c1-18 / say-01
                   :ARG0 (c1-16 / person
                                :ARG0-of (c1-15 / own-01
                                                :ARG1 (c1-2 / it)))
                   :ARG1 (c1-17 / leave-11
                                :ARG0 c1-2
                                :ARG1 (c1-0 / country
                                            :name (c1-11 / name
                                                         :op1 "Ireland"))
                                :time (c1-3 / now))))

# ::snt is this letter an archaeological object as defined in Nat Mons Act ? If yes export wud need a licence <URL>
# ::tokens ["is", "this", "letter", "an", "archaeological", "object", "as", "defined", "in", "Nat", "Mons", "Act", "?", "If", "yes", "export", "wud", "need", "a", "licence", "<", "URL", ">"]
# ::lemmas ["be", "this", "letter", "an", "archaeological", "object", "as", "define", "in", "Nat", "Mons", "Act", "?", "if", "yes", "export", "wud", "need", "a", "licence", "<", "URL", ">"]
(c2-8 / multi-sentence
      :snt1 (c2-3 / object
                  :polarity (c2-2 / amr-unknown)
                  :mod (c2-11 / archeology)
                  :ARG1-of (c2-0 / define-01
                                 :ARG0 (c2-6 / law
                                             :name (c2-9 / name
                                                         :op1 "Nat"
                                                         :op2 "Mons"
                                                         :op3 "Act")))
                  :domain (c2-7 / letter
                                :mod (c2-4 / this)))
      :snt2 (c2-5 / need-01
                  :ARG0 (c2-12 / export-01)
                  :ARG1 (c2-1 / license)
                  :condition (c2-10 / yes)))

# ::snt will be interesting to see how that plays out whatever decision MAHRRGA makes will likely end up in High Court
# ::tokens ["will", "be", "interesting", "to", "see", "how", "that", "plays", "out", "whatever", "decision", "MAHRRGA", "makes", "will", "likely", "end", "up", "in", "High", "Court"]
# ::lemmas ["will", "be", "interesting", "to", "see", "how", "that", "play", "out", "whatever", "decision", "MAHRRGA", "make", "will", "likely", "end", "up", "in", "High", "Court"]
(c3-10 / interest-01
       :ARG2 (c3-0 / see-01
                   :ARG1 (c3-5 / thing
                               :manner-of (c3-7 / play-out-03
                                                :ARG1 (c3-3 / thing
                                                            :ARG1-of (c3-1 / decide-01
                                                                           :ARG0 (c3-4 / organization
                                                                                       :name (c3-11 / name
                                                                                                    :op1 "MAHRRGA")))
                                                            :mod (c3-2 / whatever)
                                                            :ARG1-of (c3-12 / end-up-03
                                                                            :ARG2 (c3-9 / government-organization
                                                                                        :name (c3-6 / name
                                                                                                    :op1 "High"
                                                                                                    :op2 "Court"))
                                                                            :ARG1-of (c3-8 / likely-01)))))))
