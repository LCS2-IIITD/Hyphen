# ::snt To the gang - get behind the club or go and support . We don't need you .
# ::tokens ["To", "the", "gang", "-", "get", "behind", "the", "club", "or", "go", "and", "support", ".", "We", "do", "n't", "need", "you", "."]
# ::lemmas ["to", "the", "gang", "-", "get", "behind", "the", "club", "or", "go", "and", "support", ".", "we", "do", "not", "need", "you", "."]
(c1-8 / multi-sentence
      :snt1 (c1-4 / or
                  :op1 (c1-6 / get-05
                             :ARG0 (c1-10 / gang)
                             :ARG2 (c1-9 / behind
                                         :op1 (c1-2 / club))
                             :mode imperative)
                  :op2 (c1-1 / go-02
                             :ARG0 c1-10
                             :mode imperative)
                  :op3 (c1-0 / support-01
                             :ARG0 c1-10
                             :mode imperative))
      :snt2 (c1-7 / need-01
                  :ARG0 (c1-3 / we)
                  :ARG1 (c1-5 / you)
                  :polarity -))

# ::snt Do you need a ? , or just get it that other people have differing opinions . is a thing now .
# ::tokens ["Do", "you", "need", "a", "?", ",", "or", "just", "get", "it", "that", "other", "people", "have", "differing", "opinions", ".", "is", "a", "thing", "now", "."]
# ::lemmas ["do", "you", "need", "a", "?", ",", "or", "just", "get", "it", "that", "other", "people", "have", "differ", "opinion", ".", "be", "a", "thing", "now", "."]
(c2-5 / or
      :op1 (c2-11 / need-01
                  :polarity (c2-2 / amr-unknown)
                  :ARG0 (c2-12 / you)
                  :ARG1 (c2-6 / thing))
      :op2 (c2-8 / get-30
                 :ARG0 c2-12
                 :ARG1 (c2-3 / thing
                             :ARG1-of (c2-4 / opine-01
                                            :ARG0 (c2-10 / person
                                                         :mod (c2-1 / other))
                                            :ARG1-of (c2-0 / differ-02)))
                 :mod (c2-9 / just)
                 :time (c2-7 / now)))

# ::snt no amount of negativity will have any bearing on the outcome so what's the point ?
# ::tokens ["no", "amount", "of", "negativity", "will", "have", "any", "bearing", "on", "the", "outcome", "so", "what", "'s", "the", "point", "?"]
# ::lemmas ["no", "amount", "of", "negativity", "will", "have", "any", "bearing", "on", "the", "outcome", "so", "what", "be", "the", "point", "?"]
(c3-4 / bear-06
      :ARG0 (c3-1 / amount
                  :quant-of (c3-6 / negative-03))
      :ARG1 (c3-3 / outcome)
      :mod (c3-7 / any)
      :ARG0-of (c3-2 / cause-01
                     :ARG1 (c3-5 / point-03
                                 :ARG1 (c3-0 / amr-unknown)))
      :polarity -)

# ::snt They said that about the , they also said that about , maybe I'll get to say it about .
# ::tokens ["They", "said", "that", "about", "the", ",", "they", "also", "said", "that", "about", ",", "maybe", "I", "'ll", "get", "to", "say", "it", "about", "."]
# ::lemmas ["they", "say", "that", "about", "the", ",", "they", "also", "say", "that", "about", ",", "maybe", "i", "'ll", "get", "to", "say", "it", "about", "."]
(c4-11 / multi-sentence
       :snt1 (c4-0 / say-01
                   :ARG0 (c4-7 / they)
                   :ARG1 (c4-3 / that)
                   :topic (c4-13 / event))
       :snt2 (c4-9 / say-01
                   :ARG0 (c4-12 / they)
                   :ARG1 (c4-5 / that)
                   :mod (c4-1 / also)
                   :topic (c4-10 / possible-01
                                 :ARG1 (c4-8 / get-22
                                             :ARG0 (c4-2 / i)
                                             :ARG1 (c4-6 / say-01
                                                         :ARG0 c4-2
                                                         :ARG1 (c4-4 / it)
                                                         :topic c4-13)))))

# ::snt you're just showing yourself as an idiot with no clue Darren .
# ::tokens ["you", "'re", "just", "showing", "yourself", "as", "an", "idiot", "with", "no", "clue", "Darren", "."]
# ::lemmas ["you", "be", "just", "show", "yourself", "as", "an", "idiot", "with", "no", "clue", "Darren", "."]
(c5-0 / say-01
      :ARG0 (c5-7 / i)
      :ARG1 (c5-6 / show-01
                  :ARG0 (c5-5 / person
                              :name (c5-8 / name
                                          :op1 "Darren"))
                  :ARG1 (c5-2 / idiot
                              :domain c5-5
                              :ARG0-of (c5-3 / have-03
                                             :ARG1 (c5-1 / clue)
                                             :polarity -))
                  :mod (c5-4 / just))
      :ARG2 c5-5)

# ::snt I may well be an idiot , but all movements have to start by those of opposing ideas . is mine .
# ::tokens ["I", "may", "well", "be", "an", "idiot", ",", "but", "all", "movements", "have", "to", "start", "by", "those", "of", "opposing", "ideas", ".", "is", "mine", "."]
# ::lemmas ["i", "may", "well", "be", "an", "idiot", ",", "but", "all", "movement", "have", "to", "start", "by", "those", "of", "oppose", "idea", ".", "be", "mine", "."]
(c6-4 / contrast-01
      :ARG1 (c6-9 / possible-01
                  :ARG1 (c6-2 / idiot
                              :domain (c6-5 / i)
                              :mod (c6-3 / well)))
      :ARG2 (c6-8 / obligate-01
                  :ARG2 (c6-0 / start-01
                              :ARG0 (c6-10 / movement-07
                                           :mod (c6-1 / all))
                              :ARG2 (c6-6 / idea
                                          :ARG0-of (c6-7 / oppose-01)))
                  :poss c6-5))

# ::snt are you going to protest outside the ground too
# ::tokens ["are", "you", "going", "to", "protest", "outside", "the", "ground", "too"]
# ::lemmas ["be", "you", "go", "to", "protest", "outside", "the", "ground", "too"]
(c7-4 / protest-01
      :polarity (c7-0 / amr-unknown)
      :ARG0 (c7-5 / you)
      :location (c7-1 / outside
                      :op1 (c7-3 / ground))
      :mod (c7-2 / too))

# ::snt I can't quite afford the round trip to do it , so not this time .
# ::tokens ["I", "ca", "n't", "quite", "afford", "the", "round", "trip", "to", "do", "it", ",", "so", "not", "this", "time", "."]
# ::lemmas ["i", "can", "not", "quite", "afford", "the", "round", "trip", "to", "do", "it", ",", "so", "not", "this", "time", "."]
(c8-9 / possible-01
      :ARG1 (c8-1 / afford-01
                  :ARG0 (c8-2 / i)
                  :ARG1 (c8-7 / trip-03
                              :ARG0 c8-2
                              :mod (c8-8 / round)
                              :purpose (c8-0 / do-02
                                             :ARG0 c8-2
                                             :ARG1 (c8-6 / it)))
                  :degree (c8-3 / quite))
      :ARG0-of (c8-4 / cause-01
                     :ARG1 (c8-5 / time
                                 :mod (c8-10 / this)
                                 :polarity -))
      :polarity -)

# ::snt stop your whining then and crack on with something else you keyboard warrior
# ::tokens ["stop", "your", "whining", "then", "and", "crack", "on", "with", "something", "else", "you", "keyboard", "warrior"]
# ::lemmas ["stop", "your", "whining", "then", "and", "crack", "on", "with", "something", "else", "you", "keyboard", "warrior"]
(c9-0 / say-01
      :ARG0 (c9-7 / i)
      :ARG1 (c9-1 / and
                  :op1 (c9-6 / stop-01
                             :ARG0 (c9-9 / you
                                         :ARG0-of (c9-3 / war-01
                                                        :ARG2 (c9-8 / keyboard)))
                             :ARG1 (c9-10 / whine-01
                                          :ARG0 c9-9)
                             :time (c9-5 / then)
                             :mode imperative)
                  :op2 (c9-2 / crack-on-05
                             :ARG0 c9-9
                             :ARG1 (c9-4 / something
                                         :mod (c9-11 / else))
                             :mode imperative))
      :ARG2 c9-9)
