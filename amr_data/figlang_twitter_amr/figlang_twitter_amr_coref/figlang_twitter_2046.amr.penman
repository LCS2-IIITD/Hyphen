# ::snt If the Giants can't get Matt Rhule - - who grew up in New York - - out of Waco they should just shut it down completely
# ::tokens ["If", "the", "Giants", "ca", "n't", "get", "Matt", "Rhule", "-", "-", "who", "grew", "up", "in", "New", "York", "-", "-", "out", "of", "Waco", "they", "should", "just", "shut", "it", "down", "completely"]
# ::lemmas ["if", "the", "Giants", "can", "not", "get", "Matt", "Rhule", "-", "-", "who", "grow", "up", "in", "New", "York", "-", "-", "out", "of", "Waco", "they", "should", "just", "shut", "it", "down", "completely"]
(c1-4 / have-condition-91
      :ARG1 (c1-9 / recommend-01
                  :ARG1 (c1-0 / shut-down-05
                              :ARG0 (c1-8 / team
                                          :name (c1-14 / name
                                                       :op1 "Gers")
                                          :ARG1-of c1-0)
                              :mod (c1-12 / just)
                              :ARG1-of (c1-3 / complete-02)))
      :ARG2 (c1-13 / possible-01
                   :ARG1 (c1-11 / get-05
                                :ARG0 c1-8
                                :ARG1 (c1-7 / person
                                            :name (c1-10 / name
                                                         :op1 "Matt"
                                                         :op2 "Rhule")
                                            :ARG1-of (c1-15 / grow-up-04
                                                            :location (c1-1 / city
                                                                            :name (c1-6 / name
                                                                                        :op1 "New"
                                                                                        :op2 "York"))))
                                :ARG2 (c1-5 / city
                                            :name (c1-2 / name
                                                        :op1 "Waco")))
                   :polarity -))

# ::snt So is Gettleman running the search ? Gettleman is the wild card ...
# ::tokens ["So", "is", "Gettleman", "running", "the", "search", "?", "Gettleman", "is", "the", "wild", "card", "..."]
# ::lemmas ["so", "be", "Gettleman", "run", "the", "search", "?", "Gettleman", "be", "the", "wild", "card", "..."]
(c2-6 / multi-sentence
      :snt1 (c2-4 / run-01
                  :ARG0 (c2-5 / person
                              :name (c2-7 / name
                                          :op1 "Gettleman"))
                  :ARG1 (c2-0 / search-01)
                  :polarity (c2-1 / amr-unknown))
      :snt2 (c2-2 / card
                  :mod (c2-3 / wild)
                  :domain c2-5))

# ::snt he is and they're sticking with Gettleman . again , if they can't get Rhule in this particular circumstance , they have no reason to exist
# ::tokens ["he", "is", "and", "they", "'re", "sticking", "with", "Gettleman", ".", "again", ",", "if", "they", "ca", "n't", "get", "Rhule", "in", "this", "particular", "circumstance", ",", "they", "have", "no", "reason", "to", "exist"]
# ::lemmas ["he", "be", "and", "they", "be", "stick", "with", "Gettleman", ".", "again", ",", "if", "they", "can", "not", "get", "Rhule", "in", "this", "particular", "circumstance", ",", "they", "have", "no", "reason", "to", "exist"]
(c3-9 / multi-sentence
      :snt1 (c3-16 / and
                   :op1 (c3-17 / he)
                   :op2 (c3-14 / stick-01
                               :ARG1 (c3-6 / they)
                               :ARG2 (c3-19 / person
                                            :name (c3-10 / name
                                                         :op1 "Gettleman"))))
      :snt2 (c3-2 / have-condition-91
                  :ARG1 (c3-3 / have-03
                              :ARG0 (c3-5 / they)
                              :ARG1 (c3-7 / reason
                                          :ARG0-of (c3-4 / cause-01
                                                         :ARG1 (c3-13 / exist-01
                                                                      :ARG1 c3-5)))
                              :polarity -)
                  :ARG2 (c3-18 / possible-01
                               :ARG1 (c3-8 / get-01
                                           :ARG0 c3-5
                                           :ARG1 c3-19
                                           :name (c3-1 / name
                                                       :op1 "Rhule"))
                               :time (c3-0 / circumstance
                                           :mod (c3-11 / this)
                                           :mod (c3-15 / particular))
                               :polarity -))
      :mod (c3-12 / again))
