# ::snt :30 Polling site PS14 Name nor Address found . Told Affidavit will allow Vote . Logan at Elections said NO Must Vote at location Register !
# ::tokens [":", "30", "Polling", "site", "PS14", "Name", "nor", "Address", "found", ".", "Told", "Affidavit", "will", "allow", "Vote", ".", "Logan", "at", "Elections", "said", "NO", "Must", "Vote", "at", "location", "Register", "!"]
# ::lemmas [":", "30", "polling", "site", "PS14", "Name", "nor", "Address", "find", ".", "tell", "Affidavit", "will", "allow", "Vote", ".", "Logan", "at", "election", "say", "no", "must", "vote", "at", "location", "Register", "!"]
(c1-5 / multi-sentence
      :snt1 (c1-11 / find-01
                   :ARG1 (c1-10 / and
                                :op1 (c1-6 / name
                                           :quant 14)
                                :op2 (c1-7 / address
                                           :quant 14))
                   :location (c1-9 / site
                                   :ARG0-of (c1-17 / poll-01))
                   :time (c1-0 / date-entity
                               :time ":30")
                   :polarity -)
      :snt2 (c1-1 / allow-01
                  :ARG0 (c1-4 / thing
                              :ARG1-of (c1-18 / allege-01)
                              :mod (c1-3 / old))
                  :ARG1 (c1-2 / vote-01))
      :snt3 (c1-16 / say-01
                   :ARG0 (c1-14 / person
                                :name c1-6
                                :op1 "Logan")
                   :location (c1-8 / elect-01))
      :ARG1 (c1-13 / obligate-01
                   :ARG2 (c1-12 / vote-01)
                   :location (c1-15 / location)
                   :polarity -))

# ::snt You can check your registration status at <URL> ! - JR
# ::tokens ["You", "can", "check", "your", "registration", "status", "at", "<", "URL", ">", "!", "-", "JR"]
# ::lemmas ["you", "can", "check", "your", "registration", "status", "at", "<", "URL", ">", "!", "-", "JR"]
(c2-0 / say-01
      :ARG0 (c2-7 / i)
      :ARG1 (c2-5 / possible-01
                  :ARG1 (c2-1 / check-01
                              :ARG0 (c2-3 / person
                                          :name (c2-8 / name
                                                      :op1 "RJB"))
                              :ARG1 (c2-6 / status
                                          :mod (c2-4 / register-02
                                                     :ARG1 c2-3))
                              :location (c2-2 / url-entity)))
      :ARG2 c2-3)

# ::snt Thanks . ... I Voted at the correct location . And Went back to P . S and retrieved my Affidavit Oath and Ballot Vote . Not twice ! ! !
# ::tokens ["Thanks", ".", "...", "I", "Voted", "at", "the", "correct", "location", ".", "And", "Went", "back", "to", "P", ".", "S", "and", "retrieved", "my", "Affidavit", "Oath", "and", "Ballot", "Vote", ".", "Not", "twice", "!", "!", "!"]
# ::lemmas ["thank", ".", "...", "i", "vote", "at", "the", "correct", "location", ".", "and", "go", "back", "to", "p", ".", "s", "and", "retrieve", "my", "Affidavit", "Oath", "and", "Ballot", "Vote", ".", "not", "twice", "!", "!", "!"]
(c3-9 / multi-sentence
      :snt1 (c3-6 / thank-01
                  :ARG0 (c3-2 / i)
                  :ARG1 (c3-13 / you))
      :snt2 (c3-15 / and
                   :op1 (c3-5 / vote-01
                              :ARG0 (c3-12 / i)
                              :location (c3-18 / location
                                               :ARG1-of (c3-3 / correct-02)))
                   :op2 (c3-11 / and
                               :op1 (c3-8 / go-02
                                          :ARG0 c3-12
                                          :ARG4 (c3-0 / city
                                                      :name (c3-10 / name
                                                                   :op1 "P."
                                                                   :op2 "S"))
                                          :direction (c3-19 / back))
                               :op2 (c3-7 / retrieve-01
                                          :ARG0 c3-12
                                          :ARG1 (c3-1 / and
                                                      :op1 (c3-4 / thing
                                                                 :name c3-10
                                                                 :op1 "Affidavit"
                                                                 :op2 "Oath")
                                                      :poss c3-12)
                                          :op2 (c3-16 / vote-01
                                                      :ARG1 (c3-14 / ballot)))))
      :snt3 (c3-17 / have-frequency-91
                   :polarity -
                   :ARG2 2
                   :mode expressive))
