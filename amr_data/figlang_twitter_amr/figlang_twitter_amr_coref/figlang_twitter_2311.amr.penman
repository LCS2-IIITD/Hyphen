# ::snt maybe they need some expectations put on them .. Because all we see is burning our flag , smashing things & violence
# ::tokens ["maybe", "they", "need", "some", "expectations", "put", "on", "them", "..", "Because", "all", "we", "see", "is", "burning", "our", "flag", ",", "smashing", "things", "&", "violence"]
# ::lemmas ["maybe", "they", "need", "some", "expectation", "put", "on", "they", "..", "because", "all", "we", "see", "be", "burn", "our", "flag", ",", "smash", "thing", "&", "violence"]
(c1-4 / cause-01
      :ARG0 (c1-0 / see-01
                  :ARG0 (c1-5 / we)
                  :ARG1 (c1-2 / and
                              :op1 (c1-11 / burn-01
                                          :ARG1 (c1-3 / flag
                                                      :poss c1-5))
                              :op2 (c1-12 / smash-01
                                          :ARG1 (c1-15 / and
                                                       :op1 (c1-10 / thing)
                                                       :op2 (c1-8 / violence))))
                  :mod (c1-1 / all))
      :ARG1 (c1-13 / possible-01
                   :ARG1 (c1-14 / need-01
                                :ARG0 (c1-6 / they)
                                :ARG1 (c1-16 / expect-01
                                             :quant (c1-7 / some)
                                             :ARG1-of (c1-9 / put-01
                                                            :ARG2 c1-6)))))

# ::snt then open your eyes because there are a lot of good ppl both sides of the aisle trying to actually help .
# ::tokens ["then", "open", "your", "eyes", "because", "there", "are", "a", "lot", "of", "good", "ppl", "both", "sides", "of", "the", "aisle", "trying", "to", "actually", "help", "."]
# ::lemmas ["then", "open", "your", "eye", "because", "there", "be", "a", "lot", "of", "good", "ppl", "both", "side", "of", "the", "aisle", "try", "to", "actually", "help", "."]
(c2-5 / open-01
      :ARG0 (c2-11 / you
                   :part (c2-13 / eye
                                :ARG1-of c2-5))
      :ARG1-of (c2-2 / cause-01
                     :ARG0 (c2-6 / try-01
                                 :ARG0 (c2-9 / person
                                             :ARG1-of (c2-8 / good-02)
                                             :quant (c2-7 / lot)
                                             :location (c2-0 / side
                                                             :mod (c2-10 / both)
                                                             :part-of (c2-1 / aisle)))
                                 :ARG1 (c2-4 / help-01
                                             :ARG0 c2-9
                                             :ARG1-of (c2-12 / actual-02))))
      :time (c2-3 / then)
      :mode imperative)

# ::snt I only see hate on the other side and secondary motives .. I will never associate with that party again . It's name is mud .
# ::tokens ["I", "only", "see", "hate", "on", "the", "other", "side", "and", "secondary", "motives", "..", "I", "will", "never", "associate", "with", "that", "party", "again", ".", "It", "'s", "name", "is", "mud", "."]
# ::lemmas ["i", "only", "see", "hate", "on", "the", "other", "side", "and", "secondary", "motive", "..", "i", "will", "never", "associate", "with", "that", "party", "again", ".", "it", "be", "name", "be", "mud", "."]
(c3-4 / multi-sentence
      :snt1 (c3-8 / see-01
                  :ARG0 (c3-1 / i)
                  :ARG1 (c3-13 / and
                               :op1 (c3-15 / hate-01
                                           :location (c3-17 / side
                                                            :mod (c3-2 / other)))
                               :op2 (c3-14 / motive
                                           :mod (c3-10 / secondary)))
                  :mod (c3-16 / only))
      :snt2 (c3-6 / associate-01
                  :ARG0 (c3-9 / i)
                  :ARG1 (c3-18 / party
                               :mod (c3-3 / that))
                  :time (c3-7 / ever)
                  :mod (c3-0 / again)
                  :polarity -)
      :snt3 (c3-5 / name-01
                  :ARG1 (c3-11 / it)
                  :ARG2 (c3-12 / mud)))
