# ::snt OBAMA BUSTED ! Jan NYT " wiretapped communications had been provided to the White House " <URL>
# ::tokens ["OBAMA", "BUSTED", "!", "Jan", "NYT", "\"", "wiretapped", "communications", "had", "been", "provided", "to", "the", "White", "House", "\"", "<", "URL", ">"]
# ::lemmas ["OBAMA", "bust", "!", "Jan", "NYT", "\"", "wiretappe", "communication", "have", "be", "provide", "to", "the", "White", "House", "\"", "<", "URL", ">"]
(c1-8 / bust-02
      :ARG0 (c1-9 / person
                  :name (c1-10 / name
                               :op1 "Obama"))
      :ARG1 (c1-6 / newspaper
                  :name (c1-3 / name
                              :op1 "New"
                              :op2 "York"
                              :op3 "Times")
                  :ARG0-of (c1-4 / provide-01
                                 :ARG1 (c1-2 / communicate-01
                                             :ARG1-of (c1-5 / tap-02))
                                 :ARG2 (c1-7 / government-organization
                                             :name (c1-1 / name
                                                         :op1 "White"
                                                         :op2 "House")))
                  :time (c1-0 / date-entity
                              :month 1)))

# ::snt also , if it's the latter , you know the " failing NY Times " is according to your leader .
# ::tokens ["also", ",", "if", "it", "'s", "the", "latter", ",", "you", "know", "the", "\"", "failing", "NY", "Times", "\"", "is", "according", "to", "your", "leader", "."]
# ::lemmas ["also", ",", "if", "it", "be", "the", "latter", ",", "you", "know", "the", "\"", "fail", "NY", "Times", "\"", "be", "accord", "to", "your", "leader", "."]
(c2-0 / say-01
      :ARG0 (c2-7 / person
                  :ARG0-of (c2-5 / lead-02
                                 :ARG1 (c2-9 / you)))
      :ARG1 (c2-8 / know-01
                  :ARG0 c2-9
                  :ARG1 (c2-6 / newspaper
                              :name (c2-4 / name
                                          :op1 "NY"
                                          :op2 "Times")
                              :ARG1-of (c2-3 / fail-01)))
      :condition (c2-1 / latter)
      :mod (c2-2 / also))
