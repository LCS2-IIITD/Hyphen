# ::snt Sleep is the essence of life , and life is the essence of ... FUN ! And let s just say , I need all the essence I can get . ( Right , Jeff ? ? ? LOLOL ) Live Laugh Sleep <URL>
# ::tokens ["Sleep", "is", "the", "essence", "of", "life", ",", "and", "life", "is", "the", "essence", "of", "...", "FUN", "!", "And", "let", "s", "just", "say", ",", "I", "need", "all", "the", "essence", "I", "can", "get", ".", "(", "Right", ",", "Jeff", "?", "?", "?", "LOLOL", ")", "Live", "Laugh", "Sleep", "<", "URL", ">"]
# ::lemmas ["sleep", "be", "the", "essence", "of", "life", ",", "and", "life", "be", "the", "essence", "of", "...", "FUN", "!", "and", "let", "s", "just", "say", ",", "i", "need", "all", "the", "essence", "i", "can", "get", ".", "(", "right", ",", "Jeff", "?", "?", "?", "lolol", ")", "Live", "Laugh", "Sleep", "<", "URL", ">"]
(c1-11 / multi-sentence
       :snt1 (c1-17 / and
                    :op1 (c1-14 / essence
                                :poss (c1-21 / life)
                                :domain (c1-15 / sleep-01))
                    :op2 (c1-19 / essence
                                :poss (c1-18 / fun-01)
                                :domain (c1-5 / life))
                    :snt2-of c1-11)
       :op2 (c1-0 / let-01
                  :ARG1 (c1-16 / say-01
                               :ARG0 (c1-8 / we)
                               :ARG1 (c1-12 / need-01
                                            :ARG0 (c1-6 / i)
                                            :ARG1 (c1-2 / essence
                                                        :mod (c1-13 / all)
                                                        :ARG1-of (c1-10 / get-01
                                                                        :ARG0 c1-6
                                                                        :ARG1-of (c1-23 / possible-01))))
                               :mod (c1-22 / just)))
       :snt3 (c1-9 / right-06
                   :ARG1 (c1-20 / person
                                :name (c1-4 / name
                                            :op1 "Jeff"))
                   :polarity (c1-1 / amr-unknown)
                   :ARG2-of (c1-3 / laugh-01
                                  :ARG0 c1-6
                                  :manner (c1-7 / loud)
                                  :mode expressive)))

# ::snt Todd : Are you ever attracted to people who aren't make models and shirtless ?
# ::tokens ["Todd", ":", "Are", "you", "ever", "attracted", "to", "people", "who", "are", "n't", "make", "models", "and", "shirtless", "?"]
# ::lemmas ["Todd", ":", "be", "you", "ever", "attract", "to", "people", "who", "be", "not", "make", "model", "and", "shirtless", "?"]
(c2-2 / ask-01
      :ARG1 (c2-9 / attract-01
                  :ARG0 (c2-6 / person
                              :ARG1-of (c2-7 / make-01
                                             :ARG2 (c2-1 / and
                                                         :op1 (c2-3 / model)
                                                         :op2 (c2-0 / shirtless))
                                             :polarity -))
                  :ARG1 (c2-5 / person
                              :name (c2-8 / name
                                          :op1 "Todd"))
                  :polarity (c2-4 / amr-unknown)
                  :time (c2-10 / ever))
      :ARG2 c2-5)
