# ::snt WATCH : Jess Phillips says Labour must be prepared to advocate for EU membership if Boris Johnson's Brexit leaves the UK poorer and less safe . <URL>
# ::tokens ["WATCH", ":", "Jess", "Phillips", "says", "Labour", "must", "be", "prepared", "to", "advocate", "for", "EU", "membership", "if", "Boris", "Johnson", "'s", "Brexit", "leaves", "the", "UK", "poorer", "and", "less", "safe", ".", "<", "URL", ">"]
# ::lemmas ["watch", ":", "Jess", "Phillips", "say", "Labour", "must", "be", "prepared", "to", "advocate", "for", "EU", "membership", "if", "Boris", "Johnson", "'s", "Brexit", "leave", "the", "UK", "poor", "and", "less", "safe", ".", "<", "URL", ">"]
(c1-14 / say-01
       :ARG0 (c1-25 / person
                    :name (c1-12 / name
                                 :op1 "Jess"
                                 :op2 "Phillips"))
       :ARG1 (c1-9 / obligate-01
                   :ARG1 (c1-22 / political-party
                                :name (c1-2 / name
                                            :op1 "Labour"))
                   :ARG2 (c1-16 / prepare-02
                                :ARG1 c1-22
                                :ARG2 (c1-18 / advocate-01
                                             :ARG0 c1-22
                                             :ARG1 (c1-20 / have-org-role-91
                                                          :ARG0 c1-22
                                                          :ARG1 (c1-21 / organization
                                                                       :name (c1-17 / name
                                                                                    :op1 "EU"))
                                                          :ARG2 (c1-11 / member))))
                   :condition (c1-23 / leave-13
                                     :ARG0 (c1-0 / divorce-01
                                                 :ARG0 (c1-15 / person
                                                              :name (c1-6 / name
                                                                          :op1 "Boris"
                                                                          :op2 "Johnson")))
                                     :ARG1 (c1-13 / and
                                                  :op1 (c1-4 / have-degree-91
                                                             :ARG1 (c1-7 / country
                                                                         :name (c1-10 / name
                                                                                      :op1 "UK"))
                                                             :ARG2 (c1-1 / poor)
                                                             :ARG3 (c1-19 / more))
                                                  :op2 (c1-5 / have-degree-91
                                                             :ARG1 c1-7
                                                             :ARG2 (c1-24 / safe-01
                                                                          :ARG1 c1-7)
                                                             :ARG3 (c1-3 / less)))))
       :ARG1-of (c1-8 / watch-01))

# ::snt Well she s actually totally wrong on every count . Rejoining the EU would require economic convergence and adoption of the Euro ( or a currency peg ) and signing the Shengen agreement . All disastrous for the UK which has a negative current account balance . Happy now ?
# ::tokens ["Well", "she", "s", "actually", "totally", "wrong", "on", "every", "count", ".", "Rejoining", "the", "EU", "would", "require", "economic", "convergence", "and", "adoption", "of", "the", "Euro", "(", "or", "a", "currency", "peg", ")", "and", "signing", "the", "Shengen", "agreement", ".", "All", "disastrous", "for", "the", "UK", "which", "has", "a", "negative", "current", "account", "balance", ".", "Happy", "now", "?"]
# ::lemmas ["well", "she", "s", "actually", "totally", "wrong", "on", "every", "count", ".", "rejoin", "the", "EU", "would", "require", "economic", "convergence", "and", "adoption", "of", "the", "Euro", "(", "or", "a", "currency", "peg", ")", "and", "sign", "the", "Shengen", "agreement", ".", "all", "disastrous", "for", "the", "UK", "which", "have", "a", "negative", "current", "account", "balance", ".", "happy", "now", "?"]
(c2-17 / multi-sentence
       :snt1 (c2-9 / wrong-04
                   :ARG1 (c2-21 / she)
                   :ARG2 (c2-8 / count-01
                               :mod (c2-20 / every))
                   :ARG1-of (c2-28 / actual-02)
                   :mod (c2-14 / total))
       :snt2 (c2-15 / require-01
                    :ARG0 (c2-33 / join-01
                                 :ARG1 (c2-13 / organization
                                              :name (c2-18 / name
                                                           :op1 "EU")))
                    :ARG1 (c2-19 / and
                                 :op1 (c2-0 / converge-01
                                            :mod (c2-30 / economy))
                                 :op2 (c2-1 / adopt-01
                                            :ARG1 (c2-31 / or
                                                         :op1 (c2-4 / euro)
                                                         :op2 (c2-34 / peg-01
                                                                     :ARG1 (c2-11 / currency))))
                                 :op3 (c2-27 / sign-02
                                             :ARG1 (c2-35 / agree-01
                                                          :ARG1 (c2-10 / treaty
                                                                       :name (c2-5 / name
                                                                                   :op1 "Shengen")))))
                    :snt3 (c2-2 / disastrous
                                :domain (c2-3 / all)
                                :beneficiary (c2-24 / country
                                                    :name (c2-23 / name
                                                                 :op1 "UK")
                                                    :ARG0-of (c2-29 / have-03
                                                                    :ARG1 (c2-32 / balance
                                                                                 :mod (c2-25 / account)
                                                                                 :time (c2-22 / current)
                                                                                 :ARG0-of (c2-7 / negative-02)))))
                    :snt4 (c2-6 / happy-01
                                :ARG1 (c2-26 / you)
                                :polarity (c2-12 / amr-unknown)
                                :time (c2-16 / now))))

# ::snt She didnt say she would rejoin . She said if the conditions proved true , that rejoining would be better economically , she would support that . Keep up champ .
# ::tokens ["She", "did", "nt", "say", "she", "would", "rejoin", ".", "She", "said", "if", "the", "conditions", "proved", "true", ",", "that", "rejoining", "would", "be", "better", "economically", ",", "she", "would", "support", "that", ".", "Keep", "up", "champ", "."]
# ::lemmas ["she", "do", "not", "say", "she", "would", "rejoin", ".", "she", "say", "if", "the", "condition", "prove", "true", ",", "that", "rejoin", "would", "be", "well", "economically", ",", "she", "would", "support", "that", ".", "keep", "up", "champ", "."]
(c3-12 / multi-sentence
       :snt1 (c3-0 / say-01
                   :ARG0 (c3-11 / she)
                   :ARG1 (c3-8 / rejoin-01
                               :ARG0 c3-11)
                   :polarity -)
       :snt2 (c3-5 / say-01
                   :ARG0 (c3-7 / she)
                   :ARG1 (c3-15 / support-01
                                :ARG0 c3-7
                                :ARG1 (c3-6 / rejoin-01
                                            :ARG1-of (c3-4 / have-degree-91
                                                           :ARG2 (c3-10 / good-02
                                                                        :ARG1 c3-6
                                                                        :manner (c3-16 / economic))
                                                           :ARG3 (c3-2 / more)))
                                :condition (c3-9 / true-01
                                                 :ARG1 (c3-3 / condition))))
       :snt3 (c3-13 / keep-up-10
                    :ARG0 (c3-14 / you
                                 :mod (c3-1 / champ))
                    :mode imperative))
