# ::snt The Joseph Project is good for the few people enrolled in the program . That said , it is NOT a credible program . They drive unemployed men from to outlying employers . They rely on church and biz donations , always running at a deficit . <URL>
# ::tokens ["The", "Joseph", "Project", "is", "good", "for", "the", "few", "people", "enrolled", "in", "the", "program", ".", "That", "said", ",", "it", "is", "NOT", "a", "credible", "program", ".", "They", "drive", "unemployed", "men", "from", "to", "outlying", "employers", ".", "They", "rely", "on", "church", "and", "biz", "donations", ",", "always", "running", "at", "a", "deficit", ".", "<", "URL", ">"]
# ::lemmas ["The", "Joseph", "Project", "be", "good", "for", "the", "few", "people", "enrol", "in", "the", "program", ".", "that", "say", ",", "it", "be", "not", "a", "credible", "program", ".", "they", "drive", "unemployed", "man", "from", "to", "outlying", "employer", ".", "they", "rely", "on", "church", "and", "biz", "donation", ",", "always", "run", "at", "a", "deficit", ".", "<", "URL", ">"]
(c1-11 / multi-sentence
       :snt1 (c1-10 / good-04
                    :ARG1 (c1-30 / program
                                 :name (c1-12 / name
                                              :op1 "Joseph"
                                              :op2 "Project"))
                    :ARG2 (c1-27 / person
                                 :quant (c1-23 / few)
                                 :ARG1-of (c1-15 / enroll-01
                                                 :ARG2 (c1-18 / program))))
       :snt2 (c1-25 / have-concession-91
                    :ARG1 (c1-3 / credible
                                :domain c1-30
                                :polarity -)
                    :ARG2 (c1-16 / say-01
                                 :ARG1 (c1-8 / that)))
       :snt3 (c1-0 / drive-02
                   :ARG0 (c1-4 / they)
                   :ARG1 (c1-24 / man
                                :ARG1-of (c1-26 / employ-01
                                                :polarity -))
                   :ARG2 (c1-1 / company
                               :ARG0-of (c1-2 / employ-01)
                               :ARG1-of (c1-28 / lie-07)))
       :snt4 (c1-9 / rely-01
                   :ARG0 (c1-13 / they)
                   :ARG1 (c1-21 / and
                                :op1 (c1-19 / thing
                                            :ARG1-of (c1-20 / donate-01
                                                            :ARG0 (c1-5 / church)))
                                :op2 (c1-22 / thing
                                            :ARG1-of (c1-17 / donate-01
                                                            :ARG0 (c1-29 / business))))
                   :ARG1-of (c1-6 / run-01
                                  :ARG0 c1-13
                                  :manner (c1-7 / deficit)
                                  :time (c1-14 / always))))

# ::snt Meanwhile , has done nothing in his entire tenure to : Address the causes of unemployment in or for Connect a small group like The Joseph Project to ANY meaningful federal program or policy , or attempt to scale it up .
# ::tokens ["Meanwhile", ",", "has", "done", "nothing", "in", "his", "entire", "tenure", "to", ":", "Address", "the", "causes", "of", "unemployment", "in", "or", "for", "Connect", "a", "small", "group", "like", "The", "Joseph", "Project", "to", "ANY", "meaningful", "federal", "program", "or", "policy", ",", "or", "attempt", "to", "scale", "it", "up", "."]
# ::lemmas ["meanwhile", ",", "have", "do", "nothing", "in", "his", "entire", "tenure", "to", ":", "address", "the", "cause", "of", "unemployment", "in", "or", "for", "connect", "a", "small", "group", "like", "The", "Joseph", "Project", "to", "any", "meaningful", "federal", "program", "or", "policy", ",", "or", "attempt", "to", "scale", "it", "up", "."]
(c2-0 / do-02
      :ARG0 (c2-17 / he)
      :ARG1 (c2-9 / nothing)
      :ARG2 (c2-5 / or
                  :op1 (c2-14 / address-02
                              :ARG0 c2-17
                              :ARG1 (c2-4 / cause-01
                                          :ARG0 (c2-11 / employ-01
                                                       :polarity -)
                                          :ARG1 (c2-1 / connect-01
                                                      :ARG0 c2-17
                                                      :ARG1 (c2-7 / group
                                                                  :mod (c2-12 / small)
                                                                  :example (c2-22 / program
                                                                                  :name (c2-3 / name
                                                                                              :op1 "The"
                                                                                              :op2 "Joseph"
                                                                                              :op3 "Project")))
                                                      :ARG2 (c2-18 / or
                                                                   :op1 c2-22
                                                                   :mod (c2-15 / federal)
                                                                   :ARG0-of (c2-8 / meaningful-05)
                                                                   :mod (c2-16 / meaningful))
                                                      :op2 (c2-20 / policy-01)
                                                      :mod (c2-10 / any))))
                  :op2 (c2-2 / attempt-01
                             :ARG0 c2-17
                             :ARG1 (c2-21 / scale-up-00
                                          :ARG0 c2-17
                                          :ARG1 c2-7)))
      :time (c2-6 / tenure
                  :mod (c2-19 / entire)
                  :poss c2-17)
      :time (c2-13 / meanwhile))

# ::snt Other things either does nothing to support or actively works against : and , and needs in He just answers every single policy question with " The Joseph Project . "
# ::tokens ["Other", "things", "either", "does", "nothing", "to", "support", "or", "actively", "works", "against", ":", "and", ",", "and", "needs", "in", "He", "just", "answers", "every", "single", "policy", "question", "with", "\"", "The", "Joseph", "Project", ".", "\""]
# ::lemmas ["other", "thing", "either", "do", "nothing", "to", "support", "or", "actively", "work", "against", ":", "and", ",", "and", "need", "in", "he", "just", "answer", "every", "single", "policy", "question", "with", "\"", "The", "Joseph", "Project", ".", "\""]
(c3-3 / and
      :op1 (c3-8 / or
                 :op1 (c3-0 / support-01
                            :ARG0 (c3-10 / thing
                                         :mod (c3-7 / other))
                            :ARG1 (c3-2 / oppose-01)
                            :polarity -)
                 :op2 (c3-4 / work-01
                            :ARG0 c3-10
                            :ARG1 c3-2
                            :ARG1-of (c3-16 / activity-06
                                            :ARG0 c3-10)))
      :op2 (c3-15 / need-01
                  :ARG0 c3-10
                  :ARG1 c3-0)
      :op3 (c3-1 / answer-01
                 :ARG0 (c3-6 / he)
                 :ARG1 (c3-5 / question-01
                             :ARG1 (c3-14 / policy-01)
                             :ARG1-of (c3-13 / single-02)
                             :mod (c3-17 / every))
                 :ARG2 (c3-9 / publication
                             :name (c3-11 / name
                                          :op1 "The"
                                          :op2 "Joseph"
                                          :op3 "Project"))
                 :mod (c3-12 / just)))
