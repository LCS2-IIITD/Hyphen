# ::snt You can see where the flood pushed between north and south America . <URL>
# ::tokens ["You", "can", "see", "where", "the", "flood", "pushed", "between", "north", "and", "south", "America", ".", "<", "URL", ">"]
# ::lemmas ["you", "can", "see", "where", "the", "flood", "push", "between", "north", "and", "south", "America", ".", "<", "URL", ">"]
(c1-8 / possible-01
      :ARG1 (c1-0 / see-01
                  :ARG0 (c1-10 / you)
                  :ARG1 (c1-5 / thing
                              :location-of (c1-4 / push-01
                                                 :ARG1 (c1-2 / flood-01)
                                                 :ARG2 (c1-7 / between
                                                             :op1 (c1-3 / continent
                                                                        :name (c1-9 / name
                                                                                    :op1 "North"
                                                                                    :op2 "America"))
                                                             :op2 (c1-1 / continent
                                                                        :name (c1-6 / name
                                                                                    :op1 "South"
                                                                                    :op2 "America")))))))

# ::snt Genesis :11 How do you think the fountains of the deep were broken open Impact
# ::tokens ["Genesis", ":", "11", "How", "do", "you", "think", "the", "fountains", "of", "the", "deep", "were", "broken", "open", "Impact"]
# ::lemmas ["genesis", ":", "11", "how", "do", "you", "think", "the", "fountain", "of", "the", "deep", "be", "break", "open", "impact"]
(c2-8 / multi-sentence
      :snt1 (c2-3 / verse
                  :mod 11)
      :snt2 (c2-5 / think-01
                  :ARG0 (c2-9 / you)
                  :ARG1 (c2-6 / break-01
                              :ARG1 (c2-2 / fountain
                                          :location (c2-0 / deep-02))
                              :ARG2 (c2-7 / impact-01
                                          :ARG1-of (c2-4 / open-09))
                              :manner (c2-1 / amr-unknown))))

# ::snt They weren't . Quote something other than bible you wilfully ignorant drone .
# ::tokens ["They", "were", "n't", ".", "Quote", "something", "other", "than", "bible", "you", "wilfully", "ignorant", "drone", "."]
# ::lemmas ["they", "be", "not", ".", "quote", "something", "other", "than", "bible", "you", "wilfully", "ignorant", "drone", "."]
(c3-8 / multi-sentence
      :snt1 (c3-5 / they
                  :polarity -)
      :snt2 (c3-2 / quote-01
                  :ARG0 (c3-10 / you
                               :ARG0-of (c3-0 / drone-01)
                               :ARG1-of (c3-7 / ignorant-02
                                              :degree (c3-3 / willful)))
                  :ARG1 (c3-1 / something
                              :mod (c3-4 / other)
                              :ARG2-of (c3-11 / except-01
                                              :ARG1 (c3-6 / book
                                                          :name (c3-9 / name
                                                                      :op1 "Bible"))))
                  :mode imperative))

# ::snt This general statement of awe proves Hebrew war <URL>
# ::tokens ["This", "general", "statement", "of", "awe", "proves", "Hebrew", "war", "<", "URL", ">"]
# ::lemmas ["this", "general", "statement", "of", "awe", "prove", "Hebrew", "war", "<", "URL", ">"]
(c4-6 / prove-01
      :ARG0 (c4-0 / state-01
                  :ARG1 (c4-1 / awe-01)
                  :ARG1-of (c4-5 / general-02)
                  :mod (c4-3 / this))
      :ARG1 (c4-2 / war
                  :mod (c4-4 / language
                             :name (c4-7 / name
                                         :op1 "Hebrew"))))

# ::snt Evolution is change in allele frequency in populations over generations .
# ::tokens ["Evolution", "is", "change", "in", "allele", "frequency", "in", "populations", "over", "generations", "."]
# ::lemmas ["evolution", "be", "change", "in", "allele", "frequency", "in", "population", "over", "generation", "."]
(c5-5 / evolve-01
      :ARG1 (c5-2 / change-01
                  :ARG1 (c5-1 / frequency
                              :mod (c5-0 / allele))
                  :location (c5-4 / population)
                  :duration (c5-3 / generation)))

# ::snt this doesn't address where the information in DNA comes from in the first place
# ::tokens ["this", "does", "n't", "address", "where", "the", "information", "in", "DNA", "comes", "from", "in", "the", "first", "place"]
# ::lemmas ["this", "do", "not", "address", "where", "the", "information", "in", "DNA", "come", "from", "in", "the", "first", "place"]
(c6-0 / address-02
      :ARG0 (c6-3 / this)
      :ARG1 (c6-1 / come-01
                  :ARG1 (c6-5 / information
                              :source (c6-6 / nucleic-acid
                                            :name (c6-4 / name
                                                        :op1 "DNA")))
                  :ARG3 (c6-7 / amr-unknown)
                  :mod (c6-2 / in-the-first-place))
      :polarity -)

# ::snt The " information " in DNA comes from our plant / environment .
# ::tokens ["The", "\"", "information", "\"", "in", "DNA", "comes", "from", "our", "plant", "/", "environment", "."]
# ::lemmas ["the", "\"", "information", "\"", "in", "DNA", "come", "from", "our", "plant", "/", "environment", "."]
(c7-1 / come-01
      :ARG1 (c7-5 / information
                  :source (c7-6 / nucleic-acid
                                :name (c7-3 / name
                                            :op1 "DNA")))
      :ARG3 (c7-0 / slash
                  :op1 (c7-4 / plant)
                  :op2 (c7-7 / environment)
                  :poss (c7-2 / we)))

# ::snt You need to start thinking Where did the first ray of light come from
# ::tokens ["You", "need", "to", "start", "thinking", "Where", "did", "the", "first", "ray", "of", "light", "come", "from"]
# ::lemmas ["you", "need", "to", "start", "think", "where", "do", "the", "first", "ray", "of", "light", "come", "from"]
(c8-7 / need-01
      :ARG0 (c8-8 / you)
      :ARG1 (c8-0 / start-01
                  :ARG0 c8-8
                  :ARG1 (c8-4 / think-01
                              :ARG0 c8-8
                              :ARG1 (c8-2 / come-03
                                          :ARG1 (c8-5 / ray
                                                      :mod (c8-6 / light)
                                                      :ord (c8-3 / ordinal-entity
                                                                 :value 1))
                                          :ARG2 (c8-1 / amr-unknown)))))

# ::snt Such a foolish question assumes arrogantly that YOU know . Pffft
# ::tokens ["Such", "a", "foolish", "question", "assumes", "arrogantly", "that", "YOU", "know", ".", "Pffft"]
# ::lemmas ["such", "a", "foolish", "question", "assume", "arrogantly", "that", "you", "know", ".", "Pffft"]
(c9-7 / multi-sentence
      :snt1 (c9-1 / assume-02
                  :ARG0 (c9-4 / thing
                              :ARG1-of (c9-3 / question-01)
                              :mod (c9-2 / foolish)
                              :mod (c9-0 / such))
                  :ARG1 (c9-8 / know-01
                              :ARG0 (c9-9 / you))
                  :manner (c9-10 / arrogant))
      :snt2 (c9-6 / person
                  :name (c9-5 / name
                              :op1 "Pffft")))

# ::snt . Why is the question foolish Your assumptions are incorrect .
# ::tokens [".", "Why", "is", "the", "question", "foolish", "Your", "assumptions", "are", "incorrect", "."]
# ::lemmas [".", "why", "be", "the", "question", "foolish", "your", "assumption", "be", "incorrect", "."]
(c10-1 / foolish
       :domain (c10-0 / assume-02
                      :ARG0 (c10-5 / you)
                      :ARG1 (c10-4 / thing
                                   :ARG1-of (c10-3 / question-01)))
       :ARG1-of (c10-2 / cause-01
                       :ARG0 (c10-6 / amr-unknown)))

# ::snt The question is pointless except so u can insert god in the gap
# ::tokens ["The", "question", "is", "pointless", "except", "so", "u", "can", "insert", "god", "in", "the", "gap"]
# ::lemmas ["the", "question", "be", "pointless", "except", "so", "u", "can", "insert", "god", "in", "the", "gap"]
(c11-5 / point-03
       :ARG1 (c11-1 / question-01)
       :ARG2-of (c11-8 / except-01
                       :ARG1 (c11-3 / possible-01
                                    :ARG1 (c11-0 / insert-01
                                                 :ARG0 (c11-7 / you)
                                                 :ARG1 (c11-2 / person
                                                              :name (c11-6 / name
                                                                           :op1 "God"))
                                                 :ARG2 (c11-4 / gap))))
       :polarity -)

# ::snt He asked a fair question . Why not answer it ? Or don't you know the answer ?
# ::tokens ["He", "asked", "a", "fair", "question", ".", "Why", "not", "answer", "it", "?", "Or", "do", "n't", "you", "know", "the", "answer", "?"]
# ::lemmas ["he", "ask", "a", "fair", "question", ".", "why", "not", "answer", "it", "?", "or", "do", "not", "you", "know", "the", "answer", "?"]
(c12-10 / multi-sentence
        :snt1 (c12-1 / ask-01
                     :ARG0 (c12-5 / he)
                     :ARG1 (c12-8 / thing
                                  :ARG1-of (c12-4 / question-01)
                                  :ARG1-of (c12-2 / fair-01)))
        :snt2 (c12-13 / answer-01
                      :ARG0 (c12-9 / he)
                      :ARG1 c12-8
                      :ARG1-of (c12-3 / cause-01
                                      :ARG0 (c12-0 / amr-unknown))
                      :polarity -)
        :snt3 (c12-6 / or
                     :op2 (c12-11 / know-01
                                  :ARG0 (c12-12 / you)
                                  :ARG1 c12-8
                                  :ARG2-of (c12-7 / answer-01)
                                  :polarity -)
                     :polarity c12-0))

# ::snt It's a question without an answer at this point . To ask it is a sign of desperation .
# ::tokens ["It", "'s", "a", "question", "without", "an", "answer", "at", "this", "point", ".", "To", "ask", "it", "is", "a", "sign", "of", "desperation", "."]
# ::lemmas ["it", "be", "a", "question", "without", "an", "answer", "at", "this", "point", ".", "to", "ask", "it", "be", "a", "sign", "of", "desperation", "."]
(c13-8 / multi-sentence
       :snt1 (c13-3 / question-01
                    :ARG1 (c13-7 / it)
                    :ARG1-of (c13-2 / answer-01
                                    :time (c13-6 / point
                                                 :mod (c13-5 / this))
                                    :polarity -))
       :snt2 (c13-0 / signal-07
                    :ARG0 (c13-9 / ask-01
                                 :ARG1 (c13-4 / it))
                    :ARG1 (c13-1 / despair-01)))

# ::snt So , you don't know the answer . Yet , you need to leave God out of the equation .
# ::tokens ["So", ",", "you", "do", "n't", "know", "the", "answer", ".", "Yet", ",", "you", "need", "to", "leave", "God", "out", "of", "the", "equation", "."]
# ::lemmas ["so", ",", "you", "do", "not", "know", "the", "answer", ".", "yet", ",", "you", "need", "to", "leave", "God", "out", "of", "the", "equation", "."]
(c14-8 / multi-sentence
       :snt1 (c14-1 / cause-01
                    :ARG1 (c14-9 / know-01
                                 :ARG0 (c14-10 / you)
                                 :ARG1 (c14-3 / thing
                                              :ARG2-of (c14-0 / answer-01))
                                 :polarity -))
       :snt2 (c14-2 / have-concession-91
                    :ARG1 (c14-7 / need-01
                                 :ARG0 (c14-11 / you)
                                 :ARG1 (c14-5 / leave-out-03
                                              :ARG0 c14-11
                                              :ARG1 (c14-6 / person
                                                           :name (c14-4 / name
                                                                        :op1 "God"))
                                              :ARG2 (c14-12 / equation)))))
