# ::snt Had thumping headache all day despite my cold & flu tabs and drinking vats of water
# ::tokens ["Had", "thumping", "headache", "all", "day", "despite", "my", "cold", "&", "flu", "tabs", "and", "drinking", "vats", "of", "water"]
# ::lemmas ["have", "thumping", "headache", "all", "day", "despite", "my", "cold", "&", "flu", "tab", "and", "drinking", "vat", "of", "water"]
(c1-8 / have-concession-91
      :ARG1 (c1-12 / headache
                   :ARG0-of (c1-11 / thump-01)
                   :time (c1-0 / day
                               :mod (c1-3 / all)))
      :ARG2 (c1-16 / and
                   :op1 (c1-1 / have-03
                              :ARG0 (c1-13 / i)
                              :ARG1 (c1-2 / and
                                          :op1 (c1-6 / tab
                                                     :mod (c1-4 / cold-01))
                                          :op2 (c1-15 / tab
                                                      :mod (c1-7 / disease
                                                                 :name (c1-14 / name
                                                                              :op1 "influenza")))))
                   :op2 (c1-5 / drink-01
                              :ARG0 c1-13
                              :ARG1 (c1-9 / water
                                          :quant (c1-10 / vat)))))

# ::snt You need compete rest small person . These bugs going round are savage .
# ::tokens ["You", "need", "compete", "rest", "small", "person", ".", "These", "bugs", "going", "round", "are", "savage", "."]
# ::lemmas ["you", "need", "compete", "rest", "small", "person", ".", "these", "bug", "go", "round", "be", "savage", "."]
(c2-8 / multi-sentence
      :snt1 (c2-9 / need-01
                  :ARG0 (c2-10 / you)
                  :ARG1 (c2-7 / person
                              :mod (c2-0 / small)
                              :ARG0-of (c2-1 / compete-01)))
      :snt2 (c2-6 / savage
                  :domain (c2-5 / bug
                                :ARG1-of (c2-4 / go-02
                                               :ARG4 (c2-3 / round-03))
                                :mod (c2-2 / this))))

# ::snt Good then stay tucked up in bed and watch movies .
# ::tokens ["Good", "then", "stay", "tucked", "up", "in", "bed", "and", "watch", "movies", "."]
# ::lemmas ["good", "then", "stay", "tuck", "up", "in", "bed", "and", "watch", "movie", "."]
(c3-1 / and
      :op1 (c3-4 / good-02)
      :op2 (c3-8 / and
                 :op1 (c3-0 / stay-01
                            :ARG1 (c3-7 / you)
                            :ARG3 (c3-3 / tuck-01
                                        :ARG1 c3-7
                                        :ARG2 (c3-6 / bed)))
                 :op2 (c3-2 / watch-01
                            :ARG0 c3-7
                            :ARG1 (c3-5 / movie))))
