# ::snt Would love to see box next . How many people could have chance to win two green belts ?
# ::tokens ["Would", "love", "to", "see", "box", "next", ".", "How", "many", "people", "could", "have", "chance", "to", "win", "two", "green", "belts", "?"]
# ::lemmas ["would", "love", "to", "see", "box", "next", ".", "how", "many", "people", "could", "have", "chance", "to", "win", "two", "green", "belt", "?"]
(c1-11 / multi-sentence
       :snt1 (c1-6 / love-02
                   :ARG0 (c1-10 / i)
                   :ARG1 (c1-0 / see-01
                               :ARG0 c1-10
                               :ARG1 (c1-8 / box)
                               :time (c1-12 / next)))
       :snt2 (c1-7 / possible-01
                   :ARG1 (c1-3 / chance-02
                               :ARG0 (c1-5 / person
                                           :quant (c1-2 / amr-unknown))
                               :ARG1 (c1-4 / win-01
                                           :ARG0 c1-5
                                           :ARG2 (c1-1 / belt
                                                       :mod (c1-9 / green)
                                                       :quant 2)))))

# ::snt all we know about tony bellew is that he was rounds down to the worst david haye ive ever seen & only could beat him injured .
# ::tokens ["all", "we", "know", "about", "tony", "bellew", "is", "that", "he", "was", "rounds", "down", "to", "the", "worst", "david", "haye", "i", "ve", "ever", "seen", "&", "only", "could", "beat", "him", "injured", "."]
# ::lemmas ["all", "we", "know", "about", "tony", "bellew", "be", "that", "he", "be", "round", "down", "to", "the", "bad", "david", "haye", "i", "ve", "ever", "see", "&", "only", "could", "beat", "he", "injure", "."]
(c2-15 / know-01
       :ARG0 (c2-4 / we)
       :ARG1 (c2-2 / and
                   :op1 (c2-9 / round-down-00
                              :ARG1 (c2-13 / person
                                           :name (c2-11 / name
                                                        :op1 "Tony"
                                                        :op2 "Bellew"))
                              :destination (c2-8 / person
                                                 :name (c2-10 / name
                                                              :op1 "David"
                                                              :op2 "Haye")
                                                 :ARG1-of (c2-0 / see-01
                                                                :ARG0 c2-4
                                                                :time (c2-17 / ever))
                                                 :ARG1-of (c2-6 / have-degree-91
                                                                :ARG2 (c2-12 / bad-07
                                                                             :ARG1 c2-8)
                                                                :ARG3 (c2-14 / most))))
                   :op2 (c2-5 / possible-01
                              :ARG1 (c2-1 / beat-03
                                          :ARG0 c2-13
                                          :ARG1 c2-8
                                          :ARG2 (c2-3 / injure-01
                                                      :ARG1 c2-13)
                                          :mod (c2-7 / only))))
       :topic c2-13
       :mod (c2-16 / all))

# ::snt rounds down we must of been watching a different fight
# ::tokens ["rounds", "down", "we", "must", "of", "been", "watching", "a", "different", "fight"]
# ::lemmas ["round", "down", "we", "must", "of", "be", "watch", "a", "different", "fight"]
(c3-5 / infer-01
      :ARG1 (c3-2 / watch-01
                  :ARG0 (c3-6 / we)
                  :ARG1 (c3-1 / fight-01
                              :ARG1-of (c3-0 / differ-02)))
      :mod (c3-4 / round
                 :op1 (c3-3 / down)))

# ::snt go to spec savers ! Even bias sky sports pundits could even admit it ! I had it rounds to haye .
# ::tokens ["go", "to", "spec", "savers", "!", "Even", "bias", "sky", "sports", "pundits", "could", "even", "admit", "it", "!", "I", "had", "it", "rounds", "to", "haye", "."]
# ::lemmas ["go", "to", "spec", "saver", "!", "even", "bias", "sky", "sport", "pundit", "could", "even", "admit", "it", "!", "i", "have", "it", "round", "to", "haye", "."]
(c4-4 / multi-sentence
      :snt1 (c4-3 / go-01
                  :ARG1 (c4-13 / you)
                  :ARG4 (c4-18 / person
                               :ARG0-of (c4-7 / save-03)
                               :mod (c4-17 / sport))
                  :mode imperative)
      :snt2 (c4-15 / possible-01
                   :ARG1 (c4-14 / admit-01
                                :ARG0 (c4-9 / pundit
                                            :ARG1-of (c4-16 / bias-01)
                                            :mod (c4-11 / sport)
                                            :mod (c4-1 / sky))
                                :ARG1 (c4-0 / it)
                                :mod (c4-6 / even)))
      :snt3 (c4-2 / round-out-01
                  :ARG0 (c4-10 / i)
                  :ARG1 (c4-12 / it)
                  :beneficiary (c4-8 / person
                                     :name (c4-5 / name
                                                 :op1 "Haye"))))

# ::snt don't need spec savers fella Bellew won put Haye down twice .. just feel you have to give Bellew credit jumping up weight also
# ::tokens ["do", "n't", "need", "spec", "savers", "fella", "Bellew", "won", "put", "Haye", "down", "twice", "..", "just", "feel", "you", "have", "to", "give", "Bellew", "credit", "jumping", "up", "weight", "also"]
# ::lemmas ["do", "not", "need", "spec", "saver", "fella", "Bellew", "win", "put", "Haye", "down", "twice", "..", "just", "feel", "you", "have", "to", "give", "Bellew", "credit", "jump", "up", "weight", "also"]
(c5-7 / multi-sentence
      :snt1 (c5-8 / need-01
                  :ARG0 (c5-2 / i)
                  :ARG1 (c5-3 / car-make
                              :name (c5-1 / name
                                          :op1 "spec"
                                          :op2 "Saver")
                              :ARG1-of (c5-4 / win-01
                                             :ARG0 (c5-18 / person
                                                          :name (c5-11 / name
                                                                       :op1 "Bellew"))))
                  :polarity -)
      :snt2 (c5-14 / feel-01
                   :ARG0 (c5-10 / i)
                   :ARG1 (c5-5 / obligate-01
                               :ARG1 (c5-12 / you)
                               :ARG2 (c5-6 / give-01
                                           :ARG0 c5-12
                                           :ARG1 (c5-0 / credit-01
                                                       :ARG0 c5-12
                                                       :ARG1 c5-18
                                                       :ARG2 (c5-17 / jump-03
                                                                    :ARG0 c5-18
                                                                    :ARG1 (c5-9 / weight)
                                                                    :direction (c5-15 / up)
                                                                    :mod (c5-13 / also)))))
                   :mod (c5-16 / just)))

# ::snt I could beat Usain Bolt if he snapped his Achilles ... I could beat Messi if he snapped his Achilles .
# ::tokens ["I", "could", "beat", "Usain", "Bolt", "if", "he", "snapped", "his", "Achilles", "...", "I", "could", "beat", "Messi", "if", "he", "snapped", "his", "Achilles", "."]
# ::lemmas ["i", "could", "beat", "Usain", "Bolt", "if", "he", "snap", "his", "Achilles", "...", "i", "could", "beat", "Messi", "if", "he", "snap", "his", "Achilles", "."]
(c6-12 / multi-sentence
       :snt1 (c6-11 / possible-01
                    :ARG1 (c6-9 / beat-03
                                :ARG0 (c6-3 / i)
                                :ARG1 (c6-7 / person
                                            :name (c6-13 / name
                                                         :op1 "Usain"
                                                         :op2 "Bolt")
                                            :part (c6-2 / Achilles))
                                :condition (c6-0 / snap-01
                                                 :ARG0 c6-7
                                                 :ARG1 c6-2)))
       :snt2 (c6-5 / possible-01
                   :ARG1 (c6-1 / beat-03
                               :ARG0 (c6-6 / i)
                               :ARG1 (c6-4 / person
                                           :name (c6-8 / name
                                                       :op1 "Messi"))
                               :condition (c6-10 / snap-01
                                                 :ARG0 c6-4
                                                 :ARG1 c6-2))))

# ::snt Crack on then mate .. look forward to reading about you in the papers champ
# ::tokens ["Crack", "on", "then", "mate", "..", "look", "forward", "to", "reading", "about", "you", "in", "the", "papers", "champ"]
# ::lemmas ["crack", "on", "then", "mate", "..", "look", "forward", "to", "read", "about", "you", "in", "the", "paper", "champ"]
(c7-0 / say-01
      :ARG0 (c7-7 / i)
      :ARG1 (c7-1 / and
                  :op1 (c7-2 / crack-on-06
                             :ARG0 (c7-8 / mate)
                             :mod (c7-3 / then)
                             :mode imperative)
                  :op2 (c7-5 / look-forward-03
                             :ARG0 c7-7
                             :ARG1 (c7-4 / read-01
                                         :ARG0 c7-7
                                         :ARG1 (c7-9 / you)
                                         :medium (c7-6 / paper))))
      :ARG2 c7-8)

# ::snt your lack of brain cells is very worrying . I'm worried for you . And people like you have the vote .
# ::tokens ["your", "lack", "of", "brain", "cells", "is", "very", "worrying", ".", "I", "'m", "worried", "for", "you", ".", "And", "people", "like", "you", "have", "the", "vote", "."]
# ::lemmas ["your", "lack", "of", "brain", "cell", "be", "very", "worrying", ".", "i", "be", "worried", "for", "you", ".", "and", "people", "like", "you", "have", "the", "vote", "."]
(c8-12 / multi-sentence
       :snt1 (c8-4 / worry-01
                   :ARG0 (c8-8 / lack-01
                               :ARG0 (c8-13 / you)
                               :ARG1 (c8-3 / cell
                                           :part-of (c8-10 / brain)))
                   :degree (c8-6 / very))
       :snt2 (c8-14 / worry-01
                    :ARG0 (c8-11 / i)
                    :ARG1 (c8-1 / you))
       :snt3 (c8-0 / and
                   :op2 (c8-5 / have-03
                              :ARG0 (c8-9 / person
                                          :ARG1-of (c8-7 / resemble-01
                                                         :ARG2 c8-1))
                              :ARG1 (c8-2 / vote-01))))

# ::snt Haha don't worry about me mate .. as I said I look forward to reading about you in the papers champ .. nice talking to you
# ::tokens ["Haha", "do", "n't", "worry", "about", "me", "mate", "..", "as", "I", "said", "I", "look", "forward", "to", "reading", "about", "you", "in", "the", "papers", "champ", "..", "nice", "talking", "to", "you"]
# ::lemmas ["Haha", "do", "not", "worry", "about", "i", "mate", "..", "as", "i", "say", "i", "look", "forward", "to", "read", "about", "you", "in", "the", "paper", "champ", "..", "nice", "talk", "to", "you"]
(c9-11 / multi-sentence
       :snt1 (c9-2 / worry-02
                   :ARG0 (c9-1 / mate)
                   :ARG1 (c9-10 / i)
                   :mod (c9-3 / haha)
                   :polarity -
                   :mode imperative)
       :snt2 (c9-8 / look-forward-03
                   :ARG0 (c9-4 / i)
                   :ARG1 (c9-7 / read-01
                               :ARG0 c9-4
                               :ARG1 (c9-13 / you)
                               :medium (c9-9 / paper))
                   :ARG1-of (c9-0 / say-01
                                  :ARG0 c9-4))
       :snt3 (c9-12 / nice-01
                    :ARG1 (c9-6 / talk-01
                                :ARG2 (c9-14 / you)))
       :snt4 c9-0
       :ARG0 (c9-5 / i)
       :ARG1 c9-8
       :ARG0 c9-5
       :ARG1 c9-6
       :ARG0 c9-5
       :ARG2 c9-14)

# ::snt i would be champion in every sport if they were injured . durrrrrrrrrrrrrrrrrr .
# ::tokens ["i", "would", "be", "champion", "in", "every", "sport", "if", "they", "were", "injured", ".", "durrrrrrrrrrrrrrrrrr", "."]
# ::lemmas ["i", "would", "be", "champion", "in", "every", "sport", "if", "they", "be", "injure", ".", "durrrrrrrrrrrrrrrrrr", "."]
(c10-1 / champion
       :domain (c10-4 / i)
       :topic (c10-0 / sport
                     :mod (c10-5 / every))
       :condition (c10-2 / injure-01
                         :ARG1 (c10-3 / they)))

# ::snt you couldnt win an argument with a pebble
# ::tokens ["you", "could", "nt", "win", "an", "argument", "with", "a", "pebble"]
# ::lemmas ["you", "could", "not", "win", "an", "argument", "with", "a", "pebble"]
(c11-3 / possible-01
       :ARG1 (c11-1 / win-01
                    :ARG0 (c11-4 / you)
                    :ARG2 (c11-0 / argue-01
                                 :ARG0 c11-4)
                    :instrument (c11-2 / pebble))
       :polarity -)

# ::snt correct but your making this argument easy for me ..
# ::tokens ["correct", "but", "your", "making", "this", "argument", "easy", "for", "me", ".."]
# ::lemmas ["correct", "but", "your", "make", "this", "argument", "easy", "for", "i", ".."]
(c12-2 / contrast-01
       :ARG1 (c12-0 / correct-02)
       :ARG2 (c12-5 / make-02
                    :ARG0 (c12-6 / you)
                    :ARG1 (c12-7 / easy-05
                                 :ARG1 (c12-1 / argue-01
                                              :ARG0 (c12-4 / i)
                                              :ARG1 (c12-3 / this)))))

# ::snt PAH ! laughable . the uneducated guy who doesnt even know what an Achilles is ... & no its not a greek god .
# ::tokens ["PAH", "!", "laughable", ".", "the", "uneducated", "guy", "who", "does", "nt", "even", "know", "what", "an", "Achilles", "is", "...", "&", "no", "its", "not", "a", "greek", "god", "."]
# ::lemmas ["PAH", "!", "laughable", ".", "the", "uneducated", "guy", "who", "do", "not", "even", "know", "what", "an", "Achilles", "be", "...", "&", "no", "its", "not", "a", "greek", "god", "."]
(c13-11 / multi-sentence
        :snt1 (c13-6 / laughable-03
                     :mod (c13-10 / pah
                                  :mode expressive)
                     :mode expressive)
        :snt2 (c13-0 / and
                     :op1 (c13-8 / guy
                                 :ARG1-of (c13-14 / educate-01
                                                  :polarity -)
                                 :ARG0-of (c13-12 / know-01
                                                  :ARG1 (c13-4 / thing
                                                               :domain (c13-3 / person
                                                                              :name (c13-7 / name
                                                                                           :op1 "Achilles")))
                                                  :mod (c13-2 / even)
                                                  :polarity -))
                     :op2 (c13-13 / god
                                  :mod (c13-5 / religious-group
                                              :name (c13-9 / name
                                                           :op1 "Greek"))
                                  :domain (c13-1 / it)
                                  :polarity -)))

# ::snt your a simpleton your creating an argument with yourself with things you make up in your head .. do you need help ? Are you ok ?
# ::tokens ["your", "a", "simpleton", "your", "creating", "an", "argument", "with", "yourself", "with", "things", "you", "make", "up", "in", "your", "head", "..", "do", "you", "need", "help", "?", "Are", "you", "ok", "?"]
# ::lemmas ["your", "a", "simpleton", "your", "create", "an", "argument", "with", "yourself", "with", "thing", "you", "make", "up", "in", "your", "head", "..", "do", "you", "need", "help", "?", "be", "you", "ok", "?"]
(c14-12 / multi-sentence
        :snt1 (c14-0 / simpleton
                     :domain (c14-14 / you))
        :snt2 (c14-5 / create-01
                     :ARG0 (c14-15 / you
                                   :part (c14-7 / head))
                     :ARG1 (c14-3 / argue-02
                                  :ARG0 c14-15
                                  :ARG1 c14-15
                                  :ARG2 (c14-10 / thing
                                                :ARG1-of (c14-6 / make-up-10
                                                                :ARG0 c14-15
                                                                :location c14-7))))
        :snt3 (c14-13 / need-01
                      :ARG0 (c14-1 / you)
                      :ARG1 (c14-11 / help-01
                                    :ARG1 c14-1)
                      :polarity (c14-8 / amr-unknown))
        :snt4 (c14-9 / okay-04
                     :ARG1 (c14-4 / you)
                     :polarity (c14-2 / amr-unknown)))
