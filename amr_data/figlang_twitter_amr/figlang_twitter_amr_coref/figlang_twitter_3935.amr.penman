# ::snt We cannot change the cards we are dealt , just how we play the hand . - Randy Pausch <URL>
# ::tokens ["We", "can", "not", "change", "the", "cards", "we", "are", "dealt", ",", "just", "how", "we", "play", "the", "hand", ".", "-", "Randy", "Pausch", "<", "URL", ">"]
# ::lemmas ["we", "can", "not", "change", "the", "card", "we", "be", "deal", ",", "just", "how", "we", "play", "the", "hand", ".", "-", "Randy", "Pausch", "<", "URL", ">"]
(c1-0 / say-01
      :ARG0 (c1-11 / person
                   :name (c1-12 / name
                                :op1 "Randy"
                                :op2 "Pausch"))
      :ARG1 (c1-3 / and
                  :op1 (c1-8 / possible-01
                             :ARG1 (c1-4 / change-01
                                         :ARG0 (c1-5 / we)
                                         :ARG1 (c1-1 / card
                                                     :ARG1-of (c1-2 / deal-01
                                                                    :ARG2 c1-5)))
                             :polarity -)
                  :op2 (c1-9 / thing
                             :manner-of (c1-6 / play-01
                                              :ARG0 c1-5
                                              :ARG1 (c1-7 / hand))
                             :mod (c1-10 / just))))

# ::snt The key to success is playing the hand you were dealt with like the hand you always wanted . <URL>
# ::tokens ["The", "key", "to", "success", "is", "playing", "the", "hand", "you", "were", "dealt", "with", "like", "the", "hand", "you", "always", "wanted", ".", "<", "URL", ">"]
# ::lemmas ["the", "key", "to", "success", "be", "play", "the", "hand", "you", "be", "deal", "with", "like", "the", "hand", "you", "always", "want", ".", "<", "URL", ">"]
(c2-8 / key-02
      :ARG1 (c2-7 / play-01
                  :ARG0 (c2-9 / you)
                  :ARG1 (c2-4 / hand
                              :ARG2-of (c2-0 / deal-01
                                             :ARG1 c2-9))
                  :ARG1-of (c2-5 / resemble-01
                                 :ARG2 (c2-6 / hand
                                             :ARG1-of (c2-3 / want-01
                                                            :ARG0 c2-9
                                                            :time (c2-2 / always)))))
      :ARG2 (c2-1 / succeed-01))

# ::snt Love
# ::tokens ["Love"]
# ::lemmas ["Love"]
(c3-0 / love-01)

# ::snt Live your life as if everything is rigged in your favor . - Rumi - <URL>
# ::tokens ["Live", "your", "life", "as", "if", "everything", "is", "rigged", "in", "your", "favor", ".", "-", "Rumi", "-", "<", "URL", ">"]
# ::lemmas ["live", "your", "life", "as", "if", "everything", "be", "rig", "in", "your", "favor", ".", "-", "Rumi", "-", "<", "URL", ">"]
(c4-3 / live-01
      :ARG0 (c4-7 / you)
      :ARG1 (c4-4 / life
                  :poss c4-7)
      :manner (c4-2 / rig-01
                    :ARG1 (c4-8 / everything)
                    :ARG2-of (c4-0 / favor-01
                                   :ARG1 c4-7))
      :ARG1-of (c4-1 / quote-01
                     :ARG2 (c4-5 / person
                                 :name (c4-6 / name
                                             :op1 "Rumi")))
      :mode imperative)
