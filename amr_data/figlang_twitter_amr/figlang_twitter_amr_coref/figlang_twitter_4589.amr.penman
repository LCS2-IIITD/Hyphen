# ::snt Nobody said it was easy . " Song of The Day : The Scientist covered by Willie Nelson . <URL> <URL>
# ::tokens ["Nobody", "said", "it", "was", "easy", ".", "\"", "Song", "of", "The", "Day", ":", "The", "Scientist", "covered", "by", "Willie", "Nelson", ".", "<", "URL", ">", "<", "URL", ">"]
# ::lemmas ["nobody", "say", "it", "be", "easy", ".", "\"", "song", "of", "the", "day", ":", "the", "scientist", "cover", "by", "Willie", "Nelson", ".", "<", "URL", ">", "<", "URL", ">"]
(c1-7 / multi-sentence
      :snt1 (c1-0 / say-01
                  :ARG0 (c1-8 / nobody)
                  :ARG1 (c1-9 / easy-05
                              :ARG1 (c1-6 / it)))
      :snt2 (c1-1 / cover-03
                  :ARG0 (c1-4 / person
                              :name (c1-3 / name
                                          :op1 "Willie"
                                          :op2 "Nelson"))
                  :ARG1 (c1-5 / broadcast-program
                              :name (c1-2 / name
                                          :op1 "Song"
                                          :op2 "of"
                                          :op3 "The"
                                          :op4 "Day:"))))

# ::snt Ummmmmm , how have I not heard that cover before ? ! Amazing .
# ::tokens ["Ummmmmm", ",", "how", "have", "I", "not", "heard", "that", "cover", "before", "?", "!", "Amazing", "."]
# ::lemmas ["ummmmmm", ",", "how", "have", "i", "not", "hear", "that", "cover", "before", "?", "!", "amazing", "."]
(c2-7 / multi-sentence
      :snt1 (c2-2 / hear-01
                  :ARG0 (c2-6 / i)
                  :ARG1 (c2-1 / cover-03
                              :mod (c2-4 / that))
                  :time (c2-5 / before)
                  :manner (c2-0 / amr-unknown)
                  :mod (c2-3 / ummmm
                             :mode expressive)
                  :polarity -)
      :snt2 (c2-8 / amaze-01))

# ::snt Millineal me wants to say it s not on
# ::tokens ["Millineal", "me", "wants", "to", "say", "it", "s", "not", "on"]
# ::lemmas ["Millineal", "i", "want", "to", "say", "it", "s", "not", "on"]
(c3-1 / want-01
      :ARG0 (c3-5 / i
                  :mod (c3-4 / teenage))
      :ARG1 (c3-0 / say-01
                  :ARG0 c3-5
                  :ARG1 (c3-3 / on-01
                              :ARG1 (c3-2 / it)
                              :polarity -)))
