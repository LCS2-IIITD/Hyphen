# ::snt FOLLOW for : Any query Any doubt Any problem Any help We're here to make it easy for you ! <URL>
# ::tokens ["FOLLOW", "for", ":", "Any", "query", "Any", "doubt", "Any", "problem", "Any", "help", "We", "'re", "here", "to", "make", "it", "easy", "for", "you", "!", "<", "URL", ">"]
# ::lemmas ["follow", "for", ":", "any", "query", "any", "doubt", "any", "problem", "any", "help", "we", "be", "here", "to", "make", "it", "easy", "for", "you", "!", "<", "URL", ">"]
(c1-3 / follow-02
      :ARG0 (c1-14 / you)
      :ARG1 (c1-2 / and
                  :op1 (c1-5 / query-01
                             :mod (c1-15 / any))
                  :op2 (c1-0 / doubt-01
                             :mod (c1-1 / any))
                  :op3 (c1-12 / problem
                              :mod (c1-9 / any))
                  :op4 (c1-8 / help-01
                             :mod (c1-4 / any))
                  :op5 (c1-10 / be-located-at-91
                              :ARG1 (c1-6 / we)
                              :ARG2 (c1-11 / here)
                              :purpose (c1-13 / make-02
                                              :ARG0 c1-6
                                              :ARG1 (c1-16 / easy-05
                                                           :ARG1 (c1-7 / it)
                                                           :beneficiary c1-14))
                              :mode expressive))
      :mode imperative)

# ::snt I deposited money on friday but its not reflecting .
# ::tokens ["I", "deposited", "money", "on", "friday", "but", "its", "not", "reflecting", "."]
# ::lemmas ["i", "deposit", "money", "on", "friday", "but", "its", "not", "reflect", "."]
(c2-3 / contrast-01
      :ARG1 (c2-0 / deposit-01
                  :ARG0 (c2-2 / i)
                  :ARG1 (c2-6 / money)
                  :time (c2-5 / date-entity
                              :weekday (c2-1 / friday)))
      :ARG2 (c2-4 / reflect-01
                  :ARG1 c2-6
                  :polarity -))

# ::snt We are sorry for the delay . Please note that the problem has not yet been resolved . We are doing our best to solve this . ^ SA
# ::tokens ["We", "are", "sorry", "for", "the", "delay", ".", "Please", "note", "that", "the", "problem", "has", "not", "yet", "been", "resolved", ".", "We", "are", "doing", "our", "best", "to", "solve", "this", ".", "^", "SA"]
# ::lemmas ["we", "be", "sorry", "for", "the", "delay", ".", "please", "note", "that", "the", "problem", "have", "not", "yet", "be", "resolve", ".", "we", "be", "do", "our", "good", "to", "solve", "this", ".", "^", "SA"]
(c3-7 / multi-sentence
      :snt1 (c3-10 / sorry-01
                   :ARG1 (c3-3 / we)
                   :ARG2 (c3-0 / delay-01))
      :snt2 (c3-8 / note-01
                  :ARG0 (c3-12 / you)
                  :ARG1 (c3-5 / resolve-01
                              :ARG1 (c3-18 / problem)
                              :time (c3-13 / yet)
                              :polarity -)
                  :mode imperative
                  :polite +)
      :snt3 (c3-11 / do-02
                   :ARG0 (c3-9 / we)
                   :ARG1 (c3-6 / good-03
                               :ARG1 c3-9
                               :ARG2-of (c3-15 / have-degree-91
                                               :ARG1 c3-9
                                               :ARG3 (c3-14 / most)))
                   :purpose (c3-17 / solve-01
                                   :ARG0 c3-9
                                   :ARG1 (c3-4 / this)))
      :snt4 (c3-1 / quote-01
                  :ARG2 (c3-16 / person
                               :name (c3-2 / name
                                           :op1 "SA"))))

# ::snt sue this guys they are not serious , two days maintenance
# ::tokens ["sue", "this", "guys", "they", "are", "not", "serious", ",", "two", "days", "maintenance"]
# ::lemmas ["sue", "this", "guy", "they", "be", "not", "serious", ",", "two", "days", "maintenance"]
(c4-2 / and
      :op1 (c4-0 / sue-02
                 :ARG1 (c4-5 / guy
                             :mod (c4-4 / this))
                 :ARG2 (c4-6 / serious-01
                             :ARG1 c4-5
                             :polarity -))
      :op2 (c4-7 / maintain-01
                 :duration (c4-3 / temporal-quantity
                                 :unit (c4-1 / day)
                                 :quant 2)))
