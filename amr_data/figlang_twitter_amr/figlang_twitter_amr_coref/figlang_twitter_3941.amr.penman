# ::snt " This is going to be corrosive in the executive branch " former Phil Mudd re : non trust of intel community
# ::tokens ["\"", "This", "is", "going", "to", "be", "corrosive", "in", "the", "executive", "branch", "\"", "former", "Phil", "Mudd", "re", ":", "non", "trust", "of", "intel", "community"]
# ::lemmas ["\"", "this", "be", "go", "to", "be", "corrosive", "in", "the", "executive", "branch", "\"", "former", "Phil", "Mudd", "re", ":", "non", "trust", "of", "intel", "community"]
(c1-0 / say-01
      :ARG0 (c1-8 / person
                  :name (c1-9 / name
                              :op1 "Phil"
                              :op2 "Mudd")
                  :time (c1-2 / former))
      :ARG1 (c1-3 / corrosive
                  :domain (c1-6 / this)
                  :location (c1-7 / branch
                                  :ARG0-of (c1-10 / execute-02)))
      :ARG3 (c1-5 / trust-02
                  :ARG1 (c1-1 / community
                              :mod (c1-4 / intelligence))
                  :polarity -))

# ::snt everyone needs to watch this exchange to see how react when presented w / info th <URL>
# ::tokens ["everyone", "needs", "to", "watch", "this", "exchange", "to", "see", "how", "react", "when", "presented", "w", "/", "info", "th", "<", "URL", ">"]
# ::lemmas ["everyone", "need", "to", "watch", "this", "exchange", "to", "see", "how", "react", "when", "present", "w", "/", "info", "th", "<", "URL", ">"]
(c2-8 / need-01
      :ARG0 (c2-9 / everyone)
      :ARG1 (c2-2 / watch-01
                  :ARG0 c2-9
                  :ARG1 (c2-4 / exchange-01
                              :mod (c2-5 / this))
                  :purpose (c2-0 / see-01
                                 :ARG0 c2-9
                                 :ARG1 (c2-3 / thing
                                             :manner-of (c2-6 / react-01
                                                              :time (c2-7 / present-01
                                                                          :ARG1 (c2-1 / information)))))))

# ::snt Spicer is full of it , he doesn't care less about Russians hacking and interfering with U . S . election .
# ::tokens ["Spicer", "is", "full", "of", "it", ",", "he", "does", "n't", "care", "less", "about", "Russians", "hacking", "and", "interfering", "with", "U", ".", "S", ".", "election", "."]
# ::lemmas ["Spicer", "be", "full", "of", "it", ",", "he", "do", "not", "care", "less", "about", "Russians", "hack", "and", "interfere", "with", "U", ".", "s", ".", "election", "."]
(c3-1 / and
      :op1 (c3-2 / fill-01
                 :ARG1 (c3-13 / person
                              :name (c3-14 / name
                                           :op1 "Spicer"))
                 :ARG2 (c3-3 / it))
      :op2 (c3-5 / have-degree-91
                 :ARG1 c3-13
                 :ARG2 (c3-4 / care-01
                             :ARG0 c3-13
                             :ARG1 (c3-15 / and
                                          :op1 (c3-12 / hack-04
                                                      :ARG0 (c3-9 / person
                                                                  :mod (c3-0 / country
                                                                             :name (c3-10 / name
                                                                                          :op1 "Russia")))
                                                      :ARG1 (c3-16 / elect-01
                                                                   :ARG1 (c3-7 / country
                                                                               :name (c3-8 / name
                                                                                           :op1 "U.S."))))
                                          :op2 (c3-6 / interfere-01
                                                     :ARG0 c3-9
                                                     :ARG1 c3-16))
                             :polarity -)
                 :ARG3 (c3-11 / less)))

# ::snt So why is spicer full of it . Smerconish wouldnt or couldn't respond with facts so he ended the interview
# ::tokens ["So", "why", "is", "spicer", "full", "of", "it", ".", "Smerconish", "would", "nt", "or", "could", "n't", "respond", "with", "facts", "so", "he", "ended", "the", "interview"]
# ::lemmas ["so", "why", "be", "spicer", "full", "of", "it", ".", "Smerconish", "would", "not", "or", "could", "not", "respond", "with", "fact", "so", "he", "end", "the", "interview"]
(c4-14 / multi-sentence
       :snt1 (c4-3 / cause-01
                   :ARG0 (c4-1 / amr-unknown)
                   :ARG1 (c4-2 / fill-01
                               :ARG1 (c4-13 / person
                                            :name (c4-15 / name
                                                         :op1 "Spicer"))
                               :ARG2 (c4-4 / it)))
       :snt2 (c4-0 / cause-01
                   :ARG0 (c4-9 / or
                               :op1 (c4-10 / possible-01
                                           :ARG1 (c4-11 / respond-01
                                                        :ARG0 (c4-6 / person
                                                                    :name (c4-12 / name
                                                                                 :op1 "Smerconish"))
                                                        :ARG2 (c4-8 / fact))
                                           :polarity -)
                               :op2 (c4-5 / possible-01
                                          :ARG1 c4-11
                                          :polarity -))
                   :ARG1 (c4-16 / end-01
                                :ARG0 c4-6
                                :ARG1 (c4-7 / interview-01
                                            :ARG1 c4-6))))
