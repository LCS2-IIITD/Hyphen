# ::snt I hope puts brahmins under backward category ! Time to give back to the community !
# ::tokens ["I", "hope", "puts", "brahmins", "under", "backward", "category", "!", "Time", "to", "give", "back", "to", "the", "community", "!"]
# ::lemmas ["i", "hope", "put", "brahmin", "under", "backward", "category", "!", "time", "to", "give", "back", "to", "the", "community", "!"]
(c1-9 / multi-sentence
      :snt1 (c1-3 / hope-01
                  :ARG0 (c1-8 / i)
                  :ARG1 (c1-5 / put-01
                              :ARG0 c1-8
                              :ARG1 (c1-7 / brahmin)
                              :ARG2 (c1-2 / category
                                          :mod (c1-1 / backward))))
      :snt2 (c1-4 / time
                  :purpose (c1-6 / give-back-03
                                 :ARG0 (c1-10 / you)
                                 :ARG2 (c1-0 / community))))

# ::snt He wants to take it forward - towards growth , why do u want to go backward
# ::tokens ["He", "wants", "to", "take", "it", "forward", "-", "towards", "growth", ",", "why", "do", "u", "want", "to", "go", "backward"]
# ::lemmas ["he", "want", "to", "take", "it", "forward", "-", "towards", "growth", ",", "why", "do", "u", "want", "to", "go", "backward"]
(c2-0 / and
      :op1 (c2-4 / want-01
                 :ARG0 (c2-5 / he)
                 :ARG1 (c2-7 / take-01
                             :ARG0 c2-5
                             :ARG1 (c2-9 / it)
                             :ARG3 (c2-2 / forward)
                             :direction (c2-8 / grow-01)))
      :op2 (c2-12 / want-01
                  :ARG0 (c2-11 / you)
                  :ARG1 (c2-1 / go-02
                              :ARG0 c2-11
                              :ARG4 (c2-10 / backward))
                  :ARG1-of (c2-3 / cause-01
                                 :ARG0 (c2-6 / amr-unknown))))

# ::snt madam , jains ( cash cows ) were declared backward recently , why not brahmins ? ! It's time to get backward .
# ::tokens ["madam", ",", "jains", "(", "cash", "cows", ")", "were", "declared", "backward", "recently", ",", "why", "not", "brahmins", "?", "!", "It", "'s", "time", "to", "get", "backward", "."]
# ::lemmas ["madam", ",", "jains", "(", "cash", "cow", ")", "be", "declare", "backward", "recently", ",", "why", "not", "brahmin", "?", "!", "it", "be", "time", "to", "get", "backward", "."]
(c3-14 / multi-sentence
       :snt1 (c3-0 / declare-01
                   :ARG2 (c3-12 / backward
                                :domain (c3-13 / jain
                                               :ARG1-of (c3-5 / mean-01
                                                              :ARG2 (c3-6 / cow
                                                                          :mod (c3-1 / cash)))))
                   :time (c3-10 / recent)
                   :ARG1-of (c3-8 / cause-01
                                  :ARG0 (c3-3 / amr-unknown)))
       :snt2 (c3-4 / cause-01
                   :ARG0 c3-3)
       :ARG1 (c3-11 / get-03
                    :ARG2 (c3-2 / backward)
                    :polarity -)
       :snt3 (c3-9 / time
                   :time-of c3-11
                   :ARG2 (c3-7 / backward)))

# ::snt got minority status for them just before the elections .
# ::tokens ["got", "minority", "status", "for", "them", "just", "before", "the", "elections", "."]
# ::lemmas ["get", "minority", "status", "for", "they", "just", "before", "the", "election", "."]
(c4-2 / get-01
      :ARG0 (c4-1 / they)
      :ARG1 (c4-0 / status
                  :mod (c4-4 / minority))
      :time (c4-5 / before
                  :op1 (c4-6 / elect-01)
                  :mod (c4-3 / just)))

# ::snt yeah , but why should upper caste kids suffer for the mistakes of their th century ancestors ?
# ::tokens ["yeah", ",", "but", "why", "should", "upper", "caste", "kids", "suffer", "for", "the", "mistakes", "of", "their", "th", "century", "ancestors", "?"]
# ::lemmas ["yeah", ",", "but", "why", "should", "upper", "caste", "kid", "suffer", "for", "the", "mistake", "of", "their", "th", "century", "ancestor", "?"]
(c5-4 / contrast-01
      :ARG2 (c5-8 / recommend-01
                  :ARG1 (c5-0 / suffer-01
                              :ARG0 (c5-11 / kid
                                           :mod (c5-1 / caste
                                                      :mod (c5-6 / upper)))
                              :ARG1 (c5-10 / mistake-02
                                           :ARG0 (c5-9 / person
                                                       :ARG0-of (c5-5 / have-rel-role-91
                                                                      :ARG1 c5-11
                                                                      :ARG2 (c5-3 / ancestor))
                                                       :time (c5-2 / date-entity
                                                                   :century 20))))
                  :ARG1-of (c5-7 / cause-01
                                 :ARG0 (c5-13 / amr-unknown)))
      :mod (c5-12 / yeah
                  :mode expressive))

# ::snt yrs resn was d orig plan . over . No politician will hv d guts withdraw . Instead will appease more .
# ::tokens ["yrs", "resn", "was", "d", "orig", "plan", ".", "over", ".", "No", "politician", "will", "hv", "d", "guts", "withdraw", ".", "Instead", "will", "appease", "more", "."]
# ::lemmas ["yrs", "resn", "be", "d", "orig", "plan", ".", "over", ".", "no", "politician", "will", "hv", "d", "gut", "withdraw", ".", "instead", "will", "appease", "more", "."]
(c6-10 / multi-sentence
       :snt1 (c6-9 / plan-01
                   :ARG1 (c6-1 / multiple
                               :op1 (c6-7 / temporal-quantity
                                          :unit (c6-11 / year)
                                          :quant 1))
                   :mod (c6-0 / again))
       :snt2 (c6-2 / withdraw-01
                   :ARG0 (c6-6 / politician)
                   :mod (c6-8 / gut)
                   :polarity -)
       :snt3 (c6-12 / appease-01
                    :ARG0 (c6-3 / thing)
                    :ARG1-of (c6-4 / instead-of-91)
                    :mod (c6-5 / more)))
