# ::snt Can any enterprising reporter ask Jordan's king if his country with its estimated % Palestinian population is not <URL>
# ::tokens ["Can", "any", "enterprising", "reporter", "ask", "Jordan", "'s", "king", "if", "his", "country", "with", "its", "estimated", "%", "Palestinian", "population", "is", "not", "<", "URL", ">"]
# ::lemmas ["can", "any", "enterprising", "reporter", "ask", "Jordan", "'s", "king", "if", "his", "country", "with", "its", "estimate", "%", "Palestinian", "population", "be", "not", "<", "URL", ">"]
(c1-13 / possible-01
       :ARG1 (c1-1 / ask-01
                   :ARG0 (c1-8 / person
                               :ARG0-of (c1-10 / report-01)
                               :mod (c1-15 / enterprising))
                   :ARG1 (c1-9 / truth-value
                               :polarity-of (c1-3 / country
                                                  :name (c1-14 / name
                                                               :op1 "Jordan")
                                                  :ARG0-of (c1-6 / have-03
                                                                 :ARG1 (c1-5 / population
                                                                             :mod (c1-0 / country
                                                                                        :name (c1-11 / name
                                                                                                     :op1 "Palestine"))
                                                                             :ARG2-of (c1-7 / estimate-01)))
                                                  :polarity -))
                   :ARG2 (c1-4 / person
                               :ARG0-of (c1-12 / have-org-role-91
                                               :ARG1 c1-3
                                               :ARG2 (c1-2 / king)))))

# ::snt would that be relevant ? Surely it is far fetched to expect the Palestinians to head East , whether voluntarily or by force .
# ::tokens ["would", "that", "be", "relevant", "?", "Surely", "it", "is", "far", "fetched", "to", "expect", "the", "Palestinians", "to", "head", "East", ",", "whether", "voluntarily", "or", "by", "force", "."]
# ::lemmas ["would", "that", "be", "relevant", "?", "surely", "it", "be", "far", "fetched", "to", "expect", "the", "Palestinians", "to", "head", "East", ",", "whether", "voluntarily", "or", "by", "force", "."]
(c2-13 / multi-sentence
       :snt1 (c2-9 / relevant-01
                   :ARG1 (c2-8 / that)
                   :polarity (c2-1 / amr-unknown))
       :snt2 (c2-2 / fetch-01
                   :ARG1 (c2-15 / expect-01
                                :ARG1 (c2-5 / head-02
                                            :ARG0 (c2-12 / person
                                                         :mod (c2-3 / country
                                                                    :name (c2-14 / name
                                                                                 :op1 "Palestine")))
                                            :ARG1 (c2-4 / world-region
                                                        :name (c2-10 / name
                                                                     :op1 "East"))
                                            :ARG1-of (c2-7 / voluntary-02)
                                            :manner (c2-6 / force-04)))
                   :ARG1-of (c2-0 / sure-02)
                   :degree (c2-11 / far)))

# ::snt . That's not what I meant - - but I think it's just ridiculous to pretend Jordan is not a Palestinian state .
# ::tokens [".", "That", "'s", "not", "what", "I", "meant", "-", "-", "but", "I", "think", "it", "'s", "just", "ridiculous", "to", "pretend", "Jordan", "is", "not", "a", "Palestinian", "state", "."]
# ::lemmas [".", "that", "be", "not", "what", "i", "mean", "-", "-", "but", "i", "think", "it", "be", "just", "ridiculous", "to", "pretend", "Jordan", "be", "not", "a", "Palestinian", "state", "."]
(c3-2 / contrast-01
      :ARG1 (c3-11 / mean-02
                   :ARG0 (c3-10 / i)
                   :ARG1 (c3-5 / that)
                   :polarity -)
      :ARG2 (c3-3 / think-01
                  :ARG0 c3-10
                  :ARG1 (c3-6 / ridiculous-02
                              :ARG1 (c3-7 / pretend-01
                                          :ARG1 (c3-0 / state
                                                      :mod (c3-1 / country
                                                                 :name (c3-12 / name
                                                                              :op1 "Palestine"))
                                                      :domain (c3-4 / country
                                                                    :name (c3-8 / name
                                                                                :op1 "Jordan"))
                                                      :polarity -))
                              :mod (c3-9 / just))))

# ::snt . So creating another Palestinian state on the WestBank & Gaza means there will be Palestinian states ( OK with me if = peace )
# ::tokens [".", "So", "creating", "another", "Palestinian", "state", "on", "the", "WestBank", "&", "Gaza", "means", "there", "will", "be", "Palestinian", "states", "(", "OK", "with", "me", "if", "=", "peace", ")"]
# ::lemmas [".", "so", "create", "another", "Palestinian", "state", "on", "the", "WestBank", "&", "Gaza", "mean", "there", "will", "be", "Palestinian", "state", "(", "ok", "with", "i", "if", "=", "peace", ")"]
(c4-14 / multi-sentence
       :snt1 (c4-4 / mean-01
                   :ARG1 (c4-3 / create-01
                               :ARG1 (c4-0 / state
                                           :mod (c4-1 / country
                                                      :name (c4-15 / name
                                                                   :op1 "Palestine"))
                                           :location (c4-2 / and
                                                           :op1 (c4-6 / country-region
                                                                      :name (c4-9 / name
                                                                                  :op1 "WestBank"))
                                                           :op2 (c4-11 / country-region
                                                                       :name (c4-7 / name
                                                                                   :op1 "Gaza")))
                                           :mod (c4-16 / another)))
                   :ARG2 (c4-5 / be-located-at-91
                               :ARG1 (c4-12 / state
                                            :mod c4-1)))
       :snt2 (c4-8 / okay-01
                   :ARG1 (c4-13 / i)
                   :condition (c4-17 / equal-01
                                     :ARG2 (c4-10 / peace))))
