# ::snt Will or or WHOEVER ... please make up your minds if you still implementing . You guys will not compensate citizens for damage to perishable food , so let us know , so we can plan .
# ::tokens ["Will", "or", "or", "WHOEVER", "...", "please", "make", "up", "your", "minds", "if", "you", "still", "implementing", ".", "You", "guys", "will", "not", "compensate", "citizens", "for", "damage", "to", "perishable", "food", ",", "so", "let", "us", "know", ",", "so", "we", "can", "plan", "."]
# ::lemmas ["will", "or", "or", "WHOEVER", "...", "please", "make", "up", "your", "mind", "if", "you", "still", "implement", ".", "you", "guy", "will", "not", "compensate", "citizen", "for", "damage", "to", "perishable", "food", ",", "so", "let", "we", "know", ",", "so", "we", "can", "plan", "."]
(c1-8 / multi-sentence
      :snt1 (c1-16 / make-up-mind-12
                   :ARG0 (c1-12 / you)
                   :ARG2 (c1-6 / or
                               :op1 (c1-14 / amr-unknown)
                               :op2 (c1-9 / amr-unknown))
                   :condition (c1-2 / implement-01
                                    :ARG0 c1-12
                                    :mod (c1-10 / still))
                   :mode imperative
                   :polite +)
      :snt2 (c1-3 / compensate-01
                  :ARG0 (c1-13 / you
                               :mod (c1-7 / guy))
                  :ARG1 (c1-0 / damage-01
                              :ARG1 (c1-15 / food
                                           :ARG0-of (c1-19 / perish-01)))
                  :ARG2 (c1-1 / citizen)
                  :ARG0-of (c1-5 / cause-01
                                 :ARG1 (c1-18 / let-know-07
                                              :ARG0 c1-13
                                              :ARG1 (c1-4 / we)
                                              :purpose (c1-17 / possible-01
                                                              :ARG1 (c1-11 / plan-01
                                                                           :ARG0 c1-4))
                                              :mode imperative))
                  :polarity -))

# ::snt And my area in Pretoria , , now hours no electricity
# ::tokens ["And", "my", "area", "in", "Pretoria", ",", ",", "now", "hours", "no", "electricity"]
# ::lemmas ["and", "my", "area", "in", "Pretoria", ",", ",", "now", "hours", "no", "electricity"]
(c2-0 / and
      :op2 (c2-7 / electricity
                 :time (c2-2 / hour
                             :time (c2-5 / now))
                 :location (c2-6 / area
                                 :poss (c2-4 / i)
                                 :location (c2-1 / city
                                                 :name (c2-3 / name
                                                             :op1 "Pretoria")))
                 :polarity -))
