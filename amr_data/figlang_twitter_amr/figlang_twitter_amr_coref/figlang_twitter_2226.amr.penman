# ::snt thanks for ignoring my earlier tweet . Your customer service is pathetic and to think I'm a very regular flyer
# ::tokens ["thanks", "for", "ignoring", "my", "earlier", "tweet", ".", "Your", "customer", "service", "is", "pathetic", "and", "to", "think", "I", "'m", "a", "very", "regular", "flyer"]
# ::lemmas ["thank", "for", "ignore", "my", "early", "tweet", ".", "your", "customer", "service", "be", "pathetic", "and", "to", "think", "i", "be", "a", "very", "regular", "flyer"]
(c1-6 / multi-sentence
      :snt1 (c1-4 / thank-01
                  :ARG0 (c1-0 / i)
                  :ARG1 (c1-12 / you)
                  :ARG2 (c1-10 / ignore-01
                               :ARG0 c1-12
                               :ARG1 (c1-2 / thing
                                           :ARG1-of (c1-8 / tweet-01
                                                          :ARG0 c1-0
                                                          :time (c1-17 / before
                                                                       :op1 (c1-7 / now))))))
      :snt2 (c1-14 / and
                   :op1 (c1-18 / pathetic
                               :domain (c1-9 / serve-01
                                             :ARG0 (c1-13 / you)
                                             :ARG1 (c1-1 / customer)))
                   :op2 (c1-11 / think-01
                               :ARG0 c1-13
                               :ARG1 (c1-16 / person
                                            :ARG0-of (c1-15 / flyer-00)
                                            :ARG1-of (c1-5 / regular-03
                                                           :degree (c1-3 / very))
                                            :domain c1-0))))

# ::snt Hi Steve , so sorry for the delay in our response , how can we help ? Why are you so upset ? Danny
# ::tokens ["Hi", "Steve", ",", "so", "sorry", "for", "the", "delay", "in", "our", "response", ",", "how", "can", "we", "help", "?", "Why", "are", "you", "so", "upset", "?", "Danny"]
# ::lemmas ["hi", "Steve", ",", "so", "sorry", "for", "the", "delay", "in", "our", "response", ",", "how", "can", "we", "help", "?", "why", "be", "you", "so", "upset", "?", "Danny"]
(c2-15 / multi-sentence
       :snt1 (c2-0 / say-01
                   :ARG1 (c2-5 / hi)
                   :ARG2 (c2-14 / person
                                :name (c2-16 / name
                                             :op1 "Steve")))
       :snt2 (c2-2 / and
                   :op1 (c2-13 / sorry-01
                               :ARG1 (c2-1 / delay-01
                                           :ARG1 (c2-11 / respond-01
                                                        :ARG0 (c2-3 / we)))
                               :degree (c2-6 / so))
                   :op2 (c2-9 / possible-01
                              :ARG1 (c2-7 / help-01
                                          :ARG0 c2-3)
                              :manner (c2-17 / amr-unknown)))
       :snt3 (c2-8 / upset-01
                   :ARG1 (c2-4 / person
                               :name (c2-12 / name
                                            :op1 "Danny"))
                   :degree (c2-10 / so)))

# ::snt Manchester to London flight minutes late . This route is constantly late
# ::tokens ["Manchester", "to", "London", "flight", "minutes", "late", ".", "This", "route", "is", "constantly", "late"]
# ::lemmas ["Manchester", "to", "London", "flight", "minute", "late", ".", "this", "route", "be", "constantly", "late"]
(c3-11 / multi-sentence
       :snt1 (c3-8 / late-02
                   :ARG1 (c3-1 / fly-01
                               :destination (c3-2 / city
                                                  :name (c3-12 / name
                                                               :op1 "Manchester"))
                               :destination (c3-0 / city
                                                  :name (c3-7 / name
                                                              :op1 "London")))
                   :ARG2 (c3-6 / temporal-quantity
                               :unit (c3-3 / minute)
                               :quant 1))
       :snt2 (c3-9 / late-02
                   :ARG1 (c3-10 / route
                                :mod (c3-4 / this))
                   :frequency (c3-5 / constant)))
