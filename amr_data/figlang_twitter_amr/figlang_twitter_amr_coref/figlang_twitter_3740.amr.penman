# ::snt Aw good . Need to reccy some clues for my treasure hunt
# ::tokens ["Aw", "good", ".", "Need", "to", "reccy", "some", "clues", "for", "my", "treasure", "hunt"]
# ::lemmas ["aw", "good", ".", "need", "to", "reccy", "some", "clue", "for", "my", "treasure", "hunt"]
(c1-8 / multi-sentence
      :snt1 (c1-6 / good-02
                  :mod (c1-1 / aw
                             :mode expressive))
      :snt2 (c1-9 / need-01
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-5 / reccy-00
                              :ARG0 c1-7
                              :ARG1 (c1-2 / clue
                                          :quant (c1-0 / some)
                                          :purpose (c1-3 / hunt-01
                                                         :ARG0 c1-7
                                                         :ARG1 (c1-4 / treasure))))))

# ::snt you doing treasure hunt ? Do you ever stop woman ?
# ::tokens ["you", "doing", "treasure", "hunt", "?", "Do", "you", "ever", "stop", "woman", "?"]
# ::lemmas ["you", "do", "treasure", "hunt", "?", "do", "you", "ever", "stop", "woman", "?"]
(c2-6 / multi-sentence
      :snt1 (c2-0 / do-02
                  :ARG0 (c2-7 / you)
                  :ARG1 (c2-4 / hunt-01
                              :ARG0 c2-7
                              :ARG1 (c2-5 / treasure)))
      :snt2 (c2-1 / stop-01
                  :polarity (c2-2 / amr-unknown)
                  :ARG0 (c2-8 / you)
                  :ARG1 (c2-3 / woman)
                  :time (c2-9 / ever)))

# ::snt I got asked week before he went . The show must go on !
# ::tokens ["I", "got", "asked", "week", "before", "he", "went", ".", "The", "show", "must", "go", "on", "!"]
# ::lemmas ["i", "got", "ask", "week", "before", "he", "go", ".", "the", "show", "must", "go", "on", "!"]
(c3-8 / multi-sentence
      :snt1 (c3-1 / ask-01
                  :ARG2 (c3-7 / i)
                  :time (c3-6 / before
                              :op1 (c3-5 / go-02
                                         :ARG0 (c3-3 / he))
                              :quant (c3-2 / week)))
      :snt2 (c3-4 / obligate-01
                  :ARG2 (c3-9 / go-on-15
                              :ARG1 (c3-0 / show-04))
                  :mode expressive))

# ::snt it keeps you busy . I gave u as an eg to my friend
# ::tokens ["it", "keeps", "you", "busy", ".", "I", "gave", "u", "as", "an", "eg", "to", "my", "friend"]
# ::lemmas ["it", "keep", "you", "busy", ".", "i", "give", "u", "as", "an", "eg", "to", "my", "friend"]
(c4-7 / multi-sentence
      :snt1 (c4-8 / keep-02
                  :ARG0 (c4-6 / it)
                  :ARG1 (c4-5 / busy-01
                              :ARG1 (c4-9 / you)))
      :snt2 (c4-3 / give-01
                  :ARG0 (c4-1 / i)
                  :ARG1 (c4-10 / you)
                  :ARG2 (c4-4 / person
                              :ARG0-of (c4-2 / have-rel-role-91
                                             :ARG1 c4-1
                                             :ARG2 (c4-0 / friend)))
                  :manner (c4-11 / eg)))

# ::snt it is but you are amazing should be proud xx
# ::tokens ["it", "is", "but", "you", "are", "amazing", "should", "be", "proud", "xx"]
# ::lemmas ["it", "be", "but", "you", "be", "amazing", "should", "be", "proud", "xx"]
(c5-1 / contrast-01
      :ARG1 (c5-4 / it)
      :ARG2 (c5-0 / amaze-01
                  :ARG0 (c5-5 / you)
                  :ARG0-of (c5-2 / recommend-01
                                 :ARG1 (c5-3 / pride-01
                                             :ARG0 c5-5))))

# ::snt I know you should write a self help book xx
# ::tokens ["I", "know", "you", "should", "write", "a", "self", "help", "book", "xx"]
# ::lemmas ["i", "know", "you", "should", "write", "a", "self", "help", "book", "xx"]
(c6-6 / know-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-3 / recommend-01
                  :ARG1 (c6-1 / write-01
                              :ARG0 (c6-7 / you)
                              :ARG1 (c6-4 / book
                                          :ARG0-of (c6-2 / help-01
                                                         :ARG1 (c6-0 / self))))
                  :ARG2 c6-7))

# ::snt Moi ? Lol ! Just being brave & hold head high . X
# ::tokens ["Moi", "?", "Lol", "!", "Just", "being", "brave", "&", "hold", "head", "high", ".", "X"]
# ::lemmas ["Moi", "?", "Lol", "!", "just", "be", "brave", "&", "hold", "head", "high", ".", "x"]
(c7-9 / multi-sentence
      :snt1 (c7-8 / person
                  :name (c7-10 / name
                               :op1 "Moi")
                  :ARG2-of (c7-4 / laugh-01
                                 :manner (c7-5 / loud)
                                 :mode expressive)
                  :mode expressive)
      :snt2 (c7-1 / and
                  :op1 (c7-6 / brave-02
                             :ARG0 (c7-11 / you)
                             :mod (c7-7 / just))
                  :op2 (c7-2 / hold-01
                             :ARG0 c7-11
                             :ARG1 (c7-3 / head
                                         :ARG1-of (c7-0 / high-02))))
      :snt3 (c7-12 / emoticon
                   :value "X"))

# ::snt you have done the same yourself Char , you have carried on , its life , its what we all do
# ::tokens ["you", "have", "done", "the", "same", "yourself", "Char", ",", "you", "have", "carried", "on", ",", "its", "life", ",", "its", "what", "we", "all", "do"]
# ::lemmas ["you", "have", "do", "the", "same", "yourself", "Char", ",", "you", "have", "carry", "on", ",", "its", "life", ",", "its", "what", "we", "all", "do"]
(c8-0 / say-01
      :ARG0 (c8-11 / i)
      :ARG1 (c8-2 / and
                  :op1 (c8-1 / do-02
                             :ARG0 (c8-8 / person
                                         :name (c8-12 / name
                                                      :op1 "Char"))
                             :ARG1 (c8-7 / thing
                                         :ARG1-of (c8-10 / same-01)))
                  :op2 (c8-3 / carry-on-02
                             :ARG0 c8-8)
                  :op3 (c8-9 / life
                             :poss (c8-6 / it))
                  :op4 (c8-5 / do-02
                             :ARG0 (c8-4 / we
                                         :mod (c8-13 / all))
                             :ARG1 c8-7))
      :ARG2 c8-8)

# ::snt I have to carry on as I have G to look after but Annie could have just given up but she didn't that's strength x
# ::tokens ["I", "have", "to", "carry", "on", "as", "I", "have", "G", "to", "look", "after", "but", "Annie", "could", "have", "just", "given", "up", "but", "she", "did", "n't", "that", "'s", "strength", "x"]
# ::lemmas ["i", "have", "to", "carry", "on", "as", "i", "have", "g", "to", "look", "after", "but", "Annie", "could", "have", "just", "give", "up", "but", "she", "do", "not", "that", "be", "strength", "x"]
(c9-2 / contrast-01
      :ARG1 (c9-7 / obligate-01
                  :ARG1 (c9-14 / i)
                  :ARG2 (c9-0 / carry-on-02
                              :ARG0 c9-14
                              :ARG1-of (c9-6 / cause-01
                                             :ARG0 (c9-5 / obligate-01
                                                         :ARG1 c9-14
                                                         :ARG2 (c9-10 / look-after-07
                                                                      :ARG0 c9-14
                                                                      :ARG1 (c9-11 / person
                                                                                   :name (c9-16 / name
                                                                                                :op1 "G")))))))
      :ARG2 (c9-12 / contrast-01
                   :ARG1 (c9-8 / possible-01
                               :ARG1 (c9-13 / give-up-07
                                            :ARG0 (c9-4 / person
                                                        :name (c9-9 / name
                                                                    :op1 "Annie"))
                                            :mod (c9-15 / just)
                                            :ARG2-of c9-12))
                   :ARG0 c9-4
                   :ARG0-of (c9-3 / cause-01
                                  :ARG1 (c9-1 / strong-02
                                              :ARG1 c9-4))
                   :polarity -))

# ::snt Its often when life throws you a curveball you learn how strong you are & you are too - dont knock yourself
# ::tokens ["Its", "often", "when", "life", "throws", "you", "a", "curveball", "you", "learn", "how", "strong", "you", "are", "&", "you", "are", "too", "-", "do", "nt", "knock", "yourself"]
# ::lemmas ["its", "often", "when", "life", "throw", "you", "a", "curveball", "you", "learn", "how", "strong", "you", "be", "&", "you", "be", "too", "-", "do", "not", "knock", "yourself"]
(c10-1 / and
       :op1 (c10-7 / learn-01
                   :ARG0 (c10-11 / you)
                   :ARG1 (c10-12 / and
                                 :op1 (c10-0 / strong-02
                                             :ARG1 c10-11
                                             :degree (c10-9 / so))
                                 :op2 (c10-4 / have-degree-91
                                             :ARG1 c10-11
                                             :ARG2 c10-0
                                             :ARG3 (c10-6 / too))))
       :op2 (c10-10 / knock-01
                    :ARG0 c10-11
                    :ARG1 c10-11
                    :polarity -
                    :mode imperative)
       :frequency (c10-5 / often)
       :time (c10-3 / throw-01
                    :ARG0 (c10-8 / life)
                    :ARG1 (c10-2 / curveball)
                    :ARG2 c10-11))

# ::snt thanks Mel that's true . Annie is an example to us all & she's always smiling on here .
# ::tokens ["thanks", "Mel", "that", "'s", "true", ".", "Annie", "is", "an", "example", "to", "us", "all", "&", "she", "'s", "always", "smiling", "on", "here", "."]
# ::lemmas ["thanks", "Mel", "that", "be", "true", ".", "Annie", "be", "an", "example", "to", "we", "all", "&", "she", "be", "always", "smile", "on", "here", "."]
(c11-10 / multi-sentence
        :snt1 (c11-7 / thank-01
                     :ARG1 (c11-9 / person
                                  :name (c11-11 / name
                                                :op1 "Mel"))
                     :ARG2 (c11-4 / true-01
                                  :ARG1 (c11-12 / that)))
        :snt2 (c11-2 / and
                     :op1 (c11-14 / exemplify-01
                                  :ARG0 (c11-6 / person
                                               :name (c11-8 / name
                                                            :op1 "Annie"))
                                  :beneficiary (c11-3 / we
                                                      :mod (c11-13 / all)))
                     :op2 (c11-0 / smile-01
                                 :ARG0 c11-6
                                 :location (c11-5 / here)
                                 :time (c11-1 / always))))

# ::snt I know you have terrible times but you are brilliant at appearing on here cheerful never a moan Xxx
# ::tokens ["I", "know", "you", "have", "terrible", "times", "but", "you", "are", "brilliant", "at", "appearing", "on", "here", "cheerful", "never", "a", "moan", "Xxx"]
# ::lemmas ["i", "know", "you", "have", "terrible", "time", "but", "you", "be", "brilliant", "at", "appear", "on", "here", "cheerful", "never", "a", "moan", "Xxx"]
(c12-0 / say-01
       :ARG0 (c12-12 / i)
       :ARG1 (c12-4 / contrast-01
                    :ARG1 (c12-14 / know-01
                                  :ARG0 c12-12
                                  :ARG1 (c12-6 / have-03
                                               :ARG0 (c12-15 / you)
                                               :ARG1 (c12-7 / time
                                                            :ARG1-of (c12-5 / terrible-01))))
                    :ARG2 (c12-10 / brilliant-01
                                  :ARG1 c12-15
                                  :ARG2 (c12-3 / appear-01
                                               :ARG1 c12-15
                                               :location (c12-11 / here)
                                               :manner (c12-1 / cheerful)
                                               :time (c12-16 / ever)
                                               :ARG1-of (c12-13 / moan-01
                                                                :polarity -))))
       :ARG2 (c12-8 / person
                    :name (c12-9 / name
                                 :op1 "xxx")
                    :ARG2-of (c12-2 / sign-01)))

# ::snt well what you're doing gains you an enormous amount of respect doesn't it Mel ? x
# ::tokens ["well", "what", "you", "'re", "doing", "gains", "you", "an", "enormous", "amount", "of", "respect", "does", "n't", "it", "Mel", "?", "x"]
# ::lemmas ["well", "what", "you", "be", "do", "gain", "you", "an", "enormous", "amount", "of", "respect", "do", "not", "it", "Mel", "?", "x"]
(c13-0 / say-01
       :ARG0 (c13-8 / i)
       :ARG1 (c13-7 / gain-02
                    :ARG0 (c13-4 / thing
                                 :ARG1-of (c13-1 / do-02
                                                 :ARG0 (c13-6 / person
                                                              :name (c13-9 / name
                                                                           :op1 "Mel"))))
                    :ARG1 (c13-5 / respect-01
                                 :ARG1 c13-6
                                 :quant (c13-2 / amount
                                               :mod (c13-10 / enormous)))
                    :ARG2 c13-6
                    :ARG1-of (c13-3 / request-confirmation-91
                                    :ARG0 c13-8
                                    :ARG2 c13-6))
       :ARG2 c13-6)
