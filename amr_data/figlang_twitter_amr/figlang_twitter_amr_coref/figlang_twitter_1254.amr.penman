# ::snt What part of + = jobs that * aren't leaving * doesn't everyone understand ? was right .
# ::tokens ["What", "part", "of", "+", "=", "jobs", "that", "*", "are", "n't", "leaving", "*", "does", "n't", "everyone", "understand", "?", "was", "right", "."]
# ::lemmas ["what", "part", "of", "+", "=", "job", "that", "*", "be", "not", "leave", "*", "do", "not", "everyone", "understand", "?", "be", "right", "."]
(c1-3 / right-06
      :ARG2 (c1-2 / understand-01
                  :ARG0 (c1-7 / everyone)
                  :ARG1 (c1-0 / amr-unknown
                              :mod (c1-6 / part
                                         :ARG1-of (c1-1 / equal-01
                                                        :ARG2 (c1-5 / job
                                                                    :ARG1-of (c1-4 / leave-11
                                                                                   :polarity -)))))
                  :polarity -))

# ::snt Because those were never in jeopardy of leaving NOT leaving regardles of Trump understand ?
# ::tokens ["Because", "those", "were", "never", "in", "jeopardy", "of", "leaving", "NOT", "leaving", "regardles", "of", "Trump", "understand", "?"]
# ::lemmas ["because", "those", "be", "never", "in", "jeopardy", "of", "leave", "not", "leave", "regardle", "of", "Trump", "understand", "?"]
(c2-1 / cause-01
      :ARG0 (c2-8 / jeopardize-01
                  :ARG1 (c2-9 / person
                              :mod (c2-5 / that))
                  :time (c2-11 / ever)
                  :topic (c2-6 / leave-12
                               :ARG0 c2-9
                               :ARG1 (c2-7 / leave-12
                                           :ARG0 c2-9
                                           :ARG1 (c2-2 / thing
                                                       :ARG1-of (c2-3 / understand-01
                                                                      :ARG0 (c2-4 / person
                                                                                  :name (c2-10 / name
                                                                                               :op1 "Trump"))))
                                           :polarity -))
                  :polarity (c2-0 / amr-unknown)
                  :polarity -))

# ::snt He didn't say they were . He took credit for not leaving now , & then said total , which is true
# ::tokens ["He", "did", "n't", "say", "they", "were", ".", "He", "took", "credit", "for", "not", "leaving", "now", ",", "&", "then", "said", "total", ",", "which", "is", "true"]
# ::lemmas ["he", "do", "not", "say", "they", "be", ".", "he", "take", "credit", "for", "not", "leave", "now", ",", "&", "then", "say", "total", ",", "which", "be", "true"]
(c3-11 / multi-sentence
       :snt1 (c3-0 / say-01
                   :ARG0 (c3-6 / he)
                   :ARG1 (c3-8 / they)
                   :polarity -)
       :snt2 (c3-2 / and
                   :op1 (c3-5 / take-01
                              :ARG0 (c3-10 / he)
                              :ARG1 (c3-4 / credit-01
                                          :ARG1 c3-10
                                          :ARG2 (c3-9 / leave-11
                                                      :ARG0 c3-10
                                                      :time (c3-12 / now)
                                                      :polarity -)))
                   :op2 (c3-1 / say-01
                              :ARG0 c3-10
                              :ARG1 (c3-13 / total)
                              :time (c3-7 / then)
                              :ARG1-of (c3-3 / true-01))))
