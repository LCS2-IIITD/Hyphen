# ::snt st show today after your little break . Hope it went . Think you would be " fresh as a daisy " on stage tonight Goodnight Joe
# ::tokens ["st", "show", "today", "after", "your", "little", "break", ".", "Hope", "it", "went", ".", "Think", "you", "would", "be", "\"", "fresh", "as", "a", "daisy", "\"", "on", "stage", "tonight", "Goodnight", "Joe"]
# ::lemmas ["st", "show", "today", "after", "your", "little", "break", ".", "hope", "it", "go", ".", "think", "you", "would", "be", "\"", "fresh", "as", "a", "daisy", "\"", "on", "stage", "tonight", "Goodnight", "Joe"]
(c1-7 / multi-sentence
      :snt1 (c1-10 / show-04
                   :time (c1-5 / today)
                   :time (c1-17 / after
                                :op1 (c1-21 / break-19
                                            :ARG0 (c1-15 / you)
                                            :mod (c1-20 / little))))
      :snt2 (c1-19 / hope-01
                   :ARG0 (c1-3 / i)
                   :ARG1 (c1-6 / go-01
                               :ARG1 (c1-11 / it)))
      :snt3 (c1-4 / think-01
                  :ARG0 (c1-12 / i)
                  :ARG1 (c1-18 / fresh-04
                               :ARG1 (c1-16 / you)
                               :ARG2-of (c1-2 / have-degree-91
                                              :ARG1 c1-16
                                              :ARG3 (c1-9 / equal)
                                              :ARG4 (c1-0 / daisy))
                               :location (c1-22 / stage
                                                :time (c1-14 / date-entity
                                                             :dayperiod (c1-8 / night)
                                                             :mod c1-5))))
      :snt4 (c1-13 / show
                   :name (c1-1 / name
                               :op1 "Goodnight"
                               :op2 "Joe")
                   :time c1-14
                   :dayperiod c1-8)
      :mod c1-5)

# ::snt It was fabulous Joan I m going to be so sad when it ends & Joe goes back to <URL> becoming a way of life to pop into town & see Joe in panto But as the saying goes all good things must come to an end Hope David is improving xx
# ::tokens ["It", "was", "fabulous", "Joan", "I", "m", "going", "to", "be", "so", "sad", "when", "it", "ends", "&", "Joe", "goes", "back", "to", "<", "URL", ">", "becoming", "a", "way", "of", "life", "to", "pop", "into", "town", "&", "see", "Joe", "in", "panto", "But", "as", "the", "saying", "goes", "all", "good", "things", "must", "come", "to", "an", "end", "Hope", "David", "is", "improving", "xx"]
# ::lemmas ["it", "be", "fabulous", "Joan", "i", "m", "go", "to", "be", "so", "sad", "when", "it", "end", "&", "Joe", "go", "back", "to", "<", "URL", ">", "become", "a", "way", "of", "life", "to", "pop", "into", "town", "&", "see", "Joe", "in", "panto", "but", "as", "the", "saying", "go", "all", "good", "thing", "must", "come", "to", "an", "end", "Hope", "David", "be", "improve", "xx"]
(c2-13 / multi-sentence
       :snt1 (c2-17 / say-01
                    :ARG1 (c2-26 / fabulous)
                    :ARG2 (c2-32 / person
                                 :name (c2-14 / name
                                              :op1 "Joan")))
       :snt2 (c2-25 / and
                    :op1 (c2-31 / sad-02
                                :ARG1 (c2-4 / i)
                                :degree (c2-21 / so)
                                :time (c2-16 / end-01
                                             :ARG1 (c2-20 / it)))
                    :op2 (c2-12 / go-back-19
                                :ARG1 (c2-28 / person
                                             :name (c2-3 / name
                                                         :op1 "Joe"))
                                :ARG2 (c2-30 / become-01
                                             :ARG1 c2-28
                                             :ARG2 (c2-8 / way
                                                         :mod (c2-29 / life))
                                             :ARG3 (c2-15 / and
                                                          :op1 (c2-19 / pop-02
                                                                      :ARG0 c2-4
                                                                      :destination (c2-11 / town))
                                                          :op2 (c2-5 / see-01
                                                                     :ARG0 c2-4
                                                                     :ARG1 c2-28
                                                                     :location (c2-18 / panto))))))
       :snt3 (c2-7 / contrast-01
                   :ARG1 (c2-10 / obligate-01
                                :ARG2 (c2-0 / come-04
                                            :ARG1 (c2-9 / thing
                                                        :ARG1-of (c2-24 / good-02)
                                                        :mod (c2-1 / all))
                                            :ARG2 (c2-27 / end-01
                                                         :ARG1 c2-9))
                                :ARG1-of (c2-6 / say-01))
                   :ARG2 (c2-22 / improve-01
                                :ARG1 (c2-2 / person
                                            :name (c2-23 / name
                                                         :op1 "David")))))
