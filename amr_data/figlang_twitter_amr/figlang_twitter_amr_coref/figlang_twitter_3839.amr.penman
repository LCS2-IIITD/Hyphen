# ::snt A wake up call from Simon Coveney as he tells : Just because a British Parliament decides that British law says something doesn t mean that law applies to the other countries of the European Union . Britain exceptionalism <URL>
# ::tokens ["A", "wake", "up", "call", "from", "Simon", "Coveney", "as", "he", "tells", ":", "Just", "because", "a", "British", "Parliament", "decides", "that", "British", "law", "says", "something", "doesn", "t", "mean", "that", "law", "applies", "to", "the", "other", "countries", "of", "the", "European", "Union", ".", "Britain", "exceptionalism", "<", "URL", ">"]
# ::lemmas ["a", "wake", "up", "call", "from", "Simon", "Coveney", "as", "he", "tell", ":", "just", "because", "a", "British", "Parliament", "decide", "that", "British", "law", "say", "something", "doesn", "t", "mean", "that", "law", "apply", "to", "the", "other", "country", "of", "the", "European", "Union", ".", "Britain", "exceptionalism", "<", "URL", ">"]
(c1-4 / call-03
      :ARG0 (c1-22 / person
                   :name (c1-11 / name
                                :op1 "Simon"
                                :op2 "Cveney")
                   :ARG0-of (c1-8 / tell-01
                                  :ARG1 (c1-0 / cause-01
                                              :ARG0 (c1-1 / decide-01
                                                          :ARG0 (c1-9 / government-organization
                                                                      :name (c1-2 / name
                                                                                  :op1 "Parliament")
                                                                      :mod (c1-6 / country
                                                                                 :name (c1-14 / name
                                                                                              :op1 "Britain")))
                                                          :ARG1 (c1-13 / say-01
                                                                       :ARG0 (c1-20 / law
                                                                                    :mod c1-6)
                                                                       :ARG1 (c1-21 / something)))
                                              :ARG1 (c1-10 / mean-01
                                                           :ARG1 c1-13
                                                           :ARG2 (c1-16 / apply-02
                                                                        :ARG1 c1-20
                                                                        :ARG2 (c1-15 / country
                                                                                     :mod (c1-7 / other)
                                                                                     :ARG0-of (c1-17 / have-org-role-91
                                                                                                     :ARG1 (c1-18 / organization
                                                                                                                  :name (c1-3 / name
                                                                                                                              :op1 "European"
                                                                                                                              :op2 "Union")))))
                                                           :mod (c1-19 / just)
                                                           :polarity -)))
                   :ARG1 (c1-5 / wake-up-02
                               :ARG1-of c1-10
                               :ARG2 (c1-12 / exceptionalism
                                            :mod c1-6))))

# ::snt British law will say that there will be no extension - so there will be no extension . It's not that hard to understand . They've got months to put a good enough deal on the table , or we leave without one .
# ::tokens ["British", "law", "will", "say", "that", "there", "will", "be", "no", "extension", "-", "so", "there", "will", "be", "no", "extension", ".", "It", "'s", "not", "that", "hard", "to", "understand", ".", "They", "'ve", "got", "months", "to", "put", "a", "good", "enough", "deal", "on", "the", "table", ",", "or", "we", "leave", "without", "one", "."]
# ::lemmas ["British", "law", "will", "say", "that", "there", "will", "be", "no", "extension", "-", "so", "there", "will", "be", "no", "extension", ".", "it", "be", "not", "that", "hard", "to", "understand", ".", "they", "'ve", "get", "months", "to", "put", "a", "good", "enough", "deal", "on", "the", "table", ",", "or", "we", "leave", "without", "one", "."]
(c2-13 / multi-sentence
       :snt1 (c2-17 / say-01
                    :ARG0 (c2-24 / law
                                 :mod (c2-7 / country
                                            :name (c2-14 / name
                                                         :op1 "Britain")))
                    :ARG1 (c2-16 / extend-01
                                 :polarity -)
                    :ARG0-of (c2-0 / cause-01
                                   :ARG1 (c2-22 / extend-01
                                                :polarity -)))
       :snt2 (c2-21 / hard-02
                    :ARG1 (c2-23 / understand-01
                                 :ARG1 (c2-5 / it))
                    :degree (c2-11 / that)
                    :polarity -)
       :snt3 (c2-10 / or
                    :op1 (c2-4 / have-03
                               :ARG0 (c2-9 / they)
                               :ARG1 (c2-20 / multiple
                                            :op1 (c2-15 / temporal-quantity
                                                        :unit (c2-19 / month)
                                                        :quant 1))
                               :purpose (c2-25 / put-01
                                               :ARG0 c2-9
                                               :ARG1 (c2-1 / deal
                                                           :ARG1-of (c2-6 / have-degree-91
                                                                          :ARG2 (c2-12 / good-02
                                                                                       :ARG1 c2-1)
                                                                          :ARG3 (c2-2 / enough)))
                                               :ARG2 (c2-18 / table)))
                    :op2 (c2-3 / leave-11
                               :ARG0 (c2-8 / we)
                               :prep-without c2-1)))

# ::snt Your attitude articulated exactly why Northern Ireland s relationship with Ireland was not passed to Phase talks .
# ::tokens ["Your", "attitude", "articulated", "exactly", "why", "Northern", "Ireland", "s", "relationship", "with", "Ireland", "was", "not", "passed", "to", "Phase", "talks", "."]
# ::lemmas ["your", "attitude", "articulate", "exactly", "why", "Northern", "Ireland", "s", "relationship", "with", "Ireland", "be", "not", "pass", "to", "phase", "talk", "."]
(c3-1 / articulate-01
      :ARG0 (c3-12 / attitude
                   :poss (c3-11 / you))
      :ARG1 (c3-6 / thing
                  :ARG0-of (c3-2 / cause-01
                                 :ARG1 (c3-9 / pass-05
                                             :ARG1 (c3-7 / relation-03
                                                         :ARG0 (c3-0 / country
                                                                     :name (c3-10 / name
                                                                                  :op1 "Northern"
                                                                                  :op2 "Ireland"))
                                                         :ARG2 (c3-4 / country
                                                                     :name (c3-8 / name
                                                                                 :op1 "Ireland")))
                                             :ARG2 (c3-3 / talk-01
                                                         :mod (c3-5 / phase))
                                             :polarity -))
                  :mod (c3-13 / exact)))
