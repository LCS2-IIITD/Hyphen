# ::snt Poverty in America is a death sentence . Wealthy women live years longer than lower income women .
# ::tokens ["Poverty", "in", "America", "is", "a", "death", "sentence", ".", "Wealthy", "women", "live", "years", "longer", "than", "lower", "income", "women", "."]
# ::lemmas ["poverty", "in", "America", "be", "a", "death", "sentence", ".", "wealthy", "woman", "live", "years", "long", "than", "low", "income", "woman", "."]
(c1-11 / multi-sentence
       :snt1 (c1-14 / sentence-01
                    :ARG2 (c1-0 / die-01)
                    :ARG3 (c1-20 / poor
                                 :location (c1-7 / country
                                                 :name (c1-12 / name
                                                              :op1 "America"))))
       :snt2 (c1-19 / live-01
                    :ARG0 (c1-8 / woman
                                :ARG1-of (c1-13 / wealth-01))
                    :ARG1-of (c1-3 / long-03
                                   :ARG2-of (c1-18 / have-degree-91
                                                   :ARG1 c1-19
                                                   :ARG3 (c1-17 / more)
                                                   :ARG4 (c1-1 / live-01
                                                               :ARG0 (c1-5 / woman
                                                                           :mod (c1-6 / income
                                                                                      :ARG1-of (c1-4 / have-degree-91
                                                                                                     :ARG2 (c1-2 / low-04
                                                                                                                 :ARG1 c1-6)
                                                                                                     :ARG3 (c1-15 / more))))))
                                   :duration (c1-10 / multiple
                                                    :op1 (c1-9 / temporal-quantity
                                                               :unit (c1-16 / year)
                                                               :quant 1)))))

# ::snt And you should stop being an insensitive prick , but I'm pretty sure we all know that's not going to happen .
# ::tokens ["And", "you", "should", "stop", "being", "an", "insensitive", "prick", ",", "but", "I", "'m", "pretty", "sure", "we", "all", "know", "that", "'s", "not", "going", "to", "happen", "."]
# ::lemmas ["and", "you", "should", "stop", "be", "an", "insensitive", "prick", ",", "but", "i", "be", "pretty", "sure", "we", "all", "know", "that", "be", "not", "go", "to", "happen", "."]
(c2-1 / and
      :op2 (c2-2 / contrast-01
                 :ARG1 (c2-7 / recommend-01
                             :ARG1 (c2-0 / stop-01
                                         :ARG0 (c2-11 / you)
                                         :ARG1 (c2-9 / prick
                                                     :ARG0-of (c2-8 / sensitive-03
                                                                    :polarity -)
                                                     :domain c2-11)))
                 :ARG2 (c2-5 / sure-02
                             :ARG0 (c2-3 / i)
                             :ARG1 (c2-10 / know-01
                                          :ARG0 (c2-4 / we
                                                      :mod (c2-12 / all))
                                          :ARG1 c2-0)
                             :degree (c2-6 / pretty))))

# ::snt and the cheapness involved in trolling or mocking such a subject . This man is blissful trash .
# ::tokens ["and", "the", "cheapness", "involved", "in", "trolling", "or", "mocking", "such", "a", "subject", ".", "This", "man", "is", "blissful", "trash", "."]
# ::lemmas ["and", "the", "cheapness", "involve", "in", "trolling", "or", "mock", "such", "a", "subject", ".", "this", "man", "be", "blissful", "trash", "."]
(c3-11 / multi-sentence
       :snt1 (c3-1 / and
                   :op2 (c3-2 / cheap-02
                              :ARG1-of (c3-10 / involve-01
                                              :ARG2 (c3-6 / or
                                                          :op1 (c3-7 / troll-01
                                                                     :ARG1 (c3-0 / subject
                                                                                 :mod (c3-9 / such)))
                                                          :op2 (c3-3 / mock-01
                                                                     :ARG1 c3-0)))))
       :snt2 (c3-4 / trash
                   :mod (c3-8 / bliss)
                   :domain (c3-5 / man
                                 :mod (c3-12 / this))))

# ::snt Sadly , that's the world we're going to have to live in with Trump . No compassion or decency .
# ::tokens ["Sadly", ",", "that", "'s", "the", "world", "we", "'re", "going", "to", "have", "to", "live", "in", "with", "Trump", ".", "No", "compassion", "or", "decency", "."]
# ::lemmas ["sadly", ",", "that", "be", "the", "world", "we", "be", "go", "to", "have", "to", "live", "in", "with", "Trump", ".", "no", "compassion", "or", "decency", "."]
(c4-9 / multi-sentence
      :snt1 (c4-5 / obligate-01
                  :ARG1 (c4-3 / we)
                  :ARG2 (c4-7 / live-01
                              :ARG0 c4-3
                              :location (c4-11 / world
                                               :domain (c4-6 / that))
                              :accompanier (c4-8 / person
                                                 :name (c4-10 / name
                                                              :op1 "Trump")))
                  :ARG0-of (c4-0 / sad-02))
      :snt2 (c4-4 / or
                  :op1 (c4-2 / compassion)
                  :op2 (c4-1 / decency)
                  :polarity -))

# ::snt You saw the majority vote results ? These ppl are truly a minority .
# ::tokens ["You", "saw", "the", "majority", "vote", "results", "?", "These", "ppl", "are", "truly", "a", "minority", "."]
# ::lemmas ["you", "see", "the", "majority", "vote", "result", "?", "these", "ppl", "be", "truly", "a", "minority", "."]
(c5-9 / multi-sentence
      :snt1 (c5-0 / see-01
                  :polarity (c5-1 / amr-unknown)
                  :ARG0 (c5-10 / you)
                  :ARG1 (c5-7 / result-01
                              :ARG1 (c5-5 / vote-01
                                          :mod (c5-2 / majority))))
      :snt2 (c5-4 / minority
                  :domain (c5-8 / person
                                :mod (c5-6 / this))
                  :ARG1-of (c5-3 / true-01)))

# ::snt I know , but they act like they're the majority . They now feel entitled to display their hatred .
# ::tokens ["I", "know", ",", "but", "they", "act", "like", "they", "'re", "the", "majority", ".", "They", "now", "feel", "entitled", "to", "display", "their", "hatred", "."]
# ::lemmas ["i", "know", ",", "but", "they", "act", "like", "they", "be", "the", "majority", ".", "they", "now", "feel", "entitled", "to", "display", "their", "hatred", "."]
(c6-10 / multi-sentence
       :snt1 (c6-3 / contrast-01
                   :ARG1 (c6-11 / know-01
                                :ARG0 (c6-9 / i))
                   :ARG2 (c6-1 / act-01
                               :ARG0 (c6-7 / they)
                               :ARG1 (c6-4 / majority
                                           :domain c6-7)))
       :snt2 (c6-2 / feel-01
                   :ARG0 (c6-5 / they)
                   :ARG1 (c6-12 / entitle-01
                                :ARG1 (c6-0 / display-01
                                            :ARG0 c6-5
                                            :ARG1 (c6-6 / hatred
                                                        :poss c6-5))
                                :ARG2 c6-5
                                :time (c6-8 / now))))

# ::snt All they display is stupidity to those who haven't been converted . Battle it by exposing it .
# ::tokens ["All", "they", "display", "is", "stupidity", "to", "those", "who", "have", "n't", "been", "converted", ".", "Battle", "it", "by", "exposing", "it", "."]
# ::lemmas ["all", "they", "display", "be", "stupidity", "to", "those", "who", "have", "not", "be", "convert", ".", "battle", "it", "by", "expose", "it", "."]
(c7-7 / multi-sentence
      :snt1 (c7-0 / display-01
                  :ARG0 (c7-4 / they)
                  :ARG1 (c7-1 / stupidity)
                  :ARG2 (c7-6 / person
                              :ARG1-of (c7-3 / convert-01
                                             :polarity -))
                  :mod (c7-2 / all))
      :snt2 (c7-5 / battle-01
                  :ARG0 (c7-8 / you)
                  :ARG2 c7-1
                  :manner (c7-9 / expose-01
                                :ARG0 c7-8
                                :ARG1 c7-1)
                  :mode imperative))

# ::snt Converted ? Converted to what ? I gotta hear this
# ::tokens ["Converted", "?", "Converted", "to", "what", "?", "I", "got", "ta", "hear", "this"]
# ::lemmas ["convert", "?", "convert", "to", "what", "?", "i", "got", "to", "hear", "this"]
(c8-7 / multi-sentence
      :snt1 (c8-2 / convert-01
                  :polarity (c8-1 / amr-unknown)
                  :snt2-of c8-7)
      :polarity (c8-8 / amr-unknown)
      :ARG2 (c8-0 / amr-unknown)
      :snt3 (c8-4 / obligate-01
                  :ARG1 (c8-3 / hear-01
                              :ARG0 (c8-6 / i)
                              :ARG1 (c8-5 / this))))

# ::snt have not met one yet that isn't religious , delusional , bigoted , & quite daft .
# ::tokens ["have", "not", "met", "one", "yet", "that", "is", "n't", "religious", ",", "delusional", ",", "bigoted", ",", "&", "quite", "daft", "."]
# ::lemmas ["have", "not", "meet", "one", "yet", "that", "be", "not", "religious", ",", "delusional", ",", "bigoted", ",", "&", "quite", "daft", "."]
(c9-8 / meet-02
      :ARG0 (c9-7 / i)
      :ARG1 (c9-4 / one
                  :mod (c9-3 / or
                             :op1 (c9-5 / religious)
                             :op2 (c9-0 / delusional)
                             :op3 (c9-6 / bigot)
                             :op4 (c9-2 / daft
                                        :degree (c9-1 / quite))
                             :polarity -))
      :time (c9-9 / yet)
      :polarity -)

# ::snt So glad your side lost & continues to lose . Your smugness did you in . Please keep it up
# ::tokens ["So", "glad", "your", "side", "lost", "&", "continues", "to", "lose", ".", "Your", "smugness", "did", "you", "in", ".", "Please", "keep", "it", "up"]
# ::lemmas ["so", "glad", "your", "side", "lose", "&", "continue", "to", "lose", ".", "your", "smugness", "do", "you", "in", ".", "please", "keep", "it", "up"]
(c10-9 / multi-sentence
       :snt1 (c10-7 / glad-02
                    :ARG0 (c10-2 / and
                                 :op1 (c10-5 / lose-03
                                             :ARG0 (c10-0 / side
                                                          :poss (c10-11 / you)))
                                 :op2 (c10-3 / continue-01
                                             :ARG1 (c10-6 / lose-03
                                                          :ARG0 c10-0)))
                    :degree (c10-8 / so))
       :snt2 (c10-1 / do-02
                    :ARG0 (c10-4 / smugness
                                 :poss (c10-12 / you))
                    :ARG1 (c10-10 / keep-up-05
                                  :ARG0 c10-12
                                  :mode imperative
                                  :polite +)))

# ::snt Actually the electoral college chose against the American ppl , is what did it in .
# ::tokens ["Actually", "the", "electoral", "college", "chose", "against", "the", "American", "ppl", ",", "is", "what", "did", "it", "in", "."]
# ::lemmas ["actually", "the", "electoral", "college", "choose", "against", "the", "American", "ppl", ",", "be", "what", "do", "it", "in", "."]
(c11-2 / choose-01
       :ARG0 (c11-0 / college
                    :mod (c11-9 / elect-01))
       :ARG1 (c11-1 / against
                    :op1 (c11-6 / person
                                :mod (c11-4 / country
                                            :name (c11-7 / name
                                                         :op1 "America"))))
       :ARG0-of (c11-5 / cause-01
                       :ARG1 (c11-3 / it))
       :ARG1-of (c11-8 / actual-02))

# ::snt You don't know what the Electoral College is / does . Another Russian invention ?
# ::tokens ["You", "do", "n't", "know", "what", "the", "Electoral", "College", "is", "/", "does", ".", "Another", "Russian", "invention", "?"]
# ::lemmas ["you", "do", "not", "know", "what", "the", "Electoral", "College", "be", "/", "do", ".", "another", "Russian", "invention", "?"]
(c12-11 / multi-sentence
        :snt1 (c12-12 / know-01
                      :ARG0 (c12-13 / you)
                      :ARG1 (c12-0 / slash
                                   :op1 (c12-7 / thing
                                               :domain (c12-9 / government-organization
                                                              :name (c12-10 / name
                                                                            :op1 "Electoral"
                                                                            :op2 "College")))
                                   :op2 (c12-5 / thing
                                               :ARG1-of (c12-1 / do-02
                                                               :ARG0 c12-9)))
                      :polarity -)
        :snt2 (c12-3 / thing
                     :ARG1-of (c12-4 / invent-01
                                     :ARG0 (c12-6 / country
                                                  :name (c12-8 / name
                                                               :op1 "Russia")))
                     :mod (c12-2 / another)
                     :polarity (c12-14 / amr-unknown)))

# ::snt so you actually believe after hearing Trump himself encourage Russian hacking that he
# ::tokens ["so", "you", "actually", "believe", "after", "hearing", "Trump", "himself", "encourage", "Russian", "hacking", "that", "he"]
# ::lemmas ["so", "you", "actually", "believe", "after", "hear", "Trump", "himself", "encourage", "Russian", "hacking", "that", "he"]
(c13-4 / believe-01
       :ARG0 (c13-8 / you)
       :ARG1 (c13-10 / encourage-01
                     :ARG0 (c13-6 / person
                                  :name (c13-7 / name
                                               :op1 "Trump"))
                     :ARG1 (c13-2 / hack-04
                                  :ARG0 (c13-1 / country
                                               :name (c13-3 / name
                                                            :op1 "Russia"))))
       :ARG1-of (c13-0 / actual-02)
       :time (c13-9 / after
                    :op1 (c13-5 / hear-01
                                :ARG0 c13-8
                                :ARG1 c13-10)))

# ::snt Why would the Russians neglect " rigging " the popular vote also ?
# ::tokens ["Why", "would", "the", "Russians", "neglect", "\"", "rigging", "\"", "the", "popular", "vote", "also", "?"]
# ::lemmas ["why", "would", "the", "Russians", "neglect", "\"", "rig", "\"", "the", "popular", "vote", "also", "?"]
(c14-7 / neglect-01
       :ARG0 (c14-6 / person
                    :mod (c14-1 / country
                                :name (c14-5 / name
                                             :op1 "Russia")))
       :ARG1 (c14-4 / rig-01
                    :ARG0 c14-6
                    :ARG1 (c14-2 / vote-01
                                 :ARG0 (c14-3 / populace)))
       :purpose (c14-0 / amr-unknown)
       :mod (c14-8 / also))

# ::snt Well , they're looking to investigate certain states that used electronic polling stations , aren't they ?
# ::tokens ["Well", ",", "they", "'re", "looking", "to", "investigate", "certain", "states", "that", "used", "electronic", "polling", "stations", ",", "are", "n't", "they", "?"]
# ::lemmas ["well", ",", "they", "be", "look", "to", "investigate", "certain", "state", "that", "use", "electronic", "polling", "station", ",", "be", "not", "they", "?"]
(c15-5 / look-04
       :ARG0 (c15-3 / they)
       :ARG1 (c15-8 / investigate-01
                    :ARG0 c15-3
                    :ARG1 (c15-0 / state
                                 :mod (c15-1 / certain)
                                 :ARG0-of (c15-2 / use-01
                                                 :ARG1 (c15-7 / station
                                                              :purpose (c15-6 / poll-01)
                                                              :mod (c15-9 / electronic)))))
       :ARG1-of (c15-4 / request-confirmation-91))

# ::snt Yes , machines purchased by George Soros . And most polling machines were offline . Can't be hacked
# ::tokens ["Yes", ",", "machines", "purchased", "by", "George", "Soros", ".", "And", "most", "polling", "machines", "were", "offline", ".", "Ca", "n't", "be", "hacked"]
# ::lemmas ["yes", ",", "machine", "purchase", "by", "George", "Soros", ".", "and", "most", "polling", "machine", "be", "offline", ".", "can", "not", "be", "hack"]
(c16-10 / multi-sentence
        :snt1 (c16-1 / machine
                     :ARG1-of (c16-9 / purchase-01
                                     :ARG0 (c16-7 / person
                                                  :name (c16-11 / name
                                                                :op1 "George"
                                                                :op2 "Soros"))))
        :snt2 (c16-0 / and
                     :op2 (c16-6 / online
                                 :domain (c16-5 / machine
                                                :mod (c16-3 / poll-01)
                                                :mod (c16-8 / most))))
        :snt3 (c16-2 / possible-01
                     :ARG1 (c16-4 / hack-04
                                  :ARG1 (c16-12 / machine
                                                :mod c16-3))
                     :polarity -))

# ::snt I find it funny how u put rigging in quotes considering ur candidate proposed the idea in the first place ?
# ::tokens ["I", "find", "it", "funny", "how", "u", "put", "rigging", "in", "quotes", "considering", "ur", "candidate", "proposed", "the", "idea", "in", "the", "first", "place", "?"]
# ::lemmas ["i", "find", "it", "funny", "how", "u", "put", "rig", "in", "quote", "consider", "ur", "candidate", "propose", "the", "idea", "in", "the", "first", "place", "?"]
(c17-2 / find-02
       :ARG0 (c17-12 / i)
       :ARG1 (c17-8 / funny
                    :manner-of (c17-11 / put-01
                                       :ARG0 (c17-13 / you)
                                       :ARG1 (c17-10 / rig-01)
                                       :ARG2 (c17-4 / quote-01))
                    :ARG1-of (c17-3 / cause-01
                                    :ARG0 (c17-0 / consider-02
                                                 :ARG1 (c17-9 / propose-01
                                                              :ARG0 (c17-7 / candidate
                                                                           :poss c17-13)
                                                              :ARG1 (c17-5 / idea)
                                                              :mod (c17-6 / in-the-first-place)))))
       :polarity (c17-1 / amr-unknown))
