# ::snt job of not done properly . Y do I need u if u can't arrange an alternate flying option when ditched me ? Offer alternate flying option nw . Else u lose a set of customers . <URL>
# ::tokens ["job", "of", "not", "done", "properly", ".", "Y", "do", "I", "need", "u", "if", "u", "ca", "n't", "arrange", "an", "alternate", "flying", "option", "when", "ditched", "me", "?", "Offer", "alternate", "flying", "option", "nw", ".", "Else", "u", "lose", "a", "set", "of", "customers", ".", "<", "URL", ">"]
# ::lemmas ["job", "of", "not", "do", "properly", ".", "Y", "do", "i", "need", "u", "if", "u", "can", "not", "arrange", "an", "alternate", "flying", "option", "when", "ditch", "i", "?", "offer", "alternate", "fly", "option", "nw", ".", "else", "u", "lose", "a", "set", "of", "customer", ".", "<", "URL", ">"]
(c1-7 / multi-sentence
      :snt1 (c1-24 / job
                   :ARG1-of (c1-0 / do-02
                                  :manner (c1-25 / proper)
                                  :polarity -))
      :snt2 (c1-8 / need-01
                  :ARG0 (c1-3 / i)
                  :ARG1 (c1-16 / you)
                  :polarity (c1-18 / amr-unknown)
                  :condition (c1-22 / possible-01
                                    :ARG1 (c1-9 / arrange-01
                                                :ARG0 c1-16
                                                :ARG1 (c1-6 / option
                                                            :mod (c1-19 / fly-01
                                                                        :mod (c1-1 / alternate)))
                                                :time (c1-15 / ditch-01
                                                             :ARG0 c1-16
                                                             :ARG1 c1-3))
                                    :polarity (c1-26 / amr-unknown)
                                    :polarity -)
                  :snt3 (c1-2 / and
                              :op1 (c1-21 / offer-01
                                          :ARG0 (c1-17 / you)
                                          :ARG1 c1-6
                                          :mod (c1-13 / fly-01
                                                      :mod (c1-14 / alternate))
                                          :mode imperative))
                  :op2 (c1-5 / want-01
                             :ARG0 c1-17
                             :ARG1 c1-6
                             :mode imperative))
      :snt4 (c1-23 / lose-02
                   :ARG0 c1-17
                   :ARG1 (c1-11 / set
                                :consist-of (c1-12 / person
                                                   :ARG0-of (c1-20 / have-rel-role-91
                                                                   :ARG1 c1-17
                                                                   :ARG2 (c1-4 / customer))))
                   :mod (c1-10 / else)))

# ::snt We really apologize for the inconvenience caused . Kindly DM your booking ID so that we can assist you further . <URL>
# ::tokens ["We", "really", "apologize", "for", "the", "inconvenience", "caused", ".", "Kindly", "DM", "your", "booking", "ID", "so", "that", "we", "can", "assist", "you", "further", ".", "<", "URL", ">"]
# ::lemmas ["we", "really", "apologize", "for", "the", "inconvenience", "cause", ".", "kindly", "dm", "your", "book", "ID", "so", "that", "we", "can", "assist", "you", "far", ".", "<", "URL", ">"]
(c2-12 / multi-sentence
       :snt1 (c2-1 / apologize-01
                   :ARG0 (c2-4 / we)
                   :ARG1 (c2-11 / inconvenience
                                :ARG1-of (c2-3 / cause-01
                                               :ARG0 (c2-14 / you)))
                   :ARG1-of (c2-8 / real-04))
       :snt2 (c2-0 / DM-01
                   :ARG0 (c2-15 / you)
                   :ARG1 (c2-5 / document-01
                               :ARG1 (c2-10 / book-03
                                            :ARG0 c2-15))
                   :ARG1-of (c2-13 / kind-01)
                   :purpose (c2-9 / possible-01
                                  :ARG1 (c2-7 / assist-01
                                              :ARG0 (c2-6 / we)
                                              :ARG1 c2-15
                                              :mod (c2-2 / further)))
                   :mode imperative))
