# ::snt No RIP forLeonard Cohen . He was Buddhist so Have a great day TJ .
# ::tokens ["No", "RIP", "forLeonard", "Cohen", ".", "He", "was", "Buddhist", "so", "Have", "a", "great", "day", "TJ", "."]
# ::lemmas ["no", "RIP", "forLeonard", "Cohen", ".", "he", "be", "Buddhist", "so", "have", "a", "great", "day", "tj", "."]
(c1-11 / multi-sentence
       :snt1 (c1-10 / person
                    :name (c1-12 / name
                                 :op1 "Leonard"
                                 :op2 "Cohen")
                    :ARG1-of (c1-6 / remember-01
                                   :polarity -))
       :snt2 (c1-3 / religious-group
                   :name (c1-7 / name
                               :op1 "Buddhist")
                   :domain (c1-2 / he)
                   :ARG0-of (c1-1 / cause-01
                                  :ARG1 (c1-9 / have-03
                                              :ARG0 (c1-5 / person
                                                          :name (c1-4 / name
                                                                      :op1 "TJ"))
                                              :ARG1 (c1-0 / day
                                                          :mod (c1-8 / great))
                                              :mode imperative))))

# ::snt knowing Leonard . It will be up to him <URL>
# ::tokens ["knowing", "Leonard", ".", "It", "will", "be", "up", "to", "him", "<", "URL", ">"]
# ::lemmas ["know", "Leonard", ".", "it", "will", "be", "up", "to", "he", "<", "URL", ">"]
(c2-5 / multi-sentence
      :snt1 (c2-6 / know-01
                  :ARG1 (c2-4 / person
                              :name (c2-3 / name
                                          :op1 "Leonard")))
      :snt2 (c2-0 / depend-01
                  :ARG0 (c2-1 / it)
                  :ARG1 (c2-2 / he)))
