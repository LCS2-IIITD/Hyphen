# ::snt Why hasn t Stormzy been arrested and charged with hate speech for his absurd & hateful slur against millions of decent people ? <URL>
# ::tokens ["Why", "hasn", "t", "Stormzy", "been", "arrested", "and", "charged", "with", "hate", "speech", "for", "his", "absurd", "&", "hateful", "slur", "against", "millions", "of", "decent", "people", "?", "<", "URL", ">"]
# ::lemmas ["why", "hasn", "t", "Stormzy", "be", "arrest", "and", "charge", "with", "hate", "speech", "for", "his", "absurd", "&", "hateful", "slur", "against", "millions", "of", "decent", "people", "?", "<", "URL", ">"]
(c1-5 / cause-01
      :ARG0 (c1-3 / amr-unknown)
      :ARG1 (c1-14 / and
                   :op1 (c1-1 / arrest-01
                              :ARG1 (c1-11 / person
                                           :name (c1-13 / name
                                                        :op1 "Stormzy"))
                              :ARG2 (c1-0 / speak-01
                                          :ARG1 (c1-6 / hate-01)))
                   :op2 (c1-2 / charge-05
                              :ARG1 c1-11
                              :ARG2 (c1-10 / slur
                                           :mod (c1-8 / absurd)
                                           :ARG0-of (c1-7 / hate-01)
                                           :poss c1-11
                                           :prep-against (c1-9 / person
                                                               :mod (c1-4 / decent)
                                                               :quant (c1-12 / multiple
                                                                             :op1 1000000))))))

# ::snt Actually it was the whole of the UK ! And I suppose if it is % racist , that must include him as well . I do wonder why these celebrities hate our country so much ? If it is so awful why doesn t he live somewhere else ?
# ::tokens ["Actually", "it", "was", "the", "whole", "of", "the", "UK", "!", "And", "I", "suppose", "if", "it", "is", "%", "racist", ",", "that", "must", "include", "him", "as", "well", ".", "I", "do", "wonder", "why", "these", "celebrities", "hate", "our", "country", "so", "much", "?", "If", "it", "is", "so", "awful", "why", "doesn", "t", "he", "live", "somewhere", "else", "?"]
# ::lemmas ["actually", "it", "be", "the", "whole", "of", "the", "UK", "!", "and", "i", "suppose", "if", "it", "be", "%", "racist", ",", "that", "must", "include", "he", "as", "well", ".", "i", "do", "wonder", "why", "these", "celebrity", "hate", "our", "country", "so", "much", "?", "if", "it", "be", "so", "awful", "why", "doesn", "t", "he", "live", "somewhere", "else", "?"]
(c2-17 / multi-sentence
       :snt1 (c2-28 / and
                    :op1 (c2-4 / include-01
                               :ARG1 (c2-30 / he)
                               :ARG2 (c2-8 / country
                                           :name (c2-18 / name
                                                        :op1 "UK")
                                           :mod (c2-9 / whole))
                               :ARG1-of (c2-20 / actual-02))
                    :op2 (c2-21 / suppose-01
                                :ARG0 (c2-24 / i)
                                :ARG1 (c2-3 / have-condition-91
                                            :ARG1 (c2-13 / obligate-01
                                                         :ARG1 c2-4
                                                         :ARG2 c2-4
                                                         :ARG1 (c2-7 / he)
                                                         :ARG2 c2-8
                                                         :mod (c2-1 / as-well)))
                                :ARG2 (c2-16 / racist
                                             :domain (c2-25 / it)
                                             :degree (c2-34 / percentage-entity
                                                            :value 2))))
       :snt2 (c2-19 / wonder-01
                    :ARG0 (c2-31 / i)
                    :ARG1 (c2-15 / thing
                                 :ARG0-of (c2-0 / cause-01
                                                :ARG1 (c2-14 / hate-01
                                                             :ARG0 (c2-12 / celebrity
                                                                          :mod (c2-10 / this))
                                                             :ARG1 (c2-27 / country
                                                                          :poss (c2-5 / we))
                                                             :degree (c2-29 / much
                                                                            :degree (c2-33 / so)))))
                    :snt3 (c2-23 / cause-01
                                 :ARG0 (c2-35 / amr-unknown)
                                 :ARG1 (c2-32 / live-01
                                              :ARG0 (c2-11 / he)
                                              :location (c2-26 / somewhere
                                                               :mod (c2-22 / else))
                                              :condition (c2-2 / awful
                                                               :degree (c2-6 / so))
                                              :polarity -))))

# ::snt Why doesn t he live somewhere else ... you mean go back home ?
# ::tokens ["Why", "doesn", "t", "he", "live", "somewhere", "else", "...", "you", "mean", "go", "back", "home", "?"]
# ::lemmas ["why", "doesn", "t", "he", "live", "somewhere", "else", "...", "you", "mean", "go", "back", "home", "?"]
(c3-2 / cause-01
      :ARG0 (c3-1 / amr-unknown)
      :ARG1 (c3-4 / live-01
                  :ARG0 (c3-3 / he)
                  :location (c3-0 / somewhere
                                  :mod (c3-10 / else))
                  :polarity -)
      :ARG1-of (c3-7 / mean-01
                     :ARG0 (c3-9 / you)
                     :ARG2 (c3-5 / go-02
                                 :ARG0 c3-3
                                 :ARG4 (c3-6 / home)
                                 :direction (c3-8 / back))))
