# ::snt yes , you illegals open borders , terrorist loving , high tax libtards are lol
# ::tokens ["yes", ",", "you", "illegals", "open", "borders", ",", "terrorist", "loving", ",", "high", "tax", "libtards", "are", "lol"]
# ::lemmas ["yes", ",", "you", "illegal", "open", "border", ",", "terrorist", "loving", ",", "high", "tax", "libtard", "be", "lol"]
(c1-1 / and
      :op1 (c1-15 / yes)
      :op2 (c1-14 / person
                  :ARG1-of (c1-10 / legal-02
                                  :polarity -)
                  :domain (c1-16 / you)
                  :ARG0-of (c1-6 / open-01
                                 :ARG1 (c1-12 / border)))
      :op3 (c1-7 / person
                 :ARG1-of (c1-11 / liberal-02
                                 :ARG2 (c1-8 / tax))
                 :ARG0-of (c1-0 / love-01
                                :ARG1 (c1-3 / terrorist)))
      :op4 (c1-9 / retard
                 :ARG1-of (c1-4 / high-02)
                 :mod c1-8)
      :ARG2-of (c1-5 / laugh-01
                     :ARG0 (c1-2 / i)
                     :manner (c1-13 / loud)
                     :mode expressive))

# ::snt Rather be a libtard than a a * * hole
# ::tokens ["Rather", "be", "a", "libtard", "than", "a", "a", "*", "*", "hole"]
# ::lemmas ["rather", "be", "a", "libtard", "than", "a", "a", "*", "*", "hole"]
(c2-4 / instead-of-91
      :ARG1 (c2-3 / person
                  :ARG1-of (c2-2 / liberal-02)
                  :domain (c2-5 / you))
      :ARG2 (c2-1 / hole
                  :mod (c2-0 / a)))

# ::snt rather be all those things you mentioned than a cheating lying filthy cabal of illegitimate Politicians .
# ::tokens ["rather", "be", "all", "those", "things", "you", "mentioned", "than", "a", "cheating", "lying", "filthy", "cabal", "of", "illegitimate", "Politicians", "."]
# ::lemmas ["rather", "be", "all", "those", "thing", "you", "mention", "than", "a", "cheating", "lie", "filthy", "cabal", "of", "illegitimate", "Politicians", "."]
(c3-9 / prefer-01
      :ARG1 (c3-6 / thing
                  :mod (c3-1 / all)
                  :mod (c3-4 / that)
                  :ARG1-of (c3-10 / mention-01
                                  :ARG0 (c3-11 / you)))
      :ARG2 (c3-3 / cabal
                  :ARG0-of (c3-7 / lie-08)
                  :mod (c3-2 / filthy)
                  :consist-of (c3-5 / politician
                                    :ARG1-of (c3-8 / legitimate-02
                                                   :polarity -))
                  :ARG0-of (c3-0 / cheat-03)))

# ::snt Let me know how that thing works out for you . All hung for treason after as I recall
# ::tokens ["Let", "me", "know", "how", "that", "thing", "works", "out", "for", "you", ".", "All", "hung", "for", "treason", "after", "as", "I", "recall"]
# ::lemmas ["let", "i", "know", "how", "that", "thing", "work", "out", "for", "you", ".", "all", "hang", "for", "treason", "after", "as", "i", "recall"]
(c4-11 / multi-sentence
       :snt1 (c4-9 / let-know-07
                   :ARG0 (c4-12 / you)
                   :ARG1 (c4-10 / i)
                   :ARG2 (c4-7 / thing
                               :manner-of (c4-2 / work-out-02
                                                :ARG1 (c4-3 / thing
                                                            :mod (c4-1 / that))
                                                :beneficiary c4-12))
                   :mode imperative)
       :snt2 (c4-4 / hang-07
                   :ARG1 (c4-0 / all)
                   :ARG2 (c4-5 / treason)
                   :time (c4-13 / after
                                :ARG1-of (c4-8 / recall-02
                                               :ARG0 (c4-6 / i)))))

# ::snt seems your puzzay got hurt . have you tried advil ? <URL>
# ::tokens ["seems", "your", "puzzay", "got", "hurt", ".", "have", "you", "tried", "advil", "?", "<", "URL", ">"]
# ::lemmas ["seem", "your", "puzzay", "got", "hurt", ".", "have", "you", "try", "advil", "?", "<", "URL", ">"]
(c5-6 / multi-sentence
      :snt1 (c5-0 / seem-01
                  :ARG1 (c5-2 / hurt-01
                              :ARG1 (c5-5 / puzzle-01
                                          :ARG0 (c5-7 / you))))
      :snt2 (c5-4 / try-01
                  :ARG0 (c5-8 / you)
                  :ARG1 (c5-1 / advil)
                  :polarity (c5-3 / amr-unknown)))

# ::snt The pot calls the kettle black yet again Natzi's were socialists ie Bernie Sanders and the Ilk
# ::tokens ["The", "pot", "calls", "the", "kettle", "black", "yet", "again", "Natzi", "'s", "were", "socialists", "ie", "Bernie", "Sanders", "and", "the", "Ilk"]
# ::lemmas ["the", "pot", "call", "the", "kettle", "black", "yet", "again", "Natzi", "'s", "be", "socialists", "ie", "Bernie", "Sanders", "and", "the", "Ilk"]
(c6-3 / call-01
      :ARG0 (c6-11 / pot)
      :ARG1 (c6-13 / kettle
                   :ARG1-of (c6-10 / black-04))
      :ARG2 (c6-7 / person
                  :mod (c6-5 / political-movement
                             :name (c6-9 / name
                                         :op1 "socialism"))
                  :domain (c6-4 / person
                                :name (c6-8 / name
                                            :op1 "Natzi"))
                  :ARG1-of (c6-12 / mean-01
                                  :ARG2 (c6-1 / and
                                              :op1 (c6-0 / person
                                                         :name (c6-6 / name
                                                                     :op1 "Bernie"
                                                                     :op2 "Sanders"))
                                              :op2 (c6-16 / ethnic-group
                                                          :name (c6-2 / name
                                                                      :op1 "Ilk")))))
      :mod (c6-15 / again
                  :mod (c6-14 / yet)))

# ::snt ok so natzi thing don't fit so he switches to KKK , by the way Democrats started KKK
# ::tokens ["ok", "so", "natzi", "thing", "do", "n't", "fit", "so", "he", "switches", "to", "KKK", ",", "by", "the", "way", "Democrats", "started", "KKK"]
# ::lemmas ["ok", "so", "natzi", "thing", "do", "not", "fit", "so", "he", "switch", "to", "KKK", ",", "by", "the", "way", "Democrats", "start", "KKK"]
(c7-3 / cause-01
      :ARG0 (c7-2 / fit-06
                  :ARG1 (c7-9 / thing
                              :mod (c7-14 / person
                                          :name (c7-15 / name
                                                       :op1 "Natzi")))
                  :ARG0-of (c7-0 / cause-01
                                 :ARG1 (c7-1 / switch-01
                                             :ARG1 c7-14
                                             :ARG2 (c7-7 / organization
                                                         :name (c7-10 / name
                                                                      :op1 "KKK"))))
                  :polarity -)
      :ARG1 (c7-13 / start-01
                   :ARG0 (c7-8 / person
                               :ARG0-of (c7-5 / have-org-role-91
                                              :ARG1 (c7-4 / political-party
                                                          :name (c7-11 / name
                                                                       :op1 "Democratic"
                                                                       :op2 "Party"))))
                   :ARG1 c7-7
                   :mod (c7-12 / by-the-way))
      :ARG1-of (c7-6 / okay-04))

# ::snt Either you're uneducated and don't know how to spell or ur a .
# ::tokens ["Either", "you", "'re", "uneducated", "and", "do", "n't", "know", "how", "to", "spell", "or", "ur", "a", "."]
# ::lemmas ["either", "you", "be", "uneducated", "and", "do", "not", "know", "how", "to", "spell", "or", "ur", "a", "."]
(c8-2 / or
      :op1 (c8-6 / educate-01
                 :ARG1 (c8-5 / you)
                 :polarity -)
      :op2 (c8-4 / know-01
                 :ARG0 c8-5
                 :ARG1 (c8-1 / or
                             :op1 (c8-0 / spell-01
                                        :ARG0 c8-5)
                             :op2 (c8-3 / string-entity
                                        :value "a"))
                 :polarity -))
