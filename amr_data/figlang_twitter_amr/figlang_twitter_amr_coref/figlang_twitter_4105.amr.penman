# ::snt hm ? Oh no ! I just thought . . . well you didnt exactly need me at the moment , and I feel like I'm crowind you .
# ::tokens ["hm", "?", "Oh", "no", "!", "I", "just", "thought", ".", ".", ".", "well", "you", "did", "nt", "exactly", "need", "me", "at", "the", "moment", ",", "and", "I", "feel", "like", "I", "'m", "crowind", "you", "."]
# ::lemmas ["hm", "?", "oh", "no", "!", "i", "just", "think", ".", ".", ".", "well", "you", "do", "nt", "exactly", "need", "i", "at", "the", "moment", ",", "and", "i", "feel", "like", "i", "be", "crowind", "you", "."]
(c1-8 / multi-sentence
      :snt1 (c1-4 / oh-no
                  :mode expressive)
      :snt2 (c1-0 / and
                  :op1 (c1-5 / think-01
                             :ARG0 (c1-7 / i)
                             :ARG1 (c1-9 / need-01
                                         :ARG0 (c1-10 / you)
                                         :ARG1 c1-7
                                         :time (c1-2 / moment)
                                         :mod (c1-11 / exact)
                                         :polarity -)
                             :mod (c1-6 / just))
                  :op2 (c1-1 / feel-01
                             :ARG0 c1-7
                             :ARG1 (c1-3 / crowind-00
                                         :ARG0 c1-7
                                         :ARG1 c1-10))))

# ::snt " I dont accept much things , " he said . " I was made to give . What do you require , ? " He asks and stands up , tilting his head .
# ::tokens ["\"", "I", "do", "nt", "accept", "much", "things", ",", "\"", "he", "said", ".", "\"", "I", "was", "made", "to", "give", ".", "What", "do", "you", "require", ",", "?", "\"", "He", "asks", "and", "stands", "up", ",", "tilting", "his", "head", "."]
# ::lemmas ["\"", "i", "do", "not", "accept", "much", "thing", ",", "\"", "he", "say", ".", "\"", "i", "be", "make", "to", "give", ".", "what", "do", "you", "require", ",", "?", "\"", "he", "ask", "and", "stand", "up", ",", "tilt", "his", "head", "."]
(c2-9 / multi-sentence
      :snt1 (c2-11 / say-01
                   :ARG0 (c2-16 / he)
                   :ARG1 (c2-14 / accept-01
                                :ARG0 c2-16
                                :ARG1 (c2-6 / thing
                                            :quant (c2-15 / much))
                                :polarity -))
      :snt2 (c2-10 / and
                   :op1 (c2-12 / make-02
                               :ARG1 (c2-8 / give-01
                                           :ARG0 (c2-2 / he
                                                       :part (c2-3 / head))))
                   :op2 (c2-7 / require-01
                              :ARG0 (c2-13 / you)
                              :ARG1 (c2-0 / amr-unknown)))
      :snt3 (c2-18 / and
                   :op1 (c2-1 / ask-01
                              :ARG0 (c2-5 / he
                                          :part c2-3))
                   :op2 (c2-17 / stand-up-07
                               :ARG1 c2-5)
                   :op3 (c2-4 / tilting
                              :op1 c2-3)))

# ::snt made to give huh . . . oh , no i dont need anything , that's sweet . But you dont accept . . . why is that ? he asked the otherm
# ::tokens ["made", "to", "give", "huh", ".", ".", ".", "oh", ",", "no", "i", "do", "nt", "need", "anything", ",", "that", "'s", "sweet", ".", "But", "you", "do", "nt", "accept", ".", ".", ".", "why", "is", "that", "?", "he", "asked", "the", "otherm"]
# ::lemmas ["make", "to", "give", "huh", ".", ".", ".", "oh", ",", "no", "i", "do", "not", "need", "anything", ",", "that", "be", "sweet", ".", "but", "you", "do", "not", "accept", ".", ".", ".", "why", "be", "that", "?", "he", "ask", "the", "otherm"]
(c3-13 / multi-sentence
       :snt1 (c3-5 / make-02
                   :ARG1 (c3-10 / give-01)
                   :mod (c3-6 / huh))
       :snt2 (c3-4 / contrast-01
                   :ARG1 (c3-14 / need-01
                                :ARG0 (c3-12 / i)
                                :ARG1 (c3-3 / anything)
                                :mod (c3-7 / oh
                                           :mode expressive)
                                :polarity -)
                   :ARG2 (c3-0 / sweet-03
                               :ARG1 c3-14))
       :snt3 c3-4
       :ARG2 (c3-16 / accept-01
                    :ARG0 (c3-15 / you)
                    :ARG1 (c3-9 / that)
                    :ARG1-of (c3-1 / cause-01
                                   :ARG0 (c3-2 / amr-unknown))
                    :polarity -)
       :snt4 (c3-8 / ask-01
                   :ARG0 (c3-11 / he)
                   :ARG1 c3-2))

# ::snt He shrugged and gave a confused look . " I dont know . It is in my programming ... " he said and took a moment to search >
# ::tokens ["He", "shrugged", "and", "gave", "a", "confused", "look", ".", "\"", "I", "do", "nt", "know", ".", "It", "is", "in", "my", "programming", "...", "\"", "he", "said", "and", "took", "a", "moment", "to", "search", ">"]
# ::lemmas ["he", "shrug", "and", "give", "a", "confused", "look", ".", "\"", "i", "do", "not", "know", ".", "it", "be", "in", "my", "programming", "...", "\"", "he", "say", "and", "take", "a", "moment", "to", "search", ">"]
(c4-15 / multi-sentence
       :snt1 (c4-1 / and
                   :op1 (c4-0 / shrug-01
                              :ARG0 (c4-4 / he))
                   :op2 (c4-12 / give-01
                               :ARG0 c4-4
                               :ARG1 (c4-10 / look-01
                                            :ARG0 c4-4
                                            :ARG1-of (c4-2 / confuse-01))))
       :snt2 (c4-17 / and
                    :op1 (c4-13 / say-01
                                :ARG0 (c4-7 / he)
                                :ARG1 (c4-16 / know-01
                                             :ARG0 c4-7
                                             :polarity -))
                    :op2 (c4-6 / be-located-at-91
                               :ARG1 (c4-14 / it)
                               :ARG2 (c4-11 / program-01
                                            :ARG0 c4-7)))
       :snt3 (c4-9 / take-01
                   :ARG0 (c4-5 / search-01
                               :ARG0 (c4-8 / i))
                   :ARG1 (c4-3 / moment)))

# ::snt < through everything , falling silent as he does so .
# ::tokens ["<", "through", "everything", ",", "falling", "silent", "as", "he", "does", "so", "."]
# ::lemmas ["<", "through", "everything", ",", "fall", "silent", "as", "he", "do", "so", "."]
(c5-2 / fall-01
      :ARG4 (c5-0 / silent)
      :path (c5-5 / everything)
      :manner (c5-1 / do-02
                    :ARG0 (c5-3 / he)
                    :ARG1 (c5-4 / so)))

# ::snt Mark blinked as he watched . you should accept as well . . . not just give you know . he said as he walked over to virus .
# ::tokens ["Mark", "blinked", "as", "he", "watched", ".", "you", "should", "accept", "as", "well", ".", ".", ".", "not", "just", "give", "you", "know", ".", "he", "said", "as", "he", "walked", "over", "to", "virus", "."]
# ::lemmas ["Mark", "blink", "as", "he", "watch", ".", "you", "should", "accept", "as", "well", ".", ".", ".", "not", "just", "give", "you", "know", ".", "he", "say", "as", "he", "walk", "over", "to", "virus", "."]
(c6-12 / multi-sentence
       :snt1 (c6-9 / blink-01
                   :ARG0 (c6-11 / person
                                :name (c6-13 / name
                                             :op1 "Mark"))
                   :time (c6-3 / watch-01
                               :ARG0 c6-11))
       :snt2 (c6-0 / say-01
                   :ARG0 (c6-5 / he)
                   :ARG1 (c6-7 / recommend-01
                               :ARG1 (c6-1 / accept-01
                                           :ARG0 (c6-14 / you)
                                           :mod (c6-15 / as-well)
                                           :ARG1-of (c6-2 / contrast-01
                                                          :ARG2 (c6-8 / give-know-07
                                                                      :ARG0 c6-5
                                                                      :ARG1 c6-14
                                                                      :mod (c6-10 / just)
                                                                      :polarity -))))
                   :time (c6-4 / walk-01
                               :ARG0 c6-5
                               :ARG2 (c6-6 / virus))))

# ::snt what are you doing Viri ? he asked as he uncrossed his arms .
# ::tokens ["what", "are", "you", "doing", "Viri", "?", "he", "asked", "as", "he", "uncrossed", "his", "arms", "."]
# ::lemmas ["what", "be", "you", "do", "Viri", "?", "he", "ask", "as", "he", "uncross", "his", "arm", "."]
(c7-2 / ask-01
      :ARG0 (c7-3 / he
                  :part (c7-7 / arm))
      :ARG1 (c7-0 / do-02
                  :ARG0 (c7-5 / person
                              :name (c7-6 / name
                                          :op1 "Viri"))
                  :ARG1 (c7-1 / amr-unknown))
      :time (c7-4 / uncross-01
                  :ARG0 c7-3
                  :ARG1 c7-7))

# ::snt Virus snappdd back to reality and looked to . " Mark , as you could probably tell , I was made after you . So , I was made >
# ::tokens ["Virus", "snappdd", "back", "to", "reality", "and", "looked", "to", ".", "\"", "Mark", ",", "as", "you", "could", "probably", "tell", ",", "I", "was", "made", "after", "you", ".", "So", ",", "I", "was", "made", ">"]
# ::lemmas ["virus", "snappdd", "back", "to", "reality", "and", "look", "to", ".", "\"", "Mark", ",", "as", "you", "could", "probably", "tell", ",", "i", "be", "make", "after", "you", ".", "so", ",", "i", "be", "make", ">"]
(c8-4 / multi-sentence
      :snt1 (c8-12 / and
                   :op1 (c8-7 / snappdd-01
                              :ARG1 (c8-1 / virus)
                              :direction (c8-16 / back)
                              :destination (c8-3 / reality))
                   :op2 (c8-15 / look-01
                               :ARG0 c8-1))
      :snt2 (c8-17 / say-01
                   :ARG0 (c8-0 / i)
                   :ARG1 (c8-13 / make-01
                                :ARG1 (c8-9 / i)
                                :time (c8-6 / after
                                            :op1 (c8-10 / you))
                                :ARG1-of (c8-2 / tell-01
                                               :ARG0 (c8-11 / you)
                                               :ARG1-of (c8-18 / possible-01)
                                               :mod (c8-14 / probable)))
                   :ARG2 (c8-8 / person
                               :name (c8-5 / name
                                           :op1 "Mark"))))

# ::snt < to work tirelessly for humans and get nothing in return . " He grins . That didnt sound good at all .
# ::tokens ["<", "to", "work", "tirelessly", "for", "humans", "and", "get", "nothing", "in", "return", ".", "\"", "He", "grins", ".", "That", "did", "nt", "sound", "good", "at", "all", "."]
# ::lemmas ["<", "to", "work", "tirelessly", "for", "human", "and", "get", "nothing", "in", "return", ".", "\"", "he", "grin", ".", "that", "do", "not", "sound", "good", "at", "all", "."]
(c9-10 / multi-sentence
       :snt1 (c9-2 / and
                   :op1 (c9-3 / work-01
                              :ARG0 (c9-4 / human)
                              :manner (c9-7 / relentless))
                   :op2 (c9-8 / get-01
                              :ARG0 c9-4
                              :ARG1 (c9-11 / nothing
                                           :ARG1-of (c9-5 / return-05))))
       :snt2 (c9-12 / grin-01
                    :ARG0 (c9-9 / he))
       :snt3 (c9-0 / sound-01
                   :ARG1 (c9-6 / that)
                   :ARG2 (c9-1 / good-02)
                   :mod (c9-13 / at-all)
                   :polarity -))

# ::snt Mark blinked . Yeah that wasnt good at all ! Thats not good at all ! I mean it ! he said as he placed a hand on virus shoulder .
# ::tokens ["Mark", "blinked", ".", "Yeah", "that", "was", "nt", "good", "at", "all", "!", "That", "s", "not", "good", "at", "all", "!", "I", "mean", "it", "!", "he", "said", "as", "he", "placed", "a", "hand", "on", "virus", "shoulder", "."]
# ::lemmas ["Mark", "blink", ".", "yeah", "that", "be", "not", "good", "at", "all", "!", "that", "s", "not", "good", "at", "all", "!", "i", "mean", "it", "!", "he", "say", "as", "he", "place", "a", "hand", "on", "virus", "shoulder", "."]
(c10-7 / multi-sentence
       :snt1 (c10-17 / blink-01
                     :ARG0 (c10-19 / person
                                   :name (c10-8 / name
                                                :op1 "Mark")))
       :snt2 (c10-13 / and
                     :op1 (c10-6 / good-02
                                 :ARG1 (c10-5 / that)
                                 :degree (c10-9 / at-all)
                                 :polarity -)
                     :op2 (c10-12 / good-02
                                  :ARG1 (c10-3 / that)
                                  :degree (c10-0 / at-all)
                                  :polarity -)
                     :op3 (c10-14 / mean-02
                                  :ARG0 (c10-2 / i)
                                  :ARG1 (c10-11 / it)))
       :snt3 (c10-10 / say-01
                     :ARG0 (c10-15 / he
                                   :part (c10-1 / hand))
                     :time (c10-16 / place-01
                                   :ARG0 c10-15
                                   :ARG1 c10-1
                                   :ARG2 (c10-18 / shoulder
                                                 :part-of (c10-4 / virus)))))

# ::snt Virus cocked his head to the side evwn more , confused by ' s words . " I am just scrap , no ? Nothing of importance . " He was >
# ::tokens ["Virus", "cocked", "his", "head", "to", "the", "side", "evwn", "more", ",", "confused", "by", "'", "s", "words", ".", "\"", "I", "am", "just", "scrap", ",", "no", "?", "Nothing", "of", "importance", ".", "\"", "He", "was", ">"]
# ::lemmas ["Virus", "cock", "his", "head", "to", "the", "side", "evwn", "more", ",", "confuse", "by", "'", "s", "word", ".", "\"", "i", "be", "just", "scrap", ",", "no", "?", "nothing", "of", "importance", ".", "\"", "he", "be", ">"]
(c11-15 / multi-sentence
        :snt1 (c11-4 / cock-01
                     :ARG0 (c11-14 / person
                                   :name (c11-16 / name
                                                 :op1 "Virus")
                                   :part (c11-8 / head
                                                :ARG1-of c11-4))
                     :direction (c11-0 / side)
                     :ARG1-of (c11-1 / cause-01
                                     :ARG0 (c11-13 / have-quant-91
                                                   :ARG1 c11-8
                                                   :ARG3 (c11-5 / more))))
        :snt2 (c11-10 / confuse-01
                      :ARG0 (c11-6 / word-01
                                   :ARG0 c11-14))
        :ARG1 c11-14
        :snt3 (c11-3 / and
                     :op1 (c11-2 / scrap-01
                                 :ARG0 (c11-7 / i)
                                 :mod (c11-11 / just))
                     :op2 (c11-12 / nothing
                                  :ARG1-of (c11-9 / important-01))))

# ::snt < still smiling as he was saying this , thinking that this was actually what robots were used for now a days ; as slaves .
# ::tokens ["<", "still", "smiling", "as", "he", "was", "saying", "this", ",", "thinking", "that", "this", "was", "actually", "what", "robots", "were", "used", "for", "now", "a", "days", ";", "as", "slaves", "."]
# ::lemmas ["<", "still", "smile", "as", "he", "be", "say", "this", ",", "think", "that", "this", "be", "actually", "what", "robot", "be", "use", "for", "now", "a", "day", ";", "as", "slave", "."]
(c12-0 / smile-01
       :ARG0 (c12-12 / i)
       :time (c12-11 / say-01
                     :ARG0 (c12-5 / he)
                     :ARG1 (c12-8 / this))
       :mod (c12-6 / still)
       :ARG1-of (c12-3 / cause-01
                       :ARG0 (c12-4 / think-01
                                    :ARG0 c12-12
                                    :ARG1 (c12-9 / robot
                                                 :ARG1-of (c12-7 / use-01
                                                                 :time (c12-14 / now)
                                                                 :duration (c12-13 / multiple
                                                                                   :op1 (c12-15 / temporal-quantity
                                                                                                :unit (c12-1 / day)
                                                                                                :quant 1))
                                                                 :prep-as (c12-10 / slave))
                                                 :domain c12-8
                                                 :ARG1-of (c12-2 / actual-02)))))

# ::snt no ! Every living being , or robot matters and is important . If your not having fun , dont do it ! he told . Completely serious .
# ::tokens ["no", "!", "Every", "living", "being", ",", "or", "robot", "matters", "and", "is", "important", ".", "If", "your", "not", "having", "fun", ",", "do", "nt", "do", "it", "!", "he", "told", ".", "Completely", "serious", "."]
# ::lemmas ["no", "!", "every", "live", "being", ",", "or", "robot", "matter", "and", "be", "important", ".", "if", "your", "not", "have", "fun", ",", "do", "not", "do", "it", "!", "he", "tell", ".", "completely", "serious", "."]
(c13-14 / multi-sentence
        :snt1 (c13-15 / no
                      :mode expressive)
        :snt2 (c13-2 / and
                     :op1 (c13-4 / matter-01
                                 :ARG1 (c13-8 / or
                                              :op1 (c13-12 / being
                                                           :mod (c13-11 / live-01))
                                              :op2 (c13-10 / robot)
                                              :mod (c13-17 / every)))
                     :op2 (c13-13 / important-01
                                  :ARG1 c13-8))
        :snt3 (c13-0 / do-02
                     :ARG0 (c13-16 / you)
                     :ARG1 (c13-6 / it)
                     :condition (c13-3 / fun-01
                                       :ARG0 c13-16
                                       :polarity -)
                     :polarity -
                     :mode imperative)
        :snt4 (c13-9 / tell-01
                     :ARG0 (c13-7 / he)
                     :ARG1 (c13-1 / serious-02
                                  :degree (c13-5 / complete))))

# ::snt " So .. what do you consider ' fun ' ? " He asked curiously and stepped a bit closer to , furrow in his brows .
# ::tokens ["\"", "So", "..", "what", "do", "you", "consider", "'", "fun", "'", "?", "\"", "He", "asked", "curiously", "and", "stepped", "a", "bit", "closer", "to", ",", "furrow", "in", "his", "brows", "."]
# ::lemmas ["\"", "so", "..", "what", "do", "you", "consider", "'", "fun", "'", "?", "\"", "he", "ask", "curiously", "and", "step", "a", "bit", "close", "to", ",", "furrow", "in", "his", "brow", "."]
(c14-3 / and
       :op1 (c14-10 / ask-01
                    :ARG0 (c14-6 / he
                                 :part (c14-7 / brow))
                    :ARG1-of (c14-5 / curious-01))
       :op2 (c14-0 / step-01
                   :ARG1 c14-6
                   :ARG2 (c14-1 / close-10
                                :ARG1 c14-6
                                :ARG2-of (c14-8 / have-degree-91
                                                :ARG1 c14-6
                                                :ARG3 (c14-9 / more
                                                             :quant (c14-2 / bit)))))
       :op3 (c14-4 / furrow-01
                   :location c14-7))

# ::snt for me its a lot of things . Youtube , fans , my friends . Doing stuoid stuff . Really , anything is . he said with a smile to .
# ::tokens ["for", "me", "its", "a", "lot", "of", "things", ".", "Youtube", ",", "fans", ",", "my", "friends", ".", "Doing", "stuoid", "stuff", ".", "Really", ",", "anything", "is", ".", "he", "said", "with", "a", "smile", "to", "."]
# ::lemmas ["for", "i", "its", "a", "lot", "of", "thing", ".", "youtube", ",", "fan", ",", "my", "friend", ".", "do", "stuoid", "stuff", ".", "really", ",", "anything", "be", ".", "he", "say", "with", "a", "smile", "to", "."]
(c15-6 / multi-sentence
       :snt1 (c15-4 / thing
                    :quant (c15-16 / lot)
                    :beneficiary (c15-2 / i)
                    :example (c15-12 / and
                                     :op1 (c15-18 / publication
                                                  :name (c15-7 / name
                                                               :op1 "YouTube"))
                                     :op2 (c15-13 / fan)
                                     :op3 (c15-15 / person
                                                  :ARG0-of (c15-14 / have-rel-role-91
                                                                   :ARG1 c15-2
                                                                   :ARG2 (c15-11 / friend)))))
       :snt2 (c15-0 / do-02
                    :ARG1 (c15-9 / stuff
                                 :mod (c15-17 / stuoid)))
       :snt3 (c15-8 / anything
                    :ARG1-of (c15-5 / real-04)
                    :ARG1-of (c15-10 / say-01
                                     :ARG0 (c15-1 / he)
                                     :manner (c15-3 / smile-01
                                                    :ARG0 c15-1))))

# ::snt " Oh .. I have never heard of these things before .. " he says and looks down again , humming under his breath .
# ::tokens ["\"", "Oh", "..", "I", "have", "never", "heard", "of", "these", "things", "before", "..", "\"", "he", "says", "and", "looks", "down", "again", ",", "humming", "under", "his", "breath", "."]
# ::lemmas ["\"", "oh", "..", "i", "have", "never", "hear", "of", "these", "thing", "before", "..", "\"", "he", "say", "and", "look", "down", "again", ",", "hum", "under", "his", "breath", "."]
(c16-3 / and
       :op1 (c16-0 / say-01
                   :ARG0 (c16-6 / he)
                   :ARG1 (c16-12 / hear-01
                                 :ARG0 c16-6
                                 :ARG1 (c16-9 / thing
                                              :mod (c16-5 / this))
                                 :time (c16-14 / ever)
                                 :time (c16-11 / before)
                                 :mod (c16-8 / oh)
                                 :polarity -))
       :op2 (c16-10 / look-01
                    :ARG0 c16-6
                    :ARG1 (c16-1 / down)
                    :mod (c16-13 / again))
       :op3 (c16-2 / hum-01
                   :ARG1 c16-6
                   :manner (c16-7 / under
                                  :op1 (c16-4 / breathe-01
                                              :ARG0 c16-6))))

# ::snt welk i can show you if you like . Its pretty amazing ! I promise you that . he said with a big smile .
# ::tokens ["welk", "i", "can", "show", "you", "if", "you", "like", ".", "Its", "pretty", "amazing", "!", "I", "promise", "you", "that", ".", "he", "said", "with", "a", "big", "smile", "."]
# ::lemmas ["welk", "i", "can", "show", "you", "if", "you", "like", ".", "its", "pretty", "amazing", "!", "i", "promise", "you", "that", ".", "he", "say", "with", "a", "big", "smile", "."]
(c17-14 / multi-sentence
        :snt1 (c17-13 / possible-01
                      :ARG1 (c17-0 / show-01
                                   :ARG0 (c17-2 / i)
                                   :ARG2 (c17-15 / you)
                                   :condition (c17-10 / like-02
                                                      :ARG0 c17-15))
                      :mod (c17-3 / wheelk
                                  :mode expressive))
        :snt2 (c17-1 / amaze-01
                     :ARG0 (c17-5 / it)
                     :degree (c17-9 / pretty)
                     :ARG1-of (c17-4 / promise-01
                                     :ARG0 (c17-6 / i)
                                     :ARG2 (c17-16 / you)))
        :snt3 (c17-12 / say-01
                      :ARG0 (c17-7 / he)
                      :manner (c17-8 / smile-01
                                     :ARG0 c17-7
                                     :mod (c17-11 / big))))

# ::snt " Actually ... sure ! " He said with a bit of excitement in his voice , his grin growing wider .
# ::tokens ["\"", "Actually", "...", "sure", "!", "\"", "He", "said", "with", "a", "bit", "of", "excitement", "in", "his", "voice", ",", "his", "grin", "growing", "wider", "."]
# ::lemmas ["\"", "actually", "...", "sure", "!", "\"", "he", "say", "with", "a", "bit", "of", "excitement", "in", "his", "voice", ",", "his", "grin", "grow", "wide", "."]
(c18-0 / say-01
       :ARG0 (c18-3 / he
                    :part (c18-5 / voice))
       :ARG1 (c18-8 / sure-02
                    :ARG1-of (c18-1 / actual-02)
                    :mode expressive)
       :manner (c18-11 / and
                       :op1 (c18-12 / excite-01
                                    :ARG0 (c18-7 / bit
                                                 :location c18-5)
                                    :ARG1 c18-3)
                       :op2 (c18-6 / grow-02
                                   :ARG1 (c18-10 / grin-01
                                                 :ARG0 c18-3)
                                   :ARG2 (c18-2 / wide-02
                                                :ARG2-of (c18-4 / have-degree-91
                                                                :ARG1 c18-10
                                                                :ARG3 (c18-9 / more))))))

# ::snt alright , which one would you like to see first ? Any is fine with me . he said with a smile to .
# ::tokens ["alright", ",", "which", "one", "would", "you", "like", "to", "see", "first", "?", "Any", "is", "fine", "with", "me", ".", "he", "said", "with", "a", "smile", "to", "."]
# ::lemmas ["alright", ",", "which", "one", "would", "you", "like", "to", "see", "first", "?", "any", "be", "fine", "with", "i", ".", "he", "say", "with", "a", "smile", "to", "."]
(c19-13 / multi-sentence
        :snt1 (c19-0 / say-01
                     :ARG0 (c19-4 / he)
                     :ARG1 (c19-2 / and
                                  :op1 (c19-10 / like-02
                                               :ARG0 (c19-14 / you)
                                               :ARG1 (c19-11 / see-01
                                                             :ARG0 c19-14
                                                             :ARG1 (c19-15 / amr-unknown
                                                                           :ARG1-of (c19-12 / include-91
                                                                                            :ARG2 (c19-1 / amr-unknown)))
                                                             :ord (c19-8 / ordinal-entity
                                                                         :value 1)))
                                  :op2 (c19-3 / fine-04
                                              :ARG1 (c19-9 / any)
                                              :ARG2 (c19-5 / i)))
                     :snt2-of c19-13)
        :ARG0 (c19-7 / he)
        :manner (c19-6 / smile-01
                       :ARG0 c19-7))
