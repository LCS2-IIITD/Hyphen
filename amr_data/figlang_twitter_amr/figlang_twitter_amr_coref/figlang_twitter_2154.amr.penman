# ::snt Spoken like a true Fascist . Keep stoking the fires of the real revolution .
# ::tokens ["Spoken", "like", "a", "true", "Fascist", ".", "Keep", "stoking", "the", "fires", "of", "the", "real", "revolution", "."]
# ::lemmas ["speak", "like", "a", "true", "Fascist", ".", "keep", "stoke", "the", "fire", "of", "the", "real", "revolution", "."]
(c1-10 / multi-sentence
       :snt1 (c1-0 / speak-01
                   :ARG1-of (c1-6 / resemble-01
                                  :ARG2 (c1-9 / person
                                              :mod (c1-4 / political-movement
                                                         :name (c1-11 / name
                                                                      :op1 "Fascism")
                                                         :ARG1-of (c1-5 / true-01)))))
       :snt2 (c1-1 / keep-02
                   :ARG0 (c1-12 / you)
                   :ARG1 (c1-8 / stoked-02
                               :ARG0 c1-12
                               :ARG1 (c1-2 / fire
                                           :poss (c1-3 / revolution-03
                                                       :ARG1-of (c1-7 / real-04))))
                   :mode imperative))

# ::snt Revolution happened on /8 / . The adults used what tools were given to them , the vote . Winner at .
# ::tokens ["Revolution", "happened", "on", "/8", "/", ".", "The", "adults", "used", "what", "tools", "were", "given", "to", "them", ",", "the", "vote", ".", "Winner", "at", "."]
# ::lemmas ["Revolution", "happen", "on", "/8", "/", ".", "the", "adult", "use", "what", "tool", "be", "give", "to", "they", ",", "the", "vote", ".", "Winner", "at", "."]
(c2-9 / multi-sentence
      :snt1 (c2-8 / political-movement
                  :name (c2-10 / name
                               :op1 "Revolution")
                  :time (c2-0 / date-entity
                              :month 8
                              :day 8))
      :snt2 (c2-3 / use-01
                  :ARG0 (c2-1 / adult)
                  :ARG1 (c2-6 / tool
                              :ARG1-of (c2-7 / give-01
                                             :ARG2 c2-1))
                  :purpose (c2-4 / vote-01
                                 :ARG0 c2-1))
      :snt3 (c2-5 / person
                  :ARG0-of (c2-2 / win-01)))

# ::snt Sorry , you voted in a NeoLiberal , same as the rest of them . You were hoodwinked .
# ::tokens ["Sorry", ",", "you", "voted", "in", "a", "NeoLiberal", ",", "same", "as", "the", "rest", "of", "them", ".", "You", "were", "hoodwinked", "."]
# ::lemmas ["sorry", ",", "you", "vote", "in", "a", "NeoLiberal", ",", "same", "as", "the", "rest", "of", "they", ".", "you", "be", "hoodwink", "."]
(c3-10 / multi-sentence
       :snt1 (c3-0 / sorry-01
                   :ARG1 (c3-12 / you)
                   :ARG2 (c3-4 / vote-01
                               :ARG0 c3-12
                               :ARG1 (c3-9 / person
                                           :mod (c3-5 / political-movement
                                                      :name (c3-11 / name
                                                                   :op1 "neoLiberal")))
                               :ARG1-of (c3-8 / same-01
                                              :ARG2 (c3-1 / vote-01
                                                          :ARG0 (c3-7 / rest
                                                                      :ARG1-of (c3-2 / include-91
                                                                                     :ARG2 (c3-6 / they)))))))
       :snt2 (c3-3 / hoodwink-00
                   :ARG1 (c3-13 / you)))

# ::snt All know he is not a real Rep . If he pulls off /3 of his promises then good . If not then every other politician .
# ::tokens ["All", "know", "he", "is", "not", "a", "real", "Rep", ".", "If", "he", "pulls", "off", "/3", "of", "his", "promises", "then", "good", ".", "If", "not", "then", "every", "other", "politician", "."]
# ::lemmas ["all", "know", "he", "be", "not", "a", "real", "Rep", ".", "if", "he", "pull", "off", "/3", "of", "his", "promise", "then", "good", ".", "if", "not", "then", "every", "other", "politician", "."]
(c4-8 / multi-sentence
      :snt1 (c4-18 / know-01
                   :ARG0 (c4-14 / all)
                   :ARG1 (c4-17 / person
                                :ARG0-of (c4-6 / represent-01)
                                :ARG1-of (c4-3 / real-04)
                                :domain (c4-15 / he)
                                :polarity -))
      :snt2 (c4-7 / good-02
                  :condition (c4-16 / pull-off-03
                                    :ARG0 (c4-0 / he)
                                    :ARG1 (c4-5 / thing
                                                :ARG1-of (c4-1 / include-91
                                                               :ARG2 (c4-2 / thing
                                                                           :ARG2-of (c4-12 / promise-01
                                                                                           :ARG0 c4-0)))
                                                :quant "1/3"))
                  :time (c4-9 / then))
      :snt3 (c4-11 / politician
                   :mod (c4-10 / every)
                   :mod (c4-4 / other)
                   :time (c4-13 / then
                                :polarity -)))

# ::snt Every other politician didn't mobilize a sleeping giant , then fail to deliver .
# ::tokens ["Every", "other", "politician", "did", "n't", "mobilize", "a", "sleeping", "giant", ",", "then", "fail", "to", "deliver", "."]
# ::lemmas ["every", "other", "politician", "do", "not", "mobilize", "a", "sleep", "giant", ",", "then", "fail", "to", "deliver", "."]
(c5-2 / and
      :op1 (c5-8 / mobilize-01
                 :ARG0 (c5-7 / politician
                             :mod (c5-9 / every)
                             :mod (c5-4 / other))
                 :ARG1 (c5-6 / giant
                             :ARG0-of (c5-0 / sleep-01))
                 :polarity -)
      :op2 (c5-3 / fail-01
                 :ARG1 c5-7
                 :ARG2 (c5-1 / deliver-01
                             :ARG0 c5-7)
                 :time (c5-5 / then)))

# ::snt its been days & he's not even sworn in yet . Look his tax plan , that might help u , if you work .
# ::tokens ["its", "been", "days", "&", "he", "'s", "not", "even", "sworn", "in", "yet", ".", "Look", "his", "tax", "plan", ",", "that", "might", "help", "u", ",", "if", "you", "work", "."]
# ::lemmas ["its", "be", "day", "&", "he", "be", "not", "even", "swear", "in", "yet", ".", "look", "his", "tax", "plan", ",", "that", "might", "help", "u", ",", "if", "you", "work", "."]
(c6-14 / multi-sentence
       :snt1 (c6-3 / and
                   :op1 (c6-5 / multiple
                              :op1 (c6-10 / temporal-quantity
                                          :unit (c6-0 / day)
                                          :quant 1))
                   :op2 (c6-1 / swear-in-06
                              :ARG0 (c6-8 / he)
                              :mod (c6-17 / even)
                              :time (c6-15 / yet)
                              :polarity -))
       :snt2 (c6-11 / look-01
                    :ARG0 (c6-16 / you)
                    :ARG1 (c6-13 / plan-01
                                 :ARG0 (c6-12 / he)
                                 :ARG1 (c6-7 / tax-01)
                                 :ARG0-of (c6-2 / help-01
                                                :ARG2 (c6-4 / you)
                                                :ARG1-of (c6-9 / possible-01)
                                                :condition (c6-6 / work-01
                                                                 :ARG0 c6-4)))
                    :mode imperative))

# ::snt I have looked at it . It will bankrupt us . Sorry this took so long but you see the dogpile on me ? !
# ::tokens ["I", "have", "looked", "at", "it", ".", "It", "will", "bankrupt", "us", ".", "Sorry", "this", "took", "so", "long", "but", "you", "see", "the", "dogpile", "on", "me", "?", "!"]
# ::lemmas ["i", "have", "look", "at", "it", ".", "it", "will", "bankrupt", "we", ".", "sorry", "this", "take", "so", "long", "but", "you", "see", "the", "dogpile", "on", "i", "?", "!"]
(c7-8 / multi-sentence
      :snt1 (c7-16 / look-01
                   :ARG0 (c7-2 / i)
                   :ARG1 (c7-10 / it))
      :snt2 (c7-17 / bankrupt-01
                   :ARG0 (c7-11 / it)
                   :ARG1 (c7-4 / we))
      :snt3 (c7-3 / contrast-01
                  :ARG1 (c7-9 / sorry-01
                              :ARG1 (c7-15 / i)
                              :ARG2 (c7-7 / take-10
                                          :ARG1 (c7-5 / this)
                                          :ARG2 (c7-1 / long-03
                                                      :degree (c7-18 / so))))
                  :ARG2 (c7-12 / see-01
                               :polarity (c7-14 / amr-unknown)
                               :ARG0 (c7-13 / you)
                               :ARG1 (c7-0 / dogpile
                                           :location (c7-6 / i)))))

# ::snt And of course you will get piled on . Both sides are guilty . Lets see what Trump does first days
# ::tokens ["And", "of", "course", "you", "will", "get", "piled", "on", ".", "Both", "sides", "are", "guilty", ".", "Lets", "see", "what", "Trump", "does", "first", "days"]
# ::lemmas ["and", "of", "course", "you", "will", "get", "pile", "on", ".", "both", "side", "be", "guilty", ".", "let", "see", "what", "Trump", "do", "first", "days"]
(c8-14 / multi-sentence
       :snt1 (c8-2 / and
                   :op2 (c8-13 / pile-on-02
                               :ARG1 (c8-16 / you)
                               :mod (c8-6 / of-course)))
       :snt2 (c8-11 / guilty-01
                    :ARG1 (c8-0 / side
                                :mod (c8-15 / both)))
       :snt3 (c8-9 / let-01
                   :ARG1 (c8-12 / see-01
                                :ARG0 (c8-3 / we)
                                :ARG1 (c8-8 / thing
                                            :ARG1-of (c8-1 / do-02
                                                           :ARG0 (c8-7 / person
                                                                       :name (c8-10 / name
                                                                                    :op1 "Trump"))
                                                           :time (c8-4 / day
                                                                       :ord (c8-5 / ordinal-entity
                                                                                  :value 1)))))))

# ::snt The same " wait and see " attitude was applied to the likes of Hitler , you know .
# ::tokens ["The", "same", "\"", "wait", "and", "see", "\"", "attitude", "was", "applied", "to", "the", "likes", "of", "Hitler", ",", "you", "know", "."]
# ::lemmas ["the", "same", "\"", "wait", "and", "see", "\"", "attitude", "be", "apply", "to", "the", "like", "of", "Hitler", ",", "you", "know", "."]
(c9-1 / apply-02
      :ARG1 (c9-10 / attitude
                   :ARG1-of (c9-0 / same-01)
                   :mod (c9-3 / wait-01)
                   :mod (c9-6 / see-01))
      :ARG2 (c9-7 / person
                  :ARG1-of (c9-5 / resemble-01
                                 :ARG2 (c9-4 / person
                                             :name (c9-8 / name
                                                         :op1 "Hitler"))))
      :mod (c9-2 / know-06
                 :ARG0 (c9-9 / you)))

# ::snt If you really think he will be like Hitler then you are naive to what she would have been .
# ::tokens ["If", "you", "really", "think", "he", "will", "be", "like", "Hitler", "then", "you", "are", "naive", "to", "what", "she", "would", "have", "been", "."]
# ::lemmas ["if", "you", "really", "think", "he", "will", "be", "like", "Hitler", "then", "you", "be", "naive", "to", "what", "she", "would", "have", "be", "."]
(c10-8 / naive
       :domain (c10-9 / you)
       :topic (c10-4 / thing
                     :domain (c10-0 / she))
       :condition (c10-1 / think-01
                         :ARG0 c10-9
                         :ARG1 (c10-5 / resemble-01
                                      :ARG1 (c10-2 / he)
                                      :ARG2 (c10-7 / person
                                                   :name (c10-6 / name
                                                                :op1 "Hitler")))
                         :ARG1-of (c10-3 / real-04)))

# ::snt Just pointing out a time where " wait and see " led to horrible things because good men did nothing .
# ::tokens ["Just", "pointing", "out", "a", "time", "where", "\"", "wait", "and", "see", "\"", "led", "to", "horrible", "things", "because", "good", "men", "did", "nothing", "."]
# ::lemmas ["just", "point", "out", "a", "time", "where", "\"", "wait", "and", "see", "\"", "lead", "to", "horrible", "thing", "because", "good", "man", "do", "nothing", "."]
(c11-11 / point-out-02
        :ARG0 (c11-3 / i)
        :ARG1 (c11-8 / lead-03
                     :ARG0 (c11-2 / and
                                  :op1 (c11-4 / wait-01
                                              :ARG1 (c11-14 / you)
                                              :mode imperative)
                                  :op2 (c11-0 / see-01
                                              :ARG0 c11-14
                                              :mode imperative))
                     :ARG2 (c11-7 / thing
                                  :mod (c11-6 / horrible))
                     :ARG1-of (c11-5 / cause-01
                                     :ARG0 (c11-1 / do-02
                                                  :ARG0 (c11-12 / man
                                                                :ARG1-of (c11-9 / good-02))
                                                  :ARG1 (c11-13 / nothing))))
        :mod (c11-10 / just))

# ::snt You should go relax . The problem here is people are being fear mongered much like Trump was accused
# ::tokens ["You", "should", "go", "relax", ".", "The", "problem", "here", "is", "people", "are", "being", "fear", "mongered", "much", "like", "Trump", "was", "accused"]
# ::lemmas ["you", "should", "go", "relax", ".", "the", "problem", "here", "be", "people", "be", "be", "fear", "monger", "much", "like", "Trump", "be", "accuse"]
(c12-11 / multi-sentence
        :snt1 (c12-8 / recommend-01
                     :ARG1 (c12-9 / go-05
                                  :ARG0 (c12-13 / you)
                                  :ARG1 (c12-6 / relax-01
                                               :ARG1 c12-13))
                     :ARG2 c12-13)
        :snt2 (c12-10 / problem
                      :location (c12-5 / here)
                      :domain (c12-2 / fear-01
                                     :ARG1 (c12-7 / person)
                                     :ARG1-of (c12-0 / resemble-01
                                                     :ARG2 (c12-1 / accuse-01
                                                                  :ARG1 (c12-4 / person
                                                                               :name (c12-12 / name
                                                                                             :op1 "Trump")))
                                                     :degree (c12-3 / much)))))
