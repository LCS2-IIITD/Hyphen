# ::snt When using for developing locally , how long do you wait for the files to sync ?
# ::tokens ["When", "using", "for", "developing", "locally", ",", "how", "long", "do", "you", "wait", "for", "the", "files", "to", "sync", "?"]
# ::lemmas ["when", "use", "for", "develop", "locally", ",", "how", "long", "do", "you", "wait", "for", "the", "file", "to", "sync", "?"]
(c1-4 / wait-01
      :ARG1 (c1-7 / you)
      :ARG2 (c1-0 / sync-01
                  :ARG1 (c1-3 / file))
      :duration (c1-2 / amr-unknown)
      :time (c1-5 / use-01
                  :ARG1 c1-3
                  :ARG2 (c1-1 / develop-02
                              :manner (c1-6 / local-02))))

# ::snt It is instant for me , it is dependent on the FS mount type . have had it not sync at all with older versions , !
# ::tokens ["It", "is", "instant", "for", "me", ",", "it", "is", "dependent", "on", "the", "FS", "mount", "type", ".", "have", "had", "it", "not", "sync", "at", "all", "with", "older", "versions", ",", "!"]
# ::lemmas ["it", "be", "instant", "for", "i", ",", "it", "be", "dependent", "on", "the", "FS", "mount", "type", ".", "have", "have", "it", "not", "sync", "at", "all", "with", "old", "version", ",", "!"]
(c2-15 / multi-sentence
       :snt1 (c2-14 / instant
                    :domain (c2-5 / it)
                    :beneficiary (c2-6 / i))
       :snt2 (c2-0 / depend-01
                   :ARG0 (c2-8 / it)
                   :ARG1 (c2-12 / type
                                :mod (c2-3 / mount
                                           :mod (c2-13 / product
                                                       :name (c2-16 / name
                                                                    :op1 "FS")))))
       :snt3 (c2-1 / sync-01
                   :ARG1 (c2-4 / it)
                   :ARG2 (c2-10 / version
                                :ARG1-of (c2-7 / have-degree-91
                                               :ARG2 (c2-11 / old)
                                               :ARG3 (c2-9 / more)))
                   :degree (c2-2 / at-all)
                   :polarity -))
