# ::snt Tell me how our dryer was supposed to be delivered on Saturday and we still have no dryer and no clear communication from
# ::tokens ["Tell", "me", "how", "our", "dryer", "was", "supposed", "to", "be", "delivered", "on", "Saturday", "and", "we", "still", "have", "no", "dryer", "and", "no", "clear", "communication", "from"]
# ::lemmas ["tell", "i", "how", "our", "dryer", "be", "suppose", "to", "be", "deliver", "on", "Saturday", "and", "we", "still", "have", "no", "dryer", "and", "no", "clear", "communication", "from"]
(c1-11 / tell-01
       :ARG0 (c1-14 / you)
       :ARG1 (c1-3 / and
                   :op1 (c1-0 / suppose-02
                              :ARG1 (c1-1 / deliver-01
                                          :ARG1 (c1-13 / dryer
                                                       :poss (c1-5 / we))
                                          :time (c1-6 / date-entity
                                                      :weekday (c1-12 / saturday))))
                   :op2 (c1-8 / have-03
                              :ARG0 c1-5
                              :ARG1 (c1-15 / and
                                           :op1 (c1-10 / dryer)
                                           :op2 (c1-4 / communicate-01
                                                      :ARG0 c1-5
                                                      :ARG1-of (c1-2 / clear-06)))
                              :mod (c1-9 / still)
                              :polarity -))
       :ARG2 (c1-7 / i)
       :mode imperative)

# ::snt stands by their delivery process of giving you NO time frame for your delivery . There is also no way to track your delivery and no one to contact during your delivery .
# ::tokens ["stands", "by", "their", "delivery", "process", "of", "giving", "you", "NO", "time", "frame", "for", "your", "delivery", ".", "There", "is", "also", "no", "way", "to", "track", "your", "delivery", "and", "no", "one", "to", "contact", "during", "your", "delivery", "."]
# ::lemmas ["stand", "by", "their", "delivery", "process", "of", "give", "you", "no", "time", "frame", "for", "your", "delivery", ".", "there", "be", "also", "no", "way", "to", "track", "your", "delivery", "and", "no", "one", "to", "contact", "during", "your", "delivery", "."]
(c2-13 / multi-sentence
       :snt1 (c2-0 / stand-11
                   :ARG2 (c2-12 / process-02
                                :ARG0 (c2-10 / they)
                                :ARG1 (c2-1 / deliver-01
                                            :ARG0 c2-10)
                                :ARG2 (c2-11 / give-01
                                             :ARG0 c2-10
                                             :ARG1 (c2-3 / frame
                                                         :mod (c2-6 / time))
                                             :ARG2 (c2-15 / you)
                                             :purpose (c2-7 / deliver-01
                                                            :ARG0 c2-15)
                                             :polarity -)))
       :snt2 (c2-2 / and
                   :op1 (c2-5 / way
                              :manner-of (c2-4 / track-01
                                               :ARG1 (c2-8 / deliver-01
                                                           :ARG0 c2-15))
                              :mod (c2-16 / also)
                              :polarity -)
                   :op2 (c2-14 / no-one
                               :ARG1-of (c2-9 / contact-01
                                              :ARG0 c2-15
                                              :time c2-8))))

# ::snt I can even track when my groceries are on the way
# ::tokens ["I", "can", "even", "track", "when", "my", "groceries", "are", "on", "the", "way"]
# ::lemmas ["i", "can", "even", "track", "when", "my", "grocery", "be", "on", "the", "way"]
(c3-5 / possible-01
      :ARG1 (c3-3 / track-01
                  :ARG0 (c3-0 / i)
                  :ARG1 (c3-2 / time
                              :time-of (c3-4 / grocery
                                             :poss c3-0
                                             :prep-on (c3-1 / way)))
                  :mod (c3-6 / even)))
