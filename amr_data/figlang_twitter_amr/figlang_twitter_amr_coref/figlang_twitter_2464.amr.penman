# ::snt You forgot " The Pledge of Allegiance " including the phrase " under God " . <URL>
# ::tokens ["You", "forgot", "\"", "The", "Pledge", "of", "Allegiance", "\"", "including", "the", "phrase", "\"", "under", "God", "\"", ".", "<", "URL", ">"]
# ::lemmas ["you", "forget", "\"", "The", "Pledge", "of", "Allegiance", "\"", "include", "the", "phrase", "\"", "under", "God", "\"", ".", "<", "URL", ">"]
(c1-0 / forget-01
      :ARG0 (c1-8 / you)
      :ARG1 (c1-6 / publication
                  :name (c1-7 / name
                              :ARG2-of (c1-1 / include-01
                                             :ARG1 (c1-4 / phrase
                                                         :mod (c1-3 / under
                                                                    :op1 (c1-2 / person
                                                                               :name (c1-5 / name
                                                                                           :op1 "God")))))
                              :op1 "The"
                              :op2 "Pledge"
                              :op3 "of"
                              :op4 "Allegiance")))

# ::snt You still don't realize how childish you are throwing out your little memes . Feel sorry for you
# ::tokens ["You", "still", "do", "n't", "realize", "how", "childish", "you", "are", "throwing", "out", "your", "little", "memes", ".", "Feel", "sorry", "for", "you"]
# ::lemmas ["you", "still", "do", "not", "realize", "how", "childish", "you", "be", "throw", "out", "your", "little", "meme", ".", "feel", "sorry", "for", "you"]
(c2-10 / multi-sentence
       :snt1 (c2-6 / realize-01
                   :ARG0 (c2-11 / you)
                   :ARG1 (c2-2 / childish
                               :domain (c2-5 / throw-out-06
                                             :ARG0 c2-11
                                             :ARG1 (c2-3 / meme
                                                         :poss c2-11
                                                         :mod (c2-7 / little)))
                               :degree (c2-0 / so))
                   :mod (c2-8 / still)
                   :polarity -)
       :snt2 (c2-1 / feel-01
                   :ARG0 (c2-9 / i)
                   :ARG1 (c2-4 / sorry-01
                               :ARG1 c2-9
                               :ARG2 (c2-12 / you
                                            :ARG2-of c2-1))))

# ::snt stupid people always say that . My memes are targeted and contain relevant information
# ::tokens ["stupid", "people", "always", "say", "that", ".", "My", "memes", "are", "targeted", "and", "contain", "relevant", "information"]
# ::lemmas ["stupid", "people", "always", "say", "that", ".", "my", "meme", "be", "target", "and", "contain", "relevant", "information"]
(c3-11 / multi-sentence
       :snt1 (c3-0 / say-01
                   :ARG0 (c3-10 / person
                                :mod (c3-9 / stupid))
                   :ARG1 (c3-7 / that)
                   :time (c3-1 / always))
       :snt2 (c3-12 / and
                    :op1 (c3-4 / target-01
                               :ARG1 (c3-2 / meme
                                           :poss (c3-3 / i)))
                    :op2 (c3-5 / contain-01
                               :ARG0 c3-2
                               :ARG1 (c3-6 / information
                                           :ARG1-of (c3-8 / relevant-01)))))

# ::snt I ask you again ... Do you ever engage in actual adult debate ?
# ::tokens ["I", "ask", "you", "again", "...", "Do", "you", "ever", "engage", "in", "actual", "adult", "debate", "?"]
# ::lemmas ["i", "ask", "you", "again", "...", "do", "you", "ever", "engage", "in", "actual", "adult", "debate", "?"]
(c4-2 / ask-01
      :ARG0 (c4-6 / i)
      :ARG1 (c4-9 / engage-01
                  :ARG1 (c4-7 / you)
                  :ARG2 (c4-0 / debate-01
                              :ARG0 c4-7
                              :mod (c4-8 / adult)
                              :ARG1-of (c4-1 / actual-02))
                  :polarity (c4-5 / amr-unknown)
                  :time (c4-4 / ever))
      :ARG2 c4-7
      :mod (c4-3 / again))

# ::snt i do , do you ? Read your tweets , compare and contrast . Rules for coh <URL>
# ::tokens ["i", "do", ",", "do", "you", "?", "Read", "your", "tweets", ",", "compare", "and", "contrast", ".", "Rules", "for", "coh", "<", "URL", ">"]
# ::lemmas ["i", "do", ",", "do", "you", "?", "read", "your", "tweet", ",", "compare", "and", "contrast", ".", "rule", "for", "coh", "<", "URL", ">"]
(c5-11 / multi-sentence
       :snt1 (c5-0 / do-02
                   :ARG0 (c5-10 / i)
                   :ARG1-of (c5-8 / request-confirmation-91
                                  :ARG0 (c5-4 / i)))
       :snt2 (c5-2 / and
                   :op1 (c5-5 / read-01
                              :ARG0 (c5-12 / you)
                              :ARG1 (c5-7 / tweet-02
                                          :ARG0 c5-12)
                              :mode imperative)
                   :op2 (c5-3 / compare-01
                              :ARG0 c5-12
                              :mode imperative)
                   :op3 (c5-1 / contrast-01
                              :ARG0 c5-12
                              :mode imperative))
       :snt3 (c5-9 / rule-01
                   :ARG3 (c5-6 / coh)))

# ::snt I think u should read back over all the names you have called me . All I'm saying it's childish
# ::tokens ["I", "think", "u", "should", "read", "back", "over", "all", "the", "names", "you", "have", "called", "me", ".", "All", "I", "'m", "saying", "it", "'s", "childish"]
# ::lemmas ["i", "think", "u", "should", "read", "back", "over", "all", "the", "name", "you", "have", "call", "i", ".", "all", "i", "be", "say", "it", "be", "childish"]
(c6-12 / multi-sentence
       :snt1 (c6-8 / think-01
                   :ARG0 (c6-11 / i)
                   :ARG1 (c6-9 / recommend-01
                               :ARG1 (c6-6 / read-01
                                           :ARG0 (c6-14 / you)
                                           :ARG1 (c6-7 / over
                                                       :op1 (c6-13 / name
                                                                   :mod (c6-2 / all)
                                                                   :ARG1-of (c6-3 / call-01
                                                                                  :ARG0 c6-14
                                                                                  :ARG2 c6-11)))
                                           :mod (c6-10 / back))
                               :ARG2 c6-14))
       :snt2 (c6-0 / say-01
                   :ARG0 (c6-4 / i)
                   :ARG1 (c6-1 / childish
                               :domain (c6-5 / it))
                   :mod (c6-15 / all)))

# ::snt where ? You are a snowflake ? Is that the problem ? This is your claim , not mine .
# ::tokens ["where", "?", "You", "are", "a", "snowflake", "?", "Is", "that", "the", "problem", "?", "This", "is", "your", "claim", ",", "not", "mine", "."]
# ::lemmas ["where", "?", "you", "be", "a", "snowflake", "?", "be", "that", "the", "problem", "?", "this", "be", "your", "claim", ",", "not", "mine", "."]
(c7-10 / multi-sentence
       :snt1 (c7-8 / be-located-at-91
                   :ARG2 (c7-2 / amr-unknown))
       :snt2 (c7-0 / snowflake
                   :domain (c7-11 / you))
       :snt3 (c7-9 / problem
                   :domain (c7-7 / that))
       :snt4 (c7-3 / contrast-01
                   :ARG1 (c7-1 / claim-01
                               :ARG0 (c7-12 / you)
                               :ARG1 (c7-5 / this))
                   :ARG2 (c7-6 / claim-01
                               :ARG0 (c7-4 / i)
                               :ARG1 c7-5
                               :polarity -)))

# ::snt Listen , this has been fun , but your name calling is getting boring . I'm out . Have fun .
# ::tokens ["Listen", ",", "this", "has", "been", "fun", ",", "but", "your", "name", "calling", "is", "getting", "boring", ".", "I", "'m", "out", ".", "Have", "fun", "."]
# ::lemmas ["listen", ",", "this", "have", "be", "fun", ",", "but", "your", "name", "call", "be", "get", "boring", ".", "i", "be", "out", ".", "have", "fun", "."]
(c8-9 / multi-sentence
      :snt1 (c8-6 / listen-01
                  :ARG0 (c8-11 / you)
                  :ARG1 (c8-1 / fun-01
                              :ARG1 (c8-5 / this)
                              :concession-of (c8-7 / bore-02
                                                   :ARG0 (c8-2 / call-01
                                                               :ARG0 c8-11
                                                               :ARG1 (c8-10 / name
                                                                            :poss c8-11))))
                  :mode imperative)
      :snt2 (c8-0 / be-located-at-91
                  :ARG1 (c8-8 / i)
                  :ARG2 (c8-4 / out))
      :snt3 (c8-3 / fun-01
                  :ARG0 (c8-12 / you)
                  :mode imperative))
