# ::snt Agree . Mostly . But Who made this guy the spokesperson for all cops ? Horrible choice . <URL>
# ::tokens ["Agree", ".", "Mostly", ".", "But", "Who", "made", "this", "guy", "the", "spokesperson", "for", "all", "cops", "?", "Horrible", "choice", ".", "<", "URL", ">"]
# ::lemmas ["agree", ".", "mostly", ".", "but", "who", "make", "this", "guy", "the", "spokesperson", "for", "all", "cop", "?", "horrible", "choice", ".", "<", "URL", ">"]
(c1-13 / multi-sentence
       :snt1 (c1-3 / agree-01
                   :ARG0 (c1-12 / i)
                   :degree (c1-5 / most))
       :snt2 (c1-4 / contrast-01
                   :ARG2 (c1-7 / make-02
                               :ARG0 (c1-14 / amr-unknown)
                               :ARG1 (c1-6 / have-org-role-91
                                           :ARG0 (c1-10 / guy
                                                        :mod (c1-9 / this))
                                           :ARG1 (c1-0 / cop
                                                       :mod (c1-1 / all))
                                           :ARG2 (c1-2 / spokesperson))))
       :snt3 (c1-8 / choose-01
                   :mod (c1-11 / horrible)))

# ::snt Dang . That's a lot of blue . A : I'm B : I'm C : he's a
# ::tokens ["Dang", ".", "That", "'s", "a", "lot", "of", "blue", ".", "A", ":", "I", "'m", "B", ":", "I", "'m", "C", ":", "he", "'s", "a"]
# ::lemmas ["dang", ".", "that", "be", "a", "lot", "of", "blue", ".", "a", ":", "i", "be", "b", ":", "i", "be", "C", ":", "he", "be", "a"]
(c2-10 / multi-sentence
       :snt1 (c2-0 / dang
                   :mode expressive)
       :snt2 (c2-8 / blue
                   :quant (c2-7 / lot)
                   :domain (c2-6 / that))
       :snt3 (c2-1 / and
                   :op1 (c2-9 / person
                              :li "A")
                   :op2 (c2-5 / person
                              :li "B")
                   :op3 (c2-3 / person
                              :li "C")
                   :op4 (c2-2 / person
                              :li "A")
                   :domain (c2-4 / he)))

# ::snt Shucks , R U suggesting the and is a bc U don't - get - him ?
# ::tokens ["Shucks", ",", "R", "U", "suggesting", "the", "and", "is", "a", "bc", "U", "do", "n't", "-", "get", "-", "him", "?"]
# ::lemmas ["shucks", ",", "r", "U", "suggest", "the", "and", "be", "a", "bc", "U", "do", "not", "-", "get", "-", "he", "?"]
(c3-0 / suggest-01
      :ARG0 (c3-7 / person
                  :name (c3-8 / name
                              :op1 "R"))
      :ARG1 (c3-1 / and
                  :op1 (c3-5 / get-01
                             :ARG0 (c3-3 / we)
                             :ARG1 (c3-4 / he)
                             :polarity -)
                  :op2 (c3-2 / cause-01
                             :ARG0 (c3-9 / amr-unknown)
                             :ARG1 c3-0))
      :ARG1-of (c3-6 / shit-01))

# ::snt It's late in my timezone : What do you mean , him / thug / u get him ? Patience Thin smack .
# ::tokens ["It", "'s", "late", "in", "my", "timezone", ":", "What", "do", "you", "mean", ",", "him", "/", "thug", "/", "u", "get", "him", "?", "Patience", "Thin", "smack", "."]
# ::lemmas ["it", "be", "late", "in", "my", "timezone", ":", "what", "do", "you", "mean", ",", "he", "/", "thug", "/", "u", "get", "he", "?", "patience", "thin", "smack", "."]
(c4-12 / multi-sentence
       :snt1 (c4-2 / mean-01
                   :ARG0 (c4-14 / you)
                   :ARG2 (c4-9 / get-01
                               :ARG0 (c4-0 / slash
                                           :op1 (c4-5 / he)
                                           :op2 (c4-7 / thug)
                                           :op3 (c4-15 / you))
                               :ARG1 (c4-10 / he)
                               :ARG2 (c4-1 / amr-unknown))
                   :time (c4-8 / late
                               :op1 (c4-6 / zone
                                          :mod (c4-4 / time)
                                          :poss (c4-11 / i))))
       :snt2 (c4-3 / tactic
                   :name (c4-13 / name
                                :op1 "Patience"
                                :op2 "Thin"
                                :op3 "Clack")))

# ::snt Patience thin twitter abbreviations . Go to bed . It's purely subjective . It's jmho .
# ::tokens ["Patience", "thin", "twitter", "abbreviations", ".", "Go", "to", "bed", ".", "It", "'s", "purely", "subjective", ".", "It", "'s", "jmho", "."]
# ::lemmas ["patience", "thin", "twitter", "abbreviation", ".", "go", "to", "bed", ".", "it", "be", "purely", "subjective", ".", "it", "be", "jmho", "."]
(c5-11 / multi-sentence
       :snt1 (c5-10 / patient-01
                    :ARG1-of (c5-8 / thin-03
                                   :ARG2 (c5-3 / thing
                                               :ARG1-of (c5-1 / abbreviate-01
                                                              :medium (c5-7 / publication
                                                                            :name (c5-12 / name
                                                                                         :op1 "Twitter"))))))
       :snt2 (c5-9 / go-02
                   :ARG0 (c5-13 / you)
                   :ARG4 (c5-6 / bed)
                   :mode imperative)
       :snt3 (c5-0 / subjective-03
                   :ARG1 (c5-2 / it)
                   :ARG1-of (c5-4 / pure-02))
       :snt4 (c5-5 / ho
                   :mode expressive))

# ::snt , Provocative w / o substance is mediocre at best . What r u attempting / what is ur intent ?
# ::tokens [",", "Provocative", "w", "/", "o", "substance", "is", "mediocre", "at", "best", ".", "What", "r", "u", "attempting", "/", "what", "is", "ur", "intent", "?"]
# ::lemmas [",", "Provocative", "w", "/", "o", "substance", "be", "mediocre", "at", "good", ".", "what", "r", "u", "attempt", "/", "what", "be", "ur", "intent", "?"]
(c6-6 / multi-sentence
      :snt1 (c6-2 / mediocre
                  :domain (c6-4 / thing
                                :ARG0-of (c6-5 / provoke-01)
                                :mod (c6-1 / at-best)))
      :snt2 (c6-3 / intend-01
                  :ARG0 (c6-7 / you)
                  :ARG1 (c6-8 / amr-unknown))
      :snt3 (c6-0 / attempt-01
                  :ARG0 c6-7
                  :ARG1 c6-8))
