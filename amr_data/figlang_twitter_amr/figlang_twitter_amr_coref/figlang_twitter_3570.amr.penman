# ::snt I'm so tired of feeling this way ! I have .. No one knows I exist .. I'm bc I'm reduced to being in bed all day thnx to all my .. I keep being told I'm gunna if I dnt get proper care bt the drs arent helping me .. I cnt work /2
# ::tokens ["I", "'m", "so", "tired", "of", "feeling", "this", "way", "!", "I", "have", "..", "No", "one", "knows", "I", "exist", "..", "I", "'m", "bc", "I", "'m", "reduced", "to", "being", "in", "bed", "all", "day", "thnx", "to", "all", "my", "..", "I", "keep", "being", "told", "I", "'m", "gunna", "if", "I", "dnt", "get", "proper", "care", "bt", "the", "drs", "are", "nt", "helping", "me", "..", "I", "cnt", "work", "/2"]
# ::lemmas ["i", "be", "so", "tired", "of", "feel", "this", "way", "!", "i", "have", "..", "no", "one", "know", "i", "exist", "..", "i", "be", "bc", "i", "be", "reduce", "to", "be", "in", "bed", "all", "day", "thnx", "to", "all", "my", "..", "i", "keep", "be", "tell", "i", "be", "gunna", "if", "i", "dnt", "get", "proper", "care", "bt", "the", "dr", "be", "not", "help", "i", "..", "i", "cnt", "work", "/2"]
(c1-12 / multi-sentence
       :snt1 (c1-9 / tire-01
                   :ARG0 (c1-26 / feel-01
                                :ARG0 (c1-3 / i)
                                :ARG1 (c1-6 / way
                                            :mod (c1-7 / this)))
                   :ARG1 c1-3
                   :degree (c1-17 / so)
                   :mode expressive)
       :snt2 (c1-22 / feel-01
                    :ARG0 (c1-20 / i))
       :snt3 (c1-30 / know-01
                    :ARG0 (c1-13 / no-one)
                    :ARG1 (c1-16 / exist-01
                                 :ARG1 c1-20))
       :snt4 (c1-5 / cause-01
                   :ARG0 (c1-10 / reduce-01
                                :ARG1 c1-20
                                :ARG4 (c1-28 / be-located-at-91
                                             :ARG1 c1-20
                                             :ARG2 (c1-24 / bed)
                                             :duration (c1-0 / day
                                                             :mod (c1-25 / all)))
                                :ARG1-of (c1-1 / compare-01
                                               :ARG2 (c1-19 / be-located-at-91
                                                            :ARG1 c1-20
                                                            :ARG2 c1-24
                                                            :duration c1-0
                                                            :mod (c1-15 / all)))))
       :ARG1 (c1-4 / keep-02
                   :ARG0 c1-20
                   :ARG1 (c1-14 / tell-01
                                :ARG1 (c1-27 / have-condition-91
                                             :ARG1 (c1-11 / get-01
                                                          :ARG0 c1-20
                                                          :ARG1 (c1-8 / care-03
                                                                      :mod (c1-29 / proper))
                                                          :ARG2-of c1-27
                                                          :polarity -)
                                             :ARG0 c1-20
                                             :ARG1 c1-8
                                             :ARG1-of c1-5
                                             :ARG0 (c1-2 / help-01
                                                         :ARG0 (c1-23 / doctor)
                                                         :ARG1 c1-20
                                                         :polarity -)
                                             :polarity -)))
       :ARG2 c1-20
       :snt5 (c1-18 / work-01
                    :ARG0 (c1-21 / i)
                    :polarity -)
       :snt2 2)

# ::snt I cnt work bt was told tht if I get denied again for ssi ( its bn x already ) I will have to look for work .. I cant afford bills , medical , bills , getting my service dobie , groceries , things like replacing my fitbit to keep track of my heart or things for my two kids .. /
# ::tokens ["I", "cnt", "work", "bt", "was", "told", "tht", "if", "I", "get", "denied", "again", "for", "ssi", "(", "its", "bn", "x", "already", ")", "I", "will", "have", "to", "look", "for", "work", "..", "I", "ca", "nt", "afford", "bills", ",", "medical", ",", "bills", ",", "getting", "my", "service", "dobie", ",", "groceries", ",", "things", "like", "replacing", "my", "fitbit", "to", "keep", "track", "of", "my", "heart", "or", "things", "for", "my", "two", "kids", "..", "/"]
# ::lemmas ["i", "cnt", "work", "bt", "be", "tell", "tht", "if", "i", "get", "deny", "again", "for", "ssi", "(", "its", "bn", "x", "already", ")", "i", "will", "have", "to", "look", "for", "work", "..", "i", "can", "not", "afford", "bill", ",", "medical", ",", "bill", ",", "get", "my", "service", "dobie", ",", "grocery", ",", "thing", "like", "replace", "my", "fitbit", "to", "keep", "track", "of", "my", "heart", "or", "thing", "for", "my", "two", "kid", "..", "/"]
(c2-12 / multi-sentence
       :snt1 (c2-8 / obligate-01
                   :ARG1 (c2-3 / i)
                   :ARG2 (c2-28 / look-01
                                :ARG0 c2-3
                                :ARG1 (c2-6 / work-01))
                   :condition (c2-0 / deny-01
                                    :ARG1 (c2-15 / work-01)
                                    :ARG2 c2-3
                                    :mod (c2-22 / again)
                                    :ARG1-of (c2-5 / cause-01
                                                   :ARG0 (c2-25 / have-polarity-91
                                                                :ARG1 c2-0
                                                                :time (c2-14 / already)
                                                                :ARG2 -))))
       :snt2 (c2-30 / possible-01
                    :ARG1 (c2-1 / afford-01
                                :ARG0 (c2-17 / i
                                             :part (c2-2 / heart))
                                :ARG1 (c2-32 / and
                                             :op1 (c2-24 / monetary-quantity
                                                         :ARG1-of (c2-29 / bill-01))
                                             :op2 (c2-18 / monetary-quantity
                                                         :ARG1-of (c2-21 / bill-01))
                                             :op3 (c2-11 / get-01
                                                         :ARG0 c2-17
                                                         :ARG1 (c2-19 / dobie
                                                                      :mod (c2-16 / service)
                                                                      :poss c2-17))
                                             :op4 (c2-20 / grocery)
                                             :op5 (c2-9 / thing
                                                        :example (c2-10 / replace-01
                                                                        :ARG1 (c2-23 / fitbit
                                                                                     :poss c2-17)
                                                                        :purpose (c2-7 / track-01
                                                                                       :ARG0 c2-17
                                                                                       :ARG1 (c2-26 / or
                                                                                                    :op1 c2-2
                                                                                                    :op2 (c2-13 / thing
                                                                                                                :beneficiary (c2-27 / person
                                                                                                                                    :ARG0-of (c2-4 / have-rel-role-91
                                                                                                                                                   :ARG1 c2-17
                                                                                                                                                   :ARG2 (c2-31 / kid))
                                                                                                                                    :quant 2))))))))
                    :polarity -))
