# ::snt your mom is sitting behind me with Katina at Holden and Vade's game and she's killing me
# ::tokens ["your", "mom", "is", "sitting", "behind", "me", "with", "Katina", "at", "Holden", "and", "Vade", "'s", "game", "and", "she", "'s", "killing", "me"]
# ::lemmas ["your", "mom", "be", "sit", "behind", "i", "with", "Katina", "at", "Holden", "and", "Vade", "'s", "game", "and", "she", "be", "kill", "i"]
(c1-1 / and
      :op1 (c1-0 / sit-01
                 :ARG1 (c1-12 / person
                              :ARG0-of (c1-6 / have-rel-role-91
                                             :ARG1 (c1-15 / you)
                                             :ARG2 (c1-13 / mom)))
                 :ARG2 (c1-11 / behind
                              :op1 (c1-3 / i))
                 :accompanier (c1-8 / person
                                    :name (c1-14 / name
                                                 :op1 "Katina"))
                 :location (c1-10 / game
                                  :poss (c1-16 / and
                                               :op1 (c1-5 / person
                                                          :name (c1-9 / name
                                                                      :op1 "Holden"))
                                               :op2 (c1-4 / person
                                                          :name (c1-7 / name
                                                                      :op1 "Vade")))))
      :op2 (c1-2 / kill-01
                 :ARG0 c1-8
                 :ARG1 c1-3))

# ::snt your mom is talking about her citizenship test and your sister goes " I don't have to take th <URL>
# ::tokens ["your", "mom", "is", "talking", "about", "her", "citizenship", "test", "and", "your", "sister", "goes", "\"", "I", "do", "n't", "have", "to", "take", "th", "<", "URL", ">"]
# ::lemmas ["your", "mom", "be", "talk", "about", "her", "citizenship", "test", "and", "your", "sister", "go", "\"", "i", "do", "not", "have", "to", "take", "th", "<", "URL", ">"]
(c2-2 / and
      :op1 (c2-11 / talk-01
                  :ARG0 (c2-13 / person
                               :ARG0-of (c2-6 / have-rel-role-91
                                              :ARG1 (c2-15 / you)
                                              :ARG2 (c2-14 / mom)))
                  :ARG1 (c2-5 / test-01
                              :ARG1 c2-13
                              :ARG2 (c2-3 / citizenship)))
      :op2 (c2-0 / say-01
                 :ARG0 (c2-10 / person
                              :ARG0-of (c2-12 / have-rel-role-91
                                              :ARG1 c2-15
                                              :ARG2 (c2-1 / sister)))
                 :ARG1 (c2-9 / obligate-01
                             :ARG1 c2-10
                             :ARG2 (c2-4 / take-01
                                         :ARG0 c2-10
                                         :ARG1 (c2-7 / thing
                                                     :ARG1-of (c2-8 / URL-01)))
                             :polarity -)))

# ::snt Your sister : Who's the first president ? Mom : George Bush ! No wait ! Washington ! What's his first name ? "
# ::tokens ["Your", "sister", ":", "Who", "'s", "the", "first", "president", "?", "Mom", ":", "George", "Bush", "!", "No", "wait", "!", "Washington", "!", "What", "'s", "his", "first", "name", "?", "\""]
# ::lemmas ["your", "sister", ":", "who", "be", "the", "first", "president", "?", "mom", ":", "George", "Bush", "!", "no", "wait", "!", "Washington", "!", "what", "be", "his", "first", "name", "?", "\""]
(c3-8 / multi-sentence
      :snt1 (c3-15 / ask-01
                   :ARG0 (c3-20 / person
                                :ARG0-of (c3-17 / have-rel-role-91
                                                :ARG1 (c3-14 / you)
                                                :ARG2 (c3-11 / sister)))
                   :ARG1 (c3-19 / president
                                :ord (c3-7 / ordinal-entity
                                           :value 1)
                                :domain (c3-10 / amr-unknown)))
      :snt2 (c3-12 / person
                   :name (c3-9 / name
                               :op1 "George"
                               :op2 "Bush")
                   :ARG0-of (c3-2 / have-rel-role-91
                                  :ARG1 c3-14
                                  :ARG2 (c3-16 / mom)))
      :snt3 (c3-6 / wait-01
                  :ARG1 (c3-5 / city
                              :name (c3-1 / name
                                          :op1 "Washington"))
                  :polarity -
                  :mode expressive)
      :snt4 (c3-13 / name
                   :polarity (c3-0 / amr-unknown)
                   :domain (c3-4 / name
                                 :poss (c3-3 / he)
                                 :ord (c3-18 / ordinal-entity
                                             :value 1))))

# ::snt I become a citizen if her and my father do . In order for that to happen she has to pass the test . May God have mercy .
# ::tokens ["I", "become", "a", "citizen", "if", "her", "and", "my", "father", "do", ".", "In", "order", "for", "that", "to", "happen", "she", "has", "to", "pass", "the", "test", ".", "May", "God", "have", "mercy", "."]
# ::lemmas ["i", "become", "a", "citizen", "if", "she", "and", "my", "father", "do", ".", "in", "order", "for", "that", "to", "happen", "she", "have", "to", "pass", "the", "test", ".", "may", "God", "have", "mercy", "."]
(c4-16 / multi-sentence
       :snt1 (c4-13 / become-01
                    :ARG1 (c4-15 / i)
                    :ARG2 (c4-4 / citizen)
                    :condition (c4-0 / do-02
                                     :ARG0 (c4-2 / and
                                                 :op1 (c4-1 / she)
                                                 :op2 (c4-12 / person
                                                             :ARG0-of (c4-8 / have-rel-role-91
                                                                            :ARG1 c4-15
                                                                            :ARG2 (c4-3 / father))))))
       :snt2 (c4-9 / obligate-01
                   :ARG1 (c4-14 / she)
                   :ARG2 (c4-10 / pass-07
                                :ARG1 c4-14
                                :ARG2 (c4-11 / test-01))
                   :purpose c4-13)
       :snt3 (c4-5 / wish-01
                   :ARG1 (c4-6 / mercy
                               :poss (c4-7 / person
                                           :name (c4-17 / name
                                                        :op1 "God")))))

# ::snt She said that ! ! She goes " and Joffrey ! Gets it all for free ! ! Ugh ! "
# ::tokens ["She", "said", "that", "!", "!", "She", "goes", "\"", "and", "Joffrey", "!", "Gets", "it", "all", "for", "free", "!", "!", "Ugh", "!", "\""]
# ::lemmas ["she", "say", "that", "!", "!", "she", "go", "\"", "and", "Joffrey", "!", "get", "it", "all", "for", "free", "!", "!", "ugh", "!", "\""]
(c5-10 / multi-sentence
       :snt1 (c5-0 / say-01
                   :ARG0 (c5-8 / she)
                   :ARG1 (c5-6 / that)
                   :mode expressive)
       :snt2 (c5-1 / and
                   :op1 (c5-7 / go-02
                              :ARG0 (c5-4 / she)
                              :ARG4 (c5-3 / city
                                          :name (c5-11 / name
                                                       :op1 "Joffrey")))
                   :op2 (c5-12 / get-01
                               :ARG0 c5-4
                               :ARG1 (c5-9 / it
                                           :mod (c5-13 / all))
                               :ARG3 (c5-2 / free-03))
                   :op3 (c5-5 / ugh
                              :mode expressive)))
