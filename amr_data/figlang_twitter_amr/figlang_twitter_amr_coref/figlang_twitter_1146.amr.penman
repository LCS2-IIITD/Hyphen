# ::snt British people be eating this on purpose . No wonder they lost the revolutionary war <URL>
# ::tokens ["British", "people", "be", "eating", "this", "on", "purpose", ".", "No", "wonder", "they", "lost", "the", "revolutionary", "war", "<", "URL", ">"]
# ::lemmas ["British", "people", "be", "eat", "this", "on", "purpose", ".", "no", "wonder", "they", "lose", "the", "revolutionary", "war", "<", "URL", ">"]
(c1-8 / multi-sentence
      :snt1 (c1-11 / eat-01
                   :ARG0 (c1-7 / person
                               :mod (c1-0 / country
                                          :name (c1-9 / name
                                                      :op1 "Britain")))
                   :ARG1 (c1-4 / this)
                   :ARG1-of (c1-3 / have-purpose-91))
      :snt2 (c1-1 / wonder-02
                  :ARG1 (c1-6 / lose-03
                              :ARG0 (c1-2 / they)
                              :ARG1 (c1-10 / war
                                           :mod (c1-5 / revolutionary)))
                  :polarity -))

# ::snt Spray cheese and canned chickens ... we'd have to lower our standards to be able to import your rubbish .
# ::tokens ["Spray", "cheese", "and", "canned", "chickens", "...", "we", "'d", "have", "to", "lower", "our", "standards", "to", "be", "able", "to", "import", "your", "rubbish", "."]
# ::lemmas ["spray", "cheese", "and", "can", "chicken", "...", "we", "would", "have", "to", "lower", "our", "standard", "to", "be", "able", "to", "import", "your", "rubbish", "."]
(c2-12 / multi-sentence
       :snt1 (c2-2 / and
                   :op1 (c2-3 / cheese
                              :ARG1-of (c2-0 / spray-01))
                   :op2 (c2-1 / chicken
                              :ARG1-of (c2-6 / can-01)))
       :snt2 (c2-7 / obligate-01
                   :ARG1 (c2-4 / we)
                   :ARG2 (c2-9 / lower-05
                               :ARG0 c2-4
                               :ARG1 (c2-10 / standard
                                            :poss c2-4)
                               :purpose (c2-11 / possible-01
                                               :ARG1 (c2-5 / import-01
                                                           :ARG0 c2-4
                                                           :ARG1 (c2-8 / rubbish
                                                                       :poss (c2-13 / you)))))))
