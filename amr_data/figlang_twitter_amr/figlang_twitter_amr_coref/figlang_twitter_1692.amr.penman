# ::snt Bow out from embarrassing herself on stage and sounding bad , yes . Absolutely did .
# ::tokens ["Bow", "out", "from", "embarrassing", "herself", "on", "stage", "and", "sounding", "bad", ",", "yes", ".", "Absolutely", "did", "."]
# ::lemmas ["bow", "out", "from", "embarrass", "herself", "on", "stage", "and", "sound", "bad", ",", "yes", ".", "absolutely", "do", "."]
(c1-8 / multi-sentence
      :snt1 (c1-3 / and
                  :op1 (c1-6 / bow-out-06
                             :ARG1 (c1-0 / she)
                             :ARG1-of (c1-4 / cause-01
                                            :ARG0 (c1-10 / embarrass-01
                                                         :ARG0 c1-0
                                                         :ARG1 c1-0
                                                         :location (c1-7 / stage))))
                  :op2 (c1-5 / sound-01
                             :ARG1 c1-0
                             :ARG2 (c1-1 / bad-07)))
      :snt2 (c1-2 / do-02
                  :mod (c1-9 / absolute)))

# ::snt Why would she do that when her shows are selling out and still making millions of dollars ? Still a success
# ::tokens ["Why", "would", "she", "do", "that", "when", "her", "shows", "are", "selling", "out", "and", "still", "making", "millions", "of", "dollars", "?", "Still", "a", "success"]
# ::lemmas ["why", "would", "she", "do", "that", "when", "her", "show", "be", "sell", "out", "and", "still", "make", "millions", "of", "dollars", "?", "still", "a", "success"]
(c2-14 / multi-sentence
       :snt1 (c2-3 / cause-01
                   :ARG0 (c2-2 / amr-unknown)
                   :ARG1 (c2-0 / do-02
                               :ARG0 (c2-1 / she)
                               :ARG1 (c2-9 / that)
                               :time (c2-15 / and
                                            :op1 (c2-12 / sell-out-02
                                                        :ARG1 (c2-7 / show-04
                                                                    :ARG0 c2-1))
                                            :op2 (c2-4 / make-05
                                                       :ARG0 c2-7
                                                       :ARG1 (c2-8 / multiple
                                                                   :op1 (c2-6 / monetary-quantity
                                                                              :unit (c2-13 / dollar)
                                                                              :quant 1000000))
                                                       :mod (c2-10 / still)))))
       :snt2 (c2-5 / succeed-01
                   :mod (c2-11 / still)))

# ::snt They're selling out because she's performing songs from her past . Her supreme years ...
# ::tokens ["They", "'re", "selling", "out", "because", "she", "'s", "performing", "songs", "from", "her", "past", ".", "Her", "supreme", "years", "..."]
# ::lemmas ["they", "be", "sell", "out", "because", "she", "be", "perform", "song", "from", "her", "past", ".", "her", "supreme", "year", "..."]
(c3-8 / multi-sentence
      :snt1 (c3-0 / sell-out-03
                  :ARG0 (c3-4 / they)
                  :ARG1-of (c3-1 / cause-01
                                 :ARG0 (c3-7 / perform-01
                                             :ARG0 (c3-6 / she)
                                             :ARG1 (c3-2 / song
                                                         :time (c3-3 / past
                                                                     :poss c3-6)))))
      :snt2 (c3-9 / year
                  :mod (c3-5 / supreme)
                  :poss (c3-10 / she)))

# ::snt That's what you're suppose to do dumbass . Build a catalog of hits and tour off of them .
# ::tokens ["That", "'s", "what", "you", "'re", "suppose", "to", "do", "dumbass", ".", "Build", "a", "catalog", "of", "hits", "and", "tour", "off", "of", "them", "."]
# ::lemmas ["that", "be", "what", "you", "be", "suppose", "to", "do", "dumbass", ".", "build", "a", "catalog", "of", "hit", "and", "tour", "off", "of", "they", "."]
(c4-9 / multi-sentence
      :snt1 (c4-0 / suppose-02
                  :ARG1 (c4-1 / do-02
                              :ARG0 (c4-8 / dumbass)
                              :ARG1 (c4-6 / that)))
      :snt2 (c4-2 / and
                  :op1 (c4-7 / build-01
                             :ARG0 (c4-10 / you)
                             :ARG1 (c4-3 / catalogue-01
                                         :ARG1 (c4-5 / hit-05))
                             :mode imperative)
                  :op2 (c4-4 / tour-01
                             :ARG0 c4-10
                             :ARG2 c4-3
                             :mode imperative)))

# ::snt Okay , right . But making new music ? It's a dub . Her latest single was
# ::tokens ["Okay", ",", "right", ".", "But", "making", "new", "music", "?", "It", "'s", "a", "dub", ".", "Her", "latest", "single", "was"]
# ::lemmas ["okay", ",", "right", ".", "but", "make", "new", "music", "?", "it", "be", "a", "dub", ".", "her", "late", "single", "be"]
(c5-12 / multi-sentence
       :snt1 (c5-7 / okay-01
                   :ARG1 (c5-8 / right-06))
       :snt2 (c5-4 / contrast-01
                   :ARG2 (c5-3 / make-01
                               :ARG1 (c5-6 / music
                                           :ARG1-of (c5-13 / new-01))
                               :polarity (c5-2 / amr-unknown)
                               :manner (c5-0 / dub
                                             :domain (c5-11 / it))))
       :snt3 (c5-1 / single
                   :poss (c5-10 / she)
                   :mod (c5-9 / last))
       :snt4 (c5-5 / okay-04))

# ::snt She's not trying to compete with anyone , and doesn't have to prove anything . She's already ACCOMPLISHED
# ::tokens ["She", "'s", "not", "trying", "to", "compete", "with", "anyone", ",", "and", "does", "n't", "have", "to", "prove", "anything", ".", "She", "'s", "already", "ACCOMPLISHED"]
# ::lemmas ["she", "be", "not", "try", "to", "compete", "with", "anyone", ",", "and", "do", "not", "have", "to", "prove", "anything", ".", "she", "be", "already", "ACCOMPLISHED"]
(c6-10 / multi-sentence
       :snt1 (c6-2 / and
                   :op1 (c6-7 / try-01
                              :ARG0 (c6-0 / she)
                              :ARG1 (c6-3 / compete-01
                                          :ARG0 c6-0
                                          :ARG1 (c6-11 / anyone))
                              :polarity -)
                   :op2 (c6-5 / obligate-01
                              :ARG1 c6-0
                              :ARG2 (c6-9 / prove-01
                                          :ARG0 c6-0
                                          :ARG1 (c6-1 / anything))
                              :polarity -))
       :snt2 (c6-6 / accuse-01
                   :ARG1 (c6-8 / she)
                   :time (c6-4 / already)))

# ::snt Again ... where did I ever question any of these things ?
# ::tokens ["Again", "...", "where", "did", "I", "ever", "question", "any", "of", "these", "things", "?"]
# ::lemmas ["again", "...", "where", "do", "i", "ever", "question", "any", "of", "these", "thing", "?"]
(c7-2 / question-03
      :ARG0 (c7-5 / i)
      :ARG1 (c7-4 / thing
                  :mod (c7-1 / any)
                  :mod (c7-3 / this))
      :time (c7-7 / ever)
      :location (c7-6 / amr-unknown)
      :mod (c7-0 / again))

# ::snt By implying her news songs have to be a hit . And saying her songs were a dub . It doesn't matter
# ::tokens ["By", "implying", "her", "news", "songs", "have", "to", "be", "a", "hit", ".", "And", "saying", "her", "songs", "were", "a", "dub", ".", "It", "does", "n't", "matter"]
# ::lemmas ["by", "imply", "her", "news", "song", "have", "to", "be", "a", "hit", ".", "and", "say", "her", "song", "be", "a", "dub", ".", "it", "do", "not", "matter"]
(c8-11 / multi-sentence
       :snt1 (c8-10 / imply-01
                    :ARG1 (c8-7 / obligate-01
                                :ARG2 (c8-4 / hit-05
                                            :ARG1 (c8-0 / song
                                                        :poss (c8-9 / she)
                                                        :topic (c8-12 / news)))))
       :snt2 (c8-2 / and
                   :op2 (c8-5 / say-01
                              :ARG1 (c8-1 / dub
                                          :domain (c8-8 / song
                                                        :poss (c8-13 / she)))))
       :snt3 (c8-3 / matter-01
                   :ARG1 (c8-6 / it)
                   :polarity -))

# ::snt She's already accomplished everything there is to do as an artist . Now she's touring & making $ from her work
# ::tokens ["She", "'s", "already", "accomplished", "everything", "there", "is", "to", "do", "as", "an", "artist", ".", "Now", "she", "'s", "touring", "&", "making", "$", "from", "her", "work"]
# ::lemmas ["she", "be", "already", "accomplish", "everything", "there", "be", "to", "do", "as", "an", "artist", ".", "now", "she", "be", "tour", "&", "make", "$", "from", "her", "work"]
(c9-10 / multi-sentence
       :snt1 (c9-3 / accomplish-01
                   :ARG0 (c9-0 / she)
                   :ARG1 (c9-13 / everything
                                :ARG1-of (c9-1 / do-02
                                               :ARG0 c9-0
                                               :prep-as (c9-12 / artist)))
                   :time (c9-2 / already))
       :snt2 (c9-6 / and
                   :op1 (c9-7 / tour-01
                              :ARG0 (c9-8 / she)
                              :ARG1 (c9-5 / work-01
                                          :ARG0 c9-8))
                   :op2 (c9-4 / make-05
                              :ARG0 c9-8
                              :ARG1 (c9-9 / dollar)
                              :ARG2 c9-5)
                   :time (c9-11 / now)))

# ::snt From the work she made in her prime . Not this new music she's trying with . It's just not good .
# ::tokens ["From", "the", "work", "she", "made", "in", "her", "prime", ".", "Not", "this", "new", "music", "she", "'s", "trying", "with", ".", "It", "'s", "just", "not", "good", "."]
# ::lemmas ["from", "the", "work", "she", "make", "in", "her", "prime", ".", "not", "this", "new", "music", "she", "be", "try", "with", ".", "it", "be", "just", "not", "good", "."]
(c10-11 / multi-sentence
        :snt1 (c10-8 / be-from-91
                     :ARG2 (c10-2 / work-01
                                  :ARG0 (c10-0 / she)
                                  :time (c10-10 / prime
                                                :poss c10-0)))
        :snt2 (c10-1 / music
                     :ARG1-of (c10-12 / new-01)
                     :ARG1-of (c10-5 / try-01
                                     :ARG0 (c10-9 / she))
                     :mod (c10-3 / this)
                     :polarity -)
        :snt3 (c10-7 / good-02
                     :ARG1 (c10-4 / it)
                     :mod (c10-6 / just)
                     :polarity -))

# ::snt Who cares what you asked for ? You're constantly complaining over something that you don't have to listen too
# ::tokens ["Who", "cares", "what", "you", "asked", "for", "?", "You", "'re", "constantly", "complaining", "over", "something", "that", "you", "do", "n't", "have", "to", "listen", "too"]
# ::lemmas ["who", "care", "what", "you", "ask", "for", "?", "you", "be", "constantly", "complain", "over", "something", "that", "you", "do", "not", "have", "to", "listen", "too"]
(c11-10 / multi-sentence
        :snt1 (c11-4 / care-01
                     :ARG0 (c11-2 / amr-unknown)
                     :ARG1 (c11-8 / thing
                                  :ARG1-of (c11-12 / ask-02
                                                   :ARG0 (c11-11 / you))))
        :snt2 (c11-0 / complain-01
                     :ARG0 (c11-3 / you)
                     :ARG1 (c11-1 / something
                                  :ARG2-of (c11-9 / listen-01
                                                  :ARG0 c11-3
                                                  :ARG2-of (c11-7 / obligate-01
                                                                  :ARG1 c11-3
                                                                  :mod (c11-5 / too)
                                                                  :polarity -)))
                     :frequency (c11-6 / constant)))

# ::snt It's like no one is allowed to have a different opinion of Mariah Carey .
# ::tokens ["It", "'s", "like", "no", "one", "is", "allowed", "to", "have", "a", "different", "opinion", "of", "Mariah", "Carey", "."]
# ::lemmas ["it", "be", "like", "no", "one", "be", "allow", "to", "have", "a", "different", "opinion", "of", "Mariah", "Carey", "."]
(c12-3 / resemble-01
       :ARG1 (c12-6 / it)
       :ARG2 (c12-1 / allow-01
                    :ARG1 (c12-2 / opine-01
                                 :ARG0 (c12-7 / no-one)
                                 :ARG1 (c12-4 / person
                                              :name (c12-5 / name
                                                           :op1 "Mariah"
                                                           :op2 "Carey"))
                                 :ARG1-of (c12-0 / differ-02))))

# ::snt You can have your opinion but stop voicing them over and over and over when u see nothing it going to change
# ::tokens ["You", "can", "have", "your", "opinion", "but", "stop", "voicing", "them", "over", "and", "over", "and", "over", "when", "u", "see", "nothing", "it", "going", "to", "change"]
# ::lemmas ["you", "can", "have", "your", "opinion", "but", "stop", "voice", "they", "over", "and", "over", "and", "over", "when", "u", "see", "nothing", "it", "go", "to", "change"]
(c13-2 / contrast-01
       :ARG1 (c13-9 / possible-01
                    :ARG1 (c13-3 / have-03
                                 :ARG0 (c13-11 / you)
                                 :ARG1 (c13-7 / thing
                                              :ARG1-of (c13-6 / opine-01
                                                              :ARG0 c13-11))))
       :ARG2 (c13-0 / stop-01
                    :ARG0 c13-11
                    :ARG1 (c13-5 / voice-01
                                 :ARG0 c13-11
                                 :ARG1 c13-7
                                 :frequency (c13-4 / over-and-over))
                    :time (c13-8 / see-01
                                 :ARG0 c13-11
                                 :ARG1 (c13-1 / change-01
                                              :ARG1 (c13-10 / nothing)))
                    :mode imperative))

# ::snt . You're wasting your time . Just like old school MC and move on . No one is forcing you into listening to
# ::tokens [".", "You", "'re", "wasting", "your", "time", ".", "Just", "like", "old", "school", "MC", "and", "move", "on", ".", "No", "one", "is", "forcing", "you", "into", "listening", "to"]
# ::lemmas [".", "you", "be", "waste", "your", "time", ".", "just", "like", "old", "school", "MC", "and", "move", "on", ".", "no", "one", "be", "force", "you", "into", "listen", "to"]
(c14-13 / multi-sentence
        :snt1 (c14-4 / waste-01
                     :ARG0 (c14-15 / you)
                     :ARG1 (c14-8 / time
                                  :poss c14-15))
        :snt2 (c14-1 / and
                     :op1 (c14-9 / resemble-01
                                 :ARG2 (c14-12 / person
                                               :ARG0-of (c14-3 / MC-01)
                                               :mod (c14-0 / school
                                                           :mod (c14-7 / old))))
                     :op2 (c14-6 / move-01
                                 :ARG2 (c14-5 / on))
                     :mod (c14-11 / just))
        :snt3 (c14-2 / force-01
                     :ARG0 (c14-14 / no-one)
                     :ARG1 (c14-16 / you)
                     :ARG2 (c14-10 / listen-01
                                   :ARG0 c14-16)))

# ::snt today's Mariah . I hate Justin Bieber's voice so I avoid anything about him musically .
# ::tokens ["today", "'s", "Mariah", ".", "I", "hate", "Justin", "Bieber", "'s", "voice", "so", "I", "avoid", "anything", "about", "him", "musically", "."]
# ::lemmas ["today", "'s", "Mariah", ".", "i", "hate", "Justin", "Bieber", "'s", "voice", "so", "i", "avoid", "anything", "about", "he", "musically", "."]
(c15-10 / multi-sentence
        :snt1 (c15-9 / person
                     :name (c15-11 / name
                                   :op1 "Mariah")
                     :time (c15-7 / today))
        :snt2 (c15-1 / cause-01
                     :ARG0 (c15-4 / hate-01
                                  :ARG0 (c15-2 / i)
                                  :ARG1 (c15-5 / voice
                                               :poss (c15-6 / person
                                                            :name (c15-8 / name
                                                                         :op1 "Justin"
                                                                         :op2 "Bieber"))))
                     :ARG1 (c15-0 / avoid-01
                                  :ARG0 c15-2
                                  :ARG1 (c15-12 / anything
                                                :topic c15-6)
                                  :manner (c15-3 / musical))))

# ::snt I don't sit and complain about how he should change this or do that . It is what it is .
# ::tokens ["I", "do", "n't", "sit", "and", "complain", "about", "how", "he", "should", "change", "this", "or", "do", "that", ".", "It", "is", "what", "it", "is", "."]
# ::lemmas ["i", "do", "not", "sit", "and", "complain", "about", "how", "he", "should", "change", "this", "or", "do", "that", ".", "it", "be", "what", "it", "be", "."]
(c16-12 / multi-sentence
        :snt1 (c16-3 / and
                     :op1 (c16-0 / sit-01
                                 :ARG1 (c16-11 / i)
                                 :polarity -)
                     :op2 (c16-4 / complain-01
                                 :ARG0 c16-11
                                 :ARG1 (c16-10 / recommend-01
                                               :ARG1 (c16-8 / or
                                                            :op1 (c16-1 / change-01
                                                                        :ARG0 (c16-6 / he)
                                                                        :ARG1 (c16-9 / this))
                                                            :op2 (c16-2 / do-02
                                                                        :ARG0 c16-6
                                                                        :ARG1 (c16-5 / that))))
                                 :polarity -))
        :snt2 (c16-13 / thing
                      :domain (c16-7 / it)))
