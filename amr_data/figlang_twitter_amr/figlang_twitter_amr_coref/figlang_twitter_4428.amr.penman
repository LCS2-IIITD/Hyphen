# ::snt MAY ... knowing you for that long has given me mentul illnus
# ::tokens ["MAY", "...", "knowing", "you", "for", "that", "long", "has", "given", "me", "mentul", "illnus"]
# ::lemmas ["MAY", "...", "know", "you", "for", "that", "long", "have", "give", "i", "mentul", "illnu"]
(c1-3 / give-01
      :ARG0 (c1-6 / know-01
                  :ARG0 (c1-4 / i)
                  :ARG1 (c1-7 / you)
                  :duration (c1-2 / long
                                  :mod (c1-1 / that)))
      :ARG1 (c1-5 / mentul)
      :ARG2 c1-4
      :time (c1-0 / date-entity
                  :month 5))

# ::snt You lit rally made me this stupid I used to say confuzzled and xd
# ::tokens ["You", "lit", "rally", "made", "me", "this", "stupid", "I", "used", "to", "say", "confuzzled", "and", "xd"]
# ::lemmas ["you", "light", "rally", "make", "i", "this", "stupid", "i", "use", "to", "say", "confuzzled", "and", "xd"]
(c2-0 / say-01
      :ARG0 (c2-8 / i)
      :ARG1 (c2-9 / make-02
                  :ARG0 (c2-4 / rally-01
                              :ARG0 (c2-11 / you)
                              :ARG1-of (c2-5 / light-04))
                  :ARG1 (c2-7 / stupid
                              :degree (c2-3 / this)
                              :domain c2-8
                              :ARG1-of (c2-1 / say-01
                                             :ARG0 c2-8
                                             :time (c2-2 / use-03))))
      :ARG2 (c2-6 / person
                  :name (c2-10 / name
                               :op1 "xd")))

# ::snt aww i m so confuzzled xdddd - dre may
# ::tokens ["aww", "i", "m", "so", "confuzzled", "xdddd", "-", "dre", "may"]
# ::lemmas ["aww", "i", "m", "so", "confuzzle", "xdddd", "-", "dre", "may"]
(c3-3 / confuzzle-01
      :ARG0 (c3-5 / person
                  :name (c3-6 / name
                              :op1 "xdddd"))
      :ARG1 (c3-2 / i)
      :degree (c3-0 / so)
      :mod (c3-1 / aw
                 :mode expressive)
      :ARG1-of (c3-4 / say-01
                     :ARG2 c3-5))

# ::snt GYLLENROOM ... MAANN WE USED TO HAVE MATCHING LAYOUTS WE LOVED TO SEE IT
# ::tokens ["GYLLENROOM", "...", "MAANN", "WE", "USED", "TO", "HAVE", "MATCHING", "LAYOUTS", "WE", "LOVED", "TO", "SEE", "IT"]
# ::lemmas ["GYLLENROOM", "...", "maann", "WE", "use", "to", "have", "MATCHING", "LAYOUTS", "WE", "love", "to", "see", "IT"]
(c4-10 / multi-sentence
       :snt1 (c4-11 / yawn-01
                    :ARG0 (c4-2 / we)
                    :ARG1-of (c4-1 / mean-01
                                   :ARG2 (c4-9 / possible-01
                                               :ARG1 (c4-5 / meet-03
                                                           :ARG0 c4-2
                                                           :ARG1 (c4-6 / lay-01
                                                                       :ARG1-of (c4-7 / look-01
                                                                                      :ARG0 c4-2
                                                                                      :purpose (c4-0 / see-01
                                                                                                     :ARG0 c4-2
                                                                                                     :ARG1 (c4-3 / it)))))))
                    :mode expressive)
       :snt2 (c4-8 / state-01
                   :ARG0 (c4-12 / we)
                   :ARG1 (c4-4 / move-01
                               :ARG0 c4-12
                               :ARG1 c4-6)))

# ::snt YES IT WAS ABSOLOUTELY GORGJUS I STILL HAVE THE ICON & HEADER ON MY PHONE
# ::tokens ["YES", "IT", "WAS", "ABSOLOUTELY", "GORGJUS", "I", "STILL", "HAVE", "THE", "ICON", "&", "HEADER", "ON", "MY", "PHONE"]
# ::lemmas ["yes", "it", "be", "ABSOLOUTELY", "GORGJUS", "i", "still", "have", "THE", "ICON", "&", "HEADER", "ON", "MY", "PHONE"]
(c5-9 / multi-sentence
      :snt1 (c5-6 / grieve-01
                  :ARG0 (c5-8 / it)
                  :mod (c5-1 / absolute))
      :snt2 (c5-2 / have-03
                  :ARG0 (c5-3 / i)
                  :ARG1 (c5-10 / and
                               :op1 (c5-4 / iCON)
                               :op2 (c5-7 / head))
                  :mod (c5-0 / still)
                  :location (c5-5 / PHONE
                                  :poss c5-3)))

# ::snt I DONT CUZ I CHANGED PHONE BUT I STILL HAVE THE TWEET WHERE I SAID WE WERE MATCHING xx
# ::tokens ["I", "DONT", "CUZ", "I", "CHANGED", "PHONE", "BUT", "I", "STILL", "HAVE", "THE", "TWEET", "WHERE", "I", "SAID", "WE", "WERE", "MATCHING", "xx"]
# ::lemmas ["i", "dont", "CUZ", "i", "change", "phone", "but", "i", "still", "have", "the", "TWEET", "where", "i", "say", "we", "be", "MATCHING", "xx"]
(c6-2 / contrast-01
      :ARG1 (c6-0 / decide-01
                  :ARG0 (c6-8 / i)
                  :ARG1 (c6-6 / phone)
                  :polarity -)
      :ARG2 (c6-4 / have-03
                  :ARG0 c6-8
                  :ARG1 (c6-5 / thread
                              :location-of (c6-9 / meet-03
                                                 :ARG0 (c6-3 / we)
                                                 :ARG1-of (c6-1 / say-01
                                                                :ARG0 c6-8)))
                  :mod (c6-7 / still)))

# ::snt YES WE GON BE BACK AT IT AGAIN WHEN LUCIFER S5
# ::tokens ["YES", "WE", "GON", "BE", "BACK", "AT", "IT", "AGAIN", "WHEN", "LUCIFER", "S5"]
# ::lemmas ["yes", "we", "GON", "be", "back", "at", "it", "again", "when", "LUCIFER", "S5"]
(c7-3 / back-02
      :ARG1 (c7-2 / we)
      :location (c7-1 / it)
      :mod (c7-0 / again)
      :time (c7-4 / product
                  :name (c7-5 / name
                              :op1 "LUCIFER"
                              :op2 "S5")))
