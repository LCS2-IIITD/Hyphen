# ::snt Some at CNN & NYT stood w / FOX News when the Obama admin attacked us & tried exclude us-a WH gaggle should be open <URL>
# ::tokens ["Some", "at", "CNN", "&", "NYT", "stood", "w", "/", "FOX", "News", "when", "the", "Obama", "admin", "attacked", "us", "&", "tried", "exclude", "us", "-", "a", "WH", "gaggle", "should", "be", "open", "<", "URL", ">"]
# ::lemmas ["some", "at", "CNN", "&", "NYT", "stand", "w", "/", "FOX", "News", "when", "the", "Obama", "admin", "attack", "us", "&", "try", "exclude", "we", "-", "a", "WH", "gaggle", "should", "be", "open", "<", "URL", ">"]
(c1-10 / multi-sentence
       :snt1 (c1-14 / stand-11
                    :ARG1 (c1-24 / person
                                 :quant (c1-23 / some)
                                 :ARG0-of (c1-20 / have-org-role-91
                                                 :ARG1 (c1-19 / and
                                                              :op1 (c1-21 / publication
                                                                          :name (c1-11 / name
                                                                                       :op1 "CNN"))
                                                              :op2 (c1-16 / publication
                                                                          :name (c1-2 / name
                                                                                      :op1 "NYT")))))
                    :prep-with (c1-22 / broadcast-program
                                      :name (c1-17 / name
                                                   :op1 "FOX"
                                                   :op2 "News"))
                    :time (c1-12 / and
                                 :op1 (c1-0 / attack-01
                                            :ARG0 (c1-9 / government-organization
                                                        :ARG0-of (c1-25 / administrate-01)
                                                        :mod (c1-15 / person
                                                                    :name (c1-3 / name
                                                                                :op1 "Obama")))
                                            :ARG1 (c1-4 / we))
                                 :op2 (c1-6 / try-01
                                            :ARG0 c1-9
                                            :ARG1 (c1-13 / exclude-01
                                                         :ARG0 c1-9
                                                         :ARG1 c1-4))))
       :snt2 (c1-7 / recommend-01
                   :ARG1 (c1-5 / open-01
                               :ARG1 (c1-18 / gaggle
                                            :poss (c1-1 / government-organization
                                                        :name (c1-8 / name
                                                                    :op1 "White"
                                                                    :op2 "House"))))))

# ::snt Sorry , but was never rabidly & falsely attacked Obama like , , & does . BIG DIFFERENCE .
# ::tokens ["Sorry", ",", "but", "was", "never", "rabidly", "&", "falsely", "attacked", "Obama", "like", ",", ",", "&", "does", ".", "BIG", "DIFFERENCE", "."]
# ::lemmas ["sorry", ",", "but", "be", "never", "rabidly", "&", "falsely", "attack", "Obama", "like", ",", ",", "&", "do", ".", "big", "difference", "."]
(c2-4 / contrast-01
      :ARG1 (c2-0 / sorry-01)
      :ARG2 (c2-2 / attack-01
                  :ARG1 (c2-8 / person
                              :name (c2-9 / name
                                          :op1 "Obama"))
                  :time (c2-11 / ever)
                  :manner (c2-10 / and
                                 :op1 (c2-6 / rabies)
                                 :op2 (c2-3 / false))
                  :ARG1-of (c2-5 / resemble-01
                                 :ARG2 c2-2)
                  :ARG1-of (c2-1 / differ-02
                                 :degree (c2-7 / big))
                  :polarity -))

# ::snt that's either selective memory or an admission of lazy media consumption .
# ::tokens ["that", "'s", "either", "selective", "memory", "or", "an", "admission", "of", "lazy", "media", "consumption", "."]
# ::lemmas ["that", "be", "either", "selective", "memory", "or", "an", "admission", "of", "lazy", "medium", "consumption", "."]
(c3-4 / or
      :op1 (c3-7 / memory
                 :mod (c3-0 / selective))
      :op2 (c3-1 / admit-01
                 :ARG1 (c3-2 / consume-01
                             :ARG0 (c3-3 / media
                                         :mod (c3-6 / lazy))))
      :domain (c3-5 / that))

# ::snt No , selective .. sorry . Obama could do no wrong yet Trump can do no right . R U blind ?
# ::tokens ["No", ",", "selective", "..", "sorry", ".", "Obama", "could", "do", "no", "wrong", "yet", "Trump", "can", "do", "no", "right", ".", "R", "U", "blind", "?"]
# ::lemmas ["no", ",", "selective", "..", "sorry", ".", "Obama", "could", "do", "no", "wrong", "yet", "Trump", "can", "do", "no", "right", ".", "r", "u", "blind", "?"]
(c4-14 / multi-sentence
       :snt1 (c4-15 / no)
       :snt2 (c4-0 / selective)
       :snt3 (c4-12 / sorry-01)
       :snt4 (c4-3 / contrast-01
                   :ARG1 (c4-13 / possible-01
                                :ARG1 (c4-1 / do-02
                                            :ARG0 (c4-9 / person
                                                        :name (c4-10 / name
                                                                     :op1 "Obama"))
                                            :ARG1 (c4-4 / wrong-02))
                                :polarity -)
                   :ARG2 (c4-6 / possible-01
                               :ARG1 (c4-5 / do-02
                                           :ARG0 (c4-7 / person
                                                       :name (c4-8 / name
                                                                   :op1 "Trump"))
                                           :ARG1 (c4-17 / wrong-02
                                                        :polarity -))))
       :snt5 (c4-11 / blind-02
                    :ARG1 (c4-16 / you)
                    :polarity (c4-2 / amr-unknown)))

# ::snt Do remind us of all those times Fox reported positive things about Obama .
# ::tokens ["Do", "remind", "us", "of", "all", "those", "times", "Fox", "reported", "positive", "things", "about", "Obama", "."]
# ::lemmas ["do", "remind", "we", "of", "all", "those", "time", "Fox", "report", "positive", "thing", "about", "Obama", "."]
(c5-7 / remind-01
      :ARG0 (c5-12 / you)
      :ARG1 (c5-6 / time
                  :mod (c5-0 / all)
                  :mod (c5-3 / that)
                  :time-of (c5-4 / report-01
                                 :ARG0 (c5-9 / broadcast-program
                                             :name (c5-11 / name
                                                          :op1 "Fox"))
                                 :ARG1 (c5-1 / thing
                                             :mod (c5-10 / positive)
                                             :topic (c5-5 / person
                                                          :name (c5-8 / name
                                                                      :op1 "Obama")))))
      :ARG2 (c5-2 / we)
      :mode imperative)

# ::snt Sorry , I don't banter with . Leaving the rd arm of Dems out is
# ::tokens ["Sorry", ",", "I", "do", "n't", "banter", "with", ".", "Leaving", "the", "rd", "arm", "of", "Dems", "out", "is"]
# ::lemmas ["sorry", ",", "i", "do", "not", "banter", "with", ".", "leave", "the", "rd", "arm", "of", "Dems", "out", "be"]
(c6-8 / multi-sentence
      :snt1 (c6-0 / sorry-01
                  :ARG1 (c6-7 / i)
                  :ARG2 (c6-6 / banter-01
                              :ARG0 (c6-2 / i)
                              :polarity -))
      :snt2 (c6-4 / leave-14
                  :ARG1 (c6-1 / arm
                              :mod (c6-5 / political-party
                                         :name (c6-9 / name
                                                     :op1 "Democratic"
                                                     :op2 "Party"))
                              :mod (c6-10 / again))
                  :ARG2 (c6-3 / out)))
