# ::snt I don't need " no-damn-body " to complete me . I am Skeletor , hear me roar ( w loving acceptanc <URL>
# ::tokens ["I", "do", "n't", "need", "\"", "no", "-", "damn", "-", "body", "\"", "to", "complete", "me", ".", "I", "am", "Skeletor", ",", "hear", "me", "roar", "(", "w", "loving", "acceptanc", "<", "URL", ">"]
# ::lemmas ["i", "do", "not", "need", "\"", "no", "-", "damn", "-", "body", "\"", "to", "complete", "i", ".", "i", "be", "Skeletor", ",", "hear", "i", "roar", "(", "w", "love", "acceptanc", "<", "URL", ">"]
(c1-13 / multi-sentence
       :snt1 (c1-14 / need-01
                    :ARG0 (c1-12 / i)
                    :ARG1 (c1-10 / body
                                 :ARG1-of (c1-0 / damn-01
                                                :polarity -))
                    :purpose (c1-2 / complete-01
                                   :ARG0 c1-12
                                   :ARG1 c1-12)
                    :polarity -)
       :snt2 (c1-8 / person
                   :name (c1-7 / name
                               :op1 "Skeletor")
                   :domain (c1-3 / i))
       :snt3 (c1-4 / hear-01
                   :ARG0 (c1-15 / you)
                   :ARG1 (c1-9 / roar-02
                               :ARG0 (c1-5 / i))
                   :ARG2 (c1-6 / person
                               :ARG0-of (c1-11 / love-01
                                               :ARG1 (c1-1 / acceptanc)))
                   :mode imperative))

# ::snt by the power of grey skull where is she ra when you need her <URL>
# ::tokens ["by", "the", "power", "of", "grey", "skull", "where", "is", "she", "ra", "when", "you", "need", "her", "<", "URL", ">"]
# ::lemmas ["by", "the", "power", "of", "grey", "skull", "where", "be", "she", "ra", "when", "you", "need", "she", "<", "URL", ">"]
(c2-3 / be-located-at-91
      :ARG1 (c2-0 / she)
      :ARG2 (c2-1 / amr-unknown)
      :time (c2-6 / need-01
                  :ARG0 (c2-7 / you)
                  :ARG1 c2-0)
      :ARG1-of (c2-5 / power-01
                     :ARG0 (c2-4 / skull
                                 :ARG1-of (c2-2 / gray-02))))
