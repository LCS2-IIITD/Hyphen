# ::snt a great big Happy Birthday to Griff-the most solid bro you can get
# ::tokens ["a", "great", "big", "Happy", "Birthday", "to", "Griff", "-", "the", "most", "solid", "bro", "you", "can", "get"]
# ::lemmas ["a", "great", "big", "happy", "Birthday", "to", "Griff", "-", "the", "most", "solid", "bro", "you", "can", "get"]
(c1-4 / wish-01
      :ARG1 (c1-9 / birthday
                  :ARG1-of (c1-6 / happy-02)
                  :mod (c1-1 / big)
                  :mod (c1-8 / great)
                  :beneficiary (c1-11 / person
                                      :name (c1-13 / name
                                                   :op1 "Griff")
                                      :ARG0-of (c1-10 / have-rel-role-91
                                                      :ARG1 (c1-14 / you)
                                                      :ARG2 (c1-5 / bro))
                                      :ARG1-of (c1-2 / have-degree-91
                                                     :ARG2 (c1-0 / solid-02
                                                                 :ARG1 c1-11)
                                                     :ARG3 (c1-12 / most)
                                                     :ARG5 (c1-7 / possible-01
                                                                 :ARG1 (c1-3 / get-02
                                                                             :ARG0 c1-14))))))

# ::snt Happy bday Griff .. i'm sure there'll be a few frothies flowing
# ::tokens ["Happy", "bday", "Griff", "..", "i", "'m", "sure", "there", "'ll", "be", "a", "few", "frothies", "flowing"]
# ::lemmas ["happy", "bday", "Griff", "..", "i", "be", "sure", "there", "'ll", "be", "a", "few", "frothie", "flow"]
(c2-9 / multi-sentence
      :snt1 (c2-0 / say-01
                  :ARG1 (c2-3 / happy-01
                              :ARG1 (c2-6 / birthday
                                          :poss (c2-8 / person
                                                      :name (c2-10 / name
                                                                   :op1 "Griff")
                                                      :ARG2-of c2-0))))
      :snt2 (c2-7 / sure-02
                  :ARG0 (c2-2 / i)
                  :ARG1 (c2-1 / flow-01
                              :ARG1 (c2-4 / froth
                                          :quant (c2-5 / few)))))

# ::snt he will lash out tonight and go the West Coast Coolers
# ::tokens ["he", "will", "lash", "out", "tonight", "and", "go", "the", "West", "Coast", "Coolers"]
# ::lemmas ["he", "will", "lash", "out", "tonight", "and", "go", "the", "West", "Coast", "Coolers"]
(c3-1 / and
      :op1 (c3-5 / lash-out-02
                 :ARG0 (c3-2 / he)
                 :time (c3-0 / date-entity
                             :dayperiod (c3-8 / night)
                             :mod (c3-3 / today)))
      :op2 (c3-6 / go-01
                 :ARG1 c3-2
                 :ARG4 (c3-7 / product
                             :name (c3-4 / name
                                         :op1 "West"
                                         :op2 "Coast"
                                         :op3 "Coolers"))))

# ::snt enjoy your night Griff do you need raise bat for a solid ?
# ::tokens ["enjoy", "your", "night", "Griff", "do", "you", "need", "raise", "bat", "for", "a", "solid", "?"]
# ::lemmas ["enjoy", "your", "night", "Griff", "do", "you", "need", "raise", "bat", "for", "a", "solid", "?"]
(c4-0 / say-01
      :ARG0 (c4-8 / i)
      :ARG1 (c4-10 / enjoy-01
                   :ARG0 (c4-4 / person
                               :name (c4-9 / name
                                           :op1 "Griff"))
                   :ARG1 (c4-3 / night
                               :poss c4-4)
                   :polarity (c4-1 / amr-unknown)
                   :mode imperative)
      :ARG2 c4-4
      :topic (c4-2 / need-01
                   :ARG0 c4-4
                   :ARG1 (c4-5 / raise-01
                               :ARG1 (c4-6 / bat)
                               :ARG3 (c4-7 / solid-02))))

# ::snt Sparty I hear DFO Oroton have % of bags for a gift for Griff
# ::tokens ["Sparty", "I", "hear", "DFO", "Oroton", "have", "%", "of", "bags", "for", "a", "gift", "for", "Griff"]
# ::lemmas ["Sparty", "i", "hear", "DFO", "Oroton", "have", "%", "of", "bag", "for", "a", "gift", "for", "Griff"]
(c5-2 / hear-01
      :ARG0 (c5-9 / i)
      :ARG1 (c5-8 / have-03
                  :ARG0 (c5-5 / person
                              :name (c5-10 / name
                                           :op1 "DFO"
                                           :op2 "Orosco"))
                  :ARG1 (c5-7 / bag
                              :quant (c5-3 / percentage))
                  :purpose (c5-6 / gift-01
                                 :ARG2 (c5-1 / person
                                             :name (c5-4 / name
                                                         :op1 "Griff"))))
      :time (c5-0 / party-01))

# ::snt concerns me on fronts - you know what oroton is & you shop at dfo
# ::tokens ["concerns", "me", "on", "fronts", "-", "you", "know", "what", "oroton", "is", "&", "you", "shop", "at", "dfo"]
# ::lemmas ["concern", "i", "on", "front", "-", "you", "know", "what", "oroton", "be", "&", "you", "shop", "at", "dfo"]
(c6-4 / concern-01
      :ARG0 (c6-2 / and
                  :op1 (c6-9 / know-01
                             :ARG0 (c6-10 / you)
                             :ARG1 (c6-6 / thing
                                         :domain (c6-0 / company
                                                       :name (c6-8 / name
                                                                   :op1 "Oroton"))))
                  :op2 (c6-1 / shop-01
                             :ARG0 c6-10
                             :ARG2 c6-0
                             :name (c6-7 / name
                                         :op1 "Dfo")))
      :ARG1 (c6-5 / i)
      :topic (c6-3 / front))

# ::snt it's already come PV but I shan't be carrying a man bag
# ::tokens ["it", "'s", "already", "come", "PV", "but", "I", "sha", "n't", "be", "carrying", "a", "man", "bag"]
# ::lemmas ["it", "be", "already", "come", "PV", "but", "i", "shall", "not", "be", "carry", "a", "man", "bag"]
(c7-2 / contrast-01
      :ARG1 (c7-0 / come-01
                  :ARG1 (c7-6 / it)
                  :time (c7-1 / already))
      :ARG2 (c7-4 / carry-01
                  :ARG0 (c7-3 / i)
                  :ARG1 (c7-5 / bag
                              :mod (c7-7 / man))
                  :polarity -))

# ::snt you could carry you tools in an oroton tool bag ?
# ::tokens ["you", "could", "carry", "you", "tools", "in", "an", "oroton", "tool", "bag", "?"]
# ::lemmas ["you", "could", "carry", "you", "tool", "in", "an", "oroton", "tool", "bag", "?"]
(c8-6 / possible-01
      :polarity (c8-0 / amr-unknown)
      :ARG1 (c8-1 / carry-01
                  :ARG0 (c8-7 / you)
                  :ARG1 (c8-4 / tool)
                  :ARG2 (c8-5 / bag
                              :mod (c8-2 / tool)
                              :mod (c8-3 / oroton))))

# ::snt yes and I could also where my tool bag to work with no pants
# ::tokens ["yes", "and", "I", "could", "also", "where", "my", "tool", "bag", "to", "work", "with", "no", "pants"]
# ::lemmas ["yes", "and", "i", "could", "also", "where", "my", "tool", "bag", "to", "work", "with", "no", "pant"]
(c9-1 / and
      :op1 (c9-8 / yes)
      :op2 (c9-7 / possible-01
                 :ARG1 (c9-6 / be-located-at-91
                             :ARG1 (c9-0 / bag
                                         :purpose (c9-5 / tool)
                                         :poss (c9-2 / i))
                             :ARG2 (c9-3 / work-01
                                         :ARG0 c9-2
                                         :manner (c9-4 / pants
                                                       :polarity -)))
                 :mod (c9-9 / also)))

# ::snt I might add neither of which will happen in case you are in doubt
# ::tokens ["I", "might", "add", "neither", "of", "which", "will", "happen", "in", "case", "you", "are", "in", "doubt"]
# ::lemmas ["i", "might", "add", "neither", "of", "which", "will", "happen", "in", "case", "you", "be", "in", "doubt"]
(c10-4 / possible-01
       :ARG1 (c10-1 / add-01
                    :ARG0 (c10-2 / i)
                    :ARG1 (c10-3 / thing
                                 :mod (c10-6 / either
                                             :polarity -))
                    :condition (c10-0 / doubt-01
                                      :ARG0 (c10-5 / you))))

# ::snt And no pants in that chair could get uncomfortable after a while
# ::tokens ["And", "no", "pants", "in", "that", "chair", "could", "get", "uncomfortable", "after", "a", "while"]
# ::lemmas ["and", "no", "pant", "in", "that", "chair", "could", "get", "uncomfortable", "after", "a", "while"]
(c11-1 / and
       :op2 (c11-7 / possible-01
                   :ARG1 (c11-6 / get-03
                                :ARG1 (c11-4 / pants
                                             :location (c11-2 / chair
                                                              :mod (c11-5 / that))
                                             :polarity -)
                                :ARG2 (c11-0 / comfortable-02
                                             :ARG0 c11-4
                                             :polarity -)
                                :time (c11-8 / after
                                             :op1 (c11-3 / while)))))
