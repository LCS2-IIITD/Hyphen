# ::snt was a MUST SEE TONIGHT ! They replay it if ur on east coast and missed
# ::tokens ["was", "a", "MUST", "SEE", "TONIGHT", "!", "They", "replay", "it", "if", "ur", "on", "east", "coast", "and", "missed"]
# ::lemmas ["be", "a", "must", "SEE", "tonight", "!", "they", "replay", "it", "if", "ur", "on", "east", "coast", "and", "miss"]
(c1-11 / multi-sentence
       :snt1 (c1-0 / see-01
                   :ARG1-of (c1-6 / obligate-01)
                   :time (c1-7 / tomorrow))
       :snt2 (c1-5 / have-condition-91
                   :ARG1 (c1-1 / and
                               :op1 (c1-8 / replay-01
                                          :ARG0 (c1-4 / they)
                                          :ARG1 (c1-10 / it))
                               :op2 (c1-2 / miss-02
                                          :ARG0 (c1-13 / you)
                                          :ARG1 c1-10))
                   :ARG2 (c1-9 / be-located-at-91
                               :ARG1 c1-13
                               :ARG2 (c1-3 / country-region
                                           :name (c1-12 / name
                                                        :op1 "East"
                                                        :op2 "Coast")))))

# ::snt I have watched for years , and I think this is the best episode I've seen .
# ::tokens ["I", "have", "watched", "for", "years", ",", "and", "I", "think", "this", "is", "the", "best", "episode", "I", "'ve", "seen", "."]
# ::lemmas ["i", "have", "watch", "for", "years", ",", "and", "i", "think", "this", "be", "the", "good", "episode", "i", "'ve", "see", "."]
(c2-1 / and
      :op1 (c2-3 / watch-01
                 :ARG0 (c2-9 / i)
                 :duration (c2-10 / multiple
                                  :op1 (c2-7 / temporal-quantity
                                             :unit (c2-11 / year)
                                             :quant 1)))
      :op2 (c2-4 / think-01
                 :ARG0 c2-9
                 :ARG1 (c2-12 / episode
                              :ARG1-of (c2-0 / see-01
                                             :ARG0 c2-9)
                              :domain (c2-2 / this)
                              :ARG1-of (c2-6 / have-degree-91
                                             :ARG2 (c2-8 / good-02
                                                         :ARG1 c2-12)
                                             :ARG3 (c2-5 / most)))))
