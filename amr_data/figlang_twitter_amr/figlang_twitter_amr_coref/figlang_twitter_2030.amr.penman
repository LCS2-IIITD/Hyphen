# ::snt I tweeted this to somebody today . Read Revelation :1- then Psalm :11 then ask again .
# ::tokens ["I", "tweeted", "this", "to", "somebody", "today", ".", "Read", "Revelation", ":", "1-", "then", "Psalm", ":", "11", "then", "ask", "again", "."]
# ::lemmas ["i", "tweet", "this", "to", "somebody", "today", ".", "read", "Revelation", ":", "1-", "then", "Psalm", ":", "11", "then", "ask", "again", "."]
(c1-14 / multi-sentence
       :snt1 (c1-8 / tweet-02
                   :ARG0 (c1-13 / i)
                   :ARG1 (c1-5 / this)
                   :ARG2 (c1-0 / somebody)
                   :time (c1-16 / today))
       :snt2 (c1-9 / read-01
                   :ARG0 (c1-10 / you)
                   :ARG1 (c1-3 / and
                               :op1 (c1-7 / verse
                                          :part-of (c1-12 / book
                                                          :name (c1-15 / name
                                                                       :op1 "Revelation"))
                                          :mod 1)
                               :op2 (c1-4 / verse
                                          :part-of (c1-1 / book
                                                         :name (c1-11 / name
                                                                      :op1 "Plem"))
                                          :mod 11)
                               :op3 (c1-17 / ask-01
                                           :ARG0 c1-10
                                           :mod (c1-2 / again)
                                           :time (c1-6 / then)
                                           :mode imperative))
                   :mode imperative))

# ::snt I don't want to live forever no matter what lies the Bible spews at me .
# ::tokens ["I", "do", "n't", "want", "to", "live", "forever", "no", "matter", "what", "lies", "the", "Bible", "spews", "at", "me", "."]
# ::lemmas ["i", "do", "not", "want", "to", "live", "forever", "no", "matter", "what", "lie", "the", "Bible", "spew", "at", "i", "."]
(c2-1 / want-01
      :ARG0 (c2-7 / i)
      :ARG1 (c2-4 / live-01
                  :ARG0 c2-7
                  :duration (c2-0 / forever)
                  :polarity -)
      :ARG1-of (c2-3 / regardless-91
                     :ARG2 (c2-2 / thing
                                 :ARG1-of (c2-5 / lie-08
                                                :ARG0 (c2-6 / book
                                                            :name (c2-8 / name
                                                                        :op1 "Bible"))
                                                :ARG2 c2-7))))

# ::snt i don't believe you . You're lying to yourself . If you were indestructible , no pain ...
# ::tokens ["i", "do", "n't", "believe", "you", ".", "You", "'re", "lying", "to", "yourself", ".", "If", "you", "were", "indestructible", ",", "no", "pain", "..."]
# ::lemmas ["i", "do", "not", "believe", "you", ".", "you", "be", "lie", "to", "yourself", ".", "if", "you", "be", "indestructible", ",", "no", "pain", "..."]
(c3-6 / multi-sentence
      :snt1 (c3-4 / believe-01
                  :ARG0 (c3-5 / i)
                  :ARG1 (c3-7 / you)
                  :polarity -)
      :snt2 (c3-2 / lie-08
                  :ARG0 (c3-8 / you
                              :ARG2-of c3-2))
      :snt3 (c3-3 / pain-01
                  :condition (c3-1 / possible-01
                                   :ARG1 (c3-0 / destroy-01
                                               :ARG1 c3-8)
                                   :polarity -)
                  :polarity -))

# ::snt you would have no concept of time . And you're gonna be to busy enjoying perfect love ! Come on !
# ::tokens ["you", "would", "have", "no", "concept", "of", "time", ".", "And", "you", "'re", "gon", "na", "be", "to", "busy", "enjoying", "perfect", "love", "!", "Come", "on", "!"]
# ::lemmas ["you", "would", "have", "no", "concept", "of", "time", ".", "and", "you", "be", "going", "to", "be", "to", "busy", "enjoy", "perfect", "love", "!", "come", "on", "!"]
(c4-9 / multi-sentence
      :snt1 (c4-4 / have-03
                  :ARG0 (c4-10 / you)
                  :ARG1 (c4-3 / concept
                              :topic (c4-5 / time))
                  :polarity -)
      :snt2 (c4-2 / and
                  :op2 (c4-7 / busy-01
                             :ARG1 (c4-11 / you)
                             :ARG2 (c4-12 / enjoy-01
                                          :ARG0 c4-11
                                          :ARG1 (c4-6 / love-01
                                                      :ARG1-of (c4-8 / perfect-02)))))
      :snt3 (c4-0 / come-on-25
                  :ARG1 (c4-1 / you)
                  :mode imperative))

# ::snt so you would choose to cease to exist to enjoy a life in complete and utter joy for eternity ?
# ::tokens ["so", "you", "would", "choose", "to", "cease", "to", "exist", "to", "enjoy", "a", "life", "in", "complete", "and", "utter", "joy", "for", "eternity", "?"]
# ::lemmas ["so", "you", "would", "choose", "to", "cease", "to", "exist", "to", "enjoy", "a", "life", "in", "complete", "and", "utter", "joy", "for", "eternity", "?"]
(c5-2 / choose-01
      :polarity (c5-1 / amr-unknown)
      :ARG0 (c5-9 / you)
      :ARG1 (c5-0 / cease-01
                  :ARG1 (c5-10 / exist-01
                               :ARG1 c5-9))
      :purpose (c5-3 / enjoy-01
                     :ARG0 c5-9
                     :ARG1 (c5-7 / life
                                 :duration (c5-4 / eternity)
                                 :manner (c5-8 / joy
                                               :ARG1-of (c5-5 / complete-02)
                                               :mod (c5-6 / utter)))))

# ::snt cease to exist over enjoying a life in perfect love , peace , and joy with tons of people u love ?
# ::tokens ["cease", "to", "exist", "over", "enjoying", "a", "life", "in", "perfect", "love", ",", "peace", ",", "and", "joy", "with", "tons", "of", "people", "u", "love", "?"]
# ::lemmas ["cease", "to", "exist", "over", "enjoy", "a", "life", "in", "perfect", "love", ",", "peace", ",", "and", "joy", "with", "ton", "of", "people", "u", "love", "?"]
(c6-10 / prefer-01
       :polarity (c6-1 / amr-unknown)
       :ARG0 (c6-11 / you)
       :ARG1 (c6-13 / exist-01
                    :ARG1 c6-11)
       :ARG2 (c6-4 / enjoy-01
                   :ARG0 c6-11
                   :ARG1 (c6-7 / life
                               :ARG1-of (c6-5 / perfect-02
                                              :ARG2 (c6-12 / and
                                                           :op1 (c6-8 / love-01
                                                                      :ARG0 c6-11)
                                                           :op2 (c6-3 / peace)
                                                           :op3 (c6-9 / joy)))
                               :accompanier (c6-2 / person
                                                  :quant (c6-6 / ton)
                                                  :ARG1-of (c6-0 / love-01
                                                                 :ARG0 c6-11)))))

# ::snt have you ever had a moment where you couldn't contain yourself because you were so overjoyed ?
# ::tokens ["have", "you", "ever", "had", "a", "moment", "where", "you", "could", "n't", "contain", "yourself", "because", "you", "were", "so", "overjoyed", "?"]
# ::lemmas ["have", "you", "ever", "have", "a", "moment", "where", "you", "could", "not", "contain", "yourself", "because", "you", "be", "so", "overjoyed", "?"]
(c7-4 / have-03
      :ARG0 (c7-8 / you)
      :ARG1 (c7-7 / moment
                  :time-of (c7-6 / possible-01
                                 :ARG1 (c7-3 / contain-01
                                             :ARG0 c7-8
                                             :ARG1 c7-8)
                                 :ARG1-of (c7-0 / cause-01
                                                :ARG0 (c7-5 / overjoy-01
                                                            :ARG0 c7-8
                                                            :degree (c7-1 / so)))
                                 :polarity -))
      :time (c7-9 / ever)
      :polarity (c7-2 / amr-unknown))

# ::snt I've had times when I was very happy , yes .
# ::tokens ["I", "'ve", "had", "times", "when", "I", "was", "very", "happy", ",", "yes", "."]
# ::lemmas ["i", "'ve", "have", "time", "when", "i", "be", "very", "happy", ",", "yes", "."]
(c8-0 / have-03
      :ARG0 (c8-4 / i)
      :ARG1 (c8-2 / time
                  :time-of (c8-3 / happy-01
                                 :ARG1 c8-4
                                 :degree (c8-1 / very))))

# ::snt well think of that happiness multiplied in intensity by infinity sustained for eternity .
# ::tokens ["well", "think", "of", "that", "happiness", "multiplied", "in", "intensity", "by", "infinity", "sustained", "for", "eternity", "."]
# ::lemmas ["well", "think", "of", "that", "happiness", "multiply", "in", "intensity", "by", "infinity", "sustain", "for", "eternity", "."]
(c9-4 / think-01
      :ARG0 (c9-7 / you)
      :ARG1 (c9-6 / multiply-01
                  :ARG1 (c9-3 / happiness
                              :mod (c9-2 / that))
                  :ARG2 (c9-5 / intensity)
                  :ARG1-of (c9-0 / sustain-01
                                 :duration (c9-8 / eternity))
                  :ARG4 infinity)
      :mod (c9-1 / well)
      :mode imperative)

# ::snt no thank you , being happy is enough I don't need it to be intensified by infinity .
# ::tokens ["no", "thank", "you", ",", "being", "happy", "is", "enough", "I", "do", "n't", "need", "it", "to", "be", "intensified", "by", "infinity", "."]
# ::lemmas ["no", "thank", "you", ",", "be", "happy", "be", "enough", "i", "do", "not", "need", "it", "to", "be", "intensify", "by", "infinity", "."]
(c10-0 / and
       :op1 (c10-3 / thank-01
                   :ARG0 (c10-5 / i)
                   :ARG1 (c10-7 / you)
                   :polarity -)
       :op2 (c10-1 / have-quant-91
                   :ARG1 (c10-4 / happy-01
                                :ARG1 c10-5)
                   :ARG3 (c10-8 / enough)
                   :ARG6 (c10-6 / need-01
                                :ARG0 c10-5
                                :ARG1 (c10-2 / intensify-01
                                             :ARG1 c10-4
                                             :ARG2 infinity)
                                :polarity -)))

# ::snt well that's what God is . He is infinitely happy ! I think you're lying to yourself again .
# ::tokens ["well", "that", "'s", "what", "God", "is", ".", "He", "is", "infinitely", "happy", "!", "I", "think", "you", "'re", "lying", "to", "yourself", "again", "."]
# ::lemmas ["well", "that", "be", "what", "God", "be", ".", "he", "be", "infinitely", "happy", "!", "i", "think", "you", "be", "lie", "to", "yourself", "again", "."]
(c11-10 / multi-sentence
        :snt1 (c11-6 / thing
                     :domain (c11-9 / person
                                    :name (c11-11 / name
                                                  :op1 "God"))
                     :mod (c11-2 / well))
        :snt2 (c11-4 / happy-01
                     :ARG1 (c11-8 / he)
                     :degree (c11-1 / infinite))
        :snt3 (c11-3 / think-01
                     :ARG0 (c11-5 / i)
                     :ARG1 (c11-7 / lie-08
                                  :ARG0 (c11-12 / you
                                                :ARG2-of c11-7)
                                  :mod (c11-0 / again))))

# ::snt I'm happy , no lies you tell me will convince me that I'm not .
# ::tokens ["I", "'m", "happy", ",", "no", "lies", "you", "tell", "me", "will", "convince", "me", "that", "I", "'m", "not", "."]
# ::lemmas ["i", "be", "happy", ",", "no", "lie", "you", "tell", "i", "will", "convince", "i", "that", "i", "be", "not", "."]
(c12-0 / and
       :op1 (c12-2 / happy-01
                   :ARG1 (c12-5 / i))
       :op2 (c12-1 / convince-01
                   :ARG0 (c12-3 / lie-08
                                :ARG0 (c12-6 / you)
                                :ARG2 c12-5)
                   :ARG1 c12-5
                   :ARG2 (c12-4 / have-polarity-91
                                :ARG1 c12-5
                                :ARG2 -)
                   :polarity -))

# ::snt The historically consistent issue that Xians have : " How can you be ha <URL>
# ::tokens ["The", "historically", "consistent", "issue", "that", "Xians", "have", ":", "\"", "How", "can", "you", "be", "ha", "<", "URL", ">"]
# ::lemmas ["the", "historically", "consistent", "issue", "that", "Xians", "have", ":", "\"", "how", "can", "you", "be", "ha", "<", "URL", ">"]
(c13-6 / issue-02
       :ARG0 (c13-4 / possible-01
                    :ARG1 (c13-2 / ha
                                 :domain (c13-3 / person
                                                :mod (c13-8 / ethnic-group
                                                            :name (c13-7 / name
                                                                         :op1 "Xian"))))
                    :manner (c13-0 / amr-unknown))
       :ARG1-of (c13-1 / consistent-02
                       :mod (c13-5 / historical)))

# ::snt It is weird to me that OT verses are cited to invoke JC when they refer to another
# ::tokens ["It", "is", "weird", "to", "me", "that", "OT", "verses", "are", "cited", "to", "invoke", "JC", "when", "they", "refer", "to", "another"]
# ::lemmas ["it", "be", "weird", "to", "i", "that", "OT", "verse", "be", "cite", "to", "invoke", "JC", "when", "they", "refer", "to", "another"]
(c14-2 / weird
       :domain (c14-1 / cite-01
                      :ARG1 (c14-4 / verse
                                   :mod (c14-9 / book
                                               :name (c14-11 / name
                                                             :op1 "OT")))
                      :purpose (c14-10 / invoke-01
                                       :ARG1 (c14-7 / person
                                                    :name (c14-6 / name
                                                                 :op1 "JC"))
                                       :time (c14-8 / refer-01
                                                    :ARG0 (c14-5 / they)
                                                    :ARG1 (c14-0 / another))))
       :beneficiary (c14-3 / i))

# ::snt That's why u need revelation by the Holy spirit .
# ::tokens ["That", "'s", "why", "u", "need", "revelation", "by", "the", "Holy", "spirit", "."]
# ::lemmas ["that", "be", "why", "u", "need", "revelation", "by", "the", "Holy", "spirit", "."]
(c15-1 / cause-01
       :ARG0 (c15-3 / that)
       :ARG1 (c15-5 / need-01
                    :ARG0 (c15-6 / you)
                    :ARG1 (c15-4 / reveal-01
                                 :ARG0 (c15-0 / spirit
                                              :mod (c15-2 / holy)))))

# ::snt I have revelation already And experience it daily Just not the Jesus version
# ::tokens ["I", "have", "revelation", "already", "And", "experience", "it", "daily", "Just", "not", "the", "Jesus", "version"]
# ::lemmas ["i", "have", "revelation", "already", "and", "experience", "it", "daily", "just", "not", "the", "Jesus", "version"]
(c16-1 / and
       :op1 (c16-3 / have-03
                   :ARG0 (c16-9 / i)
                   :ARG1 (c16-7 / revelation)
                   :time (c16-11 / already))
       :op2 (c16-12 / experience-01
                    :ARG0 c16-9
                    :ARG1 c16-7
                    :frequency (c16-4 / rate-entity-91
                                      :ARG3 (c16-6 / temporal-quantity
                                                   :unit (c16-0 / day)
                                                   :quant 1))
                    :ARG1-of (c16-2 / contrast-01
                                    :ARG2 (c16-5 / version
                                                 :mod (c16-8 / person
                                                             :name (c16-10 / name
                                                                           :op1 "Jesus"))
                                                 :polarity -))))

# ::snt That very enlightenment and revelation you have is darkness .
# ::tokens ["That", "very", "enlightenment", "and", "revelation", "you", "have", "is", "darkness", "."]
# ::lemmas ["that", "very", "enlightenment", "and", "revelation", "you", "have", "be", "darkness", "."]
(c17-0 / darkness
       :domain (c17-1 / and
                      :op1 (c17-6 / enlighten-01
                                  :ARG1 (c17-5 / you))
                      :op2 (c17-4 / reveal-01
                                  :ARG0 c17-5)
                      :mod (c17-2 / very)
                      :mod (c17-3 / that)))
