# ::snt Let's be real . Reince is going to make the trains run while Trump and Bannon brainstorm new conspiracy theories
# ::tokens ["Let", "'s", "be", "real", ".", "Reince", "is", "going", "to", "make", "the", "trains", "run", "while", "Trump", "and", "Bannon", "brainstorm", "new", "conspiracy", "theories"]
# ::lemmas ["let", "us", "be", "real", ".", "Reince", "be", "go", "to", "make", "the", "train", "run", "while", "Trump", "and", "Bannon", "brainstorm", "new", "conspiracy", "theory"]
(c1-15 / multi-sentence
       :snt1 (c1-11 / real-04
                    :ARG1 (c1-3 / we)
                    :mode imperative)
       :snt2 (c1-2 / make-02
                   :ARG0 (c1-14 / person
                                :name (c1-16 / name
                                             :op1 "Reince"))
                   :ARG1 (c1-7 / run-01
                               :ARG1 (c1-10 / train))
                   :time (c1-13 / brainstorm-01
                                :ARG0 (c1-0 / and
                                            :op1 (c1-9 / person
                                                       :name (c1-12 / name
                                                                    :op1 "Trump"))
                                            :op2 (c1-5 / person
                                                       :name (c1-8 / name
                                                                   :op1 "Bannon")))
                                :ARG1 (c1-4 / theory
                                            :topic (c1-6 / conspire-01)
                                            :ARG1-of (c1-1 / new-01)))))

# ::snt let's be real here - a having & who was wrong about almost everything this
# ::tokens ["let", "'s", "be", "real", "here", "-", "a", "having", "&", "who", "was", "wrong", "about", "almost", "everything", "this"]
# ::lemmas ["let", "us", "be", "real", "here", "-", "a", "having", "&", "who", "be", "wrong", "about", "almost", "everything", "this"]
(c2-5 / real-04
      :ARG1 (c2-1 / we)
      :ARG2 (c2-0 / and
                  :op1 (c2-2 / have-03)
                  :op2 (c2-7 / wrong-04
                             :ARG1 (c2-6 / person)
                             :ARG2 (c2-8 / everything
                                         :mod (c2-3 / almost)
                                         :mod (c2-4 / this))))
      :mode imperative)

# ::snt Or we can be real here : she's probably right .
# ::tokens ["Or", "we", "can", "be", "real", "here", ":", "she", "'s", "probably", "right", "."]
# ::lemmas ["or", "we", "can", "be", "real", "here", ":", "she", "be", "probably", "right", "."]
(c3-5 / or
      :op2 (c3-1 / cause-01
                 :ARG0 (c3-7 / right-06
                             :ARG1 (c3-0 / she)
                             :mod (c3-8 / probable))
                 :ARG1 (c3-6 / possible-01
                             :ARG1 (c3-4 / real-04
                                         :ARG1 (c3-2 / we)
                                         :location (c3-3 / here)))))
