# ::snt Obama leads the crowd in a chant of " Fired up and ready to go " <URL> <URL>
# ::tokens ["Obama", "leads", "the", "crowd", "in", "a", "chant", "of", "\"", "Fired", "up", "and", "ready", "to", "go", "\"", "<", "URL", ">", "<", "URL", ">"]
# ::lemmas ["Obama", "lead", "the", "crowd", "in", "a", "chant", "of", "\"", "fire", "up", "and", "ready", "to", "go", "\"", "<", "URL", ">", "<", "URL", ">"]
(c1-5 / lead-01
      :ARG0 (c1-7 / person
                  :name (c1-8 / name
                              :op1 "Obama"))
      :ARG1 (c1-3 / crowd)
      :manner (c1-0 / chant-01
                    :ARG0 c1-7
                    :ARG1 (c1-1 / and
                                :op1 (c1-2 / fire-up-02)
                                :op2 (c1-4 / ready-02
                                           :ARG1 c1-3
                                           :ARG2 (c1-6 / go-02
                                                       :ARG0 c1-3)))))

# ::snt Love this man . Touched so many lives . Hard to see him go .
# ::tokens ["Love", "this", "man", ".", "Touched", "so", "many", "lives", ".", "Hard", "to", "see", "him", "go", "."]
# ::lemmas ["love", "this", "man", ".", "touch", "so", "many", "life", ".", "hard", "to", "see", "he", "go", "."]
(c2-12 / multi-sentence
       :snt1 (c2-8 / love-01
                   :ARG1 (c2-3 / man
                               :mod (c2-7 / this)))
       :snt2 (c2-4 / Touch-01
                   :ARG1 (c2-9 / life
                               :ARG1-of (c2-5 / have-quant-91
                                              :ARG2 (c2-6 / many)
                                              :ARG3 (c2-0 / so))))
       :snt3 (c2-11 / hard-02
                    :ARG1 (c2-1 / see-01
                                :ARG1 (c2-10 / go-02
                                             :ARG0 (c2-2 / he)))))

# ::snt Care to remind me what he did so well ?
# ::tokens ["Care", "to", "remind", "me", "what", "he", "did", "so", "well", "?"]
# ::lemmas ["care", "to", "remind", "i", "what", "he", "do", "so", "well", "?"]
(c3-3 / care-02
      :polarity (c3-2 / amr-unknown)
      :ARG0 (c3-8 / you)
      :ARG1 (c3-6 / remind-01
                  :ARG0 c3-8
                  :ARG1 (c3-0 / do-02
                              :ARG0 (c3-5 / he)
                              :ARG1 (c3-4 / well-09
                                          :degree (c3-1 / so)))
                  :ARG2 (c3-7 / i)))

# ::snt I do . Valuable time . Will not waste it on you . Start working on your hate . It will take forever ...
# ::tokens ["I", "do", ".", "Valuable", "time", ".", "Will", "not", "waste", "it", "on", "you", ".", "Start", "working", "on", "your", "hate", ".", "It", "will", "take", "forever", "..."]
# ::lemmas ["i", "do", ".", "valuable", "time", ".", "will", "not", "waste", "it", "on", "you", ".", "start", "work", "on", "your", "hate", ".", "it", "will", "take", "forever", "..."]
(c4-12 / multi-sentence
       :snt1 (c4-0 / do-02
                   :ARG0 (c4-11 / i))
       :snt2 (c4-10 / time
                    :ARG1-of (c4-9 / value-02))
       :snt3 (c4-3 / waste-01
                   :ARG0 c4-11
                   :polarity -)
       :ARG1 (c4-6 / it)
       :ARG2 (c4-13 / you)
       :snt4 (c4-1 / start-01
                   :ARG0 (c4-14 / you)
                   :ARG1 (c4-4 / work-01
                               :ARG0 c4-14
                               :ARG1 (c4-7 / hate-01
                                           :ARG0 c4-14))
                   :mode imperative)
       :snt5 (c4-5 / take-10
                   :ARG0 (c4-8 / it)
                   :ARG1 (c4-2 / forever)))

# ::snt I don't hate , I simply try to educate . Apparently you fail in this regard
# ::tokens ["I", "do", "n't", "hate", ",", "I", "simply", "try", "to", "educate", ".", "Apparently", "you", "fail", "in", "this", "regard"]
# ::lemmas ["i", "do", "not", "hate", ",", "i", "simply", "try", "to", "educate", ".", "apparently", "you", "fail", "in", "this", "regard"]
(c5-7 / multi-sentence
      :snt1 (c5-4 / hate-01
                  :ARG0 (c5-6 / i)
                  :polarity -)
      :snt2 (c5-5 / try-01
                  :ARG0 c5-6
                  :ARG1 (c5-9 / educate-01
                              :ARG0 c5-6)
                  :ARG1-of (c5-0 / simple-02))
      :snt3 (c5-2 / fail-01
                  :ARG1 (c5-8 / you)
                  :ARG2 (c5-3 / this)
                  :ARG1-of (c5-1 / appear-02)))

# ::snt It's not my responsibility to educate you , gotta do that one on your own .
# ::tokens ["It", "'s", "not", "my", "responsibility", "to", "educate", "you", ",", "got", "ta", "do", "that", "one", "on", "your", "own", "."]
# ::lemmas ["it", "be", "not", "my", "responsibility", "to", "educate", "you", ",", "got", "to", "do", "that", "one", "on", "your", "own", "."]
(c6-1 / and
      :op1 (c6-3 / responsible-03
                 :ARG0 (c6-5 / i)
                 :ARG1 (c6-7 / educate-01
                             :ARG0 c6-5
                             :ARG1 (c6-6 / you))
                 :polarity -)
      :op2 (c6-2 / obligate-01
                 :ARG2 (c6-0 / do-02
                             :ARG0 c6-6
                             :ARG1 c6-7
                             :mod (c6-4 / by-oneself))))

# ::snt .. Still thinking of something ? I will forgive you when you see the light
# ::tokens ["..", "Still", "thinking", "of", "something", "?", "I", "will", "forgive", "you", "when", "you", "see", "the", "light"]
# ::lemmas ["..", "still", "think", "of", "something", "?", "i", "will", "forgive", "you", "when", "you", "see", "the", "light"]
(c7-8 / multi-sentence
      :snt1 (c7-4 / think-01
                  :polarity (c7-1 / amr-unknown)
                  :ARG0 (c7-9 / you)
                  :ARG1 (c7-0 / something)
                  :mod (c7-6 / still))
      :snt2 (c7-2 / forgive-01
                  :ARG0 (c7-7 / i)
                  :ARG1 (c7-10 / you)
                  :time (c7-3 / see-01
                              :ARG0 c7-10
                              :ARG1 (c7-5 / light))))
