# ::snt driver faces court charged with raping woman after Christmas party Ajmal Hazraty , , is due to appear in court this morning ( Saturday January ) charged with two counts of the - year-old woman <URL>
# ::tokens ["driver", "faces", "court", "charged", "with", "raping", "woman", "after", "Christmas", "party", "Ajmal", "Hazraty", ",", ",", "is", "due", "to", "appear", "in", "court", "this", "morning", "(", "Saturday", "January", ")", "charged", "with", "two", "counts", "of", "the", "-", "year", "-", "old", "woman", "<", "URL", ">"]
# ::lemmas ["driver", "face", "court", "charge", "with", "rape", "woman", "after", "Christmas", "party", "Ajmal", "Hazraty", ",", ",", "be", "due", "to", "appear", "in", "court", "this", "morning", "(", "Saturday", "January", ")", "charge", "with", "two", "count", "of", "the", "-", "year", "-", "old", "woman", "<", "URL", ">"]
(c1-21 / and
       :op1 (c1-22 / face-01
                   :ARG0 (c1-24 / person
                                :ARG0-of (c1-0 / drive-01))
                   :ARG1 (c1-3 / court
                               :ARG1-of (c1-1 / charge-05
                                              :ARG2 (c1-9 / rape-01
                                                          :ARG0 c1-24
                                                          :ARG1 (c1-4 / woman)
                                                          :time (c1-12 / after
                                                                       :op1 (c1-23 / party
                                                                                   :mod (c1-17 / festival
                                                                                               :name (c1-11 / name
                                                                                                            :op1 "Christmas"))))))))
       :op2 (c1-19 / due-03
                   :ARG1 c1-24
                   :ARG2 (c1-2 / appear-01
                               :ARG1 c1-24
                               :location c1-3
                               :time (c1-15 / date-entity
                                            :dayperiod (c1-10 / morning)
                                            :mod (c1-8 / today)))
                   :time (c1-7 / date-entity
                               :weekday (c1-14 / saturday)
                               :dayperiod c1-10))
       :ARG1-of (c1-6 / cause-01
                      :ARG0 (c1-18 / charge-05
                                   :ARG1 c1-24
                                   :ARG2 (c1-16 / count
                                                :topic (c1-13 / woman
                                                              :age (c1-5 / temporal-quantity
                                                                         :unit (c1-20 / year)
                                                                         :quant 1))
                                                :quant 2))))

# ::snt If only the authorities would have listened to us . <URL>
# ::tokens ["If", "only", "the", "authorities", "would", "have", "listened", "to", "us", ".", "<", "URL", ">"]
# ::lemmas ["if", "only", "the", "authority", "would", "have", "listen", "to", "we", ".", "<", "URL", ">"]
(c2-2 / have-condition-91
      :ARG2 (c2-4 / listen-01
                  :ARG0 (c2-0 / authority)
                  :ARG1 (c2-1 / we))
      :mod (c2-3 / only))

# ::snt This comment from Dec when ULL won its appeal against being banned in Brighton But District Judge Tessa Szagun ruled Uber had " satisfied me that they are now fit and proper to be granted this licence " . Now where have we heard that before
# ::tokens ["This", "comment", "from", "Dec", "when", "ULL", "won", "its", "appeal", "against", "being", "banned", "in", "Brighton", "But", "District", "Judge", "Tessa", "Szagun", "ruled", "Uber", "had", "\"", "satisfied", "me", "that", "they", "are", "now", "fit", "and", "proper", "to", "be", "granted", "this", "licence", "\"", ".", "Now", "where", "have", "we", "heard", "that", "before"]
# ::lemmas ["this", "comment", "from", "Dec", "when", "ULL", "win", "its", "appeal", "against", "be", "ban", "in", "Brighton", "but", "District", "Judge", "Tessa", "Szagun", "rule", "Uber", "have", "\"", "satisfy", "i", "that", "they", "be", "now", "fit", "and", "proper", "to", "be", "grant", "this", "licence", "\"", ".", "now", "where", "have", "we", "hear", "that", "before"]
(c3-14 / multi-sentence
       :snt1 (c3-6 / contrast-01
                   :ARG1 (c3-0 / comment
                               :time (c3-1 / date-entity
                                           :time-of (c3-7 / win-01
                                                          :ARG0 (c3-9 / company
                                                                      :name (c3-15 / name
                                                                                   :op1 "ULL"))
                                                          :ARG1 (c3-24 / appeal-01
                                                                       :ARG0 c3-9
                                                                       :ARG2 (c3-30 / ban-01
                                                                                    :ARG2 c3-9
                                                                                    :location (c3-21 / city-district
                                                                                                     :name (c3-3 / name
                                                                                                                 :op1 "Brighton")))))
                                           :month 12)
                               :mod (c3-10 / this))
                   :ARG2 (c3-11 / rule-01
                                :ARG0 (c3-32 / person
                                             :name (c3-20 / name
                                                          :op1 "Tessa"
                                                          :op2 "Szagun")
                                             :ARG0-of (c3-31 / judge-01)
                                             :location (c3-22 / district))
                                :ARG1 (c3-18 / satisfy-01
                                             :ARG0 (c3-19 / company
                                                          :name (c3-5 / name
                                                                      :op1 "Uber"))
                                             :ARG1 (c3-4 / i)
                                             :ARG2 (c3-16 / and
                                                          :op1 (c3-25 / fit-05
                                                                      :ARG1 c3-19)
                                                          :op2 (c3-28 / proper
                                                                      :domain c3-19)
                                                          :purpose (c3-13 / grant-01
                                                                          :ARG1 (c3-29 / license
                                                                                       :mod c3-10))
                                                          :ARG2 c3-19)
                                             :time (c3-12 / now))))
       :snt2 (c3-26 / hear-01
                    :ARG0 (c3-17 / we)
                    :ARG1 (c3-8 / that)
                    :time (c3-27 / now)
                    :location (c3-2 / amr-unknown)
                    :time (c3-23 / before)))

# ::snt If you don't start to grasp the difference between driver culpability and operator culpability , you're going to waste a lot of drivers ' money .
# ::tokens ["If", "you", "do", "n't", "start", "to", "grasp", "the", "difference", "between", "driver", "culpability", "and", "operator", "culpability", ",", "you", "'re", "going", "to", "waste", "a", "lot", "of", "drivers", "'", "money", "."]
# ::lemmas ["if", "you", "do", "not", "start", "to", "grasp", "the", "difference", "between", "driver", "culpability", "and", "operator", "culpability", ",", "you", "be", "go", "to", "waste", "a", "lot", "of", "driver", "'", "money", "."]
(c4-4 / waste-01
      :ARG0 (c4-14 / you)
      :ARG1 (c4-13 / money
                   :poss (c4-12 / person
                                :ARG0-of (c4-0 / drive-01))
                   :quant (c4-10 / lot))
      :condition (c4-1 / start-01
                       :ARG0 c4-14
                       :ARG1 (c4-11 / grasp-01
                                    :ARG0 c4-14
                                    :ARG1 (c4-5 / differ-02
                                                :ARG1 (c4-3 / culpable-01
                                                            :ARG1 (c4-9 / person
                                                                        :ARG0-of (c4-6 / drive-01)))
                                                :ARG2 (c4-2 / culpable-01
                                                            :ARG1 (c4-7 / person
                                                                        :ARG0-of (c4-8 / operate-01)))))
                       :polarity -))

# ::snt Ghost offices in Brighton I went to Brighton that day met with Brighton drivers the and the were also in attendance .. couldn t care a less
# ::tokens ["Ghost", "offices", "in", "Brighton", "I", "went", "to", "Brighton", "that", "day", "met", "with", "Brighton", "drivers", "the", "and", "the", "were", "also", "in", "attendance", "..", "couldn", "t", "care", "a", "less"]
# ::lemmas ["ghost", "office", "in", "Brighton", "i", "go", "to", "Brighton", "that", "day", "meet", "with", "Brighton", "driver", "the", "and", "the", "be", "also", "in", "attendance", "..", "couldn", "t", "care", "a", "less"]
(c5-8 / multi-sentence
      :snt1 (c5-5 / office
                  :mod (c5-7 / ghost)
                  :location (c5-4 / city
                                  :name (c5-9 / name
                                              :op1 "Brighton")))
      :snt2 (c5-13 / and
                   :op1 (c5-12 / go-02
                               :ARG0 (c5-3 / i)
                               :ARG4 c5-4
                               :time (c5-0 / day
                                           :mod (c5-6 / that)))
                   :op2 (c5-14 / meet-03
                               :ARG0 c5-3
                               :ARG1 (c5-18 / person
                                            :ARG0-of (c5-11 / drive-01)
                                            :mod c5-4))
                   :op3 (c5-10 / attend-01
                               :ARG0 (c5-1 / and
                                           :op1 c5-18
                                           :op2 c5-18)
                               :mod (c5-19 / also)))
      :snt3 (c5-16 / possible-01
                   :ARG1 (c5-15 / have-degree-91
                                :ARG1 c5-3)
                   :ARG2 (c5-2 / care-01
                               :ARG0 c5-3)
                   :ARG3 (c5-17 / less)
                   :polarity -))

# ::snt The Uber office didn't license the rapist driver . BHDC did .
# ::tokens ["The", "Uber", "office", "did", "n't", "license", "the", "rapist", "driver", ".", "BHDC", "did", "."]
# ::lemmas ["the", "Uber", "office", "do", "not", "license", "the", "rapist", "driver", ".", "BHDC", "do", "."]
(c6-10 / multi-sentence
       :snt1 (c6-6 / license-01
                   :ARG0 (c6-3 / office
                               :mod (c6-1 / company
                                          :name (c6-11 / name
                                                       :op1 " Uber")))
                   :ARG2 (c6-9 / person
                               :ARG0-of (c6-0 / drive-01
                                              :ARG1 (c6-4 / person
                                                          :ARG0-of (c6-5 / rape-01))))
                   :polarity -)
       :snt2 (c6-7 / license-01
                   :ARG0 (c6-2 / organization
                               :name (c6-8 / name
                                           :op1 "BHDC"))
                   :ARG2 c6-9))

# ::snt Funny that have plenty more rapist to go round .. so obviously having ghost offices around the south east and dispatching work from Aldgate is ok with you .. just so I know
# ::tokens ["Funny", "that", "have", "plenty", "more", "rapist", "to", "go", "round", "..", "so", "obviously", "having", "ghost", "offices", "around", "the", "south", "east", "and", "dispatching", "work", "from", "Aldgate", "is", "ok", "with", "you", "..", "just", "so", "I", "know"]
# ::lemmas ["funny", "that", "have", "plenty", "more", "rapist", "to", "go", "round", "..", "so", "obviously", "have", "ghost", "office", "around", "the", "south", "east", "and", "dispatch", "work", "from", "Aldgate", "be", "ok", "with", "you", "..", "just", "so", "i", "know"]
(c7-20 / funny
       :domain (c7-21 / have-03
                      :ARG0 (c7-11 / that)
                      :ARG1 (c7-25 / person
                                   :ARG0-of (c7-12 / rape-01)
                                   :quant (c7-14 / more
                                                 :quant (c7-23 / plenty)))
                      :ARG1-of (c7-8 / round-03))
       :ARG0-of (c7-6 / cause-01
                      :ARG1 (c7-10 / okay-04
                                   :ARG1 (c7-19 / and
                                                :op1 (c7-3 / have-03
                                                           :ARG1 (c7-22 / office
                                                                        :mod (c7-13 / ghost)
                                                                        :location (c7-17 / around
                                                                                         :op1 (c7-7 / world-region
                                                                                                    :name (c7-15 / name
                                                                                                                 :op1 "South"
                                                                                                                 :op2 "East")))))
                                                :op2 (c7-0 / dispatch-01
                                                           :ARG1 (c7-16 / work-01)
                                                           :ARG2 (c7-1 / city
                                                                       :name (c7-2 / name
                                                                                   :op1 "Aldgate"))))
                                   :ARG2 (c7-18 / you)
                                   :ARG1-of (c7-5 / obvious-01)
                                   :ARG0-of (c7-9 / cause-01
                                                  :ARG1 (c7-26 / know-01
                                                               :ARG0 (c7-4 / i)
                                                               :mod (c7-24 / just))))))

# ::snt How does his appalling crime demonstrate his operator's un-f & p ?
# ::tokens ["How", "does", "his", "appalling", "crime", "demonstrate", "his", "operator", "'s", "un", "-", "f", "&", "p", "?"]
# ::lemmas ["how", "do", "his", "appalling", "crime", "demonstrate", "his", "operator", "'s", "un", "-", "f", "&", "p", "?"]
(c8-0 / demonstrate-01
      :ARG0 (c8-4 / crime-02
                  :ARG0 (c8-5 / he)
                  :ARG0-of (c8-2 / appall-01))
      :ARG1 (c8-9 / and
                  :op1 (c8-3 / fuck)
                  :op2 (c8-8 / p)
                  :poss (c8-7 / person
                              :ARG0-of (c8-6 / operate-01)
                              :poss c8-5)
                  :polarity -)
      :manner (c8-1 / amr-unknown))

# ::snt Probably the same way they let uninsured trips be taken
# ::tokens ["Probably", "the", "same", "way", "they", "let", "uninsured", "trips", "be", "taken"]
# ::lemmas ["probably", "the", "same", "way", "they", "let", "uninsured", "trip", "be", "take"]
(c9-6 / probable
      :op1 (c9-2 / way
                 :ARG1-of (c9-0 / same-01
                                :ARG2 (c9-7 / way
                                            :manner-of (c9-5 / let-01
                                                             :ARG0 (c9-4 / they)
                                                             :ARG1 (c9-3 / trip-03
                                                                         :ARG1-of (c9-1 / insure-02
                                                                                        :polarity -)))))))
