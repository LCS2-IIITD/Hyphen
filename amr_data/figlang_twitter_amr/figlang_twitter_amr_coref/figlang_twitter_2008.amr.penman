# ::snt I've always liked evidence , personally and professionally , but if you have none don't worry about it .
# ::tokens ["I", "'ve", "always", "liked", "evidence", ",", "personally", "and", "professionally", ",", "but", "if", "you", "have", "none", "do", "n't", "worry", "about", "it", "."]
# ::lemmas ["i", "'ve", "always", "like", "evidence", ",", "personally", "and", "professionally", ",", "but", "if", "you", "have", "none", "do", "not", "worry", "about", "it", "."]
(c1-1 / contrast-01
      :ARG1 (c1-5 / like-01
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-10 / evidence-01)
                  :time (c1-0 / always)
                  :manner (c1-9 / and
                                :op1 (c1-6 / personal-02)
                                :op2 (c1-4 / professional)))
      :ARG2 (c1-2 / worry-02
                  :ARG0 c1-10
                  :ARG1 (c1-8 / you)
                  :condition (c1-3 / have-03
                                   :ARG0 c1-8
                                   :ARG1 c1-10)
                  :polarity -))

# ::snt that's not a statement which is consistent with voting for Brexit . DO worry about it . As for the pissing UKIP thug , ask the press
# ::tokens ["that", "'s", "not", "a", "statement", "which", "is", "consistent", "with", "voting", "for", "Brexit", ".", "DO", "worry", "about", "it", ".", "As", "for", "the", "pissing", "UKIP", "thug", ",", "ask", "the", "press"]
# ::lemmas ["that", "be", "not", "a", "statement", "which", "be", "consistent", "with", "voting", "for", "Brexit", ".", "DO", "worry", "about", "it", ".", "as", "for", "the", "piss", "UKIP", "thug", ",", "ask", "the", "press"]
(c2-12 / multi-sentence
       :snt1 (c2-2 / consistent-01
                   :ARG1 (c2-0 / state-01
                               :domain (c2-9 / that))
                   :ARG2 (c2-7 / vote-01
                               :ARG1 (c2-11 / political-party
                                            :name (c2-13 / name
                                                         :op1 "Leave"
                                                         :op2 "Britain")))
                   :polarity -)
       :snt2 (c2-3 / worry-01
                   :ARG0 (c2-4 / it)
                   :ARG1 (c2-14 / you))
       :snt3 (c2-1 / ask-01
                   :ARG0 (c2-8 / press)
                   :ARG2 (c2-5 / thug
                               :ARG0-of (c2-6 / piss-03)
                               :mod c2-11
                               :name (c2-10 / name
                                            :op1 "UKIP"))
                   :mode imperative))

# ::snt > > and lies please remind me how the emergency budget promised by Project Fear was for you . Or the immediate recession > >
# ::tokens [">", ">", "and", "lies", "please", "remind", "me", "how", "the", "emergency", "budget", "promised", "by", "Project", "Fear", "was", "for", "you", ".", "Or", "the", "immediate", "recession", ">", ">"]
# ::lemmas [">", ">", "and", "lie", "please", "remind", "i", "how", "the", "emergency", "budget", "promise", "by", "Project", "Fear", "be", "for", "you", ".", "or", "the", "immediate", "recession", ">", ">"]
(c3-11 / multi-sentence
       :snt1 (c3-0 / and
                   :op2 (c3-8 / lie-08)
                   :ARG0-of (c3-7 / remind-01
                                  :ARG1 (c3-6 / thing
                                              :manner-of (c3-9 / budget-01
                                                               :ARG2 (c3-14 / emergency)
                                                               :ARG2-of (c3-10 / promise-01
                                                                               :ARG0 (c3-5 / project
                                                                                           :name (c3-12 / name
                                                                                                        :op1 "Project"
                                                                                                        :op2 "Fear")))
                                                               :beneficiary (c3-13 / you))
                                              :ARG2 (c3-1 / i
                                                          :ARG2-of c3-7)))
                   :polite +)
       :snt2 (c3-4 / or
                   :op2 (c3-3 / recession-02
                              :time (c3-2 / immediate))))

# ::snt did you actually listen to the Autumn Statement ?
# ::tokens ["did", "you", "actually", "listen", "to", "the", "Autumn", "Statement", "?"]
# ::lemmas ["do", "you", "actually", "listen", "to", "the", "Autumn", "Statement", "?"]
(c4-1 / listen-01
      :ARG0 (c4-4 / you)
      :ARG1 (c4-2 / publication
                  :name (c4-3 / name
                              :op1 "Autumn"
                              :op2 "Statement"))
      :polarity (c4-0 / amr-unknown)
      :ARG1-of (c4-5 / actual-02))

# ::snt Yes . Please remind me how the immediate emergency budget , interest rate rises , recession and the other Proj Fear lies went .
# ::tokens ["Yes", ".", "Please", "remind", "me", "how", "the", "immediate", "emergency", "budget", ",", "interest", "rate", "rises", ",", "recession", "and", "the", "other", "Proj", "Fear", "lies", "went", "."]
# ::lemmas ["yes", ".", "please", "remind", "i", "how", "the", "immediate", "emergency", "budget", ",", "interest", "rate", "rise", ",", "recession", "and", "the", "other", "Proj", "Fear", "lie", "go", "."]
(c5-8 / multi-sentence
      :snt1 (c5-13 / yes)
      :snt2 (c5-5 / remind-01
                  :ARG0 (c5-14 / you)
                  :ARG1 (c5-4 / thing
                              :manner-of (c5-6 / go-06
                                               :ARG0 (c5-15 / and
                                                            :op1 (c5-18 / budget-01
                                                                        :mod (c5-9 / emergency)
                                                                        :mod (c5-0 / immediate))
                                                            :op2 (c5-1 / rise-01
                                                                       :ARG1 (c5-7 / rate
                                                                                   :mod (c5-10 / interest)))
                                                            :op3 (c5-2 / recession-02)
                                                            :op4 (c5-17 / lie-08
                                                                        :ARG1 (c5-16 / fear-01
                                                                                     :mod (c5-12 / false))
                                                                        :mod (c5-3 / other))))
                              :ARG2 (c5-11 / i))
                  :mode imperative
                  :polite +))

# ::snt There was no immediate mass loss of jobs . Another Project Fear lie . There's a theme building there
# ::tokens ["There", "was", "no", "immediate", "mass", "loss", "of", "jobs", ".", "Another", "Project", "Fear", "lie", ".", "There", "'s", "a", "theme", "building", "there"]
# ::lemmas ["there", "be", "no", "immediate", "mass", "loss", "of", "job", ".", "Another", "Project", "Fear", "lie", ".", "there", "be", "a", "theme", "building", "there"]
(c6-10 / multi-sentence
       :snt1 (c6-5 / lose-02
                   :ARG1 (c6-8 / job)
                   :mod (c6-2 / mass)
                   :time (c6-9 / immediate)
                   :polarity -)
       :snt2 (c6-6 / lie-08
                   :ARG1 (c6-1 / fear-01
                               :mod (c6-0 / another))
                   :mod (c6-7 / project))
       :snt3 (c6-11 / build-01
                    :ARG1 (c6-4 / theme)
                    :location (c6-3 / there)))

# ::snt yes , you can't prove any of them were lies . How's your m per week for the NHS looking ?
# ::tokens ["yes", ",", "you", "ca", "n't", "prove", "any", "of", "them", "were", "lies", ".", "How", "'s", "your", "m", "per", "week", "for", "the", "NHS", "looking", "?"]
# ::lemmas ["yes", ",", "you", "can", "not", "prove", "any", "of", "they", "be", "lie", ".", "how", "be", "your", "m", "per", "week", "for", "the", "NHS", "look", "?"]
(c7-14 / multi-sentence
       :snt1 (c7-13 / possible-01
                    :ARG1 (c7-7 / prove-01
                                :ARG0 (c7-16 / you)
                                :ARG1 (c7-8 / thing
                                            :ARG1-of (c7-10 / lie-08)
                                            :mod (c7-0 / any)
                                            :ARG1-of (c7-1 / include-91
                                                           :ARG2 (c7-3 / they))))
                    :polarity -)
       :snt2 (c7-11 / look-01
                    :ARG0 (c7-17 / you)
                    :ARG1 (c7-6 / amr-unknown
                                :domain (c7-9 / rate-entity-91
                                              :ARG1 (c7-2 / monetary-quantity
                                                          :poss c7-17)
                                              :ARG2 (c7-4 / temporal-quantity
                                                          :unit (c7-5 / week)
                                                          :quant 1)))
                    :beneficiary (c7-12 / government-organization
                                        :name (c7-15 / name
                                                     :op1 "NHS"))))

# ::snt m ? Don't know if you realise but we haven't left the EU . But that's a fact so you wouldn't know , would you ?
# ::tokens ["m", "?", "Do", "n't", "know", "if", "you", "realise", "but", "we", "have", "n't", "left", "the", "EU", ".", "But", "that", "'s", "a", "fact", "so", "you", "would", "n't", "know", ",", "would", "you", "?"]
# ::lemmas ["m", "?", "do", "not", "know", "if", "you", "realise", "but", "we", "have", "not", "leave", "the", "EU", ".", "but", "that", "be", "a", "fact", "so", "you", "would", "not", "know", ",", "would", "you", "?"]
(c8-11 / multi-sentence
       :snt1 (c8-12 / know-01
                    :ARG0 (c8-13 / you)
                    :concession (c8-8 / realize-01
                                      :ARG0 c8-13
                                      :polarity -)
                    :polarity -)
       :snt2 (c8-3 / contrast-01
                   :ARG1 (c8-9 / leave-11
                               :ARG0 (c8-4 / we)
                               :ARG1 (c8-6 / organization
                                           :name (c8-10 / name
                                                        :op1 "EU"))
                               :polarity -)
                   :ARG2 (c8-2 / fact
                               :domain (c8-7 / that)
                               :ARG0-of (c8-0 / cause-01
                                              :ARG1 (c8-1 / know-01
                                                          :ARG0 (c8-14 / you)
                                                          :polarity -)))
                   :ARG1-of (c8-5 / request-confirmation-91
                                  :ARG2 c8-14)))

# ::snt don't bother mate , he'll just give you the standard UKIP drivel
# ::tokens ["do", "n't", "bother", "mate", ",", "he", "'ll", "just", "give", "you", "the", "standard", "UKIP", "drivel"]
# ::lemmas ["do", "not", "bother", "mate", ",", "he", "'ll", "just", "give", "you", "the", "standard", "UKIP", "drivel"]
(c9-4 / bother-01
      :ARG0 (c9-9 / you)
      :ARG1 (c9-7 / mate)
      :ARG1-of (c9-2 / cause-01
                     :ARG0 (c9-3 / give-01
                                 :ARG0 c9-7
                                 :ARG1 (c9-0 / drivel
                                             :ARG1-of (c9-1 / standard-02)
                                             :mod (c9-6 / political-party
                                                        :name (c9-8 / name
                                                                    :op1 "UKIP")))
                                 :ARG2 c9-9
                                 :mod (c9-5 / just)))
      :polarity -
      :mode imperative)

# ::snt it really is hard work trying to get through to them
# ::tokens ["it", "really", "is", "hard", "work", "trying", "to", "get", "through", "to", "them"]
# ::lemmas ["it", "really", "be", "hard", "work", "try", "to", "get", "through", "to", "they"]
(c10-2 / hard-02
       :ARG1 (c10-0 / work-01
                    :ARG1 (c10-3 / try-01
                                 :ARG1 (c10-5 / get-through-12
                                              :ARG1 (c10-1 / they))))
       :ARG1-of (c10-4 / real-04))

# ::snt But thanks for your snowflake reaction . Do you believe Project Fear too ?
# ::tokens ["But", "thanks", "for", "your", "snowflake", "reaction", ".", "Do", "you", "believe", "Project", "Fear", "too", "?"]
# ::lemmas ["but", "thank", "for", "your", "snowflake", "reaction", ".", "do", "you", "believe", "Project", "Fear", "too", "?"]
(c11-9 / multi-sentence
       :snt1 (c11-3 / contrast-01
                    :ARG2 (c11-5 / thank-01
                                 :ARG1 (c11-10 / you)
                                 :ARG2 (c11-6 / react-01
                                              :ARG0 c11-10
                                              :ARG1 (c11-0 / snowflake))))
       :snt2 (c11-7 / believe-01
                    :ARG0 (c11-11 / you)
                    :ARG1 (c11-2 / fear-01
                                 :mod (c11-8 / project))
                    :polarity (c11-1 / amr-unknown)
                    :mod (c11-4 / too)))

# ::snt both campaigns were rubbish but the least rubbish one won so get over it
# ::tokens ["both", "campaigns", "were", "rubbish", "but", "the", "least", "rubbish", "one", "won", "so", "get", "over", "it"]
# ::lemmas ["both", "campaign", "be", "rubbish", "but", "the", "least", "rubbish", "one", "win", "so", "get", "over", "it"]
(c12-2 / contrast-01
       :ARG1 (c12-7 / rubbish
                    :domain (c12-0 / campaign-01
                                   :mod (c12-9 / both)))
       :ARG2 (c12-3 / win-01
                    :ARG0 (c12-4 / campaign-01
                                 :mod (c12-5 / rubbish
                                             :mod (c12-8 / least)))
                    :ARG0-of (c12-1 / cause-01
                                    :ARG1 (c12-6 / over-02
                                                 :ARG1 (c12-11 / you)
                                                 :ARG2 (c12-10 / it)
                                                 :mode imperative))))

# ::snt so get over it ? You don't believe in democracy then . Sorry but I do so get over it
# ::tokens ["so", "get", "over", "it", "?", "You", "do", "n't", "believe", "in", "democracy", "then", ".", "Sorry", "but", "I", "do", "so", "get", "over", "it"]
# ::lemmas ["so", "get", "over", "it", "?", "you", "do", "not", "believe", "in", "democracy", "then", ".", "sorry", "but", "i", "do", "so", "get", "over", "it"]
(c13-14 / multi-sentence
        :snt1 (c13-4 / cause-01
                     :ARG1 (c13-10 / over-02
                                   :ARG1 (c13-15 / you)
                                   :ARG2 (c13-13 / it)
                                   :mode imperative))
        :snt2 (c13-0 / cause-01
                     :ARG1 (c13-12 / believe-01
                                   :ARG0 (c13-16 / you)
                                   :ARG1 (c13-1 / democracy)
                                   :time (c13-11 / then)
                                   :polarity -))
        :snt3 (c13-8 / contrast-01
                     :ARG1 (c13-2 / sorry-01
                                  :ARG1 (c13-6 / i)
                                  :ARG2 (c13-3 / believe-01
                                               :ARG0 c13-6
                                               :ARG1 c13-1))
                     :ARG2 (c13-5 / believe-01
                                  :ARG0 c13-6
                                  :ARG1 (c13-7 / it)
                                  :ARG2-of (c13-9 / infer-01))))

# ::snt I do believe in democracy and democracy chose Brexit
# ::tokens ["I", "do", "believe", "in", "democracy", "and", "democracy", "chose", "Brexit"]
# ::lemmas ["i", "do", "believe", "in", "democracy", "and", "democracy", "choose", "Brexit"]
(c14-3 / believe-01
       :ARG0 (c14-4 / i)
       :ARG1 (c14-1 / and
                    :op1 (c14-0 / democracy)
                    :op2 (c14-2 / choose-01
                                :ARG0 c14-0
                                :ARG1 (c14-6 / event
                                             :name (c14-5 / name
                                                          :op1 "Brexit")))))

# ::snt no , democracy is not an event , it's a process . And it was only an opinion poll anyway
# ::tokens ["no", ",", "democracy", "is", "not", "an", "event", ",", "it", "'s", "a", "process", ".", "And", "it", "was", "only", "an", "opinion", "poll", "anyway"]
# ::lemmas ["no", ",", "democracy", "be", "not", "an", "event", ",", "it", "be", "a", "process", ".", "and", "it", "be", "only", "an", "opinion", "poll", "anyway"]
(c15-7 / multi-sentence
       :snt1 (c15-2 / contrast-01
                    :ARG1 (c15-9 / event
                                 :domain (c15-0 / democracy)
                                 :polarity -)
                    :ARG2 (c15-6 / process-02
                                 :ARG1 c15-0))
       :snt2 (c15-1 / and
                    :op2 (c15-5 / poll-01
                                :ARG2 (c15-4 / opine-01)
                                :mod (c15-3 / only)
                                :mod (c15-8 / anyway))))

# ::snt PS pls don't be so tedious as to send a screenshot of that pamphlet - it makes no difference
# ::tokens ["PS", "pls", "do", "n't", "be", "so", "tedious", "as", "to", "send", "a", "screenshot", "of", "that", "pamphlet", "-", "it", "makes", "no", "difference"]
# ::lemmas ["PS", "pls", "do", "not", "be", "so", "tedious", "as", "to", "send", "a", "screenshot", "of", "that", "pamphlet", "-", "it", "make", "no", "difference"]
(c16-9 / post-scriptum
       :domain (c16-7 / tedious
                      :domain (c16-10 / you)
                      :ARG2-of (c16-4 / have-degree-91
                                      :ARG1 c16-10
                                      :ARG3 (c16-0 / so)
                                      :ARG6 (c16-8 / send-01
                                                   :ARG0 c16-10
                                                   :ARG1 (c16-5 / screenshot-01
                                                                :ARG1 (c16-6 / pamphlet
                                                                             :mod (c16-3 / that)))
                                                   :ARG0-of (c16-2 / cause-01
                                                                   :ARG1 (c16-1 / differ-02
                                                                                :polarity -))))
                      :polarity -))
