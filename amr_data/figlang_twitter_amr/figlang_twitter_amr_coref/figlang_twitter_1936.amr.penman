# ::snt President-elect Trump was on ' Minutes ' last night . Softening campaign stances . Whaddya think , Trumpers ? Stream : <URL>
# ::tokens ["President", "-", "elect", "Trump", "was", "on", "'", "Minutes", "'", "last", "night", ".", "Softening", "campaign", "stances", ".", "Whaddya", "think", ",", "Trumpers", "?", "Stream", ":", "<", "URL", ">"]
# ::lemmas ["President", "-", "elect", "Trump", "be", "on", "'", "Minutes", "'", "last", "night", ".", "soften", "campaign", "stance", ".", "whaddya", "think", ",", "trumper", "?", "stream", ":", "<", "URL", ">"]
(c1-5 / multi-sentence
      :snt1 (c1-19 / be-located-at-91
                   :ARG1 (c1-21 / person
                                :name (c1-6 / name
                                            :op1 "Trump")
                                :ARG1-of (c1-7 / elect-01
                                               :ARG2 (c1-16 / have-org-role-91
                                                            :ARG0 c1-21
                                                            :ARG2 (c1-18 / president))))
                   :ARG2 (c1-14 / broadcast-program
                                :name (c1-1 / name
                                            :op1 "Ministry"))
                   :time (c1-0 / date-entity
                               :dayperiod (c1-12 / night)
                               :mod (c1-13 / yesterday)))
      :snt2 (c1-8 / stand-11
                  :ARG1 (c1-3 / campaign-01)
                  :ARG1-of (c1-20 / soften-01))
      :snt3 (c1-4 / think-01
                  :ARG0 (c1-15 / amr-unknown)
                  :ARG2 (c1-10 / person
                               :mod (c1-9 / person
                                          :name (c1-2 / name
                                                      :op1 "Trump"))))
      :snt4 (c1-11 / stream-01
                   :ARG1 (c1-17 / url-entity)))

# ::snt why do you use Trumpers ? Divisive . That mindset left and right is the problem .
# ::tokens ["why", "do", "you", "use", "Trumpers", "?", "Divisive", ".", "That", "mindset", "left", "and", "right", "is", "the", "problem", "."]
# ::lemmas ["why", "do", "you", "use", "trumper", "?", "divisive", ".", "that", "mindset", "leave", "and", "right", "be", "the", "problem", "."]
(c2-12 / multi-sentence
       :snt1 (c2-6 / use-01
                   :ARG0 (c2-14 / you)
                   :ARG1 (c2-11 / person
                                :ARG0-of (c2-5 / have-org-role-91
                                               :ARG1 (c2-7 / person
                                                           :name (c2-13 / name
                                                                        :op1 "Trump"))))
                   :ARG1-of (c2-2 / cause-01
                                  :ARG0 (c2-1 / amr-unknown)))
       :snt2 (c2-0 / divide-02)
       :snt3 (c2-4 / problem
                   :domain (c2-3 / mindset
                                 :mod (c2-8 / that)
                                 :ARG1-of (c2-10 / left-19)
                                 :ARG1-of (c2-9 / right-08))))

# ::snt It would be even more divisive to claim Trump was a Kenyan-born Muslim , don't you think ?
# ::tokens ["It", "would", "be", "even", "more", "divisive", "to", "claim", "Trump", "was", "a", "Kenyan", "-", "born", "Muslim", ",", "do", "n't", "you", "think", "?"]
# ::lemmas ["it", "would", "be", "even", "more", "divisive", "to", "claim", "Trump", "be", "a", "Kenyan", "-", "bear", "Muslim", ",", "do", "not", "you", "think", "?"]
(c3-6 / think-01
      :ARG0 (c3-13 / you)
      :ARG1 (c3-0 / divide-02
                  :ARG0 (c3-3 / claim-01
                              :ARG1 (c3-7 / religious-group
                                          :name (c3-12 / name
                                                       :op1 "Muslim")
                                          :domain (c3-10 / person
                                                         :name (c3-8 / name
                                                                     :op1 "Trump"))
                                          :ARG1-of (c3-9 / bear-02
                                                         :location (c3-1 / country
                                                                         :name (c3-5 / name
                                                                                     :op1 "Kenya")))))
                  :ARG2-of (c3-4 / have-degree-91
                                 :ARG1 c3-3
                                 :ARG3 (c3-11 / more
                                              :mod (c3-14 / even))))
      :polarity (c3-2 / amr-unknown)
      :polarity -)

# ::snt yes when it's not true . Obviously . Let's rise above that silliness . Seriously . This country doesn't need pot stirring .
# ::tokens ["yes", "when", "it", "'s", "not", "true", ".", "Obviously", ".", "Let", "'s", "rise", "above", "that", "silliness", ".", "Seriously", ".", "This", "country", "does", "n't", "need", "pot", "stirring", "."]
# ::lemmas ["yes", "when", "it", "be", "not", "true", ".", "obviously", ".", "let", "us", "rise", "above", "that", "silliness", ".", "seriously", ".", "this", "country", "do", "not", "need", "pot", "stir", "."]
(c4-13 / multi-sentence
       :snt1 (c4-15 / yes
                    :time (c4-8 / true-01
                                :ARG1 (c4-12 / it)
                                :polarity -))
       :snt2 (c4-7 / obvious-01
                   :ARG1 (c4-9 / rise-01
                               :ARG1 (c4-3 / we)
                               :ARG4 (c4-1 / above
                                           :op1 (c4-0 / silliness
                                                      :mod (c4-4 / that)))
                               :mode imperative))
       :snt3 (c4-11 / serious-01
                    :ARG2 (c4-14 / need-01
                                 :ARG0 (c4-2 / country
                                             :mod (c4-5 / this))
                                 :ARG1 (c4-6 / stir-01
                                             :ARG1 (c4-10 / pot))
                                 :polarity -)))

# ::snt Can't recall GOPers calling for colleagues to " rise above that silliness " for the last years .
# ::tokens ["Ca", "n't", "recall", "GOPers", "calling", "for", "colleagues", "to", "\"", "rise", "above", "that", "silliness", "\"", "for", "the", "last", "years", "."]
# ::lemmas ["can", "not", "recall", "goper", "call", "for", "colleague", "to", "\"", "rise", "above", "that", "silliness", "\"", "for", "the", "last", "years", "."]
(c5-13 / possible-01
       :ARG1 (c5-10 / recall-02
                    :ARG1 (c5-3 / call-03
                                :ARG0 (c5-8 / person
                                            :ARG0-of (c5-6 / have-org-role-91
                                                           :ARG1 (c5-5 / political-party
                                                                       :name (c5-14 / name
                                                                                    :op1 "GOP"))))
                                :ARG1 (c5-7 / rise-01
                                            :ARG1 (c5-4 / person
                                                        :ARG0-of (c5-12 / have-rel-role-91
                                                                        :ARG2 (c5-0 / colleague)))
                                            :ARG4 (c5-2 / above
                                                        :op1 (c5-1 / silliness
                                                                   :mod (c5-9 / that))))
                                :ARG2 c5-4
                                :time (c5-15 / year
                                             :mod (c5-11 / last))))
       :polarity -)

# ::snt I know its your job , but I can't listen to the divisiveness any more . Want more fishing talk and less hate fueled dialog .
# ::tokens ["I", "know", "its", "your", "job", ",", "but", "I", "ca", "n't", "listen", "to", "the", "divisiveness", "any", "more", ".", "Want", "more", "fishing", "talk", "and", "less", "hate", "fueled", "dialog", "."]
# ::lemmas ["i", "know", "its", "your", "job", ",", "but", "i", "can", "not", "listen", "to", "the", "divisiveness", "any", "more", ".", "want", "more", "fishing", "talk", "and", "less", "hate", "fuel", "dialog", "."]
(c6-6 / multi-sentence
      :snt1 (c6-3 / contrast-01
                  :ARG1 (c6-19 / know-01
                               :ARG0 (c6-2 / i)
                               :ARG1 (c6-17 / job
                                            :poss (c6-11 / you)))
                  :ARG2 (c6-18 / possible-01
                               :ARG1 (c6-16 / listen-01
                                            :ARG0 c6-2
                                            :ARG1 (c6-0 / divisiveness)
                                            :time (c6-12 / anymore))
                               :polarity -))
      :snt2 (c6-4 / want-01
                  :ARG0 (c6-8 / i)
                  :ARG1 (c6-7 / and
                              :op1 (c6-5 / talk-01
                                         :ARG1 (c6-13 / fish-01)
                                         :quant (c6-14 / more))
                              :op2 (c6-10 / dialogue-01
                                          :quant (c6-1 / less)
                                          :ARG1-of (c6-9 / fuel-01
                                                         :ARG2 (c6-15 / hate-01))))))

# ::snt I haven't been fishing in + months . Maybe that's a problem ...
# ::tokens ["I", "have", "n't", "been", "fishing", "in", "+", "months", ".", "Maybe", "that", "'s", "a", "problem", "..."]
# ::lemmas ["i", "have", "not", "be", "fish", "in", "+", "months", ".", "maybe", "that", "be", "a", "problem", "..."]
(c7-8 / multi-sentence
      :snt1 (c7-0 / fish-01
                  :ARG0 (c7-7 / i)
                  :duration (c7-1 / multiple
                                  :op1 (c7-5 / temporal-quantity
                                             :unit (c7-3 / month)
                                             :quant 1))
                  :polarity -)
      :snt2 (c7-6 / possible-01
                  :ARG1 (c7-4 / problem
                              :domain (c7-2 / that))))
