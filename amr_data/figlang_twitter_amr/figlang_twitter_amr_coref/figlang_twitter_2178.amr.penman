# ::snt Trump to name Goldman Sachs veteran , Gary Cohn , to head National Economic Council <URL>
# ::tokens ["Trump", "to", "name", "Goldman", "Sachs", "veteran", ",", "Gary", "Cohn", ",", "to", "head", "National", "Economic", "Council", "<", "URL", ">"]
# ::lemmas ["Trump", "to", "name", "Goldman", "Sachs", "veteran", ",", "Gary", "Cohn", ",", "to", "head", "National", "Economic", "Council", "<", "URL", ">"]
(c1-11 / name-02
       :ARG0 (c1-10 / person
                    :name (c1-7 / name
                                :op1 "Trump"))
       :ARG1 (c1-5 / person
                   :name (c1-4 / name
                               :op1 "Gary"
                               :op2 "Cohn")
                   :ARG0-of (c1-2 / have-org-role-91
                                  :ARG1 (c1-1 / company
                                              :name (c1-0 / name
                                                          :op1 "Goldman"
                                                          :op2 "Sachs"))
                                  :ARG2 (c1-3 / veteran)))
       :ARG2 (c1-9 / head-01
                   :ARG0 c1-5
                   :ARG1 (c1-6 / organization
                               :name (c1-8 / name
                                           :op1 "National"
                                           :op2 "Economic"
                                           :op3 "Council"))))

# ::snt thats from GS now ... so much for draining the swamp.Trump conned the nation .
# ::tokens ["that", "s", "from", "GS", "now", "...", "so", "much", "for", "draining", "the", "swamp", ".", "Trump", "conned", "the", "nation", "."]
# ::lemmas ["that", "s", "from", "GS", "now", "...", "so", "much", "for", "drain", "the", "swamp", ".", "Trump", "con", "the", "nation", "."]
(c2-11 / multi-sentence
       :snt1 (c2-6 / that
                   :source (c2-8 / government-organization
                                 :name (c2-12 / name
                                              :op1 "GS"))
                   :time (c2-7 / now))
       :snt2 (c2-3 / much
                   :degree (c2-0 / so)
                   :topic (c2-1 / drain-01
                                :ARG1 (c2-9 / swamp)))
       :snt3 (c2-4 / con-02
                   :ARG0 (c2-10 / person
                                :name (c2-5 / name
                                            :op1 "Trump"))
                   :ARG1 (c2-2 / nation)))

# ::snt not the nation , just the gullible . Still lost by million so there's still hope .
# ::tokens ["not", "the", "nation", ",", "just", "the", "gullible", ".", "Still", "lost", "by", "million", "so", "there", "'s", "still", "hope", "."]
# ::lemmas ["not", "the", "nation", ",", "just", "the", "gullible", ".", "still", "lose", "by", "million", "so", "there", "be", "still", "hope", "."]
(c3-8 / multi-sentence
      :snt1 (c3-3 / contrast-01
                  :ARG1 (c3-9 / nation
                              :polarity -)
                  :ARG2 (c3-6 / gullible
                              :mod (c3-7 / just)))
      :snt2 (c3-5 / lose-02
                  :mod (c3-0 / still)
                  :ARG0-of (c3-1 / cause-01
                                 :ARG1 (c3-4 / hopeful-03
                                             :mod (c3-2 / still)))
                  :quant 1000000))

# ::snt true that - he duped the " uneducated " " oh how I love the uneducated " . Train wreck
# ::tokens ["true", "that", "-", "he", "duped", "the", "\"", "uneducated", "\"", "\"", "oh", "how", "I", "love", "the", "uneducated", "\"", ".", "Train", "wreck"]
# ::lemmas ["true", "that", "-", "he", "dupe", "the", "\"", "uneducated", "\"", "\"", "oh", "how", "i", "love", "the", "uneducated", "\"", ".", "train", "wreck"]
(c4-10 / multi-sentence
       :snt1 (c4-7 / true-01
                   :ARG1 (c4-3 / that))
       :snt2 (c4-0 / dupe-01
                   :ARG0 (c4-4 / he)
                   :ARG2 (c4-1 / and
                               :op1 (c4-12 / educate-01
                                           :ARG1 c4-4
                                           :polarity -)
                               :op2 (c4-8 / love-01
                                          :ARG0 (c4-9 / i)
                                          :ARG1 (c4-5 / educate-01
                                                      :ARG1 c4-4
                                                      :polarity -)
                                          :mod (c4-6 / oh
                                                     :mode expressive))))
       :snt3 (c4-2 / wreck-01
                   :ARG1 (c4-11 / train)))
