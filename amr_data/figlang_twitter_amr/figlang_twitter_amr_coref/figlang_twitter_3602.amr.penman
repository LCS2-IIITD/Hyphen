# ::snt ' Donald Trump is already helping the working class ' <URL>
# ::tokens ["'", "Donald", "Trump", "is", "already", "helping", "the", "working", "class", "'", "<", "URL", ">"]
# ::lemmas ["'", "Donald", "Trump", "be", "already", "help", "the", "work", "class", "'", "<", "URL", ">"]
(c1-3 / help-01
      :ARG0 (c1-4 / person
                  :name (c1-5 / name
                              :op1 "Donald"
                              :op2 "Trump"))
      :ARG2 (c1-1 / class
                  :ARG0-of (c1-2 / work-01))
      :time (c1-0 / already))

# ::snt Thank you for already making stay Please help & since is
# ::tokens ["Thank", "you", "for", "already", "making", "stay", "Please", "help", "&", "since", "is"]
# ::lemmas ["thank", "you", "for", "already", "make", "stay", "please", "help", "&", "since", "be"]
(c2-8 / multi-sentence
      :snt1 (c2-5 / thank-01
                  :ARG0 (c2-7 / i)
                  :ARG1 (c2-9 / you)
                  :ARG2 (c2-3 / make-01
                              :ARG0 c2-9
                              :ARG1 (c2-0 / stay-01
                                          :ARG1 c2-9)
                              :time (c2-1 / already)))
      :snt2 (c2-10 / and
                   :op1 (c2-4 / help-01
                              :ARG0 (c2-2 / you)
                              :polite +)
                   :op2 (c2-6 / since
                              :op1 c2-3)))

# ::snt - you do know that he has interests in the oil company that the pipeline is for , right ?
# ::tokens ["-", "you", "do", "know", "that", "he", "has", "interests", "in", "the", "oil", "company", "that", "the", "pipeline", "is", "for", ",", "right", "?"]
# ::lemmas ["-", "you", "do", "know", "that", "he", "have", "interest", "in", "the", "oil", "company", "that", "the", "pipeline", "be", "for", ",", "right", "?"]
(c3-6 / know-01
      :ARG0 (c3-7 / you)
      :ARG1 (c3-5 / interest-01
                  :ARG1 (c3-1 / he)
                  :ARG2 (c3-0 / company
                              :mod (c3-2 / oil)
                              :purpose-of (c3-4 / pipeline)))
      :ARG1-of (c3-3 / request-confirmation-91
                     :ARG2 c3-7))

# ::snt - you know that shows unproven not false , right ? We don't really know the truth as we've never seen his taxes . Nice try though !
# ::tokens ["-", "you", "know", "that", "shows", "unproven", "not", "false", ",", "right", "?", "We", "do", "n't", "really", "know", "the", "truth", "as", "we", "'ve", "never", "seen", "his", "taxes", ".", "Nice", "try", "though", "!"]
# ::lemmas ["-", "you", "know", "that", "show", "unproven", "not", "false", ",", "right", "?", "we", "do", "not", "really", "know", "the", "truth", "as", "we", "'ve", "never", "see", "his", "taxis", ".", "nice", "try", "though", "!"]
(c4-8 / multi-sentence
      :snt1 (c4-20 / know-01
                   :ARG0 (c4-14 / you)
                   :ARG1 (c4-12 / show-01
                                :ARG0 (c4-6 / that)
                                :ARG1 (c4-19 / prove-01
                                             :ARG1 (c4-16 / false)
                                             :polarity -))
                   :ARG1-of (c4-7 / request-confirmation-91
                                  :ARG2 c4-14))
      :snt2 (c4-1 / know-01
                  :ARG0 (c4-3 / we)
                  :ARG1 (c4-4 / thing
                              :ARG1-of (c4-10 / true-01))
                  :ARG1-of (c4-5 / real-04)
                  :ARG1-of (c4-2 / cause-01
                                 :ARG0 (c4-18 / see-01
                                              :ARG0 c4-3
                                              :ARG1 (c4-13 / tax-01
                                                           :ARG2 (c4-17 / he))
                                              :time (c4-11 / ever)
                                              :polarity -))
                  :polarity -)
      :snt3 (c4-15 / try-01
                   :ARG1-of (c4-9 / nice-01)
                   :ARG1-of (c4-0 / have-concession-91)))

# ::snt exactly & u made it out to b fact comeon .. Have u seen ' s donor list ties to
# ::tokens ["exactly", "&", "u", "made", "it", "out", "to", "b", "fact", "comeon", "..", "Have", "u", "seen", "'", "s", "donor", "list", "ties", "to"]
# ::lemmas ["exactly", "&", "u", "make", "it", "out", "to", "b", "fact", "comeon", "..", "have", "u", "see", "'", "s", "donor", "list", "tie", "to"]
(c5-11 / multi-sentence
       :snt1 (c5-3 / and
                   :op1 (c5-14 / exact)
                   :op2 (c5-5 / make-out-23
                              :ARG0 (c5-12 / you)
                              :ARG1-of (c5-6 / cause-01
                                             :ARG0 (c5-0 / come-on-25
                                                         :ARG1 c5-12
                                                         :mod (c5-4 / fact)))))
       :snt2 (c5-1 / see-01
                   :ARG0 (c5-13 / you)
                   :ARG1 (c5-8 / tie-01
                               :ARG1 (c5-9 / list
                                           :poss (c5-10 / person
                                                        :ARG0-of (c5-2 / donate-01))))
                   :polarity (c5-7 / amr-unknown)))

# ::snt - and yet you're asking for Trump's help with the pipeline ? Shouldn't you be sure of the possible conflicts of interest ?
# ::tokens ["-", "and", "yet", "you", "'re", "asking", "for", "Trump", "'s", "help", "with", "the", "pipeline", "?", "Should", "n't", "you", "be", "sure", "of", "the", "possible", "conflicts", "of", "interest", "?"]
# ::lemmas ["-", "and", "yet", "you", "be", "ask", "for", "Trump", "'s", "help", "with", "the", "pipeline", "?", "should", "not", "you", "be", "sure", "of", "the", "possible", "conflict", "of", "interest", "?"]
(c6-12 / multi-sentence
       :snt1 (c6-2 / and
                   :op2 (c6-15 / ask-02
                               :ARG0 (c6-14 / you)
                               :ARG1 (c6-7 / help-01
                                           :ARG0 (c6-11 / person
                                                        :name (c6-13 / name
                                                                     :op1 "Trump"))
                                           :ARG1 (c6-8 / pipeline))
                               :ARG1-of (c6-10 / have-concession-91)))
       :snt2 (c6-9 / recommend-01
                   :ARG1 (c6-0 / sure-02
                               :ARG0 (c6-3 / you)
                               :ARG1 (c6-4 / conflict-01
                                           :ARG2 (c6-5 / interest-01)
                                           :ARG1-of (c6-6 / possible-01))
                               :polarity (c6-1 / amr-unknown))))

# ::snt i am asking him because he doesn't have a conflict and clearly the current president does because he hasn't done anything
# ::tokens ["i", "am", "asking", "him", "because", "he", "does", "n't", "have", "a", "conflict", "and", "clearly", "the", "current", "president", "does", "because", "he", "has", "n't", "done", "anything"]
# ::lemmas ["i", "be", "ask", "he", "because", "he", "do", "not", "have", "a", "conflict", "and", "clearly", "the", "current", "president", "do", "because", "he", "have", "not", "do", "anything"]
(c7-3 / ask-01
      :ARG0 (c7-12 / i)
      :ARG2 (c7-6 / he)
      :ARG1-of (c7-4 / cause-01
                     :ARG0 (c7-13 / and
                                  :op1 (c7-0 / conflict-01
                                             :ARG0 c7-6
                                             :polarity -)
                                  :op2 (c7-7 / conflict-01
                                             :ARG0 (c7-9 / person
                                                         :ARG0-of (c7-11 / have-org-role-91
                                                                         :ARG2 (c7-8 / president))
                                                         :mod (c7-10 / current))
                                             :ARG1-of (c7-5 / clear-06)
                                             :ARG1-of (c7-14 / cause-01
                                                             :ARG0 (c7-1 / do-02
                                                                         :ARG0 c7-9
                                                                         :ARG1 (c7-2 / anything)
                                                                         :polarity -))))))

# ::snt - that's simply not true.They ' re still looking at different routes.Production is halted . Just because he doesn't brag like Trump ...
# ::tokens ["-", "that", "'s", "simply", "not", "true", ".", "They", "'", "re", "still", "looking", "at", "different", "routes", ".", "Production", "is", "halted", ".", "Just", "because", "he", "does", "n't", "brag", "like", "Trump", "..."]
# ::lemmas ["-", "that", "be", "simply", "not", "true", ".", "they", "'", "re", "still", "look", "at", "different", "route", ".", "production", "be", "halt", ".", "just", "because", "he", "do", "not", "brag", "like", "Trump", "..."]
(c8-15 / multi-sentence
       :snt1 (c8-8 / true-01
                   :ARG1 (c8-3 / that)
                   :ARG1-of (c8-0 / simple-02)
                   :polarity -)
       :snt2 (c8-10 / look-01
                    :ARG0 (c8-17 / they)
                    :ARG1 (c8-9 / route
                                :ARG1-of (c8-1 / differ-02))
                    :mod (c8-13 / still))
       :snt3 (c8-4 / halt-01
                   :ARG1 (c8-14 / produce-01))
       :snt4 (c8-2 / cause-01
                   :ARG0 (c8-12 / brag-01
                                :ARG0 (c8-5 / he)
                                :ARG1-of (c8-6 / resemble-01
                                               :ARG2 (c8-7 / person
                                                           :name (c8-16 / name
                                                                        :op1 "Trump"))
                                               :polarity -)
                                :polarity -)
                   :mod (c8-11 / just)))

# ::snt wait a min ... u think has helped stop ? ? ?
# ::tokens ["wait", "a", "min", "...", "u", "think", "has", "helped", "stop", "?", "?", "?"]
# ::lemmas ["wait", "a", "min", "...", "u", "think", "have", "help", "stop", "?", "?", "?"]
(c9-1 / and
      :op1 (c9-2 / wait-01
                 :ARG1 (c9-7 / you)
                 :duration (c9-5 / temporal-quantity
                                 :unit (c9-6 / minute)
                                 :quant 1)
                 :mode imperative)
      :op2 (c9-3 / think-01
                 :ARG0 c9-7
                 :ARG1 (c9-4 / help-01
                             :ARG0 (c9-8 / amr-unknown)
                             :ARG1 (c9-0 / stop-01))))

# ::snt - no , I think he's still working on it . Do you have proof differently ?
# ::tokens ["-", "no", ",", "I", "think", "he", "'s", "still", "working", "on", "it", ".", "Do", "you", "have", "proof", "differently", "?"]
# ::lemmas ["-", "no", ",", "i", "think", "he", "be", "still", "work", "on", "it", ".", "do", "you", "have", "proof", "differently", "?"]
(c10-10 / multi-sentence
        :snt1 (c10-6 / think-01
                     :ARG0 (c10-9 / i)
                     :ARG1 (c10-3 / work-01
                                  :ARG0 (c10-4 / he)
                                  :ARG1 (c10-5 / it)
                                  :mod (c10-0 / still)))
        :snt2 (c10-8 / have-03
                     :polarity (c10-2 / amr-unknown)
                     :ARG0 (c10-11 / you)
                     :ARG1 (c10-7 / prove-01
                                  :ARG1-of (c10-1 / differ-02))))
