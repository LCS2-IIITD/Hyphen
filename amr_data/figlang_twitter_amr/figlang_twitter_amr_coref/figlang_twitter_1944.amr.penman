# ::snt Yep , she demonstrated what's wrong with her generation better than old people can . Will these snowflakes ever take <URL>
# ::tokens ["Yep", ",", "she", "demonstrated", "what", "'s", "wrong", "with", "her", "generation", "better", "than", "old", "people", "can", ".", "Will", "these", "snowflakes", "ever", "take", "<", "URL", ">"]
# ::lemmas ["yep", ",", "she", "demonstrate", "what", "be", "wrong", "with", "her", "generation", "well", "than", "old", "people", "can", ".", "will", "these", "snowflake", "ever", "take", "<", "URL", ">"]
(c1-15 / multi-sentence
       :snt1 (c1-0 / demonstrate-01
                   :ARG0 (c1-1 / she)
                   :ARG1 (c1-10 / thing
                                :ARG1-of (c1-4 / wrong-02
                                               :ARG2 (c1-12 / generation
                                                            :poss (c1-13 / she))))
                   :ARG1-of (c1-16 / good-02
                                   :ARG2-of (c1-7 / have-degree-91
                                                  :ARG1 c1-0
                                                  :ARG3 (c1-3 / more)
                                                  :ARG4 (c1-14 / possible-01
                                                               :ARG1 c1-0)))
                   :mod (c1-11 / yep))
       :snt2 (c1-5 / take-01
                   :ARG0 (c1-8 / snowflake
                               :mod (c1-6 / this))
                   :ARG1 (c1-9 / url)
                   :time (c1-17 / ever)
                   :polarity (c1-2 / amr-unknown)))

# ::snt And you've demonstrated your ignorance by prejudging someone about whom you know nothing . And stop calling folk " snowflakes " .
# ::tokens ["And", "you", "'ve", "demonstrated", "your", "ignorance", "by", "prejudging", "someone", "about", "whom", "you", "know", "nothing", ".", "And", "stop", "calling", "folk", "\"", "snowflakes", "\"", "."]
# ::lemmas ["and", "you", "'ve", "demonstrate", "your", "ignorance", "by", "prejudge", "someone", "about", "whom", "you", "know", "nothing", ".", "and", "stop", "call", "folk", "\"", "snowflake", "\"", "."]
(c2-11 / multi-sentence
       :snt1 (c2-2 / and
                   :op2 (c2-0 / demonstrate-01
                              :ARG0 (c2-13 / you)
                              :ARG1 (c2-10 / ignorant-02
                                           :ARG1 c2-13
                                           :ARG2 (c2-7 / prejudice-01
                                                       :ARG0 c2-13
                                                       :ARG1 (c2-1 / someone
                                                                   :topic (c2-12 / know-01
                                                                                 :ARG0 c2-13
                                                                                 :ARG1 (c2-8 / nothing)))))))
       :snt2 (c2-14 / and
                    :op2 (c2-9 / stop-01
                               :ARG0 (c2-3 / you)
                               :ARG1 (c2-5 / call-01
                                           :ARG0 c2-3
                                           :ARG1 (c2-4 / folk)
                                           :ARG2 (c2-6 / snowflake))
                               :mode imperative)))

# ::snt No irony there . All you had to do is look and see I followed up on the tweet before prejudging me ... Snowflake .
# ::tokens ["No", "irony", "there", ".", "All", "you", "had", "to", "do", "is", "look", "and", "see", "I", "followed", "up", "on", "the", "tweet", "before", "prejudging", "me", "...", "Snowflake", "."]
# ::lemmas ["no", "irony", "there", ".", "all", "you", "have", "to", "do", "be", "look", "and", "see", "i", "follow", "up", "on", "the", "tweet", "before", "prejudge", "i", "...", "snowflake", "."]
(c3-4 / multi-sentence
      :snt1 (c3-0 / irony
                  :location (c3-3 / there)
                  :polarity -)
      :snt2 (c3-2 / obligate-01
                  :ARG1 (c3-11 / you)
                  :ARG2 (c3-12 / and
                               :op1 (c3-15 / look-01
                                           :ARG0 c3-11)
                               :op2 (c3-8 / see-01
                                          :ARG0 c3-11
                                          :ARG1 (c3-13 / follow-up-03
                                                       :ARG0 (c3-9 / i)
                                                       :ARG1 (c3-1 / thing
                                                                   :ARG1-of (c3-6 / tweet-01))
                                                       :time (c3-16 / before
                                                                    :op1 (c3-18 / prejudice-01
                                                                                :ARG0 c3-11
                                                                                :ARG1 c3-9))))
                               :mod (c3-7 / all)))
      :snt3 (c3-17 / say-01
                   :ARG0 (c3-10 / i)
                   :ARG2 (c3-14 / person
                                :name (c3-5 / name
                                            :op1 "Snowflake"))))

# ::snt And what makes me a " snowflake " , exactly ? Apart from being an individual , that is ?
# ::tokens ["And", "what", "makes", "me", "a", "\"", "snowflake", "\"", ",", "exactly", "?", "Apart", "from", "being", "an", "individual", ",", "that", "is", "?"]
# ::lemmas ["and", "what", "make", "i", "a", "\"", "snowflake", "\"", ",", "exactly", "?", "apart", "from", "be", "an", "individual", ",", "that", "is", "?"]
(c4-6 / multi-sentence
      :snt1 (c4-1 / and
                  :op2 (c4-2 / make-02
                             :ARG0 (c4-7 / amr-unknown)
                             :ARG1 (c4-0 / snowflake
                                         :domain (c4-5 / i))
                             :mod (c4-8 / exact)))
      :snt2 (c4-4 / except-01
                  :ARG1 (c4-3 / individual
                              :domain c4-5)))

# ::snt Um , your knee-jerk , colossally ironic Tweet directed at me is the quintessence of intolerance that defines one .
# ::tokens ["Um", ",", "your", "knee", "-", "jerk", ",", "colossally", "ironic", "Tweet", "directed", "at", "me", "is", "the", "quintessence", "of", "intolerance", "that", "defines", "one", "."]
# ::lemmas ["um", ",", "your", "knee", "-", "jerk", ",", "colossally", "ironic", "Tweet", "direct", "at", "i", "be", "the", "quintessence", "of", "intolerance", "that", "define", "one", "."]
(c5-2 / quintessence
      :poss (c5-7 / tolerate-01
                  :polarity -)
      :ARG1-of (c5-0 / define-01
                     :ARG0 (c5-3 / thing
                                 :ARG1-of (c5-11 / tweet-01
                                                 :ARG0 (c5-8 / you)
                                                 :mod (c5-10 / knee)
                                                 :mod (c5-9 / ironic
                                                            :mod (c5-1 / colossally))
                                                 :ARG1-of (c5-4 / direct-01
                                                                :ARG2 (c5-5 / i)))))
      :mod (c5-6 / um
                 :mode expressive))

# ::snt " Intolerance " ? ! Hah ! And you call my reaction " knee-jerk " when , in fact , * you're * the one who was being a jerk !
# ::tokens ["\"", "Intolerance", "\"", "?", "!", "Hah", "!", "And", "you", "call", "my", "reaction", "\"", "knee", "-", "jerk", "\"", "when", ",", "in", "fact", ",", "*", "you", "'re", "*", "the", "one", "who", "was", "being", "a", "jerk", "!"]
# ::lemmas ["\"", "Intolerance", "\"", "?", "!", "hah", "!", "and", "you", "call", "my", "reaction", "\"", "knee", "-", "jerk", "\"", "when", ",", "in", "fact", ",", "*", "you", "be", "*", "the", "one", "who", "be", "be", "a", "jerk", "!"]
(c6-10 / multi-sentence
       :snt1 (c6-6 / tolerate-01
                   :polarity (c6-0 / amr-unknown))
       :snt2 (c6-13 / and
                    :op1 (c6-4 / hah
                               :mode expressive)
                    :op2 (c6-2 / call-01
                               :ARG0 (c6-12 / you)
                               :ARG1 (c6-3 / thing
                                           :ARG2-of (c6-7 / react-01
                                                          :ARG0 (c6-9 / i)))
                               :ARG2 (c6-11 / kneejerk)
                               :time (c6-8 / jerk
                                           :domain (c6-1 / you)
                                           :mod (c6-5 / in-fact)))))

# ::snt Let me repeat . Slowly . I followed up on it . I always allow new information to change my opinion . That's what tolerant people do .
# ::tokens ["Let", "me", "repeat", ".", "Slowly", ".", "I", "followed", "up", "on", "it", ".", "I", "always", "allow", "new", "information", "to", "change", "my", "opinion", ".", "That", "'s", "what", "tolerant", "people", "do", "."]
# ::lemmas ["let", "i", "repeat", ".", "slowly", ".", "i", "follow", "up", "on", "it", ".", "i", "always", "allow", "new", "information", "to", "change", "my", "opinion", ".", "that", "be", "what", "tolerant", "people", "do", "."]
(c7-8 / multi-sentence
      :snt1 (c7-19 / let-01
                   :ARG0 (c7-15 / you)
                   :ARG1 (c7-7 / repeat-01
                               :ARG0 (c7-1 / i))
                   :mode imperative)
      :snt2 (c7-17 / follow-up-03
                   :ARG0 (c7-13 / i)
                   :ARG1 (c7-14 / it)
                   :manner (c7-12 / slow-05))
      :snt3 (c7-16 / allow-01
                   :ARG0 (c7-18 / i)
                   :ARG1 (c7-2 / change-01
                               :ARG0 (c7-3 / information
                                           :ARG1-of (c7-9 / new-01))
                               :ARG1 (c7-6 / thing
                                           :ARG1-of (c7-5 / opine-01
                                                          :ARG0 c7-18)))
                   :time (c7-11 / always))
      :snt4 (c7-0 / do-02
                  :ARG0 (c7-20 / person
                               :ARG0-of (c7-4 / tolerate-01))
                  :ARG1 (c7-10 / that)))

# ::snt I was reacting to your initial tweet . The fact that your opinion changed doesn't validate it in any way .
# ::tokens ["I", "was", "reacting", "to", "your", "initial", "tweet", ".", "The", "fact", "that", "your", "opinion", "changed", "does", "n't", "validate", "it", "in", "any", "way", "."]
# ::lemmas ["i", "be", "react", "to", "your", "initial", "tweet", ".", "the", "fact", "that", "your", "opinion", "change", "do", "not", "validate", "it", "in", "any", "way", "."]
(c8-10 / multi-sentence
       :snt1 (c8-8 / react-01
                   :ARG0 (c8-9 / i)
                   :ARG1 (c8-7 / tweet-01
                               :ARG0 (c8-11 / you)
                               :time (c8-4 / initial)))
       :snt2 (c8-5 / validate-01
                   :ARG0 (c8-2 / change-01
                               :ARG1 (c8-3 / thing
                                           :ARG1-of (c8-6 / opine-01
                                                          :ARG0 (c8-12 / you)))
                               :mod (c8-1 / fact))
                   :ARG1 c8-3
                   :manner (c8-0 / any)
                   :polarity -))
