# ::snt of asset creations ! We had trees in our garden and now Bushes ! What will I add tomorrow ? What do YOU want to see me create ? If you make me go " ooo " with your suggestion ill even stream its creation on ! <URL> <URL>
# ::tokens ["of", "asset", "creations", "!", "We", "had", "trees", "in", "our", "garden", "and", "now", "Bushes", "!", "What", "will", "I", "add", "tomorrow", "?", "What", "do", "YOU", "want", "to", "see", "me", "create", "?", "If", "you", "make", "me", "go", "\"", "ooo", "\"", "with", "your", "suggestion", "ill", "even", "stream", "its", "creation", "on", "!", "<", "URL", ">", "<", "URL", ">"]
# ::lemmas ["of", "asset", "creation", "!", "we", "have", "tree", "in", "our", "garden", "and", "now", "Bushes", "!", "what", "will", "i", "add", "tomorrow", "?", "what", "do", "you", "want", "to", "see", "i", "create", "?", "if", "you", "make", "i", "go", "\"", "ooo", "\"", "with", "your", "suggestion", "ill", "even", "stream", "its", "creation", "on", "!", "<", "URL", ">", "<", "URL", ">"]
(c1-14 / multi-sentence
       :snt1 (c1-7 / create-01
                   :ARG1 (c1-28 / asset))
       :snt2 (c1-18 / and
                    :op1 (c1-30 / have-03
                                :ARG0 (c1-8 / we)
                                :ARG1 (c1-12 / tree)
                                :location (c1-13 / garden
                                                 :poss c1-8))
                    :op2 (c1-4 / have-03
                               :ARG0 c1-8
                               :ARG1 (c1-32 / person
                                            :name (c1-15 / name
                                                         :op1 "Bushes"))
                               :time (c1-3 / now)))
       :snt3 (c1-1 / add-02
                   :ARG0 (c1-5 / i)
                   :ARG1 (c1-33 / amr-unknown)
                   :time (c1-9 / tomorrow))
       :snt4 (c1-17 / want-01
                    :ARG0 (c1-25 / you)
                    :ARG1 (c1-19 / see-01
                                 :ARG0 (c1-21 / i)
                                 :ARG1 (c1-0 / create-01
                                             :ARG0 c1-21
                                             :ARG1 (c1-2 / amr-unknown))))
       :snt5 (c1-6 / have-condition-91
                   :ARG1 (c1-31 / stream-03
                                :ARG0 (c1-26 / you)
                                :ARG1 (c1-16 / thing
                                             :ARG1-of (c1-10 / create-01
                                                             :ARG0 c1-21))
                                :mod (c1-20 / even))
                   :ARG2 (c1-29 / make-02
                                :ARG0 c1-26
                                :ARG1 (c1-27 / go-01
                                             :ARG1 c1-21
                                             :ARG4 (c1-11 / ooo
                                                          :mode expressive)
                                             :ARG1-of (c1-24 / cause-01
                                                             :ARG0 (c1-22 / thing
                                                                          :ARG1-of (c1-23 / suggest-01
                                                                                          :ARG0 c1-26)))))))

# ::snt oh i forgot to say the giveaway is with ! It is morning still shh ! <URL>
# ::tokens ["oh", "i", "forgot", "to", "say", "the", "giveaway", "is", "with", "!", "It", "is", "morning", "still", "shh", "!", "<", "URL", ">"]
# ::lemmas ["oh", "i", "forgot", "to", "say", "the", "giveaway", "be", "with", "!", "it", "be", "morning", "still", "shh", "!", "<", "URL", ">"]
(c2-9 / multi-sentence
      :snt1 (c2-1 / forget-01
                  :ARG0 (c2-8 / i)
                  :ARG1 (c2-0 / say-01
                              :ARG0 c2-8
                              :ARG1 (c2-6 / be-with-10
                                          :ARG1 (c2-5 / giveaway-01)))
                  :mod (c2-4 / oh
                             :mode expressive))
      :snt2 (c2-2 / morning
                  :time (c2-7 / still)
                  :mod (c2-3 / shh
                             :mode expressive)))
