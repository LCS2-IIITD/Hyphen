# ::snt Then Helena would absolutely not be too far behind . <URL>
# ::tokens ["Then", "Helena", "would", "absolutely", "not", "be", "too", "far", "behind", ".", "<", "URL", ">"]
# ::lemmas ["then", "Helena", "would", "absolutely", "not", "be", "too", "far", "behind", ".", "<", "URL", ">"]
(c1-2 / cause-01
      :ARG1 (c1-3 / have-degree-91
                  :ARG1 (c1-6 / person
                              :name (c1-7 / name
                                          :op1 "Helena"))
                  :ARG2 (c1-1 / far
                              :mod (c1-0 / absolute)
                              :polarity -)
                  :ARG3 (c1-4 / too)
                  :ARG6 (c1-5 / behind
                              :domain c1-6)))

# ::snt maybe that was her blouse we saw , Not Olivia's ? Did they even address that today ? ( I didn't bother )
# ::tokens ["maybe", "that", "was", "her", "blouse", "we", "saw", ",", "Not", "Olivia", "'s", "?", "Did", "they", "even", "address", "that", "today", "?", "(", "I", "did", "n't", "bother", ")"]
# ::lemmas ["maybe", "that", "be", "her", "blouse", "we", "see", ",", "not", "Olivia", "'s", "?", "do", "they", "even", "address", "that", "today", "?", "(", "i", "do", "not", "bother", ")"]
(c2-5 / multi-sentence
      :snt1 (c2-19 / possible-01
                   :ARG1 (c2-1 / contrast-01
                               :ARG1 (c2-17 / blouse
                                            :poss (c2-10 / she)
                                            :domain (c2-4 / that)
                                            :ARG1-of (c2-18 / see-01
                                                            :ARG0 (c2-2 / we)))
                               :ARG2 (c2-13 / blouse
                                            :poss (c2-16 / person
                                                         :name (c2-6 / name
                                                                     :op1 "Olivia")
                                                         :polarity -)
                                            :domain (c2-3 / that))))
      :snt2 (c2-14 / address-02
                   :ARG0 (c2-7 / they)
                   :ARG1 (c2-12 / that)
                   :mod (c2-9 / even)
                   :time (c2-15 / today)
                   :polarity (c2-8 / amr-unknown))
      :snt3 (c2-11 / bother-01
                   :ARG0 (c2-0 / i)
                   :polarity -))

# ::snt idk why Olivia continues to exist . I haven't seen today's episode yet .
# ::tokens ["idk", "why", "Olivia", "continues", "to", "exist", ".", "I", "have", "n't", "seen", "today", "'s", "episode", "yet", "."]
# ::lemmas ["idk", "why", "Olivia", "continue", "to", "exist", ".", "i", "have", "not", "see", "today", "'s", "episode", "yet", "."]
(c3-11 / multi-sentence
       :snt1 (c3-12 / know-01
                    :ARG0 (c3-10 / i)
                    :ARG1 (c3-7 / thing
                                :ARG0-of (c3-2 / cause-01
                                               :ARG1 (c3-0 / continue-01
                                                           :ARG1 (c3-14 / exist-01
                                                                        :ARG1 (c3-8 / person
                                                                                    :name (c3-9 / name
                                                                                                :op1 "Olivia"))))))
                    :mod (c3-4 / idiot))
       :snt2 (c3-1 / see-01
                   :ARG0 (c3-5 / i)
                   :ARG1 (c3-6 / episode
                               :time (c3-3 / today))
                   :time (c3-13 / yet)
                   :polarity -))

# ::snt No Olivia Jerome - - I thought maybe " Oscar Jwhoever " is her . Said he " died " in ( year she did ) and initials .
# ::tokens ["No", "Olivia", "Jerome", "-", "-", "I", "thought", "maybe", "\"", "Oscar", "Jwhoever", "\"", "is", "her", ".", "Said", "he", "\"", "died", "\"", "in", "(", "year", "she", "did", ")", "and", "initials", "."]
# ::lemmas ["no", "Olivia", "Jerome", "-", "-", "i", "think", "maybe", "\"", "Oscar", "Jwhoever", "\"", "be", "she", ".", "say", "he", "\"", "die", "\"", "in", "(", "year", "she", "do", ")", "and", "initial", "."]
(c4-14 / multi-sentence
       :snt1 (c4-9 / think-01
                   :ARG0 (c4-13 / i)
                   :ARG1 (c4-11 / possible-01
                                :ARG1 (c4-8 / person
                                            :name (c4-15 / name
                                                         :op1 "Oscar"
                                                         :op2 "J.")
                                            :domain (c4-0 / she)))
                   :polarity -)
       :snt2 (c4-12 / say-01
                    :ARG0 c4-13)
       :ARG1 (c4-1 / die-01
                   :ARG1 (c4-4 / he)
                   :time c4-1
                   :ARG1 (c4-5 / she)
                   :time (c4-16 / year
                                :ARG1-of (c4-2 / do-02
                                               :ARG0 c4-5)))
       :snt3 (c4-6 / have-03
                   :ARG0 (c4-3 / person
                               :name (c4-10 / name
                                            :op1 "Oscar"
                                            :op2 "Jome"))
                   :ARG1 (c4-7 / name
                               :op1 " initials")))

# ::snt oooh ! ! ! She's the sister Julian supposedly murdered , right ? Now returned to pull his string and breathe life into another crime fan
# ::tokens ["oooh", "!", "!", "!", "She", "'s", "the", "sister", "Julian", "supposedly", "murdered", ",", "right", "?", "Now", "returned", "to", "pull", "his", "string", "and", "breathe", "life", "into", "another", "crime", "fan"]
# ::lemmas ["oooh", "!", "!", "!", "she", "be", "the", "sister", "Julian", "supposedly", "murder", ",", "right", "?", "now", "return", "to", "pull", "his", "string", "and", "breathe", "life", "into", "another", "crime", "fan"]
(c5-7 / multi-sentence
      :snt1 (c5-5 / ooh
                  :mode expressive)
      :snt2 (c5-15 / have-rel-role-91
                   :ARG0 (c5-10 / she)
                   :ARG1 (c5-20 / person
                                :name (c5-8 / name
                                            :op1 "Julian"))
                   :ARG2 (c5-19 / sister)
                   :ARG1-of (c5-14 / murder-01
                                   :ARG1-of (c5-11 / suppose-01))
                   :ARG1-of (c5-6 / request-confirmation-91))
      :snt3 (c5-4 / return-01
                  :ARG1 (c5-12 / and
                               :op1 (c5-16 / pull-01
                                           :ARG0 (c5-1 / he
                                                       :part (c5-2 / string
                                                                   :ARG1-of c5-16)))
                               :op2 (c5-18 / breathe-01
                                           :ARG0 c5-1
                                           :ARG1 (c5-17 / life)
                                           :ARG2 (c5-13 / fan
                                                        :topic (c5-3 / crime-02)
                                                        :mod (c5-9 / another))))
                  :time (c5-0 / now)))

# ::snt it would make sense . Julian said " I've been doing what you said for months " So I'm thinking either Hells or Olivia J
# ::tokens ["it", "would", "make", "sense", ".", "Julian", "said", "\"", "I", "'ve", "been", "doing", "what", "you", "said", "for", "months", "\"", "So", "I", "'m", "thinking", "either", "Hells", "or", "Olivia", "J"]
# ::lemmas ["it", "would", "make", "sense", ".", "Julian", "say", "\"", "i", "'ve", "be", "do", "what", "you", "say", "for", "months", "\"", "so", "i", "be", "think", "either", "Hells", "or", "Olivia", "J"]
(c6-7 / multi-sentence
      :snt1 (c6-10 / sense-02
                   :ARG1 (c6-2 / it))
      :snt2 (c6-19 / say-01
                   :ARG0 (c6-20 / person
                                :name (c6-8 / name
                                            :op1 "Julian"))
                   :ARG1 (c6-0 / do-02
                               :ARG0 c6-20
                               :ARG1 (c6-6 / thing
                                           :ARG1-of (c6-13 / say-01
                                                           :ARG0 (c6-16 / you)))
                               :duration (c6-17 / multiple
                                                :op1 (c6-4 / temporal-quantity
                                                           :unit (c6-14 / month)
                                                           :quant 1))))
      :snt3 (c6-3 / cause-01
                  :ARG1 (c6-9 / think-01
                              :ARG0 (c6-12 / i)
                              :ARG1 (c6-5 / or
                                          :op1 (c6-18 / person
                                                      :name (c6-1 / name
                                                                  :op1 "Hells"))
                                          :op2 (c6-11 / person
                                                      :name (c6-15 / name
                                                                   :op1 "Olivia"
                                                                   :op2 "J"))))))
