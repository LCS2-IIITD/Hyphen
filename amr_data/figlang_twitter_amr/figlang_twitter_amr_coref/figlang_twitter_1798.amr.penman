# ::snt If it doesn't stand then it changes nothing . We entered the EEC in . You're ignorant of the basic facts here
# ::tokens ["If", "it", "does", "n't", "stand", "then", "it", "changes", "nothing", ".", "We", "entered", "the", "EEC", "in", ".", "You", "'re", "ignorant", "of", "the", "basic", "facts", "here"]
# ::lemmas ["if", "it", "do", "not", "stand", "then", "it", "change", "nothing", ".", "we", "enter", "the", "EEC", "in", ".", "you", "be", "ignorant", "of", "the", "basic", "fact", "here"]
(c1-11 / multi-sentence
       :snt1 (c1-2 / change-01
                   :ARG0 (c1-10 / it)
                   :ARG1 (c1-12 / nothing)
                   :condition (c1-0 / stand-04
                                    :ARG1 (c1-4 / it)
                                    :polarity -))
       :snt2 (c1-14 / enter-01
                    :ARG0 (c1-3 / we)
                    :ARG1 (c1-7 / organization
                                :name (c1-8 / name
                                            :op1 "ECEC")))
       :snt3 (c1-5 / ignorant-02
                   :ARG1 (c1-13 / you)
                   :ARG2 (c1-1 / fact
                               :mod (c1-9 / basic))
                   :location (c1-6 / here)))

# ::snt Without a say again . You are really happy when this happens .
# ::tokens ["Without", "a", "say", "again", ".", "You", "are", "really", "happy", "when", "this", "happens", "."]
# ::lemmas ["without", "a", "say", "again", ".", "you", "be", "really", "happy", "when", "this", "happen", "."]
(c2-5 / multi-sentence
      :snt1 (c2-0 / say-01
                  :mod (c2-1 / again)
                  :polarity -)
      :snt2 (c2-2 / happy-01
                  :ARG0 (c2-3 / this)
                  :ARG1 (c2-6 / you)
                  :degree (c2-4 / really)
                  :time (c2-7 / event)))

# ::snt You keep ignoring the fact pointed out repeatedly that these govts are voted in on pro-EU ticket .
# ::tokens ["You", "keep", "ignoring", "the", "fact", "pointed", "out", "repeatedly", "that", "these", "govts", "are", "voted", "in", "on", "pro", "-", "EU", "ticket", "."]
# ::lemmas ["you", "keep", "ignore", "the", "fact", "point", "out", "repeatedly", "that", "these", "govts", "be", "vote", "in", "on", "pro", "-", "eu", "ticket", "."]
(c3-11 / keep-02
       :ARG0 (c3-12 / you)
       :ARG1 (c3-10 / ignore-01
                    :ARG0 c3-12
                    :ARG1 (c3-7 / point-out-02
                                :ARG0 c3-12
                                :ARG1 (c3-3 / vote-01
                                            :ARG1 (c3-9 / government-organization
                                                        :ARG0-of (c3-0 / govern-01)
                                                        :mod (c3-5 / this))
                                            :manner (c3-2 / ticket
                                                          :ARG0-of (c3-1 / favor-01
                                                                         :ARG1 (c3-4 / organization
                                                                                     :name (c3-8 / name
                                                                                                 :op1 "EU")))))
                                :ARG1-of (c3-6 / repeat-01))))

# ::snt On the promises of referenda that never happened . We forced their hand in the end .
# ::tokens ["On", "the", "promises", "of", "referenda", "that", "never", "happened", ".", "We", "forced", "their", "hand", "in", "the", "end", "."]
# ::lemmas ["on", "the", "promise", "of", "referenda", "that", "never", "happen", ".", "we", "force", "their", "hand", "in", "the", "end", "."]
(c4-7 / multi-sentence
      :snt1 (c4-6 / promise-01
                  :ARG2 (c4-5 / referendum)
                  :time (c4-8 / ever))
      :snt2 (c4-0 / force-01
                  :ARG0 (c4-1 / we)
                  :ARG1 (c4-2 / hand
                              :part-of (c4-4 / they))
                  :time (c4-3 / end-01)))

# ::snt Which govt / s promised referenda in manifestos & did not deliver ? Be precise .
# ::tokens ["Which", "govt", "/", "s", "promised", "referenda", "in", "manifestos", "&", "did", "not", "deliver", "?", "Be", "precise", "."]
# ::lemmas ["which", "govt", "/", "s", "promise", "referenda", "in", "manifestos", "&", "do", "not", "deliver", "?", "be", "precise", "."]
(c5-8 / multi-sentence
      :snt1 (c5-1 / and
                  :op1 (c5-7 / promise-01
                             :ARG0 (c5-6 / government-organization
                                         :ARG0-of (c5-9 / govern-01))
                             :ARG2 (c5-5 / referendum)
                             :location (c5-2 / manifestos))
                  :op2 (c5-0 / deliver-01
                             :ARG0 c5-6
                             :ARG1 c5-5
                             :polarity -))
      :snt2 (c5-3 / precise
                  :domain (c5-4 / you)
                  :mode imperative))

# ::snt . Tories - , cast iron guarantee in . All parties blocked one in , used a line whip .
# ::tokens [".", "Tories", "-", ",", "cast", "iron", "guarantee", "in", ".", "All", "parties", "blocked", "one", "in", ",", "used", "a", "line", "whip", "."]
# ::lemmas [".", "tory", "-", ",", "cast", "iron", "guarantee", "in", ".", "all", "party", "block", "one", "in", ",", "use", "a", "line", "whip", "."]
(c6-12 / multi-sentence
       :snt1 (c6-11 / put-01
                    :ARG0 (c6-8 / political-party
                                :name (c6-13 / name
                                             :op1 "Tory"))
                    :ARG1 (c6-10 / guarantee-01
                                 :mod (c6-1 / iron)))
       :snt2 (c6-0 / and
                   :op1 (c6-5 / block-01
                              :ARG0 (c6-3 / party
                                          :mod (c6-14 / all))
                              :ARG1 (c6-7 / one)
                              :direction (c6-4 / in))
                   :op2 (c6-6 / use-01
                              :ARG0 c6-3
                              :ARG1 (c6-2 / whip
                                          :mod (c6-9 / line)))))

# ::snt Tories weren't in power in " Cast iron guarantee " in is meaningless , if it didn't make it into manifesto
# ::tokens ["Tories", "were", "n't", "in", "power", "in", "\"", "Cast", "iron", "guarantee", "\"", "in", "is", "meaningless", ",", "if", "it", "did", "n't", "make", "it", "into", "manifesto"]
# ::lemmas ["tory", "be", "not", "in", "power", "in", "\"", "cast", "iron", "guarantee", "\"", "in", "be", "meaningless", ",", "if", "it", "do", "not", "make", "it", "into", "manifesto"]
(c7-6 / mean-01
      :ARG1 (c7-4 / guarantee-01
                  :ARG1 (c7-0 / cast-01
                              :ARG1 (c7-5 / iron))
                  :location (c7-3 / political-party
                                  :name (c7-7 / name
                                              :op1 "Tory")))
      :condition (c7-1 / make-it-14
                       :ARG0 c7-4
                       :ARG1 (c7-2 / manifesto)
                       :polarity -)
      :polarity -)

# ::snt EU constitution did not come to pass as France & Netherlands rejected it . . no need to UK to hold referendum .
# ::tokens ["EU", "constitution", "did", "not", "come", "to", "pass", "as", "France", "&", "Netherlands", "rejected", "it", ".", ".", "no", "need", "to", "UK", "to", "hold", "referendum", "."]
# ::lemmas ["EU", "constitution", "do", "not", "come", "to", "pass", "as", "France", "&", "Netherlands", "reject", "it", ".", ".", "no", "need", "to", "UK", "to", "hold", "referendum", "."]
(c8-14 / multi-sentence
       :snt1 (c8-3 / come-04
                   :ARG1 (c8-0 / constitution
                               :mod (c8-8 / organization
                                          :name (c8-15 / name
                                                       :op1 "EU")))
                   :time (c8-10 / reject-01
                                :ARG0 (c8-1 / and
                                            :op1 (c8-6 / country
                                                       :name (c8-11 / name
                                                                    :op1 "France"))
                                            :op2 (c8-13 / country
                                                        :name (c8-9 / name
                                                                    :op1 "Netherlands")))
                                :ARG1 c8-0)
                   :polarity -)
       :snt2 (c8-2 / need-01
                   :ARG1 (c8-5 / hold-04
                               :ARG0 (c8-4 / country
                                           :name (c8-12 / name
                                                        :op1 "UK"))
                               :ARG1 (c8-7 / referendum))
                   :polarity -))

# ::snt None of it matters now . I have to go eat sorry .
# ::tokens ["None", "of", "it", "matters", "now", ".", "I", "have", "to", "go", "eat", "sorry", "."]
# ::lemmas ["none", "of", "it", "matter", "now", ".", "i", "have", "to", "go", "eat", "sorry", "."]
(c9-8 / multi-sentence
      :snt1 (c9-1 / matter-01
                  :ARG1 (c9-9 / none
                              :ARG1-of (c9-7 / include-91
                                             :ARG2 (c9-2 / it)))
                  :time (c9-5 / now))
      :snt2 (c9-4 / obligate-01
                  :ARG2 (c9-6 / go-05
                              :ARG0 (c9-3 / i)
                              :ARG1 (c9-10 / eat-01
                                           :ARG0 c9-3)
                              :manner (c9-0 / sorry-01
                                            :ARG1 c9-3))))

# ::snt Well it does matter if it's falsely swayed your & others ' opinions to vote one way . It will wait .
# ::tokens ["Well", "it", "does", "matter", "if", "it", "'s", "falsely", "swayed", "your", "&", "others", "'", "opinions", "to", "vote", "one", "way", ".", "It", "will", "wait", "."]
# ::lemmas ["well", "it", "do", "matter", "if", "it", "be", "falsely", "sway", "your", "&", "other", "'", "opinion", "to", "vote", "one", "way", ".", "it", "will", "wait", "."]
(c10-14 / multi-sentence
        :snt1 (c10-4 / matter-01
                     :ARG1 (c10-13 / it)
                     :condition (c10-0 / sway-02
                                       :ARG0 (c10-6 / it)
                                       :ARG1 (c10-2 / and
                                                    :op1 (c10-10 / opine-01
                                                                 :ARG0 (c10-15 / you))
                                                    :op2 (c10-7 / opine-01
                                                                :ARG0 (c10-11 / person
                                                                              :mod (c10-1 / other))))
                                       :ARG2 (c10-9 / vote-01
                                                    :ARG0 c10-2
                                                    :manner (c10-5 / way
                                                                   :quant 1))
                                       :manner (c10-3 / false))
                     :mod (c10-16 / well))
        :snt2 (c10-12 / wait-01
                      :ARG1 (c10-8 / it)))

# ::snt No it doesn't . I didn't vote leave on that basis . And we were promised lots of times .
# ::tokens ["No", "it", "does", "n't", ".", "I", "did", "n't", "vote", "leave", "on", "that", "basis", ".", "And", "we", "were", "promised", "lots", "of", "times", "."]
# ::lemmas ["no", "it", "do", "not", ".", "i", "do", "not", "vote", "leave", "on", "that", "basis", ".", "and", "we", "be", "promise", "lot", "of", "time", "."]
(c11-12 / multi-sentence
        :snt1 (c11-0 / do-02
                     :ARG0 (c11-11 / it)
                     :polarity -)
        :snt2 (c11-6 / vote-01
                     :ARG0 (c11-5 / i)
                     :ARG1 (c11-8 / leave-11)
                     :ARG1-of (c11-10 / base-02
                                      :ARG2 (c11-7 / that))
                     :polarity -)
        :snt3 (c11-2 / and
                     :op2 (c11-9 / promise-01
                                 :ARG2 (c11-3 / we)
                                 :frequency (c11-4 / time
                                                   :quant (c11-1 / lot)))))

# ::snt And your other arguments for leaving don't stand up under scrutiny .
# ::tokens ["And", "your", "other", "arguments", "for", "leaving", "do", "n't", "stand", "up", "under", "scrutiny", "."]
# ::lemmas ["and", "your", "other", "argument", "for", "leave", "do", "not", "stand", "up", "under", "scrutiny", "."]
(c12-1 / and
       :op2 (c12-0 / stand-up-07
                   :ARG1 (c12-6 / argue-01
                                :ARG0 (c12-5 / you)
                                :ARG1 (c12-3 / leave-11)
                                :mod (c12-2 / other))
                   :prep-under (c12-4 / scrutinize-01)
                   :polarity -))

# ::snt ok , well be glad with you vote . It changes nothing .
# ::tokens ["ok", ",", "well", "be", "glad", "with", "you", "vote", ".", "It", "changes", "nothing", "."]
# ::lemmas ["ok", ",", "well", "be", "glad", "with", "you", "vote", ".", "it", "change", "nothing", "."]
(c13-7 / multi-sentence
       :snt1 (c13-5 / glad-02
                    :ARG0 (c13-3 / vote-01
                                 :ARG0 (c13-9 / you))
                    :ARG1 (c13-6 / person
                                 :mod (c13-1 / well))
                    :ARG1-of (c13-4 / okay-04))
       :snt2 (c13-0 / change-01
                    :ARG0 (c13-2 / it)
                    :ARG1 (c13-8 / nothing)))

# ::snt Are you not concerned by your inability to back your argument up with anything substantive ?
# ::tokens ["Are", "you", "not", "concerned", "by", "your", "inability", "to", "back", "your", "argument", "up", "with", "anything", "substantive", "?"]
# ::lemmas ["be", "you", "not", "concern", "by", "your", "inability", "to", "back", "your", "argument", "up", "with", "anything", "substantive", "?"]
(c14-4 / concern-01
       :ARG0 (c14-0 / capable-01
                    :ARG1 (c14-6 / you)
                    :ARG2 (c14-5 / back-up-04
                                 :ARG0 c14-6
                                 :ARG1 (c14-3 / argue-01
                                              :ARG0 c14-6)
                                 :instrument (c14-7 / anything
                                                    :mod (c14-1 / substantive)))
                    :polarity -)
       :ARG1 c14-6
       :polarity (c14-2 / amr-unknown)
       :polarity -)

# ::snt Or are you only after confirmation for the beliefs you already hold & are not interested in the facts ?
# ::tokens ["Or", "are", "you", "only", "after", "confirmation", "for", "the", "beliefs", "you", "already", "hold", "&", "are", "not", "interested", "in", "the", "facts", "?"]
# ::lemmas ["or", "be", "you", "only", "after", "confirmation", "for", "the", "belief", "you", "already", "hold", "&", "be", "not", "interested", "in", "the", "fact", "?"]
(c15-6 / or
       :op2 (c15-1 / after
                   :op1 (c15-3 / confirm-01
                               :ARG1 (c15-12 / and
                                             :op1 (c15-8 / thing
                                                         :ARG1-of (c15-9 / believe-01)
                                                         :ARG1-of (c15-4 / hold-01
                                                                         :ARG0 (c15-11 / you)
                                                                         :time (c15-0 / already)))
                                             :op2 (c15-10 / interest-01
                                                          :ARG1 c15-11
                                                          :ARG2 (c15-2 / fact)
                                                          :polarity -)))
                   :mod (c15-5 / only)
                   :polarity (c15-7 / amr-unknown)))

# ::snt It's over . Get over it , move on , make the most of having more democracy .
# ::tokens ["It", "'s", "over", ".", "Get", "over", "it", ",", "move", "on", ",", "make", "the", "most", "of", "having", "more", "democracy", "."]
# ::lemmas ["it", "be", "over", ".", "get", "over", "it", ",", "move", "on", ",", "make", "the", "most", "of", "have", "more", "democracy", "."]
(c16-11 / multi-sentence
        :snt1 (c16-8 / over-01
                     :ARG1 (c16-10 / it))
        :snt2 (c16-2 / and
                     :op1 (c16-5 / over-02
                                 :ARG1 (c16-12 / you)
                                 :ARG2 (c16-4 / it)
                                 :mode imperative)
                     :op2 (c16-3 / move-01
                                 :ARG0 c16-12
                                 :direction (c16-1 / on)
                                 :mode imperative)
                     :op3 (c16-7 / make-05
                                 :ARG0 c16-12
                                 :ARG1 (c16-6 / have-quant-91
                                              :ARG1 (c16-0 / democracy)
                                              :ARG3 (c16-9 / most))
                                 :mode imperative)))

# ::snt Do you really think it's over ? It's hardly started . I've already pointed out how we'll have less democracy .
# ::tokens ["Do", "you", "really", "think", "it", "'s", "over", "?", "It", "'s", "hardly", "started", ".", "I", "'ve", "already", "pointed", "out", "how", "we", "'ll", "have", "less", "democracy", "."]
# ::lemmas ["do", "you", "really", "think", "it", "be", "over", "?", "it", "be", "hardly", "start", ".", "i", "'ve", "already", "point", "out", "how", "we", "'ll", "have", "less", "democracy", "."]
(c17-14 / multi-sentence
        :snt1 (c17-8 / think-01
                     :polarity (c17-2 / amr-unknown)
                     :ARG0 (c17-15 / you)
                     :ARG1 (c17-7 / over-01
                                  :ARG1 (c17-13 / it))
                     :ARG1-of (c17-9 / real-04))
        :snt2 (c17-0 / start-01
                     :ARG1 (c17-4 / it)
                     :degree (c17-5 / hardly))
        :snt3 (c17-10 / point-out-02
                      :ARG0 (c17-6 / i)
                      :ARG1 (c17-12 / have-03
                                    :ARG0 (c17-3 / we)
                                    :ARG1 (c17-1 / democracy
                                                 :quant (c17-11 / less)))
                      :time (c17-16 / already)))

# ::snt No you haven't . We will have what we make ourselves .
# ::tokens ["No", "you", "have", "n't", ".", "We", "will", "have", "what", "we", "make", "ourselves", "."]
# ::lemmas ["no", "you", "have", "not", ".", "we", "will", "have", "what", "we", "make", "ourselves", "."]
(c18-4 / multi-sentence
       :snt1 (c18-6 / event
                    :mod (c18-5 / you)
                    :polarity -)
       :snt2 (c18-2 / have-03
                    :ARG0 (c18-1 / we)
                    :ARG1 (c18-3 / thing
                                 :ARG1-of (c18-0 / make-01
                                                 :ARG0 c18-1))))
