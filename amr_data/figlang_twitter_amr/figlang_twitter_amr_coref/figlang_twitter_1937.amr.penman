# ::snt Sad thing is , in their twisted minds , they are fighting for social justice . No , it's called a riot . Grow up .
# ::tokens ["Sad", "thing", "is", ",", "in", "their", "twisted", "minds", ",", "they", "are", "fighting", "for", "social", "justice", ".", "No", ",", "it", "'s", "called", "a", "riot", ".", "Grow", "up", "."]
# ::lemmas ["sad", "thing", "be", ",", "in", "their", "twisted", "mind", ",", "they", "be", "fight", "for", "social", "justice", ".", "no", ",", "it", "be", "call", "a", "riot", ".", "grow", "up", "."]
(c1-11 / multi-sentence
       :snt1 (c1-2 / fight-01
                   :ARG0 (c1-6 / they)
                   :ARG2 (c1-9 / justice
                               :mod (c1-0 / social))
                   :ARG1-of (c1-1 / sad-02)
                   :location (c1-3 / mind
                                   :ARG1-of (c1-5 / twisted-02)
                                   :poss c1-6))
       :snt2 (c1-4 / call-01
                   :ARG1 (c1-10 / it)
                   :ARG2 (c1-7 / riot-01)
                   :mod (c1-12 / no))
       :snt3 (c1-8 / grow-up-04
                   :ARG1 (c1-13 / you)
                   :mode imperative))

# ::snt ahh , a cheater lover who will neve match Peyton's numbers
# ::tokens ["ahh", ",", "a", "cheater", "lover", "who", "will", "neve", "match", "Peyton", "'s", "numbers"]
# ::lemmas ["ahh", ",", "a", "cheater", "lover", "who", "will", "neve", "match", "Peyton", "'s", "number"]
(c2-6 / person
      :ARG0-of (c2-5 / love-01
                     :ARG1 (c2-1 / cheat-03))
      :ARG1-of (c2-7 / match-01
                     :ARG2 (c2-8 / number
                                 :poss (c2-3 / person
                                             :name (c2-4 / name
                                                         :op1 "Peyton")))
                     :ARG1-of (c2-2 / possible-01))
      :mod (c2-0 / ah
                 :mode expressive))

# ::snt I like Peyton but do tell ... how many rings has Peyton got ? And his last ring was won by defense so doesn't count .
# ::tokens ["I", "like", "Peyton", "but", "do", "tell", "...", "how", "many", "rings", "has", "Peyton", "got", "?", "And", "his", "last", "ring", "was", "won", "by", "defense", "so", "does", "n't", "count", "."]
# ::lemmas ["i", "like", "Peyton", "but", "do", "tell", "...", "how", "many", "ring", "have", "Peyton", "get", "?", "and", "his", "last", "ring", "be", "win", "by", "defense", "so", "do", "not", "count", "."]
(c3-15 / multi-sentence
       :snt1 (c3-5 / contrast-01
                   :ARG1 (c3-11 / like-01
                                :ARG0 (c3-4 / i)
                                :ARG1 (c3-14 / person
                                             :name (c3-16 / name
                                                          :op1 "Peyton")))
                   :ARG2 (c3-9 / tell-01
                               :ARG0 (c3-17 / you)
                               :ARG1 (c3-10 / number
                                            :quant-of (c3-12 / ring
                                                             :ARG1-of (c3-13 / get-01
                                                                             :ARG0 c3-14)))
                               :mode imperative))
       :snt2 (c3-3 / and
                   :op2 (c3-6 / win-01
                              :ARG0 (c3-0 / defend-01)
                              :ARG1 (c3-7 / ring
                                          :mod (c3-1 / last)
                                          :poss c3-14)
                              :ARG0-of (c3-2 / cause-01
                                             :ARG1 (c3-8 / count-04
                                                         :ARG1 c3-7
                                                         :polarity -)))))

# ::snt TB has all those rings cause he , the coach and the team cheat , not much mor u can say , cheating says it all , got a hot wife ,
# ::tokens ["TB", "has", "all", "those", "rings", "cause", "he", ",", "the", "coach", "and", "the", "team", "cheat", ",", "not", "much", "mor", "u", "can", "say", ",", "cheating", "says", "it", "all", ",", "got", "a", "hot", "wife", ","]
# ::lemmas ["TB", "have", "all", "those", "ring", "cause", "he", ",", "the", "coach", "and", "the", "team", "cheat", ",", "not", "much", "mor", "u", "can", "say", ",", "cheat", "say", "it", "all", ",", "get", "a", "hot", "wife", ","]
(c4-10 / multi-sentence
       :snt1 (c4-20 / have-03
                    :ARG0 (c4-22 / person
                                 :name (c4-11 / name
                                              :op1 "TB"))
                    :ARG1 (c4-8 / ring
                                :mod (c4-7 / that)
                                :mod (c4-19 / all))
                    :ARG1-of (c4-3 / cause-01
                                   :ARG0 (c4-0 / cheat-03
                                               :ARG0 (c4-12 / and
                                                            :op1 c4-22
                                                            :op2 (c4-21 / person
                                                                        :ARG0-of (c4-6 / coach-01))
                                                            :op3 (c4-5 / team)))))
       :snt2 (c4-16 / possible-01
                    :ARG1 (c4-13 / say-01
                                 :ARG0 (c4-18 / you)
                                 :ARG1 (c4-17 / cheat-03))
                    :polarity -)
       :snt3 (c4-9 / get-01
                   :ARG0 (c4-14 / cheat-03)
                   :ARG1 (c4-15 / person
                                :ARG0-of (c4-1 / have-rel-role-91
                                               :ARG1 c4-22
                                               :ARG2 (c4-4 / wife
                                                           :ARG1-of (c4-2 / hot-03))))))

# ::snt don't hate feel sorry that the cheater is ur God , will be lucky if he matches PM numbers
# ::tokens ["do", "n't", "hate", "feel", "sorry", "that", "the", "cheater", "is", "ur", "God", ",", "will", "be", "lucky", "if", "he", "matches", "PM", "numbers"]
# ::lemmas ["do", "not", "hate", "feel", "sorry", "that", "the", "cheater", "be", "ur", "God", ",", "will", "be", "lucky", "if", "he", "match", "pm", "number"]
(c5-1 / and
      :op1 (c5-4 / hate-01
                 :ARG0 (c5-9 / i)
                 :polarity -)
      :op2 (c5-0 / sorry-01
                 :ARG1 c5-9
                 :ARG2 (c5-7 / person
                             :name (c5-11 / name
                                          :op1 "God")
                             :domain (c5-5 / person
                                           :ARG0-of (c5-2 / cheat-02))
                             :poss c5-9))
      :op3 (c5-8 / lucky
                 :domain c5-5
                 :condition (c5-10 / match-01
                                   :ARG1 c5-5
                                   :ARG2 (c5-6 / number
                                               :mod (c5-3 / prime)))))
