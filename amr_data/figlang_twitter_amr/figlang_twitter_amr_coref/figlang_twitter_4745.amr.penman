# ::snt If your bathroom isnt a shrine to Berlin period David Bowie , your a nobody ! <URL>
# ::tokens ["If", "your", "bathroom", "is", "nt", "a", "shrine", "to", "Berlin", "period", "David", "Bowie", ",", "your", "a", "nobody", "!", "<", "URL", ">"]
# ::lemmas ["if", "your", "bathroom", "be", "not", "a", "shrine", "to", "Berlin", "period", "David", "Bowie", ",", "your", "a", "nobody", "!", "<", "URL", ">"]
(c1-7 / nobody
      :domain (c1-6 / person
                    :name (c1-4 / name
                                :op1 "David"
                                :op2 "David"
                                :op3 "Bieckie"))
      :condition (c1-0 / shrine
                       :beneficiary c1-6
                       :location (c1-1 / city
                                       :name (c1-2 / name
                                                   :op1 "Berlin"))
                       :polarity -)
      :domain (c1-5 / bathroom
                    :poss (c1-8 / you))
      :mod (c1-3 / period))

# ::snt I second that ... but try your whole house , not just the bathroom , kidda
# ::tokens ["I", "second", "that", "...", "but", "try", "your", "whole", "house", ",", "not", "just", "the", "bathroom", ",", "kidda"]
# ::lemmas ["i", "second", "that", "...", "but", "try", "your", "whole", "house", ",", "not", "just", "the", "bathroom", ",", "kidda"]
(c2-5 / have-concession-91
      :ARG1 (c2-6 / try-01
                  :ARG0 (c2-11 / you)
                  :ARG1 (c2-9 / house
                              :mod (c2-2 / whole)
                              :ARG1-of (c2-1 / contrast-01
                                             :ARG2 (c2-3 / try-01
                                                         :ARG0 c2-11
                                                         :ARG1 (c2-8 / bathroom
                                                                     :mod (c2-7 / just))
                                                         :polarity -
                                                         :mode imperative)))
                  :mode imperative)
      :ARG2 (c2-0 / second-01
                  :ARG0 (c2-10 / i)
                  :ARG1 (c2-4 / that)))
