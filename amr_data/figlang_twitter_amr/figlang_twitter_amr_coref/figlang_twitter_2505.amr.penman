# ::snt this is the thing that everyone need to read . support every group and no more fanwars <URL>
# ::tokens ["this", "is", "the", "thing", "that", "everyone", "need", "to", "read", ".", "support", "every", "group", "and", "no", "more", "fanwars", "<", "URL", ">"]
# ::lemmas ["this", "be", "the", "thing", "that", "everyone", "need", "to", "read", ".", "support", "every", "group", "and", "no", "more", "fanwar", "<", "URL", ">"]
(c1-9 / multi-sentence
      :snt1 (c1-10 / need-01
                   :ARG0 (c1-12 / everyone)
                   :ARG1 (c1-7 / read-01
                               :ARG0 c1-12
                               :ARG1 (c1-6 / thing
                                           :domain (c1-4 / this))))
      :snt2 (c1-0 / support-01
                  :ARG0 (c1-11 / you)
                  :ARG1 (c1-1 / and
                              :op1 (c1-8 / group
                                         :mod (c1-5 / every))
                              :op2 (c1-2 / fanboy
                                         :quant (c1-3 / more)
                                         :polarity -))
                  :mode imperative))

# ::snt or if you don't them at all then don't say at cuz then people might like the group you
# ::tokens ["or", "if", "you", "do", "n't", "them", "at", "all", "then", "do", "n't", "say", "at", "cuz", "then", "people", "might", "like", "the", "group", "you"]
# ::lemmas ["or", "if", "you", "do", "not", "they", "at", "all", "then", "do", "not", "say", "at", "cuz", "then", "people", "might", "like", "the", "group", "you"]
(c2-4 / or
      :op2 (c2-3 / cause-01
                 :ARG0 (c2-9 / possible-01
                             :ARG1 (c2-7 / like-01
                                         :ARG0 (c2-5 / person)
                                         :ARG1 (c2-8 / group
                                                     :ARG1-of (c2-10 / group-01
                                                                     :ARG2 (c2-6 / you)))))
                 :ARG1 (c2-0 / say-01
                             :ARG0 c2-6
                             :condition (c2-1 / do-02
                                              :ARG0 c2-6
                                              :ARG1 c2-10
                                              :degree (c2-2 / at-all)
                                              :polarity -)
                             :polarity -
                             :mode imperative)))
