# ::snt You brought up the jungle . I want a voluntary society . Govt = regressive . More laws = less civilized
# ::tokens ["You", "brought", "up", "the", "jungle", ".", "I", "want", "a", "voluntary", "society", ".", "Govt", "=", "regressive", ".", "More", "laws", "=", "less", "civilized"]
# ::lemmas ["you", "bring", "up", "the", "jungle", ".", "i", "want", "a", "voluntary", "society", ".", "Govt", "=", "regressive", ".", "more", "law", "=", "less", "civilized"]
(c1-15 / multi-sentence
       :snt1 (c1-12 / bring-up-02
                    :ARG0 (c1-16 / you)
                    :ARG1 (c1-13 / jungle))
       :snt2 (c1-4 / want-01
                   :ARG0 (c1-14 / i)
                   :ARG1 (c1-0 / society
                               :ARG1-of (c1-8 / voluntary-02)))
       :snt3 (c1-17 / equal-01
                    :ARG1 (c1-10 / government-organization
                                 :ARG0-of (c1-2 / govern-01))
                    :ARG2 (c1-9 / regressive))
       :snt4 (c1-7 / equal-01
                   :ARG1 (c1-11 / law
                                :quant (c1-3 / more))
                   :ARG2 (c1-5 / civilize-01
                               :ARG2-of (c1-6 / have-degree-91
                                              :ARG1 c1-11
                                              :ARG3 (c1-1 / less)))))

# ::snt the jungle analogy fails . We are rational animals .
# ::tokens ["the", "jungle", "analogy", "fails", ".", "We", "are", "rational", "animals", "."]
# ::lemmas ["the", "jungle", "analogy", "fail", ".", "we", "be", "rational", "animal", "."]
(c2-5 / multi-sentence
      :snt1 (c2-1 / fail-01
                  :ARG1 (c2-0 / analogy
                              :mod (c2-4 / jungle)))
      :snt2 (c2-6 / animal
                  :ARG1-of (c2-3 / rational-02)
                  :domain (c2-2 / we)))

# ::snt The animal in us pushed us to act egocentrically when we can get away with it .
# ::tokens ["The", "animal", "in", "us", "pushed", "us", "to", "act", "egocentrically", "when", "we", "can", "get", "away", "with", "it", "."]
# ::lemmas ["the", "animal", "in", "we", "push", "we", "to", "act", "egocentrically", "when", "we", "can", "get", "away", "with", "it", "."]
(c3-6 / push-01
      :ARG0 (c3-1 / animal
                  :location (c3-3 / we
                                  :ARG1-of c3-6))
      :ARG2 (c3-7 / act-01
                  :ARG0 c3-3
                  :ARG1 (c3-0 / selfish)
                  :time (c3-4 / possible-01
                              :ARG1 (c3-5 / get-away-08
                                          :ARG0 c3-3
                                          :ARG1 (c3-2 / it)))))

# ::snt Which is exactly why no I dont want govt . They are run my megalomaniacs . TY proving my point
# ::tokens ["Which", "is", "exactly", "why", "no", "I", "do", "nt", "want", "govt", ".", "They", "are", "run", "my", "megalomaniacs", ".", "TY", "proving", "my", "point"]
# ::lemmas ["which", "be", "exactly", "why", "no", "i", "do", "not", "want", "govt", ".", "they", "be", "run", "my", "megalomaniac", ".", "ty", "prove", "my", "point"]
(c4-13 / multi-sentence
       :snt1 (c4-1 / cause-01
                   :ARG0 (c4-0 / amr-unknown
                               :mod (c4-16 / exact))
                   :ARG1 (c4-2 / want-01
                               :ARG0 (c4-12 / i)
                               :ARG1 (c4-11 / government-organization
                                            :ARG0-of (c4-15 / govern-01))
                               :polarity -))
       :snt2 (c4-9 / run-01
                   :ARG1 (c4-8 / they)
                   :ARG3 (c4-5 / i)
                   :mod (c4-3 / megalomaniac
                              :mode expressive))
       :snt3 (c4-10 / prove-01
                    :ARG0 (c4-7 / person
                                :name (c4-14 / name
                                             :op1 "ty"))
                    :ARG1 (c4-4 / point-04
                                :ARG0 (c4-6 / i))))

# ::snt Then u want to live in a jungle . Roast a deer there n see the tiger come take it from u
# ::tokens ["Then", "u", "want", "to", "live", "in", "a", "jungle", ".", "Roast", "a", "deer", "there", "n", "see", "the", "tiger", "come", "take", "it", "from", "u"]
# ::lemmas ["then", "u", "want", "to", "live", "in", "a", "jungle", ".", "roast", "a", "deer", "there", "n", "see", "the", "tiger", "come", "take", "it", "from", "u"]
(c5-13 / multi-sentence
       :snt1 (c5-4 / want-01
                   :ARG0 (c5-14 / you)
                   :ARG1 (c5-10 / live-01
                                :ARG0 c5-14
                                :location (c5-11 / jungle))
                   :time (c5-8 / then))
       :snt2 (c5-2 / and
                   :op1 (c5-9 / roast-01
                              :ARG0 (c5-15 / you)
                              :ARG1 (c5-0 / deer)
                              :location (c5-5 / there)
                              :mode imperative)
                   :op2 (c5-1 / see-01
                              :ARG0 c5-15
                              :ARG1 (c5-3 / tiger
                                          :ARG0-of (c5-6 / come-01
                                                         :ARG4 c5-15))
                              :mode imperative)
                   :op3 (c5-7 / take-01
                              :ARG0 c5-15
                              :ARG1 (c5-12 / it)
                              :ARG2 c5-15
                              :mode imperative)))
