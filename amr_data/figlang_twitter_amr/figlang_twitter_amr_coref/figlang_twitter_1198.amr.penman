# ::snt So , what you're agreeing with is : healthcare is a right when it's life or death , right ?
# ::tokens ["So", ",", "what", "you", "'re", "agreeing", "with", "is", ":", "healthcare", "is", "a", "right", "when", "it", "'s", "life", "or", "death", ",", "right", "?"]
# ::lemmas ["so", ",", "what", "you", "be", "agree", "with", "be", ":", "healthcare", "be", "a", "right", "when", "it", "be", "life", "or", "death", ",", "right", "?"]
(c1-1 / agree-01
      :ARG0 (c1-7 / you)
      :ARG1 (c1-5 / right-05
                  :ARG2 (c1-2 / healthcare)
                  :time (c1-4 / or
                              :op1 (c1-6 / live-01)
                              :op2 (c1-0 / die-01)))
      :ARG1-of (c1-3 / request-confirmation-91))

# ::snt I am saying that is what the law is . Do not agree that even in life or death you can force another to do something .
# ::tokens ["I", "am", "saying", "that", "is", "what", "the", "law", "is", ".", "Do", "not", "agree", "that", "even", "in", "life", "or", "death", "you", "can", "force", "another", "to", "do", "something", "."]
# ::lemmas ["i", "be", "say", "that", "be", "what", "the", "law", "be", ".", "do", "not", "agree", "that", "even", "in", "life", "or", "death", "you", "can", "force", "another", "to", "do", "something", "."]
(c2-12 / multi-sentence
       :snt1 (c2-0 / say-01
                   :ARG0 (c2-11 / i)
                   :ARG1 (c2-8 / law
                               :domain (c2-7 / that)))
       :snt2 (c2-3 / agree-01
                   :ARG0 (c2-13 / you)
                   :ARG1 (c2-9 / possible-01
                               :ARG1 (c2-4 / force-01
                                           :ARG0 c2-13
                                           :ARG1 (c2-14 / another)
                                           :ARG2 (c2-1 / do-02
                                                       :ARG0 c2-14
                                                       :ARG1 (c2-10 / something))
                                           :time (c2-6 / or
                                                       :op1 (c2-2 / live-01)
                                                       :op2 (c2-5 / die-01)
                                                       :mod (c2-15 / even))))
                   :polarity -
                   :mode imperative))

# ::snt is not about " forcing " , it's about " paying for " . It would remove a reason to deny treatment , the Dr volunteers B a Dr
# ::tokens ["is", "not", "about", "\"", "forcing", "\"", ",", "it", "'s", "about", "\"", "paying", "for", "\"", ".", "It", "would", "remove", "a", "reason", "to", "deny", "treatment", ",", "the", "Dr", "volunteers", "B", "a", "Dr"]
# ::lemmas ["be", "not", "about", "\"", "force", "\"", ",", "it", "be", "about", "\"", "pay", "for", "\"", ".", "it", "would", "remove", "a", "reason", "to", "deny", "treatment", ",", "the", "Dr", "volunteer", "B", "a", "Dr"]
(c3-17 / multi-sentence
       :snt1 (c3-3 / concern-02
                   :ARG0 (c3-16 / it)
                   :ARG1 (c3-2 / force-01)
                   :polarity -)
       :snt2 (c3-0 / concern-02
                   :ARG0 (c3-7 / it)
                   :ARG1 (c3-15 / pay-01
                                :ARG3 (c3-4 / monetary-quantity
                                            :ARG3-of c3-15)))
       :snt3 (c3-14 / remove-01
                    :ARG0 (c3-8 / it)
                    :ARG1 (c3-9 / reason
                                :ARG0-of (c3-10 / cause-01
                                                :ARG1 (c3-1 / deny-01
                                                            :ARG1 (c3-13 / treat-03)))))
       :snt4 (c3-12 / person
                    :ARG0-of (c3-11 / volunteer-01)
                    :mod (c3-5 / doctor)
                    :mod (c3-6 / doctor)))

# ::snt % of doctors enter into medicine for the money . Ok so " paying for " . Who is responsible for paying for YOUR health ?
# ::tokens ["%", "of", "doctors", "enter", "into", "medicine", "for", "the", "money", ".", "Ok", "so", "\"", "paying", "for", "\"", ".", "Who", "is", "responsible", "for", "paying", "for", "YOUR", "health", "?"]
# ::lemmas ["%", "of", "doctor", "enter", "into", "medicine", "for", "the", "money", ".", "ok", "so", "\"", "pay", "for", "\"", ".", "who", "be", "responsible", "for", "pay", "for", "your", "health", "?"]
(c4-15 / multi-sentence
       :snt1 (c4-17 / enter-01
                    :ARG0 (c4-14 / person
                                 :ARG1-of (c4-3 / include-91
                                                :ARG2 (c4-11 / person
                                                             :ARG0-of (c4-7 / have-org-role-91
                                                                            :ARG2 (c4-0 / doctor)))
                                                :ARG3 (c4-6 / percentage-entity
                                                            :value 90)))
                    :ARG1 (c4-4 / medicine)
                    :purpose (c4-9 / money))
       :snt2 (c4-5 / cause-01
                   :ARG1 (c4-10 / okay-01
                                :ARG1 (c4-8 / pay-01)))
       :snt3 (c4-12 / responsible-03
                    :ARG0 (c4-2 / amr-unknown)
                    :ARG1 (c4-1 / pay-01
                                :ARG3 (c4-13 / health
                                             :poss (c4-16 / you)))))

# ::snt Nice statistic ! Too bad it's % false . We're in it together , our costs are linked , & we can get more less if we pool resources
# ::tokens ["Nice", "statistic", "!", "Too", "bad", "it", "'s", "%", "false", ".", "We", "'re", "in", "it", "together", ",", "our", "costs", "are", "linked", ",", "&", "we", "can", "get", "more", "less", "if", "we", "pool", "resources"]
# ::lemmas ["nice", "statistic", "!", "too", "bad", "it", "be", "%", "false", ".", "we", "be", "in", "it", "together", ",", "our", "cost", "be", "link", ",", "&", "we", "can", "get", "more", "less", "if", "we", "pool", "resource"]
(c5-9 / multi-sentence
      :snt1 (c5-11 / statistic
                   :ARG1-of (c5-10 / nice-01))
      :snt2 (c5-16 / have-degree-91
                   :ARG1 (c5-2 / it)
                   :ARG2 (c5-19 / bad-07
                                :ARG1 c5-2)
                   :ARG3 (c5-6 / too))
      :snt3 (c5-14 / and
                   :op1 (c5-13 / be-located-at-91
                               :ARG1 (c5-4 / we)
                               :ARG2 (c5-12 / it)
                               :mod (c5-5 / together))
                   :op2 (c5-18 / link-01
                               :ARG1 (c5-3 / cost-01
                                           :ARG2 c5-4))
                   :op3 (c5-20 / possible-01
                               :ARG1 (c5-8 / get-01
                                           :ARG0 c5-4
                                           :ARG1 (c5-0 / less
                                                       :ARG1-of (c5-1 / have-quant-91
                                                                      :ARG3 (c5-15 / more))))
                               :condition (c5-17 / pool-01
                                                 :ARG0 c5-4
                                                 :ARG1 (c5-7 / resource)))))

# ::snt and why is that ? That is the problem with your arguments .
# ::tokens ["and", "why", "is", "that", "?", "That", "is", "the", "problem", "with", "your", "arguments", "."]
# ::lemmas ["and", "why", "be", "that", "?", "that", "be", "the", "problem", "with", "your", "argument", "."]
(c6-6 / multi-sentence
      :snt1 (c6-1 / and
                  :op2 (c6-8 / amr-unknown
                             :ARG0-of (c6-2 / cause-01
                                            :ARG1 (c6-4 / that))))
      :snt2 (c6-5 / problem
                  :domain (c6-3 / that)
                  :topic (c6-0 / argue-01
                               :ARG0 (c6-7 / you))))

# ::snt cuz when I don't pay , you pay more . When my ins comp denies coverage & I go on medicare , your taxes pay for it anyway .
# ::tokens ["cuz", "when", "I", "do", "n't", "pay", ",", "you", "pay", "more", ".", "When", "my", "ins", "comp", "denies", "coverage", "&", "I", "go", "on", "medicare", ",", "your", "taxes", "pay", "for", "it", "anyway", "."]
# ::lemmas ["cuz", "when", "i", "do", "not", "pay", ",", "you", "pay", "more", ".", "when", "my", "in", "comp", "deny", "coverage", "&", "i", "go", "on", "medicare", ",", "your", "taxis", "pay", "for", "it", "anyway", "."]
(c7-6 / multi-sentence
      :snt1 (c7-3 / cause-01
                  :ARG0 (c7-18 / pay-01
                               :ARG0 (c7-13 / you)
                               :mod (c7-16 / more)
                               :time (c7-17 / pay-01
                                            :ARG0 (c7-2 / i)
                                            :polarity -)))
      :snt2 (c7-10 / pay-01
                   :ARG0 (c7-14 / you)
                   :ARG3 (c7-15 / and
                                :op1 (c7-0 / deny-01
                                           :ARG0 (c7-1 / comp
                                                       :mod (c7-11 / insure-02)
                                                       :poss (c7-12 / i))
                                           :ARG1 (c7-4 / cover-01))
                                :op2 (c7-5 / go-06
                                           :ARG0 c7-12
                                           :ARG1 (c7-9 / program
                                                       :name (c7-7 / name
                                                                   :op1 "Medicare"))))
                   :mod (c7-8 / anyway)))

# ::snt no that is NOT why . That is one part of why . Keep guessing . Your whole argument is superficial rhetoric your were told to believe .
# ::tokens ["no", "that", "is", "NOT", "why", ".", "That", "is", "one", "part", "of", "why", ".", "Keep", "guessing", ".", "Your", "whole", "argument", "is", "superficial", "rhetoric", "your", "were", "told", "to", "believe", "."]
# ::lemmas ["no", "that", "be", "not", "why", ".", "that", "be", "one", "part", "of", "why", ".", "keep", "guess", ".", "your", "whole", "argument", "be", "superficial", "rhetoric", "your", "be", "tell", "to", "believe", "."]
(c8-12 / multi-sentence
       :snt1 (c8-3 / cause-01
                   :ARG0 (c8-8 / that)
                   :polarity -)
       :snt2 (c8-11 / part
                    :part-of (c8-0 / cause-01)
                    :domain (c8-5 / that)
                    :quant 1)
       :snt3 (c8-13 / keep-02
                    :ARG0 (c8-14 / you)
                    :ARG1 (c8-10 / guess-01
                                 :ARG0 c8-14)
                    :mode imperative)
       :snt4 (c8-9 / rhetoric
                   :mod (c8-1 / superficial)
                   :ARG1-of (c8-7 / believe-01
                                  :ARG0 (c8-15 / you)
                                  :ARG1-of (c8-4 / tell-01
                                                 :ARG2 c8-15))
                   :domain (c8-2 / argue-01
                                 :ARG0 c8-15
                                 :mod (c8-6 / whole))))

# ::snt lol , you're not countering my arguments by simply calling them rhetoric . I'm using logic , you're trying to label it something else
# ::tokens ["lol", ",", "you", "'re", "not", "countering", "my", "arguments", "by", "simply", "calling", "them", "rhetoric", ".", "I", "'m", "using", "logic", ",", "you", "'re", "trying", "to", "label", "it", "something", "else"]
# ::lemmas ["lol", ",", "you", "be", "not", "counter", "my", "argument", "by", "simply", "call", "they", "rhetoric", ".", "i", "be", "use", "logic", ",", "you", "be", "try", "to", "label", "it", "something", "else"]
(c9-9 / multi-sentence
      :snt1 (c9-5 / counter-01
                  :ARG0 (c9-14 / you)
                  :ARG1 (c9-7 / thing
                              :ARG1-of (c9-16 / argue-01
                                              :ARG0 (c9-4 / i)))
                  :manner (c9-0 / call-01
                                :ARG0 c9-14
                                :ARG1 c9-7
                                :ARG2 (c9-8 / rhetoric)
                                :ARG1-of (c9-11 / simple-02))
                  :ARG2-of (c9-19 / laugh-01
                                  :ARG0 (c9-12 / i)
                                  :manner (c9-3 / loud)
                                  :mode expressive)
                  :polarity -)
      :snt2 (c9-17 / use-01
                   :ARG0 (c9-13 / i)
                   :ARG1 (c9-1 / logic))
      :snt3 (c9-6 / try-01
                  :ARG0 (c9-15 / you)
                  :ARG1 (c9-2 / label-01
                              :ARG0 c9-15
                              :ARG1 (c9-18 / it)
                              :ARG2 (c9-20 / something
                                           :mod (c9-10 / else)))))

# ::snt no you are not using logic . If you were you would not be FOR the ACA . You are just regurgitating rhetoric .
# ::tokens ["no", "you", "are", "not", "using", "logic", ".", "If", "you", "were", "you", "would", "not", "be", "FOR", "the", "ACA", ".", "You", "are", "just", "regurgitating", "rhetoric", "."]
# ::lemmas ["no", "you", "be", "not", "use", "logic", ".", "if", "you", "be", "you", "would", "not", "be", "for", "the", "ACA", ".", "you", "be", "just", "regurgitate", "rhetoric", "."]
(c10-10 / multi-sentence
        :snt1 (c10-3 / use-01
                     :ARG0 (c10-12 / you)
                     :ARG1 (c10-6 / logic)
                     :polarity -)
        :snt2 (c10-2 / have-condition-91
                     :ARG1 (c10-0 / support-01
                                  :ARG0 (c10-13 / you)
                                  :ARG1 (c10-7 / law
                                               :name (c10-11 / name
                                                             :op1 "ACA"))
                                  :polarity -)
                     :ARG2 (c10-9 / person
                                  :domain c10-13))
        :snt3 (c10-5 / regurgitate-01
                     :ARG0 (c10-1 / you)
                     :ARG1 (c10-4 / rhetoric)
                     :mod (c10-8 / just)))

# ::snt Who's talking about the ACA ? I'm arguing for a system . ACA not even close to where we should be .
# ::tokens ["Who", "'s", "talking", "about", "the", "ACA", "?", "I", "'m", "arguing", "for", "a", "system", ".", "ACA", "not", "even", "close", "to", "where", "we", "should", "be", "."]
# ::lemmas ["who", "be", "talk", "about", "the", "ACA", "?", "i", "be", "argue", "for", "a", "system", ".", "ACA", "not", "even", "close", "to", "where", "we", "should", "be", "."]
(c11-10 / multi-sentence
        :snt1 (c11-5 / talk-01
                     :ARG0 (c11-1 / amr-unknown)
                     :ARG1 (c11-7 / law
                                  :name (c11-11 / name
                                                :op1 "ACA")))
        :snt2 (c11-12 / argue-02
                      :ARG0 (c11-9 / i)
                      :ARG2 (c11-0 / system))
        :snt3 (c11-2 / close-10
                     :ARG1 c11-7
                     :ARG2 (c11-4 / thing
                                  :ARG2-of (c11-6 / recommend-01
                                                  :ARG1 (c11-8 / be-located-at-91
                                                               :ARG1 (c11-3 / we))))
                     :mod (c11-13 / even)
                     :polarity -))

# ::snt hahaha . Oh you're serious . Now I understand why you don't get a simple request to end the conversation .
# ::tokens ["hahaha", ".", "Oh", "you", "'re", "serious", ".", "Now", "I", "understand", "why", "you", "do", "n't", "get", "a", "simple", "request", "to", "end", "the", "conversation", "."]
# ::lemmas ["hahaha", ".", "oh", "you", "be", "serious", ".", "now", "i", "understand", "why", "you", "do", "not", "get", "a", "simple", "request", "to", "end", "the", "conversation", "."]
(c12-10 / multi-sentence
        :snt1 (c12-0 / serious-01
                     :ARG1 (c12-12 / you)
                     :mod (c12-4 / oh
                                 :mode expressive))
        :snt2 (c12-3 / understand-01
                     :ARG0 (c12-9 / i)
                     :ARG1 (c12-5 / thing
                                  :ARG0-of (c12-2 / cause-01
                                                  :ARG1 (c12-7 / get-01
                                                               :ARG0 (c12-13 / you)
                                                               :ARG1 (c12-6 / request-01
                                                                            :ARG1 (c12-14 / end-01
                                                                                          :ARG0 c12-13
                                                                                          :ARG1 (c12-1 / converse-01))
                                                                            :ARG1-of (c12-8 / simple-02))
                                                               :polarity -)))
                     :time (c12-11 / now)))

# ::snt I care enough to not let points stand uncountered so that when others see , they will get why I'm right and you're wrong .
# ::tokens ["I", "care", "enough", "to", "not", "let", "points", "stand", "uncountered", "so", "that", "when", "others", "see", ",", "they", "will", "get", "why", "I", "'m", "right", "and", "you", "'re", "wrong", "."]
# ::lemmas ["i", "care", "enough", "to", "not", "let", "point", "stand", "uncountered", "so", "that", "when", "other", "see", ",", "they", "will", "get", "why", "i", "be", "right", "and", "you", "be", "wrong", "."]
(c13-3 / care-01
       :ARG0 (c13-14 / i)
       :ARG1-of (c13-5 / have-quant-91
                       :ARG3 (c13-16 / enough)
                       :ARG6 (c13-10 / let-01
                                     :ARG0 c13-14
                                     :ARG1 (c13-0 / stand-04
                                                  :ARG1 (c13-11 / point)
                                                  :ARG2 (c13-6 / uncount-01
                                                               :ARG1 c13-11))
                                     :purpose (c13-12 / get-01
                                                      :ARG0 (c13-7 / other)
                                                      :ARG1 (c13-8 / thing
                                                                   :ARG0-of (c13-1 / cause-01
                                                                                   :ARG1 (c13-2 / and
                                                                                                :op1 (c13-9 / right-06
                                                                                                            :ARG1 c13-14)
                                                                                                :op2 (c13-4 / wrong-04
                                                                                                            :ARG1 (c13-15 / you)))))
                                                      :time (c13-13 / see-01
                                                                    :ARG0 c13-7))
                                     :polarity -)))

# ::snt Didn't you have a family to get to ? Wasn't that your whole reason for running away ? go ahead now . go on .
# ::tokens ["Did", "n't", "you", "have", "a", "family", "to", "get", "to", "?", "Was", "n't", "that", "your", "whole", "reason", "for", "running", "away", "?", "go", "ahead", "now", ".", "go", "on", "."]
# ::lemmas ["do", "not", "you", "have", "a", "family", "to", "get", "to", "?", "be", "not", "that", "your", "whole", "reason", "for", "run", "away", "?", "go", "ahead", "now", ".", "go", "on", "."]
(c14-14 / multi-sentence
        :snt1 (c14-9 / have-03
                     :ARG0 (c14-16 / you)
                     :ARG1 (c14-5 / family)
                     :purpose (c14-13 / get-05
                                      :ARG1 c14-16
                                      :ARG2 c14-5)
                     :polarity (c14-2 / amr-unknown)
                     :polarity -)
        :snt2 (c14-6 / cause-01
                     :polarity (c14-17 / amr-unknown)
                     :ARG0 (c14-11 / that)
                     :ARG1 (c14-12 / run-02
                                   :ARG0 (c14-4 / you)
                                   :direction (c14-0 / away))
                     :mod (c14-7 / whole))
        :snt3 (c14-3 / go-06
                     :ARG0 (c14-1 / you)
                     :ARG2 (c14-10 / ahead)
                     :time (c14-15 / now)
                     :mode imperative)
        :snt4 (c14-8 / go-on-15
                     :ARG0 c14-1
                     :mode imperative))

# ::snt wow so clueless he doesn't even realize he is being mocked . Running away ? Nah . Critical thinking , hit the books now .
# ::tokens ["wow", "so", "clueless", "he", "does", "n't", "even", "realize", "he", "is", "being", "mocked", ".", "Running", "away", "?", "Nah", ".", "Critical", "thinking", ",", "hit", "the", "books", "now", "."]
# ::lemmas ["wow", "so", "clueless", "he", "do", "not", "even", "realize", "he", "be", "be", "mock", ".", "run", "away", "?", "Nah", ".", "critical", "thinking", ",", "hit", "the", "book", "now", "."]
(c15-14 / multi-sentence
        :snt1 (c15-8 / have-degree-91
                     :ARG1 (c15-13 / he)
                     :ARG2 (c15-5 / clueless)
                     :ARG3 (c15-0 / so)
                     :ARG6 (c15-11 / realize-01
                                   :ARG0 c15-13
                                   :ARG1 (c15-6 / mock-01
                                                :ARG1 c15-13)
                                   :mod (c15-17 / even)
                                   :polarity -)
                     :mod (c15-7 / wow
                                 :mode expressive))
        :snt2 (c15-9 / run-02
                     :polarity (c15-3 / amr-unknown)
                     :direction (c15-16 / away)
                     :polarity (c15-1 / amr-unknown))
        :snt3 (c15-2 / hit-01
                     :ARG1 (c15-12 / book)
                     :ARG2 (c15-10 / think-01
                                   :manner (c15-4 / criticism-04))
                     :time (c15-15 / now)))

# ::snt either that , or your mocking has no effect ... Believe what you want , and run away all you want . Nobody's stopping you .
# ::tokens ["either", "that", ",", "or", "your", "mocking", "has", "no", "effect", "...", "Believe", "what", "you", "want", ",", "and", "run", "away", "all", "you", "want", ".", "Nobody", "'s", "stopping", "you", "."]
# ::lemmas ["either", "that", ",", "or", "your", "mocking", "have", "no", "effect", "...", "believe", "what", "you", "want", ",", "and", "run", "you", "all", "you", "want", ".", "nobody", "be", "stop", "you", "."]
(c16-14 / multi-sentence
        :snt1 (c16-3 / affect-01
                     :ARG0 (c16-9 / or
                                  :op1 (c16-11 / that)
                                  :op2 (c16-5 / mock-01
                                              :ARG0 (c16-16 / you)))
                     :polarity -)
        :snt2 (c16-17 / and
                      :op1 (c16-13 / believe-01
                                   :ARG0 (c16-4 / you)
                                   :ARG1 (c16-7 / thing
                                                :ARG1-of (c16-6 / want-01
                                                                :ARG0 c16-4))
                                   :mode imperative)
                      :op2 (c16-12 / run-02
                                   :ARG0 c16-4
                                   :direction (c16-1 / away)
                                   :mod (c16-10 / all
                                                :ARG1-of (c16-8 / want-01
                                                                :ARG0 c16-4))
                                   :mode imperative))
        :snt3 (c16-0 / stop-01
                     :ARG0 (c16-15 / nobody)
                     :ARG1 (c16-2 / you)))
