# ::snt . Because when you ask for an example , and get provided one , and then skip it , you're being dishonest .
# ::tokens [".", "Because", "when", "you", "ask", "for", "an", "example", ",", "and", "get", "provided", "one", ",", "and", "then", "skip", "it", ",", "you", "'re", "being", "dishonest", "."]
# ::lemmas [".", "because", "when", "you", "ask", "for", "an", "example", ",", "and", "get", "provide", "one", ",", "and", "then", "skip", "it", ",", "you", "be", "be", "dishonest", "."]
(c1-2 / cause-01
      :ARG0 (c1-3 / honest-01
                  :ARG0 (c1-6 / you)
                  :time (c1-1 / and
                              :op1 (c1-7 / ask-02
                                         :ARG0 c1-6
                                         :ARG1 (c1-8 / example))
                              :op2 (c1-5 / get-01
                                         :ARG0 c1-6
                                         :ARG1 c1-8)
                              :op3 (c1-0 / skip-01
                                         :ARG0 c1-6
                                         :ARG1 c1-8
                                         :time (c1-4 / then)))
                  :polarity -))

# ::snt plants . I was open about it and even went back and read it . It doesn't change that it still isn't macroevolution .
# ::tokens ["plants", ".", "I", "was", "open", "about", "it", "and", "even", "went", "back", "and", "read", "it", ".", "It", "does", "n't", "change", "that", "it", "still", "is", "n't", "macroevolution", "."]
# ::lemmas ["plant", ".", "i", "be", "open", "about", "it", "and", "even", "go", "back", "and", "read", "it", ".", "it", "do", "not", "change", "that", "it", "still", "be", "not", "macroevolution", "."]
(c2-13 / multi-sentence
       :snt1 (c2-12 / plant)
       :snt2 (c2-1 / and
                   :op1 (c2-9 / open-05
                              :ARG1 (c2-2 / i)
                              :ARG2 (c2-5 / it))
                   :op2 (c2-14 / and
                               :op1 (c2-11 / go-back-19
                                           :ARG1 c2-2)
                               :op2 (c2-10 / read-01
                                           :ARG0 c2-2
                                           :ARG1 (c2-6 / it))
                               :mod (c2-15 / even)))
       :snt3 (c2-3 / change-01
                   :ARG0 (c2-8 / it)
                   :ARG1 (c2-7 / evolution
                               :mod (c2-4 / macro)
                               :domain c2-8
                               :mod (c2-0 / still)
                               :polarity -)
                   :polarity -))

# ::snt . And how is it not macroevolution , and how is it not dishonest for you to skip examples you were provided for what you asked for ?
# ::tokens [".", "And", "how", "is", "it", "not", "macroevolution", ",", "and", "how", "is", "it", "not", "dishonest", "for", "you", "to", "skip", "examples", "you", "were", "provided", "for", "what", "you", "asked", "for", "?"]
# ::lemmas [".", "and", "how", "be", "it", "not", "macroevolution", ",", "and", "how", "be", "it", "not", "dishonest", "for", "you", "to", "skip", "example", "you", "be", "provide", "for", "what", "you", "ask", "for", "?"]
(c3-2 / and
      :op2 (c3-5 / and
                 :op1 (c3-1 / amr-unknown
                            :manner-of (c3-8 / macroevolution
                                             :polarity -))
                 :op2 (c3-10 / amr-unknown
                             :manner-of (c3-4 / honest-01
                                              :ARG0 (c3-9 / you)
                                              :ARG1 (c3-0 / skip-01
                                                          :ARG0 c3-9
                                                          :ARG1 (c3-11 / example
                                                                       :ARG1-of (c3-7 / provide-01
                                                                                      :ARG2 c3-9
                                                                                      :purpose (c3-6 / thing
                                                                                                     :ARG1-of (c3-3 / ask-02
                                                                                                                    :ARG0 c3-9)))))
                                              :polarity -))))

# ::snt topics , it doesn't change the fact that those plant variations were simply genetic defects and not evolution :/
# ::tokens ["topics", ",", "it", "does", "n't", "change", "the", "fact", "that", "those", "plant", "variations", "were", "simply", "genetic", "defects", "and", "not", "evolution", ":/"]
# ::lemmas ["topic", ",", "it", "do", "not", "change", "the", "fact", "that", "those", "plant", "variation", "be", "simply", "genetic", "defect", "and", "not", "evolution", ":/"]
(c4-2 / and
      :op1 (c4-0 / sarcasm)
      :op2 (c4-4 / change-01
                 :ARG0 (c4-10 / it)
                 :ARG1 (c4-3 / fact
                             :domain (c4-11 / and
                                            :op1 (c4-1 / defect
                                                       :mod (c4-8 / gene)
                                                       :mod (c4-9 / simple)
                                                       :domain (c4-5 / vary-01
                                                                     :ARG1 (c4-7 / plant)
                                                                     :mod (c4-6 / that)))
                                            :op2 (c4-12 / evolve-01
                                                        :ARG1 c4-5
                                                        :polarity -)))
                 :polarity -))

# ::snt . Once again , how were they " simply genetic defects and not evolution " ?
# ::tokens [".", "Once", "again", ",", "how", "were", "they", "\"", "simply", "genetic", "defects", "and", "not", "evolution", "\"", "?"]
# ::lemmas [".", "once", "again", ",", "how", "be", "they", "\"", "simply", "genetic", "defect", "and", "not", "evolution", "\"", "?"]
(c5-3 / amr-unknown
      :domain (c5-7 / and
                    :op1 (c5-0 / defect
                               :mod (c5-6 / gene)
                               :ARG1-of (c5-1 / simple-02)
                               :domain (c5-5 / they))
                    :op2 (c5-8 / evolve-01
                               :ARG1 c5-5
                               :polarity -))
      :mod (c5-2 / again
                 :mod (c5-4 / once)))

# ::snt Thats something that happens when non disjunction occurs . It cannot reproduce and is not passed into other generations
# ::tokens ["That", "s", "something", "that", "happens", "when", "non", "disjunction", "occurs", ".", "It", "can", "not", "reproduce", "and", "is", "not", "passed", "into", "other", "generations"]
# ::lemmas ["that", "s", "something", "that", "happen", "when", "non", "disjunction", "occur", ".", "it", "can", "not", "reproduce", "and", "be", "not", "pass", "into", "other", "generation"]
(c6-10 / multi-sentence
       :snt1 (c6-0 / something
                   :domain (c6-6 / that)
                   :time (c6-1 / disjunction
                               :polarity -))
       :snt2 (c6-2 / and
                   :op1 (c6-9 / possible-01
                              :ARG1 (c6-7 / reproduce-01
                                          :ARG1 (c6-3 / it))
                              :polarity -)
                   :op2 (c6-5 / pass-03
                              :ARG1 c6-3
                              :ARG2 (c6-8 / generation
                                          :mod (c6-4 / other))
                              :polarity -)))

# ::snt Where does it say that the new plant can't reproduce ? I know lying is normal for creationists , but at least attempt not to ...
# ::tokens ["Where", "does", "it", "say", "that", "the", "new", "plant", "ca", "n't", "reproduce", "?", "I", "know", "lying", "is", "normal", "for", "creationists", ",", "but", "at", "least", "attempt", "not", "to", "..."]
# ::lemmas ["where", "do", "it", "say", "that", "the", "new", "plant", "can", "not", "reproduce", "?", "i", "know", "lie", "be", "normal", "for", "creationist", ",", "but", "at", "least", "attempt", "not", "to", "..."]
(c7-14 / multi-sentence
       :snt1 (c7-0 / say-01
                   :ARG0 (c7-13 / it)
                   :ARG1 (c7-10 / possible-01
                                :ARG1 (c7-9 / reproduce-01
                                            :ARG0 (c7-8 / plant
                                                        :ARG1-of (c7-15 / new-01)))
                                :polarity -)
                   :location (c7-3 / amr-unknown))
       :snt2 (c7-6 / contrast-01
                   :ARG1 (c7-4 / know-01
                               :ARG0 (c7-7 / i)
                               :ARG1 (c7-11 / normal-02
                                            :ARG1 (c7-12 / lie-08
                                                         :ARG0 (c7-1 / creationist
                                                                     :ARG2-of c7-11))))
                   :ARG2 (c7-16 / attempt-01
                                :ARG0 c7-1
                                :ARG1 (c7-2 / lie-08
                                            :ARG0 c7-1
                                            :polarity -)
                                :mod (c7-5 / at-least))))

# ::snt That " common knowledge " isn't , and is in fact completely wrong . <URL>
# ::tokens ["That", "\"", "common", "knowledge", "\"", "is", "n't", ",", "and", "is", "in", "fact", "completely", "wrong", ".", "<", "URL", ">"]
# ::lemmas ["that", "\"", "common", "knowledge", "\"", "be", "not", ",", "and", "be", "in", "fact", "completely", "wrong", ".", "<", "URL", ">"]
(c8-1 / and
      :op1 (c8-3 / wrong-04
                 :ARG1 (c8-4 / thing
                             :ARG1-of (c8-6 / know-01)
                             :mod (c8-2 / common))
                 :polarity -)
      :op2 (c8-7 / wrong-04
                 :ARG1 c8-4
                 :ARG1-of (c8-0 / complete-02)
                 :mod (c8-5 / in-fact)))

# ::snt Can you DM me so we don't have a character limit
# ::tokens ["Can", "you", "DM", "me", "so", "we", "do", "n't", "have", "a", "character", "limit"]
# ::lemmas ["can", "you", "dm", "i", "so", "we", "do", "not", "have", "a", "character", "limit"]
(c9-7 / possible-01
      :ARG1 (c9-0 / DM-01
                  :ARG0 (c9-8 / you)
                  :ARG1 (c9-3 / i))
      :ARG1-of (c9-2 / cause-01
                     :ARG0 (c9-5 / have-03
                                 :ARG0 (c9-4 / we)
                                 :ARG1 (c9-6 / limit-01
                                             :ARG1 (c9-1 / character))
                                 :polarity -)))

# ::snt Your bio says , " I call out people who deserve it . " I guess you don't appreciate it when it happens to you ?
# ::tokens ["Your", "bio", "says", ",", "\"", "I", "call", "out", "people", "who", "deserve", "it", ".", "\"", "I", "guess", "you", "do", "n't", "appreciate", "it", "when", "it", "happens", "to", "you", "?"]
# ::lemmas ["your", "bio", "say", ",", "\"", "i", "call", "out", "people", "who", "deserve", "it", ".", "\"", "i", "guess", "you", "do", "not", "appreciate", "it", "when", "it", "happen", "to", "you", "?"]
(c10-12 / multi-sentence
        :snt1 (c10-0 / say-01
                     :ARG0 (c10-10 / bio
                                   :poss (c10-13 / you))
                     :ARG1 (c10-3 / call-out-15
                                  :ARG0 (c10-11 / i)
                                  :ARG1 (c10-8 / person
                                               :ARG0-of (c10-1 / deserve-01
                                                               :ARG1 (c10-4 / it)))))
        :snt2 (c10-9 / guess-01
                     :ARG0 (c10-5 / i)
                     :ARG1 (c10-2 / appreciate-02
                                  :ARG0 (c10-14 / you)
                                  :ARG1 (c10-6 / it)
                                  :time (c10-15 / event
                                                :mod c10-14)
                                  :polarity (c10-7 / amr-unknown)
                                  :polarity -)))

# ::snt Can we DM so we can talk more freely
# ::tokens ["Can", "we", "DM", "so", "we", "can", "talk", "more", "freely"]
# ::lemmas ["can", "we", "dm", "so", "we", "can", "talk", "more", "freely"]
(c11-6 / possible-01
       :ARG1 (c11-0 / DM-01
                    :ARG0 (c11-2 / we)
                    :purpose (c11-4 / possible-01
                                    :ARG1 (c11-5 / talk-01
                                                 :ARG0 c11-2
                                                 :ARG1-of (c11-1 / free-04
                                                                 :ARG2-of (c11-3 / have-degree-91
                                                                                 :ARG1 c11-5
                                                                                 :ARG3 (c11-7 / more)))))))

# ::snt . Nope . Are you going to be honest for a change and admit your numerous lies and total ignorance of science here ?
# ::tokens [".", "Nope", ".", "Are", "you", "going", "to", "be", "honest", "for", "a", "change", "and", "admit", "your", "numerous", "lies", "and", "total", "ignorance", "of", "science", "here", "?"]
# ::lemmas [".", "nope", ".", "be", "you", "go", "to", "be", "honest", "for", "a", "change", "and", "admit", "your", "numerous", "lie", "and", "total", "ignorance", "of", "science", "here", "?"]
(c12-12 / multi-sentence
        :snt1 (c12-13 / nope)
        :snt2 (c12-2 / and
                     :op1 (c12-5 / honest-01
                                 :ARG0 (c12-14 / you)
                                 :mod (c12-3 / for-a-change))
                     :op2 (c12-15 / admit-01
                                  :ARG0 c12-14
                                  :ARG1 (c12-1 / and
                                               :op1 (c12-7 / thing
                                                           :ARG1-of (c12-9 / lie-08
                                                                           :ARG0 c12-14)
                                                           :quant (c12-8 / numerous))
                                               :op2 (c12-11 / ignorance
                                                            :topic (c12-0 / science)
                                                            :degree (c12-4 / total)
                                                            :poss c12-14)))
                     :location (c12-10 / here)
                     :polarity (c12-6 / amr-unknown)))

# ::snt I haven't lied onceeeeee a lie has to be intentional or else it is just a mistake
# ::tokens ["I", "have", "n't", "lied", "onceeeeee", "a", "lie", "has", "to", "be", "intentional", "or", "else", "it", "is", "just", "a", "mistake"]
# ::lemmas ["i", "have", "not", "lie", "onceeeeee", "a", "lie", "have", "to", "be", "intentional", "or", "else", "it", "be", "just", "a", "mistake"]
(c13-1 / and
       :op1 (c13-5 / lie-08
                   :ARG0 (c13-8 / i)
                   :time (c13-4 / once)
                   :polarity -)
       :op2 (c13-3 / or
                   :op1 (c13-0 / obligate-01
                               :ARG2 (c13-2 / intend-01
                                            :ARG1 (c13-6 / lie-08)))
                   :op2 (c13-9 / mistake-02
                               :ARG1 c13-6
                               :mod (c13-7 / just)
                               :condition c13-2)))

# ::snt . When you do something intentional , it is intentional ... You repeated that tetraploidy plants can't reproduce , knowing they can .
# ::tokens [".", "When", "you", "do", "something", "intentional", ",", "it", "is", "intentional", "...", "You", "repeated", "that", "tetraploidy", "plants", "ca", "n't", "reproduce", ",", "knowing", "they", "can", "."]
# ::lemmas [".", "when", "you", "do", "something", "intentional", ",", "it", "be", "intentional", "...", "you", "repeat", "that", "tetraploidy", "plant", "can", "not", "reproduce", ",", "know", "they", "can", "."]
(c14-10 / multi-sentence
        :snt1 (c14-9 / intend-01
                     :ARG1 (c14-0 / do-02
                                  :ARG0 (c14-12 / you)
                                  :ARG1 (c14-1 / something)))
        :snt2 (c14-7 / repeat-01
                     :ARG0 (c14-13 / you)
                     :ARG1 (c14-8 / possible-01
                                  :ARG1 (c14-4 / reproduce-01
                                               :ARG0 (c14-5 / plant
                                                            :mod (c14-6 / tetraploidy)))
                                  :polarity -)
                     :ARG1-of (c14-2 / cause-01
                                     :ARG0 (c14-11 / know-01
                                                   :ARG0 c14-13
                                                   :ARG1 (c14-3 / possible-01
                                                                :ARG1 c14-4)))))

# ::snt I did not know until you showed me
# ::tokens ["I", "did", "not", "know", "until", "you", "showed", "me"]
# ::lemmas ["i", "do", "not", "know", "until", "you", "show", "i"]
(c15-3 / know-01
       :ARG0 (c15-2 / i)
       :time (c15-1 / until
                    :op1 (c15-0 / show-01
                                :ARG0 (c15-4 / you)
                                :ARG1 c15-2))
       :polarity -)

# ::snt And once you were shown , you still repeated the lie that they can't reproduce . Thus , intentional , and lying .
# ::tokens ["And", "once", "you", "were", "shown", ",", "you", "still", "repeated", "the", "lie", "that", "they", "ca", "n't", "reproduce", ".", "Thus", ",", "intentional", ",", "and", "lying", "."]
# ::lemmas ["and", "once", "you", "be", "show", ",", "you", "still", "repeat", "the", "lie", "that", "they", "can", "not", "reproduce", ".", "thus", ",", "intentional", ",", "and", "lie", "."]
(c16-11 / multi-sentence
        :snt1 (c16-1 / and
                     :op2 (c16-6 / repeat-01
                                 :ARG0 (c16-12 / you)
                                 :ARG1 (c16-7 / lie-08
                                              :ARG1 (c16-10 / possible-01
                                                            :ARG1 (c16-4 / reproduce-01
                                                                         :ARG0 (c16-5 / they))
                                                            :polarity -))
                                 :time (c16-0 / show-01
                                              :ARG1 c16-12)
                                 :mod (c16-9 / still)))
        :snt2 (c16-2 / infer-01
                     :ARG1 (c16-13 / and
                                   :op1 (c16-3 / intend-01)
                                   :op2 (c16-8 / lie-08))))

# ::snt Always makes me chuckle when happyclappers demand evidence when their whole charade is based on unquestionable faith
# ::tokens ["Always", "makes", "me", "chuckle", "when", "happyclappers", "demand", "evidence", "when", "their", "whole", "charade", "is", "based", "on", "unquestionable", "faith"]
# ::lemmas ["always", "make", "i", "chuckle", "when", "happyclapper", "demand", "evidence", "when", "their", "whole", "charade", "be", "base", "on", "unquestionable", "faith"]
(c17-12 / make-02
        :ARG0 (c17-0 / demand-01
                     :ARG0 (c17-11 / person
                                   :ARG0-of (c17-1 / snap-04)
                                   :ARG1-of (c17-9 / happy-01))
                     :ARG1 (c17-13 / evidence-01)
                     :time (c17-10 / base-02
                                   :ARG1 (c17-5 / charade
                                                :poss c17-11
                                                :mod (c17-6 / whole))
                                   :ARG2 (c17-4 / faith
                                                :ARG1-of (c17-7 / question-03
                                                                :polarity -))))
        :ARG1 (c17-2 / chuckle-01
                     :ARG0 (c17-8 / i))
        :time (c17-3 / always))

# ::snt He never once gave me a chance to explain any of the evidence i tried to present
# ::tokens ["He", "never", "once", "gave", "me", "a", "chance", "to", "explain", "any", "of", "the", "evidence", "i", "tried", "to", "present"]
# ::lemmas ["he", "never", "once", "give", "i", "a", "chance", "to", "explain", "any", "of", "the", "evidence", "i", "try", "to", "present"]
(c18-7 / give-01
       :ARG0 (c18-2 / he)
       :ARG1 (c18-1 / chance-02
                    :ARG0 (c18-8 / i)
                    :ARG1 (c18-9 / explain-01
                                 :ARG0 c18-8
                                 :ARG1 (c18-3 / evidence-01
                                              :mod (c18-0 / any)
                                              :ARG1-of (c18-6 / present-01
                                                              :ARG0 c18-8
                                                              :ARG1-of (c18-5 / try-01
                                                                              :ARG0 c18-8)))))
       :ARG2 c18-8
       :time (c18-4 / ever)
       :polarity -)
