# ::snt WHEN YOU CLOSE YOUR EYES TELL ME WHAT ARE YOU DREAMIN ?
# ::tokens ["WHEN", "YOU", "CLOSE", "YOUR", "EYES", "TELL", "ME", "WHAT", "ARE", "YOU", "DREAMIN", "?"]
# ::lemmas ["when", "you", "close", "your", "eyes", "tell", "i", "what", "be", "you", "dreamin", "?"]
(c1-0 / dream-01
      :ARG0 (c1-4 / you
                  :part (c1-5 / eye))
      :ARG1 (c1-2 / amr-unknown)
      :ARG1-of (c1-3 / cause-01
                     :ARG0 (c1-1 / close-01
                                 :ARG0 c1-4
                                 :ARG1 c1-5)))

# ::snt I d spend ten thousand hours and ten thousand more
# ::tokens ["I", "d", "spend", "ten", "thousand", "hours", "and", "ten", "thousand", "more"]
# ::lemmas ["i", "d", "spend", "ten", "thousand", "hours", "and", "ten", "thousand", "more"]
(c2-0 / spend-01
      :ARG0 (c2-5 / i)
      :ARG3 (c2-1 / and
                  :op1 (c2-4 / temporal-quantity
                             :unit (c2-3 / hour)
                             :quant 10000)
                  :op2 (c2-2 / temporal-quantity
                             :unit (c2-6 / more)
                             :quant 10000)))

# ::snt IF THATS WHAT IT TAKESSSS TO LEARN THAT SWEET HEART OF YOURSSS
# ::tokens ["IF", "THATS", "WHAT", "IT", "TAKESSSS", "TO", "LEARN", "THAT", "SWEET", "HEART", "OF", "YOURSSS"]
# ::lemmas ["if", "THATS", "what", "it", "takessss", "to", "learn", "that", "sweet", "heart", "of", "YOURSSS"]
(c3-2 / have-condition-91
      :ARG2 (c3-3 / take-10
                  :ARG0 (c3-6 / it)
                  :ARG1 (c3-1 / that)
                  :ARG2 (c3-4 / prove-01
                              :ARG0 c3-6
                              :ARG1 (c3-0 / strong-02
                                          :ARG1 (c3-5 / heart
                                                      :part-of (c3-7 / you))))))

# ::snt OH I MIGHT NEVER GET THERE BUT IM GONNA TRY
# ::tokens ["OH", "I", "MIGHT", "NEVER", "GET", "THERE", "BUT", "IM", "GONNA", "TRY"]
# ::lemmas ["oh", "i", "might", "never", "get", "there", "but", "IM", "GONNA", "TRY"]
(c4-1 / contrast-01
      :ARG1 (c4-6 / possible-01
                  :ARG1 (c4-5 / get-05
                              :ARG1 (c4-0 / i)
                              :ARG2 (c4-4 / there)
                              :time (c4-7 / ever)
                              :polarity -)
                  :mod (c4-3 / oh
                             :mode expressive))
      :ARG2 (c4-2 / try-01
                  :ARG0 c4-0))
