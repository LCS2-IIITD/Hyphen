# ::snt Turned away at pm Queen Street Mall BNE when closing is pm . Very disappointing for a long time customer
# ::tokens ["Turned", "away", "at", "pm", "Queen", "Street", "Mall", "BNE", "when", "closing", "is", "pm", ".", "Very", "disappointing", "for", "a", "long", "time", "customer"]
# ::lemmas ["turn", "away", "at", "pm", "Queen", "Street", "Mall", "BNE", "when", "closing", "be", "pm", ".", "very", "disappointing", "for", "a", "long", "time", "customer"]
(c1-10 / multi-sentence
       :snt1 (c1-6 / turn-away-04
                   :time (c1-0 / date-entity
                               :time " pm")
                   :location (c1-1 / street
                                   :name (c1-11 / name
                                                :op1 "Queen"
                                                :op2 "Street"
                                                :op3 "Mall")
                                   :location (c1-3 / city-district
                                                   :name (c1-7 / name
                                                               :op1 "BNE")))
                   :time (c1-2 / close-01
                               :ARG1 c1-1))
       :snt2 (c1-9 / disappoint-01
                   :ARG0 (c1-4 / customer
                               :ARG1-of (c1-8 / long-03))
                   :degree (c1-5 / very)))

# ::snt I was turned away m before close at the Queen St store RUDE !
# ::tokens ["I", "was", "turned", "away", "m", "before", "close", "at", "the", "Queen", "St", "store", "RUDE", "!"]
# ::lemmas ["i", "be", "turn", "away", "m", "before", "close", "at", "the", "Queen", "St", "store", "RUDE", "!"]
(c2-2 / turn-away-04
      :ARG1 (c2-5 / i)
      :time (c2-4 / before
                  :op1 (c2-1 / close-01
                             :ARG1 c2-5))
      :location (c2-0 / store
                      :name (c2-6 / name
                                  :op1 "Queen"
                                  :op2 "St"))
      :mod (c2-3 / RUDE))

# ::snt Hi Cliff , I do apologise that this was a poor experience . What was it that you were after and I can do my best to assist ? - G
# ::tokens ["Hi", "Cliff", ",", "I", "do", "apologise", "that", "this", "was", "a", "poor", "experience", ".", "What", "was", "it", "that", "you", "were", "after", "and", "I", "can", "do", "my", "best", "to", "assist", "?", "-", "G"]
# ::lemmas ["hi", "Cliff", ",", "i", "do", "apologise", "that", "this", "be", "a", "poor", "experience", ".", "what", "be", "it", "that", "you", "be", "after", "and", "i", "can", "do", "my", "good", "to", "assist", "?", "-", "g"]
(c3-8 / multi-sentence
      :snt1 (c3-12 / say-01
                   :ARG0 (c3-4 / i)
                   :ARG1 (c3-16 / and
                                :op1 (c3-18 / hi)
                                :op2 (c3-10 / apologize-01
                                            :ARG0 c3-4
                                            :ARG1 (c3-11 / experience-01
                                                         :mod (c3-21 / poor)
                                                         :domain (c3-6 / this))))
                   :ARG2 (c3-19 / person
                                :name (c3-9 / name
                                            :op1 "Cliff")))
      :snt2 (c3-1 / and
                  :op1 (c3-22 / amr-unknown
                              :ARG0-of (c3-5 / cause-01
                                             :ARG1 (c3-20 / be-located-at-91
                                                          :ARG1 (c3-15 / you))))
                  :op2 (c3-13 / possible-01
                              :ARG1 (c3-0 / do-02
                                          :ARG0 (c3-14 / i)
                                          :ARG1 (c3-3 / have-degree-91
                                                      :ARG1 c3-14
                                                      :ARG2 (c3-7 / good-03
                                                                  :ARG1 c3-14
                                                                  :ARG2 (c3-2 / assist-01
                                                                              :ARG0 c3-14))
                                                      :ARG3 (c3-17 / most))))))

# ::snt No Thanks . The great people at Carindale helped me . I'm so hoping I can get a great deal when I upgrade my plan on /11 ...
# ::tokens ["No", "Thanks", ".", "The", "great", "people", "at", "Carindale", "helped", "me", ".", "I", "'m", "so", "hoping", "I", "can", "get", "a", "great", "deal", "when", "I", "upgrade", "my", "plan", "on", "/11", "..."]
# ::lemmas ["no", "thank", ".", "the", "great", "people", "at", "Carindale", "help", "i", ".", "i", "be", "so", "hope", "i", "can", "get", "a", "great", "deal", "when", "i", "upgrade", "my", "plan", "on", "/11", "..."]
(c4-15 / multi-sentence
       :snt1 (c4-16 / no)
       :snt2 (c4-7 / help-01
                   :ARG0 (c4-14 / person
                                :mod (c4-12 / great)
                                :location (c4-3 / city
                                                :name (c4-11 / name
                                                             :op1 "Carindale")))
                   :ARG1 (c4-4 / i))
       :snt3 (c4-13 / hope-01
                    :ARG0 (c4-8 / i)
                    :ARG1 (c4-10 / possible-01
                                 :ARG1 (c4-17 / get-01
                                              :ARG0 c4-8
                                              :ARG1 (c4-0 / deal
                                                          :mod (c4-2 / great))
                                              :time (c4-9 / upgrade-02
                                                          :ARG0 c4-8
                                                          :ARG1 (c4-6 / plan-01
                                                                      :ARG0 c4-8)
                                                          :time (c4-5 / date-entity
                                                                      :month 11))))
                    :degree (c4-1 / so)))

# ::snt Glad to hear the staff at Carindale were able to assist . Let us know if we can do anything for you in future . - Georgie
# ::tokens ["Glad", "to", "hear", "the", "staff", "at", "Carindale", "were", "able", "to", "assist", ".", "Let", "us", "know", "if", "we", "can", "do", "anything", "for", "you", "in", "future", ".", "-", "Georgie"]
# ::lemmas ["Glad", "to", "hear", "the", "staff", "at", "Carindale", "be", "able", "to", "assist", ".", "let", "we", "know", "if", "we", "can", "do", "anything", "for", "you", "in", "future", ".", "-", "georgie"]
(c5-6 / multi-sentence
      :snt1 (c5-5 / glad-02
                  :ARG0 (c5-15 / hear-01
                               :ARG0 (c5-2 / i)
                               :ARG1 (c5-18 / possible-01
                                            :ARG1 (c5-13 / assist-01
                                                         :ARG0 (c5-9 / staff
                                                                     :location (c5-3 / city
                                                                                     :name (c5-7 / name
                                                                                                 :op1 "Carindale"))))))
                  :ARG1 c5-2)
      :snt2 (c5-17 / let-know-07
                   :ARG0 (c5-11 / you)
                   :ARG1 (c5-4 / we)
                   :ARG2 (c5-16 / possible-01
                                :ARG1 (c5-0 / do-02
                                            :ARG0 c5-4
                                            :ARG1 (c5-8 / anything)
                                            :ARG2 (c5-12 / you)
                                            :time (c5-14 / future)))
                   :mode imperative)
      :snt3 (c5-10 / person
                   :name (c5-1 / name
                               :op1 "Georgie")))
