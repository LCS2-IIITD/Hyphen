# ::snt arrived today for Coco ! Hopefully now she will sleep in her own bed tonight ! ! ! <URL>
# ::tokens ["arrived", "today", "for", "Coco", "!", "Hopefully", "now", "she", "will", "sleep", "in", "her", "own", "bed", "tonight", "!", "!", "!", "<", "URL", ">"]
# ::lemmas ["arrive", "today", "for", "Coco", "!", "hopefully", "now", "she", "will", "sleep", "in", "her", "own", "bed", "tonight", "!", "!", "!", "<", "URL", ">"]
(c1-9 / multi-sentence
      :snt1 (c1-2 / arrive-01
                  :ARG1 (c1-8 / person
                              :name (c1-10 / name
                                           :op1 "Coco"))
                  :time (c1-5 / today))
      :snt2 (c1-3 / hope-01
                  :ARG1 (c1-0 / sleep-01
                              :ARG0 c1-8
                              :location (c1-7 / bed
                                              :poss c1-8)
                              :time (c1-1 / date-entity
                                          :dayperiod (c1-6 / night)
                                          :mod c1-5))
                  :time (c1-4 / now)))

# ::snt couldn't you have just made something on your own and call it monster spray ?
# ::tokens ["could", "n't", "you", "have", "just", "made", "something", "on", "your", "own", "and", "call", "it", "monster", "spray", "?"]
# ::lemmas ["could", "not", "you", "have", "just", "make", "something", "on", "your", "own", "and", "call", "it", "monster", "spray", "?"]
(c2-8 / possible-01
      :ARG1 (c2-2 / and
                  :op1 (c2-9 / make-01
                             :ARG0 (c2-10 / you)
                             :ARG1 (c2-0 / something)
                             :mod (c2-6 / by-oneself)
                             :mod (c2-7 / just))
                  :op2 (c2-3 / call-01
                             :ARG0 c2-10
                             :ARG1 c2-0
                             :ARG2 (c2-1 / spray-01
                                         :ARG2 (c2-4 / monster))))
      :ARG1-of (c2-5 / request-confirmation-91)
      :polarity -)

# ::snt cause shes rich and doesnt need to do peasant work
# ::tokens ["cause", "she", "s", "rich", "and", "does", "nt", "need", "to", "do", "peasant", "work"]
# ::lemmas ["cause", "she", "s", "rich", "and", "do", "not", "need", "to", "do", "peasant", "work"]
(c3-2 / cause-01
      :ARG0 (c3-1 / and
                  :op1 (c3-4 / rich
                             :domain (c3-0 / she))
                  :op2 (c3-6 / need-01
                             :ARG0 c3-0
                             :ARG1 (c3-3 / work-01
                                         :ARG0 c3-0
                                         :ARG2 (c3-5 / peasant))
                             :polarity -)))
