# ::snt see its weird cause " progressives " have range--u all think identically
# ::tokens ["see", "its", "weird", "cause", "\"", "progressives", "\"", "have", "range", "--", "u", "all", "think", "identically"]
# ::lemmas ["see", "its", "weird", "cause", "\"", "progressive", "\"", "have", "range", "--", "u", "all", "think", "identically"]
(c1-10 / multi-sentence
       :snt1 (c1-0 / see-01
                   :ARG0 (c1-11 / you)
                   :ARG1 (c1-3 / weird
                               :domain (c1-2 / cause-01
                                             :ARG0 (c1-5 / have-03
                                                         :ARG0 (c1-9 / person
                                                                     :ARG1-of (c1-6 / progressive-02))
                                                         :ARG1 (c1-8 / range-01)))))
       :snt2 (c1-7 / think-01
                   :ARG0 (c1-12 / you
                                :mod (c1-1 / all))
                   :manner (c1-4 / identical-01)))

# ::snt Yes , they have a lot of range ... between their <URL>
# ::tokens ["Yes", ",", "they", "have", "a", "lot", "of", "range", "...", "between", "their", "<", "URL", ">"]
# ::lemmas ["yes", ",", "they", "have", "a", "lot", "of", "range", "...", "between", "their", "<", "URL", ">"]
(c2-0 / have-03
      :ARG0 (c2-2 / they)
      :ARG1 (c2-3 / range-01
                  :ARG2 (c2-1 / url-entity
                              :value "https://www.christianforums.com")
                  :ARG3 (c2-4 / lot)))

# ::snt pls use your extreme , unbiased logic to argue how those points are wrong
# ::tokens ["pls", "use", "your", "extreme", ",", "unbiased", "logic", "to", "argue", "how", "those", "points", "are", "wrong"]
# ::lemmas ["pls", "use", "your", "extreme", ",", "unbiased", "logic", "to", "argue", "how", "those", "point", "be", "wrong"]
(c3-3 / use-01
      :ARG0 (c3-1 / we)
      :ARG1 (c3-5 / logic
                  :poss (c3-8 / you)
                  :mod (c3-10 / extreme)
                  :ARG1-of (c3-6 / bias-01
                                 :polarity -))
      :ARG2 (c3-0 / argue-01
                  :ARG0 c3-1
                  :ARG1 (c3-4 / thing
                              :manner-of (c3-9 / wrong-04
                                               :ARG1 (c3-7 / point-04
                                                           :mod (c3-2 / that))))))

# ::snt You haven't made any points . Now go away , I ' <URL>
# ::tokens ["You", "have", "n't", "made", "any", "points", ".", "Now", "go", "away", ",", "I", "'", "<", "URL", ">"]
# ::lemmas ["you", "have", "not", "make", "any", "point", ".", "now", "go", "away", ",", "i", "'", "<", "URL", ">"]
(c4-3 / multi-sentence
      :snt1 (c4-2 / point-04
                  :ARG0 (c4-5 / you)
                  :mod (c4-0 / any)
                  :polarity -)
      :snt2 (c4-1 / go-02
                  :ARG0 c4-5
                  :mode imperative)
      :ARG4 (c4-6 / away)
      :time (c4-4 / now))

# ::snt ahhhh , youre not gonna take up that civil challenge for counters ? Classic
# ::tokens ["ahhhh", ",", "you", "re", "not", "gon", "na", "take", "up", "that", "civil", "challenge", "for", "counters", "?", "Classic"]
# ::lemmas ["ahhhh", ",", "you", "re", "not", "going", "to", "take", "up", "that", "civil", "challenge", "for", "counter", "?", "classic"]
(c5-5 / take-up-31
      :ARG0 (c5-7 / you)
      :ARG1 (c5-2 / challenge-01
                  :mod (c5-0 / civil)
                  :mod (c5-3 / that))
      :ARG3 (c5-4 / counter)
      :ARG1-of (c5-6 / request-confirmation-91)
      :mod (c5-1 / ah
                 :mode expressive)
      :polarity -)

# ::snt If you're so well versed you should know both <URL>
# ::tokens ["If", "you", "'re", "so", "well", "versed", "you", "should", "know", "both", "<", "URL", ">"]
# ::lemmas ["if", "you", "be", "so", "well", "verse", "you", "should", "know", "both", "<", "URL", ">"]
(c6-2 / have-condition-91
      :ARG1 (c6-4 / recommend-01
                  :ARG1 (c6-6 / know-01
                              :ARG0 (c6-7 / you)
                              :ARG1 (c6-5 / both)))
      :ARG2 (c6-3 / verse-01
                  :ARG1 c6-7
                  :ARG1-of (c6-1 / well-09
                                 :degree (c6-0 / so))))
