# ::snt Maybe the pro-EU party that gave us the EU-ref in .
# ::tokens ["Maybe", "the", "pro", "-", "EU", "party", "that", "gave", "us", "the", "EU", "-", "ref", "in", "."]
# ::lemmas ["maybe", "the", "pro", "-", "EU", "party", "that", "give", "we", "the", "EU", "-", "ref", "in", "."]
(c1-6 / possible-01
      :ARG1 (c1-3 / party
                  :ARG0-of (c1-0 / favor-01
                                 :ARG1 (c1-2 / organization
                                             :name (c1-7 / name
                                                         :op1 "EU")))
                  :ARG0-of (c1-5 / give-01
                                 :ARG1 (c1-4 / ref
                                             :mod c1-2)
                                 :ARG2 (c1-1 / we))))

# ::snt Even if we won indy on basis of not being in EU , that could be changed later
# ::tokens ["Even", "if", "we", "won", "indy", "on", "basis", "of", "not", "being", "in", "EU", ",", "that", "could", "be", "changed", "later"]
# ::lemmas ["even", "if", "we", "win", "indy", "on", "basis", "of", "not", "be", "in", "EU", ",", "that", "could", "be", "change", "later"]
(c2-7 / possible-01
      :ARG1 (c2-2 / change-01
                  :ARG1 (c2-5 / that)
                  :time (c2-1 / after
                              :op1 (c2-3 / win-01
                                         :ARG0 (c2-9 / we)
                                         :ARG1-of (c2-6 / base-02
                                                        :ARG2 (c2-0 / be-located-at-91
                                                                    :ARG1 c2-9
                                                                    :ARG2 (c2-4 / organization
                                                                                :name (c2-8 / name
                                                                                            :op1 "EU"))
                                                                    :polarity -)))))
      :concession (c2-10 / even-if
                         :op1 c2-3))

# ::snt Indy outside UK and EU would be true Indy .
# ::tokens ["Indy", "outside", "UK", "and", "EU", "would", "be", "true", "Indy", "."]
# ::lemmas ["Indy", "outside", "UK", "and", "EU", "would", "be", "true", "Indy", "."]
(c3-6 / true-01
      :ARG1 (c3-2 / city
                  :name (c3-8 / name
                              :op1 "Indy")
                  :location (c3-4 / outside
                                  :op1 (c3-1 / and
                                             :op1 (c3-0 / country
                                                        :name (c3-7 / name
                                                                    :op1 "UK"))
                                             :op2 (c3-3 / organization
                                                        :name (c3-5 / name
                                                                    :op1 "EU"))))))

# ::snt If u truly believe that , what authority is higher than an EU nation ?
# ::tokens ["If", "u", "truly", "believe", "that", ",", "what", "authority", "is", "higher", "than", "an", "EU", "nation", "?"]
# ::lemmas ["if", "u", "truly", "believe", "that", ",", "what", "authority", "be", "high", "than", "an", "EU", "nation", "?"]
(c4-2 / have-degree-91
      :ARG1 (c4-0 / authority
                  :mod (c4-11 / amr-unknown))
      :ARG2 (c4-7 / high-02)
      :ARG3 (c4-8 / more)
      :ARG4 (c4-9 / nation
                  :mod (c4-3 / organization
                             :name (c4-5 / name
                                         :op1 "EU")))
      :condition (c4-6 / believe-01
                       :ARG0 (c4-10 / you)
                       :ARG1 (c4-4 / that)
                       :ARG1-of (c4-1 / true-01)))

# ::snt I don't understand what you mean by this James . Please elaborate .
# ::tokens ["I", "do", "n't", "understand", "what", "you", "mean", "by", "this", "James", ".", "Please", "elaborate", "."]
# ::lemmas ["i", "do", "not", "understand", "what", "you", "mean", "by", "this", "James", ".", "please", "elaborate", "."]
(c5-6 / multi-sentence
      :snt1 (c5-2 / understand-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-3 / thing
                              :ARG2-of (c5-0 / mean-01
                                             :ARG0 (c5-4 / person
                                                         :name (c5-7 / name
                                                                     :op1 "James"))
                                             :ARG1 (c5-1 / this)))
                  :polarity -)
      :snt2 (c5-9 / elaborate-01
                  :ARG0 (c5-8 / you)
                  :mode imperative
                  :polite +))

# ::snt A nation is only not indy if it has a higher authority , like Scotland now .
# ::tokens ["A", "nation", "is", "only", "not", "indy", "if", "it", "has", "a", "higher", "authority", ",", "like", "Scotland", "now", "."]
# ::lemmas ["a", "nation", "be", "only", "not", "indy", "if", "it", "have", "a", "high", "authority", ",", "like", "Scotland", "now", "."]
(c6-3 / have-condition-91
      :ARG1 (c6-10 / indy
                   :domain (c6-12 / nation)
                   :mod (c6-4 / only)
                   :polarity -)
      :ARG2 (c6-9 / have-03
                  :ARG0 c6-12
                  :ARG1 (c6-1 / authority
                              :ARG1-of (c6-0 / have-degree-91
                                             :ARG2 (c6-5 / high-02
                                                         :ARG1 c6-1)
                                             :ARG3 (c6-11 / more)))
                  :ARG1-of (c6-7 / resemble-01
                                 :ARG2 (c6-2 / country
                                             :name (c6-8 / name
                                                         :op1 "Scotland")
                                             :time (c6-6 / now)))))

# ::snt Eh ? You have lost me with that one James .
# ::tokens ["Eh", "?", "You", "have", "lost", "me", "with", "that", "one", "James", "."]
# ::lemmas ["eh", "?", "you", "have", "lose", "i", "with", "that", "one", "James", "."]
(c7-0 / say-01
      :ARG0 (c7-5 / i)
      :ARG1 (c7-3 / lose-02
                  :ARG0 (c7-4 / person
                              :name (c7-6 / name
                                          :op1 "James"))
                  :ARG1 c7-5
                  :ARG3 (c7-1 / one
                              :mod (c7-2 / that)))
      :ARG2 c7-4
      :mod (c7-7 / eh
                 :mode expressive))

# ::snt It's simple . Scotland isn't indy as it's controlled by a higher authority .
# ::tokens ["It", "'s", "simple", ".", "Scotland", "is", "n't", "indy", "as", "it", "'s", "controlled", "by", "a", "higher", "authority", "."]
# ::lemmas ["it", "be", "simple", ".", "Scotland", "be", "not", "indy", "as", "it", "be", "control", "by", "a", "high", "authority", "."]
(c8-11 / multi-sentence
       :snt1 (c8-0 / simple-02
                   :ARG1 (c8-10 / it))
       :snt2 (c8-3 / country
                   :name (c8-12 / name
                                :op1 "Scotland")
                   :mod (c8-5 / indy
                              :ARG1-of (c8-1 / cause-01
                                             :ARG0 (c8-8 / control-01
                                                         :ARG0 (c8-2 / authority
                                                                     :ARG1-of (c8-6 / have-degree-91
                                                                                    :ARG2 (c8-9 / high-02
                                                                                                :ARG1 c8-2)
                                                                                    :ARG3 (c8-4 / more)))
                                                         :ARG1 (c8-7 / it)))
                              :polarity -)))

# ::snt /2 Unless Scotland in the EU could make ALL its own decisions .
# ::tokens ["/2", "Unless", "Scotland", "in", "the", "EU", "could", "make", "ALL", "its", "own", "decisions", "."]
# ::lemmas ["/2", "unless", "Scotland", "in", "the", "EU", "could", "make", "all", "its", "own", "decision", "."]
(c9-3 / have-condition-91
      :ARG2 (c9-6 / possible-01
                  :ARG1 (c9-0 / decide-01
                              :ARG0 (c9-2 / country
                                          :name (c9-7 / name
                                                      :op1 "Scotland")
                                          :location (c9-4 / organization
                                                          :name (c9-5 / name
                                                                      :op1 "EU")))
                              :mod (c9-1 / all)))
      :li 2)

# ::snt /2 Then how is that any different ? The EU will decide SOME policies .
# ::tokens ["/2", "Then", "how", "is", "that", "any", "different", "?", "The", "EU", "will", "decide", "SOME", "policies", "."]
# ::lemmas ["/2", "then", "how", "be", "that", "any", "different", "?", "the", "EU", "will", "decide", "some", "policy", "."]
(c10-7 / multi-sentence
       :snt1 (c10-0 / differ-02
                    :ARG1 (c10-4 / that)
                    :manner (c10-2 / amr-unknown)
                    :li 2)
       :snt2 (c10-6 / decide-01
                    :ARG0 (c10-3 / organization
                                 :name (c10-8 / name
                                              :op1 "EU"))
                    :ARG3 (c10-5 / policy-01
                                 :mod (c10-1 / some))))

# ::snt Scotland would still be sovereign . It just delegates powers down to EU . <URL>
# ::tokens ["Scotland", "would", "still", "be", "sovereign", ".", "It", "just", "delegates", "powers", "down", "to", "EU", ".", "<", "URL", ">"]
# ::lemmas ["Scotland", "would", "still", "be", "sovereign", ".", "it", "just", "delegate", "power", "down", "to", "EU", ".", "<", "URL", ">"]
(c11-9 / multi-sentence
       :snt1 (c11-0 / sovereign
                    :domain (c11-2 / country
                                   :name (c11-10 / name
                                                 :op1 "Scotland"))
                    :mod (c11-7 / still))
       :snt2 (c11-1 / delegate-01
                    :ARG0 (c11-8 / it)
                    :ARG1 (c11-5 / power)
                    :ARG2 (c11-3 / organization
                                 :name (c11-4 / name
                                              :op1 "EU"))
                    :mod (c11-6 / just)))

# ::snt Nope . You cannot share sovereignty . This is nonsense .
# ::tokens ["Nope", ".", "You", "can", "not", "share", "sovereignty", ".", "This", "is", "nonsense", "."]
# ::lemmas ["nope", ".", "you", "can", "not", "share", "sovereignty", ".", "this", "be", "nonsense", "."]
(c12-5 / multi-sentence
       :snt1 (c12-6 / nope)
       :snt2 (c12-4 / possible-01
                    :ARG1 (c12-0 / share-01
                                 :ARG0 (c12-7 / you)
                                 :ARG1 (c12-3 / sovereignty))
                    :polarity -)
       :snt3 (c12-2 / nonsense
                    :domain (c12-1 / this)))

# ::snt A State can limit APPLICATION of its sovereignty . This from UK Parliament . <URL>
# ::tokens ["A", "State", "can", "limit", "APPLICATION", "of", "its", "sovereignty", ".", "This", "from", "UK", "Parliament", ".", "<", "URL", ">"]
# ::lemmas ["a", "State", "can", "limit", "application", "of", "its", "sovereignty", ".", "this", "from", "UK", "Parliament", ".", "<", "URL", ">"]
(c13-7 / multi-sentence
       :snt1 (c13-6 / possible-01
                    :ARG1 (c13-3 / limit-01
                                 :ARG0 (c13-0 / state)
                                 :ARG1 (c13-1 / use-01
                                              :ARG1 (c13-5 / sovereignty
                                                           :poss c13-0))))
       :snt2 (c13-2 / this
                    :source (c13-4 / government-organization
                                   :name (c13-8 / name
                                                :op1 "UK"
                                                :op2 "Parliament"))))

# ::snt It's kind of like you hiring an accountant to manage your finances .
# ::tokens ["It", "'s", "kind", "of", "like", "you", "hiring", "an", "accountant", "to", "manage", "your", "finances", "."]
# ::lemmas ["it", "be", "kind", "of", "like", "you", "hire", "an", "accountant", "to", "manage", "your", "finance", "."]
(c14-3 / resemble-01
       :ARG1 (c14-4 / it)
       :ARG2 (c14-2 / hire-01
                    :ARG0 (c14-7 / you)
                    :ARG1 (c14-0 / accountant)
                    :ARG2 (c14-5 / manage-01
                                 :ARG0 c14-0
                                 :ARG1 (c14-1 / finance
                                              :poss c14-7)))
       :degree (c14-6 / kind-of))

# ::snt Think about it . U r delegating powers others & u remain highest authority
# ::tokens ["Think", "about", "it", ".", "U", "r", "delegating", "powers", "others", "&", "u", "remain", "highest", "authority"]
# ::lemmas ["think", "about", "it", ".", "u", "r", "delegate", "power", "other", "&", "u", "remain", "high", "authority"]
(c15-11 / multi-sentence
        :snt1 (c15-6 / think-01
                     :ARG0 (c15-12 / you)
                     :ARG1 (c15-10 / it)
                     :mode imperative)
        :snt2 (c15-1 / and
                     :op1 (c15-0 / delegate-01
                                 :ARG0 (c15-13 / you)
                                 :ARG1 (c15-8 / power
                                              :poss (c15-5 / other)))
                     :op2 (c15-7 / remain-01
                                 :ARG1 c15-13
                                 :ARG3 (c15-4 / authority
                                              :ARG1-of (c15-3 / have-degree-91
                                                              :ARG2 (c15-9 / high-02
                                                                           :ARG1 c15-4)
                                                              :ARG3 (c15-2 / most))))))

# ::snt I disagree with you . But if true why delegate at all ?
# ::tokens ["I", "disagree", "with", "you", ".", "But", "if", "true", "why", "delegate", "at", "all", "?"]
# ::lemmas ["i", "disagree", "with", "you", ".", "but", "if", "true", "why", "delegate", "at", "all", "?"]
(c16-8 / multi-sentence
       :snt1 (c16-0 / disagree-01
                    :ARG0 (c16-7 / i)
                    :ARG1 (c16-9 / you))
       :snt2 (c16-3 / contrast-01
                    :ARG2 (c16-4 / delegate-01
                                 :ARG0 (c16-10 / you)
                                 :mod (c16-2 / at-all)
                                 :ARG1-of (c16-1 / cause-01
                                                 :ARG0 (c16-5 / amr-unknown)
                                                 :condition (c16-6 / true-01
                                                                   :ARG1 c16-4)))))
