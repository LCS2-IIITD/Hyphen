# ::snt Actually , that question should read " Should Parliament be bound by the Will of % of the People " % of % turnout is %
# ::tokens ["Actually", ",", "that", "question", "should", "read", "\"", "Should", "Parliament", "be", "bound", "by", "the", "Will", "of", "%", "of", "the", "People", "\"", "%", "of", "%", "turnout", "is", "%"]
# ::lemmas ["actually", ",", "that", "question", "should", "read", "\"", "should", "Parliament", "be", "bind", "by", "the", "Will", "of", "%", "of", "the", "People", "\"", "%", "of", "%", "turnout", "be", "%"]
(c1-9 / recommend-01
      :ARG1 (c1-6 / read-01
                  :ARG1 (c1-2 / question-01
                              :mod (c1-8 / that))
                  :ARG3 c1-9
                  :ARG1 (c1-11 / bind-01
                               :ARG0 (c1-3 / will-02
                                           :ARG0 (c1-12 / percentage-entity
                                                        :value-of (c1-7 / person)))
                               :ARG1 (c1-10 / government-organization
                                            :name (c1-13 / name
                                                         :op1 "Parliament"))))
      :ARG1-of (c1-0 / actual-02)
      :ARG1-of (c1-1 / cause-01
                     :ARG0 (c1-4 / percentage-entity
                                 :value-of (c1-5 / turn-out-17))))

# ::snt yes , because it's still % of the electorate that could be bothered to vote .
# ::tokens ["yes", ",", "because", "it", "'s", "still", "%", "of", "the", "electorate", "that", "could", "be", "bothered", "to", "vote", "."]
# ::lemmas ["yes", ",", "because", "it", "be", "still", "%", "of", "the", "electorate", "that", "could", "be", "bother", "to", "vote", "."]
(c2-2 / cause-01
      :ARG0 (c2-6 / percentage-entity
                  :ARG1-of (c2-1 / include-91
                                 :ARG2 (c2-8 / electorate))
                  :mod (c2-0 / still)
                  :ARG0-of (c2-5 / bother-01
                                 :ARG1 (c2-3 / vote-01
                                             :ARG0 c2-8)
                                 :ARG1-of (c2-4 / possible-01)))
      :mod (c2-7 / yes))
