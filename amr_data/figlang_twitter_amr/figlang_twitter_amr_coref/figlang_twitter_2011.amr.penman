# ::snt Constant reminders of the tremendous loss in our EP community . <URL>
# ::tokens ["Constant", "reminders", "of", "the", "tremendous", "loss", "in", "our", "EP", "community", ".", "<", "URL", ">"]
# ::lemmas ["constant", "reminder", "of", "the", "tremendous", "loss", "in", "our", "EP", "community", ".", "<", "URL", ">"]
(c1-4 / remind-01
      :ARG1 (c1-5 / lose-02
                  :ARG0 (c1-1 / community
                              :poss (c1-2 / we)
                              :mod (c1-6 / protein
                                         :name (c1-7 / name
                                                     :op1 "EP")))
                  :mod (c1-3 / tremendous))
      :mod (c1-0 / constant))

# ::snt sidenote : the crd is awesome . I can t believe I didn t know about it until after fellowship . M
# ::tokens ["sidenote", ":", "the", "crd", "is", "awesome", ".", "I", "can", "t", "believe", "I", "didn", "t", "know", "about", "it", "until", "after", "fellowship", ".", "M"]
# ::lemmas ["sidenote", ":", "the", "crd", "be", "awesome", ".", "i", "can", "t", "believe", "i", "didn", "t", "know", "about", "it", "until", "after", "fellowship", ".", "M"]
(c2-11 / multi-sentence
       :snt1 (c2-0 / awesome-03
                   :ARG0 (c2-2 / cricket))
       :snt2 (c2-10 / possible-01
                    :ARG1 (c2-9 / believe-01
                                :ARG0 (c2-3 / i)
                                :ARG1 (c2-12 / know-01
                                             :ARG0 c2-3
                                             :ARG1 (c2-4 / it)
                                             :time (c2-5 / until
                                                         :op1 (c2-13 / after
                                                                     :op1 (c2-1 / fellowship)))
                                             :polarity -))
                    :polarity -)
       :snt3 (c2-6 / person
                   :name (c2-8 / name
                               :op1 "M"))
       :snt2 (c2-7 / note-01
                   :ARG1 c2-0))

# ::snt Please tell me more about the CRD catheter . I only used biosense catheters in fellowship
# ::tokens ["Please", "tell", "me", "more", "about", "the", "CRD", "catheter", ".", "I", "only", "used", "biosense", "catheters", "in", "fellowship"]
# ::lemmas ["please", "tell", "i", "more", "about", "the", "CRD", "catheter", ".", "i", "only", "use", "biosense", "catheter", "in", "fellowship"]
(c3-11 / multi-sentence
       :snt1 (c3-8 / tell-01
                   :ARG0 (c3-13 / you)
                   :ARG1 (c3-4 / more
                               :topic (c3-3 / catheter
                                            :mod (c3-0 / disease
                                                       :name (c3-12 / name
                                                                    :op1 "CRD"))))
                   :ARG2 (c3-10 / i)
                   :mode imperative
                   :polite +)
       :snt2 (c3-6 / use-01
                   :ARG0 (c3-5 / i)
                   :ARG1 (c3-1 / catheter
                               :ARG2-of (c3-9 / biosense-00))
                   :mod (c3-7 / only)
                   :manner (c3-2 / fellowship)))

# ::snt Quad diag catheter with a funky curve on the end which helps it stay in position at the His . Give it a shot .
# ::tokens ["Quad", "diag", "catheter", "with", "a", "funky", "curve", "on", "the", "end", "which", "helps", "it", "stay", "in", "position", "at", "the", "His", ".", "Give", "it", "a", "shot", "."]
# ::lemmas ["quad", "diag", "catheter", "with", "a", "funky", "curve", "on", "the", "end", "which", "help", "it", "stay", "in", "position", "at", "the", "his", ".", "give", "it", "a", "shot", "."]
(c4-12 / multi-sentence
       :snt1 (c4-4 / catheter
                   :name (c4-13 / name
                                :op1 "Quad"
                                :op2 "diag")
                   :ARG0-of (c4-6 / have-03
                                  :ARG1 (c4-0 / curve
                                              :mod (c4-3 / funky)
                                              :location (c4-15 / end)
                                              :ARG0-of (c4-10 / help-01
                                                              :ARG1 (c4-1 / stay-01
                                                                          :ARG1 c4-4
                                                                          :ARG3 (c4-11 / position-01
                                                                                       :ARG1 c4-4
                                                                                       :ARG2 (c4-7 / thing
                                                                                                   :name (c4-8 / name
                                                                                                               :op1 "He"))))))))
       :snt2 (c4-9 / give-01
                   :ARG0 (c4-14 / you)
                   :ARG1 (c4-2 / shot)
                   :ARG2 (c4-5 / it)
                   :mode imperative))

# ::snt comes in F and F . I use F in a locking F sheath . So easy even a fellow can get a His !
# ::tokens ["comes", "in", "F", "and", "F", ".", "I", "use", "F", "in", "a", "locking", "F", "sheath", ".", "So", "easy", "even", "a", "fellow", "can", "get", "a", "His", "!"]
# ::lemmas ["come", "in", "F", "and", "F", ".", "i", "use", "F", "in", "a", "lock", "f", "sheath", ".", "so", "easy", "even", "a", "fellow", "can", "get", "a", "his", "!"]
(c5-14 / multi-sentence
       :snt1 (c5-3 / come-01
                   :ARG1 (c5-1 / and
                               :op1 (c5-0 / string-entity
                                          :value "F")
                               :op2 (c5-12 / string-entity
                                           :value "F")))
       :snt2 (c5-6 / use-01
                   :ARG0 (c5-13 / i)
                   :ARG1 c5-12
                   :location (c5-4 / sheath
                                   :ARG0-of (c5-9 / lock-01)
                                   :mod (c5-7 / string-entity
                                              :value "F")))
       :snt3 (c5-10 / possible-01
                    :ARG1 (c5-11 / get-01
                                 :ARG0 (c5-2 / fellow
                                             :mod (c5-17 / even))
                                 :ARG1 (c5-8 / thing
                                             :name (c5-15 / name
                                                          :op1 "His")))
                    :ARG1-of (c5-5 / easy-05
                                   :degree (c5-16 / so))))

# ::snt Agree ! Example if His with F CRD /6 F locking sheath done by nd <URL>
# ::tokens ["Agree", "!", "Example", "if", "His", "with", "F", "CRD", "/6", "F", "locking", "sheath", "done", "by", "nd", "<", "URL", ">"]
# ::lemmas ["agree", "!", "example", "if", "his", "with", "F", "CRD", "/6", "f", "lock", "sheath", "do", "by", "nd", "<", "URL", ">"]
(c6-8 / multi-sentence
      :snt1 (c6-2 / agree-01
                  :mode expressive)
      :snt2 (c6-10 / exemplify-01
                   :ARG0 (c6-0 / do-02
                               :ARG0 (c6-7 / person
                                           :name (c6-9 / name
                                                       :op1 "nd"))
                               :ARG1 (c6-1 / sheath
                                           :ARG1-of (c6-6 / lock-01)
                                           :mod (c6-5 / variable
                                                      :name c6-9
                                                      :op1 "CCD"))
                               :mod (c6-3 / variable
                                          :name c6-9
                                          :op1 "6"))
                   :part-of (c6-4 / he)))

# ::snt if I were to nit-pick I would say it's a bit distal ...
# ::tokens ["if", "I", "were", "to", "nit", "-", "pick", "I", "would", "say", "it", "'s", "a", "bit", "distal", "..."]
# ::lemmas ["if", "i", "be", "to", "nit", "-", "pick", "i", "would", "say", "it", "be", "a", "bit", "distal", "..."]
(c7-0 / say-01
      :ARG0 (c7-4 / i)
      :ARG1 (c7-1 / distal
                  :degree (c7-3 / bit)
                  :domain (c7-2 / it))
      :condition (c7-5 / nitpick-00
                       :ARG0 c7-4))
