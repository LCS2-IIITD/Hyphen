# ::snt Takes great angles , and has awesome instincts , especially for a rookie . I just don t see that reactionary athleticism when I watch his tape .
# ::tokens ["Takes", "great", "angles", ",", "and", "has", "awesome", "instincts", ",", "especially", "for", "a", "rookie", ".", "I", "just", "don", "t", "see", "that", "reactionary", "athleticism", "when", "I", "watch", "his", "tape", "."]
# ::lemmas ["take", "great", "angle", ",", "and", "have", "awesome", "instinct", ",", "especially", "for", "a", "rookie", ".", "i", "just", "don", "t", "see", "that", "reactionary", "athleticism", "when", "i", "watch", "his", "tape", "."]
(c1-10 / multi-sentence
       :snt1 (c1-16 / and
                    :op1 (c1-7 / take-03
                               :ARG0 (c1-17 / he)
                               :ARG1 (c1-12 / angle
                                            :mod (c1-9 / great)))
                    :op2 (c1-1 / have-03
                               :ARG0 c1-17
                               :ARG1 (c1-2 / instinct
                                           :ARG1-of (c1-0 / awe-01)))
                    :prep-for (c1-8 / rookie
                                    :mod (c1-13 / especially)))
       :snt2 (c1-14 / see-01
                    :ARG0 (c1-15 / i)
                    :ARG1 (c1-19 / athleticism
                                 :ARG0-of (c1-6 / reactionary-02)
                                 :mod (c1-5 / that))
                    :mod (c1-18 / just)
                    :time (c1-4 / watch-01
                                :ARG0 c1-15
                                :ARG1 (c1-11 / tape
                                             :poss (c1-3 / he)))
                    :polarity -))

# ::snt Whether he has it or not it s not impeding him tho so idk why someone saying he has it hurts him to you
# ::tokens ["Whether", "he", "has", "it", "or", "not", "it", "s", "not", "impeding", "him", "tho", "so", "idk", "why", "someone", "saying", "he", "has", "it", "hurts", "him", "to", "you"]
# ::lemmas ["whether", "he", "have", "it", "or", "not", "it", "s", "not", "impede", "he", "tho", "so", "idk", "why", "someone", "say", "he", "have", "it", "hurt", "he", "to", "you"]
(c2-4 / have-concession-91
      :ARG1 (c2-12 / impede-01
                   :ARG0 (c2-0 / say-01
                               :ARG0 (c2-11 / someone)
                               :ARG1 (c2-7 / have-03
                                           :ARG0 (c2-1 / he)
                                           :ARG1 (c2-5 / it)))
                   :ARG1 c2-1
                   :ARG1-of (c2-3 / cause-01
                                  :ARG0 (c2-9 / thing
                                              :ARG0-of (c2-2 / cause-01
                                                             :ARG1 (c2-8 / hurt-01
                                                                         :ARG0 c2-0
                                                                         :ARG1 c2-1
                                                                         :beneficiary (c2-13 / you)))))
                   :polarity -)
      :ARG2 (c2-10 / regardless-91
                   :ARG1 (c2-6 / have-03
                               :ARG0 c2-1
                               :ARG1 c2-5
                               :ARG2-of c2-10)))

# ::snt I m saying that top - LBs have it .
# ::tokens ["I", "m", "saying", "that", "top", "-", "LBs", "have", "it", "."]
# ::lemmas ["i", "m", "say", "that", "top", "-", "lb", "have", "it", "."]
(c3-0 / say-01
      :ARG0 (c3-6 / i)
      :ARG1 (c3-1 / have-03
                  :ARG0 (c3-5 / person
                              :ARG1-of (c3-4 / LB-00)
                              :mod (c3-3 / top))
                  :ARG1 (c3-2 / it)))

# ::snt Ooh brian took this L publicly the other day
# ::tokens ["Ooh", "brian", "took", "this", "L", "publicly", "the", "other", "day"]
# ::lemmas ["Ooh", "brian", "take", "this", "l", "publicly", "the", "other", "day"]
(c4-5 / take-01
      :ARG0 (c4-6 / person
                  :name (c4-7 / name
                              :op1 "Obama"))
      :ARG1 (c4-0 / string-entity
                  :value "L")
      :ARG1-of (c4-4 / public-02)
      :mod (c4-3 / oh
                 :mode expressive)
      :time (c4-1 / day
                  :mod (c4-2 / other)))

# ::snt Oh did he ? I missed it . Haven t seen his account since this and it just popped up so it reminded me . Fair enough , disregard my pettiness
# ::tokens ["Oh", "did", "he", "?", "I", "missed", "it", ".", "Haven", "t", "seen", "his", "account", "since", "this", "and", "it", "just", "popped", "up", "so", "it", "reminded", "me", ".", "Fair", "enough", ",", "disregard", "my", "pettiness"]
# ::lemmas ["oh", "do", "he", "?", "i", "miss", "it", ".", "Haven", "t", "see", "his", "account", "since", "this", "and", "it", "just", "pop", "up", "so", "it", "remind", "i", ".", "fair", "enough", ",", "disregard", "my", "pettiness"]
(c5-7 / multi-sentence
      :snt1 (c5-17 / miss-01
                   :ARG0 (c5-3 / i)
                   :ARG1 (c5-11 / it)
                   :polarity (c5-15 / amr-unknown)
                   :mod (c5-4 / oh))
      :snt2 (c5-8 / and
                  :op1 (c5-10 / see-01
                              :ARG0 (c5-12 / i)
                              :ARG1 (c5-1 / account
                                          :poss (c5-18 / he))
                              :time (c5-14 / since
                                           :op1 (c5-5 / this))
                              :polarity -)
                  :op2 (c5-22 / pop-up-03
                              :ARG1 c5-1
                              :mod (c5-21 / just)
                              :ARG0-of (c5-6 / remind-01
                                             :ARG1 c5-12
                                             :ARG2 c5-12)))
      :snt3 (c5-0 / disregard-01
                  :ARG0 (c5-13 / you)
                  :ARG1 (c5-20 / pettiness
                               :poss (c5-19 / i))
                  :ARG1-of (c5-2 / have-degree-91
                                 :ARG2 (c5-16 / fair-01
                                              :ARG1 c5-0)
                                 :ARG3 (c5-9 / enough))
                  :mode imperative))
