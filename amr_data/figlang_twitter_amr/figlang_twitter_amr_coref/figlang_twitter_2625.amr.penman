# ::snt Cut that out . He betrayed no one . He owes Trump nothing . He was re-elected by conservatives in Wisconsin . <URL>
# ::tokens ["Cut", "that", "out", ".", "He", "betrayed", "no", "one", ".", "He", "owes", "Trump", "nothing", ".", "He", "was", "re", "-", "elected", "by", "conservatives", "in", "Wisconsin", ".", "<", "URL", ">"]
# ::lemmas ["cut", "that", "out", ".", "he", "betray", "no", "one", ".", "he", "owe", "Trump", "nothing", ".", "he", "be", "re", "-", "elect", "by", "conservative", "in", "Wisconsin", ".", "<", "URL", ">"]
(c1-14 / multi-sentence
       :snt1 (c1-4 / cut-out-06
                   :ARG0 (c1-16 / you)
                   :ARG1 (c1-8 / that)
                   :mode imperative)
       :snt2 (c1-11 / betray-01
                    :ARG0 (c1-5 / he)
                    :ARG1 (c1-15 / no-one))
       :snt3 (c1-6 / owe-01
                   :ARG0 (c1-12 / he)
                   :ARG1 (c1-9 / nothing)
                   :ARG2 (c1-13 / person
                                :name (c1-7 / name
                                            :op1 "Trump")))
       :snt4 (c1-10 / reelect-01
                    :ARG0 c1-13
                    :mod (c1-0 / conservative)
                    :location (c1-1 / state
                                    :name (c1-3 / name
                                                :op1 "Wisconsin")))
       :ARG1 (c1-2 / he))

# ::snt I live in WI and that is true . Ryan betrayed no one . Was making sure House would be retained
# ::tokens ["I", "live", "in", "WI", "and", "that", "is", "true", ".", "Ryan", "betrayed", "no", "one", ".", "Was", "making", "sure", "House", "would", "be", "retained"]
# ::lemmas ["i", "live", "in", "WI", "and", "that", "be", "true", ".", "Ryan", "betray", "no", "one", ".", "be", "make", "sure", "House", "would", "be", "retain"]
(c2-13 / multi-sentence
       :snt1 (c2-1 / and
                   :op1 (c2-8 / live-01
                              :ARG0 (c2-12 / i)
                              :location (c2-0 / state
                                              :name (c2-14 / name
                                                           :op1 "WI")))
                   :op2 (c2-6 / true-01
                              :ARG1 (c2-3 / that)))
       :snt2 (c2-10 / betray-01
                    :ARG0 (c2-9 / person
                                :name (c2-7 / name
                                            :op1 "Ryan"))
                    :ARG1 (c2-5 / no-one))
       :snt3 (c2-16 / ensure-01
                    :ARG0 (c2-4 / he)
                    :ARG1 (c2-11 / retain-01
                                 :ARG1 (c2-15 / government-organization
                                              :name (c2-2 / name
                                                          :op1 "House")))))
