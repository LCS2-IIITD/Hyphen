# ::snt Very good meeting on the Middle East , the Military , and Trade . Heading back to The Southern White House ( Mar-a-Lago ! ) . Updates throughout the day .
# ::tokens ["Very", "good", "meeting", "on", "the", "Middle", "East", ",", "the", "Military", ",", "and", "Trade", ".", "Heading", "back", "to", "The", "Southern", "White", "House", "(", "Mar", "-", "a", "-", "Lago", "!", ")", ".", "Updates", "throughout", "the", "day", "."]
# ::lemmas ["very", "good", "meeting", "on", "the", "Middle", "East", ",", "the", "Military", ",", "and", "Trade", ".", "head", "back", "to", "the", "Southern", "White", "House", "(", "Mar", "-", "a", "-", "Lago", "!", ")", ".", "update", "throughout", "the", "day", "."]
(c1-9 / multi-sentence
      :snt1 (c1-15 / meet-03
                   :ARG1 (c1-14 / and
                                :op1 (c1-2 / world-region
                                           :name (c1-10 / name
                                                        :op1 "Middle"
                                                        :op2 "East"))
                                :op2 (c1-11 / military)
                                :op3 (c1-5 / trade-01))
                   :ARG1-of (c1-7 / good-02
                                  :degree (c1-4 / very)))
      :snt2 (c1-6 / rush-01
                  :ARG2 (c1-13 / government-organization
                               :name (c1-1 / name
                                           :op1 "Southern"
                                           :op2 "White"
                                           :op3 "House")
                               :ARG1-of (c1-8 / mean-01
                                              :ARG2 (c1-17 / location
                                                           :name (c1-12 / name
                                                                        :op1 "Mar-a-Lago"))))
                  :direction (c1-18 / back))
      :snt3 (c1-16 / update-02
                   :time (c1-3 / throughout
                               :op1 (c1-0 / day))))

# ::snt Leave it to No Life Jeff to tweet the president within minutes a Trump tweet .
# ::tokens ["Leave", "it", "to", "No", "Life", "Jeff", "to", "tweet", "the", "president", "within", "minutes", "a", "Trump", "tweet", "."]
# ::lemmas ["leave", "it", "to", "no", "life", "Jeff", "to", "tweet", "the", "president", "within", "minutes", "a", "Trump", "tweet", "."]
(c2-11 / leave-02
       :ARG0 (c2-15 / you)
       :ARG1 (c2-9 / tweet-02
                   :ARG0 (c2-12 / person
                                :name (c2-14 / name
                                             :op1 "No"
                                             :op2 "Life"
                                             :op3 "Jeff"))
                   :ARG2 (c2-8 / person
                               :ARG0-of (c2-5 / have-org-role-91
                                              :ARG2 (c2-4 / president)))
                   :time (c2-0 / after
                               :op1 (c2-3 / tweet-02
                                          :ARG0 (c2-2 / person
                                                      :name (c2-10 / name
                                                                   :op1 "Trump")))
                               :quant (c2-7 / up-to
                                            :op1 (c2-13 / multiple
                                                        :op1 (c2-1 / temporal-quantity
                                                                   :unit (c2-6 / minute)
                                                                   :quant 1)))))
       :ARG2 c2-2)

# ::snt Leav it to Greg to notice and do the same .
# ::tokens ["Leav", "it", "to", "Greg", "to", "notice", "and", "do", "the", "same", "."]
# ::lemmas ["leav", "it", "to", "Greg", "to", "notice", "and", "do", "the", "same", "."]
(c3-5 / leave-02
      :ARG0 (c3-8 / you)
      :ARG1 (c3-2 / and
                  :op1 (c3-7 / notice-01
                             :ARG0 (c3-6 / person
                                         :name (c3-4 / name
                                                     :op1 "Greg")))
                  :op2 (c3-0 / do-02
                             :ARG0 c3-6
                             :ARG1 (c3-3 / thing
                                         :ARG1-of (c3-1 / same-01))))
      :ARG2 c3-6)

# ::snt To be fair , he is someone who doesn t seem to understand how the impeachment process works . Don t be too hard on him .
# ::tokens ["To", "be", "fair", ",", "he", "is", "someone", "who", "doesn", "t", "seem", "to", "understand", "how", "the", "impeachment", "process", "works", ".", "Don", "t", "be", "too", "hard", "on", "him", "."]
# ::lemmas ["to", "be", "fair", ",", "he", "be", "someone", "who", "doesn", "t", "seem", "to", "understand", "how", "the", "impeachment", "process", "work", ".", "Don", "t", "be", "too", "hard", "on", "he", "."]
(c4-12 / multi-sentence
       :snt1 (c4-0 / seem-01
                   :ARG1 (c4-7 / understand-01
                               :ARG0 (c4-6 / he)
                               :ARG1 (c4-9 / thing
                                           :manner-of (c4-3 / work-09
                                                            :ARG1 (c4-11 / process-02
                                                                         :ARG1 (c4-2 / impeach-01)))))
                   :mod (c4-4 / to-be-fair)
                   :polarity -)
       :snt2 (c4-10 / hard-04
                    :ARG0 (c4-13 / you)
                    :ARG1 (c4-1 / he)
                    :ARG2-of (c4-8 / have-degree-91
                                   :ARG1 c4-13
                                   :ARG3 (c4-5 / too))
                    :mode imperative
                    :polarity -))

# ::snt The Left doesn t like to be defined , but they know who they are .
# ::tokens ["The", "Left", "doesn", "t", "like", "to", "be", "defined", ",", "but", "they", "know", "who", "they", "are", "."]
# ::lemmas ["the", "left", "doesn", "t", "like", "to", "be", "define", ",", "but", "they", "know", "who", "they", "be", "."]
(c5-1 / contrast-01
      :ARG1 (c5-0 / dislike-01
                  :ARG0 (c5-2 / left-19)
                  :ARG1 (c5-4 / define-01
                              :ARG1 c5-2))
      :ARG2 (c5-5 / know-01
                  :ARG0 c5-2
                  :ARG1 (c5-3 / person
                              :domain c5-2)))
