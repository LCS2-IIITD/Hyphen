# ::snt Ripple Drop :30 - :50 tells you everything you need to know . <URL>
# ::tokens ["Ripple", "Drop", ":", "30", "-", ":", "50", "tells", "you", "everything", "you", "need", "to", "know", ".", "<", "URL", ">"]
# ::lemmas ["Ripple", "Drop", ":", "30", "-", ":", "50", "tell", "you", "everything", "you", "need", "to", "know", ".", "<", "URL", ">"]
(c1-4 / tell-01
      :ARG0 (c1-0 / drop-01
                  :ARG0 (c1-7 / person
                              :name (c1-8 / name
                                          :op1 "Ripple"))
                  :ARG4 (c1-6 / between
                              :op1 (c1-3 / percentage-entity
                                         :value 30)
                              :op2 (c1-2 / percentage-entity
                                         :value 50)))
      :ARG1 (c1-10 / everything
                   :ARG1-of (c1-1 / know-01
                                  :ARG0 (c1-9 / you)
                                  :ARG1-of (c1-5 / need-01
                                                 :ARG0 c1-9)))
      :ARG2 c1-9)

# ::snt A no brainer , if a Cryptocurrency has no use case or utility to solve a real world problem , why would anyone need said Cryptocurrencies ? Breanne Madigan literally shared the path to success for Ripple and XRP .
# ::tokens ["A", "no", "brainer", ",", "if", "a", "Cryptocurrency", "has", "no", "use", "case", "or", "utility", "to", "solve", "a", "real", "world", "problem", ",", "why", "would", "anyone", "need", "said", "Cryptocurrencies", "?", "Breanne", "Madigan", "literally", "shared", "the", "path", "to", "success", "for", "Ripple", "and", "XRP", "."]
# ::lemmas ["a", "no", "brainer", ",", "if", "a", "Cryptocurrency", "have", "no", "use", "case", "or", "utility", "to", "solve", "a", "real", "world", "problem", ",", "why", "would", "anyone", "need", "say", "Cryptocurrencies", "?", "Breanne", "Madigan", "literally", "share", "the", "path", "to", "success", "for", "Ripple", "and", "XRP", "."]
(c2-12 / multi-sentence
       :snt1 (c2-13 / no-brainer)
       :snt2 (c2-3 / need-01
                   :ARG0 (c2-21 / anyone)
                   :ARG1 (c2-6 / Cryptocurrency
                               :ARG1-of (c2-15 / say-01))
                   :ARG1-of (c2-0 / cause-01
                                  :ARG0 (c2-14 / amr-unknown))
                   :condition (c2-9 / or
                                    :op1 (c2-22 / use-01
                                                :ARG1 (c2-8 / Cryptocurrency)
                                                :ARG2 (c2-25 / solve-01
                                                             :ARG0 c2-8
                                                             :ARG1 (c2-26 / problem
                                                                          :mod (c2-7 / world
                                                                                     :ARG1-of (c2-10 / real-04))))
                                                :polarity -)
                                    :op2 (c2-2 / utility
                                               :domain c2-8
                                               :polarity -)))
       :snt3 (c2-18 / share-01
                    :ARG0 (c2-23 / person
                                 :name (c2-19 / name
                                              :op1 "Breanne"
                                              :op2 "Madigan"))
                    :ARG1 (c2-17 / path
                                 :direction (c2-4 / succeed-01
                                                  :ARG0 (c2-1 / and
                                                              :op1 (c2-20 / company
                                                                          :name (c2-5 / name
                                                                                      :op1 "RX"))
                                                              :op2 (c2-16 / company
                                                                          :name (c2-11 / name
                                                                                       :op1 "XRP"))))
                                 :manner (c2-24 / literal))))
