# ::snt FFS the is dead . What exactly is the company trying to save right now ? Ford isn t still re-working the Edsel brand . <URL>
# ::tokens ["FFS", "the", "is", "dead", ".", "What", "exactly", "is", "the", "company", "trying", "to", "save", "right", "now", "?", "Ford", "isn", "t", "still", "re", "-", "working", "the", "Edsel", "brand", ".", "<", "URL", ">"]
# ::lemmas ["FFS", "the", "be", "dead", ".", "what", "exactly", "be", "the", "company", "try", "to", "save", "right", "now", "?", "Ford", "isn", "t", "still", "re", "-", "work", "the", "Edsel", "brand", ".", "<", "URL", ">"]
(c1-15 / multi-sentence
       :snt1 (c1-0 / die-01
                   :ARG1 (c1-14 / person
                                :name (c1-16 / name
                                             :op1 "FFS")))
       :snt2 (c1-9 / try-01
                   :ARG0 (c1-5 / company)
                   :ARG1 (c1-1 / save-02
                               :ARG0 c1-5
                               :ARG1 (c1-3 / amr-unknown
                                           :mod (c1-17 / exact))
                               :time (c1-10 / now
                                            :mod (c1-11 / right)))
                   :snt3 (c1-6 / work-01
                               :ARG0 (c1-2 / company
                                           :name (c1-8 / name
                                                       :op1 "Ford"))
                               :ARG1 (c1-12 / brand
                                            :name (c1-4 / name
                                                        :op1 "Edsel"))
                               :mod (c1-13 / still)
                               :polarity -)
                   :snt4 (c1-7 / url-entity)))

# ::snt I don't get why they dont just make some engineering modifications and just re-brand the whole thing . It's like they are trying to keep a virus alive .
# ::tokens ["I", "do", "n't", "get", "why", "they", "do", "nt", "just", "make", "some", "engineering", "modifications", "and", "just", "re", "-", "brand", "the", "whole", "thing", ".", "It", "'s", "like", "they", "are", "trying", "to", "keep", "a", "virus", "alive", "."]
# ::lemmas ["i", "do", "not", "get", "why", "they", "do", "nt", "just", "make", "some", "engineering", "modification", "and", "just", "re", "-", "brand", "the", "whole", "thing", ".", "it", "be", "like", "they", "be", "try", "to", "keep", "a", "virus", "alive", "."]
(c2-8 / multi-sentence
      :snt1 (c2-17 / understand-01
                   :ARG0 (c2-0 / i)
                   :ARG1 (c2-6 / thing
                               :ARG0-of (c2-1 / cause-01
                                              :ARG1 (c2-14 / and
                                                           :op1 (c2-16 / modify-01
                                                                       :ARG0 (c2-3 / they)
                                                                       :ARG1 (c2-10 / engineer-01)
                                                                       :quant (c2-11 / some)
                                                                       :mod (c2-20 / just)
                                                                       :polarity -)
                                                           :op2 (c2-7 / rebrand-01
                                                                      :ARG0 c2-3
                                                                      :ARG1 (c2-9 / thing
                                                                                  :mod (c2-2 / whole))
                                                                      :mod (c2-19 / just)))))
                   :polarity -)
      :snt2 (c2-4 / resemble-01
                  :ARG1 (c2-12 / it)
                  :ARG2 (c2-13 / try-01
                               :ARG0 (c2-15 / they)
                               :ARG1 (c2-21 / keep-02
                                            :ARG0 c2-15
                                            :ARG1 (c2-18 / live-01
                                                         :ARG0 (c2-5 / virus))))))

# ::snt I m sure they have some insanely complicated break-even model based on production levels and discounts . Super MBA stuff . Which means nothing here . Bc they made a flying death trap . The buyers don t exist . What airline will take s ? All downside . ( Until the ground . )
# ::tokens ["I", "m", "sure", "they", "have", "some", "insanely", "complicated", "break", "-", "even", "model", "based", "on", "production", "levels", "and", "discounts", ".", "Super", "MBA", "stuff", ".", "Which", "means", "nothing", "here", ".", "Bc", "they", "made", "a", "flying", "death", "trap", ".", "The", "buyers", "don", "t", "exist", ".", "What", "airline", "will", "take", "s", "?", "All", "downside", ".", "(", "Until", "the", "ground", ".", ")"]
# ::lemmas ["i", "m", "sure", "they", "have", "some", "insanely", "complicate", "break", "-", "even", "model", "base", "on", "production", "level", "and", "discount", ".", "super", "MBA", "stuff", ".", "which", "mean", "nothing", "here", ".", "Bc", "they", "make", "a", "fly", "death", "trap", ".", "the", "buyer", "don", "t", "exist", ".", "what", "airline", "will", "take", "s", "?", "all", "downside", ".", "(", "until", "the", "ground", ".", ")"]
(c3-12 / multi-sentence
       :snt1 (c3-17 / sure-02
                    :ARG0 (c3-5 / i)
                    :ARG1 (c3-27 / have-03
                                 :ARG0 (c3-10 / they)
                                 :ARG1 (c3-26 / model
                                              :mod (c3-31 / break-even-09)
                                              :ARG1-of (c3-8 / complicate-01
                                                             :degree (c3-20 / insane))
                                              :ARG1-of (c3-24 / base-02
                                                              :ARG2 (c3-25 / and
                                                                           :op1 (c3-30 / level
                                                                                       :mod (c3-33 / produce-01))
                                                                           :op2 (c3-0 / discount-01)))
                                              :mod (c3-32 / some))))
       :snt2 (c3-21 / stuff
                    :mod (c3-6 / super)
                    :mod (c3-29 / product
                                :name (c3-13 / name
                                             :op1 "BA"))
                    :ARG1-of (c3-22 / mean-01
                                    :ARG2 (c3-3 / nothing)
                                    :location (c3-4 / here)))
       :snt3 (c3-16 / exist-01
                    :ARG1 (c3-19 / person
                                 :ARG0-of (c3-18 / buy-01))
                    :polarity -)
       :snt4 (c3-9 / take-01
                   :ARG0 (c3-15 / airline
                                :mod (c3-1 / amr-unknown))
                   :ARG1 (c3-7 / s))
       :snt5 (c3-14 / take-01
                    :ARG0 c3-15
                    :mod (c3-34 / amr-unknown))
       :ARG1 (c3-23 / downside
                    :mod (c3-2 / all))
       :time (c3-28 / until
                    :op1 (c3-11 / ground)))
