# ::snt oh , I guess I don't get the tweet about Jews and their different beliefs
# ::tokens ["oh", ",", "I", "guess", "I", "do", "n't", "get", "the", "tweet", "about", "Jews", "and", "their", "different", "beliefs"]
# ::lemmas ["oh", ",", "i", "guess", "i", "do", "not", "get", "the", "tweet", "about", "Jews", "and", "their", "different", "belief"]
(c1-7 / guess-01
      :ARG0 (c1-8 / i)
      :ARG1 (c1-10 / get-30
                   :ARG0 c1-8
                   :ARG1 (c1-4 / tweet-01
                               :topic (c1-1 / and
                                            :op1 (c1-6 / person
                                                       :mod (c1-5 / religious-group
                                                                  :name (c1-9 / name
                                                                              :op1 "Jew")))
                                            :op2 (c1-2 / believe-01
                                                       :ARG0 c1-6
                                                       :ARG1-of (c1-0 / differ-02))))
                   :polarity -)
      :mod (c1-3 / oh
                 :mode expressive))

# ::snt I never said you couldn't but expect people w / different beliefs clash . it's a test of faith
# ::tokens ["I", "never", "said", "you", "could", "n't", "but", "expect", "people", "w", "/", "different", "beliefs", "clash", ".", "it", "'s", "a", "test", "of", "faith"]
# ::lemmas ["i", "never", "say", "you", "could", "not", "but", "expect", "people", "w", "/", "different", "belief", "clash", ".", "it", "be", "a", "test", "of", "faith"]
(c2-13 / multi-sentence
       :snt1 (c2-0 / say-01
                   :ARG0 (c2-12 / i)
                   :ARG1 (c2-10 / possible-01
                                :ARG1 (c2-4 / contrast-01
                                            :ARG1 (c2-15 / expect-01
                                                         :ARG0 (c2-14 / you)
                                                         :ARG1 (c2-1 / clash-01
                                                                     :ARG0 (c2-8 / person
                                                                                 :ARG0-of (c2-5 / have-03
                                                                                                :ARG1 (c2-11 / belief
                                                                                                             :ARG1-of (c2-2 / differ-02)))))))
                                :time (c2-6 / ever)
                                :polarity -)
                   :snt2 (c2-9 / test-01
                               :ARG1 (c2-3 / faith)
                               :domain (c2-7 / it))
                   :polarity -))

# ::snt it's expected and that's why someone in public office shouldn't take ownbeliefs on tours
# ::tokens ["it", "'s", "expected", "and", "that", "'s", "why", "someone", "in", "public", "office", "should", "n't", "take", "ownbeliefs", "on", "tours"]
# ::lemmas ["it", "be", "expect", "and", "that", "be", "why", "someone", "in", "public", "office", "should", "not", "take", "ownbelief", "on", "tour"]
(c3-1 / and
      :op1 (c3-13 / expect-01
                  :ARG1 (c3-10 / it))
      :op2 (c3-2 / cause-01
                 :ARG0 c3-13
                 :ARG1 (c3-7 / recommend-01
                             :ARG1 (c3-6 / take-01
                                         :ARG0 (c3-0 / someone
                                                     :ARG0-of (c3-4 / have-org-role-91
                                                                    :ARG1 (c3-5 / office
                                                                                :ARG1-of (c3-8 / public-02))
                                                                    :ARG2 (c3-11 / member)))
                                         :ARG1 (c3-3 / thing
                                                     :ARG1-of (c3-9 / believe-01
                                                                    :ARG0 c3-0))
                                         :ARG3 (c3-12 / tour))
                             :polarity -)))

# ::snt then you'd agree he's in no position to be tweeting that china should keep the found drone .
# ::tokens ["then", "you", "'d", "agree", "he", "'s", "in", "no", "position", "to", "be", "tweeting", "that", "china", "should", "keep", "the", "found", "drone", "."]
# ::lemmas ["then", "you", "would", "agree", "he", "be", "in", "no", "position", "to", "be", "tweet", "that", "china", "should", "keep", "the", "find", "drone", "."]
(c4-1 / agree-01
      :ARG0 (c4-11 / you)
      :ARG1 (c4-9 / position-01
                  :ARG1 (c4-5 / he)
                  :ARG2 (c4-6 / tweet-01
                              :ARG0 c4-5
                              :ARG1 (c4-7 / recommend-01
                                          :ARG1 (c4-10 / keep-01
                                                       :ARG0 (c4-3 / country
                                                                   :name (c4-8 / name
                                                                               :op1 "China"))
                                                       :ARG1 (c4-0 / drone
                                                                   :ARG1-of (c4-2 / find-01)))))
                  :polarity -)
      :time (c4-4 / then))

# ::snt He can tweet any opinion , but he can't politically enforce it .
# ::tokens ["He", "can", "tweet", "any", "opinion", ",", "but", "he", "ca", "n't", "politically", "enforce", "it", "."]
# ::lemmas ["he", "can", "tweet", "any", "opinion", ",", "but", "he", "can", "not", "politically", "enforce", "it", "."]
(c5-1 / contrast-01
      :ARG1 (c5-8 / possible-01
                  :ARG1 (c5-7 / tweet-02
                              :ARG0 (c5-4 / he)
                              :ARG1 (c5-2 / thing
                                          :ARG1-of (c5-5 / opine-01)
                                          :mod (c5-0 / any))))
      :ARG2 (c5-6 / possible-01
                  :ARG1 (c5-9 / enforce-01
                              :ARG0 c5-4
                              :ARG1 c5-2
                              :manner (c5-3 / politics))
                  :polarity -))

# ::snt But he can't do Christmas tours etc when he is in office , right ? You said " he's not in office "
# ::tokens ["But", "he", "ca", "n't", "do", "Christmas", "tours", "etc", "when", "he", "is", "in", "office", ",", "right", "?", "You", "said", "\"", "he", "'s", "not", "in", "office", "\""]
# ::lemmas ["but", "he", "can", "not", "do", "Christmas", "tour", "etc", "when", "he", "be", "in", "office", ",", "right", "?", "you", "say", "\"", "he", "be", "not", "in", "office", "\""]
(c6-12 / multi-sentence
       :snt1 (c6-4 / contrast-01
                   :ARG2 (c6-11 / possible-01
                                :ARG1 (c6-0 / do-02
                                            :ARG0 (c6-5 / he)
                                            :ARG1 (c6-2 / and
                                                        :op1 (c6-7 / tour
                                                                   :mod (c6-3 / festival
                                                                              :name (c6-13 / name
                                                                                           :op1 "Christmas")))
                                                        :op2 (c6-15 / et-cetera))
                                            :time (c6-9 / be-located-at-91
                                                        :ARG1 c6-5
                                                        :ARG2 (c6-6 / office)))
                                :ARG1-of (c6-8 / request-confirmation-91)
                                :polarity -))
       :snt2 (c6-1 / say-01
                   :ARG0 (c6-14 / you)
                   :ARG1 c6-9
                   :ARG1 (c6-10 / he)
                   :ARG2 c6-6
                   :polarity -))

# ::snt Once in office he should equally acknowledge all .
# ::tokens ["Once", "in", "office", "he", "should", "equally", "acknowledge", "all", "."]
# ::lemmas ["once", "in", "office", "he", "should", "equally", "acknowledge", "all", "."]
(c7-3 / recommend-01
      :ARG1 (c7-0 / acknowledge-01
                  :ARG0 (c7-1 / he)
                  :ARG1 (c7-5 / all)
                  :ARG3-of (c7-6 / equal-01)
                  :time (c7-4 / have-org-role-91
                              :ARG0 c7-1
                              :ARG2 (c7-2 / office))))

# ::snt We wrote this song a couple married this yr & plan a release feb.https
# ::tokens ["We", "wrote", "this", "song", "a", "couple", "married", "this", "yr", "&", "plan", "a", "release", "feb.https"]
# ::lemmas ["we", "write", "this", "song", "a", "couple", "marry", "this", "yr", "&", "plan", "a", "release", "feb.https"]
(c8-1 / and
      :op1 (c8-3 / write-01
                 :ARG0 (c8-10 / we)
                 :ARG1 (c8-0 / song
                             :mod (c8-5 / this)))
      :op2 (c8-8 / marry-01
                 :ARG1 (c8-2 / couple)
                 :time (c8-9 / year
                             :mod (c8-4 / this)))
      :op3 (c8-7 / plan-01
                 :ARG0 c8-2
                 :ARG1 (c8-6 / release-01
                             :ARG0 c8-2)))
