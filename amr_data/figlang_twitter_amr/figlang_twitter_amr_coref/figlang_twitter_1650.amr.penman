# ::snt if i start putting the word ' script ' in inverted commas will that turn me into a wanker
# ::tokens ["if", "i", "start", "putting", "the", "word", "'", "script", "'", "in", "inverted", "commas", "will", "that", "turn", "me", "into", "a", "wanker"]
# ::lemmas ["if", "i", "start", "put", "the", "word", "'", "script", "'", "in", "inverted", "comma", "will", "that", "turn", "i", "into", "a", "wanker"]
(c1-5 / turn-02
      :ARG0 (c1-0 / start-01
                  :ARG0 (c1-8 / i)
                  :ARG1 (c1-6 / put-01
                              :ARG0 c1-8
                              :ARG1 (c1-3 / word
                                          :mod (c1-7 / script))
                              :ARG2 (c1-2 / comma
                                          :ARG1-of (c1-4 / inverted-01))))
      :ARG1 c1-8
      :ARG2 (c1-9 / wanker)
      :polarity (c1-1 / amr-unknown))

# ::snt you could just say " text " ( quotes not included ) . Or is that more wanky ? ARGH !
# ::tokens ["you", "could", "just", "say", "\"", "text", "\"", "(", "quotes", "not", "included", ")", ".", "Or", "is", "that", "more", "wanky", "?", "ARGH", "!"]
# ::lemmas ["you", "could", "just", "say", "\"", "text", "\"", "(", "quote", "not", "include", ")", ".", "or", "be", "that", "more", "wanky", "?", "argh", "!"]
(c2-13 / multi-sentence
       :snt1 (c2-12 / possible-01
                    :ARG1 (c2-0 / say-01
                                :ARG0 (c2-14 / you)
                                :ARG1 (c2-10 / text)
                                :mod (c2-11 / just)
                                :ARG1-of (c2-2 / mean-01
                                               :ARG2 (c2-3 / quote
                                                           :ARG1-of (c2-4 / include-01
                                                                          :polarity -)))))
       :snt2 (c2-9 / or
                   :op2 (c2-5 / wanky
                              :domain (c2-6 / that)
                              :ARG2-of (c2-7 / have-degree-91
                                             :ARG1 c2-6
                                             :ARG3 (c2-8 / more)))
                   :polarity (c2-1 / amr-unknown)
                   :mod (c2-15 / argh
                               :mode expressive)))

# ::snt oh but a text is an entirely different thing to a script
# ::tokens ["oh", "but", "a", "text", "is", "an", "entirely", "different", "thing", "to", "a", "script"]
# ::lemmas ["oh", "but", "a", "text", "be", "an", "entirely", "different", "thing", "to", "a", "script"]
(c3-2 / contrast-01
      :ARG2 (c3-0 / differ-02
                  :ARG1 (c3-4 / text)
                  :ARG2 (c3-1 / script)
                  :degree (c3-5 / entire))
      :mod (c3-3 / oh
                 :mode expressive))

# ::snt text is a level of abstraction too far - ' script ' is very nearly a script
# ::tokens ["text", "is", "a", "level", "of", "abstraction", "too", "far", "-", "'", "script", "'", "is", "very", "nearly", "a", "script"]
# ::lemmas ["text", "be", "a", "level", "of", "abstraction", "too", "far", "-", "'", "script", "'", "be", "very", "nearly", "a", "script"]
(c4-9 / multi-sentence
      :snt1 (c4-4 / have-degree-91
                  :ARG1 (c4-7 / level
                              :mod (c4-1 / abstract)
                              :domain (c4-6 / text))
                  :ARG2 (c4-2 / far)
                  :ARG3 (c4-3 / too))
      :snt2 (c4-0 / script
                  :ARG1-of (c4-10 / near-02
                                  :degree (c4-5 / very))
                  :domain (c4-8 / script)))

# ::snt it was all going so well until you included the
# ::tokens ["it", "was", "all", "going", "so", "well", "until", "you", "included", "the"]
# ::lemmas ["it", "be", "all", "go", "so", "well", "until", "you", "include", "the"]
(c5-5 / go-09
      :ARG1 (c5-6 / it)
      :ARG1-of (c5-2 / well-09
                     :degree (c5-0 / so))
      :time (c5-4 / until
                  :op1 (c5-3 / include-01
                             :ARG0 (c5-7 / you)
                             :ARG1 c5-6))
      :mod (c5-1 / all))
