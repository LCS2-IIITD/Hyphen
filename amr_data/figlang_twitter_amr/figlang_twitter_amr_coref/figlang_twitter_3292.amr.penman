# ::snt Always be kind . If you see someone falling behind , walk beside them . If someone is being ignored , find a way to include them . If someone has been knocked down , lift them up . Always remind people of their worth . Just one small act of kindness could mean the world to someone .
# ::tokens ["Always", "be", "kind", ".", "If", "you", "see", "someone", "falling", "behind", ",", "walk", "beside", "them", ".", "If", "someone", "is", "being", "ignored", ",", "find", "a", "way", "to", "include", "them", ".", "If", "someone", "has", "been", "knocked", "down", ",", "lift", "them", "up", ".", "Always", "remind", "people", "of", "their", "worth", ".", "Just", "one", "small", "act", "of", "kindness", "could", "mean", "the", "world", "to", "someone", "."]
# ::lemmas ["always", "be", "kind", ".", "if", "you", "see", "someone", "fall", "behind", ",", "walk", "beside", "they", ".", "if", "someone", "be", "be", "ignore", ",", "find", "a", "way", "to", "include", "they", ".", "if", "someone", "have", "be", "knock", "down", ",", "lift", "they", "up", ".", "always", "remind", "people", "of", "their", "worth", ".", "just", "one", "small", "act", "of", "kindness", "could", "mean", "the", "world", "to", "someone", "."]
(c1-9 / multi-sentence
      :snt1 (c1-29 / kind-01
                   :ARG0 (c1-16 / you)
                   :time (c1-19 / always)
                   :mode imperative)
      :snt2 (c1-7 / walk-01
                  :ARG0 (c1-17 / you)
                  :ARG2 (c1-26 / beside
                               :op1 (c1-12 / someone))
                  :condition (c1-27 / see-01
                                    :ARG0 c1-17
                                    :ARG1 (c1-20 / fall-01
                                                 :ARG1 c1-12
                                                 :ARG4 (c1-18 / behind)))
                  :mode imperative)
      :snt3 (c1-15 / find-01
                   :ARG0 (c1-0 / you)
                   :ARG1 (c1-10 / way)
                   :condition (c1-2 / ignore-01
                                    :ARG1 (c1-14 / someone))
                   :mode imperative)
      :snt4 (c1-24 / lift-01
                   :ARG0 (c1-13 / you)
                   :ARG1 (c1-3 / someone)
                   :direction (c1-22 / up)
                   :condition (c1-6 / knock-down-02
                                    :ARG1 c1-3)
                   :mode imperative)
      :snt5 (c1-28 / possible-01
                   :ARG1 (c1-21 / mean-01
                                :ARG1 (c1-11 / act-02
                                             :ARG1 (c1-8 / kindness)
                                             :mod (c1-5 / small)
                                             :mod (c1-23 / just)
                                             :quant 1)
                                :ARG2 (c1-4 / world)
                                :ARG3 (c1-25 / someone)))
      :snt6 c1-15
      :ARG0 (c1-1 / you)
      :ARG1 c1-10
      :condition c1-2
      :ARG1 c1-25
      :mode imperative)

# ::snt Fill yourself with beautiful ideas and act with love and kindness to close people . Tasha Tudor <URL>
# ::tokens ["Fill", "yourself", "with", "beautiful", "ideas", "and", "act", "with", "love", "and", "kindness", "to", "close", "people", ".", "Tasha", "Tudor", "<", "URL", ">"]
# ::lemmas ["fill", "yourself", "with", "beautiful", "idea", "and", "act", "with", "love", "and", "kindness", "to", "close", "people", ".", "Tasha", "Tudor", "<", "URL", ">"]
(c2-0 / say-01
      :ARG0 (c2-10 / person
                   :name (c2-11 / name
                                :op1 "Tasha"
                                :op2 "Tudor"))
      :ARG1 (c2-2 / and
                  :op1 (c2-4 / fill-01
                             :ARG0 (c2-12 / you
                                          :ARG1-of c2-4)
                             :ARG2 (c2-5 / idea
                                         :ARG1-of (c2-9 / beautiful-02)))
                  :op2 (c2-13 / act-02
                              :ARG0 c2-12
                              :manner (c2-1 / and
                                            :op1 (c2-8 / love-01)
                                            :op2 (c2-3 / kind-01))
                              :purpose (c2-6 / close-01
                                             :ARG0 c2-12
                                             :ARG1 (c2-7 / person))))
      :ARG2 c2-12)
