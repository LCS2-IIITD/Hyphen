# ::snt Tannehill . -7 . Ceiling . I ll . Say . It . Again . . And . . Love the dude . But he isn t Nashville s savior they are making him out to be .
# ::tokens ["Tannehill", ".", "-7", ".", "Ceiling", ".", "I", "ll", ".", "Say", ".", "It", ".", "Again", ".", ".", "And", ".", ".", "Love", "the", "dude", ".", "But", "he", "isn", "t", "Nashville", "s", "savior", "they", "are", "making", "him", "out", "to", "be", "."]
# ::lemmas ["tannehill", ".", "-7", ".", "ceiling", ".", "i", "ll", ".", "say", ".", "it", ".", "again", ".", ".", "and", ".", ".", "love", "the", "dude", ".", "but", "he", "isn", "t", "Nashville", "s", "savior", "they", "be", "make", "he", "out", "to", "be", "."]
(c1-13 / multi-sentence
       :snt1 (c1-12 / person
                    :name (c1-14 / name
                                 :op1 "Tannehill"))
       :snt2 (c1-3 / and
                   :op1 (c1-4 / ceiling)
                   :op2 (c1-0 / say-01
                              :ARG0 (c1-5 / i)
                              :ARG1 c1-4)
                   :op3 (c1-15 / et-cetera)
                   :snt3-of c1-13)
       :op2 (c1-10 / love-01
                   :ARG1 (c1-1 / dude))
       :snt4 (c1-2 / contrast-01
                   :ARG2 (c1-11 / savior
                                :domain c1-1
                                :ARG2-of (c1-6 / make-out-23
                                               :ARG0 (c1-8 / they)
                                               :ARG1 c1-1)
                                :location (c1-7 / city
                                                :name (c1-9 / name
                                                            :op1 "Nashville"))
                                :polarity -)))

# ::snt Tannyhill isn't the one letting NO return kickoffs to midfield and then score with minimal resistance ... just sayin .
# ::tokens ["Tannyhill", "is", "n't", "the", "one", "letting", "NO", "return", "kickoffs", "to", "midfield", "and", "then", "score", "with", "minimal", "resistance", "...", "just", "sayin", "."]
# ::lemmas ["Tannyhill", "be", "not", "the", "one", "let", "no", "return", "kickoff", "to", "midfield", "and", "then", "score", "with", "minimal", "resistance", "...", "just", "sayin", "."]
(c2-12 / multi-sentence
       :snt1 (c2-8 / let-01
                   :ARG0 (c2-11 / person
                                :name (c2-13 / name
                                             :op1 "Tannyhill"))
                   :ARG1 (c2-1 / and
                               :op1 (c2-2 / kick-off-04
                                          :ARG1-of (c2-7 / return-01)
                                          :destination (c2-3 / midfield)
                                          :polarity -)
                               :op2 (c2-0 / score-01
                                          :ARG0 c2-11
                                          :manner (c2-4 / resist-01
                                                        :ARG0 c2-11
                                                        :ARG1-of (c2-5 / minimal-02))
                                          :time (c2-6 / then)))
                   :polarity -)
       :snt2 (c2-10 / say-01
                    :mod (c2-9 / just)))

# ::snt For sure . Tannehill has never won more than games in a season , fwiw .
# ::tokens ["For", "sure", ".", "Tannehill", "has", "never", "won", "more", "than", "games", "in", "a", "season", ",", "fwiw", "."]
# ::lemmas ["for", "sure", ".", "Tannehill", "have", "never", "win", "more", "than", "game", "in", "a", "season", ",", "fwiw", "."]
(c3-7 / multi-sentence
      :snt1 (c3-0 / sure-02)
      :snt2 (c3-2 / win-01
                  :ARG0 (c3-6 / person
                              :name (c3-8 / name
                                          :op1 "Tannehill"))
                  :time (c3-9 / ever)
                  :ARG1-of (c3-3 / have-quant-91
                                 :ARG3 (c3-1 / more)
                                 :ARG4 (c3-4 / game))
                  :duration (c3-5 / season)
                  :polarity -))

# ::snt Well he just " managed " his rd TD pass of the day with a laser to Sharpe in the back of the endzone to pull back within , so I guess I'll just be happy we got him .
# ::tokens ["Well", "he", "just", "\"", "managed", "\"", "his", "rd", "TD", "pass", "of", "the", "day", "with", "a", "laser", "to", "Sharpe", "in", "the", "back", "of", "the", "endzone", "to", "pull", "back", "within", ",", "so", "I", "guess", "I", "'ll", "just", "be", "happy", "we", "got", "him", "."]
# ::lemmas ["well", "he", "just", "\"", "manage", "\"", "his", "rd", "TD", "pass", "of", "the", "day", "with", "a", "laser", "to", "Sharpe", "in", "the", "back", "of", "the", "endzone", "to", "pull", "back", "within", ",", "so", "i", "guess", "i", "'ll", "just", "be", "happy", "we", "get", "he", "."]
(c4-5 / cause-01
      :ARG0 (c4-9 / manage-02
                  :ARG0 (c4-16 / he)
                  :ARG1 (c4-21 / pass-03
                               :ARG0 c4-16
                               :mod (c4-17 / product
                                           :name (c4-10 / name
                                                        :op1 "TD"))
                               :ord (c4-7 / ordinal-entity
                                          :value 2)
                               :time (c4-0 / day))
                  :mod (c4-20 / just)
                  :instrument (c4-18 / laser)
                  :destination (c4-14 / person
                                      :name (c4-1 / name
                                                  :op1 "Sharpe")
                                      :location (c4-19 / back
                                                       :part-of (c4-12 / endzone)))
                  :purpose (c4-13 / pull-01
                                  :ARG0 c4-16
                                  :ARG2 (c4-6 / within)
                                  :direction c4-19))
      :ARG1 (c4-8 / guess-01
                  :ARG0 (c4-3 / i)
                  :ARG1 (c4-2 / happy-01
                              :ARG0 (c4-15 / get-02
                                           :ARG0 (c4-11 / we)
                                           :ARG1 c4-16)
                              :ARG1 c4-3
                              :mod (c4-22 / just)))
      :mod (c4-4 / well))
