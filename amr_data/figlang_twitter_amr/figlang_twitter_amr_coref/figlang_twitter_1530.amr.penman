# ::snt absolutely love being squashed on a train with no seat and no space to move after a long day at work . <URL>
# ::tokens ["absolutely", "love", "being", "squashed", "on", "a", "train", "with", "no", "seat", "and", "no", "space", "to", "move", "after", "a", "long", "day", "at", "work", ".", "<", "URL", ">"]
# ::lemmas ["absolutely", "love", "be", "squash", "on", "a", "train", "with", "no", "seat", "and", "no", "space", "to", "move", "after", "a", "long", "day", "at", "work", ".", "<", "URL", ">"]
(c1-8 / love-01
      :ARG1 (c1-0 / squash-01
                  :ARG1 (c1-7 / train
                              :ARG0-of (c1-5 / have-03
                                             :ARG1 (c1-3 / and
                                                         :op1 (c1-10 / seat)
                                                         :op2 (c1-6 / space
                                                                    :purpose (c1-11 / move-01
                                                                                    :ARG1 c1-7)))
                                             :polarity -))
                  :time (c1-12 / after
                               :op1 (c1-1 / day
                                          :ARG1-of (c1-9 / long-03)
                                          :time-of (c1-4 / work-01))))
      :degree (c1-2 / absolute))

# ::snt Any reason why the Cardiff to Ebbw Vale train is so horrifically overcrowded every night ?
# ::tokens ["Any", "reason", "why", "the", "Cardiff", "to", "Ebbw", "Vale", "train", "is", "so", "horrifically", "overcrowded", "every", "night", "?"]
# ::lemmas ["any", "reason", "why", "the", "Cardiff", "to", "Ebbw", "Vale", "train", "be", "so", "horrifically", "overcrowded", "every", "night", "?"]
(c2-3 / cause-01
      :ARG0 (c2-10 / reason
                   :mod (c2-2 / any))
      :ARG1 (c2-7 / overcrowd-00
                  :ARG1 (c2-9 / train
                              :direction (c2-0 / city
                                               :name (c2-12 / name
                                                            :op1 "Cardiff"))
                              :destination (c2-5 / city
                                                 :name (c2-11 / name
                                                              :op1 "Ebbw"
                                                              :op2 " Vale")))
                  :frequency (c2-6 / rate-entity-91
                                   :ARG3 (c2-1 / date-entity
                                               :dayperiod (c2-8 / night)))
                  :degree (c2-4 / horrific))
      :polarity (c2-13 / amr-unknown))

# ::snt Are you just copying and pasting this to every customer that makes a serious point ? Great service
# ::tokens ["Are", "you", "just", "copying", "and", "pasting", "this", "to", "every", "customer", "that", "makes", "a", "serious", "point", "?", "Great", "service"]
# ::lemmas ["be", "you", "just", "copy", "and", "paste", "this", "to", "every", "customer", "that", "make", "a", "serious", "point", "?", "great", "service"]
(c3-10 / multi-sentence
       :snt1 (c3-3 / and
                   :op1 (c3-4 / copy-01
                              :ARG0 (c3-11 / you)
                              :ARG1 (c3-6 / this)
                              :ARG2 (c3-0 / customer
                                          :mod (c3-13 / every)
                                          :ARG0-of (c3-9 / point-04
                                                         :ARG1-of (c3-1 / serious-01))))
                   :op2 (c3-5 / paste-01
                              :ARG0 c3-11
                              :ARG1 c3-6
                              :ARG2 c3-0)
                   :mod (c3-8 / just)
                   :polarity (c3-12 / amr-unknown))
       :snt2 (c3-2 / serve-01
                   :mod (c3-7 / great)))

# ::snt No I'm not it is the reason why the are so many services with less carriages than normal ^ Jane
# ::tokens ["No", "I", "'m", "not", "it", "is", "the", "reason", "why", "the", "are", "so", "many", "services", "with", "less", "carriages", "than", "normal", "^", "Jane"]
# ::lemmas ["no", "i", "be", "not", "it", "be", "the", "reason", "why", "the", "be", "so", "many", "service", "with", "less", "carriage", "than", "normal", "^", "Jane"]
(c4-13 / multi-sentence
       :snt1 (c4-6 / have-polarity-91
                   :ARG1 (c4-12 / i)
                   :ARG2 -)
       :snt2 (c4-4 / cause-01
                   :ARG0 (c4-7 / it)
                   :ARG1 (c4-11 / have-quant-91
                                :ARG1 (c4-0 / service
                                            :ARG0-of (c4-1 / have-03
                                                           :ARG1 (c4-2 / carriage
                                                                       :ARG1-of c4-11
                                                                       :ARG3 (c4-9 / less)
                                                                       :ARG4 (c4-14 / normal-02)))))
                   :ARG2 (c4-5 / many)
                   :ARG3 (c4-3 / so))
       :snt3 (c4-10 / person
                    :name (c4-8 / name
                                :op1 "Jane")))

# ::snt Arriva Trains are a total shambles . People should contact their AM and tell them not to renew the franchise
# ::tokens ["Arriva", "Trains", "are", "a", "total", "shambles", ".", "People", "should", "contact", "their", "AM", "and", "tell", "them", "not", "to", "renew", "the", "franchise"]
# ::lemmas ["Arriva", "Trains", "be", "a", "total", "shamble", ".", "people", "should", "contact", "their", "am", "and", "tell", "they", "not", "to", "renew", "the", "franchise"]
(c5-13 / multi-sentence
       :snt1 (c5-0 / shambles
                   :domain (c5-4 / company
                                 :name (c5-14 / name
                                              :op1 "Arriva"
                                              :op2 "Trains"))
                   :degree (c5-9 / total))
       :snt2 (c5-10 / recommend-01
                    :ARG1 (c5-2 / and
                                :op1 (c5-1 / contact-01
                                           :ARG0 (c5-12 / person)
                                           :ARG1 (c5-8 / person
                                                       :ARG0-of (c5-6 / have-rel-role-91
                                                                      :ARG1 c5-4
                                                                      :ARG2 (c5-11 / significant-other))))
                                :op2 (c5-5 / tell-01
                                           :ARG0 c5-12
                                           :ARG1 (c5-7 / renew-01
                                                       :ARG0 c5-8
                                                       :ARG1 (c5-3 / franchise)
                                                       :polarity -)
                                           :ARG2 c5-8))
                    :ARG2 c5-8))

# ::snt It's an absolute joke , thousands of people held at ransom to excuse after excuse , it's not even funny anymore .
# ::tokens ["It", "'s", "an", "absolute", "joke", ",", "thousands", "of", "people", "held", "at", "ransom", "to", "excuse", "after", "excuse", ",", "it", "'s", "not", "even", "funny", "anymore", "."]
# ::lemmas ["it", "be", "an", "absolute", "joke", ",", "thousands", "of", "people", "hold", "at", "ransom", "to", "excuse", "after", "excuse", ",", "it", "be", "not", "even", "funny", "anymore", "."]
(c6-1 / and
      :op1 (c6-8 / joke-01
                 :ARG2 (c6-9 / it)
                 :mod (c6-11 / absolute))
      :op2 (c6-3 / hold-01
                 :ARG1 (c6-7 / person
                             :quant (c6-10 / multiple
                                           :op1 1000))
                 :purpose (c6-12 / excuse-02
                                 :ARG0 c6-7
                                 :time (c6-0 / after
                                             :op1 (c6-4 / excuse-02
                                                        :ARG0 c6-7))))
      :op3 (c6-2 / funny
                 :domain c6-9
                 :mod (c6-5 / even)
                 :time (c6-6 / anymore)
                 :polarity -))

# ::snt There is little alternative travel wise and Arriva know it which is why they provide such a terrible service
# ::tokens ["There", "is", "little", "alternative", "travel", "wise", "and", "Arriva", "know", "it", "which", "is", "why", "they", "provide", "such", "a", "terrible", "service"]
# ::lemmas ["there", "be", "little", "alternative", "travel", "wise", "and", "Arriva", "know", "it", "which", "be", "why", "they", "provide", "such", "a", "terrible", "service"]
(c7-2 / and
      :op1 (c7-5 / travel-01
                 :mod (c7-11 / alternative)
                 :quant (c7-6 / little))
      :op2 (c7-10 / know-01
                  :ARG0 (c7-3 / company
                              :name (c7-9 / name
                                          :op1 "Arrivalva"))
                  :ARG1 c7-5
                  :ARG0-of (c7-0 / cause-01
                                 :ARG1 (c7-7 / provide-01
                                             :ARG0 c7-3
                                             :ARG1 (c7-1 / service
                                                         :ARG1-of (c7-4 / terrible-01
                                                                        :degree (c7-8 / such)))))))

# ::snt % agree , The number of people who can't get on the trains is awful . How packed they are must be unsafe !
# ::tokens ["%", "agree", ",", "The", "number", "of", "people", "who", "ca", "n't", "get", "on", "the", "trains", "is", "awful", ".", "How", "packed", "they", "are", "must", "be", "unsafe", "!"]
# ::lemmas ["%", "agree", ",", "the", "number", "of", "people", "who", "can", "not", "get", "on", "the", "train", "be", "awful", ".", "how", "pack", "they", "be", "must", "be", "unsafe", "!"]
(c8-10 / multi-sentence
       :snt1 (c8-1 / agree-01
                   :ARG0 (c8-9 / percentage-entity
                               :value 90)
                   :ARG1 (c8-12 / awful
                                :domain (c8-11 / number
                                               :quant-of (c8-5 / person
                                                               :ARG1-of (c8-7 / get-05
                                                                              :ARG2 (c8-6 / train)
                                                                              :ARG1-of (c8-4 / possible-01
                                                                                             :polarity -))))))
       :snt2 (c8-2 / infer-01
                   :ARG1 (c8-0 / safe-01
                               :ARG0 (c8-3 / they)
                               :degree (c8-8 / so)
                               :polarity -)))
