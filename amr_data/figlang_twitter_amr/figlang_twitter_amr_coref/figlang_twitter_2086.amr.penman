# ::snt Well done tick machine working at Tottenham Hale . Going to miss my train . <URL>
# ::tokens ["Well", "done", "tick", "machine", "working", "at", "Tottenham", "Hale", ".", "Going", "to", "miss", "my", "train", ".", "<", "URL", ">"]
# ::lemmas ["well", "do", "tick", "machine", "work", "at", "Tottenham", "Hale", ".", "go", "to", "miss", "my", "train", ".", "<", "URL", ">"]
(c1-8 / multi-sentence
      :snt1 (c1-2 / work-01
                  :ARG1 (c1-1 / machine
                              :mod (c1-5 / tick))
                  :ARG1-of (c1-0 / do-02
                                 :ARG1-of (c1-10 / well-09))
                  :location (c1-6 / location
                                  :name (c1-9 / name
                                              :op1 "Tottenham"
                                              :op2 "Hale")))
      :snt2 (c1-4 / miss-02
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-3 / train
                              :poss c1-7)))

# ::snt and your man on the gate won't help the passengers who can't figure out how to get a ticket to Stansted as he's " on the gate "
# ::tokens ["and", "your", "man", "on", "the", "gate", "wo", "n't", "help", "the", "passengers", "who", "ca", "n't", "figure", "out", "how", "to", "get", "a", "ticket", "to", "Stansted", "as", "he", "'s", "\"", "on", "the", "gate", "\""]
# ::lemmas ["and", "your", "man", "on", "the", "gate", "will", "not", "help", "the", "passenger", "who", "can", "not", "figure", "out", "how", "to", "get", "a", "ticket", "to", "stanste", "as", "he", "be", "\"", "on", "the", "gate", "\""]
(c2-1 / and
      :op2 (c2-4 / help-01
                 :ARG0 (c2-10 / man
                              :location (c2-8 / gate)
                              :poss (c2-12 / you))
                 :ARG1 (c2-9 / passenger
                             :ARG0-of (c2-2 / figure-out-05
                                            :ARG1 (c2-7 / ticket
                                                        :destination (c2-3 / company
                                                                           :name (c2-11 / name
                                                                                        :op1 "Stansted")))
                                            :ARG1-of (c2-6 / possible-01
                                                           :polarity -)))
                 :ARG1-of (c2-0 / cause-01
                                :ARG0 (c2-5 / be-located-at-91
                                            :ARG1 c2-10
                                            :ARG2 c2-8))
                 :polarity -))

# ::snt so missed my train and the one after ! Not acceptable turning up minutes early and not being able to buy a ticket .
# ::tokens ["so", "missed", "my", "train", "and", "the", "one", "after", "!", "Not", "acceptable", "turning", "up", "minutes", "early", "and", "not", "being", "able", "to", "buy", "a", "ticket", "."]
# ::lemmas ["so", "miss", "my", "train", "and", "the", "one", "after", "!", "not", "acceptable", "turn", "up", "minute", "early", "and", "not", "be", "able", "to", "buy", "a", "ticket", "."]
(c3-5 / multi-sentence
      :snt1 (c3-15 / miss-02
                   :ARG0 (c3-1 / i)
                   :ARG1 (c3-13 / and
                                :op1 (c3-3 / train
                                           :poss c3-1)
                                :op2 (c3-2 / train
                                           :time (c3-7 / after)))
                   :degree (c3-9 / so))
      :snt2 (c3-17 / possible-01
                   :ARG1 (c3-0 / accept-01
                               :ARG1 (c3-18 / and
                                            :op1 (c3-6 / turn-up-15
                                                       :ARG1 (c3-10 / i)
                                                       :time (c3-8 / early
                                                                   :op1 (c3-12 / multiple
                                                                               :op1 (c3-11 / temporal-quantity
                                                                                           :unit (c3-4 / minute)
                                                                                           :quant 1))))
                                            :op2 c3-17
                                            :ARG1 (c3-16 / buy-01
                                                         :ARG0 c3-10
                                                         :ARG1 (c3-14 / ticket))
                                            :polarity -))
                   :polarity -))
