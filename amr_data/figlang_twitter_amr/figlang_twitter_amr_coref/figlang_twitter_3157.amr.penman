# ::snt Exit polling in Pennsylvania had Clinton winning by . It's currently a dead-heat .
# ::tokens ["Exit", "polling", "in", "Pennsylvania", "had", "Clinton", "winning", "by", ".", "It", "'s", "currently", "a", "dead", "-", "heat", "."]
# ::lemmas ["Exit", "polling", "in", "Pennsylvania", "have", "Clinton", "win", "by", ".", "it", "be", "currently", "a", "dead", "-", "heat", "."]
(c1-10 / multi-sentence
       :snt1 (c1-5 / have-03
                   :ARG0 (c1-9 / poll-01
                               :mod (c1-12 / exit-01)
                               :location (c1-0 / state
                                               :name (c1-11 / name
                                                            :op1 "Pennsylvania")))
                   :ARG1 (c1-3 / win-01
                               :ARG0 (c1-6 / person
                                           :name (c1-7 / name
                                                       :op1 "Clinton"))))
       :snt2 (c1-8 / heat
                   :ARG1-of (c1-1 / die-01)
                   :domain (c1-2 / it)
                   :time (c1-4 / current)))

# ::snt All of tonight's exit polls were wrong , and I was wrong for citing them .
# ::tokens ["All", "of", "tonight", "'s", "exit", "polls", "were", "wrong", ",", "and", "I", "was", "wrong", "for", "citing", "them", "."]
# ::lemmas ["all", "of", "tonight", "'s", "exit", "poll", "be", "wrong", ",", "and", "i", "be", "wrong", "for", "cite", "they", "."]
(c2-1 / and
      :op1 (c2-3 / wrong-04
                 :ARG1 (c2-7 / poll-01
                             :time (c2-10 / exit-01)
                             :time (c2-0 / date-entity
                                         :dayperiod (c2-8 / night)
                                         :mod (c2-6 / today))
                             :mod (c2-9 / all)))
      :op2 (c2-4 / wrong-04
                 :ARG1 (c2-2 / i)
                 :ARG2 (c2-5 / cite-01
                             :ARG0 c2-2
                             :ARG1 c2-7)))
