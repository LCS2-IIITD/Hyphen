# ::snt Justin Holl really good again tonight . Telling you , better get this guy signed .
# ::tokens ["Justin", "Holl", "really", "good", "again", "tonight", ".", "Telling", "you", ",", "better", "get", "this", "guy", "signed", "."]
# ::lemmas ["Justin", "Holl", "really", "good", "again", "tonight", ".", "tell", "you", ",", "well", "get", "this", "guy", "sign", "."]
(c1-12 / multi-sentence
       :snt1 (c1-10 / good-02
                    :ARG1 (c1-11 / person
                                 :name (c1-13 / name
                                              :op1 "Justin"
                                              :op2 "Holl"))
                    :degree (c1-7 / really)
                    :mod (c1-3 / again)
                    :time (c1-0 / date-entity
                                :dayperiod (c1-8 / night)
                                :mod (c1-6 / today)))
       :snt2 (c1-5 / recommend-01
                   :ARG1 (c1-14 / get-04
                                :ARG1 (c1-1 / sign-02
                                            :ARG1 (c1-2 / guy
                                                        :mod (c1-4 / this))))
                   :ARG2 (c1-9 / you)))

# ::snt Why waste the money . Let s bring back Babcock ? B / c he wasn t the problem
# ::tokens ["Why", "waste", "the", "money", ".", "Let", "s", "bring", "back", "Babcock", "?", "B", "/", "c", "he", "wasn", "t", "the", "problem"]
# ::lemmas ["why", "waste", "the", "money", ".", "let", "s", "bring", "back", "Babcock", "?", "b", "/", "c", "he", "wasn", "t", "the", "problem"]
(c2-10 / multi-sentence
       :snt1 (c2-4 / waste-01
                   :ARG1 (c2-5 / money)
                   :ARG1-of (c2-3 / cause-01
                                  :ARG0 (c2-2 / amr-unknown)))
       :snt2 (c2-7 / let-01
                   :ARG1 (c2-8 / bring-01
                               :ARG0 (c2-12 / we)
                               :ARG1 (c2-9 / person
                                           :name (c2-11 / name
                                                        :op1 "Babcock"))
                               :direction (c2-1 / back)
                               :ARG1-of (c2-0 / cause-01
                                              :ARG0 (c2-6 / problem
                                                          :domain c2-9
                                                          :polarity -)))))
