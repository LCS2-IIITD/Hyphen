# ::snt MOMENTS AGO : President Trump issues executive order directing all federal agencies to seek out and eliminate regula <URL>
# ::tokens ["MOMENTS", "AGO", ":", "President", "Trump", "issues", "executive", "order", "directing", "all", "federal", "agencies", "to", "seek", "out", "and", "eliminate", "regula", "<", "URL", ">"]
# ::lemmas ["moment", "AGO", ":", "President", "Trump", "issue", "executive", "order", "direct", "all", "federal", "agency", "to", "seek", "out", "and", "eliminate", "regula", "<", "URL", ">"]
(c1-13 / issue-01
       :ARG0 (c1-11 / person
                    :name (c1-14 / name
                                 :op1 "Trump")
                    :ARG0-of (c1-5 / have-org-role-91
                                   :ARG2 (c1-8 / president)))
       :ARG1 (c1-7 / order-01
                   :ARG0 c1-11
                   :ARG1 (c1-0 / direct-01
                               :ARG0 c1-11
                               :ARG1 (c1-3 / agency
                                           :mod (c1-4 / federal)
                                           :mod (c1-15 / all))
                               :ARG2 (c1-1 / and
                                           :op1 (c1-2 / seek-out-02
                                                      :ARG0 c1-3
                                                      :ARG1 (c1-12 / law
                                                                   :name (c1-10 / name
                                                                                :op1 "Enforcement"
                                                                                :op2 "Agency")))
                                           :op2 (c1-16 / eliminate-01
                                                       :ARG0 c1-3
                                                       :ARG1 c1-12)))
                   :mod (c1-6 / executive))
       :time (c1-9 / ahead))

# ::snt facts , critical thinking , Root cause analysis ALL MATTERS . What did Pres O inherit from Bush ? He saved the eco .
# ::tokens ["facts", ",", "critical", "thinking", ",", "Root", "cause", "analysis", "ALL", "MATTERS", ".", "What", "did", "Pres", "O", "inherit", "from", "Bush", "?", "He", "saved", "the", "eco", "."]
# ::lemmas ["fact", ",", "critical", "thinking", ",", "Root", "cause", "you", "all", "matter", ".", "what", "do", "Pres", "o", "inherit", "from", "Bush", "?", "he", "save", "the", "eco", "."]
(c2-9 / multi-sentence
      :snt1 (c2-7 / threaten-01
                  :ARG0 (c2-15 / and
                               :op1 (c2-16 / fact)
                               :op2 (c2-6 / think-01
                                          :manner (c2-5 / criticism-04))
                               :op3 (c2-11 / analyze-01
                                           :ARG1 (c2-8 / root-02
                                                       :ARG1 (c2-0 / cause)))
                               :mod (c2-1 / all)))
      :snt2 (c2-4 / inherit-01
                  :ARG0 (c2-19 / person
                               :name (c2-10 / name
                                            :op1 "Obama")
                               :ARG0-of (c2-17 / have-org-role-91
                                               :ARG2 (c2-18 / president)))
                  :ARG1 (c2-20 / amr-unknown)
                  :ARG2 (c2-14 / person
                               :name (c2-2 / name
                                           :op1 "Bush")))
      :snt3 (c2-13 / save-02
                   :ARG0 (c2-3 / he)
                   :ARG1 (c2-12 / ecology)))

# ::snt If Obama saved the economy , why was GDP so low throughout his years , and why were jobs not first priority .
# ::tokens ["If", "Obama", "saved", "the", "economy", ",", "why", "was", "GDP", "so", "low", "throughout", "his", "years", ",", "and", "why", "were", "jobs", "not", "first", "priority", "."]
# ::lemmas ["if", "Obama", "save", "the", "economy", ",", "why", "be", "gdp", "so", "low", "throughout", "his", "years", ",", "and", "why", "be", "job", "not", "first", "priority", "."]
(c3-3 / and
      :op1 (c3-10 / low-04
                  :ARG1 (c3-13 / product
                               :ARG1-of (c3-11 / gross-03)
                               :mod (c3-0 / domestic))
                  :degree (c3-1 / so)
                  :time (c3-15 / year
                               :poss (c3-9 / person
                                           :name (c3-14 / name
                                                        :op1 "Obama")))
                  :ARG1-of (c3-6 / cause-01
                                 :ARG0 (c3-16 / amr-unknown)))
      :op2 (c3-7 / priority
                 :ord (c3-8 / ordinal-entity
                            :value 1)
                 :domain (c3-12 / job)
                 :ARG1-of (c3-2 / cause-01
                                :ARG0 (c3-4 / amr-unknown))
                 :polarity -)
      :condition (c3-5 / save-02
                       :ARG0 c3-9
                       :ARG1 (c3-17 / economy)))

# ::snt please , not enough charac . on twit to give you . Repubs did not support and killed props that ult had to do w jobs
# ::tokens ["please", ",", "not", "enough", "charac", ".", "on", "twit", "to", "give", "you", ".", "Repubs", "did", "not", "support", "and", "killed", "props", "that", "ult", "had", "to", "do", "w", "jobs"]
# ::lemmas ["please", ",", "not", "enough", "charac", ".", "on", "twit", "to", "give", "you", ".", "Repubs", "do", "not", "support", "and", "kill", "prop", "that", "ult", "have", "to", "do", "w", "job"]
(c4-12 / multi-sentence
       :snt1 (c4-5 / have-quant-91
                   :ARG1 (c4-4 / charac
                               :location (c4-8 / twit))
                   :ARG3 (c4-15 / enough)
                   :ARG6 (c4-9 / give-01
                               :ARG0 (c4-14 / you)
                               :ARG1 c4-4)
                   :polarity -
                   :polite +)
       :snt2 (c4-2 / and
                   :op1 (c4-0 / support-01
                              :ARG0 (c4-11 / political-party
                                           :name (c4-13 / name
                                                        :op1 "Republican"))
                              :ARG1 (c4-7 / prop
                                          :ARG0-of (c4-1 / do-02
                                                         :ARG1 (c4-10 / job)
                                                         :ARG2 (c4-6 / ult)))
                              :polarity -)
                   :op2 (c4-3 / kill-01
                              :ARG0 c4-11
                              :ARG1 c4-7
                              :polarity -)))

# ::snt Nice try . I'm an independent . I deal only in facts ; and of course your wrong ! Go do some research & learn !
# ::tokens ["Nice", "try", ".", "I", "'m", "an", "independent", ".", "I", "deal", "only", "in", "facts", ";", "and", "of", "course", "your", "wrong", "!", "Go", "do", "some", "research", "&", "learn", "!"]
# ::lemmas ["nice", "try", ".", "i", "be", "an", "independent", ".", "i", "deal", "only", "in", "fact", ";", "and", "of", "course", "your", "wrong", "!", "go", "do", "some", "research", "&", "learn", "!"]
(c5-13 / multi-sentence
       :snt1 (c5-8 / try-01
                   :ARG1-of (c5-14 / nice-01))
       :snt2 (c5-12 / independent
                    :domain (c5-5 / i))
       :snt3 (c5-0 / deal-01
                   :ARG0 c5-5
                   :ARG2 (c5-3 / fact)
                   :mod (c5-7 / only))
       :snt4 (c5-4 / wrong-04
                   :ARG1 (c5-15 / you)
                   :mod (c5-6 / of-course))
       :snt5 (c5-11 / go-05
                    :ARG0 c5-15
                    :ARG1 (c5-2 / and
                                :op1 (c5-9 / research-01
                                           :ARG0 c5-15
                                           :quant (c5-1 / some))
                                :op2 (c5-10 / learn-01
                                            :ARG0 c5-15))
                    :mode imperative))

# ::snt ... speaking of wrong ... ok ... ck your tweet , I believe ' your ' is actually wrong . Try ' you're / you are '
# ::tokens ["...", "speaking", "of", "wrong", "...", "ok", "...", "ck", "your", "tweet", ",", "I", "believe", "'", "your", "'", "is", "actually", "wrong", ".", "Try", "'", "you", "'re", "/", "you", "are", "'"]
# ::lemmas ["...", "speak", "of", "wrong", "...", "ok", "...", "ck", "your", "tweet", ",", "i", "believe", "'", "your", "'", "be", "actually", "wrong", ".", "try", "'", "you", "be", "/", "you", "be", "'"]
(c6-12 / multi-sentence
       :snt1 (c6-0 / speak-01
                   :ARG1 (c6-5 / wrong-02))
       :snt2 (c6-7 / okay-01
                   :ARG1 (c6-4 / censor-01
                               :ARG0 (c6-13 / you)
                               :ARG1 (c6-8 / tweet-02
                                           :ARG0 c6-13)
                               :mode imperative))
       :snt3 (c6-9 / believe-01
                   :ARG0 (c6-11 / i)
                   :ARG1 (c6-14 / wrong-02
                                :ARG1 (c6-3 / you)
                                :ARG1-of (c6-2 / actual-02)))
       :snt4 (c6-6 / try-01
                   :ARG0 (c6-1 / you)
                   :ARG1 (c6-10 / slash
                                :op1 c6-1
                                :op2 c6-3)
                   :mode imperative))

# ::snt when one loses and argument always revert to correcting grammar
# ::tokens ["when", "one", "loses", "and", "argument", "always", "revert", "to", "correcting", "grammar"]
# ::lemmas ["when", "one", "lose", "and", "argument", "always", "revert", "to", "correct", "grammar"]
(c7-4 / revert-01
      :ARG1 (c7-3 / one)
      :ARG2 (c7-2 / correct-01
                  :ARG0 c7-3
                  :ARG1 (c7-6 / grammar))
      :time (c7-1 / and
                  :op1 (c7-5 / lose-03
                             :ARG0 c7-3)
                  :op2 (c7-7 / argue-01
                             :ARG0 c7-3))
      :time (c7-0 / always))
