# ::snt - congratulations to Helen Martin but is this = to Turner , Ruskin , even Holman Hunt - of course not
# ::tokens ["-", "congratulations", "to", "Helen", "Martin", "but", "is", "this", "=", "to", "Turner", ",", "Ruskin", ",", "even", "Holman", "Hunt", "-", "of", "course", "not"]
# ::lemmas ["-", "congratulation", "to", "Helen", "Martin", "but", "be", "this", "=", "to", "Turner", ",", "Ruskin", ",", "even", "Holman", "Hunt", "-", "of", "course", "not"]
(c1-3 / contrast-01
      :ARG1 (c1-0 / congratulate-01
                  :ARG1 (c1-12 / person
                               :name (c1-13 / name
                                            :op1 "Helen"
                                            :op2 "Martin")))
      :ARG2 (c1-14 / equal-01
                   :ARG1 c1-0
                   :ARG2 (c1-7 / congratulate-01
                               :ARG1 (c1-1 / and
                                           :op1 (c1-9 / person
                                                      :name (c1-11 / name
                                                                   :op1 "Turner"))
                                           :op2 (c1-5 / person
                                                      :name (c1-8 / name
                                                                  :op1 "Ruskin"))
                                           :op3 (c1-4 / person
                                                      :name (c1-2 / name
                                                                  :op1 "Holman"
                                                                  :op2 "Hunt")
                                                      :mod (c1-6 / even))))
                   :mod (c1-10 / of-course)
                   :polarity -))

# ::snt . pop into our publicly-funded offices any time & I'll happily give you an idiot's crash course on art c . onwards
# ::tokens [".", "pop", "into", "our", "publicly", "-", "funded", "offices", "any", "time", "&", "I", "'ll", "happily", "give", "you", "an", "idiot", "'s", "crash", "course", "on", "art", "c", ".", "onwards"]
# ::lemmas [".", "pop", "into", "our", "publicly", "-", "fund", "office", "any", "time", "&", "i", "'ll", "happily", "give", "you", "an", "idiot", "'s", "crash", "course", "on", "art", "c", ".", "onwards"]
(c2-2 / and
      :op1 (c2-14 / pop-02
                  :ARG0 (c2-15 / you)
                  :ARG1 (c2-10 / office
                               :poss (c2-5 / we)
                               :ARG1-of (c2-3 / fund-01
                                              :ARG1-of (c2-11 / public-02)))
                  :time (c2-12 / time
                               :mod (c2-16 / any))
                  :mode imperative)
      :op2 (c2-13 / give-01
                  :ARG0 (c2-4 / i)
                  :ARG1 (c2-6 / course-91
                              :ARG1 (c2-0 / crash-01)
                              :ARG2 (c2-7 / idiot)
                              :topic (c2-1 / art)
                              :time (c2-8 / onwards))
                  :ARG2 c2-15
                  :ARG2-of (c2-9 / happy-01)))
