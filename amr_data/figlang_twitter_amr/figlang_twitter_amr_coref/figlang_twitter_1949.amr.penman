# ::snt It feels like a strange and slightly sad old guy yelling at you to get off his lawn , echoed by younger but no less sad people in red hats shouting , Yeah , get off his lawn ! <URL>
# ::tokens ["It", "feels", "like", "a", "strange", "and", "slightly", "sad", "old", "guy", "yelling", "at", "you", "to", "get", "off", "his", "lawn", ",", "echoed", "by", "younger", "but", "no", "less", "sad", "people", "in", "red", "hats", "shouting", ",", "Yeah", ",", "get", "off", "his", "lawn", "!", "<", "URL", ">"]
# ::lemmas ["it", "feel", "like", "a", "strange", "and", "slightly", "sad", "old", "guy", "yell", "at", "you", "to", "get", "off", "his", "lawn", ",", "echo", "by", "young", "but", "no", "less", "sad", "people", "in", "red", "hat", "shout", ",", "yeah", ",", "get", "off", "his", "lawn", "!", "<", "URL", ">"]
(c1-17 / feel-06
       :ARG1 (c1-3 / it)
       :ARG2 (c1-15 / yell-01
                    :ARG0 (c1-10 / guy
                                 :mod (c1-8 / old)
                                 :mod (c1-12 / strange)
                                 :ARG1-of (c1-21 / sad-02
                                                 :degree (c1-13 / slight)))
                    :ARG1 (c1-14 / get-05
                                 :ARG1 (c1-16 / you)
                                 :ARG2 (c1-19 / off
                                              :op1 (c1-20 / lawn
                                                          :poss c1-10)))
                    :ARG2 c1-16)
       :ARG1-of (c1-11 / echo-01
                       :ARG0 (c1-22 / person
                                    :ARG1-of (c1-18 / have-degree-91
                                                    :ARG2 (c1-0 / young)
                                                    :ARG3 (c1-1 / less)
                                                    :ARG4 c1-10)
                                    :ARG0-of (c1-7 / wear-01
                                                   :ARG1 (c1-2 / hat
                                                               :ARG1-of (c1-9 / red-02)))
                                    :ARG0-of (c1-4 / shout-01
                                                   :ARG1 c1-14
                                                   :ARG0 c1-16
                                                   :ARG2 c1-19
                                                   :mode imperative))
                       :ARG0-of (c1-5 / sad-02
                                      :ARG2-of (c1-6 / have-degree-91
                                                     :ARG1 c1-22
                                                     :ARG3 c1-1)
                                      :ARG4 c1-10
                                      :polarity -)))

# ::snt Jim ... it appears to me that you tried to set up for failure because you THINK that you are smarter & more moral than him & the million Americans who put him in office . You are wrong ! Don't blame President Trump when YOU were the one with bad intentions !
# ::tokens ["Jim", "...", "it", "appears", "to", "me", "that", "you", "tried", "to", "set", "up", "for", "failure", "because", "you", "THINK", "that", "you", "are", "smarter", "&", "more", "moral", "than", "him", "&", "the", "million", "Americans", "who", "put", "him", "in", "office", ".", "You", "are", "wrong", "!", "Do", "n't", "blame", "President", "Trump", "when", "YOU", "were", "the", "one", "with", "bad", "intentions", "!"]
# ::lemmas ["Jim", "...", "it", "appear", "to", "i", "that", "you", "try", "to", "set", "up", "for", "failure", "because", "you", "think", "that", "you", "be", "smart", "&", "more", "moral", "than", "he", "&", "the", "million", "Americans", "who", "put", "he", "in", "office", ".", "you", "be", "wrong", "!", "do", "not", "blame", "President", "Trump", "when", "you", "be", "the", "one", "with", "bad", "intention", "!"]
(c2-13 / multi-sentence
       :snt1 (c2-16 / say-01
                    :ARG0 (c2-5 / i)
                    :ARG1 (c2-25 / appear-02
                                 :ARG1 (c2-12 / try-01
                                              :ARG0 (c2-33 / person
                                                           :name (c2-14 / name
                                                                        :op1 "Jim"))
                                              :ARG1 (c2-32 / set-up-15
                                                           :ARG0 c2-33
                                                           :ARG1 (c2-26 / fail-01
                                                                        :ARG1 c2-33))
                                              :ARG1-of (c2-7 / cause-01
                                                             :ARG0 (c2-9 / think-01
                                                                         :ARG0 c2-33
                                                                         :ARG1 (c2-15 / and
                                                                                      :op1 (c2-20 / smart-06
                                                                                                  :ARG1 c2-33)
                                                                                      :op2 (c2-27 / moral-02
                                                                                                  :ARG1 c2-33)
                                                                                      :ARG2-of (c2-28 / have-degree-91
                                                                                                      :ARG1 c2-33
                                                                                                      :ARG3 (c2-21 / more)
                                                                                                      :ARG4 (c2-1 / and
                                                                                                                  :op1 (c2-4 / he)
                                                                                                                  :op2 (c2-30 / person
                                                                                                                              :mod (c2-0 / country
                                                                                                                                         :name (c2-3 / name
                                                                                                                                                     :op1 "America"))
                                                                                                                              :ARG0-of (c2-18 / put-01
                                                                                                                                              :ARG1 c2-4
                                                                                                                                              :ARG2 (c2-10 / office))
                                                                                                                              :quant 1000000)))))))
                                 :ARG2 c2-33)
                    :ARG2 c2-33)
       :snt2 (c2-8 / wrong-04
                   :ARG1 (c2-23 / you))
       :snt3 (c2-31 / blame-01
                    :ARG0 c2-23
                    :polarity -
                    :mode imperative)
       :ARG1 (c2-17 / person
                    :name (c2-22 / name
                                 :op1 "Trump")
                    :ARG0-of (c2-6 / have-org-role-91
                                   :ARG2 (c2-2 / president)))
       :time (c2-29 / one
                    :ARG0-of (c2-11 / have-03
                                    :ARG1 (c2-19 / intend-01
                                                 :ARG1-of (c2-24 / bad-02)))))

# ::snt And there goes someone demonstrating exactly what said .
# ::tokens ["And", "there", "goes", "someone", "demonstrating", "exactly", "what", "said", "."]
# ::lemmas ["and", "there", "go", "someone", "demonstrate", "exactly", "what", "say", "."]
(c3-2 / and
      :op2 (c3-4 / go-01
                 :ARG1 (c3-1 / someone)
                 :ARG4 (c3-0 / demonstrate-01
                             :ARG0 c3-1
                             :ARG1 (c3-3 / thing
                                         :ARG1-of (c3-5 / say-01)
                                         :mod (c3-6 / exact)))))

# ::snt Please explain how this demonstrates what Comey said .
# ::tokens ["Please", "explain", "how", "this", "demonstrates", "what", "Comey", "said", "."]
# ::lemmas ["please", "explain", "how", "this", "demonstrate", "what", "Comey", "say", "."]
(c4-7 / explain-01
      :ARG0 (c4-6 / you)
      :ARG1 (c4-0 / demonstrate-01
                  :ARG0 (c4-3 / this)
                  :ARG1 (c4-2 / thing
                              :ARG1-of (c4-1 / say-01
                                             :ARG0 (c4-4 / person
                                                         :name (c4-5 / name
                                                                     :op1 "Comey")))))
      :mode imperative
      :polite +)

# ::snt I can read . I asked a very easy question that wasn't answered , except with an insult .
# ::tokens ["I", "can", "read", ".", "I", "asked", "a", "very", "easy", "question", "that", "was", "n't", "answered", ",", "except", "with", "an", "insult", "."]
# ::lemmas ["i", "can", "read", ".", "i", "ask", "a", "very", "easy", "question", "that", "be", "not", "answer", ",", "except", "with", "an", "insult", "."]
(c5-10 / multi-sentence
       :snt1 (c5-9 / possible-01
                   :ARG1 (c5-8 / read-01
                               :ARG0 (c5-1 / i)))
       :snt2 (c5-0 / ask-01
                   :ARG0 (c5-3 / i)
                   :ARG1 (c5-7 / thing
                               :ARG1-of (c5-2 / question-01)
                               :ARG1-of (c5-11 / answer-01
                                               :ARG2-of (c5-12 / except-01
                                                               :ARG1 (c5-4 / insult-01))
                                               :polarity -)
                               :ARG1-of (c5-5 / easy-05
                                              :degree (c5-6 / very)))))
