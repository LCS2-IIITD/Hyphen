# ::snt If you see something , say something ! SEND US VOTING DAY TIPS <URL>
# ::tokens ["If", "you", "see", "something", ",", "say", "something", "!", "SEND", "US", "VOTING", "DAY", "TIPS", "<", "URL", ">"]
# ::lemmas ["if", "you", "see", "something", ",", "say", "something", "!", "SEND", "US", "VOTING", "DAY", "tips", "<", "URL", ">"]
(c1-10 / multi-sentence
       :snt1 (c1-0 / say-01
                   :ARG0 (c1-11 / you)
                   :ARG1 (c1-9 / something)
                   :condition (c1-6 / see-01
                                    :ARG0 c1-11
                                    :ARG1 (c1-7 / something))
                   :mode imperative)
       :snt2 (c1-12 / send-01
                    :ARG0 (c1-3 / you)
                    :ARG1 (c1-8 / tip
                                :mod (c1-1 / day
                                           :time-of (c1-4 / win-01
                                                          :ARG0 (c1-5 / we))))
                    :ARG2 (c1-2 / you)
                    :mode imperative))

# ::snt There are people in the polling places voting who have no idea what they are doing and don't get any help when they ask .
# ::tokens ["There", "are", "people", "in", "the", "polling", "places", "voting", "who", "have", "no", "idea", "what", "they", "are", "doing", "and", "do", "n't", "get", "any", "help", "when", "they", "ask", "."]
# ::lemmas ["there", "be", "people", "in", "the", "polling", "place", "voting", "who", "have", "no", "idea", "what", "they", "be", "do", "and", "do", "not", "get", "any", "help", "when", "they", "ask", "."]
(c2-10 / person
       :location (c2-6 / place
                       :location-of (c2-3 / poll-01))
       :ARG0-of (c2-5 / vote-01)
       :ARG0-of (c2-4 / have-03
                      :ARG1 (c2-2 / idea
                                  :topic (c2-7 / thing
                                               :ARG1-of (c2-0 / do-02
                                                              :ARG0 c2-10)))
                      :polarity -)
       :ARG0-of (c2-8 / get-01
                      :ARG1 (c2-9 / help-01
                                  :ARG1 c2-10
                                  :mod (c2-1 / any))
                      :time (c2-11 / ask-01
                                   :ARG0 c2-10)
                      :polarity -))
