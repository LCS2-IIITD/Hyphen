# ::snt I was told was far , far superior to other treadmills which is why I decided - as we're moving into a new home - to invest in such an expensive piece of equipment . Health comes first kind of thing . OK ... /
# ::tokens ["I", "was", "told", "was", "far", ",", "far", "superior", "to", "other", "treadmills", "which", "is", "why", "I", "decided", "-", "as", "we", "'re", "moving", "into", "a", "new", "home", "-", "to", "invest", "in", "such", "an", "expensive", "piece", "of", "equipment", ".", "Health", "comes", "first", "kind", "of", "thing", ".", "OK", "...", "/"]
# ::lemmas ["i", "be", "tell", "be", "far", ",", "far", "superior", "to", "other", "treadmill", "which", "be", "why", "i", "decide", "-", "as", "we", "be", "move", "into", "a", "new", "home", "-", "to", "invest", "in", "such", "an", "expensive", "piece", "of", "equipment", ".", "health", "come", "first", "kind", "of", "thing", ".", "ok", "...", "/"]
(c1-10 / multi-sentence
       :snt1 (c1-9 / tell-01
                   :ARG1 (c1-14 / superior-01
                                :ARG1 (c1-7 / treadmill
                                            :mod (c1-8 / other))
                                :degree (c1-16 / far)
                                :ARG0-of (c1-5 / cause-01
                                               :ARG1 (c1-0 / decide-01
                                                           :ARG0 (c1-3 / i)
                                                           :ARG1 (c1-15 / invest-01
                                                                        :ARG0 c1-3
                                                                        :ARG2 (c1-22 / piece
                                                                                     :mod (c1-13 / equipment)
                                                                                     :mod (c1-19 / expensive
                                                                                                 :mod (c1-21 / such)))
                                                                        :time (c1-17 / move-01
                                                                                     :ARG0 (c1-6 / we)
                                                                                     :ARG2 (c1-18 / home
                                                                                                  :ARG1-of (c1-11 / new-01)))))))
                   :ARG2 c1-3)
       :snt2 (c1-1 / come-04
                   :ARG1 (c1-2 / health)
                   :ARG2 (c1-12 / thing
                                :mod (c1-23 / kind
                                            :ord (c1-20 / ordinal-entity
                                                        :value 1))))
       :snt3 (c1-4 / okay-01))

# ::snt It arrives in early November right after we close . I'm pulled in different directions that day and I'm assured everything is good . It wasn't . A week or later I finally get the opportunity turn it on and test it out . Screen comes us but the tread won't move . /
# ::tokens ["It", "arrives", "in", "early", "November", "right", "after", "we", "close", ".", "I", "'m", "pulled", "in", "different", "directions", "that", "day", "and", "I", "'m", "assured", "everything", "is", "good", ".", "It", "was", "n't", ".", "A", "week", "or", "later", "I", "finally", "get", "the", "opportunity", "turn", "it", "on", "and", "test", "it", "out", ".", "Screen", "comes", "us", "but", "the", "tread", "wo", "n't", "move", ".", "/"]
# ::lemmas ["it", "arrive", "in", "early", "November", "right", "after", "we", "close", ".", "i", "be", "pull", "in", "different", "direction", "that", "day", "and", "i", "be", "assure", "everything", "be", "good", ".", "it", "be", "not", ".", "A", "week", "or", "later", "i", "finally", "get", "the", "opportunity", "turn", "it", "on", "and", "test", "it", "out", ".", "screen", "come", "we", "but", "the", "tread", "will", "not", "move", ".", "/"]
(c2-14 / multi-sentence
       :snt1 (c2-27 / arrive-01
                    :ARG1 (c2-3 / it)
                    :time (c2-17 / early
                                 :op1 (c2-0 / date-entity
                                            :month 11))
                    :time (c2-16 / after
                                 :op1 (c2-5 / close-01
                                            :ARG1 (c2-6 / we))
                                 :mod (c2-12 / right)))
       :snt2 (c2-1 / and
                   :op1 (c2-32 / pull-01
                               :ARG1 (c2-21 / i)
                               :ARG2 (c2-25 / direction
                                            :ARG1-of (c2-20 / differ-02))
                               :time (c2-9 / day
                                           :mod (c2-11 / that)))
                   :op2 (c2-33 / assure-01
                               :ARG1 c2-21
                               :ARG2 (c2-13 / good-02
                                            :ARG1 (c2-30 / everything)
                                            :snt3-of c2-14)))
       :ARG1 (c2-22 / it)
       :snt4 (c2-26 / get-01
                    :ARG0 c2-21)
       :ARG1 (c2-10 / opportunity)
       :time (c2-28 / final)
       :time c2-16
       :quant (c2-31 / or
                     :op1 (c2-7 / temporal-quantity
                                :unit (c2-18 / week)
                                :quant 1)
                     :op2 (c2-15 / temporal-quantity
                                 :unit (c2-29 / month)
                                 :quant 1))
       :snt5 (c2-2 / contrast-01
                   :ARG1 (c2-8 / come-01
                               :ARG1 (c2-19 / screen)
                               :ARG4 (c2-4 / we))
                   :ARG2 (c2-24 / move-01
                                :ARG1 (c2-23 / tread)
                                :polarity -))
       :polarity -)

# ::snt It was when someone in maintenance tried to - over the phone - troubleshoot this I should have first realized this whole thing was doomed . He told me to pull on a handle that didn't exist and when asked why he didn't know that he said bc it was a ... new model . /
# ::tokens ["It", "was", "when", "someone", "in", "maintenance", "tried", "to", "-", "over", "the", "phone", "-", "troubleshoot", "this", "I", "should", "have", "first", "realized", "this", "whole", "thing", "was", "doomed", ".", "He", "told", "me", "to", "pull", "on", "a", "handle", "that", "did", "n't", "exist", "and", "when", "asked", "why", "he", "did", "n't", "know", "that", "he", "said", "bc", "it", "was", "a", "...", "new", "model", ".", "/"]
# ::lemmas ["it", "be", "when", "someone", "in", "maintenance", "try", "to", "-", "over", "the", "phone", "-", "troubleshoot", "this", "i", "should", "have", "first", "realize", "this", "whole", "thing", "be", "doom", ".", "he", "tell", "i", "to", "pull", "on", "a", "handle", "that", "do", "not", "exist", "and", "when", "ask", "why", "he", "do", "not", "know", "that", "he", "say", "bc", "it", "be", "a", "...", "new", "model", ".", "/"]
(c3-12 / multi-sentence
       :snt1 (c3-11 / recommend-01
                    :ARG1 (c3-7 / realize-01
                                :ARG0 (c3-3 / i)
                                :ARG1 (c3-0 / doom-01
                                            :ARG1 (c3-10 / thing
                                                         :mod (c3-5 / whole)
                                                         :mod (c3-6 / this)))
                                :ord (c3-8 / ordinal-entity
                                           :value 1)
                                :time (c3-14 / try-01
                                             :ARG0 (c3-17 / someone
                                                          :ARG0-of (c3-24 / maintain-01))
                                             :ARG1 (c3-20 / troubleshoot-01
                                                          :ARG0 c3-17
                                                          :ARG1 (c3-23 / this)
                                                          :medium (c3-29 / phone)))))
       :snt2 (c3-22 / and
                    :op1 (c3-26 / tell-01
                                :ARG0 (c3-25 / he)
                                :ARG1 (c3-27 / pull-01
                                             :ARG0 c3-3
                                             :ARG2 (c3-2 / handle
                                                         :ARG1-of (c3-16 / exist-01
                                                                         :polarity -)))
                                :ARG2 c3-3)
                    :op2 (c3-15 / ask-01
                                :ARG1 (c3-9 / thing
                                            :ARG0-of (c3-4 / cause-01
                                                           :ARG1 (c3-30 / know-01
                                                                        :ARG0 c3-25
                                                                        :ARG1 (c3-18 / thing
                                                                                     :ARG1-of (c3-28 / say-01
                                                                                                     :ARG0 c3-25))
                                                                        :polarity -)))
                                :ARG2 c3-3
                                :ARG1-of (c3-1 / cause-01
                                               :ARG0 (c3-21 / model
                                                            :ARG1-of (c3-13 / new-01)
                                                            :domain (c3-19 / it))))))

# ::snt Fine . We schedule a service call for the Saturday before last . Blocked out the whole day . No one comes . System error , I'm told . OK . We schedule for a weekday last week . They miss the window and no one calls . They arrive so late my wife now gets the pleasure of this fun game . /
# ::tokens ["Fine", ".", "We", "schedule", "a", "service", "call", "for", "the", "Saturday", "before", "last", ".", "Blocked", "out", "the", "whole", "day", ".", "No", "one", "comes", ".", "System", "error", ",", "I", "'m", "told", ".", "OK", ".", "We", "schedule", "for", "a", "weekday", "last", "week", ".", "They", "miss", "the", "window", "and", "no", "one", "calls", ".", "They", "arrive", "so", "late", "my", "wife", "now", "gets", "the", "pleasure", "of", "this", "fun", "game", ".", "/"]
# ::lemmas ["fine", ".", "we", "schedule", "a", "service", "call", "for", "the", "Saturday", "before", "last", ".", "block", "out", "the", "whole", "day", ".", "no", "one", "come", ".", "system", "error", ",", "i", "be", "tell", ".", "ok", ".", "we", "schedule", "for", "a", "weekday", "last", "week", ".", "they", "miss", "the", "window", "and", "no", "one", "call", ".", "they", "arrive", "so", "late", "my", "wife", "now", "get", "the", "pleasure", "of", "this", "fun", "game", ".", "/"]
(c4-18 / multi-sentence
       :snt1 (c4-33 / fine-04)
       :snt2 (c4-23 / schedule-01
                    :ARG0 (c4-12 / we)
                    :ARG1 (c4-11 / call-02
                                 :ARG0 c4-12
                                 :ARG1 (c4-39 / service))
                    :time (c4-0 / date-entity
                                :weekday (c4-25 / saturday)
                                :mod (c4-38 / before
                                            :op1 (c4-37 / last))))
       :snt3 (c4-1 / clock-out-00
                   :ARG0 (c4-7 / i)
                   :duration (c4-29 / day
                                    :mod (c4-21 / whole)))
       :snt4 (c4-14 / come-01
                    :ARG1 (c4-19 / no-one))
       :snt5 (c4-16 / tell-01
                    :ARG0 (c4-24 / i)
                    :ARG1 (c4-15 / okay-01)
                    :ARG2 c4-24)
       :snt6 (c4-32 / and
                    :op1 (c4-8 / schedule-01
                               :ARG0 (c4-9 / we)
                               :ARG1 (c4-3 / weekday)
                               :time (c4-30 / week
                                            :mod (c4-5 / last)))
                    :op2 (c4-34 / miss-02
                                :ARG0 (c4-13 / they)
                                :ARG1 (c4-6 / window))
                    :op3 (c4-28 / call-02
                                :ARG0 c4-19))
       :snt7 (c4-17 / get-01
                    :ARG0 (c4-40 / person
                                 :ARG0-of (c4-35 / have-rel-role-91
                                                 :ARG1 (c4-26 / i)
                                                 :ARG2 (c4-22 / wife)))
                    :ARG1 (c4-36 / pleasure-01
                                 :ARG0 (c4-31 / game
                                              :ARG1-of (c4-27 / fun-01)
                                              :mod (c4-20 / this))
                                 :ARG1 c4-40)
                    :time (c4-4 / now)
                    :time (c4-2 / late
                                :degree (c4-10 / so))))

# ::snt Not joking , the dude literally tells my wife I simply forgot to turn the treadmill on . Before he leaves , my wife asks him to turn it on and test it . He does . As chance would have it , the tread didn't move . He says the is broken and needs to be replaced . OK , I call . /
# ::tokens ["Not", "joking", ",", "the", "dude", "literally", "tells", "my", "wife", "I", "simply", "forgot", "to", "turn", "the", "treadmill", "on", ".", "Before", "he", "leaves", ",", "my", "wife", "asks", "him", "to", "turn", "it", "on", "and", "test", "it", ".", "He", "does", ".", "As", "chance", "would", "have", "it", ",", "the", "tread", "did", "n't", "move", ".", "He", "says", "the", "is", "broken", "and", "needs", "to", "be", "replaced", ".", "OK", ",", "I", "call", ".", "/"]
# ::lemmas ["not", "joke", ",", "the", "dude", "literally", "tell", "my", "wife", "i", "simply", "forget", "to", "turn", "the", "treadmill", "on", ".", "before", "he", "leave", ",", "my", "wife", "ask", "he", "to", "turn", "it", "on", "and", "test", "it", ".", "he", "do", ".", "as", "chance", "would", "have", "it", ",", "the", "tread", "do", "not", "move", ".", "he", "say", "the", "be", "break", "and", "need", "to", "be", "replace", ".", "ok", ",", "i", "call", ".", "/"]
(c5-13 / multi-sentence
       :snt1 (c5-31 / joke-01
                    :ARG0 (c5-4 / i)
                    :ARG2 (c5-11 / tell-01
                                 :ARG0 (c5-0 / dude)
                                 :ARG1 (c5-25 / forget-01
                                              :ARG0 (c5-18 / i)
                                              :ARG1 (c5-8 / turn-on-13
                                                          :ARG0 c5-18
                                                          :ARG1 (c5-15 / treadmill))
                                              :ARG1-of (c5-17 / simple-02))
                                 :ARG2 (c5-32 / person
                                              :ARG0-of (c5-27 / have-rel-role-91
                                                              :ARG1 c5-18
                                                              :ARG2 (c5-7 / wife)))
                                 :manner (c5-29 / literal))
                    :polarity -)
       :snt2 (c5-23 / ask-02
                    :ARG0 (c5-3 / he)
                    :ARG1 (c5-16 / and
                                 :op1 (c5-19 / turn-on-13
                                             :ARG0 c5-3
                                             :ARG1 c5-15)
                                 :op2 (c5-24 / test-01
                                             :ARG0 c5-3
                                             :ARG1 c5-15))
                    :ARG2 c5-32
                    :time (c5-30 / before
                                 :op1 (c5-2 / leave-11
                                            :ARG0 c5-3)))
       :snt3 (c5-26 / move-01
                    :ARG1 (c5-28 / tread)
                    :ARG1-of (c5-6 / cause-01
                                   :ARG0 (c5-1 / chance-02))
                    :polarity -)
       :snt4 (c5-21 / say-01
                    :ARG0 (c5-5 / he)
                    :ARG1 c5-16
                    :op1 (c5-22 / break-01
                                :ARG1 c5-28)
                    :op2 (c5-14 / need-01
                                :ARG1 (c5-12 / replace-01
                                             :ARG1 c5-28)))
       :snt5 (c5-10 / okay-01
                    :ARG1 (c5-9 / call-02
                                :ARG0 (c5-20 / i))))

# ::snt Apologies and all that and assurances that Sunday Dec . is THE exchange day . We travel back from our trip out of state to make it work . Aaaaand ... no show again . System error , I'm told . We reschedule for Wednesday , but I tell and the delivery company XPO ... /
# ::tokens ["Apologies", "and", "all", "that", "and", "assurances", "that", "Sunday", "Dec", ".", "is", "THE", "exchange", "day", ".", "We", "travel", "back", "from", "our", "trip", "out", "of", "state", "to", "make", "it", "work", ".", "Aaaaand", "...", "no", "show", "again", ".", "System", "error", ",", "I", "'m", "told", ".", "We", "reschedule", "for", "Wednesday", ",", "but", "I", "tell", "and", "the", "delivery", "company", "XPO", "...", "/"]
# ::lemmas ["apology", "and", "all", "that", "and", "assurance", "that", "Sunday", "Dec", ".", "be", "the", "exchange", "day", ".", "we", "travel", "back", "from", "our", "trip", "out", "of", "state", "to", "make", "it", "work", ".", "aaaaand", "...", "no", "show", "again", ".", "system", "error", ",", "i", "be", "tell", ".", "we", "reschedule", "for", "Wednesday", ",", "but", "i", "tell", "and", "the", "delivery", "company", "XPO", "...", "/"]
(c6-16 / multi-sentence
       :snt1 (c6-30 / and
                    :op1 (c6-20 / apologize-01)
                    :op2 (c6-14 / that
                                :mod (c6-1 / all))
                    :op3 (c6-36 / assure-01
                                :ARG2 (c6-0 / date-entity
                                            :dayperiod (c6-29 / day
                                                              :time-of (c6-22 / exchange-01))
                                            :domain (c6-24 / date-entity
                                                           :weekday (c6-21 / sunday))
                                            :month 12)))
       :snt2 (c6-10 / travel-01
                    :ARG0 (c6-9 / we)
                    :ARG1 (c6-34 / back)
                    :source (c6-18 / trip-03
                                   :ARG0 c6-9
                                   :ARG1 (c6-12 / out-06
                                                :ARG1 c6-9
                                                :ARG2 (c6-35 / state)))
                    :purpose (c6-32 / make-02
                                    :ARG0 c6-9
                                    :ARG1 (c6-19 / work-09
                                                 :ARG1 (c6-5 / it))))
       :snt3 (c6-4 / and
                   :op1 (c6-26 / show-01
                               :mod (c6-28 / again)
                               :polarity -)
                   :op2 (c6-33 / err-01
                               :mod (c6-6 / system)))
       :snt4 (c6-8 / contrast-01
                   :ARG1 (c6-27 / tell-01
                                :ARG0 (c6-25 / i)
                                :ARG1 (c6-15 / reschedule-01
                                             :ARG0 (c6-7 / we)
                                             :ARG1 (c6-13 / date-entity
                                                          :weekday (c6-3 / wednesday))))
                   :ARG2 (c6-31 / tell-01
                                :ARG0 c6-25
                                :ARG2 (c6-11 / and
                                             :op1 (c6-2 / company
                                                        :name (c6-17 / name
                                                                     :op1 "XPO")
                                                        :ARG0-of (c6-23 / deliver-01))))))

# ::snt I need it to be early in the day because I start work at pm . We'll do our best , they tell me . An automated call from XPO this evening tells me the window is from ( the timing ! ) pm to pm . I call . Nothing they can do , they say . So I finally smarten up ... /
# ::tokens ["I", "need", "it", "to", "be", "early", "in", "the", "day", "because", "I", "start", "work", "at", "pm", ".", "We", "'ll", "do", "our", "best", ",", "they", "tell", "me", ".", "An", "automated", "call", "from", "XPO", "this", "evening", "tells", "me", "the", "window", "is", "from", "(", "the", "timing", "!", ")", "pm", "to", "pm", ".", "I", "call", ".", "Nothing", "they", "can", "do", ",", "they", "say", ".", "So", "I", "finally", "smarten", "up", "...", "/"]
# ::lemmas ["i", "need", "it", "to", "be", "early", "in", "the", "day", "because", "i", "start", "work", "at", "pm", ".", "we", "'ll", "do", "our", "good", ",", "they", "tell", "i", ".", "an", "automated", "call", "from", "XPO", "this", "evening", "tell", "i", "the", "window", "be", "from", "(", "the", "timing", "!", ")", "pm", "to", "pm", ".", "i", "call", ".", "nothing", "they", "can", "do", ",", "they", "say", ".", "so", "i", "finally", "smarten", "up", "...", "/"]
(c7-13 / multi-sentence
       :snt1 (c7-14 / need-01
                    :ARG0 (c7-4 / i)
                    :ARG1 (c7-22 / it)
                    :ARG1-of (c7-6 / cause-01
                                   :ARG0 (c7-18 / start-01
                                                :ARG0 c7-4
                                                :ARG1 (c7-7 / work-01
                                                            :ARG0 c7-4)
                                                :time (c7-0 / date-entity
                                                            :time "PM"))))
       :snt2 (c7-11 / tell-01
                    :ARG0 (c7-8 / they)
                    :ARG1 (c7-27 / do-02
                                 :ARG0 (c7-16 / we)
                                 :ARG1 (c7-12 / good-02
                                              :ARG1 c7-16
                                              :ARG2-of (c7-32 / have-degree-91
                                                              :ARG1 c7-16
                                                              :ARG3 (c7-31 / most))))
                    :ARG2 c7-4)
       :snt3 (c7-1 / call-02
                   :ARG0 (c7-23 / i)
                   :time (c7-20 / date-entity
                                :time "17:00"))
       :snt4 (c7-15 / tell-01
                    :ARG0 (c7-9 / call-02
                                :ARG0 (c7-26 / company
                                             :name (c7-3 / name
                                                         :op1 "XPO"))
                                :time (c7-10 / date-entity
                                             :dayperiod (c7-17 / evening)
                                             :mod (c7-24 / today))
                                :manner (c7-28 / automate-01))
                    :ARG1 (c7-5 / window
                                :time (c7-19 / date-entity
                                             :time "17:00"))
                    :ARG2 c7-23)
       :snt5 (c7-35 / possible-01
                    :ARG1 (c7-2 / do-02
                                :ARG0 (c7-29 / they)
                                :ARG1 (c7-25 / nothing)))
       :snt6 (c7-21 / cause-01
                    :ARG1 (c7-34 / smarten-up-02
                                 :ARG0 (c7-33 / i)
                                 :mod (c7-30 / final))))

# ::snt I throw in the towel ( a non-sweaty one because I have yet to run . ) Me : I'd like to return it . When can you pick it up ? Them : Next week . Me : OK , ANY time before pm I'm free . Them : Yeah , sorry , but ... Me : Can I talk to a supervisor ? ( I'm now waiting for that call . ) Stand by ... /
# ::tokens ["I", "throw", "in", "the", "towel", "(", "a", "non", "-", "sweaty", "one", "because", "I", "have", "yet", "to", "run", ".", ")", "Me", ":", "I", "'d", "like", "to", "return", "it", ".", "When", "can", "you", "pick", "it", "up", "?", "Them", ":", "Next", "week", ".", "Me", ":", "OK", ",", "ANY", "time", "before", "pm", "I", "'m", "free", ".", "Them", ":", "Yeah", ",", "sorry", ",", "but", "...", "Me", ":", "Can", "I", "talk", "to", "a", "supervisor", "?", "(", "I", "'m", "now", "waiting", "for", "that", "call", ".", ")", "Stand", "by", "...", "/"]
# ::lemmas ["i", "throw", "in", "the", "towel", "(", "a", "non", "-", "sweaty", "one", "because", "i", "have", "yet", "to", "run", ".", ")", "i", ":", "i", "would", "like", "to", "return", "it", ".", "when", "can", "you", "pick", "it", "up", "?", "they", ":", "Next", "week", ".", "i", ":", "ok", ",", "any", "time", "before", "pm", "i", "be", "free", ".", "they", ":", "yeah", ",", "sorry", ",", "but", "...", "i", ":", "can", "i", "talk", "to", "a", "supervisor", "?", "(", "i", "be", "now", "wait", "for", "that", "call", ".", ")", "stand", "by", "...", "/"]
(c8-14 / multi-sentence
       :snt1 (c8-12 / throw-in-02
                    :ARG0 (c8-3 / i)
                    :ARG1 (c8-11 / one
                                 :mod (c8-19 / sweaty
                                             :polarity -)
                                 :ARG1-of (c8-6 / cause-01
                                                :ARG0 (c8-13 / run-10
                                                             :ARG0 c8-3
                                                             :ARG1-of (c8-28 / have-11
                                                                             :ARG0 c8-3
                                                                             :polarity -)))))
       :snt2 (c8-26 / and
                    :op1 (c8-34 / say-01
                                :ARG0 (c8-21 / i)
                                :ARG1 (c8-32 / like-02
                                             :ARG0 c8-21
                                             :ARG1 (c8-9 / return-02
                                                         :ARG0 c8-21
                                                         :ARG1 (c8-22 / it))))
                    :op2 (c8-23 / say-01
                                :ARG0 (c8-8 / they)
                                :ARG1 (c8-35 / possible-01
                                             :ARG1 (c8-31 / pick-up-04
                                                          :ARG0 (c8-24 / you)
                                                          :ARG1 c8-22)
                                             :time (c8-7 / week
                                                         :mod (c8-15 / next))))
                    :snt3 (c8-17 / and
                                 :op1 (c8-29 / okay-01
                                             :ARG1 (c8-27 / free-04
                                                          :ARG1 (c8-30 / i)
                                                          :time (c8-1 / anytime
                                                                      :op1 (c8-33 / before
                                                                                  :op1 (c8-20 / pm))
                                                                      :mod (c8-36 / any))))
                                 :op2 (c8-0 / contrast-01
                                            :ARG1 (c8-4 / sorry-01
                                                        :ARG1 c8-30
                                                        :mod (c8-25 / yeah))
                                            :ARG2 (c8-18 / wait-01
                                                         :ARG1 c8-30
                                                         :ARG2 (c8-10 / call-02
                                                                      :mod (c8-16 / that))
                                                         :time (c8-2 / now))))
                    :snt4 (c8-5 / stand-by-05
                                :ARG1 c8-24
                                :mode imperative)))
