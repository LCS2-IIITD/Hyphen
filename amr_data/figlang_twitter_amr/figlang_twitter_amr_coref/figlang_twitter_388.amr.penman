# ::snt The Democrats , when they incorrectly thought they were going to win , asked that the election night tabulation be accepted . Not so anymore !
# ::tokens ["The", "Democrats", ",", "when", "they", "incorrectly", "thought", "they", "were", "going", "to", "win", ",", "asked", "that", "the", "election", "night", "tabulation", "be", "accepted", ".", "Not", "so", "anymore", "!"]
# ::lemmas ["the", "Democrats", ",", "when", "they", "incorrectly", "think", "they", "be", "go", "to", "win", ",", "ask", "that", "the", "election", "night", "tabulation", "be", "accept", ".", "not", "so", "anymore", "!"]
(c1-13 / multi-sentence
       :snt1 (c1-3 / ask-02
                   :ARG0 (c1-12 / person
                                :ARG0-of (c1-7 / have-org-role-91
                                               :ARG1 (c1-8 / political-party
                                                           :name (c1-14 / name
                                                                        :op1 "Democratic"
                                                                        :op2 "Party"))))
                   :ARG1 (c1-15 / accept-01
                                :ARG1 (c1-9 / tabulate-01
                                            :time (c1-0 / date-entity
                                                        :dayperiod (c1-10 / night)
                                                        :time-of (c1-16 / elect-01))))
                   :time (c1-6 / think-01
                               :ARG0 c1-12
                               :ARG1 (c1-5 / win-01
                                           :ARG0 c1-12)
                               :ARG1-of (c1-4 / correct-02
                                              :polarity -)))
       :snt2 (c1-11 / have-mod-91
                    :ARG2 (c1-1 / so
                                :time (c1-2 / anymore)
                                :polarity -)))

# ::snt A recount , stupid as it may be , is not a repudiation of results , you dimwit .
# ::tokens ["A", "recount", ",", "stupid", "as", "it", "may", "be", ",", "is", "not", "a", "repudiation", "of", "results", ",", "you", "dimwit", "."]
# ::lemmas ["a", "recount", ",", "stupid", "as", "it", "may", "be", ",", "be", "not", "a", "repudiation", "of", "result", ",", "you", "dimwit", "."]
(c2-0 / say-01
      :ARG1 (c2-3 / repudiate-01
                  :ARG0 (c2-2 / recount-01)
                  :ARG1 (c2-6 / result-01)
                  :domain (c2-5 / stupid
                                :ARG1-of (c2-4 / possible-01))
                  :polarity -)
      :ARG2 (c2-7 / you
                  :mod (c2-1 / dimwit)))
