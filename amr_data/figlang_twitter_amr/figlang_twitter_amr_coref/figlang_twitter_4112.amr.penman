# ::snt Waiting up for you upstairs Why you act like I m not there ? Baby right now it feels like - It feels like You don t care Why don t you recognize I m so rare ? Always there You don t do the same for me that s not fair
# ::tokens ["Waiting", "up", "for", "you", "upstairs", "Why", "you", "act", "like", "I", "m", "not", "there", "?", "Baby", "right", "now", "it", "feels", "like", "-", "It", "feels", "like", "You", "don", "t", "care", "Why", "don", "t", "you", "recognize", "I", "m", "so", "rare", "?", "Always", "there", "You", "don", "t", "do", "the", "same", "for", "me", "that", "s", "not", "fair"]
# ::lemmas ["wait", "up", "for", "you", "upstairs", "why", "you", "act", "like", "i", "m", "not", "there", "?", "baby", "right", "now", "it", "feel", "like", "-", "it", "feel", "like", "you", "don", "t", "care", "why", "don", "t", "you", "recognize", "i", "m", "so", "rare", "?", "always", "there", "you", "don", "t", "do", "the", "same", "for", "i", "that", "s", "not", "fair"]
(c1-12 / multi-sentence
       :snt1 (c1-6 / wait-up-02
                   :ARG1 (c1-20 / you)
                   :location (c1-24 / upstairs)
                   :ARG1-of (c1-5 / cause-01
                                  :ARG0 (c1-22 / amr-unknown)))
       :snt2 (c1-23 / feel-01
                    :ARG0 (c1-25 / baby)
                    :ARG1 (c1-17 / feel-01
                                 :ARG0 c1-25
                                 :ARG1 (c1-0 / care-01
                                             :ARG0 c1-25
                                             :polarity -)
                                 :time (c1-13 / now
                                              :mod (c1-10 / right))))
       :snt3 (c1-7 / cause-01
                   :ARG0 (c1-14 / amr-unknown)
                   :ARG1 (c1-8 / recognize-02
                               :ARG0 (c1-21 / you)
                               :ARG1 (c1-11 / rare-02
                                            :ARG1 (c1-4 / i)
                                            :degree (c1-15 / so))))
       :snt4 (c1-1 / do-02
                   :ARG0 (c1-2 / you)
                   :ARG1 (c1-9 / thing
                               :ARG1-of (c1-26 / same-01))
                   :ARG2 (c1-16 / i)
                   :time (c1-3 / always)
                   :polarity -)
       :snt5 (c1-18 / fair-01
                    :ARG1 (c1-19 / do-02
                                 :ARG0 c1-2
                                 :ARG1 c1-9
                                 :ARG2 c1-16)
                    :polarity -))

# ::snt They just like puppets on a string , string , string I put it down , they call me up They doing way too much So I just let it ring , ring , ring <URL>
# ::tokens ["They", "just", "like", "puppets", "on", "a", "string", ",", "string", ",", "string", "I", "put", "it", "down", ",", "they", "call", "me", "up", "They", "doing", "way", "too", "much", "So", "I", "just", "let", "it", "ring", ",", "ring", ",", "ring", "<", "URL", ">"]
# ::lemmas ["they", "just", "like", "puppet", "on", "a", "string", ",", "string", ",", "string", "i", "put", "it", "down", ",", "they", "call", "i", "up", "they", "do", "way", "too", "much", "so", "i", "just", "let", "it", "ring", ",", "ring", ",", "ring", "<", "URL", ">"]
(c2-9 / multi-sentence
      :snt1 (c2-8 / resemble-01
                  :ARG1 (c2-7 / they)
                  :ARG2 (c2-24 / puppet
                               :location (c2-11 / string)
                               :location (c2-17 / string)
                               :location (c2-13 / string))
                  :mod (c2-23 / just))
      :snt2 (c2-21 / put-01
                   :ARG0 (c2-2 / i)
                   :ARG1 c2-13
                   :ARG2 (c2-0 / down))
      :snt3 (c2-3 / call-up-08
                  :ARG0 (c2-5 / they)
                  :ARG1 (c2-12 / i))
      :snt4 (c2-16 / do-02
                   :ARG0 (c2-10 / they)
                   :ARG1-of (c2-19 / have-quant-91
                                   :ARG2 (c2-18 / much)
                                   :ARG3 (c2-14 / too
                                                :quant (c2-4 / way)))
                   :ARG0-of (c2-1 / cause-01
                                  :ARG1 (c2-22 / let-01
                                               :ARG0 (c2-15 / i)
                                               :ARG1 (c2-6 / ring-01
                                                           :ARG1 (c2-20 / it)
                                                           :ARG4 c2-13)
                                               :mod c2-23))))

# ::snt If I show you all my demons And we dive into the deep end Would we crash and burn like every time before ? <URL>
# ::tokens ["If", "I", "show", "you", "all", "my", "demons", "And", "we", "dive", "into", "the", "deep", "end", "Would", "we", "crash", "and", "burn", "like", "every", "time", "before", "?", "<", "URL", ">"]
# ::lemmas ["if", "i", "show", "you", "all", "my", "demon", "and", "we", "dive", "into", "the", "deep", "end", "would", "we", "crash", "and", "burn", "like", "every", "time", "before", "?", "<", "URL", ">"]
(c3-3 / and
      :polarity (c3-16 / amr-unknown)
      :op1 (c3-5 / crash-01
                 :ARG1 (c3-6 / we))
      :op2 (c3-13 / burn-01
                  :ARG1 c3-6)
      :ARG1-of (c3-12 / resemble-01
                      :ARG2 (c3-11 / time
                                   :mod (c3-17 / every)
                                   :time (c3-1 / before)))
      :condition (c3-2 / and
                       :op1 (c3-0 / show-01
                                  :ARG0 (c3-14 / i)
                                  :ARG1 (c3-4 / demon
                                              :poss c3-14
                                              :mod (c3-10 / all))
                                  :ARG2 (c3-15 / you))
                       :op2 (c3-7 / dive-01
                                  :ARG0 c3-6
                                  :ARG1 (c3-9 / end
                                              :mod (c3-8 / deep)))))

# ::snt And what hurts the most is people can go From people you know to people you don't <URL>
# ::tokens ["And", "what", "hurts", "the", "most", "is", "people", "can", "go", "From", "people", "you", "know", "to", "people", "you", "do", "n't", "<", "URL", ">"]
# ::lemmas ["and", "what", "hurt", "the", "most", "be", "people", "can", "go", "from", "people", "you", "know", "to", "people", "you", "do", "not", "<", "url", ">"]
(c4-1 / and
      :op2 (c4-4 / have-degree-91
                 :ARG1 (c4-8 / possible-01
                             :ARG1 (c4-6 / go-01
                                         :ARG1 (c4-5 / person)
                                         :ARG3 (c4-3 / person
                                                     :ARG1-of (c4-10 / know-02
                                                                     :ARG0 (c4-11 / you)))
                                         :ARG4 (c4-2 / person
                                                     :ARG1-of (c4-0 / know-02
                                                                    :ARG0 c4-11
                                                                    :polarity -))))
                 :ARG2 (c4-7 / hurt-01
                             :ARG0 c4-8)
                 :ARG3 (c4-9 / most)))

# ::snt I guess this is what it feels like to be free I need to let my mind rest While my body reflects <URL>
# ::tokens ["I", "guess", "this", "is", "what", "it", "feels", "like", "to", "be", "free", "I", "need", "to", "let", "my", "mind", "rest", "While", "my", "body", "reflects", "<", "URL", ">"]
# ::lemmas ["i", "guess", "this", "be", "what", "it", "feel", "like", "to", "be", "free", "i", "need", "to", "let", "my", "mind", "rest", "while", "my", "body", "reflect", "<", "URL", ">"]
(c5-12 / multi-sentence
       :snt1 (c5-10 / guess-01
                    :ARG0 (c5-11 / i)
                    :ARG1 (c5-7 / thing
                                :ARG2-of (c5-0 / feel-05
                                               :ARG1 (c5-6 / free-04))
                                :domain (c5-2 / this)))
       :snt2 (c5-13 / need-01
                    :ARG0 (c5-3 / i
                                :part (c5-1 / mind))
                    :ARG1 (c5-9 / let-01
                                :ARG0 c5-3
                                :ARG1 (c5-8 / rest-01
                                            :ARG1 c5-1)
                                :time-of (c5-5 / reflect-01
                                               :ARG1 (c5-4 / body
                                                           :poss c5-3)))))

# ::snt I think that you should call me in the morning If you feel the same <URL>
# ::tokens ["I", "think", "that", "you", "should", "call", "me", "in", "the", "morning", "If", "you", "feel", "the", "same", "<", "URL", ">"]
# ::lemmas ["i", "think", "that", "you", "should", "call", "i", "in", "the", "morning", "if", "you", "feel", "the", "same", "<", "url", ">"]
(c6-5 / think-01
      :ARG0 (c6-6 / i)
      :ARG1 (c6-3 / call-02
                  :ARG0 (c6-8 / you)
                  :ARG1 c6-6
                  :time (c6-0 / date-entity
                              :dayperiod (c6-7 / morning))
                  :condition (c6-2 / feel-01
                                   :ARG0 c6-8
                                   :ARG1 (c6-4 / thing
                                               :ARG1-of (c6-1 / same-01)))))
