# ::snt Good grief . Where do you come up with this nonsense ? <URL>
# ::tokens ["Good", "grief", ".", "Where", "do", "you", "come", "up", "with", "this", "nonsense", "?", "<", "URL", ">"]
# ::lemmas ["good", "grief", ".", "where", "do", "you", "come", "up", "with", "this", "nonsense", "?", "<", "URL", ">"]
(c1-6 / multi-sentence
      :snt1 (c1-5 / grief
                  :ARG1-of (c1-2 / good-02)
                  :mode expressive)
      :snt2 (c1-3 / come-up-11
                  :ARG0 (c1-7 / you)
                  :ARG1 (c1-0 / sense-02
                              :ARG1 (c1-4 / this)
                              :polarity -)
                  :ARG2 (c1-1 / amr-unknown)))

# ::snt How come he was cleared the last two weeks and didn t play ? He was dressed and didn t get snaps
# ::tokens ["How", "come", "he", "was", "cleared", "the", "last", "two", "weeks", "and", "didn", "t", "play", "?", "He", "was", "dressed", "and", "didn", "t", "get", "snaps"]
# ::lemmas ["how", "come", "he", "be", "clear", "the", "last", "two", "weeks", "and", "didn", "t", "play", "?", "he", "be", "dressed", "and", "didn", "t", "get", "snap"]
(c2-13 / multi-sentence
       :snt1 (c2-5 / cause-01
                   :ARG0 (c2-3 / amr-unknown)
                   :ARG1 (c2-15 / and
                                :op1 (c2-0 / clear-03
                                           :ARG1 (c2-7 / he)
                                           :time (c2-10 / before
                                                        :op1 (c2-14 / now)
                                                        :duration (c2-8 / temporal-quantity
                                                                        :unit (c2-6 / week)
                                                                        :quant 2)))
                                :op2 (c2-12 / play-01
                                            :ARG0 c2-7
                                            :polarity -)))
       :snt2 (c2-1 / and
                   :op1 (c2-2 / dress-01
                              :ARG1 (c2-11 / he))
                   :op2 (c2-9 / get-01
                              :ARG0 c2-11
                              :ARG1 (c2-4 / snap)
                              :polarity -)))

# ::snt Yeah he d be in high demand as FA if he refused to play smh
# ::tokens ["Yeah", "he", "d", "be", "in", "high", "demand", "as", "FA", "if", "he", "refused", "to", "play", "smh"]
# ::lemmas ["yeah", "he", "d", "be", "in", "high", "demand", "as", "fa", "if", "he", "refuse", "to", "play", "smh"]
(c3-0 / demand-01
      :ARG1 (c3-2 / he)
      :ARG1-of (c3-4 / high-02)
      :condition (c3-3 / refuse-01
                       :ARG0 c3-2
                       :ARG1 (c3-5 / play-01
                                   :ARG0 c3-2
                                   :manner (c3-1 / smh
                                                 :mode expressive)))
      :mod (c3-6 / yeah))
