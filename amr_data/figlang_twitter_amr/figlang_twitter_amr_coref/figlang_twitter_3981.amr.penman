# ::snt can I come visit for , like , years or so ? I'll try to not be a bother
# ::tokens ["can", "I", "come", "visit", "for", ",", "like", ",", "years", "or", "so", "?", "I", "'ll", "try", "to", "not", "be", "a", "bother"]
# ::lemmas ["can", "i", "come", "visit", "for", ",", "like", ",", "year", "or", "so", "?", "i", "'ll", "try", "to", "not", "be", "a", "bother"]
(c1-10 / multi-sentence
       :snt1 (c1-9 / possible-01
                   :polarity (c1-1 / amr-unknown)
                   :ARG1 (c1-5 / visit-01
                               :ARG0 (c1-2 / i))
                   :duration (c1-12 / about
                                    :op1 (c1-6 / or
                                               :op1 (c1-7 / temporal-quantity
                                                          :unit (c1-11 / year)
                                                          :quant 1)
                                               :op2 (c1-0 / so))))
       :snt2 (c1-3 / try-01
                   :ARG0 (c1-4 / i)
                   :ARG1 (c1-8 / bother-01
                               :ARG1 c1-4
                               :polarity -)))

# ::snt Dude ! You are ALWAYS welcome , I may not have much but you can use it all , spare room is yours
# ::tokens ["Dude", "!", "You", "are", "ALWAYS", "welcome", ",", "I", "may", "not", "have", "much", "but", "you", "can", "use", "it", "all", ",", "spare", "room", "is", "yours"]
# ::lemmas ["dude", "!", "you", "be", "always", "welcome", ",", "i", "may", "not", "have", "much", "but", "you", "can", "use", "it", "all", ",", "spare", "room", "be", "yours"]
(c2-13 / multi-sentence
       :snt1 (c2-0 / say-01
                   :ARG1 (c2-4 / welcome-01
                               :ARG1 (c2-1 / dude)
                               :time (c2-2 / always))
                   :ARG2 c2-1
                   :mode expressive)
       :snt2 (c2-3 / contrast-01
                   :ARG1 (c2-12 / possible-01
                                :ARG1 (c2-7 / have-03
                                            :ARG0 (c2-5 / i)
                                            :ARG1 (c2-6 / much)
                                            :polarity -))
                   :ARG2 (c2-9 / possible-01
                               :ARG1 (c2-8 / use-01
                                           :ARG0 c2-1
                                           :ARG1 c2-6)))
       :snt3 (c2-10 / room
                    :mod (c2-11 / spare)
                    :poss c2-1))

# ::snt And I hope you know this is not virtual bullshit , I am here if you need me , always , for real , I mean it .
# ::tokens ["And", "I", "hope", "you", "know", "this", "is", "not", "virtual", "bullshit", ",", "I", "am", "here", "if", "you", "need", "me", ",", "always", ",", "for", "real", ",", "I", "mean", "it", "."]
# ::lemmas ["and", "i", "hope", "you", "know", "this", "be", "not", "virtual", "bullshit", ",", "i", "be", "here", "if", "you", "need", "i", ",", "always", ",", "for", "real", ",", "i", "mean", "it", "."]
(c3-1 / and
      :op2 (c3-2 / hope-01
                 :ARG0 (c3-9 / i)
                 :ARG1 (c3-11 / know-01
                              :ARG0 (c3-12 / you)
                              :ARG1 (c3-7 / bullshit
                                          :mod (c3-3 / virtual)
                                          :domain (c3-4 / this)
                                          :polarity -)))
      :op3 (c3-0 / be-located-at-91
                 :ARG1 c3-9
                 :ARG2 (c3-8 / here)
                 :condition (c3-6 / need-01
                                  :ARG0 c3-12
                                  :ARG1 c3-9
                                  :time (c3-13 / always)
                                  :ARG1-of (c3-5 / real-04
                                                 :ARG1-of (c3-10 / mean-02
                                                                 :ARG0 c3-9)))))
