# ::snt I have a second-class honours degree in politics from a U . K . Ex-poly - but I'm still better qualified than that orange fool .
# ::tokens ["I", "have", "a", "second", "-", "class", "honours", "degree", "in", "politics", "from", "a", "U", ".", "K", ".", "Ex", "-", "poly", "-", "but", "I", "'m", "still", "better", "qualified", "than", "that", "orange", "fool", "."]
# ::lemmas ["i", "have", "a", "second", "-", "class", "honour", "degree", "in", "politic", "from", "a", "u", ".", "k", ".", "ex", "-", "poly", "-", "but", "i", "be", "still", "well", "qualified", "than", "that", "orange", "fool", "."]
(c1-6 / have-concession-91
      :ARG1 (c1-5 / qualify-02
                  :ARG1 (c1-14 / i)
                  :mod (c1-0 / still)
                  :ARG2-of (c1-13 / have-degree-91
                                  :ARG1 c1-14
                                  :ARG3 (c1-15 / more)
                                  :ARG4 (c1-3 / fool
                                              :mod (c1-9 / orange)
                                              :mod (c1-11 / that))))
      :ARG2 (c1-1 / have-03
                  :ARG0 c1-14
                  :ARG1 (c1-2 / degree
                              :mod (c1-10 / honours)
                              :mod (c1-4 / class
                                         :ord (c1-7 / ordinal-entity
                                                    :value 2))
                              :topic (c1-12 / politics)
                              :source (c1-8 / university
                                            :name (c1-16 / name
                                                         :op1 "U.K."
                                                         :op2 "Ex-poly")))))

# ::snt History can't judge you on anything unless it gets access to your imagination .
# ::tokens ["History", "ca", "n't", "judge", "you", "on", "anything", "unless", "it", "gets", "access", "to", "your", "imagination", "."]
# ::lemmas ["history", "can", "not", "judge", "you", "on", "anything", "unless", "it", "get", "access", "to", "your", "imagination", "."]
(c2-5 / possible-01
      :ARG1 (c2-4 / judge-01
                  :ARG0 (c2-2 / history)
                  :ARG1 (c2-6 / you)
                  :ARG2 (c2-0 / anything))
      :condition (c2-3 / get-01
                       :ARG0 c2-2
                       :ARG1 (c2-7 / access-01
                                   :ARG0 c2-2
                                   :ARG1 (c2-1 / imagine-01
                                               :ARG0 c2-6))
                       :polarity -)
      :polarity -)

# ::snt I firmly believe a leader should have a basic command of their own language . Not to do so is frankly " unpresidented "
# ::tokens ["I", "firmly", "believe", "a", "leader", "should", "have", "a", "basic", "command", "of", "their", "own", "language", ".", "Not", "to", "do", "so", "is", "frankly", "\"", "unpresidented", "\""]
# ::lemmas ["i", "firmly", "believe", "a", "leader", "should", "have", "a", "basic", "command", "of", "their", "own", "language", ".", "not", "to", "do", "so", "be", "frankly", "\"", "unpresidented", "\""]
(c3-11 / multi-sentence
       :snt1 (c3-9 / believe-01
                   :ARG0 (c3-10 / i)
                   :ARG1 (c3-6 / recommend-01
                               :ARG1 (c3-3 / command-02
                                           :ARG0 (c3-7 / person
                                                       :ARG0-of (c3-8 / lead-02))
                                           :ARG1 (c3-0 / language
                                                       :poss c3-7)
                                           :mod (c3-1 / basic)))
                   :ARG1-of (c3-2 / firm-03))
       :snt2 (c3-4 / repress-01
                   :manner (c3-5 / frank)
                   :domain c3-3
                   :polarity -))

# ::snt So no-one dyslexia is allowed to run for public office . Jesus .
# ::tokens ["So", "no", "-", "one", "dyslexia", "is", "allowed", "to", "run", "for", "public", "office", ".", "Jesus", "."]
# ::lemmas ["so", "no", "-", "one", "dyslexia", "be", "allow", "to", "run", "for", "public", "office", ".", "Jesus", "."]
(c4-7 / multi-sentence
      :snt1 (c4-1 / allow-01
                  :ARG1 (c4-4 / run-02
                              :ARG0 (c4-8 / no-one
                                          :mod (c4-0 / dyslexia))
                              :ARG1 (c4-2 / office
                                          :ARG1-of (c4-6 / public-02))))
      :snt2 (c4-3 / person
                  :name (c4-5 / name
                              :op1 "Jesus")
                  :mode expressive))

# ::snt Please don't equate genuine disability with a palpable ignorance and disregard . Trump is not dyslexic . He's an idiot
# ::tokens ["Please", "do", "n't", "equate", "genuine", "disability", "with", "a", "palpable", "ignorance", "and", "disregard", ".", "Trump", "is", "not", "dyslexic", ".", "He", "'s", "an", "idiot"]
# ::lemmas ["please", "do", "not", "equate", "genuine", "disability", "with", "a", "palpable", "ignorance", "and", "disregard", ".", "Trump", "be", "not", "dyslexic", ".", "he", "be", "an", "idiot"]
(c5-9 / multi-sentence
      :snt1 (c5-12 / equate-01
                   :ARG0 (c5-11 / you)
                   :ARG1 (c5-0 / disability
                               :mod (c5-7 / genuine))
                   :ARG2 (c5-1 / and
                               :op1 (c5-8 / ignorance)
                               :op2 (c5-3 / disregard-01)
                               :ARG1-of (c5-6 / palpate-01))
                   :polarity -
                   :mode imperative
                   :polite +)
      :snt2 (c5-2 / dyslexic
                  :domain (c5-5 / person
                                :name (c5-10 / name
                                             :op1 "Trump"))
                  :polarity -)
      :snt3 (c5-4 / idiot
                  :domain c5-5))

# ::snt Only a fool would call a billionaire an idiot .
# ::tokens ["Only", "a", "fool", "would", "call", "a", "billionaire", "an", "idiot", "."]
# ::lemmas ["only", "a", "fool", "would", "call", "a", "billionaire", "an", "idiot", "."]
(c6-1 / call-01
      :ARG0 (c6-0 / fool
                  :mod (c6-2 / only))
      :ARG1 (c6-3 / billionaire)
      :ARG2 (c6-4 / idiot))

# ::snt Only an idiot would base their judgement on someone's suitability as a leader in their ability to accumulate money .
# ::tokens ["Only", "an", "idiot", "would", "base", "their", "judgement", "on", "someone", "'s", "suitability", "as", "a", "leader", "in", "their", "ability", "to", "accumulate", "money", "."]
# ::lemmas ["only", "an", "idiot", "would", "base", "their", "judgement", "on", "someone", "'s", "suitability", "as", "a", "leader", "in", "their", "ability", "to", "accumulate", "money", "."]
(c7-7 / base-02
      :ARG0 (c7-9 / idiot
                  :mod (c7-3 / only))
      :ARG1 (c7-8 / judge-01
                  :ARG0 c7-9
                  :ARG1 (c7-5 / possible-01
                              :ARG1 (c7-2 / accumulate-01
                                          :ARG0 (c7-0 / someone)
                                          :ARG1 (c7-10 / money))))
      :ARG2 (c7-1 / suit-01
                  :ARG1 c7-0
                  :ARG2 (c7-4 / person
                              :ARG0-of (c7-6 / lead-02))))

# ::snt I already stated that Trump is a brand / marketing genius <URL>
# ::tokens ["I", "already", "stated", "that", "Trump", "is", "a", "brand", "/", "marketing", "genius", "<", "URL", ">"]
# ::lemmas ["i", "already", "state", "that", "Trump", "be", "a", "brand", "/", "marketing", "genius", "<", "URL", ">"]
(c8-0 / state-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-2 / genius
                  :mod (c8-5 / slash
                             :op1 (c8-4 / brand-01)
                             :op2 (c8-7 / market-01))
                  :domain (c8-3 / person
                                :name (c8-8 / name
                                            :op1 "Trump")))
      :time (c8-1 / already))

# ::snt Marketing Genius ? Marketing Genius ? What ... you are a Guru ? What Nonsense .
# ::tokens ["Marketing", "Genius", "?", "Marketing", "Genius", "?", "What", "...", "you", "are", "a", "Guru", "?", "What", "Nonsense", "."]
# ::lemmas ["Marketing", "Genius", "?", "Marketing", "Genius", "?", "what", "...", "you", "be", "a", "Guru", "?", "what", "Nonsense", "."]
(c9-6 / multi-sentence
      :snt1 (c9-5 / person
                  :mod (c9-4 / genius
                             :topic (c9-0 / market-01)))
      :snt2 (c9-2 / person
                  :mod (c9-8 / genius
                             :topic (c9-1 / market-01))
                  :domain (c9-3 / you))
      :snt3 (c9-7 / nonsense
                  :domain (c9-9 / you)))

# ::snt Thank you very much for the repetitive reply ( two days after the conversation ) . Certainly not a waste of your time .
# ::tokens ["Thank", "you", "very", "much", "for", "the", "repetitive", "reply", "(", "two", "days", "after", "the", "conversation", ")", ".", "Certainly", "not", "a", "waste", "of", "your", "time", "."]
# ::lemmas ["thank", "you", "very", "much", "for", "the", "repetitive", "reply", "(", "two", "days", "after", "the", "conversation", ")", ".", "certainly", "not", "a", "waste", "of", "your", "time", "."]
(c10-12 / multi-sentence
        :snt1 (c10-10 / thank-01
                      :ARG1 (c10-13 / you)
                      :ARG2 (c10-11 / reply-01
                                    :ARG1-of (c10-8 / repeat-01)
                                    :time (c10-2 / after
                                                 :op1 (c10-3 / converse-01)
                                                 :quant (c10-5 / temporal-quantity
                                                               :unit (c10-0 / day)
                                                               :quant 2)))
                      :mod (c10-4 / much
                                  :degree (c10-9 / very)))
        :snt2 (c10-6 / waste-01
                     :ARG1 (c10-7 / time
                                  :poss c10-13)
                     :manner (c10-1 / certain)
                     :polarity -))

# ::snt oh , you are , you most certainly are ... I bet to many others ! Is there a waiting list ?
# ::tokens ["oh", ",", "you", "are", ",", "you", "most", "certainly", "are", "...", "I", "bet", "to", "many", "others", "!", "Is", "there", "a", "waiting", "list", "?"]
# ::lemmas ["oh", ",", "you", "be", ",", "you", "most", "certainly", "be", "...", "i", "bet", "to", "many", "other", "!", "be", "there", "a", "waiting", "list", "?"]
(c11-14 / multi-sentence
        :snt1 (c11-1 / and
                     :op1 (c11-5 / have-mod-91
                                 :ARG1 (c11-15 / you)
                                 :mod (c11-9 / oh))
                     :op2 (c11-12 / have-mod-91
                                  :ARG1 (c11-16 / you)
                                  :ARG2 (c11-2 / certain
                                               :ARG2-of (c11-0 / have-degree-91
                                                               :ARG1 c11-16
                                                               :ARG3 (c11-3 / most)))))
        :snt2 (c11-11 / bet-01
                      :ARG0 (c11-13 / i)
                      :ARG2 (c11-6 / other
                                   :quant (c11-7 / many))
                      :polarity (c11-8 / amr-unknown))
        :snt3 (c11-10 / list-01
                      :ARG2 (c11-4 / wait-01)))

# ::snt Why do you open this comment with an assertation , and then reframe it as a prediction ? Terrible brand persuasion .
# ::tokens ["Why", "do", "you", "open", "this", "comment", "with", "an", "assertation", ",", "and", "then", "reframe", "it", "as", "a", "prediction", "?", "Terrible", "brand", "persuasion", "."]
# ::lemmas ["why", "do", "you", "open", "this", "comment", "with", "an", "assertation", ",", "and", "then", "reframe", "it", "as", "a", "prediction", "?", "terrible", "brand", "persuasion", "."]
(c12-12 / multi-sentence
        :snt1 (c12-3 / cause-01
                     :ARG0 (c12-2 / amr-unknown)
                     :ARG1 (c12-14 / and
                                   :op1 (c12-6 / open-01
                                               :ARG0 (c12-13 / you)
                                               :ARG1 (c12-0 / comment-01
                                                            :mod (c12-8 / this))
                                               :manner (c12-1 / assert-02
                                                              :ARG0 c12-13))
                                   :op2 (c12-9 / reframe-01
                                               :ARG0 c12-13
                                               :ARG1 c12-0
                                               :ARG2 (c12-11 / predict-01
                                                             :ARG0 c12-13)
                                               :time (c12-4 / then))))
        :snt2 (c12-7 / persuade-01
                     :mod (c12-10 / brand)
                     :mod (c12-5 / horrible)))

# ::snt not at all , just future proofing , that is all . Wonderful Brand Avoidance I was going for , I am not for persuasion !
# ::tokens ["not", "at", "all", ",", "just", "future", "proofing", ",", "that", "is", "all", ".", "Wonderful", "Brand", "Avoidance", "I", "was", "going", "for", ",", "I", "am", "not", "for", "persuasion", "!"]
# ::lemmas ["not", "at", "all", ",", "just", "future", "proofing", ",", "that", "be", "all", ".", "Wonderful", "Brand", "Avoidance", "i", "be", "go", "for", ",", "i", "be", "not", "for", "persuasion", "!"]
(c13-13 / multi-sentence
        :snt1 (c13-6 / have-polarity-91
                     :degree (c13-2 / at-all)
                     :ARG2 -)
        :snt2 (c13-12 / prove-01
                      :time (c13-3 / future)
                      :domain (c13-8 / that
                                     :mod (c13-11 / just))
                      :ARG1-of (c13-10 / be-it-08))
        :snt3 (c13-9 / go-06
                     :ARG0 (c13-4 / i)
                     :ARG1 (c13-14 / avoid-01
                                   :ARG1 (c13-1 / brand-01)
                                   :ARG1-of (c13-5 / wonderful-03)))
        :snt4 (c13-0 / support-01
                     :ARG0 c13-4
                     :ARG1 (c13-7 / persuade-01)
                     :polarity -))

# ::snt Great stuff . Thanks for taking the time to message me .
# ::tokens ["Great", "stuff", ".", "Thanks", "for", "taking", "the", "time", "to", "message", "me", "."]
# ::lemmas ["great", "stuff", ".", "thank", "for", "take", "the", "time", "to", "message", "i", "."]
(c14-8 / multi-sentence
       :snt1 (c14-0 / stuff
                    :mod (c14-6 / great))
       :snt2 (c14-5 / thank-01
                    :ARG0 (c14-7 / i)
                    :ARG1 (c14-9 / you)
                    :ARG2 (c14-3 / take-01
                                 :ARG0 c14-9
                                 :ARG1 (c14-1 / time)
                                 :purpose (c14-2 / message-01
                                                 :ARG0 c14-9
                                                 :ARG2 (c14-4 / i)))))
