# ::snt . has gone to Dover AFB for arrival of remains of Chief Special Warfare Operator William " Ryan " Owens , killed during raid on Al Qaeda
# ::tokens [".", "has", "gone", "to", "Dover", "AFB", "for", "arrival", "of", "remains", "of", "Chief", "Special", "Warfare", "Operator", "William", "\"", "Ryan", "\"", "Owens", ",", "killed", "during", "raid", "on", "Al", "Qaeda"]
# ::lemmas [".", "have", "go", "to", "Dover", "AFB", "for", "arrival", "of", "remain", "of", "Chief", "Special", "Warfare", "Operator", "William", "\"", "Ryan", "\"", "Owens", ",", "kill", "during", "raid", "on", "Al", "Qaeda"]
(c1-14 / go-01
       :ARG1 (c1-15 / person)
       :ARG4 (c1-4 / facility
                   :name (c1-16 / name
                                :op1 "Dover"
                                :op2 "Airfield"))
       :purpose (c1-2 / arrive-01
                      :ARG1 c1-15
                      :ARG4 (c1-10 / thing
                                   :ARG1-of (c1-11 / remain-01
                                                   :ARG3 (c1-9 / person
                                                               :name (c1-12 / name
                                                                            :op1 "William"
                                                                            :op2 "Ryan"
                                                                            :op3 "Owen")
                                                               :ARG0-of (c1-8 / operate-01
                                                                              :ARG1 (c1-6 / warfare
                                                                                          :ARG1-of (c1-0 / special-02)))
                                                               :mod (c1-5 / chief)
                                                               :ARG1-of (c1-3 / kill-01
                                                                              :time (c1-7 / raid-01
                                                                                          :ARG1 (c1-1 / criminal-organization
                                                                                                      :name (c1-13 / name
                                                                                                                   :op1 "Al"
                                                                                                                   :op2 "Qaeda")))))))))

# ::snt wow , as a veteran myself I am grateful for respect President Trump & his staff are giving our military . Obama fell short
# ::tokens ["wow", ",", "as", "a", "veteran", "myself", "I", "am", "grateful", "for", "respect", "President", "Trump", "&", "his", "staff", "are", "giving", "our", "military", ".", "Obama", "fell", "short"]
# ::lemmas ["wow", ",", "as", "a", "veteran", "myself", "i", "be", "grateful", "for", "respect", "President", "Trump", "&", "his", "staff", "be", "give", "our", "military", ".", "Obama", "fall", "short"]
(c2-15 / multi-sentence
       :snt1 (c2-1 / appreciate-02
                   :ARG0 (c2-14 / i
                                :mod (c2-8 / veteran))
                   :ARG1 (c2-10 / respect-01
                                :ARG0 (c2-17 / and
                                             :op1 (c2-11 / person
                                                         :name (c2-16 / name
                                                                      :op1 "Trump")
                                                         :ARG0-of (c2-7 / have-org-role-91
                                                                        :ARG2 (c2-9 / president)))
                                             :op2 (c2-0 / staff
                                                        :poss c2-11))
                                :ARG1 (c2-3 / military
                                            :poss (c2-4 / we)))
                   :mod (c2-5 / wow
                              :mode expressive))
       :snt2 (c2-2 / fall-07
                   :ARG1 (c2-6 / person
                               :name (c2-12 / name
                                            :op1 "Obama"))
                   :ARG2 (c2-13 / short-06
                                :ARG1 c2-6)))

# ::snt Trump got this man killed so he could at least show up
# ::tokens ["Trump", "got", "this", "man", "killed", "so", "he", "could", "at", "least", "show", "up"]
# ::lemmas ["Trump", "get", "this", "man", "kill", "so", "he", "could", "at", "least", "show", "up"]
(c3-5 / get-04
      :ARG0 (c3-6 / person
                  :name (c3-8 / name
                              :op1 "Trump"))
      :ARG1 (c3-2 / kill-01
                  :ARG0 c3-6
                  :ARG1 (c3-7 / man
                              :mod (c3-4 / this)))
      :purpose (c3-3 / possible-01
                     :ARG1 (c3-0 / show-up-02
                                 :ARG1 c3-7
                                 :mod (c3-1 / at-least))))

# ::snt oh sweetie , don't ask me to do research for you on how Trump got him killed .
# ::tokens ["oh", "sweetie", ",", "do", "n't", "ask", "me", "to", "do", "research", "for", "you", "on", "how", "Trump", "got", "him", "killed", "."]
# ::lemmas ["oh", "sweetie", ",", "do", "not", "ask", "i", "to", "do", "research", "for", "you", "on", "how", "Trump", "get", "he", "kill", "."]
(c4-1 / ask-02
      :ARG0 (c4-11 / you)
      :ARG1 (c4-6 / research-01
                  :ARG0 (c4-9 / i)
                  :ARG1 (c4-5 / thing
                              :manner-of (c4-8 / get-04
                                               :ARG0 (c4-7 / person
                                                           :name (c4-10 / name
                                                                        :op1 "Trump"))
                                               :ARG1 (c4-2 / kill-01
                                                           :ARG1 (c4-3 / he))))
                  :ARG2 c4-9)
      :ARG2 c4-9
      :mod (c4-0 / sweetie)
      :mod (c4-4 / oh
                 :mode expressive)
      :polarity -
      :mode imperative)

# ::snt oh sweetie , u can't back it up with facts , otherwise u would have done so .
# ::tokens ["oh", "sweetie", ",", "u", "ca", "n't", "back", "it", "up", "with", "facts", ",", "otherwise", "u", "would", "have", "done", "so", "."]
# ::lemmas ["oh", "sweetie", ",", "u", "can", "not", "back", "it", "up", "with", "fact", ",", "otherwise", "u", "would", "have", "do", "so", "."]
(c5-0 / say-01
      :ARG1 (c5-2 / and
                  :op1 (c5-9 / possible-01
                             :ARG1 (c5-7 / back-up-04
                                         :ARG0 (c5-10 / you)
                                         :ARG1 (c5-4 / it)
                                         :instrument (c5-3 / fact))
                             :polarity -)
                  :op2 (c5-1 / do-02
                             :ARG0 c5-10
                             :ARG1 c5-7
                             :condition (c5-5 / have-polarity-91
                                              :ARG1 c5-9
                                              :ARG2 -))
                  :mod (c5-6 / oh
                             :mode expressive))
      :ARG2 (c5-8 / sweetie))
