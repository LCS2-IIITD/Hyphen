# ::snt Power Deptt to complete IPDS soon in Dimapur According to power department officials , if everything goes as per schedule , the ongoing IPDS works will be completed soon and Dimapur will get uninterrupted power supply . <URL>
# ::tokens ["Power", "Deptt", "to", "complete", "IPDS", "soon", "in", "Dimapur", "According", "to", "power", "department", "officials", ",", "if", "everything", "goes", "as", "per", "schedule", ",", "the", "ongoing", "IPDS", "works", "will", "be", "completed", "soon", "and", "Dimapur", "will", "get", "uninterrupted", "power", "supply", ".", "<", "URL", ">"]
# ::lemmas ["Power", "Deptt", "to", "complete", "ipds", "soon", "in", "Dimapur", "accord", "to", "power", "department", "official", ",", "if", "everything", "go", "as", "per", "schedule", ",", "the", "ongoing", "ipds", "work", "will", "be", "complete", "soon", "and", "Dimapur", "will", "get", "uninterrupted", "power", "supply", ".", "<", "URL", ">"]
(c1-14 / say-01
       :ARG0 (c1-25 / person
                    :ARG0-of (c1-21 / have-org-role-91
                                    :ARG1 (c1-11 / government-organization
                                                 :name (c1-12 / name
                                                              :op1 "Power"
                                                              :op2 "Dept"))
                                    :ARG2 (c1-10 / official)))
       :ARG1 (c1-7 / complete-01
                   :ARG0 c1-11
                   :ARG1 (c1-8 / work-01
                               :ARG1 (c1-0 / control-01
                                           :ARG1 (c1-13 / electricity))
                               :ARG1-of (c1-19 / go-on-15))
                   :time (c1-24 / soon)
                   :location (c1-9 / city
                                   :name (c1-3 / name
                                               :op1 "Dimapur"))
                   :condition (c1-1 / go-06
                                    :ARG0 (c1-22 / everything)
                                    :ARG1-of (c1-18 / conform-01
                                                    :ARG2 (c1-16 / schedule-01)))
                   :ARG0-of (c1-15 / cause-01
                                   :ARG1 (c1-20 / and
                                                :op1 (c1-6 / complete-01
                                                           :ARG1 c1-8
                                                           :time (c1-4 / soon))
                                                :op2 (c1-17 / get-01
                                                            :ARG0 c1-9
                                                            :ARG1 (c1-5 / supply-01
                                                                        :ARG1 (c1-23 / power
                                                                                     :ARG1-of (c1-2 / continue-01
                                                                                                    :polarity -))))))))

# ::snt Great to know and also dont forget to change the electricpost almost to fall in every colony or villages .
# ::tokens ["Great", "to", "know", "and", "also", "do", "nt", "forget", "to", "change", "the", "electricpost", "almost", "to", "fall", "in", "every", "colony", "or", "villages", "."]
# ::lemmas ["great", "to", "know", "and", "also", "do", "not", "forget", "to", "change", "the", "electricpost", "almost", "to", "fall", "in", "every", "colony", "or", "village", "."]
(c2-2 / and
      :op1 (c2-9 / great
                 :domain (c2-10 / know-01))
      :op2 (c2-3 / forget-01
                 :ARG0 (c2-11 / you)
                 :ARG1 (c2-4 / change-01
                             :ARG0 c2-11
                             :ARG1 (c2-13 / electricpost)
                             :purpose (c2-6 / fall-01
                                            :ARG1 c2-13
                                            :location (c2-8 / or
                                                            :op1 (c2-0 / colony)
                                                            :op2 (c2-7 / village)
                                                            :mod (c2-5 / every))
                                            :mod (c2-12 / almost)))
                 :mod (c2-1 / also)
                 :polarity -
                 :mode imperative))
