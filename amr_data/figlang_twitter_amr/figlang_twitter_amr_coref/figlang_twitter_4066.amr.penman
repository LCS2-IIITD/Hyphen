# ::snt Thanks Julianna ! My MC's first name : T A L I A
# ::tokens ["Thanks", "Julianna", "!", "My", "MC", "'s", "first", "name", ":", "T", "A", "L", "I", "A"]
# ::lemmas ["thank", "Julianna", "!", "my", "MC", "'s", "first", "name", ":", "t", "a", "l", "i", "a"]
(c1-1 / thank-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-3 / person
                  :name (c1-5 / name
                              :op1 "Julianna"))
      :ARG2 (c1-2 / name
                  :op1 "MC")
      :poss c1-4
      :ord (c1-0 / ordinal-entity
                 :value 1)
      :mode expressive)

# ::snt Oh thanks ! My MC is : D R E W Sorry if you re already tagged !
# ::tokens ["Oh", "thanks", "!", "My", "MC", "is", ":", "D", "R", "E", "W", "Sorry", "if", "you", "re", "already", "tagged", "!"]
# ::lemmas ["oh", "thanks", "!", "my", "MC", "be", ":", "d", "r", "e", "w", "Sorry", "if", "you", "re", "already", "tag", "!"]
(c2-9 / multi-sentence
      :snt1 (c2-6 / thank-01
                  :ARG0 (c2-8 / i)
                  :ARG1 (c2-7 / person
                              :ARG0-of (c2-2 / MC-01)
                              :poss c2-8)
                  :mod (c2-5 / oh
                             :mode expressive))
      :snt2 (c2-0 / sorry-01
                  :ARG1 (c2-4 / i)
                  :ARG2 (c2-3 / tag-01
                              :ARG0 (c2-10 / you)
                              :time (c2-1 / already))))

# ::snt Thx AJ ! One of mine is : R U N E
# ::tokens ["Thx", "AJ", "!", "One", "of", "mine", "is", ":", "R", "U", "N", "E"]
# ::lemmas ["Thx", "AJ", "!", "One", "of", "mine", "be", ":", "r", "U", "N", "E"]
(c3-5 / multi-sentence
      :snt1 (c3-4 / person
                  :name (c3-6 / name
                              :op1 "Thx"
                              :op2 "Aj"))
      :snt2 (c3-1 / include-91
                  :ARG1 (c3-0 / string-entity
                              :value "RU N E")
                  :ARG2 (c3-3 / thing
                              :poss (c3-2 / i))))

# ::snt Thanks MC of your current WIP and Tag someone cool for every letter . C A R S A N
# ::tokens ["Thanks", "MC", "of", "your", "current", "WIP", "and", "Tag", "someone", "cool", "for", "every", "letter", ".", "C", "A", "R", "S", "A", "N"]
# ::lemmas ["thank", "MC", "of", "your", "current", "WIP", "and", "Tag", "someone", "cool", "for", "every", "letter", ".", "c", "A", "r", "s", "a", "n"]
(c4-11 / multi-sentence
       :snt1 (c4-5 / thank-01
                   :ARG0 (c4-10 / i)
                   :ARG1 (c4-7 / person
                               :name (c4-12 / name
                                            :op1 "MC")
                               :ARG0-of (c4-4 / have-03
                                              :ARG1 (c4-3 / thing
                                                          :name c4-12
                                                          :op1 "WIP")
                                              :time (c4-2 / current)
                                              :poss c4-7)))
       :snt2 (c4-13 / tag-01
                    :ARG0 (c4-6 / you)
                    :ARG1 (c4-0 / someone
                                :ARG1-of (c4-1 / cool-04))
                    :ARG2 (c4-8 / letter
                                :mod (c4-14 / every))
                    :mode imperative)
       :snt3 (c4-9 / string-entity
                   :mod c4-9
                   :mod c4-9
                   :value "C"
                   :value "R"))

# ::snt I do self help so I guess my MC is R E X A P O L L O <URL>
# ::tokens ["I", "do", "self", "help", "so", "I", "guess", "my", "MC", "is", "R", "E", "X", "A", "P", "O", "L", "L", "O", "<", "URL", ">"]
# ::lemmas ["i", "do", "self", "help", "so", "i", "guess", "my", "MC", "be", "R", "e", "x", "a", "p", "o", "l", "L", "o", "<", "URL", ">"]
(c5-2 / cause-01
      :ARG0 (c5-0 / do-02
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-3 / help-01
                              :ARG0 c5-5
                              :ARG1 c5-5))
      :ARG1 (c5-4 / guess-01
                  :ARG0 c5-5
                  :ARG1 (c5-6 / MC
                              :poss c5-5
                              :mod (c5-1 / string-entity
                                         :value "RE"
                                         :op2 "X"
                                         :op3 "A"
                                         :op4 "P"
                                         :op5 "L"
                                         :op6 "O"))))
