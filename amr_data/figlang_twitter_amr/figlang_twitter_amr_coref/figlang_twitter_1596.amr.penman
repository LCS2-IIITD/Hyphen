# ::snt and if that fails , they just change the dates a few million years
# ::tokens ["and", "if", "that", "fails", ",", "they", "just", "change", "the", "dates", "a", "few", "million", "years"]
# ::lemmas ["and", "if", "that", "fail", ",", "they", "just", "change", "the", "date", "a", "few", "million", "years"]
(c1-1 / and
      :op2 (c1-3 / change-01
                 :ARG0 (c1-7 / they)
                 :ARG1 (c1-0 / date)
                 :ARG2 (c1-2 / few
                             :op1 (c1-5 / temporal-quantity
                                        :unit (c1-9 / year)
                                        :quant 1000000))
                 :mod (c1-8 / just)
                 :condition (c1-6 / fail-01
                                  :ARG1 (c1-4 / that))))

# ::snt which brings us full circle to the grand canyon , the age of which changes by millions of years by evos
# ::tokens ["which", "brings", "us", "full", "circle", "to", "the", "grand", "canyon", ",", "the", "age", "of", "which", "changes", "by", "millions", "of", "years", "by", "evos"]
# ::lemmas ["which", "bring", "we", "full", "circle", "to", "the", "grand", "canyon", ",", "the", "age", "of", "which", "change", "by", "millions", "of", "years", "by", "evos"]
(c2-9 / bring-01
      :ARG0 (c2-12 / event)
      :ARG1 (c2-4 / we)
      :ARG2 (c2-3 / canyon
                  :mod (c2-8 / grand)
                  :time-of (c2-1 / age-01
                                 :ARG1-of (c2-0 / change-01
                                                :ARG2 (c2-10 / multiple
                                                             :op1 (c2-7 / temporal-quantity
                                                                        :unit (c2-11 / year)
                                                                        :quant 1000000))
                                                :manner (c2-5 / evos))))
      :extent (c2-6 / circle
                    :ARG1-of (c2-2 / full-09)))

# ::snt new EVIDENCE emerged so scientists ( not ' evos ' your ) so blow me , real accepted it
# ::tokens ["new", "EVIDENCE", "emerged", "so", "scientists", "(", "not", "'", "evos", "'", "your", ")", "so", "blow", "me", ",", "real", "accepted", "it"]
# ::lemmas ["new", "EVIDENCE", "emerge", "so", "scientist", "(", "not", "'", "evos", "'", "your", ")", "so", "blow", "i", ",", "real", "accept", "it"]
(c3-13 / emerge-02
       :ARG0 (c3-4 / evidence-01
                   :ARG1-of (c3-10 / new-01))
       :ARG0-of (c3-3 / cause-01
                      :ARG1 (c3-2 / and
                                  :op1 (c3-8 / blow-01
                                             :ARG0 (c3-11 / you)
                                             :ARG1 (c3-9 / i)
                                             :mode imperative)
                                  :op2 (c3-12 / accept-01
                                              :ARG0 c3-11
                                              :ARG1 c3-4
                                              :ARG1-of (c3-7 / real-04))))
       :ARG0-of (c3-0 / cause-01
                      :ARG0 (c3-1 / scientist
                                  :ARG1-of (c3-6 / contrast-01
                                                 :ARG2 (c3-5 / evade-01
                                                             :ARG0 c3-1
                                                             :ARG1 c3-11
                                                             :polarity -))))
       :ARG1-of c3-0)

# ::snt not allowed to pick and choose which evidence you accept . You must accept it all .
# ::tokens ["not", "allowed", "to", "pick", "and", "choose", "which", "evidence", "you", "accept", ".", "You", "must", "accept", "it", "all", "."]
# ::lemmas ["not", "allow", "to", "pick", "and", "choose", "which", "evidence", "you", "accept", ".", "you", "must", "accept", "it", "all", "."]
(c4-9 / multi-sentence
      :snt1 (c4-1 / allow-01
                  :ARG1 (c4-11 / and
                               :op1 (c4-8 / pick-01
                                          :ARG0 (c4-10 / you)
                                          :ARG1 (c4-12 / evidence-01
                                                       :ARG1-of (c4-0 / accept-01
                                                                      :ARG0 c4-10)))
                               :op2 (c4-3 / choose-01
                                          :ARG0 c4-10
                                          :ARG1 c4-12))
                  :polarity -)
      :snt2 (c4-6 / obligate-01
                  :ARG1 (c4-2 / you)
                  :ARG2 (c4-7 / accept-01
                              :ARG0 c4-2
                              :ARG1 (c4-4 / it
                                          :mod (c4-5 / all)))))

# ::snt agreed ? If so , tell me what you've discovered about dinosaur soft tissue that was carbon dated .
# ::tokens ["agreed", "?", "If", "so", ",", "tell", "me", "what", "you", "'ve", "discovered", "about", "dinosaur", "soft", "tissue", "that", "was", "carbon", "dated", "."]
# ::lemmas ["agree", "?", "if", "so", ",", "tell", "i", "what", "you", "'ve", "discover", "about", "dinosaur", "soft", "tissue", "that", "be", "carbon", "date", "."]
(c5-12 / multi-sentence
       :snt1 (c5-2 / agree-01
                   :polarity (c5-14 / amr-unknown))
       :snt2 (c5-9 / tell-01
                   :ARG0 (c5-13 / you)
                   :ARG1 (c5-6 / thing
                               :ARG1-of (c5-0 / discover-01
                                              :ARG0 (c5-3 / you)
                                              :topic (c5-4 / tissue
                                                           :ARG1-of (c5-1 / soft-02)
                                                           :mod (c5-11 / dinosaur)
                                                           :ARG1-of (c5-5 / date-01
                                                                          :ARG2 (c5-7 / carbon)))))
                   :ARG2 (c5-8 / i)
                   :condition (c5-10 / so)
                   :mode imperative))

# ::snt and it was dinosaur , not Bison as evolutionists lied because they * wouldn't accept certain data *
# ::tokens ["and", "it", "was", "dinosaur", ",", "not", "Bison", "as", "evolutionists", "lied", "because", "they", "*", "would", "n't", "accept", "certain", "data", "*"]
# ::lemmas ["and", "it", "be", "dinosaur", ",", "not", "Bison", "as", "evolutionist", "lie", "because", "they", "*", "would", "not", "accept", "certain", "datum", "*"]
(c6-2 / and
      :op2 (c6-3 / contrast-01
                 :ARG1 (c6-0 / dinosaur
                             :domain (c6-9 / it))
                 :ARG2 (c6-5 / have-polarity-91
                             :ARG1 c6-9
                             :ARG1-of (c6-1 / cause-01
                                            :ARG0 (c6-7 / lie-08
                                                        :ARG0 (c6-11 / evolutionist)
                                                        :ARG1-of (c6-6 / cause-01
                                                                       :ARG0 (c6-10 / accept-01
                                                                                    :ARG0 c6-11
                                                                                    :ARG1 (c6-4 / data
                                                                                                :mod (c6-8 / certain))
                                                                                    :polarity -))))
                             :ARG2 -)))

# ::snt this is a garbled ( deliberately ? ) version of claim CC371 ? <URL>
# ::tokens ["this", "is", "a", "garbled", "(", "deliberately", "?", ")", "version", "of", "claim", "CC371", "?", "<", "URL", ">"]
# ::lemmas ["this", "be", "a", "garbled", "(", "deliberately", "?", ")", "version", "of", "claim", "CC371", "?", "<", "URL", ">"]
(c7-4 / version
      :polarity (c7-1 / amr-unknown)
      :ARG1-of (c7-6 / garble-01)
      :mod (c7-2 / claim-01
                 :ARG1 (c7-5 / thing
                             :name (c7-7 / name
                                         :op1 "CC371")))
      :domain (c7-3 / this)
      :ARG1-of (c7-0 / deliberate-01))

# ::snt no , that's an old one , just referring to " whether Schweitzer found legit soft tissue " of a Dino .
# ::tokens ["no", ",", "that", "'s", "an", "old", "one", ",", "just", "referring", "to", "\"", "whether", "Schweitzer", "found", "legit", "soft", "tissue", "\"", "of", "a", "Dino", "."]
# ::lemmas ["no", ",", "that", "be", "an", "old", "one", ",", "just", "refer", "to", "\"", "whether", "Schweitzer", "find", "legit", "soft", "tissue", "\"", "of", "a", "Dino", "."]
(c8-1 / and
      :op1 (c8-5 / one
                 :mod (c8-4 / old)
                 :domain (c8-7 / that))
      :op2 (c8-8 / refer-01
                 :ARG0 c8-7
                 :ARG1 (c8-3 / truth-value
                             :polarity-of (c8-2 / find-01
                                                :ARG0 (c8-12 / person
                                                             :name (c8-13 / name
                                                                          :op1 "Schultz"))
                                                :ARG1 (c8-14 / tissue
                                                             :ARG1-of (c8-0 / soft-02)
                                                             :ARG1-of (c8-9 / legitimate-02)
                                                             :part-of (c8-6 / product
                                                                            :name (c8-10 / name
                                                                                         :op1 "Dino")))))
                 :mod (c8-11 / just)))

# ::snt are you sure you have a new claim and not an old croc that has already been debunked ?
# ::tokens ["are", "you", "sure", "you", "have", "a", "new", "claim", "and", "not", "an", "old", "croc", "that", "has", "already", "been", "debunked", "?"]
# ::lemmas ["be", "you", "sure", "you", "have", "a", "new", "claim", "and", "not", "an", "old", "croc", "that", "have", "already", "be", "debunk", "?"]
(c9-0 / sure-02
      :polarity (c9-3 / amr-unknown)
      :ARG0 (c9-10 / you)
      :ARG1 (c9-6 / have-03
                  :ARG0 c9-10
                  :ARG1 (c9-11 / and
                               :op1 (c9-5 / claim-01
                                          :ARG0 c9-10
                                          :ARG1-of (c9-9 / new-01))
                               :op2 (c9-1 / claim-01
                                          :ARG0 c9-10
                                          :ARG1 (c9-7 / croc
                                                      :mod (c9-8 / old)
                                                      :ARG1-of (c9-2 / debunk-01
                                                                     :time (c9-4 / already)))
                                          :polarity -))))

# ::snt not a claim . A study , with evolutionist labs performing the tests .
# ::tokens ["not", "a", "claim", ".", "A", "study", ",", "with", "evolutionist", "labs", "performing", "the", "tests", "."]
# ::lemmas ["not", "a", "claim", ".", "a", "study", ",", "with", "evolutionist", "lab", "perform", "the", "test", "."]
(c10-4 / multi-sentence
       :snt1 (c10-1 / claim-01
                    :polarity -)
       :snt2 (c10-0 / study-01
                    :accompanier (c10-3 / lab
                                        :mod (c10-5 / evolutionist)
                                        :ARG0-of (c10-2 / test-01))))

# ::snt they weren't creationist labs . They are labs run by evolutionists . So u can't blame the lab
# ::tokens ["they", "were", "n't", "creationist", "labs", ".", "They", "are", "labs", "run", "by", "evolutionists", ".", "So", "u", "ca", "n't", "blame", "the", "lab"]
# ::lemmas ["they", "be", "not", "creationist", "lab", ".", "they", "be", "lab", "run", "by", "evolutionist", ".", "so", "u", "can", "not", "blame", "the", "lab"]
(c11-9 / multi-sentence
       :snt1 (c11-5 / lab
                    :mod (c11-1 / creationist)
                    :domain (c11-3 / they)
                    :polarity -)
       :snt2 (c11-6 / lab
                    :ARG1-of (c11-4 / run-01
                                    :ARG0 (c11-11 / evolutionist))
                    :domain (c11-2 / they))
       :snt3 (c11-8 / possible-01
                    :ARG1 (c11-7 / blame-01
                                 :ARG0 (c11-10 / you)
                                 :ARG1 (c11-0 / lab))
                    :polarity -))

# ::snt sorry where are there labs run by ' evolutionists ' they only exist in your imagination
# ::tokens ["sorry", "where", "are", "there", "labs", "run", "by", "'", "evolutionists", "'", "they", "only", "exist", "in", "your", "imagination"]
# ::lemmas ["sorry", "where", "be", "there", "lab", "run", "by", "'", "evolutionist", "'", "they", "only", "exist", "in", "your", "imagination"]
(c12-0 / sorry-01
       :ARG2 (c12-5 / lab
                    :ARG1-of (c12-4 / run-01
                                    :ARG0 (c12-8 / evolutionist))
                    :location (c12-1 / amr-unknown)
                    :ARG1-of (c12-2 / exist-01
                                    :ARG2 (c12-6 / imagine-01
                                                 :ARG0 (c12-7 / you))
                                    :mod (c12-3 / only))))

# ::snt there are many labs that perform carbon dating . If you don't find the study yourself , I'll find it . They used
# ::tokens ["there", "are", "many", "labs", "that", "perform", "carbon", "dating", ".", "If", "you", "do", "n't", "find", "the", "study", "yourself", ",", "I", "'ll", "find", "it", ".", "They", "used"]
# ::lemmas ["there", "be", "many", "lab", "that", "perform", "carbon", "date", ".", "if", "you", "do", "not", "find", "the", "study", "yourself", ",", "i", "'ll", "find", "it", ".", "they", "use"]
(c13-11 / multi-sentence
        :snt1 (c13-10 / perform-02
                      :ARG0 (c13-9 / lab
                                   :quant (c13-3 / many))
                      :ARG1 (c13-0 / date-01
                                   :ARG1 (c13-4 / carbon)))
        :snt2 (c13-2 / find-01
                     :ARG0 (c13-5 / i)
                     :ARG1 (c13-1 / study-01)
                     :condition (c13-7 / find-01
                                       :ARG0 (c13-12 / you)
                                       :ARG1 c13-1
                                       :polarity -))
        :snt3 (c13-6 / use-01
                     :ARG0 (c13-8 / they)))

# ::snt but where are there any ' evolutionists ' let alone evolutionists who can fund their own labs
# ::tokens ["but", "where", "are", "there", "any", "'", "evolutionists", "'", "let", "alone", "evolutionists", "who", "can", "fund", "their", "own", "labs"]
# ::lemmas ["but", "where", "be", "there", "any", "'", "evolutionist", "'", "let", "alone", "evolutionist", "who", "can", "fund", "their", "own", "lab"]
(c14-2 / contrast-01
       :ARG2 (c14-5 / be-located-at-91
                    :ARG1 (c14-8 / evolutionist
                                 :mod (c14-0 / any)
                                 :mod (c14-3 / let-alone)
                                 :ARG0-of (c14-1 / fund-01
                                                 :ARG1 (c14-4 / lab
                                                              :poss c14-8)
                                                 :ARG1-of (c14-6 / possible-01)))
                    :ARG2 (c14-7 / amr-unknown)))

# ::snt actually , anyone providing a sample must pay for it to be tested , so the labs aren't fully self funded .
# ::tokens ["actually", ",", "anyone", "providing", "a", "sample", "must", "pay", "for", "it", "to", "be", "tested", ",", "so", "the", "labs", "are", "n't", "fully", "self", "funded", "."]
# ::lemmas ["actually", ",", "anyone", "provide", "a", "sample", "must", "pay", "for", "it", "to", "be", "test", ",", "so", "the", "lab", "be", "not", "fully", "self", "funded", "."]
(c15-3 / cause-01
       :ARG0 (c15-5 / obligate-01
                    :ARG1 (c15-1 / anyone
                                 :ARG0-of (c15-9 / provide-01
                                                 :ARG1 (c15-0 / sample-01)))
                    :ARG2 (c15-6 / pay-01
                                 :ARG0 c15-1
                                 :ARG3 (c15-7 / test-01
                                              :ARG1 c15-0))
                    :ARG1-of (c15-10 / actual-02))
       :ARG1 (c15-2 / fund-01
                    :ARG1 (c15-8 / lab)
                    :degree (c15-4 / full)
                    :polarity -))

# ::snt Let's not forget that any radiocarbon dating of dinosaur tissue will produce an erroneous result .
# ::tokens ["Let", "'s", "not", "forget", "that", "any", "radiocarbon", "dating", "of", "dinosaur", "tissue", "will", "produce", "an", "erroneous", "result", "."]
# ::lemmas ["let", "us", "not", "forget", "that", "any", "radiocarbon", "date", "of", "dinosaur", "tissue", "will", "produce", "an", "erroneous", "result", "."]
(c16-2 / forget-01
       :ARG0 (c16-3 / we)
       :ARG1 (c16-8 / produce-01
                    :ARG0 (c16-0 / date-02
                                 :ARG1 (c16-6 / tissue
                                              :mod (c16-4 / dinosaur))
                                 :mod (c16-1 / any)
                                 :mod (c16-7 / radiocarbon))
                    :ARG1 (c16-5 / result-01
                                 :mod (c16-9 / erroneous)))
       :mode imperative)

# ::snt let's stay on the topic of the dino C14 dating . We can discuss radiometric dating assumptions another time .
# ::tokens ["let", "'s", "stay", "on", "the", "topic", "of", "the", "dino", "C14", "dating", ".", "We", "can", "discuss", "radiometric", "dating", "assumptions", "another", "time", "."]
# ::lemmas ["let", "us", "stay", "on", "the", "topic", "of", "the", "dino", "C14", "date", ".", "we", "can", "discuss", "radiometric", "date", "assumption", "another", "time", "."]
(c17-11 / multi-sentence
        :snt1 (c17-0 / stay-01
                     :ARG1 (c17-3 / we)
                     :ARG3 (c17-8 / topic
                                  :topic (c17-1 / date-02
                                                :ARG1 (c17-10 / product
                                                              :name (c17-12 / name
                                                                            :op1 "Dino"
                                                                            :op2 "C14"))))
                     :mode imperative)
        :snt2 (c17-7 / possible-01
                     :ARG1 (c17-4 / discuss-01
                                  :ARG0 (c17-13 / we)
                                  :ARG1 (c17-2 / assume-02
                                               :ARG1 (c17-5 / date-02
                                                            :manner (c17-9 / radiometric)))
                                  :time (c17-6 / another))))
