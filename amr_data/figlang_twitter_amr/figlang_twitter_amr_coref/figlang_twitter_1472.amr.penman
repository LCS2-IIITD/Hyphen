# ::snt Hi I'm one of the million who didn't vote for Brexit . For the avoidance of doubt I'm not willing yo <URL>
# ::tokens ["Hi", "I", "'m", "one", "of", "the", "million", "who", "did", "n't", "vote", "for", "Brexit", ".", "For", "the", "avoidance", "of", "doubt", "I", "'m", "not", "willing", "yo", "<", "URL", ">"]
# ::lemmas ["hi", "i", "be", "one", "of", "the", "million", "who", "do", "not", "vote", "for", "Brexit", ".", "for", "the", "avoidance", "of", "doubt", "i", "be", "not", "willing", "yo", "<", "URL", ">"]
(c1-10 / multi-sentence
       :snt1 (c1-4 / hi)
       :snt2 (c1-9 / include-91
                   :ARG1 (c1-5 / i)
                   :ARG2 (c1-8 / person
                               :ARG0-of (c1-6 / vote-01
                                              :ARG1 (c1-7 / thing
                                                          :name (c1-11 / name
                                                                       :op1 "Brexit"))
                                              :polarity -)
                               :quant 1000000))
       :snt3 (c1-3 / will-02
                   :ARG0 c1-5
                   :ARG1 (c1-1 / avoid-01
                               :ARG0 c1-5
                               :ARG1 (c1-0 / doubt-01
                                           :ARG0 c1-5))
                   :ARG1-of (c1-2 / cause-01
                                  :ARG0 c1-1
                                  :ARG0 c1-5
                                  :ARG1 c1-0)
                   :polarity -))

# ::snt The PM says million are supporting her . million voted Brexit . m minus m leaves m who didn't vote Brexit . Not a typo .
# ::tokens ["The", "PM", "says", "million", "are", "supporting", "her", ".", "million", "voted", "Brexit", ".", "m", "minus", "m", "leaves", "m", "who", "did", "n't", "vote", "Brexit", ".", "Not", "a", "typo", "."]
# ::lemmas ["the", "pm", "say", "million", "be", "support", "she", ".", "million", "vote", "Brexit", ".", "m", "minus", "m", "leave", "m", "who", "do", "not", "vote", "Brexit", ".", "not", "a", "typo", "."]
(c2-14 / multi-sentence
       :snt1 (c2-0 / say-01
                   :ARG0 (c2-13 / person
                                :ARG0-of (c2-6 / have-org-role-91
                                               :ARG2 (c2-3 / minister
                                                           :mod (c2-10 / prime))))
                   :ARG1 (c2-12 / support-01
                                :ARG0 (c2-5 / person
                                            :quant 1000000)
                                :ARG1 (c2-7 / she)))
       :snt2 (c2-9 / vote-01
                   :ARG0 (c2-4 / person
                               :ARG0-of (c2-2 / vote-01
                                              :ARG1 (c2-1 / political-party
                                                          :name (c2-15 / name
                                                                       :op1 "Leave"
                                                                       :op2 "17"))
                                              :polarity -)
                               :ARG0-of (c2-8 / vote-01
                                              :ARG1 c2-1
                                              :polarity -))
                   :snt3 (c2-11 / typo
                                :polarity -)))

# ::snt The PM says million are supporting her . million voted to remain . m minus m leaves m who didn't vote to remain .
# ::tokens ["The", "PM", "says", "million", "are", "supporting", "her", ".", "million", "voted", "to", "remain", ".", "m", "minus", "m", "leaves", "m", "who", "did", "n't", "vote", "to", "remain", "."]
# ::lemmas ["the", "pm", "say", "million", "be", "support", "she", ".", "million", "vote", "to", "remain", ".", "m", "minus", "m", "leave", "m", "who", "do", "not", "vote", "to", "remain", "."]
(c3-0 / say-01
      :ARG0 (c3-13 / person
                   :ARG0-of (c3-6 / have-org-role-91
                                  :ARG2 (c3-14 / minister
                                               :mod (c3-9 / prime))))
      :ARG1 (c3-1 / and
                  :op1 (c3-12 / support-01
                              :ARG0 (c3-5 / person
                                          :quant 1000000)
                              :ARG1 (c3-7 / she))
                  :op2 (c3-8 / vote-01
                             :ARG0 c3-5
                             :ARG1 (c3-10 / remain-01
                                          :ARG1 c3-5))
                  :op3 (c3-2 / vote-01
                             :ARG0 (c3-4 / person
                                         :quant (c3-3 / minus
                                                      :op1 (c3-11 / leaves)))
                             :ARG1 c3-10
                             :polarity -)))

# ::snt so , if she said ' there are million people who are not actively opposing me ' I couldn't argue with that
# ::tokens ["so", ",", "if", "she", "said", "'", "there", "are", "million", "people", "who", "are", "not", "actively", "opposing", "me", "'", "I", "could", "n't", "argue", "with", "that"]
# ::lemmas ["so", ",", "if", "she", "say", "'", "there", "be", "million", "people", "who", "be", "not", "actively", "oppose", "i", "'", "i", "could", "not", "argue", "with", "that"]
(c4-7 / possible-01
      :ARG1 (c4-1 / argue-02
                  :ARG0 (c4-2 / i)
                  :ARG1 (c4-5 / that))
      :condition (c4-0 / say-01
                       :ARG0 (c4-6 / she)
                       :ARG1 (c4-4 / person
                                   :ARG0-of (c4-3 / oppose-01
                                                  :ARG1 c4-6
                                                  :manner (c4-8 / activity-06)
                                                  :polarity -)
                                   :quant 1000000))
      :polarity -)

# ::snt or , if she said ' there are only million people who are actively opposing me ' I wouldn't argue with that
# ::tokens ["or", ",", "if", "she", "said", "'", "there", "are", "only", "million", "people", "who", "are", "actively", "opposing", "me", "'", "I", "would", "n't", "argue", "with", "that"]
# ::lemmas ["or", ",", "if", "she", "say", "'", "there", "be", "only", "million", "people", "who", "be", "actively", "oppose", "i", "'", "i", "would", "not", "argue", "with", "that"]
(c5-4 / or
      :op2 (c5-2 / argue-02
                 :ARG0 (c5-8 / i)
                 :ARG2 (c5-5 / that)
                 :condition (c5-0 / say-01
                                  :ARG0 (c5-7 / she)
                                  :ARG1 (c5-6 / person
                                              :mod (c5-3 / only)
                                              :ARG0-of (c5-1 / oppose-01
                                                             :ARG1 c5-7
                                                             :manner (c5-9 / activity-06
                                                                           :ARG0 c5-6))
                                              :quant 1000000))
                 :polarity -))

# ::snt That leaves million whose opinion she can't know . But whose support she is assuming ...
# ::tokens ["That", "leaves", "million", "whose", "opinion", "she", "ca", "n't", "know", ".", "But", "whose", "support", "she", "is", "assuming", "..."]
# ::lemmas ["that", "leave", "million", "whose", "opinion", "she", "can", "not", "know", ".", "but", "whose", "support", "she", "be", "assume", "..."]
(c6-12 / multi-sentence
       :snt1 (c6-9 / leave-13
                   :ARG0 (c6-7 / that)
                   :ARG1 (c6-11 / person
                                :ARG0-of (c6-5 / opine-01
                                               :ARG1 (c6-3 / thing
                                                           :ARG1-of (c6-13 / know-01
                                                                           :ARG0 (c6-0 / she)
                                                                           :ARG1-of (c6-6 / possible-01
                                                                                          :polarity -))))
                                :quant 1000000))
       :snt2 (c6-2 / contrast-01
                   :ARG2 (c6-1 / assume-02
                               :ARG0 (c6-10 / she)
                               :ARG1 (c6-4 / support-01
                                           :ARG0 (c6-8 / she)))))

# ::snt I don't know , but would definitely guess more 'ers didn't vote than 'ers . Surveys ? Polls ?
# ::tokens ["I", "do", "n't", "know", ",", "but", "would", "definitely", "guess", "more", "'", "ers", "did", "n't", "vote", "than", "'", "ers", ".", "Surveys", "?", "Polls", "?"]
# ::lemmas ["i", "do", "not", "know", ",", "but", "would", "definitely", "guess", "more", "'", "er", "do", "not", "vote", "than", "'", "er", ".", "survey", "?", "poll", "?"]
(c7-13 / multi-sentence
       :snt1 (c7-4 / contrast-01
                   :ARG1 (c7-14 / know-01
                                :ARG0 (c7-12 / i)
                                :polarity -)
                   :ARG2 (c7-11 / guess-01
                                :ARG0 c7-12
                                :ARG1 (c7-8 / vote-01
                                            :ARG0 (c7-10 / person
                                                         :ARG1-of (c7-7 / have-quant-91
                                                                        :ARG3 (c7-5 / more)
                                                                        :ARG4 (c7-9 / person
                                                                                    :ARG1-of (c7-3 / vote-01))))
                                            :polarity -)
                                :mod (c7-0 / definite)))
       :snt2 (c7-2 / and
                   :op1 (c7-1 / survey-01)
                   :op2 (c7-6 / poll-01)
                   :polarity (c7-15 / amr-unknown)))

# ::snt unfortunately not voting when there is a vote counts for nothing . So a majority voted to leave .
# ::tokens ["unfortunately", "not", "voting", "when", "there", "is", "a", "vote", "counts", "for", "nothing", ".", "So", "a", "majority", "voted", "to", "leave", "."]
# ::lemmas ["unfortunately", "not", "vote", "when", "there", "be", "a", "vote", "count", "for", "nothing", ".", "so", "a", "majority", "vote", "to", "leave", "."]
(c8-8 / multi-sentence
      :snt1 (c8-2 / fortunate-01
                  :ARG2 (c8-6 / vote-01
                              :time (c8-3 / count-04
                                          :ARG1 (c8-1 / vote-01)
                                          :ARG3 (c8-9 / nothing))
                              :polarity -)
                  :polarity -)
      :snt2 (c8-0 / cause-01
                  :ARG1 (c8-5 / vote-01
                              :ARG0 (c8-4 / majority)
                              :ARG1 (c8-7 / leave-11
                                          :ARG0 c8-4))))

# ::snt Doesn't change fact that is assuming the support of million people
# ::tokens ["Does", "n't", "change", "fact", "that", "is", "assuming", "the", "support", "of", "million", "people"]
# ::lemmas ["do", "not", "change", "fact", "that", "be", "assume", "the", "support", "of", "million", "people"]
(c9-3 / change-01
      :ARG1 (c9-2 / fact
                  :domain (c9-1 / assume-02
                                :ARG1 (c9-0 / support-01
                                            :ARG0 (c9-4 / person
                                                        :quant 1000000))))
      :polarity -)

# ::snt no facts changed she doesn't need the other million . So no real point in crying over it .
# ::tokens ["no", "facts", "changed", "she", "does", "n't", "need", "the", "other", "million", ".", "So", "no", "real", "point", "in", "crying", "over", "it", "."]
# ::lemmas ["no", "fact", "change", "she", "do", "not", "need", "the", "other", "million", ".", "so", "no", "real", "point", "in", "cry", "over", "it", "."]
(c10-10 / multi-sentence
        :snt1 (c10-3 / change-01
                     :ARG1 (c10-2 / fact)
                     :polarity -)
        :snt2 (c10-11 / need-01
                      :ARG0 (c10-0 / she)
                      :ARG1 (c10-4 / monetary-quantity
                                   :mod (c10-7 / other)
                                   :quant 1000000)
                      :polarity -)
        :snt3 (c10-9 / point-03
                     :ARG1 (c10-1 / cry-02
                                  :ARG1-of (c10-6 / cause-01
                                                  :ARG0 (c10-5 / it)))
                     :ARG1-of (c10-8 / real-04)
                     :polarity -))

# ::snt Who's crying ? Its dead simple : she shouldnt claim mill ppl are willing her on .
# ::tokens ["Who", "'s", "crying", "?", "Its", "dead", "simple", ":", "she", "should", "nt", "claim", "mill", "ppl", "are", "willing", "her", "on", "."]
# ::lemmas ["who", "be", "cry", "?", "its", "dead", "simple", ":", "she", "should", "not", "claim", "mill", "ppl", "be", "willing", "she", "on", "."]
(c11-11 / multi-sentence
        :snt1 (c11-4 / cry-02
                     :ARG0 (c11-3 / amr-unknown))
        :snt2 (c11-0 / simple-02
                     :ARG1 (c11-10 / it)
                     :degree (c11-1 / die-01))
        :snt3 (c11-7 / recommend-01
                     :ARG1 (c11-2 / claim-01
                                  :ARG0 (c11-9 / she)
                                  :ARG1 (c11-5 / will-02
                                               :ARG0 (c11-8 / person
                                                            :quant (c11-6 / multiple
                                                                          :op1 1000000))
                                               :ARG1 c11-9)
                                  :polarity -)))

# ::snt one would hope that million people want the best for the country .
# ::tokens ["one", "would", "hope", "that", "million", "people", "want", "the", "best", "for", "the", "country", "."]
# ::lemmas ["one", "would", "hope", "that", "million", "people", "want", "the", "good", "for", "the", "country", "."]
(c12-2 / hope-01
       :ARG0 (c12-3 / one)
       :ARG1 (c12-1 / want-01
                    :ARG0 (c12-7 / person
                                 :quant 1000000)
                    :ARG1 (c12-4 / thing
                                 :ARG1-of (c12-5 / good-02
                                                 :ARG2 (c12-0 / country)
                                                 :ARG2-of (c12-6 / have-degree-91
                                                                 :ARG1 c12-4
                                                                 :ARG3 (c12-8 / most))))))

# ::snt I'm sure if u saw it as choice between no car crash or a good car crash , u wud feel need to speak out , vote or not
# ::tokens ["I", "'m", "sure", "if", "u", "saw", "it", "as", "choice", "between", "no", "car", "crash", "or", "a", "good", "car", "crash", ",", "u", "wud", "feel", "need", "to", "speak", "out", ",", "vote", "or", "not"]
# ::lemmas ["i", "be", "sure", "if", "u", "see", "it", "as", "choice", "between", "no", "car", "crash", "or", "a", "good", "car", "crash", ",", "u", "wud", "feel", "need", "to", "speak", "out", ",", "vote", "or", "not"]
(c13-0 / sure-02
       :ARG0 (c13-14 / i)
       :ARG1 (c13-4 / feel-01
                    :ARG0 (c13-16 / you)
                    :ARG1 (c13-15 / need-01
                                  :ARG0 c13-16
                                  :ARG1 (c13-2 / and
                                               :op1 (c13-13 / speak-out-03
                                                            :ARG0 c13-16)
                                               :op2 (c13-10 / vote-01
                                                            :ARG0 c13-16
                                                            :polarity -)))
                    :condition (c13-8 / see-01
                                      :ARG0 c13-16
                                      :ARG1 (c13-7 / it)
                                      :ARG2 (c13-5 / choose-01
                                                   :ARG1 (c13-12 / between
                                                                 :op1 (c13-1 / crash-01
                                                                             :ARG1 (c13-9 / car)
                                                                             :polarity -)
                                                                 :op2 (c13-3 / crash-01
                                                                             :ARG1 (c13-6 / car)
                                                                             :ARG1-of (c13-11 / good-02)))))))

# ::snt In the eyes of millions of 'ers - leaving is itself an insane + disasterous decision . Whatever the deal
# ::tokens ["In", "the", "eyes", "of", "millions", "of", "'", "ers", "-", "leaving", "is", "itself", "an", "insane", "+", "disasterous", "decision", ".", "Whatever", "the", "deal"]
# ::lemmas ["in", "the", "eye", "of", "millions", "of", "'", "er", "-", "leaving", "be", "itself", "an", "insane", "+", "disasterous", "decision", ".", "whatever", "the", "deal"]
(c14-9 / multi-sentence
       :snt1 (c14-6 / view-02
                    :ARG0 (c14-8 / person
                                 :quant (c14-1 / multiple
                                               :op1 1000000))
                    :ARG1 (c14-0 / decide-01
                                 :ARG1 (c14-7 / leave-11)
                                 :mod (c14-2 / insane)
                                 :mod (c14-3 / disasterous)))
       :snt2 (c14-4 / whatever
                    :ARG1-of (c14-5 / deal-03)))

# ::snt well unlucky for you that over a million more leave voters don't think it is , that's democracy for you .
# ::tokens ["well", "unlucky", "for", "you", "that", "over", "a", "million", "more", "leave", "voters", "do", "n't", "think", "it", "is", ",", "that", "'s", "democracy", "for", "you", "."]
# ::lemmas ["well", "unlucky", "for", "you", "that", "over", "a", "million", "more", "leave", "voter", "do", "not", "think", "it", "be", ",", "that", "be", "democracy", "for", "you", "."]
(c15-9 / multi-sentence
       :snt1 (c15-6 / lucky
                    :domain (c15-5 / think-01
                                   :ARG0 (c15-8 / person
                                                :ARG0-of (c15-3 / vote-01)
                                                :ARG1-of (c15-7 / leave-17)
                                                :quant (c15-4 / over
                                                              :op1 1000000))
                                   :ARG1 (c15-1 / it)
                                   :polarity -)
                    :beneficiary (c15-10 / you)
                    :polarity -)
       :snt2 (c15-0 / democracy
                    :beneficiary (c15-11 / you)
                    :domain (c15-2 / that)))
