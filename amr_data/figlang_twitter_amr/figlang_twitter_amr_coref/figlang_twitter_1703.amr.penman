# ::snt to anyone else who STILL HAS A WEEK TO GO UNTIL HALF TERM .
# ::tokens ["to", "anyone", "else", "who", "STILL", "HAS", "A", "WEEK", "TO", "GO", "UNTIL", "HALF", "TERM", "."]
# ::lemmas ["to", "anyone", "else", "who", "still", "have", "a", "week", "to", "GO", "until", "half", "term", "."]
(c1-0 / say-01
      :ARG2 (c1-2 / anyone
                  :mod (c1-8 / else)
                  :ARG0-of (c1-4 / have-03
                                 :ARG1 (c1-5 / temporal-quantity
                                             :unit (c1-3 / week)
                                             :duration-of (c1-6 / go-01
                                                                :ARG1 c1-2
                                                                :ARG4 (c1-7 / half))
                                             :quant 1)
                                 :mod (c1-1 / still))))

# ::snt of nationality ( Britishness ) - with focus on film language & terminology - that is as far as my tired brain has got
# ::tokens ["of", "nationality", "(", "Britishness", ")", "-", "with", "focus", "on", "film", "language", "&", "terminology", "-", "that", "is", "as", "far", "as", "my", "tired", "brain", "has", "got"]
# ::lemmas ["of", "nationality", "(", "Britishness", ")", "-", "with", "focus", "on", "film", "language", "&", "terminology", "-", "that", "be", "as", "far", "as", "my", "tired", "brain", "have", "get"]
(c2-4 / have-degree-91
      :ARG1 (c2-14 / nationality
                   :ARG1-of (c2-13 / mean-01
                                   :ARG2 (c2-2 / country
                                               :name (c2-8 / name
                                                           :op1 "Great"
                                                           :op2 "Britain")))
                   :ARG0-of (c2-1 / focus-01
                                  :ARG2 (c2-0 / and
                                              :op1 (c2-9 / language
                                                         :mod (c2-6 / film))
                                              :op2 (c2-7 / terminology))))
      :ARG2 (c2-10 / far)
      :ARG3 (c2-15 / equal)
      :ARG4 (c2-11 / get-03
                   :ARG1 (c2-5 / brain
                               :part-of (c2-12 / i)
                               :ARG1-of (c2-3 / tire-01))))

# ::snt I'd start with stereotypes , then think of others in other ( British ) films , then use film lang to analyse how they're created .
# ::tokens ["I", "'d", "start", "with", "stereotypes", ",", "then", "think", "of", "others", "in", "other", "(", "British", ")", "films", ",", "then", "use", "film", "lang", "to", "analyse", "how", "they", "'re", "created", "."]
# ::lemmas ["i", "would", "start", "with", "stereotype", ",", "then", "think", "of", "other", "in", "other", "(", "British", ")", "film", ",", "then", "use", "film", "lang", "to", "analyse", "how", "they", "be", "create", "."]
(c3-14 / and
       :op1 (c3-11 / start-01
                   :ARG0 (c3-2 / i)
                   :ARG2 (c3-19 / stereotype-01))
       :op2 (c3-6 / think-01
                  :ARG0 c3-2
                  :ARG2 (c3-5 / other
                              :location (c3-15 / film
                                               :mod (c3-16 / other)
                                               :ARG1-of (c3-7 / mean-01
                                                              :ARG2 (c3-13 / film
                                                                           :mod (c3-3 / country
                                                                                      :name (c3-8 / name
                                                                                                  :op1 "Great"
                                                                                                  :op2 "Britain"))))))
                  :op3 (c3-17 / use-01
                              :ARG0 c3-2
                              :ARG1 (c3-18 / language
                                           :name (c3-1 / name
                                                       :op1 "Film"
                                                       :op2 "Lang"))
                              :ARG2 (c3-10 / analyze-01
                                           :ARG0 c3-2
                                           :ARG1 (c3-4 / thing
                                                       :manner-of (c3-0 / create-01
                                                                        :ARG1 (c3-9 / they))))
                              :time (c3-12 / then))))

# ::snt Would be useful to recap audience demographics re social class & get them to visualise the class stereotypes somehow
# ::tokens ["Would", "be", "useful", "to", "recap", "audience", "demographics", "re", "social", "class", "&", "get", "them", "to", "visualise", "the", "class", "stereotypes", "somehow"]
# ::lemmas ["would", "be", "useful", "to", "recap", "audience", "demographic", "re", "social", "class", "&", "get", "they", "to", "visualise", "the", "class", "stereotype", "somehow"]
(c4-6 / useful-05
      :ARG1 (c4-3 / and
                  :op1 (c4-8 / recap-01
                             :ARG1 (c4-0 / demographics
                                         :mod (c4-11 / audience)
                                         :topic (c4-4 / class
                                                      :mod (c4-1 / social))))
                  :op2 (c4-9 / get-04
                             :ARG1 (c4-7 / visualize-01
                                         :ARG0 c4-11
                                         :ARG1 (c4-10 / stereotype-01
                                                      :ARG1 (c4-2 / class))
                                         :manner (c4-5 / somehow)))))

# ::snt Yep , I think actually providing them with social class & audience demogs would save time also = more time allocated on analysis .
# ::tokens ["Yep", ",", "I", "think", "actually", "providing", "them", "with", "social", "class", "&", "audience", "demogs", "would", "save", "time", "also", "=", "more", "time", "allocated", "on", "analysis", "."]
# ::lemmas ["yep", ",", "i", "think", "actually", "provide", "they", "with", "social", "class", "&", "audience", "demog", "would", "save", "time", "also", "=", "more", "time", "allocate", "on", "analysis", "."]
(c5-6 / think-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-11 / save-01
                   :ARG0 (c5-18 / provide-01
                                :ARG1 (c5-15 / and
                                             :op1 (c5-0 / demogog
                                                        :mod (c5-4 / class
                                                                   :mod (c5-17 / society)))
                                             :op2 (c5-13 / demog
                                                         :mod (c5-9 / audience)))
                                :ARG2 (c5-5 / they)
                                :ARG1-of (c5-1 / actual-02))
                   :ARG1 (c5-8 / time)
                   :ARG1-of (c5-10 / equal-01
                                   :ARG2 (c5-12 / time
                                                :ARG1-of (c5-19 / allocate-01
                                                                :ARG0 (c5-2 / analyze-01))
                                                :ARG1-of (c5-16 / have-quant-91
                                                                :ARG3 (c5-7 / more)))))
      :mod (c5-14 / yep))

# ::snt Oh glad you think that - useful revision for them too . Sometimes I think they all have memories like Dory .
# ::tokens ["Oh", "glad", "you", "think", "that", "-", "useful", "revision", "for", "them", "too", ".", "Sometimes", "I", "think", "they", "all", "have", "memories", "like", "Dory", "."]
# ::lemmas ["oh", "glad", "you", "think", "that", "-", "useful", "revision", "for", "they", "too", ".", "sometimes", "i", "think", "you", "all", "have", "memory", "like", "Dory", "."]
(c6-14 / multi-sentence
       :snt1 (c6-12 / glad-02
                    :ARG0 (c6-10 / think-01
                                 :ARG0 (c6-16 / you)
                                 :ARG1 (c6-5 / that))
                    :ARG1 (c6-13 / i)
                    :mod (c6-9 / oh))
       :snt2 (c6-3 / think-01
                   :ARG0 (c6-6 / i)
                   :ARG1 (c6-7 / have-03
                               :ARG0 (c6-8 / they
                                           :mod (c6-1 / all))
                               :ARG1 (c6-4 / memory
                                           :ARG1-of (c6-11 / resemble-01
                                                           :ARG2 (c6-2 / thing
                                                                       :name (c6-15 / name
                                                                                    :op1 "Dory"))))
                               :frequency (c6-0 / sometimes))))

# ::snt < I'm fascinated by the Michaela ' drilling ' method and why I'm such an advocate of persistent and repeated use of Quizlet .
# ::tokens ["<", "I", "'m", "fascinated", "by", "the", "Michaela", "'", "drilling", "'", "method", "and", "why", "I", "'m", "such", "an", "advocate", "of", "persistent", "and", "repeated", "use", "of", "Quizlet", "."]
# ::lemmas ["<", "i", "be", "fascinate", "by", "the", "Michaela", "'", "drilling", "'", "method", "and", "why", "i", "be", "such", "an", "advocate", "of", "persistent", "and", "repeat", "use", "of", "Quizlet", "."]
(c7-3 / fascinate-01
      :ARG0 (c7-2 / and
                  :op1 (c7-13 / method
                              :mod (c7-0 / drill-01
                                         :ARG0 (c7-12 / person
                                                      :name (c7-14 / name
                                                                   :op1 "Michaela"))))
                  :op2 (c7-9 / thing
                             :ARG0-of (c7-4 / cause-01
                                            :ARG1 (c7-15 / advocate-01
                                                         :ARG0 (c7-5 / i)
                                                         :ARG1 (c7-7 / use-01
                                                                     :ARG1 (c7-8 / product
                                                                                 :name (c7-10 / name
                                                                                              :op1 "Quizlet"))
                                                                     :ARG1-of (c7-6 / persist-01)
                                                                     :ARG1-of (c7-11 / repeat-01))
                                                         :degree (c7-1 / such)))))
      :ARG1 c7-5)
