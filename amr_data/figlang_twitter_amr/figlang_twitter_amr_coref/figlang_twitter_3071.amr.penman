# ::snt . thinks that more children would cycle if there was more Level offered in schools
# ::tokens [".", "thinks", "that", "more", "children", "would", "cycle", "if", "there", "was", "more", "Level", "offered", "in", "schools"]
# ::lemmas [".", "think", "that", "more", "child", "would", "cycle", "if", "there", "be", "more", "Level", "offer", "in", "school"]
(c1-5 / think-01
      :ARG1 (c1-2 / cycle-02
                  :ARG0 (c1-0 / child
                              :quant (c1-7 / more))
                  :condition (c1-4 / offer-01
                                   :ARG1 (c1-6 / level
                                               :mod (c1-3 / more))
                                   :location (c1-1 / school))))

# ::snt Afraid evidence says not . More kids will cycle when their parents feel they are safe . It's ALL about space
# ::tokens ["Afraid", "evidence", "says", "not", ".", "More", "kids", "will", "cycle", "when", "their", "parents", "feel", "they", "are", "safe", ".", "It", "'s", "ALL", "about", "space"]
# ::lemmas ["afraid", "evidence", "say", "not", ".", "more", "kid", "will", "cycle", "when", "their", "parent", "feel", "they", "be", "safe", ".", "it", "be", "all", "about", "space"]
(c2-14 / multi-sentence
       :snt1 (c2-3 / fear-01
                   :ARG0 (c2-13 / i)
                   :ARG1 (c2-0 / say-01
                               :ARG0 (c2-16 / evidence-01)
                               :polarity -))
       :snt2 (c2-4 / cycle-02
                   :ARG0 (c2-15 / kid
                                :quant (c2-5 / more))
                   :time (c2-9 / feel-01
                               :ARG0 (c2-11 / person
                                            :ARG0-of (c2-6 / have-rel-role-91
                                                           :ARG1 c2-15
                                                           :ARG2 (c2-10 / parent)))
                               :ARG1 (c2-12 / safe-01
                                            :ARG1 c2-15)))
       :snt3 (c2-1 / concern-02
                   :ARG0 (c2-7 / it)
                   :ARG1 (c2-8 / space)
                   :degree (c2-2 / all)))
