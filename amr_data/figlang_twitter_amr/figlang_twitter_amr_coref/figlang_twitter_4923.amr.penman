# ::snt Taking food away from hungry people doesn t help them find a job . It just punishes people who are already suffering . I am fighting for the Minnesotans who could lose their access to food . We can't keep being a country that punishes those trying to make ends meet . <URL>
# ::tokens ["Taking", "food", "away", "from", "hungry", "people", "doesn", "t", "help", "them", "find", "a", "job", ".", "It", "just", "punishes", "people", "who", "are", "already", "suffering", ".", "I", "am", "fighting", "for", "the", "Minnesotans", "who", "could", "lose", "their", "access", "to", "food", ".", "We", "ca", "n't", "keep", "being", "a", "country", "that", "punishes", "those", "trying", "to", "make", "ends", "meet", ".", "<", "URL", ">"]
# ::lemmas ["take", "food", "away", "from", "hungry", "people", "doesn", "t", "help", "they", "find", "a", "job", ".", "it", "just", "punish", "people", "who", "be", "already", "suffer", ".", "i", "be", "fight", "for", "the", "Minnesotans", "who", "could", "lose", "their", "access", "to", "food", ".", "we", "can", "not", "keep", "be", "a", "country", "that", "punish", "those", "try", "to", "make", "end", "meet", ".", "<", "URL", ">"]
(c1-8 / multi-sentence
      :snt1 (c1-24 / help-01
                   :ARG0 (c1-7 / take-away-05
                               :ARG1 (c1-21 / food)
                               :source (c1-30 / person
                                              :ARG0-of (c1-2 / hunger-01)))
                   :ARG1 (c1-17 / find-01
                                :ARG0 c1-30
                                :ARG1 (c1-26 / job))
                   :ARG2 c1-30
                   :polarity -)
      :snt2 (c1-25 / punish-01
                   :ARG0 c1-7
                   :ARG1 (c1-15 / person
                                :ARG0-of (c1-12 / suffer-01
                                                :time (c1-20 / already)))
                   :mod (c1-28 / just))
      :snt3 (c1-19 / fight-01
                   :ARG0 (c1-3 / i)
                   :ARG1 (c1-14 / person
                                :mod (c1-29 / state
                                            :name (c1-9 / name
                                                        :op1 "Minnesota"))
                                :ARG0-of (c1-27 / lose-02
                                                :ARG1 (c1-10 / access-01
                                                             :ARG0 c1-14
                                                             :ARG1 (c1-0 / food))
                                                :ARG1-of (c1-1 / possible-01))))
      :snt4 (c1-18 / possible-01
                   :ARG1 (c1-31 / keep-02
                                :ARG0 (c1-5 / we)
                                :ARG1 (c1-4 / country
                                            :ARG0-of (c1-13 / punish-01
                                                            :ARG1 (c1-22 / person
                                                                         :ARG0-of (c1-6 / try-01
                                                                                        :ARG1 (c1-23 / make-02
                                                                                                     :ARG0 c1-22
                                                                                                     :ARG1 (c1-16 / meet-01
                                                                                                                  :ARG0 c1-22
                                                                                                                  :ARG1 (c1-11 / end))))))))
                   :polarity -))

# ::snt Giving them food feeds them in the short term . Teaching them to work feeds them for a lifetime .
# ::tokens ["Giving", "them", "food", "feeds", "them", "in", "the", "short", "term", ".", "Teaching", "them", "to", "work", "feeds", "them", "for", "a", "lifetime", "."]
# ::lemmas ["give", "they", "food", "feed", "they", "in", "the", "short", "term", ".", "teach", "they", "to", "work", "feed", "they", "for", "a", "lifetime", "."]
(c2-8 / multi-sentence
      :snt1 (c2-1 / feed-01
                  :ARG1 (c2-4 / food)
                  :ARG2 (c2-5 / they)
                  :time (c2-3 / term
                              :ARG1-of (c2-0 / short-07)))
      :snt2 (c2-6 / feed-01
                  :ARG1 (c2-2 / work-01
                              :ARG0 (c2-9 / they
                                          :ARG2-of c2-6))
                  :duration (c2-7 / lifetime)))

# ::snt They already know how to work , to the point of exploitation . Pay people a living wage , augment small businesses to do the same and this type of poverty is solved . Poverty isn t self afflicted .
# ::tokens ["They", "already", "know", "how", "to", "work", ",", "to", "the", "point", "of", "exploitation", ".", "Pay", "people", "a", "living", "wage", ",", "augment", "small", "businesses", "to", "do", "the", "same", "and", "this", "type", "of", "poverty", "is", "solved", ".", "Poverty", "isn", "t", "self", "afflicted", "."]
# ::lemmas ["they", "already", "know", "how", "to", "work", ",", "to", "the", "point", "of", "exploitation", ".", "pay", "people", "a", "living", "wage", ",", "augment", "small", "business", "to", "do", "the", "same", "and", "this", "type", "of", "poverty", "be", "solve", ".", "poverty", "isn", "t", "self", "afflict", "."]
(c3-5 / multi-sentence
      :snt1 (c3-24 / know-03
                   :ARG0 (c3-4 / they)
                   :ARG1 (c3-2 / work-01
                               :ARG0 c3-4)
                   :time (c3-16 / already)
                   :ARG2-of (c3-18 / have-degree-91
                                   :ARG1 c3-4
                                   :ARG3 (c3-3 / to-the-point)
                                   :ARG6 (c3-10 / exploit-01
                                                :ARG1 c3-4)))
      :snt2 (c3-8 / and
                  :op1 (c3-23 / pay-01
                              :ARG0 (c3-15 / you)
                              :ARG1 (c3-7 / wage
                                          :mod (c3-20 / live-01))
                              :ARG2 (c3-19 / person))
                  :op2 (c3-1 / augment-01
                             :ARG0 c3-15
                             :ARG1 (c3-21 / business
                                          :mod (c3-9 / small))
                             :purpose (c3-0 / do-02
                                            :ARG0 c3-15
                                            :ARG1 (c3-6 / thing
                                                        :ARG1-of (c3-22 / same-01))))
                  :op3 (c3-13 / solve-01
                              :ARG1 (c3-25 / afflict-01
                                           :ARG0 (c3-12 / poor)
                                           :ARG1 c3-15
                                           :polarity -)))
      :snt3 c3-13
      :ARG1 (c3-11 / poor
                   :mod (c3-14 / type
                               :mod (c3-17 / this))))

# ::snt Our system is too exploitable , ppl certainly use it to their benefit .
# ::tokens ["Our", "system", "is", "too", "exploitable", ",", "ppl", "certainly", "use", "it", "to", "their", "benefit", "."]
# ::lemmas ["our", "system", "be", "too", "exploitable", ",", "ppl", "certainly", "use", "it", "to", "their", "benefit", "."]
(c4-1 / and
      :op1 (c4-5 / have-degree-91
                 :ARG1 (c4-0 / system
                             :poss (c4-3 / we))
                 :ARG2 (c4-9 / exploitable
                             :domain c4-0)
                 :ARG3 (c4-7 / too))
      :op2 (c4-6 / use-01
                 :ARG0 c4-3)
      :ARG1 c4-0
      :ARG2 (c4-8 / benefit-01
                  :ARG1 (c4-4 / they))
      :mod (c4-2 / certain))

# ::snt Nope what ? That we have not witnessed the abuse of our social services ? You d be so wrong . I ve personally seen lots of it . People who make good money UNDER THE TABLE while getting food stamps , section housing and Medicaid . I ve seen it myself
# ::tokens ["Nope", "what", "?", "That", "we", "have", "not", "witnessed", "the", "abuse", "of", "our", "social", "services", "?", "You", "d", "be", "so", "wrong", ".", "I", "ve", "personally", "seen", "lots", "of", "it", ".", "People", "who", "make", "good", "money", "UNDER", "THE", "TABLE", "while", "getting", "food", "stamps", ",", "section", "housing", "and", "Medicaid", ".", "I", "ve", "seen", "it", "myself"]
# ::lemmas ["nope", "what", "?", "that", "we", "have", "not", "witness", "the", "abuse", "of", "our", "social", "service", "?", "you", "d", "be", "so", "wrong", ".", "i", "ve", "personally", "see", "lot", "of", "it", ".", "people", "who", "make", "good", "money", "under", "the", "TABLE", "while", "get", "food", "stamp", ",", "section", "housing", "and", "Medicaid", ".", "i", "ve", "see", "it", "myself"]
(c5-12 / multi-sentence
       :snt1 (c5-13 / nope
                    :polarity (c5-24 / amr-unknown))
       :snt2 (c5-8 / witness-01
                   :ARG0 (c5-15 / we)
                   :ARG1 (c5-14 / abuse-01
                                :ARG0 (c5-16 / service
                                             :mod (c5-33 / social)
                                             :poss c5-15))
                   :polarity (c5-0 / amr-unknown)
                   :ARG1-of (c5-4 / wrong-04
                                  :ARG2 (c5-22 / you)
                                  :degree (c5-19 / so))
                   :polarity -)
       :snt3 (c5-3 / see-01
                   :ARG0 (c5-2 / i)
                   :ARG1 (c5-32 / lot
                                :ARG1-of (c5-18 / include-91
                                                :ARG2 (c5-20 / it)))
                   :ARG1-of (c5-34 / personal-02))
       :snt4 (c5-5 / see-01
                   :ARG0 (c5-28 / i)
                   :ARG1 (c5-30 / person
                                :ARG0-of (c5-26 / make-05
                                                :ARG1 (c5-21 / money
                                                             :ARG1-of (c5-11 / good-02))
                                                :location (c5-29 / under
                                                                 :op1 (c5-10 / table))
                                                :time (c5-23 / get-01
                                                             :ARG0 c5-30
                                                             :ARG1 (c5-35 / and
                                                                          :op1 (c5-31 / stamp
                                                                                      :mod (c5-25 / food))
                                                                          :op2 (c5-27 / house-01
                                                                                      :mod (c5-6 / section))
                                                                          :op3 (c5-17 / program
                                                                                      :name (c5-1 / name
                                                                                                  :op1 "Medicaid")))))))
       :snt5 (c5-7 / see-01
                   :ARG0 c5-28
                   :ARG1 (c5-9 / it)))
