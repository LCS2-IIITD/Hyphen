# ::snt Please can some help me relate so i can know what to write and which bae am writing to <URL>
# ::tokens ["Please", "can", "some", "help", "me", "relate", "so", "i", "can", "know", "what", "to", "write", "and", "which", "bae", "am", "writing", "to", "<", "URL", ">"]
# ::lemmas ["please", "can", "some", "help", "i", "relate", "so", "i", "can", "know", "what", "to", "write", "and", "which", "bae", "be", "write", "to", "<", "URL", ">"]
(c1-11 / possible-01
       :ARG1 (c1-6 / help-01
                   :ARG0 (c1-0 / some)
                   :ARG1 (c1-9 / relate-01
                               :ARG0 (c1-2 / i
                                           :ARG2-of c1-6))
                   :purpose (c1-7 / possible-01
                                  :ARG1 (c1-12 / know-01
                                               :ARG0 c1-2
                                               :ARG1 (c1-1 / and
                                                           :op1 (c1-8 / thing
                                                                      :ARG1-of (c1-3 / write-01
                                                                                     :ARG0 c1-2))
                                                           :op2 (c1-4 / thing
                                                                      :ARG1-of (c1-13 / write-01
                                                                                      :ARG0 (c1-5 / person
                                                                                                  :name (c1-10 / name
                                                                                                               :op1 "Bae"))))))))
       :polite +)

# ::snt Thinking of what to write to you ... do you mind helping me out ?
# ::tokens ["Thinking", "of", "what", "to", "write", "to", "you", "...", "do", "you", "mind", "helping", "me", "out", "?"]
# ::lemmas ["think", "of", "what", "to", "write", "to", "you", "...", "do", "you", "mind", "help", "i", "out", "?"]
(c2-0 / and
      :op1 (c2-4 / think-01
                 :ARG1 (c2-2 / thing
                             :ARG1-of (c2-1 / write-01
                                            :ARG2 (c2-7 / you))))
      :op2 (c2-6 / mind-01
                 :ARG0 c2-7
                 :ARG1 (c2-3 / help-out-03
                             :ARG0 c2-7
                             :ARG1 (c2-5 / i))
                 :polarity (c2-8 / amr-unknown)))

# ::snt I don't mind at all ... Firstly follow me back and we move on to the next step
# ::tokens ["I", "do", "n't", "mind", "at", "all", "...", "Firstly", "follow", "me", "back", "and", "we", "move", "on", "to", "the", "next", "step"]
# ::lemmas ["i", "do", "not", "mind", "at", "all", "...", "Firstly", "follow", "i", "back", "and", "we", "move", "on", "to", "the", "next", "step"]
(c3-9 / multi-sentence
      :snt1 (c3-3 / mind-01
                  :ARG0 (c3-8 / i)
                  :degree (c3-1 / at-all)
                  :polarity -)
      :snt2 (c3-12 / and
                   :op1 (c3-2 / follow-02
                              :ARG0 (c3-11 / you)
                              :ARG1 (c3-5 / i)
                              :direction (c3-7 / back)
                              :mode imperative
                              :li 1)
                   :op2 (c3-6 / move-01
                              :ARG0 (c3-4 / we)
                              :ARG2 (c3-0 / step-01
                                          :mod (c3-10 / next)))))

# ::snt Now we move to the next step I've got to know you what you like and what you don't
# ::tokens ["Now", "we", "move", "to", "the", "next", "step", "I", "'ve", "got", "to", "know", "you", "what", "you", "like", "and", "what", "you", "do", "n't"]
# ::lemmas ["now", "we", "move", "to", "the", "next", "step", "i", "'ve", "get", "to", "know", "you", "what", "you", "like", "and", "what", "you", "do", "not"]
(c4-4 / obligate-01
      :ARG1 (c4-10 / i)
      :ARG2 (c4-12 / know-01
                   :ARG0 c4-10
                   :ARG1 (c4-1 / and
                               :op1 (c4-6 / thing
                                          :ARG1-of (c4-8 / like-01
                                                         :ARG0 (c4-13 / you)))
                               :op2 (c4-3 / thing
                                          :ARG1-of (c4-9 / like-01
                                                         :ARG0 c4-13
                                                         :polarity -)))
                   :ARG2 c4-13)
      :time (c4-5 / now)
      :time (c4-11 / move-01
                   :ARG0 (c4-2 / we)
                   :ARG2 (c4-0 / step-01
                               :ARG2 (c4-7 / next))))

# ::snt U have ? .. or yet to ? ... am confuse here
# ::tokens ["U", "have", "?", "..", "or", "yet", "to", "?", "...", "am", "confuse", "here"]
# ::lemmas ["u", "have", "?", "..", "or", "yet", "to", "?", "...", "be", "confuse", "here"]
(c5-8 / multi-sentence
      :snt1 (c5-6 / have-03
                  :polarity (c5-2 / amr-unknown)
                  :ARG0 (c5-9 / you))
      :snt2 (c5-7 / have-03
                  :polarity (c5-10 / amr-unknown)
                  :ARG0 (c5-4 / you)
                  :ARG1 (c5-0 / yet))
      :snt3 (c5-5 / confuse-01
                  :ARG1 (c5-3 / you)
                  :location (c5-1 / here)))

# ::snt Yet to are the perfect choice of words Check your DM
# ::tokens ["Yet", "to", "are", "the", "perfect", "choice", "of", "words", "Check", "your", "DM"]
# ::lemmas ["yet", "to", "are", "the", "perfect", "choice", "of", "word", "Check", "your", "dm"]
(c6-2 / check-01
      :ARG0 (c6-5 / you)
      :ARG1 (c6-0 / DM
                  :poss c6-5)
      :concession (c6-1 / choose-01
                        :ARG0 c6-5
                        :ARG1 (c6-3 / word)
                        :ARG1-of (c6-4 / perfect-02))
      :mode imperative)
