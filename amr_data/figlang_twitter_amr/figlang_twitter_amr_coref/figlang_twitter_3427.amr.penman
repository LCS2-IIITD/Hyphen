# ::snt Hallelujah ! The Lord asked me to repot / arrange the plants I have in my apartment , just noticed myself doin it after a while . There's this one pot that I planted a sweet potato in it months ago ; leaves and branches are already withered as I've had - day out of the city vacation <URL>
# ::tokens ["Hallelujah", "!", "The", "Lord", "asked", "me", "to", "repot", "/", "arrange", "the", "plants", "I", "have", "in", "my", "apartment", ",", "just", "noticed", "myself", "doin", "it", "after", "a", "while", ".", "There", "'s", "this", "one", "pot", "that", "I", "planted", "a", "sweet", "potato", "in", "it", "months", "ago", ";", "leaves", "and", "branches", "are", "already", "withered", "as", "I", "'ve", "had", "-", "day", "out", "of", "the", "city", "vacation", "<", "URL", ">"]
# ::lemmas ["Hallelujah", "!", "the", "Lord", "ask", "i", "to", "repot", "/", "arrange", "the", "plant", "i", "have", "in", "my", "apartment", ",", "just", "notice", "myself", "doin", "it", "after", "a", "while", ".", "there", "be", "this", "one", "pot", "that", "i", "plant", "a", "sweet", "potato", "in", "it", "months", "ago", ";", "leave", "and", "branch", "be", "already", "wither", "as", "i", "'ve", "have", "-", "day", "out", "of", "the", "city", "vacation", "<", "URL", ">"]
(c1-13 / multi-sentence
       :snt1 (c1-28 / hallelujah
                    :mode expressive)
       :snt2 (c1-26 / and
                    :op1 (c1-15 / ask-02
                                :ARG0 (c1-33 / person
                                             :name (c1-14 / name
                                                          :op1 "The"
                                                          :op2 "Lord"))
                                :ARG1 (c1-17 / slash
                                             :op1 (c1-12 / repot-01
                                                         :ARG0 (c1-5 / i)
                                                         :ARG1 (c1-29 / plant
                                                                      :location (c1-1 / apartment
                                                                                      :poss c1-5)))
                                             :op2 (c1-34 / arrange-01
                                                         :ARG0 c1-5
                                                         :ARG1 c1-29))
                                :ARG2 c1-5)
                    :op2 (c1-4 / notice-01
                               :ARG0 c1-5
                               :ARG1 (c1-0 / do-02
                                           :ARG0 c1-5
                                           :ARG1 c1-29
                                           :time (c1-3 / after
                                                       :op1 (c1-7 / while)))
                               :mod (c1-32 / just)))
       :snt3 (c1-19 / pot
                    :ARG1-of (c1-18 / plant-01
                                    :ARG0 (c1-20 / i)
                                    :ARG2 c1-1
                                    :time (c1-31 / before
                                                 :op1 (c1-22 / now)
                                                 :quant (c1-27 / multiple
                                                               :op1 (c1-11 / temporal-quantity
                                                                           :unit (c1-21 / month)
                                                                           :quant 1))))
                    :mod (c1-8 / this)
                    :quant 1)
       :snt4 (c1-16 / wither-01
                    :ARG1 (c1-23 / and
                                 :op1 (c1-30 / leaf)
                                 :op2 (c1-25 / branch))
                    :time (c1-9 / already)
                    :ARG1-of (c1-6 / cause-01
                                   :ARG0 (c1-10 / vacation-01
                                                :ARG0 c1-20
                                                :ARG1 (c1-2 / city)
                                                :duration c1-11
                                                :unit (c1-24 / day)
                                                :quant 1))))

# ::snt I thought it's not bearing anything so I've decided to remove and throw the withered leaves and branches including the roots . And it surprised me that I found a small sweet potato ! The Lord told / reminded me that when you thought you're not bearing any fruit whenever
# ::tokens ["I", "thought", "it", "'s", "not", "bearing", "anything", "so", "I", "'ve", "decided", "to", "remove", "and", "throw", "the", "withered", "leaves", "and", "branches", "including", "the", "roots", ".", "And", "it", "surprised", "me", "that", "I", "found", "a", "small", "sweet", "potato", "!", "The", "Lord", "told", "/", "reminded", "me", "that", "when", "you", "thought", "you", "'re", "not", "bearing", "any", "fruit", "whenever"]
# ::lemmas ["i", "think", "it", "be", "not", "bear", "anything", "so", "i", "'ve", "decide", "to", "remove", "and", "throw", "the", "withered", "leave", "and", "branch", "include", "the", "root", ".", "and", "it", "surprise", "i", "that", "i", "find", "a", "small", "sweet", "potato", "!", "the", "Lord", "tell", "/", "remind", "i", "that", "when", "you", "think", "you", "be", "not", "bear", "any", "fruit", "whenever"]
(c2-13 / multi-sentence
       :snt1 (c2-10 / think-01
                    :ARG0 (c2-3 / i)
                    :ARG1 (c2-31 / bear-02
                                 :ARG0 (c2-19 / it)
                                 :ARG1 (c2-26 / anything)
                                 :polarity -)
                    :ARG0-of (c2-6 / cause-01
                                   :ARG1 (c2-0 / decide-01
                                               :ARG0 c2-3
                                               :ARG1 (c2-16 / and
                                                            :op1 (c2-11 / remove-01
                                                                        :ARG0 c2-3
                                                                        :ARG1 (c2-1 / and
                                                                                    :op1 (c2-30 / leaf
                                                                                                :ARG1-of (c2-7 / withered-01))
                                                                                    :op2 (c2-25 / branch
                                                                                                :ARG2-of (c2-20 / include-01
                                                                                                                :ARG1 (c2-9 / root)))))
                                                            :op2 (c2-8 / throw-01
                                                                       :ARG0 c2-3
                                                                       :ARG1 c2-1)))))
       :snt2 (c2-34 / and
                    :op2 (c2-17 / surprise-01
                                :ARG0 (c2-27 / find-01
                                             :ARG0 (c2-28 / i)
                                             :ARG1 (c2-33 / potato
                                                          :mod (c2-32 / small)
                                                          :mod (c2-21 / sweet)))
                                :ARG1 c2-28))
       :snt3 (c2-4 / slash
                   :op1 (c2-15 / tell-01
                               :ARG0 (c2-29 / person
                                            :name (c2-14 / name
                                                         :op1 "The"
                                                         :op2 "Lord"))
                               :ARG1 (c2-18 / bear-02
                                            :ARG0 (c2-24 / you)
                                            :ARG1 (c2-23 / fruit)
                                            :time (c2-22 / think-01
                                                         :ARG0 c2-24
                                                         :ARG1 (c2-5 / bear-02
                                                                     :ARG0 c2-24
                                                                     :ARG1 c2-23
                                                                     :mod (c2-2 / any
                                                                                :time-of c2-5)
                                                                     :polarity -))))
                   :ARG2 c2-28)
       :op2 (c2-12 / remind-01
                   :ARG0 c2-29
                   :ARG1 c2-18
                   :ARG2 c2-28))
