# ::snt We can't let take over EPA . Email your senator now to block his nomination ! <URL>
# ::tokens ["We", "ca", "n't", "let", "take", "over", "EPA", ".", "Email", "your", "senator", "now", "to", "block", "his", "nomination", "!", "<", "URL", ">"]
# ::lemmas ["we", "can", "not", "let", "take", "over", "EPA", ".", "email", "your", "senator", "now", "to", "block", "his", "nomination", "!", "<", "URL", ">"]
(c1-12 / multi-sentence
       :snt1 (c1-11 / possible-01
                    :ARG1 (c1-8 / let-01
                                :ARG0 (c1-1 / we)
                                :ARG1 (c1-6 / take-over-12
                                            :ARG0 c1-1
                                            :ARG1 (c1-9 / government-organization
                                                        :name (c1-13 / name
                                                                     :op1 "EPA"))))
                    :polarity -)
       :snt2 (c1-15 / email-01
                    :ARG0 (c1-14 / you)
                    :ARG1 (c1-3 / block-01
                                :ARG0 c1-14
                                :ARG1 (c1-7 / nominate-01
                                            :ARG1 (c1-2 / he)))
                    :ARG2 (c1-5 / person
                                :ARG0-of (c1-10 / have-org-role-91
                                                :ARG1 c1-14
                                                :ARG2 (c1-0 / senator)))
                    :time (c1-4 / now)
                    :mode imperative))

# ::snt remember when you didnt want Dakota access and left piles of trash by protests <URL>
# ::tokens ["remember", "when", "you", "did", "nt", "want", "Dakota", "access", "and", "left", "piles", "of", "trash", "by", "protests", "<", "URL", ">"]
# ::lemmas ["remember", "when", "you", "do", "not", "want", "Dakota", "access", "and", "leave", "pile", "of", "trash", "by", "protest", "<", "URL", ">"]
(c2-6 / remember-01
      :ARG0 (c2-10 / you)
      :ARG1 (c2-5 / time
                  :time-of (c2-1 / and
                                 :op1 (c2-2 / want-01
                                            :ARG0 c2-10
                                            :ARG1 (c2-11 / access-01
                                                         :ARG1 (c2-0 / state
                                                                     :name (c2-9 / name
                                                                                 :op1 "Dakota")))
                                            :polarity -)
                                 :op2 (c2-7 / leave-12
                                            :ARG0 c2-10
                                            :ARG1 (c2-8 / pile-01
                                                        :ARG1 (c2-3 / trash))
                                            :ARG2 (c2-4 / protest-01))))
      :mode imperative)
