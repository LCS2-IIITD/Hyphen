# ::snt No Prescription charges , no bridge tolls , university fees , best performing NHS in UK highest employment rate in UK <URL>
# ::tokens ["No", "Prescription", "charges", ",", "no", "bridge", "tolls", ",", "university", "fees", ",", "best", "performing", "NHS", "in", "UK", "highest", "employment", "rate", "in", "UK", "<", "URL", ">"]
# ::lemmas ["no", "prescription", "charge", ",", "no", "bridge", "toll", ",", "university", "fee", ",", "good", "perform", "NHS", "in", "UK", "high", "employment", "rate", "in", "UK", "<", "URL", ">"]
(c1-12 / and
       :op1 (c1-4 / charge-01
                  :ARG3 (c1-19 / prescribe-02)
                  :polarity -)
       :op2 (c1-5 / toll
                  :mod (c1-18 / bridge)
                  :polarity -)
       :op3 (c1-13 / fee
                   :mod (c1-16 / university)
                   :polarity -)
       :op4 (c1-17 / perform-02
                   :ARG0 (c1-7 / government-organization
                               :name (c1-9 / name
                                           :op1 "NHS"))
                   :ARG1 (c1-6 / rate
                               :mod (c1-10 / employ-01)
                               :location (c1-0 / country
                                               :name (c1-1 / name
                                                           :op1 "UK"))
                               :ARG1-of (c1-15 / have-degree-91
                                               :ARG2 (c1-2 / high-02
                                                           :ARG1 c1-6)
                                               :ARG3 (c1-8 / most)))
                   :ARG1-of (c1-3 / have-degree-91
                                  :ARG2 (c1-11 / good-02
                                               :ARG1 c1-17)
                                  :ARG3 (c1-14 / most)
                                  :ARG5 c1-0)))

# ::snt until the Barnett formula gets scrapped . Please vote for independence , please . Don't choke like last time .
# ::tokens ["until", "the", "Barnett", "formula", "gets", "scrapped", ".", "Please", "vote", "for", "independence", ",", "please", ".", "Do", "n't", "choke", "like", "last", "time", "."]
# ::lemmas ["until", "the", "Barnett", "formula", "gets", "scrap", ".", "please", "vote", "for", "independence", ",", "please", ".", "do", "not", "choke", "like", "last", "time", "."]
(c2-9 / multi-sentence
      :snt1 (c2-7 / be-temporally-at-91
                  :ARG2 (c2-3 / until
                              :op1 (c2-0 / scrap-01
                                         :ARG1 (c2-1 / formula
                                                     :name (c2-10 / name
                                                                  :op1 "Barnett")))))
      :snt2 (c2-4 / vote-01
                  :ARG0 (c2-11 / you)
                  :ARG1 (c2-8 / independence)
                  :mode imperative
                  :polite +)
      :snt3 (c2-2 / choke-01
                  :ARG0 (c2-12 / you)
                  :ARG1-of (c2-5 / resemble-01
                                 :time (c2-6 / last)
                                 :ARG2 c2-2)
                  :polarity -
                  :mode imperative
                  :polite +))

# ::snt English tax payers support their every need . Bit like mummies changing their shitty nappies .
# ::tokens ["English", "tax", "payers", "support", "their", "every", "need", ".", "Bit", "like", "mummies", "changing", "their", "shitty", "nappies", "."]
# ::lemmas ["English", "tax", "payer", "support", "their", "every", "need", ".", "bit", "like", "mummy", "change", "their", "shitty", "nappy", "."]
(c3-13 / multi-sentence
       :snt1 (c3-0 / support-01
                   :ARG0 (c3-12 / person
                                :ARG0-of (c3-6 / pay-01
                                               :ARG1 (c3-7 / tax))
                                :mod (c3-2 / country
                                           :name (c3-14 / name
                                                        :op1 "England")))
                   :ARG1 (c3-4 / thing
                               :ARG1-of (c3-8 / need-01
                                              :ARG0 c3-12)
                               :mod (c3-15 / every)))
       :snt2 (c3-9 / resemble-01
                   :ARG1 (c3-3 / mummies)
                   :ARG2 (c3-1 / change-01
                               :ARG0 c3-3
                               :ARG1 (c3-5 / nappy
                                           :poss c3-3
                                           :mod (c3-11 / shitty)))
                   :degree (c3-10 / bit)))

# ::snt Do you think Scottish people pay any tax ? Is it only English people that pay tax ?
# ::tokens ["Do", "you", "think", "Scottish", "people", "pay", "any", "tax", "?", "Is", "it", "only", "English", "people", "that", "pay", "tax", "?"]
# ::lemmas ["do", "you", "think", "Scottish", "people", "pay", "any", "tax", "?", "be", "it", "only", "English", "people", "that", "pay", "tax", "?"]
(c4-13 / multi-sentence
       :snt1 (c4-10 / think-01
                    :ARG0 (c4-15 / you)
                    :ARG1 (c4-12 / pay-01
                                 :ARG0 (c4-9 / person
                                             :mod (c4-3 / country
                                                        :name (c4-14 / name
                                                                     :op1 "Scotland")))
                                 :ARG1 (c4-5 / tax-01
                                             :mod (c4-2 / any)))
                    :polarity (c4-16 / amr-unknown))
       :snt2 (c4-6 / pay-01
                   :ARG0 (c4-4 / person
                               :mod (c4-0 / country
                                          :name (c4-11 / name
                                                       :op1 "England"))
                               :mod (c4-8 / only))
                   :ARG1 (c4-7 / tax-01)
                   :polarity (c4-1 / amr-unknown)))

# ::snt Those who aren't smacked out on heroine probably do . But the English hav <URL>
# ::tokens ["Those", "who", "are", "n't", "smacked", "out", "on", "heroine", "probably", "do", ".", "But", "the", "English", "hav", "<", "URL", ">"]
# ::lemmas ["those", "who", "be", "not", "smack", "out", "on", "heroine", "probably", "do", ".", "but", "the", "English", "hav", "<", "URL", ">"]
(c5-8 / multi-sentence
      :snt1 (c5-7 / probable
                  :domain (c5-0 / do-02
                                :ARG0 (c5-6 / person
                                            :ARG1-of (c5-1 / smack-02
                                                           :ARG2 (c5-5 / heroine)
                                                           :polarity -))))
      :snt2 (c5-3 / contrast-01
                  :ARG2 (c5-4 / person
                              :mod (c5-2 / country
                                         :name (c5-9 / name
                                                     :op1 "England")))))

# ::snt What's the name of this woman who keeos knocking people out ?
# ::tokens ["What", "'s", "the", "name", "of", "this", "woman", "who", "keeos", "knocking", "people", "out", "?"]
# ::lemmas ["what", "be", "the", "name", "of", "this", "woman", "who", "keeo", "knock", "people", "out", "?"]
(c6-5 / name-01
      :ARG1 (c6-2 / woman
                  :mod (c6-3 / this)
                  :ARG0-of (c6-1 / knock-out-03
                                 :ARG1 (c6-4 / person)))
      :ARG2 (c6-0 / amr-unknown))

# ::snt rejected the Barnett formula yet ? Hahaha , you'll flounder after Indy . %
# ::tokens ["rejected", "the", "Barnett", "formula", "yet", "?", "Hahaha", ",", "you", "'ll", "flounder", "after", "Indy", ".", "%"]
# ::lemmas ["reject", "the", "Barnett", "formula", "yet", "?", "Hahaha", ",", "you", "'ll", "flounder", "after", "Indy", ".", "%"]
(c7-7 / multi-sentence
      :snt1 (c7-5 / reject-01
                  :ARG1 (c7-1 / formula
                              :name (c7-8 / name
                                          :op1 "Barnett"))
                  :time (c7-9 / yet))
      :snt2 (c7-3 / flounder-01
                  :ARG1 (c7-10 / you)
                  :time (c7-0 / after
                              :op1 (c7-4 / team
                                         :name (c7-6 / name
                                                     :op1 "Indy")))
                  :mod (c7-2 / haha
                             :mode expressive)))

# ::snt the barnett formula saw a drop in funding for Scotland
# ::tokens ["the", "barnett", "formula", "saw", "a", "drop", "in", "funding", "for", "Scotland"]
# ::lemmas ["the", "barnett", "formula", "see", "a", "drop", "in", "funding", "for", "Scotland"]
(c8-0 / see-01
      :ARG0 (c8-2 / formula
                  :name (c8-6 / name
                              :op1 "Barnett"
                              :op2 " formula"))
      :ARG1 (c8-1 / drop-01
                  :ARG1 (c8-4 / fund-01
                              :ARG1 (c8-3 / country
                                          :name (c8-5 / name
                                                      :op1 "Scotland")))))

# ::snt dont want control , want rid of you lot . Parasite nation
# ::tokens ["do", "nt", "want", "control", ",", "want", "rid", "of", "you", "lot", ".", "Parasite", "nation"]
# ::lemmas ["do", "not", "want", "control", ",", "want", "rid", "of", "you", "lot", ".", "parasite", "nation"]
(c9-7 / multi-sentence
      :snt1 (c9-2 / want-01
                  :ARG0 (c9-9 / you)
                  :ARG1 (c9-1 / control-01)
                  :polarity -)
      :snt2 (c9-10 / want-01
                   :ARG0 (c9-6 / i)
                   :ARG1 (c9-3 / rid-01
                               :ARG0 c9-6
                               :ARG1 (c9-0 / you
                                           :mod (c9-4 / lot))))
      :snt3 (c9-8 / nation
                  :mod (c9-5 / parasite)))
