# ::snt Just weighed my tuna .. is the g inclusive of the springwater and tin ? <URL>
# ::tokens ["Just", "weighed", "my", "tuna", "..", "is", "the", "g", "inclusive", "of", "the", "springwater", "and", "tin", "?", "<", "URL", ">"]
# ::lemmas ["just", "weigh", "my", "tuna", "..", "be", "the", "g", "inclusive", "of", "the", "springwater", "and", "tin", "?", "<", "URL", ">"]
(c1-9 / multi-sentence
      :snt1 (c1-2 / weigh-01
                  :ARG0 (c1-8 / i)
                  :ARG1 (c1-6 / tuna
                              :poss c1-8)
                  :mod (c1-7 / just))
      :snt2 (c1-4 / include-01
                  :ARG1 (c1-1 / and
                              :op1 (c1-10 / water
                                          :mod (c1-0 / spring))
                              :op2 (c1-3 / tin))
                  :polarity (c1-5 / amr-unknown)))

# ::snt we can confirm that the weight would be inclusive of the springwater but not the tin . We hope this helps .
# ::tokens ["we", "can", "confirm", "that", "the", "weight", "would", "be", "inclusive", "of", "the", "springwater", "but", "not", "the", "tin", ".", "We", "hope", "this", "helps", "."]
# ::lemmas ["we", "can", "confirm", "that", "the", "weight", "would", "be", "inclusive", "of", "the", "springwater", "but", "not", "the", "tin", ".", "we", "hope", "this", "help", "."]
(c2-13 / multi-sentence
       :snt1 (c2-12 / possible-01
                    :ARG1 (c2-3 / confirm-01
                                :ARG0 (c2-4 / we)
                                :ARG1 (c2-0 / contrast-01
                                            :ARG1 (c2-5 / include-01
                                                        :ARG1 (c2-14 / weight)
                                                        :ARG2 (c2-10 / water
                                                                     :mod (c2-1 / spring)))
                                            :ARG2 (c2-7 / include-01
                                                        :ARG1 (c2-9 / tin)
                                                        :ARG2 c2-14
                                                        :polarity -))))
       :snt2 (c2-8 / hope-01
                   :ARG0 (c2-2 / we)
                   :ARG1 (c2-11 / help-01
                                :ARG0 (c2-6 / this))))

# ::snt interesting . So it's underweight then . Dont think I poured out g of springwater
# ::tokens ["interesting", ".", "So", "it", "'s", "underweight", "then", ".", "Do", "nt", "think", "I", "poured", "out", "g", "of", "springwater"]
# ::lemmas ["interesting", ".", "so", "it", "be", "underweight", "then", ".", "do", "not", "think", "i", "pour", "out", "g", "of", "springwater"]
(c3-12 / multi-sentence
       :snt1 (c3-11 / interest-01)
       :snt2 (c3-3 / infer-01
                   :ARG1 (c3-5 / underweight
                               :domain (c3-4 / it)
                               :time (c3-8 / then)))
       :snt3 (c3-2 / think-01
                   :ARG0 (c3-6 / i)
                   :ARG1 (c3-9 / pour-01
                               :ARG0 c3-6
                               :ARG1 (c3-10 / g
                                            :source (c3-1 / water
                                                          :mod (c3-0 / spring)))
                               :direction (c3-7 / out))
                   :polarity -))

# ::snt .. the barcode , best before date and any other numbers of letters showing on the packaging ? /2
# ::tokens ["..", "the", "barcode", ",", "best", "before", "date", "and", "any", "other", "numbers", "of", "letters", "showing", "on", "the", "packaging", "?", "/2"]
# ::lemmas ["..", "the", "barcode", ",", "well", "before", "date", "and", "any", "other", "number", "of", "letter", "show", "on", "the", "packaging", "?", "/2"]
(c4-3 / and
      :polarity (c4-13 / amr-unknown)
      :op1 (c4-9 / barcode
                 :ARG1-of (c4-7 / good-02
                                :time (c4-1 / before
                                            :op1 (c4-0 / date))
                                :ARG2-of (c4-5 / have-degree-91
                                               :ARG1 c4-9
                                               :ARG3 (c4-11 / most))))
      :op2 (c4-12 / number
                  :mod (c4-8 / letter)
                  :mod (c4-6 / other)
                  :mod (c4-2 / any)
                  :ARG1-of (c4-4 / show-01
                                 :location (c4-10 / package-01))))

# ::snt thanks for replying but I have since thrown out the can of tuna
# ::tokens ["thanks", "for", "replying", "but", "I", "have", "since", "thrown", "out", "the", "can", "of", "tuna"]
# ::lemmas ["thank", "for", "replying", "but", "i", "have", "since", "throw", "out", "the", "can", "of", "tuna"]
(c5-2 / contrast-01
      :ARG1 (c5-5 / thank-01
                  :ARG0 (c5-7 / i)
                  :ARG1 (c5-8 / you)
                  :ARG2 (c5-6 / reply-01
                              :ARG0 c5-8))
      :ARG2 (c5-4 / throw-out-06
                  :ARG0 c5-7
                  :ARG1 (c5-0 / can
                              :mod (c5-3 / tuna))
                  :time (c5-1 / since)))

# ::snt we understand , can you please confirm which store you bought the tuna from so we can make sure they're aware ?
# ::tokens ["we", "understand", ",", "can", "you", "please", "confirm", "which", "store", "you", "bought", "the", "tuna", "from", "so", "we", "can", "make", "sure", "they", "'re", "aware", "?"]
# ::lemmas ["we", "understand", ",", "can", "you", "please", "confirm", "which", "store", "you", "buy", "the", "tuna", "from", "so", "we", "can", "make", "sure", "they", "be", "aware", "?"]
(c6-11 / multi-sentence
       :snt1 (c6-5 / understand-01
                   :ARG0 (c6-3 / we))
       :snt2 (c6-10 / possible-01
                    :ARG1 (c6-2 / confirm-01
                                :ARG0 (c6-12 / you)
                                :ARG1 (c6-0 / store
                                            :ARG2-of (c6-9 / buy-01
                                                           :ARG0 c6-12
                                                           :ARG1 (c6-7 / tuna)))
                                :purpose (c6-6 / possible-01
                                               :ARG1 (c6-14 / ensure-01
                                                            :ARG0 (c6-13 / we)
                                                            :ARG1 (c6-8 / realize-01
                                                                        :ARG0 (c6-4 / they))))
                                :polite +)
                    :polarity (c6-1 / amr-unknown)))
