# ::snt Dear Bernie Brats , if you didn't work to stop Donald Trump , then save your lectures and concerns about Hillary Clinton supporters !
# ::tokens ["Dear", "Bernie", "Brats", ",", "if", "you", "did", "n't", "work", "to", "stop", "Donald", "Trump", ",", "then", "save", "your", "lectures", "and", "concerns", "about", "Hillary", "Clinton", "supporters", "!"]
# ::lemmas ["Dear", "Bernie", "Brats", ",", "if", "you", "do", "not", "work", "to", "stop", "Donald", "Trump", ",", "then", "save", "your", "lecture", "and", "concern", "about", "Hillary", "Clinton", "supporter", "!"]
(c1-0 / say-01
      :ARG1 (c1-7 / have-condition-91
                  :ARG1 (c1-13 / save-02
                               :ARG0 (c1-14 / person
                                            :name (c1-16 / name
                                                         :op1 "Bernie"
                                                         :op2 "Brats")
                                            :mod (c1-1 / dear))
                               :ARG1 (c1-2 / and
                                           :op1 (c1-12 / lecture-01
                                                       :ARG0 c1-14)
                                           :op2 (c1-3 / concern-01
                                                      :ARG0 (c1-10 / person
                                                                   :ARG0-of (c1-8 / support-01
                                                                                  :ARG1 (c1-6 / person
                                                                                              :name (c1-11 / name
                                                                                                           :op1 "Hillary"
                                                                                                           :op2 "Clinton"))))
                                                      :ARG1 c1-14))
                               :mode imperative)
                  :ARG2 (c1-4 / work-01
                              :ARG0 c1-14
                              :ARG1 (c1-15 / stop-01
                                           :ARG0 c1-14
                                           :ARG1 (c1-5 / person
                                                       :name (c1-9 / name
                                                                   :op1 "Donald"
                                                                   :op2 "Trump")))
                              :polarity -))
      :ARG2 c1-14)

# ::snt the goal for everyone outside of his minions should have been to stop trump . If u didnt ? You welcomed him . Folks nd own it .
# ::tokens ["the", "goal", "for", "everyone", "outside", "of", "his", "minions", "should", "have", "been", "to", "stop", "trump", ".", "If", "u", "did", "nt", "?", "You", "welcomed", "him", ".", "Folks", "nd", "own", "it", "."]
# ::lemmas ["the", "goal", "for", "everyone", "outside", "of", "his", "minion", "should", "have", "be", "to", "stop", "trump", ".", "if", "u", "do", "nt", "?", "you", "welcome", "he", ".", "folk", "nd", "own", "it", "."]
(c2-13 / multi-sentence
       :snt1 (c2-10 / recommend-01
                    :ARG1 (c2-0 / stop-01
                                :ARG0 (c2-16 / everyone
                                             :location (c2-9 / outside
                                                             :op1 (c2-4 / minion
                                                                        :poss (c2-7 / he))))
                                :ARG1 (c2-12 / person
                                             :name (c2-14 / name
                                                          :op1 " trump")))
                    :ARG2 c2-16)
       :snt2 (c2-11 / have-condition-91
                    :ARG1 (c2-5 / welcome-01
                                :ARG0 (c2-15 / you)
                                :ARG1 (c2-1 / he))
                    :ARG2 (c2-2 / do-02
                                :ARG0 c2-15
                                :polarity -))
       :snt3 (c2-8 / own-01
                   :ARG0 (c2-3 / folk)
                   :ARG1 (c2-6 / it)))

# ::snt possibl but mainly bc those who voted for HRC wouldnt have thrown tantrums & risked Trump . <URL>
# ::tokens ["possibl", "but", "mainly", "bc", "those", "who", "voted", "for", "HRC", "would", "nt", "have", "thrown", "tantrums", "&", "risked", "Trump", ".", "<", "URL", ">"]
# ::lemmas ["possibl", "but", "mainly", "bc", "those", "who", "vote", "for", "HRC", "would", "not", "have", "throw", "tantrums", "&", "risk", "Trump", ".", "<", "URL", ">"]
(c3-1 / cause-01
      :ARG0 (c3-0 / and
                  :op1 (c3-7 / throw-01
                             :ARG0 (c3-10 / person
                                          :mod (c3-3 / that)
                                          :ARG0-of (c3-5 / vote-01
                                                         :ARG1 (c3-6 / person
                                                                     :name (c3-12 / name
                                                                                  :op1 "HRC"))))
                             :ARG1 (c3-13 / tantrum)
                             :polarity -)
                  :op2 (c3-8 / risk-01
                             :ARG0 c3-10
                             :ARG2 (c3-4 / person
                                         :name (c3-9 / name
                                                     :op1 "Trump"))
                             :polarity -))
      :ARG1 (c3-2 / possible-01)
      :mod (c3-11 / main))

# ::snt no , they just threw a primary and ran the candidate that was going to lose . we tried to warn you all
# ::tokens ["no", ",", "they", "just", "threw", "a", "primary", "and", "ran", "the", "candidate", "that", "was", "going", "to", "lose", ".", "we", "tried", "to", "warn", "you", "all"]
# ::lemmas ["no", ",", "they", "just", "throw", "a", "primary", "and", "run", "the", "candidate", "that", "be", "go", "to", "lose", ".", "we", "try", "to", "warn", "you", "all"]
(c4-11 / multi-sentence
       :snt1 (c4-0 / and
                   :op1 (c4-5 / throw-01
                              :ARG0 (c4-3 / they)
                              :ARG1 (c4-10 / primary)
                              :mod (c4-9 / just))
                   :op2 (c4-6 / run-02
                              :ARG0 c4-3
                              :ARG1 (c4-1 / candidate
                                          :ARG0-of (c4-7 / lose-03))))
       :snt2 (c4-12 / try-01
                    :ARG0 (c4-2 / we)
                    :ARG1 (c4-13 / warn-01
                                 :ARG0 c4-2
                                 :ARG2 (c4-8 / you
                                             :mod (c4-4 / all)))))

# ::snt u didn't warn anything . U don't get to have a melt down bc ur candidate didn't win . It's childish . So all in all THX
# ::tokens ["u", "did", "n't", "warn", "anything", ".", "U", "do", "n't", "get", "to", "have", "a", "melt", "down", "bc", "ur", "candidate", "did", "n't", "win", ".", "It", "'s", "childish", ".", "So", "all", "in", "all", "THX"]
# ::lemmas ["u", "do", "not", "warn", "anything", ".", "u", "do", "not", "get", "to", "have", "a", "melt", "down", "bc", "ur", "candidate", "do", "not", "win", ".", "it", "be", "childish", ".", "so", "all", "in", "all", "THX"]
(c5-11 / multi-sentence
       :snt1 (c5-3 / warn-01
                   :ARG0 (c5-13 / you)
                   :ARG1 (c5-1 / anything)
                   :polarity -)
       :snt2 (c5-9 / get-22
                   :ARG0 (c5-14 / you)
                   :ARG1 (c5-2 / melt-down-02
                               :ARG1 c5-14)
                   :ARG1-of (c5-4 / cause-01
                                  :ARG0 (c5-5 / win-01
                                              :ARG0 (c5-0 / candidate
                                                          :poss c5-14)
                                              :polarity -))
                   :polarity -)
       :snt3 (c5-6 / childish
                   :domain (c5-10 / it))
       :snt4 c5-4
       :ARG1 (c5-7 / all-in-all
                   :op1 (c5-8 / thing
                              :name (c5-12 / name
                                           :op1 "THX"))))

# ::snt right & then help the enemy by voting a rd party or writing his name in ? good job ! !
# ::tokens ["right", "&", "then", "help", "the", "enemy", "by", "voting", "a", "rd", "party", "or", "writing", "his", "name", "in", "?", "good", "job", "!", "!"]
# ::lemmas ["right", "&", "then", "help", "the", "enemy", "by", "vote", "a", "rd", "party", "or", "write", "his", "name", "in", "?", "good", "job", "!", "!"]
(c6-11 / multi-sentence
       :snt1 (c6-0 / and
                   :op1 (c6-7 / right-06)
                   :op2 (c6-2 / help-01
                              :ARG1 (c6-13 / enemy)
                              :ARG2 (c6-4 / or
                                          :op1 (c6-3 / vote-01
                                                     :ARG0 c6-13
                                                     :ARG1 (c6-10 / party
                                                                  :mod (c6-5 / political-party
                                                                             :name (c6-12 / name
                                                                                          :op1 "Republican"))))
                                          :op2 (c6-1 / write-in-03
                                                     :ARG0 c6-13
                                                     :ARG1 c6-12
                                                     :poss c6-13)))
                   :time (c6-6 / then))
       :snt2 (c6-9 / job
                   :ARG1-of (c6-8 / good-02)
                   :mode expressive))

# ::snt despite the DNCs behavior , he overwhelmingly lost the south . He didn't reach out . Period .
# ::tokens ["despite", "the", "DNCs", "behavior", ",", "he", "overwhelmingly", "lost", "the", "south", ".", "He", "did", "n't", "reach", "out", ".", "Period", "."]
# ::lemmas ["despite", "the", "dnc", "behavior", ",", "he", "overwhelmingly", "lose", "the", "south", ".", "he", "do", "not", "reach", "out", ".", "period", "."]
(c7-10 / multi-sentence
       :snt1 (c7-6 / lose-03
                   :ARG0 (c7-2 / he)
                   :ARG1 (c7-0 / south)
                   :ARG0-of (c7-4 / overwhelm-01)
                   :concession (c7-7 / behave-01
                                     :ARG0 (c7-3 / organization
                                                 :name (c7-11 / name
                                                              :op1 "DNC"))))
       :snt2 (c7-5 / reach-03
                   :ARG0 (c7-8 / he)
                   :direction (c7-1 / out)
                   :mod (c7-9 / period)
                   :polarity -))

# ::snt Bernie lost cause of Bernie , period ! I'm sick to death of still hearing , she stole it , blah , blah , blah !
# ::tokens ["Bernie", "lost", "cause", "of", "Bernie", ",", "period", "!", "I", "'m", "sick", "to", "death", "of", "still", "hearing", ",", "she", "stole", "it", ",", "blah", ",", "blah", ",", "blah", "!"]
# ::lemmas ["Bernie", "lose", "cause", "of", "Bernie", ",", "period", "!", "i", "be", "sick", "to", "death", "of", "still", "hear", ",", "she", "steal", "it", ",", "blah", ",", "blah", ",", "blah", "!"]
(c8-15 / multi-sentence
       :snt1 (c8-11 / lose-03
                    :ARG0 (c8-14 / person
                                 :name (c8-16 / name
                                              :op1 "Bernie"))
                    :ARG1-of (c8-3 / cause-01
                                   :ARG0 (c8-9 / person
                                               :name c8-16
                                               :op1 "Bernie")))
       :mod (c8-5 / period)
       :snt2 (c8-0 / sick-04
                   :ARG0 (c8-6 / hear-01
                               :ARG0 (c8-4 / i)
                               :ARG1 (c8-2 / and
                                           :op1 (c8-13 / steal-01
                                                       :ARG0 (c8-7 / she)
                                                       :ARG1 (c8-8 / it))
                                           :op2 (c8-12 / blah-blah-blah))
                               :mod (c8-10 / still))
                   :ARG1 c8-4
                   :degree (c8-1 / die-01
                                 :ARG1 c8-4)))

# ::snt She stole it by receiving more votes than him - I have literally heard Bernie Bros argue this
# ::tokens ["She", "stole", "it", "by", "receiving", "more", "votes", "than", "him", "-", "I", "have", "literally", "heard", "Bernie", "Bros", "argue", "this"]
# ::lemmas ["she", "steal", "it", "by", "receive", "more", "vote", "than", "he", "-", "i", "have", "literally", "hear", "Bernie", "Bros", "argue", "this"]
(c9-0 / steal-01
      :ARG0 (c9-11 / she)
      :ARG1 (c9-12 / it)
      :manner (c9-8 / receive-01
                    :ARG0 c9-11
                    :ARG1 (c9-7 / vote-01
                                :ARG1 c9-11
                                :ARG1-of (c9-4 / have-quant-91
                                               :ARG3 (c9-13 / more)
                                               :ARG4 (c9-6 / he))))
      :ARG0-of (c9-3 / cause-01
                     :ARG1 (c9-1 / hear-01
                                 :ARG0 (c9-5 / i)
                                 :ARG1 (c9-2 / argue-01
                                             :ARG0 (c9-9 / person
                                                         :name (c9-14 / name
                                                                      :op1 "Bernie"
                                                                      :op2 "Bros"))
                                             :ARG1 c9-0)
                                 :manner (c9-10 / literal))))

# ::snt label and divide is why we lost . ur still doing it .
# ::tokens ["label", "and", "divide", "is", "why", "we", "lost", ".", "ur", "still", "doing", "it", "."]
# ::lemmas ["label", "and", "divide", "be", "why", "we", "lose", ".", "ur", "still", "do", "it", "."]
(c10-9 / multi-sentence
       :snt1 (c10-3 / cause-01
                    :ARG0 (c10-2 / and
                                 :op1 (c10-6 / label-01)
                                 :op2 (c10-0 / divide-02))
                    :ARG1 (c10-7 / lose-03
                                 :ARG0 (c10-4 / we)))
       :snt2 (c10-8 / do-02
                    :ARG0 (c10-10 / you)
                    :ARG1 (c10-5 / it)
                    :mod (c10-1 / still)))

# ::snt we don't sit here & stamp our feet and whine . We still fight bc THAT'S what u do .
# ::tokens ["we", "do", "n't", "sit", "here", "&", "stamp", "our", "feet", "and", "whine", ".", "We", "still", "fight", "bc", "THAT", "'S", "what", "u", "do", "."]
# ::lemmas ["we", "do", "not", "sit", "here", "&", "stamp", "our", "foot", "and", "whine", ".", "we", "still", "fight", "bc", "that", "be", "what", "u", "do", "."]
(c11-12 / multi-sentence
        :snt1 (c11-2 / and
                     :op1 (c11-0 / sit-01
                                 :ARG1 (c11-5 / we
                                              :part (c11-3 / foot))
                                 :ARG2 (c11-6 / here)
                                 :polarity -)
                     :op2 (c11-10 / stamp-01
                                  :ARG0 c11-5
                                  :ARG1 c11-3
                                  :polarity -)
                     :op3 (c11-14 / whine-01
                                  :ARG0 c11-5
                                  :polarity -))
        :snt2 (c11-8 / fight-01
                     :ARG0 (c11-11 / we)
                     :mod (c11-7 / still)
                     :ARG1-of (c11-4 / cause-01
                                     :ARG0 (c11-1 / do-02
                                                  :ARG0 (c11-13 / you)
                                                  :ARG1 (c11-9 / that)))))

# ::snt that was EXACTLY what you all were doing when i stepped in . own it .
# ::tokens ["that", "was", "EXACTLY", "what", "you", "all", "were", "doing", "when", "i", "stepped", "in", ".", "own", "it", "."]
# ::lemmas ["that", "be", "exactly", "what", "you", "all", "be", "do", "when", "i", "step", "in", ".", "own", "it", "."]
(c12-7 / multi-sentence
       :snt1 (c12-0 / do-02
                    :ARG0 (c12-8 / you
                                 :mod (c12-2 / all))
                    :ARG1 (c12-5 / that
                                 :mod (c12-9 / exact))
                    :time (c12-1 / step-in-02
                                 :ARG1 (c12-6 / i)))
       :snt2 (c12-4 / own-01
                    :ARG0 c12-8
                    :ARG1 (c12-3 / it)
                    :mode imperative))
