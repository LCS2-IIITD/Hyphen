# ::snt mins on the line to try and add my daughter to my insurance and no response - ridiculous - now I have to go out and have to try again tomorrow .
# ::tokens ["mins", "on", "the", "line", "to", "try", "and", "add", "my", "daughter", "to", "my", "insurance", "and", "no", "response", "-", "ridiculous", "-", "now", "I", "have", "to", "go", "out", "and", "have", "to", "try", "again", "tomorrow", "."]
# ::lemmas ["min", "on", "the", "line", "to", "try", "and", "add", "my", "daughter", "to", "my", "insurance", "and", "no", "response", "-", "ridiculous", "-", "now", "i", "have", "to", "go", "out", "and", "have", "to", "try", "again", "tomorrow", "."]
(c1-9 / multi-sentence
      :snt1 (c1-16 / and
                   :op1 (c1-6 / try-01
                              :ARG0 (c1-2 / i)
                              :ARG1 (c1-11 / add-02
                                           :ARG0 c1-2
                                           :ARG1 (c1-20 / person
                                                        :ARG0-of (c1-18 / have-rel-role-91
                                                                        :ARG1 c1-2
                                                                        :ARG2 (c1-0 / daughter)))
                                           :ARG2 (c1-12 / insure-02
                                                        :ARG3 c1-2))
                              :duration (c1-17 / multiple
                                               :op1 (c1-3 / temporal-quantity
                                                          :unit (c1-15 / minute)
                                                          :quant 1)))
                   :op2 (c1-7 / respond-01
                              :polarity -)
                   :ARG1-of (c1-4 / ridiculous-02))
      :snt2 (c1-1 / and
                  :op1 (c1-5 / obligate-01
                             :ARG1 (c1-13 / i)
                             :ARG2 (c1-8 / go-out-17
                                         :ARG0 c1-13))
                  :op2 (c1-19 / obligate-01
                              :ARG1 c1-13
                              :ARG2 (c1-10 / try-01
                                           :ARG0 c1-13
                                           :mod (c1-21 / again)
                                           :time (c1-14 / tomorrow)))))

# ::snt We're sure the team have been working through the calls as quickly and efficiently as they can .
# ::tokens ["We", "'re", "sure", "the", "team", "have", "been", "working", "through", "the", "calls", "as", "quickly", "and", "efficiently", "as", "they", "can", "."]
# ::lemmas ["we", "be", "sure", "the", "team", "have", "be", "work", "through", "the", "call", "as", "quickly", "and", "efficiently", "as", "they", "can", "."]
(c2-0 / sure-02
      :ARG0 (c2-3 / we)
      :ARG1 (c2-9 / work-01
                  :ARG0 (c2-7 / team)
                  :ARG1 (c2-2 / call-02)
                  :manner (c2-1 / and
                                :op1 (c2-4 / quick-02)
                                :op2 (c2-10 / efficient-01)
                                :ARG2-of (c2-5 / have-degree-91
                                               :ARG1 c2-9
                                               :ARG3 (c2-6 / equal)
                                               :ARG4 (c2-8 / possible-01
                                                           :ARG1 c2-9)))))

# ::snt The team are open until pm today , we hope you manage to get everything sorted Tim .
# ::tokens ["The", "team", "are", "open", "until", "pm", "today", ",", "we", "hope", "you", "manage", "to", "get", "everything", "sorted", "Tim", "."]
# ::lemmas ["the", "team", "be", "open", "until", "pm", "today", ",", "we", "hope", "you", "manage", "to", "get", "everything", "sort", "Tim", "."]
(c3-2 / and
      :op1 (c3-7 / open-09
                 :ARG1 (c3-8 / team)
                 :time (c3-6 / until
                             :op1 (c3-0 / date-entity
                                        :mod (c3-4 / today)
                                        :time "17:00")))
      :op2 (c3-5 / hope-01
                 :ARG0 (c3-3 / we)
                 :ARG1 (c3-10 / manage-02
                              :ARG0 (c3-9 / person
                                          :name (c3-11 / name
                                                       :op1 "Tim"))
                              :ARG1 (c3-1 / sort-01
                                          :ARG0 c3-9
                                          :ARG1 (c3-12 / everything)))))

# ::snt Hope so - I shall try again in a bit . Thank you .
# ::tokens ["Hope", "so", "-", "I", "shall", "try", "again", "in", "a", "bit", ".", "Thank", "you", "."]
# ::lemmas ["hope", "so", "-", "i", "shall", "try", "again", "in", "a", "bit", ".", "thank", "you", "."]
(c4-7 / multi-sentence
      :snt1 (c4-3 / hope-01
                  :ARG0 (c4-6 / i)
                  :ARG1 (c4-0 / so))
      :snt2 (c4-4 / try-01
                  :ARG0 c4-6
                  :mod (c4-1 / again)
                  :time (c4-10 / after
                               :op1 (c4-8 / now)
                               :quant (c4-5 / bit)))
      :snt3 (c4-2 / thank-01
                  :ARG0 c4-6
                  :ARG1 (c4-9 / you)))
