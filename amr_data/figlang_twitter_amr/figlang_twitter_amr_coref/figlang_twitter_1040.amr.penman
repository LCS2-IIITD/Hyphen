# ::snt The pro CAA rallies organised by BJP e . g . , Assam and TN are drawing massive crowds
# ::tokens ["The", "pro", "CAA", "rallies", "organised", "by", "BJP", "e", ".", "g", ".", ",", "Assam", "and", "TN", "are", "drawing", "massive", "crowds"]
# ::lemmas ["the", "pro", "CAA", "rally", "organise", "by", "BJP", "e", ".", "g", ".", ",", "Assam", "and", "TN", "be", "draw", "massive", "crowd"]
(c1-0 / draw-02
      :ARG0 (c1-9 / rally-01
                  :ARG1 (c1-7 / oppose-01
                              :ARG1 (c1-6 / organization
                                          :name (c1-14 / name
                                                       :op1 "CAA")))
                  :ARG1-of (c1-2 / organize-01
                                 :ARG0 (c1-12 / political-party
                                              :name (c1-10 / name
                                                           :op1 "BJP"))
                                 :example (c1-3 / and
                                                :op1 (c1-1 / state
                                                           :name (c1-8 / name
                                                                       :op1 "Assam"))
                                                :op2 (c1-11 / state
                                                            :name (c1-4 / name
                                                                        :op1 "Tennessee")))))
      :ARG1 (c1-5 / crowd
                  :mod (c1-13 / massive)))

# ::snt I'm still not able to find the logic that government will give those afghanis , Pakistanis and Bangladeshi's ( who arrived in India before December , . ) a citizenship + documents + Home ( ? ) + Job ( ? ) + education ( ? ) { except Muslims } . And the government will throw out the citizens
# ::tokens ["I", "'m", "still", "not", "able", "to", "find", "the", "logic", "that", "government", "will", "give", "those", "afghanis", ",", "Pakistanis", "and", "Bangladeshi", "'s", "(", "who", "arrived", "in", "India", "before", "December", ",", ".", ")", "a", "citizenship", "+", "documents", "+", "Home", "(", "?", ")", "+", "Job", "(", "?", ")", "+", "education", "(", "?", ")", "{", "except", "Muslims", "}", ".", "And", "the", "government", "will", "throw", "out", "the", "citizens"]
# ::lemmas ["i", "be", "still", "not", "able", "to", "find", "the", "logic", "that", "government", "will", "give", "those", "afghani", ",", "Pakistanis", "and", "Bangladeshi", "'s", "(", "who", "arrive", "in", "India", "before", "December", ",", ".", ")", "a", "citizenship", "+", "document", "+", "home", "(", "?", ")", "+", "Job", "(", "?", ")", "+", "education", "(", "?", ")", "{", "except", "Muslims", "}", ".", "and", "the", "government", "will", "throw", "out", "the", "citizen"]
(c2-14 / multi-sentence
       :snt1 (c2-34 / possible-01
                    :ARG1 (c2-28 / find-01
                                 :ARG0 (c2-6 / i)
                                 :ARG1 (c2-31 / logic
                                              :domain (c2-13 / give-01
                                                             :ARG0 (c2-26 / government-organization
                                                                          :ARG0-of (c2-2 / govern-01))
                                                             :ARG1 (c2-27 / and
                                                                          :op1 (c2-9 / citizenship)
                                                                          :op2 (c2-0 / document)
                                                                          :op3 (c2-29 / home
                                                                                      :polarity (c2-16 / amr-unknown))
                                                                          :op4 (c2-33 / job
                                                                                      :polarity (c2-1 / amr-unknown))
                                                                          :op5 (c2-17 / educate-01
                                                                                      :polarity (c2-35 / amr-unknown)))
                                                             :ARG2 (c2-4 / and
                                                                         :op1 (c2-30 / person
                                                                                     :mod (c2-3 / country
                                                                                                :name (c2-15 / name
                                                                                                             :op1 "Afghanistan")))
                                                                         :op2 (c2-21 / person
                                                                                     :mod (c2-10 / country
                                                                                                 :name (c2-5 / name
                                                                                                             :op1 "Pakistan")))
                                                                         :op3 (c2-19 / person
                                                                                     :mod (c2-23 / country
                                                                                                 :name (c2-22 / name
                                                                                                              :op1 "Bangladesh")))
                                                                         :ARG1-of (c2-24 / arrive-01
                                                                                         :ARG4 (c2-20 / country
                                                                                                      :name (c2-8 / name
                                                                                                                  :op1 "India"))
                                                                                         :time (c2-32 / before
                                                                                                      :op1 (c2-25 / date-entity
                                                                                                                  :month 12))))))
                                 :mod (c2-18 / still))
                    :polarity -)
       :snt2 (c2-11 / and
                    :op2 (c2-12 / throw-out-06
                                :ARG0 c2-26
                                :ARG1 (c2-7 / citizen))))
