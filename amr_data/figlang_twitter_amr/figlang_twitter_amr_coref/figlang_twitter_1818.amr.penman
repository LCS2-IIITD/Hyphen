# ::snt great customer service today . Friendly staff at even though flight cancelled and easy refund process
# ::tokens ["great", "customer", "service", "today", ".", "Friendly", "staff", "at", "even", "though", "flight", "cancelled", "and", "easy", "refund", "process"]
# ::lemmas ["great", "customer", "service", "today", ".", "friendly", "staff", "at", "even", "though", "flight", "cancel", "and", "easy", "refund", "process"]
(c1-12 / multi-sentence
       :snt1 (c1-0 / serve-01
                   :ARG0 (c1-4 / customer)
                   :ARG2 (c1-11 / person
                                :ARG0-of (c1-3 / friendly-01))
                   :time (c1-8 / today))
       :snt2 (c1-5 / have-concession-91
                   :ARG1 (c1-10 / staff
                                :ARG0-of c1-3))
       :ARG2 (c1-2 / and
                   :op1 (c1-1 / cancel-01
                              :ARG1 (c1-6 / fly-01))
                   :op2 (c1-7 / process-02
                              :ARG1 (c1-9 / refund-01)
                              :ARG1-of (c1-13 / easy-05))))

# ::snt Thanks Lee , that s great to hear ( despite the flight cancellation ) ! I'll get the feedback passed on . Josh
# ::tokens ["Thanks", "Lee", ",", "that", "s", "great", "to", "hear", "(", "despite", "the", "flight", "cancellation", ")", "!", "I", "'ll", "get", "the", "feedback", "passed", "on", ".", "Josh"]
# ::lemmas ["thank", "Lee", ",", "that", "s", "great", "to", "hear", "(", "despite", "the", "flight", "cancellation", ")", "!", "i", "'ll", "get", "the", "feedback", "pass", "on", ".", "Josh"]
(c2-12 / multi-sentence
       :snt1 (c2-7 / thank-01
                   :ARG0 (c2-11 / i)
                   :ARG1 (c2-9 / person
                               :name (c2-13 / name
                                            :op1 "Lee"))
                   :ARG2 (c2-3 / hear-01
                               :ARG0 c2-11
                               :concession (c2-1 / cancel-01
                                                 :ARG1 (c2-0 / fly-01))
                               :mod (c2-10 / great)))
       :snt2 (c2-14 / get-04
                    :ARG0 (c2-4 / i)
                    :ARG1 (c2-6 / pass-on-09
                                :ARG1 (c2-5 / feedback)))
       :snt3 (c2-2 / person
                   :name (c2-8 / name
                               :op1 "Josh")))

# ::snt If we offered free flights , you'd be top of the list Lee . - Josh
# ::tokens ["If", "we", "offered", "free", "flights", ",", "you", "'d", "be", "top", "of", "the", "list", "Lee", ".", "-", "Josh"]
# ::lemmas ["if", "we", "offer", "free", "flight", ",", "you", "would", "be", "top", "of", "the", "list", "Lee", ".", "-", "Josh"]
(c3-0 / say-01
      :ARG0 (c3-10 / i)
      :ARG1 (c3-6 / top-01
                  :ARG1 (c3-8 / list)
                  :ARG2 (c3-9 / person
                              :name (c3-11 / name
                                           :op1 "Lee"))
                  :condition (c3-4 / offer-01
                                   :ARG0 (c3-2 / we)
                                   :ARG1 (c3-1 / fly-01
                                               :ARG1-of (c3-3 / free-03))))
      :ARG2 (c3-5 / person
                  :name (c3-7 / name
                              :op1 "Josh")))

# ::snt you mis-spelt ' when ' it doesn't jave an ' i ' or ' f ' in it .
# ::tokens ["you", "mis", "-", "spelt", "'", "when", "'", "it", "does", "n't", "jave", "an", "'", "i", "'", "or", "'", "f", "'", "in", "it", "."]
# ::lemmas ["you", "mis", "-", "spelt", "'", "when", "'", "it", "do", "not", "jave", "an", "'", "i", "'", "or", "'", "f", "'", "in", "it", "."]
(c4-0 / spell-01
      :ARG0 (c4-6 / you)
      :ARG1 (c4-5 / it)
      :manner (c4-4 / jave-01
                    :ARG1 c4-5
                    :ARG2 (c4-3 / or
                                :op1 (c4-1 / string-entity
                                           :value "i")
                                :op2 (c4-2 / string-entity
                                           :value "f"))
                    :polarity -))
