# ::snt " Well , we can't vote but we'll make sure our parents do ! " <URL>
# ::tokens ["\"", "Well", ",", "we", "ca", "n't", "vote", "but", "we", "'ll", "make", "sure", "our", "parents", "do", "!", "\"", "<", "URL", ">"]
# ::lemmas ["\"", "well", ",", "we", "can", "not", "vote", "but", "we", "'ll", "make", "sure", "our", "parent", "do", "!", "\"", "<", "URL", ">"]
(c1-1 / contrast-01
      :ARG1 (c1-7 / possible-01
                  :ARG1 (c1-5 / vote-01
                              :ARG0 (c1-2 / we))
                  :polarity -)
      :ARG2 (c1-9 / ensure-01
                  :ARG0 c1-2
                  :ARG1 (c1-0 / vote-01
                              :ARG0 (c1-6 / person
                                          :ARG0-of (c1-4 / have-rel-role-91
                                                         :ARG1 c1-2
                                                         :ARG2 (c1-3 / parent)))))
      :mod (c1-8 / well))

# ::snt Great ! Your future depends on it ! Vote Blue to KEEP America great ! <URL>
# ::tokens ["Great", "!", "Your", "future", "depends", "on", "it", "!", "Vote", "Blue", "to", "KEEP", "America", "great", "!", "<", "URL", ">"]
# ::lemmas ["great", "!", "your", "future", "depend", "on", "it", "!", "Vote", "Blue", "to", "keep", "America", "great", "!", "<", "URL", ">"]
(c2-9 / multi-sentence
      :snt1 (c2-7 / great
                  :mode expressive)
      :snt2 (c2-0 / depend-01
                  :ARG0 (c2-3 / future
                              :poss (c2-11 / you))
                  :ARG1 (c2-8 / it))
      :snt3 (c2-5 / vote-01
                  :ARG0 c2-11
                  :ARG1 (c2-10 / blue)
                  :purpose (c2-1 / keep-02
                                 :ARG1 (c2-2 / great
                                             :domain (c2-4 / country
                                                           :name (c2-6 / name
                                                                       :op1 "America"))))
                  :mode imperative))

# ::snt Getting our country back from a government is NOT going backwards !
# ::tokens ["Getting", "our", "country", "back", "from", "a", "government", "is", "NOT", "going", "backwards", "!"]
# ::lemmas ["get", "our", "country", "back", "from", "a", "government", "be", "not", "go", "backwards", "!"]
(c3-4 / go-02
      :ARG0 (c3-6 / get-back-09
                  :ARG1 (c3-1 / country
                              :poss (c3-2 / we))
                  :ARG2 (c3-0 / government-organization
                              :ARG0-of (c3-3 / govern-01)))
      :direction (c3-5 / backwards)
      :polarity -)

# ::snt if Trump is POTUS , he & ragtags ( KKK , deplorables , idiots ) the country WILL slide BACKWARDS .
# ::tokens ["if", "Trump", "is", "POTUS", ",", "he", "&", "ragtags", "(", "KKK", ",", "deplorables", ",", "idiots", ")", "the", "country", "WILL", "slide", "BACKWARDS", "."]
# ::lemmas ["if", "Trump", "be", "POTUS", ",", "he", "&", "ragtag", "(", "KKK", ",", "deplorable", ",", "idiot", ")", "the", "country", "will", "slide", "BACKWARDS", "."]
(c4-0 / slide-01
      :ARG0 (c4-2 / and
                  :op1 (c4-13 / person
                              :name (c4-14 / name
                                           :op1 "Trump"))
                  :op2 (c4-10 / ragtag
                              :example (c4-15 / and
                                              :op1 (c4-7 / organization
                                                         :name (c4-11 / name
                                                                      :op1 "KKK"))
                                              :op2 (c4-8 / person
                                                         :ARG1-of (c4-1 / deplore-01))
                                              :op3 (c4-3 / idiot))))
      :ARG1 (c4-12 / backback)
      :condition (c4-6 / have-org-role-91
                       :ARG0 c4-13
                       :ARG1 (c4-4 / country
                                   :name (c4-9 / name
                                               :op1 "United"
                                               :op2 "States"))
                       :ARG2 (c4-5 / president)))

# ::snt Vote for Be my guest . Grandma read friend JZ lyrics Ar <URL>
# ::tokens ["Vote", "for", "Be", "my", "guest", ".", "Grandma", "read", "friend", "JZ", "lyrics", "Ar", "<", "URL", ">"]
# ::lemmas ["vote", "for", "be", "my", "guest", ".", "Grandma", "read", "friend", "JZ", "lyric", "Ar", "<", "URL", ">"]
(c5-13 / multi-sentence
       :snt1 (c5-5 / vote-01
                   :ARG0 (c5-15 / you)
                   :ARG1 (c5-12 / person
                                :ARG0-of (c5-4 / have-rel-role-91
                                               :ARG1 (c5-1 / i)
                                               :ARG2 (c5-10 / guest)))
                   :mode imperative)
       :snt2 (c5-7 / read-01
                   :ARG0 (c5-6 / person
                               :ARG0-of (c5-11 / have-rel-role-91
                                               :ARG1 (c5-3 / person
                                                           :name (c5-14 / name
                                                                        :op1 "Grandma"))
                                               :ARG2 (c5-0 / grandmother)))
                   :ARG1 (c5-8 / lyric
                               :mod (c5-2 / person
                                          :name (c5-9 / name
                                                      :op1 "JZ")))
                   :ARG2 c5-3))

# ::snt Being a grandma is great ! You better hope you make it .
# ::tokens ["Being", "a", "grandma", "is", "great", "!", "You", "better", "hope", "you", "make", "it", "."]
# ::lemmas ["be", "a", "grandma", "be", "great", "!", "you", "well", "hope", "you", "make", "it", "."]
(c6-7 / multi-sentence
      :snt1 (c6-5 / great
                  :domain (c6-2 / have-rel-role-91
                                :ARG0 (c6-0 / she)
                                :ARG2 (c6-8 / grandma)))
      :snt2 (c6-6 / hope-01
                  :ARG0 (c6-3 / you)
                  :ARG1 (c6-1 / make-it-14
                              :ARG0 c6-3)
                  :ARG1-of (c6-4 / recommend-01
                                 :ARG2 c6-3)))
