# ::snt managed k on treadmill bang on in accordance with VLM plan . Why is it so hard ? Can do it outside no problem !
# ::tokens ["managed", "k", "on", "treadmill", "bang", "on", "in", "accordance", "with", "VLM", "plan", ".", "Why", "is", "it", "so", "hard", "?", "Can", "do", "it", "outside", "no", "problem", "!"]
# ::lemmas ["manage", "k", "on", "treadmill", "bang", "on", "in", "accordance", "with", "VLM", "plan", ".", "why", "be", "it", "so", "hard", "?", "can", "do", "it", "outside", "no", "problem", "!"]
(c1-15 / multi-sentence
       :snt1 (c1-3 / manage-01
                   :ARG1 (c1-16 / k
                                :location (c1-11 / treadmill))
                   :manner (c1-2 / accord-02
                                 :ARG2 (c1-14 / plan-01
                                              :ARG0 (c1-10 / person
                                                           :name (c1-12 / name
                                                                        :op1 "VLM"))))
                   :manner (c1-13 / bang))
       :snt2 (c1-4 / cause-01
                   :ARG0 (c1-17 / amr-unknown)
                   :ARG1 (c1-7 / hard-02
                               :ARG1 (c1-5 / it)
                               :degree (c1-0 / so)))
       :snt3 (c1-6 / possible-01
                   :ARG1 (c1-1 / do-02
                               :ARG1 c1-5
                               :location (c1-9 / outside)
                               :ARG1-of (c1-8 / problem
                                              :polarity -))))

# ::snt Yip , always wanna give up after min on the treadmill but can go miles outside !
# ::tokens ["Yip", ",", "always", "wanna", "give", "up", "after", "min", "on", "the", "treadmill", "but", "can", "go", "miles", "outside", "!"]
# ::lemmas ["Yip", ",", "always", "wanna", "give", "up", "after", "min", "on", "the", "treadmill", "but", "can", "go", "mile", "outside", "!"]
(c2-3 / want-01
      :ARG0 (c2-9 / i)
      :ARG1 (c2-8 / give-up-07
                  :ARG0 c2-9
                  :time (c2-1 / after
                              :op1 (c2-10 / min))
                  :instrument (c2-5 / treadmill))
      :time (c2-12 / always)
      :concession-of (c2-7 / possible-01
                           :ARG1 (c2-11 / go-02
                                        :ARG0 c2-9
                                        :ARG1 (c2-0 / distance-quantity
                                                    :unit (c2-2 / mile)
                                                    :quant 1)
                                        :ARG4 (c2-4 / outside)))
      :mod (c2-6 / yip
                 :mode expressive))
