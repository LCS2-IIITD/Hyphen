# ::snt A particular highlight came during the VS DS friend's bro bo3 was playing ZSS and DS friend was playing Mewtwo ( /2 )
# ::tokens ["A", "particular", "highlight", "came", "during", "the", "VS", "DS", "friend", "'s", "bro", "bo3", "was", "playing", "ZSS", "and", "DS", "friend", "was", "playing", "Mewtwo", "(", "/2", ")"]
# ::lemmas ["a", "particular", "highlight", "come", "during", "the", "VS", "DS", "friend", "'s", "bro", "bo3", "be", "play", "ZSS", "and", "DS", "friend", "be", "play", "Mewtwo", "(", "/2", ")"]
(c1-4 / come-01
      :ARG1 (c1-7 / highlight-01
                  :mod (c1-14 / particular))
      :time (c1-2 / and
                  :op1 (c1-9 / play-01
                             :ARG0 (c1-6 / person
                                         :ARG0-of (c1-13 / have-rel-role-91
                                                         :ARG1 (c1-5 / person
                                                                     :name (c1-15 / name
                                                                                  :op1 "DS")
                                                                     :ARG0-of (c1-0 / have-rel-role-91
                                                                                    :ARG2 (c1-3 / friend)
                                                                                    :ARG1 c1-5))
                                                         :ARG2 (c1-12 / brother)))
                             :ARG1 (c1-11 / game
                                          :name (c1-10 / name
                                                       :op1 "ZSS")))
                  :op2 (c1-1 / play-01
                             :ARG0 c1-5
                             :ARG1 (c1-16 / game
                                          :name (c1-8 / name
                                                      :op1 "Mewtwo")))))

# ::snt . ' s upB didn't go all the way ( final kick didn't land ) , but the part before final kick actually KO'd DS friend's bro , ending g2
# ::tokens [".", "'", "s", "upB", "did", "n't", "go", "all", "the", "way", "(", "final", "kick", "did", "n't", "land", ")", ",", "but", "the", "part", "before", "final", "kick", "actually", "KO'd", "DS", "friend", "'s", "bro", ",", "ending", "g2"]
# ::lemmas [".", "'", "s", "upb", "do", "not", "go", "all", "the", "way", "(", "final", "kick", "do", "not", "land", ")", ",", "but", "the", "part", "before", "final", "kick", "actually", "KO'd", "DS", "friend", "'s", "bro", ",", "end", "g2"]
(c2-3 / contrast-01
      :ARG1 (c2-4 / go-01
                  :ARG1 (c2-21 / person
                               :name (c2-6 / name
                                           :op1 "upB"))
                  :extent (c2-15 / all-the-way)
                  :ARG1-of (c2-5 / mean-01
                                 :ARG2 (c2-19 / land-01
                                              :ARG1 (c2-22 / kick-01
                                                           :mod (c2-16 / final))
                                              :polarity -))
                  :polarity -)
      :ARG2 (c2-2 / knock-out-03
                  :ARG0 (c2-18 / part
                               :time (c2-20 / before
                                            :op1 c2-22))
                  :ARG1 (c2-10 / person
                               :ARG0-of (c2-17 / have-rel-role-91
                                               :ARG1 (c2-9 / person
                                                           :ARG1 (c2-0 / person
                                                                       :name (c2-1 / name
                                                                                   :op1 "DS"))
                                                           :ARG2 (c2-11 / friend)
                                                           :ARG0-of c2-17))
                               :ARG2 (c2-14 / bro)))
      :ARG1-of (c2-7 / actual-02)
      :ARG0-of (c2-8 / end-01
                     :ARG1 (c2-13 / game
                                  :name (c2-12 / name
                                               :op1 "G2"))))

# ::snt Yeah . The final kick causes more kb , but it sends them more horizontally .
# ::tokens ["Yeah", ".", "The", "final", "kick", "causes", "more", "kb", ",", "but", "it", "sends", "them", "more", "horizontally", "."]
# ::lemmas ["yeah", ".", "the", "final", "kick", "cause", "more", "kb", ",", "but", "it", "send", "they", "more", "horizontally", "."]
(c3-11 / multi-sentence
       :snt1 (c3-13 / yeah
                    :mode expressive)
       :snt2 (c3-5 / contrast-01
                   :ARG1 (c3-0 / cause-01
                               :ARG0 (c3-12 / kick-01
                                            :mod (c3-4 / final))
                               :ARG1 (c3-7 / have-quant-91
                                           :ARG1 (c3-1 / kb)
                                           :ARG3 (c3-6 / more)))
                   :ARG2 (c3-2 / send-01
                               :ARG0 c3-12
                               :ARG1 (c3-9 / they)
                               :manner (c3-10 / have-quant-91
                                              :ARG1 (c3-3 / horizontally)
                                              :ARG3 (c3-8 / more)))))

# ::snt well be glad the final kick wasn't needed Seriously , me & DS friend legit thought DS friend's bro survived until he went SPLAT
# ::tokens ["well", "be", "glad", "the", "final", "kick", "was", "n't", "needed", "Seriously", ",", "me", "&", "DS", "friend", "legit", "thought", "DS", "friend", "'s", "bro", "survived", "until", "he", "went", "SPLAT"]
# ::lemmas ["well", "be", "glad", "the", "final", "kick", "be", "not", "need", "seriously", ",", "i", "&", "DS", "friend", "legit", "think", "DS", "friend", "'s", "bro", "survive", "until", "he", "go", "SPLAT"]
(c4-6 / multi-sentence
      :snt1 (c4-5 / glad-02
                  :ARG0 (c4-7 / need-01
                              :ARG1 (c4-23 / kick
                                           :mod (c4-15 / final))
                              :polarity -)
                  :ARG1 (c4-12 / you)
                  :mod (c4-3 / well))
      :snt2 (c4-4 / think-01
                  :ARG0 (c4-14 / and
                               :op1 (c4-1 / i)
                               :op2 (c4-22 / person
                                           :ARG0-of (c4-16 / have-rel-role-91
                                                           :ARG1 c4-1
                                                           :ARG2 (c4-10 / friend))))
                  :ARG1 (c4-8 / survive-01
                              :ARG0 (c4-18 / person
                                           :ARG0-of (c4-0 / have-rel-role-91
                                                          :ARG1 (c4-9 / person
                                                                      :ARG0-of (c4-2 / have-rel-role-91
                                                                                     :ARG1 c4-1
                                                                                     :ARG2 (c4-11 / friend)))
                                                          :ARG2 (c4-20 / brother)))
                              :time (c4-17 / until
                                           :op1 (c4-13 / go-08
                                                       :ARG1 c4-18
                                                       :ARG2 (c4-21 / shit
                                                                    :mode expressive))))
                  :ARG1-of (c4-19 / legitimate-02)))

# ::snt Thank Mewtwo being really floaty / light making it actually work . ^ . ^
# ::tokens ["Thank", "Mewtwo", "being", "really", "floaty", "/", "light", "making", "it", "actually", "work", ".", "^", ".", "^"]
# ::lemmas ["thank", "Mewtwo", "be", "really", "floaty", "/", "light", "make", "it", "actually", "work", ".", "^", ".", "^"]
(c5-5 / thank-01
      :ARG1 (c5-8 / person
                  :name (c5-10 / name
                               :op1 "Mewtwo"))
      :ARG2 (c5-0 / and
                  :op1 (c5-1 / float-01
                             :ARG1 c5-8
                             :degree (c5-6 / really))
                  :op2 (c5-7 / light-07
                             :ARG1 c5-8
                             :degree (c5-4 / really))
                  :ARG0-of (c5-9 / make-02
                                 :ARG1 (c5-3 / work-09
                                             :ARG1 (c5-2 / it)
                                             :ARG1-of (c5-11 / actual-02)))))
