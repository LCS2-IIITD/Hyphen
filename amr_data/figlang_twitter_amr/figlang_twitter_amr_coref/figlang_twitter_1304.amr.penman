# ::snt of course it's new info ! Just like rearranging " omorn " to read " moron " makes new info .
# ::tokens ["of", "course", "it", "'s", "new", "info", "!", "Just", "like", "rearranging", "\"", "omorn", "\"", "to", "read", "\"", "moron", "\"", "makes", "new", "info", "."]
# ::lemmas ["of", "course", "it", "be", "new", "info", "!", "just", "like", "rearrange", "\"", "omorn", "\"", "to", "read", "\"", "moron", "\"", "make", "new", "info", "."]
(c1-12 / multi-sentence
       :snt1 (c1-11 / information
                    :ARG1-of (c1-13 / new-01)
                    :domain (c1-1 / it)
                    :mod (c1-5 / of-course))
       :snt2 (c1-0 / make-01
                   :ARG0 (c1-8 / rearrange-01
                               :ARG1 (c1-7 / thing
                                           :name (c1-9 / name
                                                       :op1 "Omen"))
                               :purpose (c1-3 / read-01
                                              :ARG1 (c1-4 / moron)))
                   :ARG1 (c1-2 / information
                               :ARG1-of (c1-6 / new-01))
                   :mod (c1-10 / just)))

# ::snt by your definition , all dog breeds are brand new . They aren't . They are species already coded .
# ::tokens ["by", "your", "definition", ",", "all", "dog", "breeds", "are", "brand", "new", ".", "They", "are", "n't", ".", "They", "are", "species", "already", "coded", "."]
# ::lemmas ["by", "your", "definition", ",", "all", "dog", "breed", "be", "brand", "new", ".", "they", "be", "not", ".", "they", "be", "specie", "already", "code", "."]
(c2-8 / multi-sentence
      :snt1 (c2-9 / new-01
                  :ARG1 (c2-6 / breed
                              :mod (c2-0 / dog)
                              :mod (c2-3 / all))
                  :mod (c2-1 / brand)
                  :ARG1-of (c2-7 / define-01
                                 :ARG0 (c2-10 / you)))
      :snt2 (c2-5 / they
                  :polarity -)
      :snt3 (c2-4 / code-01
                  :ARG1 (c2-2 / species
                              :domain c2-5))
      :time (c2-11 / already))

# ::snt what ? I never said all dog breeds are brand new . You're misquoting me again
# ::tokens ["what", "?", "I", "never", "said", "all", "dog", "breeds", "are", "brand", "new", ".", "You", "'re", "misquoting", "me", "again"]
# ::lemmas ["what", "?", "i", "never", "say", "all", "dog", "breed", "be", "brand", "new", ".", "you", "be", "misquote", "i", "again"]
(c3-9 / multi-sentence
      :snt1 (c3-3 / amr-unknown)
      :snt2 (c3-0 / say-01
                  :ARG0 (c3-8 / i)
                  :ARG1 (c3-10 / new-01
                               :ARG1 (c3-7 / breed
                                           :mod (c3-1 / dog)
                                           :mod (c3-12 / all))
                               :mod (c3-2 / brand))
                  :time (c3-13 / ever)
                  :polarity -)
      :snt3 (c3-5 / misquote-01
                  :ARG0 (c3-11 / you)
                  :ARG1 (c3-6 / i)
                  :mod (c3-4 / again)))

# ::snt all dogs are of the same species : wolf over Millenia people have selected them for features .
# ::tokens ["all", "dogs", "are", "of", "the", "same", "species", ":", "wolf", "over", "Millenia", "people", "have", "selected", "them", "for", "features", "."]
# ::lemmas ["all", "dog", "be", "of", "the", "same", "specie", ":", "wolf", "over", "Millenia", "people", "have", "select", "they", "for", "feature", "."]
(c4-7 / multi-sentence
      :snt1 (c4-0 / species
                  :ARG1-of (c4-5 / same-01)
                  :domain (c4-1 / dog
                                :mod (c4-2 / all)))
      :snt2 (c4-4 / select-01
                  :ARG0 (c4-6 / person
                              :name (c4-8 / name
                                          :op1 "wolf"
                                          :op2 "over"
                                          :op3 "Millennia"))
                  :ARG1 c4-1
                  :ARG2 (c4-3 / feature)))

# ::snt same mechanism . Who chose the breeding is irrelevant .
# ::tokens ["same", "mechanism", ".", "Who", "chose", "the", "breeding", "is", "irrelevant", "."]
# ::lemmas ["same", "mechanism", ".", "who", "choose", "the", "breeding", "be", "irrelevant", "."]
(c5-6 / multi-sentence
      :snt1 (c5-1 / mechanism
                  :ARG1-of (c5-0 / same-01))
      :snt2 (c5-3 / relevant-01
                  :ARG1 (c5-5 / person
                              :ARG0-of (c5-2 / choose-01
                                             :ARG1 (c5-4 / breed-01)))
                  :polarity -))

# ::snt There's evidence of someone choosing the breeding in people ?
# ::tokens ["There", "'s", "evidence", "of", "someone", "choosing", "the", "breeding", "in", "people", "?"]
# ::lemmas ["there", "be", "evidence", "of", "someone", "choose", "the", "breeding", "in", "people", "?"]
(c6-5 / evidence-01
      :polarity (c6-1 / amr-unknown)
      :ARG1 (c6-2 / choose-01
                  :ARG0 (c6-0 / someone)
                  :ARG1 (c6-3 / breed-01
                              :ARG1 (c6-4 / person))))

# ::snt which part of " who chose the breeding is irrelevant " confuses you ?
# ::tokens ["which", "part", "of", "\"", "who", "chose", "the", "breeding", "is", "irrelevant", "\"", "confuses", "you", "?"]
# ::lemmas ["which", "part", "of", "\"", "who", "choose", "the", "breeding", "be", "irrelevant", "\"", "confuse", "you", "?"]
(c7-0 / amuse-01
      :ARG0 (c7-2 / relevant-01
                  :ARG1 (c7-5 / amr-unknown
                              :part-of (c7-1 / choose-01
                                             :ARG0 c7-5)
                              :ARG1 (c7-3 / breed-01))
                  :polarity -)
      :ARG1 (c7-4 / you))

# ::snt none . What confuses me is your suggestion that somebody chose human breeding .
# ::tokens ["none", ".", "What", "confuses", "me", "is", "your", "suggestion", "that", "somebody", "chose", "human", "breeding", "."]
# ::lemmas ["none", ".", "what", "confuse", "i", "be", "your", "suggestion", "that", "somebody", "choose", "human", "breeding", "."]
(c8-7 / multi-sentence
      :snt1 (c8-8 / none)
      :snt2 (c8-1 / amuse-01
                  :ARG0 (c8-0 / suggest-01
                              :ARG0 (c8-9 / you)
                              :ARG1 (c8-2 / choose-01
                                          :ARG0 (c8-5 / somebody)
                                          :ARG1 (c8-4 / breed-01
                                                      :ARG1 (c8-3 / human))))
                  :ARG1 (c8-6 / i)))

# ::snt how come Sudanese ppl look different to Swedish ? Please EXPLAIN THE PROCESS .
# ::tokens ["how", "come", "Sudanese", "ppl", "look", "different", "to", "Swedish", "?", "Please", "EXPLAIN", "THE", "PROCESS", "."]
# ::lemmas ["how", "come", "Sudanese", "ppl", "look", "different", "to", "Swedish", "?", "please", "explain", "the", "PROCESS", "."]
(c9-10 / multi-sentence
       :snt1 (c9-3 / cause-01
                   :ARG0 (c9-2 / amr-unknown)
                   :ARG1 (c9-8 / look-02
                               :ARG0 (c9-9 / person
                                           :mod (c9-0 / country
                                                      :name (c9-11 / name
                                                                   :op1 "Sudan")))
                               :ARG1 (c9-1 / differ-02
                                           :ARG1 c9-9
                                           :ARG2 (c9-6 / person
                                                       :mod (c9-5 / country
                                                                  :name (c9-7 / name
                                                                              :op1 "Sweden"))))))
       :snt2 (c9-13 / explain-01
                    :ARG0 (c9-12 / you)
                    :ARG1 (c9-4 / procedure)
                    :mode imperative
                    :polite +))

# ::snt do you not realize that question is completely irrelevant ? Or are you clinging to your darwinistic faith ?
# ::tokens ["do", "you", "not", "realize", "that", "question", "is", "completely", "irrelevant", "?", "Or", "are", "you", "clinging", "to", "your", "darwinistic", "faith", "?"]
# ::lemmas ["do", "you", "not", "realize", "that", "question", "be", "completely", "irrelevant", "?", "or", "be", "you", "cling", "to", "your", "darwinistic", "faith", "?"]
(c10-12 / multi-sentence
        :snt1 (c10-11 / realize-01
                      :ARG0 (c10-13 / you)
                      :ARG1 (c10-7 / relevant-01
                                   :ARG1 (c10-10 / thing
                                                 :ARG1-of (c10-5 / question-01)
                                                 :mod (c10-6 / that))
                                   :ARG1-of (c10-4 / complete-02))
                      :polarity (c10-2 / amr-unknown)
                      :polarity -)
        :snt2 (c10-9 / or
                     :op2 (c10-0 / cling-01
                                 :ARG0 (c10-14 / you)
                                 :ARG1 (c10-3 / faith
                                              :poss c10-14
                                              :mod (c10-1 / darwinism))
                                 :polarity (c10-8 / amr-unknown))))

# ::snt to prove your religion you must demonstrate a swede poofing scales etc and eventually becoming a lizard
# ::tokens ["to", "prove", "your", "religion", "you", "must", "demonstrate", "a", "swede", "poofing", "scales", "etc", "and", "eventually", "becoming", "a", "lizard"]
# ::lemmas ["to", "prove", "your", "religion", "you", "must", "demonstrate", "a", "swede", "poofing", "scale", "etc", "and", "eventually", "become", "a", "lizard"]
(c11-4 / obligate-01
       :ARG1 (c11-10 / prove-01
                     :ARG0 (c11-11 / you)
                     :ARG1 (c11-6 / religion
                                  :poss c11-11))
       :ARG2 (c11-0 / demonstrate-01
                    :ARG0 c11-11
                    :ARG1 (c11-2 / and
                                 :op1 (c11-1 / scale
                                             :ARG1-of (c11-5 / poo-01
                                                             :ARG0 (c11-9 / swede)))
                                 :op2 (c11-12 / et-cetera))
                    :op3 (c11-8 / become-01
                                :ARG1 c11-11
                                :ARG2 (c11-7 / l)
                                :time (c11-3 / eventual))))

# ::snt or some other completely new Family . Evos agree with creation scientists on variation within species
# ::tokens ["or", "some", "other", "completely", "new", "Family", ".", "Evos", "agree", "with", "creation", "scientists", "on", "variation", "within", "species"]
# ::lemmas ["or", "some", "other", "completely", "new", "Family", ".", "Evos", "agree", "with", "creation", "scientist", "on", "variation", "within", "specie"]
(c12-12 / multi-sentence
        :snt1 (c12-8 / or
                     :op2 (c12-3 / family
                                 :ARG1-of (c12-13 / new-01
                                                  :ARG1-of (c12-4 / complete-02))
                                 :mod (c12-5 / other
                                             :mod (c12-0 / some))))
        :snt2 (c12-2 / agree-01
                     :ARG0 (c12-11 / person
                                   :name (c12-9 / name
                                                :op1 "Evos"))
                     :ARG1 (c12-7 / vary-01
                                  :ARG1 (c12-10 / species))
                     :ARG2 (c12-6 / scientist
                                  :mod (c12-1 / create-01))))

# ::snt yes . Creationists use the more natural term Created Kind . It isn't -1 with Family but usually pretty close
# ::tokens ["yes", ".", "Creationists", "use", "the", "more", "natural", "term", "Created", "Kind", ".", "It", "is", "n't", "-1", "with", "Family", "but", "usually", "pretty", "close"]
# ::lemmas ["yes", ".", "creationist", "use", "the", "more", "natural", "term", "create", "Kind", ".", "it", "be", "not", "-1", "with", "Family", "but", "usually", "pretty", "close"]
(c13-12 / multi-sentence
        :snt1 (c13-14 / yes)
        :snt2 (c13-6 / use-01
                     :ARG0 (c13-2 / creationist)
                     :ARG1 (c13-8 / term
                                  :name (c13-13 / name
                                                :op1 " Created"
                                                :op2 "Kind")
                                  :ARG1-of (c13-5 / have-degree-91
                                                  :ARG2 (c13-9 / natural-03
                                                               :ARG1 c13-8)
                                                  :ARG3 (c13-3 / more))))
        :snt3 (c13-0 / contrast-01
                     :ARG1 (c13-15 / equal-01
                                   :ARG1 (c13-11 / it)
                                   :ARG3 (c13-1 / family)
                                   :polarity -
                                   :ARG2 1)
                     :ARG2 (c13-7 / close-10
                                  :ARG1 c13-11
                                  :mod (c13-4 / usual)
                                  :degree (c13-10 / pretty))))

# ::snt so how many ' kinds ' are there ? you accept that the family Hominidae is a ' kind '
# ::tokens ["so", "how", "many", "'", "kinds", "'", "are", "there", "?", "you", "accept", "that", "the", "family", "Hominidae", "is", "a", "'", "kind", "'"]
# ::lemmas ["so", "how", "many", "'", "kind", "'", "be", "there", "?", "you", "accept", "that", "the", "family", "Hominidae", "be", "a", "'", "kind", "'"]
(c14-6 / multi-sentence
       :snt1 (c14-7 / kind
                    :quant (c14-2 / amr-unknown)
                    :location (c14-4 / there)
                    :mod (c14-0 / so))
       :snt2 (c14-9 / accept-01
                    :ARG0 (c14-8 / you)
                    :ARG1 (c14-3 / family
                                 :name (c14-5 / name
                                              :op1 "Hominidae")
                                 :mod (c14-1 / kind))))

# ::snt no human knows , just like no human knows how many " Families " truly exist .
# ::tokens ["no", "human", "knows", ",", "just", "like", "no", "human", "knows", "how", "many", "\"", "Families", "\"", "truly", "exist", "."]
# ::lemmas ["no", "human", "know", ",", "just", "like", "no", "human", "know", "how", "many", "\"", "family", "\"", "truly", "exist", "."]
(c15-1 / know-01
       :ARG0 (c15-3 / human)
       :ARG1-of (c15-5 / resemble-01
                       :ARG2 (c15-0 / know-01
                                    :ARG0 c15-3
                                    :ARG1 (c15-7 / number
                                                 :quant-of (c15-2 / family
                                                                  :ARG1-of (c15-8 / exist-01
                                                                                  :ARG1-of (c15-4 / true-01))))
                                    :polarity -)
                       :mod (c15-6 / just))
       :polarity -)

# ::snt but if you want to know how many Kinds were on the Ark , current estimates are in the range I think
# ::tokens ["but", "if", "you", "want", "to", "know", "how", "many", "Kinds", "were", "on", "the", "Ark", ",", "current", "estimates", "are", "in", "the", "range", "I", "think"]
# ::lemmas ["but", "if", "you", "want", "to", "know", "how", "many", "Kinds", "be", "on", "the", "Ark", ",", "current", "estimate", "be", "in", "the", "range", "i", "think"]
(c16-3 / contrast-01
       :ARG2 (c16-7 / think-01
                    :ARG0 (c16-10 / i)
                    :ARG1 (c16-5 / thing
                                 :ARG1-of (c16-13 / estimate-01
                                                  :time (c16-0 / current))
                                 :ARG5-of (c16-8 / range-01))
                    :condition (c16-4 / want-01
                                      :ARG0 (c16-12 / you)
                                      :ARG1 (c16-11 / know-01
                                                    :ARG0 c16-12
                                                    :ARG1 (c16-6 / thing
                                                                 :quant-of (c16-1 / kind
                                                                                  :location (c16-2 / spaceship
                                                                                                   :name (c16-9 / name
                                                                                                                :op1 "Ark"))))))))

# ::snt I don't have one . I doubt a complete one exists . Will that list make evolutionism occur ?
# ::tokens ["I", "do", "n't", "have", "one", ".", "I", "doubt", "a", "complete", "one", "exists", ".", "Will", "that", "list", "make", "evolutionism", "occur", "?"]
# ::lemmas ["i", "do", "not", "have", "one", ".", "i", "doubt", "a", "complete", "one", "exist", ".", "will", "that", "list", "make", "evolutionism", "occur", "?"]
(c17-12 / multi-sentence
        :snt1 (c17-4 / have-03
                     :ARG0 (c17-11 / i)
                     :ARG1 (c17-8 / one)
                     :polarity -)
        :snt2 (c17-0 / doubt-01
                     :ARG0 (c17-5 / i)
                     :ARG1 (c17-13 / exist-01
                                   :ARG1 (c17-6 / one
                                                :ARG1-of (c17-2 / complete-02))))
        :snt3 (c17-3 / make-02
                     :ARG0 (c17-10 / list
                                   :mod (c17-9 / that))
                     :ARG1 (c17-7 / evolve-01)
                     :polarity (c17-1 / amr-unknown)))

# ::snt but you accept evolution . In fact you claim speciation at a super fast speed .
# ::tokens ["but", "you", "accept", "evolution", ".", "In", "fact", "you", "claim", "speciation", "at", "a", "super", "fast", "speed", "."]
# ::lemmas ["but", "you", "accept", "evolution", ".", "in", "fact", "you", "claim", "speciation", "at", "a", "super", "fast", "speed", "."]
(c18-8 / multi-sentence
       :snt1 (c18-4 / contrast-01
                    :ARG2 (c18-2 / accept-01
                                 :ARG0 (c18-9 / you)
                                 :ARG1 (c18-11 / evolve-01)))
       :snt2 (c18-0 / claim-01
                    :ARG0 (c18-10 / you)
                    :ARG1 (c18-1 / speciation
                                 :ARG1-of (c18-6 / speed-01
                                                 :ARG1-of (c18-3 / fast-02
                                                                 :degree (c18-5 / super))))
                    :mod (c18-7 / in-fact)))
