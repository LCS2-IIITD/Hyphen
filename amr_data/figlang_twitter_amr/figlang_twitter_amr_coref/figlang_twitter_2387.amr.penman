# ::snt Tiffany Trump is registered to vote in two states : report <URL> <URL>
# ::tokens ["Tiffany", "Trump", "is", "registered", "to", "vote", "in", "two", "states", ":", "report", "<", "URL", ">", "<", "URL", ">"]
# ::lemmas ["Tiffany", "Trump", "be", "register", "to", "vote", "in", "two", "state", ":", "report", "<", "URL", ">", "<", "URL", ">"]
(c1-3 / register-02
      :ARG1 (c1-4 / person
                  :name (c1-5 / name
                              :op1 "Tiffany"
                              :op2 "Trump"))
      :ARG2 (c1-2 / vote-01
                  :ARG0 c1-4)
      :location (c1-0 / state
                      :quant 2)
      :ARG1-of (c1-1 / report-01))

# ::snt again it is not illegal to be registered in state , it is illegal to vote in states
# ::tokens ["again", "it", "is", "not", "illegal", "to", "be", "registered", "in", "state", ",", "it", "is", "illegal", "to", "vote", "in", "states"]
# ::lemmas ["again", "it", "be", "not", "illegal", "to", "be", "register", "in", "state", ",", "it", "be", "illegal", "to", "vote", "in", "state"]
(c2-1 / and
      :op1 (c2-4 / legal-02
                 :ARG1 (c2-3 / register-02
                             :location (c2-0 / state))
                 :polarity -)
      :op2 (c2-5 / legal-02
                 :ARG1 (c2-2 / vote-01
                             :location (c2-6 / state))
                 :polarity -)
      :mod (c2-7 / again))

# ::snt correct but it's hilarious bc trump called it out this am as fraud <URL>
# ::tokens ["correct", "but", "it", "'s", "hilarious", "bc", "trump", "called", "it", "out", "this", "am", "as", "fraud", "<", "URL", ">"]
# ::lemmas ["correct", "but", "it", "be", "hilarious", "bc", "trump", "call", "it", "out", "this", "am", "as", "fraud", "<", "URL", ">"]
(c3-2 / contrast-01
      :ARG1 (c3-0 / correct-02)
      :ARG2 (c3-4 / hilarious
                  :domain (c3-5 / call-out-15
                                :ARG0 (c3-7 / person
                                            :name (c3-8 / name
                                                        :op1 " trump"))
                                :ARG1 (c3-3 / it)
                                :ARG1-of (c3-6 / cause-01
                                               :ARG0 (c3-1 / defraud-01
                                                           :ARG0 c3-7)))))

# ::snt investigating to make sure people aren't voting twice , not a bad idea
# ::tokens ["investigating", "to", "make", "sure", "people", "are", "n't", "voting", "twice", ",", "not", "a", "bad", "idea"]
# ::lemmas ["investigate", "to", "make", "sure", "people", "be", "not", "vote", "twice", ",", "not", "a", "bad", "idea"]
(c4-0 / and
      :op1 (c4-6 / igate-01
                 :ARG1 (c4-7 / ensure-01
                             :ARG1 (c4-3 / vote-01
                                         :ARG0 (c4-4 / person)
                                         :frequency 2
                                         :polarity -)))
      :op2 (c4-1 / idea
                 :ARG1-of (c4-5 / bad-07)
                 :domain (c4-2 / investigate-01)
                 :polarity -))

# ::snt not what he said . I realize yall arent good at reading tho .
# ::tokens ["not", "what", "he", "said", ".", "I", "realize", "y", "all", "are", "nt", "good", "at", "reading", "tho", "."]
# ::lemmas ["not", "what", "he", "say", ".", "i", "realize", "you", "all", "be", "not", "good", "at", "read", "tho", "."]
(c5-9 / multi-sentence
      :snt1 (c5-4 / thing
                  :ARG1-of (c5-0 / say-01
                                 :ARG0 (c5-2 / he))
                  :polarity -)
      :snt2 (c5-5 / realize-01
                  :ARG0 (c5-8 / i)
                  :ARG1 (c5-6 / good-03
                              :ARG1 (c5-10 / you
                                           :mod (c5-1 / all))
                              :ARG2 (c5-3 / read-01
                                          :ARG0 c5-10)
                              :ARG1-of (c5-7 / have-concession-91)
                              :polarity -)))

# ::snt evidently your not good writing . I've heard what he said
# ::tokens ["evidently", "your", "not", "good", "writing", ".", "I", "'ve", "heard", "what", "he", "said"]
# ::lemmas ["evidently", "your", "not", "good", "writing", ".", "i", "'ve", "hear", "what", "he", "say"]
(c6-8 / multi-sentence
      :snt1 (c6-3 / obvious-01
                  :ARG1 (c6-1 / write-01
                              :ARG0 (c6-9 / you)
                              :ARG1-of (c6-5 / good-03
                                             :polarity -)))
      :snt2 (c6-2 / hear-01
                  :ARG0 (c6-7 / i)
                  :ARG1 (c6-4 / thing
                              :ARG1-of (c6-0 / say-01
                                             :ARG0 (c6-6 / he)))))
