# ::snt Can you enter the park with the email confirmation / ticket on phone tomorrow .. my printer just broke !
# ::tokens ["Can", "you", "enter", "the", "park", "with", "the", "email", "confirmation", "/", "ticket", "on", "phone", "tomorrow", "..", "my", "printer", "just", "broke", "!"]
# ::lemmas ["can", "you", "enter", "the", "park", "with", "the", "email", "confirmation", "/", "ticket", "on", "phone", "tomorrow", "..", "my", "printer", "just", "break", "!"]
(c1-13 / multi-sentence
       :snt1 (c1-12 / possible-01
                    :ARG1 (c1-15 / enter-01
                                 :ARG0 (c1-14 / you)
                                 :ARG1 (c1-8 / park)
                                 :instrument (c1-7 / or
                                                   :op1 (c1-0 / confirm-01
                                                              :medium (c1-5 / email))
                                                   :op2 (c1-9 / ticket
                                                              :medium (c1-3 / phone)))
                                 :time (c1-2 / tomorrow)))
       :snt2 (c1-10 / break-01
                    :ARG1 (c1-1 / thing
                                :ARG0-of (c1-4 / print-01)
                                :poss (c1-6 / i))
                    :mod (c1-11 / just)))

# ::snt Certainly , Kayleigh . Arrive as early as you can to make the most of the day !
# ::tokens ["Certainly", ",", "Kayleigh", ".", "Arrive", "as", "early", "as", "you", "can", "to", "make", "the", "most", "of", "the", "day", "!"]
# ::lemmas ["certainly", ",", "Kayleigh", ".", "arrive", "as", "early", "as", "you", "can", "to", "make", "the", "most", "of", "the", "day", "!"]
(c2-10 / multi-sentence
       :snt1 (c2-1 / certain)
       :snt2 (c2-7 / go-02
                   :ARG0 (c2-9 / person
                               :name (c2-11 / name
                                            :op1 "Kayleigh"))
                   :time (c2-12 / early
                                :ARG2-of (c2-3 / have-degree-91
                                               :ARG1 c2-7
                                               :ARG3 (c2-4 / equal)
                                               :ARG4 (c2-6 / possible-01
                                                           :ARG1 c2-7)))
                   :purpose (c2-2 / make-18
                                  :ARG0 c2-9
                                  :ARG1 (c2-8 / have-quant-91
                                              :ARG1 (c2-0 / day)
                                              :ARG3 (c2-5 / most)))
                   :mode imperative))
