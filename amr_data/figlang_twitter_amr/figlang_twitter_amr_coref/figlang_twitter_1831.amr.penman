# ::snt Twelve months on ... Overall , I reckon it's been a pretty good year <URL>
# ::tokens ["Twelve", "months", "on", "...", "Overall", ",", "I", "reckon", "it", "'s", "been", "a", "pretty", "good", "year", "<", "URL", ">"]
# ::lemmas ["Twelve", "months", "on", "...", "overall", ",", "i", "reckon", "it", "be", "be", "a", "pretty", "good", "year", "<", "URL", ">"]
(c1-10 / multi-sentence
       :snt1 (c1-8 / be-temporally-at-91
                   :ARG2 (c1-0 / after
                               :quant (c1-4 / temporal-quantity
                                            :unit (c1-1 / month)
                                            :quant 12)))
       :snt2 (c1-5 / reckon-01
                   :ARG0 (c1-9 / i)
                   :ARG1 (c1-11 / year
                                :ARG1-of (c1-6 / good-02
                                               :degree (c1-7 / pretty))
                                :domain (c1-2 / it))
                   :mod (c1-3 / overall)))

# ::snt what a year it's been who would have thought what would come next
# ::tokens ["what", "a", "year", "it", "'s", "been", "who", "would", "have", "thought", "what", "would", "come", "next"]
# ::lemmas ["what", "a", "year", "it", "be", "be", "who", "would", "have", "think", "what", "would", "come", "next"]
(c2-4 / think-01
      :ARG0 (c2-1 / amr-unknown)
      :ARG1 (c2-3 / thing
                  :ARG1-of (c2-2 / come-01
                                 :time (c2-5 / next)))
      :time (c2-6 / year
                  :degree (c2-0 / so)))

# ::snt my crystal ball is refusing to tell me where we will be in months time
# ::tokens ["my", "crystal", "ball", "is", "refusing", "to", "tell", "me", "where", "we", "will", "be", "in", "months", "time"]
# ::lemmas ["my", "crystal", "ball", "be", "refuse", "to", "tell", "i", "where", "we", "will", "be", "in", "months", "time"]
(c3-6 / refuse-01
      :ARG0 (c3-8 / ball
                  :mod (c3-1 / crystal)
                  :poss (c3-9 / i))
      :ARG1 (c3-5 / tell-01
                  :ARG0 c3-8
                  :ARG1 (c3-7 / location
                              :location-of (c3-2 / we)
                              :time (c3-0 / after
                                          :op1 (c3-11 / now)
                                          :quant (c3-10 / multiple
                                                        :op1 (c3-3 / temporal-quantity
                                                                   :unit (c3-4 / month)
                                                                   :quant 1))))
                  :ARG2 c3-9))

# ::snt I'd take losing to Scunthorpe to see your faces last week
# ::tokens ["I", "'d", "take", "losing", "to", "Scunthorpe", "to", "see", "your", "faces", "last", "week"]
# ::lemmas ["i", "would", "take", "lose", "to", "Scunthorpe", "to", "see", "your", "face", "last", "week"]
(c4-4 / take-10
      :ARG0 (c4-7 / i)
      :ARG1 (c4-5 / lose-03
                  :ARG2 (c4-3 / team
                              :name (c4-8 / name
                                          :op1 "Scunthorpe")))
      :ARG2 (c4-0 / see-01
                  :ARG0 c4-7
                  :ARG1 (c4-1 / face
                              :part-of (c4-9 / you))
                  :time (c4-2 / week
                              :mod (c4-6 / last))))

# ::snt one lucky win and you dance in the swamplands .. we'll see where you finish the season
# ::tokens ["one", "lucky", "win", "and", "you", "dance", "in", "the", "swamplands", "..", "we", "'ll", "see", "where", "you", "finish", "the", "season"]
# ::lemmas ["one", "lucky", "win", "and", "you", "dance", "in", "the", "swampland", "..", "we", "'ll", "see", "where", "you", "finish", "the", "season"]
(c5-10 / multi-sentence
       :snt1 (c5-2 / and
                   :op1 (c5-5 / win-01
                              :mod (c5-8 / lucky)
                              :quant 1)
                   :op2 (c5-0 / dance-01
                              :ARG0 (c5-11 / you)
                              :location (c5-1 / swampland)))
       :snt2 (c5-9 / see-01
                   :ARG0 (c5-12 / we)
                   :ARG1 (c5-7 / thing
                               :location-of (c5-4 / finish-01
                                                  :ARG0 (c5-3 / you)
                                                  :ARG1 (c5-6 / season)))))

# ::snt I live in Northampton , % it'll be above you lot
# ::tokens ["I", "live", "in", "Northampton", ",", "%", "it", "'ll", "be", "above", "you", "lot"]
# ::lemmas ["i", "live", "in", "Northampton", ",", "%", "it", "'ll", "be", "above", "you", "lot"]
(c6-4 / live-01
      :ARG0 (c6-5 / i)
      :location (c6-2 / city
                      :name (c6-6 / name
                                  :op1 "Northampton"))
      :degree (c6-3 / percentage-entity
                    :value (c6-1 / above
                                 :op1 (c6-7 / you
                                            :mod (c6-0 / lot)))))

# ::snt even worse living with us .. luckily fingers and webbed feet isn't catching .. Born ..
# ::tokens ["even", "worse", "living", "with", "us", "..", "luckily", "fingers", "and", "webbed", "feet", "is", "n't", "catching", "..", "Born", ".."]
# ::lemmas ["even", "bad", "live", "with", "we", "..", "luckily", "finger", "and", "web", "foot", "be", "not", "catch", "..", "bear", ".."]
(c7-11 / multi-sentence
       :snt1 (c7-6 / have-degree-91
                   :ARG1 (c7-8 / live-01
                               :accompanier (c7-4 / we))
                   :ARG2 (c7-10 / bad-07
                                :ARG1 c7-8)
                   :ARG3 (c7-3 / more
                               :mod (c7-13 / even)))
       :snt2 (c7-5 / catch-03
                   :ARG0 (c7-1 / and
                               :op1 (c7-2 / finger)
                               :op2 (c7-7 / foot
                                          :ARG1-of (c7-12 / web-01)))
                   :manner (c7-9 / lucky)
                   :polarity -)
       :snt3 (c7-0 / bear-02))
