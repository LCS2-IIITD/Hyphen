# ::snt Four years ago today , we lost Alan Rickman . He will be missed . Always . <URL>
# ::tokens ["Four", "years", "ago", "today", ",", "we", "lost", "Alan", "Rickman", ".", "He", "will", "be", "missed", ".", "Always", ".", "<", "URL", ">"]
# ::lemmas ["Four", "years", "ago", "today", ",", "we", "lose", "Alan", "Rickman", ".", "he", "will", "be", "miss", ".", "always", ".", "<", "URL", ">"]
(c1-10 / multi-sentence
       :snt1 (c1-7 / lose-02
                   :ARG0 (c1-2 / we)
                   :ARG1 (c1-9 / person
                               :name (c1-11 / name
                                            :op1 "Alan"
                                            :op2 "Rickman"))
                   :time (c1-8 / before
                               :op1 (c1-6 / now)
                               :quant (c1-5 / temporal-quantity
                                            :unit (c1-12 / year)
                                            :quant 4))
                   :time (c1-3 / today))
       :snt2 (c1-1 / miss-01
                   :ARG1 (c1-4 / he)
                   :time (c1-0 / always)))

# ::snt If you look under the cushions , you may find him . That's where most things I lose end up .
# ::tokens ["If", "you", "look", "under", "the", "cushions", ",", "you", "may", "find", "him", ".", "That", "'s", "where", "most", "things", "I", "lose", "end", "up", "."]
# ::lemmas ["if", "you", "look", "under", "the", "cushion", ",", "you", "may", "find", "he", ".", "that", "be", "where", "most", "thing", "i", "lose", "end", "up", "."]
(c2-11 / multi-sentence
       :snt1 (c2-10 / possible-01
                    :ARG1 (c2-0 / find-01
                                :ARG0 (c2-12 / you)
                                :ARG1 (c2-5 / he))
                    :condition (c2-8 / look-01
                                     :ARG0 c2-12
                                     :ARG1 (c2-6 / under
                                                 :op1 (c2-1 / cushion))))
       :snt2 (c2-13 / end-up-03
                    :ARG1 (c2-7 / thing
                                :mod (c2-2 / most)
                                :ARG1-of (c2-9 / lose-02
                                               :ARG0 (c2-3 / i)))
                    :ARG2 (c2-4 / that)))
