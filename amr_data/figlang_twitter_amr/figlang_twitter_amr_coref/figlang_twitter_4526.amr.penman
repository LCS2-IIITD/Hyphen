# ::snt Agak sedih tapi yaudah lah ya mau gimana lagi
# ::tokens ["Agak", "sedih", "tapi", "yaudah", "lah", "ya", "mau", "gimana", "lagi"]
# ::lemmas ["Agak", "sedih", "tapi", "yaudah", "lah", "ya", "mau", "gimana", "lagi"]
(c1-0 / say-01
      :ARG0 (c1-6 / i)
      :ARG1 (c1-1 / and
                  :op1 (c1-10 / Agak
                              :mode expressive)
                  :op2 (c1-3 / tapi
                             :mode expressive)
                  :op3 (c1-4 / laugh-01
                             :ARG0 (c1-9 / you)
                             :op4-of c1-1
                             :mode expressive)
                  :ARG0 c1-9
                  :ARG0-of (c1-2 / have-rel-role-91
                                 :ARG1 (c1-5 / person
                                             :name (c1-8 / name
                                                         :op1 "Gimana"))
                                 :ARG2 (c1-7 / mother))
                  :mode expressive)
      :ARG2 c1-9)

# ::snt Thank you so much , that's so kind of you
# ::tokens ["Thank", "you", "so", "much", ",", "that", "'s", "so", "kind", "of", "you"]
# ::lemmas ["thank", "you", "so", "much", ",", "that", "be", "so", "kind", "of", "you"]
(c2-1 / thank-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-6 / you)
      :degree (c2-4 / much
                    :degree (c2-0 / so))
      :ARG1-of (c2-5 / kind-01
                     :ARG0 c2-6
                     :degree (c2-2 / so)))

# ::snt Keep smiling , okay ? I don't like to see my mutuals being sad .
# ::tokens ["Keep", "smiling", ",", "okay", "?", "I", "do", "n't", "like", "to", "see", "my", "mutuals", "being", "sad", "."]
# ::lemmas ["keep", "smile", ",", "okay", "?", "i", "do", "not", "like", "to", "see", "my", "mutual", "be", "sad", "."]
(c3-7 / multi-sentence
      :snt1 (c3-8 / keep-02
                  :ARG0 (c3-9 / you)
                  :ARG1 (c3-0 / smile-01
                              :ARG0 c3-9)
                  :ARG1-of (c3-4 / okay-04)
                  :mode imperative)
      :snt2 (c3-1 / dislike-01
                  :ARG0 (c3-6 / i)
                  :ARG1 (c3-5 / see-01
                              :ARG0 c3-6
                              :ARG1 (c3-3 / sad-02
                                          :ARG1 (c3-2 / mutual
                                                      :poss c3-6)))))

# ::snt I'm trying my best , but I'm not promising you anyting
# ::tokens ["I", "'m", "trying", "my", "best", ",", "but", "I", "'m", "not", "promising", "you", "anyting"]
# ::lemmas ["i", "be", "try", "my", "good", ",", "but", "i", "be", "not", "promise", "you", "anyte"]
(c4-1 / contrast-01
      :ARG1 (c4-3 / try-01
                  :ARG0 (c4-6 / i)
                  :ARG1 (c4-5 / good-03
                              :ARG1 c4-6
                              :ARG2-of (c4-2 / have-degree-91
                                             :ARG1 c4-6
                                             :ARG3 (c4-7 / most))))
      :ARG2 (c4-4 / promise-01
                  :ARG0 c4-6
                  :ARG1 (c4-8 / you)
                  :ARG2 (c4-0 / anyting)
                  :polarity -))

# ::snt It's okay , Timmy . You can do it slowly , it's okay . You can knock on my DM if you need someone to talk to .
# ::tokens ["It", "'s", "okay", ",", "Timmy", ".", "You", "can", "do", "it", "slowly", ",", "it", "'s", "okay", ".", "You", "can", "knock", "on", "my", "DM", "if", "you", "need", "someone", "to", "talk", "to", "."]
# ::lemmas ["it", "be", "okay", ",", "Timmy", ".", "you", "can", "do", "it", "slowly", ",", "it", "be", "okay", ".", "you", "can", "knock", "on", "my", "dm", "if", "you", "need", "someone", "to", "talk", "to", "."]
(c5-14 / multi-sentence
       :snt1 (c5-8 / okay-04
                   :ARG1 (c5-3 / it)
                   :ARG2 (c5-13 / person
                                :name (c5-15 / name
                                             :op1 "Timmy")))
       :snt2 (c5-9 / possible-01
                   :ARG1 (c5-0 / do-02
                               :ARG0 (c5-16 / you)
                               :ARG1 (c5-5 / it)
                               :ARG1-of (c5-1 / slow-05)))
       :snt3 (c5-6 / okay-04
                   :ARG1 (c5-2 / knock-on-04
                               :ARG0 (c5-17 / you)
                               :ARG1 (c5-10 / thing
                                            :name c5-15
                                            :op1 "DM")
                               :poss (c5-7 / i))
                   :condition (c5-11 / need-01
                                     :ARG0 c5-17
                                     :ARG1 (c5-12 / someone
                                                  :ARG2-of (c5-4 / talk-01
                                                                 :ARG0 c5-17)))))

# ::snt Appreciate it . And yup , all do it if I have something to talk to or something happend !
# ::tokens ["Appreciate", "it", ".", "And", "yup", ",", "all", "do", "it", "if", "I", "have", "something", "to", "talk", "to", "or", "something", "happend", "!"]
# ::lemmas ["appreciate", "it", ".", "and", "yup", ",", "all", "do", "it", "if", "i", "have", "something", "to", "talk", "to", "or", "something", "happend", "!"]
(c6-12 / multi-sentence
       :snt1 (c6-3 / appreciate-02
                   :ARG0 (c6-13 / you)
                   :ARG1 (c6-11 / it)
                   :mode imperative)
       :snt2 (c6-14 / and
                    :op2 (c6-0 / do-02
                               :ARG0 (c6-1 / all)
                               :ARG1 (c6-5 / it)
                               :condition (c6-8 / or
                                                :op1 (c6-6 / have-03
                                                           :ARG0 (c6-7 / i)
                                                           :ARG1 (c6-2 / something
                                                                       :ARG2-of (c6-9 / talk-01
                                                                                      :ARG0 c6-7)))
                                                :op2 (c6-15 / event
                                                            :mod (c6-10 / something))))
                    :mod (c6-4 / yup)))

# ::snt can't sleep , maybe in or hours I will . Hbu ? Why are you still awake ?
# ::tokens ["ca", "n't", "sleep", ",", "maybe", "in", "or", "hours", "I", "will", ".", "Hbu", "?", "Why", "are", "you", "still", "awake", "?"]
# ::lemmas ["can", "not", "sleep", ",", "maybe", "in", "or", "hour", "i", "will", ".", "Hbu", "?", "why", "be", "you", "still", "awake", "?"]
(c7-6 / multi-sentence
      :snt1 (c7-12 / and
                   :op1 (c7-17 / possible-01
                               :ARG1 (c7-9 / sleep-01
                                           :ARG0 (c7-2 / i))
                               :polarity -)
                   :op2 (c7-15 / possible-01
                               :ARG1 (c7-16 / sleep-01
                                            :ARG0 c7-2)
                               :time (c7-4 / or
                                           :op1 (c7-8 / after
                                                      :op1 (c7-7 / now))
                                           :op2 (c7-0 / after
                                                      :op1 c7-7
                                                      :quant (c7-13 / multiple
                                                                    :op1 (c7-5 / temporal-quantity
                                                                               :unit (c7-14 / hour)
                                                                               :quant 1))))))
      :snt2 (c7-3 / cause-01
                  :ARG0 (c7-18 / amr-unknown)
                  :ARG1 (c7-1 / awake-03
                              :ARG1 (c7-11 / you)
                              :mod (c7-10 / still))))

# ::snt I'd slept last night when you aksed . Good morning by the way !
# ::tokens ["I", "'d", "slept", "last", "night", "when", "you", "aksed", ".", "Good", "morning", "by", "the", "way", "!"]
# ::lemmas ["i", "would", "sleep", "last", "night", "when", "you", "akse", ".", "good", "morning", "by", "the", "way", "!"]
(c8-7 / multi-sentence
      :snt1 (c8-0 / sleep-01
                  :ARG0 (c8-6 / i)
                  :time (c8-1 / date-entity
                              :dayperiod (c8-8 / night)
                              :mod (c8-9 / yesterday))
                  :time (c8-2 / aks-01
                              :ARG0 (c8-10 / you)))
      :snt2 (c8-3 / morning
                  :ARG1-of (c8-5 / good-02)
                  :mod (c8-4 / by-the-way)))

# ::snt I don't have enough sleep I guess . How about you ?
# ::tokens ["I", "do", "n't", "have", "enough", "sleep", "I", "guess", ".", "How", "about", "you", "?"]
# ::lemmas ["i", "do", "not", "have", "enough", "sleep", "i", "guess", ".", "how", "about", "you", "?"]
(c9-6 / multi-sentence
      :snt1 (c9-3 / guess-01
                  :ARG0 (c9-5 / i)
                  :ARG1 (c9-0 / sleep-01
                              :ARG0 c9-5
                              :ARG1-of (c9-2 / have-quant-91
                                             :ARG3 (c9-8 / enough
                                                         :polarity -))))
      :snt2 (c9-4 / suggest-01
                  :ARG0 (c9-7 / you)
                  :ARG1 (c9-1 / amr-unknown)))

# ::snt I thought you were sleep for nine hours - it's good but I think I need more
# ::tokens ["I", "thought", "you", "were", "sleep", "for", "nine", "hours", "-", "it", "'s", "good", "but", "I", "think", "I", "need", "more"]
# ::lemmas ["i", "think", "you", "be", "sleep", "for", "nine", "hours", "-", "it", "be", "good", "but", "i", "think", "i", "need", "more"]
(c10-10 / multi-sentence
        :snt1 (c10-7 / think-01
                     :ARG0 (c10-9 / i)
                     :ARG1 (c10-0 / sleep-01
                                  :ARG0 (c10-12 / you)
                                  :duration (c10-3 / temporal-quantity
                                                   :unit (c10-4 / hour)
                                                   :quant 9)))
        :snt2 (c10-8 / good-02
                     :ARG1 (c10-5 / it)
                     :concession-of (c10-1 / think-01
                                           :ARG0 (c10-6 / i)
                                           :ARG1 (c10-11 / need-01
                                                         :ARG0 c10-6
                                                         :ARG1 (c10-2 / more)))))

# ::snt I already awake at AM ... Do you have any activity today ?
# ::tokens ["I", "already", "awake", "at", "AM", "...", "Do", "you", "have", "any", "activity", "today", "?"]
# ::lemmas ["i", "already", "awake", "at", "am", "...", "do", "you", "have", "any", "activity", "today", "?"]
(c11-7 / multi-sentence
       :snt1 (c11-2 / awake-03
                    :ARG1 (c11-6 / i)
                    :time (c11-9 / already)
                    :time (c11-0 / date-entity
                                 :time "AM"))
       :snt2 (c11-1 / activity-06
                    :polarity (c11-4 / amr-unknown)
                    :ARG0 (c11-8 / you)
                    :time (c11-5 / today)
                    :mod (c11-3 / any)))

# ::snt Oop , my bad . Yup , and that's include eat , play some game , eat again , or maybe sleep again who knows
# ::tokens ["Oop", ",", "my", "bad", ".", "Yup", ",", "and", "that", "'s", "include", "eat", ",", "play", "some", "game", ",", "eat", "again", ",", "or", "maybe", "sleep", "again", "who", "knows"]
# ::lemmas ["oop", ",", "my", "bad", ".", "yup", ",", "and", "that", "be", "include", "eat", ",", "play", "some", "game", ",", "eat", "again", ",", "or", "maybe", "sleep", "again", "who", "know"]
(c12-4 / multi-sentence
       :snt1 (c12-2 / oops
                    :ARG1-of (c12-14 / bad-07
                                     :ARG0 (c12-1 / i))
                    :mode expressive)
       :snt2 (c12-10 / and
                     :op2 (c12-8 / include-01
                                 :ARG1 (c12-11 / or
                                               :op1 (c12-6 / eat-01)
                                               :op2 (c12-16 / play-01
                                                            :ARG1 (c12-3 / game
                                                                         :mod (c12-7 / some)))
                                               :op3 (c12-12 / eat-01
                                                            :mod (c12-5 / again))
                                               :op4 (c12-15 / sleep-01
                                                            :mod (c12-0 / again)
                                                            :ARG1-of (c12-17 / know-01
                                                                             :ARG0 (c12-18 / amr-unknown))
                                                            :ARG1-of (c12-13 / possible-01))))
                     :mod (c12-9 / yup)))

# ::snt Mine are just sleep , online in twitter , and eat
# ::tokens ["Mine", "are", "just", "sleep", ",", "online", "in", "twitter", ",", "and", "eat"]
# ::lemmas ["mine", "be", "just", "sleep", ",", "online", "in", "twitter", ",", "and", "eat"]
(c13-1 / and
       :op1 (c13-0 / sleep-01
                   :ARG0 (c13-5 / i)
                   :mod (c13-4 / just))
       :op2 (c13-2 / online
                   :medium (c13-3 / publication
                                  :name (c13-6 / name
                                               :op1 "Twitter")))
       :op3 (c13-7 / eat-01
                   :ARG0 c13-5))
