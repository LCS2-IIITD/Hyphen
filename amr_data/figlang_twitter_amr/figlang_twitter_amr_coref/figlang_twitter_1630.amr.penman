# ::snt My dear old thing you appear to have forgotten that Ulster voted to REMAIN
# ::tokens ["My", "dear", "old", "thing", "you", "appear", "to", "have", "forgotten", "that", "Ulster", "voted", "to", "REMAIN"]
# ::lemmas ["my", "dear", "old", "thing", "you", "appear", "to", "have", "forget", "that", "Ulster", "vote", "to", "REMAIN"]
(c1-1 / appear-02
      :ARG1 (c1-2 / forget-01
                  :ARG0 (c1-10 / you
                               :mod (c1-0 / dear)
                               :mod (c1-6 / thing
                                          :mod (c1-5 / old)
                                          :poss (c1-8 / i)))
                  :ARG1 (c1-4 / vote-01
                              :ARG0 (c1-3 / county
                                          :name (c1-9 / name
                                                      :op1 "Ulster"))
                              :ARG1 (c1-7 / remain-01
                                          :ARG1 c1-3))))

# ::snt You seem to have forgotten the UK voted to LEAVE . Move along ...
# ::tokens ["You", "seem", "to", "have", "forgotten", "the", "UK", "voted", "to", "LEAVE", ".", "Move", "along", "..."]
# ::lemmas ["you", "seem", "to", "have", "forget", "the", "UK", "vote", "to", "leave", ".", "move", "along", "..."]
(c2-7 / multi-sentence
      :snt1 (c2-0 / seem-01
                  :ARG1 (c2-2 / forget-01
                              :ARG0 (c2-9 / you)
                              :ARG1 (c2-5 / vote-01
                                          :ARG0 (c2-3 / country
                                                      :name (c2-8 / name
                                                                  :op1 "UK"))
                                          :ARG1 (c2-6 / leave-11
                                                      :ARG0 c2-3))))
      :snt2 (c2-4 / move-01
                  :ARG2 (c2-1 / along)))

# ::snt and you have forgotten that it was an advisory vote numpty ...
# ::tokens ["and", "you", "have", "forgotten", "that", "it", "was", "an", "advisory", "vote", "numpty", "..."]
# ::lemmas ["and", "you", "have", "forget", "that", "it", "be", "an", "advisory", "vote", "numpty", "..."]
(c3-0 / and
      :op2 (c3-1 / forget-01
                 :ARG0 (c3-5 / you)
                 :ARG1 (c3-4 / numpty
                             :mod (c3-2 / vote-01
                                        :mod (c3-6 / advisory))
                             :domain (c3-3 / it))))

# ::snt it is advisory even Farage admits that . Hence he is calling for the law to be changed nitwit
# ::tokens ["it", "is", "advisory", "even", "Farage", "admits", "that", ".", "Hence", "he", "is", "calling", "for", "the", "law", "to", "be", "changed", "nitwit"]
# ::lemmas ["it", "be", "advisory", "even", "Farage", "admit", "that", ".", "hence", "he", "be", "call", "for", "the", "law", "to", "be", "change", "nitwit"]
(c4-9 / multi-sentence
      :snt1 (c4-1 / admit-01
                  :ARG0 (c4-8 / person
                              :name (c4-10 / name
                                           :op1 "N Farage")
                              :mod (c4-12 / even))
                  :ARG1 (c4-11 / advise-01
                               :ARG2 (c4-2 / it)))
      :snt2 (c4-3 / cause-01
                  :ARG1 (c4-0 / call-03
                              :ARG0 (c4-4 / he)
                              :ARG1 (c4-5 / change-01
                                          :ARG1 (c4-7 / law))
                              :mod (c4-6 / nitwit))))

# ::snt Your view is to ignore the will of the majority , " nitwit " .
# ::tokens ["Your", "view", "is", "to", "ignore", "the", "will", "of", "the", "majority", ",", "\"", "nitwit", "\"", "."]
# ::lemmas ["your", "view", "be", "to", "ignore", "the", "will", "of", "the", "majority", ",", "\"", "nitwit", "\"", "."]
(c5-0 / say-01
      :ARG1 (c5-2 / view-02
                  :ARG0 (c5-6 / you)
                  :ARG1 (c5-3 / ignore-01
                              :ARG0 c5-6
                              :ARG1 (c5-1 / will-02
                                          :ARG0 (c5-4 / majority))))
      :ARG2 (c5-5 / nitwit))

# ::snt it's politics mate % of the electorate is hardly a land slide is it ?
# ::tokens ["it", "'s", "politics", "mate", "%", "of", "the", "electorate", "is", "hardly", "a", "land", "slide", "is", "it", "?"]
# ::lemmas ["it", "be", "politic", "mate", "%", "of", "the", "electorate", "be", "hardly", "a", "land", "slide", "be", "it", "?"]
(c6-0 / say-01
      :ARG1 (c6-5 / slide
                  :mod (c6-4 / land)
                  :mod (c6-2 / hardly)
                  :domain (c6-6 / percentage-entity
                                :ARG3-of (c6-1 / include-91
                                               :ARG2 (c6-8 / electorate))
                                :value 1)
                  :ARG1-of (c6-3 / request-confirmation-91))
      :ARG2 (c6-7 / mate))

# ::snt The typical retort is to factor in non voters , every time ...
# ::tokens ["The", "typical", "retort", "is", "to", "factor", "in", "non", "voters", ",", "every", "time", "..."]
# ::lemmas ["the", "typical", "retort", "be", "to", "factor", "in", "non", "voter", ",", "every", "time", "..."]
(c7-4 / retort-01
      :ARG2 (c7-0 / factor-in-02
                  :ARG1 (c7-5 / person
                              :ARG0-of (c7-2 / vote-01
                                             :polarity -))
                  :frequency (c7-3 / time
                                   :mod (c7-6 / every)))
      :ARG1-of (c7-1 / typical-02))

# ::snt and the people denied a vote as well . Then you have to consider the bare faced lies can u list them ?
# ::tokens ["and", "the", "people", "denied", "a", "vote", "as", "well", ".", "Then", "you", "have", "to", "consider", "the", "bare", "faced", "lies", "can", "u", "list", "them", "?"]
# ::lemmas ["and", "the", "people", "deny", "a", "vote", "as", "well", ".", "then", "you", "have", "to", "consider", "the", "bare", "faced", "lie", "can", "u", "list", "they", "?"]
(c8-14 / multi-sentence
       :snt1 (c8-2 / and
                   :op2 (c8-0 / deny-01
                              :ARG1 (c8-6 / vote-01
                                          :ARG1 (c8-13 / person
                                                       :ARG2-of c8-0))
                              :mod (c8-16 / as-well)))
       :snt2 (c8-8 / possible-01
                   :ARG1 (c8-10 / list-01
                                :ARG0 (c8-15 / you)
                                :ARG1 (c8-9 / they)
                                :polarity (c8-1 / amr-unknown))
                   :time (c8-5 / then)
                   :time (c8-7 / obligate-01
                               :ARG1 c8-15
                               :ARG2 (c8-4 / consider-02
                                           :ARG0 c8-15
                                           :ARG1 (c8-11 / lie-08
                                                        :mod (c8-3 / face
                                                                   :ARG1-of (c8-12 / bare-02)))))))

# ::snt Out of voters there was a majority , when is there ever a clear agreement on issues with voters ...
# ::tokens ["Out", "of", "voters", "there", "was", "a", "majority", ",", "when", "is", "there", "ever", "a", "clear", "agreement", "on", "issues", "with", "voters", "..."]
# ::lemmas ["out", "of", "voter", "there", "be", "a", "majority", ",", "when", "be", "there", "ever", "a", "clear", "agreement", "on", "issue", "with", "voter", "..."]
(c9-9 / multi-sentence
      :snt1 (c9-2 / majority
                  :ARG1-of (c9-8 / include-91
                                 :ARG2 (c9-7 / person
                                             :ARG0-of (c9-5 / vote-01))))
      :snt2 (c9-0 / agree-01
                  :ARG1 (c9-4 / issue-02
                              :ARG1 (c9-6 / person
                                          :ARG0-of (c9-1 / vote-01)))
                  :ARG1-of (c9-3 / clear-06)
                  :time (c9-11 / ever)
                  :time (c9-10 / amr-unknown)))

# ::snt ... just have to go with the Majority decision like any democracy .
# ::tokens ["...", "just", "have", "to", "go", "with", "the", "Majority", "decision", "like", "any", "democracy", "."]
# ::lemmas ["...", "just", "have", "to", "go", "with", "the", "Majority", "decision", "like", "any", "democracy", "."]
(c10-2 / obligate-01
       :ARG2 (c10-4 / go-22
                    :ARG2 (c10-0 / decide-01
                                 :ARG3 (c10-7 / majority)))
       :mod (c10-5 / just)
       :ARG1-of (c10-3 / resemble-01
                       :ARG2 (c10-8 / go-22
                                    :ARG2 (c10-6 / democracy
                                                 :mod (c10-1 / any))
                                    :ARG3 c10-0)))
