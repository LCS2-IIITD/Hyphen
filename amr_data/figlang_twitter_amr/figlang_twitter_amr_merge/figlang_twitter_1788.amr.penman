# ::subgraphs [["c1-9", "c1-4", "c1-2", "c1-3", "c1-8", "c1-0", "c1-5", "c1-6", "c1-7", "c1-1"], ["c2-10", "c2-3", "c2-9", "c2-7", "c2-11", "c2-1", "c2-4", "c2-8", "c2-0", "c2-6", "c2-5", "c2-2"], ["c3-7", "c3-8", "c3-9", "c3-2", "c3-1", "c3-0", "c3-10", "c3-3", "c3-6", "c3-4", "c3-5"], ["c4-4", "c4-5", "c4-8", "c4-0", "c4-3", "c4-2", "c4-10", "c4-9", "c4-7", "c4-6", "c4-1"], ["c5-4", "c5-5", "c5-0", "c5-3", "c5-6", "c5-2", "c5-1"]]
(d / dummy
   :COMMENT (c1-9 / multi
                  :snt1 (c1-4 / out
                              :ARG1 (c1-2 / it)
                              :ARG1-of (c1-3 / okay))
                  :snt2 (c1-8 / person
                              :ord (c1-0 / ordinal
                                         :value 1)
                              :ARG0-of (c1-5 / pull
                                             :ARG1 (c1-6 / trigger)
                                             :time (c1-7 / review))
                              :domain (c1-1 / amr)
                              :SAME c2-7)
                  :SAME c2-10)
   :COMMENT (c2-10 / multi
                   :snt1 (c2-3 / hope
                               :ARG0 (c2-9 / i
                                           :SAME c5-5
                                           :SAME c3-8
                                           :SAME c2-4)
                               :ARG1 (c2-7 / person
                                           :name (c2-11 / name
                                                        :op1 "AD"
                                                        :SAME c5-6
                                                        :SAME c3-6
                                                        :SAME c3-10)))
                   :snt2 (c2-1 / know
                               :ARG0 (c2-4 / i
                                           :COREF c5-5
                                           :COREF c3-8
                                           :COREF c2-9)
                               :ARG1 (c2-8 / have
                                           :ARG0 (c2-0 / he
                                                       :SAME c4-3
                                                       :COREF c4-3)
                                           :ARG1 (c2-6 / time
                                                       :purpose (c2-5 / prepare
                                                                      :ARG0 c2-0)))
                               :manner (c2-2 / certain)))
   :COMMENT (c3-7 / busy
                  :ARG1 (c3-8 / i)
                  :ARG2 (c3-9 / make
                              :ARG0 c3-8
                              :ARG1 (c3-2 / movie
                                          :topic (c3-1 / and
                                                       :op1 (c3-0 / book
                                                                  :name (c3-10 / name
                                                                               :op1 "Ghostbusters")
                                                                  :SAME c3-3)
                                                       :op2 (c3-3 / book
                                                                  :name (c3-6 / name
                                                                              :op1 "Demon"
                                                                              :op2 "Hunters")))))
                  :ARG2-of (c3-4 / have-degree
                                 :ARG1 c3-8
                                 :ARG3 (c3-5 / too)))
   :COMMENT (c4-4 / or
                  :op1 (c4-5 / get
                             :ARG0 (c4-8 / you)
                             :ARG1 (c4-0 / start
                                         :ARG0 (c4-3 / he)
                                         :SAME c5-0)
                             :polarity -
                             :mode imperative
                             :SAME c5-4)
                  :op2 (c4-2 / waste
                             :ARG0 (c4-10 / episode
                                          :poss (c4-9 / we)
                                          :mod (c4-7 / next))
                             :ARG1 (c4-6 / half
                                         :part-of (c4-1 / show))))
   :COMMENT (c5-4 / get
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-0 / start
                              :ARG1 (c5-3 / program
                                          :name (c5-6 / name
                                                      :op1 "AD")))
                  :degree (c5-2 / total)
                  :mod (c5-1 / huh
                             :mode expressive)))
