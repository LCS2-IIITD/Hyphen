# ::subgraphs [["c1-9", "c1-24", "c1-13", "c1-1", "c1-17", "c1-3", "c1-22", "c1-12", "c1-0", "c1-11", "c1-23", "c1-7", "c1-6", "c1-19", "c1-8", "c1-14", "c1-15", "c1-4", "c1-25", "c1-20", "c1-10", "c1-18", "c1-2", "c1-16", "c1-5", "c1-21"], ["c2-7", "c2-18", "c2-16", "c2-2", "c2-4", "c2-5", "c2-14", "c2-17", "c2-0", "c2-8", "c2-13", "c2-11", "c2-3", "c2-19", "c2-1", "c2-9", "c2-15", "c2-12", "c2-10", "c2-6"]]
(d / dummy
   :COMMENT (c1-9 / multi
                  :snt1 (c1-24 / possible
                               :ARG1 (c1-13 / say
                                            :ARG0 (c1-1 / i)
                                            :ARG1 (c1-17 / amr
                                                         :SAME c1-12))
                               :SAME c2-15
                               :SAME c2-18)
                  :snt2 (c1-3 / worth
                              :ARG1 (c1-22 / person)
                              :ARG2 (c1-12 / amr)
                              :SAME c2-3)
                  :snt3 (c1-0 / and
                              :op1 (c1-11 / waste
                                          :quant (c1-23 / lot))
                              :op2 (c1-7 / thing
                                         :mod (c1-6 / one)
                                         :domain (c1-19 / make
                                                        :ARG1 c1-11
                                                        :SAME c2-13
                                                        :SAME c1-16)
                                         :ARG1-of (c1-8 / recommend
                                                        :polarity -)
                                         :SAME c1-10)
                              :op4 (c1-14 / enable
                                          :ARG1 (c1-15 / purchase
                                                       :ARG0 (c1-4 / they
                                                                   :COREF c2-14)
                                                       :mod (c1-25 / any)))
                              :op5 (c1-20 / have
                                          :ARG0 c1-4
                                          :ARG1 (c1-10 / thing
                                                       :ARG1-of (c1-18 / free))
                                          :ARG1-of (c1-2 / contrast
                                                         :ARG2 (c1-16 / make
                                                                      :ARG0 c1-4
                                                                      :ARG1 c1-10
                                                                      :ARG1-of (c1-5 / require)
                                                                      :polarity -))))
                  :snt4 (c1-21 / url)
                  :SAME c2-7)
   :COMMENT (c2-7 / multi
                  :snt1 (c2-18 / possible
                               :ARG1 (c2-16 / be-located-at
                                            :ARG1 (c2-2 / it)
                                            :ARG2 (c2-4 / only)))
                  :snt2 (c2-5 / talk
                              :ARG0 (c2-14 / he)
                              :ARG1 (c2-17 / job
                                           :SAME c2-10
                                           :SAME c2-19)
                              :time (c2-0 / date
                                          :weekday (c2-8 / saturday)))
                  :snt3 (c2-13 / make
                               :ARG0 (c2-11 / you)
                               :ARG1 (c2-3 / worth
                                           :ARG2 (c2-19 / job
                                                        :ARG1-of (c2-1 / have-quant
                                                                       :ARG3 (c2-9 / more))))
                               :mode imperative)
                  :snt4 (c2-15 / possible
                               :ARG1 (c2-12 / answer
                                            :ARG2 (c2-10 / job
                                                         :quant (c2-6 / many))))))
