# ::subgraphs [["c1-11", "c1-14", "c1-3", "c1-0", "c1-1", "c1-13", "c1-5", "c1-6", "c1-12", "c1-8", "c1-15", "c1-10", "c1-4", "c1-2", "c1-9", "c1-7"], ["c2-13", "c2-0", "c2-12", "c2-10", "c2-1", "c2-11", "c2-3", "c2-6", "c2-15", "c2-7", "c2-2", "c2-5", "c2-4", "c2-8", "c2-16", "c2-14", "c2-9"], ["c3-5", "c3-3", "c3-0", "c3-2", "c3-4", "c3-1", "c3-6"]]
(d / dummy
   :COMMENT (c1-11 / tell
                   :ARG0 (c1-14 / you
                                :SAME c2-15
                                :COREF c2-15)
                   :ARG1 (c1-3 / and
                               :op1 (c1-0 / suppose
                                          :ARG1 (c1-1 / deliver
                                                      :ARG1 (c1-13 / dryer
                                                                   :poss (c1-5 / we)
                                                                   :SAME c1-10)
                                                      :time (c1-6 / date
                                                                  :weekday (c1-12 / saturday))
                                                      :SAME c2-8
                                                      :SAME c2-7
                                                      :SAME c2-1))
                               :op2 (c1-8 / have
                                          :ARG0 c1-5
                                          :ARG1 (c1-15 / and
                                                       :op1 (c1-10 / dryer)
                                                       :op2 (c1-4 / communicate
                                                                  :ARG0 c1-5
                                                                  :ARG1-of (c1-2 / clear)))
                                          :mod (c1-9 / still)
                                          :polarity -)
                               :SAME c2-2
                               :SAME c1-15)
                   :ARG2 (c1-7 / i
                               :SAME c3-0
                               :COREF c3-0)
                   :mode imperative)
   :COMMENT (c2-13 / multi
                   :snt1 (c2-0 / stand
                               :ARG2 (c2-12 / process
                                            :ARG0 (c2-10 / they)
                                            :ARG1 (c2-1 / deliver
                                                        :ARG0 c2-10)
                                            :ARG2 (c2-11 / give
                                                         :ARG0 c2-10
                                                         :ARG1 (c2-3 / frame
                                                                     :mod (c2-6 / time
                                                                                :SAME c3-2))
                                                         :ARG2 (c2-15 / you)
                                                         :purpose (c2-7 / deliver
                                                                        :ARG0 c2-15)
                                                         :polarity -)))
                   :snt2 (c2-2 / and
                               :op1 (c2-5 / way
                                          :manner-of (c2-4 / track
                                                           :ARG1 (c2-8 / deliver
                                                                       :ARG0 c2-15)
                                                           :SAME c3-3)
                                          :mod (c2-16 / also)
                                          :polarity -
                                          :SAME c3-1)
                               :op2 (c2-14 / no
                                           :ARG1-of (c2-9 / contact
                                                          :ARG0 c2-15
                                                          :time c2-8))))
   :COMMENT (c3-5 / possible
                  :ARG1 (c3-3 / track
                              :ARG0 (c3-0 / i)
                              :ARG1 (c3-2 / time
                                          :time-of (c3-4 / grocery
                                                         :poss c3-0
                                                         :prep-on (c3-1 / way)))
                              :mod (c3-6 / even))))
