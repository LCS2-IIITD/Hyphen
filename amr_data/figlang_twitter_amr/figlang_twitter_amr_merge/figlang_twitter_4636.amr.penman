# ::subgraphs [["c1-8", "c1-3", "c1-19", "c1-4", "c1-2", "c1-20", "c1-23", "c1-11", "c1-17", "c1-14", "c1-6", "c1-13", "c1-18", "c1-0", "c1-9", "c1-5", "c1-1", "c1-22", "c1-21", "c1-15", "c1-16", "c1-7", "c1-10", "c1-12"], ["c2-10", "c2-27", "c2-3", "c2-5", "c2-2", "c2-14", "c2-4", "c2-9", "c2-15", "c2-24", "c2-12", "c2-23", "c2-22", "c2-0", "c2-26", "c2-25", "c2-29", "c2-7", "c2-19", "c2-28", "c2-11", "c2-8", "c2-13", "c2-20", "c2-17", "c2-6", "c2-1", "c2-21", "c2-18", "c2-16"], ["c3-5", "c3-1", "c3-3", "c3-8", "c3-2", "c3-9", "c3-6", "c3-4", "c3-0", "c3-7"]]
(d / dummy
   :COMMENT (c1-8 / multi
                  :snt1 (c1-3 / continue
                              :ARG1 (c1-19 / map-out
                                           :ARG1 (c1-4 / whereabouts
                                                       :poss (c1-2 / i
                                                                   :SAME c3-8
                                                                   :SAME c2-26
                                                                   :SAME c2-3
                                                                   :COREF c3-8
                                                                   :COREF c2-3
                                                                   :COREF c2-26)
                                                       :ARG1-of (c1-20 / help
                                                                       :ARG0 c1-2
                                                                       :ARG1-of (c1-23 / possible)
                                                                       :time (c1-11 / since
                                                                                    :op1 (c1-17 / start
                                                                                                :ARG1 (c1-14 / move))))
                                                       :ARG1-of (c1-6 / general))))
                  :snt2 (c1-13 / show
                               :ARG1 (c1-18 / and
                                            :op1 (c1-0 / country
                                                       :name (c1-9 / name
                                                                   :op1 "Trinidad"
                                                                   :SAME c1-1)
                                                       :SAME c1-5)
                                            :op2 (c1-5 / country
                                                       :name (c1-1 / name
                                                                   :op1 "Canada"))
                                            :SAME c3-1
                                            :SAME c2-11
                                            :SAME c2-22)
                               :polarity -)
                  :snt3 (c1-22 / journey
                               :mode expressive)
                  :snt4 (c1-21 / look-forward
                               :ARG0 c1-2
                               :mode expressive)
                  :ARG1 (c1-15 / connect
                               :ARG1 c1-2
                               :ARG2 (c1-16 / you
                                            :quant (c1-7 / more
                                                         :quant (c1-10 / many)
                                                         :SAME c2-23)
                                            :SAME c2-20)
                               :location (c1-12 / inside)
                               :SAME c3-3
                               :SAME c2-18)
                  :SAME c2-10)
   :COMMENT (c2-10 / multi
                   :snt1 (c2-27 / lie
                                :ARG0 (c2-3 / i)
                                :polarity -)
                   :snt2 (c2-5 / work
                               :quant (c2-2 / lot)
                               :domain (c2-14 / it
                                              :SAME c2-15))
                   :snt3 (c2-4 / contrast
                               :ARG2 (c2-9 / get
                                           :ARG1 (c2-15 / it)
                                           :ARG2 (c2-24 / have-degree
                                                        :ARG1 c2-15
                                                        :ARG2 (c2-12 / easy)
                                                        :ARG3 (c2-23 / more)
                                                        :SAME c3-5)
                                           :time (c2-22 / and
                                                        :op1 (c2-0 / catch-up
                                                                   :ARG1 (c2-26 / i))
                                                        :op2 (c2-25 / ensure
                                                                    :ARG0 c2-26
                                                                    :ARG1 (c2-29 / keep
                                                                                 :ARG0 c2-26
                                                                                 :ARG1 (c2-7 / tab)
                                                                                 :time (c2-19 / go
                                                                                              :ARG0 c2-26))
                                                                    :mod (c2-28 / just)))))
                   :snt4 (c2-11 / and
                                :op2 (c2-8 / reward
                                           :ARG0 (c2-13 / see
                                                        :ARG0 (c2-20 / you)
                                                        :ARG1 (c2-17 / map
                                                                     :ARG1-of (c2-6 / color
                                                                                    :mod (c2-1 / all)))
                                                        :SAME c2-21)
                                           :ARG2 (c2-21 / see
                                                        :ARG0 c2-20
                                                        :ARG1 (c2-18 / connect
                                                                     :ARG0 c2-26))
                                           :degree (c2-16 / so))))
   :COMMENT (c3-5 / have-degree
                  :ARG1 (c3-1 / and
                              :op1 (c3-3 / connect
                                         :ARG1 (c3-8 / i))
                              :op2 (c3-2 / friendship
                                         :ARG1-of (c3-9 / make
                                                        :ARG0 c3-8)))
                  :ARG2 (c3-6 / treasure
                              :ARG0 c3-8
                              :ARG1 c3-1)
                  :ARG3 (c3-4 / most)
                  :ARG5 (c3-0 / clear
                              :ARG0 c3-8
                              :ARG1 (c3-7 / list
                                          :ARG0 c3-8))))
