comment,amr
"How long have atheists been criticizing the Bible over unicorns ? Then when they're found , the move on to something <URL>","# ::snt How long have atheists been criticizing the Bible over unicorns ? Then when they're found , the move on to something <URL>
(m / multi-sentence
      :snt1 (c / criticize-01
            :ARG0 (a / atheist)
            :ARG1 (b / book
                  :name (n / name
                        :op1 ""Bible""))
            :ARG2 (u / unicorn)
            :duration (a2 / amr-unknown))
      :snt2 (m2 / move-01
            :ARG2 (s / something)
            :time (f / find-01
                  :ARG1 (t / they))
            :time (t2 / then)))"
"You found a unicorn , really ? ! They must at least be as rare as the talking snakes or the talking donkeys .","# ::snt You found a unicorn , really ? ! They must at least be as rare as the talking snakes or the talking donkeys .
(m / multi-sentence
      :snt1 (f / find-01
            :ARG0 (y / you)
            :ARG1 (u / unicorn)
            :ARG1-of (r / real-04
                  :polarity (a / amr-unknown)))
      :snt2 (ii / infer-01
            :ARG1 (r2 / rare-02
                  :ARG1 u
                  :mod (a2 / at-least)
                  :ARG2-of (h / have-degree-91
                        :ARG1 u
                        :ARG3 (e / equal)
                        :ARG4 (o / or
                              :op1 (s / snake
                                    :ARG0-of (t / talk-01))
                              :op2 (d / donkey
                                    :ARG0-of (t2 / talk-01)))))))"
Unicorns have been found . Atheists are wrong . <URL> Are you man enough to say you were wrong ?,"# ::snt Unicorns have been found . Atheists are wrong . <URL> Are you man enough to say you were wrong ?
(m / multi-sentence
      :snt1 (f / find-01
            :ARG1 (u / unicorn))
      :snt2 (w / wrong-04
            :ARG1 (a / atheist))
      :snt3 (h / have-quant-91
            :ARG1 (m2 / man
                  :domain (y / you))
            :ARG3 (e / enough)
            :ARG6 (s / say-01
                  :ARG0 y
                  :ARG1 (w2 / wrong-04
                        :ARG1 y))
            :polarity (a2 / amr-unknown)))"
