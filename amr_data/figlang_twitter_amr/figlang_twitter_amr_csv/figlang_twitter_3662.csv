comment,amr
I've published the first in my part series on email security : Sender Policy Framework ( SPF ) <URL>,"# ::snt I've published the first in my part series on email security : Sender Policy Framework ( SPF ) <URL>
(p / publish-01
      :ARG0 (ii / i)
      :ARG1 (t / thing
            :ord (o / ordinal-entity
                  :value 1)
            :part-of (s / series
                  :mod (p2 / part)
                  :topic (s2 / security
                        :mod (e / email))
                  :poss ii
                  :mod (p3 / product
                        :name (n / name
                              :op1 ""Sender""
                              :op2 ""Policy""
                              :op3 ""Framework"")))))"
"May be worth adding the lookup limit , which is something that often goes wrong <URL>","# ::snt May be worth adding the lookup limit , which is something that often goes wrong <URL>
(p / possible-01
      :ARG1 (w / worth-02
            :ARG2 (a / add-02
                  :ARG1 (l / limit-01
                        :ARG1 (l2 / look-up-05)
                        :mod (s / something
                              :ARG1-of (g / go-08
                                    :ARG2 (w2 / wrong-02)
                                    :frequency (o / often)))))))"
"And maybe explain that many people recommend not using ( hard ) fails , unless your domain is heavily phished .","# ::snt And maybe explain that many people recommend not using ( hard ) fails , unless your domain is heavily phished .
(a / and
      :op2 (p / possible-01
            :ARG1 (e / explain-01
                  :ARG1 (r / recommend-01
                        :ARG0 (p2 / person
                              :quant (m / many))
                        :ARG1 (u / use-01
                              :polarity -
                              :ARG0 (y / you)
                              :condition (p3 / phish-01
                                    :ARG1 (d / domain
                                          :poss y)
                                    :degree (h / heavy)))))))"
I ve used - all for years on multiple small domains without any problems .,"# ::snt I ve used - all for years on multiple small domains without any problems .
(u / use-01
      :ARG0 (ii / i)
      :duration (m / multiple
            :op1 (t / temporal-quantity
                  :quant 1
                  :unit (y / year)))
      :location (d / domain
            :mod (s / small)
            :quant m)
      :manner (p / problem
            :polarity -))"
perhaps small is the keyword . I know what s going on with my email .,"# ::snt perhaps small is the keyword . I know what s going on with my email .
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (k / keyword
                  :domain (s / small)))
      :snt2 (k2 / know-01
            :ARG0 (ii / i)
            :ARG1 (t / thing
                  :ARG1-of (g / go-on-15
                        :location (e / email
                              :poss ii)))))"
I work for a very small company and I find it hard to enumerate all the servers that send mail on our behalf,"# ::snt I work for a very small company and I find it hard to enumerate all the servers that send mail on our behalf
(a / and
      :op1 (w / work-01
            :ARG0 (ii / i)
            :ARG2 (c / company
                  :mod (s / small
                        :degree (v / very))))
      :op2 (f / find-02
            :ARG0 ii
            :ARG1 (h / hard-02
                  :ARG1 (e / enumerate-01
                        :ARG1 (s2 / server
                              :ARG0-of (s3 / send-01
                                    :ARG1 (m / mail)
                                    :prep-on-behalf-of (w2 / we))
                              :mod (a2 / all))))))"
my customers never outsourced email campaigns . Everything ran through the SMTP servers I ran .,"# ::snt my customers never outsourced email campaigns . Everything ran through the SMTP servers I ran .
(m / multi-sentence
      :snt1 (o / outsource-01
            :polarity -
            :ARG0 (c / customer
                  :poss (ii / i))
            :ARG1 (c2 / campaign-01
                  :medium (e / email))
            :time (e2 / ever))
      :snt2 (r / run-01
            :ARG1 (e3 / everything)
            :manner (s / server
                  :mod (t / thing
                        :name (n / name
                              :op1 ""SMTP""))
                  :ARG1-of (r2 / run-01
                        :ARG0 (ii2 / i)))))"
Typical scenario is a third-party server that sends notifications to sysadmins . Easy to forget .,"# ::snt Typical scenario is a third-party server that sends notifications to sysadmins . Easy to forget .
(m / multi-sentence
      :snt1 (s / scenario
            :ARG1-of (t / typical-02)
            :domain (s2 / server
                  :mod (t2 / third-party)
                  :ARG0-of (s3 / send-01
                        :ARG1 (n / notification)
                        :ARG2 (p / person
                              :ARG0-of (h / have-org-role-91
                                    :ARG2 (s4 / sysadmins))))))
      :snt2 (e / easy-05
            :ARG1 (f / forget-01)))"
