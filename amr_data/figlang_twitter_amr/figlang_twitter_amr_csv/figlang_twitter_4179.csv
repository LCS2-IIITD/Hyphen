comment,amr
"When tells me to let my mind to do whatever it wants , it's the best seconds of my day . <URL>","# ::snt When tells me to let my mind to do whatever it wants , it's the best seconds of my day . <URL>
(h / have-degree-91
      :ARG1 (s / second
            :part-of (d / day
                  :poss (ii / i)))
      :ARG2 (g / good-02
            :ARG1 s)
      :ARG3 (m / most)
      :time (t / tell-01
            :ARG1 (l / let-01
                  :ARG0 ii
                  :ARG1 (d2 / do-02
                        :ARG0 (m2 / mind
                              :poss ii)
                        :ARG1 (w / whatever
                              :ARG1-of (w2 / want-01
                                    :ARG0 m2))))
            :ARG2 ii))"
"I just wish it was for , seconds or a minute . I think it might be more fruitful somehow .","# ::snt I just wish it was for , seconds or a minute . I think it might be more fruitful somehow .
(m / multi-sentence
      :snt1 (w / wish-01
            :ARG0 (ii / i)
            :ARG1 (o / or
                  :op1 (l / last-01
                        :ARG1 (ii2 / it)
                        :ARG2 (t / temporal-quantity
                              :quant 1
                              :unit (s / second)))
                  :op2 (l2 / last-01
                        :ARG1 ii2
                        :ARG2 (t2 / temporal-quantity
                              :quant 1
                              :unit (m2 / minute))))
            :mod (j / just))
      :snt2 (t3 / think-01
            :ARG0 (ii3 / i)
            :ARG1 (p / possible-01
                  :ARG1 (f / fruitful
                        :manner (s2 / somehow)
                        :ARG2-of (h / have-degree-91
                              :ARG1 ii2
                              :ARG3 (m3 / more))))))"
if you do the minute session you will get more like or seconds of this at the end,"# ::snt if you do the minute session you will get more like or seconds of this at the end
(g / get-01
      :ARG0 (y / you)
      :ARG1 (t / this
            :quant (m / more)
            :duration (o / or
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (s / second)
                        :op2-of o)))
      :time (e / end-01
            :ARG1 (s2 / session
                  :duration (t3 / temporal-quantity
                        :quant 1
                        :unit (m2 / minute)))))"
