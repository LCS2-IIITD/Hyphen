comment,amr
"Experimenting with instead of today While they seem to get a lot less love and noise , the Bounties Network interface and experience is way cleaner and less quirky than Gitcoin <URL>","# ::snt Experimenting with instead of today While they seem to get a lot less love and noise , the Bounties Network interface and experience is way cleaner and less quirky than Gitcoin <URL>
(e / experience-01
      :ARG1-of (ii / instead-of-91
            :ARG2 (e2 / experience-01
                  :time (t / today)))
      :concession (s / seem-01
            :ARG1 (g / get-01
                  :ARG0 (t2 / they)
                  :ARG1 (a / and
                        :op1 (l / love-01)
                        :op2 (n / noise)
                        :ARG1-of (h / have-quant-91
                              :ARG3 (l2 / less
                                    :quant (l3 / lot))))))
      :ARG1-of (m / mean-01
            :ARG2 (a2 / and
                  :op1 (c / clean-04
                        :ARG1 (a3 / and
                              :op1 (ii2 / interface
                                    :mod (c2 / company
                                          :name (n2 / name
                                                :op1 ""Bounties""
                                                :op2 ""Network"")))
                              :op2 (e3 / experience-01
                                    :mod c2))
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 a3
                              :ARG3 (m2 / more
                                    :quant (w / way))
                              :ARG4 (o / organization
                                    :name (n3 / name
                                          :op1 ""Git""
                                          :op2 ""Coan""))))
                  :op2 (q / quirky
                        :ARG2-of (h3 / have-degree-91
                              :ARG1 a3
                              :ARG3 l2)
                        :ARG4 o))))"
is primarily responsible for that UX as are our users who helped us every step of the way,"# ::snt is primarily responsible for that UX as are our users who helped us every step of the way
(r / responsible-01
      :ARG0 (a / and
            :op1 (p / person
                  :ARG0-of (u / use-01
                        :ARG1 (w / we)))
            :op2 (p2 / person
                  :ARG0-of (h / help-01
                        :ARG2 w
                        :time (s / step-01
                              :mod (e / every)
                              :part-of (w2 / way)))))
      :ARG1 (u2 / UX
            :mod (t / that))
      :mod (p3 / primary))"
