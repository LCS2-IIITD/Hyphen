comment,amr
"Thanks Irishgirl , My MC loves : E L E M E N T S <URL>","# ::snt Thanks Irishgirl , My MC loves : E L E M E N T S <URL>
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Irishgirl""))
      :ARG2 (l / love-01
            :ARG0 p
            :ARG0-of (m / MC-00)
            :poss ii))"
Thanks Bettina - our MC loves R A I N,"# ::snt Thanks Bettina - our MC loves R A I N
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Bettina""))
      :ARG0-of (c / cause-01
            :ARG1 (l / love-01
                  :ARG0 p
                  :ARG0-of (m / MC-01)
                  :poss (w / we))
            :ARG1 (s / string-entity
                  :value ""R A I N"")))"
Oh boy . My MC loves S H O O T I N G,"# ::snt Oh boy . My MC loves S H O O T I N G
(m / multi-sentence
      :snt1 (o / oh-boy
            :mode expressive)
      :snt2 (l / love-01
            :ARG0 (p / person
                  :ARG0-of (m2 / MC-00)
                  :poss (ii / i))
            :ARG1 (s / string-entity
                  :value ""SH O-t I N""
                  :mod s)))"
"Thanks HL , my girl loves S W I M M I N G What s your MC s favourite activity ?","# ::snt Thanks HL , my girl loves S W I M M I N G What s your MC s favourite activity ?
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""HL""))
      :ARG2 (l / love-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (g / girl)))
            :ARG1 (a / amr-unknown
                  :ARG1-of (a2 / activity-06
                        :ARG0 (p3 / person
                              :ARG0-of (m / MC-00)))
                  :ARG1-of (f / favor-01
                        :ARG0 p3))))"
"Thanks , Shenae ! ! ! My MC enjoys S E W I N G <URL>","# ::snt Thanks , Shenae ! ! ! My MC enjoys S E W I N G <URL>
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (e / enjoy-01
            :ARG0 (p / person
                  :ARG0-of (m / MC-00)
                  :poss ii)
            :ARG1 (a / and
                  :op1 (s2 / string-entity
                        :value ""S E W I N G"")
                  :op2 (s3 / string-entity
                        :value ""Shenae"")))
      :ARG2 p)"
Thanks for thinking of me ! My MC revolves around N A T U R E <URL>,"# ::snt Thanks for thinking of me ! My MC revolves around N A T U R E <URL>
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :ARG2 (t2 / think-01
                  :ARG0 y
                  :ARG2 (ii2 / i)))
      :snt2 (r / revolve-06
            :ARG1 (m2 / MC
                  :poss (ii3 / i))
            :ARG2 (a / around
                  :op1 (s / string-entity
                        :value ""N""
                        :mod s
                        :value ""U R E""))))"
"Thanks , Emily ! My MC revolves around L O V E","# ::snt Thanks , Emily ! My MC revolves around L O V E
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Emily""))
      :mode expressive
      :ARG0-of (c / cause-01
            :ARG1 (r / revolve-06
                  :ARG1 (t2 / thing
                        :name (n2 / name
                              :op1 ""MC"")
                        :poss ii)
                  :ARG2 (s / string-entity
                        :value ""L O V E""))))"
"Thanks , Rebecca My MC is looking for the T R U T H","# ::snt Thanks , Rebecca My MC is looking for the T R U T H
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Rebecca""
                  :op2 ""My""
                  :op3 ""MC""))
      :ARG2 (l / look-01
            :ARG0 p
            :ARG1 (m / music
                  :name n
                  :op1 ""T R U T H"")))"
