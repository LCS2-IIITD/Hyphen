comment,amr
What part of + = jobs that * aren't leaving * doesn't everyone understand ? was right .,"# ::snt What part of + = jobs that * aren't leaving * doesn't everyone understand ? was right .
(r / right-06
      :ARG2 (u / understand-01
            :polarity -
            :ARG0 (e / everyone)
            :ARG1 (a / amr-unknown
                  :mod (p / part
                        :ARG1-of (e2 / equal-01
                              :ARG2 (j / job
                                    :ARG1-of (l / leave-11
                                          :polarity -)))))))"
Because those were never in jeopardy of leaving NOT leaving regardles of Trump understand ?,"# ::snt Because those were never in jeopardy of leaving NOT leaving regardles of Trump understand ?
(c / cause-01
      :ARG0 (j / jeopardize-01
            :polarity -
            :ARG1 (p / person
                  :mod (t / that))
            :time (e / ever)
            :topic (l / leave-12
                  :ARG0 p
                  :ARG1 (l2 / leave-12
                        :polarity -
                        :ARG0 p
                        :ARG1 (t2 / thing
                              :ARG1-of (u / understand-01
                                    :ARG0 (p2 / person
                                          :name (n / name
                                                :op1 ""Trump""))))))
            :polarity (a / amr-unknown)))"
"He didn't say they were . He took credit for not leaving now , & then said total , which is true","# ::snt He didn't say they were . He took credit for not leaving now , & then said total , which is true
(m / multi-sentence
      :snt1 (s / say-01
            :polarity -
            :ARG0 (h / he)
            :ARG1 (t / they))
      :snt2 (a / and
            :op1 (t2 / take-01
                  :ARG0 (h2 / he)
                  :ARG1 (c / credit-01
                        :ARG1 h2
                        :ARG2 (l / leave-11
                              :polarity -
                              :ARG0 h2
                              :time (n / now))))
            :op2 (s2 / say-01
                  :ARG0 h2
                  :ARG1 (t3 / total)
                  :time (t4 / then)
                  :ARG1-of (t5 / true-01))))"
