comment,amr
Windows salesman came & told us that he doesn't like deal w / engineers because they r technical & ask many Qs <URL>,"# ::snt Windows salesman came & told us that he doesn't like deal w / engineers because they r technical & ask many Qs <URL>
(a / and
      :op1 (c / come-01
            :ARG1 (p / person
                  :ARG0-of (s / sell-01
                        :ARG1 (p2 / product
                              :name (n / name
                                    :op1 ""Windows"")))))
      :op2 (t / tell-01
            :ARG0 p
            :ARG1 (d / dislike-01
                  :ARG0 p
                  :ARG1 (d2 / deal-01
                        :ARG0 p
                        :ARG1 (p3 / person
                              :ARG0-of (e / engineer-01)))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (a2 / and
                              :op1 (t2 / technical
                                    :domain p)
                              :op2 (a3 / ask-01
                                    :ARG0 p
                                    :ARG1 (t3 / thing
                                          :ARG1-of (q / question-01)
                                          :quant (m / many))))))
            :ARG2 (w / we)))"
Expecting people selling a product to know about that product ... seriously he'd lose the sale with me just for admitting that .,"# ::snt Expecting people selling a product to know about that product ... seriously he'd lose the sale with me just for admitting that .
(m / multi-sentence
      :snt1 (e / expect-01
            :ARG0 (ii / i)
            :ARG1 (k / know-01
                  :ARG0 (p / person
                        :ARG0-of (s / sell-01
                              :ARG1 (p2 / product)))
                  :ARG1 (p3 / product
                        :mod (t / that))))
      :snt2 (l / lose-03
            :ARG0 (h / he)
            :ARG1 (s2 / sell-01
                  :ARG0 h
                  :ARG2 (ii2 / i))
            :ARG1-of (s3 / serious-01)
            :ARG1-of (c / cause-01
                  :ARG0 (a / admit-01
                        :ARG0 h
                        :ARG1 (t2 / that)
                        :mod (j / just)))))"
