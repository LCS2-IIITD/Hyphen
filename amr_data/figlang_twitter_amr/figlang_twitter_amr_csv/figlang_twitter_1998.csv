comment,amr
"We want brexit , we want parliamentary power . We got brexit , we want May to ignore Parliament . Hmmmmmm .","# ::snt We want brexit , we want parliamentary power . We got brexit , we want May to ignore Parliament . Hmmmmmm .
(m / multi-sentence
      :snt1 (w / want-01
            :ARG0 (w2 / we)
            :ARG1 (a / and
                  :op1 (b / brexit)
                  :op2 (w3 / want-01
                        :ARG0 w2
                        :ARG1 (p / power
                              :mod (g / government-organization
                                    :name (n / name
                                          :op1 ""Parliament"")))))
            :snt2 (g2 / get-01
                  :ARG0 (w4 / we)
                  :ARG1 b))
      :snt3 (w5 / want-01
            :ARG0 (w6 / we)
            :ARG1 (ii / ignore-01
                  :ARG0 (p2 / person
                        :name (n2 / name
                              :op1 ""May""))
                  :ARG1 g))
      :snt4 (h / hmm
            :mode expressive))"
Parliament GAVE the decision to the British People . <URL>,"# ::snt Parliament GAVE the decision to the British People . <URL>
(g / give-01
      :ARG0 (p / parliament)
      :ARG1 (t / thing
            :ARG1-of (d / decide-01))
      :ARG2 (p2 / people
            :mod (c / country
                  :name (n / name
                        :op1 ""Britain""))))"
"that wasn't what parliament said , and you know it .","# ::snt that wasn't what parliament said , and you know it .
(a / and
      :op1 (s / say-01
            :polarity -
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""Parliament""))
            :ARG1 (t / thing
                  :domain (t2 / that)))
      :op2 (k / know-01
            :ARG0 (y / you)
            :ARG1 t))"
nd reading of Ref bill where It was made EXTREMELY clear who's decision this was . Read FULL <URL>,"# ::snt nd reading of Ref bill where It was made EXTREMELY clear who's decision this was . Read FULL <URL>
(m / multi-sentence
      :snt1 (r / read-01
            :ARG1 (b / bill
                  :name (n / name
                        :op1 ""Ref""))
            :time-of (m2 / make-02
                  :ARG1 (c / clear-06
                        :ARG1 (d / decide-01
                              :ARG0 (a / amr-unknown)
                              :ARG1 (t / this))
                        :degree (e / extreme)))
            :ord (o / ordinal-entity
                  :value 2))
      :snt2 r
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (u / url-entity))"
could you highlight the stated agreement by all concerned showing agreement ?,"# ::snt could you highlight the stated agreement by all concerned showing agreement ?
(p / possible-01
      :polarity (a / amr-unknown)
      :ARG1 (h / highlight-01
            :ARG0 (y / you)
            :ARG1 (a2 / agree-01
                  :ARG1-of (s / state-01))
            :manner (s2 / show-01
                  :ARG0 (a3 / all
                        :ARG1-of (c / concern-02))
                  :ARG1 (a4 / agree-01))))"
"Bill was commended to house & passed by a maj of -1 In Parliament , Read FULL , Quote for People NOT Parliament decide .","# ::snt Bill was commended to house & passed by a maj of -1 In Parliament , Read FULL , Quote for People NOT Parliament decide .
(m / multi-sentence
      :snt1 (a / and
            :op1 (c / commend-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Bill""))
                  :ARG2 (g / government-organization
                        :name (n2 / name
                              :op1 ""House"")))
            :op2 (p2 / pass-01
                  :ARG1 p
                  :ARG2 (g2 / government-organization
                        :name (n3 / name
                              :op1 ""Parliament""))
                  :manner (r / ratio-of
                        :op1 1
                        :op2 1)))
      :snt2 (r2 / read-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (q / quote-01
                  :ARG3 (p3 / person)
                  :ARG1-of (f / full-09)))
      :snt3 (d / decide-01
            :polarity -
            :ARG0 (g3 / government-organization
                  :name (n4 / name
                        :op1 ""Parliament""))))"
"You need to learn Law & the Constitution Lawyers for Britain , Ref Is Binding <URL>","# ::snt You need to learn Law & the Constitution Lawyers for Britain , Ref Is Binding <URL>
(s / say-01
      :ARG1 (n / need-01
            :ARG0 (y / you)
            :ARG1 (l / learn-01
                  :ARG0 y
                  :ARG1 (a / and
                        :op1 (l2 / law)
                        :op2 l2
                        :name (n2 / name
                              :op1 ""Constitution""))
                  :beneficiary (p / person
                        :ARG0-of (h / have-org-role-91
                              :ARG3 (l3 / lawyer))
                        :mod (c / country
                              :name (n3 / name
                                    :op1 ""Britain"")))))
      :ARG2 y)"
"Now , you need to behave and not be so patronising . I expect you have already criticised courts / judges . Y / N ?","# ::snt Now , you need to behave and not be so patronising . I expect you have already criticised courts / judges . Y / N ?
(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (y / you)
            :ARG1 (a / and
                  :op1 (b / behave-01
                        :ARG0 y)
                  :op2 (p / patronize-01
                        :polarity -
                        :ARG0 y
                        :degree (s / so)))
            :time (n2 / now))
      :snt2 (e / expect-01
            :ARG0 (ii / i)
            :ARG1 (c / criticize-01
                  :ARG0 (y2 / you)
                  :ARG1 (s2 / slash
                        :op1 (c2 / court)
                        :op2 (p2 / person
                              :ARG0-of (j / judge-01)))
                  :time (a2 / already))
            :polarity (a3 / amr-unknown))
      :snt3 (a4 / amr-choice
            :op1 (y3 / y)
            :op2 y3))"
"am afraid the ref is not binding , DC didn't set it up this way . Also EU is only one part of Europe .","# ::snt am afraid the ref is not binding , DC didn't set it up this way . Also EU is only one part of Europe .
(m / multi-sentence
      :snt1 (a / and
            :op1 (f / fear-01
                  :ARG0 (ii / i)
                  :ARG1 (b / binding-07
                        :polarity -
                        :ARG0 (r / ref)))
            :op2 (s / set-up-03
                  :polarity -
                  :ARG0 (c / city
                        :name (n / name
                              :op1 ""DC""))
                  :ARG1 (ii2 / it)
                  :manner (w / way
                        :mod (t / this))))
      :snt2 (h / have-part-91
            :ARG1 (c2 / continent
                  :name (n2 / name
                        :op1 ""Europe""))
            :ARG2 (o / organization
                  :name (n3 / name
                        :op1 ""EU""))
            :quant (o2 / one
                  :mod (o3 / only))
            :mod (a2 / also)))"
Endorsing the point that ref not binding . Take it as ye wish,"# ::snt Endorsing the point that ref not binding . Take it as ye wish
(m / multi-sentence
      :snt1 (e / endors-01
            :ARG1 (p / point-04
                  :ARG0-of (b / bind-01
                        :polarity -)))
      :snt2 (t / take-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / it)
            :manner (w / wish-01
                  :ARG0 y)))"
"No Government has EVER Ignored a Ref result & NEVER would , It would be political suicide .","# ::snt No Government has EVER Ignored a Ref result & NEVER would , It would be political suicide .
(a / and
      :op1 (ii / ignore-01
            :polarity -
            :ARG0 (g / government-organization
                  :ARG0-of (g2 / govern-01))
            :ARG1 (t / thing
                  :ARG2-of (r / result-01
                        :ARG1 (r2 / referendum)))
            :time (e / ever))
      :op2 (ii2 / ignore-01
            :polarity -
            :ARG0 g
            :ARG1 t
            :time (e2 / ever))
      :domain (s / suicide
            :mod (p / politics)
            :domain (ii3 / it)))"
"BREXIT things wrong : ref advisory , no plan for a brexit vote , EU is only part of structure /","# ::snt BREXIT things wrong : ref advisory , no plan for a brexit vote , EU is only part of structure /
(w / wrong-04
      :ARG1 (t / thing
            :mod (b / break-through-22))
      :ARG2 (a / and
            :op1 (a2 / advise-01
                  :mod (r / ref))
            :op2 (p / plan-01
                  :polarity -
                  :ARG1 (v / vote-01
                        :mod (b2 / brexit)))
            :op3 (h / have-part-91
                  :ARG1 (s / structure)
                  :ARG2 (o / organization
                        :name (n / name
                              :op1 ""EU""))
                  :mod (o2 / only))))"
", Ref was Binding , blame Cons no plan ( arrogant enough think they would win ) UK Is leaving EU","# ::snt , Ref was Binding , blame Cons no plan ( arrogant enough think they would win ) UK Is leaving EU
(m / multi-sentence
      :snt1 (a / and
            :op1 (b / bind-01
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""Ref"")))
            :op2 (b2 / blame-01
                  :ARG1 (p / person
                        :mod (c / conservative)))
            :op3 (p2 / plan-01
                  :polarity -
                  :ARG1 (t2 / thing))
            :op4 (t3 / think-01
                  :ARG1 (w / win-01
                        :ARG0 p)
                  :ARG1-of (h / have-degree-91
                        :ARG2 (a2 / arrogant)
                        :ARG3 (e / enough)
                        :ARG6 t3
                        :ARG1 w)))
      :snt2 (l / leave-11
            :ARG0 (c2 / country
                  :name (n2 / name
                        :op1 ""UK""))
            :ARG1 (o / organization
                  :name (n3 / name
                        :op1 ""EU""))))"
u can say it as often as you like the ref is not legally binding . I agree UK needs to leave EU . UKIP /,"# ::snt u can say it as often as you like the ref is not legally binding . I agree UK needs to leave EU . UKIP /
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / say-01
                  :ARG0 (y / you)
                  :ARG1 (b / binding-07
                        :polarity -
                        :ARG0 (r / ref)
                        :manner (l / law))
                  :frequency (o / often
                        :ARG2-of (h / have-degree-91
                              :ARG1 s
                              :ARG3 (e / equal)
                              :ARG4 (l2 / like-02
                                    :ARG0 y)))))
      :snt2 (a / agree-01
            :ARG0 (ii / i)
            :ARG1 (n / need-01
                  :ARG0 (c / country
                        :name (n2 / name
                              :op1 ""UK""))
                  :ARG1 (l3 / leave-11
                        :ARG0 c
                        :ARG1 (o2 / organization
                              :name (n3 / name
                                    :op1 ""EU"")))))
      :snt3 (p2 / political-party
            :name (n4 / name
                  :op1 ""UKIP"")))"
Ref Is constitutionally binding & will be Implemented of that there Is no doubt <URL>,"# ::snt Ref Is constitutionally binding & will be Implemented of that there Is no doubt <URL>
(d / doubt-01
      :polarity -
      :ARG1 (a / and
            :op1 (b / binding-07
                  :ARG0 (c / constitution)
                  :ARG1 (r / referendum))
            :op2 (j / justify-01
                  :ARG0 c
                  :ARG1 b)))"
Disagree . but think it will be implemented . Gina will make sure the law is upheld and parliament have the vote,"# ::snt Disagree . but think it will be implemented . Gina will make sure the law is upheld and parliament have the vote
(m / multi-sentence
      :snt1 (a / agree-01
            :polarity -
            :ARG0 (ii / i))
      :snt2 (t / think-01
            :ARG0 (ii2 / i)
            :ARG1 (ii3 / implement-01
                  :ARG1 (ii4 / it)))
      :snt3 (e / ensure-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Gina""))
            :ARG1 (a2 / and
                  :op1 (u / uphold-01
                        :ARG1 (l / law))
                  :op2 (h / have-03
                        :ARG0 (p2 / parliament)
                        :ARG1 (v / vote-01
                              :ARG0 p2)))))"
"Parliament will not get a vote on deal , all that will happen Is a bill will be passed to Invoke art","# ::snt Parliament will not get a vote on deal , all that will happen Is a bill will be passed to Invoke art
(c / contrast-01
      :ARG1 (g / get-01
            :polarity -
            :ARG0 (g2 / government-organization
                  :name (n / name
                        :op1 ""Parliament""))
            :ARG1 (v / vote-01
                  :ARG0 g2
                  :ARG1 (d / deal-01)))
      :ARG2 (p / pass-01
            :ARG1 (b / bill)
            :purpose (ii / invoke-01
                  :ARG1 (a / art))
            :mod (a2 / all)))"
"yes , what an amazing step having fought for parliamentary sovereignty .","# ::snt yes , what an amazing step having fought for parliamentary sovereignty .
(s / step-01
      :mod (a / amazing
            :degree (s2 / so))
      :ARG1-of (f / fight-01
            :ARG2 (s3 / sovereignty
                  :mod (g / government-organization
                        :name (n / name
                              :op1 ""Parliament"")))))"
