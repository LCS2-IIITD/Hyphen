comment,amr
Companies should give us opportunities to establish ourselves in our careers .,"# ::snt Companies should give us opportunities to establish ourselves in our careers .
(r / recommend-01
      :ARG1 (g / give-01
            :ARG0 (c / company)
            :ARG1 (o / opportunity
                  :purpose (e / establish-01
                        :ARG0 (w / we)
                        :ARG1 w
                        :ARG2 (c2 / career
                              :poss w)))
            :ARG2 w))"
"ja , because these year , years of experience requirements aren't working for us but against us","# ::snt ja , because these year , years of experience requirements aren't working for us but against us
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (c / contrast-01
            :ARG1 (w / work-09
                  :polarity -
                  :ARG1 (r / require-01
                        :ARG1 (e / experience-01)
                        :duration (m / multiple
                              :op1 (t / temporal-quantity
                                    :quant 1
                                    :unit (y / year))))
                  :ARG2 (w2 / we))
            :ARG2 (w3 / work-09
                  :ARG1 r
                  :ARG2 w2)
            :time y
            :mod (t2 / this))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""ja"")))"
Trump can run for president with no political experience but I need a masters and years experience for an entry level job .,"# ::snt Trump can run for president with no political experience but I need a masters and years experience for an entry level job .
(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (r / run-02
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Trump""))
                  :ARG1 (p3 / president)
                  :manner (e / experience-01
                        :polarity -
                        :ARG0 p2
                        :ARG1 (p4 / politics))))
      :ARG2 (n2 / need-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (m / master)
                  :op2 (m2 / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (y / year)))
                  :purpose (j / job
                        :mod (l / level
                              :mod (e2 / entry))))))"
