comment,amr
"Just a quick question : If I got these made into small stickers to put around the place , who would buy some ? <URL>","# ::snt Just a quick question : If I got these made into small stickers to put around the place , who would buy some ? <URL>
(q / question-01
      :ARG1 (b / buy-01
            :ARG0 (a / amr-unknown)
            :ARG1 (s / some)
            :condition (g / get-04
                  :ARG0 (ii / i)
                  :ARG1 (m / make-01
                        :ARG1 (t / this)
                        :ARG2 (t2 / thing
                              :ARG1-of (s2 / stick-01)
                              :mod (s3 / small))
                        :purpose (p / put-01
                              :ARG0 ii
                              :ARG1 t
                              :ARG2 (a2 / around
                                    :op1 (p2 / place))))))
      :ARG1-of (q2 / quick-02)
      :mod (j / just))"
Just the thing to encourage visitors to stay away you prat .,"# ::snt Just the thing to encourage visitors to stay away you prat .
(s / say-01
      :ARG1 (t / thing
            :mod (j / just)
            :purpose (e / encourage-01
                  :ARG1 (p / person
                        :ARG0-of (v / visit-01))
                  :ARG2 (s2 / stay-01
                        :ARG1 p
                        :ARG3 (a / away))))
      :ARG2 (y / you
            :mod (p2 / prat)))"
"Enter a pub in N , Wales and they immediately start speaking Welsh nothing like feeling welcome , and that's nothing like feeling welcome , you reap what you sow .","# ::snt Enter a pub in N , Wales and they immediately start speaking Welsh nothing like feeling welcome , and that's nothing like feeling welcome , you reap what you sow .
(a / and
      :op1 (a2 / and
            :op1 (e / enter-01
                  :ARG0 (y / you)
                  :ARG1 (p / pub
                        :location (c / country
                              :name (n / name
                                    :op1 ""N"")
                              :part-of c
                              :name (n2 / name
                                    :op1 ""Wales"")))))
      :op2 (s / start-01
            :ARG0 p
            :ARG1 (s2 / speak-01
                  :ARG0 p
                  :ARG3 (l / language
                        :name (n3 / name
                              :op1 ""Wales"")))
            :time (ii / immediate))
      :op2 (a3 / and
            :op1 (r / resemble-01
                  :polarity -
                  :ARG1 (f / feel-01
                        :ARG1 (w / welcome-01)
                        :ARG2-of r))
            :op2 (r2 / resemble-01
                  :polarity -
                  :ARG1 f
                  :ARG2 (r3 / reap-01
                        :ARG0 y
                        :ARG1 (t / thing
                              :ARG1-of (s3 / sow-01
                                    :ARG0 y))))))"
