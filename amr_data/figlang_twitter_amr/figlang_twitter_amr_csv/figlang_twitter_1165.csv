comment,amr
"I despise grammar pedantry . If your response to one of my Tweets is nothing more than a flame over a spelling / autocorrect / predictive typing or grammar error , there is a non-zero chance I will block you . The magnitude of that chance depends on how much you annoy me otherwise .","# ::snt I despise grammar pedantry . If your response to one of my Tweets is nothing more than a flame over a spelling / autocorrect / predictive typing or grammar error , there is a non-zero chance I will block you . The magnitude of that chance depends on how much you annoy me otherwise .
(m / multi-sentence
      :snt1 (d / despise-01
            :ARG0 (ii / i)
            :ARG1 (p / pedantry
                  :mod (g / grammar)))
      :snt2 (c / chance-02
            :ARG1 (b / block-01
                  :ARG0 (ii2 / i)
                  :ARG1 (y / you))
            :ARG2 (z / zero)
            :condition (r / respond-01
                  :ARG0 y
                  :ARG1 (t / thing
                        :quant 1
                        :ARG1-of (ii3 / include-91
                              :ARG2 (t2 / thing
                                    :ARG1-of (t3 / Tweet-01
                                          :ARG0 ii2))))
                  :ARG2 (f / flame
                        :location (o / or
                              :op1 (s / spell-01)
                              :op2 (a / autocorrect)
                              :op3 (t4 / type-01
                                    :ARG1-of (p2 / predict-01))
                              :op4 (e / err-01
                                    :mod (g2 / grammar)))
                        :mod (m2 / more-than
                              :polarity -)))
            :snt3 (d2 / depend-01
                  :ARG0 (t5 / thing
                        :degree-of (a2 / annoy-01
                              :ARG0 (y2 / you)
                              :ARG1 ii2
                              :condition (h / have-polarity-91
                                    :ARG2 -)))
                  :ARG1 (m3 / magnitude
                        :degree-of (c2 / chance-02
                              :ARG1 b)))))"
"I don't get it . I posted an ironic reply with a dumb ' mis-correction ' of ' they're ' . Then I wrote : Now let's see .. should there be a comma before that terminal adverbial ' otherwise ' modifier clause ? Kids , just say no to arbitrary prescriptive grammar / syntax rules !","# ::snt I don't get it . I posted an ironic reply with a dumb ' mis-correction ' of ' they're ' . Then I wrote : Now let's see .. should there be a comma before that terminal adverbial ' otherwise ' modifier clause ? Kids , just say no to arbitrary prescriptive grammar / syntax rules !
(m / multi-sentence
      :snt1 (g / get-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (ii2 / it))
      :snt2 (p / post-01
            :ARG0 (ii3 / i)
            :ARG1 (r / reply-01
                  :ARG2 (c / correct-01
                        :ARG1 (t / they)
                        :ARG1-of (m2 / mismanage-01)
                        :mod (d / dumb)))
            :mod (ii4 / ironic))
      :snt3 (w / write-01
            :ARG0 (ii5 / i)
            :time (t2 / then)
            :snt4 (s / see-01
                  :mode imperative
                  :ARG0 (w2 / we)
                  :ARG1 (t3 / truth-value
                        :polarity-of (r2 / recommend-01
                              :ARG1 (c2 / comma
                                    :location (b / before
                                          :op1 (c3 / clause
                                                :ARG1-of (m3 / modify-01)
                                                :mod (t4 / terminal)
                                                :mod (a / adverbial
                                                      :condition (h / have-polarity-91
                                                            :ARG2 -))))))))
            :snt5 (s2 / say-01
                  :mode imperative
                  :ARG0 (k / kid)
                  :ARG1 (n / no)
                  :ARG2 (r3 / rule-01
                        :ARG1 (s3 / slash
                              :op1 (g2 / grammar)
                              :op2 (s4 / syntax)
                              :ARG1-of (a2 / arbitrary-02))
                        :ARG1-of a2))
            :mod (j / just)))"
