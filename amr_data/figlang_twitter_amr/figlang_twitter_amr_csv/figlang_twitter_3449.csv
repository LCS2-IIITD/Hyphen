comment,amr
""" I don't like the thing you do for free , for yourself . If you did the thing for free more like I like , then I would take that free content . As it is , I will not use this free content . "" O ... K ?","# ::snt "" I don't like the thing you do for free , for yourself . If you did the thing for free more like I like , then I would take that free content . As it is , I will not use this free content . "" O ... K ?
(m / multi-sentence
      :snt1 (d / dislike-01
            :ARG0 (ii / i)
            :ARG1 (d2 / do-02
                  :ARG0 (y / you)
                  :ARG1 (t / thing
                        :ARG1-of (f / free-03))
                  :beneficiary y))
      :snt2 (t2 / take-01
            :ARG0 (ii2 / i)
            :ARG1 (c / content
                  :ARG1-of (f2 / free-03)
                  :mod (t3 / that))
            :condition (d3 / do-02
                  :ARG0 (y2 / you
                        :ARG1 (t4 / thing
                              :ARG1-of (f3 / free-03))
                        :ARG1-of (h / have-quant-91
                              :ARG3 (m2 / more)
                              :ARG4 (l / like-01
                                    :ARG0 ii2))))
            :snt3 (u / use-01
                  :polarity -
                  :ARG0 (ii3 / i)
                  :ARG1 (c2 / content
                        :ARG1-of (f4 / free-03)
                        :mod (t5 / this))
                  :ARG1-of (c3 / cause-01
                        :ARG0 (ii4 / it)))
            :snt4 (p / person
                  :name (n / name
                        :op1 ""O...K"")
                  :polarity (a / amr-unknown))))"
In case you have been living in a cave for the past decade and have never seen this mermaid before ? <URL>,"# ::snt In case you have been living in a cave for the past decade and have never seen this mermaid before ? <URL>
(c / case-04
      :polarity (a / amr-unknown)
      :ARG1 (a2 / and
            :op1 (l / live-01
                  :ARG0 (y / you)
                  :location (c2 / cave)
                  :time (b / before
                        :op1 (n / now)
                        :duration (t / temporal-quantity
                              :quant 1
                              :unit (d / decade))))
            :op2 (s / see-01
                  :polarity -
                  :ARG0 y
                  :ARG1 (m / mermaid
                        :mod (t2 / this))
                  :time b)))"
