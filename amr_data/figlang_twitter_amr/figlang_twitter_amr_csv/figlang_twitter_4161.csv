comment,amr
"Good Morning , Ursula . All Friends have a Beautiful Sunday <URL>","# ::snt Good Morning , Ursula . All Friends have a Beautiful Sunday <URL>
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (m2 / morning
                  :ARG1-of (g / good-02))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Ursula"")))
      :snt2 (h / have-03
            :ARG0 (b / broadcast-program
                  :name n
                  :op1 ""All""
                  :op2 ""Friends""))
      :ARG1 (f / festival
            :name n
            :op1 ""A""
            :op2 ""Beautiful""
            :op3 ""Sunday""))"
"Thank you lovely , beautiful gif wishing you a relaxing , fabulous Sunday <URL>","# ::snt Thank you lovely , beautiful gif wishing you a relaxing , fabulous Sunday <URL>
(t / thank-01
      :ARG0 (ii / i)
      :ARG1 (y / you)
      :ARG2 (g / gift
            :mod (l / lovely)
            :ARG1-of (b / beautiful-02)
            :ARG0-of (w / wish-01
                  :ARG1 (w2 / weekend
                        :ARG0-of (r / relax-01)
                        :mod (f / fabulous))
                  :ARG2 y)))"
"to in your direction my dearest , . Coffee in Paris is on my bucket list . As long as you have a Dream , you're doing well . <URL>","# ::snt to in your direction my dearest , . Coffee in Paris is on my bucket list . As long as you have a Dream , you're doing well . <URL>
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (d / direction
                  :poss (d2 / dear
                        :poss (y / you)))
            :ARG2 (d3 / dearest)
            :snt2 (l / list-01
                  :ARG0 (ii2 / i)
                  :ARG1 (c / coffee
                        :location (c2 / city
                              :name (n / name
                                    :op1 ""Paris"")))
                  :ARG2 (b / bucket))
            :snt3 (d4 / do-02
                  :ARG0 (y2 / you)
                  :ARG1 (w / well-09)
                  :condition (a / as-long-as
                        :op1 (h / have-03
                              :ARG0 y2
                              :ARG1 (d5 / dream-01
                                    :ARG0 y2))))))"
"Thank you , Cynthia . May All Your Dreams come True <URL>","# ::snt Thank you , Cynthia . May All Your Dreams come True <URL>
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (t / thank-01
                  :ARG0 ii
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Cynthia"")))
            :ARG2 p)
      :snt2 (w / wish-01
            :ARG0 ii
            :ARG1 (c / come-04
                  :ARG1 (d / dream-01
                        :ARG0 p
                        :mod (a / all))
                  :ARG2 (t2 / true-01
                        :ARG1 d))))"
