comment,amr
"Future generations will ask "" where were you ? How did you vote ? "" They'll recall what we lost , the hardships to follow with anger .","# ::snt Future generations will ask "" where were you ? How did you vote ? "" They'll recall what we lost , the hardships to follow with anger .
(m / multi-sentence
      :snt1 (a / ask-01
            :ARG0 (g / generation
                  :time (f / future))
            :ARG1 (a2 / and
                  :op1 (b / be-located-at-91
                        :ARG1 (y / you)
                        :ARG2 (a3 / amr-unknown))
                  :op2 (v / vote-01
                        :ARG0 (y2 / you)
                        :manner (a4 / amr-unknown))))
      :snt2 (r / recall-02
            :ARG0 (t / they)
            :ARG1 (a5 / and
                  :op1 (t2 / thing
                        :ARG1-of (l / lose-02
                              :ARG0 (w / we)))
                  :op2 (h / hardship
                        :ARG1-of (f2 / follow-01
                              :manner (a6 / anger-01))))))"
"oh give over , what we've lost ? , take a good luck at the EU it's a joke","# ::snt oh give over , what we've lost ? , take a good luck at the EU it's a joke
(m / multi-sentence
      :snt1 (g / give-over-12
            :mode imperative
            :ARG0 (y / you)
            :mod (o / oh))
      :snt2 (l / lose-02
            :ARG0 (w / we)
            :ARG1 (a / amr-unknown))
      :snt3 (t / take-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (l2 / luck
                  :ARG1-of (g2 / good-02))
            :ARG2 (o2 / organization
                  :name (n / name
                        :op1 ""EU""))
            :ARG1-of (j / joke-01)))"
"Take a good look at Manchester & Salford - reaped rich EU benefits , and continuing until","# ::snt Take a good look at Manchester & Salford - reaped rich EU benefits , and continuing until
(l / look-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (c / city
                  :name (n / name
                        :op1 ""Manchester""))
            :op2 (c2 / city
                  :name (n2 / name
                        :op1 ""Salford""))
            :ARG0-of (r / reap-01
                  :ARG1 (b / benefit
                        :mod (o / organization
                              :name (n3 / name
                                    :op1 ""EU""))
                        :mod (r2 / rich)))
            :ARG1-of (c3 / continue-01
                  :time (u / until
                        :op1 l)))
      :ARG1-of (g / good-02))"
okay you do know ' EU Funding ' is our own money to begin with . In Manchester every we pay in we get back,"# ::snt okay you do know ' EU Funding ' is our own money to begin with . In Manchester every we pay in we get back
(m / multi-sentence
      :snt1 (o / okay-04
            :ARG1 (k / know-01
                  :ARG0 (y / you)
                  :ARG1 (m2 / money
                        :poss (w / we)
                        :domain (f / fund-01
                              :ARG0 (o2 / organization
                                    :name (n / name
                                          :op1 ""EU"")))
                        :ARG2-of (b / begin-01))))
      :snt2 (g / get-back-09
            :ARG0 (w2 / we)
            :ARG1 (w3 / we)
            :location (c / city
                  :name (n2 / name
                        :op1 ""Manchester""))
            :frequency (r / rate-entity-91
                  :ARG3 (p / pay-01
                        :ARG0 w3))))"
and how much investment do you think you'll recoup from Westminster post ?,"# ::snt and how much investment do you think you'll recoup from Westminster post ?
(a / and
      :op2 (r / recoup-01
            :ARG0 (y / you)
            :ARG1 (m / monetary-quantity
                  :ARG1-of (ii / invest-01)
                  :source (p / post
                        :mod (g / government-organization
                              :name (n / name
                                    :op1 ""Westminster""))))
            :ARG3 (a2 / amr-unknown)
            :ARG1-of (t / think-01
                  :ARG0 y)))"
"well the good thing about that is we can vote and elect governments or vote them out if not happy , can't do that with eu","# ::snt well the good thing about that is we can vote and elect governments or vote them out if not happy , can't do that with eu
(a / and
      :op1 (p / possible-01
            :ARG1 (a2 / and
                  :op1 (v / vote-01
                        :ARG0 (w / we)
                        :ARG1 (g / government-organization
                              :ARG0-of (g2 / govern-01)))
                  :op2 (e / elect-01
                        :ARG0 w
                        :ARG1 g)
                  :condition (h / happy-01
                        :polarity -
                        :ARG1 g)))
      :op2 (p2 / possible-01
            :polarity -
            :ARG1 (a3 / and
                  :op1 (v2 / vote-01
                        :ARG0 w
                        :ARG1 g)
                  :op2 (v3 / vote-down-03
                        :ARG0 w
                        :ARG1 g))
            :condition h
            :polarity -
            :ARG0 (e2 / electronics)
            :ARG1 w)
      :topic (t / that)
      :ARG1-of (g3 / good-02))"
