comment,amr
""" Same number of immigrants will be coming to the country "" after Brexit , says Lord Mandelson <URL>","# ::snt "" Same number of immigrants will be coming to the country "" after Brexit , says Lord Mandelson <URL>
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Lord""
                  :op2 ""Mandelson""))
      :ARG1 (c / come-01
            :ARG1 (p2 / person
                  :ARG0-of (ii / immigrate-01)
                  :quant (n2 / number
                        :ARG1-of (s2 / same-01)))
            :ARG4 (c2 / country)
            :time (a / after
                  :op1 (e / event
                        :name (n3 / name
                              :op1 ""Brexit"")))))"
"Someone in government , the public never voted for , lies about immigration in support of the EU . Time for the end of the Lords .","# ::snt Someone in government , the public never voted for , lies about immigration in support of the EU . Time for the end of the Lords .
(m / multi-sentence
      :snt1 (l / lie-08
            :ARG0 (s / someone
                  :ARG1-of (v / vote-01
                        :polarity -
                        :ARG0 (p / public)
                        :time (e / ever))
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (g / government-organization
                              :ARG0-of (g2 / govern-01))))
            :ARG3 (ii / immigrate-01)
            :purpose (s2 / support-01
                  :ARG0 s
                  :ARG1 (o / organization
                        :name (n / name
                              :op1 ""EU""))))
      :snt2 (t / time
            :time-of (e2 / end-01
                  :ARG1 g
                  :name (n2 / name
                        :op1 ""Lords""))))"
check official immigration figures on the office of national statistics site . They support mandelsons argument .,"# ::snt check official immigration figures on the office of national statistics site . They support mandelsons argument .
(m / multi-sentence
      :snt1 (c / check-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (f / figure
                  :topic (ii / immigrate-01)
                  :mod (o / official))
            :location (s / site
                  :mod (s2 / statistics
                        :mod (n / nation))
                  :poss (o2 / office)))
      :snt2 (s3 / support-01
            :ARG0 (t / they)
            :ARG1 (a / argue-01
                  :ARG0 (p / person
                        :name (n2 / name
                              :op1 ""Marcos"")))))"
"No they don't . The unelected Lord , in the pay of the EU , was disregarding a large percentage , to create a falsehood .","# ::snt No they don't . The unelected Lord , in the pay of the EU , was disregarding a large percentage , to create a falsehood .
(m / multi-sentence
      :snt1 (d / do-02
            :polarity -
            :ARG0 (t / they)
            :mod (n / no))
      :snt2 (d2 / disregard-01
            :ARG0 (p / person
                  :name (n2 / name
                        :op1 ""Lord"")
                  :ARG1-of (e / elect-01
                        :polarity -))
            :ARG1 (p2 / percentage
                  :mod (l / large))
            :purpose (c / create-01
                  :ARG0 p
                  :ARG1 (f / falsehood))
            :ARG1-of (p3 / pay-01
                  :ARG0 (o / organization
                        :name (n3 / name
                              :op1 ""EU"")))))"
prove the Lords are in the pay of the . Prove the Office of national statement publishes false hoods .,"# ::snt prove the Lords are in the pay of the . Prove the Office of national statement publishes false hoods .
(m / multi-sentence
      :snt1 (p / prove-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (p2 / pay-01
                  :ARG0 (g / government-organization
                        :name (n / name
                              :op1 ""Lords""))))
      :snt2 (p3 / prove-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (p4 / publish-01
                  :ARG0 (g2 / government-organization
                        :name (n2 / name
                              :op1 ""Office""
                              :op2 ""of""
                              :op3 ""National""
                              :op4 ""Statement""))
                  :ARG1 (h / hood
                        :mod (f / false)))))"
"I said Mandelson , you know the guy who ignored k EU migrants on Marr yesterday . Google it , common knowledge","# ::snt I said Mandelson , you know the guy who ignored k EU migrants on Marr yesterday . Google it , common knowledge
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (k / know-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Mandelson""))
                  :ARG1 (g / guy
                        :ARG0-of (ii2 / ignore-01
                              :ARG1 (p2 / person
                                    :ARG0-of (m2 / migrate-01)
                                    :mod (o / organization
                                          :name (n2 / name
                                                :op1 ""EU"")))
                              :time (y / yesterday)
                              :location (c / city
                                    :name (n3 / name
                                          :op1 ""Marr""))))))
      :snt2 (g2 / google-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (ii3 / it)
            :ARG1-of k
            :mod (c2 / common)))"
"the immigration figures are known to me . Mandelson was spot on , your the one that's wrong .","# ::snt the immigration figures are known to me . Mandelson was spot on , your the one that's wrong .
(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (ii / i)
            :ARG1 (f / figure
                  :topic (ii2 / immigrate-01)))
      :snt2 (s / spot-on
            :domain (p / person
                  :name (n / name
                        :op1 ""Mandelson"")))
      :snt3 (w / wrong-04
            :ARG1 (y / you)))"
