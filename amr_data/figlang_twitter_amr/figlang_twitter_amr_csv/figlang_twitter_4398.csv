comment,amr
"Gotta build our own stadiums , a few of em , fill em ourselves I want u to feel , shine do more for the people , we'll support the people , build influence / power , change the government and complete the system , so it supports , no more crabs","# ::snt Gotta build our own stadiums , a few of em , fill em ourselves I want u to feel , shine do more for the people , we'll support the people , build influence / power , change the government and complete the system , so it supports , no more crabs
(m / multi-sentence
      :snt1 (o / obligate-01
            :ARG1 (w / we)
            :ARG2 (b / build-01
                  :ARG0 w
                  :ARG1 (s / stadium
                        :poss w
                        :ARG1-of (ii / include-91
                              :ARG2 (s2 / stadium
                                    :poss w)
                              :ARG3 (f / few)))))
      :snt2 (f2 / fill-01
            :ARG0 w
            :ARG1 s
            :ARG2 (t / thing
                  :ARG1-of (f3 / feel-01
                        :ARG0 (y / you)
                        :ARG1-of (w2 / want-01
                              :ARG0 (ii2 / i)))))
      :snt3 (a / and
            :op1 (s3 / shine-01
                  :mode imperative
                  :ARG0 y)
            :beneficiary (p / person)
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)))
      :op2 s3
      :mode imperative
      :ARG0 y
      :beneficiary (p2 / person)
      :op4 (s4 / support-01
            :mode imperative
            :ARG0 (w3 / we)
            :ARG1 (p3 / person))
      :op5 (b2 / build-01
            :mode imperative
            :ARG0 w3
            :ARG1 (s5 / slash
                  :op1 (ii3 / influence-01)
                  :op2 (p4 / power)))
      :op6 (c / change-01
            :mode imperative
            :ARG0 w3
            :ARG1 (g / government-organization
                  :ARG0-of (g2 / govern-01)))
      :op7 (c2 / complete-01
            :mode imperative
            :ARG0 w3
            :ARG1 (s6 / system))
      :ARG0-of (c3 / cause-01
            :ARG1 (s7 / support-01
                  :ARG0 (ii4 / it)
                  :ARG1 (c4 / crab
                        :polarity -
                        :quant (m3 / more)))))"
the and it doesn't No the must always be more then the of increases with more comes more to that power you be an,"# ::snt the and it doesn't No the must always be more then the of increases with more comes more to that power you be an
(m / multi-sentence
      :snt1 (a / and
            :op2 (d / do-02
                  :polarity -
                  :ARG0 (ii / it)))
      :snt2 (o / obligate-01
            :ARG2 (h / have-quant-91
                  :ARG1 (ii2 / increase-01)
                  :ARG3 (m2 / more)
                  :ARG4 (ii3 / increase-01)
                  :time (a2 / always))
            :ARG1-of (c / cause-01
                  :ARG0 (c2 / come-03
                        :ARG1 (m3 / more)
                        :ARG2 (p / power
                              :mod (t / that)
                              :domain (y / you))))))"
"And you will be and given new the must and u will be them they will be u the itself money held us back , it's just a tool , a means to an end or beginning .","# ::snt And you will be and given new the must and u will be them they will be u the itself money held us back , it's just a tool , a means to an end or beginning .
(m / multi-sentence
      :snt1 (a / and
            :op2 (a2 / and
                  :op1 (o / obligate-01
                        :ARG1 (y / you))
                  :op2 (t / they
                        :domain (y2 / you))
                  :ARG1-of (n / new-01)))
      :snt2 (h / hold-back-07
            :ARG0 (m2 / money
                  :poss (ii / it))
            :ARG1 (w / we))
      :snt3 (t2 / tool
            :mod (j / just)
            :domain ii
            :ARG2-of (m3 / mean-01
                  :ARG1 (o2 / or
                        :op1 (e / end-01)
                        :op2 (b / begin-01)))))"
"With more money , more things can be done , they said we don't have enough jobs , so I gave them work , they said we don't have enough money so I gave them u , ur perspective is as a generator use my power to teach , make energy free and life easier , only charge as a means continuance","# ::snt With more money , more things can be done , they said we don't have enough jobs , so I gave them work , they said we don't have enough money so I gave them u , ur perspective is as a generator use my power to teach , make energy free and life easier , only charge as a means continuance
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (d / do-02
                  :ARG1 (t / thing
                        :quant (m2 / more)))
            :ARG1-of (c / cause-01
                  :ARG0 (m3 / money
                        :mod (m4 / more))))
      :snt2 (s / say-01
            :ARG0 (t2 / they)
            :ARG1 (h / have-03
                  :polarity -
                  :ARG0 (w / we)
                  :ARG1 (j / job
                        :ARG1-of (h2 / have-quant-91
                              :ARG3 (e / enough)))
                  :ARG0-of (c2 / cause-01
                        :ARG1 (g / give-01
                              :ARG0 (ii / i)
                              :ARG1 (w2 / work-01
                                    :ARG0 t2))))
            :snt3 (g2 / give-01
                  :ARG0 (ii2 / i)
                  :ARG1 (m5 / money
                        :ARG1-of (h3 / have-quant-91
                              :ARG3 (e2 / enough)))
                  :ARG2 (t3 / they)
                  :ARG0-of (c3 / cause-01
                        :ARG0 ii2
                        :ARG1 (m6 / money
                              :ARG1-of (h4 / have-quant-91
                                    :polarity -
                                    :ARG3 (e3 / enough)))
                        :ARG2 t3)
                  :ARG1-of c3))
      :snt4 (p2 / perspective
            :poss (y / you)
            :domain (a / and
                  :op1 (u / use-01
                        :ARG0 y
                        :ARG1 (p3 / power
                              :poss (ii3 / i)
                              :ARG2 (t4 / teach-01
                                    :ARG0 y))
                        :op2 (m7 / make-02
                              :ARG0 y
                              :ARG1 (a2 / and
                                    :op1 (f / free-04
                                          :ARG1 (e4 / energy))
                                    :op2 (e5 / easy-05
                                          :ARG1 (l / live-01)
                                          :ARG2-of (h5 / have-degree-91
                                                :ARG1 l
                                                :ARG3 (m8 / more)))))
                        :op3 (c4 / charge-01
                              :ARG0 y
                              :mod (o / only)
                              :manner (m9 / means
                                    :ARG1-of (c5 / continue-01)))))))"
"That way and is , they now have , that will to and the needs to so again we have enough people to fill more of the currently set","# ::snt That way and is , they now have , that will to and the needs to so again we have enough people to fill more of the currently set
(a / and
      :op1 (a2 / and
            :op1 (w / way
                  :manner-of (h / have-03
                        :ARG0 (t / they)
                        :time (n / now)))
            :op2 (w2 / way
                  :manner-of (h2 / have-03
                        :ARG0 t
                        :time (n2 / now))))
      :op2 (n3 / need-01
            :ARG1 w)
      :ARG0-of (c / cause-01
            :ARG1 (h3 / have-03
                  :ARG0 (w3 / we)
                  :ARG1 (p / person
                        :ARG1-of (h4 / have-quant-91
                              :ARG3 (e / enough)
                              :ARG6 (f / fill-06
                                    :ARG0 p
                                    :ARG1 (p2 / person
                                          :ARG1-of (ii / include-91
                                                :ARG2 (s / set
                                                      :time (c2 / current))))
                                    :mod (m / more))))
                  :mod (a3 / again))))"
"Get to the side , third countries and refugees , give them , no application needed , just a & finger print with a retna scan and ur phone a personalized system , u keep one ip address , that way ur easy to find . If its stolen or copied","# ::snt Get to the side , third countries and refugees , give them , no application needed , just a & finger print with a retna scan and ur phone a personalized system , u keep one ip address , that way ur easy to find . If its stolen or copied
(m / multi-sentence
      :snt1 (a / and
            :op1 (g / get-05
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 y
                  :ARG2 (s / side
                        :part-of (a2 / and
                              :op1 (c / country
                                    :ord (o / ordinal-entity
                                          :value 3))
                              :op2 (r / refugee))))
            :op2 (g2 / give-01
                  :mode imperative
                  :ARG0 y
                  :ARG1 (a3 / apply-01
                        :polarity -
                        :ARG1-of (n / need-01))
                  :ARG2 a2)
            :op3 (a4 / and
                  :op1 (p / print-01
                        :ARG1 (f / finger))
                  :op2 (s2 / scan-01
                        :mod (r2 / retna))
                  :mod (j / just))
            :op4 (s3 / system
                  :ARG1-of (c2 / customize-01)))
      :snt2 (k / keep-01
            :ARG0 (y2 / you)
            :ARG1 (a5 / address
                  :quant 1
                  :mod (ii / internet))
            :manner (w / way
                  :mod (t / that))
            :condition (o2 / or
                  :op1 (s4 / steal-01
                        :ARG1 (ii2 / it))
                  :op2 (c3 / copy-01
                        :ARG1 ii2))
            :ARG1-of (e / easy-05)))"
