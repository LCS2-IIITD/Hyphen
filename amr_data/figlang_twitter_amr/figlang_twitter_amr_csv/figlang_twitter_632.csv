comment,amr
"Evening all , reviewing tomorrow s papers on Sky News with . Join us at :30 and :30 pm to hear about Northern rail , Dom Cummings epic blog and vegan steak bakes","# ::snt Evening all , reviewing tomorrow s papers on Sky News with . Join us at :30 and :30 pm to hear about Northern rail , Dom Cummings epic blog and vegan steak bakes
(m / multi-sentence
      :snt1 (r / review-01
            :ARG1 (p / paper
                  :time (t / tomorrow))
            :medium (b / broadcast-program
                  :name (n / name
                        :op1 ""Sky""
                        :op2 ""News""))
            :mod (e / even))
      :snt2 (j / join-04
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (w / we)
            :time (a / and
                  :op1 (d / date-entity
                        :time ""19:30"")
                  :op2 (d2 / date-entity
                        :time ""19:30""))
            :purpose (h / hear-01
                  :ARG0 y
                  :ARG1 (a2 / and
                        :op1 (r2 / rail
                              :name (n2 / name
                                    :op1 ""Northern""
                                    :op2 ""Rail""))
                        :op2 (b2 / blog
                              :mod (e2 / epic)
                              :poss (p2 / person
                                    :name (n3 / name
                                          :op1 ""Dom""
                                          :op2 ""Cummings"")))
                        :op3 (b3 / bake-01
                              :ARG1 (s / steak)
                              :mod (v / vegan)))
                  :ARG2 w)))"
"Thanks for the heads up . Afraid Comrade makes it a no show for me . Pity , cuz I like you","# ::snt Thanks for the heads up . Afraid Comrade makes it a no show for me . Pity , cuz I like you
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :ARG2 (h / heads-up))
      :snt2 (m2 / make-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Afraid""
                        :op2 ""Comrade""))
            :ARG1 (s / show-04
                  :polarity -
                  :ARG0 (ii2 / i)
                  :ARG1 (ii3 / it))
            :ARG2 ii2
            :ARG1-of (c / cause-01
                  :ARG0 (l / like-01
                        :ARG0 ii2
                        :ARG1 (y2 / you)))))"
