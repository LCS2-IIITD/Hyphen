comment,amr
Ripple Drop :30 - :50 tells you everything you need to know . <URL>,"# ::snt Ripple Drop :30 - :50 tells you everything you need to know . <URL>
(t / tell-01
      :ARG0 (d / drop-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Ripple""))
            :ARG4 (b / between
                  :op1 (p2 / percentage-entity
                        :value 30)
                  :op2 (p3 / percentage-entity
                        :value 50)))
      :ARG1 (e / everything
            :ARG1-of (k / know-01
                  :ARG0 (y / you)
                  :ARG1-of (n2 / need-01
                        :ARG0 y)))
      :ARG2 y)"
"A no brainer , if a Cryptocurrency has no use case or utility to solve a real world problem , why would anyone need said Cryptocurrencies ? Breanne Madigan literally shared the path to success for Ripple and XRP .","# ::snt A no brainer , if a Cryptocurrency has no use case or utility to solve a real world problem , why would anyone need said Cryptocurrencies ? Breanne Madigan literally shared the path to success for Ripple and XRP .
(m / multi-sentence
      :snt1 (n / no-brainer)
      :snt2 (n2 / need-01
            :ARG0 (a / anyone)
            :ARG1 (c / Cryptocurrency
                  :ARG1-of (s / say-01))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a2 / amr-unknown))
            :condition (o / or
                  :op1 (u / use-01
                        :polarity -
                        :ARG1 (c3 / Cryptocurrency)
                        :ARG2 (s2 / solve-01
                              :ARG0 c3
                              :ARG1 (p / problem
                                    :mod (w / world
                                          :ARG1-of (r / real-04)))))
                  :op2 (u2 / utility
                        :polarity -
                        :domain c3)))
      :snt3 (s3 / share-01
            :ARG0 (p2 / person
                  :name (n3 / name
                        :op1 ""Breanne""
                        :op2 ""Madigan""))
            :ARG1 (p3 / path
                  :direction (s4 / succeed-01
                        :ARG0 (a3 / and
                              :op1 (c4 / company
                                    :name (n4 / name
                                          :op1 ""RX""))
                              :op2 (c5 / company
                                    :name (n5 / name
                                          :op1 ""XRP""))))
                  :manner (l / literal))))"
