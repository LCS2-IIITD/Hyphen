comment,amr
"Not from Dublin so wont win the tickets to the . Just ordered of these instead , all it's missing <URL>","# ::snt Not from Dublin so wont win the tickets to the . Just ordered of these instead , all it's missing <URL>
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (b / be-from-91
                  :polarity -
                  :ARG2 (c2 / city
                        :name (n / name
                              :op1 ""Dublin"")))
            :ARG1 (w / win-01
                  :polarity -
                  :ARG0 (ii / i)
                  :ARG1 (t / ticket
                        :destination t)))
      :snt2 (o / order-02
            :ARG1 (t2 / this)
            :ARG1-of (ii2 / instead-of-91)
            :mod (j / just))
      :snt3 (m2 / miss-01
            :ARG0 (ii3 / it
                  :mod (a / all))))"
Rovers wouldn't be able for the type of street football the kids play at Crumlin . It's kill or be killed,"# ::snt Rovers wouldn't be able for the type of street football the kids play at Crumlin . It's kill or be killed
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (o / overturn-01)
            :ARG1-of (c / cause-01
                  :ARG0 (f / football
                        :mod (s / street)
                        :ARG1-of (p2 / play-01
                              :ARG0 (k / kid)
                              :location (c2 / city-district
                                    :name (n / name
                                          :op1 ""Crumlin"")))
                        :mod (t / type))))
      :snt2 (o2 / or
            :op1 (k2 / kill-01)
            :op2 (k3 / kill-01)))"
you're dead to me now pat may as well wear red and black stripes ! ! !,"# ::snt you're dead to me now pat may as well wear red and black stripes ! ! !
(c / cause-01
      :ARG0 (d / die-01
            :ARG1 (y / you)
            :prep-to (ii / i)
            :time (n / now))
      :ARG1 (p / possible-01
            :ARG1 (w / wear-01
                  :ARG0 y
                  :ARG1 (a / and
                        :op1 (s / stripe
                              :ARG1-of (r / red-02))
                        :op2 (s2 / stripe
                              :ARG1-of (b / black-04)))
                  :mod (a2 / as-well))))"
