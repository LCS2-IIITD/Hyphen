comment,amr
"Holy crap , this board ! I d forgotten all about it , but today it surfaced while I was looking for something else . This is the first Feather I ever designed : a simple SAMD board with mostly thru-hole components , because as of last summer I was still afraid of surface mount parts . <URL>","# ::snt Holy crap , this board ! I d forgotten all about it , but today it surfaced while I was looking for something else . This is the first Feather I ever designed : a simple SAMD board with mostly thru-hole components , because as of last summer I was still afraid of surface mount parts . <URL>
(m / multi-sentence
      :snt1 (b / board
            :mod (t / this)
            :mod (c / crap
                  :mode expressive
                  :mod (h / holy)))
      :snt2 (c2 / contrast-01
            :ARG1 (f / forget-01
                  :ARG0 (ii / i)
                  :ARG1 (ii2 / it
                        :mod (a / all)))
            :ARG2 (s / surface-01
                  :ARG1 ii2
                  :time (t2 / today)
                  :time (l / look-01
                        :ARG0 ii
                        :ARG1 (s2 / something
                              :mod (e / else))))
            :snt3 (d / design-01
                  :ARG0 ii
                  :ARG1 (b2 / board
                        :name (n / name
                              :op1 ""Feather"")
                        :ord (o / ordinal-entity
                              :value 1)
                        :ARG1-of (s3 / simple-02)
                        :mod (p / product
                              :name (n2 / name
                                    :op1 ""SAMD""))
                        :ARG0-of (h2 / have-03
                              :ARG1 (c3 / component
                                    :mod (t3 / through
                                          :op1 (h3 / hole))
                                    :quant (m2 / most))))
                  :time (e2 / ever)
                  :ARG1-of (c4 / cause-01
                        :ARG0 (f2 / fear-01
                              :ARG0 ii
                              :ARG1 (p2 / part
                                    :ARG2-of (m3 / mount-03
                                          :ARG1 (s4 / surface)))
                              :mod (s5 / still)
                              :time (a2 / as-of
                                    :op1 (d2 / date-entity
                                          :season (s6 / summer
                                                :mod (l2 / last)))))))))"
Fact : SMD is easier to solder than TH You don't need a microscope for and above,"# ::snt Fact : SMD is easier to solder than TH You don't need a microscope for and above
(f / fact
      :topic (h / have-degree-91
            :ARG1 (s / small-molecule
                  :name (n / name
                        :op1 ""SMD""))
            :ARG2 (e / easy-05
                  :ARG1 (s2 / solder-01
                        :ARG1 s))
            :ARG3 (m / more)
            :ARG4 (t / thing
                  :mod (t2 / that)))
      :topic (n2 / need-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 (m2 / microscope)
            :location (a / and
                  :op1 (a2 / above
                        :op1 m2))))"
I made a mess of my first attempt . I can ; t understand how those small fiddly ( and very bridgeable ) legs are easier to solder ... then again ... I don't think I had the right kit for the job .,"# ::snt I made a mess of my first attempt . I can ; t understand how those small fiddly ( and very bridgeable ) legs are easier to solder ... then again ... I don't think I had the right kit for the job .
(m / multi-sentence
      :snt1 (m2 / mess-01
            :ARG0 (ii / i)
            :ARG1 (a / attempt-01
                  :ARG0 ii
                  :ord (o / ordinal-entity
                        :value 1)))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (u / understand-01
                  :ARG0 (ii2 / i)
                  :ARG1 (h / have-degree-91
                        :ARG1 (l / leg
                              :mod (t / that)
                              :mod (f / fiddly)
                              :mod (s / small)
                              :ARG1-of (b / bridge-01
                                    :ARG1-of (p2 / possible-01)
                                    :degree (v / very)))
                        :ARG2 (e / easy-05
                              :ARG1 (s2 / solder-01
                                    :ARG1 l))
                        :ARG3 (m3 / more))))
      :snt3 (t2 / think-01
            :ARG0 (ii3 / i)
            :ARG1 (h2 / have-03
                  :polarity -
                  :ARG0 ii3
                  :ARG1 (k / kit
                        :ARG1-of (r / right-03)
                        :purpose (j / job)))))"
"For me , a flux pen changed everything . With bridged pins you can add some flux and do kind of a sweeping motion with your iron away from the bridged spot ; seems to work like magic .","# ::snt For me , a flux pen changed everything . With bridged pins you can add some flux and do kind of a sweeping motion with your iron away from the bridged spot ; seems to work like magic .
(m / multi-sentence
      :snt1 (c / change-01
            :ARG0 (p / pen
                  :mod (f / flux))
            :ARG1 (e / everything)
            :beneficiary (ii / i))
      :snt2 (p2 / possible-01
            :ARG1 (a / and
                  :op1 (a2 / add-02
                        :ARG0 (y / you)
                        :ARG1 (f2 / flux
                              :quant (s / some))
                        :ARG2 (ii2 / iron
                              :poss y))
                  :op2 (m2 / move-01
                        :ARG0 y
                        :ARG2 (a3 / away
                              :op1 (s2 / spot
                                    :ARG1-of (b / bridge-01)))
                        :manner (s3 / sweep-01
                              :ARG0 y
                              :ARG2 ii2
                              :degree (k / kind-of))))
            :ARG1-of (c2 / cause-01
                  :ARG0 (p3 / pin
                        :ARG1-of b)))
      :ARG1-of (s4 / seem-01
            :ARG1-of (r / resemble-01
                  :ARG2 (m3 / magic))))"
"Flux is key for smd . Also if your iron can change tips , get a chisel tip or cut off cone type tip , the pointy tips are really awful for drag soldering ( a good term to google for some video tutorials , once you understand drag soldering , everything will be easy breezy )","# ::snt Flux is key for smd . Also if your iron can change tips , get a chisel tip or cut off cone type tip , the pointy tips are really awful for drag soldering ( a good term to google for some video tutorials , once you understand drag soldering , everything will be easy breezy )
(m / multi-sentence
      :snt1 (k / key-02
            :ARG1 (l / lux)
            :ARG2 (s / smd))
      :snt2 (a / awful
            :degree (r / really)
            :domain (t / tip
                  :mod (p / pointy))
            :ARG1-of (c / cause-01
                  :ARG0 (s2 / sell-01
                        :ARG1 (d / drag)))
            :condition (p2 / possible-01
                  :ARG1 (c2 / change-01
                        :ARG0 (ii / iron
                              :poss (y / you))
                        :ARG1 (t2 / tip
                              :ARG1-of (t3 / type-03
                                    :ARG2 (o / or
                                          :op1 (c3 / chisel)
                                          :op2 (c4 / cut-off-04
                                                :ARG1 (c5 / cone))))))
                  :mod (a2 / also))
            :ARG1-of (m2 / mean-01
                  :ARG2 (t4 / term
                        :ARG1-of (g / good-02)
                        :purpose (g2 / google-01
                              :ARG0 y
                              :ARG1 (v / video
                                    :quant (s3 / some)))
                        :ARG0-of (c6 / cause-01
                              :ARG1 (e / easy-05
                                    :ARG1 (s4 / sell-01
                                          :ARG1 (d2 / drag))
                                    :condition (u / understand-01
                                          :ARG0 y
                                          :ARG1 s4)))))))"
"I agree with everything has said , I just want to add I find the cut off cones type iron heads the easiest to use","# ::snt I agree with everything has said , I just want to add I find the cut off cones type iron heads the easiest to use
(m / multi-sentence
      :snt1 (a / agree-01
            :ARG0 (ii / i)
            :ARG1 (e / everything
                  :ARG1-of (s / say-01)))
      :snt2 (w / want-01
            :ARG0 (ii2 / i)
            :ARG1 (a2 / add-01
                  :ARG0 ii2
                  :ARG1 (f / find-02
                        :ARG0 ii2
                        :ARG1 (h / have-degree-91
                              :ARG1 (h2 / head
                                    :part-of (c / cone
                                          :ARG1-of (c2 / cut-off-04))
                                    :mod (t / type-03
                                          :ARG2 (ii3 / iron)))
                              :ARG2 (e2 / easy-05
                                    :ARG1 (u / use-01))
                              :ARG3 (m2 / most))))
            :mod (j / just)))"
