comment,amr
So my kids have decided I'm done writing for the day . I'm going to try out Riverdale .,"# ::snt So my kids have decided I'm done writing for the day . I'm going to try out Riverdale .
(m / multi-sentence
      :snt1 (d / decide-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (k / kid)))
            :ARG1 (b / be-done-08
                  :ARG0 ii
                  :ARG1 (w / write-01
                        :ARG0 ii
                        :duration (d2 / day))))
      :snt2 (t / try-out-05
            :ARG0 (ii2 / i)
            :ARG1 (c / city
                  :name (n / name
                        :op1 ""Riverdale""))))"
Of course the construction guy decides he's going to be a musician and all of a sudden he's perfect at it . And nary a lesson .,"# ::snt Of course the construction guy decides he's going to be a musician and all of a sudden he's perfect at it . And nary a lesson .
(m / multi-sentence
      :snt1 (a / and
            :op1 (d / decide-01
                  :ARG0 (g / guy
                        :topic (c / construct-01))
                  :ARG1 (b / become-01
                        :ARG1 g
                        :ARG2 (m2 / musician))
                  :mod (o / of-course))
            :op2 (p / perfect-02
                  :ARG1 g
                  :ARG2 (ii / it)
                  :manner (s / sudden)))
      :snt2 (l / lesson
            :polarity -))"
The swimmy non-diagetic music gives the show a mysterious feel which nicely covers the obvious character tropes,"# ::snt The swimmy non-diagetic music gives the show a mysterious feel which nicely covers the obvious character tropes
(g / give-01
      :ARG0 (m / music
            :mod (d / diagetic
                  :polarity -)
            :mod (s / swimmy))
      :ARG1 (f / feel-01
            :ARG1 (s2 / show-04)
            :mod (m2 / mystery)
            :ARG0-of (c / cover-02
                  :ARG1 (t / trope
                        :mod (c2 / character)
                        :ARG1-of (o / obvious-01))
                  :ARG1-of (n / nice-01)))
      :ARG2 s2)"
