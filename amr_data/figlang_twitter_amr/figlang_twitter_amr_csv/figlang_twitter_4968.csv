comment,amr
help me understand . You did not load anyone s luggage on Flight from DCA to SEA ? This was done knowingly . I am baffled . The person that made this decision does not fit with the amazing culture at .,"# ::snt help me understand . You did not load anyone s luggage on Flight from DCA to SEA ? This was done knowingly . I am baffled . The person that made this decision does not fit with the amazing culture at .
(m / multi-sentence
      :snt1 (h / help-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (u / understand-01
                  :ARG0 (ii / i)))
      :snt2 (l / load-01
            :polarity -
            :ARG0 (y2 / you)
            :ARG1 (l2 / luggage
                  :poss (a / anyone))
            :ARG2 (f / fly-01
                  :source (a2 / airport
                        :name (n / name
                              :op1 ""DCA""))
                  :destination (s / sea
                        :name (n2 / name
                              :op1 "" SEA"")))
            :ARG1-of (k / know-01
                  :ARG0 y2))
      :snt3 (b / baffle-01
            :ARG1 (ii2 / i))
      :snt4 (f2 / fit-06
            :polarity -
            :ARG1 (p / person
                  :ARG0-of (d / decide-01
                        :ARG1 (t / this)))
            :ARG2 (c / culture
                  :ARG0-of (a3 / amaze-01))))"
We will have your bags delivered to each of you as soon as possible . The aircraft was downgraded earlier and we could not load all the bags due to weight and balance . - Andre,"# ::snt We will have your bags delivered to each of you as soon as possible . The aircraft was downgraded earlier and we could not load all the bags due to weight and balance . - Andre
(m / multi-sentence
      :snt1 (d / deliver-01
            :ARG0 (w / we)
            :ARG1 (b / bag
                  :poss (y / you
                        :mod (e / each)
                        :ARG2-of d))
            :time (s / soon
                  :ARG2-of (h / have-degree-91
                        :ARG1 d
                        :ARG3 (e2 / equal)
                        :ARG4 (p / possible-01))))
      :snt2 (a / and
            :op1 (d2 / downgrade-01
                  :ARG1 (a2 / aircraft)
                  :time (b2 / before))
            :op2 (p2 / possible-01
                  :polarity -
                  :ARG1 (l / load-01
                        :ARG0 (w2 / we)
                        :ARG1 (b3 / bag
                              :mod (a3 / all)))
                  :ARG1-of (c / cause-01
                        :ARG0 (a4 / and
                              :op1 (w3 / weight)
                              :op2 (b4 / balance)))))
      :snt3 (p3 / person
            :name (n / name
                  :op1 ""Andre"")))"
I have a colleague that is flying to San Francisco early morning . just added a lot of stress to its customers . This is not acceptable : $ ? I am checking into a hotel - and I won t sleep because I can t sleep without my CPAP . So in the morning I head home exhausted .,"# ::snt I have a colleague that is flying to San Francisco early morning . just added a lot of stress to its customers . This is not acceptable : $ ? I am checking into a hotel - and I won t sleep because I can t sleep without my CPAP . So in the morning I head home exhausted .
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (ii / i)
            :ARG1 (c / colleague
                  :ARG0-of (f / fly-01
                        :destination (c2 / city
                              :name (n / name
                                    :op1 ""San""
                                    :op2 ""Francisco""))
                        :time (e / early
                              :op1 (d / date-entity
                                    :dayperiod (m2 / morning))))))
      :snt2 (a / add-02
            :ARG0 c
            :ARG1 (s / stress-02
                  :quant (l / lot))
            :ARG2 (c3 / customer
                  :poss (c4 / company))
            :mod (j / just))
      :snt3 (p / possible-01
            :polarity -
            :ARG1 (a2 / accept-01
                  :ARG1 (t / this)))
      :snt4 m
      :snt5 (a3 / and
            :op1 (c5 / check-in-04
                  :ARG0 (ii2 / i)
                  :ARG1 (h2 / hotel))
            :op2 (s2 / sleep-01
                  :polarity -
                  :ARG0 ii2
                  :ARG1-of (c6 / cause-01
                        :ARG0 (p2 / possible-01
                              :polarity -
                              :ARG1 (s3 / sleep-01
                                    :ARG0 ii2
                                    :prep-without (t2 / thing
                                          :name (n2 / name
                                                :op1 ""CPAP"")
                                          :poss ii2))))))
      :snt6 (c7 / cause-01
            :ARG1 (h3 / head-02
                  :ARG0 (ii3 / i)
                  :ARG1 (h4 / home)
                  :manner (e2 / exhaust-01
                        :ARG1 ii3)
                  :time (d2 / date-entity
                        :dayperiod (m3 / morning)))))"
