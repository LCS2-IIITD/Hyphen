comment,amr
I am in slack channels . GB RAM consumed by the desktop app . In + IRC channels . MB consumed by irssi . The future is rubbish .,"# ::snt I am in slack channels . GB RAM consumed by the desktop app . In + IRC channels . MB consumed by irssi . The future is rubbish .
(m / multi-sentence
      :snt1 (ii / i
            :location (c / channel
                  :mod (s / slack)))
      :snt2 (c2 / consume-01
            :ARG0 (a / app
                  :mod (d / desktop))
            :ARG1 (m2 / memory
                  :quant 1
                  :mod (ii2 / information-quantity
                        :quant 1
                        :unit (g / gigabyte))))
      :snt3 (c3 / consume-01
            :ARG0 (p / product
                  :name (n / name
                        :op1 ""IRS""))
            :ARG1 (m3 / memory
                  :quant 1
                  :mod (ii3 / information-quantity
                        :quant 1
                        :unit (g2 / gigabyte))))
      :snt4 (c4 / consume-01
            :ARG0 (p2 / product
                  :name (n2 / name
                        :op1 ""MB""))
            :ARG1 (p3 / product
                  :name (n3 / name
                        :op1 ""IRS"")))
      :snt5 (r / rubbish
            :domain (f / future)))"
"I was never hard enough core to have a really good IRC setup , and now I'm like ... do I sort that out because slack sucks ?","# ::snt I was never hard enough core to have a really good IRC setup , and now I'm like ... do I sort that out because slack sucks ?
(a / and
      :op1 (h / have-degree-91
            :polarity -
            :ARG1 (ii / i)
            :ARG2 (c / core)
            :ARG3 (e / enough)
            :ARG6 (h2 / have-03
                  :ARG0 ii
                  :ARG1 (s / setup
                        :medium (p / product
                              :name (n / name
                                    :op1 ""IRS""))
                        :ARG1-of (g / good-02
                              :degree (r / really))))
            :time (e2 / ever))
      :op2 (r2 / resemble-01
            :ARG1 ii
            :ARG2 (s2 / sort-out-02
                  :ARG0 ii
                  :ARG1 (t / that)
                  :ARG1-of (c2 / cause-01
                        :ARG0 (s3 / suck-03
                              :ARG0 (s4 / slack)))
                  :polarity (a2 / amr-unknown))
            :time (n2 / now)))"
