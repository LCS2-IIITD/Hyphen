comment,amr
I need a plus one for this . Any takers ? <URL>,"# ::snt I need a plus one for this . Any takers ? <URL>
(m / multi-sentence
      :snt1 (n / need-01
            :ARG0 (ii / i)
            :ARG1 (p / plus
                  :op1 1)
            :purpose (t / this))
      :snt2 (p2 / person
            :ARG0-of (t2 / take-01)
            :polarity (a / amr-unknown)
            :mod (a2 / any)))"
Do it and then you can do the ride . Amazing place west of Ireland .,"# ::snt Do it and then you can do the ride . Amazing place west of Ireland .
(m / multi-sentence
      :snt1 (a / and
            :op1 (d / do-02
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (ii / it))
            :op2 (p / possible-01
                  :ARG1 (d2 / do-02
                        :ARG0 y
                        :ARG1 (r / ride-01)
                        :time (t / then))))
      :snt2 (p2 / place
            :ARG1-of (a2 / awe-01)
            :location (w / west
                  :part-of (c / country
                        :name (n / name
                              :op1 ""Ireland"")))))"
"Definitely ! Planned to do the Wild Atlantic Way a couple of years ago , but ended up doing something else instead . It's still on my list .","# ::snt Definitely ! Planned to do the Wild Atlantic Way a couple of years ago , but ended up doing something else instead . It's still on my list .
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (p / plan-01
                  :ARG1 (d / do-02
                        :ARG1 (w / way
                              :name (n / name
                                    :op1 ""Wild""
                                    :op2 ""Atlantic""
                                    :op3 ""Way""))
                        :time (b / before
                              :op1 (n2 / now)
                              :quant (c2 / couple
                                    :op1 (t / temporal-quantity
                                          :quant 1
                                          :unit (y / year)))))
                  :mod (d2 / definite))
            :ARG2 (e / end-up-03
                  :ARG1 (ii / i)
                  :ARG2 (d3 / do-02
                        :ARG0 ii
                        :ARG1 (s / something
                              :mod (e2 / else))
                        :ARG1-of (ii2 / instead-of-91))))
      :snt2 (l / list-01
            :ARG0 ii
            :ARG1 (ii3 / it)
            :mod (s2 / still)))"
