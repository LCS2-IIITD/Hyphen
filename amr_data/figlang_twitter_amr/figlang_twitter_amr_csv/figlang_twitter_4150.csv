comment,amr
"Sup w / Dak Prescott lookin ' like Donald Faison from the movie "" Clueless "" ? <URL>","# ::snt Sup w / Dak Prescott lookin ' like Donald Faison from the movie "" Clueless "" ? <URL>
(a / amr-unknown
      :polarity-of (l / look-02
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Dak""
                        :op2 ""Prescott""))
            :ARG1 (p2 / person
                  :name (n2 / name
                        :op1 ""Donald""
                        :op2 ""Faison"")
                  :source (m / movie
                        :name (n3 / name
                              :op1 ""Clueless"")))))"
Sup w / defense letting run through a hole lookin like a tooth-gap ?,"# ::snt Sup w / defense letting run through a hole lookin like a tooth-gap ?
(l / let-01
      :polarity (a / amr-unknown)
      :ARG0 (g / government-organization
            :name (n / name
                  :op1 ""Defense""))
      :ARG1 (r / run-01
            :ARG2 (t / through
                  :op1 (h / hole))
            :ARG0-of (l2 / look-02
                  :ARG1 (g2 / gap
                        :mod (t2 / tooth)))))"
"All good , you guys SHOULD win your division , just had to chirp back thinking about the time you snapped the last out","# ::snt All good , you guys SHOULD win your division , just had to chirp back thinking about the time you snapped the last out
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (a / all))
      :snt2 (r / recommend-01
            :ARG1 (w / win-01
                  :ARG0 (y / you
                        :mod (g2 / guy))
                  :ARG2 (d / division
                        :poss y)))
      :snt3 (o / obligate-01
            :ARG1 (y2 / you)
            :ARG2 (c / chirp-01
                  :ARG0 y2
                  :mod (b / back)
                  :manner (t / think-01
                        :ARG0 y2
                        :ARG1 (s / snap-07
                              :ARG0 y2
                              :ARG1 (o2 / out
                                    :mod (l / last)))))
            :mod (j / just)))"
