comment,amr
Is there an alternative UK travel app for trains ? Not Trainline or will I need to revert directly to the operators apps ( which is no problem ) ...,"# ::snt Is there an alternative UK travel app for trains ? Not Trainline or will I need to revert directly to the operators apps ( which is no problem ) ...
(m / multi-sentence
      :snt1 (c / company
            :polarity (a / amr-unknown)
            :name (n / name
                  :op1 ""UK""
                  :op2 ""Travel""
                  :op3 ""App""
                  :op4 ""for""
                  :op5 "" trains"")
            :mod (a2 / alternative))
      :snt2 (o / or
            :op1 (c2 / company
                  :polarity -
                  :name (n2 / name
                        :op1 ""Trainline""))
            :op2 (n3 / need-01
                  :ARG0 (ii / i)
                  :ARG1 (r / revert-01
                        :ARG1 ii
                        :ARG2 (a3 / app
                              :poss (c3 / company
                                    :ARG0-of (o2 / operate-01)))
                        :ARG1-of (d / direct-02))
                  :mod (p / problem
                        :polarity -))))"
"Hi Kelly . If you can let us know the address you've been emailing , we can take a further look ? We're keen to help ! - Jamie","# ::snt Hi Kelly . If you can let us know the address you've been emailing , we can take a further look ? We're keen to help ! - Jamie
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (h / hi)
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Kelly"")))
      :snt2 (h2 / have-condition-91
            :ARG1 (p2 / possible-01
                  :ARG1 (l / look-01
                        :ARG0 (w / we)
                        :mod (f / further)))
            :ARG2 (p3 / possible-01
                  :ARG1 (l2 / let-know-07
                        :ARG0 p
                        :ARG1 w
                        :ARG2 (a / address
                              :ARG1-of (e / email-01
                                    :ARG0 (y / you)))))
            :snt3 (k / keen-02
                  :ARG1 (w2 / we)
                  :ARG2 (h3 / help-01
                        :ARG0 w2)))
      :snt4 (p4 / person
            :name (n2 / name
                  :op1 ""Jamie"")))"
What is the status on this ? You have my email and your customer services keep referring me to your third party refund supplier .,"# ::snt What is the status on this ? You have my email and your customer services keep referring me to your third party refund supplier .
(m / multi-sentence
      :snt1 (s / status
            :topic (t / this)
            :domain (a / amr-unknown))
      :snt2 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (e / email
                        :poss (ii / i)))
            :op2 (k / keep-02
                  :ARG0 (s2 / service
                        :mod (c / customer)
                        :poss y)
                  :ARG1 (r / refer-02
                        :ARG0 s2
                        :ARG1 ii
                        :ARG2 (c2 / company
                              :ARG0-of (s3 / supply-01
                                    :ARG1 (r2 / refund-01))
                              :mod (t2 / third-party)
                              :poss y)))))"
Hi Kelly . We emailed you on rd January under incident reference -0175 . Was this received ? - Jamie,"# ::snt Hi Kelly . We emailed you on rd January under incident reference -0175 . Was this received ? - Jamie
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (h / hi)
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Kelly"")))
      :snt2 (e / email-01
            :ARG0 (w / we)
            :ARG2 p
            :time (d / date-entity
                  :month 1)
            :prep-under (r / reference-04
                  :ARG1 (ii / incident)
                  :mod d
                  :day 75))
      :snt3 (r2 / receive-01
            :ARG1 (t / this)
            :polarity (a / amr-unknown))
      :snt4 (s2 / say-01
            :ARG0 (ii2 / i)
            :ARG1 t)
      :ARG2 (p2 / person
            :name (n2 / name
                  :op1 ""Jamie"")))"
