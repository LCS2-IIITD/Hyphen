comment,amr
:48 Lowestoft to Norwich will be cancelled due to a train fault .,"# ::snt :48 Lowestoft to Norwich will be cancelled due to a train fault .
(c / cancel-01
      :ARG1 (c2 / company
            :name (n / name
                  :op1 ""Lowestoft"")
            :destination (c3 / city
                  :name (n2 / name
                        :op1 ""Norwich"")))
      :time (d / date-entity
            :time "":48"")
      :ARG1-of (c4 / cause-01
            :ARG0 (f / fault-02
                  :ARG1 (t / train))))"
My company will be fined if me & my colleague are late for our meeting in Norwich . We get stuck on a coach with no prior warning & we are already running late !,"# ::snt My company will be fined if me & my colleague are late for our meeting in Norwich . We get stuck on a coach with no prior warning & we are already running late !
(m / multi-sentence
      :snt1 (f / fine-01
            :ARG2 (c / company
                  :poss (ii / i))
            :condition (l / late
                  :domain (a / and
                        :op1 ii
                        :op2 (c2 / colleague
                              :poss ii))
                  :purpose (m2 / meet-03
                        :ARG0 ii
                        :location (c3 / city
                              :name (n / name
                                    :op1 ""Norwich"")))))
      :snt2 (a2 / and
            :op1 (s / stick-01
                  :ARG1 (w / we)
                  :ARG2 (c4 / coach)
                  :manner (w2 / warn-01
                        :polarity -
                        :time (p / prior)))
            :op2 (r / run-02
                  :ARG0 w
                  :time (a3 / already)
                  :time (l2 / late))))"
Really sorry for the cancellation this morning Clare . RH,"# ::snt Really sorry for the cancellation this morning Clare . RH
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (s2 / sorry-01
            :ARG1 ii
            :ARG2 (c / cancel-01
                  :time (d / date-entity
                        :dayperiod (m / morning)
                        :mod (t / today)))
            :degree (r / really))
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Clare"")))"
