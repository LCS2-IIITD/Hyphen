comment,amr
MOMENTS AGO : President Trump issues executive order directing all federal agencies to seek out and eliminate regula <URL>,"# ::snt MOMENTS AGO : President Trump issues executive order directing all federal agencies to seek out and eliminate regula <URL>
(ii / issue-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Trump"")
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p2 / president)))
      :ARG1 (o / order-01
            :ARG0 p
            :ARG1 (d / direct-01
                  :ARG0 p
                  :ARG1 (a / agency
                        :mod (f / federal)
                        :mod (a2 / all))
                  :ARG2 (a3 / and
                        :op1 (s / seek-out-02
                              :ARG0 a
                              :ARG1 (l / law
                                    :name (n2 / name
                                          :op1 ""Enforcement""
                                          :op2 ""Agency"")))
                        :op2 (e / eliminate-01
                              :ARG0 a
                              :ARG1 l)))
            :mod (e2 / executive))
      :time (a4 / ahead))"
"facts , critical thinking , Root cause analysis ALL MATTERS . What did Pres O inherit from Bush ? He saved the eco .","# ::snt facts , critical thinking , Root cause analysis ALL MATTERS . What did Pres O inherit from Bush ? He saved the eco .
(m / multi-sentence
      :snt1 (t / threaten-01
            :ARG0 (a / and
                  :op1 (f / fact)
                  :op2 (t2 / think-01
                        :manner (c / criticism-04))
                  :op3 (a2 / analyze-01
                        :ARG1 (r / root-02
                              :ARG1 (c2 / cause)))
                  :mod (a3 / all)))
      :snt2 (ii / inherit-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Obama"")
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (p2 / president)))
            :ARG1 (a4 / amr-unknown)
            :ARG2 (p3 / person
                  :name (n2 / name
                        :op1 ""Bush"")))
      :snt3 (s / save-02
            :ARG0 (h2 / he)
            :ARG1 (e / ecology)))"
"If Obama saved the economy , why was GDP so low throughout his years , and why were jobs not first priority .","# ::snt If Obama saved the economy , why was GDP so low throughout his years , and why were jobs not first priority .
(a / and
      :op1 (l / low-04
            :ARG1 (p / product
                  :ARG1-of (g / gross-03)
                  :mod (d / domestic))
            :degree (s / so)
            :time (y / year
                  :poss (p2 / person
                        :name (n / name
                              :op1 ""Obama"")))
            :ARG1-of (c / cause-01
                  :ARG0 (a2 / amr-unknown)))
      :op2 (p3 / priority
            :polarity -
            :ord (o / ordinal-entity
                  :value 1)
            :domain (j / job)
            :ARG1-of (c2 / cause-01
                  :ARG0 (a3 / amr-unknown)))
      :condition (s2 / save-02
            :ARG0 p2
            :ARG1 (e / economy)))"
"please , not enough charac . on twit to give you . Repubs did not support and killed props that ult had to do w jobs","# ::snt please , not enough charac . on twit to give you . Repubs did not support and killed props that ult had to do w jobs
(m / multi-sentence
      :snt1 (h / have-quant-91
            :polarity -
            :ARG1 (c / charac
                  :location (t / twit))
            :ARG3 (e / enough)
            :ARG6 (g / give-01
                  :ARG0 (y / you)
                  :ARG1 c)
            :polite +)
      :snt2 (a / and
            :op1 (s / support-01
                  :polarity -
                  :ARG0 (p / political-party
                        :name (n / name
                              :op1 ""Republican""))
                  :ARG1 (p2 / prop
                        :ARG0-of (d / do-02
                              :ARG1 (j / job)
                              :ARG2 (u / ult))))
            :op2 (k / kill-01
                  :polarity -
                  :ARG0 p
                  :ARG1 p2)))"
Nice try . I'm an independent . I deal only in facts ; and of course your wrong ! Go do some research & learn !,"# ::snt Nice try . I'm an independent . I deal only in facts ; and of course your wrong ! Go do some research & learn !
(m / multi-sentence
      :snt1 (t / try-01
            :ARG1-of (n / nice-01))
      :snt2 (ii / independent
            :domain (ii2 / i))
      :snt3 (d / deal-01
            :ARG0 ii2
            :ARG2 (f / fact)
            :mod (o / only))
      :snt4 (w / wrong-04
            :ARG1 (y / you)
            :mod (o2 / of-course))
      :snt5 (g / go-05
            :mode imperative
            :ARG0 y
            :ARG1 (a / and
                  :op1 (r / research-01
                        :ARG0 y
                        :quant (s / some))
                  :op2 (l / learn-01
                        :ARG0 y))))"
"... speaking of wrong ... ok ... ck your tweet , I believe ' your ' is actually wrong . Try ' you're / you are '","# ::snt ... speaking of wrong ... ok ... ck your tweet , I believe ' your ' is actually wrong . Try ' you're / you are '
(m / multi-sentence
      :snt1 (s / speak-01
            :ARG1 (w / wrong-02))
      :snt2 (o / okay-01
            :ARG1 (c / censor-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (t / tweet-02
                        :ARG0 y)))
      :snt3 (b / believe-01
            :ARG0 (ii / i)
            :ARG1 (w2 / wrong-02
                  :ARG1 (y2 / you)
                  :ARG1-of (a / actual-02)))
      :snt4 (t2 / try-01
            :mode imperative
            :ARG0 (y3 / you)
            :ARG1 (s2 / slash
                  :op1 y3
                  :op2 y2)))"
when one loses and argument always revert to correcting grammar,"# ::snt when one loses and argument always revert to correcting grammar
(r / revert-01
      :ARG1 (o / one)
      :ARG2 (c / correct-01
            :ARG0 o
            :ARG1 (g / grammar))
      :time (a / and
            :op1 (l / lose-03
                  :ARG0 o)
            :op2 (a2 / argue-01
                  :ARG0 o))
      :time (a3 / always))"
