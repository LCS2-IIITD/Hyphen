comment,amr
"Source of mozzies will mostly be outdoors so effective screening essential , oscillating fans can discourage biting , bed nets for sleep or snoozing ; sticky paper and traps generally ineffective and no plants really repellent . Insecticides ( of various types ) usually required ... <URL>","# ::snt Source of mozzies will mostly be outdoors so effective screening essential , oscillating fans can discourage biting , bed nets for sleep or snoozing ; sticky paper and traps generally ineffective and no plants really repellent . Insecticides ( of various types ) usually required ... <URL>
(m / multi-sentence
      :snt1 (s / source-02
            :ARG1 (m2 / mozzie)
            :location (o / outdoors
                  :ARG1-of (h / have-degree-91
                        :ARG2 (e / effective-04
                              :ARG0 s)
                        :ARG3 (s2 / so)
                        :ARG6 (e2 / essential
                              :domain (s3 / screen-02))))
            :mod (m3 / most))
      :snt2 (p / possible-01
            :ARG1 (d / discourage-01
                  :ARG0 (f / fan
                        :ARG0-of (o2 / oscillate-01))
                  :ARG1 (b / bite-01)))
      :snt3 (a / and
            :op1 (p2 / paper
                  :ARG1-of (s4 / sticky-03))
            :op2 (t / trap-01)
            :ARG0-of (e3 / effective-04
                  :polarity -
                  :ARG1-of (g / general-02)))
      :op2 (r / repel-01
            :polarity -
            :ARG0 (p3 / plant)
            :ARG1-of (r2 / real-04))
      :snt4 (r3 / require-01
            :ARG1 (ii / insecticide
                  :mod (t2 / type
                        :mod (v / various)))
            :mod (u / usual)))"
If only a company made a device that caused mosquitoes to explode ... <URL>,"# ::snt If only a company made a device that caused mosquitoes to explode ... <URL>
(h / have-condition-91
      :ARG2 (m / make-01
            :ARG0 (c / company)
            :ARG1 (d / device
                  :ARG0-of (c2 / cause-01
                        :ARG1 (e / explode-01
                              :ARG1 (m2 / mosquito))))
            :mod (o / only)))"
"well , there is larvisonic ( now with remote control boats ! ) but nothing comparable for adults","# ::snt well , there is larvisonic ( now with remote control boats ! ) but nothing comparable for adults
(c / contrast-01
      :ARG1 (l / larvisonic
            :prep-with (b / boat
                  :ARG0-of (c2 / control-01
                        :mod (r / remote)))
            :time (n / now))
      :ARG2 (c3 / comparable-03
            :polarity -
            :ARG1 (n2 / nothing)
            :ARG2 (a / adult))
      :mod (w / well))"
"Looks like fun , but the house flies would probably mock you by coming around for seconds and thirds ( I ve zapped some with electrified tennis racquets that then got up and walked it off ) <URL>","# ::snt Looks like fun , but the house flies would probably mock you by coming around for seconds and thirds ( I ve zapped some with electrified tennis racquets that then got up and walked it off ) <URL>
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (l / look-02
                  :ARG1 (f / fun-01))
            :ARG2 (m2 / mock-01
                  :ARG0 (f2 / fly-01
                        :ARG0 (h / house))
                  :ARG1 (y / you)
                  :ARG2 (c2 / come-01
                        :ARG1 f2
                        :ARG4 (a / around)
                        :duration (s / sum-of
                              :op1 (t / temporal-quantity
                                    :quant 30
                                    :unit (s2 / second))
                              :op2 (t2 / temporal-quantity
                                    :quant 3
                                    :unit s2))))
            :mod (p / probable))
      :snt2 (z / zap-01
            :ARG0 (ii / i)
            :ARG1 (s3 / some)
            :ARG2 (r / racquet
                  :mod (t3 / tennis)
                  :ARG1-of (e / electrify-01)
                  :ARG0-of (g / get-05
                        :ARG1 s3
                        :ARG2 (u / up)
                        :time (t4 / then))
                  :ARG0-of (w / walk-01
                        :ARG2 (o / off)))))"
