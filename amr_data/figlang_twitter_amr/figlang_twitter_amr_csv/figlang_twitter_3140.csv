comment,amr
What more can I say ? What is a person worth ? One thing is make alot of waste . is not as it should be . enabled make purchases any . they have free not making one required . . <URL>,"# ::snt What more can I say ? What is a person worth ? One thing is make alot of waste . is not as it should be . enabled make purchases any . they have free not making one required . . <URL>
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / say-01
                  :ARG0 (ii / i)
                  :ARG1 (a / amr-unknown)))
      :snt2 (w / worth-01
            :ARG1 (p2 / person)
            :ARG2 (a2 / amr-unknown))
      :snt3 (a3 / and
            :op1 (w2 / waste-01
                  :quant (l / lot))
            :op2 (t / thing
                  :mod (o / one)
                  :domain (m2 / make-01
                        :ARG1 w2)
                  :ARG1-of (r / recommend-01
                        :polarity -))
            :op4 (e / enable-01
                  :ARG1 (p3 / purchase-01
                        :ARG0 (t2 / they)
                        :mod (a4 / any)))
            :op5 (h / have-03
                  :ARG0 t2
                  :ARG1 (t3 / thing
                        :ARG1-of (f / free-03))
                  :ARG1-of (c / contrast-01
                        :ARG2 (m3 / make-01
                              :polarity -
                              :ARG0 t2
                              :ARG1 t3
                              :ARG1-of (r2 / require-01)))))
      :snt4 (u / url))"
could have been the only there is . on it . ' saturday . He talks jobs . Make worth more . Make many jobs be [ as ] may answer <URL>,"# ::snt could have been the only there is . on it . ' saturday . He talks jobs . Make worth more . Make many jobs be [ as ] may answer <URL>
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (b / be-located-at-91
                  :ARG1 (ii / it)
                  :ARG2 (o / only)))
      :snt2 (t / talk-01
            :ARG0 (h / he)
            :ARG1 (j / job)
            :time (d / date-entity
                  :weekday (s / saturday)))
      :snt3 (m2 / make-02
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (w / worth-01
                  :ARG2 (j2 / job
                        :ARG1-of (h2 / have-quant-91
                              :ARG3 (m3 / more)))))
      :snt4 (p2 / possible-01
            :ARG1 (a / answer-01
                  :ARG2 (j3 / job
                        :quant (m4 / many)))))"
