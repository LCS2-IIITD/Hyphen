comment,amr
"President-elect Trump was on ' Minutes ' last night . Softening campaign stances . Whaddya think , Trumpers ? Stream : <URL>","# ::snt President-elect Trump was on ' Minutes ' last night . Softening campaign stances . Whaddya think , Trumpers ? Stream : <URL>
(m / multi-sentence
      :snt1 (b / be-located-at-91
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Trump"")
                  :ARG1-of (e / elect-01
                        :ARG2 (h / have-org-role-91
                              :ARG0 p
                              :ARG2 (p2 / president))))
            :ARG2 (b2 / broadcast-program
                  :name (n2 / name
                        :op1 ""Ministry""))
            :time (d / date-entity
                  :dayperiod (n3 / night)
                  :mod (y / yesterday)))
      :snt2 (s / stand-11
            :ARG1 (c / campaign-01)
            :ARG1-of (s2 / soften-01))
      :snt3 (t / think-01
            :ARG0 (a / amr-unknown)
            :ARG2 (p3 / person
                  :mod (p4 / person
                        :name (n4 / name
                              :op1 ""Trump""))))
      :snt4 (s3 / stream-01
            :ARG1 (u / url-entity)))"
why do you use Trumpers ? Divisive . That mindset left and right is the problem .,"# ::snt why do you use Trumpers ? Divisive . That mindset left and right is the problem .
(m / multi-sentence
      :snt1 (u / use-01
            :ARG0 (y / you)
            :ARG1 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""Trump""))))
            :ARG1-of (c / cause-01
                  :ARG0 (a / amr-unknown)))
      :snt2 (d / divide-02)
      :snt3 (p3 / problem
            :domain (m2 / mindset
                  :mod (t / that)
                  :ARG1-of (l / left-19)
                  :ARG1-of (r / right-08))))"
"It would be even more divisive to claim Trump was a Kenyan-born Muslim , don't you think ?","# ::snt It would be even more divisive to claim Trump was a Kenyan-born Muslim , don't you think ?
(t / think-01
      :polarity -
      :ARG0 (y / you)
      :ARG1 (d / divide-02
            :ARG0 (c / claim-01
                  :ARG1 (r / religious-group
                        :name (n / name
                              :op1 ""Muslim"")
                        :domain (p / person
                              :name (n2 / name
                                    :op1 ""Trump""))
                        :ARG1-of (b / bear-02
                              :location (c2 / country
                                    :name (n3 / name
                                          :op1 ""Kenya"")))))
            :ARG2-of (h / have-degree-91
                  :ARG1 c
                  :ARG3 (m / more
                        :mod (e / even))))
      :polarity (a / amr-unknown))"
yes when it's not true . Obviously . Let's rise above that silliness . Seriously . This country doesn't need pot stirring .,"# ::snt yes when it's not true . Obviously . Let's rise above that silliness . Seriously . This country doesn't need pot stirring .
(m / multi-sentence
      :snt1 (y / yes
            :time (t / true-01
                  :polarity -
                  :ARG1 (ii / it)))
      :snt2 (o / obvious-01
            :ARG1 (r / rise-01
                  :mode imperative
                  :ARG1 (w / we)
                  :ARG4 (a / above
                        :op1 (s / silliness
                              :mod (t2 / that)))))
      :snt3 (s2 / serious-01
            :ARG2 (n / need-01
                  :polarity -
                  :ARG0 (c / country
                        :mod (t3 / this))
                  :ARG1 (s3 / stir-01
                        :ARG1 (p / pot)))))"
"Can't recall GOPers calling for colleagues to "" rise above that silliness "" for the last years .","# ::snt Can't recall GOPers calling for colleagues to "" rise above that silliness "" for the last years .
(p / possible-01
      :polarity -
      :ARG1 (r / recall-02
            :ARG1 (c / call-03
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (p3 / political-party
                                    :name (n / name
                                          :op1 ""GOP""))))
                  :ARG1 (r2 / rise-01
                        :ARG1 (p4 / person
                              :ARG0-of (h2 / have-rel-role-91
                                    :ARG2 (c2 / colleague)))
                        :ARG4 (a / above
                              :op1 (s / silliness
                                    :mod (t / that))))
                  :ARG2 p4
                  :time (y / year
                        :mod (l / last)))))"
"I know its your job , but I can't listen to the divisiveness any more . Want more fishing talk and less hate fueled dialog .","# ::snt I know its your job , but I can't listen to the divisiveness any more . Want more fishing talk and less hate fueled dialog .
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (k / know-01
                  :ARG0 (ii / i)
                  :ARG1 (j / job
                        :poss (y / you)))
            :ARG2 (p / possible-01
                  :polarity -
                  :ARG1 (l / listen-01
                        :ARG0 ii
                        :ARG1 (d / divisiveness)
                        :time (a / anymore))))
      :snt2 (w / want-01
            :ARG0 (ii2 / i)
            :ARG1 (a2 / and
                  :op1 (t / talk-01
                        :ARG1 (f / fish-01)
                        :quant (m2 / more))
                  :op2 (d2 / dialogue-01
                        :quant (l2 / less)
                        :ARG1-of (f2 / fuel-01
                              :ARG2 (h / hate-01))))))"
I haven't been fishing in + months . Maybe that's a problem ...,"# ::snt I haven't been fishing in + months . Maybe that's a problem ...
(m / multi-sentence
      :snt1 (f / fish-01
            :polarity -
            :ARG0 (ii / i)
            :duration (m2 / multiple
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (m3 / month))))
      :snt2 (p / possible-01
            :ARG1 (p2 / problem
                  :domain (t2 / that))))"
