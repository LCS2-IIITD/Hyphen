comment,amr
is still doing everything he can to avoid settling the bet live ?,"# ::snt is still doing everything he can to avoid settling the bet live ?
(d / do-02
      :polarity (a / amr-unknown)
      :ARG0 (h / he)
      :ARG1 (e / everything
            :ARG1-of (p / possible-01))
      :mod (s / still)
      :purpose (a2 / avoid-01
            :ARG0 h
            :ARG1 (s2 / settle-02
                  :ARG0 h
                  :ARG1 (b / bet-01)
                  :manner (l / live))))"
J I thought u were a spokesman . I witness you run every time . Wonder why ...,"# ::snt J I thought u were a spokesman . I witness you run every time . Wonder why ...
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (h / have-org-role-91
                  :ARG0 (y / you)
                  :ARG2 (s / spokesman)))
      :snt2 (w / witness-01
            :ARG0 (ii2 / i)
            :ARG1 (r / run-02
                  :ARG0 (y2 / you)
                  :frequency (t2 / time
                        :mod (e / every))))
      :snt3 (w2 / wonder-01
            :ARG0 (ii3 / i)
            :ARG1 (t3 / thing
                  :ARG0-of (c / cause-01))))"
here's a quick example . What lights the belly of the clouds ? Run ... <URL>,"# ::snt here's a quick example . What lights the belly of the clouds ? Run ... <URL>
(m / multi-sentence
      :snt1 (e / exemplify-01
            :location (h / here)
            :ARG1-of (q / quick-02))
      :snt2 (l / light-01
            :ARG0 (a / amr-unknown)
            :ARG1 (b / belly
                  :part-of (c / cloud)))
      :snt3 (r / run-02))"
Can you tell me why the bottom of these clouds are not lit ? <URL>,"# ::snt Can you tell me why the bottom of these clouds are not lit ? <URL>
(p / possible-01
      :ARG1 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t2 / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (l / light-04
                              :polarity -
                              :ARG1 (b / bottom
                                    :part-of (c2 / cloud
                                          :mod (t3 / this))))))
            :ARG2 (ii / i))
      :polarity (a / amr-unknown))"
they are . If the photo had been taken at a different time the dark one would be lit . As you know .,"# ::snt they are . If the photo had been taken at a different time the dark one would be lit . As you know .
(m / multi-sentence
      :snt1 (t / they)
      :snt2 (h / have-condition-91
            :ARG1 (l / light-04
                  :ARG1 (o / one
                        :ARG1-of (d / dark-02)))
            :ARG2 (t2 / take-01
                  :ARG1 (p / photo)
                  :time (t3 / time
                        :ARG1-of (d2 / differ-02))))
      :snt3 (k / know-01
            :ARG0 (y / you)))"
u can see the sun . Its rays should be shining on the underneath of that cloud .. let me send a pic,"# ::snt u can see the sun . Its rays should be shining on the underneath of that cloud .. let me send a pic
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (s / see-01
                  :ARG0 (y / you)
                  :ARG1 (s2 / sun)))
      :snt2 (r / recommend-01
            :ARG1 (s3 / shine-01
                  :ARG1 (r2 / ray
                        :poss (s4 / sun))
                  :ARG2 (u / underneath
                        :op1 (c / cloud
                              :mod (t / that)))))
      :snt3 (l / let-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (s5 / send-01
                  :ARG0 (ii / i)
                  :ARG1 (p2 / pic))))"
the angle changes thus the area illuminated - as you well know . Seconds / minutes below it WAS lit .,"# ::snt the angle changes thus the area illuminated - as you well know . Seconds / minutes below it WAS lit .
(m / multi-sentence
      :snt1 (c / change-01
            :ARG1 (a / angle)
            :ARG0-of (c2 / cause-01
                  :ARG1 (ii / illuminate-01
                        :ARG1 (a2 / area)))
            :ARG1-of (k / know-01
                  :ARG0 (y / you)
                  :mod (w / well)))
      :snt2 (l / lit-01
            :ARG1 (b / below
                  :op1 (ii2 / it)
                  :quant (s / slash
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (s2 / second))
                        :op2 (t2 / temporal-quantity
                              :quant 1
                              :unit (m2 / minute))))))"
Holy Christ . Ignore scale clowns . Show me sun rays hitting the ceiling of a room . Ooops you can't,"# ::snt Holy Christ . Ignore scale clowns . Show me sun rays hitting the ceiling of a room . Ooops you can't
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Christ"")
            :mod (h / holy))
      :snt2 (ii / ignore-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (c / clown
                  :mod (s / scale)))
      :snt3 (s2 / show-01
            :mode imperative
            :ARG0 (y2 / you)
            :ARG1 (r / ray
                  :mod (s3 / sun)
                  :ARG0-of (h2 / hit-01
                        :ARG1 (c2 / ceiling
                              :part-of (r2 / room))))
            :ARG2 (ii2 / i))
      :snt4 (p2 / possible-01
            :polarity -
            :ARG1 (d / do-02
                  :ARG0 (y3 / you)
                  :mod (o / oops
                        :mode expressive))))"
You can't ignore scale . Height of house is grossly misrepresented .,"# ::snt You can't ignore scale . Height of house is grossly misrepresented .
(m / multi-sentence
      :snt1 (p / possible-01
            :polarity -
            :ARG1 (ii / ignore-01
                  :ARG0 (y / you)
                  :ARG1 (s / scale)))
      :snt2 (m2 / misrepresent-01
            :ARG1 (h / high-02
                  :ARG1 (h2 / house))
            :manner (g / gross)))"
NO IT ISN'T .. WOW . Ok let me go place it on your ball . Be right back since you want to play dumb,"# ::snt NO IT ISN'T .. WOW . Ok let me go place it on your ball . Be right back since you want to play dumb
(m / multi-sentence
      :snt1 (b / be-temporally-at-91
            :polarity -
            :ARG1 (ii / it)
            :ARG2 (n / now))
      :snt2 (w / wOW
            :mode expressive)
      :snt3 (l / let-01
            :ARG0 (y / you)
            :ARG1 (g / go-05
                  :ARG0 (ii2 / i)
                  :ARG1 (p / place-01
                        :ARG0 ii2
                        :ARG1 (ii3 / it)
                        :ARG2 (b2 / ball
                              :poss y))))
      :snt4 (b3 / be-located-at-91
            :ARG1 (y2 / you)
            :ARG2 (b4 / back
                  :mod (r / right))
            :ARG1-of (c / cause-01
                  :ARG0 (w2 / want-01
                        :ARG0 y2
                        :ARG1 (p2 / play-01
                              :ARG0 y2
                              :manner (d / dumb))))))"
and you are figure head for FE ? Wow . Going to sleep now ... Send as much as you want and I'll address,"# ::snt and you are figure head for FE ? Wow . Going to sleep now ... Send as much as you want and I'll address
(m / multi-sentence
      :snt1 (a / and
            :op2 (h / head-01
                  :ARG0 (y / you)
                  :ARG1 (t / thing
                        :name (n / name
                              :op1 ""FE""))
                  :mod (f / figure)
                  :polarity (a2 / amr-unknown)))
      :snt2 (a3 / and
            :op1 (g / go-05
                  :ARG0 (y2 / you)
                  :ARG1 (s / sleep-01
                        :ARG0 y2)
                  :time (n2 / now))
            :op2 (s2 / send-01
                  :ARG0 y2
                  :ARG1 (t2 / thing
                        :ARG1-of (h2 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (e / equal)
                              :ARG4 (t3 / thing
                                    :ARG1-of (w / want-01
                                          :ARG0 y2)))))
            :op3 (a4 / address-02
                  :ARG0 (ii / i))
            :ARG0-of (w2 / wow-01)))"
"Exactly . I ask for proof , you tuck your tail and go home . Dishonesty only gets you so far .","# ::snt Exactly . I ask for proof , you tuck your tail and go home . Dishonesty only gets you so far .
(m / multi-sentence
      :snt1 (e / exact)
      :snt2 (a / and
            :op1 (t / tuck-01
                  :ARG0 (y / you
                        :part (t2 / tail))
                  :ARG1 t2)
            :op2 (g / go-02
                  :ARG0 y
                  :ARG4 (h / home))
            :time (a2 / ask-02
                  :ARG0 (ii / i)
                  :ARG1 (p / prove-01)))
      :snt3 (g2 / get-05
            :ARG0 (h2 / honesty
                  :polarity -
                  :mod (o / only))
            :ARG1 (y2 / you)
            :ARG2 (f / far
                  :mod (s / so))))"
