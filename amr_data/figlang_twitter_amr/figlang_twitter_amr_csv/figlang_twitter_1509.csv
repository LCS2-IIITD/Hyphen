comment,amr
The KKK seems to think it matters who becomes President . Do you ? <URL>,"# ::snt The KKK seems to think it matters who becomes President . Do you ? <URL>
(m / multi-sentence
      :snt1 (s / seem-01
            :ARG1 (t / think-01
                  :ARG0 (o / organization
                        :name (n / name
                              :op1 ""KKK""))
                  :ARG1 (m2 / matter-01
                        :ARG1 (p / person
                              :ARG1-of (b / become-01
                                    :ARG2 (p2 / president))))))
      :snt2 (e / event
            :polarity (a / amr-unknown)
            :mod (y / you)))"
"tell that to or . You work with them . If she loses , it's because of idiots like them .","# ::snt tell that to or . You work with them . If she loses , it's because of idiots like them .
(m / multi-sentence
      :snt1 (o / or
            :op1 (t / tell-01
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (t2 / that)
                  :ARG2 (t3 / they))
            :op2 (w / work-01
                  :mode imperative
                  :ARG0 y
                  :ARG3 (t4 / they)))
      :snt2 (c / cause-01
            :ARG0 (ii / idiot
                  :ARG1-of (r / resemble-01
                        :ARG2 (t5 / they)))
            :ARG1 (l / lose-03
                  :ARG0 (s / she)
                  :condition-of c)))"
"If she loses , it's b / c of herself She hasn't even taken a position RE ffs","# ::snt If she loses , it's b / c of herself She hasn't even taken a position RE ffs
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (h / have-polarity-91
                  :ARG1 (l / lose-03
                        :ARG0 (s / she))
                  :ARG2 -))
      :snt2 (t / take-01
            :polarity -
            :ARG0 (s2 / she)
            :ARG1 (p / position
                  :ARG2-of (f / favor-01
                        :ARG1 (p2 / person
                              :ARG0-of (h2 / have-org-role-91
                                    :ARG1 (p3 / political-party
                                          :name (n / name
                                                :op1 ""Republican""
                                                :op2 ""Party""))))))
            :mod (e / even)))"
"Bullshit , and that's what losers say when they a <URL>","# ::snt Bullshit , and that's what losers say when they a <URL>
(a / and
      :op1 (b / bullshit-01)
      :op2 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (l / lose-03))
            :ARG1 b
            :time (e / event
                  :mod p)))"
"Um , YOU just complained RE hrc losing ... Projection much ? HRC was a bad pick .","# ::snt Um , YOU just complained RE hrc losing ... Projection much ? HRC was a bad pick .
(m / multi-sentence
      :snt1 (c / complain-01
            :ARG0 (y / you)
            :ARG1 (l / lose-03
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""RE""
                              :op2 ""Hrc"")))
            :mod (u / um
                  :mode expressive)
            :mod (j / just))
      :snt2 (p2 / project-01
            :degree (m2 / much))
      :snt3 (p3 / pick-01
            :ARG1 (p4 / person
                  :name (n2 / name
                        :op1 ""HRC""))
            :ARG1-of (b / bad-07)))"
HRC does little to compel Progs to vote FOR her it's just AGAINST Trump Bad strategy,"# ::snt HRC does little to compel Progs to vote FOR her it's just AGAINST Trump Bad strategy
(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (o / organization
                  :name (n / name
                        :op1 ""HRC""))
            :ARG1 (l / little)
            :ARG2 (c / compel-01
                  :ARG0 o
                  :ARG1 (p / person
                        :name (n2 / name
                              :op1 ""Progs""))
                  :ARG2 (v / vote-01
                        :ARG0 p
                        :ARG1 (s / she))))
      :snt2 (s2 / strategy
            :ARG0-of (o2 / oppose-01
                  :ARG1 (p2 / person
                        :name (n3 / name
                              :op1 ""Trump"")))
            :ARG1-of (b / bad-07)
            :mod (j / just)))"
"Ok , for her , or against Trump . Both legit . You sanctimoni <URL>","# ::snt Ok , for her , or against Trump . Both legit . You sanctimoni <URL>
(m / multi-sentence
      :snt1 (o / okay-01
            :ARG2 (o2 / or
                  :op1 (s / she)
                  :op2 (p / person
                        :name (n / name
                              :op1 ""Trump""))))
      :snt2 (l / legit-02
            :ARG1 (b / both))
      :snt3 (s2 / sanctimoni
            :domain (y / you)))"
The ONLY way Progs will vote AGAINST Trump is if they think HRC is better ENOUGH .,"# ::snt The ONLY way Progs will vote AGAINST Trump is if they think HRC is better ENOUGH .
(w / way
      :mod (o / only)
      :manner-of (v / vote-01
            :ARG0 (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (p2 / political-party
                              :name (n / name
                                    :op1 ""Progs""))))
            :ARG1 (a / against
                  :op1 (p3 / person
                        :name (n2 / name
                              :op1 ""Trump""))))
      :domain (t / think-01
            :ARG0 p
            :ARG1 (h2 / have-degree-91
                  :ARG1 (p4 / person
                        :name (n3 / name
                              :op1 ""HRC""))
                  :ARG2 (g / good-02
                        :ARG1 p4)
                  :ARG3 (m / more))))"
"If Progs like / don't think HRC = better ENOUGH , she won't EARN those VOTES","# ::snt If Progs like / don't think HRC = better ENOUGH , she won't EARN those VOTES
(h / have-condition-91
      :ARG1 (e / earn-01
            :polarity -
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""HRC""))
            :ARG1 (v / veto
                  :mod (t / that)))
      :ARG2 (s / slash
            :op1 (l / like-01
                  :ARG0 (p2 / person)
                  :ARG1 (e2 / equal-01
                        :ARG1 (p3 / person
                              :name n
                              :op1 ""HRC""))
                  :ARG2 (g / good-02
                        :ARG2-of (h2 / have-degree-91
                              :ARG1 p3
                              :ARG3 (m / more)))))
      :op2 (t2 / think-01
            :polarity -
            :ARG0 p2
            :ARG1 e2))"
