comment,amr
"When I was young , I dreaded WWIII as I knew it would destroy mankind . But this year I got to know mankind a little better . So bring it on .","# ::snt When I was young , I dreaded WWIII as I knew it would destroy mankind . But this year I got to know mankind a little better . So bring it on .
(m / multi-sentence
      :snt1 (d / dread-01
            :ARG0 (ii / i)
            :ARG1 (w / war
                  :name (n / name
                        :op1 ""WWIII"")
                  :ARG0-of (d2 / destroy-01
                        :ARG1 (m2 / mankind)))
            :time (y / young
                  :domain ii)
            :ARG1-of (k / know-01
                  :ARG0 ii))
      :snt2 (c / contrast-01
            :ARG2 (g / get-03
                  :ARG1 (ii2 / i)
                  :ARG2 (k2 / know-01
                        :ARG0 ii2
                        :ARG1 (m3 / mankind)
                        :ARG1-of (h / have-degree-91
                              :ARG2 (g2 / good-02
                                    :ARG1 k2)
                              :ARG3 (m4 / more
                                    :quant (l / little))))
                  :time (y2 / year
                        :mod (t / this))))
      :snt3 (c2 / cause-01
            :ARG1 (b / bring-on-06
                  :mode imperative
                  :ARG0 (y3 / you)
                  :ARG1 (ii3 / it))))"
this is what militant atheism can do to a man : wishing for the destruction of mankind . That's about as low as one can get .,"# ::snt this is what militant atheism can do to a man : wishing for the destruction of mankind . That's about as low as one can get .
(m / multi-sentence
      :snt1 (p / possible-01
            :ARG1 (d / do-02
                  :ARG0 (a / atheism
                        :mod (m2 / militant))
                  :ARG1 (w / wish-01
                        :ARG1 (d2 / destroy-01
                              :ARG1 (m3 / mankind)))
                  :ARG2 (m4 / man)))
      :snt2 (h / have-degree-91
            :ARG1 (t / that)
            :ARG2 (l / low-04)
            :ARG3 (e / equal)
            :ARG4 (p2 / possible-01
                  :ARG1 (g / get-03
                        :ARG1 (o / one)
                        :ARG2 l))))"
