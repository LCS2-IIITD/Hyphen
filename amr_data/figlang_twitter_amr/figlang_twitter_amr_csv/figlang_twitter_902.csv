comment,amr
Well good morning and happy Monday ! It s :46 am and we are already off schedule . Let s see if you can pull it together for ONE ride this week shall we ?,"# ::snt Well good morning and happy Monday ! It s :46 am and we are already off schedule . Let s see if you can pull it together for ONE ride this week shall we ?
(m / multi-sentence
      :snt1 (a / and
            :op1 (m2 / morning
                  :ARG1-of (g / good-02))
            :op2 (h / happy-01
                  :ARG1 (d / date-entity
                        :weekday (m3 / monday)))
            :mod (w / well)
            :snt2-of m)
      :op1 d
      :time ""0:46""
      :op2 (o / off-schedule-00
            :ARG1 (w2 / we)
            :time (a2 / already))
      :snt3 (l / let-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s / see-01
                  :ARG0 w2)
            :ARG1 (t / truth-value
                  :polarity-of (p / possible-01
                        :ARG1 (p2 / pull-06
                              :ARG0 y
                              :ARG1 (ii / it)
                              :ARG2 (t2 / together)
                              :purpose (r / ride-01
                                    :quant 1
                                    :ARG0 y)
                              :time (w3 / week
                                    :mod (t3 / this)))))
            :ARG1-of (r2 / request-confirmation-91
                  :ARG2 w2)))"
So we are minutes late . At my current hourly rate that s $ . Plus the $ for the ticket to get to Boston at :23 am which did not occur . Who at will be working on my refund ?,"# ::snt So we are minutes late . At my current hourly rate that s $ . Plus the $ for the ticket to get to Boston at :23 am which did not occur . Who at will be working on my refund ?
(m / multi-sentence
      :snt1 (ii / infer-01
            :ARG1 (l / late-02
                  :ARG1 (w / we)
                  :ARG2 (m2 / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (m3 / minute)))))
      :snt2 (c / cost-01
            :ARG1 (t2 / ticket)
            :ARG2 (m4 / monetary-quantity
                  :unit (d / dollar))
            :ARG3 (g / get-05
                  :ARG1 t2
                  :ARG2 (c2 / city
                        :name (n / name
                              :op1 ""Boston""))
                  :time (d2 / date-entity
                        :time ""23:23"")
                  :ARG1-of (b / be-temporally-at-91
                        :polarity -)))
      :snt3 (w2 / work-01
            :ARG0 (a / amr-unknown)
            :ARG1 (t3 / thing
                  :ARG1-of (r / refund-01
                        :ARG0 (ii2 / i)))
            :ARG2 (a2 / amr-unknown)))"
