comment,amr
"I just payed Euros for a new because my old one didn't scan properly anymore . That's what I call . Even my bank sends me a new card for free , and I am not paying them Euros every month for a subscription . I am very disappointed !","# ::snt I just payed Euros for a new because my old one didn't scan properly anymore . That's what I call . Even my bank sends me a new card for free , and I am not paying them Euros every month for a subscription . I am very disappointed !
(m / multi-sentence
      :snt1 (p / pay-01
            :ARG0 (ii / i)
            :ARG1 (e / euro)
            :ARG3 (t / thing
                  :ARG1-of (n / new-01))
            :mod (j / just)
            :ARG1-of (c / cause-01
                  :ARG0 (s / scan-01
                        :polarity -
                        :ARG1 (t2 / thing
                              :mod (o / old)
                              :poss ii)
                        :manner (p2 / proper)
                        :time (a / anymore))))
      :snt2 (c2 / call-10
            :ARG0 (ii2 / i)
            :ARG1 (t3 / that))
      :snt3 (a2 / and
            :op1 (s2 / send-01
                  :ARG0 (b / bank
                        :poss (ii3 / i)
                        :mod (e2 / even))
                  :ARG1 (c3 / card
                        :ARG1-of (n2 / new-01))
                  :ARG2 ii3
                  :ARG1-of (f / free-03))
            :op2 (p3 / pay-01
                  :polarity -
                  :ARG0 ii3
                  :ARG1 (r / rate-entity-91
                        :ARG1 (e3 / euro)
                        :ARG2 (t4 / temporal-quantity
                              :quant 1
                              :unit (m2 / month)))
                  :ARG3 (s3 / subscribe-01
                        :ARG0 ii3)))
      :snt4 (d / disappoint-01
            :ARG1 (ii4 / i)
            :degree (v / very)))"
"Hi Aleksander , Thank you for your message . Users can request a new card in the form of a duplicate card , at their own cost ( in accordance with the price grid applicable on that date , that is to this day ) . We are very sorry if this seems excessive . Have a nice day ^ sh","# ::snt Hi Aleksander , Thank you for your message . Users can request a new card in the form of a duplicate card , at their own cost ( in accordance with the price grid applicable on that date , that is to this day ) . We are very sorry if this seems excessive . Have a nice day ^ sh
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (t / thank-01
                  :ARG0 (ii / i)
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Aleksander""))
                  :ARG2 (m2 / message-01
                        :ARG0 p))
            :ARG2 p)
      :snt2 (p2 / possible-01
            :ARG1 (r / request-01
                  :ARG0 (p3 / person
                        :ARG0-of (u / use-01))
                  :ARG1 (c / card
                        :ARG1-of (n2 / new-01)
                        :ARG1-of (c2 / cost-01
                              :ARG2 (c3 / card
                                    :ARG1-of (d / duplicate-01))))
                  :ARG1-of (a / accord-02
                        :ARG2 (g / grid
                              :mod (p4 / price)
                              :ARG1-of (a2 / apply-01
                                    :time (d2 / date
                                          :mod (t2 / that))
                                    :time (t3 / to
                                          :op1 (d3 / day
                                                :mod (t4 / this)))))))
            :snt3 (s2 / sorry-01
                  :ARG1 (w / we)
                  :degree (v / very)
                  :condition (s3 / seem-01
                        :ARG1 (e / excessive-02
                              :ARG1 (t5 / this))))
            :snt4 (h / have-03
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 (d4 / day
                        :ARG1-of (n3 / nice-01)))))"
My card stopped working properly . So are you telling me this is my fault now . Unbelievable .,"# ::snt My card stopped working properly . So are you telling me this is my fault now . Unbelievable .
(m / multi-sentence
      :snt1 (s / stop-01
            :ARG1 (w / work-09
                  :ARG1 (c / card
                        :poss (ii / i))
                  :manner (p / proper)))
      :snt2 (c2 / cause-01
            :ARG1 (t / tell-01
                  :ARG0 (y / you)
                  :ARG1 (f / fault-01
                        :ARG1 (ii2 / i)
                        :ARG2 (t2 / this))
                  :ARG2 ii2
                  :time (n / now)))
      :snt3 (p2 / possible-01
            :polarity -
            :ARG1 (b / believe-01
                  :ARG1 (t3 / thing))))"
"Hi Aleksander , We understand you are frustrated or mad , but we did not imply anything else than , saying this is standard procedure . If you'd like you can read more about it here : <URL> Have a nice day ^ sh","# ::snt Hi Aleksander , We understand you are frustrated or mad , but we did not imply anything else than , saying this is standard procedure . If you'd like you can read more about it here : <URL> Have a nice day ^ sh
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (c / contrast-01
                  :ARG1 (u / understand-01
                        :ARG0 (w / we)
                        :ARG1 (o / or
                              :op1 (f / frustrate-01
                                    :ARG1 (p / person
                                          :name (n / name
                                                :op1 ""Aleksander"")))
                              :op2 (m2 / mad-04
                                    :ARG1 p)))
                  :ARG2 (ii / imply-01
                        :polarity -
                        :ARG0 w
                        :ARG1 (a / anything
                              :mod (e / else)
                              :ARG2-of (e2 / except-01
                                    :ARG1 (s2 / say-01
                                          :ARG0 w
                                          :ARG1 (p2 / procedure
                                                :ARG1-of (s3 / standard-02)
                                                :domain (t / this)))))))
            :ARG2 p)
      :snt2 (h / have-condition-91
            :ARG1 (p3 / possible-01
                  :ARG1 (r / read-01
                        :ARG0 (y / you)
                        :ARG1 (m3 / more)
                        :ARG3 (ii2 / it)
                        :location (h2 / here)))
            :ARG2 (l / like-02
                  :ARG0 y
                  :ARG1 r))
      :snt3 (h3 / have-03
            :mode imperative
            :ARG0 y
            :ARG1 (d / day
                  :ARG1-of (n2 / nice-01))))"
