comment,amr
great customer service today . Friendly staff at even though flight cancelled and easy refund process,"# ::snt great customer service today . Friendly staff at even though flight cancelled and easy refund process
(m / multi-sentence
      :snt1 (s / serve-01
            :ARG0 (c / customer)
            :ARG2 (p / person
                  :ARG0-of (f / friendly-01))
            :time (t / today))
      :snt2 (h / have-concession-91
            :ARG1 (s2 / staff
                  :ARG0-of f))
      :ARG2 (a / and
            :op1 (c2 / cancel-01
                  :ARG1 (f2 / fly-01))
            :op2 (p2 / process-02
                  :ARG1 (r / refund-01)
                  :ARG1-of (e / easy-05))))"
"Thanks Lee , that s great to hear ( despite the flight cancellation ) ! I'll get the feedback passed on . Josh","# ::snt Thanks Lee , that s great to hear ( despite the flight cancellation ) ! I'll get the feedback passed on . Josh
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Lee""))
            :ARG2 (h / hear-01
                  :ARG0 ii
                  :concession (c / cancel-01
                        :ARG1 (f / fly-01))
                  :mod (g / great)))
      :snt2 (g2 / get-04
            :ARG0 (ii2 / i)
            :ARG1 (p2 / pass-on-09
                  :ARG1 (f2 / feedback)))
      :snt3 (p3 / person
            :name (n2 / name
                  :op1 ""Josh"")))"
"If we offered free flights , you'd be top of the list Lee . - Josh","# ::snt If we offered free flights , you'd be top of the list Lee . - Josh
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (t / top-01
            :ARG1 (l / list)
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Lee""))
            :condition (o / offer-01
                  :ARG0 (w / we)
                  :ARG1 (f / fly-01
                        :ARG1-of (f2 / free-03))))
      :ARG2 (p2 / person
            :name (n2 / name
                  :op1 ""Josh"")))"
you mis-spelt ' when ' it doesn't jave an ' i ' or ' f ' in it .,"# ::snt you mis-spelt ' when ' it doesn't jave an ' i ' or ' f ' in it .
(s / spell-01
      :ARG0 (y / you)
      :ARG1 (ii / it)
      :manner (j / jave-01
            :polarity -
            :ARG1 ii
            :ARG2 (o / or
                  :op1 (s2 / string-entity
                        :value ""i"")
                  :op2 (s3 / string-entity
                        :value ""f""))))"
