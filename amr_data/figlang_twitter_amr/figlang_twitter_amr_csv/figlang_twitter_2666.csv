comment,amr
"Tommy Douglas was literally voted the greatest Canadian and no one is putting his name up to be on the $ ? Call it a Tommy , call it a Dougy it just fits","# ::snt Tommy Douglas was literally voted the greatest Canadian and no one is putting his name up to be on the $ ? Call it a Tommy , call it a Dougy it just fits
(m / multi-sentence
      :snt1 (a / and
            :op1 (v / vote-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Tommy""
                              :op2 ""Douglas""))
                  :ARG2 (p2 / person
                        :mod (c / country
                              :name (n2 / name
                                    :op1 ""Canada""))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (g / great)
                              :ARG3 (m2 / most)))
                  :manner (l / literal))
            :op2 (p3 / put-up-11
                  :ARG0 (n3 / no-one)
                  :ARG1 (n4 / name
                        :poss p)
                  :purpose (b / be-located-at-91
                        :ARG1 n4
                        :ARG2 (d / dollar))))
      :snt2 a
      :op1 (c2 / call-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / it)
            :ARG2 (p4 / person
                  :name (n5 / name
                        :op1 ""Tommy""
                        :op2 ""Dougy"")))
      :op2 (c3 / call-01
            :mode imperative
            :ARG0 y
            :ARG1 ii
            :ARG2 (d2 / dougy)
            :ARG1-of (f / fit-06
                  :mod (j / just))))"
"The more I think about this , the more I like it . Loonie , Toonie and a Tommy .","# ::snt The more I think about this , the more I like it . Loonie , Toonie and a Tommy .
(m / multi-sentence
      :snt1 (c / correlate-91
            :ARG1 (m2 / more
                  :ARG3-of (h / have-quant-91
                        :ARG1 (t / think-01
                              :ARG0 (ii / i)
                              :ARG1 (t2 / this))))
            :ARG2 (m3 / more
                  :ARG3-of (h2 / have-degree-91
                        :ARG1 ii
                        :ARG2 (l / like-01
                              :ARG0 ii
                              :ARG1 t2))))
      :snt2 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""Loonie""))
            :op2 (p2 / person
                  :name (n2 / name
                        :op1 ""Toonie""))
            :op3 (p3 / person
                  :name (n3 / name
                        :op1 ""Tommy""))))"
