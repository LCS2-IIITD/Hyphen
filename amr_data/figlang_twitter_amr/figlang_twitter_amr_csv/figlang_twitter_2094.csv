comment,amr
"No Prescription charges , no bridge tolls , university fees , best performing NHS in UK highest employment rate in UK <URL>","# ::snt No Prescription charges , no bridge tolls , university fees , best performing NHS in UK highest employment rate in UK <URL>
(a / and
      :op1 (c / charge-01
            :polarity -
            :ARG3 (p / prescribe-02))
      :op2 (t / toll
            :polarity -
            :mod (b / bridge))
      :op3 (f / fee
            :polarity -
            :mod (u / university))
      :op4 (p2 / perform-02
            :ARG0 (g / government-organization
                  :name (n / name
                        :op1 ""NHS""))
            :ARG1 (r / rate
                  :mod (e / employ-01)
                  :location (c2 / country
                        :name (n2 / name
                              :op1 ""UK""))
                  :ARG1-of (h / have-degree-91
                        :ARG2 (h2 / high-02
                              :ARG1 r)
                        :ARG3 (m / most)))
            :ARG1-of (h3 / have-degree-91
                  :ARG2 (g2 / good-02
                        :ARG1 p2)
                  :ARG3 (m2 / most)
                  :ARG5 c2)))"
"until the Barnett formula gets scrapped . Please vote for independence , please . Don't choke like last time .","# ::snt until the Barnett formula gets scrapped . Please vote for independence , please . Don't choke like last time .
(m / multi-sentence
      :snt1 (b / be-temporally-at-91
            :ARG2 (u / until
                  :op1 (s / scrap-01
                        :ARG1 (f / formula
                              :name (n / name
                                    :op1 ""Barnett"")))))
      :snt2 (v / vote-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (ii / independence))
      :snt3 (c / choke-01
            :polarity -
            :mode imperative
            :polite +
            :ARG0 (y2 / you)
            :ARG1-of (r / resemble-01
                  :time (l / last))
            :ARG2-of r))"
English tax payers support their every need . Bit like mummies changing their shitty nappies .,"# ::snt English tax payers support their every need . Bit like mummies changing their shitty nappies .
(m / multi-sentence
      :snt1 (s / support-01
            :ARG0 (p / person
                  :ARG0-of (p2 / pay-01
                        :ARG1 (t / tax))
                  :mod (c / country
                        :name (n / name
                              :op1 ""England"")))
            :ARG1 (t2 / thing
                  :ARG1-of (n2 / need-01
                        :ARG0 p)
                  :mod (e / every)))
      :snt2 (r / resemble-01
            :ARG1 (m2 / mummies)
            :ARG2 (c2 / change-01
                  :ARG0 m2
                  :ARG1 (n3 / nappy
                        :poss m2
                        :mod (s2 / shitty)))
            :degree (b / bit)))"
Do you think Scottish people pay any tax ? Is it only English people that pay tax ?,"# ::snt Do you think Scottish people pay any tax ? Is it only English people that pay tax ?
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (y / you)
            :ARG1 (p / pay-01
                  :ARG0 (p2 / person
                        :mod (c / country
                              :name (n / name
                                    :op1 ""Scotland"")))
                  :ARG1 (t2 / tax-01
                        :mod (a / any)))
            :polarity (a2 / amr-unknown))
      :snt2 (p3 / pay-01
            :ARG0 (p4 / person
                  :mod (c2 / country
                        :name (n2 / name
                              :op1 ""England""))
                  :mod (o / only))
            :ARG1 (t3 / tax-01)
            :polarity (a3 / amr-unknown)))"
Those who aren't smacked out on heroine probably do . But the English hav <URL>,"# ::snt Those who aren't smacked out on heroine probably do . But the English hav <URL>
(m / multi-sentence
      :snt1 (p / probable
            :domain (d / do-02
                  :ARG0 (p2 / person
                        :ARG1-of (s / smack-02
                              :polarity -
                              :ARG2 (h / heroine)))))
      :snt2 (c / contrast-01
            :ARG2 (p3 / person
                  :mod (c2 / country
                        :name (n / name
                              :op1 ""England"")))))"
What's the name of this woman who keeos knocking people out ?,"# ::snt What's the name of this woman who keeos knocking people out ?
(n / name-01
      :ARG1 (w / woman
            :mod (t / this)
            :ARG0-of (k / knock-out-03
                  :ARG1 (p / person)))
      :ARG2 (a / amr-unknown))"
"rejected the Barnett formula yet ? Hahaha , you'll flounder after Indy . %","# ::snt rejected the Barnett formula yet ? Hahaha , you'll flounder after Indy . %
(m / multi-sentence
      :snt1 (r / reject-01
            :ARG1 (f / formula
                  :name (n / name
                        :op1 ""Barnett""))
            :time (y / yet))
      :snt2 (f2 / flounder-01
            :ARG1 (y2 / you)
            :time (a / after
                  :op1 (t / team
                        :name (n2 / name
                              :op1 ""Indy"")))
            :mod (h / haha
                  :mode expressive)))"
the barnett formula saw a drop in funding for Scotland,"# ::snt the barnett formula saw a drop in funding for Scotland
(s / see-01
      :ARG0 (f / formula
            :name (n / name
                  :op1 ""Barnett""
                  :op2 "" formula""))
      :ARG1 (d / drop-01
            :ARG1 (f2 / fund-01
                  :ARG1 (c / country
                        :name (n2 / name
                              :op1 ""Scotland"")))))"
"dont want control , want rid of you lot . Parasite nation","# ::snt dont want control , want rid of you lot . Parasite nation
(m / multi-sentence
      :snt1 (w / want-01
            :polarity -
            :ARG0 (y / you)
            :ARG1 (c / control-01))
      :snt2 (w2 / want-01
            :ARG0 (ii / i)
            :ARG1 (r / rid-01
                  :ARG0 ii
                  :ARG1 (y2 / you
                        :mod (l / lot))))
      :snt3 (n / nation
            :mod (p / parasite)))"
