comment,amr
"Please tell me that you've seen mine and poll , we've had an argument about this for over a year and we've actually got polls on this right now , it's legit , split down the middle <URL>","# ::snt Please tell me that you've seen mine and poll , we've had an argument about this for over a year and we've actually got polls on this right now , it's legit , split down the middle <URL>
(t / tell-01
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (s / see-01
                  :ARG0 y
                  :ARG1 (a2 / and
                        :op1 (t2 / thing
                              :poss (ii / i))
                        :op2 (p / poll-01
                              :ARG0 ii)))
            :op2 (a3 / argue-02
                  :ARG0 ii
                  :ARG1 y
                  :ARG2 (t3 / this)
                  :duration (o / over
                        :op1 (t4 / temporal-quantity
                              :quant 1
                              :unit (y2 / year))))
            :op3 (g / get-01
                  :ARG0 (w / we)
                  :ARG1 (p2 / poll-01
                        :topic t3)
                  :ARG1-of (a4 / actual-02)
                  :time (n / now
                        :mod (r / right)))
            :op4 (l / legitimate-02
                  :ARG1 a2)
            :op5 (s2 / split-01
                  :location (m / middle)
                  :direction (d / down)))
      :ARG2 ii)"
"It should be praised by God's , oh wait , GODS MADE THIS BRILLIANT IDEA ! ! !","# ::snt It should be praised by God's , oh wait , GODS MADE THIS BRILLIANT IDEA ! ! !
(m / multi-sentence
      :snt1 (r / recommend-01
            :ARG1 (p / praise-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""God""))
                  :ARG1 (ii / it)))
      :snt2 (w / wait-01
            :mode imperative
            :ARG1 (y / you)
            :mod (o / oh))
      :snt3 (m2 / make-01
            :mode expressive
            :ARG0 p2
            :ARG1 (ii2 / idea
                  :mod (b / brilliant)
                  :mod (t / this))))"
