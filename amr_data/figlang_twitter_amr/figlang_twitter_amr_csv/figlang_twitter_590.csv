comment,amr
Dear - I've been waiting for yrs to see you live . Was on at for presale and gen . Bots sold out .,"# ::snt Dear - I've been waiting for yrs to see you live . Was on at for presale and gen . Bots sold out .
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (w / wait-01
                  :ARG1 (ii / i)
                  :ARG2 (s2 / see-01
                        :ARG0 ii
                        :ARG1 (l / live-01
                              :ARG0 (y / you)))
                  :duration (m2 / multiple
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (y2 / year))))
            :ARG2 y
            :mod (d / dear))
      :snt2 (a / and
            :op1 (b / be-located-at-91
                  :ARG1 ii
                  :ARG2 (a2 / and
                        :op1 (p / presale)
                        :op2 (c / company
                              :name (n / name
                                    :op1 ""Gen""
                                    :op2 ""Bots""))))
            :op2 (s3 / sell-out-03
                  :ARG1 c)))"
"Saw them at Livestock ? years ago . Want to see again , but tix are $ face value .","# ::snt Saw them at Livestock ? years ago . Want to see again , but tix are $ face value .
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (ii / i)
            :ARG1 (t / they)
            :location (e / event
                  :name (n / name
                        :op1 ""Livestock""))
            :time (b / before
                  :op1 (n2 / now)
                  :quant (m2 / multiple
                        :op1 (t2 / temporal-quantity
                              :quant 1
                              :unit (y / year)))))
      :snt2 (c / contrast-01
            :ARG1 (w / want-01
                  :ARG0 (ii2 / i)
                  :ARG1 (s2 / see-01
                        :ARG0 ii2
                        :mod (a / again)))
            :ARG2 (v / value-01
                  :ARG1 (p / product
                        :name n
                        :op1 ""Tix""))
            :ARG2 (m3 / monetary-quantity
                  :quant 1
                  :unit (d / dollar))
            :mod (f / face)))"
