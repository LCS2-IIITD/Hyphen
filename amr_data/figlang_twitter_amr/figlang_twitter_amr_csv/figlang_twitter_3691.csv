comment,amr
Warning to all Cathay Pacific Price Promise Australian customers : CX will incorrectly add CC fees in all comparisons,"# ::snt Warning to all Cathay Pacific Price Promise Australian customers : CX will incorrectly add CC fees in all comparisons
(w / warn-01
      :ARG1 (a / add-02
            :ARG0 (c / company
                  :name (n / name
                        :op1 ""CX""))
            :ARG1 (f / fee
                  :mod (c2 / company
                        :name (n2 / name
                              :op1 ""CC"")))
            :ARG1-of (c3 / correct-02
                  :polarity -)
            :subevent-of (c4 / compare-01
                  :mod (a2 / all)))
      :ARG2 (c5 / customer
            :mod (c6 / company
                  :name (n3 / name
                        :op1 ""Cathay""
                        :op2 ""Pacific""
                        :op3 ""Price""
                        :op4 ""Promise""))
            :mod (c7 / country
                  :name (n4 / name
                        :op1 ""Australia""))
            :mod (a3 / all)))"
"Hi Terms and Conditions are available , right after you click on Price Promise , point No , please visit <URL>","# ::snt Hi Terms and Conditions are available , right after you click on Price Promise , point No , please visit <URL>
(m / multi-sentence
      :snt1 (a / available-02
            :ARG2 (a2 / and
                  :op1 (t / term)
                  :op2 (c / condition))
            :mod (h / hi))
      :snt2 (v / visit-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (p / point
                  :mod (n / no))
            :time (a3 / after
                  :op1 (c2 / click-01
                        :ARG0 y
                        :location (c3 / company
                              :name (n2 / name
                                    :op1 ""Pric""
                                    :op2 ""Promise"")))
                  :mod (r / right))))"
"I m sorry if you missed those details . Thank you , Mary","# ::snt I m sorry if you missed those details . Thank you , Mary
(m / multi-sentence
      :snt1 (s / sorry-01
            :ARG1 (ii / i)
            :ARG2 (m2 / miss-02
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Mary""))
                  :ARG1 (d / detail
                        :mod (t / that))))
      :snt2 (t2 / thank-01
            :ARG0 ii
            :ARG1 p))"
"Mary , I am sorry ( and disappointed ) if you ( and staff ) missed those details too . Thank You , Renato","# ::snt Mary , I am sorry ( and disappointed ) if you ( and staff ) missed those details too . Thank You , Renato
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (s2 / sorry-01
                        :ARG1 ii)
                  :op2 (d / disappoint-01
                        :ARG1 ii)
                  :condition (m2 / miss-02
                        :ARG0 (a2 / and
                              :op1 (p / person
                                    :name (n / name
                                          :op1 ""Mary""))
                              :op2 (p2 / person
                                    :ARG2-of (s3 / staff-01)))
                        :ARG1 (d2 / detail
                              :mod (t / that))
                        :mod (t2 / too)))
            :ARG2 p)
      :snt2 (t3 / thank-01
            :ARG0 ii
            :ARG1 (p3 / person
                  :name (n2 / name
                        :op1 ""Renato""))))"
"Hi , I am sorry to hear that you are disappointed . Consider the feedback form <URL> ...","# ::snt Hi , I am sorry to hear that you are disappointed . Consider the feedback form <URL> ...
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (s2 / sorry-01
                  :ARG1 ii
                  :ARG2 (h / hear-01
                        :ARG0 ii
                        :ARG1 (d / disappoint-01
                              :ARG1 (y / you))))
            :ARG2 y)
      :snt2 (c / consider-02
            :mode imperative
            :ARG0 y)
      :ARG1 (f / form
            :mod (f2 / feedback)))"
