comment,amr
:30 Polling site PS14 Name nor Address found . Told Affidavit will allow Vote . Logan at Elections said NO Must Vote at location Register !,"# ::snt :30 Polling site PS14 Name nor Address found . Told Affidavit will allow Vote . Logan at Elections said NO Must Vote at location Register !
(m / multi-sentence
      :snt1 (f / find-01
            :polarity -
            :ARG1 (a / and
                  :op1 (n / name
                        :quant 14)
                  :op2 (a2 / address
                        :quant 14))
            :location (s / site
                  :ARG0-of (p / poll-01))
            :time (d / date-entity
                  :time "":30""))
      :snt2 (a3 / allow-01
            :ARG0 (t / thing
                  :ARG1-of (a4 / allege-01)
                  :mod (o / old))
            :ARG1 (v / vote-01))
      :snt3 (s2 / say-01
            :ARG0 (p2 / person
                  :name n
                  :op1 ""Logan"")
            :location (e / elect-01))
      :ARG1 (o2 / obligate-01
            :polarity -
            :ARG2 (v2 / vote-01)
            :location (l / location)))"
You can check your registration status at <URL> ! - JR,"# ::snt You can check your registration status at <URL> ! - JR
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (p / possible-01
            :ARG1 (c / check-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""RJB""))
                  :ARG1 (s2 / status
                        :mod (r / register-02
                              :ARG1 p2))
                  :location (u / url-entity)))
      :ARG2 p2)"
Thanks . ... I Voted at the correct location . And Went back to P . S and retrieved my Affidavit Oath and Ballot Vote . Not twice ! ! !,"# ::snt Thanks . ... I Voted at the correct location . And Went back to P . S and retrieved my Affidavit Oath and Ballot Vote . Not twice ! ! !
(m / multi-sentence
      :snt1 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you))
      :snt2 (a / and
            :op1 (v / vote-01
                  :ARG0 (ii2 / i)
                  :location (l / location
                        :ARG1-of (c / correct-02)))
            :op2 (a2 / and
                  :op1 (g / go-02
                        :ARG0 ii2
                        :ARG4 (c2 / city
                              :name (n / name
                                    :op1 ""P.""
                                    :op2 ""S""))
                        :direction (b / back))
                  :op2 (r / retrieve-01
                        :ARG0 ii2
                        :ARG1 (a3 / and
                              :op1 (t2 / thing
                                    :name n
                                    :op1 ""Affidavit""
                                    :op2 ""Oath"")
                              :poss ii2)
                        :op2 (v2 / vote-01
                              :ARG1 (b2 / ballot)))))
      :snt3 (h / have-frequency-91
            :polarity -
            :ARG2 2
            :mode expressive))"
