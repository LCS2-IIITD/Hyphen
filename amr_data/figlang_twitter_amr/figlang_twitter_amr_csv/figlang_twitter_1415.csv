comment,amr
: Donald Trump says vote push for election recounts is a scam <URL> via,"# ::snt : Donald Trump says vote push for election recounts is a scam <URL> via
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Donald""
                  :op2 ""Trump""))
      :ARG1 (s2 / scam-01
            :ARG1 (p2 / push-04
                  :ARG1 (r / recount-01
                        :ARG1 (e / elect-01))))
      :medium (u / url-entity
            :value ""URL""))"
FRAUDULENT Trump votes were found in only one out of voting precincts of W <URL>,"# ::snt FRAUDULENT Trump votes were found in only one out of voting precincts of W <URL>
(f / find-01
      :ARG1 (v / vote-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Trump""))
            :ARG0-of (p2 / protest-01))
      :location (p3 / precinct
            :quant 1
            :mod (o / only)
            :ARG1-of (ii / include-91
                  :ARG2 (p4 / precinct
                        :mod (v2 / vote-01)
                        :location (s / state
                              :name (n2 / name
                                    :op1 ""W""))))))"
and many fraudulent votes for Clinton were found during the election from machines owned by Soros .,"# ::snt and many fraudulent votes for Clinton were found during the election from machines owned by Soros .
(a / and
      :op2 (f / find-01
            :ARG1 (v / vote-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Clinton""))
                  :mod (f2 / fraudulent)
                  :quant (m / many))
            :time (e / elect-01)
            :instrument (m2 / machine
                  :ARG1-of (o / own-01
                        :ARG0 (p2 / person
                              :name (n2 / name
                                    :op1 ""Soros""))))))"
State who has now had to adjust Trump lead from to to reflect the FRAUD,"# ::snt State who has now had to adjust Trump lead from to to reflect the FRAUD
(s / state
      :ARG0-of (o / obligate-01
            :ARG2 (a / adjust-01
                  :ARG0 s
                  :ARG1 (l / lead-02
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""Trump"")))
                  :ARG2 (r / reflect-01
                        :ARG1 l
                        :ARG2 (l2 / law
                              :name n
                              :op1 ""FRAUD""))))
      :time (n2 / now))"
and where is the reliable source to this ? Give a link please .,"# ::snt and where is the reliable source to this ? Give a link please .
(m / multi-sentence
      :snt1 (a / and
            :op2 (b / be-located-at-91
                  :ARG1 (s / source-02
                        :ARG1 (t / this)
                        :ARG1-of (r / rely-01
                              :ARG1-of (p / possible-01)))
                  :ARG2 (a2 / amr-unknown)))
      :snt2 (g / give-01
            :mode imperative
            :polite +
            :ARG0 (y / you)
            :ARG1 (l / link)))"
"Again proof , with Jill Stein paying for a recount , they had to admit the FRAUD","# ::snt Again proof , with Jill Stein paying for a recount , they had to admit the FRAUD
(p / prove-01
      :ARG1 (o / obligate-01
            :ARG1 (t / they)
            :ARG2 (a / admit-01
                  :ARG0 t
                  :ARG1 (b / blame-01))
            :ARG1-of (c / cause-01
                  :ARG0 (p2 / pay-01
                        :ARG0 (p3 / person
                              :name (n / name
                                    :op1 ""Jill""
                                    :op2 ""Stein""))
                        :ARG3 (r / recount-01))))
      :mod (a2 / again))"
"Jill Stein is just a pawn under Soros , who's funneling her money . Not proof of fraud .","# ::snt Jill Stein is just a pawn under Soros , who's funneling her money . Not proof of fraud .
(m / multi-sentence
      :snt1 (p / pawn
            :domain (p2 / person
                  :name (n / name
                        :op1 ""Jill""
                        :op2 ""Stein""))
            :prep-under (p3 / person
                  :name (n2 / name
                        :op1 ""Soros"")
                  :ARG0-of (f / funnel-01
                        :ARG1 (m2 / money
                              :poss p2)
                        :ARG2 p2))
            :mod (j / just))
      :snt2 (p4 / prove-01
            :polarity -
            :ARG1 (d / defraud-01)))"
and what about the many illegal immigrant votes for Clinton ? I wonder .,"# ::snt and what about the many illegal immigrant votes for Clinton ? I wonder .
(w / wonder-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op2 (a2 / amr-unknown
                  :topic (v / vote-01
                        :ARG0 (p / person
                              :ARG0-of (ii2 / immigrate-01)
                              :ARG1-of (l / legal-02
                                    :polarity -))
                        :ARG1 (p2 / person
                              :name (n / name
                                    :op1 ""Clinton""))
                        :quant (m / many)))))"
proof . Get to work on it or be man enough to admit you can't and you were wrong .,"# ::snt proof . Get to work on it or be man enough to admit you can't and you were wrong .
(m / multi-sentence
      :snt1 (p / prove-01)
      :snt2 (o / or
            :op1 (g / get-05
                  :mode imperative
                  :ARG0 (y / you)
                  :ARG1 y
                  :ARG2 (w / work-01
                        :ARG0 y
                        :ARG1 (ii / it)))
            :op2 (h / have-degree-91
                  :mode imperative
                  :ARG1 y
                  :ARG2 (m2 / man)
                  :ARG3 (e / enough)
                  :ARG6 (a / admit-01
                        :ARG0 y
                        :ARG1 (p2 / possible-01
                              :polarity -
                              :ARG1 (d / do-02
                                    :ARG0 y)))))
      :snt3 (w2 / wrong-04
            :ARG1 (y2 / you)))"
