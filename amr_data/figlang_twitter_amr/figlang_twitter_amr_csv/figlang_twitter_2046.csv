comment,amr
If the Giants can't get Matt Rhule - - who grew up in New York - - out of Waco they should just shut it down completely,"# ::snt If the Giants can't get Matt Rhule - - who grew up in New York - - out of Waco they should just shut it down completely
(h / have-condition-91
      :ARG1 (r / recommend-01
            :ARG1 (s / shut-down-05
                  :ARG0 (t / team
                        :name (n / name
                              :op1 ""Gers""))
                  :ARG1 t
                  :mod (j / just)
                  :ARG1-of (c / complete-02)))
      :ARG2 (p / possible-01
            :polarity -
            :ARG1 (g / get-05
                  :ARG0 t
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""Matt""
                              :op2 ""Rhule"")
                        :ARG1-of (g2 / grow-up-04
                              :location (c2 / city
                                    :name (n3 / name
                                          :op1 ""New""
                                          :op2 ""York""))))
                  :ARG2 (c3 / city
                        :name (n4 / name
                              :op1 ""Waco"")))))"
So is Gettleman running the search ? Gettleman is the wild card ...,"# ::snt So is Gettleman running the search ? Gettleman is the wild card ...
(m / multi-sentence
      :snt1 (r / run-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Gettleman""))
            :ARG1 (s / search-01)
            :polarity (a / amr-unknown))
      :snt2 (c / card
            :mod (w / wild)
            :domain p))"
"he is and they're sticking with Gettleman . again , if they can't get Rhule in this particular circumstance , they have no reason to exist","# ::snt he is and they're sticking with Gettleman . again , if they can't get Rhule in this particular circumstance , they have no reason to exist
(m / multi-sentence
      :snt1 (a / and
            :op1 (h / he)
            :op2 (s / stick-01
                  :ARG1 (t / they)
                  :ARG2 (p / person
                        :name (n / name
                              :op1 ""Gettleman""))))
      :snt2 (h2 / have-condition-91
            :ARG1 (h3 / have-03
                  :polarity -
                  :ARG0 (t2 / they)
                  :ARG1 (r / reason
                        :ARG0-of (c / cause-01
                              :ARG1 (e / exist-01
                                    :ARG1 t2))))
            :ARG2 (p2 / possible-01
                  :polarity -
                  :ARG1 (g / get-01
                        :ARG0 t2
                        :ARG1 p
                        :name (n2 / name
                              :op1 ""Rhule""))
                  :time (c2 / circumstance
                        :mod (t3 / this)
                        :mod (p3 / particular))))
      :mod (a2 / again))"
