comment,amr
"see its weird cause "" progressives "" have range--u all think identically","# ::snt see its weird cause "" progressives "" have range--u all think identically
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (y / you)
            :ARG1 (w / weird
                  :domain (c / cause-01
                        :ARG0 (h / have-03
                              :ARG0 (p / person
                                    :ARG1-of (p2 / progressive-02))
                              :ARG1 (r / range-01)))))
      :snt2 (t / think-01
            :ARG0 (y2 / you
                  :mod (a / all))
            :manner (ii / identical-01)))"
"Yes , they have a lot of range ... between their <URL>","# ::snt Yes , they have a lot of range ... between their <URL>
(h / have-03
      :ARG0 (t / they)
      :ARG1 (r / range-01
            :ARG2 (u / url-entity
                  :value ""https://www.christianforums.com"")
            :ARG3 (l / lot)))"
"pls use your extreme , unbiased logic to argue how those points are wrong","# ::snt pls use your extreme , unbiased logic to argue how those points are wrong
(u / use-01
      :ARG0 (w / we)
      :ARG1 (l / logic
            :poss (y / you)
            :mod (e / extreme)
            :ARG1-of (b / bias-01
                  :polarity -))
      :ARG2 (a / argue-01
            :ARG0 w
            :ARG1 (t / thing
                  :manner-of (w2 / wrong-04
                        :ARG1 (p / point-04
                              :mod (t2 / that))))))"
"You haven't made any points . Now go away , I ' <URL>","# ::snt You haven't made any points . Now go away , I ' <URL>
(m / multi-sentence
      :snt1 (p / point-04
            :polarity -
            :ARG0 (y / you)
            :mod (a / any))
      :snt2 (g / go-02
            :mode imperative
            :ARG0 y)
      :ARG4 (a2 / away)
      :time (n / now))"
"ahhhh , youre not gonna take up that civil challenge for counters ? Classic","# ::snt ahhhh , youre not gonna take up that civil challenge for counters ? Classic
(t / take-up-31
      :polarity -
      :ARG0 (y / you)
      :ARG1 (c / challenge-01
            :mod (c2 / civil)
            :mod (t2 / that))
      :ARG3 (c3 / counter)
      :ARG1-of (r / request-confirmation-91)
      :mod (a / ah
            :mode expressive))"
If you're so well versed you should know both <URL>,"# ::snt If you're so well versed you should know both <URL>
(h / have-condition-91
      :ARG1 (r / recommend-01
            :ARG1 (k / know-01
                  :ARG0 (y / you)
                  :ARG1 (b / both)))
      :ARG2 (v / verse-01
            :ARG1 y
            :ARG1-of (w / well-09
                  :degree (s / so))))"
