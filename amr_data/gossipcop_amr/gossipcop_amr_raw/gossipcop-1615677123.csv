comment,amr
I love you Karen! ALWAYS! ALWAYS! ALWAYS!,"# ::snt I love you Karen! ALWAYS! ALWAYS! ALWAYS!
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (l / love-01
            :ARG0 ii
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Karen""))
            :time (a / always))
      :ARG2 p)"
"You are the cutest, Andrea. Always a good friend! (Confession time: I had no faith they would come back. At all.)","# ::snt You are the cutest, Andrea. Always a good friend! (Confession time: I had no faith they would come back. At all.)
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (h / have-degree-91
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Andrea""))
                  :ARG2 (c / cute)
                  :ARG3 (m2 / most))
            :ARG2 p)
      :snt2 (h2 / have-rel-role-91
            :ARG0 (p2 / person)
            :ARG2 (f / friend
                  :ARG1-of (g / good-02))
            :time (a / always))
      :snt3 (h3 / have-03
            :polarity -
            :ARG0 (ii / i)
            :ARG1 (f2 / faith
                  :topic (c2 / come-01
                        :ARG1 (t / they)
                        :direction (b / back)))
            :mod (a2 / at-all)
            :ARG1-of (c3 / confession-00)))"
"I'm happy for you Karen! Not your team, but for you!","# ::snt I'm happy for you Karen! Not your team, but for you!
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (ii / i)
            :ARG1 (h / happy-01
                  :ARG1 ii
                  :ARG2 (p / person
                        :name (n / name
                              :op1 ""Karen"")))
            :ARG2 p)
      :snt2 (c / contrast-01
            :ARG1 (t / team
                  :polarity -
                  :poss (y / you))
            :ARG2 (b / benefit-01
                  :ARG1 (y2 / you))))"
I love it.,"# ::snt I love it.
(l / love-01
      :ARG0 (ii / i)
      :ARG1 (ii2 / it))"
Little Scissors,"# ::snt Little Scissors
(t / thing
      :name (n / name
            :op1 ""Little""
            :op2 ""Scissors""))"
Che seemed addled. I bet there was conflicting direction in the control room. Not sure to pull him or finish update.,"# ::snt Che seemed addled. I bet there was conflicting direction in the control room. Not sure to pull him or finish update.
(m / multi-sentence
      :snt1 (s / seem-01
            :ARG1 (a / addle-01
                  :ARG1 (p / person
                        :name (n / name
                              :op1 ""Che""))))
      :snt2 (b / bet-01
            :ARG0 (ii / i)
            :ARG2 (c / conflict-01
                  :ARG0 (d / direction)
                  :location (r / room
                        :mod (c2 / control-01))))
      :snt3 (s2 / sure-02
            :polarity -
            :ARG1 (o / or
                  :op1 (p2 / pull-01
                        :ARG1 (h / he))
                  :op2 (f / finish-01
                        :ARG1 (u / update-02)))))"
"Probably has to do with talking about something that happened the same night. Had to wing it, it appeared.","# ::snt Probably has to do with talking about something that happened the same night. Had to wing it, it appeared.
(m / multi-sentence
      :snt1 (h / have-to-do-with-04
            :ARG1 (t / talk-01
                  :ARG1 (s / something
                        :time (d / date-entity
                              :dayperiod (n / night)
                              :ARG1-of (s2 / same-01))))
            :mod (p / probable))
      :snt2 (a / and
            :op1 (o / obligate-01
                  :ARG2 (w / wing-01
                        :ARG1 (ii / it)))
            :op2 (a2 / appear-01
                  :ARG1 ii)))"
maybe he got as distracted by Melissa McCarthy as we did...?,"# ::snt maybe he got as distracted by Melissa McCarthy as we did...?
(p / possible-01
      :ARG1 (h / have-degree-91
            :ARG1 (h2 / he)
            :ARG2 (d / distract-01
                  :ARG1 h2
                  :ARG2 (p2 / person
                        :name (n / name
                              :op1 ""Melissa""
                              :op2 ""McCarthy"")))
            :ARG3 (e / equal)
            :ARG4 (d2 / distract-01
                  :ARG0 (w / we)
                  :ARG1 h2))
      :polarity (a / amr-unknown))"
