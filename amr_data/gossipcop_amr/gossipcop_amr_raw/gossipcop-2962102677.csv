comment,amr
"Anyhow, let me know if you want to buy the rights!","# ::snt Anyhow, let me know if you want to buy the rights!
(l / let-know-07
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / i)
      :ARG2 (t / truth-value
            :polarity-of (w / want-01
                  :ARG0 y
                  :ARG1 (b / buy-01
                        :ARG0 y
                        :ARG1 (r / right-05))))
      :mod (a / anyhow))"
That's funny,"# ::snt That's funny
(f / funny
      :domain (t / that))"
Did she lose a bet or is she doing a make a wish for Pierre,"# ::snt Did she lose a bet or is she doing a make a wish for Pierre
(a / amr-choice
      :op1 (l / lose-03
            :ARG0 (s / she)
            :ARG1 (b / bet-01
                  :ARG0 s))
      :op2 (d / do-02
            :ARG0 s
            :ARG1 (w / wish-01
                  :ARG0 s
                  :ARG2 (p / person
                        :name (n / name
                              :op1 ""Pierre"")))))"
I'm glad someone else is seeing Susan Sarandon on this game I thought I was hallucinating,"# ::snt I'm glad someone else is seeing Susan Sarandon on this game I thought I was hallucinating
(g / glad-02
      :ARG0 (s / see-01
            :ARG0 (s2 / someone
                  :mod (e / else))
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Susan""
                        :op2 ""Sarandon""))
            :location (g2 / game
                  :mod (t / this)))
      :ARG1 (ii / i)
      :ARG1-of (c / cause-01
            :ARG0 (t2 / think-01
                  :ARG0 ii
                  :ARG1 (h / hallucinate-01
                        :ARG0 ii))))"
She was a terrible person in that movie. Until the end of course,"# ::snt She was a terrible person in that movie. Until the end of course
(m / multi-sentence
      :snt1 (p / person
            :ARG1-of (t / terrible-01)
            :domain (s / she)
            :location (m2 / movie
                  :mod (t2 / that)))
      :snt2 (u / until
            :op1 (e / end-01
                  :mod (o / of-course))))"
