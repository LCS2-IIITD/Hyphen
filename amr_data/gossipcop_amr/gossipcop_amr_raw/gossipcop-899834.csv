comment,amr
Yesss!! John.,"# ::snt Yesss!! John.
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (y / yesss
            :mode expressive)
      :ARG2 (p / person
            :name (n / name
                  :op1 ""John"")))"
Congrats to John and Caitlin on this very happy baby news and I know their child will be a cutie,"# ::snt Congrats to John and Caitlin on this very happy baby news and I know their child will be a cutie
(a / and
      :op1 (c / congratulate-01
            :ARG0 (ii / i)
            :ARG1 (a2 / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""John""))
                  :op2 (p2 / person
                        :name (n2 / name
                              :op1 ""Caitlin"")))
            :ARG2 (n3 / news
                  :mod (b / baby)
                  :ARG1-of (h / happy-01
                        :degree (v / very))
                  :mod (t / this)))
      :op2 (k / know-01
            :ARG0 ii
            :ARG1 (c2 / cutie
                  :domain (p3 / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 a2
                              :ARG2 (c3 / child))))))"
congratulations!,"# ::snt congratulations!
(c / congratulate-01)"
Rebbeca is pissed off,"# ::snt Rebbeca is pissed off
(p / piss-off-02
      :ARG1 (p2 / person
            :name (n / name
                  :op1 ""Rebbeca"")))"
"Good grief, they're not even married yet! Why the rush? Unless she's ensuring future child support payments in case it doesn't work out","# ::snt Good grief, they're not even married yet! Why the rush? Unless she's ensuring future child support payments in case it doesn't work out
(m / multi-sentence
      :snt1 (g / grief
            :mode expressive
            :ARG1-of (g2 / good-02)
            :domain (m2 / marry-01
                  :polarity -
                  :ARG1 (t / they)
                  :mod (e / even)
                  :time (y / yet)))
      :snt2 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (r / rush-01))
      :snt3 (e2 / ensure-01
            :polarity -
            :ARG0 (s / she)
            :ARG1 (p / pay-01
                  :ARG3 (s2 / support-01
                        :ARG1 (c2 / child))
                  :time (f / future))
            :condition (w / work-out-02
                  :polarity -
                  :ARG1 (ii / it))))"
Didn't that show get cancelled already?,"# ::snt Didn't that show get cancelled already?
(c / cancel-01
      :polarity -
      :ARG1 (s / show-04
            :mod (t / that))
      :time (a / already)
      :ARG1-of (r / request-confirmation-91))"
Congratulations!,"# ::snt Congratulations!
(c / congratulate-01
      :mode expressive)"
How old is Uncle Jessie? You made it this far without a child bro. Poor kid doesnt want you at his kindergarten class with a walker and people thinking youre his grandpa.,"# ::snt How old is Uncle Jessie? You made it this far without a child bro. Poor kid doesnt want you at his kindergarten class with a walker and people thinking youre his grandpa.
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Uncle""
                  :op2 ""Jessie"")
            :age (a / amr-unknown))
      :snt2 (m2 / make-18
            :ARG0 (y / you)
            :ARG1 (f / far
                  :mod (t / this))
            :manner (a2 / accompany-01
                  :polarity -
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 y
                              :ARG2 (b / bro)))
                  :ARG1 y))
      :snt3 (w / want-01
            :polarity -
            :ARG0 (k / kid
                  :mod (p3 / poor))
            :ARG1 (b2 / be-located-at-91
                  :ARG1 (y2 / you)
                  :ARG2 (c / class
                        :mod (k2 / kindergarten)
                        :poss k
                        :accompanier (w2 / walker)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (t2 / think-01
                        :ARG0 (p4 / person)
                        :ARG1 (h2 / have-rel-role-91
                              :ARG0 y2
                              :ARG1 k
                              :ARG2 (g / grandpa))))))"
Congratulations John &amp; Caitlin Your CHILDREN are going to be gorgeous,"# ::snt Congratulations John &amp; Caitlin Your CHILDREN are going to be gorgeous
(a / and
      :op1 (c / congratulate-01
            :ARG1 (a2 / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""John""))
                  :op2 (p2 / person
                        :name (n2 / name
                              :op1 ""amp""))))
      :op2 (g / gorgeous
            :domain (p3 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (y / you)
                        :ARG2 (c2 / child)
                        :ARG0 p3)
                  :ARG1 p
                  :ARG2 c2)))"
LOVELY...................,"# ::snt LOVELY...................
(b / beautiful-02)"
This guy doesnt have a kid yet!??,"# ::snt This guy doesnt have a kid yet!??
(h / have-05
      :polarity -
      :ARG0 (g / guy
            :mod (t / this))
      :ARG1 (k / kid)
      :time (y / yet)
      :polarity (a / amr-unknown))"
"anyone see the SVU episode where he's impregnating chicks left and right, poking holes in condoms and what not? Wild episode.","# ::snt anyone see the SVU episode where he's impregnating chicks left and right, poking holes in condoms and what not? Wild episode.
(m / multi-sentence
      :snt1 (s / see-01
            :ARG0 (a / anyone)
            :ARG1 (e / episode
                  :mod (b / broadcast-program
                        :name (n / name
                              :op1 ""SVU""))
                  :subevent (a2 / and
                        :op1 (ii / impregnate-01
                              :ARG0 (h / he)
                              :ARG1 (c / chick
                                    :ARG1-of (l / left-20)))
                        :op2 (p / poke-01
                              :ARG0 h
                              :ARG1 (h2 / hole)
                              :ARG2 (c2 / condom))
                        :op3 (e2 / et-cetera))))
      :snt2 (e3 / episode
            :mod (w / wild)))"
donkeys and lemons i tell em!,"# ::snt donkeys and lemons i tell em!
(t / tell-01
      :ARG0 (ii / i)
      :ARG1 (a / and
            :op1 (d / donkey)
            :op2 (l / lemon))
      :ARG2 (t2 / they))"
Cut It Out,"# ::snt Cut It Out
(c / cut-out-06
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / it))"
Have mercy,"# ::snt Have mercy
(h / have-03
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (m / mercy))"
Congratulation to the both of you,"# ::snt Congratulation to the both of you
(c / congratulate-01
      :ARG1 (y / you
            :mod (b / both)))"
So happy for them!!,"# ::snt So happy for them!!
(h / happy-01
      :ARG0 (t / they)
      :degree (s / so))"
