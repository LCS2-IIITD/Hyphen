comment,amr
good for her she knows that she needs help knowing that is the first step,"# ::snt good for her she knows that she needs help knowing that is the first step
(g / good-04
      :ARG1 (k / know-01
            :ARG0 (s / she)
            :ARG1 (n / need-01
                  :ARG0 s
                  :ARG1 (h / help-01
                        :ARG1 s)))
      :ARG2 s
      :ARG1-of (c / cause-01
            :ARG0 (k2 / know-01
                  :ARG0 s
                  :ARG1 (t / thing
                        :ARG4-of (s2 / step-01)
                        :ord (o / ordinal-entity
                              :value 1)
                        :domain n))))"
Yes.,"# ::snt Yes.
(y / yes)"
"Yes, I knew I had a problem w alcohol and my husband helped me get to detox. It was tough but Im sober yrs. and it feels great!","# ::snt Yes, I knew I had a problem w alcohol and my husband helped me get to detox. It was tough but Im sober yrs. and it feels great!
(m / multi-sentence
      :snt1 (a / and
            :op1 (k / know-01
                  :ARG0 (ii / i)
                  :ARG1 (h / have-03
                        :ARG0 ii
                        :ARG1 (p / problem
                              :topic (a2 / alcohol))))
            :op2 (h2 / help-01
                  :ARG0 (p2 / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 ii
                              :ARG2 (h4 / husband)))
                  :ARG1 (g / get-05
                        :ARG1 ii
                        :ARG2 (d / detox))
                  :ARG2 ii))
      :snt2 (t / tough-02
            :ARG1 (ii2 / it)
            :concession-of (a3 / and
                  :op1 (s / sober-02
                        :ARG1 (ii3 / i)
                        :time (m2 / multiple
                              :op1 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (y / year))))
                  :op2 (f / feel-05
                        :ARG1 ii2)
                  :ARG2 (g2 / great))))"
No i have and still is trying to take care of myself and whatever problems i face along the way,"# ::snt No i have and still is trying to take care of myself and whatever problems i face along the way
(a / and
      :op1 (h / have-03
            :polarity -
            :ARG0 (ii / i))
      :op2 (t / try-01
            :ARG0 ii
            :ARG1 (c / care-03
                  :ARG0 ii
                  :ARG1 (a2 / and
                        :op1 ii
                        :op2 (p / problem
                              :ARG1-of (f / face-01
                                    :ARG0 ii
                                    :time (a3 / along
                                          :op1 (w / way)))
                              :mod (w2 / whatever))))
            :mod (s / still)))"
Salute Emma for recognizing and seeking help,"# ::snt Salute Emma for recognizing and seeking help
(s / salute-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Emma""))
      :ARG2 (a / and
            :op1 (r / recognize-02
                  :ARG0 p
                  :ARG1 (h / help-01
                        :ARG1 p))
            :op2 (s2 / seek-01
                  :ARG0 p
                  :ARG1 h)))"
"Good for her! The first step in getting the help you need is admitting you have personal ""battles"", accepting them and reaching out for the help you need to overcome them. Good luck to Emma and may she finds the help and peace she needs to heal!","# ::snt Good for her! The first step in getting the help you need is admitting you have personal ""battles"", accepting them and reaching out for the help you need to overcome them. Good luck to Emma and may she finds the help and peace she needs to heal!
(m / multi-sentence
      :snt1 (g / good-02
            :ARG2 (s / she))
      :snt2 (s2 / step-01
            :ARG1 (g2 / get-01
                  :ARG0 (y / you)
                  :ARG1 (h / help
                        :ARG1-of (n / need-01
                              :ARG0 y)))
            :ARG2 (a / and
                  :op1 (a2 / admit-01
                        :ARG0 y
                        :ARG1 (h2 / have-03
                              :ARG0 y
                              :ARG1 (b / belly
                                    :ARG1-of (p / personal-02))))
                  :op2 (a3 / accept-01
                        :ARG0 y
                        :ARG1 b)
                  :op3 (r / reach-03
                        :ARG0 y
                        :ARG2 (h3 / help
                              :ARG1-of (n2 / need-01
                                    :ARG0 y
                                    :purpose (o / overcome-01
                                          :ARG0 y
                                          :ARG1 b)))
                        :direction (o2 / out)))
            :ord (o3 / ordinal-entity
                  :value 1))
      :snt3 (a4 / and
            :op1 (l / luck
                  :ARG1-of (g3 / good-02)
                  :beneficiary (p2 / person
                        :name (n3 / name
                              :op1 ""Emma"")))
            :op2 (p3 / possible-01
                  :ARG1 (f / find-01
                        :ARG0 (p4 / person
                              :ARG1 (a5 / and
                                    :op1 (h4 / help)
                                    :op2 (p5 / peace)
                                    :ARG1-of (n4 / need-01
                                          :ARG0 p4
                                          :purpose (h5 / heal-01
                                                :ARG0 p4))))))))"
Yes...It helped...but God healed me!,"# ::snt Yes...It helped...but God healed me!
(c / contrast-01
      :ARG1 (h / help-01
            :ARG0 (ii / it))
      :ARG2 (h2 / heal-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""God""))
            :ARG1 (ii2 / i)))"
Take care look after yourself!,"# ::snt Take care look after yourself!
(l / look-after-07
      :mode imperative
      :ARG0 (y / you)
      :ARG1 y)"
"Yes, meds I was on were contradicting each other, sent me this mental unit hosp. I almost committed suicide, but chose hosp instead - the day I got out was the day Robin Williams chose my first option. Broke my but God has a calling for me bcuz I'm still here!","# ::snt Yes, meds I was on were contradicting each other, sent me this mental unit hosp. I almost committed suicide, but chose hosp instead - the day I got out was the day Robin Williams chose my first option. Broke my but God has a calling for me bcuz I'm still here!
(m / multi-sentence
      :snt1 (c / contradict-01
            :ARG0 (m2 / medication
                  :ARG1-of (t / take-01
                        :ARG0 (ii / i)))
            :ARG1 (o / other
                  :mod (e / each)))
      :snt2 (s / send-01
            :ARG0 m2
            :ARG1 ii
            :ARG2 (u / unit
                  :mod (m3 / mental)
                  :mod (t2 / this)))
      :snt3 (c2 / contrast-01
            :ARG1 (c3 / commit-02
                  :ARG0 (ii2 / i)
                  :ARG1 (s2 / suicide)
                  :mod (a / almost))
            :ARG2 (c4 / choose-01
                  :ARG0 ii2
                  :ARG1 (h / hosp)
                  :ARG1-of (ii3 / instead-of-91
                        :ARG2 c3
                        :ARG0 ii2
                        :ARG1 s2
                        :mod a)))
      :snt4 (c5 / contrast-01
            :ARG1 (d / day
                  :time-of (g / get-05
                        :ARG1 ii2
                        :ARG2 (o2 / out))
                  :domain (d2 / day
                        :time-of (c6 / choose-01
                              :ARG0 (p / person
                                    :name (n / name
                                          :op1 ""Robin""
                                          :op2 ""Williams""))
                              :ARG1 (o3 / option
                                    :poss ii2
                                    :ord (o4 / ordinal-entity
                                          :value 1)))))
            :ARG2 (h2 / have-03
                  :ARG0 (g2 / god)
                  :ARG1 (c7 / call-03
                        :ARG0 g2
                        :ARG1 ii2)
                  :ARG1-of (c8 / cause-01
                        :ARG0 (b / be-located-at-91
                              :ARG1 ii2
                              :ARG2 (h3 / here)
                              :mod (s3 / still))))))"
It's the best choice you can make to heal yourself. That way you can give the best version of you to the world &lt;3,"# ::snt It's the best choice you can make to heal yourself. That way you can give the best version of you to the world &lt;3
(m / multi-sentence
      :snt1 (c / choose-01
            :ARG0 (y / you)
            :ARG1 (ii / it)
            :ARG1-of (p / possible-01)
            :purpose (h / heal-01
                  :ARG0 y
                  :ARG1 y)
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (g / good-02
                        :ARG1 c)
                  :ARG3 (m2 / most)))
      :snt2 (p2 / possible-01
            :ARG1 (g2 / give-01
                  :ARG0 (y2 / you)
                  :ARG1 (v / version
                        :poss y2
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g3 / good-02
                                    :ARG1 v)
                              :ARG3 (m3 / most)))
                  :ARG2 (w / world)
                  :manner (w2 / way
                        :mod (t / that)))))"
GL to her!,"# ::snt GL to her!
(l / laugh-01
      :mode expressive
      :ARG0 (ii / i)
      :ARG2 (s / she)
      :manner (l2 / loud))"
if you cant take care of yourself you cant take care of others,"# ::snt if you cant take care of yourself you cant take care of others
(p / possible-01
      :polarity -
      :ARG1 (c / care-03
            :ARG0 (y / you)
            :ARG1 (p2 / person
                  :mod (o / other)))
      :condition (p3 / possible-01
            :polarity -
            :ARG1 (c2 / care-03
                  :ARG0 y
                  :ARG1 y)))"
"Naaa, I just accepted it and moved on.","# ::snt Naaa, I just accepted it and moved on.
(a / and
      :op1 (a2 / accept-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / it)
            :mod (j / just))
      :op2 (m / move-01
            :ARG1 ii)
      :mod (n / naa
            :mode expressive))"
