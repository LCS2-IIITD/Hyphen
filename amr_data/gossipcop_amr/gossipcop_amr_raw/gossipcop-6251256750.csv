comment,amr
Yeah she had a bad drinking problem that resulted in her getting replaced later in the show. Sucks cause nobody else could ever play Laurie like she did,"# ::snt Yeah she had a bad drinking problem that resulted in her getting replaced later in the show. Sucks cause nobody else could ever play Laurie like she did
(m / multi-sentence
      :snt1 (h / have-03
            :ARG0 (s / she)
            :ARG1 (p / problem
                  :topic (d / drink-01
                        :ARG0 s)
                  :ARG1-of (b / bad-07)
                  :ARG1-of (r / result-01
                        :ARG2 (r2 / replace-01
                              :ARG1 s
                              :time (a / after
                                    :op1 (s2 / show-04)))))
            :mod (y / yeah))
      :snt2 (s3 / suck-03
            :ARG1 (p2 / play-01
                  :ARG0 (n / nobody
                        :mod (e / else))
                  :ARG1 (p3 / person
                        :name (n2 / name
                              :op1 ""Laurie""))
                  :time (e2 / ever)
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (p4 / play-01
                              :ARG0 p3
                              :ARG1 p3)))))"
yes!!,"# ::snt yes!!
(y / yes)"
omg yes! drugs right?,"# ::snt omg yes! drugs right?
(d / drug
      :ARG1-of (r / request-confirmation-91)
      :mod (o / oh-my-god
            :mode expressive))"
Still unacceptable i literally love them together lol,"# ::snt Still unacceptable i literally love them together lol
(l / love-01
      :ARG0 (ii / i)
      :ARG1 (t / they)
      :manner (t2 / together)
      :ARG2-of (l2 / laugh-01
            :mode expressive
            :ARG0 ii
            :manner (l3 / loud))
      :mod (s / still))"
yoooooo I was so hurt when that started coolest dude in the group gets with the epitome of entitled and annoying,"# ::snt yoooooo I was so hurt when that started coolest dude in the group gets with the epitome of entitled and annoying
(h / hurt-01
      :ARG0 (s / start-01
            :ARG1 (g / get-01
                  :ARG0 (d / dude
                        :ARG1-of (h2 / have-degree-91
                              :ARG2 (c / cool-04
                                    :ARG1 d)
                              :ARG3 (m / most)
                              :ARG5 (g2 / group)))
                  :ARG1 (e / epitome-01
                        :ARG1 (a / and
                              :op1 (e2 / entitle-01)
                              :op2 (a2 / annoy-01)))))
      :ARG1 (ii / i)
      :degree (s2 / so))"
You clearly care enough to reply to my tweet,"# ::snt You clearly care enough to reply to my tweet
(h / have-degree-91
      :ARG1 (y / you)
      :ARG2 (c / care-01
            :ARG0 y
            :ARG1-of (c2 / clear-06))
      :ARG3 (e / enough)
      :ARG6 (r / reply-01
            :ARG0 y
            :ARG1 (t / thing
                  :ARG1-of (t2 / tweet-01
                        :ARG0 (ii / i)))))"
Unacceptable im reliving the entire Jackie &amp; Hyde relationship (which i found out has a name and everything lmao),"# ::snt Unacceptable im reliving the entire Jackie &amp; Hyde relationship (which i found out has a name and everything lmao)
(p / possible-01
      :polarity -
      :ARG1 (a / accept-01
            :ARG1 (r / relive-01
                  :ARG0 (ii / i)
                  :ARG1 (r2 / relation-03
                        :ARG0 (a2 / and
                              :op1 (p2 / person
                                    :name (n / name
                                          :op1 ""Jackie""))
                              :op2 (p3 / person
                                    :name (n2 / name
                                          :op1 ""amp""))
                              :mod (e / entire))
                        :ARG1 (a3 / and
                              :op1 (n3 / name
                                    :op1 ""Hyde""))
                        :op2 (e2 / everything)
                        :ARG1-of (f / find-out-03
                              :ARG0 ii)))))"
Put my brother on to it a few weeks ago...he's,"# ::snt Put my brother on to it a few weeks ago...he's
(p / put-01
      :ARG0 (ii / i)
      :ARG1 (p2 / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 ii
                  :ARG2 (b / brother)))
      :ARG2 (ii2 / it)
      :time (b2 / before
            :op1 (n / now)
            :quant (f / few
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (w / week)))))"
Nikkas dont care tho,"# ::snt Nikkas dont care tho
(h / have-concession-91
      :ARG1 (c / care-01
            :polarity -
            :ARG0 (p / person
                  :mod (p2 / political-movement
                        :name (n / name
                              :op1 ""Nikkas"")))))"
shit has been done &lt;3 thank u v much,"# ::snt shit has been done &lt;3 thank u v much
(a / and
      :op1 (d / do-02
            :ARG1 (s / shit))
      :op2 (t / thank-01
            :ARG0 (ii / i)
            :ARG1 (y / you)
            :mod (m / much)))"
Do your homework first,"# ::snt Do your homework first
(d / do-02
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (h / homework
            :poss y)
      :ord (o / ordinal-entity
            :value 1))"
This is a fact,"# ::snt This is a fact
(f / fact
      :domain (t / this))"
"I think all of season episodes are named after Led Zeppelin songs, and I think season episodes are named after Queen","# ::snt I think all of season episodes are named after Led Zeppelin songs, and I think season episodes are named after Queen
(a / and
      :op1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (n / name-02
                  :ARG1 (e / episode
                        :mod (s / season)
                        :mod (a2 / all))
                  :ARG2 (s2 / song
                        :mod (p / person
                              :name (n2 / name
                                    :op1 ""Led""
                                    :op2 ""Zeppelin"")))))
      :op2 (t2 / think-01
            :ARG0 ii
            :ARG1 (n3 / name-02
                  :ARG1 (e2 / episode
                        :mod (s3 / season))
                  :ARG2 (p2 / person
                        :name (n4 / name
                              :op1 ""Queen"")))))"
"Mas q? mto divertido, eu sempre assistia na Warner","# ::snt Mas q? mto divertido, eu sempre assistia na Warner
(m / multi-sentence
      :snt1 (a / amr-unknown
            :polarity (a2 / amr-unknown))
      :snt2 (d / divertido
            :domain (y / you))
      :snt3 (a3 / amr-unknown
            :polarity -
            :ARG1-of (m2 / mean-01
                  :ARG2 (a4 / assist-01
                        :ARG0 (y2 / you)
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""Warner""))))))"
"Uhhh s, bien jugado. Ah s no discuto xd","# ::snt Uhhh s, bien jugado. Ah s no discuto xd
(m / multi-sentence
      :snt1 (b / bien
            :mode expressive
            :mod (u / uhhh
                  :mode expressive))
      :snt2 (d / discuto
            :polarity -
            :mod (e / emoticon
                  :value ""xd"")))"
"La mejor es How I Met your Mother, la gente de bien lo sabe xd","# ::snt La mejor es How I Met your Mother, la gente de bien lo sabe xd
(m / multi-sentence
      :snt1 (e / es-01
            :ARG1 (m2 / mejor)
            :ARG2 (w / work-of-art
                  :name (n / name
                        :op1 ""How""
                        :op2 ""I""
                        :op3 ""Met""
                        :op4 ""Your""
                        :op5 ""Mother"")))
      :snt2 (p / possible-01
            :ARG1 (c / come-01
                  :ARG1 (y / you)
                  :ARG4 (g / gente
                        :mod (b / bien))))
      :snt3 c
      :ARG1 y
      :ARG4 (x / xd))"
s2 ep16 of Frasier (The One Where Sam Shows Up),"# ::snt s2 ep16 of Frasier (The One Where Sam Shows Up)
(p / publication-91
      :ARG1 (c / chapter
            :mod 16
            :part-of (b / book
                  :name (n / name
                        :op1 ""The""
                        :op2 ""One""
                        :op3 ""Where""
                        :op4 ""Sam""
                        :op5 "" Shows""
                        :op6 ""Up"")))
      :ARG4 (p2 / person
            :name (n2 / name
                  :op1 ""Frasier"")))"
s3 ep4 of That s Show (the Hitchcock episode),"# ::snt s3 ep4 of That s Show (the Hitchcock episode)
(e / episode
      :mod 3
      :part-of (b / broadcast-program
            :name (n / name
                  :op1 ""That""
                  :op2 "" s""
                  :op3 ""Show""))
      :ARG1-of (m / mean-01
            :ARG2 (e2 / episode
                  :mod (p / person
                        :name (n2 / name
                              :op1 ""Hitchcock"")))))"
I think they felt real good when Brent got there. He added some vocals and fresh energy. I miss those days man. So many great shows and the fun that went into a road trip,"# ::snt I think they felt real good when Brent got there. He added some vocals and fresh energy. I miss those days man. So many great shows and the fun that went into a road trip
(m / multi-sentence
      :snt1 (t / think-01
            :ARG0 (ii / i)
            :ARG1 (f / feel-05
                  :ARG1 (t2 / they)
                  :ARG2 (g / good-02
                        :degree (r / really))
                  :time (g2 / get-05
                        :ARG1 (p / person
                              :name (n / name
                                    :op1 ""Brent""))
                        :ARG2 (t3 / there))))
      :snt2 (a / add-02
            :ARG0 (h / he)
            :ARG1 (a2 / and
                  :op1 (v / vocal
                        :quant (s / some))
                  :op2 (e / energy
                        :ARG1-of (f2 / fresh-04))))
      :snt3 (m2 / miss-01
            :ARG0 (ii2 / i)
            :ARG1 (d / day
                  :mod (t4 / that)))
      :snt4 (a3 / and
            :op1 (s2 / show-04
                  :mod (g3 / great)
                  :ARG1-of (h2 / have-quant-91
                        :ARG2 (m3 / many)
                        :ARG3 (s3 / so)))
            :op2 (f3 / fun-01
                  :ARG1-of (g4 / go-06
                        :ARG2 (t5 / trip-03
                              :ARG0 ii2
                              :ARG1 (r2 / road)))))
      :snt5 (s4 / say-01
            :ARG0 (ii3 / i)
            :ARG1 m2
            :ARG0 ii3
            :ARG1 d)
      :ARG2 (m4 / man))"
Yes Phil! Mine sure was..,"# ::snt Yes Phil! Mine sure was..
(m / multi-sentence
      :snt1 (y / yes
            :mode expressive)
      :snt2 (s / sure-02
            :ARG1 (t / thing
                  :poss (ii / i)))
      :snt3 (p / person
            :name (n / name
                  :op1 ""Phil"")))"
"Ok Captain Subtlety You could say theyre popular. Sure, you could say that.","# ::snt Ok Captain Subtlety You could say theyre popular. Sure, you could say that.
(m / multi-sentence
      :snt1 (o / okay-01
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Captain""
                        :op2 ""Subtlety"")))
      :snt2 (p2 / possible-01
            :ARG1 (s / say-01
                  :ARG0 (y / you)
                  :ARG1 (p3 / popular-02
                        :ARG1 (t / they))))
      :snt3 (s2 / sure-02
            :ARG1 (p4 / possible-01
                  :ARG1 (s3 / say-01
                        :ARG0 (y2 / you)
                        :ARG1 (t2 / that)))))"
Good times!,"# ::snt Good times!
(t / time
      :ARG1-of (g / good-02))"
"Worth noting that Phil said ""most popular"", not best.","# ::snt Worth noting that Phil said ""most popular"", not best.
(w / worth-02
      :ARG2 (n / note-01
            :ARG1 (s / say-01
                  :ARG0 (p / person
                        :name (n2 / name
                              :op1 ""Phil""))
                  :ARG1 (c / contrast-01
                        :ARG1 (h / have-degree-91
                              :ARG1 p
                              :ARG2 (p2 / popular-02
                                    :ARG1 p)
                              :ARG3 (m / most))
                        :ARG2 (h2 / have-degree-91
                              :polarity -
                              :ARG1 p
                              :ARG2 (g / good-02
                                    :ARG1 p)
                              :ARG3 m)))))"
Thank You USAF for stationing me and just outside of San Francisco -1981 (Travis AFB) and giving us time off for all but local GD shows. (missed Warfield shows)Also thank you for the flight back to Travis after the Alaska GD shows in,"# ::snt Thank You USAF for stationing me and just outside of San Francisco -1981 (Travis AFB) and giving us time off for all but local GD shows. (missed Warfield shows)Also thank you for the flight back to Travis after the Alaska GD shows in
(t / thank-01
      :ARG1 (m / military
            :name (n / name
                  :op1 ""USAF""))
      :ARG2 (a / and
            :op1 (s / station-01
                  :ARG0 m
                  :ARG1 (a2 / and
                        :op1 (ii / i)
                        :op2 (o / outside
                              :op1 (c / city
                                    :name (n2 / name
                                          :op1 ""San""
                                          :op2 ""Francisco""))
                              :mod (j / just)))
                  :time (d / date-entity
                        :year 1981)
                  :location (f / facility
                        :name (n3 / name
                              :op1 ""Travis""
                              :op2 ""Airland"")))
            :op2 (g / give-01
                  :ARG0 m
                  :ARG1 (t2 / time
                        :mod (o2 / off))
                  :ARG2 (w / we)
                  :purpose (s2 / show-04
                        :ARG1 (t3 / thing
                              :name (n4 / name
                                    :op1 ""GOD""))
                        :ARG1-of (l / local-02)
                        :mod (a3 / all)
                        :ARG1-of (m2 / miss-01))))
      :mod (a4 / also)
      :time (a5 / after
            :op1 (s3 / show-04
                  :ARG1 t3
                  :location (s4 / state
                        :name (n5 / name
                              :op1 ""Alaska"")))))"
Congrats and thank you for sharing your memories out here!,"# ::snt Congrats and thank you for sharing your memories out here!
(a / and
      :op1 (c / congratulate-01
            :ARG1 (y / you))
      :op2 (t / thank-01
            :ARG1 y
            :ARG2 (s / share-01
                  :ARG0 y
                  :ARG1 (m / memory
                        :poss y)
                  :location (o / out
                        :op1 (h / here)))))"
Saw some great shows in fantastic shows that always remember,"# ::snt Saw some great shows in fantastic shows that always remember
(s / see-01
      :ARG0 (ii / i)
      :ARG1 (s2 / show
            :mod (g / great)
            :quant (s3 / some))
      :location (s4 / show
            :ARG1-of (f / fantastic-02)
            :ARG1-of (r / remember-01
                  :time (a / always))))"
Truth,"# ::snt Truth
(t / truth)"
"Having witnessed those shows in the s multiple times during that period, I totally agree Phil!","# ::snt Having witnessed those shows in the s multiple times during that period, I totally agree Phil!
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / agree-01
            :ARG0 ii
            :ARG1-of (t / total-02)
            :ARG1-of (c / cause-01
                  :ARG0 (w / witness-01
                        :ARG0 ii
                        :ARG1 (s2 / show-04
                              :mod (t2 / that))
                        :frequency (m / multiple)
                        :time (p / period
                              :mod t2))))
      :ARG2 (p2 / person
            :name (n / name
                  :op1 ""Phil"")))"
Winterland? Our first date was there (Dick's Pick )Still happily married + years laterShe took me to dinner in SF and then to the showNow we are Grateful Grand Parents,"# ::snt Winterland? Our first date was there (Dick's Pick )Still happily married + years laterShe took me to dinner in SF and then to the showNow we are Grateful Grand Parents
(m / multi-sentence
      :snt1 (d / date-02
            :polarity (a / amr-unknown)
            :ARG0 (w / we)
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Dick's""
                        :op2 ""Pick""))
            :location (t / there)
            :ord (o / ordinal-entity
                  :value 1))
      :snt2 (a2 / and
            :op1 (m2 / marry-01
                  :ARG1 (ii / i)
                  :time (a3 / after
                        :quant (m3 / more-than
                              :op1 (t2 / temporal-quantity
                                    :quant 1
                                    :unit (y / year))))
                  :mod (s / still)
                  :ARG0-of (h / happy-01))
            :op2 (t3 / take-01
                  :ARG0 (s2 / she)
                  :ARG1 (ii2 / i)
                  :ARG3 (a4 / and
                        :op1 (d2 / dinner)
                        :op2 (s3 / show-04))))
      :snt3 (p2 / person
            :ARG0-of (h2 / have-rel-role-91
                  :ARG1 (w2 / we)
                  :ARG2 (p3 / parent
                        :mod (g / grand))
                  :ARG1-of (g2 / Grateful-03))
            :mod (n2 / now)))"
Donna!!!!,"# ::snt Donna!!!!
(p / person
      :name (n / name
            :op1 ""Donna""))"
it's too bad that this quote is about all that was covered in the Amazon Long Strange Trip documentary for this period. There could have been an entire episode covering -78. missed opportunity.,"# ::snt it's too bad that this quote is about all that was covered in the Amazon Long Strange Trip documentary for this period. There could have been an entire episode covering -78. missed opportunity.
(m / multi-sentence
      :snt1 (h / have-degree-91
            :ARG1 (t / thing
                  :ARG1-of (q / quote-01)
                  :mod (t2 / this))
            :ARG2 (b / bad-07
                  :ARG1 t)
            :ARG3 (t3 / too)
            :ARG6 (c / cover-03
                  :ARG0 (d / documentary
                        :name (n / name
                              :op1 ""Amazon""
                              :op2 ""Long""
                              :op3 ""Strange""
                              :op4 "" Trip""))
                  :ARG1 t
                  :duration (p / period
                        :mod (t4 / this))))
      :snt2 (p2 / possible-01
            :ARG1 (e / episode
                  :mod (e2 / entire)
                  :ARG0-of (c2 / cover-03
                        :ARG1 (o / opportunity
                              :ARG1-of (m2 / miss-02))))))"
Yes!,"# ::snt Yes!
(y / yes)"
"IMHO, The legendary shows from '77 represent the pinnacle of what music can be. When, at years old I was given a min cassette of ""Buffalo -9-77"" opening with Help-Slip-Frank, my life was forever changed. I remain forever Grateful.","# ::snt IMHO, The legendary shows from '77 represent the pinnacle of what music can be. When, at years old I was given a min cassette of ""Buffalo -9-77"" opening with Help-Slip-Frank, my life was forever changed. I remain forever Grateful.
(m / multi-sentence
      :snt1 (o / opine-01
            :ARG0 (ii / i)
            :ARG1 (r / represent-01
                  :ARG0 (s / show
                        :mod (l / legendary)
                        :time (d / date-entity
                              :year 1977))
                  :ARG1 (p / pinnacle
                        :domain (m2 / music)
                        :ARG1-of (p2 / possible-01)))
            :ARG1-of (h / humble-01))
      :snt2 (c / change-01
            :ARG1 (l2 / life
                  :poss (ii2 / i))
            :time (g / give-01
                  :ARG1 (d2 / disc
                        :quant (m3 / min)
                        :mod (t / tape)
                        :mod (m4 / music
                              :name (n / name
                                    :op1 ""Buffalo -9-77"")
                              :ARG1-of (o2 / open-02
                                    :ARG2 (m5 / music
                                          :name (n2 / name
                                                :op1 ""Help-Slip-Frank"")))))
                  :ARG2 ii2
                  :time (a / age-01
                        :ARG1 ii2
                        :ARG2 (t2 / temporal-quantity
                              :quant 1
                              :unit (y / year))))
            :ARG1-of (c2 / cause-01
                  :ARG1 l2
                  :duration (f / forever))
            :ARG0-of c2)
      :snt3 (r2 / remain-01
            :ARG1 (ii3 / i)
            :ARG3 (g2 / Grateful)
            :duration (f2 / forever)))"
Word up,"# ::snt Word up
(w / word-up-00
      :mode imperative
      :ARG0 (y / you))"
,"# ::snt 
(a / amr-empty)"
"Yup, agree Phil","# ::snt Yup, agree Phil
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (a / agree-01
            :ARG0 ii)
      :ARG2 (p / person
            :name (n / name
                  :op1 ""Phil""))
      :mod (y / yup))"
Oh no she a dumbass. She didnt go to college for love smh guys aint shit,"# ::snt Oh no she a dumbass. She didnt go to college for love smh guys aint shit
(m / multi-sentence
      :snt1 (d / dumbass
            :domain (s / she)
            :mod (o / oh-no
                  :mode expressive))
      :snt2 (g / go-02
            :polarity -
            :ARG0 (s2 / she)
            :ARG4 (c / college)
            :purpose (l / love-01
                  :ARG0 s2
                  :ARG1 (g2 / guy
                        :mod (s3 / smh
                              :mode expressive)))
            :mod (s4 / shit
                  :polarity -)))"
You got some you wanna say dawg,"# ::snt You got some you wanna say dawg
(g / get-01
      :ARG0 (y / you)
      :ARG1 (s / some
            :ARG1-of (s2 / say-01
                  :ARG0 y
                  :ARG1-of (w / want-01
                        :ARG0 y)
                  :mod (d / dawg
                        :mode expressive))))"
It kills me when red discovers the word dumbass,"# ::snt It kills me when red discovers the word dumbass
(k / kill-01
      :ARG0 (d / discover-01
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Red""))
            :ARG1 (w / word
                  :mod (d2 / dumbass)))
      :ARG1 (ii / i))"
,"# ::snt 
(a / amr-empty)"
meu preferido tbm rssAdoro os encontros dele c o desafeto dele Fanton kkkkk,"# ::snt meu preferido tbm rssAdoro os encontros dele c o desafeto dele Fanton kkkkk
(p / prefer-01
      :ARG0 (ii / i)
      :ARG1 (p2 / person
            :name (n / name
                  :op1 ""rssAdoro"")
            :ARG0-of (p3 / post-01
                  :mod (p4 / publication
                        :name (n2 / name
                              :op1 ""TSB""))))
      :ARG1-of (c / cause-01
            :ARG0 (a / and
                  :op1 (e / encontros
                        :mod (d / dele))
                  :op2 (d2 / desafeto
                        :mod d
                        :mod (k / kkkkk
                              :mode expressive)))))"
"O fez a melhor pessoa, morro de rir kkkkk","# ::snt O fez a melhor pessoa, morro de rir kkkkk
(m / multi-sentence
      :snt1 (f / fez
            :mode expressive
            :mod (p / pessoa))
      :snt2 (m2 / morro
            :mode expressive
            :mod (p2 / person
                  :name (n / name
                        :op1 ""Rir""))))"
"J assisti todas as temporadas, mais de uma vz e morro de rir sempre rsss","# ::snt J assisti todas as temporadas, mais de uma vz e morro de rir sempre rsss
(m / multi-sentence
      :snt1 (a / assist-01
            :ARG0 (p / person)
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""J""))
            :prep-as (t / temporada))
      :snt2 (p3 / possible-01
            :ARG1 (a2 / and
                  :op1 (u / uma)
                  :op2 (m2 / morro
                        :mod (d / de-rir))
                  :op3 (p4 / person
                        :ARG0-of (r / rape-01))
                  :mod (s / sempre))
            :ARG1-of (r2 / request-confirmation-91)))"
jackie voice: MICHAEL,"# ::snt jackie voice: MICHAEL
(v / voice-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Michael""))
      :mod (j / jackie))"
As me tiene,"# ::snt As me tiene
(r / resemble-01
      :ARG2 (ii / i))"
Rico,"# ::snt Rico
(p / person
      :name (n / name
            :op1 ""Rico""))"
Kelso,"# ::snt Kelso
(p / person
      :name (n / name
            :op1 ""Kelso""))"
personally think i would look great in donnas clothes,"# ::snt personally think i would look great in donnas clothes
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (l / look-02
            :ARG0 ii
            :ARG1 (g / great)
            :ARG2 (c / clothes
                  :poss (d / donnas)))
      :ARG1-of (p / personal-02))"
Need to see u in a fez lewk,"# ::snt Need to see u in a fez lewk
(n / need-01
      :ARG0 (ii / i)
      :ARG1 (s / see-01
            :ARG0 ii
            :ARG1 (y / you)
            :time (l / lewk
                  :mod (f / fez))))"
iFanboy was a daycare essentially.,"# ::snt iFanboy was a daycare essentially.
(d / daycare
      :domain (p / product
            :name (n / name
                  :op1 ""iFanboy""))
      :mod (e / essential))"
