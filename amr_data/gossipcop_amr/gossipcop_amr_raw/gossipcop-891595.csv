comment,amr
Congrats,"# ::snt Congrats
(c / congratulate-01)"
Being this much in the public eye? I don't envy them.,"# ::snt Being this much in the public eye? I don't envy them.
(e / envy-01
      :polarity -
      :ARG0 (ii / i)
      :ARG1 (t / they)
      :ARG1-of (c / cause-01
            :ARG0 (b / be-located-at-91
                  :ARG1 t
                  :ARG2 (e2 / eye
                        :ARG1-of (p / public-02))
                  :degree (m / much
                        :degree (t2 / this)))))"
True,"# ::snt True
(t / true-01)"
No it didn't,"# ::snt No it didn't
(d / do-02
      :polarity -
      :ARG0 (ii / it))"
Isnt more lucky that it will end in cheating? Thats how it all started.,"# ::snt Isnt more lucky that it will end in cheating? Thats how it all started.
(m / multi-sentence
      :snt1 (h / have-degree-91
            :polarity -
            :ARG1 (e / end-01
                  :ARG1 (ii / it)
                  :ARG2 (c / cheat-03))
            :ARG2 (l / lucky)
            :ARG3 (m2 / more))
      :snt2 (s / start-01
            :ARG1 (ii2 / it)
            :manner (t / that)
            :mod (a / all)))"
"years together, and they are a cute couple","# ::snt years together, and they are a cute couple
(a / and
      :op1 (t / together
            :duration (m / multiple
                  :op1 (t2 / temporal-quantity
                        :quant 1
                        :unit (y / year))))
      :op2 (c / cute
            :domain (c2 / couple)))"
Yeah yeah time Leo's are getting caught up you better that bring that LIBRA back to life,"# ::snt Yeah yeah time Leo's are getting caught up you better that bring that LIBRA back to life
(c / catch-up-04
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Leo""))
      :mod (y / yeah
            :mode expressive)
      :ARG0-of (c2 / cause-01
            :ARG1 (b / bring-01
                  :ARG0 p
                  :ARG1 (l / law
                        :name (n2 / name
                              :op1 ""LIBRA"")
                        :mod (t / that))
                  :ARG2 (l2 / life)
                  :direction (b2 / back)))
      :ARG1-of (h / have-degree-91
            :ARG2 (g / good-02
                  :ARG1 b)
            :ARG3 (m / more)))"
