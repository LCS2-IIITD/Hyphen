comment,amr
,"# ::snt 
(a / amr-empty)"
I hope to be killed in jail....,"# ::snt I hope to be killed in jail....
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (k / kill-01
            :ARG1 ii
            :location (j / jail)))"
womp womp,"# ::snt womp womp
(w / womp-01
      :mode expressive
      :ARG0 (y / you)
      :ARG1 (w2 / womp))"
i think you mean rip this guy,"# ::snt i think you mean rip this guy
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (m / mean-02
            :ARG0 (y / you)
            :ARG2 (r / rip-01
                  :ARG0 y
                  :ARG1 (g / guy
                        :mod (t2 / this)))))"
Yo its snickah u grt unbanned on pvpingmc,"# ::snt Yo its snickah u grt unbanned on pvpingmc
(a / and
      :op1 (s / snickah
            :mode expressive
            :domain (ii / it))
      :op2 (b / ban-01
            :ARG1 (p / publication
                  :name (n / name
                        :op1 ""Pvpingmc""))
            :ARG2 (y / you))
      :mod (y2 / yo))"
Gone be jail like,"# ::snt Gone be jail like
(r / resemble-01
      :ARG1 (j / jail)
      :time (t / tomorrow))"
Don't forget on of the,"# ::snt Don't forget on of the
(f / forget-01
      :polarity -
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (o / on-of))"
yes very relevant to a tweet about a black murderer,"# ::snt yes very relevant to a tweet about a black murderer
(r / relevant-01
      :ARG1 (y / yes)
      :degree (v / very)
      :prep-to (t / tweet-01
            :topic (p / person
                  :ARG0-of (m / murder-01)
                  :ARG1-of (b / black-05))))"
its true,"# ::snt its true
(t / true-01
      :ARG1 (ii / it))"
times out of yo buddy a rat,"# ::snt times out of yo buddy a rat
(r / rat
      :domain (p / person
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (y / you)
                  :ARG2 (b / buddy)))
      :frequency (t / time))"
Foreal. Yellow af eyes,"# ::snt Foreal. Yellow af eyes
(m / multi-sentence
      :snt1 (f / forensics)
      :snt2 (e / eye
            :mod (y / yellow)
            :mod (a / af)))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Glad they got his ass!!,"# ::snt Glad they got his ass!!
(g / glad-02
      :mode expressive
      :ARG0 (g2 / get-01
            :ARG0 (t / they)
            :ARG1 (a / ass
                  :part-of (h / he)))
      :ARG1 (ii / i))"
Psh all y'all tripping fuck a prison cell cuh. That nigga needs his mind opened up with the. and read his blue print,"# ::snt Psh all y'all tripping fuck a prison cell cuh. That nigga needs his mind opened up with the. and read his blue print
(m / multi-sentence
      :snt1 (f / fuck-01
            :mode expressive
            :ARG0 (y / you
                  :mod (a / all))
            :ARG1 (c / cell
                  :location (p / prison))
            :mod (c2 / cop)
            :mod (c3 / cuh
                  :mode expressive))
      :snt2 (n / need-01
            :ARG0 (n2 / nigger
                  :mod (t / that)
                  :part (m2 / mind))
            :ARG1 (o / open-up-03
                  :ARG1 m2
                  :instrument (g / gun)))
      :snt3 (r / read-01
            :ARG0 y
            :ARG1 (p2 / print
                  :mod (b / blue)
                  :poss n2)))"
,"# ::snt 
(a / amr-empty)"
Don't drop the soap,"# ::snt Don't drop the soap
(d / drop-01
      :mode imperative
      :polarity -
      :ARG0 (y / you)
      :ARG1 (s / soap))"
,"# ::snt 
(a / amr-empty)"
He shouldve been arrested for his name alone where his parents at lock them up to for naming him.,"# ::snt He shouldve been arrested for his name alone where his parents at lock them up to for naming him.
(r / recommend-01
      :ARG1 (a / arrest-01
            :ARG1 (h / he)
            :ARG2 (n / name
                  :poss h
                  :mod (a2 / alone))
            :location (l / lock-up-03
                  :ARG0 (p / person
                        :ARG0-of (h2 / have-rel-role-91
                              :ARG1 h
                              :ARG2 (p2 / parent)))
                  :ARG1 p
                  :ARG3 (n2 / name
                        :poss p))))"
hope this mans asshole gets mutilated in prison,"# ::snt hope this mans asshole gets mutilated in prison
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (m / mutilate-01
            :ARG1 (a / asshole
                  :mod (m2 / man
                        :mod (t / this)))
            :location (p / prison)))"
Good we need to catch all of them. May they rot in prison and being beaten tortured and then given death penalty,"# ::snt Good we need to catch all of them. May they rot in prison and being beaten tortured and then given death penalty
(m / multi-sentence
      :snt1 (g / good-02
            :ARG1 (n / need-01
                  :ARG0 (w / we)
                  :ARG1 (c / catch-03
                        :ARG0 w
                        :ARG1 (t / they
                              :mod (a / all)))))
      :snt2 (w2 / wish-01
            :ARG1 (a2 / and
                  :op1 (r / rot-01
                        :ARG1 t)
                  :location (p / prison))
            :op2 (b / beat-01
                  :ARG1 t
                  :ARG2 (t2 / torture-01
                        :ARG1 t))
            :op3 (p2 / penalize-01
                  :ARG1 t
                  :manner (d / die-01
                        :ARG1 t)
                  :time (t3 / then))))"
them dudes in jail waiting like,"# ::snt them dudes in jail waiting like
(b / be-located-at-91
      :ARG1 (d / dude
            :mod (t / they))
      :ARG2 (j / jail)
      :ARG1-of (r / resemble-01))"
His instagram name is. Fly_mike1443,"# ::snt His instagram name is. Fly_mike1443
(n / name-01
      :ARG1 (h / he)
      :ARG2 (p / person
            :name (n2 / name
                  :op1 ""Fly_mike1443"")
            :mod (p2 / publication
                  :name n2
                  :op1 ""Instagram"")))"
I hope he dies,"# ::snt I hope he dies
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (d / die-01
            :ARG1 (h2 / he)))"
Why these kids throwing away their lives,"# ::snt Why these kids throwing away their lives
(t / throw-away-07
      :ARG0 (k / kid
            :mod (t2 / this))
      :ARG1 (l / life
            :poss k)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)))"
The same thing that was wrong with the last generation we just got social media now.,"# ::snt The same thing that was wrong with the last generation we just got social media now.
(g / get-01
      :ARG0 (w / we)
      :ARG1 (m / media
            :mod (s / social))
      :mod (j / just)
      :ARG1-of (s2 / same-01
            :ARG2 (t / thing
                  :ARG1-of (w2 / wrong-02
                        :ARG2 (g2 / generation
                              :mod (l / last))))))"
He baked,"# ::snt He baked
(b / bake-01
      :ARG0 (h / he))"
,"# ::snt 
(a / amr-empty)"
You are racist? since when?,"# ::snt You are racist? since when?
(r / racist
      :polarity (a / amr-unknown)
      :domain (y / you)
      :time (s / since
            :op1 a))"
Fuck this kid,"# ::snt Fuck this kid
(f / fuck-01
      :mode expressive
      :ARG1 (k / kid
            :mod (t / this)))"
Neither are the people who they cover on the first,"# ::snt Neither are the people who they cover on the first
(p / person
      :polarity -
      :ARG1-of (c / cover-03
            :ARG0 (t / they)
            :time (f / first)))"
All tho he looks like hed enjoy it,"# ::snt All tho he looks like hed enjoy it
(h / have-concession-91
      :ARG1 (a / all)
      :ARG2 (l / look-02
            :ARG0 (h2 / he)
            :ARG1 (e / enjoy-01
                  :ARG0 (y / you)
                  :ARG1 a)))"
,"# ::snt 
(a / amr-empty)"
On god,"# ::snt On god
(t / thing
      :topic (p / person
            :name (n / name
                  :op1 ""God"")))"
Cause he,"# ::snt Cause he
(c / cause-01
      :ARG0 (h / he))"
Yea TREEJUMPERS WAITING ON U,"# ::snt Yea TREEJUMPERS WAITING ON U
(w / WAIT-01
      :ARG0 (p / person
            :mod (t / twister))
      :mod (u / u))"
,"# ::snt 
(a / amr-empty)"
"This is the dude that was wearing a red mask on live IG talking shxt about X and how X ""was begging for his life""","# ::snt This is the dude that was wearing a red mask on live IG talking shxt about X and how X ""was begging for his life""
(d / dude
      :domain (t / this)
      :ARG0-of (w / wear-01
            :ARG1 (m / mask
                  :ARG1-of (r / red-02))
            :medium (p / publication
                  :name (n / name
                        :op1 ""Institute"")
                  :mod (l / live)))
      :ARG0-of (t2 / talk-01
            :ARG1 (a / and
                  :op1 (p2 / person
                        :name (n2 / name
                              :op1 ""X""))
                  :op2 (b / beg-01
                        :ARG0 p2
                        :ARG2 (l2 / life
                              :poss p2)))))"
X was a piece of shit just like you,"# ::snt X was a piece of shit just like you
(p / piece-of-shit
      :domain (p2 / person
            :name (n / name
                  :op1 ""X""))
      :ARG1-of (r / resemble-01
            :ARG2 (y / you)
            :mod (j / just)))"
My little brother said so Kevin Durant killed him? I have yet to get off the floor,"# ::snt My little brother said so Kevin Durant killed him? I have yet to get off the floor
(m / multi-sentence
      :snt1 (s / say-01
            :ARG0 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 (ii / i)
                        :ARG2 (b / brother
                              :mod (l / little))))
            :ARG1 (k / kill-01
                  :ARG0 (p2 / person
                        :name (n / name
                              :op1 ""Kevin""
                              :op2 ""Derrard""))
                  :ARG1 (h2 / he))
            :polarity (a / amr-unknown))
      :snt2 (h3 / have-11
            :ARG0 (ii2 / i)
            :ARG1 (y / yet)
            :purpose (g / get-05
                  :ARG1 ii2
                  :ARG2 (o / off
                        :op1 (f / floor))))
      :polarity (a2 / amr-unknown))"
He only tortured his gf,"# ::snt He only tortured his gf
(t / torture-01
      :ARG0 (h / he)
      :ARG1 (p / person
            :ARG0-of (h2 / have-rel-role-91
                  :ARG1 h
                  :ARG2 (g / girlfriend)))
      :mod (o / only))"
he boutta get raped too RIP,"# ::snt he boutta get raped too RIP
(g / get-04
      :ARG1 (r / rape-01
            :ARG1 (h / he))
      :mod (t / too)
      :ARG2-of (s / sad-02))"
Best comment ever,"# ::snt Best comment ever
(h / have-degree-91
      :ARG1 (c / comment-01)
      :ARG2 (g / good-02
            :ARG1 c)
      :ARG3 (m / most)
      :time (e / ever))"
you can tell cause he got them yellow ass eyes,"# ::snt you can tell cause he got them yellow ass eyes
(p / possible-01
      :ARG1 (t / tell-02
            :ARG0 (y / you)
            :ARG1-of (c / cause-01
                  :ARG0 (g / get-02
                        :ARG0 (h / he)
                        :ARG1 (e / eye
                              :mod (a / ass
                                    :ARG1-of (y2 / yellow-02)))))))"
,"# ::snt 
(a / amr-empty)"
Hell Yeaaa !!!! Bitches !!!! Get Dem,"# ::snt Hell Yeaaa !!!! Bitches !!!! Get Dem
(m / multi-sentence
      :snt1 (h / hell
            :mode expressive)
      :snt2 (b / bitch
            :mode expressive)
      :snt3 (g / get-01
            :mode imperative
            :ARG0 (p / person
                  :name (n / name
                        :op1 ""Dem""))))"
Let them rape this nigha took,"# ::snt Let them rape this nigha took
(l / let-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (r / rape-01
            :ARG0 (t / they)
            :ARG1 (n / nigha
                  :ARG1-of (t2 / take-01
                        :ARG0 t))
            :mod (t3 / this)))"
kodaks bois in prison gonna be waitin on him like,"# ::snt kodaks bois in prison gonna be waitin on him like
(w / wait-01
      :ARG1 (p / person
            :name (n / name
                  :op1 ""kodaks""
                  :op2 ""bois""))
      :ARG2 (h / he)
      :location (p2 / prison)
      :ARG1-of (r / resemble-01))"
,"# ::snt 
(a / amr-empty)"
