comment,amr
Gimme! ARROW IS BACK,"# ::snt Gimme! ARROW IS BACK
(b / back-02
      :mode expressive
      :ARG1 (c / country
            :name (n / name
                  :op1 ""Arkansas""))
      :mod (m / me
            :mode expressive))"
. Lots more Olicity :')(I finished the list for you),"# ::snt . Lots more Olicity :')(I finished the list for you)
(s / subjective-03
      :quant (m / more
            :quant (l / lot))
      :example (f / finish-01
            :ARG0 (ii / i)
            :ARG1 (l2 / list)
            :beneficiary (y / you)))"
Norah can totally take credit for that one.,"# ::snt Norah can totally take credit for that one.
(p / possible-01
      :ARG1 (t / take-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""Norah""))
            :ARG1 (c / credit-01
                  :ARG0 p2
                  :ARG1 p2
                  :ARG2 (o / one
                        :mod (t2 / that)))
            :degree (t3 / total)))"
Bring season . It's going to be lit,"# ::snt Bring season . It's going to be lit
(m / multi-sentence
      :snt1 (b / bring-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (s / season))
      :snt2 (l / light-04
            :ARG1 (ii / it)))"
". I think we can also expect that an Oliver that has his s--t together will wife up the love of his life, Felicity Smoak","# ::snt . I think we can also expect that an Oliver that has his s--t together will wife up the love of his life, Felicity Smoak
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (p / possible-01
            :ARG1 (e / expect-01
                  :ARG0 (w / we)
                  :ARG1 (w2 / wife-01
                        :ARG0 (p2 / person
                              :name (n / name
                                    :op1 ""Oliver"")
                              :ARG0-of (h / have-03
                                    :ARG1 (s / shit
                                          :poss p2
                                          :mod (t2 / together))))
                        :ARG1 (p3 / person
                              :name n
                              :op1 ""Felicity""
                              :op2 ""Smoak"")
                        :ARG0-of (l / love-01
                              :ARG1 (l2 / life
                                    :poss p2)))
                  :mod (u / up))
            :mod (a / also)))"
