comment,amr
Well now that is a heck of a plot twist. Geo. RR Martin said it boiled down Jon &amp; Dany. Wonder what he thinks?,"# ::snt Well now that is a heck of a plot twist. Geo. RR Martin said it boiled down Jon &amp; Dany. Wonder what he thinks?
(m / multi-sentence
      :snt1 (t / twist-01
            :ARG1 (p / plot)
            :ARG2 (t2 / that)
            :degree (h / heck)
            :time (n / now)
            :mod (w / well))
      :snt2 (s / say-01
            :ARG0 (p2 / person
                  :name (n2 / name
                        :op1 ""Geo.""
                        :op2 ""R""
                        :op3 ""Martin""))
            :ARG1 (b / boil-down-03
                  :ARG1 (ii / it)
                  :ARG2 (a / and
                        :op1 (p3 / person
                              :name (n3 / name
                                    :op1 ""Jon""
                                    :op2 ""&amp""))
                        :op2 (p4 / person
                              :name (n4 / name
                                    :op1 ""Dany"")))))
      :snt3 (w2 / wonder-01
            :ARG0 (ii2 / i)
            :ARG1 (t3 / thing
                  :ARG1-of (t4 / think-01
                        :ARG0 (h2 / he)))
            :polarity (a2 / amr-unknown)))"
mkin ganteeng beeb si daninya,"# ::snt mkin ganteeng beeb si daninya
(a / and
      :op1 (g / ganteeng
            :mode expressive)
      :op2 (b / beeb
            :mode expressive)
      :op3 (d / daninya))"
"Well, if Targaryens are the only ones who ride dragons... and the seems so interested in Jon... think about it...","# ::snt Well, if Targaryens are the only ones who ride dragons... and the seems so interested in Jon... think about it...
(t / think-01
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (ii / it)
      :condition (a / and
            :op1 (r / ride-01
                  :ARG0 (p / person
                        :name (n / name
                              :op1 ""Targaryens"")
                        :mod (o / only))
                  :ARG1 (d / dragon))
            :op2 (s / seem-01
                  :ARG1 (ii2 / interest-01
                        :ARG1 p
                        :ARG2 (p2 / person
                              :name (n2 / name
                                    :op1 ""Jon""))
                        :degree (s2 / so))))
      :mod (w / well))"
"I heard Gorka finally gets to attend passover, and gets his own church. Orthidoxedhey you look like a lover as in a nightmare of a child.","# ::snt I heard Gorka finally gets to attend passover, and gets his own church. Orthidoxedhey you look like a lover as in a nightmare of a child.
(m / multi-sentence
      :snt1 (h / hear-01
            :ARG0 (ii / i)
            :ARG1 (a / and
                  :op1 (g / get-01
                        :ARG0 (p / person
                              :name (n / name
                                    :op1 ""Gorka""))
                        :ARG1 (a2 / attend-01
                              :ARG0 p
                              :ARG1 (p2 / passover))
                        :mod (f / final))
                  :op2 (g2 / get-01
                        :ARG0 p
                        :ARG1 (c / church
                              :poss p))))
      :snt2 (l / look-02
            :ARG0 (p3 / person
                  :name (n2 / name
                        :op1 ""Orthidoxedhey""))
            :ARG1 (p4 / person
                  :ARG0-of (l2 / love-01))
            :ARG2 (n3 / nightmare
                  :poss (c2 / child))))"
Im thinking it's rickon,"# ::snt Im thinking it's rickon
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (r / rickon
            :domain (ii2 / it)))"
Do you walk a path that was shown in a vision at the pond in the forest? Do you make your first plane out of recycled parts?,"# ::snt Do you walk a path that was shown in a vision at the pond in the forest? Do you make your first plane out of recycled parts?
(m / multi-sentence
      :snt1 (w / walk-01
            :ARG0 (y / you)
            :ARG2 (p / path
                  :ARG1-of (s / show-01
                        :ARG0 (e / envision-01
                              :location (p2 / pond
                                    :location (f / forest)))))
            :polarity (a / amr-unknown))
      :snt2 (m2 / make-01
            :ARG0 (y2 / you)
            :ARG1 (p3 / plane
                  :ord (o / ordinal-entity
                        :value 1)
                  :poss y2)
            :ARG2 (p4 / part
                  :ARG1-of (r / recycle-01))
            :polarity (a2 / amr-unknown)))"
