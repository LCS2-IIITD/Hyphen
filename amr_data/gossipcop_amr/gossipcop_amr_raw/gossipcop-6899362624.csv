comment,amr
ich werde das nie vergessen,"# ::snt ich werde das nie vergessen
(w / werde-de-04
      :ARG0 (ii / i)
      :ARG1 (n / nie
            :mod (v / vergessen)))"
Der Schmerz bleibt ein Leben lang,"# ::snt Der Schmerz bleibt ein Leben lang
(b / bleibt-00
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Der""
                  :op2 ""Schmerz""))
      :ARG1 (p2 / person
            :name (n2 / name
                  :op1 ""Leben""
                  :op2 ""Lang"")
            :mod (e / e)))"
No way....,"# ::snt No way....
(w / way
      :quant 0)"
Kurz wiederbeleben,"# ::snt Kurz wiederbeleben
(p / person
      :name (n / name
            :op1 ""Kurz"")
      :mod (w / wiederbeleben))"
,"# ::snt 
(a / amr-empty)"
Literally your case right now,"# ::snt Literally your case right now
(c / case-03
      :ARG0 (y / you)
      :time (n / now
            :mod (r / right))
      :mod (l / literal))"
This was you,"# ::snt This was you
(y / you
      :domain (t / this))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Ach rezan Bruder,"# ::snt Ach rezan Bruder
(p / person
      :name (n / name
            :op1 ""Ach""
            :op2 ""Rezan""
            :op3 ""Bruder""))"
Einfach nur dieses oh mein Gott,"# ::snt Einfach nur dieses oh mein Gott
(a / and
      :op1 (d / die-01
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Einfach"")))
      :op2 d
      :ARG1 (p2 / person
            :name (n2 / name
                  :op1 ""Gott""))
      :mod (o / oh
            :mode expressive
            :op1 (ii / i)))"
Hdf,"# ::snt Hdf
(p / person
      :name (n / name
            :op1 ""Hdf""))"
Immer wieder schon es anzusehen haha,"# ::snt Immer wieder schon es anzusehen haha
(a / and
      :op1 (h / have-03
            :ARG0 (ii / i)
            :ARG1 (s / schon
                  :mod (w / wieder)))
      :op2 (h2 / have-03
            :ARG0 ii
            :ARG1 (a2 / anzusehen))
      :mod (h3 / haha
            :mode expressive))"
einfach k views hahaha,"# ::snt einfach k views hahaha
(v / view-02
      :ARG0 (p / person
            :name (n / name
                  :op1 ""einfach""))
      :mod (h / haha
            :mode expressive))"
same,"# ::snt same
(s / same-01)"
REST IN FUCKING PIECE,"# ::snt REST IN FUCKING PIECE
(r / rancor
      :mod (f / fucking
            :mode expressive))"
That really sucks,"# ::snt That really sucks
(s / suck-03
      :ARG0 (t / that)
      :degree (r / really))"
my xbox would be out the window,"# ::snt my xbox would be out the window
(b / be-located-at-91
      :ARG1 (p / product
            :name (n / name
                  :op1 ""xbox"")
            :poss (ii / i))
      :ARG2 (o / out-06
            :ARG1 p
            :ARG2 (w / window)))"
it was a teammate...,"# ::snt it was a teammate...
(p / person
      :ARG0-of (s / share-01)
      :domain (ii / it))"
Stupid kid who left the game! Wtf!,"# ::snt Stupid kid who left the game! Wtf!
(k / kid
      :mod (s / stupid)
      :ARG0-of (l / leave-11
            :ARG1 (g / game))
      :mod (f / fuck
            :mode expressive))"
,"# ::snt 
(a / amr-empty)"
"noooooo wayyyy if this happened to me, i would shove my cousin down the stairwell, jesus christ","# ::snt noooooo wayyyy if this happened to me, i would shove my cousin down the stairwell, jesus christ
(s / say-01
      :ARG0 (ii / i)
      :ARG1 (s2 / shove-01
            :ARG0 ii
            :ARG1 (p / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 ii
                        :ARG2 (c / cousin)))
            :ARG2 (s3 / stairwell)
            :condition (e / event
                  :mod ii
                  :mod (t / this))
            :degree (w / way
                  :mod (s4 / so)))
      :ARG2 (p2 / person
            :name (n / name
                  :op1 ""Jesus""
                  :op2 ""Christ"")))"
,"# ::snt 
(a / amr-empty)"
I'd be so pissed,"# ::snt I'd be so pissed
(p / piss-03
      :ARG1 (ii / i)
      :degree (s / so))"
,"# ::snt 
(a / amr-empty)"
[kkalJF;ALHFLK;ZMF NALJKDHF KLJVM;LZKHFGASLKHVJ FUCK,"# ::snt [kkalJF;ALHFLK;ZMF NALJKDHF KLJVM;LZKHFGASLKHVJ FUCK
(f / fuck-01
      :mode expressive
      :ARG1 (a / and
            :op1 (p / person
                  :name (n / name
                        :op1 ""kkalJF""))
            :op2 (p2 / person
                  :name (n2 / name
                        :op1 ""ALHFLK""))
            :op3 (p3 / person
                  :name (n3 / name
                        :op1 ""ZMF""))
            :op4 (p4 / person
                  :name (n4 / name
                        :op1 ""KlJKDHF""))
            :op5 (p5 / person
                  :name (n5 / name
                        :op1 ""LZKHFGASLKHVJ""))))"
,"# ::snt 
(a / amr-empty)"
I'd punch my monitor,"# ::snt I'd punch my monitor
(p / punch-01
      :ARG0 (ii / i)
      :ARG1 (m / monitor
            :poss ii))"
OMG du tust mir so leid,"# ::snt OMG du tust mir so leid
(l / leid
      :mode expressive
      :mod (o / oh-my-god
            :mode expressive)
      :domain (p / person
            :name (n / name
                  :op1 ""Mir""))
      :degree (s / so))"
That's so unlucky,"# ::snt That's so unlucky
(l / lucky
      :polarity -
      :degree (s / so)
      :domain (t / that))"
Lmao,"# ::snt Lmao
(l / laugh-01
      :ARG0 (ii / i
            :part (a / ass))
      :ARG3 (o / off
            :op1 a))"
I am so sorry...,"# ::snt I am so sorry...
(s / sorry-01
      :ARG1 (ii / i)
      :degree (s2 / so))"
nooooo,"# ::snt nooooo
(n / no)"
PEAKKKKKKKKKKK,"# ::snt PEAKKKKKKKKKKK
(p / peak-01)"
Hahaha du Taliban,"# ::snt Hahaha du Taliban
(d / du
      :mod (c / criminal-organization
            :name (n / name
                  :op1 ""Taliban""))
      :mod (h / haha
            :mode expressive))"
...,"# ::snt ...
(a / amr-empty)"
:0,"# ::snt :0
(s / string-entity
      :value "":0"")"
ehre ????????????????????????????????,"# ::snt ehre ????????????????????????????????
(e / eh
      :mode expressive)"
So you are a suicide bomber????,"# ::snt So you are a suicide bomber????
(c / cause-01
      :ARG1 (b / bomb-01
            :mod (s / suicide)
            :domain (y / you)
            :polarity (a / amr-unknown)))"
,"# ::snt 
(a / amr-empty)"
its for tac campers or sometimes when people camps in top house but ur right,"# ::snt its for tac campers or sometimes when people camps in top house but ur right
(c / contrast-01
      :ARG1 (o / or
            :op1 (b / benefit-01
                  :ARG0 (c2 / camp-02
                        :ARG0 (p / person)
                        :ARG1 (l / location
                              :name (n / name
                                    :op1 ""Tac""))))
            :op2 (b2 / benefit-01
                  :ARG0 c2
                  :ARG1 p
                  :time (c3 / camp-02
                        :ARG0 (p2 / person)
                        :location (h / house
                              :mod (t / top))
                        :frequency (s / sometimes))))
      :ARG2 (r / right-06
            :ARG1 (y / you)))"
i almost cried after this,"# ::snt i almost cried after this
(c / cry-02
      :ARG0 (ii / i)
      :mod (a / almost)
      :time (a2 / after
            :op1 (t / this)))"
the best thing is that the host was on my team. A sniper called Apoc Zithy fucktard,"# ::snt the best thing is that the host was on my team. A sniper called Apoc Zithy fucktard
(m / multi-sentence
      :snt1 (h / have-degree-91
            :ARG1 (p / person
                  :ARG0-of (h2 / host-01)
                  :part-of (t / team
                        :poss (ii / i)))
            :ARG2 (g / good-02
                  :ARG1 p)
            :ARG3 (m2 / most))
      :snt2 (c / call-01
            :ARG1 (s / sniper)
            :ARG2 (p2 / person
                  :name (n / name
                        :op1 ""Apoc""
                        :op2 ""Zithy"")
                  :mod (f / fucktard))))"
ahhahahahahah true but i use it when someone camps one my tac so i can blow him and myself up,"# ::snt ahhahahahahah true but i use it when someone camps one my tac so i can blow him and myself up
(c / contrast-01
      :ARG1 (t / true-01)
      :ARG2 (u / use-01
            :ARG0 (ii / i)
            :ARG1 (ii2 / it)
            :ARG2 (c2 / camp-02
                  :ARG0 (s / someone)
                  :ARG1 (o / one)
                  :purpose (p / possible-01
                        :ARG1 (b / blow-up-06
                              :ARG0 ii
                              :ARG1 (a / and
                                    :op1 (h / he)
                                    :op2 ii))))))"
C4s,"# ::snt C4s
(p / product
      :name (n / name
            :op1 ""C4s""))"
,"# ::snt 
(a / amr-empty)"
Holy.,"# ::snt Holy.
(h / holy)"
rip,"# ::snt rip
(r / rip)"
fuuuuckkk unlucky,"# ::snt fuuuuckkk unlucky
(l / lucky
      :polarity -
      :mode expressive)"
fuck the on head this could be on with on head,"# ::snt fuck the on head this could be on with on head
(a / and
      :op1 (f / fuck-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (h / head))
      :op2 (p / possible-01
            :ARG1 (o / on-heads
                  :domain (t / this))))"
