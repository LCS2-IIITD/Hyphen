comment,amr
Hi,"# ::snt Hi
(h / hi)"
he should bee grateful instead of constantly dissing his role.,"# ::snt he should bee grateful instead of constantly dissing his role.
(r / recommend-01
      :ARG1 (a / appreciate-02
            :ARG0 (h / he)
            :ARG1-of (ii / instead-of-91
                  :ARG2 (d / disrespect-01
                        :ARG0 h
                        :ARG1 (r2 / role
                              :poss h)
                        :manner (c / constant)))))"
he has been doing a lot of talking and interviews. No one here in the USA new who he was before frog.,"# ::snt he has been doing a lot of talking and interviews. No one here in the USA new who he was before frog.
(m / multi-sentence
      :snt1 (d / do-02
            :ARG0 (h / he)
            :ARG1 (a / and
                  :op1 (t / talk-01
                        :ARG0 h)
                  :op2 (ii / interview-01
                        :ARG1 h)
                  :quant (l / lot)))
      :snt2 (n / new-01
            :ARG0 (n2 / no-one
                  :location (h2 / here
                        :location (c / country
                              :name (n3 / name
                                    :op1 ""USA""))))
            :ARG1 (h3 / he
                  :time (b / before
                        :op1 (p / person
                              :name (n4 / name
                                    :op1 ""Frog""))))))"
I think he said this for his stalkers JDO and minions,"# ::snt I think he said this for his stalkers JDO and minions
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (s / say-01
            :ARG0 (h / he)
            :ARG1 (t2 / this)
            :ARG2 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""JDO"")
                        :ARG0-of (s2 / stalk-02
                              :ARG1 h))
                  :op2 (m / minion
                        :poss p))))"
he fears for his life that's a joke. He could never be as big as John Lennon.,"# ::snt he fears for his life that's a joke. He could never be as big as John Lennon.
(m / multi-sentence
      :snt1 (f / fear-01
            :ARG0 (h / he)
            :ARG1 (l / life
                  :poss h)
            :ARG2-of (j / joke-01))
      :snt2 (p / possible-01
            :polarity -
            :ARG1 (h2 / have-degree-91
                  :ARG1 (h3 / he)
                  :ARG2 (b / big)
                  :ARG3 (e / equal)
                  :ARG4 (p2 / person
                        :name (n / name
                              :op1 ""John""
                              :op2 ""Lennon""))
                  :time (e2 / ever))))"
"Fantastic!!Happy Friday, Kendra!! mmmuuaa","# ::snt Fantastic!!Happy Friday, Kendra!! mmmuuaa
(m / multi-sentence
      :snt1 (f / fantastic-02
            :mode expressive)
      :snt2 (s / say-01
            :ARG1 (h / happy-01
                  :ARG1 (d / date-entity
                        :weekday (f2 / friday)))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Kendra""))))"
To each other: 'What are you wearing? Clothes?',"# ::snt To each other: 'What are you wearing? Clothes?'
(a / ask-01
      :ARG0 (o / other
            :mod (e / each))
      :ARG1 (a2 / and
            :op1 (w / wear-01
                  :ARG0 (y / you)
                  :ARG1 (a3 / amr-unknown))
            :op2 (c / clothes
                  :polarity (a4 / amr-unknown)))
      :ARG2 o)"
Fantastic,"# ::snt Fantastic
(f / fantastic-02)"
im doing more as they come up.,"# ::snt im doing more as they come up.
(d / do-02
      :ARG0 (ii / i)
      :ARG1 (m / more)
      :time (c / come-up-13
            :ARG1 (t / they)))"
It was a very good interview... Waiting the next...,"# ::snt It was a very good interview... Waiting the next...
(m / multi-sentence
      :snt1 (ii / interview-01
            :ARG1-of (g / good-02
                  :degree (v / very))
            :domain (ii2 / it))
      :snt2 (w / wait-01
            :time (n / next)))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Shared this exact sentiment with over the weekend.,"# ::snt Shared this exact sentiment with over the weekend.
(s / share-01
      :ARG1 (s2 / sentiment
            :mod (e / exact)
            :mod (t / this))
      :time (w / weekend))"
$we are the same futurum est et futurae?,"# ::snt $we are the same futurum est et futurae?
(s / same-01
      :polarity (a / amr-unknown)
      :ARG1 (w / we)
      :ARG2 (a2 / and
            :op1 (f / futurum)
            :op2 (f2 / futurum)
            :op3 (f3 / futurae)))"
afk : [],"# ::snt afk : []
(s / say-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""afk""))
      :ARG1 (t / thing
            :mod (x / [])))"
[],"# ::snt []
(a / amr-empty)"
[],"# ::snt []
(a / amr-empty)"
[],"# ::snt []
(a / amr-empty)"
having kids matters,"# ::snt having kids matters
(m / matter-01
      :ARG1 (h / have-05
            :ARG1 (k / kid)))"
this is why they all forget : [],"# ::snt this is why they all forget : []
(c / cause-01
      :ARG0 (t / this)
      :ARG1 (f / forget-01
            :ARG0 (t2 / they
                  :mod (a / all))))"
[],"# ::snt []
(a / amr-empty)"
[],"# ::snt []
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
[],"# ::snt []
(a / amr-empty)"
[],"# ::snt []
(a / amr-empty)"
[],"# ::snt []
(a / amr-empty)"
*weather changing*,"# ::snt *weather changing*
(c / change-01
      :ARG1 (w / weather))"
[],"# ::snt []
(a / amr-empty)"
memristor ? [],"# ::snt memristor ? []
(p / person
      :polarity (a / amr-unknown)
      :ARG0-of (h / have-org-role-91
            :ARG2 (m / minister)))"
[],"# ::snt []
(a / amr-empty)"
yes... we're observing a collision : [],"# ::snt yes... we're observing a collision : []
(o / observe-01
      :ARG0 (w / we)
      :ARG1 (c / collide-01))"
but $I prefer JT : [],"# ::snt but $I prefer JT : []
(c / contrast-01
      :ARG2 (p / prefer-01
            :ARG0 (ii / i)
            :ARG1 (p2 / person
                  :name (n / name
                        :op1 ""JT""))
            :ARG2 (t / thing
                  :mod (x / []))))"
is the official contact : [],"# ::snt is the official contact : []
(c / contact-01
      :mod (o / official))"
,"# ::snt 
(a / amr-empty)"
[],"# ::snt []
(a / amr-empty)"
They are both there from here.,"# ::snt They are both there from here.
(b / be-from-91
      :ARG1 (t / they
            :mod (b2 / both))
      :ARG2 (h / here))"
possibly jit in under hr now that siri isn't running hot : [],"# ::snt possibly jit in under hr now that siri isn't running hot : []
(p / possible-01
      :ARG1 (b / be-temporally-at-91
            :ARG1 (ii / it)
            :ARG2 (u / under
                  :op1 (t / temporal-quantity
                        :quant 1
                        :unit (h / hour)))
            :time (n / now
                  :time-of (r / run-01
                        :polarity -
                        :ARG1 (ii2 / iri)
                        :ARG1-of (h2 / hot-05)))))"
$I think we just traded futures.,"# ::snt $I think we just traded futures.
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (t2 / trade-01
            :ARG0 (w / we)
            :ARG1 (f / futures)
            :time (j / just)))"
[],"# ::snt []
(a / amr-empty)"
Where the light is,"# ::snt Where the light is
(t / thing
      :location-of (l / light))"
"Ha.. its just a capital ""i"" not a lower case ""L"".My mind is growing.","# ::snt Ha.. its just a capital ""i"" not a lower case ""L"".My mind is growing.
(m / multi-sentence
      :snt1 (h / ha
            :mode expressive)
      :snt2 (c / contrast-01
            :ARG1 (c2 / capital
                  :value ""i""
                  :mod (j / just))
            :ARG2 (c3 / case-04
                  :ARG1 (s / string-entity
                        :value ""L"")
                  :ARG1-of (h2 / have-degree-91
                        :ARG2 (l / low-04)
                        :ARG3 (m2 / more))))
      :snt3 (g / grow-01
            :ARG1 (m3 / mind
                  :part-of (ii / i))))"
"look at my ""Following"" and tell us what you see.","# ::snt look at my ""Following"" and tell us what you see.
(a / and
      :op1 (l / look-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (f / follow-02
                  :ARG0 (ii / i)))
      :op2 (t / tell-01
            :mode imperative
            :ARG0 y
            :ARG1 (t2 / thing
                  :ARG1-of (s / see-01
                        :ARG0 y))
            :ARG2 (w / we)))"
,"# ::snt 
(a / amr-empty)"
[],"# ::snt []
(a / amr-empty)"
every1 still here ? [],"# ::snt every1 still here ? []
(b / be-located-at-91
      :ARG1 (e / event
            :mod (e2 / every
                  :op1 1000))
      :ARG2 (h / here)
      :mod (s / still)
      :polarity (a / amr-unknown))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
