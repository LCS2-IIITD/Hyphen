comment,amr
Because shes an idiot.,"# ::snt Because shes an idiot.
(c / cause-01
      :ARG0 (ii / idiot
            :domain (s / she)))"
Then how does Beyonce get weekly emails with Air Miles &amp; Shoppers Optimum coupons to download onto her cards?,"# ::snt Then how does Beyonce get weekly emails with Air Miles &amp; Shoppers Optimum coupons to download onto her cards?
(g / get-01
      :ARG0 (p / person
            :name (n / name
                  :op1 ""Beyonce""))
      :ARG1 (e / email-01
            :ARG2 (a / and
                  :op1 (c / company
                        :name (n2 / name
                              :op1 ""Air""
                              :op2 ""Miles""
                              :op3 ""&""
                              :op4 ""amp""))
                  :op2 (c2 / company
                        :name (n3 / name
                              :op1 ""Shoppers""
                              :op2 ""Optimum"")))
            :frequency (r / rate-entity-91
                  :ARG3 (t / temporal-quantity
                        :quant 1
                        :unit (w / week))))
      :manner (a2 / amr-unknown)
      :purpose (d / download-01
            :ARG0 p
            :ARG1 (c3 / coupon
                  :source c2)
            :destination (c4 / card
                  :poss p)))"
Bitch me too the fuck? Always forgetting passwords,"# ::snt Bitch me too the fuck? Always forgetting passwords
(m / multi-sentence
      :snt1 (b / bitch-01
            :mode imperative
            :ARG0 (y / you)
            :ARG1 (ii / i)
            :mod (t / too)
            :mod (f / fuck
                  :mode expressive))
      :snt2 (f2 / forget-01
            :ARG1 (t2 / thing
                  :ARG2-of (l / log-01))
            :time (a / always)))"
Understandable but thats MuchWork. Can people realize shes human and need live just as they do?,"# ::snt Understandable but thats MuchWork. Can people realize shes human and need live just as they do?
(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (p / possible-01
                  :ARG1 (u / understand-01
                        :ARG1 (t / that)))
            :ARG2 (m2 / much
                  :domain t))
      :snt2 (p2 / possible-01
            :ARG1 (a / and
                  :op1 (r / realize-01
                        :ARG0 (p3 / person)
                        :ARG1 (h / human
                              :domain (s / she)))
                  :op2 (n / need-01
                        :ARG0 p3
                        :ARG1 (l / live-01
                              :ARG0 p3
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (n2 / need-01
                                          :ARG0 p3
                                          :ARG1 (l2 / live-01
                                                :ARG0 p3))
                                    :mod (j / just)))))
            :polarity (a2 / amr-unknown)))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
