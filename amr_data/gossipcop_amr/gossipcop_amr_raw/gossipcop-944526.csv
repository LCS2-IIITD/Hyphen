comment,amr
Lmao,"# ::snt Lmao
(l / laugh-01
      :ARG0 (ii / i
            :part (a / ass))
      :ARG3 (o / off
            :op1 a))"
Wow thats disgusting... I wished I never asked ffs,"# ::snt Wow thats disgusting... I wished I never asked ffs
(m / multi-sentence
      :snt1 (d / disgust-01
            :ARG0 (t / that)
            :mod (w / wow
                  :mode expressive))
      :snt2 (w2 / wish-01
            :ARG0 (ii / i)
            :ARG1 (a / ask-01
                  :polarity -
                  :ARG0 ii
                  :ARG2 (p / person
                        :ARG0-of (f / fuck-01))
                  :time (e / ever))))"
That aint no cat,"# ::snt That aint no cat
(c / cat
      :polarity -
      :domain (t / that))"
Hope hes ok,"# ::snt Hope hes ok
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (o / okay-03
            :ARG1 (h2 / he)))"
So sorry for the loss of Gia,"# ::snt So sorry for the loss of Gia
(s / sorry-01
      :ARG2 (l / lose-02
            :ARG1 (p / person
                  :name (n / name
                        :op1 ""Gia"")))
      :degree (s2 / so))"
,"# ::snt 
(a / amr-empty)"
"RIP cat, it is now liberated from this world! Speaking of liberated buy the new album by on iTunes guys!","# ::snt RIP cat, it is now liberated from this world! Speaking of liberated buy the new album by on iTunes guys!
(m / multi-sentence
      :snt1 (s / say-01
            :ARG1 (r / rest-01
                  :ARG1 (c / cat)
                  :manner (p / peace))
            :ARG2 c
            :snt2-of m)
      :ARG1 (b / buy-01
            :mode imperative
            :ARG0 (g / guy)
            :ARG1 (a / album
                  :ARG1-of (n / new-01))
            :medium (p2 / product
                  :name (n2 / name
                        :op1 ""iTunes""))
            :topic (l / liberate-01
                  :ARG1 (w / world
                        :mod (t / this))))
      :ARG2 g)"
stan list jokes are not funny lena was so so sad guys please be a decent humanbeing for a sec,"# ::snt stan list jokes are not funny lena was so so sad guys please be a decent humanbeing for a sec
(f / funny
      :polarity -
      :domain (j / joke-01
            :ARG2 (l / list
                  :mod (p / product
                        :name (n / name
                              :op1 ""stan""))))
      :ARG1-of (c / cause-01
            :ARG0 (s / sad-02
                  :ARG1 (p2 / person
                        :name (n2 / name
                              :op1 ""ena""))
                  :degree (s2 / so)))
      :ARG1-of (c2 / cause-01
            :ARG0 (s3 / say-01
                  :ARG0 p2
                  :ARG1 (b / being
                        :mod (h / human)
                        :mod (d / decent)
                        :domain p2
                        :duration (t / temporal-quantity
                              :quant 1
                              :unit (s4 / second))
                        :polite +))
            :ARG2 p2))"
,"# ::snt 
(a / amr-empty)"
"I am so sorry for your loss. I never knew I could make the sounds of grief made when my cat passed. I still wear her collar as a bracelet, it's been nearly yrs. Get another cat, NOT to replace but to have a new furry friend to fill your mind with happy thoughts. Chose wisely","# ::snt I am so sorry for your loss. I never knew I could make the sounds of grief made when my cat passed. I still wear her collar as a bracelet, it's been nearly yrs. Get another cat, NOT to replace but to have a new furry friend to fill your mind with happy thoughts. Chose wisely
(m / multi-sentence
      :snt1 (s / sorry-01
            :ARG1 (ii / i)
            :ARG2 (l / lose-02
                  :ARG0 (y / you))
            :degree (s2 / so))
      :snt2 (k / know-01
            :polarity -
            :ARG0 (ii2 / i)
            :ARG1 (p / possible-01
                  :ARG1 (s3 / sound-01
                        :ARG1 (g / grief)
                        :ARG1-of (m2 / make-01
                              :time (p2 / pass-20
                                    :ARG1 (c / cat
                                          :poss ii2)))))
            :time (e / ever))
      :snt3 (w / wear-01
            :ARG0 (ii3 / i)
            :ARG1 (c2 / collar
                  :poss (c3 / cat
                        :poss ii3))
            :ARG3 (b / bracelet)
            :mod (s4 / still)
            :time (a / after
                  :op1 (n / now)
                  :quant (n2 / nearly
                        :op1 (t / temporal-quantity
                              :quant 1
                              :unit (y2 / year)))))
      :snt4 (g2 / get-01
            :mode imperative
            :ARG0 (y3 / you)
            :ARG1 (c4 / cat
                  :mod (a2 / another))
            :purpose (r / replace-01
                  :polarity -
                  :ARG1 y3
                  :ARG2 (h / have-03
                        :ARG0 y3
                        :ARG1 (p3 / person
                              :ARG0-of (h2 / have-rel-role-91
                                    :ARG1 y3
                                    :ARG2 (f / friend))
                              :mod (f2 / furry)
                              :ARG1-of (n3 / new-01))
                        :purpose (f3 / fill-01
                              :ARG0 y3
                              :ARG1 (m3 / mind
                                    :poss y3)
                              :ARG2 (t2 / thing
                                    :ARG1-of (t3 / think-01)
                                    :ARG1-of (h3 / happy-02)))))
            :snt5 (w2 / wise
                  :domain (y4 / you))))"
,"# ::snt 
(a / amr-empty)"
Probably cause she doesnt know how to take care of a hairless cat cause they have a lot of health issues &amp; need proper care,"# ::snt Probably cause she doesnt know how to take care of a hairless cat cause they have a lot of health issues &amp; need proper care
(p / probable
      :domain (c / cause-01
            :ARG0 (k / know-01
                  :polarity -
                  :ARG0 (s / she)
                  :ARG1 (t / thing
                        :manner-of (c2 / care-03
                              :ARG0 s
                              :ARG1 (c3 / cat
                                    :ARG0-of (h / have-03
                                          :polarity -
                                          :ARG1 (h2 / hair)))))
                  :ARG1-of (c4 / cause-01
                        :ARG0 (a / and
                              :op1 (ii / issue-02
                                    :ARG0 (h3 / health)
                                    :ARG1 c3)
                              :op2 (a2 / amp)
                              :quant (l / lot))
                        :op3 (n / need-01
                              :ARG0 c3
                              :ARG1 (c5 / care-03
                                    :mod (p2 / proper)))))))"
Why do people hate this lady? Never heard of her before,"# ::snt Why do people hate this lady? Never heard of her before
(m / multi-sentence
      :snt1 (c / cause-01
            :ARG0 (a / amr-unknown)
            :ARG1 (h / hate-01
                  :ARG0 (p / person)
                  :ARG1 (l / lady
                        :mod (t / this))))
      :snt2 (h2 / hear-01
            :polarity -
            :ARG0 (ii / i)
            :ARG1 l
            :time (e / ever)
            :time (b / before)))"
please shut up,"# ::snt please shut up
(s / shut-up-06
      :mode imperative
      :polite +
      :ARG0 (y / you)
      :ARG1 y)"
Sksksksk,"# ::snt Sksksksk
(p / person
      :name (n / name
            :op1 ""Sksksksk""))"
Dont get a sphynx cat or any cat if you dont know how to take care of it properly smh,"# ::snt Dont get a sphynx cat or any cat if you dont know how to take care of it properly smh
(g / get-01
      :polarity -
      :mode imperative
      :ARG0 (y / you)
      :ARG1 (o / or
            :op1 (c / cat
                  :mod (s / sphynx))
            :op2 (c2 / cat
                  :mod (a / any)))
      :condition (k / know-01
            :polarity -
            :ARG0 y
            :ARG1 (t / thing
                  :manner-of (c3 / care-03
                        :ARG0 y
                        :ARG1 o
                        :manner (p / proper))))
      :mod (s2 / smh
            :mode expressive))"
"who cares, stan LOO","# ::snt who cares, stan LOO
(a / and
      :op1 (c / care-01
            :ARG0 (a2 / amr-unknown))
      :op2 (l / laugh-01
            :ARG0 (ii / i)
            :manner (l2 / loud)
            :degree (s / so)))"
What an ugly cat. RIP tho,"# ::snt What an ugly cat. RIP tho
(m / multi-sentence
      :snt1 (c / cat
            :mod (u / ugly
                  :degree (s / so)))
      :snt2 (h / have-concession-91
            :ARG1 (r / RIP-01
                  :ARG1 c)))"
aw,"# ::snt aw
(a / aw
      :mode expressive)"
Who?,"# ::snt Who?
(a / amr-unknown)"
"also some of you are so rude, an animal just died, have some respect, who cares if it's lena dunham's cat or not","# ::snt also some of you are so rude, an animal just died, have some respect, who cares if it's lena dunham's cat or not
(a / and
      :op1 (r / rude-01
            :ARG1 (p / person
                  :ARG1-of (ii / include-91
                        :ARG2 (y / you))
                  :quant (s / some))
            :mod (a2 / also)
            :ARG2-of (h / have-degree-91
                  :ARG1 p
                  :ARG3 (s2 / so)))
      :op2 (d / die-01
            :ARG1 (a3 / animal)
            :time (j / just))
      :op3 (r2 / respect-01
            :ARG0 p
            :mod (s3 / some))
      :op4 (c / care-01
            :ARG0 (a4 / amr-unknown)
            :ARG1 (o / or
                  :op1 (c2 / cat
                        :poss (p2 / person
                              :name (n / name
                                    :op1 ""Lena""
                                    :op2 ""Dunham"")))
                  :op2 (c3 / cat
                        :polarity -
                        :poss p2))))"
why did it only survive months?!?!?!!?!?!,"# ::snt why did it only survive months?!?!?!!?!?!
(s / survive-01
      :ARG0 (ii / it)
      :ARG1 (m / multiple
            :op1 (t / temporal-quantity
                  :quant 1
                  :unit (m2 / month)))
      :mod (o / only)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)))"
Hope it's okay,"# ::snt Hope it's okay
(h / hope-01
      :ARG0 (ii / i)
      :ARG1 (o / okay-04
            :ARG1 (ii2 / it)))"
What about the dog she gave away?,"# ::snt What about the dog she gave away?
(a / amr-unknown
      :topic (d / dog
            :ARG1-of (g / give-away-02
                  :ARG0 (s / she))))"
Stan list,"# ::snt Stan list
(l / list
      :mod (p / person
            :name (n / name
                  :op1 ""Stan"")))"
Rest in peace cat,"# ::snt Rest in peace cat
(s / say-01
      :ARG1 (r / rest-01
            :ARG1 (c / cat)
            :manner (p / peace))
      :ARG2 c)"
"That was classic, that was classic!","# ::snt That was classic, that was classic!
(a / and
      :op1 (c / classic
            :domain (t / that)
            :op2-of a)
      :mode expressive)"
Stan list,"# ::snt Stan list
(l / list
      :mod (p / person
            :name (n / name
                  :op1 ""Stan"")))"
Stan list,"# ::snt Stan list
(l / list
      :mod (p / person
            :name (n / name
                  :op1 ""Stan"")))"
we dont care,"# ::snt we dont care
(c / care-01
      :polarity -
      :ARG0 (w / we))"
,"# ::snt 
(a / amr-empty)"
the cat was cute,"# ::snt the cat was cute
(c / cute
      :domain (c2 / cat))"
Stan List,"# ::snt Stan List
(p / person
      :name (n / name
            :op1 ""Stan""
            :op2 ""List""))"
Stan list,"# ::snt Stan list
(l / list
      :mod (p / person
            :name (n / name
                  :op1 ""Stan"")))"
The cat is free,"# ::snt The cat is free
(f / free-04
      :ARG1 (c / cat))"
So sorry that cat had to live with her,"# ::snt So sorry that cat had to live with her
(s / sorry-01
      :ARG2 (o / obligate-01
            :ARG1 (c / cat
                  :mod (t / that))
            :ARG2 (l / live-01
                  :ARG0 c
                  :accompanier (s2 / she)))
      :degree (s3 / so))"
