comment,amr
Huge congratulations to the amazing and his beautiful wife on the baby newsWill always remember this day,"# ::snt Huge congratulations to the amazing and his beautiful wife on the baby newsWill always remember this day
(m / multi-sentence
      :snt1 (c / congratulate-01
            :ARG1 (a / and
                  :op1 (p / person
                        :ARG0-of (a2 / amaze-01))
                  :op2 (p2 / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 (h2 / he)
                              :ARG2 (w / wife
                                    :ARG1-of (b / beautiful-02))))
                  :ARG2 (n / news
                        :mod (b2 / baby)))
            :mod (h3 / huge))
      :snt2 (r / remember-01
            :ARG0 (ii / i)
            :ARG1 (d / day
                  :mod (t / this))
            :time (a3 / always)))"
Awww congrats Matt and Renee so excited he's gonna be a great dad Ans she's gonna be a great mom wish them the best,"# ::snt Awww congrats Matt and Renee so excited he's gonna be a great dad Ans she's gonna be a great mom wish them the best
(m / multi-sentence
      :snt1 (c / congratulate-01
            :ARG1 (a / and
                  :op1 (p / person
                        :name (n / name
                              :op1 ""Matt""))
                  :op2 (p2 / person
                        :name (n2 / name
                              :op1 ""Renee"")))
            :mod (a2 / aw
                  :mode expressive))
      :snt2 (a3 / and
            :op1 (e / excite-01
                  :ARG0 (h / have-rel-role-91
                        :ARG0 (h2 / he)
                        :ARG2 (d / dad
                              :mod (g / great)))
                  :ARG1 a
                  :op2-of a3)
            :ARG0 (h3 / have-rel-role-91
                  :ARG0 (s / she)
                  :ARG2 (m2 / mom
                        :mod (g2 / great)))
            :ARG1 a)
      :snt3 (w / wish-01
            :ARG0 (a4 / and
                  :op1 p
                  :op2 p2)
            :ARG1 (t / thing
                  :ARG1-of (h4 / have-degree-91
                        :ARG2 (g3 / good-02
                              :ARG1 t)
                        :ARG3 (m3 / most)))))"
,"# ::snt 
(a / amr-empty)"
congratulations!,"# ::snt congratulations!
(c / congratulate-01)"
Congrats !!!,"# ::snt Congrats !!!
(c / congratulate-01)"
Congrats to the both of them!!,"# ::snt Congrats to the both of them!!
(c / congratulate-01
      :mode expressive
      :ARG1 (t / they
            :quant (b / both)))"
Wow!! Big congrats to you both!,"# ::snt Wow!! Big congrats to you both!
(m / multi-sentence
      :snt1 (w / wow-01
            :mode expressive)
      :snt2 (c / congratulate-01
            :ARG1 (y / you
                  :mod (b / both))
            :mod (b2 / big)))"
Great news congrats and Renee you're going to be a great parents,"# ::snt Great news congrats and Renee you're going to be a great parents
(a / and
      :op1 (c / congratulate-01
            :ARG1 (y / you)
            :ARG2 (n / news
                  :mod (g / great)))
      :op2 (h / have-rel-role-91
            :ARG0 (p / person
                  :name (n2 / name
                        :op1 ""Renee""))
            :ARG2 (p2 / parent
                  :mod (g2 / great))))"
Congratulations on the new arrival,"# ::snt Congratulations on the new arrival
(c / congratulate-01
      :ARG1 (a / arrive-01
            :ARG1-of (n / new-01)))"
Aren't they special,"# ::snt Aren't they special
(s / special-02
      :ARG1 (t / they)
      :ARG1-of (r / request-confirmation-91))"
amiga achei q ele ja tinha filhokkk ele ta emgreys sabia,"# ::snt amiga achei q ele ja tinha filhokkk ele ta emgreys sabia
(a / ask-01
      :ARG0 (ii / i)
      :ARG1 (a2 / and
            :op1 (a3 / ache-01)
            :op2 (t / tinha
                  :mod (f / filhokkk))
            :op3 (t2 / ta
                  :op1 (e / emgreys
                        :mod (s / sabia)))
            :ARG2 (p / person
                  :name (n / name
                        :op1 ""Ele""
                        :op2 ""Ja""))))"
AMIGA.,"# ::snt AMIGA.
(c / company
      :name (n / name
            :op1 ""AMIGA""))"
