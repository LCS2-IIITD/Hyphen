comment,amr
damn i wanna be a man then,"# ::snt damn i wanna be a man then
(w / want-01
      :ARG0 (ii / i)
      :ARG1 (m / man
            :domain ii)
      :mod (t / then)
      :ARG1-of (d / damn-01
            :ARG0 ii))"
then and now she's still beautiful,"# ::snt then and now she's still beautiful
(b / beautiful-02
      :ARG1 (s / she)
      :mod (s2 / still)
      :time (a / and
            :op1 (t / then)
            :op2 (n / now)))"
,"# ::snt 
(a / amr-empty)"
I thought that was Cher,"# ::snt I thought that was Cher
(t / think-01
      :ARG0 (ii / i)
      :ARG1 (p / person
            :name (n / name
                  :op1 ""Cher"")
            :domain (t2 / that)))"
Miley's ugly? Damn you must be blind then.,"# ::snt Miley's ugly? Damn you must be blind then.
(m / multi-sentence
      :snt1 (u / ugly
            :domain (p / person
                  :name (n / name
                        :op1 ""Miley""))
            :polarity (a / amr-unknown))
      :snt2 (ii / infer-01
            :ARG1 (b / blind-02
                  :ARG1 (y / you)
                  :mod (t / then)
                  :mod (d / damn
                        :mode expressive))))"
Which one is Billy Ray..? Which one is Tish,"# ::snt Which one is Billy Ray..? Which one is Tish
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Billy""
                  :op2 ""Ray"")
            :domain (o / one))
      :snt2 (p2 / person
            :name (n2 / name
                  :op1 ""Tish"")
            :domain (o2 / one)))"
Mad,"# ::snt Mad
(m / mad-02)"
,"# ::snt 
(a / amr-empty)"
and it should stay that way,"# ::snt and it should stay that way
(a / and
      :op2 (r / recommend-01
            :ARG1 (s / stay-01
                  :ARG1 (ii / it)
                  :ARG3 (w / way
                        :mod (t / that)))))"
Can't stand any of them,"# ::snt Can't stand any of them
(p / possible-01
      :polarity -
      :ARG1 (s / stand-03
            :ARG0 (ii / i)
            :ARG1 (t / they
                  :mod (a / any))))"
great pic,"# ::snt great pic
(p / pic
      :mod (g / great))"
