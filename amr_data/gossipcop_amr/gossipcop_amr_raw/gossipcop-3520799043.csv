comment,amr
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
Could it be that Davidson would relish closing down Scotland's Parliament?...,"# ::snt Could it be that Davidson would relish closing down Scotland's Parliament?...
(p / possible-01
      :ARG1 (r / relish-01
            :ARG0 (p2 / person
                  :name (n / name
                        :op1 ""Davidson""))
            :ARG1 (c / close-down-04
                  :ARG0 p2
                  :ARG1 (g / government-organization
                        :name (n2 / name
                              :op1 ""Parliament"")
                        :mod (c2 / country
                              :name (n3 / name
                                    :op1 ""Scotland"")))))
      :polarity (a / amr-unknown))"
Many Robotic Ruth The Mooths out and about trying to fulfill all the electorates desires????&lthudders&gt; Stuff of nightmares that image is.,"# ::snt Many Robotic Ruth The Mooths out and about trying to fulfill all the electorates desires????&lthudders&gt; Stuff of nightmares that image is.
(m / multi-sentence
      :snt1 (p / person
            :name (n / name
                  :op1 ""Ruth""
                  :op2 ""The""
                  :op3 ""Mooths"")
            :mod (r / Robotic)
            :quant (m2 / many)
            :ARG0-of (t / try-01
                  :ARG1 (f / fulfill-01
                        :ARG0 p
                        :ARG1 (d / desire-01
                              :ARG0 (e / electorate)
                              :mod (a / all))))
            :polarity (a2 / amr-unknown))
      :snt2 (a3 / and
            :op1 (s / shudder-01)
            :op2 (h / hint-01)
            :domain (s2 / stuff
                  :mod (n2 / nightmare)
                  :domain (ii / image
                        :mod (t2 / that)))))"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
.. ..,"# ::snt .. ..
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
...,"# ::snt ...
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
/10,"# ::snt /10
(n / number-01
      :ARG2 10)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
.,"# ::snt .
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
!!!,"# ::snt !!!
(t / thing
      :mode expressive)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
mbc,"# ::snt mbc
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
.,"# ::snt .
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
.,"# ::snt .
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
..,"# ::snt ..
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
mbc action,"# ::snt mbc action
(a / act-02
      :ARG0 (c / company
            :name (n / name
                  :op1 ""mbc"")))"
,"# ::snt 
(a / amr-empty)"
.,"# ::snt .
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
,"# ::snt 
(a / amr-empty)"
