# ::subgraphs [["c1-3", "c1-0", "c1-2", "c1-5", "c1-1", "c1-7", "c1-4", "c1-6"], ["c2-3", "c2-4", "c2-1", "c2-5", "c2-2", "c2-0"], ["c3-5", "c3-13", "c3-12", "c3-9", "c3-11", "c3-8", "c3-2", "c3-14", "c3-4", "c3-0", "c3-6", "c3-10", "c3-7", "c3-1", "c3-3"]]
(d / dummy
   :COMMENT (c1-3 / multi
                  :snt1 (c1-0 / forget
                              :ARG0 (c1-2 / you
                                          :SAME c1-7)
                              :ARG1 (c1-5 / past)
                              :mode imperative)
                  :snt2 (c1-1 / bring
                              :ARG0 (c1-7 / you)
                              :ARG1 (c1-4 / some)
                              :ARG2 (c1-6 / i
                                          :SAME c3-12)
                              :mode imperative))
   :COMMENT (c2-3 / have-degree
                  :ARG1 (c2-4 / person
                              :name (c2-1 / name
                                          :op1 "Whitney"
                                          :op2 "Houston"))
                  :ARG2 (c2-5 / good
                              :ARG1 c2-4)
                  :ARG3 (c2-2 / most
                              :degree (c2-0 / far))
                  :mode expressive)
   :COMMENT (c3-5 / and
                  :op1 (c3-13 / guess
                              :ARG0 (c3-12 / i)
                              :ARG1 (c3-9 / possible
                                          :ARG1 (c3-11 / get
                                                       :ARG0 c3-12
                                                       :ARG1 (c3-8 / house
                                                                   :mod (c3-2 / both))
                                                       :ARG2 (c3-14 / address
                                                                    :ARG1-of (c3-4 / same)))
                                          :polarity -))
                  :op2 (c3-0 / finish
                             :ARG1 (c3-6 / deed
                                         :mod (c3-10 / bronze)
                                         :mod (c3-7 / reside
                                                    :quant 2)
                                         :ARG1-of (c3-1 / single))
                             :time (c3-3 / yet))))
