# ::subgraphs [["c1-0"], ["c2-3", "c2-2", "c2-1", "c2-0"], ["c3-0"], ["c4-13", "c4-1", "c4-18", "c4-6", "c4-0", "c4-10", "c4-9", "c4-17", "c4-3", "c4-14", "c4-7", "c4-12", "c4-16", "c4-8", "c4-4", "c4-2", "c4-5", "c4-15", "c4-11"], ["c5-2", "c5-0", "c5-1"], ["c6-0", "c6-3", "c6-1", "c6-2"], ["c7-0"], ["c8-2", "c8-1", "c8-3", "c8-0"], ["c9-0", "c9-3", "c9-1", "c9-2"], ["c10-0", "c10-2", "c10-1"], ["c11-0", "c11-5", "c11-6", "c11-2", "c11-4", "c11-1", "c11-3"]]
(d / dummy
   :COMMENT (c1-0 / yay)
   :COMMENT (c2-3 / say
                  :ARG0 (c2-2 / i)
                  :ARG2 (c2-1 / person
                              :name (c2-0 / name
                                          :op1 "izzzzmoduck"
                                          :SAME c11-1))
                  :mode expressive)
   :COMMENT (c3-0 / thing
                  :mode expressive)
   :COMMENT (c4-13 / multi
                   :snt1 (c4-1 / look
                               :ARG0 (c4-18 / it)
                               :ARG1 (c4-6 / have-degree
                                           :ARG1 c4-18
                                           :ARG2 (c4-0 / streamline
                                                       :ARG1 c4-18)
                                           :ARG3 (c4-10 / too
                                                        :SAME c11-3)
                                           :SAME c4-5
                                           :SAME c4-17)
                               :SAME c5-2)
                   :snt2 (c4-9 / and
                               :op1 (c4-17 / have-degree
                                           :ARG1 (c4-3 / original)
                                           :ARG2 (c4-14 / clunky)
                                           :ARG3 (c4-7 / more
                                                       :quant (c4-12 / bit)
                                                       :SAME c4-15))
                               :op2 (c4-16 / feel
                                           :ARG1 (c4-8 / appropriate
                                                       :ARG1 c4-3
                                                       :ARG2 (c4-4 / style
                                                                   :ARG1 (c4-2 / show))
                                                       :ARG2-of (c4-5 / have-degree
                                                                      :ARG1 c4-3
                                                                      :ARG3 (c4-15 / more
                                                                                   :quant (c4-11 / lot)))))))
   :COMMENT (c5-2 / look
                  :ARG0 (c5-0 / robot)
                  :ARG1 (c5-1 / familiarize
                              :ARG2 c5-0))
   :COMMENT (c6-0 / character
                  :ARG1-of (c6-3 / solid)
                  :domain (c6-1 / that)
                  :ARG1-of (c6-2 / design))
   :COMMENT (c7-0 / hmm
                  :mode expressive)
   :COMMENT (c8-2 / possible
                  :ARG1 (c8-1 / dream
                              :ARG0 (c8-3 / one))
                  :mod (c8-0 / only))
   :COMMENT (c9-0 / Cuack
                  :ARG1-of (c9-3 / spot
                                 :time (c9-1 / ever)
                                 :polarity -)
                  :mod (c9-2 / this
                             :SAME c10-1))
   :COMMENT (c10-0 / obligate
                   :ARG2 (c10-2 / stop
                                :ARG1 (c10-1 / this)))
   :COMMENT (c11-0 / mean
                   :polarity (c11-5 / amr)
                   :ARG2 (c11-6 / get
                                :ARG0 (c11-2 / we)
                                :ARG1 (c11-4 / animal
                                             :name (c11-1 / name
                                                          :op1 "Darkwing"
                                                          :op2 "Duck"))
                                :mod (c11-3 / too))))
