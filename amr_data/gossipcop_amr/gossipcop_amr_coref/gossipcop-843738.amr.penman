# ::snt actually Wissam posted this message over a year ago
# ::tokens ["actually", "Wissam", "posted", "this", "message", "over", "a", "year", "ago"]
# ::lemmas ["actually", "Wissam", "post", "this", "message", "over", "a", "year", "ago"]
(c1-8 / post-01
      :ARG0 (c1-5 / person
                  :name (c1-4 / name
                              :op1 "Wissam"))
      :ARG1 (c1-3 / message
                  :mod (c1-9 / this))
      :ARG1-of (c1-6 / actual-02)
      :time (c1-1 / before
                  :op1 (c1-7 / now)
                  :quant (c1-0 / over
                               :op1 (c1-10 / temporal-quantity
                                           :unit (c1-2 / year)
                                           :quant 1))))

# ::snt Oh ok
# ::tokens ["Oh", "ok"]
# ::lemmas ["oh", "ok"]
(c2-1 / okay-01
      :mod (c2-0 / oh
                 :mode expressive))

# ::snt When people start calling Janet Jackson a gold digger. She's got her own gold!
# ::tokens ["When", "people", "start", "calling", "Janet", "Jackson", "a", "gold", "digger", ".", "She", "'s", "got", "her", "own", "gold", "!"]
# ::lemmas ["when", "people", "start", "call", "Janet", "Jackson", "a", "gold", "digger", ".", "she", "be", "get", "her", "own", "gold", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-1 / be-temporally-at-91
                  :ARG2 (c3-4 / start-01
                              :ARG0 (c3-7 / person)
                              :ARG1 (c3-8 / call-01
                                          :ARG0 c3-7
                                          :ARG1 (c3-3 / person
                                                      :name (c3-5 / name
                                                                  :op1 "Janet"
                                                                  :op2 "Jackson"))
                                          :ARG2 (c3-10 / person
                                                       :ARG0-of (c3-12 / dig-01
                                                                       :ARG1 (c3-11 / gold))))))
      :snt2 (c3-6 / have-03
                  :ARG0 (c3-0 / she)
                  :ARG1 (c3-9 / gold
                              :poss c3-0)))

# ::snt She's Janet "Ms. Jackson if you're nasty" Jackson...she's got her own money
# ::tokens ["She", "'s", "Janet", "\"", "Ms.", "Jackson", "if", "you", "'re", "nasty", "\"", "Jackson", "...", "she", "'s", "got", "her", "own", "money"]
# ::lemmas ["she", "be", "Janet", "\"", "Ms.", "Jackson", "if", "you", "be", "nasty", "\"", "Jackson", "...", "she", "be", "get", "her", "own", "money"]
(c4-2 / multi-sentence
      :snt1 (c4-5 / person
                  :name (c4-1 / name
                              :op1 "Janet"
                              :op2 "Jackson")
                  :domain (c4-3 / she)
                  :condition (c4-4 / nasty
                                   :domain (c4-0 / you)))
      :snt2 (c4-7 / get-01
                  :ARG0 c4-3)
      :ARG1 (c4-6 / money
                  :poss c4-3))

# ::snt wissam is still in love with Janet, divorce is a bitch.
# ::tokens ["wissam", "is", "still", "in", "love", "with", "Janet", ",", "divorce", "is", "a", "bitch", "."]
# ::lemmas ["wissam", "be", "still", "in", "love", "with", "Janet", ",", "divorce", "be", "a", "bitch", "."]
(c5-6 / love-01
      :ARG0 (c5-5 / person
                  :name (c5-1 / name
                              :op1 "Wissam"))
      :ARG1 (c5-2 / person
                  :name (c5-4 / name
                              :op1 "Janet"))
      :mod (c5-3 / still)
      :ARG0-of (c5-7 / cause-01
                     :ARG1 (c5-0 / bitch
                                 :domain (c5-8 / divorce-01))))

# ::snt maybe
# ::tokens ["maybe"]
# ::lemmas ["maybe"]
(c6-0 / possible-01)

# ::snt I'm sure made the right choice for her and their baby. He's a precious little guy, so beautiful
# ::tokens ["I", "'m", "sure", "made", "the", "right", "choice", "for", "her", "and", "their", "baby", ".", "He", "'s", "a", "precious", "little", "guy", ",", "so", "beautiful"]
# ::lemmas ["i", "be", "sure", "make", "the", "right", "choice", "for", "she", "and", "their", "baby", ".", "he", "be", "a", "precious", "little", "guy", ",", "so", "beautiful"]
(c7-2 / multi-sentence
      :snt1 (c7-9 / choose-01
                  :ARG0 (c7-12 / i)
                  :ARG1 (c7-13 / and
                               :op1 (c7-4 / she)
                               :op2 (c7-6 / person
                                          :ARG0-of (c7-5 / have-rel-role-91
                                                         :ARG1 (c7-11 / they)
                                                         :ARG2 (c7-1 / baby))))
                  :ARG1-of (c7-0 / sure-02))
      :snt2 (c7-14 / guy
                   :domain (c7-10 / he)
                   :mod (c7-7 / little)
                   :mod (c7-3 / precious)
                   :ARG1-of (c7-8 / beautiful-02
                                  :degree (c7-15 / so))))

# ::snt Or maybe Wissam was a little too controlling.
# ::tokens ["Or", "maybe", "Wissam", "was", "a", "little", "too", "controlling", "."]
# ::lemmas ["or", "maybe", "Wissam", "be", "a", "little", "too", "control", "."]
(c8-0 / or
      :op2 (c8-4 / possible-01
                 :ARG1 (c8-6 / control-01
                             :ARG0 (c8-2 / person
                                         :name (c8-1 / name
                                                     :op1 "Wissam"))
                             :ARG2-of (c8-3 / have-degree-91
                                            :ARG1 c8-2
                                            :ARG3 (c8-7 / too
                                                        :mod (c8-5 / little))))))

# ::snt Janet got what she wanted a baby n money, she's jst heartless
# ::tokens ["Janet", "got", "what", "she", "wanted", "a", "baby", "n", "money", ",", "she", "'s", "jst", "heartless"]
# ::lemmas ["Janet", "get", "what", "she", "want", "a", "baby", "n", "money", ",", "she", "be", "jst", "heartless"]
(c9-10 / get-01
       :ARG0 (c9-6 / person
                   :name (c9-1 / name
                               :op1 "Janet"))
       :ARG1 (c9-4 / and
                   :op1 (c9-9 / thing
                              :ARG1-of (c9-7 / want-01
                                             :ARG0 c9-6
                                             :ARG1-of (c9-2 / possible-01)))
                   :op2 (c9-3 / money
                              :ARG1-of c9-7
                              :ARG0 c9-6
                              :ARG1-of (c9-11 / possible-01
                                              :polarity -)))
       :ARG0-of (c9-8 / cause-01
                      :ARG1 (c9-5 / heartless
                                  :domain c9-6
                                  :degree (c9-0 / bit))))
