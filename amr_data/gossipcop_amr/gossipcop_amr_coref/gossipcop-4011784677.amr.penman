# ::snt Nooooooo
# ::tokens ["Nooooooo"]
# ::lemmas ["Nooooooo"]
(c1-0 / no)

# ::snt That must of been some good dick
# ::tokens ["That", "must", "of", "been", "some", "good", "dick"]
# ::lemmas ["that", "must", "of", "be", "some", "good", "dick"]
(c2-1 / infer-01
      :ARG1 (c2-4 / dick
                  :ARG1-of (c2-3 / good-02)
                  :mod (c2-0 / some)
                  :domain (c2-2 / that)))

# ::snt Poor baby
# ::tokens ["Poor", "baby"]
# ::lemmas ["poor", "baby"]
(c3-0 / baby
      :mod (c3-1 / poor))

# ::snt And this is News?.
# ::tokens ["And", "this", "is", "News", "?", "."]
# ::lemmas ["and", "this", "be", "News", "?", "."]
(c4-3 / and
      :op2 (c4-1 / news
                 :domain (c4-0 / this)
                 :polarity (c4-2 / amr-unknown)))

# ::snt Caitlyn? Is that thon dude who prances about in a wig, convinced that he's a woman?!
# ::tokens ["Caitlyn", "?", "Is", "that", "thon", "dude", "who", "prances", "about", "in", "a", "wig", ",", "convinced", "that", "he", "'s", "a", "woman", "?", "!"]
# ::lemmas ["Caitlyn", "?", "be", "that", "thon", "dude", "who", "prance", "about", "in", "a", "wig", ",", "convince", "that", "he", "be", "a", "woman", "?", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-4 / person
                  :name (c6-0 / name
                              :op1 "Caitlyn"))
      :snt2 (c6-9 / dude
                  :mod (c6-8 / that)
                  :ARG0-of (c6-2 / prance-01
                                 :manner (c6-6 / wig))
                  :ARG1-of (c6-7 / convince-01
                                 :ARG2 (c6-5 / woman
                                             :domain c6-9))
                  :domain c6-8)
      :polarity (c6-3 / amr-unknown))

# ::snt I feel awful for that kid
# ::tokens ["I", "feel", "awful", "for", "that", "kid"]
# ::lemmas ["i", "feel", "awful", "for", "that", "kid"]
(c9-0 / feel-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-1 / awful)
      :ARG2 (c9-2 / kid
                  :mod (c9-4 / that)))

# ::snt I didnt know white trash came that wealthy.
# ::tokens ["I", "did", "nt", "know", "white", "trash", "came", "that", "wealthy", "."]
# ::lemmas ["i", "do", "not", "know", "white", "trash", "come", "that", "wealthy", "."]
(c10-0 / know-01
       :ARG0 (c10-4 / i)
       :ARG1 (c10-3 / come-01
                    :ARG1 (c10-5 / trash
                                 :ARG1-of (c10-2 / white-02))
                    :ARG4 (c10-1 / wealthy
                                 :degree (c10-6 / that)))
       :polarity -)

# ::snt Wtf!
# ::tokens ["Wtf", "!"]
# ::lemmas ["Wtf", "!"]
(c11-1 / amr-unknown
       :mod (c11-0 / fuck
                   :mode expressive))

# ::snt Such a lowlife family
# ::tokens ["Such", "a", "lowlife", "family"]
# ::lemmas ["such", "a", "lowlife", "family"]
(c12-0 / family
       :mod (c12-1 / lowlife
                   :degree (c12-2 / such)))

# ::snt chris jenner should be so proud another baby out of wed lock. guess mother teaches her daughters well.
# ::tokens ["chris", "jenner", "should", "be", "so", "proud", "another", "baby", "out", "of", "we", "d", "lock", ".", "guess", "mother", "teaches", "her", "daughters", "well", "."]
# ::lemmas ["chris", "jenner", "should", "be", "so", "proud", "another", "baby", "out", "of", "we", "d", "lock", ".", "guess", "mother", "teach", "her", "daughter", "well", "."]
(c13-11 / multi-sentence
        :snt1 (c13-14 / recommend-01
                      :ARG1 (c13-15 / pride-01
                                    :ARG0 (c13-12 / person
                                                  :name (c13-13 / name
                                                                :op1 "Chris"
                                                                :op2 "Jenner"))
                                    :ARG1 (c13-10 / baby
                                                  :mod (c13-8 / another)
                                                  :ARG1-of (c13-4 / out-06
                                                                  :ARG2 (c13-1 / lock-01)))
                                    :degree (c13-0 / so)))
        :snt2 (c13-9 / guess-01
                     :ARG1 (c13-7 / teach-01
                                  :ARG0 (c13-3 / person
                                               :ARG0-of (c13-5 / have-rel-role-91
                                                               :ARG2 (c13-6 / mother)))
                                  :ARG1 (c13-16 / well-09)
                                  :ARG2 (c13-2 / person
                                               :ARG0-of (c13-17 / have-rel-role-91
                                                                :ARG1 c13-3
                                                                :ARG2 (c13-18 / daughter))))))

# ::snt POOR
# ::tokens ["POOR"]
# ::lemmas ["POOR"]
(c14-0 / phew
       :mode expressive)

# ::snt you must disappointed how fucked the family is.
# ::tokens ["you", "must", "disappointed", "how", "fucked", "the", "family", "is", "."]
# ::lemmas ["you", "must", "disappoint", "how", "fuck", "the", "family", "be", "."]
(c15-3 / infer-01
       :ARG1 (c15-5 / disappoint-01
                    :ARG0 (c15-4 / thing
                                 :degree-of (c15-0 / fuck-01
                                                   :ARG1 (c15-2 / family)))
                    :ARG1 (c15-1 / you)))

# ::snt Cause Caitlyn revealed it
# ::tokens ["Cause", "Caitlyn", "revealed", "it"]
# ::lemmas ["Cause", "Caitlyn", "reveal", "it"]
(c16-3 / cause-01
       :ARG0 (c16-1 / reveal-01
                    :ARG0 (c16-2 / person
                                 :name (c16-0 / name
                                              :op1 "Caitlyn"))
                    :ARG1 (c16-4 / it)))

# ::snt The family is gonna be pissed watch
# ::tokens ["The", "family", "is", "gon", "na", "be", "pissed", "watch"]
# ::lemmas ["the", "family", "be", "going", "to", "be", "piss", "watch"]
(c17-2 / piss-03
       :ARG1 (c17-0 / family)
       :manner (c17-3 / watch-01
                      :ARG0 (c17-1 / you)))
