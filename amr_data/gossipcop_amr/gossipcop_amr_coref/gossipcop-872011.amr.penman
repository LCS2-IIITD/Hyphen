# ::snt THANK YOU!! WONDERING SAME!!I always fast forward when she is on. She is such a hater
# ::tokens ["THANK", "YOU", "!", "!", "WONDERING", "SAME!!I", "always", "fast", "forward", "when", "she", "is", "on", ".", "She", "is", "such", "a", "hater"]
# ::lemmas ["thank", "you", "!", "!", "wonder", "same!!i", "always", "fast", "forward", "when", "she", "be", "on", ".", "she", "be", "such", "a", "hater"]
(c1-2 / multi-sentence
      :snt1 (c1-8 / thank-01
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-1 / you)
                  :mode expressive)
      :snt2 (c1-3 / same-01
                  :ARG2 (c1-6 / weather)
                  :time (c1-4 / always)
                  :mode expressive)
      :snt3 (c1-5 / hater
                  :domain (c1-0 / she)
                  :degree (c1-9 / such)))

# ::snt She only regrets it because it makes her more irrelevant to the show than ever before!! She has nothing to offer the show.
# ::tokens ["She", "only", "regrets", "it", "because", "it", "makes", "her", "more", "irrelevant", "to", "the", "show", "than", "ever", "before", "!", "!", "She", "has", "nothing", "to", "offer", "the", "show", "."]
# ::lemmas ["she", "only", "regret", "it", "because", "it", "make", "she", "more", "irrelevant", "to", "the", "show", "than", "ever", "before", "!", "!", "she", "have", "nothing", "to", "offer", "the", "show", "."]
(c2-4 / multi-sentence
      :snt1 (c2-8 / regret-01
                  :ARG0 (c2-6 / she)
                  :ARG1 (c2-13 / it)
                  :mod (c2-0 / only)
                  :ARG1-of (c2-12 / cause-01
                                  :ARG0 (c2-10 / make-02
                                               :ARG0 c2-13
                                               :ARG1 (c2-14 / relevant-01
                                                            :ARG1 c2-6
                                                            :ARG2 (c2-1 / show)
                                                            :ARG2-of (c2-11 / have-degree-91
                                                                            :ARG1 c2-6
                                                                            :ARG3 (c2-15 / more)
                                                                            :ARG4 (c2-2 / before
                                                                                        :mod (c2-9 / ever)))))))
      :snt2 (c2-3 / offer-01
                  :ARG0 (c2-16 / she)
                  :ARG1 (c2-5 / nothing)
                  :ARG3 (c2-7 / show)))

# ::snt Why is this girl talking about bringing Kelly in? Why is Meghan still around? She's a bore &amp; should focus on her baby not trying to be on tv
# ::tokens ["Why", "is", "this", "girl", "talking", "about", "bringing", "Kelly", "in", "?", "Why", "is", "Meghan", "still", "around", "?", "She", "'s", "a", "bore", "&", "amp", ";", "should", "focus", "on", "her", "baby", "not", "trying", "to", "be", "on", "tv"]
# ::lemmas ["why", "be", "this", "girl", "talk", "about", "bring", "Kelly", "in", "?", "why", "be", "Meghan", "still", "around", "?", "she", "be", "a", "bore", "&", "amp", ";", "should", "focus", "on", "her", "baby", "not", "try", "to", "be", "on", "tv"]
(c3-15 / multi-sentence
       :snt1 (c3-18 / cause-01
                    :ARG0 (c3-9 / amr-unknown)
                    :ARG1 (c3-10 / talk-01
                                 :ARG0 (c3-11 / girl
                                              :mod (c3-19 / this))
                                 :ARG1 (c3-14 / bring-01
                                              :ARG0 c3-11
                                              :ARG1 (c3-23 / person
                                                           :name (c3-21 / name
                                                                        :op1 "Kelly"))
                                              :ARG2 (c3-25 / inside))))
       :snt2 (c3-12 / cause-01
                    :ARG0 (c3-8 / amr-unknown)
                    :ARG1 (c3-2 / be-located-at-91
                                :ARG1 (c3-16 / person
                                             :name (c3-17 / name
                                                          :op1 "Meghan"))
                                :ARG2 (c3-7 / around)
                                :mod (c3-0 / still)))
       :snt3 (c3-27 / and
                    :op1 (c3-4 / bore-02
                               :ARG0 (c3-5 / she))
                    :op2 (c3-24 / amp
                                :domain c3-5))
       :snt4 (c3-22 / recommend-01
                    :ARG1 (c3-20 / focus-01
                                 :ARG1 (c3-3 / person
                                             :ARG0-of (c3-6 / have-rel-role-91
                                                            :ARG1 c3-5
                                                            :ARG2 (c3-13 / baby)))
                                 :ARG2 (c3-26 / try-01
                                              :ARG0 c3-3
                                              :ARG1 c3-2
                                              :ARG1 c3-3
                                              :ARG2 (c3-1 / television)
                                              :polarity -))))

# ::snt Why is Meghan always in her kitchen for the show?
# ::tokens ["Why", "is", "Meghan", "always", "in", "her", "kitchen", "for", "the", "show", "?"]
# ::lemmas ["why", "be", "Meghan", "always", "in", "her", "kitchen", "for", "the", "show", "?"]
(c4-5 / cause-01
      :ARG0 (c4-7 / amr-unknown)
      :ARG1 (c4-0 / be-located-at-91
                  :ARG1 (c4-3 / person
                              :name (c4-1 / name
                                          :op1 "Meghan"))
                  :ARG2 (c4-4 / kitchen
                              :poss c4-3)
                  :time (c4-6 / always)
                  :purpose (c4-2 / show-04)))

# ::snt She's regretting it because Kelly and her are kinda feuding now.
# ::tokens ["She", "'s", "regretting", "it", "because", "Kelly", "and", "her", "are", "kinda", "feuding", "now", "."]
# ::lemmas ["she", "be", "regret", "it", "because", "Kelly", "and", "she", "be", "kinda", "feud", "now", "."]
(c5-3 / regret-01
      :ARG0 (c5-2 / she)
      :ARG1 (c5-8 / it)
      :ARG1-of (c5-7 / cause-01
                     :ARG0 (c5-0 / feud-01
                                 :ARG0 (c5-5 / person
                                             :name (c5-1 / name
                                                         :op1 "Kelly"))
                                 :ARG1 c5-2
                                 :degree (c5-6 / kind-of)
                                 :time (c5-4 / now))))

# ::snt Why would she regret it then? Kelly is great for the show. She's nuts.
# ::tokens ["Why", "would", "she", "regret", "it", "then", "?", "Kelly", "is", "great", "for", "the", "show", ".", "She", "'s", "nuts", "."]
# ::lemmas ["why", "would", "she", "regret", "it", "then", "?", "Kelly", "be", "great", "for", "the", "show", ".", "she", "be", "nuts", "."]
(c6-1 / multi-sentence
      :snt1 (c6-4 / regret-01
                  :ARG0 (c6-3 / she)
                  :ARG1 (c6-9 / it)
                  :time (c6-10 / then)
                  :ARG1-of (c6-8 / cause-01
                                 :ARG0 (c6-5 / amr-unknown)))
      :snt2 (c6-11 / great
                   :domain (c6-7 / person
                                 :name (c6-2 / name
                                             :op1 "Kelly"))
                   :beneficiary (c6-0 / show-04))
      :snt3 (c6-6 / nuts
                  :domain (c6-12 / she)))

# ::snt That's why she's getting a weird edit her first real events as a main started this past ep
# ::tokens ["That", "'s", "why", "she", "'s", "getting", "a", "weird", "edit", "her", "first", "real", "events", "as", "a", "main", "started", "this", "past", "ep"]
# ::lemmas ["that", "be", "why", "she", "be", "get", "a", "weird", "edit", "her", "first", "real", "event", "as", "a", "main", "start", "this", "past", "ep"]
(c7-9 / cause-01
      :ARG0 (c7-11 / that)
      :ARG1 (c7-12 / get-01
                   :ARG0 (c7-5 / she)
                   :ARG1 (c7-7 / edit-01
                               :ARG0 c7-5
                               :ARG1 (c7-13 / event
                                            :ord (c7-0 / ordinal-entity
                                                       :value 1)
                                            :ARG1-of (c7-6 / real-04)
                                            :poss c7-5
                                            :prep-as (c7-3 / main)
                                            :ARG1-of (c7-1 / start-01
                                                           :time (c7-2 / before
                                                                       :op1 (c7-4 / now)
                                                                       :mod (c7-8 / past))))
                               :mod (c7-10 / weird))))

# ::snt Haha not really.Meghan was originally not supposed to be on this season. She was recurring but then decided later to be a main.
# ::tokens ["Haha", "not", "really", ".", "Meghan", "was", "originally", "not", "supposed", "to", "be", "on", "this", "season", ".", "She", "was", "recurring", "but", "then", "decided", "later", "to", "be", "a", "main", "."]
# ::lemmas ["haha", "not", "really", ".", "Meghan", "be", "originally", "not", "suppose", "to", "be", "on", "this", "season", ".", "she", "be", "recur", "but", "then", "decide", "later", "to", "be", "a", "main", "."]
(c8-3 / multi-sentence
      :snt1 (c8-8 / have-polarity-91
                  :ARG1-of (c8-6 / real-04)
                  :mod (c8-13 / haha
                              :mode expressive)
                  :ARG2 -)
      :snt2 (c8-5 / suppose-02
                  :ARG1 (c8-9 / person
                              :name (c8-4 / name
                                          :op1 "Meghan"))
                  :ARG2 (c8-2 / be-located-at-91
                              :ARG1 c8-9
                              :ARG2 (c8-0 / season
                                          :mod (c8-14 / this)))
                  :time (c8-1 / original)
                  :polarity -)
      :snt3 (c8-11 / contrast-01
                   :ARG1 (c8-16 / repeat-01
                                :ARG1 (c8-17 / she))
                   :ARG2 (c8-15 / decide-01
                                :ARG0 c8-17
                                :ARG1 (c8-10 / main
                                             :domain c8-17)
                                :time (c8-7 / after
                                            :op1 (c8-12 / date-entity)))))

# ::snt Bc she took her airtime?
# ::tokens ["Bc", "she", "took", "her", "airtime", "?"]
# ::lemmas ["Bc", "she", "take", "her", "airtime", "?"]
(c9-2 / cause-01
      :ARG0 (c9-3 / take-01
                  :ARG0 (c9-0 / she)
                  :ARG1 (c9-4 / airtime
                              :poss c9-0)
                  :ARG1-of (c9-1 / request-confirmation-91)))

# ::snt She is exciting and storylines are as forced as Meghan
# ::tokens ["She", "is", "exciting", "and", "storylines", "are", "as", "forced", "as", "Meghan"]
# ::lemmas ["she", "be", "exciting", "and", "storyline", "be", "as", "force", "as", "Meghan"]
(c10-7 / and
       :op1 (c10-4 / excite-01
                   :ARG0 (c10-3 / she))
       :op2 (c10-0 / force-02
                   :ARG1 (c10-1 / storyline)
                   :ARG2-of (c10-5 / have-degree-91
                                   :ARG1 c10-1
                                   :ARG3 (c10-8 / equal)
                                   :ARG4 (c10-6 / person
                                                :name (c10-2 / name
                                                             :op1 "Meghan")))))

# ::snt This Meghan I can't stand she was single in the beginnin and she was huntin she had her eye on Shannon husband but found out he was married
# ::tokens ["This", "Meghan", "I", "ca", "n't", "stand", "she", "was", "single", "in", "the", "beginnin", "and", "she", "was", "huntin", "she", "had", "her", "eye", "on", "Shannon", "husband", "but", "found", "out", "he", "was", "married"]
# ::lemmas ["this", "Meghan", "i", "can", "not", "stand", "she", "be", "single", "in", "the", "beginnin", "and", "she", "be", "huntin", "she", "have", "her", "eye", "on", "Shannon", "husband", "but", "find", "out", "he", "be", "marry"]
(c11-10 / multi-sentence
        :snt1 (c11-16 / possible-01
                      :ARG1 (c11-0 / stand-03
                                   :ARG0 (c11-18 / i)
                                   :ARG1 (c11-11 / person
                                                 :name (c11-14 / name
                                                               :op1 "Meghan")
                                                 :mod (c11-8 / this)))
                      :polarity -)
        :snt2 (c11-7 / and
                     :op1 (c11-3 / single-03
                                 :ARG1 (c11-2 / she
                                              :part (c11-15 / eye))
                                 :time (c11-9 / begin-01))
                     :op2 (c11-5 / hunt-01
                                 :ARG0 c11-2)
                     :concession-of (c11-13 / find-out-03
                                            :ARG0 c11-2
                                            :ARG1 (c11-6 / marry-01
                                                         :ARG1 (c11-1 / person
                                                                      :name (c11-12 / name
                                                                                    :op1 "Shannon")
                                                                      :ARG0-of (c11-17 / have-rel-role-91
                                                                                       :ARG1 c11-2
                                                                                       :ARG2 (c11-4 / husband)))))))

# ::snt Funny how TJ thinks she and KD r similar That should tell u something
# ::tokens ["Funny", "how", "TJ", "thinks", "she", "and", "KD", "r", "similar", "That", "should", "tell", "u", "something"]
# ::lemmas ["funny", "how", "tj", "think", "she", "and", "KD", "r", "similar", "that", "should", "tell", "u", "something"]
(c12-0 / funny
       :domain (c12-11 / think-01
                       :ARG0 (c12-8 / person
                                    :name (c12-2 / name
                                                 :op1 "TJ"))
                       :ARG1 (c12-5 / resemble-01
                                    :ARG1 (c12-6 / and
                                                 :op1 c12-8
                                                 :op2 (c12-3 / person
                                                             :name (c12-7 / name
                                                                          :op1 "KD")))))
       :ARG0-of (c12-9 / cause-01
                       :ARG1 (c12-13 / tell-01
                                     :ARG0 (c12-10 / that)
                                     :ARG1 (c12-4 / something)
                                     :ARG2 (c12-1 / you)
                                     :ARG1-of (c12-12 / recommend-01))))

# ::snt Tamra judge is the biggest fakest; iv found jesus )shit ever
# ::tokens ["Tamra", "judge", "is", "the", "biggest", "fakest", ";", "iv", "found", "jesus", ")", "shit", "ever"]
# ::lemmas ["tamra", "judge", "be", "the", "big", "fakest", ";", "iv", "find", "jesus", ")", "shit", "ever"]
(c13-2 / multi-sentence
       :snt1 (c13-6 / have-degree-91
                    :ARG1 (c13-7 / person
                                 :ARG0-of (c13-10 / judge-01)
                                 :mod (c13-3 / person
                                             :name (c13-4 / name
                                                          :op1 "Tamra")))
                    :ARG2 (c13-1 / big)
                    :ARG3 (c13-8 / most))
       :snt2 (c13-0 / find-01
                    :ARG0 (c13-11 / i)
                    :ARG1 (c13-12 / person
                                  :name (c13-9 / name
                                               :op1 "Jesus"))
                    :time (c13-5 / ever)))

# ::snt You and me both
# ::tokens ["You", "and", "me", "both"]
# ::lemmas ["you", "and", "i", "both"]
(c14-3 / and
       :op1 (c14-1 / you)
       :op2 (c14-2 / i)
       :mod (c14-0 / both))

# ::snt That sounds like Tamara too
# ::tokens ["That", "sounds", "like", "Tamara", "too"]
# ::lemmas ["that", "sound", "like", "Tamara", "too"]
(c15-1 / sound-01
       :ARG1 (c15-3 / that)
       :ARG2 (c15-2 / person
                    :name (c15-0 / name
                                 :op1 "Tamara"))
       :mod (c15-4 / too))

# ::snt I wish u would leave the show. U don't like Kelly because BS on u yr nothing but a sh.. t starter
# ::tokens ["I", "wish", "u", "would", "leave", "the", "show", ".", "U", "do", "n't", "like", "Kelly", "because", "BS", "on", "u", "yr", "nothing", "but", "a", "sh", "..", "t", "starter"]
# ::lemmas ["i", "wish", "u", "would", "leave", "the", "show", ".", "u", "do", "not", "like", "Kelly", "because", "BS", "on", "u", "yr", "nothing", "but", "a", "sh", "..", "t", "starter"]
(c16-3 / multi-sentence
       :snt1 (c16-9 / wish-01
                    :ARG0 (c16-11 / i)
                    :ARG1 (c16-7 / leave-11
                                 :ARG0 (c16-2 / you)
                                 :ARG1 (c16-5 / show-04)))
       :snt2 (c16-10 / cause-01
                     :ARG0 (c16-1 / bullshit-01
                                  :ARG0 (c16-12 / you
                                                :ARG2-of c16-1)
                                  :mod (c16-4 / nothing-but)
                                  :ARG0-of (c16-0 / start-01))
                     :ARG1 (c16-13 / dislike-01
                                   :ARG0 c16-11)
                     :ARG1 (c16-8 / person
                                  :name (c16-6 / name
                                               :op1 "Kelly"))))

# ::snt I fast forward to skip over any scene with Meghan. There is no need for her on show.
# ::tokens ["I", "fast", "forward", "to", "skip", "over", "any", "scene", "with", "Meghan", ".", "There", "is", "no", "need", "for", "her", "on", "show", "."]
# ::lemmas ["i", "fast", "forward", "to", "skip", "over", "any", "scene", "with", "Meghan", ".", "there", "be", "no", "need", "for", "she", "on", "show", "."]
(c17-2 / multi-sentence
       :snt1 (c17-0 / fastforward-01
                    :ARG0 (c17-8 / i)
                    :ARG1 (c17-4 / skip-01
                                 :ARG0 c17-8
                                 :ARG1 (c17-1 / scene
                                              :mod (c17-9 / any)
                                              :topic (c17-7 / person
                                                            :name (c17-3 / name
                                                                         :op1 "Meghan")))))
       :snt2 (c17-6 / need-01
                    :ARG1 (c17-10 / show-04
                                  :ARG1 (c17-5 / she))
                    :polarity -))

# ::snt I regret her coming and returning. Boy what a friend
# ::tokens ["I", "regret", "her", "coming", "and", "returning", ".", "Boy", "what", "a", "friend"]
# ::lemmas ["i", "regret", "she", "come", "and", "return", ".", "boy", "what", "a", "friend"]
(c18-3 / multi-sentence
       :snt1 (c18-5 / regret-01
                    :ARG0 (c18-8 / i)
                    :ARG1 (c18-9 / and
                                 :op1 (c18-7 / come-01
                                             :ARG1 (c18-4 / she))
                                 :op2 (c18-10 / return-01
                                              :ARG1 c18-4)))
       :snt2 (c18-2 / boy
                    :ARG0-of (c18-6 / have-rel-role-91
                                    :ARG2 (c18-0 / friend))
                    :degree (c18-1 / so)
                    :mode expressive))

# ::snt Kelly is a gem...hope to get the new season soon ..
# ::tokens ["Kelly", "is", "a", "gem", "...", "hope", "to", "get", "the", "new", "season", "soon", ".."]
# ::lemmas ["Kelly", "be", "a", "gem", "...", "hope", "to", "get", "the", "new", "season", "soon", ".."]
(c19-2 / multi-sentence
       :snt1 (c19-9 / gem
                    :domain (c19-5 / person
                                   :name (c19-1 / name
                                                :op1 "Kelly")))
       :snt2 (c19-4 / hope-01
                    :ARG0 (c19-7 / i)
                    :ARG1 (c19-8 / get-01
                                 :ARG0 c19-7
                                 :ARG1 (c19-3 / season
                                              :ARG1-of (c19-6 / new-01))
                                 :time (c19-0 / soon))))

# ::snt I think you meant to say Peggy instead of Lydia about the lip incident.
# ::tokens ["I", "think", "you", "meant", "to", "say", "Peggy", "instead", "of", "Lydia", "about", "the", "lip", "incident", "."]
# ::lemmas ["i", "think", "you", "mean", "to", "say", "Peggy", "instead", "of", "Lydia", "about", "the", "lip", "incident", "."]
(c20-11 / think-01
        :ARG0 (c20-10 / i)
        :ARG1 (c20-2 / mean-02
                     :ARG0 (c20-1 / you)
                     :ARG1 (c20-4 / say-01
                                  :ARG0 c20-1
                                  :ARG1 (c20-8 / person
                                               :name (c20-3 / name
                                                            :op1 "Peggy"))
                                  :ARG1-of (c20-5 / instead-of-91
                                                  :ARG2 (c20-0 / say-01
                                                               :ARG0 c20-1
                                                               :ARG1 (c20-6 / person
                                                                            :name (c20-7 / name
                                                                                         :op1 "Lydia"))
                                                               :ARG3 (c20-12 / incident
                                                                             :mod (c20-9 / lip)))))))

# ::snt We all do!
# ::tokens ["We", "all", "do", "!"]
# ::lemmas ["we", "all", "do", "!"]
(c21-1 / event
       :mod (c21-0 / we
                   :mod (c21-2 / all)))

# ::snt RT
# ::tokens ["RT"]
# ::lemmas ["RT"]
(c22-1 / publication
       :name (c22-0 / name
                    :op1 "RT"))
