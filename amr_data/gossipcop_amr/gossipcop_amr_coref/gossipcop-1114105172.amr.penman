# ::snt Or do you think that was her way of denying his offer?
# ::tokens ["Or", "do", "you", "think", "that", "was", "her", "way", "of", "denying", "his", "offer", "?"]
# ::lemmas ["or", "do", "you", "think", "that", "be", "her", "way", "of", "deny", "his", "offer", "?"]
(c1-0 / or
      :op2 (c1-7 / think-01
                 :ARG0 (c1-2 / you)
                 :ARG1 (c1-6 / way
                             :poss (c1-3 / she)
                             :manner-of (c1-8 / deny-01
                                              :ARG0 c1-3
                                              :ARG1 (c1-1 / offer-01
                                                          :ARG0 (c1-5 / he)))
                             :domain (c1-9 / that))
                 :polarity (c1-4 / amr-unknown)))

# ::snt Keep Ruling
# ::tokens ["Keep", "Ruling"]
# ::lemmas ["keep", "rule"]
(c2-2 / keep-02
      :ARG0 (c2-1 / you)
      :ARG1 (c2-0 / rule-03
                  :ARG0 c2-1)
      :mode imperative)

# ::snt Brad
# ::tokens ["Brad"]
# ::lemmas ["Brad"]
(c3-1 / person
      : (c3-0 / name
              :op1 "Brad"))

# ::snt Happy birthday to ! and always sexy! Lol
# ::tokens ["Happy", "birthday", "to", "!", "and", "always", "sexy", "!", "Lol"]
# ::lemmas ["happy", "birthday", "to", "!", "and", "always", "sexy", "!", "Lol"]
(c4-5 / and
      :op1 (c4-2 / happy-01
                 :ARG1 (c4-0 / birthday))
      :op2 (c4-1 / sexy-03
                 :time (c4-4 / always)
                 :ARG2-of (c4-3 / laugh-01
                                :manner (c4-6 / loud)
                                :mode expressive)))

# ::snt don't worry honey...he'll never ask you
# ::tokens ["do", "n't", "worry", "honey", "...", "he'll", "never", "ask", "you"]
# ::lemmas ["do", "not", "worry", "honey", "...", "he'll", "never", "ask", "you"]
(c5-3 / worry-01
      :ARG0 (c5-5 / ask-01
                  :ARG0 (c5-2 / he)
                  :ARG2 (c5-0 / you)
                  :time (c5-1 / ever)
                  :polarity -)
      :ARG1 (c5-4 / honey)
      :polarity -
      :mode imperative)

# ::snt Over rated women who made a lot of money from him.
# ::tokens ["Over", "rated", "women", "who", "made", "a", "lot", "of", "money", "from", "him", "."]
# ::lemmas ["over", "rate", "woman", "who", "make", "a", "lot", "of", "money", "from", "he", "."]
(c6-6 / woman
      :ARG1-of (c6-2 / rate-01
                     :ARG2 (c6-0 / over))
      :ARG0-of (c6-1 / make-05
                     :ARG1 (c6-3 / money
                                 :quant (c6-4 / lot))
                     :ARG2 (c6-5 / he)))

# ::snt fi shi esmo sue in lebanon?
# ::tokens ["fi", "shi", "esmo", "sue", "in", "lebanon", "?"]
# ::lemmas ["fi", "shi", "esmo", "sue", "in", "lebanon", "?"]
(c7-4 / possible-01
      :ARG1 (c7-2 / sue-02
                  :ARG0 (c7-1 / person
                              :name (c7-0 / name
                                          :op1 "FISA"))
                  :ARG1 (c7-5 / city
                              :name (c7-3 / name
                                          :op1 "Lebanon")))
      :polarity (c7-6 / amr-unknown))

# ::snt too busy playing games
# ::tokens ["too", "busy", "playing", "games"]
# ::lemmas ["too", "busy", "playing", "game"]
(c8-1 / have-degree-91
      :ARG2 (c8-0 / busy-01
                  :ARG2 (c8-2 / play-01
                              :ARG1 (c8-4 / game)))
      :ARG3 (c8-3 / too))

# ::snt not her im daying lately its about cash
# ::tokens ["not", "her", "i", "m", "daying", "lately", "its", "about", "cash"]
# ::lemmas ["not", "she", "i", "m", "daye", "lately", "its", "about", "cash"]
(c9-2 / concern-02
      :ARG0 c9-2
      :ARG0 (c9-5 / cash)
      :ARG1 (c9-0 / she)
      :ARG1 (c9-4 / day-01
                  :ARG0 (c9-3 / i)
                  :time (c9-1 / lately)
                  :polarity -))

# ::snt nopeee its all about the mooolla
# ::tokens ["nopeee", "its", "all", "about", "the", "mooolla"]
# ::lemmas ["nopeee", "its", "all", "about", "the", "mooolla"]
(c10-0 / concern-02
       :ARG0 (c10-2 / it)
       :ARG1 (c10-1 / mooolla)
       :degree (c10-3 / all))

# ::snt loollll no beshe3 w married to angelina jolie adee
# ::tokens ["loollll", "no", "beshe3", "w", "married", "to", "angelina", "jolie", "adee"]
# ::lemmas ["loollll", "no", "beshe3", "w", "married", "to", "angelina", "jolie", "adee"]
(c11-2 / multi-sentence
       :snt1 (c11-5 / person
                    :name (c11-1 / name
                                 :op1 "Lollll"))
       :snt2 (c11-0 / beshe3
                    :ARG1-of (c11-7 / cause-01
                                    :ARG0 (c11-4 / marry-01
                                                 :ARG1 (c11-3 / person
                                                              :name (c11-6 / name
                                                                           :op1 "Angelina"
                                                                           :op2 "Jolie"
                                                                           :op3 "Adee"))))
                    :polarity -))

# ::snt why u comapring everibode to bratt pid lataly
# ::tokens ["why", "u", "comapring", "everibode", "to", "bratt", "pid", "lataly"]
# ::lemmas ["why", "u", "comapre", "everibode", "to", "bratt", "pid", "lataly"]
(c12-5 / cause-01
       :ARG0 (c12-7 / amr-unknown)
       :ARG1 (c12-2 / reply-01
                    :ARG0 (c12-0 / you)
                    :ARG1 (c12-4 / person
                                 :name (c12-1 / name
                                              :op1 "Bernie"
                                              :op2 "Lataly"))
                    :ARG2 (c12-6 / thing
                                 :name (c12-3 / name
                                              :op1 "Everibode"))))

# ::snt Blame the wine
# ::tokens ["Blame", "the", "wine"]
# ::lemmas ["blame", "the", "wine"]
(c13-1 / blame-01
       :ARG0 (c13-2 / you)
       :ARG1 (c13-0 / wine)
       :mode imperative)

# ::snt You spelled John Mayer wrong. Thats disrespectful. Fake fan.
# ::tokens ["You", "spelled", "John", "Mayer", "wrong", ".", "That", "s", "disrespectful", ".", "Fake", "fan", "."]
# ::lemmas ["you", "spell", "John", "Mayer", "wrong", ".", "that", "s", "disrespectful", ".", "fake", "fan", "."]
(c14-3 / multi-sentence
       :snt1 (c14-4 / spell-01
                    :ARG0 (c14-1 / you)
                    :ARG1 (c14-5 / person
                                 :name (c14-2 / name
                                              :op1 "John"
                                              :op2 "Mayer"))
                    :ARG2-of (c14-7 / wrong-04))
       :snt2 (c14-9 / disrespect-01
                    :ARG0 (c14-8 / that))
       :snt3 (c14-0 / fan
                    :ARG1-of (c14-6 / fake-02)))

# ::snt Robin is a dumb bitch if she thinks brad Pitt isn&;t an actor
# ::tokens ["Robin", "is", "a", "dumb", "bitch", "if", "she", "thinks", "brad", "Pitt", "isn&;t", "an", "actor"]
# ::lemmas ["Robin", "be", "a", "dumb", "bitch", "if", "she", "think", "brad", "Pitt", "isn&;t", "an", "actor"]
(c15-0 / bitch
       :mod (c15-7 / dumb)
       :domain (c15-5 / person
                      :name (c15-1 / name
                                   :op1 "Robin"))
       :condition (c15-6 / think-01
                         :ARG0 c15-5
                         :ARG1 (c15-2 / person
                                      :ARG0-of (c15-3 / act-01)
                                      :domain (c15-8 / person
                                                     :name (c15-4 / name
                                                                  :op1 "Brad"
                                                                  :op2 "Pitt"))
                                      :polarity -)))

# ::snt BRAYLOR.
# ::tokens ["BRAYLOR", "."]
# ::lemmas ["BRAYLOR", "."]
(c16-1 / person
       :name (c16-0 / name
                    :op1 "Braylon"))

# ::snt The real question is... would he give a d*mn about her?
# ::tokens ["The", "real", "question", "is", "...", "would", "he", "give", "a", "d*mn", "about", "her", "?"]
# ::lemmas ["the", "real", "question", "be", "...", "would", "he", "give", "a", "d*mn", "about", "she", "?"]
(c17-3 / question-01
       :ARG1 (c17-5 / give-16
                    :ARG0 (c17-2 / he)
                    :ARG1 (c17-6 / d*mn)
                    :ARG2 (c17-0 / she)
                    :polarity (c17-4 / amr-unknown))
       :ARG1-of (c17-1 / real-04))
