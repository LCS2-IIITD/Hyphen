# ::snt Waaah it's already tough as it is....I was thinking we'd be live by September
# ::tokens ["Waaah", "it", "'s", "already", "tough", "as", "it", "is", "....", "I", "was", "thinking", "we", "'d", "be", "live", "by", "September"]
# ::lemmas ["Waaah", "it", "be", "already", "tough", "as", "it", "be", "....", "i", "be", "think", "we", "would", "be", "live", "by", "September"]
(c1-1 / multi-sentence
      :snt1 (c1-6 / tough-02
                  :time (c1-8 / already)
                  :ARG1-of (c1-4 / cause-01
                                 :ARG0 (c1-7 / it)))
      :snt2 (c1-10 / think-01
                   :ARG0 (c1-2 / i)
                   :ARG1 (c1-3 / live-01
                               :ARG0 (c1-5 / we)
                               :time (c1-0 / by
                                           :op1 (c1-9 / date-entity
                                                      :month 9)))))

# ::snt Stranger Things, Game of Thrones, and Always Sunny in Philly, all . Its like eveyone has writers block this year.
# ::tokens ["Stranger", "Things", ",", "Game", "of", "Thrones", ",", "and", "Always", "Sunny", "in", "Philly", ",", "all", ".", "Its", "like", "eveyone", "has", "writers", "block", "this", "year", "."]
# ::lemmas ["Stranger", "Things", ",", "Game", "of", "Thrones", ",", "and", "Always", "Sunny", "in", "Philly", ",", "all", ".", "its", "like", "eveyone", "have", "writer", "block", "this", "year", "."]
(c2-8 / multi-sentence
      :snt1 (c2-5 / and
                  :op1 (c2-7 / broadcast-program
                             :name (c2-12 / name
                                          :op1 "Stranger"
                                          :op2 "Things"))
                  :op2 (c2-0 / broadcast-program
                             :name (c2-9 / name
                                         :op1 "Game"
                                         :op2 "of"
                                         :op3 "Thrones"))
                  :op3 (c2-1 / broadcast-program
                             :name (c2-15 / name
                                          :op1 "Always"
                                          :op2 "Sunny"))
                  :location (c2-10 / city
                                   :name (c2-11 / name
                                                :op1 "Philly"))
                  :mod (c2-3 / all))
      :snt2 (c2-13 / resemble-01
                   :ARG1 (c2-18 / it)
                   :ARG2 (c2-6 / block-01
                               :ARG0 (c2-16 / person
                                            :ARG0-of (c2-17 / write-01))
                               :time (c2-2 / year
                                           :mod (c2-4 / this))
                               :beneficiary (c2-14 / everyone))))

# ::snt Nooooo! Omg, ?
# ::tokens ["Nooooo", "!", "Omg", ",", "?"]
# ::lemmas ["Nooooo", "!", "Omg", ",", "?"]
(c3-1 / no
      :mod (c3-0 / oh-my-god
                 :mode expressive)
      :mode expressive)

# ::snt how will we survive?
# ::tokens ["how", "will", "we", "survive", "?"]
# ::lemmas ["how", "will", "we", "survive", "?"]
(c4-2 / survive-01
      :ARG0 (c4-0 / we)
      :manner (c4-1 / amr-unknown))

# ::snt Why so long to wait for
# ::tokens ["Why", "so", "long", "to", "wait", "for"]
# ::lemmas ["why", "so", "long", "to", "wait", "for"]
(c5-1 / long-03
      :ARG1 (c5-2 / wait-01)
      :ARG1-of (c5-3 / cause-01
                     :ARG0 (c5-4 / amr-unknown))
      :degree (c5-0 / so))

# ::snt cant wait!
# ::tokens ["ca", "nt", "wait", "!"]
# ::lemmas ["can", "not", "wait", "!"]
(c6-0 / wait-01
      :ARG1 (c6-1 / you)
      :ARG1-of (c6-2 / possible-01))

# ::snt It will probably suck if S. was any indication
# ::tokens ["It", "will", "probably", "suck", "if", "S.", "was", "any", "indication"]
# ::lemmas ["it", "will", "probably", "suck", "if", "S.", "be", "any", "indication"]
(c7-4 / probable
      :domain (c7-1 / suck-03
                    :ARG0 (c7-5 / it))
      :condition (c7-2 / indicate-01
                       :ARG1 (c7-6 / thing
                                   :name (c7-0 / name
                                               :op1 "S."))
                       :mod (c7-3 / any)))

# ::snt It'll probably have the same plot as the first
# ::tokens ["It", "'ll", "probably", "have", "the", "same", "plot", "as", "the", "first"]
# ::lemmas ["it", "'ll", "probably", "have", "the", "same", "plot", "as", "the", "first"]
(c8-4 / probable
      :domain (c8-3 / have-03
                    :ARG0 (c8-5 / it)
                    :ARG1 (c8-1 / plot
                                :ARG1-of (c8-2 / same-01
                                               :ARG2 (c8-6 / plot
                                                           :ord (c8-0 / ordinal-entity
                                                                      :value 1))))))

# ::snt and slightly over bitcoins.
# ::tokens ["and", "slightly", "over", "bitcoins", "."]
# ::lemmas ["and", "slightly", "over", "bitcoin", "."]
(c10-4 / and
       :op2 (c10-0 / over
                   :op1 (c10-1 / monetary-quantity
                               :unit (c10-3 / cent)
                               :quant 1)
                   :degree (c10-2 / slight)))

# ::snt Hi, I think you will like this item....
# ::tokens ["Hi", ",", "I", "think", "you", "will", "like", "this", "item", "...."]
# ::lemmas ["hi", ",", "i", "think", "you", "will", "like", "this", "item", "...."]
(c11-1 / multi-sentence
       :snt1 (c11-3 / hi)
       :snt2 (c11-6 / think-01
                    :ARG0 (c11-5 / i)
                    :ARG1 (c11-4 / like-01
                                 :ARG0 (c11-0 / you)
                                 :ARG1 (c11-2 / item
                                              :mod (c11-7 / this)))))

# ::snt Gnial !
# ::tokens ["Gnial", "!"]
# ::lemmas ["gnial", "!"]
(c13-0 / positive
       :mode expressive)

# ::snt I hope not. They are going ruin a good thing.
# ::tokens ["I", "hope", "not", ".", "They", "are", "going", "ruin", "a", "good", "thing", "."]
# ::lemmas ["i", "hope", "not", ".", "they", "be", "go", "ruin", "a", "good", "thing", "."]
(c14-0 / multi-sentence
       :snt1 (c14-2 / hope-01
                    :ARG0 (c14-3 / i)
                    :polarity -)
       :snt2 (c14-1 / ruin-01
                    :ARG0 (c14-4 / they)
                    :ARG1 (c14-6 / thing
                                 :ARG1-of (c14-5 / good-02))))

# ::snt Noooooo. Oh hell no.
# ::tokens ["Noooooo", ".", "Oh", "hell", "no", "."]
# ::lemmas ["Noooooo", ".", "oh", "hell", "no", "."]
(c15-2 / multi-sentence
       :snt1 (c15-0 / no)
       :snt2 (c15-1 / hell
                    :mod (c15-3 / oh)
                    :mode expressive))

# ::snt More teen drama
# ::tokens ["More", "teen", "drama"]
# ::lemmas ["more", "teen", "drama"]
(c17-0 / drama
       :mod (c17-2 / teen)
       :mod (c17-1 / more))

# ::snt Some of the best television I've seen. I'm , that's saying a lot. Hurry up Season .
# ::tokens ["Some", "of", "the", "best", "television", "I", "'ve", "seen", ".", "I", "'m", ",", "that", "'s", "saying", "a", "lot", ".", "Hurry", "up", "Season", "."]
# ::lemmas ["some", "of", "the", "good", "television", "i", "'ve", "see", ".", "i", "be", ",", "that", "be", "say", "a", "lot", ".", "hurry", "up", "Season", "."]
(c18-2 / multi-sentence
       :snt1 (c18-11 / include-91
                     :ARG1 (c18-10 / television)
                     :ARG2 (c18-12 / television
                                   :ARG1-of (c18-3 / see-01
                                                   :ARG0 (c18-4 / i))
                                   :ARG1-of (c18-6 / have-degree-91
                                                   :ARG2 (c18-13 / good-02
                                                                 :ARG1 c18-12)
                                                   :ARG3 (c18-7 / most)))
                     :ARG3 (c18-0 / some))
       :snt2 (c18-15 / say-01
                     :ARG0 (c18-14 / i)
                     :ARG1 (c18-8 / lot))
       :snt3 (c18-9 / Hurry-up-02
                    :ARG0 (c18-1 / you)
                    :ARG1 (c18-5 / season)
                    :mode imperative))

# ::snt Awesome Maybe we get to go to the 's one day. That'd really get me
# ::tokens ["Awesome", "Maybe", "we", "get", "to", "go", "to", "the", "'s", "one", "day", ".", "That", "'d", "really", "get", "me"]
# ::lemmas ["Awesome", "maybe", "we", "get", "to", "go", "to", "the", "'", "one", "day", ".", "that", "would", "really", "get", "i"]
(c20-1 / multi-sentence
       :snt1 (c20-4 / possible-01
                    :ARG1 (c20-9 / get-22
                                 :ARG0 (c20-5 / we)
                                 :ARG1 (c20-7 / go-02
                                              :ARG0 c20-5
                                              :ARG4 (c20-2 / park))
                                 :time (c20-10 / day
                                               :mod (c20-0 / one)))
                    :ARG0-of (c20-8 / awe-01))
       :snt2 (c20-12 / get-01
                     :ARG0 (c20-6 / that)
                     :ARG1 (c20-11 / i)
                     :ARG1-of (c20-3 / real-04)))

# ::snt You guys did a amazing job
# ::tokens ["You", "guys", "did", "a", "amazing", "job"]
# ::lemmas ["you", "guy", "do", "a", "amazing", "job"]
(c21-4 / do-02
       :ARG0 (c21-0 / you
                    :mod (c21-3 / guy))
       :ARG1 (c21-1 / job
                    :ARG0-of (c21-2 / amaze-01)))

# ::snt : season release date, cast, trailer, script, and everything else we know so far
# ::tokens [":", "season", "release", "date", ",", "cast", ",", "trailer", ",", "script", ",", "and", "everything", "else", "we", "know", "so", "far"]
# ::lemmas [":", "season", "release", "date", ",", "cast", ",", "trailer", ",", "script", ",", "and", "everything", "else", "we", "know", "so", "far"]
(c22-9 / and
       :op1 (c22-10 / date
                    :time-of (c22-3 / release-01
                                    :ARG1 (c22-1 / season)))
       :op2 (c22-6 / cast-02)
       :op3 (c22-8 / trailer)
       :op4 (c22-0 / script-01)
       :op5 (c22-4 / everything
                   :mod (c22-2 / else)
                   :ARG1-of (c22-5 / know-01
                                   :ARG0 (c22-7 / we)
                                   :time (c22-11 / so-far))))

# ::snt New study finds the "Upside down" is really just the time in between Stranger Things seasons.
# ::tokens ["New", "study", "finds", "the", "\"", "Upside", "down", "\"", "is", "really", "just", "the", "time", "in", "between", "Stranger", "Things", "seasons", "."]
# ::lemmas ["new", "study", "find", "the", "\"", "upside", "down", "\"", "be", "really", "just", "the", "time", "in", "between", "Stranger", "Things", "season", "."]
(c23-0 / find-01
       :ARG0 (c23-4 / study-01
                    :ARG1-of (c23-3 / new-01))
       :ARG1 (c23-2 / be-temporally-at-91
                    :ARG1 (c23-9 / down-01
                                 :mod (c23-10 / upside))
                    :ARG2 (c23-6 / between
                                 :op1 (c23-1 / season
                                             :mod (c23-11 / book
                                                          :name (c23-7 / name
                                                                       :op1 "Stranger"
                                                                       :op2 "Things"))))
                    :mod (c23-8 / just)
                    :ARG1-of (c23-5 / real-04)))

# ::snt there's not fucking release date in the article. and you block my ad blocker while asking to send me me notifications. nope
# ::tokens ["there", "'s", "not", "fucking", "release", "date", "in", "the", "article", ".", "and", "you", "block", "my", "ad", "blocker", "while", "asking", "to", "send", "me", "me", "notifications", ".", "nope"]
# ::lemmas ["there", "be", "not", "fucking", "release", "date", "in", "the", "article", ".", "and", "you", "block", "my", "ad", "blocker", "while", "ask", "to", "send", "i", "i", "notification", ".", "nope"]
(c24-3 / multi-sentence
       :snt1 (c24-1 / be-located-at-91
                    :ARG1 (c24-14 / date
                                  :time-of (c24-6 / release-01))
                    :ARG2 (c24-12 / article)
                    :mod (c24-0 / fucking
                                :mode expressive)
                    :polarity -)
       :snt2 (c24-7 / block-01
                    :ARG0 (c24-2 / you)
                    :ARG1 (c24-8 / person
                                 :ARG1 (c24-11 / advertise-01)
                                 :ARG0-of c24-7)
                    :poss (c24-13 / i))
       :time (c24-10 / ask-02
                     :ARG0 c24-2
                     :ARG1 (c24-5 / send-01
                                  :ARG0 c24-8
                                  :ARG1 (c24-4 / notify-01
                                               :ARG0 c24-8
                                               :ARG1 c24-13)
                                  :ARG2 c24-13))
       :snt3 (c24-9 / nope))

# ::snt No trailer!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# ::tokens ["No", "trailer", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["no", "trailer", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c25-0 / trailer
       :polarity -)

# ::snt Every one loves a good dimensional Lovecraft style horror!
# ::tokens ["Every", "one", "loves", "a", "good", "dimensional", "Lovecraft", "style", "horror", "!"]
# ::lemmas ["every", "one", "love", "a", "good", "dimensional", "Lovecraft", "style", "horror", "!"]
(c27-5 / love-01
       :ARG0 (c27-2 / everyone)
       :ARG1 (c27-3 / horror
                    :mod (c27-1 / style
                                :mod (c27-4 / person
                                            :name (c27-0 / name
                                                         :op1 "P Lovecraft"))
                                :mod (c27-7 / dimension
                                            :ARG1-of (c27-6 / good-02)))))

# ::snt Its going to suck
# ::tokens ["Its", "going", "to", "suck"]
# ::lemmas ["its", "go", "to", "suck"]
(c29-1 / suck-03
       :ARG0 (c29-0 / it))

# ::snt about pages long.
# ::tokens ["about", "pages", "long", "."]
# ::lemmas ["about", "page", "long", "."]
(c31-2 / about
       :op1 (c31-0 / page
                   :ARG1-of (c31-1 / long-03)))

# ::snt Looking for Logo, Flyer, T-Shirt, Brochure, Business Card, Brand identity, Packaging Designer? Contact
# ::tokens ["Looking", "for", "Logo", ",", "Flyer", ",", "T", "-", "Shirt", ",", "Brochure", ",", "Business", "Card", ",", "Brand", "identity", ",", "Packaging", "Designer", "?", "Contact"]
# ::lemmas ["look", "for", "Logo", ",", "Flyer", ",", "T", "-", "Shirt", ",", "Brochure", ",", "Business", "Card", ",", "Brand", "identity", ",", "Packaging", "Designer", "?", "contact"]
(c32-11 / multi-sentence
        :snt1 (c32-1 / look-01
                     :ARG1 (c32-7 / and
                                  :op1 (c32-8 / logo)
                                  :op2 (c32-17 / person
                                               :ARG0-of (c32-16 / fly-01))
                                  :op3 (c32-6 / thing
                                              :ARG1-of (c32-5 / label-01))
                                  :op4 (c32-15 / thing
                                               :ARG1-of (c32-14 / label-01))
                                  :op5 (c32-18 / thing
                                               :ARG1-of (c32-3 / label-01))
                                  :op6 (c32-13 / card
                                               :mod (c32-10 / business))
                                  :op7 (c32-19 / identity
                                               :mod (c32-0 / brand))
                                  :op8 (c32-12 / person
                                               :ARG0-of (c32-20 / design-01
                                                                :ARG1 (c32-2 / pack-01)))))
        :snt2 (c32-9 / contact-01
                     :ARG1 (c32-4 / you)))

# ::snt :I think season is enough
# ::tokens [":", "I", "think", "season", "is", "enough"]
# ::lemmas [":", "i", "think", "season", "be", "enough"]
(c33-4 / think-01
       :ARG0 (c33-3 / i)
       :ARG1 (c33-2 / have-quant-91
                    :ARG1 (c33-0 / season)
                    :ARG3 (c33-1 / enough)))

# ::snt Cant wait to see it!!!
# ::tokens ["Ca", "nt", "wait", "to", "see", "it", "!", "!", "!"]
# ::lemmas ["can", "nt", "wait", "to", "see", "it", "!", "!", "!"]
(c34-3 / wait-01
       :ARG1 (c34-4 / i)
       :ARG2 (c34-0 / see-01
                    :ARG0 c34-4
                    :ARG1 (c34-1 / it))
       :ARG1-of (c34-2 / possible-01))

# ::snt God that show sucks.
# ::tokens ["God", "that", "show", "sucks", "."]
# ::lemmas ["God", "that", "show", "suck", "."]
(c35-2 / suck-03
       :ARG0 (c35-0 / show
                    :mod (c35-4 / that))
       :mod (c35-3 / person
                   :name (c35-1 / name
                                :op1 "God")
                   :mode expressive))

# ::snt I just wanna know WHEN!!! October again?
# ::tokens ["I", "just", "wanna", "know", "WHEN", "!", "!", "!", "October", "again", "?"]
# ::lemmas ["i", "just", "wanna", "know", "when", "!", "!", "!", "October", "again", "?"]
(c36-0 / multi-sentence
       :snt1 (c36-3 / want-01
                    :ARG0 (c36-5 / i)
                    :ARG1 (c36-2 / know-01
                                 :ARG0 c36-5
                                 :ARG1 (c36-6 / time
                                              :time (c36-8 / date-entity
                                                           :month 10)))
                    :mod (c36-4 / just))
       :snt2 c36-8
       :mod (c36-1 / again)
       :polarity (c36-7 / amr-unknown)
       :month 10)

# ::snt They killed off Sam Gamgee. Still upset about that.
# ::tokens ["They", "killed", "off", "Sam", "Gamgee", ".", "Still", "upset", "about", "that", "."]
# ::lemmas ["they", "kill", "off", "Sam", "Gamgee", ".", "still", "upset", "about", "that", "."]
(c37-1 / multi-sentence
       :snt1 (c37-4 / kill-off-02
                    :ARG0 (c37-6 / they)
                    :ARG1 (c37-3 / person
                                 :name (c37-0 / name
                                              :op1 "Sam"
                                              :op2 "Gamgee")))
       :snt2 (c37-7 / upset-01
                    :ARG0 (c37-8 / that)
                    :ARG1 (c37-5 / i)
                    :mod (c37-2 / still)))

# ::snt I just clicked on this to find "tbc " as the release date. Bit of false advertising there?
# ::tokens ["I", "just", "clicked", "on", "this", "to", "find", "\"", "tbc", "\"", "as", "the", "release", "date", ".", "Bit", "of", "false", "advertising", "there", "?"]
# ::lemmas ["i", "just", "click", "on", "this", "to", "find", "\"", "tbc", "\"", "as", "the", "release", "date", ".", "bit", "of", "false", "advertising", "there", "?"]
(c38-2 / multi-sentence
       :snt1 (c38-8 / click-01
                    :ARG0 (c38-10 / i)
                    :ARG1 (c38-11 / this)
                    :mod (c38-9 / just)
                    :purpose (c38-0 / find-01
                                    :ARG0 c38-10
                                    :ARG1 (c38-13 / date
                                                  :time-of (c38-4 / release-01)
                                                  :domain (c38-6 / publication
                                                                 :name (c38-3 / name
                                                                              :op1 "Tbc")))))
       :snt2 (c38-5 / advertise-01
                    :polarity (c38-12 / amr-unknown)
                    :quant (c38-1 / bit)
                    :location (c38-14 / there)
                    :mod (c38-7 / false)))

# ::snt Ahora si se viene lo mas chido
# ::tokens ["Ahora", "si", "se", "viene", "lo", "mas", "chido"]
# ::lemmas ["Ahora", "si", "se", "viene", "lo", "mas", "chido"]
(c39-0 / multi-sentence
       :snt1 (c39-4 / ahora)
       :snt2 (c39-1 / si
                    :op1 (c39-2 / viene
                                :mode expressive)
                    :op2 (c39-3 / maschido
                                :mode expressive)))

# ::snt iam a new bee to this series gladly there's no hip hop
# ::tokens ["iam", "a", "new", "bee", "to", "this", "series", "gladly", "there", "'s", "no", "hip", "hop"]
# ::lemmas ["iam", "a", "new", "bee", "to", "this", "series", "gladly", "there", "be", "no", "hip", "hop"]
(c40-0 / new-02
       :ARG1 (c40-4 / i)
       :ARG2 (c40-1 / series
                    :mod (c40-5 / this))
       :manner (c40-6 / glad-02
                      :ARG0 c40-4
                      :ARG1-of (c40-3 / cause-01
                                      :ARG0 (c40-2 / hip-hop
                                                   :polarity -))))

# ::snt finally
# ::tokens ["finally"]
# ::lemmas ["finally"]
(c41-0 / final)

# ::snt Season ?
# ::tokens ["Season", "?"]
# ::lemmas ["Season", "?"]
(c42-1 / season
       :polarity (c42-0 / amr-unknown))

# ::snt And the strangest parts of Stranger Things season
# ::tokens ["And", "the", "strangest", "parts", "of", "Stranger", "Things", "season"]
# ::lemmas ["and", "the", "strange", "part", "of", "Stranger", "Things", "season"]
(c43-7 / and
       :op2 (c43-6 / part
                   :part-of (c43-4 / season
                                   :mod (c43-1 / book
                                               :name (c43-2 / name
                                                            :op1 "Stranger"
                                                            :op2 "Things")))
                   :ARG1-of (c43-5 / have-degree-91
                                   :ARG2 (c43-0 / strange)
                                   :ARG3 (c43-3 / most))))

# ::snt My body ready for season
# ::tokens ["My", "body", "ready", "for", "season"]
# ::lemmas ["my", "body", "ready", "for", "season"]
(c44-0 / ready-02
       :ARG1 (c44-1 / body
                    :poss (c44-2 / i))
       :ARG2 (c44-3 / season))

# ::snt Me when I hear talk of season
# ::tokens ["Me", "when", "I", "hear", "talk", "of", "season"]
# ::lemmas ["i", "when", "i", "hear", "talk", "of", "season"]
(c46-2 / i
       :time (c46-1 / hear-01
                    :ARG1 (c46-3 / talk-01
                                 :ARG1 (c46-0 / season))
                    :ARG0 c46-2))

# ::snt Can we at least watch TWO first!?!? GEESH!
# ::tokens ["Can", "we", "at", "least", "watch", "TWO", "first", "!", "?", "!", "?", "GEESH", "!"]
# ::lemmas ["can", "we", "at", "least", "watch", "TWO", "first", "!", "?", "!", "?", "GEESH", "!"]
(c47-1 / multi-sentence
       :snt1 (c47-3 / possible-01
                    :ARG1 (c47-5 / watch-01
                                 :ARG0 (c47-4 / we)
                                 :ARG1 (c47-7 / thing
                                              :quant 2)
                                 :mod (c47-2 / at-least)
                                 :ord (c47-0 / ordinal-entity
                                             :value 1))
                    :polarity (c47-6 / amr-unknown)
                    :mode expressive)
       :snt2 (c47-8 / geesh
                    :mode expressive))

# ::snt what's she supposed to do on days and were not stopped.
# ::tokens ["what", "'s", "she", "supposed", "to", "do", "on", "days", "and", "were", "not", "stopped", "."]
# ::lemmas ["what", "be", "she", "suppose", "to", "do", "on", "days", "and", "be", "not", "stop", "."]
(c49-4 / and
       :op1 (c49-1 / suppose-02
                   :ARG1 (c49-0 / she)
                   :ARG2 (c49-5 / do-02
                                :ARG0 c49-0
                                :ARG1 (c49-3 / amr-unknown)
                                :time (c49-2 / day)))
       :op2 (c49-6 / stop-01
                   :ARG1 c49-0
                   :polarity -))

# ::snt can't. wait.
# ::tokens ["ca", "n't", ".", "wait", "."]
# ::lemmas ["can", "not", ".", "wait", "."]
(c50-0 / wait-01
       :ARG1 (c50-1 / i))
