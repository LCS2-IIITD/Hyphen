# ::snt Aff.
# ::tokens ["Aff", "."]
# ::lemmas ["aff", "."]
(c2-0 / Aff)

# ::snt Sisters
# ::tokens ["Sisters"]
# ::lemmas ["sister"]
(c4-0 / person
      :ARG0-of (c4-1 / isters-01))

# ::snt Look for business flyer? Contact --
# ::tokens ["Look", "for", "business", "flyer", "?", "Contact", "--"]
# ::lemmas ["look", "for", "business", "flyer", "?", "contact", "--"]
(c5-3 / multi-sentence
      :snt1 (c5-4 / look-01
                  :polarity (c5-6 / amr-unknown)
                  :ARG0 (c5-2 / you)
                  :ARG1 (c5-0 / flyer
                              :mod (c5-1 / business)))
      :snt2 (c5-5 / contact-01
                  :ARG0 (c5-7 / you)))

# ::snt EXACTLY!!
# ::tokens ["EXACTLY", "!", "!"]
# ::lemmas ["exactly", "!", "!"]
(c6-0 / exact)

# ::snt ?!?!?!?! Es ms chica que Kylie???? Guaaaaaaaatsssss?!?!? Roba cuna le decan....
# ::tokens ["?", "!", "?", "!", "?", "!", "?", "!", "Es", "ms", "chica", "que", "Kylie", "?", "?", "?", "?", "Guaaaaaaaatsssss", "?", "!", "?", "!", "?", "Roba", "cuna", "le", "decan", "...."]
# ::lemmas ["?", "!", "?", "!", "?", "!", "?", "!", "Es", "ms", "chica", "que", "Kylie", "?", "?", "?", "?", "Guaaaaaaaatsssss", "?", "!", "?", "!", "?", "Roba", "cuna", "le", "decan", "...."]
(c7-0 / multi-sentence
      :snt1 (c7-4 / amr-unknown
                  :polarity (c7-10 / amr-unknown))
      :snt2 (c7-2 / say-01
                  :ARG0 (c7-9 / i)
                  :ARG1 (c7-8 / amr-unknown)
                  :ARG2 (c7-6 / person
                              :name (c7-1 / name
                                          :op1 "Ms"
                                          :op2 "Chica"
                                          :op3 "que"
                                          :op4 "Kylie")))
      :snt3 (c7-12 / amr-unknown
                   :polarity (c7-7 / amr-unknown)
                   :mod (c7-11 / guaaaaaatsssss
                               :mode expressive))
      :snt4 (c7-3 / person
                  :name (c7-5 / name
                              :op1 "Roba"
                              :op2 "cuna"
                              :op3 "le"
                              :op4 "decan")))

# ::snt I know but they kissed on this date we have a video their friends threw a party for them Congratulations Sofia and Scott
# ::tokens ["I", "know", "but", "they", "kissed", "on", "this", "date", "we", "have", "a", "video", "their", "friends", "threw", "a", "party", "for", "them", "Congratulations", "Sofia", "and", "Scott"]
# ::lemmas ["i", "know", "but", "they", "kiss", "on", "this", "date", "we", "have", "a", "video", "their", "friend", "throw", "a", "party", "for", "they", "Congratulations", "Sofia", "and", "Scott"]
(c8-9 / multi-sentence
      :snt1 (c8-12 / contrast-01
                   :ARG1 (c8-5 / know-01
                               :ARG0 (c8-20 / i))
                   :ARG2 (c8-14 / kiss-01
                                :ARG0 (c8-7 / they)
                                :time (c8-22 / date-entity
                                             :mod (c8-13 / this))))
      :snt2 (c8-4 / have-03
                  :ARG0 (c8-18 / we)
                  :ARG1 (c8-3 / video
                              :topic (c8-21 / throw-01
                                            :ARG0 (c8-17 / person
                                                         :ARG0-of (c8-19 / have-rel-role-91
                                                                         :ARG1 (c8-0 / they)
                                                                         :ARG2 (c8-15 / friend)))
                                            :ARG1 (c8-10 / party)
                                            :beneficiary c8-0)))
      :snt3 (c8-8 / congratulate-01
                  :ARG1 (c8-6 / and
                              :op1 (c8-2 / person
                                         :name (c8-16 / name
                                                      :op1 "Sofia"))
                              :op2 (c8-1 / person
                                         :name (c8-11 / name
                                                      :op1 "Scott")))))

# ::snt Hot
# ::tokens ["Hot"]
# ::lemmas ["hot"]
(c9-0 / hot)

# ::snt not as much as mine tbh look at my handsome profile picture
# ::tokens ["not", "as", "much", "as", "mine", "tbh", "look", "at", "my", "handsome", "profile", "picture"]
# ::lemmas ["not", "as", "much", "as", "mine", "tbh", "look", "at", "my", "handsome", "profile", "picture"]
(c11-6 / look-01
       :ARG0 (c11-0 / you)
       :ARG1 (c11-5 / picture
                    :mod (c11-2 / profile)
                    :poss (c11-9 / i)
                    :mod (c11-4 / handsome))
       :condition (c11-8 / honest-01
                         :ARG0 c11-9)
       :ARG1-of (c11-3 / have-quant-91
                       :ARG2 (c11-1 / much)
                       :ARG3 (c11-7 / equal)
                       :ARG4 (c11-10 / thing
                                     :poss c11-9)
                       :polarity -)
       :mode imperative)

# ::snt DM
# ::tokens ["DM"]
# ::lemmas ["DM"]
(c12-1 / person
       :name (c12-0 / name
                    :op1 "DM"))

# ::snt DM
# ::tokens ["DM"]
# ::lemmas ["DM"]
(c13-1 / person
       :name (c13-0 / name
                    :op1 "DM"))

# ::snt DM
# ::tokens ["DM"]
# ::lemmas ["DM"]
(c14-1 / person
       :name (c14-0 / name
                    :op1 "DM"))

# ::snt DM
# ::tokens ["DM"]
# ::lemmas ["DM"]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "DM"))

# ::snt DM
# ::tokens ["DM"]
# ::lemmas ["DM"]
(c17-1 / person
       :name (c17-0 / name
                    :op1 "DM"))

# ::snt DM
# ::tokens ["DM"]
# ::lemmas ["DM"]
(c19-1 / person
       :name (c19-0 / name
                    :op1 "DM"))

# ::snt Your cups runneth over.
# ::tokens ["Your", "cups", "runneth", "over", "."]
# ::lemmas ["your", "cup", "runneth", "over", "."]
(c25-0 / run-over-12
       :ARG1 (c25-1 / cup
                    :poss (c25-2 / you)))

# ::snt There is NO QUESTION who wore it better.
# ::tokens ["There", "is", "NO", "QUESTION", "who", "wore", "it", "better", "."]
# ::lemmas ["there", "be", "no", "question", "who", "wear", "it", "well", "."]
(c26-5 / question-03
       :ARG1 (c26-3 / wear-01
                    :ARG0 (c26-1 / amr-unknown)
                    :ARG1 (c26-4 / it)
                    :manner (c26-6 / good-02
                                   :ARG2-of (c26-2 / have-degree-91
                                                   :ARG1 c26-3
                                                   :ARG3 (c26-0 / more))))
       :polarity -)

# ::snt You are beautiful ...Vous tes belle
# ::tokens ["You", "are", "beautiful", "...", "Vous", "tes", "belle"]
# ::lemmas ["you", "be", "beautiful", "...", "vous", "te", "belle"]
(c27-0 / beautiful-02
       :ARG1 (c27-1 / you)
       :mod (c27-2 / belle
                   :mode expressive))

# ::snt Dolce &amp; G
# ::tokens ["Dolce", "&", "amp", ";", "G"]
# ::lemmas ["Dolce", "&", "amp", ";", "g"]
(c29-4 / and
       :op1 (c29-3 / person
                   :name (c29-0 / name
                                :op1 "Dolce"))
       :op2 (c29-1 / person
                   :name (c29-2 / name
                                :op1 "amp")))

# ::snt desgraciado no la mereces
# ::tokens ["desgraciado", "no", "la", "mereces"]
# ::lemmas ["desgraciado", "no", "la", "mereces"]
(c30-0 / desgraciado
       :concession (c30-1 / mereces))

# ::snt de fanny lu!!
# ::tokens ["de", "fanny", "lu", "!", "!"]
# ::lemmas ["de", "fanny", "lu", "!", "!"]
(c31-0 / fanny
       :mod (c31-1 / lu)
       :mode expressive)

# ::snt This is an IANS () story. Where are the credits?
# ::tokens ["This", "is", "an", "IANS", "(", ")", "story", ".", "Where", "are", "the", "credits", "?"]
# ::lemmas ["this", "be", "an", "IANS", "(", ")", "story", ".", "where", "be", "the", "credit", "?"]
(c32-2 / multi-sentence
       :snt1 (c32-3 / story
                    :source (c32-1 / newspaper
                                   :name (c32-5 / name
                                                :op1 "IANS"
                                                :op2 " ()."))
                    :domain (c32-7 / this))
       :snt2 (c32-0 / be-located-at-91
                    :ARG1 (c32-6 / credit)
                    :ARG2 (c32-4 / amr-unknown)))

# ::snt duelo de que???? Por favor!!!?
# ::tokens ["duelo", "de", "que", "?", "?", "?", "?", "Por", "favor", "!", "!", "!", "?"]
# ::lemmas ["duelo", "de", "que", "?", "?", "?", "?", "por", "favor", "!", "!", "!", "?"]
(c33-1 / multi-sentence
       :snt1 (c33-3 / quelo
                    :de (c33-2 / que))
       :snt2 (c33-0 / favor-01
                    :polarity (c33-4 / amr-unknown)))

# ::snt Haha this was just a time pass we all know
# ::tokens ["Haha", "this", "was", "just", "a", "time", "pass", "we", "all", "know"]
# ::lemmas ["haha", "this", "be", "just", "a", "time", "pass", "we", "all", "know"]
(c34-2 / know-01
       :ARG0 (c34-4 / we
                    :mod (c34-0 / all))
       :ARG1 (c34-3 / pass-03
                    :ARG1 (c34-6 / time)
                    :mod (c34-5 / just)
                    :domain (c34-7 / this))
       :mod (c34-1 / haha
                   :mode expressive))

# ::snt She looks sooo fit and so beautiful
# ::tokens ["She", "looks", "sooo", "fit", "and", "so", "beautiful"]
# ::lemmas ["she", "look", "sooo", "fit", "and", "so", "beautiful"]
(c35-4 / look-02
       :ARG0 (c35-3 / she)
       :ARG1 (c35-5 / and
                    :op1 (c35-1 / fit-05
                                :ARG1 c35-3
                                :degree (c35-0 / so))
                    :op2 (c35-2 / beautiful-02
                                :ARG1 c35-3
                                :degree (c35-6 / so))))

# ::snt Please play 's new single, Pull Me Deep! You will love it!
# ::tokens ["Please", "play", "'s", "new", "single", ",", "Pull", "Me", "Deep", "!", "You", "will", "love", "it", "!"]
# ::lemmas ["please", "play", "'s", "new", "single", ",", "Pull", "Me", "Deep", "!", "you", "will", "love", "it", "!"]
(c36-2 / multi-sentence
       :snt1 (c36-4 / play-11
                    :ARG0 (c36-0 / you)
                    :ARG1 (c36-3 / music
                                 :name (c36-1 / name
                                              :op1 "Pull"
                                              :op2 "Me"
                                              :op3 "Deep")
                                 :ARG1-of (c36-5 / new-01)
                                 :poss (c36-8 / they))
                    :mode imperative
                    :polite +)
       :snt2 (c36-6 / love-01
                    :ARG0 (c36-9 / you)
                    :ARG1 (c36-7 / it)))

# ::snt Please play by !
# ::tokens ["Please", "play", "by", "!"]
# ::lemmas ["please", "play", "by", "!"]
(c37-1 / play-01
       :ARG0 (c37-0 / you)
       :mode imperative
       :polite +)

# ::snt Wait...none of them were wives! One was the child breeder the other is the wetblanket... Sigh!!
# ::tokens ["Wait", "...", "none", "of", "them", "were", "wives", "!", "One", "was", "the", "child", "breeder", "the", "other", "is", "the", "wetblanket", "...", "Sigh", "!", "!"]
# ::lemmas ["wait", "...", "none", "of", "they", "be", "wife", "!", "One", "be", "the", "child", "breeder", "the", "other", "be", "the", "wetblanket", "...", "Sigh", "!", "!"]
(c38-4 / multi-sentence
       :snt1 (c38-11 / wait-01
                     :ARG1 (c38-3 / you)
                     :mode imperative)
       :snt2 (c38-10 / wife
                     :domain (c38-13 / they
                                     :quant (c38-5 / none)))
       :snt3 (c38-8 / and
                    :op1 (c38-9 / person
                                :ARG0-of (c38-2 / breed-01
                                                :ARG1 (c38-12 / child))
                                :domain (c38-0 / one))
                    :op2 (c38-6 / person
                                :ARG0-of (c38-14 / wet-blanket-00)
                                :domain (c38-1 / other)))
       :snt4 (c38-7 / sigh-02
                    :mode expressive))

# ::snt wwww
# ::tokens ["wwww"]
# ::lemmas ["wwww"]
(c39-0 / ewww)

# ::snt I love you so much vassy! Always family
# ::tokens ["I", "love", "you", "so", "much", "vassy", "!", "Always", "family"]
# ::lemmas ["i", "love", "you", "so", "much", "vassy", "!", "always", "family"]
(c41-3 / multi-sentence
       :snt1 (c41-4 / say-01
                    :ARG0 (c41-7 / i)
                    :ARG1 (c41-6 / love-01
                                 :ARG0 c41-7
                                 :ARG1 (c41-2 / you)
                                 :degree (c41-5 / much
                                                :degree (c41-0 / so)))
                    :ARG2 c41-2)
       :snt2 (c41-1 / family
                    :time (c41-8 / always)))

# ::snt Lionel and Sofia sending my love to you both
# ::tokens ["Lionel", "and", "Sofia", "sending", "my", "love", "to", "you", "both"]
# ::lemmas ["Lionel", "and", "Sofia", "send", "my", "love", "to", "you", "both"]
(c42-4 / send-01
       :ARG0 (c42-9 / and
                    :op1 (c42-6 / person
                                :name (c42-2 / name
                                             :op1 "Lionel"))
                    :op2 (c42-3 / person
                                :name (c42-5 / name
                                             :op1 "Sofia")))
       :ARG1 (c42-7 / love-01
                    :ARG0 (c42-8 / i))
       :ARG2 (c42-1 / you
                    :mod (c42-0 / both)))

# ::snt I wonder if Scott will come along ....
# ::tokens ["I", "wonder", "if", "Scott", "will", "come", "along", "...."]
# ::lemmas ["i", "wonder", "if", "Scott", "will", "come", "along", "...."]
(c43-2 / wonder-01
       :ARG0 (c43-4 / i)
       :ARG1 (c43-5 / truth-value
                    :polarity-of (c43-3 / come-along-19
                                        :ARG1 (c43-1 / person
                                                     :name (c43-0 / name
                                                                  :op1 "Scott")))))

# ::snt unemployed and does nothing with her life ? stupid
# ::tokens ["unemployed", "and", "does", "nothing", "with", "her", "life", "?", "stupid"]
# ::lemmas ["unemployed", "and", "do", "nothing", "with", "her", "life", "?", "stupid"]
(c44-2 / stupid
       :polarity (c44-6 / amr-unknown)
       :domain (c44-5 / and
                      :op1 (c44-3 / employ-01
                                  :ARG1 (c44-0 / she)
                                  :polarity -)
                      :op2 (c44-7 / do-02
                                  :ARG0 c44-0
                                  :ARG1 (c44-1 / nothing)
                                  :ARG2 (c44-4 / life
                                               :poss c44-0))))

# ::snt News for perverts
# ::tokens ["News", "for", "perverts"]
# ::lemmas ["news", "for", "pervert"]
(c45-1 / news
       :beneficiary (c45-0 / pervert-01))

# ::snt This is what passes for news?
# ::tokens ["This", "is", "what", "passes", "for", "news", "?"]
# ::lemmas ["this", "be", "what", "pass", "for", "news", "?"]
(c46-2 / pass-03
       :polarity (c46-3 / amr-unknown)
       :ARG1 (c46-1 / this)
       :ARG2 (c46-0 / news))

# ::snt Neither
# ::tokens ["Neither"]
# ::lemmas ["neither"]
(c47-0 / neither)
