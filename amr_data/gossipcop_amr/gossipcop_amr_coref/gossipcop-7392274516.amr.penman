# ::snt Same.
# ::tokens ["Same", "."]
# ::lemmas ["same", "."]
(c1-0 / same-01)

# ::snt Haha. I have friends that just spoke about having a baby and they thought it would take a while but right away they were pregnant almost immediately after the conversation.
# ::tokens ["Haha", ".", "I", "have", "friends", "that", "just", "spoke", "about", "having", "a", "baby", "and", "they", "thought", "it", "would", "take", "a", "while", "but", "right", "away", "they", "were", "pregnant", "almost", "immediately", "after", "the", "conversation", "."]
# ::lemmas ["Haha", ".", "i", "have", "friend", "that", "just", "speak", "about", "have", "a", "baby", "and", "they", "think", "it", "would", "take", "a", "while", "but", "right", "away", "they", "be", "pregnant", "almost", "immediately", "after", "the", "conversation", "."]
(c2-11 / multi-sentence
       :snt1 (c2-4 / haha
                   :mode expressive)
       :snt2 (c2-19 / have-03
                    :ARG0 (c2-20 / i)
                    :ARG1 (c2-17 / person
                                 :ARG0-of (c2-3 / have-rel-role-91
                                                :ARG1 c2-20
                                                :ARG2 (c2-15 / friend))
                                 :ARG0-of (c2-1 / speak-01
                                                :ARG1 (c2-14 / have-05
                                                             :ARG1 (c2-10 / baby))
                                                :mod (c2-5 / just))
                                 :ARG0-of (c2-8 / think-01
                                                :ARG1 (c2-13 / take-10
                                                             :ARG0 (c2-2 / it)
                                                             :ARG1 (c2-18 / while))
                                                :concession-of (c2-9 / impregnate-01
                                                                     :ARG1 c2-17
                                                                     :time (c2-16 / right-away)
                                                                     :time (c2-7 / after
                                                                                 :op1 (c2-12 / converse-01
                                                                                             :ARG0 c2-17)
                                                                                 :mod (c2-0 / immediate
                                                                                            :mod (c2-6 / almost))))))))

# ::snt I love You Honey " Take care there in Afghanistan
# ::tokens ["I", "love", "You", "Honey", "\"", "Take", "care", "there", "in", "Afghanistan"]
# ::lemmas ["i", "love", "You", "Honey", "\"", "take", "care", "there", "in", "Afghanistan"]
(c3-1 / say-01
      :ARG0 (c3-7 / i)
      :ARG1 (c3-8 / and
                  :op1 (c3-4 / love-01
                             :ARG0 c3-7
                             :ARG1 (c3-3 / person
                                         :name (c3-0 / name
                                                     :op1 "Honey")))
                  :op2 (c3-5 / care-03
                             :ARG1 c3-3
                             :location (c3-6 / there
                                             :location (c3-9 / country
                                                             :name (c3-2 / name
                                                                         :op1 "Afghanistan")))))
      :ARG2 c3-3)

# ::snt Lol sleeps
# ::tokens ["Lol", "sleeps"]
# ::lemmas ["Lol", "sleep"]
(c4-1 / sleep-01
      :manner (c4-0 / loud))

# ::snt sleeps.....I like that. Lol
# ::tokens ["sleeps", ".....", "I", "like", "that", ".", "Lol"]
# ::lemmas ["sleep", ".....", "i", "like", "that", ".", "Lol"]
(c5-0 / multi-sentence
      :snt1 (c5-1 / sleep-01)
      :snt2 (c5-2 / like-01
                  :ARG0 (c5-4 / i)
                  :ARG1 (c5-5 / that))
      :snt3 (c5-6 / laugh-01
                  :manner (c5-3 / loud)
                  :mode expressive))

# ::snt I think she has lost her voice and opinions which is sad to see. All people care about is what she is wearing.
# ::tokens ["I", "think", "she", "has", "lost", "her", "voice", "and", "opinions", "which", "is", "sad", "to", "see", ".", "All", "people", "care", "about", "is", "what", "she", "is", "wearing", "."]
# ::lemmas ["i", "think", "she", "have", "lose", "her", "voice", "and", "opinion", "which", "be", "sad", "to", "see", ".", "all", "people", "care", "about", "be", "what", "she", "be", "wear", "."]
(c6-2 / multi-sentence
      :snt1 (c6-12 / think-01
                   :ARG0 (c6-11 / i)
                   :ARG1 (c6-7 / lose-02
                               :ARG0 (c6-3 / she)
                               :ARG1 (c6-5 / and
                                           :op1 (c6-6 / voice
                                                      :poss c6-3)
                                           :op2 (c6-0 / opine-01
                                                      :ARG0 c6-3))
                               :ARG0-of (c6-1 / sad-02)
                               :ARG1-of (c6-15 / see-01)))
      :snt2 (c6-9 / care-01
                  :ARG0 (c6-8 / person
                              :mod (c6-13 / all))
                  :ARG1 (c6-14 / thing
                               :ARG1-of (c6-10 / wear-01
                                               :ARG0 (c6-4 / she)))))

# ::snt Haan yaar. I didnt pay attention earlier.
# ::tokens ["Haan", "yaar", ".", "I", "did", "nt", "pay", "attention", "earlier", "."]
# ::lemmas ["Haan", "yaar", ".", "i", "do", "not", "pay", "attention", "early", "."]
(c7-1 / multi-sentence
      :snt1 (c7-3 / haan-yeah
                  :mode expressive)
      :snt2 (c7-5 / attend-02
                  :ARG0 (c7-4 / i)
                  :time (c7-0 / before
                              :op1 (c7-2 / now))
                  :polarity -))

# ::snt Thanks, it took you all these days to notice
# ::tokens ["Thanks", ",", "it", "took", "you", "all", "these", "days", "to", "notice"]
# ::lemmas ["thank", ",", "it", "take", "you", "all", "these", "day", "to", "notice"]
(c8-3 / thank-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-0 / you)
      :ARG2 (c8-5 / take-10
                  :ARG0 (c8-1 / notice-01
                              :ARG0 c8-0)
                  :ARG1 (c8-7 / day
                              :mod (c8-6 / this)
                              :mod (c8-2 / all))
                  :ARG2 c8-0))

# ::snt Recommendations? Oh shucks! You changed your DP?! Finally, youve uploaded a picture of yourself. Goa was indeed a good holiday!!!
# ::tokens ["Recommendations", "?", "Oh", "shucks", "!", "You", "changed", "your", "DP", "?", "!", "Finally", ",", "you", "ve", "uploaded", "a", "picture", "of", "yourself", ".", "Goa", "was", "indeed", "a", "good", "holiday", "!", "!", "!"]
# ::lemmas ["recommendation", "?", "oh", "shuck", "!", "you", "change", "your", "DP", "?", "!", "finally", ",", "you", "ve", "upload", "a", "picture", "of", "yourself", ".", "Goa", "be", "indeed", "a", "good", "holiday", "!", "!", "!"]
(c9-3 / multi-sentence
      :snt1 (c9-12 / thing
                   :ARG1-of (c9-7 / recommend-01)
                   :polarity (c9-14 / amr-unknown))
      :snt2 (c9-11 / change-01
                   :ARG0 (c9-2 / you)
                   :ARG1 (c9-9 / product
                               :name (c9-4 / name
                                           :op1 "DP")
                               :poss c9-2)
                   :polarity c9-14)
      :mod (c9-0 / oh-shucks
                 :mode expressive)
      :snt3 (c9-5 / post-01
                  :ARG0 (c9-15 / you)
                  :ARG1 (c9-16 / picture-01
                               :ARG1 c9-15)
                  :time (c9-1 / final))
      :snt4 (c9-8 / holiday-01
                  :ARG1 (c9-17 / country
                               :name (c9-10 / name
                                            :op1 "Goa"))
                  :ARG1-of (c9-6 / good-02)
                  :mod (c9-13 / indeed)))

# ::snt New movies dekh
# ::tokens ["New", "movies", "dekh"]
# ::lemmas ["new", "movie", "dekh"]
(c10-1 / movie
       :ARG1-of (c10-0 / new-01))

# ::snt Bahut dekh liya. I needed something new
# ::tokens ["Bahut", "dekh", "liya", ".", "I", "needed", "something", "new"]
# ::lemmas ["bahut", "dekh", "liya", ".", "i", "need", "something", "new"]
(c11-2 / multi-sentence
       :snt1 (c11-0 / bahut-dekh-liya
                    :mode expressive)
       :snt2 (c11-1 / need-01
                    :ARG0 (c11-5 / i)
                    :ARG1 (c11-3 / something
                                 :ARG1-of (c11-4 / new-01))))

# ::snt Animal Kingdom dekho
# ::tokens ["Animal", "Kingdom", "dekho"]
# ::lemmas ["Animal", "Kingdom", "dekho"]
(c12-3 / say-01
       :ARG0 (c12-2 / i)
       :ARG2 (c12-1 / person
                    :name (c12-0 / name
                                 :op1 "Animal"
                                 :op2 "Kingdom")))

# ::snt Felt like it
# ::tokens ["Felt", "like", "it"]
# ::lemmas ["felt", "like", "it"]
(c13-1 / feel-06
       :ARG0 (c13-2 / i)
       :ARG1 (c13-0 / it))

# ::snt Arey why are you live tweeting?
# ::tokens ["Arey", "why", "are", "you", "live", "tweeting", "?"]
# ::lemmas ["Arey", "why", "be", "you", "live", "tweet", "?"]
(c14-1 / say-01
       :ARG0 (c14-6 / i)
       :ARG1 (c14-5 / cause-01
                    :ARG0 (c14-2 / amr-unknown)
                    :ARG1 (c14-7 / tweet-01
                                 :ARG0 (c14-3 / person
                                              :name (c14-0 / name
                                                           :op1 "Arey"))
                                 :manner (c14-4 / live)))
       :ARG2 c14-3)

# ::snt This is so exciting! The Duchess can now do without leaving the Palace!
# ::tokens ["This", "is", "so", "exciting", "!", "The", "Duchess", "can", "now", "do", "without", "leaving", "the", "Palace", "!"]
# ::lemmas ["this", "be", "so", "exciting", "!", "the", "Duchess", "can", "now", "do", "without", "leave", "the", "Palace", "!"]
(c15-0 / multi-sentence
       :snt1 (c15-4 / excite-01
                    :ARG0 (c15-9 / this)
                    :degree (c15-2 / so)
                    :mode expressive)
       :snt2 (c15-6 / possible-01
                    :ARG1 (c15-10 / do-02
                                  :ARG0 (c15-1 / person
                                               :ARG0-of (c15-5 / have-org-role-91
                                                               :ARG2 (c15-8 / duchess)))
                                  :time (c15-3 / now)
                                  :manner (c15-7 / leave-11
                                                 :ARG0 c15-1
                                                 :ARG1 (c15-11 / palace)
                                                 :polarity -))))

# ::snt DAMN
# ::tokens ["DAMN"]
# ::lemmas ["DAMN"]
(c16-1 / product
       :name (c16-0 / name
                    :op1 "DAMN"))

# ::snt That guy no waste time ra ra oo
# ::tokens ["That", "guy", "no", "waste", "time", "ra", "ra", "oo"]
# ::lemmas ["that", "guy", "no", "waste", "time", "ra", "ra", "oo"]
(c17-1 / waste-01
       :ARG0 (c17-4 / guy
                    :mod (c17-2 / that))
       :ARG1 (c17-3 / time)
       :mod (c17-0 / ra-ha
                   :mode expressive)
       :polarity -)

# ::snt What is banks doing gan
# ::tokens ["What", "is", "banks", "doing", "gan"]
# ::lemmas ["what", "be", "bank", "do", "gan"]
(c19-0 / do-02
       :ARG0 (c19-1 / bank)
       :ARG1 (c19-2 / amr-unknown))

# ::snt ... But in Nigeria once the sperm hears Atiku it will just turn back
# ::tokens ["...", "But", "in", "Nigeria", "once", "the", "sperm", "hears", "Atiku", "it", "will", "just", "turn", "back"]
# ::lemmas ["...", "but", "in", "Nigeria", "once", "the", "sperm", "hear", "Atiku", "it", "will", "just", "turn", "back"]
(c20-6 / contrast-01
       :ARG2 (c20-8 / turn-01
                    :ARG1 (c20-2 / sperm)
                    :direction (c20-0 / back-02)
                    :mod (c20-7 / just)
                    :location (c20-9 / country
                                     :name (c20-1 / name
                                                  :op1 "Nigeria"))
                    :time (c20-3 / hear-01
                                 :ARG0 c20-2
                                 :ARG1 (c20-4 / person
                                              :name (c20-5 / name
                                                           :op1 "Atiku")))))
