# ::snt Buff midget
# ::tokens ["Buff", "midget"]
# ::lemmas ["Buff", "midget"]
(c3-1 / person
      :name (c3-0 / name
                  :op1 "Buff"
                  :op2 "Midget"))

# ::snt What happened to his cute face ?.. Time flies.
# ::tokens ["What", "happened", "to", "his", "cute", "face", "?", "..", "Time", "flies", "."]
# ::lemmas ["what", "happen", "to", "his", "cute", "face", "?", "..", "Time", "fly", "."]
(c5-1 / multi-sentence
      :snt1 (c5-2 / event
                  :mod (c5-7 / amr-unknown)
                  :topic (c5-0 / face
                               :mod (c5-5 / cute)
                               :part-of (c5-3 / he)))
      :snt2 (c5-4 / fly-01
                  :ARG0 (c5-6 / time)))

# ::snt Woah. I feel old.
# ::tokens ["Woah", ".", "I", "feel", "old", "."]
# ::lemmas ["Woah", ".", "i", "feel", "old", "."]
(c7-2 / multi-sentence
      :snt1 (c7-3 / Woah
                  :mode expressive)
      :snt2 (c7-0 / feel-01
                  :ARG0 (c7-4 / i)
                  :ARG1 (c7-1 / old)))

# ::snt Me da musha tristeza que no hayas visto el video de su boda y apenas estes enterandote de este evento observaloooo shaaaaaa
# ::tokens ["Me", "da", "musha", "tristeza", "que", "no", "hayas", "visto", "el", "video", "de", "su", "boda", "y", "apenas", "estes", "enterandote", "de", "este", "evento", "observaloooo", "shaaaaaa"]
# ::lemmas ["i", "da", "musha", "tristeza", "que", "no", "hayas", "visto", "el", "video", "de", "su", "boda", "y", "apenas", "este", "enterandote", "de", "este", "evento", "observaloooo", "shaaaaaa"]
(c8-4 / say-01
      :ARG0 (c8-12 / i)
      :ARG1 (c8-13 / and
                   :op1 (c8-15 / da
                               :op1 (c8-11 / tristeza
                                           :mod (c8-8 / person
                                                      :name (c8-3 / name
                                                                  :op1 "W musha"))))
                   :op2 (c8-6 / visto
                              :ARG0 c8-12
                              :ARG1 (c8-9 / video
                                          :mod (c8-2 / boda
                                                     :poss c8-8))
                              :polarity -)
                   :op3 (c8-14 / visto
                               :ARG0-of (c8-10 / cause-01
                                               :ARG1 (c8-7 / enterandote
                                                           :poss (c8-5 / event
                                                                       :mod (c8-16 / this)
                                                                       :ARG0-of (c8-0 / observe-01)))))
                   :op4 (c8-1 / shaa
                              :mode expressive))
      :ARG2 c8-8)

# ::snt no inventessss
# ::tokens ["no", "inventessss"]
# ::lemmas ["no", "inventessss"]
(c9-0 / inventessessess-01
      :polarity -)

# ::snt Congrats
# ::tokens ["Congrats"]
# ::lemmas ["Congrats"]
(c10-0 / congratulate-01)

# ::snt Nooooo idea lol
# ::tokens ["Nooooo", "idea", "lol"]
# ::lemmas ["nooooo", "idea", "lol"]
(c11-2 / idea
       :ARG2-of (c11-1 / laugh-01
                       :manner (c11-0 / loud))
       :polarity -)

# ::snt why he look like that
# ::tokens ["why", "he", "look", "like", "that"]
# ::lemmas ["why", "he", "look", "like", "that"]
(c12-3 / cause-01
       :ARG0 (c12-0 / amr-unknown)
       :ARG1 (c12-2 / look-02
                    :ARG0 (c12-1 / he)
                    :ARG1 (c12-4 / that)))

# ::snt Siiiim
# ::tokens ["Siiiim"]
# ::lemmas ["Siiiim"]
(c14-0 / right-06)

# ::snt Aaaaaaaaaaaa o tempo t voando
# ::tokens ["Aaaaaaaaaaaa", "o", "tempo", "t", "voando"]
# ::lemmas ["Aaaaaaaaaaaa", "o", "tempo", "t", "voando"]
(c15-3 / and
       :op1 (c15-2 / aha
                   :mode expressive)
       :op2 (c15-1 / tempo)
       :op3 (c15-0 / voando))

# ::snt Quantos anos eu dormi?? Meu Deus, meu fredinho t adulto
# ::tokens ["Quantos", "anos", "eu", "dormi", "?", "?", "Meu", "Deus", ",", "meu", "fredinho", "t", "adulto"]
# ::lemmas ["Quantos", "anos", "eu", "dormi", "?", "?", "Meu", "Deus", ",", "meu", "fredinho", "t", "adulto"]
(c16-0 / multi-sentence
       :snt1 (c16-1 / amr-unintelligible))

# ::snt caceteeeee
# ::tokens ["caceteeeee"]
# ::lemmas ["caceteeeee"]
(c17-0 / caceteee)

# ::snt Yes I do feel old now!! TYVM!!
# ::tokens ["Yes", "I", "do", "feel", "old", "now", "!", "!", "TYVM", "!", "!"]
# ::lemmas ["yes", "i", "do", "feel", "old", "now", "!", "!", "TYVM", "!", "!"]
(c18-3 / say-01
       :ARG0 (c18-6 / i)
       :ARG1 (c18-0 / feel-01
                    :ARG0 c18-6
                    :ARG1 (c18-1 / old)
                    :time (c18-2 / now))
       :ARG2 (c18-5 / person
                    :name (c18-4 / name
                                 :op1 "Tyvm")))

# ::snt dude he got some year old blonde girl, hes got icarly money, how do people no see the correlation. icarly was broadcast worldwide
# ::tokens ["dude", "he", "got", "some", "year", "old", "blonde", "girl", ",", "he", "s", "got", "icarly", "money", ",", "how", "do", "people", "no", "see", "the", "correlation", ".", "icarly", "was", "broadcast", "worldwide"]
# ::lemmas ["dude", "he", "get", "some", "year", "old", "blonde", "girl", ",", "he", "s", "get", "icarly", "money", ",", "how", "do", "people", "no", "see", "the", "correlation", ".", "icarly", "be", "broadcast", "worldwide"]
(c19-13 / multi-sentence
        :snt1 (c19-10 / and
                      :op1 (c19-11 / get-01
                                   :ARG0 (c19-18 / dude)
                                   :ARG1 (c19-2 / girl
                                                :mod (c19-12 / blonde)
                                                :age (c19-0 / some
                                                            :op1 (c19-9 / temporal-quantity
                                                                        :unit (c19-5 / year)
                                                                        :quant 1))))
                      :op2 (c19-3 / get-01
                                  :ARG0 c19-18
                                  :ARG1 (c19-7 / money
                                               :mod (c19-17 / international))))
        :snt2 (c19-4 / see-01
                     :ARG0 (c19-15 / person)
                     :ARG1 (c19-14 / correlate-01)
                     :manner (c19-8 / amr-unknown)
                     :polarity -)
        :snt3 (c19-1 / broadcast-01
                     :ARG1 (c19-6 / it)
                     :location (c19-16 / worldwide)))

# ::snt Well done! All the best to you, Kress!
# ::tokens ["Well", "done", "!", "All", "the", "best", "to", "you", ",", "Kress", "!"]
# ::lemmas ["well", "do", "!", "all", "the", "good", "to", "you", ",", "Kress", "!"]
(c20-0 / multi-sentence
       :snt1 (c20-11 / do-02
                     :ARG1-of (c20-8 / well-09))
       :snt2 (c20-2 / say-01
                    :ARG1 (c20-7 / wish-01
                                 :ARG1 (c20-9 / thing
                                              :mod (c20-3 / all)
                                              :ARG1-of (c20-4 / have-degree-91
                                                              :ARG2 (c20-10 / good-02)
                                                              :ARG3 (c20-5 / most)))
                                 :ARG2 (c20-6 / person
                                              :name (c20-1 / name
                                                           :op1 "Kress")
                                              :ARG2-of c20-2))))

# ::snt Freddie!! But iss all the grown-man hair that makes him look that handsome.
# ::tokens ["Freddie", "!", "!", "But", "iss", "all", "the", "grown", "-", "man", "hair", "that", "makes", "him", "look", "that", "handsome", "."]
# ::lemmas ["Freddie", "!", "!", "but", "iss", "all", "the", "grow", "-", "man", "hair", "that", "make", "he", "look", "that", "handsome", "."]
(c21-1 / multi-sentence
       :snt1 (c21-4 / person
                    :name (c21-0 / name
                                 :op1 "Freddie"))
       :snt2 (c21-7 / contrast-01
                    :ARG2 (c21-3 / hair
                                 :poss (c21-5 / man
                                              :ARG1-of (c21-12 / grow-01))
                                 :mod (c21-11 / all)
                                 :ARG0-of (c21-13 / make-02
                                                  :ARG1 (c21-6 / look-02
                                                               :ARG0 (c21-8 / he)
                                                               :ARG1 (c21-2 / handsome
                                                                            :degree (c21-9 / that))))
                                 :domain (c21-10 / amr-unknown))))

# ::snt I'm shocked
# ::tokens ["I", "'m", "shocked"]
# ::lemmas ["i", "be", "shocked"]
(c22-1 / shock-01
       :ARG1 (c22-0 / i))

# ::snt They really do grow up fast don't they
# ::tokens ["They", "really", "do", "grow", "up", "fast", "do", "n't", "they"]
# ::lemmas ["they", "really", "do", "grow", "up", "fast", "do", "not", "they"]
(c23-3 / grow-up-04
       :ARG1 (c23-2 / they)
       :ARG1-of (c23-0 / fast-02)
       :ARG1-of (c23-1 / real-04)
       :ARG1-of (c23-4 / request-confirmation-91))

# ::snt God damn freddie
# ::tokens ["God", "damn", "freddie"]
# ::lemmas ["God", "damn", "freddie"]
(c24-2 / person
       :name (c24-0 / name
                    :op1 "God")
       :mod (c24-1 / fuck
                   :mode expressive)
       :ARG1-of (c24-3 / damn-01))

# ::snt Still ship him and Sam and still proud
# ::tokens ["Still", "ship", "him", "and", "Sam", "and", "still", "proud"]
# ::lemmas ["still", "ship", "he", "and", "Sam", "and", "still", "proud"]
(c25-7 / and
       :op1 (c25-3 / ship-01
                   :ARG1 (c25-6 / and
                                :op1 (c25-4 / he)
                                :op2 (c25-5 / person
                                            :name (c25-1 / name
                                                         :op1 "Sam")))
                   :ARG2 c25-4
                   :mod (c25-0 / still))
       :op2 (c25-2 / pride-01
                   :ARG0 c25-4
                   :mod (c25-8 / still)))

# ::snt Never would have guessed he would've grown up to look like that. Looks good.
# ::tokens ["Never", "would", "have", "guessed", "he", "would", "'ve", "grown", "up", "to", "look", "like", "that", ".", "Looks", "good", "."]
# ::lemmas ["never", "would", "have", "guess", "he", "would", "'ve", "grow", "up", "to", "look", "like", "that", ".", "look", "good", "."]
(c26-0 / multi-sentence
       :snt1 (c26-7 / guess-01
                    :ARG0 (c26-6 / i)
                    :ARG1 (c26-5 / grow-up-04
                                 :ARG1 (c26-2 / he)
                                 :purpose (c26-3 / look-02
                                                 :ARG0 c26-2
                                                 :ARG1 (c26-4 / that)))
                    :time (c26-1 / ever)
                    :polarity -)
       :snt2 c26-3
       :ARG1 (c26-8 / good-02))

# ::snt aka, New Law - .
# ::tokens ["aka", ",", "New", "Law", "-", "."]
# ::lemmas ["aka", ",", "New", "Law", "-", "."]
(c27-1 / law
       :ARG1-of (c27-0 / new-01)
       :mod (c27-2 / aka))
