# ::snt tima ideia. Vou fazer um best moments tambm
# ::tokens ["tima", "ideia", ".", "Vou", "fazer", "um", "best", "moments", "tambm"]
# ::lemmas ["tima", "ideia", ".", "Vou", "fazer", "um", "good", "moment", "tambm"]
(c1-2 / multi-sentence
      :snt1 (c1-7 / ideia
                  :mod (c1-5 / person
                             :name (c1-1 / name
                                         :op1 "Tima"
                                         :op2 " ideia")))
      :snt2 (c1-0 / fazer-00
                  :ARG0 (c1-3 / person)
                  :ARG1 (c1-4 / moment
                              :ARG1-of (c1-6 / have-degree-91
                                             :ARG2 (c1-8 / good-02
                                                         :ARG1 c1-4)
                                             :ARG3 (c1-9 / most)))))

# ::snt que engraado
# ::tokens ["que", "engraado"]
# ::lemmas ["que", "engraado"]
(c2-1 / say-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-2 / hello)
      :ARG2 (c2-3 / person
                  :name (c2-0 / name
                              :op1 "Enraado")))

# ::snt N no? hahaha
# ::tokens ["N", "no", "?", "hahaha"]
# ::lemmas ["N", "no", "?", "hahaha"]
(c3-1 / no
      :polarity (c3-2 / amr-unknown)
      :mod (c3-0 / haha))

# ::snt ela tem muita pacincia hahaha
# ::tokens ["ela", "tem", "muita", "pacincia", "hahaha"]
# ::lemmas ["ela", "tem", "muita", "pacincia", "hahaha"]
(c4-2 / laugh-01
      :ARG0 (c4-3 / i)
      :manner (c4-4 / loud)
      :mod (c4-0 / only)
      :topic (c4-1 / pacincia)
      :mode expressive)

# ::snt Oh my god
# ::tokens ["Oh", "my", "god"]
# ::lemmas ["oh", "my", "god"]
(c5-0 / god
      :mod (c5-1 / oh)
      :poss (c5-2 / i))

# ::snt words aren't your thing g, stick to the calculator x
# ::tokens ["words", "are", "n't", "your", "thing", "g", ",", "stick", "to", "the", "calculator", "x"]
# ::lemmas ["word", "be", "not", "your", "thing", "g", ",", "stick", "to", "the", "calculator", "x"]
(c6-2 / multi-sentence
      :snt1 (c6-6 / thing
                  :poss (c6-1 / you)
                  :domain (c6-4 / word)
                  :polarity -)
      :snt2 (c6-3 / say-01
                  :ARG1 (c6-0 / stick-01
                              :ARG0 (c6-7 / you)
                              :ARG2 (c6-5 / calculator)
                              :mode imperative)
                  :ARG2 c6-7))

# ::snt this doesnt surprise me
# ::tokens ["this", "does", "nt", "surprise", "me"]
# ::lemmas ["this", "do", "not", "surprise", "i"]
(c7-2 / surprise-01
      :ARG0 (c7-0 / this)
      :ARG1 (c7-1 / i)
      :polarity -)

# ::snt Nahhh ini baru bener. Terukur, berimbang, terarah, dan hal yg pasti.
# ::tokens ["Nahhh", "ini", "baru", "bener", ".", "Terukur", ",", "berimbang", ",", "terarah", ",", "dan", "hal", "yg", "pasti", "."]
# ::lemmas ["Nahhh", "ini", "baru", "bener", ".", "Terukur", ",", "berimbang", ",", "terarah", ",", "dan", "hal", "yg", "pasti", "."]
(c8-1 / multi-sentence
      :snt1 (c8-0 / bener
                  :mod (c8-6 / in-i-bay)
                  :mode expressive)
      :snt2 (c8-2 / and
                  :op1 (c8-7 / terukur)
                  :op2 (c8-3 / berimbang)
                  :op3 (c8-8 / terarah)
                  :op4 (c8-4 / hal
                             :op1 (c8-5 / pasti))))

# ::snt Glad I'm not Craig, Jacob, Arnold, Neil or Harold!
# ::tokens ["Glad", "I", "'m", "not", "Craig", ",", "Jacob", ",", "Arnold", ",", "Neil", "or", "Harold", "!"]
# ::lemmas ["Glad", "i", "be", "not", "Craig", ",", "Jacob", ",", "Arnold", ",", "Neil", "or", "Harold", "!"]
(c9-11 / glad-02
       :ARG0 (c9-0 / or
                   :op1 (c9-4 / person
                              :name (c9-1 / name
                                          :op1 "Craig"))
                   :op2 (c9-2 / person
                              :name (c9-3 / name
                                          :op1 "Jacobs"))
                   :op3 (c9-10 / person
                               :name (c9-5 / name
                                           :op1 "Arnold"))
                   :op4 (c9-6 / person
                              :name (c9-7 / name
                                          :op1 "Neil"))
                   :op5 (c9-9 / person
                              :name (c9-8 / name
                                          :op1 "Harold"))
                   :polarity -)
       :ARG1 (c9-12 / i))

# ::snt Drag them, sister!
# ::tokens ["Drag", "them", ",", "sister", "!"]
# ::lemmas ["drag", "they", ",", "sister", "!"]
(c11-1 / say-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-6 / drag-01
                    :ARG0 (c11-3 / person
                                 :ARG0-of (c11-2 / have-rel-role-91
                                                 :ARG2 (c11-0 / sister)))
                    :ARG1 (c11-5 / they)
                    :mode imperative)
       :ARG2 c11-3)

# ::snt waarom nodigt De Morgen enkel lijsttrekkers uit van de traditionele partijen? Oude politieke/media cultuur? In Gent staat burgerpartij de Gentse Burgers (opgericht door Gent voor Democratie, Gent Wake Up,.....) zeer sterk met meet dan aanhangers.....
# ::tokens ["waarom", "nodigt", "De", "Morgen", "enkel", "lijsttrekkers", "uit", "van", "de", "traditionele", "partijen", "?", "Oude", "politieke", "/", "media", "cultuur", "?", "In", "Gent", "staat", "burgerpartij", "de", "Gentse", "Burgers", "(", "opgericht", "door", "Gent", "voor", "Democratie", ",", "Gent", "Wake", "Up", ",", ".....", ")", "zeer", "sterk", "met", "meet", "dan", "aanhangers", "....."]
# ::lemmas ["waarom", "nodigt", "De", "Morgen", "enkel", "lijsttrekker", "uit", "van", "de", "traditionele", "partijen", "?", "Oude", "politieke", "/", "medium", "cultuur", "?", "in", "Gent", "staat", "burgerpartij", "de", "Gentse", "Burgers", "(", "opgericht", "door", "Gent", "voor", "Democratie", ",", "Gent", "wake", "up", ",", ".....", ")", "zeer", "sterk", "meet", "meet", "dan", "aanhanger", "....."]
(c12-19 / multi-sentence
        :snt1 (c12-14 / and
                      :op1 (c12-30 / nodigt-00
                                   :ARG0 (c12-32 / person
                                                 :name (c12-21 / name
                                                               :op1 "waarom"))
                                   :ARG1 (c12-23 / city
                                                 :name (c12-33 / name
                                                               :op1 "De"
                                                               :op2 "Morgen")))
                      :op2 (c12-10 / have-03
                                   :ARG0 c12-32
                                   :ARG1 (c12-20 / person
                                                 :ARG0-of (c12-13 / trekkker-01)
                                                 :mod (c12-4 / lijsttrekkken))
                                   :mod (c12-27 / uit
                                                :op1 (c12-8 / partijen
                                                            :mod (c12-26 / tradition))))
                      :op3 (c12-0 / slash
                                  :op1 (c12-6 / politieke)
                                  :op2 (c12-17 / cultuur)
                                  :mod (c12-11 / media)))
        :snt2 (c12-18 / be-located-at-91
                      :ARG1 (c12-3 / burgerpartij
                                   :name (c12-25 / name
                                                 :op1 "Gentse"
                                                 :op2 "Burgers")
                                   :location (c12-7 / city
                                                    :name (c12-34 / name
                                                                  :op1 "Gent"))
                                   :ARG1-of (c12-28 / mean-01
                                                    :ARG2 (c12-12 / and
                                                                  :op1 (c12-29 / city
                                                                               :name (c12-31 / name
                                                                                             :op1 "Gent"
                                                                                             :op2 "voor"
                                                                                             :op3 "Democratie"))
                                                                  :op2 (c12-9 / city
                                                                              :name (c12-2 / name
                                                                                           :op1 "Gent"
                                                                                           :op2 "Wake"
                                                                                           :op3 "Up"))
                                                                  :op3 (c12-24 / city
                                                                               :name (c12-1 / name
                                                                                            :op1 "Gent")))))
                      :ARG2 (c12-15 / city
                                    :name (c12-5 / name
                                                 :op1 "Gent")))
        :snt3 (c12-22 / meet-03
                      :mod c12-22)
        :snt4 (c12-16 / person
                      :ARG0-of (c12-35 / pose-02)
                      :mod c12-22))

# ::snt Check it out! freelancerrahim will design or convert psd to html responsive... for $5 on
# ::tokens ["Check", "it", "out", "!", "freelancerrahim", "will", "design", "or", "convert", "psd", "to", "html", "responsive", "...", "for", "$", "5", "on"]
# ::lemmas ["check", "it", "out", "!", "freelancerrahim", "will", "design", "or", "convert", "psd", "to", "html", "responsive", "...", "for", "$", "5", "on"]
(c13-3 / multi-sentence
       :snt1 (c13-11 / check-out-05
                     :ARG0 (c13-2 / you)
                     :ARG1 (c13-13 / it)
                     :mode imperative)
       :snt2 (c13-0 / or
                    :op1 (c13-16 / design-01
                                 :ARG0 (c13-7 / person
                                              :name (c13-4 / name
                                                           :op1 "rahim")
                                              :ARG0-of (c13-1 / freelancer-00))
                                 :ARG1 (c13-14 / thing
                                               :name (c13-6 / name
                                                            :op1 "Psd")))
                    :op2 (c13-17 / convert-01
                                 :ARG0 c13-7
                                 :ARG1 c13-14
                                 :ARG2 (c13-10 / thing
                                               :ARG0-of (c13-5 / responsive-02
                                                               :ARG1 (c13-15 / thing
                                                                             :name (c13-8 / name
                                                                                          :op1 " html")))))
                    :prep-for (c13-9 / monetary-quantity
                                     :unit (c13-12 / dollar)
                                     :quant 5)))

# ::snt Do we pay for the shipping fees???
# ::tokens ["Do", "we", "pay", "for", "the", "shipping", "fees", "?", "?", "?"]
# ::lemmas ["do", "we", "pay", "for", "the", "shipping", "fee", "?", "?", "?"]
(c14-2 / pay-01
       :polarity (c14-4 / amr-unknown)
       :ARG0 (c14-3 / we)
       :ARG3 (c14-0 / fee
                    :mod (c14-1 / ship-01)))

# ::snt hi, what about shipping? would we have to pay for that or is this % free?
# ::tokens ["hi", ",", "what", "about", "shipping", "?", "would", "we", "have", "to", "pay", "for", "that", "or", "is", "this", "%", "free", "?"]
# ::lemmas ["hi", ",", "what", "about", "ship", "?", "would", "we", "have", "to", "pay", "for", "that", "or", "be", "this", "%", "free", "?"]
(c15-3 / multi-sentence
       :snt1 (c15-6 / hi)
       :snt2 (c15-8 / concern-02
                    :ARG0 (c15-11 / amr-unknown)
                    :ARG1 (c15-5 / ship-01))
       :snt3 (c15-0 / or
                    :op1 (c15-1 / obligate-01
                                :ARG1 (c15-9 / we)
                                :ARG2 (c15-7 / pay-01
                                             :ARG0 c15-9
                                             :ARG3 (c15-10 / that)))
                    :op2 (c15-2 / free-03
                                :ARG1 (c15-12 / this)
                                :mod (c15-4 / percentage))
                    :polarity c15-11))

# ::snt After I reach my goal, is it possible for you to give me like a code for the item that I can use at home instead of giving you my address?
# ::tokens ["After", "I", "reach", "my", "goal", ",", "is", "it", "possible", "for", "you", "to", "give", "me", "like", "a", "code", "for", "the", "item", "that", "I", "can", "use", "at", "home", "instead", "of", "giving", "you", "my", "address", "?"]
# ::lemmas ["after", "i", "reach", "my", "goal", ",", "be", "it", "possible", "for", "you", "to", "give", "i", "like", "a", "code", "for", "the", "item", "that", "i", "can", "use", "at", "home", "instead", "of", "give", "you", "my", "address", "?"]
(c16-5 / possible-01
       :ARG1 (c16-11 / give-01
                     :ARG0 (c16-0 / you)
                     :ARG1 (c16-7 / code
                                  :ARG1-of (c16-3 / resemble-01
                                                  :ARG2 (c16-9 / item
                                                               :ARG1-of (c16-15 / use-01
                                                                                :ARG0 (c16-2 / i)
                                                                                :location (c16-4 / home)
                                                                                :ARG1-of (c16-1 / possible-01)))))
                     :ARG2 c16-2)
       :polarity (c16-10 / amr-unknown)
       :time (c16-12 / after
                     :op1 (c16-13 / reach-01
                                  :ARG0 c16-2
                                  :ARG1 (c16-14 / goal
                                                :poss c16-2)))
       :ARG1-of (c16-6 / instead-of-91
                       :ARG2 (c16-16 / give-01
                                     :ARG0 c16-2
                                     :ARG1 (c16-8 / address
                                                  :poss c16-2)
                                     :ARG2 c16-0)))

# ::snt it wont let me dm you
# ::tokens ["it", "wo", "nt", "let", "me", "dm", "you"]
# ::lemmas ["it", "will", "not", "let", "i", "dm", "you"]
(c17-3 / let-01
       :ARG0 (c17-4 / it)
       :ARG1 (c17-2 / i)
       :ARG1-of (c17-1 / say-01
                       :ARG0 c17-2
                       :ARG2 (c17-0 / you))
       :polarity -)

# ::snt what websites can we ask for rt deals on? i saw a tweet about that on here a while ago but i dont see it now
# ::tokens ["what", "websites", "can", "we", "ask", "for", "rt", "deals", "on", "?", "i", "saw", "a", "tweet", "about", "that", "on", "here", "a", "while", "ago", "but", "i", "do", "nt", "see", "it", "now"]
# ::lemmas ["what", "website", "can", "we", "ask", "for", "rt", "deal", "on", "?", "i", "see", "a", "tweet", "about", "that", "on", "here", "a", "while", "ago", "but", "i", "do", "not", "see", "it", "now"]
(c18-9 / multi-sentence
       :snt1 (c18-14 / possible-01
                     :ARG1 (c18-6 / ask-02
                                  :ARG0 (c18-16 / we)
                                  :ARG1 (c18-18 / deal-01
                                                :ARG2 (c18-11 / company
                                                              :name (c18-13 / name
                                                                            :op1 "TSR")))
                                  :ARG2 (c18-1 / website))
                     :polarity (c18-4 / amr-unknown))
       :snt2 (c18-7 / contrast-01
                    :ARG1 (c18-0 / see-01
                                 :ARG0 (c18-17 / i)
                                 :ARG1 (c18-5 / tweet-01
                                              :topic c18-18
                                              :location (c18-3 / here)
                                              :time (c18-8 / before
                                                           :op1 (c18-10 / now)
                                                           :quant (c18-12 / while))))
                    :ARG2 (c18-2 / see-01
                                 :ARG0 c18-17
                                 :ARG1 c18-18
                                 :time (c18-15 / now)
                                 :polarity -)))

# ::snt ok so i can ask any merch item for you to buy?
# ::tokens ["ok", "so", "i", "can", "ask", "any", "merch", "item", "for", "you", "to", "buy", "?"]
# ::lemmas ["ok", "so", "i", "can", "ask", "any", "merch", "item", "for", "you", "to", "buy", "?"]
(c19-6 / cause-01
       :ARG1 (c19-5 / possible-01
                    :ARG1 (c19-9 / ask-02
                                 :ARG0 (c19-8 / i)
                                 :ARG1 (c19-4 / item
                                              :mod (c19-10 / any)
                                              :topic (c19-3 / merchandise))
                                 :ARG2 (c19-2 / you)
                                 :purpose (c19-1 / buy-01
                                                 :ARG0 c19-2
                                                 :ARG1 c19-4))
                    :ARG1-of (c19-0 / okay-04)
                    :polarity (c19-7 / amr-unknown)))

# ::snt If that makes sence
# ::tokens ["If", "that", "makes", "sence"]
# ::lemmas ["if", "that", "make", "sence"]
(c20-1 / have-condition-91
       :ARG2 (c20-2 / make-02
                    :ARG0 (c20-3 / that)
                    :ARG1 (c20-0 / ence)))

# ::snt Ive seen people getting sims memberships and stuff through here, so I dont think it HAS to be merch, but thats what the account was originally intended for... I think merch counts as anything the band/YouTube/etc. Sells/is affiliated with
# ::tokens ["I", "ve", "seen", "people", "getting", "sims", "memberships", "and", "stuff", "through", "here", ",", "so", "I", "do", "nt", "think", "it", "HAS", "to", "be", "merch", ",", "but", "that", "s", "what", "the", "account", "was", "originally", "intended", "for", "...", "I", "think", "merch", "counts", "as", "anything", "the", "band", "/", "YouTube", "/", "etc", ".", "Sells", "/", "is", "affiliated", "with"]
# ::lemmas ["i", "ve", "see", "people", "get", "sim", "membership", "and", "stuff", "through", "here", ",", "so", "i", "do", "not", "think", "it", "have", "to", "be", "merch", ",", "but", "that", "s", "what", "the", "account", "be", "originally", "intend", "for", "...", "i", "think", "merch", "count", "as", "anything", "the", "band", "/", "YouTube", "/", "etc", ".", "Sells", "/", "be", "affiliate", "with"]
(c21-17 / multi-sentence
        :snt1 (c21-21 / cause-01
                      :ARG0 (c21-0 / see-01
                                   :ARG0 (c21-30 / i)
                                   :ARG1 (c21-12 / get-01
                                                 :ARG0 (c21-28 / person)
                                                 :ARG1 (c21-11 / and
                                                               :op1 (c21-6 / membership
                                                                           :mod (c21-3 / sim))
                                                               :op2 (c21-2 / stuff))
                                                 :path (c21-7 / here)))
                      :ARG1 (c21-10 / think-01
                                    :ARG0 c21-30
                                    :ARG1 (c21-4 / obligate-01
                                                 :ARG2 (c21-24 / market-sector
                                                               :name (c21-25 / name
                                                                             :op1 " merch")))
                                    :ARG1-of (c21-14 / contrast-01
                                                     :ARG2 (c21-22 / think-01
                                                                   :ARG0 c21-30
                                                                   :ARG1 (c21-5 / intend-01
                                                                                :ARG1 (c21-20 / market-sector
                                                                                              :name (c21-19 / name
                                                                                                            :op1 "Mechanism"))
                                                                                :mod (c21-15 / original))))
                                    :polarity -))
        :snt2 (c21-31 / think-01
                      :ARG0 (c21-13 / i)
                      :ARG1 (c21-1 / count-04
                                   :ARG1 (c21-23 / merchandise-01)
                                   :ARG2 (c21-9 / anything
                                                :ARG2-of (c21-8 / affiliate-01
                                                                :ARG1 (c21-26 / slash
                                                                              :op1 (c21-16 / band)
                                                                              :op2 (c21-18 / publication
                                                                                           :name (c21-29 / name
                                                                                                         :op1 "YouTube"))
                                                                              :op3 (c21-27 / et-cetera)))))))

# ::snt I can't dm you please dm me
# ::tokens ["I", "ca", "n't", "dm", "you", "please", "dm", "me"]
# ::lemmas ["i", "can", "not", "dm", "you", "please", "dm", "i"]
(c22-2 / possible-01
       :ARG1 (c22-1 / you)
       :ARG2-of (c22-3 / please-01
                       :ARG1 (c22-0 / i))
       :polarity -
       :polite +)

# ::snt please check dms!
# ::tokens ["please", "check", "dms", "!"]
# ::lemmas ["please", "check", "dms", "!"]
(c23-0 / check-01
       :ARG0 (c23-2 / you)
       :ARG1 (c23-3 / product
                    :name (c23-1 / name
                                 :op1 "DMS"))
       :mode imperative
       :polite +)

# ::snt Proofs?
# ::tokens ["Proofs", "?"]
# ::lemmas ["Proofs", "?"]
(c24-0 / prove-01
       :polarity (c24-1 / amr-unknown))

# ::snt How do I dm you? Its saying your account isnt allowing me to dm you x
# ::tokens ["How", "do", "I", "dm", "you", "?", "Its", "saying", "your", "account", "is", "nt", "allowing", "me", "to", "dm", "you", "x"]
# ::lemmas ["how", "do", "i", "dm", "you", "?", "its", "say", "your", "account", "be", "not", "allow", "i", "to", "dm", "you", "x"]
(c25-2 / multi-sentence
       :snt1 (c25-5 / have-manner-91
                    :ARG1 (c25-6 / i)
                    :ARG2 (c25-1 / you))
       :snt2 (c25-3 / say-01
                    :ARG0 (c25-4 / it)
                    :ARG1 (c25-7 / allow-01
                                 :ARG0 (c25-8 / account
                                              :poss (c25-9 / you))
                                 :ARG1 (c25-0 / belong-01
                                              :ARG0 c25-6
                                              :ARG1 c25-9)
                                 :polarity -)))

# ::snt What about the shipping fee?
# ::tokens ["What", "about", "the", "shipping", "fee", "?"]
# ::lemmas ["what", "about", "the", "shipping", "fee", "?"]
(c26-2 / amr-unknown
       :topic (c26-1 / fee
                     :purpose (c26-0 / ship-01)))

# ::snt (sorry replying to your other tweet)Their DMS are open when there is a next to their name
# ::tokens ["(", "sorry", "replying", "to", "your", "other", "tweet)Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["(", "sorry", "reply", "to", "your", "other", "tweet)their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c27-4 / sorry-01
       :ARG1 (c27-9 / i)
       :ARG2 (c27-5 / reply-01
                    :ARG0 c27-9
                    :ARG1 (c27-2 / you)
                    :ARG2 (c27-10 / tweet-01
                                  :ARG0 c27-2
                                  :mod (c27-0 / other)))
       :topic (c27-1 / open-01
                     :ARG1 (c27-7 / product
                                  :name (c27-3 / name
                                               :op1 "DMS")
                                  :poss (c27-11 / they))
                     :time (c27-6 / next-to
                                  :op1 (c27-8 / name
                                              :poss c27-11))))

# ::snt responded and said it was acceptable
# ::tokens ["responded", "and", "said", "it", "was", "acceptable"]
# ::lemmas ["respond", "and", "say", "it", "be", "acceptable"]
(c28-4 / and
       :op1 (c28-1 / respond-01)
       :op2 (c28-0 / say-01
                   :ARG1 (c28-2 / possible-01
                                :ARG1 (c28-3 / accept-01
                                             :ARG1 (c28-5 / it)))))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c29-0 / open-01
       :ARG1 (c29-2 / ship
                    :name (c29-1 / name
                                 :op1 "DMS")
                    :poss (c29-4 / they))
       :time (c29-3 / next-to
                    :op1 c29-1
                    :poss c29-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c30-0 / open-01
       :ARG1 (c30-2 / ship
                    :name (c30-1 / name
                                 :op1 "DMS")
                    :poss (c30-4 / they))
       :time (c30-3 / next-to
                    :op1 c30-1
                    :poss c30-4))

# ::snt Their DMS are open when there is a next to their name.
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name", "."]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name", "."]
(c31-0 / open-01
       :ARG1 (c31-2 / ship
                    :name (c31-1 / name
                                 :op1 "DMS")
                    :poss (c31-4 / they))
       :time (c31-3 / next-to
                    :op1 c31-1
                    :poss c31-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c32-0 / open-01
       :ARG1 (c32-2 / ship
                    :name (c32-1 / name
                                 :op1 "DMS")
                    :poss (c32-4 / they))
       :time (c32-3 / next-to
                    :op1 c32-1
                    :poss c32-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c33-0 / open-01
       :ARG1 (c33-2 / ship
                    :name (c33-1 / name
                                 :op1 "DMS")
                    :poss (c33-4 / they))
       :time (c33-3 / next-to
                    :op1 c33-1
                    :poss c33-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c34-0 / open-01
       :ARG1 (c34-2 / ship
                    :name (c34-1 / name
                                 :op1 "DMS")
                    :poss (c34-4 / they))
       :time (c34-3 / next-to
                    :op1 c34-1
                    :poss c34-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c35-0 / open-01
       :ARG1 (c35-2 / ship
                    :name (c35-1 / name
                                 :op1 "DMS")
                    :poss (c35-4 / they))
       :time (c35-3 / next-to
                    :op1 c35-1
                    :poss c35-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c36-0 / open-01
       :ARG1 (c36-2 / ship
                    :name (c36-1 / name
                                 :op1 "DMS")
                    :poss (c36-4 / they))
       :time (c36-3 / next-to
                    :op1 c36-1
                    :poss c36-4))

# ::snt I'm not completely sure about this, but I think it's a piece of clothing/an item that a person sells and they have something theirs on the clothes/items
# ::tokens ["I", "'m", "not", "completely", "sure", "about", "this", ",", "but", "I", "think", "it", "'s", "a", "piece", "of", "clothing", "/", "an", "item", "that", "a", "person", "sells", "and", "they", "have", "something", "theirs", "on", "the", "clothes", "/", "items"]
# ::lemmas ["i", "be", "not", "completely", "sure", "about", "this", ",", "but", "i", "think", "it", "be", "a", "piece", "of", "clothing", "/", "an", "item", "that", "a", "person", "sell", "and", "they", "have", "something", "theirs", "on", "the", "clothe", "/", "item"]
(c37-13 / contrast-01
        :ARG1 (c37-1 / sure-02
                     :ARG0 (c37-18 / i)
                     :ARG1 (c37-9 / this)
                     :ARG1-of (c37-11 / complete-02)
                     :polarity -)
        :ARG2 (c37-14 / think-01
                      :ARG0 c37-18
                      :ARG1 (c37-8 / and
                                   :op1 (c37-17 / piece
                                                :domain (c37-6 / it)
                                                :mod (c37-5 / slash
                                                            :op1 (c37-3 / clothing)
                                                            :op2 (c37-10 / item))
                                                :ARG1-of (c37-4 / sell-01
                                                                :ARG0 (c37-12 / person)))
                                   :op2 (c37-7 / have-03
                                               :ARG0 c37-12
                                               :ARG1 (c37-16 / something
                                                             :poss c37-12
                                                             :location (c37-2 / slash
                                                                              :op1 (c37-15 / clothes
                                                                                           :op2 (c37-0 / item))))))))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c38-0 / open-01
       :ARG1 (c38-2 / ship
                    :name (c38-1 / name
                                 :op1 "DMS")
                    :poss (c38-4 / they))
       :time (c38-3 / next-to
                    :op1 c38-1
                    :poss c38-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c39-0 / open-01
       :ARG1 (c39-2 / ship
                    :name (c39-1 / name
                                 :op1 "DMS")
                    :poss (c39-4 / they))
       :time (c39-3 / next-to
                    :op1 c39-1
                    :poss c39-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c40-0 / open-01
       :ARG1 (c40-2 / ship
                    :name (c40-1 / name
                                 :op1 "DMS")
                    :poss (c40-4 / they))
       :time (c40-3 / next-to
                    :op1 c40-1
                    :poss c40-4))

# ::snt Their DMS are open when there is a next to their name
# ::tokens ["Their", "DMS", "are", "open", "when", "there", "is", "a", "next", "to", "their", "name"]
# ::lemmas ["their", "dms", "be", "open", "when", "there", "be", "a", "next", "to", "their", "name"]
(c41-0 / open-01
       :ARG1 (c41-2 / ship
                    :name (c41-1 / name
                                 :op1 "DMS")
                    :poss (c41-4 / they))
       :time (c41-3 / next-to
                    :op1 c41-1
                    :poss c41-4))

# ::snt It would scam too much people because they are basically famous
# ::tokens ["It", "would", "scam", "too", "much", "people", "because", "they", "are", "basically", "famous"]
# ::lemmas ["it", "would", "scam", "too", "much", "people", "because", "they", "be", "basically", "famous"]
(c42-6 / cause-01
       :ARG0 (c42-0 / fame-01
                    :ARG1 (c42-8 / they)
                    :mod (c42-1 / basic))
       :ARG1 (c42-3 / scam-01
                    :ARG0 (c42-7 / it)
                    :ARG1 (c42-5 / person
                                 :ARG1-of (c42-4 / have-quant-91
                                                 :ARG2 (c42-2 / much)
                                                 :ARG3 (c42-9 / too)))))

# ::snt When there is a in their name
# ::tokens ["When", "there", "is", "a", "in", "their", "name"]
# ::lemmas ["when", "there", "be", "a", "in", "their", "name"]
(c43-1 / be-temporally-at-91
       :ARG2 (c43-3 / event
                    :manner (c43-2 / name-01
                                   :ARG1 (c43-0 / they))))

# ::snt F for spelling, they open their DMS when there's a next to their name, not a
# ::tokens ["F", "for", "spelling", ",", "they", "open", "their", "DMS", "when", "there", "'s", "a", "next", "to", "their", "name", ",", "not", "a"]
# ::lemmas ["f", "for", "spelling", ",", "they", "open", "their", "DMS", "when", "there", "be", "a", "next", "to", "their", "name", ",", "not", "a"]
(c44-0 / open-01
       :ARG0 (c44-9 / they)
       :ARG1 (c44-5 / product
                    :name (c44-2 / name
                                 :op1 "DMS")
                    :poss c44-9)
       :time (c44-8 / instead-of-91
                    :ARG1 (c44-4 / next-to
                                 :op1 (c44-6 / name
                                             :poss c44-9))
                    :ARG2 (c44-3 / string-entity
                                 :value "A"))
       :ARG1-of (c44-7 / cause-01
                       :ARG0 (c44-1 / spell-01)))

# ::snt I think you are
# ::tokens ["I", "think", "you", "are"]
# ::lemmas ["i", "think", "you", "be"]
(c45-3 / think-01
       :ARG0 (c45-2 / i)
       :ARG1 (c45-0 / have-mod-91
                    :ARG1 (c45-1 / you)))

# ::snt you are so kind... thank you
# ::tokens ["you", "are", "so", "kind", "...", "thank", "you"]
# ::lemmas ["you", "be", "so", "kind", "...", "thank", "you"]
(c46-2 / and
       :op1 (c46-3 / kind-01
                   :ARG0 (c46-0 / you)
                   :degree (c46-1 / so))
       :op2 (c46-5 / thank-01
                   :ARG0 (c46-4 / i)
                   :ARG1 c46-0))

# ::snt What counts as merch?
# ::tokens ["What", "counts", "as", "merch", "?"]
# ::lemmas ["what", "count", "as", "merch", "?"]
(c47-0 / count-04
       :ARG1 (c47-2 / amr-unknown)
       :ARG2 (c47-1 / merchandise))

# ::snt hello, i have a quick question: are we allowed to use hashtags in the posts?
# ::tokens ["hello", ",", "i", "have", "a", "quick", "question", ":", "are", "we", "allowed", "to", "use", "hashtags", "in", "the", "posts", "?"]
# ::lemmas ["hello", ",", "i", "have", "a", "quick", "question", ":", "be", "we", "allow", "to", "use", "hashtag", "in", "the", "post", "?"]
(c48-0 / multi-sentence
       :snt1 (c48-3 / hello)
       :snt2 (c48-7 / have-03
                    :ARG0 (c48-8 / i)
                    :ARG1 (c48-9 / question-01
                                 :ARG0 c48-8
                                 :ARG1 (c48-1 / allow-01
                                              :ARG1 (c48-11 / use-01
                                                            :ARG0 (c48-5 / we)
                                                            :ARG1 (c48-2 / hashtag)
                                                            :location (c48-4 / post-01))
                                              :polarity (c48-10 / amr-unknown))
                                 :ARG1-of (c48-6 / quick-02))))

# ::snt I want to send you a message but I can't xmdmg
# ::tokens ["I", "want", "to", "send", "you", "a", "message", "but", "I", "ca", "n't", "xmdmg"]
# ::lemmas ["i", "want", "to", "send", "you", "a", "message", "but", "i", "can", "not", "xmdmg"]
(c49-5 / want-01
       :ARG0 (c49-7 / i)
       :ARG1 (c49-2 / send-01
                    :ARG0 c49-7
                    :ARG1 (c49-1 / message-01)
                    :ARG2 (c49-0 / you))
       :ARG1-of (c49-6 / contrast-01
                       :ARG2 (c49-4 / possible-01
                                    :ARG1 c49-2
                                    :polarity -))
       :mod (c49-3 / emoticon
                   :value "xmdmg"))

# ::snt That is like extremely sweet
# ::tokens ["That", "is", "like", "extremely", "sweet"]
# ::lemmas ["that", "be", "like", "extremely", "sweet"]
(c50-1 / resemble-01
       :ARG1 (c50-3 / that)
       :ARG2 (c50-0 / sweet-04
                    :degree (c50-2 / extreme)))
