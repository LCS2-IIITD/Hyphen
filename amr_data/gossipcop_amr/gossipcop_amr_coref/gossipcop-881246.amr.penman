# ::snt You can comment on my opinion I don't care. I just say that it doesn't matter that I'm A z Stan. But I can see what kind of stand both are
# ::tokens ["You", "can", "comment", "on", "my", "opinion", "I", "do", "n't", "care", ".", "I", "just", "say", "that", "it", "does", "n't", "matter", "that", "I", "'m", "A", "z", "Stan", ".", "But", "I", "can", "see", "what", "kind", "of", "stand", "both", "are"]
# ::lemmas ["you", "can", "comment", "on", "my", "opinion", "i", "do", "not", "care", ".", "i", "just", "say", "that", "it", "do", "not", "matter", "that", "i", "be", "a", "z", "Stan", ".", "but", "i", "can", "see", "what", "kind", "of", "stand", "both", "be"]
(c1-15 / multi-sentence
       :snt1 (c1-19 / possible-01
                    :ARG1 (c1-17 / comment-01
                                 :ARG0 (c1-6 / you)
                                 :ARG3 (c1-11 / thing
                                              :ARG1-of (c1-4 / opine-01
                                                             :ARG0 (c1-20 / i)))
                                 :ARG1-of (c1-13 / care-01
                                                 :ARG0 c1-20
                                                 :polarity -)))
       :snt2 (c1-0 / say-01
                   :ARG0 (c1-7 / i)
                   :ARG1 (c1-8 / matter-01
                               :ARG1 c1-8
                               :ARG1 (c1-16 / person
                                            :name (c1-18 / name
                                                         :op1 "A"
                                                         :op2 "Z"
                                                         :op3 "Stan")
                                            :domain c1-7)
                               :polarity -))
       :mod (c1-10 / just)
       :snt3 (c1-1 / contrast-01
                   :ARG2 (c1-2 / possible-01
                               :ARG1 (c1-5 / see-01
                                           :ARG0 (c1-12 / i)
                                           :ARG1 (c1-3 / stand
                                                       :mod (c1-9 / kind)
                                                       :mod (c1-14 / both))))))

# ::snt I'll comment if I want to. That's what Twitter is for.
# ::tokens ["I", "'ll", "comment", "if", "I", "want", "to", ".", "That", "'s", "what", "Twitter", "is", "for", "."]
# ::lemmas ["i", "'ll", "comment", "if", "i", "want", "to", ".", "that", "be", "what", "Twitter", "be", "for", "."]
(c2-0 / multi-sentence
      :snt1 (c2-4 / comment-01
                  :ARG0 (c2-6 / i)
                  :condition (c2-5 / want-01
                                   :ARG0 c2-6
                                   :ARG1 c2-4))
      :snt2 (c2-2 / have-purpose-91
                  :ARG1 (c2-3 / publication
                              :name (c2-1 / name
                                          :op1 "Twitter"))
                  :ARG2 (c2-7 / that)))

# ::snt Its my opinion. I can say whatever I want. If u don't like it, just don't read it
# ::tokens ["Its", "my", "opinion", ".", "I", "can", "say", "whatever", "I", "want", ".", "If", "u", "do", "n't", "like", "it", ",", "just", "do", "n't", "read", "it"]
# ::lemmas ["its", "my", "opinion", ".", "i", "can", "say", "whatever", "i", "want", ".", "if", "u", "do", "not", "like", "it", ",", "just", "do", "not", "read", "it"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / opine-01
                  :ARG0 (c3-10 / i)
                  :ARG1 (c3-4 / it))
      :snt2 (c3-6 / possible-01
                  :ARG1 (c3-3 / say-01
                              :ARG0 c3-10
                              :ARG1 (c3-8 / whatever
                                          :ARG1-of (c3-7 / want-01
                                                         :ARG0 c3-10))))
      :snt3 (c3-5 / read-01
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-12 / it)
                  :mod (c3-9 / just)
                  :condition (c3-11 / dislike-01
                                    :ARG0 c3-1
                                    :ARG1 c3-12)
                  :mode imperative
                  :polarity -))

# ::snt Just bc I'm a Z Stan doesn't mean I can't check out LM music, especially when I love CNCO. I love the original song
# ::tokens ["Just", "bc", "I", "'m", "a", "Z", "Stan", "does", "n't", "mean", "I", "ca", "n't", "check", "out", "LM", "music", ",", "especially", "when", "I", "love", "CNCO", ".", "I", "love", "the", "original", "song"]
# ::lemmas ["just", "bc", "i", "be", "a", "Z", "Stan", "do", "not", "mean", "i", "can", "not", "check", "out", "LM", "music", ",", "especially", "when", "i", "love", "CNCO", ".", "i", "love", "the", "original", "song"]
(c4-10 / multi-sentence
       :snt1 (c4-14 / cause-01
                    :ARG0 (c4-18 / person
                                 :mod (c4-4 / variable
                                            :name (c4-16 / name
                                                         :op1 "Z"))
                                 :domain (c4-20 / i))
                    :ARG1 (c4-5 / mean-01
                                :ARG1 (c4-11 / possible-01
                                             :ARG1 (c4-8 / check-out-05
                                                         :ARG0 c4-20
                                                         :ARG1 (c4-15 / music
                                                                      :mod (c4-13 / music
                                                                                  :name (c4-12 / name
                                                                                               :op1 "LM"))))
                                             :time (c4-1 / love-01
                                                         :ARG0 c4-20
                                                         :ARG1 (c4-2 / organization
                                                                     :name (c4-19 / name
                                                                                  :op1 "CNCO"))
                                                         :mod (c4-17 / especially))
                                             :polarity -)
                                :mod (c4-6 / just)
                                :polarity -))
       :snt2 (c4-7 / love-01
                   :ARG0 (c4-3 / i)
                   :ARG1 (c4-0 / song
                               :mod (c4-9 / original))))

# ::snt Jesy So hott
# ::tokens ["Jesy", "So", "hott"]
# ::lemmas ["Jesy", "so", "hott"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "Jesy"
                  :op2 "So"
                  :op3 "Hott"))

# ::snt Why did they only show Jesy? There are girls..happy they're getting the promo tho!
# ::tokens ["Why", "did", "they", "only", "show", "Jesy", "?", "There", "are", "girls", "..", "happy", "they", "'re", "getting", "the", "promo", "tho", "!"]
# ::lemmas ["why", "do", "they", "only", "show", "Jesy", "?", "there", "be", "girl", "..", "happy", "they", "be", "get", "the", "promo", "tho", "!"]
(c6-1 / multi-sentence
      :snt1 (c6-8 / cause-01
                  :ARG0 (c6-5 / amr-unknown)
                  :ARG1 (c6-3 / show-01
                              :ARG0 (c6-11 / they)
                              :ARG2 (c6-7 / person
                                          :name (c6-2 / name
                                                      :op1 "Jesy"))
                              :mod (c6-0 / only)))
      :snt2 (c6-12 / girl
                   :ARG0-of (c6-6 / happy-01
                                  :ARG1 (c6-10 / get-01
                                               :ARG0 (c6-13 / they)
                                               :ARG1 (c6-4 / promo))
                                  :ARG1-of (c6-9 / have-concession-91))))

# ::snt lmk where they've been
# ::tokens ["lmk", "where", "they", "'ve", "been"]
# ::lemmas ["lmk", "where", "they", "'ve", "be"]
(c8-1 / be-located-at-91
      :ARG1 (c8-3 / they)
      :ARG2 (c8-0 / city
                  :name (c8-2 / name
                              :op1 "mk")))

# ::snt Ayyyy !!! Glad y'all like it!!
# ::tokens ["Ayyyy", "!", "!", "!", "Glad", "y'", "all", "like", "it", "!", "!"]
# ::lemmas ["Ayyyy", "!", "!", "!", "Glad", "you", "all", "like", "it", "!", "!"]
(c9-4 / glad-02
      :ARG0 (c9-1 / like-01
                  :ARG0 (c9-0 / you
                              :mod (c9-3 / all))
                  :ARG1 (c9-2 / it))
      :ARG1 c9-0
      :mode expressive)

# ::snt This is so awkward. Who thought this remix was a good idea?
# ::tokens ["This", "is", "so", "awkward", ".", "Who", "thought", "this", "remix", "was", "a", "good", "idea", "?"]
# ::lemmas ["this", "be", "so", "awkward", ".", "who", "think", "this", "remix", "be", "a", "good", "idea", "?"]
(c10-0 / multi-sentence
       :snt1 (c10-3 / awkward
                    :domain (c10-6 / this)
                    :degree (c10-2 / so))
       :snt2 (c10-9 / think-01
                    :ARG0 (c10-5 / amr-unknown)
                    :ARG1 (c10-7 / idea
                                 :ARG1-of (c10-1 / good-02)
                                 :domain (c10-4 / remix-01
                                                :mod (c10-8 / this)))))

# ::snt Hey yo ...is that you?
# ::tokens ["Hey", "yo", "...", "is", "that", "you", "?"]
# ::lemmas ["hey", "yo", "...", "be", "that", "you", "?"]
(c11-1 / ask-01
       :ARG1 (c11-3 / truth-value
                    :polarity-of (c11-0 / you
                                        :domain (c11-5 / that)))
       :ARG2 (c11-4 / yo)
       :mod (c11-2 / hey
                   :mode expressive))
