# ::snt That has to be the dumbest shit i have ever seen.........
# ::tokens ["That", "has", "to", "be", "the", "dumbest", "shit", "i", "have", "ever", "seen", "........."]
# ::lemmas ["that", "have", "to", "be", "the", "dumb", "shit", "i", "have", "ever", "see", "........."]
(c1-6 / infer-01
      :ARG1 (c1-5 / have-degree-91
                  :ARG1 (c1-2 / shit
                              :domain (c1-7 / that))
                  :ARG2 (c1-8 / dumb)
                  :ARG3 (c1-1 / most)
                  :ARG5 (c1-0 / see-01
                              :ARG0 (c1-3 / i)
                              :time (c1-4 / ever))))

# ::snt No
# ::tokens ["No"]
# ::lemmas ["no"]
(c2-0 / no)

# ::snt I was gonna say! This was from last summer, maybe even earlier
# ::tokens ["I", "was", "gon", "na", "say", "!", "This", "was", "from", "last", "summer", ",", "maybe", "even", "earlier"]
# ::lemmas ["i", "be", "going", "to", "say", "!", "this", "be", "from", "last", "summer", ",", "maybe", "even", "early"]
(c4-3 / multi-sentence
      :snt1 (c4-4 / say-01
                  :ARG0 (c4-9 / i))
      :snt2 (c4-1 / be-temporally-at-91
                  :ARG1 (c4-10 / this)
                  :ARG2 (c4-11 / date-entity
                               :season (c4-0 / summer)
                               :mod (c4-2 / year
                                          :mod (c4-7 / last)))
                  :ARG1-of (c4-8 / possible-01
                                 :time (c4-6 / before
                                             :op1 c4-11
                                             :mod (c4-5 / even)))))

# ::snt Bagus sumpahh, pertama center langsung sukakkkkk
# ::tokens ["Bagus", "sumpahh", ",", "pertama", "center", "langsung", "sukakkkkk"]
# ::lemmas ["bagus", "sumpahh", ",", "pertama", "center", "langsung", "sukakkkkk"]
(c5-8 / and
      :op1 (c5-1 / bagus
                 :mod (c5-3 / sumpahh))
      :op2 (c5-7 / center
                 :name (c5-2 / name
                             :op1 " pertama"
                             :op2 "Center"))
      :op3 (c5-5 / laugh-01
                 :ARG0 (c5-6 / person
                             :name (c5-4 / name
                                         :op1 "Langsung"))
                 :mode expressive)
      :op4 (c5-0 / sukakkkkkkk))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c6-1 / laugh-01
      :manner (c6-0 / loud)
      :mode expressive)

# ::snt Scooby whoooooooot.....
# ::tokens ["Scooby", "whoooooooot", "....."]
# ::lemmas ["Scooby", "whoooooooot", "....."]
(c9-0 / whoooooooot
      :mod (c9-2 / person
                 :name (c9-1 / name
                             :op1 "Scooby"))
      :mode expressive)

# ::snt thats a stupid ass song
# ::tokens ["that", "s", "a", "stupid", "ass", "song"]
# ::lemmas ["that", "s", "a", "stupid", "ass", "song"]
(c10-3 / song
       :mod (c10-0 / ass)
       :mod (c10-1 / stupid)
       :domain (c10-2 / that))

# ::snt Get Instant Viral Traffic, More Likes, Shares &amp; CommentsUsing The World's First Visual Recognition Software With Smart Algorithm.
# ::tokens ["Get", "Instant", "Viral", "Traffic", ",", "More", "Likes", ",", "Shares", "&", "amp", ";", "CommentsUsing", "The", "World", "'s", "First", "Visual", "Recognition", "Software", "With", "Smart", "Algorithm", "."]
# ::lemmas ["Get", "Instant", "Viral", "Traffic", ",", "more", "Likes", ",", "Shares", "&", "amp", ";", "CommentsUsing", "The", "World", "'s", "First", "Visual", "Recognition", "Software", "With", "Smart", "Algorithm", "."]
(c11-9 / and
       :op1 (c11-11 / get-01
                    :ARG0 (c11-6 / you)
                    :ARG1 (c11-10 / traffic
                                  :mod (c11-15 / rampant)
                                  :mod (c11-18 / instant))
                    :mode imperative)
       :op2 (c11-8 / and
                   :op1 (c11-1 / like-01
                               :mod (c11-12 / more))
                   :op2 (c11-0 / share-01
                               :mod (c11-7 / more))
                   :op3 (c11-16 / et-cetera))
       :op3 (c11-13 / comment-01)
       :instrument (c11-4 / software
                          :name (c11-14 / name
                                        :op1 "Visual"
                                        :op2 "recognition"
                                        :op3 "Software")
                          :poss (c11-17 / world)
                          :ord (c11-5 / ordinal-entity
                                      :value 1)
                          :instrument-of (c11-2 / recognize-02
                                                :ARG1-of (c11-3 / smart-06))))

# ::snt No, you dont
# ::tokens ["No", ",", "you", "do", "nt"]
# ::lemmas ["no", ",", "you", "do", "not"]
(c14-0 / do-02
       :ARG0 (c14-1 / you)
       :mod (c14-2 / no)
       :polarity -)

# ::snt Scooby doo is definitely still relevant lol
# ::tokens ["Scooby", "doo", "is", "definitely", "still", "relevant", "lol"]
# ::lemmas ["Scooby", "doo", "be", "definitely", "still", "relevant", "lol"]
(c15-2 / relevant-01
       :ARG1 (c15-3 / person
                    :name (c15-0 / name
                                 :op1 "Scooby"
                                 :op2 "Doo"))
       :mod (c15-6 / definite)
       :mod (c15-1 / still)
       :ARG2-of (c15-4 / laugh-01
                       :ARG0 (c15-5 / i)
                       :manner (c15-7 / loud)
                       :mode expressive))

# ::snt La pusieron ayer
# ::tokens ["La", "pusieron", "ayer"]
# ::lemmas ["La", "pusieron", "ayer"]
(c16-0 / pusieron
       :mod (c16-1 / ayer))

# ::snt Hasta que lo bailes tu marita
# ::tokens ["Hasta", "que", "lo", "bailes", "tu", "marita"]
# ::lemmas ["hasta", "que", "lo", "bailes", "tu", "marita"]
(c17-0 / bail-out-02
       :ARG0 (c17-1 / you)
       :ARG1 (c17-3 / amr-unknown)
       :mod (c17-2 / hasta
                   :mode expressive))

# ::snt Love it
# ::tokens ["Love", "it"]
# ::lemmas ["Love", "it"]
(c18-0 / love-01
       :ARG1 (c18-1 / it))

# ::snt You guys exhaust me
# ::tokens ["You", "guys", "exhaust", "me"]
# ::lemmas ["you", "guy", "exhaust", "i"]
(c19-1 / exhaust-01
       :ARG0 (c19-2 / you
                    :mod (c19-0 / guy))
       :ARG1 (c19-3 / i))

# ::snt A dooonde ha llegado esto?!?
# ::tokens ["A", "dooonde", "ha", "llegado", "esto", "?", "!", "?"]
# ::lemmas ["a", "dooonde", "ha", "llegado", "esto", "?", "!", "?"]
(c20-1 / have-03
       :ARG0 (c20-0 / esto)
       :ARG1 (c20-2 / llegado
                    :domain c20-0)
       :polarity (c20-3 / amr-unknown))

# ::snt Jajajaja noooo
# ::tokens ["Jajajaja", "noooo"]
# ::lemmas ["Jajajaja", "noooo"]
(c22-2 / no
       :ARG1-of (c22-3 / say-01
                       :ARG2 (c22-0 / person
                                    :name (c22-1 / name
                                                 :op1 "Jajajaja")))
       :mode expressive)

# ::snt Jajajajajajajaja que est pasando!!!
# ::tokens ["Jajajajajajajaja", "que", "est", "pasando", "!", "!", "!"]
# ::lemmas ["Jajajajajajajaja", "que", "est", "pasando", "!", "!", "!"]
(c23-2 / say-01
       :ARG0 (c23-5 / i)
       :ARG1 (c23-3 / estrange-01
                    :ARG1 (c23-4 / person
                                 :name (c23-0 / name
                                              :op1 "Jajajajajajajajaja"))
                    :ARG2 (c23-1 / pasando))
       :ARG2 c23-4)

# ::snt You made it What a great dance guys
# ::tokens ["You", "made", "it", "What", "a", "great", "dance", "guys"]
# ::lemmas ["you", "make", "it", "what", "a", "great", "dance", "guy"]
(c25-1 / say-01
       :ARG0 (c25-3 / i)
       :ARG1 (c25-0 / make-02
                    :ARG0 (c25-5 / guy)
                    :ARG1 (c25-2 / it)
                    :ARG2 (c25-6 / dance-01
                                 :ARG0 c25-5
                                 :mod (c25-4 / great)))
       :ARG2 c25-5)

# ::snt Learned from u!!!
# ::tokens ["Learned", "from", "u", "!", "!", "!"]
# ::lemmas ["learn", "from", "u", "!", "!", "!"]
(c26-1 / learn-01
       :ARG2 (c26-0 / you))

# ::snt LoL
# ::tokens ["LoL"]
# ::lemmas ["LoL"]
(c27-1 / laugh-01
       :ARG0 (c27-2 / i)
       :manner (c27-0 / loud)
       :mode expressive)

# ::snt theyre so late lol
# ::tokens ["they", "re", "so", "late", "lol"]
# ::lemmas ["they", "re", "so", "late", "lol"]
(c29-1 / late
       :domain (c29-4 / they)
       :degree (c29-0 / so)
       :ARG2-of (c29-5 / laugh-01
                       :ARG0 (c29-3 / i)
                       :manner (c29-2 / loud)
                       :mode expressive))

# ::snt jajajaja
# ::tokens ["jajajaja"]
# ::lemmas ["jajajaja"]
(c30-1 / person
       :name (c30-0 / name
                    :op1 "jajajaja"))

# ::snt Yous a psychic and knew
# ::tokens ["Yous", "a", "psychic", "and", "knew"]
# ::lemmas ["yous", "a", "psychic", "and", "know"]
(c31-3 / and
       :op1 (c31-2 / psychic
                   :domain (c31-1 / you))
       :op2 (c31-0 / know-01
                   :ARG0 c31-1))

# ::snt Whenever i heard this song i get hyped
# ::tokens ["Whenever", "i", "heard", "this", "song", "i", "get", "hyped"]
# ::lemmas ["whenever", "i", "hear", "this", "song", "i", "get", "hype"]
(c34-2 / hype-01
       :ARG1 (c34-4 / i)
       :frequency (c34-1 / rate-entity-91
                         :ARG4 (c34-3 / hear-01
                                      :ARG0 c34-4
                                      :ARG1 (c34-0 / song
                                                   :mod (c34-5 / this)))))

# ::snt LOVE U QUEEN!
# ::tokens ["LOVE", "U", "QUEEN", "!"]
# ::lemmas ["LOVE", "U", "QUEEN", "!"]
(c35-3 / love-01
       :ARG0 (c35-2 / you)
       :ARG1 (c35-0 / person
                    :name (c35-1 / name
                                 :op1 "QUEEN"))
       :mode imperative)

# ::snt Aux
# ::tokens ["Aux"]
# ::lemmas ["aux"]
(c37-1 / person
       :name (c37-0 / name
                    :op1 "Aux"))

# ::snt Hello, Good morning, pliss, I would like to ask you, by chance you will have the phone number of the office or the manager of Jennifer Lopez I require it for a project in Mexico City, thank you very much
# ::tokens ["Hello", ",", "Good", "morning", ",", "pliss", ",", "I", "would", "like", "to", "ask", "you", ",", "by", "chance", "you", "will", "have", "the", "phone", "number", "of", "the", "office", "or", "the", "manager", "of", "Jennifer", "Lopez", "I", "require", "it", "for", "a", "project", "in", "Mexico", "City", ",", "thank", "you", "very", "much"]
# ::lemmas ["hello", ",", "good", "morning", ",", "pliss", ",", "i", "would", "like", "to", "ask", "you", ",", "by", "chance", "you", "will", "have", "the", "phone", "number", "of", "the", "office", "or", "the", "manager", "of", "Jennifer", "Lopez", "i", "require", "it", "for", "a", "project", "in", "Mexico", "City", ",", "thank", "you", "very", "much"]
(c38-15 / multi-sentence
        :snt1 (c38-0 / say-01
                     :ARG0 (c38-25 / i)
                     :ARG1 (c38-10 / and
                                   :op1 (c38-7 / hello)
                                   :op2 (c38-1 / like-02
                                               :ARG0 c38-25
                                               :ARG1 (c38-9 / ask-01
                                                            :ARG0 c38-25
                                                            :ARG1 (c38-21 / number
                                                                          :mod (c38-23 / phone)
                                                                          :poss (c38-4 / or
                                                                                       :op1 (c38-14 / office)
                                                                                       :op2 (c38-16 / person
                                                                                                    :ARG0-of (c38-8 / manage-01
                                                                                                                    :ARG1 (c38-3 / person
                                                                                                                                 :name (c38-17 / name
                                                                                                                                               :op1 "Jennifer"
                                                                                                                                               :op2 "Lopez")))))
                                                                          :ARG2-of (c38-22 / require-01
                                                                                           :ARG0 c38-25
                                                                                           :ARG1 c38-21
                                                                                           :purpose (c38-2 / project
                                                                                                           :location (c38-18 / city
                                                                                                                             :name (c38-24 / name
                                                                                                                                           :op1 "Mexico"
                                                                                                                                           :op2 "City")))))
                                                            :ARG2 (c38-11 / person
                                                                          :name (c38-19 / name
                                                                                        :op1 "pliss"))
                                                            :ARG1-of (c38-13 / chance-02)))))
        :snt2 (c38-12 / thank-01
                      :ARG0 (c38-5 / i)
                      :ARG1 c38-11
                      :mod (c38-20 / much
                                   :degree (c38-6 / very))))

# ::snt That song is annoying
# ::tokens ["That", "song", "is", "annoying"]
# ::lemmas ["that", "song", "be", "annoying"]
(c39-2 / annoy-01
       :ARG0 (c39-0 / song
                    :mod (c39-1 / that)))

# ::snt Jajajajajajaja esq no
# ::tokens ["Jajajajajajaja", "esq", "no"]
# ::lemmas ["Jajajajajajaja", "esq", "no"]
(c40-1 / esq
       :ARG1-of (c40-3 / say-01
                       :ARG2 (c40-2 / person
                                    :name (c40-0 / name
                                                 :op1 "Jajajajajajaja"))))

# ::snt Jajajajaja la cancion del ao
# ::tokens ["Jajajajaja", "la", "cancion", "del", "ao"]
# ::lemmas ["Jajajajaja", "la", "cancion", "del", "ao"]
(c41-1 / possible-01
       :ARG1 (c41-2 / amr-unintelligible
                    :value "Jajajajaja")
       :topic (c41-0 / cancion))
