# ::snt Of course, anything you don't like is fake news, even if the rest of the world disagree with you. Calling everything fake news is like calling someone a childish name in the playground at kindergarten.
# ::tokens ["Of", "course", ",", "anything", "you", "do", "n't", "like", "is", "fake", "news", ",", "even", "if", "the", "rest", "of", "the", "world", "disagree", "with", "you", ".", "Calling", "everything", "fake", "news", "is", "like", "calling", "someone", "a", "childish", "name", "in", "the", "playground", "at", "kindergarten", "."]
# ::lemmas ["of", "course", ",", "anything", "you", "do", "not", "like", "be", "fake", "news", ",", "even", "if", "the", "rest", "of", "the", "world", "disagree", "with", "you", ".", "call", "everything", "fake", "news", "be", "like", "call", "someone", "a", "childish", "name", "in", "the", "playground", "at", "kindergarten", "."]
(c1-9 / multi-sentence
      :snt1 (c1-14 / news
                   :ARG1-of (c1-13 / fake-02)
                   :domain (c1-6 / anything
                                 :ARG1-of (c1-20 / dislike-01
                                                 :ARG0 (c1-4 / you)))
                   :mod (c1-3 / of-course)
                   :concession (c1-16 / even-if
                                      :op1 (c1-12 / disagree-01
                                                  :ARG0 (c1-15 / rest
                                                               :part-of (c1-19 / world))
                                                  :ARG1 c1-4)))
      :snt2 (c1-2 / resemble-01
                  :ARG1 (c1-11 / call-01
                               :ARG1 (c1-7 / everything
                                           :ARG1-of c1-13
                                           :ARG1 (c1-10 / news)))
                  :ARG2 (c1-8 / call-01
                              :ARG1 (c1-0 / someone)
                              :ARG2 (c1-17 / name
                                           :mod (c1-1 / childish))
                              :location (c1-18 / playground
                                               :location (c1-5 / kindergarten)))))

# ::snt Rick you going to prison with TRUMP?
# ::tokens ["Rick", "you", "going", "to", "prison", "with", "TRUMP", "?"]
# ::lemmas ["Rick", "you", "go", "to", "prison", "with", "TRUMP", "?"]
(c2-6 / go-02
      :ARG0 (c2-0 / you)
      :ARG4 (c2-4 / prison)
      :accompanier (c2-2 / person
                         :name (c2-1 / name
                                     :op1 "Trump"))
      :polarity (c2-5 / amr-unknown)
      :ARG1-of (c2-3 / Rick-01))

# ::snt Someone completely dropped the ball, twice! First Wolff, now Woodward. Isn't Kelly supposed to be the "Gatekeeper" on such things?Food for thought.
# ::tokens ["Someone", "completely", "dropped", "the", "ball", ",", "twice", "!", "First", "Wolff", ",", "now", "Woodward", ".", "Is", "n't", "Kelly", "supposed", "to", "be", "the", "\"", "Gatekeeper", "\"", "on", "such", "things?Food", "for", "thought", "."]
# ::lemmas ["someone", "completely", "drop", "the", "ball", ",", "twice", "!", "First", "Wolff", ",", "now", "Woodward", ".", "be", "not", "Kelly", "suppose", "to", "be", "the", "\"", "gatekeeper", "\"", "on", "such", "things?food", "for", "thought", "."]
(c3-10 / multi-sentence
       :snt1 (c3-20 / drop-01
                    :ARG0 (c3-0 / someone)
                    :ARG1 (c3-9 / ball)
                    :ARG1-of (c3-13 / complete-02)
                    :frequency 2)
       :snt2 (c3-7 / and
                   :op1 (c3-18 / person
                               :name (c3-17 / name
                                            :op1 "Wolff")
                               :ord (c3-3 / ordinal-entity
                                          :value 1))
                   :op2 (c3-11 / person
                               :name (c3-12 / name
                                            :op1 "Woodward")
                               :time (c3-19 / now)))
       :snt3 (c3-4 / suppose-02
                   :ARG1 (c3-1 / person
                               :name (c3-14 / name
                                            :op1 "Kelly"))
                   :ARG2 (c3-8 / gatekeeper
                               :topic (c3-6 / thing
                                            :mod (c3-2 / such)))
                   :polarity (c3-5 / amr-unknown)
                   :polarity -)
       :snt4 (c3-16 / food
                    :purpose (c3-15 / think-01)))

# ::snt Keep telling their lies.. all it does is HELP OUR side!
# ::tokens ["Keep", "telling", "their", "lies", "..", "all", "it", "does", "is", "HELP", "OUR", "side", "!"]
# ::lemmas ["keep", "tell", "their", "lie", "..", "all", "it", "do", "be", "HELP", "our", "side", "!"]
(c4-4 / keep-02
      :ARG0 (c4-0 / you)
      :ARG1 (c4-8 / tell-01
                  :ARG0 c4-0
                  :ARG1 (c4-5 / lie-08
                              :ARG0 (c4-10 / they)))
      :ARG0-of (c4-6 / cause-01
                     :ARG1 (c4-3 / help-01
                                 :ARG0 (c4-9 / it)
                                 :ARG2 (c4-1 / side
                                             :poss (c4-7 / we))
                                 :mod (c4-2 / all)))
      :mode imperative)

# ::snt I am so sick of these morons and the vile evil voters who voted for them. Seriously you'd have to be a complete moron or one hell of an evil person to vote for the Democrats these days. Its enough to want to jump off the planet.
# ::tokens ["I", "am", "so", "sick", "of", "these", "morons", "and", "the", "vile", "evil", "voters", "who", "voted", "for", "them", ".", "Seriously", "you", "'d", "have", "to", "be", "a", "complete", "moron", "or", "one", "hell", "of", "an", "evil", "person", "to", "vote", "for", "the", "Democrats", "these", "days", ".", "Its", "enough", "to", "want", "to", "jump", "off", "the", "planet", "."]
# ::lemmas ["i", "be", "so", "sick", "of", "these", "moron", "and", "the", "vile", "evil", "voter", "who", "vote", "for", "they", ".", "seriously", "you", "would", "have", "to", "be", "a", "complete", "moron", "or", "one", "hell", "of", "an", "evil", "person", "to", "vote", "for", "the", "Democrats", "these", "days", ".", "its", "enough", "to", "want", "to", "jump", "off", "the", "planet", "."]
(c5-18 / multi-sentence
       :snt1 (c5-0 / sick-04
                   :ARG0 (c5-14 / and
                                :op1 (c5-10 / moron
                                            :mod (c5-13 / this))
                                :op2 (c5-27 / person
                                            :ARG0-of (c5-9 / vote-01
                                                           :ARG1 (c5-19 / political-party
                                                                        :name (c5-25 / name
                                                                                     :op1 "Democrat")))
                                            :mod (c5-26 / evil)
                                            :ARG0-of (c5-1 / vile-02)))
                   :ARG1 (c5-30 / i)
                   :degree (c5-5 / so))
       :snt2 (c5-6 / obligate-01
                   :ARG1 (c5-7 / you)
                   :ARG2 (c5-17 / or
                                :op1 (c5-24 / moron
                                            :ARG1-of (c5-21 / complete-02))
                                :op2 (c5-3 / person
                                           :mod (c5-15 / evil)
                                           :mod (c5-11 / hell
                                                       :mod (c5-32 / one))))
                   :purpose (c5-16 / vote-01
                                   :ARG0 c5-7
                                   :ARG1 c5-19
                                   :time (c5-31 / day
                                                :mod (c5-22 / this)))
                   :ARG2-of (c5-4 / serious-01))
       :snt3 (c5-29 / have-quant-91
                    :ARG1 (c5-8 / it)
                    :ARG3 (c5-20 / enough)
                    :ARG6 (c5-28 / want-01
                                 :ARG0 c5-7
                                 :ARG1 (c5-12 / jump-03
                                              :ARG0 c5-7
                                              :ARG2 (c5-23 / off
                                                           :op1 (c5-2 / planet))))))

# ::snt Also, amend the Apportionment Act to better reflect the original idea of Congressional representation. HR per people is not effective or truly representative in any way.
# ::tokens ["Also", ",", "amend", "the", "Apportionment", "Act", "to", "better", "reflect", "the", "original", "idea", "of", "Congressional", "representation", ".", "HR", "per", "people", "is", "not", "effective", "or", "truly", "representative", "in", "any", "way", "."]
# ::lemmas ["also", ",", "amend", "the", "Apportionment", "Act", "to", "well", "reflect", "the", "original", "idea", "of", "Congressional", "representation", ".", "hr", "per", "people", "be", "not", "effective", "or", "truly", "representative", "in", "any", "way", "."]
(c6-13 / multi-sentence
       :snt1 (c6-10 / amend-01
                    :ARG1 (c6-1 / law
                                :name (c6-17 / name
                                             :op1 "Apportionment"
                                             :op2 "Act"))
                    :purpose (c6-18 / reflect-01
                                    :ARG1 c6-1
                                    :ARG2 (c6-23 / idea
                                                 :mod (c6-4 / original)
                                                 :topic (c6-3 / represent-01
                                                              :ARG0 (c6-11 / government-organization
                                                                           :name (c6-14 / name
                                                                                        :op1 "Congress"))))
                                    :ARG1-of (c6-5 / have-degree-91
                                                   :ARG2 (c6-2 / good-02
                                                               :ARG1 c6-18)
                                                   :ARG3 (c6-6 / more)))
                    :mod (c6-8 / also))
       :snt2 (c6-12 / or
                    :op1 (c6-19 / effective-04
                                :ARG0 (c6-15 / rate-entity-91
                                             :ARG1 (c6-9 / thing
                                                         :name (c6-20 / name
                                                                      :op1 "HR"))
                                             :ARG2 (c6-21 / person))
                                :polarity -)
                    :op2 (c6-0 / represent-01
                               :ARG0 c6-15
                               :ARG1-of (c6-16 / true-01))
                    :manner (c6-22 / way
                                   :mod (c6-7 / any))))

# ::snt Be sure to read up on the train wreck that was Senatorial appointments in the th century. Talk about crony capitalism! Get money out of politics and the system will heal itself.
# ::tokens ["Be", "sure", "to", "read", "up", "on", "the", "train", "wreck", "that", "was", "Senatorial", "appointments", "in", "the", "th", "century", ".", "Talk", "about", "crony", "capitalism", "!", "Get", "money", "out", "of", "politics", "and", "the", "system", "will", "heal", "itself", "."]
# ::lemmas ["be", "sure", "to", "read", "up", "on", "the", "train", "wreck", "that", "be", "Senatorial", "appointment", "in", "the", "th", "century", ".", "talk", "about", "crony", "capitalism", "!", "get", "money", "out", "of", "politic", "and", "the", "system", "will", "heal", "itself", "."]
(c7-12 / multi-sentence
       :snt1 (c7-18 / ensure-01
                    :ARG0 (c7-3 / you)
                    :ARG1 (c7-17 / read-up-02
                                 :ARG0 c7-3
                                 :ARG1 (c7-20 / wreck-01
                                              :ARG1 (c7-9 / train)
                                              :ARG1-of (c7-4 / mean-01
                                                             :ARG2 (c7-7 / appoint-01
                                                                         :ARG2 (c7-10 / government-organization
                                                                                      :name (c7-16 / name
                                                                                                   :op1 "Senate"))
                                                                         :time (c7-21 / date-entity
                                                                                      :century 1)))))
                    :mode imperative)
       :snt2 (c7-14 / talk-01
                    :ARG1 (c7-13 / capitalism
                                 :mod (c7-11 / crony)))
       :snt3 (c7-6 / and
                   :op1 (c7-1 / get-05
                              :ARG0 (c7-8 / you)
                              :ARG1 (c7-15 / money)
                              :ARG2 (c7-2 / out-06
                                          :ARG1 c7-15
                                          :ARG2 (c7-19 / politics))
                              :mode imperative)
                   :op2 (c7-5 / heal-01
                              :ARG1 (c7-0 / system))))

# ::snt No different than charging the Secret Service to use his golf carts. Or hosting foreign dignitaries at his hotel in DC, and making money off the (highly inflated) room rates. s been in this game a long, long time. When will we the people put an end to it?
# ::tokens ["No", "different", "than", "charging", "the", "Secret", "Service", "to", "use", "his", "golf", "carts", ".", "Or", "hosting", "foreign", "dignitaries", "at", "his", "hotel", "in", "DC", ",", "and", "making", "money", "off", "the", "(", "highly", "inflated", ")", "room", "rates", ".", "s", "been", "in", "this", "game", "a", "long", ",", "long", "time", ".", "When", "will", "we", "the", "people", "put", "an", "end", "to", "it", "?"]
# ::lemmas ["no", "different", "than", "charge", "the", "Secret", "Service", "to", "use", "his", "golf", "cart", ".", "or", "host", "foreign", "dignitary", "at", "his", "hotel", "in", "DC", ",", "and", "make", "money", "off", "the", "(", "highly", "inflate", ")", "room", "rate", ".", "s", "be", "in", "this", "game", "a", "long", ",", "long", "time", ".", "when", "will", "we", "the", "people", "put", "an", "end", "to", "it", "?"]
(c8-16 / multi-sentence
       :snt1 (c8-32 / differ-02
                    :ARG2 (c8-18 / charge-01
                                 :ARG1 (c8-12 / government-organization
                                              :name (c8-25 / name
                                                           :op1 "Secret"
                                                           :op2 "Service"))
                                 :ARG2 (c8-23 / use-01
                                              :ARG0 c8-12
                                              :ARG1 (c8-14 / cart
                                                           :mod (c8-2 / golf)
                                                           :poss (c8-8 / he))))
                    :polarity -)
       :snt2 (c8-5 / or
                   :op1 (c8-30 / host-01
                               :ARG0 (c8-7 / he)
                               :ARG1 (c8-19 / dignitarian
                                            :mod (c8-24 / foreign))
                               :location (c8-21 / hotel
                                                :poss c8-7
                                                :location (c8-1 / city
                                                                :name (c8-17 / name
                                                                             :op1 "DC"))))
                   :op2 (c8-9 / make-05
                              :ARG0 c8-7
                              :ARG1 (c8-22 / money)
                              :ARG3 (c8-26 / rate
                                           :mod (c8-3 / room)
                                           :ARG1-of (c8-31 / inflate-01
                                                           :degree (c8-10 / high-02)))))
       :snt3 (c8-15 / be-located-at-91
                    :ARG1 (c8-29 / we
                                 :mod (c8-28 / person))
                    :ARG2 (c8-4 / game
                                :mod (c8-11 / this))
                    :time (c8-20 / time
                                 :ARG1-of (c8-0 / long-03)))
       :snt4 (c8-27 / end-01
                    :ARG0 (c8-13 / amr-unknown)
                    :ARG1 (c8-6 / it)))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c9-2 / thank-01
      :ARG0 (c9-1 / i)
      :ARG1 (c9-0 / you))

# ::snt Math problem. fridges at each is . It beyond that great lesson and description.
# ::tokens ["Math", "problem", ".", "fridges", "at", "each", "is", ".", "It", "beyond", "that", "great", "lesson", "and", "description", "."]
# ::lemmas ["Math", "problem", ".", "fridge", "at", "each", "be", ".", "it", "beyond", "that", "great", "lesson", "and", "description", "."]
(c10-2 / multi-sentence
       :snt1 (c10-5 / problem
                    :topic (c10-4 / mathematics))
       :snt2 (c10-1 / be-located-at-91
                    :ARG1 (c10-0 / fridge)
                    :ARG2 (c10-3 / each))
       :snt3 (c10-6 / beyond
                    :op1 (c10-9 / and
                                :op1 (c10-7 / lesson
                                            :mod (c10-10 / great))
                                :op2 (c10-11 / describe-01)
                                :mod (c10-8 / that))))

# ::snt Sounds to me like youre advocating a flat tax with no write offs. A revenue neutral version would be somewhere around %. Of course then, left would whine about lack of child tax credits&amp; mortgage deductions. So which do you prefer
# ::tokens ["Sounds", "to", "me", "like", "you", "re", "advocating", "a", "flat", "tax", "with", "no", "write", "offs", ".", "A", "revenue", "neutral", "version", "would", "be", "somewhere", "around", "%", ".", "Of", "course", "then", ",", "left", "would", "whine", "about", "lack", "of", "child", "tax", "credits&amp", ";", "mortgage", "deductions", ".", "So", "which", "do", "you", "prefer"]
# ::lemmas ["sound", "to", "i", "like", "you", "re", "advocate", "a", "flat", "tax", "with", "no", "write", "off", ".", "a", "revenue", "neutral", "version", "would", "be", "somewhere", "around", "%", ".", "of", "course", "then", ",", "leave", "would", "whine", "about", "lack", "of", "child", "tax", "credits&amp", ";", "mortgage", "deduction", ".", "so", "which", "do", "you", "prefer"]
(c11-16 / multi-sentence
        :snt1 (c11-0 / sound-01
                     :ARG1 (c11-12 / advocate-01
                                   :ARG0 (c11-6 / you)
                                   :ARG1 (c11-11 / tax-01
                                                 :ARG1-of (c11-20 / flat-06)
                                                 :ARG1-of (c11-25 / write-off-08
                                                                  :polarity -)))
                     :ARG2 (c11-27 / i))
        :snt2 (c11-7 / version
                     :ARG0-of (c11-21 / neutral-02
                                      :ARG1 (c11-22 / revenue))
                     :mod (c11-4 / somewhere
                                 :op1 (c11-10 / around
                                              :op1 (c11-24 / percentage-entity))))
        :snt3 (c11-2 / whine-01
                     :ARG0 (c11-17 / person
                                   :ARG1-of (c11-1 / leave-17))
                     :ARG1 (c11-14 / lack-01
                                   :ARG1 (c11-9 / and
                                                :op1 (c11-18 / credit-02
                                                             :ARG1 (c11-19 / tax-01
                                                                           :ARG2 (c11-15 / child)))
                                                :op2 (c11-29 / amp)
                                                :op3 (c11-23 / deduct-01
                                                             :ARG1 (c11-8 / mortgage-01))))
                     :mod (c11-5 / of-course)
                     :time (c11-28 / then))
        :snt4 (c11-3 / prefer-01
                     :ARG0 (c11-13 / you)
                     :ARG1 (c11-26 / amr-unknown)))

# ::snt Im sorry you lost me once you said fridges at $200 a pop costs $2,000.
# ::tokens ["I", "m", "sorry", "you", "lost", "me", "once", "you", "said", "fridges", "at", "$", "200", "a", "pop", "costs", "$", "2,000", "."]
# ::lemmas ["i", "m", "sorry", "you", "lose", "i", "once", "you", "say", "fridge", "at", "$", "200", "a", "pop", "cost", "$", "2,000", "."]
(c12-4 / sorry-01
       :ARG1 (c12-11 / i)
       :ARG2 (c12-7 / lose-02
                    :ARG0 (c12-2 / you)
                    :ARG1 c12-11
                    :time (c12-0 / say-01
                                 :ARG0 c12-2
                                 :ARG1 (c12-9 / cost-01
                                              :ARG1 (c12-1 / fridge
                                                           :ARG2 (c12-3 / monetary-quantity
                                                                        :unit (c12-12 / dollar)
                                                                        :ARG1-of (c12-5 / rate-entity-91
                                                                                        :ARG2 (c12-8 / pop))
                                                                        :quant 200)
                                                           :ARG1-of c12-9))
                                 :ARG2 (c12-6 / monetary-quantity
                                              :unit (c12-10 / dollar)
                                              :quant 2000))))

# ::snt I'm actually a little disappointed that it's was just this shady
# ::tokens ["I", "'m", "actually", "a", "little", "disappointed", "that", "it", "'s", "was", "just", "this", "shady"]
# ::lemmas ["i", "be", "actually", "a", "little", "disappointed", "that", "it", "be", "be", "just", "this", "shady"]
(c13-7 / disappoint-01
       :ARG0 (c13-0 / shady
                    :domain (c13-5 / it)
                    :mod (c13-4 / just)
                    :degree (c13-6 / this))
       :ARG1 (c13-1 / i)
       :ARG1-of (c13-2 / actual-02)
       :degree (c13-3 / little))

# ::snt Although even if Trump is % innocent, loopholes and shady deals like this are a cancer on society and should be more strongly addressed (you can bet there are plenty of other rich Dems and Reps who play this shell game too).
# ::tokens ["Although", "even", "if", "Trump", "is", "%", "innocent", ",", "loopholes", "and", "shady", "deals", "like", "this", "are", "a", "cancer", "on", "society", "and", "should", "be", "more", "strongly", "addressed", "(", "you", "can", "bet", "there", "are", "plenty", "of", "other", "rich", "Dems", "and", "Reps", "who", "play", "this", "shell", "game", "too", ")", "."]
# ::lemmas ["although", "even", "if", "Trump", "be", "%", "innocent", ",", "loophole", "and", "shady", "deal", "like", "this", "be", "a", "cancer", "on", "society", "and", "should", "be", "more", "strongly", "address", "(", "you", "can", "bet", "there", "be", "plenty", "of", "other", "rich", "Dems", "and", "Reps", "who", "play", "this", "shell", "game", "too", ")", "."]
(c14-20 / multi-sentence
        :snt1 (c14-10 / have-concession-91
                      :ARG2 (c14-33 / even-if
                                    :op1 (c14-37 / innocent-01
                                                 :ARG1 (c14-34 / person
                                                               :name (c14-30 / name
                                                                             :op1 "Trump"))
                                                 :degree (c14-21 / percentage))))
        :snt2 (c14-15 / and
                      :op1 (c14-25 / cancer
                                   :domain (c14-13 / and
                                                   :op1 (c14-1 / loophole)
                                                   :op2 (c14-39 / deal-01
                                                                :mod (c14-0 / shady)
                                                                :ARG1-of (c14-32 / resemble-01
                                                                                 :ARG2 (c14-14 / this))))
                                   :beneficiary (c14-6 / society))
                      :op2 (c14-4 / recommend-01
                                  :ARG1 (c14-12 / address-02
                                                :ARG1 c14-13
                                                :ARG1-of (c14-5 / strong-02
                                                                :ARG2-of (c14-36 / have-degree-91
                                                                                 :ARG1 c14-12
                                                                                 :ARG3 (c14-11 / more))))))
        :snt3 (c14-3 / possible-01
                     :ARG1 (c14-19 / bet-01
                                   :ARG0 (c14-8 / you)
                                   :ARG2 (c14-2 / play-01
                                                :ARG0 (c14-22 / and
                                                              :op1 (c14-16 / person
                                                                           :ARG0-of (c14-9 / have-org-role-91
                                                                                           :ARG1 (c14-40 / political-party
                                                                                                         :name (c14-23 / name
                                                                                                                       :op1 "Democrat")))
                                                                           :mod (c14-24 / rich))
                                                              :op2 (c14-29 / person
                                                                           :ARG0-of (c14-28 / have-org-role-91
                                                                                            :ARG1 (c14-26 / political-party
                                                                                                          :name (c14-35 / name
                                                                                                                        :op1 "Republican"))))
                                                              :mod (c14-7 / other)
                                                              :quant (c14-17 / plenty))
                                                :ARG1 (c14-18 / game
                                                              :mod (c14-31 / shell)
                                                              :mod (c14-27 / this))
                                                :mod (c14-38 / too)))))

# ::snt Release his tax returns and we'll know for sure.
# ::tokens ["Release", "his", "tax", "returns", "and", "we", "'ll", "know", "for", "sure", "."]
# ::lemmas ["release", "his", "tax", "return", "and", "we", "'ll", "know", "for", "sure", "."]
(c15-2 / release-01
       :ARG0 (c15-0 / you)
       :ARG1 (c15-7 / return-06
                    :ARG0 (c15-3 / he)
                    :ARG1 (c15-6 / tax-01))
       :ARG1-of (c15-4 / know-01
                       :ARG0 (c15-5 / we)
                       :ARG1-of (c15-1 / sure-02
                                       :ARG0 c15-5))
       :mode imperative)

# ::snt president Shyster
# ::tokens ["president", "Shyster"]
# ::lemmas ["president", "Shyster"]
(c16-2 / person
       :name (c16-0 / name
                    :op1 "Shyster")
       :ARG0-of (c16-1 / have-org-role-91
                       :ARG2 (c16-3 / president)))

# ::snt Because years of "conservative" deregulation, tax loopholes, and "let's underfund the IRS" has let criminals get away with murder while the rank-and-file GOP base still gets raked over the coals for not carrying the one.
# ::tokens ["Because", "years", "of", "\"", "conservative", "\"", "deregulation", ",", "tax", "loopholes", ",", "and", "\"", "let", "'s", "underfund", "the", "IRS", "\"", "has", "let", "criminals", "get", "away", "with", "murder", "while", "the", "rank", "-", "and", "-", "file", "GOP", "base", "still", "gets", "raked", "over", "the", "coals", "for", "not", "carrying", "the", "one", "."]
# ::lemmas ["because", "years", "of", "\"", "conservative", "\"", "deregulation", ",", "tax", "loophole", ",", "and", "\"", "let", "us", "underfund", "the", "IRS", "\"", "have", "let", "criminal", "get", "away", "with", "murder", "while", "the", "rank", "-", "and", "-", "file", "GOP", "base", "still", "gets", "rake", "over", "the", "coal", "for", "not", "carry", "the", "one", "."]
(c17-18 / cause-01
        :ARG0 (c17-1 / let-01
                     :ARG0 (c17-10 / and
                                   :op1 (c17-26 / deregulate-01
                                                :mod (c17-13 / conservative))
                                   :op2 (c17-12 / loophole
                                                :mod (c17-9 / tax-01))
                                   :op3 (c17-21 / fund-01
                                                :ARG0 (c17-25 / we)
                                                :ARG1 (c17-11 / government-organization
                                                              :name (c17-22 / name
                                                                            :op1 "IRS"))
                                                :mode imperative)
                                   :duration (c17-15 / multiple
                                                     :op1 (c17-19 / temporal-quantity
                                                                  :unit (c17-7 / year)
                                                                  :quant 1)))
                     :ARG1 (c17-3 / get-away-08
                                  :ARG0 (c17-24 / person
                                                :ARG2-of (c17-2 / criminal-03))
                                  :ARG1 (c17-8 / murder-01
                                               :ARG0 c17-24))
                     :time (c17-23 / rak-00
                                   :ARG0 (c17-20 / coal)
                                   :ARG1 (c17-14 / base
                                                 :mod (c17-16 / political-party
                                                              :name (c17-17 / name
                                                                            :op1 "GOP"))
                                                 :mod (c17-4 / rank-and-file))
                                   :ARG1-of c17-18
                                   :ARG0 (c17-6 / carry-01
                                                :ARG0 c17-14
                                                :ARG1 (c17-5 / one)
                                                :polarity -))
                     :mod (c17-0 / still)))

# ::snt and I am pretty sure he is not the only one. Sad, sad world.
# ::tokens ["and", "I", "am", "pretty", "sure", "he", "is", "not", "the", "only", "one", ".", "Sad", ",", "sad", "world", "."]
# ::lemmas ["and", "i", "be", "pretty", "sure", "he", "be", "not", "the", "only", "one", ".", "sad", ",", "sad", "world", "."]
(c18-3 / multi-sentence
       :snt1 (c18-9 / and
                    :op2 (c18-4 / sure-02
                                :ARG0 (c18-8 / i)
                                :ARG1 (c18-0 / one
                                             :mod (c18-1 / only
                                                         :polarity -)
                                             :domain (c18-5 / he))
                                :degree (c18-6 / pretty)))
       :snt2 (c18-2 / sad-02
                    :ARG1 (c18-7 / world)))

# ::snt *$20000
# ::tokens ["*", "$", "20000"]
# ::lemmas ["*", "$", "20000"]
(c19-1 / monetary-quantity
       :unit (c19-0 / dollar)
       :quant 20000)

# ::snt Justified rage
# ::tokens ["Justified", "rage"]
# ::lemmas ["justified", "rage"]
(c20-0 / rage-02
       :ARG1-of (c20-1 / justify-01))

# ::snt $20,000 but I take your point.
# ::tokens ["$", "20,000", "but", "I", "take", "your", "point", "."]
# ::lemmas ["$", "20,000", "but", "i", "take", "your", "point", "."]
(c21-2 / contrast-01
       :ARG1 (c21-1 / monetary-quantity
                    :unit (c21-5 / dollar)
                    :quant 20000)
       :ARG2 (c21-4 / take-point-09
                    :ARG0 (c21-3 / i)
                    :ARG2 (c21-0 / you)))

# ::snt Yeah I know. Typing too quickly in my rage at this story.
# ::tokens ["Yeah", "I", "know", ".", "Typing", "too", "quickly", "in", "my", "rage", "at", "this", "story", "."]
# ::lemmas ["yeah", "i", "know", ".", "type", "too", "quickly", "in", "my", "rage", "at", "this", "story", "."]
(c22-1 / multi-sentence
       :snt1 (c22-6 / know-01
                    :ARG0 (c22-7 / i)
                    :mod (c22-0 / yeah))
       :snt2 (c22-8 / type-01
                    :ARG0 (c22-3 / i)
                    :ARG1-of (c22-9 / quick-02
                                    :ARG2-of (c22-5 / have-degree-91
                                                    :ARG1 c22-8
                                                    :ARG3 (c22-11 / too)))
                    :time (c22-4 / rage-02
                                 :ARG0 c22-3
                                 :ARG1 (c22-2 / story
                                              :mod (c22-10 / this)))))

# ::snt and
# ::tokens ["and"]
# ::lemmas ["and"]
(c23-0 / and)

# ::snt * $200 is
# ::tokens ["*", "$", "200", "is"]
# ::lemmas ["*", "$", "200", "be"]
(c24-1 / monetary-quantity
       :unit (c24-0 / dollar)
       :quant 200)

# ::snt who were the long line of public housing &amp; tax officials, etc, who were included in his schemes? For every "refrigerator" delivered to the apartments, abt how many went to gov't official's "kitchen reno" projects?There must be an algorithm for figuring out the % of graft
# ::tokens ["who", "were", "the", "long", "line", "of", "public", "housing", "&", "amp", ";", "tax", "officials", ",", "etc", ",", "who", "were", "included", "in", "his", "schemes", "?", "For", "every", "\"", "refrigerator", "\"", "delivered", "to", "the", "apartments", ",", "abt", "how", "many", "went", "to", "gov't", "official", "'s", "\"", "kitchen", "reno", "\"", "projects?There", "must", "be", "an", "algorithm", "for", "figuring", "out", "the", "%", "of", "graft"]
# ::lemmas ["who", "be", "the", "long", "line", "of", "public", "housing", "&", "amp", ";", "tax", "official", ",", "etc", ",", "who", "be", "include", "in", "his", "scheme", "?", "for", "every", "\"", "refrigerator", "\"", "deliver", "to", "the", "apartment", ",", "abt", "how", "many", "go", "to", "gov't", "official", "'s", "\"", "kitchen", "reno", "\"", "projects?there", "must", "be", "an", "algorithm", "for", "figure", "out", "the", "%", "of", "graft"]
(c25-22 / multi-sentence
        :snt1 (c25-15 / and
                      :op1 (c25-1 / line
                                  :ARG1-of (c25-18 / long-03)
                                  :topic (c25-10 / house-01
                                                 :ARG1-of (c25-30 / public-02))
                                  :domain (c25-14 / amr-unknown))
                      :op2 (c25-23 / person
                                   :ARG0-of (c25-32 / have-org-role-91
                                                    :ARG1 (c25-16 / government-organization
                                                                  :ARG0-of (c25-4 / govern-01))
                                                    :ARG2 (c25-7 / official)))
                      :op3 (c25-5 / person
                                  :ARG0-of (c25-9 / have-org-role-91
                                                  :ARG1 (c25-6 / government-organization
                                                               :ARG0-of c25-4))
                                  :ARG2 (c25-21 / official)))
        :op4 (c25-29 / et-cetera)
        :ARG1-of (c25-33 / include-91
                         :ARG2 (c25-0 / scheme-01
                                      :ARG0 (c25-27 / he)))
        :snt2 (c25-13 / amr-unknown
                      :ARG2-of (c25-8 / include-91
                                      :ARG1 (c25-17 / thing
                                                    :ARG0-of (c25-28 / refrigerator-01)
                                                    :ARG1-of (c25-34 / deliver-01
                                                                     :ARG2 (c25-24 / apartment))))
                      :snt3 (c25-31 / amr-unknown
                                    :ARG2-of (c25-19 / go-10
                                                     :ARG1 (c25-25 / thing
                                                                   :quant (c25-26 / amr-unknown))
                                                     :ARG2 (c25-2 / project
                                                                  :mod (c25-11 / kitchen)
                                                                  :poss (c25-20 / person
                                                                                :ARG0-of (c25-12 / have-org-role-91
                                                                                                 :ARG1 (c25-3 / government-organization
                                                                                                              :ARG0-of c25-4))
                                                                                :ARG2 (c25-35 / official)))))))

# ::snt When people talk about a "rigged system" this is what they mean.Donald Trump used tax dodges, sham corporations, and outright fraud to make his money. Nice work, if you can get it. /end
# ::tokens ["When", "people", "talk", "about", "a", "\"", "rigged", "system", "\"", "this", "is", "what", "they", "mean", ".", "Donald", "Trump", "used", "tax", "dodges", ",", "sham", "corporations", ",", "and", "outright", "fraud", "to", "make", "his", "money", ".", "Nice", "work", ",", "if", "you", "can", "get", "it", ".", "/end"]
# ::lemmas ["when", "people", "talk", "about", "a", "\"", "rigged", "system", "\"", "this", "be", "what", "they", "mean", ".", "Donald", "Trump", "use", "tax", "dodge", ",", "sham", "corporation", ",", "and", "outright", "fraud", "to", "make", "his", "money", ".", "nice", "work", ",", "if", "you", "can", "get", "it", ".", "/end"]
(c26-10 / multi-sentence
        :snt1 (c26-6 / mean-01
                     :ARG0 (c26-22 / person)
                     :ARG1 (c26-8 / this)
                     :time (c26-16 / talk-01
                                   :ARG0 (c26-11 / person)
                                   :ARG1 (c26-0 / system
                                                :ARG1-of (c26-20 / rig-01))))
        :snt2 (c26-18 / use-01
                      :ARG0 (c26-2 / person
                                   :name (c26-19 / name
                                                 :op1 "Donald"
                                                 :op2 "Trump"))
                      :ARG1 (c26-7 / and
                                   :op1 (c26-25 / dodge-01
                                                :ARG0 c26-2
                                                :ARG1 (c26-24 / tax-01))
                                   :op2 (c26-14 / corporation
                                                :mod (c26-3 / sham))
                                   :op3 (c26-15 / defraud-01
                                                :mod (c26-4 / outright)))
                      :ARG2 (c26-17 / make-05
                                    :ARG0 c26-2
                                    :ARG1 (c26-13 / money
                                                  :poss c26-2)))
        :snt3 (c26-23 / work-01
                      :ARG1-of (c26-12 / nice-01)
                      :condition (c26-1 / possible-01
                                        :ARG1 (c26-9 / get-01
                                                     :ARG0 (c26-5 / you)
                                                     :ARG1 c26-23)))
        :snt4 (c26-21 / end-01))

# ::snt Step aside, Dodgy Dave. Time for Dodgy Donald.
# ::tokens ["Step", "aside", ",", "Dodgy", "Dave", ".", "Time", "for", "Dodgy", "Donald", "."]
# ::lemmas ["step", "aside", ",", "Dodgy", "Dave", ".", "time", "for", "Dodgy", "Donald", "."]
(c27-1 / multi-sentence
       :snt1 (c27-2 / step-01
                    :ARG0 (c27-5 / person
                                 :name (c27-0 / name
                                              :op1 "Dodogy"
                                              :op2 "Dave"))
                    :ARG2 (c27-7 / aside)
                    :mode imperative)
       :snt2 (c27-6 / time
                    :beneficiary (c27-3 / person
                                        :name (c27-4 / name
                                                     :op1 "Dodogy"
                                                     :op2 "Donald"))))

# ::snt So not only did Donald Trump get to skim money from his father's empire at reduced tax rates, his father then used that skimming scheme to raise rents on his tenants, making even more money which then eventually went to Donald in other similar dodgy ways. /
# ::tokens ["So", "not", "only", "did", "Donald", "Trump", "get", "to", "skim", "money", "from", "his", "father", "'s", "empire", "at", "reduced", "tax", "rates", ",", "his", "father", "then", "used", "that", "skimming", "scheme", "to", "raise", "rents", "on", "his", "tenants", ",", "making", "even", "more", "money", "which", "then", "eventually", "went", "to", "Donald", "in", "other", "similar", "dodgy", "ways", ".", "/"]
# ::lemmas ["so", "not", "only", "do", "Donald", "Trump", "get", "to", "skim", "money", "from", "his", "father", "'s", "empire", "at", "reduce", "tax", "rate", ",", "his", "father", "then", "use", "that", "skim", "scheme", "to", "raise", "rent", "on", "his", "tenant", ",", "make", "even", "more", "money", "which", "then", "eventually", "go", "to", "Donald", "in", "other", "similar", "dodgy", "way", ".", "/"]
(c28-30 / infer-01
        :ARG1 (c28-10 / and
                      :op1 (c28-11 / get-22
                                   :ARG0 (c28-28 / person
                                                 :name (c28-25 / name
                                                               :op1 "Donald"
                                                               :op2 "Trump"))
                                   :ARG1 (c28-1 / skim-02
                                                :ARG0 c28-28
                                                :ARG1 (c28-14 / money)
                                                :ARG2 (c28-27 / empire
                                                              :poss (c28-15 / person
                                                                            :ARG0-of (c28-7 / have-rel-role-91
                                                                                            :ARG1 c28-28
                                                                                            :ARG2 (c28-23 / father))))
                                                :manner (c28-26 / rate
                                                                :mod (c28-9 / tax-01)
                                                                :ARG1-of (c28-3 / reduce-01)))
                                   :mod (c28-5 / only
                                               :polarity -))
                      :op2 (c28-21 / use-01
                                   :ARG0 c28-15
                                   :ARG1 (c28-6 / scheme-01
                                                :ARG1 (c28-4 / skim-02))
                                   :ARG2 (c28-18 / raise-01
                                                 :ARG0 c28-15
                                                 :ARG1 (c28-0 / rent-02
                                                              :ARG0 c28-15))
                                   :time (c28-20 / then)
                                   :ARG0-of (c28-19 / cause-01
                                                    :ARG1 (c28-8 / make-05
                                                                 :ARG0 c28-15
                                                                 :ARG1 (c28-22 / money
                                                                               :quant (c28-16 / more
                                                                                              :mod (c28-12 / even))
                                                                               :ARG1-of (c28-2 / go-10
                                                                                               :ARG2 c28-28
                                                                                               :time (c28-17 / eventual)
                                                                                               :manner (c28-29 / way
                                                                                                               :mod (c28-32 / dodgy)
                                                                                                               :ARG1-of (c28-24 / resemble-01)
                                                                                                               :mod (c28-13 / other))))))
                                   :time (c28-31 / then))))

# ::snt Fred Trump jacked up his rents based on the INFLATED cost of purchases shown on the All County invoices, not the actual cost paid to the supplier. /
# ::tokens ["Fred", "Trump", "jacked", "up", "his", "rents", "based", "on", "the", "INFLATED", "cost", "of", "purchases", "shown", "on", "the", "All", "County", "invoices", ",", "not", "the", "actual", "cost", "paid", "to", "the", "supplier", ".", "/"]
# ::lemmas ["Fred", "Trump", "jack", "up", "his", "rent", "base", "on", "the", "INFLATED", "cost", "of", "purchase", "show", "on", "the", "All", "County", "invoice", ",", "not", "the", "actual", "cost", "pay", "to", "the", "supplier", ".", "/"]
(c29-13 / jack-up-01
        :ARG0 (c29-9 / person
                     :name (c29-3 / name
                                  :op1 "Fred"
                                  :op2 "Trump"))
        :ARG1 (c29-6 / rent
                     :poss c29-9)
        :ARG1-of (c29-2 / base-02
                        :ARG2 (c29-10 / contrast-01
                                      :ARG1 (c29-17 / cost-01
                                                    :ARG1 (c29-4 / purchase-01)
                                                    :ARG1-of (c29-14 / inflate-01)
                                                    :ARG1-of (c29-5 / show-01
                                                                    :ARG2 (c29-15 / thing
                                                                                  :ARG1-of (c29-8 / budget-01
                                                                                                  :ARG0 (c29-12 / county
                                                                                                                :name c29-3
                                                                                                                :op1 "All"
                                                                                                                :op2 "County"))))))
                        :ARG2 (c29-0 / cost-01
                                     :ARG1-of (c29-16 / pay-01
                                                      :ARG2 (c29-11 / person
                                                                    :ARG0-of (c29-1 / supply-01)))
                                     :ARG1-of (c29-7 / actual-02))))

# ::snt One way he could raise rents is if he justified it with major purchases (like say, installing new refrigerators). And the amount he could raise rents was based on the cost of those purchases.Do you see where this is going? /
# ::tokens ["One", "way", "he", "could", "raise", "rents", "is", "if", "he", "justified", "it", "with", "major", "purchases", "(", "like", "say", ",", "installing", "new", "refrigerators", ")", ".", "And", "the", "amount", "he", "could", "raise", "rents", "was", "based", "on", "the", "cost", "of", "those", "purchases", ".", "Do", "you", "see", "where", "this", "is", "going", "?", "/"]
# ::lemmas ["One", "way", "he", "could", "raise", "rent", "be", "if", "he", "justify", "it", "with", "major", "purchase", "(", "like", "say", ",", "instal", "new", "refrigerator", ")", ".", "and", "the", "amount", "he", "could", "raise", "rent", "be", "base", "on", "the", "cost", "of", "those", "purchase", ".", "do", "you", "see", "where", "this", "be", "go", "?", "/"]
(c30-12 / multi-sentence
        :snt1 (c30-22 / way
                      :manner-of (c30-20 / raise-01
                                         :ARG0 (c30-4 / he)
                                         :ARG1 (c30-3 / rent)
                                         :manner (c30-7 / justify-01
                                                        :ARG0 c30-4
                                                        :ARG1 (c30-5 / monetary-quantity
                                                                     :ARG1-of (c30-21 / purchase-01
                                                                                      :ARG0 c30-4
                                                                                      :ARG1-of (c30-18 / major-02)
                                                                                      :example (c30-24 / install-01
                                                                                                       :ARG0 c30-4
                                                                                                       :ARG1 (c30-15 / refrigerator
                                                                                                                     :ARG1-of (c30-19 / new-01))))
                                                                     :ARG2-of c30-7))
                                         :ARG1-of (c30-13 / possible-01))
                      :snt2 (c30-9 / and
                                   :op2 (c30-11 / base-02
                                                :ARG1 (c30-8 / amount
                                                             :ARG1-of (c30-0 / raise-01
                                                                             :ARG0 (c30-23 / he)
                                                                             :ARG1-of (c30-2 / possible-01)))
                                                :ARG2 (c30-14 / monetary-quantity
                                                              :ARG2-of (c30-16 / cost-01
                                                                               :ARG1 (c30-17 / monetary-quantity
                                                                                             :ARG1-of (c30-1 / purchase-01
                                                                                                             :ARG0 c30-23
                                                                                                             :mod (c30-10 / that))))))
                                   :polarity (c30-6 / amr-unknown))
                      :quant 1))

# ::snt But is it ILLEGAL
# ::tokens ["But", "is", "it", "ILLEGAL"]
# ::lemmas ["but", "be", "it", "ILLEGAL"]
(c31-0 / contrast-01
       :ARG2 (c31-1 / legal-02
                    :ARG1 (c31-2 / it)
                    :polarity -))

# ::snt Now here comes the really and truly messed up part. You ready?Many of Fred Trump's apartments were rent-controlled, meaning he couldn't increase the rents without good cause. /
# ::tokens ["Now", "here", "comes", "the", "really", "and", "truly", "messed", "up", "part", ".", "You", "ready?Many", "of", "Fred", "Trump", "'s", "apartments", "were", "rent", "-", "controlled", ",", "meaning", "he", "could", "n't", "increase", "the", "rents", "without", "good", "cause", ".", "/"]
# ::lemmas ["now", "here", "come", "the", "really", "and", "truly", "mess", "up", "part", ".", "you", "ready?many", "of", "Fred", "Trump", "'s", "apartment", "be", "rent", "-", "control", ",", "mean", "he", "could", "not", "increase", "the", "rent", "without", "good", "cause", ".", "/"]
(c32-14 / multi-sentence
        :snt1 (c32-19 / come-01
                      :ARG1 (c32-24 / part
                                    :ARG1-of (c32-6 / mess-up-02
                                                    :ARG1-of (c32-23 / real-04)
                                                    :ARG1-of (c32-11 / true-01)))
                      :time (c32-22 / now)
                      :location (c32-7 / here))
        :snt2 (c32-3 / ready-01
                     :ARG1 (c32-4 / you)
                     :polarity (c32-10 / amr-unknown)
                     :ARG1-of (c32-20 / mean-01
                                      :ARG2 (c32-13 / control-01
                                                    :ARG0 (c32-9 / apartment
                                                                 :quant (c32-17 / many)
                                                                 :ARG1-of (c32-25 / include-91
                                                                                  :ARG2 (c32-8 / apartment
                                                                                               :poss (c32-15 / person
                                                                                                             :name (c32-16 / name
                                                                                                                           :op1 "Fred"
                                                                                                                           :op2 "Trump")))))
                                                    :ARG1 (c32-18 / rent)
                                                    :ARG1-of c32-20
                                                    :ARG2 (c32-2 / possible-01
                                                                 :ARG1 (c32-5 / increase-01
                                                                              :ARG0 c32-15
                                                                              :ARG1 (c32-0 / rent)
                                                                              :ARG1-of (c32-1 / cause-01
                                                                                              :ARG0 (c32-21 / reason
                                                                                                            :ARG1-of (c32-12 / good-02))))
                                                                 :polarity -)))))

# ::snt Hey, like magic, Donald (who is an owner in All County) just earned a cool $1500 in profit for doing literally nothing. He gets to pretend that's ordinary income and not a gift (which would be subject to higher taxes). /
# ::tokens ["Hey", ",", "like", "magic", ",", "Donald", "(", "who", "is", "an", "owner", "in", "All", "County", ")", "just", "earned", "a", "cool", "$", "1500", "in", "profit", "for", "doing", "literally", "nothing", ".", "He", "gets", "to", "pretend", "that", "'s", "ordinary", "income", "and", "not", "a", "gift", "(", "which", "would", "be", "subject", "to", "higher", "taxes", ")", ".", "/"]
# ::lemmas ["hey", ",", "like", "magic", ",", "Donald", "(", "who", "be", "an", "owner", "in", "All", "County", ")", "just", "earn", "a", "cool", "$", "1500", "in", "profit", "for", "do", "literally", "nothing", ".", "he", "get", "to", "pretend", "that", "be", "ordinary", "income", "and", "not", "a", "gift", "(", "which", "would", "be", "subject", "to", "high", "taxis", ")", ".", "/"]
(c33-14 / multi-sentence
        :snt1 (c33-24 / earn-01
                      :ARG0 (c33-25 / person
                                    :name (c33-22 / name
                                                  :op1 "Donald")
                                    :ARG0-of (c33-4 / own-01
                                                    :location (c33-18 / county
                                                                      :name (c33-16 / name
                                                                                    :op1 "All"
                                                                                    :op2 "County"))))
                      :ARG1 (c33-6 / monetary-quantity
                                   :unit (c33-29 / dollar)
                                   :ARG1-of (c33-12 / cool-04)
                                   :ARG1-of (c33-15 / profit-01)
                                   :quant 1500)
                      :ARG3 (c33-19 / do-02
                                    :ARG0 c33-25
                                    :ARG1 (c33-26 / nothing
                                                  :mod (c33-1 / literal)))
                      :mod (c33-8 / just)
                      :ARG1-of (c33-23 / resemble-01
                                       :ARG2 (c33-21 / magic)))
        :snt2 (c33-10 / get-22
                      :ARG0 (c33-7 / he)
                      :ARG1 (c33-3 / pretend-01
                                   :ARG0 c33-7
                                   :ARG1 (c33-9 / and
                                                :op1 (c33-28 / income
                                                             :mod (c33-13 / ordinary)
                                                             :domain (c33-11 / that))
                                                :op2 (c33-2 / gift
                                                            :ARG1-of (c33-0 / subject-01
                                                                            :ARG2 (c33-20 / tax-01
                                                                                          :ARG1-of (c33-27 / have-degree-91
                                                                                                           :ARG2 (c33-5 / high-02
                                                                                                                        :ARG1 c33-20)
                                                                                                           :ARG3 (c33-17 / more))))
                                                            :polarity -)))))

# ::snt So, for example, imagine Fred wants to buy new refrigerators for his apartment building. He negotiates with a supplier to sell him those fridges at $200 a pop ($2000 total). All County pays the $2000, then turns around submits an invoice to Fred for $3500. /
# ::tokens ["So", ",", "for", "example", ",", "imagine", "Fred", "wants", "to", "buy", "new", "refrigerators", "for", "his", "apartment", "building", ".", "He", "negotiates", "with", "a", "supplier", "to", "sell", "him", "those", "fridges", "at", "$", "200", "a", "pop", "(", "$", "2000", "total", ")", ".", "All", "County", "pays", "the", "$", "2000", ",", "then", "turns", "around", "submits", "an", "invoice", "to", "Fred", "for", "$", "3500", ".", "/"]
# ::lemmas ["so", ",", "for", "example", ",", "imagine", "Fred", "want", "to", "buy", "new", "refrigerator", "for", "his", "apartment", "building", ".", "he", "negotiate", "with", "a", "supplier", "to", "sell", "he", "those", "fridge", "at", "$", "200", "a", "pop", "(", "$", "2000", "total", ")", ".", "all", "County", "pay", "the", "$", "2000", ",", "then", "turn", "around", "submit", "an", "invoice", "to", "Fred", "for", "$", "3500", ".", "/"]
(c34-17 / multi-sentence
        :snt1 (c34-37 / imagine-01
                      :ARG0 (c34-8 / you)
                      :ARG1 (c34-36 / want-01
                                    :ARG0 (c34-34 / person
                                                  :name (c34-30 / name
                                                                :op1 "Fred"))
                                    :ARG1 (c34-16 / buy-01
                                                  :ARG0 c34-34
                                                  :ARG1 (c34-31 / refrigerator
                                                                :ARG1-of (c34-20 / new-01))
                                                  :ARG4 (c34-2 / building
                                                               :mod (c34-14 / apartment)
                                                               :poss c34-34)))
                      :ARG0-of (c34-32 / exemplify-01)
                      :mode imperative)
        :snt2 (c34-35 / negotiate-01
                      :ARG0 c34-34
                      :ARG1 (c34-23 / company
                                    :ARG0-of (c34-0 / supply-01))
                      :ARG2 (c34-7 / sell-01
                                   :ARG0 c34-23
                                   :ARG1 (c34-29 / fridge
                                                 :mod (c34-13 / that)
                                                 :ARG1-of (c34-15 / cost-01
                                                                  :ARG2 (c34-10 / monetary-quantity
                                                                                :unit (c34-39 / dollar)
                                                                                :ARG1-of (c34-5 / rate-entity-91
                                                                                                :ARG2 (c34-18 / pop))
                                                                                :quant 200)
                                                                  :ARG1-of (c34-25 / total-01
                                                                                   :ARG2 (c34-27 / monetary-quantity
                                                                                                 :unit (c34-24 / dollar)
                                                                                                 :quant 2000))))))
        :snt3 (c34-12 / and
                      :op1 (c34-4 / pay-01
                                  :ARG0 (c34-3 / county
                                               :mod (c34-11 / all))
                                  :ARG1 (c34-21 / monetary-quantity
                                                :unit (c34-22 / dollar)
                                                :quant 2000))
                      :op2 (c34-38 / turn-01
                                   :ARG1 c34-3
                                   :direction (c34-19 / around)
                                   :time (c34-1 / then))
                      :op3 (c34-6 / submit-01
                                  :ARG0 c34-3
                                  :ARG1 (c34-9 / invoice
                                               :ARG1-of (c34-28 / cost-01
                                                                :ARG2 (c34-26 / monetary-quantity
                                                                              :unit (c34-33 / dollar)
                                                                              :quant 3500))))))

# ::snt Then All County submits an invoice to Fred Trump, marking up the purchases by a huge amount, and Fred essentially reimburses All County for the cost of the purchase plus a nice tidy profit. /
# ::tokens ["Then", "All", "County", "submits", "an", "invoice", "to", "Fred", "Trump", ",", "marking", "up", "the", "purchases", "by", "a", "huge", "amount", ",", "and", "Fred", "essentially", "reimburses", "All", "County", "for", "the", "cost", "of", "the", "purchase", "plus", "a", "nice", "tidy", "profit", ".", "/"]
# ::lemmas ["then", "All", "County", "submit", "an", "invoice", "to", "Fred", "Trump", ",", "mark", "up", "the", "purchase", "by", "a", "huge", "amount", ",", "and", "Fred", "essentially", "reimburse", "All", "County", "for", "the", "cost", "of", "the", "purchase", "plus", "a", "nice", "tidy", "profit", ".", "/"]
(c35-6 / and
       :op1 (c35-0 / submit-01
                   :ARG0 (c35-12 / county
                                 :name (c35-15 / name
                                               :op1 "All"
                                               :op2 "County"))
                   :ARG1 (c35-7 / thing
                                :ARG2-of (c35-21 / invoice-01))
                   :ARG2 (c35-18 / person
                                 :name (c35-11 / name
                                               :op1 "Fred"
                                               :op2 "Trump"))
                   :time (c35-14 / then)
                   :manner (c35-9 / mark-up-03
                                  :ARG0 c35-18
                                  :ARG1 (c35-10 / purchase-01)
                                  :ARG2 (c35-5 / amount
                                               :mod (c35-3 / huge))))
       :op2 (c35-16 / reimburse-01
                    :ARG0 c35-18
                    :name (c35-19 / name
                                  :op1 "Fred"))
       :ARG1 (c35-4 / monetary-quantity
                    :ARG2-of (c35-8 / cost-01
                                    :ARG1 (c35-2 / purchase-01)))
       :ARG2 c35-12
       :mod (c35-17 / essential)
       :op3 (c35-1 / profit-01
                   :ARG0 c35-18
                   :ARG1-of (c35-13 / nice-01)
                   :mod (c35-20 / neat)))

# ::snt So Donald sets up a sham company called All County. The only thing that All Count does is take over the purchasing for Fred Trump's real estate empire. Fred still negotiates the prices, but All Count pays the bills. /
# ::tokens ["So", "Donald", "sets", "up", "a", "sham", "company", "called", "All", "County", ".", "The", "only", "thing", "that", "All", "Count", "does", "is", "take", "over", "the", "purchasing", "for", "Fred", "Trump", "'s", "real", "estate", "empire", ".", "Fred", "still", "negotiates", "the", "prices", ",", "but", "All", "Count", "pays", "the", "bills", ".", "/"]
# ::lemmas ["so", "Donald", "set", "up", "a", "sham", "company", "call", "All", "County", ".", "the", "only", "thing", "that", "all", "Count", "do", "be", "take", "over", "the", "purchasing", "for", "Fred", "Trump", "'s", "real", "estate", "empire", ".", "Fred", "still", "negotiate", "the", "price", ",", "but", "all", "Count", "pay", "the", "bill", ".", "/"]
(c36-12 / multi-sentence
        :snt1 (c36-0 / set-up-03
                     :ARG0 (c36-23 / person
                                   :name (c36-19 / name
                                                 :op1 "Donald"))
                     :ARG1 (c36-15 / company
                                   :name (c36-14 / name
                                                 :op1 "All"
                                                 :op2 "Count")
                                   :mod (c36-5 / sham)))
        :snt2 (c36-9 / take-over-12
                     :ARG0 (c36-10 / company
                                   :name (c36-24 / name
                                                 :op1 "All"
                                                 :op2 "Count"))
                     :ARG1 (c36-13 / purchase-01
                                   :ARG0 c36-10
                                   :ARG2 (c36-22 / empire
                                                 :mod (c36-20 / real-estate)
                                                 :poss (c36-3 / person
                                                              :name (c36-16 / name
                                                                            :op1 "Fred"
                                                                            :op2 "Trump"))))
                     :mod (c36-6 / only))
        :snt3 (c36-2 / contrast-01
                     :ARG1 (c36-25 / negotiate-01
                                   :ARG0 (c36-1 / person
                                                :name (c36-21 / name
                                                              :op1 "Fred"))
                                   :ARG2 (c36-7 / monetary-quantity
                                                :ARG2-of (c36-8 / price-01))
                                   :time (c36-4 / still))
                     :ARG2 (c36-26 / pay-01
                                   :ARG0 (c36-18 / company
                                                 :ARG1 (c36-17 / monetary-quantity
                                                               :ARG1-of (c36-11 / bill-01))))))

# ::snt I agree with you %. It was so obvious and ignorant that I couldn't watch her. It was sickening.
# ::tokens ["I", "agree", "with", "you", "%", ".", "It", "was", "so", "obvious", "and", "ignorant", "that", "I", "could", "n't", "watch", "her", ".", "It", "was", "sickening", "."]
# ::lemmas ["i", "agree", "with", "you", "%", ".", "it", "be", "so", "obvious", "and", "ignorant", "that", "i", "could", "not", "watch", "she", ".", "it", "be", "sicken", "."]
(c37-4 / multi-sentence
       :snt1 (c37-12 / agree-01
                     :ARG0 (c37-11 / i)
                     :ARG2 (c37-3 / you)
                     :degree (c37-9 / percentage-entity))
       :snt2 (c37-13 / and
                     :op1 (c37-0 / obvious-01
                                 :ARG1 (c37-7 / it))
                     :op2 (c37-14 / ignorant-02
                                  :ARG1 c37-7)
                     :ARG2-of (c37-8 / have-degree-91
                                     :ARG1 c37-7
                                     :ARG3 (c37-6 / so)
                                     :ARG6 (c37-5 / possible-01
                                                  :ARG1 (c37-10 / watch-01
                                                                :ARG0 c37-11
                                                                :ARG1 (c37-1 / she))
                                                  :polarity -)))
       :snt3 (c37-15 / sicken-01
                     :ARG0 (c37-2 / it)))

# ::snt Alabama? Did you hear this?
# ::tokens ["Alabama", "?", "Did", "you", "hear", "this", "?"]
# ::lemmas ["Alabama", "?", "do", "you", "hear", "this", "?"]
(c38-2 / multi-sentence
       :snt1 (c38-3 / state
                    :name (c38-1 / name
                                 :op1 "Alabama")
                    :polarity (c38-7 / amr-unknown))
       :snt2 (c38-4 / hear-01
                    :ARG0 (c38-0 / you)
                    :ARG1 (c38-5 / this)
                    :polarity (c38-6 / amr-unknown)))

# ::snt Black kettle, calling the black pot black. And the wheel goes, round and round.
# ::tokens ["Black", "kettle", ",", "calling", "the", "black", "pot", "black", ".", "And", "the", "wheel", "goes", ",", "round", "and", "round", "."]
# ::lemmas ["black", "kettle", ",", "call", "the", "black", "pot", "black", ".", "and", "the", "wheel", "go", ",", "round", "and", "round", "."]
(c39-1 / multi-sentence
       :snt1 (c39-5 / kettle
                    :ARG1-of (c39-0 / black-04))
       :snt2 (c39-6 / call-01
                    :ARG1 (c39-4 / pot
                                 :ARG1-of (c39-3 / black-04))
                    :ARG2 (c39-10 / black-04))
       :snt3 (c39-8 / and
                    :op2 (c39-9 / go-02
                                :ARG0 (c39-7 / wheel)
                                :ARG1 (c39-2 / round-03
                                             :ARG1 c39-7))))

# ::snt Jeff Sessions, those are fighting words. Time to bust out the dueling pistols.
# ::tokens ["Jeff", "Sessions", ",", "those", "are", "fighting", "words", ".", "Time", "to", "bust", "out", "the", "dueling", "pistols", "."]
# ::lemmas ["Jeff", "Sessions", ",", "those", "be", "fight", "word", ".", "time", "to", "bust", "out", "the", "duel", "pistol", "."]
(c40-2 / multi-sentence
       :snt1 (c40-6 / word
                    :ARG0-of (c40-0 / fight-01)
                    :domain (c40-7 / that)
                    :topic (c40-5 / person
                                  :name (c40-3 / name
                                               :op1 "Jeff"
                                               :op2 "Sessions")))
       :snt2 (c40-9 / time
                    :time-of (c40-1 / bust-out-05
                                    :ARG1 (c40-4 / pistol
                                                 :ARG0-of (c40-8 / duel-01)))))

# ::snt Hey this is the trump you voted for
# ::tokens ["Hey", "this", "is", "the", "trump", "you", "voted", "for"]
# ::lemmas ["hey", "this", "be", "the", "trump", "you", "vote", "for"]
(c41-3 / trump-01
       :ARG1-of (c41-1 / vote-01
                       :ARG0 (c41-0 / you))
       :domain (c41-4 / this)
       :mod (c41-2 / hey
                   :mode expressive))

# ::snt IMPEACH DONALD TRUMP !!!
# ::tokens ["IMPEACH", "DONALD", "TRUMP", "!", "!", "!"]
# ::lemmas ["IMPEACH", "DONALD", "TRUMP", "!", "!", "!"]
(c42-3 / achieve-01
       :ARG0 (c42-1 / you)
       :ARG1 (c42-2 / person
                    :name (c42-0 / name
                                 :op1 "Donald"
                                 :op2 "Trump"))
       :mode imperative)

# ::snt The man is so presidential, isnt he? Sooner or later, trump throws everyone under the bus.
# ::tokens ["The", "man", "is", "so", "presidential", ",", "is", "nt", "he", "?", "Sooner", "or", "later", ",", "trump", "throws", "everyone", "under", "the", "bus", "."]
# ::lemmas ["the", "man", "be", "so", "presidential", ",", "be", "not", "he", "?", "Sooner", "or", "later", ",", "trump", "throw", "everyone", "under", "the", "bus", "."]
(c43-0 / multi-sentence
       :snt1 (c43-8 / have-degree-91
                    :ARG1 (c43-6 / man)
                    :ARG2 (c43-7 / president)
                    :ARG3 (c43-2 / so)
                    :ARG1-of (c43-4 / request-confirmation-91))
       :snt2 (c43-9 / throw-under-bus-08
                    :ARG0 (c43-1 / person
                                 :name (c43-3 / name
                                              :op1 " trump"))
                    :ARG1 (c43-5 / everyone)
                    :time (c43-10 / eventual)
                    :degree c43-2))

# ::snt Jon do you set in front of a mirror and try to convince yourself this shit is true? You must be a libtard.
# ::tokens ["Jon", "do", "you", "set", "in", "front", "of", "a", "mirror", "and", "try", "to", "convince", "yourself", "this", "shit", "is", "true", "?", "You", "must", "be", "a", "libtard", "."]
# ::lemmas ["Jon", "do", "you", "set", "in", "front", "of", "a", "mirror", "and", "try", "to", "convince", "yourself", "this", "shit", "be", "true", "?", "you", "must", "be", "a", "libtard", "."]
(c44-2 / multi-sentence
       :snt1 (c44-6 / ask-01
                    :ARG0 (c44-14 / i)
                    :ARG1 (c44-13 / and
                                  :op1 (c44-4 / set-01
                                              :ARG1 (c44-9 / person
                                                           :name (c44-3 / name
                                                                        :op1 "Jon"))
                                              :ARG2 (c44-5 / in-front-of
                                                           :op1 (c44-8 / mirror)))
                                  :op2 (c44-12 / try-01
                                               :ARG0 c44-9
                                               :ARG1 (c44-11 / convince-01
                                                             :ARG0 c44-9
                                                             :ARG1 c44-9
                                                             :ARG2 (c44-17 / true-01
                                                                           :ARG1 (c44-0 / shit
                                                                                        :mod (c44-15 / this))))))
                    :ARG2 c44-9)
       :snt2 (c44-16 / infer-01
                     :ARG1 (c44-7 / retard-01
                                  :ARG1 (c44-1 / you)
                                  :ARG2 (c44-10 / libtard))))

# ::snt And theres your guy Alabama. You launched his run for the Presidency.
# ::tokens ["And", "there", "s", "your", "guy", "Alabama", ".", "You", "launched", "his", "run", "for", "the", "Presidency", "."]
# ::lemmas ["and", "there", "s", "your", "guy", "Alabama", ".", "you", "launch", "his", "run", "for", "the", "Presidency", "."]
(c45-2 / multi-sentence
       :snt1 (c45-7 / and
                    :op2 (c45-8 / guy
                                :mod (c45-3 / state
                                            :name (c45-1 / name
                                                         :op1 "Alabama"))
                                :poss (c45-0 / you)))
       :snt2 (c45-5 / launch-01
                    :ARG0 (c45-9 / you)
                    :ARG1 (c45-4 / run-02
                                 :ARG0 c45-9
                                 :ARG1 (c45-6 / president))))

# ::snt Please retweet
# ::tokens ["Please", "retweet"]
# ::lemmas ["please", "retweet"]
(c46-0 / retweet-01
       :ARG0 (c46-1 / you)
       :mode imperative
       :polite +)

# ::snt .....the best people .....so much winning.
# ::tokens [".....", "the", "best", "people", ".....", "so", "much", "winning", "."]
# ::lemmas [".....", "the", "good", "people", ".....", "so", "much", "win", "."]
(c47-0 / multi-sentence
       :snt1 (c47-3 / person
                    :ARG1-of (c47-4 / have-degree-91
                                    :ARG2 (c47-6 / good-02
                                                 :ARG1 c47-3)
                                    :ARG3 (c47-2 / most)))
       :snt2 (c47-5 / win-01
                    :quant (c47-7 / much
                                  :degree (c47-1 / so))))

# ::snt Dumb New Yorker calls his base dumb...how dumb is that?
# ::tokens ["Dumb", "New", "Yorker", "calls", "his", "base", "dumb", "...", "how", "dumb", "is", "that", "?"]
# ::lemmas ["Dumb", "New", "Yorker", "call", "his", "base", "dumb", "...", "how", "dumb", "be", "that", "?"]
(c48-3 / call-01
       :ARG0 (c48-2 / magazine
                    :name (c48-1 / name
                                 :op1 "New"
                                 :op2 "Yorker")
                    :mod (c48-6 / dumb))
       :ARG1 (c48-0 / base
                    :poss c48-2)
       :ARG2 (c48-4 / dumb)
       :ARG1-of (c48-7 / cause-01
                       :ARG0 (c48-5 / amr-unknown)))

# ::snt He not only hired him, he can fire him in a minute. why whine on-line when you can dump the guy and be done.
# ::tokens ["He", "not", "only", "hired", "him", ",", "he", "can", "fire", "him", "in", "a", "minute", ".", "why", "whine", "on", "-", "line", "when", "you", "can", "dump", "the", "guy", "and", "be", "done", "."]
# ::lemmas ["he", "not", "only", "hire", "he", ",", "he", "can", "fire", "he", "in", "a", "minute", ".", "why", "whine", "on", "-", "line", "when", "you", "can", "dump", "the", "guy", "and", "be", "do", "."]
(c49-12 / multi-sentence
        :snt1 (c49-8 / and
                     :op1 (c49-3 / hire-01
                                 :ARG0 (c49-19 / he)
                                 :ARG1 (c49-2 / he)
                                 :mod (c49-0 / only
                                             :polarity -))
                     :op2 (c49-17 / possible-01
                                  :ARG1 (c49-16 / fire-02
                                                :ARG0 c49-19
                                                :ARG1 c49-2
                                                :time (c49-6 / after
                                                             :op1 c49-3
                                                             :quant (c49-7 / temporal-quantity
                                                                           :unit (c49-4 / minute)
                                                                           :quant 1)))))
        :snt2 (c49-18 / whine-01
                      :ARG0 (c49-1 / you)
                      :medium (c49-10 / online)
                      :ARG1-of (c49-15 / cause-01
                                       :ARG0 (c49-5 / amr-unknown))
                      :condition (c49-13 / possible-01
                                         :ARG1 (c49-14 / and
                                                       :op1 (c49-20 / dump-01
                                                                    :ARG0 c49-1
                                                                    :ARG1 (c49-9 / guy))
                                                       :op2 (c49-11 / be-done-08
                                                                    :ARG0 c49-1)))))

# ::snt Exactly. I feel same way.
# ::tokens ["Exactly", ".", "I", "feel", "same", "way", "."]
# ::lemmas ["exactly", ".", "i", "feel", "same", "way", "."]
(c50-1 / multi-sentence
       :snt1 (c50-3 / exact)
       :snt2 (c50-0 / feel-01
                    :ARG0 (c50-5 / i)
                    :ARG1 (c50-4 / way
                                 :ARG1-of (c50-2 / same-01))))
