# ::snt : Has Chris Martin dumped Jennifer Lawrence for Kate Hudson? hopefully
# ::tokens [":", "Has", "Chris", "Martin", "dumped", "Jennifer", "Lawrence", "for", "Kate", "Hudson", "?", "hopefully"]
# ::lemmas [":", "have", "Chris", "Martin", "dump", "Jennifer", "Lawrence", "for", "Kate", "Hudson", "?", "hopefully"]
(c1-2 / multi-sentence
      :snt1 (c1-9 / dump-01
                  :ARG0 (c1-5 / person
                              :name (c1-0 / name
                                          :op1 "Chris"
                                          :op2 "Martin"))
                  :ARG1 (c1-1 / person
                              :name (c1-4 / name
                                          :op1 "Jennifer"
                                          :op2 "Lawrence"))
                  :ARG2 (c1-8 / person
                              :name (c1-6 / name
                                          :op1 "Kate"
                                          :op2 "Hudson"))
                  :polarity (c1-3 / amr-unknown)
                  :ARG1-of (c1-7 / hope-01
                                 :snt2-of c1-2)))

# ::snt I'm sure I've seen her In a movie or two before. I just can't remember which one lol
# ::tokens ["I", "'m", "sure", "I", "'ve", "seen", "her", "In", "a", "movie", "or", "two", "before", ".", "I", "just", "ca", "n't", "remember", "which", "one", "lol"]
# ::lemmas ["i", "be", "sure", "i", "'ve", "see", "she", "in", "a", "movie", "or", "two", "before", ".", "i", "just", "can", "not", "remember", "which", "one", "lol"]
(c2-4 / multi-sentence
      :snt1 (c2-5 / sure-02
                  :ARG0 (c2-12 / i)
                  :ARG1 (c2-0 / see-01
                              :ARG0 c2-12
                              :ARG1 (c2-14 / she)
                              :location (c2-8 / movie
                                              :quant (c2-1 / or
                                                           :op1 1
                                                           :op2 2))
                              :time (c2-2 / before)))
      :snt2 (c2-9 / possible-01
                  :ARG1 (c2-7 / remember-01
                              :ARG0 (c2-6 / i)
                              :ARG1 (c2-3 / one
                                          :mod c2-3))
                  :polarity -)
      :mod (c2-11 / just)
      :ARG2-of (c2-10 / laugh-01
                      :ARG0 c2-6
                      :manner (c2-13 / loud)
                      :mode expressive))

# ::snt I didn't even know Kate was single til I saw this lol.
# ::tokens ["I", "did", "n't", "even", "know", "Kate", "was", "single", "til", "I", "saw", "this", "lol", "."]
# ::lemmas ["i", "do", "not", "even", "know", "Kate", "be", "single", "til", "i", "see", "this", "lol", "."]
(c3-5 / know-01
      :ARG0 (c3-7 / i)
      :ARG1 (c3-2 / single-03
                  :ARG1 (c3-4 / person
                              :name (c3-1 / name
                                          :op1 "Kate")))
      :mod (c3-3 / even)
      :time (c3-10 / until
                   :op1 (c3-0 / see-01
                              :ARG0 c3-7
                              :ARG1 (c3-8 / this)))
      :ARG2-of (c3-6 / laugh-01
                     :ARG0 c3-7
                     :manner (c3-9 / loud))
      :polarity -)

# ::snt oh please. Let them talk about this. and leave jen alone! Idc if he was with Kate, as long as they stop linking him to jen
# ::tokens ["oh", "please", ".", "Let", "them", "talk", "about", "this", ".", "and", "leave", "jen", "alone", "!", "Idc", "if", "he", "was", "with", "Kate", ",", "as", "long", "as", "they", "stop", "linking", "him", "to", "jen"]
# ::lemmas ["oh", "please", ".", "let", "they", "talk", "about", "this", ".", "and", "leave", "jen", "alone", "!", "idc", "if", "he", "be", "with", "Kate", ",", "as", "long", "as", "they", "stop", "link", "he", "to", "jen"]
(c4-11 / multi-sentence
       :snt1 (c4-2 / let-01
                   :ARG0 (c4-3 / you)
                   :ARG1 (c4-9 / talk-01
                               :ARG0 (c4-14 / they)
                               :ARG1 (c4-18 / this))
                   :mode imperative
                   :polite +)
       :snt2 (c4-10 / leave-14
                    :ARG0 c4-3
                    :ARG1 (c4-8 / alone
                                :domain (c4-16 / person
                                               :name (c4-15 / name
                                                            :op1 "Jen")))
                    :mode imperative
                    :polite +)
       :snt3 (c4-4 / have-condition-91
                   :ARG1 (c4-19 / idiot)
                   :ARG2 (c4-7 / accompany-01
                               :ARG0 (c4-17 / he)
                               :ARG1 (c4-12 / person
                                            :name (c4-13 / name
                                                         :op1 "Kate")))
                   :condition (c4-6 / as-long-as
                                    :op1 (c4-0 / stop-01
                                               :ARG0 (c4-1 / they)
                                               :ARG1 (c4-5 / link-01
                                                           :ARG0 c4-1
                                                           :ARG1 c4-17
                                                           :ARG2 c4-16)))))

# ::snt uhm what
# ::tokens ["uhm", "what"]
# ::lemmas ["uhm", "what"]
(c5-1 / thing
      :mod (c5-0 / umm
                 :mode expressive))

# ::snt They all fuck each other like its normal.
# ::tokens ["They", "all", "fuck", "each", "other", "like", "its", "normal", "."]
# ::lemmas ["you", "all", "fuck", "each", "other", "like", "its", "normal", "."]
(c6-0 / fuck-01
      :ARG0 (c6-3 / they
                  :mod (c6-2 / all)
                  :ARG1-of c6-0)
      :manner (c6-1 / normal-02
                    :ARG1 c6-0))

# ::snt No one dumps my queen, bitches. RT : Has Chris Martin dumped Jennifer Lawrence for Kate Hudson?
# ::tokens ["No", "one", "dumps", "my", "queen", ",", "bitches", ".", "RT", ":", "Has", "Chris", "Martin", "dumped", "Jennifer", "Lawrence", "for", "Kate", "Hudson", "?"]
# ::lemmas ["no", "one", "dump", "my", "queen", ",", "bitch", ".", "RT", ":", "have", "Chris", "Martin", "dump", "Jennifer", "Lawrence", "for", "Kate", "Hudson", "?"]
(c7-3 / multi-sentence
      :snt1 (c7-4 / say-01
                  :ARG0 (c7-8 / publication
                              :name (c7-2 / name
                                          :op1 "RT"))
                  :ARG1 (c7-16 / dump-01
                               :ARG0 (c7-7 / no-one)
                               :ARG1 (c7-14 / queen
                                            :poss (c7-15 / i)))
                  :ARG2 (c7-0 / bitch
                              :domain (c7-1 / you)))
      :snt2 (c7-11 / dump-01
                   :ARG0 (c7-5 / person
                               :name (c7-9 / name
                                           :op1 "Chris"
                                           :op2 "Martin"))
                   :ARG1 (c7-17 / person
                                :name (c7-12 / name
                                             :op1 "Jennifer"
                                             :op2 "Lawrence"))
                   :ARG2 (c7-10 / person
                                :name (c7-13 / name
                                             :op1 "Kate"
                                             :op2 "Hudson"))
                   :polarity (c7-6 / amr-unknown)))

# ::snt : Has Chris Martin dumped Jennifer Lawrence for Kate Hudson? im laughing so hard rn
# ::tokens [":", "Has", "Chris", "Martin", "dumped", "Jennifer", "Lawrence", "for", "Kate", "Hudson", "?", "i", "m", "laughing", "so", "hard", "rn"]
# ::lemmas [":", "have", "Chris", "Martin", "dump", "Jennifer", "Lawrence", "for", "Kate", "Hudson", "?", "i", "m", "laugh", "so", "hard", "rn"]
(c8-2 / multi-sentence
      :snt1 (c8-12 / dump-01
                   :ARG0 (c8-6 / person
                               :name (c8-0 / name
                                           :op1 "Chris"
                                           :op2 "Martin"))
                   :ARG1 (c8-1 / person
                               :name (c8-5 / name
                                           :op1 "Jennifer"
                                           :op2 "Lawrence"))
                   :ARG2 (c8-11 / person
                                :name (c8-7 / name
                                            :op1 "Kate"
                                            :op2 "Hudson"))
                   :polarity (c8-4 / amr-unknown))
      :snt2 (c8-8 / laugh-01
                  :ARG0 (c8-10 / i)
                  :ARG1-of (c8-9 / hard-02
                                 :degree (c8-3 / so))))

# ::snt I thought she was engaged?
# ::tokens ["I", "thought", "she", "was", "engaged", "?"]
# ::lemmas ["i", "think", "she", "be", "engage", "?"]
(c9-2 / think-01
      :polarity (c9-4 / amr-unknown)
      :ARG0 (c9-3 / i)
      :ARG1 (c9-1 / engagement-02
                  :ARG1 (c9-0 / she)))

# ::snt ????
# ::tokens ["?", "?", "?", "?"]
# ::lemmas ["?", "?", "?", "?"]
(c10-0 / amr-empty)

# ::snt If Kurts in that room I'm going in that room
# ::tokens ["If", "Kurts", "in", "that", "room", "I", "'m", "going", "in", "that", "room"]
# ::lemmas ["if", "Kurts", "in", "that", "room", "i", "be", "go", "in", "that", "room"]
(c11-5 / go-02
       :ARG0 (c11-3 / i)
       :ARG4 (c11-1 / room
                    :mod (c11-4 / that))
       :condition (c11-2 / person
                         :name (c11-0 / name
                                      :op1 "Kurts")
                         :location c11-1))

# ::snt Dude, for sure. And you know Kurt is taking control of that party.
# ::tokens ["Dude", ",", "for", "sure", ".", "And", "you", "know", "Kurt", "is", "taking", "control", "of", "that", "party", "."]
# ::lemmas ["dude", ",", "for", "sure", ".", "and", "you", "know", "Kurt", "be", "take", "control", "of", "that", "party", "."]
(c12-0 / multi-sentence
       :snt1 (c12-2 / sure-02
                    :mode expressive)
       :snt2 (c12-8 / and
                    :op2 (c12-4 / know-01
                                :ARG0 (c12-9 / dude)
                                :ARG1 (c12-7 / take-01
                                             :ARG0 (c12-5 / person
                                                          :name (c12-1 / name
                                                                       :op1 "Kurt"))
                                             :ARG1 (c12-6 / control-01
                                                          :ARG0 c12-5
                                                          :ARG1 (c12-3 / party
                                                                       :mod (c12-10 / that)))))))

# ::snt ,funny woman Kate Hudson.
# ::tokens [",", "funny", "woman", "Kate", "Hudson", "."]
# ::lemmas [",", "funny", "woman", "Kate", "Hudson", "."]
(c13-0 / woman
       :name (c13-2 / name
                    :op1 "Kate"
                    :op2 "Hudson")
       :mod (c13-1 / funny))

# ::snt ,we don't care for that woman,no match with Brad Pitt Sir,Angelina mam is perfect woman for him.
# ::tokens [",", "we", "do", "n't", "care", "for", "that", "woman", ",", "no", "match", "with", "Brad", "Pitt", "Sir", ",", "Angelina", "mam", "is", "perfect", "woman", "for", "him", "."]
# ::lemmas [",", "we", "do", "not", "care", "for", "that", "woman", ",", "no", "match", "with", "Brad", "Pitt", "Sir", ",", "Angelina", "mam", "be", "perfect", "woman", "for", "he", "."]
(c14-0 / multi-sentence
       :snt1 (c14-9 / care-01
                    :ARG0 (c14-10 / we)
                    :ARG1 (c14-7 / woman
                                 :mod (c14-11 / that))
                    :polarity -)
       :snt2 (c14-4 / match-03
                    :ARG1 (c14-5 / person
                                 :name (c14-1 / name
                                              :op1 "Brad"
                                              :op2 "Pitt"))
                    :mod (c14-2 / Sir)
                    :polarity -)
       :snt3 (c14-3 / perfect-02
                    :ARG1 (c14-12 / person
                                  :name (c14-6 / name
                                               :op1 "Angelina"
                                               :op2 "Mam"))
                    :ARG2 (c14-8 / he)))

# ::snt : : I havent heard the name Kate Hudson since when dumped her?LMAO!!!
# ::tokens [":", ":", "I", "have", "nt", "heard", "the", "name", "Kate", "Hudson", "since", "when", "dumped", "her?LMAO", "!", "!", "!"]
# ::lemmas [":", ":", "i", "have", "not", "hear", "the", "name", "Kate", "Hudson", "since", "when", "dump", "her?LMAO", "!", "!", "!"]
(c15-2 / hear-01
       :ARG0 (c15-6 / i)
       :ARG1 (c15-0 / name-01
                    :ARG1 (c15-3 / person
                                 :name (c15-4 / name
                                              :op1 "Kate"
                                              :op2 "Hudson")))
       :polarity (c15-7 / amr-unknown)
       :time (c15-1 / since
                    :op1 (c15-8 / dump-01
                                :ARG0 c15-6
                                :ARG1 c15-3))
       :mod (c15-5 / laugh-01
                   :ARG0 c15-6
                   :manner (c15-9 / loud)
                   :mode expressive)
       :polarity -)

# ::snt I've seen it. Can't unsee it.
# ::tokens ["I", "'ve", "seen", "it", ".", "Ca", "n't", "unsee", "it", "."]
# ::lemmas ["i", "'ve", "see", "it", ".", "can", "not", "unsee", "it", "."]
(c16-1 / multi-sentence
       :snt1 (c16-2 / see-01
                    :ARG0 (c16-5 / i)
                    :ARG1 (c16-3 / it))
       :snt2 (c16-4 / possible-01
                    :ARG1 (c16-0 / see-01
                                 :ARG0 c16-5
                                 :ARG1 (c16-6 / it))
                    :polarity -))

# ::snt Um...
# ::tokens ["Um", "..."]
# ::lemmas ["um", "..."]
(c17-0 / um
       :mode expressive)

# ::snt no doubt
# ::tokens ["no", "doubt"]
# ::lemmas ["no", "doubt"]
(c18-0 / doubt-01
       :polarity -)

# ::snt he can do better
# ::tokens ["he", "can", "do", "better"]
# ::lemmas ["he", "can", "do", "well"]
(c19-2 / possible-01
       :ARG1 (c19-5 / do-02
                    :ARG0 (c19-1 / he)
                    :ARG1 (c19-3 / well-09
                                 :ARG2-of (c19-4 / have-degree-91
                                                 :ARG1 c19-5
                                                 :ARG3 (c19-0 / more)))))

# ::snt what the hell
# ::tokens ["what", "the", "hell"]
# ::lemmas ["what", "the", "hell"]
(c20-1 / amr-unknown
       :mod (c20-0 / hell
                   :mode expressive))

# ::snt yes thank god
# ::tokens ["yes", "thank", "god"]
# ::lemmas ["yes", "thank", "god"]
(c21-2 / thank-01
       :ARG1 (c21-1 / person
                    :name (c21-0 / name
                                 :op1 "God")))
