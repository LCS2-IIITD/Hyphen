# ::snt What a liberal hypocrite.
# ::tokens ["What", "a", "liberal", "hypocrite", "."]
# ::lemmas ["what", "a", "liberal", "hypocrite", "."]
(c1-0 / hypocrite
      :degree (c1-2 / so)
      :ARG1-of (c1-1 / liberal-02))

# ::snt Oh but but but is George Clooney all about open borders, &amp; global family. Moving to LA behind a wall I suppose!
# ::tokens ["Oh", "but", "but", "but", "is", "George", "Clooney", "all", "about", "open", "borders", ",", "&", "amp", ";", "global", "family", ".", "Moving", "to", "LA", "behind", "a", "wall", "I", "suppose", "!"]
# ::lemmas ["oh", "but", "but", "but", "be", "George", "Clooney", "all", "about", "open", "border", ",", "&", "amp", ";", "global", "family", ".", "move", "to", "LA", "behind", "a", "wall", "i", "suppose", "!"]
(c2-10 / multi-sentence
       :snt1 (c2-12 / contrast-01
                    :ARG2 (c2-8 / contrast-01
                                :ARG2 (c2-2 / concern-02
                                            :ARG0 (c2-16 / person
                                                         :name (c2-15 / name
                                                                      :op1 "George"
                                                                      :op2 "Clooney"))
                                            :ARG1 (c2-6 / and
                                                        :op1 (c2-9 / border
                                                                   :ARG1-of (c2-3 / open-01))
                                                        :op2 (c2-14 / family
                                                                    :mod (c2-7 / globe)))
                                            :degree (c2-5 / all))))
       :snt2 (c2-4 / move-01
                   :ARG1 (c2-18 / i)
                   :ARG2 (c2-13 / city
                                :name (c2-11 / name
                                             :op1 "LA"))
                   :location (c2-1 / behind
                                   :op1 (c2-17 / wall))
                   :ARG1-of (c2-0 / suppose-01
                                  :ARG0 c2-18)))

# ::snt Remember when he was never getting married? Another lifetime ago....
# ::tokens ["Remember", "when", "he", "was", "never", "getting", "married", "?", "Another", "lifetime", "ago", "...."]
# ::lemmas ["remember", "when", "he", "be", "never", "get", "marry", "?", "another", "lifetime", "ago", "...."]
(c3-2 / multi-sentence
      :snt1 (c3-4 / remember-01
                  :polarity (c3-5 / amr-unknown)
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-11 / time
                               :time-of (c3-7 / marry-01
                                              :ARG1 (c3-8 / he)
                                              :time (c3-6 / ever)
                                              :polarity -)))
      :snt2 (c3-0 / before
                  :op1 (c3-3 / now)
                  :quant (c3-9 / lifetime
                               :mod (c3-10 / another))))

# ::snt EXCLUSIVE! I wonder if he still favors importing terrorists to USA?
# ::tokens ["EXCLUSIVE", "!", "I", "wonder", "if", "he", "still", "favors", "importing", "terrorists", "to", "USA", "?"]
# ::lemmas ["EXCLUSIVE", "!", "i", "wonder", "if", "he", "still", "favor", "import", "terrorist", "to", "USA", "?"]
(c4-1 / multi-sentence
      :snt1 (c4-5 / exclusive-02
                  :mode expressive)
      :snt2 (c4-7 / wonder-01
                  :ARG0 (c4-9 / i)
                  :ARG1 (c4-10 / truth-value
                               :polarity-of (c4-0 / favor-01
                                                  :ARG0 (c4-6 / he)
                                                  :ARG1 (c4-4 / import-01
                                                              :ARG1 (c4-11 / terrorist)
                                                              :ARG2 (c4-8 / country
                                                                          :name (c4-2 / name
                                                                                      :op1 "USA")))
                                                  :mod (c4-3 / still)))))

# ::snt Nothing like the good ol USA, is there George.....!
# ::tokens ["Nothing", "like", "the", "good", "ol", "USA", ",", "is", "there", "George", ".....", "!"]
# ::lemmas ["nothing", "like", "the", "good", "ol", "USA", ",", "be", "there", "George", ".....", "!"]
(c5-2 / say-01
      :ARG0 (c5-8 / i)
      :ARG1 (c5-3 / resemble-01
                  :ARG1 (c5-1 / nothing)
                  :ARG2 (c5-7 / country
                              :name (c5-4 / name
                                          :op1 "USA")
                              :mod (c5-0 / old)
                              :ARG1-of (c5-10 / good-02))
                  :location (c5-9 / there))
      :ARG2 (c5-5 / person
                  :name (c5-6 / name
                              :op1 "George")))

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c6-0 / care-01
      :ARG0 (c6-1 / amr-unknown))

# ::snt Now maybe this pos will become a real citizen &amp; support the constitution. If not make him leave
# ::tokens ["Now", "maybe", "this", "pos", "will", "become", "a", "real", "citizen", "&", "amp", ";", "support", "the", "constitution", ".", "If", "not", "make", "him", "leave"]
# ::lemmas ["now", "maybe", "this", "pos", "will", "become", "a", "real", "citizen", "&", "amp", ";", "support", "the", "constitution", ".", "if", "not", "make", "he", "leave"]
(c7-1 / multi-sentence
      :snt1 (c7-7 / possible-01
                  :ARG1 (c7-13 / and
                               :op1 (c7-0 / become-01
                                          :ARG1 (c7-2 / pos
                                                      :mod (c7-12 / this))
                                          :ARG2 (c7-10 / citizen
                                                       :ARG1-of (c7-5 / real-04)))
                               :op2 (c7-3 / support-01
                                          :ARG0 c7-2
                                          :ARG1 (c7-14 / constitution)))
                  :time (c7-4 / now))
      :snt2 (c7-6 / have-condition-91
                  :ARG2 (c7-8 / make-02
                              :ARG1 (c7-9 / leave-11
                                          :ARG0 (c7-11 / he))
                              :polarity -)))

# ::snt Shouldn't he be moving somewhere more enlightened, like Paris? Sweden? Germany?
# ::tokens ["Should", "n't", "he", "be", "moving", "somewhere", "more", "enlightened", ",", "like", "Paris", "?", "Sweden", "?", "Germany", "?"]
# ::lemmas ["should", "not", "he", "be", "move", "somewhere", "more", "enlighten", ",", "like", "Paris", "?", "Sweden", "?", "Germany", "?"]
(c8-0 / multi-sentence
      :snt1 (c8-3 / recommend-01
                  :ARG1 (c8-5 / move-01
                              :ARG1 (c8-6 / he)
                              :ARG2 (c8-2 / somewhere
                                          :ARG1-of (c8-10 / have-degree-91
                                                          :ARG2 (c8-4 / enlighten-01
                                                                      :ARG1 c8-2)
                                                          :ARG3 (c8-13 / more))
                                          :example (c8-9 / city
                                                         :name (c8-1 / name
                                                                     :op1 "Paris"))))
                  :polarity -)
      :snt2 (c8-14 / country
                   :name (c8-7 / name
                               :op1 "Sweden"))
      :snt3 (c8-11 / country
                   :name (c8-8 / name
                               :op1 "Germany"))
      :polarity (c8-12 / amr-unknown))

# ::snt Becoming a parent changes a lot of peoples views.
# ::tokens ["Becoming", "a", "parent", "changes", "a", "lot", "of", "peoples", "views", "."]
# ::lemmas ["become", "a", "parent", "change", "a", "lot", "of", "people", "view", "."]
(c9-6 / change-01
      :ARG0 (c9-0 / become-01
                  :ARG1 (c9-4 / person)
                  :ARG2 (c9-1 / person
                              :ARG0-of (c9-3 / have-rel-role-91
                                             :ARG2 (c9-8 / parent))))
      :ARG1 (c9-2 / view
                  :poss (c9-7 / person)
                  :quant (c9-5 / lot)))

# ::snt No wonder aunt Rosemary Clooney wouldn't let him live with her. He's been that way since General Hospital. Hes a Kool-aid drinker
# ::tokens ["No", "wonder", "aunt", "Rosemary", "Clooney", "would", "n't", "let", "him", "live", "with", "her", ".", "He", "'s", "been", "that", "way", "since", "General", "Hospital", ".", "He", "s", "a", "Kool", "-", "aid", "drinker"]
# ::lemmas ["no", "wonder", "aunt", "Rosemary", "Clooney", "would", "not", "let", "he", "live", "with", "she", ".", "he", "be", "be", "that", "way", "since", "General", "Hospital", ".", "he", "s", "a", "Kool", "-", "aid", "drinker"]
(c10-11 / multi-sentence
        :snt1 (c10-18 / wonder-02
                      :ARG1 (c10-1 / let-01
                                   :ARG0 (c10-16 / person
                                                 :name (c10-15 / name
                                                               :op1 "Rosemary"
                                                               :op2 "Clooney")
                                                 :ARG0-of (c10-6 / have-rel-role-91
                                                                 :ARG2 (c10-9 / aunt)))
                                   :ARG1 (c10-10 / live-01
                                                 :ARG0 (c10-19 / he)
                                                 :accompanier (c10-0 / she))
                                   :polarity -)
                      :polarity -)
        :snt2 (c10-5 / he
                     :manner (c10-2 / way
                                    :mod (c10-8 / that)
                                    :time (c10-4 / since
                                                 :op1 (c10-14 / hospital
                                                              :name (c10-13 / name
                                                                            :op1 "General"
                                                                            :op2 "Hospital")))))
        :snt3 (c10-12 / person
                      :ARG0-of (c10-20 / drink-01
                                       :instrument (c10-3 / product
                                                          :name (c10-17 / name
                                                                        :op1 "Kool-Aid")))
                      :domain (c10-7 / he)))

# ::snt He's a crybaby, wants open borders, but not in his neighborhood. He should let refugees live in his house in Italy
# ::tokens ["He", "'s", "a", "crybaby", ",", "wants", "open", "borders", ",", "but", "not", "in", "his", "neighborhood", ".", "He", "should", "let", "refugees", "live", "in", "his", "house", "in", "Italy"]
# ::lemmas ["he", "be", "a", "crybaby", ",", "want", "open", "border", ",", "but", "not", "in", "his", "neighborhood", ".", "he", "should", "let", "refugee", "live", "in", "his", "house", "in", "Italy"]
(c11-2 / multi-sentence
       :snt1 (c11-11 / crybaby
                     :domain (c11-7 / he)
                     :ARG0-of (c11-12 / want-01
                                      :ARG1 (c11-1 / border
                                                   :ARG1-of (c11-0 / open-01))
                                      :ARG1-of (c11-16 / contrast-01
                                                       :ARG2 (c11-10 / want-01
                                                                     :ARG0 c11-7
                                                                     :ARG1 (c11-3 / neighborhood
                                                                                  :poss c11-7)
                                                                     :polarity -))))
       :snt2 (c11-5 / recommend-01
                    :ARG1 (c11-8 / let-01
                                 :ARG0 (c11-13 / he)
                                 :ARG1 (c11-15 / live-01
                                               :ARG0 (c11-4 / refugee)
                                               :location (c11-6 / house
                                                                :poss c11-13
                                                                :location (c11-14 / country
                                                                                  :name (c11-9 / name
                                                                                               :op1 "Italy")))))))

# ::snt Well, imagine that, does he still support open borders? Eyes wide open.
# ::tokens ["Well", ",", "imagine", "that", ",", "does", "he", "still", "support", "open", "borders", "?", "Eyes", "wide", "open", "."]
# ::lemmas ["well", ",", "imagine", "that", ",", "do", "he", "still", "support", "open", "border", "?", "eye", "wide", "open", "."]
(c12-4 / multi-sentence
       :snt1 (c12-12 / imagine-01
                     :ARG0 (c12-3 / you)
                     :ARG1 (c12-13 / that)
                     :mod (c12-11 / well)
                     :mode imperative)
       :snt2 (c12-6 / support-01
                    :ARG0 (c12-9 / he)
                    :ARG1 (c12-2 / border
                                 :ARG1-of (c12-0 / open-01))
                    :mod (c12-1 / still)
                    :polarity (c12-7 / amr-unknown))
       :snt3 (c12-5 / open-01
                    :ARG1 (c12-8 / eye)
                    :ARG1-of (c12-10 / wide-02)))

# ::snt What?? I thought he was for all these refugees and the wonderful they bring. Yeah, for YOU.... Not HIS family.
# ::tokens ["What", "?", "?", "I", "thought", "he", "was", "for", "all", "these", "refugees", "and", "the", "wonderful", "they", "bring", ".", "Yeah", ",", "for", "YOU", "....", "Not", "HIS", "family", "."]
# ::lemmas ["what", "?", "?", "i", "think", "he", "be", "for", "all", "these", "refugee", "and", "the", "wonderful", "they", "bring", ".", "yeah", ",", "for", "you", "....", "not", "his", "family", "."]
(c13-11 / multi-sentence
        :snt1 (c13-7 / amr-unknown
                     :polarity c13-7)
        :snt2 (c13-8 / think-01
                     :ARG0 (c13-18 / i)
                     :ARG1 (c13-0 / support-01
                                  :ARG0 (c13-4 / he)
                                  :ARG1 (c13-6 / and
                                               :op1 (c13-15 / refugee
                                                            :mod (c13-13 / this)
                                                            :mod (c13-5 / all))
                                               :op2 (c13-16 / wonderful-03
                                                            :ARG1 c13-15)
                                               :ARG1-of (c13-10 / bring-01
                                                                :ARG0 c13-15))))
        :snt3 (c13-12 / contrast-01
                      :ARG1 (c13-1 / support-01
                                   :ARG0 (c13-17 / he)
                                   :ARG1 (c13-2 / you)
                                   :mod (c13-9 / yeah))
                      :ARG2 (c13-14 / family
                                    :poss (c13-3 / he)
                                    :polarity -)))

# ::snt Two. Big. Hollywood. Joke. No. Power
# ::tokens ["Two", ".", "Big", ".", "Hollywood", ".", "Joke", ".", "No", ".", "Power"]
# ::lemmas ["Two", ".", "big", ".", "Hollywood", ".", "Joke", ".", "no", ".", "power"]
(c14-5 / and
       :op1 (c14-0 / big
                   :li 2)
       :op2 (c14-2 / market-sector
                   :name (c14-1 / name
                                :op1 "Hollywood"))
       :op3 (c14-4 / joke-01)
       :op4 (c14-3 / power-01
                   :polarity -))

# ::snt AND HE WILL BUILD A BIGGER WALL, ADD MORE BODYDUDES, AND ATTACK TRUMP ON IMMIGRATION.
# ::tokens ["AND", "HE", "WILL", "BUILD", "A", "BIGGER", "WALL", ",", "ADD", "MORE", "BODYDUDES", ",", "AND", "ATTACK", "TRUMP", "ON", "IMMIGRATION", "."]
# ::lemmas ["and", "he", "will", "build", "a", "big", "wall", ",", "add", "more", "bodydude", ",", "and", "attack", "TRUMP", "ON", "IMMIGRATION", "."]
(c15-12 / and
        :op2 (c15-11 / and
                     :op1 (c15-0 / build-01
                                 :ARG0 (c15-4 / he)
                                 :ARG1 (c15-8 / wall
                                              :ARG1-of (c15-10 / have-degree-91
                                                               :ARG2 (c15-5 / big)
                                                               :ARG3 (c15-1 / more))))
                     :op2 (c15-9 / add-02
                                 :ARG0 c15-4
                                 :ARG1 (c15-15 / banker
                                               :ARG1-of (c15-3 / have-quant-91
                                                               :ARG3 (c15-6 / more))))
                     :op3 (c15-14 / attack-01
                                  :ARG0 c15-4
                                  :ARG1 (c15-7 / person
                                               :name (c15-2 / name
                                                            :op1 "Trump"))
                                  :manner (c15-13 / intimidate-01))))

# ::snt The greater the liberal the greater the hypocrite.
# ::tokens ["The", "greater", "the", "liberal", "the", "greater", "the", "hypocrite", "."]
# ::lemmas ["the", "great", "the", "liberal", "the", "great", "the", "hypocrite", "."]
(c16-7 / correlate-91
       :ARG1 (c16-0 / more
                    :ARG3-of (c16-3 / have-degree-91
                                    :ARG1 (c16-5 / person
                                                 :ARG1-of (c16-4 / liberal-02))
                                    :ARG2 (c16-10 / great)))
       :ARG2 (c16-6 / more
                    :ARG3-of (c16-8 / have-degree-91
                                    :ARG1 (c16-1 / person
                                                 :ARG1-of (c16-2 / hypocrite-00))
                                    :ARG2 (c16-9 / great))))

# ::snt Clooney afraid in England? How safe does he think all of us would feel if Hillary/Obama got their wish on open borders? Wake up!
# ::tokens ["Clooney", "afraid", "in", "England", "?", "How", "safe", "does", "he", "think", "all", "of", "us", "would", "feel", "if", "Hillary", "/", "Obama", "got", "their", "wish", "on", "open", "borders", "?", "Wake", "up", "!"]
# ::lemmas ["Clooney", "afraid", "in", "England", "?", "how", "safe", "do", "he", "think", "all", "of", "we", "would", "feel", "if", "Hillary", "/", "Obama", "get", "their", "wish", "on", "open", "border", "?", "wake", "up", "!"]
(c17-11 / multi-sentence
        :snt1 (c17-17 / fear-01
                      :ARG0 (c17-19 / person
                                    :name (c17-18 / name
                                                  :op1 "Clooney"))
                      :location (c17-14 / country
                                        :name (c17-13 / name
                                                      :op1 "England")))
        :snt2 (c17-20 / feel-01
                      :ARG0 (c17-6 / he)
                      :ARG1 (c17-0 / safe-01
                                   :ARG1 (c17-22 / we
                                                 :mod (c17-8 / all))
                                   :condition (c17-9 / get-01
                                                     :ARG0 (c17-3 / slash
                                                                  :op1 (c17-12 / person
                                                                               :name (c17-21 / name
                                                                                             :op1 "Hillary"))
                                                                  :op2 (c17-2 / person
                                                                              :name (c17-15 / name
                                                                                            :op1 "Obama")))
                                                     :ARG1 (c17-1 / wish-01
                                                                  :ARG0 c17-3
                                                                  :ARG1 (c17-10 / border
                                                                                :ARG1-of (c17-4 / open-01))))
                                   :degree (c17-7 / amr-unknown)))
        :snt3 (c17-16 / wake-up-02
                      :ARG0 (c17-5 / you
                                   :ARG1-of c17-16)
                      :mode imperative))

# ::snt Wait George, I thought u wanted to have open borders? Then where would your"safe place"be? U can thank our President your safe place.
# ::tokens ["Wait", "George", ",", "I", "thought", "u", "wanted", "to", "have", "open", "borders", "?", "Then", "where", "would", "your\"safe", "place\"be", "?", "U", "can", "thank", "our", "President", "your", "safe", "place", "."]
# ::lemmas ["wait", "George", ",", "i", "think", "u", "want", "to", "have", "open", "border", "?", "then", "where", "would", "your\"safe", "place\"be", "?", "u", "can", "thank", "our", "President", "your", "safe", "place", "."]
(c18-15 / multi-sentence
        :snt1 (c18-0 / say-01
                     :ARG0 (c18-22 / i)
                     :ARG1 (c18-12 / think-01
                                   :ARG0 c18-22
                                   :ARG1 (c18-20 / want-01
                                                 :ARG0 (c18-19 / person
                                                               :name (c18-18 / name
                                                                             :op1 "George"))
                                                 :ARG1 (c18-9 / have-03
                                                              :ARG0 c18-19
                                                              :ARG1 (c18-14 / border
                                                                            :ARG1-of (c18-6 / open-01))))
                                   :polarity (c18-11 / amr-unknown))
                     :ARG2 c18-19)
        :snt2 (c18-1 / be-located-at-91
                     :ARG1 (c18-7 / safe-01
                                  :ARG1 (c18-8 / you))
                     :ARG2 (c18-10 / amr-unknown)
                     :time (c18-17 / then))
        :snt3 (c18-16 / possible-01
                      :ARG1 (c18-23 / thank-01
                                    :ARG0 (c18-2 / we)
                                    :ARG1 (c18-4 / person
                                                 :ARG0-of (c18-21 / have-org-role-91
                                                                  :ARG2 (c18-3 / president))
                                                 :poss c18-2)
                                    :ARG2 (c18-13 / place
                                                  :ARG0-of (c18-5 / safe-01
                                                                  :ARG1 c18-19)))))

# ::snt He's a billionaire. Can't he afford security????
# ::tokens ["He", "'s", "a", "billionaire", ".", "Ca", "n't", "he", "afford", "security", "?", "?", "?", "?"]
# ::lemmas ["he", "be", "a", "billionaire", ".", "can", "not", "he", "afford", "security", "?", "?", "?", "?"]
(c19-1 / multi-sentence
       :snt1 (c19-0 / billionaire
                    :domain (c19-3 / he))
       :snt2 (c19-4 / possible-01
                    :ARG1 (c19-7 / afford-01
                                 :ARG0 (c19-5 / he)
                                 :ARG1 (c19-2 / security))
                    :polarity (c19-6 / amr-unknown)
                    :polarity -))

# ::snt NO !!! Please! Keeps him Out!! We don't need another poison snake in to ours Country! We have enough as is it ! Lord !
# ::tokens ["NO", "!", "!", "!", "Please", "!", "Keeps", "him", "Out", "!", "!", "We", "do", "n't", "need", "another", "poison", "snake", "in", "to", "ours", "Country", "!", "We", "have", "enough", "as", "is", "it", "!", "Lord", "!"]
# ::lemmas ["no", "!", "!", "!", "please", "!", "keep", "he", "out", "!", "!", "we", "do", "not", "need", "another", "poison", "snake", "in", "to", "ours", "Country", "!", "we", "have", "enough", "as", "be", "it", "!", "Lord", "!"]
(c20-9 / multi-sentence
       :snt1 (c20-13 / no
                     :mode expressive
                     :polite +)
       :snt2 (c20-6 / keep-04
                    :ARG0 (c20-3 / you)
                    :ARG1 (c20-5 / he)
                    :direction (c20-2 / out)
                    :mode imperative)
       :snt3 (c20-11 / need-01
                     :ARG0 (c20-18 / we)
                     :ARG1 (c20-0 / snake
                                  :ARG1-of (c20-16 / poison-02)
                                  :mod (c20-8 / another)
                                  :location (c20-12 / country
                                                    :poss c20-18))
                     :polarity -)
       :snt4 (c20-19 / have-03
                     :ARG0 (c20-1 / we)
                     :ARG1 (c20-7 / thing
                                  :ARG1-of (c20-4 / have-quant-91
                                                  :ARG3 (c20-15 / enough)))
                     :ARG1-of (c20-14 / resemble-01
                                      :ARG2 (c20-20 / it)))
       :snt5 (c20-10 / person
                     :name (c20-17 / name
                                   :op1 "Lord")
                     :mode expressive))

# ::snt Oh, those Muslims too close to Clooney's VILLA. I wondered how long that liberal would last w/his so-called tolerance.
# ::tokens ["Oh", ",", "those", "Muslims", "too", "close", "to", "Clooney", "'s", "VILLA", ".", "I", "wondered", "how", "long", "that", "liberal", "would", "last", "w", "/", "his", "so", "-", "called", "tolerance", "."]
# ::lemmas ["oh", ",", "those", "Muslims", "too", "close", "to", "Clooney", "'s", "VILLA", ".", "i", "wonder", "how", "long", "that", "liberal", "would", "last", "w", "/", "his", "so", "-", "call", "tolerance", "."]
(c21-10 / multi-sentence
        :snt1 (c21-13 / close-13
                      :ARG1 (c21-17 / person
                                    :mod (c21-16 / religious-group
                                                 :name (c21-15 / name
                                                               :op1 "Islam"))
                                    :mod (c21-7 / that))
                      :ARG2 (c21-2 / law
                                   :name (c21-12 / name
                                                 :op1 "VILLA")
                                   :poss (c21-11 / person
                                                 :name (c21-18 / name
                                                               :op1 "Clooney")))
                      :mod (c21-4 / oh
                                  :mode expressive)
                      :ARG2-of (c21-5 / have-degree-91
                                      :ARG1 c21-17
                                      :ARG3 (c21-14 / too)))
        :snt2 (c21-19 / wonder-01
                      :ARG0 (c21-20 / i)
                      :ARG1 (c21-21 / temporal-quantity
                                    :quant-of (c21-9 / last-01
                                                     :ARG1 (c21-3 / person
                                                                  :ARG1-of (c21-6 / liberal-02)
                                                                  :mod (c21-1 / that))
                                                     :ARG3 (c21-8 / tolerate-01
                                                                  :ARG0 c21-3
                                                                  :mod (c21-0 / so-called))))))
