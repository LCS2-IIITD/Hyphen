# ::snt I am POSITIVE I have some ancestors that would happily cheerily indefatigably help with that!
# ::tokens ["I", "am", "POSITIVE", "I", "have", "some", "ancestors", "that", "would", "happily", "cheerily", "indefatigably", "help", "with", "that", "!"]
# ::lemmas ["i", "be", "POSITIVE", "i", "have", "some", "ancestor", "that", "would", "happily", "cheerily", "indefatigably", "help", "with", "that", "!"]
(c1-5 / possible-01
      :ARG1 (c1-0 / believe-01
                  :ARG0 (c1-10 / i)
                  :ARG1 (c1-4 / have-03
                              :ARG0 c1-10
                              :ARG1 (c1-1 / person
                                          :ARG0-of (c1-8 / have-rel-role-91
                                                         :ARG1 c1-10
                                                         :ARG2 (c1-11 / ancestor))
                                          :quant (c1-2 / some)
                                          :ARG0-of (c1-3 / help-01
                                                         :ARG2 (c1-9 / that)
                                                         :ARG0-of (c1-12 / happy-01)
                                                         :manner (c1-6 / legal-02
                                                                       :ARG1 c1-3
                                                                       :polarity -)
                                                         :ARG0-of (c1-7 / cheer-02))))))

# ::snt you do, of course, realize that only organic matter can go through. Happy birthday!
# ::tokens ["you", "do", ",", "of", "course", ",", "realize", "that", "only", "organic", "matter", "can", "go", "through", ".", "Happy", "birthday", "!"]
# ::lemmas ["you", "do", ",", "of", "course", ",", "realize", "that", "only", "organic", "matter", "can", "go", "through", ".", "happy", "birthday", "!"]
(c2-4 / multi-sentence
      :snt1 (c2-5 / realize-01
                  :ARG0 (c2-3 / you)
                  :ARG1 (c2-7 / possible-01
                              :ARG1 (c2-10 / go-12
                                           :ARG1 (c2-6 / matter
                                                       :mod (c2-0 / organic)
                                                       :mod (c2-1 / only))
                                           :ARG2 (c2-9 / through)))
                  :mod (c2-11 / of-course))
      :snt2 (c2-8 / happy-01
                  :ARG1 (c2-2 / birthday
                              :poss c2-3)))

# ::snt Convince that other guy not to quit American Idol Ryan as a co-host could never prosper
# ::tokens ["Convince", "that", "other", "guy", "not", "to", "quit", "American", "Idol", "Ryan", "as", "a", "co", "-", "host", "could", "never", "prosper"]
# ::lemmas ["convince", "that", "other", "guy", "not", "to", "quit", "American", "Idol", "Ryan", "as", "a", "co", "-", "host", "could", "never", "prosper"]
(c3-7 / convince-01
      :ARG1 (c3-10 / guy
                   :mod (c3-9 / that)
                   :mod (c3-0 / other)
                   :ARG0-of (c3-8 / quit-01
                                  :ARG1 (c3-1 / broadcast-program
                                              :name (c3-2 / name
                                                          :op1 "American"
                                                          :op2 "Idol"))
                                  :polarity -))
      :ARG2 (c3-6 / possible-01
                  :ARG1 (c3-3 / prosper-01
                              :ARG0 (c3-11 / person
                                           :name (c3-5 / name
                                                       :op1 "Ryan")
                                           :ARG0-of (c3-12 / cohost-01
                                                           :ARG1 c3-1))
                              :time (c3-4 / ever))
                  :polarity -))

# ::snt On it. : can you also go back and un-unleash Ryan Seacrest onto the world?
# ::tokens ["On", "it", ".", ":", "can", "you", "also", "go", "back", "and", "un", "-", "unleash", "Ryan", "Seacrest", "onto", "the", "world", "?"]
# ::lemmas ["on", "it", ".", ":", "can", "you", "also", "go", "back", "and", "un", "-", "unleash", "Ryan", "Seacrest", "onto", "the", "world", "?"]
(c4-2 / multi-sentence
      :snt1 (c4-0 / on-01
                  :ARG1 (c4-8 / it))
      :snt2 (c4-5 / possible-01
                  :ARG1 (c4-9 / and
                              :op1 (c4-10 / go-back-19
                                          :ARG1 (c4-1 / you))
                              :op2 (c4-12 / unleash-01
                                          :ARG0 c4-1
                                          :ARG1 (c4-3 / person
                                                      :name (c4-4 / name
                                                                  :op1 "Ryan"
                                                                  :op2 "Seacrest"))
                                          :destination (c4-6 / world)
                                          :polarity -)
                              :mod (c4-11 / also))
                  :polarity (c4-7 / amr-unknown)))

# ::snt destroying Ryan Seacrest is reason enough. a more broad-less world is just a cherry on top.
# ::tokens ["destroying", "Ryan", "Seacrest", "is", "reason", "enough", ".", "a", "more", "broad", "-", "less", "world", "is", "just", "a", "cherry", "on", "top", "."]
# ::lemmas ["destroy", "Ryan", "Seacrest", "be", "reason", "enough", ".", "a", "more", "broad", "-", "less", "world", "be", "just", "a", "cherry", "on", "top", "."]
(c5-2 / multi-sentence
      :snt1 (c5-5 / have-degree-91
                  :ARG1 (c5-13 / destroy-01
                               :ARG1 (c5-6 / person
                                           :name (c5-1 / name
                                                       :op1 "Ryan"
                                                       :op2 "Seacrest")))
                  :ARG2 (c5-3 / reason-01
                              :ARG1 c5-13)
                  :ARG3 (c5-4 / enough))
      :snt2 (c5-8 / cherry
                  :location (c5-12 / top)
                  :mod (c5-11 / just)
                  :domain (c5-9 / world
                                :ARG1-of (c5-10 / have-degree-91
                                                :ARG2 (c5-0 / broad-02
                                                            :polarity -)
                                                :ARG3 (c5-7 / more)))))

# ::snt lol well remember he does have a clothing line that is damn nice so it's not like he isn't doing other things.
# ::tokens ["lol", "well", "remember", "he", "does", "have", "a", "clothing", "line", "that", "is", "damn", "nice", "so", "it", "'s", "not", "like", "he", "is", "n't", "doing", "other", "things", "."]
# ::lemmas ["lol", "well", "remember", "he", "do", "have", "a", "clothing", "line", "that", "be", "damn", "nice", "so", "it", "be", "not", "like", "he", "be", "not", "do", "other", "thing", "."]
(c6-3 / remember-01
      :ARG0 (c6-1 / you)
      :ARG1 (c6-4 / have-03
                  :ARG0 (c6-10 / he)
                  :ARG1 (c6-5 / line
                              :mod (c6-7 / clothing)
                              :ARG1-of (c6-2 / nice-01
                                             :degree (c6-13 / damn)))
                  :ARG0-of (c6-16 / cause-01
                                  :ARG1 (c6-14 / resemble-01
                                               :ARG1 c6-4
                                               :ARG2 (c6-8 / do-02
                                                           :ARG0 c6-10
                                                           :ARG1 (c6-12 / thing
                                                                        :mod (c6-0 / other))
                                                           :polarity -)
                                               :polarity -)))
      :mod (c6-9 / well)
      :ARG2-of (c6-15 / laugh-01
                      :ARG0 (c6-11 / i)
                      :manner (c6-6 / loud)
                      :mode expressive)
      :mode imperative)

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c7-1 / laugh-01
      :manner (c7-0 / loud)
      :mode expressive)

# ::snt IKR Because that's how T. Swift's rolls. Smh
# ::tokens ["IKR", "Because", "that", "'s", "how", "T.", "Swift", "'s", "rolls", ".", "Smh"]
# ::lemmas ["IKR", "because", "that", "be", "how", "T.", "Swift", "'s", "roll", ".", "Smh"]
(c8-1 / multi-sentence
      :snt1 (c8-4 / cause-01
                  :ARG0 (c8-5 / that)
                  :ARG1 (c8-3 / publication
                              :name (c8-0 / name
                                          :op1 "IKR")))
      :snt2 (c8-2 / smh
                  :mode expressive))

# ::snt Exactly! And we know she won't name him, but she'll make it obvious enough for us to know it's Ryan. haha
# ::tokens ["Exactly", "!", "And", "we", "know", "she", "wo", "n't", "name", "him", ",", "but", "she", "'ll", "make", "it", "obvious", "enough", "for", "us", "to", "know", "it", "'s", "Ryan", ".", "haha"]
# ::lemmas ["exactly", "!", "and", "we", "know", "she", "will", "not", "name", "he", ",", "but", "she", "'ll", "make", "it", "obvious", "enough", "for", "we", "to", "know", "it", "be", "Ryan", ".", "haha"]
(c9-1 / multi-sentence
      :snt1 (c9-4 / exact
                  :mode expressive)
      :snt2 (c9-10 / contrast-01
                   :ARG1 (c9-6 / know-01
                               :ARG0 (c9-11 / we)
                               :ARG1 (c9-2 / name-01
                                           :ARG0 (c9-3 / she)
                                           :ARG1 (c9-5 / he)
                                           :polarity -))
                   :ARG2 (c9-7 / make-02
                               :ARG0 c9-3
                               :ARG1 (c9-0 / obvious-01
                                           :ARG1 c9-2
                                           :ARG2-of (c9-13 / have-degree-91
                                                           :ARG1 c9-2
                                                           :ARG3 (c9-15 / enough)
                                                           :ARG6 (c9-8 / know-01
                                                                       :ARG0 c9-11
                                                                       :ARG1 (c9-9 / name-01
                                                                                   :ARG1 c9-5
                                                                                   :ARG2 (c9-12 / person
                                                                                                :name (c9-14 / name
                                                                                                             :op1 "Ryan")))))))))

# ::snt Ha Ha. Then she'll write a hit song about the break up. LOL
# ::tokens ["Ha", "Ha", ".", "Then", "she", "'ll", "write", "a", "hit", "song", "about", "the", "break", "up", ".", "LOL"]
# ::lemmas ["ha", "ha", ".", "then", "she", "'ll", "write", "a", "hit", "song", "about", "the", "break", "up", ".", "LOL"]
(c10-2 / multi-sentence
       :snt1 (c10-4 / ha
                    :mode expressive)
       :snt2 (c10-6 / write-01
                    :ARG0 (c10-3 / she)
                    :ARG1 (c10-0 / song
                                 :ARG1-of (c10-7 / hit-02)
                                 :topic (c10-1 / break-up-08))
                    :time (c10-9 / then)
                    :ARG2-of (c10-5 / laugh-01
                                    :ARG0 (c10-8 / i)
                                    :manner (c10-10 / loud)
                                    :mode expressive)))

# ::snt With credible allegations, an employer has to take action or the next one is their fault. Employers follow the policy they approved and the process in that policy, that's DUE process. The accused is not going to jail or paying millions, so they're not entitled to a jury.
# ::tokens ["With", "credible", "allegations", ",", "an", "employer", "has", "to", "take", "action", "or", "the", "next", "one", "is", "their", "fault", ".", "Employers", "follow", "the", "policy", "they", "approved", "and", "the", "process", "in", "that", "policy", ",", "that", "'s", "DUE", "process", ".", "The", "accused", "is", "not", "going", "to", "jail", "or", "paying", "millions", ",", "so", "they", "'re", "not", "entitled", "to", "a", "jury", "."]
# ::lemmas ["with", "credible", "allegation", ",", "an", "employer", "have", "to", "take", "action", "or", "the", "next", "one", "be", "their", "fault", ".", "employer", "follow", "the", "policy", "they", "approve", "and", "the", "process", "in", "that", "policy", ",", "that", "be", "DUE", "process", ".", "the", "accuse", "be", "not", "go", "to", "jail", "or", "pay", "millions", ",", "so", "they", "be", "not", "entitle", "to", "a", "jury", "."]
(c11-14 / multi-sentence
        :snt1 (c11-3 / obligate-01
                     :ARG1 (c11-18 / company
                                   :ARG0-of (c11-26 / employ-01))
                     :ARG2 (c11-13 / or
                                   :op1 (c11-10 / act-02
                                                :ARG0 c11-18)
                                   :op2 (c11-23 / fault-01
                                                :ARG0 c11-18
                                                :ARG1 c11-18
                                                :ARG2 (c11-9 / thing
                                                             :mod (c11-24 / next))))
                     :ARG1-of (c11-12 / cause-01
                                      :ARG0 (c11-8 / allege-01
                                                   :mod (c11-1 / credible))))
        :snt2 (c11-28 / follow-02
                      :ARG0 (c11-22 / company
                                    :ARG0-of (c11-11 / employ-01))
                      :ARG1 (c11-6 / and
                                   :op1 (c11-27 / policy-01
                                                :ARG1-of (c11-30 / approve-01
                                                                 :ARG0 c11-22))
                                   :op2 (c11-15 / process-02
                                                :ARG1 c11-27))
                      :ARG1-of (c11-5 / mean-01
                                      :ARG2 c11-15
                                      :mod (c11-25 / due)))
        :snt3 (c11-31 / or
                      :op1 (c11-7 / jail-01
                                  :ARG1 (c11-2 / person
                                               :ARG1-of (c11-29 / accuse-01))
                                  :polarity -)
                      :op2 (c11-0 / pay-01
                                  :ARG0 c11-2
                                  :ARG1 (c11-20 / multiple
                                                :op1 (c11-16 / monetary-quantity
                                                             :unit (c11-19 / dollar)
                                                             :quant 1000000))
                                  :polarity -)
                      :ARG0-of (c11-4 / cause-01
                                      :ARG1 (c11-17 / entitle-01
                                                    :ARG1 (c11-21 / jury)
                                                    :ARG2 c11-2
                                                    :polarity -))))

# ::snt Salem witch trials ended when accusers became accused
# ::tokens ["Salem", "witch", "trials", "ended", "when", "accusers", "became", "accused"]
# ::lemmas ["Salem", "witch", "trial", "end", "when", "accuser", "became", "accuse"]
(c12-3 / end-01
       :ARG1 (c12-7 / try-02
                    :mod (c12-5 / witch)
                    :mod (c12-1 / Salem))
       :time (c12-0 / become-01
                    :ARG1 (c12-4 / person
                                 :ARG0-of (c12-2 / accuse-01))
                    :ARG2 (c12-6 / accuse-01
                                 :ARG1 c12-4)))

# ::snt Oh boy, a cat fight. lol
# ::tokens ["Oh", "boy", ",", "a", "cat", "fight", ".", "lol"]
# ::lemmas ["oh", "boy", ",", "a", "cat", "fight", ".", "lol"]
(c13-0 / fight-01
       :ARG0 (c13-3 / cat)
       :mod (c13-1 / oh
                   :mode expressive)
       :ARG2-of (c13-2 / laugh-01
                       :ARG0 (c13-4 / i)
                       :manner (c13-5 / loud)
                       :mode expressive))

# ::snt PLEASE.
# ::tokens ["PLEASE", "."]
# ::lemmas ["please", "."]
(c14-0 / please
       :polite +)

# ::snt Apparently E has a second delay going so they can cut out any negative comments to Ryan Seacrest about his sexual assault allegations...
# ::tokens ["Apparently", "E", "has", "a", "second", "delay", "going", "so", "they", "can", "cut", "out", "any", "negative", "comments", "to", "Ryan", "Seacrest", "about", "his", "sexual", "assault", "allegations", "..."]
# ::lemmas ["apparently", "E", "have", "a", "second", "delay", "go", "so", "they", "can", "cut", "out", "any", "negative", "comment", "to", "Ryan", "Seacrest", "about", "his", "sexual", "assault", "allegation", "..."]
(c15-14 / delay-01
        :ARG1 (c15-13 / go-02
                      :ARG0 (c15-6 / person
                                   :name (c15-1 / name
                                                :op1 "E")))
        :ord (c15-0 / ordinal-entity
                    :value 2)
        :ARG1-of (c15-12 / appear-02)
        :purpose (c15-2 / possible-01
                        :ARG1 (c15-8 / cut-out-06
                                     :ARG0 (c15-10 / they)
                                     :ARG1 (c15-16 / comment-01
                                                   :ARG0 c15-10
                                                   :ARG3 (c15-15 / person
                                                                 :name (c15-5 / name
                                                                              :op1 "Ryan"
                                                                              :op2 "Seacrest"))
                                                   :ARG3 (c15-11 / allege-01
                                                                 :ARG1 (c15-9 / assault-01
                                                                              :ARG1 c15-15
                                                                              :manner (c15-3 / sex-01)))
                                                   :ARG0-of (c15-7 / negative-02)
                                                   :mod (c15-4 / any)))))

# ::snt Back and forth with clicker between E and ABC like watching a tennis match. Need to put on bucket list, get famous, go Oscars.
# ::tokens ["Back", "and", "forth", "with", "clicker", "between", "E", "and", "ABC", "like", "watching", "a", "tennis", "match", ".", "Need", "to", "put", "on", "bucket", "list", ",", "get", "famous", ",", "go", "Oscars", "."]
# ::lemmas ["back", "and", "forth", "with", "clicker", "between", "e", "and", "ABC", "like", "watch", "a", "tennis", "match", ".", "need", "to", "put", "on", "bucket", "list", ",", "get", "famous", ",", "go", "oscar", "."]
(c16-12 / multi-sentence
        :snt1 (c16-8 / and
                     :op1 (c16-11 / back-02)
                     :op2 (c16-18 / forth)
                     :instrument (c16-9 / thing
                                        :ARG0-of (c16-15 / click-01
                                                         :location (c16-0 / between
                                                                          :op1 (c16-22 / publication
                                                                                       :name (c16-19 / name
                                                                                                     :op1 "E"))
                                                                          :op2 (c16-13 / publication
                                                                                       :name (c16-14 / name
                                                                                                     :op1 "ABC"))))
                                        :ARG1-of (c16-20 / resemble-01
                                                         :ARG2 (c16-25 / watch-01
                                                                       :ARG1 (c16-6 / match-03
                                                                                    :mod (c16-17 / tennis)))))
                     :snt2 (c16-23 / need-01
                                   :ARG1 (c16-7 / and
                                                :op1 (c16-3 / put-01
                                                            :ARG1 (c16-5 / you)
                                                            :ARG2 (c16-1 / list
                                                                         :mod (c16-4 / bucket)))
                                                :op2 (c16-10 / get-03
                                                             :ARG1 c16-5
                                                             :ARG2 (c16-24 / fame-01
                                                                           :ARG1 c16-5))
                                                :op3 (c16-2 / go-02
                                                            :ARG0 c16-5
                                                            :ARG4 (c16-21 / event
                                                                          :name (c16-16 / name
                                                                                        :op1 "Oscars")))))))

# ::snt Shes not even on the red carpet, shes at a hotel across the street! Whats that about RYAN?!
# ::tokens ["She", "s", "not", "even", "on", "the", "red", "carpet", ",", "she", "s", "at", "a", "hotel", "across", "the", "street", "!", "What", "s", "that", "about", "RYAN", "?", "!"]
# ::lemmas ["she", "s", "not", "even", "on", "the", "red", "carpet", ",", "she", "s", "at", "a", "hotel", "across", "the", "street", "!", "what", "s", "that", "about", "RYAN", "?", "!"]
(c17-2 / multi-sentence
       :snt1 (c17-10 / contrast-01
                     :ARG1 (c17-1 / be-located-at-91
                                  :ARG1 (c17-7 / he)
                                  :ARG2 (c17-15 / carpet
                                                :ARG1-of (c17-5 / red-02))
                                  :mod (c17-6 / even)
                                  :polarity -)
                     :ARG2 (c17-8 / be-located-at-91
                                  :ARG1 (c17-4 / she)
                                  :ARG2 (c17-11 / hotel
                                                :location (c17-14 / across
                                                                  :op1 (c17-0 / street)))))
       :snt2 (c17-13 / amr-unknown
                     :topic (c17-9 / person
                                   :name (c17-3 / name
                                                :op1 "Ryan"))
                     :domain (c17-12 / that)))

# ::snt Baseball &amp;'Awards shows, I guess you want to see Ryan Seacrest get brushed back, high and tight inside? Your tweets make me smile.
# ::tokens ["Baseball", "&", "amp;'Awards", "shows", ",", "I", "guess", "you", "want", "to", "see", "Ryan", "Seacrest", "get", "brushed", "back", ",", "high", "and", "tight", "inside", "?", "Your", "tweets", "make", "me", "smile", "."]
# ::lemmas ["Baseball", "&", "amp;'Awards", "show", ",", "i", "guess", "you", "want", "to", "see", "Ryan", "Seacrest", "get", "brush", "back", ",", "high", "and", "tight", "inside", "?", "your", "tweet", "make", "i", "smile", "."]
(c18-14 / multi-sentence
        :snt1 (c18-11 / and
                      :op1 (c18-13 / baseball)
                      :op2 (c18-19 / person
                                   :name (c18-18 / name
                                                 :op1 "amp")))
        :snt2 (c18-12 / guess-01
                      :ARG0 (c18-21 / i)
                      :ARG1 (c18-20 / want-01
                                    :ARG0 (c18-4 / you)
                                    :ARG1 (c18-0 / see-01
                                                 :ARG0 c18-4
                                                 :ARG1 (c18-1 / brush-01
                                                              :ARG1 (c18-15 / person
                                                                            :name (c18-16 / name
                                                                                          :op1 "Ryan"
                                                                                          :op2 "Seacrest"))
                                                              :manner (c18-2 / back)
                                                              :manner (c18-9 / and
                                                                             :op1 (c18-6 / high-04)
                                                                             :op2 (c18-10 / tight-05)
                                                                             :location (c18-5 / inside)))))
                      :polarity (c18-8 / amr-unknown)
                      :snt3 (c18-7 / make-02
                                   :ARG0 (c18-17 / thing
                                                 :ARG1-of (c18-22 / tweet-01
                                                                  :ARG0 c18-4))
                                   :ARG1 (c18-3 / smile-01
                                                :ARG0 c18-21))))

# ::snt Stable much?
# ::tokens ["Stable", "much", "?"]
# ::lemmas ["stable", "much", "?"]
(c19-2 / stable-03
       :polarity (c19-0 / amr-unknown)
       :degree (c19-1 / much))

# ::snt Also related: Can I come over and watch the game with one of you?
# ::tokens ["Also", "related", ":", "Can", "I", "come", "over", "and", "watch", "the", "game", "with", "one", "of", "you", "?"]
# ::lemmas ["also", "relate", ":", "can", "i", "come", "over", "and", "watch", "the", "game", "with", "one", "of", "you", "?"]
(c20-4 / relate-01
       :ARG1 (c20-5 / possible-01
                    :ARG1 (c20-10 / and
                                  :op1 (c20-6 / come-01
                                              :ARG1 (c20-9 / i)
                                              :ARG4 (c20-0 / over))
                                  :op2 (c20-7 / watch-01
                                              :ARG0 c20-9
                                              :ARG1 (c20-11 / game)
                                              :accompanier (c20-1 / one
                                                                  :ARG1-of (c20-3 / include-91
                                                                                  :ARG2 (c20-2 / you)))))
                    :polarity (c20-12 / amr-unknown))
       :mod (c20-8 / also))

# ::snt ryan seacrests only weakness is that he's like '3
# ::tokens ["ryan", "seacrests", "only", "weakness", "is", "that", "he", "'s", "like", "'", "3"]
# ::lemmas ["ryan", "seacrest", "only", "weakness", "be", "that", "he", "be", "like", "'", "3"]
(c21-4 / weak-02
       :ARG1 (c21-3 / person
                    :name (c21-1 / name
                                 :op1 "ryan"
                                 :op2 "seacrest"))
       :ARG2 (c21-2 / resemble-01
                    :ARG1 c21-3
                    :ARG2 (c21-5 / thing
                                 :quant 3))
       :mod (c21-0 / only))

# ::snt maybe he's the only one who can destroy the evil...there can only be one white man behind every reality tv show
# ::tokens ["maybe", "he", "'s", "the", "only", "one", "who", "can", "destroy", "the", "evil", "...", "there", "can", "only", "be", "one", "white", "man", "behind", "every", "reality", "tv", "show"]
# ::lemmas ["maybe", "he", "be", "the", "only", "one", "who", "can", "destroy", "the", "evil", "...", "there", "can", "only", "be", "one", "white", "man", "behind", "every", "reality", "tv", "show"]
(c22-11 / contrast-01
        :ARG1 (c22-10 / possible-01
                      :ARG1 (c22-14 / destroy-01
                                    :ARG0 (c22-9 / he
                                                 :mod (c22-0 / only))
                                    :ARG1 (c22-8 / evil)))
        :ARG2 (c22-4 / possible-01
                     :ARG1 (c22-3 / man
                                  :ARG1-of (c22-12 / white-02)
                                  :location (c22-2 / behind
                                                   :op1 (c22-5 / show-04
                                                               :ARG1 (c22-13 / television
                                                                             :mod (c22-7 / reality))
                                                               :mod (c22-6 / every)))
                                  :mod (c22-1 / only)
                                  :quant 1)))

# ::snt we can join forces.
# ::tokens ["we", "can", "join", "forces", "."]
# ::lemmas ["we", "can", "join", "force", "."]
(c23-3 / possible-01
       :ARG1 (c23-1 / join-01
                    :ARG0 (c23-0 / we)
                    :ARG1 (c23-2 / force)))

# ::snt You and
# ::tokens ["You", "and"]
# ::lemmas ["you", "and"]
(c24-1 / and
       :op2 (c24-0 / you))

# ::snt I will gladly donate to this cause.
# ::tokens ["I", "will", "gladly", "donate", "to", "this", "cause", "."]
# ::lemmas ["i", "will", "gladly", "donate", "to", "this", "cause", "."]
(c25-4 / donate-01
       :ARG0 (c25-1 / i)
       :ARG2 (c25-0 / cause
                    :mod (c25-2 / this))
       :manner (c25-3 / glad-02
                      :ARG1 c25-1))

# ::snt lol and they will be as insufferable as he is, I'm sure
# ::tokens ["lol", "and", "they", "will", "be", "as", "insufferable", "as", "he", "is", ",", "I", "'m", "sure"]
# ::lemmas ["lol", "and", "they", "will", "be", "as", "insufferable", "as", "he", "be", ",", "i", "be", "sure"]
(c26-2 / and
       :op2 (c26-1 / sure-02
                   :ARG0 (c26-7 / i)
                   :ARG1 (c26-4 / have-degree-91
                                :ARG1 (c26-8 / they)
                                :ARG2 (c26-0 / miserable)
                                :ARG3 (c26-3 / equal)
                                :ARG4 (c26-6 / he)))
       :manner (c26-5 / loud))

# ::snt I gotta!
# ::tokens ["I", "got", "ta", "!"]
# ::lemmas ["i", "got", "to", "!"]
(c27-0 / obligate-01
       :ARG1 (c27-1 / i)
       :mode expressive)

# ::snt he'll come back as the Terminator. Don't do it
# ::tokens ["he", "'ll", "come", "back", "as", "the", "Terminator", ".", "Do", "n't", "do", "it"]
# ::lemmas ["he", "'ll", "come", "back", "as", "the", "Terminator", ".", "do", "not", "do", "it"]
(c28-2 / multi-sentence
       :snt1 (c28-6 / come-01
                    :ARG1 (c28-4 / he)
                    :direction (c28-0 / back)
                    :manner (c28-5 / person
                                   :name (c28-3 / name
                                                :op1 "The"
                                                :op2 "Treaty")))
       :snt2 (c28-7 / do-02
                    :ARG0 (c28-1 / you)
                    :ARG1 c28-6
                    :polarity -
                    :mode imperative))

# ::snt he used to host a game show probably easy to pin him down
# ::tokens ["he", "used", "to", "host", "a", "game", "show", "probably", "easy", "to", "pin", "him", "down"]
# ::lemmas ["he", "use", "to", "host", "a", "game", "show", "probably", "easy", "to", "pin", "he", "down"]
(c29-6 / and
       :op1 (c29-3 / host-01
                   :ARG0 (c29-5 / he)
                   :ARG1 (c29-1 / show-04
                                :ARG1 (c29-7 / game))
                   :time (c29-8 / use-03))
       :op2 (c29-2 / easy-05
                   :ARG1 (c29-4 / pin-down-02
                                :ARG1 c29-5)
                   :mod (c29-0 / probable)))

# ::snt Brunch again soon?
# ::tokens ["Brunch", "again", "soon", "?"]
# ::lemmas ["Brunch", "again", "soon", "?"]
(c30-1 / lunch-01
       :polarity (c30-3 / amr-unknown)
       :mod (c30-2 / again)
       :time (c30-0 / soon))

# ::snt this from the one who goes by the name "Lord of Hosts?" perhaps you are a little jealous of ! Still loving the book
# ::tokens ["this", "from", "the", "one", "who", "goes", "by", "the", "name", "\"", "Lord", "of", "Hosts", "?", "\"", "perhaps", "you", "are", "a", "little", "jealous", "of", "!", "Still", "loving", "the", "book"]
# ::lemmas ["this", "from", "the", "one", "who", "go", "by", "the", "name", "\"", "Lord", "of", "Hosts", "?", "\"", "perhaps", "you", "be", "a", "little", "jealous", "of", "!", "still", "love", "the", "book"]
(c31-4 / multi-sentence
       :snt1 (c31-12 / this
                     :source (c31-0 / one
                                    :ARG1-of (c31-3 / name-01
                                                    :ARG2 (c31-10 / person
                                                                  :name (c31-9 / name
                                                                               :op1 "Lord"
                                                                               :op2 "of"
                                                                               :op3 "hosts"))))
                     :polarity (c31-7 / amr-unknown))
       :snt2 (c31-5 / possible-01
                    :ARG1 (c31-8 / envy-01
                                 :ARG0 (c31-2 / you)
                                 :degree (c31-11 / little)))
       :snt3 (c31-13 / love-01
                     :ARG1 (c31-1 / book)
                     :mod (c31-6 / still)))

# ::snt I guess he knows it is God then that he takes. Otherwise why bother?! God will deal with him.
# ::tokens ["I", "guess", "he", "knows", "it", "is", "God", "then", "that", "he", "takes", ".", "Otherwise", "why", "bother", "?", "!", "God", "will", "deal", "with", "him", "."]
# ::lemmas ["i", "guess", "he", "know", "it", "be", "God", "then", "that", "he", "take", ".", "otherwise", "why", "bother", "?", "!", "God", "will", "deal", "with", "he", "."]
(c32-1 / multi-sentence
       :snt1 (c32-11 / guess-01
                     :ARG0 (c32-9 / i)
                     :ARG1 (c32-6 / know-01
                                  :ARG0 (c32-5 / he)
                                  :ARG1 (c32-10 / take-01
                                                :ARG0 c32-5
                                                :ARG1 (c32-7 / person
                                                             :name (c32-2 / name
                                                                          :op1 "God")))))
       :snt2 (c32-0 / bother-01
                    :ARG1 (c32-8 / he)
                    :condition (c32-4 / have-polarity-91
                                      :ARG1 (c32-3 / amr-unknown)
                                      :ARG2 -)
                    :snt3 (c32-12 / deal-01
                                  :ARG0 c32-7
                                  :ARG2 c32-8)))

# ::snt Can't we outsource Ryan Seacrest to China too.Let him getSaved and become aMissionary to Darfur or somewhere he could do good
# ::tokens ["Ca", "n't", "we", "outsource", "Ryan", "Seacrest", "to", "China", "too", ".", "Let", "him", "getSaved", "and", "become", "aMissionary", "to", "Darfur", "or", "somewhere", "he", "could", "do", "good"]
# ::lemmas ["can", "not", "we", "outsource", "Ryan", "Seacrest", "to", "China", "too", ".", "let", "he", "getsaved", "and", "become", "aMissionary", "to", "Darfur", "or", "somewhere", "he", "could", "do", "good"]
(c33-13 / multi-sentence
        :snt1 (c33-18 / possible-01
                      :ARG1 (c33-3 / outsource-01
                                   :ARG0 (c33-20 / we)
                                   :ARG1 (c33-14 / person
                                                 :name (c33-17 / name
                                                               :op1 "Ryan"
                                                               :op2 "Seacrest"))
                                   :ARG2 (c33-16 / country
                                                 :name (c33-15 / name
                                                               :op1 "China"))
                                   :mod (c33-8 / too))
                      :polarity -)
        :snt2 (c33-1 / let-01
                     :ARG0 c33-20
                     :ARG1 (c33-7 / and
                                  :op1 (c33-0 / save-02
                                              :ARG1 (c33-5 / he))
                                  :op2 (c33-12 / become-01
                                               :ARG1 c33-5
                                               :ARG2 (c33-6 / missionary
                                                            :destination (c33-11 / or
                                                                                 :op1 (c33-10 / country-region
                                                                                              :name (c33-19 / name
                                                                                                            :op1 "Darfur"))
                                                                                 :op2 (c33-4 / somewhere
                                                                                             :location-of (c33-21 / do-02
                                                                                                                  :ARG0 c33-5
                                                                                                                  :ARG1 (c33-9 / good-02)
                                                                                                                  :ARG1-of (c33-2 / possible-01)))))))
                     :mode imperative))

# ::snt &lt;----- clearly blasphemy at its finest. But so damn funny.
# ::tokens ["&", "lt;-----", "clearly", "blasphemy", "at", "its", "finest", ".", "But", "so", "damn", "funny", "."]
# ::lemmas ["&", "lt;-----", "clearly", "blasphemy", "at", "its", "fine", ".", "but", "so", "damn", "funny", "."]
(c34-2 / multi-sentence
       :snt1 (c34-8 / and
                    :op2 (c34-7 / clear-06
                                :ARG1 (c34-1 / blasphemy
                                             :ARG1-of (c34-4 / have-degree-91
                                                             :ARG2 (c34-0 / fine-03
                                                                          :ARG1 c34-1)
                                                             :ARG3 (c34-5 / most)))))
       :snt2 (c34-10 / contrast-01
                     :ARG2 (c34-6 / funny-02
                                  :degree (c34-9 / damn
                                                 :degree (c34-3 / so)))))

# ::snt That's amazing.
# ::tokens ["That", "'s", "amazing", "."]
# ::lemmas ["that", "be", "amazing", "."]
(c35-1 / amaze-01
       :ARG0 (c35-0 / that))
