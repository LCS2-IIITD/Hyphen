# ::snt **Glad Im not the only one who didnt know lol
# ::tokens ["*", "*", "Glad", "I", "m", "not", "the", "only", "one", "who", "did", "nt", "know", "lol"]
# ::lemmas ["*", "*", "glad", "i", "m", "not", "the", "only", "one", "who", "do", "not", "know", "lol"]
(c1-5 / glad-02
      :ARG0 (c1-0 / one
                  :mod (c1-1 / only
                             :polarity -)
                  :ARG0-of (c1-2 / know-01
                                 :polarity -)
                  :domain (c1-4 / i
                                :ARG1-of c1-5))
      :ARG2-of (c1-3 / laugh-01
                     :ARG0 c1-4
                     :manner (c1-6 / loud)
                     :mode expressive))

# ::snt &lt;3
# ::tokens ["&", "lt;3"]
# ::lemmas ["&", "lt;3"]
(c2-0 / and
      :op2 3)

# ::snt &lt;3 it's okay, maybe next time it'll be me.
# ::tokens ["&", "lt;3", "it", "'s", "okay", ",", "maybe", "next", "time", "it", "'ll", "be", "me", "."]
# ::lemmas ["&", "lt;3", "it", "be", "okay", ",", "maybe", "next", "time", "it", "'ll", "be", "i", "."]
(c3-5 / and
      :op2 (c3-0 / okay-04
                 :ARG1 (c3-4 / it))
      :op3 (c3-3 / possible-01
                 :ARG1 (c3-2 / i
                             :domain c3-4
                             :time (c3-1 / next))))

# ::snt Bet it was David
# ::tokens ["Bet", "it", "was", "David"]
# ::lemmas ["bet", "it", "be", "David"]
(c4-1 / bet-01
      :ARG0 (c4-3 / i)
      :ARG2 (c4-2 / person
                  :name (c4-0 / name
                              :op1 "David")))

# ::snt I agree with all this Sam
# ::tokens ["I", "agree", "with", "all", "this", "Sam"]
# ::lemmas ["i", "agree", "with", "all", "this", "Sam"]
(c5-1 / say-01
      :ARG0 (c5-6 / i)
      :ARG1 (c5-5 / agree-01
                  :ARG0 c5-6
                  :ARG1 (c5-3 / this
                              :mod (c5-4 / all)))
      :ARG2 (c5-2 / person
                  :name (c5-0 / name
                              :op1 "Sam")))

# ::snt Im happy for Kylie, and Im glad she knew thats what she wanted to go forward with but no one rarely has Kylie money.
# ::tokens ["I", "m", "happy", "for", "Kylie", ",", "and", "I", "m", "glad", "she", "knew", "that", "s", "what", "she", "wanted", "to", "go", "forward", "with", "but", "no", "one", "rarely", "has", "Kylie", "money", "."]
# ::lemmas ["i", "m", "happy", "for", "Kylie", ",", "and", "i", "m", "glad", "she", "know", "that", "s", "what", "she", "want", "to", "go", "forward", "with", "but", "no", "one", "rarely", "have", "Kylie", "money", "."]
(c6-8 / contrast-01
      :ARG1 (c6-13 / and
                   :op1 (c6-4 / happy-01
                              :ARG0 (c6-5 / person
                                          :name (c6-1 / name
                                                      :op1 "Kylie"))
                              :ARG1 (c6-12 / i))
                   :op2 (c6-14 / glad-02
                               :ARG0 (c6-6 / know-01
                                           :ARG0 c6-5
                                           :ARG1 (c6-9 / want-01
                                                       :ARG0 c6-5
                                                       :ARG1 (c6-15 / go-06
                                                                    :ARG0 c6-5
                                                                    :ARG2 (c6-0 / forward)
                                                                    :manner (c6-11 / that))))
                               :ARG1 c6-12))
      :ARG2 (c6-10 / have-03
                   :ARG0 (c6-7 / no-one)
                   :ARG1 (c6-2 / money
                               :poss c6-5)
                   :ARG1-of (c6-3 / rare-02)))

# ::snt Fit to be Pregnant Please Click here
# ::tokens ["Fit", "to", "be", "Pregnant", "Please", "Click", "here"]
# ::lemmas ["fit", "to", "be", "Pregnant", "please", "Click", "here"]
(c7-3 / click-01
      :ARG0 (c7-1 / you)
      :location (c7-2 / here)
      :purpose (c7-0 / fit-05
                     :ARG1 c7-1
                     :ARG2 (c7-4 / impregnate-01
                                 :ARG1 c7-1))
      :mode imperative
      :polite +)

# ::snt :Are you bored
# ::tokens [":", "Are", "you", "bored"]
# ::lemmas [":", "be", "you", "bored"]
(c8-0 / bore-02
      :polarity (c8-2 / amr-unknown)
      :ARG1 (c8-1 / you))

# ::snt well meron nang haha miss you too!
# ::tokens ["well", "meron", "nang", "haha", "miss", "you", "too", "!"]
# ::lemmas ["well", "meron", "nang", "haha", "miss", "you", "too", "!"]
(c10-1 / miss-01
       :ARG0 (c10-3 / i)
       :ARG1 (c10-0 / you)
       :mod (c10-4 / too)
       :mod (c10-2 / haha
                   :mode expressive))

# ::snt Ay jk nanganak na pala siya!!! HAHA
# ::tokens ["Ay", "jk", "nanganak", "na", "pala", "siya", "!", "!", "!", "HAHA"]
# ::lemmas ["ay", "jk", "nanganak", "na", "pala", "siya", "!", "!", "!", "haha"]
(c11-1 / multi-sentence
       :snt1 (c11-3 / ay
                    :snt2 (c11-0 / nanganak
                                 :mode expressive)
                    :snt3 (c11-2 / pala
                                 :mode expressive)
                    :mode expressive))

# ::snt Tama din yung is.
# ::tokens ["Tama", "din", "yung", "is", "."]
# ::lemmas ["Tama", "din", "yung", "be", "."]
(c12-0 / event
       :name (c12-1 / name
                    :op1 "Tama"
                    :op2 " din"
                    :op3 "Yung"))

# ::snt *mute
# ::tokens ["*", "mute"]
# ::lemmas ["*", "mute"]
(c13-0 / ute)

# ::snt Im just tryna watch funny videos
# ::tokens ["I", "m", "just", "tryna", "watch", "funny", "videos"]
# ::lemmas ["i", "m", "just", "tryna", "watch", "funny", "video"]
(c14-5 / try-01
       :ARG0 (c14-4 / i)
       :ARG1 (c14-2 / watch-01
                    :ARG0 c14-4
                    :ARG1 (c14-1 / video
                                 :ARG1-of (c14-0 / funny-02)))
       :mod (c14-3 / just))

# ::snt Lmao tru they gonna make kuwtk for hundreds seasons
# ::tokens ["Lmao", "tru", "they", "gon", "na", "make", "kuwtk", "for", "hundreds", "seasons"]
# ::lemmas ["Lmao", "tru", "they", "going", "to", "make", "kuwtk", "for", "hundreds", "seasons"]
(c15-0 / make-01
       :ARG0 (c15-6 / they)
       :ARG1 (c15-3 / kuwtk)
       :ARG3 (c15-1 / season
                    :quant (c15-2 / multiple
                                  :op1 100))
       :mod (c15-4 / laugh-01
                   :ARG0 (c15-5 / i)
                   :manner (c15-7 / loud)
                   :mode expressive))

# ::snt Oh my god yes
# ::tokens ["Oh", "my", "god", "yes"]
# ::lemmas ["oh", "my", "god", "yes"]
(c16-1 / yes
       :mod (c16-2 / person
                   :name (c16-0 / name
                                :op1 "God")
                   :poss (c16-3 / i)
                   :mode expressive))

# ::snt I think she'll take care of her baby well since she wanted it. The baby just born and I'm sure she gonna be rich baby
# ::tokens ["I", "think", "she", "'ll", "take", "care", "of", "her", "baby", "well", "since", "she", "wanted", "it", ".", "The", "baby", "just", "born", "and", "I", "'m", "sure", "she", "gon", "na", "be", "rich", "baby"]
# ::lemmas ["i", "think", "she", "'ll", "take", "care", "of", "her", "baby", "well", "since", "she", "want", "it", ".", "the", "baby", "just", "bear", "and", "i", "be", "sure", "she", "going", "to", "be", "rich", "baby"]
(c17-14 / multi-sentence
        :snt1 (c17-10 / think-01
                      :ARG0 (c17-20 / i)
                      :ARG1 (c17-15 / care-03
                                    :ARG0 (c17-0 / she)
                                    :ARG1 (c17-17 / person
                                                  :ARG0-of (c17-7 / have-rel-role-91
                                                                  :ARG1 c17-0
                                                                  :ARG2 (c17-13 / baby)))
                                    :ARG1-of (c17-18 / well-09)
                                    :ARG1-of (c17-11 / cause-01
                                                     :ARG0 (c17-2 / want-01
                                                                  :ARG0 c17-0
                                                                  :ARG1 c17-15))))
        :snt2 (c17-9 / and
                     :op1 (c17-1 / bear-02
                                 :ARG1 (c17-4 / baby)
                                 :time (c17-8 / just))
                     :op2 (c17-5 / sure-02
                                 :ARG0 (c17-6 / i)
                                 :ARG1 (c17-19 / have-mod-91
                                               :ARG1 (c17-3 / she)
                                               :ARG2 (c17-12 / baby
                                                             :mod (c17-16 / rich))))))

# ::snt Wow I'm happy but shook it's maybe normal but still she's but it's all fine I'm just kinda shook
# ::tokens ["Wow", "I", "'m", "happy", "but", "shook", "it", "'s", "maybe", "normal", "but", "still", "she", "'s", "but", "it", "'s", "all", "fine", "I", "'m", "just", "kinda", "shook"]
# ::lemmas ["wow", "i", "be", "happy", "but", "shake", "it", "be", "maybe", "normal", "but", "still", "she", "be", "but", "it", "be", "all", "fine", "i", "be", "just", "kinda", "shake"]
(c18-3 / multi-sentence
       :snt1 (c18-11 / contrast-01
                     :ARG1 (c18-8 / happy-01
                                  :ARG1 (c18-13 / i))
                     :ARG2 (c18-5 / shake-01
                                  :ARG0 c18-13
                                  :ARG1 (c18-4 / normal-02
                                               :ARG1 (c18-6 / it)
                                               :ARG1-of (c18-9 / possible-01))))
       :snt2 (c18-16 / contrast-01
                     :ARG1 c18-4
                     :ARG1 (c18-0 / she)
                     :mod (c18-17 / still))
       :ARG2 (c18-1 / fine-04
                    :ARG1 (c18-15 / it)
                    :mod (c18-14 / all))
       :snt3 (c18-7 / shake-01
                    :ARG1 (c18-2 / i)
                    :degree (c18-10 / kind-of)
                    :mod (c18-12 / just)))

# ::snt That minutes video? Cz I just rt-ed it
# ::tokens ["That", "minutes", "video", "?", "Cz", "I", "just", "rt", "-", "ed", "it"]
# ::lemmas ["that", "minute", "video", "?", "cz", "i", "just", "rt", "-", "ed", "it"]
(c19-1 / video
       :duration (c19-0 / multiple
                        :op1 (c19-5 / temporal-quantity
                                    :unit (c19-3 / minute)
                                    :quant 1))
       :polarity (c19-7 / amr-unknown)
       :ARG1-of (c19-4 / cause-01
                       :ARG0 (c19-2 / edit-01
                                    :ARG0 (c19-6 / i)
                                    :ARG1 c19-1
                                    :mod (c19-8 / just))))

# ::snt I'M SHOOK. I thought it's some old news. I knew that rumour but I didn't know it was real.
# ::tokens ["I'M", "SHOOK", ".", "I", "thought", "it", "'s", "some", "old", "news", ".", "I", "knew", "that", "rumour", "but", "I", "did", "n't", "know", "it", "was", "real", "."]
# ::lemmas ["i'm", "SHOOK", ".", "i", "think", "it", "be", "some", "old", "news", ".", "i", "know", "that", "rumour", "but", "i", "do", "not", "know", "it", "be", "real", "."]
(c20-2 / multi-sentence
       :snt1 (c20-7 / look-01
                    :ARG0 (c20-10 / i))
       :snt2 (c20-11 / think-01
                     :ARG0 (c20-5 / i)
                     :ARG1 (c20-3 / news
                                  :mod (c20-0 / old)
                                  :mod (c20-4 / some)
                                  :domain (c20-14 / it)))
       :snt3 (c20-9 / contrast-01
                    :ARG1 (c20-8 / know-01
                                 :ARG0 (c20-1 / i)
                                 :ARG1 (c20-6 / rumor-01
                                              :mod (c20-15 / that)))
                    :ARG2 (c20-12 / know-01
                                  :ARG0 c20-1
                                  :ARG1 (c20-13 / real-04
                                                :ARG1 c20-6)
                                  :polarity -)))

# ::snt I was gonna say....What did she do just forget about the baby when she came out?? How you feel lonely around a newborn lmao
# ::tokens ["I", "was", "gon", "na", "say", "....", "What", "did", "she", "do", "just", "forget", "about", "the", "baby", "when", "she", "came", "out", "?", "?", "How", "you", "feel", "lonely", "around", "a", "newborn", "lmao"]
# ::lemmas ["i", "be", "going", "to", "say", "....", "what", "do", "she", "do", "just", "forget", "about", "the", "baby", "when", "she", "come", "out", "?", "?", "how", "you", "feel", "lonely", "around", "a", "newborn", "lmao"]
(c21-4 / multi-sentence
       :snt1 (c21-6 / say-01
                    :ARG0 (c21-13 / i)
                    :ARG1 (c21-0 / forget-01
                                 :ARG0 (c21-1 / she)
                                 :ARG1 (c21-2 / baby)
                                 :mod (c21-12 / just)
                                 :time (c21-11 / come-out-09
                                               :ARG1 c21-1)))
       :snt2 (c21-9 / feel-01
                    :ARG0 (c21-3 / you)
                    :ARG1 (c21-8 / lonely)
                    :ARG2 (c21-14 / around
                                  :op1 (c21-7 / baby
                                              :ARG1-of (c21-16 / bear-02
                                                               :ARG1-of (c21-5 / new-01))))
                    :ARG2-of (c21-15 / laugh-01
                                     :ARG0 c21-13
                                     :manner (c21-10 / loud)
                                     :mode expressive)))

# ::snt Yes, let's not buy bs! Or E!'s bs!
# ::tokens ["Yes", ",", "let", "'s", "not", "buy", "bs", "!", "Or", "E", "!", "'s", "bs", "!"]
# ::lemmas ["yes", ",", "let", "us", "not", "buy", "bs", "!", "or", "E", "!", "'s", "bs", "!"]
(c22-2 / multi-sentence
       :snt1 (c22-1 / buy-01
                    :ARG0 (c22-6 / we)
                    :ARG1 (c22-8 / thing
                                 :mod (c22-4 / variable
                                             :name (c22-3 / name
                                                          :op1 "B_")))
                    :mode imperative
                    :polarity -)
       :snt2 (c22-0 / or
                    :op2 (c22-9 / thing
                                :mod (c22-7 / variable
                                            :name (c22-5 / name
                                                         :op1 "E!")))))

# ::snt Coming from someone who just announced that she finally ate cereal with milk
# ::tokens ["Coming", "from", "someone", "who", "just", "announced", "that", "she", "finally", "ate", "cereal", "with", "milk"]
# ::lemmas ["come", "from", "someone", "who", "just", "announce", "that", "she", "finally", "eat", "cereal", "with", "milk"]
(c25-4 / come-01
       :ARG3 (c25-2 / someone
                    :ARG0-of (c25-6 / announce-01
                                    :ARG1 (c25-3 / eat-01
                                                 :ARG0 c25-2
                                                 :ARG1 (c25-7 / cereal
                                                              :accompanier (c25-1 / milk))
                                                 :time (c25-0 / final))
                                    :time (c25-5 / just))))

# ::snt is she serious?
# ::tokens ["is", "she", "serious", "?"]
# ::lemmas ["be", "she", "serious", "?"]
(c26-2 / serious-01
       :polarity (c26-0 / amr-unknown)
       :ARG1 (c26-1 / she))

# ::snt Please!
# ::tokens ["Please", "!"]
# ::lemmas ["please", "!"]
(c27-0 / please
       :polite +)

# ::snt Being lonely is the best reason to have a baby after all. SMH.
# ::tokens ["Being", "lonely", "is", "the", "best", "reason", "to", "have", "a", "baby", "after", "all", ".", "SMH", "."]
# ::lemmas ["be", "lonely", "be", "the", "good", "reason", "to", "have", "a", "baby", "after", "all", ".", "SMH", "."]
(c28-1 / multi-sentence
       :snt1 (c28-3 / reason
                    :domain (c28-5 / lonely)
                    :ARG1-of (c28-4 / have-03
                                    :ARG0 (c28-0 / you))
                    :ARG1-of (c28-7 / have-degree-91
                                    :ARG2 (c28-9 / good-02
                                                 :ARG1 c28-3)
                                    :ARG3 (c28-6 / most))
                    :mod (c28-8 / after-all))
       :snt2 (c28-2 / sigh-02
                    :mode expressive))

# ::snt Oh no, sounds like she's gonna be preggers again soon...
# ::tokens ["Oh", "no", ",", "sounds", "like", "she", "'s", "gon", "na", "be", "preggers", "again", "soon", "..."]
# ::lemmas ["oh", "no", ",", "sound", "like", "she", "be", "going", "to", "be", "pregger", "again", "soon", "..."]
(c29-2 / sound-01
       :ARG1 (c29-3 / preposter-00
                    :ARG1 (c29-0 / she)
                    :mod (c29-4 / again)
                    :time (c29-5 / soon))
       :mod (c29-1 / oh-no
                   :mode expressive))

# ::snt If you don't have nannies you are still basically never alone after the birth. Problem solved
# ::tokens ["If", "you", "do", "n't", "have", "nannies", "you", "are", "still", "basically", "never", "alone", "after", "the", "birth", ".", "Problem", "solved"]
# ::lemmas ["if", "you", "do", "not", "have", "nanny", "you", "be", "still", "basically", "never", "alone", "after", "the", "birth", ".", "Problem", "solve"]
(c30-3 / multi-sentence
       :snt1 (c30-11 / alone
                     :time (c30-10 / after
                                   :op1 (c30-1 / bear-02))
                     :mod (c30-5 / still)
                     :mod (c30-7 / basic)
                     :time (c30-6 / ever)
                     :condition (c30-8 / have-03
                                       :ARG0 (c30-2 / you)
                                       :ARG1 (c30-4 / nanny)
                                       :polarity -)
                     :polarity -)
       :snt2 (c30-0 / solve-01
                    :ARG1 (c30-9 / problem)))

# ::snt what super bowl
# ::tokens ["what", "super", "bowl"]
# ::lemmas ["what", "super", "bowl"]
(c32-1 / bowl
       :mod (c32-2 / super)
       :degree (c32-0 / so))

# ::snt Nobody cares about Kylie Jenner the Super Bowl is on
# ::tokens ["Nobody", "cares", "about", "Kylie", "Jenner", "the", "Super", "Bowl", "is", "on"]
# ::lemmas ["nobody", "care", "about", "Kylie", "Jenner", "the", "Super", "Bowl", "be", "on"]
(c33-5 / care-01
       :ARG0 (c33-1 / nobody)
       :ARG1 (c33-3 / person
                    :name (c33-2 / name
                                 :op1 "Kylie"
                                 :op2 "Jenner"))
       :time (c33-6 / game
                    :name (c33-4 / name
                                 :op1 "Super"
                                 :op2 "Bowl")
                    :on-of (c33-0 / on-01)))

# ::snt Wait what are you serious !!! Where have i been ????!!!
# ::tokens ["Wait", "what", "are", "you", "serious", "!", "!", "!", "Where", "have", "i", "been", "?", "?", "?", "?", "!", "!", "!"]
# ::lemmas ["wait", "what", "be", "you", "serious", "!", "!", "!", "where", "have", "i", "be", "?", "?", "?", "?", "!", "!", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-4 / wait-01
                    :ARG1 (c34-1 / you)
                    :ARG1-of (c34-3 / serious-01)
                    :mode imperative)
       :snt2 (c34-0 / be-located-at-91
                    :ARG1 (c34-5 / i)
                    :ARG2 (c34-6 / amr-unknown)))

# ::snt She already had the baby Jessica where u be at
# ::tokens ["She", "already", "had", "the", "baby", "Jessica", "where", "u", "be", "at"]
# ::lemmas ["she", "already", "have", "the", "baby", "Jessica", "where", "u", "be", "at"]
(c35-8 / ask-01
       :ARG0 (c35-7 / i)
       :ARG1 (c35-0 / be-located-at-91
                    :ARG1 (c35-4 / person
                                 :name (c35-1 / name
                                              :op1 "Jessica")
                                 :ARG0-of (c35-3 / have-rel-role-91
                                                 :ARG1 (c35-2 / she)
                                                 :ARG2 (c35-5 / baby)))
                    :ARG2 (c35-9 / amr-unknown))
       :ARG2 c35-4
       :time (c35-6 / already))

# ::snt the internet made it a huge deal if she was pregnant or if she wasnt pregnant not her.
# ::tokens ["the", "internet", "made", "it", "a", "huge", "deal", "if", "she", "was", "pregnant", "or", "if", "she", "was", "nt", "pregnant", "not", "her", "."]
# ::lemmas ["the", "internet", "make", "it", "a", "huge", "deal", "if", "she", "be", "pregnant", "or", "if", "she", "be", "not", "pregnant", "not", "she", "."]
(c36-1 / make-02
       :ARG0 (c36-5 / internet)
       :ARG1 (c36-6 / deal
                    :mod (c36-4 / huge))
       :condition (c36-0 / or
                         :op1 (c36-3 / impregnate-01
                                     :ARG1 (c36-2 / she))
                         :op2 (c36-7 / impregnate-01
                                     :ARG1 c36-2
                                     :polarity -)))

# ::snt I was...... you all ruined my plan. and Im getting fat so.
# ::tokens ["I", "was", "......", "you", "all", "ruined", "my", "plan", ".", "and", "I", "m", "getting", "fat", "so", "."]
# ::lemmas ["i", "be", "......", "you", "all", "ruin", "my", "plan", ".", "and", "i", "m", "get", "fat", "so", "."]
(c37-2 / multi-sentence
       :snt1 (c37-5 / ruin-01
                    :ARG0 (c37-1 / you
                                 :mod (c37-9 / all))
                    :ARG1 (c37-6 / plan-01
                                 :ARG0 (c37-8 / i)))
       :snt2 (c37-7 / cause-01
                    :ARG0 (c37-0 / fat-03
                                 :ARG1 (c37-4 / i)
                                 :degree (c37-3 / so))
                    :ARG1 (c37-10 / get-03
                                  :ARG1 c37-4
                                  :ARG2 c37-0)))

# ::snt Same! That video literally gave me cold chills haha.
# ::tokens ["Same", "!", "That", "video", "literally", "gave", "me", "cold", "chills", "haha", "."]
# ::lemmas ["same", "!", "that", "video", "literally", "give", "i", "cold", "chill", "haha", "."]
(c38-0 / multi-sentence
       :snt1 (c38-1 / same-01
                    :mode expressive)
       :snt2 (c38-8 / give-01
                    :ARG0 (c38-2 / video
                                 :mod (c38-7 / that))
                    :ARG1 (c38-5 / chill-01
                                 :ARG1-of (c38-9 / cold-02))
                    :ARG2 (c38-6 / i)
                    :mod (c38-4 / literal)
                    :mod (c38-3 / haha)))

# ::snt Contact now if you have any of this below for solution with natural herbs.1.Trying to get pregnant / miscarriage Issues . Infection / breast cancer / Fibroid HIV aids Etc. Drclimentscott.com and WhatsApp via him +2347036879479
# ::tokens ["Contact", "now", "if", "you", "have", "any", "of", "this", "below", "for", "solution", "with", "natural", "herbs.1.Trying", "to", "get", "pregnant", "/", "miscarriage", "Issues", ".", "Infection", "/", "breast", "cancer", "/", "Fibroid", "HIV", "aids", "Etc", ".", "Drclimentscott.com", "and", "WhatsApp", "via", "him", "+2347036879479"]
# ::lemmas ["contact", "now", "if", "you", "have", "any", "of", "this", "below", "for", "solution", "with", "natural", "herbs.1.trying", "to", "get", "pregnant", "/", "miscarriage", "Issues", ".", "infection", "/", "breast", "cancer", "/", "Fibroid", "HIV", "aid", "Etc", ".", "Drclimentscott.com", "and", "WhatsApp", "via", "he", "+2347036879479"]
(c39-15 / contact-01
        :ARG0 (c39-2 / you)
        :time (c39-19 / now)
        :condition (c39-4 / have-03
                          :ARG0 c39-2
                          :ARG1 (c39-8 / this
                                       :mod (c39-7 / any)
                                       :location (c39-11 / below)
                                       :ARG2-of (c39-0 / solve-01
                                                       :ARG1 (c39-25 / issue-02
                                                                     :ARG0 (c39-23 / herb
                                                                                   :ARG1-of (c39-13 / natural-03))))))
        :ARG1-of (c39-12 / mean-01
                         :ARG2 (c39-6 / and
                                      :op1 (c39-18 / try-01
                                                   :ARG0 c39-2
                                                   :ARG1 (c39-3 / impregnate-01
                                                                :ARG1 c39-2))
                                      :op2 (c39-5 / miscarriage)
                                      :op3 (c39-9 / infect-01
                                                  :ARG2 (c39-26 / disease
                                                                :name (c39-22 / name
                                                                              :op1 "HIV")))
                                      :op4 (c39-16 / disease
                                                   :name (c39-17 / name
                                                                 :op1 "cancer")
                                                   :mod (c39-1 / breast))
                                      :op5 (c39-14 / disease
                                                   :name (c39-24 / name
                                                                 :op1 " Fibroid"
                                                                 :op2 "HIV"
                                                                 :op3 "AIDS"))
                                      :op6 (c39-21 / email-address-entity
                                                   :medium (c39-10 / company
                                                                   :name (c39-20 / name
                                                                                 :op1 "Drclimentscott.com"))
                                                   :value +2347036879479)))
        :mode imperative
        :li 1)

# ::snt Hahaha
# ::tokens ["Hahaha"]
# ::lemmas ["Hahaha"]
(c40-0 / haha
       :mode expressive)

# ::snt The future is doomed
# ::tokens ["The", "future", "is", "doomed"]
# ::lemmas ["the", "future", "be", "doom"]
(c41-0 / doom-01
       :ARG1 (c41-1 / future))

# ::snt Been there done that sis and lemme tell ya Men are trash and I tweeted about our breakup for at least a month
# ::tokens ["Been", "there", "done", "that", "sis", "and", "lemme", "tell", "ya", "Men", "are", "trash", "and", "I", "tweeted", "about", "our", "breakup", "for", "at", "least", "a", "month"]
# ::lemmas ["be", "there", "do", "that", "sis", "and", "lemme", "tell", "ya", "man", "be", "trash", "and", "i", "tweet", "about", "our", "breakup", "for", "at", "least", "a", "month"]
(c42-6 / and
       :op1 (c42-15 / and
                    :op1 (c42-0 / be-located-at-91
                                :ARG1 (c42-13 / i)
                                :ARG2 (c42-14 / there))
                    :op2 (c42-4 / say-01
                                :ARG0 c42-13
                                :ARG1 (c42-12 / and
                                              :op1 (c42-17 / trash
                                                           :domain (c42-2 / man))
                                              :op2 (c42-9 / possible-01
                                                          :ARG1 (c42-16 / tell-01
                                                                        :ARG0 c42-13
                                                                        :ARG1 (c42-1 / you
                                                                                     :ARG2-of c42-16))))))
       :op2 (c42-7 / tweet-02
                   :ARG0 c42-13
                   :ARG1 (c42-8 / break-up-08
                                :ARG1 (c42-11 / we))
                   :duration (c42-3 / at-least
                                    :op1 (c42-5 / temporal-quantity
                                                :unit (c42-10 / month)
                                                :quant 1))))

# ::snt You should date each other
# ::tokens ["You", "should", "date", "each", "other"]
# ::lemmas ["you", "should", "date", "each", "other"]
(c43-2 / recommend-01
       :ARG1 (c43-4 / date-02
                    :ARG0 (c43-1 / you)
                    :ARG1 (c43-0 / other
                                 :mod (c43-3 / each)))
       :ARG2 c43-1)

# ::snt That's all me and Nihill talk about and we kissed each other freshman year that's about as close friends you can get
# ::tokens ["That", "'s", "all", "me", "and", "Nihill", "talk", "about", "and", "we", "kissed", "each", "other", "freshman", "year", "that", "'s", "about", "as", "close", "friends", "you", "can", "get"]
# ::lemmas ["that", "be", "all", "i", "and", "Nihill", "talk", "about", "and", "we", "kiss", "each", "other", "freshman", "year", "that", "be", "about", "as", "close", "friend", "you", "can", "get"]
(c44-6 / and
       :op1 (c44-14 / talk-01
                    :ARG0 (c44-15 / and
                                  :op1 (c44-13 / i)
                                  :op2 (c44-8 / person
                                              :name (c44-2 / name
                                                           :op1 "Nihill")))
                    :ARG1 (c44-17 / that
                                  :mod (c44-12 / all)))
       :op2 (c44-9 / kiss-01
                   :ARG0 c44-13
                   :ARG1 c44-8
                   :time (c44-1 / year
                                :mod (c44-0 / freshman)
                                :time-of (c44-7 / have-degree-91
                                                :ARG1 (c44-10 / friend)
                                                :ARG2 (c44-11 / close-13
                                                              :ARG1 c44-10)
                                                :ARG3 (c44-3 / most)
                                                :ARG5 (c44-4 / possible-01
                                                             :ARG1 (c44-5 / get-02
                                                                          :ARG0 (c44-16 / you)))))))

# ::snt She tried to talk to me about drinking &amp; doing drugs the last time I worked with her....
# ::tokens ["She", "tried", "to", "talk", "to", "me", "about", "drinking", "&", "amp", ";", "doing", "drugs", "the", "last", "time", "I", "worked", "with", "her", "...."]
# ::lemmas ["she", "try", "to", "talk", "to", "i", "about", "drink", "&", "amp", ";", "do", "drug", "the", "last", "time", "i", "work", "with", "she", "...."]
(c45-3 / try-01
       :ARG0 (c45-0 / she)
       :ARG1 (c45-8 / talk-01
                    :ARG0 c45-0
                    :ARG1 (c45-5 / and
                                 :op1 (c45-7 / drink-01
                                             :ARG0 (c45-4 / i))
                                 :op2 (c45-6 / amp))
                    :ARG2 c45-4)
       :time (c45-2 / work-01
                    :ARG0 c45-4
                    :ARG3 c45-0
                    :mod (c45-1 / last)))

# ::snt She just wanted to be your friend lol
# ::tokens ["She", "just", "wanted", "to", "be", "your", "friend", "lol"]
# ::lemmas ["she", "just", "want", "to", "be", "your", "friend", "lol"]
(c46-5 / want-01
       :ARG0 (c46-2 / she)
       :ARG1 (c46-3 / have-rel-role-91
                    :ARG0 c46-2
                    :ARG1 (c46-1 / you)
                    :ARG2 (c46-0 / friend))
       :mod (c46-6 / just)
       :ARG2-of (c46-4 / laugh-01
                       :ARG0 (c46-7 / i)
                       :manner (c46-8 / loud)
                       :mode expressive))

# ::snt What's sad about the whole thing is is that, A LOT of people do care...?
# ::tokens ["What", "'s", "sad", "about", "the", "whole", "thing", "is", "is", "that", ",", "A", "LOT", "of", "people", "do", "care", "...", "?"]
# ::lemmas ["what", "be", "sad", "about", "the", "whole", "thing", "be", "be", "that", ",", "a", "LOT", "of", "people", "do", "care", "...", "?"]
(c47-0 / sad-02
       :ARG0 (c47-3 / care-01
                    :ARG0 (c47-1 / person
                                 :quant (c47-2 / lot))
                    :polarity (c47-6 / amr-unknown))
       :ARG1 (c47-5 / thing
                    :mod (c47-4 / whole)))

# ::snt Like hours
# ::tokens ["Like", "hours"]
# ::lemmas ["like", "hours"]
(c48-0 / resemble-01
       :ARG2 (c48-2 / multiple
                    :op1 (c48-3 / temporal-quantity
                                :unit (c48-1 / hour)
                                :quant 1)))

# ::snt I CHOKED- why did I laugh so hard lmao
# ::tokens ["I", "CHOKED-", "why", "did", "I", "laugh", "so", "hard", "lmao"]
# ::lemmas ["i", "choked-", "why", "do", "i", "laugh", "so", "hard", "lmao"]
(c49-0 / multi-sentence
       :snt1 (c49-4 / hope-01
                    :ARG0 (c49-9 / i))
       :snt2 (c49-5 / laugh-01
                    :ARG0 (c49-2 / i)
                    :ARG1-of (c49-8 / hard-02
                                    :degree (c49-1 / so))
                    :ARG1-of (c49-7 / cause-01
                                    :ARG0 (c49-10 / amr-unknown))
                    :ARG2 c49-5
                    :ARG0 c49-2
                    :ARG1 c49-5
                    :ARG0 c49-2
                    :ARG1-of (c49-6 / possible-01)
                    :snt3-of c49-0)
       :ARG0 (c49-12 / i
                     :part (c49-11 / ass
                                   :ARG0-of (c49-3 / have-03
                                                   :ARG1 c49-11))))

# ::snt Ahaha, true! but I'm still very excited to see!!
# ::tokens ["Ahaha", ",", "true", "!", "but", "I", "'m", "still", "very", "excited", "to", "see", "!", "!"]
# ::lemmas ["Ahaha", ",", "true", "!", "but", "i", "be", "still", "very", "excited", "to", "see", "!", "!"]
(c50-5 / contrast-01
       :ARG1 (c50-7 / true-01)
       :ARG2 (c50-4 / excite-01
                    :ARG0 (c50-1 / see-01
                                 :ARG0 (c50-6 / i
                                              :ARG1-of c50-4))
                    :degree (c50-3 / very)
                    :mod (c50-0 / still))
       :mod (c50-2 / ahaha
                   :mode expressive))
