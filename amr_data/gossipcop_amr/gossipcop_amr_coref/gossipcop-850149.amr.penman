# ::snt hurry your bitch ass up i'm starving
# ::tokens ["hurry", "your", "bitch", "ass", "up", "i", "'m", "starving"]
# ::lemmas ["hurry", "your", "bitch", "ass", "up", "i", "be", "starve"]
(c1-4 / cause-01
      :ARG0 (c1-2 / starve-01
                  :ARG1 (c1-5 / i))
      :ARG1 (c1-3 / hurry-01
                  :ARG0 (c1-1 / you
                              :mod (c1-6 / ass
                                         :part-of (c1-0 / bitch))
                              :ARG1-of c1-3)
                  :mode imperative))

# ::snt soon
# ::tokens ["soon"]
# ::lemmas ["soon"]
(c2-0 / soon)

# ::snt come over so i can fight you on this
# ::tokens ["come", "over", "so", "i", "can", "fight", "you", "on", "this"]
# ::lemmas ["come", "over", "so", "i", "can", "fight", "you", "on", "this"]
(c3-4 / come-01
      :ARG1 (c3-2 / you)
      :ARG4 (c3-1 / over)
      :purpose (c3-3 / possible-01
                     :ARG1 (c3-0 / fight-01
                                 :ARG0 (c3-5 / i)
                                 :ARG1 c3-2
                                 :ARG2 (c3-6 / this)))
      :mode imperative)

# ::snt because it's a great work of art that's why
# ::tokens ["because", "it", "'s", "a", "great", "work", "of", "art", "that", "'s", "why"]
# ::lemmas ["because", "it", "be", "a", "great", "work", "of", "art", "that", "be", "why"]
(c4-1 / cause-01
      :ARG0 (c4-2 / work-12
                  :ARG1 (c4-0 / art)
                  :mod (c4-4 / great))
      :ARG1 (c4-3 / that))

# ::snt eu quero v s a arruma de ligao dos crente puto que vo refilmar essa delicia
# ::tokens ["eu", "quero", "v", "s", "a", "arruma", "de", "ligao", "dos", "crente", "puto", "que", "vo", "refilmar", "essa", "delicia"]
# ::lemmas ["eu", "quero", "v", "s", "a", "arruma", "de", "ligao", "do", "crente", "puto", "que", "vo", "refilmar", "essa", "delicia"]
(c5-0 / multi-sentence
      :snt1 (c5-7 / amr-unintelligible
                  :value "eu")
      :snt2 (c5-6 / cause-01
                  :ARG0 c5-7
                  :mod (c5-4 / ligao)
                  :value "r-unintelligible")
      :ARG1 (c5-9 / crente-00
                  :ARG1 (c5-5 / puto))
      :snt3 (c5-2 / vo
                  :ARG0-of c5-6
                  :ARG1 (c5-1 / refilmar-00
                              :ARG1 (c5-3 / essa
                                          :mod (c5-8 / delicia)))
                  :mode expressive))

# ::snt o grito que eu to dandooOo
# ::tokens ["o", "grito", "que", "eu", "to", "dandooOo"]
# ::lemmas ["o", "grito", "que", "eu", "to", "dandoooo"]
(c6-1 / multi-sentence
      :snt1 (c6-5 / grit-01
                  :ARG0 (c6-0 / you))
      :snt2 (c6-3 / cause-01
                  :ARG0 (c6-7 / you)
                  :ARG1 (c6-6 / dandoo
                              :ARG1-of (c6-2 / say-01
                                             :ARG0 (c6-4 / i))
                              :mode expressive)))

# ::snt HOW DO I RT THIS A MILLION TIMES I AM SO EXCITED
# ::tokens ["HOW", "DO", "I", "RT", "THIS", "A", "MILLION", "TIMES", "I", "AM", "SO", "EXCITED"]
# ::lemmas ["how", "do", "i", "rt", "this", "a", "million", "times", "i", "be", "so", "excited"]
(c7-6 / impress-01
      :ARG0 (c7-2 / i)
      :degree (c7-1 / so)
      :manner (c7-7 / amr-unknown)
      :ARG1-of (c7-4 / cause-01
                     :ARG0 (c7-3 / read-01
                                 :ARG0 c7-2
                                 :ARG1 (c7-5 / this)
                                 :frequency (c7-0 / multiple
                                                  :op1 1000000))))

# ::snt Ted Neeley!!
# ::tokens ["Ted", "Neeley", "!", "!"]
# ::lemmas ["Ted", "Neeley", "!", "!"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "Ted"
                  :op2 "Neeley"))

# ::snt The Most Handsome Men in the World Poll
# ::tokens ["The", "Most", "Handsome", "Men", "in", "the", "World", "Poll"]
# ::lemmas ["the", "most", "Handsome", "Men", "in", "the", "World", "Poll"]
(c9-3 / poll-01
      :ARG2 (c9-2 / have-degree-91
                  :ARG1 (c9-0 / man)
                  :ARG2 (c9-5 / handsome)
                  :ARG3 (c9-1 / most)
                  :ARG5 (c9-4 / world)))

# ::snt Echoing! Casting Perfection Jesus and Judas ! PLZ! This has to be!
# ::tokens ["Echoing", "!", "Casting", "Perfection", "Jesus", "and", "Judas", "!", "PLZ", "!", "This", "has", "to", "be", "!"]
# ::lemmas ["Echoing", "!", "cast", "Perfection", "Jesus", "and", "Judas", "!", "PLZ", "!", "this", "have", "to", "be", "!"]
(c10-2 / multi-sentence
       :snt1 (c10-7 / choose-01
                    :mode expressive)
       :snt2 (c10-12 / cast-03
                     :ARG0 (c10-1 / you)
                     :ARG1 (c10-10 / and
                                   :op1 (c10-6 / person
                                               :name (c10-3 / name
                                                            :op1 "Jesus"))
                                   :op2 (c10-4 / person
                                               :name (c10-5 / name
                                                            :op1 "Judas"))
                                   :mod (c10-11 / perfection))
                     :mod (c10-8 / please
                                 :mode expressive)
                     :mode imperative)
       :snt3 (c10-0 / obligate-01
                    :ARG1 (c10-9 / this)
                    :mode expressive))

# ::snt Echoing! Casting Perfection Jesus and Judas ! PLZ! This has to be!
# ::tokens ["Echoing", "!", "Casting", "Perfection", "Jesus", "and", "Judas", "!", "PLZ", "!", "This", "has", "to", "be", "!"]
# ::lemmas ["Echoing", "!", "cast", "Perfection", "Jesus", "and", "Judas", "!", "PLZ", "!", "this", "have", "to", "be", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-7 / choose-01
                    :mode expressive)
       :snt2 (c11-12 / cast-03
                     :ARG0 (c11-1 / you)
                     :ARG1 (c11-10 / and
                                   :op1 (c11-6 / person
                                               :name (c11-3 / name
                                                            :op1 "Jesus"))
                                   :op2 (c11-4 / person
                                               :name (c11-5 / name
                                                            :op1 "Judas"))
                                   :mod (c11-11 / perfection))
                     :mod (c11-8 / please
                                 :mode expressive)
                     :mode imperative)
       :snt3 (c11-0 / obligate-01
                    :ARG1 (c11-9 / this)
                    :mode expressive))

# ::snt I hope that gets asked to be in "Jesus Christ superstar"?! I would love to see him play one of the pharaoh's Judas.
# ::tokens ["I", "hope", "that", "gets", "asked", "to", "be", "in", "\"", "Jesus", "Christ", "superstar", "\"", "?", "!", "I", "would", "love", "to", "see", "him", "play", "one", "of", "the", "pharaoh", "'s", "Judas", "."]
# ::lemmas ["i", "hope", "that", "gets", "ask", "to", "be", "in", "\"", "Jesus", "Christ", "superstar", "\"", "?", "!", "i", "would", "love", "to", "see", "he", "play", "one", "of", "the", "pharaoh", "'s", "Judas", "."]
(c12-13 / multi-sentence
        :snt1 (c12-7 / hope-01
                     :polarity (c12-9 / amr-unknown)
                     :ARG0 (c12-19 / i)
                     :ARG1 (c12-8 / ask-02
                                  :ARG1 (c12-0 / superstar
                                               :domain (c12-17 / person
                                                               :name (c12-16 / name
                                                                             :op1 "Jesus"
                                                                             :op2 "Christ")))
                                  :ARG2 (c12-10 / that)))
        :snt2 (c12-1 / love-02
                     :ARG0 (c12-5 / i)
                     :ARG1 (c12-4 / see-01
                                  :ARG0 c12-5
                                  :ARG1 (c12-14 / play-02
                                                :ARG0 (c12-18 / he)
                                                :ARG1 (c12-3 / person
                                                             :ARG1-of (c12-12 / include-91
                                                                              :ARG2 (c12-2 / person
                                                                                           :name (c12-15 / name
                                                                                                         :op1 "Judas")
                                                                                           :poss (c12-11 / person
                                                                                                         :ARG0-of (c12-6 / have-org-role-91
                                                                                                                         :ARG2 (c12-20 / pharaoh)))))
                                                             :quant 1)))))

# ::snt Sad news, this show is total blasphemy, an attempt to rewrite history. How it misrepresents Jesus Christ
# ::tokens ["Sad", "news", ",", "this", "show", "is", "total", "blasphemy", ",", "an", "attempt", "to", "rewrite", "history", ".", "How", "it", "misrepresents", "Jesus", "Christ"]
# ::lemmas ["sad", "news", ",", "this", "show", "be", "total", "blasphemy", ",", "an", "attempt", "to", "rewrite", "history", ".", "how", "it", "misrepresent", "Jesus", "Christ"]
(c13-3 / multi-sentence
       :snt1 (c13-2 / news
                    :ARG0-of (c13-4 / sad-02))
       :snt2 (c13-1 / blasphemy
                    :domain (c13-0 / show-04
                                   :mod (c13-12 / this)
                                   :ARG0-of (c13-5 / attempt-01
                                                   :ARG1 (c13-6 / rewrite-01
                                                                :ARG1 (c13-7 / history))))
                    :degree (c13-13 / total))
       :snt3 (c13-11 / thing
                     :manner-of (c13-8 / misrepresents-01
                                       :ARG0 c13-0
                                       :ARG1 (c13-9 / person
                                                    :name (c13-10 / name
                                                                  :op1 "Jesus"
                                                                  :op2 "Christ")))))

# ::snt :Adam lambert as judas
# ::tokens [":", "Adam", "lambert", "as", "judas"]
# ::lemmas [":", "Adam", "lambert", "as", "judas"]
(c14-2 / person
       :name (c14-0 / name
                    :op1 "Adam"
                    :op2 "Lambert")
       :prep-as (c14-3 / person
                       :name (c14-1 / name
                                    :op1 "Judas")))

# ::snt for JUDAS &lt;&lt;&lt;&lt;&lt; This must happen
# ::tokens ["for", "JUDAS", "&", "lt;&lt;&lt;&lt;&lt", ";", "This", "must", "happen"]
# ::lemmas ["for", "JUDAS", "&", "lt;&lt;&lt;&lt;&lt", ";", "this", "must", "happen"]
(c15-0 / obligate-01
       :ARG2 (c15-1 / event
                    :mod (c15-2 / this)))

# ::snt for Judas please!
# ::tokens ["for", "Judas", "please", "!"]
# ::lemmas ["for", "Judas", "please", "!"]
(c16-1 / benefit-01
       :ARG1 (c16-2 / person
                    :name (c16-0 / name
                                 :op1 "Judas"))
       :polite +)

# ::snt Jesus and Judas please
# ::tokens ["Jesus", "and", "Judas", "please"]
# ::lemmas ["Jesus", "and", "Judas", "please"]
(c17-4 / and
       :op1 (c17-3 / person
                   :name (c17-0 / name
                                :op1 "Jesus"))
       :op2 (c17-1 / person
                   :name (c17-2 / name
                                :op1 "Judas"))
       :polite +)

# ::snt Wait, u mean... not"StepBrother de Jesus!?" &amp;
# ::tokens ["Wait", ",", "u", "mean", "...", "not\"StepBrother", "de", "Jesus", "!", "?", "\"", "&", "amp", ";"]
# ::lemmas ["wait", ",", "u", "mean", "...", "not\"StepBrother", "de", "Jesus", "!", "?", "\"", "&", "amp", ";"]
(c18-9 / and
       :op1 (c18-7 / wait-01
                   :ARG1 (c18-0 / you)
                   :mode imperative)
       :op2 (c18-1 / mean-01
                   :ARG0 c18-0
                   :ARG2 (c18-4 / have-polarity-91
                                :ARG1 (c18-5 / person
                                             :name (c18-2 / name
                                                          :op1 "StepBrother"
                                                          :op2 "de"
                                                          :op3 "Jesus"))
                                :polarity (c18-8 / amr-unknown)
                                :ARG2 -))
       :op3 (c18-3 / person
                   :name (c18-6 / name
                                :op1 "&amp")))

# ::snt This is snark "This year, NBC will air Bye Bye Birdie w Jennifer Lopez.Jesus Christ Superstar is planned Easter Sunday, April , ."
# ::tokens ["This", "is", "snark", "\"", "This", "year", ",", "NBC", "will", "air", "Bye", "Bye", "Birdie", "w", "Jennifer", "Lopez", ".", "Jesus", "Christ", "Superstar", "is", "planned", "Easter", "Sunday", ",", "April", ",", ".", "\""]
# ::lemmas ["this", "be", "snark", "\"", "This", "year", ",", "NBC", "will", "air", "Bye", "Bye", "Birdie", "w", "Jennifer", "Lopez", ".", "Jesus", "Christ", "Superstar", "be", "plan", "Easter", "Sunday", ",", "April", ",", ".", "\""]
(c19-3 / multi-sentence
       :snt1 (c19-5 / snark
                    :domain (c19-12 / this))
       :snt2 (c19-14 / air-01
                     :ARG0 (c19-8 / publication
                                  :name (c19-4 / name
                                               :op1 "NBC"))
                     :ARG1 (c19-1 / broadcast-program
                                  :name (c19-7 / name
                                               :op1 " Bye"
                                               :op2 "By"
                                               :op3 "Birdie")
                                  :accompanier (c19-6 / person
                                                      :name (c19-9 / name
                                                                   :op1 "Jennifer"
                                                                   :op2 "Lopez")))
                     :time (c19-2 / year
                                  :mod (c19-16 / this)))
       :snt3 (c19-15 / plan-01
                     :ARG1 (c19-10 / broadcast-program
                                   :name (c19-11 / name
                                                 :op1 "Jesus"
                                                 :op2 "Christ"
                                                 :op3 "Superstar"))
                     :ARG3 (c19-0 / festival
                                  :name (c19-13 / name
                                                :op1 "Easter"
                                                :op2 "Sunday")
                                  :month 4)))

# ::snt CAMEO! How about STAR!!! Nobody does it better than Ted, at ANY age!
# ::tokens ["CAMEO", "!", "How", "about", "STAR", "!", "!", "!", "Nobody", "does", "it", "better", "than", "Ted", ",", "at", "ANY", "age", "!"]
# ::lemmas ["CAMEO", "!", "how", "about", "STAR", "!", "!", "!", "nobody", "do", "it", "well", "than", "Ted", ",", "at", "any", "age", "!"]
(c20-0 / multi-sentence
       :snt1 (c20-7 / cambodia
                    :mode expressive)
       :snt2 (c20-2 / say-01
                    :ARG1 (c20-10 / amr-unknown)
                    :mode expressive)
       :snt3 (c20-12 / do-02
                     :ARG0 (c20-1 / nobody)
                     :ARG1 (c20-9 / it)
                     :ARG1-of (c20-11 / good-02
                                      :ARG2-of (c20-3 / have-degree-91
                                                      :ARG1 c20-12
                                                      :ARG3 (c20-4 / more)
                                                      :ARG4 (c20-5 / person
                                                                   :name (c20-6 / name
                                                                                :op1 "Ted"))))
                     :time (c20-13 / age-01
                                   :mod (c20-8 / any))))

# ::snt Thanks for the snark. I read the article. No mention of BBB. Also, headline says NEXT. Don't assume I didn't read it. I'm not an idiot.
# ::tokens ["Thanks", "for", "the", "snark", ".", "I", "read", "the", "article", ".", "No", "mention", "of", "BBB", ".", "Also", ",", "headline", "says", "NEXT", ".", "Do", "n't", "assume", "I", "did", "n't", "read", "it", ".", "I", "'m", "not", "an", "idiot", "."]
# ::lemmas ["thank", "for", "the", "snark", ".", "i", "read", "the", "article", ".", "no", "mention", "of", "BBB", ".", "also", ",", "headline", "say", "NEXT", ".", "do", "not", "assume", "i", "do", "not", "read", "it", ".", "i", "be", "not", "an", "idiot", "."]
(c21-2 / multi-sentence
       :snt1 (c21-12 / thank-01
                     :ARG0 (c21-11 / i)
                     :ARG1 (c21-1 / you)
                     :ARG2 (c21-4 / snark-01
                                  :ARG0 c21-1))
       :snt2 (c21-6 / read-01
                    :ARG0 (c21-5 / i)
                    :ARG1 (c21-7 / article))
       :snt3 (c21-8 / mention-01
                    :ARG1 (c21-9 / person
                                 :name (c21-3 / name
                                              :op1 "BBB"))
                    :mod (c21-13 / also)
                    :polarity -)
       :snt4 (c21-10 / assume-02
                     :ARG0 c21-1
                     :polarity -
                     :mode imperative)
       :ARG1 (c21-14 / read-01
                     :ARG0 (c21-15 / i)
                     :ARG1 (c21-0 / it)
                     :polarity -)
       :snt5 (c21-16 / idiot
                     :domain c21-15
                     :polarity -))

# ::snt This is the news we all need at this moment
# ::tokens ["This", "is", "the", "news", "we", "all", "need", "at", "this", "moment"]
# ::lemmas ["this", "be", "the", "news", "we", "all", "need", "at", "this", "moment"]
(c22-1 / news
       :ARG1-of (c22-2 / need-01
                       :ARG0 (c22-3 / we
                                    :mod (c22-5 / all))
                       :time (c22-0 / moment
                                    :mod (c22-4 / this)))
       :domain (c22-6 / this))

# ::snt as Jesus???
# ::tokens ["as", "Jesus", "?", "?", "?"]
# ::lemmas ["as", "Jesus", "?", "?", "?"]
(c23-0 / resemble-01
       :ARG2 (c23-2 / person
                    :name (c23-1 / name
                                 :op1 "Jesus"))
       :polarity (c23-3 / amr-unknown))

# ::snt I vote for Trump as Pontius Pilate! It's live, like Reality TV. It's type casting, but hey, if the sandal fits...
# ::tokens ["I", "vote", "for", "Trump", "as", "Pontius", "Pilate", "!", "It", "'s", "live", ",", "like", "Reality", "TV", ".", "It", "'s", "type", "casting", ",", "but", "hey", ",", "if", "the", "sandal", "fits", "..."]
# ::lemmas ["i", "vote", "for", "Trump", "as", "Pontius", "Pilate", "!", "it", "be", "live", ",", "like", "Reality", "TV", ".", "it", "be", "type", "casting", ",", "but", "hey", ",", "if", "the", "sandal", "fit", "..."]
(c24-9 / multi-sentence
       :snt1 (c24-3 / vote-01
                    :ARG0 (c24-19 / i)
                    :ARG1 (c24-16 / person
                                  :name (c24-14 / name
                                                :op1 "Trump"))
                    :ARG3 (c24-10 / person
                                  :name (c24-11 / name
                                                :op1 "Pontius"
                                                :op2 "Pilate")))
       :snt2 (c24-6 / and
                    :op1 (c24-1 / live
                                :domain (c24-2 / it)
                                :ARG1-of (c24-15 / resemble-01
                                                 :ARG2 (c24-8 / broadcast-program
                                                              :name (c24-17 / name
                                                                            :op1 "reality"
                                                                            :op2 "TV"))))
                    :op2 (c24-12 / cast-02
                                 :mod (c24-5 / type)
                                 :domain (c24-7 / it))
                    :concession-of (c24-4 / have-condition-91
                                          :ARG2 (c24-13 / fit-06
                                                        :ARG1 (c24-0 / sandal))
                                          :mod (c24-18 / hey
                                                       :mode expressive))))

# ::snt Ted Neel will forever be my perfect performer of this roll
# ::tokens ["Ted", "Neel", "will", "forever", "be", "my", "perfect", "performer", "of", "this", "roll"]
# ::lemmas ["Ted", "Neel", "will", "forever", "be", "my", "perfect", "performer", "of", "this", "roll"]
(c26-4 / person
       :name (c26-1 / name
                    :op1 "Ted"
                    :op2 "Neel")
       :ARG0-of (c26-2 / perform-01
                       :ARG2 (c26-3 / roll
                                    :mod (c26-6 / this))
                       :ARG1-of (c26-7 / perfect-02)
                       :poss (c26-5 / i))
       :time (c26-0 / forever))

# ::snt You mean Ricky Gervais?
# ::tokens ["You", "mean", "Ricky", "Gervais", "?"]
# ::lemmas ["you", "mean", "Ricky", "Gervais", "?"]
(c27-2 / mean-01
       :ARG0 (c27-0 / you)
       :ARG2 (c27-3 / person
                    :name (c27-1 / name
                                 :op1 "Ricky"
                                 :op2 "Gervais"))
       :polarity (c27-4 / amr-unknown))

# ::snt That's this year. JCS is . Read the article.
# ::tokens ["That", "'s", "this", "year", ".", "JCS", "is", ".", "Read", "the", "article", "."]
# ::lemmas ["that", "be", "this", "year", ".", "JCS", "be", ".", "read", "the", "article", "."]
(c28-1 / multi-sentence
       :snt1 (c28-0 / year
                    :mod (c28-4 / this)
                    :domain (c28-5 / that))
       :snt2 (c28-2 / read-01
                    :ARG0 (c28-6 / you)
                    :ARG1 (c28-3 / article)
                    :mode imperative))

# ::snt Lol he does!
# ::tokens ["Lol", "he", "does", "!"]
# ::lemmas ["Lol", "he", "do", "!"]
(c29-0 / do-02
       :ARG0 (c29-2 / he)
       :ARG2-of (c29-3 / laugh-01
                       :manner (c29-1 / loud)
                       :mode expressive)
       :mode expressive)

# ::snt as if the Health Care Bill wan't porn enough for
# ::tokens ["as", "if", "the", "Health", "Care", "Bill", "wan't", "porn", "enough", "for"]
# ::lemmas ["as", "if", "the", "Health", "Care", "Bill", "wan't", "porn", "enough", "for"]
(c30-2 / have-condition-91
       :ARG2 (c30-3 / porn
                    :ARG2-of (c30-6 / have-degree-91
                                    :ARG1 (c30-0 / bill
                                                 :topic (c30-5 / care-03
                                                               :ARG1 (c30-1 / health)))
                                    :ARG3 (c30-4 / enough))
                    :polarity -))

# ::snt Did we forget about JLo and Bye Bye Birdie? Or did NBC change their mind?
# ::tokens ["Did", "we", "forget", "about", "JLo", "and", "Bye", "Bye", "Birdie", "?", "Or", "did", "NBC", "change", "their", "mind", "?"]
# ::lemmas ["do", "we", "forget", "about", "jlo", "and", "Bye", "Bye", "Birdie", "?", "or", "do", "NBC", "change", "their", "mind", "?"]
(c31-2 / multi-sentence
       :snt1 (c31-0 / forget-01
                    :ARG0 (c31-9 / we)
                    :ARG1 (c31-13 / and
                                  :op1 (c31-6 / person
                                              :name (c31-3 / name
                                                           :op1 "JLo"))
                                  :op2 (c31-4 / person
                                              :name (c31-5 / name
                                                           :op1 " Bye"
                                                           :op2 "By"
                                                           :op3 "Birdie")))
                    :polarity (c31-12 / amr-unknown))
       :snt2 (c31-1 / or
                    :op2 (c31-10 / change-01
                                 :ARG0 (c31-14 / publication
                                               :name (c31-7 / name
                                                            :op1 "NBC"))
                                 :ARG1 (c31-8 / mind-05
                                              :ARG0 c31-14)
                                 :polarity (c31-11 / amr-unknown))))

# ::snt can they get to cameo maybe??!!
# ::tokens ["can", "they", "get", "to", "cameo", "maybe", "?", "?", "!", "!"]
# ::lemmas ["can", "they", "get", "to", "cameo", "maybe", "?", "?", "!", "!"]
(c32-2 / possible-01
       :ARG1 (c32-1 / cameo-01
                    :ARG0 (c32-3 / they))
       :polarity (c32-0 / amr-unknown))

# ::snt Shit. Now I have to watch.
# ::tokens ["Shit", ".", "Now", "I", "have", "to", "watch", "."]
# ::lemmas ["shit", ".", "now", "i", "have", "to", "watch", "."]
(c33-1 / multi-sentence
       :snt1 (c33-3 / shit-01)
       :snt2 (c33-0 / obligate-01
                    :ARG1 (c33-5 / i)
                    :ARG2 (c33-4 / watch-01
                                 :ARG0 c33-5)
                    :time (c33-2 / now)))

# ::snt Thanks for the warning!
# ::tokens ["Thanks", "for", "the", "warning", "!"]
# ::lemmas ["thank", "for", "the", "warning", "!"]
(c34-3 / thank-01
       :ARG0 (c34-2 / i)
       :ARG1 (c34-1 / you)
       :ARG2 (c34-0 / warn-01
                    :ARG0 c34-1)
       :mode expressive)

# ::snt Awesome!!!
# ::tokens ["Awesome", "!", "!", "!"]
# ::lemmas ["Awesome", "!", "!", "!"]
(c35-0 / awe-01
       :mode expressive)

# ::snt I just don't trust what NBC will do to it
# ::tokens ["I", "just", "do", "n't", "trust", "what", "NBC", "will", "do", "to", "it"]
# ::lemmas ["i", "just", "do", "not", "trust", "what", "NBC", "will", "do", "to", "it"]
(c36-3 / trust-02
       :ARG0 (c36-4 / i)
       :ARG1 (c36-5 / thing
                    :ARG1-of (c36-7 / do-02
                                    :ARG0 (c36-2 / publication
                                                 :name (c36-0 / name
                                                              :op1 "NBC"))
                                    :ARG2 (c36-1 / it)))
       :mod (c36-6 / just)
       :polarity -)

# ::snt hooray
# ::tokens ["hooray"]
# ::lemmas ["hooray"]
(c37-0 / hooray
       :mode expressive)

# ::snt Every time I look at you I don't understand Why you let the things you did get so out of hand. You'd of managed better if you had it planned
# ::tokens ["Every", "time", "I", "look", "at", "you", "I", "do", "n't", "understand", "Why", "you", "let", "the", "things", "you", "did", "get", "so", "out", "of", "hand", ".", "You", "'d", "of", "managed", "better", "if", "you", "had", "it", "planned"]
# ::lemmas ["every", "time", "i", "look", "at", "you", "i", "do", "not", "understand", "why", "you", "let", "the", "thing", "you", "do", "get", "so", "out", "of", "hand", ".", "you", "would", "of", "manage", "well", "if", "you", "have", "it", "plan"]
(c38-12 / multi-sentence
        :snt1 (c38-16 / understand-01
                      :ARG0 (c38-20 / i)
                      :ARG1 (c38-8 / thing
                                   :ARG0-of (c38-13 / cause-01
                                                    :ARG1 (c38-0 / let-01
                                                                 :ARG0 (c38-4 / you)
                                                                 :ARG1 (c38-10 / get-03
                                                                               :ARG1 (c38-14 / thing
                                                                                             :ARG2 (c38-3 / out-of-hand-10
                                                                                                          :ARG1 c38-14)
                                                                                             :ARG1-of c38-10)))))
                      :polarity -)
        :frequency (c38-17 / rate-entity-91
                           :ARG4 (c38-11 / look-01
                                         :ARG0 c38-20
                                         :ARG1 (c38-9 / you)))
        :snt2 (c38-6 / have-condition-91
                     :ARG1 (c38-7 / manage-01
                                  :ARG0 (c38-2 / you)
                                  :ARG1-of (c38-1 / good-02
                                                  :ARG2-of (c38-19 / have-degree-91
                                                                   :ARG1 c38-7
                                                                   :ARG3 (c38-15 / more))))
                     :ARG2 (c38-18 / plan-01
                                   :ARG0 c38-2
                                   :ARG1 (c38-5 / it))))

# ::snt Who the fuck is LuPone to trash like that? Still hurt for ? Bitch.
# ::tokens ["Who", "the", "fuck", "is", "LuPone", "to", "trash", "like", "that", "?", "Still", "hurt", "for", "?", "Bitch", "."]
# ::lemmas ["who", "the", "fuck", "be", "LuPone", "to", "trash", "like", "that", "?", "still", "hurt", "for", "?", "Bitch", "."]
(c39-2 / multi-sentence
       :snt1 (c39-8 / person
                    :name (c39-1 / name
                                 :op1 "LuPone")
                    :ARG1-of (c39-10 / trash-01
                                     :ARG1-of (c39-5 / resemble-01
                                                     :ARG2 (c39-11 / that)))
                    :domain (c39-6 / amr-unknown
                                   :mod (c39-0 / fuck
                                               :mode expressive)))
       :snt2 (c39-7 / hurt-01
                    :ARG1 (c39-3 / person
                                 :name (c39-9 / name
                                              :op1 "Bitch"))
                    :mod (c39-4 / still)))

# ::snt Me encanta!
# ::tokens ["Me", "encanta", "!"]
# ::lemmas ["i", "encanta", "!"]
(c40-0 / cause-01
       :ARG0 (c40-1 / i)
       :mode expressive)

# ::snt god damn sure I ll be watching!
# ::tokens ["god", "damn", "sure", "I", "ll", "be", "watching", "!"]
# ::lemmas ["god", "damn", "sure", "i", "ll", "be", "watch", "!"]
(c41-1 / sure-02
       :ARG0 (c41-2 / person
                    :name (c41-0 / name
                                 :op1 "God"))
       :ARG1 (c41-3 / watch-01
                    :ARG0 (c41-4 / i))
       :degree (c41-5 / damn)
       :mode expressive)

# ::snt Jesus, would not approve of your language...
# ::tokens ["Jesus", ",", "would", "not", "approve", "of", "your", "language", "..."]
# ::lemmas ["Jesus", ",", "would", "not", "approve", "of", "your", "language", "..."]
(c42-5 / approve-01
       :ARG0 (c42-4 / i)
       :ARG1 (c42-3 / language
                    :poss (c42-0 / you))
       :mod (c42-2 / person
                   :name (c42-1 / name
                                :op1 "Jesus")
                   :mode expressive)
       :polarity -
       :mode expressive)

# ::snt I hope Adam Lambert is part of this production.
# ::tokens ["I", "hope", "Adam", "Lambert", "is", "part", "of", "this", "production", "."]
# ::lemmas ["i", "hope", "Adam", "Lambert", "be", "part", "of", "this", "production", "."]
(c43-3 / hope-01
       :ARG0 (c43-5 / i)
       :ARG1 (c43-2 / include-91
                    :ARG1 (c43-4 / person
                                 :name (c43-0 / name
                                              :op1 "Adam"
                                              :op2 "Lambert"))
                    :ARG2 (c43-1 / produce-01
                                 :mod (c43-6 / this))))

# ::snt Certainly was in the amazing Stratford Product a few years back. Best I had ever seen.
# ::tokens ["Certainly", "was", "in", "the", "amazing", "Stratford", "Product", "a", "few", "years", "back", ".", "Best", "I", "had", "ever", "seen", "."]
# ::lemmas ["certainly", "be", "in", "the", "amazing", "Stratford", "Product", "a", "few", "years", "back", ".", "good", "i", "have", "ever", "see", "."]
(c44-4 / multi-sentence
       :snt1 (c44-8 / product
                    :name (c44-3 / name
                                 :op1 "Stratford"
                                 :op2 "Product")
                    :ARG0-of (c44-14 / amaze-01)
                    :time (c44-1 / before
                                 :op1 (c44-7 / now)
                                 :quant (c44-0 / few
                                               :op1 (c44-12 / temporal-quantity
                                                            :unit (c44-2 / year)
                                                            :quant 1)))
                    :mod (c44-11 / certain))
       :snt2 (c44-15 / good-02
                     :ARG2-of (c44-9 / have-degree-91
                                     :ARG1 (c44-5 / see-01
                                                  :ARG0 (c44-13 / i)
                                                  :time (c44-6 / ever))
                                     :ARG3 (c44-10 / most))))

# ::snt Judas? To me, that's always been the lead role in Superstar.
# ::tokens ["Judas", "?", "To", "me", ",", "that", "'s", "always", "been", "the", "lead", "role", "in", "Superstar", "."]
# ::lemmas ["Judas", "?", "to", "i", ",", "that", "be", "always", "be", "the", "lead", "role", "in", "Superstar", "."]
(c45-2 / multi-sentence
       :snt1 (c45-6 / person
                    :name (c45-1 / name
                                 :op1 "Judas"))
       :snt2 (c45-0 / opine-01
                    :ARG0 (c45-9 / i)
                    :ARG1 (c45-3 / role
                                 :ARG2-of (c45-7 / lead-02
                                                 :ARG1 (c45-8 / work-of-art
                                                              :name (c45-5 / name
                                                                           :op1 "Superstar")))
                                 :domain (c45-10 / that)
                                 :time (c45-4 / always))))

# ::snt why dont they do a mohammed superstar?
# ::tokens ["why", "do", "nt", "they", "do", "a", "mohammed", "superstar", "?"]
# ::lemmas ["why", "do", "not", "they", "do", "a", "mohammed", "superstar", "?"]
(c46-3 / cause-01
       :ARG0 (c46-2 / amr-unknown)
       :ARG1 (c46-5 / do-02
                    :ARG0 (c46-4 / they)
                    :ARG1 (c46-1 / superstar
                                 :mod (c46-0 / mohammed))
                    :polarity -))

# ::snt Looking for professional Business card for your company or product.click here
# ::tokens ["Looking", "for", "professional", "Business", "card", "for", "your", "company", "or", "product.click", "here"]
# ::lemmas ["look", "for", "professional", "Business", "card", "for", "your", "company", "or", "product.click", "here"]
(c47-5 / look-01
       :ARG0 (c47-2 / you)
       :ARG1 (c47-7 / card
                    :mod (c47-1 / business)
                    :mod (c47-6 / professional)
                    :purpose (c47-0 / or
                                    :op1 (c47-8 / company)
                                    :op2 (c47-3 / product)
                                    :poss c47-2))
       :location (c47-4 / here))

# ::snt Wow, another white Jesus. At some point when will the lie stop. Was this Jesus from Omaha?
# ::tokens ["Wow", ",", "another", "white", "Jesus", ".", "At", "some", "point", "when", "will", "the", "lie", "stop", ".", "Was", "this", "Jesus", "from", "Omaha", "?"]
# ::lemmas ["wow", ",", "another", "white", "Jesus", ".", "at", "some", "point", "when", "will", "the", "lie", "stop", ".", "be", "this", "Jesus", "from", "Omaha", "?"]
(c48-2 / multi-sentence
       :snt1 (c48-6 / person
                    :name (c48-1 / name
                                 :op1 "Jesus")
                    :ARG1-of (c48-10 / white-02)
                    :mod (c48-14 / another)
                    :mod (c48-8 / wow
                                :mode expressive)
                    :mode expressive)
       :snt2 (c48-3 / stop-01
                    :ARG1 (c48-7 / lie-08)
                    :time (c48-4 / point
                                 :mod (c48-0 / some))
                    :time (c48-13 / amr-unknown))
       :snt3 (c48-15 / person
                     :polarity c48-13)
       :name (c48-5 / name
                    :op1 "Jesus")
       :source (c48-11 / city
                       :name (c48-9 / name
                                    :op1 "Omaha"))
       :domain (c48-12 / this))

# ::snt I will help you to enhance your image quality.For more information
# ::tokens ["I", "will", "help", "you", "to", "enhance", "your", "image", "quality", ".", "For", "more", "information"]
# ::lemmas ["i", "will", "help", "you", "to", "enhance", "your", "image", "quality", ".", "for", "more", "information"]
(c49-4 / help-01
       :ARG0 (c49-5 / i)
       :ARG1 (c49-3 / enhance-01
                    :ARG0 c49-5
                    :ARG1 (c49-6 / quality
                                 :mod (c49-2 / image)
                                 :poss (c49-0 / you
                                              :ARG2-of c49-4)))
       :purpose (c49-7 / information
                       :mod (c49-1 / more)))
