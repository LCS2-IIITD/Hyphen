# ::snt She needs to eat a cheeseburger and she will be fine. If she is so stressed with modeling, maybe this isn't for her. I swear I need to have a Dear Jan column, some people have no common sense.
# ::tokens ["She", "needs", "to", "eat", "a", "cheeseburger", "and", "she", "will", "be", "fine", ".", "If", "she", "is", "so", "stressed", "with", "modeling", ",", "maybe", "this", "is", "n't", "for", "her", ".", "I", "swear", "I", "need", "to", "have", "a", "Dear", "Jan", "column", ",", "some", "people", "have", "no", "common", "sense", "."]
# ::lemmas ["she", "need", "to", "eat", "a", "cheeseburger", "and", "she", "will", "be", "fine", ".", "if", "she", "be", "so", "stressed", "with", "modeling", ",", "maybe", "this", "be", "not", "for", "she", ".", "i", "swear", "i", "need", "to", "have", "a", "Dear", "Jan", "column", ",", "some", "people", "have", "no", "common", "sense", "."]
(c2-12 / multi-sentence
       :snt1 (c2-9 / and
                   :op1 (c2-18 / need-01
                               :ARG0 (c2-0 / she)
                               :ARG1 (c2-20 / eat-01
                                            :ARG0 c2-0
                                            :ARG1 (c2-16 / cheeseburger)))
                   :op2 (c2-17 / fine-04
                               :ARG1 c2-0))
       :snt2 (c2-21 / possible-01
                    :ARG1 (c2-6 / have-polarity-91
                                :ARG1 (c2-8 / this)
                                :beneficiary (c2-5 / she)
                                :ARG2 -)
                    :condition (c2-4 / stress-02
                                     :ARG0 (c2-7 / model-01
                                                 :ARG0 c2-5)
                                     :ARG1 c2-5
                                     :degree (c2-19 / so)))
       :snt3 (c2-1 / swear-01
                   :ARG0 (c2-23 / i)
                   :ARG1 (c2-15 / need-01
                                :ARG0 c2-23
                                :ARG1 (c2-10 / column
                                             :mod (c2-13 / person
                                                         :name (c2-22 / name
                                                                      :op1 "Dear"
                                                                      :op2 "Jan")))))
       :snt4 (c2-11 / sense-02
                    :ARG0 (c2-3 / person
                                :mod (c2-14 / some))
                    :mod (c2-2 / common)
                    :polarity -))

# ::snt Huh? Vitamins? WTH.
# ::tokens ["Huh", "?", "Vitamins", "?", "WTH", "."]
# ::lemmas ["Huh", "?", "Vitamins", "?", "WTH", "."]
(c3-0 / multi-sentence
      :snt1 (c3-5 / amr-unknown)
      :snt2 (c3-1 / vitamin
                  :polarity (c3-4 / amr-unknown))
      :snt3 (c3-3 / amr-unknown
                  :mod (c3-2 / heck
                             :mode expressive)))

# ::snt Bat comes to mind.....
# ::tokens ["Bat", "comes", "to", "mind", "....."]
# ::lemmas ["Bat", "come", "to", "mind", "....."]
(c4-0 / come-to-mind-09
      :ARG2 (c4-2 / person
                  :name (c4-1 / name
                              :op1 "Bat")))

# ::snt Oh dear
# ::tokens ["Oh", "dear"]
# ::lemmas ["oh", "dear"]
(c5-0 / dear
      :mod (c5-1 / oh))

# ::snt rd world problems
# ::tokens ["rd", "world", "problems"]
# ::lemmas ["rd", "world", "problem"]
(c6-1 / problem
      :mod (c6-0 / world
                 :ord (c6-2 / ordinal-entity
                            :value 3)))
