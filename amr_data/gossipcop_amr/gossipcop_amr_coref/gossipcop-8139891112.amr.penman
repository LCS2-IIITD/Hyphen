# ::snt Thanks!
# ::tokens ["Thanks", "!"]
# ::lemmas ["thank", "!"]
(c1-1 / thank-01
      :ARG1 (c1-0 / you)
      :mode expressive)

# ::snt resource as well.
# ::tokens ["resource", "as", "well", "."]
# ::lemmas ["resource", "as", "well", "."]
(c2-0 / resource
      :mod (c2-1 / as-well))

# ::snt I've heard I can use that with my local library card so I think I'll check it out
# ::tokens ["I", "'ve", "heard", "I", "can", "use", "that", "with", "my", "local", "library", "card", "so", "I", "think", "I", "'ll", "check", "it", "out"]
# ::lemmas ["i", "'ve", "hear", "i", "can", "use", "that", "with", "my", "local", "library", "card", "so", "i", "think", "i", "'ll", "check", "it", "out"]
(c3-0 / hear-01
      :ARG0 (c3-5 / i)
      :ARG1 (c3-1 / possible-01
                  :ARG1 (c3-9 / use-01
                              :ARG0 c3-5
                              :ARG1 (c3-6 / that)
                              :ARG2 (c3-3 / card
                                          :mod (c3-2 / library)
                                          :ARG1-of (c3-8 / local-02)
                                          :poss c3-5)))
      :ARG0-of (c3-10 / cause-01
                      :ARG1 (c3-7 / think-01
                                  :ARG0 c3-5
                                  :ARG1 (c3-4 / check-out-05
                                              :ARG0 c3-5
                                              :ARG1 c3-6))))

# ::snt Lynda?
# ::tokens ["Lynda", "?"]
# ::lemmas ["Lynda", "?"]
(c4-1 / person
      :polarity (c4-2 / amr-unknown)
      :name (c4-0 / name
                  :op1 "Lynda"))

# ::snt you got dis! Keep your head up!
# ::tokens ["you", "got", "dis", "!", "Keep", "your", "head", "up", "!"]
# ::lemmas ["you", "get", "dis", "!", "keep", "your", "head", "up", "!"]
(c5-1 / multi-sentence
      :snt1 (c5-4 / get-02
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-5 / dis))
      :snt2 (c5-3 / keep-up-10
                  :ARG0 (c5-6 / you
                              :part (c5-2 / head
                                          :ARG1-of c5-3))
                  :mode imperative))

# ::snt Hey story gets very interesting (and probably polarizing)
# ::tokens ["Hey", "story", "gets", "very", "interesting", "(", "and", "probably", "polarizing", ")"]
# ::lemmas ["hey", "story", "get", "very", "interesting", "(", "and", "probably", "polarize", ")"]
(c6-7 / get-03
      :ARG1 (c6-1 / story)
      :ARG2 (c6-6 / and
                  :op1 (c6-5 / interest-01
                             :ARG0 c6-1
                             :degree (c6-2 / very))
                  :op2 (c6-4 / polarize-01
                             :ARG0 c6-1
                             :mod (c6-0 / probable)))
      :mod (c6-3 / hey
                 :mode expressive))

# ::snt Incredibly intense, and Im only eight episodes in. Slightly disappointed in Trish so far, was too psyched by You need a sidekick = Hellcat I guess
# ::tokens ["Incredibly", "intense", ",", "and", "I", "m", "only", "eight", "episodes", "in", ".", "Slightly", "disappointed", "in", "Trish", "so", "far", ",", "was", "too", "psyched", "by", "You", "need", "a", "sidekick", "=", "Hellcat", "I", "guess"]
# ::lemmas ["incredibly", "intense", ",", "and", "i", "m", "only", "eight", "episode", "in", ".", "slightly", "disappointed", "in", "Trish", "so", "far", ",", "be", "too", "psyche", "by", "you", "need", "a", "sidekick", "=", "hellcat", "i", "guess"]
(c7-12 / multi-sentence
       :snt1 (c7-7 / and
                   :op1 (c7-18 / intense-02
                               :ARG1 (c7-5 / i)
                               :degree (c7-11 / incredible))
                   :op2 (c7-16 / episode
                               :time (c7-0 / so-far)
                               :mod (c7-2 / only)
                               :quant 8))
       :snt2 (c7-19 / disappoint-01
                    :ARG0 (c7-4 / you)
                    :ARG1 c7-5
                    :degree (c7-3 / slight)
                    :time c7-0)
       :snt3 (c7-17 / psych-01
                    :ARG0 (c7-8 / you)
                    :ARG1-of (c7-14 / cause-01
                                    :ARG0 (c7-15 / need-01
                                                 :ARG0 c7-8
                                                 :ARG1 (c7-1 / sidekick)
                                                 :ARG1-of (c7-9 / equal-01
                                                                :ARG2 (c7-6 / animal
                                                                            :name (c7-13 / name
                                                                                         :op1 "Hellcat")))))
                    :ARG1-of (c7-10 / guess-01
                                    :ARG0 c7-5)))

# ::snt Berber?
# ::tokens ["Berber", "?"]
# ::lemmas ["Berber", "?"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "Berber")
      :polarity (c8-2 / amr-unknown))

# ::snt Thats why I really admire Jessica. She succeeded w whatever she wants knowing all those walls pressing her down
# ::tokens ["That", "s", "why", "I", "really", "admire", "Jessica", ".", "She", "succeeded", "w", "whatever", "she", "wants", "knowing", "all", "those", "walls", "pressing", "her", "down"]
# ::lemmas ["that", "s", "why", "i", "really", "admire", "Jessica", ".", "she", "succeed", "w", "whatever", "she", "want", "know", "all", "those", "wall", "press", "she", "down"]
(c9-1 / multi-sentence
      :snt1 (c9-8 / cause-01
                  :ARG0 (c9-10 / that)
                  :ARG1 (c9-12 / admire-01
                               :ARG0 (c9-11 / i)
                               :ARG1 (c9-6 / person
                                           :name (c9-2 / name
                                                       :op1 "Jessica"))
                               :degree (c9-5 / really)))
      :snt2 (c9-3 / succeed-01
                  :ARG0 (c9-0 / she)
                  :manner (c9-7 / know-01
                                :ARG0 c9-0
                                :ARG1 (c9-4 / press-01
                                            :ARG0 (c9-9 / wall
                                                        :mod (c9-13 / all)
                                                        :mod c9-10))
                                :ARG1 c9-0
                                :direction (c9-14 / down))))

# ::snt Thats why i cant really matter how angry i am w the person, i wont throw her knowing the things shell be facing bcos of my emo
# ::tokens ["That", "s", "why", "i", "ca", "nt", "really", "matter", "how", "angry", "i", "am", "w", "the", "person", ",", "i", "wo", "nt", "throw", "her", "knowing", "the", "things", "shell", "be", "facing", "bcos", "of", "my", "emo"]
# ::lemmas ["that", "s", "why", "i", "can", "not", "really", "matter", "how", "angry", "i", "be", "w", "the", "person", ",", "i", "will", "not", "throw", "she", "know", "the", "thing", "shell", "be", "face", "bco", "of", "my", "emo"]
(c10-9 / cause-01
       :ARG0 (c10-11 / that)
       :ARG1 (c10-7 / possible-01
                    :ARG1 (c10-1 / matter-01
                                 :ARG1 (c10-13 / thing
                                               :degree-of (c10-3 / angry
                                                                 :domain (c10-12 / i)
                                                                 :topic (c10-2 / person)))
                                 :ARG1-of (c10-4 / real-04))
                    :polarity -)
       :ARG1-of (c10-15 / cause-01
                        :ARG0 (c10-14 / throw-01
                                      :ARG0 c10-12
                                      :ARG1 c10-2
                                      :manner (c10-8 / know-01
                                                     :ARG0 c10-12
                                                     :ARG1 (c10-5 / thing
                                                                  :ARG1-of (c10-0 / face-01
                                                                                  :ARG0 c10-2)))
                                      :ARG1-of (c10-10 / cause-01
                                                       :ARG0 (c10-6 / emo
                                                                    :poss c10-12))
                                      :polarity -)))

# ::snt thanks :,(
# ::tokens ["thanks", ":", ",", "("]
# ::lemmas ["thank", ":", ",", "("]
(c11-0 / thank-01)

# ::snt theres way more to come, u gotta catch up
# ::tokens ["there", "s", "way", "more", "to", "come", ",", "u", "got", "ta", "catch", "up"]
# ::lemmas ["there", "s", "way", "more", "to", "come", ",", "u", "got", "to", "catch", "up"]
(c12-3 / come-01
       :ARG1 (c12-6 / thing
                    :mod (c12-2 / more
                                :quant (c12-4 / way)))
       :ARG0-of (c12-7 / cause-01
                       :ARG1 (c12-0 / obligate-01
                                    :ARG1 (c12-1 / you)
                                    :ARG2 (c12-5 / catch-up-04
                                                 :ARG1 c12-1))))

# ::snt guess that's what happens when you're not caught up
# ::tokens ["guess", "that", "'s", "what", "happens", "when", "you", "'re", "not", "caught", "up"]
# ::lemmas ["guess", "that", "be", "what", "happen", "when", "you", "be", "not", "catch", "up"]
(c13-4 / guess-01
       :ARG1 (c13-1 / event
                    :domain (c13-3 / that)
                    :time (c13-2 / catch-up-04
                                 :ARG1 (c13-0 / you)
                                 :polarity -)))

# ::snt thanks for ruining the show, dick.
# ::tokens ["thanks", "for", "ruining", "the", "show", ",", "dick", "."]
# ::lemmas ["thank", "for", "ruin", "the", "show", ",", "dick", "."]
(c14-1 / say-01
       :ARG0 (c14-3 / i)
       :ARG1 (c14-4 / thank-01
                    :ARG0 c14-3
                    :ARG1 (c14-5 / dick)
                    :ARG2 (c14-2 / ruin-01
                                 :ARG0 c14-5
                                 :ARG1 (c14-0 / show)))
       :ARG2 c14-5)

# ::snt trust there is so much more the come
# ::tokens ["trust", "there", "is", "so", "much", "more", "the", "come"]
# ::lemmas ["trust", "there", "be", "so", "much", "more", "the", "come"]
(c15-6 / trust-02
       :ARG0 (c15-0 / you)
       :ARG1 (c15-1 / more
                    :ARG1-of (c15-4 / have-quant-91
                                    :ARG2 (c15-3 / much)
                                    :ARG3 (c15-2 / so))
                    :ARG1-of (c15-5 / come-01))
       :mode imperative)

# ::snt he also met you at the bottom of the stairs where you broke your foot for the th time
# ::tokens ["he", "also", "met", "you", "at", "the", "bottom", "of", "the", "stairs", "where", "you", "broke", "your", "foot", "for", "the", "th", "time"]
# ::lemmas ["he", "also", "meet", "you", "at", "the", "bottom", "of", "the", "stair", "where", "you", "break", "your", "foot", "for", "the", "th", "time"]
(c16-4 / meet-02
       :ARG0 (c16-6 / he)
       :ARG1 (c16-3 / you
                    :part (c16-0 / foot))
       :location (c16-2 / bottom
                        :part-of (c16-5 / stair)
                        :location-of (c16-7 / break-01
                                            :ARG0 c16-3
                                            :ARG1 c16-0
                                            :ord (c16-1 / ordinal-entity
                                                        :value 1)))
       :mod (c16-8 / also))
