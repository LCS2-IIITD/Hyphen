# ::snt Now, Ryan Gosling always looks like a winner, as his look is crisp and classicand a nicer Canadian can't be found!
# ::tokens ["Now", ",", "Ryan", "Gosling", "always", "looks", "like", "a", "winner", ",", "as", "his", "look", "is", "crisp", "and", "classicand", "a", "nicer", "Canadian", "ca", "n't", "be", "found", "!"]
# ::lemmas ["now", ",", "Ryan", "Gosling", "always", "look", "like", "a", "winner", ",", "as", "his", "look", "be", "crisp", "and", "classicand", "a", "nice", "Canadian", "can", "not", "be", "find", "!"]
(c1-0 / look-02
      :ARG0 (c1-18 / person
                   :name (c1-17 / name
                                :op1 "Ryan"
                                :op2 "Gosling"))
      :ARG1 (c1-11 / person
                   :ARG0-of (c1-20 / win-01))
      :time (c1-7 / always)
      :ARG1-of (c1-13 / cause-01
                      :ARG0 (c1-6 / and
                                  :op1 (c1-5 / and
                                             :op1 (c1-9 / crisp)
                                             :op2 (c1-2 / classic)
                                             :domain (c1-8 / look-02
                                                           :ARG0 c1-18))
                                  :op2 (c1-3 / possible-01
                                             :ARG1 (c1-16 / find-01
                                                          :ARG1 (c1-1 / person
                                                                      :mod (c1-15 / country
                                                                                  :name (c1-12 / name
                                                                                               :op1 "Canada"))
                                                                      :ARG1-of (c1-19 / nice-01)
                                                                      :ARG1-of (c1-4 / have-degree-91
                                                                                     :ARG2 c1-19
                                                                                     :ARG1 c1-1)
                                                                      :ARG3 (c1-10 / more)))
                                             :polarity -)))
      :time (c1-14 / now))

# ::snt hello mis laerry
# ::tokens ["hello", "mis", "laerry"]
# ::lemmas ["hello", "mis", "laerry"]
(c2-0 / hello
      :mod (c2-1 / miscellaneous)
      :mode expressive)

# ::snt I'm glad Moonlight won best film (drama).
# ::tokens ["I", "'m", "glad", "Moonlight", "won", "best", "film", "(", "drama", ")", "."]
# ::lemmas ["i", "be", "glad", "Moonlight", "win", "good", "film", "(", "drama", ")", "."]
(c3-9 / glad-02
      :ARG0 (c3-6 / win-01
                  :ARG0 (c3-0 / film
                              :name (c3-1 / name
                                          :op1 "Moonlight"))
                  :ARG1 (c3-5 / film
                              :ARG1-of (c3-3 / have-degree-91
                                             :ARG2 (c3-7 / good-02
                                                         :ARG1 c3-5)
                                             :ARG3 (c3-2 / most))
                              :ARG1-of (c3-4 / mean-01
                                             :ARG2 (c3-10 / drama))))
      :ARG1 (c3-8 / i))

# ::snt Now, Ryan Gosling always looks like a winner, as his look is crisp and classicand a nicer Canadian can't be found!
# ::tokens ["Now", ",", "Ryan", "Gosling", "always", "looks", "like", "a", "winner", ",", "as", "his", "look", "is", "crisp", "and", "classicand", "a", "nicer", "Canadian", "ca", "n't", "be", "found", "!"]
# ::lemmas ["now", ",", "Ryan", "Gosling", "always", "look", "like", "a", "winner", ",", "as", "his", "look", "be", "crisp", "and", "classicand", "a", "nice", "Canadian", "can", "not", "be", "find", "!"]
(c4-0 / look-02
      :ARG0 (c4-18 / person
                   :name (c4-17 / name
                                :op1 "Ryan"
                                :op2 "Gosling"))
      :ARG1 (c4-11 / person
                   :ARG0-of (c4-20 / win-01))
      :time (c4-7 / always)
      :ARG1-of (c4-13 / cause-01
                      :ARG0 (c4-6 / and
                                  :op1 (c4-5 / and
                                             :op1 (c4-9 / crisp)
                                             :op2 (c4-2 / classic)
                                             :domain (c4-8 / look-02
                                                           :ARG0 c4-18))
                                  :op2 (c4-3 / possible-01
                                             :ARG1 (c4-16 / find-01
                                                          :ARG1 (c4-1 / person
                                                                      :mod (c4-15 / country
                                                                                  :name (c4-12 / name
                                                                                               :op1 "Canada"))
                                                                      :ARG1-of (c4-19 / nice-01)
                                                                      :ARG1-of (c4-4 / have-degree-91
                                                                                     :ARG2 c4-19
                                                                                     :ARG1 c4-1)
                                                                      :ARG3 (c4-10 / more)))
                                             :polarity -)))
      :time (c4-14 / now))

# ::snt Now, Ryan Gosling always looks like a winner, as his look is crisp and classicand a nicer Canadian can't be found!
# ::tokens ["Now", ",", "Ryan", "Gosling", "always", "looks", "like", "a", "winner", ",", "as", "his", "look", "is", "crisp", "and", "classicand", "a", "nicer", "Canadian", "ca", "n't", "be", "found", "!"]
# ::lemmas ["now", ",", "Ryan", "Gosling", "always", "look", "like", "a", "winner", ",", "as", "his", "look", "be", "crisp", "and", "classicand", "a", "nice", "Canadian", "can", "not", "be", "find", "!"]
(c5-0 / look-02
      :ARG0 (c5-18 / person
                   :name (c5-17 / name
                                :op1 "Ryan"
                                :op2 "Gosling"))
      :ARG1 (c5-11 / person
                   :ARG0-of (c5-20 / win-01))
      :time (c5-7 / always)
      :ARG1-of (c5-13 / cause-01
                      :ARG0 (c5-6 / and
                                  :op1 (c5-5 / and
                                             :op1 (c5-9 / crisp)
                                             :op2 (c5-2 / classic)
                                             :domain (c5-8 / look-02
                                                           :ARG0 c5-18))
                                  :op2 (c5-3 / possible-01
                                             :ARG1 (c5-16 / find-01
                                                          :ARG1 (c5-1 / person
                                                                      :mod (c5-15 / country
                                                                                  :name (c5-12 / name
                                                                                               :op1 "Canada"))
                                                                      :ARG1-of (c5-19 / nice-01)
                                                                      :ARG1-of (c5-4 / have-degree-91
                                                                                     :ARG2 c5-19
                                                                                     :ARG1 c5-1)
                                                                      :ARG3 (c5-10 / more)))
                                             :polarity -)))
      :time (c5-14 / now))

# ::snt very good
# ::tokens ["very", "good"]
# ::lemmas ["very", "good"]
(c6-0 / good-02
      :degree (c6-1 / very))

# ::snt Why separate awards for females &amp; males?
# ::tokens ["Why", "separate", "awards", "for", "females", "&", "amp", ";", "males", "?"]
# ::lemmas ["why", "separate", "award", "for", "female", "&", "amp", ";", "male", "?"]
(c7-3 / cause-01
      :ARG0 (c7-6 / amr-unknown)
      :ARG1 (c7-2 / separate-01
                  :ARG1 (c7-5 / award-01
                              :ARG2 (c7-4 / and
                                          :op1 (c7-0 / female)
                                          :op2 (c7-7 / amp)
                                          :op3 (c7-1 / male)))))

# ::snt Now, Ryan Gosling always looks like a winner, as his look is crisp and classicand a nicer Canadian can't be found!
# ::tokens ["Now", ",", "Ryan", "Gosling", "always", "looks", "like", "a", "winner", ",", "as", "his", "look", "is", "crisp", "and", "classicand", "a", "nicer", "Canadian", "ca", "n't", "be", "found", "!"]
# ::lemmas ["now", ",", "Ryan", "Gosling", "always", "look", "like", "a", "winner", ",", "as", "his", "look", "be", "crisp", "and", "classicand", "a", "nice", "Canadian", "can", "not", "be", "find", "!"]
(c8-0 / look-02
      :ARG0 (c8-18 / person
                   :name (c8-17 / name
                                :op1 "Ryan"
                                :op2 "Gosling"))
      :ARG1 (c8-11 / person
                   :ARG0-of (c8-20 / win-01))
      :time (c8-7 / always)
      :ARG1-of (c8-13 / cause-01
                      :ARG0 (c8-6 / and
                                  :op1 (c8-5 / and
                                             :op1 (c8-9 / crisp)
                                             :op2 (c8-2 / classic)
                                             :domain (c8-8 / look-02
                                                           :ARG0 c8-18))
                                  :op2 (c8-3 / possible-01
                                             :ARG1 (c8-16 / find-01
                                                          :ARG1 (c8-1 / person
                                                                      :mod (c8-15 / country
                                                                                  :name (c8-12 / name
                                                                                               :op1 "Canada"))
                                                                      :ARG1-of (c8-19 / nice-01)
                                                                      :ARG1-of (c8-4 / have-degree-91
                                                                                     :ARG2 c8-19
                                                                                     :ARG1 c8-1)
                                                                      :ARG3 (c8-10 / more)))
                                             :polarity -)))
      :time (c8-14 / now))

# ::snt : The Full List of Winners at the Golden Globes
# ::tokens [":", "The", "Full", "List", "of", "Winners", "at", "the", "Golden", "Globes"]
# ::lemmas [":", "The", "Full", "List", "of", "Winners", "at", "the", "Golden", "Globes"]
(c9-6 / thing
      :ARG2-of (c9-4 / list-01
                     :ARG1 (c9-3 / person
                                 :ARG0-of (c9-5 / win-01
                                                :location (c9-2 / event
                                                                :name (c9-1 / name
                                                                            :op1 "Golden"
                                                                            :op2 "Globes"))))
                     :ARG1-of (c9-0 / full-09)))

# ::snt GET NEW LOVE VIBES: ME &amp; YOU BY XMAN
# ::tokens ["GET", "NEW", "LOVE", "VIBES", ":", "ME", "&", "amp", ";", "YOU", "BY", "XMAN"]
# ::lemmas ["get", "new", "love", "vibes", ":", "ME", "&", "amp", ";", "you", "by", "XMAN"]
(c10-3 / say-01
       :ARG0 (c10-9 / i)
       :ARG1 (c10-11 / get-01
                     :ARG0 (c10-0 / you)
                     :ARG1 (c10-6 / love-01
                                  :ARG1-of (c10-1 / new-01)
                                  :ARG1-of (c10-2 / mean-01
                                                  :ARG2 (c10-10 / and
                                                                :op1 c10-9
                                                                :op2 (c10-7 / person
                                                                            :name (c10-5 / name
                                                                                         :op1 "amp")))))
                     :mode imperative)
       :ARG2 (c10-4 / person
                    :name (c10-8 / name
                                 :op1 "XMAN")))

# ::snt And Streep's speech
# ::tokens ["And", "Streep", "'s", "speech"]
# ::lemmas ["and", "Streep", "'s", "speech"]
(c11-3 / and
       :op2 (c11-0 / speak-01
                   :ARG0 (c11-2 / person
                                :name (c11-1 / name
                                             :op1 "Streep"))))

# ::snt Now, Ryan Gosling always looks like a winner, as he keeps his look crisp and classica nicer Canadian can't be found! X-O-X-O
# ::tokens ["Now", ",", "Ryan", "Gosling", "always", "looks", "like", "a", "winner", ",", "as", "he", "keeps", "his", "look", "crisp", "and", "classica", "nicer", "Canadian", "ca", "n't", "be", "found", "!", "X", "-", "O", "-", "X", "-", "O"]
# ::lemmas ["now", ",", "Ryan", "Gosling", "always", "look", "like", "a", "winner", ",", "as", "he", "keep", "his", "look", "crisp", "and", "classica", "nicer", "Canadian", "can", "not", "be", "find", "!", "x", "-", "o", "-", "x", "-", "o"]
(c12-9 / multi-sentence
       :snt1 (c12-0 / look-02
                    :ARG0 (c12-17 / person
                                  :name (c12-16 / name
                                                :op1 "Ryan"
                                                :op2 "Gosling"))
                    :ARG1 (c12-10 / person
                                  :ARG0-of (c12-19 / win-01))
                    :time (c12-6 / always)
                    :ARG1-of (c12-12 / cause-01
                                     :ARG0 (c12-4 / keep-02
                                                  :ARG0 c12-17
                                                  :ARG1 (c12-7 / look-02
                                                               :ARG0 c12-17
                                                               :ARG1 (c12-5 / and
                                                                            :op1 (c12-8 / crisp)
                                                                            :op2 (c12-2 / classica
                                                                                        :ARG1-of (c12-11 / nice-01))))))
                    :time (c12-18 / now))
       :snt2 (c12-3 / possible-01
                    :ARG1 (c12-15 / find-01
                                  :ARG1 (c12-1 / person
                                               :mod (c12-14 / country
                                                            :name (c12-13 / name
                                                                          :op1 "Canada"))
                                               :ARG1-of c12-11))
                    :polarity -))

# ::snt Now, Ryan Gosling always looks like a winner, as his look is crisp and classicand a nicer Canadian can't be found!
# ::tokens ["Now", ",", "Ryan", "Gosling", "always", "looks", "like", "a", "winner", ",", "as", "his", "look", "is", "crisp", "and", "classicand", "a", "nicer", "Canadian", "ca", "n't", "be", "found", "!"]
# ::lemmas ["now", ",", "Ryan", "Gosling", "always", "look", "like", "a", "winner", ",", "as", "his", "look", "be", "crisp", "and", "classicand", "a", "nice", "Canadian", "can", "not", "be", "find", "!"]
(c13-0 / look-02
       :ARG0 (c13-18 / person
                     :name (c13-17 / name
                                   :op1 "Ryan"
                                   :op2 "Gosling"))
       :ARG1 (c13-11 / person
                     :ARG0-of (c13-20 / win-01))
       :time (c13-7 / always)
       :ARG1-of (c13-13 / cause-01
                        :ARG0 (c13-6 / and
                                     :op1 (c13-5 / and
                                                 :op1 (c13-9 / crisp)
                                                 :op2 (c13-2 / classic)
                                                 :domain (c13-8 / look-02
                                                                :ARG0 c13-18))
                                     :op2 (c13-3 / possible-01
                                                 :ARG1 (c13-16 / find-01
                                                               :ARG1 (c13-1 / person
                                                                            :mod (c13-15 / country
                                                                                         :name (c13-12 / name
                                                                                                       :op1 "Canada"))
                                                                            :ARG1-of (c13-19 / nice-01)
                                                                            :ARG1-of (c13-4 / have-degree-91
                                                                                            :ARG2 c13-19
                                                                                            :ARG1 c13-1)
                                                                            :ARG3 (c13-10 / more)))
                                                 :polarity -)))
       :time (c13-14 / now))
