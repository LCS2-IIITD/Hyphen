# ::snt Omg....that poor baby...
# ::tokens ["Omg", "....", "that", "poor", "baby", "..."]
# ::lemmas ["Omg", "....", "that", "poor", "baby", "..."]
(c1-1 / baby
      :mod (c1-2 / poor)
      :mod (c1-3 / that)
      :mod (c1-0 / oh-my-god
                 :mode expressive))

# ::snt How did she not get a charge considering the month old in the car? Or did she?
# ::tokens ["How", "did", "she", "not", "get", "a", "charge", "considering", "the", "month", "old", "in", "the", "car", "?", "Or", "did", "she", "?"]
# ::lemmas ["how", "do", "she", "not", "get", "a", "charge", "consider", "the", "month", "old", "in", "the", "car", "?", "or", "do", "she", "?"]
(c2-4 / multi-sentence
      :snt1 (c2-13 / get-01
                   :ARG0 (c2-5 / she)
                   :ARG1 (c2-8 / charge-01)
                   :manner (c2-12 / amr-unknown)
                   :ARG1-of (c2-14 / cause-01
                                   :ARG0 (c2-9 / consider-02
                                               :ARG1 (c2-3 / be-located-at-91
                                                           :ARG1 (c2-7 / person
                                                                       :age (c2-10 / temporal-quantity
                                                                                   :unit (c2-6 / month)
                                                                                   :quant 1))
                                                           :ARG2 (c2-0 / car))))
                   :polarity -)
      :snt2 (c2-1 / or
                  :op2 c2-13
                  :ARG0 (c2-2 / she)
                  :ARG1 c2-8
                  :manner (c2-11 / amr-unknown)))

# ::snt Parts of it, never the whole thing. Yeah... that poor baby will be caught all in the middle of it. So dumb
# ::tokens ["Parts", "of", "it", ",", "never", "the", "whole", "thing", ".", "Yeah", "...", "that", "poor", "baby", "will", "be", "caught", "all", "in", "the", "middle", "of", "it", ".", "So", "dumb"]
# ::lemmas ["part", "of", "it", ",", "never", "the", "whole", "thing", ".", "yeah", "...", "that", "poor", "baby", "will", "be", "catch", "all", "in", "the", "middle", "of", "it", ".", "so", "dumb"]
(c3-2 / multi-sentence
      :snt1 (c3-6 / and
                  :op1 (c3-9 / part
                             :part-of (c3-12 / it))
                  :op2 (c3-13 / thing
                              :mod (c3-10 / whole)
                              :time (c3-7 / ever)
                              :polarity -))
      :snt2 (c3-11 / catch-02
                   :ARG1 (c3-0 / baby
                               :mod (c3-3 / poor)
                               :mod (c3-16 / that))
                   :ARG2 (c3-14 / all)
                   :location (c3-8 / middle
                                   :part-of (c3-5 / it))
                   :mod (c3-1 / yeah))
      :snt3 (c3-15 / dumb
                   :degree (c3-4 / so)))

# ::snt Oh, but they have a kid now. I guess everything will turn out alright... You ever see "Idiocracy"?
# ::tokens ["Oh", ",", "but", "they", "have", "a", "kid", "now", ".", "I", "guess", "everything", "will", "turn", "out", "alright", "...", "You", "ever", "see", "\"", "Idiocracy", "\"", "?"]
# ::lemmas ["oh", ",", "but", "they", "have", "a", "kid", "now", ".", "i", "guess", "everything", "will", "turn", "out", "alright", "...", "you", "ever", "see", "\"", "Idiocracy", "\"", "?"]
(c4-2 / multi-sentence
      :snt1 (c4-10 / contrast-01
                   :ARG2 (c4-8 / have-05
                               :ARG0 (c4-12 / they)
                               :ARG1 (c4-9 / kid)
                               :time (c4-3 / now)))
      :snt2 (c4-13 / guess-01
                   :ARG0 (c4-11 / i)
                   :ARG1 (c4-15 / turn-out-11
                                :ARG1 (c4-7 / everything)
                                :ARG2 (c4-6 / all-right)))
      :snt3 (c4-4 / see-01
                  :ARG0 (c4-1 / you)
                  :ARG1 (c4-0 / ocracy)
                  :polarity (c4-14 / amr-unknown)
                  :time (c4-5 / ever)))

# ::snt Well, judging by what I've see of their relationship on Jersey Shore, he probably deserved it. Kidding, of course, but he's a total douchebag.
# ::tokens ["Well", ",", "judging", "by", "what", "I", "'ve", "see", "of", "their", "relationship", "on", "Jersey", "Shore", ",", "he", "probably", "deserved", "it", ".", "Kidding", ",", "of", "course", ",", "but", "he", "'s", "a", "total", "douchebag", "."]
# ::lemmas ["well", ",", "judge", "by", "what", "i", "'ve", "see", "of", "their", "relationship", "on", "Jersey", "Shore", ",", "he", "probably", "deserve", "it", ".", "kidding", ",", "of", "course", ",", "but", "he", "be", "a", "total", "douchebag", "."]
(c5-8 / multi-sentence
      :snt1 (c5-14 / probable
                   :domain (c5-18 / deserve-01
                                  :ARG0 (c5-4 / he)
                                  :ARG1 (c5-16 / it))
                   :ARG1-of (c5-6 / judge-01
                                  :ARG0 (c5-7 / thing
                                              :ARG1-of (c5-0 / see-01
                                                             :ARG0 (c5-3 / i)
                                                             :topic (c5-13 / relation-03
                                                                           :ARG0 (c5-11 / they)
                                                                           :location (c5-1 / show
                                                                                           :name (c5-12 / name
                                                                                                        :op1 "Jersey"
                                                                                                        :op2 "Shore")))))))
      :snt2 (c5-9 / contrast-01
                  :ARG1 (c5-5 / kid-01
                              :ARG0 c5-3)
                  :mod (c5-2 / of-course))
      :ARG2 (c5-10 / douchebag
                   :degree (c5-17 / total)
                   :domain (c5-15 / he)))

# ::snt Let the man live!!!!!
# ::tokens ["Let", "the", "man", "live", "!", "!", "!", "!", "!"]
# ::lemmas ["let", "the", "man", "live", "!", "!", "!", "!", "!"]
(c6-2 / let-01
      :ARG0 (c6-1 / you)
      :Live-01 (c6-0 / man)
      :mode imperative)

# ::snt Both P.O.S
# ::tokens ["Both", "P.O.S"]
# ::lemmas ["both", "P.O.S"]
(c7-2 / person
      :name (c7-0 / name
                  :op1 "P.O.S.")
      :mod (c7-1 / both))

# ::snt get the baby away. this girl is nuts.
# ::tokens ["get", "the", "baby", "away", ".", "this", "girl", "is", "nuts", "."]
# ::lemmas ["get", "the", "baby", "away", ".", "this", "girl", "be", "nuts", "."]
(c8-2 / multi-sentence
      :snt1 (c8-7 / get-05
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-0 / baby)
                  :ARG2 (c8-6 / away)
                  :mode imperative)
      :snt2 (c8-3 / nuts
                  :domain (c8-5 / girl
                                :mod (c8-4 / this))))

# ::snt Garbage.
# ::tokens ["Garbage", "."]
# ::lemmas ["garbage", "."]
(c9-0 / garbage)

# ::snt Enough abt these Hes a &amp; shes a wanna a b almost famous next
# ::tokens ["Enough", "abt", "these", "He", "s", "a", "&", "amp", ";", "she", "s", "a", "wanna", "a", "b", "almost", "famous", "next"]
# ::lemmas ["enough", "abt", "these", "he", "s", "a", "&", "amp", ";", "she", "s", "a", "wanna", "a", "b", "almost", "famous", "next"]
(c10-1 / multi-sentence
       :snt1 (c10-6 / have-quant-91
                    :ARG1 (c10-4 / amr-unknown)
                    :ARG3 (c10-5 / enough)
                    :topic (c10-9 / this))
       :snt2 (c10-7 / want-01
                    :ARG0 (c10-3 / she)
                    :ARG1 (c10-0 / fame-01
                                 :ARG1 c10-3
                                 :mod (c10-8 / almost)
                                 :time (c10-2 / next))))

# ::snt of course look who it is
# ::tokens ["of", "course", "look", "who", "it", "is"]
# ::lemmas ["of", "course", "look", "who", "it", "be"]
(c11-3 / look-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-2 / person
                    :domain (c11-4 / it))
       :mod (c11-0 / of-course)
       :mode imperative)

# ::snt That crazy mind sitting between those eyebrow wings, about to fly the coop.
# ::tokens ["That", "crazy", "mind", "sitting", "between", "those", "eyebrow", "wings", ",", "about", "to", "fly", "the", "coop", "."]
# ::lemmas ["that", "crazy", "mind", "sit", "between", "those", "eyebrow", "wing", ",", "about", "to", "fly", "the", "coop", "."]
(c12-4 / and
       :op1 (c12-3 / sit-01
                   :ARG1 (c12-2 / mind
                                :ARG1-of (c12-6 / crazy-03)
                                :mod (c12-9 / that))
                   :ARG2 (c12-1 / between
                                :op1 (c12-7 / wing
                                            :mod (c12-5 / eyebrow)
                                            :mod (c12-11 / that))))
       :op2 (c12-0 / fly-01
                   :ARG0 c12-2
                   :ARG2 (c12-10 / coop)
                   :time (c12-8 / about-to)))

# ::snt Crazy
# ::tokens ["Crazy"]
# ::lemmas ["crazy"]
(c13-0 / crazy-03)

# ::snt Isn't this when CPS steps in because this happened on front of a child or does that only happen to Non "celebrities"
# ::tokens ["Is", "n't", "this", "when", "CPS", "steps", "in", "because", "this", "happened", "on", "front", "of", "a", "child", "or", "does", "that", "only", "happen", "to", "Non", "\"", "celebrities", "\""]
# ::lemmas ["be", "not", "this", "when", "CPS", "step", "in", "because", "this", "happen", "on", "front", "of", "a", "child", "or", "do", "that", "only", "happen", "to", "Non", "\"", "celebrity", "\""]
(c14-0 / or
       :op1 (c14-2 / be-temporally-at-91
                   :ARG1 (c14-10 / this)
                   :ARG2 (c14-4 / step-in-02
                                :ARG0 (c14-11 / government-organization
                                              :name (c14-3 / name
                                                           :op1 "Child"
                                                           :op2 "Protective"
                                                           :op3 "Services"))
                                :ARG1-of (c14-7 / cause-01
                                                :ARG0 (c14-6 / be-located-at-91
                                                             :ARG1 c14-10
                                                             :ARG2 (c14-9 / in-front-of
                                                                          :op1 (c14-12 / child))))))
       :op2 (c14-13 / be-temporally-at-91
                    :ARG1 c14-10
                    :ARG2 (c14-8 / celebrity
                                 :polarity -)
                    :mod (c14-1 / only))
       :ARG1-of (c14-5 / request-confirmation-91))

# ::snt Wild !!!
# ::tokens ["Wild", "!", "!", "!"]
# ::lemmas ["wild", "!", "!", "!"]
(c15-0 / wild
       :mode expressive)

# ::snt Call me crazy, but I dont think the two of them are good for each other.
# ::tokens ["Call", "me", "crazy", ",", "but", "I", "do", "nt", "think", "the", "two", "of", "them", "are", "good", "for", "each", "other", "."]
# ::lemmas ["call", "i", "crazy", ",", "but", "i", "do", "not", "think", "the", "two", "of", "they", "be", "good", "for", "each", "other", "."]
(c16-3 / contrast-01
       :ARG1 (c16-9 / call-01
                    :ARG0 (c16-1 / you)
                    :ARG1 (c16-5 / i)
                    :ARG2 (c16-4 / crazy-03
                                 :ARG1 c16-5)
                    :mode imperative)
       :ARG2 (c16-6 / think-01
                    :ARG0 c16-5
                    :ARG1 (c16-7 / good-04
                                 :ARG1 (c16-8 / they
                                              :quant 2)
                                 :ARG2 (c16-2 / each
                                              :mod (c16-0 / other)))
                    :polarity -))

# ::snt So shocking
# ::tokens ["So", "shocking"]
# ::lemmas ["so", "shocking"]
(c17-1 / shock-01
       :degree (c17-0 / so))

# ::snt They both have issues. I followed her on social media to see what she is like and she is no better. They both need help for the sake of their daughter.
# ::tokens ["They", "both", "have", "issues", ".", "I", "followed", "her", "on", "social", "media", "to", "see", "what", "she", "is", "like", "and", "she", "is", "no", "better", ".", "They", "both", "need", "help", "for", "the", "sake", "of", "their", "daughter", "."]
# ::lemmas ["they", "both", "have", "issue", ".", "i", "follow", "she", "on", "social", "medium", "to", "see", "what", "she", "be", "like", "and", "she", "be", "no", "well", ".", "they", "both", "need", "help", "for", "the", "sake", "of", "their", "daughter", "."]
(c18-11 / multi-sentence
        :snt1 (c18-21 / issue-02
                      :ARG1 (c18-7 / they
                                   :mod (c18-10 / both)))
        :snt2 (c18-8 / and
                     :op1 (c18-15 / follow-02
                                  :ARG0 (c18-3 / i)
                                  :ARG1 (c18-0 / she)
                                  :ARG2 (c18-19 / publication
                                                :name (c18-16 / name
                                                              :op1 "Social"
                                                              :op2 "Media"))
                                  :purpose (c18-2 / see-01
                                                  :ARG0 c18-3
                                                  :ARG1 (c18-14 / thing
                                                                :ARG2-of (c18-18 / resemble-01
                                                                                 :ARG1 c18-0))))
                     :op2 (c18-5 / have-degree-91
                                 :ARG1 (c18-1 / she)
                                 :ARG2 (c18-9 / good-02
                                              :ARG1 c18-1)
                                 :ARG3 (c18-6 / more)
                                 :polarity -))
        :snt3 (c18-13 / need-01
                      :ARG0 c18-7
                      :mod c18-10)
        :ARG1 (c18-20 / help-01
                      :ARG2 c18-7)
        :purpose (c18-17 / sake
                         :poss (c18-12 / person
                                       :ARG0-of (c18-4 / have-rel-role-91
                                                       :ARG1 c18-7
                                                       :ARG2 (c18-22 / daughter)))))

# ::snt This guy needs to get some therapy. Cause this isnt the first toxic relationship hes had. There seems to be a re-occurring theme here.
# ::tokens ["This", "guy", "needs", "to", "get", "some", "therapy", ".", "Cause", "this", "is", "nt", "the", "first", "toxic", "relationship", "he", "s", "had", ".", "There", "seems", "to", "be", "a", "re", "-", "occurring", "theme", "here", "."]
# ::lemmas ["this", "guy", "need", "to", "get", "some", "therapy", ".", "cause", "this", "be", "not", "the", "first", "toxic", "relationship", "he", "s", "have", ".", "there", "seem", "to", "be", "a", "re", "-", "occur", "theme", "here", "."]
(c19-3 / multi-sentence
       :snt1 (c19-2 / need-01
                    :ARG0 (c19-13 / guy
                                  :mod (c19-10 / this))
                    :ARG1 (c19-12 / therapy
                                  :mod (c19-4 / some)))
       :snt2 (c19-9 / cause-01
                    :ARG0 (c19-6 / relation-03
                                 :ARG0 c19-13
                                 :ARG1 (c19-11 / toxic)
                                 :ord (c19-0 / ordinal-entity
                                             :value 1)
                                 :domain (c19-7 / this)
                                 :polarity -)
                    :ARG1 (c19-1 / seem-01
                                 :ARG1 (c19-5 / theme
                                              :ARG1-of (c19-14 / reoccur-01)
                                              :location (c19-8 / here)))))

# ::snt That poor kid. Both of their parents are a mess.
# ::tokens ["That", "poor", "kid", ".", "Both", "of", "their", "parents", "are", "a", "mess", "."]
# ::lemmas ["that", "poor", "kid", ".", "both", "of", "their", "parent", "be", "a", "mess", "."]
(c20-1 / multi-sentence
       :snt1 (c20-5 / kid
                    :mod (c20-4 / poor)
                    :mod (c20-7 / that))
       :snt2 (c20-3 / mess
                    :domain (c20-2 / person
                                   :mod (c20-0 / both)
                                   :ARG0-of (c20-6 / have-rel-role-91
                                                   :ARG1 (c20-9 / they)
                                                   :ARG2 (c20-8 / parent)))))

# ::snt That child needs to be removed from the mother!!
# ::tokens ["That", "child", "needs", "to", "be", "removed", "from", "the", "mother", "!", "!"]
# ::lemmas ["that", "child", "need", "to", "be", "remove", "from", "the", "mother", "!", "!"]
(c21-0 / need-01
       :ARG1 (c21-2 / remove-01
                    :ARG1 (c21-5 / child
                                 :mod (c21-6 / that))
                    :ARG2 (c21-4 / person
                                 :ARG0-of (c21-3 / have-rel-role-91
                                                 :ARG1 c21-5
                                                 :ARG2 (c21-1 / mother)))))

# ::snt Please stop reporting on this garbage. I'm only here for .
# ::tokens ["Please", "stop", "reporting", "on", "this", "garbage", ".", "I", "'m", "only", "here", "for", "."]
# ::lemmas ["please", "stop", "report", "on", "this", "garbage", ".", "i", "be", "only", "here", "for", "."]
(c22-3 / multi-sentence
       :snt1 (c22-4 / stop-01
                    :ARG0 (c22-2 / you)
                    :ARG1 (c22-5 / report-01
                                 :ARG0 c22-2
                                 :ARG1 (c22-9 / garbage
                                              :mod (c22-8 / this)))
                    :mode imperative
                    :polite +)
       :snt2 (c22-1 / be-located-at-91
                    :ARG1 (c22-7 / i)
                    :ARG2 (c22-6 / here)
                    :mod (c22-0 / only)))
