# ::snt good for her she knows that she needs help knowing that is the first step
# ::tokens ["good", "for", "her", "she", "knows", "that", "she", "needs", "help", "knowing", "that", "is", "the", "first", "step"]
# ::lemmas ["good", "for", "she", "she", "know", "that", "she", "need", "help", "know", "that", "be", "the", "first", "step"]
(c1-8 / good-04
      :ARG1 (c1-5 / know-01
                  :ARG0 (c1-3 / she)
                  :ARG1 (c1-2 / need-01
                              :ARG0 c1-3
                              :ARG1 (c1-4 / help-01
                                          :ARG1 c1-3)))
      :ARG2 c1-3
      :ARG1-of (c1-6 / cause-01
                     :ARG0 (c1-9 / know-01
                                 :ARG0 c1-3
                                 :ARG1 (c1-7 / thing
                                             :ARG4-of (c1-0 / step-01)
                                             :ord (c1-1 / ordinal-entity
                                                        :value 1)
                                             :domain c1-2))))

# ::snt Yes.
# ::tokens ["Yes", "."]
# ::lemmas ["yes", "."]
(c2-0 / yes)

# ::snt Yes, I knew I had a problem w alcohol and my husband helped me get to detox. It was tough but Im sober yrs. and it feels great!
# ::tokens ["Yes", ",", "I", "knew", "I", "had", "a", "problem", "w", "alcohol", "and", "my", "husband", "helped", "me", "get", "to", "detox", ".", "It", "was", "tough", "but", "I", "m", "sober", "yrs", ".", "and", "it", "feels", "great", "!"]
# ::lemmas ["yes", ",", "i", "know", "i", "have", "a", "problem", "w", "alcohol", "and", "my", "husband", "help", "i", "get", "to", "detox", ".", "it", "be", "tough", "but", "i", "m", "sober", "yr", ".", "and", "it", "feel", "great", "!"]
(c3-14 / multi-sentence
       :snt1 (c3-12 / and
                    :op1 (c3-6 / know-01
                               :ARG0 (c3-21 / i)
                               :ARG1 (c3-5 / have-03
                                           :ARG0 c3-21
                                           :ARG1 (c3-19 / problem
                                                        :topic (c3-9 / alcohol))))
                    :op2 (c3-20 / help-01
                                :ARG0 (c3-15 / person
                                             :ARG0-of (c3-4 / have-rel-role-91
                                                            :ARG1 c3-21
                                                            :ARG2 (c3-17 / husband)))
                                :ARG1 (c3-11 / get-05
                                             :ARG1 c3-21
                                             :ARG2 (c3-22 / detox))
                                :ARG2 c3-21))
       :snt2 (c3-10 / tough-02
                    :ARG1 (c3-3 / it)
                    :concession-of (c3-8 / and
                                         :op1 (c3-0 / sober-02
                                                    :ARG1 (c3-13 / i)
                                                    :time (c3-7 / multiple
                                                                :op1 (c3-16 / temporal-quantity
                                                                            :unit (c3-2 / year)
                                                                            :quant 1)))
                                         :op2 (c3-18 / feel-05
                                                     :ARG1 c3-3)
                                         :ARG2 (c3-1 / great))))

# ::snt No i have and still is trying to take care of myself and whatever problems i face along the way
# ::tokens ["No", "i", "have", "and", "still", "is", "trying", "to", "take", "care", "of", "myself", "and", "whatever", "problems", "i", "face", "along", "the", "way"]
# ::lemmas ["no", "i", "have", "and", "still", "be", "try", "to", "take", "care", "of", "myself", "and", "whatever", "problem", "i", "face", "along", "the", "way"]
(c4-2 / and
      :op1 (c4-3 / have-03
                 :ARG0 (c4-9 / i)
                 :polarity -)
      :op2 (c4-10 / try-01
                  :ARG0 c4-9
                  :ARG1 (c4-6 / care-03
                              :ARG0 c4-9
                              :ARG1 (c4-11 / and
                                           :op1 c4-9
                                           :op2 (c4-4 / problem
                                                      :ARG1-of (c4-0 / face-01
                                                                     :ARG0 c4-9
                                                                     :time (c4-7 / along
                                                                                 :op1 (c4-8 / way)))
                                                      :mod (c4-5 / whatever))))
                  :mod (c4-1 / still)))

# ::snt Salute Emma for recognizing and seeking help
# ::tokens ["Salute", "Emma", "for", "recognizing", "and", "seeking", "help"]
# ::lemmas ["Salute", "Emma", "for", "recognize", "and", "seek", "help"]
(c5-3 / salute-01
      :ARG0 (c5-1 / you)
      :ARG1 (c5-6 / person
                  :name (c5-2 / name
                              :op1 "Emma"))
      :ARG2 (c5-7 / and
                  :op1 (c5-4 / recognize-02
                             :ARG0 c5-6
                             :ARG1 (c5-5 / help-01
                                         :ARG1 c5-6))
                  :op2 (c5-0 / seek-01
                             :ARG0 c5-6
                             :ARG1 c5-5))
      :mode imperative)

# ::snt Good for her! The first step in getting the help you need is admitting you have personal "battles", accepting them and reaching out for the help you need to overcome them. Good luck to Emma and may she finds the help and peace she needs to heal!
# ::tokens ["Good", "for", "her", "!", "The", "first", "step", "in", "getting", "the", "help", "you", "need", "is", "admitting", "you", "have", "personal", "\"", "battles", "\"", ",", "accepting", "them", "and", "reaching", "out", "for", "the", "help", "you", "need", "to", "overcome", "them", ".", "Good", "luck", "to", "Emma", "and", "may", "she", "finds", "the", "help", "and", "peace", "she", "needs", "to", "heal", "!"]
# ::lemmas ["good", "for", "she", "!", "the", "first", "step", "in", "get", "the", "help", "you", "need", "be", "admit", "you", "have", "personal", "\"", "battle", "\"", ",", "accept", "they", "and", "reach", "out", "for", "the", "help", "you", "need", "to", "overcome", "they", ".", "good", "luck", "to", "Emma", "and", "may", "she", "find", "the", "help", "and", "peace", "she", "need", "to", "heal", "!"]
(c6-19 / multi-sentence
       :snt1 (c6-15 / good-02
                    :ARG2 (c6-0 / she))
       :snt2 (c6-6 / step-01
                   :ARG1 (c6-3 / get-01
                               :ARG0 (c6-8 / you)
                               :ARG1 (c6-10 / help
                                            :ARG1-of (c6-25 / need-01
                                                            :ARG0 c6-8)))
                   :ARG2 (c6-14 / and
                                :op1 (c6-13 / admit-01
                                            :ARG0 c6-8
                                            :ARG1 (c6-30 / have-03
                                                         :ARG0 c6-8
                                                         :ARG1 (c6-18 / belly
                                                                      :ARG1-of (c6-27 / personal-02))))
                                :op2 (c6-12 / accept-01
                                            :ARG0 c6-8
                                            :ARG1 c6-18)
                                :op3 (c6-26 / reach-03
                                            :ARG0 c6-8
                                            :ARG2 (c6-9 / help
                                                        :ARG1-of (c6-21 / need-01
                                                                        :ARG0 c6-8
                                                                        :purpose (c6-7 / overcome-01
                                                                                       :ARG0 c6-8
                                                                                       :ARG1 c6-18)))
                                            :direction (c6-17 / out)))
                   :ord (c6-32 / ordinal-entity
                               :value 1))
       :snt3 (c6-31 / and
                    :op1 (c6-1 / luck
                               :ARG1-of (c6-5 / good-02)
                               :beneficiary (c6-20 / person
                                                   :name (c6-28 / name
                                                                :op1 "Emma")))
                    :op2 (c6-4 / possible-01
                               :ARG1 (c6-24 / find-01
                                            :ARG0 (c6-2 / person
                                                        :ARG1 (c6-29 / and
                                                                     :op1 (c6-23 / help)
                                                                     :op2 (c6-16 / peace)
                                                                     :ARG1-of (c6-22 / need-01
                                                                                     :ARG0 c6-2
                                                                                     :purpose (c6-11 / heal-01
                                                                                                     :ARG0 c6-2))))))))

# ::snt Yes...It helped...but God healed me!
# ::tokens ["Yes", "...", "It", "helped", "...", "but", "God", "healed", "me", "!"]
# ::lemmas ["yes", "...", "it", "help", "...", "but", "God", "heal", "i", "!"]
(c7-4 / contrast-01
      :ARG1 (c7-2 / help-01
                  :ARG0 (c7-6 / it))
      :ARG2 (c7-5 / heal-01
                  :ARG0 (c7-3 / person
                              :name (c7-0 / name
                                          :op1 "God"))
                  :ARG1 (c7-1 / i)))

# ::snt Take care look after yourself!
# ::tokens ["Take", "care", "look", "after", "yourself", "!"]
# ::lemmas ["take", "care", "look", "after", "yourself", "!"]
(c8-1 / look-after-07
      :ARG0 (c8-0 / you
                  :ARG1-of c8-1)
      :mode imperative)

# ::snt Yes, meds I was on were contradicting each other, sent me this mental unit hosp. I almost committed suicide, but chose hosp instead - the day I got out was the day Robin Williams chose my first option. Broke my but God has a calling for me bcuz I'm still here!
# ::tokens ["Yes", ",", "meds", "I", "was", "on", "were", "contradicting", "each", "other", ",", "sent", "me", "this", "mental", "unit", "hosp", ".", "I", "almost", "committed", "suicide", ",", "but", "chose", "hosp", "instead", "-", "the", "day", "I", "got", "out", "was", "the", "day", "Robin", "Williams", "chose", "my", "first", "option", ".", "Broke", "my", "but", "God", "has", "a", "calling", "for", "me", "bcuz", "I", "'m", "still", "here", "!"]
# ::lemmas ["yes", ",", "med", "i", "be", "on", "be", "contradict", "each", "other", ",", "send", "i", "this", "mental", "unit", "hosp", ".", "i", "almost", "commit", "suicide", ",", "but", "choose", "hosp", "instead", "-", "the", "day", "i", "get", "out", "be", "the", "day", "Robin", "Williams", "choose", "my", "first", "option", ".", "break", "my", "but", "God", "have", "a", "calling", "for", "i", "bcuz", "i", "be", "still", "here", "!"]
(c9-20 / multi-sentence
       :snt1 (c9-21 / contradict-01
                    :ARG0 (c9-10 / medication
                                 :ARG1-of (c9-13 / take-01
                                                 :ARG0 (c9-33 / i)))
                    :ARG1 (c9-5 / other
                                :mod (c9-30 / each)))
       :snt2 (c9-0 / send-01
                   :ARG0 c9-10
                   :ARG1 c9-33
                   :ARG2 (c9-27 / unit
                                :mod (c9-26 / mental)
                                :mod (c9-24 / this)))
       :snt3 (c9-17 / contrast-01
                    :ARG1 (c9-1 / commit-02
                                :ARG0 (c9-8 / i)
                                :ARG1 (c9-6 / suicide)
                                :mod (c9-12 / almost))
                    :ARG2 (c9-28 / choose-01
                                 :ARG0 c9-8
                                 :ARG1 (c9-11 / hosp)
                                 :ARG1-of (c9-16 / instead-of-91
                                                 :ARG2 c9-1
                                                 :ARG0 c9-8
                                                 :ARG1 c9-6
                                                 :mod c9-12)))
       :snt4 (c9-7 / contrast-01
                   :ARG1 (c9-34 / day
                                :time-of (c9-14 / get-05
                                                :ARG1 c9-8
                                                :ARG2 (c9-18 / out))
                                :domain (c9-22 / day
                                               :time-of (c9-23 / choose-01
                                                               :ARG0 (c9-31 / person
                                                                            :name (c9-29 / name
                                                                                         :op1 "Robin"
                                                                                         :op2 "Williams"))
                                                               :ARG1 (c9-35 / option
                                                                            :poss c9-8
                                                                            :ord (c9-25 / ordinal-entity
                                                                                        :value 1)))))
                   :ARG2 (c9-32 / have-03
                                :ARG0 (c9-2 / god)
                                :ARG1 (c9-15 / call-03
                                             :ARG0 c9-2
                                             :ARG1 c9-8)
                                :ARG1-of (c9-3 / cause-01
                                               :ARG0 (c9-19 / be-located-at-91
                                                            :ARG1 c9-8
                                                            :ARG2 (c9-9 / here)
                                                            :mod (c9-4 / still))))))

# ::snt It's the best choice you can make to heal yourself. That way you can give the best version of you to the world &lt;3
# ::tokens ["It", "'s", "the", "best", "choice", "you", "can", "make", "to", "heal", "yourself", ".", "That", "way", "you", "can", "give", "the", "best", "version", "of", "you", "to", "the", "world", "&", "lt;3"]
# ::lemmas ["it", "be", "the", "good", "choice", "you", "can", "make", "to", "heal", "yourself", ".", "that", "way", "you", "can", "give", "the", "good", "version", "of", "you", "to", "the", "world", "&", "lt;3"]
(c10-11 / multi-sentence
        :snt1 (c10-13 / choose-01
                      :ARG0 (c10-3 / you)
                      :ARG1 (c10-18 / it)
                      :ARG1-of (c10-15 / possible-01)
                      :purpose (c10-6 / heal-01
                                      :ARG0 c10-3
                                      :ARG1 c10-3)
                      :ARG1-of (c10-17 / have-degree-91
                                       :ARG2 (c10-9 / good-02
                                                    :ARG1 c10-13)
                                       :ARG3 (c10-7 / most)))
        :snt2 (c10-12 / possible-01
                      :ARG1 (c10-1 / give-01
                                   :ARG0 (c10-10 / you)
                                   :ARG1 (c10-4 / version
                                                :poss c10-10
                                                :ARG1-of (c10-5 / have-degree-91
                                                                :ARG2 (c10-2 / good-02
                                                                             :ARG1 c10-4)
                                                                :ARG3 (c10-14 / most)))
                                   :ARG2 (c10-16 / world)
                                   :manner (c10-0 / way
                                                  :mod (c10-8 / that)))))

# ::snt GL to her!
# ::tokens ["GL", "to", "her", "!"]
# ::lemmas ["GL", "to", "she", "!"]
(c11-1 / laugh-01
       :ARG0 (c11-2 / i)
       :ARG2 (c11-3 / she)
       :manner (c11-0 / loud)
       :mode expressive)

# ::snt if you cant take care of yourself you cant take care of others
# ::tokens ["if", "you", "ca", "nt", "take", "care", "of", "yourself", "you", "ca", "nt", "take", "care", "of", "others"]
# ::lemmas ["if", "you", "can", "not", "take", "care", "of", "yourself", "you", "can", "not", "take", "care", "of", "other"]
(c12-3 / possible-01
       :ARG1 (c12-4 / care-03
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-2 / person
                                 :mod (c12-0 / other)))
       :condition (c12-5 / possible-01
                         :ARG1 (c12-6 / care-03
                                      :ARG0 c12-1
                                      :ARG1 c12-1)
                         :polarity -)
       :polarity -)

# ::snt Naaa, I just accepted it and moved on.
# ::tokens ["Naaa", ",", "I", "just", "accepted", "it", "and", "moved", "on", "."]
# ::lemmas ["Naaa", ",", "i", "just", "accept", "it", "and", "move", "on", "."]
(c13-3 / and
       :op1 (c13-6 / accept-01
                   :ARG0 (c13-5 / i)
                   :ARG1 (c13-2 / it)
                   :mod (c13-4 / just))
       :op2 (c13-0 / move-01
                   :ARG1 c13-5)
       :mod (c13-1 / naa
                   :mode expressive))
