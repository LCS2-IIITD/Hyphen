# ::snt They deserve the win! Congrats!
# ::tokens ["They", "deserve", "the", "win", "!", "Congrats", "!"]
# ::lemmas ["they", "deserve", "the", "win", "!", "Congrats", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-5 / deserve-01
                  :ARG0 (c1-4 / they)
                  :ARG1 (c1-3 / win-01
                              :ARG0 c1-4))
      :snt2 (c1-2 / congratulate-01
                  :ARG1 (c1-0 / you)
                  :mode expressive))

# ::snt Les twins did,
# ::tokens ["Les", "twins", "did", ","]
# ::lemmas ["les", "twin", "do", ","]
(c2-1 / event
      :mod (c2-2 / person
                 :name (c2-0 / name
                             :op1 "Les"
                             :op2 " twins")))

# ::snt Twitching won over Eva's brilliance? What a complete joke! Eva Igo deserves to win, no question.
# ::tokens ["Twitching", "won", "over", "Eva", "'s", "brilliance", "?", "What", "a", "complete", "joke", "!", "Eva", "Igo", "deserves", "to", "win", ",", "no", "question", "."]
# ::lemmas ["twitch", "win", "over", "Eva", "'s", "brilliance", "?", "what", "a", "complete", "joke", "!", "Eva", "Igo", "deserve", "to", "win", ",", "no", "question", "."]
(c3-1 / multi-sentence
      :snt1 (c3-8 / win-01
                  :polarity (c3-4 / amr-unknown)
                  :ARG0 (c3-12 / twitching)
                  :ARG2 (c3-0 / brilliance
                              :poss (c3-6 / person
                                          :name (c3-2 / name
                                                      :op1 "Eva"
                                                      :op2 "Igo"))))
      :snt2 (c3-10 / joke-01
                   :ARG1-of (c3-9 / complete-02)
                   :degree (c3-11 / amr-unknown))
      :snt3 (c3-14 / deserve-01
                   :ARG0 (c3-3 / person
                               :name (c3-5 / name
                                           :op1 "Eva"
                                           :op2 "Igo"))
                   :ARG1 (c3-7 / win-01
                               :ARG0 c3-3)
                   :ARG1-of (c3-13 / question-03
                                   :polarity -)))

# ::snt that was a tense show.. The rop two were impressive. great show!
# ::tokens ["that", "was", "a", "tense", "show", "..", "The", "rop", "two", "were", "impressive", ".", "great", "show", "!"]
# ::lemmas ["that", "be", "a", "tense", "show", "..", "the", "rop", "two", "be", "impressive", ".", "great", "show", "!"]
(c4-1 / multi-sentence
      :snt1 (c4-3 / show-04
                  :ARG1-of (c4-6 / tense-03)
                  :domain (c4-8 / that))
      :snt2 (c4-5 / impress-01
                  :ARG0 (c4-7 / team
                              :name (c4-2 / name
                                          :op1 " rop")
                              :quant 2))
      :snt3 (c4-0 / show-04
                  :mod (c4-4 / great)))

# ::snt Still pissed Jabbawockeez got eliminated
# ::tokens ["Still", "pissed", "Jabbawockeez", "got", "eliminated"]
# ::lemmas ["still", "piss", "Jabbawockeez", "got", "eliminate"]
(c5-4 / piss-03
      :ARG0 (c5-3 / eliminate-01
                  :ARG1 (c5-1 / person
                              :name (c5-0 / name
                                          :op1 "Jabbawockeez")))
      :mod (c5-2 / still))

# ::snt superb show. Those twins were awesome
# ::tokens ["superb", "show", ".", "Those", "twins", "were", "awesome"]
# ::lemmas ["superb", "show", ".", "those", "twin", "be", "awesome"]
(c6-1 / multi-sentence
      :snt1 (c6-2 / show-04
                  :mod (c6-0 / superb))
      :snt2 (c6-4 / awe-01
                  :ARG0 (c6-3 / twin
                              :mod (c6-5 / that))))

# ::snt Nobody cared....
# ::tokens ["Nobody", "cared", "...."]
# ::lemmas ["nobody", "care", "...."]
(c7-0 / care-01
      :ARG0 (c7-1 / nobody))

# ::snt Eva Igo is amazing!
# ::tokens ["Eva", "Igo", "is", "amazing", "!"]
# ::lemmas ["Eva", "Igo", "be", "amazing", "!"]
(c8-2 / amaze-01
      :ARG0 (c8-1 / person
                  :name (c8-0 / name
                              :op1 "Eva"
                              :op2 "Igo"))
      :mode expressive)

# ::snt Twins did
# ::tokens ["Twins", "did"]
# ::lemmas ["Twins", "do"]
(c9-0 / do-02
      :ARG0 (c9-2 / person
                  :name (c9-1 / name
                              :op1 "Twins")))

# ::snt Get FREE GIFT Card from Amazon
# ::tokens ["Get", "FREE", "GIFT", "Card", "from", "Amazon"]
# ::lemmas ["get", "free", "GIFT", "Card", "from", "Amazon"]
(c10-5 / get-01
       :ARG0 (c10-1 / you)
       :ARG1 (c10-3 / card
                    :ARG1-of (c10-0 / free-03)
                    :mod (c10-4 / gift-01
                                :ARG1 c10-3))
       :ARG2 (c10-6 / company
                    :name (c10-2 / name
                                 :op1 "Amazon"))
       :mode imperative)

# ::snt Love the show
# ::tokens ["Love", "the", "show"]
# ::lemmas ["love", "the", "show"]
(c11-0 / love-01
       :ARG1 (c11-1 / show-04))
