# ::snt you actually know...nothing
# ::tokens ["you", "actually", "know", "...", "nothing"]
# ::lemmas ["you", "actually", "know", "...", "nothing"]
(c1-2 / know-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-0 / nothing)
      :ARG1-of (c1-3 / actual-02))

# ::snt they are both past their prime anyway. Rich, famous &amp; unattractive
# ::tokens ["they", "are", "both", "past", "their", "prime", "anyway", ".", "Rich", ",", "famous", "&", "amp", ";", "unattractive"]
# ::lemmas ["they", "be", "both", "past", "their", "prime", "anyway", ".", "rich", ",", "famous", "&", "amp", ";", "unattractive"]
(c2-2 / multi-sentence
      :snt1 (c2-6 / pass-03
                  :ARG1 (c2-9 / they
                              :mod (c2-1 / both))
                  :ARG2 (c2-3 / prime
                              :poss c2-9)
                  :mod (c2-4 / anyway))
      :snt2 (c2-8 / and
                  :op1 (c2-5 / rich)
                  :op2 (c2-0 / fame-01)
                  :op3 (c2-7 / amp)
                  :op4 (c2-10 / attract-01
                              :polarity -)))

# ::snt totally sympathise... if I were a. married to AJolie b. on my private plane I'd be angry too
# ::tokens ["totally", "sympathise", "...", "if", "I", "were", "a.", "married", "to", "AJolie", "b.", "on", "my", "private", "plane", "I", "'d", "be", "angry", "too"]
# ::lemmas ["totally", "sympathise", "...", "if", "i", "be", "a.", "married", "to", "AJolie", "b.", "on", "my", "private", "plane", "i", "would", "be", "angry", "too"]
(c3-2 / sympathize-01
      :ARG0 (c3-7 / i)
      :degree (c3-6 / total)
      :ARG1-of (c3-5 / cause-01
                     :ARG0 (c3-8 / anger-01
                                 :ARG1 c3-7
                                 :mod (c3-10 / too)
                                 :condition (c3-0 / marry-01
                                                  :ARG1 c3-7
                                                  :ARG2 (c3-4 / person
                                                              :name (c3-1 / name
                                                                          :op1 "AJolie"
                                                                          :op2 "B"))
                                                  :location (c3-3 / plane
                                                                  :ARG1-of (c3-9 / private-02)
                                                                  :poss c3-7)))))

# ::snt that's the pits
# ::tokens ["that", "'s", "the", "pits"]
# ::lemmas ["that", "be", "the", "pit"]
(c4-0 / pit
      :domain (c4-1 / that))
