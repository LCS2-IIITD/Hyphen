# ::snt Give the kid a break!! Ty n take it easy relax..refresh. God Bless
# ::tokens ["Give", "the", "kid", "a", "break", "!", "!", "Ty", "n", "take", "it", "easy", "relax", "..", "refresh", ".", "God", "Bless"]
# ::lemmas ["give", "the", "kid", "a", "break", "!", "!", "ty", "n", "take", "it", "easy", "relax", "..", "refresh", ".", "God", "Bless"]
(c1-3 / multi-sentence
      :snt1 (c1-12 / give-01
                   :ARG0 (c1-2 / you)
                   :ARG1 (c1-1 / break-19)
                   :ARG2 (c1-8 / kid)
                   :mode imperative)
      :snt2 (c1-11 / take-01
                   :ARG0 (c1-13 / you)
                   :ARG1 (c1-10 / it)
                   :ARG2 (c1-6 / easy-05)
                   :mode imperative)
      :snt3 (c1-5 / refresh-01
                  :ARG0 (c1-0 / you)
                  :mode imperative)
      :snt4 (c1-7 / bless-01
                  :ARG0 (c1-9 / person
                              :name (c1-4 / name
                                          :op1 "God"))))

# ::snt Who was the GENIUS that put the kid on tour for that long? No, seriously.
# ::tokens ["Who", "was", "the", "GENIUS", "that", "put", "the", "kid", "on", "tour", "for", "that", "long", "?", "No", ",", "seriously", "."]
# ::lemmas ["who", "be", "the", "genius", "that", "put", "the", "kid", "on", "tour", "for", "that", "long", "?", "no", ",", "seriously", "."]
(c2-0 / multi-sentence
      :snt1 (c2-4 / person
                  :mod (c2-9 / genius)
                  :domain (c2-8 / amr-unknown)
                  :ARG0-of (c2-1 / put-03
                                 :ARG1 (c2-5 / kid)
                                 :ARG2 (c2-7 / tour)
                                 :ARG1-of (c2-6 / long-03
                                                :degree (c2-10 / that))))
      :snt2 (c2-2 / serious-01
                  :ARG2 (c2-3 / no)))

# ::snt Apologise y, Justin is human &amp; like any body deserves a break...Over a year none stop working and ppl gonna moan bout him having a break
# ::tokens ["Apologise", "y", ",", "Justin", "is", "human", "&", "amp", ";", "like", "any", "body", "deserves", "a", "break", "...", "Over", "a", "year", "none", "stop", "working", "and", "ppl", "gon", "na", "moan", "bout", "him", "having", "a", "break"]
# ::lemmas ["apologise", "y", ",", "Justin", "be", "human", "&", "amp", ";", "like", "any", "body", "deserve", "a", "break", "...", "over", "a", "year", "none", "stop", "work", "and", "ppl", "going", "to", "moan", "bout", "he", "have", "a", "break"]
(c3-13 / multi-sentence
       :snt1 (c3-9 / apologize-01
                   :ARG0 (c3-20 / i)
                   :ARG1 (c3-8 / and
                               :op1 (c3-5 / human
                                          :domain (c3-17 / person
                                                         :name (c3-14 / name
                                                                      :op1 "Justin")))
                               :op2 (c3-7 / amp
                                          :domain c3-17)
                               :ARG1-of (c3-15 / resemble-01
                                               :ARG2 (c3-16 / deserve-01
                                                            :ARG0 (c3-12 / body
                                                                         :mod (c3-21 / any))
                                                            :ARG1 (c3-1 / break-19
                                                                        :ARG0 c3-12)))))
       :snt2 (c3-18 / and
                    :op1 (c3-0 / stop-01
                               :ARG0 (c3-4 / i)
                               :ARG1 (c3-19 / work-01
                                            :ARG0 c3-4)
                               :duration (c3-2 / over
                                               :op1 (c3-10 / temporal-quantity
                                                           :unit (c3-3 / year)
                                                           :quant 1))
                               :polarity -)
                    :op2 (c3-6 / moan-01
                               :ARG0 (c3-11 / i)
                               :ARG1 c3-1)))

# ::snt Fuck those dudes !
# ::tokens ["Fuck", "those", "dudes", "!"]
# ::lemmas ["fuck", "those", "dude", "!"]
(c4-0 / fuck-01
      :ARG1 (c4-1 / dude
                  :mod (c4-2 / that))
      :mode expressive)

# ::snt def too late
# ::tokens ["def", "too", "late"]
# ::lemmas ["def", "too", "late"]
(c5-0 / have-degree-91
      :ARG2 (c5-1 / late)
      :ARG3 (c5-2 / too))
