# ::snt Plot twist
# ::tokens ["Plot", "twist"]
# ::lemmas ["plot", "twist"]
(c1-1 / twist-01
      :ARG1 (c1-0 / plot))

# ::snt I think she looks like kylie as a baby lol but not travis idk she is fucking cute
# ::tokens ["I", "think", "she", "looks", "like", "kylie", "as", "a", "baby", "lol", "but", "not", "travis", "idk", "she", "is", "fucking", "cute"]
# ::lemmas ["i", "think", "she", "look", "like", "kylie", "as", "a", "baby", "lol", "but", "not", "travis", "idk", "she", "be", "fucking", "cute"]
(c2-9 / contrast-01
      :ARG1 (c2-12 / think-01
                   :ARG0 (c2-11 / i)
                   :ARG1 (c2-5 / resemble-01
                               :ARG1 (c2-4 / she)
                               :ARG2 (c2-7 / person
                                           :name (c2-3 / name
                                                       :op1 "ylie")
                                           :time (c2-2 / baby))
                               :ARG2-of (c2-8 / laugh-01
                                              :ARG0 c2-11
                                              :manner (c2-13 / loud))))
      :ARG2 (c2-14 / country
                   :name (c2-6 / name
                               :op1 "France")
                   :domain c2-4
                   :ARG0-of (c2-10 / cause-01
                                   :ARG1 (c2-0 / cute
                                               :mod (c2-1 / fucking)
                                               :domain c2-4))
                   :polarity -))

# ::snt She don't look like Travis or her
# ::tokens ["She", "do", "n't", "look", "like", "Travis", "or", "her"]
# ::lemmas ["she", "do", "not", "look", "like", "Travis", "or", "she"]
(c3-3 / look-02
      :ARG0 (c3-2 / she)
      :ARG1 (c3-0 / or
                  :op1 (c3-4 / person
                             :name (c3-1 / name
                                         :op1 "Travis"))
                  :op2 c3-2)
      :polarity -)

# ::snt Too bad it ain't herss lol
# ::tokens ["Too", "bad", "it", "ai", "n't", "herss", "lol"]
# ::lemmas ["too", "bad", "it", "be", "not", "herss", "lol"]
(c5-0 / bad-07
      :ARG1 (c5-4 / it)
      :ARG2-of (c5-2 / have-degree-91
                     :ARG1 c5-4
                     :ARG3 (c5-5 / too))
      :ARG2-of (c5-3 / laugh-01
                     :ARG0 (c5-1 / i)
                     :manner (c5-6 / loud)
                     :mode expressive))

# ::snt Andaaa gordito
# ::tokens ["Andaaa", "gordito"]
# ::lemmas ["Andaaa", "gordito"]
(c6-3 / and
      :op1 (c6-2 / ache-01
                 :ARG0 (c6-1 / i))
      :op2 (c6-0 / gordito))

# ::snt Yo solo soy fan de mi novia , a vos quien te conoce ? Inju
# ::tokens ["Yo", "solo", "soy", "fan", "de", "mi", "novia", ",", "a", "vos", "quien", "te", "conoce", "?", "Inju"]
# ::lemmas ["Yo", "solo", "soy", "fan", "de", "mi", "novia", ",", "a", "vos", "quien", "te", "conoce", "?", "inju"]
(c7-3 / multi-sentence
      :snt1 (c7-5 / say-01
                  :ARG0 (c7-10 / i)
                  :ARG1 (c7-0 / fan
                              :mod (c7-1 / soy)
                              :mod (c7-12 / solo)
                              :topic (c7-4 / novia
                                           :poss c7-10)
                              :ARG1-of (c7-6 / request-confirmation-91))
                  :ARG2 (c7-2 / you))
      :snt2 (c7-9 / conoce-00
                  :ARG0 (c7-11 / you)
                  :mode expressive)
      :snt3 (c7-8 / person
                  :name (c7-7 / name
                              :op1 "Inju")))

# ::snt Cualquier excusa para que te hable te viene bien no? fan
# ::tokens ["Cualquier", "excusa", "para", "que", "te", "hable", "te", "viene", "bien", "no", "?", "fan"]
# ::lemmas ["cualquier", "excusa", "para", "que", "te", "hable", "te", "viene", "bien", "no", "?", "fan"]
(c8-5 / say-01
      :ARG0 (c8-9 / i)
      :ARG1 (c8-6 / excusa
                  :domain (c8-7 / person
                                :name (c8-3 / name
                                            :op1 "Cualquier"
                                            :op2 "Excusa"))
                  :ARG1-of (c8-8 / cause-01
                                 :ARG0 (c8-4 / possible-01
                                             :ARG1 (c8-11 / come-01
                                                          :ARG1 (c8-2 / you)
                                                          :ARG4 (c8-1 / bien
                                                                      :polarity -))
                                             :polarity (c8-10 / amr-unknown))))
      :ARG2 (c8-0 / fan))

# ::snt Dato , me pasas la direc al MD ??
# ::tokens ["Dato", ",", "me", "pasas", "la", "direc", "al", "MD", "?", "?"]
# ::lemmas ["Dato", ",", "i", "pasa", "la", "direc", "al", "MD", "?", "?"]
(c9-2 / say-01
      :ARG0 (c9-5 / i)
      :ARG1 (c9-4 / pasas-la-
                  :mod (c9-6 / al
                             :mod (c9-0 / MD))
                  :domain c9-5)
      :ARG2 (c9-1 / person
                  :name (c9-3 / name
                              :op1 "Dato")))

# ::snt I thought I was the only person who noticed that lmaooo
# ::tokens ["I", "thought", "I", "was", "the", "only", "person", "who", "noticed", "that", "lmaooo"]
# ::lemmas ["i", "think", "i", "be", "the", "only", "person", "who", "notice", "that", "lmaooo"]
(c10-5 / think-01
       :ARG0 (c10-4 / i)
       :ARG1 (c10-2 / person
                    :mod (c10-0 / only)
                    :ARG0-of (c10-1 / notice-01
                                    :ARG1 (c10-7 / that))
                    :domain c10-4)
       :mod (c10-3 / laugh-01
                   :ARG0 c10-4
                   :manner (c10-6 / loud)
                   :mode expressive))

# ::snt This looks like Posie K...
# ::tokens ["This", "looks", "like", "Posie", "K", "..."]
# ::lemmas ["this", "look", "like", "Posie", "K", "..."]
(c11-2 / look-02
       :ARG0 (c11-3 / this)
       :ARG1 (c11-0 / person
                    :name (c11-1 / name
                                 :op1 "Posie"
                                 :op2 "K")))

# ::snt Done. All votes for ya!
# ::tokens ["Done", ".", "All", "votes", "for", "ya", "!"]
# ::lemmas ["do", ".", "all", "vote", "for", "ya", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-4 / do-02)
       :snt2 (c12-2 / vote-01
                    :ARG1 (c12-0 / you)
                    :mod (c12-3 / all)))

# ::snt Amazing!
# ::tokens ["Amazing", "!"]
# ::lemmas ["amazing", "!"]
(c14-0 / amaze-01
       :mode expressive)

# ::snt Quality Content
# ::tokens ["Quality", "Content"]
# ::lemmas ["Quality", "Content"]
(c16-0 / content
       :ARG1-of (c16-1 / quality-01))

# ::snt I think hes capable of doing that himself
# ::tokens ["I", "think", "he", "s", "capable", "of", "doing", "that", "himself"]
# ::lemmas ["i", "think", "he", "s", "capable", "of", "do", "that", "himself"]
(c18-3 / think-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-1 / capable-01
                    :ARG1 (c18-0 / he)
                    :ARG2 (c18-4 / do-02
                                 :ARG0 c18-0
                                 :ARG1 (c18-5 / that))))

# ::snt Good luck on your journey
# ::tokens ["Good", "luck", "on", "your", "journey"]
# ::lemmas ["good", "luck", "on", "your", "journey"]
(c19-3 / luck
       :ARG1-of (c19-0 / good-02)
       :time (c19-1 / journey-01
                    :ARG0 (c19-2 / you)))

# ::snt SAME
# ::tokens ["SAME"]
# ::lemmas ["same"]
(c20-0 / same-01)

# ::snt Tell me why I had that exact thought today
# ::tokens ["Tell", "me", "why", "I", "had", "that", "exact", "thought", "today"]
# ::lemmas ["tell", "i", "why", "i", "have", "that", "exact", "thought", "today"]
(c21-4 / tell-01
       :ARG0 (c21-0 / you)
       :ARG1 (c21-6 / thing
                    :ARG0-of (c21-3 / cause-01
                                    :ARG1 (c21-5 / think-01
                                                 :ARG0 (c21-7 / i)
                                                 :time (c21-1 / today)
                                                 :mod (c21-2 / exact))))
       :ARG2 c21-7
       :mode imperative)

# ::snt voce mandando indireta pras meninas que mandam indireta
# ::tokens ["voce", "mandando", "indireta", "pras", "meninas", "que", "mandam", "indireta"]
# ::lemmas ["voce", "mandando", "indireta", "pras", "meninas", "que", "mandam", "indireta"]
(c22-5 / cause-01
       :ARG0 (c22-6 / and
                    :op1 (c22-3 / mandate-01
                                :ARG1 (c22-0 / organization
                                             :name (c22-2 / name
                                                          :op1 "Indian"
                                                          :op2 "Pras"
                                                          :op3 "Women")))
                    :op2 (c22-4 / mandate-01
                                :ARG1 c22-0))
       :ARG1 (c22-1 / be-located-at-91
                    :ARG2 (c22-7 / country
                                 :name c22-2
                                 :op1 "Iran")))

# ::snt I know!! Some have gone way to far aswel, I think it makes them look manly eikkkkk not for me thanks!! x
# ::tokens ["I", "know", "!", "!", "Some", "have", "gone", "way", "to", "far", "aswel", ",", "I", "think", "it", "makes", "them", "look", "manly", "eikkkkk", "not", "for", "me", "thanks", "!", "!", "x"]
# ::lemmas ["i", "know", "!", "!", "some", "have", "go", "way", "to", "far", "aswel", ",", "i", "think", "it", "make", "they", "look", "manly", "eikkkkk", "not", "for", "i", "thank", "!", "!", "x"]
(c24-2 / multi-sentence
       :snt1 (c24-8 / know-01
                    :ARG0 (c24-12 / i))
       :snt2 (c24-14 / go-01
                     :ARG1 (c24-7 / person
                                  :quant (c24-3 / some))
                     :ARG4 (c24-0 / far
                                  :ARG2-of (c24-6 / have-degree-91
                                                  :ARG1 c24-7
                                                  :ARG3 (c24-5 / equal)
                                                  :ARG4 c24-12))
                     :ARG1-of (c24-11 / cause-01
                                      :ARG0 (c24-13 / think-01
                                                    :ARG0 c24-12
                                                    :ARG1 (c24-9 / make-02
                                                                 :ARG0 c24-14
                                                                 :ARG1 (c24-10 / look-02
                                                                               :ARG0 c24-7
                                                                               :ARG1 (c24-16 / manly)
                                                                               :ARG1-of (c24-17 / contrast-01
                                                                                                :ARG2 c24-12))))))
       :snt3 (c24-15 / thank-01
                     :ARG0 (c24-4 / i)
                     :ARG1 (c24-1 / you)))

# ::snt These lips are getting too much!! Lip fillers making girls look like monkeys since ..
# ::tokens ["These", "lips", "are", "getting", "too", "much", "!", "!", "Lip", "fillers", "making", "girls", "look", "like", "monkeys", "since", ".."]
# ::lemmas ["these", "lip", "be", "get", "too", "much", "!", "!", "lip", "filler", "make", "girl", "look", "like", "monkey", "since", ".."]
(c25-1 / multi-sentence
       :snt1 (c25-11 / get-03
                     :ARG1 (c25-4 / lip
                                  :mod (c25-10 / this))
                     :ARG2 (c25-3 / have-quant-91
                                  :ARG1 c25-4
                                  :ARG2 (c25-5 / much)
                                  :ARG3 (c25-14 / too)))
       :snt2 (c25-13 / make-02
                     :ARG0 (c25-6 / person
                                  :ARG0-of (c25-0 / fill-01
                                                  :ARG1 (c25-12 / lip)))
                     :ARG1 (c25-7 / look-02
                                  :ARG0 (c25-9 / girl)
                                  :ARG1 (c25-8 / monkey))
                     :time (c25-2 / since)))

# ::snt Kkkkkkk
# ::tokens ["Kkkkkkk"]
# ::lemmas ["Kkkkkkk"]
(c26-0 / kkkkkkk
       :mode expressive)

# ::snt Tu j Conheou algum aninha ?
# ::tokens ["Tu", "j", "Conheou", "algum", "aninha", "?"]
# ::lemmas ["Tu", "j", "Conheou", "algum", "aninha", "?"]
(c27-0 / amr-unintelligible
       :value "Tu j Conheou algum aninha")

# ::snt Duvidei
# ::tokens ["Duvidei"]
# ::lemmas ["Duvidei"]
(c28-1 / person
       :name (c28-0 / name
                    :op1 "Duvidei"))

# ::snt ou no
# ::tokens ["ou", "no"]
# ::lemmas ["ou", "no"]
(c29-0 / no)

# ::snt T zoando
# ::tokens ["T", "zoando"]
# ::lemmas ["t", "zoando"]
(c30-0 / string-entity
       :value "T zoando")

# ::snt T uma bosta
# ::tokens ["T", "uma", "bosta"]
# ::lemmas ["t", "uma", "bosta"]
(c31-0)

# ::snt harry pls
# ::tokens ["harry", "pls"]
# ::lemmas ["harry", "pls"]
(c32-0 / carry-on-02
       :ARG0 (c32-1 / you)
       :mode imperative
       :polite +)

# ::snt dylan o'brien pls
# ::tokens ["dylan", "o'brien", "pls"]
# ::lemmas ["dylan", "o'brien", "pls"]
(c33-1 / person
       :name (c33-0 / name
                    :op1 "Dylan"
                    :op2 " o'brien"))

# ::snt Calum hood.
# ::tokens ["Calum", "hood", "."]
# ::lemmas ["Calum", "hood", "."]
(c34-1 / hood
       :mod (c34-0 / calum))

# ::snt Harry
# ::tokens ["Harry"]
# ::lemmas ["Harry"]
(c35-1 / person
       :name (c35-0 / name
                    :op1 "Harry"))

# ::snt Zayn please
# ::tokens ["Zayn", "please"]
# ::lemmas ["zayn", "please"]
(c36-1 / person
       :name (c36-0 / name
                    :op1 "Zayn")
       :mode expressive
       :polite +)

# ::snt CALUM HOOD PLS
# ::tokens ["CALUM", "HOOD", "PLS"]
# ::lemmas ["CALUM", "hood", "PLS"]
(c38-0 / beach
       :name (c38-1 / name
                    :op1 "CALUM"
                    :op2 "HOOD"
                    :op3 "PLS"))

# ::snt pls
# ::tokens ["pls"]
# ::lemmas ["pls"]
(c39-1 / person
       :name (c39-0 / name
                    :op1 "pls"))

# ::snt harry
# ::tokens ["harry"]
# ::lemmas ["harry"]
(c40-1 / person
       :name (c40-0 / name
                    :op1 "Harry"))

# ::snt Harry styles or Calum Hood
# ::tokens ["Harry", "styles", "or", "Calum", "Hood"]
# ::lemmas ["Harry", "style", "or", "Calum", "Hood"]
(c41-0 / or
       :op1 (c41-3 / style
                   :mod (c41-5 / person
                               :name (c41-1 / name
                                            :op1 "Harry"
                                            :op2 "Styles")))
       :op2 (c41-2 / person
                   :name (c41-4 / name
                                :op1 "Calum"
                                :op2 "Hood")))

# ::snt zayn
# ::tokens ["zayn"]
# ::lemmas ["zayn"]
(c43-0 / zayn)

# ::snt Harry please
# ::tokens ["Harry", "please"]
# ::lemmas ["Harry", "please"]
(c44-1 / person
       :name (c44-0 / name
                    :op1 "Harry")
       :polite +)

# ::snt Such a great conversation today Tim! Thank you having me and all the kind words about
# ::tokens ["Such", "a", "great", "conversation", "today", "Tim", "!", "Thank", "you", "having", "me", "and", "all", "the", "kind", "words", "about"]
# ::lemmas ["such", "a", "great", "conversation", "today", "Tim", "!", "thank", "you", "have", "i", "and", "all", "the", "kind", "word", "about"]
(c45-2 / multi-sentence
       :snt1 (c45-8 / converse-01
                    :ARG0 (c45-6 / person
                                 :name (c45-1 / name
                                              :op1 "Tim"))
                    :mod (c45-12 / great
                                 :degree (c45-3 / such))
                    :time (c45-11 / today)
                    :mode expressive)
       :snt2 (c45-14 / thank-01
                     :ARG0 (c45-10 / i)
                     :ARG1 (c45-0 / you)
                     :ARG2 (c45-5 / have-03
                                  :ARG0 c45-0
                                  :ARG1 (c45-4 / and
                                               :op1 c45-10
                                               :op2 (c45-9 / word-01
                                                           :ARG0 c45-0
                                                           :ARG1-of (c45-7 / kind-01)
                                                           :mod (c45-13 / all))))))

# ::snt ktpza
# ::tokens ["ktpza"]
# ::lemmas ["ktpza"]
(c46-1 / person
       :name (c46-0 / name
                    :op1 "ktpza"))

# ::snt But baby True is just as pretty
# ::tokens ["But", "baby", "True", "is", "just", "as", "pretty"]
# ::lemmas ["but", "baby", "true", "be", "just", "as", "pretty"]
(c47-3 / contrast-01
       :ARG2 (c47-2 / pretty
                    :domain (c47-0 / baby
                                   :name (c47-1 / name
                                                :op1 "True"))
                    :mod (c47-4 / just)))

# ::snt She literally comes out with a new kit every other week
# ::tokens ["She", "literally", "comes", "out", "with", "a", "new", "kit", "every", "other", "week"]
# ::lemmas ["she", "literally", "come", "out", "with", "a", "new", "kit", "every", "other", "week"]
(c48-5 / come-out-09
       :ARG0 (c48-1 / she)
       :ARG1 (c48-3 / kit
                    :ARG1-of (c48-0 / new-01))
       :mod (c48-4 / literal)
       :frequency (c48-2 / rate-entity-91
                         :ARG3 (c48-7 / temporal-quantity
                                      :unit (c48-6 / week)
                                      :quant 2)))

# ::snt Hermosa.
# ::tokens ["Hermosa", "."]
# ::lemmas ["Hermosa", "."]
(c49-1 / person
       :name (c49-0 / name
                    :op1 "Hermosa"))

# ::snt grazie mille
# ::tokens ["grazie", "mille"]
# ::lemmas ["grazie", "mille"]
(c50-2 / person
       :name (c50-1 / name
                    :op1 "Mille")
       :mod (c50-0 / grazie))
