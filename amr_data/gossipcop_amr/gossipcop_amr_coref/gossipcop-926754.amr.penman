# ::snt Jajaja ya tienen como un ao comprometidos baby
# ::tokens ["Jajaja", "ya", "tienen", "como", "un", "ao", "comprometidos", "baby"]
# ::lemmas ["Jajaja", "ya", "tienen", "como", "un", "ao", "comprometido", "baby"]
(c1-3 / say-01
      :ARG0 (c1-9 / i)
      :ARG1 (c1-10 / tienen-01
                   :ARG1 (c1-6 / person
                               :name (c1-1 / name
                                           :op1 "Jajaja"))
                   :ARG3 (c1-2 / person
                               :ARG0-of (c1-5 / have-rel-role-91
                                              :ARG1 c1-6
                                              :ARG2 (c1-0 / baby))
                               :ARG0-of (c1-8 / have-03
                                              :ARG1 (c1-4 / ao
                                                          :op1 (c1-7 / comprometidos)))))
      :ARG2 c1-6)

# ::snt Yea i know cos she follows me on here and she reply back to me regardin it
# ::tokens ["Yea", "i", "know", "cos", "she", "follows", "me", "on", "here", "and", "she", "reply", "back", "to", "me", "regardin", "it"]
# ::lemmas ["yea", "i", "know", "cos", "she", "follow", "i", "on", "here", "and", "she", "reply", "back", "to", "i", "regardin", "it"]
(c2-5 / know-01
      :ARG0 (c2-7 / i)
      :ARG1-of (c2-6 / cause-01
                     :ARG0 (c2-8 / and
                                 :op1 (c2-0 / follow-02
                                            :ARG0 (c2-2 / she)
                                            :ARG1 c2-7
                                            :ARG2 (c2-4 / here))
                                 :op2 (c2-3 / reply-01
                                            :ARG0 c2-2
                                            :ARG1 c2-7
                                            :ARG2 (c2-9 / regard-01
                                                        :ARG0 c2-2
                                                        :ARG1 c2-4)
                                            :mod (c2-1 / back)))))

# ::snt Thanks for tweetin my back sophie
# ::tokens ["Thanks", "for", "tweetin", "my", "back", "sophie"]
# ::lemmas ["thank", "for", "tweetin", "my", "back", "sophie"]
(c3-2 / say-01
      :ARG0 (c3-4 / i
                  :part (c3-0 / back))
      :ARG1 (c3-5 / thank-01
                  :ARG0 c3-4
                  :ARG1 (c3-3 / person
                              :name (c3-1 / name
                                          :op1 "Sophie"))
                  :ARG2 (c3-6 / tweet-02
                              :ARG0 c3-3
                              :ARG2 c3-0))
      :ARG2 c3-3)

# ::snt Goodluck dude
# ::tokens ["Goodluck", "dude"]
# ::lemmas ["Goodluck", "dude"]
(c4-2 / say-01
      :ARG1 (c4-1 / luck
                  :mode expressive)
      :ARG2 (c4-0 / dude))

# ::snt No sabias que se casaba con Sansa Stark!? Esperemos que este no la cierre y la viole /7 como el otro enfermo jaja
# ::tokens ["No", "sabias", "que", "se", "casaba", "con", "Sansa", "Stark", "!", "?", "Esperemos", "que", "este", "no", "la", "cierre", "y", "la", "viole", "/7", "como", "el", "otro", "enfermo", "jaja"]
# ::lemmas ["no", "sabias", "que", "se", "casaba", "con", "Sansa", "Stark", "!", "?", "Esperemos", "que", "este", "no", "la", "cierre", "y", "la", "viole", "/7", "como", "el", "otro", "enfermo", "jaja"]
(c5-2 / multi-sentence
      :snt1 (c5-4 / sabias
                  :ARG1-of (c5-11 / cause-01
                                  :ARG0 (c5-14 / casaba
                                               :prep-with (c5-9 / person
                                                                :name (c5-3 / name
                                                                            :op1 "Sansa"
                                                                            :op2 "Stark"))))
                  :polarity -)
      :snt2 (c5-6 / remremos-00
                  :ARG1 (c5-13 / and
                               :op1 (c5-12 / cierre)
                               :op2 (c5-7 / viole)
                               :op3 (c5-1 / broadcast-program
                                          :name (c5-8 / name
                                                      :op1 "7"))
                               :ARG1-of (c5-0 / compare-01
                                              :ARG2 (c5-5 / person
                                                          :name (c5-10 / name
                                                                       :op1 "El"
                                                                       :op2 "Otro"
                                                                       :op3 "Enfermo"
                                                                       :op4 "Jaja"))))))

# ::snt Hahahahaha hater? Hopefully for your sake they stay together for ever, put it you that's my problem, choose a struggle already, smh
# ::tokens ["Hahahahaha", "hater", "?", "Hopefully", "for", "your", "sake", "they", "stay", "together", "for", "ever", ",", "put", "it", "you", "that", "'s", "my", "problem", ",", "choose", "a", "struggle", "already", ",", "smh"]
# ::lemmas ["Hahahahaha", "hater", "?", "hopefully", "for", "your", "sake", "they", "stay", "together", "for", "ever", ",", "put", "it", "you", "that", "be", "my", "problem", ",", "choose", "a", "struggle", "already", ",", "smh"]
(c6-2 / multi-sentence
      :snt1 (c6-6 / haha
                  :mode expressive)
      :snt2 (c6-7 / person
                  :ARG0-of (c6-9 / hate-01))
      :snt3 (c6-12 / and
                   :op1 (c6-3 / put-01
                              :ARG0 (c6-1 / you)
                              :ARG1 (c6-14 / problem
                                           :poss (c6-11 / i)
                                           :domain (c6-10 / that))
                              :mode imperative)
                   :op2 (c6-8 / choose-01
                              :ARG0 c6-1
                              :ARG1 (c6-4 / struggle-01)
                              :time (c6-13 / already)
                              :mode imperative)
                   :ARG1-of (c6-5 / hope-01
                                  :purpose (c6-0 / sake
                                                 :poss c6-1)))
      :snt4 (c6-15 / smh
                   :mode expressive))

# ::snt Hopefully
# ::tokens ["Hopefully"]
# ::lemmas ["hopefully"]
(c7-0 / hope-01)

# ::snt Wishing them a happy life and do something similar like john cena and his wife.
# ::tokens ["Wishing", "them", "a", "happy", "life", "and", "do", "something", "similar", "like", "john", "cena", "and", "his", "wife", "."]
# ::lemmas ["wish", "they", "a", "happy", "life", "and", "do", "something", "similar", "like", "john", "cena", "and", "his", "wife", "."]
(c8-3 / and
      :op1 (c8-9 / wish-01
                 :ARG1 (c8-6 / life
                             :ARG1-of (c8-5 / happy-02))
                 :ARG2 (c8-12 / they))
      :op2 (c8-13 / do-02
                  :ARG1 (c8-2 / something
                              :ARG1-of (c8-4 / resemble-01
                                             :ARG2 (c8-11 / and
                                                          :op1 (c8-7 / person
                                                                     :name (c8-0 / name
                                                                                 :op1 "John"
                                                                                 :op2 "Cena"))
                                                          :op2 (c8-1 / person
                                                                     :ARG0-of (c8-10 / have-rel-role-91
                                                                                     :ARG1 c8-7
                                                                                     :ARG2 (c8-8 / wife))))))))

# ::snt Ok m8
# ::tokens ["Ok", "m8"]
# ::lemmas ["ok", "m8"]
(c9-0 / okay-01
      :ARG2 (c9-2 / person
                  :name (c9-1 / name
                              :op1 "m8")))

# ::snt It won't work n it's obvious
# ::tokens ["It", "wo", "n't", "work", "n", "it", "'s", "obvious"]
# ::lemmas ["it", "will", "not", "work", "n", "it", "be", "obvious"]
(c10-3 / and
       :op1 (c10-0 / work-09
                   :ARG1 (c10-2 / it)
                   :polarity -)
       :op2 (c10-1 / obvious-01
                   :ARG1 c10-2))

# ::snt u just made my day
# ::tokens ["u", "just", "made", "my", "day"]
# ::lemmas ["u", "just", "make", "my", "day"]
(c11-1 / make-01
       :ARG0 (c11-0 / you)
       :ARG1 (c11-4 / day
                    :poss (c11-3 / i))
       :time (c11-2 / just))

# ::snt cant you lol
# ::tokens ["ca", "nt", "you", "lol"]
# ::lemmas ["can", "not", "you", "lol"]
(c12-1 / possible-01
       :ARG1 (c12-2 / laugh-01
                    :ARG0 (c12-3 / i)
                    :manner (c12-4 / loud))
       :ARG2 (c12-0 / you))
