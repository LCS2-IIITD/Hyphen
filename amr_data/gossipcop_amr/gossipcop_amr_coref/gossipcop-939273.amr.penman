# ::snt Probably. I'm relieved for LuAnn
# ::tokens ["Probably", ".", "I", "'m", "relieved", "for", "LuAnn"]
# ::lemmas ["probably", ".", "i", "be", "relieve", "for", "LuAnn"]
(c1-1 / multi-sentence
      :snt1 (c1-4 / probable)
      :snt2 (c1-3 / relieve-01
                  :ARG0 (c1-2 / person
                              :name (c1-0 / name
                                          :op1 "LuAnn"))
                  :ARG1 (c1-5 / i)))

# ::snt Probation most likely.
# ::tokens ["Probation", "most", "likely", "."]
# ::lemmas ["Probation", "most", "likely", "."]
(c2-3 / likely-01
      :ARG1 (c2-1 / proceed-01)
      :ARG2-of (c2-2 / have-degree-91
                     :ARG1 c2-1
                     :ARG3 (c2-0 / most)))

# ::snt you are always on it Marty!!!
# ::tokens ["you", "are", "always", "on", "it", "Marty", "!", "!", "!"]
# ::lemmas ["you", "be", "always", "on", "it", "Marty", "!", "!", "!"]
(c3-2 / say-01
      :ARG0 (c3-5 / i)
      :ARG1 (c3-0 / on-01
                  :ARG1 (c3-4 / person
                              :name (c3-1 / name
                                          :op1 "Marty"))
                  :ARG2 (c3-3 / it)
                  :time (c3-6 / always))
      :ARG2 c3-4)

# ::snt Wow! Is because she's rich or just white or both next time spit on the cops you'll get off
# ::tokens ["Wow", "!", "Is", "because", "she", "'s", "rich", "or", "just", "white", "or", "both", "next", "time", "spit", "on", "the", "cops", "you", "'ll", "get", "off"]
# ::lemmas ["wow", "!", "be", "because", "she", "be", "rich", "or", "just", "white", "or", "both", "next", "time", "spit", "on", "the", "cop", "you", "'ll", "get", "off"]
(c4-1 / or
      :op1 (c4-9 / cause-01
                 :ARG0 (c4-0 / or
                             :op1 (c4-7 / rich
                                        :domain (c4-6 / she))
                             :op2 (c4-10 / white-02
                                         :ARG1 c4-6
                                         :mod (c4-11 / just))))
      :op2 (c4-12 / get-off-23
                  :ARG1 (c4-3 / you)
                  :time (c4-2 / spit-01
                              :ARG0 c4-3
                              :ARG2 (c4-13 / cop)
                              :mod (c4-4 / next))
                  :mod (c4-5 / both))
      :mod (c4-8 / wow
                 :mode expressive))

# ::snt Chic C'Est La Plea
# ::tokens ["Chic", "C'Est", "La", "Plea"]
# ::lemmas ["Chic", "C'Est", "La", "Plea"]
(c5-1 / mountain
      :name (c5-0 / name
                  :op1 "Chic"
                  :op2 "C'Est"
                  :op3 "La"
                  :op4 "Pai"))

# ::snt I'm glad bc we are all dysfunctional to some extent, and hopefully a valuable lesson has been learned.
# ::tokens ["I", "'m", "glad", "bc", "we", "are", "all", "dysfunctional", "to", "some", "extent", ",", "and", "hopefully", "a", "valuable", "lesson", "has", "been", "learned", "."]
# ::lemmas ["i", "be", "glad", "bc", "we", "be", "all", "dysfunctional", "to", "some", "extent", ",", "and", "hopefully", "a", "valuable", "lesson", "have", "be", "learn", "."]
(c6-8 / glad-02
      :ARG0 (c6-7 / and
                  :op1 (c6-9 / dysfunctional
                             :domain (c6-5 / we
                                           :mod (c6-6 / all))
                             :degree (c6-2 / extent
                                           :mod (c6-0 / some)))
                  :op2 (c6-4 / learn-01
                             :ARG1 (c6-10 / lesson
                                          :ARG1-of (c6-1 / value-02))
                             :ARG1-of (c6-3 / hope-01)))
      :ARG1 (c6-11 / i))

# ::snt Stop drinking
# ::tokens ["Stop", "drinking"]
# ::lemmas ["stop", "drink"]
(c7-2 / stop-01
      :ARG0 (c7-1 / you)
      :ARG1 (c7-0 / drinking)
      :mode imperative)

# ::snt buys good lawyers
# ::tokens ["buys", "good", "lawyers"]
# ::lemmas ["buy", "good", "lawyer"]
(c8-1 / buy-01
      :ARG1 (c8-2 / lawyer
                  :ARG1-of (c8-0 / good-02)))

# ::snt Oh gawd. I cant believe that wedding even happened hahahaha thanks to Dorinda I might add who introduced them lol
# ::tokens ["Oh", "gawd", ".", "I", "ca", "nt", "believe", "that", "wedding", "even", "happened", "hahahaha", "thanks", "to", "Dorinda", "I", "might", "add", "who", "introduced", "them", "lol"]
# ::lemmas ["oh", "gawd", ".", "i", "can", "not", "believe", "that", "wedding", "even", "happen", "hahahaha", "thank", "to", "Dorinda", "i", "might", "add", "who", "introduce", "they", "lol"]
(c9-2 / multi-sentence
      :snt1 (c9-0 / oh-gawd
                  :mode expressive)
      :snt2 (c9-8 / possible-01
                  :ARG1 (c9-1 / believe-01
                              :ARG0 (c9-13 / i)
                              :ARG1 (c9-10 / wed-01
                                           :mod (c9-6 / even)))
                  :ARG1-of (c9-11 / cause-01
                                  :ARG0 (c9-3 / person
                                              :name (c9-4 / name
                                                          :op1 "Dorinda")
                                              :ARG0-of (c9-14 / add-01
                                                              :ARG1 (c9-16 / possible-01
                                                                           :ARG1 (c9-5 / introduce-01
                                                                                       :ARG0 c9-3
                                                                                       :ARG1 (c9-12 / they))
                                                                           :ARG2-of (c9-9 / laugh-01
                                                                                          :ARG0 c9-13
                                                                                          :manner (c9-15 / loud)
                                                                                          :mode expressive)))))
                  :mod (c9-7 / haha
                             :mode expressive)
                  :polarity -))

# ::snt Omg shes lucky she didnt break an ankle or a leg
# ::tokens ["Omg", "she", "s", "lucky", "she", "did", "nt", "break", "an", "ankle", "or", "a", "leg"]
# ::lemmas ["Omg", "she", "s", "lucky", "she", "do", "not", "break", "an", "ankle", "or", "a", "leg"]
(c10-4 / lucky
       :domain (c10-3 / she)
       :ARG1-of (c10-5 / cause-01
                       :ARG0 (c10-2 / break-01
                                    :ARG0 c10-3
                                    :ARG1 (c10-0 / or
                                                 :op1 (c10-6 / ankle)
                                                 :op2 (c10-7 / leg))
                                    :polarity -))
       :mod (c10-1 / oh-my-god
                   :mode expressive))

# ::snt Hahahahahaha
# ::tokens ["Hahahahahaha"]
# ::lemmas ["Hahahahahaha"]
(c11-0 / haha
       :mode expressive)

# ::snt Or class lol lalalaaala
# ::tokens ["Or", "class", "lol", "lalalaaala"]
# ::lemmas ["or", "class", "lol", "lalalaaala"]
(c12-0 / or
       :op2 (c12-2 / class
                   :ARG2-of (c12-1 / laugh-01
                                   :ARG0 (c12-3 / i)
                                   :manner (c12-4 / loud)
                                   :mode expressive)))

# ::snt I agree with you Christy! She thinks she's above the law now
# ::tokens ["I", "agree", "with", "you", "Christy", "!", "She", "thinks", "she", "'s", "above", "the", "law", "now"]
# ::lemmas ["i", "agree", "with", "you", "Christy", "!", "she", "think", "she", "be", "above", "the", "law", "now"]
(c13-1 / say-01
       :ARG0 (c13-7 / i)
       :ARG1 (c13-8 / agree-01
                    :ARG0 c13-7
                    :ARG2 (c13-3 / person
                                 :name (c13-0 / name
                                              :op1 "Christy")
                                 :ARG2-of c13-1))
       :ARG1-of (c13-5 / cause-01
                       :ARG0 (c13-6 / think-01
                                    :ARG0 c13-3
                                    :ARG1 (c13-9 / above
                                                 :op1 (c13-4 / law)
                                                 :domain c13-3
                                                 :time (c13-2 / now)))))

# ::snt Funny how shes so self righteous. Yet here she is... sad
# ::tokens ["Funny", "how", "she", "s", "so", "self", "righteous", ".", "Yet", "here", "she", "is", "...", "sad"]
# ::lemmas ["funny", "how", "she", "s", "so", "self", "righteous", ".", "yet", "here", "she", "be", "...", "sad"]
(c14-2 / multi-sentence
       :snt1 (c14-0 / funny
                    :domain (c14-6 / have-manner-91
                                   :ARG1 (c14-3 / she)
                                   :ARG2 (c14-1 / self-righteous
                                                :degree (c14-9 / so)
                                                :domain c14-3)))
       :snt2 (c14-8 / have-concession-91
                    :ARG1 (c14-4 / sad-02
                                 :ARG1 (c14-5 / she)
                                 :location (c14-7 / here))))

# ::snt Yep
# ::tokens ["Yep"]
# ::lemmas ["yep"]
(c15-0 / yep)

# ::snt Good for her. If anyone needs to be knocked off their high horse it's Bethenny.
# ::tokens ["Good", "for", "her", ".", "If", "anyone", "needs", "to", "be", "knocked", "off", "their", "high", "horse", "it", "'s", "Bethenny", "."]
# ::lemmas ["good", "for", "she", ".", "if", "anyone", "need", "to", "be", "knock", "off", "their", "high", "horse", "it", "be", "Bethenny", "."]
(c16-1 / multi-sentence
       :snt1 (c16-9 / good-04
                    :ARG2 (c16-2 / she))
       :snt2 (c16-4 / person
                    :name (c16-0 / name
                                 :op1 "Bethenny")
                    :condition (c16-3 / need-01
                                      :ARG0 (c16-8 / anyone)
                                      :ARG1 (c16-5 / knock-off-05
                                                   :ARG1 (c16-6 / horse
                                                                :poss c16-8
                                                                :ARG1-of (c16-7 / high-02))))))

# ::snt Dang, I was hoping they would throw the book at her. I guess being a celebrity does pay off even if you're on the D list. Some jail time would have done Lu some good. She needs knocked off her high horse. All she learned from this is...well nothing.
# ::tokens ["Dang", ",", "I", "was", "hoping", "they", "would", "throw", "the", "book", "at", "her", ".", "I", "guess", "being", "a", "celebrity", "does", "pay", "off", "even", "if", "you", "'re", "on", "the", "D", "list", ".", "Some", "jail", "time", "would", "have", "done", "Lu", "some", "good", ".", "She", "needs", "knocked", "off", "her", "high", "horse", ".", "All", "she", "learned", "from", "this", "is", "...", "well", "nothing", "."]
# ::lemmas ["Dang", ",", "i", "be", "hope", "they", "would", "throw", "the", "book", "at", "she", ".", "i", "guess", "be", "a", "celebrity", "do", "pay", "off", "even", "if", "you", "be", "on", "the", "D", "list", ".", "some", "jail", "time", "would", "have", "do", "Lu", "some", "good", ".", "she", "need", "knock", "off", "her", "high", "horse", ".", "all", "she", "learn", "from", "this", "be", "...", "well", "nothing", "."]
(c17-18 / multi-sentence
        :snt1 (c17-10 / hope-01
                      :ARG0 (c17-30 / i)
                      :ARG1 (c17-13 / throw-01
                                    :ARG0 (c17-23 / they)
                                    :ARG1 (c17-17 / book)
                                    :ARG2 (c17-0 / she))
                      :mod (c17-32 / dang
                                   :mode expressive))
        :snt2 (c17-14 / guess-01
                      :ARG0 (c17-8 / i)
                      :ARG1 (c17-27 / pay-off-02
                                    :ARG1 (c17-21 / celebrity)
                                    :concession (c17-26 / even-if
                                                        :op1 (c17-3 / list-01
                                                                    :ARG1 (c17-7 / you)
                                                                    :ARG2 (c17-6 / string-entity
                                                                                 :value "D")))))
        :snt3 (c17-22 / do-02
                      :ARG0 (c17-31 / time
                                    :mod (c17-12 / jail-01)
                                    :quant (c17-5 / some))
                      :ARG1 (c17-4 / good-02
                                   :quant (c17-25 / some))
                      :ARG2 (c17-19 / person
                                    :name (c17-24 / name
                                                  :op1 "Lu")))
        :snt4 (c17-20 / need-01
                      :ARG0 (c17-1 / she)
                      :ARG1 (c17-11 / knock-off-05
                                    :ARG1 (c17-29 / horse
                                                  :ARG1-of (c17-9 / high-02)
                                                  :poss c17-1)))
        :snt5 (c17-28 / nothing
                      :mod (c17-15 / all)
                      :ARG1-of (c17-16 / learn-01
                                       :ARG0 c17-1
                                       :ARG2 (c17-2 / this))))

# ::snt Anybody else might have gotten killed but yay for our little countess
# ::tokens ["Anybody", "else", "might", "have", "gotten", "killed", "but", "yay", "for", "our", "little", "countess"]
# ::lemmas ["anybody", "else", "might", "have", "get", "kill", "but", "yay", "for", "our", "little", "countess"]
(c18-5 / contrast-01
       :ARG1 (c18-2 / possible-01
                    :ARG1 (c18-3 / kill-01
                                 :ARG1 (c18-8 / anybody
                                              :mod (c18-1 / else))))
       :ARG2 (c18-0 / yay
                    :ARG1-of (c18-9 / cause-01
                                    :ARG0 (c18-7 / countess
                                                 :poss (c18-6 / we)
                                                 :mod (c18-4 / little)))
                    :mode expressive))

# ::snt o no not the countess
# ::tokens ["o", "no", "not", "the", "countess"]
# ::lemmas ["o", "no", "not", "the", "countess"]
(c19-0 / countess
       :domain (c19-1 / you)
       :polarity -)
