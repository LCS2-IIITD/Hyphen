# ::snt Congratulations Mary! Please post lots of photos. Love to everyone!
# ::tokens ["Congratulations", "Mary", "!", "Please", "post", "lots", "of", "photos", ".", "Love", "to", "everyone", "!"]
# ::lemmas ["Congratulations", "Mary", "!", "please", "post", "lot", "of", "photo", ".", "love", "to", "everyone", "!"]
(c1-3 / multi-sentence
      :snt1 (c1-7 / congratulate-01
                  :ARG1 (c1-5 / person
                              :name (c1-1 / name
                                          :op1 "Mary")))
      :snt2 (c1-2 / post-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-8 / photo
                              :quant (c1-6 / lot))
                  :mode imperative
                  :polite +)
      :snt3 (c1-9 / love-01
                  :ARG1 (c1-4 / everyone)))

# ::snt So me
# ::tokens ["So", "me"]
# ::lemmas ["so", "i"]
(c2-1 / infer-01
      :ARG1 (c2-0 / i))

# ::snt have a huge secret to share. Well Kylie can clearly afford to have a litter of babies with her billion dollar fortune!
# ::tokens ["have", "a", "huge", "secret", "to", "share", ".", "Well", "Kylie", "can", "clearly", "afford", "to", "have", "a", "litter", "of", "babies", "with", "her", "billion", "dollar", "fortune", "!"]
# ::lemmas ["have", "a", "huge", "secret", "to", "share", ".", "well", "Kylie", "can", "clearly", "afford", "to", "have", "a", "litter", "of", "baby", "with", "her", "billion", "dollar", "fortune", "!"]
(c4-3 / multi-sentence
      :snt1 (c4-8 / have-03
                  :ARG0 (c4-15 / i)
                  :ARG1 (c4-5 / secret
                              :mod (c4-14 / huge)
                              :ARG1-of (c4-0 / share-01
                                             :ARG0 c4-15)))
      :snt2 (c4-9 / possible-01
                  :ARG1 (c4-16 / afford-01
                               :ARG0 (c4-4 / person
                                           :name (c4-6 / name
                                                       :op1 "Kylie"))
                               :ARG1 (c4-7 / have-03
                                           :ARG0 c4-4
                                           :ARG1 (c4-10 / litter
                                                        :consist-of (c4-2 / baby)))
                               :ARG1-of (c4-12 / clear-06)
                               :instrument (c4-1 / fortune
                                                 :poss c4-4
                                                 :mod (c4-11 / monetary-quantity
                                                             :unit (c4-17 / dollar)
                                                             :quant 1000000000)))
                  :mod (c4-13 / well)))

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c5-0 / care-01
      :ARG0 (c5-1 / amr-unknown))

# ::snt Isn't her husband the father? tee hee
# ::tokens ["Is", "n't", "her", "husband", "the", "father", "?", "tee", "hee"]
# ::lemmas ["be", "not", "her", "husband", "the", "father", "?", "tee", "hee"]
(c6-1 / multi-sentence
      :snt1 (c6-6 / person
                  :ARG0-of (c6-5 / have-rel-role-91
                                 :ARG1 (c6-3 / she)
                                 :ARG2 (c6-7 / husband))
                  :domain (c6-2 / person
                                :ARG0-of (c6-4 / have-rel-role-91
                                               :ARG1 c6-3
                                               :ARG2 (c6-0 / father))
                                :polarity -)
                  :polarity (c6-9 / amr-unknown))
      :snt2 (c6-8 / tee-hee
                  :mode expressive))

# ::snt Wow daily beast, I'm sure you'll receive the Pulitzer for this "news" story.
# ::tokens ["Wow", "daily", "beast", ",", "I", "'m", "sure", "you", "'ll", "receive", "the", "Pulitzer", "for", "this", "\"", "news", "\"", "story", "."]
# ::lemmas ["wow", "daily", "beast", ",", "i", "be", "sure", "you", "'ll", "receive", "the", "Pulitzer", "for", "this", "\"", "news", "\"", "story", "."]
(c8-3 / say-01
      :ARG0 (c8-8 / i)
      :ARG1 (c8-0 / sure-02
                  :ARG0 c8-8
                  :ARG1 (c8-4 / receive-01
                              :ARG0 (c8-1 / beast)
                              :ARG1 (c8-9 / award
                                          :name (c8-2 / name
                                                      :op1 "Pulitzer"))
                              :ARG3 (c8-13 / story
                                           :mod (c8-5 / news)
                                           :mod (c8-7 / this))))
      :ARG2 c8-1
      :frequency (c8-11 / rate-entity-91
                        :ARG3 (c8-12 / temporal-quantity
                                     :unit (c8-10 / day)
                                     :quant 1))
      :mod (c8-6 / wow
                 :mode expressive))

# ::snt UPDATE: Soooo Travis Scott may not be the father of Kylie's baby
# ::tokens ["UPDATE", ":", "Soooo", "Travis", "Scott", "may", "not", "be", "the", "father", "of", "Kylie", "'s", "baby"]
# ::lemmas ["update", ":", "Soooo", "Travis", "Scott", "may", "not", "be", "the", "father", "of", "Kylie", "'s", "baby"]
(c9-10 / update-02
       :ARG2 (c9-6 / possible-01
                   :ARG1 (c9-5 / have-rel-role-91
                               :ARG0 (c9-3 / person
                                           :name (c9-2 / name
                                                       :op1 "Travis"
                                                       :op2 "Scott"))
                               :ARG1 (c9-1 / baby
                                           :ARG1 (c9-9 / person
                                                       :name (c9-7 / name
                                                                   :op1 "Kylie"))
                                           :ARG2 (c9-8 / child)
                                           :ARG0-of c9-5)
                               :polarity -)
                   :ARG2 (c9-0 / father))
       :mod (c9-4 / so-called))

# ::snt What is a Travis Scott? Honestly, I've never heard the name before.
# ::tokens ["What", "is", "a", "Travis", "Scott", "?", "Honestly", ",", "I", "'ve", "never", "heard", "the", "name", "before", "."]
# ::lemmas ["what", "be", "a", "Travis", "Scott", "?", "honestly", ",", "i", "'ve", "never", "hear", "the", "name", "before", "."]
(c10-2 / multi-sentence
       :snt1 (c10-5 / person
                    :name (c10-1 / name
                                 :op1 "Travis"
                                 :op2 "Scott")
                    :domain (c10-9 / amr-unknown))
       :snt2 (c10-4 / hear-01
                    :ARG0 (c10-8 / i)
                    :ARG1 (c10-6 / name-01)
                    :time (c10-3 / ever)
                    :time (c10-0 / before)
                    :ARG1-of (c10-7 / honest-01)
                    :polarity -))

# ::snt Yes!!! Thats what my sis told me at least
# ::tokens ["Yes", "!", "!", "!", "That", "s", "what", "my", "sis", "told", "me", "at", "least"]
# ::lemmas ["yes", "!", "!", "!", "that", "s", "what", "my", "sis", "tell", "i", "at", "least"]
(c11-1 / multi-sentence
       :snt1 (c11-0 / yes
                    :mode expressive)
       :snt2 (c11-7 / tell-01
                    :ARG0 (c11-5 / person
                                 :ARG0-of (c11-4 / have-rel-role-91
                                                 :ARG1 (c11-6 / i)
                                                 :ARG2 (c11-2 / sister)))
                    :ARG1 (c11-8 / that)
                    :ARG2 c11-6
                    :mod (c11-3 / at-least)))

# ::snt Michael Scott
# ::tokens ["Michael", "Scott"]
# ::lemmas ["Michael", "Scott"]
(c12-1 / Michael
       :name (c12-0 / name
                    :op1 "Scott"))

# ::snt She'll have such an ugly baby
# ::tokens ["She", "'ll", "have", "such", "an", "ugly", "baby"]
# ::lemmas ["she", "'ll", "have", "such", "an", "ugly", "baby"]
(c14-3 / have-03
       :ARG0 (c14-2 / she)
       :ARG1 (c14-1 / baby
                    :mod (c14-4 / ugly
                                :degree (c14-0 / such))))

# ::snt She did that on purpose SHE KNOW HOWBABIES GET HERE. I'm so done with this chick
# ::tokens ["She", "did", "that", "on", "purpose", "SHE", "KNOW", "HOWBABIES", "GET", "HERE", ".", "I", "'m", "so", "done", "with", "this", "chick"]
# ::lemmas ["she", "do", "that", "on", "purpose", "SHE", "KNOW", "howbabie", "get", "here", ".", "i", "be", "so", "do", "with", "this", "chick"]
(c15-2 / multi-sentence
       :snt1 (c15-11 / do-02
                     :ARG0 (c15-3 / she)
                     :ARG1 (c15-9 / that)
                     :ARG1-of (c15-7 / cause-01
                                     :ARG0 (c15-5 / know-01
                                                  :ARG0 c15-3
                                                  :ARG1 (c15-14 / thing
                                                                :manner-of (c15-10 / get-05
                                                                                   :ARG1 (c15-1 / babe)
                                                                                   :ARG2 (c15-4 / here))))))
       :snt2 (c15-6 / be-done-08
                    :ARG0 (c15-8 / i)
                    :ARG1 (c15-13 / chick
                                  :mod (c15-12 / this))
                    :degree (c15-0 / so)))

# ::snt Awe she got the first basterd good job girl
# ::tokens ["Awe", "she", "got", "the", "first", "basterd", "good", "job", "girl"]
# ::lemmas ["Awe", "she", "get", "the", "first", "basterd", "good", "job", "girl"]
(c16-3 / say-01
       :ARG0 (c16-5 / i)
       :ARG1 (c16-7 / get-01
                    :ARG0 (c16-0 / she)
                    :ARG1 (c16-4 / job
                                 :ord (c16-1 / ordinal-entity
                                             :value 1)
                                 :ARG1-of (c16-6 / good-02))
                    :mod (c16-2 / boy
                                :mode expressive))
       :ARG2 c16-0)

# ::snt He always looks high as hell... Hopefully the baby doesn't come out high
# ::tokens ["He", "always", "looks", "high", "as", "hell", "...", "Hopefully", "the", "baby", "does", "n't", "come", "out", "high"]
# ::lemmas ["he", "always", "look", "high", "as", "hell", "...", "hopefully", "the", "baby", "do", "not", "come", "out", "high"]
(c18-1 / multi-sentence
       :snt1 (c18-4 / look-02
                    :ARG0 (c18-3 / he)
                    :ARG1 (c18-6 / high-02
                                 :ARG1 c18-3
                                 :degree (c18-8 / as-hell))
                    :time (c18-7 / always))
       :snt2 (c18-2 / hope-01
                    :ARG1 (c18-5 / come-out-09
                                 :ARG1 (c18-0 / baby)
                                 :ARG2 (c18-9 / high-02)
                                 :polarity -)))

# ::snt These girls will sleep with anyone WTF! They may look like opposites but they are not. They are the same!
# ::tokens ["These", "girls", "will", "sleep", "with", "anyone", "WTF", "!", "They", "may", "look", "like", "opposites", "but", "they", "are", "not", ".", "They", "are", "the", "same", "!"]
# ::lemmas ["these", "girl", "will", "sleep", "with", "anyone", "WTF", "!", "they", "may", "look", "like", "opposite", "but", "they", "be", "not", ".", "they", "be", "the", "same", "!"]
(c19-4 / multi-sentence
       :snt1 (c19-5 / sleep-02
                    :ARG0 (c19-12 / girl
                                  :mod (c19-9 / this))
                    :ARG1 (c19-11 / anyone)
                    :mod (c19-0 / fuck
                                :mode expressive))
       :snt2 (c19-8 / contrast-01
                    :ARG1 (c19-6 / possible-01
                                 :ARG1 (c19-7 / look-02
                                              :ARG0 (c19-14 / they)
                                              :ARG1 (c19-1 / opposite)))
                    :ARG2 (c19-13 / look-02
                                  :ARG0 c19-14
                                  :ARG1 (c19-2 / opposite)
                                  :polarity -))
       :snt3 (c19-3 / same-01
                    :ARG1 (c19-10 / they)))

# ::snt Its actually s and we are having triplets!
# ::tokens ["Its", "actually", "s", "and", "we", "are", "having", "triplets", "!"]
# ::lemmas ["its", "actually", "s", "and", "we", "be", "have", "triplet", "!"]
(c20-0 / and
       :op1 (c20-1 / have-03
                   :ARG0 (c20-2 / we)
                   :ARG1 (c20-4 / triple-01)
                   :ARG1-of (c20-3 / actual-02))
       :op2 c20-4)

# ::snt Am I pregnant with yours ???
# ::tokens ["Am", "I", "pregnant", "with", "yours", "?", "?", "?"]
# ::lemmas ["be", "i", "pregnant", "with", "yours", "?", "?", "?"]
(c21-3 / impregnate-01
       :polarity (c21-2 / amr-unknown)
       :ARG1 (c21-1 / i)
       :ARG2 (c21-4 / thing
                    :poss (c21-0 / you)))

# ::snt Who. Cares.
# ::tokens ["Who", ".", "Cares", "."]
# ::lemmas ["who", ".", "Cares", "."]
(c22-0 / care-01
       :ARG0 (c22-1 / amr-unknown))

# ::snt !?
# ::tokens ["!", "?"]
# ::lemmas ["!", "?"]
(c24-0 / amr-unknown)

# ::snt Wild
# ::tokens ["Wild"]
# ::lemmas ["wild"]
(c25-1 / person
       :name (c25-0 / name
                    :op1 "Wild"))

# ::snt DID YOU THO DID YOU BC YES
# ::tokens ["DID", "YOU", "THO", "DID", "YOU", "BC", "YES"]
# ::lemmas ["do", "you", "THO", "do", "you", "BC", "yes"]
(c26-2 / think-01
       :ARG0 (c26-1 / you)
       :ARG1 (c26-0 / bear-02
                    :ARG0 c26-1
                    :mod (c26-4 / yes))
       :polarity (c26-3 / amr-unknown))

# ::snt Haha I don't believe it
# ::tokens ["Haha", "I", "do", "n't", "believe", "it"]
# ::lemmas ["haha", "i", "do", "not", "believe", "it"]
(c27-1 / believe-01
       :ARG0 (c27-3 / i)
       :ARG1 (c27-0 / it)
       :mod (c27-2 / haha
                   :mode expressive)
       :polarity -)

# ::snt YESSS!
# ::tokens ["YESSS", "!"]
# ::lemmas ["yesss", "!"]
(c28-0 / yes
       :mode expressive)

# ::snt Really?
# ::tokens ["Really", "?"]
# ::lemmas ["really", "?"]
(c29-0 / real-04
       :polarity (c29-1 / amr-unknown))

# ::snt bet, ill be there
# ::tokens ["bet", ",", "ill", "be", "there"]
# ::lemmas ["bet", ",", "ill", "be", "there"]
(c30-0 / bet-02
       :ARG1 (c30-1 / be-located-at-91
                    :ARG1 (c30-2 / i)
                    :ARG2 (c30-3 / there)
                    :polarity -))

# ::snt the flight is from CMH to LAX sunday at :55 a.m. but be there early so we can get section A on southwest
# ::tokens ["the", "flight", "is", "from", "CMH", "to", "LAX", "sunday", "at", ":", "55", "a.m.", "but", "be", "there", "early", "so", "we", "can", "get", "section", "A", "on", "southwest"]
# ::lemmas ["the", "flight", "be", "from", "CMH", "to", "LAX", "sunday", "at", ":", "55", "a.m.", "but", "be", "there", "early", "so", "we", "can", "get", "section", "a", "on", "southwest"]
(c31-8 / contrast-01
       :ARG1 (c31-0 / fly-01
                    :source (c31-14 / company
                                    :name (c31-3 / name
                                                 :op1 "CMH"))
                    :destination (c31-11 / airport
                                         :name (c31-6 / name
                                                      :op1 "LAX"))
                    :time (c31-13 / date-entity
                                  :weekday (c31-4 / sunday)
                                  :time "20:55"))
       :ARG2 (c31-2 / be-located-at-91
                    :ARG2 (c31-10 / there)
                    :time (c31-5 / early)
                    :purpose (c31-7 / possible-01
                                    :ARG1 (c31-12 / get-01
                                                  :ARG0 (c31-9 / we)
                                                  :ARG1 (c31-1 / section
                                                               :mod "A")
                                                  :location (c31-15 / southwest)))))

# ::snt yes i can
# ::tokens ["yes", "i", "can"]
# ::lemmas ["yes", "i", "can"]
(c32-0 / possible-01)

# ::snt ok can you buy a house neighboring me in hidden hills?
# ::tokens ["ok", "can", "you", "buy", "a", "house", "neighboring", "me", "in", "hidden", "hills", "?"]
# ::lemmas ["ok", "can", "you", "buy", "a", "house", "neighbor", "i", "in", "hidden", "hills", "?"]
(c33-6 / possible-01
       :ARG1 (c33-1 / buy-01
                    :ARG0 (c33-2 / you)
                    :ARG1 (c33-5 / house
                                 :ARG1-of (c33-3 / neighbor-01
                                                 :ARG2 (c33-8 / i)
                                                 :location (c33-7 / hill
                                                                  :ARG1-of (c33-4 / hide-01)))))
       :polarity (c33-9 / amr-unknown)
       :ARG1-of (c33-0 / okay-04))

# ::snt ill even take care of the kid
# ::tokens ["ill", "even", "take", "care", "of", "the", "kid"]
# ::lemmas ["ill", "even", "take", "care", "of", "the", "kid"]
(c34-0 / care-03
       :ARG0 (c34-3 / i)
       :ARG1 (c34-2 / kid)
       :mod (c34-1 / even))

# ::snt great now since youre moving to calabasas to be w kylie just go ahead and take me w u
# ::tokens ["great", "now", "since", "you", "re", "moving", "to", "calabasas", "to", "be", "w", "kylie", "just", "go", "ahead", "and", "take", "me", "w", "u"]
# ::lemmas ["great", "now", "since", "you", "re", "move", "to", "calabasas", "to", "be", "w", "kylie", "just", "go", "ahead", "and", "take", "i", "w", "u"]
(c35-3 / multi-sentence
       :snt1 (c35-12 / great
                     :time (c35-2 / now)
                     :ARG1-of (c35-8 / cause-01
                                     :ARG0 (c35-5 / move-01
                                                  :ARG0 (c35-1 / you)
                                                  :ARG2 (c35-4 / state
                                                               :name (c35-6 / name
                                                                            :op1 "California"))
                                                  :purpose (c35-0 / be-located-at-91
                                                                  :ARG1 c35-1
                                                                  :ARG2 c35-4
                                                                  :name (c35-7 / name
                                                                               :op1 "Kylie")))))
       :snt2 (c35-11 / and
                     :op1 (c35-10 / go-06
                                  :ARG0 (c35-14 / you)
                                  :ARG2 (c35-13 / ahead)
                                  :mod (c35-9 / just)
                                  :mode imperative)
                     :op2 (c35-15 / take-01
                                  :ARG0 c35-14
                                  :ARG1 (c35-16 / i)
                                  :ARG3 c35-14
                                  :mode imperative)))

# ::snt Or Is It Tyga's?
# ::tokens ["Or", "Is", "It", "Tyga", "'s", "?"]
# ::lemmas ["or", "be", "it", "tyga", "'s", "?"]
(c36-0 / or
       :op2 (c36-3 / thing
                   :polarity (c36-4 / amr-unknown)
                   :poss (c36-2 / person
                                :name (c36-1 / name
                                             :op1 "Tyga"))))

# ::snt reading this exact tweet by you right now sat in bed going wait what cause i have no idea who that dude is
# ::tokens ["reading", "this", "exact", "tweet", "by", "you", "right", "now", "sat", "in", "bed", "going", "wait", "what", "cause", "i", "have", "no", "idea", "who", "that", "dude", "is"]
# ::lemmas ["read", "this", "exact", "tweet", "by", "you", "right", "now", "sit", "in", "bed", "going", "wait", "what", "cause", "i", "have", "no", "idea", "who", "that", "dude", "be"]
(c37-4 / and
       :op1 (c37-3 / read-01
                   :ARG0 (c37-9 / i)
                   :ARG1 (c37-10 / tweet-01
                                 :ARG0 (c37-0 / you)
                                 :mod (c37-5 / exact)
                                 :mod (c37-15 / this))
                   :time (c37-1 / now
                                :mod (c37-13 / right)))
       :op2 (c37-11 / go-05
                    :ARG0 c37-9
                    :ARG1 (c37-7 / wait-01
                                 :ARG1 c37-9)
                    :ARG1-of (c37-8 / cause-01
                                    :ARG0 (c37-6 / have-03
                                                 :ARG0 c37-9
                                                 :ARG1 (c37-2 / idea
                                                              :topic (c37-12 / dude
                                                                             :mod (c37-14 / that)))
                                                 :polarity -))))

# ::snt Uuuhhh no thank you HAHA but I respect the shot you shot LOLOLOL
# ::tokens ["Uuuhhh", "no", "thank", "you", "HAHA", "but", "I", "respect", "the", "shot", "you", "shot", "LOLOLOL"]
# ::lemmas ["Uuuhhh", "no", "thank", "you", "haha", "but", "i", "respect", "the", "shot", "you", "shoot", "lololol"]
(c38-5 / contrast-01
       :ARG1 (c38-7 / thank-01
                    :ARG1 (c38-1 / you)
                    :mod (c38-9 / uuuhhh
                                :mode expressive)
                    :polarity -)
       :ARG2 (c38-3 / respect-01
                    :ARG0 (c38-6 / i)
                    :ARG1 (c38-2 / shoot-01
                                 :ARG1-of (c38-0 / shoot-01
                                                 :ARG0 c38-1))
                    :ARG2-of (c38-4 / laugh-01
                                    :ARG0 c38-6
                                    :manner (c38-8 / loud)
                                    :mode expressive)))

# ::snt Yaayyy!!!
# ::tokens ["Yaayyy", "!", "!", "!"]
# ::lemmas ["Yaayyy", "!", "!", "!"]
(c40-0 / yay
       :mode expressive)

# ::snt I'm not surprised
# ::tokens ["I", "'m", "not", "surprised"]
# ::lemmas ["i", "be", "not", "surprised"]
(c41-1 / surprise-01
       :ARG1 (c41-0 / i)
       :polarity -)

# ::snt I'm unfollowing- I can't stand reading tabloid "news"
# ::tokens ["I", "'m", "unfollowing-", "I", "ca", "n't", "stand", "reading", "tabloid", "\"", "news", "\""]
# ::lemmas ["i", "be", "unfollowing-", "i", "can", "not", "stand", "read", "tabloid", "\"", "news", "\""]
(c42-7 / and
       :op1 (c42-0 / follow-02
                   :ARG0 (c42-6 / i))
       :op2 (c42-4 / possible-01
                   :ARG1 (c42-2 / stand-03
                                :ARG0 c42-6
                                :ARG1 (c42-3 / read-01
                                             :ARG0 c42-6
                                             :ARG1 (c42-1 / news
                                                          :mod (c42-5 / tabloid))))
                   :polarity -))

# ::snt *****UNFOLLOWED***** This pseudo news station is on par with TMZ &amp; People magazine
# ::tokens ["*", "*", "*", "*", "*", "UNFOLLOWED", "*", "*", "*", "*", "*", "This", "pseudo", "news", "station", "is", "on", "par", "with", "TMZ", "&", "amp", ";", "People", "magazine"]
# ::lemmas ["*", "*", "*", "*", "*", "UNFOLLOWED", "*", "*", "*", "*", "*", "this", "pseudo", "news", "station", "be", "on", "par", "with", "TMZ", "&", "amp", ";", "People", "magazine"]
(c43-0 / follow-01
       :ARG1 (c43-3 / station
                    :mod (c43-1 / news)
                    :mod (c43-6 / pseudo)
                    :mod (c43-9 / this)
                    :prep-on (c43-2 / par
                                    :prep-with (c43-4 / and
                                                      :op1 (c43-8 / company
                                                                  :name (c43-5 / name
                                                                               :op1 "TMZ"))
                                                      :op2 (c43-10 / company
                                                                   :name (c43-7 / name
                                                                                :op1 "People"
                                                                                :op2 "Magazine"))))))

# ::snt How is this "News"?
# ::tokens ["How", "is", "this", "\"", "News", "\"", "?"]
# ::lemmas ["how", "be", "this", "\"", "news", "\"", "?"]
(c44-1 / news
       :domain (c44-2 / this)
       :manner (c44-0 / amr-unknown))

# ::snt That's what the mainstream media wants us to believe. We all know it's the spawn of Satan.
# ::tokens ["That", "'s", "what", "the", "mainstream", "media", "wants", "us", "to", "believe", ".", "We", "all", "know", "it", "'s", "the", "spawn", "of", "Satan", "."]
# ::lemmas ["that", "be", "what", "the", "mainstream", "medium", "want", "we", "to", "believe", ".", "we", "all", "know", "it", "be", "the", "spawn", "of", "Satan", "."]
(c45-1 / multi-sentence
       :snt1 (c45-9 / want-01
                    :ARG0 (c45-5 / media
                                 :ARG1-of (c45-12 / mainstream-02))
                    :ARG1 (c45-0 / believe-01
                                 :ARG0 (c45-8 / we)
                                 :ARG1 (c45-11 / that)))
       :snt2 (c45-6 / know-01
                    :ARG0 (c45-13 / we
                                  :mod (c45-4 / all))
                    :ARG1 (c45-3 / spawn
                                 :poss (c45-7 / person
                                              :name (c45-2 / name
                                                           :op1 "Satan"))
                                 :domain (c45-10 / it))))

# ::snt You guys, come on
# ::tokens ["You", "guys", ",", "come", "on"]
# ::lemmas ["you", "guy", ",", "come", "on"]
(c46-1 / come-on-25
       :ARG1 (c46-2 / you
                    :mod (c46-0 / guy))
       :mode imperative)

# ::snt Thank you!
# ::tokens ["Thank", "you", "!"]
# ::lemmas ["thank", "you", "!"]
(c47-2 / thank-01
       :ARG0 (c47-1 / i)
       :ARG1 (c47-0 / you)
       :mode expressive)

# ::snt REALLY?!!
# ::tokens ["REALLY", "?", "!", "!"]
# ::lemmas ["really", "?", "!", "!"]
(c48-0 / real-04
       :polarity (c48-1 / amr-unknown))

# ::snt This is ridiculous! Us who follow actual news can care less. This is absolute garbage! I expect it from from tmz and that's it!
# ::tokens ["This", "is", "ridiculous", "!", "Us", "who", "follow", "actual", "news", "can", "care", "less", ".", "This", "is", "absolute", "garbage", "!", "I", "expect", "it", "from", "from", "tmz", "and", "that", "'s", "it", "!"]
# ::lemmas ["this", "be", "ridiculous", "!", "Us", "who", "follow", "actual", "news", "can", "care", "less", ".", "this", "be", "absolute", "garbage", "!", "i", "expect", "it", "from", "from", "tmz", "and", "that", "be", "it", "!"]
(c49-9 / multi-sentence
       :snt1 (c49-16 / ridiculous-02
                     :ARG1 (c49-6 / this))
       :snt2 (c49-18 / possible-01
                     :ARG1 (c49-2 / have-degree-91
                                  :ARG1 (c49-19 / we
                                                :ARG0-of (c49-14 / follow-02
                                                                 :ARG1 (c49-15 / news
                                                                               :ARG1-of (c49-5 / actual-02))))
                                  :ARG2 (c49-12 / care-01
                                                :ARG0 c49-19)
                                  :ARG3 (c49-0 / less)))
       :snt3 (c49-7 / garbage
                    :mod (c49-4 / absolute)
                    :domain (c49-13 / this))
       :snt4 (c49-3 / and
                    :op1 (c49-17 / expect-01
                                 :ARG0 (c49-20 / i)
                                 :ARG1 (c49-1 / it)
                                 :ARG2 (c49-10 / publication
                                               :name (c49-11 / name
                                                             :op1 "tmz")))
                    :op2 (c49-8 / be-it-08
                                :ARG1 c49-1)))

# ::snt WTF! Why is this local fkn news?
# ::tokens ["WTF", "!", "Why", "is", "this", "local", "fkn", "news", "?"]
# ::lemmas ["WTF", "!", "why", "be", "this", "local", "fkn", "news", "?"]
(c50-7 / amr-unknown
       :ARG0-of (c50-5 / cause-01
                       :ARG1 (c50-1 / news
                                    :mod (c50-3 / publication
                                                :name (c50-2 / name
                                                             :op1 "Fkn"))
                                    :ARG1-of (c50-4 / local-02)
                                    :mod (c50-6 / this)))
       :mod (c50-0 / fuck
                   :mode expressive))
