# ::snt Halo, Golden Globes tidak disiarkan live di Nexmedia ya?
# ::tokens ["Halo", ",", "Golden", "Globes", "tidak", "disiarkan", "live", "di", "Nexmedia", "ya", "?"]
# ::lemmas ["Halo", ",", "Golden", "Globes", "tidak", "disiarkan", "live", "di", "Nexmedia", "ya", "?"]
(c1-2 / say-01
      :ARG0 (c1-8 / i)
      :ARG1 (c1-9 / tidak-00
                  :ARG0 (c1-4 / event
                              :name (c1-1 / name
                                          :op1 "Golden"
                                          :op2 "Globes"))
                  :ARG1 (c1-10 / disiarkan
                               :location c1-4)
                  :ARG2 (c1-7 / company
                              :name (c1-5 / name
                                          :op1 "Nexmedia"))
                  :manner (c1-6 / live))
      :ARG2 (c1-0 / you)
      :ARG1-of (c1-3 / request-confirmation-91))

# ::snt Are you saying they're all winners because they were nominated?
# ::tokens ["Are", "you", "saying", "they", "'re", "all", "winners", "because", "they", "were", "nominated", "?"]
# ::lemmas ["be", "you", "say", "they", "be", "all", "winner", "because", "they", "be", "nominate", "?"]
(c2-2 / say-01
      :polarity (c2-7 / amr-unknown)
      :ARG0 (c2-0 / you)
      :ARG1 (c2-3 / win-01
                  :ARG0 (c2-5 / they
                              :mod (c2-6 / all))
                  :ARG1-of (c2-4 / cause-01
                                 :ARG0 (c2-1 / nominate-01
                                             :ARG1 c2-5))))

# ::snt The only reason ill will be watching is because Angelina Joie will be there.
# ::tokens ["The", "only", "reason", "ill", "will", "be", "watching", "is", "because", "Angelina", "Joie", "will", "be", "there", "."]
# ::lemmas ["the", "only", "reason", "ill", "will", "be", "watch", "be", "because", "Angelina", "Joie", "will", "be", "there", "."]
(c3-4 / cause-01
      :ARG0 (c3-1 / be-located-at-91
                  :ARG1 (c3-3 / person
                              :name (c3-2 / name
                                          :op1 "Angelina"
                                          :op2 "Joie"))
                  :ARG2 (c3-7 / there))
      :ARG1 (c3-5 / watch-01
                  :ARG1 (c3-6 / ill-02))
      :mod (c3-0 / only))

# ::snt Uh....... inside scoop? Nominations not winners!
# ::tokens ["Uh", ".......", "inside", "scoop", "?", "Nominations", "not", "winners", "!"]
# ::lemmas ["uh", ".......", "inside", "scoop", "?", "nomination", "not", "winner", "!"]
(c4-1 / multi-sentence
      :snt1 (c4-6 / uh
                  :snt2 (c4-2 / scoop-01
                              :location (c4-5 / inside))
                  :mode expressive)
      :snt3 (c4-0 / nominate-01
                  :ARG1 (c4-3 / person
                              :ARG0-of (c4-4 / win-01))
                  :polarity -))

# ::snt Winners?? Are you sure?
# ::tokens ["Winners", "?", "?", "Are", "you", "sure", "?"]
# ::lemmas ["winner", "?", "?", "be", "you", "sure", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-3 / win-01
                  :polarity (c5-5 / amr-unknown))
      :snt2 (c5-2 / sure-02
                  :polarity (c5-4 / amr-unknown)
                  :ARG0 (c5-0 / you)))

# ::snt I think you mean nomination winners...
# ::tokens ["I", "think", "you", "mean", "nomination", "winners", "..."]
# ::lemmas ["i", "think", "you", "mean", "nomination", "winner", "..."]
(c7-6 / think-01
      :ARG0 (c7-5 / i)
      :ARG1 (c7-1 / mean-01
                  :ARG0 (c7-0 / you)
                  :ARG2 (c7-3 / person
                              :ARG0-of (c7-4 / win-01
                                             :ARG1 (c7-2 / nominate-01)))))

# ::snt Ummmm
# ::tokens ["Ummmm"]
# ::lemmas ["Ummmm"]
(c8-0 / ummmm
      :mode expressive)

# ::snt Thanks for sharing
# ::tokens ["Thanks", "for", "sharing"]
# ::lemmas ["thank", "for", "share"]
(c10-2 / thank-01
       :ARG1 (c10-1 / you)
       :ARG2 (c10-0 / share-01
                    :ARG0 c10-1))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c11-0 / amr-empty)

# ::snt Oprah you are amazing! You have changed the world on so many levels you are the most authentic soul! Thank you for sharing and caring! You have changed lives and inspired so many! We love you!!
# ::tokens ["Oprah", "you", "are", "amazing", "!", "You", "have", "changed", "the", "world", "on", "so", "many", "levels", "you", "are", "the", "most", "authentic", "soul", "!", "Thank", "you", "for", "sharing", "and", "caring", "!", "You", "have", "changed", "lives", "and", "inspired", "so", "many", "!", "We", "love", "you", "!", "!"]
# ::lemmas ["Oprah", "you", "be", "amazing", "!", "you", "have", "change", "the", "world", "on", "so", "many", "level", "you", "be", "the", "most", "authentic", "soul", "!", "thank", "you", "for", "share", "and", "caring", "!", "you", "have", "change", "life", "and", "inspire", "so", "many", "!", "we", "love", "you", "!", "!"]
(c13-14 / multi-sentence
        :snt1 (c13-10 / amaze-01
                      :ARG0 (c13-19 / person
                                    :name (c13-18 / name
                                                  :op1 "Oprah")))
        :snt2 (c13-5 / have-degree-91
                     :ARG1 c13-19
                     :ARG2 (c13-8 / authentic-02
                                  :ARG1 c13-19)
                     :ARG3 (c13-6 / most))
        :snt3 (c13-9 / thank-01
                     :ARG0 (c13-20 / we)
                     :ARG1 (c13-4 / you)
                     :ARG2 (c13-7 / and
                                  :op1 (c13-0 / share-01
                                              :ARG0 c13-4)
                                  :op2 (c13-16 / care-01
                                               :ARG0 c13-4)))
        :snt4 (c13-23 / and
                      :op1 (c13-13 / change-01
                                   :ARG0 (c13-11 / you)
                                   :ARG1 (c13-1 / life))
                      :op2 (c13-22 / inspire-01
                                   :ARG0 c13-11
                                   :ARG1 (c13-15 / person
                                                 :ARG1-of (c13-21 / have-quant-91
                                                                  :ARG2 (c13-17 / many)
                                                                  :ARG3 (c13-3 / so)))))
        :snt5 (c13-12 / love-01
                      :ARG0 c13-20
                      :ARG1 (c13-2 / you)))

# ::snt Let this sink in:Greta Gerwig directed her lead actor to a Golden Globe winGreta Gerwig directed the film that won best pictureGreta Gerwig was not dominated for best director - all men were.
# ::tokens ["Let", "this", "sink", "in", ":", "Greta", "Gerwig", "directed", "her", "lead", "actor", "to", "a", "Golden", "Globe", "winGreta", "Gerwig", "directed", "the", "film", "that", "won", "best", "pictureGreta", "Gerwig", "was", "not", "dominated", "for", "best", "director", "-", "all", "men", "were", "."]
# ::lemmas ["let", "this", "sink", "in", ":", "Greta", "Gerwig", "direct", "her", "lead", "actor", "to", "a", "Golden", "Globe", "winGreta", "Gerwig", "direct", "the", "film", "that", "win", "good", "picturegreta", "Gerwig", "be", "not", "dominate", "for", "good", "director", "-", "all", "man", "be", "."]
(c14-16 / multi-sentence
        :snt1 (c14-1 / let-01
                     :ARG0 (c14-6 / you)
                     :ARG1 (c14-0 / sink-in-02
                                  :ARG0 (c14-26 / person
                                                :name (c14-24 / name
                                                              :op1 "Greta"
                                                              :op2 "Gerwig"))
                                  :ARG1 (c14-12 / this))
                     :mode imperative)
        :snt2 (c14-30 / direct-01
                      :ARG0 c14-26
                      :ARG1 (c14-17 / person
                                    :ARG0-of (c14-11 / act-01)
                                    :ARG0-of (c14-14 / lead-01)
                                    :poss c14-26)
                      :ARG2 (c14-28 / win-01
                                    :ARG0 c14-17
                                    :ARG1 (c14-10 / award
                                                  :name (c14-18 / name
                                                                :op1 "Golden"
                                                                :op2 "Globe"))))
        :snt3 (c14-21 / direct-01
                      :ARG0 (c14-5 / person
                                   :name (c14-27 / name
                                                 :op1 "Greta"
                                                 :op2 "Gerwig"))
                      :ARG1 (c14-23 / film
                                    :ARG0-of (c14-2 / win-01
                                                    :ARG1 (c14-3 / picture
                                                                 :ARG1-of (c14-7 / have-degree-91
                                                                                 :ARG2 (c14-13 / good-02
                                                                                               :ARG1 c14-3)
                                                                                 :ARG3 (c14-8 / most))))))
        :snt4 (c14-19 / dominate-01
                      :ARG0 (c14-22 / man
                                    :mod (c14-9 / all))
                      :ARG1 (c14-15 / person
                                    :ARG0-of (c14-25 / direct-01))
                      :ARG2 (c14-29 / have-degree-91
                                    :ARG1 c14-15
                                    :ARG2 (c14-4 / good-02
                                                 :ARG1 c14-15)
                                    :ARG3 (c14-20 / most))
                      :polarity -))

# ::snt Oh the weather outside is frightful but Reading Wolff is so delightful let it snow let it snow let it snow! Audible deal: FREE AUDIOBOOK W/ TRIAL MEMBERSHIP! &gt;&gt; PLUS KINDLE VERSION IS JUST $15 Fire and Fury: Inside the Trump White House by Michael Wolff
# ::tokens ["Oh", "the", "weather", "outside", "is", "frightful", "but", "Reading", "Wolff", "is", "so", "delightful", "let", "it", "snow", "let", "it", "snow", "let", "it", "snow", "!", "Audible", "deal", ":", "FREE", "AUDIOBOOK", "W/", "TRIAL", "MEMBERSHIP", "!", "&", "gt;&gt", ";", "PLUS", "KINDLE", "VERSION", "IS", "JUST", "$", "15", "Fire", "and", "Fury", ":", "Inside", "the", "Trump", "White", "House", "by", "Michael", "Wolff"]
# ::lemmas ["oh", "the", "weather", "outside", "be", "frightful", "but", "Reading", "Wolff", "be", "so", "delightful", "let", "it", "snow", "let", "it", "snow", "let", "it", "snow", "!", "audible", "deal", ":", "free", "AUDIOBOOK", "w/", "trial", "MEMBERSHIP", "!", "&", "gt;&gt", ";", "PLUS", "KINDLE", "VERSION", "be", "just", "$", "15", "Fire", "and", "Fury", ":", "inside", "the", "Trump", "White", "House", "by", "Michael", "Wolff"]
(c15-17 / multi-sentence
        :snt1 (c15-25 / frighten-01
                      :ARG0 (c15-31 / weather
                                    :location (c15-6 / outside))
                      :mod (c15-15 / oh
                                   :mode expressive))
        :snt2 (c15-8 / have-degree-91
                     :ARG1 (c15-28 / person
                                   :name (c15-26 / name
                                                 :op1 "Reading"
                                                 :op2 "Wolff"))
                     :ARG2 (c15-33 / delightful)
                     :ARG3 (c15-0 / so)
                     :ARG6 (c15-2 / let-01
                                  :ARG0 c15-28
                                  :ARG1 (c15-7 / snow-01)
                                  :ARG0-of (c15-21 / cause-01
                                                   :ARG1 (c15-13 / let-01
                                                                 :ARG0 c15-28
                                                                 :ARG1 (c15-5 / snow-01)))))
        :snt3 (c15-22 / deal-01
                      :ARG2 (c15-12 / audio)
                      :ARG1-of (c15-9 / mean-01
                                      :ARG2 (c15-11 / and
                                                    :op1 (c15-16 / book
                                                                 :name (c15-19 / name
                                                                               :op1 "Fire"
                                                                               :op2 "and"
                                                                               :op3 "Fury")
                                                                 :source (c15-18 / person
                                                                                 :name (c15-29 / name
                                                                                               :op1 "Michael"
                                                                                               :op2 "Wolff"))
                                                                 :ARG1-of (c15-30 / free-03)
                                                                 :mod (c15-1 / book
                                                                             :name (c15-23 / name
                                                                                           :op1 "Trial"
                                                                                           :op2 "MembershIP")))
                                                    :op2 (c15-4 / publication
                                                                :name (c15-32 / name
                                                                              :op1 "Trial"
                                                                              :op2 "MembershIP"))))
                      :mod (c15-3 / plus)
                      :ARG1-of (c15-14 / cost-01
                                       :ARG2 (c15-24 / monetary-quantity
                                                     :unit (c15-20 / dollar)
                                                     :mod (c15-10 / just)
                                                     :quant 15)))
        :snt4 c15-4
        :name (c15-27 / name
                      :op1 "Fire"
                      :op2 "and"
                      :op3 "Fury")
        :source c15-18)

# ::snt With a complete list of all the accused gropers
# ::tokens ["With", "a", "complete", "list", "of", "all", "the", "accused", "gropers"]
# ::lemmas ["with", "a", "complete", "list", "of", "all", "the", "accuse", "groper"]
(c16-1 / list-01
       :ARG2 (c16-0 / person
                    :ARG1-of (c16-4 / accuse-01)
                    :ARG0-of (c16-5 / grop-01)
                    :mod (c16-3 / all))
       :ARG1-of (c16-2 / complete-02))

# ::snt Next year it will be the Golden Gropes
# ::tokens ["Next", "year", "it", "will", "be", "the", "Golden", "Gropes"]
# ::lemmas ["Next", "year", "it", "will", "be", "the", "Golden", "Gropes"]
(c17-2 / park
       :name (c17-0 / name
                    :op1 "Golden"
                    :op2 "Gropes")
       :time (c17-1 / year
                    :mod (c17-3 / next)))

# ::snt !
# ::tokens ["!"]
# ::lemmas ["!"]
(c18-0 / thing
       :mode expressive)

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c21-0 / amr-empty)

# ::snt Oprah wants to be Queen. Dont be fooled
# ::tokens ["Oprah", "wants", "to", "be", "Queen", ".", "Do", "nt", "be", "fooled"]
# ::lemmas ["Oprah", "want", "to", "be", "Queen", ".", "do", "not", "be", "fool"]
(c22-3 / multi-sentence
       :snt1 (c22-5 / want-01
                    :ARG0 (c22-4 / person
                                 :name (c22-2 / name
                                              :op1 "Oprah"))
                    :ARG1 (c22-6 / queen
                                 :domain c22-4))
       :snt2 (c22-0 / fool-01
                    :ARG0 (c22-1 / you)
                    :polarity -
                    :mode imperative))

# ::snt UpCoin - New crypto trading platform with VERY low fees! $500 trading expenses free for first ! you don't want to wait just join Binance one of the top exchange
# ::tokens ["UpCoin", "-", "New", "crypto", "trading", "platform", "with", "VERY", "low", "fees", "!", "$", "500", "trading", "expenses", "free", "for", "first", "!", "you", "do", "n't", "want", "to", "wait", "just", "join", "Binance", "one", "of", "the", "top", "exchange"]
# ::lemmas ["upcoin", "-", "new", "crypto", "trading", "platform", "with", "very", "low", "fee", "!", "$", "500", "trading", "expense", "free", "for", "first", "!", "you", "do", "not", "want", "to", "wait", "just", "join", "Binance", "one", "of", "the", "top", "exchange"]
(c23-10 / multi-sentence
        :snt1 (c23-21 / platform
                      :name (c23-19 / name
                                    :op1 "UpCoin")
                      :mod (c23-20 / exchange
                                   :mod (c23-14 / crypto))
                      :ARG1-of (c23-12 / new-01)
                      :ARG0-of (c23-5 / have-03
                                      :ARG1 (c23-18 / fee
                                                    :ARG1-of (c23-0 / low-04
                                                                    :degree (c23-4 / very)))))
        :snt2 (c23-22 / free-03
                      :ARG1 (c23-6 / monetary-quantity
                                   :unit (c23-25 / dollar)
                                   :ARG1-of (c23-9 / expend-01
                                                   :ARG2 (c23-8 / trade-01))
                                   :quant 500)
                      :ARG3 (c23-11 / pay-01
                                    :ARG0 (c23-3 / you)
                                    :ARG1 c23-6)
                      :ord (c23-2 / ordinal-entity
                                  :value 1))
        :snt3 (c23-23 / want-01
                      :ARG0 c23-3
                      :ARG1 (c23-1 / wait-01
                                   :ARG1 c23-3
                                   :ARG2 (c23-7 / join-01
                                                :ARG0 c23-3
                                                :ARG1 (c23-13 / exchange
                                                              :ARG1-of (c23-24 / include-91
                                                                               :ARG2 (c23-15 / exchange
                                                                                             :mod (c23-16 / top)))
                                                              :quant 1)
                                                :mod (c23-17 / just)))
                      :polarity -))

# ::snt Who are the people that run the Golden Globe Awards ??? Nobody know who are the members of HFPA, how they deice who 'wins', where are they from?
# ::tokens ["Who", "are", "the", "people", "that", "run", "the", "Golden", "Globe", "Awards", "?", "?", "?", "Nobody", "know", "who", "are", "the", "members", "of", "HFPA", ",", "how", "they", "deice", "who", "'", "wins", "'", ",", "where", "are", "they", "from", "?"]
# ::lemmas ["who", "be", "the", "people", "that", "run", "the", "Golden", "Globe", "Awards", "?", "?", "?", "nobody", "know", "who", "be", "the", "member", "of", "HFPA", ",", "how", "they", "deice", "who", "'", "win", "'", ",", "where", "be", "they", "from", "?"]
(c25-9 / multi-sentence
       :snt1 (c25-15 / person
                     :ARG0-of (c25-14 / run-01
                                      :ARG1 (c25-7 / award
                                                   :name (c25-13 / name
                                                                 :op1 "Golden"
                                                                 :op2 "Globe"
                                                                 :op3 "Awards")))
                     :domain (c25-5 / amr-unknown))
       :snt2 (c25-4 / and
                    :op1 (c25-2 / know-01
                                :ARG0 (c25-11 / nobody)
                                :ARG1 (c25-10 / person
                                              :ARG0-of (c25-1 / have-org-role-91
                                                              :ARG1 (c25-0 / organization
                                                                           :name (c25-16 / name
                                                                                         :op1 " HFPA"))
                                                              :ARG2 (c25-3 / member))))
                    :op2 (c25-6 / thing
                                :manner-of (c25-17 / wins-01
                                                   :ARG0 (c25-12 / they))))
       :snt3 (c25-8 / be-from-91
                    :ARG1 c25-12)
       :ARG2 (c25-18 / amr-unknown))

# ::snt Wow, Im pumped, did any conservatives win???...any...maybe one...oh well
# ::tokens ["Wow", ",", "I", "m", "pumped", ",", "did", "any", "conservatives", "win???", "...", "any", "...", "maybe", "one", "...", "oh", "well"]
# ::lemmas ["wow", ",", "i", "m", "pump", ",", "do", "any", "conservative", "win???", "...", "any", "...", "maybe", "one", "...", "oh", "well"]
(c26-2 / multi-sentence
       :snt1 (c26-4 / pump-01
                    :ARG1 (c26-9 / i))
       :snt2 (c26-5 / win-01
                    :polarity (c26-10 / amr-unknown)
                    :ARG0 (c26-3 / person
                                 :mod (c26-6 / conservative)
                                 :mod (c26-11 / any))
                    :polarity (c26-7 / amr-unknown))
       :snt3 (c26-0 / or
                    :op1 (c26-13 / person
                                 :mod c26-11))
       :op2 (c26-8 / person
                   :ARG1-of (c26-12 / possible-01)
                   :quant 1)
       :snt4 (c26-1 / oh-well
                    :mode expressive))

# ::snt Oprah.That is all
# ::tokens ["Oprah", ".", "That", "is", "all"]
# ::lemmas ["Oprah", ".", "that", "be", "all"]
(c27-2 / multi-sentence
       :snt1 (c27-3 / person
                    :name (c27-1 / name
                                 :op1 "Oprah"))
       :snt2 (c27-0 / be-it-08
                    :ARG1 (c27-4 / that)))

# ::snt Nobody CaresPeriod Enough Said..
# ::tokens ["Nobody", "CaresPeriod", "Enough", "Said", ".."]
# ::lemmas ["Nobody", "CaresPeriod", "Enough", "say", ".."]
(c28-1 / say-01
       :ARG0 (c28-0 / nobody)
       :ARG1 (c28-5 / care-01
                    :ARG0 c28-0)
       :time (c28-4 / period
                    :ARG1-of (c28-3 / have-quant-91
                                    :ARG3 (c28-2 / enough))))

# ::snt Pialanya kenapa kaya piala beli buat lomba futsal sekolah dah
# ::tokens ["Pialanya", "kenapa", "kaya", "piala", "beli", "buat", "lomba", "futsal", "sekolah", "dah"]
# ::lemmas ["Pialanya", "kenapa", "kaya", "piala", "beli", "buat", "lomba", "futsal", "sekolah", "dah"]
(c29-13 / and
        :op1 (c29-5 / person
                    :name (c29-2 / name
                                 :op1 "Pialanya"))
        :op2 (c29-3 / person
                    :name (c29-4 / name
                                 :op1 "Kenapa"))
        :op3 (c29-14 / person
                     :location (c29-7 / country
                                      :name (c29-6 / name
                                                   :op1 "Australia"))
                     :mod (c29-1 / beli))
        :op4 (c29-8 / person
                    :location (c29-15 / country-region
                                      :name (c29-9 / name
                                                   :op1 "Lomba"))
                    :mod (c29-0 / futsal))
        :op5 (c29-12 / person
                     :location (c29-10 / city
                                       :name (c29-11 / name
                                                     :op1 "Dah"))))

# ::snt Too much self aggrandizement
# ::tokens ["Too", "much", "self", "aggrandizement"]
# ::lemmas ["too", "much", "self", "aggrandizement"]
(c31-2 / aggrandize-00
       :ARG0 (c31-1 / self
                    :ARG1-of c31-2)
       :ARG1-of (c31-3 / have-quant-91
                       :ARG2 (c31-0 / much)
                       :ARG3 (c31-4 / too)))

# ::snt It was about time Gary Oldman received an award. Talented actor!
# ::tokens ["It", "was", "about", "time", "Gary", "Oldman", "received", "an", "award", ".", "Talented", "actor", "!"]
# ::lemmas ["it", "be", "about", "time", "Gary", "Oldman", "receive", "an", "award", ".", "talented", "actor", "!"]
(c32-1 / multi-sentence
       :snt1 (c32-3 / receive-01
                    :ARG0 (c32-4 / person
                                 :name (c32-0 / name
                                              :op1 "Gary"
                                              :op2 "Oldman"))
                    :ARG1 (c32-8 / award-01
                                 :ARG2 c32-4)
                    :time (c32-7 / about-time))
       :snt2 (c32-2 / person
                    :ARG0-of (c32-5 / act-01)
                    :ARG1-of (c32-6 / Talented-00)))

# ::snt no need to see the list, it's the same every year: black people who are st to win something, asians, homosexuals, activists, feminists etc
# ::tokens ["no", "need", "to", "see", "the", "list", ",", "it", "'s", "the", "same", "every", "year", ":", "black", "people", "who", "are", "st", "to", "win", "something", ",", "asians", ",", "homosexuals", ",", "activists", ",", "feminists", "etc"]
# ::lemmas ["no", "need", "to", "see", "the", "list", ",", "it", "be", "the", "same", "every", "year", ":", "black", "people", "who", "be", "st", "to", "win", "something", ",", "asian", ",", "homosexual", ",", "activist", ",", "feminist", "etc"]
(c33-10 / and
        :op1 (c33-17 / need-01
                     :ARG1 (c33-0 / see-01
                                  :ARG1 (c33-1 / list-01))
                     :polarity -)
        :op2 (c33-4 / same-01
                    :ARG1 c33-1
                    :ARG2 (c33-20 / person
                                  :ARG1-of (c33-11 / black-05)
                                  :ARG0-of (c33-9 / try-01
                                                  :ARG1 (c33-21 / win-01
                                                                :ARG0 c33-20
                                                                :ARG2 (c33-3 / something)))
                                  :example (c33-8 / and
                                                  :op1 (c33-12 / person
                                                               :mod (c33-14 / continent
                                                                            :name (c33-13 / name
                                                                                          :op1 "Asia")))
                                                  :op2 (c33-2 / person
                                                              :mod (c33-6 / homosexual))
                                                  :op3 (c33-7 / activist)
                                                  :op4 (c33-16 / feminist)
                                                  :op5 (c33-19 / et-cetera)))
                    :frequency (c33-18 / rate-entity-91
                                       :ARG3 (c33-15 / temporal-quantity
                                                     :unit (c33-5 / year)
                                                     :quant 1))))

# ::snt Lady bird not released yet
# ::tokens ["Lady", "bird", "not", "released", "yet"]
# ::lemmas ["lady", "bird", "not", "release", "yet"]
(c34-0 / release-01
       :ARG1 (c34-1 / bird
                    :mod (c34-3 / lady))
       :time (c34-2 / yet)
       :polarity -)

# ::snt Conspicuously not on that list, Muslim women.
# ::tokens ["Conspicuously", "not", "on", "that", "list", ",", "Muslim", "women", "."]
# ::lemmas ["conspicuously", "not", "on", "that", "list", ",", "Muslim", "woman", "."]
(c35-3 / woman
       :mod (c35-1 / religious-group
                   :name (c35-0 / name
                                :op1 "Muslim"))
       :location (c35-2 / list
                        :mod (c35-5 / that))
       :manner (c35-4 / conspicuous
                      :polarity -))

# ::snt Can't find lady bird on the net...anyone knows the link to it?
# ::tokens ["Ca", "n't", "find", "lady", "bird", "on", "the", "net", "...", "anyone", "knows", "the", "link", "to", "it", "?"]
# ::lemmas ["can", "not", "find", "lady", "bird", "on", "the", "net", "...", "anyone", "know", "the", "link", "to", "it", "?"]
(c36-2 / multi-sentence
       :snt1 (c36-4 / possible-01
                    :ARG1 (c36-0 / find-01
                                 :ARG1 (c36-1 / bird
                                              :mod (c36-5 / lady))
                                 :location (c36-3 / net))
                    :polarity -)
       :snt2 (c36-6 / know-01
                    :polarity (c36-8 / amr-unknown)
                    :ARG0 (c36-7 / anyone)
                    :ARG1 (c36-10 / link-01
                                  :ARG2 (c36-9 / it))))

# ::snt snore.i bet ratings for show were down?
# ::tokens ["snore.i", "bet", "ratings", "for", "show", "were", "down", "?"]
# ::lemmas ["snore.i", "bet", "rating", "for", "show", "be", "down", "?"]
(c37-0 / bet-01
       :ARG0 (c37-3 / i)
       :ARG2 (c37-5 / down-03
                    :ARG1 (c37-2 / rate-01
                                 :ARG1 (c37-1 / show-04)))
       :polarity (c37-4 / amr-unknown))

# ::snt Any african Americans?
# ::tokens ["Any", "african", "Americans", "?"]
# ::lemmas ["Any", "african", "Americans", "?"]
(c38-1 / person
       :polarity (c38-4 / amr-unknown)
       :mod (c38-2 / country
                   :name (c38-0 / name
                                :op1 "Africa"))
       :mod (c38-3 / any))

# ::snt Me
# ::tokens ["Me"]
# ::lemmas ["i"]
(c39-0 / i)

# ::snt Aidez nous mdiatiser ce pour les sans abris Des camions frigo transforms en habits durgence pour les sans abris. Frdric Tabary premier camion de place sera livr le janvier.Nous dsirons en transformer en
# ::tokens ["Aidez", "nous", "mdiatiser", "ce", "pour", "les", "sans", "abris", "Des", "camions", "frigo", "transforms", "en", "habits", "durgence", "pour", "les", "sans", "abris", ".", "Frdric", "Tabary", "premier", "camion", "de", "place", "sera", "livr", "le", "janvier", ".", "Nous", "dsirons", "en", "transformer", "en"]
# ::lemmas ["Aidez", "nous", "mdiatiser", "ce", "pour", "les", "san", "abris", "Des", "camion", "frigo", "transform", "en", "habit", "durgence", "pour", "les", "san", "abris", ".", "Frdric", "Tabary", "premier", "camion", "de", "place", "sera", "livr", "le", "janvier", ".", "nous", "dsiron", "en", "transformer", "en"]
(c40-12 / multi-sentence
        :snt1 (c40-21 / propose-01
                      :ARG0 (c40-13 / person
                                    :name (c40-20 / name
                                                  :op1 "Aidez"))
                      :ARG1 (c40-2 / person
                                   :ARG0-of (c40-4 / mediate-01
                                                   :ARG1 (c40-1 / pour-02
                                                                :ARG0 c40-2
                                                                :ARG1 (c40-5 / have-polarity-91
                                                                             :ARG1 (c40-8 / abris)
                                                                             :ARG2 -)))))
        :snt2 (c40-9 / transform-01
                     :ARG0 (c40-15 / city
                                   :name (c40-14 / name
                                                 :op1 "Des"
                                                 :op2 "Camions"
                                                 :op3 "Frigo"))
                     :ARG1 (c40-23 / habit
                                   :mod (c40-24 / durgence))
                     :ARG1-of (c40-7 / pour-02
                                     :ARG0 (c40-3 / have-polarity-91
                                                  :ARG1 (c40-10 / abris)
                                                  :ARG2 -)))
        :snt3 (c40-25 / pour-02
                      :ARG0 (c40-19 / person
                                    :name (c40-22 / name
                                                  :op1 "Frdric"
                                                  :op2 "Tabary")
                                    :mod (c40-17 / premier))
                      :ARG1 c40-15
                      :name (c40-16 / name
                                    :op1 "Cambion"
                                    :op2 "de"
                                    :op3 "place"))
        :ARG2 (c40-0 / livr-07
                     :ARG1 (c40-11 / person
                                   :ARG0-of (c40-18 / have-org-role-91
                                                    :ARG2 (c40-6 / janvier)))))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c41-0 / amr-empty)

# ::snt Golden Globes : Complete winners list via abcnews
# ::tokens ["Golden", "Globes", ":", "Complete", "winners", "list", "via", "abcnews"]
# ::lemmas ["Golden", "Globes", ":", "complete", "winner", "list", "via", "abcnew"]
(c42-8 / thing
       :ARG2-of (c42-5 / list-01
                       :ARG1 (c42-4 / person
                                    :ARG0-of (c42-6 / win-01)))
       :source (c42-1 / publication
                      :name (c42-0 / name
                                   :op1 "ABCnews"))
       :topic (c42-2 / event
                     :name (c42-3 / name
                                  :op1 "Golden"
                                  :op2 "Globes"))
       :ARG1-of (c42-7 / complete-02))
