# ::snt at least he know something now
# ::tokens ["at", "least", "he", "know", "something", "now"]
# ::lemmas ["at", "least", "he", "know", "something", "now"]
(c1-3 / know-01
      :ARG0 (c1-2 / he)
      :ARG1 (c1-1 / something)
      :mod (c1-4 / at-least)
      :time (c1-0 / now))

# ::snt He bought the cow when he was getting the milk for free? SMH
# ::tokens ["He", "bought", "the", "cow", "when", "he", "was", "getting", "the", "milk", "for", "free", "?", "SMH"]
# ::lemmas ["he", "buy", "the", "cow", "when", "he", "be", "get", "the", "milk", "for", "free", "?", "smh"]
(c3-1 / buy-01
      :polarity (c3-6 / amr-unknown)
      :ARG0 (c3-3 / he)
      :ARG1 (c3-4 / cow)
      :time (c3-7 / get-01
                  :ARG0 c3-3
                  :ARG1 (c3-2 / milk)
                  :ARG3 (c3-0 / free-03
                              :ARG1 c3-2))
      :ARG1-of (c3-5 / humble-01))

# ::snt Ma sila diay in real life?
# ::tokens ["Ma", "sila", "diay", "in", "real", "life", "?"]
# ::lemmas ["Ma", "sila", "diay", "in", "real", "life", "?"]
(c4-0 / ma-day
      :polarity (c4-4 / amr-unknown)
      :mod (c4-1 / sila
                 :mode expressive)
      :location (c4-3 / life
                      :ARG1-of (c4-2 / real-04)))

# ::snt This blows me away! Didnt realize they were an item, until now!! Best news
# ::tokens ["This", "blows", "me", "away", "!", "Did", "nt", "realize", "they", "were", "an", "item", ",", "until", "now", "!", "!", "Best", "news"]
# ::lemmas ["this", "blow", "i", "away", "!", "do", "not", "realize", "they", "be", "an", "item", ",", "until", "now", "!", "!", "good", "news"]
(c5-1 / multi-sentence
      :snt1 (c5-0 / blow-01
                  :ARG0 (c5-8 / this)
                  :ARG1 (c5-9 / i)
                  :manner (c5-10 / away))
      :snt2 (c5-4 / realize-01
                  :ARG0 c5-9
                  :ARG1 (c5-3 / item
                              :domain (c5-13 / they))
                  :time (c5-12 / until
                               :op1 (c5-2 / now))
                  :polarity -)
      :snt3 (c5-5 / news
                  :ARG1-of (c5-6 / have-degree-91
                                 :ARG2 (c5-11 / good-02
                                              :ARG1 c5-5)
                                 :ARG3 (c5-7 / most))))

# ::snt Babes !!
# ::tokens ["Babes", "!", "!"]
# ::lemmas ["Babes", "!", "!"]
(c6-0 / babes
      :mode expressive)

# ::snt guess those sex scenes were real
# ::tokens ["guess", "those", "sex", "scenes", "were", "real"]
# ::lemmas ["guess", "those", "sex", "scene", "be", "real"]
(c7-4 / guess-01
      :ARG1 (c7-2 / real-04
                  :ARG1 (c7-1 / scene
                              :mod (c7-0 / sex-01)
                              :mod (c7-3 / that))))

# ::snt If you are a Game of Thrones addict like I am, Kit Harington and Rose Leslie got married! You know nuthin Jon Snow. part
# ::tokens ["If", "you", "are", "a", "Game", "of", "Thrones", "addict", "like", "I", "am", ",", "Kit", "Harington", "and", "Rose", "Leslie", "got", "married", "!", "You", "know", "nuthin", "Jon", "Snow", ".", "part"]
# ::lemmas ["if", "you", "be", "a", "Game", "of", "Thrones", "addict", "like", "i", "be", ",", "Kit", "Harington", "and", "Rose", "Leslie", "got", "marry", "!", "you", "know", "nuthin", "Jon", "Snow", ".", "part"]
(c8-2 / multi-sentence
      :snt1 (c8-7 / have-condition-91
                  :ARG1 (c8-5 / marry-01
                              :ARG1 (c8-6 / person
                                          :name (c8-1 / name
                                                      :op1 "Kit"
                                                      :op2 "Harington"))
                              :ARG2 (c8-3 / person
                                          :name (c8-8 / name
                                                      :op1 "Rose"
                                                      :op2 "Leslie")))
                  :ARG2 (c8-14 / addict-01
                               :ARG1 (c8-0 / you)
                               :ARG2 (c8-15 / game
                                            :name (c8-9 / name
                                                        :op1 "Game"
                                                        :op2 "of"
                                                        :op3 "Thrones"))
                               :ARG1-of (c8-4 / resemble-01
                                              :ARG2 (c8-13 / addict-01
                                                           :ARG1 (c8-16 / i)
                                                           :ARG2 c8-15))))
      :snt2 (c8-10 / know-01
                   :ARG0 c8-0)
      :ARG1 (c8-17 / person
                   :name (c8-11 / name
                                :op1 "Jon"
                                :op2 "Snow")
                   :mod (c8-12 / nuthin)))

# ::snt If you are a Game of Thrones addict like I am, Kit Harington and Rose Leslie got married! You know nuthin Jon Snow. part one
# ::tokens ["If", "you", "are", "a", "Game", "of", "Thrones", "addict", "like", "I", "am", ",", "Kit", "Harington", "and", "Rose", "Leslie", "got", "married", "!", "You", "know", "nuthin", "Jon", "Snow", ".", "part", "one"]
# ::lemmas ["if", "you", "be", "a", "Game", "of", "Thrones", "addict", "like", "i", "be", ",", "Kit", "Harington", "and", "Rose", "Leslie", "got", "marry", "!", "you", "know", "nuthin", "Jon", "Snow", ".", "part", "one"]
(c9-9 / multi-sentence
      :snt1 (c9-4 / marry-01
                  :ARG1 (c9-15 / person
                               :name (c9-13 / name
                                            :op1 "Kit"
                                            :op2 "Harington"))
                  :ARG2 (c9-10 / person
                               :name (c9-11 / name
                                            :op1 "Rose"
                                            :op2 "Leslie"))
                  :condition (c9-7 / addict-01
                                   :ARG1 (c9-3 / you)
                                   :ARG2 (c9-8 / game
                                               :name (c9-16 / name
                                                            :op1 "Game"
                                                            :op2 "of"
                                                            :op3 "Thrones"))
                                   :ARG1-of (c9-14 / resemble-01
                                                   :ARG2 (c9-6 / addict-01
                                                               :ARG1 (c9-18 / i)
                                                               :ARG2 c9-8))))
      :snt2 (c9-5 / know-01
                  :ARG0 c9-3)
      :ARG1 (c9-12 / nuthin
                   :op1 (c9-1 / person
                              :name (c9-17 / name
                                           :op1 "Jon"
                                           :op2 "Snow")))
      :snt3 (c9-0 / part
                  :ord (c9-2 / ordinal-entity
                             :value 1)))

# ::snt Let's watch honeymoon scene from got
# ::tokens ["Let", "'s", "watch", "honeymoon", "scene", "from", "got"]
# ::lemmas ["let", "us", "watch", "honeymoon", "scene", "from", "get"]
(c10-4 / let-01
       :ARG0 (c10-6 / we)
       :ARG1 (c10-5 / watch-01
                    :ARG0 c10-6
                    :ARG1 (c10-2 / scene
                                 :mod (c10-3 / honeymoon)
                                 :source (c10-0 / broadcast-program
                                                :name (c10-1 / name
                                                             :op1 "Get"))))
       :mode imperative)

# ::snt Gorgeous!!
# ::tokens ["Gorgeous", "!", "!"]
# ::lemmas ["gorgeous", "!", "!"]
(c12-0 / beautiful-02
       :mode expressive)

# ::snt If they hear Rains of Castamere, RUN!!! Congrats you both
# ::tokens ["If", "they", "hear", "Rains", "of", "Castamere", ",", "RUN", "!", "!", "!", "Congrats", "you", "both"]
# ::lemmas ["if", "they", "hear", "Rains", "of", "Castamere", ",", "RUN", "!", "!", "!", "congrat", "you", "both"]
(c13-2 / multi-sentence
       :snt1 (c13-4 / run-02
                    :ARG0 (c13-1 / you)
                    :condition (c13-5 / hear-01
                                      :ARG0 (c13-8 / they)
                                      :ARG1 (c13-6 / music
                                                   :name (c13-3 / name
                                                                :op1 "Rains"
                                                                :op2 "of"
                                                                :op3 "Castamere")))
                    :mode imperative)
       :snt2 (c13-7 / congratulate-01
                    :ARG1 (c13-9 / you
                                 :mod (c13-0 / both))))

# ::snt Wishing them health and happiness.
# ::tokens ["Wishing", "them", "health", "and", "happiness", "."]
# ::lemmas ["wish", "they", "health", "and", "happiness", "."]
(c14-2 / wish-01
       :ARG1 (c14-0 / and
                    :op1 (c14-1 / healthy)
                    :op2 (c14-3 / happy-01))
       :ARG2 (c14-4 / they))

# ::snt sorry...
# ::tokens ["sorry", "..."]
# ::lemmas ["sorry", "..."]
(c16-0 / sorry-01)

# ::snt Awe congratulations to the couple
# ::tokens ["Awe", "congratulations", "to", "the", "couple"]
# ::lemmas ["Awe", "congratulation", "to", "the", "couple"]
(c17-0 / congratulate-01
       :ARG0 (c17-2 / we)
       :ARG1 (c17-1 / couple))

# ::snt Unless it lasts as long as your average celebrity marriage. But I really really hope not. They are so cute together.
# ::tokens ["Unless", "it", "lasts", "as", "long", "as", "your", "average", "celebrity", "marriage", ".", "But", "I", "really", "really", "hope", "not", ".", "They", "are", "so", "cute", "together", "."]
# ::lemmas ["unless", "it", "last", "as", "long", "as", "your", "average", "celebrity", "marriage", ".", "but", "i", "really", "really", "hope", "not", ".", "they", "be", "so", "cute", "together", "."]
(c18-12 / multi-sentence
        :snt1 (c18-6 / have-condition-91
                     :ARG2 (c18-1 / last-01
                                  :ARG1 (c18-19 / it)
                                  :ARG2 (c18-10 / long-03
                                                :ARG1 c18-19
                                                :ARG2-of (c18-18 / have-degree-91
                                                                 :ARG1 c18-19
                                                                 :ARG3 (c18-17 / equal)
                                                                 :ARG4 (c18-7 / marry-01
                                                                              :ARG1 (c18-13 / celebrity)
                                                                              :ARG1-of (c18-8 / average-03)
                                                                              :poss (c18-3 / you))))
                                  :polarity -))
        :snt2 (c18-11 / contrast-01
                      :ARG2 (c18-5 / hope-01
                                   :ARG0 (c18-4 / i)
                                   :ARG1 (c18-15 / have-polarity-91
                                                 :ARG2 -)
                                   :ARG1-of (c18-16 / real-04)))
        :snt3 (c18-2 / cute
                     :degree (c18-0 / so)
                     :mod (c18-9 / together)
                     :domain (c18-14 / they)))

# ::snt Ohh I knew he was taken!! They are so cute together!!!
# ::tokens ["Ohh", "I", "knew", "he", "was", "taken", "!", "!", "They", "are", "so", "cute", "together", "!", "!", "!"]
# ::lemmas ["Ohh", "i", "know", "he", "be", "take", "!", "!", "they", "be", "so", "cute", "together", "!", "!", "!"]
(c19-1 / multi-sentence
       :snt1 (c19-4 / know-01
                    :ARG0 (c19-6 / i)
                    :ARG1 (c19-7 / take-01
                                 :ARG1 (c19-3 / he))
                    :mod (c19-0 / oh
                                :mode expressive))
       :snt2 (c19-5 / cute
                    :domain (c19-9 / they)
                    :mod (c19-8 / together)
                    :degree (c19-2 / so)))

# ::snt I'm exhausted by the news feed this week, so I'm only concentrating on happy things today. Here are more pictures of the wedding
# ::tokens ["I", "'m", "exhausted", "by", "the", "news", "feed", "this", "week", ",", "so", "I", "'m", "only", "concentrating", "on", "happy", "things", "today", ".", "Here", "are", "more", "pictures", "of", "the", "wedding"]
# ::lemmas ["i", "be", "exhaust", "by", "the", "news", "feed", "this", "week", ",", "so", "i", "be", "only", "concentrate", "on", "happy", "thing", "today", ".", "here", "be", "more", "picture", "of", "the", "wedding"]
(c20-2 / multi-sentence
       :snt1 (c20-9 / cause-01
                    :ARG0 (c20-4 / exhaust-01
                                 :ARG0 (c20-0 / feed-01
                                              :ARG1 (c20-3 / news))
                                 :ARG1 (c20-12 / i)
                                 :time (c20-10 / week
                                               :mod (c20-13 / this)))
                    :ARG1 (c20-16 / concentrate-01
                                  :ARG0 c20-12
                                  :ARG1 (c20-15 / thing
                                                :ARG1-of (c20-5 / happy-01))
                                  :mod (c20-1 / only)
                                  :time (c20-14 / today)))
       :snt2 (c20-6 / picture-01
                    :ARG1 (c20-8 / wed-01)
                    :mod (c20-7 / more)
                    :location (c20-11 / here)))

# ::snt :U know everything Jon Snow
# ::tokens [":", "U", "know", "everything", "Jon", "Snow"]
# ::lemmas [":", "u", "know", "everything", "Jon", "Snow"]
(c22-1 / say-01
       :ARG0 (c22-5 / i)
       :ARG1 (c22-4 / know-01
                    :ARG0 (c22-3 / person
                                 :name (c22-0 / name
                                              :op1 "Jon"
                                              :op2 "Snow"))
                    :ARG1 (c22-2 / everything))
       :ARG2 c22-3)

# ::snt Who and err who?
# ::tokens ["Who", "and", "err", "who", "?"]
# ::lemmas ["who", "and", "err", "who", "?"]
(c24-4 / and
       :op1 (c24-1 / person
                   :domain (c24-3 / amr-unknown))
       :op2 (c24-0 / err-01
                   :ARG1 (c24-2 / amr-unknown)))

# ::snt and not a single death. What kinda Game of thrones wedding is that?
# ::tokens ["and", "not", "a", "single", "death", ".", "What", "kinda", "Game", "of", "thrones", "wedding", "is", "that", "?"]
# ::lemmas ["and", "not", "a", "single", "death", ".", "what", "kinda", "Game", "of", "throne", "wedding", "be", "that", "?"]
(c25-0 / multi-sentence
       :snt1 (c25-6 / and
                    :op2 (c25-8 / die-01
                                :ARG1-of (c25-2 / single-02)
                                :polarity -))
       :snt2 (c25-4 / wed-01
                    :mod (c25-7 / game
                                :name (c25-1 / name
                                             :op1 "Game"
                                             :op2 "of"
                                             :op3 "Thrones"))
                    :mod (c25-3 / kind
                                :mod (c25-5 / amr-unknown))))

# ::snt He knows something then..
# ::tokens ["He", "knows", "something", "then", ".."]
# ::lemmas ["he", "know", "something", "then", ".."]
(c27-2 / know-01
       :ARG0 (c27-1 / he)
       :ARG1 (c27-3 / something)
       :time (c27-0 / then))

# ::snt I just saw this too
# ::tokens ["I", "just", "saw", "this", "too"]
# ::lemmas ["i", "just", "see", "this", "too"]
(c28-0 / see-01
       :ARG0 (c28-4 / i)
       :ARG1 (c28-2 / this)
       :mod (c28-3 / too)
       :time (c28-1 / just))

# ::snt No Freys Allowed
# ::tokens ["No", "Freys", "Allowed"]
# ::lemmas ["no", "Freys", "Allowed"]
(c29-0 / free-04
       :ARG3-of (c29-1 / allow-01)
       :polarity -)

# ::snt Well they should get married in Castle Black
# ::tokens ["Well", "they", "should", "get", "married", "in", "Castle", "Black"]
# ::lemmas ["well", "they", "should", "get", "marry", "in", "Castle", "Black"]
(c30-2 / recommend-01
       :ARG1 (c30-1 / marry-01
                    :ARG1 (c30-5 / they)
                    :location (c30-3 / castle
                                     :name (c30-0 / name
                                                  :op1 "Castle"
                                                  :op2 "Black")))
       :mod (c30-4 / well))

# ::snt They are the cuuutest couple ever!
# ::tokens ["They", "are", "the", "cuuutest", "couple", "ever", "!"]
# ::lemmas ["they", "be", "the", "cuuutest", "couple", "ever", "!"]
(c31-3 / couple
       :domain (c31-4 / they)
       :ARG1-of (c31-2 / have-degree-91
                       :ARG2 (c31-5 / cute)
                       :ARG3 (c31-0 / most)
                       :ARG5 (c31-1 / ever)))

# ::snt Agreed!
# ::tokens ["Agreed", "!"]
# ::lemmas ["agree", "!"]
(c32-0 / agree-01
       :mode expressive)

# ::snt Looks like John Snow knew something after all
# ::tokens ["Looks", "like", "John", "Snow", "knew", "something", "after", "all"]
# ::lemmas ["look", "like", "John", "Snow", "know", "something", "after", "all"]
(c33-3 / look-02
       :ARG1 (c33-4 / know-01
                    :ARG0 (c33-2 / person
                                 :name (c33-0 / name
                                              :op1 "John"
                                              :op2 "Snow"))
                    :ARG1 (c33-1 / something)
                    :mod (c33-5 / after-all)))

# ::snt Hope its not another red wedding
# ::tokens ["Hope", "its", "not", "another", "red", "wedding"]
# ::lemmas ["hope", "its", "not", "another", "red", "wedding"]
(c35-1 / hope-01
       :ARG0 (c35-3 / i)
       :ARG1 (c35-2 / wed-01
                    :mod (c35-4 / another)
                    :ARG1-of (c35-0 / red-02)
                    :polarity -))

# ::snt Wow guessed she really enjoyed the sex in the water lol
# ::tokens ["Wow", "guessed", "she", "really", "enjoyed", "the", "sex", "in", "the", "water", "lol"]
# ::lemmas ["wow", "guess", "she", "really", "enjoy", "the", "sex", "in", "the", "water", "lol"]
(c37-8 / guess-01
       :ARG1 (c37-3 / enjoy-01
                    :ARG0 (c37-1 / she)
                    :ARG1 (c37-0 / sex-01
                                 :location (c37-6 / water))
                    :degree (c37-2 / really))
       :mod (c37-5 / wow
                   :mode expressive)
       :ARG2-of (c37-4 / laugh-01
                       :ARG0 (c37-7 / i)
                       :manner (c37-9 / loud)
                       :mode expressive))

# ::snt Wow this just made my day
# ::tokens ["Wow", "this", "just", "made", "my", "day"]
# ::lemmas ["wow", "this", "just", "make", "my", "day"]
(c39-0 / make-02
       :ARG0 (c39-4 / this)
       :ARG1 (c39-5 / day
                    :poss (c39-3 / i))
       :mod (c39-1 / wow
                   :mode expressive)
       :time (c39-2 / just))

# ::snt Lmaoooo
# ::tokens ["Lmaoooo"]
# ::lemmas ["Lmaoooo"]
(c40-1 / laugh-01
       :ARG0 (c40-2 / i)
       :manner (c40-0 / loud)
       :mode expressive)

# ::snt I'm still a boy, so I got you.
# ::tokens ["I", "'m", "still", "a", "boy", ",", "so", "I", "got", "you", "."]
# ::lemmas ["i", "be", "still", "a", "boy", ",", "so", "i", "get", "you", "."]
(c41-0 / boy
       :domain (c41-4 / i)
       :mod (c41-2 / still)
       :ARG0-of (c41-3 / cause-01
                       :ARG1 (c41-5 / get-01
                                    :ARG0 c41-4
                                    :ARG1 (c41-1 / you))))

# ::snt Now and forever
# ::tokens ["Now", "and", "forever"]
# ::lemmas ["now", "and", "forever"]
(c42-2 / and
       :op1 (c42-1 / now)
       :op2 (c42-0 / forever))

# ::snt Men are trash eh??
# ::tokens ["Men", "are", "trash", "eh", "?", "?"]
# ::lemmas ["man", "be", "trash", "eh", "?", "?"]
(c43-2 / trash
       :domain (c43-1 / man)
       :ARG1-of (c43-0 / request-confirmation-91))

# ::snt Im so fucking hurt
# ::tokens ["I", "m", "so", "fucking", "hurt"]
# ::lemmas ["i", "m", "so", "fucking", "hurt"]
(c44-1 / hurt-01
       :ARG1 (c44-2 / i)
       :degree (c44-3 / so)
       :mod (c44-0 / fucking))

# ::snt Married to the girl who took his virginity in a steamy cave lol
# ::tokens ["Married", "to", "the", "girl", "who", "took", "his", "virginity", "in", "a", "steamy", "cave", "lol"]
# ::lemmas ["marry", "to", "the", "girl", "who", "take", "his", "virginity", "in", "a", "steamy", "cave", "lol"]
(c46-0 / marry-01
       :ARG1 (c46-3 / he)
       :ARG2 (c46-8 / girl
                    :ARG0-of (c46-7 / take-01
                                    :ARG1 (c46-2 / virginity
                                                 :poss c46-3)
                                    :location (c46-5 / cave
                                                     :mod (c46-1 / steamy))
                                    :ARG2-of (c46-4 / laugh-01
                                                    :ARG0 (c46-6 / i)
                                                    :manner (c46-9 / loud)
                                                    :mode expressive))))

# ::snt So happy for them
# ::tokens ["So", "happy", "for", "them"]
# ::lemmas ["so", "happy", "for", "they"]
(c48-1 / happy-01
       :ARG1 (c48-2 / they)
       :degree (c48-0 / so))

# ::snt now they can do sex legally
# ::tokens ["now", "they", "can", "do", "sex", "legally"]
# ::lemmas ["now", "they", "can", "do", "sex", "legally"]
(c49-2 / possible-01
       :ARG1 (c49-5 / do-02
                    :ARG0 (c49-4 / they)
                    :ARG1 (c49-1 / sex-01
                                 :ARG0 c49-4)
                    :manner (c49-3 / law))
       :time (c49-0 / now))

# ::snt This is the first celebrity marriage that truly makes me happy.
# ::tokens ["This", "is", "the", "first", "celebrity", "marriage", "that", "truly", "makes", "me", "happy", "."]
# ::lemmas ["this", "be", "the", "first", "celebrity", "marriage", "that", "truly", "make", "i", "happy", "."]
(c50-1 / marry-01
       :mod (c50-4 / celebrity)
       :ord (c50-0 / ordinal-entity
                   :value 1)
       :domain (c50-6 / this)
       :ARG0-of (c50-2 / make-02
                       :ARG1 (c50-3 / happy-01
                                    :ARG1 (c50-5 / i)
                                    :ARG1-of (c50-7 / true-01))))
