# ::snt Nope! He is from Ireland! He needs to go home and STFU!
# ::tokens ["Nope", "!", "He", "is", "from", "Ireland", "!", "He", "needs", "to", "go", "home", "and", "STFU", "!"]
# ::lemmas ["nope", "!", "he", "be", "from", "Ireland", "!", "he", "need", "to", "go", "home", "and", "STFU", "!"]
(c1-2 / multi-sentence
      :snt1 (c1-1 / nope
                  :mode expressive)
      :snt2 (c1-5 / he
                  :source (c1-8 / country
                                :name (c1-6 / name
                                            :op1 "Ireland")))
      :snt3 (c1-10 / and
                   :op1 (c1-7 / need-01
                              :ARG0 (c1-9 / he)
                              :ARG1 (c1-11 / go-01
                                           :ARG1 c1-9
                                           :ARG4 (c1-4 / home)))
                   :op2 (c1-3 / shut-up-06
                              :ARG1 c1-9
                              :mod (c1-0 / fuck
                                         :mode expressive))))

# ::snt The Federal Reserve, driven by any Keynesian politician, along with other central banks could destroy the country!
# ::tokens ["The", "Federal", "Reserve", ",", "driven", "by", "any", "Keynesian", "politician", ",", "along", "with", "other", "central", "banks", "could", "destroy", "the", "country", "!"]
# ::lemmas ["The", "Federal", "Reserve", ",", "drive", "by", "any", "Keynesian", "politician", ",", "along", "with", "other", "central", "bank", "could", "destroy", "the", "country", "!"]
(c2-5 / possible-01
      :ARG1 (c2-10 / destroy-01
                   :ARG0 (c2-8 / and
                               :op1 (c2-9 / government-organization
                                          :name (c2-2 / name
                                                      :op1 "Federal"
                                                      :op2 "Reserve")
                                          :ARG1-of (c2-7 / drive-02
                                                         :ARG0 (c2-3 / politician
                                                                     :mod (c2-11 / person
                                                                                 :name (c2-4 / name
                                                                                             :op1 "Keynes")))))
                               :op2 (c2-1 / bank
                                          :mod (c2-6 / central)
                                          :mod (c2-0 / other)))
                   :ARG1 (c2-12 / country)))

# ::snt not
# ::tokens ["not"]
# ::lemmas ["not"]
(c3-0 / event
      :polarity -)

# ::snt bono is a DUNNO englistan citizen.
# ::tokens ["bono", "is", "a", "DUNNO", "englistan", "citizen", "."]
# ::lemmas ["bono", "be", "a", "DUNNO", "englistan", "citizen", "."]
(c4-4 / citizen
      :domain (c4-2 / person
                    :name (c4-0 / name
                                :op1 "bono"))
      :mod (c4-5 / country
                 :name (c4-1 / name
                             :op1 "Iran")
                 :ARG1-of (c4-3 / have-polarity-91
                                :ARG2 -)))

# ::snt I forgot Bono is a political wizard oh wait like you and me accept bully pulpit shut up
# ::tokens ["I", "forgot", "Bono", "is", "a", "political", "wizard", "oh", "wait", "like", "you", "and", "me", "accept", "bully", "pulpit", "shut", "up"]
# ::lemmas ["i", "forget", "Bono", "be", "a", "political", "wizard", "oh", "wait", "like", "you", "and", "i", "accept", "bully", "pulpit", "shut", "up"]
(c5-3 / multi-sentence
      :snt1 (c5-0 / forget-01
                  :ARG0 (c5-12 / i)
                  :ARG1 (c5-11 / wizard
                               :mod (c5-9 / politics)
                               :domain (c5-4 / person
                                             :name (c5-5 / name
                                                         :op1 "Bono"))))
      :snt2 (c5-10 / wait-01
                   :ARG1 (c5-2 / you)
                   :ARG1-of (c5-7 / resemble-01
                                  :ARG2 (c5-13 / accept-01
                                               :ARG0 (c5-14 / and
                                                            :op1 c5-2
                                                            :op2 (c5-6 / i))
                                               :ARG1 (c5-8 / shut-up-06
                                                           :ARG1 (c5-15 / pulpit
                                                                        :mod (c5-1 / bully)))))
                   :mode imperative))

# ::snt Rock 'n' roll could destroy America... or maybe not. It's just the evolution of a society.
# ::tokens ["Rock", "'", "n", "'", "roll", "could", "destroy", "America", "...", "or", "maybe", "not", ".", "It", "'s", "just", "the", "evolution", "of", "a", "society", "."]
# ::lemmas ["Rock", "'", "n", "'", "roll", "could", "destroy", "America", "...", "or", "maybe", "not", ".", "it", "be", "just", "the", "evolution", "of", "a", "society", "."]
(c6-1 / multi-sentence
      :snt1 (c6-0 / or
                  :op1 (c6-7 / possible-01
                             :ARG1 (c6-12 / destroy-01
                                          :ARG0 (c6-5 / rock-n-roll)
                                          :ARG1 (c6-8 / country
                                                      :name (c6-2 / name
                                                                  :op1 "America"))))
                  :op2 (c6-3 / possible-01
                             :ARG1 (c6-9 / destroy-01
                                         :ARG0 c6-5
                                         :ARG1 c6-8)
                             :polarity -))
      :snt2 (c6-6 / evolve-01
                  :ARG1 (c6-4 / society)
                  :mod (c6-10 / just)
                  :domain (c6-11 / it)))

# ::snt mind your own beeswax Bono
# ::tokens ["mind", "your", "own", "beeswax", "Bono"]
# ::lemmas ["mind", "your", "own", "beeswax", "Bono"]
(c7-3 / say-01
      :ARG0 (c7-5 / i)
      :ARG1 (c7-2 / mind-15
                  :ARG0 (c7-4 / person
                              :name (c7-1 / name
                                          :op1 "Bono"))
                  :ARG1 (c7-0 / beeswax
                              :poss c7-4)
                  :mode imperative)
      :ARG2 c7-4)

# ::snt lol zero likes Bono
# ::tokens ["lol", "zero", "likes", "Bono"]
# ::lemmas ["lol", "zero", "like", "Bono"]
(c8-3 / like-01
      :ARG0 (c8-2 / person
                  :quant 0)
      :ARG1 (c8-1 / person
                  :name (c8-0 / name
                              :op1 "Bono"))
      :manner (c8-6 / laugh-01
                    :ARG0 (c8-5 / i)
                    :manner (c8-4 / loud)
                    :mode expressive))

# ::snt where is that deuche bag worthless words from another rich asshole
# ::tokens ["where", "is", "that", "deuche", "bag", "worthless", "words", "from", "another", "rich", "asshole"]
# ::lemmas ["where", "be", "that", "deuche", "bag", "worthless", "word", "from", "another", "rich", "asshole"]
(c9-0 / be-located-at-91
      :ARG1 (c9-3 / word
                  :source (c9-7 / asshole
                                :mod (c9-1 / rich)
                                :mod (c9-6 / another))
                  :mod (c9-2 / worthless)
                  :mod (c9-5 / that)
                  :mod (c9-8 / deuchebag))
      :ARG2 (c9-4 / amr-unknown))

# ::snt Says a man so out of touch with the real world. Fuck off Bono left wing prick.
# ::tokens ["Says", "a", "man", "so", "out", "of", "touch", "with", "the", "real", "world", ".", "Fuck", "off", "Bono", "left", "wing", "prick", "."]
# ::lemmas ["say", "a", "man", "so", "out", "of", "touch", "with", "the", "real", "world", ".", "fuck", "off", "Bono", "leave", "wing", "prick", "."]
(c10-2 / multi-sentence
       :snt1 (c10-4 / say-01
                    :ARG0 (c10-7 / man
                                 :ARG1-of (c10-11 / in-touch-11
                                                  :ARG2 (c10-10 / world
                                                                :ARG1-of (c10-6 / real-04))
                                                  :degree (c10-0 / so)
                                                  :polarity -)))
       :snt2 (c10-1 / fuck-off-03
                    :ARG1 (c10-8 / prick
                                 :mod (c10-3 / person
                                             :name (c10-5 / name
                                                          :op1 "Bono"))
                                 :ARG1-of (c10-9 / left-19))
                    :mode expressive))

# ::snt Bono stick to crap music political commentary is to deep for you
# ::tokens ["Bono", "stick", "to", "crap", "music", "political", "commentary", "is", "to", "deep", "for", "you"]
# ::lemmas ["Bono", "stick", "to", "crap", "music", "political", "commentary", "be", "to", "deep", "for", "you"]
(c11-3 / stick-01
       :ARG0 (c11-4 / person
                    :name (c11-1 / name
                                 :op1 "Bono")
                    :ARG1-of c11-3)
       :ARG2 (c11-5 / crap-01
                    :ARG0 c11-4
                    :ARG1 (c11-8 / comment-01
                                 :ARG3 (c11-2 / politics)))
       :ARG1-of (c11-7 / deep-02
                       :degree (c11-6 / to))
       :beneficiary (c11-0 / you))

# ::snt Bono....fuk off
# ::tokens ["Bono", "....", "fuk", "off"]
# ::lemmas ["Bono", "....", "fuk", "off"]
(c12-2 / and
       :op1 (c12-1 / bono)
       :op2 (c12-0 / fuck-off-03))

# ::snt -Obama allready has jerk!
# ::tokens ["-Obama", "allready", "has", "jerk", "!"]
# ::lemmas ["-Obama", "allready", "have", "jerk", "!"]
(c13-1 / have-03
       :ARG0 (c13-2 / person
                    :name (c13-0 / name
                                 :op1 "Obama"))
       :ARG1 (c13-3 / jerk)
       :mod (c13-4 / all-ready)
       :mode expressive)

# ::snt . Tell him to go back home and fix his on back yard up and get out of our.
# ::tokens [".", "Tell", "him", "to", "go", "back", "home", "and", "fix", "his", "on", "back", "yard", "up", "and", "get", "out", "of", "our", "."]
# ::lemmas [".", "tell", "he", "to", "go", "back", "home", "and", "fix", "his", "on", "back", "yard", "up", "and", "get", "out", "of", "our", "."]
(c14-8 / tell-01
       :ARG0 (c14-3 / you)
       :ARG1 (c14-10 / and
                     :op1 (c14-11 / go-02
                                  :ARG0 (c14-4 / he)
                                  :ARG4 (c14-7 / home
                                               :mod (c14-2 / back)))
                     :op2 (c14-0 / fix-up-05
                                 :ARG0 c14-4
                                 :ARG1 (c14-12 / yard
                                               :mod (c14-5 / back)
                                               :poss c14-4))
                     :op3 (c14-9 / get-05
                                 :ARG1 c14-4
                                 :ARG2 (c14-1 / out-06
                                              :ARG1 c14-4
                                              :ARG2 (c14-6 / we))))
       :ARG2 c14-4
       :mode imperative)

# ::snt yeah, Paul, but only if he, like, really put his mind to it! Oh, like a bad thing?
# ::tokens ["yeah", ",", "Paul", ",", "but", "only", "if", "he", ",", "like", ",", "really", "put", "his", "mind", "to", "it", "!", "Oh", ",", "like", "a", "bad", "thing", "?"]
# ::lemmas ["yeah", ",", "Paul", ",", "but", "only", "if", "he", ",", "like", ",", "really", "put", "his", "mind", "to", "it", "!", "oh", ",", "like", "a", "bad", "thing", "?"]
(c15-5 / multi-sentence
       :snt1 (c15-12 / contrast-01
                     :ARG1 (c15-10 / person
                                   :name (c15-4 / name
                                                :op1 "Paul"))
                     :ARG2 (c15-9 / have-condition-91
                                  :ARG2 (c15-6 / put-01
                                               :ARG0 c15-10
                                               :ARG1 (c15-11 / mind-05
                                                             :ARG0 c15-10)
                                               :ARG2 (c15-13 / it)
                                               :ARG1-of (c15-7 / real-04)
                                               :mod (c15-0 / only))
                                  :mod (c15-3 / yeah
                                              :mode expressive)))
       :snt2 (c15-15 / resemble-01
                     :ARG2 (c15-14 / thing
                                   :ARG1-of (c15-2 / bad-07))
                     :polarity (c15-8 / amr-unknown)
                     :mod (c15-1 / oh
                                 :mode expressive)))

# ::snt Who...is he a U.S. citizen?
# ::tokens ["Who", "...", "is", "he", "a", "U.S.", "citizen", "?"]
# ::lemmas ["who", "...", "be", "he", "a", "U.S.", "citizen", "?"]
(c16-2 / citizen
       :domain (c16-1 / he)
       :mod (c16-4 / country
                   :name (c16-0 / name
                                :op1 "U.S."))
       :polarity (c16-3 / amr-unknown))

# ::snt Why don't U do something for your own country....homelessness, drug problems, medical care, elder care, hunger
# ::tokens ["Why", "do", "n't", "U", "do", "something", "for", "your", "own", "country", "....", "homelessness", ",", "drug", "problems", ",", "medical", "care", ",", "elder", "care", ",", "hunger"]
# ::lemmas ["why", "do", "not", "u", "do", "something", "for", "your", "own", "country", "....", "homelessness", ",", "drug", "problem", ",", "medical", "care", ",", "eld", "care", ",", "hunger"]
(c17-14 / do-02
        :ARG0 (c17-1 / you)
        :ARG1 (c17-3 / something
                     :ARG1-of (c17-2 / mean-01
                                     :ARG2 (c17-13 / and
                                                   :op1 (c17-5 / homeless)
                                                   :op2 (c17-6 / problem
                                                               :topic (c17-9 / drug))
                                                   :op3 (c17-8 / care-03
                                                               :mod (c17-7 / medicine))
                                                   :op4 (c17-15 / care-03
                                                                :mod (c17-4 / elder))
                                                   :op5 (c17-10 / hunger-01))))
        :ARG2 (c17-11 / country
                      :poss c17-1)
        :ARG1-of (c17-0 / cause-01
                        :ARG0 (c17-12 / amr-unknown))
        :polarity -)

# ::snt He actually endorsed a pedophile, and he is a sexual offender.
# ::tokens ["He", "actually", "endorsed", "a", "pedophile", ",", "and", "he", "is", "a", "sexual", "offender", "."]
# ::lemmas ["he", "actually", "endorse", "a", "pedophile", ",", "and", "he", "be", "a", "sexual", "offender", "."]
(c18-6 / and
       :op1 (c18-2 / endorse-01
                   :ARG0 (c18-3 / he)
                   :ARG1 (c18-4 / pedophile)
                   :ARG1-of (c18-5 / actual-02))
       :op2 (c18-0 / offend-03
                   :ARG0 c18-3
                   :ARG1 (c18-1 / sex-01)))

# ::snt Wrong: Donald Trump Is Destroying America, We Must Stop Him'Correct: Donald Trump Is Destroying the pedophile satanist in America, We Must Stop Him'
# ::tokens ["Wrong", ":", "Donald", "Trump", "Is", "Destroying", "America", ",", "We", "Must", "Stop", "Him'Correct", ":", "Donald", "Trump", "Is", "Destroying", "the", "pedophile", "satanist", "in", "America", ",", "We", "Must", "Stop", "Him", "'"]
# ::lemmas ["wrong", ":", "Donald", "Trump", "be", "Destroying", "America", ",", "we", "must", "stop", "him'correct", ":", "Donald", "Trump", "be", "destroy", "the", "pedophile", "satanist", "in", "America", ",", "we", "must", "stop", "he", "'"]
(c19-8 / wrong-04
       :ARG2 (c19-12 / and
                     :op1 (c19-13 / destroy-01
                                  :ARG0 (c19-6 / person
                                               :name (c19-2 / name
                                                            :op1 "Donald"
                                                            :op2 "Trump"))
                                  :ARG1 (c19-9 / country
                                               :name (c19-5 / name
                                                            :op1 "America")))
                     :op2 (c19-0 / obligate-01
                                 :ARG1 (c19-7 / we)
                                 :ARG2 (c19-4 / stop-01
                                              :ARG0 c19-7
                                              :ARG1 c19-6)))
       :op3 (c19-14 / correct-02
                    :ARG1 (c19-11 / and
                                  :op1 (c19-10 / destroy-01
                                               :ARG0 c19-6
                                               :ARG1 (c19-1 / satanist
                                                            :mod (c19-3 / pedophile))
                                               :location c19-9)
                                  :op2 c19-0
                                  :ARG1 c19-7
                                  :ARG2 c19-4)))

# ::snt When will the man shut up....
# ::tokens ["When", "will", "the", "man", "shut", "up", "...."]
# ::lemmas ["when", "will", "the", "man", "shut", "up", "...."]
(c20-2 / shut-up-06
       :ARG1 (c20-1 / man)
       :time (c20-0 / amr-unknown))

# ::snt Let get rid of bone head bono the no siging clown
# ::tokens ["Let", "get", "rid", "of", "bone", "head", "bono", "the", "no", "siging", "clown"]
# ::lemmas ["let", "get", "rid", "of", "bone", "head", "bono", "the", "no", "sige", "clown"]
(c21-4 / let-01
       :ARG1 (c21-2 / rid-01
                    :ARG1 (c21-3 / head
                                 :part-of (c21-0 / bone))
                    :ARG2 (c21-5 / clown
                                 :ARG0-of (c21-1 / sig-01
                                                 :polarity -))))

# ::snt Given that Bono hangs out with George Soros he has zero credibility.
# ::tokens ["Given", "that", "Bono", "hangs", "out", "with", "George", "Soros", "he", "has", "zero", "credibility", "."]
# ::lemmas ["give", "that", "Bono", "hang", "out", "with", "George", "Soros", "he", "have", "zero", "credibility", "."]
(c22-2 / have-03
       :ARG0 (c22-3 / person
                    :name (c22-0 / name
                                 :op1 "Bono"))
       :ARG1 (c22-5 / credibility
                    :quant 0)
       :ARG1-of (c22-7 / cause-01
                       :ARG0 (c22-6 / hang-out-06
                                    :ARG1 c22-3
                                    :ARG2 (c22-1 / person
                                                 :name (c22-4 / name
                                                              :op1 "George"
                                                              :op2 "Soros")))))

# ::snt Obama's destructive policies:Uncontrollable mass migrationDisfesoectul and bias against freedom of religion and speech.Insane LGBTQ doctrine.
# ::tokens ["Obama", "'s", "destructive", "policies", ":", "Uncontrollable", "mass", "migrationDisfesoectul", "and", "bias", "against", "freedom", "of", "religion", "and", "speech", ".", "Insane", "LGBTQ", "doctrine", "."]
# ::lemmas ["Obama", "'s", "destructive", "policy", ":", "uncontrollable", "mass", "migrationDisfesoectul", "and", "bias", "against", "freedom", "of", "religion", "and", "speech", ".", "Insane", "LGBTQ", "doctrine", "."]
(c23-8 / multi-sentence
       :snt1 (c23-16 / policy-01
                     :ARG0 (c23-9 / person
                                  :name (c23-14 / name
                                                :op1 "Obama"))
                     :ARG0-of (c23-19 / destroy-01))
       :snt2 (c23-5 / and
                    :op1 (c23-3 / migrate-01
                                :mod (c23-12 / mass)
                                :ARG1-of (c23-10 / control-01
                                                 :ARG1-of (c23-2 / possible-01)
                                                 :polarity -))
                    :op2 (c23-7 / bias-01
                                :ARG1 (c23-4 / and
                                             :op1 (c23-13 / free-04
                                                          :ARG3 (c23-15 / religion))
                                             :op2 (c23-17 / free-04
                                                          :ARG3 (c23-0 / speak-01)))))
       :snt3 (c23-11 / doctrine
                     :mod (c23-6 / gay-01
                                 :mod (c23-1 / lesbian))
                     :ARG1-of (c23-18 / insane-03)))

# ::snt Good!
# ::tokens ["Good", "!"]
# ::lemmas ["good", "!"]
(c24-0 / good-02
       :mode expressive)
