# ::snt Omg the difference
# ::tokens ["Omg", "the", "difference"]
# ::lemmas ["Omg", "the", "difference"]
(c1-0 / differ-02
      :mod (c1-1 / oh-my-god
                 :mode expressive))

# ::snt We have a large lead but don't stop voting!
# ::tokens ["We", "have", "a", "large", "lead", "but", "do", "n't", "stop", "voting", "!"]
# ::lemmas ["we", "have", "a", "large", "lead", "but", "do", "not", "stop", "vote", "!"]
(c2-5 / contrast-01
      :ARG1 (c2-3 / have-03
                  :ARG0 (c2-6 / we)
                  :ARG1 (c2-4 / lead-01
                              :mod (c2-7 / large)))
      :ARG2 (c2-1 / stop-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-2 / vote-01
                              :ARG0 c2-0)
                  :mode imperative
                  :polarity -))

# ::snt Votem*
# ::tokens ["Votem", "*"]
# ::lemmas ["Votem", "*"]
(c3-0 / quote-01)

# ::snt In AO3, fanfiction dot net and in badly edited youtube videos and manips. You're welcome.
# ::tokens ["In", "AO3", ",", "fanfiction", "dot", "net", "and", "in", "badly", "edited", "youtube", "videos", "and", "manips", ".", "You", "'re", "welcome", "."]
# ::lemmas ["in", "AO3", ",", "fanfiction", "dot", "net", "and", "in", "badly", "edit", "youtube", "video", "and", "manip", ".", "you", "be", "welcome", "."]
(c4-3 / multi-sentence
      :snt1 (c4-11 / welcome-01
                   :ARG1 (c4-2 / you)
                   :location (c4-12 / and
                                    :op1 (c4-9 / publication
                                               :name (c4-4 / name
                                                           :op1 "AO3"))
                                    :op2 (c4-13 / dot-net
                                                :mod (c4-0 / fanfiction))
                                    :op3 (c4-6 / video
                                               :medium (c4-5 / publication
                                                             :name (c4-8 / name
                                                                         :op1 "YouTube"))
                                               :ARG1-of (c4-7 / edit-01
                                                              :ARG1-of (c4-1 / bad-07)))
                                    :op4 (c4-10 / manip))
                   :snt2-of c4-3)
      :ARG1 c4-2)

# ::snt Where is
# ::tokens ["Where", "is"]
# ::lemmas ["where", "be"]
(c5-1 / location
      :ARG2-of (c5-0 / be-located-at-91))

# ::snt Klaroline letter was nominated for Best Shocker yess
# ::tokens ["Klaroline", "letter", "was", "nominated", "for", "Best", "Shocker", "yess"]
# ::lemmas ["Klaroline", "letter", "be", "nominate", "for", "Best", "Shocker", "yess"]
(c6-0 / nominate-01
      :ARG1 (c6-3 / letter
                  :name (c6-1 / name
                              :op1 "Klaroline"))
      :ARG2 (c6-4 / award
                  :name (c6-2 / name
                              :op1 "Best"
                              :op2 "Shocker"
                              :op3 "Yess")))

# ::snt ofc the klaroline letter
# ::tokens ["ofc", "the", "klaroline", "letter"]
# ::lemmas ["ofc", "the", "klaroline", "letter"]
(c7-1 / letter
      :name (c7-0 / name
                  :op1 "klaroline"))

# ::snt Gogogo for letter
# ::tokens ["Gogogo", "for", "letter"]
# ::lemmas ["Gogogo", "for", "letter"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "Gogogo")
      :prep-for (c8-2 / letter))

# ::snt Wolfgang! TV Scoop Awards : Vote for the Best and Worst TV Shockers
# ::tokens ["Wolfgang", "!", "TV", "Scoop", "Awards", ":", "Vote", "for", "the", "Best", "and", "Worst", "TV", "Shockers"]
# ::lemmas ["Wolfgang", "!", "tv", "Scoop", "Awards", ":", "vote", "for", "the", "best", "and", "Worst", "TV", "Shockers"]
(c9-12 / multi-sentence
       :snt1 (c9-17 / person
                    :name (c9-16 / name
                                 :op1 "Wolfgang"))
       :snt2 (c9-4 / vote-01
                   :ARG0 (c9-3 / you)
                   :ARG1 (c9-9 / and
                               :op1 (c9-8 / thing
                                          :ARG1-of (c9-0 / shock-01
                                                         :medium (c9-14 / television))
                                          :ARG1-of (c9-5 / have-degree-91
                                                         :ARG2 (c9-10 / good-02
                                                                      :ARG1 c9-8)
                                                         :ARG3 (c9-6 / most)))
                               :op2 (c9-19 / thing
                                           :ARG1-of (c9-2 / shock-01
                                                          :medium (c9-1 / television))
                                           :ARG1-of (c9-18 / have-degree-91
                                                           :ARG2 (c9-11 / bad-07
                                                                        :ARG1 c9-19)
                                                           :ARG3 (c9-15 / most))))
                   :mode imperative)
       :snt3 (c9-7 / award
                   :name (c9-13 / name
                                :op1 "TV"
                                :op2 "Scoop"
                                :op3 "Awards")))

# ::snt Klaroline letter
# ::tokens ["Klaroline", "letter"]
# ::lemmas ["Klaroline", "letter"]
(c10-1 / letter
       :name (c10-0 / name
                    :op1 "Klaroline"))

# ::snt The letter from Klaroline was nominated for Best Shocker
# ::tokens ["The", "letter", "from", "Klaroline", "was", "nominated", "for", "Best", "Shocker"]
# ::lemmas ["the", "letter", "from", "Klaroline", "be", "nominate", "for", "Best", "Shocker"]
(c11-0 / nominate-01
       :ARG1 (c11-3 / letter
                    :source (c11-2 / person
                                   :name (c11-1 / name
                                                :op1 "Klaroline")))
       :ARG2 (c11-5 / award
                    :name (c11-4 / name
                                 :op1 "Best"
                                 :op2 "Shocker")))

# ::snt letter
# ::tokens ["letter"]
# ::lemmas ["letter"]
(c12-0 / letter)

# ::snt klaroline letter
# ::tokens ["klaroline", "letter"]
# ::lemmas ["klaroline", "letter"]
(c14-1 / letter
       :name (c14-0 / name
                    :op1 "klaroline"))

# ::snt klaroline
# ::tokens ["klaroline"]
# ::lemmas ["klaroline"]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "klaroline"))

# ::snt yesssss klaroline!!!!!
# ::tokens ["yesssss", "klaroline", "!", "!", "!", "!", "!"]
# ::lemmas ["yesssss", "klaroline", "!", "!", "!", "!", "!"]
(c16-3 / say-01
       :ARG1 (c16-1 / yesssss
                    :mode expressive)
       :ARG2 (c16-2 / person
                    :name (c16-0 / name
                                 :op1 "Klaroline"))
       :mode expressive)

# ::snt klaroline letter
# ::tokens ["klaroline", "letter"]
# ::lemmas ["klaroline", "letter"]
(c17-1 / letter
       :name (c17-0 / name
                    :op1 "klaroline"))

# ::snt Thanks for nominating the Klaroline letter as best shocker
# ::tokens ["Thanks", "for", "nominating", "the", "Klaroline", "letter", "as", "best", "shocker"]
# ::lemmas ["thank", "for", "nominate", "the", "Klaroline", "letter", "as", "good", "shocker"]
(c18-7 / thank-01
       :ARG0 (c18-6 / i)
       :ARG1 (c18-0 / you)
       :ARG2 (c18-1 / nominate-01
                    :ARG0 c18-0
                    :ARG1 (c18-4 / letter
                                 :name (c18-3 / name
                                              :op1 "Klaroline"))
                    :ARG2 (c18-5 / have-degree-91
                                 :ARG1 c18-4
                                 :ARG2 (c18-8 / good-02
                                              :ARG1 c18-4)
                                 :ARG3 (c18-2 / most))))

# ::snt Vote for Sense8
# ::tokens ["Vote", "for", "Sense8"]
# ::lemmas ["vote", "for", "Sense8"]
(c19-1 / vote-01
       :ARG0 (c19-2 / you)
       :ARG1 (c19-3 / person
                    :name (c19-0 / name
                                 :op1 "Sense8"))
       :mode imperative)
