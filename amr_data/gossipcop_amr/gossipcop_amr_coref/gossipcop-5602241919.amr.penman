# ::snt what the fuck they were together? lol
# ::tokens ["what", "the", "fuck", "they", "were", "together", "?", "lol"]
# ::lemmas ["what", "the", "fuck", "they", "be", "together", "?", "lol"]
(c1-2 / together
      :domain (c1-6 / they)
      :mod (c1-4 / amr-unknown
                 :mod (c1-0 / fuck
                            :mode expressive))
      :ARG2-of (c1-1 / laugh-01
                     :ARG0 (c1-3 / i)
                     :manner (c1-5 / loud)
                     :mode expressive))

# ::snt came here to browbeat you about letter case but see that that's already been done so now i'm replying just to reply
# ::tokens ["came", "here", "to", "browbeat", "you", "about", "letter", "case", "but", "see", "that", "that", "'s", "already", "been", "done", "so", "now", "i", "'m", "replying", "just", "to", "reply"]
# ::lemmas ["come", "here", "to", "browbeat", "you", "about", "letter", "case", "but", "see", "that", "that", "be", "already", "be", "do", "so", "now", "i", "be", "reply", "just", "to", "reply"]
(c2-8 / contrast-01
      :ARG1 (c2-14 / come-01
                   :ARG1 (c2-11 / i)
                   :ARG4 (c2-6 / here)
                   :purpose (c2-1 / browbeat-01
                                  :ARG0 c2-11
                                  :ARG1 (c2-2 / you)
                                  :topic (c2-9 / case-03
                                               :ARG1 (c2-7 / letter))))
      :ARG2 (c2-4 / see-01
                  :ARG0 c2-11
                  :ARG1 (c2-13 / do-02
                               :ARG1 c2-1
                               :time (c2-12 / already)
                               :ARG0-of (c2-0 / cause-01
                                              :ARG1 (c2-5 / reply-01
                                                          :ARG0 c2-11
                                                          :mod (c2-10 / just)
                                                          :time (c2-3 / now))))))

# ::snt The lede
# ::tokens ["The", "lede"]
# ::lemmas ["the", "lede"]
(c3-0 / lede)

# ::snt :While I have your ear, Happy Thanksgiving to you.
# ::tokens [":", "While", "I", "have", "your", "ear", ",", "Happy", "Thanksgiving", "to", "you", "."]
# ::lemmas [":", "while", "i", "have", "your", "ear", ",", "Happy", "Thanksgiving", "to", "you", "."]
(c4-3 / say-01
      :ARG1 (c4-5 / happy-01
                  :ARG1 (c4-0 / festival
                              :name (c4-2 / name
                                          :op1 "Thanksgiving"))
                  :ARG2 (c4-1 / you
                              :part (c4-4 / ear)
                              :ARG2-of c4-3))
      :time (c4-6 / have-03
                  :ARG0 (c4-7 / i)
                  :ARG1 c4-4))

# ::snt I have since discovered that the point I made had previously been noted by more than one person. I regret the redundant remark.
# ::tokens ["I", "have", "since", "discovered", "that", "the", "point", "I", "made", "had", "previously", "been", "noted", "by", "more", "than", "one", "person", ".", "I", "regret", "the", "redundant", "remark", "."]
# ::lemmas ["i", "have", "since", "discover", "that", "the", "point", "i", "make", "have", "previously", "be", "note", "by", "more", "than", "one", "person", ".", "i", "regret", "the", "redundant", "remark", "."]
(c5-1 / multi-sentence
      :snt1 (c5-11 / discover-01
                   :ARG0 (c5-9 / i)
                   :ARG1 (c5-0 / note-01
                               :ARG0 (c5-7 / person
                                           :quant (c5-6 / more-than
                                                        :op1 1))
                               :ARG1 (c5-2 / point-04
                                           :ARG0 c5-9)
                               :time (c5-10 / previous))
                   :time (c5-3 / since))
      :snt2 (c5-4 / regret-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-12 / remark-01
                               :mod (c5-8 / redundant))))

# ::snt Shouldn't this all be in lower case
# ::tokens ["Should", "n't", "this", "all", "be", "in", "lower", "case"]
# ::lemmas ["should", "not", "this", "all", "be", "in", "low", "case"]
(c6-1 / recommend-01
      :ARG1 (c6-4 / case-04
                  :ARG1 (c6-5 / this
                              :mod (c6-6 / all))
                  :ARG1-of (c6-2 / have-degree-91
                                 :ARG2 (c6-3 / low-04
                                             :ARG1 c6-4)
                                 :ARG3 (c6-0 / more)))
      :ARG1-of (c6-7 / request-confirmation-91))

# ::snt Showmances never last
# ::tokens ["Showmances", "never", "last"]
# ::lemmas ["showmance", "never", "last"]
(c7-1 / last-04
      :ARG1 (c7-2 / showmance)
      :time (c7-0 / ever)
      :polarity -)

# ::snt Who are they
# ::tokens ["Who", "are", "they"]
# ::lemmas ["who", "be", "they"]
(c8-1 / they
      :domain (c8-0 / amr-unknown))

# ::snt and all it took was one shitty movie to tear them apart
# ::tokens ["and", "all", "it", "took", "was", "one", "shitty", "movie", "to", "tear", "them", "apart"]
# ::lemmas ["and", "all", "it", "take", "be", "one", "shitty", "movie", "to", "tear", "they", "apart"]
(c9-2 / and
      :op2 (c9-4 / take-10
                 :ARG0 (c9-7 / tear-01
                             :ARG1 (c9-5 / they)
                             :ARG2 (c9-6 / apart))
                 :ARG1 (c9-0 / movie
                             :mod (c9-1 / shitty)
                             :quant 1)
                 :mod (c9-3 / all)))

# ::snt Dammit. Why doesn't Twitter have a laugh react yet
# ::tokens ["Dammit", ".", "Why", "does", "n't", "Twitter", "have", "a", "laugh", "react", "yet"]
# ::lemmas ["Dammit", ".", "why", "do", "not", "Twitter", "have", "a", "laugh", "react", "yet"]
(c10-1 / multi-sentence
       :snt1 (c10-8 / damn-01)
       :snt2 (c10-6 / cause-01
                    :ARG0 (c10-7 / amr-unknown)
                    :ARG1 (c10-3 / react-01
                                 :ARG0 (c10-4 / publication
                                              :name (c10-2 / name
                                                           :op1 "Twitter"))
                                 :manner (c10-5 / laugh-01)
                                 :time (c10-0 / yet)
                                 :polarity -)))

# ::snt Did they finally realize why yrs makes a difference? They are at totally different places in life.
# ::tokens ["Did", "they", "finally", "realize", "why", "yrs", "makes", "a", "difference", "?", "They", "are", "at", "totally", "different", "places", "in", "life", "."]
# ::lemmas ["do", "they", "finally", "realize", "why", "yrs", "make", "a", "difference", "?", "they", "be", "at", "totally", "different", "place", "in", "life", "."]
(c11-3 / multi-sentence
       :snt1 (c11-4 / realize-01
                    :ARG0 (c11-12 / they)
                    :ARG1 (c11-14 / thing
                                  :ARG0-of (c11-10 / cause-01
                                                   :ARG1 (c11-7 / make-02
                                                                :ARG0 (c11-2 / you)
                                                                :ARG1 (c11-15 / differ-02))))
                    :polarity (c11-5 / amr-unknown)
                    :time (c11-0 / final))
       :snt2 (c11-1 / be-located-at-91
                    :ARG1 (c11-13 / they)
                    :ARG2 (c11-8 / place
                                 :ARG1-of (c11-11 / differ-02
                                                  :degree (c11-6 / total))
                                 :part-of (c11-9 / life))))

# ::snt honestly thank goodness
# ::tokens ["honestly", "thank", "goodness"]
# ::lemmas ["honestly", "thank", "goodness"]
(c12-2 / thank-01
       :ARG1 (c12-0 / goodness)
       :ARG1-of (c12-1 / honest-01))

# ::snt Good! They sucked together.
# ::tokens ["Good", "!", "They", "sucked", "together", "."]
# ::lemmas ["good", "!", "they", "suck", "together", "."]
(c13-0 / multi-sentence
       :snt1 (c13-3 / good-02)
       :snt2 (c13-1 / suck-03
                    :ARG0 (c13-2 / they
                                 :ARG1-of c13-1)
                    :mod (c13-4 / together)))

# ::snt RIP Lawronofsky. We hardly knew ye.
# ::tokens ["RIP", "Lawronofsky", ".", "We", "hardly", "knew", "ye", "."]
# ::lemmas ["RIP", "Lawronofsky", ".", "we", "hardly", "know", "ye", "."]
(c14-2 / multi-sentence
       :snt1 (c14-9 / wish-01
                    :ARG1 (c14-4 / rest-01
                                 :ARG1 (c14-6 / person
                                              :name (c14-1 / name
                                                           :op1 "Lawronofsky"))
                                 :manner (c14-3 / peace)))
       :snt2 (c14-7 / know-02
                    :ARG0 (c14-8 / we)
                    :ARG1 (c14-0 / you)
                    :degree (c14-5 / hardly)))

# ::snt Why.because of the nude pics? Smh
# ::tokens ["Why.because", "of", "the", "nude", "pics", "?", "Smh"]
# ::lemmas ["why.because", "of", "the", "nude", "pic", "?", "smh"]
(c15-1 / multi-sentence
       :snt1 (c15-4 / cause-01
                    :ARG0 (c15-3 / picture
                                 :mod (c15-0 / nude))
                    :ARG1 c15-4
                    :ARG0 (c15-5 / amr-unknown))
       :snt2 (c15-2 / smh
                    :mode expressive))

# ::snt So saw that comingCPratt is available Run Chris Run!!
# ::tokens ["So", "saw", "that", "comingCPratt", "is", "available", "Run", "Chris", "Run", "!", "!"]
# ::lemmas ["so", "see", "that", "comingCPratt", "be", "available", "Run", "Chris", "Run", "!", "!"]
(c16-1 / multi-sentence
       :snt1 (c16-8 / cause-01
                    :ARG1 (c16-3 / see-01
                                 :ARG1 (c16-9 / available-02
                                              :ARG2 (c16-7 / person
                                                           :name (c16-2 / name
                                                                        :op1 "CPratt")))))
       :snt2 (c16-0 / say-01
                    :ARG1 (c16-5 / run-02
                                 :ARG0 (c16-4 / person
                                              :name (c16-6 / name
                                                           :op1 "Chris"
                                                           :op2 "Run")
                                              :ARG2-of c16-0)
                                 :mode expressive)))

# ::snt Yep she'll be going after Chris Pratt now
# ::tokens ["Yep", "she", "'ll", "be", "going", "after", "Chris", "Pratt", "now"]
# ::lemmas ["yep", "she", "'ll", "be", "go", "after", "Chris", "Pratt", "now"]
(c17-4 / go-03
       :ARG0 (c17-1 / she)
       :ARG1 (c17-3 / person
                    :name (c17-0 / name
                                 :op1 "Chris"
                                 :op2 "Pratt"))
       :time (c17-2 / now))

# ::snt Beautiful piece back on the market.
# ::tokens ["Beautiful", "piece", "back", "on", "the", "market", "."]
# ::lemmas ["beautiful", "piece", "back", "on", "the", "market", "."]
(c19-3 / piece
       :ARG1-of (c19-1 / beautiful-02)
       :location (c19-0 / market
                        :mod (c19-2 / back)))

# ::snt That's gonna be one arkward Oscar-Night
# ::tokens ["That", "'s", "gon", "na", "be", "one", "arkward", "Oscar", "-", "Night"]
# ::lemmas ["that", "be", "going", "to", "be", "one", "arkward", "Oscar", "-", "Night"]
(c20-0 / night
       :mod (c20-1 / awkward
                   :quant 1)
       :mod (c20-3 / award
                   :name (c20-2 / name
                                :op1 "Oscar"))
       :domain (c20-4 / that))

# ::snt "I got a script, and when I read it, I threw it across the room and told him he had severe psychological problems." -Jennifer Lawrence on Aronofsky's mother! script
# ::tokens ["\"", "I", "got", "a", "script", ",", "and", "when", "I", "read", "it", ",", "I", "threw", "it", "across", "the", "room", "and", "told", "him", "he", "had", "severe", "psychological", "problems", ".", "\"", "-Jennifer", "Lawrence", "on", "Aronofsky", "'s", "mother", "!", "script"]
# ::lemmas ["\"", "i", "get", "a", "script", ",", "and", "when", "i", "read", "it", ",", "i", "throw", "it", "across", "the", "room", "and", "tell", "he", "he", "have", "severe", "psychological", "problem", ".", "\"", "-Jennifer", "Lawrence", "on", "Aronofsky", "'s", "mother", "!", "script"]
(c21-13 / multi-sentence
        :snt1 (c21-11 / and
                      :op1 (c21-12 / get-01
                                   :ARG0 (c21-20 / i)
                                   :ARG1 (c21-0 / script))
                      :op2 (c21-10 / throw-01
                                   :ARG0 c21-20
                                   :ARG1 c21-0
                                   :ARG2 (c21-9 / across
                                                :op1 (c21-17 / room)))
                      :op3 (c21-15 / tell-01
                                   :ARG0 c21-20
                                   :ARG1 (c21-7 / have-03
                                                :ARG0 (c21-19 / he)
                                                :ARG1 (c21-18 / problem
                                                              :mod (c21-14 / psychological)
                                                              :mod (c21-5 / severe)))
                                   :ARG2 (c21-2 / person
                                                :ARG0-of (c21-6 / have-rel-role-91
                                                                :ARG1 (c21-1 / person
                                                                             :name (c21-16 / name
                                                                                           :op1 "Aronofsky"))
                                                                :ARG2 (c21-8 / mother)))
                                   :time (c21-3 / read-01
                                                :ARG0 c21-20
                                                :ARG1 c21-0)))
        :snt2 (c21-4 / script-01
                     :mode expressive))

# ::snt Which one of them forgot to brace the sink?
# ::tokens ["Which", "one", "of", "them", "forgot", "to", "brace", "the", "sink", "?"]
# ::lemmas ["which", "one", "of", "they", "forget", "to", "brace", "the", "sink", "?"]
(c22-0 / forget-01
       :ARG0 (c22-3 / amr-unknown
                    :ARG1-of (c22-4 / include-91
                                    :ARG2 (c22-5 / they)))
       :ARG1 (c22-1 / brace-01
                    :ARG0 c22-3
                    :ARG1 (c22-2 / sink)))

# ::snt what is the big deal about this story?
# ::tokens ["what", "is", "the", "big", "deal", "about", "this", "story", "?"]
# ::lemmas ["what", "be", "the", "big", "deal", "about", "this", "story", "?"]
(c23-4 / deal-03
       :ARG1 (c23-2 / amr-unknown)
       :mod (c23-0 / big)
       :topic (c23-1 / story
                     :mod (c23-3 / this)))

# ::snt Had know idea they where together
# ::tokens ["Had", "know", "idea", "they", "where", "together"]
# ::lemmas ["have", "know", "idea", "they", "where", "together"]
(c24-0 / know-01
       :ARG0 (c24-4 / i)
       :ARG1 (c24-1 / thing
                    :location-of (c24-3 / they
                                        :manner (c24-2 / together))))

# ::snt Thought she did that already
# ::tokens ["Thought", "she", "did", "that", "already"]
# ::lemmas ["Thought", "she", "do", "that", "already"]
(c25-1 / think-01
       :ARG1 (c25-3 / do-02
                    :ARG0 (c25-0 / she)
                    :ARG1 (c25-4 / that)
                    :time (c25-2 / already)))

# ::snt I did not see it, but after all the darkness I heard about Mother, well....just sayin`......
# ::tokens ["I", "did", "not", "see", "it", ",", "but", "after", "all", "the", "darkness", "I", "heard", "about", "Mother", ",", "well", "....", "just", "sayin", "`", "......"]
# ::lemmas ["i", "do", "not", "see", "it", ",", "but", "after", "all", "the", "darkness", "i", "hear", "about", "Mother", ",", "well", "....", "just", "sayin", "`", "......"]
(c26-6 / contrast-01
       :ARG1 (c26-2 / see-01
                    :ARG0 (c26-9 / i)
                    :ARG1 (c26-3 / it)
                    :polarity -)
       :ARG2 (c26-0 / say-01
                    :ARG0 c26-9
                    :ARG1 c26-3
                    :mod (c26-8 / just)
                    :concession (c26-10 / after
                                        :op1 (c26-12 / darkness
                                                     :mod (c26-11 / all)
                                                     :ARG1-of (c26-4 / hear-01
                                                                     :ARG0 c26-9
                                                                     :topic (c26-5 / person
                                                                                   :ARG0-of (c26-7 / have-rel-role-91
                                                                                                   :ARG2 (c26-1 / mother))))))))

# ::snt So, that means she's single again. And as it happens, so am I. I knew this Darren thing was all a ploy to make your way to me, Jen, and okay. You win. Call me, I'm ready for this now.
# ::tokens ["So", ",", "that", "means", "she", "'s", "single", "again", ".", "And", "as", "it", "happens", ",", "so", "am", "I.", "I", "knew", "this", "Darren", "thing", "was", "all", "a", "ploy", "to", "make", "your", "way", "to", "me", ",", "Jen", ",", "and", "okay", ".", "You", "win", ".", "Call", "me", ",", "I", "'m", "ready", "for", "this", "now", "."]
# ::lemmas ["so", ",", "that", "mean", "she", "be", "single", "again", ".", "and", "as", "it", "happen", ",", "so", "be", "I.", "i", "know", "this", "Darren", "thing", "be", "all", "a", "ploy", "to", "make", "your", "way", "to", "i", ",", "Jen", ",", "and", "okay", ".", "you", "win", ".", "call", "i", ",", "i", "be", "ready", "for", "this", "now", "."]
(c27-17 / multi-sentence
        :snt1 (c27-20 / cause-01
                      :ARG1 (c27-9 / mean-01
                                   :ARG1 (c27-14 / that)
                                   :ARG2 (c27-0 / single-03
                                                :ARG1 (c27-5 / she)
                                                :mod (c27-13 / again))))
        :snt2 (c27-12 / and
                      :op2 (c27-4 / single-03
                                  :ARG1 (c27-29 / i)
                                  :mod (c27-11 / also)
                                  :time (c27-25 / event)))
        :snt3 (c27-31 / and
                      :op1 (c27-10 / know-01
                                   :ARG0 (c27-8 / i)
                                   :ARG1 (c27-26 / ploy
                                                 :domain (c27-21 / thing
                                                                 :mod (c27-18 / person
                                                                              :name (c27-23 / name
                                                                                            :op1 "Darren"))
                                                                 :mod (c27-30 / this))
                                                 :purpose (c27-22 / make-18
                                                                  :ARG0 c27-18
                                                                  :ARG1 (c27-27 / way
                                                                                :poss c27-18)
                                                                  :ARG2 c27-8)
                                                 :mod (c27-28 / all)))
                      :op2 (c27-6 / okay-04))
        :snt4 (c27-2 / win-01
                     :ARG0 (c27-7 / you))
        :snt5 (c27-16 / call-02
                      :ARG0 (c27-15 / you)
                      :ARG1 c27-8
                      :ARG1-of (c27-3 / cause-01
                                      :ARG0 (c27-24 / ready-02
                                                    :ARG1 c27-8
                                                    :ARG2 (c27-1 / this)
                                                    :time (c27-19 / now)))
                      :mode imperative))

# ::snt Who is getting custody of "mother!"?
# ::tokens ["Who", "is", "getting", "custody", "of", "\"", "mother", "!", "\"", "?"]
# ::lemmas ["who", "be", "get", "custody", "of", "\"", "mother", "!", "\"", "?"]
(c29-5 / get-01
       :ARG0 (c29-4 / amr-unknown)
       :ARG1 (c29-3 / custody
                    :poss (c29-2 / person
                                 :ARG0-of (c29-1 / have-rel-role-91
                                                 :ARG2 (c29-0 / mother)))))

# ::snt Step : Chris Pratt divorces Step : Jennifer Lawrence SplitsStep : Chris and Jennifer datesResults: A Hollywood love story
# ::tokens ["Step", ":", "Chris", "Pratt", "divorces", "Step", ":", "Jennifer", "Lawrence", "SplitsStep", ":", "Chris", "and", "Jennifer", "datesResults", ":", "A", "Hollywood", "love", "story"]
# ::lemmas ["step", ":", "Chris", "Pratt", "divorce", "step", ":", "Jennifer", "Lawrence", "SplitsStep", ":", "Chris", "and", "Jennifer", "datesresult", ":", "a", "Hollywood", "love", "story"]
(c30-13 / and
        :op1 (c30-3 / step-01
                    :ARG2 (c30-14 / divorce-01
                                  :ARG0 (c30-8 / person
                                               :name (c30-1 / name
                                                            :op1 "Chris"
                                                            :op2 "Pratt"))))
        :op2 (c30-0 / step-01
                    :ARG2 c30-14
                    :ARG0 (c30-2 / person
                                 :name (c30-7 / name
                                              :op1 "Jennifer"
                                              :op2 "Lawrence")))
        :op3 (c30-15 / step-01
                     :ARG2 (c30-11 / date-02
                                   :ARG0 (c30-12 / and
                                                 :op1 c30-8
                                                 :op2 c30-2)))
        :op4 (c30-5 / result-01
                    :ARG2 (c30-4 / story
                                 :topic (c30-9 / love-01)
                                 :mod (c30-6 / market-sector
                                             :name (c30-10 / name
                                                           :op1 "Hollywood")))))

# ::snt Good riddance, Darren!
# ::tokens ["Good", "riddance", ",", "Darren", "!"]
# ::lemmas ["good", "riddance", ",", "Darren", "!"]
(c31-1 / say-01
       :ARG0 (c31-4 / i)
       :ARG1 (c31-2 / riddance
                    :ARG1-of (c31-5 / good-02))
       :ARG2 (c31-3 / person
                    :name (c31-0 / name
                                 :op1 "Darren")))

# ::snt Jennifer said. She got to get the hell up outta this relationship, After Darren wrote mother! Lol .
# ::tokens ["Jennifer", "said", ".", "She", "got", "to", "get", "the", "hell", "up", "outta", "this", "relationship", ",", "After", "Darren", "wrote", "mother", "!", "Lol", "."]
# ::lemmas ["Jennifer", "say", ".", "she", "get", "to", "get", "the", "hell", "up", "outta", "this", "relationship", ",", "after", "Darren", "write", "mother", "!", "Lol", "."]
(c33-11 / multi-sentence
        :snt1 (c33-0 / say-01
                     :ARG0 (c33-16 / person
                                   :name (c33-14 / name
                                                 :op1 "Jennifer")))
        :snt2 (c33-9 / get-04
                     :ARG0 (c33-3 / she)
                     :ARG1 (c33-4 / out-06
                                  :ARG1 c33-3
                                  :ARG2 (c33-15 / relation-03
                                                :mod (c33-8 / this)))
                     :mod (c33-5 / hell
                                 :mode expressive)
                     :time (c33-7 / after
                                  :op1 (c33-17 / write-01
                                               :ARG0 (c33-12 / person
                                                             :name (c33-13 / name
                                                                           :op1 "Darren"))
                                               :ARG1 (c33-2 / person
                                                            :ARG0-of (c33-18 / have-rel-role-91
                                                                             :ARG2 (c33-6 / mother))))))
        :snt3 (c33-1 / laugh-01
                     :manner (c33-10 / loud)
                     :mode expressive))

# ::snt Yes!
# ::tokens ["Yes", "!"]
# ::lemmas ["yes", "!"]
(c34-0 / yes)

# ::snt Hahahahaha
# ::tokens ["Hahahahaha"]
# ::lemmas ["Hahahahaha"]
(c35-0 / haha
       :mode expressive)

# ::snt I had no idea either! Wtf is going on??? Hahahhahahaaa
# ::tokens ["I", "had", "no", "idea", "either", "!", "Wtf", "is", "going", "on", "?", "?", "?", "Hahahhahahaaa"]
# ::lemmas ["i", "have", "no", "idea", "either", "!", "Wtf", "be", "go", "on", "?", "?", "?", "Hahahhahahaaa"]
(c36-1 / multi-sentence
       :snt1 (c36-4 / have-03
                    :ARG0 (c36-5 / i)
                    :ARG1 (c36-2 / idea
                                 :mod (c36-3 / either))
                    :polarity -)
       :snt2 (c36-7 / go-on-15
                    :ARG1 (c36-6 / amr-unknown)
                    :mod (c36-0 / fuck
                                :mode expressive)))

# ::snt I knew it was going to happen. After it was first announce, I knew it wasn't going to last because Jlaw is a troublemaker and only used him to get the movie to be a hit and it didn't work!
# ::tokens ["I", "knew", "it", "was", "going", "to", "happen", ".", "After", "it", "was", "first", "announce", ",", "I", "knew", "it", "was", "n't", "going", "to", "last", "because", "Jlaw", "is", "a", "troublemaker", "and", "only", "used", "him", "to", "get", "the", "movie", "to", "be", "a", "hit", "and", "it", "did", "n't", "work", "!"]
# ::lemmas ["i", "know", "it", "be", "go", "to", "happen", ".", "after", "it", "be", "first", "announce", ",", "i", "know", "it", "be", "not", "go", "to", "last", "because", "Jlaw", "be", "a", "troublemaker", "and", "only", "use", "he", "to", "get", "the", "movie", "to", "be", "a", "hit", "and", "it", "do", "not", "work", "!"]
(c37-13 / multi-sentence
        :snt1 (c37-5 / know-01
                     :ARG0 (c37-21 / i)
                     :ARG1 (c37-3 / it))
        :snt2 (c37-15 / know-01
                      :ARG0 (c37-11 / i)
                      :ARG1 (c37-1 / last-04
                                   :ARG1 (c37-0 / it)
                                   :polarity -)
                      :time (c37-9 / after
                                   :op1 (c37-8 / announce-01
                                               :ord (c37-2 / ordinal-entity
                                                           :value 1)))
                      :ARG1-of (c37-14 / cause-01
                                       :ARG0 (c37-7 / and
                                                    :op1 (c37-4 / make-trouble-06
                                                                :ARG0 (c37-19 / person
                                                                              :name (c37-18 / name
                                                                                            :op1 "Jlaw")))
                                                    :op2 (c37-22 / and
                                                                 :op1 (c37-16 / use-01
                                                                              :ARG0 c37-11
                                                                              :ARG1 c37-19
                                                                              :ARG2 (c37-10 / get-04
                                                                                            :ARG0 c37-19
                                                                                            :ARG1 (c37-6 / hit-05
                                                                                                         :ARG1 (c37-17 / movie)))
                                                                              :mod (c37-12 / only))
                                                                 :op2 (c37-20 / work-09
                                                                              :ARG1 c37-0
                                                                              :polarity -))))))
