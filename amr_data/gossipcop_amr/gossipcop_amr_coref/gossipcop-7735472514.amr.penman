# ::snt Everyone knows OJ Simpson murdered Nicole Simpson and Ron Goldman including OJ himself
# ::tokens ["Everyone", "knows", "OJ", "Simpson", "murdered", "Nicole", "Simpson", "and", "Ron", "Goldman", "including", "OJ", "himself"]
# ::lemmas ["everyone", "know", "OJ", "Simpson", "murder", "Nicole", "Simpson", "and", "Ron", "Goldman", "include", "OJ", "himself"]
(c1-6 / know-01
      :ARG0 (c1-3 / everyone
                  :ARG2-of (c1-8 / include-01
                                 :ARG1 (c1-5 / person
                                             :name (c1-0 / name
                                                         :op1 "OJ"
                                                         :op2 "Simpson"))))
      :ARG1 (c1-1 / murder-01
                  :ARG0 c1-5
                  :ARG1 (c1-9 / and
                              :op1 (c1-2 / person
                                         :name (c1-4 / name
                                                     :op1 "Nicole"
                                                     :op2 "Simpson"))
                              :op2 (c1-10 / person
                                          :name (c1-7 / name
                                                      :op1 "Ron"
                                                      :op2 "Goldman")))))

# ::snt Girl, whatever your mother told him that's what Caitlyn Jenner saying. blame your Mother
# ::tokens ["Girl", ",", "whatever", "your", "mother", "told", "him", "that", "'s", "what", "Caitlyn", "Jenner", "saying", ".", "blame", "your", "Mother"]
# ::lemmas ["girl", ",", "whatever", "your", "mother", "tell", "he", "that", "be", "what", "Caitlyn", "Jenner", "say", ".", "blame", "your", "Mother"]
(c2-2 / multi-sentence
      :snt1 (c2-4 / say-01
                  :ARG0 (c2-12 / girl)
                  :ARG1 (c2-9 / whatever
                              :ARG1-of (c2-11 / tell-01
                                              :ARG0 (c2-7 / person
                                                          :ARG0-of (c2-6 / have-rel-role-91
                                                                         :ARG1 c2-12
                                                                         :ARG2 (c2-8 / mother)))
                                              :ARG2 (c2-10 / he))))
      :snt2 (c2-0 / blame-01
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-3 / person
                              :ARG0-of (c2-5 / have-rel-role-91
                                             :ARG1 c2-1
                                             :ARG2 c2-8))
                  :mode imperative))

# ::snt She meant "he's", i think
# ::tokens ["She", "meant", "\"", "he", "'s", "\"", ",", "i", "think"]
# ::lemmas ["she", "mean", "\"", "he", "be", "\"", ",", "i", "think"]
(c3-4 / think-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-0 / mean-01
                  :ARG0 (c3-1 / she)
                  :ARG1 (c3-2 / he)))

# ::snt But didn't your mom sayit herself years ago she thinks OJ Simpson killed his wife her best friend?
# ::tokens ["But", "did", "n't", "your", "mom", "sayit", "herself", "years", "ago", "she", "thinks", "OJ", "Simpson", "killed", "his", "wife", "her", "best", "friend", "?"]
# ::lemmas ["but", "do", "not", "your", "mom", "sayit", "herself", "years", "ago", "she", "think", "OJ", "Simpson", "kill", "his", "wife", "her", "good", "friend", "?"]
(c4-15 / contrast-01
       :ARG2 (c4-0 / say-01
                   :ARG0 (c4-21 / person
                                :ARG0-of (c4-4 / have-rel-role-91
                                               :ARG1 (c4-2 / you)
                                               :ARG2 (c4-12 / mom)))
                   :ARG1 (c4-7 / think-01
                               :ARG0 c4-21
                               :ARG1 (c4-5 / kill-01
                                           :ARG0 (c4-13 / person
                                                        :name (c4-20 / name
                                                                     :op1 "OJ"
                                                                     :op2 "Simpson"))
                                           :ARG1 (c4-1 / person
                                                       :ARG0-of (c4-23 / have-rel-role-91
                                                                       :ARG1 c4-13
                                                                       :ARG2 (c4-22 / wife)))
                                           :ARG0-of (c4-3 / have-rel-role-91
                                                          :ARG1 c4-13
                                                          :ARG2 (c4-19 / friend
                                                                       :ARG1-of (c4-17 / have-degree-91
                                                                                       :ARG2 (c4-8 / good-02
                                                                                                   :ARG1 c4-19)
                                                                                       :ARG3 (c4-6 / most))))))
                   :time (c4-11 / before
                                :op1 (c4-14 / now)
                                :quant (c4-18 / multiple
                                              :op1 (c4-16 / temporal-quantity
                                                          :unit (c4-9 / year)
                                                          :quant 1)))
                   :polarity (c4-10 / amr-unknown)
                   :polarity -))

# ::snt So there's no possibility her father told Bruce one thing and told his kids another?
# ::tokens ["So", "there", "'s", "no", "possibility", "her", "father", "told", "Bruce", "one", "thing", "and", "told", "his", "kids", "another", "?"]
# ::lemmas ["so", "there", "be", "no", "possibility", "her", "father", "tell", "Bruce", "one", "thing", "and", "tell", "his", "kid", "another", "?"]
(c5-7 / possible-01
      :ARG1 (c5-4 / and
                  :op1 (c5-13 / tell-01
                              :ARG0 (c5-2 / person
                                          :ARG0-of (c5-6 / have-rel-role-91
                                                         :ARG1 (c5-3 / she)
                                                         :ARG2 (c5-0 / father)))
                              :ARG1 (c5-16 / thing
                                           :quant 1)
                              :ARG2 (c5-15 / person
                                           :name (c5-1 / name
                                                       :op1 "Bruce")))
                  :op2 (c5-12 / tell-01
                              :ARG0 c5-2
                              :ARG1 (c5-5 / thing
                                          :mod (c5-14 / another))
                              :ARG2 (c5-9 / person
                                          :ARG0-of (c5-11 / have-rel-role-91
                                                          :ARG1 c5-2
                                                          :ARG2 (c5-8 / kid)))))
      :polarity (c5-10 / amr-unknown)
      :polarity -)

# ::snt Damn kim Mmmm your so sexy mmmmm
# ::tokens ["Damn", "kim", "Mmmm", "your", "so", "sexy", "mmmmm"]
# ::lemmas ["Damn", "kim", "Mmmm", "your", "so", "sexy", "mmmmm"]
(c6-4 / and
      :op1 (c6-5 / damn
                 :mode expressive)
      :op2 (c6-2 / say-01
                 :ARG1 (c6-0 / sexy
                             :domain (c6-1 / you)
                             :degree (c6-6 / so))
                 :ARG2 c6-1)
      :op3 (c6-3 / hmm
                 :mode expressive))

# ::snt And youre a woman making a living off a blow job and a fuck on film. Like any porno queen.
# ::tokens ["And", "you", "re", "a", "woman", "making", "a", "living", "off", "a", "blow", "job", "and", "a", "fuck", "on", "film", ".", "Like", "any", "porno", "queen", "."]
# ::lemmas ["and", "you", "re", "a", "woman", "make", "a", "living", "off", "a", "blow", "job", "and", "a", "fuck", "on", "film", ".", "like", "any", "porno", "queen", "."]
(c7-3 / multi-sentence
      :snt1 (c7-12 / and
                   :op2 (c7-9 / woman
                              :domain (c7-2 / you)
                              :ARG0-of (c7-5 / make-05
                                             :ARG1 (c7-6 / live-01
                                                         :ARG0 c7-9)
                                             :ARG2 (c7-11 / and
                                                          :op1 (c7-1 / blow-03)
                                                          :op2 (c7-0 / fuck-01
                                                                     :medium (c7-7 / film))))))
      :snt2 (c7-4 / resemble-01
                  :ARG1 (c7-13 / you)
                  :ARG2 (c7-14 / queen
                               :mod (c7-8 / porno)
                               :mod (c7-10 / any))))

# ::snt Neither are you people either!
# ::tokens ["Neither", "are", "you", "people", "either", "!"]
# ::lemmas ["neither", "be", "you", "people", "either", "!"]
(c9-2 / person
      :domain (c9-1 / you)
      :mod (c9-0 / either)
      :polarity -)

# ::snt She looks like a blow up doll
# ::tokens ["She", "looks", "like", "a", "blow", "up", "doll"]
# ::lemmas ["she", "look", "like", "a", "blow", "up", "doll"]
(c11-2 / look-02
       :ARG0 (c11-3 / she)
       :ARG1 (c11-0 / doll
                    :ARG0-of (c11-1 / blow-up-06)))

# ::snt Could it be bc the whole Kardashian crew are morally bankrupt? I'm sure he knew damn well OJ was guilty.
# ::tokens ["Could", "it", "be", "bc", "the", "whole", "Kardashian", "crew", "are", "morally", "bankrupt", "?", "I", "'m", "sure", "he", "knew", "damn", "well", "OJ", "was", "guilty", "."]
# ::lemmas ["could", "it", "be", "bc", "the", "whole", "Kardashian", "crew", "be", "morally", "bankrupt", "?", "i", "be", "sure", "he", "know", "damn", "well", "OJ", "be", "guilty", "."]
(c12-10 / multi-sentence
        :snt1 (c12-15 / possible-01
                      :ARG1 (c12-13 / cause-01
                                    :ARG0 (c12-9 / bankrupt-01
                                                 :ARG1 (c12-8 / crew
                                                              :consist-of (c12-11 / person
                                                                                  :name (c12-14 / name
                                                                                                :op1 "Kardashian"))
                                                              :mod (c12-16 / whole))
                                                 :manner (c12-4 / moral-02))
                                    :ARG1 (c12-17 / it)))
        :snt2 (c12-0 / sure-02
                     :ARG0 (c12-3 / i)
                     :ARG1 (c12-5 / know-01
                                  :ARG0 (c12-6 / he)
                                  :ARG1 (c12-7 / guilty-01
                                               :ARG1 (c12-2 / person
                                                            :name (c12-12 / name
                                                                          :op1 "OJ")))
                                  :mod (c12-1 / well
                                              :degree (c12-18 / damn)))))

# ::snt If you need you can click here
# ::tokens ["If", "you", "need", "you", "can", "click", "here"]
# ::lemmas ["if", "you", "need", "you", "can", "click", "here"]
(c13-3 / possible-01
       :ARG1 (c13-4 / click-01
                    :ARG0 (c13-0 / you)
                    :location (c13-2 / here))
       :condition (c13-1 / need-01
                         :ARG0 c13-0))

# ::snt misleading. I think Rob didn't believe at first, but did before or during the trial. Certainly set up the questionable morals of his family.
# ::tokens ["misleading", ".", "I", "think", "Rob", "did", "n't", "believe", "at", "first", ",", "but", "did", "before", "or", "during", "the", "trial", ".", "Certainly", "set", "up", "the", "questionable", "morals", "of", "his", "family", "."]
# ::lemmas ["misleading", ".", "i", "think", "Rob", "do", "not", "believe", "at", "first", ",", "but", "do", "before", "or", "during", "the", "trial", ".", "certainly", "set", "up", "the", "questionable", "moral", "of", "his", "family", "."]
(c14-11 / multi-sentence
        :snt1 (c14-4 / mislead-01)
        :snt2 (c14-7 / think-01
                     :ARG0 (c14-18 / i)
                     :ARG1 (c14-12 / contrast-01
                                   :ARG1 (c14-10 / believe-01
                                                 :ARG0 (c14-17 / person
                                                               :name (c14-16 / name
                                                                             :op1 "Rob"))
                                                 :time (c14-6 / at-first)
                                                 :polarity -)
                                   :ARG2 (c14-1 / believe-01
                                                :ARG0 c14-17
                                                :time (c14-3 / or
                                                             :op1 (c14-2 / before
                                                                         :op1 (c14-13 / try-02))
                                                             :op2 (c14-5 / after
                                                                         :op1 c14-13)))))
        :snt3 (c14-0 / set-up-03
                     :ARG1 (c14-14 / moral-02
                                   :ARG1 (c14-15 / family
                                                 :ARG1-of (c14-8 / question-03)
                                                 :poss c14-17))
                     :manner (c14-9 / certain)))

# ::snt WOW! KIM.. Do U Even Know What Day it is??
# ::tokens ["WOW", "!", "KIM", "..", "Do", "U", "Even", "Know", "What", "Day", "it", "is", "?", "?"]
# ::lemmas ["WOW", "!", "KIM", "..", "do", "U", "even", "know", "what", "day", "it", "be", "?", "?"]
(c15-0 / multi-sentence
       :snt1 (c15-7 / wow
                    :mode expressive)
       :snt2 (c15-2 / say-01
                    :ARG1 (c15-4 / know-01
                                 :ARG0 (c15-6 / we)
                                 :ARG1 (c15-10 / day
                                               :domain (c15-8 / it))
                                 :mod (c15-3 / even)
                                 :polarity (c15-9 / amr-unknown))
                    :ARG2 (c15-5 / person
                                 :name (c15-1 / name
                                              :op1 "Kim"))))

# ::snt Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz....
# ::tokens ["Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz", "...."]
# ::lemmas ["Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz", "...."]
(c16-0)

# ::snt "He" is not a good person. You're welcome!
# ::tokens ["\"", "He", "\"", "is", "not", "a", "good", "person", ".", "You", "'re", "welcome", "!"]
# ::lemmas ["\"", "he", "\"", "be", "not", "a", "good", "person", ".", "you", "be", "welcome", "!"]
(c17-1 / multi-sentence
       :snt1 (c17-3 / person
                    :ARG1-of (c17-5 / good-02
                                    :polarity -)
                    :domain (c17-2 / he))
       :snt2 (c17-4 / welcome-01
                    :ARG1 (c17-0 / you)))

# ::snt Strong words coming from a porn star...
# ::tokens ["Strong", "words", "coming", "from", "a", "porn", "star", "..."]
# ::lemmas ["strong", "word", "come", "from", "a", "porn", "star", "..."]
(c18-3 / come-03
       :ARG1 (c18-4 / word
                    :ARG1-of (c18-1 / strong-02))
       :ARG2 (c18-0 / star
                    :mod (c18-2 / porn)))

# ::snt SICKO's
# ::tokens ["SICKO", "'s"]
# ::lemmas ["SICKO", "'s"]
(c19-0 / kick-01)

# ::snt U r not a good person
# ::tokens ["U", "r", "not", "a", "good", "person"]
# ::lemmas ["u", "r", "not", "a", "good", "person"]
(c20-2 / person
       :ARG1-of (c20-0 / good-02)
       :domain (c20-1 / you)
       :polarity -)

# ::snt You don't slam someone's deseased father. Low and uncalled for. Don't tarnish the memory of a loved one, good memories is all you have left
# ::tokens ["You", "do", "n't", "slam", "someone", "'s", "deseased", "father", ".", "Low", "and", "uncalled", "for", ".", "Do", "n't", "tarnish", "the", "memory", "of", "a", "loved", "one", ",", "good", "memories", "is", "all", "you", "have", "left"]
# ::lemmas ["you", "do", "not", "slam", "someone", "'s", "deseased", "father", ".", "low", "and", "uncalled", "for", ".", "do", "not", "tarnish", "the", "memory", "of", "a", "love", "one", ",", "good", "memory", "be", "all", "you", "have", "leave"]
(c21-13 / multi-sentence
        :snt1 (c21-0 / slam-02
                     :ARG0 (c21-3 / you)
                     :ARG1 (c21-18 / person
                                   :ARG0-of (c21-4 / have-rel-role-91
                                                   :ARG1 (c21-2 / someone)
                                                   :ARG2 (c21-17 / father))
                                   :ARG1-of (c21-20 / deseased-01))
                     :polarity -)
        :snt2 (c21-10 / and
                      :op1 (c21-1 / low-04)
                      :op2 (c21-15 / call-01
                                   :polarity -))
        :snt3 (c21-8 / tarnish-01
                     :ARG0 (c21-11 / you)
                     :ARG1 (c21-5 / memory
                                  :topic (c21-14 / person
                                                 :ARG1-of (c21-12 / love-01)))
                     :polarity -
                     :mode imperative)
        :snt4 (c21-19 / have-03
                      :ARG0 c21-11
                      :ARG1 (c21-16 / memory
                                    :ARG1-of (c21-9 / good-02))
                      :ARG1-of (c21-6 / leave-17)
                      :mod (c21-7 / all)))

# ::snt Y'all all crazy as fuck
# ::tokens ["Y'all", "all", "crazy", "as", "fuck"]
# ::lemmas ["Y'all", "all", "crazy", "as", "fuck"]
(c22-0 / crazy-03
       :ARG1 (c22-1 / you
                    :mod (c22-3 / all))
       :degree (c22-2 / as-fuck))

# ::snt he was
# ::tokens ["he", "was"]
# ::lemmas ["he", "be"]
(c23-0 / he)

# ::snt Ughhh. When will they just go away
# ::tokens ["Ughhh", ".", "When", "will", "they", "just", "go", "away"]
# ::lemmas ["Ughhh", ".", "when", "will", "they", "just", "go", "away"]
(c24-0 / multi-sentence
       :snt1 (c24-6 / ugh
                    :mode expressive)
       :snt2 (c24-4 / go-02
                    :ARG0 (c24-1 / they)
                    :ARG4 (c24-3 / away)
                    :time (c24-2 / amr-unknown)
                    :mod (c24-5 / just)))

# ::snt I am so tired of all this fake drama
# ::tokens ["I", "am", "so", "tired", "of", "all", "this", "fake", "drama"]
# ::lemmas ["i", "be", "so", "tired", "of", "all", "this", "fake", "drama"]
(c25-2 / tire-01
       :ARG0 (c25-5 / drama
                    :ARG1-of (c25-0 / fake-02)
                    :mod (c25-6 / this)
                    :mod (c25-4 / all))
       :ARG1 (c25-3 / i)
       :degree (c25-1 / so))

# ::snt Did the documentary on Netflix not imply that he knew and destroyed evidence in the O.J. case
# ::tokens ["Did", "the", "documentary", "on", "Netflix", "not", "imply", "that", "he", "knew", "and", "destroyed", "evidence", "in", "the", "O.J.", "case"]
# ::lemmas ["do", "the", "documentary", "on", "Netflix", "not", "imply", "that", "he", "know", "and", "destroy", "evidence", "in", "the", "O.J.", "case"]
(c26-11 / imply-01
        :ARG0 (c26-14 / documentary
                      :medium (c26-4 / publication
                                     :name (c26-0 / name
                                                  :op1 "Netflix")))
        :ARG1 (c26-12 / and
                      :op1 (c26-5 / know-01
                                  :ARG0 (c26-3 / he)
                                  :ARG1 (c26-10 / thing
                                                :ARG0-of (c26-2 / evidence-01
                                                                :ARG1 (c26-6 / case-03
                                                                             :ARG2 (c26-1 / person
                                                                                          :ARG0-of (c26-9 / have-org-role-91
                                                                                                          :ARG2 (c26-7 / witness-01)))))))
                      :op2 (c26-8 / destroy-01
                                  :ARG0 c26-3
                                  :ARG1 c26-10))
        :polarity (c26-13 / amr-unknown)
        :polarity -)

# ::snt Now we seein real drama
# ::tokens ["Now", "we", "seein", "real", "drama"]
# ::lemmas ["now", "we", "seein", "real", "drama"]
(c27-1 / see-01
       :ARG0 (c27-3 / we)
       :ARG1 (c27-4 / drama
                    :ARG1-of (c27-2 / real-04))
       :time (c27-0 / now))

# ::snt Just PLEASE GO AWAY! Stop spotlighting these people!
# ::tokens ["Just", "PLEASE", "GO", "AWAY", "!", "Stop", "spotlighting", "these", "people", "!"]
# ::lemmas ["just", "please", "GO", "away", "!", "stop", "spotlight", "these", "people", "!"]
(c28-2 / multi-sentence
       :snt1 (c28-8 / go-02
                    :ARG0 (c28-1 / you)
                    :ARG4 (c28-7 / away)
                    :mod (c28-5 / just)
                    :mode imperative
                    :polite +)
       :snt2 (c28-3 / stop-01
                    :ARG0 (c28-9 / you)
                    :ARG1 (c28-0 / spotlight-01
                                 :ARG0 c28-9
                                 :ARG1 (c28-4 / person
                                              :mod (c28-6 / this)))
                    :mode imperative))

# ::snt I can't tell is cait is just trying hard for attention...or if they have a contractural obligation to mention her every season.
# ::tokens ["I", "ca", "n't", "tell", "is", "cait", "is", "just", "trying", "hard", "for", "attention", "...", "or", "if", "they", "have", "a", "contractural", "obligation", "to", "mention", "her", "every", "season", "."]
# ::lemmas ["i", "can", "not", "tell", "be", "cait", "be", "just", "try", "hard", "for", "attention", "...", "or", "if", "they", "have", "a", "contractural", "obligation", "to", "mention", "she", "every", "season", "."]
(c29-10 / possible-01
        :ARG1 (c29-12 / tell-02
                      :ARG0 (c29-13 / i)
                      :ARG1 (c29-0 / or
                                   :op1 (c29-14 / try-01
                                                :ARG0 (c29-4 / person)
                                                :ARG1 (c29-6 / attend-02
                                                             :ARG1 c29-4)
                                                :ARG1-of (c29-9 / hard-02)
                                                :mod (c29-15 / just))
                                   :op2 (c29-1 / obligate-01
                                               :ARG1 (c29-16 / they)
                                               :ARG2 (c29-3 / mention-01
                                                            :ARG0 c29-16
                                                            :ARG1 (c29-5 / she)
                                                            :frequency (c29-7 / rate-entity-91
                                                                              :ARG4 (c29-2 / season
                                                                                           :mod (c29-8 / every))))
                                               :mod (c29-11 / contractural))))
        :polarity -)

# ::snt Jenner is an idiot. Cant stand her. Shes up there with Trump.
# ::tokens ["Jenner", "is", "an", "idiot", ".", "Ca", "nt", "stand", "her", ".", "She", "s", "up", "there", "with", "Trump", "."]
# ::lemmas ["Jenner", "be", "an", "idiot", ".", "can", "not", "stand", "she", ".", "she", "s", "up", "there", "with", "Trump", "."]
(c30-3 / multi-sentence
       :snt1 (c30-10 / idiot
                     :domain (c30-7 / person
                                    :name (c30-1 / name
                                                 :op1 "Jenner")))
       :snt2 (c30-2 / possible-01
                    :ARG1 (c30-4 / stand-03
                                 :ARG0 (c30-5 / i)
                                 :ARG1 (c30-0 / she))
                    :polarity -)
       :snt3 (c30-13 / sit-01
                     :ARG1 (c30-6 / he)
                     :ARG2 (c30-11 / there
                                   :mod (c30-12 / up))
                     :accompanier (c30-9 / person
                                         :name (c30-8 / name
                                                      :op1 "Trump"))))

# ::snt None of these people have class
# ::tokens ["None", "of", "these", "people", "have", "class"]
# ::lemmas ["none", "of", "these", "people", "have", "class"]
(c31-1 / have-03
       :ARG0 (c31-2 / person
                    :mod (c31-3 / this))
       :ARG1 (c31-0 / class)
       :polarity -)

# ::snt So sad
# ::tokens ["So", "sad"]
# ::lemmas ["so", "sad"]
(c32-1 / sad-02
       :degree (c32-0 / so))

# ::snt The best part of this article? "If you talk about my dad, I will cut you". True Kardashian class
# ::tokens ["The", "best", "part", "of", "this", "article", "?", "\"", "If", "you", "talk", "about", "my", "dad", ",", "I", "will", "cut", "you", "\"", ".", "True", "Kardashian", "class"]
# ::lemmas ["the", "good", "part", "of", "this", "article", "?", "\"", "if", "you", "talk", "about", "my", "dad", ",", "i", "will", "cut", "you", "\"", ".", "true", "Kardashian", "class"]
(c33-1 / multi-sentence
       :snt1 (c33-5 / have-degree-91
                    :ARG1 (c33-6 / part
                                 :part-of (c33-4 / article
                                                 :mod (c33-12 / this)))
                    :ARG2 (c33-13 / good-02
                                  :ARG1 c33-6)
                    :ARG3 (c33-7 / most))
       :snt2 (c33-8 / cut-01
                    :ARG0 (c33-11 / i)
                    :ARG1 (c33-0 / you)
                    :condition (c33-16 / talk-01
                                       :ARG0 c33-0
                                       :ARG1 (c33-2 / person
                                                    :ARG0-of (c33-10 / have-rel-role-91
                                                                     :ARG1 c33-11
                                                                     :ARG2 (c33-14 / dad)))))
       :snt3 (c33-15 / class
                     :mod (c33-9 / person
                                 :name (c33-3 / name
                                              :op1 "True"
                                              :op2 "Kardash"))))

# ::snt that man /woman should respect the Kardashians. especially the late Kardashian
# ::tokens ["that", "man", "/woman", "should", "respect", "the", "Kardashians", ".", "especially", "the", "late", "Kardashian"]
# ::lemmas ["that", "man", "/woman", "should", "respect", "the", "Kardashians", ".", "especially", "the", "late", "Kardashian"]
(c34-4 / recommend-01
       :ARG1 (c34-12 / respect-01
                     :ARG0 (c34-2 / slash
                                  :op1 (c34-0 / man)
                                  :op2 (c34-10 / woman)
                                  :mod (c34-11 / that))
                     :ARG1 (c34-5 / and
                                  :op1 (c34-8 / person
                                              :name (c34-1 / name
                                                           :op1 "Kardashian"))
                                  :op2 (c34-3 / person
                                              :name (c34-7 / name
                                                           :op1 "Kardashian")
                                              :ARG1-of (c34-9 / late-03)
                                              :mod (c34-6 / especially)))))
