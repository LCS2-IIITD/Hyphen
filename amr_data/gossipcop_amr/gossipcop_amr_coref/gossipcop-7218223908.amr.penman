# ::snt They divorce!!!!!!
# ::tokens ["They", "divorce", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["they", "divorce", "!", "!", "!", "!", "!", "!"]
(c1-0 / divorce-01
      :ARG0 (c1-1 / they))

# ::snt WHAT IN THE BLUE HELL IS HAPPENING?!
# ::tokens ["WHAT", "IN", "THE", "BLUE", "HELL", "IS", "HAPPENING", "?", "!"]
# ::lemmas ["what", "in", "the", "blue", "hell", "be", "happen", "?", "!"]
(c2-2 / amr-unknown
      :mod (c2-1 / hell
                 :ARG1-of (c2-0 / black-04)))

# ::snt It's not real anymore
# ::tokens ["It", "'s", "not", "real", "anymore"]
# ::lemmas ["it", "be", "not", "real", "anymore"]
(c3-0 / real-04
      :ARG1 (c3-1 / it)
      :time (c3-2 / anymore)
      :polarity -)

# ::snt I no longer believe in love
# ::tokens ["I", "no", "longer", "believe", "in", "love"]
# ::lemmas ["i", "no", "long", "believe", "in", "love"]
(c4-1 / believe-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-2 / love-01)
      :time (c4-0 / no-longer))

# ::snt Ughhhh
# ::tokens ["Ughhhh"]
# ::lemmas ["ughhhh"]
(c5-0 / ugh
      :mode expressive)

# ::snt Ughhhhh love
# ::tokens ["Ughhhhh", "love"]
# ::lemmas ["ughhhhh", "love"]
(c6-1 / love-01
      :mod (c6-0 / ugh
                 :mode expressive))

# ::snt LOVE IS WHAT YOU MAKE IT DUDE! DON'T LET THIS BRING U DOWN ABOUT LOVE
# ::tokens ["LOVE", "IS", "WHAT", "YOU", "MAKE", "IT", "DUDE", "!", "DON'T", "LET", "THIS", "BRING", "U", "DOWN", "ABOUT", "LOVE"]
# ::lemmas ["love", "be", "what", "you", "make", "it", "DUDE", "!", "don't", "let", "this", "bring", "u", "down", "about", "love"]
(c7-1 / multi-sentence
      :snt1 (c7-2 / make-02
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-8 / debate-01
                              :ARG0 c7-0
                              :ARG1 (c7-3 / love-01)
                              :mode imperative))
      :snt2 (c7-9 / let-01
                  :ARG0 (c7-7 / you)
                  :ARG1 (c7-5 / down-01
                              :ARG1 (c7-6 / this)
                              :topic (c7-4 / love-01))
                  :polarity -
                  :mode imperative))

# ::snt I JUST READ THE ARTICLE AT E! But what Kristen Bell said was pretty reassuring. Hopefully they're still happy
# ::tokens ["I", "JUST", "READ", "THE", "ARTICLE", "AT", "E", "!", "But", "what", "Kristen", "Bell", "said", "was", "pretty", "reassuring", ".", "Hopefully", "they", "'re", "still", "happy"]
# ::lemmas ["i", "just", "read", "the", "article", "at", "E", "!", "but", "what", "Kristen", "Bell", "say", "be", "pretty", "reassuring", ".", "hopefully", "they", "be", "still", "happy"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / read-01
                  :ARG0 (c8-12 / i)
                  :ARG1 (c8-13 / article)
                  :medium (c8-7 / publication
                                :name (c8-2 / name
                                            :op1 "E!"))
                  :time (c8-11 / just))
      :snt2 (c8-9 / contrast-01
                  :ARG2 (c8-15 / reassure-01
                               :ARG0 (c8-14 / thing
                                            :ARG1-of (c8-3 / say-01
                                                           :ARG0 (c8-4 / person
                                                                       :name (c8-6 / name
                                                                                   :op1 "Kristen"
                                                                                   :op2 "Bell"))))
                               :degree (c8-16 / pretty)))
      :snt3 (c8-8 / hope-01
                  :ARG1 (c8-10 / happy-01
                               :ARG1 (c8-17 / they)
                               :mod (c8-0 / still))))

# ::snt WHAT HAPPENED?
# ::tokens ["WHAT", "HAPPENED", "?"]
# ::lemmas ["what", "happen", "?"]
(c9-1 / amr-unknown
      :ARG1-of (c9-0 / have-03))

# ::snt After the Agassi-Streisand relationship ended I vowed to never again let these celebrities play games with my emotions!
# ::tokens ["After", "the", "Agassi", "-", "Streisand", "relationship", "ended", "I", "vowed", "to", "never", "again", "let", "these", "celebrities", "play", "games", "with", "my", "emotions", "!"]
# ::lemmas ["after", "the", "Agassi", "-", "Streisand", "relationship", "end", "i", "vow", "to", "never", "again", "let", "these", "celebrity", "play", "game", "with", "my", "emotion", "!"]
(c10-3 / vow-01
       :ARG0 (c10-11 / i)
       :ARG1 (c10-7 / let-01
                    :ARG0 c10-11
                    :ARG1 (c10-6 / play-01
                                 :ARG0 (c10-10 / celebrity
                                               :mod (c10-12 / this))
                                 :ARG1 (c10-13 / game)
                                 :ARG3 (c10-4 / emotion
                                              :poss c10-11))
                    :time (c10-14 / ever)
                    :mod (c10-2 / again)
                    :polarity -)
       :time (c10-15 / after
                     :op1 (c10-8 / end-01
                                 :ARG1 (c10-5 / relation-03
                                              :ARG0 (c10-1 / person
                                                           :name (c10-0 / name
                                                                        :op1 "Agassi"))
                                              :ARG2 (c10-16 / person
                                                            :name (c10-9 / name
                                                                         :op1 "Streisand"))))))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c11-0 / amr-unknown)

# ::snt I said the same!
# ::tokens ["I", "said", "the", "same", "!"]
# ::lemmas ["i", "say", "the", "same", "!"]
(c12-3 / say-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-1 / thing
                    :ARG1-of (c12-0 / same-01)))

# ::snt There Not First, and They Wont be Last. They be Fine
# ::tokens ["There", "Not", "First", ",", "and", "They", "Wo", "nt", "be", "Last", ".", "They", "be", "Fine"]
# ::lemmas ["there", "not", "First", ",", "and", "they", "will", "not", "be", "last", ".", "they", "be", "fine"]
(c13-3 / multi-sentence
       :snt1 (c13-4 / and
                    :op1 (c13-1 / ordinal-entity
                                :domain (c13-5 / they)
                                :polarity -
                                :value 1
                                :polarity -)
                    :op2 (c13-0 / ordinal-entity
                                :domain c13-5
                                :value "-1"
                                :polarity -))
       :snt2 (c13-2 / fine-04
                    :ARG1 (c13-6 / they)))

# ::snt Like it's sad, but also a celebrity couple ending things after a while isn't a reason for me to stop believing in love, ya feel?
# ::tokens ["Like", "it", "'s", "sad", ",", "but", "also", "a", "celebrity", "couple", "ending", "things", "after", "a", "while", "is", "n't", "a", "reason", "for", "me", "to", "stop", "believing", "in", "love", ",", "ya", "feel", "?"]
# ::lemmas ["like", "it", "be", "sad", ",", "but", "also", "a", "celebrity", "couple", "end", "thing", "after", "a", "while", "be", "not", "a", "reason", "for", "i", "to", "stop", "believe", "in", "love", ",", "ya", "feel", "?"]
(c14-14 / feel-01
        :ARG0 (c14-5 / you)
        :ARG1 (c14-15 / reason
                      :domain (c14-16 / end-01
                                      :ARG0 (c14-13 / couple
                                                    :mod (c14-11 / celebrity))
                                      :ARG1 (c14-10 / thing)
                                      :time (c14-9 / after
                                                   :op1 (c14-17 / while)))
                      :mod (c14-8 / also)
                      :ARG0-of (c14-2 / cause-01
                                      :ARG1 (c14-0 / stop-01
                                                   :ARG0 (c14-18 / i)
                                                   :ARG1 (c14-12 / believe-01
                                                                 :ARG0 c14-18
                                                                 :ARG1 (c14-1 / love-01))))
                      :polarity -)
        :polarity (c14-7 / amr-unknown)
        :ARG1-of (c14-3 / resemble-01
                        :ARG2 (c14-4 / sad-02
                                     :ARG1 (c14-6 / it))))

# ::snt Wtf happened?!
# ::tokens ["Wtf", "happened", "?", "!"]
# ::lemmas ["Wtf", "happen", "?", "!"]
(c15-1 / amr-unknown
       :mod (c15-0 / fuck
                   :mode expressive))

# ::snt Tit peu...
# ::tokens ["Tit", "peu", "..."]
# ::lemmas ["Tit", "peu", "..."]
(c16-0 / peu
       :mode expressive)

# ::snt On est trop investies...
# ::tokens ["On", "est", "trop", "investies", "..."]
# ::lemmas ["on", "e", "trop", "investie", "..."]
(c17-0 / be-located-at-91
       :ARG2 (c17-1 / investies))

# ::snt SAME
# ::tokens ["SAME"]
# ::lemmas ["same"]
(c21-0 / same-01)

# ::snt Agreed. Fake news is everywhere about everyone. Because the negatives are always easier to believe than anything positive.
# ::tokens ["Agreed", ".", "Fake", "news", "is", "everywhere", "about", "everyone", ".", "Because", "the", "negatives", "are", "always", "easier", "to", "believe", "than", "anything", "positive", "."]
# ::lemmas ["agree", ".", "fake", "news", "be", "everywhere", "about", "everyone", ".", "because", "the", "negative", "be", "always", "easy", "to", "believe", "than", "anything", "positive", "."]
(c22-3 / multi-sentence
       :snt1 (c22-14 / agree-01
                     :ARG1 (c22-4 / event))
       :snt2 (c22-2 / news
                    :ARG1-of (c22-0 / fake-02)
                    :location (c22-15 / everywhere
                                      :topic (c22-7 / everyone)))
       :snt3 (c22-10 / cause-01
                     :ARG0 (c22-12 / easy-05
                                   :ARG1 (c22-1 / believe-01
                                                :ARG1 (c22-5 / negative-03))
                                   :time (c22-13 / always)
                                   :ARG2-of (c22-6 / have-degree-91
                                                   :ARG1 c22-1
                                                   :ARG3 (c22-8 / more)
                                                   :ARG4 (c22-11 / anything
                                                                 :mod (c22-9 / positive))))))

# ::snt This type of false news does not need to be spread about Chris , he needs some privacy.
# ::tokens ["This", "type", "of", "false", "news", "does", "not", "need", "to", "be", "spread", "about", "Chris", ",", "he", "needs", "some", "privacy", "."]
# ::lemmas ["this", "type", "of", "false", "news", "do", "not", "need", "to", "be", "spread", "about", "Chris", ",", "he", "need", "some", "privacy", "."]
(c23-2 / need-01
       :ARG1 (c23-4 / spread-03
                    :ARG1 (c23-5 / news
                                 :mod (c23-0 / false)
                                 :mod (c23-10 / type
                                              :mod (c23-11 / this)))
                    :topic (c23-6 / person
                                  :name (c23-7 / name
                                               :op1 "Chris")))
       :ARG1-of (c23-8 / cause-01
                       :ARG0 (c23-9 / need-01
                                    :ARG0 c23-6
                                    :ARG1 (c23-3 / private-02
                                                 :ARG1 c23-6
                                                 :quant (c23-1 / some))))
       :polarity -)

# ::snt U think that's mean. Security took the beach ball!!!
# ::tokens ["U", "think", "that", "'s", "mean", ".", "Security", "took", "the", "beach", "ball", "!", "!", "!"]
# ::lemmas ["u", "think", "that", "be", "mean", ".", "security", "take", "the", "beach", "ball", "!", "!", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-6 / think-01
                    :ARG0 (c24-1 / you)
                    :ARG1 (c24-4 / mean-04
                                 :ARG0 (c24-8 / that)))
       :snt2 (c24-7 / take-01
                    :ARG0 (c24-3 / security)
                    :ARG1 (c24-0 / ball
                                 :mod (c24-5 / beach))))

# ::snt It's cancelled
# ::tokens ["It", "'s", "cancelled"]
# ::lemmas ["it", "be", "cancel"]
(c25-0 / cancel-01
       :ARG1 (c25-1 / it))

# ::snt ikr, love isn't real
# ::tokens ["ikr", ",", "love", "is", "n't", "real"]
# ::lemmas ["ikr", ",", "love", "be", "not", "real"]
(c26-1 / say-01
       :ARG0 (c26-5 / i)
       :ARG1 (c26-2 / real-04
                    :ARG1 (c26-4 / love)
                    :polarity -)
       :ARG2 (c26-3 / person
                    :name (c26-0 / name
                                 :op1 "ikr")))

# ::snt WAT
# ::tokens ["WAT"]
# ::lemmas ["WAT"]
(c27-0 / water)

# ::snt I KNOW
# ::tokens ["I", "KNOW"]
# ::lemmas ["i", "KNOW"]
(c28-0 / know-01
       :ARG0 (c28-1 / i))

# ::snt I legit cried
# ::tokens ["I", "legit", "cried"]
# ::lemmas ["i", "legit", "cry"]
(c29-0 / cry-02
       :ARG0 (c29-2 / i)
       :ARG1-of (c29-1 / legit-02))

# ::snt I woke up to this news, and just like happy fucking Monday
# ::tokens ["I", "woke", "up", "to", "this", "news", ",", "and", "just", "like", "happy", "fucking", "Monday"]
# ::lemmas ["i", "wake", "up", "to", "this", "news", ",", "and", "just", "like", "happy", "fucking", "Monday"]
(c30-3 / and
       :op1 (c30-6 / wake-up-02
                   :ARG1 (c30-8 / i)
                   :ARG3 (c30-1 / news
                                :mod (c30-9 / this)))
       :op2 (c30-4 / resemble-01
                   :ARG1 c30-6
                   :ARG2 (c30-5 / happy-01
                                :ARG1 c30-8
                                :time (c30-10 / date-entity
                                              :weekday (c30-2 / monday)
                                              :mod (c30-0 / fucking
                                                          :mode expressive)))
                   :mod (c30-7 / just)))

# ::snt WHAT
# ::tokens ["WHAT"]
# ::lemmas ["what"]
(c31-0 / amr-unknown)

# ::snt a friend who has an insider (lol) said na it's bec he became mega christian and she can't get on board or he cannot get on board that she can't. one of those. AND DOESN'T THAT SUCK?!
# ::tokens ["a", "friend", "who", "has", "an", "insider", "(", "lol", ")", "said", "na", "it", "'s", "bec", "he", "became", "mega", "christian", "and", "she", "ca", "n't", "get", "on", "board", "or", "he", "can", "not", "get", "on", "board", "that", "she", "ca", "n't", ".", "one", "of", "those", ".", "AND", "DOESN'T", "THAT", "SUCK", "?", "!"]
# ::lemmas ["a", "friend", "who", "have", "an", "insider", "(", "lol", ")", "say", "na", "it", "be", "bec", "he", "become", "mega", "christian", "and", "she", "can", "not", "get", "on", "board", "or", "he", "can", "not", "get", "on", "board", "that", "she", "can", "not", ".", "one", "of", "those", ".", "and", "doesn't", "that", "SUCK", "?", "!"]
(c32-19 / multi-sentence
        :snt1 (c32-0 / say-01
                     :ARG0 (c32-25 / person
                                   :ARG0-of (c32-9 / have-rel-role-91
                                                   :ARG2 (c32-22 / friend))
                                   :ARG0-of (c32-26 / have-03
                                                    :ARG1 (c32-27 / insider
                                                                  :ARG2-of (c32-2 / laugh-01
                                                                                  :manner (c32-16 / loud)
                                                                                  :mode expressive))))
                     :ARG1 (c32-21 / cause-01
                                   :ARG0 (c32-13 / and
                                                 :op1 (c32-18 / become-01
                                                              :ARG1 (c32-8 / he)
                                                              :ARG2 (c32-20 / person
                                                                            :mod (c32-24 / religious-group
                                                                                         :name (c32-23 / name
                                                                                                       :op1 "Christian")
                                                                                         :degree (c32-10 / mega))))
                                                 :op2 (c32-6 / or
                                                             :op1 (c32-4 / possible-01
                                                                         :ARG1 (c32-1 / board-01
                                                                                      :ARG0 c32-20)
                                                                         :polarity -)
                                                             :op2 (c32-3 / possible-01
                                                                         :ARG1 (c32-5 / board-01
                                                                                      :ARG0 c32-8)
                                                                         :polarity -)))
                                   :ARG1 (c32-12 / possible-01
                                                 :ARG1 (c32-14 / get-05
                                                               :ARG1 c32-8
                                                               :ARG2 c32-5)
                                                 :polarity -)))
        :snt2 (c32-15 / and
                      :op2 (c32-7 / suck-03
                                  :ARG0 (c32-17 / that)
                                  :polarity (c32-11 / amr-unknown))))

# ::snt And John and Chrissy, prayers they all stay our shining light!!
# ::tokens ["And", "John", "and", "Chrissy", ",", "prayers", "they", "all", "stay", "our", "shining", "light", "!", "!"]
# ::lemmas ["and", "John", "and", "Chrissy", ",", "prayer", "you", "all", "stay", "our", "shine", "light", "!", "!"]
(c33-10 / and
        :op2 (c33-3 / stay-01
                    :ARG1 (c33-9 / and
                                 :op1 (c33-5 / person
                                             :name (c33-1 / name
                                                          :op1 "John"))
                                 :op2 (c33-2 / person
                                             :name (c33-4 / name
                                                          :op1 "Chrissy"))
                                 :mod (c33-8 / all))
                    :ARG3 (c33-6 / light
                                 :ARG1-of (c33-0 / shine-01)
                                 :poss (c33-7 / we))
                    :ARG2-of (c33-11 / pray-01
                                     :ARG0 c33-7)))

# ::snt We still have Kristen and Dax and Ryan and Blake there is still light in all this darkness
# ::tokens ["We", "still", "have", "Kristen", "and", "Dax", "and", "Ryan", "and", "Blake", "there", "is", "still", "light", "in", "all", "this", "darkness"]
# ::lemmas ["we", "still", "have", "Kristen", "and", "Dax", "and", "Ryan", "and", "Blake", "there", "be", "still", "light", "in", "all", "this", "darkness"]
(c34-9 / and
       :op1 (c34-5 / have-03
                   :ARG0 (c34-17 / we)
                   :ARG1 (c34-7 / and
                                :op1 (c34-15 / person
                                             :name (c34-14 / name
                                                           :op1 "Kristen"))
                                :op2 (c34-11 / person
                                             :name (c34-12 / name
                                                           :op1 "Dax"))
                                :op3 (c34-3 / person
                                            :name (c34-16 / name
                                                          :op1 "Ryan"))
                                :op4 (c34-2 / person
                                            :name (c34-13 / name
                                                          :op1 "Blake")))
                   :mod (c34-0 / still))
       :op2 (c34-10 / be-located-at-91
                    :ARG1 (c34-1 / light)
                    :ARG2 (c34-18 / darkness
                                  :mod (c34-8 / this)
                                  :mod (c34-6 / all))
                    :mod (c34-4 / still)))

# ::snt Anna Faris is perfect. That is true.
# ::tokens ["Anna", "Faris", "is", "perfect", ".", "That", "is", "true", "."]
# ::lemmas ["Anna", "Faris", "be", "perfect", ".", "that", "be", "true", "."]
(c35-1 / multi-sentence
       :snt1 (c35-3 / perfect-02
                    :ARG1 (c35-2 / person
                                 :name (c35-0 / name
                                              :op1 "Anna"
                                              :op2 "Faris")))
       :snt2 (c35-4 / true-01
                    :ARG1 (c35-5 / that)))

# ::snt They were PERFECT together.
# ::tokens ["They", "were", "PERFECT", "together", "."]
# ::lemmas ["they", "be", "perfect", "together", "."]
(c36-0 / perfect-02
       :ARG1 (c36-2 / they)
       :mod (c36-1 / together))

# ::snt Bummer, I never even heard about it. Or the beginning of it.Okay, I must admit I follow less and less of that stuff every year.
# ::tokens ["Bummer", ",", "I", "never", "even", "heard", "about", "it", ".", "Or", "the", "beginning", "of", "it", ".", "Okay", ",", "I", "must", "admit", "I", "follow", "less", "and", "less", "of", "that", "stuff", "every", "year", "."]
# ::lemmas ["Bummer", ",", "i", "never", "even", "hear", "about", "it", ".", "or", "the", "beginning", "of", "it", ".", "okay", ",", "i", "must", "admit", "i", "follow", "less", "and", "less", "of", "that", "stuff", "every", "year", "."]
(c37-13 / multi-sentence
        :snt1 (c37-6 / hear-01
                     :ARG0 (c37-19 / i)
                     :ARG1 (c37-5 / it)
                     :time (c37-18 / ever)
                     :mod (c37-9 / even)
                     :polarity -)
        :snt2 (c37-3 / or
                     :op2 (c37-12 / begin-01
                                  :ARG1 (c37-10 / it)))
        :snt3 (c37-0 / infer-01
                     :ARG1 (c37-11 / obligate-01
                                   :ARG1 (c37-15 / i)
                                   :ARG2 (c37-8 / admit-01
                                                :ARG0 c37-15
                                                :ARG1 (c37-16 / follow-02
                                                              :ARG0 c37-15
                                                              :ARG1 (c37-1 / stuff
                                                                           :mod (c37-7 / that)
                                                                           :ARG1-of (c37-20 / decrease-01))
                                                              :frequency (c37-17 / rate-entity-91
                                                                                 :ARG2 (c37-14 / temporal-quantity
                                                                                               :unit (c37-4 / year)
                                                                                               :quant 1)))))
                     :mod (c37-21 / okay))
        :mod (c37-2 / bummer))

# ::snt Worst. News. Ever.
# ::tokens ["Worst", ".", "News", ".", "Ever", "."]
# ::lemmas ["worst", ".", "news", ".", "ever", "."]
(c38-2 / news
       :ARG1-of (c38-4 / have-degree-91
                       :ARG2 (c38-0 / bad-07
                                    :ARG1 c38-2)
                       :ARG3 (c38-1 / most))
       :time (c38-3 / ever))

# ::snt I AM BROKEN
# ::tokens ["I", "AM", "BROKEN"]
# ::lemmas ["i", "be", "BROKEN"]
(c39-0 / bring-01
       :ARG1 (c39-1 / i))

# ::snt no
# ::tokens ["no"]
# ::lemmas ["no"]
(c41-0 / no)

# ::snt Can't fool me
# ::tokens ["Ca", "n't", "fool", "me"]
# ::lemmas ["can", "not", "fool", "i"]
(c42-1 / possible-01
       :ARG1 (c42-0 / fool-01
                    :ARG1 (c42-2 / i))
       :polarity -)

# ::snt Wow you have a great life!
# ::tokens ["Wow", "you", "have", "a", "great", "life", "!"]
# ::lemmas ["wow", "you", "have", "a", "great", "life", "!"]
(c43-1 / have-03
       :ARG0 (c43-0 / you)
       :ARG1 (c43-2 / life
                    :mod (c43-4 / great))
       :mod (c43-3 / wow
                   :mode expressive)
       :mode expressive)

# ::snt It's a close tie with Male Rompers being a thing now
# ::tokens ["It", "'s", "a", "close", "tie", "with", "Male", "Rompers", "being", "a", "thing", "now"]
# ::lemmas ["it", "be", "a", "close", "tie", "with", "Male", "Rompers", "be", "a", "thing", "now"]
(c44-4 / tie-01
       :ARG1 (c44-5 / it)
       :ARG3 (c44-6 / thing
                    :domain (c44-2 / romp-01
                                   :ARG0 (c44-0 / male)))
       :ARG1-of (c44-3 / close-10)
       :time (c44-1 / now))

# ::snt Is that Kesha?
# ::tokens ["Is", "that", "Kesha", "?"]
# ::lemmas ["be", "that", "Kesha", "?"]
(c45-2 / person
       :polarity (c45-3 / amr-unknown)
       :name (c45-0 / name
                    :op1 "Kesha")
       :domain (c45-1 / that))

# ::snt i am DYINGGG
# ::tokens ["i", "am", "DYINGGG"]
# ::lemmas ["i", "be", "DYINGGG"]
(c46-0 / dare-01
       :ARG1 (c46-1 / i))

# ::snt My completely unbothered by Chris Pratt's divorce while Micah's life is now in shambles
# ::tokens ["My", "completely", "unbothered", "by", "Chris", "Pratt", "'s", "divorce", "while", "Micah", "'s", "life", "is", "now", "in", "shambles"]
# ::lemmas ["my", "completely", "unbothered", "by", "Chris", "Pratt", "'s", "divorce", "while", "Micah", "'s", "life", "be", "now", "in", "shamble"]
(c47-8 / contrast-01
       :ARG1 (c47-0 / botch-01
                    :ARG0 (c47-10 / divorce-01
                                  :ARG0 (c47-5 / person
                                               :name (c47-1 / name
                                                            :op1 "Chris"
                                                            :op2 "Pratt")))
                    :ARG1 (c47-9 / i)
                    :ARG1-of (c47-11 / complete-02)
                    :polarity -)
       :ARG2 (c47-3 / shambles
                    :domain (c47-6 / life
                                   :poss (c47-2 / person
                                                :name (c47-4 / name
                                                             :op1 "Micah")))
                    :time (c47-7 / now)))

# ::snt OMFG THE REPLIES HAVE ME ROLLING.
# ::tokens ["OMFG", "THE", "REPLIES", "HAVE", "ME", "ROLLING", "."]
# ::lemmas ["OMFG", "the", "reply", "have", "ME", "rolling", "."]
(c48-0 / roll-01
       :ARG0 (c48-2 / person
                    :ARG0-of (c48-1 / REPLY-01))
       :mod (c48-3 / oh-my-god
                   :mode expressive)
       :mode expressive)

# ::snt yeeeees thanks for understanding me joy! lol
# ::tokens ["yeeeees", "thanks", "for", "understanding", "me", "joy", "!", "lol"]
# ::lemmas ["yeeeee", "thank", "for", "understand", "i", "joy", "!", "lol"]
(c49-4 / thank-01
       :ARG0 (c49-3 / i)
       :ARG1 (c49-0 / you)
       :ARG2 (c49-7 / understand-01
                    :ARG0 c49-0
                    :ARG1 (c49-2 / joy))
       :mod (c49-5 / yeee
                   :mode expressive)
       :ARG2-of (c49-1 / laugh-01
                       :ARG0 c49-3
                       :manner (c49-6 / loud)
                       :mode expressive))

# ::snt ehh i don't let this stuff get to me so \_()_/ i'm just sitting here like
# ::tokens ["ehh", "i", "do", "n't", "let", "this", "stuff", "get", "to", "me", "so", "\\_()_/", "i", "'m", "just", "sitting", "here", "like"]
# ::lemmas ["ehh", "i", "do", "not", "let", "this", "stuff", "get", "to", "i", "so", "\\_()_/", "i", "be", "just", "sit", "here", "like"]
(c50-5 / let-01
       :ARG0 (c50-8 / i)
       :ARG1 (c50-10 / get-05
                     :ARG1 (c50-1 / stuff
                                  :mod (c50-9 / this))
                     :ARG2 c50-8)
       :ARG0-of (c50-6 / cause-01
                       :ARG1 (c50-0 / sit-01
                                    :ARG1 c50-8
                                    :ARG2 (c50-4 / here)
                                    :mod (c50-7 / just)
                                    :ARG1-of (c50-2 / resemble-01)))
       :mod (c50-3 / eh
                   :mode expressive)
       :polarity -)
