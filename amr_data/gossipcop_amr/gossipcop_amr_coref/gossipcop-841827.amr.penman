# ::snt RIP Don
# ::tokens ["RIP", "Don"]
# ::lemmas ["RIP", "Don"]
(c1-0 / rest-01
      :ARG1 (c1-2 / person
                  :name (c1-1 / name
                              :op1 "Don"))
      :manner (c1-3 / peace))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c2-0 / rest-01
      :ARG1 (c2-1 / you)
      :manner (c2-2 / peace))

# ::snt Wow! Mr Warmth will be missed. He offended everyone equally. By the way Stephen you're a "hockey puck"
# ::tokens ["Wow", "!", "Mr", "Warmth", "will", "be", "missed", ".", "He", "offended", "everyone", "equally", ".", "By", "the", "way", "Stephen", "you", "'re", "a", "\"", "hockey", "puck", "\""]
# ::lemmas ["wow", "!", "Mr", "Warmth", "will", "be", "miss", ".", "he", "offend", "everyone", "equally", ".", "by", "the", "way", "Stephen", "you", "be", "a", "\"", "hockey", "puck", "\""]
(c3-3 / multi-sentence
      :snt1 (c3-5 / miss-01
                  :ARG1 (c3-6 / person
                              :name (c3-2 / name
                                          :op1 "Mr"
                                          :op2 "Warmth"))
                  :mod (c3-9 / wow
                             :mode expressive))
      :snt2 (c3-0 / offend-01
                  :ARG0 (c3-7 / he)
                  :ARG1 (c3-4 / everyone)
                  :ARG1-of (c3-11 / equal-01))
      :snt3 (c3-10 / hockey-poss
                   :name (c3-8 / name
                               :op1 "Stephen"))
      :mod (c3-1 / by-the-way))

# ::snt RiP
# ::tokens ["RiP"]
# ::lemmas ["RiP"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "RiP"))

# ::snt Crapgame. We'll miss you
# ::tokens ["Crapgame", ".", "We", "'ll", "miss", "you"]
# ::lemmas ["Crapgame", ".", "we", "'ll", "miss", "you"]
(c6-1 / multi-sentence
      :snt1 (c6-3 / crapgame)
      :snt2 (c6-2 / miss-01
                  :ARG0 (c6-4 / we)
                  :ARG1 (c6-0 / you)))

# ::snt .Thank you for all the laughs Don RicklesRemember your name rhymes with pickles
# ::tokens [".Thank", "you", "for", "all", "the", "laughs", "Don", "RicklesRemember", "your", "name", "rhymes", "with", "pickles"]
# ::lemmas [".thank", "you", "for", "all", "the", "laugh", "Don", "RicklesRemember", "your", "name", "rhyme", "with", "pickle"]
(c7-2 / say-01
      :ARG1 (c7-8 / thank-01
                  :ARG1 (c7-6 / person
                              :name (c7-0 / name
                                          :op1 "Don"
                                          :op2 "Rickles"))
                  :ARG2 (c7-7 / laugh-01
                              :mod (c7-3 / all)))
      :ARG2 c7-6
      :topic (c7-4 / remember-01
                   :ARG0 c7-6
                   :ARG1 (c7-9 / rhyme-01
                               :ARG1 (c7-5 / name
                                           :poss c7-6)
                               :ARG2 (c7-1 / pickle))))

# ::snt .His Humor many have been lost on the politeBut for more he made us smile with delight
# ::tokens [".His", "Humor", "many", "have", "been", "lost", "on", "the", "politeBut", "for", "more", "he", "made", "us", "smile", "with", "delight"]
# ::lemmas [".his", "Humor", "many", "have", "be", "lose", "on", "the", "politebut", "for", "more", "he", "make", "we", "smile", "with", "delight"]
(c8-6 / contrast-01
      :ARG1 (c8-3 / lose-02
                  :ARG1 (c8-2 / Humor
                              :poss (c8-8 / he)
                              :quant (c8-0 / many))
                  :prep-on (c8-4 / polite-01))
      :ARG2 (c8-5 / make-02
                  :ARG0 c8-8
                  :ARG1 (c8-1 / smile-01
                              :ARG0 (c8-7 / we)
                              :ARG2-of (c8-9 / delight-01
                                             :ARG1 c8-7))
                  :mod (c8-10 / more)))

# ::snt .Inside rough insult words we can find funnyAccept the bitter kernel in the sweet honey
# ::tokens [".Inside", "rough", "insult", "words", "we", "can", "find", "funnyAccept", "the", "bitter", "kernel", "in", "the", "sweet", "honey"]
# ::lemmas [".inside", "rough", "insult", "word", "we", "can", "find", "funnyAccept", "the", "bitter", "kernel", "in", "the", "sweet", "honey"]
(c9-4 / accept-01
      :ARG0 (c9-9 / we)
      :ARG1 (c9-11 / thing
                   :ARG1-of (c9-1 / mean-01
                                  :ARG2 (c9-8 / word-01
                                              :ARG1-of (c9-5 / rough-04)
                                              :ARG0-of (c9-10 / insult-01))))
      :ARG1-of (c9-0 / find-01
                     :ARG0 c9-9
                     :ARG1-of (c9-7 / possible-01))
      :location (c9-3 / inside
                      :op1 (c9-6 / honey
                                 :ARG1-of (c9-2 / sweet-04)))
      :mode imperative)

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c10-0 / rest-01
       :ARG1 (c10-1 / you)
       :manner (c10-2 / peace))

# ::snt loved, understood &amp; adored himSome say the greatest era grows dim Lesson?
# ::tokens ["loved", ",", "understood", "&", "amp", ";", "adored", "himSome", "say", "the", "greatest", "era", "grows", "dim", "Lesson", "?"]
# ::lemmas ["love", ",", "understand", "&", "amp", ";", "adore", "himsome", "say", "the", "great", "era", "grow", "dim", "Lesson", "?"]
(c11-1 / multi-sentence
       :snt1 (c11-11 / and
                     :op1 (c11-6 / love-01
                                 :ARG1 (c11-5 / he))
                     :op2 (c11-15 / understand-01
                                  :ARG1 c11-5)
                     :op3 (c11-10 / adore-01
                                  :ARG1 c11-5))
       :snt2 (c11-2 / say-01
                    :ARG0 (c11-0 / some)
                    :ARG1 (c11-12 / grow-02
                                  :ARG1 (c11-4 / era
                                               :ARG1-of (c11-9 / have-degree-91
                                                               :ARG2 (c11-13 / great)
                                                               :ARG3 (c11-7 / most)))
                                  :ARG2 (c11-3 / dim-01
                                               :ARG1 (c11-14 / lesson)))
                    :polarity (c11-8 / amr-unknown)))

# ::snt - He had a place held by few, many only oneIn many hearts in spite of his bitter stuns
# ::tokens ["-", "He", "had", "a", "place", "held", "by", "few", ",", "many", "only", "oneIn", "many", "hearts", "in", "spite", "of", "his", "bitter", "stuns"]
# ::lemmas ["-", "he", "have", "a", "place", "hold", "by", "few", ",", "many", "only", "onein", "many", "heart", "in", "spite", "of", "his", "bitter", "stun"]
(c12-7 / have-03
       :ARG0 (c12-10 / he
                     :part (c12-6 / heart
                                  :quant (c12-4 / many)))
       :ARG1 (c12-8 / place
                    :ARG1-of (c12-12 / hold-01
                                     :ARG0 (c12-11 / and
                                                   :op1 (c12-0 / few)
                                                   :op2 (c12-1 / one
                                                               :mod (c12-2 / only)
                                                               :quant (c12-9 / many)))))
       :concession (c12-5 / stun-01
                          :ARG0 c12-10
                          :mod (c12-3 / bitter)))

# ::snt Don the Grouch RicklesGruff &amp; brashly tickled withWords to arouse indignation &amp; ireHis intent was beauty of truth in satire
# ::tokens ["Don", "the", "Grouch", "RicklesGruff", "&", "amp", ";", "brashly", "tickled", "withWords", "to", "arouse", "indignation", "&", "amp", ";", "ireHis", "intent", "was", "beauty", "of", "truth", "in", "satire"]
# ::lemmas ["Don", "the", "Grouch", "RicklesGruff", "&", "amp", ";", "brashly", "tickle", "withword", "to", "arouse", "indignation", "&", "amp", ";", "ireHis", "intent", "be", "beauty", "of", "truth", "in", "satire"]
(c13-11 / and
        :op1 (c13-6 / person
                    :name (c13-1 / name
                                 :op1 "Don"
                                 :op2 "the"
                                 :op3 "Grouch"
                                 :op4 "RicklesGruff")
                    :op5 (c13-2 / person
                                :name (c13-5 / name
                                             :op1 "amp"))
                    :ARG1-of (c13-9 / tickle-01
                                    :ARG2 (c13-8 / word)
                                    :purpose (c13-10 / arouse-01
                                                     :ARG0 c13-8
                                                     :ARG1 (c13-12 / indignation))
                                    :manner (c13-0 / brash)))
        :op2 (c13-4 / ire)
        :op3 (c13-13 / intend-01
                     :ARG0 c13-6
                     :ARG1 (c13-7 / beautiful-02
                                  :ARG1 (c13-14 / truth)
                                  :location (c13-3 / satire))))

# ::snt may his soul rest in peace
# ::tokens ["may", "his", "soul", "rest", "in", "peace"]
# ::lemmas ["may", "his", "soul", "rest", "in", "peace"]
(c14-4 / wish-01
       :ARG1 (c14-1 / rest-01
                    :ARG1 (c14-0 / soul
                                 :part-of (c14-2 / he))
                    :manner (c14-3 / peace)))

# ::snt God rest his soulbrought much laughter over the years-comics r not like they use to be...everythings changing
# ::tokens ["God", "rest", "his", "soulbrought", "much", "laughter", "over", "the", "years", "-", "comics", "r", "not", "like", "they", "use", "to", "be", "...", "everythings", "changing"]
# ::lemmas ["God", "rest", "his", "soulbrought", "much", "laughter", "over", "the", "years", "-", "comic_strip", "r", "not", "like", "they", "use", "to", "be", "...", "everything", "change"]
(c15-5 / rest-01
       :ARG0 (c15-7 / person
                    :name (c15-2 / name
                                 :op1 "God"))
       :ARG1 (c15-4 / soulbrought-01
                    :ARG0 c15-7
                    :ARG1 (c15-8 / laugh-01
                                 :ARG0 c15-7
                                 :quant (c15-3 / much))
                    :time (c15-0 / over
                                 :op1 (c15-6 / multiple
                                             :op1 (c15-10 / temporal-quantity
                                                          :unit (c15-1 / year)
                                                          :quant 1)))
                    :example (c15-12 / resemble-01
                                     :ARG1 (c15-9 / comic
                                                  :ARG2-of c15-12)
                                     :time (c15-13 / use-03)
                                     :polarity -)
                    :example (c15-14 / change-01
                                     :ARG1 (c15-11 / thing))))

# ::snt you ever drawn Don?
# ::tokens ["you", "ever", "drawn", "Don", "?"]
# ::lemmas ["you", "ever", "draw", "Don", "?"]
(c16-1 / say-01
       :ARG1 (c16-5 / draw-02
                    :ARG0 (c16-3 / person
                                 :name (c16-0 / name
                                              :op1 "Don"))
                    :time (c16-2 / ever)
                    :polarity (c16-4 / amr-unknown))
       :ARG2 c16-3)

# ::snt Don Rickles, legendary insult comic, dead at
# ::tokens ["Don", "Rickles", ",", "legendary", "insult", "comic", ",", "dead", "at"]
# ::lemmas ["Don", "Rickles", ",", "legendary", "insult", "comic", ",", "dead", "at"]
(c17-5 / die-01
       :ARG1 (c17-1 / person
                    :name (c17-0 / name
                                 :op1 "Don"
                                 :op2 "Rickles")
                    :mod (c17-3 / comic
                                :mod (c17-2 / legendary)
                                :topic (c17-4 / insult-01))))

# ::snt u all only place i have seen this -- wuat a legend
# ::tokens ["u", "all", "only", "place", "i", "have", "seen", "this", "--", "wuat", "a", "legend"]
# ::lemmas ["u", "all", "only", "place", "i", "have", "see", "this", "--", "wuat", "a", "legend"]
(c18-2 / multi-sentence
       :snt1 (c18-4 / place
                    :domain (c18-1 / you
                                   :mod (c18-8 / all))
                    :mod (c18-0 / only)
                    :location-of (c18-3 / see-01
                                        :ARG0 (c18-7 / i)
                                        :ARG1 (c18-6 / this)))
       :snt2 (c18-5 / legend
                    :domain c18-6))

# ::snt Someone check on Pat Cooper
# ::tokens ["Someone", "check", "on", "Pat", "Cooper"]
# ::lemmas ["someone", "check", "on", "Pat", "Cooper"]
(c19-0 / check-01
       :ARG0 (c19-3 / someone)
       :ARG1 (c19-2 / person
                    :name (c19-1 / name
                                 :op1 "Pat"
                                 :op2 "Cooper")))

# ::snt I thought he already was dead.
# ::tokens ["I", "thought", "he", "already", "was", "dead", "."]
# ::lemmas ["i", "think", "he", "already", "be", "dead", "."]
(c20-1 / think-01
       :ARG0 (c20-2 / i)
       :ARG1 (c20-4 / die-01
                    :ARG1 (c20-0 / he)
                    :time (c20-3 / already)))

# ::snt This is going to be a hard one to sink in...
# ::tokens ["This", "is", "going", "to", "be", "a", "hard", "one", "to", "sink", "in", "..."]
# ::lemmas ["this", "be", "go", "to", "be", "a", "hard", "one", "to", "sink", "in", "..."]
(c21-0 / hard-02
       :ARG1 (c21-2 / sink-in-02
                    :ARG1 (c21-1 / this)))

# ::snt Great comedian.A little rough around the edges,but very good.
# ::tokens ["Great", "comedian", ".", "A", "little", "rough", "around", "the", "edges", ",", "but", "very", "good", "."]
# ::lemmas ["great", "comedian", ".", "a", "little", "rough", "around", "the", "edge", ",", "but", "very", "good", "."]
(c22-0 / multi-sentence
       :snt1 (c22-5 / comedian
                    :mod (c22-8 / great))
       :snt2 (c22-1 / rough-04
                    :ARG1 (c22-6 / it)
                    :degree (c22-4 / little)
                    :location (c22-7 / around
                                     :op1 (c22-3 / edge))
                    :concession-of (c22-9 / good-02
                                          :degree (c22-2 / very))))

# ::snt Coming home from the dentist, the flag was at half staff at McAuliffe Middle School in Los Alamitos. It must be for Don Rickles, Mr. Warmth
# ::tokens ["Coming", "home", "from", "the", "dentist", ",", "the", "flag", "was", "at", "half", "staff", "at", "McAuliffe", "Middle", "School", "in", "Los", "Alamitos", ".", "It", "must", "be", "for", "Don", "Rickles", ",", "Mr.", "Warmth"]
# ::lemmas ["come", "home", "from", "the", "dentist", ",", "the", "flag", "be", "at", "half", "staff", "at", "McAuliffe", "Middle", "School", "in", "Los", "Alamitos", ".", "it", "must", "be", "for", "Don", "Rickles", ",", "Mr.", "Warmth"]
(c23-4 / multi-sentence
       :snt1 (c23-2 / be-located-at-91
                    :ARG1 (c23-0 / flag)
                    :ARG2 (c23-6 / staff
                                 :mod (c23-8 / half)
                                 :location (c23-1 / school
                                                  :name (c23-5 / name
                                                               :op1 "McAuliffe"
                                                               :op2 "Middle"
                                                               :op3 "School")
                                                  :location (c23-12 / city
                                                                    :name (c23-9 / name
                                                                                 :op1 "Los"
                                                                                 :op2 "Alamitos"))))
                    :time (c23-16 / come-01
                                  :ARG1 (c23-10 / person
                                                :name (c23-11 / name
                                                              :op1 "Mr."
                                                              :op2 "Warmth"))
                                  :ARG3 (c23-14 / home)))
       :snt2 (c23-3 / obligate-01
                    :ARG1 (c23-7 / person
                                 :name (c23-13 / name
                                               :op1 "Don"
                                               :op2 "Rickles"))
                    :ARG2 (c23-15 / it)))

# ::snt Wow RIP Don Rickles bow your in a better place to make jokes Amen
# ::tokens ["Wow", "RIP", "Don", "Rickles", "bow", "your", "in", "a", "better", "place", "to", "make", "jokes", "Amen"]
# ::lemmas ["wow", "RIP", "Don", "Rickles", "bow", "your", "in", "a", "well", "place", "to", "make", "joke", "amen"]
(c24-2 / multi-sentence
       :snt1 (c24-0 / bow-01
                    :ARG0 (c24-6 / person
                                 :name (c24-3 / name
                                              :op1 "Don"
                                              :op2 "Rickles"))
                    :ARG1 (c24-1 / you)
                    :location (c24-4 / place
                                     :ARG1-of (c24-5 / have-degree-91
                                                     :ARG2 (c24-11 / good-02
                                                                   :ARG1 c24-4)
                                                     :ARG3 (c24-7 / more)))
                    :purpose (c24-9 / joke-01
                                    :ARG0 c24-6)
                    :mod (c24-8 / wow
                                :mode expressive))
       :snt2 (c24-10 / Amen))

# ::snt he was great in Kellys Heroes
# ::tokens ["he", "was", "great", "in", "Kellys", "Heroes"]
# ::lemmas ["he", "be", "great", "in", "Kellys", "Heroes"]
(c25-0 / great
       :domain (c25-1 / he)
       :topic (c25-3 / show
                     :name (c25-2 / name
                                  :op1 "Kellys"
                                  :op2 "Heroes")))

# ::snt how do you think about this pity?
# ::tokens ["how", "do", "you", "think", "about", "this", "pity", "?"]
# ::lemmas ["how", "do", "you", "think", "about", "this", "pity", "?"]
(c26-2 / think-01
       :ARG0 (c26-0 / you)
       :ARG1 (c26-1 / pity
                    :mod (c26-4 / this))
       :ARG2 (c26-3 / amr-unknown))

# ::snt Prayers go out to family members; May he Rest in Peace; Now, let the Jokes in Heaven Begin!!
# ::tokens ["Prayers", "go", "out", "to", "family", "members", ";", "May", "he", "Rest", "in", "Peace", ";", "Now", ",", "let", "the", "Jokes", "in", "Heaven", "Begin", "!", "!"]
# ::lemmas ["prayer", "go", "out", "to", "family", "member", ";", "may", "he", "rest", "in", "Peace", ";", "now", ",", "let", "the", "Jokes", "in", "Heaven", "Begin", "!", "!"]
(c27-3 / multi-sentence
       :snt1 (c27-16 / go-out-17
                     :ARG1 (c27-9 / pray-01)
                     :beneficiary (c27-4 / person
                                         :ARG0-of (c27-8 / have-org-role-91
                                                         :ARG1 (c27-0 / family)
                                                         :ARG2 (c27-10 / member))))
       :snt2 (c27-12 / wish-01
                     :ARG1 (c27-6 / rest-01
                                  :ARG1 (c27-13 / he)
                                  :manner (c27-15 / peace)))
       :snt3 (c27-11 / let-01
                     :ARG0 (c27-2 / you)
                     :ARG1 (c27-1 / begin-01
                                  :ARG1 (c27-14 / joke-01
                                                :location (c27-7 / heaven)))
                     :time (c27-5 / now)
                     :mode imperative))

# ::snt comic.. RIP Don
# ::tokens ["comic", "..", "RIP", "Don"]
# ::lemmas ["comic", "..", "RIP", "Don"]
(c28-0 / multi-sentence
       :snt1 (c28-4 / comic)
       :snt2 (c28-5 / wish-01
                    :ARG1 (c28-2 / rest-01
                                 :ARG1 (c28-3 / person
                                              :name (c28-1 / name
                                                           :op1 "Don")))))

# ::snt Losing all the greats
# ::tokens ["Losing", "all", "the", "greats"]
# ::lemmas ["lose", "all", "the", "great"]
(c29-1 / lose-02
       :ARG1 (c29-0 / great
                    :mod (c29-2 / all)))

# ::snt RIP Don. Thanks for the laughs.
# ::tokens ["RIP", "Don", ".", "Thanks", "for", "the", "laughs", "."]
# ::lemmas ["RIP", "Don", ".", "thank", "for", "the", "laugh", "."]
(c30-1 / multi-sentence
       :snt1 (c30-6 / wish-01
                    :ARG1 (c30-3 / rest-01
                                 :ARG1 (c30-4 / person
                                              :name (c30-0 / name
                                                           :op1 "Don"))
                                 :manner (c30-2 / peace)))
       :snt2 (c30-7 / thank-01
                    :ARG2 (c30-5 / laugh-01)))

# ::snt I loved him
# ::tokens ["I", "loved", "him"]
# ::lemmas ["i", "love", "he"]
(c31-1 / love-01
       :ARG0 (c31-2 / i)
       :ARG1 (c31-0 / he))

# ::snt R.I.P Don-miss those Johnny Carson late nights. I think if U guys were still in action-this entire bad trip with thewould b more laughable
# ::tokens ["R.I.P", "Don", "-", "miss", "those", "Johnny", "Carson", "late", "nights", ".", "I", "think", "if", "U", "guys", "were", "still", "in", "action", "-", "this", "entire", "bad", "trip", "with", "thewould", "b", "more", "laughable"]
# ::lemmas ["R.I.P", "Don", "-", "miss", "those", "Johnny", "Carson", "late", "nights", ".", "i", "think", "if", "U", "guy", "be", "still", "in", "action", "-", "this", "entire", "bad", "trip", "with", "thewould", "b", "more", "laughable"]
(c32-9 / multi-sentence
       :snt1 (c32-2 / miss-02
                    :ARG0 (c32-16 / person
                                  :name (c32-14 / name
                                                :op1 "Don"
                                                :op2 "Don-miss"
                                                :op3 "That"
                                                :op4 "Johnny"
                                                :op5 "Carson"))
                    :time (c32-20 / date-entity
                                  :dayperiod (c32-10 / night)
                                  :mod (c32-1 / late)))
       :snt2 (c32-5 / think-01
                    :ARG0 (c32-18 / i)
                    :ARG1 (c32-7 / laughable-03
                                 :ARG1 (c32-12 / trip-03
                                               :ARG0 (c32-6 / guy
                                                            :mod (c32-11 / country
                                                                         :name (c32-17 / name
                                                                                       :op1 "U.S.")))
                                               :ARG1-of (c32-8 / bad-07)
                                               :mod (c32-15 / entire)
                                               :mod (c32-19 / this))
                                 :condition (c32-4 / act-01
                                                   :ARG0 c32-6
                                                   :mod (c32-0 / still))
                                 :ARG2-of (c32-3 / have-degree-91
                                                 :ARG1 c32-12
                                                 :ARG3 (c32-13 / more)))))

# ::snt SMH R.I.P.
# ::tokens ["SMH", "R.I.P."]
# ::lemmas ["SMH", "R.I.P."]
(c33-1 / person
       :name (c33-0 / name
                    :op1 "SMH"
                    :op2 "R.I.P."))

# ::snt Riddance!
# ::tokens ["Riddance", "!"]
# ::lemmas ["riddance", "!"]
(c34-0 / riddance
       :mode expressive)

# ::snt . One of the best comedians ever. He will be missed.
# ::tokens [".", "One", "of", "the", "best", "comedians", "ever", ".", "He", "will", "be", "missed", "."]
# ::lemmas [".", "One", "of", "the", "good", "comedian", "ever", ".", "he", "will", "be", "miss", "."]
(c35-0 / multi-sentence
       :snt1 (c35-7 / include-91
                    :ARG1 (c35-2 / he)
                    :ARG2 (c35-5 / comedian
                                 :ARG1-of (c35-6 / have-degree-91
                                                 :ARG2 (c35-8 / good-03
                                                              :ARG1 c35-5)
                                                 :ARG3 (c35-3 / most)
                                                 :ARG5 (c35-1 / ever))))
       :snt2 (c35-9 / miss-01
                    :ARG1 (c35-4 / he)))

# ::snt he sang, danced, did patriotic numbers, talked about his mom. It was schmaltzy and filled with love.
# ::tokens ["he", "sang", ",", "danced", ",", "did", "patriotic", "numbers", ",", "talked", "about", "his", "mom", ".", "It", "was", "schmaltzy", "and", "filled", "with", "love", "."]
# ::lemmas ["he", "sing", ",", "dance", ",", "do", "patriotic", "number", ",", "talk", "about", "his", "mom", ".", "it", "be", "schmaltzy", "and", "fill", "with", "love", "."]
(c36-2 / multi-sentence
       :snt1 (c36-14 / and
                     :op1 (c36-4 / sing-01
                                 :ARG0 (c36-6 / he))
                     :op2 (c36-16 / dance-01
                                  :ARG0 c36-6)
                     :op3 (c36-10 / do-02
                                  :ARG0 c36-6
                                  :ARG1 (c36-3 / number
                                               :mod (c36-7 / patriotic)))
                     :op4 (c36-12 / talk-01
                                  :ARG0 c36-6
                                  :ARG1 (c36-5 / person
                                               :ARG0-of (c36-11 / have-rel-role-91
                                                                :ARG1 c36-6
                                                                :ARG2 (c36-8 / mom)))))
       :snt2 (c36-13 / and
                     :op1 (c36-0 / schmaltzy
                                 :domain (c36-15 / it))
                     :op2 (c36-1 / fill-01
                                 :ARG1 c36-15
                                 :ARG2 (c36-9 / love))))

# ::snt Not sure, I've seen so many videos and clips, not sure I've ever gotten it all.
# ::tokens ["Not", "sure", ",", "I", "'ve", "seen", "so", "many", "videos", "and", "clips", ",", "not", "sure", "I", "'ve", "ever", "gotten", "it", "all", "."]
# ::lemmas ["not", "sure", ",", "i", "'ve", "see", "so", "many", "video", "and", "clip", ",", "not", "sure", "i", "'ve", "ever", "get", "it", "all", "."]
(c37-1 / multi-sentence
       :snt1 (c37-3 / sure-02
                    :polarity -)
       :snt2 (c37-13 / and
                     :op1 (c37-0 / see-01
                                 :ARG0 (c37-12 / i)
                                 :ARG1 (c37-14 / and
                                               :op1 (c37-6 / video)
                                               :op2 (c37-10 / clip)
                                               :ARG1-of (c37-8 / have-quant-91
                                                               :ARG2 (c37-9 / many)
                                                               :ARG3 (c37-15 / so))))
                     :op2 (c37-4 / sure-02
                                 :ARG0 c37-12
                                 :ARG1 (c37-2 / get-01
                                              :ARG0 c37-12
                                              :ARG1 (c37-5 / it
                                                           :mod (c37-11 / all))
                                              :time (c37-7 / ever))
                                 :polarity -)))

# ::snt you could never do what he did again. Did you ever get to see the entire act?
# ::tokens ["you", "could", "never", "do", "what", "he", "did", "again", ".", "Did", "you", "ever", "get", "to", "see", "the", "entire", "act", "?"]
# ::lemmas ["you", "could", "never", "do", "what", "he", "do", "again", ".", "do", "you", "ever", "get", "to", "see", "the", "entire", "act", "?"]
(c38-1 / multi-sentence
       :snt1 (c38-7 / possible-01
                    :ARG1 (c38-14 / do-02
                                  :ARG0 (c38-0 / you)
                                  :ARG1 (c38-12 / thing
                                                :ARG1-of (c38-9 / do-02
                                                                :ARG0 (c38-6 / he)
                                                                :mod (c38-4 / again)))
                                  :time (c38-5 / ever))
                    :polarity -)
       :snt2 (c38-13 / get-22
                     :polarity (c38-11 / amr-unknown)
                     :ARG0 (c38-15 / you)
                     :ARG1 (c38-2 / see-01
                                  :ARG0 c38-15
                                  :ARG1 (c38-10 / act-02
                                                :mod (c38-3 / entire)))
                     :time (c38-8 / ever)))

# ::snt His impact and approach to race is under appreciated by the current generation.
# ::tokens ["His", "impact", "and", "approach", "to", "race", "is", "under", "appreciated", "by", "the", "current", "generation", "."]
# ::lemmas ["his", "impact", "and", "approach", "to", "race", "be", "under", "appreciate", "by", "the", "current", "generation", "."]
(c39-0 / appreciate-02
       :ARG0 (c39-7 / generation
                    :time (c39-3 / current))
       :ARG1 (c39-6 / and
                    :op1 (c39-5 / impact-01
                                :ARG0 (c39-2 / he)
                                :ARG1 (c39-1 / race))
                    :op2 (c39-4 / approach-02
                                :ARG0 c39-2
                                :ARG1 c39-1))
       :degree (c39-8 / under))

# ::snt you could have seen him with me you big hockey puck.
# ::tokens ["you", "could", "have", "seen", "him", "with", "me", "you", "big", "hockey", "puck", "."]
# ::lemmas ["you", "could", "have", "see", "he", "with", "i", "you", "big", "hockey", "puck", "."]
(c40-3 / say-01
       :ARG0 (c40-7 / i)
       :ARG1 (c40-5 / possible-01
                    :ARG1 (c40-0 / see-01
                                 :ARG0 (c40-2 / you
                                              :mod (c40-1 / big)
                                              :mod (c40-4 / hockey))
                                 :ARG1 (c40-6 / he
                                              :accompanier c40-7)))
       :ARG2 c40-2)

# ::snt There will never be another. I regret not getting a photo with him when we were in st class together.
# ::tokens ["There", "will", "never", "be", "another", ".", "I", "regret", "not", "getting", "a", "photo", "with", "him", "when", "we", "were", "in", "st", "class", "together", "."]
# ::lemmas ["there", "will", "never", "be", "another", ".", "i", "regret", "not", "get", "a", "photo", "with", "he", "when", "we", "be", "in", "st", "class", "together", "."]
(c41-1 / multi-sentence
       :snt1 (c41-11 / another
                     :time (c41-4 / ever)
                     :polarity -)
       :snt2 (c41-3 / regret-01
                    :ARG0 (c41-10 / i)
                    :ARG1 (c41-12 / get-01
                                  :ARG0 c41-10
                                  :ARG1 (c41-6 / photograph-01
                                               :ARG1 (c41-5 / he))
                                  :time (c41-0 / be-located-at-91
                                               :ARG1 (c41-7 / we)
                                               :ARG2 (c41-8 / class
                                                            :mod (c41-2 / st))
                                               :mod (c41-9 / together))
                                  :polarity -)))

# ::snt A true icon and so funny legendary for sure
# ::tokens ["A", "true", "icon", "and", "so", "funny", "legendary", "for", "sure"]
# ::lemmas ["a", "true", "icon", "and", "so", "funny", "legendary", "for", "sure"]
(c42-3 / and
       :op1 (c42-4 / icon
                   :ARG1-of (c42-5 / true-01))
       :op2 (c42-0 / funny
                   :domain c42-4
                   :degree (c42-2 / so))
       :ARG1-of (c42-1 / sure-02))

# ::snt He was one of the best comedians ever! He will be truly missed by the entertainment world!
# ::tokens ["He", "was", "one", "of", "the", "best", "comedians", "ever", "!", "He", "will", "be", "truly", "missed", "by", "the", "entertainment", "world", "!"]
# ::lemmas ["he", "be", "one", "of", "the", "good", "comedian", "ever", "!", "he", "will", "be", "truly", "miss", "by", "the", "entertainment", "world", "!"]
(c43-0 / multi-sentence
       :snt1 (c43-8 / include-91
                    :ARG1 (c43-2 / he)
                    :ARG2 (c43-5 / comedian
                                 :ARG1-of (c43-7 / have-degree-91
                                                 :ARG2 (c43-10 / good-03
                                                               :ARG1 c43-5)
                                                 :ARG3 (c43-3 / most)
                                                 :ARG5 (c43-1 / ever))))
       :snt2 (c43-12 / miss-01
                     :ARG0 (c43-6 / world
                                  :mod (c43-11 / entertainment))
                     :ARG1 (c43-4 / he)
                     :degree (c43-9 / truly)))

# ::snt Well...I guess you just can't go on forever
# ::tokens ["Well", "...", "I", "guess", "you", "just", "ca", "n't", "go", "on", "forever"]
# ::lemmas ["well", "...", "i", "guess", "you", "just", "can", "not", "go", "on", "forever"]
(c44-7 / guess-01
       :ARG0 (c44-6 / i)
       :ARG1 (c44-2 / possible-01
                    :ARG1 (c44-5 / go-on-15
                                 :ARG1 (c44-1 / you)
                                 :duration (c44-0 / forever))
                    :mod (c44-4 / just)
                    :polarity -)
       :mod (c44-3 / well))

# ::snt good point
# ::tokens ["good", "point"]
# ::lemmas ["good", "point"]
(c45-1 / point-04
       :ARG1-of (c45-0 / good-02))

# ::snt He used to insult Sinatra all the time, God isn't nearly as scary
# ::tokens ["He", "used", "to", "insult", "Sinatra", "all", "the", "time", ",", "God", "is", "n't", "nearly", "as", "scary"]
# ::lemmas ["he", "use", "to", "insult", "Sinatra", "all", "the", "time", ",", "God", "be", "not", "nearly", "as", "scary"]
(c46-9 / and
       :op1 (c46-8 / insult-01
                   :ARG0 (c46-3 / he)
                   :ARG1 (c46-4 / person
                                :name (c46-0 / name
                                             :op1 "Sinatra"))
                   :time (c46-11 / use-03)
                   :frequency (c46-7 / time
                                     :mod (c46-10 / all)))
       :op2 (c46-2 / scary-03
                   :ARG0 (c46-1 / person
                                :name (c46-5 / name
                                             :op1 "God"))
                   :degree (c46-6 / near)
                   :polarity -))

# ::snt I hope when he gets to heaven he doesnt call God Hockey-Puck
# ::tokens ["I", "hope", "when", "he", "gets", "to", "heaven", "he", "does", "nt", "call", "God", "Hockey", "-", "Puck"]
# ::lemmas ["i", "hope", "when", "he", "get", "to", "heaven", "he", "do", "not", "call", "God", "Hockey", "-", "Puck"]
(c47-3 / hope-01
       :ARG0 (c47-7 / i)
       :ARG1 (c47-5 / call-01
                    :ARG0 (c47-6 / he)
                    :ARG1 (c47-4 / person
                                 :name (c47-0 / name
                                              :op1 "God"))
                    :ARG2 (c47-1 / puck
                                 :mod (c47-2 / hockey))
                    :time (c47-8 / get-05
                                 :ARG1 c47-6
                                 :ARG2 (c47-9 / heaven))
                    :polarity -))

# ::snt Adieu to a true Hollywood legend.R.I.P.
# ::tokens ["Adieu", "to", "a", "true", "Hollywood", "legend", ".", "R.I.P."]
# ::lemmas ["adieu", "to", "a", "true", "Hollywood", "legend", ".", "R.I.P."]
(c48-2 / adieu
       :beneficiary (c48-3 / legend
                           :ARG1-of (c48-4 / true-01)
                           :mod (c48-0 / market-sector
                                       :name (c48-1 / name
                                                    :op1 "Hollywood"))))

# ::snt Sad to hear about Don Rickles. He was a funny comedian &amp; actor. He will be missed.
# ::tokens ["Sad", "to", "hear", "about", "Don", "Rickles", ".", "He", "was", "a", "funny", "comedian", "&", "amp", ";", "actor", ".", "He", "will", "be", "missed", "."]
# ::lemmas ["sad", "to", "hear", "about", "Don", "Rickles", ".", "he", "be", "a", "funny", "comedian", "&", "amp", ";", "actor", ".", "he", "will", "be", "miss", "."]
(c49-2 / multi-sentence
       :snt1 (c49-3 / sad-02
                    :ARG0 (c49-5 / hear-01
                                 :ARG1 (c49-6 / person
                                              :name (c49-1 / name
                                                           :op1 "Don"
                                                           :op2 "Rickles"))))
       :snt2 (c49-12 / and
                     :op1 (c49-8 / comedian
                                 :mod (c49-0 / funny))
                     :op2 (c49-11 / amp)
                     :op3 (c49-4 / person
                                 :ARG0-of (c49-9 / act-01))
                     :domain c49-6)
       :snt3 (c49-7 / miss-01
                    :ARG1 (c49-10 / he)))

# ::snt prayers &amp; love
# ::tokens ["prayers", "&", "amp", ";", "love"]
# ::lemmas ["prayers", "&", "amp", ";", "love"]
(c50-4 / and
       :op1 (c50-3 / and
                   :op1 (c50-1 / pray-01)
                   :op2 (c50-2 / amp))
       :op2 (c50-0 / love-01))
