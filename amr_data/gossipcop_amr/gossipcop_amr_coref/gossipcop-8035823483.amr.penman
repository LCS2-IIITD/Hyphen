# ::snt oh no who cares about her transformation. She is she shameful in the eyes of many women. Disgraceful
# ::tokens ["oh", "no", "who", "cares", "about", "her", "transformation", ".", "She", "is", "she", "shameful", "in", "the", "eyes", "of", "many", "women", ".", "Disgraceful"]
# ::lemmas ["oh", "no", "who", "care", "about", "her", "transformation", ".", "she", "be", "she", "shameful", "in", "the", "eye", "of", "many", "woman", ".", "disgraceful"]
(c1-2 / multi-sentence
      :snt1 (c1-7 / care-01
                  :ARG0 (c1-4 / amr-unknown)
                  :ARG1 (c1-9 / transform-01
                              :ARG1 (c1-3 / she))
                  :mod (c1-0 / oh-no
                             :mode expressive)
                  :polarity -)
      :snt2 (c1-1 / shame-02
                  :ARG0 (c1-5 / view-02
                              :ARG0 (c1-8 / woman
                                          :quant (c1-6 / many))
                              :ARG1 (c1-11 / she
                                           :ARG1-of c1-1)))
      :snt3 (c1-10 / disgust-01))

# ::snt the only reason this shit is in the the news is?
# ::tokens ["the", "only", "reason", "this", "shit", "is", "in", "the", "the", "news", "is", "?"]
# ::lemmas ["the", "only", "reason", "this", "shit", "be", "in", "the", "the", "news", "be", "?"]
(c2-4 / reason
      :mod (c2-0 / only)
      :domain (c2-1 / be-located-at-91
                    :ARG1 (c2-3 / shit
                                :mod (c2-6 / this))
                    :ARG2 (c2-2 / news))
      :polarity (c2-5 / amr-unknown))

# ::snt good job TMZ North
# ::tokens ["good", "job", "TMZ", "North"]
# ::lemmas ["good", "job", "TMZ", "North"]
(c3-1 / say-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-3 / job
                  :ARG1-of (c3-5 / good-02))
      :ARG2 (c3-2 / company
                  :name (c3-0 / name
                              :op1 "TMZ"
                              :op2 "North")))

# ::snt Titled .....'From His to Her' !
# ::tokens ["Titled", ".....", "'", "From", "His", "to", "Her", "'", "!"]
# ::lemmas ["title", ".....", "'", "from", "his", "to", "she", "'", "!"]
(c4-3 / title-01
      :ARG2 (c4-2 / thing
                  :source (c4-1 / he)
                  :destination (c4-0 / she)))

# ::snt Wasnt her life already on TV
# ::tokens ["Was", "nt", "her", "life", "already", "on", "TV"]
# ::lemmas ["be", "not", "her", "life", "already", "on", "tv"]
(c5-2 / life
      :polarity (c5-1 / amr-unknown)
      :poss (c5-0 / she)
      :medium (c5-4 / television)
      :time (c5-3 / already))

# ::snt anything for a buck, just another trinket sales person, no self respect just cash
# ::tokens ["anything", "for", "a", "buck", ",", "just", "another", "trinket", "sales", "person", ",", "no", "self", "respect", "just", "cash"]
# ::lemmas ["anything", "for", "a", "buck", ",", "just", "another", "trinket", "sale", "person", ",", "no", "self", "respect", "just", "cash"]
(c6-9 / and
      :op1 (c6-8 / anything
                 :purpose (c6-1 / buck))
      :op2 (c6-4 / person
                 :ARG0-of (c6-2 / sell-01)
                 :mod (c6-7 / trinket)
                 :mod (c6-6 / another)
                 :mod (c6-10 / just))
      :op3 (c6-3 / respect-01
                 :ARG1 (c6-0 / self)
                 :polarity -)
      :op4 (c6-5 / cash
                 :mod (c6-11 / just)))

# ::snt Attention seeking weirdo if you ask me.
# ::tokens ["Attention", "seeking", "weirdo", "if", "you", "ask", "me", "."]
# ::lemmas ["attention", "seek", "weirdo", "if", "you", "ask", "i", "."]
(c7-2 / weirdo
      :ARG0-of (c7-1 / seek-01
                     :ARG1 (c7-4 / attend-02))
      :condition (c7-3 / ask-01
                       :ARG0 (c7-0 / you)
                       :ARG2 (c7-5 / i)))

# ::snt Title suggestion for book. "How I transitioned to woman and remained a dick"
# ::tokens ["Title", "suggestion", "for", "book", ".", "\"", "How", "I", "transitioned", "to", "woman", "and", "remained", "a", "dick", "\""]
# ::lemmas ["title", "suggestion", "for", "book", ".", "\"", "how", "i", "transition", "to", "woman", "and", "remain", "a", "dick", "\""]
(c8-1 / suggest-01
      :ARG1 (c8-4 / title
                  :mod (c8-0 / book
                             :ARG2-of c8-1))
      :topic (c8-6 / and
                   :op1 (c8-9 / transition-01
                              :ARG1 (c8-5 / i)
                              :ARG2 (c8-3 / woman))
                   :op2 (c8-2 / remain-01
                              :ARG1 c8-5
                              :ARG3 (c8-8 / dick))
                   :manner (c8-7 / amr-unknown)))

# ::snt and your point is
# ::tokens ["and", "your", "point", "is"]
# ::lemmas ["and", "your", "point", "be"]
(c9-2 / and
      :op2 (c9-1 / point-04
                 :ARG0 (c9-0 / you)))

# ::snt who cares?
# ::tokens ["who", "cares", "?"]
# ::lemmas ["who", "care", "?"]
(c10-0 / care-01
       :ARG0 (c10-1 / amr-unknown))

# ::snt ...oh wow! Can't wait. Will we learn something new? Does the DNA change?
# ::tokens ["...", "oh", "wow", "!", "Ca", "n't", "wait", ".", "Will", "we", "learn", "something", "new", "?", "Does", "the", "DNA", "change", "?"]
# ::lemmas ["...", "oh", "wow", "!", "can", "not", "wait", ".", "will", "we", "learn", "something", "new", "?", "do", "the", "DNA", "change", "?"]
(c11-1 / multi-sentence
       :snt1 (c11-8 / wow
                    :mod (c11-0 / oh)
                    :mode expressive)
       :snt2 (c11-7 / wait-01
                    :ARG1 (c11-12 / we)
                    :polarity -)
       :snt3 (c11-5 / learn-01
                    :ARG0 c11-12
                    :ARG1 (c11-3 / something
                                 :ARG1-of (c11-2 / new-01))
                    :polarity (c11-11 / amr-unknown))
       :snt4 (c11-9 / change-01
                    :ARG1 (c11-4 / nucleic-acid
                                 :name (c11-6 / name
                                              :op1 "DNA"))
                    :polarity (c11-10 / amr-unknown)))

# ::snt absolutely do not care!!!
# ::tokens ["absolutely", "do", "not", "care", "!", "!", "!"]
# ::lemmas ["absolutely", "do", "not", "care", "!", "!", "!"]
(c13-0 / care-01
       :degree (c13-1 / absolute)
       :polarity -)

# ::snt Yawn.
# ::tokens ["Yawn", "."]
# ::lemmas ["Yawn", "."]
(c14-0 / yawn-01)

# ::snt Roger Goodell dream date
# ::tokens ["Roger", "Goodell", "dream", "date"]
# ::lemmas ["Roger", "Goodell", "dream", "date"]
(c15-0 / date
       :ARG1-of (c15-1 / dream-01
                       :ARG0 (c15-3 / person
                                    :name (c15-2 / name
                                                 :op1 "Roger"
                                                 :op2 "Goodell"))))

# ::snt I thought you reported news.
# ::tokens ["I", "thought", "you", "reported", "news", "."]
# ::lemmas ["i", "think", "you", "report", "news", "."]
(c16-4 / think-01
       :ARG0 (c16-3 / i)
       :ARG1 (c16-2 / report-01
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-1 / news)))

# ::snt dude noo
# ::tokens ["dude", "noo"]
# ::lemmas ["dude", "noo"]
(c17-0 / dude
       :mod (c17-1 / no))

# ::snt . so I guess the reality show flopped. What makes think her fans can read?
# ::tokens [".", "so", "I", "guess", "the", "reality", "show", "flopped", ".", "What", "makes", "think", "her", "fans", "can", "read", "?"]
# ::lemmas [".", "so", "i", "guess", "the", "reality", "show", "flop", ".", "what", "make", "think", "her", "fan", "can", "read", "?"]
(c18-2 / multi-sentence
       :snt1 (c18-8 / cause-01
                    :ARG1 (c18-12 / guess-01
                                  :ARG0 (c18-10 / i)
                                  :ARG1 (c18-0 / flopped-01
                                               :ARG1 (c18-3 / show
                                                            :mod (c18-4 / reality)))))
       :snt2 (c18-5 / make-02
                    :ARG0 (c18-11 / amr-unknown)
                    :ARG1 (c18-9 / think-01
                                 :ARG1 (c18-6 / possible-01
                                              :ARG1 (c18-13 / read-01
                                                            :ARG0 (c18-7 / fan
                                                                         :poss (c18-1 / she))
                                                            :ARG1 c18-3)))))

# ::snt SO O TEMPO E AS TRANSFORMAES QUE MUDAM O MUNDO.
# ::tokens ["SO", "O", "TEMPO", "E", "AS", "TRANSFORMAES", "QUE", "MUDAM", "O", "MUNDO", "."]
# ::lemmas ["so", "o", "tempo", "E", "AS", "transformaes", "QUE", "MUDAM", "O", "MUNDO", "."]
(c20-3 / cause-01
       :ARG1 (c20-5 / come-01
                    :ARG1 (c20-2 / person
                                 :name (c20-0 / name
                                              :op1 "TEMPO"))
                    :manner (c20-4 / transfer-01)
                    :ARG0-of (c20-1 / mean-01
                                    :ARG1 c20-2
                                    :name c20-0
                                    :op1 "Muhammad"
                                    :op2 "O"
                                    :op3 "MunDO")))

# ::snt I daresay Jan Morris and her truly wonderful book can sustain a different person's memoir!
# ::tokens ["I", "daresay", "Jan", "Morris", "and", "her", "truly", "wonderful", "book", "can", "sustain", "a", "different", "person", "'s", "memoir", "!"]
# ::lemmas ["i", "daresay", "Jan", "Morris", "and", "her", "truly", "wonderful", "book", "can", "sustain", "a", "different", "person", "'s", "memoir", "!"]
(c22-11 / dare-01
        :ARG0 (c22-9 / i)
        :ARG2 (c22-3 / sustain-01
                     :ARG0 (c22-10 / and
                                   :op1 (c22-5 / person
                                               :name (c22-1 / name
                                                            :op1 "Jan"
                                                            :op2 "Morris"))
                                   :op2 (c22-0 / book
                                               :poss c22-5
                                               :ARG1-of (c22-6 / wonderful-03
                                                               :degree (c22-8 / truly))))
                     :ARG1 (c22-4 / book
                                  :poss (c22-2 / person
                                               :ARG1-of (c22-7 / differ-02)))))

# ::snt Oh, gee. Can't wait.
# ::tokens ["Oh", ",", "gee", ".", "Ca", "n't", "wait", "."]
# ::lemmas ["oh", ",", "gee", ".", "can", "not", "wait", "."]
(c23-1 / multi-sentence
       :snt1 (c23-0 / oh
                    :mode expressive)
       :snt2 (c23-3 / wait-01
                    :ARG1 (c23-2 / i)
                    :polarity -))
