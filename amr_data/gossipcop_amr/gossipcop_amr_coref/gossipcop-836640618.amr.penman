# ::snt Ill start from today on lol con el chisme
# ::tokens ["Ill", "start", "from", "today", "on", "lol", "con", "el", "chisme"]
# ::lemmas ["Ill", "start", "from", "today", "on", "lol", "con", "el", "chisme"]
(c1-0 / start-01
      :ARG0 (c1-3 / i)
      :ARG2 (c1-4 / today)
      :manner (c1-2 / laugh-01
                    :ARG0 c1-3
                    :manner (c1-5 / loud)
                    :topic (c1-1 / el)))

# ::snt Stay in the know Brandon geeeez haha
# ::tokens ["Stay", "in", "the", "know", "Brandon", "geeeez", "haha"]
# ::lemmas ["stay", "in", "the", "know", "Brandon", "geeeez", "haha"]
(c2-2 / say-01
      :ARG0 (c2-6 / i)
      :ARG1 (c2-0 / stay-01
                  :ARG1 c2-6
                  :ARG3 (c2-4 / know-01
                              :ARG0 c2-6))
      :ARG2 (c2-3 / person
                  :name (c2-1 / name
                              :op1 "Brandon"))
      :mod (c2-5 / jeez
                 :mode expressive))

# ::snt I know I just saw that wow she would get pregnant right before Coachella just like Beyonc
# ::tokens ["I", "know", "I", "just", "saw", "that", "wow", "she", "would", "get", "pregnant", "right", "before", "Coachella", "just", "like", "Beyonc"]
# ::lemmas ["i", "know", "i", "just", "see", "that", "wow", "she", "would", "get", "pregnant", "right", "before", "Coachella", "just", "like", "Beyonc"]
(c3-8 / know-01
      :ARG0 (c3-12 / i)
      :ARG1 (c3-3 / see-01
                  :ARG0 c3-12
                  :ARG1 (c3-4 / impregnate-01
                              :ARG1 (c3-0 / she
                                          :ARG1-of (c3-5 / resemble-01
                                                         :ARG2 (c3-9 / person
                                                                     :name (c3-2 / name
                                                                                 :op1 "Beyonc"))))
                              :time (c3-1 / before
                                          :op1 (c3-6 / event
                                                     :name (c3-7 / name
                                                                 :op1 "Coachella"))
                                          :mod (c3-13 / right))
                              :mod (c3-10 / wow
                                          :mode expressive))
                  :mod (c3-11 / just
                              :mod-of c3-8)))

# ::snt TMZ said sis
# ::tokens ["TMZ", "said", "sis"]
# ::lemmas ["TMZ", "say", "sis"]
(c4-3 / say-01
      :ARG0 (c4-5 / person
                  :name (c4-1 / name
                              :op1 "TMZ"))
      :ARG2 (c4-2 / person
                  :ARG0-of (c4-4 / have-rel-role-91
                                 :ARG2 (c4-0 / sister))))

# ::snt Cardi is not pregnant
# ::tokens ["Cardi", "is", "not", "pregnant"]
# ::lemmas ["Cardi", "be", "not", "pregnant"]
(c5-2 / impregnate-01
      :ARG1 (c5-1 / person
                  :name (c5-0 / name
                              :op1 "Cardi"))
      :polarity -)

# ::snt Whaaa?? Means shes been cheating on me
# ::tokens ["Whaaa", "?", "?", "Means", "she", "s", "been", "cheating", "on", "me"]
# ::lemmas ["Whaaa", "?", "?", "mean", "she", "s", "be", "cheat", "on", "i"]
(c6-0 / multi-sentence
      :snt1 (c6-3 / whaa
                  :mode expressive)
      :snt2 (c6-2 / mean-01
                  :ARG2 (c6-4 / cheat-03
                              :ARG0 (c6-1 / she)
                              :ARG1 (c6-5 / i))))

# ::snt stop talking crazy, nobody hittin that
# ::tokens ["stop", "talking", "crazy", ",", "nobody", "hittin", "that"]
# ::lemmas ["stop", "talk", "crazy", ",", "nobody", "hittin", "that"]
(c7-2 / stop-01
      :ARG0 (c7-0 / you)
      :ARG1 (c7-5 / talk-01
                  :ARG0 c7-0
                  :ARG1-of (c7-4 / crazy-03))
      :ARG0-of (c7-6 / cause-01
                     :ARG1 (c7-3 / hitt-01
                                 :ARG0 (c7-1 / nobody)
                                 :ARG1 c7-5))
      :mode imperative)

# ::snt The child was born in October. Do the math.
# ::tokens ["The", "child", "was", "born", "in", "October", ".", "Do", "the", "math", "."]
# ::lemmas ["the", "child", "be", "bear", "in", "October", ".", "do", "the", "math", "."]
(c8-2 / multi-sentence
      :snt1 (c8-0 / bear-02
                  :ARG1 (c8-4 / child)
                  :time (c8-6 / date-entity
                              :month 10))
      :snt2 (c8-5 / do-02
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-3 / mathematics)
                  :mode imperative))

# ::snt He met his bm right after the jlo fling in Jan when he started his tour in EUR. There were spotted together and there's pics of them together having dinner.
# ::tokens ["He", "met", "his", "bm", "right", "after", "the", "jlo", "fling", "in", "Jan", "when", "he", "started", "his", "tour", "in", "EUR", ".", "There", "were", "spotted", "together", "and", "there", "'s", "pics", "of", "them", "together", "having", "dinner", "."]
# ::lemmas ["he", "meet", "his", "bm", "right", "after", "the", "jlo", "fling", "in", "Jan", "when", "he", "start", "his", "tour", "in", "EUR", ".", "there", "be", "spot", "together", "and", "there", "be", "pic", "of", "they", "together", "have", "dinner", "."]
(c9-10 / multi-sentence
       :snt1 (c9-4 / meet-02
                   :ARG0 (c9-5 / he)
                   :ARG1 (c9-18 / person
                                :ARG0-of (c9-19 / have-rel-role-91
                                                :ARG1 c9-5
                                                :ARG2 (c9-9 / boyfriend)))
                   :time (c9-8 / after
                               :op1 (c9-15 / fling-01
                                           :ARG1 c9-5
                                           :time (c9-21 / date-entity
                                                        :month 1)
                                           :time-of (c9-0 / start-01
                                                          :ARG0 c9-5
                                                          :ARG1 (c9-7 / tour-01
                                                                      :ARG0 c9-5
                                                                      :location (c9-12 / continent
                                                                                       :name (c9-16 / name
                                                                                                    :op1 "Europe")))))
                               :mod (c9-17 / right)))
       :snt2 (c9-6 / and
                   :op1 (c9-2 / spot-01
                              :ARG1 (c9-14 / they)
                              :manner (c9-20 / together))
                   :op2 (c9-11 / pic
                               :topic (c9-3 / have-06
                                            :ARG0 c9-14
                                            :ARG1 (c9-13 / dinner)
                                            :manner (c9-1 / together)))))

# ::snt Uhmm no. Rih was already with Hassan. She even spent New Years with him that year, she was holding his hand walking thru the club ...
# ::tokens ["Uhmm", "no", ".", "Rih", "was", "already", "with", "Hassan", ".", "She", "even", "spent", "New", "Years", "with", "him", "that", "year", ",", "she", "was", "holding", "his", "hand", "walking", "thru", "the", "club", "..."]
# ::lemmas ["uhmm", "no", ".", "Rih", "be", "already", "with", "Hassan", ".", "she", "even", "spend", "New", "Years", "with", "he", "that", "year", ",", "she", "be", "hold", "his", "hand", "walk", "thru", "the", "club", "..."]
(c10-10 / multi-sentence
        :snt1 (c10-15 / uhmm
                      :mode expressive)
        :snt2 (c10-9 / be-with-10
                     :ARG0 (c10-19 / person
                                   :name (c10-17 / name
                                                 :op1 "Rih"))
                     :ARG1 (c10-11 / person
                                   :name (c10-12 / name
                                                 :op1 "Hassan"))
                     :time (c10-8 / already))
        :snt3 (c10-6 / and
                     :op1 (c10-0 / spend-02
                                 :ARG0 (c10-2 / she)
                                 :ARG1 (c10-16 / festival
                                               :name (c10-20 / name
                                                             :op1 "New"
                                                             :op2 "Years"))
                                 :ARG2 (c10-5 / he)
                                 :mod (c10-18 / even)
                                 :time (c10-3 / year
                                              :mod (c10-7 / that)))
                     :op2 (c10-21 / hold-01
                                  :ARG0 (c10-1 / she
                                               :part (c10-4 / hand
                                                            :ARG1-of c10-21))
                                  :direction (c10-14 / thru
                                                     :op1 (c10-13 / club)))))

# ::snt I mean she could've been holding the shirt back so she could see her feet but ?
# ::tokens ["I", "mean", "she", "could", "'ve", "been", "holding", "the", "shirt", "back", "so", "she", "could", "see", "her", "feet", "but", "?"]
# ::lemmas ["i", "mean", "she", "could", "'ve", "be", "hold", "the", "shirt", "back", "so", "she", "could", "see", "her", "foot", "but", "?"]
(c11-3 / mean-01
       :ARG0 (c11-10 / i)
       :ARG2 (c11-9 / contrast-01
                    :ARG1 (c11-8 / possible-01
                                 :ARG1 (c11-7 / hold-01
                                              :ARG0 (c11-5 / she
                                                           :part (c11-0 / foot))
                                              :ARG1 (c11-1 / shirt)
                                              :ARG3 (c11-2 / back)
                                              :purpose (c11-4 / possible-01
                                                              :ARG1 (c11-12 / see-01
                                                                            :ARG0 c11-5
                                                                            :ARG1 c11-0))))
                    :ARG2 (c11-11 / possible-01
                                  :polarity (c11-6 / amr-unknown))))

# ::snt Mmmmm
# ::tokens ["Mmmmm"]
# ::lemmas ["Mmmmm"]
(c12-0 / hmm
       :mode expressive)

# ::snt Wassup Brodie
# ::tokens ["Wassup", "Brodie"]
# ::lemmas ["Wassup", "Brodie"]
(c14-1 / say-01
       :ARG0 (c14-3 / i)
       :ARG1 (c14-4 / ass-up-00
                    :ARG0 (c14-2 / person
                                 :name (c14-0 / name
                                              :op1 "Brodie")
                                 :ARG2-of c14-1)
                    :mode imperative))

# ::snt My guyyy
# ::tokens ["My", "guyyy"]
# ::lemmas ["my", "guyyy"]
(c15-0 / guyyy
       :poss (c15-1 / i)
       :mode expressive)

# ::snt Easy
# ::tokens ["Easy"]
# ::lemmas ["easy"]
(c16-0 / easy-05)

# ::snt That baby will be beautiful then tbh
# ::tokens ["That", "baby", "will", "be", "beautiful", "then", "tbh"]
# ::lemmas ["that", "baby", "will", "be", "beautiful", "then", "tbh"]
(c17-0 / beautiful-02
       :ARG1 (c17-1 / baby
                    :mod (c17-4 / that))
       :ARG1-of (c17-2 / honest-01)
       :ARG1-of (c17-3 / have-condition-91))

# ::snt Think her new "foreign" nigga
# ::tokens ["Think", "her", "new", "\"", "foreign", "\"", "nigga"]
# ::lemmas ["think", "her", "new", "\"", "foreign", "\"", "nigga"]
(c18-5 / think-01
       :ARG0 (c18-1 / you)
       :ARG1 (c18-2 / nag
                    :poss (c18-3 / she)
                    :ARG1-of (c18-4 / new-01)
                    :mod (c18-0 / foreign)))

# ::snt If she is I wonder by who
# ::tokens ["If", "she", "is", "I", "wonder", "by", "who"]
# ::lemmas ["if", "she", "be", "i", "wonder", "by", "who"]
(c19-0 / wonder-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-1 / person)
       :condition (c19-3 / she))

# ::snt Of course that's my wife she's gonna be fine regardless I just got to wondering
# ::tokens ["Of", "course", "that", "'s", "my", "wife", "she", "'s", "gon", "na", "be", "fine", "regardless", "I", "just", "got", "to", "wondering"]
# ::lemmas ["of", "course", "that", "be", "my", "wife", "she", "be", "going", "to", "be", "fine", "regardless", "i", "just", "get", "to", "wonder"]
(c20-2 / multi-sentence
       :snt1 (c20-7 / person
                    :ARG0-of (c20-6 / have-rel-role-91
                                    :ARG1 (c20-11 / i)
                                    :ARG2 (c20-9 / wife))
                    :domain (c20-12 / that)
                    :mod (c20-0 / of-course))
       :snt2 (c20-1 / fine-04
                    :ARG1 (c20-3 / she)
                    :ARG1-of (c20-5 / regardless-91
                                    :ARG2 (c20-13 / get-22
                                                  :ARG0 (c20-4 / i)
                                                  :ARG1 (c20-8 / wonder-01
                                                               :ARG0 c20-4)
                                                  :mod (c20-10 / just)))))

# ::snt Not overnight she been getting thick for some months it looks good on her though so ion care still bad
# ::tokens ["Not", "overnight", "she", "been", "getting", "thick", "for", "some", "months", "it", "looks", "good", "on", "her", "though", "so", "ion", "care", "still", "bad"]
# ::lemmas ["not", "overnight", "she", "been", "get", "thick", "for", "some", "months", "it", "look", "good", "on", "she", "though", "so", "ion", "care", "still", "bad"]
(c21-3 / multi-sentence
       :snt1 (c21-0 / overnight
                    :polarity -)
       :snt2 (c21-12 / get-03
                     :ARG1 (c21-4 / she)
                     :ARG2 (c21-11 / thick-03
                                   :ARG1 c21-4)
                     :duration (c21-1 / some
                                      :op1 (c21-14 / temporal-quantity
                                                   :unit (c21-7 / month)
                                                   :quant 1)))
       :snt3 (c21-8 / look-02
                    :ARG0 (c21-10 / it)
                    :ARG1 (c21-13 / good-02)
                    :ARG2 (c21-15 / she)
                    :concession-of (c21-2 / bad-07
                                          :ARG1 (c21-9 / care-03
                                                       :mod (c21-5 / ion))
                                          :mod (c21-6 / still))))

# ::snt I don't but she got hella thick overnight like belly lol.
# ::tokens ["I", "do", "n't", "but", "she", "got", "hella", "thick", "overnight", "like", "belly", "lol", "."]
# ::lemmas ["i", "do", "not", "but", "she", "get", "hella", "thick", "overnight", "like", "belly", "lol", "."]
(c22-6 / contrast-01
       :ARG1 (c22-10 / do-02
                     :ARG0 (c22-7 / i)
                     :polarity -)
       :ARG2 (c22-9 / get-03
                    :ARG1 (c22-2 / she
                                 :part (c22-1 / belly))
                    :ARG2 (c22-8 / thick-03
                                 :ARG1 c22-2
                                 :degree (c22-4 / hell))
                    :time (c22-0 / overnight)
                    :ARG1-of (c22-3 / resemble-01
                                    :ARG2 c22-1)
                    :ARG2-of (c22-5 / laugh-01
                                    :ARG0 c22-7
                                    :manner (c22-11 / loud)
                                    :mode expressive)))

# ::snt Don't wish that upon her
# ::tokens ["Do", "n't", "wish", "that", "upon", "her"]
# ::lemmas ["do", "not", "wish", "that", "upon", "she"]
(c23-1 / wish-01
       :ARG1 (c23-2 / that)
       :prep-upon (c23-0 / she)
       :polarity -)

# ::snt Where did you hear this rumour?
# ::tokens ["Where", "did", "you", "hear", "this", "rumour", "?"]
# ::lemmas ["where", "do", "you", "hear", "this", "rumour", "?"]
(c24-2 / hear-01
       :ARG0 (c24-0 / you)
       :ARG1 (c24-1 / rumor-01
                    :mod (c24-3 / this))
       :ARG2 (c24-4 / amr-unknown))

# ::snt meanwhile, Kevin Gates will rub your feet and "go to war with God behind you"
# ::tokens ["meanwhile", ",", "Kevin", "Gates", "will", "rub", "your", "feet", "and", "\"", "go", "to", "war", "with", "God", "behind", "you", "\""]
# ::lemmas ["meanwhile", ",", "Kevin", "Gates", "will", "rub", "your", "foot", "and", "\"", "go", "to", "war", "with", "God", "behind", "you", "\""]
(c25-10 / and
        :op1 (c25-6 / rub-01
                    :ARG0 (c25-8 / person
                                 :name (c25-3 / name
                                              :op1 "Kevin"
                                              :op2 "Gates"))
                    :ARG1 (c25-0 / foot
                                 :part-of (c25-2 / you)))
        :op2 (c25-11 / go-02
                     :ARG0 c25-2
                     :ARG4 (c25-9 / war-01
                                  :ARG0 c25-2
                                  :ARG1 (c25-4 / person
                                               :name (c25-7 / name
                                                            :op1 "God"))
                                  :location (c25-1 / behind
                                                   :op1 c25-2)))
        :time (c25-5 / meanwhile))

# ::snt : u know what.Beyonce touring pregnant might not be too bad.Rihanna performs like she months pregnant anyway&amp;gets away wit it
# ::tokens [":", "u", "know", "what", ".", "Beyonce", "touring", "pregnant", "might", "not", "be", "too", "bad", ".", "Rihanna", "performs", "like", "she", "months", "pregnant", "anyway&amp;gets", "away", "wit", "it"]
# ::lemmas [":", "u", "know", "what", ".", "beyonce", "tour", "pregnant", "might", "not", "be", "too", "bad", ".", "Rihanna", "perform", "like", "she", "months", "pregnant", "anyway&amp;get", "away", "wit", "it"]
(c26-14 / multi-sentence
        :snt1 (c26-6 / know-01
                     :ARG0 (c26-3 / you)
                     :ARG1 (c26-9 / thing))
        :snt2 (c26-21 / possible-01
                      :ARG1 (c26-13 / bad-07
                                    :ARG1 (c26-17 / tour-01
                                                  :ARG0 (c26-15 / person
                                                                :name (c26-19 / name
                                                                              :op1 "Beyonce"))
                                                  :ARG1-of (c26-23 / impregnate-01))
                                    :ARG2-of (c26-5 / have-degree-91
                                                    :ARG1 c26-17
                                                    :ARG3 (c26-24 / too))
                                    :polarity -))
        :snt3 (c26-2 / perform-01
                     :ARG0 (c26-1 / person
                                  :name (c26-16 / name
                                                :op1 "Rihanna"))
                     :ARG1-of (c26-20 / resemble-01
                                      :ARG2 (c26-4 / impregnate-01
                                                   :ARG1 c26-1
                                                   :duration (c26-7 / multiple
                                                                    :op1 (c26-0 / temporal-quantity
                                                                                :unit (c26-18 / month)
                                                                                :quant 1))))
                     :mod (c26-10 / anyway))
        :snt4 (c26-11 / get-away-08
                      :ARG0 (c26-8 / person
                                   :name (c26-22 / name
                                                 :op1 "amp"))
                      :ARG1 (c26-12 / it)))

# ::snt typical fucking tina
# ::tokens ["typical", "fucking", "tina"]
# ::lemmas ["typical", "fucking", "tina"]
(c27-2 / person
       :name (c27-0 / name
                    :op1 "Tina")
       :mod (c27-1 / fucking
                   :mode expressive)
       :ARG1-of (c27-3 / typical-02))

# ::snt but.. um.. science
# ::tokens ["but", "..", "um", "..", "science"]
# ::lemmas ["but", "..", "um", "..", "science"]
(c28-0 / contrast-01
       :ARG2 (c28-1 / science))

# ::snt so you're cheating on me?
# ::tokens ["so", "you", "'re", "cheating", "on", "me", "?"]
# ::lemmas ["so", "you", "be", "cheat", "on", "i", "?"]
(c29-1 / cause-01
       :ARG1 (c29-4 / cheat-03
                    :ARG0 (c29-0 / you)
                    :ARG1 (c29-2 / i))
       :polarity (c29-3 / amr-unknown))

# ::snt lol yass a very proud one at that
# ::tokens ["lol", "yass", "a", "very", "proud", "one", "at", "that"]
# ::lemmas ["lol", "yass", "a", "very", "proud", "one", "at", "that"]
(c30-3 / pride-01
       :ARG0 (c30-0 / one
                    :domain (c30-1 / you))
       :degree (c30-2 / very)
       :manner (c30-4 / loud))

# ::snt Where u get this info?
# ::tokens ["Where", "u", "get", "this", "info", "?"]
# ::lemmas ["where", "u", "get", "this", "info", "?"]
(c31-4 / get-01
       :ARG0 (c31-0 / you)
       :ARG1 (c31-2 / information
                    :mod (c31-1 / this))
       :source (c31-3 / amr-unknown))

# ::snt She been getting thick
# ::tokens ["She", "been", "getting", "thick"]
# ::lemmas ["she", "been", "get", "thick"]
(c32-0 / get-03
       :ARG1 (c32-2 / she)
       :ARG2 (c32-1 / thick-03
                    :ARG1 c32-2))

# ::snt lol I hope shes not
# ::tokens ["lol", "I", "hope", "she", "s", "not"]
# ::lemmas ["lol", "i", "hope", "she", "s", "not"]
(c33-1 / hope-01
       :ARG0 (c33-4 / i)
       :ARG1 (c33-3 / have-polarity-91
                    :ARG1 (c33-0 / she)
                    :ARG2 -)
       :manner (c33-2 / loud))

# ::snt she needs to teach ha man how to pull out but he so fine I'd probably let him shoot it in me too so whateva
# ::tokens ["she", "needs", "to", "teach", "ha", "man", "how", "to", "pull", "out", "but", "he", "so", "fine", "I", "'d", "probably", "let", "him", "shoot", "it", "in", "me", "too", "so", "whateva"]
# ::lemmas ["she", "need", "to", "teach", "ha", "man", "how", "to", "pull", "out", "but", "he", "so", "fine", "i", "would", "probably", "let", "he", "shoot", "it", "in", "i", "too", "so", "whateva"]
(c34-10 / contrast-01
        :ARG1 (c34-2 / need-01
                     :ARG0 (c34-4 / she)
                     :ARG1 (c34-13 / teach-01
                                   :ARG0 c34-4
                                   :ARG1 (c34-8 / pull-out-02
                                                :ARG0 (c34-3 / man
                                                             :ARG2-of c34-13))))
        :ARG2 (c34-7 / have-degree-91
                     :ARG1 c34-3
                     :ARG2 (c34-0 / fine-04
                                  :ARG1 c34-3)
                     :ARG3 (c34-1 / so)
                     :ARG6 (c34-9 / let-01
                                  :ARG0 (c34-12 / i)
                                  :ARG1 (c34-16 / shoot-02
                                                :ARG0 c34-3
                                                :ARG1 (c34-5 / it)
                                                :ARG2 c34-12
                                                :mod (c34-15 / too))
                                  :mod (c34-6 / probable)
                                  :ARG0-of (c34-14 / cause-01
                                                   :ARG1 (c34-11 / whateva
                                                                 :mode expressive)))))

# ::snt Im either getting pregnant with her or getting pregnant to buy to clothes for my child.
# ::tokens ["I", "m", "either", "getting", "pregnant", "with", "her", "or", "getting", "pregnant", "to", "buy", "to", "clothes", "for", "my", "child", "."]
# ::lemmas ["i", "m", "either", "get", "pregnant", "with", "she", "or", "get", "pregnant", "to", "buy", "to", "clothe", "for", "my", "child", "."]
(c35-0 / or
       :op1 (c35-7 / impregnate-01
                   :ARG1 (c35-3 / i)
                   :ARG2 (c35-2 / she))
       :op2 (c35-8 / impregnate-01
                   :ARG1 c35-3
                   :purpose (c35-1 / buy-01
                                   :ARG0 c35-3
                                   :ARG1 (c35-6 / clothes
                                                :beneficiary (c35-5 / person
                                                                    :ARG0-of (c35-4 / have-rel-role-91
                                                                                    :ARG1 c35-3
                                                                                    :ARG2 (c35-9 / child)))))))

# ::snt Do it
# ::tokens ["Do", "it"]
# ::lemmas ["do", "it"]
(c36-0 / do-02
       :ARG0 (c36-1 / you)
       :ARG1 (c36-2 / it)
       :mode imperative)

# ::snt bro me too!!!
# ::tokens ["bro", "me", "too", "!", "!", "!"]
# ::lemmas ["bro", "i", "too", "!", "!", "!"]
(c37-0 / bro-00
       :ARG1 (c37-1 / i)
       :mod (c37-2 / too)
       :mode expressive)

# ::snt lol we literally all fluctuate, it's a thing friends
# ::tokens ["lol", "we", "literally", "all", "fluctuate", ",", "it", "'s", "a", "thing", "friends"]
# ::lemmas ["lol", "we", "you", "all", "fluctuate", ",", "it", "be", "a", "thing", "friend"]
(c38-1 / multi-sentence
       :snt1 (c38-0 / fluctuate-01
                    :ARG1 (c38-6 / we
                                 :mod (c38-9 / all))
                    :manner (c38-3 / literal)
                    :manner (c38-10 / laugh-01
                                    :ARG0 (c38-8 / i)
                                    :manner (c38-4 / loud)
                                    :mode expressive))
       :snt2 (c38-2 / say-01
                    :ARG0 c38-8
                    :ARG1 (c38-7 / thing
                                 :domain c38-0)
                    :ARG2 (c38-5 / friend)))

# ::snt this saddens me BC you're accurate
# ::tokens ["this", "saddens", "me", "BC", "you", "'re", "accurate"]
# ::lemmas ["this", "sadden", "i", "BC", "you", "be", "accurate"]
(c40-2 / say-01
       :ARG0 (c40-4 / i)
       :ARG1 (c40-0 / sadden-01
                    :ARG0 (c40-5 / accurate
                                 :domain (c40-3 / person
                                                :name (c40-1 / name
                                                             :op1 "BC")))
                    :ARG1 c40-4)
       :ARG2 c40-3)

# ::snt Okkk that's been on my mind for weeks and I had to let it out
# ::tokens ["Okkk", "that", "'s", "been", "on", "my", "mind", "for", "weeks", "and", "I", "had", "to", "let", "it", "out"]
# ::lemmas ["Okkk", "that", "be", "be", "on", "my", "mind", "for", "weeks", "and", "i", "have", "to", "let", "it", "out"]
(c42-3 / and
       :op1 (c42-0 / on-ones-mind-07
                   :ARG1 (c42-6 / i)
                   :ARG2 (c42-7 / that)
                   :duration (c42-2 / multiple
                                    :op1 (c42-10 / temporal-quantity
                                                 :unit (c42-5 / week)
                                                 :quant 1)))
       :op2 (c42-1 / obligate-01
                   :ARG1 c42-6
                   :ARG2 (c42-4 / let-01
                                :ARG0 c42-6
                                :ARG1 (c42-9 / out-06
                                             :ARG1 c42-7)))
       :mod (c42-8 / okkk
                   :mode expressive))

# ::snt I think cardi pregnant too...
# ::tokens ["I", "think", "cardi", "pregnant", "too", "..."]
# ::lemmas ["i", "think", "cardi", "pregnant", "too", "..."]
(c43-4 / think-01
       :ARG0 (c43-3 / i)
       :ARG1 (c43-1 / impregnate-01
                    :ARG1 (c43-2 / person
                                 :name (c43-0 / name
                                              :op1 "Cardi"))
                    :mod (c43-5 / too)))

# ::snt what?!
# ::tokens ["what", "?", "!"]
# ::lemmas ["what", "?", "!"]
(c44-0 / amr-unknown
       :mode expressive)

# ::snt Faith I would be so happy
# ::tokens ["Faith", "I", "would", "be", "so", "happy"]
# ::lemmas ["faith", "i", "would", "be", "so", "happy"]
(c45-0 / faith
       :ARG0-of (c45-3 / cause-01
                       :ARG1 (c45-2 / happy-01
                                    :ARG1 (c45-4 / i)
                                    :degree (c45-1 / so))))

# ::snt Yesssss lol I'm hoping she really is
# ::tokens ["Yesssss", "lol", "I", "'m", "hoping", "she", "really", "is"]
# ::lemmas ["Yesssss", "lol", "i", "be", "hope", "she", "really", "be"]
(c46-2 / hope-01
       :ARG0 (c46-4 / i)
       :ARG1 (c46-0 / she
                    :ARG1-of (c46-1 / real-04))
       :ARG2-of (c46-3 / laugh-01
                       :ARG0 c46-4
                       :manner (c46-5 / loud)
                       :mode expressive))

# ::snt She had to be faith! I'm so glad you said this so me and Ashe not crazy lol
# ::tokens ["She", "had", "to", "be", "faith", "!", "I", "'m", "so", "glad", "you", "said", "this", "so", "me", "and", "Ashe", "not", "crazy", "lol"]
# ::lemmas ["she", "have", "to", "be", "faith", "!", "i", "be", "so", "glad", "you", "say", "this", "so", "i", "and", "Ashe", "not", "crazy", "lol"]
(c47-4 / multi-sentence
       :snt1 (c47-0 / obligate-01
                    :ARG1 (c47-6 / she)
                    :ARG2 (c47-1 / faith))
       :snt2 (c47-13 / glad-02
                     :ARG0 (c47-2 / say-01
                                  :ARG0 (c47-3 / you)
                                  :ARG1 (c47-12 / this)
                                  :ARG0-of (c47-10 / cause-01
                                                   :ARG1 (c47-15 / crazy-03
                                                                 :ARG1 (c47-7 / and
                                                                              :op1 (c47-11 / i)
                                                                              :op2 (c47-8 / person
                                                                                          :name (c47-5 / name
                                                                                                       :op1 "Ashe")))
                                                                 :ARG2-of (c47-9 / laugh-01
                                                                                 :ARG0 c47-11
                                                                                 :manner (c47-14 / loud)
                                                                                 :mode expressive)
                                                                 :polarity -)))
                     :ARG1 c47-11
                     :degree (c47-16 / so)))

# ::snt Exactly
# ::tokens ["Exactly"]
# ::lemmas ["exactly"]
(c48-0 / exact)

# ::snt I'm with you Faith. Me and Lizzy have been talking about it
# ::tokens ["I", "'m", "with", "you", "Faith", ".", "Me", "and", "Lizzy", "have", "been", "talking", "about", "it"]
# ::lemmas ["i", "be", "with", "you", "Faith", ".", "i", "and", "Lizzy", "have", "be", "talk", "about", "it"]
(c49-2 / multi-sentence
       :snt1 (c49-8 / accompany-01
                    :ARG0 (c49-7 / i)
                    :ARG1 (c49-1 / you)
                    :topic (c49-0 / faith))
       :snt2 (c49-6 / talk-01
                    :ARG0 (c49-9 / and
                                 :op1 (c49-4 / i)
                                 :op2 (c49-5 / person
                                             :name (c49-3 / name
                                                          :op1 "Lizzy")))
                    :ARG1 (c49-10 / it)))

# ::snt Yeah that too bruh!!! Nah fr
# ::tokens ["Yeah", "that", "too", "bruh", "!", "!", "!", "Nah", "fr"]
# ::lemmas ["yeah", "that", "too", "bruh", "!", "!", "!", "Nah", "fr"]
(c50-2 / multi-sentence
       :snt1 (c50-4 / say-01
                    :ARG0 (c50-6 / i)
                    :ARG1 (c50-5 / that
                                 :mod (c50-7 / too))
                    :ARG2 (c50-0 / bruh)
                    :mod (c50-1 / yeah
                                :mode expressive))
       :snt2 (c50-3 / nah
                    :mode expressive))
