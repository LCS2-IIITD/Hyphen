# ::snt Amennnnnn I WILL collect that money
# ::tokens ["Amennnnnn", "I", "WILL", "collect", "that", "money"]
# ::lemmas ["Amennnnnn", "i", "will", "collect", "that", "money"]
(c1-3 / collect-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-0 / money
                  :mod (c1-5 / that))
      :ARG2 (c1-2 / person
                  :name (c1-1 / name
                              :op1 "Amennnnnnnn")))

# ::snt It's definitely run its course.
# ::tokens ["It", "'s", "definitely", "run", "its", "course", "."]
# ::lemmas ["it", "be", "definitely", "run", "its", "course", "."]
(c2-1 / run-01
      :ARG1 (c2-2 / course
                  :poss (c2-3 / it))
      :mod (c2-0 / definite))

# ::snt I cannnn.
# ::tokens ["I", "cannnn", "."]
# ::lemmas ["i", "cannnn", "."]
(c3-0 / possible-01
      :ARG1 (c3-1 / i))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c4-0 / amr-empty)

# ::snt Sad
# ::tokens ["Sad"]
# ::lemmas ["sad"]
(c6-0 / sad-02)

# ::snt What!
# ::tokens ["What", "!"]
# ::lemmas ["what", "!"]
(c7-0 / amr-unknown
      :mode expressive)

# ::snt What!!!!
# ::tokens ["What", "!", "!", "!", "!"]
# ::lemmas ["what", "!", "!", "!", "!"]
(c8-0 / amr-unknown
      :mode expressive)

# ::snt Maybe a spinoff with Quinn
# ::tokens ["Maybe", "a", "spinoff", "with", "Quinn"]
# ::lemmas ["maybe", "a", "spinoff", "with", "Quinn"]
(c9-1 / possible-01
      :ARG1 (c9-3 / spinoff
                  :prep-with (c9-2 / person
                                   :name (c9-0 / name
                                               :op1 "Quinn"))))

# ::snt Noooooooo
# ::tokens ["Noooooooo"]
# ::lemmas ["Noooooooo"]
(c11-0 / no
       :mode expressive)

# ::snt Nooooooooo
# ::tokens ["Nooooooooo"]
# ::lemmas ["Nooooooooo"]
(c12-0 / no)

# ::snt Nooooo
# ::tokens ["Nooooo"]
# ::lemmas ["Nooooo"]
(c14-0 / no)

# ::snt Noooo!!!
# ::tokens ["Noooo", "!", "!", "!"]
# ::lemmas ["Noooo", "!", "!", "!"]
(c15-0 / no
       :mode expressive)

# ::snt Yay!!! Writing has gotten worse. No more storylines. So happy to hear this!
# ::tokens ["Yay", "!", "!", "!", "Writing", "has", "gotten", "worse", ".", "No", "more", "storylines", ".", "So", "happy", "to", "hear", "this", "!"]
# ::lemmas ["Yay", "!", "!", "!", "writing", "have", "get", "bad", ".", "no", "more", "storyline", ".", "so", "happy", "to", "hear", "this", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-1 / yay
                    :mode expressive)
       :snt2 (c16-7 / worsen-01
                    :ARG1 (c16-6 / write-01))
       :snt3 (c16-3 / storyline
                    :quant (c16-4 / more)
                    :polarity -)
       :snt4 (c16-5 / happy-01
                    :ARG0 (c16-8 / hear-01
                                 :ARG1 (c16-10 / this))
                    :ARG1 (c16-9 / i)
                    :degree (c16-0 / so)))

# ::snt I figured so
# ::tokens ["I", "figured", "so"]
# ::lemmas ["i", "figure", "so"]
(c18-0 / figure-01
       :ARG0 (c18-1 / i)
       :ARG1 (c18-2 / so))

# ::snt Kill Jake in some terribly painful death.
# ::tokens ["Kill", "Jake", "in", "some", "terribly", "painful", "death", "."]
# ::lemmas ["Kill", "Jake", "in", "some", "terribly", "painful", "death", "."]
(c19-5 / kill-01
       :ARG0 (c19-0 / you)
       :ARG1 (c19-4 / person
                    :name (c19-1 / name
                                 :op1 "Jake"))
       :manner (c19-7 / die-01
                      :ARG1 c19-4
                      :ARG0-of (c19-2 / pain-01
                                      :degree (c19-6 / terribly))
                      :mod (c19-3 / some))
       :mode imperative)

# ::snt Thank God!
# ::tokens ["Thank", "God", "!"]
# ::lemmas ["thank", "God", "!"]
(c20-2 / thank-01
       :ARG1 (c20-1 / person
                    :name (c20-0 / name
                                 :op1 "God"))
       :mode expressive)

# ::snt Gladiators in the suit some episodes were epic!
# ::tokens ["Gladiators", "in", "the", "suit", "some", "episodes", "were", "epic", "!"]
# ::lemmas ["gladiator", "in", "the", "suit", "some", "episode", "be", "epic", "!"]
(c22-2 / epic
       :domain (c22-6 / episode
                      :mod (c22-1 / some)
                      :mod (c22-3 / person
                                  :ARG0-of (c22-5 / gladiate-01)
                                  :ARG0-of (c22-4 / wear-01
                                                  :ARG1 (c22-0 / suit)))))

# ::snt Whatt??
# ::tokens ["Whatt", "?", "?"]
# ::lemmas ["Whatt", "?", "?"]
(c23-1 / amr-unknown
       :domain (c23-0 / they))

# ::snt Nooo!!!
# ::tokens ["Nooo", "!", "!", "!"]
# ::lemmas ["Nooo", "!", "!", "!"]
(c24-0 / no
       :mode expressive)

# ::snt Say it ain't so!!!
# ::tokens ["Say", "it", "ai", "n't", "so", "!", "!", "!"]
# ::lemmas ["say", "it", "be", "not", "so", "!", "!", "!"]
(c25-2 / say-01
       :ARG1 (c25-0 / so
                    :domain (c25-1 / it)
                    :polarity -)
       :mode expressive)

# ::snt Interesting
# ::tokens ["Interesting"]
# ::lemmas ["interesting"]
(c26-0 / interest-01)

# ::snt please stop this. Do you call this newsworthy? Or you just want to abuse the space
# ::tokens ["please", "stop", "this", ".", "Do", "you", "call", "this", "newsworthy", "?", "Or", "you", "just", "want", "to", "abuse", "the", "space"]
# ::lemmas ["please", "stop", "this", ".", "do", "you", "call", "this", "newsworthy", "?", "or", "you", "just", "want", "to", "abuse", "the", "space"]
(c27-3 / multi-sentence
       :snt1 (c27-5 / stop-01
                    :ARG0 (c27-2 / you)
                    :ARG1 (c27-11 / this)
                    :mode imperative
                    :polite +)
       :snt2 (c27-13 / truth-value
                     :polarity-of (c27-7 / call-01
                                         :ARG0 (c27-12 / you)
                                         :ARG1 (c27-10 / this)
                                         :ARG2 (c27-4 / newsworthy)))
       :snt3 (c27-0 / or
                    :op2 (c27-8 / want-01
                                :ARG0 c27-12
                                :ARG1 (c27-6 / abuse-02
                                             :ARG0 c27-12
                                             :ARG1 (c27-1 / space))
                                :mod (c27-9 / just))))

# ::snt That sounds about right.
# ::tokens ["That", "sounds", "about", "right", "."]
# ::lemmas ["that", "sound", "about", "right", "."]
(c30-3 / sound-01
       :ARG1 (c30-2 / that)
       :ARG2 (c30-1 / right-06
                    :ARG2 c30-2
                    :degree (c30-0 / about)))

# ::snt No. no. I don't need this kind of negativity in my life right now.
# ::tokens ["No", ".", "no", ".", "I", "do", "n't", "need", "this", "kind", "of", "negativity", "in", "my", "life", "right", "now", "."]
# ::lemmas ["no", ".", "no", ".", "i", "do", "not", "need", "this", "kind", "of", "negativity", "in", "my", "life", "right", "now", "."]
(c31-1 / multi-sentence
       :snt1 (c31-0 / no)
       :snt2 (c31-3 / need-01
                    :ARG0 (c31-8 / i)
                    :ARG1 (c31-4 / negative-03
                                 :mod (c31-5 / kind
                                             :mod (c31-9 / this)))
                    :time (c31-7 / now
                                 :mod (c31-2 / right))
                    :location (c31-6 / life
                                     :poss c31-8)
                    :polarity -))

# ::snt Sorry
# ::tokens ["Sorry"]
# ::lemmas ["sorry"]
(c32-0 / sorry-01)

# ::snt Good, its time
# ::tokens ["Good", ",", "its", "time"]
# ::lemmas ["good", ",", "its", "time"]
(c33-3 / and
       :op1 (c33-0 / good-02)
       :op2 (c33-1 / time
                   :poss (c33-2 / it)))

# ::snt Sad, but realit, it can't keep up with reality!
# ::tokens ["Sad", ",", "but", "realit", ",", "it", "ca", "n't", "keep", "up", "with", "reality", "!"]
# ::lemmas ["sad", ",", "but", "realit", ",", "it", "can", "not", "keep", "up", "with", "reality", "!"]
(c34-4 / contrast-01
       :ARG1 (c34-0 / sad-02)
       :ARG2 (c34-3 / possible-01
                    :ARG1 (c34-2 / keep-up-05
                                 :ARG0 (c34-5 / it)
                                 :ARG1 (c34-1 / reality))
                    :ARG1-of (c34-6 / real-04)
                    :polarity -))

# ::snt No idea what this is about, but what a great coat.
# ::tokens ["No", "idea", "what", "this", "is", "about", ",", "but", "what", "a", "great", "coat", "."]
# ::lemmas ["no", "idea", "what", "this", "be", "about", ",", "but", "what", "a", "great", "coat", "."]
(c35-3 / contrast-01
       :ARG1 (c35-2 / have-03
                    :ARG0 (c35-4 / i)
                    :ARG1 (c35-1 / idea
                                 :topic (c35-5 / thing
                                               :topic-of (c35-8 / this)))
                    :polarity -)
       :ARG2 (c35-7 / coat
                    :mod (c35-6 / great
                                :degree (c35-0 / so))))

# ::snt Not to worry; there is still a lot of "Scandal" going on in Trump's Russia White House.
# ::tokens ["Not", "to", "worry", ";", "there", "is", "still", "a", "lot", "of", "\"", "Scandal", "\"", "going", "on", "in", "Trump", "'s", "Russia", "White", "House", "."]
# ::lemmas ["not", "to", "worry", ";", "there", "be", "still", "a", "lot", "of", "\"", "Scandal", "\"", "go", "on", "in", "Trump", "'s", "Russia", "White", "House", "."]
(c36-7 / worry-02
       :ARG1-of (c36-8 / cause-01
                       :ARG0 (c36-10 / go-on-15
                                     :ARG1 (c36-2 / scandal
                                                  :quant (c36-4 / lot))
                                     :time (c36-0 / still)
                                     :location (c36-9 / government-organization
                                                      :name (c36-1 / name
                                                                   :op1 "White"
                                                                   :op2 "House")
                                                      :poss (c36-5 / person
                                                                   :name (c36-3 / name
                                                                                :op1 "Trump"))
                                                      :mod (c36-11 / country
                                                                   :name (c36-6 / name
                                                                                :op1 "Russia")))))
       :polarity -)

# ::snt It's time. The story line is no longer exciting to me.
# ::tokens ["It", "'s", "time", ".", "The", "story", "line", "is", "no", "longer", "exciting", "to", "me", "."]
# ::lemmas ["it", "be", "time", ".", "the", "story", "line", "be", "no", "long", "exciting", "to", "i", "."]
(c37-1 / multi-sentence
       :snt1 (c37-0 / be-temporally-at-91
                    :ARG1 (c37-7 / it))
       :snt2 (c37-5 / excite-01
                    :ARG0 (c37-6 / line
                                 :mod (c37-3 / story))
                    :ARG1 (c37-4 / i)
                    :time (c37-2 / no-longer)))

# ::snt NOOOOOOOOOOO
# ::tokens ["NOOOOOOOOOOO"]
# ::lemmas ["nooooooooooo"]
(c38-0 / no)

# ::snt Fatigue du boulot lol
# ::tokens ["Fatigue", "du", "boulot", "lol"]
# ::lemmas ["fatigue", "du", "boulot", "lol"]
(c39-1 / laugh-01
       :ARG0 (c39-2 / i)
       :manner (c39-0 / fatigue
                      :mod (c39-3 / du))
       :ARG2 c39-1
       :ARG0 c39-2
       :manner (c39-4 / loud)
       :mode expressive)

# ::snt ca va je te pardonne ahah
# ::tokens ["ca", "va", "je", "te", "pardonne", "ahah"]
# ::lemmas ["can", "va", "je", "te", "pardonne", "ahah"]
(c40-1 / possible-01
       :ARG1 (c40-2 / pardon-01
                    :ARG0 (c40-0 / you))
       :mod (c40-3 / ahah
                   :mode expressive))

# ::snt Are plutt lol
# ::tokens ["Are", "plutt", "lol"]
# ::lemmas ["be", "plutt", "lol"]
(c41-1 / have-concession-91
       :ARG1 (c41-0 / no)
       :ARG2 (c41-2 / laugh-01
                    :ARG0 (c41-3 / i)
                    :manner (c41-4 / loud)
                    :mode expressive))

# ::snt Oui c'est vrai t'as raison.
# ::tokens ["Oui", "c'est", "vrai", "t'as", "raison", "."]
# ::lemmas ["oui", "c'est", "vrai", "t'as", "raison", "."]
(c42-1 / vrai-00
       :ARG0 (c42-2 / amr-unintelligible
                    :value "Oui")
       :ARG1 (c42-0 / raison))

# ::snt rponse la semaine prochaine ! mais l'avantage ils pourront prparer le terrain en prenant les devants comme a !
# ::tokens ["rponse", "la", "semaine", "prochaine", "!", "mais", "l'avantage", "ils", "pourront", "prparer", "le", "terrain", "en", "prenant", "les", "devants", "comme", "a", "!"]
# ::lemmas ["rponse", "la", "semaine", "prochaine", "!", "mais", "l'avantage", "il", "pourront", "prparer", "le", "terrain", "en", "prenant", "le", "devant", "comme", "a", "!"]
(c43-0 / multi-sentence
       :snt1 (c43-3 / reponse-01
                    :ARG0 (c43-5 / person)
                    :ARG1 (c43-1 / person
                                 :name (c43-2 / name
                                              :op1 "la"
                                              :op2 "Semaine"
                                              :op3 "Prochaine"))
                    :mode expressive)
       :snt2 (c43-9 / pourront-15
                    :ARG1 (c43-6 / person
                                 :mod (c43-8 / il)
                                 :ARG0-of (c43-4 / avall-01))
                    :ARG2 (c43-10 / pay-01
                                  :ARG0 c43-6
                                  :ARG3 (c43-7 / terrain
                                               :poss c43-6))
                    :manner (c43-13 / permanent
                                    :domain (c43-14 / person
                                                    :ARG0-of (c43-11 / devant-01)))
                    :ARG1-of (c43-12 / request-confirmation-91)))

# ::snt Je vais mourir si a devait s'avrer tre la vrit...
# ::tokens ["Je", "vais", "mourir", "si", "a", "devait", "s'avrer", "tre", "la", "vrit", "..."]
# ::lemmas ["Je", "vais", "mourir", "si", "a", "devait", "s'avrer", "tre", "la", "vrit", "..."]
(c44-5 / cause-01
       :ARG0 (c44-6 / amr-unknown)
       :ARG1 (c44-7 / devait-01
                    :ARG0 (c44-4 / person
                                 :name (c44-0 / name
                                              :op1 "Je"
                                              :op2 "Mourir"))
                    :ARG1 (c44-1 / person
                                 :ARG0-of (c44-2 / vieve-01
                                                 :ARG1 (c44-8 / person
                                                              :name (c44-3 / name
                                                                           :op1 "Vrit"))))))

# ::snt ca reste confirmer mais c'est la rumeur du soir ^^ mais a serait intelligent comme dcision
# ::tokens ["ca", "reste", "confirmer", "mais", "c'est", "la", "rumeur", "du", "soir", "^^", "mais", "a", "serait", "intelligent", "comme", "dcision"]
# ::lemmas ["can", "reste", "confirmer", "mais", "c'est", "la", "rumeur", "du", "soir", "^^", "mais", "a", "serait", "intelligent", "comme", "dcision"]
(c45-3 / multi-sentence
       :snt1 (c45-8 / cause-01
                    :ARG0 (c45-12 / amr-unknown)
                    :ARG1 (c45-6 / rest-01
                                 :ARG1 (c45-7 / possible-01
                                              :ARG1 (c45-15 / confirmer-01))))
       :snt2 (c45-10 / cause-01
                     :ARG0 (c45-11 / amr-unknown)
                     :ARG1 (c45-5 / sense-01
                                  :ARG1 (c45-14 / rumeur
                                                :domain (c45-1 / soir))))
       :snt3 (c45-0 / cause-01
                    :ARG0 (c45-9 / amr-unknown)
                    :ARG1 (c45-4 / possible-01
                                 :ARG1 (c45-13 / intelligent-01
                                               :ARG1 (c45-2 / comme-dcision)))))

# ::snt ?????
# ::tokens ["?", "?", "?", "?", "?"]
# ::lemmas ["?", "?", "?", "?", "?"]
(c46-0 / amr-unknown)

# ::snt Woah!
# ::tokens ["Woah", "!"]
# ::lemmas ["Woah", "!"]
(c47-0 / Woah
       :mode expressive)

# ::snt As it should it is amazing and needs to end on a good not not be beaten to death
# ::tokens ["As", "it", "should", "it", "is", "amazing", "and", "needs", "to", "end", "on", "a", "good", "not", "not", "be", "beaten", "to", "death"]
# ::lemmas ["as", "it", "should", "it", "be", "amazing", "and", "need", "to", "end", "on", "a", "good", "not", "not", "be", "beat", "to", "death"]
(c48-2 / recommend-01
       :ARG1 (c48-3 / and
                    :op1 (c48-7 / amaze-01
                                :ARG0 (c48-6 / it))
                    :op2 (c48-1 / need-01
                                :ARG0 c48-6
                                :ARG1 (c48-4 / end-01
                                             :ARG1 c48-6
                                             :ARG2 (c48-8 / good-02))
                                :ARG1-of (c48-5 / contrast-01
                                                :ARG2 (c48-0 / beat-01
                                                             :ARG1 c48-6
                                                             :ARG2 (c48-9 / die-01
                                                                          :ARG1 c48-6)
                                                             :polarity -)))))

# ::snt Real tears
# ::tokens ["Real", "tears"]
# ::lemmas ["real", "tear"]
(c49-1 / tear
       :ARG1-of (c49-0 / real-04))

# ::snt But. No. RT : Report: 'Scandal' will end next year with its th season
# ::tokens ["But", ".", "No", ".", "RT", ":", "Report", ":", "'", "Scandal", "'", "will", "end", "next", "year", "with", "its", "th", "season"]
# ::lemmas ["but", ".", "no", ".", "RT", ":", "report", ":", "'", "scandal", "'", "will", "end", "next", "year", "with", "its", "th", "season"]
(c50-4 / multi-sentence
       :snt1 (c50-11 / contrast-01
                     :ARG2 (c50-3 / no))
       :snt2 (c50-9 / publication
                    :name (c50-8 / name
                                 :op1 "RT")
                    :ARG0-of (c50-6 / report-01
                                    :ARG1 (c50-7 / end-01
                                                 :ARG1 (c50-5 / scandal)
                                                 :ARG2 (c50-0 / season
                                                              :ord (c50-1 / ordinal-entity
                                                                          :value 2)
                                                              :poss c50-5)
                                                 :time (c50-2 / year
                                                              :mod (c50-10 / next))))))
