# ::snt Well if trumps bully ass can't take it then he doesn't need to dish it
# ::tokens ["Well", "if", "trumps", "bully", "ass", "ca", "n't", "take", "it", "then", "he", "does", "n't", "need", "to", "dish", "it"]
# ::lemmas ["well", "if", "trump", "bully", "ass", "can", "not", "take", "it", "then", "he", "do", "not", "need", "to", "dish", "it"]
(c1-1 / need-01
      :ARG0 (c1-3 / person
                  :ARG0-of (c1-5 / trash-01
                                 :ARG1 (c1-7 / ass
                                             :ARG0-of (c1-0 / bully-01))))
      :ARG1 (c1-8 / dish-01
                  :ARG0 c1-3
                  :ARG1 (c1-6 / it))
      :condition (c1-2 / possible-01
                       :ARG1 (c1-9 / take-02
                                   :ARG0 c1-3
                                   :ARG1 c1-6)
                       :polarity -)
      :mod (c1-4 / well)
      :polarity -)

# ::snt I think we know who has the Emmy's here and who has been nominated but lost.
# ::tokens ["I", "think", "we", "know", "who", "has", "the", "Emmy", "'s", "here", "and", "who", "has", "been", "nominated", "but", "lost", "."]
# ::lemmas ["i", "think", "we", "know", "who", "have", "the", "Emmy", "'s", "here", "and", "who", "have", "be", "nominate", "but", "lose", "."]
(c2-10 / think-01
       :ARG0 (c2-11 / i)
       :ARG1 (c2-3 / know-01
                   :ARG0 (c2-7 / we)
                   :ARG1 (c2-12 / and
                                :op1 (c2-4 / person
                                           :ARG0-of (c2-2 / have-org-role-91
                                                          :ARG1 (c2-13 / award
                                                                       :name (c2-0 / name
                                                                                   :op1 "Emmy's")))
                                           :location (c2-9 / here))
                                :op2 (c2-1 / person
                                           :ARG1-of (c2-5 / nominate-01
                                                          :ARG1-of (c2-8 / contrast-01
                                                                         :ARG2 (c2-6 / lose-03
                                                                                     :ARG1 c2-1)))))))

# ::snt Colbert is a southern rich ass married rich, who follows republican ways but is not a republican? Lives n mont Clair NJ wit all republicans
# ::tokens ["Colbert", "is", "a", "southern", "rich", "ass", "married", "rich", ",", "who", "follows", "republican", "ways", "but", "is", "not", "a", "republican", "?", "Lives", "n", "mont", "Clair", "NJ", "wit", "all", "republicans"]
# ::lemmas ["Colbert", "be", "a", "southern", "rich", "ass", "marry", "rich", ",", "who", "follow", "republican", "way", "but", "be", "not", "a", "republican", "?", "life", "n", "mont", "Clair", "NJ", "wit", "all", "republican"]
(c3-11 / multi-sentence
       :snt1 (c3-19 / person
                    :name (c3-17 / name
                                 :op1 "Colbert")
                    :mod (c3-18 / rich
                                :mod (c3-0 / south))
                    :mod (c3-9 / ass
                               :ARG1-of (c3-5 / marry-01))
                    :ARG0-of (c3-16 / follow-02
                                    :ARG1 (c3-21 / way
                                                 :mod (c3-12 / political-party
                                                             :name (c3-13 / name
                                                                          :op1 "Republican")))
                                    :ARG1-of (c3-14 / contrast-01
                                                    :ARG2 (c3-6 / have-org-role-91
                                                                :ARG0 c3-19
                                                                :ARG1 c3-12
                                                                :polarity -)))
                    :mod (c3-3 / rich))
       :snt2 (c3-8 / and
                   :op1 (c3-1 / live-01
                              :location (c3-10 / city
                                               :name (c3-20 / name
                                                            :op1 "Mont"
                                                            :op2 "Clair")
                                               :location (c3-4 / state
                                                               :name (c3-15 / name
                                                                            :op1 "New"
                                                                            :op2 "Jersey"))))
                   :op2 (c3-2 / person
                              :mod (c3-7 / all)
                              :mod c3-12)))

# ::snt ?? How can he be scary and a joke at the same time? Isn't that hypothetical? Oh wait I forgot who I was replying to.
# ::tokens ["?", "?", "How", "can", "he", "be", "scary", "and", "a", "joke", "at", "the", "same", "time", "?", "Is", "n't", "that", "hypothetical", "?", "Oh", "wait", "I", "forgot", "who", "I", "was", "replying", "to", "."]
# ::lemmas ["?", "?", "how", "can", "he", "be", "scary", "and", "a", "joke", "at", "the", "same", "time", "?", "be", "not", "that", "hypothetical", "?", "oh", "wait", "i", "forgot", "who", "i", "be", "reply", "to", "."]
(c4-3 / multi-sentence
      :snt1 (c4-8 / possible-01
                  :ARG1 (c4-13 / and
                               :op1 (c4-5 / scary-03
                                          :ARG0 (c4-7 / he))
                               :op2 (c4-11 / joke-01
                                           :ARG2 c4-7)
                               :time (c4-12 / time
                                            :ARG1-of (c4-0 / same-01))
                               :manner (c4-14 / amr-unknown)))
      :snt2 (c4-10 / hypothetical-02
                   :ARG1 (c4-17 / that)
                   :ARG1-of (c4-6 / request-confirmation-91)
                   :polarity -)
      :snt3 (c4-9 / wait-01
                  :ARG1 (c4-15 / i)
                  :mod (c4-1 / oh))
      :snt4 (c4-2 / forget-01
                  :ARG0 c4-15
                  :ARG1 (c4-4 / person
                              :ARG2-of (c4-16 / reply-01
                                              :ARG0 c4-15))))

# ::snt That's true! But that's what makes life scary. That's something we can't laugh about. Trump has become a joke of a president!
# ::tokens ["That", "'s", "true", "!", "But", "that", "'s", "what", "makes", "life", "scary", ".", "That", "'s", "something", "we", "ca", "n't", "laugh", "about", ".", "Trump", "has", "become", "a", "joke", "of", "a", "president", "!"]
# ::lemmas ["that", "be", "true", "!", "but", "that", "be", "what", "make", "life", "scary", ".", "that", "be", "something", "we", "can", "not", "laugh", "about", ".", "Trump", "have", "become", "a", "joke", "of", "a", "president", "!"]
(c5-12 / multi-sentence
       :snt1 (c5-9 / true-01
                   :ARG1 (c5-15 / that))
       :snt2 (c5-14 / contrast-01
                    :ARG2 (c5-6 / make-02
                                :ARG0 (c5-19 / that)
                                :ARG1 (c5-0 / scary-03
                                            :ARG0 (c5-2 / life))))
       :snt3 (c5-17 / possible-01
                    :ARG1 (c5-10 / laugh-01
                                 :ARG0 (c5-18 / we)
                                 :ARG2 (c5-5 / something
                                             :domain (c5-1 / that)))
                    :polarity -)
       :snt4 (c5-11 / become-01
                    :ARG1 (c5-13 / person
                                 :name (c5-16 / name
                                              :op1 "Trump"))
                    :ARG2 (c5-8 / joke-01
                                :ARG2 (c5-4 / person
                                            :ARG0-of (c5-7 / have-org-role-91
                                                           :ARG2 (c5-3 / president))))))

# ::snt Trump does have something that Colbert never will have...the title of President of the United States.
# ::tokens ["Trump", "does", "have", "something", "that", "Colbert", "never", "will", "have", "...", "the", "title", "of", "President", "of", "the", "United", "States", "."]
# ::lemmas ["Trump", "do", "have", "something", "that", "Colbert", "never", "will", "have", "...", "the", "title", "of", "President", "of", "the", "United", "States", "."]
(c6-4 / have-03
      :ARG0 (c6-5 / person
                  :name (c6-0 / name
                              :op1 "Trump"))
      :ARG1 (c6-2 / something
                  :ARG1-of (c6-11 / have-03
                                  :ARG0 (c6-1 / person
                                              :name (c6-6 / name
                                                          :op1 "Colbert"))
                                  :time (c6-3 / ever)
                                  :polarity -)
                  :domain (c6-12 / title-01
                                 :ARG2 (c6-13 / person
                                              :ARG0-of (c6-7 / have-org-role-91
                                                             :ARG1 (c6-9 / country
                                                                         :name (c6-8 / name
                                                                                     :op1 "United"
                                                                                     :op2 "States"))
                                                             :ARG2 (c6-10 / president))))))

# ::snt no talent grumpy mouth shouldn't be the president
# ::tokens ["no", "talent", "grumpy", "mouth", "should", "n't", "be", "the", "president"]
# ::lemmas ["no", "talent", "grumpy", "mouth", "should", "not", "be", "the", "president"]
(c7-2 / recommend-01
      :ARG1 (c7-4 / person
                  :ARG0-of (c7-3 / have-org-role-91
                                 :ARG2 (c7-1 / president))
                  :domain (c7-0 / mouth
                                :mod (c7-6 / grumpy)
                                :mod (c7-5 / talent
                                           :polarity -)))
      :polarity -)

# ::snt Guessing trump can't handle the truth.
# ::tokens ["Guessing", "trump", "ca", "n't", "handle", "the", "truth", "."]
# ::lemmas ["guess", "trump", "can", "not", "handle", "the", "truth", "."]
(c8-5 / guess-01
      :ARG1 (c8-3 / possible-01
                  :ARG1 (c8-2 / handle-01
                              :ARG0 (c8-1 / person
                                          :name (c8-0 / name
                                                      :op1 " trump"))
                              :ARG1 (c8-4 / truth))
                  :polarity -))

# ::snt Of course he did Trumps thin skin is showing again
# ::tokens ["Of", "course", "he", "did", "Trumps", "thin", "skin", "is", "showing", "again"]
# ::lemmas ["of", "course", "he", "do", "Trumps", "thin", "skin", "be", "show", "again"]
(c9-6 / do-02
      :ARG0 (c9-4 / he)
      :ARG1 (c9-2 / show-01
                  :ARG1 (c9-0 / skin
                              :ARG1-of (c9-5 / thin-03)
                              :poss c9-4)
                  :mod (c9-3 / again))
      :mod (c9-1 / of-course))

# ::snt Hahaha "no talent guy " are The Donald's only remark he can come up with when he wants to insult someone!!! I laughed every time!!
# ::tokens ["Hahaha", "\"", "no", "talent", "guy", "\"", "are", "The", "Donald", "'s", "only", "remark", "he", "can", "come", "up", "with", "when", "he", "wants", "to", "insult", "someone", "!", "!", "!", "I", "laughed", "every", "time", "!", "!"]
# ::lemmas ["Hahaha", "\"", "no", "talent", "guy", "\"", "be", "the", "Donald", "'s", "only", "remark", "he", "can", "come", "up", "with", "when", "he", "want", "to", "insult", "someone", "!", "!", "!", "i", "laugh", "every", "time", "!", "!"]
(c10-2 / multi-sentence
       :snt1 (c10-5 / remark-01
                    :ARG0 (c10-9 / person
                                 :name (c10-1 / name
                                              :op1 "The"
                                              :op2 "Donald"))
                    :ARG1 (c10-15 / guy
                                  :mod (c10-14 / talent)
                                  :polarity -)
                    :mod (c10-0 / only)
                    :ARG1-of (c10-11 / come-up-11
                                     :ARG0 c10-9
                                     :ARG1-of (c10-3 / possible-01)
                                     :time (c10-12 / want-01
                                                   :ARG0 c10-9
                                                   :ARG1 (c10-13 / insult-01
                                                                 :ARG0 c10-9
                                                                 :ARG1 (c10-4 / someone))))
                    :mod (c10-8 / haha
                                :mode expressive))
       :snt2 (c10-10 / laugh-01
                     :ARG0 (c10-6 / i)
                     :frequency (c10-16 / time
                                        :mod (c10-7 / every))))

# ::snt Ya whatever. Freedom of speech! Trump can grab pussys and that's ok? Bite me!
# ::tokens ["Ya", "whatever", ".", "Freedom", "of", "speech", "!", "Trump", "can", "grab", "pussys", "and", "that", "'s", "ok", "?", "Bite", "me", "!"]
# ::lemmas ["ya", "whatever", ".", "freedom", "of", "speech", "!", "Trump", "can", "grab", "pussy", "and", "that", "be", "ok", "?", "bite", "i", "!"]
(c11-4 / multi-sentence
       :snt1 (c11-9 / whatever)
       :snt2 (c11-0 / free-04
                    :ARG3 (c11-6 / speak-01))
       :snt3 (c11-11 / and
                     :op1 (c11-8 / possible-01
                                 :ARG1 (c11-12 / grab-01
                                               :ARG0 (c11-5 / person
                                                            :name (c11-7 / name
                                                                         :op1 "Trump"))
                                               :ARG1 (c11-14 / pussy)))
                     :op2 (c11-1 / okay-04
                                 :ARG1 c11-12)
                     :polarity (c11-10 / amr-unknown))
       :snt4 (c11-2 / bite-01
                    :ARG0 (c11-3 / you)
                    :ARG1 (c11-13 / i)
                    :mode imperative))

# ::snt We don't need Trump to tell us that this dickhead Colbert is the most untalented "comedian" I've ever seen, I wouldn't let him walk my dog!!
# ::tokens ["We", "do", "n't", "need", "Trump", "to", "tell", "us", "that", "this", "dickhead", "Colbert", "is", "the", "most", "untalented", "\"", "comedian", "\"", "I", "'ve", "ever", "seen", ",", "I", "would", "n't", "let", "him", "walk", "my", "dog", "!", "!"]
# ::lemmas ["we", "do", "not", "need", "Trump", "to", "tell", "we", "that", "this", "dickhead", "Colbert", "be", "the", "most", "untalented", "\"", "comedian", "\"", "i", "'ve", "ever", "see", ",", "i", "would", "not", "let", "he", "walk", "my", "dog", "!", "!"]
(c12-5 / and
       :op1 (c12-13 / need-01
                    :ARG0 (c12-17 / we)
                    :ARG1 (c12-6 / tell-01
                                 :ARG0 (c12-15 / person
                                               :name (c12-9 / name
                                                            :op1 "Trump"))
                                 :ARG1 (c12-4 / have-degree-91
                                              :ARG1 (c12-8 / person
                                                           :name (c12-16 / name
                                                                         :op1 "Colbert")
                                                           :mod (c12-20 / dickhead)
                                                           :mod (c12-12 / this))
                                              :ARG2 (c12-18 / Talented
                                                            :polarity -)
                                              :ARG3 (c12-7 / most)
                                              :ARG5 (c12-3 / person
                                                           :ARG0-of (c12-0 / see-01
                                                                           :ARG1 (c12-10 / comedian)
                                                                           :time (c12-14 / ever))))
                                 :ARG2 c12-17)
                    :polarity -)
       :op2 (c12-1 / let-01
                   :ARG0 (c12-19 / i)
                   :ARG1 (c12-2 / walk-01
                                :ARG0 c12-8
                                :ARG1 (c12-11 / dog
                                              :poss c12-19))
                   :polarity -))

# ::snt Hes just mad you have more ratings than him.
# ::tokens ["He", "s", "just", "mad", "you", "have", "more", "ratings", "than", "him", "."]
# ::lemmas ["he", "s", "just", "mad", "you", "have", "more", "rating", "than", "he", "."]
(c14-1 / mad-04
       :ARG0 (c14-4 / have-03
                    :ARG0 (c14-0 / you)
                    :ARG1 (c14-2 / rate-01
                                 :ARG1 c14-0
                                 :ARG1-of (c14-6 / have-quant-91
                                                 :ARG3 (c14-5 / more)
                                                 :ARG4 (c14-8 / rate-01
                                                              :ARG1 (c14-3 / he
                                                                           :ARG1-of c14-1)))))
       :mod (c14-7 / just))

# ::snt Colbert has talent! He's a real comedian and funny. Trump has talent! He's a con artist and lies all the time!
# ::tokens ["Colbert", "has", "talent", "!", "He", "'s", "a", "real", "comedian", "and", "funny", ".", "Trump", "has", "talent", "!", "He", "'s", "a", "con", "artist", "and", "lies", "all", "the", "time", "!"]
# ::lemmas ["Colbert", "have", "talent", "!", "he", "be", "a", "real", "comedian", "and", "funny", ".", "Trump", "have", "talent", "!", "he", "be", "a", "con", "artist", "and", "lie", "all", "the", "time", "!"]
(c15-8 / multi-sentence
       :snt1 (c15-2 / have-03
                    :ARG0 (c15-17 / person
                                  :name (c15-15 / name
                                                :op1 "Colbert"))
                    :ARG1 (c15-6 / talent))
       :snt2 (c15-5 / and
                    :op1 (c15-11 / comedian
                                 :ARG1-of (c15-16 / real-04)
                                 :domain (c15-18 / he))
                    :op2 (c15-14 / funny-02
                                 :ARG1 c15-18))
       :snt3 (c15-1 / have-03
                    :ARG0 (c15-9 / person
                                 :name (c15-10 / name
                                               :op1 "Trump"))
                    :ARG1 (c15-12 / talent))
       :snt4 (c15-4 / and
                    :op1 (c15-3 / artist
                                :mod (c15-7 / con-03)
                                :domain (c15-13 / he))
                    :op2 (c15-0 / lie-08
                                :ARG0 c15-13
                                :frequency (c15-19 / time
                                                   :mod (c15-20 / all)))))

# ::snt Just remember Colbert what goes around, COMES around!!!
# ::tokens ["Just", "remember", "Colbert", "what", "goes", "around", ",", "COMES", "around", "!", "!", "!"]
# ::lemmas ["just", "remember", "Colbert", "what", "go", "around", ",", "come", "around", "!", "!", "!"]
(c16-1 / remember-01
       :ARG0 (c16-0 / you)
       :ARG1 (c16-2 / and
                    :op1 (c16-7 / thing
                                :ARG1-of (c16-8 / go-06
                                                :ARG2 (c16-6 / around)))
                    :op2 (c16-3 / come-01
                                :direction (c16-4 / around)
                                :mode expressive))
       :mod (c16-5 / just)
       :mode imperative)

# ::snt He don't know shit don't care what he thinks
# ::tokens ["He", "do", "n't", "know", "shit", "do", "n't", "care", "what", "he", "thinks"]
# ::lemmas ["he", "do", "not", "know", "shit", "do", "not", "care", "what", "he", "think"]
(c17-2 / know-01
       :ARG0 (c17-1 / he)
       :ARG1 (c17-0 / shit)
       :ARG0-of (c17-3 / care-01
                       :ARG1 (c17-4 / thing
                                    :ARG1-of (c17-5 / think-01
                                                    :ARG0 c17-1))
                       :polarity -)
       :polarity -)
