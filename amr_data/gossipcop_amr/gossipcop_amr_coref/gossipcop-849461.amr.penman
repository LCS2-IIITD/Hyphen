# ::snt meeting Liam would make us the happiest girls in the world, please help and I meet him after years of trying
# ::tokens ["meeting", "Liam", "would", "make", "us", "the", "happiest", "girls", "in", "the", "world", ",", "please", "help", "and", "I", "meet", "him", "after", "years", "of", "trying"]
# ::lemmas ["meet", "Liam", "would", "make", "we", "the", "happy", "girl", "in", "the", "world", ",", "please", "help", "and", "i", "meet", "he", "after", "years", "of", "try"]
(c1-7 / and
      :op1 (c1-10 / make-02
                  :ARG0 (c1-2 / meet-03
                              :ARG0 (c1-19 / i)
                              :ARG1 (c1-16 / person
                                           :name (c1-15 / name
                                                        :op1 "Liam")))
                  :ARG1 (c1-3 / have-degree-91
                              :ARG1 (c1-8 / girl)
                              :ARG2 (c1-18 / happy-01
                                           :ARG1 c1-8)
                              :ARG3 (c1-14 / most)
                              :ARG5 c1-8
                              :location (c1-17 / world)))
      :op2 (c1-5 / and
                 :op1 (c1-1 / help-01
                            :ARG0 (c1-0 / you)
                            :mode imperative
                            :polite +)
                 :op2 (c1-11 / meet-03
                             :ARG0 c1-19
                             :ARG1 c1-16
                             :time (c1-4 / after
                                         :op1 (c1-6 / try-01
                                                    :ARG0 c1-19
                                                    :ARG1 c1-16
                                                    :duration (c1-13 / multiple
                                                                     :op1 (c1-12 / temporal-quantity
                                                                                 :unit (c1-9 / year)
                                                                                 :quant 1)))))))

# ::snt how and I are gnna be if you choose us, pls make us the happiest ppl ever
# ::tokens ["how", "and", "I", "are", "gnna", "be", "if", "you", "choose", "us", ",", "pls", "make", "us", "the", "happiest", "ppl", "ever"]
# ::lemmas ["how", "and", "i", "be", "gnna", "be", "if", "you", "choose", "we", ",", "pls", "make", "we", "the", "happy", "ppl", "ever"]
(c2-10 / and
       :op1 (c2-3 / have-condition-91
                  :ARG1 (c2-11 / gnat
                               :domain (c2-9 / i))
                  :ARG2 (c2-6 / choose-01
                              :ARG0 (c2-0 / you)
                              :ARG1 (c2-7 / we)))
       :op2 (c2-1 / make-02
                  :ARG0 c2-0
                  :ARG1 (c2-8 / happy-01
                              :ARG1 c2-7
                              :time (c2-2 / ever)
                              :ARG2-of (c2-4 / have-degree-91
                                             :ARG1 c2-7
                                             :ARG3 (c2-5 / most)))
                  :mode imperative
                  :polite +))

# ::snt Please make and I the happiest girls in the world by picking us, it would mean everything
# ::tokens ["Please", "make", "and", "I", "the", "happiest", "girls", "in", "the", "world", "by", "picking", "us", ",", "it", "would", "mean", "everything"]
# ::lemmas ["please", "make", "and", "i", "the", "happy", "girl", "in", "the", "world", "by", "pick", "we", ",", "it", "would", "mean", "everything"]
(c3-1 / make-02
      :ARG0 (c3-0 / you)
      :ARG1 (c3-3 / have-degree-91
                  :ARG1 (c3-9 / and
                              :op1 (c3-10 / girl)
                              :op2 (c3-8 / i))
                  :ARG2 (c3-7 / happy-01
                              :ARG1 c3-9)
                  :ARG3 (c3-4 / most)
                  :ARG5 (c3-11 / girl
                               :location (c3-6 / world)))
      :manner (c3-5 / pick-01
                    :ARG0 c3-0
                    :ARG1 c3-9)
      :ARG1-of (c3-12 / mean-01
                      :ARG2 (c3-2 / everything))
      :mode imperative
      :polite +)

# ::snt is the contest to meet liam still going on?
# ::tokens ["is", "the", "contest", "to", "meet", "liam", "still", "going", "on", "?"]
# ::lemmas ["be", "the", "contest", "to", "meet", "liam", "still", "go", "on", "?"]
(c4-2 / contest-02
      :ARG3 (c4-0 / meet-03
                  :ARG0 (c4-3 / i))
      :ARG1-of (c4-5 / go-on-15
                     :ARG0 c4-3
                     :mod (c4-1 / still))
      :polarity (c4-4 / amr-unknown))

# ::snt I've tweeted you guys over times, if that isn't dedication idk what is my hands are cramping
# ::tokens ["I", "'ve", "tweeted", "you", "guys", "over", "times", ",", "if", "that", "is", "n't", "dedication", "idk", "what", "is", "my", "hands", "are", "cramping"]
# ::lemmas ["i", "'ve", "tweet", "you", "guy", "over", "time", ",", "if", "that", "be", "not", "dedication", "idk", "what", "be", "my", "hand", "be", "cramp"]
(c5-2 / multi-sentence
      :snt1 (c5-9 / tweet-02
                  :ARG0 (c5-8 / i)
                  :ARG2 (c5-10 / guy
                               :mod (c5-1 / you))
                  :frequency (c5-0 / over-and-over))
      :snt2 (c5-5 / have-condition-91
                  :ARG1 (c5-6 / cramp-01
                              :ARG1 (c5-7 / hand
                                          :part-of (c5-3 / i))
                              :mod (c5-4 / amr-unknown))
                  :ARG2 (c5-11 / dedicate-01
                               :polarity -)))

# ::snt this will be how happy and I will be if we win this contest, please pick us it would mean everything
# ::tokens ["this", "will", "be", "how", "happy", "and", "I", "will", "be", "if", "we", "win", "this", "contest", ",", "please", "pick", "us", "it", "would", "mean", "everything"]
# ::lemmas ["this", "will", "be", "how", "happy", "and", "i", "will", "be", "if", "we", "win", "this", "contest", ",", "please", "pick", "we", "it", "would", "mean", "everything"]
(c6-11 / and
       :op1 (c6-10 / and
                   :op1 (c6-4 / happy-01
                              :ARG0 (c6-7 / win-01
                                          :ARG0 (c6-6 / we)
                                          :ARG1 (c6-8 / contest-02
                                                      :mod (c6-9 / this)))
                              :degree (c6-2 / so)
                              :op2-of c6-10)
                   :ARG0 c6-7
                   :ARG1 (c6-12 / i))
       :condition c6-7
       :op2 (c6-5 / pick-01
                  :ARG0 (c6-0 / you)
                  :ARG1 c6-6
                  :ARG1-of (c6-1 / mean-01
                                 :ARG2 (c6-3 / everything))
                  :mode imperative
                  :polite +))

# ::snt thank you for this opportunity, it would mean the world for and I
# ::tokens ["thank", "you", "for", "this", "opportunity", ",", "it", "would", "mean", "the", "world", "for", "and", "I"]
# ::lemmas ["thank", "you", "for", "this", "opportunity", ",", "it", "would", "mean", "the", "world", "for", "and", "i"]
(c7-5 / thank-01
      :ARG0 (c7-6 / i)
      :ARG1 (c7-1 / you)
      :ARG2 (c7-0 / opportunity
                  :mod (c7-7 / this))
      :ARG1-of (c7-2 / mean-01
                     :ARG2 (c7-3 / and
                                 :op1 (c7-4 / world)
                                 :op2 c7-6)))

# ::snt so so so greatful for this opportunity, it would be amazing to meet liam after years with my bestfriend
# ::tokens ["so", "so", "so", "greatful", "for", "this", "opportunity", ",", "it", "would", "be", "amazing", "to", "meet", "liam", "after", "years", "with", "my", "bestfriend"]
# ::lemmas ["so", "so", "so", "greatful", "for", "this", "opportunity", ",", "it", "would", "be", "amazing", "to", "meet", "liam", "after", "years", "with", "my", "bestfriend"]
(c8-15 / greatful
       :degree (c8-6 / so)
       :purpose (c8-0 / opportunity
                      :mod (c8-14 / this))
       :degree (c8-1 / so)
       :ARG0-of (c8-12 / cause-01
                       :ARG1 (c8-8 / amaze-01
                                   :ARG0 (c8-4 / meet-03
                                               :ARG0 (c8-13 / i)
                                               :ARG1 (c8-10 / person
                                                            :name (c8-5 / name
                                                                        :op1 "iam"))
                                               :time (c8-16 / after
                                                            :op1 (c8-9 / multiple
                                                                       :op1 (c8-17 / temporal-quantity
                                                                                   :unit (c8-3 / year)
                                                                                   :quant 1)))
                                               :accompanier (c8-7 / person
                                                                  :ARG0-of (c8-11 / have-rel-role-91
                                                                                  :ARG1 c8-13
                                                                                  :ARG2 (c8-2 / bestfriend)))))))

# ::snt i promise i'd be the most grateful person in the world if given the opportunity to meet , pretty please
# ::tokens ["i", "promise", "i", "'d", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "given", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
# ::lemmas ["i", "promise", "i", "would", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "give", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
(c9-4 / promise-01
      :ARG0 (c9-9 / i)
      :ARG1 (c9-3 / have-condition-91
                  :ARG1 (c9-8 / have-degree-91
                              :ARG1 c9-9
                              :ARG2 (c9-10 / appreciate-02
                                           :ARG0 c9-9)
                              :ARG3 (c9-1 / most)
                              :ARG5 (c9-2 / person
                                          :location (c9-6 / world)))
                  :ARG2 (c9-11 / give-01
                               :ARG1 (c9-0 / opportunity
                                           :purpose (c9-5 / meet-03
                                                          :ARG0 c9-9))
                               :ARG2 c9-9
                               :mod (c9-12 / please
                                           :degree (c9-7 / pretty)))))

# ::snt I've never tweeted out so many memes before this contest, I hope y'all like it enough to pick and I
# ::tokens ["I", "'ve", "never", "tweeted", "out", "so", "many", "memes", "before", "this", "contest", ",", "I", "hope", "y'", "all", "like", "it", "enough", "to", "pick", "and", "I"]
# ::lemmas ["i", "'ve", "never", "tweet", "out", "so", "many", "meme", "before", "this", "contest", ",", "i", "hope", "you", "all", "like", "it", "enough", "to", "pick", "and", "i"]
(c10-4 / and
       :op1 (c10-14 / tweet-out-04
                    :ARG0 (c10-13 / i)
                    :ARG1 (c10-2 / meme
                                 :ARG1-of (c10-6 / have-quant-91
                                                 :ARG2 (c10-7 / many)
                                                 :ARG3 (c10-3 / so)))
                    :time (c10-5 / ever)
                    :time (c10-0 / before
                                 :op1 (c10-11 / contest-02
                                              :mod (c10-17 / this)))
                    :polarity -)
       :op2 (c10-12 / hope-01
                    :ARG0 c10-13
                    :ARG1 (c10-8 / like-01
                                 :ARG0 (c10-1 / you
                                              :mod (c10-15 / all))
                                 :ARG1 c10-2
                                 :ARG2-of (c10-9 / have-degree-91
                                                 :ARG1 c10-1
                                                 :ARG3 (c10-16 / enough)
                                                 :ARG6 (c10-10 / pick-01
                                                               :ARG0 c10-13
                                                               :ARG1 c10-2)))))

# ::snt i promise i'd be the most grateful person in the world if given the opportunity to meet , pretty please
# ::tokens ["i", "promise", "i", "'d", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "given", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
# ::lemmas ["i", "promise", "i", "would", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "give", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
(c11-4 / promise-01
       :ARG0 (c11-9 / i)
       :ARG1 (c11-3 / have-condition-91
                    :ARG1 (c11-8 / have-degree-91
                                 :ARG1 c11-9
                                 :ARG2 (c11-10 / appreciate-02
                                               :ARG0 c11-9)
                                 :ARG3 (c11-1 / most)
                                 :ARG5 (c11-2 / person
                                              :location (c11-6 / world)))
                    :ARG2 (c11-11 / give-01
                                  :ARG1 (c11-0 / opportunity
                                               :purpose (c11-5 / meet-03
                                                               :ARG0 c11-9))
                                  :ARG2 c11-9
                                  :mod (c11-12 / please
                                               :degree (c11-7 / pretty)))))

# ::snt i promise i'd be the most grateful person in the world if given the opportunity to meet , pretty please
# ::tokens ["i", "promise", "i", "'d", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "given", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
# ::lemmas ["i", "promise", "i", "would", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "give", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
(c12-4 / promise-01
       :ARG0 (c12-9 / i)
       :ARG1 (c12-3 / have-condition-91
                    :ARG1 (c12-8 / have-degree-91
                                 :ARG1 c12-9
                                 :ARG2 (c12-10 / appreciate-02
                                               :ARG0 c12-9)
                                 :ARG3 (c12-1 / most)
                                 :ARG5 (c12-2 / person
                                              :location (c12-6 / world)))
                    :ARG2 (c12-11 / give-01
                                  :ARG1 (c12-0 / opportunity
                                               :purpose (c12-5 / meet-03
                                                               :ARG0 c12-9))
                                  :ARG2 c12-9
                                  :mod (c12-12 / please
                                               :degree (c12-7 / pretty)))))

# ::snt i promise i'd be the most grateful person in the world if given the opportunity to meet , pretty please
# ::tokens ["i", "promise", "i", "'d", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "given", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
# ::lemmas ["i", "promise", "i", "would", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "give", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
(c13-4 / promise-01
       :ARG0 (c13-9 / i)
       :ARG1 (c13-3 / have-condition-91
                    :ARG1 (c13-8 / have-degree-91
                                 :ARG1 c13-9
                                 :ARG2 (c13-10 / appreciate-02
                                               :ARG0 c13-9)
                                 :ARG3 (c13-1 / most)
                                 :ARG5 (c13-2 / person
                                              :location (c13-6 / world)))
                    :ARG2 (c13-11 / give-01
                                  :ARG1 (c13-0 / opportunity
                                               :purpose (c13-5 / meet-03
                                                               :ARG0 c13-9))
                                  :ARG2 c13-9
                                  :mod (c13-12 / please
                                               :degree (c13-7 / pretty)))))

# ::snt I'd bring my sister so we can show him our D tattoos! we've loved him since &amp; it would mean so much to us!
# ::tokens ["I", "'d", "bring", "my", "sister", "so", "we", "can", "show", "him", "our", "D", "tattoos", "!", "we", "'ve", "loved", "him", "since", "&", "amp", ";", "it", "would", "mean", "so", "much", "to", "us", "!"]
# ::lemmas ["i", "would", "bring", "my", "sister", "so", "we", "can", "show", "he", "our", "D", "tattoo", "!", "we", "'ve", "love", "he", "since", "&", "amp", ";", "it", "would", "mean", "so", "much", "to", "we", "!"]
(c14-13 / multi-sentence
        :snt1 (c14-12 / bring-01
                      :ARG0 (c14-21 / i)
                      :ARG1 (c14-18 / person
                                    :ARG0-of (c14-8 / have-rel-role-91
                                                    :ARG1 c14-21
                                                    :ARG2 (c14-0 / sister)))
                      :purpose (c14-5 / show-01
                                      :ARG0 (c14-19 / we)
                                      :ARG1 (c14-11 / tattoo
                                                    :mod (c14-4 / string-entity
                                                                :value "D"))
                                      :ARG2 (c14-20 / he)))
        :snt2 (c14-10 / and
                      :op1 (c14-2 / love-01
                                  :ARG0 (c14-3 / we)
                                  :ARG1 (c14-7 / he)
                                  :time (c14-17 / since
                                                :op1 c14-10
                                                :op1 (c14-14 / person
                                                             :name (c14-16 / name
                                                                           :op1 "&"
                                                                           :op2 "amp"))))
                      :op2 (c14-9 / mean-01
                                  :ARG1 (c14-6 / it)
                                  :ARG2 (c14-15 / much
                                                :degree (c14-1 / so))
                                  :ARG3 c14-3)))

# ::snt i promise i'd be the most grateful person in the world if given the opportunity to meet , pretty please
# ::tokens ["i", "promise", "i", "'d", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "given", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
# ::lemmas ["i", "promise", "i", "would", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "give", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
(c15-4 / promise-01
       :ARG0 (c15-9 / i)
       :ARG1 (c15-3 / have-condition-91
                    :ARG1 (c15-8 / have-degree-91
                                 :ARG1 c15-9
                                 :ARG2 (c15-10 / appreciate-02
                                               :ARG0 c15-9)
                                 :ARG3 (c15-1 / most)
                                 :ARG5 (c15-2 / person
                                              :location (c15-6 / world)))
                    :ARG2 (c15-11 / give-01
                                  :ARG1 (c15-0 / opportunity
                                               :purpose (c15-5 / meet-03
                                                               :ARG0 c15-9))
                                  :ARG2 c15-9
                                  :mod (c15-12 / please
                                               :degree (c15-7 / pretty)))))

# ::snt i promise i'd be the most grateful person in the world if given the opportunity to meet , pretty please
# ::tokens ["i", "promise", "i", "'d", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "given", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
# ::lemmas ["i", "promise", "i", "would", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "give", "the", "opportunity", "to", "meet", ",", "pretty", "please"]
(c16-4 / promise-01
       :ARG0 (c16-9 / i)
       :ARG1 (c16-3 / have-condition-91
                    :ARG1 (c16-8 / have-degree-91
                                 :ARG1 c16-9
                                 :ARG2 (c16-10 / appreciate-02
                                               :ARG0 c16-9)
                                 :ARG3 (c16-1 / most)
                                 :ARG5 (c16-2 / person
                                              :location (c16-6 / world)))
                    :ARG2 (c16-11 / give-01
                                  :ARG1 (c16-0 / opportunity
                                               :purpose (c16-5 / meet-03
                                                               :ARG0 c16-9))
                                  :ARG2 c16-9
                                  :mod (c16-12 / please
                                               :degree (c16-7 / pretty)))))

# ::snt i promise i'd be the most grateful person in the world if given the opportunity to meet , pretty please x
# ::tokens ["i", "promise", "i", "'d", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "given", "the", "opportunity", "to", "meet", ",", "pretty", "please", "x"]
# ::lemmas ["i", "promise", "i", "would", "be", "the", "most", "grateful", "person", "in", "the", "world", "if", "give", "the", "opportunity", "to", "meet", ",", "pretty", "please", "x"]
(c17-4 / promise-01
       :ARG0 (c17-8 / i)
       :ARG1 (c17-3 / have-condition-91
                    :ARG1 (c17-7 / have-degree-91
                                 :ARG1 c17-8
                                 :ARG2 (c17-9 / appreciate-02
                                              :ARG0 c17-8)
                                 :ARG3 (c17-1 / most)
                                 :ARG5 (c17-2 / person
                                              :location (c17-6 / world)))
                    :ARG2 (c17-10 / give-01
                                  :ARG1 (c17-0 / opportunity
                                               :purpose (c17-5 / meet-03
                                                               :ARG0 c17-8))
                                  :ARG2 c17-8
                                  :mod (c17-11 / pretty))))
