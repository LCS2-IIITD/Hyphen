# ::snt Cuz hes a visitor in peoples lives collecting stories. Right ?
# ::tokens ["Cuz", "he", "s", "a", "visitor", "in", "peoples", "lives", "collecting", "stories", ".", "Right", "?"]
# ::lemmas ["cuz", "he", "s", "a", "visitor", "in", "people", "live", "collect", "story", ".", "right", "?"]
(c1-6 / cause-01
      :ARG0 (c1-2 / visit-01
                  :ARG0 (c1-3 / he)
                  :location (c1-4 / life
                                  :poss (c1-5 / person))
                  :purpose (c1-7 / collect-01
                                 :ARG0 c1-3
                                 :ARG1 (c1-0 / story)))
      :ARG1-of (c1-1 / request-confirmation-91))

# ::snt I looked up Jennifer Aniston,One of my favorite Actresses Dave
# ::tokens ["I", "looked", "up", "Jennifer", "Aniston", ",", "One", "of", "my", "favorite", "Actresses", "Dave"]
# ::lemmas ["i", "look", "up", "Jennifer", "Aniston", ",", "One", "of", "my", "favorite", "Actresses", "Dave"]
(c2-6 / look-up-05
      :ARG0 (c2-7 / i)
      :ARG1 (c2-5 / person
                  :name (c2-1 / name
                              :op1 "Jennifer"
                              :op2 "Aniston")
                  :ARG1-of (c2-3 / include-91
                                 :ARG2 (c2-2 / person
                                             :name (c2-4 / name
                                                         :op1 "Dave")
                                             :mod (c2-8 / actress)
                                             :ARG1-of (c2-0 / favor-01
                                                            :ARG0 c2-7)))))

# ::snt she looks bored as fuck w that waxed eyebrow douche
# ::tokens ["she", "looks", "bored", "as", "fuck", "w", "that", "waxed", "eyebrow", "douche"]
# ::lemmas ["she", "look", "bored", "as", "fuck", "w", "that", "wax", "eyebrow", "douche"]
(c3-4 / look-02
      :ARG0 (c3-1 / she)
      :ARG1 (c3-0 / bore-02
                  :ARG0 (c3-7 / douche
                              :mod (c3-3 / eyebrow
                                         :ARG1-of (c3-5 / wax-01))
                              :mod (c3-6 / that))
                  :ARG1 c3-1
                  :degree (c3-2 / as-fuck)))

# ::snt Here's your hat and Aveeno, what's your hurry?! Go back to La La Land where you belong.
# ::tokens ["Here", "'s", "your", "hat", "and", "Aveeno", ",", "what", "'s", "your", "hurry", "?", "!", "Go", "back", "to", "La", "La", "Land", "where", "you", "belong", "."]
# ::lemmas ["here", "be", "your", "hat", "and", "Aveeno", ",", "what", "be", "your", "hurry", "?", "!", "go", "back", "to", "La", "La", "Land", "where", "you", "belong", "."]
(c4-3 / multi-sentence
      :snt1 (c4-12 / and
                   :op1 (c4-5 / hat
                              :poss (c4-6 / person
                                          :name (c4-2 / name
                                                      :op1 "Avenue"))
                              :location (c4-10 / here))
                   :op2 (c4-4 / hurry-01
                              :ARG1 c4-6
                              :ARG2 (c4-11 / amr-unknown)))
      :snt2 (c4-13 / go-02
                   :ARG0 (c4-1 / you)
                   :ARG4 (c4-9 / country-region
                               :name (c4-7 / name
                                           :op1 "La"
                                           :op2 "La"
                                           :op3 "Land")
                               :ARG2-of (c4-0 / belong-01
                                              :ARG0 c4-1))
                   :direction (c4-8 / back)
                   :mode imperative))

# ::snt Don't cry for her, she'll be out of a spokeswoman job. Love the eyes and the hubby a little bit more, honey.
# ::tokens ["Do", "n't", "cry", "for", "her", ",", "she", "'ll", "be", "out", "of", "a", "spokeswoman", "job", ".", "Love", "the", "eyes", "and", "the", "hubby", "a", "little", "bit", "more", ",", "honey", "."]
# ::lemmas ["do", "not", "cry", "for", "she", ",", "she", "'ll", "be", "out", "of", "a", "spokeswoman", "job", ".", "love", "the", "eye", "and", "the", "hubby", "a", "little", "bit", "more", ",", "honey", "."]
(c5-4 / multi-sentence
      :snt1 (c5-10 / cry-02
                   :ARG0 (c5-3 / you)
                   :ARG1-of (c5-16 / cause-01
                                   :ARG0 (c5-0 / out-05
                                               :ARG1 (c5-5 / she)
                                               :ARG2 (c5-12 / job
                                                            :mod (c5-1 / spokeswoman))))
                   :polarity -
                   :mode imperative)
      :snt2 (c5-17 / say-01
                   :ARG1 (c5-8 / love-01
                               :ARG0 (c5-14 / you)
                               :ARG1 (c5-13 / and
                                            :op1 (c5-6 / eye)
                                            :op2 (c5-7 / hubby))
                               :mod (c5-9 / more
                                          :quant (c5-2 / bit
                                                       :mod (c5-15 / little))))
                   :ARG2 (c5-11 / honey)))

# ::snt She saw MUTE?
# ::tokens ["She", "saw", "MUTE", "?"]
# ::lemmas ["she", "see", "MUTE", "?"]
(c6-3 / see-01
      :polarity (c6-0 / amr-unknown)
      :ARG0 (c6-1 / she)
      :ARG1 (c6-2 / cute))

# ::snt Relatable!
# ::tokens ["Relatable", "!"]
# ::lemmas ["relatable", "!"]
(c7-1 / possible-01
      :ARG1 (c7-0 / relate-01))

# ::snt This is what happens when the ex comes to visit
# ::tokens ["This", "is", "what", "happens", "when", "the", "ex", "comes", "to", "visit"]
# ::lemmas ["this", "be", "what", "happen", "when", "the", "ex", "come", "to", "visit"]
(c8-2 / event
      :mod (c8-6 / this)
      :time (c8-5 / come-01
                  :ARG1 (c8-4 / person
                              :ARG0-of (c8-3 / have-rel-role-91
                                             :ARG2 (c8-0 / significant-other)
                                             :time (c8-7 / ex)))
                  :ARG4 (c8-1 / visit-01
                              :ARG0 c8-4)))

# ::snt Sad to see them split up
# ::tokens ["Sad", "to", "see", "them", "split", "up"]
# ::lemmas ["sad", "to", "see", "they", "split", "up"]
(c9-3 / sad-02
      :ARG0 (c9-1 / see-01
                  :ARG1 (c9-0 / split-up-03
                              :ARG1 (c9-2 / they))))

# ::snt My thought exactly. Onward. My question is, who CARES?!
# ::tokens ["My", "thought", "exactly", ".", "Onward", ".", "My", "question", "is", ",", "who", "CARES", "?", "!"]
# ::lemmas ["my", "thought", "exactly", ".", "Onward", ".", "my", "question", "be", ",", "who", "CARES", "?", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-7 / think-01
                    :ARG0 (c10-6 / i)
                    :manner (c10-4 / exact))
       :snt2 (c10-0 / onward)
       :snt3 (c10-8 / question-01
                    :ARG0 (c10-2 / i)
                    :ARG1 (c10-3 / amr-unknown
                                 :ARG0-of (c10-5 / CAR-01))))

# ::snt Nope, He is a cheat
# ::tokens ["Nope", ",", "He", "is", "a", "cheat"]
# ::lemmas ["nope", ",", "he", "be", "a", "cheat"]
(c11-0 / cheat-03
       :ARG0 (c11-1 / he))

# ::snt Personally I think shes crazy.
# ::tokens ["Personally", "I", "think", "she", "s", "crazy", "."]
# ::lemmas ["personally", "i", "think", "she", "s", "crazy", "."]
(c12-4 / think-01
       :ARG0 (c12-3 / i)
       :ARG1 (c12-2 / crazy-03
                    :ARG1 (c12-0 / she))
       :ARG1-of (c12-1 / personal-02))

# ::snt Is it because of me?
# ::tokens ["Is", "it", "because", "of", "me", "?"]
# ::lemmas ["be", "it", "because", "of", "i", "?"]
(c13-1 / cause-01
       :ARG0 (c13-2 / i)
       :ARG1 (c13-0 / it)
       :polarity (c13-3 / amr-unknown))

# ::snt : Justin got tired of banging a year old
# ::tokens [":", "Justin", "got", "tired", "of", "banging", "a", "year", "old"]
# ::lemmas [":", "Justin", "get", "tired", "of", "bang", "a", "year", "old"]
(c14-4 / tire-03
       :ARG0 (c14-3 / person
                    :name (c14-2 / name
                                 :op1 "Justin"))
       :ARG1 (c14-0 / bang-04
                    :ARG0 c14-3)
       :time (c14-5 / age-01
                    :ARG1 c14-3
                    :ARG2 (c14-6 / temporal-quantity
                                 :unit (c14-1 / year)
                                 :quant 1)))

# ::snt Never move your girlfriend or wife away from her family or friends, it never works out
# ::tokens ["Never", "move", "your", "girlfriend", "or", "wife", "away", "from", "her", "family", "or", "friends", ",", "it", "never", "works", "out"]
# ::lemmas ["never", "move", "your", "girlfriend", "or", "wife", "away", "from", "her", "family", "or", "friend", ",", "it", "never", "work", "out"]
(c15-10 / move-01
        :ARG0 (c15-3 / you)
        :ARG1 (c15-2 / or
                     :op1 (c15-15 / person
                                  :ARG0-of (c15-5 / have-rel-role-91
                                                  :ARG1 c15-3
                                                  :ARG2 (c15-8 / girlfriend)))
                     :op2 (c15-11 / person
                                  :ARG0-of (c15-18 / have-rel-role-91
                                                   :ARG1 c15-3
                                                   :ARG2 (c15-17 / wife))))
        :ARG2 (c15-7 / away
                     :op1 (c15-9 / or
                                 :op1 (c15-13 / family
                                              :ARG1-of (c15-4 / have-org-role-91
                                                              :ARG0 c15-15
                                                              :ARG2 (c15-6 / member)))
                                 :op2 (c15-1 / person
                                             :ARG0-of (c15-12 / have-rel-role-91
                                                              :ARG1 c15-15
                                                              :ARG2 (c15-16 / friend)))))
        :time (c15-14 / ever)
        :ARG1-of (c15-0 / work-out-02
                        :polarity -)
        :polarity -
        :mode imperative)

# ::snt She controls the hair fairly well
# ::tokens ["She", "controls", "the", "hair", "fairly", "well"]
# ::lemmas ["she", "control", "the", "hair", "fairly", "well"]
(c16-3 / control-01
       :ARG0 (c16-1 / she)
       :ARG1 (c16-2 / hair)
       :ARG1-of (c16-4 / well-09
                       :ARG1-of (c16-0 / fair-04)))

# ::snt You want the real reason and the above is not it follow he has been telling us for over a year what the problem has been, he so far ahead of the game
# ::tokens ["You", "want", "the", "real", "reason", "and", "the", "above", "is", "not", "it", "follow", "he", "has", "been", "telling", "us", "for", "over", "a", "year", "what", "the", "problem", "has", "been", ",", "he", "so", "far", "ahead", "of", "the", "game"]
# ::lemmas ["you", "want", "the", "real", "reason", "and", "the", "above", "be", "not", "it", "follow", "he", "have", "be", "tell", "we", "for", "over", "a", "year", "what", "the", "problem", "have", "be", ",", "he", "so", "far", "ahead", "of", "the", "game"]
(c17-9 / and
       :op1 (c17-18 / want-01
                    :ARG0 (c17-4 / you)
                    :ARG1 (c17-15 / reason
                                  :ARG1-of (c17-2 / real-04)))
       :op2 (c17-14 / follow-02
                    :ARG0 c17-4
                    :ARG1 (c17-7 / tell-01
                                 :ARG0 (c17-5 / he)
                                 :ARG1 (c17-16 / problem)
                                 :ARG2 (c17-1 / we)
                                 :duration (c17-3 / over
                                                  :op1 (c17-13 / temporal-quantity
                                                               :unit (c17-10 / year)
                                                               :quant 1))
                                 :ARG1-of (c17-12 / cause-01
                                                  :ARG0 (c17-11 / be-located-at-91
                                                                :ARG1 c17-5
                                                                :ARG2 (c17-6 / ahead
                                                                             :op1 (c17-8 / game)
                                                                             :degree (c17-17 / far
                                                                                             :mod (c17-0 / so))))))
                    :polarity -
                    :mode imperative))

# ::snt They tried, it didn't work, now it's over. That's that!
# ::tokens ["They", "tried", ",", "it", "did", "n't", "work", ",", "now", "it", "'s", "over", ".", "That", "'s", "that", "!"]
# ::lemmas ["they", "try", ",", "it", "do", "not", "work", ",", "now", "it", "be", "over", ".", "that", "be", "that", "!"]
(c18-2 / multi-sentence
       :snt1 (c18-5 / and
                    :op1 (c18-8 / try-01
                                :ARG0 (c18-10 / they))
                    :op2 (c18-6 / work-09
                                :ARG1 (c18-7 / it)
                                :polarity -)
                    :op3 (c18-0 / over-01
                                :ARG1 (c18-4 / it)
                                :time (c18-3 / now)))
       :snt2 (c18-1 / be-it-08
                    :ARG1 (c18-9 / that)))

# ::snt How does one say- rich peoples problems.
# ::tokens ["How", "does", "one", "say-", "rich", "peoples", "problems", "."]
# ::lemmas ["how", "do", "one", "say-", "rich", "people", "problem", "."]
(c19-2 / say-01
       :ARG0 (c19-0 / one)
       :ARG1 (c19-4 / problem
                    :poss (c19-1 / person
                                 :mod (c19-3 / rich)))
       :manner (c19-5 / amr-unknown))

# ::snt Here's your hat and Aveeno, what's your hurry..
# ::tokens ["Here", "'s", "your", "hat", "and", "Aveeno", ",", "what", "'s", "your", "hurry", ".."]
# ::lemmas ["here", "be", "your", "hat", "and", "Aveeno", ",", "what", "be", "your", "hurry", ".."]
(c20-4 / ask-01
       :ARG0 (c20-3 / i)
       :ARG1 (c20-1 / hurry-01
                    :ARG1 (c20-2 / person
                                 :name (c20-0 / name
                                              :op1 "Avenue"))
                    :ARG2 (c20-5 / amr-unknown))
       :ARG2 c20-2)

# ::snt Stay in La La Land where you belong!
# ::tokens ["Stay", "in", "La", "La", "Land", "where", "you", "belong", "!"]
# ::lemmas ["stay", "in", "La", "La", "Land", "where", "you", "belong", "!"]
(c21-3 / stay-01
       :ARG1 (c21-1 / you)
       :ARG3 (c21-4 / location
                    :name (c21-2 / name
                                 :op1 "La"
                                 :op2 "La"
                                 :op3 "Land")
                    :location-of (c21-0 / belong-01
                                        :ARG0 c21-1))
       :mode imperative)

# ::snt Every New Yorker has dry eyes about this news. See ya.
# ::tokens ["Every", "New", "Yorker", "has", "dry", "eyes", "about", "this", "news", ".", "See", "ya", "."]
# ::lemmas ["Every", "New", "Yorker", "have", "dry", "eye", "about", "this", "news", ".", "see", "ya", "."]
(c22-2 / multi-sentence
       :snt1 (c22-7 / have-03
                    :ARG0 (c22-6 / magazine
                                 :name (c22-1 / name
                                              :op1 "New"
                                              :op2 "Yorker")
                                 :mod (c22-5 / every))
                    :ARG1 (c22-10 / eye
                                  :ARG1-of (c22-4 / dry-08))
                    :topic (c22-8 / news
                                  :mod (c22-9 / this)))
       :snt2 (c22-3 / see-01
                    :ARG0 (c22-0 / you
                                 :ARG1-of c22-3)
                    :mode imperative))

# ::snt So basically shes Charlotte from Sex and the City.
# ::tokens ["So", "basically", "she", "s", "Charlotte", "from", "Sex", "and", "the", "City", "."]
# ::lemmas ["so", "basically", "she", "s", "Charlotte", "from", "Sex", "and", "the", "City", "."]
(c23-4 / person
       :name (c23-1 / name
                    :op1 "Charlotte")
       :domain (c23-2 / she)
       :source (c23-0 / broadcast-program
                      :name (c23-3 / name
                                   :op1 "Sex"
                                   :op2 "and"
                                   :op3 "the"
                                   :op4 "City"))
       :mod (c23-5 / basic))

# ::snt Russian interference?
# ::tokens ["Russian", "interference", "?"]
# ::lemmas ["Russian", "interference", "?"]
(c24-2 / interfere-01
       :ARG0 (c24-0 / country
                    :name (c24-1 / name
                                 :op1 "Russia"))
       :polarity (c24-3 / amr-unknown))

# ::snt She will NOT stop calling me!!
# ::tokens ["She", "will", "NOT", "stop", "calling", "me", "!", "!"]
# ::lemmas ["she", "will", "not", "stop", "call", "i", "!", "!"]
(c25-3 / stop-01
       :ARG0 (c25-0 / she)
       :ARG1 (c25-1 / call-02
                    :ARG0 c25-0
                    :ARG1 (c25-2 / i))
       :mode expressive
       :polarity -)

# ::snt Herpes
# ::tokens ["Herpes"]
# ::lemmas ["herpe"]
(c26-0 / herpes)

# ::snt Stinky p ?!?! Linger longer .
# ::tokens ["Stinky", "p", "?", "!", "?", "!", "Linger", "longer", "."]
# ::lemmas ["stinky", "p", "?", "!", "?", "!", "Linger", "long", "."]
(c27-0 / multi-sentence
       :snt1 (c27-1 / stinky
                    :polarity (c27-6 / amr-unknown))
       :snt2 (c27-2 / have-degree-91
                    :ARG1 (c27-3 / person)
                    :ARG2 (c27-4 / long-03)
                    :ARG3 (c27-5 / more)))

# ::snt She's the most attractive woman over
# ::tokens ["She", "'s", "the", "most", "attractive", "woman", "over"]
# ::lemmas ["she", "be", "the", "most", "attractive", "woman", "over"]
(c28-3 / have-degree-91
       :ARG1 (c28-2 / she)
       :ARG2 (c28-5 / attract-01
                    :ARG0 c28-2)
       :ARG3 (c28-1 / most)
       :ARG5 (c28-4 / woman
                    :mod (c28-0 / over)))

# ::snt Her pussy stinks allegedly
# ::tokens ["Her", "pussy", "stinks", "allegedly"]
# ::lemmas ["her", "pussy", "stink", "allegedly"]
(c29-3 / stink-01
       :ARG1 (c29-2 / pussy
                    :part-of (c29-1 / she))
       :ARG1-of (c29-0 / allege-01))

# ::snt Here's your hat and Aveeno, what's your hurry. Go back to LA La Land where you belong. New Yorkers have dry eyes now.
# ::tokens ["Here", "'s", "your", "hat", "and", "Aveeno", ",", "what", "'s", "your", "hurry", ".", "Go", "back", "to", "LA", "La", "Land", "where", "you", "belong", ".", "New", "Yorkers", "have", "dry", "eyes", "now", "."]
# ::lemmas ["here", "be", "your", "hat", "and", "Aveeno", ",", "what", "be", "your", "hurry", ".", "go", "back", "to", "LA", "La", "Land", "where", "you", "belong", ".", "New", "Yorkers", "have", "dry", "eye", "now", "."]
(c30-8 / multi-sentence
       :snt1 (c30-0 / say-01
                    :ARG0 (c30-18 / i)
                    :ARG1 (c30-3 / hurry-01
                                 :ARG1 (c30-15 / person
                                               :name (c30-13 / name
                                                             :op1 "Avenue"))
                                 :mod (c30-4 / amr-unknown))
                    :ARG2 c30-15)
       :snt2 (c30-5 / go-02
                    :ARG0 (c30-2 / you)
                    :ARG4 (c30-11 / city-district
                                  :name (c30-10 / name
                                                :op1 "LA"
                                                :op2 "La"
                                                :op3 "Land")
                                  :ARG2-of (c30-7 / belong-01
                                                  :ARG0 c30-2))
                    :direction (c30-1 / back)
                    :mode imperative)
       :snt3 (c30-17 / have-03
                     :ARG0 (c30-9 / person
                                  :mod (c30-6 / city
                                              :name (c30-16 / name
                                                            :op1 "New"
                                                            :op2 "York")))
                     :ARG1 (c30-14 / eye
                                   :ARG1-of (c30-19 / dry-08))
                     :time (c30-12 / now)))

# ::snt WHO CARES?
# ::tokens ["WHO", "CARES", "?"]
# ::lemmas ["who", "CARES", "?"]
(c32-0 / care-01
       :ARG0 (c32-1 / amr-unknown))

# ::snt doubtful
# ::tokens ["doubtful"]
# ::lemmas ["doubtful"]
(c33-0 / doubt-01)

# ::snt already??
# ::tokens ["already", "?", "?"]
# ::lemmas ["already", "?", "?"]
(c34-0 / ready-02
       :polarity (c34-1 / amr-unknown))

# ::snt she's getting old with relationships.shouldn't have gotten married.poor guy! brad pitt
# ::tokens ["she", "'s", "getting", "old", "with", "relationships.shouldn't", "have", "gotten", "married.poor", "guy", "!", "brad", "pitt"]
# ::lemmas ["she", "be", "get", "old", "with", "relationships.shouldn't", "have", "get", "married.poor", "guy", "!", "brad", "pitt"]
(c35-1 / multi-sentence
       :snt1 (c35-9 / get-03
                    :ARG1 (c35-3 / she)
                    :ARG2 (c35-0 / old)
                    :ARG3 (c35-5 / relation-03))
       :snt2 (c35-10 / recommend-01
                     :ARG1 (c35-6 / marry-01
                                  :ARG1 c35-3
                                  :polarity -))
       :snt3 (c35-8 / guy
                    :mod (c35-7 / poor)
                    :ARG1-of (c35-11 / mean-01
                                     :ARG2 (c35-2 / person
                                                  :name (c35-4 / name
                                                               :op1 "Bad"
                                                               :op2 "Pitt")))
                    :mode expressive))

# ::snt NYC vs LA story fits perfectly to what happened. Also, too much $$$ creates boredom which then creates an unhappy couple.
# ::tokens ["NYC", "vs", "LA", "story", "fits", "perfectly", "to", "what", "happened", ".", "Also", ",", "too", "much", "$", "$", "$", "creates", "boredom", "which", "then", "creates", "an", "unhappy", "couple", "."]
# ::lemmas ["NYC", "vs", "LA", "story", "fit", "perfectly", "to", "what", "happen", ".", "also", ",", "too", "much", "$", "$", "$", "create", "boredom", "which", "then", "create", "an", "unhappy", "couple", "."]
(c36-10 / multi-sentence
        :snt1 (c36-15 / fit-06
                      :ARG1 (c36-0 / story
                                   :topic (c36-3 / versus
                                                 :op1 (c36-12 / city
                                                              :name (c36-16 / name
                                                                            :op1 "NYC"))
                                                 :op2 (c36-8 / city
                                                             :name (c36-11 / name
                                                                           :op1 "LA"))))
                      :ARG2 (c36-17 / event)
                      :ARG1-of (c36-18 / perfect-02))
        :snt2 (c36-1 / create-01
                     :ARG0 (c36-20 / dollar
                                   :ARG1-of (c36-4 / have-quant-91
                                                   :ARG2 (c36-5 / much)
                                                   :ARG3 (c36-7 / too)))
                     :ARG1 (c36-9 / bore-02)
                     :mod (c36-6 / also)
                     :ARG0-of (c36-14 / create-01
                                      :ARG1 (c36-2 / couple
                                                   :ARG1-of (c36-19 / happy-01
                                                                    :polarity -))
                                      :time (c36-13 / then))))

# ::snt High maintenance
# ::tokens ["High", "maintenance"]
# ::lemmas ["high", "maintenance"]
(c37-1 / maintain-01
       :ARG1-of (c37-0 / high-02))

# ::snt People get tired of f***ing each other after a while and run out of things to talk about and do together. Thats the real reason people split, stop with all the nonsense already.
# ::tokens ["People", "get", "tired", "of", "f***ing", "each", "other", "after", "a", "while", "and", "run", "out", "of", "things", "to", "talk", "about", "and", "do", "together", ".", "That", "s", "the", "real", "reason", "people", "split", ",", "stop", "with", "all", "the", "nonsense", "already", "."]
# ::lemmas ["people", "get", "tired", "of", "f***e", "each", "other", "after", "a", "while", "and", "run", "out", "of", "thing", "to", "talk", "about", "and", "do", "together", ".", "that", "s", "the", "real", "reason", "people", "split", ",", "stop", "with", "all", "the", "nonsense", "already", "."]
(c38-10 / multi-sentence
        :snt1 (c38-7 / and
                     :op1 (c38-9 / tire-03
                                 :ARG0 (c38-17 / person
                                               :ARG1-of c38-9)
                                 :time (c38-6 / after
                                              :op1 (c38-18 / while)))
                     :op2 (c38-16 / run-out-05
                                  :ARG1 (c38-14 / thing
                                                :ARG1-of (c38-19 / talk-01
                                                                 :ARG0 c38-17)
                                                :ARG1-of (c38-20 / do-02
                                                                 :ARG0 c38-17
                                                                 :manner (c38-1 / together)))
                                  :ARG2 c38-17))
        :snt2 (c38-13 / cause-01
                      :ARG0 (c38-8 / that)
                      :ARG1 (c38-0 / split-01
                                   :ARG1 (c38-11 / person))
                      :ARG1-of (c38-2 / real-04))
        :snt3 (c38-3 / stop-01
                     :ARG0 (c38-4 / you)
                     :ARG1 (c38-15 / nonsense
                                   :mod (c38-5 / all))
                     :time (c38-12 / already)
                     :mode imperative))

# ::snt Nobody really cares unless she gets back with Brad.
# ::tokens ["Nobody", "really", "cares", "unless", "she", "gets", "back", "with", "Brad", "."]
# ::lemmas ["nobody", "really", "care", "unless", "she", "get", "back", "with", "Brad", "."]
(c39-5 / care-01
       :ARG0 (c39-0 / nobody)
       :ARG1-of (c39-2 / real-04)
       :condition (c39-6 / get-back-25
                         :ARG0 (c39-1 / she)
                         :ARG1 (c39-4 / person
                                      :name (c39-3 / name
                                                   :op1 "Brad"))))

# ::snt He hogged the mirror.
# ::tokens ["He", "hogged", "the", "mirror", "."]
# ::lemmas ["he", "hog", "the", "mirror", "."]
(c41-1 / hog-00
       :ARG0 (c41-0 / he)
       :ARG1 (c41-2 / mirror))

# ::snt Therouxs a white supremacist?
# ::tokens ["Therouxs", "a", "white", "supremacist", "?"]
# ::lemmas ["Therouxs", "a", "white", "supremacist", "?"]
(c42-1 / supremacist
       :ARG1-of (c42-3 / white-02)
       :domain (c42-2 / person
                      :name (c42-0 / name
                                   :op1 "Theroux"))
       :polarity (c42-4 / amr-unknown))

# ::snt she's not meant for marriage
# ::tokens ["she", "'s", "not", "meant", "for", "marriage"]
# ::lemmas ["she", "be", "not", "mean", "for", "marriage"]
(c43-1 / mean-02
       :ARG1 (c43-2 / she)
       :ARG2 (c43-0 / marry-01
                    :ARG1 c43-2)
       :polarity -)

# ::snt Me
# ::tokens ["Me"]
# ::lemmas ["i"]
(c44-0 / i)

# ::snt To give The STUN a story???
# ::tokens ["To", "give", "The", "STUN", "a", "story", "?", "?", "?"]
# ::lemmas ["to", "give", "the", "STUN", "a", "story", "?", "?", "?"]
(c45-2 / have-purpose-91
       :polarity (c45-4 / amr-unknown)
       :ARG2 (c45-5 / give-01
                    :ARG1 (c45-1 / story)
                    :ARG2 (c45-3 / publication
                                 :name (c45-0 / name
                                              :op1 "The"
                                              :op2 "Stun"))))

# ::snt Brad Pitt is single again?
# ::tokens ["Brad", "Pitt", "is", "single", "again", "?"]
# ::lemmas ["Brad", "Pitt", "be", "single", "again", "?"]
(c46-1 / single-03
       :polarity (c46-4 / amr-unknown)
       :ARG1 (c46-2 / person
                    :name (c46-0 / name
                                 :op1 "Brad"
                                 :op2 "Pitt"))
       :mod (c46-3 / again))

# ::snt very sad they have it all but have nothing
# ::tokens ["very", "sad", "they", "have", "it", "all", "but", "have", "nothing"]
# ::lemmas ["very", "sad", "they", "have", "it", "all", "but", "have", "nothing"]
(c47-1 / sad-02
       :ARG0 (c47-5 / contrast-01
                    :ARG1 (c47-4 / have-03
                                 :ARG0 (c47-8 / they)
                                 :ARG1 (c47-7 / it
                                              :mod (c47-2 / all)))
                    :ARG2 (c47-6 / have-03
                                 :ARG0 c47-8
                                 :ARG1 (c47-0 / nothing)))
       :degree (c47-3 / very))

# ::snt Why do you find necessary to always dissect every relationships ending? It. Isnt. Your. Business!
# ::tokens ["Why", "do", "you", "find", "necessary", "to", "always", "dissect", "every", "relationships", "ending", "?", "It", ".", "Is", "nt", ".", "Your", ".", "Business", "!"]
# ::lemmas ["why", "do", "you", "find", "necessary", "to", "always", "dissect", "every", "relationship", "end", "?", "it", ".", "be", "nt", ".", "your", ".", "business", "!"]
(c48-4 / multi-sentence
       :snt1 (c48-0 / find-02
                    :ARG0 (c48-2 / you)
                    :ARG1 (c48-3 / need-01
                                 :ARG0 c48-2
                                 :ARG1 (c48-12 / dissect-01
                                               :ARG0 c48-2
                                               :ARG1 (c48-7 / end-01
                                                            :ARG1 (c48-6 / relation-03
                                                                         :mod (c48-5 / every)))
                                               :time (c48-10 / always)))
                    :ARG1-of (c48-8 / cause-01
                                    :ARG0 (c48-9 / amr-unknown)))
       :snt2 (c48-1 / business
                    :poss (c48-11 / you)
                    :domain (c48-13 / it)
                    :polarity -))

# ::snt Are you seriously still reporting on this? Your news makes me sick. Leave them alone.
# ::tokens ["Are", "you", "seriously", "still", "reporting", "on", "this", "?", "Your", "news", "makes", "me", "sick", ".", "Leave", "them", "alone", "."]
# ::lemmas ["be", "you", "seriously", "still", "report", "on", "this", "?", "your", "news", "make", "i", "sick", ".", "leave", "they", "alone", "."]
(c49-3 / multi-sentence
       :snt1 (c49-6 / report-01
                    :ARG0 (c49-2 / you)
                    :ARG1 (c49-11 / this)
                    :ARG2-of (c49-5 / serious-01)
                    :mod (c49-1 / still)
                    :polarity (c49-7 / amr-unknown))
       :snt2 (c49-8 / make-02
                    :ARG0 (c49-4 / news
                                 :poss (c49-12 / you))
                    :ARG1 (c49-15 / sick-05
                                  :ARG0 c49-4
                                  :ARG1 (c49-10 / i)))
       :snt3 (c49-9 / leave-14
                    :ARG0 (c49-0 / you)
                    :ARG1 (c49-13 / alone
                                  :domain (c49-14 / they))
                    :mode imperative))

# ::snt They don't want to be married any more?
# ::tokens ["They", "do", "n't", "want", "to", "be", "married", "any", "more", "?"]
# ::lemmas ["they", "do", "not", "want", "to", "be", "marry", "any", "more", "?"]
(c50-1 / want-01
       :ARG0 (c50-2 / they)
       :ARG1 (c50-0 / marry-01
                    :ARG1 c50-2)
       :time (c50-4 / anymore)
       :polarity (c50-3 / amr-unknown)
       :polarity -)
