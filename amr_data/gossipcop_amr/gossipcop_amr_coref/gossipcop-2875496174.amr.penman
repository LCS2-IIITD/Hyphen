# ::snt .. !!
# ::tokens ["..", "!", "!"]
# ::lemmas ["..", "!", "!"]
(c1-0)

# ::snt Oh dear God!! Are u kidding me?! Poor Angelina NOT!
# ::tokens ["Oh", "dear", "God", "!", "!", "Are", "u", "kidding", "me", "?", "!", "Poor", "Angelina", "NOT", "!"]
# ::lemmas ["oh", "dear", "God", "!", "!", "be", "u", "kid", "i", "?", "!", "Poor", "Angelina", "not", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-5 / person
                  :name (c2-1 / name
                              :op1 "God")
                  :mod (c2-9 / dear)
                  :mode expressive)
      :snt2 (c2-6 / kid-01
                  :polarity (c2-8 / amr-unknown)
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-7 / i))
      :snt3 (c2-3 / person
                  :name (c2-4 / name
                              :op1 "Angelina")
                  :mod (c2-10 / poor)
                  :polarity -))

# ::snt Thats crazy
# ::tokens ["That", "s", "crazy"]
# ::lemmas ["that", "s", "crazy"]
(c3-0 / crazy-03
      :ARG1 (c3-1 / that))

# ::snt These superstars are just after money no love no emotions or feelings...Brad is treating her with proper tablets
# ::tokens ["These", "superstars", "are", "just", "after", "money", "no", "love", "no", "emotions", "or", "feelings", "...", "Brad", "is", "treating", "her", "with", "proper", "tablets"]
# ::lemmas ["these", "superstar", "be", "just", "after", "money", "no", "love", "no", "emotion", "or", "feeling", "...", "Brad", "be", "treat", "she", "with", "proper", "tablet"]
(c4-2 / multi-sentence
      :snt1 (c4-12 / after
                   :op1 (c4-7 / money)
                   :mod (c4-10 / just))
      :snt2 (c4-0 / or
                  :op1 (c4-8 / love-01)
                  :op2 (c4-6 / emotion)
                  :op3 (c4-1 / feel-01)
                  :polarity -)
      :snt3 (c4-11 / treat-01
                   :ARG0 (c4-9 / person
                               :name (c4-3 / name
                                           :op1 "Brad"))
                   :ARG1 (c4-4 / she)
                   :ARG2 (c4-13 / tablet
                                :mod (c4-5 / proper))))

# ::snt At least he's paying some. He might be struggling for now. But he'll definitely pay the outstanding. Some guys don't even show up
# ::tokens ["At", "least", "he", "'s", "paying", "some", ".", "He", "might", "be", "struggling", "for", "now", ".", "But", "he", "'ll", "definitely", "pay", "the", "outstanding", ".", "Some", "guys", "do", "n't", "even", "show", "up"]
# ::lemmas ["at", "least", "he", "be", "pay", "some", ".", "he", "might", "be", "struggle", "for", "now", ".", "but", "he", "'ll", "definitely", "pay", "the", "outstanding", ".", "some", "guy", "do", "not", "even", "show", "up"]
(c5-2 / multi-sentence
      :snt1 (c5-9 / pay-01
                  :ARG0 (c5-8 / he)
                  :ARG1 (c5-4 / some)
                  :mod (c5-13 / at-least))
      :snt2 (c5-3 / possible-01
                  :ARG1 (c5-0 / struggle-02
                              :ARG0 (c5-12 / he)
                              :time (c5-5 / now)))
      :snt3 (c5-11 / contrast-01
                   :ARG2 (c5-16 / pay-01
                                :ARG0 (c5-7 / he)
                                :ARG1 (c5-1 / outstanding)
                                :mod (c5-15 / definite)))
      :snt4 (c5-17 / show-up-02
                   :ARG1 (c5-14 / guy
                                :mod (c5-6 / some))
                   :mod (c5-10 / even)
                   :polarity -))

# ::snt U just telling us crap news to b honest,
# ::tokens ["U", "just", "telling", "us", "crap", "news", "to", "b", "honest", ","]
# ::lemmas ["u", "just", "tell", "we", "crap", "news", "to", "b", "honest", ","]
(c7-6 / tell-01
      :ARG0 (c7-0 / you)
      :ARG1 (c7-1 / news
                  :mod (c7-3 / crap))
      :ARG2 (c7-4 / we)
      :mod (c7-5 / just)
      :purpose (c7-2 / honest-01
                     :ARG0 c7-4))

# ::snt Shame she must be battling like all the single mothers out there. NOT. EWN where did your' journalist' find this shit?
# ::tokens ["Shame", "she", "must", "be", "battling", "like", "all", "the", "single", "mothers", "out", "there", ".", "NOT", ".", "EWN", "where", "did", "your", "'", "journalist", "'", "find", "this", "shit", "?"]
# ::lemmas ["shame", "she", "must", "be", "battle", "like", "all", "the", "single", "mother", "out", "there", ".", "not", ".", "EWN", "where", "do", "your", "'", "journalist", "'", "find", "this", "shit", "?"]
(c8-4 / multi-sentence
      :snt1 (c8-6 / shame-02
                  :ARG1 (c8-0 / she)
                  :ARG2 (c8-1 / obligate-01
                              :ARG2 (c8-2 / battle-01
                                          :ARG0 c8-0
                                          :ARG1-of (c8-8 / resemble-01
                                                         :ARG2 (c8-10 / mother
                                                                      :ARG1-of (c8-15 / single-03)
                                                                      :mod (c8-13 / all)
                                                                      :location (c8-3 / out-there))))))
      :snt2 (c8-5 / find-01
                  :ARG0 (c8-11 / journalist
                               :poss (c8-7 / you))
                  :ARG1 (c8-9 / shit
                              :mod (c8-12 / this))
                  :location (c8-14 / amr-unknown)
                  :polarity -))

# ::snt Child support is not money only Mxm!
# ::tokens ["Child", "support", "is", "not", "money", "only", "Mxm", "!"]
# ::lemmas ["child", "support", "be", "not", "money", "only", "Mxm", "!"]
(c9-1 / multi-sentence
      :snt1 (c9-3 / money
                  :domain (c9-2 / support-01
                                :ARG1 (c9-5 / child))
                  :polarity -)
      :snt2 (c9-4 / have-mod-91
                  :ARG1 c9-2
                  :ARG2 (c9-0 / only)))

# ::snt Ffs
# ::tokens ["Ffs"]
# ::lemmas ["ffs"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Ffs"))

# ::snt She struggling for cash?
# ::tokens ["She", "struggling", "for", "cash", "?"]
# ::lemmas ["she", "struggle", "for", "cash", "?"]
(c11-3 / struggle-02
       :polarity (c11-0 / amr-unknown)
       :ARG0 (c11-1 / she)
       :ARG1 (c11-2 / cash))

# ::snt They both millionaire movie stars before adopting the kids and shes complaining about child support. Come on now tell us why you really mad.
# ::tokens ["They", "both", "millionaire", "movie", "stars", "before", "adopting", "the", "kids", "and", "she", "s", "complaining", "about", "child", "support", ".", "Come", "on", "now", "tell", "us", "why", "you", "really", "mad", "."]
# ::lemmas ["they", "both", "millionaire", "movie", "star", "before", "adopt", "the", "kid", "and", "she", "s", "complain", "about", "child", "support", ".", "come", "on", "now", "tell", "we", "why", "you", "really", "mad", "."]
(c12-13 / multi-sentence
        :snt1 (c12-9 / and
                     :op1 (c12-0 / star-01
                                 :ARG1 (c12-10 / they
                                               :mod (c12-12 / both))
                                 :ARG2 (c12-6 / movie)
                                 :mod (c12-17 / millionaire)
                                 :time (c12-1 / before
                                              :op1 (c12-8 / adopt-01
                                                          :ARG0 c12-10
                                                          :ARG1 (c12-7 / kid))))
                     :op2 (c12-15 / complain-01
                                  :ARG0 (c12-4 / she)
                                  :ARG1 (c12-3 / support-01
                                               :ARG1 (c12-11 / child))))
        :snt2 (c12-2 / come-on-25
                     :ARG1 (c12-5 / you)
                     :time (c12-19 / now)
                     :mode imperative)
        :snt3 (c12-16 / tell-01
                      :ARG0 c12-5
                      :ARG1 (c12-22 / thing
                                    :ARG0-of (c12-18 / cause-01
                                                     :ARG1 (c12-14 / mad-04
                                                                   :ARG1 c12-5
                                                                   :degree (c12-20 / really))))
                      :ARG2 (c12-21 / we)))

# ::snt Deadbeat Brad! That's clever!
# ::tokens ["Deadbeat", "Brad", "!", "That", "'s", "clever", "!"]
# ::lemmas ["Deadbeat", "Brad", "!", "that", "be", "clever", "!"]
(c13-1 / multi-sentence
       :snt1 (c13-2 / person
                    :name (c13-0 / name
                                 :op1 "Deadbeat"
                                 :op2 "Brad"))
       :snt2 (c13-3 / clever-01
                    :ARG1 (c13-4 / that)))
