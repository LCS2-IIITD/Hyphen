# ::snt Lmao how Rob &amp; Chyna was a massive flop and it was horrible, KUWTK outsold
# ::tokens ["Lmao", "how", "Rob", "&", "amp", ";", "Chyna", "was", "a", "massive", "flop", "and", "it", "was", "horrible", ",", "KUWTK", "outsold"]
# ::lemmas ["Lmao", "how", "Rob", "&", "amp", ";", "Chyna", "be", "a", "massive", "flop", "and", "it", "be", "horrible", ",", "KUWTK", "outsold"]
(c2-10 / and
       :op1 (c2-0 / flop
                  :mod (c2-4 / massive)
                  :domain (c2-6 / person
                                :name (c2-3 / name
                                            :op1 "Chyna")))
       :op2 (c2-5 / horrible
                  :domain c2-0)
       :op3 (c2-1 / outsell-01
                  :ARG0 (c2-2 / broadcast-program
                              :name (c2-7 / name
                                          :op1 "KUWTK")))
       :mod (c2-8 / laugh-01
                  :ARG0 (c2-9 / i)
                  :manner (c2-11 / loud)
                  :mode expressive))

# ::snt Go to Spotify and look to LaliKany Garcia MalumaJBalvinAnd also NTLTC by Ariana
# ::tokens ["Go", "to", "Spotify", "and", "look", "to", "LaliKany", "Garcia", "MalumaJBalvinAnd", "also", "NTLTC", "by", "Ariana"]
# ::lemmas ["go", "to", "Spotify", "and", "look", "to", "LaliKany", "Garcia", "MalumaJBalvinAnd", "also", "NTLTC", "by", "Ariana"]
(c3-12 / and
       :op1 (c3-11 / and
                   :op1 (c3-13 / go-02
                               :ARG0 (c3-0 / you)
                               :ARG4 (c3-7 / company
                                           :name (c3-1 / name
                                                       :op1 "Spotify"))
                               :mode imperative)
                   :op2 (c3-4 / look-01
                              :ARG0 c3-0
                              :ARG1 (c3-5 / person
                                          :name (c3-3 / name
                                                      :op1 "LaliKany"
                                                      :op2 "Garcia"
                                                      :op3 "MalumaJBalvin"))
                              :mode imperative))
       :op2 (c3-2 / publication-91
                  :ARG0 (c3-14 / person
                               :name (c3-6 / name
                                           :op1 "Ariana"))
                  :ARG1 (c3-10 / thing
                               :name (c3-9 / name
                                           :op1 "NTLTC"))
                  :mod (c3-8 / also)))

# ::snt Tea
# ::tokens ["Tea"]
# ::lemmas ["tea"]
(c4-0 / tea)

# ::snt Her show was boring no one watched it
# ::tokens ["Her", "show", "was", "boring", "no", "one", "watched", "it"]
# ::lemmas ["her", "show", "be", "bore", "no", "one", "watch", "it"]
(c5-5 / and
      :op1 (c5-1 / bore-02
                 :ARG0 (c5-3 / show-04
                             :ARG0 (c5-0 / she)))
      :op2 (c5-4 / watch-01
                 :ARG0 (c5-2 / no-one)
                 :ARG1 c5-3))

# ::snt Omg
# ::tokens ["Omg"]
# ::lemmas ["Omg"]
(c6-0 / oh-my-god
      :mode expressive)

# ::snt if i missed something hmu i didn't add the whole albums btw
# ::tokens ["if", "i", "missed", "something", "hmu", "i", "did", "n't", "add", "the", "whole", "albums", "btw"]
# ::lemmas ["if", "i", "miss", "something", "hmu", "i", "do", "not", "add", "the", "whole", "album", "btw"]
(c7-3 / add-02
      :ARG0 (c7-7 / i)
      :ARG1 (c7-6 / album
                  :mod (c7-5 / whole))
      :mod (c7-0 / by-the-way)
      :condition (c7-1 / miss-02
                       :ARG0 c7-7
                       :ARG1 (c7-2 / something))
      :ARG1-of (c7-4 / humble-01)
      :polarity -)

# ::snt Ikr! This bitch is trying so hard to be relevant again
# ::tokens ["Ikr", "!", "This", "bitch", "is", "trying", "so", "hard", "to", "be", "relevant", "again"]
# ::lemmas ["Ikr", "!", "this", "bitch", "be", "try", "so", "hard", "to", "be", "relevant", "again"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / honest-01
                  :mode expressive)
      :snt2 (c8-7 / try-01
                  :ARG0 (c8-0 / bitch
                              :mod (c8-8 / this))
                  :ARG1 (c8-3 / relevant-01
                              :ARG1 c8-0
                              :mod (c8-4 / again))
                  :ARG1-of (c8-6 / hard-02
                                 :degree (c8-2 / so))))

# ::snt I loved Rob &amp; Chyna it was funny asf
# ::tokens ["I", "loved", "Rob", "&", "amp", ";", "Chyna", "it", "was", "funny", "asf"]
# ::lemmas ["i", "love", "Rob", "&", "amp", ";", "Chyna", "it", "be", "funny", "asf"]
(c9-1 / multi-sentence
      :snt1 (c9-7 / love-01
                  :ARG0 (c9-8 / i)
                  :ARG1 (c9-9 / and
                              :op1 (c9-6 / person
                                         :name (c9-2 / name
                                                     :op1 "Rob"
                                                     :op2 "&"
                                                     :op3 "amp"))
                              :op2 (c9-3 / person
                                         :name (c9-5 / name
                                                     :op1 "Chyna"))))
      :snt2 (c9-0 / funny-02
                  :ARG1 (c9-4 / it)
                  :mod (c9-10 / asf)))

# ::snt Chyna, baby. Your whole life is taking L's, just take this one and go.
# ::tokens ["Chyna", ",", "baby", ".", "Your", "whole", "life", "is", "taking", "L", "'s", ",", "just", "take", "this", "one", "and", "go", "."]
# ::lemmas ["Chyna", ",", "baby", ".", "your", "whole", "life", "be", "take", "L", "'s", ",", "just", "take", "this", "one", "and", "go", "."]
(c10-3 / multi-sentence
       :snt1 (c10-4 / say-01
                    :ARG0 (c10-13 / i)
                    :ARG1 (c10-8 / person
                                 :name (c10-2 / name
                                              :op1 "Chyna")
                                 :mod (c10-0 / baby)
                                 :ARG2-of c10-4))
       :snt2 (c10-10 / contrast-01
                     :ARG1 (c10-14 / take-01
                                   :ARG0 (c10-9 / life
                                                :poss (c10-1 / you)
                                                :mod (c10-11 / whole))
                                   :ARG1 (c10-16 / thing
                                                 :name c10-2
                                                 :op1 "L")))
       :ARG2 (c10-6 / and
                    :op1 (c10-15 / take-01
                                 :ARG0 c10-1
                                 :ARG1 (c10-7 / this))
                    :op2 (c10-5 / go-02
                                :ARG0 c10-1)
                    :mod (c10-12 / just)))

# ::snt Who cares about Chyna's ugly ass buy or stream by ft everyone!
# ::tokens ["Who", "cares", "about", "Chyna", "'s", "ugly", "ass", "buy", "or", "stream", "by", "ft", "everyone", "!"]
# ::lemmas ["who", "care", "about", "Chyna", "'s", "ugly", "ass", "buy", "or", "stream", "by", "ft", "everyone", "!"]
(c11-7 / care-01
       :ARG0 (c11-9 / amr-unknown)
       :ARG1 (c11-0 / or
                    :op1 (c11-1 / buy-01
                                :ARG0 (c11-2 / you)
                                :ARG1 (c11-8 / ass
                                             :mod (c11-10 / ugly)
                                             :poss (c11-6 / person
                                                          :name (c11-3 / name
                                                                       :op1 "Chyna")))
                                :mode imperative)
                    :op2 (c11-4 / stream-01
                                :ARG0 c11-2
                                :mod (c11-5 / by-the-way)
                                :mode imperative)))

# ::snt OMG!!!! TEA!!!
# ::tokens ["OMG", "!", "!", "!", "!", "TEA", "!", "!", "!"]
# ::lemmas ["OMG", "!", "!", "!", "!", "TEA", "!", "!", "!"]
(c12-2 / multi-sentence
       :snt1 (c12-0 / oh-my-god
                    :mode expressive)
       :snt2 (c12-3 / thank-01
                    :ARG1 (c12-1 / you)
                    :mode expressive))

# ::snt We don't
# ::tokens ["We", "do", "n't"]
# ::lemmas ["we", "do", "not"]
(c13-0 / do-02
       :ARG0 (c13-1 / we)
       :polarity -)

# ::snt And Love Lies
# ::tokens ["And", "Love", "Lies"]
# ::lemmas ["and", "Love", "Lies"]
(c14-2 / and
       :op2 (c14-1 / lie-08
                   :ARG1-of (c14-0 / love-01)))

# ::snt literally no one cares
# ::tokens ["literally", "no", "one", "cares"]
# ::lemmas ["literally", "no", "one", "care"]
(c15-0 / care-01
       :ARG0 (c15-1 / no-one)
       :manner (c15-2 / literal))

# ::snt Both shows irrelevant. Teen Mom is much better
# ::tokens ["Both", "shows", "irrelevant", ".", "Teen", "Mom", "is", "much", "better"]
# ::lemmas ["both", "show", "irrelevant", ".", "Teen", "Mom", "be", "much", "well"]
(c16-1 / multi-sentence
       :snt1 (c16-3 / relevant-01
                    :ARG1 (c16-2 / show-04
                                 :mod (c16-0 / both))
                    :polarity -)
       :snt2 (c16-4 / have-degree-91
                    :ARG1 (c16-5 / person
                                 :ARG0-of (c16-8 / have-rel-role-91
                                                 :ARG2 (c16-6 / mom
                                                              :mod (c16-9 / teen))))
                    :ARG2 (c16-10 / good-02
                                  :ARG1 c16-5)
                    :ARG3 (c16-11 / more
                                  :quant (c16-7 / much))))

# ::snt dont forget to add the - give yourself a try on june st to your playlists!
# ::tokens ["do", "nt", "forget", "to", "add", "the", "-", "give", "yourself", "a", "try", "on", "june", "st", "to", "your", "playlists", "!"]
# ::lemmas ["do", "not", "forget", "to", "add", "the", "-", "give", "yourself", "a", "try", "on", "june", "st", "to", "your", "playlist", "!"]
(c17-0 / forget-01
       :ARG0 (c17-1 / you)
       :ARG1 (c17-3 / add-02
                    :ARG0 c17-1
                    :ARG1 (c17-5 / try-01
                                 :ARG0 c17-1
                                 :ARG1 (c17-2 / string-entity
                                              :value "june st")
                                 :destination (c17-4 / playlist
                                                     :poss c17-1)))
       :polarity -
       :mode imperative)

# ::snt kk dont forget to stream Sangria Wine for clear skin
# ::tokens ["kk", "do", "nt", "forget", "to", "stream", "Sangria", "Wine", "for", "clear", "skin"]
# ::lemmas ["kk", "do", "not", "forget", "to", "stream", "Sangria", "Wine", "for", "clear", "skin"]
(c18-0 / forget-01
       :ARG0 (c18-2 / you)
       :ARG1 (c18-4 / stream-03
                    :ARG0 c18-2
                    :ARG1 (c18-5 / wine
                                 :name (c18-3 / name
                                              :op1 "Sangria"
                                              :op2 "Wine"))
                    :purpose (c18-1 / skin
                                    :ARG1-of (c18-6 / clear-08)))
       :polarity -
       :mode imperative)

# ::snt Tea
# ::tokens ["Tea"]
# ::lemmas ["tea"]
(c19-0 / tea)

# ::snt we need LG6
# ::tokens ["we", "need", "LG6"]
# ::lemmas ["we", "need", "LG6"]
(c20-2 / need-01
       :ARG0 (c20-0 / we)
       :ARG1 (c20-3 / product
                    :name (c20-1 / name
                                 :op1 "LG6")))

# ::snt Also stream ARTPOP by Lady Gaga
# ::tokens ["Also", "stream", "ARTPOP", "by", "Lady", "Gaga"]
# ::lemmas ["also", "stream", "artpop", "by", "Lady", "Gaga"]
(c21-3 / stream-01
       :ARG0 (c21-0 / you)
       :ARG1 (c21-2 / music
                    :name (c21-1 / name
                                 :op1 "ARTPOP")
                    :source (c21-5 / person
                                   :name (c21-4 / name
                                                :op1 "Lady"
                                                :op2 "Gagla")))
       :mod (c21-6 / also)
       :mode imperative)

# ::snt and camila by camila cabello
# ::tokens ["and", "camila", "by", "camila", "cabello"]
# ::lemmas ["and", "camila", "by", "camila", "cabello"]
(c22-2 / and
       :op2 (c22-0 / event
                   :name (c22-1 / name
                                :op1 "Camila"
                                :op2 "Cabello")))

# ::snt Wow i love a thread of legends
# ::tokens ["Wow", "i", "love", "a", "thread", "of", "legends"]
# ::lemmas ["wow", "i", "love", "a", "thread", "of", "legend"]
(c23-0 / love-01
       :ARG0 (c23-2 / i)
       :ARG1 (c23-3 / thread
                    :topic (c23-4 / legend))
       :mod (c23-1 / wow
                   :mode expressive))

# ::snt outperforming where
# ::tokens ["outperforming", "where"]
# ::lemmas ["outperform", "where"]
(c24-0 / perform-02
       :location (c24-1 / amr-unknown)
       :polarity -)

# ::snt She's a hoe who wants attention
# ::tokens ["She", "'s", "a", "hoe", "who", "wants", "attention"]
# ::lemmas ["she", "be", "a", "hoe", "who", "want", "attention"]
(c25-1 / hoe
       :domain (c25-3 / she)
       :ARG0-of (c25-0 / want-01
                       :ARG1 (c25-2 / attend-02
                                    :ARG1 c25-3)))

# ::snt the light is coming
# ::tokens ["the", "light", "is", "coming"]
# ::lemmas ["the", "light", "be", "come"]
(c26-0 / come-03
       :ARG1 (c26-1 / light))

# ::snt and lust for life by Lana del savior
# ::tokens ["and", "lust", "for", "life", "by", "Lana", "del", "savior"]
# ::lemmas ["and", "lust", "for", "life", "by", "Lana", "del", "savior"]
(c27-3 / and
       :op2 (c27-2 / lust-01
                   :ARG0 (c27-1 / person
                                :name (c27-0 / name
                                             :op1 "Lana"
                                             :op2 "del"
                                             :op3 "S savior"))
                   :ARG1 (c27-4 / life)))

# ::snt And No Drama by Tinashe (feat. Offset)
# ::tokens ["And", "No", "Drama", "by", "Tinashe", "(", "feat", ".", "Offset", ")"]
# ::lemmas ["and", "no", "Drama", "by", "Tinashe", "(", "feat", ".", "offset", ")"]
(c28-6 / and
       :op2 (c28-5 / publication-91
                   :ARG0 (c28-3 / person
                                :name (c28-2 / name
                                             :op1 "Tinashe"))
                   :ARG1 (c28-7 / drama
                                :polarity -)
                   :ARG2-of (c28-0 / feat-01
                                   :ARG1 (c28-1 / broadcast-program
                                                :name (c28-4 / name
                                                             :op1 "Offset")))))

# ::snt why promote their failing relationship?!??? a train wreck!
# ::tokens ["why", "promote", "their", "failing", "relationship", "?", "!", "?", "?", "?", "a", "train", "wreck", "!"]
# ::lemmas ["why", "promote", "their", "fail", "relationship", "?", "!", "?", "?", "?", "a", "train", "wreck", "!"]
(c29-1 / multi-sentence
       :snt1 (c29-4 / cause-01
                    :ARG0 (c29-7 / amr-unknown)
                    :ARG1 (c29-3 / promote-02
                                 :ARG1 (c29-2 / relation-03
                                              :ARG0 (c29-6 / they)
                                              :ARG1-of (c29-0 / fail-01))))
       :snt2 (c29-5 / wreck-01
                    :ARG0 (c29-8 / train)))

# ::snt No one cares, stream Entertainer by zayn
# ::tokens ["No", "one", "cares", ",", "stream", "Entertainer", "by", "zayn"]
# ::lemmas ["no", "one", "care", ",", "stream", "Entertainer", "by", "zayn"]
(c30-2 / multi-sentence
       :snt1 (c30-8 / care-01
                    :ARG0 (c30-1 / no-one))
       :snt2 (c30-3 / stream-01
                    :ARG0 (c30-0 / you)
                    :ARG1 (c30-4 / music
                                 :name (c30-5 / name
                                              :op1 "Entertainer")
                                 :source (c30-6 / person
                                                :name (c30-7 / name
                                                             :op1 "Zayn")))
                    :mode imperative))

# ::snt imma keep it real with ya chief, but aint nobody watched this shit
# ::tokens ["imma", "keep", "it", "real", "with", "ya", "chief", ",", "but", "ai", "nt", "nobody", "watched", "this", "shit"]
# ::lemmas ["imma", "keep", "it", "real", "with", "ya", "chief", ",", "but", "be", "nt", "nobody", "watch", "this", "shit"]
(c31-6 / contrast-01
       :ARG1 (c31-5 / keep-02
                    :ARG0 (c31-8 / i)
                    :ARG1 (c31-4 / real-04
                                 :ARG1 (c31-3 / it)
                                 :ARG2 (c31-0 / you
                                              :mod (c31-10 / chief))))
       :ARG2 (c31-7 / watch-01
                    :ARG0 (c31-1 / nobody)
                    :ARG1 (c31-2 / shit
                                 :mod (c31-9 / this))
                    :polarity -))

# ::snt And stream Anna Wintour by Azealia Banks
# ::tokens ["And", "stream", "Anna", "Wintour", "by", "Azealia", "Banks"]
# ::lemmas ["and", "stream", "Anna", "Wintour", "by", "Azealia", "Banks"]
(c33-4 / and
       :op2 (c33-1 / stream-01
                   :ARG0 (c33-3 / person
                                :name (c33-0 / name
                                             :op1 "Azealia"
                                             :op2 "Banks")
                                :ARG1-of c33-1)
                   :name (c33-2 / name
                                :op1 "Anna"
                                :op2 "Wintour")))

# ::snt She's so pathetic
# ::tokens ["She", "'s", "so", "pathetic"]
# ::lemmas ["she", "be", "so", "pathetic"]
(c34-1 / pathetic
       :degree (c34-2 / so)
       :domain (c34-0 / she))

# ::snt of course let's also support the with music for cars,, they're coming in three days
# ::tokens ["of", "course", "let", "'s", "also", "support", "the", "with", "music", "for", "cars", ",", ",", "they", "'re", "coming", "in", "three", "days"]
# ::lemmas ["of", "course", "let", "us", "also", "support", "the", "with", "music", "for", "car", ",", ",", "they", "be", "come", "in", "three", "days"]
(c35-3 / support-01
       :ARG0 (c35-5 / we)
       :ARG1 (c35-1 / music
                    :beneficiary (c35-6 / car))
       :mod (c35-10 / also)
       :mod (c35-0 / of-course)
       :ARG1-of (c35-12 / cause-01
                        :ARG0 (c35-7 / come-01
                                     :ARG1 (c35-8 / they)
                                     :time (c35-9 / after
                                                  :op1 (c35-2 / now)
                                                  :quant (c35-11 / temporal-quantity
                                                                 :unit (c35-4 / day)
                                                                 :quant 3))))
       :mode imperative)

# ::snt YAAAS someone finally giving tove the recognition she DESERVES! also dont forget to stream alessia caras album Know It All
# ::tokens ["YAAAS", "someone", "finally", "giving", "tove", "the", "recognition", "she", "DESERVES", "!", "also", "do", "nt", "forget", "to", "stream", "alessia", "caras", "album", "Know", "It", "All"]
# ::lemmas ["YAAAS", "someone", "finally", "give", "tove", "the", "recognition", "she", "deserve", "!", "also", "do", "not", "forget", "to", "stream", "alessia", "caras", "album", "know", "it", "all"]
(c37-3 / multi-sentence
       :snt1 (c37-12 / give-01
                     :ARG0 (c37-5 / someone)
                     :ARG1 (c37-6 / recognize-01
                                  :ARG0 c37-5
                                  :ARG1-of (c37-13 / deserve-01
                                                   :ARG0 c37-5))
                     :mod (c37-0 / final)
                     :mod (c37-2 / yea
                                 :mode expressive))
       :snt2 (c37-8 / forget-01
                    :ARG0 (c37-14 / you)
                    :ARG1 (c37-1 / stream-03
                                 :ARG0 c37-14
                                 :ARG1 (c37-11 / album
                                               :name (c37-4 / name
                                                            :op1 "Know"
                                                            :op2 "It"
                                                            :op3 "All")
                                               :mod (c37-9 / country
                                                           :name (c37-7 / name
                                                                        :op1 "Alessia"
                                                                        :op2 "Caras"))))
                    :mod (c37-10 / also)
                    :polarity -
                    :mode imperative))

# ::snt Flop
# ::tokens ["Flop"]
# ::lemmas ["flop"]
(c38-1 / person
       :name (c38-0 / name
                    :op1 "Flop"))

# ::snt And Back To You by Selena
# ::tokens ["And", "Back", "To", "You", "by", "Selena"]
# ::lemmas ["and", "back", "to", "you", "by", "Selena"]
(c39-4 / and
       :op2 (c39-0 / back-02
                   :ARG0 (c39-3 / person
                                :name (c39-2 / name
                                             :op1 "Selena"))
                   :ARG1 (c39-1 / you)))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c40-0 / amr-unknown)

# ::snt The Delusion Is Real
# ::tokens ["The", "Delusion", "Is", "Real"]
# ::lemmas ["the", "delusion", "be", "real"]
(c41-0 / real-04
       :ARG1 (c41-1 / Delusion))

# ::snt Dramas
# ::tokens ["Dramas"]
# ::lemmas ["drama"]
(c42-0 / dramas)

# ::snt no one cares. stream fake love instead
# ::tokens ["no", "one", "cares", ".", "stream", "fake", "love", "instead"]
# ::lemmas ["no", "one", "care", ".", "stream", "fake", "love", "instead"]
(c43-3 / multi-sentence
       :snt1 (c43-6 / care-01
                    :ARG0 (c43-2 / no-one))
       :snt2 (c43-4 / stream-01
                    :ARG0 (c43-1 / you)
                    :ARG1 (c43-5 / love-01
                                 :ARG1-of (c43-0 / fake-02))
                    :ARG1-of (c43-7 / instead-of-91)
                    :mode imperative))

# ::snt And Savior by Iggy Azalea
# ::tokens ["And", "Savior", "by", "Iggy", "Azalea"]
# ::lemmas ["and", "Savior", "by", "Iggy", "Azalea"]
(c44-3 / and
       :op2 (c44-2 / person
                   :name (c44-0 / name
                                :op1 "Savior")
                   :source c44-2
                   :name (c44-1 / name
                                :op1 "Iggy"
                                :op2 "Azalea")))

# ::snt And NTLTC
# ::tokens ["And", "NTLTC"]
# ::lemmas ["and", "NTLTC"]
(c45-2 / and
       :op2 (c45-0 / company
                   :name (c45-1 / name
                                :op1 "NTLTC")))

# ::snt and one kiss by Dula Peep xx
# ::tokens ["and", "one", "kiss", "by", "Dula", "Peep", "xx"]
# ::lemmas ["and", "one", "kiss", "by", "Dula", "Peep", "xx"]
(c46-3 / and
       :op2 (c46-2 / kiss-01
                   :ARG0 (c46-0 / person
                                :name (c46-1 / name
                                             :op1 "Dula"
                                             :op2 "Peep"))
                   :quant 1))

# ::snt lmao next
# ::tokens ["lmao", "next"]
# ::lemmas ["lmao", "next"]
(c47-2 / next
       :mod (c47-3 / laugh-01
                   :ARG0 (c47-0 / i)
                   :manner (c47-1 / loud)
                   :mode expressive))

# ::snt girl you don't have to lie. We all know your show didn't have more viewers than KUWTK.
# ::tokens ["girl", "you", "do", "n't", "have", "to", "lie", ".", "We", "all", "know", "your", "show", "did", "n't", "have", "more", "viewers", "than", "KUWTK", "."]
# ::lemmas ["girl", "you", "do", "not", "have", "to", "lie", ".", "we", "all", "know", "your", "show", "do", "not", "have", "more", "viewer", "than", "KUWTK", "."]
(c48-3 / multi-sentence
       :snt1 (c48-5 / say-01
                    :ARG0 (c48-15 / i)
                    :ARG1 (c48-0 / obligate-01
                                 :ARG1 (c48-17 / girl)
                                 :ARG2 (c48-9 / lie-08
                                              :ARG0 c48-17)
                                 :polarity -)
                    :ARG2 c48-17)
       :snt2 (c48-10 / know-01
                     :ARG0 (c48-13 / we
                                   :mod (c48-16 / all))
                     :ARG1 (c48-8 / have-03
                                  :ARG0 (c48-1 / show-04
                                               :ARG0 (c48-2 / you))
                                  :ARG1 (c48-11 / person
                                                :ARG0-of (c48-7 / view-01)
                                                :ARG1-of (c48-14 / have-quant-91
                                                                 :ARG3 (c48-12 / more)
                                                                 :ARG4 (c48-4 / publication
                                                                              :name (c48-6 / name
                                                                                           :op1 "KUWTK"))))
                                  :polarity -)))

# ::snt IN THREE DAYS SIS MY GOD
# ::tokens ["IN", "THREE", "DAYS", "SIS", "MY", "GOD"]
# ::lemmas ["in", "THREE", "DAYS", "SIS", "my", "god"]
(c49-2 / person
       :name (c49-0 / name
                    :op1 "God")
       :poss (c49-3 / i)
       :time (c49-1 / after
                    :quant (c49-4 / temporal-quantity
                                  :unit (c49-5 / day)
                                  :quant 3)))

# ::snt Oop
# ::tokens ["Oop"]
# ::lemmas ["oop"]
(c50-0 / oops
       :mode expressive)
