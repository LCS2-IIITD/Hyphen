# ::snt Three words, white male privileges.
# ::tokens ["Three", "words", ",", "white", "male", "privileges", "."]
# ::lemmas ["Three", "word", ",", "white", "male", "privilege", "."]
(c1-4 / word
      :ARG1-of (c1-0 / mean-01
                     :ARG2 (c1-2 / privilege-01
                                 :ARG1 (c1-1 / male
                                             :ARG1-of (c1-3 / white-02))))
      :quant 3)

# ::snt million umm and million I think that is beyond suffocating no person needs that type of money for a home and she cant afford her children maybe she shouldnt of adopted so many children I think brad Pitt should pay for his biological children only
# ::tokens ["million", "umm", "and", "million", "I", "think", "that", "is", "beyond", "suffocating", "no", "person", "needs", "that", "type", "of", "money", "for", "a", "home", "and", "she", "ca", "nt", "afford", "her", "children", "maybe", "she", "should", "nt", "of", "adopted", "so", "many", "children", "I", "think", "brad", "Pitt", "should", "pay", "for", "his", "biological", "children", "only"]
# ::lemmas ["million", "umm", "and", "million", "i", "think", "that", "be", "beyond", "suffocate", "no", "person", "need", "that", "type", "of", "money", "for", "a", "home", "and", "she", "can", "not", "afford", "her", "child", "maybe", "she", "should", "not", "of", "adopt", "so", "many", "child", "i", "think", "brad", "Pitt", "should", "pay", "for", "his", "biological", "child", "only"]
(c2-22 / multi-sentence
       :snt1 (c2-17 / think-01
                    :ARG0 (c2-33 / i)
                    :ARG1 (c2-21 / beyond
                                 :op1 (c2-0 / suffocate-01)
                                 :domain (c2-26 / that)))
       :snt2 (c2-16 / and
                    :op1 (c2-29 / need-01
                                :ARG0 (c2-31 / person)
                                :ARG1 (c2-12 / money
                                             :mod (c2-34 / type
                                                         :mod (c2-1 / that)))
                                :purpose (c2-13 / home)
                                :polarity -)
                    :op2 (c2-23 / possible-01
                                :ARG1 (c2-15 / afford-01
                                             :ARG0 c2-31
                                             :ARG1 (c2-5 / person
                                                         :ARG0-of (c2-32 / have-rel-role-91
                                                                         :ARG1 c2-31
                                                                         :ARG2 (c2-25 / child))))
                                :polarity -))
       :snt3 (c2-14 / and
                    :op1 (c2-18 / think-01
                                :ARG0 (c2-10 / i)
                                :ARG1 (c2-30 / recommend-01
                                             :ARG1 (c2-35 / adopt-01
                                                          :ARG0 (c2-3 / person
                                                                      :name (c2-24 / name
                                                                                   :op1 "Brad"
                                                                                   :op2 "Pitt"))
                                                          :ARG1 (c2-20 / child
                                                                       :ARG1-of (c2-11 / have-quant-91
                                                                                       :ARG2 (c2-28 / many)
                                                                                       :ARG3 (c2-8 / so)))
                                                          :mod (c2-9 / only)
                                                          :polarity -)))
                    :op2 (c2-6 / think-01
                               :ARG0 c2-10
                               :ARG1 (c2-7 / recommend-01
                                           :ARG1 (c2-19 / pay-01
                                                        :ARG0 c2-3
                                                        :ARG3 (c2-36 / person
                                                                     :ARG0-of (c2-27 / have-rel-role-91
                                                                                     :ARG1 c2-3
                                                                                     :ARG2 (c2-4 / child
                                                                                                 :mod (c2-2 / biology)))))))))

# ::snt They're both trash. There. The end. Mystery solved.
# ::tokens ["They", "'re", "both", "trash", ".", "There", ".", "The", "end", ".", "Mystery", "solved", "."]
# ::lemmas ["they", "be", "both", "trash", ".", "there", ".", "the", "end", ".", "Mystery", "solve", "."]
(c3-1 / multi-sentence
      :snt1 (c3-5 / trash
                  :domain (c3-7 / they
                                :mod (c3-0 / both)))
      :snt2 (c3-6 / there)
      :snt3 (c3-3 / end-01)
      :snt4 (c3-2 / solve-01
                  :ARG1 (c3-4 / mystery)))

# ::snt Angelina Jolie has some unresolved issues within herself,should look for anger management not direct toward others
# ::tokens ["Angelina", "Jolie", "has", "some", "unresolved", "issues", "within", "herself", ",", "should", "look", "for", "anger", "management", "not", "direct", "toward", "others"]
# ::lemmas ["Angelina", "Jolie", "have", "some", "unresolved", "issue", "within", "herself", ",", "should", "look", "for", "anger", "management", "not", "direct", "toward", "other"]
(c4-10 / and
       :op1 (c4-9 / issue-02
                  :ARG1-of (c4-5 / resolve-01
                                 :polarity -)
                  :mod (c4-3 / some)
                  :mod (c4-8 / within
                             :op1 (c4-6 / person
                                        :name (c4-1 / name
                                                    :op1 "Angelina"
                                                    :op2 "Jolie"))))
       :op2 (c4-13 / recommend-01
                   :ARG1 (c4-7 / look-04
                               :ARG0 c4-6
                               :ARG1 (c4-2 / manage-01
                                           :ARG1 (c4-11 / anger-01)
                                           :ARG1-of (c4-12 / direct-02
                                                           :ARG2 (c4-4 / person
                                                                       :mod (c4-0 / other))
                                                           :polarity -)))))

# ::snt He is vile and an abusive piece of shit!
# ::tokens ["He", "is", "vile", "and", "an", "abusive", "piece", "of", "shit", "!"]
# ::lemmas ["he", "be", "vile", "and", "an", "abusive", "piece", "of", "shit", "!"]
(c5-5 / and
      :op1 (c5-1 / vile-02
                 :ARG1 (c5-2 / he))
      :op2 (c5-3 / piece
                 :consist-of (c5-0 / shit)
                 :ARG0-of (c5-4 / abuse-01)))

# ::snt Its just a shame all round. The kids suffer most. Here's hoping that they can their crap together and work it out.
# ::tokens ["Its", "just", "a", "shame", "all", "round", ".", "The", "kids", "suffer", "most", ".", "Here", "'s", "hoping", "that", "they", "can", "their", "crap", "together", "and", "work", "it", "out", "."]
# ::lemmas ["its", "just", "a", "shame", "all", "round", ".", "the", "kid", "suffer", "most", ".", "here", "be", "hope", "that", "they", "can", "their", "crap", "together", "and", "work", "it", "out", "."]
(c7-1 / multi-sentence
      :snt1 (c7-2 / shame-02
                  :mod (c7-12 / just)
                  :duration (c7-3 / round
                                  :mod (c7-14 / all)))
      :snt2 (c7-0 / suffer-01
                  :ARG0 (c7-6 / kid)
                  :ARG1-of (c7-5 / have-quant-91
                                 :ARG3 (c7-7 / most)))
      :snt3 (c7-11 / hope-01
                   :ARG0 (c7-13 / i)
                   :ARG1 (c7-8 / possible-01
                               :ARG1 (c7-15 / and
                                            :op1 (c7-16 / together
                                                        :domain (c7-9 / crap
                                                                      :poss c7-6))
                                            :op2 (c7-10 / work-out-02
                                                        :ARG0 c7-6
                                                        :ARG1 c7-9)))
                   :location (c7-4 / here)))

# ::snt Angelina is spiteful.
# ::tokens ["Angelina", "is", "spiteful", "."]
# ::lemmas ["Angelina", "be", "spiteful", "."]
(c8-2 / spiteful
      :domain (c8-1 / person
                    :name (c8-0 / name
                                :op1 "Angelina")))

# ::snt I'm sorry but is million not enough for child support?
# ::tokens ["I", "'m", "sorry", "but", "is", "million", "not", "enough", "for", "child", "support", "?"]
# ::lemmas ["i", "be", "sorry", "but", "be", "million", "not", "enough", "for", "child", "support", "?"]
(c9-5 / contrast-01
      :ARG1 (c9-2 / sorry-01
                  :ARG1 (c9-6 / i))
      :ARG2 (c9-4 / have-quant-91
                  :ARG1 (c9-1 / monetary-quantity
                              :unit (c9-8 / dollar)
                              :quant 1000000)
                  :ARG3 (c9-3 / enough
                              :polarity -)
                  :ARG6 (c9-0 / support-01
                              :ARG1 (c9-9 / child))
                  :polarity (c9-7 / amr-unknown)))

# ::snt This train wreck was bound to happen. He should've known better than to get involved with this crazy woman.
# ::tokens ["This", "train", "wreck", "was", "bound", "to", "happen", ".", "He", "should", "'ve", "known", "better", "than", "to", "get", "involved", "with", "this", "crazy", "woman", "."]
# ::lemmas ["this", "train", "wreck", "be", "bind", "to", "happen", ".", "he", "should", "'ve", "know", "well", "than", "to", "get", "involve", "with", "this", "crazy", "woman", "."]
(c10-1 / multi-sentence
       :snt1 (c10-0 / bind-02
                    :ARG1 (c10-7 / wreck-01
                                 :ARG1 (c10-10 / train)
                                 :mod (c10-12 / this)))
       :snt2 (c10-2 / recommend-01
                    :ARG1 (c10-4 / know-01
                                 :ARG0 (c10-3 / he)
                                 :ARG1-of (c10-9 / have-degree-91
                                                 :ARG2 (c10-13 / good-02)
                                                 :ARG3 (c10-5 / more)
                                                 :ARG4 (c10-11 / involve-01
                                                               :ARG1 c10-3
                                                               :ARG2 (c10-6 / woman
                                                                            :ARG1-of (c10-8 / crazy-03)
                                                                            :mod (c10-14 / this)))))
                    :ARG2 c10-3))

# ::snt She is crazy ! Those poor kids !
# ::tokens ["She", "is", "crazy", "!", "Those", "poor", "kids", "!"]
# ::lemmas ["she", "be", "crazy", "!", "those", "poor", "kid", "!"]
(c11-0 / multi-sentence
       :snt1 (c11-4 / crazy-03
                    :ARG1 (c11-1 / she))
       :snt2 (c11-2 / kid
                    :mod (c11-3 / poor)
                    :mod (c11-5 / that)))

# ::snt bc Angelina Jolie is nuts no secret
# ::tokens ["bc", "Angelina", "Jolie", "is", "nuts", "no", "secret"]
# ::lemmas ["bc", "Angelina", "Jolie", "be", "nuts", "no", "secret"]
(c12-1 / nuts
       :domain (c12-4 / person
                      :name (c12-3 / name
                                   :op1 "Angelina"
                                   :op2 "Jolie"))
       :mod (c12-2 / secret
                   :polarity -)
       :ARG1-of (c12-0 / broadcast-program
                       :name c12-3
                       :op1 "BBC"))
