# ::snt this sounds quite similar to the sentiments after political marriages in Pakistan.
# ::tokens ["this", "sounds", "quite", "similar", "to", "the", "sentiments", "after", "political", "marriages", "in", "Pakistan", "."]
# ::lemmas ["this", "sound", "quite", "similar", "to", "the", "sentiment", "after", "political", "marriage", "in", "Pakistan", "."]
(c1-3 / sound-01
      :ARG1 (c1-6 / this)
      :ARG2 (c1-0 / sentiment
                  :time (c1-8 / after
                              :op1 (c1-1 / marry-01
                                         :mod (c1-4 / politics)
                                         :location (c1-5 / country
                                                         :name (c1-2 / name
                                                                     :op1 "Pakistan")))))
      :degree (c1-7 / quite))

# ::snt Aur kuch??
# ::tokens ["Aur", "kuch", "?", "?"]
# ::lemmas ["Aur", "kuch", "?", "?"]
(c2-0 / kuch
      :polarity (c2-1 / amr-unknown))

# ::snt Brad..only good to eat. Love you always AJ Strong Woman
# ::tokens ["Brad", "..", "only", "good", "to", "eat", ".", "Love", "you", "always", "AJ", "Strong", "Woman"]
# ::lemmas ["Brad", "..", "only", "good", "to", "eat", ".", "love", "you", "always", "AJ", "Strong", "Woman"]
(c3-1 / multi-sentence
      :snt1 (c3-3 / say-01
                  :ARG1 (c3-11 / good-02
                               :ARG1 (c3-5 / eat-01)
                               :mod (c3-0 / only))
                  :ARG2 (c3-7 / person
                              :name (c3-2 / name
                                          :op1 "Brad"))
                  :snt2-of c3-1)
      :ARG1 (c3-8 / love-01
                  :ARG0 (c3-9 / i)
                  :ARG1 (c3-4 / person
                              :name (c3-6 / name
                                          :op1 "Aj"
                                          :op2 "Strong"
                                          :op3 "Woman"))
                  :time (c3-10 / always))
      :ARG2 c3-4)

# ::snt It turns out this statement is false.
# ::tokens ["It", "turns", "out", "this", "statement", "is", "false", "."]
# ::lemmas ["it", "turn", "out", "this", "statement", "be", "false", "."]
(c4-2 / turn-out-11
      :ARG1 (c4-0 / false
                  :domain (c4-4 / thing
                                :ARG1-of (c4-1 / state-01)
                                :mod (c4-3 / this))))

# ::snt Good decision
# ::tokens ["Good", "decision"]
# ::lemmas ["good", "decision"]
(c5-2 / thing
      :ARG1-of (c5-1 / decide-01)
      :ARG1-of (c5-0 / good-02))

# ::snt I mean come on;
# ::tokens ["I", "mean", "come", "on", ";"]
# ::lemmas ["i", "mean", "come", "on", ";"]
(c6-2 / mean-01
      :ARG0 (c6-3 / i)
      :ARG2 (c6-0 / come-on-25
                  :ARG1 (c6-1 / you)
                  :mode imperative))

# ::snt He didn't say that..its a tabloid lie ...The only interview he really did with his own words was GQ But this is a tabloid lie
# ::tokens ["He", "did", "n't", "say", "that", "..", "its", "a", "tabloid", "lie", "...", "The", "only", "interview", "he", "really", "did", "with", "his", "own", "words", "was", "GQ", "But", "this", "is", "a", "tabloid", "lie"]
# ::lemmas ["he", "do", "not", "say", "that", "..", "its", "a", "tabloid", "lie", "...", "the", "only", "interview", "he", "really", "do", "with", "his", "own", "word", "be", "GQ", "but", "this", "be", "a", "tabloid", "lie"]
(c7-1 / multi-sentence
      :snt1 (c7-3 / say-01
                  :ARG0 (c7-6 / he)
                  :ARG1 (c7-13 / that)
                  :ARG1-of (c7-7 / lie-08
                                 :mod (c7-16 / tabloid))
                  :polarity -)
      :snt2 (c7-12 / interview-01
                   :ARG0 (c7-8 / magazine
                               :name (c7-2 / name
                                           :op1 "GQ"))
                   :ARG1 (c7-11 / he)
                   :mod (c7-0 / only)
                   :ARG1-of (c7-4 / real-04)
                   :manner (c7-9 / word-01
                                 :ARG0 c7-11))
      :snt3 (c7-10 / contrast-01
                   :ARG1 (c7-15 / lie-08
                                :ARG1 (c7-14 / this)
                                :mod (c7-5 / tabloid))))

# ::snt ,millions could have told brad Pitt this from the beginning,without knowing either of them
# ::tokens [",", "millions", "could", "have", "told", "brad", "Pitt", "this", "from", "the", "beginning", ",", "without", "knowing", "either", "of", "them"]
# ::lemmas [",", "millions", "could", "have", "tell", "brad", "Pitt", "this", "from", "the", "beginning", ",", "without", "know", "either", "of", "they"]
(c13-6 / possible-01
       :ARG1 (c13-8 / tell-01
                    :ARG0 (c13-3 / person
                                 :quant (c13-2 / multiple
                                               :op1 1000000))
                    :ARG1 (c13-9 / this)
                    :ARG2 (c13-10 / person
                                  :name (c13-4 / name
                                               :op1 "Brad"
                                               :op2 "Pitt"))
                    :time (c13-0 / from
                                 :op1 (c13-1 / begin-01))
                    :manner (c13-7 / know-01
                                   :ARG0 c13-3
                                   :ARG1 (c13-5 / either
                                                :op1 c13-3
                                                :op2 c13-10)
                                   :polarity -)))

# ::snt if this is true ..whatever happnd to being a gentleman!..shez the mum of ur kids,u cant compare two ppl,all relations r diff,why throw mud on her! ..be a good heart Brad ..not just a heart throb
# ::tokens ["if", "this", "is", "true", "..", "whatever", "happnd", "to", "being", "a", "gentleman!", "..", "shez", "the", "mum", "of", "ur", "kids", ",", "u", "ca", "nt", "compare", "two", "ppl", ",", "all", "relations", "r", "diff", ",", "why", "throw", "mud", "on", "her", "!", "..", "be", "a", "good", "heart", "Brad", "..", "not", "just", "a", "heart", "throb"]
# ::lemmas ["if", "this", "be", "true", "..", "whatever", "happnd", "to", "be", "a", "gentleman!", "..", "shez", "the", "mum", "of", "ur", "kid", ",", "u", "can", "not", "compare", "two", "ppl", ",", "all", "relation", "r", "diff", ",", "why", "throw", "mud", "on", "she", "!", "..", "be", "a", "good", "heart", "Brad", "..", "not", "just", "a", "heart", "throb"]
(c14-21 / multi-sentence
        :snt1 (c14-9 / have-condition-91
                     :ARG2 (c14-16 / true-01
                                   :ARG1 (c14-24 / this)))
        :snt2 (c14-31 / whatever
                      :ARG1-of (c14-23 / cause-01
                                       :ARG0 (c14-32 / have-rel-role-91
                                                     :ARG0 (c14-0 / she)
                                                     :ARG1 (c14-30 / person
                                                                   :ARG0-of (c14-8 / have-rel-role-91
                                                                                   :ARG1 (c14-7 / you)
                                                                                   :ARG2 (c14-10 / kid)))
                                                     :ARG2 (c14-11 / mum)))
                      :snt3 (c14-22 / possible-01
                                    :ARG1 (c14-20 / compare-01
                                                  :ARG0 (c14-2 / we)
                                                  :ARG1 (c14-5 / person
                                                               :ARG1-of (c14-29 / relate-01
                                                                                :mod (c14-15 / all))
                                                               :quant 2))
                                    :polarity -)
                      :snt4 (c14-4 / cause-01
                                   :ARG0 (c14-14 / amr-unknown)
                                   :ARG1 (c14-33 / throw-01
                                                 :ARG0 (c14-17 / you)
                                                 :ARG1 (c14-26 / mud)
                                                 :ARG2 (c14-6 / she)))
                      :snt5 (c14-25 / heart
                                    :ARG1-of (c14-18 / good-02)
                                    :domain (c14-3 / person
                                                   :name (c14-28 / name
                                                                 :op1 "Brad"))
                                    :ARG1-of (c14-27 / contrast-01
                                                     :ARG2 (c14-19 / person
                                                                   :ARG0-of (c14-1 / throb-01
                                                                                   :ARG1 (c14-12 / heart)
                                                                                   :mod (c14-13 / just
                                                                                                :polarity -)))))))

# ::snt Happy realisation Brad
# ::tokens ["Happy", "realisation", "Brad"]
# ::lemmas ["happy", "realisation", "Brad"]
(c15-1 / say-01
       :ARG1 (c15-3 / happy-01
                    :ARG1 (c15-2 / realize-01
                                 :ARG0 (c15-4 / person
                                              :name (c15-0 / name
                                                           :op1 "Brad")
                                              :ARG2-of c15-1))))

# ::snt chawal kahin ka
# ::tokens ["chawal", "kahin", "ka"]
# ::lemmas ["chawal", "kahin", "ka"]
(c16-0 / kahin
       :mode expressive)

# ::snt he got dumped by the bitch too totally deserved
# ::tokens ["he", "got", "dumped", "by", "the", "bitch", "too", "totally", "deserved"]
# ::lemmas ["he", "got", "dump", "by", "the", "bitch", "too", "totally", "deserve"]
(c18-5 / deserve-01
       :ARG0 (c18-1 / he)
       :ARG1 (c18-2 / dump-01
                    :ARG0 (c18-0 / bitch)
                    :ARG1 c18-1)
       :degree (c18-4 / total)
       :ARG2-of (c18-3 / have-degree-91
                       :ARG1 c18-2
                       :ARG3 (c18-6 / too)))

# ::snt If u screw over a good girl..u end up with a bitch. Duh.
# ::tokens ["If", "u", "screw", "over", "a", "good", "girl", "..", "u", "end", "up", "with", "a", "bitch", ".", "Duh", "."]
# ::lemmas ["if", "u", "screw", "over", "a", "good", "girl", "..", "u", "end", "up", "with", "a", "bitch", ".", "Duh", "."]
(c19-2 / multi-sentence
       :snt1 (c19-5 / have-condition-91
                    :ARG1 (c19-4 / end-up-03
                                 :ARG1 (c19-1 / you)
                                 :ARG2 (c19-0 / bitch))
                    :ARG2 (c19-3 / screw-over-05
                                 :ARG0 c19-1
                                 :ARG1 (c19-7 / girl
                                              :ARG1-of (c19-6 / good-02))))
       :snt2 (c19-8 / duh
                    :mode expressive))
