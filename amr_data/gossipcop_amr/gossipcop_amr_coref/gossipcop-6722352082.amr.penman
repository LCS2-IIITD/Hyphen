# ::snt thank you so much! It's an insanely fun part.
# ::tokens ["thank", "you", "so", "much", "!", "It", "'s", "an", "insanely", "fun", "part", "."]
# ::lemmas ["thank", "you", "so", "much", "!", "it", "be", "an", "insanely", "fun", "part", "."]
(c1-2 / multi-sentence
      :snt1 (c1-9 / thank-01
                  :ARG0 (c1-8 / i)
                  :ARG1 (c1-1 / you)
                  :ARG1-of (c1-5 / have-quant-91
                                 :ARG2 (c1-6 / much)
                                 :ARG3 (c1-3 / so)))
      :snt2 (c1-0 / fun-01
                  :ARG1 (c1-7 / part
                              :domain (c1-4 / it))
                  :degree (c1-10 / insane)))

# ::snt Love the music!
# ::tokens ["Love", "the", "music", "!"]
# ::lemmas ["love", "the", "music", "!"]
(c2-1 / love-01
      :ARG1 (c2-0 / music))

# ::snt And Aragorns song at the end. So many emotions!
# ::tokens ["And", "Aragorns", "song", "at", "the", "end", ".", "So", "many", "emotions", "!"]
# ::lemmas ["and", "Aragorns", "song", "at", "the", "end", ".", "so", "many", "emotion", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-6 / and
                  :op2 (c3-4 / end-01
                             :ARG1 (c3-3 / song
                                         :name (c3-1 / name
                                                     :op1 "Aragorns"))))
      :snt2 (c3-7 / emotion
                  :quant (c3-5 / many
                               :degree (c3-0 / so))))

# ::snt Ugh pip s
# ::tokens ["Ugh", "pip", "s"]
# ::lemmas ["ugh", "pip", "s"]
(c4-1 / pip
      :mod (c4-0 / ugh
                 :mode expressive))

# ::snt Because of pils song
# ::tokens ["Because", "of", "pils", "song"]
# ::lemmas ["because", "of", "pil", "song"]
(c5-0 / cause-01
      :ARG0 (c5-2 / song
                  :mod (c5-1 / pils)))

# ::snt I love me some LOTR Two Towers. The Riders of Rohan violin solo gets me every time, but The Return of the King...so good.
# ::tokens ["I", "love", "me", "some", "LOTR", "Two", "Towers", ".", "The", "Riders", "of", "Rohan", "violin", "solo", "gets", "me", "every", "time", ",", "but", "The", "Return", "of", "the", "King", "...", "so", "good", "."]
# ::lemmas ["i", "love", "i", "some", "LOTR", "two", "Towers", ".", "the", "Riders", "of", "Rohan", "violin", "solo", "get", "i", "every", "time", ",", "but", "The", "Return", "of", "the", "King", "...", "so", "good", "."]
(c6-12 / multi-sentence
       :snt1 (c6-2 / love-01
                   :ARG0 (c6-20 / i)
                   :ARG1 (c6-11 / book
                                :name (c6-16 / name
                                             :op1 "Two"
                                             :op2 "Towers")
                                :mod (c6-0 / some)
                                :mod (c6-1 / book
                                           :name (c6-13 / name
                                                        :op1 " LOTR"))))
       :snt2 (c6-14 / contrast-01
                    :ARG1 (c6-10 / get-01
                                 :ARG0 (c6-6 / solo
                                             :mod (c6-8 / violin)
                                             :mod (c6-18 / person
                                                         :name (c6-19 / name
                                                                      :op1 "Rohan")))
                                 :ARG1 (c6-7 / i)
                                 :frequency (c6-9 / time
                                                  :mod (c6-17 / every)))
                    :ARG2 (c6-3 / good-02
                                :ARG1 (c6-4 / book
                                            :name (c6-15 / name
                                                         :op1 "The"
                                                         :op2 "Return"
                                                         :op3 "of"
                                                         :op4 "the"
                                                         :op5 "King"))
                                :degree (c6-5 / so))))

# ::snt Well, I think I was having dietary issues AND someone shared a bug. So sick today! Everything from collarbones up hurts. Hoping I recover enough to get in a run tomorrow &amp; stay on schedule + improve enough by Monday night to enjoy hubby's b-day dinner.
# ::tokens ["Well", ",", "I", "think", "I", "was", "having", "dietary", "issues", "AND", "someone", "shared", "a", "bug", ".", "So", "sick", "today", "!", "Everything", "from", "collarbones", "up", "hurts", ".", "Hoping", "I", "recover", "enough", "to", "get", "in", "a", "run", "tomorrow", "&", "amp", ";", "stay", "on", "schedule", "+", "improve", "enough", "by", "Monday", "night", "to", "enjoy", "hubby", "'s", "b", "-", "day", "dinner", "."]
# ::lemmas ["well", ",", "i", "think", "i", "be", "have", "dietary", "issue", "and", "someone", "share", "a", "bug", ".", "so", "sick", "today", "!", "everything", "from", "collarbone", "up", "hurt", ".", "hope", "i", "recover", "enough", "to", "get", "in", "a", "run", "tomorrow", "&", "amp", ";", "stay", "on", "schedule", "+", "improve", "enough", "by", "Monday", "night", "to", "enjoy", "hubby", "'s", "b", "-", "day", "dinner", "."]
(c7-22 / multi-sentence
       :snt1 (c7-16 / and
                    :op1 (c7-17 / think-01
                                :ARG0 (c7-34 / i)
                                :ARG1 (c7-10 / have-03
                                             :ARG0 c7-34
                                             :ARG1 (c7-15 / and
                                                          :op1 (c7-8 / issue-02
                                                                     :ARG0 (c7-36 / diet)
                                                                     :ARG1 c7-34)
                                                          :op2 (c7-1 / share-01
                                                                     :ARG0 (c7-6 / someone)
                                                                     :ARG1 (c7-21 / bug)))))
                    :op2 (c7-5 / sick-05
                               :ARG1 c7-34
                               :degree (c7-29 / so)
                               :time (c7-26 / today)))
       :snt2 (c7-33 / hope-01
                    :ARG0 (c7-20 / i)
                    :ARG1 (c7-30 / recover-01
                                 :ARG1 c7-20
                                 :ARG1-of (c7-9 / have-quant-91
                                                :ARG3 (c7-31 / enough)
                                                :ARG6 (c7-18 / get-04
                                                             :ARG0 c7-20
                                                             :ARG1 (c7-4 / run-02
                                                                         :ARG0 c7-20)
                                                             :time (c7-35 / tomorrow)))))
       :snt3 (c7-14 / and
                    :op1 (c7-2 / stay-01
                               :ARG1 c7-20
                               :ARG3 (c7-7 / on-schedule))
                    :op2 (c7-0 / improve-01
                               :ARG1 c7-20
                               :ARG2-of (c7-27 / have-degree-91
                                               :ARG1 c7-20
                                               :ARG3 (c7-19 / enough)
                                               :ARG6 (c7-23 / enjoy-01
                                                            :ARG0 c7-20
                                                            :ARG1 (c7-25 / dinner
                                                                         :poss (c7-32 / person
                                                                                      :ARG0-of (c7-11 / have-rel-role-91
                                                                                                      :ARG1 c7-20
                                                                                                      :ARG2 (c7-13 / hubby))
                                                                                      :mod (c7-3 / birthday)))
                                                            :time (c7-24 / date-entity
                                                                         :weekday (c7-12 / monday)
                                                                         :dayperiod (c7-28 / night)))))))

# ::snt Omg! Totally relate to this ... everything went downhill from Monday and Wed was the worst. Someone who saw my multiple orals said the st was ok, and nd was horrendous. But scientists are resilient.
# ::tokens ["Omg", "!", "Totally", "relate", "to", "this", "...", "everything", "went", "downhill", "from", "Monday", "and", "We", "d", "was", "the", "worst", ".", "Someone", "who", "saw", "my", "multiple", "orals", "said", "the", "st", "was", "ok", ",", "and", "nd", "was", "horrendous", ".", "But", "scientists", "are", "resilient", "."]
# ::lemmas ["Omg", "!", "totally", "relate", "to", "this", "...", "everything", "go", "downhill", "from", "Monday", "and", "we", "d", "be", "the", "bad", ".", "someone", "who", "see", "my", "multiple", "oral", "say", "the", "st", "be", "ok", ",", "and", "nd", "be", "horrendous", ".", "but", "scientist", "be", "resilient", "."]
(c8-14 / multi-sentence
       :snt1 (c8-22 / relate-01
                    :ARG2 (c8-10 / this)
                    :degree (c8-19 / total)
                    :mode expressive)
       :snt2 (c8-11 / go-01
                    :ARG1 (c8-23 / everything)
                    :ARG4 (c8-27 / downhill)
                    :time (c8-9 / and
                                :op1 (c8-18 / date-entity
                                            :weekday (c8-6 / monday))
                                :op2 (c8-15 / date-entity
                                            :weekday (c8-24 / wednesday))
                                :ARG1-of (c8-13 / bad-07
                                                :ARG2-of (c8-7 / have-degree-91
                                                               :ARG1 c8-11
                                                               :ARG3 (c8-20 / most)))))
       :snt3 (c8-0 / say-01
                   :ARG0 (c8-4 / someone
                               :ARG0-of (c8-3 / see-01
                                              :ARG1 (c8-5 / oral
                                                          :quant (c8-16 / multiple)
                                                          :poss (c8-26 / i))))
                   :ARG1 (c8-8 / and
                               :op1 (c8-12 / okay-04
                                           :ARG1 (c8-21 / st))
                               :op2 (c8-25 / horrendous
                                           :domain c8-21)))
       :snt4 (c8-17 / contrast-01
                    :ARG2 (c8-2 / resilience
                                :domain (c8-1 / scientist))))

# ::snt PHANTOMS FOR THE PHANTOM THRONE! FOR THE THRONE
# ::tokens ["PHANTOMS", "FOR", "THE", "PHANTOM", "THRONE", "!", "FOR", "THE", "THRONE"]
# ::lemmas ["phantom", "for", "the", "phantom", "throne", "!", "for", "the", "THRONE"]
(c9-1 / multi-sentence
      :snt1 (c9-3 / prepare-02
                  :ARG0 (c9-0 / you)
                  :ARG2 (c9-2 / person
                              :ARG1-of (c9-8 / die-01))
                  :mode imperative)
      :snt2 (c9-6 / prepare-02
                  :ARG0 (c9-7 / you)
                  :ARG1 (c9-4 / person
                              :ARG1-of (c9-5 / die-01))
                  :mode imperative))

# ::snt awww i make them talk..im super nice i should be a teacher!
# ::tokens ["awww", "i", "make", "them", "talk", "..", "im", "super", "nice", "i", "should", "be", "a", "teacher", "!"]
# ::lemmas ["awww", "i", "make", "they", "talk", "..", "im", "super", "nice", "i", "should", "be", "a", "teacher", "!"]
(c10-0 / multi-sentence
       :snt1 (c10-6 / make-02
                    :ARG0 (c10-9 / i)
                    :ARG1 (c10-8 / talk-01
                                 :ARG0 (c10-10 / they))
                    :mod (c10-4 / aw
                                :mode expressive))
       :snt2 (c10-1 / nice-01
                    :ARG1 (c10-3 / i)
                    :degree (c10-2 / super))
       :snt3 (c10-5 / recommend-01
                    :ARG0 (c10-12 / i)
                    :ARG1 (c10-7 / person
                                 :ARG0-of (c10-11 / teach-01)
                                 :domain c10-12)))

# ::snt your pupil told me you were coming tonight and i was like I KNOWW! LEANNE! ehem miss holland! haahha. shes so lovely
# ::tokens ["your", "pupil", "told", "me", "you", "were", "coming", "tonight", "and", "i", "was", "like", "I", "KNOWW", "!", "LEANNE", "!", "ehem", "miss", "holland", "!", "haahha", ".", "she", "s", "so", "lovely"]
# ::lemmas ["your", "pupil", "tell", "i", "you", "be", "come", "tonight", "and", "i", "be", "like", "i", "knoww", "!", "LEANNE", "!", "ehem", "miss", "holland", "!", "haahha", ".", "she", "s", "so", "lovely"]
(c11-12 / multi-sentence
        :snt1 (c11-9 / and
                     :op1 (c11-10 / tell-01
                                  :ARG0 (c11-19 / pupil
                                                :poss (c11-3 / you))
                                  :ARG1 (c11-15 / come-01
                                                :ARG1 c11-3
                                                :time (c11-21 / date-entity
                                                              :dayperiod (c11-17 / night)
                                                              :mod (c11-16 / today)))
                                  :ARG2 (c11-20 / i))
                     :op2 (c11-8 / and
                                 :op1 (c11-5 / know-01
                                             :ARG0 c11-20)
                                 :op2 (c11-1 / leave-11
                                             :ARG0 c11-20
                                             :mode imperative)
                                 :op3 (c11-11 / leonne
                                              :mode expressive)
                                 :op4 (c11-18 / ehem
                                              :mode expressive)
                                 :op5 (c11-4 / miss-01
                                             :ARG1 (c11-13 / person
                                                           :name (c11-14 / name
                                                                         :op1 "Holland"))
                                             :mode expressive)
                                 :op6 (c11-6 / haah
                                             :mode expressive)))
        :snt2 (c11-7 / lovely
                     :domain (c11-0 / she)
                     :degree (c11-2 / so)))

# ::snt thankyou! hahah last night it wouldnt stay on! tonight was fine. could have done the 'whip my hair' dance and it wouldn of stayed on
# ::tokens ["thankyou", "!", "hahah", "last", "night", "it", "would", "nt", "stay", "on", "!", "tonight", "was", "fine", ".", "could", "have", "done", "the", "'", "whip", "my", "hair", "'", "dance", "and", "it", "wouldn", "of", "stayed", "on"]
# ::lemmas ["thankyou", "!", "hahah", "last", "night", "it", "would", "not", "stay", "on", "!", "tonight", "be", "fine", ".", "could", "have", "do", "the", "'", "whip", "my", "hair", "'", "dance", "and", "it", "wouldn", "of", "stay", "on"]
(c12-10 / multi-sentence
        :snt1 (c12-8 / thank-01
                     :ARG0 (c12-21 / i)
                     :ARG1 (c12-4 / you)
                     :mode expressive)
        :snt2 (c12-1 / stay-on-02
                     :ARG1 (c12-5 / it)
                     :time (c12-22 / date-entity
                                   :dayperiod (c12-16 / night
                                                      :mod (c12-2 / last)))
                     :mod (c12-6 / hahah
                                 :mode expressive)
                     :polarity -)
        :snt3 (c12-15 / fine-04
                      :ARG1 (c12-13 / date-entity
                                    :dayperiod (c12-11 / night
                                                       :mod (c12-14 / today))))
        :snt4 (c12-7 / and
                     :op1 (c12-18 / possible-01
                                  :ARG1 (c12-12 / do-02
                                                :ARG1 (c12-17 / dance-01
                                                              :ARG1 (c12-19 / whip-01
                                                                            :ARG1 (c12-20 / hair
                                                                                          :part-of (c12-9 / i))))))
                     :op2 (c12-3 / stay-on-02
                                 :ARG1 (c12-0 / it)
                                 :polarity -)))

# ::snt lolololol
# ::tokens ["lolololol"]
# ::lemmas ["lolololol"]
(c13-1 / laugh-01
       :manner (c13-0 / loud))

# ::snt wouldnt mind jonathan between my thighs..
# ::tokens ["would", "nt", "mind", "jonathan", "between", "my", "thighs", ".."]
# ::lemmas ["would", "not", "mind", "jonathan", "between", "my", "thigh", ".."]
(c14-2 / mind-15
       :ARG0 (c14-4 / i
                    :part (c14-5 / thigh))
       :ARG1 (c14-3 / person
                    :name (c14-1 / name
                                 :op1 "Jonathan")
                    :location (c14-0 / between
                                     :op1 c14-5))
       :polarity -)

# ::snt the st! because i only saw the last on tv
# ::tokens ["the", "st", "!", "because", "i", "only", "saw", "the", "last", "on", "tv"]
# ::lemmas ["the", "st", "!", "because", "i", "only", "see", "the", "last", "on", "tv"]
(c15-4 / cause-01
       :ARG0 (c15-2 / see-01
                    :ARG0 (c15-5 / i)
                    :ARG1 (c15-6 / thing
                                 :mod (c15-3 / last))
                    :mod (c15-0 / only)
                    :medium (c15-7 / television))
       :ARG1 (c15-1 / st!))

# ::snt the tudors boxset came today! currently loving life!
# ::tokens ["the", "tudors", "boxset", "came", "today", "!", "currently", "loving", "life", "!"]
# ::lemmas ["the", "tudor", "boxset", "come", "today", "!", "currently", "love", "life", "!"]
(c16-1 / multi-sentence
       :snt1 (c16-4 / come-01
                    :ARG1 (c16-0 / boxset
                                 :mod (c16-8 / company
                                             :name (c16-2 / name
                                                          :op1 "Tudors")))
                    :time (c16-6 / today))
       :snt2 (c16-3 / love-01
                    :ARG1 (c16-7 / life)
                    :time (c16-5 / current)))

# ::snt I still love that part. Laugh every time
# ::tokens ["I", "still", "love", "that", "part", ".", "Laugh", "every", "time"]
# ::lemmas ["i", "still", "love", "that", "part", ".", "laugh", "every", "time"]
(c17-1 / multi-sentence
       :snt1 (c17-5 / love-01
                    :ARG0 (c17-6 / i)
                    :ARG1 (c17-4 / part
                                 :mod (c17-7 / that))
                    :mod (c17-2 / still))
       :snt2 (c17-8 / laugh-01
                    :ARG0 (c17-0 / you)
                    :frequency (c17-9 / time
                                      :mod (c17-3 / every))
                    :mode imperative))

# ::snt it's just a phenomenal character performance
# ::tokens ["it", "'s", "just", "a", "phenomenal", "character", "performance"]
# ::lemmas ["it", "be", "just", "a", "phenomenal", "character", "performance"]
(c18-1 / perform-01
       :ARG1 (c18-2 / character)
       :mod (c18-0 / phenomenal)
       :mod (c18-3 / just)
       :domain (c18-4 / it))

# ::snt yep
# ::tokens ["yep"]
# ::lemmas ["yep"]
(c19-0 / yep
       :mode expressive)

# ::snt same
# ::tokens ["same"]
# ::lemmas ["same"]
(c20-0 / same-01)

# ::snt mood af
# ::tokens ["mood", "af"]
# ::lemmas ["mood", "af"]
(c21-0 / happy-01
       :ARG1 (c21-1 / i)
       :degree (c21-2 / af))

# ::snt congrats Jacque.
# ::tokens ["congrats", "Jacque", "."]
# ::lemmas ["congrat", "Jacque", "."]
(c22-3 / say-01
       :ARG1 (c22-0 / congratulate-01
                    :ARG1 (c22-2 / person
                                 :name (c22-1 / name
                                              :op1 "Jacque")
                                 :ARG2-of c22-3)))

# ::snt And is, by far, the best Carlotta I've seen.
# ::tokens ["And", "is", ",", "by", "far", ",", "the", "best", "Carlotta", "I", "'ve", "seen", "."]
# ::lemmas ["and", "be", ",", "by", "far", ",", "the", "good", "Carlotta", "i", "'ve", "see", "."]
(c23-8 / and
       :op2 (c23-5 / have-degree-91
                   :ARG1 (c23-4 / event)
                   :ARG2 (c23-9 / good-02)
                   :ARG3 (c23-1 / most
                                :quant (c23-0 / far))
                   :ARG5 (c23-6 / person
                                :name (c23-2 / name
                                             :op1 "Carlotta")
                                :ARG1-of (c23-3 / see-01
                                                :ARG0 (c23-7 / i)))))

# ::snt hey that's my and 's thing
# ::tokens ["hey", "that", "'s", "my", "and", "'s", "thing"]
# ::lemmas ["hey", "that", "be", "my", "and", "'s", "thing"]
(c24-2 / thing
       :domain (c24-4 / that)
       :poss (c24-3 / i)
       :mod (c24-1 / hey
                   :mode expressive)
       :mod (c24-0 / own))

# ::snt u suck
# ::tokens ["u", "suck"]
# ::lemmas ["u", "suck"]
(c25-1 / suck-03
       :ARG0 (c25-0 / you))

# ::snt IT'LL BE A LOTTA FUN! IM SO HAPPY FOR YOU HANNAH!
# ::tokens ["IT'LL", "BE", "A", "LOTTA", "FUN", "!", "IM", "SO", "HAPPY", "FOR", "YOU", "HANNAH", "!"]
# ::lemmas ["it'll", "be", "a", "LOTTA", "FUN", "!", "IM", "SO", "HAPPY", "for", "you", "HANNAH", "!"]
(c26-2 / multi-sentence
       :snt1 (c26-0 / fun-01
                    :ARG1 (c26-8 / it)
                    :quant (c26-6 / lot))
       :snt2 (c26-5 / happy-01
                    :ARG0 (c26-4 / i)
                    :ARG1 (c26-1 / you)
                    :degree (c26-3 / so)
                    :ARG1-of (c26-7 / cause-01
                                    :ARG1 c26-4
                                    :degree c26-3
                                    :mode expressive)
                    :ARG0-of c26-7
                    :beneficiary (c26-9 / you)
                    :mode expressive))

# ::snt Congrats Hannah!!! I am so happy for you!!! I can't wait for the show!!
# ::tokens ["Congrats", "Hannah", "!", "!", "!", "I", "am", "so", "happy", "for", "you", "!", "!", "!", "I", "ca", "n't", "wait", "for", "the", "show", "!", "!"]
# ::lemmas ["Congrats", "Hannah", "!", "!", "!", "i", "be", "so", "happy", "for", "you", "!", "!", "!", "i", "can", "not", "wait", "for", "the", "show", "!", "!"]
(c27-3 / multi-sentence
       :snt1 (c27-9 / congratulate-01
                    :ARG0 (c27-11 / i)
                    :ARG1 (c27-8 / person
                                 :name (c27-2 / name
                                              :op1 "Hannah")))
       :snt2 (c27-7 / happy-01
                    :ARG0 (c27-1 / you)
                    :ARG1 (c27-5 / i)
                    :degree (c27-4 / so))
       :snt3 (c27-6 / possible-01
                    :ARG1 (c27-10 / wait-01
                                  :ARG1 (c27-12 / i)
                                  :ARG2 (c27-0 / show-04))
                    :polarity -))

# ::snt I kid you not: I saw the Joel Schumacher Phantom movie for the first time Sunday night! It was great!
# ::tokens ["I", "kid", "you", "not", ":", "I", "saw", "the", "Joel", "Schumacher", "Phantom", "movie", "for", "the", "first", "time", "Sunday", "night", "!", "It", "was", "great", "!"]
# ::lemmas ["i", "kid", "you", "not", ":", "i", "see", "the", "Joel", "Schumacher", "Phantom", "movie", "for", "the", "first", "time", "Sunday", "night", "!", "it", "be", "great", "!"]
(c28-3 / multi-sentence
       :snt1 (c28-8 / kid-01
                    :ARG0 (c28-10 / i)
                    :ARG1 (c28-2 / you)
                    :polarity -)
       :snt2 (c28-5 / see-01
                    :ARG0 (c28-6 / i)
                    :ARG1 (c28-7 / movie
                                 :name (c28-4 / name
                                              :op1 "Joel"
                                              :op2 "Schumacher"
                                              :op3 "Phantom"))
                    :time (c28-12 / date-entity
                                  :weekday (c28-0 / sunday)
                                  :dayperiod (c28-9 / night))
                    :ord (c28-1 / ordinal-entity
                                :value 1))
       :snt3 (c28-11 / great
                     :domain (c28-13 / it)
                     :mode expressive))

# ::snt Miss Piggy is the perfect Carlotta, though. No question. Phantom Oscar sounds hilarious.
# ::tokens ["Miss", "Piggy", "is", "the", "perfect", "Carlotta", ",", "though", ".", "No", "question", ".", "Phantom", "Oscar", "sounds", "hilarious", "."]
# ::lemmas ["Miss", "Piggy", "be", "the", "perfect", "Carlotta", ",", "though", ".", "no", "question", ".", "Phantom", "Oscar", "sound", "hilarious", "."]
(c29-1 / multi-sentence
       :snt1 (c29-4 / have-concession-91
                    :ARG2 (c29-5 / person
                                 :name (c29-0 / name
                                              :op1 "Miss"
                                              :op2 "Piggy")
                                 :ARG1-of (c29-2 / perfect-02
                                                 :ARG2 (c29-11 / person
                                                               :name (c29-6 / name
                                                                            :op1 "Carlotta")))))
       :snt2 (c29-10 / question-03
                     :polarity -)
       :snt3 (c29-3 / sound-01
                    :ARG1 (c29-8 / person
                                 :name (c29-7 / name
                                              :op1 "Phantom"
                                              :op2 "Oscar"))
                    :ARG2 (c29-9 / hilarious)))

# ::snt nd problem: everyone likes Kermit, and no one likes Raoul.
# ::tokens ["nd", "problem", ":", "everyone", "likes", "Kermit", ",", "and", "no", "one", "likes", "Raoul", "."]
# ::lemmas ["nd", "problem", ":", "everyone", "like", "Kermit", ",", "and", "no", "one", "like", "Raoul", "."]
(c30-5 / problem
       :ord (c30-0 / ordinal-entity
                   :value 2)
       :domain (c30-8 / and
                      :op1 (c30-6 / like-01
                                  :ARG0 (c30-3 / everyone)
                                  :ARG1 (c30-2 / person
                                               :name (c30-1 / name
                                                            :op1 "Kermit")))
                      :op2 (c30-9 / like-01
                                  :ARG0 (c30-4 / no-one)
                                  :ARG1 (c30-10 / person
                                                :name (c30-7 / name
                                                             :op1 "Raoul")))))

# ::snt ... How old is Elmo? Aren't we implicitly shipping him with Kermit or Oscar? This feels creepy.
# ::tokens ["...", "How", "old", "is", "Elmo", "?", "Are", "n't", "we", "implicitly", "shipping", "him", "with", "Kermit", "or", "Oscar", "?", "This", "feels", "creepy", "."]
# ::lemmas ["...", "how", "old", "be", "Elmo", "?", "be", "not", "we", "implicitly", "ship", "he", "with", "Kermit", "or", "Oscar", "?", "this", "feel", "creepy", "."]
(c31-3 / multi-sentence
       :snt1 (c31-13 / age-01
                     :ARG1 (c31-7 / product
                                  :name (c31-2 / name
                                               :op1 "Elmo"))
                     :ARG2 (c31-12 / amr-unknown))
       :snt2 (c31-4 / ship-01
                    :ARG0 (c31-9 / we)
                    :ARG1 c31-7
                    :ARG2 (c31-0 / or
                                 :op1 (c31-5 / person
                                             :name (c31-6 / name
                                                          :op1 "Kermit"))
                                 :op2 (c31-15 / person
                                              :name (c31-8 / name
                                                           :op1 "Oscar")))
                    :manner (c31-14 / implicit)
                    :polarity c31-12)
       :snt3 (c31-1 / feel-01
                    :ARG1 (c31-11 / this)
                    :ARG2 (c31-10 / creepy-04
                                  :ARG1 c31-11)))

# ::snt Wait... Red, Sesame Street Elmo?
# ::tokens ["Wait", "...", "Red", ",", "Sesame", "Street", "Elmo", "?"]
# ::lemmas ["wait", "...", "Red", ",", "Sesame", "Street", "Elmo", "?"]
(c32-5 / wait-01
       :ARG1 (c32-1 / you)
       :ARG2 (c32-4 / person
                    :name (c32-2 / name
                                 :op1 "Red")
                    :mod (c32-0 / broadcast-program
                                :name (c32-3 / name
                                             :op1 "Sesame"
                                             :op2 "Street"
                                             :op3 "Elmo"))
                    :polarity (c32-6 / amr-unknown))
       :mode imperative)

# ::snt This is my I've-never-watched-Devilman Hot Take
# ::tokens ["This", "is", "my", "I've", "-", "never", "-", "watched", "-", "Devilman", "Hot", "Take"]
# ::lemmas ["this", "be", "my", "i've", "-", "never", "-", "watch", "-", "Devilman", "Hot", "Take"]
(c33-4 / thing
       :name (c33-0 / name
                    :op1 "Devilman"
                    :op2 "Hot"
                    :op3 "Take")
       :ARG1-of (c33-2 / watch-01
                       :ARG0 (c33-3 / i)
                       :time (c33-1 / ever)
                       :polarity -)
       :domain (c33-5 / this))

# ::snt I thought you were encouraging me to name mine oops ahaha
# ::tokens ["I", "thought", "you", "were", "encouraging", "me", "to", "name", "mine", "oops", "ahaha"]
# ::lemmas ["i", "think", "you", "be", "encourage", "i", "to", "name", "mine", "oop", "ahaha"]
(c34-6 / think-01
       :ARG0 (c34-5 / i)
       :ARG1 (c34-3 / encourage-01
                    :ARG0 (c34-1 / you)
                    :ARG1 c34-5
                    :ARG2 (c34-2 / name-01
                                 :ARG0 c34-5
                                 :ARG1 (c34-7 / thing
                                              :poss c34-5)))
       :mod (c34-0 / oops
                   :mode expressive)
       :mod (c34-4 / haha
                   :mode expressive))

# ::snt no i said MINE will be a POTO ref.
# ::tokens ["no", "i", "said", "MINE", "will", "be", "a", "POTO", "ref", "."]
# ::lemmas ["no", "i", "say", "MINE", "will", "be", "a", "POTO", "ref", "."]
(c35-2 / say-01
       :ARG0 (c35-6 / i)
       :ARG1 (c35-3 / ref
                    :mod (c35-5 / prime)
                    :domain (c35-1 / person
                                   :name (c35-0 / name
                                                :op1 "MINE")))
       :mod (c35-4 / no))

# ::snt Thats so handy thank you. Now to just find someone to go with and someone to watch The Squidge
# ::tokens ["That", "s", "so", "handy", "thank", "you", ".", "Now", "to", "just", "find", "someone", "to", "go", "with", "and", "someone", "to", "watch", "The", "Squidge"]
# ::lemmas ["that", "s", "so", "handy", "thank", "you", ".", "now", "to", "just", "find", "someone", "to", "go", "with", "and", "someone", "to", "watch", "the", "Squidge"]
(c36-3 / multi-sentence
       :snt1 (c36-8 / handy-02
                    :ARG1 (c36-11 / that)
                    :degree (c36-5 / so)
                    :ARG2-of (c36-13 / thank-01
                                     :ARG1 (c36-2 / you)))
       :snt2 (c36-0 / find-01
                    :ARG1 (c36-7 / and
                                 :op1 (c36-1 / someone
                                             :ARG4-of (c36-14 / go-06))
                                 :op2 (c36-15 / someone
                                              :ARG0-of (c36-10 / watch-01
                                                               :ARG1 (c36-6 / show
                                                                            :name (c36-4 / name
                                                                                         :op1 "The"
                                                                                         :op2 "Squidge")))))
                    :time (c36-9 / now)
                    :mod (c36-12 / just)))

# ::snt and are good for working out what are the best value for money seats
# ::tokens ["and", "are", "good", "for", "working", "out", "what", "are", "the", "best", "value", "for", "money", "seats"]
# ::lemmas ["and", "be", "good", "for", "work", "out", "what", "be", "the", "good", "value", "for", "money", "seat"]
(c37-2 / and
       :op2 (c37-9 / good-03
                   :ARG2 (c37-6 / work-out-02
                                :ARG1 (c37-8 / thing
                                             :ARG2-of (c37-3 / value-01
                                                             :ARG1 (c37-1 / seat
                                                                          :purpose (c37-0 / money))
                                                             :ARG1-of (c37-4 / have-degree-91
                                                                             :ARG2 (c37-7 / good-02
                                                                                          :ARG1 c37-3)
                                                                             :ARG3 (c37-5 / most)))))))

# ::snt Oh fab thanks!!
# ::tokens ["Oh", "fab", "thanks", "!", "!"]
# ::lemmas ["oh", "fab", "thank", "!", "!"]
(c38-3 / thank-01
       :ARG0 (c38-2 / i)
       :ARG1 (c38-1 / you)
       :mod (c38-0 / oh
                   :mode expressive))

# ::snt Her Majesty's Theatre, tickets from and there seems to be good availability throughout Autumn
# ::tokens ["Her", "Majesty", "'s", "Theatre", ",", "tickets", "from", "and", "there", "seems", "to", "be", "good", "availability", "throughout", "Autumn"]
# ::lemmas ["her", "Majesty", "'s", "Theatre", ",", "ticket", "from", "and", "there", "seem", "to", "be", "good", "availability", "throughout", "Autumn"]
(c39-3 / and
       :op1 (c39-7 / theater
                   :name (c39-0 / name
                                :op1 "Her"
                                :op2 "Majesty's"
                                :op3 "Theatre"))
       :op2 (c39-10 / ticket
                    :source-of (c39-6 / it))
       :op3 (c39-2 / seem-01
                   :ARG1 (c39-8 / availability
                                :ARG1-of (c39-1 / good-02)
                                :time (c39-9 / throughout
                                             :op1 (c39-4 / date-entity
                                                         :season (c39-5 / Autumn))))))

# ::snt Where is this?
# ::tokens ["Where", "is", "this", "?"]
# ::lemmas ["where", "be", "this", "?"]
(c40-1 / be-located-at-91
       :ARG1 (c40-2 / this)
       :ARG2 (c40-0 / amr-unknown))

# ::snt SHARRATTS I LOVE PHANTOM
# ::tokens ["SHARRATTS", "I", "LOVE", "PHANTOM"]
# ::lemmas ["SHARRATTS", "i", "LOVE", "PHANTOM"]
(c41-0 / multi-sentence
       :snt1 (c41-2 / shit
                    :mode expressive)
       :snt2 (c41-4 / love-01
                    :ARG0 (c41-5 / i)
                    :ARG1 (c41-3 / person
                                 :name (c41-1 / name
                                              :op1 "PhantOM"))))

# ::snt Jack Nance as Joseph Buquet. Lynch as the theatre owner.
# ::tokens ["Jack", "Nance", "as", "Joseph", "Buquet", ".", "Lynch", "as", "the", "theatre", "owner", "."]
# ::lemmas ["Jack", "Nance", "as", "Joseph", "Buquet", ".", "Lynch", "as", "the", "theatre", "owner", "."]
(c42-2 / multi-sentence
       :snt1 (c42-6 / person
                    :name (c42-1 / name
                                 :op1 "Jack"
                                 :op2 "Nance")
                    :ARG1-of (c42-4 / resemble-01
                                    :ARG2 (c42-3 / person
                                                 :name (c42-5 / name
                                                              :op1 "Joseph"
                                                              :op2 "Buquet"))))
       :snt2 (c42-9 / person
                    :name (c42-7 / name
                                 :op1 "Lynch")
                    :ARG0-of (c42-0 / own-01
                                    :ARG1 (c42-8 / theater))))

# ::snt which still works lmao
# ::tokens ["which", "still", "works", "lmao"]
# ::lemmas ["which", "still", "work", "lmao"]
(c43-1 / laugh-01
       :ARG0 (c43-3 / i)
       :ARG1 (c43-2 / work-09
                    :ARG1 (c43-4 / thing)
                    :mod (c43-0 / still))
       :manner (c43-5 / loud)
       :mode expressive)

# ::snt You were SO incredible today!!!! Enjoyed your scenes opposite !!!! .
# ::tokens ["You", "were", "SO", "incredible", "today", "!", "!", "!", "!", "Enjoyed", "your", "scenes", "opposite", "!", "!", "!", "!", "."]
# ::lemmas ["you", "be", "so", "incredible", "today", "!", "!", "!", "!", "enjoy", "your", "scene", "opposite", "!", "!", "!", "!", "."]
(c44-3 / multi-sentence
       :snt1 (c44-7 / incredible
                    :domain (c44-2 / you)
                    :time (c44-8 / today)
                    :degree (c44-4 / so))
       :snt2 (c44-6 / enjoy-01
                    :ARG0 (c44-5 / i)
                    :ARG1 (c44-0 / scene
                                 :poss (c44-9 / you)
                                 :ARG1-of (c44-1 / opposite-01))))

# ::snt can't wait to see you perform today
# ::tokens ["ca", "n't", "wait", "to", "see", "you", "perform", "today"]
# ::lemmas ["can", "not", "wait", "to", "see", "you", "perform", "today"]
(c45-3 / wait-01
       :ARG1 (c45-4 / i)
       :ARG2 (c45-1 / see-01
                    :ARG0 c45-4
                    :ARG1 (c45-2 / perform-01
                                 :ARG0 (c45-0 / you)
                                 :time (c45-5 / today))))

# ::snt Have a nice day
# ::tokens ["Have", "a", "nice", "day"]
# ::lemmas ["have", "a", "nice", "day"]
(c46-1 / have-03
       :ARG0 (c46-3 / you)
       :ARG1 (c46-0 / day
                    :ARG1-of (c46-2 / nice-01))
       :mode imperative)

# ::snt ALSO IM SORRY IF THIS WAS MISLEADING I HAVE NOTHING AGAINST ANY OF THE ACTORS I JUST THINK ITS FUN TO MAKE FUN OF CARLOTTA AS A CHARACTER
# ::tokens ["ALSO", "IM", "SORRY", "IF", "THIS", "WAS", "MISLEADING", "I", "HAVE", "NOTHING", "AGAINST", "ANY", "OF", "THE", "ACTORS", "I", "JUST", "THINK", "ITS", "FUN", "TO", "MAKE", "FUN", "OF", "CARLOTTA", "AS", "A", "CHARACTER"]
# ::lemmas ["also", "IM", "SORRY", "if", "this", "be", "misleading", "i", "have", "nothing", "against", "any", "of", "the", "actor", "i", "just", "think", "its", "FUN", "to", "make", "FUN", "of", "CARLOTTA", "AS", "a", "character"]
(c47-4 / and
       :op1 (c47-3 / sigh-02
                   :ARG0 (c47-12 / i)
                   :ARG1-of (c47-7 / cause-01
                                   :ARG0 (c47-11 / assume-02
                                                 :ARG0 c47-12
                                                 :ARG1 (c47-5 / have-03
                                                              :ARG0 c47-12
                                                              :ARG1 (c47-1 / nothing
                                                                           :topic (c47-6 / person
                                                                                         :ARG0-of (c47-8 / act-01)
                                                                                         :mod (c47-14 / any)))
                                                              :polarity -))))
       :op2 (c47-10 / think-01
                    :ARG0 c47-12
                    :ARG1 (c47-0 / fun-01
                                 :ARG1 (c47-2 / make-fun-04
                                              :ARG1 (c47-15 / civilize-01)
                                              :manner (c47-9 / CHARACTER)))
                    :mod (c47-13 / just)))

# ::snt Im having a very boring day
# ::tokens ["I", "m", "having", "a", "very", "boring", "day"]
# ::lemmas ["i", "m", "have", "a", "very", "boring", "day"]
(c48-2 / have-03
       :ARG0 (c48-3 / i)
       :ARG1 (c48-4 / day
                    :ARG0-of (c48-0 / bore-02
                                    :degree (c48-1 / very))))

# ::snt These numbers were taken from the Royal Albert Hall album, my personal favorite.
# ::tokens ["These", "numbers", "were", "taken", "from", "the", "Royal", "Albert", "Hall", "album", ",", "my", "personal", "favorite", "."]
# ::lemmas ["these", "number", "be", "take", "from", "the", "Royal", "Albert", "Hall", "album", ",", "my", "personal", "favorite", "."]
(c49-4 / take-01
       :ARG1 (c49-1 / number
                    :mod (c49-7 / this))
       :ARG3 (c49-6 / album
                    :name (c49-2 / name
                                 :op1 "Royal"
                                 :op2 "Albert"
                                 :op3 "Hall"))
       :ARG1-of (c49-0 / favor-01
                       :ARG0 (c49-5 / i)
                       :ARG1-of (c49-3 / personal-02)))

# ::snt Have u ever seen such a QUEEN
# ::tokens ["Have", "u", "ever", "seen", "such", "a", "QUEEN"]
# ::lemmas ["have", "u", "ever", "see", "such", "a", "queen"]
(c50-3 / see-01
       :ARG0 (c50-1 / you)
       :ARG1 (c50-5 / person
                    :name (c50-2 / name
                                 :op1 "QUEEN")
                    :mod (c50-0 / such))
       :polarity (c50-6 / amr-unknown)
       :time (c50-4 / ever))
