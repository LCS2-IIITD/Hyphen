# ::snt Gwen makes these look like street walkers
# ::tokens ["Gwen", "makes", "these", "look", "like", "street", "walkers"]
# ::lemmas ["Gwen", "make", "these", "look", "like", "street", "walker"]
(c1-1 / make-02
      :ARG0 (c1-4 / person
                  :name (c1-0 / name
                              :op1 "Gwen"))
      :ARG1 (c1-5 / look-02
                  :ARG0 (c1-7 / this)
                  :ARG1 (c1-2 / person
                              :ARG0-of (c1-6 / walk-01
                                             :ARG2 (c1-3 / street)))))

# ::snt Blake and Gwen will not last for the main reason, they do not dance to the same music. Pop does not tell a story, country does.
# ::tokens ["Blake", "and", "Gwen", "will", "not", "last", "for", "the", "main", "reason", ",", "they", "do", "not", "dance", "to", "the", "same", "music", ".", "Pop", "does", "not", "tell", "a", "story", ",", "country", "does", "."]
# ::lemmas ["Blake", "and", "Gwen", "will", "not", "last", "for", "the", "main", "reason", ",", "they", "do", "not", "dance", "to", "the", "same", "music", ".", "pop", "do", "not", "tell", "a", "story", ",", "country", "do", "."]
(c2-2 / multi-sentence
      :snt1 (c2-7 / last-04
                  :ARG1 (c2-14 / and
                               :op1 (c2-6 / person
                                          :name (c2-1 / name
                                                      :op1 "Blake"))
                               :op2 (c2-3 / person
                                          :name (c2-5 / name
                                                      :op1 "Gwen")))
                  :ARG1-of (c2-10 / cause-01
                                  :ARG0 (c2-15 / dance-01
                                               :ARG0 c2-14
                                               :ARG2 (c2-8 / music
                                                           :ARG1-of (c2-4 / same-01))
                                               :polarity -)
                                  :mod (c2-16 / main))
                  :polarity -)
      :snt2 (c2-17 / contrast-01
                   :ARG1 (c2-13 / tell-01
                                :ARG0 (c2-11 / pop)
                                :ARG1 (c2-0 / story)
                                :polarity -)
                   :ARG2 (c2-9 / tell-01
                               :ARG0 (c2-12 / country)
                               :ARG1 c2-0)))

# ::snt oh stop with these BS
# ::tokens ["oh", "stop", "with", "these", "BS"]
# ::lemmas ["oh", "stop", "with", "these", "BS"]
(c3-3 / stop-01
      :ARG0 (c3-2 / you)
      :ARG1 (c3-1 / bullshit-01
                  :ARG1 (c3-4 / this))
      :mod (c3-0 / oh)
      :mode imperative)

# ::snt classy
# ::tokens ["classy"]
# ::lemmas ["classy"]
(c4-0 / classy)

# ::snt I would love to think this
# ::tokens ["I", "would", "love", "to", "think", "this"]
# ::lemmas ["i", "would", "love", "to", "think", "this"]
(c5-1 / love-02
      :ARG0 (c5-2 / i)
      :ARG1 (c5-3 / think-01
                  :ARG0 c5-2
                  :ARG1 (c5-0 / this)))

# ::snt No behavior like that of a women scorned.
# ::tokens ["No", "behavior", "like", "that", "of", "a", "women", "scorned", "."]
# ::lemmas ["no", "behavior", "like", "that", "of", "a", "woman", "scorn", "."]
(c6-0 / behave-01
      :ARG1-of (c6-2 / resemble-01
                     :ARG2 (c6-3 / behave-01
                                 :ARG0 (c6-4 / woman
                                             :ARG1-of (c6-1 / scorn-01))))
      :polarity -)

# ::snt No revenge needed when Blake &amp; Gwen are so happy!
# ::tokens ["No", "revenge", "needed", "when", "Blake", "&", "amp", ";", "Gwen", "are", "so", "happy", "!"]
# ::lemmas ["no", "revenge", "need", "when", "Blake", "&", "amp", ";", "Gwen", "be", "so", "happy", "!"]
(c7-1 / multi-sentence
      :snt1 (c7-0 / need-01
                  :ARG1 (c7-4 / revenge)
                  :time (c7-10 / and
                               :op1 (c7-6 / person
                                          :name (c7-5 / name
                                                      :op1 "Blake"))
                               :op2 (c7-2 / person
                                          :name (c7-7 / name
                                                      :op1 "amp")))
                  :polarity -)
      :snt2 (c7-8 / happy-01
                  :ARG1 (c7-11 / person
                               :name (c7-9 / name
                                           :op1 "Gwen"))
                  :degree (c7-3 / so)))

# ::snt They all look great and happy!
# ::tokens ["They", "all", "look", "great", "and", "happy", "!"]
# ::lemmas ["you", "all", "look", "great", "and", "happy", "!"]
(c8-1 / look-02
      :ARG0 (c8-2 / they
                  :mod (c8-4 / all))
      :ARG1 (c8-3 / and
                  :op1 (c8-5 / great)
                  :op2 (c8-0 / happy-01)))

# ::snt latest hollywood celeb ANTICS (September , )
# ::tokens ["latest", "hollywood", "celeb", "ANTICS", "(", "September", ",", ")"]
# ::lemmas ["late", "hollywood", "celeb", "ANTICS", "(", "September", ",", ")"]
(c9-3 / publication
      :name (c9-1 / name
                  :op1 "ANTICS")
      :mod (c9-6 / celebrity
                 :mod (c9-0 / market-sector
                            :name c9-1
                            :op1 "Hollywood"))
      :ARG1-of (c9-2 / have-degree-91
                     :ARG2 (c9-4 / latest)
                     :ARG3 (c9-5 / most))
      :time (c9-7 / date-entity
                  :month 9))

# ::snt LAMBERT "seeking RUTHLESS REVENGE vs EX" (September , )
# ::tokens ["LAMBERT", "\"", "seeking", "RUTHLESS", "REVENGE", "vs", "EX", "\"", "(", "September", ",", ")"]
# ::lemmas ["LAMBERT", "\"", "seek", "RUTHLESS", "REVENGE", "vs", "EX", "\"", "(", "September", ",", ")"]
(c10-3 / publication-91
       :ARG0 (c10-1 / person
                    :name (c10-0 / name
                                 :op1 "LAMBERT"))
       :ARG1 (c10-4 / publication
                    :name (c10-2 / name)))

# ::snt Update: CELEBRITY INSIDER (September , )
# ::tokens ["Update", ":", "CELEBRITY", "INSIDER", "(", "September", ",", ")"]
# ::lemmas ["update", ":", "celebrity", "INSIDER", "(", "September", ",", ")"]
(c11-1 / update-02
       :ARG2 (c11-2 / publication
                    :name (c11-0 / name
                                 :op1 "CELEBRITY"
                                 :op2 " INSIDER")
                    :time (c11-3 / date-entity
                                 :month 9)))

# ::snt never know what you got till its gone. Also revenge squad should be a movie.
# ::tokens ["never", "know", "what", "you", "got", "till", "its", "gone", ".", "Also", "revenge", "squad", "should", "be", "a", "movie", "."]
# ::lemmas ["never", "know", "what", "you", "get", "till", "its", "gone", ".", "also", "revenge", "squad", "should", "be", "a", "movie", "."]
(c13-1 / multi-sentence
       :snt1 (c13-7 / know-01
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-9 / thing
                                 :ARG1-of (c13-10 / get-01
                                                  :ARG0 c13-0))
                    :time (c13-13 / until
                                  :op1 (c13-8 / go-02
                                              :ARG0 (c13-11 / it)))
                    :time (c13-5 / ever)
                    :polarity -)
       :snt2 (c13-3 / recommend-01
                    :ARG1 (c13-6 / movie
                                 :domain (c13-2 / squad
                                                :purpose (c13-12 / revenge)))
                    :mod (c13-4 / also)))

# ::snt Miranda you're more classy than that don't lower yourself to their level you're the best
# ::tokens ["Miranda", "you", "'re", "more", "classy", "than", "that", "do", "n't", "lower", "yourself", "to", "their", "level", "you", "'re", "the", "best"]
# ::lemmas ["Miranda", "you", "be", "more", "classy", "than", "that", "do", "not", "lower", "yourself", "to", "their", "level", "you", "be", "the", "good"]
(c14-3 / say-01
       :ARG1 (c14-4 / have-degree-91
                    :ARG1 (c14-5 / person
                                 :name (c14-1 / name
                                              :op1 "Miranda"))
                    :ARG2 (c14-8 / classy-02
                                 :ARG1 c14-5)
                    :ARG3 (c14-2 / more)
                    :ARG4 (c14-10 / that))
       :ARG2 c14-5
       :condition (c14-6 / lower-05
                         :ARG0 (c14-0 / you
                                      :ARG1-of c14-6)
                         :ARG4 (c14-12 / level
                                       :poss (c14-14 / they))
                         :ARG1-of (c14-13 / cause-01
                                          :ARG0 (c14-9 / have-degree-91
                                                       :ARG1 c14-0
                                                       :ARG2 (c14-11 / good-02
                                                                     :ARG1 c14-0)
                                                       :ARG3 (c14-7 / most)))
                         :polarity -
                         :mode imperative))

# ::snt good for her!
# ::tokens ["good", "for", "her", "!"]
# ::lemmas ["good", "for", "she", "!"]
(c15-0 / good-04
       :ARG2 (c15-1 / she))

# ::snt Huh?
# ::tokens ["Huh", "?"]
# ::lemmas ["Huh", "?"]
(c16-0 / request-confirmation-91)

# ::snt that's why Miranda has too much class to play gwens game
# ::tokens ["that", "'s", "why", "Miranda", "has", "too", "much", "class", "to", "play", "gwens", "game"]
# ::lemmas ["that", "be", "why", "Miranda", "have", "too", "much", "class", "to", "play", "gwen", "game"]
(c17-6 / cause-01
       :ARG0 (c17-9 / that)
       :ARG1 (c17-3 / have-03
                    :ARG0 (c17-4 / person
                                 :name (c17-0 / name
                                              :op1 "Miranda"))
                    :ARG1 (c17-12 / class
                                  :ARG1-of (c17-7 / have-quant-91
                                                  :ARG2 (c17-1 / much)
                                                  :ARG3 (c17-11 / too)
                                                  :ARG6 (c17-2 / play-01
                                                               :ARG0 c17-4
                                                               :ARG1 (c17-10 / game
                                                                             :poss (c17-8 / team
                                                                                          :name (c17-5 / name
                                                                                                       :op1 "Greens"))))))))

# ::snt all people make mistakes but I think she hurt him so badly and he couldn't go back...
# ::tokens ["all", "people", "make", "mistakes", "but", "I", "think", "she", "hurt", "him", "so", "badly", "and", "he", "could", "n't", "go", "back", "..."]
# ::lemmas ["all", "people", "make", "mistake", "but", "i", "think", "she", "hurt", "he", "so", "badly", "and", "he", "could", "not", "go", "back", "..."]
(c18-9 / contrast-01
       :ARG1 (c18-2 / mistake-02
                    :ARG0 (c18-8 / person
                                 :mod (c18-6 / all)))
       :ARG2 (c18-12 / think-01
                     :ARG0 (c18-11 / i)
                     :ARG1 (c18-13 / and
                                   :op1 (c18-7 / hurt-01
                                               :ARG0 (c18-4 / she)
                                               :ARG1 (c18-10 / he)
                                               :ARG1-of (c18-1 / bad-05
                                                               :degree (c18-0 / so)))
                                   :op2 (c18-3 / possible-01
                                               :ARG1 (c18-5 / go-back-19
                                                            :ARG1 c18-10)
                                               :polarity -))))

# ::snt I believe that &amp; she has to know what she lost
# ::tokens ["I", "believe", "that", "&", "amp", ";", "she", "has", "to", "know", "what", "she", "lost"]
# ::lemmas ["i", "believe", "that", "&", "amp", ";", "she", "have", "to", "know", "what", "she", "lose"]
(c19-2 / multi-sentence
       :snt1 (c19-1 / believe-01
                    :ARG0 (c19-6 / i)
                    :ARG1 (c19-7 / that))
       :snt2 (c19-0 / obligate-01
                    :ARG2 (c19-4 / know-01
                                 :ARG0 (c19-3 / she)
                                 :ARG1 (c19-8 / thing
                                              :ARG1-of (c19-5 / lose-03
                                                              :ARG0 c19-3)))))

# ::snt I still believe that she is in love with him ...I don't think she is gonna write any song ...
# ::tokens ["I", "still", "believe", "that", "she", "is", "in", "love", "with", "him", "...", "I", "do", "n't", "think", "she", "is", "gon", "na", "write", "any", "song", "..."]
# ::lemmas ["i", "still", "believe", "that", "she", "be", "in", "love", "with", "he", "...", "i", "do", "not", "think", "she", "be", "going", "to", "write", "any", "song", "..."]
(c20-2 / multi-sentence
       :snt1 (c20-1 / believe-01
                    :ARG0 (c20-10 / i)
                    :ARG1 (c20-8 / love-01
                                 :ARG0 (c20-3 / she)
                                 :ARG1 (c20-7 / he))
                    :mod (c20-0 / still))
       :snt2 (c20-11 / think-01
                     :ARG0 (c20-4 / i)
                     :ARG1 (c20-9 / write-01
                                  :ARG0 (c20-12 / she)
                                  :ARG1 (c20-5 / song
                                               :mod (c20-6 / any)))
                     :polarity -))

# ::snt think Blake has more class then that still it would be dumb to mess with him
# ::tokens ["think", "Blake", "has", "more", "class", "then", "that", "still", "it", "would", "be", "dumb", "to", "mess", "with", "him"]
# ::lemmas ["think", "Blake", "have", "more", "class", "then", "that", "still", "it", "would", "be", "dumb", "to", "mess", "with", "he"]
(c21-7 / think-01
       :ARG1 (c21-3 / have-degree-91
                    :ARG1 (c21-4 / person
                                 :name (c21-0 / name
                                              :op1 "Blake"))
                    :ARG2 (c21-6 / class)
                    :ARG3 (c21-1 / more)
                    :ARG4 (c21-10 / then)
                    :ARG0-of (c21-9 / cause-01
                                    :ARG1 (c21-8 / dumb
                                                 :domain (c21-5 / mess-01
                                                                :ARG1 c21-4)
                                                 :mod (c21-2 / still)))))

# ::snt she will not do that LOL b/c then e ALL know that Blake will do the same and she doesn't want that
# ::tokens ["she", "will", "not", "do", "that", "LOL", "b", "/", "c", "then", "e", "ALL", "know", "that", "Blake", "will", "do", "the", "same", "and", "she", "does", "n't", "want", "that"]
# ::lemmas ["she", "will", "not", "do", "that", "LOL", "b", "/", "c", "then", "e", "all", "know", "that", "Blake", "will", "do", "the", "same", "and", "she", "do", "not", "want", "that"]
(c22-6 / cause-01
       :ARG0 (c22-3 / know-01
                    :ARG0 (c22-4 / person
                                 :mod (c22-11 / all))
                    :ARG1 (c22-10 / and
                                  :op1 (c22-13 / do-02
                                               :ARG0 (c22-1 / person
                                                            :name (c22-0 / name
                                                                         :op1 "Blake"))
                                               :ARG1 (c22-9 / thing
                                                            :ARG1-of (c22-2 / same-01)))
                                  :op2 (c22-7 / want-01
                                              :ARG0 c22-1
                                              :ARG1 c22-9
                                              :polarity -)))
       :ARG1 (c22-8 / do-02
                    :ARG0 c22-1
                    :ARG1 c22-9
                    :ARG2-of (c22-5 / laugh-01
                                    :ARG0 (c22-12 / i)
                                    :manner (c22-14 / loud)
                                    :mode expressive)
                    :polarity -))

# ::snt Yup! And I think that's what they're doing
# ::tokens ["Yup", "!", "And", "I", "think", "that", "'s", "what", "they", "'re", "doing"]
# ::lemmas ["yup", "!", "and", "i", "think", "that", "be", "what", "they", "be", "do"]
(c23-0 / and
       :op2 (c23-2 / think-01
                   :ARG0 (c23-3 / i)
                   :ARG1 (c23-6 / do-02
                                :ARG0 (c23-4 / they)
                                :ARG1 (c23-5 / thing
                                             :domain (c23-1 / that)))))

# ::snt G n B have to shut all that crap out and move on with their lives.
# ::tokens ["G", "n", "B", "have", "to", "shut", "all", "that", "crap", "out", "and", "move", "on", "with", "their", "lives", "."]
# ::lemmas ["G", "n", "B", "have", "to", "shut", "all", "that", "crap", "out", "and", "move", "on", "with", "their", "life", "."]
(c24-0 / obligate-01
       :ARG1 (c24-9 / and
                    :op1 (c24-3 / shut-out-06
                                :ARG0 (c24-4 / person
                                             :name (c24-1 / name
                                                          :op1 "G"
                                                          :op2 "n"
                                                          :op3 "B"))
                                :ARG1 (c24-6 / crap
                                             :mod (c24-8 / all)
                                             :mod (c24-7 / that)))
                    :op2 (c24-2 / move-01
                                :ARG0 c24-4
                                :ARG2 (c24-5 / life
                                             :poss c24-4))))

# ::snt I'm leaning towards NOT believing it..Hope especially for Gwen's sake I'm right!
# ::tokens ["I", "'m", "leaning", "towards", "NOT", "believing", "it", "..", "Hope", "especially", "for", "Gwen", "'s", "sake", "I", "'m", "right", "!"]
# ::lemmas ["i", "be", "lean", "towards", "not", "believe", "it", "..", "hope", "especially", "for", "Gwen", "'s", "sake", "i", "be", "right", "!"]
(c25-1 / multi-sentence
       :snt1 (c25-8 / lean-01
                    :ARG1 (c25-10 / i)
                    :ARG2 (c25-0 / believe-01
                                 :ARG0 c25-10
                                 :ARG1 (c25-4 / it)
                                 :polarity -))
       :snt2 (c25-7 / hope-01
                    :ARG0 (c25-11 / i)
                    :ARG1 (c25-5 / right-06
                                 :ARG1 c25-11
                                 :purpose (c25-3 / sake
                                                 :poss (c25-9 / person
                                                              :name (c25-2 / name
                                                                           :op1 "Gwen")))
                                 :mod (c25-6 / especially))))

# ::snt I sure hope so. These people are nuts. Can't let go!!!!!
# ::tokens ["I", "sure", "hope", "so", ".", "These", "people", "are", "nuts", ".", "Ca", "n't", "let", "go", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "sure", "hope", "so", ".", "these", "people", "be", "nuts", ".", "can", "not", "let", "go", "!", "!", "!", "!", "!"]
(c26-1 / multi-sentence
       :snt1 (c26-5 / hope-01
                    :ARG0 (c26-8 / i)
                    :ARG1 (c26-3 / so)
                    :ARG1-of (c26-0 / sure-02))
       :snt2 (c26-2 / nuts
                    :domain (c26-6 / person
                                   :mod (c26-9 / this)))
       :snt3 (c26-4 / possible-01
                    :ARG1 (c26-7 / let-01
                                 :ARG1 (c26-10 / go-01))
                    :polarity -))

# ::snt I really don't think Blake gives a Bollocks he got Gwen Stefani as a girlfriend.
# ::tokens ["I", "really", "do", "n't", "think", "Blake", "gives", "a", "Bollocks", "he", "got", "Gwen", "Stefani", "as", "a", "girlfriend", "."]
# ::lemmas ["i", "really", "do", "not", "think", "Blake", "give", "a", "Bollocks", "he", "get", "Gwen", "Stefani", "as", "a", "girlfriend", "."]
(c27-9 / think-01
       :ARG0 (c27-8 / i)
       :ARG1 (c27-10 / give-16
                     :ARG0 (c27-4 / person
                                  :name (c27-0 / name
                                               :op1 "Blake"))
                     :ARG1 (c27-7 / company
                                  :name (c27-3 / name
                                               :op1 "Bollocks"))
                     :ARG2 (c27-1 / person
                                  :name (c27-5 / name
                                               :op1 "Gwen"
                                               :op2 "Stefani")
                                  :ARG0-of (c27-6 / have-rel-role-91
                                                  :ARG1 c27-4
                                                  :ARG2 (c27-11 / girlfriend)))
                     :polarity -)
       :ARG1-of (c27-2 / real-04))

# ::snt So she is getting her revenge by cheating on Anderson with a married man. Great plan.
# ::tokens ["So", "she", "is", "getting", "her", "revenge", "by", "cheating", "on", "Anderson", "with", "a", "married", "man", ".", "Great", "plan", "."]
# ::lemmas ["so", "she", "be", "get", "her", "revenge", "by", "cheat", "on", "Anderson", "with", "a", "married", "man", ".", "great", "plan", "."]
(c28-0 / multi-sentence
       :snt1 (c28-7 / cause-01
                    :ARG1 (c28-9 / get-01
                                 :ARG0 (c28-2 / she)
                                 :ARG1 (c28-4 / revenge
                                              :poss c28-2)
                                 :manner (c28-11 / cheat-03
                                                 :ARG0 c28-2
                                                 :ARG1 (c28-6 / person
                                                              :name (c28-1 / name
                                                                           :op1 "Anderson"))
                                                 :ARG2 (c28-5 / man
                                                              :ARG1-of (c28-10 / marry-01)))))
       :snt2 (c28-3 / plan-01
                    :mod (c28-8 / great)))

# ::snt She needs to sell some tickets....
# ::tokens ["She", "needs", "to", "sell", "some", "tickets", "...."]
# ::lemmas ["she", "need", "to", "sell", "some", "ticket", "...."]
(c29-1 / need-01
       :ARG0 (c29-2 / she)
       :ARG1 (c29-0 / sell-01
                    :ARG0 c29-2
                    :ARG1 (c29-3 / ticket
                                 :quant (c29-4 / some))))

# ::snt What a load of crap. Miranda is trying to deflect the fact that she cheated with married Evan and throw it back at Blake. What a loser she is...and a coward.
# ::tokens ["What", "a", "load", "of", "crap", ".", "Miranda", "is", "trying", "to", "deflect", "the", "fact", "that", "she", "cheated", "with", "married", "Evan", "and", "throw", "it", "back", "at", "Blake", ".", "What", "a", "loser", "she", "is", "...", "and", "a", "coward", "."]
# ::lemmas ["what", "a", "load", "of", "crap", ".", "Miranda", "be", "try", "to", "deflect", "the", "fact", "that", "she", "cheat", "with", "marry", "Evan", "and", "throw", "it", "back", "at", "Blake", ".", "what", "a", "loser", "she", "be", "...", "and", "a", "coward", "."]
(c30-13 / multi-sentence
        :snt1 (c30-9 / thing
                     :degree-of (c30-1 / load
                                       :consist-of (c30-16 / crap)))
        :snt2 (c30-17 / try-01
                      :ARG0 (c30-19 / person
                                    :name (c30-18 / name
                                                  :op1 "Miranda"))
                      :ARG1 (c30-8 / and
                                   :op1 (c30-23 / deflect-01
                                                :ARG0 c30-19
                                                :ARG1 (c30-11 / cheat-03
                                                              :ARG0 c30-19
                                                              :ARG1 (c30-14 / person
                                                                            :name (c30-15 / name
                                                                                          :op1 "Evan")
                                                                            :ARG1-of (c30-6 / marry-01))))
                                   :op2 (c30-21 / throw-01
                                                :ARG0 c30-19
                                                :ARG1 (c30-22 / it)
                                                :ARG2 (c30-4 / person
                                                             :name (c30-20 / name
                                                                           :op1 "Blake"))
                                                :direction (c30-12 / back))))
        :snt3 (c30-7 / and
                     :op1 (c30-2 / person
                                 :ARG0-of (c30-10 / lose-03)
                                 :domain (c30-0 / she))
                     :op2 (c30-3 / coward
                                 :domain c30-0)
                     :degree (c30-5 / so)))

# ::snt Miranda doesn't need all these lies to promote her album. Stop posting these BS
# ::tokens ["Miranda", "does", "n't", "need", "all", "these", "lies", "to", "promote", "her", "album", ".", "Stop", "posting", "these", "BS"]
# ::lemmas ["Miranda", "do", "not", "need", "all", "these", "lie", "to", "promote", "her", "album", ".", "stop", "post", "these", "BS"]
(c31-3 / multi-sentence
       :snt1 (c31-2 / need-01
                    :ARG0 (c31-8 / person
                                 :name (c31-6 / name
                                              :op1 "Miranda"))
                    :ARG1 (c31-7 / lie-08
                                 :ARG0 c31-8
                                 :mod (c31-11 / all)
                                 :mod (c31-9 / this))
                    :purpose (c31-4 / promote-02
                                    :ARG0 c31-8
                                    :ARG1 (c31-10 / album
                                                  :poss c31-8))
                    :polarity -)
       :snt2 (c31-5 / stop-01
                    :ARG0 (c31-1 / you)
                    :ARG1 (c31-12 / post-01
                                  :ARG0 c31-1
                                  :ARG1 (c31-0 / bullshit
                                               :mod (c31-13 / this)))
                    :mode imperative))

# ::snt Real Beauty is what's inside someone's soul, not an outer beauty. This is my opinion.
# ::tokens ["Real", "Beauty", "is", "what", "'s", "inside", "someone", "'s", "soul", ",", "not", "an", "outer", "beauty", ".", "This", "is", "my", "opinion", "."]
# ::lemmas ["real", "Beauty", "be", "what", "be", "inside", "someone", "'s", "soul", ",", "not", "an", "outer", "beauty", ".", "this", "be", "my", "opinion", "."]
(c32-4 / multi-sentence
       :snt1 (c32-10 / contrast-01
                     :ARG1 (c32-2 / be-located-at-91
                                  :ARG1 (c32-9 / beauty
                                               :ARG1-of (c32-8 / real-04))
                                  :ARG2 (c32-11 / inside
                                                :op1 (c32-6 / soul
                                                            :part-of (c32-0 / someone))))
                     :ARG2 (c32-13 / be-located-at-91
                                   :ARG1 (c32-1 / beauty
                                                :mod (c32-3 / outer))
                                   :ARG2 c32-11
                                   :polarity -))
       :snt2 (c32-5 / opine-01
                    :ARG0 (c32-7 / i)
                    :ARG1 (c32-12 / this)))

# ::snt ROTFL!!! He already has a hot body with him!!!
# ::tokens ["ROTFL", "!", "!", "!", "He", "already", "has", "a", "hot", "body", "with", "him", "!", "!", "!"]
# ::lemmas ["ROTFL", "!", "!", "!", "he", "already", "have", "a", "hot", "body", "with", "he", "!", "!", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-3 / roll-01
                    :location (c34-0 / floor)
                    :manner (c34-6 / laugh-01
                                   :ARG0 (c34-8 / i)
                                   :manner (c34-10 / loud))
                    :mode expressive)
       :snt2 (c34-5 / have-03
                    :ARG0 (c34-7 / he)
                    :ARG1 (c34-1 / body
                                 :ARG1-of (c34-4 / hot-05))
                    :time (c34-9 / already)
                    :accompanier (c34-11 / he)))

# ::snt I'd buy it
# ::tokens ["I", "'d", "buy", "it"]
# ::lemmas ["i", "would", "buy", "it"]
(c35-1 / buy-01
       :ARG0 (c35-2 / i)
       :ARG1 (c35-0 / it))

# ::snt Well, if you are not a fan of miranda, direct pass, do not stop to read the news,
# ::tokens ["Well", ",", "if", "you", "are", "not", "a", "fan", "of", "miranda", ",", "direct", "pass", ",", "do", "not", "stop", "to", "read", "the", "news", ","]
# ::lemmas ["well", ",", "if", "you", "be", "not", "a", "fan", "of", "miranda", ",", "direct", "pass", ",", "do", "not", "stop", "to", "read", "the", "news", ","]
(c36-5 / have-condition-91
       :ARG1 (c36-3 / stop-01
                    :ARG0 (c36-1 / you)
                    :purpose (c36-4 / read-01
                                    :ARG0 c36-1
                                    :ARG1 (c36-2 / news))
                    :mode imperative
                    :polarity -)
       :ARG2 (c36-0 / fan
                    :topic (c36-6 / person
                                  :name (c36-7 / name
                                               :op1 "Miranda"))
                    :domain c36-1
                    :polarity -)
       :mod (c36-8 / well))

# ::snt respect your taste, be a fan of Gwen
# ::tokens ["respect", "your", "taste", ",", "be", "a", "fan", "of", "Gwen"]
# ::lemmas ["respect", "your", "taste", ",", "be", "a", "fan", "of", "Gwen"]
(c37-4 / and
       :op1 (c37-3 / respect-01
                   :ARG0 (c37-1 / you)
                   :ARG1 (c37-6 / taste
                                :poss c37-1)
                   :mode imperative)
       :op2 (c37-0 / fan
                   :domain c37-1
                   :topic (c37-5 / person
                                 :name (c37-2 / name
                                              :op1 "Gwen"))))

# ::snt I'm a fan too Blake Shelton and not of Gwen, like good of Miranda, I have followers fans of Miranda,
# ::tokens ["I", "'m", "a", "fan", "too", "Blake", "Shelton", "and", "not", "of", "Gwen", ",", "like", "good", "of", "Miranda", ",", "I", "have", "followers", "fans", "of", "Miranda", ","]
# ::lemmas ["i", "be", "a", "fan", "too", "Blake", "Shelton", "and", "not", "of", "Gwen", ",", "like", "good", "of", "Miranda", ",", "i", "have", "follower", "fan", "of", "Miranda", ","]
(c38-4 / and
       :op1 (c38-0 / fan
                   :domain (c38-11 / i)
                   :mod (c38-12 / too)
                   :ARG1-of (c38-10 / contrast-01
                                    :ARG2 (c38-13 / and
                                                  :op1 (c38-6 / person
                                                              :name (c38-1 / name
                                                                           :op1 "Blake"
                                                                           :op2 "Shelton"))
                                                  :op2 (c38-2 / person
                                                              :name (c38-5 / name
                                                                           :op1 "Gwen")
                                                              :polarity -))))
       :op2 (c38-7 / fan
                   :domain c38-11
                   :mod (c38-14 / person
                                :name (c38-8 / name
                                             :op1 "Miranda")
                                :ARG1-of (c38-3 / good-02)))
       :op3 (c38-9 / follow-02
                   :ARG0 c38-11
                   :ARG1 c38-14))

# ::snt straight pass?? Do not know what you mean. I wish I never said anything since I didn't tweet right. Appoligies
# ::tokens ["straight", "pass", "?", "?", "Do", "not", "know", "what", "you", "mean", ".", "I", "wish", "I", "never", "said", "anything", "since", "I", "did", "n't", "tweet", "right", ".", "Appoligies"]
# ::lemmas ["straight", "pass", "?", "?", "do", "not", "know", "what", "you", "mean", ".", "i", "wish", "i", "never", "say", "anything", "since", "i", "do", "not", "tweet", "right", ".", "appoligie"]
(c39-2 / multi-sentence
       :snt1 (c39-8 / pass-04
                    :polarity (c39-15 / amr-unknown)
                    :ARG1-of (c39-3 / straight-04))
       :snt2 (c39-9 / know-01
                    :ARG0 (c39-14 / i)
                    :ARG1 (c39-13 / thing
                                  :ARG2-of (c39-7 / mean-01
                                                  :ARG0 (c39-1 / you)))
                    :polarity -)
       :snt3 (c39-10 / wish-01
                     :ARG0 (c39-4 / i)
                     :ARG1 (c39-0 / say-01
                                  :ARG0 c39-4
                                  :ARG1 (c39-16 / anything)
                                  :time (c39-6 / ever)
                                  :ARG1-of (c39-11 / cause-01
                                                   :ARG0 (c39-17 / tweet-01
                                                                 :ARG0 c39-4
                                                                 :ARG1-of (c39-5 / right-06)
                                                                 :polarity -))
                                  :polarity -))
       :snt4 (c39-12 / anonymity))

# ::snt I am a Blake fan % and now his Gwen
# ::tokens ["I", "am", "a", "Blake", "fan", "%", "and", "now", "his", "Gwen"]
# ::lemmas ["i", "be", "a", "Blake", "fan", "%", "and", "now", "his", "Gwen"]
(c40-7 / and
       :op1 (c40-0 / fan
                   :domain (c40-6 / i)
                   :mod (c40-4 / person
                               :name (c40-1 / name
                                            :op1 "Blake")))
       :op2 (c40-2 / person
                   :name (c40-3 / name
                                :op1 "Gwen")
                   :domain c40-4
                   :time (c40-5 / now)))

# ::snt If you are not a fan, I do not know why you said, straight pass
# ::tokens ["If", "you", "are", "not", "a", "fan", ",", "I", "do", "not", "know", "why", "you", "said", ",", "straight", "pass"]
# ::lemmas ["if", "you", "be", "not", "a", "fan", ",", "i", "do", "not", "know", "why", "you", "say", ",", "straight", "pass"]
(c41-4 / have-condition-91
       :ARG1 (c41-5 / know-01
                    :ARG0 (c41-7 / i)
                    :ARG1 (c41-8 / thing
                                 :ARG0-of (c41-6 / cause-01
                                                 :ARG1 (c41-3 / say-01
                                                              :ARG0 (c41-2 / you))))
                    :polarity -)
       :ARG2 (c41-0 / fan
                    :domain c41-2
                    :polarity -)
       :ARG1-of (c41-1 / straight-04))

# ::snt ok,right your not a fan, but you do not need to talk like that, if you're not a fan, you have other people who are
# ::tokens ["ok", ",", "right", "your", "not", "a", "fan", ",", "but", "you", "do", "not", "need", "to", "talk", "like", "that", ",", "if", "you", "'re", "not", "a", "fan", ",", "you", "have", "other", "people", "who", "are"]
# ::lemmas ["ok", ",", "right", "your", "not", "a", "fan", ",", "but", "you", "do", "not", "need", "to", "talk", "like", "that", ",", "if", "you", "be", "not", "a", "fan", ",", "you", "have", "other", "people", "who", "be"]
(c42-5 / and
       :op1 (c42-7 / have-concession-91
                   :ARG1 (c42-4 / need-01
                                :ARG0 (c42-3 / you)
                                :ARG1 (c42-11 / talk-01
                                              :ARG0 c42-3
                                              :ARG1-of (c42-6 / resemble-01
                                                              :ARG2 (c42-13 / that)))
                                :polarity -)
                   :ARG2 (c42-0 / fan
                                :domain c42-3
                                :polarity -))
       :op2 (c42-10 / have-03
                    :ARG0 c42-3
                    :ARG1 (c42-8 / person
                                 :mod (c42-1 / other))
                    :condition (c42-9 / fan
                                      :domain c42-3
                                      :polarity -))
       :ARG1-of (c42-2 / okay-04)
       :ARG1-of (c42-12 / right-06))

# ::snt I meant, it's not my business what you read. You may be a M fan. I shouldn't stick my nose in your business. That's all
# ::tokens ["I", "meant", ",", "it", "'s", "not", "my", "business", "what", "you", "read", ".", "You", "may", "be", "a", "M", "fan", ".", "I", "should", "n't", "stick", "my", "nose", "in", "your", "business", ".", "That", "'s", "all"]
# ::lemmas ["i", "mean", ",", "it", "be", "not", "my", "business", "what", "you", "read", ".", "you", "may", "be", "a", "M", "fan", ".", "i", "should", "not", "stick", "my", "nose", "in", "your", "business", ".", "that", "be", "all"]
(c43-10 / multi-sentence
        :snt1 (c43-6 / mean-01
                     :ARG0 (c43-18 / i)
                     :ARG2 (c43-9 / business
                                  :poss c43-18
                                  :domain (c43-7 / thing
                                                 :ARG1-of (c43-16 / read-01
                                                                  :ARG0 (c43-4 / you)))
                                  :polarity -))
        :snt2 (c43-17 / possible-01
                      :ARG1 (c43-14 / fan
                                    :mod (c43-11 / person
                                                 :name (c43-15 / name
                                                               :op1 "M"))
                                    :domain (c43-8 / you)))
        :snt3 (c43-2 / recommend-01
                     :ARG1 (c43-0 / stick-01
                                  :ARG0 (c43-5 / i
                                               :part (c43-12 / nose
                                                             :ARG1-of c43-0))
                                  :ARG2 (c43-1 / business
                                               :poss c43-8)
                                  :polarity -))
        :snt4 (c43-3 / be-it-08
                     :ARG1 (c43-13 / that)))

# ::snt How so ?: What works for me? Do not have to fix anything, do not fix nor fix anything, it is typical
# ::tokens ["How", "so", "?", ":", "What", "works", "for", "me", "?", "Do", "not", "have", "to", "fix", "anything", ",", "do", "not", "fix", "nor", "fix", "anything", ",", "it", "is", "typical"]
# ::lemmas ["how", "so", "?", ":", "what", "work", "for", "i", "?", "do", "not", "have", "to", "fix", "anything", ",", "do", "not", "fix", "nor", "fix", "anything", ",", "it", "be", "typical"]
(c44-2 / multi-sentence
       :snt1 (c44-7 / work-09
                    :ARG1 (c44-12 / amr-unknown)
                    :ARG2 (c44-11 / i)
                    :manner (c44-3 / so))
       :snt2 (c44-13 / and
                     :op1 (c44-0 / obligate-01
                                 :ARG1 (c44-4 / i)
                                 :ARG2 (c44-1 / fix-02
                                              :ARG0 c44-4
                                              :ARG1 (c44-8 / anything))
                                 :polarity -)
                     :op2 c44-13
                     :op1 (c44-5 / fix-02
                                 :ARG0 c44-4
                                 :ARG1 (c44-14 / anything)
                                 :polarity -)
                     :op2 (c44-6 / fix-02
                                 :ARG0 c44-4
                                 :ARG1 (c44-9 / anything)
                                 :polarity -)
                     :op3 (c44-10 / typical-02
                                  :ARG1 c44-13)))

# ::snt hum ok....
# ::tokens ["hum", "ok", "...."]
# ::lemmas ["hum", "ok", "...."]
(c45-0 / okay-01
       :mod (c45-1 / hum))

# ::snt notice the name ... Never correct. Or do what works for you. I shouldn't tell you what do
# ::tokens ["notice", "the", "name", "...", "Never", "correct", ".", "Or", "do", "what", "works", "for", "you", ".", "I", "should", "n't", "tell", "you", "what", "do"]
# ::lemmas ["notice", "the", "name", "...", "never", "correct", ".", "or", "do", "what", "work", "for", "you", ".", "i", "should", "not", "tell", "you", "what", "do"]
(c46-3 / multi-sentence
       :snt1 (c46-2 / notice-01
                    :ARG0 (c46-1 / you)
                    :ARG1 (c46-12 / thing
                                  :ARG2-of (c46-6 / name-01))
                    :mode imperative)
       :snt2 (c46-8 / correct-02
                    :time (c46-5 / ever)
                    :polarity -)
       :snt3 (c46-0 / or
                    :op2 (c46-14 / do-02
                                 :ARG0 (c46-13 / you)
                                 :ARG1 (c46-16 / thing
                                               :ARG1-of (c46-9 / work-09
                                                               :ARG2 c46-13))
                                 :mode imperative))
       :snt4 (c46-4 / recommend-01
                    :ARG1 (c46-11 / tell-01
                                  :ARG0 (c46-15 / i)
                                  :ARG1 (c46-7 / thing
                                               :ARG1-of (c46-10 / do-02))
                                  :ARG2 c46-13
                                  :polarity -)))

# ::snt he doesn't even write his own music!!
# ::tokens ["he", "does", "n't", "even", "write", "his", "own", "music", "!", "!"]
# ::lemmas ["he", "do", "not", "even", "write", "his", "own", "music", "!", "!"]
(c47-0 / write-01
       :ARG0 (c47-2 / he)
       :ARG1 (c47-3 / music
                    :poss c47-2)
       :mod (c47-1 / even)
       :polarity -)

# ::snt oh i know it is
# ::tokens ["oh", "i", "know", "it", "is"]
# ::lemmas ["oh", "i", "know", "it", "be"]
(c48-2 / know-01
       :ARG0 (c48-3 / i)
       :ARG1 (c48-0 / it)
       :mod (c48-1 / oh))

# ::snt give me a break. OK is a trash mag
# ::tokens ["give", "me", "a", "break", ".", "OK", "is", "a", "trash", "mag"]
# ::lemmas ["give", "i", "a", "break", ".", "ok", "be", "a", "trash", "mag"]
(c49-3 / multi-sentence
       :snt1 (c49-7 / give-01
                    :ARG0 (c49-2 / you)
                    :ARG1 (c49-1 / break-19)
                    :ARG2 (c49-5 / i)
                    :mode imperative)
       :snt2 (c49-4 / mag
                    :domain (c49-0 / okay-01)
                    :mod (c49-6 / trash)))
