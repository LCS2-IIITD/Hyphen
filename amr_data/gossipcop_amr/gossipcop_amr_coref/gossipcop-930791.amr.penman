# ::snt Of course! Knew this would happen!
# ::tokens ["Of", "course", "!", "Knew", "this", "would", "happen", "!"]
# ::lemmas ["of", "course", "!", "know", "this", "would", "happen", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-0 / of-course
                  :mode expressive)
      :snt2 (c1-2 / know-01
                  :ARG0 (c1-3 / i)
                  :ARG1 (c1-4 / this)))

# ::snt Everyone knew this was gunna happen it's no surprise just wait until DC build up it's universe I got faith
# ::tokens ["Everyone", "knew", "this", "was", "gunna", "happen", "it", "'s", "no", "surprise", "just", "wait", "until", "DC", "build", "up", "it", "'s", "universe", "I", "got", "faith"]
# ::lemmas ["everyone", "know", "this", "be", "gunna", "happen", "it", "be", "no", "surprise", "just", "wait", "until", "DC", "build", "up", "it", "be", "universe", "i", "get", "faith"]
(c2-3 / multi-sentence
      :snt1 (c2-10 / know-01
                   :ARG0 (c2-8 / everyone)
                   :ARG1 (c2-9 / possible-01
                               :ARG1 (c2-15 / this)
                               :polarity -))
      :snt2 (c2-5 / surprise-01
                  :ARG0 (c2-12 / wait-01
                               :ARG1 (c2-2 / you)
                               :mod (c2-13 / just)
                               :time (c2-17 / until
                                            :op1 (c2-1 / build-up-05
                                                       :ARG0 (c2-4 / person
                                                                   :name (c2-6 / name
                                                                               :op1 "DC"))
                                                       :ARG1 (c2-11 / universe
                                                                    :poss (c2-14 / it))))
                               :mode imperative)
                  :polarity -)
      :snt3 (c2-16 / get-02
                   :ARG0 (c2-7 / i)
                   :ARG1 (c2-0 / faith)))

# ::snt And I helped!
# ::tokens ["And", "I", "helped", "!"]
# ::lemmas ["and", "i", "help", "!"]
(c3-2 / and
      :op2 (c3-0 / help-01
                 :ARG0 (c3-1 / i)))

# ::snt well look at that!
# ::tokens ["well", "look", "at", "that", "!"]
# ::lemmas ["well", "look", "at", "that", "!"]
(c5-2 / look-01
      :ARG0 (c5-1 / you)
      :ARG1 (c5-3 / that)
      :mod (c5-0 / well)
      :mode imperative)

# ::snt mais je ne comprends tjs pas la fin ...
# ::tokens ["mais", "je", "ne", "comprends", "tjs", "pas", "la", "fin", "..."]
# ::lemmas ["mais", "je", "ne", "comprend", "tjs", "pas", "la", "fin", "..."]
(c6-4 / and
      :op1 (c6-2 / laugh-01
                 :ARG0 (c6-3 / i)
                 :manner (c6-5 / loud)
                 :mode expressive)
      :op2 (c6-1 / prove-01
                 :ARG0 c6-3
                 :manner c6-5
                 :mode expressive)
      :op3 (c6-0 / et-cetera))

# ::snt I was so shook after this movie, that I couldn't sleep for a few hours
# ::tokens ["I", "was", "so", "shook", "after", "this", "movie", ",", "that", "I", "could", "n't", "sleep", "for", "a", "few", "hours"]
# ::lemmas ["i", "be", "so", "shake", "after", "this", "movie", ",", "that", "i", "could", "not", "sleep", "for", "a", "few", "hours"]
(c8-3 / shake-01
      :ARG1 (c8-8 / i)
      :time (c8-9 / after
                  :op1 (c8-2 / movie
                             :mod (c8-7 / this)))
      :ARG0-of (c8-6 / cause-01
                     :ARG1 (c8-5 / possible-01
                                 :ARG1 (c8-0 / sleep-01
                                             :ARG0 c8-8
                                             :duration (c8-1 / few
                                                             :op1 (c8-10 / temporal-quantity
                                                                         :unit (c8-4 / hour)
                                                                         :quant 1)))
                                 :polarity -)))

# ::snt Suck it black panther
# ::tokens ["Suck", "it", "black", "panther"]
# ::lemmas ["suck", "it", "black", "panther"]
(c9-3 / say-01
      :ARG1 (c9-0 / suck-01
                  :ARG0 (c9-2 / you)
                  :ARG1 (c9-5 / it)
                  :mode imperative)
      :ARG2 (c9-4 / panther
                  :ARG1-of (c9-1 / black-05)))

# ::snt Must see
# ::tokens ["Must", "see"]
# ::lemmas ["must", "see"]
(c11-0 / obligate-01
       :ARG1 (c11-1 / see-01))

# ::snt Hey Marvel...are you there whatever happened to "Marvels Agent Carter?" Well...?:??
# ::tokens ["Hey", "Marvel", "...", "are", "you", "there", "whatever", "happened", "to", "\"", "Marvels", "Agent", "Carter", "?", "\"", "Well", "...", "?", ":", "?", "?"]
# ::lemmas ["hey", "Marvel", "...", "be", "you", "there", "whatever", "happen", "to", "\"", "Marvels", "Agent", "Carter", "?", "\"", "well", "...", "?", ":", "?", "?"]
(c12-1 / multi-sentence
       :snt1 (c12-2 / say-01
                    :ARG1 (c12-4 / hey)
                    :ARG2 (c12-5 / company
                                 :name (c12-0 / name
                                              :op1 "Marvels"
                                              :op2 "Agent"
                                              :op3 "Carter")))
       :snt2 (c12-3 / event
                    :polarity (c12-9 / amr-unknown)
                    :topic (c12-8 / amr-unknown)
                    :location (c12-7 / there)
                    :mod (c12-6 / well)
                    :polarity c12-8))

# ::snt We can go Wednesday night
# ::tokens ["We", "can", "go", "Wednesday", "night"]
# ::lemmas ["we", "can", "go", "Wednesday", "night"]
(c15-1 / possible-01
       :ARG1 (c15-4 / go-02
                    :ARG0 (c15-3 / we)
                    :time (c15-5 / date-entity
                                 :weekday (c15-2 / wednesday)
                                 :dayperiod (c15-0 / night))))

# ::snt The End??? Biggest disappointment ever!!
# ::tokens ["The", "End", "?", "?", "?", "Biggest", "disappointment", "ever", "!", "!"]
# ::lemmas ["the", "end", "?", "?", "?", "big", "disappointment", "ever", "!", "!"]
(c16-0 / multi-sentence
       :snt1 (c16-2 / end-01
                    :polarity (c16-5 / amr-unknown))
       :snt2 (c16-6 / disappoint-01
                    :time (c16-1 / ever)
                    :ARG2-of (c16-3 / have-degree-91
                                    :ARG3 (c16-4 / most)
                                    :ARG1 c16-6)
                    :mode expressive))

# ::snt It was something watching in that suit...
# ::tokens ["It", "was", "something", "watching", "in", "that", "suit", "..."]
# ::lemmas ["it", "be", "something", "watch", "in", "that", "suit", "..."]
(c17-3 / something
       :ARG0-of (c17-0 / watch-01
                       :location (c17-1 / suit
                                        :mod (c17-2 / that))))

# ::snt As well as it should
# ::tokens ["As", "well", "as", "it", "should"]
# ::lemmas ["as", "well", "as", "it", "should"]
(c18-2 / have-degree-91
       :ARG2 (c18-0 / well-09)
       :ARG3 (c18-1 / equal)
       :ARG4 (c18-3 / recommend-01))

# ::snt We all know, all who turned to ash will all come back. Ending a billion dollar franchise by killing them them all off? Riiiiight.
# ::tokens ["We", "all", "know", ",", "all", "who", "turned", "to", "ash", "will", "all", "come", "back", ".", "Ending", "a", "billion", "dollar", "franchise", "by", "killing", "them", "them", "all", "off", "?", "Riiiiight", "."]
# ::lemmas ["we", "all", "know", ",", "all", "who", "turn", "to", "ash", "will", "all", "come", "back", ".", "end", "a", "billion", "dollar", "franchise", "by", "kill", "they", "they", "all", "off", "?", "riiiiight", "."]
(c19-8 / multi-sentence
       :snt1 (c19-1 / know-01
                    :ARG0 (c19-17 / we
                                  :mod (c19-5 / all))
                    :ARG1 (c19-9 / come-01
                                 :ARG1 (c19-16 / person
                                               :ARG1-of (c19-4 / turn-02
                                                               :ARG2 (c19-3 / ash))
                                               :mod (c19-2 / all))
                                 :direction (c19-7 / back)))
       :snt2 (c19-15 / end-01
                     :ARG1 (c19-12 / franchise-01
                                   :ARG1-of (c19-6 / cost-01
                                                   :ARG2 (c19-0 / monetary-quantity
                                                                :unit (c19-13 / dollar)
                                                                :quant 1000000000)))
                     :ARG2 (c19-11 / kill-off-02
                                   :ARG1 (c19-10 / they
                                                 :mod (c19-19 / all)))
                     :polarity (c19-18 / amr-unknown)
                     :mod (c19-14 / right)))

# ::snt its what she deserves
# ::tokens ["its", "what", "she", "deserves"]
# ::lemmas ["its", "what", "she", "deserve"]
(c20-2 / thing
       :ARG1-of (c20-1 / deserve-01
                       :ARG0 (c20-0 / she)))

# ::snt Omg same ... was wondering if others out here felt the same
# ::tokens ["Omg", "same", "...", "was", "wondering", "if", "others", "out", "here", "felt", "the", "same"]
# ::lemmas ["Omg", "same", "...", "be", "wonder", "if", "other", "out", "here", "feel", "the", "same"]
(c21-9 / and
       :op1 (c21-4 / same-01
                   :mod (c21-0 / oh-my-god
                               :mode expressive))
       :op2 (c21-6 / wonder-01
                   :ARG0 (c21-8 / i)
                   :ARG1 (c21-7 / truth-value
                                :polarity-of (c21-1 / feel-01
                                                    :ARG0 (c21-2 / other
                                                                 :location (c21-10 / out
                                                                                   :op1 (c21-5 / here)))
                                                    :ARG1 (c21-3 / same-01)))))

# ::snt Just about everyone does and Hulk turns scared ad doesn't come out. I was disappointed
# ::tokens ["Just", "about", "everyone", "does", "and", "Hulk", "turns", "scared", "ad", "does", "n't", "come", "out", ".", "I", "was", "disappointed"]
# ::lemmas ["just", "about", "everyone", "do", "and", "Hulk", "turn", "scared", "ad", "do", "not", "come", "out", ".", "i", "be", "disappoint"]
(c22-0 / multi-sentence
       :snt1 (c22-10 / and
                     :op1 (c22-4 / event
                                 :mod (c22-12 / everyone
                                              :mod (c22-9 / about
                                                          :mod (c22-8 / just))))
                     :op2 (c22-6 / come-out-09
                                 :ARG1 (c22-7 / advertise-01
                                              :ARG1 (c22-11 / turn-02
                                                            :ARG1 (c22-5 / person
                                                                         :name (c22-1 / name
                                                                                      :op1 "Hulk"))
                                                            :ARG2 (c22-2 / scare-01)))
                                 :polarity -))
       :snt2 (c22-3 / disappoint-01
                    :ARG1 (c22-13 / i)))

# ::snt How about the biggest disappointment of all time after watching it?
# ::tokens ["How", "about", "the", "biggest", "disappointment", "of", "all", "time", "after", "watching", "it", "?"]
# ::lemmas ["how", "about", "the", "big", "disappointment", "of", "all", "time", "after", "watch", "it", "?"]
(c23-2 / amr-unknown
       :topic (c23-9 / disappoint-01
                     :time (c23-8 / after
                                  :op1 (c23-4 / watch-01
                                              :ARG1 (c23-7 / it)))
                     :ARG1-of (c23-3 / have-degree-91
                                     :ARG2 (c23-0 / big)
                                     :ARG3 (c23-1 / most)
                                     :ARG5 (c23-6 / time
                                                  :mod (c23-5 / all)))))

# ::snt The Best Movies In The America
# ::tokens ["The", "Best", "Movies", "In", "The", "America"]
# ::lemmas ["The", "Best", "Movies", "In", "The", "America"]
(c24-1 / movie
       :location (c24-4 / country
                        :name (c24-0 / name
                                     :op1 "America"))
       :ARG1-of (c24-2 / have-degree-91
                       :ARG2 (c24-5 / good-02
                                    :ARG1 c24-1)
                       :ARG3 (c24-3 / most)))

# ::snt and weve still no been
# ::tokens ["and", "we", "ve", "still", "no", "been"]
# ::lemmas ["and", "we", "ve", "still", "no", "be"]
(c25-3 / and
       :op2 (c25-2 / event
                   :mod (c25-1 / we)
                   :mod (c25-0 / still)
                   :polarity -))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c35-0 / amr-empty)

# ::snt Win a prize pack from Avengers: Infinity War,
# ::tokens ["Win", "a", "prize", "pack", "from", "Avengers", ":", "Infinity", "War", ","]
# ::lemmas ["win", "a", "prize", "pack", "from", "Avengers", ":", "Infinity", "War", ","]
(c37-5 / win-01
       :ARG0 (c37-0 / you)
       :ARG1 (c37-3 / pack
                    :ARG2-of (c37-2 / prize-01)
                    :source (c37-4 / work-of-art
                                   :name (c37-1 / name
                                                :op1 "Avengers:"
                                                :op2 "Infinity"
                                                :op3 "War")))
       :mode imperative)

# ::snt Amazzzing!!!
# ::tokens ["Amazzzing", "!", "!", "!"]
# ::lemmas ["amazzze", "!", "!", "!"]
(c42-1 / thing
       :ARG0-of (c42-0 / amaze-01)
       :mode expressive)

# ::snt How cool!
# ::tokens ["How", "cool", "!"]
# ::lemmas ["how", "cool", "!"]
(c48-0 / cool-04
       :degree (c48-1 / so))

# ::snt Yw big sister!
# ::tokens ["Yw", "big", "sister", "!"]
# ::lemmas ["Yw", "big", "sister", "!"]
(c49-2 / person
       :ARG0-of (c49-1 / have-rel-role-91
                       :ARG2 (c49-3 / sister))
       :mod (c49-0 / big)
       :mode expressive)

# ::snt Ur very welcome Kimberley! Ty
# ::tokens ["Ur", "very", "welcome", "Kimberley", "!", "Ty"]
# ::lemmas ["ur", "very", "welcome", "Kimberley", "!", "ty"]
(c50-1 / multi-sentence
       :snt1 (c50-6 / welcome-01
                    :ARG0 (c50-7 / i)
                    :ARG1 (c50-5 / person
                                 :name (c50-0 / name
                                              :op1 "Kimberley"))
                    :degree (c50-3 / very))
       :snt2 (c50-2 / person
                    :name (c50-4 / name
                                 :op1 "Ty")
                    :mode expressive))
