# ::snt And his mother looks better then the girlfriend
# ::tokens ["And", "his", "mother", "looks", "better", "then", "the", "girlfriend"]
# ::lemmas ["and", "his", "mother", "look", "well", "then", "the", "girlfriend"]
(c1-9 / and
      :op2 (c1-5 / look-02
                 :ARG0 (c1-4 / person
                             :ARG0-of (c1-3 / have-rel-role-91
                                            :ARG1 (c1-7 / he)
                                            :ARG2 (c1-0 / mother)))
                 :ARG1 (c1-10 / good-02
                              :ARG2-of (c1-2 / have-degree-91
                                             :ARG1 c1-4
                                             :ARG3 (c1-6 / more)
                                             :ARG4 (c1-11 / look-02
                                                          :ARG0 (c1-1 / person
                                                                      :ARG0-of (c1-12 / have-rel-role-91
                                                                                      :ARG1 c1-7
                                                                                      :ARG2 (c1-8 / girlfriend))))))))

# ::snt What? Say it is not so! No way! Not Blake! Imagine that! Karma
# ::tokens ["What", "?", "Say", "it", "is", "not", "so", "!", "No", "way", "!", "Not", "Blake", "!", "Imagine", "that", "!", "Karma"]
# ::lemmas ["what", "?", "say", "it", "be", "not", "so", "!", "no", "way", "!", "not", "Blake", "!", "imagine", "that", "!", "Karma"]
(c2-3 / multi-sentence
      :snt1 (c2-11 / amr-unknown)
      :snt2 (c2-5 / say-01
                  :ARG0 (c2-2 / you)
                  :ARG1 (c2-1 / so
                              :domain (c2-10 / it)
                              :polarity -)
                  :mode imperative)
      :snt3 (c2-8 / way
                  :polarity -)
      :snt4 c2-5
      :ARG0 (c2-12 / you)
      :ARG1 (c2-7 / person
                  :name (c2-4 / name
                              :op1 "Blake")
                  :polarity -)
      :snt5 (c2-6 / imagine-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-9 / that)
                  :mode imperative)
      :snt6 c2-7
      :name c2-4
      :mode imperative
      :op1 "Karma")

# ::snt What goes around comes around Gwen.
# ::tokens ["What", "goes", "around", "comes", "around", "Gwen", "."]
# ::lemmas ["what", "go", "around", "come", "around", "Gwen", "."]
(c3-2 / come-01
      :ARG1 (c3-3 / thing
                  :ARG1-of (c3-6 / go-06
                                 :ARG2 (c3-5 / around)))
      :ARG4 (c3-4 / around
                  :op1 (c3-1 / person
                             :name (c3-0 / name
                                         :op1 "Gwen"))))
