# ::snt Leave him alone. She played games and fucked around with him. What do U expect
# ::tokens ["Leave", "him", "alone", ".", "She", "played", "games", "and", "fucked", "around", "with", "him", ".", "What", "do", "U", "expect"]
# ::lemmas ["leave", "he", "alone", ".", "she", "play", "game", "and", "fuck", "around", "with", "he", ".", "what", "do", "u", "expect"]
(c1-2 / multi-sentence
      :snt1 (c1-6 / leave-14
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-11 / alone
                               :domain (c1-5 / he))
                  :mode imperative)
      :snt2 (c1-10 / and
                   :op1 (c1-7 / play-01
                              :ARG0 (c1-3 / she)
                              :ARG1 (c1-12 / game))
                   :op2 (c1-0 / fuck-around-03
                              :ARG0 c1-3
                              :ARG1 (c1-9 / he)))
      :snt3 (c1-4 / expect-01
                  :ARG0 (c1-13 / you)
                  :ARG1 (c1-8 / amr-unknown)))

# ::snt Good she needs to stay with Justin
# ::tokens ["Good", "she", "needs", "to", "stay", "with", "Justin"]
# ::lemmas ["good", "she", "need", "to", "stay", "with", "Justin"]
(c2-5 / good-02
      :ARG1 (c2-1 / need-01
                  :ARG0 (c2-2 / she)
                  :ARG1 (c2-0 / stay-01
                              :ARG1 c2-2
                              :ARG3 (c2-4 / person
                                          :name (c2-3 / name
                                                      :op1 "Justin")))))

# ::snt What do she expect. She dropped him likes a hot potato and went rubbing back to Bieber
# ::tokens ["What", "do", "she", "expect", ".", "She", "dropped", "him", "likes", "a", "hot", "potato", "and", "went", "rubbing", "back", "to", "Bieber"]
# ::lemmas ["what", "do", "she", "expect", ".", "she", "drop", "he", "like", "a", "hot", "potato", "and", "go", "rub", "back", "to", "Bieber"]
(c3-2 / multi-sentence
      :snt1 (c3-7 / expect-01
                  :ARG0 (c3-4 / she)
                  :ARG1 (c3-13 / amr-unknown))
      :snt2 (c3-12 / and
                   :op1 (c3-15 / drop-05
                               :ARG0 (c3-0 / she)
                               :ARG1 (c3-8 / he)
                               :manner (c3-9 / like-01
                                             :ARG0 c3-0
                                             :ARG1 (c3-10 / potato
                                                          :ARG1-of (c3-11 / hot-05))))
                   :op2 (c3-14 / go-06
                               :ARG0 c3-0
                               :ARG1 (c3-6 / rub-01
                                           :ARG0 c3-0
                                           :ARG1 (c3-3 / person
                                                       :name (c3-5 / name
                                                                   :op1 "Bieber"))
                                           :direction (c3-1 / back)))))

# ::snt Should she even be dating...she looks
# ::tokens ["Should", "she", "even", "be", "dating", "...", "she", "looks"]
# ::lemmas ["should", "she", "even", "be", "date", "...", "she", "look"]
(c5-1 / multi-sentence
      :snt1 (c5-3 / recommend-01
                  :ARG1 (c5-6 / date-02
                              :ARG0 (c5-2 / she)
                              :mod (c5-4 / even)))
      :snt2 (c5-5 / look-02
                  :ARG0 (c5-0 / she)))

# ::snt Who the hell cares!
# ::tokens ["Who", "the", "hell", "cares", "!"]
# ::lemmas ["who", "the", "hell", "care", "!"]
(c6-0 / care-01
      :ARG0 (c6-2 / amr-unknown)
      :mod (c6-1 / hell)
      :mode expressive)

# ::snt move over Selena cos I'm coming in
# ::tokens ["move", "over", "Selena", "cos", "I", "'m", "coming", "in"]
# ::lemmas ["move", "over", "Selena", "cos", "i", "be", "come", "in"]
(c7-3 / move-01
      :ARG0 (c7-1 / you)
      :ARG2 (c7-0 / over
                  :op1 (c7-4 / city
                             :name (c7-2 / name
                                         :op1 "Selena")))
      :ARG1-of (c7-7 / cause-01
                     :ARG0 (c7-5 / come-in-07
                                 :ARG1 (c7-6 / i)))
      :mode imperative)

# ::snt Meaning he still has feelings for her
# ::tokens ["Meaning", "he", "still", "has", "feelings", "for", "her"]
# ::lemmas ["mean", "he", "still", "have", "feeling", "for", "she"]
(c8-2 / mean-01
      :ARG2 (c8-0 / feel-01
                  :ARG0 (c8-4 / he)
                  :ARG2 (c8-3 / she)
                  :mod (c8-1 / still)))

# ::snt Can't blame him... surprised he held on for so long.
# ::tokens ["Ca", "n't", "blame", "him", "...", "surprised", "he", "held", "on", "for", "so", "long", "."]
# ::lemmas ["can", "not", "blame", "he", "...", "surprise", "he", "hold", "on", "for", "so", "long", "."]
(c9-2 / multi-sentence
      :snt1 (c9-6 / possible-01
                  :ARG1 (c9-1 / blame-01
                              :ARG1 (c9-5 / he))
                  :polarity -)
      :snt2 (c9-3 / surprise-01
                  :ARG0 (c9-8 / hold-on-05
                              :ARG0 (c9-4 / he)
                              :duration (c9-7 / long
                                              :degree (c9-0 / so)))
                  :ARG1 (c9-9 / i)))

# ::snt Dropping him for Justin Baby? Id delete her too. Out of my life.
# ::tokens ["Dropping", "him", "for", "Justin", "Baby", "?", "I", "d", "delete", "her", "too", ".", "Out", "of", "my", "life", "."]
# ::lemmas ["drop", "he", "for", "Justin", "Baby", "?", "i", "d", "delete", "she", "too", ".", "out", "of", "my", "life", "."]
(c10-2 / multi-sentence
       :snt1 (c10-13 / drop-05
                     :polarity (c10-12 / amr-unknown)
                     :ARG0 (c10-11 / i)
                     :ARG1 (c10-6 / he)
                     :ARG3 (c10-1 / baby
                                  :mod (c10-7 / person
                                              :name (c10-3 / name
                                                           :op1 "Justin"))))
       :snt2 (c10-9 / delete-01
                    :ARG0 (c10-5 / i)
                    :ARG1 (c10-4 / she)
                    :mod (c10-10 / too)
                    :time (c10-0 / out-06
                                 :ARG1 c10-5
                                 :ARG2 (c10-8 / life
                                              :poss c10-5))))

# ::snt Girl you are better off!
# ::tokens ["Girl", "you", "are", "better", "off", "!"]
# ::lemmas ["girl", "you", "be", "well", "off", "!"]
(c12-3 / well-off-06
       :ARG1 (c12-0 / you
                    :mod (c12-4 / girl))
       :ARG2-of (c12-2 / have-degree-91
                       :ARG1 c12-0
                       :ARG3 (c12-1 / more))
       :mode expressive)

# ::snt as he should
# ::tokens ["as", "he", "should"]
# ::lemmas ["as", "he", "should"]
(c13-0 / recommend-01
       :ARG2 (c13-1 / he))

# ::snt When you're done I say why hold on the past! Don't stay bitter, each day gets easier but u move forward. I think they both were in rebound mode &amp; didn't do each other any favors close chpt1 b4 u start !!
# ::tokens ["When", "you", "'re", "done", "I", "say", "why", "hold", "on", "the", "past", "!", "Do", "n't", "stay", "bitter", ",", "each", "day", "gets", "easier", "but", "u", "move", "forward", ".", "I", "think", "they", "both", "were", "in", "rebound", "mode", "&", "amp", ";", "did", "n't", "do", "each", "other", "any", "favors", "close", "chpt1", "b4", "u", "start", "!", "!"]
# ::lemmas ["when", "you", "be", "do", "i", "say", "why", "hold", "on", "the", "past", "!", "do", "not", "stay", "bitter", ",", "each", "day", "get", "easy", "but", "u", "move", "forward", ".", "i", "think", "they", "both", "be", "in", "rebound", "mode", "&", "amp", ";", "do", "not", "do", "each", "other", "any", "favor", "close", "chpt1", "b4", "u", "start", "!", "!"]
(c14-22 / multi-sentence
        :snt1 (c14-0 / say-01
                     :ARG0 (c14-38 / i)
                     :ARG1 (c14-26 / cause-01
                                   :ARG0 (c14-15 / amr-unknown)
                                   :ARG1 (c14-11 / hold-on-05
                                                 :ARG0 (c14-8 / you)
                                                 :ARG1 (c14-35 / past)
                                                 :mode imperative))
                     :time (c14-21 / be-done-08
                                   :ARG0 c14-8))
        :snt2 (c14-20 / contrast-01
                      :ARG1 (c14-5 / stay-01
                                   :ARG1 (c14-18 / you)
                                   :ARG3 (c14-1 / bitter)
                                   :ARG1-of (c14-2 / cause-01
                                                   :ARG0 (c14-16 / get-03
                                                                 :ARG1 (c14-39 / day
                                                                               :mod (c14-34 / each))
                                                                 :ARG2 (c14-17 / easy-05
                                                                               :ARG2-of (c14-37 / have-degree-91
                                                                                                :ARG1 c14-39
                                                                                                :ARG3 (c14-12 / more)))))
                                   :polarity -
                                   :mode imperative)
                      :ARG2 (c14-29 / move-01
                                    :ARG0 c14-18
                                    :ARG2 (c14-31 / forward)))
        :snt3 (c14-19 / think-01
                      :ARG0 (c14-10 / i)
                      :ARG1 (c14-14 / and
                                    :op1 (c14-25 / mode
                                                 :ARG1-of (c14-33 / rebound-01)
                                                 :domain (c14-28 / they
                                                                 :mod (c14-3 / both)))
                                    :op2 (c14-23 / person
                                                 :name (c14-32 / name
                                                               :op1 "amp"))))
        :snt4 (c14-27 / do-02
                      :ARG0 (c14-4 / you)
                      :ARG1 (c14-36 / favor
                                    :mod (c14-13 / any))
                      :ARG2 (c14-6 / other
                                   :mod c14-34)
                      :polarity -)
        :ARG1-of (c14-30 / close-10)
        :ARG1-of (c14-7 / cause-01
                        :ARG0 (c14-24 / amr-unknown))
        :time (c14-9 / start-01
                     :ARG0 c14-4))

# ::snt Why is this news
# ::tokens ["Why", "is", "this", "news"]
# ::lemmas ["why", "be", "this", "news"]
(c15-2 / news
       :mod (c15-3 / this)
       :ARG1-of (c15-1 / cause-01
                       :ARG0 (c15-0 / amr-unknown)))

# ::snt And this is News? Go back to Matt and Harry.
# ::tokens ["And", "this", "is", "News", "?", "Go", "back", "to", "Matt", "and", "Harry", "."]
# ::lemmas ["and", "this", "be", "news", "?", "go", "back", "to", "Matt", "and", "Harry", "."]
(c16-3 / multi-sentence
       :snt1 (c16-5 / and
                    :op2 (c16-2 / news
                                :domain (c16-11 / this))
                    :polarity (c16-10 / amr-unknown))
       :snt2 (c16-12 / go-02
                     :ARG0 (c16-1 / you)
                     :ARG4 (c16-9 / and
                                  :op1 (c16-7 / person
                                              :name (c16-6 / name
                                                           :op1 "Matt"))
                                  :op2 (c16-4 / person
                                              :name (c16-8 / name
                                                           :op1 "Harry")))
                     :direction (c16-0 / back)
                     :mode imperative))

# ::snt And this is supposed to be news?
# ::tokens ["And", "this", "is", "supposed", "to", "be", "news", "?"]
# ::lemmas ["and", "this", "be", "suppose", "to", "be", "news", "?"]
(c18-2 / and
       :op2 (c18-1 / suppose-02
                   :polarity (c18-3 / amr-unknown)
                   :ARG1 (c18-4 / this)
                   :ARG2 (c18-0 / news)))

# ::snt Childish!
# ::tokens ["Childish", "!"]
# ::lemmas ["childish", "!"]
(c19-0 / childish
       :mode expressive)

# ::snt Lmao
# ::tokens ["Lmao"]
# ::lemmas ["lmao"]
(c20-1 / laugh-01
       :ARG0 (c20-2 / i
                    :part (c20-3 / ass))
       :ARG3 (c20-0 / off
                    :op1 c20-3))

# ::snt Who cares, seriously.
# ::tokens ["Who", "cares", ",", "seriously", "."]
# ::lemmas ["who", "care", ",", "seriously", "."]
(c21-1 / care-01
       :ARG0 (c21-2 / amr-unknown)
       :ARG1-of (c21-0 / serious-01))

# ::snt Dont care
# ::tokens ["Do", "nt", "care"]
# ::lemmas ["do", "nt", "care"]
(c22-0 / care-01
       :ARG0 (c22-1 / you)
       :polarity -
       :mode imperative)

# ::snt Hit it and forget it
# ::tokens ["Hit", "it", "and", "forget", "it"]
# ::lemmas ["hit", "it", "and", "forget", "it"]
(c23-4 / and
       :op1 (c23-2 / hit-02
                   :ARG0 (c23-1 / you)
                   :ARG1 (c23-3 / it)
                   :mode imperative)
       :op2 (c23-0 / forget-01
                   :ARG0 c23-1
                   :ARG1 c23-3
                   :mode imperative))

# ::snt Always a mature move
# ::tokens ["Always", "a", "mature", "move"]
# ::lemmas ["always", "a", "mature", "move"]
(c24-1 / move-02
       :ARG1-of (c24-0 / mature-02)
       :time (c24-2 / always))

# ::snt I literally couldnt imagine being this popular
# ::tokens ["I", "literally", "could", "nt", "imagine", "being", "this", "popular"]
# ::lemmas ["i", "literally", "could", "not", "imagine", "be", "this", "popular"]
(c25-2 / possible-01
       :ARG1 (c25-4 / imagine-01
                    :ARG0 (c25-1 / i)
                    :ARG1 (c25-0 / popular-02
                                 :ARG1 c25-1
                                 :degree (c25-5 / this)))
       :manner (c25-3 / literal)
       :polarity -)

# ::snt I mean you got people looking to see who he follows unfollows and deletes?. How much do you guys pay?
# ::tokens ["I", "mean", "you", "got", "people", "looking", "to", "see", "who", "he", "follows", "unfollows", "and", "deletes", "?", ".", "How", "much", "do", "you", "guys", "pay", "?"]
# ::lemmas ["i", "mean", "you", "get", "people", "look", "to", "see", "who", "he", "follow", "unfollow", "and", "delete", "?", ".", "how", "much", "do", "you", "guy", "pay", "?"]
(c27-2 / multi-sentence
       :snt1 (c27-5 / mean-01
                    :ARG0 (c27-9 / i)
                    :ARG2 (c27-11 / get-04
                                  :ARG0 (c27-1 / you)
                                  :ARG1 (c27-6 / look-01
                                               :ARG0 (c27-7 / person)
                                               :ARG1 (c27-4 / see-01
                                                            :ARG0 c27-7
                                                            :ARG1 (c27-10 / and
                                                                          :op1 (c27-0 / follow-02
                                                                                      :ARG0 (c27-8 / he)
                                                                                      :ARG1 (c27-3 / person
                                                                                                   :ARG1 c27-8)
                                                                                      :ARG0 c27-3))
                                                            :op2 (c27-12 / delete-01
                                                                         :ARG0 c27-8)))))
       :snt2 (c27-15 / pay-01
                     :ARG0 (c27-13 / you
                                   :mod (c27-14 / guy))
                     :ARG1 (c27-16 / amr-unknown)))

# ::snt I BET HE DID MUCH LOVE RM UGANDA
# ::tokens ["I", "BET", "HE", "DID", "MUCH", "LOVE", "RM", "UGANDA"]
# ::lemmas ["i", "BET", "he", "do", "much", "LOVE", "RM", "UGANDA"]
(c28-0 / bet-01
       :ARG0 (c28-6 / i)
       :ARG2 (c28-5 / love-01
                    :ARG0 (c28-3 / he)
                    :ARG1 (c28-4 / person
                                 :name (c28-1 / name
                                              :op1 "Ramas"
                                              :op2 "UGANDA"))
                    :degree (c28-2 / much)))

# ::snt because she wont find out any other way....
# ::tokens ["because", "she", "wo", "nt", "find", "out", "any", "other", "way", "...."]
# ::lemmas ["because", "she", "will", "not", "find", "out", "any", "other", "way", "...."]
(c29-3 / cause-01
       :ARG0 (c29-0 / find-out-03
                    :ARG0 (c29-2 / she)
                    :manner (c29-4 / way
                                   :mod (c29-5 / any)
                                   :mod (c29-1 / other))
                    :polarity -))

# ::snt Who cares?
# ::tokens ["Who", "cares", "?"]
# ::lemmas ["who", "care", "?"]
(c30-0 / care-01
       :ARG0 (c30-1 / amr-unknown))
