# ::snt Papers always talk crap
# ::tokens ["Papers", "always", "talk", "crap"]
# ::lemmas ["paper", "always", "talk", "crap"]
(c1-3 / talk-01
      :ARG0 (c1-2 / newspaper)
      :ARG1 (c1-1 / crap)
      :time (c1-0 / always))

# ::snt Thats just rude she looks like that cause of her lupus grow tf up
# ::tokens ["That", "s", "just", "rude", "she", "looks", "like", "that", "cause", "of", "her", "lupus", "grow", "tf", "up"]
# ::lemmas ["that", "s", "just", "rude", "she", "look", "like", "that", "cause", "of", "her", "lupus", "grow", "tf", "up"]
(c2-1 / multi-sentence
      :snt1 (c2-3 / rude-01
                  :ARG1 (c2-7 / that)
                  :mod (c2-6 / just))
      :snt2 (c2-4 / look-02
                  :ARG0 (c2-2 / she)
                  :ARG1 c2-7)
      :ARG1-of (c2-5 / cause-01
                     :ARG0 (c2-8 / grow-up-04
                                 :ARG1 (c2-9 / lupus
                                             :poss c2-2)
                                 :mod (c2-0 / fuck
                                            :mode expressive))))

# ::snt I'd really like to know why this was even on his mind
# ::tokens ["I", "'d", "really", "like", "to", "know", "why", "this", "was", "even", "on", "his", "mind"]
# ::lemmas ["i", "would", "really", "like", "to", "know", "why", "this", "be", "even", "on", "his", "mind"]
(c3-4 / like-02
      :ARG0 (c3-7 / i)
      :ARG1 (c3-5 / know-01
                  :ARG0 c3-7
                  :ARG1 (c3-8 / thing
                              :ARG0-of (c3-6 / cause-01
                                             :ARG1 (c3-0 / on-ones-mind-07
                                                         :ARG1 (c3-3 / he)
                                                         :ARG2 (c3-9 / this)
                                                         :mod (c3-2 / even)))))
      :degree (c3-1 / really))

# ::snt U
# ::tokens ["U"]
# ::lemmas ["u"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "U"))

# ::snt I always think of you when I hear about them. Bringin it backkkkkk...miss you lovie
# ::tokens ["I", "always", "think", "of", "you", "when", "I", "hear", "about", "them", ".", "Bringin", "it", "backkkkkk", "...", "miss", "you", "lovie"]
# ::lemmas ["i", "always", "think", "of", "you", "when", "i", "hear", "about", "they", ".", "bringin", "it", "backkkkkk", "...", "miss", "you", "lovie"]
(c5-2 / multi-sentence
      :snt1 (c5-12 / think-01
                   :ARG0 (c5-11 / i)
                   :ARG1 (c5-1 / you)
                   :time (c5-6 / hear-01
                               :ARG0 c5-11
                               :ARG1 (c5-13 / they))
                   :time (c5-5 / always))
      :snt2 (c5-0 / bring-01
                  :ARG1 (c5-4 / it)
                  :direction (c5-7 / back)
                  :mod (c5-8 / kkk
                             :mode expressive))
      :snt3 (c5-9 / miss-01
                  :ARG0 c5-11
                  :mode expressive)
      :ARG1 (c5-10 / person
                   :name (c5-3 / name
                               :op1 "Lovie")))

# ::snt my mom is invested that they dont work lmfao
# ::tokens ["my", "mom", "is", "invested", "that", "they", "do", "nt", "work", "lmfao"]
# ::lemmas ["my", "mom", "be", "invest", "that", "they", "do", "not", "work", "lmfao"]
(c6-7 / invest-01
      :ARG1 (c6-4 / person
                  :ARG0-of (c6-3 / have-rel-role-91
                                 :ARG1 (c6-2 / i)
                                 :ARG2 (c6-0 / mom)))
      :ARG2 (c6-5 / work-01
                  :ARG0 c6-4
                  :polarity -)
      :mod (c6-6 / company
                 :name (c6-1 / name
                             :op1 "Lmfao")))

# ::snt How your Grandpa and Brother2 are same person
# ::tokens ["How", "your", "Grandpa", "and", "Brother2", "are", "same", "person"]
# ::lemmas ["how", "your", "Grandpa", "and", "Brother2", "be", "same", "person"]
(c8-3 / same-01
      :ARG1 (c8-5 / person
                  :ARG0-of (c8-4 / have-rel-role-91
                                 :ARG1 (c8-1 / you)
                                 :ARG2 (c8-8 / grandpa)))
      :ARG2 (c8-2 / person
                  :ARG0-of (c8-6 / have-rel-role-91
                                 :ARG1 c8-1
                                 :ARG2 (c8-0 / brother)))
      :manner (c8-7 / amr-unknown))

# ::snt Yass that is the perfect family
# ::tokens ["Yass", "that", "is", "the", "perfect", "family"]
# ::lemmas ["yas", "that", "be", "the", "perfect", "family"]
(c9-0 / family
      :ARG1-of (c9-2 / perfect-02)
      :domain (c9-3 / that)
      :mod (c9-1 / yass
                 :mode expressive))
