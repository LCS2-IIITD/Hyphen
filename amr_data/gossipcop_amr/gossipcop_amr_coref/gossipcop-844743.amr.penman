# ::snt No.
# ::tokens ["No", "."]
# ::lemmas ["no", "."]
(c1-0 / no)

# ::snt Noooooooooooooooooo!!!!!
# ::tokens ["Noooooooooooooooooo", "!", "!", "!", "!", "!"]
# ::lemmas ["Noooooooooooooooooo", "!", "!", "!", "!", "!"]
(c2-0 / no
      :mode expressive)

# ::snt Sorry but nope. Robin Williams is Aladdin
# ::tokens ["Sorry", "but", "nope", ".", "Robin", "Williams", "is", "Aladdin"]
# ::lemmas ["sorry", "but", "nope", ".", "Robin", "Williams", "be", "Aladdin"]
(c3-1 / multi-sentence
      :snt1 (c3-2 / sorry-01
                  :concession-of (c3-0 / nope))
      :snt2 (c3-5 / person
                  :name (c3-4 / name
                              :op1 "Robin"
                              :op2 "Williams")
                  :domain (c3-3 / person
                                :name (c3-6 / name
                                            :op1 "Aladdin"))))

# ::snt He'll have big shoes to fill
# ::tokens ["He", "'ll", "have", "big", "shoes", "to", "fill"]
# ::lemmas ["he", "'ll", "have", "big", "shoe", "to", "fill"]
(c4-3 / have-03
      :ARG0 (c4-4 / he)
      :ARG1 (c4-2 / shoe
                  :mod (c4-1 / big)
                  :ARG1-of (c4-0 / fill-01
                                 :ARG0 c4-4)))

# ::snt In love with this idea!
# ::tokens ["In", "love", "with", "this", "idea", "!"]
# ::lemmas ["in", "love", "with", "this", "idea", "!"]
(c5-1 / love-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-0 / idea
                  :mod (c5-3 / this)))

# ::snt The Genie can never b replaced that was a one of a kind of roll for an talented actor
# ::tokens ["The", "Genie", "can", "never", "b", "replaced", "that", "was", "a", "one", "of", "a", "kind", "of", "roll", "for", "an", "talented", "actor"]
# ::lemmas ["the", "Genie", "can", "never", "b", "replace", "that", "be", "a", "one", "of", "a", "kind", "of", "roll", "for", "an", "talented", "actor"]
(c6-5 / possible-01
      :ARG1 (c6-2 / replace-01
                  :ARG0 (c6-1 / person
                              :name (c6-0 / name
                                          :op1 "The"
                                          :op2 "Genie"))
                  :ARG1 (c6-10 / person
                               :mod (c6-8 / that)
                               :ARG1-of (c6-9 / include-91
                                              :ARG2 (c6-11 / roll
                                                           :mod (c6-6 / kind)
                                                           :beneficiary (c6-7 / person
                                                                              :ARG0-of (c6-3 / act-01)
                                                                              :mod (c6-12 / talent)))))
                  :time (c6-4 / ever))
      :polarity -)

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c7-1 / laugh-01
      :manner (c7-0 / loud)
      :mode expressive)

# ::snt At this point I feel like I really could live more years and not need to see Will Smith in another movie.
# ::tokens ["At", "this", "point", "I", "feel", "like", "I", "really", "could", "live", "more", "years", "and", "not", "need", "to", "see", "Will", "Smith", "in", "another", "movie", "."]
# ::lemmas ["at", "this", "point", "i", "feel", "like", "i", "really", "could", "live", "more", "year", "and", "not", "need", "to", "see", "Will", "Smith", "in", "another", "movie", "."]
(c8-0 / feel-06
      :ARG0 (c8-12 / i)
      :ARG1 (c8-9 / possible-01
                  :ARG1 (c8-13 / and
                               :op1 (c8-8 / live-01
                                          :ARG0 c8-12
                                          :duration (c8-2 / multiple
                                                          :op1 (c8-11 / temporal-quantity
                                                                      :unit (c8-1 / year)
                                                                      :quant 1))
                                          :ARG1-of (c8-6 / real-04))
                               :op2 (c8-3 / need-01
                                          :ARG0 c8-12
                                          :ARG1 (c8-4 / see-01
                                                      :ARG0 c8-12
                                                      :ARG1 (c8-5 / person
                                                                  :name (c8-7 / name
                                                                              :op1 "Will"
                                                                              :op2 "Smith"))
                                                      :location (c8-10 / movie
                                                                       :mod (c8-14 / another)))
                                          :polarity -)))
      :time (c8-15 / point
                   :mod (c8-16 / this)))

# ::snt If there is anyone that could portray a legend it would be another legend that brings so much joy, laughter and inspiration to the world!
# ::tokens ["If", "there", "is", "anyone", "that", "could", "portray", "a", "legend", "it", "would", "be", "another", "legend", "that", "brings", "so", "much", "joy", ",", "laughter", "and", "inspiration", "to", "the", "world", "!"]
# ::lemmas ["if", "there", "be", "anyone", "that", "could", "portray", "a", "legend", "it", "would", "be", "another", "legend", "that", "bring", "so", "much", "joy", ",", "laughter", "and", "inspiration", "to", "the", "world", "!"]
(c9-4 / have-condition-91
      :ARG1 (c9-0 / bring-01
                  :ARG0 (c9-5 / legend
                              :mod (c9-13 / another))
                  :ARG1 (c9-12 / and
                               :op1 (c9-11 / joy)
                               :op2 (c9-15 / laugh-01)
                               :op3 (c9-14 / inspire-01)
                               :ARG1-of (c9-10 / have-quant-91
                                               :ARG2 (c9-1 / much)
                                               :ARG3 (c9-3 / so)))
                  :ARG2 (c9-8 / world))
      :ARG2 (c9-9 / anyone
                  :ARG0-of (c9-6 / portray-01
                                 :ARG1 (c9-7 / legend)
                                 :ARG1-of (c9-2 / possible-01))))

# ::snt There's Only one genie I'm sorry
# ::tokens ["There", "'s", "Only", "one", "genie", "I", "'m", "sorry"]
# ::lemmas ["there", "be", "Only", "one", "genie", "i", "be", "sorry"]
(c10-3 / sorry-01
       :ARG1 (c10-2 / i)
       :ARG2 (c10-0 / genie
                    :mod (c10-1 / only)
                    :quant 1))

# ::snt Genie will always be robin Williams. Soz will
# ::tokens ["Genie", "will", "always", "be", "robin", "Williams", ".", "Soz", "will"]
# ::lemmas ["Genie", "will", "always", "be", "robin", "Williams", ".", "Soz", "will"]
(c11-2 / multi-sentence
       :snt1 (c11-3 / rob-01
                    :ARG0 (c11-5 / person
                                 :name (c11-0 / name
                                              :op1 "Genie"))
                    :ARG1 (c11-1 / person
                                 :name (c11-4 / name
                                              :op1 "Williams"))
                    :time (c11-7 / always))
       :snt2 (c11-8 / rob-01
                    :ARG0 (c11-9 / person
                                 :name (c11-6 / name
                                              :op1 "Soz"))))

# ::snt Hmmm.... last person I'd imagine they would cast... would be a better casting surely?
# ::tokens ["Hmmm", "....", "last", "person", "I", "'d", "imagine", "they", "would", "cast", "...", "would", "be", "a", "better", "casting", "surely", "?"]
# ::lemmas ["Hmmm", "....", "last", "person", "i", "would", "imagine", "they", "would", "cast", "...", "would", "be", "a", "well", "casting", "surely", "?"]
(c12-0 / multi-sentence
       :snt1 (c12-10 / imagine-01
                     :ARG0 (c12-2 / i)
                     :ARG1 (c12-8 / cast-02
                                  :ARG0 (c12-11 / they)
                                  :ARG1 (c12-5 / person
                                               :mod (c12-6 / last)))
                     :mod (c12-4 / hmm
                                 :mode expressive))
       :snt2 (c12-13 / cast-02
                     :ARG1-of (c12-1 / sure-02
                                     :polarity (c12-3 / amr-unknown))
                     :ARG1-of (c12-9 / have-degree-91
                                     :ARG2 (c12-12 / good-02
                                                   :ARG1 c12-13)
                                     :ARG3 (c12-7 / more))))

# ::snt I hope he can bring the same energy RW had
# ::tokens ["I", "hope", "he", "can", "bring", "the", "same", "energy", "RW", "had"]
# ::lemmas ["i", "hope", "he", "can", "bring", "the", "same", "energy", "RW", "have"]
(c13-5 / hope-01
       :ARG0 (c13-9 / i)
       :ARG1 (c13-6 / possible-01
                    :ARG1 (c13-0 / bring-01
                                 :ARG0 (c13-8 / he)
                                 :ARG1 (c13-4 / energy
                                              :ARG1-of (c13-2 / same-01
                                                              :ARG2 (c13-10 / energy
                                                                            :ARG1-of (c13-7 / have-03
                                                                                            :ARG0 (c13-1 / person
                                                                                                         :ARG1-of (c13-3 / right-08)))))))))

# ::snt Noooo. I like Will but no!
# ::tokens ["Noooo", ".", "I", "like", "Will", "but", "no", "!"]
# ::lemmas ["Noooo", ".", "i", "like", "Will", "but", "no", "!"]
(c14-1 / multi-sentence
       :snt1 (c14-0 / no)
       :snt2 (c14-6 / contrast-01
                    :ARG1 (c14-3 / like-01
                                 :ARG0 (c14-7 / i)
                                 :ARG1 (c14-4 / person
                                              :name (c14-2 / name
                                                           :op1 "Will")))
                    :ARG2 (c14-5 / no)))

# ::snt couldn't get robin williams? smh
# ::tokens ["could", "n't", "get", "robin", "williams", "?", "smh"]
# ::lemmas ["could", "not", "get", "robin", "williams", "?", "smh"]
(c15-3 / possible-01
       :ARG1 (c15-5 / get-01
                    :ARG1 (c15-1 / person
                                 :name (c15-0 / name
                                              :op1 " robin"
                                              :op2 "williams")))
       :polarity (c15-4 / amr-unknown)
       :mod (c15-2 / smh
                   :mode expressive)
       :polarity -)

# ::snt What? No ?
# ::tokens ["What", "?", "No", "?"]
# ::lemmas ["what", "?", "no", "?"]
(c16-0 / multi-sentence
       :snt1 (c16-2 / amr-unknown)
       :snt2 (c16-1 / amr-unknown
                    :polarity -))

# ::snt Um no.
# ::tokens ["Um", "no", "."]
# ::lemmas ["um", "no", "."]
(c17-0 / um
       :mode expressive
       :polarity -)

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c18-0 / yes)

# ::snt Great casting....I was wondering who would fill such big shoes
# ::tokens ["Great", "casting", "....", "I", "was", "wondering", "who", "would", "fill", "such", "big", "shoes"]
# ::lemmas ["great", "casting", "....", "i", "be", "wonder", "who", "would", "fill", "such", "big", "shoe"]
(c19-3 / multi-sentence
       :snt1 (c19-6 / cast-02
                    :mod (c19-9 / great))
       :snt2 (c19-7 / wonder-01
                    :ARG0 (c19-8 / i)
                    :ARG1 (c19-5 / person
                                 :ARG0-of (c19-0 / fill-01
                                                 :ARG1 (c19-4 / shoe
                                                              :mod (c19-2 / big
                                                                          :degree (c19-1 / such)))))))

# ::snt NO!!!!!!!
# ::tokens ["NO", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["no", "!", "!", "!", "!", "!", "!", "!"]
(c20-0 / no
       :mode expressive)

# ::snt NO NO NO WTF You need to get Gabriel Iglesias
# ::tokens ["NO", "NO", "NO", "WTF", "You", "need", "to", "get", "Gabriel", "Iglesias"]
# ::lemmas ["no", "no", "no", "WTF", "you", "need", "to", "get", "Gabriel", "Iglesias"]
(c21-2 / need-01
       :ARG0 (c21-1 / you)
       :ARG1 (c21-5 / get-01
                    :ARG0 c21-1
                    :ARG1 (c21-4 / person
                                 :name (c21-3 / name
                                              :op1 "Gabriel"
                                              :op2 "Iglesias")))
       :mod (c21-0 / fuck
                   :mode expressive))

# ::snt Noone will ever be able to replace Robin Williams as Genie for me...
# ::tokens ["Noone", "will", "ever", "be", "able", "to", "replace", "Robin", "Williams", "as", "Genie", "for", "me", "..."]
# ::lemmas ["noone", "will", "ever", "be", "able", "to", "replace", "Robin", "Williams", "as", "Genie", "for", "i", "..."]
(c22-5 / possible-01
       :ARG1 (c22-2 / replace-01
                    :ARG0 (c22-0 / no-one)
                    :ARG1 (c22-1 / person
                                 :name (c22-4 / name
                                              :op1 "Robin"
                                              :op2 "Williams"))
                    :ARG2 (c22-8 / person
                                 :name (c22-6 / name
                                              :op1 "Genie"))
                    :beneficiary (c22-7 / i))
       :time (c22-3 / ever))

# ::snt The best choice to play genie is . He is our generation's Robin Williams
# ::tokens ["The", "best", "choice", "to", "play", "genie", "is", ".", "He", "is", "our", "generation", "'s", "Robin", "Williams"]
# ::lemmas ["the", "good", "choice", "to", "play", "genie", "be", ".", "he", "be", "our", "generation", "'s", "Robin", "Williams"]
(c23-0 / multi-sentence
       :snt1 (c23-3 / have-degree-91
                    :ARG1 (c23-6 / choose-01
                                 :ARG1 (c23-4 / play-02
                                              :ARG1 (c23-10 / genie)))
                    :ARG2 (c23-9 / good-02)
                    :ARG3 (c23-5 / most))
       :snt2 (c23-1 / person
                    :name (c23-2 / name
                                 :op1 "Robin"
                                 :op2 "Williams")
                    :poss (c23-11 / generation
                                  :poss (c23-7 / we))
                    :domain (c23-8 / he)))

# ::snt I approve!!! I approve!!! Hate me if you want world, ldc
# ::tokens ["I", "approve", "!", "!", "!", "I", "approve", "!", "!", "!", "Hate", "me", "if", "you", "want", "world", ",", "ldc"]
# ::lemmas ["i", "approve", "!", "!", "!", "i", "approve", "!", "!", "!", "hate", "i", "if", "you", "want", "world", ",", "ldc"]
(c25-0 / multi-sentence
       :snt1 (c25-3 / approve-01
                    :ARG0 (c25-9 / i)
                    :mode expressive)
       :snt2 (c25-8 / approve-01
                    :ARG0 (c25-2 / i))
       :snt3 (c25-4 / hate-01
                    :ARG0 (c25-5 / person
                                 :name (c25-1 / name
                                              :op1 "ldc"))
                    :ARG1 c25-2
                    :condition (c25-7 / want-01
                                      :ARG0 (c25-6 / world)
                                      :ARG1 c25-4
                                      :ARG0 c25-5
                                      :ARG1 c25-2)
                    :mode expressive))

# ::snt No Robin Williams, No Aladdin remake!
# ::tokens ["No", "Robin", "Williams", ",", "No", "Aladdin", "remake", "!"]
# ::lemmas ["no", "Robin", "Williams", ",", "no", "Aladdin", "remake", "!"]
(c26-1 / multi-sentence
       :snt1 (c26-4 / person
                    :name (c26-0 / name
                                 :op1 "Robin"
                                 :op2 "Williams")
                    :polarity -)
       :snt2 (c26-2 / remaster-01
                    :ARG1 (c26-5 / work-of-art
                                 :name (c26-3 / name
                                              :op1 "Aladdin"))
                    :polarity -))

# ::snt Yaaaaassssss! I can dig it!!!!!
# ::tokens ["Yaaaaassssss", "!", "I", "can", "dig", "it", "!", "!", "!", "!", "!"]
# ::lemmas ["Yaaaaassssss", "!", "i", "can", "dig", "it", "!", "!", "!", "!", "!"]
(c28-2 / possible-01
       :ARG1 (c28-4 / dig-01
                    :ARG0 (c28-3 / i)
                    :ARG1 (c28-1 / it))
       :mod (c28-0 / yaaaaassssss
                   :mode expressive))

# ::snt Cool! That's awesome
# ::tokens ["Cool", "!", "That", "'s", "awesome"]
# ::lemmas ["cool", "!", "that", "be", "awesome"]
(c29-2 / multi-sentence
       :snt1 (c29-0 / cool-04
                    :mode expressive)
       :snt2 (c29-3 / awe-01
                    :ARG0 (c29-1 / that)))

# ::snt now you can legitimately talk about him
# ::tokens ["now", "you", "can", "legitimately", "talk", "about", "him"]
# ::lemmas ["now", "you", "can", "legitimately", "talk", "about", "he"]
(c30-4 / possible-01
       :ARG1 (c30-5 / talk-01
                    :ARG0 (c30-0 / you)
                    :ARG1 (c30-2 / he)
                    :ARG1-of (c30-3 / legitimate-02))
       :time (c30-1 / now))

# ::snt Nope. He's not funny at all.
# ::tokens ["Nope", ".", "He", "'s", "not", "funny", "at", "all", "."]
# ::lemmas ["nope", ".", "he", "be", "not", "funny", "at", "all", "."]
(c31-2 / multi-sentence
       :snt1 (c31-1 / nope)
       :snt2 (c31-0 / funny
                    :domain (c31-3 / he)
                    :degree (c31-4 / at-all)
                    :polarity -))

# ::snt awwwwww..... how i missed Robin Williams....
# ::tokens ["awwwwww", ".....", "how", "i", "missed", "Robin", "Williams", "...."]
# ::lemmas ["awwwwww", ".....", "how", "i", "miss", "Robin", "Williams", "...."]
(c32-1 / miss-01
       :ARG0 (c32-4 / i)
       :ARG1 (c32-3 / person
                    :name (c32-0 / name
                                 :op1 "Robin"
                                 :op2 "Williams"))
       :degree (c32-2 / so)
       :mod (c32-5 / aw
                   :mode expressive))
