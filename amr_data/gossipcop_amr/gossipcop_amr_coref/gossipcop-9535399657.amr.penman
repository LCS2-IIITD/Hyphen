# ::snt thats nice but why dont he pay for it? he has more money than us
# ::tokens ["that", "s", "nice", "but", "why", "do", "nt", "he", "pay", "for", "it", "?", "he", "has", "more", "money", "than", "us"]
# ::lemmas ["that", "s", "nice", "but", "why", "do", "not", "he", "pay", "for", "it", "?", "he", "have", "more", "money", "than", "we"]
(c1-1 / multi-sentence
      :snt1 (c1-9 / contrast-01
                  :ARG1 (c1-0 / nice-01
                              :ARG1 (c1-13 / that))
                  :ARG2 (c1-16 / cause-01
                               :ARG0 (c1-2 / amr-unknown)
                               :ARG1 (c1-5 / pay-01
                                           :ARG0 (c1-4 / he)
                                           :ARG3 (c1-12 / it)
                                           :polarity -)))
      :snt2 (c1-11 / have-quant-91
                   :ARG1 (c1-6 / money
                               :ARG1-of (c1-3 / have-03
                                              :ARG0 (c1-14 / he)))
                   :ARG3 (c1-15 / more)
                   :ARG4 (c1-7 / money
                               :ARG1-of (c1-8 / have-03
                                              :ARG0 (c1-10 / we)))))

# ::snt Yes babessssss.
# ::tokens ["Yes", "babessssss", "."]
# ::lemmas ["yes", "babessssss", "."]
(c2-0 / babessssss
      :mode expressive)

# ::snt True innit
# ::tokens ["True", "innit"]
# ::lemmas ["true", "innit"]
(c3-1 / true-01
      :ARG1 (c3-0 / innit))

# ::snt Your bio just made me laugh too
# ::tokens ["Your", "bio", "just", "made", "me", "laugh", "too"]
# ::lemmas ["your", "bio", "just", "make", "i", "laugh", "too"]
(c4-2 / make-02
      :ARG0 (c4-0 / bio
                  :poss (c4-1 / you))
      :ARG1 (c4-3 / laugh-01
                  :ARG0 (c4-5 / i))
      :mod (c4-6 / too)
      :time (c4-4 / just))

# ::snt u know
# ::tokens ["u", "know"]
# ::lemmas ["u", "know"]
(c5-1 / know-01
      :ARG0 (c5-0 / you))

# ::snt Bride
# ::tokens ["Bride"]
# ::lemmas ["Bride"]
(c6-1 / person
      :name (c6-0 / name
                  :op1 "Bride"))

# ::snt True but which way
# ::tokens ["True", "but", "which", "way"]
# ::lemmas ["true", "but", "which", "way"]
(c7-1 / contrast-01
      :ARG1 (c7-3 / true-01)
      :ARG2 (c7-2 / way
                  :mod (c7-0 / which)))

# ::snt Sure true Chris thnx for ur support
# ::tokens ["Sure", "true", "Chris", "thnx", "for", "ur", "support"]
# ::lemmas ["sure", "true", "Chris", "thnx", "for", "ur", "support"]
(c8-2 / say-01
      :ARG0 (c8-5 / i)
      :ARG1 (c8-6 / true-01
                  :ARG1 (c8-3 / person
                              :name (c8-1 / name
                                          :op1 "Chris"))
                  :ARG1-of (c8-0 / sure-02)
                  :ARG1-of (c8-4 / cause-01
                                 :ARG0 (c8-7 / support-01
                                             :ARG0 c8-5
                                             :ARG1 c8-3)))
      :ARG2 c8-3)

# ::snt Like it man
# ::tokens ["Like", "it", "man"]
# ::lemmas ["like", "it", "man"]
(c9-1 / say-01
      :ARG0 (c9-4 / i)
      :ARG1 (c9-3 / resemble-01
                  :ARG1 (c9-2 / it))
      :ARG2 (c9-0 / man))

# ::snt Very nice girl
# ::tokens ["Very", "nice", "girl"]
# ::lemmas ["very", "nice", "girl"]
(c10-3 / say-01
       :ARG1 (c10-2 / nice-01
                    :degree (c10-1 / very))
       :ARG2 (c10-0 / girl))

# ::snt Yesss she's beautiful
# ::tokens ["Yesss", "she", "'s", "beautiful"]
# ::lemmas ["yesss", "she", "be", "beautiful"]
(c11-0 / beautiful-02
       :ARG1 (c11-1 / she))

# ::snt have stg4 cancer and a yr old girl w/autism. I'd love to be able to pay Dr bills and take her to see an ocean
# ::tokens ["have", "stg4", "cancer", "and", "a", "yr", "old", "girl", "w", "/", "autism", ".", "I", "'d", "love", "to", "be", "able", "to", "pay", "Dr", "bills", "and", "take", "her", "to", "see", "an", "ocean"]
# ::lemmas ["have", "stg4", "cancer", "and", "a", "yr", "old", "girl", "w", "/", "autism", ".", "i", "would", "love", "to", "be", "able", "to", "pay", "Dr", "bill", "and", "take", "she", "to", "see", "an", "ocean"]
(c12-10 / multi-sentence
        :snt1 (c12-4 / have-03
                     :ARG1 (c12-7 / and
                                  :op1 (c12-19 / disease
                                               :name (c12-16 / name
                                                             :op1 "cancer"))
                                  :op2 (c12-8 / girl
                                              :age (c12-6 / temporal-quantity
                                                          :unit (c12-3 / year)
                                                          :quant 1)
                                              :ARG0-of c12-4
                                              :ARG1 (c12-14 / disease
                                                            :name (c12-12 / name
                                                                          :op1 "autism")))))
        :snt2 (c12-1 / love-02
                     :ARG0 (c12-18 / i)
                     :ARG1 (c12-17 / possible-01
                                   :ARG1 (c12-5 / and
                                                :op1 (c12-11 / pay-01
                                                             :ARG0 c12-18
                                                             :ARG1 (c12-9 / bill-01
                                                                          :ARG3 (c12-13 / doctor)))
                                                :op2 (c12-15 / take-01
                                                             :ARG0 c12-18
                                                             :ARG1 c12-8
                                                             :ARG3 (c12-0 / see-01
                                                                          :ARG0 c12-8
                                                                          :ARG1 (c12-2 / ocean)))))))

# ::snt Love with a passion
# ::tokens ["Love", "with", "a", "passion"]
# ::lemmas ["Love", "with", "a", "passion"]
(c13-2 / love-01
       :ARG0-of (c13-1 / have-03
                       :ARG1 (c13-0 / passion)))

# ::snt i want to help but im from south i still help. if so how can i?
# ::tokens ["i", "want", "to", "help", "but", "i", "m", "from", "south", "i", "still", "help", ".", "if", "so", "how", "can", "i", "?"]
# ::lemmas ["i", "want", "to", "help", "but", "i", "m", "from", "south", "i", "still", "help", ".", "if", "so", "how", "can", "i", "?"]
(c14-1 / multi-sentence
       :snt1 (c14-5 / contrast-01
                    :ARG1 (c14-6 / want-01
                                 :ARG0 (c14-8 / i)
                                 :ARG1 (c14-3 / help-01
                                              :ARG0 c14-8))
                    :ARG2 (c14-7 / help-01
                                 :ARG0 c14-8
                                 :mod (c14-2 / still)
                                 :source (c14-0 / south)))
       :snt2 (c14-4 / possible-01
                    :ARG1 (c14-9 / amr-unknown)
                    :condition (c14-10 / so)))

# ::snt Beautiful smile chiquita
# ::tokens ["Beautiful", "smile", "chiquita"]
# ::lemmas ["beautiful", "smile", "chiquita"]
(c15-3 / say-01
       :ARG1 (c15-0 / smile-01
                    :ARG1-of (c15-1 / beautiful-02))
       :ARG2 (c15-4 / person
                    :name (c15-2 / name
                                 :op1 "Chiquita")))

# ::snt Latinas always on the grind right baby brown
# ::tokens ["Latinas", "always", "on", "the", "grind", "right", "baby", "brown"]
# ::lemmas ["Latinas", "always", "on", "the", "grind", "right", "baby", "brown"]
(c16-3 / say-01
       :ARG1 (c16-0 / be-located-at-91
                    :ARG1 (c16-6 / person
                                 :mod (c16-7 / country
                                             :name (c16-1 / name
                                                          :op1 "Latinas"))
                                 :ARG1-of (c16-4 / right-06))
                    :ARG2 (c16-9 / grind)
                    :time (c16-8 / always))
       :ARG2 (c16-2 / person
                    :name c16-1
                    :op1 "Brown")
       :mod (c16-5 / baby))

# ::snt Let's help Keon get his new hips or Mobility Scooter: Tzora Titan Mobility Scooters
# ::tokens ["Let", "'s", "help", "Keon", "get", "his", "new", "hips", "or", "Mobility", "Scooter", ":", "Tzora", "Titan", "Mobility", "Scooters"]
# ::lemmas ["let", "us", "help", "Keon", "get", "his", "new", "hip", "or", "Mobility", "Scooter", ":", "Tzora", "Titan", "Mobility", "Scooters"]
(c17-4 / let-01
       :ARG0 (c17-8 / we)
       :ARG1 (c17-3 / help-01
                    :ARG0 c17-8
                    :ARG1 (c17-12 / get-01
                                  :ARG0 (c17-5 / person
                                               :name (c17-1 / name
                                                            :op1 "Keon")
                                               :part (c17-11 / hip
                                                             :ARG1-of (c17-6 / new-01)))
                                  :ARG1 (c17-0 / or
                                               :op1 c17-11
                                               :op2 (c17-2 / scooter
                                                           :name (c17-7 / name
                                                                        :op1 "Mobility"
                                                                        :op2 "Scooter")
                                                           :mod (c17-9 / company
                                                                       :name (c17-10 / name
                                                                                     :op1 "Tzora"
                                                                                     :op2 "Titan"
                                                                                     :op3 "Motor"
                                                                                     :op4 "Scooter")))))
                    :ARG2 c17-5)
       :mode imperative)

# ::snt Breezy
# ::tokens ["Breezy"]
# ::lemmas ["Breezy"]
(c18-1 / person
       :name (c18-0 / name
                    :op1 "Breezy"))

# ::snt Thank you sweetie
# ::tokens ["Thank", "you", "sweetie"]
# ::lemmas ["thank", "you", "sweetie"]
(c19-3 / say-01
       :ARG1 (c19-1 / thank-01
                    :ARG0 (c19-2 / i)
                    :ARG1 (c19-0 / sweetie
                                 :ARG2-of c19-3)))

# ::snt I love She
# ::tokens ["I", "love", "She"]
# ::lemmas ["i", "love", "she"]
(c20-0 / love-01
       :ARG0 (c20-1 / i)
       :ARG1 (c20-2 / she))

# ::snt WOW Chris Brown is acually doing something dat wll beneft dat person either then himslf
# ::tokens ["WOW", "Chris", "Brown", "is", "acually", "doing", "something", "dat", "wll", "beneft", "dat", "person", "either", "then", "himslf"]
# ::lemmas ["WOW", "Chris", "Brown", "be", "acually", "do", "something", "dat", "wll", "beneft", "dat", "person", "either", "then", "himslf"]
(c21-8 / do-02
       :ARG0 (c21-5 / person
                    :name (c21-1 / name
                                 :op1 "Chris"
                                 :op2 "Brown"))
       :ARG1 (c21-3 / something
                    :ARG0-of (c21-0 / beneft-01
                                    :ARG1 (c21-2 / person
                                                 :mod (c21-4 / either))
                                    :ARG2 c21-5))
       :manner (c21-7 / accurate)
       :mod (c21-6 / wow
                   :mode expressive))

# ::snt Nice
# ::tokens ["Nice"]
# ::lemmas ["nice"]
(c22-0 / nice-01)

# ::snt Nice child
# ::tokens ["Nice", "child"]
# ::lemmas ["nice", "child"]
(c23-0 / child
       :ARG1-of (c23-1 / nice-01))

# ::snt Bitch wtf. Abuse of any kind can effect someone for the rest of their life. He doesn't deserve to be forgiven for abusing someone.
# ::tokens ["Bitch", "wtf", ".", "Abuse", "of", "any", "kind", "can", "effect", "someone", "for", "the", "rest", "of", "their", "life", ".", "He", "does", "n't", "deserve", "to", "be", "forgiven", "for", "abusing", "someone", "."]
# ::lemmas ["bitch", "wtf", ".", "abuse", "of", "any", "kind", "can", "effect", "someone", "for", "the", "rest", "of", "their", "life", ".", "he", "do", "not", "deserve", "to", "be", "forgive", "for", "abuse", "someone", "."]
(c24-2 / multi-sentence
       :snt1 (c24-14 / amr-unknown
                     :mod (c24-0 / fuck
                                 :mode expressive))
       :snt2 (c24-7 / possible-01
                    :ARG1 (c24-13 / affect-01
                                  :ARG0 (c24-12 / abuse-01
                                                :mod (c24-8 / kind
                                                            :mod (c24-15 / any)))
                                  :ARG1 (c24-3 / someone)
                                  :duration (c24-4 / rest
                                                   :part-of (c24-9 / live-01
                                                                   :ARG0 c24-3))))
       :snt3 (c24-5 / deserve-01
                    :ARG0 (c24-6 / he)
                    :ARG1 (c24-10 / forgive-01
                                  :ARG1 c24-6
                                  :ARG2 (c24-11 / abuse-01
                                                :ARG0 c24-6
                                                :ARG1 (c24-1 / someone)))
                    :polarity -))

# ::snt Indeed
# ::tokens ["Indeed"]
# ::lemmas ["indeed"]
(c25-0 / indeed)

# ::snt Awwwww man....sorry baby.............
# ::tokens ["Awwwww", "man", "....", "sorry", "baby", "............."]
# ::lemmas ["Awwwww", "man", "....", "sorry", "baby", "............."]
(c27-2 / say-01
       :ARG0 (c27-3 / i)
       :ARG1 (c27-0 / sorry-01)
       :ARG2 (c27-1 / baby)
       :mod (c27-4 / aw
                   :mode expressive))

# ::snt That's very much appreciated. Thank you
# ::tokens ["That", "'s", "very", "much", "appreciated", ".", "Thank", "you"]
# ::lemmas ["that", "be", "very", "much", "appreciate", ".", "thank", "you"]
(c29-1 / multi-sentence
       :snt1 (c29-2 / appreciate-02
                    :ARG1 (c29-6 / that)
                    :degree (c29-4 / much
                                   :degree (c29-3 / very)))
       :snt2 (c29-7 / thank-01
                    :ARG0 (c29-5 / i)
                    :ARG1 (c29-0 / you)))

# ::snt Definitely. Many blessings, love and hope. You'll get there.
# ::tokens ["Definitely", ".", "Many", "blessings", ",", "love", "and", "hope", ".", "You", "'ll", "get", "there", "."]
# ::lemmas ["definitely", ".", "many", "blessing", ",", "love", "and", "hope", ".", "you", "'ll", "get", "there", "."]
(c30-2 / multi-sentence
       :snt1 (c30-10 / definite)
       :snt2 (c30-8 / and
                    :op1 (c30-0 / bless-01
                                :quant (c30-3 / many))
                    :op2 (c30-4 / love-01
                                :quant (c30-11 / many))
                    :op3 (c30-5 / hopeful-03
                                :quant (c30-6 / many)))
       :snt3 (c30-9 / get-05
                    :ARG1 (c30-1 / you)
                    :ARG2 (c30-7 / there)))

# ::snt It makes people question others and it's so wrong. Just praying this little man raises the money he needs now and people don't try to profit
# ::tokens ["It", "makes", "people", "question", "others", "and", "it", "'s", "so", "wrong", ".", "Just", "praying", "this", "little", "man", "raises", "the", "money", "he", "needs", "now", "and", "people", "do", "n't", "try", "to", "profit"]
# ::lemmas ["it", "make", "people", "question", "other", "and", "it", "be", "so", "wrong", ".", "just", "pray", "this", "little", "man", "raise", "the", "money", "he", "need", "now", "and", "people", "do", "not", "try", "to", "profit"]
(c31-13 / multi-sentence
        :snt1 (c31-9 / and
                     :op1 (c31-6 / make-02
                                 :ARG0 (c31-23 / it)
                                 :ARG1 (c31-8 / question-03
                                              :ARG0 (c31-21 / person)
                                              :ARG1 (c31-14 / person
                                                            :mod (c31-4 / other))))
                     :op2 (c31-22 / wrong-02
                                  :ARG1 (c31-5 / it)
                                  :degree (c31-0 / so)))
        :snt2 (c31-11 / and
                      :op1 (c31-3 / pray-01
                                  :ARG1 (c31-20 / raise-01
                                                :ARG0 (c31-18 / man
                                                              :mod (c31-1 / little)
                                                              :mod (c31-10 / this))
                                                :ARG1 (c31-16 / money
                                                              :ARG1-of (c31-19 / need-01
                                                                               :ARG0 c31-18
                                                                               :time (c31-15 / now))))
                                  :mod (c31-7 / just))
                      :op2 (c31-17 / try-01
                                   :ARG0 (c31-2 / person)
                                   :ARG1 (c31-12 / profit-01
                                                 :ARG0 c31-2)
                                   :polarity -)))

# ::snt That's very sweet. I do too
# ::tokens ["That", "'s", "very", "sweet", ".", "I", "do", "too"]
# ::lemmas ["that", "be", "very", "sweet", ".", "i", "do", "too"]
(c32-1 / multi-sentence
       :snt1 (c32-2 / sweet-03
                    :ARG1 (c32-5 / that)
                    :degree (c32-3 / very))
       :snt2 (c32-0 / sweet-03
                    :ARG1 (c32-4 / i)
                    :mod (c32-6 / too)))

# ::snt Oh, I'm so sorry. That's what I mean. I'm so glad to apologize to you. That hurts when someone really needs the help and people lie
# ::tokens ["Oh", ",", "I", "'m", "so", "sorry", ".", "That", "'s", "what", "I", "mean", ".", "I", "'m", "so", "glad", "to", "apologize", "to", "you", ".", "That", "hurts", "when", "someone", "really", "needs", "the", "help", "and", "people", "lie"]
# ::lemmas ["oh", ",", "i", "be", "so", "sorry", ".", "that", "be", "what", "i", "mean", ".", "i", "be", "so", "glad", "to", "apologize", "to", "you", ".", "that", "hurt", "when", "someone", "really", "need", "the", "help", "and", "people", "lie"]
(c33-13 / multi-sentence
        :snt1 (c33-0 / sorry-01
                     :ARG1 (c33-20 / i)
                     :degree (c33-3 / so))
        :snt2 (c33-6 / mean-02
                     :ARG0 (c33-5 / i)
                     :ARG2 (c33-10 / that))
        :snt3 (c33-11 / glad-02
                      :ARG0 (c33-9 / apologize-01
                                   :ARG0 c33-5
                                   :ARG2 (c33-4 / you))
                      :ARG1 (c33-12 / i)
                      :degree (c33-2 / so))
        :snt4 (c33-7 / hurt-01
                     :ARG0 (c33-14 / that)
                     :time (c33-8 / and
                                  :op1 (c33-15 / need-01
                                               :ARG0 (c33-16 / someone)
                                               :ARG1 (c33-19 / help-01
                                                             :ARG2 c33-16)
                                               :degree (c33-17 / really))
                                  :op2 (c33-1 / lie-08
                                              :ARG0 (c33-18 / person)))))

# ::snt I hope they raise all the money and many well wishes
# ::tokens ["I", "hope", "they", "raise", "all", "the", "money", "and", "many", "well", "wishes"]
# ::lemmas ["i", "hope", "they", "raise", "all", "the", "money", "and", "many", "well", "wish"]
(c34-2 / hope-01
       :ARG0 (c34-7 / i)
       :ARG1 (c34-1 / raise-02
                    :ARG0 (c34-6 / they)
                    :ARG1 (c34-8 / and
                                 :op1 (c34-0 / money
                                             :mod (c34-9 / all))
                                 :op2 (c34-5 / wish-01
                                             :quant (c34-3 / many)
                                             :mod (c34-4 / well)))))

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c35-0 / yes)

# ::snt Shouldnt have been looking in his phone lol
# ::tokens ["Should", "nt", "have", "been", "looking", "in", "his", "phone", "lol"]
# ::lemmas ["should", "not", "have", "be", "look", "in", "his", "phone", "lol"]
(c37-0 / recommend-01
       :ARG1 (c37-3 / look-01
                    :ARG0 (c37-5 / i)
                    :ARG1 (c37-2 / phone
                                 :poss (c37-1 / he))
                    :polarity -)
       :ARG2-of (c37-6 / laugh-01
                       :ARG0 c37-5
                       :manner (c37-4 / loud)
                       :mode expressive))

# ::snt Thats whats up chris
# ::tokens ["That", "s", "what", "s", "up", "chris"]
# ::lemmas ["that", "s", "what", "s", "up", "chris"]
(c38-1 / say-01
       :ARG0 (c38-3 / i)
       :ARG1 (c38-5 / up-03
                    :ARG1 (c38-4 / that))
       :ARG2 (c38-2 / person
                    :name (c38-0 / name
                                 :op1 "Chris")))

# ::snt You right and that's why he will always struggle because people won't allow him to be great. But the joke is on them becuz God got him.
# ::tokens ["You", "right", "and", "that", "'s", "why", "he", "will", "always", "struggle", "because", "people", "wo", "n't", "allow", "him", "to", "be", "great", ".", "But", "the", "joke", "is", "on", "them", "becuz", "God", "got", "him", "."]
# ::lemmas ["you", "right", "and", "that", "be", "why", "he", "will", "always", "struggle", "because", "people", "will", "not", "allow", "he", "to", "be", "great", ".", "but", "the", "joke", "be", "on", "they", "becuz", "God", "get", "he", "."]
(c39-11 / multi-sentence
        :snt1 (c39-17 / right-06
                      :ARG1 (c39-3 / you))
        :snt2 (c39-13 / cause-01
                      :ARG0 (c39-8 / that)
                      :ARG1 (c39-0 / struggle-02
                                   :ARG0 (c39-4 / he)
                                   :time (c39-7 / always)
                                   :ARG1-of (c39-10 / cause-01
                                                    :ARG0 (c39-6 / allow-01
                                                                 :ARG0 (c39-18 / person)
                                                                 :ARG1 (c39-9 / great
                                                                              :domain c39-4)
                                                                 :polarity -))))
        :snt3 (c39-1 / contrast-01
                     :ARG2 (c39-15 / cause-01
                                   :ARG0 (c39-2 / get-02
                                                :ARG0 (c39-12 / person
                                                              :name (c39-16 / name
                                                                            :op1 "God"))
                                                :ARG1 (c39-5 / joke-01
                                                             :ARG2 (c39-14 / they)
                                                             :ARG1-of c39-15)))))

# ::snt He probably did give to the family, but the awareness would set this baby up for awhile.
# ::tokens ["He", "probably", "did", "give", "to", "the", "family", ",", "but", "the", "awareness", "would", "set", "this", "baby", "up", "for", "awhile", "."]
# ::lemmas ["he", "probably", "do", "give", "to", "the", "family", ",", "but", "the", "awareness", "would", "set", "this", "baby", "up", "for", "awhile", "."]
(c40-7 / contrast-01
       :ARG1 (c40-9 / give-01
                    :ARG0 (c40-5 / he)
                    :ARG2 (c40-0 / family)
                    :mod (c40-6 / probable))
       :ARG2 (c40-2 / set-up-15
                    :ARG0 (c40-3 / realize-01)
                    :ARG1 (c40-1 / baby
                                 :mod (c40-8 / this))
                    :duration (c40-4 / awhile)))

# ::snt Please ignore the bullshit. People on here talking out their necks and don't know what you donated. Keep being great FAVE!
# ::tokens ["Please", "ignore", "the", "bullshit", ".", "People", "on", "here", "talking", "out", "their", "necks", "and", "do", "n't", "know", "what", "you", "donated", ".", "Keep", "being", "great", "FAVE", "!"]
# ::lemmas ["please", "ignore", "the", "bullshit", ".", "people", "on", "here", "talk", "out", "their", "neck", "and", "do", "not", "know", "what", "you", "donate", ".", "keep", "be", "great", "fave", "!"]
(c41-4 / multi-sentence
       :snt1 (c41-12 / ignore-01
                     :ARG0 (c41-3 / you)
                     :ARG1 (c41-2 / bullshit-01)
                     :mode imperative
                     :polite +)
       :snt2 (c41-13 / and
                     :op1 (c41-11 / talk-01
                                  :ARG0 (c41-8 / person
                                               :location (c41-7 / here)
                                               :part (c41-5 / neck
                                                            :manner-of c41-11)))
                     :op2 (c41-9 / know-01
                                 :ARG0 c41-8
                                 :ARG1 (c41-16 / thing
                                               :ARG1-of (c41-15 / donate-01
                                                                :ARG0 (c41-14 / you)))
                                 :polarity -))
       :snt3 (c41-10 / keep-02
                     :ARG0 (c41-0 / you)
                     :ARG1 (c41-1 / fight-01
                                  :ARG0 c41-0
                                  :mod (c41-6 / great))
                     :mode imperative))

# ::snt Yes I love you to teambreezy
# ::tokens ["Yes", "I", "love", "you", "to", "teambreezy"]
# ::lemmas ["yes", "i", "love", "you", "to", "teambreezy"]
(c42-1 / say-01
       :ARG0 (c42-4 / i)
       :ARG1 (c42-3 / love-01
                    :ARG0 c42-4
                    :ARG1 (c42-2 / person
                                 :name (c42-0 / name
                                              :op1 "Teambreezy")
                                 :ARG2-of c42-1)))

# ::snt Nice dear
# ::tokens ["Nice", "dear"]
# ::lemmas ["nice", "dear"]
(c43-0 / dear
       :ARG1-of (c43-1 / nice-01))

# ::snt That's like his whole life man.The look on his face is really all you'd ever need.
# ::tokens ["That", "'s", "like", "his", "whole", "life", "man", ".", "The", "look", "on", "his", "face", "is", "really", "all", "you", "'d", "ever", "need", "."]
# ::lemmas ["that", "be", "like", "his", "whole", "life", "man", ".", "the", "look", "on", "his", "face", "be", "you", "all", "you", "would", "ever", "need", "."]
(c44-2 / multi-sentence
       :snt1 (c44-4 / resemble-01
                    :ARG1 (c44-11 / that)
                    :ARG2 (c44-7 / man
                                 :mod (c44-8 / life
                                             :mod (c44-10 / whole))
                                 :poss (c44-9 / he
                                              :part (c44-0 / face))))
       :snt2 (c44-5 / all
                    :ARG1-of (c44-3 / need-01
                                    :ARG0 (c44-1 / you)
                                    :time (c44-6 / ever)
                                    :ARG1-of (c44-12 / real-04))
                    :domain (c44-13 / look-01
                                    :ARG0 c44-9
                                    :location c44-0)))

# ::snt I'll put a a prayer in, what else can i do
# ::tokens ["I", "'ll", "put", "a", "a", "prayer", "in", ",", "what", "else", "can", "i", "do"]
# ::lemmas ["i", "'ll", "put", "a", "a", "prayer", "in", ",", "what", "else", "can", "i", "do"]
(c45-0 / multi-sentence
       :snt1 (c45-5 / put-in-05
                    :ARG0 (c45-6 / i)
                    :ARG1 (c45-1 / pray-01
                                 :ARG0 c45-6))
       :snt2 (c45-7 / possible-01
                    :ARG1 (c45-8 / do-02
                                 :ARG0 (c45-2 / i)
                                 :ARG1 (c45-3 / amr-unknown
                                              :mod (c45-4 / else)))))

# ::snt It doesn't matter
# ::tokens ["It", "does", "n't", "matter"]
# ::lemmas ["it", "do", "not", "matter"]
(c46-0 / matter-01
       :ARG1 (c46-1 / it)
       :polarity -)

# ::snt We love you
# ::tokens ["We", "love", "you"]
# ::lemmas ["we", "love", "you"]
(c47-2 / love-01
       :ARG0 (c47-0 / we)
       :ARG1 (c47-1 / you))

# ::snt Big heart despite the bs
# ::tokens ["Big", "heart", "despite", "the", "bs"]
# ::lemmas ["big", "heart", "despite", "the", "bs"]
(c48-2 / have-concession-91
       :ARG1 (c48-0 / heart
                    :mod (c48-1 / big))
       :ARG2 (c48-3 / bullshit))

# ::snt Oh here's something positive why won't y'all post that for a change....
# ::tokens ["Oh", "here", "'s", "something", "positive", "why", "wo", "n't", "y'", "all", "post", "that", "for", "a", "change", "...."]
# ::lemmas ["oh", "here", "be", "something", "positive", "why", "will", "not", "you", "all", "post", "that", "for", "a", "change", "...."]
(c49-4 / post-01
       :ARG0 (c49-1 / you
                    :mod (c49-7 / all))
       :ARG1 (c49-3 / something
                    :mod (c49-2 / positive))
       :mod (c49-0 / oh
                   :mode expressive)
       :purpose (c49-5 / change-01)
       :ARG1-of (c49-8 / cause-01
                       :ARG0 (c49-6 / amr-unknown))
       :polarity -)

# ::snt people don't hate him for "no reason" lmao they hate him because there's proof he's been abusive towards women
# ::tokens ["people", "do", "n't", "hate", "him", "for", "\"", "no", "reason", "\"", "lmao", "they", "hate", "him", "because", "there", "'s", "proof", "he", "'s", "been", "abusive", "towards", "women"]
# ::lemmas ["people", "do", "not", "hate", "he", "for", "\"", "no", "reason", "\"", "lmao", "they", "hate", "he", "because", "there", "be", "proof", "he", "be", "be", "abusive", "towards", "woman"]
(c50-5 / contrast-01
       :ARG1 (c50-3 / hate-01
                    :ARG0 (c50-4 / person)
                    :ARG1 (c50-7 / he)
                    :ARG1-of (c50-10 / cause-01
                                     :ARG0 (c50-1 / reason
                                                  :polarity -))
                    :polarity -)
       :ARG2 (c50-8 / cause-01
                    :ARG0 (c50-0 / prove-01
                                 :ARG1 (c50-9 / abuse-01
                                              :ARG0 c50-7
                                              :ARG1 (c50-6 / woman)))
                    :ARG1 (c50-2 / hate-01
                                 :ARG0 c50-4
                                 :ARG1 c50-7)))
