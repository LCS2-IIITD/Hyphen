# ::snt I bought my ex a car for st bday. days later she never came home one night. I found the car I poured kitty litter down the throttle body, and into the oil fill. She was with my best friend.
# ::tokens ["I", "bought", "my", "ex", "a", "car", "for", "st", "bday", ".", "days", "later", "she", "never", "came", "home", "one", "night", ".", "I", "found", "the", "car", "I", "poured", "kitty", "litter", "down", "the", "throttle", "body", ",", "and", "into", "the", "oil", "fill", ".", "She", "was", "with", "my", "best", "friend", "."]
# ::lemmas ["i", "buy", "my", "ex", "a", "car", "for", "st", "bday", ".", "days", "later", "she", "never", "come", "home", "one", "night", ".", "i", "find", "the", "car", "i", "pour", "kitty", "litter", "down", "the", "throttle", "body", ",", "and", "into", "the", "oil", "fill", ".", "she", "be", "with", "my", "good", "friend", "."]
(c1-21 / multi-sentence
       :snt1 (c1-20 / buy-01
                    :ARG0 (c1-35 / i)
                    :ARG1 (c1-23 / car)
                    :ARG4 (c1-31 / person
                                 :ARG0-of (c1-10 / have-rel-role-91
                                                 :ARG1 c1-35
                                                 :ARG2 (c1-0 / significant-other)
                                                 :time (c1-30 / ex)))
                    :purpose (c1-36 / day))
       :snt2 (c1-18 / come-01
                    :ARG1 (c1-6 / she)
                    :ARG4 (c1-34 / home)
                    :time (c1-24 / date-entity
                                 :dayperiod (c1-29 / night)
                                 :mod (c1-7 / one))
                    :time (c1-16 / after
                                 :quant (c1-11 / multiple
                                               :op1 (c1-15 / temporal-quantity
                                                           :unit c1-36
                                                           :quant 1)))
                    :polarity -)
       :snt3 (c1-28 / find-01
                    :ARG0 (c1-8 / i)
                    :ARG1 (c1-3 / car
                                :ARG2-of (c1-22 / pour-01
                                                :ARG0 c1-8
                                                :ARG1 (c1-2 / litter
                                                            :mod (c1-12 / kitty))
                                                :ARG3 (c1-14 / and
                                                             :op1 (c1-1 / body
                                                                        :mod (c1-25 / throttle))
                                                             :op2 (c1-32 / fill-01
                                                                         :ARG2 (c1-19 / oil))))))
       :snt4 (c1-13 / accompany-01
                    :ARG0 (c1-5 / she)
                    :ARG1 (c1-4 / person
                                :ARG0-of (c1-9 / have-rel-role-91
                                               :ARG1 c1-8
                                               :ARG2 (c1-33 / friend
                                                            :ARG1-of (c1-26 / have-degree-91
                                                                            :ARG2 (c1-17 / good-02
                                                                                         :ARG1 c1-33)
                                                                            :ARG3 (c1-27 / most)))))))

# ::snt That would be illegal but maybe I've had others do it to someone else. My hands are clean y'all.
# ::tokens ["That", "would", "be", "illegal", "but", "maybe", "I", "'ve", "had", "others", "do", "it", "to", "someone", "else", ".", "My", "hands", "are", "clean", "y'", "all", "."]
# ::lemmas ["that", "would", "be", "illegal", "but", "maybe", "i", "'ve", "have", "other", "do", "it", "to", "someone", "else", ".", "my", "hand", "be", "clean", "you", "all", "."]
(c2-2 / multi-sentence
      :snt1 (c2-10 / legal-02
                   :ARG1 (c2-14 / that)
                   :concession-of (c2-9 / possible-01
                                        :ARG1 (c2-8 / have-04
                                                    :ARG0 (c2-13 / i)
                                                    :ARG1 (c2-15 / do-02
                                                                 :ARG0 (c2-3 / person
                                                                             :mod (c2-0 / other))
                                                                 :ARG1 (c2-5 / it)
                                                                 :ARG2 (c2-4 / someone
                                                                             :mod (c2-7 / else)))))
                   :polarity -)
      :snt2 (c2-11 / clean-04
                   :ARG1 (c2-12 / hand
                                :part-of (c2-16 / i))
                   :beneficiary (c2-1 / you
                                      :mod (c2-6 / all))))

# ::snt I keyed a car once he stepped out on me and I snapped matured now and we are together
# ::tokens ["I", "keyed", "a", "car", "once", "he", "stepped", "out", "on", "me", "and", "I", "snapped", "matured", "now", "and", "we", "are", "together"]
# ::lemmas ["i", "key", "a", "car", "once", "he", "step", "out", "on", "i", "and", "i", "snap", "mature", "now", "and", "we", "be", "together"]
(c3-10 / and
       :op1 (c3-5 / key-01
                  :ARG0 (c3-9 / i)
                  :ARG1 (c3-6 / car)
                  :time (c3-3 / step-01
                              :ARG0 (c3-4 / he)
                              :ARG1 c3-9
                              :direction (c3-0 / out)))
       :op2 (c3-1 / snap-07
                  :ARG1 c3-9
                  :time (c3-2 / now))
       :op3 (c3-8 / together
                  :domain (c3-7 / we)))

# ::snt Yep
# ::tokens ["Yep"]
# ::lemmas ["yep"]
(c4-0 / yep)

# ::snt i did that only cause i found out my ex was cheating on me and got his ex pregnant so i smashed his car winshield had a garage sale and sold all his fave things
# ::tokens ["i", "did", "that", "only", "cause", "i", "found", "out", "my", "ex", "was", "cheating", "on", "me", "and", "got", "his", "ex", "pregnant", "so", "i", "smashed", "his", "car", "winshield", "had", "a", "garage", "sale", "and", "sold", "all", "his", "fave", "things"]
# ::lemmas ["i", "do", "that", "only", "cause", "i", "find", "out", "my", "ex", "be", "cheat", "on", "i", "and", "get", "his", "ex", "pregnant", "so", "i", "smash", "his", "car", "winshield", "have", "a", "garage", "sale", "and", "sell", "all", "his", "fave", "thing"]
(c5-27 / do-02
       :ARG0 (c5-26 / i)
       :ARG1 (c5-10 / that)
       :ARG1-of (c5-16 / cause-01
                       :ARG0 (c5-11 / and
                                    :op1 (c5-19 / find-out-03
                                                :ARG0 c5-26
                                                :ARG1 (c5-14 / cheat-03
                                                             :ARG0 (c5-22 / person
                                                                          :ARG0-of (c5-7 / have-rel-role-91
                                                                                         :ARG1 c5-26
                                                                                         :ARG2 (c5-0 / significant-other)
                                                                                         :time (c5-21 / ex)))
                                                             :ARG1 c5-26))
                                    :op2 (c5-5 / impregnate-01
                                               :ARG1 (c5-15 / person
                                                            :ARG0-of (c5-25 / have-rel-role-91
                                                                            :ARG1 (c5-6 / he)
                                                                            :ARG2 (c5-3 / significant-other)
                                                                            :time (c5-12 / ex))))
                                    :ARG0-of (c5-1 / cause-01
                                                   :ARG1 (c5-9 / and
                                                               :op1 (c5-2 / smash-02
                                                                          :ARG0 c5-26
                                                                          :ARG1 (c5-18 / car
                                                                                       :poss (c5-24 / winhield)
                                                                                       :ARG0-of (c5-20 / sell-01
                                                                                                       :mod (c5-13 / garage)
                                                                                                       :op2-of c5-9)))
                                                               :ARG0 c5-26
                                                               :ARG1 (c5-17 / thing
                                                                            :mod (c5-8 / all)
                                                                            :ARG1-of (c5-23 / favor-01
                                                                                            :ARG0 c5-15))))))
       :mod (c5-4 / only))

# ::snt No One Ever Should
# ::tokens ["No", "One", "Ever", "Should"]
# ::lemmas ["no", "one", "ever", "should"]
(c6-0 / recommend-01
      :ARG2 (c6-2 / no-one)
      :time (c6-1 / ever))

# ::snt :Once, and the guilt just ate me up inside. Never again.
# ::tokens [":", "Once", ",", "and", "the", "guilt", "just", "ate", "me", "up", "inside", ".", "Never", "again", "."]
# ::lemmas [":", "once", ",", "and", "the", "guilt", "just", "eat", "i", "up", "inside", ".", "never", "again", "."]
(c7-0 / multi-sentence
      :snt1 (c7-7 / and
                  :op1 (c7-4 / have-frequency-91
                             :ARG2 1)
                  :op2 (c7-3 / eat-01
                             :ARG0 (c7-8 / guilt)
                             :ARG1 (c7-6 / i)
                             :location (c7-2 / inside)
                             :mod (c7-5 / just)))
      :snt2 (c7-9 / again
                  :time (c7-1 / ever)
                  :polarity -))

# ::snt I also smashed out is windows on his truck. To this day, I don't think he knew it was me who did it.
# ::tokens ["I", "also", "smashed", "out", "is", "windows", "on", "his", "truck", ".", "To", "this", "day", ",", "I", "do", "n't", "think", "he", "knew", "it", "was", "me", "who", "did", "it", "."]
# ::lemmas ["i", "also", "smash", "out", "be", "window", "on", "his", "truck", ".", "to", "this", "day", ",", "i", "do", "not", "think", "he", "know", "it", "be", "i", "who", "do", "it", "."]
(c8-0 / multi-sentence
      :snt1 (c8-1 / smash-01
                  :ARG0 (c8-9 / i)
                  :ARG1 (c8-6 / window
                              :part-of (c8-10 / truck
                                              :poss (c8-4 / he)))
                  :mod (c8-3 / also)
                  :location c8-10)
      :snt2 (c8-13 / think-01
                   :ARG0 (c8-2 / i)
                   :ARG1 (c8-5 / know-01
                               :ARG0 (c8-8 / he)
                               :ARG1 (c8-12 / do-02
                                            :ARG0 c8-2
                                            :ARG1 c8-1))
                   :time (c8-7 / day
                               :mod (c8-11 / this))
                   :polarity -))

# ::snt Yes, I ripped my ex's clothes up after I found out he cheated, we were still married at the time.
# ::tokens ["Yes", ",", "I", "ripped", "my", "ex", "'s", "clothes", "up", "after", "I", "found", "out", "he", "cheated", ",", "we", "were", "still", "married", "at", "the", "time", "."]
# ::lemmas ["yes", ",", "i", "rip", "my", "ex", "'s", "clothe", "up", "after", "i", "find", "out", "he", "cheat", ",", "we", "be", "still", "marry", "at", "the", "time", "."]
(c9-11 / and
       :op1 (c9-4 / rip-up-04
                  :ARG0 (c9-10 / i)
                  :ARG1 (c9-8 / clothes
                              :poss (c9-7 / person
                                          :ARG0-of (c9-6 / have-rel-role-91
                                                         :ARG1 c9-10
                                                         :ARG2 (c9-3 / significant-other)
                                                         :time (c9-5 / ex))))
                  :time (c9-12 / after
                               :op1 (c9-0 / find-out-03
                                          :ARG0 c9-10
                                          :ARG1 (c9-13 / cheat-03
                                                       :ARG0 c9-7))))
       :op2 (c9-2 / marry-01
                  :ARG1 c9-10
                  :ARG2 c9-7
                  :mod (c9-1 / still)
                  :time (c9-9 / time)))

# ::snt Can't say I haven't thought about it but no
# ::tokens ["Ca", "n't", "say", "I", "have", "n't", "thought", "about", "it", "but", "no"]
# ::lemmas ["can", "not", "say", "i", "have", "not", "think", "about", "it", "but", "no"]
(c10-4 / contrast-01
       :ARG1 (c10-3 / possible-01
                    :ARG1 (c10-1 / say-01
                                 :ARG0 (c10-5 / i)
                                 :ARG1 (c10-6 / think-01
                                              :ARG0 c10-5
                                              :ARG1 (c10-2 / it)
                                              :polarity -))
                    :polarity -)
       :ARG2 (c10-0 / no))

# ::snt No because I prefer not being behind bars.
# ::tokens ["No", "because", "I", "prefer", "not", "being", "behind", "bars", "."]
# ::lemmas ["no", "because", "i", "prefer", "not", "be", "behind", "bar", "."]
(c11-4 / cause-01
       :ARG0 (c11-3 / prefer-01
                    :ARG0 (c11-5 / i)
                    :ARG1 (c11-0 / be-located-at-91
                                 :ARG1 c11-5
                                 :ARG2 (c11-2 / behind
                                              :op1 (c11-6 / bar))
                                 :polarity -))
       :ARG1 (c11-1 / no))

# ::snt No, its not just immature, its
# ::tokens ["No", ",", "its", "not", "just", "immature", ",", "its"]
# ::lemmas ["no", ",", "its", "not", "just", "immature", ",", "its"]
(c12-2 / mature-02
       :ARG1 (c12-3 / it)
       :mod (c12-1 / just)
       :mod (c12-0 / no)
       :polarity -)

# ::snt I don't understand this.. what did she spray on the car?
# ::tokens ["I", "do", "n't", "understand", "this", "..", "what", "did", "she", "spray", "on", "the", "car", "?"]
# ::lemmas ["i", "do", "not", "understand", "this", "..", "what", "do", "she", "spray", "on", "the", "car", "?"]
(c13-1 / multi-sentence
       :snt1 (c13-7 / understand-01
                    :ARG0 (c13-5 / i)
                    :ARG1 (c13-6 / this)
                    :polarity -)
       :snt2 (c13-2 / spray-01
                    :ARG0 (c13-0 / she)
                    :ARG1 (c13-3 / amr-unknown)
                    :ARG2 (c13-4 / car)))
