# ::snt Ooo I so would be
# ::tokens ["Ooo", "I", "so", "would", "be"]
# ::lemmas ["ooo", "i", "so", "would", "be"]
(c1-2 / so
      :domain (c1-1 / i)
      :mod (c1-0 / ooo
                 :mode expressive))

# ::snt Congrats Gelman - the award is pretty cool
# ::tokens ["Congrats", "Gelman", "-", "the", "award", "is", "pretty", "cool"]
# ::lemmas ["Congrats", "Gelman", "-", "the", "award", "be", "pretty", "cool"]
(c2-3 / congratulate-01
      :ARG1 (c2-2 / person
                  :name (c2-0 / name
                              :op1 "Gelman"))
      :ARG0-of (c2-6 / cause-01
                     :ARG1 (c2-4 / cool-04
                                 :ARG1 (c2-5 / award-01)
                                 :degree (c2-1 / pretty))))

# ::snt Loved seeing you on this show!
# ::tokens ["Loved", "seeing", "you", "on", "this", "show", "!"]
# ::lemmas ["love", "see", "you", "on", "this", "show", "!"]
(c3-3 / love-02
      :ARG0 (c3-4 / i)
      :ARG1 (c3-2 / see-01
                  :ARG0 c3-4
                  :ARG1 (c3-1 / you)
                  :location (c3-0 / show-04
                                  :mod (c3-5 / this))))

# ::snt Robbed by the VMAS
# ::tokens ["Robbed", "by", "the", "VMAS"]
# ::lemmas ["rob", "by", "the", "VMAS"]
(c4-0 / rob-01
      :ARG0 (c4-2 / organization
                  :name (c4-1 / name
                              :op1 "V VMAS")))

# ::snt Yea! Anyone but Kelly. Maybe we can stand to watch!
# ::tokens ["Yea", "!", "Anyone", "but", "Kelly", ".", "Maybe", "we", "can", "stand", "to", "watch", "!"]
# ::lemmas ["yea", "!", "anyone", "but", "Kelly", ".", "maybe", "we", "can", "stand", "to", "watch", "!"]
(c5-1 / multi-sentence
      :snt1 (c5-0 / yea
                  :mode expressive)
      :snt2 (c5-9 / anyone
                  :ARG2-of (c5-5 / except-01
                                 :ARG1 (c5-6 / person
                                             :name (c5-2 / name
                                                         :op1 "Kelly"))))
      :snt3 (c5-3 / possible-01
                  :ARG1 (c5-4 / stand-11
                              :ARG0 (c5-8 / we)
                              :purpose (c5-7 / watch-01
                                             :ARG0 c5-8))))

# ::snt I want to know, where you can send a message, I think someone is posing as him (Henry Cavill) asks for money for charity and nude photos.I doubt very much that it is he who does that.
# ::tokens ["I", "want", "to", "know", ",", "where", "you", "can", "send", "a", "message", ",", "I", "think", "someone", "is", "posing", "as", "him", "(", "Henry", "Cavill", ")", "asks", "for", "money", "for", "charity", "and", "nude", "photos", ".", "I", "doubt", "very", "much", "that", "it", "is", "he", "who", "does", "that", "."]
# ::lemmas ["i", "want", "to", "know", ",", "where", "you", "can", "send", "a", "message", ",", "i", "think", "someone", "be", "pose", "as", "he", "(", "Henry", "Cavill", ")", "ask", "for", "money", "for", "charity", "and", "nude", "photo", ".", "i", "doubt", "very", "much", "that", "it", "be", "he", "who", "do", "that", "."]
(c6-14 / multi-sentence
       :snt1 (c6-24 / want-01
                    :ARG0 (c6-25 / i)
                    :ARG1 (c6-8 / know-01
                                :ARG0 c6-25
                                :ARG1 (c6-1 / location
                                            :location-of (c6-0 / send-01
                                                               :ARG0 (c6-4 / you)
                                                               :ARG1 (c6-7 / message)
                                                               :ARG1-of (c6-23 / possible-01)))))
       :snt2 (c6-12 / think-01
                    :ARG0 (c6-5 / i)
                    :ARG1 (c6-11 / ask-02
                                 :ARG0 (c6-3 / someone
                                             :ARG1-of (c6-21 / mean-01
                                                             :ARG2 (c6-15 / person
                                                                          :name (c6-22 / name
                                                                                       :op1 "Henry"
                                                                                       :op2 "Cavill"))))
                                 :ARG1 (c6-17 / money
                                              :purpose (c6-10 / and
                                                              :op1 (c6-18 / charity)
                                                              :op2 (c6-2 / photograph-01
                                                                         :mod (c6-16 / nude))))))
       :snt3 (c6-26 / doubt-01
                    :ARG0 (c6-13 / i)
                    :ARG1 (c6-19 / do-02
                                 :ARG0 (c6-9 / he)
                                 :ARG1 c6-11)
                    :degree (c6-20 / much
                                   :degree (c6-6 / very))))

# ::snt Thank you.
# ::tokens ["Thank", "you", "."]
# ::lemmas ["thank", "you", "."]
(c7-2 / thank-01
      :ARG0 (c7-1 / i)
      :ARG1 (c7-0 / you))

# ::snt Adam...we have met...hope to meet you longer...this time
# ::tokens ["Adam", "...", "we", "have", "met", "...", "hope", "to", "meet", "you", "longer", "...", "this", "time"]
# ::lemmas ["Adam", "...", "we", "have", "meet", "...", "hope", "to", "meet", "you", "long", "...", "this", "time"]
(c8-0 / multi-sentence
      :snt1 (c8-2 / say-01
                  :ARG0 (c8-11 / i)
                  :ARG1 (c8-4 / meet-03
                              :ARG0 (c8-9 / we))
                  :ARG2 (c8-5 / person
                              :name (c8-1 / name
                                          :op1 "Adam")))
      :snt2 (c8-6 / hope-01
                  :ARG0 (c8-3 / i)
                  :ARG1 (c8-13 / meet-03
                               :ARG0 c8-3
                               :ARG1 c8-5
                               :ARG1-of (c8-10 / have-degree-91
                                               :ARG2 (c8-7 / long-03
                                                           :ARG1 c8-13)
                                               :ARG3 (c8-8 / more)))
                  :time (c8-12 / time
                               :mod (c8-14 / this))))

# ::snt Can't wait
# ::tokens ["Ca", "n't", "wait"]
# ::lemmas ["can", "not", "wait"]
(c9-0 / wait-01
      :ARG1 (c9-1 / i))

# ::snt Thank you!
# ::tokens ["Thank", "you", "!"]
# ::lemmas ["thank", "you", "!"]
(c10-2 / thank-01
       :ARG0 (c10-1 / i)
       :ARG1 (c10-0 / you)
       :mode expressive)

# ::snt me, too!
# ::tokens ["me", ",", "too", "!"]
# ::lemmas ["i", ",", "too", "!"]
(c11-0 / i
       :mod (c11-1 / too))

# ::snt Thanks for the heads up! I'm setting my DVR rn &amp; I don't care whether it's new or old....it's Adam!!!!!
# ::tokens ["Thanks", "for", "the", "heads", "up", "!", "I", "'m", "setting", "my", "DVR", "rn", "&", "amp", ";", "I", "do", "n't", "care", "whether", "it", "'s", "new", "or", "old", "....", "it", "'s", "Adam", "!", "!", "!", "!", "!"]
# ::lemmas ["thank", "for", "the", "head", "up", "!", "i", "be", "set", "my", "DVR", "rn", "&", "amp", ";", "i", "do", "not", "care", "whether", "it", "be", "new", "or", "old", "....", "it", "be", "Adam", "!", "!", "!", "!", "!"]
(c12-11 / multi-sentence
        :snt1 (c12-8 / thank-01
                     :ARG0 (c12-20 / i)
                     :ARG1 (c12-4 / you)
                     :ARG2 (c12-6 / heads-up))
        :snt2 (c12-1 / set-02
                     :ARG0 (c12-5 / i)
                     :ARG1 (c12-17 / rate-entity-91
                                   :ARG1 (c12-14 / television)
                                   :ARG2 (c12-7 / and
                                                :op1 (c12-21 / temporal-quantity
                                                             :unit (c12-22 / day)
                                                             :quant 1)
                                                :op2 (c12-2 / temporal-quantity
                                                            :unit (c12-19 / week)
                                                            :quant 1))))
        :snt3 (c12-13 / care-01
                      :ARG0 (c12-9 / i)
                      :ARG1 (c12-3 / or
                                   :op1 (c12-16 / new-01
                                                :ARG1 (c12-0 / it))
                                   :op2 (c12-10 / old
                                                :domain c12-0))
                      :polarity -)
        :snt4 (c12-18 / person
                      :name (c12-12 / name
                                    :op1 "Adam")
                      :domain (c12-15 / it)))

# ::snt eeek...me too...but i'm sure a will catch it &amp; post!
# ::tokens ["eeek", "...", "me", "too", "...", "but", "i", "'m", "sure", "a", "will", "catch", "it", "&", "amp", ";", "post", "!"]
# ::lemmas ["eeek", "...", "i", "too", "...", "but", "i", "be", "sure", "a", "will", "catch", "it", "&", "amp", ";", "post", "!"]
(c13-1 / multi-sentence
       :snt1 (c13-7 / eek
                    :mode expressive)
       :snt2 (c13-9 / contrast-01
                    :ARG1 (c13-10 / i
                                  :mod (c13-11 / too))
                    :ARG2 (c13-3 / sure-02
                                 :ARG0 (c13-4 / i)
                                 :ARG1 (c13-13 / catch-01
                                               :ARG0 (c13-5 / and
                                                            :op1 c13-4
                                                            :op2 (c13-8 / person
                                                                        :name (c13-2 / name
                                                                                     :op1 "amp")))
                                               :ARG1 (c13-12 / it))))
       :snt3 (c13-6 / post-01
                    :ARG0 (c13-0 / you)
                    :mode imperative))

# ::snt Ah, well, any appearance is good.
# ::tokens ["Ah", ",", "well", ",", "any", "appearance", "is", "good", "."]
# ::lemmas ["ah", ",", "well", ",", "any", "appearance", "be", "good", "."]
(c14-4 / good-02
       :ARG1 (c14-3 / appear-01
                    :mod (c14-2 / any))
       :mod (c14-1 / ah
                   :mode expressive)
       :mod (c14-0 / well))

# ::snt evidently, per shosh, it's not live...must be a rerun of earlier performance. i'm watchin' anyway!
# ::tokens ["evidently", ",", "per", "shosh", ",", "it", "'s", "not", "live", "...", "must", "be", "a", "rerun", "of", "earlier", "performance", ".", "i", "'m", "watchin", "'", "anyway", "!"]
# ::lemmas ["evidently", ",", "per", "shosh", ",", "it", "be", "not", "live", "...", "must", "be", "a", "rerun", "of", "early", "performance", ".", "i", "be", "watchin", "'", "anyway", "!"]
(c15-2 / multi-sentence
       :snt1 (c15-7 / live-01
                    :ARG1 (c15-11 / it)
                    :ARG1-of (c15-6 / evident-01)
                    :ARG1-of (c15-9 / cause-01
                                    :ARG0 (c15-0 / obligate-01
                                                 :ARG2 (c15-5 / rerun-01
                                                              :ARG1 (c15-8 / perform-01
                                                                           :time (c15-1 / before
                                                                                        :op1 (c15-3 / now))))))
                    :polarity -)
       :snt2 (c15-10 / watch-01
                     :ARG0 (c15-4 / i)
                     :mod (c15-12 / anyway)))

# ::snt Hope my tv gets fixed by then
# ::tokens ["Hope", "my", "tv", "gets", "fixed", "by", "then"]
# ::lemmas ["hope", "my", "tv", "gets", "fix", "by", "then"]
(c16-2 / hope-01
       :ARG0 (c16-3 / i)
       :ARG1 (c16-0 / fix-02
                    :ARG1 (c16-4 / television
                                 :poss c16-3)
                    :time (c16-1 / by
                                 :op1 (c16-5 / then))))

# ::snt for SURE am sooooooooooo excited and so thankful for all the snippets and vids!
# ::tokens ["for", "SURE", "am", "sooooooooooo", "excited", "and", "so", "thankful", "for", "all", "the", "snippets", "and", "vids", "!"]
# ::lemmas ["for", "sure", "be", "sooooooooooo", "excite", "and", "so", "thankful", "for", "all", "the", "snippet", "and", "vid", "!"]
(c18-5 / cause-01
       :ARG1 (c18-9 / and
                    :op1 (c18-4 / excite-01
                                :ARG1 (c18-8 / i)
                                :degree (c18-1 / so))
                    :op2 (c18-7 / thankful-02
                                :ARG0 c18-8
                                :ARG2 (c18-10 / and
                                              :op1 (c18-0 / snippet)
                                              :op2 (c18-3 / video)
                                              :mod (c18-6 / all))
                                :degree (c18-11 / so))
                    :ARG1-of (c18-2 / sure-02)))

# ::snt a EST for me, but check your local listings.
# ::tokens ["a", "EST", "for", "me", ",", "but", "check", "your", "local", "listings", "."]
# ::lemmas ["a", "est", "for", "i", ",", "but", "check", "your", "local", "listing", "."]
(c19-4 / contrast-01
       :ARG1 (c19-2 / event
                    :mod (c19-8 / company
                                :name (c19-1 / name
                                             :op1 " EST"))
                    :beneficiary (c19-6 / i))
       :ARG2 (c19-5 / check-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-3 / listing
                                 :poss c19-0
                                 :ARG1-of (c19-7 / local-02))
                    :mode imperative))

# ::snt Do you know what time?
# ::tokens ["Do", "you", "know", "what", "time", "?"]
# ::lemmas ["do", "you", "know", "what", "time", "?"]
(c20-2 / know-01
       :polarity (c20-3 / amr-unknown)
       :ARG0 (c20-1 / you)
       :ARG1 (c20-0 / time))

# ::snt evidently, shosh says it's not new (live) so maybe it's a rerun of an earlier performance (???), but anytime Adam is on tv is fine with me!
# ::tokens ["evidently", ",", "shosh", "says", "it", "'s", "not", "new", "(", "live", ")", "so", "maybe", "it", "'s", "a", "rerun", "of", "an", "earlier", "performance", "(", "?", "?", "?", ")", ",", "but", "anytime", "Adam", "is", "on", "tv", "is", "fine", "with", "me", "!"]
# ::lemmas ["evidently", ",", "shosh", "say", "it", "be", "not", "new", "(", "live", ")", "so", "maybe", "it", "be", "a", "rerun", "of", "an", "early", "performance", "(", "?", "?", "?", ")", ",", "but", "anytime", "Adam", "be", "on", "tv", "be", "fine", "with", "i", "!"]
(c21-13 / contrast-01
        :ARG1 (c21-0 / say-01
                     :ARG0 (c21-19 / person
                                   :name (c21-16 / name
                                                 :op1 "Shosh"))
                     :ARG1 (c21-12 / new-01
                                   :ARG1 (c21-21 / it)
                                   :ARG1-of (c21-2 / live-01)
                                   :ARG0-of (c21-9 / cause-01
                                                   :ARG1 (c21-11 / possible-01
                                                                 :ARG1 (c21-17 / rerun-01
                                                                               :ARG1 (c21-4 / perform-01
                                                                                            :time (c21-10 / before
                                                                                                          :op1 (c21-20 / now)))
                                                                               :ARG1-of (c21-5 / request-confirmation-91))))
                                   :polarity -)
                     :mod (c21-18 / evident))
        :ARG2 (c21-15 / fine-04
                      :ARG1 (c21-7 / anytime
                                   :time-of (c21-1 / be-located-at-91
                                                   :ARG1 (c21-3 / person
                                                                :name (c21-14 / name
                                                                              :op1 "Adam"))
                                                   :ARG2 (c21-8 / television)))
                      :ARG2 (c21-6 / i)))

# ::snt awww wowowowoowo
# ::tokens ["awww", "wowowowoowo"]
# ::lemmas ["awww", "wowowowoowo"]
(c22-0 / wowowowoowo)

# ::snt I will... Sometimes they don't list specifics until Sunday though.
# ::tokens ["I", "will", "...", "Sometimes", "they", "do", "n't", "list", "specifics", "until", "Sunday", "though", "."]
# ::lemmas ["i", "will", "...", "sometimes", "they", "do", "not", "list", "specific", "until", "Sunday", "though", "."]
(c23-1 / multi-sentence
       :snt1 (c23-8 / do-02
                    :ARG0 (c23-6 / i))
       :snt2 (c23-4 / list-01
                    :ARG0 (c23-7 / they)
                    :ARG1 (c23-10 / thing
                                  :ARG1-of (c23-2 / specific-02))
                    :frequency (c23-0 / sometimes)
                    :ARG1-of (c23-3 / have-concession-91)
                    :time (c23-9 / until
                                 :op1 (c23-5 / date-entity
                                             :weekday (c23-11 / sunday)))
                    :polarity -))

# ::snt Yes please
# ::tokens ["Yes", "please"]
# ::lemmas ["yes", "please"]
(c24-0 / yes
       :polite +)

# ::snt Hmm... I'll have to check my on-screen cable guide. If it's a repeat they always list "original air date"...
# ::tokens ["Hmm", "...", "I", "'ll", "have", "to", "check", "my", "on", "-", "screen", "cable", "guide", ".", "If", "it", "'s", "a", "repeat", "they", "always", "list", "\"", "original", "air", "date", "\"", "..."]
# ::lemmas ["hmm", "...", "i", "'ll", "have", "to", "check", "my", "on", "-", "screen", "cable", "guide", ".", "if", "it", "be", "a", "repeat", "they", "always", "list", "\"", "original", "air", "date", "\"", "..."]
(c25-2 / multi-sentence
       :snt1 (c25-0 / obligate-01
                    :ARG1 (c25-10 / i)
                    :ARG2 (c25-9 / check-01
                                 :ARG0 c25-10
                                 :ARG1 (c25-12 / guide
                                               :mod (c25-15 / cable)
                                               :medium (c25-3 / screen)
                                               :poss c25-10)))
       :snt2 (c25-8 / list-01
                    :ARG0 (c25-11 / they)
                    :ARG1 (c25-13 / date
                                  :mod (c25-1 / original)
                                  :mod (c25-5 / air))
                    :time (c25-14 / always)
                    :condition (c25-6 / repeat-01
                                      :ARG1 (c25-4 / it)))
       :mod (c25-7 / hmm
                   :mode expressive))

# ::snt Did now. Confused
# ::tokens ["Did", "now", ".", "Confused"]
# ::lemmas ["do", "now", ".", "confuse"]
(c26-3 / multi-sentence
       :snt1 (c26-0 / do-02
                    :time (c26-1 / now))
       :snt2 (c26-2 / Confused-02))

# ::snt Okay... My bad.
# ::tokens ["Okay", "...", "My", "bad", "."]
# ::lemmas ["okay", "...", "my", "bad", "."]
(c27-3 / thing
       :ARG1-of (c27-1 / bad-07
                       :ARG0 (c27-2 / i))
       :ARG1-of (c27-0 / okay-04))

# ::snt Shosh already said this is not a new show as in a repeat
# ::tokens ["Shosh", "already", "said", "this", "is", "not", "a", "new", "show", "as", "in", "a", "repeat"]
# ::lemmas ["Shosh", "already", "say", "this", "be", "not", "a", "new", "show", "as", "in", "a", "repeat"]
(c28-3 / say-01
       :ARG0 (c28-7 / person
                    :name (c28-1 / name
                                 :op1 "Shosh"))
       :ARG1 (c28-0 / show
                    :ARG1-of (c28-6 / new-01
                                    :polarity -)
                    :domain (c28-8 / this)
                    :ARG1-of (c28-2 / mean-01
                                    :ARG2 (c28-4 / repeat-01)))
       :time (c28-5 / already))

# ::snt Shos already said its not new
# ::tokens ["Shos", "already", "said", "its", "not", "new"]
# ::lemmas ["Shos", "already", "say", "its", "not", "new"]
(c29-1 / say-01
       :ARG0 (c29-3 / person
                    :name (c29-0 / name
                                 :op1 "Shos"))
       :ARG1 (c29-2 / new-01
                    :ARG1 (c29-4 / it)
                    :polarity -)
       :time (c29-5 / already))

# ::snt Right...
# ::tokens ["Right", "..."]
# ::lemmas ["right", "..."]
(c30-0 / right-06)

# ::snt Just thinking out loud. If it would be QAL promo it would say Queen not AL performing live. Right?! Oh please let it be TF vol2
# ::tokens ["Just", "thinking", "out", "loud", ".", "If", "it", "would", "be", "QAL", "promo", "it", "would", "say", "Queen", "not", "AL", "performing", "live", ".", "Right", "?", "!", "Oh", "please", "let", "it", "be", "TF", "vol2"]
# ::lemmas ["just", "think", "out", "loud", ".", "if", "it", "would", "be", "QAL", "promo", "it", "would", "say", "Queen", "not", "AL", "perform", "live", ".", "right", "?", "!", "oh", "please", "let", "it", "be", "TF", "vol2"]
(c31-12 / multi-sentence
        :snt1 (c31-9 / think-01
                     :ARG0 (c31-18 / i)
                     :manner (c31-1 / loud)
                     :mod (c31-7 / just))
        :snt2 (c31-0 / say-01
                     :ARG1 (c31-17 / perform-01
                                   :ARG0 (c31-8 / queen)
                                   :manner (c31-10 / live)
                                   :polarity -)
                     :condition (c31-13 / promo
                                        :mod (c31-2 / product
                                                    :name (c31-15 / name
                                                                  :op1 "QAL")))
                     :ARG1-of (c31-16 / request-confirmation-91
                                      :snt3-of c31-12))
        :ARG1 (c31-6 / let-01
                     :ARG0 (c31-4 / you)
                     :ARG1 (c31-11 / broadcast-program
                                   :name (c31-14 / name
                                                 :op1 "TF")
                                   :mod (c31-5 / vol2))
                     :mode imperative
                     :polite +)
        :mod (c31-3 / oh))

# ::snt Excited!! I've missed him on tv!!!!
# ::tokens ["Excited", "!", "!", "I", "'ve", "missed", "him", "on", "tv", "!", "!", "!", "!"]
# ::lemmas ["excited", "!", "!", "i", "'ve", "miss", "he", "on", "tv", "!", "!", "!", "!"]
(c32-0 / multi-sentence
       :snt1 (c32-1 / excite-01
                    :mode expressive)
       :snt2 (c32-3 / miss-02
                    :ARG0 (c32-4 / i)
                    :ARG1 (c32-2 / he)
                    :medium (c32-5 / television)))

# ::snt So hoping for that!!!
# ::tokens ["So", "hoping", "for", "that", "!", "!", "!"]
# ::lemmas ["so", "hope", "for", "that", "!", "!", "!"]
(c33-0 / hope-01
       :ARG1 (c33-1 / that)
       :mode expressive)

# ::snt YW!
# ::tokens ["YW", "!"]
# ::lemmas ["YW", "!"]
(c34-0 / yahoo
       :mode expressive)

# ::snt that would be PURE NIRVANA!
# ::tokens ["that", "would", "be", "PURE", "NIRVANA", "!"]
# ::lemmas ["that", "would", "be", "PURE", "NIRVANA", "!"]
(c35-3 / sure-02
       :ARG1 (c35-0 / country
                    :name (c35-2 / name
                                 :op1 "Japan"))
       :domain (c35-1 / that)
       :mode expressive)

# ::snt Wow! Maybe new music to coincide with Vegas so he can perform it during the show like Two Fux?!
# ::tokens ["Wow", "!", "Maybe", "new", "music", "to", "coincide", "with", "Vegas", "so", "he", "can", "perform", "it", "during", "the", "show", "like", "Two", "Fux", "?", "!"]
# ::lemmas ["wow", "!", "maybe", "new", "music", "to", "coincide", "with", "Vegas", "so", "he", "can", "perform", "it", "during", "the", "show", "like", "Two", "Fux", "?", "!"]
(c36-1 / multi-sentence
       :snt1 (c36-12 / wow
                     :mode expressive)
       :snt2 (c36-8 / possible-01
                    :ARG1 (c36-13 / coincide-01
                                  :ARG1 (c36-7 / music
                                               :ARG1-of (c36-2 / new-01))
                                  :ARG2 (c36-15 / city
                                                :name (c36-9 / name
                                                             :op1 "Vegas"))
                                  :purpose (c36-3 / possible-01
                                                  :ARG1 (c36-14 / perform-01
                                                                :ARG0 (c36-10 / he)
                                                                :ARG1 c36-7
                                                                :time (c36-4 / show-04
                                                                             :ARG1-of (c36-5 / resemble-01
                                                                                             :ARG2 (c36-0 / show
                                                                                                          :name (c36-11 / name
                                                                                                                        :op1 "Two"
                                                                                                                        :op2 "Fux")))))))
                    :polarity (c36-6 / amr-unknown)))

# ::snt ur so welcome...my totally selfish pleasure!
# ::tokens ["ur", "so", "welcome", "...", "my", "totally", "selfish", "pleasure", "!"]
# ::lemmas ["ur", "so", "welcome", "...", "my", "totally", "selfish", "pleasure", "!"]
(c37-4 / welcome-01
       :ARG1 (c37-1 / you)
       :degree (c37-2 / so)
       :ARG1-of (c37-5 / cause-01
                       :ARG0 (c37-3 / pleasure
                                    :poss (c37-6 / i)
                                    :mod (c37-0 / selfish
                                                :degree (c37-7 / total)))))

# ::snt can't wait!!!!
# ::tokens ["ca", "n't", "wait", "!", "!", "!", "!"]
# ::lemmas ["can", "not", "wait", "!", "!", "!", "!"]
(c38-0 / wait-01
       :ARG1 (c38-1 / i))

# ::snt saw it my tv guide!
# ::tokens ["saw", "it", "my", "tv", "guide", "!"]
# ::lemmas ["see", "it", "my", "tv", "guide", "!"]
(c39-0 / see-01
       :ARG0 (c39-2 / i)
       :ARG1 (c39-1 / it)
       :ARG2 (c39-3 / thing
                    :ARG0-of (c39-4 / guide-01
                                    :ARG1 c39-2
                                    :ARG2 (c39-5 / television))))

# ::snt My DVR is all set and ready to go!
# ::tokens ["My", "DVR", "is", "all", "set", "and", "ready", "to", "go", "!"]
# ::lemmas ["my", "DVR", "be", "all", "set", "and", "ready", "to", "go", "!"]
(c40-6 / and
       :op1 (c40-1 / set-08
                   :ARG1 (c40-8 / disc
                                :mod (c40-4 / digital)
                                :mod (c40-3 / versatile)
                                :poss (c40-5 / i))
                   :mod (c40-7 / all))
       :op2 (c40-2 / ready-01
                   :ARG1 c40-5
                   :ARG2 (c40-0 / go-01
                                :ARG1 c40-5))
       :mode expressive)

# ::snt Thank you!!
# ::tokens ["Thank", "you", "!", "!"]
# ::lemmas ["thank", "you", "!", "!"]
(c41-2 / thank-01
       :ARG0 (c41-1 / i)
       :ARG1 (c41-0 / you)
       :mode expressive)

# ::snt My show was cut off so have no idea the question.
# ::tokens ["My", "show", "was", "cut", "off", "so", "have", "no", "idea", "the", "question", "."]
# ::lemmas ["my", "show", "be", "cut", "off", "so", "have", "no", "idea", "the", "question", "."]
(c42-3 / cut-off-04
       :ARG1 (c42-0 / show-04
                    :ARG0 (c42-4 / i))
       :ARG0-of (c42-7 / cause-01
                       :ARG1 (c42-2 / have-03
                                    :ARG0 c42-4
                                    :ARG1 (c42-1 / idea
                                                 :topic (c42-5 / thing
                                                               :ARG1-of (c42-6 / question-01)))
                                    :polarity -)))

# ::snt Cant find the mime! Ive watched the show over and over and cant see it!
# ::tokens ["Ca", "nt", "find", "the", "mime", "!", "I", "ve", "watched", "the", "show", "over", "and", "over", "and", "ca", "nt", "see", "it", "!"]
# ::lemmas ["can", "nt", "find", "the", "mime", "!", "i", "ve", "watch", "the", "show", "over", "and", "over", "and", "can", "not", "see", "it", "!"]
(c43-3 / multi-sentence
       :snt1 (c43-7 / possible-01
                    :ARG1 (c43-0 / find-01
                                 :ARG1 (c43-6 / mime))
                    :polarity -)
       :snt2 (c43-10 / and
                     :op1 (c43-8 / watch-01
                                 :ARG0 (c43-9 / i)
                                 :ARG1 (c43-5 / show)
                                 :frequency (c43-1 / over-and-over))
                     :op2 (c43-4 / possible-01
                                 :ARG1 (c43-2 / see-01
                                              :ARG0 c43-9
                                              :ARG1 c43-5)
                                 :polarity -)))

# ::snt have they posted the question yet? I am not sure if I have missed it yet.
# ::tokens ["have", "they", "posted", "the", "question", "yet", "?", "I", "am", "not", "sure", "if", "I", "have", "missed", "it", "yet", "."]
# ::lemmas ["have", "they", "post", "the", "question", "yet", "?", "i", "be", "not", "sure", "if", "i", "have", "miss", "it", "yet", "."]
(c44-1 / multi-sentence
       :snt1 (c44-5 / post-01
                    :polarity (c44-3 / amr-unknown)
                    :ARG0 (c44-7 / they)
                    :ARG1 (c44-10 / thing
                                  :ARG1-of (c44-6 / question-01))
                    :time (c44-0 / yet))
       :snt2 (c44-2 / sure-02
                    :ARG0 (c44-8 / i)
                    :ARG1 (c44-4 / miss-02
                                 :ARG0 c44-8
                                 :ARG1 c44-10
                                 :time (c44-9 / yet))
                    :polarity -))

# ::snt We have nothing. I wish we could help others. I have a fundraiser to help the elderly, but nobody donates. I'm quite surprised actually.
# ::tokens ["We", "have", "nothing", ".", "I", "wish", "we", "could", "help", "others", ".", "I", "have", "a", "fundraiser", "to", "help", "the", "elderly", ",", "but", "nobody", "donates", ".", "I", "'m", "quite", "surprised", "actually", "."]
# ::lemmas ["we", "have", "nothing", ".", "i", "wish", "we", "could", "help", "other", ".", "i", "have", "a", "fundraiser", "to", "help", "the", "elderly", ",", "but", "nobody", "donate", ".", "i", "be", "quite", "surprised", "actually", "."]
(c45-9 / multi-sentence
       :snt1 (c45-5 / have-03
                    :ARG0 (c45-19 / we)
                    :ARG1 (c45-16 / nothing))
       :snt2 (c45-1 / wish-01
                    :ARG0 (c45-21 / i)
                    :ARG1 (c45-18 / possible-01
                                  :ARG1 (c45-20 / help-01
                                                :ARG0 (c45-14 / we)
                                                :ARG1 (c45-2 / other))))
       :snt3 (c45-12 / contrast-01
                     :ARG1 (c45-4 / have-03
                                  :ARG0 (c45-3 / i)
                                  :ARG1 (c45-15 / fundraise-04
                                                :purpose (c45-13 / help-01
                                                                 :ARG1 (c45-10 / person
                                                                               :mod (c45-17 / elderly))
                                                                 :ARG0 c45-15)))
                     :ARG2 (c45-22 / donate-01
                                   :ARG0 (c45-11 / nobody)
                                   :polarity -))
       :snt4 (c45-0 / surprise-01
                    :ARG1 (c45-8 / i)
                    :degree (c45-6 / quite)
                    :ARG1-of (c45-7 / actual-02)))

# ::snt Ryan... God bless you for caring for our darling daughter Megan and our SIL Brett. Brett has been so good to our girl, hes a great daddy and loving husband. I was shocked when she called me on my cell. Shes downstate in Traverse City and Im in the U.P. Of Michigan, a Yooper.
# ::tokens ["Ryan", "...", "God", "bless", "you", "for", "caring", "for", "our", "darling", "daughter", "Megan", "and", "our", "SIL", "Brett", ".", "Brett", "has", "been", "so", "good", "to", "our", "girl", ",", "he", "s", "a", "great", "daddy", "and", "loving", "husband", ".", "I", "was", "shocked", "when", "she", "called", "me", "on", "my", "cell", ".", "She", "s", "downstate", "in", "Traverse", "City", "and", "I", "m", "in", "the", "U.P.", "Of", "Michigan", ",", "a", "Yooper", "."]
# ::lemmas ["Ryan", "...", "God", "bless", "you", "for", "care", "for", "our", "darling", "daughter", "Megan", "and", "our", "SIL", "Brett", ".", "Brett", "have", "be", "so", "good", "to", "our", "girl", ",", "he", "s", "a", "great", "daddy", "and", "loving", "husband", ".", "i", "be", "shocked", "when", "she", "call", "i", "on", "my", "cell", ".", "she", "s", "downstate", "in", "Traverse", "City", "and", "i", "m", "in", "the", "U.P.", "of", "Michigan", ",", "a", "Yooper", "."]
(c46-20 / multi-sentence
        :snt1 (c46-0 / say-01
                     :ARG0 (c46-36 / i)
                     :ARG1 (c46-18 / bless-01
                                   :ARG0 (c46-31 / person
                                                 :name (c46-28 / name
                                                               :op1 "God"))
                                   :ARG1 (c46-21 / person
                                                 :name (c46-23 / name
                                                               :op1 "Ryan"))
                                   :ARG2 (c46-24 / care-03
                                                 :ARG0 c46-21
                                                 :ARG1 (c46-14 / and
                                                               :op1 (c46-7 / person
                                                                           :name (c46-32 / name
                                                                                         :op1 "Megan")
                                                                           :mod (c46-37 / darling)
                                                                           :ARG0-of (c46-12 / have-rel-role-91
                                                                                            :ARG1 (c46-33 / we)
                                                                                            :ARG2 (c46-25 / daughter)))
                                                               :op2 (c46-4 / person
                                                                           :name (c46-26 / name
                                                                                         :op1 "Brett")
                                                                           :ARG0-of (c46-34 / have-rel-role-91
                                                                                            :ARG1 c46-33
                                                                                            :ARG2 (c46-9 / son))
                                                                           :ARG0-of (c46-11 / have-rel-role-91
                                                                                            :ARG1 c46-33
                                                                                            :ARG2 (c46-8 / son))))))
                     :ARG2 c46-21)
        :snt2 (c46-15 / good-02
                      :ARG1 (c46-13 / person
                                    :name (c46-35 / name
                                                  :op1 "Brett"))
                      :ARG2 (c46-6 / girl
                                   :poss c46-33)
                      :degree (c46-29 / so))
        :snt3 (c46-3 / shock-01
                     :ARG0 (c46-17 / call-02
                                   :ARG0 (c46-19 / she)
                                   :ARG1 c46-36
                                   :medium (c46-5 / cell
                                                  :poss c46-36))
                     :ARG1 c46-36
                     :time (c46-16 / and
                                   :op1 (c46-22 / state
                                                :name (c46-30 / name
                                                              :op1 "Traverse"
                                                              :op2 "City"))
                                   :op2 (c46-10 / state
                                                :name (c46-2 / name
                                                             :op1 "Michigan")
                                                :part-of (c46-27 / country
                                                                 :name (c46-1 / name
                                                                              :op1 "U.P."))))))

# ::snt They had been thru so much it seemed like it came just when they needed it most. Kudos !!
# ::tokens ["They", "had", "been", "thru", "so", "much", "it", "seemed", "like", "it", "came", "just", "when", "they", "needed", "it", "most", ".", "Kudos", "!", "!"]
# ::lemmas ["they", "have", "be", "thru", "so", "much", "it", "seem", "like", "it", "come", "just", "when", "they", "need", "it", "most", ".", "Kudos", "!", "!"]
(c47-1 / multi-sentence
       :snt1 (c47-11 / go-through-20
                     :ARG0 (c47-10 / they)
                     :ARG1-of (c47-5 / have-quant-91
                                     :ARG2 (c47-4 / much)
                                     :ARG3 (c47-3 / so)
                                     :ARG6 (c47-0 / seem-01
                                                  :ARG1 (c47-7 / come-01
                                                               :ARG1 (c47-9 / it)
                                                               :time (c47-2 / need-01
                                                                            :ARG0 (c47-13 / they)
                                                                            :ARG1 c47-9
                                                                            :ARG1-of c47-5
                                                                            :ARG3 (c47-12 / most))
                                                               :mod (c47-8 / just)))))
       :snt2 (c47-6 / kudos
                    :mode expressive))

# ::snt I loved it, so deserving. I cried.
# ::tokens ["I", "loved", "it", ",", "so", "deserving", ".", "I", "cried", "."]
# ::lemmas ["i", "love", "it", ",", "so", "deserving", ".", "i", "cry", "."]
(c48-0 / multi-sentence
       :snt1 (c48-3 / love-01
                    :ARG0 (c48-5 / i)
                    :ARG1 (c48-2 / it)
                    :ARG1-of (c48-6 / deserve-01
                                    :degree (c48-1 / so)))
       :snt2 (c48-4 / cry-02
                    :ARG0 (c48-7 / i)))

# ::snt I just saw it. I am still crying.
# ::tokens ["I", "just", "saw", "it", ".", "I", "am", "still", "crying", "."]
# ::lemmas ["i", "just", "see", "it", ".", "i", "be", "still", "cry", "."]
(c49-1 / multi-sentence
       :snt1 (c49-2 / see-01
                    :ARG0 (c49-6 / i)
                    :ARG1 (c49-3 / it)
                    :time (c49-5 / just))
       :snt2 (c49-4 / cry-02
                    :ARG0 (c49-7 / i)
                    :mod (c49-0 / still)))

# ::snt It was a lovely gesture.
# ::tokens ["It", "was", "a", "lovely", "gesture", "."]
# ::lemmas ["it", "be", "a", "lovely", "gesture", "."]
(c50-0 / gesture-01
       :ARG1 (c50-2 / it)
       :mod (c50-1 / lovely))
