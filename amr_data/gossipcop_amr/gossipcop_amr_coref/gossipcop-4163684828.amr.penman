# ::snt This doesnt necessarily mean government itself needs to be the big brother (I am fully aware of the other logical extremes). But I certainly believe a paradigm shift in culture and mindset is needed in the US, &amp; certainly some policy as well, such as getting money or if politics
# ::tokens ["This", "does", "nt", "necessarily", "mean", "government", "itself", "needs", "to", "be", "the", "big", "brother", "(", "I", "am", "fully", "aware", "of", "the", "other", "logical", "extremes", ")", ".", "But", "I", "certainly", "believe", "a", "paradigm", "shift", "in", "culture", "and", "mindset", "is", "needed", "in", "the", "US", ",", "&", "amp", ";", "certainly", "some", "policy", "as", "well", ",", "such", "as", "getting", "money", "or", "if", "politics"]
# ::lemmas ["this", "do", "not", "necessarily", "mean", "government", "itself", "need", "to", "be", "the", "big", "brother", "(", "i", "be", "fully", "aware", "of", "the", "other", "logical", "extreme", ")", ".", "but", "i", "certainly", "believe", "a", "paradigm", "shift", "in", "culture", "and", "mindset", "be", "need", "in", "the", "US", ",", "&", "amp", ";", "certainly", "some", "policy", "as", "well", ",", "such", "as", "get", "money", "or", "if", "politic"]
(c1-21 / multi-sentence
       :snt1 (c1-33 / possible-01
                    :ARG1 (c1-12 / mean-01
                                 :ARG1 (c1-15 / this)
                                 :ARG2 (c1-30 / need-01
                                              :ARG0 (c1-16 / government-organization
                                                           :ARG0-of (c1-5 / govern-01))
                                              :ARG1 (c1-13 / have-rel-role-91
                                                           :ARG0 c1-16
                                                           :ARG1 c1-16
                                                           :ARG2 (c1-20 / brother
                                                                        :mod (c1-1 / big))))
                                 :ARG1-of (c1-25 / cause-01
                                                 :ARG0 (c1-31 / realize-01
                                                              :ARG0 (c1-35 / i)
                                                              :ARG1 (c1-32 / extreme
                                                                           :mod (c1-2 / logical)
                                                                           :mod (c1-9 / other))
                                                              :degree (c1-29 / full))))
                    :polarity -)
       :snt2 (c1-18 / contrast-01
                    :ARG2 (c1-8 / believe-01
                                :ARG0 c1-35
                                :ARG1 (c1-23 / need-01
                                             :ARG1 (c1-0 / shift-01
                                                         :ARG1 (c1-17 / and
                                                                      :op1 (c1-4 / culture)
                                                                      :op2 (c1-27 / mindset))
                                                         :mod (c1-22 / paradigm))
                                             :location (c1-28 / country
                                                              :name (c1-34 / name
                                                                           :op1 "US")))
                                :mod (c1-10 / certain))
                    :snt3 (c1-6 / policy-01
                                :mod (c1-26 / certain)
                                :mod (c1-11 / some)
                                :mod (c1-14 / as-well)
                                :example (c1-19 / or
                                                :op1 (c1-7 / get-01
                                                           :ARG1 (c1-24 / money))
                                                :op2 (c1-3 / politics)))))

# ::snt Ich wei nicht babe, Google mal wie viel die Wert ist
# ::tokens ["Ich", "wei", "nicht", "babe", ",", "Google", "mal", "wie", "viel", "die", "Wert", "ist"]
# ::lemmas ["Ich", "wei", "nicht", "babe", ",", "Google", "mal", "wie", "viel", "die", "Wert", "ist"]
(c3-4 / say-01
      :ARG0 (c3-11 / i)
      :ARG1 (c3-12 / and
                   :op1 (c3-13 / get-01
                               :ARG1 (c3-9 / we)
                               :ARG2 (c3-2 / nicht)
                               :mod (c3-5 / ich))
                   :op2 (c3-14 / google-01
                               :ARG0 (c3-1 / you)
                               :manner (c3-3 / mal)
                               :ARG1-of (c3-7 / equal-01
                                              :ARG2 (c3-6 / die-01
                                                          :ARG1 (c3-10 / thing
                                                                       :name (c3-8 / name
                                                                                   :op1 "Wert"))))
                               :mode imperative))
      :ARG2 (c3-0 / babe))

# ::snt kann ich meinen uterus irgendwie spenden?
# ::tokens ["kann", "ich", "meinen", "uterus", "irgendwie", "spenden", "?"]
# ::lemmas ["kann", "ich", "meinen", "uterus", "irgendwie", "spenden", "?"]
(c4-3 / possible-01
      :ARG1 (c4-2 / spend-01
                  :ARG0 (c4-1 / person
                              :name (c4-0 / name
                                          :op1 "Iain"
                                          :op2 "Duncan"
                                          :op3 "Smith")
                              :part (c4-5 / uterus
                                          :ARG3-of c4-2)))
      :polarity (c4-4 / amr-unknown))

# ::snt Don't think so
# ::tokens ["Do", "n't", "think", "so"]
# ::lemmas ["do", "not", "think", "so"]
(c5-2 / think-01
      :ARG0 (c5-1 / i)
      :ARG1 (c5-0 / so)
      :polarity -)

# ::snt Yeah I get it. But that's not specifically the point. I just wanted to know if it were possible
# ::tokens ["Yeah", "I", "get", "it", ".", "But", "that", "'s", "not", "specifically", "the", "point", ".", "I", "just", "wanted", "to", "know", "if", "it", "were", "possible"]
# ::lemmas ["yeah", "i", "get", "it", ".", "but", "that", "be", "not", "specifically", "the", "point", ".", "i", "just", "want", "to", "know", "if", "it", "be", "possible"]
(c6-2 / multi-sentence
      :snt1 (c6-13 / get-30
                   :ARG0 (c6-11 / i)
                   :ARG1 (c6-5 / it)
                   :mod (c6-1 / yeah))
      :snt2 (c6-8 / contrast-01
                  :ARG2 (c6-6 / point-03
                              :ARG1 (c6-12 / that)
                              :ARG1-of (c6-4 / specific-02)
                              :polarity -))
      :snt3 (c6-9 / want-01
                  :ARG0 (c6-14 / i)
                  :ARG1 (c6-7 / know-01
                              :ARG0 c6-14
                              :ARG1 (c6-3 / possible-01
                                          :ARG1 (c6-0 / it)))
                  :mod (c6-10 / just)))

# ::snt What if some lesbians do want their body to be able do have children? Being lesbian doesn't equal not getting pregnant (hope you get me)
# ::tokens ["What", "if", "some", "lesbians", "do", "want", "their", "body", "to", "be", "able", "do", "have", "children", "?", "Being", "lesbian", "does", "n't", "equal", "not", "getting", "pregnant", "(", "hope", "you", "get", "me", ")"]
# ::lemmas ["what", "if", "some", "lesbian", "do", "want", "their", "body", "to", "be", "able", "do", "have", "child", "?", "be", "lesbian", "do", "not", "equal", "not", "get", "pregnant", "(", "hope", "you", "get", "i", ")"]
(c7-2 / multi-sentence
      :snt1 (c7-5 / have-condition-91
                  :ARG1 (c7-13 / amr-unknown)
                  :ARG2 (c7-9 / want-01
                              :ARG0 (c7-6 / lesbian
                                          :mod (c7-3 / some))
                              :ARG1 (c7-7 / possible-01
                                          :ARG1 (c7-11 / have-05
                                                       :ARG0 (c7-0 / body
                                                                   :poss c7-6)
                                                       :ARG1 (c7-10 / child)))))
      :snt2 (c7-4 / equal-01
                  :ARG1 c7-6
                  :domain c7-6
                  :polarity -)
      :ARG2 (c7-12 / impregnate-01
                   :ARG1 c7-6
                   :polarity -)
      :ARG1-of (c7-8 / hope-01
                     :ARG0 (c7-1 / you)))

# ::snt Really thought about putting Haywire in there, because I both love the film and enjoy Douglas' performance but it just seemed pushing it too far, as he isn't in it quite enough. So it ended on the list cutting room floor with Fatal Attraction and The China Syndrome, among others.
# ::tokens ["Really", "thought", "about", "putting", "Haywire", "in", "there", ",", "because", "I", "both", "love", "the", "film", "and", "enjoy", "Douglas", "'", "performance", "but", "it", "just", "seemed", "pushing", "it", "too", "far", ",", "as", "he", "is", "n't", "in", "it", "quite", "enough", ".", "So", "it", "ended", "on", "the", "list", "cutting", "room", "floor", "with", "Fatal", "Attraction", "and", "The", "China", "Syndrome", ",", "among", "others", "."]
# ::lemmas ["really", "think", "about", "put", "Haywire", "in", "there", ",", "because", "i", "both", "love", "the", "film", "and", "enjoy", "Douglas", "'", "performance", "but", "it", "just", "seem", "push", "it", "too", "far", ",", "as", "he", "be", "not", "in", "it", "quite", "enough", ".", "so", "it", "end", "on", "the", "list", "cut", "room", "floor", "with", "Fatal", "Attraction", "and", "The", "China", "Syndrome", ",", "among", "other", "."]
(c10-21 / multi-sentence
        :snt1 (c10-14 / think-01
                      :ARG0 (c10-38 / i)
                      :ARG1 (c10-34 / put-01
                                    :ARG0 c10-38
                                    :ARG1 (c10-22 / person
                                                  :name (c10-30 / name
                                                                :op1 "Haywire"))
                                    :ARG2 (c10-27 / there))
                      :ARG1-of (c10-32 / real-04)
                      :ARG1-of (c10-25 / cause-01
                                       :ARG0 (c10-20 / contrast-01
                                                     :ARG1 (c10-13 / and
                                                                   :op1 (c10-1 / love-01
                                                                               :ARG0 c10-38
                                                                               :ARG1 (c10-29 / film))
                                                                   :op2 (c10-33 / enjoy-01
                                                                                :ARG0 c10-38
                                                                                :ARG1 (c10-4 / perform-01
                                                                                             :ARG0 (c10-2 / person
                                                                                                          :name (c10-23 / name
                                                                                                                        :op1 "Douglas")))))
                                                     :ARG2 (c10-0 / seem-01
                                                                  :ARG1 (c10-12 / push-01
                                                                                :ARG0 c10-29
                                                                                :ARG1 c10-29
                                                                                :ARG2 (c10-35 / far
                                                                                              :ARG2-of (c10-10 / have-degree-91
                                                                                                               :ARG1 c10-29
                                                                                                               :ARG3 (c10-39 / too))))
                                                                  :ARG1-of (c10-3 / cause-01
                                                                                  :ARG0 (c10-37 / have-part-91
                                                                                                :ARG1 c10-2
                                                                                                :ARG2 c10-29
                                                                                                :ARG1-of (c10-9 / have-quant-91
                                                                                                                :ARG3 (c10-15 / enough
                                                                                                                              :degree (c10-16 / quite)))
                                                                                                :polarity -))
                                                                  :mod (c10-11 / just)))))
        :snt2 (c10-28 / cause-01
                      :ARG1 (c10-24 / end-01
                                    :ARG1 (c10-8 / it)
                                    :ARG2 (c10-17 / list-01
                                                  :ARG2 (c10-18 / and
                                                                :op1 (c10-6 / show
                                                                            :name (c10-36 / name
                                                                                          :op1 " Fatal"
                                                                                          :op2 "Attraction"))
                                                                :op2 (c10-5 / show
                                                                            :name (c10-26 / name
                                                                                          :op1 "The"
                                                                                          :op2 "China"
                                                                                          :op3 "Syndrome"))
                                                                :ARG1-of (c10-19 / include-91
                                                                                 :ARG2 (c10-31 / show
                                                                                               :mod (c10-7 / other))))))))

# ::snt Yes, that's the one I tried to fit in. It was originally in because I was going to leave out Behind the Candelabra, because it was a 'TV movie'; but it made the cut at the last moment. Douglas' work with Soderbergh is a fun small aspect of their careers.
# ::tokens ["Yes", ",", "that", "'s", "the", "one", "I", "tried", "to", "fit", "in", ".", "It", "was", "originally", "in", "because", "I", "was", "going", "to", "leave", "out", "Behind", "the", "Candelabra", ",", "because", "it", "was", "a", "'", "TV", "movie", "'", ";", "but", "it", "made", "the", "cut", "at", "the", "last", "moment", ".", "Douglas", "'", "work", "with", "Soderbergh", "is", "a", "fun", "small", "aspect", "of", "their", "careers", "."]
# ::lemmas ["yes", ",", "that", "be", "the", "one", "i", "try", "to", "fit", "in", ".", "it", "be", "originally", "in", "because", "i", "be", "go", "to", "leave", "out", "behind", "the", "Candelabra", ",", "because", "it", "be", "a", "'", "tv", "movie", "'", ";", "but", "it", "make", "the", "cut", "at", "the", "last", "moment", ".", "Douglas", "'", "work", "with", "Soderbergh", "be", "a", "fun", "small", "aspect", "of", "their", "career", "."]
(c11-17 / multi-sentence
        :snt1 (c11-10 / try-01
                      :ARG0 (c11-31 / i)
                      :ARG1 (c11-25 / fit-in-02
                                    :ARG0 c11-31
                                    :ARG1 (c11-5 / one
                                                 :domain (c11-22 / that))))
        :snt2 (c11-21 / contrast-01
                      :ARG1 (c11-14 / cause-01
                                    :ARG0 (c11-2 / leave-out-03
                                                 :ARG0 (c11-7 / i)
                                                 :ARG1 (c11-30 / work-01
                                                               :ARG0 (c11-27 / person
                                                                             :name (c11-26 / name
                                                                                           :op1 "Douglas"))
                                                               :ARG3 (c11-18 / person
                                                                             :name (c11-19 / name
                                                                                           :op1 "Soderbergh")))
                                                 :ARG1-of (c11-3 / cause-01
                                                                 :ARG0 (c11-8 / movie
                                                                              :mod (c11-32 / television)
                                                                              :domain c11-30)))
                                    :ARG1 (c11-16 / be-located-at-91
                                                  :ARG1 (c11-13 / it)
                                                  :ARG2 (c11-0 / inside)
                                                  :mod (c11-15 / original)))
                      :ARG2 (c11-23 / make-02
                                    :ARG0 c11-13
                                    :ARG1 (c11-24 / cut-02
                                                  :time (c11-20 / moment
                                                                :mod (c11-12 / last)))))
        :snt3 (c11-11 / aspect
                      :mod (c11-1 / small)
                      :part-of (c11-6 / career
                                      :poss (c11-9 / and
                                                   :op1 (c11-4 / person
                                                               :name (c11-28 / name
                                                                             :op1 "Douglas"))
                                                   :op2 c11-18)
                                      :ARG1-of (c11-29 / fun-01))))

# ::snt Actually, there must be a way to get Fatal Attraction in there as that feels like Douglas canon.
# ::tokens ["Actually", ",", "there", "must", "be", "a", "way", "to", "get", "Fatal", "Attraction", "in", "there", "as", "that", "feels", "like", "Douglas", "canon", "."]
# ::lemmas ["actually", ",", "there", "must", "be", "a", "way", "to", "get", "Fatal", "Attraction", "in", "there", "as", "that", "feel", "like", "Douglas", "canon", "."]
(c12-7 / infer-01
       :ARG1 (c12-5 / way
                    :manner-of (c12-9 / get-05
                                      :ARG1 (c12-8 / thing
                                                   :name (c12-1 / name
                                                                :op1 " Fatal"
                                                                :op2 "Attraction"))
                                      :ARG2 (c12-11 / there)))
       :ARG1-of (c12-2 / actual-02)
       :ARG1-of (c12-6 / cause-01
                       :ARG0 (c12-0 / feel-05
                                    :ARG1 c12-8
                                    :ARG2 (c12-10 / canon
                                                  :mod (c12-4 / person
                                                              :name (c12-3 / name
                                                                           :op1 "Douglas"))))))

# ::snt Damn. I find that list impossible to find any fault with whatsoever.
# ::tokens ["Damn", ".", "I", "find", "that", "list", "impossible", "to", "find", "any", "fault", "with", "whatsoever", "."]
# ::lemmas ["damn", ".", "i", "find", "that", "list", "impossible", "to", "find", "any", "fault", "with", "whatsoever", "."]
(c13-1 / multi-sentence
       :snt1 (c13-10 / damn
                     :mode expressive)
       :snt2 (c13-0 / find-02
                    :ARG0 (c13-8 / i)
                    :ARG1 (c13-3 / possible-01
                                 :ARG1 (c13-4 / find-02
                                              :ARG0 c13-8
                                              :ARG1 (c13-5 / fault-01
                                                           :ARG1 (c13-9 / thing
                                                                        :ARG2-of (c13-6 / list-01)
                                                                        :mod (c13-11 / that))
                                                           :mod (c13-2 / any)
                                                           :degree (c13-7 / whatsoever)))
                                 :polarity -)))

# ::snt Very well said
# ::tokens ["Very", "well", "said"]
# ::lemmas ["very", "well", "say"]
(c14-2 / say-01
       :manner (c14-0 / good-02
                      :degree (c14-1 / very)))

# ::snt Maryrose
# ::tokens ["Maryrose"]
# ::lemmas ["Maryrose"]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "Maryrose"))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c16-1 / laugh-01
       :manner (c16-0 / loud)
       :mode expressive)

# ::snt She must be a Sharon Stone fan! LOL
# ::tokens ["She", "must", "be", "a", "Sharon", "Stone", "fan", "!", "LOL"]
# ::lemmas ["she", "must", "be", "a", "Sharon", "Stone", "fan", "!", "LOL"]
(c18-6 / infer-01
       :ARG1 (c18-0 / fan
                    :domain (c18-2 / she)
                    :mod (c18-4 / person
                                :name (c18-1 / name
                                             :op1 "Sharon"
                                             :op2 "Stone")))
       :ARG2-of (c18-5 / laugh-01
                       :ARG0 (c18-3 / i)
                       :manner (c18-7 / loud)
                       :mode expressive)
       :mode expressive)

# ::snt But it's about seeing a lady's hoohah! That never gets old to the eternal -year-old boys who have the run of Hollywood.
# ::tokens ["But", "it", "'s", "about", "seeing", "a", "lady", "'s", "hoohah", "!", "That", "never", "gets", "old", "to", "the", "eternal", "-year", "-", "old", "boys", "who", "have", "the", "run", "of", "Hollywood", "."]
# ::lemmas ["but", "it", "be", "about", "see", "a", "lady", "'s", "hoohah", "!", "that", "never", "get", "old", "to", "the", "eternal", "-year", "-", "old", "boy", "who", "have", "the", "run", "of", "Hollywood", "."]
(c19-11 / multi-sentence
        :snt1 (c19-12 / contrast-01
                      :ARG2 (c19-9 / concern-02
                                   :ARG0 (c19-18 / it)
                                   :ARG1 (c19-0 / see-01
                                                :ARG1 (c19-4 / hoohah
                                                             :poss (c19-1 / lady)))))
        :snt2 (c19-7 / get-03
                     :ARG1 (c19-6 / that)
                     :ARG2 (c19-2 / old)
                     :ARG4 (c19-10 / boy
                                   :age (c19-13 / temporal-quantity
                                                :unit (c19-3 / year)
                                                :quant 1)
                                   :ARG0-of (c19-17 / have-03
                                                    :ARG1 (c19-15 / run-01
                                                                  :ARG1 (c19-5 / market-sector
                                                                               :name (c19-14 / name
                                                                                             :op1 "Hollywood"))))
                                   :mod (c19-16 / eternal))
                     :time (c19-8 / ever)
                     :polarity -))

# ::snt Movie was good.
# ::tokens ["Movie", "was", "good", "."]
# ::lemmas ["movie", "be", "good", "."]
(c20-0 / good-02
       :ARG1 (c20-1 / movie))

# ::snt Whats really disturbing is you went into this movie thinking you were gonna see a masterpiece The movie is what it is. I dunno why people like you expect it to be so thought provoking?
# ::tokens ["What", "s", "really", "disturbing", "is", "you", "went", "into", "this", "movie", "thinking", "you", "were", "gon", "na", "see", "a", "masterpiece", "The", "movie", "is", "what", "it", "is", ".", "I", "dunno", "why", "people", "like", "you", "expect", "it", "to", "be", "so", "thought", "provoking", "?"]
# ::lemmas ["what", "s", "really", "disturbing", "be", "you", "go", "into", "this", "movie", "thinking", "you", "be", "going", "to", "see", "a", "masterpiece", "the", "movie", "be", "what", "it", "be", ".", "i", "dunno", "why", "people", "like", "you", "expect", "it", "to", "be", "so", "think", "provoke", "?"]
(c21-9 / multi-sentence
       :snt1 (c21-19 / disturb-01
                     :ARG0 (c21-7 / think-01
                                  :ARG0 (c21-3 / you)
                                  :ARG1 (c21-0 / see-01
                                               :ARG0 c21-3
                                               :ARG1 (c21-4 / masterpiece)))
                     :degree (c21-15 / really))
       :snt2 (c21-5 / have-mod-91
                    :ARG1 (c21-14 / movie)
                    :ARG2 (c21-11 / movie))
       :snt3 (c21-6 / know-01
                    :ARG0 (c21-18 / i)
                    :ARG1 (c21-13 / thing
                                  :ARG0-of (c21-12 / cause-01
                                                   :ARG1 (c21-16 / expect-01
                                                                 :ARG0 (c21-17 / person
                                                                               :ARG1-of (c21-1 / resemble-01
                                                                                               :ARG2 c21-3))
                                                                 :ARG1 (c21-10 / provoke-01
                                                                               :ARG0 c21-14
                                                                               :ARG2 c21-7)
                                                                 :degree (c21-2 / so))))
                    :polarity -)
       :polarity (c21-8 / amr-unknown))

# ::snt Oh good lord, are we *still* riffing on Basic Instinct? In ?
# ::tokens ["Oh", "good", "lord", ",", "are", "we", "*", "still", "*", "riffing", "on", "Basic", "Instinct", "?", "In", "?"]
# ::lemmas ["oh", "good", "lord", ",", "be", "we", "*", "still", "*", "riffing", "on", "Basic", "Instinct", "?", "in", "?"]
(c22-2 / multi-sentence
       :snt1 (c22-4 / riff-01
                    :ARG0 (c22-7 / we)
                    :ARG2 (c22-5 / product
                                 :name (c22-1 / name
                                              :op1 "Basic"
                                              :op2 "Instinct"))
                    :mod (c22-3 / still)
                    :polarity (c22-9 / amr-unknown)
                    :mod (c22-6 / lord
                                :ARG1-of (c22-10 / good-02)))
       :snt2 (c22-0 / be-located-at-91
                    :polarity (c22-8 / amr-unknown)))

# ::snt It really is a mess movie wise, its tone doesn't work, its humour doesn't work and its mystery doesn't work and the BASIC INSTINCT homage just made me cringe
# ::tokens ["It", "really", "is", "a", "mess", "movie", "wise", ",", "its", "tone", "does", "n't", "work", ",", "its", "humour", "does", "n't", "work", "and", "its", "mystery", "does", "n't", "work", "and", "the", "BASIC", "INSTINCT", "homage", "just", "made", "me", "cringe"]
# ::lemmas ["it", "really", "be", "a", "mess", "movie", "wise", ",", "its", "tone", "do", "not", "work", ",", "its", "humour", "do", "not", "work", "and", "its", "mystery", "do", "not", "work", "and", "the", "BASIC", "INSTINCT", "homage", "just", "make", "i", "cringe"]
(c23-13 / and
        :op1 (c23-1 / mess
                    :domain (c23-12 / it)
                    :topic (c23-4 / movie)
                    :ARG1-of (c23-3 / real-04))
        :op2 (c23-14 / and
                     :op1 (c23-8 / work-09
                                 :ARG1 (c23-11 / tone
                                               :poss c23-12)
                                 :polarity -)
                     :op2 (c23-7 / work-09
                                 :ARG1 (c23-5 / humor
                                              :poss c23-12)
                                 :polarity -)
                     :op3 (c23-17 / work-09
                                  :ARG1 (c23-16 / mystery
                                                :poss c23-12)
                                  :polarity -)
                     :op4 (c23-6 / make-02
                                 :ARG0 (c23-10 / homage
                                               :mod (c23-0 / basic))
                                 :ARG1 (c23-9 / cringe-01
                                              :ARG0 (c23-2 / i))
                                 :mod (c23-15 / just))))

# ::snt A puppet is ripped apart by dogs -- you know, for laughs -- in the offensive AF racism parable that is the revolting .
# ::tokens ["A", "puppet", "is", "ripped", "apart", "by", "dogs", "--", "you", "know", ",", "for", "laughs", "--", "in", "the", "offensive", "AF", "racism", "parable", "that", "is", "the", "revolting", "."]
# ::lemmas ["a", "puppet", "be", "rip", "apart", "by", "dog", "--", "you", "know", ",", "for", "laugh", "--", "in", "the", "offensive", "af", "racism", "parable", "that", "be", "the", "revolting", "."]
(c24-2 / rip-01
       :ARG0 (c24-8 / dog)
       :ARG1 (c24-4 / puppet)
       :manner (c24-7 / apart)
       :purpose (c24-3 / laugh-01)
       :location (c24-1 / parable
                        :topic (c24-9 / racism
                                      :ARG0-of (c24-0 / offend-01)
                                      :mod (c24-6 / AF))
                        :ARG0-of (c24-5 / revolting-02)))

# ::snt Wau que preciosa
# ::tokens ["Wau", "que", "preciosa"]
# ::lemmas ["wau", "que", "preciosa"]
(c25-0 / wau
       :mod (c25-1 / preciosa))

# ::snt Tu me l'a dj dit et je suis d'accord
# ::tokens ["Tu", "me", "l'a", "dj", "dit", "et", "je", "suis", "d'accord"]
# ::lemmas ["tu", "i", "l'a", "dj", "dit", "et", "je", "suis", "d'accord"]
(c26-4 / and
       :op1 (c26-0 / you
                   :domain (c26-3 / i)
                   :mod (c26-5 / dit
                               :mod (c26-1 / dj)))
       :op2 (c26-2 / je-suis-d'accord))

# ::snt On dirait t'es manchot
# ::tokens ["On", "dirait", "t'es", "manchot"]
# ::lemmas ["on", "dirait", "t'es", "manchot"]
(c27-0 / dirait-t'es)

# ::snt bahhhhhhhh voyons, pas nous mdrrr
# ::tokens ["bahhhhhhhh", "voyons", ",", "pas", "nous", "mdrrr"]
# ::lemmas ["bahhhhhhhh", "voyon", ",", "pas", "nous", "mdrrr"]
(c28-2 / say-01
       :ARG0 (c28-5 / i)
       :ARG1 (c28-6 / and
                    :op1 (c28-0 / bah
                                :mode expressive)
                    :op2 (c28-1 / nous
                                :mode expressive))
       :ARG2 (c28-4 / person
                    :name (c28-3 / name
                                 :op1 "Violet")))

# ::snt non mtn ta les cheveux de Sully en +
# ::tokens ["non", "mtn", "ta", "les", "cheveux", "de", "Sully", "en", "+"]
# ::lemmas ["non", "mtn", "ta", "les", "cheveux", "de", "Sully", "en", "+"]
(c29-0 / multi-sentence
       :snt1 (c29-3 / possible-01
                    :ARG1 (c29-2 / event
                                 :name (c29-1 / name
                                              :op1 "Mtn"))
                    :polarity -)
       :snt2 (c29-4 / et-cetera
                    :snt3-of c29-0))

# ::snt Mdrrr des bails de ralisme
# ::tokens ["Mdrrr", "des", "bails", "de", "ralisme"]
# ::lemmas ["Mdrrr", "des", "bail", "de", "ralisme"]
(c30-0 / amr-unintelligible
       :value "Mdrrr des bails de ralisme")

# ::snt cest quoi ce pessimisme?
# ::tokens ["cest", "quoi", "ce", "pessimisme", "?"]
# ::lemmas ["c", "quoi", "ce", "pessimisme", "?"]
(c31-0 / certain
       :polarity (c31-2 / amr-unknown)
       :domain (c31-1 / pessimism))

# ::snt dead
# ::tokens ["dead"]
# ::lemmas ["dead"]
(c34-0 / die-01)

# ::snt Tes chaud ?
# ::tokens ["Tes", "chaud", "?"]
# ::lemmas ["tes", "chaud", "?"]
(c35-0 / chaud
       :polarity (c35-3 / amr-unknown)
       :mod (c35-2 / company
                   :name (c35-1 / name
                                :op1 "Tes")))

# ::snt Reminds me of this mortifying experience. My poor parents. They must have thought I was trying to imply something awful about my old man, Bill Snr.
# ::tokens ["Reminds", "me", "of", "this", "mortifying", "experience", ".", "My", "poor", "parents", ".", "They", "must", "have", "thought", "I", "was", "trying", "to", "imply", "something", "awful", "about", "my", "old", "man", ",", "Bill", "Snr", "."]
# ::lemmas ["remind", "i", "of", "this", "mortifying", "experience", ".", "my", "poor", "parent", ".", "they", "must", "have", "think", "i", "be", "try", "to", "imply", "something", "awful", "about", "my", "old", "man", ",", "Bill", "Snr", "."]
(c36-11 / multi-sentence
        :snt1 (c36-15 / remind-01
                      :ARG1 (c36-16 / experience-01
                                    :mod (c36-9 / this)
                                    :ARG0-of (c36-6 / horrify-01))
                      :ARG2 (c36-19 / i))
        :snt2 (c36-17 / person
                      :mod (c36-12 / poor)
                      :ARG0-of (c36-18 / have-rel-role-91
                                       :ARG1 c36-19
                                       :ARG2 (c36-3 / parent)))
        :snt3 (c36-5 / infer-01
                     :ARG1 (c36-13 / think-01
                                   :ARG0 (c36-20 / they)
                                   :ARG1 (c36-2 / try-01
                                                :ARG0 (c36-10 / i)
                                                :ARG1 (c36-0 / imply-01
                                                             :ARG0 c36-10
                                                             :ARG1 (c36-1 / something
                                                                          :mod (c36-8 / awful)
                                                                          :topic (c36-7 / man
                                                                                        :name (c36-14 / name
                                                                                                      :op1 "Bill"
                                                                                                      :op2 "Snr")
                                                                                        :poss c36-10
                                                                                        :mod (c36-4 / old))))))))

# ::snt Pardon monsieur je me suis tromper de rponse ! (Tu est un gnie)
# ::tokens ["Pardon", "monsieur", "je", "me", "suis", "tromper", "de", "rponse", "!", "(", "Tu", "est", "un", "gnie", ")"]
# ::lemmas ["Pardon", "monsieur", "je", "i", "suis", "tromper", "de", "rponse", "!", "(", "Tu", "e", "un", "gnie", ")"]
(c38-2 / multi-sentence
       :snt1 (c38-8 / pardon-02
                    :ARG0 (c38-0 / you)
                    :ARG1 (c38-3 / person
                                 :name (c38-1 / name
                                              :op1 "Monsieur"))
                    :mode imperative)
       :snt2 (c38-7 / have-mod-91
                    :ARG1 (c38-9 / i)
                    :ARG2 (c38-10 / tromper-de-rponse))
       :snt3 (c38-4 / say-01
                    :ARG0 (c38-5 / i)
                    :ARG1 (c38-11 / you)
                    :ARG2 (c38-6 / amr-un-gnie)))

# ::snt Mais toi tes un batard tu veut jamais me suivre
# ::tokens ["Mais", "toi", "tes", "un", "batard", "tu", "veut", "jamais", "me", "suivre"]
# ::lemmas ["Mais", "toi", "te", "un", "batard", "tu", "veut", "jamais", "i", "suivre"]
(c39-2 / multi-sentence
       :snt1 (c39-10 / ask-01
                     :ARG0 (c39-9 / i)
                     :ARG1 (c39-0 / batard
                                  :polarity -)
                     :ARG2 (c39-1 / you))
       :snt2 (c39-6 / veut-01
                    :ARG0 (c39-11 / you)
                    :ARG1 (c39-8 / person
                                 :name (c39-3 / name
                                              :op1 "Jesus")
                                 :ARG0-of (c39-7 / have-rel-role-91
                                                 :ARG1 (c39-5 / i)
                                                 :ARG2 (c39-4 / suivre)))))

# ::snt Ah gros j'ai bcp rflchi pour en arriver l
# ::tokens ["Ah", "gros", "j'ai", "bcp", "rflchi", "pour", "en", "arriver", "l"]
# ::lemmas ["Ah", "gros", "j'ai", "bcp", "rflchi", "pour", "en", "arriver", "l"]
(c40-4 / pour-02
       :ARG1 (c40-1 / person
                    :mod (c40-5 / country
                                :name (c40-0 / name
                                             :op1 "France")))
       :ARG3 (c40-7 / person
                    :name (c40-3 / name
                                 :op1 "Rflchi"))
       :mod (c40-2 / ah
                   :mode expressive)
       :ARG1-of (c40-8 / cause-01
                       :ARG0 (c40-6 / arrive-01
                                    :ARG1 c40-1)))

# ::snt Tes grave malin toi
# ::tokens ["Tes", "grave", "malin", "toi"]
# ::lemmas ["tes", "grave", "malin", "toi"]
(c41-0 / grave
       :mod (c41-1 / malin-toi)
       :mod (c41-2 / Tes))

# ::snt ik zei nog: pulp fiction
# ::tokens ["ik", "zei", "nog", ":", "pulp", "fiction"]
# ::lemmas ["ik", "zei", "nog", ":", "pulp", "fiction"]
(c42-0 / fiction
       :mod (c42-2 / pulp)
       :domain (c42-3 / work-of-art
                      :name (c42-1 / name
                                   :op1 "ik"
                                   :op2 "Zei"
                                   :op3 "Nog")))

# ::snt Uf i fell in love with her on that period of time...i was a tennager and she blows my mind (and entirely generation too)
# ::tokens ["Uf", "i", "fell", "in", "love", "with", "her", "on", "that", "period", "of", "time", "...", "i", "was", "a", "tennager", "and", "she", "blows", "my", "mind", "(", "and", "entirely", "generation", "too", ")"]
# ::lemmas ["Uf", "i", "fall", "in", "love", "with", "she", "on", "that", "period", "of", "time", "...", "i", "be", "a", "tennager", "and", "she", "blow", "my", "mind", "(", "and", "entirely", "generation", "too", ")"]
(c43-10 / multi-sentence
        :snt1 (c43-14 / fall-07
                      :ARG1 (c43-18 / i)
                      :ARG2 (c43-1 / love-01
                                   :ARG0 c43-18
                                   :ARG1 (c43-0 / she))
                      :time (c43-17 / period
                                    :mod (c43-8 / time)
                                    :mod (c43-13 / that)))
        :snt2 (c43-6 / and
                     :op1 (c43-11 / person
                                  :mod (c43-12 / country
                                               :name (c43-15 / name
                                                             :op1 "Taiwan"))
                                  :domain (c43-3 / i))
                     :op2 (c43-9 / blow-08
                                 :ARG0 (c43-2 / she)
                                 :ARG1 (c43-5 / and
                                              :op1 (c43-4 / mind
                                                          :poss c43-3)
                                              :op2 (c43-7 / generation
                                                          :mod (c43-16 / entire)
                                                          :mod (c43-19 / too))))))

# ::snt Ive been binging on Highlander the last couple weeks. needs to add more seasons. Im almost done with season two.
# ::tokens ["I", "ve", "been", "binging", "on", "Highlander", "the", "last", "couple", "weeks", ".", "needs", "to", "add", "more", "seasons", ".", "I", "m", "almost", "done", "with", "season", "two", "."]
# ::lemmas ["i", "ve", "be", "binge", "on", "Highlander", "the", "last", "couple", "weeks", ".", "need", "to", "add", "more", "season", ".", "i", "m", "almost", "do", "with", "season", "two", "."]
(c44-13 / multi-sentence
        :snt1 (c44-12 / binge-01
                      :ARG0 (c44-19 / i)
                      :ARG1 (c44-1 / broadcast-program
                                   :name (c44-16 / name
                                                 :op1 "Highland"))
                      :time (c44-2 / before
                                   :op1 (c44-14 / now)
                                   :duration (c44-15 / couple
                                                     :op1 (c44-9 / temporal-quantity
                                                                 :unit (c44-18 / week)
                                                                 :quant 1))))
        :snt2 (c44-17 / need-01
                      :ARG0 (c44-5 / i)
                      :ARG1 (c44-8 / add-02
                                   :ARG0 c44-5
                                   :ARG1 (c44-0 / season
                                                :mod (c44-6 / more))))
        :snt3 (c44-11 / be-done-08
                      :ARG0 (c44-10 / i)
                      :ARG1 (c44-3 / season
                                   :ord (c44-4 / ordinal-entity
                                               :value 2))
                      :mod (c44-7 / almost)))

# ::snt Yeah, I shouldnt have to pay extra to see Sharon Stone put that show on for us.
# ::tokens ["Yeah", ",", "I", "should", "nt", "have", "to", "pay", "extra", "to", "see", "Sharon", "Stone", "put", "that", "show", "on", "for", "us", "."]
# ::lemmas ["yeah", ",", "i", "should", "not", "have", "to", "pay", "extra", "to", "see", "Sharon", "Stone", "put", "that", "show", "on", "for", "we", "."]
(c45-5 / recommend-01
       :ARG1 (c45-0 / obligate-01
                    :ARG1 (c45-10 / i)
                    :ARG2 (c45-7 / pay-01
                                 :ARG0 c45-10
                                 :ARG1 (c45-6 / extra)
                                 :ARG3 (c45-4 / see-01
                                              :ARG0 c45-10
                                              :ARG1 (c45-3 / put-on-08
                                                           :ARG0 (c45-11 / person
                                                                         :name (c45-2 / name
                                                                                      :op1 "Sharon"
                                                                                      :op2 "Stone"))
                                                           :ARG1 (c45-1 / show
                                                                        :mod (c45-9 / that))
                                                           :beneficiary (c45-8 / we))))
                    :polarity -))

# ::snt Yeah, having to rent or buy when already paying an an annual fee for Prime is bullshit. They do have some good stuff included at no additional fee, it should all be included.
# ::tokens ["Yeah", ",", "having", "to", "rent", "or", "buy", "when", "already", "paying", "an", "an", "annual", "fee", "for", "Prime", "is", "bullshit", ".", "They", "do", "have", "some", "good", "stuff", "included", "at", "no", "additional", "fee", ",", "it", "should", "all", "be", "included", "."]
# ::lemmas ["yeah", ",", "have", "to", "rent", "or", "buy", "when", "already", "pay", "an", "an", "annual", "fee", "for", "Prime", "be", "bullshit", ".", "they", "do", "have", "some", "good", "stuff", "include", "at", "no", "additional", "fee", ",", "it", "should", "all", "be", "include", "."]
(c46-15 / multi-sentence
        :snt1 (c46-14 / bullshit-01
                      :ARG1 (c46-3 / obligate-01
                                   :ARG2 (c46-13 / or
                                                 :op1 (c46-20 / rent-01)
                                                 :op2 (c46-1 / buy-01))
                                   :time (c46-21 / pay-01
                                                 :ARG1 (c46-19 / fee
                                                               :mod (c46-16 / prime)
                                                               :frequency (c46-2 / rate-entity-91
                                                                                 :ARG3 (c46-11 / temporal-quantity
                                                                                               :unit (c46-5 / year)
                                                                                               :quant 1)))
                                                 :time (c46-10 / already))))
        :snt2 (c46-9 / and
                     :op1 (c46-7 / have-03
                                 :ARG0 (c46-18 / they)
                                 :ARG1 (c46-0 / stuff
                                              :ARG1-of (c46-12 / good-02)
                                              :quant (c46-4 / some)
                                              :ARG1-of (c46-23 / include-01
                                                               :ARG2 (c46-22 / fee
                                                                             :mod (c46-8 / additional
                                                                                         :polarity -)))))
                     :op2 (c46-17 / recommend-01
                                  :ARG1 (c46-6 / include-01
                                               :ARG1 c46-0))))

# ::snt Totally!!!
# ::tokens ["Totally", "!", "!", "!"]
# ::lemmas ["totally", "!", "!", "!"]
(c47-0 / total
       :mode expressive)

# ::snt I think it's bullshit that I have to "rent" movies from after I'm already paying a monthly fee. I'm considering how I can drop it.
# ::tokens ["I", "think", "it", "'s", "bullshit", "that", "I", "have", "to", "\"", "rent", "\"", "movies", "from", "after", "I", "'m", "already", "paying", "a", "monthly", "fee", ".", "I", "'m", "considering", "how", "I", "can", "drop", "it", "."]
# ::lemmas ["i", "think", "it", "be", "bullshit", "that", "i", "have", "to", "\"", "rent", "\"", "movie", "from", "after", "i", "be", "already", "pay", "a", "monthly", "fee", ".", "i", "be", "consider", "how", "i", "can", "drop", "it", "."]
(c48-9 / multi-sentence
       :snt1 (c48-6 / think-01
                    :ARG0 (c48-17 / i)
                    :ARG1 (c48-8 / bullshit
                                 :domain (c48-1 / obligate-01
                                                :ARG1 c48-17
                                                :ARG2 (c48-15 / rent-01
                                                              :ARG0 c48-17
                                                              :ARG1 (c48-3 / movie)
                                                              :time (c48-5 / after
                                                                           :op1 (c48-16 / pay-01
                                                                                        :ARG0 c48-17
                                                                                        :ARG1 (c48-14 / fee
                                                                                                      :frequency (c48-0 / rate-entity-91
                                                                                                                        :ARG3 (c48-12 / temporal-quantity
                                                                                                                                      :unit (c48-13 / month)
                                                                                                                                      :quant 1)))
                                                                                        :time (c48-4 / already)))))))
       :snt2 (c48-11 / consider-02
                     :ARG0 (c48-2 / i)
                     :ARG1 (c48-18 / thing
                                   :manner-of (c48-10 / possible-01
                                                      :ARG1 (c48-19 / drop-05
                                                                    :ARG0 c48-2
                                                                    :ARG1 (c48-7 / it))))))

# ::snt When is Crazy not Crazy??? as only can
# ::tokens ["When", "is", "Crazy", "not", "Crazy", "?", "?", "?", "as", "only", "can"]
# ::lemmas ["when", "be", "crazy", "not", "Crazy", "?", "?", "?", "as", "only", "can"]
(c49-4 / crazy-03
       :ARG1 (c49-3 / person)
       :time (c49-5 / amr-unknown)
       :ARG1-of (c49-2 / resemble-01
                       :ARG2 (c49-1 / possible-01
                                    :mod (c49-0 / only)))
       :polarity -)

# ::snt Oui j'ai pas d'amis
# ::tokens ["Oui", "j'ai", "pas", "d'amis"]
# ::lemmas ["oui", "j'ai", "pas", "d'amis"]
(c50-0 / obligate-01
       :ARG2 (c50-1 / pas-d-amis
                    :mode expressive))
