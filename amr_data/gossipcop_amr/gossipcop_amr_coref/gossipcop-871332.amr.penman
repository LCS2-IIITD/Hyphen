# ::snt Bitch no
# ::tokens ["Bitch", "no"]
# ::lemmas ["bitch", "no"]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "Bitch"
                  :op2 "No"))

# ::snt . Get plastic surgery . Be rich oops I'm already out of luck!
# ::tokens [".", "Get", "plastic", "surgery", ".", "Be", "rich", "oops", "I", "'m", "already", "out", "of", "luck", "!"]
# ::lemmas [".", "get", "plastic", "surgery", ".", "be", "rich", "oop", "i", "be", "already", "out", "of", "luck", "!"]
(c2-3 / multi-sentence
      :snt1 (c2-10 / get-01
                   :ARG0 (c2-2 / you)
                   :ARG1 (c2-4 / surgery-01
                               :ARG1 c2-2
                               :ARG2 (c2-6 / plastic))
                   :mode imperative)
      :snt2 (c2-5 / rich
                  :domain (c2-8 / i)
                  :mod (c2-0 / oops
                             :mode expressive))
      :snt3 (c2-1 / out-05
                  :ARG1 c2-8
                  :ARG2 (c2-7 / luck)
                  :time (c2-9 / already)))

# ::snt Who would want to???
# ::tokens ["Who", "would", "want", "to", "?", "?", "?"]
# ::lemmas ["who", "would", "want", "to", "?", "?", "?"]
(c4-0 / want-01
      :ARG0 (c4-2 / amr-unknown)
      :ARG1 (c4-1 / event))

# ::snt If you want to look like you belong on a street corner!!!!!
# ::tokens ["If", "you", "want", "to", "look", "like", "you", "belong", "on", "a", "street", "corner", "!", "!", "!", "!", "!"]
# ::lemmas ["if", "you", "want", "to", "look", "like", "you", "belong", "on", "a", "street", "corner", "!", "!", "!", "!", "!"]
(c6-3 / have-condition-91
      :ARG2 (c6-5 / want-01
                  :ARG0 (c6-1 / you)
                  :ARG1 (c6-4 / look-02
                              :ARG0 c6-1
                              :ARG1 (c6-0 / belong-01
                                          :ARG0 c6-1
                                          :location (c6-6 / corner
                                                          :mod (c6-2 / street))))))

# ::snt Nope
# ::tokens ["Nope"]
# ::lemmas ["nope"]
(c7-0 / nope)

# ::snt You mean like a hoe
# ::tokens ["You", "mean", "like", "a", "hoe"]
# ::lemmas ["you", "mean", "like", "a", "hoe"]
(c8-2 / mean-01
      :ARG0 (c8-1 / you)
      :ARG2 (c8-0 / resemble-01
                  :ARG2 (c8-3 / hoe)))

# ::snt Oh grrreat, Another Kardashian getting their own show?! What's the HELL is the world coming to?
# ::tokens ["Oh", "grrreat", ",", "Another", "Kardashian", "getting", "their", "own", "show", "?", "!", "What", "'s", "the", "HELL", "is", "the", "world", "coming", "to", "?"]
# ::lemmas ["oh", "grrreat", ",", "another", "Kardashian", "get", "their", "own", "show", "?", "!", "what", "be", "the", "hell", "be", "the", "world", "come", "to", "?"]
(c10-2 / multi-sentence
       :snt1 (c10-10 / get-01
                     :ARG0 (c10-5 / person
                                  :name (c10-1 / name
                                               :op1 "Kardashian")
                                  :mod (c10-9 / another))
                     :ARG1 (c10-3 / show-04
                                  :ARG2 c10-5)
                     :mod (c10-8 / grrreat
                                 :mod (c10-0 / oh)
                                 :mode expressive))
       :snt2 (c10-6 / come-04
                    :ARG1 (c10-7 / world)
                    :ARG2 (c10-11 / amr-unknown
                                  :mod (c10-4 / hell))))

# ::snt No thanks!!!!
# ::tokens ["No", "thanks", "!", "!", "!", "!"]
# ::lemmas ["no", "thank", "!", "!", "!", "!"]
(c12-0 / have-concession-91
       :ARG1 (c12-1 / no)
       :ARG2 (c12-3 / thank-01
                    :ARG0 (c12-2 / i)))

# ::snt no thanks.....I do fine on my own
# ::tokens ["no", "thanks", ".....", "I", "do", "fine", "on", "my", "own"]
# ::lemmas ["no", "thank", ".....", "i", "do", "fine", "on", "my", "own"]
(c13-3 / multi-sentence
       :snt1 (c13-5 / have-concession-91
                    :ARG1 (c13-2 / no)
                    :ARG2 (c13-7 / thank-01
                                 :ARG0 (c13-6 / i)
                                 :mode expressive))
       :snt2 (c13-0 / fine-04
                    :ARG1 (c13-4 / i)
                    :mod (c13-1 / by-oneself)))

# ::snt No thanks.
# ::tokens ["No", "thanks", "."]
# ::lemmas ["no", "thank", "."]
(c14-0 / have-concession-91
       :ARG2 (c14-1 / no))

# ::snt People should dress like themselves. Sweet girl though...but come on. Smh
# ::tokens ["People", "should", "dress", "like", "themselves", ".", "Sweet", "girl", "though", "...", "but", "come", "on", ".", "Smh"]
# ::lemmas ["people", "should", "dress", "like", "themselves", ".", "sweet", "girl", "though", "...", "but", "come", "on", ".", "smh"]
(c15-2 / multi-sentence
       :snt1 (c15-4 / recommend-01
                    :ARG1 (c15-9 / dress-01
                                 :ARG0 (c15-6 / person
                                              :ARG1-of c15-9)
                                 :ARG1-of (c15-10 / resemble-01
                                                  :ARG2 c15-6)))
       :snt2 (c15-5 / have-concession-91
                    :ARG1 (c15-8 / girl
                                 :ARG1-of (c15-3 / sweet-03))
                    :ARG2 (c15-7 / come-on-25
                                 :ARG1 (c15-1 / you)
                                 :mode imperative))
       :snt3 (c15-0 / smh
                    :mode expressive))

# ::snt Kylie u beautiful but dress classic not jaggings all e time
# ::tokens ["Kylie", "u", "beautiful", "but", "dress", "classic", "not", "jaggings", "all", "e", "time"]
# ::lemmas ["Kylie", "u", "beautiful", "but", "dress", "classic", "not", "jagging", "all", "e", "time"]
(c16-5 / contrast-01
       :ARG1 (c16-0 / beautiful-02
                    :ARG1 (c16-4 / person
                                 :name (c16-1 / name
                                              :op1 "Kylie")))
       :ARG2 (c16-8 / dress-01
                    :ARG1 c16-4
                    :ARG2 (c16-9 / classic)
                    :ARG1-of (c16-3 / have-mod-91
                                    :ARG2 (c16-6 / jaggings)
                                    :time (c16-7 / time
                                                 :mod (c16-2 / all))
                                    :polarity -)))

# ::snt Is step : be rich???
# ::tokens ["Is", "step", ":", "be", "rich", "?", "?", "?"]
# ::lemmas ["be", "step", ":", "be", "rich", "?", "?", "?"]
(c17-2 / step-01
       :ARG2 (c17-0 / rich
                    :polarity (c17-1 / amr-unknown)))

# ::snt Y'all just lobbed that one out there for us to hit huh? We entertaining you huh?
# ::tokens ["Y'all", "just", "lobbed", "that", "one", "out", "there", "for", "us", "to", "hit", "huh", "?", "We", "entertaining", "you", "huh", "?"]
# ::lemmas ["Y'all", "just", "lob", "that", "one", "out", "there", "for", "we", "to", "hit", "huh", "?", "we", "entertain", "you", "huh", "?"]
(c18-3 / multi-sentence
       :snt1 (c18-8 / lob-01
                    :ARG0 (c18-2 / you)
                    :ARG1 (c18-0 / one
                                 :mod (c18-12 / that))
                    :ARG2 (c18-1 / out-there)
                    :mod (c18-11 / just)
                    :purpose (c18-7 / hit-01
                                    :ARG0 (c18-10 / we)
                                    :ARG1 c18-0)
                    :ARG1-of (c18-4 / request-confirmation-91))
       :snt2 (c18-6 / entertain-01
                    :polarity (c18-5 / amr-unknown)
                    :ARG0 (c18-9 / we)
                    :ARG1 (c18-13 / you)))

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c19-0 / cause-01
       :ARG0 (c19-1 / amr-unknown))

# ::snt Ah... No thanks!
# ::tokens ["Ah", "...", "No", "thanks", "!"]
# ::lemmas ["ah", "...", "no", "thank", "!"]
(c21-1 / multi-sentence
       :snt1 (c21-2 / ah
                    :mode expressive)
       :snt2 (c21-0 / thank-01
                    :polarity -
                    :mode expressive))

# ::snt I'm good...no thanks
# ::tokens ["I", "'m", "good", "...", "no", "thanks"]
# ::lemmas ["i", "be", "good", "...", "no", "thank"]
(c22-1 / multi-sentence
       :snt1 (c22-5 / good-02
                    :ARG1 (c22-3 / i))
       :snt2 (c22-2 / have-concession-91
                    :ARG1 (c22-0 / no)
                    :ARG2 (c22-4 / thank-01
                                 :ARG0 c22-3
                                 :mode expressive)))

# ::snt Gorgeous woman
# ::tokens ["Gorgeous", "woman"]
# ::lemmas ["gorgeous", "woman"]
(c23-0 / woman
       :ARG1-of (c23-1 / beautiful-02)
       :mode expressive)

# ::snt Negative
# ::tokens ["Negative"]
# ::lemmas ["negative"]
(c24-0 / negative-03)

# ::snt I'm good
# ::tokens ["I", "'m", "good"]
# ::lemmas ["i", "be", "good"]
(c25-0 / good-03
       :ARG1 (c25-1 / i))
