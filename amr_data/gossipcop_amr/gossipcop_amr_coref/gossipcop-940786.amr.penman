# ::snt I wish we would all address his friend, too!
# ::tokens ["I", "wish", "we", "would", "all", "address", "his", "friend", ",", "too", "!"]
# ::lemmas ["i", "wish", "we", "would", "all", "address", "his", "friend", ",", "too", "!"]
(c1-5 / wish-01
      :ARG0 (c1-9 / i)
      :ARG1 (c1-1 / address-02
                  :ARG0 (c1-4 / we
                              :mod (c1-8 / all))
                  :ARG1 (c1-3 / person
                              :ARG0-of (c1-2 / have-rel-role-91
                                             :ARG1 (c1-6 / he)
                                             :ARG2 (c1-0 / friend)))
                  :mod (c1-7 / too)))

# ::snt I'm sure he will get to experience it well Get it READY HARVEY
# ::tokens ["I", "'m", "sure", "he", "will", "get", "to", "experience", "it", "well", "Get", "it", "READY", "HARVEY"]
# ::lemmas ["i", "be", "sure", "he", "will", "get", "to", "experience", "it", "well", "get", "it", "ready", "harvey"]
(c2-1 / multi-sentence
      :snt1 (c2-2 / sure-02
                  :ARG0 (c2-7 / i)
                  :ARG1 (c2-8 / get-22
                              :ARG0 (c2-6 / he)
                              :ARG1 (c2-5 / experience-01
                                          :ARG0 c2-6
                                          :ARG1 (c2-3 / it))))
      :snt2 (c2-4 / read-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-9 / it)
                  :mode imperative))

# ::snt Your lack of punctuation and capitalization is overwhelming. What are you talking about?
# ::tokens ["Your", "lack", "of", "punctuation", "and", "capitalization", "is", "overwhelming", ".", "What", "are", "you", "talking", "about", "?"]
# ::lemmas ["your", "lack", "of", "punctuation", "and", "capitalization", "be", "overwhelming", ".", "what", "be", "you", "talk", "about", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / overwhelm-01
                  :ARG0 (c3-3 / lack-01
                              :ARG0 (c3-1 / you)
                              :ARG1 (c3-8 / and
                                          :op1 (c3-4 / punctuate-01
                                                     :ARG1 c3-1)
                                          :op2 (c3-5 / capitalize-01
                                                     :ARG0 c3-1))))
      :snt2 (c3-6 / talk-01
                  :ARG0 (c3-9 / you)
                  :ARG1 (c3-7 / amr-unknown)))

# ::snt Youre gonna have to slow this down for me. What are you saying?
# ::tokens ["You", "re", "gon", "na", "have", "to", "slow", "this", "down", "for", "me", ".", "What", "are", "you", "saying", "?"]
# ::lemmas ["you", "re", "going", "to", "have", "to", "slow", "this", "down", "for", "i", ".", "what", "be", "you", "say", "?"]
(c4-3 / multi-sentence
      :snt1 (c4-0 / obligate-01
                  :ARG1 (c4-2 / you)
                  :ARG2 (c4-4 / slow-down-03
                              :ARG0 c4-2
                              :ARG1 (c4-7 / this)
                              :beneficiary (c4-6 / i)))
      :snt2 (c4-1 / say-01
                  :ARG0 (c4-8 / you)
                  :ARG1 (c4-5 / amr-unknown)))

# ::snt Outside the courthouse Harvey was overheard talking to his lawyer, Im going to get off, I always do.
# ::tokens ["Outside", "the", "courthouse", "Harvey", "was", "overheard", "talking", "to", "his", "lawyer", ",", "I", "m", "going", "to", "get", "off", ",", "I", "always", "do", "."]
# ::lemmas ["outside", "the", "courthouse", "Harvey", "be", "overhear", "talk", "to", "his", "lawyer", ",", "i", "m", "go", "to", "get", "off", ",", "i", "always", "do", "."]
(c5-0 / overhear-01
      :ARG1 (c5-10 / talk-01
                   :ARG0 (c5-6 / person
                               :name (c5-2 / name
                                           :op1 "Harvey"))
                   :ARG1 (c5-11 / get-off-23
                                :ARG1 (c5-9 / i)
                                :ARG1-of (c5-12 / do-02
                                                :ARG0 c5-9
                                                :time (c5-4 / always)))
                   :ARG2 (c5-3 / person
                               :ARG0-of (c5-5 / have-rel-role-91
                                              :ARG1 c5-6
                                              :ARG2 (c5-7 / lawyer))))
      :location (c5-1 / outside
                      :op1 (c5-8 / courthouse)))

# ::snt Class action rape, didnt know that was a thing. Thats a whole lotta Raping he did. If you give $ to the right people, you can get away with anything for decades.
# ::tokens ["Class", "action", "rape", ",", "did", "nt", "know", "that", "was", "a", "thing", ".", "That", "s", "a", "whole", "lotta", "Raping", "he", "did", ".", "If", "you", "give", "$", "to", "the", "right", "people", ",", "you", "can", "get", "away", "with", "anything", "for", "decades", "."]
# ::lemmas ["class", "action", "rape", ",", "do", "not", "know", "that", "be", "a", "thing", ".", "that", "s", "a", "whole", "lotta", "rape", "he", "do", ".", "if", "you", "give", "$", "to", "the", "right", "people", ",", "you", "can", "get", "away", "with", "anything", "for", "decades", "."]
(c6-10 / multi-sentence
       :snt1 (c6-5 / know-01
                   :ARG0 (c6-20 / i)
                   :ARG1 (c6-8 / thing
                               :domain (c6-17 / rape-01
                                              :mod (c6-14 / class-action)))
                   :polarity -)
       :snt2 (c6-2 / rape-01
                   :ARG0 (c6-4 / he)
                   :quant (c6-0 / lot)
                   :mod (c6-19 / whole)
                   :ARG1-of (c6-21 / do-02
                                   :ARG0 c6-4))
       :snt3 (c6-18 / possible-01
                    :ARG1 (c6-9 / get-away-08
                                :ARG0 (c6-3 / you)
                                :ARG1 (c6-7 / anything)
                                :duration (c6-6 / multiple
                                                :op1 (c6-16 / temporal-quantity
                                                            :unit (c6-15 / decade)
                                                            :quant 1)))
                    :condition (c6-1 / give-01
                                     :ARG0 c6-3
                                     :ARG1 (c6-12 / dollar)
                                     :ARG2 (c6-11 / person
                                                  :ARG1-of (c6-13 / right-08)))))

# ::snt Its about to get nasty on harvey
# ::tokens ["Its", "about", "to", "get", "nasty", "on", "harvey"]
# ::lemmas ["its", "about", "to", "get", "nasty", "on", "harvey"]
(c7-5 / get-03
      :ARG1 (c7-3 / it)
      :ARG2 (c7-0 / nasty)
      :time (c7-4 / about-to)
      :prep-on (c7-2 / person
                     :name (c7-1 / name
                                 :op1 "Harvey")))

# ::snt Good. In this case..the more cases that surface-the better.
# ::tokens ["Good", ".", "In", "this", "case", "..", "the", "more", "cases", "that", "surface", "-", "the", "better", "."]
# ::lemmas ["good", ".", "in", "this", "case", "..", "the", "more", "case", "that", "surface", "-", "the", "well", "."]
(c10-0 / multi-sentence
       :snt1 (c10-8 / good-02)
       :snt2 (c10-4 / correlate-91
                    :ARG1 (c10-2 / more
                                 :ARG3-of (c10-3 / have-quant-91
                                                 :ARG1 (c10-10 / case-04
                                                               :ARG1-of (c10-1 / surface-01))))
                    :ARG2 (c10-9 / more
                                 :ARG3-of (c10-5 / have-degree-91
                                                 :ARG2 c10-8)))
       :ARG1-of (c10-6 / case-04
                       :ARG1 (c10-7 / this)))

# ::snt Wheres glen close? Other corrupt liberals
# ::tokens ["Where", "s", "glen", "close", "?", "Other", "corrupt", "liberals"]
# ::lemmas ["where", "s", "glen", "close", "?", "other", "corrupt", "liberal"]
(c11-1 / multi-sentence
       :snt1 (c11-7 / glen-01
                    :ARG1 (c11-5 / they)
                    :ARG2 (c11-4 / close-10)
                    :polarity (c11-6 / amr-unknown))
       :snt2 (c11-2 / person
                    :ARG1-of (c11-3 / liberal-02)
                    :ARG1-of (c11-8 / corrupt-01)
                    :mod (c11-0 / other)))

# ::snt I bet for every person who comes forward there are a minimum of ten more who won't. Weinstein has been in business for a long time, and he could have had large numbers of appointments on a daily basis.
# ::tokens ["I", "bet", "for", "every", "person", "who", "comes", "forward", "there", "are", "a", "minimum", "of", "ten", "more", "who", "wo", "n't", ".", "Weinstein", "has", "been", "in", "business", "for", "a", "long", "time", ",", "and", "he", "could", "have", "had", "large", "numbers", "of", "appointments", "on", "a", "daily", "basis", "."]
# ::lemmas ["i", "bet", "for", "every", "person", "who", "come", "forward", "there", "be", "a", "minimum", "of", "ten", "more", "who", "will", "not", ".", "Weinstein", "have", "be", "in", "business", "for", "a", "long", "time", ",", "and", "he", "could", "have", "have", "large", "number", "of", "appointment", "on", "a", "daily", "basis", "."]
(c12-11 / multi-sentence
        :snt1 (c12-10 / bet-01
                      :ARG0 (c12-19 / i)
                      :ARG2 (c12-18 / person
                                    :quant (c12-7 / at-least
                                                  :mod (c12-3 / more)
                                                  :op1 10)
                                    :ARG0-of (c12-14 / come-forward-31)
                                    :mod (c12-17 / every)))
        :snt2 (c12-6 / and
                     :op1 (c12-0 / business
                                 :domain (c12-12 / person
                                                 :name (c12-15 / name
                                                               :op1 "Weinstein"))
                                 :ARG1-of (c12-1 / long-03))
                     :op2 (c12-2 / possible-01
                                 :ARG1 (c12-4 / have-03
                                              :ARG0 c12-12
                                              :ARG1 (c12-5 / appointment-02
                                                           :quant (c12-13 / number
                                                                          :mod (c12-9 / large)))
                                              :frequency (c12-16 / rate-entity-91
                                                                 :ARG3 (c12-8 / temporal-quantity
                                                                              :unit (c12-20 / day)
                                                                              :quant 1))))))

# ::snt Harvey is going to be on the receiving end for a change in prison. Works for me!
# ::tokens ["Harvey", "is", "going", "to", "be", "on", "the", "receiving", "end", "for", "a", "change", "in", "prison", ".", "Works", "for", "me", "!"]
# ::lemmas ["harvey", "be", "go", "to", "be", "on", "the", "receiving", "end", "for", "a", "change", "in", "prison", ".", "work", "for", "i", "!"]
(c13-1 / multi-sentence
       :snt1 (c13-0 / be-located-at-91
                    :ARG1 (c13-6 / person
                                 :name (c13-2 / name
                                              :op1 "Harvey"))
                    :ARG2 (c13-5 / end
                                 :ARG0-of (c13-4 / receive-01))
                    :purpose (c13-7 / change-01
                                    :ARG1 (c13-3 / prison)))
       :snt2 (c13-8 / work-09
                    :ARG2 (c13-9 / i)))

# ::snt I wonder if Trump will pardon Weinstein as well
# ::tokens ["I", "wonder", "if", "Trump", "will", "pardon", "Weinstein", "as", "well"]
# ::lemmas ["i", "wonder", "if", "Trump", "will", "pardon", "Weinstein", "as", "well"]
(c14-5 / wonder-01
       :ARG0 (c14-6 / i)
       :ARG1 (c14-4 / pardon-01
                    :ARG0 (c14-1 / person
                                 :name (c14-0 / name
                                              :op1 "Trump"))
                    :ARG1 (c14-7 / person
                                 :name (c14-3 / name
                                              :op1 "Weinstein"))
                    :mod (c14-2 / as-well)))

# ::snt Quick Q , has Harvey ever met the queen? This dude got around, didn't he?
# ::tokens ["Quick", "Q", ",", "has", "Harvey", "ever", "met", "the", "queen", "?", "This", "dude", "got", "around", ",", "did", "n't", "he", "?"]
# ::lemmas ["Quick", "Q", ",", "have", "Harvey", "ever", "meet", "the", "queen", "?", "this", "dude", "get", "around", ",", "do", "not", "he", "?"]
(c15-1 / multi-sentence
       :snt1 (c15-10 / ask-01
                     :ARG1 (c15-5 / meet-02
                                  :ARG0 (c15-6 / person
                                               :name (c15-0 / name
                                                            :op1 "Harvey"))
                                  :ARG1 (c15-9 / queen)
                                  :time (c15-4 / ever)
                                  :ARG1-of (c15-7 / quick-02))
                     :ARG2 (c15-2 / person
                                  :name c15-0
                                  :op1 "Q"))
       :snt2 (c15-11 / get-05
                     :ARG1 (c15-12 / dude
                                   :mod (c15-8 / this))
                     :ARG2 (c15-13 / around)
                     :ARG1-of (c15-3 / request-confirmation-91)))

# ::snt Take him down &amp; lock him up. Brave women.
# ::tokens ["Take", "him", "down", "&", "amp", ";", "lock", "him", "up", ".", "Brave", "women", "."]
# ::lemmas ["take", "he", "down", "&", "amp", ";", "lock", "he", "up", ".", "brave", "woman", "."]
(c16-2 / multi-sentence
       :snt1 (c16-3 / and
                    :op1 (c16-9 / take-down-22
                                :ARG0 (c16-1 / you)
                                :ARG1 (c16-4 / he)
                                :mode imperative)
                    :op2 (c16-8 / amp)
                    :op3 (c16-5 / lock-up-03
                                :ARG0 c16-1
                                :ARG1 (c16-7 / he)
                                :mode imperative))
       :snt2 (c16-6 / woman
                    :ARG1-of (c16-0 / Brave-02)))

# ::snt here si Harvey Weinstein soon
# ::tokens ["here", "si", "Harvey", "Weinstein", "soon"]
# ::lemmas ["here", "si", "Harvey", "Weinstein", "soon"]
(c17-1 / multi-sentence
       :snt1 (c17-3 / here)
       :snt2 (c17-4 / person
                    :name (c17-0 / name
                                 :op1 "Harvey"
                                 :op2 "Weinstein")
                    :time (c17-2 / soon)))

# ::snt Look at his fukin filfy face See a look of guilt all over it
# ::tokens ["Look", "at", "his", "fukin", "filfy", "face", "See", "a", "look", "of", "guilt", "all", "over", "it"]
# ::lemmas ["look", "at", "his", "fukin", "filfy", "face", "see", "a", "look", "of", "guilt", "all", "over", "it"]
(c18-2 / multi-sentence
       :snt1 (c18-6 / look-01
                    :ARG0 (c18-1 / you)
                    :ARG1 (c18-0 / face
                                 :part-of (c18-5 / he)
                                 :mod (c18-7 / filfy
                                             :mod (c18-8 / fukin)))
                    :mode imperative)
       :snt2 (c18-4 / see-01
                    :ARG0 (c18-10 / you)
                    :ARG1 (c18-11 / look-01
                                  :ARG0 c18-10
                                  :ARG1 (c18-3 / guilt)
                                  :location (c18-9 / all-over
                                                   :op1 c18-0))
                    :mode imperative))

# ::snt This is amazing. How far the mighty have fallen...Cosby, Weinstein. I hope karma catches up to soon.
# ::tokens ["This", "is", "amazing", ".", "How", "far", "the", "mighty", "have", "fallen", "...", "Cosby", ",", "Weinstein", ".", "I", "hope", "karma", "catches", "up", "to", "soon", "."]
# ::lemmas ["this", "be", "amazing", ".", "how", "far", "the", "mighty", "have", "fall", "...", "Cosby", ",", "Weinstein", ".", "i", "hope", "karma", "catch", "up", "to", "soon", "."]
(c19-2 / multi-sentence
       :snt1 (c19-6 / amaze-01
                    :ARG0 (c19-14 / this))
       :snt2 (c19-0 / fall-01
                    :ARG1 (c19-8 / person
                                 :mod (c19-7 / mighty))
                    :extent (c19-4 / so)
                    :example (c19-13 / and
                                     :op1 (c19-3 / person
                                                 :name (c19-5 / name
                                                              :op1 "Cosby"))
                                     :op2 (c19-16 / person
                                                  :name (c19-9 / name
                                                               :op1 "Weinstein"))))
       :snt3 (c19-10 / hope-01
                     :ARG0 (c19-15 / i)
                     :ARG1 (c19-12 / catch-up-04
                                   :ARG1 (c19-11 / karma)
                                   :time (c19-1 / soon))))

# ::snt They are going to break his punk ass
# ::tokens ["They", "are", "going", "to", "break", "his", "punk", "ass"]
# ::lemmas ["they", "be", "go", "to", "break", "his", "punk", "ass"]
(c20-0 / break-01
       :ARG0 (c20-3 / they)
       :ARG1 (c20-4 / ass
                    :mod (c20-2 / punk)
                    :poss (c20-1 / he)))

# ::snt No laughing matter.. but um, "CLASS ACTION" newest for "ORGY".
# ::tokens ["No", "laughing", "matter", "..", "but", "um", ",", "\"", "CLASS", "ACTION", "\"", "newest", "for", "\"", "ORGY", "\"", "."]
# ::lemmas ["no", "laugh", "matter", "..", "but", "um", ",", "\"", "CLASS", "ACTION", "\"", "new", "for", "\"", "ORGY", "\"", "."]
(c21-7 / contrast-01
       :ARG1 (c21-0 / matter
                    :topic (c21-4 / laugh-01)
                    :polarity -)
       :ARG2 (c21-3 / have-degree-91
                    :ARG1 (c21-8 / class-action)
                    :ARG2 (c21-1 / new-01
                                 :ARG1 c21-8)
                    :ARG3 (c21-5 / most)
                    :ARG5 (c21-2 / ethnic-group
                                 :name (c21-6 / name
                                              :op1 "Orgy"))))
