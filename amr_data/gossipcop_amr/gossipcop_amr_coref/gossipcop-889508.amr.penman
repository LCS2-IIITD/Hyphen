# ::snt Hell forget what hes doing ever couple hours and this will take years to make!
# ::tokens ["Hell", "forget", "what", "he", "s", "doing", "ever", "couple", "hours", "and", "this", "will", "take", "years", "to", "make", "!"]
# ::lemmas ["hell", "forget", "what", "he", "s", "do", "ever", "couple", "hours", "and", "this", "will", "take", "years", "to", "make", "!"]
(c1-3 / and
      :op1 (c1-0 / forget-01
                 :ARG0 (c1-1 / you)
                 :ARG1 (c1-11 / thing
                              :ARG1-of (c1-13 / do-02
                                              :ARG0 (c1-5 / he)
                                              :duration (c1-8 / couple
                                                              :op1 (c1-15 / temporal-quantity
                                                                          :unit (c1-9 / hour)
                                                                          :quant 1))))
                 :mod (c1-4 / hell)
                 :mode imperative)
      :op2 (c1-10 / take-10
                  :ARG0 (c1-2 / make-01
                              :ARG1 (c1-6 / this))
                  :ARG1 (c1-7 / multiple
                              :op1 (c1-12 / temporal-quantity
                                          :unit (c1-14 / year)
                                          :quant 1))))

# ::snt He needs to just name them already. Poor Corey Haim is dead because he just couldn't deal. No money, just talk.
# ::tokens ["He", "needs", "to", "just", "name", "them", "already", ".", "Poor", "Corey", "Haim", "is", "dead", "because", "he", "just", "could", "n't", "deal", ".", "No", "money", ",", "just", "talk", "."]
# ::lemmas ["he", "need", "to", "just", "name", "they", "already", ".", "poor", "Corey", "Haim", "be", "dead", "because", "he", "just", "could", "not", "deal", ".", "no", "money", ",", "just", "talk", "."]
(c2-8 / multi-sentence
      :snt1 (c2-15 / need-01
                   :ARG0 (c2-2 / he)
                   :ARG1 (c2-10 / name-01
                                :ARG0 c2-2
                                :ARG1 (c2-7 / they)
                                :mod (c2-4 / just)
                                :time (c2-6 / already)))
      :snt2 (c2-18 / die-01
                   :ARG1 (c2-16 / person
                                :name (c2-17 / name
                                             :op1 "Corey"
                                             :op2 "Haim")
                                :mod (c2-9 / poor))
                   :ARG1-of (c2-11 / cause-01
                                   :ARG0 (c2-1 / possible-01
                                               :ARG1 (c2-12 / deal-01
                                                            :ARG0 c2-16)
                                               :mod (c2-14 / just)
                                               :polarity -)))
      :snt3 (c2-5 / and
                  :op1 (c2-3 / money
                             :polarity -)
                  :op2 (c2-13 / talk-01
                              :mod (c2-0 / just))))

# ::snt Be careful ,lot of people have gone missing,or dead ,watch your back , Corey
# ::tokens ["Be", "careful", ",", "lot", "of", "people", "have", "gone", "missing", ",", "or", "dead", ",", "watch", "your", "back", ",", "Corey"]
# ::lemmas ["be", "careful", ",", "lot", "of", "people", "have", "go", "miss", ",", "or", "dead", ",", "watch", "your", "back", ",", "Corey"]
(c3-4 / say-01
      :ARG0 (c3-10 / i)
      :ARG1 (c3-11 / and
                   :op1 (c3-8 / care-04
                              :ARG0 (c3-6 / person
                                          :name (c3-2 / name
                                                      :op1 "Corey")
                                          :part (c3-1 / back))
                              :mode imperative)
                   :op2 (c3-0 / or
                              :op1 (c3-3 / miss-01
                                         :ARG1 (c3-5 / person
                                                     :quant (c3-7 / lot)))
                              :op2 (c3-12 / die-01
                                          :ARG1 c3-5))
                   :op3 (c3-9 / watch-01
                              :ARG0 c3-6
                              :ARG1 c3-1
                              :mode imperative))
      :ARG2 c3-6)

# ::snt Like u need a film to expose how vile Hollywood is. Just say it
# ::tokens ["Like", "u", "need", "a", "film", "to", "expose", "how", "vile", "Hollywood", "is", ".", "Just", "say", "it"]
# ::lemmas ["like", "u", "need", "a", "film", "to", "expose", "how", "vile", "Hollywood", "be", ".", "just", "say", "it"]
(c4-4 / multi-sentence
      :snt1 (c4-6 / resemble-01
                  :ARG2 (c4-3 / need-01
                              :ARG0 (c4-2 / you)
                              :ARG1 (c4-0 / film)
                              :purpose (c4-8 / expose-01
                                             :ARG0 c4-0
                                             :ARG1 (c4-7 / vile-02
                                                         :ARG1 (c4-9 / market-sector
                                                                     :name (c4-10 / name
                                                                                  :op1 "Hollywood"))
                                                         :degree (c4-5 / so)))))
      :snt2 (c4-1 / say-01
                  :ARG0 c4-2
                  :mode imperative)
      :ARG1 (c4-12 / it)
      :mod (c4-11 / just))

# ::snt See if Harvey Weinstein will find it
# ::tokens ["See", "if", "Harvey", "Weinstein", "will", "find", "it"]
# ::lemmas ["see", "if", "Harvey", "Weinstein", "will", "find", "it"]
(c5-2 / see-01
      :ARG1 (c5-5 / truth-value
                  :polarity-of (c5-0 / find-01
                                     :ARG0 (c5-3 / person
                                                 :name (c5-1 / name
                                                             :op1 "Harvey"
                                                             :op2 "Weinstein"))
                                     :ARG1 (c5-4 / it))))

# ::snt Yeeeees!, about time, its news we have been waiting for.
# ::tokens ["Yeeeees", "!", ",", "about", "time", ",", "its", "news", "we", "have", "been", "waiting", "for", "."]
# ::lemmas ["yeeeee", "!", ",", "about", "time", ",", "its", "news", "we", "have", "be", "wait", "for", "."]
(c6-2 / multi-sentence
      :snt1 (c6-0 / yeees
                  :mode expressive)
      :snt2 (c6-1 / news
                  :ARG1-of (c6-4 / wait-01
                                 :ARG2 (c6-3 / we)))
      :snt3 (c6-5 / about-time))

# ::snt Why do you need $$$$$$ to bring these people. Do an interview and name them once &amp; for all!!!! They need to be exposed today.
# ::tokens ["Why", "do", "you", "need", "$", "$", "$", "$", "$", "$", "to", "bring", "these", "people", ".", "Do", "an", "interview", "and", "name", "them", "once", "&", "amp", ";", "for", "all", "!", "!", "!", "!", "They", "need", "to", "be", "exposed", "today", "."]
# ::lemmas ["why", "do", "you", "need", "$", "$", "$", "$", "$", "$", "to", "bring", "these", "people", ".", "do", "an", "interview", "and", "name", "they", "once", "&", "amp", ";", "for", "all", "!", "!", "!", "!", "they", "need", "to", "be", "expose", "today", "."]
(c7-5 / multi-sentence
      :snt1 (c7-4 / need-01
                  :ARG0 (c7-3 / you)
                  :ARG1 (c7-2 / bring-01
                              :ARG0 c7-3
                              :ARG1 (c7-9 / person
                                          :mod (c7-13 / this)))
                  :ARG1-of (c7-11 / cause-01
                                  :ARG0 (c7-6 / amr-unknown)))
      :snt2 (c7-12 / and
                   :op1 (c7-14 / interview-01
                               :ARG0 c7-3
                               :ARG1 (c7-16 / they)
                               :mode imperative)
                   :op2 (c7-8 / name-01
                              :ARG0 c7-3
                              :ARG1 c7-16
                              :mod (c7-0 / once-and-amp)
                              :mode imperative)
                   :mod (c7-1 / for-all))
      :snt3 (c7-10 / need-01
                   :ARG1 (c7-7 / expose-01
                               :ARG1 c7-16
                               :time (c7-15 / today))))

# ::snt Slowly falling apart
# ::tokens ["Slowly", "falling", "apart"]
# ::lemmas ["slowly", "fall", "apart"]
(c8-0 / fall-apart-09
      :ARG1-of (c8-1 / slow-01))

# ::snt Are you going to exhume Michael Jackson? Please do that raging drug addict...
# ::tokens ["Are", "you", "going", "to", "exhume", "Michael", "Jackson", "?", "Please", "do", "that", "raging", "drug", "addict", "..."]
# ::lemmas ["be", "you", "go", "to", "exhume", "Michael", "Jackson", "?", "please", "do", "that", "rage", "drug", "addict", "..."]
(c9-1 / multi-sentence
      :snt1 (c9-5 / exhume-01
                  :ARG0 (c9-0 / you)
                  :ARG1 (c9-6 / person
                              :name (c9-2 / name
                                          :op1 "Michael"
                                          :op2 "Jackson"))
                  :polarity (c9-10 / amr-unknown))
      :snt2 (c9-12 / do-02
                   :ARG0 (c9-11 / you)
                   :ARG1 (c9-3 / person
                               :ARG1-of (c9-9 / addict-01
                                              :ARG2 (c9-7 / drug))
                               :ARG0-of (c9-4 / rage-02)
                               :mod (c9-8 / that))
                   :mode imperative
                   :polite +))

# ::snt Which side will Lisa Bloom be representing?
# ::tokens ["Which", "side", "will", "Lisa", "Bloom", "be", "representing", "?"]
# ::lemmas ["which", "side", "will", "Lisa", "Bloom", "be", "represent", "?"]
(c10-2 / represent-01
       :ARG0 (c10-3 / person
                    :name (c10-0 / name
                                 :op1 "Lisa"
                                 :op2 "Bloom"))
       :ARG1 (c10-1 / side
                    :mod (c10-4 / amr-unknown)))

# ::snt I hope Corey gets the opportunity to expose those who ruin the innocence of children from abuse! It must be stopped!!
# ::tokens ["I", "hope", "Corey", "gets", "the", "opportunity", "to", "expose", "those", "who", "ruin", "the", "innocence", "of", "children", "from", "abuse", "!", "It", "must", "be", "stopped", "!", "!"]
# ::lemmas ["i", "hope", "Corey", "get", "the", "opportunity", "to", "expose", "those", "who", "ruin", "the", "innocence", "of", "child", "from", "abuse", "!", "it", "must", "be", "stop", "!", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-9 / hope-01
                    :ARG0 (c11-12 / i)
                    :ARG1 (c11-14 / get-01
                                  :ARG0 (c11-10 / person
                                                :name (c11-3 / name
                                                             :op1 "Corey"))
                                  :ARG1 (c11-0 / opportunity
                                               :purpose (c11-8 / expose-01
                                                               :ARG0 c11-10
                                                               :ARG1 (c11-4 / person
                                                                            :ARG0-of (c11-6 / ruin-01
                                                                                            :ARG1 (c11-5 / innocent-01
                                                                                                         :ARG1 (c11-11 / child)
                                                                                                         :ARG2 (c11-13 / abuse-01))))))))
       :snt2 (c11-1 / obligate-01
                    :ARG2 (c11-7 / stop-01
                                 :ARG1 (c11-15 / it))))

# ::snt Support you always Corey....bring them to justice!
# ::tokens ["Support", "you", "always", "Corey", "....", "bring", "them", "to", "justice", "!"]
# ::lemmas ["support", "you", "always", "Corey", "....", "bring", "they", "to", "justice", "!"]
(c12-3 / say-01
       :ARG0 (c12-6 / i)
       :ARG1 (c12-7 / and
                    :op1 (c12-0 / support-01
                                :ARG0 (c12-4 / person
                                             :name (c12-2 / name
                                                          :op1 "Corey")
                                             :ARG1-of c12-0)
                                :time (c12-8 / always))
                    :op2 (c12-1 / bring-01
                                :ARG0 c12-4
                                :ARG1 (c12-5 / they)
                                :ARG2 (c12-9 / justice)))
       :ARG2 c12-4)

# ::snt Tyler Henry told u something in his show!
# ::tokens ["Tyler", "Henry", "told", "u", "something", "in", "his", "show", "!"]
# ::lemmas ["Tyler", "Henry", "tell", "u", "something", "in", "his", "show", "!"]
(c13-5 / tell-01
       :ARG0 (c13-4 / person
                    :name (c13-2 / name
                                 :op1 "Tyler"
                                 :op2 "Henry"))
       :ARG1 (c13-3 / something)
       :ARG2 (c13-1 / you)
       :location (c13-0 / show-04
                        :ARG0 c13-4))

# ::snt I agree
# ::tokens ["I", "agree"]
# ::lemmas ["i", "agree"]
(c14-1 / agree-01
       :ARG0 (c14-0 / i))

# ::snt I support him % just worried something might happen to him in the meantime!!Prayers he gets it out&amp;is unharmed!This needs to end NOW!!
# ::tokens ["I", "support", "him", "%", "just", "worried", "something", "might", "happen", "to", "him", "in", "the", "meantime!!Prayers", "he", "gets", "it", "out&amp;is", "unharmed!This", "needs", "to", "end", "NOW", "!", "!"]
# ::lemmas ["i", "support", "he", "%", "just", "worried", "something", "might", "happen", "to", "he", "in", "the", "meantime!!prayer", "he", "get", "it", "out&amp;is", "unharmed!this", "need", "to", "end", "NOW", "!", "!"]
(c15-13 / multi-sentence
        :snt1 (c15-0 / support-01
                     :ARG0 (c15-22 / i)
                     :ARG1 (c15-6 / he)
                     :degree (c15-19 / percentage-entity
                                     :value 80)
                     :ARG0-of (c15-16 / cause-01
                                      :ARG1 (c15-20 / worry-01
                                                    :ARG0 (c15-14 / possible-01
                                                                  :ARG1 (c15-18 / event
                                                                                :mod (c15-21 / he))
                                                                  :time (c15-7 / meantime))
                                                    :ARG1 c15-22
                                                    :mod (c15-8 / just))))
        :snt2 (c15-1 / pray-01
                     :ARG1 (c15-9 / and
                                  :op1 (c15-10 / get-05
                                               :ARG0 (c15-5 / he)
                                               :ARG1 (c15-4 / it)
                                               :ARG2 (c15-2 / out))
                                  :op2 (c15-3 / scar-01
                                              :ARG1 c15-5
                                              :polarity -)))
        :snt3 (c15-17 / need-01
                      :ARG1 (c15-11 / end-01
                                    :ARG1 (c15-12 / this)
                                    :time (c15-15 / now))
                      :mode expressive))

# ::snt Sad but I thought the same.
# ::tokens ["Sad", "but", "I", "thought", "the", "same", "."]
# ::lemmas ["sad", "but", "i", "think", "the", "same", "."]
(c16-2 / contrast-01
       :ARG1 (c16-1 / sad-02)
       :ARG2 (c16-4 / think-01
                    :ARG0 (c16-3 / i)
                    :ARG1 (c16-0 / same-01)))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c18-2 / thank-01
       :ARG0 (c18-1 / i)
       :ARG1 (c18-0 / you))

# ::snt I support you! Do it for RIP
# ::tokens ["I", "support", "you", "!", "Do", "it", "for", "RIP"]
# ::lemmas ["i", "support", "you", "!", "do", "it", "for", "RIP"]
(c19-1 / multi-sentence
       :snt1 (c19-2 / support-01
                    :ARG0 (c19-6 / i)
                    :ARG1 (c19-0 / you))
       :snt2 (c19-8 / do-02
                    :ARG0 (c19-7 / you)
                    :ARG1 (c19-3 / it)
                    :purpose (c19-4 / rest-01
                                    :ARG1 c19-7
                                    :manner (c19-5 / peace))
                    :mode imperative))

# ::snt Why does it have to be a film?
# ::tokens ["Why", "does", "it", "have", "to", "be", "a", "film", "?"]
# ::lemmas ["why", "do", "it", "have", "to", "be", "a", "film", "?"]
(c20-0 / obligate-01
       :ARG0 (c20-3 / amr-unknown)
       :ARG1 (c20-1 / film
                    :domain (c20-2 / it)))

# ::snt Don,t read the bad shit they,ll wanna kick ya down but the support for you is overwhelming
# ::tokens ["Don", ",", "t", "read", "the", "bad", "shit", "they", ",", "ll", "wanna", "kick", "ya", "down", "but", "the", "support", "for", "you", "is", "overwhelming"]
# ::lemmas ["Don", ",", "t", "read", "the", "bad", "shit", "they", ",", "ll", "wanna", "kick", "ya", "down", "but", "the", "support", "for", "you", "be", "overwhelming"]
(c21-7 / contrast-01
       :ARG1 (c21-5 / read-01
                    :ARG0 (c21-3 / you)
                    :ARG1 (c21-4 / shit
                                 :ARG1-of (c21-2 / bad-07)
                                 :ARG1-of (c21-8 / want-01
                                                 :ARG0 (c21-9 / they)
                                                 :ARG2 (c21-6 / kick-down-05
                                                              :ARG0 c21-9
                                                              :ARG1 c21-3)))
                    :polarity -
                    :mode imperative)
       :ARG2 (c21-0 / overwhelm-01
                    :ARG0 (c21-1 / support-01
                                 :ARG1 c21-3)
                    :ARG1 c21-3))

# ::snt He's wanted to out them for years, he said openly on tv that he would, but with no one willing to speak up back then, the timing was wrong.
# ::tokens ["He", "'s", "wanted", "to", "out", "them", "for", "years", ",", "he", "said", "openly", "on", "tv", "that", "he", "would", ",", "but", "with", "no", "one", "willing", "to", "speak", "up", "back", "then", ",", "the", "timing", "was", "wrong", "."]
# ::lemmas ["he", "be", "want", "to", "out", "they", "for", "years", ",", "he", "say", "openly", "on", "tv", "that", "he", "would", ",", "but", "with", "no", "one", "willing", "to", "speak", "up", "back", "then", ",", "the", "timing", "be", "wrong", "."]
(c23-10 / contrast-01
        :ARG1 (c23-11 / want-01
                      :ARG0 (c23-8 / he)
                      :ARG1 (c23-0 / out-06
                                   :ARG0 c23-8
                                   :ARG1 (c23-13 / they))
                      :duration (c23-4 / multiple
                                       :op1 (c23-16 / temporal-quantity
                                                    :unit (c23-3 / year)
                                                    :quant 1))
                      :ARG1-of (c23-1 / open-04)
                      :medium (c23-12 / television))
        :ARG2 (c23-9 / wrong-02
                     :ARG1 (c23-7 / time-02)
                     :ARG1-of (c23-15 / cause-01
                                      :ARG0 (c23-17 / will-02
                                                    :ARG0 (c23-5 / no-one)
                                                    :ARG1 (c23-6 / speak-up-02
                                                                 :ARG0 c23-5)
                                                    :time (c23-14 / then
                                                                  :mod (c23-2 / back))))))

# ::snt He should. Although it could be argued he could just do it without makin cash. He's owed it though. He'll go missing soon....
# ::tokens ["He", "should", ".", "Although", "it", "could", "be", "argued", "he", "could", "just", "do", "it", "without", "makin", "cash", ".", "He", "'s", "owed", "it", "though", ".", "He", "'ll", "go", "missing", "soon", "...."]
# ::lemmas ["he", "should", ".", "although", "it", "could", "be", "argue", "he", "could", "just", "do", "it", "without", "makin", "cash", ".", "he", "be", "owe", "it", "though", ".", "he", "'ll", "go", "miss", "soon", "...."]
(c24-11 / multi-sentence
        :snt1 (c24-16 / recommend-01
                      :ARG1 (c24-4 / he))
        :snt2 (c24-18 / have-concession-91
                      :ARG1 (c24-17 / possible-01
                                    :ARG1 (c24-20 / do-02
                                                  :ARG0 (c24-3 / he)
                                                  :ARG1 (c24-19 / it)
                                                  :manner (c24-5 / make-05
                                                                 :ARG0 c24-3
                                                                 :ARG1 (c24-13 / cash)
                                                                 :polarity -)
                                                  :mod (c24-8 / just)))
                      :ARG2 (c24-12 / possible-01
                                    :ARG1 (c24-9 / argue-01
                                                 :ARG1 c24-20
                                                 :ARG0 c24-3
                                                 :ARG1 (c24-2 / it))))
        :snt3 (c24-1 / owe-01
                     :ARG0 (c24-14 / he)
                     :ARG1 (c24-10 / it)
                     :ARG1-of (c24-6 / have-concession-91))
        :snt4 (c24-15 / miss-01
                      :ARG1 (c24-7 / he)
                      :time (c24-0 / soon)))

# ::snt Agree %
# ::tokens ["Agree", "%"]
# ::lemmas ["Agree", "%"]
(c25-1 / agree-01
       :ARG0 (c25-0 / i))

# ::snt Most b broke
# ::tokens ["Most", "b", "broke"]
# ::lemmas ["most", "b", "break"]
(c26-1 / break-01
       :ARG1 (c26-2 / person
                    :mod (c26-0 / most)))

# ::snt ya like mysteriously od on some drugs
# ::tokens ["ya", "like", "mysteriously", "od", "on", "some", "drugs"]
# ::lemmas ["ya", "like", "mysteriously", "od", "on", "some", "drug"]
(c27-4 / resemble-01
       :ARG1 (c27-1 / you)
       :ARG2 (c27-0 / odor
                    :mod (c27-2 / mysterious)
                    :location (c27-5 / drug
                                     :quant (c27-3 / some))))

# ::snt Hope he does it!! Its disgusting whats been going on!!!
# ::tokens ["Hope", "he", "does", "it", "!", "!", "Its", "disgusting", "what", "s", "been", "going", "on", "!", "!", "!"]
# ::lemmas ["hope", "he", "do", "it", "!", "!", "its", "disgusting", "what", "s", "be", "go", "on", "!", "!", "!"]
(c28-0 / multi-sentence
       :snt1 (c28-2 / hope-01
                    :ARG0 (c28-5 / i)
                    :ARG1 (c28-7 / do-02
                                 :ARG0 (c28-4 / he)
                                 :ARG1 (c28-1 / it)))
       :snt2 (c28-3 / disgust-01
                    :ARG0 (c28-6 / go-on-15
                                 :ARG1 (c28-8 / it))
                    :mode expressive))

# ::snt Expose them for free right now. No film needs to be made.His intentions are not for protecting anyone or he would have exposed years ago.
# ::tokens ["Expose", "them", "for", "free", "right", "now", ".", "No", "film", "needs", "to", "be", "made", ".", "His", "intentions", "are", "not", "for", "protecting", "anyone", "or", "he", "would", "have", "exposed", "years", "ago", "."]
# ::lemmas ["expose", "they", "for", "free", "right", "now", ".", "no", "film", "need", "to", "be", "make", ".", "his", "intention", "be", "not", "for", "protect", "anyone", "or", "he", "would", "have", "expose", "years", "ago", "."]
(c29-5 / multi-sentence
       :snt1 (c29-8 / expose-01
                    :ARG1 (c29-14 / they)
                    :ARG3 (c29-0 / free-03)
                    :time (c29-4 / now
                                 :mod (c29-6 / right)))
       :snt2 (c29-1 / obligate-01
                    :ARG2 (c29-9 / make-01
                                 :ARG1 (c29-11 / film))
                    :polarity -)
       :snt3 (c29-13 / intend-01
                     :ARG0 (c29-10 / he)
                     :ARG1 (c29-12 / protect-01
                                   :ARG0 c29-10
                                   :ARG1 (c29-7 / anyone)
                                   :condition (c29-15 / expose-01
                                                      :ARG0 c29-10
                                                      :time (c29-2 / before
                                                                   :op1 c29-4
                                                                   :quant (c29-16 / multiple
                                                                                  :op1 (c29-17 / temporal-quantity
                                                                                               :unit (c29-3 / year)
                                                                                               :quant 1))))
                                   :polarity -)))

# ::snt Tsukasa YamasakiMONA MODEL
# ::tokens ["Tsukasa", "YamasakiMONA", "MODEL"]
# ::lemmas ["Tsukasa", "YamasakiMONA", "MODEL"]
(c30-1 / model
       :name (c30-0 / name
                    :op1 "Tsukasa"
                    :op2 "Yamasaki"))

# ::snt I think you are an awsomely brave soul. I would love to hear what you have to say too
# ::tokens ["I", "think", "you", "are", "an", "awsomely", "brave", "soul", ".", "I", "would", "love", "to", "hear", "what", "you", "have", "to", "say", "too"]
# ::lemmas ["i", "think", "you", "be", "an", "awsomely", "brave", "soul", ".", "i", "would", "love", "to", "hear", "what", "you", "have", "to", "say", "too"]
(c31-4 / multi-sentence
       :snt1 (c31-11 / think-01
                     :ARG0 (c31-10 / i)
                     :ARG1 (c31-5 / soul
                                  :ARG0-of (c31-2 / brave-02
                                                  :mod (c31-7 / awful))
                                  :domain (c31-3 / you)))
       :snt2 (c31-9 / love-02
                    :ARG0 (c31-6 / i)
                    :ARG1 (c31-8 / hear-01
                                 :ARG0 c31-6
                                 :ARG1 (c31-14 / thing
                                               :ARG1-of (c31-0 / say-01
                                                               :ARG0 (c31-12 / you)
                                                               :ARG2-of (c31-1 / obligate-01)))
                                 :mod (c31-13 / too))))

# ::snt If he does not mention Michael Jackson as one, then this film is pointless!
# ::tokens ["If", "he", "does", "not", "mention", "Michael", "Jackson", "as", "one", ",", "then", "this", "film", "is", "pointless", "!"]
# ::lemmas ["if", "he", "do", "not", "mention", "Michael", "Jackson", "as", "one", ",", "then", "this", "film", "be", "pointless", "!"]
(c32-6 / point-03
       :ARG1 (c32-0 / film
                    :mod (c32-7 / this))
       :condition (c32-2 / mention-01
                         :ARG0 (c32-5 / he)
                         :ARG1 (c32-3 / person
                                      :name (c32-4 / name
                                                   :op1 "Michael"
                                                   :op2 "Jackson"))
                         :prep-as (c32-1 / one)
                         :polarity -)
       :polarity -)

# ::snt He's very strange.
# ::tokens ["He", "'s", "very", "strange", "."]
# ::lemmas ["he", "be", "very", "strange", "."]
(c33-2 / strange
       :degree (c33-0 / very)
       :domain (c33-1 / he))

# ::snt tea
# ::tokens ["tea"]
# ::lemmas ["tea"]
(c34-0 / tea)

# ::snt WE THOUGHT THE SAME THING!!
# ::tokens ["WE", "THOUGHT", "THE", "SAME", "THING", "!", "!"]
# ::lemmas ["we", "think", "the", "SAME", "thing", "!", "!"]
(c35-2 / same-01
       :ARG1 (c35-0 / we)
       :ARG2 (c35-1 / thing))

# ::snt Lol. Great plan Corey.
# ::tokens ["Lol", ".", "Great", "plan", "Corey", "."]
# ::lemmas ["Lol", ".", "great", "plan", "Corey", "."]
(c36-0 / multi-sentence
       :snt1 (c36-4 / laugh-01
                    :ARG0 (c36-6 / i)
                    :manner (c36-8 / loud)
                    :mode expressive)
       :snt2 (c36-2 / say-01
                    :ARG1 (c36-5 / plan-01
                                 :mod (c36-7 / great))
                    :ARG2 (c36-1 / person
                                 :name (c36-3 / name
                                              :op1 "Corey"))))

# ::snt Preach!
# ::tokens ["Preach", "!"]
# ::lemmas ["Preach", "!"]
(c37-1 / preach-01
       :ARG0 (c37-0 / you)
       :mode imperative)

# ::snt Lol even i thought the same
# ::tokens ["Lol", "even", "i", "thought", "the", "same"]
# ::lemmas ["Lol", "even", "i", "think", "the", "same"]
(c39-4 / think-01
       :ARG0 (c39-3 / i)
       :ARG1 (c39-0 / same-01)
       :mod (c39-1 / even)
       :manner (c39-2 / laugh-01
                      :ARG0 c39-3
                      :manner (c39-5 / loud)
                      :mode expressive))

# ::snt U go girl
# ::tokens ["U", "go", "girl"]
# ::lemmas ["u", "go", "girl"]
(c40-0 / go-01
       :ARG1 (c40-1 / you
                    :mod (c40-2 / girl))
       :mode imperative)

# ::snt Hes gonna end up mysteriously dying Im calling it rn.
# ::tokens ["He", "s", "gon", "na", "end", "up", "mysteriously", "dying", "I", "m", "calling", "it", "rn", "."]
# ::lemmas ["he", "s", "going", "to", "end", "up", "mysteriously", "die", "i", "m", "call", "it", "rn", "."]
(c41-2 / end-up-03
       :ARG1 (c41-3 / he)
       :ARG2 (c41-6 / die-01
                    :ARG1 c41-3
                    :manner (c41-0 / mysterious))
       :ARG1-of (c41-4 / call-01
                       :ARG0 (c41-5 / i)
                       :ARG2 (c41-1 / string-entity
                                    :value "rn")))
