# ::snt Noooooooooo!
# ::tokens ["Noooooooooo", "!"]
# ::lemmas ["Noooooooooo", "!"]
(c1-0 / no
      :mode expressive)

# ::snt Monumental change for , no doubt
# ::tokens ["Monumental", "change", "for", ",", "no", "doubt"]
# ::lemmas ["monumental", "change", "for", ",", "no", "doubt"]
(c2-0 / change-01
      :ARG1 (c2-2 / money)
      :mod (c2-1 / massive)
      :ARG1-of (c2-3 / doubt-01
                     :polarity -))

# ::snt Yeah is amazing, fer sure
# ::tokens ["Yeah", "is", "amazing", ",", "fer", "sure"]
# ::lemmas ["yeah", "be", "amazing", ",", "fer", "sure"]
(c3-3 / amaze-01
      :mod (c3-1 / yeah)
      :ARG1-of (c3-0 / sure-02
                     :ARG0 (c3-2 / i))
      :mode expressive)

# ::snt The frog emoticon is ruined by the alt right.
# ::tokens ["The", "frog", "emoticon", "is", "ruined", "by", "the", "alt", "right", "."]
# ::lemmas ["the", "frog", "emoticon", "be", "ruin", "by", "the", "alt", "right", "."]
(c4-1 / ruin-01
      :ARG0 (c4-3 / person
                  :ARG1-of (c4-5 / right-08
                                 :mod (c4-4 / alt)))
      :ARG1 (c4-2 / emoticon
                  :mod (c4-0 / frog)))

# ::snt Your "Kermit" voice is now stuck in my head haha
# ::tokens ["Your", "\"", "Kermit", "\"", "voice", "is", "now", "stuck", "in", "my", "head", "haha"]
# ::lemmas ["your", "\"", "Kermit", "\"", "voice", "be", "now", "stick", "in", "my", "head", "haha"]
(c5-2 / stick-01
      :ARG1 (c5-3 / voice
                  :poss (c5-0 / you)
                  :mod (c5-5 / person
                             :name (c5-1 / name
                                         :op1 "Kermit")))
      :ARG2 (c5-4 / head
                  :part-of (c5-8 / i))
      :time (c5-6 / now)
      :mod (c5-7 / haha
                 :mode expressive))

# ::snt Cool Beans!
# ::tokens ["Cool", "Beans", "!"]
# ::lemmas ["Cool", "Beans", "!"]
(c6-0 / cool-04
      :ARG1 (c6-1 / bean))

# ::snt excuse me.
# ::tokens ["excuse", "me", "."]
# ::lemmas ["excuse", "i", "."]
(c8-0 / excuse-01
      :ARG0 (c8-1 / you)
      :ARG1 (c8-2 / i)
      :mode imperative)

# ::snt Noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo...
# ::tokens ["Noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo", "..."]
# ::lemmas ["Noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo", "..."]
(c9-0 / string-entity
      :value "noooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo")

# ::snt When is the real story going to happen?
# ::tokens ["When", "is", "the", "real", "story", "going", "to", "happen", "?"]
# ::lemmas ["when", "be", "the", "real", "story", "go", "to", "happen", "?"]
(c10-1 / be-temporally-at-91
       :ARG1 (c10-3 / story
                    :ARG1-of (c10-0 / real-04))
       :ARG2 (c10-2 / amr-unknown))

# ::snt We are not amused.
# ::tokens ["We", "are", "not", "amused", "."]
# ::lemmas ["we", "be", "not", "amuse", "."]
(c11-1 / amuse-01
       :ARG1 (c11-0 / we)
       :polarity -)

# ::snt No! Why?!?
# ::tokens ["No", "!", "Why", "?", "!", "?"]
# ::lemmas ["no", "!", "why", "?", "!", "?"]
(c12-2 / multi-sentence
       :snt1 (c12-0 / no)
       :snt2 (c12-1 / cause-01
                    :ARG0 (c12-3 / amr-unknown)))

# ::snt I'm not okay with this!
# ::tokens ["I", "'m", "not", "okay", "with", "this", "!"]
# ::lemmas ["i", "be", "not", "okay", "with", "this", "!"]
(c13-0 / okay-01
       :ARG0 (c13-1 / i)
       :ARG1 (c13-2 / this)
       :polarity -)

# ::snt EXCUSE ME?!
# ::tokens ["EXCUSE", "ME", "?", "!"]
# ::lemmas ["EXCUSE", "ME", "?", "!"]
(c14-0 / excuse-01
       :polarity (c14-2 / amr-unknown)
       :ARG1 (c14-1 / i))

# ::snt He got a new frog in his throat!?
# ::tokens ["He", "got", "a", "new", "frog", "in", "his", "throat", "!", "?"]
# ::lemmas ["he", "get", "a", "new", "frog", "in", "his", "throat", "!", "?"]
(c15-5 / get-02
       :polarity (c15-2 / amr-unknown)
       :ARG0 (c15-3 / he
                    :part (c15-4 / throat))
       :ARG1 (c15-0 / frog
                    :ARG1-of (c15-1 / new-01)
                    :location c15-4))

# ::snt NO!!!
# ::tokens ["NO", "!", "!", "!"]
# ::lemmas ["no", "!", "!", "!"]
(c17-0 / no)

# ::snt It better be like when they got a new lead singer for Journey.
# ::tokens ["It", "better", "be", "like", "when", "they", "got", "a", "new", "lead", "singer", "for", "Journey", "."]
# ::lemmas ["it", "well", "be", "like", "when", "they", "get", "a", "new", "lead", "singer", "for", "Journey", "."]
(c18-4 / have-degree-91
       :ARG1 (c18-9 / it)
       :ARG2 (c18-3 / resemble-01
                    :ARG2 (c18-11 / get-01
                                  :ARG0 (c18-10 / they)
                                  :ARG1 (c18-5 / person
                                               :ARG0-of (c18-2 / sing-01
                                                               :ARG2 (c18-8 / work-of-art
                                                                            :name (c18-0 / name
                                                                                         :op1 "J Journey"))
                                                               :ARG0-of (c18-6 / lead-02))
                                               :ARG1-of (c18-7 / new-01))))
       :ARG3 (c18-1 / more))

# ::snt Ou canelle!!
# ::tokens ["Ou", "canelle", "!", "!"]
# ::lemmas ["ou", "canelle", "!", "!"]
(c19-0 / canelle
       :mod (c19-1 / ou)
       :mode expressive)

# ::snt It's not easy being green.
# ::tokens ["It", "'s", "not", "easy", "being", "green", "."]
# ::lemmas ["it", "be", "not", "easy", "be", "green", "."]
(c20-1 / easy-05
       :ARG1 (c20-0 / green-03)
       :polarity -)

# ::snt I dunno if I should be sad, or what,
# ::tokens ["I", "dunno", "if", "I", "should", "be", "sad", ",", "or", "what", ","]
# ::lemmas ["i", "dunno", "if", "i", "should", "be", "sad", ",", "or", "what", ","]
(c21-3 / know-01
       :ARG0 (c21-4 / i)
       :ARG1 (c21-0 / or
                    :op1 (c21-2 / recommend-01
                                :ARG1 (c21-1 / sad-02
                                             :ARG1 c21-4))
                    :op2 (c21-5 / amr-unknown))
       :polarity -)

# ::snt Yea
# ::tokens ["Yea"]
# ::lemmas ["yea"]
(c22-0 / yea)

# ::snt Is it you?
# ::tokens ["Is", "it", "you", "?"]
# ::lemmas ["be", "it", "you", "?"]
(c23-0 / you
       :polarity (c23-1 / amr-unknown))

# ::snt Oh Really
# ::tokens ["Oh", "Really"]
# ::lemmas ["oh", "really"]
(c24-0 / real-04
       :mod (c24-1 / oh
                   :mode expressive))

# ::snt Al Franken
# ::tokens ["Al", "Franken"]
# ::lemmas ["Al", "Franken"]
(c25-1 / person
       :name (c25-0 / name
                    :op1 "Al"
                    :op2 "Franken"))

# ::snt It's a frog's life !
# ::tokens ["It", "'s", "a", "frog", "'s", "life", "!"]
# ::lemmas ["it", "be", "a", "frog", "'s", "life", "!"]
(c26-1 / life
       :poss (c26-0 / frog)
       :domain (c26-2 / it))

# ::snt Oh no! A new voice will never be The Kermit the Frog!
# ::tokens ["Oh", "no", "!", "A", "new", "voice", "will", "never", "be", "The", "Kermit", "the", "Frog", "!"]
# ::lemmas ["oh", "no", "!", "a", "new", "voice", "will", "never", "be", "The", "Kermit", "the", "Frog", "!"]
(c27-2 / multi-sentence
       :snt1 (c27-0 / oh-no
                    :mode expressive)
       :snt2 (c27-3 / voice
                    :ARG1-of (c27-1 / new-01)
                    :domain (c27-6 / person
                                   :name (c27-5 / name
                                                :op1 "The"
                                                :op2 "Kermit"
                                                :op3 "the"
                                                :op4 "F Frog"))
                    :time (c27-4 / ever)
                    :polarity -))

# ::snt THAT'S CRAP!
# ::tokens ["THAT", "'S", "CRAP", "!"]
# ::lemmas ["that", "'S", "CRAP", "!"]
(c28-0 / crap-01
       :domain (c28-1 / that)
       :mode expressive)

# ::snt Wow Kermit was on my mind all day today. Freaky.
# ::tokens ["Wow", "Kermit", "was", "on", "my", "mind", "all", "day", "today", ".", "Freaky", "."]
# ::lemmas ["wow", "Kermit", "be", "on", "my", "mind", "all", "day", "today", ".", "Freaky", "."]
(c29-3 / multi-sentence
       :snt1 (c29-0 / on-ones-mind-07
                    :ARG1 (c29-7 / i)
                    :ARG2 (c29-5 / person
                                 :name (c29-2 / name
                                              :op1 "Kermit"))
                    :time (c29-8 / today)
                    :duration (c29-9 / day
                                     :mod (c29-4 / all))
                    :mod (c29-6 / wow
                                :mode expressive))
       :snt2 (c29-1 / freaky))

# ::snt I here Obama needs a job.
# ::tokens ["I", "here", "Obama", "needs", "a", "job", "."]
# ::lemmas ["i", "here", "Obama", "need", "a", "job", "."]
(c30-0 / need-01
       :ARG0 (c30-2 / person
                    :name (c30-1 / name
                                 :op1 "Obama"))
       :ARG1 (c30-4 / job)
       :location (c30-3 / here))

# ::snt Wtf Kermit The Frog isn't a real frog???!???!!!!!
# ::tokens ["Wtf", "Kermit", "The", "Frog", "is", "n't", "a", "real", "frog", "?", "?", "?", "!", "?", "?", "?", "!", "!", "!", "!", "!"]
# ::lemmas ["Wtf", "Kermit", "The", "Frog", "be", "not", "a", "real", "frog", "?", "?", "?", "!", "?", "?", "?", "!", "!", "!", "!", "!"]
(c31-2 / request-confirmation-91
       :ARG1 (c31-3 / have-mod-91
                    :ARG1 (c31-4 / person
                                 :name (c31-1 / name
                                              :op1 "Kermit"
                                              :op2 "The"
                                              :op3 "F Frog"))
                    :ARG2 (c31-0 / frog
                                 :ARG1-of (c31-6 / real-04))
                    :mod (c31-5 / fuck
                                :mode expressive)
                    :polarity -))

# ::snt The remake is never better than the original. So DONT DO IT!
# ::tokens ["The", "remake", "is", "never", "better", "than", "the", "original", ".", "So", "DONT", "DO", "IT", "!"]
# ::lemmas ["the", "remake", "be", "never", "well", "than", "the", "original", ".", "so", "dont", "do", "IT", "!"]
(c32-2 / multi-sentence
       :snt1 (c32-8 / good-02
                    :ARG1 (c32-3 / remake-01)
                    :time (c32-4 / ever)
                    :ARG2-of (c32-5 / have-degree-91
                                    :ARG1 c32-3
                                    :ARG3 (c32-6 / more)
                                    :ARG4 (c32-10 / remake-01
                                                  :mod (c32-0 / original)))
                    :polarity -)
       :snt2 (c32-9 / do-02
                    :ARG0 (c32-1 / you)
                    :ARG1 (c32-7 / it)
                    :polarity -
                    :mode imperative))

# ::snt No knock against Whitmire, who was great at Rizzo the Rat, Wembley Fraggle and many other characters, but Henson could never be matched.
# ::tokens ["No", "knock", "against", "Whitmire", ",", "who", "was", "great", "at", "Rizzo", "the", "Rat", ",", "Wembley", "Fraggle", "and", "many", "other", "characters", ",", "but", "Henson", "could", "never", "be", "matched", "."]
# ::lemmas ["no", "knock", "against", "Whitmire", ",", "who", "be", "great", "at", "Rizzo", "the", "Rat", ",", "Wembley", "Fraggle", "and", "many", "other", "character", ",", "but", "Henson", "could", "never", "be", "match", "."]
(c33-10 / contrast-01
        :ARG1 (c33-6 / knock-01
                     :ARG1 (c33-7 / person
                                  :name (c33-1 / name
                                               :op1 "Whitmire")
                                  :mod (c33-15 / great
                                               :topic (c33-14 / and
                                                              :op1 (c33-2 / person
                                                                          :name (c33-5 / name
                                                                                       :op1 "Rizzo"
                                                                                       :op2 "the"
                                                                                       :op3 "Rat"))
                                                              :op2 (c33-17 / character
                                                                           :name (c33-8 / name
                                                                                        :op1 "Wembley"
                                                                                        :op2 "Fraggle"))
                                                              :op3 (c33-13 / character
                                                                           :mod (c33-0 / other)
                                                                           :quant (c33-3 / many)))))
                     :polarity -)
        :ARG2 (c33-16 / possible-01
                      :ARG1 (c33-9 / match-03
                                   :ARG1 (c33-11 / person
                                                 :name (c33-12 / name
                                                               :op1 "Henson"))
                                   :time (c33-4 / ever))
                      :polarity -))

# ::snt I don't understand why they played a clip of Jim Henson doing Kermit in a story about Steve Whitmire. Guess his voice wasn't iconic enough.
# ::tokens ["I", "do", "n't", "understand", "why", "they", "played", "a", "clip", "of", "Jim", "Henson", "doing", "Kermit", "in", "a", "story", "about", "Steve", "Whitmire", ".", "Guess", "his", "voice", "was", "n't", "iconic", "enough", "."]
# ::lemmas ["i", "do", "not", "understand", "why", "they", "play", "a", "clip", "of", "Jim", "Henson", "do", "Kermit", "in", "a", "story", "about", "Steve", "Whitmire", ".", "guess", "his", "voice", "be", "not", "iconic", "enough", "."]
(c34-8 / multi-sentence
       :snt1 (c34-13 / understand-01
                     :ARG0 (c34-19 / i)
                     :ARG1 (c34-5 / thing
                                  :ARG0-of (c34-11 / cause-01
                                                   :ARG1 (c34-16 / play-11
                                                                 :ARG0 (c34-12 / they)
                                                                 :ARG1 (c34-7 / clip
                                                                              :topic (c34-20 / do-02
                                                                                             :ARG0 (c34-9 / person
                                                                                                          :name (c34-14 / name
                                                                                                                        :op1 "Jim"
                                                                                                                        :op2 "Henson"))
                                                                                             :ARG1 c34-5
                                                                                             :name (c34-10 / name
                                                                                                           :op1 "Kermit"))
                                                                              :location (c34-0 / story
                                                                                               :topic (c34-1 / person
                                                                                                             :name (c34-17 / name
                                                                                                                           :op1 "Steve"
                                                                                                                           :op2 "Whitmire")))))))
                     :polarity -)
       :snt2 (c34-6 / guess-01
                    :ARG0 c34-19
                    :ARG1 (c34-2 / iconic
                                 :domain (c34-3 / voice
                                                :poss (c34-4 / he))
                                 :ARG2-of (c34-18 / have-degree-91
                                                  :ARG1 c34-3
                                                  :ARG3 (c34-15 / enough))
                                 :polarity -)))

# ::snt And will be "gender neutral"
# ::tokens ["And", "will", "be", "\"", "gender", "neutral", "\""]
# ::lemmas ["and", "will", "be", "\"", "gender", "neutral", "\""]
(c35-2 / and
       :op2 (c35-1 / neutral-02
                   :ARG1 (c35-0 / gender)))

# ::snt He must of had a frog in his voice....hummmm
# ::tokens ["He", "must", "of", "had", "a", "frog", "in", "his", "voice", "....", "hummmm"]
# ::lemmas ["he", "must", "of", "have", "a", "frog", "in", "his", "voice", "....", "hummmm"]
(c36-5 / infer-01
       :ARG1 (c36-3 / have-03
                    :ARG0 (c36-4 / he
                                 :part (c36-1 / voice))
                    :ARG1 (c36-0 / frog
                                 :location c36-1))
       :mod (c36-2 / hmm
                   :mode expressive))

# ::snt James Earl Jones?
# ::tokens ["James", "Earl", "Jones", "?"]
# ::lemmas ["James", "Earl", "Jones", "?"]
(c37-1 / person
       :polarity (c37-2 / amr-unknown)
       :name (c37-0 / name
                    :op1 "James"
                    :op2 "Earl"
                    :op3 "Jones"))

# ::snt He wasn't the original Kermit though
# ::tokens ["He", "was", "n't", "the", "original", "Kermit", "though"]
# ::lemmas ["he", "be", "not", "the", "original", "Kermit", "though"]
(c38-2 / have-concession-91
       :ARG1 (c38-3 / Kermit
                    :mod (c38-1 / original)
                    :domain (c38-0 / he)
                    :polarity -))

# ::snt Sebastian Gorka?
# ::tokens ["Sebastian", "Gorka", "?"]
# ::lemmas ["Sebastian", "Gorka", "?"]
(c40-0 / country
       :name (c40-1 / name
                    :op1 "Sebastian"
                    :op2 "Gorka")
       :polarity (c40-2 / amr-unknown))

# ::snt Women's Convention July Celebrating NY Women Voting year$- (1917 to ) Celebrating top Women in US!
# ::tokens ["Women", "'s", "Convention", "July", "Celebrating", "NY", "Women", "Voting", "year$-", "(", "1917", "to", ")", "Celebrating", "top", "Women", "in", "US", "!"]
# ::lemmas ["Women", "'s", "Convention", "July", "Celebrating", "NY", "Women", "Voting", "year$-", "(", "1917", "to", ")", "celebrate", "top", "woman", "in", "US", "!"]
(c41-8 / conference
       :name (c41-2 / name
                    :op1 "Women's"
                    :op2 "Convention")
       :time (c41-12 / date-entity
                     :month 7)
       :ARG0-of (c41-13 / celebrate-01
                        :ARG1 (c41-1 / year
                                     :time-of (c41-4 / vote-01
                                                     :ARG0 (c41-9 / woman
                                                                  :location (c41-3 / state
                                                                                   :name (c41-5 / name
                                                                                                :op1 "NY"))))
                                     :ARG0-of (c41-10 / celebrate-01
                                                      :ARG1 (c41-7 / woman
                                                                   :location (c41-0 / country
                                                                                    :name (c41-6 / name
                                                                                                 :op1 "US"))
                                                                   :mod (c41-11 / top))))))

# ::snt Ray Romano? Al Michaels? Seth Rogen?
# ::tokens ["Ray", "Romano", "?", "Al", "Michaels", "?", "Seth", "Rogen", "?"]
# ::lemmas ["Ray", "Romano", "?", "Al", "Michaels", "?", "Seth", "Rogen", "?"]
(c42-6 / and
       :op1 (c42-3 / person
                   :name (c42-0 / name
                                :op1 "Ray"
                                :op2 "Romano"))
       :op2 (c42-1 / person
                   :name (c42-2 / name
                                :op1 "Al"
                                :op2 "Michaels"))
       :op3 (c42-7 / person
                   :name (c42-4 / name
                                :op1 "Seth"
                                :op2 "Rogen"))
       :polarity (c42-5 / amr-unknown))

# ::snt Whaaaaaat?????? Noooooo!!!!!!!
# ::tokens ["Whaaaaaat", "?", "?", "?", "?", "?", "?", "Noooooo", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["Whaaaaaat", "?", "?", "?", "?", "?", "?", "Noooooo", "!", "!", "!", "!", "!", "!", "!"]
(c43-1 / no
       :mod (c43-0 / whaaat
                   :mode expressive)
       :mode expressive)

# ::snt So play a clip of his voice
# ::tokens ["So", "play", "a", "clip", "of", "his", "voice"]
# ::lemmas ["so", "play", "a", "clip", "of", "his", "voice"]
(c44-4 / cause-01
       :ARG1 (c44-3 / play-11
                    :ARG0 (c44-0 / you)
                    :ARG1 (c44-5 / clip-01
                                 :ARG1 (c44-1 / voice
                                              :poss (c44-2 / he)))
                    :mode imperative))

# ::snt Oh, cute Kermit the Frog. I see Kermit the Frog have no buns of butt? Kermit the Frog need to stop being jerk, too. lol haha
# ::tokens ["Oh", ",", "cute", "Kermit", "the", "Frog", ".", "I", "see", "Kermit", "the", "Frog", "have", "no", "buns", "of", "butt", "?", "Kermit", "the", "Frog", "need", "to", "stop", "being", "jerk", ",", "too", ".", "lol", "haha"]
# ::lemmas ["oh", ",", "cute", "Kermit", "the", "Frog", ".", "i", "see", "Kermit", "the", "Frog", "have", "no", "bun", "of", "butt", "?", "Kermit", "the", "Frog", "need", "to", "stop", "be", "jerk", ",", "too", ".", "lol", "haha"]
(c45-10 / multi-sentence
        :snt1 (c45-16 / person
                      :name (c45-15 / name
                                    :op1 "Kermit"
                                    :op2 "the"
                                    :op3 "F Frog")
                      :mod (c45-13 / cute)
                      :mod (c45-3 / oh))
        :snt2 (c45-0 / see-01
                     :ARG0 (c45-19 / i)
                     :ARG1 (c45-5 / have-03
                                  :ARG0 (c45-11 / person
                                                :name (c45-12 / name
                                                              :op1 "Kermit"
                                                              :op2 "the"
                                                              :op3 "F Frog")
                                                :part (c45-9 / butt))
                                  :ARG1 (c45-1 / bun
                                               :mod c45-9)
                                  :polarity -))
        :polarity (c45-7 / amr-unknown)
        :snt3 (c45-17 / need-01
                      :ARG0 (c45-2 / person
                                   :name (c45-14 / name
                                                 :op1 "Kermit"
                                                 :op2 "the"
                                                 :op3 "F Frog"))
                      :ARG1 (c45-4 / stop-01
                                   :ARG0 c45-2
                                   :ARG1 (c45-6 / jerk-00
                                                :ARG0 c45-2))
                      :mod (c45-8 / too)
                      :mod (c45-18 / haha
                                   :mode expressive)))

# ::snt Noooo!
# ::tokens ["Noooo", "!"]
# ::lemmas ["Noooo", "!"]
(c46-0 / no
       :mode expressive)

# ::snt Say it isn't so
# ::tokens ["Say", "it", "is", "n't", "so"]
# ::lemmas ["say", "it", "be", "not", "so"]
(c47-2 / say-01
       :ARG1 (c47-0 / so
                    :domain (c47-1 / it)
                    :polarity -))

# ::snt He broke Miss Piggy's heart hopping from one bed to another.
# ::tokens ["He", "broke", "Miss", "Piggy", "'s", "heart", "hopping", "from", "one", "bed", "to", "another", "."]
# ::lemmas ["he", "break", "Miss", "Piggy", "'s", "heart", "hop", "from", "one", "bed", "to", "another", "."]
(c48-1 / break-01
       :ARG0 (c48-3 / he)
       :ARG1 (c48-6 / heart
                    :part-of (c48-4 / person
                                    :name (c48-2 / name
                                                 :op1 "Miss"
                                                 :op2 "Piggy")))
       :source (c48-5 / bed
                      :mod (c48-0 / one))
       :destination (c48-8 / bed
                           :mod (c48-7 / another)))

# ::snt Why?????
# ::tokens ["Why", "?", "?", "?", "?", "?"]
# ::lemmas ["why", "?", "?", "?", "?", "?"]
(c49-0 / cause-01
       :ARG0 (c49-1 / amr-unknown))

# ::snt Noooooooo
# ::tokens ["Noooooooo"]
# ::lemmas ["Noooooooo"]
(c50-0 / no
       :mode expressive)
