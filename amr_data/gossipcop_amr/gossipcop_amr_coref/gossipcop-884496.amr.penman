# ::snt He was . It was about time!
# ::tokens ["He", "was", ".", "It", "was", "about", "time", "!"]
# ::lemmas ["he", "be", ".", "it", "be", "about", "time", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-0 / be-temporally-at-91
                  :ARG1 (c1-2 / he))
      :snt2 (c1-3 / time-02
                  :mod (c1-4 / about)))

# ::snt May his soul rest in peace, The GodFather.
# ::tokens ["May", "his", "soul", "rest", "in", "peace", ",", "The", "GodFather", "."]
# ::lemmas ["may", "his", "soul", "rest", "in", "peace", ",", "the", "GodFather", "."]
(c2-6 / wish-01
      :ARG1 (c2-3 / rest-01
                  :ARG1 (c2-2 / soul
                              :part-of (c2-4 / he))
                  :manner (c2-5 / peace))
      :ARG2 (c2-1 / person
                  :name (c2-0 / name
                              :op1 "The"
                              :op2 "Godfather")))

# ::snt Watch out
# ::tokens ["Watch", "out"]
# ::lemmas ["watch", "out"]
(c3-0 / watch-out-02
      :ARG0 (c3-1 / you)
      :mode imperative)

# ::snt year old blonde
# ::tokens ["year", "old", "blonde"]
# ::lemmas ["year", "old", "blonde"]
(c4-0 / blonde
      :age (c4-2 / temporal-quantity
                 :unit (c4-1 / year)
                 :quant 1))

# ::snt Bought a new dressing gown to mark Hefs passing. RIP.
# ::tokens ["Bought", "a", "new", "dressing", "gown", "to", "mark", "Hefs", "passing", ".", "RIP", "."]
# ::lemmas ["buy", "a", "new", "dressing", "gown", "to", "mark", "Hefs", "pass", ".", "RIP", "."]
(c5-2 / multi-sentence
      :snt1 (c5-0 / buy-01
                  :ARG1 (c5-10 / dress
                               :ARG1-of (c5-3 / new-01)
                               :purpose (c5-6 / mark-01
                                              :ARG1 (c5-7 / pass-20
                                                          :ARG1 (c5-4 / person
                                                                      :name (c5-8 / name
                                                                                  :op1 "Hefs"))))))
      :snt2 (c5-5 / rest-01
                  :ARG1 (c5-1 / you)
                  :manner (c5-9 / peace)))

# ::snt Cause of death- he was . Why is this a new story?
# ::tokens ["Cause", "of", "death-", "he", "was", ".", "Why", "is", "this", "a", "new", "story", "?"]
# ::lemmas ["cause", "of", "death-", "he", "be", ".", "why", "be", "this", "a", "new", "story", "?"]
(c7-0 / multi-sentence
      :snt1 (c7-5 / cause-01
                  :ARG0 (c7-7 / die-01
                              :ARG1 (c7-4 / he)
                              :ARG1-of c7-5))
      :snt2 (c7-2 / story
                  :ARG1-of (c7-1 / new-01)
                  :domain (c7-6 / this)
                  :ARG1-of c7-5
                  :ARG0 (c7-3 / amr-unknown)))

# ::snt I clicked on it. I couldn't help myself. Forgive me, please!
# ::tokens ["I", "clicked", "on", "it", ".", "I", "could", "n't", "help", "myself", ".", "Forgive", "me", ",", "please", "!"]
# ::lemmas ["i", "click", "on", "it", ".", "i", "could", "not", "help", "myself", ".", "forgive", "i", ",", "please", "!"]
(c8-3 / multi-sentence
      :snt1 (c8-7 / click-01
                  :ARG0 (c8-8 / i)
                  :location (c8-4 / it))
      :snt2 (c8-6 / possible-01
                  :ARG1 (c8-5 / help-02
                              :ARG0 (c8-9 / i
                                          :ARG1-of c8-5))
                  :polarity -)
      :snt3 (c8-0 / forgive-01
                  :ARG0 (c8-2 / you)
                  :ARG1 (c8-1 / i)
                  :polite +
                  :mode imperative))

# ::snt Let's start with he was ... you know in the prime of life. Sheesh!
# ::tokens ["Let", "'s", "start", "with", "he", "was", "...", "you", "know", "in", "the", "prime", "of", "life", ".", "Sheesh", "!"]
# ::lemmas ["let", "us", "start", "with", "he", "be", "...", "you", "know", "in", "the", "prime", "of", "life", ".", "sheesh", "!"]
(c9-2 / multi-sentence
      :snt1 (c9-3 / start-01
                  :ARG0 (c9-8 / we)
                  :ARG2 (c9-4 / he
                              :time (c9-5 / prime
                                          :mod (c9-6 / life)
                                          :ARG1-of (c9-7 / know-01
                                                         :ARG0 (c9-1 / you))))
                  :mode imperative)
      :snt2 (c9-0 / sheesh
                  :mode expressive))

# ::snt May he Rest In Peace. Every person who lived and no longer lives the mystery of lifes existence deserves acknowledgment.
# ::tokens ["May", "he", "Rest", "In", "Peace", ".", "Every", "person", "who", "lived", "and", "no", "longer", "lives", "the", "mystery", "of", "lifes", "existence", "deserves", "acknowledgment", "."]
# ::lemmas ["may", "he", "rest", "in", "Peace", ".", "every", "person", "who", "live", "and", "no", "long", "live", "the", "mystery", "of", "life", "existence", "deserve", "acknowledgment", "."]
(c10-0 / multi-sentence
       :snt1 (c10-11 / wish-01
                     :ARG1 (c10-4 / rest-01
                                  :ARG1 (c10-6 / he)
                                  :manner (c10-7 / peace)))
       :snt2 (c10-13 / deserve-01
                     :ARG0 (c10-1 / person
                                  :mod (c10-5 / every)
                                  :ARG0-of (c10-8 / live-01
                                                  :ARG1 (c10-9 / mystery
                                                               :topic (c10-2 / exist-01
                                                                             :ARG1 (c10-14 / life))))
                                  :ARG0-of (c10-10 / live-01
                                                   :time (c10-3 / no-longer)))
                     :ARG1 (c10-12 / acknowledge-01
                                   :ARG1 c10-9)))

# ::snt yo illuminati fuck is dead. Yassss!
# ::tokens ["yo", "illuminati", "fuck", "is", "dead", ".", "Yassss", "!"]
# ::lemmas ["yo", "illuminati", "fuck", "be", "dead", ".", "Yassss", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-5 / die-01
                    :ARG1 (c11-0 / fuck
                                 :mod (c11-3 / illuminati))
                    :mod (c11-1 / yo))
       :snt2 (c11-4 / yass
                    :mode expressive))

# ::snt Smothered to death by titties!
# ::tokens ["Smothered", "to", "death", "by", "titties", "!"]
# ::lemmas ["smother", "to", "death", "by", "titty", "!"]
(c12-3 / smear-02
       :ARG0 (c12-1 / tittie)
       :ARG1 (c12-0 / person)
       :ARG2 (c12-2 / die-01
                    :ARG1 c12-0))

# ::snt THE ANSWER WOULD HAVE MADE A GREAT SKIT ON SEINFELD. THERE REAL, AND THERE SPECTACULAR. NOT THAT THERES ANY THING WRONG WITH THAT?
# ::tokens ["THE", "ANSWER", "WOULD", "HAVE", "MADE", "A", "GREAT", "SKIT", "ON", "SEINFELD", ".", "THERE", "REAL", ",", "AND", "THERE", "SPECTACULAR", ".", "NOT", "THAT", "THERES", "ANY", "THING", "WRONG", "WITH", "THAT", "?"]
# ::lemmas ["the", "answer", "would", "have", "make", "a", "great", "SKIT", "ON", "SEINFELD", ".", "there", "REAL", ",", "and", "there", "SPECTACULAR", ".", "not", "that", "THERES", "any", "thing", "wrong", "with", "that", "?"]
(c13-11 / multi-sentence
        :snt1 (c13-4 / make-01
                     :ARG0 (c13-18 / person
                                   :ARG0-of (c13-17 / explain-01))
                     :ARG1 (c13-9 / thing
                                  :mod (c13-10 / great))
                     :location (c13-1 / location
                                      :name (c13-15 / name
                                                    :op1 "SeinFELD")))
        :snt2 (c13-7 / and
                     :op1 (c13-13 / thing
                                  :ARG1-of (c13-16 / real-04)
                                  :location (c13-20 / there))
                     :op2 (c13-0 / thing
                                 :mod (c13-12 / particular)
                                 :location c13-20))
        :snt3 (c13-14 / mean-01
                      :ARG1 (c13-8 / that)
                      :ARG2 (c13-3 / thing
                                   :mod (c13-6 / any)
                                   :ARG1-of (c13-19 / wrong-02
                                                    :ARG2 (c13-2 / that)))
                      :polarity (c13-5 / amr-unknown)
                      :polarity -))

# ::snt Sexed to death. RIP
# ::tokens ["Sexed", "to", "death", ".", "RIP"]
# ::lemmas ["sexed", "to", "death", ".", "RIP"]
(c14-1 / multi-sentence
       :snt1 (c14-3 / sex-01
                    :ARG1 (c14-5 / person
                                 :ARG1-of (c14-6 / die-01)))
       :snt2 (c14-4 / rest-01
                    :ARG1 (c14-0 / you)
                    :manner (c14-2 / peace)
                    :mode imperative))

# ::snt Vampires by the looks of that photo.
# ::tokens ["Vampires", "by", "the", "looks", "of", "that", "photo", "."]
# ::lemmas ["vampire", "by", "the", "look", "of", "that", "photo", "."]
(c15-2 / look-02
       :ARG0 (c15-0 / photo
                    :mod (c15-3 / that))
       :ARG1 (c15-1 / Vampire))

# ::snt I was hoping he was on the job at the time, he could have came and went at the same time!!
# ::tokens ["I", "was", "hoping", "he", "was", "on", "the", "job", "at", "the", "time", ",", "he", "could", "have", "came", "and", "went", "at", "the", "same", "time", "!", "!"]
# ::lemmas ["i", "be", "hope", "he", "be", "on", "the", "job", "at", "the", "time", ",", "he", "could", "have", "come", "and", "go", "at", "the", "same", "time", "!", "!"]
(c16-0 / multi-sentence
       :snt1 (c16-4 / hope-01
                    :ARG0 (c16-9 / i)
                    :ARG1 (c16-8 / job
                                 :time (c16-10 / time)
                                 :domain (c16-7 / he)))
       :snt2 (c16-5 / possible-01
                    :ARG1 (c16-2 / and
                                 :op1 (c16-6 / come-01
                                             :ARG1 (c16-3 / he))
                                 :op2 (c16-11 / go-02
                                              :ARG0 c16-3)
                                 :time (c16-12 / time
                                               :ARG1-of (c16-1 / same-01)))))

# ::snt Looking like Popeye?
# ::tokens ["Looking", "like", "Popeye", "?"]
# ::lemmas ["look", "like", "Popeye", "?"]
(c17-2 / look-02
       :ARG1 (c17-0 / person
                    :name (c17-1 / name
                                 :op1 "Popeye"))
       :polarity (c17-3 / amr-unknown))

# ::snt He was old?
# ::tokens ["He", "was", "old", "?"]
# ::lemmas ["he", "be", "old", "?"]
(c18-0 / old
       :polarity (c18-2 / amr-unknown)
       :domain (c18-1 / he))

# ::snt Myxomatosis?
# ::tokens ["Myxomatosis", "?"]
# ::lemmas ["Myxomatosis", "?"]
(c19-0 / myxomatosis
       :polarity (c19-1 / amr-unknown))

# ::snt A year hard on?
# ::tokens ["A", "year", "hard", "on", "?"]
# ::lemmas ["a", "year", "hard", "on", "?"]
(c20-3 / hard-02
       :polarity (c20-2 / amr-unknown)
       :ARG1 (c20-0 / on)
       :duration (c20-4 / temporal-quantity
                        :unit (c20-1 / year)
                        :quant 1))

# ::snt No, he was murdered! Do your research!
# ::tokens ["No", ",", "he", "was", "murdered", "!", "Do", "your", "research", "!"]
# ::lemmas ["no", ",", "he", "be", "murder", "!", "do", "your", "research", "!"]
(c21-2 / multi-sentence
       :snt1 (c21-1 / no)
       :snt2 (c21-4 / murder-01
                    :ARG1 (c21-5 / he))
       :snt3 (c21-3 / research-01
                    :ARG0 (c21-0 / you)
                    :mode imperative))

# ::snt He was
# ::tokens ["He", "was"]
# ::lemmas ["he", "be"]
(c22-0 / he)

# ::snt Thats Popeye!
# ::tokens ["That", "s", "Popeye", "!"]
# ::lemmas ["that", "s", "popeye", "!"]
(c23-2 / say-01
       :ARG1 (c23-1 / that)
       :ARG2 (c23-0 / popeye))

# ::snt Oldness?
# ::tokens ["Oldness", "?"]
# ::lemmas ["Oldness", "?"]
(c24-0 / old
       :polarity (c24-1 / amr-unknown))

# ::snt Extreme penis exhaustion
# ::tokens ["Extreme", "penis", "exhaustion"]
# ::lemmas ["extreme", "penis", "exhaustion"]
(c25-1 / exhaustion
       :mod (c25-2 / penis)
       :degree (c25-0 / extreme))

# ::snt Bet it's not from pulling his own dude
# ::tokens ["Bet", "it", "'s", "not", "from", "pulling", "his", "own", "dude"]
# ::lemmas ["bet", "it", "be", "not", "from", "pull", "his", "own", "dude"]
(c26-0 / bet-01
       :ARG0 (c26-4 / i)
       :ARG2 (c26-3 / cause-01
                    :ARG0 (c26-2 / pull-01
                                 :ARG0 (c26-1 / he)
                                 :ARG1 (c26-5 / dude
                                              :poss c26-1))
                    :polarity -))

# ::snt Infected, how surprising..most disgustg dude evr, nxt to Goldstein/Flynt/Guccione..hedonism was always abt ugly dudes foolg models-frm Day
# ::tokens ["Infected", ",", "how", "surprising", "..", "most", "disgustg", "dude", "evr", ",", "nxt", "to", "Goldstein", "/", "Flynt", "/", "Guccione", "..", "hedonism", "was", "always", "abt", "ugly", "dudes", "foolg", "models", "-", "frm", "Day"]
# ::lemmas ["infect", ",", "how", "surprising", "..", "most", "disgustg", "dude", "evr", ",", "nxt", "to", "Goldstein", "/", "Flynt", "/", "Guccione", "..", "hedonism", "be", "always", "abt", "ugly", "dude", "foolg", "model", "-", "frm", "day"]
(c27-11 / multi-sentence
        :snt1 (c27-28 / infect-01
                      :ARG0 (c27-0 / surprise-01
                                   :degree (c27-5 / so)))
        :snt2 (c27-4 / say-01
                     :ARG0 (c27-6 / i)
                     :ARG1 (c27-10 / and
                                   :op1 (c27-29 / disgust-01
                                                :ARG1 (c27-15 / dude
                                                              :ARG0-of (c27-7 / have-rel-role-91
                                                                              :ARG2 (c27-14 / dude))
                                                              :ARG1-of (c27-26 / have-quant-91
                                                                               :ARG3 (c27-8 / most))))
                                   :op2 c27-4
                                   :ARG0 c27-6
                                   :ARG1 (c27-20 / nxt-01
                                                 :ARG0 c27-6
                                                 :ARG2 (c27-21 / slash
                                                               :op1 (c27-24 / person
                                                                            :name (c27-13 / name
                                                                                          :op1 "Goldstein"))
                                                               :op2 (c27-12 / person
                                                                            :name (c27-25 / name
                                                                                          :op1 "Flynt"))
                                                               :op3 (c27-3 / person
                                                                           :name (c27-16 / name
                                                                                         :op1 "Guccione"))
                                                               :ARG2-of c27-4))))
        :snt3 (c27-22 / equal-01
                      :ARG1 (c27-1 / sexism)
                      :ARG2 (c27-23 / dude
                                    :mod (c27-17 / ugly)
                                    :ARG0-of (c27-19 / fool-01
                                                     :ARG1 (c27-18 / model)))
                      :time (c27-9 / always))
        :ARG2 (c27-2 / person
                     :name (c27-27 / name
                                   :op1 "Mr"
                                   :op2 "Day")))

# ::snt He is dead
# ::tokens ["He", "is", "dead"]
# ::lemmas ["he", "be", "dead"]
(c29-0 / die-01
       :ARG1 (c29-1 / he))

# ::snt Clickbait
# ::tokens ["Clickbait"]
# ::lemmas ["clickbait"]
(c30-0 / clickbait)

# ::snt please fix the major typo in this article
# ::tokens ["please", "fix", "the", "major", "typo", "in", "this", "article"]
# ::lemmas ["please", "fix", "the", "major", "typo", "in", "this", "article"]
(c31-0 / fix-02
       :ARG0 (c31-1 / you)
       :ARG1 (c31-3 / typo
                    :ARG1-of (c31-2 / major-02)
                    :location (c31-4 / article
                                     :mod (c31-5 / this)))
       :mode imperative
       :polite +)

# ::snt Is it a huge mystery? He was old. wasn't he?
# ::tokens ["Is", "it", "a", "huge", "mystery", "?", "He", "was", "old", ".", "was", "n't", "he", "?"]
# ::lemmas ["be", "it", "a", "huge", "mystery", "?", "he", "be", "old", ".", "be", "not", "he", "?"]
(c32-1 / multi-sentence
       :snt1 (c32-4 / mystery
                    :polarity (c32-7 / amr-unknown)
                    :domain (c32-6 / it)
                    :mod (c32-3 / huge))
       :snt2 (c32-0 / old
                    :domain (c32-5 / he)
                    :ARG1-of (c32-2 / request-confirmation-91)))

# ::snt Was there ever any question?
# ::tokens ["Was", "there", "ever", "any", "question", "?"]
# ::lemmas ["be", "there", "ever", "any", "question", "?"]
(c33-2 / question-01
       :polarity (c33-3 / amr-unknown)
       :time (c33-0 / ever)
       :mod (c33-1 / any))

# ::snt Old?
# ::tokens ["Old", "?"]
# ::lemmas ["old", "?"]
(c34-0 / old
       :polarity (c34-1 / amr-unknown))

# ::snt Hugh Hefner was years old, nobody Fucking cares
# ::tokens ["Hugh", "Hefner", "was", "years", "old", ",", "nobody", "Fucking", "cares"]
# ::lemmas ["Hugh", "Hefner", "be", "years", "old", ",", "nobody", "Fucking", "care"]
(c35-6 / care-01
       :ARG0 (c35-2 / nobody)
       :ARG1 (c35-8 / age-01
                    :ARG1 (c35-5 / person
                                 :name (c35-4 / name
                                              :op1 "Hugh"
                                              :op2 "Hefner"))
                    :ARG2 (c35-3 / multiple
                                 :op1 (c35-7 / temporal-quantity
                                             :unit (c35-1 / year)
                                             :quant 1)))
       :mod (c35-0 / fucking
                   :mode expressive))

# ::snt Really? That's what old people do.
# ::tokens ["Really", "?", "That", "'s", "what", "old", "people", "do", "."]
# ::lemmas ["really", "?", "that", "be", "what", "old", "people", "do", "."]
(c36-1 / multi-sentence
       :snt1 (c36-2 / real-04
                    :polarity (c36-5 / amr-unknown))
       :snt2 (c36-6 / do-02
                    :ARG0 (c36-3 / person
                                 :mod (c36-0 / old))
                    :ARG1 (c36-4 / that)))

# ::snt Old age? Too much viagra?
# ::tokens ["Old", "age", "?", "Too", "much", "viagra", "?"]
# ::lemmas ["old", "age", "?", "too", "much", "viagra", "?"]
(c37-1 / multi-sentence
       :snt1 (c37-7 / age
                    :mod (c37-0 / old))
       :snt2 (c37-2 / viagra
                    :ARG1-of (c37-3 / have-quant-91
                                    :ARG2 (c37-4 / much)
                                    :ARG3 (c37-5 / too))
                    :polarity (c37-6 / amr-unknown)))

# ::snt I still wander where is he now, hell or heaven, because they both are real...
# ::tokens ["I", "still", "wander", "where", "is", "he", "now", ",", "hell", "or", "heaven", ",", "because", "they", "both", "are", "real", "..."]
# ::lemmas ["i", "still", "wander", "where", "be", "he", "now", ",", "hell", "or", "heaven", ",", "because", "they", "both", "be", "real", "..."]
(c38-5 / wander-01
       :ARG0 (c38-9 / i)
       :ARG1 (c38-10 / amr-choice
                     :op1 (c38-4 / he)
                     :op2 (c38-7 / hell)
                     :op3 (c38-3 / heaven))
       :mod (c38-1 / still)
       :ARG1-of (c38-6 / cause-01
                       :ARG0 (c38-2 / real-04
                                    :ARG1 (c38-8 / they
                                                 :mod (c38-0 / both)))))

# ::snt Ain't it old age?
# ::tokens ["Ai", "n't", "it", "old", "age", "?"]
# ::lemmas ["be", "not", "it", "old", "age", "?"]
(c39-2 / age-01
       :mod (c39-0 / old)
       :ARG1-of (c39-1 / request-confirmation-91))

# ::snt Old!
# ::tokens ["Old", "!"]
# ::lemmas ["old", "!"]
(c40-0 / old)

# ::snt Im guessing old age.
# ::tokens ["I", "m", "guessing", "old", "age", "."]
# ::lemmas ["i", "m", "guess", "old", "age", "."]
(c41-0 / guess-01
       :ARG0 (c41-2 / i)
       :ARG1 (c41-3 / age-01
                    :mod (c41-1 / old)))

# ::snt Excessive hardon due to Viagra overdose?
# ::tokens ["Excessive", "hardon", "due", "to", "Viagra", "overdose", "?"]
# ::lemmas ["excessive", "hardon", "due", "to", "Viagra", "overdose", "?"]
(c42-3 / hardon
       :polarity (c42-6 / amr-unknown)
       :ARG1-of (c42-2 / excessive-02)
       :ARG1-of (c42-5 / cause-01
                       :ARG0 (c42-0 / overdose-01
                                    :ARG2 (c42-4 / product
                                                 :name (c42-1 / name
                                                              :op1 "Viagra")))))

# ::snt Let me guess. Because he was ?
# ::tokens ["Let", "me", "guess", ".", "Because", "he", "was", "?"]
# ::lemmas ["let", "i", "guess", ".", "because", "he", "be", "?"]
(c43-0 / multi-sentence
       :snt1 (c43-2 / let-01
                    :ARG1 (c43-6 / guess-01
                                 :ARG0 (c43-4 / i)))
       :snt2 (c43-3 / cause-01
                    :ARG0 (c43-1 / he)
                    :polarity (c43-5 / amr-unknown)))

# ::snt Let me guess, Viagra induced heart attack?
# ::tokens ["Let", "me", "guess", ",", "Viagra", "induced", "heart", "attack", "?"]
# ::lemmas ["let", "i", "guess", ",", "Viagra", "induce", "heart", "attack", "?"]
(c44-3 / let-01
       :ARG1 (c44-6 / guess-01
                    :ARG0 (c44-4 / i)
                    :ARG1 (c44-2 / heart-attack
                                 :ARG1-of (c44-0 / induce-01
                                                 :ARG0 (c44-1 / Viagra))))
       :polarity (c44-5 / amr-unknown))

# ::snt Please play Strip That Down by Liam Payne
# ::tokens ["Please", "play", "Strip", "That", "Down", "by", "Liam", "Payne"]
# ::lemmas ["please", "play", "Strip", "that", "down", "by", "Liam", "Payne"]
(c45-5 / play-11
       :ARG0 (c45-0 / you)
       :ARG1 (c45-1 / music
                    :name (c45-2 / name
                                 :op1 "Strip"
                                 :op2 "That"
                                 :op3 "Down")
                    :source (c45-3 / person
                                   :name (c45-4 / name
                                                :op1 "Liam"
                                                :op2 "Payne")))
       :mode imperative
       :polite +)

# ::snt Im no medical examiner but I'm going with "he was really freaking old."
# ::tokens ["I", "m", "no", "medical", "examiner", "but", "I", "'m", "going", "with", "\"", "he", "was", "really", "freaking", "old", ".", "\""]
# ::lemmas ["i", "m", "no", "medical", "examiner", "but", "i", "be", "go", "with", "\"", "he", "be", "really", "freak", "old", ".", "\""]
(c46-8 / contrast-01
       :ARG1 (c46-7 / person
                    :ARG0-of (c46-6 / have-org-role-91
                                    :ARG3 (c46-5 / examiner
                                                 :mod (c46-2 / medicine)))
                    :domain (c46-10 / i)
                    :polarity -)
       :ARG2 (c46-11 / go-22
                     :ARG0 c46-10
                     :ARG1 (c46-3 / say-01
                                  :ARG0 c46-10
                                  :ARG1 (c46-0 / old
                                               :domain (c46-9 / he)
                                               :mod (c46-1 / freaking
                                                           :degree (c46-4 / really)
                                                           :mode expressive)))))

# ::snt So just say it &amp; stop the click bait
# ::tokens ["So", "just", "say", "it", "&", "amp", ";", "stop", "the", "click", "bait"]
# ::lemmas ["so", "just", "say", "it", "&", "amp", ";", "stop", "the", "click", "bait"]
(c47-7 / and
       :op1 (c47-3 / say-01
                   :ARG0 (c47-2 / you)
                   :ARG1 (c47-6 / it)
                   :mod (c47-5 / just)
                   :mode imperative)
       :op2 (c47-8 / amp)
       :op3 (c47-0 / stop-01
                   :ARG0 c47-2
                   :ARG1 (c47-1 / bait-01
                                :ARG2 (c47-4 / click-01))
                   :mode imperative))

# ::snt Cause of death happiness
# ::tokens ["Cause", "of", "death", "happiness"]
# ::lemmas ["cause", "of", "death", "happiness"]
(c48-0 / cause-01
       :ARG1 (c48-1 / happy-01
                    :mod (c48-2 / die-01)))

# ::snt I don't know... ... Just plum wore out maybe
# ::tokens ["I", "do", "n't", "know", "...", "...", "Just", "plum", "wore", "out", "maybe"]
# ::lemmas ["i", "do", "not", "know", "...", "...", "just", "plum", "wear", "out", "maybe"]
(c49-0 / multi-sentence
       :snt1 (c49-3 / know-01
                    :ARG0 (c49-6 / i)
                    :polarity -)
       :snt2 (c49-4 / wear-out-03
                    :ARG1 (c49-2 / person)
                    :mod (c49-5 / just)
                    :ARG1-of (c49-1 / possible-01)
                    :mod (c49-7 / plum)))

# ::snt Did he die in the sack?
# ::tokens ["Did", "he", "die", "in", "the", "sack", "?"]
# ::lemmas ["do", "he", "die", "in", "the", "sack", "?"]
(c50-1 / die-01
       :polarity (c50-3 / amr-unknown)
       :ARG1 (c50-2 / he)
       :location (c50-0 / sack))
