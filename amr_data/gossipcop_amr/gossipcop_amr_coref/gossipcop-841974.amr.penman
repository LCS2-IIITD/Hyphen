# ::snt . Are you ready to vote in ROUND ? What time does it start anyway? Please post the link as soon as possible! Thank you very much!!!
# ::tokens [".", "Are", "you", "ready", "to", "vote", "in", "ROUND", "?", "What", "time", "does", "it", "start", "anyway", "?", "Please", "post", "the", "link", "as", "soon", "as", "possible", "!", "Thank", "you", "very", "much", "!", "!", "!"]
# ::lemmas [".", "be", "you", "ready", "to", "vote", "in", "ROUND", "?", "what", "time", "do", "it", "start", "anyway", "?", "please", "post", "the", "link", "as", "soon", "as", "possible", "!", "thank", "you", "very", "much", "!", "!", "!"]
(c1-16 / multi-sentence
       :snt1 (c1-18 / ready-02
                    :polarity (c1-13 / amr-unknown)
                    :ARG1 (c1-6 / you)
                    :ARG2 (c1-8 / vote-01
                                :ARG0 c1-6
                                :location (c1-4 / OUND))
                    :polarity (c1-12 / amr-unknown))
       :snt2 (c1-0 / start-01
                   :ARG1 (c1-21 / it)
                   :time (c1-11 / amr-unknown)
                   :mod (c1-22 / anyway))
       :snt3 (c1-20 / post-01
                    :ARG0 (c1-14 / you)
                    :ARG1 (c1-1 / link)
                    :time (c1-5 / soon
                                :ARG2-of (c1-9 / have-degree-91
                                               :ARG1 c1-20
                                               :ARG3 (c1-19 / equal
                                                            :mod (c1-2 / very))
                                               :ARG4 (c1-17 / possible-01
                                                            :ARG1 c1-20)))
                    :mode imperative
                    :polite +)
       :snt4 (c1-15 / thank-01
                    :ARG0 (c1-7 / i)
                    :ARG1 (c1-3 / you)
                    :mod (c1-10 / much
                                :degree c1-2)))

# ::snt I nominate Jack Sparrow (Jonny Depp)..Pirates Of Caribbean..
# ::tokens ["I", "nominate", "Jack", "Sparrow", "(", "Jonny", "Depp)", "..", "Pirates", "Of", "Caribbean", ".."]
# ::lemmas ["i", "nominate", "Jack", "Sparrow", "(", "Jonny", "Depp)", "..", "pirate", "of", "Caribbean", ".."]
(c2-1 / nominate-01
      :ARG0 (c2-6 / i)
      :ARG1 (c2-3 / person
                  :name (c2-2 / name
                              :op1 "Jack"
                              :op2 "Sprow")
                  :ARG1-of (c2-0 / mean-01
                                 :ARG2 (c2-5 / work-of-art
                                             :name (c2-4 / name
                                                         :op1 "Pirates"
                                                         :op2 "Of"
                                                         :op3 "Caribbean")))))

# ::snt Noel Fisher...Mickey Milkovich from
# ::tokens ["Noel", "Fisher", "...", "Mickey", "Milkovich", "from"]
# ::lemmas ["Noel", "Fisher", "...", "Mickey", "Milkovich", "from"]
(c3-1 / multi-sentence
      :snt1 (c3-4 / person
                  :name (c3-0 / name
                              :op1 "Noel"
                              :op2 "Fishers"))
      :snt2 (c3-2 / person
                  :name (c3-3 / name
                              :op1 "Mickey"
                              :op2 "Milkovich")))

# ::snt JE SUIS PREST!!!
# ::tokens ["JE", "SUIS", "PREST", "!", "!", "!"]
# ::lemmas ["JE", "SUIS", "PREST", "!", "!", "!"]
(c4-1 / prove-01
      :mod (c4-0 / jeez
                 :mode expressive)
      :mode expressive)

# ::snt Stephen
# ::tokens ["Stephen"]
# ::lemmas ["Stephen"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "Stephen"))

# ::snt Sam heugham for favorite Tv Actor
# ::tokens ["Sam", "heugham", "for", "favorite", "Tv", "Actor"]
# ::lemmas ["Sam", "heugham", "for", "favorite", "Tv", "actor"]
(c6-4 / person
      :name (c6-1 / name
                  :op1 "Sam"
                  :op2 "Heugham")
      :topic (c6-2 / person
                   :ARG0-of (c6-3 / act-01
                                  :medium (c6-5 / television))
                   :ARG1-of (c6-0 / favor-01)))

# ::snt Sam heugham
# ::tokens ["Sam", "heugham"]
# ::lemmas ["Sam", "heugham"]
(c7-0 / sam
      :mode expressive)

# ::snt Nominate Sam heugham *Alpha Male Madness " flavor male tv actor" Best Actor
# ::tokens ["Nominate", "Sam", "heugham", "*", "Alpha", "Male", "Madness", "\"", "flavor", "male", "tv", "actor", "\"", "Best", "Actor"]
# ::lemmas ["Nominate", "Sam", "heugham", "*", "Alpha", "Male", "Madness", "\"", "flavor", "male", "tv", "actor", "\"", "Best", "actor"]
(c8-2 / multi-sentence
      :snt1 (c8-1 / nominate-01
                  :ARG1 (c8-6 / person
                              :name (c8-5 / name
                                          :op1 "Sam"
                                          :op2 "Heugham")))
      :snt2 (c8-12 / and
                   :op1 (c8-13 / disease
                               :name (c8-7 / name
                                           :op1 "Alpha"
                                           :op2 "male"
                                           :op3 "madness")
                               :mod (c8-0 / flavor))
                   :op2 (c8-3 / person
                              :ARG0-of (c8-11 / act-01
                                              :mod (c8-10 / television))
                              :mod (c8-8 / male
                                         :mod-of c8-3)))
      :op3 (c8-14 / person
                  :ARG0-of (c8-9 / act-01
                                 :mod (c8-4 / award
                                            :ARG1 c8-4))))

# ::snt I vote for He is great in
# ::tokens ["I", "vote", "for", "He", "is", "great", "in"]
# ::lemmas ["i", "vote", "for", "he", "be", "great", "in"]
(c9-0 / vote-01
      :ARG0 (c9-3 / i)
      :ARG1 (c9-1 / he)
      :ARG0-of (c9-2 / cause-01
                     :ARG1 (c9-4 / great
                                 :domain c9-1)))

# ::snt I nominate Cameron Monaghan, best new "upandcomer"
# ::tokens ["I", "nominate", "Cameron", "Monaghan", ",", "best", "new", "\"", "upandcomer", "\""]
# ::lemmas ["i", "nominate", "Cameron", "Monaghan", ",", "good", "new", "\"", "upandcomer", "\""]
(c10-0 / nominate-01
       :ARG0 (c10-6 / i)
       :ARG1 (c10-3 / person
                    :name (c10-2 / name
                                 :op1 "Cameron"
                                 :op2 "Monaghan")
                    :mod (c10-8 / upandcomer
                                :ARG1-of (c10-4 / new-01)
                                :ARG1-of (c10-5 / have-degree-91
                                                :ARG2 (c10-7 / good-02
                                                             :ARG1 c10-4)
                                                :ARG3 (c10-1 / most)))))

# ::snt Sam is my vote for
# ::tokens ["Sam", "is", "my", "vote", "for"]
# ::lemmas ["Sam", "be", "my", "vote", "for"]
(c11-1 / vote-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-2 / person
                    :name (c11-0 / name
                                 :op1 "Sam")))

# ::snt I nominate from !!!!!!!
# ::tokens ["I", "nominate", "from", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "nominate", "from", "!", "!", "!", "!", "!", "!", "!"]
(c12-0 / nominate-01
       :ARG0 (c12-1 / i))

# ::snt I have been nominating Toby Stephens From black sails
# ::tokens ["I", "have", "been", "nominating", "Toby", "Stephens", "From", "black", "sails"]
# ::lemmas ["i", "have", "be", "nominate", "Toby", "Stephens", "From", "black", "sail"]
(c14-1 / nominate-01
       :ARG0 (c14-5 / i)
       :ARG1 (c14-4 / person
                    :name (c14-3 / name
                                 :op1 "Toby"
                                 :op2 "Stephens"))
       :source (c14-2 / sail-01
                      :ARG1-of (c14-0 / black-04)))

# ::snt I nominate from !!!!!!!
# ::tokens ["I", "nominate", "from", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "nominate", "from", "!", "!", "!", "!", "!", "!", "!"]
(c15-0 / nominate-01
       :ARG0 (c15-1 / i))

# ::snt Count me in too! Hands down he's a WINNER!!!
# ::tokens ["Count", "me", "in", "too", "!", "Hands", "down", "he", "'s", "a", "WINNER", "!", "!", "!"]
# ::lemmas ["count", "i", "in", "too", "!", "hand", "down", "he", "be", "a", "winner", "!", "!", "!"]
(c16-1 / multi-sentence
       :snt1 (c16-3 / count-02
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-6 / i)
                    :mod (c16-7 / too)
                    :mode imperative)
       :snt2 (c16-4 / win-01
                    :ARG0 (c16-2 / he)
                    :manner (c16-5 / hand-down-00)
                    :mode expressive))

# ::snt I nominate from !!!!!!!
# ::tokens ["I", "nominate", "from", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "nominate", "from", "!", "!", "!", "!", "!", "!", "!"]
(c17-0 / nominate-01
       :ARG0 (c17-1 / i))

# ::snt I nominate for
# ::tokens ["I", "nominate", "for"]
# ::lemmas ["i", "nominate", "for"]
(c18-0 / nominate-01
       :ARG0 (c18-1 / i))

# ::snt I second that!
# ::tokens ["I", "second", "that", "!"]
# ::lemmas ["i", "second", "that", "!"]
(c19-2 / second-01
       :ARG0 (c19-1 / i)
       :ARG1 (c19-0 / that)
       :mode expressive)

# ::snt I nominate of
# ::tokens ["I", "nominate", "of"]
# ::lemmas ["i", "nominate", "of"]
(c20-0 / nominate-01
       :ARG0 (c20-1 / i))

# ::snt I nominate Zach McGowan
# ::tokens ["I", "nominate", "Zach", "McGowan"]
# ::lemmas ["i", "nominate", "Zach", "McGowan"]
(c21-2 / nominate-01
       :ARG0 (c21-3 / i)
       :ARG1 (c21-0 / person
                    :name (c21-1 / name
                                 :op1 "Zach"
                                 :op2 "McGowan")))

# ::snt I nominate Carlos Valdes () from
# ::tokens ["I", "nominate", "Carlos", "Valdes", "(", ")", "from"]
# ::lemmas ["i", "nominate", "Carlos", "Valdes", "(", ")", "from"]
(c22-2 / nominate-01
       :ARG0 (c22-3 / i)
       :ARG1 (c22-0 / person
                    :name (c22-1 / name
                                 :op1 "Carlos"
                                 :op2 "Valdes"
                                 :op3 " ()")))

# ::snt for
# ::tokens ["for"]
# ::lemmas ["for"]
(c23-0 / for)

# ::snt I nominate from !!!!!!!
# ::tokens ["I", "nominate", "from", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "nominate", "from", "!", "!", "!", "!", "!", "!", "!"]
(c24-0 / nominate-01
       :ARG0 (c24-1 / i))

# ::snt I nominate for
# ::tokens ["I", "nominate", "for"]
# ::lemmas ["i", "nominate", "for"]
(c25-0 / nominate-01
       :ARG0 (c25-1 / i))

# ::snt I nominate Richard Rankin
# ::tokens ["I", "nominate", "Richard", "Rankin"]
# ::lemmas ["i", "nominate", "Richard", "Rankin"]
(c26-2 / nominate-01
       :ARG0 (c26-3 / i)
       :ARG1 (c26-0 / person
                    :name (c26-1 / name
                                 :op1 "Richard"
                                 :op2 "Rankin")))

# ::snt Sam Heughan
# ::tokens ["Sam", "Heughan"]
# ::lemmas ["Sam", "Heughan"]
(c27-1 / person
       :name (c27-0 / name
                    :op1 "Sam"
                    :op2 "Heughan"))

# ::snt cameron monaghan!
# ::tokens ["cameron", "monaghan", "!"]
# ::lemmas ["cameron", "monaghan", "!"]
(c28-1 / person
       :name (c28-0 / name
                    :op1 "Cameron"
                    :op2 "Monaghan"))

# ::snt noel fisher!
# ::tokens ["noel", "fisher", "!"]
# ::lemmas ["noel", "fisher", "!"]
(c29-1 / person
       :ARG0-of (c29-0 / fish-01
                       :ARG1 (c29-2 / loel)))

# ::snt Zach McGowan
# ::tokens ["Zach", "McGowan"]
# ::lemmas ["Zach", "McGowan"]
(c30-1 / person
       :name (c30-0 / name
                    :op1 "Zach"
                    :op2 "McGowan"))

# ::snt Jesse lee Soffer
# ::tokens ["Jesse", "lee", "Soffer"]
# ::lemmas ["Jesse", "lee", "Soffer"]
(c31-1 / person
       :name (c31-0 / name
                    :op1 "Jesse"
                    :op2 "Lee"
                    :op3 "Soffer"))

# ::snt Of course it's OliverQueen
# ::tokens ["Of", "course", "it", "'s", "OliverQueen"]
# ::lemmas ["of", "course", "it", "be", "OliverQueen"]
(c32-1 / person
       :name (c32-0 / name
                    :op1 "OliverQueen")
       :mod (c32-2 / of-course))

# ::snt I nominate king and our savior from for
# ::tokens ["I", "nominate", "king", "and", "our", "savior", "from", "for"]
# ::lemmas ["i", "nominate", "king", "and", "our", "savior", "from", "for"]
(c33-1 / nominate-01
       :ARG0 (c33-8 / i)
       :ARG1 (c33-9 / and
                    :op1 (c33-5 / person
                                :ARG0-of (c33-4 / have-org-role-91
                                                :ARG2 (c33-6 / king)))
                    :op2 (c33-2 / person
                                :ARG0-of (c33-3 / save-02
                                                :ARG1 (c33-7 / we))
                                :source (c33-0 / for))))

# ::snt I nominate from The Walking Dead!
# ::tokens ["I", "nominate", "from", "The", "Walking", "Dead", "!"]
# ::lemmas ["i", "nominate", "from", "The", "Walking", "Dead", "!"]
(c34-2 / nominate-01
       :ARG0 (c34-3 / i)
       :ARG2 (c34-0 / book
                    :name (c34-1 / name
                                 :op1 "The"
                                 :op2 "Walking"
                                 :op3 "Dead")))

# ::snt My nomination for is the one and only aka JAMMF
# ::tokens ["My", "nomination", "for", "is", "the", "one", "and", "only", "aka", "JAMMF"]
# ::lemmas ["my", "nomination", "for", "be", "the", "one", "and", "only", "aka", "JAMMF"]
(c35-2 / nominate-01
       :ARG1 (c35-5 / i)
       :ARG2 (c35-4 / person
                    :name (c35-3 / name
                                 :op1 "JAMMF")
                    :mod (c35-0 / one)
                    :mod (c35-1 / only)))

# ::snt My vote for ...
# ::tokens ["My", "vote", "for", "..."]
# ::lemmas ["my", "vote", "for", "..."]
(c36-0 / vote-01
       :ARG0 (c36-1 / i)
       :ARG1 (c36-2 / thing))

# ::snt My vote for ...
# ::tokens ["My", "vote", "for", "..."]
# ::lemmas ["my", "vote", "for", "..."]
(c37-0 / vote-01
       :ARG0 (c37-1 / i)
       :ARG1 (c37-2 / thing))

# ::snt How to vote , please !
# ::tokens ["How", "to", "vote", ",", "please", "!"]
# ::lemmas ["how", "to", "vote", ",", "please", "!"]
(c38-1 / thing
       :manner-of (c38-0 / vote-01)
       :mode imperative
       :polite +)

# ::snt i nominate
# ::tokens ["i", "nominate"]
# ::lemmas ["i", "nominate"]
(c40-0 / nominate-01
       :ARG0 (c40-1 / i))

# ::snt I nominate Richard Rankin
# ::tokens ["I", "nominate", "Richard", "Rankin"]
# ::lemmas ["i", "nominate", "Richard", "Rankin"]
(c41-2 / nominate-01
       :ARG0 (c41-3 / i)
       :ARG1 (c41-0 / person
                    :name (c41-1 / name
                                 :op1 "Richard"
                                 :op2 "Rankin")))

# ::snt I nominate Mickey Milkovich (Noel Fisher) from
# ::tokens ["I", "nominate", "Mickey", "Milkovich", "(", "Noel", "Fisher", ")", "from"]
# ::lemmas ["i", "nominate", "Mickey", "Milkovich", "(", "Noel", "Fisher", ")", "from"]
(c42-1 / nominate-01
       :ARG0 (c42-6 / i)
       :ARG1 (c42-4 / person
                    :name (c42-3 / name
                                 :op1 "Mickey"
                                 :op2 "Milkovich")
                    :ARG1-of (c42-0 / mean-01
                                    :ARG2 (c42-2 / person
                                                 :name (c42-5 / name
                                                              :op1 "Noel"
                                                              :op2 "Fishers")))))

# ::snt I nominate for
# ::tokens ["I", "nominate", "for"]
# ::lemmas ["i", "nominate", "for"]
(c43-0 / nominate-01
       :ARG0 (c43-1 / i))

# ::snt Sam Heughan, duh! Forever my Jamie Fraser.
# ::tokens ["Sam", "Heughan", ",", "duh", "!", "Forever", "my", "Jamie", "Fraser", "."]
# ::lemmas ["Sam", "Heughan", ",", "duh", "!", "forever", "my", "Jamie", "Fraser", "."]
(c44-3 / multi-sentence
       :snt1 (c44-7 / duh
                    :domain (c44-5 / person
                                   :name (c44-1 / name
                                                :op1 "Sam"
                                                :op2 "Heughan"))
                    :mode expressive)
       :snt2 (c44-2 / person
                    :name (c44-4 / name
                                 :op1 "Jamie"
                                 :op2 "Fraser")
                    :poss (c44-6 / i)
                    :mod (c44-0 / forever)))

# ::snt grant gustin, jeffrey d morgan
# ::tokens ["grant", "gustin", ",", "jeffrey", "d", "morgan"]
# ::lemmas ["grant", "gustin", ",", "jeffrey", "d", "morgan"]
(c45-2 / say-01
       :ARG0 (c45-6 / i)
       :ARG1 (c45-7 / and
                    :op1 (c45-5 / thank-01
                                :ARG0 c45-6
                                :ARG1 (c45-4 / person
                                             :name (c45-0 / name
                                                          :op1 "Gaulin"))
                                :op2-of c45-7)
                    :ARG0 c45-6
                    :ARG1 (c45-1 / person
                                 :name (c45-3 / name
                                              :op1 "Jeffrey"
                                              :op2 "D"
                                              :op3 "Morgan")
                                 :ARG2-of c45-2)))

# ::snt I nominate Bob Morley () for
# ::tokens ["I", "nominate", "Bob", "Morley", "(", ")", "for"]
# ::lemmas ["i", "nominate", "Bob", "Morley", "(", ")", "for"]
(c46-0 / nominate-01
       :ARG0 (c46-4 / i)
       :ARG1 (c46-3 / person
                    :name (c46-2 / name
                                 :op1 "Bob"
                                 :op2 "Morley"))
       :purpose (c46-1 / event))

# ::snt My vote for always...
# ::tokens ["My", "vote", "for", "always", "..."]
# ::lemmas ["my", "vote", "for", "always", "..."]
(c47-1 / vote-01
       :ARG0 (c47-2 / i)
       :ARG1 (c47-3 / thing)
       :time (c47-0 / always))

# ::snt I nominate from for
# ::tokens ["I", "nominate", "from", "for"]
# ::lemmas ["i", "nominate", "from", "for"]
(c48-1 / nominate-01
       :ARG0 (c48-2 / i)
       :ARG2 (c48-0 / for))

# ::snt I nominate Dylan O'Brien () for
# ::tokens ["I", "nominate", "Dylan", "O'Brien", "(", ")", "for"]
# ::lemmas ["i", "nominate", "Dylan", "O'Brien", "(", ")", "for"]
(c49-2 / nominate-01
       :ARG0 (c49-3 / i)
       :ARG1 (c49-0 / person
                    :name (c49-1 / name
                                 :op1 "Dylan"
                                 :op2 "O'Brien")
                    :ARG2-of c49-2)
       :name c49-1
       :op1 " ()")

# ::snt And Magnus bane aka
# ::tokens ["And", "Magnus", "bane", "aka"]
# ::lemmas ["and", "Magnus", "bane", "aka"]
(c50-3 / and
       :op2 (c50-2 / person
                   :name (c50-0 / name
                                :op1 "Magnus"
                                :op2 "Bane")
                   :ARG2-of (c50-1 / name-01
                                   :ARG1 c50-2)))
