# ::snt R u srs ?OMG
# ::tokens ["R", "u", "srs", "?", "OMG"]
# ::lemmas ["r", "u", "srs", "?", "OMG"]
(c1-3 / serious-01
      :polarity (c1-0 / amr-unknown)
      :ARG1 (c1-2 / you)
      :mod (c1-1 / oh-my-god
                 :mode expressive))

# ::snt You are a sad, lost little man! I hope you can get your life together for your kids sake!
# ::tokens ["You", "are", "a", "sad", ",", "lost", "little", "man", "!", "I", "hope", "you", "can", "get", "your", "life", "together", "for", "your", "kids", "sake", "!"]
# ::lemmas ["you", "be", "a", "sad", ",", "lose", "little", "man", "!", "i", "hope", "you", "can", "get", "your", "life", "together", "for", "your", "kid", "sake", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-6 / man
                  :ARG0-of (c2-4 / sad-02)
                  :ARG1-of (c2-7 / lose-02)
                  :mod (c2-15 / little)
                  :domain (c2-1 / you))
      :snt2 (c2-8 / hope-01
                  :ARG0 (c2-13 / i)
                  :ARG1 (c2-9 / possible-01
                              :ARG1 (c2-14 / get-together-14
                                           :ARG0 (c2-5 / you)
                                           :ARG1 (c2-10 / life
                                                        :poss c2-5)
                                           :purpose (c2-0 / sake
                                                          :poss (c2-3 / person
                                                                      :ARG0-of (c2-12 / have-rel-role-91
                                                                                      :ARG1 c2-5
                                                                                      :ARG2 (c2-11 / kid))))))))

# ::snt Y u saying so
# ::tokens ["Y", "u", "saying", "so"]
# ::lemmas ["Y", "u", "say", "so"]
(c3-2 / say-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-0 / so))

# ::snt So true
# ::tokens ["So", "true"]
# ::lemmas ["so", "true"]
(c4-1 / true-01
      :degree (c4-0 / so))

# ::snt Sorry dear
# ::tokens ["Sorry", "dear"]
# ::lemmas ["sorry", "dear"]
(c5-2 / say-01
      :ARG1 (c5-0 / sorry-01)
      :ARG2 (c5-1 / dear))

# ::snt True
# ::tokens ["True"]
# ::lemmas ["true"]
(c6-0 / true-01)

# ::snt Why does Scott act this way? He thinks he is going to get attention from Kourtney again, hell NO
# ::tokens ["Why", "does", "Scott", "act", "this", "way", "?", "He", "thinks", "he", "is", "going", "to", "get", "attention", "from", "Kourtney", "again", ",", "hell", "NO"]
# ::lemmas ["why", "do", "Scott", "act", "this", "way", "?", "he", "think", "he", "be", "go", "to", "get", "attention", "from", "Kourtney", "again", ",", "hell", "no"]
(c7-1 / multi-sentence
      :snt1 (c7-13 / act-01
                   :ARG0 (c7-4 / person
                               :name (c7-0 / name
                                           :op1 "Scott"))
                   :manner (c7-7 / way
                                 :mod (c7-11 / this))
                   :ARG1-of (c7-8 / cause-01
                                  :ARG0 (c7-12 / amr-unknown)))
      :snt2 (c7-16 / think-01
                   :ARG0 (c7-3 / he)
                   :ARG1 (c7-14 / get-01
                                :ARG0 c7-3
                                :ARG1 (c7-9 / attend-02
                                            :ARG0 (c7-2 / person
                                                        :name (c7-5 / name
                                                                    :op1 "Kourtney"))
                                            :ARG1 c7-3
                                            :mod (c7-15 / again)))
                   :mod (c7-6 / nah
                              :mod (c7-10 / hell)
                              :mode expressive)))

# ::snt True
# ::tokens ["True"]
# ::lemmas ["true"]
(c8-0 / true-01)

# ::snt OMG
# ::tokens ["OMG"]
# ::lemmas ["OMG"]
(c9-0 / OMG
      :mode expressive)

# ::snt Y
# ::tokens ["Y"]
# ::lemmas ["Y"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Y"))

# ::snt And?
# ::tokens ["And", "?"]
# ::lemmas ["and", "?"]
(c11-1 / and
       :polarity (c11-0 / amr-unknown))

# ::snt Slow down , Scott
# ::tokens ["Slow", "down", ",", "Scott"]
# ::lemmas ["slow", "down", ",", "Scott"]
(c12-2 / say-01
       :ARG0 (c12-4 / i)
       :ARG1 (c12-0 / slow-down-03
                    :ARG0 (c12-3 / person
                                 :name (c12-1 / name
                                              :op1 "Scott")
                                 :ARG2-of c12-2)
                    :mode imperative))

# ::snt Umnmmmm &amp; we care why?
# ::tokens ["Umnmmmm", "&", "amp", ";", "we", "care", "why", "?"]
# ::lemmas ["Umnmmmm", "&", "amp", ";", "we", "care", "why", "?"]
(c13-7 / and
       :op1 (c13-2 / hmm
                   :mode expressive)
       :op2 (c13-1 / say-01
                   :ARG1 (c13-4 / care-01
                                :ARG0 (c13-5 / we)
                                :ARG1 (c13-6 / amr-unknown
                                             :ARG0-of (c13-8 / cause-01)))
                   :ARG2 (c13-3 / person
                                :name (c13-0 / name
                                             :op1 "amp"))))

# ::snt Not even going to be shocked when this dude keelz over! Obviously it is his ultimate goal.
# ::tokens ["Not", "even", "going", "to", "be", "shocked", "when", "this", "dude", "keelz", "over", "!", "Obviously", "it", "is", "his", "ultimate", "goal", "."]
# ::lemmas ["not", "even", "go", "to", "be", "shock", "when", "this", "dude", "keelz", "over", "!", "obviously", "it", "be", "his", "ultimate", "goal", "."]
(c15-1 / multi-sentence
       :snt1 (c15-2 / shock-01
                    :ARG0 (c15-5 / keel-over-00
                                 :ARG0 (c15-8 / dude
                                              :mod (c15-6 / this)))
                    :mod (c15-3 / even)
                    :polarity -)
       :snt2 (c15-7 / goal
                    :mod (c15-9 / ultimate)
                    :poss (c15-4 / he)
                    :ARG1-of (c15-0 / obvious-01)))

# ::snt Keep being real!
# ::tokens ["Keep", "being", "real", "!"]
# ::lemmas ["keep", "be", "real", "!"]
(c16-2 / keep-02
       :ARG0 (c16-1 / you)
       :ARG1 (c16-0 / real-04
                    :ARG1 c16-1)
       :mode imperative)

# ::snt Since his partying is the main reason they aren't together as a family - maybe he should focus more on kids-less on partying. Just saying
# ::tokens ["Since", "his", "partying", "is", "the", "main", "reason", "they", "are", "n't", "together", "as", "a", "family", "-", "maybe", "he", "should", "focus", "more", "on", "kids", "-", "less", "on", "partying", ".", "Just", "saying"]
# ::lemmas ["since", "his", "partying", "be", "the", "main", "reason", "they", "be", "not", "together", "as", "a", "family", "-", "maybe", "he", "should", "focus", "more", "on", "kid", "-", "less", "on", "partying", ".", "just", "say"]
(c18-8 / multi-sentence
       :snt1 (c18-10 / cause-01
                     :ARG0 (c18-16 / party-01
                                   :ARG0 (c18-3 / he))
                     :ARG1 (c18-7 / together
                                  :prep-as (c18-14 / family)
                                  :domain (c18-11 / they)
                                  :polarity -)
                     :mod (c18-4 / main))
       :snt2 (c18-9 / possible-01
                    :ARG1 (c18-15 / recommend-01
                                  :ARG1 (c18-17 / focus-01
                                                :ARG0 (c18-18 / he)
                                                :ARG2 (c18-5 / kid
                                                             :ARG0-of (c18-2 / have-03
                                                                             :ARG1 (c18-1 / party-01)
                                                                             :polarity -))
                                                :ARG2-of (c18-12 / have-degree-91
                                                                 :ARG1 c18-18
                                                                 :ARG3 (c18-13 / more)))))
       :snt3 (c18-0 / say-01
                    :ARG0 (c18-19 / i)
                    :mod (c18-6 / just)))
