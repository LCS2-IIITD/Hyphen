# ::snt Ja, das dachte ich mir auch schon. Er passt aber gut in die Szenerie finde ich - auch wenn ich die sarkastische Katze etwas vermisse. Aber eben, er wrde nicht so ganz dazu passen..
# ::tokens ["Ja", ",", "das", "dachte", "ich", "mir", "auch", "schon", ".", "Er", "passt", "aber", "gut", "in", "die", "Szenerie", "finde", "ich", "-", "auch", "wenn", "ich", "die", "sarkastische", "Katze", "etwas", "vermisse", ".", "Aber", "eben", ",", "er", "wrde", "nicht", "so", "ganz", "dazu", "passen", ".."]
# ::lemmas ["Ja", ",", "das", "dachte", "ich", "mir", "auch", "schon", ".", "er", "passt", "aber", "gut", "in", "die", "Szenerie", "finde", "ich", "-", "auch", "wenn", "ich", "die", "sarkastische", "Katze", "etwa", "vermisse", ".", "Aber", "eben", ",", "er", "wrde", "nicht", "so", "ganz", "dazu", "passen", ".."]
(c1-16 / multi-sentence
       :snt1 (c1-0 / say-01
                   :ARG0 (c1-30 / i)
                   :ARG1 (c1-31 / dachte-00
                                :ARG0 (c1-26 / person
                                             :name (c1-23 / name
                                                          :op1 "Ja"))
                                :ARG1 c1-30
                                :mod (c1-4 / schon)
                                :mod (c1-9 / just))
                   :ARG2 c1-26)
       :snt2 (c1-22 / find-01
                    :ARG0 (c1-17 / person
                                 :name (c1-18 / name
                                              :op1 "Er")
                                 :mod (c1-12 / gut)
                                 :location (c1-20 / city
                                                  :name (c1-27 / name
                                                               :op1 "Szenerie")))
                    :ARG1 (c1-5 / i)
                    :ARG1-of (c1-15 / cause-01
                                    :ARG0 (c1-8 / have-mod-91
                                                :ARG1 (c1-11 / and
                                                             :op1 (c1-13 / thing
                                                                         :name (c1-21 / name
                                                                                      :op1 "Katze")
                                                                         :mod (c1-3 / sarkast))
                                                             :op2 (c1-25 / et-cetera))
                                                :ARG2 (c1-6 / vermisse)
                                                :mod (c1-28 / hey
                                                            :mode expressive)))
                    :mod (c1-10 / aber
                                :mode expressive))
       :snt3 (c1-7 / have-concession-91
                   :ARG1 c1-8
                   :ARG1 (c1-14 / er)
                   :ARG2 (c1-29 / nigh
                                :degree (c1-24 / so)
                                :mod (c1-1 / ganz
                                           :mode expressive)
                                :ARG1-of (c1-2 / pass-03)))
       :ARG2 (c1-19 / eben))

# ::snt Solltest du! Sie ist wirklich groartig. Sehr twisted und dark-minded. Kann was
# ::tokens ["Solltest", "du", "!", "Sie", "ist", "wirklich", "groartig", ".", "Sehr", "twisted", "und", "dark", "-", "minded", ".", "Kann", "was"]
# ::lemmas ["solltest", "du", "!", "Sie", "ist", "wirklich", "groartig", ".", "Sehr", "twist", "und", "dark", "-", "minded", ".", "Kann", "be"]
(c2-2 / multi-sentence
      :snt1 (c2-6 / person
                  :name (c2-1 / name
                              :op1 "Solltest"
                              :op2 "du")
                  :mode expressive)
      :snt2 (c2-11 / groartig
                   :domain (c2-3 / Sie)
                   :mod (c2-8 / wirklich))
      :snt3 (c2-10 / and
                   :op1 (c2-9 / twisted-02
                              :ARG1 (c2-4 / person
                                          :name (c2-5 / name
                                                      :op1 "Sehr")))
                   :op2 (c2-0 / blind-02
                              :ARG1 c2-4))
      :snt4 (c2-12 / person
                   :name (c2-7 / name
                               :op1 "Kann")))

# ::snt Ach. Alle zwitschern ziemlich lblich darber. Das macht es schwer, nicht ebenfalls einzuchecken. Die Katze wird dann vermutlich auch weiterhin keine Sprche reien.
# ::tokens ["Ach", ".", "Alle", "zwitschern", "ziemlich", "lblich", "darber", ".", "Das", "macht", "es", "schwer", ",", "nicht", "ebenfalls", "einzuchecken", ".", "Die", "Katze", "wird", "dann", "vermutlich", "auch", "weiterhin", "keine", "Sprche", "reien", "."]
# ::lemmas ["Ach", ".", "Alle", "zwitschern", "ziemlich", "lblich", "darber", ".", "Das", "macht", "es", "schwer", ",", "nicht", "ebenfall", "einzuchecken", ".", "die", "Katze", "wird", "dann", "vermutlich", "auch", "weiterhin", "keine", "Sprche", "reien", "."]
(c3-12 / multi-sentence
       :snt1 (c3-9 / ach)
       :snt2 (c3-7 / and
                   :op1 (c3-3 / macht-00
                              :ARG0 (c3-20 / person
                                           :name (c3-17 / name
                                                        :op1 "Alle"))
                              :ARG1 (c3-0 / schwer))
                   :op2 (c3-10 / get-01
                               :ARG0 c3-20
                               :ARG1 (c3-8 / thing
                                           :ARG1-of (c3-4 / have-degree-91
                                                          :ARG2 (c3-19 / endow-01
                                                                       :ARG1 (c3-15 / thing
                                                                                    :name (c3-13 / name
                                                                                                 :op1 "Sprche")))
                                                          :ARG3 (c3-16 / more)))
                               :mod (c3-11 / ebenfalls
                                           :mod (c3-21 / nast))))
       :snt3 (c3-22 / wird-01
                    :ARG1 (c3-23 / thing
                                 :name (c3-14 / name
                                              :op1 "Katze")
                                 :mod (c3-24 / die))
                    :ARG2 (c3-1 / weiterhin
                                :mod (c3-5 / keine
                                           :mod (c3-18 / reien)))
                    :mod (c3-2 / vermutlich)
                    :mod (c3-6 / auch)))

# ::snt Das ist leider n bisschen cool.
# ::tokens ["Das", "ist", "leider", "n", "bisschen", "cool", "."]
# ::lemmas ["Das", "ist", "leider", "n", "bisschen", "cool", "."]
(c4-4 / and
      :op1 (c4-2 / leider
                 :domain (c4-1 / person
                               :name (c4-0 / name
                                           :op1 "Das")))
      :op2 (c4-3 / cool-04
                 :ARG1 c4-1))

# ::snt probably
# ::tokens ["probably"]
# ::lemmas ["probably"]
(c5-0 / probable)

# ::snt Itll be in a freak marching band accident
# ::tokens ["It", "ll", "be", "in", "a", "freak", "marching", "band", "accident"]
# ::lemmas ["it", "ll", "be", "in", "a", "freak", "marching", "band", "accident"]
(c6-3 / have-subevent-91
      :ARG1 (c6-5 / accident
                  :mod (c6-1 / band
                             :ARG0-of (c6-2 / march-01)
                             :mod (c6-0 / freak)))
      :ARG2 (c6-4 / it))

# ::snt Killjoys hat mich jetzt so gar nicht abgeholt.
# ::tokens ["Killjoys", "hat", "mich", "jetzt", "so", "gar", "nicht", "abgeholt", "."]
# ::lemmas ["Killjoys", "hat", "mich", "jetzt", "so", "gar", "nicht", "abgeholt", "."]
(c7-2 / say-01
      :ARG0 (c7-8 / i)
      :ARG1 (c7-3 / hat-01
                  :ARG0 (c7-4 / person
                              :name (c7-1 / name
                                          :op1 "Killjoys")
                              :ARG1-of c7-3)
                  :manner (c7-7 / jetzt)
                  :ARG1-of (c7-6 / have-degree-91
                                 :ARG2 (c7-10 / gar)
                                 :ARG3 (c7-0 / so)
                                 :ARG6 (c7-9 / abgeholt-00
                                             :ARG1 c7-4
                                             :mod (c7-5 / nicht))))
      :ARG2 c7-4)

# ::snt Auch empfehlenswert:- Dark Matter- Killjoys- Lost in Space
# ::tokens ["Auch", "empfehlenswert:-", "Dark", "Matter-", "Killjoys-", "Lost", "in", "Space"]
# ::lemmas ["auch", "empfehlenswert:-", "Dark", "Matter-", "Killjoys-", "lose", "in", "Space"]
(c8-2 / multi-sentence
      :snt1 (c8-4 / person
                  :name (c8-1 / name
                              :op1 "Auch"
                              :op2 "Empfehlenswert"))
      :snt2 (c8-7 / and
                  :op1 (c8-3 / matter
                             :ARG1-of (c8-8 / dark-02))
                  :op2 (c8-5 / killjoys)
                  :op3 (c8-0 / book
                             :name (c8-6 / name
                                         :op1 "Lost"
                                         :op2 "in"
                                         :op3 "Space"))))

# ::snt Into the Badlands
# ::tokens ["Into", "the", "Badlands"]
# ::lemmas ["into", "the", "badland"]
(c9-1 / be-destined-for-91
      :ARG2 (c9-2 / location
                  :name (c9-0 / name
                              :op1 "Badlands")))

# ::snt Lass the Rain lieber. Es ist okay, aber die synchro ist doof und eigentlich nerven alle nur.
# ::tokens ["Lass", "the", "Rain", "lieber", ".", "Es", "ist", "okay", ",", "aber", "die", "synchro", "ist", "doof", "und", "eigentlich", "nerven", "alle", "nur", "."]
# ::lemmas ["lass", "the", "rain", "lieber", ".", "Es", "ist", "okay", ",", "aber", "die", "synchro", "ist", "doof", "und", "eigentlich", "nerven", "alle", "nur", "."]
(c10-2 / multi-sentence
       :snt1 (c10-7 / person
                    :name (c10-1 / name
                                 :op1 "Lass"
                                 :op2 "the"
                                 :op3 "Rain")
                    :ARG0-of (c10-8 / lie-08))
       :snt2 (c10-0 / okay-04
                    :ARG1 (c10-5 / es)
                    :ARG1-of (c10-10 / contrast-01
                                     :ARG2 (c10-11 / and
                                                   :op1 (c10-12 / doof
                                                                :domain (c10-3 / synchro))
                                                   :op2 (c10-6 / nerven
                                                               :mod (c10-4 / eigentlich))
                                                   :op3 (c10-9 / nur
                                                               :domain c10-3)))))

# ::snt Haus des Geldes und Star Trek gucke ich gerade schon alleine. Dark fand ich auch recht genial, Altered Carbon eher weniger.The Rain evtl?
# ::tokens ["Haus", "des", "Geldes", "und", "Star", "Trek", "gucke", "ich", "gerade", "schon", "alleine", ".", "Dark", "fand", "ich", "auch", "recht", "genial", ",", "Altered", "Carbon", "eher", "weniger", ".", "The", "Rain", "evtl", "?"]
# ::lemmas ["Haus", "des", "Geldes", "und", "Star", "Trek", "gucke", "ich", "gerade", "schon", "alleine", ".", "Dark", "fand", "ich", "auch", "recht", "genial", ",", "Altered", "Carbon", "eher", "weniger", ".", "the", "Rain", "evtl", "?"]
(c11-11 / multi-sentence
        :snt1 (c11-8 / gucke-00
                     :ARG0 (c11-7 / and
                                  :op1 (c11-0 / location
                                              :name (c11-16 / name
                                                            :op1 "Haus"
                                                            :op2 " des"
                                                            :op3 "Geldes"))
                                  :op2 (c11-9 / location
                                              :name (c11-13 / name
                                                            :op1 "Star"
                                                            :op2 "Trekkie")))
                     :ARG1 (c11-21 / i)
                     :ARG2 (c11-22 / die-01
                                   :ARG1 c11-21
                                   :ARG2 (c11-6 / alleine)))
        :snt2 (c11-5 / and
                     :op1 (c11-15 / fand
                                  :op1 (c11-3 / i)
                                  :op2 (c11-14 / company
                                               :name (c11-19 / name
                                                             :op1 "Altered"
                                                             :op2 "Carbon"))
                                  :mod (c11-1 / genial
                                              :mod (c11-17 / recht))
                                  :mod (c11-18 / eher
                                               :mod (c11-20 / weniger)))
                     :op2 (c11-4 / have-mod-91
                                 :ARG1 (c11-10 / i)
                                 :ARG2 (c11-12 / amr-unintelligible
                                               :value "The"
                                               :op3 "Rain"))
                     :ARG1-of (c11-2 / request-confirmation-91)))

# ::snt Wie weit bist du denn
# ::tokens ["Wie", "weit", "bist", "du", "denn"]
# ::lemmas ["Wie", "weit", "bist", "du", "denn"]
(c12-1 / bist-du-denn
       :ARG1-of (c12-0 / request-confirmation-91))

# ::snt Yea your right
# ::tokens ["Yea", "your", "right"]
# ::lemmas ["yea", "your", "right"]
(c13-1 / right-06
       :ARG1 (c13-2 / you)
       :mod (c13-0 / yea))

# ::snt Eh I dont think too much of it, its probably just a wig and shes just trying a new look lol
# ::tokens ["Eh", "I", "do", "nt", "think", "too", "much", "of", "it", ",", "its", "probably", "just", "a", "wig", "and", "she", "s", "just", "trying", "a", "new", "look", "lol"]
# ::lemmas ["eh", "i", "do", "not", "think", "too", "much", "of", "it", ",", "its", "probably", "just", "a", "wig", "and", "she", "s", "just", "try", "a", "new", "look", "lol"]
(c14-13 / think-01
        :ARG0 (c14-12 / i)
        :ARG1 (c14-0 / much
                     :ARG2-of (c14-5 / have-quant-91
                                     :ARG1 (c14-3 / it)
                                     :ARG3 (c14-17 / too)))
        :ARG1-of (c14-9 / cause-01
                        :ARG0 (c14-4 / and
                                     :op1 (c14-10 / wig
                                                  :mod (c14-11 / just)
                                                  :domain c14-3)
                                     :mod (c14-6 / probable))
                        :op2 (c14-14 / try-01
                                     :ARG0 (c14-2 / she)
                                     :ARG1 (c14-7 / look-02
                                                  :ARG0 c14-2
                                                  :ARG1-of (c14-1 / new-01))
                                     :mod (c14-16 / just)
                                     :ARG2-of (c14-15 / laugh-01
                                                      :ARG0 c14-12
                                                      :manner (c14-8 / loud)
                                                      :mode expressive)))
        :polarity -)

# ::snt Honestly, yeah
# ::tokens ["Honestly", ",", "yeah"]
# ::lemmas ["honestly", ",", "yeah"]
(c15-0 / yeah
       :ARG1-of (c15-1 / honest-01))

# ::snt LOL YES Im rewatching
# ::tokens ["LOL", "YES", "I", "m", "rewatching"]
# ::lemmas ["lol", "yes", "i", "m", "rewatche"]
(c16-3 / and
       :op1 (c16-0 / laugh-01
                   :ARG0 (c16-2 / i)
                   :manner (c16-4 / loud))
       :op2 (c16-1 / watch-01
                   :ARG0 c16-2))

# ::snt How...how many faces do you have?
# ::tokens ["How", "...", "how", "many", "faces", "do", "you", "have", "?"]
# ::lemmas ["how", "...", "how", "many", "face", "do", "you", "have", "?"]
(c18-1 / have-03
       :ARG0 (c18-2 / you)
       :ARG1 (c18-0 / face
                    :quant (c18-3 / amr-unknown)))

# ::snt LISTEN I NEEDED TO DO SOMETHING SO I WOULDN'T CLAW MY FACE OFF EVERY TIME SHE'S ONSCREEN, I ONLY HAVE SO MANY FACES
# ::tokens ["LISTEN", "I", "NEEDED", "TO", "DO", "SOMETHING", "SO", "I", "WOULDN'T", "CLAW", "MY", "FACE", "OFF", "EVERY", "TIME", "SHE", "'S", "ONSCREEN", ",", "I", "ONLY", "HAVE", "SO", "MANY", "FACES"]
# ::lemmas ["listen", "i", "need", "to", "do", "something", "so", "i", "wouldn't", "claw", "my", "face", "off", "every", "TIME", "SHE", "be", "ONSCREEN", ",", "i", "only", "have", "so", "MANY", "FACES"]
(c19-14 / and
        :op1 (c19-9 / listen-01
                    :ARG0 (c19-13 / i
                                  :part (c19-0 / face))
                    :ARG1 (c19-4 / need-01
                                 :ARG0 c19-13
                                 :ARG1 (c19-15 / do-02
                                               :ARG0 c19-13
                                               :ARG1 (c19-6 / something))
                                 :purpose (c19-10 / close-off-06
                                                  :ARG0 c19-13
                                                  :ARG1 c19-0
                                                  :frequency (c19-12 / time
                                                                     :mod (c19-7 / every)
                                                                     :time-of (c19-1 / on-site
                                                                                     :domain (c19-2 / she)))
                                                  :polarity -)))
        :op2 (c19-8 / have-03
                    :ARG0 c19-13
                    :ARG1 c19-0
                    :ARG1-of (c19-11 / have-quant-91
                                     :ARG2 (c19-5 / many)
                                     :ARG3 (c19-16 / so)))
        :mod (c19-3 / only))

# ::snt HOW DARE YOU MAKE ETHEL LIKABLE
# ::tokens ["HOW", "DARE", "YOU", "MAKE", "ETHEL", "LIKABLE"]
# ::lemmas ["how", "dare", "you", "make", "ethel", "likable"]
(c20-1 / make-02
       :ARG0 (c20-0 / you)
       :ARG1 (c20-2 / envy-01
                    :ARG1 (c20-4 / ethics))
       :manner (c20-3 / amr-unknown))

# ::snt Klar
# ::tokens ["Klar"]
# ::lemmas ["Klar"]
(c21-1 / person
       :name (c21-0 / name
                    :op1 "Klar"))

# ::snt Fand einige Charaktere ziemlich nice! Dustin z.B.!Es wurde zu einer Kussszene Afrika gespielt...BESTE SERIE EVER!
# ::tokens ["Fand", "einige", "Charaktere", "ziemlich", "nice", "!", "Dustin", "z.", "B.!Es", "wurde", "zu", "einer", "Kussszene", "Afrika", "gespielt", "...", "BESTE", "SERIE", "EVER", "!"]
# ::lemmas ["fand", "einige", "Charaktere", "ziemlich", "nice", "!", "Dustin", "z.", "B.!Es", "wurde", "zu", "einer", "Kussszene", "Afrika", "gespielt", "...", "BESTE", "SERIE", "EVER", "!"]
(c22-6 / multi-sentence
       :snt1 (c22-2 / and
                    :op1 (c22-11 / funny-02
                                 :ARG1 (c22-15 / person
                                               :name (c22-12 / name
                                                             :op1 "Fand"
                                                             :op2 "Einige"
                                                             :op3 "Charaktere")))
                    :op2 (c22-8 / nice-01
                                :ARG1 c22-15))
       :snt2 (c22-7 / person
                    :name (c22-16 / name
                                  :op1 "Dustin"
                                  :op2 "Z.B.")
                    :snt3 (c22-17 / wurde-00
                                  :ARG1 (c22-13 / zu
                                                :op1 (c22-1 / person
                                                            :mod (c22-14 / ethnic-group
                                                                         :name (c22-10 / name
                                                                                       :op1 "Kussszene"))
                                                            :mod (c22-9 / continent
                                                                        :name (c22-18 / name
                                                                                      :op1 "Afrika"))))
                                  :mod (c22-3 / gespielt))
                    :snt4 (c22-0 / scenario
                                 :time (c22-4 / ever)
                                 :mod (c22-5 / bitch))))

# ::snt Die Musik macht oft den Unterschied. Ich habe Mad Men angefangen und die Musik da ist geil.
# ::tokens ["Die", "Musik", "macht", "oft", "den", "Unterschied", ".", "Ich", "habe", "Mad", "Men", "angefangen", "und", "die", "Musik", "da", "ist", "geil", "."]
# ::lemmas ["Die", "Musik", "macht", "oft", "den", "Unterschied", ".", "Ich", "habe", "mad", "Men", "angefangen", "und", "die", "Musik", "da", "ist", "geil", "."]
(c23-2 / multi-sentence
       :snt1 (c23-6 / macht-01
                    :ARG0 (c23-7 / person
                                 :mod (c23-5 / religious-group
                                             :name (c23-1 / name
                                                          :op1 "Islam")))
                    :ARG1 (c23-3 / person
                                 :ARG1-of (c23-17 / union-02
                                                  :polarity -))
                    :frequency (c23-0 / oft))
       :snt2 (c23-14 / and
                     :op1 (c23-8 / have-03
                                 :ARG0 (c23-13 / i)
                                 :ARG1 (c23-12 / person
                                               :name (c23-9 / name
                                                            :op1 "Mad"
                                                            :op2 "Men"))
                                 :mod (c23-15 / angefangen))
                     :op2 (c23-4 / geil
                                 :domain (c23-11 / person
                                                 :mod (c23-16 / religious-group
                                                              :name (c23-10 / name
                                                                            :op1 "Musik"))))))

# ::snt Schokoladenkuchen mit Zuckerbuchstaben B.I.T.T.E.
# ::tokens ["Schokoladenkuchen", "mit", "Zuckerbuchstaben", "B.I.T.T.E."]
# ::lemmas ["Schokoladenkuchen", "mit", "Zuckerbuchstaben", "B.I.T.T.E."]
(c24-3 / hand-in-principle
       :name (c24-1 / name
                    :op1 "Schokoladenkuchen")
       :ARG2 (c24-4 / person
                    :name (c24-5 / name
                                 :op1 "Zuckerbuchstaben")
                    :ARG0-of (c24-7 / have-org-role-91
                                    :ARG1 (c24-0 / organization
                                                 :name (c24-6 / name
                                                              :op1 "B.I.T.T.E."))
                                    :ARG2 (c24-2 / member))))

# ::snt Zauberwort?
# ::tokens ["Zauberwort", "?"]
# ::lemmas ["Zauberwort", "?"]
(c25-1 / person
       :polarity (c25-2 / amr-unknown)
       :name (c25-0 / name
                    :op1 "Zauberwort"))

# ::snt Skizzier mich auch mal
# ::tokens ["Skizzier", "mich", "auch", "mal"]
# ::lemmas ["skizzier", "mich", "auch", "mal"]
(c26-2 / say-01
       :ARG0 (c26-5 / i)
       :ARG1 (c26-1 / mal
                    :domain (c26-3 / person
                                   :name (c26-0 / name
                                                :op1 "Skizzier"))
                    :mod (c26-4 / just))
       :ARG2 c26-3)

# ::snt Die*
# ::tokens ["Die", "*"]
# ::lemmas ["Die", "*"]
(c28-0 / die-01)

# ::snt ur moma gey
# ::tokens ["ur", "moma", "gey"]
# ::lemmas ["ur", "moma", "gey"]
(c29-0 / gey
       :domain (c29-2 / person
                      :ARG0-of (c29-1 / have-rel-role-91
                                      :ARG2 (c29-3 / mom))))

# ::snt Most likely going happen due to this reliable source
# ::tokens ["Most", "likely", "going", "happen", "due", "to", "this", "reliable", "source"]
# ::lemmas ["most", "likely", "going", "happen", "due", "to", "this", "reliable", "source"]
(c30-5 / likely-01
       :ARG1 (c30-3 / event)
       :ARG2-of (c30-4 / have-degree-91
                       :ARG1 c30-3
                       :ARG3 (c30-0 / most))
       :ARG1-of (c30-7 / cause-01
                       :ARG0 (c30-1 / source
                                    :mod (c30-8 / this)
                                    :ARG1-of (c30-2 / rely-01
                                                    :ARG1-of (c30-6 / possible-01)))))

# ::snt Thanks Alec!!!
# ::tokens ["Thanks", "Alec", "!", "!", "!"]
# ::lemmas ["thank", "Alec", "!", "!", "!"]
(c31-1 / say-01
       :ARG0 (c31-3 / i)
       :ARG1 (c31-4 / thank-01
                    :ARG0 c31-3
                    :ARG1 (c31-2 / person
                                 :name (c31-0 / name
                                              :op1 "Alec")
                                 :ARG2-of c31-1)))

# ::snt Whoa!!!!!!!!
# ::tokens ["Whoa", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["whoa", "!", "!", "!", "!", "!", "!", "!", "!"]
(c32-0 / whoa
       :mode expressive)

# ::snt JAAAAAAAAAAAAAA!!!!!!!
# ::tokens ["JAAAAAAAAAAAAAA", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["JAAAAAAAAAAAAAA", "!", "!", "!", "!", "!", "!", "!"]
(c33-0 / jeez
       :mode expressive)

# ::snt AHS kommt bald, und OH MEIN GOTT, JESSICA LANGE KEHRT ZURCK! Himmel!
# ::tokens ["AHS", "kommt", "bald", ",", "und", "OH", "MEIN", "GOTT", ",", "JESSICA", "LANGE", "KEHRT", "ZURCK", "!", "Himmel", "!"]
# ::lemmas ["AHS", "kommt", "bald", ",", "und", "OH", "MEIN", "GOTT", ",", "JESSICA", "LANGE", "kehrt", "ZURCK", "!", "Himmel", "!"]
(c34-3 / multi-sentence
       :snt1 (c34-11 / and
                     :op1 (c34-5 / kommt-01
                                 :ARG0 (c34-12 / government-organization
                                               :name (c34-2 / name
                                                            :op1 "AHS"))
                                 :ARG1 (c34-1 / bald))
                     :op2 (c34-13 / kommt-01
                                  :ARG0 c34-12
                                  :ARG1 (c34-6 / person
                                               :name (c34-4 / name
                                                            :op1 "Mein"
                                                            :op2 "Gott")))
                     :op3 (c34-14 / kommt-01
                                  :ARG0 c34-12
                                  :ARG1 (c34-9 / company
                                               :name (c34-7 / name
                                                            :op1 "JESSICA"
                                                            :op2 "Lange"
                                                            :op3 "KEHRT")))
                     :op4 (c34-0 / kommt-01
                                 :ARG0 c34-12
                                 :ARG1 c34-6
                                 :name (c34-10 / name
                                               :op1 "Himmel")))
       :snt2 (c34-8 / himmel
                    :mode expressive))

# ::snt He has stressed me out so much in this episode I would kill him and then I would bring him back to life and then I would marry him and kill him again how dare he put me through Emotions
# ::tokens ["He", "has", "stressed", "me", "out", "so", "much", "in", "this", "episode", "I", "would", "kill", "him", "and", "then", "I", "would", "bring", "him", "back", "to", "life", "and", "then", "I", "would", "marry", "him", "and", "kill", "him", "again", "how", "dare", "he", "put", "me", "through", "Emotions"]
# ::lemmas ["he", "have", "stress", "i", "out", "so", "much", "in", "this", "episode", "i", "would", "kill", "he", "and", "then", "i", "would", "bring", "he", "back", "to", "life", "and", "then", "i", "would", "marry", "he", "and", "kill", "he", "again", "how", "dare", "he", "put", "i", "through", "emotion"]
(c35-0 / stress-out-03
       :ARG0 (c35-4 / he)
       :ARG1 (c35-21 / i)
       :time (c35-18 / episode
                     :mod (c35-10 / this))
       :ARG1-of (c35-20 / have-quant-91
                        :ARG2 (c35-13 / much)
                        :ARG3 (c35-3 / so)
                        :ARG6 (c35-9 / and
                                     :op1 (c35-5 / kill-01
                                                 :ARG0 c35-21
                                                 :ARG1 c35-4)
                                     :op2 (c35-12 / bring-01
                                                  :ARG0 c35-21
                                                  :ARG1 c35-4
                                                  :ARG2 (c35-2 / life)
                                                  :direction (c35-1 / back)
                                                  :time (c35-16 / then))
                                     :op3 (c35-8 / and
                                                 :op1 (c35-6 / marry-01
                                                             :ARG0 c35-21
                                                             :ARG1 c35-4)
                                                 :op2 (c35-17 / kill-01
                                                              :ARG0 c35-21
                                                              :ARG1 c35-4
                                                              :mod (c35-7 / again))
                                                 :time (c35-22 / then))
                                     :ARG0-of (c35-15 / cause-01
                                                      :ARG1 (c35-23 / dare-01
                                                                    :ARG1 c35-4
                                                                    :ARG2 (c35-19 / put-01
                                                                                  :ARG0 c35-4
                                                                                  :ARG1 c35-21
                                                                                  :ARG2 (c35-11 / emotion)
                                                                                  :manner (c35-14 / amr-unknown)))))))

# ::snt Es ist so schlecht
# ::tokens ["Es", "ist", "so", "schlecht"]
# ::lemmas ["Es", "ist", "so", "schlecht"]
(c36-2 / have-degree-91
       :ARG1 (c36-1 / es)
       :ARG2 (c36-3 / schlecht)
       :ARG3 (c36-0 / so))

# ::snt Hopefully they all die in season
# ::tokens ["Hopefully", "they", "all", "die", "in", "season"]
# ::lemmas ["hopefully", "you", "all", "die", "in", "season"]
(c37-1 / hope-01
       :ARG1 (c37-4 / die-01
                    :ARG1 (c37-2 / they
                                 :mod (c37-3 / all))
                    :time (c37-0 / season)))

# ::snt Was fr ein Cliffhanger!
# ::tokens ["Was", "fr", "ein", "Cliffhanger", "!"]
# ::lemmas ["be", "fr", "ein", "Cliffhanger", "!"]
(c38-0 / event
       :name (c38-1 / name
                    :op1 "Cliffhanger")
       :mode expressive)

# ::snt Warrior queen!
# ::tokens ["Warrior", "queen", "!"]
# ::lemmas ["Warrior", "queen", "!"]
(c39-1 / queen
       :mod (c39-0 / warrior)
       :mode expressive)

# ::snt She's a fucking queen &lt;3
# ::tokens ["She", "'s", "a", "fucking", "queen", "&", "lt;3"]
# ::lemmas ["she", "be", "a", "fucking", "queen", "&", "lt;3"]
(c40-5 / and
       :op1 (c40-4 / queen
                   :mod (c40-0 / fucking
                               :mode expressive)
                   :domain (c40-2 / she))
       :op2 (c40-3 / person
                   :name (c40-1 / name
                                :op1 "lt;3")))

# ::snt She's the best!
# ::tokens ["She", "'s", "the", "best", "!"]
# ::lemmas ["she", "be", "the", "good", "!"]
(c41-1 / have-degree-91
       :ARG1 (c41-3 / she)
       :ARG2 (c41-0 / good-02)
       :ARG3 (c41-2 / most)
       :mode expressive)

# ::snt Hach
# ::tokens ["Hach"]
# ::lemmas ["hach"]
(c42-1 / person
       :name (c42-0 / name
                    :op1 "Hach"))

# ::snt After you say Bob deserves to die?! Absolutely not. Swiper no swiping
# ::tokens ["After", "you", "say", "Bob", "deserves", "to", "die", "?", "!", "Absolutely", "not", ".", "Swiper", "no", "swiping"]
# ::lemmas ["after", "you", "say", "Bob", "deserve", "to", "die", "?", "!", "absolutely", "not", ".", "swiper", "no", "swiping"]
(c43-3 / multi-sentence
       :snt1 (c43-1 / be-temporally-at-91
                    :polarity (c43-10 / amr-unknown)
                    :ARG2 (c43-9 / after
                                 :op1 (c43-5 / say-01
                                             :ARG0 (c43-2 / you)
                                             :ARG1 (c43-11 / deserve-01
                                                           :ARG0 (c43-6 / person
                                                                        :name (c43-4 / name
                                                                                     :op1 "Bob"))
                                                           :ARG1 (c43-7 / die-01
                                                                        :ARG1 c43-6)))))
       :snt2 (c43-0 / swipe-01
                    :mod (c43-8 / absolute)
                    :polarity -)
       :snt3 (c43-12 / swipe-01
                     :ARG0 c43-2
                     :polarity -
                     :mode imperative))

# ::snt I'm there if you can toss me a swipe
# ::tokens ["I", "'m", "there", "if", "you", "can", "toss", "me", "a", "swipe"]
# ::lemmas ["i", "be", "there", "if", "you", "can", "toss", "i", "a", "swipe"]
(c44-0 / be-located-at-91
       :ARG1 (c44-5 / i)
       :ARG2 (c44-4 / there)
       :condition (c44-3 / possible-01
                         :ARG1 (c44-6 / toss-01
                                      :ARG0 (c44-1 / you)
                                      :ARG1 c44-5
                                      :ARG2 (c44-2 / swipe-01
                                                   :ARG0 c44-1))))

# ::snt Place: coop Time: when I dont have mono
# ::tokens ["Place", ":", "coop", "Time", ":", "when", "I", "do", "nt", "have", "mono"]
# ::lemmas ["place", ":", "coop", "time", ":", "when", "i", "do", "not", "have", "mono"]
(c45-0 / be-temporally-at-91
       :ARG1 (c45-3 / place
                    :location-of (c45-4 / coop))
       :ARG2 (c45-2 / have-03
                    :ARG0 (c45-5 / i)
                    :ARG1 (c45-6 / disease
                                 :name (c45-1 / name
                                              :op1 "M mono"))
                    :polarity -))

# ::snt Place and time? Do I need to reserve tickets?
# ::tokens ["Place", "and", "time", "?", "Do", "I", "need", "to", "reserve", "tickets", "?"]
# ::lemmas ["place", "and", "time", "?", "do", "i", "need", "to", "reserve", "ticket", "?"]
(c46-0 / multi-sentence
       :snt1 (c46-2 / and
                    :op1 (c46-4 / place)
                    :op2 (c46-7 / time)
                    :polarity (c46-6 / amr-unknown))
       :snt2 (c46-1 / need-01
                    :polarity (c46-5 / amr-unknown)
                    :ARG0 (c46-8 / i)
                    :ARG1 (c46-3 / reserve-01
                                 :ARG0 c46-8
                                 :ARG1 (c46-9 / ticket))))

# ::snt wir haben bunte Lichterketten mit Batterien die knnen wir dann da aufhngen usw
# ::tokens ["wir", "haben", "bunte", "Lichterketten", "mit", "Batterien", "die", "knnen", "wir", "dann", "da", "aufhngen", "usw"]
# ::lemmas ["wir", "haben", "bunte", "Lichterketten", "mit", "Batterien", "die", "knnen", "wir", "dann", "da", "aufhngen", "usw"]
(c47-10 / and
        :op1 (c47-0 / bunte-00
                    :ARG0 (c47-6 / we)
                    :ARG1 (c47-4 / person
                                 :name (c47-1 / name
                                              :op1 "Lichterketten")))
        :op2 (c47-11 / die-01
                     :ARG1 (c47-2 / person
                                  :name (c47-3 / name
                                               :op1 "Batterien"))
                     :ARG2 (c47-5 / knnen))
        :op3 (c47-9 / amr-unknown
                    :domain c47-6
                    :mod (c47-7 / da
                                :mod (c47-8 / aufhngen-01
                                            :ARG1 c47-6))))

# ::snt !!!!!!
# ::tokens ["!", "!", "!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!", "!", "!"]
(c48-0 / thing
       :mode expressive)

# ::snt YESSS!!!
# ::tokens ["YESSS", "!", "!", "!"]
# ::lemmas ["yesss", "!", "!", "!"]
(c49-0 / yes
       :mode expressive)

# ::snt Omg die Ruine???????
# ::tokens ["Omg", "die", "Ruine", "?", "?", "?", "?", "?", "?", "?"]
# ::lemmas ["Omg", "die", "Ruine", "?", "?", "?", "?", "?", "?", "?"]
(c50-4 / die-01
       :polarity (c50-3 / amr-unknown)
       :ARG1 (c50-2 / person
                    :name (c50-1 / name
                                 :op1 "Ruine"))
       :mod (c50-0 / oh-my-god
                   :mode expressive))
