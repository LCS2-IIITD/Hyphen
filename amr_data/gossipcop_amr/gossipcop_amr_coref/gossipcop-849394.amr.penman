# ::snt I dont think i ever really knew what Jill did.
# ::tokens ["I", "do", "nt", "think", "i", "ever", "really", "knew", "what", "Jill", "did", "."]
# ::lemmas ["i", "do", "not", "think", "i", "ever", "really", "know", "what", "Jill", "do", "."]
(c1-5 / think-01
      :ARG0 (c1-6 / i)
      :ARG1 (c1-3 / know-01
                  :ARG0 c1-6
                  :ARG1 (c1-7 / thing
                              :ARG1-of (c1-8 / do-02
                                             :ARG0 (c1-4 / person
                                                         :name (c1-0 / name
                                                                     :op1 "Jill"))))
                  :time (c1-2 / ever)
                  :ARG1-of (c1-1 / real-04))
      :polarity -)

# ::snt Refusing to film w Bethenny, trying to get all the same media appearances, basically being an ultimate fame whore
# ::tokens ["Refusing", "to", "film", "w", "Bethenny", ",", "trying", "to", "get", "all", "the", "same", "media", "appearances", ",", "basically", "being", "an", "ultimate", "fame", "whore"]
# ::lemmas ["refuse", "to", "film", "w", "Bethenny", ",", "try", "to", "get", "all", "the", "same", "media", "appearance", ",", "basically", "be", "an", "ultimate", "fame", "whore"]
(c2-12 / and
       :op1 (c2-5 / refuse-01
                  :ARG1 (c2-0 / film-01
                              :ARG1 (c2-6 / person
                                          :name (c2-2 / name
                                                      :op1 "Bethenny"))))
       :op2 (c2-10 / try-01
                   :ARG1 (c2-13 / get-01
                                :ARG1 (c2-11 / appear-01
                                             :ARG2 (c2-3 / media)
                                             :ARG1-of (c2-4 / same-01
                                                            :mod (c2-9 / all)))))
       :op3 (c2-8 / whore-01
                  :ARG2 (c2-7 / fame)
                  :mod (c2-14 / ultimate)
                  :mod (c2-1 / basic)
                  :domain c2-6))

# ::snt Why not?
# ::tokens ["Why", "not", "?"]
# ::lemmas ["why", "not", "?"]
(c3-0 / cause-01
      :ARG0 (c3-1 / amr-unknown)
      :polarity -)

# ::snt Why was Jill let go I forgot?
# ::tokens ["Why", "was", "Jill", "let", "go", "I", "forgot", "?"]
# ::lemmas ["why", "be", "Jill", "let", "go", "i", "forget", "?"]
(c4-0 / forget-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-3 / let-01
                  :ARG0 (c4-2 / person
                              :name (c4-1 / name
                                          :op1 "Jill"))
                  :ARG1 (c4-7 / go-01
                              :ARG1 c4-2)
                  :ARG1-of (c4-4 / cause-01
                                 :ARG0 (c4-6 / amr-unknown))))

# ::snt Big difference Phaedra Parks actions were low and nasty. You cannot compare the other three to her. So don't try.
# ::tokens ["Big", "difference", "Phaedra", "Parks", "actions", "were", "low", "and", "nasty", ".", "You", "can", "not", "compare", "the", "other", "three", "to", "her", ".", "So", "do", "n't", "try", "."]
# ::lemmas ["big", "difference", "Phaedra", "Parks", "action", "be", "low", "and", "nasty", ".", "you", "can", "not", "compare", "the", "other", "three", "to", "she", ".", "so", "do", "not", "try", "."]
(c5-3 / multi-sentence
      :snt1 (c5-13 / and
                   :op1 (c5-9 / low-04
                              :ARG1 (c5-12 / act-02
                                           :ARG0 (c5-8 / person
                                                       :name (c5-4 / name
                                                                   :op1 "Phaedra"
                                                                   :op2 "Parks"))))
                   :op2 (c5-7 / nasty
                              :domain c5-12)
                   :mod (c5-1 / big))
      :snt2 (c5-5 / possible-01
                  :ARG1 (c5-10 / compare-01
                               :ARG0 (c5-2 / you)
                               :ARG1 (c5-14 / person
                                            :mod (c5-0 / other)
                                            :quant 3)
                               :ARG2 (c5-6 / she))
                  :ARG0-of (c5-15 / cause-01
                                  :ARG1 (c5-11 / try-01
                                               :ARG0 c5-2
                                               :polarity -
                                               :mode imperative))
                  :polarity -))
