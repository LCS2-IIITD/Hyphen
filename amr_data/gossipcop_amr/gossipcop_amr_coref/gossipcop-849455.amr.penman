# ::snt Hold up now. Just because Modern Family isn't any good is no reason to imply that Tim Allen is talented or funny.
# ::tokens ["Hold", "up", "now", ".", "Just", "because", "Modern", "Family", "is", "n't", "any", "good", "is", "no", "reason", "to", "imply", "that", "Tim", "Allen", "is", "talented", "or", "funny", "."]
# ::lemmas ["hold", "up", "now", ".", "just", "because", "Modern", "Family", "be", "not", "any", "good", "be", "no", "reason", "to", "imply", "that", "Tim", "Allen", "be", "talented", "or", "funny", "."]
(c1-5 / multi-sentence
      :snt1 (c1-8 / hold-up-11
                  :ARG1 (c1-3 / you)
                  :time (c1-4 / now)
                  :mode imperative)
      :snt2 (c1-6 / reason
                  :purpose (c1-14 / imply-01
                                  :ARG1 (c1-0 / or
                                              :op1 (c1-15 / talent
                                                          :domain (c1-9 / person
                                                                        :name (c1-10 / name
                                                                                     :op1 "Tim"
                                                                                     :op2 "Allen")))
                                              :op2 (c1-1 / funny-02
                                                         :ARG1 c1-9)))
                  :ARG1-of (c1-12 / cause-01
                                  :ARG0 (c1-16 / good-02
                                               :ARG1 (c1-2 / broadcast-program
                                                           :name (c1-11 / name
                                                                        :op1 "Modern"
                                                                        :op2 "Family"))
                                               :mod (c1-7 / any)
                                               :polarity -)
                                  :mod (c1-13 / just))
                  :polarity -))

# ::snt There's a don't stand too close to a naked man joke in there somewhere
# ::tokens ["There", "'s", "a", "do", "n't", "stand", "too", "close", "to", "a", "naked", "man", "joke", "in", "there", "somewhere"]
# ::lemmas ["there", "be", "a", "do", "not", "stand", "too", "close", "to", "a", "naked", "man", "joke", "in", "there", "somewhere"]
(c2-3 / stand-01
      :ARG1 (c2-6 / joke-01
                  :ARG2 (c2-1 / man
                              :ARG1-of (c2-2 / naked-03)))
      :ARG2 (c2-7 / there
                  :mod (c2-0 / somewhere))
      :ARG1-of (c2-4 / have-degree-91
                     :ARG2 (c2-5 / close-10
                                 :ARG1 c2-3
                                 :ARG2 c2-6)
                     :ARG3 (c2-8 / too))
      :polarity -)

# ::snt modern family is the only show that's running abc right now ... Why wouldn't they be renewed
# ::tokens ["modern", "family", "is", "the", "only", "show", "that", "'s", "running", "abc", "right", "now", "...", "Why", "would", "n't", "they", "be", "renewed"]
# ::lemmas ["modern", "family", "be", "the", "only", "show", "that", "be", "run", "abc", "right", "now", "...", "why", "would", "not", "they", "be", "renew"]
(c3-4 / multi-sentence
      :snt1 (c3-5 / show
                  :mod (c3-0 / only)
                  :domain (c3-1 / family
                                :name (c3-3 / name
                                            :op1 "Modern"
                                            :op2 "Family"))
                  :ARG1-of (c3-6 / run-09
                                 :medium (c3-2 / broadcast-program
                                               :name (c3-8 / name
                                                           :op1 "ABC"))
                                 :time (c3-9 / now
                                             :mod (c3-13 / right))))
      :snt2 (c3-10 / renew-01
                   :ARG1 (c3-12 / they)
                   :ARG1-of (c3-11 / cause-01
                                   :ARG0 (c3-7 / amr-unknown))
                   :polarity -))

# ::snt S a primeira temporada foi boa de verdade. Depois ficou chata extremamente repetitiva
# ::tokens ["S", "a", "primeira", "temporada", "foi", "boa", "de", "verdade", ".", "Depois", "ficou", "chata", "extremamente", "repetitiva"]
# ::lemmas ["s", "a", "primeira", "temporada", "foi", "boa", "de", "verdade", ".", "Depois", "ficou", "chata", "extremamente", "repetitiva"]
(c4-2 / multi-sentence
      :snt1 (c4-1 / boa-de-vade
                  :mod (c4-6 / primeira
                             :ARG1-of (c4-5 / mean-01
                                            :ARG2 (c4-3 / string-entity
                                                        :value "S"))))
      :snt2 (c4-0 / ficou-chata-00
                  :ARG1-of (c4-9 / mean-01
                                 :ARG2 (c4-4 / repetitiva))
                  :ARG1-of (c4-7 / cause-01
                                 :ARG0 (c4-8 / amr-unknown))))

# ::snt amor se vc soubesse o tanto de srie q *existe* ainda
# ::tokens ["amor", "se", "vc", "soubesse", "o", "tanto", "de", "srie", "q", "*", "existe", "*", "ainda"]
# ::lemmas ["amor", "se", "vc", "soubesse", "o", "tanto", "de", "srie", "q", "*", "existe", "*", "ainda"]
(c5-1 / or
      :op1 (c5-0 / opine-01
                 :ARG0 (c5-7 / i)
                 :ARG1 (c5-5 / vc
                             :mod (c5-3 / soubesse))
                 :op2 (c5-6 / event
                            :name (c5-2 / name
                                        :op1 "Tanto"
                                        :op2 "de"
                                        :op3 "Srie")
                            :ARG1-of (c5-8 / exist-01
                                           :degree (c5-4 / inda)))))

# ::snt HAHAH para, a comdia engraada que ficou no lugar comum (Aussi nao deve ta entendendo a gente)
# ::tokens ["HAHAH", "para", ",", "a", "comdia", "engraada", "que", "ficou", "no", "lugar", "comum", "(", "Aussi", "nao", "deve", "ta", "entendendo", "a", "gente", ")"]
# ::lemmas ["HAHAH", "para", ",", "a", "comdia", "engraada", "que", "ficou", "no", "lugar", "comum", "(", "Aussi", "nao", "deve", "ta", "entendendo", "a", "gente", ")"]
(c6-1 / multi-sentence
      :snt1 (c6-6 / haha
                  :mode expressive)
      :snt2 (c6-3 / say-01
                  :ARG0 (c6-11 / i)
                  :ARG1 (c6-10 / hello)
                  :ARG2 (c6-7 / person
                              :ARG1-of (c6-5 / engraada-00)
                              :ARG0-of (c6-0 / fuck-01
                                             :mode expressive)
                              :ARG0-of (c6-8 / ficou-01
                                             :ARG1 (c6-9 / lugar)
                                             :polarity -))
                  :ARG2 (c6-2 / person
                              :name (c6-4 / name
                                          :op1 "Aussi")))
      :snt3 (c6-12 / possible-01
                   :ARG1 (c6-14 / entendendo
                                :op1 (c6-13 / gente))
                   :polarity -))

# ::snt Vc forte. Eu larguei h anos e sinto que deveria ter feito isso antes
# ::tokens ["Vc", "forte", ".", "Eu", "larguei", "h", "anos", "e", "sinto", "que", "deveria", "ter", "feito", "isso", "antes"]
# ::lemmas ["Vc", "forte", ".", "Eu", "larguei", "h", "anos", "e", "sinto", "que", "deveria", "ter", "feito", "isso", "ante"]
(c7-2 / multi-sentence
      :snt1 (c7-3 / vc
                  :mod (c7-0 / forte))
      :snt2 (c7-9 / and
                  :op1 (c7-4 / have-03
                             :ARG0 (c7-1 / you)
                             :ARG1 (c7-8 / amr-unintelligible
                                         :value "Anos")
                             :op2-of c7-9)
                  :ARG0 c7-1
                  :ARG1 (c7-6 / amr-unintelligible
                              :ARG1-of (c7-7 / ter-01
                                             :ARG2 (c7-5 / feito))
                              :value "deveria"))
      :op3 c7-4
      :ARG0 c7-1
      :ARG1 (c7-10 / amr-unintelligible
                   :value "Esso"))

# ::snt parei nessa temporada HAHAHAA
# ::tokens ["parei", "nessa", "temporada", "HAHAHAA"]
# ::lemmas ["parei", "nessa", "temporada", "HAHAHAA"]
(c8-1 / hahaha
      :mod (c8-2 / person
                 :name (c8-0 / name
                             :op1 "Parei"
                             :op2 "Nessa"))
      :mode expressive)

# ::snt Boa sorte para quem vai ver
# ::tokens ["Boa", "sorte", "para", "quem", "vai", "ver"]
# ::lemmas ["Boa", "sorte", "para", "quem", "vai", "ver"]
(c9-0 / boa
      :ARG1-of (c9-2 / sort-01)
      :ARG1-of (c9-5 / cause-01
                     :ARG0 (c9-4 / possible-01
                                 :ARG1 (c9-3 / vai-01
                                             :ARG0 (c9-1 / you))))
      :mode expressive)

# ::snt coragem. Essa srie j foi legal
# ::tokens ["coragem", ".", "Essa", "srie", "j", "foi", "legal"]
# ::lemmas ["coragem", ".", "Essa", "srie", "j", "foi", "legal"]
(c10-0 / multi-sentence
       :snt1 (c10-3 / coronem)
       :snt2 (c10-2 / legal-02
                    :ARG1 (c10-4 / thing
                                 :ARG1-of (c10-1 / mean-01
                                                 :ARG2 (c10-5 / law)))))

# ::snt what I imagine the cast of is doing RN...
# ::tokens ["what", "I", "imagine", "the", "cast", "of", "is", "doing", "RN", "..."]
# ::lemmas ["what", "i", "imagine", "the", "cast", "of", "be", "do", "RN", "..."]
(c12-3 / imagine-01
       :ARG0 (c12-1 / i)
       :ARG1 (c12-4 / do-02
                    :ARG0 (c12-2 / cast-03)
                    :ARG1 (c12-0 / nurse-01)))

# ::snt SAVE :// Petition Wkly Poll
# ::tokens ["SAVE", ":", "//", "Petition", "Wkly", "Poll"]
# ::lemmas ["save", ":", "//", "Petition", "Wkly", "Poll"]
(c13-5 / and
       :op1 (c13-2 / stand-11)
       :op2 (c13-3 / petition-01
                   :ARG1 (c13-1 / poll-01
                                :mod (c13-4 / world-region
                                            :name (c13-0 / name
                                                         :op1 "West")))))

# ::snt YESSSS
# ::tokens ["YESSSS"]
# ::lemmas ["YESSSS"]
(c14-0 / yes)

# ::snt Yay!!!! Tonight's show was absolutely hysterical!!!
# ::tokens ["Yay", "!", "!", "!", "!", "Tonight", "'s", "show", "was", "absolutely", "hysterical", "!", "!", "!"]
# ::lemmas ["Yay", "!", "!", "!", "!", "Tonight", "'s", "show", "be", "absolutely", "hysterical", "!", "!", "!"]
(c15-1 / multi-sentence
       :snt1 (c15-0 / yay)
       :snt2 (c15-5 / hysterical
                    :domain (c15-3 / show-04
                                   :time (c15-7 / date-entity
                                                :dayperiod (c15-2 / night)
                                                :mod (c15-6 / today)))
                    :degree (c15-4 / absolute)))

# ::snt Yay is returning for yrs. Bring Dylan back to join them!
# ::tokens ["Yay", "is", "returning", "for", "yrs", ".", "Bring", "Dylan", "back", "to", "join", "them", "!"]
# ::lemmas ["Yay", "be", "return", "for", "yr", ".", "bring", "Dylan", "back", "to", "join", "they", "!"]
(c16-3 / multi-sentence
       :snt1 (c16-5 / return-01
                    :ARG1 (c16-2 / yay)
                    :duration (c16-6 / multiple
                                     :op1 (c16-10 / temporal-quantity
                                                  :unit (c16-11 / year)
                                                  :quant 1)))
       :snt2 (c16-1 / bring-01
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-7 / person
                                 :name (c16-4 / name
                                              :op1 "Dylan"))
                    :ARG2 (c16-8 / back)
                    :purpose (c16-9 / join-01
                                    :ARG0 c16-7
                                    :ARG1 (c16-12 / they))
                    :mode imperative))

# ::snt $500,000 an episode
# ::tokens ["$", "500,000", "an", "episode"]
# ::lemmas ["$", "500,000", "an", "episode"]
(c18-0 / rate-entity-91
       :ARG1 (c18-2 / monetary-quantity
                    :unit (c18-3 / dollar)
                    :quant 500000)
       :ARG2 (c18-1 / episode))

# ::snt question now is.....will it ever end?
# ::tokens ["question", "now", "is", ".....", "will", "it", "ever", "end", "?"]
# ::lemmas ["question", "now", "be", ".....", "will", "it", "ever", "end", "?"]
(c19-4 / question-01
       :ARG1 (c19-2 / end-01
                    :ARG1 (c19-3 / it)
                    :time (c19-5 / ever)
                    :polarity (c19-1 / amr-unknown))
       :time (c19-0 / now))

# ::snt This show is tired and has over stayed its welcome. Although I like every1 I think you story line is stale.
# ::tokens ["This", "show", "is", "tired", "and", "has", "over", "stayed", "its", "welcome", ".", "Although", "I", "like", "every1", "I", "think", "you", "story", "line", "is", "stale", "."]
# ::lemmas ["this", "show", "be", "tired", "and", "have", "over", "stay", "its", "welcome", ".", "although", "i", "like", "every1", "i", "think", "you", "story", "line", "be", "stale", "."]
(c20-4 / multi-sentence
       :snt1 (c20-7 / and
                    :op1 (c20-12 / tire-01
                                 :ARG1 (c20-5 / show-04
                                              :mod (c20-15 / this)))
                    :op2 (c20-0 / stay-01
                                :ARG1 c20-5
                                :ARG3 (c20-10 / welcome-01
                                              :ARG1 c20-5)
                                :mod (c20-1 / over)))
       :snt2 (c20-11 / think-01
                     :ARG0 (c20-13 / i)
                     :ARG1 (c20-16 / stale
                                   :domain (c20-9 / line
                                                  :mod (c20-6 / story)
                                                  :poss (c20-3 / you)))
                     :concession (c20-14 / like-01
                                         :ARG0 c20-13
                                         :ARG1 (c20-8 / every
                                                      :ord (c20-2 / ordinal-entity
                                                                  :value 1)))))

# ::snt I absolutely LOVE this show!! So funny &amp; always a good ending.
# ::tokens ["I", "absolutely", "LOVE", "this", "show", "!", "!", "So", "funny", "&", "amp", ";", "always", "a", "good", "ending", "."]
# ::lemmas ["i", "absolutely", "love", "this", "show", "!", "!", "so", "funny", "&", "amp", ";", "always", "a", "good", "ending", "."]
(c21-2 / multi-sentence
       :snt1 (c21-7 / love-01
                    :ARG0 (c21-9 / i)
                    :ARG1 (c21-4 / show-04
                                 :mod (c21-10 / this))
                    :degree (c21-5 / absolute))
       :snt2 (c21-11 / and
                     :op1 (c21-0 / funny-02
                                 :degree (c21-1 / so))
                     :op2 (c21-8 / amp
                                 :degree (c21-13 / so))
                     :op3 (c21-6 / end-01
                                 :time (c21-12 / always)
                                 :ARG1-of (c21-3 / good-02))))

# ::snt Can't they let this show die in peace?
# ::tokens ["Ca", "n't", "they", "let", "this", "show", "die", "in", "peace", "?"]
# ::lemmas ["can", "not", "they", "let", "this", "show", "die", "in", "peace", "?"]
(c22-3 / possible-01
       :ARG1 (c22-4 / let-01
                    :ARG0 (c22-5 / they)
                    :ARG1 (c22-6 / die-01
                                 :ARG1 (c22-1 / show-04
                                              :mod (c22-7 / this))
                                 :manner (c22-0 / peace)))
       :polarity (c22-2 / amr-unknown)
       :polarity -)

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c23-0 / cause-01
       :ARG0 (c23-1 / amr-unknown))

# ::snt : has been renewed by ABC for a sixth season.
# ::tokens [":", "has", "been", "renewed", "by", "ABC", "for", "a", "sixth", "season", "."]
# ::lemmas [":", "have", "be", "renew", "by", "ABC", "for", "a", "sixth", "season", "."]
(c24-3 / renew-01
       :ARG0 (c24-4 / publication
                    :name (c24-1 / name
                                 :op1 "ABC"))
       :ARG1 (c24-5 / thing)
       :ARG3 (c24-2 / season
                    :ord (c24-0 / ordinal-entity
                                :value 6)))

# ::snt Not so modern if you ask me Mike, is still on the show?
# ::tokens ["Not", "so", "modern", "if", "you", "ask", "me", "Mike", ",", "is", "still", "on", "the", "show", "?"]
# ::lemmas ["not", "so", "modern", "if", "you", "ask", "i", "Mike", ",", "be", "still", "on", "the", "show", "?"]
(c25-4 / say-01
       :ARG0 (c25-7 / i)
       :ARG1 (c25-2 / modern-02
                    :degree (c25-0 / so)
                    :condition (c25-8 / ask-01
                                      :ARG0 (c25-1 / you)
                                      :ARG2 c25-7)
                    :polarity -)
       :ARG2 (c25-6 / person
                    :name (c25-3 / name
                                 :op1 "Mike")
                    :location (c25-10 / show-04)
                    :mod (c25-5 / still)
                    :polarity (c25-9 / amr-unknown)))

# ::snt This is really good news
# ::tokens ["This", "is", "really", "good", "news"]
# ::lemmas ["this", "be", "really", "good", "news"]
(c26-2 / news
       :ARG1-of (c26-0 / good-02
                       :degree (c26-1 / really))
       :domain (c26-3 / this))

# ::snt But they canceled
# ::tokens ["But", "they", "canceled"]
# ::lemmas ["but", "they", "cancel"]
(c27-0 / contrast-01
       :ARG2 (c27-1 / cancel-01
                    :ARG0 (c27-2 / they)))

# ::snt Yume, BBT or MOfy?
# ::tokens ["Yume", ",", "BBT", "or", "MOfy", "?"]
# ::lemmas ["yume", ",", "BBT", "or", "MOfy", "?"]
(c28-0 / or
       :op1 (c28-1 / yume)
       :op2 (c28-5 / person
                   :name (c28-2 / name
                                :op1 "BBT"))
       :op3 (c28-3 / person
                   :name (c28-4 / name
                                :op1 "MOfy"))
       :polarity (c28-6 / amr-unknown))

# ::snt Writer's Assistant. Thank you
# ::tokens ["Writer", "'s", "Assistant", ".", "Thank", "you"]
# ::lemmas ["Writer", "'s", "Assistant", ".", "thank", "you"]
(c29-1 / multi-sentence
       :snt1 (c29-3 / person
                    :ARG0-of (c29-7 / assist-01
                                    :ARG1 (c29-2 / person
                                                 :ARG0-of (c29-4 / write-01))))
       :snt2 (c29-5 / thank-01
                    :ARG0 (c29-6 / i)
                    :ARG1 (c29-0 / you)))

# ::snt What does she do? Congratulations!
# ::tokens ["What", "does", "she", "do", "?", "Congratulations", "!"]
# ::lemmas ["what", "do", "she", "do", "?", "congratulation", "!"]
(c30-1 / multi-sentence
       :snt1 (c30-5 / do-02
                    :ARG0 (c30-2 / she)
                    :ARG1 (c30-4 / amr-unknown))
       :snt2 (c30-3 / congratulate-01
                    :ARG1 (c30-0 / you)
                    :mode expressive))

# ::snt I'm thrilled. My daughter has two more years of work!
# ::tokens ["I", "'m", "thrilled", ".", "My", "daughter", "has", "two", "more", "years", "of", "work", "!"]
# ::lemmas ["i", "be", "thrilled", ".", "my", "daughter", "have", "two", "more", "years", "of", "work", "!"]
(c31-1 / multi-sentence
       :snt1 (c31-8 / thrill-01
                    :ARG1 (c31-7 / i))
       :snt2 (c31-6 / work-01
                    :ARG0 (c31-4 / person
                                 :ARG0-of (c31-3 / have-rel-role-91
                                                 :ARG1 (c31-2 / i)
                                                 :ARG2 (c31-9 / daughter)))
                    :duration (c31-10 / temporal-quantity
                                      :unit (c31-0 / year)
                                      :mod (c31-5 / more)
                                      :quant 2)))

# ::snt Yes GAWD
# ::tokens ["Yes", "GAWD"]
# ::lemmas ["yes", "GAWD"]
(c32-0 / yeah
       :mode expressive)

# ::snt This is not a good show.
# ::tokens ["This", "is", "not", "a", "good", "show", "."]
# ::lemmas ["this", "be", "not", "a", "good", "show", "."]
(c33-2 / show-04
       :ARG1-of (c33-0 / good-02
                       :polarity -)
       :domain (c33-1 / this))

# ::snt Ugh why? It's not even funny anymore.
# ::tokens ["Ugh", "why", "?", "It", "'s", "not", "even", "funny", "anymore", "."]
# ::lemmas ["ugh", "why", "?", "it", "be", "not", "even", "funny", "anymore", "."]
(c34-1 / multi-sentence
       :snt1 (c34-3 / cause-01
                    :ARG0 (c34-5 / amr-unknown)
                    :mod (c34-7 / ugh
                                :mode expressive))
       :snt2 (c34-0 / funny
                    :domain (c34-4 / it)
                    :mod (c34-2 / even)
                    :time (c34-6 / anymore)
                    :polarity -))

# ::snt This show has FALLEN OFF! It needs to end because everyone has become a caricature of themselves
# ::tokens ["This", "show", "has", "FALLEN", "OFF", "!", "It", "needs", "to", "end", "because", "everyone", "has", "become", "a", "caricature", "of", "themselves"]
# ::lemmas ["this", "show", "have", "FALLEN", "OFF", "!", "it", "need", "to", "end", "because", "everyone", "have", "become", "a", "caricature", "of", "themselves"]
(c35-1 / multi-sentence
       :snt1 (c35-5 / have-mod-91
                    :ARG1 (c35-3 / show-04
                                 :mod (c35-7 / this))
                    :ARG2 (c35-9 / all-off))
       :snt2 (c35-2 / need-01
                    :ARG0 (c35-8 / it)
                    :ARG1 (c35-4 / end-01
                                 :ARG1 c35-8)
                    :ARG1-of (c35-6 / cause-01
                                    :ARG0 (c35-0 / become-01
                                                 :ARG1 (c35-10 / everyone)
                                                 :ARG2 (c35-11 / caricature
                                                               :topic c35-10)))))

# ::snt Finally! Some awesome renewal news!!!
# ::tokens ["Finally", "!", "Some", "awesome", "renewal", "news", "!", "!", "!"]
# ::lemmas ["finally", "!", "some", "awesome", "renewal", "news", "!", "!", "!"]
(c36-2 / multi-sentence
       :snt1 (c36-0 / final
                    :mode expressive)
       :snt2 (c36-1 / news
                    :topic (c36-4 / renew-01)
                    :ARG1-of (c36-5 / awe-01)
                    :quant (c36-3 / some)))

# ::snt : ABC has renewed Modern Family for a sixth season hopefully as well.
# ::tokens [":", "ABC", "has", "renewed", "Modern", "Family", "for", "a", "sixth", "season", "hopefully", "as", "well", "."]
# ::lemmas [":", "ABC", "have", "renew", "Modern", "Family", "for", "a", "sixth", "season", "hopefully", "as", "well", "."]
(c37-4 / renew-01
       :ARG0 (c37-1 / broadcast-program
                    :name (c37-2 / name
                                 :op1 "ABC")
                    :ARG1-of c37-4)
       :name (c37-5 / name
                    :op1 "Modern"
                    :op2 "Family")
       :ARG3 (c37-3 / season
                    :ord (c37-0 / ordinal-entity
                                :value 6))
       :mod (c37-7 / as-well)
       :ARG1-of (c37-6 / hope-01))

# ::snt This show is epic
# ::tokens ["This", "show", "is", "epic"]
# ::lemmas ["this", "show", "be", "epic"]
(c38-0 / epic
       :domain (c38-2 / show-04
                      :mod (c38-1 / this)))

# ::snt I like modern family don't get me wrong. But it gets more seasons but didn't get More than all together?
# ::tokens ["I", "like", "modern", "family", "do", "n't", "get", "me", "wrong", ".", "But", "it", "gets", "more", "seasons", "but", "did", "n't", "get", "More", "than", "all", "together", "?"]
# ::lemmas ["i", "like", "modern", "family", "do", "not", "get", "i", "wrong", ".", "but", "it", "get", "more", "season", "but", "do", "not", "get", "more", "than", "all", "together", "?"]
(c39-0 / multi-sentence
       :snt1 (c39-11 / get-30
                     :ARG0 (c39-9 / i)
                     :ARG1 (c39-6 / wrong-04
                                  :ARG1 c39-9)
                     :polarity -)
       :snt2 (c39-7 / contrast-01
                    :ARG1 (c39-10 / get-30
                                  :ARG0 (c39-2 / it)
                                  :ARG1 (c39-1 / season
                                               :quant (c39-4 / more))
                                  :ARG1-of (c39-16 / contrast-01
                                                   :ARG2 (c39-15 / get-30
                                                                 :ARG0 c39-2
                                                                 :ARG1 (c39-14 / more
                                                                               :ARG3-of (c39-5 / have-quant-91
                                                                                               :ARG1 c39-1
                                                                                               :ARG4 (c39-3 / all
                                                                                                            :mod (c39-8 / together))))
                                                                 :polarity -)))
                    :ARG2 (c39-13 / get-30
                                  :ARG0 c39-2
                                  :ARG1 c39-1
                                  :polarity (c39-12 / amr-unknown))))

# ::snt ...and !
# ::tokens ["...", "and", "!"]
# ::lemmas ["...", "and", "!"]
(c40-0 / and)

# ::snt this doesn't seem good for trophy wife or suburgatory
# ::tokens ["this", "does", "n't", "seem", "good", "for", "trophy", "wife", "or", "suburgatory"]
# ::lemmas ["this", "do", "not", "seem", "good", "for", "trophy", "wife", "or", "suburgatory"]
(c41-2 / seem-01
       :ARG1 (c41-5 / good-04
                    :ARG1 (c41-4 / this)
                    :ARG2 (c41-0 / or
                                 :op1 (c41-3 / wife
                                             :mod (c41-6 / trophy))
                                 :op2 (c41-1 / suburgatory))
                    :polarity -))

# ::snt It has big bang theory potential I u thin and that's been renewed for more seasons what I'm sooo glad is coming to and end is Scandal
# ::tokens ["It", "has", "big", "bang", "theory", "potential", "I", "u", "thin", "and", "that", "'s", "been", "renewed", "for", "more", "seasons", "what", "I", "'m", "sooo", "glad", "is", "coming", "to", "and", "end", "is", "Scandal"]
# ::lemmas ["it", "have", "big", "bang", "theory", "potential", "i", "u", "thin", "and", "that", "be", "be", "renew", "for", "more", "season", "what", "i", "be", "sooo", "glad", "be", "come", "to", "and", "end", "be", "Scandal"]
(c42-13 / multi-sentence
        :snt1 (c42-9 / and
                     :op1 (c42-5 / have-03
                                 :ARG0 (c42-19 / it)
                                 :ARG1 (c42-18 / potential
                                               :mod (c42-12 / big-bang)
                                               :mod (c42-8 / theory))
                                 :ARG1-of (c42-15 / thin-03
                                                  :ARG1 (c42-4 / i)))
                     :op2 (c42-16 / renew-01
                                  :ARG1 c42-8
                                  :duration (c42-1 / season
                                                   :quant (c42-6 / more))))
        :snt2 (c42-10 / glad-02
                      :ARG0 (c42-7 / and
                                   :op1 (c42-14 / come-04
                                                :ARG1 (c42-3 / scandal)
                                                :ARG2 (c42-11 / i))
                                   :op2 (c42-17 / end-01
                                                :ARG1 c42-3))
                      :ARG1 (c42-0 / i)
                      :degree (c42-2 / so)))

# ::snt Because seasons is long enough for a sitcom. Nothing lasts forever.
# ::tokens ["Because", "seasons", "is", "long", "enough", "for", "a", "sitcom", ".", "Nothing", "lasts", "forever", "."]
# ::lemmas ["because", "season", "be", "long", "enough", "for", "a", "sitcom", ".", "nothing", "last", "forever", "."]
(c43-2 / multi-sentence
       :snt1 (c43-8 / cause-01
                    :ARG0 (c43-6 / have-degree-91
                                 :ARG1 (c43-4 / season)
                                 :ARG2 (c43-7 / long-03
                                              :ARG1 c43-4)
                                 :ARG3 (c43-5 / enough)
                                 :ARG6 (c43-0 / sitcom)))
       :snt2 (c43-9 / last-01
                    :ARG1 (c43-3 / nothing)
                    :ARG2 (c43-1 / forever)))

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c44-0 / cause-01
       :ARG0 (c44-1 / amr-unknown))

# ::snt Thats pretty much every hospital set show - Greys Anatomy, House, ER, etc. hence why its hard for me to even get into % of the shit on American tv these days
# ::tokens ["That", "s", "pretty", "much", "every", "hospital", "set", "show", "-", "Greys", "Anatomy", ",", "House", ",", "ER", ",", "etc", ".", "hence", "why", "its", "hard", "for", "me", "to", "even", "get", "into", "%", "of", "the", "shit", "on", "American", "tv", "these", "days"]
# ::lemmas ["that", "s", "pretty", "much", "every", "hospital", "set", "show", "-", "Greys", "Anatomy", ",", "House", ",", "ER", ",", "etc", ".", "hence", "why", "its", "hard", "for", "i", "to", "even", "get", "into", "%", "of", "the", "shit", "on", "American", "tv", "these", "days"]
(c45-14 / cause-01
        :ARG0 (c45-0 / show-04
                     :ARG1 (c45-3 / set
                                  :mod (c45-4 / hospital))
                     :ARG3 (c45-5 / and
                                  :op1 (c45-2 / show
                                              :name (c45-17 / name
                                                            :op1 "Greys"
                                                            :op2 "Anatomy"))
                                  :op2 (c45-18 / show
                                               :name (c45-12 / name
                                                             :op1 "House"))
                                  :op3 (c45-1 / show
                                              :name (c45-20 / name
                                                            :op1 "ER"))
                                  :op4 (c45-19 / et-cetera))
                     :mod (c45-7 / every
                                 :degree (c45-21 / pretty-much)))
        :ARG1 (c45-22 / hard-02
                      :ARG1 (c45-6 / get-05
                                   :ARG1 (c45-23 / i)
                                   :ARG2 (c45-11 / percentage
                                                 :quant-of (c45-10 / shit
                                                                   :location (c45-8 / television
                                                                                    :mod (c45-9 / country
                                                                                                :name (c45-15 / name
                                                                                                              :op1 "America")))))
                                   :mod (c45-13 / even)
                                   :time (c45-24 / day
                                                 :mod (c45-16 / this)))))

# ::snt Both of them have their own space in my list. I like the bates motel a little more than the good doctor coz of personal choice of content.
# ::tokens ["Both", "of", "them", "have", "their", "own", "space", "in", "my", "list", ".", "I", "like", "the", "bates", "motel", "a", "little", "more", "than", "the", "good", "doctor", "coz", "of", "personal", "choice", "of", "content", "."]
# ::lemmas ["both", "of", "they", "have", "their", "own", "space", "in", "my", "list", ".", "i", "like", "the", "bate", "motel", "a", "little", "more", "than", "the", "good", "doctor", "coz", "of", "personal", "choice", "of", "content", "."]
(c46-12 / multi-sentence
        :snt1 (c46-4 / have-03
                     :ARG0 (c46-7 / they
                                  :mod (c46-11 / both))
                     :ARG1 (c46-0 / space
                                  :poss c46-7
                                  :location (c46-14 / thing
                                                    :ARG2-of (c46-1 / list-01
                                                                    :ARG0 (c46-20 / i)))))
        :snt2 (c46-9 / like-01
                     :ARG0 (c46-3 / i)
                     :ARG1 (c46-5 / motel
                                  :mod (c46-13 / company
                                               :name (c46-17 / name
                                                             :op1 "Bates")))
                     :ARG1-of (c46-10 / cause-01
                                      :ARG0 (c46-2 / choose-01
                                                   :ARG0 c46-3
                                                   :ARG1 (c46-16 / content)
                                                   :ARG1-of (c46-18 / personal-02)))
                     :ARG2-of (c46-19 / have-degree-91
                                      :ARG1 c46-3
                                      :ARG3 (c46-15 / more
                                                    :quant (c46-6 / little))
                                      :ARG4 (c46-21 / doctor
                                                    :ARG1-of (c46-8 / good-02)))))

# ::snt But wait a minute the most popular show in america has a white male lead
# ::tokens ["But", "wait", "a", "minute", "the", "most", "popular", "show", "in", "america", "has", "a", "white", "male", "lead"]
# ::lemmas ["but", "wait", "a", "minute", "the", "most", "popular", "show", "in", "america", "have", "a", "white", "male", "lead"]
(c47-9 / contrast-01
       :ARG2 (c47-10 / wait-01
                     :ARG1 (c47-0 / you)
                     :duration (c47-12 / temporal-quantity
                                       :unit (c47-1 / minute)
                                       :quant 1)
                     :time-of (c47-4 / have-03
                                     :ARG0 (c47-3 / show
                                                  :location (c47-14 / country
                                                                    :name (c47-2 / name
                                                                                 :op1 "America"))
                                                  :ARG1-of (c47-11 / have-degree-91
                                                                   :ARG2 (c47-5 / popular-02
                                                                                :ARG1 c47-3)
                                                                   :ARG3 (c47-6 / most)))
                                     :ARG1 (c47-7 / lead-02
                                                  :ARG0 (c47-13 / male
                                                                :ARG1-of (c47-8 / white-02))))
                     :mode imperative))

# ::snt Which one do u like more Bates Motel or Good Doctor ?
# ::tokens ["Which", "one", "do", "u", "like", "more", "Bates", "Motel", "or", "Good", "Doctor", "?"]
# ::lemmas ["which", "one", "do", "u", "like", "more", "Bates", "Motel", "or", "good", "Doctor", "?"]
(c48-6 / like-01
       :ARG0 (c48-0 / you)
       :ARG1 (c48-7 / amr-choice
                    :op1 (c48-5 / person
                                :name (c48-1 / name
                                             :op1 "Bates"
                                             :op2 "Motel"))
                    :op2 (c48-2 / person
                                :name (c48-4 / name
                                             :op1 "Good"
                                             :op2 "Doctor"))
                    :mod (c48-3 / more)))

# ::snt yeaay so excited
# ::tokens ["yeaay", "so", "excited"]
# ::lemmas ["yeaay", "so", "excited"]
(c49-0 / excite-01
       :degree (c49-2 / so)
       :mod (c49-1 / yeh
                   :mode expressive))

# ::snt Has this show gotten better? Watched a few shows, &amp; it was just the same thing over &amp; over &amp; over.
# ::tokens ["Has", "this", "show", "gotten", "better", "?", "Watched", "a", "few", "shows", ",", "&", "amp", ";", "it", "was", "just", "the", "same", "thing", "over", "&", "amp", ";", "over", "&", "amp", ";", "over", "."]
# ::lemmas ["have", "this", "show", "get", "well", "?", "watch", "a", "few", "show", ",", "&", "amp", ";", "it", "be", "just", "the", "same", "thing", "over", "&", "amp", ";", "over", "&", "amp", ";", "over", "."]
(c50-4 / multi-sentence
       :snt1 (c50-14 / get-03
                     :polarity (c50-6 / amr-unknown)
                     :ARG1 (c50-5 / show
                                  :mod (c50-13 / this))
                     :ARG2 (c50-7 / have-degree-91
                                  :ARG1 c50-5
                                  :ARG2 (c50-12 / good-02
                                                :ARG1 c50-5)
                                  :ARG3 (c50-8 / more)))
       :snt2 (c50-15 / and
                     :op1 (c50-9 / watch-01
                                 :ARG1 (c50-0 / show
                                              :quant (c50-1 / few)))
                     :op2 (c50-17 / same-01
                                  :ARG1 (c50-16 / it)
                                  :ARG2 (c50-10 / and
                                                :op1 (c50-2 / over)
                                                :op2 (c50-3 / over))
                                  :mod (c50-11 / just))))
