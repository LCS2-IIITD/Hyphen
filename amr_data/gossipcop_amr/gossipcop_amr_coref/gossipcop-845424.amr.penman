# ::snt Seems she was homeless at the time she died as well.
# ::tokens ["Seems", "she", "was", "homeless", "at", "the", "time", "she", "died", "as", "well", "."]
# ::lemmas ["seem", "she", "be", "homeless", "at", "the", "time", "she", "die", "as", "well", "."]
(c1-1 / seem-01
      :ARG1 (c1-2 / homeless
                  :domain (c1-0 / she)
                  :time (c1-4 / die-01
                              :ARG1 c1-0)
                  :mod (c1-3 / as-well)))

# ::snt Sad news
# ::tokens ["Sad", "news"]
# ::lemmas ["sad", "news"]
(c2-0 / news
      :ARG0-of (c2-1 / sad-02))

# ::snt Henry Winkler said he hopes she finds the peace she always looked for.
# ::tokens ["Henry", "Winkler", "said", "he", "hopes", "she", "finds", "the", "peace", "she", "always", "looked", "for", "."]
# ::lemmas ["Henry", "Winkler", "say", "he", "hope", "she", "find", "the", "peace", "she", "always", "look", "for", "."]
(c3-4 / say-01
      :ARG0 (c3-6 / person
                  :name (c3-2 / name
                              :op1 "Henry"
                              :op2 "Winkleler"))
      :ARG1 (c3-5 / hope-01
                  :ARG0 c3-6
                  :ARG1 (c3-0 / find-01
                              :ARG0 (c3-1 / she)
                              :ARG1 (c3-3 / peace
                                          :ARG1-of (c3-7 / look-01
                                                         :ARG0 c3-1
                                                         :time (c3-8 / always))))))

# ::snt what??? Really??? So sad.
# ::tokens ["what", "?", "?", "?", "Really", "?", "?", "?", "So", "sad", "."]
# ::lemmas ["what", "?", "?", "?", "really", "?", "?", "?", "so", "sad", "."]
(c4-1 / multi-sentence
      :snt1 (c4-4 / amr-unknown
                  :ARG1-of (c4-3 / real-04))
      :snt2 (c4-2 / sad-02
                  :degree (c4-0 / so)))

# ::snt Such a rough life
# ::tokens ["Such", "a", "rough", "life"]
# ::lemmas ["such", "a", "rough", "life"]
(c5-1 / life
      :ARG1-of (c5-0 / rough-05
                     :degree (c5-2 / such)))

# ::snt Sad to hear!
# ::tokens ["Sad", "to", "hear", "!"]
# ::lemmas ["sad", "to", "hear", "!"]
(c6-1 / sad-02
      :ARG0 (c6-0 / hear-01))

# ::snt RIP Erin....God will keep you close
# ::tokens ["RIP", "Erin", "....", "God", "will", "keep", "you", "close"]
# ::lemmas ["RIP", "Erin", "....", "God", "will", "keep", "you", "close"]
(c7-2 / multi-sentence
      :snt1 (c7-8 / wish-01
                  :ARG1 (c7-4 / rest-01
                              :ARG1 (c7-6 / person
                                          :name (c7-1 / name
                                                      :op1 "Erin"))
                              :manner (c7-3 / peace)))
      :snt2 (c7-7 / keep-02
                  :ARG0 (c7-10 / person
                               :name (c7-5 / name
                                           :op1 "God"))
                  :ARG1 (c7-9 / close-10
                              :ARG1 (c7-0 / you))))

# ::snt yeah me too...
# ::tokens ["yeah", "me", "too", "..."]
# ::lemmas ["yeah", "i", "too", "..."]
(c8-1 / i
      :mod (c8-2 / too)
      :mod (c8-0 / yeah))

# ::snt So sad, loved watching you in my youth fall days....RIP gorgeous girl
# ::tokens ["So", "sad", ",", "loved", "watching", "you", "in", "my", "youth", "fall", "days", "....", "RIP", "gorgeous", "girl"]
# ::lemmas ["so", "sad", ",", "love", "watch", "you", "in", "my", "youth", "fall", "days", "....", "rip", "gorgeous", "girl"]
(c9-3 / multi-sentence
      :snt1 (c9-5 / sad-02
                  :degree (c9-0 / so))
      :snt2 (c9-7 / love-01
                  :ARG0 (c9-9 / i)
                  :ARG1 (c9-8 / watch-01
                              :ARG0 c9-9
                              :ARG1 (c9-2 / you)
                              :time (c9-11 / day
                                           :mod (c9-1 / fall)
                                           :mod (c9-10 / youth)
                                           :poss c9-9)))
      :snt3 (c9-6 / RIP
                  :mod (c9-4 / gorgeous)))

# ::snt So sad
# ::tokens ["So", "sad"]
# ::lemmas ["so", "sad"]
(c10-1 / sad-02
       :degree (c10-0 / so))

# ::snt That's sad...
# ::tokens ["That", "'s", "sad", "..."]
# ::lemmas ["that", "be", "sad", "..."]
(c11-1 / sad-02
       :ARG0 (c11-0 / that))

# ::snt Damn RIP
# ::tokens ["Damn", "RIP"]
# ::lemmas ["Damn", "RIP"]
(c12-0 / rest-01
       :ARG1 (c12-1 / you)
       :manner (c12-2 / damn))

# ::snt So sad...
# ::tokens ["So", "sad", "..."]
# ::lemmas ["so", "sad", "..."]
(c13-1 / sad-02
       :degree (c13-0 / so))

# ::snt Would they have forgot if she was black!!! They spend to much time looking for problems to see whats right in front of them!
# ::tokens ["Would", "they", "have", "forgot", "if", "she", "was", "black", "!", "!", "!", "They", "spend", "to", "much", "time", "looking", "for", "problems", "to", "see", "what", "s", "right", "in", "front", "of", "them", "!"]
# ::lemmas ["would", "they", "have", "forget", "if", "she", "be", "black", "!", "!", "!", "they", "spend", "to", "much", "time", "look", "for", "problem", "to", "see", "what", "s", "right", "in", "front", "of", "they", "!"]
(c14-3 / multi-sentence
       :snt1 (c14-0 / forget-01
                    :polarity (c14-5 / amr-unknown)
                    :ARG0 (c14-12 / they)
                    :condition (c14-2 / black-05
                                      :ARG1 (c14-4 / she)))
       :snt2 (c14-1 / spend-02
                    :ARG0 (c14-14 / they)
                    :ARG1 (c14-11 / time
                                  :quant (c14-8 / much))
                    :ARG2 (c14-9 / look-01
                                 :ARG0 c14-14
                                 :ARG1 (c14-10 / problem))
                    :purpose (c14-15 / see-01
                                     :ARG0 c14-14
                                     :ARG1 (c14-7 / thing
                                                  :location (c14-13 / in-front-of
                                                                    :op1 c14-14)
                                                  :mod (c14-6 / right)))))

# ::snt Potsie! Richie! Sit On It! Rest In Peace Joanie C!
# ::tokens ["Potsie", "!", "Richie", "!", "Sit", "On", "It", "!", "Rest", "In", "Peace", "Joanie", "C", "!"]
# ::lemmas ["Potsie", "!", "Richie", "!", "sit", "on", "it", "!", "rest", "in", "Peace", "Joanie", "C", "!"]
(c15-10 / and
        :op1 (c15-6 / person
                    :name (c15-1 / name
                                 :op1 "Potsie"))
        :op2 (c15-2 / person
                    :name (c15-5 / name
                                 :op1 "Richie"))
        :op3 (c15-3 / sit-01
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-9 / it)
                    :mode imperative)
        :op4 (c15-4 / rest-01
                    :ARG0 c15-0
                    :manner (c15-11 / peace)
                    :mode imperative)
        :op5 (c15-8 / person
                    :name (c15-7 / name
                                 :op1 "Joanie"
                                 :op2 "C")))

# ::snt That's horrible
# ::tokens ["That", "'s", "horrible"]
# ::lemmas ["that", "be", "horrible"]
(c16-0 / horrible
       :domain (c16-1 / that))

# ::snt Sad news
# ::tokens ["Sad", "news"]
# ::lemmas ["sad", "news"]
(c17-0 / news
       :ARG0-of (c17-1 / sad-02))

# ::snt Yes I so that, nice for them all to be there, except Henry Winkler, the Fonz?
# ::tokens ["Yes", "I", "so", "that", ",", "nice", "for", "them", "all", "to", "be", "there", ",", "except", "Henry", "Winkler", ",", "the", "Fonz", "?"]
# ::lemmas ["yes", "i", "so", "that", ",", "nice", "for", "they", "all", "to", "be", "there", ",", "except", "Henry", "Winkler", ",", "the", "Fonz", "?"]
(c18-2 / nice-01
       :ARG1 (c18-0 / be-located-at-91
                    :ARG1 (c18-8 / they
                                 :mod (c18-10 / all)
                                 :ARG2-of (c18-4 / except-01
                                                 :ARG1 (c18-6 / person
                                                              :name (c18-5 / name
                                                                           :op1 "Henry"
                                                                           :op2 "Winkleler")
                                                              :mod c18-6
                                                              :name c18-5
                                                              :op1 "Fonz"))))
       :ARG2 (c18-12 / there)
       :polarity (c18-9 / amr-unknown)
       :mod (c18-3 / so)
       :mod (c18-1 / yes)
       :ARG0-of (c18-7 / cause-01
                       :ARG1 (c18-11 / that)))

# ::snt There was a recent gathering of the cast to honor her memory.
# ::tokens ["There", "was", "a", "recent", "gathering", "of", "the", "cast", "to", "honor", "her", "memory", "."]
# ::lemmas ["there", "be", "a", "recent", "gathering", "of", "the", "cast", "to", "honor", "her", "memory", "."]
(c19-5 / gather-03
       :ARG0 (c19-4 / cast)
       :time (c19-2 / recent)
       :purpose (c19-3 / honor-01
                       :ARG0 c19-4
                       :ARG1 (c19-0 / memory
                                    :poss (c19-1 / she))))

# ::snt prayers
# ::tokens ["prayers"]
# ::lemmas ["prayer"]
(c20-0 / pray-01)

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c22-0 / amr-empty)

# ::snt She had stage cancer
# ::tokens ["She", "had", "stage", "cancer"]
# ::lemmas ["she", "have", "stage", "cancer"]
(c23-1 / have-03
       :ARG0 (c23-3 / she)
       :ARG1 (c23-0 / disease
                    :name (c23-2 / name
                                 :op1 "stage"
                                 :op2 "cancer")))

# ::snt sending love and light to the family.
# ::tokens ["sending", "love", "and", "light", "to", "the", "family", "."]
# ::lemmas ["send", "love", "and", "light", "to", "the", "family", "."]
(c24-1 / send-01
       :ARG1 (c24-3 / and
                    :op1 (c24-2 / love-01)
                    :op2 (c24-4 / light))
       :ARG2 (c24-0 / family))

# ::snt So sad
# ::tokens ["So", "sad"]
# ::lemmas ["so", "sad"]
(c25-1 / sad-02
       :degree (c25-0 / so))

# ::snt Another piece of childhood gone! Rest In Peace!
# ::tokens ["Another", "piece", "of", "childhood", "gone", "!", "Rest", "In", "Peace", "!"]
# ::lemmas ["another", "piece", "of", "childhood", "gone", "!", "rest", "in", "Peace", "!"]
(c26-1 / multi-sentence
       :snt1 (c26-7 / go-02
                    :ARG0 (c26-4 / piece
                                 :part-of (c26-5 / childhood)
                                 :mod (c26-6 / another)))
       :snt2 (c26-3 / rest-01
                    :ARG0 (c26-0 / you)
                    :manner (c26-2 / peace)
                    :mode imperative))

# ::snt So sad. Another part of my youth dies as well. is way, WAY too young to leave us. Hope she is at peace now tho. RIP, Erin.
# ::tokens ["So", "sad", ".", "Another", "part", "of", "my", "youth", "dies", "as", "well", ".", "is", "way", ",", "WAY", "too", "young", "to", "leave", "us", ".", "Hope", "she", "is", "at", "peace", "now", "tho", ".", "RIP", ",", "Erin", "."]
# ::lemmas ["so", "sad", ".", "another", "part", "of", "my", "youth", "die", "as", "well", ".", "be", "way", ",", "WAY", "too", "young", "to", "leave", "we", ".", "hope", "she", "be", "at", "peace", "now", "tho", ".", "RIP", ",", "Erin", "."]
(c27-13 / multi-sentence
        :snt1 (c27-0 / sad-02
                     :degree (c27-5 / so))
        :snt2 (c27-23 / die-01
                      :ARG1 (c27-19 / part
                                    :part-of (c27-6 / youth
                                                    :poss (c27-22 / i))
                                    :mod (c27-11 / another))
                      :mod (c27-9 / as-well))
        :snt3 (c27-8 / have-degree-91
                     :ARG1 (c27-4 / she)
                     :ARG2 (c27-12 / young)
                     :ARG3 (c27-10 / too
                                   :degree (c27-20 / way))
                     :ARG6 (c27-1 / leave-11
                                  :ARG0 c27-4
                                  :ARG1 (c27-2 / we)))
        :snt4 (c27-21 / hope-01
                      :ARG0 c27-22
                      :ARG1 (c27-14 / peace
                                    :domain c27-4
                                    :time (c27-16 / now))
                      :ARG1-of (c27-7 / have-concession-91))
        :snt5 (c27-17 / say-01
                      :ARG1 (c27-18 / rest-01
                                    :ARG1 (c27-3 / person
                                                 :name (c27-15 / name
                                                               :op1 "Erin")
                                                 :ARG2-of c27-17))))

# ::snt Remember her well, she was a fine actress. Joanie will be missed. So young an so sad.
# ::tokens ["Remember", "her", "well", ",", "she", "was", "a", "fine", "actress", ".", "Joanie", "will", "be", "missed", ".", "So", "young", "an", "so", "sad", "."]
# ::lemmas ["remember", "she", "well", ",", "she", "be", "a", "fine", "actress", ".", "Joanie", "will", "be", "miss", ".", "so", "young", "an", "so", "sad", "."]
(c28-3 / multi-sentence
       :snt1 (c28-7 / remember-01
                    :ARG0 (c28-2 / you)
                    :ARG1 (c28-10 / person
                                  :ARG0-of (c28-12 / act-01
                                                   :ARG1-of (c28-0 / fine-03))
                                  :domain (c28-5 / she))
                    :mod (c28-11 / well)
                    :mode imperative)
       :snt2 (c28-9 / miss-01
                    :ARG1 (c28-4 / person
                                 :name (c28-6 / name
                                              :op1 "Joanie")))
       :snt3 (c28-13 / young
                     :degree (c28-1 / so))
       :snt4 (c28-14 / sad-02
                     :degree (c28-8 / so)))

# ::snt Sad. What did she die of?
# ::tokens ["Sad", ".", "What", "did", "she", "die", "of", "?"]
# ::lemmas ["sad", ".", "what", "do", "she", "die", "of", "?"]
(c30-1 / multi-sentence
       :snt1 (c30-2 / sad-02)
       :snt2 (c30-4 / die-01
                    :ARG1 (c30-0 / she)
                    :ARG2 (c30-3 / amr-unknown)))

# ::snt How sad.
# ::tokens ["How", "sad", "."]
# ::lemmas ["how", "sad", "."]
(c31-1 / sad-02
       :degree (c31-0 / so))

# ::snt not funny
# ::tokens ["not", "funny"]
# ::lemmas ["not", "funny"]
(c32-0 / funny
       :polarity -)

# ::snt Rip
# ::tokens ["Rip"]
# ::lemmas ["Rip"]
(c33-1 / person
       :name (c33-0 / name
                    :op1 "Rip"))

# ::snt When did you become a douchebag or have you always been one?
# ::tokens ["When", "did", "you", "become", "a", "douchebag", "or", "have", "you", "always", "been", "one", "?"]
# ::lemmas ["when", "do", "you", "become", "a", "douchebag", "or", "have", "you", "always", "be", "one", "?"]
(c34-5 / amr-choice
       :op1 (c34-0 / become-01
                   :ARG1 (c34-1 / you)
                   :ARG2 (c34-6 / douchebag)
                   :time (c34-4 / amr-unknown))
       :op2 (c34-2 / douchebag
                   :domain c34-1
                   :time (c34-3 / always)))

# ::snt RIP Erin! Just know you are in a better place now.
# ::tokens ["RIP", "Erin", "!", "Just", "know", "you", "are", "in", "a", "better", "place", "now", "."]
# ::lemmas ["RIP", "Erin", "!", "just", "know", "you", "be", "in", "a", "well", "place", "now", "."]
(c36-3 / multi-sentence
       :snt1 (c36-11 / wish-01
                     :ARG1 (c36-5 / rest-01
                                  :ARG1 (c36-7 / person
                                               :name (c36-2 / name
                                                            :op1 "Erin"))
                                  :manner (c36-4 / peace)))
       :snt2 (c36-8 / know-01
                    :ARG0 (c36-1 / you)
                    :ARG1 (c36-0 / be-located-at-91
                                 :ARG1 c36-1
                                 :ARG2 (c36-13 / place
                                               :ARG1-of (c36-6 / have-degree-91
                                                               :ARG2 (c36-14 / good-02
                                                                             :ARG1 c36-13)
                                                               :ARG3 (c36-9 / more)))
                                 :time (c36-10 / now))
                    :mod (c36-12 / just)
                    :mode imperative))

# ::snt RIP ERIN! you will most certainly be missed!
# ::tokens ["RIP", "ERIN", "!", "you", "will", "most", "certainly", "be", "missed", "!"]
# ::lemmas ["RIP", "ERIN", "!", "you", "will", "most", "certainly", "be", "miss", "!"]
(c37-1 / multi-sentence
       :snt1 (c37-7 / wish-01
                    :ARG1 (c37-3 / rest-01
                                 :ARG1 (c37-5 / person
                                              :name (c37-0 / name
                                                           :op1 "ERIN"))
                                 :manner (c37-2 / peace)))
       :snt2 (c37-4 / miss-01
                    :ARG1 c37-5
                    :manner (c37-8 / certain
                                   :ARG2-of (c37-6 / have-degree-91
                                                   :ARG1 c37-4
                                                   :ARG3 (c37-9 / most)))))

# ::snt such a dreadful loss xxx
# ::tokens ["such", "a", "dreadful", "loss", "xxx"]
# ::lemmas ["such", "a", "dreadful", "loss", "xxx"]
(c38-2 / lose-02
       :ARG1-of (c38-0 / dreadful-02)
       :mod (c38-3 / such)
       :ARG2-of (c38-1 / sign-01))

# ::snt Loves her.
# ::tokens ["Loves", "her", "."]
# ::lemmas ["love", "she", "."]
(c39-0 / love-01
       :ARG1 (c39-1 / she))

# ::snt May you always Rest in Peace
# ::tokens ["May", "you", "always", "Rest", "in", "Peace"]
# ::lemmas ["may", "you", "always", "rest", "in", "Peace"]
(c40-3 / wish-01
       :ARG1 (c40-1 / rest-01
                    :ARG1 (c40-0 / you)
                    :manner (c40-2 / peace)
                    :time (c40-4 / always)))

# ::snt Sad news R.I.P Erin Moran
# ::tokens ["Sad", "news", "R.I.P", "Erin", "Moran"]
# ::lemmas ["sad", "news", "R.I.P", "Erin", "Moran"]
(c41-3 / say-01
       :ARG1 (c41-1 / news
                    :ARG0-of (c41-0 / sad-02))
       :ARG2 (c41-5 / person
                    :name (c41-4 / name
                                 :op1 "Erin"
                                 :op2 "Moran")
                    :ARG0-of (c41-6 / have-org-role-91
                                    :ARG1 (c41-2 / publication
                                                 :name c41-4
                                                 :op1 "R.I."
                                                 :op2 "P."))))

# ::snt Such a troubled life. May she Rest In Peace!
# ::tokens ["Such", "a", "troubled", "life", ".", "May", "she", "Rest", "In", "Peace", "!"]
# ::lemmas ["such", "a", "troubled", "life", ".", "may", "she", "rest", "in", "Peace", "!"]
(c43-1 / multi-sentence
       :snt1 (c43-4 / life
                    :ARG1-of (c43-7 / trouble-01
                                    :mod (c43-2 / such)))
       :snt2 (c43-6 / wish-01
                    :ARG1 (c43-3 / rest-01
                                 :ARG1 (c43-0 / she)
                                 :manner (c43-5 / peace))
                    :ARG2 c43-0))

# ::snt WAY WHOA.
# ::tokens ["WAY", "WHOA", "."]
# ::lemmas ["WAY", "WHOA", "."]
(c44-0 / whoa
       :degree (c44-1 / way)
       :mode expressive)

# ::snt So sad,she was too young.r.i.p Erin
# ::tokens ["So", "sad", ",", "she", "was", "too", "young.r.i.p", "Erin"]
# ::lemmas ["so", "sad", ",", "she", "be", "too", "young.r.i.p", "Erin"]
(c45-3 / have-degree-91
       :ARG1 (c45-2 / she)
       :ARG2 (c45-0 / sad-02)
       :ARG3 (c45-5 / too)
       :ARG6 (c45-4 / person
                    :name (c45-1 / name
                                 :op1 "R.I."
                                 :op2 "P"
                                 :op3 "Erin")))

# ::snt How sad to hear that Erin Moran is gone '!! RIP...!!
# ::tokens ["How", "sad", "to", "hear", "that", "Erin", "Moran", "is", "gone", "'", "!", "!", "RIP", "...", "!", "!"]
# ::lemmas ["how", "sad", "to", "hear", "that", "Erin", "Moran", "be", "go", "'", "!", "!", "RIP", "...", "!", "!"]
(c46-2 / multi-sentence
       :snt1 (c46-4 / sad-02
                    :ARG0 (c46-6 / hear-01
                                 :ARG1 (c46-8 / go-02
                                              :ARG0 (c46-7 / person
                                                           :name (c46-3 / name
                                                                        :op1 "Erin"
                                                                        :op2 "Moran"))))
                    :degree (c46-0 / so))
       :snt2 (c46-5 / rest-01
                    :ARG1 (c46-1 / you)
                    :mode expressive))

# ::snt So young! Prayers to her family and friends who loved her.
# ::tokens ["So", "young", "!", "Prayers", "to", "her", "family", "and", "friends", "who", "loved", "her", "."]
# ::lemmas ["so", "young", "!", "prayer", "to", "her", "family", "and", "friend", "who", "love", "she", "."]
(c47-3 / multi-sentence
       :snt1 (c47-2 / young
                    :degree (c47-5 / so))
       :snt2 (c47-7 / pray-01
                    :beneficiary (c47-12 / and
                                         :op1 (c47-0 / family
                                                     :ARG1-of (c47-6 / have-org-role-91
                                                                     :ARG0 (c47-1 / she)
                                                                     :ARG2 (c47-8 / member)))
                                         :op2 (c47-4 / person
                                                     :ARG0-of (c47-11 / have-rel-role-91
                                                                      :ARG1 c47-1
                                                                      :ARG2 (c47-9 / friend)))
                                         :ARG0-of (c47-10 / love-01
                                                          :ARG1 c47-1))))

# ::snt So sad
# ::tokens ["So", "sad"]
# ::lemmas ["so", "sad"]
(c48-1 / sad-02
       :degree (c48-0 / so))

# ::snt Dies at .
# ::tokens ["Dies", "at", "."]
# ::lemmas ["die", "at", "."]
(c49-0 / die-01)

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c50-0 / rest-01
       :ARG1 (c50-1 / you)
       :manner (c50-2 / peace))
