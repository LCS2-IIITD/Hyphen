# ::snt Matt's a tool. She has to know that in her gut. She's a smart women. You're not obligated to stay with him. You deserve a man.
# ::tokens ["Matt", "'s", "a", "tool", ".", "She", "has", "to", "know", "that", "in", "her", "gut", ".", "She", "'s", "a", "smart", "women", ".", "You", "'re", "not", "obligated", "to", "stay", "with", "him", ".", "You", "deserve", "a", "man", "."]
# ::lemmas ["Matt", "'s", "a", "tool", ".", "she", "have", "to", "know", "that", "in", "her", "gut", ".", "she", "be", "a", "smart", "woman", ".", "you", "be", "not", "obligate", "to", "stay", "with", "he", ".", "you", "deserve", "a", "man", "."]
(c1-4 / multi-sentence
      :snt1 (c1-11 / tool
                   :domain (c1-7 / person
                                 :name (c1-3 / name
                                             :op1 "Matt")))
      :snt2 (c1-0 / obligate-01
                  :ARG1 (c1-5 / she
                              :part (c1-12 / gut))
                  :ARG2 (c1-8 / know-01
                              :ARG0 c1-5
                              :ARG1 (c1-15 / that)
                              :location c1-12))
      :snt3 (c1-10 / woman
                   :ARG1-of (c1-1 / smart-06)
                   :domain c1-5)
      :snt4 c1-0
      :ARG1 (c1-2 / you)
      :ARG2 (c1-16 / stay-01
                   :ARG1 c1-2
                   :ARG3 (c1-6 / he))
      :snt5 (c1-13 / deserve-01
                   :ARG0 (c1-14 / you)
                   :ARG1 (c1-9 / man))
      :polarity -)

# ::snt He should be so lucky
# ::tokens ["He", "should", "be", "so", "lucky"]
# ::lemmas ["he", "should", "be", "so", "lucky"]
(c2-0 / recommend-01
      :ARG1 (c2-2 / lucky
                  :degree (c2-3 / so)
                  :domain (c2-1 / he)))

# ::snt He'll be after you soon with your + likes/blue tick.
# ::tokens ["He", "'ll", "be", "after", "you", "soon", "with", "your", "+", "likes", "/", "blue", "tick", "."]
# ::lemmas ["he", "'ll", "be", "after", "you", "soon", "with", "your", "+", "likes", "/", "blue", "tick", "."]
(c3-4 / after
      :op1 (c3-2 / you)
      :time (c3-3 / soon)
      :instrument (c3-6 / tick
                        :mod (c3-0 / slash
                                   :op1 (c3-5 / like-01
                                              :ARG0 c3-2)
                                   :op2 (c3-1 / blue))))

# ::snt She needs to get rid doesn't she bab?
# ::tokens ["She", "needs", "to", "get", "rid", "does", "n't", "she", "bab", "?"]
# ::lemmas ["she", "need", "to", "get", "rid", "do", "not", "she", "bab", "?"]
(c4-2 / say-01
      :ARG0 (c4-4 / i)
      :ARG1 (c4-1 / need-01
                  :ARG0 (c4-0 / babble-01)
                  :ARG1 (c4-3 / rid-01
                              :ARG0 c4-0)
                  :ARG1-of (c4-5 / request-confirmation-91))
      :ARG2 c4-0)

# ::snt I will do make T shirt design and Digital PrintingWhatsApp : +8801726203488Click Here
# ::tokens ["I", "will", "do", "make", "T", "shirt", "design", "and", "Digital", "PrintingWhatsApp", ":", "+8801726203488Click", "Here"]
# ::lemmas ["i", "will", "do", "make", "t", "shirt", "design", "and", "Digital", "printingwhatsapp", ":", "+8801726203488click", "here"]
(c6-1 / multi-sentence
      :snt1 (c6-12 / do-02
                   :ARG0 (c6-10 / i)
                   :ARG1 (c6-3 / make-01
                               :ARG0 c6-10
                               :ARG1 (c6-11 / and
                                            :op1 (c6-8 / design-01
                                                       :ARG1 (c6-2 / shirt
                                                                   :mod (c6-9 / t)))
                                            :op2 (c6-4 / print-01
                                                       :mod (c6-5 / digital)))))
      :snt2 (c6-7 / click-01
                  :ARG0 (c6-0 / you)
                  :location (c6-6 / here)
                  :mode imperative))

# ::snt :
# ::tokens [":"]
# ::lemmas [":"]
(c7-0 / emoticon)
