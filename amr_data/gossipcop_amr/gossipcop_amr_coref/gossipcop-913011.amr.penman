# ::snt How sad. What a great actor he was.
# ::tokens ["How", "sad", ".", "What", "a", "great", "actor", "he", "was", "."]
# ::lemmas ["how", "sad", ".", "what", "a", "great", "actor", "he", "be", "."]
(c1-1 / multi-sentence
      :snt1 (c1-2 / sad-02
                  :degree (c1-0 / so))
      :snt2 (c1-4 / person
                  :ARG0-of (c1-5 / act-01)
                  :mod (c1-6 / great)
                  :domain (c1-3 / he)))

# ::snt Loved him on The Wire may he RIP
# ::tokens ["Loved", "him", "on", "The", "Wire", "may", "he", "RIP"]
# ::lemmas ["love", "he", "on", "the", "Wire", "may", "he", "RIP"]
(c2-8 / and
      :op1 (c2-4 / love-01
                 :ARG0 (c2-7 / i)
                 :ARG1 (c2-3 / he)
                 :medium (c2-0 / broadcast-program
                               :name (c2-1 / name
                                           :op1 "The"
                                           :op2 "Wire")))
      :op2 (c2-6 / wish-01
                 :ARG1 (c2-2 / rest-01
                             :ARG1 c2-3
                             :manner (c2-5 / peace))
                 :ARG2 c2-3))

# ::snt RIP to an amazing actor. You will be missed. Gone too soon.
# ::tokens ["RIP", "to", "an", "amazing", "actor", ".", "You", "will", "be", "missed", ".", "Gone", "too", "soon", "."]
# ::lemmas ["RIP", "to", "an", "amazing", "actor", ".", "you", "will", "be", "miss", ".", "go", "too", "soon", "."]
(c3-1 / multi-sentence
      :snt1 (c3-3 / RIP-01
                  :ARG1 (c3-5 / person
                              :ARG0-of (c3-9 / act-01)
                              :ARG0-of (c3-8 / amaze-01)))
      :snt2 (c3-4 / miss-01
                  :ARG1 (c3-0 / you))
      :snt3 (c3-10 / go-02
                   :time (c3-2 / soon
                               :ARG2-of (c3-6 / have-degree-91
                                              :ARG1 c3-10
                                              :ARG3 (c3-7 / too)))))

# ::snt Awesome actor especially in and , will be missed .
# ::tokens ["Awesome", "actor", "especially", "in", "and", ",", "will", "be", "missed", "."]
# ::lemmas ["Awesome", "actor", "especially", "in", "and", ",", "will", "be", "miss", "."]
(c5-0 / miss-01
      :ARG1 (c5-2 / person
                  :ARG0-of (c5-5 / act-01)
                  :ARG0-of (c5-4 / awe-01)
                  :location (c5-3 / and
                                  :op1 (c5-6 / inside)
                                  :op2 (c5-1 / especially))))

# ::snt Can't for the life of me understand why people "like" horrible news tweets. Rest well, sir.
# ::tokens ["Ca", "n't", "for", "the", "life", "of", "me", "understand", "why", "people", "\"", "like", "\"", "horrible", "news", "tweets", ".", "Rest", "well", ",", "sir", "."]
# ::lemmas ["can", "not", "for", "the", "life", "of", "i", "understand", "why", "people", "\"", "like", "\"", "horrible", "news", "tweet", ".", "rest", "well", ",", "sir", "."]
(c6-0 / multi-sentence
      :snt1 (c6-6 / possible-01
                  :ARG1 (c6-14 / understand-01
                               :ARG0 (c6-10 / i)
                               :ARG1 (c6-11 / thing
                                            :ARG0-of (c6-8 / cause-01
                                                           :ARG1 (c6-7 / like-01
                                                                       :ARG0 (c6-1 / person)
                                                                       :ARG1 (c6-15 / thing
                                                                                    :ARG1-of (c6-12 / tweet-01
                                                                                                    :mod (c6-2 / news)
                                                                                                    :mod (c6-5 / horrible))))))
                               :beneficiary (c6-13 / life
                                                   :poss c6-10))
                  :polarity -)
      :snt2 (c6-4 / rest-01
                  :ARG1 (c6-3 / sir)
                  :ARG1-of (c6-9 / well-09)))

# ::snt may his soul be at peace
# ::tokens ["may", "his", "soul", "be", "at", "peace"]
# ::lemmas ["may", "his", "soul", "be", "at", "peace"]
(c7-0 / wish-01
      :ARG1 (c7-2 / peace
                  :domain (c7-3 / soul
                                :part-of (c7-1 / he))))

# ::snt Wait is dis nigga Freeman from the Wire??
# ::tokens ["Wait", "is", "dis", "nigga", "Freeman", "from", "the", "Wire", "?", "?"]
# ::lemmas ["Wait", "be", "dis", "nigga", "Freeman", "from", "the", "Wire", "?", "?"]
(c9-5 / wait-01
      :ARG1 (c9-1 / you)
      :ARG2 (c9-4 / person
                  :name (c9-2 / name
                              :op1 "dis"
                              :op2 "nigga"
                              :op3 "Freeman")
                  :source (c9-0 / broadcast-program
                                :name (c9-3 / name
                                            :op1 "The"
                                            :op2 "Wire")))
      :polarity (c9-6 / amr-unknown)
      :mode imperative)

# ::snt Sorry for your loss, loved him on The Wire and SVU
# ::tokens ["Sorry", "for", "your", "loss", ",", "loved", "him", "on", "The", "Wire", "and", "SVU"]
# ::lemmas ["sorry", "for", "your", "loss", ",", "love", "he", "on", "the", "Wire", "and", "SVU"]
(c10-9 / and
       :op1 (c10-3 / sorry-01
                   :ARG1 (c10-1 / you)
                   :ARG2 (c10-5 / lose-02
                                :ARG0 c10-1))
       :op2 (c10-10 / love-01
                    :ARG0 c10-1
                    :ARG1 (c10-4 / he)
                    :location (c10-8 / and
                                     :op1 (c10-0 / broadcast-program
                                                 :name (c10-2 / name
                                                              :op1 "The"
                                                              :op2 "Wire"))
                                     :op2 (c10-6 / broadcast-program
                                                 :name (c10-7 / name
                                                              :op1 "SVU")))))

# ::snt Straight up old school gangster in House Of Cards, that happened to run a rib joint.
# ::tokens ["Straight", "up", "old", "school", "gangster", "in", "House", "Of", "Cards", ",", "that", "happened", "to", "run", "a", "rib", "joint", "."]
# ::lemmas ["straight", "up", "old", "school", "gangster", "in", "House", "Of", "Cards", ",", "that", "happen", "to", "run", "a", "rib", "joint", "."]
(c12-8 / gangster
       :mod (c12-0 / old)
       :mod (c12-4 / school
                   :ARG1-of (c12-1 / straight-04))
       :location (c12-2 / broadcast-program
                        :name (c12-3 / name
                                     :op1 "House"
                                     :op2 "Of"
                                     :op3 "Cards"))
       :ARG0-of (c12-5 / run-01
                       :ARG1 (c12-7 / joint
                                    :mod (c12-9 / rib)))
       :ARG1-of (c12-6 / happen-02))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c13-0 / rest-01
       :ARG1 (c13-1 / you)
       :manner (c13-2 / peace))

# ::snt My condolences to his family!! R.I.P.
# ::tokens ["My", "condolences", "to", "his", "family", "!", "!", "R.I.P."]
# ::lemmas ["my", "condolence", "to", "his", "family", "!", "!", "R.I.P."]
(c14-2 / say-01
       :ARG1 (c14-4 / condolence
                    :poss (c14-5 / i))
       :ARG2 (c14-0 / family
                    :ARG1-of (c14-3 / have-org-role-91
                                    :ARG0 c14-5
                                    :ARG2 (c14-1 / member))))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c15-0 / rest-01
       :ARG1 (c15-1 / you)
       :manner (c15-2 / peace))

# ::snt My thoughts exactly, hes more known for the Wire then some show about politics RIP Mr Cathey
# ::tokens ["My", "thoughts", "exactly", ",", "he", "s", "more", "known", "for", "the", "Wire", "then", "some", "show", "about", "politics", "RIP", "Mr", "Cathey"]
# ::lemmas ["my", "thought", "exactly", ",", "he", "s", "more", "known", "for", "the", "Wire", "then", "some", "show", "about", "politic", "RIP", "Mr", "Cathey"]
(c17-4 / say-01
       :ARG0 (c17-12 / i)
       :ARG1 (c17-13 / think-01
                     :ARG0 c17-12
                     :ARG1 (c17-7 / have-degree-91
                                  :ARG1 (c17-11 / he)
                                  :ARG2 (c17-8 / know-02
                                               :ARG1 c17-11
                                               :medium (c17-1 / broadcast-program
                                                              :name (c17-2 / name
                                                                           :op1 "Wire")))
                                  :ARG3 (c17-3 / more)
                                  :ARG4 (c17-0 / show-04
                                               :ARG1 (c17-9 / politics)
                                               :mod (c17-14 / some)))
                     :mod (c17-6 / exact))
       :ARG2 (c17-5 / person
                    :name (c17-10 / name
                                  :op1 "Mr"
                                  :op2 "Cathey")))

# ::snt He was a life long friend my family will miss him so much
# ::tokens ["He", "was", "a", "life", "long", "friend", "my", "family", "will", "miss", "him", "so", "much"]
# ::lemmas ["he", "be", "a", "life", "long", "friend", "my", "family", "will", "miss", "he", "so", "much"]
(c18-3 / have-rel-role-91
       :ARG0 (c18-8 / he)
       :ARG1 (c18-9 / i)
       :ARG2 (c18-0 / friend
                    :ARG1-of (c18-4 / long-03
                                    :ARG2 (c18-10 / life)))
       :ARG0-of (c18-7 / cause-01
                       :ARG1 (c18-1 / miss-01
                                    :ARG0 (c18-5 / family
                                                 :poss c18-9)
                                    :ARG1 c18-8
                                    :degree (c18-6 / much
                                                   :degree (c18-2 / so)))))

# ::snt Dude was in The Wire, saying he was in House of Cards is like saying Jordan used to play for the Wizards.
# ::tokens ["Dude", "was", "in", "The", "Wire", ",", "saying", "he", "was", "in", "House", "of", "Cards", "is", "like", "saying", "Jordan", "used", "to", "play", "for", "the", "Wizards", "."]
# ::lemmas ["dude", "be", "in", "the", "Wire", ",", "say", "he", "be", "in", "House", "of", "Cards", "be", "like", "say", "Jordan", "use", "to", "play", "for", "the", "Wizards", "."]
(c19-14 / and
        :op1 (c19-1 / be-located-at-91
                    :ARG1 (c19-15 / dude)
                    :ARG2 (c19-8 / publication
                                 :name (c19-3 / name
                                              :op1 "The"
                                              :op2 "Wire")))
        :op2 (c19-6 / resemble-01
                    :ARG1 (c19-5 / say-01
                                 :ARG1 (c19-7 / be-located-at-91
                                              :ARG1 c19-15
                                              :ARG2 (c19-4 / publication
                                                           :name (c19-9 / name
                                                                        :op1 "House"
                                                                        :op2 "of"
                                                                        :op3 "Cards"))))
                    :ARG2 (c19-0 / say-01
                                 :ARG1 (c19-16 / play-01
                                               :ARG0 (c19-11 / person
                                                             :name (c19-10 / name
                                                                           :op1 "Jordan"))
                                               :ARG2 (c19-13 / team
                                                             :name (c19-12 / name
                                                                           :op1 "Washington"
                                                                           :op2 " Wizards"))
                                               :time (c19-2 / use-03)))))

# ::snt He was in The Mask &amp; something else.
# ::tokens ["He", "was", "in", "The", "Mask", "&", "amp", ";", "something", "else", "."]
# ::lemmas ["he", "be", "in", "the", "Mask", "&", "amp", ";", "something", "else", "."]
(c21-4 / he
       :location (c21-0 / broadcast-program
                        :name (c21-1 / name
                                     :op1 "The"
                                     :op2 "Mask"
                                     :op3 "&"
                                     :op4 "amp")
                        :mod (c21-2 / something
                                    :mod (c21-3 / else))))

# ::snt My Condolences, Such a talent..
# ::tokens ["My", "Condolences", ",", "Such", "a", "talent", ".."]
# ::lemmas ["my", "condolence", ",", "such", "a", "talent", ".."]
(c22-1 / and
       :op1 (c22-2 / condolence
                   :poss (c22-3 / i))
       :op2 (c22-4 / talent
                   :mod (c22-0 / such)))

# ::snt Damn man thats F*%ed up
# ::tokens ["Damn", "man", "that", "s", "F*%ed", "up"]
# ::lemmas ["Damn", "man", "that", "s", "f*%ed", "up"]
(c23-1 / say-01
       :ARG0 (c23-2 / i)
       :ARG1 (c23-5 / up-00
                    :ARG1 (c23-3 / that)
                    :degree (c23-4 / damn))
       :ARG2 (c23-0 / man))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c24-0 / rest-01
       :ARG1 (c24-1 / you)
       :manner (c24-2 / peace))

# ::snt wahh so sad!
# ::tokens ["wahh", "so", "sad", "!"]
# ::lemmas ["wahh", "so", "sad", "!"]
(c28-2 / sad-02
       :degree (c28-0 / so)
       :mod (c28-1 / wahh
                   :mode expressive))

# ::snt Oh no! So sad my condolences to all his loved ones.
# ::tokens ["Oh", "no", "!", "So", "sad", "my", "condolences", "to", "all", "his", "loved", "ones", "."]
# ::lemmas ["oh", "no", "!", "so", "sad", "my", "condolence", "to", "all", "his", "loved", "one", "."]
(c29-3 / multi-sentence
       :snt1 (c29-0 / oh-no
                    :mode expressive)
       :snt2 (c29-4 / sad-02
                    :ARG1 (c29-8 / i)
                    :degree (c29-1 / so)
                    :ARG2 (c29-7 / condolence
                                 :poss c29-8
                                 :beneficiary (c29-2 / one
                                                     :ARG1-of (c29-6 / love-01
                                                                     :ARG0 (c29-5 / he))
                                                     :mod (c29-9 / all)))))

# ::snt Fuck you Frank!
# ::tokens ["Fuck", "you", "Frank", "!"]
# ::lemmas ["fuck", "you", "Frank", "!"]
(c30-2 / say-01
       :ARG0 (c30-4 / i)
       :ARG1 (c30-0 / fuck-01
                    :ARG1 (c30-3 / person
                                 :name (c30-1 / name
                                              :op1 "Frank")
                                 :ARG2-of c30-2)
                    :mode expressive
                    :mode expressive))

# ::snt RIP I loved his acting very real characters
# ::tokens ["RIP", "I", "loved", "his", "acting", "very", "real", "characters"]
# ::lemmas ["RIP", "i", "love", "his", "act", "very", "real", "character"]
(c31-3 / love-01
       :ARG0 (c31-6 / i)
       :ARG1 (c31-7 / act-01
                    :ARG0 (c31-2 / he)
                    :ARG1 (c31-5 / character
                                 :ARG1-of (c31-0 / real-04
                                                 :degree (c31-1 / very))))
       :manner (c31-4 / peace))

# ::snt RIP. Loved your work such a loss
# ::tokens ["RIP", ".", "Loved", "your", "work", "such", "a", "loss"]
# ::lemmas ["RIP", ".", "love", "your", "work", "such", "a", "loss"]
(c33-1 / multi-sentence
       :snt1 (c33-3 / rest-01
                    :ARG1 (c33-0 / you)
                    :manner (c33-5 / peace))
       :snt2 (c33-4 / love-01
                    :ARG1 (c33-6 / work-01
                                 :ARG0 (c33-8 / you))
                    :ARG1-of (c33-7 / cause-01
                                    :ARG0 (c33-9 / lose-02
                                                 :ARG1 c33-6
                                                 :degree (c33-2 / such)))))

# ::snt Gutting news. A very, very sad day. Huge Reg Cathey fan and huge David Simon fan ... but am pretty sure he was not in "Show Me A Hero," so maybe the lone Simon show that did NOT have Cathey in the cast.
# ::tokens ["Gutting", "news", ".", "A", "very", ",", "very", "sad", "day", ".", "Huge", "Reg", "Cathey", "fan", "and", "huge", "David", "Simon", "fan", "...", "but", "am", "pretty", "sure", "he", "was", "not", "in", "\"", "Show", "Me", "A", "Hero", ",", "\"", "so", "maybe", "the", "lone", "Simon", "show", "that", "did", "NOT", "have", "Cathey", "in", "the", "cast", "."]
# ::lemmas ["gutte", "news", ".", "a", "very", ",", "very", "sad", "day", ".", "Huge", "Reg", "Cathey", "fan", "and", "huge", "David", "Simon", "fan", "...", "but", "be", "pretty", "sure", "he", "be", "not", "in", "\"", "Show", "Me", "A", "Hero", ",", "\"", "so", "maybe", "the", "lone", "Simon", "show", "that", "do", "not", "have", "Cathey", "in", "the", "cast", "."]
(c34-14 / multi-sentence
        :snt1 (c34-20 / news
                      :ARG0-of (c34-11 / gut-01))
        :snt2 (c34-27 / day
                      :ARG0-of (c34-0 / sad-02
                                      :degree (c34-6 / very)))
        :snt3 (c34-17 / contrast-01
                      :ARG1 (c34-10 / and
                                    :op1 (c34-19 / fan
                                                 :mod (c34-8 / huge)
                                                 :domain (c34-21 / person
                                                                 :name (c34-16 / name
                                                                               :op1 "Reg"
                                                                               :op2 "Cathey")))
                                    :op2 (c34-22 / fan
                                                 :mod (c34-24 / huge)
                                                 :domain (c34-15 / person
                                                                 :name (c34-23 / name
                                                                               :op1 "David"
                                                                               :op2 "Simon"))))
                      :ARG2 (c34-5 / sure-02
                                   :ARG0 (c34-26 / i)
                                   :ARG1 (c34-13 / be-located-at-91
                                                 :ARG1 c34-21
                                                 :ARG2 (c34-1 / broadcast-program
                                                              :name (c34-18 / name
                                                                            :op1 "Show"
                                                                            :op2 "Me"
                                                                            :op3 "A"
                                                                            :op4 "Hero"))
                                                 :ARG0-of (c34-12 / cause-01
                                                                  :ARG1 (c34-4 / possible-01
                                                                               :ARG1 (c34-7 / have-03
                                                                                            :ARG0 c34-21
                                                                                            :ARG1 (c34-2 / person
                                                                                                         :name (c34-25 / name
                                                                                                                       :op1 "Cathey"))
                                                                                            :ARG2 (c34-3 / cast))))
                                                 :polarity -)
                                   :degree (c34-9 / pretty))))

# ::snt Damn bill Russell died
# ::tokens ["Damn", "bill", "Russell", "died"]
# ::lemmas ["Damn", "bill", "Russell", "die"]
(c35-0 / die-01
       :ARG1 (c35-3 / person
                    :name (c35-2 / name
                                 :op1 "Bill"
                                 :op2 "Russell")
                    :mod (c35-1 / damn
                                :mode expressive)))

# ::snt Rest in peace
# ::tokens ["Rest", "in", "peace"]
# ::lemmas ["rest", "in", "peace"]
(c36-0 / rest-01
       :manner (c36-1 / peace))

# ::snt Great actor. Loved him on SVU
# ::tokens ["Great", "actor", ".", "Loved", "him", "on", "SVU"]
# ::lemmas ["great", "actor", ".", "love", "he", "on", "SVU"]
(c37-1 / multi-sentence
       :snt1 (c37-4 / person
                    :ARG0-of (c37-6 / act-01
                                    :mod (c37-7 / great)))
       :snt2 (c37-5 / love-01
                    :ARG1 (c37-3 / he)
                    :location (c37-0 / broadcast-program
                                     :name (c37-2 / name
                                                  :op1 "SVU"))))

# ::snt Wow i really enjoyed this mans acting in house of cards so sad
# ::tokens ["Wow", "i", "really", "enjoyed", "this", "mans", "acting", "in", "house", "of", "cards", "so", "sad"]
# ::lemmas ["wow", "i", "really", "enjoy", "this", "man", "act", "in", "house", "of", "card", "so", "sad"]
(c38-5 / enjoy-01
       :ARG0 (c38-9 / i)
       :ARG1 (c38-3 / act-01
                    :ARG0 (c38-1 / man
                                 :mod (c38-10 / this))
                    :location (c38-6 / house
                                     :consist-of (c38-7 / card))
                    :ARG0-of (c38-2 / sad-02
                                    :degree (c38-0 / so)))
       :ARG1-of (c38-4 / real-04)
       :mod (c38-8 / wow
                   :mode expressive))

# ::snt No!!
# ::tokens ["No", "!", "!"]
# ::lemmas ["no", "!", "!"]
(c39-0 / no)

# ::snt Woah rip
# ::tokens ["Woah", "rip"]
# ::lemmas ["Woah", "rip"]
(c41-0 / rip-01
       :mod (c41-1 / Woah
                   :mode expressive))

# ::snt Cole me down on the panny sty
# ::tokens ["Cole", "me", "down", "on", "the", "panny", "sty"]
# ::lemmas ["Cole", "i", "down", "on", "the", "panny", "sty"]
(c43-3 / Cole-01
       :ARG0 (c43-0 / you)
       :ARG1 (c43-4 / i)
       :ARG2 (c43-5 / down
                    :op1 (c43-1 / sty
                                :mod (c43-2 / panny)))
       :mode imperative)

# ::snt aw man, that guys voice was amazing.
# ::tokens ["aw", "man", ",", "that", "guys", "voice", "was", "amazing", "."]
# ::lemmas ["aw", "man", ",", "that", "guy", "voice", "be", "amazing", "."]
(c44-0 / amaze-01
       :ARG0 (c44-1 / voice
                    :poss (c44-4 / guy
                                 :mod (c44-3 / that)))
       :mod (c44-2 / aw
                   :mode expressive))

# ::snt He was my favorite thing about House of Cards.
# ::tokens ["He", "was", "my", "favorite", "thing", "about", "House", "of", "Cards", "."]
# ::lemmas ["he", "be", "my", "favorite", "thing", "about", "House", "of", "Cards", "."]
(c45-5 / thing
       :ARG1-of (c45-0 / favor-01
                       :ARG0 (c45-4 / i))
       :topic (c45-2 / show
                     :name (c45-1 / name
                                  :op1 "House"
                                  :op2 "of"
                                  :op3 "Cards"))
       :domain (c45-3 / he))

# ::snt Didnt even know his name but know him as a character actor from so many movies and tv shows
# ::tokens ["Did", "nt", "even", "know", "his", "name", "but", "know", "him", "as", "a", "character", "actor", "from", "so", "many", "movies", "and", "tv", "shows"]
# ::lemmas ["do", "nt", "even", "know", "his", "name", "but", "know", "he", "as", "a", "character", "actor", "from", "so", "many", "movie", "and", "tv", "show"]
(c47-9 / contrast-01
       :ARG1 (c47-6 / know-01
                    :ARG1 (c47-1 / name
                                 :poss (c47-5 / he))
                    :mod (c47-4 / even)
                    :polarity -)
       :ARG2 (c47-14 / know-01
                     :ARG1 c47-5
                     :prep-as (c47-7 / person
                                     :ARG0-of (c47-13 / act-01
                                                      :ARG1 (c47-15 / character))
                                     :source (c47-12 / and
                                                     :op1 (c47-2 / movie)
                                                     :op2 (c47-3 / show-04
                                                                 :ARG3 (c47-11 / television))
                                                     :ARG1-of (c47-10 / have-quant-91
                                                                      :ARG2 (c47-8 / many)
                                                                      :ARG3 (c47-0 / so))))))

# ::snt Got DAMMIT
# ::tokens ["Got", "DAMMIT"]
# ::lemmas ["got", "dammit"]
(c48-0 / damn-01
       :mode expressive)
