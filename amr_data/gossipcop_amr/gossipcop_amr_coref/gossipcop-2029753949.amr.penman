# ::snt PLS. STOP. LOL NO NO NOOOOO
# ::tokens ["PLS", ".", "STOP", ".", "LOL", "NO", "NO", "NOOOOO"]
# ::lemmas ["PLS", ".", "stop", ".", "lol", "no", "no", "nooooo"]
(c1-1 / multi-sentence
      :snt1 (c1-3 / stop-01
                  :ARG0 (c1-0 / you)
                  :mod (c1-4 / post-scriptum)
                  :mode imperative)
      :snt2 (c1-5 / laugh-01
                  :ARG0 (c1-6 / i)
                  :manner (c1-7 / loud)
                  :mode expressive)
      :snt3 (c1-2 / no
                  :mode expressive))

# ::snt THIS TWIT IS UNDERRATED LMAO
# ::tokens ["THIS", "TWIT", "IS", "UNDERRATED", "LMAO"]
# ::lemmas ["this", "twit", "be", "UNDERRATED", "lmao"]
(c2-2 / laugh-01
      :ARG1 (c2-5 / ass
                  :part-of (c2-4 / i))
      :ARG2 (c2-0 / bury-01
                  :ARG1 (c2-1 / it
                              :mod (c2-3 / this)
                              :quant 2)))

# ::snt Ok thank u for ur valuable input
# ::tokens ["Ok", "thank", "u", "for", "ur", "valuable", "input"]
# ::lemmas ["ok", "thank", "u", "for", "ur", "valuable", "input"]
(c3-4 / thank-01
      :ARG1 (c3-1 / you)
      :ARG2 (c3-3 / input
                  :ARG1-of (c3-2 / value-02)
                  :poss c3-1)
      :mod (c3-0 / ok))

# ::snt This was dumb
# ::tokens ["This", "was", "dumb"]
# ::lemmas ["this", "be", "dumb"]
(c4-0 / dumb
      :domain (c4-1 / this))

# ::snt and i put medicine on it and now it looks like its BLEEDING which is not ! good!
# ::tokens ["and", "i", "put", "medicine", "on", "it", "and", "now", "it", "looks", "like", "its", "BLEEDING", "which", "is", "not", "!", "good", "!"]
# ::lemmas ["and", "i", "put", "medicine", "on", "it", "and", "now", "it", "look", "like", "its", "bleeding", "which", "be", "not", "!", "good", "!"]
(c5-7 / and
      :op2 (c5-4 / put-01
                 :ARG0 (c5-6 / i)
                 :ARG1 (c5-1 / medicine)
                 :ARG2 (c5-3 / it))
      :op3 (c5-5 / look-02
                 :ARG0 c5-3
                 :ARG1 (c5-0 / bleed-01
                             :ARG1 c5-3
                             :ARG1-of (c5-8 / good-02
                                            :polarity -
                                            :mode expressive))
                 :time (c5-2 / now)))

# ::snt C'est l'amour de la sagesse bien sur!!!!!
# ::tokens ["C'est", "l'amour", "de", "la", "sagesse", "bien", "sur", "!", "!", "!", "!", "!"]
# ::lemmas ["C'est", "l'amour", "de", "la", "sagesse", "bien", "sur", "!", "!", "!", "!", "!"]
(c7-2 / amour
      :polarity (c7-1 / amr-unknown)
      :domain (c7-0 / au-sagesse-bien-sur
                    :mode expressive))

# ::snt K, lindas
# ::tokens ["K", ",", "lindas"]
# ::lemmas ["K", ",", "linda"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "K")
      :op2 c8-1
      :name c8-0
      :op1 "Lindas")

# ::snt Done
# ::tokens ["Done"]
# ::lemmas ["do"]
(c9-0 / do-02)

# ::snt Done. All votes for ya!
# ::tokens ["Done", ".", "All", "votes", "for", "ya", "!"]
# ::lemmas ["do", ".", "all", "vote", "for", "ya", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-4 / do-02)
       :snt2 (c10-2 / vote-01
                    :ARG1 (c10-0 / you)
                    :mod (c10-3 / all)))

# ::snt Its cause we twins
# ::tokens ["Its", "cause", "we", "twins"]
# ::lemmas ["its", "cause", "we", "twin"]
(c11-0 / cause-01
       :ARG0 (c11-3 / twin
                    :domain (c11-1 / we))
       :ARG1 (c11-2 / it))

# ::snt Que insulto a la pobreza
# ::tokens ["Que", "insulto", "a", "la", "pobreza"]
# ::lemmas ["Que", "insulto", "a", "la", "pobreza"]
(c12-1 / insulto
       :manner (c12-0 / la-pobreza)
       :mode expressive)

# ::snt BITCH YES!
# ::tokens ["BITCH", "YES", "!"]
# ::lemmas ["BITCH", "yes", "!"]
(c13-1 / yes
       :mod (c13-0 / bugger
                   :mode expressive))

# ::snt Girl everyone just stared and when he asked why its important I said at the end of the day its about securing the bag and cashing the check.
# ::tokens ["Girl", "everyone", "just", "stared", "and", "when", "he", "asked", "why", "its", "important", "I", "said", "at", "the", "end", "of", "the", "day", "its", "about", "securing", "the", "bag", "and", "cashing", "the", "check", "."]
# ::lemmas ["girl", "everyone", "just", "stare", "and", "when", "he", "ask", "why", "its", "important", "i", "say", "at", "the", "end", "of", "the", "day", "its", "about", "secure", "the", "bag", "and", "cash", "the", "check", "."]
(c14-9 / and
       :op1 (c14-0 / stare-01
                   :ARG0 (c14-10 / girl)
                   :mod (c14-7 / just))
       :op2 (c14-3 / say-01
                   :ARG0 (c14-18 / i)
                   :ARG1 (c14-15 / concern-02
                                 :ARG0 (c14-4 / it)
                                 :ARG1 (c14-8 / and
                                              :op1 (c14-2 / secure-02
                                                          :ARG1 (c14-14 / bag))
                                              :op2 (c14-13 / cash-01
                                                           :ARG1 (c14-1 / check)))
                                 :time (c14-17 / end-01
                                               :ARG1 (c14-19 / day)))
                   :time (c14-6 / ask-01
                                :ARG0 (c14-5 / he)
                                :ARG1 (c14-11 / thing
                                              :ARG0-of (c14-16 / cause-01
                                                               :ARG1 (c14-12 / important-01
                                                                             :ARG1 c14-4))))))

# ::snt AMEN
# ::tokens ["AMEN"]
# ::lemmas ["AMEN"]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "AMEN"))

# ::snt Didn't pete kissed her daughter kim lmao
# ::tokens ["Did", "n't", "pete", "kissed", "her", "daughter", "kim", "lmao"]
# ::lemmas ["do", "not", "pete", "kiss", "her", "daughter", "kim", "lmao"]
(c16-4 / kiss-01
       :ARG0 (c16-3 / person
                    :name (c16-0 / name
                                 :op1 "Pete"))
       :ARG1 (c16-1 / person
                    :ARG0-of (c16-2 / have-rel-role-91
                                    :ARG1 c16-3
                                    :ARG2 (c16-8 / daughter)))
       :polarity (c16-7 / amr-unintelligible
                        :ARG2-of (c16-5 / laugh-01
                                        :ARG0 (c16-6 / i)
                                        :manner (c16-9 / loud))
                        :value "kim")
       :polarity -)

# ::snt im wheezing sksjk
# ::tokens ["i", "m", "wheezing", "sksjk"]
# ::lemmas ["i", "m", "wheeze", "sksjk"]
(c17-0 / wheeze-01
       :ARG0 (c17-3 / i)
       :ARG1 (c17-2 / person
                    :name (c17-1 / name
                                 :op1 "sksjk")))

# ::snt mAtT
# ::tokens ["mAtT"]
# ::lemmas ["mAtT"]
(c18-1 / person
       :name (c18-0 / name
                    :op1 "mAtT"))

# ::snt surtout qu au final elle s'habille toujours pareil
# ::tokens ["surtout", "qu", "au", "final", "elle", "s'habille", "toujours", "pareil"]
# ::lemmas ["surtout", "qu", "au", "final", "elle", "s'habille", "toujour", "pareil"]
(c19-0 / sense-02
       :ARG1 (c19-4 / au-final
                    :op1 (c19-1 / elle-01
                                :ARG1 (c19-2 / habille)
                                :ARG2 (c19-3 / pareil)))
       :polarity -)

# ::snt sac par jour. L a perdu la notion de la ralit cette gonz. Pathetik
# ::tokens ["sac", "par", "jour", ".", "L", "a", "perdu", "la", "notion", "de", "la", "ralit", "cette", "gonz", ".", "Pathetik"]
# ::lemmas ["sac", "par", "jour", ".", "l", "a", "perdu", "la", "notion", "de", "la", "ralit", "cette", "gonz", ".", "pathetik"]
(c20-1 / multi-sentence
       :snt1 (c20-7 / amr-unintelligible
                    :mod (c20-6 / jour)
                    :value "sac")
       :snt2 (c20-0 / notion
                    :mod (c20-5 / perdu
                                :mode expressive)
                    :mod (c20-3 / ralit-cette-gonz))
       :snt3 (c20-2 / person
                    :name (c20-4 / name
                                 :op1 "Pathetik")))

# ::snt PERO MAS VALEEEEEEEE
# ::tokens ["PERO", "MAS", "VALEEEEEEEE"]
# ::lemmas ["PERO", "MAS", "VALEEEEEEEE"]
(c21-2 / thank-01
       :ARG0 (c21-1 / i)
       :ARG1 (c21-0 / you)
       :mode expressive)

# ::snt I haven't seen it but I'm def gonna look it up when I'm off today. I can totally see it coming from Kris. Maybe they don't all practice but I wouldn't be surprised one bit if Kris taught at least a few of them
# ::tokens ["I", "have", "n't", "seen", "it", "but", "I", "'m", "def", "gon", "na", "look", "it", "up", "when", "I", "'m", "off", "today", ".", "I", "can", "totally", "see", "it", "coming", "from", "Kris", ".", "Maybe", "they", "do", "n't", "all", "practice", "but", "I", "would", "n't", "be", "surprised", "one", "bit", "if", "Kris", "taught", "at", "least", "a", "few", "of", "them"]
# ::lemmas ["i", "have", "not", "see", "it", "but", "i", "be", "def", "going", "to", "look", "it", "up", "when", "i", "be", "off", "today", ".", "i", "can", "totally", "see", "it", "come", "from", "Kris", ".", "maybe", "they", "do", "not", "all", "practice", "but", "i", "would", "not", "be", "surprise", "one", "bit", "if", "Kris", "teach", "at", "least", "a", "few", "of", "they"]
(c22-19 / multi-sentence
        :snt1 (c22-21 / contrast-01
                      :ARG1 (c22-1 / see-01
                                   :ARG0 (c22-27 / i)
                                   :ARG1 (c22-11 / it)
                                   :polarity -)
                      :ARG2 (c22-4 / look-up-05
                                   :ARG0 c22-27
                                   :ARG1 (c22-16 / it)
                                   :mod (c22-29 / definite)
                                   :time (c22-18 / be-located-at-91
                                                 :ARG1 c22-27
                                                 :ARG2 (c22-9 / off)
                                                 :time (c22-13 / today))))
        :snt2 (c22-26 / possible-01
                      :ARG1 (c22-10 / see-01
                                    :ARG0 (c22-0 / i)
                                    :ARG1 (c22-17 / come-03
                                                  :ARG1 (c22-23 / it)
                                                  :ARG2 (c22-20 / person
                                                                :name (c22-25 / name
                                                                              :op1 "Kris")))
                                    :degree (c22-22 / total)))
        :snt3 (c22-6 / contrast-01
                     :ARG1 (c22-7 / possible-01
                                  :ARG1 (c22-5 / practice-01
                                               :ARG0 (c22-28 / they)
                                               :mod (c22-14 / all)
                                               :polarity -))
                     :ARG2 (c22-8 / surprise-01
                                  :ARG0 (c22-2 / teach-01
                                               :ARG0 c22-20
                                               :ARG2 (c22-15 / they
                                                             :quant (c22-12 / at-least
                                                                            :op1 (c22-24 / few))))
                                  :ARG1 c22-0
                                  :degree (c22-3 / bit
                                                 :quant 1)
                                  :polarity -)))

# ::snt I % believe it
# ::tokens ["I", "%", "believe", "it"]
# ::lemmas ["i", "%", "believe", "it"]
(c23-1 / believe-01
       :ARG0 (c23-3 / i)
       :ARG1 (c23-0 / it)
       :degree (c23-2 / percentage-entity
                      :value 80))

# ::snt AND its minutes long what the fuck hahaha
# ::tokens ["AND", "its", "minutes", "long", "what", "the", "fuck", "hahaha"]
# ::lemmas ["and", "its", "minute", "long", "what", "the", "fuck", "hahaha"]
(c24-2 / and
       :op2 (c24-4 / long-03
                   :ARG1 (c24-5 / it)
                   :ARG2 (c24-1 / multiple
                                :op1 (c24-6 / temporal-quantity
                                            :unit (c24-3 / minute)
                                            :quant 1))
                   :mod (c24-0 / fuck
                               :mode expressive)))

# ::snt im wheezing
# ::tokens ["i", "m", "wheezing"]
# ::lemmas ["i", "m", "wheeze"]
(c26-0 / wheeze-01
       :ARG0 (c26-1 / i))

# ::snt Omg
# ::tokens ["Omg"]
# ::lemmas ["Omg"]
(c27-0 / oh-my-god
       :mode expressive)

# ::snt hahahahaha this is the BEST thank you!!
# ::tokens ["hahahahaha", "this", "is", "the", "BEST", "thank", "you", "!", "!"]
# ::lemmas ["hahahahaha", "this", "be", "the", "BEST", "thank", "you", "!", "!"]
(c29-2 / have-degree-91
       :ARG1 (c29-4 / this)
       :ARG2 (c29-6 / good-02
                    :ARG1 c29-4)
       :ARG3 (c29-1 / most)
       :ARG5 (c29-5 / thank-01
                    :ARG1 (c29-0 / you))
       :mod (c29-3 / haha
                   :mode expressive)
       :mode expressive)

# ::snt wait
# ::tokens ["wait"]
# ::lemmas ["wait"]
(c30-0 / wait-01
       :ARG1 (c30-1 / you))

# ::snt Shoot higher sis. Fuck those guys
# ::tokens ["Shoot", "higher", "sis", ".", "Fuck", "those", "guys"]
# ::lemmas ["shoot", "high", "sis", ".", "fuck", "those", "guy"]
(c31-3 / multi-sentence
       :snt1 (c31-4 / shoot-02
                    :ARG0 (c31-2 / you)
                    :ARG1 (c31-7 / person
                                 :ARG0-of (c31-6 / have-rel-role-91
                                                 :ARG1 c31-2
                                                 :ARG2 (c31-0 / sister))
                                 :ARG1-of (c31-9 / have-degree-91
                                                 :ARG2 (c31-5 / high-02
                                                              :ARG1 c31-7)
                                                 :ARG3 (c31-8 / more)))
                    :mode imperative)
       :snt2 (c31-1 / fuck-01
                    :ARG1 (c31-11 / guy
                                  :mod (c31-10 / that))
                    :mode expressive))

# ::snt deserves of !!
# ::tokens ["deserves", "of", "!", "!"]
# ::lemmas ["deserve", "of", "!", "!"]
(c32-0 / deserve-01
       :mode expressive)

# ::snt What about our girl
# ::tokens ["What", "about", "our", "girl"]
# ::lemmas ["what", "about", "our", "girl"]
(c33-2 / amr-unknown
       :topic (c33-0 / girl
                     :poss (c33-1 / we)))

# ::snt Voted for my girl khloe
# ::tokens ["Voted", "for", "my", "girl", "khloe"]
# ::lemmas ["vote", "for", "my", "girl", "khloe"]
(c34-1 / vote-01
       :ARG1 (c34-3 / person
                    :name (c34-0 / name
                                 :op1 "Khloe")
                    :poss (c34-4 / i)
                    :ARG0-of (c34-2 / have-rel-role-91
                                    :ARG1 c34-4
                                    :ARG2 (c34-5 / girl))))

# ::snt Vote Democrat in the mid terms !! That is the only vote you need to cast
# ::tokens ["Vote", "Democrat", "in", "the", "mid", "terms", "!", "!", "That", "is", "the", "only", "vote", "you", "need", "to", "cast"]
# ::lemmas ["vote", "Democrat", "in", "the", "mid", "term", "!", "!", "that", "be", "the", "only", "vote", "you", "need", "to", "cast"]
(c35-3 / multi-sentence
       :snt1 (c35-4 / vote-01
                    :ARG0 (c35-1 / you)
                    :ARG1 (c35-6 / political-party
                                 :name (c35-2 / name
                                              :op1 "Democrat"))
                    :time (c35-10 / term
                                  :mod (c35-5 / mid))
                    :mode imperative)
       :snt2 (c35-8 / vote-01
                    :ARG1 (c35-12 / that)
                    :mod (c35-0 / only)
                    :ARG1-of (c35-9 / cast-01
                                    :ARG0 (c35-11 / you)
                                    :ARG1-of (c35-7 / need-01
                                                    :ARG0 c35-11))))

# ::snt I just wanna vote for Kourt or Kenny, don't have anything against Khlo and Kim though
# ::tokens ["I", "just", "wanna", "vote", "for", "Kourt", "or", "Kenny", ",", "do", "n't", "have", "anything", "against", "Khlo", "and", "Kim", "though"]
# ::lemmas ["i", "just", "wanna", "vote", "for", "Kourt", "or", "Kenny", ",", "do", "not", "have", "anything", "against", "Khlo", "and", "Kim", "though"]
(c36-14 / and
        :op1 (c36-9 / want-01
                    :ARG0 (c36-13 / i)
                    :ARG1 (c36-4 / vote-01
                                 :ARG0 c36-13
                                 :ARG1 (c36-0 / or
                                              :op1 (c36-6 / person
                                                          :name (c36-2 / name
                                                                       :op1 "Kourt"))
                                              :op2 (c36-3 / person
                                                          :name (c36-5 / name
                                                                       :op1 "Kenny"))))
                    :mod (c36-12 / just))
        :op2 (c36-7 / have-concession-91
                    :ARG1 (c36-1 / oppose-01
                                 :ARG0 c36-13
                                 :ARG1 (c36-15 / and
                                               :op1 (c36-16 / person
                                                            :name (c36-8 / name
                                                                         :op1 "Khlo"))
                                               :op2 (c36-10 / person
                                                            :name (c36-11 / name
                                                                          :op1 "Kim")))
                                 :polarity -)))

# ::snt What about your eldest daughter, Kourtney?
# ::tokens ["What", "about", "your", "eldest", "daughter", ",", "Kourtney", "?"]
# ::lemmas ["what", "about", "your", "eld", "daughter", ",", "Kourtney", "?"]
(c37-7 / amr-unknown
       :topic (c37-5 / person
                     :name (c37-2 / name
                                  :op1 "Kourtney")
                     :ARG0-of (c37-4 / have-rel-role-91
                                     :ARG1 (c37-1 / you)
                                     :ARG2 (c37-8 / daughter
                                                  :ARG1-of (c37-6 / have-degree-91
                                                                  :ARG2 (c37-0 / old)
                                                                  :ARG3 (c37-3 / most))))))

# ::snt Ahhh
# ::tokens ["Ahhh"]
# ::lemmas ["ahhh"]
(c38-0 / ah
       :mode expressive)

# ::snt They have it.
# ::tokens ["They", "have", "it", "."]
# ::lemmas ["they", "have", "it", "."]
(c39-0 / have-03
       :ARG0 (c39-2 / they)
       :ARG1 (c39-1 / it))

# ::snt Vote for President in !!
# ::tokens ["Vote", "for", "President", "in", "!", "!"]
# ::lemmas ["vote", "for", "President", "in", "!", "!"]
(c40-2 / vote-01
       :ARG0 (c40-0 / you)
       :ARG1 (c40-4 / person
                    :ARG0-of (c40-3 / have-org-role-91
                                    :ARG2 (c40-1 / president)))
       :mode imperative)

# ::snt Is please a word you ever use? Nah.
# ::tokens ["Is", "please", "a", "word", "you", "ever", "use", "?", "Nah", "."]
# ::lemmas ["be", "please", "a", "word", "you", "ever", "use", "?", "Nah", "."]
(c41-1 / multi-sentence
       :snt1 (c41-4 / word
                    :ARG1-of (c41-5 / use-01
                                    :ARG0 (c41-0 / you)
                                    :time (c41-3 / ever))
                    :polite +)
       :snt2 (c41-2 / nah))

# ::snt I wanna vote for kendall
# ::tokens ["I", "wanna", "vote", "for", "kendall"]
# ::lemmas ["i", "wanna", "vote", "for", "kendall"]
(c42-3 / want-01
       :ARG0 (c42-4 / i)
       :ARG1 (c42-1 / vote-01
                    :ARG0 c42-4
                    :ARG1 (c42-2 / person
                                 :name (c42-0 / name
                                              :op1 "Kendall"))))

# ::snt Hell yessss I will!!!
# ::tokens ["Hell", "yessss", "I", "will", "!", "!", "!"]
# ::lemmas ["hell", "yessss", "i", "will", "!", "!", "!"]
(c43-0 / will-02
       :ARG0 (c43-2 / i)
       :mod (c43-1 / hell
                   :mode expressive)
       :mode expressive)

# ::snt Should we?
# ::tokens ["Should", "we", "?"]
# ::lemmas ["should", "we", "?"]
(c44-0 / recommend-01
       :polarity (c44-2 / amr-unknown)
       :ARG2 (c44-1 / we))

# ::snt How much will you pay me?You pimp them out to make money, so pay if you want us to vote for them.
# ::tokens ["How", "much", "will", "you", "pay", "me?You", "pimp", "them", "out", "to", "make", "money", ",", "so", "pay", "if", "you", "want", "us", "to", "vote", "for", "them", "."]
# ::lemmas ["how", "much", "will", "you", "pay", "me?you", "pimp", "they", "out", "to", "make", "money", ",", "so", "pay", "if", "you", "want", "we", "to", "vote", "for", "they", "."]
(c46-5 / pay-01
       :ARG0 (c46-0 / you)
       :ARG1 (c46-11 / amr-unknown)
       :ARG2 (c46-10 / i)
       :purpose (c46-2 / pimp-out-00
                       :ARG0 c46-0
                       :ARG1 (c46-9 / they)
                       :purpose (c46-1 / make-05
                                       :ARG0 c46-0
                                       :ARG1 (c46-4 / money)))
       :ARG0-of (c46-7 / cause-01
                       :ARG1 (c46-12 / pay-01
                                     :condition (c46-8 / want-01
                                                       :ARG0 c46-0
                                                       :ARG1 (c46-3 / vote-01
                                                                    :ARG0 (c46-6 / we)
                                                                    :ARG1 c46-9)))))

# ::snt Dear freinds,have a very happy time with your family my freinds!!
# ::tokens ["Dear", "freinds", ",", "have", "a", "very", "happy", "time", "with", "your", "family", "my", "freinds", "!", "!"]
# ::lemmas ["dear", "freind", ",", "have", "a", "very", "happy", "time", "with", "your", "family", "my", "freind", "!", "!"]
(c47-2 / say-01
       :ARG0 (c47-9 / i)
       :ARG1 (c47-5 / have-03
                    :ARG0 (c47-6 / person
                                 :mod (c47-11 / dear)
                                 :ARG0-of (c47-8 / have-rel-role-91
                                                 :ARG2 (c47-0 / freind)
                                                 :ARG1 c47-6))
                    :ARG1 (c47-10 / time
                                  :ARG1-of (c47-4 / happy-01
                                                  :degree (c47-3 / very))
                                  :accompanier (c47-1 / person
                                                      :ARG0-of (c47-12 / have-rel-role-91
                                                                       :ARG1 c47-6
                                                                       :ARG2 (c47-7 / family))))
                    :mode imperative)
       :ARG2 c47-6)

# ::snt Yeah what happened to please and thank you
# ::tokens ["Yeah", "what", "happened", "to", "please", "and", "thank", "you"]
# ::lemmas ["yeah", "what", "happen", "to", "please", "and", "thank", "you"]
(c48-1 / and
       :op1 (c48-2 / please-01)
       :op2 (c48-4 / thank-01
                   :ARG0 (c48-3 / i)
                   :ARG1 (c48-0 / you))
       :mod (c48-5 / yeah
                   :mode expressive))

# ::snt What happend to "PLEASE"
# ::tokens ["What", "happend", "to", "\"", "PLEASE", "\""]
# ::lemmas ["what", "happend", "to", "\"", "please", "\""]
(c49-0 / event
       :mod (c49-1 / please
                   :polite +))

# ::snt Love u
# ::tokens ["Love", "u"]
# ::lemmas ["Love", "u"]
(c50-1 / love-01
       :ARG1 (c50-0 / you))
