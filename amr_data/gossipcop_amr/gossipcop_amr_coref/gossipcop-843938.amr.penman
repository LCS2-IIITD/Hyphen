# ::snt although I don't watch, this is awesome news! Congrats!
# ::tokens ["although", "I", "do", "n't", "watch", ",", "this", "is", "awesome", "news", "!", "Congrats", "!"]
# ::lemmas ["although", "i", "do", "not", "watch", ",", "this", "be", "awesome", "news", "!", "Congrats", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-1 / news
                  :ARG0-of (c2-3 / awe-01)
                  :domain (c2-7 / this)
                  :concession (c2-4 / watch-01
                                    :ARG0 (c2-6 / i)
                                    :polarity -))
      :snt2 (c2-5 / congratulate-01
                  :ARG1 (c2-0 / you)
                  :mode expressive))

# ::snt more an iron man quote on the avengers side but the bard of Avon would look great with Thor's hammer
# ::tokens ["more", "an", "iron", "man", "quote", "on", "the", "avengers", "side", "but", "the", "bard", "of", "Avon", "would", "look", "great", "with", "Thor", "'s", "hammer"]
# ::lemmas ["more", "an", "iron", "man", "quote", "on", "the", "avenger", "side", "but", "the", "bard", "of", "Avon", "would", "look", "great", "with", "Thor", "'s", "hammer"]
(c3-10 / contrast-01
       :ARG1 (c3-12 / quote-01
                    :ARG2 (c3-0 / man
                                :mod (c3-11 / iron))
                    :location (c3-2 / side
                                    :poss (c3-4 / avengers))
                    :mod (c3-5 / more))
       :ARG2 (c3-6 / look-02
                   :ARG0 (c3-7 / person
                               :name (c3-1 / name
                                           :op1 "Bard"
                                           :op2 "of"
                                           :op3 "Avon"))
                   :ARG1 (c3-13 / great)
                   :instrument (c3-8 / hammer
                                     :poss (c3-3 / person
                                                 :name (c3-9 / name
                                                             :op1 "Thor")))))

# ::snt sweet!! Hope you're having a good night!!
# ::tokens ["sweet", "!", "!", "Hope", "you", "'re", "having", "a", "good", "night", "!", "!"]
# ::lemmas ["sweet", "!", "!", "hope", "you", "be", "have", "a", "good", "night", "!", "!"]
(c4-2 / multi-sentence
      :snt1 (c4-3 / sweet-03)
      :snt2 (c4-4 / hope-01
                  :ARG0 (c4-5 / i)
                  :ARG1 (c4-0 / sleep-01
                              :ARG0 (c4-1 / you)
                              :ARG1-of (c4-6 / good-02))))

# ::snt absolutely.
# ::tokens ["absolutely", "."]
# ::lemmas ["absolutely", "."]
(c5-0 / absolute)

# ::snt You're very welcome!
# ::tokens ["You", "'re", "very", "welcome", "!"]
# ::lemmas ["you", "be", "very", "welcome", "!"]
(c6-0 / welcome-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-2 / you)
      :degree (c6-1 / very))

# ::snt thanks
# ::tokens ["thanks"]
# ::lemmas ["thank"]
(c7-0 / thank-01)

# ::snt are we ever going to get the honor of your presence at a WSC? Preferably Atlanta so I can say hello
# ::tokens ["are", "we", "ever", "going", "to", "get", "the", "honor", "of", "your", "presence", "at", "a", "WSC", "?", "Preferably", "Atlanta", "so", "I", "can", "say", "hello"]
# ::lemmas ["be", "we", "ever", "go", "to", "get", "the", "honor", "of", "your", "presence", "at", "a", "WSC", "?", "preferably", "Atlanta", "so", "i", "can", "say", "hello"]
(c8-1 / multi-sentence
      :snt1 (c8-6 / honor-01
                  :polarity (c8-13 / amr-unknown)
                  :ARG1 (c8-9 / we)
                  :ARG2 (c8-7 / present-02
                              :ARG1 (c8-0 / you)
                              :ARG2 (c8-14 / government-organization
                                           :name (c8-2 / name
                                                       :op1 "WSC")))
                  :time (c8-5 / ever))
      :snt2 (c8-10 / city
                   :name (c8-8 / name
                               :op1 "Atlanta")
                   :ARG1-of (c8-3 / prefer-01
                                  :ARG0 (c8-12 / i)
                                  :ARG1-of (c8-15 / possible-01
                                                  :ARG1 (c8-4 / say-01
                                                              :ARG0 c8-12
                                                              :ARG1 (c8-11 / hello))))))

# ::snt Congrats on becoming a series regular! Bring on
# ::tokens ["Congrats", "on", "becoming", "a", "series", "regular", "!", "Bring", "on"]
# ::lemmas ["congrat", "on", "become", "a", "series", "regular", "!", "bring", "on"]
(c9-2 / multi-sentence
      :snt1 (c9-6 / congratulate-01
                  :ARG2 (c9-0 / become-01
                              :ARG2 (c9-4 / regular-03
                                          :ARG1 (c9-3 / series))))
      :snt2 (c9-5 / bring-on-06
                  :ARG0 (c9-1 / you)
                  :mode imperative))

# ::snt BOOM
# ::tokens ["BOOM"]
# ::lemmas ["BOOM"]
(c10-0 / boosh
       :mode expressive)

# ::snt oh we r bringin it baby...
# ::tokens ["oh", "we", "r", "bringin", "it", "baby", "..."]
# ::lemmas ["oh", "we", "r", "bringin", "it", "baby", "..."]
(c11-1 / bring-01
       :ARG0 (c11-3 / we)
       :ARG1 (c11-4 / it)
       :mod (c11-0 / oh
                   :mode expressive)
       :ARG2 (c11-2 / baby))

# ::snt Internet rule : Do not feed the trolls!I hereby evoke troll-blocked... Only the second one in years twittering.
# ::tokens ["Internet", "rule", ":", "Do", "not", "feed", "the", "trolls!I", "hereby", "evoke", "troll", "-", "blocked", "...", "Only", "the", "second", "one", "in", "years", "twittering", "."]
# ::lemmas ["internet", "rule", ":", "do", "not", "feed", "the", "trolls!I", "hereby", "evoke", "troll", "-", "block", "...", "only", "the", "second", "one", "in", "years", "twitter", "."]
(c12-4 / multi-sentence
       :snt1 (c12-7 / rule
                    :topic (c12-12 / internet)
                    :ARG1-of (c12-9 / mean-01
                                    :ARG2 (c12-0 / feed-01
                                                 :ARG0 (c12-3 / you)
                                                 :ARG2 (c12-13 / troll)
                                                 :mode imperative
                                                 :polarity -)))
       :snt2 (c12-8 / evoke-01
                    :ARG0 (c12-6 / i)
                    :ARG1 (c12-17 / trigger-01
                                  :ARG1 (c12-14 / troll))
                    :mod (c12-10 / hereby))
       :snt3 (c12-11 / twitter-01
                     :ord (c12-1 / ordinal-entity
                                 :mod (c12-2 / only)
                                 :range (c12-16 / multiple
                                                :op1 (c12-5 / temporal-quantity
                                                            :unit (c12-15 / year)
                                                            :quant 1))
                                 :value 2)))

# ::snt congrats "Gregory"!!
# ::tokens ["congrats", "\"", "Gregory", "\"", "!", "!"]
# ::lemmas ["congrat", "\"", "Gregory", "\"", "!", "!"]
(c13-0 / congratulate-01
       :ARG1 (c13-2 / person
                    :name (c13-1 / name
                                 :op1 "Gregory"))
       :mode expressive)

# ::snt "Doth mother know you weareth her drapes?": Me thinks it be a Spiderman quote, and not from The Bard of Avon
# ::tokens ["\"", "Doth", "mother", "know", "you", "weareth", "her", "drapes", "?", "\"", ":", "Me", "thinks", "it", "be", "a", "Spiderman", "quote", ",", "and", "not", "from", "The", "Bard", "of", "Avon"]
# ::lemmas ["\"", "Doth", "mother", "know", "you", "weareth", "her", "drape", "?", "\"", ":", "i", "think", "it", "be", "a", "Spiderman", "quote", ",", "and", "not", "from", "the", "Bard", "of", "Avon"]
(c14-11 / multi-sentence
        :snt1 (c14-4 / know-01
                     :polarity (c14-9 / amr-unknown)
                     :ARG0 (c14-16 / person
                                   :ARG0-of (c14-3 / have-rel-role-91
                                                   :ARG1 (c14-1 / you)
                                                   :ARG2 (c14-5 / mother)))
                     :ARG1 (c14-7 / areth-01
                                  :ARG0 c14-1
                                  :ARG1 (c14-18 / drapes
                                                :poss c14-16)))
        :snt2 (c14-8 / think-01
                     :ARG0 (c14-17 / i)
                     :ARG1 (c14-6 / and
                                  :op1 (c14-10 / quote-01
                                               :ARG2 (c14-12 / person
                                                             :name (c14-15 / name
                                                                           :op1 "Spiderman"))
                                               :domain (c14-2 / it))
                                  :op2 (c14-14 / quote-01
                                               :ARG2 (c14-0 / person
                                                            :name (c14-13 / name
                                                                          :op1 "The"
                                                                          :op2 "Bard"
                                                                          :op3 "of"
                                                                          :op4 "Avon"))
                                               :domain c14-2
                                               :polarity -))))

# ::snt awesome news Xander!! Bring on season
# ::tokens ["awesome", "news", "Xander", "!", "!", "Bring", "on", "season"]
# ::lemmas ["awesome", "news", "Xander", "!", "!", "bring", "on", "season"]
(c15-4 / multi-sentence
       :snt1 (c15-5 / say-01
                    :ARG0 (c15-8 / i)
                    :ARG1 (c15-3 / news
                                 :mod (c15-9 / awesome))
                    :ARG2 (c15-7 / person
                                 :name (c15-6 / name
                                              :op1 "Xander")))
       :snt2 (c15-1 / bring-on-06
                    :ARG0 (c15-2 / you)
                    :ARG1 (c15-0 / season)
                    :mode imperative))

# ::snt hmmmm lol
# ::tokens ["hmmmm", "lol"]
# ::lemmas ["hmmmm", "lol"]
(c16-1 / hmm
       :ARG2-of (c16-2 / laugh-01
                       :manner (c16-0 / loud))
       :mode expressive)

# ::snt weareth her drapes... Werethher drapes... Hmmm... Thats a real stumper
# ::tokens ["weareth", "her", "drapes", "...", "Werethher", "drapes", "...", "Hmmm", "...", "That", "s", "a", "real", "stumper"]
# ::lemmas ["weareth", "her", "drape", "...", "Werethher", "drape", "...", "hmmm", "...", "that", "s", "a", "real", "stumper"]
(c17-1 / multi-sentence
       :snt1 (c17-8 / areth-01
                    :ARG0 (c17-5 / we)
                    :ARG1 (c17-9 / drapes
                                 :poss (c17-2 / she)))
       :snt2 (c17-6 / drapes
                    :poss (c17-0 / she))
       :snt3 (c17-4 / hmm
                    :mode expressive)
       :snt4 (c17-10 / stumper
                     :ARG1-of (c17-3 / real-04)
                     :domain (c17-7 / that)))

# ::snt more importantly, doth thy know you wearith her drapes sorry....had to jump on that
# ::tokens ["more", "importantly", ",", "doth", "thy", "know", "you", "wearith", "her", "drapes", "sorry", "....", "had", "to", "jump", "on", "that"]
# ::lemmas ["more", "importantly", ",", "doth", "thy", "know", "you", "wearith", "her", "drape", "sorry", "....", "have", "to", "jump", "on", "that"]
(c18-4 / multi-sentence
       :snt1 (c18-11 / important-01
                     :ARG1 (c18-7 / know-01
                                  :ARG0 (c18-3 / you)
                                  :ARG1 (c18-5 / sorry-01
                                               :ARG1 (c18-13 / you)
                                               :ARG2 (c18-9 / wear-01
                                                            :ARG0 c18-13
                                                            :ARG1 (c18-14 / drapes
                                                                          :poss (c18-1 / she)))))
                     :ARG2-of (c18-6 / have-degree-91
                                     :ARG1 c18-7
                                     :ARG3 (c18-8 / more)))
       :snt2 (c18-2 / obligate-01
                    :ARG1 (c18-0 / you)
                    :ARG2 (c18-10 / jump-03
                                  :ARG0 c18-0
                                  :ARG2 (c18-12 / that))))

# ::snt know not which twat,Hath revealed the plot.But tis a bad idea!To kiss-off fans in Korea?!
# ::tokens ["know", "not", "which", "twat", ",", "Hath", "revealed", "the", "plot", ".", "But", "tis", "a", "bad", "idea!To", "kiss", "-", "off", "fans", "in", "Korea", "?", "!"]
# ::lemmas ["know", "not", "which", "twat", ",", "Hath", "reveal", "the", "plot", ".", "but", "tis", "a", "bad", "idea!to", "kiss", "-", "off", "fan", "in", "Korea", "?", "!"]
(c19-2 / multi-sentence
       :snt1 (c19-8 / know-01
                    :ARG0 (c19-11 / i)
                    :ARG1 (c19-5 / reveal-01
                                 :ARG0 (c19-12 / twat
                                               :name (c19-3 / name
                                                            :op1 "Hath"))
                                 :ARG1 (c19-9 / plot))
                    :polarity -)
       :snt2 (c19-10 / contrast-01
                     :ARG2 (c19-4 / idea
                                  :ARG1-of (c19-1 / bad-07)
                                  :domain (c19-13 / kiss-01
                                                  :ARG1 (c19-0 / fan
                                                               :location (c19-14 / country
                                                                                 :name (c19-7 / name
                                                                                              :op1 "Korea"))))
                                  :polarity (c19-6 / amr-unknown))))

# ::snt and who, mayI ask is the fuckee in question? And what has the twat revealed?
# ::tokens ["and", "who", ",", "mayI", "ask", "is", "the", "fuckee", "in", "question", "?", "And", "what", "has", "the", "twat", "revealed", "?"]
# ::lemmas ["and", "who", ",", "mayI", "ask", "be", "the", "fuckee", "in", "question", "?", "and", "what", "have", "the", "twat", "reveal", "?"]
(c20-1 / multi-sentence
       :snt1 (c20-2 / and
                    :op2 (c20-4 / possible-01
                                :ARG1 (c20-8 / ask-01
                                             :ARG0 (c20-7 / i)
                                             :ARG1 (c20-0 / fuckee
                                                          :ARG1-of (c20-9 / question-01)))))
       :snt2 (c20-5 / and
                    :op2 (c20-3 / reveal-01
                                :ARG0 (c20-6 / twat)
                                :ARG1 (c20-10 / amr-unknown))))

# ::snt did I mean,Thou shalt spilleth the bean.And now do we realize,Another doth fucketh the surprise!
# ::tokens ["did", "I", "mean", ",", "Thou", "shalt", "spilleth", "the", "bean", ".", "And", "now", "do", "we", "realize", ",", "Another", "doth", "fucketh", "the", "surprise", "!"]
# ::lemmas ["do", "i", "mean", ",", "Thou", "shalt", "spilleth", "the", "bean", ".", "and", "now", "do", "we", "realize", ",", "another", "doth", "fucketh", "the", "surprise", "!"]
(c21-4 / multi-sentence
       :snt1 (c21-8 / mean-01
                    :polarity (c21-12 / amr-unknown)
                    :ARG0 (c21-11 / i)
                    :ARG2 (c21-6 / shalt
                                 :domain (c21-0 / spilleth-01
                                                :ARG0 (c21-3 / you)
                                                :ARG1 (c21-2 / bean))))
       :snt2 (c21-13 / and
                     :op2 (c21-7 / realize-01
                                 :ARG0 (c21-9 / we)
                                 :ARG1 (c21-1 / fuck-01
                                              :ARG0 (c21-14 / doth
                                                            :mod (c21-10 / another))
                                              :ARG1 (c21-15 / surprise-01))
                                 :time (c21-5 / now))))

# ::snt tanx big daddy
# ::tokens ["tanx", "big", "daddy"]
# ::lemmas ["tanx", "big", "daddy"]
(c22-3 / person
       :name (c22-1 / name
                    :op1 "tanx")
       :ARG0-of (c22-2 / have-rel-role-91
                       :ARG2 (c22-4 / daddy
                                    :mod (c22-0 / big))))

# ::snt EX- CUSE me??? Remind me of what? I forget....Remind me??u will never get NUTHIN from me.
# ::tokens ["EX-", "CUSE", "me", "?", "?", "?", "Remind", "me", "of", "what", "?", "I", "forget", "....", "Remind", "me??u", "will", "never", "get", "NUTHIN", "from", "me", "."]
# ::lemmas ["ex-", "CUSE", "i", "?", "?", "?", "remind", "i", "of", "what", "?", "i", "forget", "....", "remind", "me??u", "will", "never", "get", "NUTHIN", "from", "i", "."]
(c23-3 / multi-sentence
       :snt1 (c23-7 / excuse-01
                    :ARG2 (c23-10 / i)
                    :ARG1-of (c23-0 / obvious-01))
       :snt2 (c23-5 / remind-01
                    :ARG0 (c23-2 / you)
                    :ARG1 (c23-11 / amr-unknown)
                    :ARG2 c23-10
                    :polarity (c23-12 / amr-unknown)
                    :mode imperative)
       :snt3 (c23-1 / forget-01
                    :ARG0 (c23-4 / i))
       :snt4 (c23-13 / remind-01
                     :ARG0 (c23-6 / you)
                     :ARG1 (c23-9 / truth
                                  :source c23-4
                                  :polarity -)
                     :polarity (c23-8 / amr-unknown)
                     :mode imperative))

# ::snt congrats! You and Jeffrey Dean...series regs!!! of my fave peeps!
# ::tokens ["congrats", "!", "You", "and", "Jeffrey", "Dean", "...", "series", "regs", "!", "!", "!", "of", "my", "fave", "peeps", "!"]
# ::lemmas ["congrat", "!", "you", "and", "Jeffrey", "Dean", "...", "series", "reg", "!", "!", "!", "of", "my", "fave", "peep", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-9 / congratulate-01
                    :ARG1 (c24-1 / you)
                    :mode expressive)
       :snt2 (c24-11 / and
                     :op1 (c24-12 / you)
                     :op2 (c24-8 / person
                                 :name (c24-3 / name
                                              :op1 "Jeffrey"
                                              :op2 "Dean"))
                     :op3 (c24-6 / regs
                                 :mod (c24-4 / series))
                     :ARG1-of (c24-10 / include-91
                                      :ARG2 (c24-5 / peep
                                                   :ARG1-of (c24-0 / favor-01
                                                                   :ARG0 (c24-7 / i))))))

# ::snt 's remem not spoil 'whom of Rick's Group was executed,' re the cliff-hanger from S-6. I'm guessing, big army dude.
# ::tokens ["'s", "remem", "not", "spoil", "'", "whom", "of", "Rick", "'s", "Group", "was", "executed", ",", "'", "re", "the", "cliff", "-", "hanger", "from", "S-6", ".", "I", "'m", "guessing", ",", "big", "army", "dude", "."]
# ::lemmas ["'s", "remem", "not", "spoil", "'", "whom", "of", "Rick", "'s", "Group", "be", "execute", ",", "'", "re", "the", "cliff", "-", "hanger", "from", "s-6", ".", "i", "be", "guess", ",", "big", "army", "dude", "."]
(c25-1 / multi-sentence
       :snt1 (c25-3 / spoil-01
                    :ARG0 (c25-9 / person)
                    :ARG1 (c25-7 / execute-01
                                 :ARG1 (c25-2 / person
                                              :ARG0-of (c25-8 / have-org-role-91
                                                              :ARG1 (c25-15 / group
                                                                            :poss (c25-14 / person
                                                                                          :name (c25-4 / name
                                                                                                       :op1 "Rick")))
                                                              :ARG2 (c25-10 / member))))
                    :topic (c25-12 / cliffhanger
                                   :source (c25-17 / military
                                                   :name (c25-11 / name
                                                                 :op1 "S-6")))
                    :polarity -)
       :snt2 (c25-13 / guess-01
                     :ARG0 (c25-16 / i)
                     :ARG1 (c25-5 / dude
                                  :mod (c25-6 / army)
                                  :mod (c25-0 / big))))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c26-0 / congratulate-01
       :mode expressive)

# ::snt Xander congrats. I'm a real big Walking Dead fan and Fear the Walking Dead fan
# ::tokens ["Xander", "congrats", ".", "I", "'m", "a", "real", "big", "Walking", "Dead", "fan", "and", "Fear", "the", "Walking", "Dead", "fan"]
# ::lemmas ["xander", "congrat", ".", "i", "be", "a", "real", "big", "walk", "Dead", "fan", "and", "fear", "the", "walk", "Dead", "fan"]
(c27-3 / multi-sentence
       :snt1 (c27-10 / congratulate-01
                     :ARG0 (c27-7 / person
                                  :name (c27-2 / name
                                               :op1 "Xander")))
       :snt2 (c27-12 / and
                     :op1 (c27-0 / fan
                                 :mod (c27-1 / big
                                             :ARG1-of (c27-4 / real-04))
                                 :domain (c27-11 / i)
                                 :topic (c27-5 / event
                                               :name (c27-6 / name
                                                            :op1 "Walking"
                                                            :op2 "Dead")))
                     :op2 (c27-8 / fan
                                 :mod (c27-9 / fear-01
                                             :ARG0 c27-11
                                             :ARG1 c27-5)
                                 :domain c27-11)))

# ::snt , congratulations!
# ::tokens [",", "congratulations", "!"]
# ::lemmas [",", "congratulation", "!"]
(c28-0 / congratulate-01
       :mode expressive)

# ::snt Eeeep!!! RT : Season promotes three actors to series regular
# ::tokens ["Eeeep", "!", "!", "!", "RT", ":", "Season", "promotes", "three", "actors", "to", "series", "regular"]
# ::lemmas ["eeeep", "!", "!", "!", "RT", ":", "Season", "promote", "three", "actor", "to", "series", "regular"]
(c29-1 / multi-sentence
       :snt1 (c29-5 / eep
                    :mode expressive)
       :snt2 (c29-6 / promote-01
                    :ARG0 (c29-3 / season)
                    :ARG1 (c29-2 / person
                                 :ARG0-of (c29-7 / act-01)
                                 :quant 3)
                    :ARG2 (c29-4 / regular-02
                                 :ARG1 (c29-0 / series))))

# ::snt Basically everyone is a series regular then...
# ::tokens ["Basically", "everyone", "is", "a", "series", "regular", "then", "..."]
# ::lemmas ["basically", "everyone", "be", "a", "series", "regular", "then", "..."]
(c30-2 / regular-03
       :ARG1 (c30-3 / everyone)
       :mod (c30-0 / basic)
       :mod (c30-4 / then)
       :mod (c30-1 / series))

# ::snt so happy to hear this!! Series just got a little better!
# ::tokens ["so", "happy", "to", "hear", "this", "!", "!", "Series", "just", "got", "a", "little", "better", "!"]
# ::lemmas ["so", "happy", "to", "hear", "this", "!", "!", "series", "just", "get", "a", "little", "well", "!"]
(c32-1 / multi-sentence
       :snt1 (c32-4 / happy-01
                    :ARG0 (c32-7 / hear-01
                                 :ARG0 (c32-9 / i)
                                 :ARG1 (c32-10 / this))
                    :degree (c32-2 / so))
       :snt2 (c32-11 / get-03
                     :ARG1 (c32-0 / Series)
                     :ARG2 (c32-3 / have-degree-91
                                  :ARG1 c32-0
                                  :ARG2 (c32-12 / good-02
                                                :ARG1 c32-0)
                                  :ARG3 (c32-5 / more
                                               :quant (c32-6 / little)))
                     :mod (c32-8 / just)))

# ::snt Cool! I've been diggin' Strand!
# ::tokens ["Cool", "!", "I", "'ve", "been", "diggin", "'", "Strand", "!"]
# ::lemmas ["cool", "!", "i", "'ve", "be", "diggin", "'", "Strand", "!"]
(c33-1 / multi-sentence
       :snt1 (c33-3 / cool-04)
       :snt2 (c33-5 / dig-01
                    :ARG0 (c33-4 / i)
                    :ARG1 (c33-0 / book
                                 :name (c33-2 / name
                                              :op1 "Strand"))))

# ::snt great!! I love Mexico!!! Beer is cheaper! Hahah have a fun and safe production.
# ::tokens ["great", "!", "!", "I", "love", "Mexico", "!", "!", "!", "Beer", "is", "cheaper", "!", "Hahah", "have", "a", "fun", "and", "safe", "production", "."]
# ::lemmas ["great", "!", "!", "i", "love", "Mexico", "!", "!", "!", "Beer", "be", "cheap", "!", "Hahah", "have", "a", "fun", "and", "safe", "production", "."]
(c34-3 / multi-sentence
       :snt1 (c34-14 / great
                     :mode expressive)
       :snt2 (c34-8 / love-01
                    :ARG0 (c34-13 / i)
                    :ARG1 (c34-11 / country
                                  :name (c34-4 / name
                                               :op1 "Mexico")))
       :snt3 (c34-15 / cheap-02
                     :ARG1 (c34-1 / beer)
                     :ARG2-of (c34-7 / have-degree-91
                                     :ARG1 c34-1
                                     :ARG3 (c34-9 / more)))
       :snt4 (c34-12 / have-03
                     :ARG0 (c34-2 / you)
                     :ARG1 (c34-10 / produce-01
                                   :ARG1-of (c34-0 / fun-01)
                                   :ARG1-of (c34-5 / safe-01))
                     :mod (c34-6 / haha
                                 :mode expressive)
                     :mode imperative))

# ::snt Tobias for st mate!
# ::tokens ["Tobias", "for", "st", "mate", "!"]
# ::lemmas ["Tobias", "for", "st", "mate", "!"]
(c35-3 / Tobias
       :beneficiary (c35-2 / person
                           :ARG0-of (c35-1 / have-rel-role-91
                                           :ARG2 (c35-0 / mate)))
       :mode expressive)

# ::snt NICE CHOICES, can't wait
# ::tokens ["NICE", "CHOICES", ",", "ca", "n't", "wait"]
# ::lemmas ["nice", "choice", ",", "can", "not", "wait"]
(c36-4 / and
       :op1 (c36-1 / choose-01
                   :mod (c36-0 / nurse))
       :op2 (c36-2 / wait-01
                   :ARG1 (c36-3 / i)
                   :polarity -))

# ::snt That's good, (Great characters)! I can't wait for season
# ::tokens ["That", "'s", "good", ",", "(", "Great", "characters", ")", "!", "I", "ca", "n't", "wait", "for", "season"]
# ::lemmas ["that", "be", "good", ",", "(", "great", "character", ")", "!", "i", "can", "not", "wait", "for", "season"]
(c37-0 / multi-sentence
       :snt1 (c37-7 / good-02
                    :ARG1 (c37-6 / that)
                    :ARG1-of (c37-2 / mean-01
                                    :ARG2 (c37-3 / character
                                                 :mod (c37-5 / great))))
       :snt2 (c37-4 / wait-01
                    :ARG1 (c37-8 / i)
                    :ARG2 (c37-1 / season)
                    :polarity -))

# ::snt ahh this makes me so happy! I can't wait for season
# ::tokens ["ahh", "this", "makes", "me", "so", "happy", "!", "I", "ca", "n't", "wait", "for", "season"]
# ::lemmas ["ahh", "this", "make", "i", "so", "happy", "!", "i", "can", "not", "wait", "for", "season"]
(c39-1 / multi-sentence
       :snt1 (c39-4 / make-02
                    :ARG0 (c39-8 / this)
                    :ARG1 (c39-5 / happy-01
                                 :ARG1 (c39-7 / i)
                                 :degree (c39-2 / so))
                    :mod (c39-3 / ah
                                :mode expressive))
       :snt2 (c39-6 / wait-01
                    :ARG1 c39-7
                    :ARG2 (c39-0 / season)
                    :polarity -))

# ::snt | I've worked with Austin Amelio. He's a great one. Glad to see him part of .
# ::tokens ["|", "I", "'ve", "worked", "with", "Austin", "Amelio", ".", "He", "'s", "a", "great", "one", ".", "Glad", "to", "see", "him", "part", "of", "."]
# ::lemmas ["|", "i", "'ve", "work", "with", "Austin", "Amelio", ".", "he", "be", "a", "great", "one", ".", "glad", "to", "see", "he", "part", "of", "."]
(c40-1 / multi-sentence
       :snt1 (c40-6 / work-01
                    :ARG0 (c40-8 / i)
                    :ARG3 (c40-5 / person
                                 :name (c40-0 / name
                                              :op1 "Austin"
                                              :op2 "Amelio")))
       :snt2 (c40-10 / great
                     :domain (c40-4 / he))
       :snt3 (c40-9 / glad-02
                    :ARG0 (c40-2 / see-01
                                 :ARG0 c40-8
                                 :ARG1 (c40-7 / he
                                              :part-of (c40-3 / part)))
                    :ARG1 c40-8))

# ::snt No Josh!?!? *sigh*
# ::tokens ["No", "Josh", "!", "?", "!", "?", "*", "sigh", "*"]
# ::lemmas ["no", "Josh", "!", "?", "!", "?", "*", "sigh", "*"]
(c42-2 / person
       :name (c42-1 / name
                    :op1 "Josh")
       :mod (c42-3 / sigh-02)
       :polarity (c42-0 / amr-unknown)
       :polarity -
       :mode expressive)

# ::snt wwwwwwww
# ::tokens ["wwwwwwww"]
# ::lemmas ["wwwwwwww"]
(c43-0 / aw
       :mode expressive)

# ::snt ....(T_T)
# ::tokens ["....", "(", "T_T", ")"]
# ::lemmas ["....", "(", "t_t", ")"]
(c44-1 / person
       :name (c44-0 / name
                    :op1 "T_T"))

# ::snt Make all people, all minorities equal. Body freedom is a right that has come.
# ::tokens ["Make", "all", "people", ",", "all", "minorities", "equal", ".", "Body", "freedom", "is", "a", "right", "that", "has", "come", "."]
# ::lemmas ["make", "all", "people", ",", "all", "minority", "equal", ".", "body", "freedom", "be", "a", "right", "that", "have", "come", "."]
(c45-2 / multi-sentence
       :snt1 (c45-5 / make-02
                    :ARG1 (c45-4 / equal-01
                                 :ARG1 (c45-10 / and
                                               :op1 (c45-6 / person
                                                           :mod (c45-9 / all))
                                               :op2 (c45-11 / minority
                                                            :mod (c45-8 / all)))))
       :snt2 (c45-3 / right-05
                    :ARG2 (c45-0 / free-04
                                 :ARG1 (c45-1 / body))
                    :ARG1-of (c45-7 / come-03)))

# ::snt : The Walking Dead: S4 Promotes three to regular status
# ::tokens [":", "The", "Walking", "Dead", ":", "S4", "Promotes", "three", "to", "regular", "status"]
# ::lemmas [":", "The", "Walking", "Dead", ":", "S4", "Promotes", "three", "to", "regular", "status"]
(c46-6 / promote-02
       :ARG0 (c46-1 / broadcast-program
                    :name (c46-2 / name
                                 :op1 "S4"))
       :ARG1 (c46-7 / thing
                    :quant 3)
       :ARG4 (c46-3 / status
                    :ARG1-of (c46-4 / regular-03))
       :subevent-of (c46-0 / show
                           :name (c46-5 / name
                                        :op1 "The"
                                        :op2 "Walking"
                                        :op3 "Dead")))

# ::snt : The Walking Dead: Season Promotes three actors to series regular status
# ::tokens [":", "The", "Walking", "Dead", ":", "Season", "Promotes", "three", "actors", "to", "series", "regular", "status"]
# ::lemmas [":", "The", "Walking", "Dead", ":", "Season", "Promotes", "three", "actor", "to", "series", "regular", "status"]
(c47-6 / promote-02
       :ARG0 (c47-3 / season)
       :ARG1 (c47-2 / person
                    :ARG0-of (c47-7 / act-01)
                    :quant 3)
       :ARG2 (c47-0 / status
                    :ARG1-of (c47-5 / regular-03)
                    :mod (c47-8 / series))
       :topic (c47-4 / show
                     :name (c47-1 / name
                                  :op1 "The"
                                  :op2 "Walking"
                                  :op3 "Dead")))

# ::snt yay! I've always called her Bella no matter what she's in bc that's what her character's name on supernatural was!
# ::tokens ["yay", "!", "I", "'ve", "always", "called", "her", "Bella", "no", "matter", "what", "she", "'s", "in", "bc", "that", "'s", "what", "her", "character", "'s", "name", "on", "supernatural", "was", "!"]
# ::lemmas ["yay", "!", "i", "'ve", "always", "call", "her", "Bella", "no", "matter", "what", "she", "be", "in", "bc", "that", "be", "what", "her", "character", "'s", "name", "on", "supernatural", "be", "!"]
(c48-2 / multi-sentence
       :snt1 (c48-1 / yay)
       :snt2 (c48-7 / call-01
                    :ARG0 (c48-10 / i)
                    :ARG1 (c48-4 / she)
                    :ARG2 (c48-3 / name
                                 :op1 "Bella")
                    :time (c48-11 / always)
                    :ARG1-of (c48-5 / regardless-91
                                    :ARG2 (c48-9 / thing
                                                 :location-of c48-4)))
       :ARG1-of (c48-12 / cause-01
                        :ARG0 (c48-6 / name
                                     :poss (c48-8 / character
                                                  :poss c48-4)
                                     :ARG1-of c48-12
                                     :ARG0 (c48-0 / supernatural))
                        :domain c48-3))
