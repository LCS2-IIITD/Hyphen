# ::snt your Tweet was quoted by
# ::tokens ["your", "Tweet", "was", "quoted", "by"]
# ::lemmas ["your", "Tweet", "be", "quote", "by"]
(c1-2 / quote-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-3 / thing
                  :ARG1-of (c1-0 / tweet-02
                                 :ARG0 c1-1)))

# ::snt Tom Hiddleston deserves better, but we will never know hope he just gets on with his acting. Soooo good.
# ::tokens ["Tom", "Hiddleston", "deserves", "better", ",", "but", "we", "will", "never", "know", "hope", "he", "just", "gets", "on", "with", "his", "acting", ".", "Soooo", "good", "."]
# ::lemmas ["Tom", "Hiddleston", "deserve", "well", ",", "but", "we", "will", "never", "know", "hope", "he", "just", "get", "on", "with", "his", "acting", ".", "Soooo", "good", "."]
(c2-1 / multi-sentence
      :snt1 (c2-9 / contrast-01
                  :ARG1 (c2-16 / deserve-01
                               :ARG0 (c2-6 / person
                                           :name (c2-0 / name
                                                       :op1 "Tom"
                                                       :op2 "Hiddleston"))
                               :ARG1 (c2-14 / thing
                                            :ARG1-of (c2-5 / have-degree-91
                                                           :ARG2 (c2-15 / good-02
                                                                        :ARG1 c2-14)
                                                           :ARG3 (c2-7 / more))))
                  :ARG2 (c2-8 / know-01
                              :ARG0 (c2-10 / we)
                              :ARG1 (c2-11 / hope-01
                                           :ARG0 c2-10
                                           :ARG1 (c2-13 / get-on-21
                                                        :ARG0 c2-6
                                                        :ARG1 (c2-3 / act-01
                                                                    :ARG0 c2-6)
                                                        :mod (c2-12 / just)))
                              :time (c2-4 / ever)
                              :polarity -))
      :snt2 (c2-17 / good-02
                   :degree (c2-2 / so)))

# ::snt . Now that a blow
# ::tokens [".", "Now", "that", "a", "blow"]
# ::lemmas [".", "now", "that", "a", "blow"]
(c3-0 / blow-14
      :mod (c3-2 / that)
      :time (c3-1 / now))

# ::snt HAHAHAHA HOLY SHIT L
# ::tokens ["HAHAHAHA", "HOLY", "SHIT", "L"]
# ::lemmas ["HAHAHAHA", "HOLY", "SHIT", "L"]
(c4-3 / say-01
      :ARG1 (c4-0 / shit
                  :ARG1-of (c4-6 / see-01
                                 :ARG1-of (c4-5 / possible-01))
                  :ARG1-of (c4-1 / mad-02))
      :ARG2 (c4-2 / person
                  :name (c4-4 / name
                              :op1 "L")))

# ::snt This is like getting a post it note in " Sex in the City" Do people really do that . Who breaks up with Tom Hiddleston .
# ::tokens ["This", "is", "like", "getting", "a", "post", "it", "note", "in", "\"", "Sex", "in", "the", "City", "\"", "Do", "people", "really", "do", "that", ".", "Who", "breaks", "up", "with", "Tom", "Hiddleston", "."]
# ::lemmas ["this", "be", "like", "get", "a", "post", "it", "note", "in", "\"", "sex", "in", "the", "city", "\"", "do", "people", "really", "do", "that", ".", "who", "break", "up", "with", "Tom", "Hiddleston", "."]
(c6-2 / multi-sentence
      :snt1 (c6-4 / resemble-01
                  :ARG1 (c6-11 / this)
                  :ARG2 (c6-12 / get-01
                               :ARG1 (c6-1 / note-01
                                           :ARG1 (c6-7 / post-01))
                               :location (c6-0 / book
                                               :name (c6-6 / name
                                                           :op1 "Sex"
                                                           :op2 "in"
                                                           :op3 "the"
                                                           :op4 "City"))))
      :snt2 (c6-13 / do-02
                   :ARG0 (c6-3 / person)
                   :ARG1 (c6-16 / that)
                   :polarity (c6-5 / amr-unknown)
                   :ARG1-of (c6-14 / real-04))
      :snt3 (c6-8 / break-up-08
                  :ARG1 (c6-15 / person
                               :name (c6-9 / name
                                           :op1 "Tom"
                                           :op2 "Hiddleston"))
                  :ARG3 (c6-10 / amr-unknown)))

# ::snt I doubt it...
# ::tokens ["I", "doubt", "it", "..."]
# ::lemmas ["i", "doubt", "it", "..."]
(c7-1 / doubt-01
      :ARG0 (c7-2 / i)
      :ARG1 (c7-0 / it))

# ::snt He should not be crushed. Taylor changes mens more than she does her under wears. So sad. She is just to young this. Mom
# ::tokens ["He", "should", "not", "be", "crushed", ".", "Taylor", "changes", "mens", "more", "than", "she", "does", "her", "under", "wears", ".", "So", "sad", ".", "She", "is", "just", "to", "young", "this", ".", "Mom"]
# ::lemmas ["he", "should", "not", "be", "crush", ".", "Taylor", "change", "men", "more", "than", "she", "do", "she", "under", "wear", ".", "so", "sad", ".", "she", "be", "just", "to", "young", "this", ".", "mom"]
(c8-11 / multi-sentence
       :snt1 (c8-17 / recommend-01
                    :ARG1 (c8-13 / crush-01
                                 :ARG1 (c8-6 / he))
                    :polarity -)
       :snt2 (c8-10 / change-01
                    :ARG0 (c8-18 / person
                                 :name (c8-16 / name
                                              :op1 "Taylor"))
                    :ARG1-of (c8-20 / have-quant-91
                                    :ARG3 (c8-7 / more)
                                    :ARG4 (c8-1 / change-01
                                                :ARG0 c8-18
                                                :ARG1 (c8-14 / under
                                                             :op1 (c8-19 / wear-01)))))
       :snt3 (c8-0 / sad-02
                   :degree (c8-3 / so))
       :snt4 (c8-4 / young
                   :degree c8-3)
       :domain (c8-2 / she)
       :mod (c8-8 / just)
       :time (c8-9 / this)
       :snt5 (c8-12 / person
                    :ARG0-of (c8-5 / have-rel-role-91
                                   :ARG2 (c8-15 / mom))))

# ::snt Asset No Longer Required For PDA Utilization, Please Proceed With Uncoupling Protocol
# ::tokens ["Asset", "No", "Longer", "Required", "For", "PDA", "Utilization", ",", "Please", "Proceed", "With", "Uncoupling", "Protocol"]
# ::lemmas ["asset", "no", "long", "require", "for", "PDA", "Utilization", ",", "please", "proceed", "with", "Uncoupling", "Protocol"]
(c9-7 / cause-01
      :ARG0 (c9-3 / require-01
                  :ARG1 (c9-9 / asset)
                  :purpose (c9-10 / Utilize-01
                                  :ARG1 (c9-5 / product
                                              :name (c9-1 / name
                                                          :op1 "PDA")))
                  :time (c9-4 / no-longer))
      :ARG1 (c9-2 / proceed-01
                  :ARG0 (c9-0 / you)
                  :ARG1 (c9-8 / protocol
                              :topic (c9-6 / ununintelligible
                                           :value "Unintelligible"))
                  :polite +
                  :mode imperative))

# ::snt I've gotten mostly embedded tweets with cry-face emojis.
# ::tokens ["I", "'ve", "gotten", "mostly", "embedded", "tweets", "with", "cry", "-", "face", "emojis", "."]
# ::lemmas ["i", "'ve", "get", "mostly", "embed", "tweet", "with", "cry", "-", "face", "emoji", "."]
(c10-7 / get-01
       :ARG0 (c10-5 / i)
       :ARG1 (c10-4 / thing
                    :ARG1-of (c10-6 / tweet-02
                                    :accompanier (c10-2 / emojis
                                                        :mod (c10-0 / face
                                                                    :mod (c10-3 / cry-01))))
                    :ARG1-of (c10-8 / embed-01)
                    :mod (c10-1 / most)))

# ::snt Retweeted this and quickly unretweeted it because I am afraid
# ::tokens ["Retweeted", "this", "and", "quickly", "unretweeted", "it", "because", "I", "am", "afraid"]
# ::lemmas ["retweete", "this", "and", "quickly", "unretweete", "it", "because", "i", "be", "afraid"]
(c11-1 / and
       :op1 (c11-3 / tweet-02
                   :ARG0 (c11-6 / i)
                   :ARG1 (c11-5 / this))
       :op2 (c11-4 / tweet-02
                   :ARG0 c11-6
                   :ARG1 c11-5
                   :ARG1-of (c11-7 / quick-02))
       :ARG1-of (c11-2 / cause-01
                       :ARG0 (c11-0 / fear-01
                                    :ARG0 c11-6)))

# ::snt My guess is she enjoys dating different people, like many among us do!
# ::tokens ["My", "guess", "is", "she", "enjoys", "dating", "different", "people", ",", "like", "many", "among", "us", "do", "!"]
# ::lemmas ["my", "guess", "be", "she", "enjoy", "date", "different", "people", ",", "like", "many", "among", "we", "do", "!"]
(c13-11 / guess-01
        :ARG0 (c13-10 / i)
        :ARG1 (c13-6 / enjoy-01
                     :ARG0 (c13-2 / she)
                     :ARG1 (c13-12 / date-02
                                   :ARG0 c13-2
                                   :ARG1 (c13-7 / person
                                                :ARG1-of (c13-9 / differ-02)))
                     :ARG1-of (c13-4 / resemble-01
                                     :ARG2 (c13-3 / enjoy-01
                                                  :ARG0 (c13-1 / person
                                                               :quant (c13-0 / many)
                                                               :ARG1-of (c13-5 / include-91
                                                                               :ARG2 (c13-8 / we)))
                                                  :ARG1 c13-12))))

# ::snt just wondering, why Taylor Swift can't keep a relationship?!
# ::tokens ["just", "wondering", ",", "why", "Taylor", "Swift", "ca", "n't", "keep", "a", "relationship", "?", "!"]
# ::lemmas ["just", "wonder", ",", "why", "Taylor", "Swift", "can", "not", "keep", "a", "relationship", "?", "!"]
(c14-5 / wonder-01
       :ARG0 (c14-8 / i)
       :ARG1 (c14-9 / thing
                    :ARG0-of (c14-6 / cause-01
                                    :ARG1 (c14-3 / possible-01
                                                 :ARG1 (c14-4 / keep-02
                                                              :ARG0 (c14-1 / person
                                                                           :name (c14-0 / name
                                                                                        :op1 "Taylor"
                                                                                        :op2 "Swift"))
                                                              :ARG1 (c14-2 / relation-03
                                                                           :ARG0 c14-1))
                                                 :polarity -)))
       :mod (c14-7 / just))

# ::snt . Hahahaha! I still wouldn't/couldn't say no...
# ::tokens [".", "Hahahaha", "!", "I", "still", "wouldn't", "/", "couldn't", "say", "no", "..."]
# ::lemmas [".", "Hahahaha", "!", "i", "still", "wouldn't", "/", "couldn't", "say", "no", "..."]
(c16-4 / haha
       :domain (c16-2 / slash
                      :op1 (c16-0 / say-01
                                  :ARG0 (c16-6 / i)
                                  :ARG1 (c16-1 / no)
                                  :mod (c16-7 / still)
                                  :polarity -)
                      :op2 (c16-5 / possible-01
                                  :ARG1 (c16-3 / say-01
                                               :ARG0 c16-6
                                               :ARG1 c16-1)
                                  :polarity -))
       :mode expressive)

# ::snt Ha ha ha! That was so funny
# ::tokens ["Ha", "ha", "ha", "!", "That", "was", "so", "funny"]
# ::lemmas ["ha", "ha", "ha", "!", "that", "be", "so", "funny"]
(c17-1 / funny-02
       :ARG1 (c17-2 / that)
       :degree (c17-0 / so))

# ::snt soz she's not joe jonas
# ::tokens ["soz", "she", "'s", "not", "joe", "jonas"]
# ::lemmas ["soz", "she", "be", "not", "joe", "jonas"]
(c18-4 / cause-01
       :ARG1 (c18-2 / have-mod-91
                    :ARG1 (c18-1 / she)
                    :ARG2 (c18-3 / person
                                 :name (c18-0 / name
                                              :op1 "Joe"
                                              :op2 "Jonas"))
                    :polarity -))

# ::snt Wonder what the new song is called
# ::tokens ["Wonder", "what", "the", "new", "song", "is", "called"]
# ::lemmas ["wonder", "what", "the", "new", "song", "be", "call"]
(c20-3 / wonder-01
       :ARG0 (c20-0 / you)
       :ARG1 (c20-5 / thing
                    :ARG2-of (c20-4 / call-01
                                    :ARG1 (c20-2 / song
                                                 :ARG1-of (c20-1 / new-01)))))

# ::snt its was a short stunt
# ::tokens ["its", "was", "a", "short", "stunt"]
# ::lemmas ["its", "be", "a", "short", "stunt"]
(c21-3 / thing
       :ARG1-of (c21-0 / stunt-02)
       :ARG1-of (c21-1 / short-07)
       :domain (c21-2 / it))

# ::snt She did low key, I bet. Lol!
# ::tokens ["She", "did", "low", "key", ",", "I", "bet", ".", "Lol", "!"]
# ::lemmas ["she", "do", "low", "key", ",", "i", "bet", ".", "Lol", "!"]
(c22-1 / multi-sentence
       :snt1 (c22-0 / bet-01
                    :ARG0 (c22-5 / i)
                    :ARG2 (c22-6 / do-02
                                 :ARG0 (c22-2 / she)
                                 :ARG1 (c22-3 / low-key)))
       :snt2 (c22-7 / laugh-01
                    :ARG0 c22-5
                    :mode expressive)
       :manner (c22-4 / loud))

# ::snt Ten years does make a difference in the maturity of a romantic relationship, just saying.
# ::tokens ["Ten", "years", "does", "make", "a", "difference", "in", "the", "maturity", "of", "a", "romantic", "relationship", ",", "just", "saying", "."]
# ::lemmas ["Ten", "years", "do", "make", "a", "difference", "in", "the", "maturity", "of", "a", "romantic", "relationship", ",", "just", "say", "."]
(c24-2 / say-01
       :ARG0 (c24-6 / i)
       :ARG1 (c24-1 / make-01
                    :ARG0 (c24-7 / temporal-quantity
                                 :unit (c24-0 / year)
                                 :quant 10)
                    :ARG1 (c24-8 / differ-02
                                 :ARG1 (c24-4 / mature-02
                                              :ARG1 (c24-3 / relation-03
                                                           :ARG1 (c24-9 / romantic-03)))))
       :mod (c24-5 / just))

# ::snt haha I can't wait for Taylor's next album and when she slays ya'll gonna coming running back. Queen will bury Ya'll
# ::tokens ["haha", "I", "ca", "n't", "wait", "for", "Taylor", "'s", "next", "album", "and", "when", "she", "slays", "ya'll", "gon", "na", "coming", "running", "back", ".", "Queen", "will", "bury", "Ya'll"]
# ::lemmas ["haha", "i", "can", "not", "wait", "for", "Taylor", "'s", "next", "album", "and", "when", "she", "slay", "ya'll", "going", "to", "come", "run", "back", ".", "queen", "will", "bury", "Ya'll"]
(c25-2 / multi-sentence
       :snt1 (c25-14 / and
                     :op1 (c25-8 / possible-01
                                 :ARG1 (c25-11 / wait-01
                                               :ARG1 (c25-13 / i)
                                               :ARG2 (c25-15 / album
                                                             :mod (c25-3 / next)
                                                             :poss (c25-4 / person
                                                                          :name (c25-7 / name
                                                                                       :op1 "Taylor"))))
                                 :mod (c25-9 / haha
                                             :mode expressive)
                                 :polarity -)
                     :op2 (c25-12 / come-01
                                  :ARG1 (c25-1 / you)
                                  :ARG4 (c25-6 / run-02
                                               :ARG0 c25-1
                                               :direction (c25-0 / back))
                                  :time (c25-5 / slap-01
                                               :ARG0 c25-4)))
       :snt2 (c25-10 / bury-01
                     :ARG0 (c25-16 / queen)
                     :ARG1 (c25-17 / you)))

# ::snt In fairness to Taylor, she might have knocked out a demo by now..
# ::tokens ["In", "fairness", "to", "Taylor", ",", "she", "might", "have", "knocked", "out", "a", "demo", "by", "now", ".."]
# ::lemmas ["in", "fairness", "to", "Taylor", ",", "she", "might", "have", "knock", "out", "a", "demo", "by", "now", ".."]
(c26-0 / fairness
       :beneficiary (c26-5 / person
                           :name (c26-2 / name
                                        :op1 "Taylor"))
       :domain (c26-3 / possible-01
                      :ARG1 (c26-6 / knock-out-03
                                   :ARG0 c26-5
                                   :ARG1 (c26-7 / demo-01)
                                   :time (c26-1 / by
                                                :op1 (c26-4 / now)))))

# ::snt They don't want it back, but they request that he destroy it in a timely manner.
# ::tokens ["They", "do", "n't", "want", "it", "back", ",", "but", "they", "request", "that", "he", "destroy", "it", "in", "a", "timely", "manner", "."]
# ::lemmas ["they", "do", "not", "want", "it", "back", ",", "but", "they", "request", "that", "he", "destroy", "it", "in", "a", "timely", "manner", "."]
(c27-3 / contrast-01
       :ARG1 (c27-4 / want-01
                    :ARG0 (c27-6 / they)
                    :ARG1 (c27-0 / back
                                 :domain (c27-5 / it))
                    :polarity -)
       :ARG2 (c27-1 / request-01
                    :ARG0 c27-6
                    :ARG1 (c27-7 / destroy-01
                                 :ARG0 (c27-2 / he)
                                 :ARG1 c27-5
                                 :ARG1-of (c27-8 / timely-03))))

# ::snt Is her song about him out yet?
# ::tokens ["Is", "her", "song", "about", "him", "out", "yet", "?"]
# ::lemmas ["be", "her", "song", "about", "he", "out", "yet", "?"]
(c28-0 / out-01
       :ARG1 (c28-3 / song
                    :topic (c28-4 / he)
                    :poss (c28-1 / she))
       :polarity (c28-5 / amr-unknown)
       :time (c28-2 / yet))

# ::snt the contract expired and they didn't pick up his option
# ::tokens ["the", "contract", "expired", "and", "they", "did", "n't", "pick", "up", "his", "option"]
# ::lemmas ["the", "contract", "expire", "and", "they", "do", "not", "pick", "up", "his", "option"]
(c29-1 / and
       :op1 (c29-2 / expire-01
                   :ARG1 (c29-5 / contract))
       :op2 (c29-4 / pick-up-04
                   :ARG0 (c29-6 / they)
                   :ARG1 (c29-0 / option
                                :poss (c29-3 / he))
                   :polarity -))

# ::snt They were too close in age, anyway. It's like she was dating her own twin brother.
# ::tokens ["They", "were", "too", "close", "in", "age", ",", "anyway", ".", "It", "'s", "like", "she", "was", "dating", "her", "own", "twin", "brother", "."]
# ::lemmas ["they", "be", "too", "close", "in", "age", ",", "anyway", ".", "it", "be", "like", "she", "be", "date", "her", "own", "twin", "brother", "."]
(c30-1 / multi-sentence
       :snt1 (c30-4 / have-degree-91
                    :ARG1 (c30-8 / they)
                    :ARG2 (c30-6 / close-13
                                 :ARG1 c30-8
                                 :ARG2 (c30-10 / age))
                    :ARG3 (c30-13 / too)
                    :mod (c30-9 / anyway))
       :snt2 (c30-3 / resemble-01
                    :ARG1 (c30-12 / date-02
                                  :ARG0 (c30-2 / she)
                                  :ARG1 (c30-5 / person
                                               :ARG0-of (c30-7 / have-rel-role-91
                                                               :ARG1 c30-2
                                                               :ARG2 (c30-0 / brother
                                                                            :mod (c30-11 / twin)))))))

# ::snt There won't be nothing negative. Even nothing at all.
# ::tokens ["There", "wo", "n't", "be", "nothing", "negative", ".", "Even", "nothing", "at", "all", "."]
# ::lemmas ["there", "will", "not", "be", "nothing", "negative", ".", "even", "nothing", "at", "all", "."]
(c31-1 / multi-sentence
       :snt1 (c31-0 / negative-03
                    :ARG0 (c31-3 / nothing)
                    :polarity -)
       :snt2 (c31-4 / nothing
                    :mod (c31-2 / even)
                    :degree (c31-5 / at-all)))
