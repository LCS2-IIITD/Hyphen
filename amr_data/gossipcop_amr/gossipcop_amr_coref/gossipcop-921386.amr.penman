# ::snt Thank You Kimmmm for sharing the pretty pic of Chi, she is toooo cute. xoxo
# ::tokens ["Thank", "You", "Kimmmm", "for", "sharing", "the", "pretty", "pic", "of", "Chi", ",", "she", "is", "toooo", "cute", ".", "xoxo"]
# ::lemmas ["thank", "you", "Kimmmm", "for", "share", "the", "pretty", "pic", "of", "Chi", ",", "she", "be", "toooo", "cute", ".", "xoxo"]
(c1-10 / thank-01
       :ARG0 (c1-9 / i)
       :ARG1 (c1-5 / person
                   :name (c1-0 / name
                               :op1 "Kimmmm"))
       :ARG2 (c1-2 / share-01
                   :ARG0 c1-5
                   :ARG1 (c1-1 / pic
                               :mod (c1-12 / pretty)
                               :topic (c1-7 / person
                                            :name (c1-4 / name
                                                        :op1 "Chi"))))
       :ARG1-of (c1-8 / cause-01
                      :ARG0 (c1-13 / cute
                                   :domain c1-7
                                   :ARG2-of (c1-6 / have-degree-91
                                                  :ARG1 c1-7
                                                  :ARG3 (c1-11 / too))))
       :mod (c1-3 / emoticon
                  :value "xoxo"))

# ::snt What a pretty little baby! Congrats to K&amp;K on three beautiful, healthy children.
# ::tokens ["What", "a", "pretty", "little", "baby", "!", "Congrats", "to", "K&amp;K", "on", "three", "beautiful", ",", "healthy", "children", "."]
# ::lemmas ["what", "a", "pretty", "little", "baby", "!", "congrat", "to", "k&amp;k", "on", "three", "beautiful", ",", "healthy", "child", "."]
(c2-1 / multi-sentence
      :snt1 (c2-0 / baby
                  :mod (c2-6 / little
                             :degree (c2-5 / pretty)))
      :snt2 (c2-8 / congratulate-01
                  :ARG1 (c2-9 / and
                              :op1 (c2-2 / person
                                         :name (c2-3 / name
                                                     :op1 "K"))
                              :op2 (c2-10 / person
                                          :name c2-3
                                          :op1 "amp;K")))
      :ARG2 (c2-11 / child
                   :ARG1-of (c2-4 / beautiful-02)
                   :mod (c2-7 / healthy)
                   :quant 3))

# ::snt Miss Chicago is a really pretty little lady...
# ::tokens ["Miss", "Chicago", "is", "a", "really", "pretty", "little", "lady", "..."]
# ::lemmas ["Miss", "Chicago", "be", "a", "really", "pretty", "little", "lady", "..."]
(c3-4 / lady
      :domain (c3-3 / person
                    :name (c3-0 / name
                                :op1 "Miss"
                                :op2 "Chicago"))
      :mod (c3-5 / little)
      :degree (c3-1 / pretty
                    :degree (c3-2 / really)))

# ::snt Streaming &amp; Download Movie Seks Viral ArtisLINK
# ::tokens ["Streaming", "&", "amp", ";", "Download", "Movie", "Seks", "Viral", "ArtisLINK"]
# ::lemmas ["Streaming", "&", "amp", ";", "Download", "Movie", "Seks", "Viral", "artislink"]
(c4-3 / and
      :op1 (c4-2 / stream-01
                 :ARG1 (c4-5 / thing
                             :name (c4-0 / name
                                         :op1 "&amp")))
      :op2 (c4-1 / market-sector
                 :name (c4-4 / name
                             :op1 "Download"
                             :op2 "Movie"
                             :op3 "Seks"
                             :op4 "Viral"
                             :op5 "ArtisLINK")))

# ::snt :Wow world's cutest baby.
# ::tokens [":", "Wow", "world", "'s", "cutest", "baby", "."]
# ::lemmas [":", "wow", "world", "'s", "cut", "baby", "."]
(c5-0 / baby
      :ARG1-of (c5-2 / have-degree-91
                     :ARG2 (c5-4 / cute)
                     :ARG3 (c5-1 / most)
                     :ARG5 (c5-5 / world))
      :mod (c5-3 / wow
                 :mode expressive)
      :mode expressive)

# ::snt Shes adorable
# ::tokens ["She", "s", "adorable"]
# ::lemmas ["she", "s", "adorable"]
(c6-0 / cute
      :domain (c6-1 / he))

# ::snt She's so adorable
# ::tokens ["She", "'s", "so", "adorable"]
# ::lemmas ["she", "be", "so", "adorable"]
(c7-0 / cute
      :degree (c7-2 / so)
      :domain (c7-1 / she))

# ::snt Looks like Ray J.
# ::tokens ["Looks", "like", "Ray", "J."]
# ::lemmas ["look", "like", "Ray", "J."]
(c8-2 / look-02
      :ARG1 (c8-0 / person
                  :name (c8-1 / name
                              :op1 "Ray"
                              :op2 "J")))

# ::snt She is beautifulAnd she looks more like Kim than saint and North
# ::tokens ["She", "is", "beautifulAnd", "she", "looks", "more", "like", "Kim", "than", "saint", "and", "North"]
# ::lemmas ["she", "be", "beautifuland", "she", "look", "more", "like", "Kim", "than", "saint", "and", "North"]
(c9-11 / and
       :op1 (c9-1 / beautiful-02
                  :ARG1 (c9-4 / she))
       :op2 (c9-7 / look-02
                  :ARG0 c9-4
                  :ARG1 (c9-10 / and
                               :op1 (c9-8 / person
                                          :name (c9-2 / name
                                                      :op1 "Kim"))
                               :op2 (c9-3 / person
                                          :name (c9-6 / name
                                                      :op1 "North")))
                  :ARG2-of (c9-9 / have-degree-91
                                 :ARG1 c9-4
                                 :ARG3 (c9-5 / more)
                                 :ARG4 (c9-0 / saint))))

# ::snt Chicago is her spinning image! ADORABLE
# ::tokens ["Chicago", "is", "her", "spinning", "image", "!", "ADORABLE"]
# ::lemmas ["Chicago", "be", "her", "spin", "image", "!", "adorable"]
(c10-2 / image
       :ARG1-of (c10-3 / spin-03)
       :poss (c10-0 / city
                    :name (c10-1 / name
                                 :op1 "Chicago")
                    :domain-of c10-2)
       :mode expressive)

# ::snt Thina singenaphi?
# ::tokens ["Thina", "singenaphi", "?"]
# ::lemmas ["Thina", "singenaphi", "?"]
(c11-1 / country
       :name (c11-2 / name
                    :op1 "Thina")
       :polarity (c11-3 / amr-unknown)
       :ARG1-of (c11-0 / sing-01))

# ::snt Kim finally realized she has another child at home.
# ::tokens ["Kim", "finally", "realized", "she", "has", "another", "child", "at", "home", "."]
# ::lemmas ["Kim", "finally", "realize", "she", "have", "another", "child", "at", "home", "."]
(c12-3 / realize-01
       :ARG0 (c12-6 / person
                    :name (c12-1 / name
                                 :op1 "Kim"))
       :ARG1 (c12-5 / have-03
                    :ARG0 c12-6
                    :ARG1 (c12-2 / person
                                 :ARG0-of (c12-8 / have-rel-role-91
                                                 :ARG1 c12-6
                                                 :ARG2 (c12-7 / child))
                                 :mod (c12-9 / another))
                    :location (c12-4 / home))
       :time (c12-0 / final))

# ::snt Got a another cute pie right there
# ::tokens ["Got", "a", "another", "cute", "pie", "right", "there"]
# ::lemmas ["get", "a", "another", "cute", "pie", "right", "there"]
(c13-6 / get-01
       :ARG0 (c13-4 / i)
       :ARG1 (c13-1 / pie
                    :mod (c13-2 / cute)
                    :mod (c13-5 / another))
       :location (c13-3 / there
                        :mod (c13-0 / right)))

# ::snt She really is a beautiful baby.
# ::tokens ["She", "really", "is", "a", "beautiful", "baby", "."]
# ::lemmas ["she", "really", "be", "a", "beautiful", "baby", "."]
(c14-1 / baby
       :ARG1-of (c14-2 / beautiful-02)
       :domain (c14-3 / she)
       :ARG1-of (c14-0 / real-04))

# ::snt Ooooh bubububu mumumumu
# ::tokens ["Ooooh", "bubububu", "mumumumu"]
# ::lemmas ["Ooooh", "bubububu", "mumumumu"]
(c15-0 / ooooh
       :mod (c15-2 / person
                   :name (c15-1 / name
                                :op1 "Bububu"))
       :mode expressive)

# ::snt K
# ::tokens ["K"]
# ::lemmas ["k"]
(c16-1 / person
       :name (c16-0 / name
                    :op1 "K"))
