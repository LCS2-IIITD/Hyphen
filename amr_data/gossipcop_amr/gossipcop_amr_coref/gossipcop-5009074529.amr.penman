# ::snt Just saw Janet in concert and wondered about her mom and dad. Love and light to ms Katherine
# ::tokens ["Just", "saw", "Janet", "in", "concert", "and", "wondered", "about", "her", "mom", "and", "dad", ".", "Love", "and", "light", "to", "ms", "Katherine"]
# ::lemmas ["just", "see", "Janet", "in", "concert", "and", "wonder", "about", "her", "mom", "and", "dad", ".", "love", "and", "light", "to", "ms", "Katherine"]
(c1-11 / multi-sentence
       :snt1 (c1-9 / and
                   :op1 (c1-0 / see-01
                              :ARG0 (c1-19 / i)
                              :ARG1 (c1-16 / person
                                           :name (c1-15 / name
                                                        :op1 "Janet"))
                              :time (c1-14 / concert)
                              :mod (c1-7 / just))
                   :op2 (c1-17 / wonder-01
                               :ARG0 c1-19
                               :ARG1 (c1-8 / and
                                           :op1 (c1-12 / person
                                                       :ARG0-of (c1-4 / have-rel-role-91
                                                                      :ARG1 c1-16
                                                                      :ARG2 (c1-5 / mom)))
                                           :op2 (c1-3 / person
                                                      :ARG0-of (c1-18 / have-rel-role-91
                                                                      :ARG1 c1-16
                                                                      :ARG2 (c1-20 / dad))))))
       :snt2 (c1-6 / and
                   :op1 (c1-1 / love-01)
                   :op2 (c1-10 / light-06)
                   :beneficiary (c1-2 / person
                                      :name (c1-13 / name
                                                   :op1 "Ms"
                                                   :op2 "Katherine"))))

# ::snt Oh No!Poor Blanket.
# ::tokens ["Oh", "No!Poor", "Blanket", "."]
# ::lemmas ["oh", "No!Poor", "Blanket", "."]
(c2-1 / person
      :name (c2-0 / name
                  :op1 "Blanket")
      :mod (c2-2 / poor)
      :mod (c2-3 / oh
                 :mode expressive)
      :polarity -)

# ::snt Poor blanket always being hung out to dry
# ::tokens ["Poor", "blanket", "always", "being", "hung", "out", "to", "dry"]
# ::lemmas ["poor", "blanket", "always", "be", "hang", "out", "to", "dry"]
(c3-1 / hang-01
      :ARG1 (c3-0 / blanket
                  :mod (c3-2 / poor))
      :purpose (c3-4 / dry-up-01
                     :ARG1 c3-0)
      :time (c3-3 / always))

# ::snt No, his real name is Prince Michael Jackson ll ,hes known as Bigi by his family &amp; Friends..
# ::tokens ["No", ",", "his", "real", "name", "is", "Prince", "Michael", "Jackson", "ll", ",", "he", "s", "known", "as", "Bigi", "by", "his", "family", "&", "amp", ";", "Friends", ".."]
# ::lemmas ["no", ",", "his", "real", "name", "be", "Prince", "Michael", "Jackson", "ll", ",", "he", "s", "know", "as", "Bigi", "by", "his", "family", "&", "amp", ";", "Friends", ".."]
(c5-2 / multi-sentence
      :snt1 (c5-1 / no)
      :snt2 (c5-5 / name-01
                  :ARG1 (c5-7 / he)
                  :ARG2 (c5-6 / prince
                              :name (c5-8 / name
                                          :op1 "Michael"
                                          :op2 "Jackson"))
                  :ARG1-of (c5-4 / real-04))
      :snt3 (c5-9 / know-02
                  :ARG0 (c5-14 / and
                               :op1 (c5-0 / family
                                          :ARG1-of (c5-12 / have-org-role-91
                                                          :ARG0 c5-7
                                                          :ARG2 (c5-10 / member)))
                               :op2 (c5-3 / person
                                          :name (c5-11 / name
                                                       :op1 "Friends")))
                  :ARG1 c5-7
                  :ARG2 (c5-13 / name
                               :op1 "Bigi")))

# ::snt What a name
# ::tokens ["What", "a", "name"]
# ::lemmas ["what", "a", "name"]
(c6-0 / name
      :degree (c6-1 / so))

# ::snt Amidst a MICHAEL JACKSON BIOLOGICAL SON campaign??? Still ignoring me. wow.
# ::tokens ["Amidst", "a", "MICHAEL", "JACKSON", "BIOLOGICAL", "SON", "campaign", "?", "?", "?", "Still", "ignoring", "me", ".", "wow", "."]
# ::lemmas ["amidst", "a", "MICHAEL", "JACKSON", "BIOLOGICAL", "son", "campaign", "?", "?", "?", "still", "ignore", "i", ".", "wow", "."]
(c7-1 / multi-sentence
      :snt1 (c7-8 / ignore-01
                  :ARG1 (c7-4 / i)
                  :mod (c7-3 / still)
                  :polarity (c7-9 / amr-unknown)
                  :subevent-of (c7-6 / campaign-01
                                     :ARG0 (c7-5 / person
                                                 :name (c7-2 / name
                                                             :op1 "Michael"
                                                             :op2 "Jackson"))
                                     :mod (c7-0 / biologic)))
      :snt2 (c7-7 / wow
                  :mode expressive))

# ::snt jehovahs always do weird things. bet she has enough energy to go door to door
# ::tokens ["jehovahs", "always", "do", "weird", "things", ".", "bet", "she", "has", "enough", "energy", "to", "go", "door", "to", "door"]
# ::lemmas ["jehovahs", "always", "do", "weird", "thing", ".", "bet", "she", "have", "enough", "energy", "to", "go", "door", "to", "door"]
(c8-2 / multi-sentence
      :snt1 (c8-14 / do-02
                   :ARG0 (c8-11 / jehova)
                   :ARG1 (c8-12 / thing
                                :mod (c8-8 / weird))
                   :time (c8-5 / always))
      :snt2 (c8-0 / bet-01
                  :ARG0 (c8-1 / you)
                  :ARG2 (c8-7 / have-03
                              :ARG0 (c8-3 / she)
                              :ARG1 (c8-6 / energy
                                          :ARG1-of (c8-10 / have-quant-91
                                                          :ARG3 (c8-4 / enough)
                                                          :ARG6 (c8-13 / go-02
                                                                       :ARG0 c8-3
                                                                       :ARG4 (c8-9 / door-to-door)))))
                  :mode imperative))

# ::snt Look at his nose. He's definitely a Jackson.
# ::tokens ["Look", "at", "his", "nose", ".", "He", "'s", "definitely", "a", "Jackson", "."]
# ::lemmas ["look", "at", "his", "nose", ".", "he", "be", "definitely", "a", "Jackson", "."]
(c9-2 / multi-sentence
      :snt1 (c9-4 / look-01
                  :ARG0 (c9-0 / you)
                  :ARG1 (c9-1 / nose
                              :part-of (c9-3 / he))
                  :mode imperative)
      :snt2 (c9-5 / person
                  :name (c9-6 / name
                              :op1 "Jackson")
                  :domain (c9-7 / he)
                  :mod (c9-8 / definite)))

# ::snt Has he been living w Paris or Prince..?
# ::tokens ["Has", "he", "been", "living", "w", "Paris", "or", "Prince", "..", "?"]
# ::lemmas ["have", "he", "be", "live", "w", "Paris", "or", "Prince", "..", "?"]
(c10-3 / live-01
       :ARG0 (c10-2 / he)
       :polarity (c10-7 / amr-unknown)
       :location (c10-0 / or
                        :op1 (c10-6 / city
                                    :name (c10-1 / name
                                                 :op1 "Paris"))
                        :op2 (c10-4 / person
                                    :name (c10-5 / name
                                                 :op1 "Prince"))))

# ::snt Who wants to chase after a year old at years old? But I sure as HELLLLLLL would not let those lay-about Jacksons hold that purse
# ::tokens ["Who", "wants", "to", "chase", "after", "a", "year", "old", "at", "years", "old", "?", "But", "I", "sure", "as", "HELLLLLLL", "would", "not", "let", "those", "lay", "-", "about", "Jacksons", "hold", "that", "purse"]
# ::lemmas ["who", "want", "to", "chase", "after", "a", "year", "old", "at", "years", "old", "?", "but", "i", "sure", "as", "HELLLLLLL", "would", "not", "let", "those", "lay", "-", "about", "Jacksons", "hold", "that", "purse"]
(c11-12 / multi-sentence
        :snt1 (c11-17 / want-01
                      :ARG0 (c11-8 / amr-unknown)
                      :ARG1 (c11-14 / chase-01
                                    :ARG0 c11-8
                                    :ARG1 (c11-16 / person
                                                  :age (c11-7 / temporal-quantity
                                                              :unit (c11-2 / year)
                                                              :quant 1))
                                    :time (c11-6 / age-01
                                                 :ARG1 c11-16
                                                 :ARG2 (c11-15 / temporal-quantity
                                                               :unit (c11-9 / year)
                                                               :quant 1))))
        :snt2 (c11-11 / contrast-01
                      :ARG2 (c11-1 / let-01
                                   :ARG0 (c11-18 / i)
                                   :ARG1 (c11-3 / hold-01
                                                :ARG0 (c11-5 / jackass
                                                             :ARG0-of (c11-10 / lay-about-00)
                                                             :mod (c11-19 / that))
                                                :ARG1 (c11-13 / purse
                                                              :mod c11-19))
                                   :polarity -)
                      :ARG1-of (c11-0 / sure-02
                                      :degree (c11-4 / as-hell))))

# ::snt How do you resign from being a legal guardian? ??
# ::tokens ["How", "do", "you", "resign", "from", "being", "a", "legal", "guardian", "?", "?", "?"]
# ::lemmas ["how", "do", "you", "resign", "from", "be", "a", "legal", "guardian", "?", "?", "?"]
(c12-1 / resign-01
       :ARG0 (c12-0 / you)
       :ARG1 (c12-2 / have-org-role-91
                    :ARG0 c12-0
                    :ARG3 (c12-5 / guardian
                                 :ARG1-of (c12-3 / legal-02)))
       :ARG2 (c12-4 / amr-unknown))

# ::snt She's letting go of her security blanket
# ::tokens ["She", "'s", "letting", "go", "of", "her", "security", "blanket"]
# ::lemmas ["she", "be", "let", "go", "of", "her", "security", "blanket"]
(c13-3 / let-01
       :ARG0 (c13-2 / she)
       :ARG1 (c13-4 / go-01
                    :ARG1 (c13-1 / blanket
                                 :ARG2-of (c13-0 / secure-02)
                                 :poss c13-2)))

# ::snt What wow
# ::tokens ["What", "wow"]
# ::lemmas ["what", "wow"]
(c14-0 / wow
       :mode expressive)

# ::snt ??
# ::tokens ["?", "?"]
# ::lemmas ["?", "?"]
(c15-0 / amr-unknown)

# ::snt Interesting
# ::tokens ["Interesting"]
# ::lemmas ["interesting"]
(c16-0 / interest-01)

# ::snt Why would a blanket need a guardian just put the blanket in the closet..
# ::tokens ["Why", "would", "a", "blanket", "need", "a", "guardian", "just", "put", "the", "blanket", "in", "the", "closet", ".."]
# ::lemmas ["why", "would", "a", "blanket", "need", "a", "guardian", "just", "put", "the", "blanket", "in", "the", "closet", ".."]
(c17-1 / need-01
       :ARG0 (c17-0 / blanket)
       :ARG1 (c17-3 / person
                    :ARG0-of (c17-7 / guard-01))
       :ARG1-of (c17-4 / cause-01
                       :ARG0 (c17-6 / amr-unknown))
       :ARG1-of (c17-2 / put-01
                       :ARG0 c17-3
                       :ARG2 (c17-8 / closet)
                       :mod (c17-5 / just)))

# ::snt Blanket, go change your name.
# ::tokens ["Blanket", ",", "go", "change", "your", "name", "."]
# ::lemmas ["Blanket", ",", "go", "change", "your", "name", "."]
(c18-1 / say-01
       :ARG0 (c18-4 / i)
       :ARG1 (c18-5 / go-05
                    :ARG0 (c18-2 / person
                                 :name (c18-0 / name
                                              :op1 "Blanket"))
                    :ARG1 (c18-3 / change-01
                                 :ARG0 c18-2
                                 :ARG1 c18-0
                                 :poss c18-2)
                    :mode imperative)
       :ARG2 c18-2)

# ::snt Some of you need to learn to read! TJ is his guardian. Haters are such assholes.
# ::tokens ["Some", "of", "you", "need", "to", "learn", "to", "read", "!", "TJ", "is", "his", "guardian", ".", "Haters", "are", "such", "assholes", "."]
# ::lemmas ["some", "of", "you", "need", "to", "learn", "to", "read", "!", "tj", "be", "his", "guardian", ".", "hater", "be", "such", "asshole", "."]
(c19-3 / multi-sentence
       :snt1 (c19-2 / need-01
                    :ARG0 (c19-9 / person
                                 :ARG1-of (c19-14 / include-91
                                                  :ARG2 (c19-1 / you)
                                                  :ARG3 (c19-4 / some)))
                    :ARG1 (c19-10 / learn-01
                                  :ARG0 c19-9
                                  :ARG1 (c19-6 / read-01
                                               :ARG0 c19-9)))
       :snt2 (c19-5 / person
                    :ARG0-of (c19-16 / guard-01
                                     :ARG1 (c19-15 / person
                                                   :name (c19-8 / name
                                                                :op1 "TJ")))
                    :domain (c19-11 / he))
       :snt3 (c19-7 / asshole
                    :mod (c19-0 / such)
                    :domain (c19-12 / person
                                    :ARG0-of (c19-13 / hate-01))))

# ::snt I hear she is moving on to bed spreads now
# ::tokens ["I", "hear", "she", "is", "moving", "on", "to", "bed", "spreads", "now"]
# ::lemmas ["i", "hear", "she", "be", "move", "on", "to", "bed", "spread", "now"]
(c20-5 / hear-01
       :ARG0 (c20-6 / i)
       :ARG1 (c20-4 / spread-02
                    :ARG1 (c20-2 / move-01
                                 :ARG0 (c20-0 / she)
                                 :ARG2 (c20-1 / bed)
                                 :time (c20-3 / now))))

# ::snt Maybe he's ready to become an emancipated minor &amp; handle his own life. It's not like anybody outside of the family knows Blanket's mind
# ::tokens ["Maybe", "he", "'s", "ready", "to", "become", "an", "emancipated", "minor", "&", "amp", ";", "handle", "his", "own", "life", ".", "It", "'s", "not", "like", "anybody", "outside", "of", "the", "family", "knows", "Blanket", "'s", "mind"]
# ::lemmas ["maybe", "he", "be", "ready", "to", "become", "an", "emancipated", "minor", "&", "amp", ";", "handle", "his", "own", "life", ".", "it", "be", "not", "like", "anybody", "outside", "of", "the", "family", "know", "Blanket", "'s", "mind"]
(c21-11 / multi-sentence
        :snt1 (c21-18 / possible-01
                      :ARG1 (c21-16 / ready-02
                                    :ARG1 (c21-12 / person
                                                  :name (c21-15 / name
                                                                :op1 "Blanket"))
                                    :ARG2 (c21-9 / and
                                                 :op1 (c21-10 / become-01
                                                              :ARG1 c21-12
                                                              :ARG2 (c21-2 / person
                                                                           :ARG1-of (c21-5 / minor-02)
                                                                           :ARG1-of (c21-17 / emancipate-01)))
                                                 :op2 (c21-6 / handle-01
                                                             :ARG0 c21-12
                                                             :ARG1 (c21-0 / life
                                                                          :poss c21-12)))))
        :snt2 (c21-3 / resemble-01
                     :ARG1 (c21-19 / it)
                     :ARG2 (c21-7 / know-01
                                  :ARG0 (c21-8 / anybody
                                               :location (c21-4 / outside
                                                                :op1 (c21-14 / family)))
                                  :ARG1 (c21-13 / mind-05
                                                :ARG0 (c21-1 / person
                                                             :name c21-15
                                                             :op1 "Blanket")))
                     :polarity -))

# ::snt I think Janet should get custody. Katherine is too old to be caring for the babies.
# ::tokens ["I", "think", "Janet", "should", "get", "custody", ".", "Katherine", "is", "too", "old", "to", "be", "caring", "for", "the", "babies", "."]
# ::lemmas ["i", "think", "Janet", "should", "get", "custody", ".", "Katherine", "be", "too", "old", "to", "be", "care", "for", "the", "baby", "."]
(c22-2 / multi-sentence
       :snt1 (c22-11 / think-01
                     :ARG0 (c22-10 / i)
                     :ARG1 (c22-5 / recommend-01
                                  :ARG1 (c22-12 / get-01
                                                :ARG0 (c22-7 / person
                                                             :name (c22-3 / name
                                                                          :op1 "Janet"))
                                                :ARG1 (c22-9 / custody))))
       :snt2 (c22-6 / have-degree-91
                    :ARG1 (c22-4 / person
                                 :name (c22-8 / name
                                              :op1 "Katherine"))
                    :ARG2 (c22-0 / old)
                    :ARG3 (c22-14 / too)
                    :ARG6 (c22-13 / care-03
                                  :ARG0 c22-4
                                  :ARG1 (c22-1 / baby))))

# ::snt Never believed that any of those kids were his.
# ::tokens ["Never", "believed", "that", "any", "of", "those", "kids", "were", "his", "."]
# ::lemmas ["never", "believe", "that", "any", "of", "those", "kid", "be", "his", "."]
(c23-0 / believe-01
       :ARG0 (c23-5 / i)
       :ARG1 (c23-4 / kid
                    :mod (c23-6 / any)
                    :ARG1-of (c23-1 / include-91
                                    :ARG2 (c23-3 / he)))
       :time (c23-2 / ever)
       :polarity -)

# ::snt How can she be his gaurdian when she also needs to be taken of and she's years old.
# ::tokens ["How", "can", "she", "be", "his", "gaurdian", "when", "she", "also", "needs", "to", "be", "taken", "of", "and", "she", "'s", "years", "old", "."]
# ::lemmas ["how", "can", "she", "be", "his", "gaurdian", "when", "she", "also", "need", "to", "be", "take", "of", "and", "she", "be", "years", "old", "."]
(c24-5 / possible-01
       :ARG1 (c24-4 / have-org-role-91
                    :ARG0 (c24-3 / she)
                    :ARG1 (c24-7 / he)
                    :ARG2 (c24-11 / gaurd))
       :manner (c24-10 / amr-unknown)
       :time (c24-9 / and
                    :op1 (c24-1 / need-01
                                :ARG0 c24-3
                                :ARG1 (c24-8 / take-01
                                             :ARG1 c24-3)
                                :mod (c24-6 / also))
                    :op2 (c24-12 / age-01
                                 :ARG1 c24-3
                                 :ARG2 (c24-2 / multiple
                                              :op1 (c24-13 / temporal-quantity
                                                           :unit (c24-0 / year)
                                                           :quant 1)))))

# ::snt Hold up. I didn't know this was a job one could simply resign from. Does it require a two week notice?
# ::tokens ["Hold", "up", ".", "I", "did", "n't", "know", "this", "was", "a", "job", "one", "could", "simply", "resign", "from", ".", "Does", "it", "require", "a", "two", "week", "notice", "?"]
# ::lemmas ["hold", "up", ".", "i", "do", "not", "know", "this", "be", "a", "job", "one", "could", "simply", "resign", "from", ".", "do", "it", "require", "a", "two", "week", "notice", "?"]
(c25-2 / multi-sentence
       :snt1 (c25-8 / hold-up-11
                    :ARG1 (c25-1 / you)
                    :mode imperative)
       :snt2 (c25-9 / know-01
                    :ARG0 (c25-13 / i)
                    :ARG1 (c25-12 / job
                                  :domain (c25-14 / this)
                                  :ARG2-of (c25-6 / resign-01
                                                  :ARG0 (c25-0 / one)
                                                  :ARG1-of (c25-10 / possible-01)
                                                  :ARG1-of (c25-4 / simple-02)))
                    :polarity -)
       :snt3 (c25-15 / require-01
                     :polarity (c25-7 / amr-unknown)
                     :ARG0 (c25-5 / it)
                     :ARG1 (c25-3 / notice-03
                                  :duration (c25-16 / temporal-quantity
                                                    :unit (c25-11 / week)
                                                    :quant 2))))

# ::snt Michael Jackson killed Arabs. Grace Jones killed , Mary Kate &amp; Ashley each. Bey, Mariah, Toni &amp; Tamar Braxton +
# ::tokens ["Michael", "Jackson", "killed", "Arabs", ".", "Grace", "Jones", "killed", ",", "Mary", "Kate", "&", "amp", ";", "Ashley", "each", ".", "Bey", ",", "Mariah", ",", "Toni", "&", "amp", ";", "Tamar", "Braxton", "+"]
# ::lemmas ["Michael", "Jackson", "kill", "Arabs", ".", "Grace", "Jones", "kill", ",", "Mary", "Kate", "&", "amp", ";", "Ashley", "each", ".", "Bey", ",", "Mariah", ",", "Toni", "&", "amp", ";", "Tamar", "Braxton", "+"]
(c26-10 / multi-sentence
        :snt1 (c26-5 / kill-01
                     :ARG0 (c26-20 / person
                                   :name (c26-17 / name
                                                 :op1 "Michael"
                                                 :op2 "Jackson"))
                     :ARG1 (c26-19 / ethnic-group
                                   :name (c26-12 / name
                                                 :op1 "Arab")))
        :snt2 (c26-15 / kill-01
                      :ARG0 (c26-11 / person
                                    :name (c26-21 / name
                                                  :op1 "Grace"
                                                  :op2 "Jones"))
                      :ARG1 (c26-7 / and
                                   :op1 (c26-4 / person
                                               :name (c26-13 / name
                                                             :op1 "Mary"
                                                             :op2 "Kate"))
                                   :op2 (c26-3 / person
                                               :name (c26-22 / name
                                                             :op1 "Ashley"))))
        :snt3 (c26-6 / and
                     :op1 (c26-8 / person
                                 :name (c26-18 / name
                                               :op1 "Bey"))
                     :op2 (c26-23 / person
                                  :name (c26-1 / name
                                               :op1 "Mariah"))
                     :op3 (c26-16 / person
                                  :name (c26-0 / name
                                               :op1 "Toni"))
                     :op4 (c26-14 / person
                                  :name (c26-2 / name
                                               :op1 "Tamar"
                                               :op2 "Braxton"))
                     :mod (c26-9 / each)))
