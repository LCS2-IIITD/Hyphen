# ::snt Thank god Hugh never had a beard! Time to show your gorgeous face again Jared!!
# ::tokens ["Thank", "god", "Hugh", "never", "had", "a", "beard", "!", "Time", "to", "show", "your", "gorgeous", "face", "again", "Jared", "!", "!"]
# ::lemmas ["thank", "god", "Hugh", "never", "have", "a", "beard", "!", "time", "to", "show", "your", "gorgeous", "face", "again", "Jared", "!", "!"]
(c1-9 / multi-sentence
      :snt1 (c1-6 / thank-01
                  :ARG0 (c1-18 / i)
                  :ARG1 (c1-16 / person
                               :name (c1-14 / name
                                            :op1 "God"))
                  :ARG2 (c1-4 / have-03
                              :ARG0 (c1-10 / person
                                           :name (c1-11 / name
                                                        :op1 "Hugh"))
                              :ARG1 (c1-8 / beard)
                              :time (c1-15 / ever)
                              :polarity -))
      :snt2 (c1-12 / time
                   :time-of (c1-0 / show-01
                                  :ARG0 (c1-3 / you
                                              :part (c1-13 / face
                                                           :mod (c1-7 / gorgeous)
                                                           :ARG1-of c1-0))
                                  :mod (c1-5 / again)))
      :snt3 (c1-2 / say-01
                  :ARG0 c1-18
                  :ARG1 c1-12)
      :ARG2 (c1-1 / person
                  :name (c1-17 / name
                               :op1 "Jared")))

# ::snt From Joker to Lord Hefner. is not human.
# ::tokens ["From", "Joker", "to", "Lord", "Hefner", ".", "is", "not", "human", "."]
# ::lemmas ["from", "Joker", "to", "Lord", "Hefner", ".", "be", "not", "human", "."]
(c2-2 / human
      :ARG2-of (c2-5 / include-91
                     :ARG1 (c2-6 / and
                                 :op1 (c2-3 / person
                                            :name (c2-0 / name
                                                        :op1 "Joker"))
                                 :op2 (c2-1 / person
                                            :name (c2-4 / name
                                                        :op1 "Lord"
                                                        :op2 "Hefner"))))
      :polarity -)

# ::snt jesus, he JUST died. like were they just sitting there waiting for him to pass?
# ::tokens ["jesus", ",", "he", "JUST", "died", ".", "like", "were", "they", "just", "sitting", "there", "waiting", "for", "him", "to", "pass", "?"]
# ::lemmas ["jesus", ",", "he", "just", "die", ".", "like", "be", "they", "just", "sit", "there", "wait", "for", "he", "to", "pass", "?"]
(c3-3 / say-01
      :ARG1 (c3-11 / die-01
                   :ARG1 (c3-6 / he)
                   :mod (c3-9 / just)
                   :ARG1-of (c3-4 / resemble-01
                                  :ARG2 (c3-0 / sit-01
                                              :ARG1 (c3-10 / they)
                                              :ARG2 (c3-13 / there)
                                              :mod (c3-12 / just)
                                              :purpose (c3-8 / wait-01
                                                             :ARG1 c3-10
                                                             :ARG2 (c3-7 / pass-03
                                                                         :ARG1 c3-6)))
                                  :polarity (c3-5 / amr-unknown)))
      :ARG2 (c3-2 / person
                  :name (c3-1 / name
                              :op1 "Jesus")))

# ::snt % agree w you
# ::tokens ["%", "agree", "w", "you"]
# ::lemmas ["%", "agree", "w", "you"]
(c4-2 / agree-01
      :ARG0 (c4-1 / percentage-entity
                  :value 100)
      :ARG2 (c4-0 / you))
