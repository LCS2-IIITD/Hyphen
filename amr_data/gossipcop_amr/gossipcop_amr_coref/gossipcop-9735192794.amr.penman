# ::snt "It's such an honor and I can't thank the people who helped me become this successful enough" -
# ::tokens ["\"", "It", "'s", "such", "an", "honor", "and", "I", "ca", "n't", "thank", "the", "people", "who", "helped", "me", "become", "this", "successful", "enough", "\"", "-"]
# ::lemmas ["\"", "it", "be", "such", "an", "honor", "and", "i", "can", "not", "thank", "the", "people", "who", "help", "i", "become", "this", "successful", "enough", "\"", "-"]
(c1-12 / and
       :op1 (c1-6 / honor-01
                  :ARG3 (c1-11 / it)
                  :mod (c1-3 / such))
       :op2 (c1-7 / possible-01
                  :ARG1 (c1-10 / thank-01
                               :ARG0 (c1-4 / i)
                               :ARG1 (c1-2 / person
                                           :ARG0-of (c1-9 / help-01
                                                          :ARG1 (c1-1 / become-01
                                                                      :ARG1 c1-4
                                                                      :ARG2 (c1-0 / succeed-01
                                                                                  :ARG0 c1-4
                                                                                  :ARG2-of (c1-5 / have-degree-91
                                                                                                 :ARG1 c1-4
                                                                                                 :ARG3 (c1-8 / enough)))))))
                  :polarity -))

# ::snt Thank for everything you do to make us successful!
# ::tokens ["Thank", "for", "everything", "you", "do", "to", "make", "us", "successful", "!"]
# ::lemmas ["thank", "for", "everything", "you", "do", "to", "make", "we", "successful", "!"]
(c2-5 / thank-01
      :ARG1 (c2-0 / you)
      :ARG2 (c2-3 / everything
                  :ARG1-of (c2-6 / do-02
                                 :ARG0 c2-0
                                 :ARG2 (c2-1 / make-02
                                             :ARG0 c2-0
                                             :ARG1 (c2-2 / succeed-01
                                                         :ARG0 (c2-4 / we))))))

# ::snt Congratulations!!! She is the best!!!
# ::tokens ["Congratulations", "!", "!", "!", "She", "is", "the", "best", "!", "!", "!"]
# ::lemmas ["congratulation", "!", "!", "!", "she", "be", "the", "good", "!", "!", "!"]
(c3-0 / multi-sentence
      :snt1 (c3-4 / congratulate-01
                  :mode expressive)
      :snt2 (c3-2 / have-degree-91
                  :ARG1 (c3-1 / she)
                  :ARG2 (c3-5 / good-03
                              :ARG1 c3-1)
                  :ARG3 (c3-3 / most)
                  :mode expressive))

# ::snt Congrats! Very well deserved.
# ::tokens ["Congrats", "!", "Very", "well", "deserved", "."]
# ::lemmas ["Congrats", "!", "very", "well", "deserved", "."]
(c4-0 / multi-sentence
      :snt1 (c4-2 / congratulate-01
                  :mode expressive)
      :snt2 (c4-4 / deserve-01
                  :degree (c4-3 / well
                                :degree (c4-1 / very))))

# ::snt Yay! Thank you to all the staff who voted for me! Here is an obligatory cheesy picture with the award and my other half! So shocked still! Look forward to the th!
# ::tokens ["Yay", "!", "Thank", "you", "to", "all", "the", "staff", "who", "voted", "for", "me", "!", "Here", "is", "an", "obligatory", "cheesy", "picture", "with", "the", "award", "and", "my", "other", "half", "!", "So", "shocked", "still", "!", "Look", "forward", "to", "the", "th", "!"]
# ::lemmas ["yay", "!", "thank", "you", "to", "all", "the", "staff", "who", "vote", "for", "i", "!", "here", "be", "an", "obligatory", "cheesy", "picture", "with", "the", "award", "and", "my", "other", "half", "!", "so", "shocked", "still", "!", "look", "forward", "to", "the", "th", "!"]
(c5-17 / multi-sentence
       :snt1 (c5-6 / yay
                   :mode expressive)
       :snt2 (c5-13 / thank-01
                    :ARG0 (c5-23 / i)
                    :ARG1 (c5-1 / staff
                                :mod (c5-12 / all)
                                :ARG0-of (c5-8 / vote-01
                                               :ARG1 (c5-7 / i))))
       :snt3 (c5-21 / picture-01
                    :ARG1 (c5-11 / and
                                 :op1 (c5-10 / award)
                                 :op2 (c5-9 / half
                                            :mod (c5-4 / other)
                                            :poss (c5-15 / i)))
                    :ARG2-of (c5-16 / obligate-01)
                    :mod (c5-18 / cheesy)
                    :location (c5-22 / here))
       :snt4 (c5-5 / shock-01
                   :ARG1 (c5-0 / i
                               :part c5-9)
                   :mod (c5-3 / still)
                   :degree (c5-20 / so))
       :snt5 (c5-2 / look-forward-03
                   :ARG0 (c5-14 / you)
                   :ARG1 (c5-19 / th)
                   :mode expressive))

# ::snt Thank you so much for your support and can't wait to celebrate with you
# ::tokens ["Thank", "you", "so", "much", "for", "your", "support", "and", "ca", "n't", "wait", "to", "celebrate", "with", "you"]
# ::lemmas ["thank", "you", "so", "much", "for", "your", "support", "and", "can", "not", "wait", "to", "celebrate", "with", "you"]
(c6-4 / and
      :op1 (c6-10 / thank-01
                  :ARG0 (c6-9 / i)
                  :ARG1 (c6-1 / you)
                  :ARG2 (c6-3 / support-01
                              :ARG0 c6-1)
                  :ARG1-of (c6-5 / have-quant-91
                                 :ARG2 (c6-2 / much)
                                 :ARG3 (c6-0 / so)))
      :op2 (c6-7 / wait-01
                 :ARG1 c6-9
                 :ARG2 (c6-8 / celebrate-02
                             :ARG0 c6-9
                             :accompanier c6-1)
                 :ARG1-of (c6-6 / possible-01
                                :polarity -)))

# ::snt Do you have a problem with some already?? They're coming too soon!!
# ::tokens ["Do", "you", "have", "a", "problem", "with", "some", "already", "?", "?", "They", "'re", "coming", "too", "soon", "!", "!"]
# ::lemmas ["do", "you", "have", "a", "problem", "with", "some", "already", "?", "?", "they", "be", "come", "too", "soon", "!", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-4 / have-03
                  :polarity (c7-10 / amr-unknown)
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-5 / problem
                              :topic (c7-3 / some))
                  :time (c7-9 / already))
      :snt2 (c7-6 / come-01
                  :ARG1 (c7-8 / they)
                  :time (c7-0 / soon
                              :ARG2-of (c7-7 / have-degree-91
                                             :ARG1 c7-6
                                             :ARG3 (c7-11 / too)))))

# ::snt Congratulations! This area needs more people like you! You give me hope for the future!
# ::tokens ["Congratulations", "!", "This", "area", "needs", "more", "people", "like", "you", "!", "You", "give", "me", "hope", "for", "the", "future", "!"]
# ::lemmas ["congratulation", "!", "this", "area", "need", "more", "people", "like", "you", "!", "you", "give", "i", "hope", "for", "the", "future", "!"]
(c9-3 / multi-sentence
      :snt1 (c9-9 / congratulate-01
                  :mode expressive)
      :snt2 (c9-2 / need-01
                  :ARG0 (c9-4 / area
                              :mod (c9-11 / this))
                  :ARG1 (c9-7 / person
                              :ARG1-of (c9-5 / resemble-01
                                             :ARG2 (c9-1 / you))
                              :quant (c9-6 / more)))
      :snt3 (c9-12 / give-01
                   :ARG0 (c9-13 / you)
                   :ARG1 (c9-8 / hopeful-03
                               :ARG0 c9-13
                               :ARG1 (c9-0 / future))
                   :ARG2 (c9-10 / i)
                   :mode expressive))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c10-0 / congratulate-01
       :mode expressive)

# ::snt Sports Entertainment person of the year surely
# ::tokens ["Sports", "Entertainment", "person", "of", "the", "year", "surely"]
# ::lemmas ["Sports", "Entertainment", "person", "of", "the", "year", "surely"]
(c11-4 / person
       :ARG1-of (c11-2 / sure-02)
       :mod (c11-3 / Entertainment
                   :mod (c11-0 / sport))
       :time (c11-1 / year))

# ::snt Thank you so much , Zoe and Tru and all those who voted. An amazing category with such amazing people, I truly am humbled.
# ::tokens ["Thank", "you", "so", "much", ",", "Zoe", "and", "Tru", "and", "all", "those", "who", "voted", ".", "An", "amazing", "category", "with", "such", "amazing", "people", ",", "I", "truly", "am", "humbled", "."]
# ::lemmas ["thank", "you", "so", "much", ",", "Zoe", "and", "Tru", "and", "all", "those", "who", "vote", ".", "an", "amazing", "category", "with", "such", "amazing", "people", ",", "i", "truly", "be", "humble", "."]
(c12-13 / multi-sentence
        :snt1 (c12-11 / thank-01
                      :ARG0 (c12-21 / i)
                      :ARG1 (c12-12 / and
                                    :op1 (c12-19 / person
                                                 :name (c12-18 / name
                                                               :op1 "Zoe"))
                                    :op2 (c12-14 / person
                                                 :name (c12-15 / name
                                                               :op1 "Tru"))
                                    :op3 (c12-2 / person
                                                :mod (c12-10 / all)
                                                :ARG0-of (c12-5 / vote-01)))
                      :ARG1-of (c12-7 / have-quant-91
                                      :ARG2 (c12-8 / much)
                                      :ARG3 (c12-0 / so)))
        :snt2 (c12-20 / humble-01
                      :ARG1 (c12-4 / i)
                      :ARG1-of (c12-17 / true-01)
                      :manner (c12-16 / category
                                      :ARG0-of (c12-9 / amaze-01)
                                      :ARG0-of (c12-6 / have-03
                                                      :ARG1 (c12-1 / person
                                                                   :ARG0-of (c12-22 / amaze-01
                                                                                    :degree (c12-3 / such)))))))

# ::snt Well done !! Keep inspiring
# ::tokens ["Well", "done", "!", "!", "Keep", "inspiring"]
# ::lemmas ["well", "do", "!", "!", "keep", "inspire"]
(c13-1 / multi-sentence
       :snt1 (c13-5 / do-02
                    :ARG1-of (c13-3 / well-09))
       :snt2 (c13-2 / keep-02
                    :ARG0 (c13-0 / you)
                    :ARG1 (c13-4 / inspire-01
                                 :ARG0 c13-0)
                    :mode imperative))

# ::snt Money supersedes rationality. MLS should be ashamed but theyre rolling in the league entrance fees.
# ::tokens ["Money", "supersedes", "rationality", ".", "MLS", "should", "be", "ashamed", "but", "they", "re", "rolling", "in", "the", "league", "entrance", "fees", "."]
# ::lemmas ["money", "supersede", "rationality", ".", "MLS", "should", "be", "ashamed", "but", "they", "re", "roll", "in", "the", "league", "entrance", "fee", "."]
(c14-2 / multi-sentence
       :snt1 (c14-4 / supersed-01
                    :ARG0 (c14-7 / money)
                    :ARG1 (c14-5 / rationality))
       :snt2 (c14-10 / contrast-01
                     :ARG1 (c14-11 / recommend-01
                                   :ARG1 (c14-0 / shame-02
                                                :ARG1 (c14-8 / league
                                                             :name (c14-3 / name
                                                                          :op1 "MLS"))))
                     :ARG2 (c14-9 / roll-in-02
                                  :ARG0 c14-8
                                  :ARG1 (c14-1 / fee
                                               :purpose (c14-6 / enter-01
                                                               :ARG0 c14-8
                                                               :ARG1 (c14-12 / league))))))

# ::snt You need binoculars from there to describe the game
# ::tokens ["You", "need", "binoculars", "from", "there", "to", "describe", "the", "game"]
# ::lemmas ["you", "need", "binocular", "from", "there", "to", "describe", "the", "game"]
(c15-2 / need-01
       :ARG0 (c15-1 / you)
       :ARG1 (c15-0 / binocular
                    :source (c15-3 / there))
       :purpose (c15-5 / describe-01
                       :ARG0 c15-1
                       :ARG1 (c15-4 / game)))

# ::snt They need a new soccer specific stadium
# ::tokens ["They", "need", "a", "new", "soccer", "specific", "stadium"]
# ::lemmas ["they", "need", "a", "new", "soccer", "specific", "stadium"]
(c16-1 / need-01
       :ARG0 (c16-4 / they)
       :ARG1 (c16-2 / stadium
                    :ARG1-of (c16-3 / new-01)
                    :ARG1-of (c16-0 / specific-02
                                    :ARG2 (c16-5 / soccer))))

# ::snt That field looks ridiculous, I'm sorry.
# ::tokens ["That", "field", "looks", "ridiculous", ",", "I", "'m", "sorry", "."]
# ::lemmas ["that", "field", "look", "ridiculous", ",", "i", "be", "sorry", "."]
(c17-1 / sorry-01
       :ARG1 (c17-4 / i)
       :ARG2 (c17-3 / look-02
                    :ARG0 (c17-0 / field
                                 :mod (c17-5 / that))
                    :ARG1 (c17-2 / ridiculous-02
                                 :ARG1 c17-0)))

# ::snt Hopefully they raise their camera booth, brutal way to watch a game.
# ::tokens ["Hopefully", "they", "raise", "their", "camera", "booth", ",", "brutal", "way", "to", "watch", "a", "game", "."]
# ::lemmas ["hopefully", "they", "raise", "their", "camera", "booth", ",", "brutal", "way", "to", "watch", "a", "game", "."]
(c18-1 / raise-01
       :ARG0 (c18-7 / they)
       :ARG1 (c18-0 / booth
                    :mod (c18-5 / camera)
                    :poss c18-7)
       :mod (c18-6 / way
                   :ARG0-of (c18-2 / brutal-02)
                   :manner-of (c18-4 / watch-01
                                     :ARG1 (c18-8 / game)))
       :ARG1-of (c18-3 / hope-01))

# ::snt I definitely hope its the last one on that joke of a football pitch as well. Bonne fin de saison mon ami!
# ::tokens ["I", "definitely", "hope", "its", "the", "last", "one", "on", "that", "joke", "of", "a", "football", "pitch", "as", "well", ".", "Bonne", "fin", "de", "saison", "mon", "ami", "!"]
# ::lemmas ["i", "definitely", "hope", "its", "the", "last", "one", "on", "that", "joke", "of", "a", "football", "pitch", "as", "well", ".", "Bonne", "fin", "de", "saison", "mon", "ami", "!"]
(c19-2 / multi-sentence
       :snt1 (c19-4 / hope-01
                    :ARG0 (c19-8 / i)
                    :ARG1 (c19-0 / one
                                 :mod (c19-5 / last)
                                 :topic (c19-7 / joke-01
                                               :ARG2 (c19-6 / pitch
                                                            :mod (c19-1 / football)))
                                 :domain (c19-3 / it)
                                 :mod (c19-9 / as-well))
                    :manner (c19-11 / definite))
       :snt2 (c19-10 / amr-unintelligible
                     :value "Bonne fin de saison mon ami"))

# ::snt Watching soccer on a field comparable in size to a shoebox?
# ::tokens ["Watching", "soccer", "on", "a", "field", "comparable", "in", "size", "to", "a", "shoebox", "?"]
# ::lemmas ["watch", "soccer", "on", "a", "field", "comparable", "in", "size", "to", "a", "shoebox", "?"]
(c20-4 / watch-01
       :ARG1 (c20-2 / soccer)
       :polarity (c20-6 / amr-unknown)
       :location (c20-1 / field
                        :ARG1-of (c20-0 / size-01
                                        :ARG2 (c20-7 / shoebox)
                                        :ARG1-of (c20-5 / comparable-03
                                                        :ARG2 (c20-3 / size-01
                                                                     :ARG1 c20-7)))))

# ::snt Well done Jonathan!
# ::tokens ["Well", "done", "Jonathan", "!"]
# ::lemmas ["well", "do", "Jonathan", "!"]
(c21-1 / say-01
       :ARG0 (c21-4 / i)
       :ARG1 (c21-5 / do-02
                    :ARG1-of (c21-3 / well-09))
       :ARG2 (c21-2 / person
                    :name (c21-0 / name
                                 :op1 "Jonathan")))

# ::snt Good luck Jonathan. You are a Clydeview star!
# ::tokens ["Good", "luck", "Jonathan", ".", "You", "are", "a", "Clydeview", "star", "!"]
# ::lemmas ["good", "luck", "Jonathan", ".", "you", "be", "a", "Clydeview", "star", "!"]
(c22-3 / multi-sentence
       :snt1 (c22-5 / say-01
                    :ARG1 (c22-8 / luck
                                 :ARG1-of (c22-9 / good-02))
                    :ARG2 (c22-7 / person
                                 :name (c22-4 / name
                                              :op1 "Jonathan")))
       :snt2 (c22-0 / star
                    :mod (c22-1 / broadcast-program
                                :name (c22-6 / name
                                             :op1 "Clydeview"))
                    :domain (c22-2 / you)))

# ::snt Well done John. Magnificent achievement you have done the service proud
# ::tokens ["Well", "done", "John", ".", "Magnificent", "achievement", "you", "have", "done", "the", "service", "proud"]
# ::lemmas ["well", "do", "John", ".", "magnificent", "achievement", "you", "have", "do", "the", "service", "proud"]
(c23-1 / multi-sentence
       :snt1 (c23-3 / say-01
                    :ARG1 (c23-9 / do-02
                                 :ARG1-of (c23-6 / well-09))
                    :ARG2 (c23-5 / person
                                 :name (c23-2 / name
                                              :op1 "John")))
       :snt2 (c23-8 / achieve-01
                    :ARG0 (c23-0 / you)
                    :mod (c23-7 / ificent)
                    :ARG0-of (c23-4 / pride-01
                                    :ARG1 c23-0)))

# ::snt Outstanding
# ::tokens ["Outstanding"]
# ::lemmas ["outstanding"]
(c24-0 / outstanding)

# ::snt Well done John. Congratulations and well deserved.
# ::tokens ["Well", "done", "John", ".", "Congratulations", "and", "well", "deserved", "."]
# ::lemmas ["well", "do", "John", ".", "congratulation", "and", "well", "deserve", "."]
(c25-1 / multi-sentence
       :snt1 (c25-3 / say-01
                    :ARG1 (c25-10 / do-02
                                  :ARG1-of (c25-6 / well-09))
                    :ARG2 (c25-4 / person
                                 :name (c25-2 / name
                                              :op1 "John")))
       :snt2 (c25-9 / and
                    :op1 (c25-7 / congratulate-01
                                :ARG1 (c25-0 / you))
                    :op2 (c25-8 / deserve-01
                                :ARG1 c25-7
                                :ARG1-of (c25-5 / well-09))))

# ::snt Well done John and family for your dedication to the people of Suffolk.
# ::tokens ["Well", "done", "John", "and", "family", "for", "your", "dedication", "to", "the", "people", "of", "Suffolk", "."]
# ::lemmas ["well", "do", "John", "and", "family", "for", "your", "dedication", "to", "the", "people", "of", "Suffolk", "."]
(c26-3 / say-01
       :ARG1 (c26-11 / do-02
                     :ARG1-of (c26-7 / well-09)
                     :ARG2 (c26-10 / and
                                   :op1 (c26-5 / person
                                               :name (c26-1 / name
                                                            :op1 "John"))
                                   :op2 (c26-0 / family))
                     :ARG1-of (c26-8 / cause-01
                                     :ARG0 (c26-9 / dedicate-01
                                                  :ARG0 c26-10
                                                  :ARG2 (c26-2 / person
                                                               :location (c26-6 / local-region
                                                                                :name (c26-4 / name
                                                                                             :op1 "Suffolk"))))))
       :ARG2 c26-10)

# ::snt Really well deserved
# ::tokens ["Really", "well", "deserved"]
# ::lemmas ["really", "well", "deserve"]
(c27-0 / deserve-01
       :degree (c27-2 / well
                      :degree (c27-1 / really)))

# ::snt Huge congratulations to all at Burleys on winning this award.
# ::tokens ["Huge", "congratulations", "to", "all", "at", "Burleys", "on", "winning", "this", "award", "."]
# ::lemmas ["huge", "congratulation", "to", "all", "at", "burley", "on", "win", "this", "award", "."]
(c28-4 / congratulate-01
       :ARG0 (c28-3 / person
                    :location (c28-1 / publication
                                     :name (c28-0 / name
                                                  :op1 "Burleys"))
                    :mod (c28-8 / all)
                    :ARG1-of c28-4)
       :ARG2 (c28-5 / win-01
                    :ARG0 c28-3
                    :ARG1 (c28-7 / award
                                 :mod (c28-6 / this)))
       :mod (c28-2 / huge))

# ::snt Free Jabari Parker jerseys
# ::tokens ["Free", "Jabari", "Parker", "jerseys"]
# ::lemmas ["Free", "Jabari", "Parker", "jersey"]
(c29-2 / jersey
       :ARG1-of (c29-0 / free-03)
       :poss (c29-3 / person
                    :name (c29-1 / name
                                 :op1 "Jabari"
                                 :op2 "Parker")))

# ::snt With the clock ticking I think Jerry will sign both of them. He's going to throw in a used Caddy for each of them to seal the deal.
# ::tokens ["With", "the", "clock", "ticking", "I", "think", "Jerry", "will", "sign", "both", "of", "them", ".", "He", "'s", "going", "to", "throw", "in", "a", "used", "Caddy", "for", "each", "of", "them", "to", "seal", "the", "deal", "."]
# ::lemmas ["with", "the", "clock", "ticking", "i", "think", "Jerry", "will", "sign", "both", "of", "they", ".", "he", "be", "go", "to", "throw", "in", "a", "use", "Caddy", "for", "each", "of", "they", "to", "seal", "the", "deal", "."]
(c30-8 / multi-sentence
       :snt1 (c30-5 / think-01
                    :ARG0 (c30-16 / i)
                    :ARG1 (c30-0 / sign-02
                                 :ARG0 (c30-15 / person
                                               :name (c30-13 / name
                                                             :op1 "Jerry"))
                                 :ARG1 (c30-11 / they
                                               :mod (c30-7 / both)))
                    :ARG1-of (c30-10 / cause-01
                                     :ARG0 (c30-17 / tick-05
                                                   :ARG1 (c30-6 / clock))))
       :snt2 (c30-1 / throw-in-02
                    :ARG0 (c30-4 / he)
                    :ARG1 (c30-9 / person
                                 :name c30-13
                                 :op1 "Caddy")
                    :ARG1-of (c30-12 / use-01))
       :purpose (c30-2 / seal-01
                       :ARG0 (c30-14 / each
                                     :ARG1-of (c30-3 / include-91
                                                     :ARG2 c30-11))
                       :ARG1 (c30-18 / deal-01)))

# ::snt That's a good one too.
# ::tokens ["That", "'s", "a", "good", "one", "too", "."]
# ::lemmas ["that", "be", "a", "good", "one", "too", "."]
(c31-0 / good-02
       :ARG1 (c31-2 / that)
       :mod (c31-1 / too))

# ::snt Probably Baez.
# ::tokens ["Probably", "Baez", "."]
# ::lemmas ["probably", "Baez", "."]
(c32-1 / probable
       :domain (c32-2 / person
                      :name (c32-0 / name
                                   :op1 "Baez")))

# ::snt Ryan Pace has to be the front runner currently right? Not sure if signing Harper or Machado would trump the Khalil Mack Trade.
# ::tokens ["Ryan", "Pace", "has", "to", "be", "the", "front", "runner", "currently", "right", "?", "Not", "sure", "if", "signing", "Harper", "or", "Machado", "would", "trump", "the", "Khalil", "Mack", "Trade", "."]
# ::lemmas ["Ryan", "Pace", "have", "to", "be", "the", "front", "runner", "currently", "right", "?", "not", "sure", "if", "sign", "Harper", "or", "Machado", "would", "trump", "the", "Khalil", "Mack", "Trade", "."]
(c33-9 / multi-sentence
       :snt1 (c33-17 / right-06
                     :ARG2 (c33-4 / obligate-01
                                  :ARG1 (c33-18 / person
                                                :name (c33-16 / name
                                                              :op1 "Ryan"
                                                              :op2 "Pace"))
                                  :ARG2 (c33-3 / run-02
                                               :ARG0 c33-18
                                               :mod (c33-15 / front)
                                               :time (c33-12 / current))))
       :snt2 (c33-0 / sure-02
                    :ARG1 (c33-6 / trump-01
                                 :ARG0 (c33-5 / sign-02
                                              :ARG1 (c33-8 / or
                                                           :op1 (c33-10 / person
                                                                        :name (c33-11 / name
                                                                                      :op1 "Harper"))
                                                           :op2 (c33-2 / person
                                                                       :name (c33-19 / name
                                                                                     :op1 "Machado"))))
                                 :ARG1 (c33-14 / trade-01
                                               :ARG2 (c33-1 / person
                                                            :name (c33-13 / name
                                                                          :op1 "Khalil"
                                                                          :op2 "Mack"))))
                    :polarity (c33-7 / amr-unknown)
                    :polarity -))

# ::snt Nothing for this I'm afraid.
# ::tokens ["Nothing", "for", "this", "I", "'m", "afraid", "."]
# ::lemmas ["nothing", "for", "this", "i", "be", "afraid", "."]
(c34-0 / fear-01
       :ARG0 (c34-2 / i)
       :ARG1 (c34-1 / nothing
                    :purpose (c34-3 / this)))

# ::snt Are you on drugs?Why would you put Farage on the list are you a paid operative?
# ::tokens ["Are", "you", "on", "drugs?Why", "would", "you", "put", "Farage", "on", "the", "list", "are", "you", "a", "paid", "operative", "?"]
# ::lemmas ["be", "you", "on", "drugs?why", "would", "you", "put", "Farage", "on", "the", "list", "be", "you", "a", "pay", "operative", "?"]
(c35-2 / multi-sentence
       :snt1 (c35-10 / drug-01
                     :ARG1 (c35-1 / you))
       :snt2 (c35-7 / cause-01
                    :ARG0 (c35-8 / amr-unknown)
                    :ARG1 (c35-5 / put-01
                                 :ARG0 (c35-9 / you)
                                 :ARG1 (c35-3 / person
                                              :name (c35-4 / name
                                                           :op1 "Nigel"))
                                 :ARG2 (c35-6 / list-01
                                              :ARG1 c35-9)))
       :snt3 (c35-0 / operative
                    :ARG2-of (c35-11 / pay-01)
                    :domain c35-9))

# ::snt Brilliant well done Jonathan and to all the team in CD
# ::tokens ["Brilliant", "well", "done", "Jonathan", "and", "to", "all", "the", "team", "in", "CD"]
# ::lemmas ["brilliant", "well", "do", "Jonathan", "and", "to", "all", "the", "team", "in", "CD"]
(c36-1 / say-01
       :ARG0 (c36-7 / i)
       :ARG1 (c36-8 / and
                    :op1 (c36-3 / congratulate-01
                                :ARG1 (c36-2 / person
                                             :name (c36-0 / name
                                                          :op1 "Jonathan"))
                                :manner (c36-4 / well-09))
                    :op2 (c36-6 / team
                                :mod (c36-9 / all)
                                :location (c36-10 / disc
                                                  :mod (c36-11 / compact)
                                                  :ARG1-of (c36-5 / compact-01))))
       :ARG2 c36-2)

# ::snt Congratulations Jonathan!
# ::tokens ["Congratulations", "Jonathan", "!"]
# ::lemmas ["Congratulations", "Jonathan", "!"]
(c37-0 / congratulate-01
       :ARG1 (c37-2 / person
                    :name (c37-1 / name
                                 :op1 "Jonathan")))

# ::snt Well done Jonathan, well deserved. and well done to all the nominees
# ::tokens ["Well", "done", "Jonathan", ",", "well", "deserved", ".", "and", "well", "done", "to", "all", "the", "nominees"]
# ::lemmas ["well", "do", "Jonathan", ",", "well", "deserved", ".", "and", "well", "do", "to", "all", "the", "nominee"]
(c38-0 / multi-sentence
       :snt1 (c38-2 / say-01
                    :ARG0 (c38-10 / i)
                    :ARG1 (c38-13 / do-02
                                  :ARG1-of (c38-8 / well-09))
                    :ARG2 (c38-5 / person
                                 :name (c38-1 / name
                                              :op1 "Jonathan")))
       :snt2 (c38-11 / and
                     :op1 (c38-9 / do-02
                                 :ARG1-of (c38-7 / well-09)
                                 :beneficiary (c38-3 / person
                                                     :ARG1-of (c38-4 / nominate-01)
                                                     :mod (c38-12 / all)))
                     :op2 (c38-6 / do-02
                                 :ARG1-of (c38-14 / well-09)
                                 :beneficiary c38-3)))

# ::snt Congrats JC
# ::tokens ["Congrats", "JC"]
# ::lemmas ["Congrats", "JC"]
(c39-0 / congratulate-01
       :ARG1 (c39-2 / person
                    :name (c39-1 / name
                                 :op1 "JC")))

# ::snt I remember that Brandy and Monica shit. Lol
# ::tokens ["I", "remember", "that", "Brandy", "and", "Monica", "shit", ".", "Lol"]
# ::lemmas ["i", "remember", "that", "Brandy", "and", "Monica", "shit", ".", "Lol"]
(c40-0 / multi-sentence
       :snt1 (c40-4 / remember-01
                    :ARG0 (c40-9 / i)
                    :ARG1 (c40-2 / shit
                                 :mod (c40-10 / that)
                                 :mod (c40-5 / and
                                             :op1 (c40-7 / person
                                                         :name (c40-1 / name
                                                                      :op1 "Brandy"))
                                             :op2 (c40-3 / person
                                                         :name (c40-6 / name
                                                                      :op1 "Monica")))))
       :snt2 (c40-8 / laugh-01
                    :ARG0 c40-9
                    :manner (c40-11 / loud)
                    :mode expressive))

# ::snt Well deserved.
# ::tokens ["Well", "deserved", "."]
# ::lemmas ["well", "deserve", "."]
(c41-0 / deserve-01
       :ARG1-of (c41-1 / well-09))

# ::snt Looks like Republican grifter really wants the title this year
# ::tokens ["Looks", "like", "Republican", "grifter", "really", "wants", "the", "title", "this", "year"]
# ::lemmas ["look", "like", "Republican", "grifter", "really", "want", "the", "title", "this", "year"]
(c42-5 / look-02
       :ARG1 (c42-7 / want-01
                    :ARG0 (c42-6 / person
                                 :ARG0-of (c42-4 / have-org-role-91
                                                 :ARG1 (c42-2 / political-party
                                                              :name (c42-1 / name
                                                                           :op1 "Republican"))
                                                 :ARG3 (c42-9 / grifter)))
                    :ARG1 (c42-8 / title)
                    :ARG1-of (c42-3 / real-04)
                    :time (c42-0 / year
                                 :mod (c42-10 / this))))

# ::snt :omg Tarana Burke would be the perfect person i hope they do her
# ::tokens [":", "omg", "Tarana", "Burke", "would", "be", "the", "perfect", "person", "i", "hope", "they", "do", "her"]
# ::lemmas [":", "omg", "Tarana", "Burke", "would", "be", "the", "perfect", "person", "i", "hope", "they", "do", "she"]
(c43-2 / hope-01
       :ARG0 (c43-4 / i)
       :ARG1 (c43-3 / perfect-02
                    :ARG1 (c43-1 / person
                                 :name (c43-0 / name
                                              :op1 "Tarana"
                                              :op2 "Burke"))))

# ::snt Meghan Markle bc why not
# ::tokens ["Meghan", "Markle", "bc", "why", "not"]
# ::lemmas ["Meghan", "Markle", "bc", "why", "not"]
(c44-0 / cause-01
       :ARG0 (c44-3 / amr-unknown)
       :ARG1 (c44-2 / person
                    :name (c44-1 / name
                                 :op1 "Meghan"
                                 :op2 "Markle")))

# ::snt Someone with a fat ass I hope
# ::tokens ["Someone", "with", "a", "fat", "ass", "I", "hope"]
# ::lemmas ["someone", "with", "a", "fat", "ass", "i", "hope"]
(c45-2 / hope-01
       :ARG0 (c45-3 / i)
       :ARG1 (c45-1 / someone
                    :poss-of (c45-4 / ass
                                    :ARG1-of (c45-0 / fat-03))))

# ::snt Or Tarana Burke
# ::tokens ["Or", "Tarana", "Burke"]
# ::lemmas ["or", "Tarana", "Burke"]
(c46-0 / or
       :op1 (c46-2 / person
                   :name (c46-1 / name
                                :op1 "Tarana"
                                :op2 "Burke")))

# ::snt Dr Ford one would hope
# ::tokens ["Dr", "Ford", "one", "would", "hope"]
# ::lemmas ["Dr", "Ford", "one", "would", "hope"]
(c47-2 / hope-01
       :ARG0 (c47-0 / one
                    :mod (c47-3 / person
                                :name (c47-1 / name
                                             :op1 "Dr"
                                             :op2 "Ford"))))

# ::snt The Parkland Kids. Mueller if something big happens with the investigation (like if Donald gets arrested)
# ::tokens ["The", "Parkland", "Kids", ".", "Mueller", "if", "something", "big", "happens", "with", "the", "investigation", "(", "like", "if", "Donald", "gets", "arrested", ")"]
# ::lemmas ["The", "Parkland", "Kids", ".", "Mueller", "if", "something", "big", "happen", "with", "the", "investigation", "(", "like", "if", "Donald", "gets", "arrest", ")"]
(c48-2 / multi-sentence
       :snt1 (c48-7 / kid
                    :location (c48-6 / parkland))
       :snt2 (c48-3 / person
                    :name (c48-1 / name
                                 :op1 "Mueller")
                    :condition (c48-4 / something
                                      :mod (c48-0 / big)
                                      :subevent-of (c48-8 / investigate-01)
                                      :example (c48-9 / arrest-01
                                                      :ARG1 (c48-10 / person
                                                                    :name (c48-5 / name
                                                                                 :op1 "Donald"))))))

# ::snt Congratulations to Jason on his Award.
# ::tokens ["Congratulations", "to", "Jason", "on", "his", "Award", "."]
# ::lemmas ["congratulation", "to", "Jason", "on", "his", "Award", "."]
(c50-0 / congratulate-01
       :ARG1 (c50-2 / person
                    :name (c50-1 / name
                                 :op1 "Jason"))
       :ARG2 (c50-3 / award
                    :poss c50-2))
