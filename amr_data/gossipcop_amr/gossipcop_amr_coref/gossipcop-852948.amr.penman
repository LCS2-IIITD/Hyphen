# ::snt I also need to see James Lafferty as a firefighter - let's make this happen.
# ::tokens ["I", "also", "need", "to", "see", "James", "Lafferty", "as", "a", "firefighter", "-", "let", "'s", "make", "this", "happen", "."]
# ::lemmas ["i", "also", "need", "to", "see", "James", "Lafferty", "as", "a", "firefighter", "-", "let", "us", "make", "this", "happen", "."]
(c1-1 / need-01
      :ARG0 (c1-9 / i)
      :ARG1 (c1-3 / see-01
                  :ARG0 c1-9
                  :ARG1 (c1-5 / person
                              :name (c1-4 / name
                                          :op1 "James"
                                          :op2 "Lafferty")
                              :ARG2-of c1-3)
                  :ARG0-of (c1-0 / fight-01
                                 :ARG1 (c1-6 / fire)))
      :mod (c1-10 / also)
      :ARG0-of (c1-7 / cause-01
                     :ARG1 (c1-2 / make-02
                                 :ARG0 (c1-8 / we)
                                 :ARG1 c1-3
                                 :mode imperative)))

# ::snt I think I'll pass on this one, I'm pretty sick of killing off my favorite characters.
# ::tokens ["I", "think", "I", "'ll", "pass", "on", "this", "one", ",", "I", "'m", "pretty", "sick", "of", "killing", "off", "my", "favorite", "characters", "."]
# ::lemmas ["i", "think", "i", "'ll", "pass", "on", "this", "one", ",", "i", "be", "pretty", "sick", "of", "kill", "off", "my", "favorite", "character", "."]
(c3-4 / and
      :op1 (c3-9 / think-01
                 :ARG0 (c3-8 / i)
                 :ARG1 (c3-5 / pass-on-14
                             :ARG0 c3-8
                             :ARG1 (c3-0 / one
                                         :mod (c3-10 / this))))
      :op2 (c3-3 / sick-04
                 :ARG0 (c3-6 / kill-off-02
                             :ARG0 c3-8
                             :ARG1 (c3-7 / character
                                         :ARG1-of (c3-1 / favor-01
                                                        :ARG0 c3-8)))
                 :ARG1 c3-8
                 :degree (c3-2 / pretty)))

# ::snt another same old same old
# ::tokens ["another", "same", "old", "same", "old"]
# ::lemmas ["another", "same", "old", "same", "old"]
(c4-2 / same-01
      :ARG1 (c4-0 / another)
      :ARG2 (c4-1 / old))

# ::snt Another one?
# ::tokens ["Another", "one", "?"]
# ::lemmas ["another", "one", "?"]
(c5-0 / one
      :polarity (c5-2 / amr-unknown)
      :mod (c5-1 / another))
