# ::snt I'm so happy she found love again, after losing her fianc to heroin overdose, a few fears back.
# ::tokens ["I", "'m", "so", "happy", "she", "found", "love", "again", ",", "after", "losing", "her", "fianc", "to", "heroin", "overdose", ",", "a", "few", "fears", "back", "."]
# ::lemmas ["i", "be", "so", "happy", "she", "find", "love", "again", ",", "after", "lose", "her", "fianc", "to", "heroin", "overdose", ",", "a", "few", "fear", "back", "."]
(c1-6 / happy-01
      :ARG0 (c1-0 / find-01
                  :ARG0 (c1-4 / she)
                  :ARG1 (c1-7 / love-01
                              :ARG1 c1-4)
                  :mod (c1-15 / again)
                  :time (c1-14 / after
                               :op1 (c1-17 / lose-02
                                           :ARG0 c1-4
                                           :ARG1 (c1-8 / person
                                                       :ARG0-of (c1-13 / have-rel-role-91
                                                                       :ARG1 c1-4
                                                                       :ARG2 (c1-9 / fiancee)))
                                           :ARG1-of (c1-11 / cause-01
                                                           :ARG0 (c1-1 / opine-01
                                                                       :ARG0 c1-8
                                                                       :ARG1 (c1-5 / heroin))))))
      :ARG1 (c1-16 / i)
      :degree (c1-2 / so)
      :ARG1-of c1-11
      :ARG0 (c1-10 / fear-01
                   :quant (c1-12 / few)
                   :mod (c1-3 / back)))

# ::snt Congratulations Lea
# ::tokens ["Congratulations", "Lea"]
# ::lemmas ["Congratulations", "Lea"]
(c3-3 / say-01
      :ARG1 (c3-0 / congratulate-01)
      :ARG2 (c3-2 / person
                  :name (c3-1 / name
                              :op1 "Lea")))

# ::snt Congrats
# ::tokens ["Congrats"]
# ::lemmas ["Congrats"]
(c4-0 / congratulate-01)

# ::snt So Wonderful to hear! Happiness and Best Wishes to them Both!
# ::tokens ["So", "Wonderful", "to", "hear", "!", "Happiness", "and", "Best", "Wishes", "to", "them", "Both", "!"]
# ::lemmas ["so", "wonderful", "to", "hear", "!", "happiness", "and", "Best", "Wishes", "to", "they", "both", "!"]
(c5-1 / multi-sentence
      :snt1 (c5-7 / wonderful-03
                  :ARG1 (c5-4 / hear-01)
                  :degree (c5-2 / so))
      :snt2 (c5-10 / and
                   :op1 (c5-8 / happy-01
                              :ARG1 (c5-9 / they
                                          :quant (c5-0 / both)))
                   :op2 (c5-6 / wish-01
                              :ARG1 (c5-12 / thing
                                           :ARG1-of (c5-3 / have-degree-91
                                                          :ARG2 (c5-11 / good-02
                                                                       :ARG1 c5-12)
                                                          :ARG3 (c5-5 / most))))))

# ::snt will design amazing clickable HTML email design for you. contact
# ::tokens ["will", "design", "amazing", "clickable", "HTML", "email", "design", "for", "you", ".", "contact"]
# ::lemmas ["will", "design", "amazing", "clickable", "HTML", "email", "design", "for", "you", ".", "contact"]
(c6-1 / multi-sentence
      :snt1 (c6-7 / design-01
                  :ARG0 (c6-5 / i)
                  :ARG1 (c6-2 / email-01
                              :mod (c6-3 / hyperlink-01
                                         :ARG3 (c6-8 / url-entity
                                                     :value "http://www.christianforums.com"))
                              :ARG1-of (c6-4 / click-01))
                  :beneficiary (c6-0 / you)
                  :mod (c6-6 / amazing))
      :snt2 (c6-9 / contact-01))

# ::snt That is a BEAUTIFUL ring!!!
# ::tokens ["That", "is", "a", "BEAUTIFUL", "ring", "!", "!", "!"]
# ::lemmas ["that", "be", "a", "BEAUTIFUL", "ring", "!", "!", "!"]
(c7-1 / beautiful-02
      :ARG1 (c7-0 / ring
                  :domain (c7-2 / that))
      :mode expressive)

# ::snt Im glad she found happiness and love again. No words to describe that ring except for WOW
# ::tokens ["I", "m", "glad", "she", "found", "happiness", "and", "love", "again", ".", "No", "words", "to", "describe", "that", "ring", "except", "for", "WOW"]
# ::lemmas ["i", "m", "glad", "she", "find", "happiness", "and", "love", "again", ".", "no", "word", "to", "describe", "that", "ring", "except", "for", "WOW"]
(c8-1 / multi-sentence
      :snt1 (c8-13 / glad-02
                   :ARG0 (c8-0 / find-01
                               :ARG0 (c8-2 / she)
                               :ARG1 (c8-12 / and
                                            :op1 (c8-6 / happy-01
                                                       :ARG1 c8-2)
                                            :op2 (c8-7 / love-01
                                                       :ARG0 c8-2))
                               :mod (c8-11 / again))
                   :ARG1 (c8-14 / i))
      :snt2 (c8-9 / word
                  :ARG2-of (c8-3 / describe-01
                                 :ARG1 (c8-4 / ring
                                             :mod (c8-10 / that)))
                  :ARG2-of (c8-5 / except-01
                                 :ARG1 (c8-8 / wow
                                             :mode expressive))
                  :polarity -))

# ::snt I suppose she could take a page out Juliettes playbook that way she can be with him forever
# ::tokens ["I", "suppose", "she", "could", "take", "a", "page", "out", "Juliettes", "playbook", "that", "way", "she", "can", "be", "with", "him", "forever"]
# ::lemmas ["i", "suppose", "she", "could", "take", "a", "page", "out", "Juliettes", "playbook", "that", "way", "she", "can", "be", "with", "he", "forever"]
(c9-5 / suppose-01
      :ARG0 (c9-10 / i)
      :ARG1 (c9-6 / possible-01
                  :ARG1 (c9-11 / take-01
                               :ARG0 (c9-0 / she)
                               :ARG1 (c9-4 / page)
                               :ARG3 (c9-13 / playbook
                                            :poss (c9-7 / person
                                                        :name (c9-3 / name
                                                                    :op1 "Juliettes")))
                               :manner (c9-8 / way
                                             :mod (c9-14 / that)))
                  :ARG0-of (c9-9 / cause-01
                                 :ARG1 (c9-12 / possible-01
                                              :ARG1 (c9-2 / be-with-10
                                                          :ARG0 c9-0
                                                          :ARG1 c9-7
                                                          :duration (c9-1 / forever))))))

# ::snt Was she supposed to never find love again and remain single for the rest of her life?
# ::tokens ["Was", "she", "supposed", "to", "never", "find", "love", "again", "and", "remain", "single", "for", "the", "rest", "of", "her", "life", "?"]
# ::lemmas ["be", "she", "suppose", "to", "never", "find", "love", "again", "and", "remain", "single", "for", "the", "rest", "of", "her", "life", "?"]
(c10-2 / suppose-02
       :polarity (c10-8 / amr-unknown)
       :ARG1 (c10-0 / she)
       :ARG2 (c10-7 / and
                    :op1 (c10-1 / find-01
                                :ARG0 c10-0
                                :ARG1 (c10-5 / love-01
                                             :ARG1 c10-0)
                                :time (c10-4 / ever)
                                :mod (c10-6 / again)
                                :polarity -)
                    :op2 (c10-3 / remain-01
                                :ARG1 c10-0
                                :ARG3 (c10-11 / single-03
                                              :ARG1 c10-0)
                                :duration (c10-9 / rest
                                                 :part-of (c10-10 / live-01
                                                                  :ARG0 c10-0)))))

# ::snt she will always love corey no matter what.
# ::tokens ["she", "will", "always", "love", "corey", "no", "matter", "what", "."]
# ::lemmas ["she", "will", "always", "love", "corey", "no", "matter", "what", "."]
(c11-4 / love-01
       :ARG0 (c11-1 / she)
       :ARG1 (c11-3 / person
                    :name (c11-0 / name
                                 :op1 "Corey"))
       :time (c11-5 / always)
       :ARG1-of (c11-2 / regardless-91))

# ::snt So I guess no more Corey monteith tribute tweets?
# ::tokens ["So", "I", "guess", "no", "more", "Corey", "monteith", "tribute", "tweets", "?"]
# ::lemmas ["so", "i", "guess", "no", "more", "Corey", "monteith", "tribute", "tweet", "?"]
(c12-4 / cause-01
       :ARG1 (c12-8 / guess-01
                    :ARG0 (c12-6 / i)
                    :ARG1 (c12-5 / tweet-02
                                 :ARG1 (c12-7 / tribute
                                              :beneficiary (c12-3 / person
                                                                  :name (c12-0 / name
                                                                               :op1 "Corey"
                                                                               :op2 "Monteith")))
                                 :quant (c12-1 / more)
                                 :polarity -)
                    :polarity (c12-2 / amr-unknown)))

# ::snt Saudadea do cory
# ::tokens ["Saudadea", "do", "cory"]
# ::lemmas ["Saudadea", "do", "cory"]
(c13-0 / country
       :name (c13-1 / name
                    :op1 "Saudadea")
       :mod (c13-2 / chief))

# ::snt respondido quem o boy hehehhe
# ::tokens ["respondido", "quem", "o", "boy", "hehehhe"]
# ::lemmas ["respondido", "quem", "o", "boy", "hehehhe"]
(c14-0 / respond-01
       :ARG0 (c14-3 / i)
       :ARG1 (c14-1 / boy
                    :mod (c14-2 / hehe
                                :mode expressive)))
