# ::snt Too bad he'll be dead before they go to college.
# ::tokens ["Too", "bad", "he", "'ll", "be", "dead", "before", "they", "go", "to", "college", "."]
# ::lemmas ["too", "bad", "he", "'ll", "be", "dead", "before", "they", "go", "to", "college", "."]
(c1-1 / have-degree-91
      :ARG1 (c1-7 / die-01
                  :ARG1 (c1-4 / he)
                  :time (c1-0 / before
                              :op1 (c1-6 / go-02
                                         :ARG0 (c1-5 / they)
                                         :ARG4 (c1-3 / college))))
      :ARG2 (c1-2 / bad-07
                  :ARG1 c1-7)
      :ARG3 (c1-8 / too))

# ::snt Sorry but who gives a flying f"ck?
# ::tokens ["Sorry", "but", "who", "gives", "a", "flying", "f\"ck", "?"]
# ::lemmas ["sorry", "but", "who", "give", "a", "flying", "f\"ck", "?"]
(c2-3 / contrast-01
      :ARG1 (c2-1 / sorry-01)
      :ARG2 (c2-5 / give-16
                  :ARG0 (c2-4 / amr-unknown)
                  :ARG1 (c2-0 / fuck
                              :ARG1-of (c2-2 / fly-01))
                  :ARG2 c2-4))

# ::snt my favrt celeb . Amal . happy for them
# ::tokens ["my", "favrt", "celeb", ".", "Amal", ".", "happy", "for", "them"]
# ::lemmas ["my", "favrt", "celeb", ".", "Amal", ".", "happy", "for", "they"]
(c3-1 / multi-sentence
      :snt1 (c3-5 / celebrity
                  :ARG1-of (c3-0 / favor-01
                                 :ARG0 (c3-6 / i)))
      :snt2 (c3-3 / happy-01
                  :ARG0 (c3-7 / they)
                  :ARG1 (c3-4 / person
                              :name (c3-2 / name
                                          :op1 "Amal"))))

# ::snt Can you blame him, his wife is gorgeous . He must also like making them
# ::tokens ["Can", "you", "blame", "him", ",", "his", "wife", "is", "gorgeous", ".", "He", "must", "also", "like", "making", "them"]
# ::lemmas ["can", "you", "blame", "he", ",", "his", "wife", "be", "gorgeous", ".", "he", "must", "also", "like", "make", "they"]
(c4-2 / multi-sentence
      :snt1 (c4-7 / possible-01
                  :ARG1 (c4-0 / blame-01
                              :ARG0 (c4-1 / you)
                              :ARG1 (c4-6 / he)
                              :ARG1-of (c4-10 / cause-01
                                              :ARG0 (c4-15 / gorgeous
                                                           :domain (c4-3 / person
                                                                         :ARG0-of (c4-12 / have-rel-role-91
                                                                                         :ARG1 c4-6
                                                                                         :ARG2 (c4-11 / wife))))))
                  :snt2 (c4-13 / infer-01
                               :ARG1 (c4-8 / like-01
                                           :ARG0 (c4-5 / he)
                                           :ARG1 (c4-9 / make-01
                                                       :ARG0 c4-5
                                                       :ARG1 (c4-14 / they))
                                           :mod (c4-4 / also)))))

# ::snt When you meet a right person , why not?
# ::tokens ["When", "you", "meet", "a", "right", "person", ",", "why", "not", "?"]
# ::lemmas ["when", "you", "meet", "a", "right", "person", ",", "why", "not", "?"]
(c5-4 / cause-01
      :ARG0 (c5-5 / amr-unknown)
      :ARG1 (c5-1 / meet-02
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-3 / person
                              :ARG1-of (c5-2 / right-03))
                  :polarity -))

# ::snt Riveting, just riveting. But you are much better at these fluff stories than real news. You should just stick to entertainment
# ::tokens ["Riveting", ",", "just", "riveting", ".", "But", "you", "are", "much", "better", "at", "these", "fluff", "stories", "than", "real", "news", ".", "You", "should", "just", "stick", "to", "entertainment"]
# ::lemmas ["riveting", ",", "just", "riveting", ".", "but", "you", "be", "much", "well", "at", "these", "fluff", "story", "than", "real", "news", ".", "you", "should", "just", "stick", "to", "entertainment"]
(c6-11 / multi-sentence
       :snt1 (c6-9 / and
                   :op1 (c6-18 / rivet-01
                               :manner (c6-6 / just))
                   :op2 (c6-13 / contrast-01
                               :ARG2 (c6-4 / have-degree-91
                                           :ARG1 (c6-3 / you)
                                           :ARG2 (c6-10 / good-03
                                                        :ARG1 c6-3
                                                        :ARG2 (c6-0 / story
                                                                    :mod (c6-16 / fluff)
                                                                    :mod (c6-7 / this)))
                                           :ARG3 (c6-5 / more
                                                       :quant (c6-14 / much))
                                           :ARG4 (c6-17 / news
                                                        :ARG1-of (c6-1 / real-04)))))
       :snt2 (c6-12 / recommend-01
                    :ARG1 (c6-2 / stick-01
                                :ARG1 (c6-8 / you)
                                :ARG2 (c6-19 / entertain-01
                                             :ARG1 c6-8)
                                :mod (c6-15 / just))))

# ::snt Ha Ha, how dare he change his mind &amp; then have the temerity to have !!!
# ::tokens ["Ha", "Ha", ",", "how", "dare", "he", "change", "his", "mind", "&", "amp", ";", "then", "have", "the", "temerity", "to", "have", "!", "!", "!"]
# ::lemmas ["Ha", "Ha", ",", "how", "dare", "he", "change", "his", "mind", "&", "amp", ";", "then", "have", "the", "temerity", "to", "have", "!", "!", "!"]
(c7-9 / and
      :op1 (c7-10 / dare-01
                  :ARG1 (c7-3 / he)
                  :ARG2 (c7-4 / change-01
                              :ARG0 c7-3
                              :ARG1 (c7-8 / and
                                          :op1 (c7-0 / mind-05
                                                     :ARG0 c7-3)
                                          :op2 (c7-5 / amp)))
                  :manner (c7-1 / amr-unknown)
                  :mod (c7-6 / ha
                             :mode expressive))
      :op2 (c7-2 / have-03
                 :ARG0 c7-3
                 :ARG1 (c7-7 / temerity
                             :purpose c7-4)
                 :time (c7-11 / then)))

# ::snt Maybe he's deeply unhappy.
# ::tokens ["Maybe", "he", "'s", "deeply", "unhappy", "."]
# ::lemmas ["maybe", "he", "be", "deeply", "unhappy", "."]
(c8-3 / possible-01
      :ARG1 (c8-2 / happy-01
                  :ARG1 (c8-0 / he)
                  :ARG1-of (c8-1 / deep-02)
                  :polarity -))

# ::snt I said the same thing...until I had mine. It changes everything.
# ::tokens ["I", "said", "the", "same", "thing", "...", "until", "I", "had", "mine", ".", "It", "changes", "everything", "."]
# ::lemmas ["i", "say", "the", "same", "thing", "...", "until", "i", "have", "mine", ".", "it", "change", "everything", "."]
(c9-1 / multi-sentence
      :snt1 (c9-2 / say-01
                  :ARG0 (c9-7 / i)
                  :ARG1 (c9-8 / thing
                              :ARG1-of (c9-0 / same-01))
                  :time (c9-9 / until
                              :op1 (c9-5 / have-03
                                         :ARG0 c9-7
                                         :ARG1 (c9-10 / thing
                                                      :poss c9-7))))
      :snt2 (c9-6 / change-01
                  :ARG0 (c9-3 / it)
                  :ARG1 (c9-4 / everything)))

# ::snt People change when they find the right person.
# ::tokens ["People", "change", "when", "they", "find", "the", "right", "person", "."]
# ::lemmas ["people", "change", "when", "they", "find", "the", "right", "person", "."]
(c10-4 / change-01
       :ARG1 (c10-3 / person)
       :time (c10-0 / find-01
                    :ARG0 c10-3
                    :ARG1 (c10-1 / person
                                 :ARG1-of (c10-2 / right-03))))

# ::snt I hope the kids grow up to be Republicans just to drive their old man crazy. It would be poetic justice. I wonder if he'd still love them.
# ::tokens ["I", "hope", "the", "kids", "grow", "up", "to", "be", "Republicans", "just", "to", "drive", "their", "old", "man", "crazy", ".", "It", "would", "be", "poetic", "justice", ".", "I", "wonder", "if", "he", "'d", "still", "love", "them", "."]
# ::lemmas ["i", "hope", "the", "kid", "grow", "up", "to", "be", "Republicans", "just", "to", "drive", "their", "old", "man", "crazy", ".", "it", "would", "be", "poetic", "justice", ".", "i", "wonder", "if", "he", "would", "still", "love", "they", "."]
(c11-15 / multi-sentence
        :snt1 (c11-7 / hope-01
                     :ARG0 (c11-24 / i)
                     :ARG1 (c11-13 / grow-up-04
                                   :ARG1 (c11-21 / person
                                                 :ARG0-of (c11-23 / have-rel-role-91
                                                                  :ARG1 (c11-16 / person)
                                                                  :ARG2 (c11-8 / kid)))
                                   :ARG2 (c11-3 / person
                                                :ARG0-of (c11-6 / have-org-role-91
                                                                :ARG1 (c11-2 / political-party
                                                                             :name (c11-20 / name
                                                                                           :op1 "Republican"))))
                                   :purpose (c11-25 / drive-02
                                                    :ARG0 c11-3
                                                    :ARG1 (c11-9 / man
                                                                 :mod (c11-4 / old)
                                                                 :poss c11-21)
                                                    :ARG2 (c11-17 / crazy-03
                                                                  :ARG1 c11-9)
                                                    :mod (c11-10 / just))))
        :snt2 (c11-19 / justice
                      :mod (c11-11 / poetry)
                      :domain (c11-5 / it))
        :snt3 (c11-22 / wonder-01
                      :ARG0 (c11-14 / i)
                      :ARG1 (c11-1 / love-01
                                   :ARG0 (c11-18 / he)
                                   :ARG1 (c11-12 / they)
                                   :mod (c11-0 / still))))

# ::snt Those poor kids. I'd be shocked if the parents are married in years. Hollywood marriages fail because so many celebs love themselves most.
# ::tokens ["Those", "poor", "kids", ".", "I", "'d", "be", "shocked", "if", "the", "parents", "are", "married", "in", "years", ".", "Hollywood", "marriages", "fail", "because", "so", "many", "celebs", "love", "themselves", "most", "."]
# ::lemmas ["those", "poor", "kid", ".", "i", "would", "be", "shock", "if", "the", "parent", "be", "marry", "in", "years", ".", "Hollywood", "marriage", "fail", "because", "so", "many", "celebs", "love", "themselves", "most", "."]
(c12-12 / multi-sentence
        :snt1 (c12-7 / kid
                     :mod (c12-23 / poor)
                     :mod (c12-10 / that))
        :snt2 (c12-0 / shock-01
                     :ARG0 (c12-6 / marry-01
                                  :ARG1 (c12-13 / person
                                                :ARG0-of (c12-8 / have-rel-role-91
                                                                :ARG2 (c12-2 / parent)))
                                  :time (c12-9 / after
                                               :quant (c12-19 / multiple
                                                              :op1 (c12-17 / temporal-quantity
                                                                           :unit (c12-4 / year)
                                                                           :quant 1))))
                     :ARG1 (c12-25 / i))
        :snt3 (c12-21 / fail-01
                      :ARG1 (c12-15 / marry-01
                                    :mod (c12-18 / market-sector
                                                 :name (c12-22 / name
                                                               :op1 "Hollywood")))
                      :ARG1-of (c12-16 / cause-01
                                       :ARG0 (c12-1 / love-01
                                                    :ARG0 (c12-11 / celebrity
                                                                  :ARG1-of (c12-24 / have-quant-91
                                                                                   :ARG2 (c12-20 / many)
                                                                                   :ARG3 (c12-3 / so))
                                                                  :ARG1-of c12-1)
                                                    :ARG2-of (c12-5 / have-degree-91
                                                                    :ARG1 c12-11
                                                                    :ARG3 (c12-14 / most))))))

# ::snt that was then he's ready to be a father now congratulate the man
# ::tokens ["that", "was", "then", "he", "'s", "ready", "to", "be", "a", "father", "now", "congratulate", "the", "man"]
# ::lemmas ["that", "be", "then", "he", "be", "ready", "to", "be", "a", "father", "now", "congratulate", "the", "man"]
(c13-9 / and
       :op1 (c13-3 / ready-02
                   :ARG1 (c13-4 / he)
                   :ARG2 (c13-6 / have-rel-role-91
                                :ARG0 c13-4
                                :ARG2 (c13-0 / father))
                   :time (c13-7 / then))
       :op2 (c13-5 / congratulate-01
                   :ARG0 (c13-8 / i)
                   :ARG1 (c13-1 / man)
                   :time (c13-2 / now)))

# ::snt Love is strange
# ::tokens ["Love", "is", "strange"]
# ::lemmas ["Love", "be", "strange"]
(c14-1 / strange
       :domain (c14-0 / love-01))

# ::snt What he meant was 'I don't want to slip and have kids with these models I keep on speed dial'. Leo could learn something.
# ::tokens ["What", "he", "meant", "was", "'", "I", "do", "n't", "want", "to", "slip", "and", "have", "kids", "with", "these", "models", "I", "keep", "on", "speed", "dial", "'", ".", "Leo", "could", "learn", "something", "."]
# ::lemmas ["what", "he", "mean", "be", "'", "i", "do", "not", "want", "to", "slip", "and", "have", "kid", "with", "these", "model", "i", "keep", "on", "speed", "dial", "'", ".", "Leo", "could", "learn", "something", "."]
(c15-10 / multi-sentence
        :snt1 (c15-5 / mean-02
                     :ARG0 (c15-6 / he)
                     :ARG1 (c15-16 / want-01
                                   :ARG0 (c15-17 / he)
                                   :ARG1 (c15-9 / and
                                                :op1 (c15-0 / slip-02
                                                            :ARG1 c15-17)
                                                :op2 (c15-4 / have-05
                                                            :ARG0 c15-17
                                                            :ARG1 (c15-7 / kid)
                                                            :accompanier (c15-13 / model
                                                                                 :mod (c15-8 / this)
                                                                                 :ARG1-of (c15-12 / keep-02
                                                                                                  :ARG0 c15-17
                                                                                                  :manner (c15-18 / dial
                                                                                                                  :mod (c15-3 / speed))))))
                                   :polarity -))
        :snt2 (c15-15 / possible-01
                      :ARG1 (c15-1 / learn-01
                                   :ARG0 (c15-11 / person
                                                 :name (c15-14 / name
                                                               :op1 "Leo"))
                                   :ARG1 (c15-2 / something))))

# ::snt congratulations!!
# ::tokens ["congratulations", "!", "!"]
# ::lemmas ["congratulation", "!", "!"]
(c16-0 / congratulate-01)

# ::snt They will have nannies so, no, he won't take care of the kids. Nannies and boarding school.
# ::tokens ["They", "will", "have", "nannies", "so", ",", "no", ",", "he", "wo", "n't", "take", "care", "of", "the", "kids", ".", "Nannies", "and", "boarding", "school", "."]
# ::lemmas ["they", "will", "have", "nanny", "so", ",", "no", ",", "he", "will", "not", "take", "care", "of", "the", "kid", ".", "nanny", "and", "boarding", "school", "."]
(c17-2 / multi-sentence
       :snt1 (c17-6 / have-03
                    :ARG0 (c17-12 / they)
                    :ARG1 (c17-7 / person
                                 :ARG0-of (c17-1 / nanny-01))
                    :ARG0-of (c17-10 / cause-01
                                     :ARG1 (c17-13 / care-03
                                                   :ARG0 (c17-11 / he)
                                                   :ARG1 (c17-8 / kid)
                                                   :polarity -)))
       :snt2 (c17-5 / and
                    :op1 (c17-3 / person
                                :ARG0-of (c17-9 / nanny-01))
                    :op2 (c17-4 / school
                                :mod (c17-0 / board-03))))

# ::snt Cutting edge reporting
# ::tokens ["Cutting", "edge", "reporting"]
# ::lemmas ["cut", "edge", "report"]
(c18-0 / cut-edge-03
       :ARG1 (c18-1 / report-01))

# ::snt Congratulations to the Cloonies
# ::tokens ["Congratulations", "to", "the", "Cloonies"]
# ::lemmas ["congratulation", "to", "the", "cloonie"]
(c19-0 / congratulate-01
       :ARG1 (c19-2 / person
                    :name (c19-1 / name
                                 :op1 "Cloonies")))

# ::snt It seems he didn't have something else either after they used IVF to have babies
# ::tokens ["It", "seems", "he", "did", "n't", "have", "something", "else", "either", "after", "they", "used", "IVF", "to", "have", "babies"]
# ::lemmas ["it", "seem", "he", "do", "not", "have", "something", "else", "either", "after", "they", "use", "IVF", "to", "have", "baby"]
(c20-3 / seem-01
       :ARG1 (c20-5 / have-03
                    :ARG0 (c20-7 / he)
                    :ARG1 (c20-0 / something
                                 :mod (c20-4 / else))
                    :time (c20-9 / after
                                 :op1 (c20-10 / use-01
                                              :ARG0 (c20-8 / they)
                                              :ARG1 (c20-11 / thing
                                                            :name (c20-2 / name
                                                                         :op1 "IVF"))
                                              :ARG2 (c20-6 / have-05
                                                           :ARG0 c20-8
                                                           :ARG1 (c20-1 / baby))))
                    :polarity -))

# ::snt Running short on news, huh?
# ::tokens ["Running", "short", "on", "news", ",", "huh", "?"]
# ::lemmas ["run", "short", "on", "news", ",", "huh", "?"]
(c21-0 / run-07
       :ARG1 (c21-3 / short-06
                    :ARG2 (c21-2 / news))
       :ARG1-of (c21-1 / request-confirmation-91))

# ::snt Congrats Mr. and Mrs. Clooney
# ::tokens ["Congrats", "Mr.", "and", "Mrs.", "Clooney"]
# ::lemmas ["Congrats", "Mr.", "and", "Mrs.", "Clooney"]
(c22-4 / congratulate-01
       :ARG1 (c22-5 / and
                    :op1 (c22-3 / person
                                :name (c22-0 / name
                                             :op1 "Mr."
                                             :op2 "Clooney"))
                    :op2 (c22-1 / person
                                :name (c22-2 / name
                                             :op1 "Mrs."
                                             :op2 "Clooney"))))

# ::snt Never say never. My sons are my best friends.
# ::tokens ["Never", "say", "never", ".", "My", "sons", "are", "my", "best", "friends", "."]
# ::lemmas ["never", "say", "never", ".", "my", "son", "be", "my", "good", "friend", "."]
(c23-3 / multi-sentence
       :snt1 (c23-4 / say-01
                    :ARG0 (c23-2 / you)
                    :ARG1 (c23-6 / have-polarity-91
                                 :time (c23-5 / ever)
                                 :ARG2 -)
                    :polarity -
                    :mode imperative)
       :snt2 (c23-10 / have-rel-role-91
                     :ARG0 (c23-7 / person
                                  :ARG1 (c23-11 / i)
                                  :ARG2 (c23-0 / son)
                                  :ARG1-of c23-3)
                     :ARG0 c23-7
                     :ARG0 c23-3)
       :ARG1 c23-11
       :ARG2 (c23-1 / friend
                    :ARG1-of (c23-8 / have-degree-91
                                    :ARG2 (c23-12 / good-02
                                                  :ARG1 c23-1)
                                    :ARG3 (c23-9 / most))
                    :ARG2-of c23-3))

# ::snt Poor bugger.....wait he wants them now?
# ::tokens ["Poor", "bugger", ".....", "wait", "he", "wants", "them", "now", "?"]
# ::lemmas ["poor", "bugger", ".....", "wait", "he", "want", "they", "now", "?"]
(c24-6 / wait-01
       :ARG1 (c24-0 / bugger
                    :mod (c24-4 / poor))
       :ARG2 (c24-5 / want-01
                    :ARG0 (c24-3 / he)
                    :ARG1 (c24-7 / they)
                    :time (c24-1 / now))
       :polarity (c24-2 / amr-unknown))

# ::snt He finally found the right partner!
# ::tokens ["He", "finally", "found", "the", "right", "partner", "!"]
# ::lemmas ["he", "finally", "find", "the", "right", "partner", "!"]
(c25-0 / find-01
       :ARG0 (c25-3 / he)
       :ARG1 (c25-4 / person
                    :ARG1-of (c25-2 / right-02)
                    :ARG0-of (c25-6 / have-rel-role-91
                                    :ARG1 c25-3
                                    :ARG2 (c25-1 / partner)))
       :time (c25-5 / final))

# ::snt FOR THE SAME YEARS, I HOPED HE WAS RIGHT.
# ::tokens ["FOR", "THE", "SAME", "YEARS", ",", "I", "HOPED", "HE", "WAS", "RIGHT", "."]
# ::lemmas ["for", "THE", "SAME", "YEARS", ",", "i", "hope", "he", "be", "right", "."]
(c26-3 / hope-01
       :ARG0 (c26-5 / i)
       :ARG1 (c26-2 / right-06
                    :ARG1 (c26-4 / he))
       :time (c26-0 / year
                    :ARG1-of (c26-1 / same-01)))

# ::snt Well that'll teach him. I'm sure he will find fatherhood suits him.
# ::tokens ["Well", "that", "'ll", "teach", "him", ".", "I", "'m", "sure", "he", "will", "find", "fatherhood", "suits", "him", "."]
# ::lemmas ["well", "that", "'ll", "teach", "he", ".", "i", "be", "sure", "he", "will", "find", "fatherhood", "suit", "he", "."]
(c27-2 / multi-sentence
       :snt1 (c27-8 / teach-01
                    :ARG0 (c27-10 / that)
                    :ARG2 (c27-4 / he)
                    :mod (c27-6 / well))
       :snt2 (c27-3 / sure-02
                    :ARG0 (c27-9 / i)
                    :ARG1 (c27-0 / find-01
                                 :ARG0 (c27-7 / he)
                                 :ARG1 (c27-5 / fatherhood
                                              :ARG1-of (c27-1 / suit-01
                                                              :ARG2 c27-7)))))

# ::snt Bullied by the media and mainstream society he finally gave in and did his duty as a consumer by producing more consumers.
# ::tokens ["Bullied", "by", "the", "media", "and", "mainstream", "society", "he", "finally", "gave", "in", "and", "did", "his", "duty", "as", "a", "consumer", "by", "producing", "more", "consumers", "."]
# ::lemmas ["bully", "by", "the", "medium", "and", "mainstream", "society", "he", "finally", "give", "in", "and", "do", "his", "duty", "as", "a", "consumer", "by", "produce", "more", "consumer", "."]
(c28-12 / and
        :op1 (c28-13 / give-in-09
                     :ARG0 (c28-5 / he
                                  :ARG1-of (c28-1 / bully-01
                                                  :ARG0 (c28-11 / and
                                                                :op1 (c28-2 / media)
                                                                :op2 (c28-4 / society
                                                                            :ARG1-of (c28-6 / mainstream-02)))))
                     :time (c28-0 / final))
        :op2 (c28-14 / do-02
                     :ARG0 c28-5
                     :ARG1 (c28-9 / duty
                                  :poss c28-5
                                  :prep-as (c28-7 / person
                                                  :ARG0-of (c28-8 / consume-01)))
                     :manner (c28-3 / produce-01
                                    :ARG0 c28-5
                                    :ARG1 (c28-15 / person
                                                  :ARG0-of (c28-16 / consume-01)
                                                  :quant (c28-10 / more)))))

# ::snt he was giving us fake news?
# ::tokens ["he", "was", "giving", "us", "fake", "news", "?"]
# ::lemmas ["he", "be", "give", "we", "fake", "news", "?"]
(c29-5 / give-01
       :polarity (c29-4 / amr-unknown)
       :ARG0 (c29-2 / he)
       :ARG1 (c29-1 / news
                    :ARG1-of (c29-0 / fake-02))
       :ARG2 (c29-3 / we))

# ::snt Hhhhhh
# ::tokens ["Hhhhhh"]
# ::lemmas ["hhhhhh"]
(c30-0 / hmm
       :mode expressive)

# ::snt george who ?
# ::tokens ["george", "who", "?"]
# ::lemmas ["george", "who", "?"]
(c31-1 / person
       :name (c31-0 / name
                    :op1 "George")
       :polarity (c31-2 / amr-unknown)
       :mode expressive)

# ::snt For years,presstitute and huriyat were not raid but both twin are on raid
# ::tokens ["For", "years", ",", "presstitute", "and", "huriyat", "were", "not", "raid", "but", "both", "twin", "are", "on", "raid"]
# ::lemmas ["for", "years", ",", "presstitute", "and", "huriyat", "be", "not", "raid", "but", "both", "twin", "be", "on", "raid"]
(c33-7 / contrast-01
       :ARG1 (c33-4 / raid-01
                    :ARG1 (c33-9 / and
                                 :op1 (c33-6 / preserve-01)
                                 :op2 (c33-5 / event
                                             :name (c33-2 / name
                                                          :op1 "Huriyat")))
                    :duration (c33-3 / multiple
                                     :op1 (c33-8 / temporal-quantity
                                                 :unit (c33-1 / year)
                                                 :quant 1))
                    :polarity -)
       :ARG2 (c33-10 / raid-01
                     :ARG1 (c33-11 / twin
                                   :mod (c33-0 / both))))
