# ::snt U guys were amazing! See u again next year xx
# ::tokens ["U", "guys", "were", "amazing", "!", "See", "u", "again", "next", "year", "xx"]
# ::lemmas ["u", "guy", "be", "amazing", "!", "see", "u", "again", "next", "year", "xx"]
(c1-2 / multi-sentence
      :snt1 (c1-6 / amaze-01
                  :ARG0 (c1-7 / guy
                              :mod (c1-1 / you)))
      :snt2 (c1-4 / see-01
                  :ARG0 (c1-8 / you)
                  :time (c1-0 / year
                              :mod (c1-3 / next))
                  :mod (c1-5 / again)
                  :mode imperative))

# ::snt Thankyou again for an awesome night! Xx
# ::tokens ["Thankyou", "again", "for", "an", "awesome", "night", "!", "Xx"]
# ::lemmas ["Thankyou", "again", "for", "an", "awesome", "night", "!", "Xx"]
(c2-2 / thank-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-0 / you)
      :ARG2 (c2-1 / night
                  :ARG0-of (c2-4 / awe-01))
      :mod (c2-5 / again))

# ::snt Def see you there!!! X x
# ::tokens ["Def", "see", "you", "there", "!", "!", "!", "X", "x"]
# ::lemmas ["Def", "see", "you", "there", "!", "!", "!", "x", "x"]
(c3-1 / multi-sentence
      :snt1 (c3-2 / see-01
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-5 / you)
                  :location (c3-4 / there)
                  :mod (c3-6 / definite)
                  :mode imperative)
      :snt2 (c3-3 / emoticon
                  :mod c3-3
                  :value "x"
                  :value "x"))

# ::snt Please wish me a happy birthday x x x
# ::tokens ["Please", "wish", "me", "a", "happy", "birthday", "x", "x", "x"]
# ::lemmas ["please", "wish", "i", "a", "happy", "birthday", "x", "x", "x"]
(c4-3 / wish-01
      :ARG0 (c4-1 / you)
      :ARG1 (c4-2 / happy-01
                  :ARG1 (c4-0 / birthday
                              :poss (c4-4 / i
                                          :ARG2-of c4-3)))
      :polite +)

# ::snt Great interview and another photo shoot showing artistic Rob. He's amazing.
# ::tokens ["Great", "interview", "and", "another", "photo", "shoot", "showing", "artistic", "Rob", ".", "He", "'s", "amazing", "."]
# ::lemmas ["great", "interview", "and", "another", "photo", "shoot", "show", "artistic", "Rob", ".", "he", "be", "amazing", "."]
(c5-1 / multi-sentence
      :snt1 (c5-10 / and
                   :op1 (c5-9 / interview-01
                              :mod (c5-11 / great))
                   :op2 (c5-3 / shoot-02
                              :ARG1 (c5-7 / photo)
                              :mod (c5-12 / another)
                              :ARG0-of (c5-0 / show-01
                                             :ARG1 (c5-2 / person
                                                         :name (c5-4 / name
                                                                     :op1 "Rob")
                                                         :mod (c5-8 / artistic)))))
      :snt2 (c5-5 / amaze-01
                  :ARG1 (c5-6 / he)))

# ::snt Lol! I had read he might play young before. I was hoping for a release date like September.
# ::tokens ["Lol", "!", "I", "had", "read", "he", "might", "play", "young", "before", ".", "I", "was", "hoping", "for", "a", "release", "date", "like", "September", "."]
# ::lemmas ["Lol", "!", "i", "have", "read", "he", "might", "play", "young", "before", ".", "i", "be", "hope", "for", "a", "release", "date", "like", "September", "."]
(c6-2 / multi-sentence
      :snt1 (c6-8 / laugh-01
                  :ARG0 (c6-13 / i)
                  :manner (c6-15 / loud)
                  :mode expressive)
      :snt2 (c6-6 / read-01
                  :ARG0 (c6-5 / i)
                  :ARG1 (c6-9 / possible-01
                              :ARG1 (c6-3 / play-01
                                          :ARG0 (c6-7 / he)
                                          :manner (c6-1 / young)))
                  :time (c6-0 / before))
      :snt3 (c6-12 / hope-01
                   :ARG0 (c6-16 / i)
                   :ARG1 (c6-14 / date
                                :time-of (c6-4 / release-01)
                                :ARG1-of (c6-10 / resemble-01
                                                :ARG2 (c6-11 / date-entity
                                                             :month 9)))))

# ::snt Well that tells us nothing I was hoping for real news!
# ::tokens ["Well", "that", "tells", "us", "nothing", "I", "was", "hoping", "for", "real", "news", "!"]
# ::lemmas ["well", "that", "tell", "we", "nothing", "i", "be", "hope", "for", "real", "news", "!"]
(c7-6 / tell-01
      :ARG0 (c7-8 / that)
      :ARG1 (c7-0 / nothing
                  :ARG1-of (c7-2 / hope-01
                                 :ARG0 (c7-7 / i)
                                 :ARG2 (c7-3 / news
                                             :ARG1-of (c7-1 / real-04))))
      :ARG2 (c7-5 / we)
      :mod (c7-4 / well))

# ::snt Thank you for sharing! JH
# ::tokens ["Thank", "you", "for", "sharing", "!", "JH"]
# ::lemmas ["thank", "you", "for", "sharing", "!", "JH"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / thank-01
                  :ARG0 (c8-4 / i)
                  :ARG1 (c8-3 / person
                              :name (c8-0 / name
                                          :op1 "JH"))
                  :ARG2 (c8-2 / share-01
                              :ARG0 c8-3))
      :snt2 c8-3
      :name c8-0
      :op1 "JH")

# ::snt una splendida notizia. Rob un attore completo ed eccezionale che merita solo il meglio. ad maiora
# ::tokens ["una", "splendida", "notizia", ".", "Rob", "un", "attore", "completo", "ed", "eccezionale", "che", "merita", "solo", "il", "meglio", ".", "ad", "maiora"]
# ::lemmas ["una", "splendida", "notizia", ".", "Rob", "un", "attore", "completo", "ed", "eccezionale", "che", "merita", "solo", "il", "meglio", ".", "ad", "maiora"]
(c9-2 / multi-sentence
      :snt1 (c9-0 / opera
                  :name (c9-1 / name
                              :op1 "Lucida"
                              :op2 "Notizia"))
      :snt2 (c9-6 / person
                  :name (c9-5 / name
                              :op1 "Rob")
                  :ARG1-of (c9-11 / accuse-01
                                  :ARG2 (c9-10 / and
                                               :op1 (c9-4 / eccezionale
                                                          :ARG1-of (c9-9 / complete-02)
                                                          :op2-of c9-10)
                                               :ARG1-of (c9-7 / merita-00
                                                              :mod (c9-3 / solo)))
                                  :op3 (c9-12 / meglio
                                              :mod (c9-8 / maiora)))))

# ::snt Oooo, I'd like to win an overnight at the Clarke-Denson cottage; it's right at Lake Ontario's shoreline
# ::tokens ["Oooo", ",", "I", "'d", "like", "to", "win", "an", "overnight", "at", "the", "Clarke", "-", "Denson", "cottage", ";", "it", "'s", "right", "at", "Lake", "Ontario", "'s", "shoreline"]
# ::lemmas ["Oooo", ",", "i", "would", "like", "to", "win", "an", "overnight", "at", "the", "Clarke", "-", "Denson", "cottage", ";", "it", "be", "right", "at", "Lake", "Ontario", "'s", "shoreline"]
(c10-3 / multi-sentence
       :snt1 (c10-9 / like-02
                    :ARG0 (c10-12 / i)
                    :ARG1 (c10-10 / win-01
                                  :ARG0 c10-12
                                  :ARG1 (c10-0 / overnight)
                                  :location (c10-11 / cottage
                                                    :name (c10-4 / name
                                                                 :op1 "Clarke-Denson"
                                                                 :op2 "C cottage")))
                    :mod (c10-1 / oooo
                                :mode expressive))
       :snt2 (c10-2 / be-located-at-91
                    :ARG1 (c10-6 / it)
                    :ARG2 (c10-5 / shoreline
                                 :part-of (c10-13 / lake
                                                  :name (c10-8 / name
                                                               :op1 "Lake"
                                                               :op2 "Ontario")))
                    :mod (c10-7 / right)))

# ::snt dam
# ::tokens ["dam"]
# ::lemmas ["dam"]
(c11-0 / damage-01)

# ::snt I didnt realise you were making a one off appearance
# ::tokens ["I", "did", "nt", "realise", "you", "were", "making", "a", "one", "off", "appearance"]
# ::lemmas ["i", "do", "not", "realise", "you", "be", "make", "a", "one", "off", "appearance"]
(c14-2 / realize-01
       :ARG0 (c14-3 / i)
       :ARG1 (c14-4 / appear-01
                    :ARG1 (c14-1 / you)
                    :mod (c14-0 / one-off))
       :polarity -)

# ::snt Sounds like a plan to me mate lol xxx
# ::tokens ["Sounds", "like", "a", "plan", "to", "me", "mate", "lol", "xxx"]
# ::lemmas ["sound", "like", "a", "plan", "to", "i", "mate", "lol", "xxx"]
(c15-2 / say-01
       :ARG1 (c15-0 / sound-01
                    :ARG2 (c15-3 / plan-01)
                    :ARG3 (c15-5 / i))
       :ARG2 (c15-1 / mate)
       :ARG2-of (c15-4 / laugh-01
                       :ARG0 c15-5
                       :manner (c15-6 / loud)))

# ::snt Eeeeekkkk no worries, if u get vips il buy Nandos! Lol xxx
# ::tokens ["Eeeeekkkk", "no", "worries", ",", "if", "u", "get", "vips", "il", "buy", "Nandos", "!", "Lol", "xxx"]
# ::lemmas ["Eeeeekkkk", "no", "worry", ",", "if", "u", "get", "vip", "il", "buy", "Nandos", "!", "Lol", "xxx"]
(c16-2 / multi-sentence
       :snt1 (c16-10 / worry-02
                     :mod (c16-7 / eeeeekkkk)
                     :polarity -
                     :mode expressive)
       :snt2 (c16-0 / buy-01
                    :ARG0 (c16-1 / you)
                    :ARG1 (c16-8 / product
                                 :name (c16-3 / name
                                              :op1 "Nandos"))
                    :condition (c16-12 / get-01
                                       :ARG0 c16-1
                                       :ARG1 (c16-6 / video))
                    :ARG2-of (c16-9 / laugh-01
                                    :ARG0 (c16-11 / i)
                                    :manner (c16-13 / loud)
                                    :mode expressive)
                    :mode imperative)
       :snt3 (c16-4 / person
                    :name c16-3
                    :op1 "xxx")
       :ARG2-of (c16-5 / sign-01))

# ::snt Haha get paid th mate xxx
# ::tokens ["Haha", "get", "paid", "th", "mate", "xxx"]
# ::lemmas ["Haha", "get", "pay", "th", "mate", "xxx"]
(c17-0 / multi-sentence
       :snt1 (c17-2 / haha
                    :mode expressive)
       :snt2 (c17-1 / say-01
                    :ARG0 (c17-5 / i)
                    :ARG1 (c17-3 / pay-01
                                 :ARG2 (c17-4 / mate
                                              :ARG2-of c17-1))))

# ::snt Bloody hell hope so get on it Hahahaha xx
# ::tokens ["Bloody", "hell", "hope", "so", "get", "on", "it", "Hahahaha", "xx"]
# ::lemmas ["bloody", "hell", "hope", "so", "get", "on", "it", "Hahahaha", "xx"]
(c18-3 / hope-01
       :ARG0 (c18-5 / i)
       :ARG1 (c18-6 / get-05
                    :ARG0 (c18-1 / you
                                 :ARG1-of c18-6)
                    :ARG2 (c18-2 / it)
                    :mode imperative)
       :mod (c18-4 / hell
                   :mod (c18-0 / blood)
                   :mode expressive))

# ::snt U guys were fab! Roll on next year hope vips left when I get paid xxx
# ::tokens ["U", "guys", "were", "fab", "!", "Roll", "on", "next", "year", "hope", "vips", "left", "when", "I", "get", "paid", "xxx"]
# ::lemmas ["U", "guy", "be", "fab", "!", "roll", "on", "next", "year", "hope", "vip", "leave", "when", "i", "get", "pay", "xxx"]
(c19-2 / multi-sentence
       :snt1 (c19-10 / guy
                     :mod (c19-12 / u)
                     :mod (c19-0 / fab))
       :snt2 (c19-4 / roll-01
                    :ARG0 (c19-1 / you)
                    :time (c19-11 / year
                                  :mod (c19-3 / next))
                    :ARG0-of (c19-8 / cause-01
                                    :ARG1 (c19-5 / hope-01
                                                 :ARG0 c19-1
                                                 :ARG1 (c19-6 / leave-17
                                                              :ARG0 (c19-9 / i)
                                                              :time (c19-7 / pay-01
                                                                           :ARG2 c19-9))))
                    :mode imperative))

# ::snt Was bloody awesome!!! Thanks for an awesome night, roll on nxt year!! xx
# ::tokens ["Was", "bloody", "awesome", "!", "!", "!", "Thanks", "for", "an", "awesome", "night", ",", "roll", "on", "nxt", "year", "!", "!", "xx"]
# ::lemmas ["be", "bloody", "awesome", "!", "!", "!", "thank", "for", "an", "awesome", "night", ",", "roll", "on", "nxt", "year", "!", "!", "xx"]
(c20-2 / multi-sentence
       :snt1 (c20-4 / awesome-02
                    :degree (c20-0 / bloody)
                    :mode expressive)
       :snt2 (c20-7 / thank-01
                    :ARG0 (c20-6 / i)
                    :ARG1 (c20-1 / you)
                    :ARG2 (c20-3 / night
                                 :ARG0-of (c20-8 / awe-01)))
       :snt3 (c20-5 / roll-01
                    :ARG0 c20-1
                    :time (c20-9 / year
                                 :mod (c20-10 / this))
                    :mode imperative))

# ::snt hahahahaha
# ::tokens ["hahahahaha"]
# ::lemmas ["hahahahaha"]
(c21-0 / haha
       :mode expressive)

# ::snt IS THIS A MONSTER INSECT MOVIE?
# ::tokens ["IS", "THIS", "A", "MONSTER", "INSECT", "MOVIE", "?"]
# ::lemmas ["be", "this", "a", "monster", "INSECT", "movie", "?"]
(c23-0 / movie
       :polarity (c23-1 / amr-unknown)
       :ARG0-of (c23-3 / insure-02
                       :ARG1 (c23-2 / monster))
       :domain (c23-4 / this))

# ::snt I think Mihaly is a new character, but you know what? He does have a scar on his face!
# ::tokens ["I", "think", "Mihaly", "is", "a", "new", "character", ",", "but", "you", "know", "what", "?", "He", "does", "have", "a", "scar", "on", "his", "face", "!"]
# ::lemmas ["i", "think", "Mihaly", "be", "a", "new", "character", ",", "but", "you", "know", "what", "?", "he", "do", "have", "a", "scar", "on", "his", "face", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-9 / contrast-01
                    :ARG1 (c24-11 / think-01
                                  :ARG0 (c24-10 / i)
                                  :ARG1 (c24-13 / character
                                                :ARG1-of (c24-3 / new-01)
                                                :domain (c24-6 / person
                                                               :name (c24-5 / name
                                                                            :op1 "Mihaly")
                                                               :part (c24-0 / face))))
                    :ARG2 (c24-7 / know-01
                                 :ARG0 (c24-1 / you)
                                 :ARG1 (c24-12 / thing)))
       :snt2 (c24-4 / scar-01
                    :ARG1 (c24-8 / he
                                 :part c24-0)))

# ::snt Couldn't find the one where she sprayed him lol
# ::tokens ["Could", "n't", "find", "the", "one", "where", "she", "sprayed", "him", "lol"]
# ::lemmas ["could", "not", "find", "the", "one", "where", "she", "spray", "he", "lol"]
(c26-5 / possible-01
       :ARG1 (c26-0 / find-01
                    :ARG1 (c26-2 / one
                                 :location-of (c26-3 / spray-01
                                                     :ARG0 (c26-1 / she)
                                                     :ARG1 (c26-4 / he)))
                    :ARG2-of (c26-6 / laugh-01
                                    :ARG0 (c26-7 / i)
                                    :manner (c26-8 / loud)
                                    :mode expressive))
       :polarity -)

# ::snt Me to I'd have spayed him back!
# ::tokens ["Me", "to", "I", "'d", "have", "spayed", "him", "back", "!"]
# ::lemmas ["i", "to", "i", "would", "have", "spay", "he", "back", "!"]
(c27-3 / spay-01
       :ARG0 (c27-2 / i)
       :ARG1 (c27-1 / he)
       :direction (c27-0 / back)
       :mode expressive)

# ::snt Freezing and it stung so bad. And the director not sprayed on his body but his pretty face!!!i will want to punch him too lol
# ::tokens ["Freezing", "and", "it", "stung", "so", "bad", ".", "And", "the", "director", "not", "sprayed", "on", "his", "body", "but", "his", "pretty", "face!!!i", "will", "want", "to", "punch", "him", "too", "lol"]
# ::lemmas ["Freezing", "and", "it", "sting", "so", "bad", ".", "and", "the", "director", "not", "spray", "on", "his", "body", "but", "his", "pretty", "face!!!i", "will", "want", "to", "punch", "he", "too", "lol"]
(c28-13 / multi-sentence
        :snt1 (c28-9 / and
                     :op1 (c28-16 / freeze-01)
                     :op2 (c28-0 / sting-01
                                 :ARG0 (c28-21 / it)
                                 :ARG1-of (c28-12 / bad-05
                                                  :degree (c28-5 / so))))
        :snt2 (c28-8 / and
                     :op2 (c28-4 / spray-01
                                 :ARG0 (c28-17 / person
                                               :ARG0-of (c28-7 / have-org-role-91
                                                               :ARG2 (c28-22 / director))
                                               :part (c28-1 / body
                                                            :ARG2-of c28-4))
                                 :ARG1-of (c28-15 / contrast-01
                                                  :ARG2 (c28-18 / face
                                                                :mod (c28-14 / pretty)
                                                                :poss c28-17))
                                 :polarity -))
        :snt3 (c28-19 / want-01
                      :ARG0 (c28-6 / i)
                      :ARG1 (c28-3 / punch-01
                                   :ARG0 c28-6
                                   :ARG1 (c28-20 / he
                                                 :part c28-18)
                                   :mod (c28-10 / too)
                                   :ARG2-of (c28-2 / laugh-01
                                                   :ARG0 c28-6
                                                   :manner (c28-11 / loud)
                                                   :mode expressive))))

# ::snt The only time he felt like punching a director. It must have been freezing poor Rob!
# ::tokens ["The", "only", "time", "he", "felt", "like", "punching", "a", "director", ".", "It", "must", "have", "been", "freezing", "poor", "Rob", "!"]
# ::lemmas ["the", "only", "time", "he", "feel", "like", "punch", "a", "director", ".", "it", "must", "have", "be", "freeze", "poor", "Rob", "!"]
(c29-2 / multi-sentence
       :snt1 (c29-11 / time
                     :mod (c29-0 / only)
                     :time-of (c29-1 / feel-06
                                     :ARG0 (c29-5 / he)
                                     :ARG1 (c29-6 / punch-01
                                                  :ARG0 c29-5
                                                  :ARG1 (c29-3 / person
                                                               :ARG0-of (c29-9 / have-org-role-91
                                                                               :ARG2 (c29-12 / director))))))
       :snt2 (c29-10 / infer-01
                     :ARG1 (c29-7 / freeze-01
                                  :ARG1 (c29-13 / person
                                                :name (c29-4 / name
                                                             :op1 "Rob")
                                                :mod (c29-8 / poor)))))

# ::snt Well that's original.
# ::tokens ["Well", "that", "'s", "original", "."]
# ::lemmas ["well", "that", "be", "original", "."]
(c30-0 / original
       :domain (c30-2 / that)
       :mod (c30-1 / well))

# ::snt Also that's not what I meant but ok
# ::tokens ["Also", "that", "'s", "not", "what", "I", "meant", "but", "ok"]
# ::lemmas ["also", "that", "be", "not", "what", "i", "mean", "but", "ok"]
(c31-2 / contrast-01
       :ARG1 (c31-1 / mean-02
                    :ARG0 (c31-4 / i)
                    :ARG1 (c31-3 / that)
                    :mod (c31-5 / also)
                    :polarity -)
       :ARG2 (c31-0 / okay-01))

# ::snt No it's not been confirmed. They said new pokemon they wont add a lot of brand new never before seen pokemon into a old region (Exception for the new one in LGPE)
# ::tokens ["No", "it", "'s", "not", "been", "confirmed", ".", "They", "said", "new", "pokemon", "they", "wo", "nt", "add", "a", "lot", "of", "brand", "new", "never", "before", "seen", "pokemon", "into", "a", "old", "region", "(", "Exception", "for", "the", "new", "one", "in", "LGPE", ")"]
# ::lemmas ["no", "it", "be", "not", "be", "confirm", ".", "they", "say", "new", "pokemon", "they", "will", "not", "add", "a", "lot", "of", "brand", "new", "never", "before", "see", "pokemon", "into", "a", "old", "region", "(", "exception", "for", "the", "new", "one", "in", "LGPE", ")"]
(c32-11 / multi-sentence
        :snt1 (c32-14 / confirm-01
                      :ARG1 (c32-20 / it)
                      :polarity -)
        :snt2 (c32-0 / say-01
                     :ARG0 (c32-7 / they)
                     :ARG1 (c32-6 / add-02
                                  :ARG0 c32-7
                                  :ARG1 (c32-18 / pokemon
                                                :ARG1-of (c32-15 / new-01)
                                                :quant (c32-1 / lot)
                                                :ARG1-of (c32-2 / see-01
                                                                :time (c32-17 / ever)
                                                                :time (c32-10 / before
                                                                              :op1 (c32-13 / now))
                                                                :polarity -))
                                  :ARG2 (c32-16 / region
                                                :mod (c32-3 / old))
                                  :polarity -))
        :snt3 (c32-8 / except-01
                     :ARG1 (c32-12 / person
                                   :ARG0-of (c32-4 / have-org-role-91
                                                   :ARG1 (c32-9 / company
                                                                :name (c32-19 / name
                                                                              :op1 "LGPE"))
                                                   :ARG2 (c32-5 / member)))))

# ::snt There! I corrected your CONFIRMED LEAK: You're Welcome! "No it's not it's been confirmed new Kanto pokemon"
# ::tokens ["There", "!", "I", "corrected", "your", "CONFIRMED", "LEAK", ":", "You", "'re", "Welcome", "!", "\"", "No", "it", "'s", "not", "it", "'s", "been", "confirmed", "new", "Kanto", "pokemon", "\""]
# ::lemmas ["there", "!", "i", "correct", "your", "confirmed", "LEAK", ":", "you", "be", "welcome", "!", "\"", "no", "it", "be", "not", "it", "be", "be", "confirm", "new", "Kanto", "pokemon", "\""]
(c33-2 / multi-sentence
       :snt1 (c33-0 / be-located-at-91
                    :ARG2 (c33-11 / there))
       :snt2 (c33-7 / correct-01
                    :ARG0 (c33-10 / i)
                    :ARG1 (c33-6 / leak-01
                                 :ARG0 (c33-1 / you)
                                 :ARG1-of (c33-13 / confirm-01))
                    :snt3 (c33-8 / welcome-01
                                 :ARG1 (c33-12 / you))
                    :snt4 (c33-9 / confirm-01
                                 :ARG1 (c33-3 / new-01
                                              :ARG1 (c33-4 / animal
                                                           :name (c33-5 / name
                                                                        :op1 "Kanto"
                                                                        :op2 "Chewy")))
                                 :polarity -)))

# ::snt Stop please no one likes you
# ::tokens ["Stop", "please", "no", "one", "likes", "you"]
# ::lemmas ["stop", "please", "no", "one", "like", "you"]
(c34-2 / stop-01
       :ARG0 (c34-0 / you)
       :ARG1-of (c34-4 / cause-01
                       :ARG0 (c34-3 / like-01
                                    :ARG0 (c34-1 / no-one)
                                    :ARG1 c34-0))
       :mode imperative
       :polite +)

# ::snt No it's not it's been confirmed new pokemon
# ::tokens ["No", "it", "'s", "not", "it", "'s", "been", "confirmed", "new", "pokemon"]
# ::lemmas ["no", "it", "be", "not", "it", "be", "be", "confirm", "new", "pokemon"]
(c35-0 / confirm-01
       :ARG1 (c35-1 / new-01
                    :ARG1 (c35-2 / pokemon))
       :polarity -)

# ::snt Mt. Silver is still Mt. Silver!!! because Mountains . . .
# ::tokens ["Mt.", "Silver", "is", "still", "Mt.", "Silver", "!", "!", "!", "because", "Mountains", ".", ".", "."]
# ::lemmas ["Mt.", "Silver", "be", "still", "Mt.", "Silver", "!", "!", "!", "because", "mountain", ".", ".", "."]
(c36-1 / mountain
       :domain (c36-3 / mountain
                      :name (c36-0 / name
                                   :op1 "Mt."
                                   :op2 "Silver"))
       :mod (c36-2 / still)
       :ARG1-of (c36-4 / cause-01
                       :ARG0 (c36-5 / mountain)))

# ::snt Get up, Issa!!
# ::tokens ["Get", "up", ",", "Issa", "!", "!"]
# ::lemmas ["get", "up", ",", "Issa", "!", "!"]
(c37-1 / say-01
       :ARG0 (c37-3 / i)
       :ARG1 (c37-4 / get-05
                    :ARG1 (c37-2 / person
                                 :name (c37-0 / name
                                              :op1 "Issa"))
                    :ARG2 (c37-5 / up)
                    :mode imperative)
       :ARG2 c37-2)

# ::snt "...PATTINSON: You have definitely known the same level of celebrity. I saw you walking through Halifax with people chasing you down at the organic grocery.DAFOE: Well, thats my crowd."
# ::tokens ["\"", "...", "PATTINSON", ":", "You", "have", "definitely", "known", "the", "same", "level", "of", "celebrity", ".", "I", "saw", "you", "walking", "through", "Halifax", "with", "people", "chasing", "you", "down", "at", "the", "organic", "grocery", ".", "DAFOE", ":", "Well", ",", "that", "s", "my", "crowd", ".", "\""]
# ::lemmas ["\"", "...", "pattinson", ":", "you", "have", "definitely", "know", "the", "same", "level", "of", "celebrity", ".", "i", "see", "you", "walk", "through", "Halifax", "with", "people", "chase", "you", "down", "at", "the", "organic", "grocery", ".", "dafoe", ":", "well", ",", "that", "s", "my", "crowd", ".", "\""]
(c38-15 / multi-sentence
        :snt1 (c38-0 / say-01
                     :ARG0 (c38-23 / person
                                   :name (c38-21 / name
                                                 :op1 "PATTINSON"))
                     :ARG1 (c38-9 / know-02
                                  :ARG0 (c38-8 / you)
                                  :ARG1 (c38-1 / level
                                               :mod (c38-18 / celebrity)
                                               :ARG1-of (c38-6 / same-01))
                                  :mod (c38-27 / definite)))
        :snt2 (c38-5 / see-01
                     :ARG0 (c38-26 / i)
                     :ARG1 (c38-10 / and
                                   :op1 (c38-25 / walk-01
                                                :ARG0 (c38-11 / you)
                                                :ARG2 (c38-14 / city-district
                                                              :name (c38-17 / name
                                                                            :op1 "Halifax")))
                                   :op2 (c38-3 / chase-01
                                               :ARG0 (c38-16 / person)
                                               :ARG1 c38-11
                                               :location (c38-12 / grocery
                                                                 :mod (c38-7 / organic))
                                               :direction (c38-19 / down))))
        :snt3 (c38-22 / say-01
                      :ARG0 (c38-4 / person
                                   :name (c38-24 / name
                                                 :op1 "DAFOE"))
                      :ARG1 (c38-20 / crowd
                                    :poss c38-26
                                    :domain (c38-13 / that))
                      :mod (c38-2 / well)))

# ::snt Perfect comment !!!
# ::tokens ["Perfect", "comment", "!", "!", "!"]
# ::lemmas ["perfect", "comment", "!", "!", "!"]
(c39-2 / thing
       :ARG1-of (c39-0 / comment-01)
       :ARG1-of (c39-1 / perfect-02))

# ::snt Hehe
# ::tokens ["Hehe"]
# ::lemmas ["hehe"]
(c40-0 / hehe
       :mode expressive)

# ::snt Agrego a la lista la peli de Zombies de Jim Jarmusch y la nueva peli de animacin de los studios Laika.
# ::tokens ["Agrego", "a", "la", "lista", "la", "peli", "de", "Zombies", "de", "Jim", "Jarmusch", "y", "la", "nueva", "peli", "de", "animacin", "de", "los", "studios", "Laika", "."]
# ::lemmas ["Agrego", "a", "la", "lista", "la", "peli", "de", "Zombies", "de", "Jim", "Jarmusch", "y", "la", "nueva", "peli", "de", "animacin", "de", "los", "studios", "Laika", "."]
(c41-14 / event
        :name (c41-12 / name
                      :op1 "Agrego")
        :manner (c41-2 / list-01
                       :ARG1 (c41-6 / and
                                    :op1 (c41-15 / peli
                                                 :ARG1-of (c41-19 / include-91
                                                                  :ARG2 (c41-17 / work-of-art
                                                                                :name (c41-9 / name
                                                                                             :op1 "Zombies")
                                                                                :ARG1-of (c41-5 / include-91
                                                                                                :ARG2 (c41-3 / work-of-art
                                                                                                             :name (c41-16 / name
                                                                                                                           :op1 "Jim"
                                                                                                                           :op2 "Jarmusch"))))))
                                    :op2 (c41-8 / peli
                                                :ARG1-of (c41-7 / include-91
                                                                :ARG2 (c41-11 / work-of-art
                                                                              :name (c41-10 / name
                                                                                            :op1 "Laika"))))
                                    :op3 (c41-4 / peli
                                                :ARG1-of (c41-0 / include-91
                                                                :ARG2 (c41-1 / work-of-art
                                                                             :name (c41-18 / name
                                                                                           :op1 "Laika"))))
                                    :mod (c41-13 / nueva))))

# ::snt La verdad si
# ::tokens ["La", "verdad", "si"]
# ::lemmas ["La", "verdad", "si"]
(c42-0 / verdad
       :mod (c42-1 / La))

# ::snt A excepcin de una, el prximo ao se viene monumental (espero).
# ::tokens ["A", "excepcin", "de", "una", ",", "el", "prximo", "ao", "se", "viene", "monumental", "(", "espero", ")", "."]
# ::lemmas ["a", "excepcin", "de", "una", ",", "el", "prximo", "ao", "se", "viene", "monumental", "(", "espero", ")", "."]
(c43-0 / multi-sentence
       :snt1 (c43-2 / excelpcin
                    :de (c43-8 / una))
       :snt2 (c43-1 / viene-01
                    :ARG1 (c43-3 / monument)
                    :ARG1-of (c43-5 / cause-01
                                    :ARG0 (c43-4 / prximo
                                                 :domain (c43-6 / it)))
                    :mod (c43-7 / espero)))

# ::snt Ya, este ao es muy aburrido :/
# ::tokens ["Ya", ",", "este", "ao", "es", "muy", "aburrido", ":/"]
# ::lemmas ["ya", ",", "este", "ao", "es", "muy", "aburrido", ":/"]
(c44-2 / say-01
       :ARG0 (c44-4 / i)
       :ARG1 (c44-5 / aburrido
                    :domain (c44-3 / este)
                    :mod (c44-1 / muy))
       :ARG2 (c44-0 / you))

# ::snt Great news willshateon our website
# ::tokens ["Great", "news", "willshateon", "our", "website"]
# ::lemmas ["great", "news", "willshateon", "our", "website"]
(c45-3 / announce-01
       :ARG0 (c45-0 / news
                    :mod (c45-4 / great))
       :ARG1 (c45-2 / website
                    :poss (c45-1 / we)))

# ::snt Hey!
# ::tokens ["Hey", "!"]
# ::lemmas ["hey", "!"]
(c46-0 / hey
       :mode expressive)
