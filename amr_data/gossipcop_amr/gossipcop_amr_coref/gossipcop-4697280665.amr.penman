# ::snt I was at this game!
# ::tokens ["I", "was", "at", "this", "game", "!"]
# ::lemmas ["i", "be", "at", "this", "game", "!"]
(c1-1 / be-located-at-91
      :ARG1 (c1-2 / i)
      :ARG2 (c1-0 / game
                  :mod (c1-3 / this))
      :mode expressive)

# ::snt Or. OR....Donnie "Best Player In Baseball" Murphy.
# ::tokens ["Or", ".", "OR", "....", "Donnie", "\"", "Best", "Player", "In", "Baseball", "\"", "Murphy", "."]
# ::lemmas ["or", ".", "or", "....", "Donnie", "\"", "Best", "Player", "in", "Baseball", "\"", "Murphy", "."]
(c2-0 / or
      :op2 (c2-2 / person
                 :name (c2-1 / name
                             :op1 "Donnie"
                             :op2 "Munty"
                             :op3 "Best"
                             :op4 "Player"
                             :op5 "In"
                             :op6 "Baseball")))

# ::snt Biggest plus could be that now he can't hit .600 against the Cubs anymore?
# ::tokens ["Biggest", "plus", "could", "be", "that", "now", "he", "ca", "n't", "hit", ".600", "against", "the", "Cubs", "anymore", "?"]
# ::lemmas ["big", "plus", "could", "be", "that", "now", "he", "can", "not", "hit", ".600", "against", "the", "Cubs", "anymore", "?"]
(c3-5 / possible-01
      :polarity (c3-9 / amr-unknown)
      :ARG1 (c3-4 / hit-07
                  :ARG0 (c3-6 / he)
                  :ARG1 .600)
      :time (c3-8 / anymore)
      :prep-against (c3-7 / team
                          :name (c3-1 / name
                                      :op1 "Chicago"
                                      :op2 "Cubs"))
      :ARG1-of (c3-3 / have-degree-91
                     :ARG2 (c3-0 / big)
                     :ARG3 (c3-2 / most)))

# ::snt State fair today hahaha I yelled this on my way out
# ::tokens ["State", "fair", "today", "hahaha", "I", "yelled", "this", "on", "my", "way", "out"]
# ::lemmas ["state", "fair", "today", "hahaha", "i", "yell", "this", "on", "my", "way", "out"]
(c4-1 / yell-01
      :ARG0 (c4-4 / i)
      :ARG1 (c4-5 / this)
      :time (c4-3 / way
                  :direction (c4-0 / out)
                  :poss c4-4)
      :mod (c4-2 / haha
                 :mode expressive)
      :time (c4-6 / today))

# ::snt ??
# ::tokens ["?", "?"]
# ::lemmas ["?", "?"]
(c5-0 / amr-unknown)

# ::snt "What did the five fingers say to the face?"
# ::tokens ["\"", "What", "did", "the", "five", "fingers", "say", "to", "the", "face", "?", "\""]
# ::lemmas ["\"", "what", "do", "the", "five", "finger", "say", "to", "the", "face", "?", "\""]
(c6-3 / say-01
      :ARG0 (c6-0 / finger
                  :quant 5)
      :ARG1 (c6-1 / amr-unknown)
      :ARG2 (c6-2 / face))

# ::snt That instant replay tho.
# ::tokens ["That", "instant", "replay", "tho", "."]
# ::lemmas ["that", "instant", "replay", "tho", "."]
(c7-1 / have-concession-91
      :ARG1 (c7-0 / replay-01
                  :mod (c7-2 / instant)
                  :mod (c7-3 / that)))

# ::snt dude at the downtown y showed up in boots and a mesh tee a few weeks ago , we thought it was easy money I got blocked twice. havent gone back since.
# ::tokens ["dude", "at", "the", "downtown", "y", "showed", "up", "in", "boots", "and", "a", "mesh", "tee", "a", "few", "weeks", "ago", ",", "we", "thought", "it", "was", "easy", "money", "I", "got", "blocked", "twice", ".", "have", "nt", "gone", "back", "since", "."]
# ::lemmas ["dude", "at", "the", "downtown", "y", "show", "up", "in", "boot", "and", "a", "mesh", "tee", "a", "few", "weeks", "ago", ",", "we", "think", "it", "be", "easy", "money", "i", "got", "block", "twice", ".", "have", "not", "go", "back", "since", "."]
(c11-10 / multi-sentence
        :snt1 (c11-8 / and
                     :op1 (c11-0 / show-up-02
                                 :ARG1 (c11-20 / dude)
                                 :location (c11-11 / downtown)
                                 :manner (c11-6 / and
                                                :op1 (c11-9 / boot)
                                                :op2 (c11-7 / tee
                                                            :mod (c11-5 / mesh)))
                                 :time (c11-1 / before
                                              :op1 (c11-15 / now)
                                              :quant (c11-14 / few
                                                             :op1 (c11-12 / temporal-quantity
                                                                          :unit (c11-17 / week)
                                                                          :quant 1))))
                     :op2 (c11-18 / think-01
                                  :ARG0 (c11-2 / we)
                                  :ARG1 (c11-16 / easy-05
                                                :ARG1 (c11-13 / money))))
        :snt2 (c11-3 / block-01
                     :ARG1 (c11-19 / i)
                     :time (c11-4 / since)
                     :frequency 2))

# ::snt Totally agree
# ::tokens ["Totally", "agree"]
# ::lemmas ["totally", "agree"]
(c12-2 / agree-01
       :ARG0 (c12-1 / i)
       :degree (c12-0 / total))

# ::snt Not chatting. Ketorah is fine cause she fine, not cause she light. Thats like saying tiny would be ugly if she was dark skinned. Tiny is ugly right now
# ::tokens ["Not", "chatting", ".", "Ketorah", "is", "fine", "cause", "she", "fine", ",", "not", "cause", "she", "light", ".", "That", "s", "like", "saying", "tiny", "would", "be", "ugly", "if", "she", "was", "dark", "skinned", ".", "Tiny", "is", "ugly", "right", "now"]
# ::lemmas ["not", "chat", ".", "Ketorah", "be", "fine", "cause", "she", "fine", ",", "not", "cause", "she", "light", ".", "that", "s", "like", "say", "tiny", "would", "be", "ugly", "if", "she", "be", "dark", "skinned", ".", "tiny", "be", "ugly", "right", "now"]
(c13-8 / multi-sentence
       :snt1 (c13-12 / chat-01
                     :ARG0 (c13-22 / i)
                     :polarity -)
       :snt2 (c13-7 / contrast-01
                    :ARG1 (c13-16 / fine-04
                                  :ARG1 (c13-19 / person
                                                :name (c13-17 / name
                                                              :op1 "Ketorah"))
                                  :ARG1-of (c13-2 / cause-01
                                                  :ARG0 (c13-20 / fine-04
                                                                :ARG1 c13-19)))
                    :ARG2 (c13-21 / fine-04
                                  :ARG1 c13-19
                                  :ARG1-of (c13-15 / cause-01
                                                   :ARG0 (c13-1 / light-06
                                                                :ARG1 c13-19))
                                  :polarity -))
       :snt3 (c13-18 / resemble-01
                     :ARG1 (c13-6 / that)
                     :ARG2 (c13-0 / say-01
                                  :ARG1 (c13-14 / ugly
                                                :domain (c13-9 / person
                                                               :mod (c13-13 / tiny))
                                                :condition (c13-5 / skin
                                                                  :ARG1-of (c13-23 / dark-02)
                                                                  :domain c13-9))))
       :snt4 (c13-11 / ugly
                     :domain (c13-3 / person
                                    :mod c13-13))
       :time (c13-10 / now
                     :mod (c13-4 / right)))

# ::snt Its ok to like her for her music and nothing else
# ::tokens ["Its", "ok", "to", "like", "her", "for", "her", "music", "and", "nothing", "else"]
# ::lemmas ["its", "ok", "to", "like", "she", "for", "her", "music", "and", "nothing", "else"]
(c14-0 / okay-04
       :ARG1 (c14-4 / like-01
                    :ARG1 (c14-2 / she)
                    :purpose (c14-5 / and
                                    :op1 (c14-1 / music
                                                :poss c14-2)
                                    :op2 (c14-3 / else
                                                :polarity -))))

# ::snt Lmaoooo
# ::tokens ["Lmaoooo"]
# ::lemmas ["Lmaoooo"]
(c15-1 / laugh-01
       :ARG0 (c15-2 / i)
       :manner (c15-0 / loud)
       :mode expressive)

# ::snt O iight lmaooo exactly strictly chatting
# ::tokens ["O", "iight", "lmaooo", "exactly", "strictly", "chatting"]
# ::lemmas ["o", "iight", "lmaooo", "exactly", "strictly", "chat"]
(c16-1 / okay-04
       :ARG1 (c16-4 / chat-01
                    :manner (c16-2 / strict
                                   :mod (c16-3 / exact)))
       :mod (c16-0 / oops
                   :mode expressive))

# ::snt Exactly. She loves me.
# ::tokens ["Exactly", ".", "She", "loves", "me", "."]
# ::lemmas ["exactly", ".", "she", "love", "i", "."]
(c17-0 / multi-sentence
       :snt1 (c17-2 / exact)
       :snt2 (c17-3 / love-01
                    :ARG0 (c17-1 / she)
                    :ARG1 (c17-4 / i)))

# ::snt Honestly idk off the top of my head
# ::tokens ["Honestly", "idk", "off", "the", "top", "of", "my", "head"]
# ::lemmas ["honestly", "idk", "off", "the", "top", "of", "my", "head"]
(c18-3 / idk
       :source (c18-4 / top
                      :part-of (c18-1 / head
                                      :part-of (c18-0 / i)))
       :ARG1-of (c18-2 / honest-01))

# ::snt O so u just here for young MA huh she dont like u sis
# ::tokens ["O", "so", "u", "just", "here", "for", "young", "MA", "huh", "she", "do", "nt", "like", "u", "sis"]
# ::lemmas ["o", "so", "u", "just", "here", "for", "young", "MA", "huh", "she", "do", "not", "like", "u", "sis"]
(c19-2 / multi-sentence
       :snt1 (c19-9 / cause-01
                    :ARG1 (c19-6 / here
                                 :domain (c19-1 / you)
                                 :mod (c19-11 / just)
                                 :purpose (c19-7 / person
                                                 :ARG0-of (c19-10 / have-rel-role-91
                                                                  :ARG1 c19-1
                                                                  :ARG2 (c19-8 / mother))
                                                 :mod (c19-12 / young))))
       :snt2 (c19-13 / dislike-01
                     :ARG0 (c19-3 / person
                                  :ARG0-of c19-10
                                  :ARG1 (c19-0 / you)
                                  :ARG2 (c19-4 / sister)))
       :ARG1 c19-0
       :ARG1-of (c19-5 / request-confirmation-91))

# ::snt I think Ive seen u in person before i dont wanna talk about that experience
# ::tokens ["I", "think", "I", "ve", "seen", "u", "in", "person", "before", "i", "do", "nt", "wanna", "talk", "about", "that", "experience"]
# ::lemmas ["i", "think", "i", "ve", "see", "u", "in", "person", "before", "i", "do", "not", "wanna", "talk", "about", "that", "experience"]
(c20-8 / think-01
       :ARG0 (c20-7 / i)
       :ARG1 (c20-2 / see-01
                    :ARG0 c20-7
                    :ARG1 (c20-1 / you)
                    :location (c20-3 / in-person)
                    :time (c20-0 / before))
       :ARG1-of (c20-5 / cause-01
                       :ARG0 (c20-6 / want-01
                                    :ARG0 c20-7
                                    :ARG1 (c20-10 / talk-01
                                                  :ARG0 c20-7
                                                  :ARG1 (c20-4 / experience-01
                                                               :mod (c20-9 / that)))
                                    :polarity -)))

# ::snt You can. Lmao i never said you couldnt. Thats all you
# ::tokens ["You", "can", ".", "Lmao", "i", "never", "said", "you", "could", "nt", ".", "That", "s", "all", "you"]
# ::lemmas ["you", "can", ".", "Lmao", "i", "never", "say", "you", "could", "nt", ".", "that", "s", "all", "you"]
(c21-2 / multi-sentence
       :snt1 (c21-6 / possible-01
                    :ARG1 (c21-1 / you))
       :snt2 (c21-4 / say-01
                    :ARG0 (c21-8 / i)
                    :ARG1 (c21-3 / possible-01
                                 :ARG1 c21-1
                                 :polarity -)
                    :time (c21-5 / ever)
                    :mod (c21-7 / laugh-01
                                :ARG0 c21-8
                                :manner (c21-11 / loud)
                                :mode expressive)
                    :polarity -)
       :snt3 (c21-0 / be-it-08
                    :ARG1 (c21-9 / that)
                    :ARG2 (c21-10 / you)))

# ::snt Matter fact give me a lightskin that niggas gas cuz she lightskin
# ::tokens ["Matter", "fact", "give", "me", "a", "lightskin", "that", "niggas", "gas", "cuz", "she", "lightskin"]
# ::lemmas ["matter", "fact", "give", "i", "a", "lightskin", "that", "niggas", "gas", "cuz", "she", "lightskin"]
(c22-8 / give-01
       :ARG0 (c22-2 / she)
       :ARG1 (c22-6 / gas
                    :mod (c22-7 / that)
                    :mod (c22-1 / niggas))
       :ARG2 (c22-9 / i)
       :ARG1-of (c22-5 / cause-01
                       :ARG0 (c22-4 / lightkin))
       :mod (c22-0 / fact
                   :mod (c22-3 / atter)))

# ::snt Iight idc no more i just wanted to argue to pass the time
# ::tokens ["Iight", "idc", "no", "more", "i", "just", "wanted", "to", "argue", "to", "pass", "the", "time"]
# ::lemmas ["iight", "idc", "no", "more", "i", "just", "want", "to", "argue", "to", "pass", "the", "time"]
(c23-3 / cause-01
       :ARG0 (c23-4 / want-01
                    :ARG0 (c23-6 / i)
                    :ARG1 (c23-7 / argue-01
                                 :ARG0 c23-6
                                 :purpose (c23-2 / pass-03
                                                 :ARG0 c23-6
                                                 :ARG1 (c23-5 / time)))
                    :mod (c23-8 / just))
       :ARG1 (c23-0 / possible-01
                    :ARG1 (c23-1 / idc)
                    :time (c23-9 / anymore)
                    :polarity -))

# ::snt So why cant i say the same thing about a lightskin Jawn i like what the original post is saying is i find lightskin women attractive cuz she lightskin and nothing else
# ::tokens ["So", "why", "ca", "nt", "i", "say", "the", "same", "thing", "about", "a", "lightskin", "Jawn", "i", "like", "what", "the", "original", "post", "is", "saying", "is", "i", "find", "lightskin", "women", "attractive", "cuz", "she", "lightskin", "and", "nothing", "else"]
# ::lemmas ["so", "why", "can", "not", "i", "say", "the", "same", "thing", "about", "a", "lightskin", "Jawn", "i", "like", "what", "the", "original", "post", "be", "say", "be", "i", "find", "lightskin", "woman", "attractive", "cuz", "she", "lightskin", "and", "nothing", "else"]
(c24-14 / multi-sentence
        :snt1 (c24-17 / cause-01
                      :ARG0 (c24-11 / amr-unknown)
                      :ARG1 (c24-22 / possible-01
                                    :ARG1 (c24-0 / say-01
                                                 :ARG0 (c24-24 / i)
                                                 :ARG1 (c24-10 / thing
                                                               :ARG1-of (c24-4 / same-01)
                                                               :topic (c24-15 / person
                                                                              :name (c24-20 / name
                                                                                            :op1 "Jawn"))))
                                    :polarity -))
        :snt2 (c24-1 / like-01
                     :ARG0 (c24-6 / i)
                     :ARG1 (c24-18 / thing
                                   :ARG1-of (c24-3 / say-01
                                                   :ARG0 (c24-2 / post-01
                                                                :mod (c24-5 / original)))
                                   :domain (c24-19 / find-02
                                                   :ARG0 c24-6
                                                   :ARG1 (c24-9 / attract-01
                                                                :ARG0 (c24-23 / woman
                                                                              :mod (c24-12 / lightskin)))
                                                   :ARG1-of (c24-13 / cause-01
                                                                    :ARG0 (c24-8 / and
                                                                                 :op1 (c24-7 / lightskin
                                                                                             :domain c24-23)
                                                                                 :op2 (c24-16 / nothing
                                                                                              :mod (c24-21 / else))))))))

# ::snt And? Lmao she fine as hell
# ::tokens ["And", "?", "Lmao", "she", "fine", "as", "hell"]
# ::lemmas ["and", "?", "Lmao", "she", "fine", "as", "hell"]
(c25-1 / multi-sentence
       :snt1 (c25-5 / and
                    :op2 (c25-4 / amr-unknown))
       :snt2 (c25-0 / fine-04
                    :ARG1 (c25-2 / she)
                    :degree (c25-3 / as-hell)))

# ::snt Its has nothing to do with her skin tone lmao. Shes cute. Like a teddy graham
# ::tokens ["Its", "has", "nothing", "to", "do", "with", "her", "skin", "tone", "lmao", ".", "She", "s", "cute", ".", "Like", "a", "teddy", "graham"]
# ::lemmas ["its", "have", "nothing", "to", "do", "with", "her", "skin", "tone", "lmao", ".", "she", "s", "cute", ".", "like", "a", "teddy", "graham"]
(c26-1 / multi-sentence
       :snt1 (c26-6 / have-to-do-with-04
                    :ARG0 (c26-10 / it)
                    :ARG1 (c26-11 / tone
                                  :mod (c26-3 / skin)
                                  :poss (c26-0 / she))
                    :ARG2 (c26-2 / nothing)
                    :ARG1-of (c26-7 / laugh-01
                                    :ARG0 (c26-4 / i)
                                    :manner (c26-13 / loud)
                                    :mode expressive))
       :snt2 (c26-8 / cute
                    :domain (c26-9 / he))
       :snt3 (c26-5 / resemble-01
                    :ARG1 c26-9
                    :ARG2 (c26-12 / graham
                                  :mod (c26-14 / teddy))))

# ::snt She has a super fat nose and her eyes look to close together
# ::tokens ["She", "has", "a", "super", "fat", "nose", "and", "her", "eyes", "look", "to", "close", "together"]
# ::lemmas ["she", "have", "a", "super", "fat", "nose", "and", "her", "eye", "look", "to", "close", "together"]
(c27-8 / and
       :op1 (c27-5 / have-03
                   :ARG0 (c27-3 / she
                                :part (c27-2 / nose
                                             :ARG1-of (c27-0 / fat-03
                                                             :degree (c27-1 / super))
                                             :ARG1-of c27-5)))
       :op2 (c27-6 / look-04
                   :ARG0 (c27-4 / eye
                                :part c27-2)
                   :ARG1 (c27-7 / close-10
                                :ARG1 c27-4
                                :ARG2 c27-2)))

# ::snt Shes ugly sis just like u can say Im gassing up a shawty cuz shes lightskin Im here to tell u your gassing up young MA
# ::tokens ["She", "s", "ugly", "sis", "just", "like", "u", "can", "say", "I", "m", "gassing", "up", "a", "shawty", "cuz", "she", "s", "lightskin", "I", "m", "here", "to", "tell", "u", "your", "gassing", "up", "young", "MA"]
# ::lemmas ["she", "s", "ugly", "sis", "just", "like", "u", "can", "say", "i", "m", "gas", "up", "a", "shawty", "cuz", "she", "s", "lightskin", "i", "m", "here", "to", "tell", "u", "your", "gas", "up", "young", "MA"]
(c28-5 / resemble-01
       :ARG1 (c28-6 / possible-01
                    :ARG1 (c28-4 / say-01
                                 :ARG0 (c28-1 / you)
                                 :ARG1 (c28-12 / gas-up-03
                                               :ARG0 (c28-10 / i)
                                               :ARG1 (c28-0 / shawty)
                                               :ARG1-of (c28-8 / cause-01
                                                               :ARG0 (c28-7 / know-01
                                                                            :ARG0 c28-10
                                                                            :ARG1 (c28-11 / gas-up-03
                                                                                          :ARG0 c28-1
                                                                                          :ARG1 (c28-3 / person
                                                                                                       :mod (c28-13 / young)
                                                                                                       :mod (c28-14 / state
                                                                                                                    :name (c28-2 / name
                                                                                                                                 :op1 "MA"))))))))
                    :mod (c28-9 / just)
                    :ARG2-of c28-5)
       :ARG1 c28-4)

# ::snt That man is not cute Charlie aint never been a MCM lmao
# ::tokens ["That", "man", "is", "not", "cute", "Charlie", "ai", "nt", "never", "been", "a", "MCM", "lmao"]
# ::lemmas ["that", "man", "be", "not", "cute", "Charlie", "ai", "not", "never", "be", "a", "MCM", "lmao"]
(c29-1 / and
       :op1 (c29-6 / cute
                   :domain (c29-0 / man
                                  :mod (c29-8 / that))
                   :polarity -)
       :op2 (c29-3 / have-mod-91
                   :ARG1 (c29-7 / i)
                   :ARG2 (c29-4 / MCM)
                   :time (c29-2 / ever)
                   :ARG2-of (c29-5 / laugh-01
                                   :ARG0 c29-7
                                   :manner (c29-9 / loud)
                                   :mode expressive)
                   :polarity -))

# ::snt No she wouldnt. YOURE buggin
# ::tokens ["No", "she", "would", "nt", ".", "YOURE", "buggin"]
# ::lemmas ["no", "she", "would", "nt", ".", "YOURE", "buggin"]
(c30-2 / multi-sentence
       :snt1 (c30-4 / do-02
                    :ARG0 (c30-3 / she)
                    :polarity -)
       :snt2 (c30-0 / buggin
                    :domain (c30-1 / you)
                    :mode expressive))

# ::snt you DID NOT have to throw Charlie in this
# ::tokens ["you", "DID", "NOT", "have", "to", "throw", "Charlie", "in", "this"]
# ::lemmas ["you", "do", "not", "have", "to", "throw", "Charlie", "in", "this"]
(c31-0 / obligate-01
       :ARG1 (c31-1 / you)
       :ARG2 (c31-4 / throw-01
                    :ARG0 c31-1
                    :ARG1 (c31-3 / person
                                 :name (c31-2 / name
                                              :op1 "Charlie"))
                    :ARG2 (c31-5 / this))
       :polarity -)

# ::snt If Young MA was dark skin she would look just like flava flav yall bugging lmaoo
# ::tokens ["If", "Young", "MA", "was", "dark", "skin", "she", "would", "look", "just", "like", "flava", "flav", "y", "all", "bugging", "lmaoo"]
# ::lemmas ["if", "Young", "MA", "be", "dark", "skin", "she", "would", "look", "just", "like", "flava", "flav", "you", "all", "bug", "lmaoo"]
(c32-6 / look-02
       :ARG0 (c32-5 / person
                    :name (c32-3 / name
                                 :op1 "Young"
                                 :op2 "MA")
                    :part (c32-4 / skin
                                 :ARG1-of (c32-12 / dark-02)))
       :ARG1 (c32-0 / flava
                    :mod (c32-7 / flav))
       :mod (c32-9 / just)
       :ARG0-of (c32-1 / buggle-01
                       :ARG1 (c32-2 / you
                                    :mod (c32-11 / all)))
       :ARG2-of (c32-13 / laugh-01
                        :ARG0 (c32-10 / i)
                        :manner (c32-8 / loud)
                        :mode expressive)
       :condition c32-4)

# ::snt That shit was never not funny to me
# ::tokens ["That", "shit", "was", "never", "not", "funny", "to", "me"]
# ::lemmas ["that", "shit", "be", "never", "not", "funny", "to", "i"]
(c33-0 / funny
       :domain (c33-1 / shit
                      :mod (c33-4 / that))
       :time (c33-2 / ever)
       :beneficiary (c33-3 / i)
       :polarity -)

# ::snt I know bro lol I know
# ::tokens ["I", "know", "bro", "lol", "I", "know"]
# ::lemmas ["i", "know", "bro", "lol", "i", "know"]
(c35-3 / know-01
       :ARG0 (c35-5 / i)
       :ARG1 (c35-6 / know-01
                    :ARG0 c35-5
                    :ARG2 (c35-2 / person
                                 :ARG0-of (c35-1 / have-rel-role-91
                                                 :ARG1 c35-5
                                                 :ARG2 (c35-0 / bro))))
       :ARG2-of (c35-4 / laugh-01
                       :ARG0 c35-5
                       :manner (c35-7 / loud)))

# ::snt Bruh
# ::tokens ["Bruh"]
# ::lemmas ["Bruh"]
(c36-0 / bruh
       :mode expressive)

# ::snt That dude was fucking hilarious.
# ::tokens ["That", "dude", "was", "fucking", "hilarious", "."]
# ::lemmas ["that", "dude", "be", "fuck", "hilarious", "."]
(c37-2 / hilarious
       :domain (c37-0 / dude
                      :mod (c37-3 / that))
       :mod (c37-1 / fucking))

# ::snt Folk if a nigga has the audacity to slap me, he ready to see God
# ::tokens ["Folk", "if", "a", "nigga", "has", "the", "audacity", "to", "slap", "me", ",", "he", "ready", "to", "see", "God"]
# ::lemmas ["folk", "if", "a", "nigga", "have", "the", "audacity", "to", "slap", "i", ",", "he", "ready", "to", "see", "God"]
(c38-4 / ready-01
       :ARG1 (c38-0 / folk)
       :ARG2 (c38-3 / see-01
                    :ARG0 c38-0
                    :ARG1 (c38-6 / person
                                 :name (c38-2 / name
                                              :op1 "God")))
       :condition (c38-5 / have-03
                         :ARG0 (c38-7 / nigga)
                         :ARG1 (c38-9 / audacity
                                      :purpose (c38-1 / slap-01
                                                      :ARG0 c38-7
                                                      :ARG1 (c38-8 / i)))))

# ::snt Such a great quote
# ::tokens ["Such", "a", "great", "quote"]
# ::lemmas ["such", "a", "great", "quote"]
(c39-1 / quote-01
       :mod (c39-0 / great
                   :mod (c39-2 / such)))

# ::snt Fuck your couch
# ::tokens ["Fuck", "your", "couch"]
# ::lemmas ["fuck", "your", "couch"]
(c40-0 / fuck-01
       :ARG1 (c40-1 / couch
                    :poss (c40-2 / you))
       :mode expressive)

# ::snt Oh damn
# ::tokens ["Oh", "damn"]
# ::lemmas ["oh", "damn"]
(c41-0 / damn
       :mod (c41-1 / oh)
       :mode expressive)

# ::snt Ghost killed him
# ::tokens ["Ghost", "killed", "him"]
# ::lemmas ["ghost", "kill", "he"]
(c42-2 / kill-01
       :ARG0 (c42-0 / ghost)
       :ARG1 (c42-1 / he))

# ::snt This dude killed him in this prison
# ::tokens ["This", "dude", "killed", "him", "in", "this", "prison"]
# ::lemmas ["this", "dude", "kill", "he", "in", "this", "prison"]
(c43-1 / kill-01
       :ARG0 (c43-4 / dude
                    :mod (c43-3 / this))
       :ARG1 (c43-0 / he)
       :location (c43-2 / prison
                        :mod (c43-5 / this)))

# ::snt How he die?
# ::tokens ["How", "he", "die", "?"]
# ::lemmas ["how", "he", "die", "?"]
(c44-0 / die-01
       :ARG1 (c44-1 / he)
       :manner (c44-2 / amr-unknown))

# ::snt He was a janitor or something
# ::tokens ["He", "was", "a", "janitor", "or", "something"]
# ::lemmas ["he", "be", "a", "janitor", "or", "something"]
(c45-0 / or
       :op1 (c45-2 / janitor
                   :domain (c45-1 / he))
       :op2 (c45-3 / something))

# ::snt He was in it?
# ::tokens ["He", "was", "in", "it", "?"]
# ::lemmas ["he", "be", "in", "it", "?"]
(c46-0 / he
       :polarity (c46-2 / amr-unknown)
       :location (c46-1 / it))

# ::snt One of my favorites
# ::tokens ["One", "of", "my", "favorites"]
# ::lemmas ["One", "of", "my", "favorite"]
(c47-3 / include-91
       :ARG1 (c47-0 / one)
       :ARG2 (c47-4 / thing
                    :ARG1-of (c47-1 / favor-01
                                    :ARG0 (c47-2 / i))))

# ::snt Yessir! With Patrice O'Neal...Respect.
# ::tokens ["Yessir", "!", "With", "Patrice", "O'Neal", "...", "Respect", "."]
# ::lemmas ["Yessir", "!", "with", "Patrice", "O'Neal", "...", "respect", "."]
(c49-2 / multi-sentence
       :snt1 (c49-0 / yessir
                    :mode expressive)
       :snt2 (c49-3 / respect-01
                    :accompanier (c49-4 / person
                                        :name (c49-1 / name
                                                     :op1 "Patrice"
                                                     :op2 "O'Neal"))))
