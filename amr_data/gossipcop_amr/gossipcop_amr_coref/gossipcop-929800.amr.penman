# ::snt Yes!!
# ::tokens ["Yes", "!", "!"]
# ::lemmas ["yes", "!", "!"]
(c1-0 / yes
      :mode expressive)

# ::snt Me happy to hear will be back for season
# ::tokens ["Me", "happy", "to", "hear", "will", "be", "back", "for", "season"]
# ::lemmas ["i", "happy", "to", "hear", "will", "be", "back", "for", "season"]
(c2-2 / happy-01
      :ARG0 (c2-4 / hear-01
                  :ARG1 (c2-0 / be-located-at-91
                              :ARG2 (c2-3 / back)
                              :time (c2-1 / season)))
      :ARG1 (c2-5 / i))

# ::snt Cant wait
# ::tokens ["Ca", "nt", "wait"]
# ::lemmas ["can", "nt", "wait"]
(c3-0 / wait-01
      :ARG1 (c3-1 / you)
      :ARG1-of (c3-2 / possible-01))

# ::snt Blink twice if you need help
# ::tokens ["Blink", "twice", "if", "you", "need", "help"]
# ::lemmas ["Blink", "twice", "if", "you", "need", "help"]
(c4-1 / black-07
      :ARG0 (c4-2 / you)
      :ord (c4-0 / ordinal-entity
                 :value 2)
      :condition (c4-3 / need-01
                       :ARG0 c4-2
                       :ARG1 (c4-4 / help-01
                                   :ARG2 c4-2))
      :mode imperative)

# ::snt Yay
# ::tokens ["Yay"]
# ::lemmas ["yay"]
(c6-0 / yay)

# ::snt Encore heureux!
# ::tokens ["Encore", "heureux", "!"]
# ::lemmas ["encore", "heureux", "!"]
(c7-2 / introduce-02
      :ARG0 (c7-1 / you)
      :ARG1 (c7-0 / heureux)
      :mode imperative)

# ::snt !!!! YESSSS!
# ::tokens ["!", "!", "!", "!", "YESSSS", "!"]
# ::lemmas ["!", "!", "!", "!", "YESSSS", "!"]
(c8-0 / yes
      :mode expressive)

# ::snt Otherwise the plotting against Richonne scene would make no sense
# ::tokens ["Otherwise", "the", "plotting", "against", "Richonne", "scene", "would", "make", "no", "sense"]
# ::lemmas ["otherwise", "the", "plotting", "against", "Richonne", "scene", "would", "make", "no", "sense"]
(c9-3 / sense-02
      :ARG1 (c9-0 / scene
                  :mod (c9-5 / plot-01
                             :ARG2 (c9-2 / person
                                         :name (c9-1 / name
                                                     :op1 "Richonne"))))
      :condition (c9-4 / have-polarity-91
                       :ARG2 -)
      :polarity -)

# ::snt !!!!!!
# ::tokens ["!", "!", "!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!", "!", "!"]
(c10-0 / thing
       :mode expressive)

# ::snt the best news of the year
# ::tokens ["the", "best", "news", "of", "the", "year"]
# ::lemmas ["the", "good", "news", "of", "the", "year"]
(c11-1 / news
       :ARG1-of (c11-3 / have-degree-91
                       :ARG2 (c11-4 / good-02
                                    :ARG1 c11-1)
                       :ARG3 (c11-2 / most)
                       :ARG5 (c11-0 / year)))

# ::snt OMFG ! YESSSSSS ! SHE HAD ME WORRIED FOR A MINUTE THERE ! WHEW ! SUCH A RELIEF ! IM SO HAPPY SHES COMING BACK ! TWD WOULDNT BE THE SAME WITHOUT LAUREN !
# ::tokens ["OMFG", "!", "YESSSSSS", "!", "SHE", "HAD", "ME", "WORRIED", "FOR", "A", "MINUTE", "THERE", "!", "WHEW", "!", "SUCH", "A", "RELIEF", "!", "IM", "SO", "HAPPY", "SHES", "COMING", "BACK", "!", "TWD", "WOULDNT", "BE", "THE", "SAME", "WITHOUT", "LAUREN", "!"]
# ::lemmas ["OMFG", "!", "YESSSSSS", "!", "SHE", "have", "i", "worried", "for", "a", "minute", "there", "!", "WHEW", "!", "such", "a", "RELIEF", "!", "IM", "SO", "HAPPY", "SHES", "come", "back", "!", "TWD", "wouldnt", "be", "the", "same", "without", "LAUREN", "!"]
(c13-4 / multi-sentence
       :snt1 (c13-0 / oh-my-god
                    :mode expressive)
       :snt2 (c13-3 / yes)
       :snt3 (c13-9 / plead-01
                    :ARG0 (c13-5 / she)
                    :ARG2 (c13-13 / temporal-quantity
                                  :unit (c13-8 / minute)
                                  :quant 1)
                    :location (c13-15 / there))
       :snt4 (c13-10 / whew
                     :mode expressive)
       :snt5 (c13-6 / RELIEF
                    :mode expressive)
       :snt6 (c13-11 / come-01
                     :ARG1 (c13-12 / i)
                     :direction (c13-2 / back))
       :snt7 (c13-1 / same-01
                    :ARG1 (c13-14 / thing
                                  :quant 2)
                    :manner (c13-7 / enforce-01
                                   :polarity -)
                    :polarity -))

# ::snt The entire fandom just released the breath weve all been holding for a while
# ::tokens ["The", "entire", "fandom", "just", "released", "the", "breath", "we", "ve", "all", "been", "holding", "for", "a", "while"]
# ::lemmas ["the", "entire", "fandom", "just", "release", "the", "breath", "we", "ve", "all", "be", "hold", "for", "a", "while"]
(c14-2 / release-01
       :ARG0 (c14-0 / fan
                    :mod (c14-3 / entire))
       :ARG1 (c14-1 / breathe-01
                    :ARG1-of (c14-4 / hold-01
                                    :ARG0 (c14-6 / we
                                                 :mod (c14-8 / all))
                                    :duration (c14-5 / while)))
       :time (c14-7 / just))

# ::snt Yes! Will she finally start to show shes pregnant???
# ::tokens ["Yes", "!", "Will", "she", "finally", "start", "to", "show", "she", "s", "pregnant", "?", "?", "?"]
# ::lemmas ["yes", "!", "will", "she", "finally", "start", "to", "show", "she", "s", "pregnant", "?", "?", "?"]
(c15-3 / multi-sentence
       :snt1 (c15-2 / yes
                    :mode expressive)
       :snt2 (c15-4 / start-01
                    :ARG0 (c15-0 / she)
                    :ARG1 (c15-7 / show-01
                                 :ARG0 c15-0
                                 :ARG1 (c15-5 / impregnate-01
                                              :ARG1 c15-0))
                    :polarity (c15-6 / amr-unknown)
                    :time (c15-1 / final)))

# ::snt YAS BITCH YASSS
# ::tokens ["YAS", "BITCH", "YASSS"]
# ::lemmas ["YAS", "BITCH", "YASSS"]
(c17-0 / name
       :op1 "Yas"
       :op2 "Bitch"
       :op3 "YasSS")

# ::snt Oh yay!
# ::tokens ["Oh", "yay", "!"]
# ::lemmas ["oh", "yay", "!"]
(c18-1 / yay
       :mod (c18-0 / oh
                   :mode expressive))

# ::snt YESSSSS! Its about damn time they took care of our girl.
# ::tokens ["YESSSSS", "!", "Its", "about", "damn", "time", "they", "took", "care", "of", "our", "girl", "."]
# ::lemmas ["YESSSSS", "!", "its", "about", "damn", "time", "they", "take", "care", "of", "our", "girl", "."]
(c20-1 / multi-sentence
       :snt1 (c20-0 / yes)
       :snt2 (c20-5 / time
                    :mod (c20-7 / damn)
                    :time-of (c20-3 / care-03
                                    :ARG0 (c20-8 / they)
                                    :ARG1 (c20-6 / girl
                                                 :poss (c20-4 / we)))
                    :mod (c20-2 / about)))

# ::snt YAy YAY Y. A. Y.
# ::tokens ["YAy", "YAY", "Y.", "A.", "Y."]
# ::lemmas ["YAy", "YAY", "Y.", "A.", "Y."]
(c21-0 / yay
       :mode expressive)

# ::snt Well...Im mean...we figured
# ::tokens ["Well", "...", "Im", "mean", "...", "we", "figured"]
# ::lemmas ["well", "...", "Im", "mean", "...", "we", "figure"]
(c22-1 / mean-01
       :ARG0 (c22-4 / i)
       :ARG2 (c22-0 / figure-01
                    :ARG0 (c22-3 / we))
       :mod (c22-2 / well))

# ::snt It shouldve ended a long time ago
# ::tokens ["It", "should", "ve", "ended", "a", "long", "time", "ago"]
# ::lemmas ["it", "should", "ve", "end", "a", "long", "time", "ago"]
(c25-2 / recommend-01
       :ARG1 (c25-3 / end-01
                    :ARG1 (c25-5 / it)
                    :time (c25-0 / before
                                 :op1 (c25-1 / now)
                                 :quant (c25-6 / time
                                               :ARG1-of (c25-4 / long-03)))))

# ::snt Of course she was
# ::tokens ["Of", "course", "she", "was"]
# ::lemmas ["of", "course", "she", "be"]
(c26-1 / she
       :mod (c26-0 / of-course))

# ::snt I knew she wouldn't let us down!
# ::tokens ["I", "knew", "she", "would", "n't", "let", "us", "down", "!"]
# ::lemmas ["i", "know", "she", "would", "not", "let", "we", "down", "!"]
(c27-2 / know-01
       :ARG0 (c27-4 / i)
       :ARG1 (c27-1 / let-down-04
                    :ARG0 (c27-0 / she)
                    :ARG1 (c27-3 / we)
                    :polarity -))

# ::snt Yes!
# ::tokens ["Yes", "!"]
# ::lemmas ["yes", "!"]
(c28-0 / yes)

# ::snt Now yall showing love I love her thank you
# ::tokens ["Now", "y", "all", "showing", "love", "I", "love", "her", "thank", "you"]
# ::lemmas ["now", "you", "all", "show", "love", "i", "love", "she", "thank", "you"]
(c29-7 / and
       :op1 (c29-3 / show-01
                   :ARG0 (c29-1 / you
                                :mod (c29-6 / all))
                   :ARG1 (c29-4 / love-01
                                :ARG0 c29-1)
                   :time (c29-2 / now))
       :op2 (c29-9 / love-01
                   :ARG0 (c29-8 / i)
                   :ARG1 (c29-0 / she)
                   :ARG2-of (c29-5 / thank-01
                                   :ARG1 c29-1)))

# ::snt IM SO HAPPY ! THANK GOD !!!!!! TWD WOULDNT BE THE SAME WITHOUT LAUREN !!!!
# ::tokens ["IM", "SO", "HAPPY", "!", "THANK", "GOD", "!", "!", "!", "!", "!", "!", "TWD", "WOULDNT", "BE", "THE", "SAME", "WITHOUT", "LAUREN", "!", "!", "!", "!"]
# ::lemmas ["IM", "SO", "HAPPY", "!", "thank", "GOD", "!", "!", "!", "!", "!", "!", "TWD", "wouldnt", "be", "the", "same", "without", "LAUREN", "!", "!", "!", "!"]
(c30-1 / multi-sentence
       :snt1 (c30-5 / happy-01
                    :ARG1 (c30-9 / i)
                    :degree (c30-3 / so))
       :snt2 (c30-10 / thank-01
                     :ARG0 (c30-4 / i)
                     :ARG1 (c30-6 / person
                                  :name (c30-2 / name
                                               :op1 "God"))
                     :mode expressive)
       :snt3 (c30-0 / same-01
                    :ARG1 (c30-11 / two)
                    :manner (c30-8 / have-03
                                   :ARG1 (c30-7 / life)
                                   :polarity -)
                    :polarity -))

# ::snt I just hope she didn't bleed amc. If what she was asking for was a reasonable price for her character, I'm % on her side but if what she was asking for was, let's say Andrew Lincoln pay, I'm sorry but I don't think that was right of her. She isn't the MAIN character.
# ::tokens ["I", "just", "hope", "she", "did", "n't", "bleed", "amc", ".", "If", "what", "she", "was", "asking", "for", "was", "a", "reasonable", "price", "for", "her", "character", ",", "I", "'m", "%", "on", "her", "side", "but", "if", "what", "she", "was", "asking", "for", "was", ",", "let", "'s", "say", "Andrew", "Lincoln", "pay", ",", "I", "'m", "sorry", "but", "I", "do", "n't", "think", "that", "was", "right", "of", "her", ".", "She", "is", "n't", "the", "MAIN", "character", "."]
# ::lemmas ["i", "just", "hope", "she", "do", "not", "bleed", "amc", ".", "if", "what", "she", "be", "ask", "for", "be", "a", "reasonable", "price", "for", "her", "character", ",", "i", "be", "%", "on", "her", "side", "but", "if", "what", "she", "be", "ask", "for", "be", ",", "let", "us", "say", "Andrew", "Lincoln", "pay", ",", "i", "be", "sorry", "but", "i", "do", "not", "think", "that", "be", "right", "of", "she", ".", "she", "be", "not", "the", "MAIN", "character", "."]
(c31-20 / multi-sentence
        :snt1 (c31-11 / hope-01
                      :ARG0 (c31-33 / i)
                      :ARG1 (c31-18 / bleed-01
                                    :ARG1 (c31-30 / person
                                                  :name (c31-27 / name
                                                                :op1 "McCann"))
                                    :polarity -)
                      :mod (c31-13 / just))
        :snt2 (c31-24 / contrast-01
                      :ARG1 (c31-32 / have-condition-91
                                    :ARG1 (c31-21 / percentage
                                                  :location (c31-0 / side
                                                                   :poss (c31-8 / she))
                                                  :domain (c31-9 / i))
                                    :ARG2 (c31-15 / ask-02
                                                  :ARG0 c31-8
                                                  :ARG1 (c31-12 / monetary-quantity
                                                                :ARG2-of (c31-5 / price-01
                                                                                :ARG1 (c31-17 / character
                                                                                              :poss c31-8)
                                                                                :ARG1-of (c31-29 / reasonable-02)))))
                      :ARG2 (c31-10 / have-condition-91
                                    :ARG1 (c31-7 / sorry-01
                                                 :ARG1 c31-9
                                                 :ARG1-of (c31-4 / contrast-01
                                                                 :ARG2 (c31-28 / say-01
                                                                               :ARG0 (c31-31 / we)
                                                                               :ARG1 (c31-3 / pay-01
                                                                                            :ARG0 (c31-14 / person
                                                                                                          :name (c31-22 / name
                                                                                                                        :op1 "Andrew"
                                                                                                                        :op2 "Lincoln"))
                                                                                            :ARG1-of (c31-2 / let-01))
                                                                               :mode imperative)))
                                    :ARG2 (c31-16 / ask-02
                                                  :ARG0 c31-8
                                                  :ARG1 (c31-25 / monetary-quantity
                                                                :ARG2-of (c31-6 / right-06
                                                                                :ARG1 c31-25
                                                                                :ARG2 (c31-1 / she)
                                                                                :polarity -)))))
        :snt3 (c31-26 / character
                      :mod (c31-23 / MAIN)
                      :domain (c31-19 / she)
                      :polarity -))

# ::snt I just did a happy dance.
# ::tokens ["I", "just", "did", "a", "happy", "dance", "."]
# ::lemmas ["i", "just", "do", "a", "happy", "dance", "."]
(c32-0 / dance-01
       :ARG0 (c32-3 / i)
       :ARG1-of (c32-1 / happy-02)
       :mod (c32-2 / just))

# ::snt GREAT NEWS!!!! SO HAPPY TO HEAR THIS! GO MAGGIE! MY
# ::tokens ["GREAT", "NEWS", "!", "!", "!", "!", "SO", "HAPPY", "TO", "HEAR", "THIS", "!", "GO", "MAGGIE", "!", "MY"]
# ::lemmas ["GREAT", "NEWS", "!", "!", "!", "!", "so", "happy", "to", "hear", "this", "!", "GO", "MAGGIE", "!", "my"]
(c33-2 / multi-sentence
       :snt1 (c33-1 / news
                    :mod (c33-10 / great))
       :snt2 (c33-5 / happy-01
                    :ARG0 (c33-7 / hear-01
                                 :ARG0 (c33-8 / i)
                                 :ARG1 (c33-9 / this))
                    :ARG1 (c33-4 / i)
                    :degree (c33-3 / so)
                    :mode expressive)
       :snt3 (c33-11 / go-03
                     :ARG0 (c33-0 / you)
                     :ARG1 (c33-6 / maggie)
                     :mode imperative)
       :snt4 (c33-12 / i
                     :mode expressive))

# ::snt :Yay!!
# ::tokens [":", "Yay", "!", "!"]
# ::lemmas [":", "Yay", "!", "!"]
(c34-0 / yay
       :mode expressive)
