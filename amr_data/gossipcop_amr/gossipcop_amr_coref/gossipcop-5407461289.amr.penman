# ::snt right?? lmao
# ::tokens ["right", "?", "?", "lmao"]
# ::lemmas ["right", "?", "?", "lmao"]
(c1-0 / request-confirmation-91
      :ARG1 (c1-1 / laugh-01
                  :ARG0 (c1-2 / i
                              :part (c1-3 / ass))
                  :manner (c1-4 / loud)))

# ::snt Um no its because shes charging $360 for shitty brushes that you can find on amazon for $50 or less, stop trying to defend something all the time its annoying as hell
# ::tokens ["Um", "no", "its", "because", "she", "s", "charging", "$", "360", "for", "shitty", "brushes", "that", "you", "can", "find", "on", "amazon", "for", "$", "50", "or", "less", ",", "stop", "trying", "to", "defend", "something", "all", "the", "time", "its", "annoying", "as", "hell"]
# ::lemmas ["um", "no", "its", "because", "she", "s", "charge", "$", "360", "for", "shitty", "brush", "that", "you", "can", "find", "on", "amazon", "for", "$", "50", "or", "less", ",", "stop", "try", "to", "defend", "something", "all", "the", "time", "its", "annoying", "as", "hell"]
(c2-10 / and
       :op1 (c2-17 / cause-01
                   :ARG0 (c2-12 / charge-01
                                :ARG0 (c2-0 / she)
                                :ARG1 (c2-14 / monetary-quantity
                                             :unit (c2-27 / dollar)
                                             :quant 360)
                                :ARG2 (c2-13 / brush
                                             :mod (c2-4 / shitty)
                                             :ARG1-of (c2-22 / find-01
                                                             :ARG0 (c2-6 / you)
                                                             :location (c2-2 / company
                                                                             :name (c2-23 / name
                                                                                          :op1 "Amazon"))
                                                             :ARG1-of (c2-25 / possible-01))
                                             :ARG1-of (c2-21 / cost-01
                                                             :ARG2 (c2-5 / or
                                                                         :op1 (c2-7 / monetary-quantity
                                                                                    :unit (c2-18 / dollar)
                                                                                    :quant 50)
                                                                         :op2 (c2-1 / less-than
                                                                                    :op1 c2-7)))))
                   :ARG1 (c2-26 / it)
                   :mod (c2-20 / um
                               :mode expressive))
       :op2 (c2-3 / stop-01
                  :ARG0 c2-6
                  :ARG1 (c2-11 / try-01
                               :ARG0 c2-6
                               :ARG1 (c2-16 / defend-01
                                            :ARG0 c2-6
                                            :ARG1 (c2-24 / something)))
                  :time (c2-19 / time
                               :mod (c2-9 / all))
                  :ARG0-of (c2-8 / annoy-01
                                 :degree (c2-15 / as-hell))
                  :mode imperative))

# ::snt shut the hell up
# ::tokens ["shut", "the", "hell", "up"]
# ::lemmas ["shut", "the", "hell", "up"]
(c3-2 / shut-up-06
      :ARG0 (c3-0 / you
                  :ARG1-of c3-2)
      :degree (c3-1 / hell
                    :mode expressive)
      :mode imperative)

# ::snt En donde dejaste a la bendicin? Jajajajaja
# ::tokens ["En", "donde", "dejaste", "a", "la", "bendicin", "?", "Jajajajaja"]
# ::lemmas ["En", "donde", "dejaste", "a", "la", "bendicin", "?", "Jajajajaja"]
(c5-1 / say-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-4 / amr-unintelligible
                  :value "En"
                  :op2 "Donde"
                  :op3 "dejaste"
                  :op4 "la"
                  :op5 " bendicin")
      :ARG2 (c5-2 / person
                  :name (c5-0 / name
                              :op1 "Jajajajaja")))

# ::snt I DIDNT EVEN FO ANYTHIBG
# ::tokens ["I", "DIDNT", "EVEN", "FO", "ANYTHIBG"]
# ::lemmas ["i", "didnt", "even", "FO", "ANYTHIBG"]
(c6-0 / FOLLOW-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-3 / anything)
      :mod (c6-1 / even)
      :polarity -)

# ::snt i hate u so much sksks
# ::tokens ["i", "hate", "u", "so", "much", "sksks"]
# ::lemmas ["i", "hate", "u", "so", "much", "sksk"]
(c7-4 / hate-01
      :ARG0 (c7-6 / i)
      :ARG1 (c7-1 / you
                  :mod (c7-3 / sksk))
      :ARG1-of (c7-5 / have-quant-91
                     :ARG2 (c7-2 / much)
                     :ARG3 (c7-0 / so)))

# ::snt ENOUGH
# ::tokens ["ENOUGH"]
# ::lemmas ["ENOUGH"]
(c8-0 / continue-01)

# ::snt I have a vision in my head of him having long ass bony over grown nailed pale feet okay
# ::tokens ["I", "have", "a", "vision", "in", "my", "head", "of", "him", "having", "long", "ass", "bony", "over", "grown", "nailed", "pale", "feet", "okay"]
# ::lemmas ["i", "have", "a", "vision", "in", "my", "head", "of", "he", "have", "long", "ass", "bony", "over", "grown", "nail", "pale", "foot", "okay"]
(c9-5 / have-03
      :ARG0 (c9-10 / i
                   :part (c9-9 / head))
      :ARG1 (c9-4 / envision-01
                  :ARG0 c9-10
                  :ARG1 (c9-0 / okay-04
                              :ARG1 c9-5
                              :ARG0 (c9-6 / he
                                          :part (c9-11 / ass
                                                       :ARG1-of (c9-7 / long-03)
                                                       :mod (c9-2 / bony)
                                                       :ARG1-of (c9-1 / overgrow-01))
                                          :part (c9-3 / foot
                                                      :ARG1-of (c9-8 / pale-03)
                                                      :ARG1-of c9-0))))
      :location c9-9)

# ::snt GO PLAY WITH YOUR FEET
# ::tokens ["GO", "PLAY", "WITH", "YOUR", "FEET"]
# ::lemmas ["GO", "play", "with", "your", "foot"]
(c10-0 / go-05
       :ARG0 (c10-2 / you)
       :ARG1 (c10-3 / play-01
                    :ARG0 c10-2
                    :instrument (c10-1 / feel-01
                                       :ARG0 c10-2))
       :mode imperative)

# ::snt CHANTELLE
# ::tokens ["CHANTELLE"]
# ::lemmas ["chantelle"]
(c11-1 / person
       :name (c11-0 / name
                    :op1 "Chantelle"))

# ::snt Right!!! The gifs could go on for days!
# ::tokens ["Right", "!", "!", "!", "The", "gifs", "could", "go", "on", "for", "days", "!"]
# ::lemmas ["right", "!", "!", "!", "the", "gifs", "could", "go", "on", "for", "days", "!"]
(c12-0 / multi-sentence
       :snt1 (c12-1 / right-06
                    :mode expressive)
       :snt2 (c12-3 / possible-01
                    :ARG1 (c12-6 / go-on-15
                                 :ARG1 (c12-4 / gift)
                                 :duration (c12-2 / multiple
                                                  :op1 (c12-5 / temporal-quantity
                                                              :unit (c12-7 / day)
                                                              :quant 1)))))

# ::snt Khloe allegedly preggo too
# ::tokens ["Khloe", "allegedly", "preggo", "too"]
# ::lemmas ["Khloe", "allegedly", "preggo", "too"]
(c14-3 / impregnate-01
       :ARG1 (c14-2 / person
                    :name (c14-0 / name
                                 :op1 "Khloe"))
       :ARG1-of (c14-1 / allege-01)
       :mod (c14-4 / too))

# ::snt Wait? What happened?
# ::tokens ["Wait", "?", "What", "happened", "?"]
# ::lemmas ["wait", "?", "what", "happen", "?"]
(c15-1 / multi-sentence
       :snt1 (c15-3 / wait-01
                    :ARG1 (c15-0 / you)
                    :mode imperative)
       :snt2 (c15-2 / event
                    :mod (c15-4 / amr-unknown)))

# ::snt petty
# ::tokens ["petty"]
# ::lemmas ["petty"]
(c16-0 / petty)

# ::snt Hahahahahaha!!!!
# ::tokens ["Hahahahahaha", "!", "!", "!", "!"]
# ::lemmas ["Hahahahahaha", "!", "!", "!", "!"]
(c17-0 / haha
       :mode expressive)

# ::snt Lmaoooo shut up
# ::tokens ["Lmaoooo", "shut", "up"]
# ::lemmas ["Lmaoooo", "shut", "up"]
(c18-1 / shut-up-06
       :ARG0 (c18-0 / you
                    :ARG1-of c18-1)
       :mod (c18-2 / laugh-01
                   :ARG0 (c18-3 / i)
                   :manner (c18-4 / loud)
                   :mode expressive)
       :mode imperative)

# ::snt Youre rude
# ::tokens ["You", "re", "rude"]
# ::lemmas ["you", "re", "rude"]
(c19-0 / rude-01
       :ARG1 (c19-1 / you))

# ::snt She's lookin like Phylis Diller.
# ::tokens ["She", "'s", "lookin", "like", "Phylis", "Diller", "."]
# ::lemmas ["she", "be", "lookin", "like", "Phylis", "Diller", "."]
(c20-2 / look-02
       :ARG0 (c20-3 / she)
       :ARG1 (c20-0 / person
                    :name (c20-1 / name
                                 :op1 "Phylis"
                                 :op2 "Diller")))

# ::snt I'm dying bro!!!
# ::tokens ["I", "'m", "dying", "bro", "!", "!", "!"]
# ::lemmas ["i", "be", "die", "bro", "!", "!", "!"]
(c21-3 / say-01
       :ARG0 (c21-2 / i)
       :ARG1 (c21-0 / die-01
                    :ARG1 c21-2)
       :ARG2 (c21-1 / bro)
       :mode expressive)

# ::snt dick sucker
# ::tokens ["dick", "sucker"]
# ::lemmas ["dick", "sucker"]
(c22-1 / sucker
       :mod (c22-0 / dick))

# ::snt let them be bro
# ::tokens ["let", "them", "be", "bro"]
# ::lemmas ["let", "they", "be", "bro"]
(c23-3 / let-01
       :ARG0 (c23-1 / you)
       :ARG1 (c23-2 / have-rel-role-91
                    :ARG0 (c23-4 / they)
                    :ARG2 (c23-0 / bro))
       :mode imperative)

# ::snt For fun soooo many people drink milk with their meals!
# ::tokens ["For", "fun", "soooo", "many", "people", "drink", "milk", "with", "their", "meals", "!"]
# ::lemmas ["for", "fun", "soooo", "many", "people", "drink", "milk", "with", "their", "meal", "!"]
(c24-5 / drink-01
       :ARG0 (c24-4 / person
                    :quant (c24-1 / many
                                  :degree (c24-2 / so)))
       :ARG1 (c24-3 / milk)
       :ARG3 (c24-6 / meal
                    :poss c24-4)
       :purpose (c24-0 / fun-01))

# ::snt You also drink white milk for funn
# ::tokens ["You", "also", "drink", "white", "milk", "for", "funn"]
# ::lemmas ["you", "also", "drink", "white", "milk", "for", "funn"]
(c25-5 / drink-01
       :ARG0 (c25-0 / you)
       :ARG1 (c25-1 / milk
                    :ARG1-of (c25-3 / white-03))
       :mod (c25-4 / also)
       :purpose (c25-2 / laugh-01
                       :ARG0 c25-0
                       :manner (c25-6 / loud)))

# ::snt I eat mine hot
# ::tokens ["I", "eat", "mine", "hot"]
# ::lemmas ["i", "eat", "mine", "hot"]
(c26-0 / eat-01
       :ARG0 (c26-2 / i)
       :ARG1 (c26-3 / thing
                    :poss c26-2)
       :ARG1-of (c26-1 / hot-05))

# ::snt CAN RELATE
# ::tokens ["CAN", "RELATE"]
# ::lemmas ["can", "relate"]
(c27-1 / possible-01
       :ARG1 (c27-0 / relate-01))

# ::snt Am i weird because Ive never once thought about warming them up aint enough time between opening the box up and me crushin em for any heat
# ::tokens ["Am", "i", "weird", "because", "I", "ve", "never", "once", "thought", "about", "warming", "them", "up", "ai", "nt", "enough", "time", "between", "opening", "the", "box", "up", "and", "me", "crushin", "em", "for", "any", "heat"]
# ::lemmas ["be", "i", "weird", "because", "i", "ve", "never", "once", "think", "about", "warm", "they", "up", "be", "not", "enough", "time", "between", "open", "the", "box", "up", "and", "i", "crushin", "em", "for", "any", "heat"]
(c28-8 / weird
       :polarity (c28-2 / amr-unknown)
       :domain (c28-11 / i)
       :ARG1-of (c28-9 / cause-01
                       :ARG0 (c28-12 / think-01
                                     :ARG0 c28-11
                                     :ARG1 (c28-7 / warm-up-02
                                                  :ARG1 (c28-16 / they))
                                     :time (c28-4 / ever)
                                     :frequency (c28-3 / rate-entity-91
                                                       :ARG1 1)
                                     :time (c28-1 / between
                                                  :op1 (c28-0 / open-01
                                                              :ARG0 c28-11
                                                              :ARG1 (c28-5 / box))
                                                  :op2 (c28-15 / crush-01
                                                               :ARG0 c28-11
                                                               :ARG1 c28-16
                                                               :purpose (c28-6 / heat
                                                                               :mod (c28-13 / any))))
                                     :ARG1-of (c28-10 / have-quant-91
                                                      :ARG3 (c28-14 / enough))
                                     :polarity -)))

# ::snt LMFAO!!! You funny
# ::tokens ["LMFAO", "!", "!", "!", "You", "funny"]
# ::lemmas ["lmfao", "!", "!", "!", "you", "funny"]
(c29-3 / multi-sentence
       :snt1 (c29-4 / laugh-01
                    :ARG0 (c29-6 / i
                                 :part (c29-7 / ass
                                              :mod (c29-0 / fucking)))
                    :ARG1 (c29-1 / off
                                 :op1 c29-7)
                    :mode expressive)
       :snt2 (c29-5 / funny-02
                    :ARG1 (c29-2 / you)))

# ::snt I eat all them shits cold! The pizza one, the hot dog one, the sammich ones &amp; the nacho joint idc idc
# ::tokens ["I", "eat", "all", "them", "shits", "cold", "!", "The", "pizza", "one", ",", "the", "hot", "dog", "one", ",", "the", "sammich", "ones", "&", "amp", ";", "the", "nacho", "joint", "idc", "idc"]
# ::lemmas ["i", "eat", "all", "they", "shit", "cold", "!", "the", "pizza", "one", ",", "the", "hot", "dog", "one", ",", "the", "sammich", "one", "&", "amp", ";", "the", "nacho", "joint", "idc", "idc"]
(c30-1 / multi-sentence
       :snt1 (c30-5 / eat-01
                    :ARG0 (c30-10 / i)
                    :ARG1 (c30-9 / they
                                 :mod (c30-11 / all))
                    :mod (c30-3 / shit
                                :mode expressive)
                    :ARG1-of (c30-8 / cold-01))
       :snt2 (c30-12 / and
                     :op1 (c30-7 / pizza)
                     :op2 (c30-6 / hot-dog)
                     :op3 (c30-0 / sammich)
                     :op4 (c30-13 / et-cetera))
       :op3 (c30-14 / joint
                    :mod (c30-2 / nacho)
                    :mod (c30-4 / idc)))

# ::snt The dough just dont sit with me cold like a normal pizza
# ::tokens ["The", "dough", "just", "do", "nt", "sit", "with", "me", "cold", "like", "a", "normal", "pizza"]
# ::lemmas ["the", "dough", "just", "do", "not", "sit", "with", "i", "cold", "like", "a", "normal", "pizza"]
(c31-1 / sit-01
       :ARG1 (c31-7 / dough)
       :ARG2 (c31-6 / i)
       :mod (c31-5 / just)
       :ARG1-of (c31-2 / resemble-01
                       :ARG2 (c31-3 / pizza
                                    :ARG1-of (c31-0 / normal-02)))
       :ARG1-of (c31-4 / cold-02)
       :polarity -)

# ::snt The hell
# ::tokens ["The", "hell"]
# ::lemmas ["the", "hell"]
(c32-0 / hell
       :mode expressive)

# ::snt Hot is definitely better shawd
# ::tokens ["Hot", "is", "definitely", "better", "shawd"]
# ::lemmas ["hot", "be", "definitely", "well", "shawd"]
(c33-1 / shawd
       :domain (c33-2 / hot-03)
       :mod (c33-5 / definite)
       :ARG1-of (c33-3 / have-degree-91
                       :ARG2 (c33-4 / good-02
                                    :ARG1 c33-1)
                       :ARG3 (c33-0 / more)))

# ::snt She thinks domestic helpers doesn't deserve a day off and to possess their own passports. Well then, she doesn't deserve sponsors. BOYCOTT!Let her wash her own dishes, toilets, etc. Let her nails get brittle. You think botox is more important that this matter?DISGUSTING!
# ::tokens ["She", "thinks", "domestic", "helpers", "does", "n't", "deserve", "a", "day", "off", "and", "to", "possess", "their", "own", "passports", ".", "Well", "then", ",", "she", "does", "n't", "deserve", "sponsors", ".", "BOYCOTT!Let", "her", "wash", "her", "own", "dishes", ",", "toilets", ",", "etc", ".", "Let", "her", "nails", "get", "brittle", ".", "You", "think", "botox", "is", "more", "important", "that", "this", "matter?DISGUSTING", "!"]
# ::lemmas ["she", "think", "domestic", "helper", "do", "not", "deserve", "a", "day", "off", "and", "to", "possess", "their", "own", "passport", ".", "well", "then", ",", "she", "do", "not", "deserve", "sponsor", ".", "boycott!let", "she", "wash", "her", "own", "dish", ",", "toilet", ",", "etc", ".", "let", "her", "nail", "get", "brittle", ".", "you", "think", "botox", "be", "more", "important", "that", "this", "matter?DISGUSTING", "!"]
(c34-20 / multi-sentence
        :snt1 (c34-17 / think-01
                      :ARG0 (c34-0 / she)
                      :ARG1 (c34-36 / deserve-01
                                    :ARG0 (c34-32 / person
                                                  :ARG0-of (c34-16 / assist-01)
                                                  :mod (c34-24 / domestic))
                                    :ARG1 (c34-15 / and
                                                  :op1 (c34-23 / day
                                                               :mod (c34-9 / off))
                                                  :op2 (c34-21 / possess-01
                                                               :ARG0 c34-32
                                                               :ARG1 (c34-6 / passport
                                                                            :poss c34-32)))
                                    :polarity -))
        :snt2 (c34-31 / deserve-01
                      :ARG0 (c34-10 / she)
                      :ARG1 (c34-5 / person
                                   :ARG0-of (c34-7 / sponsor-01
                                                   :ARG1 c34-10))
                      :mod (c34-33 / well
                                   :mod (c34-25 / then))
                      :polarity -)
        :snt3 (c34-19 / booyot
                      :mode expressive)
        :snt4 (c34-3 / let-01
                     :ARG0 (c34-11 / you)
                     :ARG1 (c34-4 / wash-01
                                  :ARG0 (c34-29 / she
                                                :part (c34-28 / nail))
                                  :ARG1 (c34-14 / and
                                                :op1 (c34-26 / dish
                                                             :poss c34-29)
                                                :op2 (c34-34 / toilet
                                                             :poss c34-29)
                                                :op3 (c34-30 / et-cetera)))
                     :mode imperative)
        :snt5 (c34-1 / think-01
                     :ARG0 c34-11
                     :ARG1 (c34-2 / botox
                                  :ARG1-of (c34-12 / have-degree-91
                                                   :ARG2 (c34-35 / important-01
                                                                 :ARG1 c34-2)
                                                   :ARG3 (c34-13 / more)
                                                   :ARG4 (c34-27 / matter
                                                                 :mod (c34-18 / this))))
                     :polarity (c34-22 / amr-unknown))
        :snt6 (c34-8 / bust-01
                     :mode expressive))

# ::snt Right...I just mean why the stories all came out at the same time, gives me a sense of hope
# ::tokens ["Right", "...", "I", "just", "mean", "why", "the", "stories", "all", "came", "out", "at", "the", "same", "time", ",", "gives", "me", "a", "sense", "of", "hope"]
# ::lemmas ["right", "...", "i", "just", "mean", "why", "the", "story", "all", "come", "out", "at", "the", "same", "time", ",", "give", "i", "a", "sense", "of", "hope"]
(c35-1 / multi-sentence
       :snt1 (c35-3 / right-06)
       :snt2 (c35-5 / mean-01
                    :ARG0 (c35-9 / i)
                    :ARG2 (c35-10 / thing
                                  :ARG0-of (c35-7 / cause-01
                                                  :ARG1 (c35-12 / come-out-09
                                                                :ARG1 (c35-2 / story
                                                                             :mod (c35-4 / all))
                                                                :time (c35-0 / same-01))))
                    :mod (c35-8 / just)
                    :ARG0-of (c35-11 / give-01
                                     :ARG1 (c35-13 / sense-01
                                                   :ARG1 (c35-6 / hopeful-03))
                                     :ARG2 c35-9)))

# ::snt There no one in the world as amazing as kylie Minogue she may have the same first name but our Kylie is simply the best
# ::tokens ["There", "no", "one", "in", "the", "world", "as", "amazing", "as", "kylie", "Minogue", "she", "may", "have", "the", "same", "first", "name", "but", "our", "Kylie", "is", "simply", "the", "best"]
# ::lemmas ["there", "no", "one", "in", "the", "world", "as", "amazing", "as", "kylie", "Minogue", "she", "may", "have", "the", "same", "first", "name", "but", "our", "Kylie", "be", "simply", "the", "good"]
(c36-6 / have-concession-91
       :ARG1 (c36-13 / have-degree-91
                     :ARG1 (c36-7 / person
                                  :name (c36-1 / name
                                               :op1 "Kylie"
                                               :op2 "Minogue")
                                  :poss (c36-11 / we))
                     :ARG2 (c36-15 / good-02
                                   :ARG1 c36-7)
                     :ARG3 (c36-2 / most)
                     :ARG5 (c36-8 / no-one
                                  :location (c36-9 / world)))
       :ARG2 (c36-3 / possible-01
                    :ARG1 (c36-5 / have-03
                                 :ARG0 c36-7
                                 :ARG1 (c36-10 / name
                                               :ARG1-of (c36-4 / same-01)
                                               :ord (c36-0 / ordinal-entity
                                                           :value 1))))
       :ARG1-of (c36-12 / cause-01
                        :ARG0 (c36-14 / amaze-01
                                      :ARG0 c36-7)))

# ::snt Can't stand her!
# ::tokens ["Ca", "n't", "stand", "her", "!"]
# ::lemmas ["can", "not", "stand", "she", "!"]
(c38-1 / possible-01
       :ARG1 (c38-2 / stand-03
                    :ARG1 (c38-0 / she))
       :polarity -)

# ::snt Right?! Like Jesus the world doesnt revolve around her fans! Shes a human being and shes growing a child! She doesnt need to tell the world everything thats going on in her life constantly! Is noones business but her own
# ::tokens ["Right", "?", "!", "Like", "Jesus", "the", "world", "does", "nt", "revolve", "around", "her", "fans", "!", "She", "s", "a", "human", "being", "and", "she", "s", "growing", "a", "child", "!", "She", "does", "nt", "need", "to", "tell", "the", "world", "everything", "that", "s", "going", "on", "in", "her", "life", "constantly", "!", "Is", "noones", "business", "but", "her", "own"]
# ::lemmas ["right", "?", "!", "like", "Jesus", "the", "world", "do", "not", "revolve", "around", "her", "fan", "!", "she", "s", "a", "human", "being", "and", "she", "s", "grow", "a", "child", "!", "she", "do", "not", "need", "to", "tell", "the", "world", "everything", "that", "s", "go", "on", "in", "her", "life", "constantly", "!", "be", "noone", "business", "but", "her", "own"]
(c39-15 / multi-sentence
        :snt1 (c39-21 / request-confirmation-91
                      :ARG2 (c39-23 / person
                                    :name (c39-20 / name
                                                  :op1 "Jesus")))
        :snt2 (c39-6 / resemble-01
                     :ARG1 (c39-25 / world)
                     :ARG2 (c39-16 / person
                                   :name (c39-17 / name
                                                 :op1 "Jesus")))
        :snt3 (c39-11 / and
                      :op1 (c39-14 / being
                                   :mod (c39-9 / human)
                                   :domain (c39-0 / she))
                      :op2 (c39-12 / grow-03
                                   :ARG1 c39-0
                                   :ARG2 (c39-18 / child)))
        :snt4 (c39-24 / need-01
                      :ARG0 (c39-8 / she)
                      :ARG1 (c39-10 / tell-01
                                    :ARG0 c39-8
                                    :ARG1 (c39-22 / everything
                                                  :ARG1-of (c39-5 / go-on-15
                                                                  :location (c39-2 / life
                                                                                   :poss c39-8)))
                                    :ARG2 (c39-3 / world)
                                    :frequency (c39-13 / constant))
                      :polarity -)
        :snt5 (c39-4 / contrast-01
                     :ARG1 (c39-1 / business
                                  :poss (c39-19 / no-one))
                     :ARG2 (c39-7 / business
                                  :poss c39-8)))

# ::snt latest chapter of this SHIT SHOW (January , ; :20 PST)
# ::tokens ["latest", "chapter", "of", "this", "SHIT", "SHOW", "(", "January", ",", ";", ":", "20", "PST", ")"]
# ::lemmas ["late", "chapter", "of", "this", "SHIT", "SHOW", "(", "January", ",", ";", ":", "20", "PST", ")"]
(c40-3 / chapter
       :mod (c40-2 / last)
       :part-of (c40-1 / show-04
                       :ARG1 (c40-0 / shit)
                       :mod (c40-4 / this))
       :time (c40-5 / date-entity
                    :time-of c40-3
                    :month 1)
       :time ":20"
       :timezone "PST")

# ::snt "TERRIFIED of "NASTY SCAR" after c-section" (January , ; :20 PST)
# ::tokens ["\"", "TERRIFIED", "of", "\"", "NASTY", "SCAR", "\"", "after", "c", "-", "section", "\"", "(", "January", ",", ";", ":", "20", "PST", ")"]
# ::lemmas ["\"", "terrify", "of", "\"", "NASTY", "scar", "\"", "after", "c", "-", "section", "\"", "(", "January", ",", ";", ":", "20", "PST", ")"]
(c41-2 / terrify-01
       :ARG1 (c41-0 / SCAR-00)
       :time (c41-3 / after
                    :op1 (c41-1 / csection))
       :time (c41-4 / date-entity
                    :time-of c41-2
                    :month 1)
       :time "14:20"
       :timezone "PST")

# ::snt Update: CELEBRITY INSIDER (January , ; :20 PST)
# ::tokens ["Update", ":", "CELEBRITY", "INSIDER", "(", "January", ",", ";", ":", "20", "PST", ")"]
# ::lemmas ["update", ":", "celebrity", "INSIDER", "(", "January", ",", ";", ":", "20", "PST", ")"]
(c42-1 / update-02
       :ARG2 (c42-2 / publication
                    :name (c42-0 / name
                                 :op1 "CELEBRITY"
                                 :op2 " INSIDER")
                    :time (c42-3 / date-entity
                                 :month 1
                                 :time ":20"
                                 :timezone "PST")))

# ::snt Shes literally so pretty either way
# ::tokens ["She", "s", "literally", "so", "pretty", "either", "way"]
# ::lemmas ["she", "s", "literally", "so", "pretty", "either", "way"]
(c43-2 / have-degree-91
       :ARG1 (c43-6 / he)
       :ARG2 (c43-3 / pretty)
       :ARG3 (c43-0 / so)
       :mod (c43-4 / literal)
       :mod (c43-5 / way
                   :mod (c43-1 / either)))

# ::snt dipski in my lipski.... fatty in my patty
# ::tokens ["dipski", "in", "my", "lipski", "....", "fatty", "in", "my", "patty"]
# ::lemmas ["dipski", "in", "my", "lipski", "....", "fatty", "in", "my", "patty"]
(c44-4 / and
       :op1 (c44-5 / dip-01
                   :ARG2 (c44-1 / lip)
                   :location (c44-3 / i
                                    :part c44-1))
       :op2 (c44-0 / fat-03
                   :location (c44-2 / patty
                                    :poss c44-3)))

# ::snt you're not alone
# ::tokens ["you", "'re", "not", "alone"]
# ::lemmas ["you", "be", "not", "alone"]
(c45-1 / alone
       :domain (c45-0 / you)
       :polarity -)

# ::snt you wild !
# ::tokens ["you", "wild", "!"]
# ::lemmas ["you", "wild", "!"]
(c46-0 / wild
       :domain (c46-1 / you))

# ::snt Any kardashian but i feel like kylie's pussy taste like water i just wanna hear her moan like a mothfkr.
# ::tokens ["Any", "kardashian", "but", "i", "feel", "like", "kylie", "'s", "pussy", "taste", "like", "water", "i", "just", "wanna", "hear", "her", "moan", "like", "a", "mothfkr", "."]
# ::lemmas ["any", "kardashian", "but", "i", "feel", "like", "kylie", "'s", "pussy", "taste", "like", "water", "i", "just", "wanna", "hear", "her", "moan", "like", "a", "mothfkr", "."]
(c47-8 / multi-sentence
       :snt1 (c47-11 / contrast-01
                     :ARG1 (c47-16 / person
                                   :mod (c47-7 / country
                                               :name (c47-14 / name
                                                             :op1 "Korea"))
                                   :mod (c47-6 / any))
                     :ARG2 (c47-13 / feel-01
                                   :ARG0 (c47-18 / i)
                                   :ARG1 (c47-5 / taste-02
                                                :ARG1 (c47-9 / pussy
                                                             :poss (c47-1 / person
                                                                          :name (c47-10 / name
                                                                                        :op1 " Kylie")))
                                                :ARG2 (c47-17 / water))))
       :snt2 (c47-0 / want-01
                    :ARG0 c47-18
                    :ARG1 (c47-2 / hear-01
                                 :ARG0 c47-18
                                 :ARG1 (c47-3 / moan-01
                                              :ARG0 c47-1
                                              :ARG1-of (c47-15 / resemble-01
                                                               :ARG2 (c47-12 / mothfkr))))
                    :mod (c47-4 / just)))

# ::snt Kim*
# ::tokens ["Kim", "*"]
# ::lemmas ["Kim", "*"]
(c48-1 / person
       :name (c48-0 / name
                    :op1 "Kim"))

# ::snt damn....maybe I'm the one who's nasty af
# ::tokens ["damn", "....", "maybe", "I", "'m", "the", "one", "who", "'s", "nasty", "af"]
# ::lemmas ["damn", "....", "maybe", "i", "be", "the", "one", "who", "be", "nasty", "af"]
(c50-2 / possible-01
       :ARG1 (c50-1 / person
                    :domain (c50-3 / i)
                    :mod (c50-0 / nasty
                                :mod (c50-4 / af)))
       :ARG1-of (c50-5 / damn-01))
