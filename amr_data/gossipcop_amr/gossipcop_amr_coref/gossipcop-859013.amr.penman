# ::snt hian
# ::tokens ["hian"]
# ::lemmas ["hian"]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "Hian"))

# ::snt U never fail to make me laugh
# ::tokens ["U", "never", "fail", "to", "make", "me", "laugh"]
# ::lemmas ["U", "never", "fail", "to", "make", "i", "laugh"]
(c2-0 / fail-01
      :ARG1 (c2-1 / you)
      :ARG2 (c2-2 / make-02
                  :ARG0 c2-1
                  :ARG1 (c2-4 / laugh-01
                              :ARG0 (c2-5 / i)))
      :time (c2-3 / ever)
      :polarity -)

# ::snt Nahhh we don't care
# ::tokens ["Nahhh", "we", "do", "n't", "care"]
# ::lemmas ["Nahhh", "we", "do", "not", "care"]
(c3-0 / care-01
      :ARG0 (c3-2 / we)
      :mod (c3-1 / nah
                 :mode expressive)
      :polarity -)

# ::snt living their lives whether last or not, their biz &amp; don't have time w foolish who mi$$e$ more than Kylie
# ::tokens ["living", "their", "lives", "whether", "last", "or", "not", ",", "their", "biz", "&", "amp", ";", "do", "n't", "have", "time", "w", "foolish", "who", "mi$$e$", "more", "than", "Kylie"]
# ::lemmas ["live", "their", "life", "whether", "last", "or", "not", ",", "their", "biz", "&", "amp", ";", "do", "not", "have", "time", "w", "foolish", "who", "mi$$e$", "more", "than", "Kylie"]
(c4-2 / multi-sentence
      :snt1 (c4-7 / live-01
                  :ARG0 (c4-14 / they)
                  :ARG1 (c4-15 / life
                               :poss c4-14)
                  :ARG1-of (c4-4 / regardless-91
                                 :ARG2 (c4-0 / or
                                             :op1 (c4-8 / last-01)
                                             :op2 (c4-12 / last-01
                                                         :polarity -))))
      :snt2 (c4-6 / have-03
                  :ARG0 (c4-16 / they)
                  :ARG1 (c4-13 / time)
                  :manner (c4-1 / foolish
                                :domain (c4-5 / amr-unknown)
                                :ARG2-of (c4-11 / have-degree-91
                                                :ARG1 c4-16
                                                :ARG3 (c4-9 / more)
                                                :ARG4 (c4-10 / person
                                                             :name (c4-3 / name
                                                                         :op1 "Kylie"))))
                  :polarity -))

# ::snt yeap probley
# ::tokens ["yeap", "probley"]
# ::lemmas ["yeap", "probley"]
(c5-1 / probley
      :mod (c5-0 / yeap))

# ::snt Who cares! Tyga is a wash-up &amp; is a raising star! She is way better off a million times over!
# ::tokens ["Who", "cares", "!", "Tyga", "is", "a", "wash", "-", "up", "&", "amp", ";", "is", "a", "raising", "star", "!", "She", "is", "way", "better", "off", "a", "million", "times", "over", "!"]
# ::lemmas ["who", "care", "!", "tyga", "be", "a", "wash", "-", "up", "&", "amp", ";", "be", "a", "raise", "star", "!", "she", "be", "way", "well", "off", "a", "million", "time", "over", "!"]
(c7-1 / multi-sentence
      :snt1 (c7-8 / care-01
                  :ARG0 (c7-12 / amr-unknown))
      :snt2 (c7-11 / and
                   :op1 (c7-7 / wash-up-02
                              :ARG1 (c7-5 / person
                                          :name (c7-2 / name
                                                      :op1 "Tyga")))
                   :op2 (c7-9 / amp
                              :domain c7-5)
                   :op3 (c7-3 / star
                              :ARG0-of (c7-4 / raise-01)
                              :domain c7-5))
      :snt3 (c7-6 / well-off-06
                  :ARG1 (c7-0 / she)
                  :degree (c7-13 / way)
                  :frequency (c7-10 / times
                                    :quant 1000000)))

# ::snt The lil talentless thug just PISSED the $HIAN train has thrown him off!! What's he going to do for $? Run back to ???
# ::tokens ["The", "lil", "talentless", "thug", "just", "PISSED", "the", "$", "HIAN", "train", "has", "thrown", "him", "off", "!", "!", "What", "'s", "he", "going", "to", "do", "for", "$", "?", "Run", "back", "to", "?", "?", "?"]
# ::lemmas ["the", "lil", "talentless", "thug", "just", "piss", "the", "$", "hian", "train", "have", "throw", "he", "off", "!", "!", "what", "be", "he", "go", "to", "do", "for", "$", "?", "run", "back", "to", "?", "?", "?"]
(c8-3 / multi-sentence
      :snt1 (c8-8 / piss-off-02
                  :ARG0 (c8-12 / thug
                               :mod (c8-14 / talent
                                           :polarity -)
                               :mod (c8-9 / lil))
                  :ARG1 (c8-13 / train
                               :mod (c8-11 / country
                                           :name (c8-4 / name
                                                       :op1 "Hindu")))
                  :mod (c8-15 / just))
      :snt2 (c8-16 / do-02
                   :ARG0 (c8-7 / he)
                   :ARG1 (c8-5 / amr-unknown)
                   :ARG3 (c8-10 / monetary-quantity
                                :quant (c8-0 / $1))
                   :snt3 (c8-6 / run-02
                               :ARG0 (c8-2 / you)
                               :direction (c8-1 / back)
                               :polarity c8-5
                               :mode imperative)))

# ::snt he us trying too hard and his shit keeps getting wack everyday
# ::tokens ["he", "us", "trying", "too", "hard", "and", "his", "shit", "keeps", "getting", "wack", "everyday"]
# ::lemmas ["he", "we", "try", "too", "hard", "and", "his", "shit", "keep", "get", "wack", "everyday"]
(c9-1 / and
      :op1 (c9-10 / try-01
                  :ARG0 (c9-7 / we)
                  :ARG1-of (c9-4 / have-degree-91
                                 :ARG2 (c9-8 / hard-02
                                             :ARG1 c9-10)
                                 :ARG3 (c9-13 / too)))
      :op2 (c9-5 / keep-02
                 :ARG1 (c9-11 / get-03
                              :ARG1 (c9-0 / shit
                                          :poss (c9-3 / he))
                              :ARG2 (c9-6 / wack)
                              :frequency (c9-2 / rate-entity-91
                                               :ARG3 (c9-9 / temporal-quantity
                                                           :unit (c9-12 / day)
                                                           :quant 1)))))

# ::snt he broke and she's rich, who gives a fuck about his song? Please report more important news..
# ::tokens ["he", "broke", "and", "she", "'s", "rich", ",", "who", "gives", "a", "fuck", "about", "his", "song", "?", "Please", "report", "more", "important", "news", ".."]
# ::lemmas ["he", "break", "and", "she", "be", "rich", ",", "who", "give", "a", "fuck", "about", "his", "song", "?", "please", "report", "more", "important", "news", ".."]
(c10-4 / multi-sentence
       :snt1 (c10-13 / and
                     :op1 (c10-2 / break-13
                                 :ARG1 (c10-9 / he))
                     :op2 (c10-7 / rich
                                 :domain (c10-6 / she)))
       :snt2 (c10-14 / give-16
                     :ARG0 (c10-12 / amr-unknown)
                     :ARG1 (c10-0 / fuck)
                     :ARG2 (c10-1 / song
                                  :poss (c10-11 / he)))
       :snt3 (c10-16 / report-01
                     :ARG0 (c10-3 / you)
                     :ARG1 (c10-5 / news
                                  :ARG1-of (c10-8 / have-degree-91
                                                  :ARG2 (c10-15 / important-01
                                                                :ARG1 c10-5)
                                                  :ARG3 (c10-10 / more)))
                     :mode imperative
                     :polite +))

# ::snt There is nothing in this world that I could care less about
# ::tokens ["There", "is", "nothing", "in", "this", "world", "that", "I", "could", "care", "less", "about"]
# ::lemmas ["there", "be", "nothing", "in", "this", "world", "that", "i", "could", "care", "less", "about"]
(c11-0 / nothing
       :location (c11-4 / world
                        :mod (c11-7 / this))
       :ARG1-of (c11-5 / care-01
                       :ARG0 (c11-6 / i)
                       :ARG1-of (c11-2 / possible-01)
                       :ARG1-of (c11-1 / have-quant-91
                                       :ARG3 (c11-3 / less))))

# ::snt Tf
# ::tokens ["Tf"]
# ::lemmas ["tf"]
(c12-1 / person
       :name (c12-0 / name
                    :op1 "Tf"))

# ::snt CHECK OUT MY PROFILE AND LISTEN TO THE BEST SONG EVER!!!!!!!
# ::tokens ["CHECK", "OUT", "MY", "PROFILE", "AND", "LISTEN", "TO", "THE", "BEST", "SONG", "EVER", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["check", "out", "my", "profile", "and", "listen", "to", "the", "BEST", "SONG", "ever", "!", "!", "!", "!", "!", "!", "!"]
(c13-3 / and
       :op1 (c13-8 / check-out-05
                   :ARG0 (c13-0 / you)
                   :ARG1 (c13-10 / thing
                                 :ARG1-of (c13-6 / prove-01
                                                 :ARG0 (c13-9 / i)))
                   :mode imperative)
       :op2 (c13-7 / listen-01
                   :ARG0 c13-0
                   :ARG1 (c13-2 / song
                                :ARG1-of (c13-5 / have-degree-91
                                                :ARG2 (c13-11 / good-02
                                                              :ARG1 c13-2)
                                                :ARG3 (c13-1 / most)
                                                :time (c13-4 / ever)))
                   :mode imperative)
       :mode expressive)

# ::snt I'm wondering how delusional tyga is because Kylie is literally already dating a much more successful rapper
# ::tokens ["I", "'m", "wondering", "how", "delusional", "tyga", "is", "because", "Kylie", "is", "literally", "already", "dating", "a", "much", "more", "successful", "rapper"]
# ::lemmas ["i", "be", "wonder", "how", "delusional", "tyga", "be", "because", "Kylie", "be", "literally", "already", "date", "a", "much", "more", "successful", "rapper"]
(c14-11 / wonder-01
        :ARG0 (c14-14 / i)
        :ARG1 (c14-15 / thing
                      :degree-of (c14-16 / delusional
                                         :domain (c14-7 / person
                                                        :name (c14-0 / name
                                                                     :op1 "Tyga"))
                                         :ARG1-of (c14-12 / cause-01
                                                          :ARG0 (c14-13 / date-02
                                                                        :ARG0 (c14-1 / person
                                                                                     :name (c14-6 / name
                                                                                                  :op1 "Kylie"))
                                                                        :ARG1 (c14-17 / person
                                                                                      :ARG0-of (c14-4 / rap-01)
                                                                                      :ARG0-of (c14-2 / succeed-01
                                                                                                      :ARG2-of (c14-8 / have-degree-91
                                                                                                                      :ARG1 c14-17
                                                                                                                      :ARG3 (c14-3 / more
                                                                                                                                   :quant (c14-9 / much)))))
                                                                        :time (c14-5 / already)
                                                                        :manner (c14-10 / literal))))))

# ::snt Im tryna be on the same shit
# ::tokens ["I", "m", "tryna", "be", "on", "the", "same", "shit"]
# ::lemmas ["i", "m", "tryna", "be", "on", "the", "same", "shit"]
(c15-4 / try-01
       :ARG0 (c15-3 / i)
       :ARG1 (c15-0 / on
                    :op1 (c15-2 / shit
                                :ARG1-of (c15-1 / same-01)))
       :polarity -)

# ::snt Hello
# ::tokens ["Hello"]
# ::lemmas ["hello"]
(c16-0 / hello)

# ::snt Who is Tyga
# ::tokens ["Who", "is", "Tyga"]
# ::lemmas ["who", "be", "tyga"]
(c17-1 / person
       :name (c17-0 / name
                    :op1 "Tyga")
       :domain (c17-2 / amr-unknown))

# ::snt No one cares ...
# ::tokens ["No", "one", "cares", "..."]
# ::lemmas ["no", "one", "care", "..."]
(c18-0 / care-01
       :ARG0 (c18-1 / no-one))

# ::snt The truth is I really never heard him rap! And I rather listen to Dierks Bentley ,Blake Shelton, Gwen stefani something like That
# ::tokens ["The", "truth", "is", "I", "really", "never", "heard", "him", "rap", "!", "And", "I", "rather", "listen", "to", "Dierks", "Bentley", ",", "Blake", "Shelton", ",", "Gwen", "stefani", "something", "like", "That"]
# ::lemmas ["the", "truth", "be", "i", "really", "never", "hear", "he", "rap", "!", "and", "i", "rather", "listen", "to", "Dierks", "Bentley", ",", "Blake", "Shelton", ",", "Gwen", "stefani", "something", "like", "that"]
(c19-10 / multi-sentence
        :snt1 (c19-9 / true-01
                     :ARG1 (c19-6 / hear-01
                                  :ARG0 (c19-20 / i)
                                  :ARG1 (c19-16 / rap)
                                  :time (c19-17 / ever)
                                  :ARG1-of (c19-4 / real-04)
                                  :polarity -))
        :snt2 (c19-8 / and
                     :op2 (c19-18 / prefer-01
                                  :ARG0 (c19-5 / i)
                                  :ARG1 (c19-1 / listen-01
                                               :ARG0 c19-5
                                               :ARG1 (c19-7 / and
                                                            :op1 (c19-11 / person
                                                                         :name (c19-15 / name
                                                                                       :op1 "Dierks"
                                                                                       :op2 "Bentley"))
                                                            :op2 (c19-3 / person
                                                                        :name (c19-12 / name
                                                                                      :op1 "Blake"
                                                                                      :op2 "Shelton"))
                                                            :op3 (c19-2 / person
                                                                        :name (c19-19 / name
                                                                                      :op1 "Gwen"
                                                                                      :op2 "Steefani")))
                                               :ARG2 (c19-0 / something
                                                            :ARG1-of (c19-13 / resemble-01
                                                                             :ARG2 (c19-14 / that)))))))

# ::snt what a trash
# ::tokens ["what", "a", "trash"]
# ::lemmas ["what", "a", "trash"]
(c20-1 / trash
       :degree (c20-0 / so))

# ::snt I wouldn't waste one second of my existence listening to his TRASH ASS MUSIC.
# ::tokens ["I", "would", "n't", "waste", "one", "second", "of", "my", "existence", "listening", "to", "his", "TRASH", "ASS", "MUSIC", "."]
# ::lemmas ["i", "would", "not", "waste", "one", "second", "of", "my", "existence", "listen", "to", "his", "TRASH", "ASS", "music", "."]
(c21-6 / waste-01
       :ARG0 (c21-7 / i)
       :ARG1 (c21-8 / temporal-quantity
                    :unit (c21-2 / second)
                    :quant-of (c21-3 / exist-01
                                     :ARG1 c21-7)
                    :quant 1)
       :ARG2 (c21-5 / listen-01
                    :ARG0 c21-7
                    :ARG1 (c21-0 / music
                                 :name (c21-1 / name
                                              :op1 "Trash"
                                              :op2 "Ass"
                                              :op3 "Music")
                                 :poss (c21-4 / he)))
       :polarity -)

# ::snt Why is he still making music, better yet who is buying it
# ::tokens ["Why", "is", "he", "still", "making", "music", ",", "better", "yet", "who", "is", "buying", "it"]
# ::lemmas ["why", "be", "he", "still", "make", "music", ",", "well", "yet", "who", "be", "buy", "it"]
(c22-2 / make-01
       :ARG0 (c22-5 / he)
       :ARG1 (c22-4 / music)
       :mod (c22-3 / still)
       :ARG1-of (c22-7 / cause-01
                       :ARG0 (c22-9 / amr-unknown))
       :ARG1-of (c22-8 / have-degree-91
                       :ARG2 (c22-10 / good-02
                                     :ARG1 c22-2
                                     :mod (c22-1 / yet))
                       :ARG3 (c22-11 / more)
                       :ARG4 (c22-6 / person
                                    :ARG0-of (c22-0 / buy-01
                                                    :ARG1 c22-4))))
