# ::snt She's beautiful and woke. Love her.
# ::tokens ["She", "'s", "beautiful", "and", "woke", ".", "Love", "her", "."]
# ::lemmas ["she", "be", "beautiful", "and", "woke", ".", "love", "she", "."]
(c1-2 / multi-sentence
      :snt1 (c1-6 / and
                  :op1 (c1-1 / beautiful-02
                             :ARG1 (c1-3 / she))
                  :op2 (c1-5 / wake-01
                             :ARG1 c1-3))
      :snt2 (c1-4 / love-01
                  :ARG1 (c1-0 / she)))

# ::snt Yes but to quote her "Healthcare is a privilege not a right". Bitch needs to take off that crown and give it to someone else.
# ::tokens ["Yes", "but", "to", "quote", "her", "\"", "Healthcare", "is", "a", "privilege", "not", "a", "right", "\"", ".", "Bitch", "needs", "to", "take", "off", "that", "crown", "and", "give", "it", "to", "someone", "else", "."]
# ::lemmas ["yes", "but", "to", "quote", "her", "\"", "Healthcare", "be", "a", "privilege", "not", "a", "right", "\"", ".", "bitch", "need", "to", "take", "off", "that", "crown", "and", "give", "it", "to", "someone", "else", "."]
(c2-1 / multi-sentence
      :snt1 (c2-10 / contrast-01
                   :ARG2 (c2-12 / quote-01
                                :ARG1 (c2-8 / privilege-01
                                            :ARG2 (c2-7 / healthcare))
                                :ARG2 (c2-5 / right-05
                                            :ARG2 c2-7
                                            :polarity -))
                   :ARG1-of c2-12
                   :ARG2 (c2-3 / she))
      :snt2 (c2-2 / need-01
                  :ARG0 (c2-4 / person
                              :name (c2-9 / name
                                          :op1 "Bitch"))
                  :ARG1 (c2-13 / and
                               :op1 (c2-11 / take-off-07
                                           :ARG0 c2-4
                                           :ARG1 (c2-16 / crown
                                                        :mod (c2-15 / that)))
                               :op2 (c2-14 / give-01
                                           :ARG0 c2-4
                                           :ARG1 c2-16
                                           :ARG2 (c2-0 / someone
                                                       :mod (c2-6 / else))))))

# ::snt NEW VIDEO ALERT new Official Music ...
# ::tokens ["NEW", "VIDEO", "ALERT", "new", "Official", "Music", "..."]
# ::lemmas ["new", "video", "ALERT", "new", "Official", "Music", "..."]
(c3-4 / alert-01
      :ARG2 (c3-2 / music
                  :mod (c3-0 / official)
                  :ARG1-of (c3-1 / new-01
                                 :ARG1 c3-4))
      :ARG1-of (c3-3 / video-01))

# ::snt Wow. Something/Someone good came out of Washington? A refreshing change. Congratulations, Ms. D.C.!!
# ::tokens ["Wow", ".", "Something", "/", "Someone", "good", "came", "out", "of", "Washington", "?", "A", "refreshing", "change", ".", "Congratulations", ",", "Ms.", "D.C.", "!", "!"]
# ::lemmas ["wow", ".", "something", "/", "someone", "good", "come", "out", "of", "Washington", "?", "a", "refreshing", "change", ".", "congratulation", ",", "Ms.", "D.C.", "!", "!"]
(c4-2 / multi-sentence
      :snt1 (c4-8 / come-out-09
                  :ARG1 (c4-4 / slash
                              :op1 (c4-1 / something)
                              :op2 (c4-14 / someone)
                              :ARG1-of (c4-12 / good-02))
                  :source (c4-13 / city
                                 :name (c4-3 / name
                                             :op1 "Washington"))
                  :polarity (c4-11 / amr-unknown))
      :snt2 (c4-9 / change-01
                  :ARG0-of (c4-5 / refresh-01)
                  :polarity (c4-10 / amr-unknown))
      :snt3 (c4-0 / congratulate-01
                  :ARG1 (c4-7 / person
                              :name (c4-6 / name
                                          :op1 "Ms."
                                          :op2 "D.C."))))

# ::snt Blinded Me with Science!
# ::tokens ["Blinded", "Me", "with", "Science", "!"]
# ::lemmas ["Blinded", "i", "with", "Science", "!"]
(c5-0 / blind-01
      :ARG1 (c5-1 / you)
      :ARG2 (c5-2 / i)
      :instrument (c5-3 / science)
      :mode expressive)

# ::snt should've been mz. Minnesota ...she was purfect..
# ::tokens ["should", "'ve", "been", "mz", ".", "Minnesota", "...", "she", "was", "purfect", ".."]
# ::lemmas ["should", "'ve", "be", "mz", ".", "Minnesota", "...", "she", "be", "purfect", ".."]
(c6-1 / multi-sentence
      :snt1 (c6-4 / recommend-01
                  :ARG1 (c6-6 / person
                              :name (c6-0 / name
                                          :op1 "Minnesota")
                              :ARG0-of (c6-5 / have-org-role-91
                                             :ARG2 (c6-7 / mz))))
      :snt2 (c6-2 / purfect
                  :domain (c6-3 / she)))

# ::snt Well, thanks for that. It just started on the West coast. No need to watch it now.
# ::tokens ["Well", ",", "thanks", "for", "that", ".", "It", "just", "started", "on", "the", "West", "coast", ".", "No", "need", "to", "watch", "it", "now", "."]
# ::lemmas ["well", ",", "thank", "for", "that", ".", "it", "just", "start", "on", "the", "West", "coast", ".", "no", "need", "to", "watch", "it", "now", "."]
(c8-1 / multi-sentence
      :snt1 (c8-10 / thank-01
                   :ARG0 (c8-11 / i)
                   :ARG1 (c8-0 / you)
                   :ARG2 (c8-12 / that)
                   :mod (c8-8 / well))
      :snt2 (c8-3 / start-01
                  :ARG1 (c8-4 / it)
                  :time (c8-13 / just)
                  :location (c8-9 / country-region
                                  :name (c8-2 / name
                                              :op1 "West"
                                              :op2 "Coast")))
      :snt3 (c8-5 / need-01
                  :ARG1 (c8-7 / watch-01
                              :ARG1 (c8-14 / it)
                              :time (c8-6 / now))
                  :polarity -))

# ::snt Congrulations she's quite a beauty she was crowned haters come out in full for force just cause of her answer their never be happy
# ::tokens ["Congrulations", "she", "'s", "quite", "a", "beauty", "she", "was", "crowned", "haters", "come", "out", "in", "full", "for", "force", "just", "cause", "of", "her", "answer", "their", "never", "be", "happy"]
# ::lemmas ["congrulation", "she", "be", "quite", "a", "beauty", "she", "be", "crown", "hater", "come", "out", "in", "full", "for", "force", "just", "cause", "of", "she", "answer", "their", "never", "be", "happy"]
(c9-3 / multi-sentence
      :snt1 (c9-2 / beauty
                  :domain (c9-4 / she)
                  :degree (c9-11 / quite))
      :snt2 (c9-8 / crown-01
                  :ARG1 (c9-0 / she))
      :snt3 (c9-13 / come-out-09
                   :ARG1 (c9-6 / person
                               :ARG0-of (c9-5 / hate-01))
                   :manner (c9-1 / full-09
                                 :ARG1 c9-6
                                 :ARG2 (c9-7 / force))
                   :ARG1-of (c9-9 / cause-01
                                  :ARG0 (c9-12 / answer-01
                                               :ARG0 c9-0)
                                  :mod (c9-10 / just))))

# ::snt Well thank you very much...my TV has not yet gotten to the ending....
# ::tokens ["Well", "thank", "you", "very", "much", "...", "my", "TV", "has", "not", "yet", "gotten", "to", "the", "ending", "...."]
# ::lemmas ["well", "thank", "you", "very", "much", "...", "my", "tv", "have", "not", "yet", "get", "to", "the", "ending", "...."]
(c10-1 / multi-sentence
       :snt1 (c10-6 / thank-01
                    :ARG0 (c10-5 / i)
                    :ARG1 (c10-0 / you)
                    :mod (c10-4 / much
                                :degree (c10-2 / very)))
       :snt2 (c10-7 / get-05
                    :ARG1 (c10-9 / television
                                 :poss c10-5)
                    :ARG2 (c10-3 / end-01
                                 :ARG1 c10-9)
                    :time (c10-8 / yet)
                    :polarity -))
