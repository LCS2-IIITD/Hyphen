# ::snt *force meself to be in an illegal stuff in a cargo so that no money would be needed
# ::tokens ["*", "force", "meself", "to", "be", "in", "an", "illegal", "stuff", "in", "a", "cargo", "so", "that", "no", "money", "would", "be", "needed"]
# ::lemmas ["*", "force", "meself", "to", "be", "in", "an", "illegal", "stuff", "in", "a", "cargo", "so", "that", "no", "money", "would", "be", "need"]
(c2-0 / force-01
      :ARG1 (c2-6 / person
                  :name (c2-2 / name
                              :op1 "Jesus"))
      :ARG2 (c2-1 / be-located-at-91
                  :ARG1 c2-6
                  :ARG2 (c2-4 / stuff
                              :ARG1-of (c2-7 / legal-02
                                             :polarity -))
                  :location (c2-8 / cargo))
      :purpose (c2-5 / need-01
                     :ARG1 (c2-3 / money)
                     :polarity -))

# ::snt C LOGRAAAA
# ::tokens ["C", "LOGRAAAA"]
# ::lemmas ["C", "LOGRAAAA"]
(c3-1 / laugh-01
      :ARG0 (c3-2 / i)
      :manner (c3-0 / loud)
      :mode expressive)

# ::snt Do you mean Louis, Liam and Niall....
# ::tokens ["Do", "you", "mean", "Louis", ",", "Liam", "and", "Niall", "...."]
# ::lemmas ["do", "you", "mean", "Louis", ",", "Liam", "and", "Niall", "...."]
(c4-2 / mean-01
      :ARG0 (c4-0 / you)
      :ARG2 (c4-8 / and
                  :op1 (c4-5 / person
                             :name (c4-1 / name
                                         :op1 "Louis"))
                  :op2 (c4-3 / person
                             :name (c4-4 / name
                                         :op1 "Liam"))
                  :op3 (c4-9 / person
                             :name (c4-6 / name
                                         :op1 "Niall")))
      :polarity (c4-7 / amr-unknown))

# ::snt leslie odom jr doesnt deserve this
# ::tokens ["leslie", "odom", "jr", "does", "nt", "deserve", "this"]
# ::lemmas ["leslie", "odom", "jr", "do", "not", "deserve", "this"]
(c5-0 / deserve-01
      :ARG0 (c5-2 / person
                  :name (c5-1 / name
                              :op1 "Leslie"
                              :op2 "Odom"
                              :op3 "Jr"))
      :ARG1 (c5-3 / this)
      :polarity -)

# ::snt 'Harry Styles and others' when Leslie is a tony and grammy winner lmaoooooo okay
# ::tokens ["'", "Harry", "Styles", "and", "others", "'", "when", "Leslie", "is", "a", "tony", "and", "grammy", "winner", "lmaoooooo", "okay"]
# ::lemmas ["'", "Harry", "Styles", "and", "other", "'", "when", "Leslie", "be", "a", "tony", "and", "grammy", "winner", "lmaoooooo", "okay"]
(c6-0 / okay-04
      :ARG1 (c6-11 / and
                   :op1 (c6-6 / person
                              :name (c6-2 / name
                                          :op1 "Harry"
                                          :op2 "Styles"))
                   :op2 (c6-3 / person
                              :mod (c6-1 / other)))
      :condition (c6-13 / person
                        :ARG0-of (c6-7 / win-01
                                       :ARG1 (c6-10 / and
                                                    :op1 (c6-9 / tony)
                                                    :op2 (c6-12 / grammy)))
                        :domain (c6-8 / person
                                      :name (c6-5 / name
                                                  :op1 "Leslie")))
      :mod (c6-4 / so))

# ::snt That's what I meant too.
# ::tokens ["That", "'s", "what", "I", "meant", "too", "."]
# ::lemmas ["that", "be", "what", "i", "mean", "too", "."]
(c7-1 / mean-02
      :ARG0 (c7-2 / i)
      :ARG1 (c7-3 / that)
      :mod (c7-0 / too))

# ::snt All of these for promotion!? But I actually meant I dislike models.I can't see him surrounding by those models..It is painful
# ::tokens ["All", "of", "these", "for", "promotion", "!", "?", "But", "I", "actually", "meant", "I", "dislike", "models", ".", "I", "ca", "n't", "see", "him", "surrounding", "by", "those", "models", "..", "It", "is", "painful"]
# ::lemmas ["all", "of", "these", "for", "promotion", "!", "?", "but", "i", "actually", "mean", "i", "dislike", "model", ".", "i", "can", "not", "see", "he", "surround", "by", "those", "model", "..", "it", "be", "painful"]
(c8-9 / multi-sentence
      :snt1 (c8-3 / have-purpose-91
                  :polarity (c8-7 / amr-unknown)
                  :ARG1 (c8-8 / this
                              :mod (c8-6 / all))
                  :ARG2 (c8-15 / promote-02))
      :snt2 (c8-12 / contrast-01
                   :ARG2 (c8-4 / mean-01
                               :ARG0 (c8-17 / i)
                               :ARG2 (c8-18 / dislike-01
                                            :ARG0 c8-17
                                            :ARG1 (c8-14 / model))
                               :ARG1-of (c8-5 / actual-02)))
      :snt3 (c8-10 / possible-01
                   :ARG1 (c8-0 / see-01
                               :ARG0 c8-17
                               :ARG1 (c8-2 / surround-01
                                           :ARG1 (c8-11 / model
                                                        :mod (c8-13 / that))
                                           :ARG2 (c8-16 / he)))
                   :polarity -)
      :snt4 (c8-1 / pain-01))

# ::snt Ikr! He doesn't need those cheap models to promote his music.
# ::tokens ["Ikr", "!", "He", "does", "n't", "need", "those", "cheap", "models", "to", "promote", "his", "music", "."]
# ::lemmas ["Ikr", "!", "he", "do", "not", "need", "those", "cheap", "model", "to", "promote", "his", "music", "."]
(c9-1 / multi-sentence
      :snt1 (c9-4 / kr
                  :mode expressive)
      :snt2 (c9-0 / need-01
                  :ARG0 (c9-3 / he)
                  :ARG1 (c9-2 / model
                              :ARG1-of (c9-6 / cheap-02)
                              :mod (c9-7 / that))
                  :purpose (c9-5 / promote-02
                                 :ARG0 c9-3
                                 :ARG1 (c9-8 / music
                                             :poss c9-3))
                  :polarity -))

# ::snt Respect other artists equally! Bullshit
# ::tokens ["Respect", "other", "artists", "equally", "!", "Bullshit"]
# ::lemmas ["respect", "other", "artist", "equally", "!", "bullshit"]
(c10-3 / multi-sentence
       :snt1 (c10-4 / respect-01
                    :ARG0 (c10-2 / you)
                    :ARG1 (c10-6 / artist
                                 :mod (c10-0 / other))
                    :ARG1-of (c10-5 / equal-01)
                    :mode imperative)
       :snt2 (c10-1 / bullshit-01))

# ::snt I agree with you. Every artists deserve equal respect
# ::tokens ["I", "agree", "with", "you", ".", "Every", "artists", "deserve", "equal", "respect"]
# ::lemmas ["i", "agree", "with", "you", ".", "every", "artist", "deserve", "equal", "respect"]
(c11-1 / multi-sentence
       :snt1 (c11-6 / agree-01
                    :ARG0 (c11-5 / i)
                    :ARG2 (c11-0 / you))
       :snt2 (c11-8 / deserve-01
                    :ARG0 (c11-7 / artist
                                 :mod (c11-4 / every))
                    :ARG1 (c11-3 / respect-01
                                 :ARG1 c11-7
                                 :ARG1-of (c11-2 / equal-01))))

# ::snt True. I don't want him to be performed in VS show ever!
# ::tokens ["True", ".", "I", "do", "n't", "want", "him", "to", "be", "performed", "in", "VS", "show", "ever", "!"]
# ::lemmas ["true", ".", "i", "do", "not", "want", "he", "to", "be", "perform", "in", "VS", "show", "ever", "!"]
(c12-0 / multi-sentence
       :snt1 (c12-8 / true-01)
       :snt2 (c12-6 / want-01
                    :ARG0 (c12-7 / i)
                    :ARG1 (c12-5 / perform-01
                                 :ARG0 c12-7
                                 :ARG1 (c12-4 / he)
                                 :location (c12-2 / show
                                                  :name (c12-1 / name
                                                               :op1 " VS"))
                                 :time (c12-3 / ever))
                    :polarity -))

# ::snt Babe its in China
# ::tokens ["Babe", "its", "in", "China"]
# ::lemmas ["babe", "its", "in", "China"]
(c13-0 / be-located-at-91
       :ARG1 (c13-3 / it)
       :ARG2 (c13-2 / country
                    :name (c13-1 / name
                                 :op1 "China"))
       :mod (c13-4 / abe))

# ::snt BTS singing House of Cards.. lol
# ::tokens ["BTS", "singing", "House", "of", "Cards", "..", "lol"]
# ::lemmas ["BTS", "singe", "House", "of", "Cards", "..", "lol"]
(c14-3 / sing-01
       :ARG0 (c14-0 / broadcast-program
                    :name (c14-2 / name
                                 :op1 "BTS"))
       :ARG1 (c14-1 / music
                    :name (c14-4 / name
                                 :op1 "House"
                                 :op2 "of"
                                 :op3 "Cards"))
       :ARG2-of (c14-5 / laugh-01
                       :ARG0 (c14-6 / i)
                       :manner (c14-7 / loud)
                       :mode expressive))

# ::snt you're sure that it's the victoria's secret fashion show? It's more something like Harry Styles Live in Shanghai
# ::tokens ["you", "'re", "sure", "that", "it", "'s", "the", "victoria", "'s", "secret", "fashion", "show", "?", "It", "'s", "more", "something", "like", "Harry", "Styles", "Live", "in", "Shanghai"]
# ::lemmas ["you", "be", "sure", "that", "it", "be", "the", "victoria", "'s", "secret", "fashion", "show", "?", "it", "be", "more", "something", "like", "Harry", "Styles", "Live", "in", "Shanghai"]
(c15-4 / multi-sentence
       :snt1 (c15-6 / sure-02
                    :ARG0 (c15-3 / you)
                    :ARG1 (c15-0 / show-04
                                 :ARG0 (c15-9 / victoria)
                                 :ARG1 (c15-1 / fashion)
                                 :mod (c15-16 / secret)
                                 :domain (c15-14 / it))
                    :polarity (c15-15 / amr-unknown))
       :snt2 (c15-7 / something
                    :ARG1-of (c15-8 / resemble-01
                                    :ARG2 (c15-2 / broadcast-program
                                                 :name (c15-5 / name
                                                              :op1 "Harry"
                                                              :op2 "Styles"
                                                              :op3 "Live")
                                                 :location (c15-13 / city
                                                                   :name (c15-11 / name
                                                                                 :op1 "Shanghai"))))
                    :mod (c15-12 / more)
                    :domain (c15-10 / it)))

# ::snt Harry Styles and others... thats me lmao
# ::tokens ["Harry", "Styles", "and", "others", "...", "that", "s", "me", "lmao"]
# ::lemmas ["Harry", "Styles", "and", "other", "...", "that", "s", "i", "lmao"]
(c16-7 / and
       :op1 (c16-6 / and
                   :op1 (c16-4 / person
                               :name (c16-2 / name
                                            :op1 "Harry"
                                            :op2 "Styles"))
                   :op2 (c16-3 / person
                               :mod (c16-0 / other)))
       :op2 (c16-1 / opine-01
                   :ARG0 (c16-8 / i)
                   :ARG1 c16-6
                   :mod (c16-5 / laugh-01
                               :ARG0 c16-8
                               :manner (c16-9 / loud)
                               :mode expressive)))

# ::snt Harry Styles Live In Shanghai
# ::tokens ["Harry", "Styles", "Live", "In", "Shanghai"]
# ::lemmas ["Harry", "Styles", "Live", "in", "Shanghai"]
(c17-3 / live
       :mod (c17-2 / person
                   :name (c17-0 / name
                                :op1 "Harry"
                                :op2 "Styles"))
       :location (c17-4 / city
                        :name (c17-1 / name
                                     :op1 "Shanghai")))

# ::snt Three others hahaha
# ::tokens ["Three", "others", "hahaha"]
# ::lemmas ["Three", "other", "hahaha"]
(c18-0 / other
       :mod (c18-1 / haha
                   :mode expressive)
       :quant 3)

# ::snt Ok um
# ::tokens ["Ok", "um"]
# ::lemmas ["ok", "um"]
(c19-0 / okay-01
       :mod (c19-1 / um))

# ::snt No Niall. Thanks god for that.
# ::tokens ["No", "Niall", ".", "Thanks", "god", "for", "that", "."]
# ::lemmas ["no", "niall", ".", "thank", "god", "for", "that", "."]
(c20-1 / multi-sentence
       :snt1 (c20-2 / say-01
                    :ARG0 (c20-8 / i)
                    :ARG1 (c20-0 / no)
                    :ARG2 (c20-6 / person
                                 :name (c20-5 / name
                                              :op1 "Niall")))
       :snt2 (c20-9 / thank-01
                    :ARG0 (c20-3 / i)
                    :ARG1 (c20-4 / person
                                 :name (c20-7 / name
                                              :op1 "God"))
                    :ARG2 (c20-10 / that)))

# ::snt no taylor swift no fun
# ::tokens ["no", "taylor", "swift", "no", "fun"]
# ::lemmas ["no", "taylor", "swift", "no", "fun"]
(c21-0 / fun-01
       :ARG0 (c21-2 / person
                    :name (c21-1 / name
                                 :op1 "Taylor"
                                 :op2 "Swift"))
       :polarity -)

# ::snt Lezgo
# ::tokens ["Lezgo"]
# ::lemmas ["lezgo"]
(c22-1 / person
       :name (c22-0 / name
                    :op1 "Lezgo"))

# ::snt No.
# ::tokens ["No", "."]
# ::lemmas ["no", "."]
(c23-0 / no)

# ::snt "Harry styles and others" LMAO
# ::tokens ["\"", "Harry", "styles", "and", "others", "\"", "LMAO"]
# ::lemmas ["\"", "Harry", "style", "and", "other", "\"", "lmao"]
(c24-5 / laugh-01
       :ARG0 (c24-8 / i
                    :part (c24-4 / ass))
       :ARG1 (c24-7 / and
                    :op1 (c24-3 / style
                                :mod (c24-6 / person
                                            :name (c24-2 / name
                                                         :op1 "Harry")))
                    :op2 (c24-0 / other))
       :ARG3 (c24-1 / off
                    :op1 c24-4))

# ::snt Kiwi definitely isn't a slow song xd
# ::tokens ["Kiwi", "definitely", "is", "n't", "a", "slow", "song", "xd"]
# ::lemmas ["Kiwi", "definitely", "be", "not", "a", "slow", "song", "xd"]
(c25-3 / say-01
       :ARG0 (c25-5 / i)
       :ARG1 (c25-0 / song
                    :ARG1-of (c25-7 / slow-05
                                    :polarity -)
                    :domain (c25-1 / music
                                   :name (c25-2 / name
                                                :op1 "Kiwi"))
                    :mod (c25-6 / definite))
       :ARG2 (c25-4 / person
                    :name c25-2
                    :op1 "xd"))

# ::snt La combinacin perfecta, no?
# ::tokens ["La", "combinacin", "perfecta", ",", "no", "?"]
# ::lemmas ["La", "combinacin", "perfecta", ",", "no", "?"]
(c26-1 / perfecta
       :domain (c26-2 / la)
       :ARG1-of (c26-0 / request-confirmation-91)
       :mode expressive)

# ::snt The Weekend?, Taylor Swift, etc! No slow songs! The music has to go to the beat of the girl's walk!
# ::tokens ["The", "Weekend", "?", ",", "Taylor", "Swift", ",", "etc", "!", "No", "slow", "songs", "!", "The", "music", "has", "to", "go", "to", "the", "beat", "of", "the", "girl", "'s", "walk", "!"]
# ::lemmas ["the", "Weekend", "?", ",", "Taylor", "Swift", ",", "etc", "!", "no", "slow", "song", "!", "the", "music", "have", "to", "go", "to", "the", "beat", "of", "the", "girl", "'s", "walk", "!"]
(c28-4 / multi-sentence
       :snt1 (c28-12 / and
                     :op1 (c28-2 / broadcast-program
                                 :name (c28-3 / name
                                              :op1 "The"
                                              :op2 "Weekend")
                                 :polarity (c28-11 / amr-unknown))
                     :op2 (c28-8 / person
                                 :name c28-3
                                 :op1 "Taylor"
                                 :op2 "Swift"))
       :op3 (c28-6 / et-cetera)
       :snt2 (c28-5 / song
                    :ARG1-of (c28-0 / slow-05)
                    :polarity -)
       :snt3 (c28-1 / obligate-01
                    :ARG2 (c28-13 / go-01
                                  :ARG1 (c28-7 / music)
                                  :ARG4 (c28-9 / beat-01
                                               :ARG0 (c28-10 / walk-01
                                                             :ARG0 (c28-14 / girl))))))

# ::snt Greeeeaaaatttt
# ::tokens ["Greeeeaaaatttt"]
# ::lemmas ["Greeeeaaaatttt"]
(c29-1 / person
       :name (c29-0 / name
                    :op1 "Jesus")
       :mode expressive)

# ::snt I will watch it just for him
# ::tokens ["I", "will", "watch", "it", "just", "for", "him"]
# ::lemmas ["i", "will", "watch", "it", "just", "for", "he"]
(c31-2 / watch-01
       :ARG0 (c31-4 / i)
       :ARG1 (c31-0 / it)
       :beneficiary (c31-1 / he)
       :mod (c31-3 / just))

# ::snt "And others"
# ::tokens ["\"", "And", "others", "\""]
# ::lemmas ["\"", "and", "other", "\""]
(c32-1 / and
       :op2 (c32-0 / other))

# ::snt Siempre encuentro tu comentario Ya parezco acosadora
# ::tokens ["Siempre", "encuentro", "tu", "comentario", "Ya", "parezco", "acosadora"]
# ::lemmas ["Siempre", "encuentro", "tu", "comentario", "Ya", "parezco", "acosadora"]
(c35-1 / multi-sentence
       :snt1 (c35-5 / permit-01
                    :ARG0 (c35-0 / you)
                    :ARG1 (c35-4 / encuentro-00
                                 :ARG1 (c35-9 / you)
                                 :ARG2 (c35-6 / comentario
                                              :domain c35-9)))
       :snt2 (c35-3 / say-01
                    :ARG0 (c35-7 / i)
                    :ARG1 (c35-2 / parezco
                                 :mod (c35-8 / acosadora))
                    :ARG2 c35-9))

# ::snt Harreeeee
# ::tokens ["Harreeeee"]
# ::lemmas ["Harreeeee"]
(c36-1 / person
       :name (c36-0 / name
                    :op1 "Harreeeee"))

# ::snt Yes! Only angel is the song of the night! But I wouldnt be mad over kiwi either those vocals him Im dying
# ::tokens ["Yes", "!", "Only", "angel", "is", "the", "song", "of", "the", "night", "!", "But", "I", "would", "nt", "be", "mad", "over", "kiwi", "either", "those", "vocals", "him", "I", "m", "dying"]
# ::lemmas ["yes", "!", "only", "angel", "be", "the", "song", "of", "the", "night", "!", "but", "i", "would", "not", "be", "mad", "over", "kiwi", "either", "those", "vocal", "he", "i", "m", "die"]
(c37-4 / multi-sentence
       :snt1 (c37-2 / yes
                    :mode expressive)
       :snt2 (c37-5 / song
                    :time (c37-15 / date-entity
                                  :dayperiod (c37-3 / night))
                    :domain (c37-7 / music
                                   :name (c37-8 / name
                                                :op1 "Angel")
                                   :mod (c37-0 / only)))
       :snt3 (c37-11 / contrast-01
                     :ARG2 (c37-16 / mad-04
                                   :ARG0 (c37-9 / person
                                                :name (c37-10 / name
                                                              :op1 "Kiwi"))
                                   :ARG1 (c37-13 / i)
                                   :ARG2 (c37-1 / sing-01
                                                :ARG0 c37-13
                                                :mod (c37-6 / either)
                                                :mod (c37-14 / that)
                                                :ARG0-of (c37-17 / cause-01
                                                                 :ARG1 (c37-12 / die-01
                                                                               :ARG1 c37-13)))
                                   :polarity -)))

# ::snt YES! So good he has to do Only Angel right?! x
# ::tokens ["YES", "!", "So", "good", "he", "has", "to", "do", "Only", "Angel", "right", "?", "!", "x"]
# ::lemmas ["yes", "!", "so", "good", "he", "have", "to", "do", "only", "Angel", "right", "?", "!", "x"]
(c38-3 / multi-sentence
       :snt1 (c38-2 / yes
                    :mode expressive)
       :snt2 (c38-7 / have-degree-91
                    :ARG1 (c38-0 / obligate-01
                                 :ARG1 (c38-8 / he)
                                 :ARG2 (c38-11 / do-02
                                               :ARG0 c38-8
                                               :ARG1 (c38-9 / thing
                                                            :name (c38-4 / name
                                                                         :op1 "Angel")
                                                            :mod (c38-1 / only))))
                    :ARG2 (c38-10 / good-02
                                  :ARG1 c38-0)
                    :ARG3 (c38-5 / so)
                    :ARG1-of (c38-6 / request-confirmation-91)))

# ::snt Harry kuinazo.
# ::tokens ["Harry", "kuinazo", "."]
# ::lemmas ["Harry", "kuinazo", "."]
(c39-1 / person
       :name (c39-0 / name
                    :op1 "Harry"
                    :op2 "Kuinazo"))

# ::snt Y otros tres :v
# ::tokens ["Y", "otros", "tres", ":", "v"]
# ::lemmas ["Y", "otros", "tre", ":", "v"]
(c40-3 / say-01
       :ARG0 (c40-2 / i)
       :ARG1 (c40-0 / otros
                    :domain (c40-1 / you
                                   :ARG2-of c40-3)))

# ::snt E!News is me.
# ::tokens ["E!News", "is", "me", "."]
# ::lemmas ["e!new", "be", "i", "."]
(c42-2 / i
       :domain (c42-0 / broadcast-program
                      :name (c42-1 / name
                                   :op1 "E!News")))

# ::snt Harry Styles and others, I thought they were talking about one direction
# ::tokens ["Harry", "Styles", "and", "others", ",", "I", "thought", "they", "were", "talking", "about", "one", "direction"]
# ::lemmas ["Harry", "Styles", "and", "other", ",", "i", "think", "they", "be", "talk", "about", "one", "direction"]
(c45-5 / think-01
       :ARG0 (c45-6 / i)
       :ARG1 (c45-7 / talk-01
                    :ARG0 (c45-3 / and
                                 :op1 (c45-4 / person
                                             :name (c45-1 / name
                                                          :op1 "Harry"
                                                          :op2 "Styles"))
                                 :op2 (c45-2 / person
                                             :mod (c45-0 / other)))
                    :ARG1 (c45-8 / direction
                                 :quant 1)))

# ::snt I'll definitely be watching this year
# ::tokens ["I", "'ll", "definitely", "be", "watching", "this", "year"]
# ::lemmas ["i", "'ll", "definitely", "be", "watch", "this", "year"]
(c47-1 / watch-01
       :ARG0 (c47-2 / i)
       :time (c47-0 / year
                    :mod (c47-3 / this))
       :mod (c47-4 / definite))

# ::snt raga ma dov' taylor DOV' IL DRAMMA DOV' IL TRASHvi odio tutti
# ::tokens ["raga", "ma", "dov", "'", "taylor", "DOV", "'", "IL", "DRAMMA", "DOV", "'", "IL", "TRASHvi", "odio", "tutti"]
# ::lemmas ["raga", "ma", "dov", "'", "taylor", "DOV", "'", "IL", "DRAMMA", "DOV", "'", "IL", "TRASHvi", "odio", "tutti"]
(c50-6 / and
       :op1 (c50-15 / person
                    :name (c50-13 / name
                                  :op1 "Raga"))
       :op2 (c50-8 / person
                   :name (c50-9 / name
                                :op1 "Taylor"))
       :op3 (c50-4 / person
                   :name (c50-16 / name
                                 :op1 "Dramma"))
       :op4 (c50-3 / person
                   :name (c50-10 / name
                                 :op1 "Dramma"))
       :op5 (c50-5 / person
                   :name (c50-17 / name
                                 :op1 "Tottenham"))
       :op6 (c50-18 / person
                    :name (c50-14 / name
                                  :op1 "Tottenham"))
       :op7 (c50-12 / person
                    :name (c50-1 / name
                                 :op1 "Tottenham"))
       :op8 (c50-11 / person
                    :name (c50-0 / name
                                 :op1 "Tottenham"))
       :op9 (c50-7 / person
                   :name (c50-2 / name
                                :op1 "Tutti")))
