# ::snt That explains why you head butted the wall in Italy then
# ::tokens ["That", "explains", "why", "you", "head", "butted", "the", "wall", "in", "Italy", "then"]
# ::lemmas ["that", "explain", "why", "you", "head", "butt", "the", "wall", "in", "Italy", "then"]
(c2-3 / explain-01
      :ARG0 (c2-6 / that)
      :ARG1 (c2-8 / thing
                  :ARG0-of (c2-4 / cause-01
                                 :ARG1 (c2-0 / butt-01
                                             :ARG0 (c2-1 / you)
                                             :ARG1 (c2-5 / wall)
                                             :location (c2-9 / country
                                                             :name (c2-2 / name
                                                                         :op1 "Italy")))))
      :mod (c2-7 / then))

# ::snt Can we get the name of the guy who was supplying all the Deca and Winstrol V..
# ::tokens ["Can", "we", "get", "the", "name", "of", "the", "guy", "who", "was", "supplying", "all", "the", "Deca", "and", "Winstrol", "V", ".."]
# ::lemmas ["can", "we", "get", "the", "name", "of", "the", "guy", "who", "be", "you", "all", "the", "Deca", "and", "Winstrol", "V", ".."]
(c3-4 / possible-01
      :ARG1 (c3-10 / get-01
                   :ARG0 (c3-6 / we)
                   :ARG1 (c3-9 / thing
                               :ARG2-of (c3-0 / name-01
                                              :ARG1 (c3-8 / guy
                                                          :ARG0-of (c3-1 / supply-01
                                                                         :ARG1 (c3-2 / and
                                                                                     :op1 (c3-7 / car-make
                                                                                                :name (c3-3 / name
                                                                                                            :op1 "Deca"))
                                                                                     :op2 (c3-12 / car-make
                                                                                                 :name (c3-5 / name
                                                                                                             :op1 "Winstrol"
                                                                                                             :op2 "V"))
                                                                                     :mod (c3-11 / all))))))))

# ::snt Wow!
# ::tokens ["Wow", "!"]
# ::lemmas ["wow", "!"]
(c5-0 / wow-01
      :mode expressive)

# ::snt Im still dealing with this pills issues that could easily turn into an addiction. Broken my leg off and surgeries later here i am popin em
# ::tokens ["I", "m", "still", "dealing", "with", "this", "pills", "issues", "that", "could", "easily", "turn", "into", "an", "addiction", ".", "Broken", "my", "leg", "off", "and", "surgeries", "later", "here", "i", "am", "popin", "em"]
# ::lemmas ["i", "m", "still", "deal", "with", "this", "pill", "issue", "that", "could", "easily", "turn", "into", "an", "addiction", ".", "break", "my", "leg", "off", "and", "surgery", "later", "here", "i", "be", "popin", "em"]
(c8-13 / multi-sentence
       :snt1 (c8-19 / deal-01
                    :ARG0 (c8-18 / i)
                    :ARG1 (c8-5 / issue-02
                                :ARG0 (c8-17 / pill)
                                :mod (c8-10 / this)
                                :ARG1-of (c8-15 / turn-02
                                                :ARG2 (c8-9 / addict-01
                                                            :ARG1 c8-18)
                                                :ARG1-of (c8-14 / possible-01)
                                                :ARG1-of (c8-16 / easy-05)))
                    :mod (c8-0 / still))
       :snt2 (c8-2 / pop-01
                   :ARG0 (c8-11 / i
                                :part (c8-1 / leg
                                            :ARG1-of c8-2))
                   :location (c8-6 / here)
                   :time (c8-8 / after
                               :op1 (c8-7 / and
                                          :op1 (c8-12 / break-01
                                                      :ARG0 c8-11
                                                      :ARG1 c8-1
                                                      :manner (c8-3 / off))
                                          :op2 (c8-4 / surgery-01
                                                     :ARG1 c8-11)))))

# ::snt I remember that season. I wasn't quite sure what was wrong at the time. Not everyone has the motivation to get clean
# ::tokens ["I", "remember", "that", "season", ".", "I", "was", "n't", "quite", "sure", "what", "was", "wrong", "at", "the", "time", ".", "Not", "everyone", "has", "the", "motivation", "to", "get", "clean"]
# ::lemmas ["i", "remember", "that", "season", ".", "i", "be", "not", "quite", "sure", "what", "be", "wrong", "at", "the", "time", ".", "not", "everyone", "have", "the", "motivation", "to", "get", "clean"]
(c9-1 / multi-sentence
      :snt1 (c9-5 / remember-01
                  :ARG0 (c9-10 / i)
                  :ARG1 (c9-3 / season
                              :mod (c9-11 / that)))
      :snt2 (c9-0 / sure-02
                  :ARG0 (c9-4 / i)
                  :ARG1 (c9-8 / wrong-02
                              :ARG1 (c9-14 / thing)
                              :time (c9-12 / time))
                  :degree (c9-13 / quite)
                  :polarity -)
      :snt3 (c9-7 / motivate-01
                  :ARG0 (c9-6 / everyone
                              :ARG1-of c9-7
                              :polarity -)
                  :ARG2 (c9-2 / get-03
                              :ARG1 c9-6
                              :ARG2 (c9-9 / clean-04
                                          :ARG1 c9-6))))

# ::snt Every one could tell..Sorry Mike! Still L'VE u
# ::tokens ["Every", "one", "could", "tell", "..", "Sorry", "Mike", "!", "Still", "L'VE", "u"]
# ::lemmas ["every", "one", "could", "tell", "..", "Sorry", "Mike", "!", "still", "L'VE", "u"]
(c10-1 / multi-sentence
       :snt1 (c10-6 / possible-01
                    :ARG1 (c10-8 / tell-02
                                 :ARG0 (c10-5 / everyone)))
       :snt2 (c10-3 / say-01
                    :ARG1 (c10-0 / sorry-01
                                 :ARG1 (c10-7 / i)
                                 :ARG2 (c10-2 / person
                                              :name (c10-4 / name
                                                           :op1 "Mike")
                                              :ARG2-of c10-3)))
       :snt3 (c10-9 / still
                    :ARG0 c10-7
                    :ARG1 c10-2))

# ::snt The people at the store said they do. Crazy!
# ::tokens ["The", "people", "at", "the", "store", "said", "they", "do", ".", "Crazy", "!"]
# ::lemmas ["the", "people", "at", "the", "store", "say", "they", "do", ".", "Crazy", "!"]
(c11-1 / multi-sentence
       :snt1 (c11-2 / say-01
                    :ARG0 (c11-3 / person
                                 :location (c11-0 / store))
                    :ARG1 (c11-6 / do-02
                                 :ARG0 (c11-5 / they)))
       :snt2 (c11-4 / crazy-03
                    :mode expressive))

# ::snt Omg wow. That's nuts. Do people actually pay it
# ::tokens ["Omg", "wow", ".", "That", "'s", "nuts", ".", "Do", "people", "actually", "pay", "it"]
# ::lemmas ["Omg", "wow", ".", "that", "be", "nuts", ".", "do", "people", "actually", "pay", "it"]
(c12-2 / multi-sentence
       :snt1 (c12-6 / wow
                    :mod (c12-0 / oh-my-god
                                :mode expressive)
                    :mode expressive)
       :snt2 (c12-1 / nuts
                    :domain (c12-8 / that))
       :snt3 (c12-5 / pay-01
                    :polarity (c12-4 / amr-unknown)
                    :ARG0 (c12-3 / person)
                    :ARG1 (c12-7 / it)
                    :ARG1-of (c12-9 / actual-02)))

# ::snt It's been years for me! So proud of you!
# ::tokens ["It", "'s", "been", "years", "for", "me", "!", "So", "proud", "of", "you", "!"]
# ::lemmas ["it", "be", "be", "years", "for", "i", "!", "so", "proud", "of", "you", "!"]
(c13-1 / multi-sentence
       :snt1 (c13-5 / pass-03
                    :ARG1 (c13-4 / multiple
                                 :op1 (c13-7 / temporal-quantity
                                             :unit (c13-0 / year)
                                             :quant 1))
                    :beneficiary (c13-6 / i))
       :snt2 (c13-2 / pride-01
                    :ARG0 (c13-8 / you)
                    :degree (c13-3 / so)
                    :mode expressive))

# ::snt No kidding....could have fooled me
# ::tokens ["No", "kidding", "....", "could", "have", "fooled", "me"]
# ::lemmas ["no", "kidding", "....", "could", "have", "fool", "i"]
(c14-1 / multi-sentence
       :snt1 (c14-3 / kid-01
                    :polarity -)
       :snt2 (c14-2 / possible-01
                    :ARG1 (c14-0 / fool-01
                                 :ARG1 (c14-4 / i))))

# ::snt Why ??!! He's not a monster !!
# ::tokens ["Why", "?", "?", "!", "!", "He", "'s", "not", "a", "monster", "!", "!"]
# ::lemmas ["why", "?", "?", "!", "!", "he", "be", "not", "a", "monster", "!", "!"]
(c15-0 / multi-sentence
       :snt1 (c15-3 / cause-01
                    :ARG0 (c15-4 / amr-unknown))
       :snt2 (c15-1 / monster
                    :domain (c15-2 / he)
                    :polarity -))

# ::snt Umm no shit. Old news.
# ::tokens ["Umm", "no", "shit", ".", "Old", "news", "."]
# ::lemmas ["umm", "no", "shit", ".", "old", "news", "."]
(c16-2 / multi-sentence
       :snt1 (c16-3 / shit-01
                    :mod (c16-4 / umm
                                :mode expressive)
                    :polarity -)
       :snt2 (c16-1 / news
                    :mod (c16-0 / old)))

# ::snt R u really looking at decades of prison?
# ::tokens ["R", "u", "really", "looking", "at", "decades", "of", "prison", "?"]
# ::lemmas ["r", "u", "really", "look", "at", "decades", "of", "prison", "?"]
(c17-5 / look-01
       :ARG0 (c17-0 / you)
       :ARG1 (c17-4 / prison
                    :duration (c17-1 / multiple
                                     :op1 (c17-6 / temporal-quantity
                                                 :unit (c17-7 / decade)
                                                 :quant 1)))
       :polarity (c17-2 / amr-unknown)
       :ARG1-of (c17-3 / real-04))

# ::snt It's ok everyone has a past and we all live with it and learn from it
# ::tokens ["It", "'s", "ok", "everyone", "has", "a", "past", "and", "we", "all", "live", "with", "it", "and", "learn", "from", "it"]
# ::lemmas ["it", "be", "ok", "everyone", "have", "a", "past", "and", "we", "all", "live", "with", "it", "and", "learn", "from", "it"]
(c18-8 / and
       :op1 (c18-0 / okay-04
                   :ARG1 (c18-2 / have-03
                                :ARG0 (c18-1 / everyone)
                                :ARG1 (c18-3 / past)))
       :op2 (c18-7 / and
                   :op1 (c18-4 / live-02
                               :ARG0 (c18-5 / we
                                            :mod (c18-6 / all))
                               :ARG1 c18-3)
                   :op2 (c18-9 / learn-01
                               :ARG0 c18-5
                               :ARG2 c18-3)))

# ::snt Love the vibe.
# ::tokens ["Love", "the", "vibe", "."]
# ::lemmas ["love", "the", "vibe", "."]
(c19-1 / love-01
       :ARG1 (c19-0 / vibe))

# ::snt You're awesome and I'm so proud of u for ur sobriety! My sober date is -6-16, it's not easy but we got this
# ::tokens ["You", "'re", "awesome", "and", "I", "'m", "so", "proud", "of", "u", "for", "ur", "sobriety", "!", "My", "sober", "date", "is", "-6", "-", "16", ",", "it", "'s", "not", "easy", "but", "we", "got", "this"]
# ::lemmas ["you", "be", "awesome", "and", "i", "be", "so", "proud", "of", "u", "for", "ur", "sobriety", "!", "my", "sober", "date", "be", "-6", "-", "16", ",", "it", "be", "not", "easy", "but", "we", "get", "this"]
(c20-2 / multi-sentence
       :snt1 (c20-11 / and
                     :op1 (c20-10 / awesome-03
                                  :ARG0 (c20-1 / you))
                     :op2 (c20-7 / pride-01
                                 :ARG0 (c20-12 / i)
                                 :ARG1 c20-1
                                 :ARG2 (c20-4 / sober-02
                                              :ARG1 c20-1)
                                 :degree (c20-0 / so)))
       :snt2 (c20-13 / date-entity
                     :time-of (c20-14 / sober-02
                                      :ARG1 (c20-5 / i))
                     :ARG1-of (c20-6 / easy-05
                                     :concession-of (c20-3 / get-01
                                                           :ARG0 (c20-8 / we)
                                                           :ARG1 (c20-9 / this))
                                     :polarity -)
                     :month 6
                     :day 16))

# ::snt Lets make some Jersey shore summer memories !!!!!!
# ::tokens ["Lets", "make", "some", "Jersey", "shore", "summer", "memories", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["let", "make", "some", "Jersey", "shore", "summer", "memory", "!", "!", "!", "!", "!", "!"]
(c22-1 / make-01
       :ARG0 (c22-6 / we)
       :ARG1 (c22-5 / memory
                    :time (c22-7 / date-entity
                                 :season (c22-3 / summer))
                    :quant (c22-0 / some)
                    :location (c22-8 / shore
                                     :part-of (c22-4 / state
                                                     :name (c22-2 / name
                                                                  :op1 "Jersey"))))
       :mode imperative)

# ::snt Glad u saw n admit to ur inner demons n made a change finally for better improved Mike! This I will show my students not to give up!
# ::tokens ["Glad", "u", "saw", "n", "admit", "to", "ur", "inner", "demons", "n", "made", "a", "change", "finally", "for", "better", "improved", "Mike", "!", "This", "I", "will", "show", "my", "students", "not", "to", "give", "up", "!"]
# ::lemmas ["glad", "u", "see", "n", "admit", "to", "ur", "inner", "demon", "n", "make", "a", "change", "finally", "for", "well", "improve", "Mike", "!", "this", "i", "will", "show", "my", "student", "not", "to", "give", "up", "!"]
(c23-14 / multi-sentence
        :snt1 (c23-10 / and
                      :op1 (c23-11 / glad-02
                                   :ARG0 (c23-0 / see-01
                                                :ARG0 (c23-5 / you)
                                                :ARG1 (c23-9 / admit-01
                                                             :ARG0 c23-5
                                                             :ARG1 (c23-22 / demon
                                                                           :mod (c23-21 / inner)
                                                                           :poss c23-5)))
                                   :ARG1 c23-5)
                      :op2 (c23-7 / make-01
                                  :ARG0 c23-5
                                  :ARG1 (c23-16 / change-01
                                                :ARG0 c23-5
                                                :purpose (c23-6 / improve-01
                                                                :ARG1-of (c23-8 / have-degree-91
                                                                                :ARG2 (c23-1 / good-02
                                                                                             :ARG1 c23-6)
                                                                                :ARG3 (c23-17 / more)))
                                                :mod (c23-18 / final))))
        :snt2 (c23-4 / show-01
                     :ARG0 (c23-13 / i)
                     :ARG1 (c23-2 / give-up-07
                                  :ARG0 (c23-20 / person
                                                :ARG0-of (c23-3 / study-01
                                                                :ARG1 c23-13))
                                  :polarity -)
                     :ARG2 (c23-15 / person
                                   :name (c23-19 / name
                                                 :op1 "Mike"))
                     :mod (c23-12 / this)))

# ::snt Love the honesty. Please give Maximo time to be real and truthful, too. Being supportive of him will make that easier. (I'm a therapist btw)
# ::tokens ["Love", "the", "honesty", ".", "Please", "give", "Maximo", "time", "to", "be", "real", "and", "truthful", ",", "too", ".", "Being", "supportive", "of", "him", "will", "make", "that", "easier", ".", "(", "I", "'m", "a", "therapist", "btw", ")"]
# ::lemmas ["love", "the", "honesty", ".", "please", "give", "Maximo", "time", "to", "be", "real", "and", "truthful", ",", "too", ".", "be", "supportive", "of", "he", "will", "make", "that", "easy", ".", "(", "i", "be", "a", "therapist", "btw", ")"]
(c24-11 / multi-sentence
        :snt1 (c24-2 / love-01
                     :ARG1 (c24-4 / honesty))
        :snt2 (c24-9 / give-01
                     :ARG0 (c24-3 / you)
                     :ARG1 (c24-8 / time
                                  :purpose (c24-6 / and
                                                  :op1 (c24-15 / real-04
                                                               :ARG1 (c24-17 / person
                                                                             :name (c24-14 / name
                                                                                           :op1 "Maximo")))
                                                  :op2 (c24-12 / true-01
                                                               :ARG1 c24-17)))
                     :ARG2 c24-17
                     :mod (c24-19 / too)
                     :mode imperative
                     :polite +)
        :snt3 (c24-5 / make-02
                     :ARG0 (c24-0 / support-01
                                  :ARG0 c24-3
                                  :ARG1 c24-17)
                     :ARG1 (c24-16 / easy-05
                                   :ARG1 (c24-1 / that)
                                   :ARG2-of (c24-18 / have-degree-91
                                                    :ARG1 c24-1
                                                    :ARG3 (c24-13 / more))))
        :snt4 (c24-7 / therapist
                     :domain (c24-20 / i)
                     :mod (c24-10 / by-the-way)))

# ::snt omygauze
# ::tokens ["omygauze"]
# ::lemmas ["omygauze"]
(c25-0 / oomygauze)

# ::snt Proud of you. Keep it up.
# ::tokens ["Proud", "of", "you", ".", "Keep", "it", "up", "."]
# ::lemmas ["proud", "of", "you", ".", "keep", "it", "up", "."]
(c27-1 / multi-sentence
       :snt1 (c27-2 / pride-01
                    :ARG1 (c27-0 / you))
       :snt2 (c27-3 / keep-up-05
                    :ARG0 (c27-5 / you)
                    :ARG1 (c27-4 / it)
                    :mode imperative))

# ::snt I was using heavily when I watched the show..im days sober myself. We made it out alive keep it up, proud of you!
# ::tokens ["I", "was", "using", "heavily", "when", "I", "watched", "the", "show", "..", "im", "days", "sober", "myself", ".", "We", "made", "it", "out", "alive", "keep", "it", "up", ",", "proud", "of", "you", "!"]
# ::lemmas ["i", "be", "use", "heavily", "when", "i", "watch", "the", "show", "..", "im", "day", "sober", "myself", ".", "we", "make", "it", "out", "alive", "keep", "it", "up", ",", "proud", "of", "you", "!"]
(c28-2 / multi-sentence
       :snt1 (c28-17 / use-01
                     :ARG0 (c28-14 / i)
                     :manner (c28-6 / heavy)
                     :time (c28-11 / watch-01
                                   :ARG0 c28-14
                                   :ARG1 (c28-3 / show)))
       :snt2 (c28-0 / sober-02
                    :ARG1 c28-14
                    :duration (c28-7 / multiple
                                     :op1 (c28-15 / temporal-quantity
                                                  :unit (c28-16 / day)
                                                  :quant 1)))
       :snt3 (c28-5 / and
                    :op1 (c28-13 / make-out-23
                                 :ARG0 (c28-9 / we)
                                 :ARG1 (c28-4 / it)
                                 :manner (c28-8 / live-01
                                                :ARG0 c28-9))
                    :op2 (c28-10 / keep-up-10
                                 :ARG0 c28-9
                                 :ARG1 c28-4)
                    :op3 (c28-12 / pride-01
                                 :ARG0 c28-9
                                 :ARG1 (c28-1 / you))))

# ::snt They say honesty is the best possiblity
# ::tokens ["They", "say", "honesty", "is", "the", "best", "possiblity"]
# ::lemmas ["they", "say", "honesty", "be", "the", "good", "possiblity"]
(c29-1 / say-01
       :ARG0 (c29-5 / they)
       :ARG1 (c29-3 / possible-01
                    :ARG1 (c29-2 / honesty)
                    :ARG1-of (c29-4 / have-degree-91
                                    :ARG2 (c29-6 / good-02
                                                 :ARG1 c29-3)
                                    :ARG3 (c29-0 / most))))

# ::snt So proud of u man! Nothing to be ashamed of. Support is everywhere stay strong brother!
# ::tokens ["So", "proud", "of", "u", "man", "!", "Nothing", "to", "be", "ashamed", "of", ".", "Support", "is", "everywhere", "stay", "strong", "brother", "!"]
# ::lemmas ["so", "proud", "of", "u", "man", "!", "nothing", "to", "be", "ashamed", "of", ".", "support", "be", "everywhere", "stay", "strong", "brother", "!"]
(c30-3 / multi-sentence
       :snt1 (c30-11 / pride-01
                     :ARG0 (c30-14 / i)
                     :ARG1 (c30-10 / man)
                     :degree (c30-5 / so))
       :snt2 (c30-0 / shame-02
                    :ARG0 (c30-4 / nothing)
                    :ARG1 (c30-6 / i)
                    :polarity -)
       :snt3 (c30-16 / support-01
                     :ARG0 (c30-2 / you)
                     :ARG1 (c30-7 / person
                                  :ARG0-of (c30-12 / have-rel-role-91
                                                   :ARG1 (c30-15 / you
                                                                 :ARG2 (c30-1 / brother))
                                                   :ARG1-of (c30-8 / stay-01
                                                                   :ARG3 (c30-9 / strong-02
                                                                                :ARG1 c30-7)))
                                  :location (c30-13 / everywhere))
                     :mode imperative))

# ::snt I commend u on where u r in ur life now
# ::tokens ["I", "commend", "u", "on", "where", "u", "r", "in", "ur", "life", "now"]
# ::lemmas ["i", "commend", "u", "on", "where", "u", "r", "in", "ur", "life", "now"]
(c31-4 / commend-01
       :ARG0 (c31-5 / i)
       :ARG1 (c31-1 / you)
       :ARG2 (c31-6 / thing
                    :location-of (c31-0 / be-located-at-91
                                        :ARG1 c31-1
                                        :ARG2 (c31-3 / life
                                                     :poss c31-1)
                                        :time (c31-2 / now))))

# ::snt please work on getting your own show with your brothers it's going to be a great show. God bless.
# ::tokens ["please", "work", "on", "getting", "your", "own", "show", "with", "your", "brothers", "it", "'s", "going", "to", "be", "a", "great", "show", ".", "God", "bless", "."]
# ::lemmas ["please", "work", "on", "get", "your", "own", "show", "with", "your", "brother", "it", "be", "go", "to", "be", "a", "great", "show", ".", "God", "bless", "."]
(c32-3 / multi-sentence
       :snt1 (c32-10 / work-01
                     :ARG0 (c32-2 / you)
                     :ARG1 (c32-13 / get-04
                                   :ARG0 c32-2
                                   :ARG1 (c32-5 / show-04
                                                :ARG0 c32-2
                                                :accompanier (c32-8 / person
                                                                    :ARG0-of (c32-7 / have-rel-role-91
                                                                                    :ARG1 c32-2
                                                                                    :ARG2 (c32-1 / brother)))))
                     :polite +
                     :mode imperative)
       :snt2 (c32-0 / show-04
                    :mod (c32-11 / great)
                    :domain (c32-12 / it))
       :snt3 (c32-9 / bless-01
                    :ARG0 (c32-4 / person
                                 :name (c32-6 / name
                                              :op1 "God"))))

# ::snt glad your doing better. one day at a time.
# ::tokens ["glad", "your", "doing", "better", ".", "one", "day", "at", "a", "time", "."]
# ::lemmas ["glad", "your", "do", "well", ".", "one", "day", "at", "a", "time", "."]
(c33-1 / multi-sentence
       :snt1 (c33-7 / glad-02
                    :ARG0 (c33-5 / good-02
                                 :ARG1 (c33-8 / do-02
                                              :ARG0 (c33-0 / you))
                                 :ARG2-of (c33-2 / have-degree-91
                                                 :ARG1 c33-8
                                                 :ARG3 (c33-3 / more))))
       :snt2 (c33-4 / day
                    :mod (c33-6 / at-a-time)))

# ::snt Between Mark destroying your career and Frankie's lifestyle choices I do have to say you have the two most jealous self-centered brothers
# ::tokens ["Between", "Mark", "destroying", "your", "career", "and", "Frankie", "'s", "lifestyle", "choices", "I", "do", "have", "to", "say", "you", "have", "the", "two", "most", "jealous", "self", "-", "centered", "brothers"]
# ::lemmas ["between", "Mark", "destroy", "your", "career", "and", "Frankie", "'s", "lifestyle", "choice", "i", "do", "have", "to", "say", "you", "have", "the", "two", "most", "jealous", "self", "-", "center", "brother"]
(c34-5 / obligate-01
       :ARG1 (c34-20 / i)
       :ARG2 (c34-0 / say-01
                    :ARG0 c34-20
                    :ARG1 (c34-8 / have-03
                                 :ARG0 (c34-6 / you)
                                 :ARG1 (c34-18 / person
                                               :ARG0-of (c34-19 / have-rel-role-91
                                                                :ARG1 c34-6
                                                                :ARG2 (c34-10 / brother))
                                               :ARG0-of c34-8
                                               :ARG1 (c34-14 / center-01
                                                             :ARG2-of (c34-7 / have-degree-91
                                                                             :ARG1 c34-18
                                                                             :ARG3 (c34-11 / most))
                                                             :ARG1 c34-18
                                                             :ARG2 c34-18)
                                               :quant 2)
                                 :ARG0-of (c34-15 / have-rel-role-91
                                                  :ARG1 c34-6
                                                  :ARG2 c34-10)))
       :ARG1-of (c34-9 / cause-01
                       :ARG0 (c34-1 / between
                                    :op1 (c34-21 / destroy-01
                                                 :ARG0 (c34-12 / person
                                                               :name (c34-17 / name
                                                                             :op1 "Mark"))
                                                 :ARG1 (c34-3 / career
                                                              :poss c34-6))
                                    :op2 (c34-16 / choose-01
                                                 :ARG0 (c34-4 / person
                                                              :name (c34-13 / name
                                                                            :op1 "Frankie"))
                                                 :ARG1 (c34-2 / lifestyle)))))

# ::snt Mike really respect everything you've done you are an inspiration, I just wish you arrogant self centered brother didn't take u down!
# ::tokens ["Mike", "really", "respect", "everything", "you", "'ve", "done", "you", "are", "an", "inspiration", ",", "I", "just", "wish", "you", "arrogant", "self", "centered", "brother", "did", "n't", "take", "u", "down", "!"]
# ::lemmas ["Mike", "really", "respect", "everything", "you", "'ve", "do", "you", "be", "an", "inspiration", ",", "i", "just", "wish", "you", "arrogant", "self", "center", "brother", "do", "not", "take", "u", "down", "!"]
(c35-13 / and
        :op1 (c35-5 / respect-01
                    :ARG0 (c35-8 / person
                                 :name (c35-2 / name
                                              :op1 "Mike"))
                    :ARG1 (c35-6 / everything
                                 :ARG1-of (c35-15 / do-02
                                                  :ARG0 (c35-1 / you)))
                    :degree (c35-16 / really))
        :op2 (c35-12 / inspire-01
                     :ARG0 c35-1)
        :op3 (c35-9 / wish-01
                    :ARG0 (c35-4 / i)
                    :ARG1 (c35-11 / take-down-22
                                  :ARG0 (c35-3 / person
                                               :ARG0-of (c35-7 / have-rel-role-91
                                                               :ARG1 c35-1
                                                               :ARG2 (c35-0 / brother))
                                               :mod (c35-14 / arrogant)
                                               :ARG0-of (c35-10 / center-01
                                                                :ARG1 c35-4
                                                                :ARG2 c35-4))
                                  :ARG1 c35-1
                                  :polarity -)
                    :mod (c35-17 / just)))

# ::snt I honestly was j going to tweet u asking about this. I still think it's awesome u got sober before the last season! Honestly good for u!
# ::tokens ["I", "honestly", "was", "j", "going", "to", "tweet", "u", "asking", "about", "this", ".", "I", "still", "think", "it", "'s", "awesome", "u", "got", "sober", "before", "the", "last", "season", "!", "Honestly", "good", "for", "u", "!"]
# ::lemmas ["i", "honestly", "be", "j", "go", "to", "tweet", "u", "ask", "about", "this", ".", "i", "still", "think", "it", "be", "awesome", "u", "get", "sober", "before", "the", "last", "season", "!", "honestly", "good", "for", "u", "!"]
(c36-14 / multi-sentence
        :snt1 (c36-9 / tweet-02
                     :ARG0 (c36-17 / i)
                     :ARG1 (c36-11 / ask-01
                                   :ARG0 (c36-5 / you)
                                   :ARG1 (c36-15 / this))
                     :ARG1-of (c36-7 / honest-01
                                     :ARG0 c36-17))
        :snt2 (c36-18 / think-01
                      :ARG0 (c36-6 / i)
                      :ARG1 (c36-8 / awesome-02
                                   :ARG1 (c36-0 / sober-02
                                                :ARG1 (c36-12 / you)
                                                :time (c36-13 / before
                                                              :op1 (c36-4 / season
                                                                          :mod (c36-1 / last)))))
                      :mod (c36-2 / still))
        :snt3 (c36-10 / good-04
                      :ARG2 (c36-3 / you)
                      :ARG1-of (c36-16 / honest-01)))

# ::snt That explains some of the behavior in Season . Still a fan though
# ::tokens ["That", "explains", "some", "of", "the", "behavior", "in", "Season", ".", "Still", "a", "fan", "though"]
# ::lemmas ["that", "explain", "some", "of", "the", "behavior", "in", "Season", ".", "still", "a", "fan", "though"]
(c37-3 / multi-sentence
       :snt1 (c37-5 / explain-01
                    :ARG0 (c37-7 / that)
                    :ARG1 (c37-2 / behave-01
                                 :quant (c37-4 / some)
                                 :time (c37-0 / season)))
       :snt2 (c37-1 / fan
                    :mod (c37-8 / still)
                    :ARG1-of (c37-6 / have-concession-91)))

# ::snt it's good your doing better now!!
# ::tokens ["it", "'s", "good", "your", "doing", "better", "now", "!", "!"]
# ::lemmas ["it", "be", "good", "your", "do", "well", "now", "!", "!"]
(c39-5 / good-02
       :ARG1 (c39-6 / do-02
                    :ARG0 (c39-0 / you)
                    :ARG1 (c39-4 / well-09
                                 :ARG2-of (c39-3 / have-degree-91
                                                 :ARG1 c39-6
                                                 :ARG3 (c39-1 / more)))
                    :time (c39-2 / now)))

# ::snt Just went through the Jersey Shore House. Y'all made that place special. $1200 a night!
# ::tokens ["Just", "went", "through", "the", "Jersey", "Shore", "House", ".", "Y'all", "made", "that", "place", "special", ".", "$", "1200", "a", "night", "!"]
# ::lemmas ["just", "go", "through", "the", "Jersey", "Shore", "House", ".", "Y'all", "make", "that", "place", "special", ".", "$", "1200", "a", "night", "!"]
(c40-3 / multi-sentence
       :snt1 (c40-12 / go-02
                     :ARG1 (c40-11 / through
                                   :op1 (c40-0 / building
                                               :name (c40-2 / name
                                                            :op1 "Jersey"
                                                            :op2 "Shore"
                                                            :op3 "House")))
                     :mod (c40-10 / just))
       :snt2 (c40-7 / make-02
                    :ARG0 (c40-1 / you
                                 :mod (c40-5 / all))
                    :ARG1 (c40-4 / special-02
                                 :ARG1 (c40-8 / place
                                              :mod (c40-15 / that))))
       :snt3 (c40-6 / rate-entity-91
                    :ARG1 (c40-14 / monetary-quantity
                                  :quant1200 (c40-13 / dollar))
                    :ARG2 (c40-9 / night)))
