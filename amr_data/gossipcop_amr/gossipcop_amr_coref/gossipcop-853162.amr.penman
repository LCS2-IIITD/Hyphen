# ::snt Who knew Brad was Quote good friends. With the biggest snowflake on night time tv. Who cares!
# ::tokens ["Who", "knew", "Brad", "was", "Quote", "good", "friends", ".", "With", "the", "biggest", "snowflake", "on", "night", "time", "tv", ".", "Who", "cares", "!"]
# ::lemmas ["who", "know", "Brad", "be", "Quote", "good", "friend", ".", "with", "the", "big", "snowflake", "on", "night", "time", "tv", ".", "who", "care", "!"]
(c1-10 / multi-sentence
       :snt1 (c1-3 / know-01
                   :ARG0 (c1-7 / amr-unknown)
                   :ARG1 (c1-15 / friend
                                :ARG1-of (c1-8 / good-02)
                                :domain (c1-17 / person
                                               :name (c1-16 / name
                                                            :op1 "Brad"))))
       :snt2 (c1-2 / have-03
                   :ARG0 (c1-11 / person)
                   :ARG1 (c1-0 / snowflake
                               :ARG1-of (c1-18 / have-degree-91
                                               :ARG2 (c1-9 / big)
                                               :ARG3 (c1-4 / most)
                                               :ARG5 (c1-1 / snowflake
                                                           :time (c1-19 / date-entity
                                                                        :dayperiod (c1-12 / night)))))
                   :medium (c1-6 / television
                                 :mod (c1-14 / time
                                             :mod c1-12)))
       :snt3 (c1-13 / care-01
                    :ARG0 (c1-5 / amr-unknown)))

# ::snt I like to watch the program really good really and fun ... well Bradley
# ::tokens ["I", "like", "to", "watch", "the", "program", "really", "good", "really", "and", "fun", "...", "well", "Bradley"]
# ::lemmas ["i", "like", "to", "watch", "the", "program", "really", "good", "really", "and", "fun", "...", "well", "Bradley"]
(c2-3 / say-01
      :ARG0 (c2-8 / i)
      :ARG1 (c2-6 / like-01
                  :ARG0 c2-8
                  :ARG1 (c2-7 / watch-01
                              :ARG0 c2-8
                              :ARG1 (c2-5 / program
                                          :ARG1-of (c2-9 / good-02
                                                         :degree (c2-4 / really))
                                          :ARG1-of (c2-0 / fun-01
                                                         :degree (c2-10 / really)))))
      :ARG2 (c2-2 / person
                  :name (c2-1 / name
                              :op1 "Bradley")))

# ::snt Now don't take this wrong I will be looking at the show to see this fine looking
# ::tokens ["Now", "do", "n't", "take", "this", "wrong", "I", "will", "be", "looking", "at", "the", "show", "to", "see", "this", "fine", "looking"]
# ::lemmas ["now", "do", "not", "take", "this", "wrong", "i", "will", "be", "look", "at", "the", "show", "to", "see", "this", "fine", "look"]
(c3-4 / multi-sentence
      :snt1 (c3-7 / wrong-04
                  :ARG1 (c3-2 / you)
                  :ARG2 (c3-9 / this)
                  :mod (c3-3 / now)
                  :polarity -
                  :mode imperative)
      :snt2 (c3-6 / look-01
                  :ARG0 (c3-8 / i)
                  :ARG1 (c3-5 / show-04)
                  :purpose (c3-0 / see-01
                                 :ARG0 c3-8
                                 :ARG1 (c3-10 / look-01
                                              :ARG0 (c3-11 / this)
                                              :ARG1-of (c3-1 / fine-04)))))
