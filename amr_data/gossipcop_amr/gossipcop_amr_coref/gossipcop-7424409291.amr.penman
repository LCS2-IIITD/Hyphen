# ::snt De las mejores
# ::tokens ["De", "las", "mejores"]
# ::lemmas ["De", "las", "mejore"]
(c1-1 / mejores
      :mod (c1-0 / de-))

# ::snt Chuck Norris fehlt auch noch...Und Karl Lauterbach
# ::tokens ["Chuck", "Norris", "fehlt", "auch", "noch", "...", "Und", "Karl", "Lauterbach"]
# ::lemmas ["Chuck", "Norris", "fehlt", "auch", "noch", "...", "Und", "Karl", "Lauterbach"]
(c2-8 / and
      :op1 (c2-0 / fehlt-01
                 :ARG0 (c2-5 / person
                             :name (c2-2 / name
                                         :op1 "Chuck"
                                         :op2 "Norris"))
                 :ARG1 (c2-4 / noch
                             :mod (c2-1 / ob
                                        :op1 (c2-3 / person
                                                   :name (c2-6 / name
                                                               :op1 "Karl"
                                                               :op2 "Lauterbach")))))
      :op2 (c2-7 / have-polarity-91
                 :ARG1 c2-5
                 :ARG2 -))

# ::snt Sehr gut. Die Stellungnahme von Friedrich Merz htte ich aber gerne auf einem Bierdeckel!
# ::tokens ["Sehr", "gut", ".", "Die", "Stellungnahme", "von", "Friedrich", "Merz", "htte", "ich", "aber", "gerne", "auf", "einem", "Bierdeckel", "!"]
# ::lemmas ["Sehr", "gut", ".", "Die", "Stellungnahme", "von", "Friedrich", "Merz", "htte", "ich", "aber", "gerne", "auf", "einem", "Bierdeckel", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-6 / have-mod-91
                  :ARG1 (c3-5 / event
                              :name (c3-1 / name
                                          :op1 "Stellungnahme")
                              :mod (c3-12 / die)
                              :poss (c3-7 / person
                                          :name (c3-8 / name
                                                      :op1 "Friedrich"
                                                      :op2 "Merz")))
                  :ARG2 (c3-11 / gut))
      :snt2 (c3-10 / think-01
                   :ARG0 (c3-9 / i)
                   :ARG1 (c3-13 / gerne
                                :mod (c3-4 / aber)
                                :mod (c3-14 / auf
                                            :op1 (c3-0 / bierdeckel
                                                       :mod (c3-3 / einem))))))

# ::snt Ich erwarte noch Stellungnahmen von:- Friedrich Merz- Ferdinand Dudenhffer- Rosi Mittermaier und Christian Neureuther- Yakari
# ::tokens ["Ich", "erwarte", "noch", "Stellungnahmen", "von:-", "Friedrich", "Merz-", "Ferdinand", "Dudenhffer-", "Rosi", "Mittermaier", "und", "Christian", "Neureuther-", "Yakari"]
# ::lemmas ["Ich", "erwarte", "noch", "Stellungnahmen", "von:-", "Friedrich", "merz-", "Ferdinand", "Dudenhffer-", "Rosi", "Mittermaier", "und", "Christian", "Neureuther-", "Yakari"]
(c4-4 / person
      :name (c4-0 / name
                  :op1 "Ich"
                  :op2 "Erwarte noch"
                  :op3 "Stellungnahmen")
      :ARG1-of (c4-9 / include-91
                     :ARG2 (c4-10 / and
                                  :op1 (c4-1 / person
                                             :name (c4-3 / name
                                                         :op1 "Friedrich"
                                                         :op2 "Merz"))
                                  :op2 (c4-12 / person
                                              :name (c4-5 / name
                                                          :op1 "Ferdinand"
                                                          :op2 "Dudenhffer"))
                                  :op3 (c4-6 / person
                                             :name (c4-7 / name
                                                         :op1 "Rosi"
                                                         :op2 "Mittermaier"))
                                  :op4 (c4-11 / person
                                              :name (c4-8 / name
                                                          :op1 "Christian"
                                                          :op2 "Neureuther"))
                                  :op5 (c4-13 / person
                                              :name (c4-2 / name
                                                          :op1 "Yakari")))))

# ::snt Ganz genau!
# ::tokens ["Ganz", "genau", "!"]
# ::lemmas ["Ganz", "genau", "!"]
(c5-0 / genau
      :mod (c5-1 / city
                 :name (c5-2 / name
                             :op1 "Ganz"))
      :mode expressive)

# ::snt Sehr richtig!
# ::tokens ["Sehr", "richtig", "!"]
# ::lemmas ["Sehr", "richtig", "!"]
(c6-0 / richtig
      :domain (c6-1 / person)
      :mode expressive)

# ::snt Ich erwarte ein U2-Konzert in Chemnitz &amp; ein zweistndiges Interview von Bono Vox.Wenns ihm wieder richtig gut geht.
# ::tokens ["Ich", "erwarte", "ein", "U2", "-", "Konzert", "in", "Chemnitz", "&", "amp", ";", "ein", "zweistndiges", "Interview", "von", "Bono", "Vox", ".", "Wenns", "ihm", "wieder", "richtig", "gut", "geht", "."]
# ::lemmas ["Ich", "erwarte", "ein", "U2", "-", "Konzert", "in", "Chemnitz", "&", "amp", ";", "ein", "zweistndige", "Interview", "von", "Bono", "Vox", ".", "wenns", "ihm", "wieder", "richtig", "gut", "geht", "."]
(c7-7 / multi-sentence
      :snt1 (c7-15 / erwart-01
                   :ARG0 (c7-19 / i)
                   :ARG1 (c7-5 / and
                               :op1 (c7-16 / publication
                                           :name (c7-12 / name
                                                        :op1 "U2-Konzert")
                                           :location (c7-10 / city
                                                            :name (c7-9 / name
                                                                        :op1 "Chemnitz"
                                                                        :op2 "&amp")))
                               :op2 (c7-8 / publication
                                          :name (c7-17 / name
                                                       :op1 " Interview")
                                          :mod (c7-2 / person
                                                     :name (c7-11 / name
                                                                  :op1 "Bono"
                                                                  :op2 "Vox"))
                                          :mod (c7-14 / zweistndiges))))
      :snt2 (c7-6 / geht
                  :domain (c7-0 / person
                                :name (c7-18 / name
                                             :op1 "Wenns"))
                  :mod (c7-13 / richtig
                              :mod (c7-1 / gut)
                              :ARG2-of (c7-3 / have-degree-91
                                             :ARG1 c7-0
                                             :ARG3 (c7-4 / more)))))

# ::snt It was the best!!!! We had so much fun Bruce loved seeing our faces up front!
# ::tokens ["It", "was", "the", "best", "!", "!", "!", "!", "We", "had", "so", "much", "fun", "Bruce", "loved", "seeing", "our", "faces", "up", "front", "!"]
# ::lemmas ["it", "be", "the", "good", "!", "!", "!", "!", "we", "have", "so", "much", "fun", "Bruce", "love", "see", "our", "face", "up", "front", "!"]
(c8-3 / multi-sentence
      :snt1 (c8-7 / have-degree-91
                  :ARG1 (c8-13 / it)
                  :ARG2 (c8-14 / good-02
                               :ARG1 c8-13)
                  :ARG3 (c8-6 / most)
                  :mode expressive)
      :snt2 (c8-0 / fun-01
                  :ARG0 (c8-11 / we
                               :part (c8-8 / face))
                  :ARG1-of (c8-12 / have-quant-91
                                  :ARG2 (c8-15 / much)
                                  :ARG3 (c8-5 / so)))
      :snt3 (c8-9 / love-01
                  :ARG0 (c8-10 / person
                               :name (c8-4 / name
                                           :op1 "Bruce"))
                  :ARG1 (c8-1 / see-01
                              :ARG0 c8-10
                              :ARG1 c8-8
                              :location (c8-2 / up-front))))

# ::snt And I was right next to you
# ::tokens ["And", "I", "was", "right", "next", "to", "you"]
# ::lemmas ["and", "i", "be", "right", "next", "to", "you"]
(c9-5 / and
      :op2 (c9-0 / be-located-at-91
                 :ARG1 (c9-4 / i)
                 :ARG2 (c9-2 / next-to
                             :op1 (c9-1 / you)
                             :mod (c9-3 / right))))

# ::snt Well then.... it's the record company's fault....
# ::tokens ["Well", "then", "....", "it", "'s", "the", "record", "company", "'s", "fault", "...."]
# ::lemmas ["well", "then", "....", "it", "be", "the", "record", "company", "'s", "fault", "...."]
(c10-0 / fault-01
       :ARG1 (c10-2 / company
                    :ARG0-of (c10-1 / record-01))
       :ARG2 (c10-4 / it)
       :mod (c10-3 / well
                   :mod (c10-5 / then)))

# ::snt yep, I know. It's the album cover for the official download, though.
# ::tokens ["yep", ",", "I", "know", ".", "It", "'s", "the", "album", "cover", "for", "the", "official", "download", ",", "though", "."]
# ::lemmas ["yep", ",", "i", "know", ".", "it", "be", "the", "album", "cover", "for", "the", "official", "download", ",", "though", "."]
(c11-2 / multi-sentence
       :snt1 (c11-5 / know-01
                    :ARG0 (c11-7 / i)
                    :mod (c11-1 / yep))
       :snt2 (c11-4 / have-concession-91
                    :ARG1 (c11-6 / cover-02
                                 :ARG1 (c11-3 / it)
                                 :ARG2 (c11-8 / album)
                                 :purpose (c11-9 / download-01
                                                 :mod (c11-0 / official)))))

# ::snt The only problem Ken.... The pic is from .....
# ::tokens ["The", "only", "problem", "Ken", "....", "The", "pic", "is", "from", "....."]
# ::lemmas ["the", "only", "problem", "Ken", "....", "the", "pic", "be", "from", "....."]
(c12-3 / say-01
       :ARG0 (c12-5 / i)
       :ARG1 (c12-4 / problem
                    :mod (c12-0 / only)
                    :domain (c12-2 / pic))
       :ARG2 (c12-6 / person
                    :name (c12-1 / name
                                 :op1 "Ken")))

# ::snt I was there too!
# ::tokens ["I", "was", "there", "too", "!"]
# ::lemmas ["i", "be", "there", "too", "!"]
(c13-1 / be-located-at-91
       :ARG1 (c13-2 / i)
       :ARG2 (c13-3 / there)
       :mod (c13-0 / too))

# ::snt I was there in Virginia Beach!
# ::tokens ["I", "was", "there", "in", "Virginia", "Beach", "!"]
# ::lemmas ["i", "be", "there", "in", "Virginia", "Beach", "!"]
(c14-0 / be-located-at-91
       :ARG1 (c14-3 / i)
       :ARG2 (c14-1 / beach
                    :name (c14-2 / name
                                 :op1 "Virginia"
                                 :op2 "Beach")))

# ::snt If music be the food of love...I'm starting from 'I am H A P P Y'
# ::tokens ["If", "music", "be", "the", "food", "of", "love", "...", "I'm", "starting", "from", "'", "I", "am", "H", "A", "P", "P", "Y", "'"]
# ::lemmas ["if", "music", "be", "the", "food", "of", "love", "...", "i'm", "start", "from", "'", "i", "be", "h", "a", "p", "p", "Y", "'"]
(c15-4 / have-condition-91
       :ARG1 (c15-3 / start-01
                    :ARG0 (c15-6 / i)
                    :ARG2 (c15-0 / string-entity
                                 :value "H A P P Y"))
       :ARG2 (c15-1 / food
                    :mod (c15-5 / love-01)
                    :domain (c15-2 / music)))

# ::snt I love that whole record!
# ::tokens ["I", "love", "that", "whole", "record", "!"]
# ::lemmas ["i", "love", "that", "whole", "record", "!"]
(c16-1 / love-01
       :ARG0 (c16-3 / i)
       :ARG1 (c16-0 / record
                    :mod (c16-2 / whole)
                    :mod (c16-4 / that)))

# ::snt Asbury jukes.
# ::tokens ["Asbury", "jukes", "."]
# ::lemmas ["Asbury", "juke", "."]
(c17-2 / juke
       :mod (c17-0 / company
                   :name (c17-1 / name
                                :op1 "Asbury")))

# ::snt Thanks we need some summer fun.
# ::tokens ["Thanks", "we", "need", "some", "summer", "fun", "."]
# ::lemmas ["thank", "we", "need", "some", "summer", "fun", "."]
(c18-7 / thank-01
       :ARG0 (c18-6 / i)
       :ARG1 (c18-2 / you)
       :ARG2 (c18-3 / need-01
                    :ARG0 (c18-5 / we)
                    :ARG1 (c18-0 / fun-01
                                 :time (c18-8 / date-entity
                                              :season (c18-4 / summer))
                                 :quant (c18-1 / some))))

# ::snt Memories of the Stone Pony in asbury park. Good times
# ::tokens ["Memories", "of", "the", "Stone", "Pony", "in", "asbury", "park", ".", "Good", "times"]
# ::lemmas ["Memories", "of", "the", "Stone", "Pony", "in", "asbury", "park", ".", "good", "time"]
(c19-1 / multi-sentence
       :snt1 (c19-2 / memory
                    :topic (c19-6 / animal
                                  :name (c19-0 / name
                                               :op1 "Stone"
                                               :op2 "Pony"))
                    :location (c19-3 / park
                                     :name (c19-4 / name
                                                  :op1 "Asbury"
                                                  :op2 "Park")))
       :snt2 (c19-5 / time
                    :ARG1-of (c19-7 / good-02)))

# ::snt I hope youre able to keep up with the breaking news!
# ::tokens ["I", "hope", "you", "re", "able", "to", "keep", "up", "with", "the", "breaking", "news", "!"]
# ::lemmas ["i", "hope", "you", "re", "able", "to", "keep", "up", "with", "the", "breaking", "news", "!"]
(c20-3 / hope-01
       :ARG0 (c20-6 / i)
       :ARG1 (c20-4 / possible-01
                    :ARG1 (c20-5 / keep-up-05
                                 :ARG0 (c20-1 / you)
                                 :ARG1 (c20-2 / news
                                              :ARG1-of (c20-0 / break-13)))))

# ::snt Ima turn you on to Johnny Lang. Think he might be right up your alley. Lie to me! tell me everything is alright!
# ::tokens ["I", "m", "a", "turn", "you", "on", "to", "Johnny", "Lang", ".", "Think", "he", "might", "be", "right", "up", "your", "alley", ".", "Lie", "to", "me", "!", "tell", "me", "everything", "is", "alright", "!"]
# ::lemmas ["i", "m", "a", "turn", "you", "on", "to", "Johnny", "Lang", ".", "think", "he", "might", "be", "right", "up", "your", "alley", ".", "lie", "to", "i", "!", "tell", "i", "everything", "be", "alright", "!"]
(c22-1 / multi-sentence
       :snt1 (c22-8 / possible-01
                    :ARG1 (c22-11 / turn-02
                                  :ARG0 (c22-10 / i)
                                  :ARG1 (c22-0 / you)
                                  :ARG2 (c22-2 / person
                                               :name (c22-3 / name
                                                            :op1 "Johnny"
                                                            :op2 "Lang"))))
       :snt2 (c22-17 / think-01
                     :ARG0 (c22-4 / i)
                     :ARG1 c22-8
                     :ARG1 (c22-16 / up-03
                                   :ARG1 c22-2
                                   :ARG2 (c22-5 / alley
                                                :poss c22-0)
                                   :mod (c22-6 / right)))
       :snt3 (c22-9 / lie-08
                    :ARG0 (c22-12 / you)
                    :ARG2 (c22-15 / i)
                    :mode imperative)
       :snt4 (c22-13 / tell-01
                     :ARG0 c22-12
                     :ARG1 (c22-14 / all-right
                                   :domain (c22-7 / everything))
                     :ARG2 c22-15
                     :mode imperative))

# ::snt And the jukes
# ::tokens ["And", "the", "jukes"]
# ::lemmas ["and", "the", "juke"]
(c23-1 / and
       :op2 (c23-0 / juke))

# ::snt Always enjoy your POV. Have to respectfully disagree on this one.
# ::tokens ["Always", "enjoy", "your", "POV", ".", "Have", "to", "respectfully", "disagree", "on", "this", "one", "."]
# ::lemmas ["always", "enjoy", "your", "POV", ".", "have", "to", "respectfully", "disagree", "on", "this", "one", "."]
(c24-3 / multi-sentence
       :snt1 (c24-5 / enjoy-01
                    :ARG0 (c24-2 / you)
                    :ARG1 (c24-6 / have-point-of-view-08
                                 :ARG0 c24-2)
                    :time (c24-8 / always)
                    :mode imperative)
       :snt2 (c24-0 / obligate-01
                    :ARG2 (c24-10 / disagree-01
                                  :ARG0 (c24-9 / you)
                                  :ARG2 (c24-1 / one
                                               :mod (c24-7 / this))
                                  :manner (c24-4 / respect-01
                                                 :ARG0 c24-9))))

# ::snt our audience (students). So - how about a like for our Old Bridge, NJ Superintendent who channels your inspiration and who works tirelessly for the students, staff, and families of Old Bridge every day?
# ::tokens ["our", "audience", "(", "students", ")", ".", "So", "-", "how", "about", "a", "like", "for", "our", "Old", "Bridge", ",", "NJ", "Superintendent", "who", "channels", "your", "inspiration", "and", "who", "works", "tirelessly", "for", "the", "students", ",", "staff", ",", "and", "families", "of", "Old", "Bridge", "every", "day", "?"]
# ::lemmas ["our", "audience", "(", "student", ")", ".", "so", "-", "how", "about", "a", "like", "for", "our", "Old", "Bridge", ",", "NJ", "Superintendent", "who", "channel", "your", "inspiration", "and", "who", "work", "tirelessly", "for", "the", "student", ",", "staff", ",", "and", "family", "of", "Old", "Bridge", "every", "day", "?"]
(c25-12 / multi-sentence
        :snt1 (c25-11 / audience
                      :poss (c25-23 / we)
                      :consist-of (c25-21 / person
                                          :ARG0-of (c25-0 / study-01)))
        :snt2 (c25-6 / suggest-01
                     :ARG1 (c25-10 / thing
                                   :ARG1-of (c25-20 / resemble-01
                                                    :ARG2 (c25-13 / person
                                                                  :ARG0-of (c25-8 / have-org-role-91
                                                                                  :ARG1 (c25-17 / facility
                                                                                                :name (c25-18 / name
                                                                                                              :op1 "Old"
                                                                                                              :op2 "Bridge")
                                                                                                :poss c25-23)
                                                                                  :ARG2 (c25-5 / superintendent))
                                                                  :ARG0-of (c25-15 / channel-01
                                                                                   :ARG1 (c25-24 / inspire-01
                                                                                                 :ARG1 (c25-7 / you)))
                                                                  :ARG0-of (c25-2 / work-01
                                                                                  :ARG2 (c25-9 / and
                                                                                               :op1 (c25-3 / person
                                                                                                           :ARG0-of (c25-19 / study-01))
                                                                                               :op2 (c25-1 / staff)
                                                                                               :op3 (c25-22 / family
                                                                                                            :poss c25-17))
                                                                                  :manner (c25-4 / relentless)
                                                                                  :frequency (c25-14 / rate-entity-91
                                                                                                     :ARG3 (c25-16 / temporal-quantity
                                                                                                                   :unit (c25-25 / day)
                                                                                                                   :quant 1))))))))

# ::snt Bruce-!!
# ::tokens ["Bruce-", "!", "!"]
# ::lemmas ["Bruce-", "!", "!"]
(c27-1 / person
       :name (c27-0 / name
                    :op1 "Bruce-!"))

# ::snt Jesse's girl
# ::tokens ["Jesse", "'s", "girl"]
# ::lemmas ["Jesse", "'s", "girl"]
(c28-4 / girl
       :ARG1-of (c28-1 / have-rel-role-91
                       :ARG0 (c28-2 / person
                                    :name (c28-0 / name
                                                 :op1 "Jesse"))
                       :ARG2 (c28-3 / child)))

# ::snt Eu sou apx por ele demais. At ele hj em dia eu ia
# ::tokens ["Eu", "sou", "apx", "por", "ele", "demais", ".", "At", "ele", "hj", "em", "dia", "eu", "ia"]
# ::lemmas ["Eu", "sou", "apx", "por", "ele", "demais", ".", "at", "ele", "hj", "em", "dia", "eu", "ia"]
(c31-2 / multi-sentence
       :snt1 (c31-8 / do-02
                    :ARG0 (c31-1 / you)
                    :ARG1 (c31-6 / amr-unintelligible
                                 :value "x")
                    :ARG2 (c31-5 / amr-unintelligible
                                 :value " ele_0")
                    :snt2-of c31-2)
       :ARG0 (c31-7 / you)
       :ARG1 (c31-4 / amr-unintelligible
                    :value " ele_1")
       :snt3 c31-8
       :ARG0 (c31-0 / you)
       :ARG1 (c31-3 / amr-unintelligible
                    :value "ia")
       :ARG2 c31-0)

# ::snt jesus q homem LINDO
# ::tokens ["jesus", "q", "homem", "LINDO"]
# ::lemmas ["jesus", "q", "homem", "LINDO"]
(c32-4 / ask-01
       :ARG0 (c32-3 / i)
       :ARG1 (c32-1 / homem
                    :domain (c32-2 / person
                                   :name (c32-0 / name
                                                :op1 "LINDO")
                                   :ARG2-of c32-4)))

# ::snt MAS EU ACHEI!!!!
# ::tokens ["MAS", "EU", "ACHEI", "!", "!", "!", "!"]
# ::lemmas ["MAS", "EU", "ACHEI", "!", "!", "!", "!"]
(c33-3 / thank-01
       :ARG0 (c33-2 / i)
       :ARG1 (c33-0 / organization
                    :name (c33-1 / name
                                 :op1 "EU"))
       :mode expressive)

# ::snt alis: amei a playlist de fleetwood e abba
# ::tokens ["alis", ":", "amei", "a", "playlist", "de", "fleetwood", "e", "abba"]
# ::lemmas ["alis", ":", "amei", "a", "playlist", "de", "fleetwood", "e", "abba"]
(c34-6 / and
       :op1 (c34-1 / music
                   :name (c34-0 / name
                                :op1 "Aegis"))
       :op2 (c34-3 / music
                   :name (c34-2 / name
                                :op1 "Fleetwood"))
       :op3 (c34-7 / music
                   :name (c34-4 / name
                                :op1 "Abba"))
       :domain (c34-5 / amei))

# ::snt um namorado sujinho pra eu dar banho de mangueira no ptio berrando " PQ DESSE JEITO TU NO VAI PISAR DENTRO DA MINHA CASA"
# ::tokens ["um", "namorado", "sujinho", "pra", "eu", "dar", "banho", "de", "mangueira", "no", "ptio", "berrando", "\"", "PQ", "DESSE", "JEITO", "TU", "NO", "VAI", "PISAR", "DENTRO", "DA", "MINHA", "CASA", "\""]
# ::lemmas ["um", "namorado", "sujinho", "pra", "eu", "dar", "banho", "de", "mangueira", "no", "ptio", "berrando", "\"", "PQ", "DESSE", "JEITO", "TU", "NO", "VAI", "PISAR", "DENTRO", "da", "minha", "CASA", "\""]
(c35-3 / multi-sentence
       :snt1 (c35-2 / namorado
                    :domain (c35-1 / you))
       :snt2 (c35-4 / say-01
                    :ARG0 (c35-8 / i)
                    :ARG1 (c35-9 / and
                                 :op1 (c35-5 / have-polarity-91
                                             :op2-of c35-9
                                             :ARG2 -)
                                 :ARG1 (c35-0 / banho
                                              :mod (c35-6 / mangueira))
                                 :ARG2 -)
                    :op3 c35-5
                    :ARG1 (c35-7 / berrando)
                    :ARG2 -)
       :ARG2 c35-1)

# ::snt e eu sou a pessoa q toma banho vezes por dia no mnimo..............
# ::tokens ["e", "eu", "sou", "a", "pessoa", "q", "toma", "banho", "vezes", "por", "dia", "no", "mnimo", ".............."]
# ::lemmas ["e", "eu", "sou", "a", "pessoa", "q", "toma", "banho", "veze", "por", "dia", "no", "mnimo", ".............."]
(c36-3 / multi-sentence
       :snt1 (c36-5 / mind-15
                    :ARG0 (c36-2 / you)
                    :ARG1 (c36-6 / pessoa)
                    :polarity -
                    :mode imperative)
       :snt2 (c36-8 / cause-01
                    :ARG0 (c36-10 / amr-unknown)
                    :ARG1 (c36-1 / banho
                                 :mod (c36-4 / vezes)
                                 :ARG1-of (c36-0 / opine-01
                                                 :ARG0 (c36-9 / i)
                                                 :ARG1 c36-8))
                    :ARG0 c36-9)
       :snt3 (c36-7 / have-polarity-91
                    :ARG1 (c36-11 / amr-unknown)
                    :ARG2 -))

# ::snt carol, se eu fosse personagem de filme e srie tu sabe q meu gosto mais q duvidoso seria um trao de personalidade super destacado na minha bio
# ::tokens ["carol", ",", "se", "eu", "fosse", "personagem", "de", "filme", "e", "srie", "tu", "sabe", "q", "meu", "gosto", "mais", "q", "duvidoso", "seria", "um", "trao", "de", "personalidade", "super", "destacado", "na", "minha", "bio"]
# ::lemmas ["carol", ",", "se", "eu", "fosse", "personagem", "de", "filme", "e", "srie", "tu", "sabe", "q", "meu", "gosto", "mais", "q", "duvidoso", "seria", "um", "trao", "de", "personalidade", "super", "destacado", "na", "minha", "bio"]
(c37-0 / say-01
       :ARG0 (c37-18 / i)
       :ARG1 (c37-7 / and
                    :op1 (c37-14 / fosse-01
                                 :ARG0 (c37-16 / person)
                                 :ARG1 (c37-11 / person
                                               :ARG0-of (c37-17 / filme)))
                    :op2 (c37-12 / craze-01
                                 :ARG0 c37-16
                                 :ARG1 c37-18)
                    :op3 (c37-4 / ask-01
                                :ARG0 c37-18
                                :ARG1 (c37-6 / gosto
                                             :domain c37-18)
                                :ARG2 c37-16
                                :ARG1-of (c37-8 / cause-01
                                                :ARG0 c37-7
                                                :op1 (c37-19 / duvoso)
                                                :op2 (c37-5 / trao
                                                            :mod (c37-2 / personalidade
                                                                        :mod (c37-3 / super)
                                                                        :ARG1-of (c37-13 / destacado-00)
                                                                        :location (c37-9 / bio
                                                                                         :mod (c37-10 / minha)))))))
       :ARG2 (c37-1 / person
                    :name (c37-15 / name
                                  :op1 "Carol")))

# ::snt lol no thinking liking Bruce is corny is corny
# ::tokens ["lol", "no", "thinking", "liking", "Bruce", "is", "corny", "is", "corny"]
# ::lemmas ["lol", "no", "thinking", "like", "Bruce", "be", "corny", "be", "corny"]
(c38-5 / think-01
       :ARG1 (c38-3 / cause-01
                    :ARG0 (c38-7 / corny
                                 :domain (c38-1 / person
                                                :name (c38-0 / name
                                                             :op1 "Bruce")))
                    :ARG1 (c38-4 / corny
                                 :domain c38-1))
       :ARG2-of (c38-2 / laugh-01
                       :manner (c38-6 / loud)
                       :mode expressive)
       :polarity -)

# ::snt No
# ::tokens ["No"]
# ::lemmas ["no"]
(c39-0 / no)

# ::snt No
# ::tokens ["No"]
# ::lemmas ["no"]
(c40-0 / no)

# ::snt hes totally perverse
# ::tokens ["he", "s", "totally", "perverse"]
# ::lemmas ["he", "s", "totally", "perverse"]
(c41-1 / perverse
       :domain (c41-0 / he)
       :degree (c41-2 / total))

# ::snt midwest microceleb twee jay
# ::tokens ["midwest", "microceleb", "twee", "jay"]
# ::lemmas ["midwest", "microceleb", "twee", "jay"]
(c42-3 / person
       :name (c42-1 / name
                    :op1 "Twee"
                    :op2 "Jay")
       :mod (c42-0 / microceleb)
       :location (c42-4 / country-region
                        :name (c42-2 / name
                                     :op1 "Midwest")))

# ::snt ha ya thats true. also sean *delights* in spreading the lie that im from the midwest when i grew up in shithole connecticut.
# ::tokens ["ha", "ya", "that", "s", "true", ".", "also", "sean", "*", "delights", "*", "in", "spreading", "the", "lie", "that", "i", "m", "from", "the", "midwest", "when", "i", "grew", "up", "in", "shithole", "connecticut", "."]
# ::lemmas ["ha", "ya", "that", "s", "true", ".", "also", "sean", "*", "delight", "*", "in", "spread", "the", "lie", "that", "i", "m", "from", "the", "midwest", "when", "i", "grow", "up", "in", "shithole", "connecticut", "."]
(c43-2 / multi-sentence
       :snt1 (c43-10 / true-01
                     :ARG1 (c43-12 / that)
                     :mod (c43-6 / ha
                                 :mode expressive))
       :snt2 (c43-14 / delight-01
                     :ARG0 (c43-4 / spread-03
                                  :ARG1 (c43-7 / lie-08
                                               :ARG1 (c43-1 / be-from-91
                                                            :ARG1 (c43-11 / i)
                                                            :ARG2 (c43-9 / country-region
                                                                         :name (c43-3 / name
                                                                                      :op1 "Midwest"))
                                                            :time (c43-13 / grow-up-04
                                                                          :ARG1 c43-11
                                                                          :location (c43-0 / state
                                                                                           :name (c43-8 / name
                                                                                                        :op1 "Connecticut")
                                                                                           :mod (c43-15 / shithole))))))
                     :mod (c43-5 / also)))

# ::snt WHAT we are on the same east coast/midwest side, as proven by the way we are agreeing and also arguing somehow
# ::tokens ["WHAT", "we", "are", "on", "the", "same", "east", "coast", "/", "midwest", "side", ",", "as", "proven", "by", "the", "way", "we", "are", "agreeing", "and", "also", "arguing", "somehow"]
# ::lemmas ["what", "we", "be", "on", "the", "same", "east", "coast", "/", "midwest", "side", ",", "as", "prove", "by", "the", "way", "we", "be", "agree", "and", "also", "argue", "somehow"]
(c44-1 / be-located-at-91
       :ARG1 (c44-6 / we)
       :ARG2 (c44-3 / side
                    :ARG1-of (c44-0 / same-01)
                    :mod (c44-7 / country-region
                                :name (c44-2 / name
                                             :op1 "East"
                                             :op2 "Coast")
                                :mod-of c44-3)
                    :name c44-2
                    :op1 "Midwest")
       :ARG1-of (c44-4 / prove-01
                       :ARG0 (c44-10 / and
                                     :op1 (c44-9 / agree-01
                                                 :ARG0 c44-6)
                                     :op2 (c44-8 / argue-02
                                                 :ARG0 c44-6
                                                 :mod (c44-11 / also)
                                                 :manner (c44-12 / somehow))
                                     :manner (c44-5 / way))))

# ::snt if youre insinuating im from California or dont understand Bruce we are fighting Darcie. Im LIVING INSIDE a Bruce song over here
# ::tokens ["if", "you", "re", "insinuating", "i", "m", "from", "California", "or", "do", "nt", "understand", "Bruce", "we", "are", "fighting", "Darcie", ".", "I", "m", "LIVING", "INSIDE", "a", "Bruce", "song", "over", "here"]
# ::lemmas ["if", "you", "re", "insinuate", "i", "m", "from", "California", "or", "do", "not", "understand", "Bruce", "we", "be", "fight", "Darcie", ".", "i", "m", "live", "INSIDE", "a", "Bruce", "song", "over", "here"]
(c45-10 / multi-sentence
        :snt1 (c45-7 / have-condition-91
                     :ARG1 (c45-14 / fight-01
                                   :ARG0 (c45-18 / we)
                                   :ARG1 (c45-16 / person
                                                 :name (c45-15 / name
                                                               :op1 "Darcie")))
                     :ARG2 (c45-20 / insinuate-01
                                   :ARG0 (c45-5 / you)
                                   :ARG1 (c45-3 / or
                                                :op1 (c45-9 / be-from-91
                                                            :ARG1 (c45-6 / i)
                                                            :ARG2 (c45-1 / state
                                                                         :name (c45-12 / name
                                                                                       :op1 "California")))
                                                :op2 (c45-13 / understand-01
                                                             :ARG0 c45-6
                                                             :ARG1 (c45-11 / person
                                                                           :name (c45-17 / name
                                                                                         :op1 "Bruce"))
                                                             :polarity -))))
        :snt2 (c45-2 / live-01
                     :ARG0 (c45-8 / i)
                     :manner (c45-0 / inside
                                    :op1 (c45-4 / song
                                                :mod c45-11))
                     :location (c45-19 / here)))

# ::snt people from California dont understand bruce and think hes corny but theyre wrong
# ::tokens ["people", "from", "California", "do", "nt", "understand", "bruce", "and", "think", "he", "s", "corny", "but", "they", "re", "wrong"]
# ::lemmas ["people", "from", "California", "do", "not", "understand", "bruce", "and", "think", "he", "s", "corny", "but", "they", "re", "wrong"]
(c46-5 / contrast-01
       :ARG1 (c46-8 / and
                    :op1 (c46-9 / understand-01
                                :ARG0 (c46-4 / person
                                             :source (c46-2 / state
                                                            :name (c46-0 / name
                                                                         :op1 "California")))
                                :ARG1 (c46-1 / person
                                             :name (c46-3 / name
                                                          :op1 "Bruce"))
                                :polarity -)
                    :op2 (c46-7 / think-01
                                :ARG0 c46-4
                                :ARG1 (c46-10 / corny
                                              :domain c46-1)))
       :ARG2 (c46-6 / wrong-04
                    :ARG1 c46-4))

# ::snt i think its good and sincere corny not like cynical and ironic corny. but idk im probably pretty corny.
# ::tokens ["i", "think", "its", "good", "and", "sincere", "corny", "not", "like", "cynical", "and", "ironic", "corny", ".", "but", "idk", "i", "m", "probably", "pretty", "corny", "."]
# ::lemmas ["i", "think", "its", "good", "and", "sincere", "corny", "not", "like", "cynical", "and", "ironic", "corny", ".", "but", "idk", "i", "m", "probably", "pretty", "corny", "."]
(c47-7 / contrast-01
       :ARG1 (c47-10 / think-01
                     :ARG0 (c47-11 / i)
                     :ARG1 (c47-12 / and
                                   :op1 (c47-16 / corny
                                                :ARG1-of (c47-13 / good-02))
                                   :op2 (c47-3 / sincere)
                                   :domain (c47-4 / it)
                                   :ARG1-of (c47-5 / resemble-01
                                                   :ARG2 (c47-14 / and
                                                                 :op1 (c47-9 / corny
                                                                             :mod (c47-0 / cynical))
                                                                 :op2 (c47-1 / corny
                                                                             :mod (c47-15 / ironic)))
                                                   :polarity -)))
       :ARG2 (c47-8 / corny
                    :degree (c47-6 / pretty)
                    :domain c47-11
                    :mod (c47-2 / probable)))

# ::snt no!
# ::tokens ["no", "!"]
# ::lemmas ["no", "!"]
(c48-0 / no)

# ::snt En version piano voix : Springsteen mon ami d'Amrique - Dancing In The Dark - Live Le Cap's
# ::tokens ["En", "version", "piano", "voix", ":", "Springsteen", "mon", "ami", "d'Amrique", "-", "Dancing", "In", "The", "Dark", "-", "Live", "Le", "Cap", "'s"]
# ::lemmas ["en", "version", "piano", "voix", ":", "Springsteen", "mon", "ami", "d'Amrique", "-", "Dancing", "in", "the", "Dark", "-", "Live", "Le", "Cap", "'s"]
(c49-0 / multi-sentence
       :snt1 (c49-3 / version
                    :mod (c49-6 / piano)
                    :mod (c49-4 / en))
       :snt2 (c49-1 / person
                    :name (c49-2 / name
                                 :op1 "Springsteen")
                    :mod (c49-5 / mon
                                :mod (c49-10 / music
                                             :name (c49-7 / name
                                                          :op1 "Dancing"
                                                          :op2 "In"
                                                          :op3 "The"
                                                          :op4 "Dark")))
                    :mod (c49-8 / music
                                :name (c49-9 / name
                                             :op1 "Live"
                                             :op2 "Le"
                                             :op3 "Cap"))))

# ::snt Snooki &amp; JWow the Musical will be great one day.
# ::tokens ["Snooki", "&", "amp", ";", "JWow", "the", "Musical", "will", "be", "great", "one", "day", "."]
# ::lemmas ["Snooki", "&", "amp", ";", "JWow", "the", "Musical", "will", "be", "great", "one", "day", "."]
(c50-3 / say-01
       :ARG1 (c50-9 / great
                    :domain (c50-2 / musical
                                   :name (c50-1 / name
                                                :op1 "JWow"
                                                :op2 "the"
                                                :op3 "Musical"))
                    :time (c50-10 / day
                                  :mod (c50-0 / one)))
       :ARG2 (c50-8 / and
                    :op1 (c50-6 / person
                                :name (c50-5 / name
                                             :op1 "Snooki"))
                    :op2 (c50-4 / person
                                :name (c50-7 / name
                                             :op1 "amp"))))
