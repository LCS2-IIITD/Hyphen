# ::snt Hearing peter is the only one being considered from this cast to be the next bachelor.
# ::tokens ["Hearing", "peter", "is", "the", "only", "one", "being", "considered", "from", "this", "cast", "to", "be", "the", "next", "bachelor", "."]
# ::lemmas ["hear", "peter", "be", "the", "only", "one", "be", "consider", "from", "this", "cast", "to", "be", "the", "next", "bachelor", "."]
(c1-4 / hear-01
      :ARG1 (c1-7 / consider-02
                  :ARG1 (c1-5 / person
                              :mod (c1-0 / only)
                              :domain (c1-3 / person
                                            :name (c1-2 / name
                                                        :op1 "Peter")))
                  :ARG2 (c1-1 / bachelor
                              :mod (c1-6 / next)
                              :domain c1-3)
                  :source (c1-9 / cast
                                :mod (c1-8 / this))))

# ::snt He is not ready,for that step in life
# ::tokens ["He", "is", "not", "ready", ",", "for", "that", "step", "in", "life"]
# ::lemmas ["he", "be", "not", "ready", ",", "for", "that", "step", "in", "life"]
(c2-1 / ready-02
      :ARG1 (c2-2 / he)
      :ARG2 (c2-0 / step-01
                  :ARG2 (c2-3 / life)
                  :mod (c2-4 / that))
      :polarity -)

# ::snt No one cares!
# ::tokens ["No", "one", "cares", "!"]
# ::lemmas ["no", "one", "care", "!"]
(c3-0 / care-01
      :ARG0 (c3-1 / no-one))

# ::snt I mean I had to say it twice lol
# ::tokens ["I", "mean", "I", "had", "to", "say", "it", "twice", "lol"]
# ::lemmas ["i", "mean", "i", "have", "to", "say", "it", "twice", "lol"]
(c4-1 / mean-01
      :ARG0 (c4-5 / i)
      :ARG2 (c4-0 / obligate-01
                  :ARG2 (c4-2 / say-01
                              :ARG0 c4-5
                              :ARG1 (c4-3 / it)
                              :frequency 2)
                  :ARG2-of (c4-4 / laugh-01
                                 :ARG0 c4-5
                                 :manner (c4-6 / loud))))

# ::snt Me too my heart hurts
# ::tokens ["Me", "too", "my", "heart", "hurts"]
# ::lemmas ["i", "too", "my", "heart", "hurt"]
(c5-1 / hurt-02
      :ARG1 (c5-2 / i
                  :part (c5-0 / heart))
      :mod (c5-3 / too))

# ::snt Ok I really thought it was gonna be him.
# ::tokens ["Ok", "I", "really", "thought", "it", "was", "gon", "na", "be", "him", "."]
# ::lemmas ["ok", "i", "really", "think", "it", "be", "going", "to", "be", "he", "."]
(c6-4 / think-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-2 / he)
      :ARG1-of (c6-1 / real-04)
      :ARG1-of (c6-0 / okay-01))

# ::snt YOOOO IM SAD
# ::tokens ["YOOOO", "IM", "SAD"]
# ::lemmas ["YOOOO", "IM", "SAD"]
(c7-2 / sad-02
      :ARG0 (c7-1 / i)
      :mod (c7-0 / yOOOO))

# ::snt I'm heartbroken
# ::tokens ["I", "'m", "heartbroken"]
# ::lemmas ["i", "be", "heartbroken"]
(c8-0 / break-heart-31
      :ARG1 (c8-1 / i))

# ::snt No, if it's not Bryan it WONT be someone from this season lol it doesn't have to be a guy from this season. Nick wasn't in Jojo's
# ::tokens ["No", ",", "if", "it", "'s", "not", "Bryan", "it", "WONT", "be", "someone", "from", "this", "season", "lol", "it", "does", "n't", "have", "to", "be", "a", "guy", "from", "this", "season", ".", "Nick", "was", "n't", "in", "Jojo", "'s"]
# ::lemmas ["no", ",", "if", "it", "be", "not", "Bryan", "it", "wont", "be", "someone", "from", "this", "season", "lol", "it", "do", "not", "have", "to", "be", "a", "guy", "from", "this", "season", ".", "Nick", "be", "not", "in", "Jojo", "'s"]
(c9-12 / multi-sentence
       :snt1 (c9-7 / have-condition-91
                   :ARG1 (c9-0 / someone
                               :time (c9-5 / season
                                           :mod (c9-8 / this))
                               :domain (c9-18 / person
                                              :name (c9-17 / name
                                                           :op1 "Bryan"))
                               :ARG2-of (c9-1 / laugh-01
                                              :manner (c9-10 / loud)
                                              :mode expressive)
                               :polarity -)
                   :ARG2 (c9-13 / person
                                :name (c9-14 / name
                                             :op1 "Bryan")
                                :polarity -))
       :snt2 (c9-6 / obligate-01
                   :ARG1 (c9-9 / guy
                               :time (c9-4 / season
                                           :mod (c9-16 / this)))
                   :polarity -)
       :snt3 (c9-11 / be-located-at-91
                    :ARG1 (c9-3 / person
                                :name (c9-19 / name
                                             :op1 "Nick"))
                    :ARG2 (c9-2 / person
                                :name (c9-15 / name
                                             :op1 "Jojo"))
                    :polarity -))

# ::snt He's not quite Bachelor material(yet) but I wish he wasn't on BiP. He's better than that hot mess.
# ::tokens ["He", "'s", "not", "quite", "Bachelor", "material(yet", ")", "but", "I", "wish", "he", "was", "n't", "on", "BiP.", "He", "'s", "better", "than", "that", "hot", "mess", "."]
# ::lemmas ["he", "be", "not", "quite", "Bachelor", "material(yet", ")", "but", "i", "wish", "he", "be", "not", "on", "BiP.", "he", "be", "well", "than", "that", "hot", "mess", "."]
(c10-8 / multi-sentence
       :snt1 (c10-12 / contrast-01
                     :ARG1 (c10-2 / material
                                  :topic (c10-16 / person
                                                 :name (c10-15 / name
                                                               :op1 "Bachelor"))
                                  :domain (c10-3 / he)
                                  :mod (c10-4 / quite)
                                  :time (c10-0 / yet)
                                  :polarity -)
                     :ARG2 (c10-17 / wish-01
                                   :ARG0 (c10-19 / i)
                                   :ARG1 (c10-7 / be-located-at-91
                                                :ARG1 c10-3
                                                :ARG2 (c10-9 / publication
                                                             :name (c10-10 / name
                                                                           :op1 "BiP"))
                                                :polarity -)))
       :snt2 (c10-6 / good-02
                    :ARG1 (c10-18 / he)
                    :ARG2-of (c10-1 / have-degree-91
                                    :ARG1 c10-18
                                    :ARG3 (c10-14 / more)
                                    :ARG4 (c10-11 / mess
                                                  :ARG1-of (c10-13 / hot-05)
                                                  :mod (c10-5 / that)))))

# ::snt He's too childish to be
# ::tokens ["He", "'s", "too", "childish", "to", "be"]
# ::lemmas ["he", "be", "too", "childish", "to", "be"]
(c12-2 / have-degree-91
       :ARG1 (c12-0 / he)
       :ARG2 (c12-1 / childish)
       :ARG3 (c12-3 / too)
       :ARG6 c12-1)

# ::snt Not Dean lol if it's not Bryan it won't be someone from this season
# ::tokens ["Not", "Dean", "lol", "if", "it", "'s", "not", "Bryan", "it", "wo", "n't", "be", "someone", "from", "this", "season"]
# ::lemmas ["not", "dean", "lol", "if", "it", "be", "not", "Bryan", "it", "will", "not", "be", "someone", "from", "this", "season"]
(c13-5 / person
       :name (c13-1 / name
                    :op1 "Dean")
       :ARG2-of (c13-6 / laugh-01
                       :ARG0 (c13-7 / i)
                       :manner (c13-9 / loud)
                       :mode expressive)
       :condition (c13-2 / person
                         :name (c13-4 / name
                                      :op1 "Bryan")
                         :domain (c13-3 / someone
                                        :time (c13-0 / season
                                                     :mod (c13-8 / this)))
                         :polarity -)
       :polarity -)

# ::snt I'm heart broken
# ::tokens ["I", "'m", "heart", "broken"]
# ::lemmas ["i", "be", "heart", "break"]
(c14-0 / break-heart-31
       :ARG1 (c14-1 / i))

# ::snt Duh, like I told u that lol
# ::tokens ["Duh", ",", "like", "I", "told", "u", "that", "lol"]
# ::lemmas ["Duh", ",", "like", "i", "tell", "u", "that", "lol"]
(c15-1 / resemble-01
       :ARG2 (c15-3 / tell-01
                    :ARG0 (c15-4 / i)
                    :ARG1 (c15-5 / that)
                    :ARG2 (c15-0 / you))
       :mod (c15-6 / duh
                   :mode expressive)
       :ARG2-of (c15-2 / laugh-01
                       :ARG0 c15-4
                       :manner (c15-7 / loud)))

# ::snt We don't want to see him either
# ::tokens ["We", "do", "n't", "want", "to", "see", "him", "either"]
# ::lemmas ["we", "do", "not", "want", "to", "see", "he", "either"]
(c16-4 / want-01
       :ARG0 (c16-3 / we)
       :ARG1 (c16-0 / see-01
                    :ARG0 c16-3
                    :ARG1 (c16-2 / he))
       :mod (c16-1 / either)
       :polarity -)
