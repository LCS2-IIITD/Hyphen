# ::snt Thanks, pal. I'd say I worked really hard on it, but things like this come to me out of nowhere.
# ::tokens ["Thanks", ",", "pal", ".", "I", "'d", "say", "I", "worked", "really", "hard", "on", "it", ",", "but", "things", "like", "this", "come", "to", "me", "out", "of", "nowhere", "."]
# ::lemmas ["thank", ",", "pal", ".", "i", "would", "say", "i", "work", "really", "hard", "on", "it", ",", "but", "thing", "like", "this", "come", "to", "i", "out", "of", "nowhere", "."]
(c1-0 / multi-sentence
      :snt1 (c1-10 / thank-01
                   :ARG0 (c1-9 / i)
                   :ARG1 (c1-6 / pal))
      :snt2 (c1-7 / contrast-01
                  :ARG1 (c1-2 / say-01
                              :ARG0 (c1-3 / i)
                              :ARG1 (c1-8 / work-01
                                          :ARG0 c1-3
                                          :ARG1 (c1-14 / it)
                                          :ARG1-of (c1-5 / hard-02
                                                         :degree (c1-4 / really))))
                  :ARG2 (c1-15 / come-01
                               :ARG1 (c1-12 / thing
                                            :ARG1-of (c1-13 / resemble-01
                                                            :ARG2 (c1-11 / this)))
                               :ARG4 c1-3
                               :source (c1-1 / nowhere))))

# ::snt I really liked this and I'm sad I just now noticed it and it didn't do better
# ::tokens ["I", "really", "liked", "this", "and", "I", "'m", "sad", "I", "just", "now", "noticed", "it", "and", "it", "did", "n't", "do", "better"]
# ::lemmas ["i", "really", "like", "this", "and", "i", "be", "sad", "i", "just", "now", "notice", "it", "and", "it", "do", "not", "do", "well"]
(c2-5 / and
      :op1 (c2-8 / like-01
                 :ARG0 (c2-11 / i)
                 :ARG1 (c2-12 / this)
                 :degree (c2-4 / really))
      :op2 (c2-2 / sad-02
                 :ARG0 (c2-13 / and
                              :op1 (c2-0 / notice-01
                                         :ARG0 c2-11
                                         :ARG1 (c2-3 / it)
                                         :time (c2-7 / now
                                                     :mod (c2-10 / just)))
                              :op2 (c2-14 / do-02
                                          :ARG0 c2-3
                                          :ARG1 (c2-1 / good-02
                                                      :ARG2-of (c2-9 / have-degree-91
                                                                     :ARG1 c2-3
                                                                     :ARG3 (c2-6 / more)))
                                          :polarity -))
                 :ARG1 c2-11))

# ::snt Instead of just complaining maybe he can come up with a better way that doesn't cost more. Smart ass!
# ::tokens ["Instead", "of", "just", "complaining", "maybe", "he", "can", "come", "up", "with", "a", "better", "way", "that", "does", "n't", "cost", "more", ".", "Smart", "ass", "!"]
# ::lemmas ["instead", "of", "just", "complain", "maybe", "he", "can", "come", "up", "with", "a", "well", "way", "that", "do", "not", "cost", "more", ".", "Smart", "ass", "!"]
(c3-0 / multi-sentence
      :snt1 (c3-4 / possible-01
                  :ARG1 (c3-6 / come-up-11
                              :ARG0 (c3-3 / he)
                              :ARG1 (c3-7 / way
                                          :ARG1-of (c3-8 / have-degree-91
                                                         :ARG2 (c3-12 / good-02
                                                                      :ARG1 c3-7)
                                                         :ARG3 (c3-5 / more))
                                          :ARG1-of (c3-14 / cost-01
                                                          :ARG2 (c3-13 / more)
                                                          :polarity -))
                              :ARG1-of (c3-10 / instead-of-91
                                              :ARG2 (c3-9 / complain-01
                                                          :ARG0 c3-3
                                                          :mod (c3-11 / just)))))
      :snt2 (c3-2 / ass
                  :ARG1-of (c3-1 / smart-06)))

# ::snt Sympathetic, but only the "STARS" that complain could afford eggs if they were not raised this way. Screw the poor again!
# ::tokens ["Sympathetic", ",", "but", "only", "the", "\"", "STARS", "\"", "that", "complain", "could", "afford", "eggs", "if", "they", "were", "not", "raised", "this", "way", ".", "Screw", "the", "poor", "again", "!"]
# ::lemmas ["sympathetic", ",", "but", "only", "the", "\"", "star", "\"", "that", "complain", "could", "afford", "egg", "if", "they", "be", "not", "raise", "this", "way", ".", "screw", "the", "poor", "again", "!"]
(c4-3 / multi-sentence
      :snt1 (c4-9 / contrast-01
                  :ARG1 (c4-5 / Sympathetic)
                  :ARG2 (c4-8 / possible-01
                              :ARG1 (c4-13 / afford-01
                                           :ARG0 (c4-4 / person
                                                       :ARG0-of (c4-0 / stalk-02)
                                                       :mod (c4-1 / only)
                                                       :ARG0-of (c4-15 / complain-01))
                                           :ARG1 (c4-7 / egg)
                                           :condition (c4-6 / raise-03
                                                            :ARG1 c4-7
                                                            :manner (c4-11 / this)
                                                            :polarity -))))
      :snt2 (c4-16 / screw-02
                   :ARG0 (c4-2 / you)
                   :ARG1 (c4-14 / person
                                :mod (c4-10 / poor))
                   :mod (c4-12 / again)
                   :mode imperative))

# ::snt I always wondered what was in that box!
# ::tokens ["I", "always", "wondered", "what", "was", "in", "that", "box", "!"]
# ::lemmas ["i", "always", "wonder", "what", "be", "in", "that", "box", "!"]
(c5-2 / wonder-01
      :ARG0 (c5-4 / i)
      :ARG1 (c5-3 / thing
                  :location (c5-0 / box
                                  :mod (c5-5 / that)))
      :time (c5-1 / always))

# ::snt testimonial The Hot Spot We love the bubby car sponge you can even wipe your arse with it ! wow cleans the hot spot team beep beep so beep
# ::tokens ["testimonial", "The", "Hot", "Spot", "We", "love", "the", "bubby", "car", "sponge", "you", "can", "even", "wipe", "your", "arse", "with", "it", "!", "wow", "cleans", "the", "hot", "spot", "team", "beep", "beep", "so", "beep"]
# ::lemmas ["testimonial", "The", "Hot", "Spot", "We", "love", "the", "bubby", "car", "sponge", "you", "can", "even", "wipe", "your", "arse", "with", "it", "!", "wow", "clean", "the", "hot", "spot", "team", "beep", "beep", "so", "beep"]
(c6-12 / multi-sentence
       :snt1 (c6-20 / documentary
                    :name (c6-16 / name
                                 :op1 "The"
                                 :op2 "Hot"
                                 :op3 "Spot"))
       :snt2 (c6-9 / and
                   :op1 (c6-2 / love-01
                              :ARG0 (c6-19 / we)
                              :ARG1 (c6-0 / sponge
                                          :mod (c6-14 / car)
                                          :mod (c6-11 / bubby)
                                          :ARG2-of (c6-3 / wipe-01
                                                         :ARG0 (c6-6 / you
                                                                     :part (c6-7 / ass
                                                                                 :ARG1-of c6-3))
                                                         :ARG2 c6-0
                                                         :mod (c6-17 / even)
                                                         :ARG1-of (c6-18 / possible-01)
                                                         :op2-of c6-9)))
                   :ARG0 c6-6
                   :ARG1 c6-7
                   :ARG2 c6-0
                   :mod c6-17
                   :ARG1-of c6-18)
       :snt3 (c6-10 / clean-01
                    :ARG0 (c6-15 / wow)
                    :ARG1 (c6-1 / beep-01
                                :ARG1 (c6-8 / team
                                            :name (c6-13 / name
                                                         :op1 "Hot"
                                                         :op2 "Spot")))
                    :mod (c6-4 / beep-01
                               :mode expressive)
                    :mod (c6-5 / so)
                    :mode expressive))

# ::snt lol thats mean mustard watch my next tweet lol
# ::tokens ["lol", "that", "s", "mean", "mustard", "watch", "my", "next", "tweet", "lol"]
# ::lemmas ["lol", "that", "s", "mean", "mustard", "watch", "my", "next", "tweet", "lol"]
(c7-3 / say-01
      :ARG0 (c7-7 / i)
      :ARG1 (c7-1 / mean-04
                  :ARG1 (c7-8 / that))
      :ARG2 (c7-6 / watch-01
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-11 / thing
                               :ARG1-of (c7-9 / tweet-01
                                              :ARG0 c7-7)
                               :mod (c7-2 / next))
                  :ARG2-of (c7-4 / laugh-01
                                 :ARG0 c7-7
                                 :manner (c7-10 / loud)
                                 :ARG2 c7-3)
                  :mode imperative)
      :ARG0 c7-7
      :manner (c7-5 / loud))

# ::snt why don't u advertise the millions of other divorces...probably more important; both philanderers anyway
# ::tokens ["why", "do", "n't", "u", "advertise", "the", "millions", "of", "other", "divorces", "...", "probably", "more", "important", ";", "both", "philanderers", "anyway"]
# ::lemmas ["why", "do", "not", "u", "advertise", "the", "millions", "of", "other", "divorce", "...", "probably", "more", "important", ";", "both", "philanderer", "anyway"]
(c8-8 / cause-01
      :ARG0 (c8-12 / amr-unknown)
      :ARG1 (c8-11 / advertise-01
                   :ARG0 (c8-2 / you)
                   :ARG1 (c8-14 / divorce-02
                                :quant (c8-3 / multiple
                                             :op1 1000000)
                                :mod (c8-0 / other)
                                :ARG1-of (c8-13 / important-01
                                                :mod (c8-6 / probable)
                                                :ARG2-of (c8-5 / have-degree-91
                                                               :ARG1 c8-14
                                                               :ARG3 (c8-7 / more))))
                   :polarity -)
      :ARG1-of (c8-15 / mean-01
                      :ARG2 (c8-4 / person
                                  :ARG0-of (c8-10 / philander-01)
                                  :mod (c8-1 / both)
                                  :mod (c8-9 / anyway))))

# ::snt I'm sad w/Brad/Jolie divorce. It seemed they tried make it wk, now the kids will b affected. Away fm the wife is not a marriage.
# ::tokens ["I", "'m", "sad", "w", "/", "Brad", "/", "Jolie", "divorce", ".", "It", "seemed", "they", "tried", "make", "it", "wk", ",", "now", "the", "kids", "will", "b", "affected", ".", "Away", "fm", "the", "wife", "is", "not", "a", "marriage", "."]
# ::lemmas ["i", "be", "sad", "w", "/", "Brad", "/", "Jolie", "divorce", ".", "it", "seem", "they", "try", "make", "it", "wk", ",", "now", "the", "kid", "will", "b", "affect", ".", "away", "fm", "the", "wife", "be", "not", "a", "marriage", "."]
(c9-10 / multi-sentence
       :snt1 (c9-0 / sad-02
                   :ARG0 (c9-16 / divorce-01
                                :ARG1 (c9-9 / and
                                            :op1 (c9-17 / person
                                                        :name (c9-15 / name
                                                                     :op1 "Brad"))
                                            :op2 (c9-11 / person
                                                        :name (c9-12 / name
                                                                     :op1 "Jolie"))))
                   :ARG1 (c9-20 / i))
       :snt2 (c9-2 / seem-01
                   :ARG1 (c9-7 / and
                               :op1 (c9-8 / try-01
                                          :ARG0 (c9-13 / they)
                                          :ARG1 (c9-3 / make-02
                                                      :ARG0 c9-13
                                                      :ARG1 c9-16))
                               :op2 (c9-6 / affect-01
                                          :ARG1 (c9-4 / kid)
                                          :time (c9-18 / now))))
       :snt3 (c9-14 / marry-01
                    :manner (c9-21 / away)
                    :domain (c9-1 / person
                                  :ARG0-of (c9-5 / have-rel-role-91
                                                 :ARG2 (c9-19 / wife)))
                    :polarity -))

# ::snt So what else is new??? Marriage in Hollywood is a business and publicity stunt!!!A joke!!! jp960
# ::tokens ["So", "what", "else", "is", "new", "?", "?", "?", "Marriage", "in", "Hollywood", "is", "a", "business", "and", "publicity", "stunt!!!A", "joke", "!", "!", "!", "jp960"]
# ::lemmas ["so", "what", "else", "be", "new", "?", "?", "?", "marriage", "in", "Hollywood", "be", "a", "business", "and", "publicity", "stunt!!!A", "joke", "!", "!", "!", "jp960"]
(c10-2 / multi-sentence
       :snt1 (c10-1 / new-01
                    :ARG1 (c10-11 / amr-unknown
                                  :mod (c10-4 / else)))
       :snt2 (c10-10 / and
                     :op1 (c10-0 / business)
                     :op2 (c10-6 / publicity)
                     :domain (c10-5 / marry-01
                                    :location (c10-12 / market-sector
                                                      :name (c10-7 / name
                                                                   :op1 "Hollywood"))))
       :snt3 (c10-9 / joke-01
                    :ARG2 (c10-3 / person
                                 :name (c10-8 / name
                                              :op1 "jp960"))
                    :mode expressive))

# ::snt cheaters...
# ::tokens ["cheaters", "..."]
# ::lemmas ["cheater", "..."]
(c11-1 / person
       :ARG0-of (c11-0 / cheat-02))

# ::snt she needs a psych evaluation.
# ::tokens ["she", "needs", "a", "psych", "evaluation", "."]
# ::lemmas ["she", "need", "a", "psych", "evaluation", "."]
(c12-2 / need-01
       :ARG0 (c12-3 / she)
       :ARG1 (c12-1 / evaluate-01
                    :ARG1 c12-3
                    :ARG3 (c12-0 / psych)))

# ::snt why are you guys acting like someone had just died? This is Karma on Brads part.
# ::tokens ["why", "are", "you", "guys", "acting", "like", "someone", "had", "just", "died", "?", "This", "is", "Karma", "on", "Brads", "part", "."]
# ::lemmas ["why", "be", "you", "guy", "act", "like", "someone", "have", "just", "die", "?", "this", "be", "Karma", "on", "Brads", "part", "."]
(c14-1 / multi-sentence
       :snt1 (c14-7 / cause-01
                    :ARG0 (c14-10 / amr-unknown)
                    :ARG1 (c14-9 / act-01
                                 :ARG0 (c14-0 / you
                                              :mod (c14-11 / guy))
                                 :ARG1 (c14-5 / resemble-01
                                              :ARG2 (c14-12 / die-01
                                                            :ARG1 (c14-3 / someone)
                                                            :mod (c14-8 / just)))))
       :snt2 (c14-6 / person
                    :name (c14-2 / name
                                 :op1 "Karma")
                    :domain (c14-13 / this)
                    :prep-on (c14-4 / part
                                    :name c14-2
                                    :poss c14-6
                                    :op1 "Bads")))

# ::snt come to N Minn
# ::tokens ["come", "to", "N", "Minn"]
# ::lemmas ["come", "to", "N", "Minn"]
(c15-0 / come-01
       :ARG1 (c15-1 / you)
       :ARG4 (c15-3 / city
                    :name (c15-2 / name
                                 :op1 "N"
                                 :op2 "Minn"))
       :mode imperative)

# ::snt they both can suck
# ::tokens ["they", "both", "can", "suck"]
# ::lemmas ["they", "both", "can", "suck"]
(c16-2 / possible-01
       :ARG1 (c16-3 / suck-03
                    :ARG0 (c16-0 / they
                                 :mod (c16-1 / both))))

# ::snt So sad.They made a great couple.
# ::tokens ["So", "sad", ".", "They", "made", "a", "great", "couple", "."]
# ::lemmas ["so", "sad", ".", "they", "make", "a", "great", "couple", "."]
(c17-1 / multi-sentence
       :snt1 (c17-2 / sad-02
                    :degree (c17-0 / so))
       :snt2 (c17-3 / make-01
                    :ARG1 (c17-4 / couple
                                 :mod (c17-6 / great))
                    :ARG2 (c17-5 / they)))

# ::snt that's their problem...who cares??? At the end they will still be filthy rich... And their freaky asses will still fuck each other..
# ::tokens ["that", "'s", "their", "problem", "...", "who", "cares", "?", "?", "?", "At", "the", "end", "they", "will", "still", "be", "filthy", "rich", "...", "And", "their", "freaky", "asses", "will", "still", "fuck", "each", "other", ".."]
# ::lemmas ["that", "be", "their", "problem", "...", "who", "care", "?", "?", "?", "at", "the", "end", "they", "will", "still", "be", "filthy", "rich", "...", "and", "their", "freaky", "ass", "will", "still", "fuck", "each", "other", ".."]
(c18-3 / multi-sentence
       :snt1 (c18-8 / problem
                    :poss (c18-13 / they)
                    :domain (c18-15 / that))
       :snt2 (c18-11 / care-01
                     :ARG0 (c18-5 / amr-unknown)
                     :ARG1 (c18-14 / and
                                   :op1 (c18-6 / rich
                                               :domain (c18-16 / they
                                                               :part (c18-12 / ass
                                                                             :ARG1-of (c18-0 / freaky-00)))
                                               :mod (c18-9 / filthy)
                                               :time (c18-7 / end-01)
                                               :mod (c18-4 / still))
                                   :op2 (c18-10 / fuck-01
                                                :ARG0 c18-12
                                                :ARG1 (c18-1 / other
                                                             :mod (c18-17 / each))
                                                :mod (c18-2 / still)))))

# ::snt ... it wouldn't surprise me to see Brad come out on the short end of the stick ...
# ::tokens ["...", "it", "would", "n't", "surprise", "me", "to", "see", "Brad", "come", "out", "on", "the", "short", "end", "of", "the", "stick", "..."]
# ::lemmas ["...", "it", "would", "not", "surprise", "i", "to", "see", "Brad", "come", "out", "on", "the", "short", "end", "of", "the", "stick", "..."]
(c19-2 / surprise-01
       :ARG0 (c19-0 / see-01
                    :ARG0 (c19-7 / i)
                    :ARG1 (c19-6 / come-out-09
                                 :ARG1 (c19-5 / person
                                              :name (c19-1 / name
                                                           :op1 "Brad"))
                                 :manner (c19-4 / end
                                                :ARG1-of (c19-8 / short-07)
                                                :part-of (c19-3 / stick))))
       :ARG1 c19-7
       :polarity -)

# ::snt $500 million. Or to us common folk; the value of a powerball jackpot unwon after two months
# ::tokens ["$", "500", "million", ".", "Or", "to", "us", "common", "folk", ";", "the", "value", "of", "a", "powerball", "jackpot", "unwon", "after", "two", "months"]
# ::lemmas ["$", "500", "million", ".", "or", "to", "we", "common", "folk", ";", "the", "value", "of", "a", "powerball", "jackpot", "unwon", "after", "two", "months"]
(c20-2 / multi-sentence
       :snt1 (c20-6 / monetary-quantity
                    :unit (c20-12 / dollar)
                    :quant 500000000)
       :snt2 (c20-0 / or
                    :op2 (c20-3 / say-01
                                :ARG1 (c20-5 / end-01
                                             :ARG1 (c20-4 / value-01
                                                          :ARG1 (c20-9 / jackpot
                                                                       :mod (c20-7 / powerball)))
                                             :time (c20-11 / after
                                                           :quant (c20-10 / temporal-quantity
                                                                          :unit (c20-13 / month)
                                                                          :quant 2))
                                             :polarity -)
                                :ARG2 (c20-1 / folk
                                             :mod (c20-8 / common)))))

# ::snt ... It'll be interesting to see what was covered by pre-nuptials, current separate incomes, child support request, etc ...
# ::tokens ["...", "It", "'ll", "be", "interesting", "to", "see", "what", "was", "covered", "by", "pre", "-", "nuptials", ",", "current", "separate", "incomes", ",", "child", "support", "request", ",", "etc", "..."]
# ::lemmas ["...", "it", "'ll", "be", "interesting", "to", "see", "what", "be", "cover", "by", "pre", "-", "nuptial", ",", "current", "separate", "income", ",", "child", "support", "request", ",", "etc", "..."]
(c21-10 / interest-01
        :ARG0 (c21-3 / see-01
                     :ARG1 (c21-9 / thing
                                  :ARG1-of (c21-7 / cover-01
                                                  :ARG0 (c21-11 / and
                                                                :op1 (c21-2 / nuptial
                                                                            :time (c21-1 / before))
                                                                :op2 (c21-4 / income
                                                                            :ARG1-of (c21-0 / separate-02)
                                                                            :time (c21-12 / current))
                                                                :op3 (c21-5 / request-01
                                                                            :ARG1 (c21-13 / support-01
                                                                                          :ARG1 (c21-8 / child)))
                                                                :op4 (c21-6 / et-cetera))))))

# ::snt They don't want each other's money. She simply wants a divorce and custody. Jeeeeez.
# ::tokens ["They", "do", "n't", "want", "each", "other", "'s", "money", ".", "She", "simply", "wants", "a", "divorce", "and", "custody", ".", "Jeeeeez", "."]
# ::lemmas ["they", "do", "not", "want", "each", "other", "'s", "money", ".", "she", "simply", "want", "a", "divorce", "and", "custody", ".", "Jeeeeez", "."]
(c22-1 / multi-sentence
       :snt1 (c22-8 / want-01
                    :ARG0 (c22-10 / they)
                    :ARG1 (c22-5 / money
                                 :poss c22-10)
                    :polarity -)
       :snt2 (c22-7 / want-01
                    :ARG0 (c22-3 / she)
                    :ARG1 (c22-4 / and
                                 :op1 (c22-11 / divorce-01
                                              :ARG0 c22-3)
                                 :op2 (c22-9 / custody))
                    :mod (c22-0 / simple))
       :snt3 (c22-6 / person
                    :name (c22-2 / name
                                 :op1 "Jeeeeez")))

# ::snt so what?
# ::tokens ["so", "what", "?"]
# ::lemmas ["so", "what", "?"]
(c23-0 / infer-01
       :ARG1 (c23-1 / amr-unknown))

# ::snt if Maher &ampitt want bring up important subjects they should start asking questions about official lies
# ::tokens ["if", "Maher", "&", "ampitt", "want", "bring", "up", "important", "subjects", "they", "should", "start", "asking", "questions", "about", "official", "lies"]
# ::lemmas ["if", "Maher", "&", "ampitt", "want", "bring", "up", "important", "subject", "they", "should", "start", "ask", "question", "about", "official", "lie"]
(c24-6 / recommend-01
       :ARG1 (c24-5 / start-01
                    :ARG0 (c24-12 / and
                                  :op1 (c24-8 / person
                                              :name (c24-3 / name
                                                           :op1 "Maher"))
                                  :op2 (c24-4 / person
                                              :name (c24-7 / name
                                                           :op1 "ampitt")))
                    :ARG1 (c24-11 / ask-01
                                  :ARG0 c24-12
                                  :ARG1 (c24-13 / question-01
                                                :ARG0 c24-12
                                                :ARG1 (c24-9 / lie-08
                                                             :mod (c24-0 / official)))))
       :condition (c24-10 / want-01
                          :ARG0 c24-12
                          :ARG1 (c24-2 / bring-up-02
                                       :ARG0 c24-12
                                       :ARG1 (c24-1 / subject
                                                    :ARG1-of (c24-14 / important-01)))))

# ::snt Like Brad &amp; Bill shop there?The fast food place they stop at with their Families that Pay them R better! Who R They Anyway?
# ::tokens ["Like", "Brad", "&", "amp", ";", "Bill", "shop", "there?The", "fast", "food", "place", "they", "stop", "at", "with", "their", "Families", "that", "Pay", "them", "R", "better", "!", "Who", "R", "They", "Anyway", "?"]
# ::lemmas ["like", "Brad", "&", "amp", ";", "Bill", "shop", "there?The", "fast", "food", "place", "they", "stop", "at", "with", "their", "Families", "that", "pay", "they", "r", "well", "!", "who", "r", "they", "anyway", "?"]
(c25-12 / multi-sentence
        :snt1 (c25-0 / shop-01
                     :ARG0 (c25-18 / person
                                   :name (c25-16 / name
                                                 :op1 "Bill")
                                   :ARG1-of (c25-17 / resemble-01
                                                    :ARG2 (c25-8 / and
                                                                 :op1 (c25-13 / person
                                                                              :name (c25-14 / name
                                                                                            :op1 "Brad"
                                                                                            :op2 "&"
                                                                                            :op3 "amp"))
                                                                 :op2 (c25-2 / person
                                                                             :name (c25-19 / name
                                                                                           :op1 "Bill")))))
                     :ARG2 (c25-1 / place
                                  :mod (c25-15 / food
                                               :ARG1-of (c25-20 / fast-02))
                                  :ARG4-of (c25-3 / stop-01
                                                  :ARG0 c25-8
                                                  :accompanier (c25-7 / person
                                                                      :ARG0-of (c25-4 / have-rel-role-91
                                                                                      :ARG1 c25-8
                                                                                      :ARG2 (c25-21 / family))
                                                                      :ARG0-of (c25-25 / pay-01
                                                                                       :ARG1-of (c25-23 / have-degree-91
                                                                                                        :ARG2 (c25-9 / good-02
                                                                                                                     :ARG1 c25-25)
                                                                                                        :ARG3 (c25-5 / more))
                                                                                       :ARG2 c25-7))))
                     :polarity (c25-10 / amr-unknown))
        :snt2 (c25-6 / amr-unknown
                     :domain (c25-11 / they)
                     :mod (c25-24 / anyway)
                     :polarity (c25-22 / amr-unknown)))

# ::snt So What! That Egg Market is Feeding Millions of People! Think about billion People on a Plant that can't keep Supporting!
# ::tokens ["So", "What", "!", "That", "Egg", "Market", "is", "Feeding", "Millions", "of", "People", "!", "Think", "about", "billion", "People", "on", "a", "Plant", "that", "ca", "n't", "keep", "Supporting", "!"]
# ::lemmas ["so", "what", "!", "that", "Egg", "Market", "be", "Feeding", "Millions", "of", "people", "!", "think", "about", "billion", "people", "on", "a", "plant", "that", "can", "not", "keep", "support", "!"]
(c26-2 / multi-sentence
       :snt1 (c26-12 / infer-01
                     :ARG1 (c26-13 / amr-unknown))
       :snt2 (c26-0 / feed-01
                    :ARG0 (c26-6 / market
                                 :mod (c26-5 / egg)
                                 :mod (c26-11 / that))
                    :ARG2 (c26-7 / person
                                 :quant (c26-15 / multiple
                                                :op1 1000000)))
       :snt3 (c26-16 / think-01
                     :ARG0 (c26-1 / you)
                     :ARG1 (c26-3 / person
                                  :quant (c26-14 / about
                                                 :op1 1000000000)
                                  :location (c26-10 / plant
                                                    :ARG0-of (c26-8 / keep-02
                                                                    :ARG1 (c26-4 / support-01
                                                                                 :ARG0 c26-10
                                                                                 :ARG1-of (c26-9 / possible-01
                                                                                                 :polarity -)))))
                     :mode imperative))

# ::snt Do we really care what Brad &amp; Bill have to say about egg production?
# ::tokens ["Do", "we", "really", "care", "what", "Brad", "&", "amp", ";", "Bill", "have", "to", "say", "about", "egg", "production", "?"]
# ::lemmas ["do", "we", "really", "care", "what", "Brad", "&", "amp", ";", "Bill", "have", "to", "say", "about", "egg", "production", "?"]
(c27-7 / care-01
       :ARG0 (c27-8 / we)
       :ARG1 (c27-9 / thing
                    :ARG1-of (c27-2 / say-01
                                    :ARG0 (c27-6 / person
                                                 :name (c27-0 / name
                                                              :op1 "Bill"))
                                    :ARG3 (c27-1 / produce-01
                                                 :ARG1 (c27-5 / egg))))
       :polarity (c27-3 / amr-unknown)
       :ARG1-of (c27-4 / real-04))

# ::snt Chickens &gt; unborn babies?
# ::tokens ["Chickens", "&", "gt", ";", "unborn", "babies", "?"]
# ::lemmas ["Chickens", "&", "gt", ";", "unborn", "baby", "?"]
(c28-6 / and
       :op1 (c28-4 / person
                   :name (c28-1 / name
                                :op1 "Chickens"))
       :op2 (c28-2 / person
                   :name c28-1
                   :op1 "gt")
       :op3 (c28-0 / baby
                   :ARG1-of (c28-3 / bear-02
                                   :polarity -))
       :polarity (c28-5 / amr-unknown))

# ::snt Great!! Thanks Costco. Picking up eggs and milk from CSCO on my way home.
# ::tokens ["Great", "!", "!", "Thanks", "Costco", ".", "Picking", "up", "eggs", "and", "milk", "from", "CSCO", "on", "my", "way", "home", "."]
# ::lemmas ["great", "!", "!", "thank", "Costco", ".", "pick", "up", "egg", "and", "milk", "from", "csco", "on", "my", "way", "home", "."]
(c29-0 / multi-sentence
       :snt1 (c29-13 / great
                     :mode expressive)
       :snt2 (c29-12 / thank-01
                     :ARG0 (c29-11 / i)
                     :ARG1 (c29-9 / company
                                  :name (c29-1 / name
                                               :op1 "Costco")))
       :snt3 (c29-6 / pick-up-04
                    :ARG0 (c29-2 / i)
                    :ARG1 (c29-3 / and
                                 :op1 (c29-4 / egg)
                                 :op2 (c29-5 / milk))
                    :ARG2 (c29-14 / company
                                  :name (c29-7 / name
                                               :op1 "CSCO"))
                    :time (c29-10 / way
                                  :direction (c29-8 / home)
                                  :poss c29-2)))

# ::snt looking for Virtual assistant, Web design/website making, Data entry, Social Media Marketer?Contact address
# ::tokens ["looking", "for", "Virtual", "assistant", ",", "Web", "design", "/", "website", "making", ",", "Data", "entry", ",", "Social", "Media", "Marketer?Contact", "address"]
# ::lemmas ["look", "for", "Virtual", "assistant", ",", "web", "design", "/", "website", "making", ",", "Data", "entry", ",", "Social", "Media", "Marketer?Contact", "address"]
(c30-5 / look-01
       :ARG1 (c30-12 / and
                     :op1 (c30-11 / assistant
                                  :mod (c30-3 / virtual))
                     :op2 (c30-13 / design-01
                                  :ARG1 (c30-7 / web))
                     :op3 (c30-0 / make-01
                                 :ARG1 (c30-6 / website))
                     :op4 (c30-4 / enter-02
                                 :ARG1 (c30-8 / data))
                     :op5 (c30-9 / company
                                 :name (c30-1 / name
                                              :op1 "Social"
                                              :op2 "Media"
                                              :op3 "Marketer")))
       :polarity (c30-10 / amr-unknown)
       :ARG2-of (c30-2 / address-01
                       :ARG1 (c30-14 / contact-01)))

# ::snt :She's a complete nutcase
# ::tokens [":", "She", "'s", "a", "complete", "nutcase"]
# ::lemmas [":", "she", "be", "a", "complete", "nutcase"]
(c31-1 / nutcase
       :ARG1-of (c31-0 / complete-02)
       :domain (c31-2 / she))

# ::snt Looking for&gt;&gt;Logo,Brand identity,T-shirt,icon,Flyer,Brochure,Business card DESIGNER?? Then contact
# ::tokens ["Looking", "for&gt;&gt;Logo", ",", "Brand", "identity", ",", "T", "-", "shirt", ",", "icon", ",", "Flyer", ",", "Brochure", ",", "Business", "card", "DESIGNER", "?", "?", "Then", "contact"]
# ::lemmas ["look", "for&gt;&gt;Logo", ",", "brand", "identity", ",", "T", "-", "shirt", ",", "icon", ",", "Flyer", ",", "Brochure", ",", "Business", "card", "designer", "?", "?", "then", "contact"]
(c32-2 / multi-sentence
       :snt1 (c32-5 / look-01
                    :ARG1 (c32-10 / and
                                  :op1 (c32-12 / logo)
                                  :op2 (c32-9 / identity
                                              :mod (c32-0 / brand))
                                  :op3 (c32-8 / t-shirt)
                                  :op4 (c32-3 / icon)
                                  :op5 (c32-14 / thing
                                               :ARG2-of (c32-6 / label-01
                                                               :op6-of c32-10))
                                  :ARG1 (c32-7 / card
                                               :mod (c32-4 / business))))
       :snt2 (c32-13 / contact-01
                     :ARG0 (c32-1 / you)
                     :time (c32-11 / then)
                     :mode imperative))

# ::snt Ae... un couple de lgende... et maintenant ? j'ai peur pour et coco... une fortune se rpartir aussi
# ::tokens ["Ae", "...", "un", "couple", "de", "lgende", "...", "et", "maintenant", "?", "j'ai", "peur", "pour", "et", "coco", "...", "une", "fortune", "se", "rpartir", "aussi"]
# ::lemmas ["Ae", "...", "un", "couple", "de", "lgende", "...", "et", "maintenant", "?", "j'ai", "peur", "pour", "et", "coco", "...", "une", "fortune", "se", "rpartir", "aussi"]
(c34-2 / multi-sentence
       :snt1 (c34-14 / and
                     :op1 (c34-5 / et-cetera)
                     :op2 (c34-9 / couple
                                 :op1 (c34-17 / city
                                              :name (c34-3 / name
                                                           :op1 "Lgende"))
                                 :polarity -)
                     :op3 (c34-15 / et-cetera))
       :snt2 (c34-8 / et-cetera
                    :polarity (c34-13 / amr-unknown)
                    :ARG1-of (c34-7 / pour-02))
       :snt3 (c34-10 / and
                     :op1 (c34-4 / peur-02)
                     :op2 (c34-11 / coco))
       :snt4 (c34-12 / et-cetera
                     :op1 (c34-1 / fortune
                                 :mod (c34-16 / une))
                     :ARG2-of (c34-6 / have-part-91
                                     :ARG1 (c34-0 / country
                                                  :name c34-3
                                                  :op1 "France"))))

# ::snt Exclusive. No amount of CEO Mrs Kesha Pitt fortune, revenue or inheritance is to be held or paid out via kidnap of Brad Kesha Pitt children
# ::tokens ["Exclusive", ".", "No", "amount", "of", "CEO", "Mrs", "Kesha", "Pitt", "fortune", ",", "revenue", "or", "inheritance", "is", "to", "be", "held", "or", "paid", "out", "via", "kidnap", "of", "Brad", "Kesha", "Pitt", "children"]
# ::lemmas ["exclusive", ".", "no", "amount", "of", "ceo", "Mrs", "Kesha", "Pitt", "fortune", ",", "revenue", "or", "inheritance", "be", "to", "be", "hold", "or", "pay", "out", "via", "kidnap", "of", "Brad", "Kesha", "Pitt", "child"]
(c35-9 / multi-sentence
       :snt1 (c35-16 / exclusive-02)
       :snt2 (c35-2 / or
                    :op1 (c35-4 / hold-01
                                :ARG1 (c35-8 / or
                                             :op1 (c35-13 / fortune
                                                          :poss (c35-17 / person
                                                                        :name (c35-14 / name
                                                                                      :op1 "Mrs"
                                                                                      :op2 "Kesha"
                                                                                      :op3 "Pitt")
                                                                        :ARG0-of (c35-18 / have-org-role-91
                                                                                         :ARG2 (c35-20 / officer
                                                                                                       :mod (c35-12 / chief)
                                                                                                       :mod (c35-6 / executive)))))
                                             :op2 (c35-15 / revenue
                                                          :poss c35-17)
                                             :op3 (c35-19 / inherit-01
                                                          :ARG0 c35-17))
                                :polarity -)
                    :op2 (c35-10 / pay-out-03
                                 :ARG1 c35-8
                                 :manner (c35-5 / kidnap-01
                                                :ARG1 (c35-1 / person
                                                             :ARG0-of (c35-3 / have-rel-role-91
                                                                             :ARG1 (c35-0 / person
                                                                                          :name (c35-11 / name
                                                                                                        :op1 "Brad"
                                                                                                        :op2 "Kesha"
                                                                                                        :op3 "Pitt"))
                                                                             :ARG2 (c35-7 / child))))
                                 :polarity -)))

# ::snt if I'm not getting any, don't really care
# ::tokens ["if", "I", "'m", "not", "getting", "any", ",", "do", "n't", "really", "care"]
# ::lemmas ["if", "i", "be", "not", "get", "any", ",", "do", "not", "really", "care"]
(c36-1 / care-01
       :ARG0 (c36-2 / i)
       :ARG1-of (c36-0 / real-04)
       :condition (c36-4 / get-01
                         :ARG0 c36-2
                         :ARG1 (c36-3 / any)
                         :polarity -)
       :polarity -)

# ::snt On dirait Yves Jacques.
# ::tokens ["On", "dirait", "Yves", "Jacques", "."]
# ::lemmas ["on", "dirait", "Yves", "Jacques", "."]
(c37-0 / dirait
       :op1 (c37-2 / person
                   :name (c37-1 / name
                                :op1 "Yves"
                                :op2 "Jacques")))

# ::snt Give them to Iran
# ::tokens ["Give", "them", "to", "Iran"]
# ::lemmas ["give", "they", "to", "Iran"]
(c38-4 / give-01
       :ARG0 (c38-0 / you)
       :ARG1 (c38-3 / they)
       :ARG2 (c38-2 / country
                    :name (c38-1 / name
                                 :op1 "Iran"))
       :mode imperative)

# ::snt Really, the most important question.
# ::tokens ["Really", ",", "the", "most", "important", "question", "."]
# ::lemmas ["really", ",", "the", "most", "important", "question", "."]
(c39-4 / question-01
       :ARG1-of (c39-1 / real-04)
       :ARG1-of (c39-2 / have-degree-91
                       :ARG2 (c39-3 / important-01
                                    :ARG1 c39-4)
                       :ARG3 (c39-0 / most)))

# ::snt Oh, Accha.
# ::tokens ["Oh", ",", "Accha", "."]
# ::lemmas ["oh", ",", "Accha", "."]
(c40-2 / say-01
       :ARG1 (c40-0 / oh
                    :mode expressive)
       :ARG2 (c40-1 / accha))

# ::snt hahaha hopefully not a direct effect
# ::tokens ["hahaha", "hopefully", "not", "a", "direct", "effect"]
# ::lemmas ["hahaha", "hopefully", "not", "a", "direct", "effect"]
(c41-2 / hope-01
       :ARG1 (c41-3 / affect-01
                    :ARG1-of (c41-1 / direct-02)
                    :polarity -)
       :mod (c41-0 / haha
                   :mode expressive))

# ::snt You are being adopted?
# ::tokens ["You", "are", "being", "adopted", "?"]
# ::lemmas ["you", "be", "be", "adopt", "?"]
(c42-2 / adopt-01
       :polarity (c42-1 / amr-unknown)
       :ARG1 (c42-0 / you))

# ::snt Or any of you
# ::tokens ["Or", "any", "of", "you"]
# ::lemmas ["or", "any", "of", "you"]
(c43-0 / or
       :op2 (c43-1 / you
                   :mod (c43-2 / any)))

# ::snt hey angelina . wish to meet you . i am in to software and business solutions whatsapp viber
# ::tokens ["hey", "angelina", ".", "wish", "to", "meet", "you", ".", "i", "am", "in", "to", "software", "and", "business", "solutions", "whatsapp", "viber"]
# ::lemmas ["hey", "angelina", ".", "wish", "to", "meet", "you", ".", "i", "be", "in", "to", "software", "and", "business", "solution", "whatsapp", "viber"]
(c44-2 / multi-sentence
       :snt1 (c44-4 / say-01
                    :ARG0 (c44-12 / i)
                    :ARG1 (c44-6 / hey)
                    :ARG2 (c44-7 / person
                                 :name (c44-3 / name
                                              :op1 "Angelina")))
       :snt2 (c44-10 / wish-01
                     :ARG0 c44-12
                     :ARG1 (c44-8 / meet-02
                                  :ARG0 c44-12
                                  :ARG1 c44-7))
       :snt3 (c44-5 / i
                    :part (c44-13 / and
                                  :op1 (c44-0 / software)
                                  :op2 (c44-14 / solution
                                               :mod (c44-1 / business))
                                  :mod (c44-11 / company
                                               :name (c44-9 / name
                                                            :op1 "Whapp"
                                                            :op2 "Viber")))))

# ::snt We have bigger worries like Trump possessing NUCLEAR CODES!!!RT : What's at stake in Angelina Jolie and Brad Pitt's divorce: $500M
# ::tokens ["We", "have", "bigger", "worries", "like", "Trump", "possessing", "NUCLEAR", "CODES!!!RT", ":", "What", "'s", "at", "stake", "in", "Angelina", "Jolie", "and", "Brad", "Pitt", "'s", "divorce", ":", "$", "500", "M"]
# ::lemmas ["we", "have", "big", "worry", "like", "Trump", "possess", "nuclear", "codes!!!rt", ":", "what", "be", "at", "stake", "in", "Angelina", "Jolie", "and", "Brad", "Pitt", "'s", "divorce", ":", "$", "500", "m"]
(c45-10 / multi-sentence
        :snt1 (c45-20 / worry-01
                      :ARG0 (c45-18 / possess-01
                                    :ARG0 (c45-11 / person
                                                  :name (c45-17 / name
                                                                :op1 "Trump"))
                                    :ARG1 (c45-13 / cod
                                                  :mod (c45-12 / narcotic)))
                      :ARG1 (c45-1 / we)
                      :ARG1-of (c45-5 / have-degree-91
                                      :ARG2 (c45-9 / big)
                                      :ARG3 (c45-6 / more)))
        :snt2 (c45-0 / say-01
                     :ARG0 (c45-3 / publication
                                  :name (c45-19 / name
                                                :op1 "RT"))
                     :ARG1 (c45-4 / stake-01
                                  :ARG1 (c45-16 / monetary-quantity
                                                :unit (c45-22 / dollar)
                                                :quant 500000000)
                                  :ARG2 (c45-14 / divorce-01
                                                :ARG0 (c45-8 / and
                                                             :op1 (c45-2 / person
                                                                         :name (c45-15 / name
                                                                                       :op1 "Angelina"
                                                                                       :op2 "Jolie"))
                                                             :op2 (c45-7 / person
                                                                         :name (c45-21 / name
                                                                                       :op1 "Brad"
                                                                                       :op2 "Pitt")))))))

# ::snt Jesus these people divorce for millions, I'm married thirty yrs to same man. Money is root to all evil.
# ::tokens ["Jesus", "these", "people", "divorce", "for", "millions", ",", "I", "'m", "married", "thirty", "yrs", "to", "same", "man", ".", "Money", "is", "root", "to", "all", "evil", "."]
# ::lemmas ["Jesus", "these", "people", "divorce", "for", "millions", ",", "i", "be", "married", "thirty", "yr", "to", "same", "man", ".", "money", "be", "root", "to", "all", "evil", "."]
(c46-1 / multi-sentence
       :snt1 (c46-12 / divorce-01
                     :ARG0 (c46-8 / person
                                  :mod (c46-11 / this)
                                  :ARG1-of c46-12)
                     :quant (c46-7 / multiple
                                   :op1 1000000)
                     :mod c46-8
                     :name (c46-2 / name
                                  :op1 "Jesus")
                     :mode expressive)
       :snt2 (c46-14 / marry-01
                     :ARG1 (c46-10 / i)
                     :ARG2 (c46-9 / man
                                  :ARG1-of (c46-3 / same-01))
                     :duration (c46-15 / temporal-quantity
                                       :unit (c46-0 / year)
                                       :quant 30))
       :snt3 (c46-4 / root-02
                    :ARG1 (c46-13 / money)
                    :ARG2 (c46-6 / evil
                                 :mod (c46-5 / all))))

# ::snt poor babies will be fine!
# ::tokens ["poor", "babies", "will", "be", "fine", "!"]
# ::lemmas ["poor", "baby", "will", "be", "fine", "!"]
(c47-0 / fine-04
       :ARG1 (c47-1 / baby
                    :mod (c47-2 / poor)))

# ::snt Too bad they couldn't figure things out before they got married.
# ::tokens ["Too", "bad", "they", "could", "n't", "figure", "things", "out", "before", "they", "got", "married", "."]
# ::lemmas ["too", "bad", "they", "could", "not", "figure", "thing", "out", "before", "they", "got", "marry", "."]
(c48-1 / bad-07
       :ARG1 (c48-4 / possible-01
                    :ARG1 (c48-0 / figure-out-05
                                 :ARG0 (c48-6 / they)
                                 :ARG1 (c48-8 / thing)
                                 :time (c48-3 / before
                                              :op1 (c48-2 / marry-01
                                                          :ARG1 c48-6)))
                    :polarity -)
       :ARG2-of (c48-5 / have-degree-91
                       :ARG1 c48-4
                       :ARG3 (c48-7 / too)))

# ::snt ON S'EN BAT LES COUILLES
# ::tokens ["ON", "S'EN", "BAT", "LES", "COUILLES"]
# ::lemmas ["ON", "s'en", "BAT", "LES", "COUILLES"]
(c49-0 / close-10
       :ARG1 (c49-2 / company
                    :name (c49-1 / name
                                 :op1 "Bon"
                                 :op2 "S'En"
                                 :op3 "Boulevard")))

# ::snt even if they do go to war, who ever loses will regain everything lost I mean they v money n all so I really don't care
# ::tokens ["even", "if", "they", "do", "go", "to", "war", ",", "who", "ever", "loses", "will", "regain", "everything", "lost", "I", "mean", "they", "v", "money", "n", "all", "so", "I", "really", "do", "n't", "care"]
# ::lemmas ["even", "if", "they", "do", "go", "to", "war", ",", "who", "ever", "lose", "will", "regain", "everything", "lose", "i", "mean", "they", "v", "money", "n", "all", "so", "i", "really", "do", "not", "care"]
(c50-5 / have-concession-91
       :ARG1 (c50-2 / regain-01
                    :ARG0 (c50-6 / person
                                 :ARG0-of (c50-7 / lose-02
                                                 :ARG1 (c50-4 / everything
                                                              :ARG1-of (c50-16 / lose-02)
                                                              :ARG1-of c50-2))))
       :ARG2 (c50-15 / even-if
                     :op1 (c50-14 / go-02
                                  :ARG0 (c50-13 / they)
                                  :ARG4 (c50-10 / war)))
       :ARG1-of (c50-0 / mean-01
                       :ARG0 (c50-12 / i)
                       :ARG2 (c50-3 / versus
                                    :op1 (c50-8 / money)
                                    :op2 (c50-9 / all)
                                    :ARG0-of (c50-11 / cause-01
                                                     :ARG1 (c50-17 / care-01
                                                                   :ARG0 c50-12
                                                                   :ARG1-of (c50-1 / real-04)
                                                                   :polarity -)))))
