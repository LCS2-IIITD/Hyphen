# ::snt obviously
# ::tokens ["obviously"]
# ::lemmas ["obviously"]
(c1-0 / obvious-01)

# ::snt I'm voting for NIALL HORAN at iHeartAwards
# ::tokens ["I", "'m", "voting", "for", "NIALL", "HORAN", "at", "iHeartAwards"]
# ::lemmas ["i", "be", "vote", "for", "NIALL", "HORAN", "at", "iheartawards"]
(c2-1 / vote-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-3 / person
                  :name (c2-0 / name
                              :op1 "NIALL"
                              :op2 "Horan"))
      :location (c2-5 / award
                      :name (c2-2 / name
                                  :op1 "iHeartAwards")))

# ::snt I'm voting for NIALL HORAN at iHeartAwards
# ::tokens ["I", "'m", "voting", "for", "NIALL", "HORAN", "at", "iHeartAwards"]
# ::lemmas ["i", "be", "vote", "for", "NIALL", "HORAN", "at", "iheartawards"]
(c3-1 / vote-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-3 / person
                  :name (c3-0 / name
                              :op1 "NIALL"
                              :op2 "Horan"))
      :location (c3-5 / award
                      :name (c3-2 / name
                                  :op1 "iHeartAwards")))

# ::snt I'm voting for LIAM PAYNE at iHeartAwards
# ::tokens ["I", "'m", "voting", "for", "LIAM", "PAYNE", "at", "iHeartAwards"]
# ::lemmas ["i", "be", "vote", "for", "LIAM", "PAYNE", "at", "iheartawards"]
(c4-1 / vote-01
      :ARG0 (c4-4 / i)
      :ARG1 (c4-3 / person
                  :name (c4-0 / name
                              :op1 "Laila"
                              :op2 "Payne"))
      :location (c4-5 / award
                      :name (c4-2 / name
                                  :op1 "iHeartAwards")))

# ::snt See
# ::tokens ["See"]
# ::lemmas ["see"]
(c5-0 / see-01)

# ::snt That's fake it was all made up. But anyways Liam. Always
# ::tokens ["That", "'s", "fake", "it", "was", "all", "made", "up", ".", "But", "anyways", "Liam", ".", "Always"]
# ::lemmas ["that", "be", "fake", "it", "be", "all", "make", "up", ".", "but", "anyways", "Liam", ".", "always"]
(c6-1 / multi-sentence
      :snt1 (c6-0 / fake-02
                  :ARG1 (c6-10 / that))
      :snt2 (c6-5 / make-up-10
                  :ARG1 (c6-9 / it)
                  :degree (c6-4 / all))
      :snt3 (c6-3 / say-01
                  :ARG1 (c6-7 / contrast-01
                              :ARG2 (c6-11 / anyways))
                  :ARG2 (c6-6 / person
                              :name (c6-2 / name
                                          :op1 "Liam"))
                  :time (c6-8 / always)))

# ::snt Payno of course
# ::tokens ["Payno", "of", "course"]
# ::lemmas ["Payno", "of", "course"]
(c7-1 / pay-01
      :mod (c7-0 / of-course))

# ::snt Really.. ha..?
# ::tokens ["Really", "..", "ha", "..", "?"]
# ::lemmas ["really", "..", "ha", "..", "?"]
(c12-0 / real-04
       :polarity (c12-1 / amr-unknown))

# ::snt Fuck off that's why he is biggest pop star in the world you loser is nothing compare to him
# ::tokens ["Fuck", "off", "that", "'s", "why", "he", "is", "biggest", "pop", "star", "in", "the", "world", "you", "loser", "is", "nothing", "compare", "to", "him"]
# ::lemmas ["fuck", "off", "that", "be", "why", "he", "be", "big", "pop", "star", "in", "the", "world", "you", "loser", "be", "nothing", "compare", "to", "he"]
(c13-6 / say-01
       :ARG0 (c13-13 / i)
       :ARG1 (c13-10 / cause-01
                     :ARG0 (c13-14 / that)
                     :ARG1 (c13-0 / star
                                  :mod (c13-8 / pop)
                                  :ARG1-of (c13-7 / have-degree-91
                                                  :ARG2 (c13-2 / big)
                                                  :ARG3 (c13-4 / most)
                                                  :ARG5 (c13-11 / world))
                                  :domain (c13-12 / he)))
       :ARG2 (c13-3 / you
                    :ARG0-of (c13-9 / lose-03))
       :concession (c13-15 / compare-01
                           :ARG1 (c13-5 / nothing)
                           :ARG2 c13-12
                           :polarity -)
       :mod (c13-1 / fuck-off-03))

# ::snt Liam obviously
# ::tokens ["Liam", "obviously"]
# ::lemmas ["Liam", "obviously"]
(c14-0 / obvious-01
       :ARG1 (c14-2 / person
                    :name (c14-1 / name
                                 :op1 "Liam")))

# ::snt LIAM.. IT WOULD HAVE BEEN ALL AUTO-TUNE IF JB DID IT..
# ::tokens ["LIAM", "..", "IT", "WOULD", "HAVE", "BEEN", "ALL", "AUTO", "-", "TUNE", "IF", "JB", "DID", "IT", ".."]
# ::lemmas ["LIAM", "..", "it", "would", "have", "be", "all", "auto", "-", "tune", "if", "JB", "do", "it", ".."]
(c15-2 / have-condition-91
       :ARG1 (c15-1 / auto-tune
                    :domain (c15-6 / it)
                    :mod (c15-5 / all))
       :ARG2 (c15-7 / do-02
                    :ARG0 (c15-3 / person
                                 :name (c15-0 / name
                                              :op1 "JB"))
                    :ARG1 c15-6)
       :ARG1-of (c15-4 / true-01))
