# ::snt I humdinger.
# ::tokens ["I", "humdinger", "."]
# ::lemmas ["i", "humdinger", "."]
(c1-0 / humdinger
      :domain (c1-1 / i))

# ::snt Ha, when youre that tall I guess nobody tries to fight you.
# ::tokens ["Ha", ",", "when", "you", "re", "that", "tall", "I", "guess", "nobody", "tries", "to", "fight", "you", "."]
# ::lemmas ["ha", ",", "when", "you", "re", "that", "tall", "i", "guess", "nobody", "try", "to", "fight", "you", "."]
(c2-6 / guess-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-5 / try-01
                  :ARG0 (c2-2 / nobody)
                  :ARG1 (c2-0 / fight-01
                              :ARG0 c2-2
                              :ARG1 (c2-1 / you))
                  :condition (c2-8 / tall
                                   :domain c2-1
                                   :degree (c2-7 / that)))
      :mod (c2-3 / ha
                 :mode expressive))

# ::snt Whats Trump like? Uh, hes an asshole.
# ::tokens ["What", "s", "Trump", "like", "?", "Uh", ",", "he", "s", "an", "asshole", "."]
# ::lemmas ["what", "s", "Trump", "like", "?", "uh", ",", "he", "s", "an", "asshole", "."]
(c3-1 / multi-sentence
      :snt1 (c3-4 / like-01
                  :ARG0 (c3-3 / person
                              :name (c3-0 / name
                                          :op1 "Trump"))
                  :ARG1 (c3-6 / amr-unknown))
      :snt2 (c3-5 / asshole
                  :domain (c3-2 / he)
                  :mod (c3-7 / uh
                             :mode expressive)))

# ::snt Great now I'm comparing it to Black Panther.
# ::tokens ["Great", "now", "I", "'m", "comparing", "it", "to", "Black", "Panther", "."]
# ::lemmas ["great", "now", "i", "be", "compare", "it", "to", "Black", "Panther", "."]
(c4-4 / compare-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-2 / it)
      :ARG2 (c4-0 / organization
                  :name (c4-1 / name
                              :op1 "Black"
                              :op2 "Panther"))
      :time (c4-3 / now)
      :mod (c4-6 / great))

# ::snt nice.
# ::tokens ["nice", "."]
# ::lemmas ["nice", "."]
(c6-0 / nice-01)

# ::snt When the president stops spouting fake news only then will he realize he's been standing on the edge alone.
# ::tokens ["When", "the", "president", "stops", "spouting", "fake", "news", "only", "then", "will", "he", "realize", "he", "'s", "been", "standing", "on", "the", "edge", "alone", "."]
# ::lemmas ["when", "the", "president", "stop", "spout", "fake", "news", "only", "then", "will", "he", "realize", "he", "be", "be", "stand", "on", "the", "edge", "alone", "."]
(c7-6 / realize-01
      :ARG0 (c7-9 / person
                  :ARG0-of (c7-8 / have-org-role-91
                                 :ARG2 (c7-4 / president)))
      :ARG1 (c7-5 / stand-01
                  :ARG1 c7-9
                  :ARG2 (c7-7 / edge)
                  :mod (c7-10 / alone))
      :time (c7-0 / stop-01
                  :ARG0 c7-9
                  :ARG1 (c7-11 / spout-01
                               :ARG0 c7-9
                               :ARG1 (c7-3 / news
                                           :ARG1-of (c7-1 / fake-02)))
                  :mod (c7-2 / only)))

# ::snt And on behalf of television viewers everywhere...Thank you, !
# ::tokens ["And", "on", "behalf", "of", "television", "viewers", "everywhere", "...", "Thank", "you", ",", "!"]
# ::lemmas ["and", "on", "behalf", "of", "television", "viewer", "everywhere", "...", "thank", "you", ",", "!"]
(c8-0 / and
      :op2 (c8-4 / thank-01
                 :ARG1 (c8-3 / person
                             :ARG0-of (c8-1 / view-01
                                            :ARG1 (c8-5 / television))
                             :location (c8-2 / everywhere))
                 :mode expressive))

# ::snt He IS "The weakest Link"
# ::tokens ["He", "IS", "\"", "The", "weakest", "Link", "\""]
# ::lemmas ["he", "be", "\"", "the", "weak", "link", "\""]
(c9-2 / link
      :domain (c9-1 / he)
      :ARG1-of (c9-4 / have-degree-91
                     :ARG2 (c9-3 / weak-02
                                 :ARG1 c9-2)
                     :ARG3 (c9-0 / most)))

# ::snt because it would upset President Trump who always felt the Academy snubbed him.
# ::tokens ["because", "it", "would", "upset", "President", "Trump", "who", "always", "felt", "the", "Academy", "snubbed", "him", "."]
# ::lemmas ["because", "it", "would", "upset", "President", "Trump", "who", "always", "feel", "the", "Academy", "snub", "he", "."]
(c10-8 / cause-01
       :ARG0 (c10-11 / upset-01
                     :ARG0 (c10-9 / it)
                     :ARG1 (c10-6 / person
                                  :name (c10-2 / name
                                               :op1 "Trump")
                                  :ARG0-of (c10-5 / have-org-role-91
                                                  :ARG2 (c10-3 / president))
                                  :ARG0-of (c10-0 / feel-02
                                                  :ARG1 (c10-4 / snub-01
                                                               :ARG0 (c10-1 / organization
                                                                            :name (c10-7 / name
                                                                                         :op1 "Academy"))
                                                               :ARG1 c10-6)
                                                  :time (c10-10 / always)))))

# ::snt As I tapped that up I thought I should google that but then it was the vibe you know, Marbo
# ::tokens ["As", "I", "tapped", "that", "up", "I", "thought", "I", "should", "google", "that", "but", "then", "it", "was", "the", "vibe", "you", "know", ",", "Marbo"]
# ::lemmas ["as", "i", "tap", "that", "up", "i", "think", "i", "should", "google", "that", "but", "then", "it", "be", "the", "vibe", "you", "know", ",", "Marbo"]
(c11-1 / say-01
       :ARG0 (c11-7 / i)
       :ARG1 (c11-6 / contrast-01
                    :ARG1 (c11-8 / think-01
                                 :ARG0 c11-7
                                 :ARG1 (c11-2 / recommend-01
                                              :ARG1 (c11-9 / google-01
                                                           :ARG0 c11-7
                                                           :ARG1 (c11-11 / that))))
                    :ARG2 (c11-3 / vibe
                                 :domain c11-11
                                 :ARG1-of (c11-4 / know-01
                                                 :ARG0 (c11-5 / person
                                                              :name (c11-0 / name
                                                                           :op1 "Marbo")))
                                 :time (c11-10 / then)))
       :ARG2 c11-5)

# ::snt Also, horse a senator is Caligula who was only the third emperor, and it was a consul, and he only thteatened to do it. We should see plenty more at this rate though. Caligula only used the army to pick up shells at the beach and stage mock battles
# ::tokens ["Also", ",", "horse", "a", "senator", "is", "Caligula", "who", "was", "only", "the", "third", "emperor", ",", "and", "it", "was", "a", "consul", ",", "and", "he", "only", "thteatened", "to", "do", "it", ".", "We", "should", "see", "plenty", "more", "at", "this", "rate", "though", ".", "Caligula", "only", "used", "the", "army", "to", "pick", "up", "shells", "at", "the", "beach", "and", "stage", "mock", "battles"]
# ::lemmas ["also", ",", "horse", "a", "senator", "be", "Caligula", "who", "be", "only", "the", "third", "emperor", ",", "and", "it", "be", "a", "consul", ",", "and", "he", "only", "thteatene", "to", "do", "it", ".", "we", "should", "see", "plenty", "more", "at", "this", "rate", "though", ".", "Caligula", "only", "use", "the", "army", "to", "pick", "up", "shell", "at", "the", "beach", "and", "stage", "mock", "battle"]
(c12-17 / multi-sentence
        :snt1 (c12-13 / and
                      :op1 (c12-9 / have-org-role-91
                                  :ARG0 (c12-29 / person
                                                :name (c12-25 / name
                                                              :op1 "Caligula"))
                                  :ARG2 (c12-0 / senator)
                                  :mod (c12-12 / also))
                      :op2 (c12-32 / have-org-role-91
                                   :ARG0 c12-29
                                   :ARG2 (c12-28 / emperor
                                                 :ord (c12-6 / ordinal-entity
                                                             :value 3)
                                                 :mod (c12-15 / only)))
                      :op3 (c12-21 / consul
                                   :domain c12-29)
                      :op4 (c12-20 / need-01
                                   :ARG0 c12-29
                                   :ARG1 (c12-34 / do-02
                                                 :ARG0 c12-29
                                                 :ARG1 (c12-33 / it))
                                   :mod (c12-35 / only))
                      :op5 (c12-27 / recommend-01
                                   :ARG1 (c12-7 / see-01
                                                :ARG0 (c12-31 / we)
                                                :ARG1 (c12-10 / more
                                                              :quant (c12-18 / plenty))
                                                :time (c12-4 / rate
                                                             :mod (c12-14 / this)))))
        :snt2 (c12-8 / have-concession-91
                     :ARG1 (c12-23 / use-01
                                   :ARG0 (c12-3 / person
                                                :name (c12-30 / name
                                                              :op1 "Caligula"))
                                   :ARG1 (c12-11 / army)
                                   :ARG2 (c12-19 / and
                                                 :op1 (c12-2 / pick-up-04
                                                             :ARG0 c12-3
                                                             :ARG1 (c12-5 / shell)
                                                             :location (c12-16 / beach))
                                                 :op2 (c12-26 / stage-01
                                                              :ARG0 c12-3
                                                              :ARG1 (c12-1 / battle-01
                                                                           :mod (c12-24 / mock))))
                                   :mod (c12-22 / only))))

# ::snt The Romans didn't have nuclear weapons. This is new ground.
# ::tokens ["The", "Romans", "did", "n't", "have", "nuclear", "weapons", ".", "This", "is", "new", "ground", "."]
# ::lemmas ["the", "Romans", "do", "not", "have", "nuclear", "weapon", ".", "this", "be", "new", "ground", "."]
(c13-1 / multi-sentence
       :snt1 (c13-2 / have-03
                    :ARG0 (c13-3 / person
                                 :mod (c13-6 / country
                                             :name (c13-0 / name
                                                          :op1 "Rome")))
                    :ARG1 (c13-7 / weapon
                                 :mod (c13-4 / nucleus))
                    :polarity -)
       :snt2 (c13-9 / ground
                    :ARG1-of (c13-5 / new-01)
                    :domain (c13-8 / this)))

# ::snt I'm not sure which of you should be more embarrassed
# ::tokens ["I", "'m", "not", "sure", "which", "of", "you", "should", "be", "more", "embarrassed"]
# ::lemmas ["i", "be", "not", "sure", "which", "of", "you", "should", "be", "more", "embarrassed"]
(c15-2 / sure-02
       :ARG0 (c15-8 / i)
       :ARG1 (c15-4 / recommend-01
                    :ARG1 (c15-5 / embarrass-01
                                 :ARG0 (c15-7 / person
                                              :ARG1-of (c15-3 / include-91
                                                              :ARG2 (c15-0 / you)))
                                 :ARG2-of (c15-6 / have-degree-91
                                                 :ARG1 c15-7
                                                 :ARG3 (c15-1 / more))))
       :polarity -)

# ::snt Did he let you smell his fingers Piers?
# ::tokens ["Did", "he", "let", "you", "smell", "his", "fingers", "Piers", "?"]
# ::lemmas ["do", "he", "let", "you", "smell", "his", "finger", "pier", "?"]
(c16-3 / say-01
       :ARG0 (c16-7 / i)
       :ARG1 (c16-5 / let-01
                    :ARG0 (c16-4 / he)
                    :ARG1 (c16-0 / smell-01
                                 :ARG0 (c16-6 / person
                                              :name (c16-2 / name
                                                           :op1 "Piers")
                                              :part (c16-1 / finger
                                                           :ARG1-of c16-0)))
                    :polarity (c16-8 / amr-unknown))
       :ARG2 c16-6)

# ::snt Yes you just to that Piers no use on changing good habits xx
# ::tokens ["Yes", "you", "just", "to", "that", "Piers", "no", "use", "on", "changing", "good", "habits", "xx"]
# ::lemmas ["yes", "you", "just", "to", "that", "pier", "no", "use", "on", "change", "good", "habit", "xx"]
(c17-1 / say-01
       :ARG0 (c17-6 / i)
       :ARG1 (c17-8 / use-01
                    :ARG0 (c17-3 / person
                                 :name (c17-0 / name
                                              :op1 "Piers"))
                    :ARG1 (c17-4 / change-01
                                 :ARG1 (c17-2 / habit
                                              :ARG1-of (c17-7 / good-02)))
                    :mod (c17-5 / just)
                    :polarity -)
       :ARG2 c17-3)

# ::snt Ha! Never change Piers Morgan!!
# ::tokens ["Ha", "!", "Never", "change", "Piers", "Morgan", "!", "!"]
# ::lemmas ["ha", "!", "never", "change", "Piers", "Morgan", "!", "!"]
(c18-5 / change-01
       :ARG0 (c18-0 / you)
       :ARG1 (c18-4 / person
                    :name (c18-1 / name
                                 :op1 "Piers"
                                 :op2 "Morgan"))
       :time (c18-2 / ever)
       :mod (c18-3 / ha
                   :mode expressive)
       :polarity -
       :mode imperative)

# ::snt Woah. He is actually taller than you,Piers.
# ::tokens ["Woah", ".", "He", "is", "actually", "taller", "than", "you", ",", "Piers", "."]
# ::lemmas ["Woah", ".", "he", "be", "actually", "tall", "than", "you", ",", "Piers", "."]
(c19-3 / say-01
       :ARG0 (c19-9 / i)
       :ARG1 (c19-10 / tall
                     :ARG2-of (c19-5 / have-degree-91
                                     :ARG1 (c19-8 / he)
                                     :ARG3 (c19-1 / more)
                                     :ARG4 (c19-0 / you))
                     :ARG1-of (c19-4 / actual-02))
       :ARG2 (c19-6 / person
                    :name (c19-2 / name
                                 :op1 "Piers"))
       :mod (c19-7 / Woah
                   :mode expressive))

# ::snt sounds prefect
# ::tokens ["sounds", "prefect"]
# ::lemmas ["sound", "prefect"]
(c20-1 / sound-01
       :ARG1 (c20-0 / perfect-02))

# ::snt We wouldn't want u any other way Piers....HAPPY NEW YEAR! xx
# ::tokens ["We", "would", "n't", "want", "u", "any", "other", "way", "Piers", "....", "HAPPY", "NEW", "YEAR", "!", "xx"]
# ::lemmas ["we", "would", "not", "want", "u", "any", "other", "way", "Piers", "....", "HAPPY", "NEW", "YEAR", "!", "xx"]
(c21-3 / say-01
       :ARG0 (c21-8 / we)
       :ARG1 (c21-7 / want-01
                    :ARG0 c21-8
                    :ARG1 (c21-11 / way
                                  :mod (c21-10 / any)
                                  :mod (c21-0 / other))
                    :ARG2 (c21-5 / person
                                 :name (c21-2 / name
                                              :op1 "Piers"))
                    :ARG1-of (c21-9 / cause-01
                                    :ARG0 (c21-4 / happy-01
                                                 :ARG1 (c21-1 / year
                                                              :mod (c21-6 / new))
                                                 :mode expressive))
                    :polarity -)
       :ARG2 c21-5)

# ::snt Damn he's got a big ol head!
# ::tokens ["Damn", "he", "'s", "got", "a", "big", "ol", "head", "!"]
# ::lemmas ["damn", "he", "be", "get", "a", "big", "ol", "head", "!"]
(c22-3 / have-03
       :ARG0 (c22-4 / he)
       :ARG1 (c22-2 / head
                    :mod (c22-1 / big)
                    :mod (c22-0 / old))
       :mod (c22-5 / damn
                   :mode expressive)
       :mode expressive)

# ::snt Sorry Piers, I simply can't carry on following you if you're gonna be boring and conventional............ HAHA..AS IF !!! Happy New Year mate and many more of 'em!
# ::tokens ["Sorry", "Piers", ",", "I", "simply", "ca", "n't", "carry", "on", "following", "you", "if", "you", "'re", "gon", "na", "be", "boring", "and", "conventional", "............", "HAHA", "..", "AS", "IF", "!", "!", "!", "Happy", "New", "Year", "mate", "and", "many", "more", "of", "'em", "!"]
# ::lemmas ["Sorry", "Piers", ",", "i", "simply", "can", "not", "carry", "on", "follow", "you", "if", "you", "be", "going", "to", "be", "boring", "and", "conventional", "............", "HAHA", "..", "as", "if", "!", "!", "!", "Happy", "New", "Year", "mate", "and", "many", "more", "of", "'em", "!"]
(c23-14 / multi-sentence
        :snt1 (c23-0 / say-01
                     :ARG1 (c23-4 / sorry-01
                                  :ARG1 (c23-24 / i)
                                  :ARG2 (c23-21 / possible-01
                                                :ARG1 (c23-17 / carry-on-02
                                                              :ARG0 c23-24
                                                              :ARG1 (c23-19 / follow-02
                                                                            :ARG0 c23-24
                                                                            :ARG1 (c23-15 / person
                                                                                          :name (c23-20 / name
                                                                                                        :op1 "Piers"))))
                                                :ARG1-of (c23-3 / simple-02)
                                                :condition (c23-11 / and
                                                                   :op1 (c23-13 / bore-02
                                                                                :ARG0 c23-15)
                                                                   :op2 (c23-12 / conventional
                                                                                :domain c23-15))
                                                :polarity -)
                                  :ARG2 c23-15)
                     :ARG2 c23-15)
        :snt2 (c23-7 / hah
                     :mode expressive)
        :snt3 (c23-10 / as-if)
        :snt4 (c23-23 / happy-01
                      :ARG1 (c23-9 / and
                                   :op1 (c23-2 / person
                                               :ARG0-of (c23-6 / have-rel-role-91
                                                               :ARG2 (c23-8 / mate))
                                               :mod (c23-22 / festival
                                                            :name c23-20
                                                            :op1 "New"
                                                            :op2 "Year")))
                      :op2 (c23-1 / person
                                  :quant (c23-18 / more
                                                 :quant (c23-16 / many))
                                  :ARG1-of (c23-5 / include-91
                                                  :ARG2 c23-15))
                      :mode expressive))

# ::snt The man with no brain
# ::tokens ["The", "man", "with", "no", "brain"]
# ::lemmas ["the", "man", "with", "no", "brain"]
(c24-2 / man
       :ARG0-of (c24-1 / have-03
                       :ARG1 (c24-0 / brain)
                       :polarity -))

# ::snt ...and arsenal will finish th
# ::tokens ["...", "and", "arsenal", "will", "finish", "th"]
# ::lemmas ["...", "and", "arsenal", "will", "finish", "th"]
(c25-2 / and
       :op2 (c25-0 / finish-01
                   :ARG0 (c25-1 / arsenal)))

# ::snt Happy
# ::tokens ["Happy"]
# ::lemmas ["happy"]
(c27-0 / happy-01)

# ::snt Haha, I am so like you, I said exactly the same, why make new resolutions, you cant improve greatness so I endeavour to remain the same.
# ::tokens ["Haha", ",", "I", "am", "so", "like", "you", ",", "I", "said", "exactly", "the", "same", ",", "why", "make", "new", "resolutions", ",", "you", "ca", "nt", "improve", "greatness", "so", "I", "endeavour", "to", "remain", "the", "same", "."]
# ::lemmas ["Haha", ",", "i", "be", "so", "like", "you", ",", "i", "say", "exactly", "the", "same", ",", "why", "make", "new", "resolution", ",", "you", "can", "not", "improve", "greatness", "so", "i", "endeavour", "to", "remain", "the", "same", "."]
(c28-8 / and
       :op1 (c28-17 / resemble-01
                    :ARG1 (c28-20 / i)
                    :ARG2 (c28-4 / you)
                    :degree (c28-0 / so))
       :op2 (c28-3 / say-01
                   :ARG0 c28-20
                   :ARG1 (c28-2 / same-01
                                :ARG1 c28-20
                                :mod (c28-18 / exact)))
       :op3 (c28-14 / cause-01
                    :ARG0 (c28-7 / amr-unknown)
                    :ARG1 (c28-12 / make-01
                                  :ARG0 c28-4
                                  :ARG1 (c28-1 / resolution
                                               :ARG1-of (c28-15 / new-01))))
       :op4 (c28-11 / cause-01
                    :ARG0 (c28-19 / possible-01
                                  :ARG1 (c28-5 / improve-01
                                               :ARG0 c28-4
                                               :ARG1 (c28-9 / great))
                                  :polarity -)
                    :ARG1 (c28-10 / endeavor-01
                                  :ARG0 c28-20
                                  :ARG1 (c28-13 / remain-01
                                                :ARG1 c28-20
                                                :ARG3 (c28-16 / same-01
                                                              :ARG1 c28-20
                                                              :ARG2 c28-4))))
       :mod (c28-6 / haha
                   :mode expressive))

# ::snt Omg
# ::tokens ["Omg"]
# ::lemmas ["Omg"]
(c29-0 / oh-my-god
       :mode expressive)

# ::snt I'm sure will be pleased to hear that, NOT!!
# ::tokens ["I", "'m", "sure", "will", "be", "pleased", "to", "hear", "that", ",", "NOT", "!", "!"]
# ::lemmas ["i", "be", "sure", "will", "be", "pleased", "to", "hear", "that", ",", "not", "!", "!"]
(c30-2 / please-01
       :ARG0 (c30-1 / hear-01
                    :ARG0 (c30-5 / i)
                    :ARG1 (c30-6 / that))
       :ARG1 c30-5
       :ARG1-of (c30-0 / sure-02)
       :ARG1-of (c30-3 / contrast-01
                       :ARG2 (c30-4 / have-polarity-91
                                    :ARG2 -)))

# ::snt And we wouldnt have you any other way...I guess. LOL!! A kinder, more gentle Piers would be...weird. Hope your is great!!
# ::tokens ["And", "we", "would", "nt", "have", "you", "any", "other", "way", "...", "I", "guess", ".", "LOL", "!", "!", "A", "kinder", ",", "more", "gentle", "Piers", "would", "be", "...", "weird", ".", "Hope", "your", "is", "great", "!", "!"]
# ::lemmas ["and", "we", "would", "not", "have", "you", "any", "other", "way", "...", "i", "guess", ".", "lol", "!", "!", "a", "kind", ",", "more", "gentle", "pier", "would", "be", "...", "weird", ".", "hope", "your", "be", "great", "!", "!"]
(c31-13 / multi-sentence
        :snt1 (c31-10 / and
                      :op2 (c31-11 / guess-01
                                   :ARG0 (c31-19 / i)
                                   :ARG1 (c31-6 / have-03
                                                :ARG0 (c31-17 / we)
                                                :ARG1 (c31-3 / you)
                                                :manner (c31-0 / way
                                                               :mod (c31-9 / any)
                                                               :mod (c31-2 / other))
                                                :polarity -)))
        :snt2 (c31-14 / weird
                      :domain (c31-16 / person
                                      :name (c31-15 / name
                                                    :op1 "Piers")
                                      :ARG1-of (c31-7 / kind-01
                                                      :ARG2-of (c31-18 / have-degree-91
                                                                       :ARG1 c31-16
                                                                       :ARG3 (c31-8 / more)))))
        :snt3 (c31-5 / hope-01
                     :ARG0 (c31-4 / i)
                     :ARG1 (c31-1 / great
                                  :domain (c31-12 / you))))

# ::snt lllllllllaaaaaaammmmmmeeeeeeee
# ::tokens ["lllllllllaaaaaaammmmmmeeeeeeee"]
# ::lemmas ["lllllllllaaaaaaammmmmmeeeeeeee"]
(c32-0 / be-located-at-91
       :ARG2 (c32-1 / here))

# ::snt loving the banter from this. Don't change.
# ::tokens ["loving", "the", "banter", "from", "this", ".", "Do", "n't", "change", "."]
# ::lemmas ["love", "the", "banter", "from", "this", ".", "do", "not", "change", "."]
(c34-2 / multi-sentence
       :snt1 (c34-3 / love-01
                    :ARG1 (c34-0 / banter-01
                                 :source (c34-5 / this)))
       :snt2 (c34-4 / change-01
                    :ARG0 (c34-1 / you)
                    :polarity -
                    :mode imperative))

# ::snt I'd rather be friends with Kim Jong Un that you two numpties and
# ::tokens ["I", "'d", "rather", "be", "friends", "with", "Kim", "Jong", "Un", "that", "you", "two", "numpties", "and"]
# ::lemmas ["i", "would", "rather", "be", "friend", "with", "Kim", "Jong", "Un", "that", "you", "two", "numptie", "and"]
(c35-4 / prefer-01
       :ARG0 (c35-7 / i)
       :ARG1 (c35-3 / have-rel-role-91
                    :ARG0 c35-7
                    :ARG1 (c35-2 / person
                                 :name (c35-1 / name
                                              :op1 "Kim"
                                              :op2 "Jong"
                                              :op3 "Un"))
                    :ARG2 (c35-0 / friend))
       :ARG2 (c35-6 / have-rel-role-91
                    :ARG0 c35-7
                    :ARG1 c35-2
                    :ARG2 (c35-5 / numptie
                                 :quant 2)))

# ::snt Happy birthday and have a great Easter break.
# ::tokens ["Happy", "birthday", "and", "have", "a", "great", "Easter", "break", "."]
# ::lemmas ["happy", "birthday", "and", "have", "a", "great", "Easter", "break", "."]
(c36-6 / and
       :op1 (c36-4 / happy-01
                   :ARG1 (c36-1 / birthday))
       :op2 (c36-5 / break-19
                   :ARG0 (c36-2 / you)
                   :ARG1 (c36-0 / festival
                                :name (c36-3 / name
                                             :op1 "Easter"))
                   :mod (c36-7 / great)
                   :mode imperative))

# ::snt The words clouding judgement come to mind when I look at this pic Piers. Cmon surely youre better than that
# ::tokens ["The", "words", "clouding", "judgement", "come", "to", "mind", "when", "I", "look", "at", "this", "pic", "Piers", ".", "Cmon", "surely", "you", "re", "better", "than", "that"]
# ::lemmas ["the", "word", "cloud", "judgement", "come", "to", "mind", "when", "i", "look", "at", "this", "pic", "Piers", ".", "Cmon", "surely", "you", "re", "well", "than", "that"]
(c37-1 / multi-sentence
       :snt1 (c37-9 / come-to-mind-09
                    :ARG0 (c37-12 / i)
                    :ARG2 (c37-10 / word
                                  :ARG0-of (c37-17 / cloud-01
                                                   :ARG1 (c37-11 / judge-01)))
                    :time (c37-6 / look-01
                                 :ARG0 c37-12
                                 :ARG1 (c37-7 / pic
                                              :mod (c37-13 / this)
                                              :topic (c37-2 / person
                                                            :name (c37-3 / name
                                                                         :op1 "Piers")))))
       :snt2 (c37-16 / possible-01
                     :ARG1 (c37-5 / have-degree-91
                                  :ARG1 (c37-0 / you)
                                  :ARG2 (c37-14 / good-03
                                                :ARG1 c37-0)
                                  :ARG3 (c37-8 / more)
                                  :ARG4 (c37-15 / that))
                     :ARG1-of (c37-4 / sure-02)))

# ::snt Your name dropping cock sucking needs work Piers...just saying..
# ::tokens ["Your", "name", "dropping", "cock", "sucking", "needs", "work", "Piers", "...", "just", "saying", ".."]
# ::lemmas ["your", "name", "drop", "cock", "sucking", "need", "work", "pier", "...", "just", "say", ".."]
(c38-2 / say-01
       :ARG0 (c38-9 / i)
       :ARG1 (c38-1 / need-01
                    :ARG0 (c38-4 / person
                                 :name (c38-3 / name
                                              :op1 "Piers")
                                 :ARG0-of (c38-11 / drop-05
                                                  :ARG1 (c38-10 / thing
                                                                :ARG2-of (c38-5 / name-01))))
                    :ARG1 (c38-6 / work-01
                                 :ARG1 (c38-0 / suck-01
                                              :ARG0 c38-4
                                              :ARG1 (c38-7 / cock))))
       :ARG2 c38-4
       :mod (c38-8 / just))

# ::snt Ffs, would you just make your mind up about which side of the fence you're on? He's a moron, you know he is, and yet you're still sucking up? TWAT.
# ::tokens ["Ffs", ",", "would", "you", "just", "make", "your", "mind", "up", "about", "which", "side", "of", "the", "fence", "you", "'re", "on", "?", "He", "'s", "a", "moron", ",", "you", "know", "he", "is", ",", "and", "yet", "you", "'re", "still", "sucking", "up", "?", "TWAT", "."]
# ::lemmas ["Ffs", ",", "would", "you", "just", "make", "your", "mind", "up", "about", "which", "side", "of", "the", "fence", "you", "be", "on", "?", "he", "be", "a", "moron", ",", "you", "know", "he", "be", ",", "and", "yet", "you", "be", "still", "suck", "up", "?", "TWAT", "."]
(c39-3 / multi-sentence
       :snt1 (c39-5 / make-up-mind-12
                    :ARG0 (c39-2 / you)
                    :ARG2 (c39-4 / side
                                 :part-of (c39-0 / fence
                                                 :location-of (c39-10 / amr-unknown)
                                                 :poss c39-2))
                    :polarity c39-10)
       :mod (c39-8 / just)
       :snt2 (c39-9 / and
                    :op1 (c39-13 / moron
                                 :domain (c39-6 / he)
                                 :ARG1-of (c39-7 / know-01
                                                 :ARG0 (c39-11 / you)))
                    :op2 (c39-1 / suck-up-04
                                :ARG0 c39-11
                                :mod (c39-14 / still))
                    :concession c39-13)
       :snt3 (c39-12 / TWAT))

# ::snt You missed out clown
# ::tokens ["You", "missed", "out", "clown"]
# ::lemmas ["you", "miss", "out", "clown"]
(c40-2 / miss-out-03
       :ARG0 (c40-1 / you)
       :ARG1 (c40-0 / clown))

# ::snt Fuck me! Pair of ugly creatures. Im printing that out to keep the cats off the rhubarb.
# ::tokens ["Fuck", "me", "!", "Pair", "of", "ugly", "creatures", ".", "I", "m", "printing", "that", "out", "to", "keep", "the", "cats", "off", "the", "rhubarb", "."]
# ::lemmas ["fuck", "i", "!", "pair", "of", "ugly", "creature", ".", "i", "m", "print", "that", "out", "to", "keep", "the", "cat", "off", "the", "rhubarb", "."]
(c41-2 / multi-sentence
       :snt1 (c41-0 / fuck-01
                    :ARG1 (c41-9 / i)
                    :mode expressive)
       :snt2 (c41-6 / pair-01
                    :ARG1 (c41-8 / creature
                                 :mod (c41-11 / ugly)))
       :snt3 (c41-3 / print-out-02
                    :ARG0 (c41-4 / i)
                    :ARG1 (c41-10 / that)
                    :purpose (c41-7 / keep-04
                                    :ARG0 c41-4
                                    :ARG1 (c41-12 / cat)
                                    :ARG2 (c41-1 / off
                                                 :op1 (c41-5 / arb)))))

# ::snt Good to hear Piers. I think youre great! You say what everyone thinks but doesnt have the balls to say!
# ::tokens ["Good", "to", "hear", "Piers", ".", "I", "think", "you", "re", "great", "!", "You", "say", "what", "everyone", "thinks", "but", "does", "nt", "have", "the", "balls", "to", "say", "!"]
# ::lemmas ["good", "to", "hear", "Piers", ".", "i", "think", "you", "re", "great", "!", "you", "say", "what", "everyone", "think", "but", "do", "not", "have", "the", "ball", "to", "say", "!"]
(c42-3 / multi-sentence
       :snt1 (c42-5 / say-01
                    :ARG1 (c42-13 / good-02
                                  :ARG1 (c42-7 / hear-01
                                               :ARG0 (c42-11 / i)
                                               :ARG2 (c42-8 / person
                                                            :name (c42-4 / name
                                                                         :op1 "Piers"))))
                    :snt2 (c42-12 / think-01
                                  :ARG0 c42-11
                                  :ARG1 (c42-14 / great
                                                :domain c42-8))
                    :snt3 (c42-9 / contrast-01
                                 :ARG1 (c42-0 / say-01
                                              :ARG0 (c42-2 / you)
                                              :ARG1 (c42-16 / thing
                                                            :ARG1-of (c42-15 / think-01
                                                                             :ARG0 (c42-6 / everyone))))
                                 :ARG2 (c42-10 / have-03
                                               :ARG0 c42-2
                                               :ARG1 (c42-1 / ball
                                                            :ARG1-of (c42-17 / say-01
                                                                             :ARG0 c42-2))
                                               :polarity -))))

# ::snt If. Pp6y
# ::tokens ["If", ".", "Pp6y"]
# ::lemmas ["if", ".", "Pp6y"]
(c43-0 / have-condition-91)

# ::snt Please explain exactly why you think Donal Trump is a knob.
# ::tokens ["Please", "explain", "exactly", "why", "you", "think", "Donal", "Trump", "is", "a", "knob", "."]
# ::lemmas ["please", "explain", "exactly", "why", "you", "think", "Donal", "Trump", "be", "a", "knob", "."]
(c44-2 / explain-01
       :ARG0 (c44-0 / you)
       :ARG1 (c44-6 / thing
                    :ARG0-of (c44-5 / cause-01
                                    :ARG1 (c44-7 / think-01
                                                 :ARG0 c44-0
                                                 :ARG1 (c44-3 / knob
                                                              :domain (c44-4 / person
                                                                             :name (c44-1 / name
                                                                                          :op1 "Donal"
                                                                                          :op2 "Trump")))))
                    :mod (c44-8 / exact))
       :mode imperative
       :polite +)

# ::snt Wouldnt have you any other way xx
# ::tokens ["Would", "nt", "have", "you", "any", "other", "way", "xx"]
# ::lemmas ["would", "not", "have", "you", "any", "other", "way", "xx"]
(c46-2 / have-03
       :ARG0 (c46-4 / i)
       :ARG1 (c46-3 / way
                    :mod (c46-0 / other)
                    :mod (c46-5 / any))
       :beneficiary (c46-1 / you)
       :polarity -)

# ::snt I cant wait to hear your views ! Happy New Year!
# ::tokens ["I", "ca", "nt", "wait", "to", "hear", "your", "views", "!", "Happy", "New", "Year", "!"]
# ::lemmas ["i", "can", "not", "wait", "to", "hear", "your", "view", "!", "Happy", "New", "Year", "!"]
(c47-2 / multi-sentence
       :snt1 (c47-6 / possible-01
                    :ARG1 (c47-7 / wait-01
                                 :ARG1 (c47-9 / i)
                                 :ARG2 (c47-5 / hear-01
                                              :ARG0 c47-9
                                              :ARG1 (c47-4 / view-02
                                                           :ARG0 (c47-1 / you))))
                    :polarity -)
       :snt2 (c47-8 / happy-01
                    :ARG1 (c47-0 / festival
                                 :name (c47-3 / name
                                              :op1 "New"
                                              :op2 "Year"))))

# ::snt You are both sick and need therapy.
# ::tokens ["You", "are", "both", "sick", "and", "need", "therapy", "."]
# ::lemmas ["you", "be", "both", "sick", "and", "need", "therapy", "."]
(c48-5 / and
       :op1 (c48-3 / sick-05
                   :ARG1 (c48-1 / you
                                :mod (c48-0 / both)))
       :op2 (c48-2 / need-01
                   :ARG0 c48-1
                   :ARG1 (c48-4 / therapy)))

# ::snt Happy new year piers we wouldn't want you any other way i for one admire you're shy and none opinionated self
# ::tokens ["Happy", "new", "year", "piers", "we", "would", "n't", "want", "you", "any", "other", "way", "i", "for", "one", "admire", "you", "'re", "shy", "and", "none", "opinionated", "self"]
# ::lemmas ["happy", "new", "year", "pier", "we", "would", "not", "want", "you", "any", "other", "way", "i", "for", "one", "admire", "you", "be", "shy", "and", "none", "opinionate", "self"]
(c49-5 / say-01
       :ARG0 (c49-12 / i)
       :ARG1 (c49-9 / want-01
                    :ARG0 (c49-8 / we)
                    :ARG1 (c49-7 / person
                                 :name (c49-4 / name
                                              :op1 "Piers"))
                    :manner (c49-15 / way
                                    :mod (c49-13 / any)
                                    :mod (c49-0 / other))
                    :ARG1-of (c49-10 / cause-01
                                     :ARG0 (c49-14 / admire-01
                                                   :ARG0 c49-12
                                                   :ARG1 (c49-11 / and
                                                                 :op1 (c49-1 / shy-03
                                                                             :ARG1 c49-7)
                                                                 :op2 (c49-2 / opine-01
                                                                             :ARG0 c49-7
                                                                             :polarity -))))
                    :polarity -)
       :ARG2 c49-7
       :time (c49-3 / festival
                    :name c49-4
                    :op1 "New"
                    :op2 "Year")
       :ARG1-of (c49-6 / happy-01))

# ::snt I hope you will also remain delusional through xxxx
# ::tokens ["I", "hope", "you", "will", "also", "remain", "delusional", "through", "xxxx"]
# ::lemmas ["i", "hope", "you", "will", "also", "remain", "delusional", "through", "xxxx"]
(c50-3 / hope-01
       :ARG0 (c50-5 / i)
       :ARG1 (c50-2 / remain-01
                    :ARG1 (c50-0 / you)
                    :ARG3 (c50-7 / delusional)
                    :mod (c50-6 / also)
                    :manner (c50-4 / person
                                   :name (c50-1 / name
                                                :op1 "xxx"))))
