# ::snt uhhhh yes, yes i did : Miley Cyrus &amp; Liam Hemsworth's split: did you see it coming?
# ::tokens ["uhhhh", "yes", ",", "yes", "i", "did", ":", "Miley", "Cyrus", "&", "amp", ";", "Liam", "Hemsworth", "'s", "split", ":", "did", "you", "see", "it", "coming", "?"]
# ::lemmas ["uhhhh", "yes", ",", "yes", "i", "do", ":", "Miley", "Cyrus", "&", "amp", ";", "Liam", "Hemsworth", "'s", "split", ":", "do", "you", "see", "it", "come", "?"]
(c1-2 / multi-sentence
      :snt1 (c1-14 / do-02
                   :ARG0 (c1-11 / i))
      :snt2 (c1-12 / and
                   :op1 (c1-8 / person
                              :name (c1-3 / name
                                          :op1 "Miley"
                                          :op2 "Cyrus"))
                   :op2 (c1-4 / person
                              :name (c1-7 / name
                                          :op1 "amp"))
                   :op3 (c1-5 / split-01
                              :ARG1 (c1-16 / person
                                           :name (c1-9 / name
                                                       :op1 "Liam"
                                                       :op2 "Hemsworth")))
                   :mod (c1-1 / yes))
      :snt3 (c1-0 / see-01
                  :ARG0 (c1-13 / you)
                  :ARG1 (c1-10 / come-03
                               :ARG1 (c1-6 / it))
                  :polarity (c1-15 / amr-unknown)))

# ::snt signs? I only needed one.
# ::tokens ["signs", "?", "I", "only", "needed", "one", "."]
# ::lemmas ["sign", "?", "i", "only", "need", "one", "."]
(c2-3 / multi-sentence
      :snt1 (c2-4 / signal-07
                  :polarity (c2-6 / amr-unknown))
      :snt2 (c2-2 / need-01
                  :ARG0 (c2-5 / i)
                  :ARG1 (c2-0 / one)
                  :mod (c2-1 / only)))

# ::snt : Miley Cyrus &amp; Liam Hemsworth's split: did you see it coming? signs they were on the rocks
# ::tokens [":", "Miley", "Cyrus", "&", "amp", ";", "Liam", "Hemsworth", "'s", "split", ":", "did", "you", "see", "it", "coming", "?", "signs", "they", "were", "on", "the", "rocks"]
# ::lemmas [":", "Miley", "Cyrus", "&", "amp", ";", "Liam", "Hemsworth", "'s", "split", ":", "do", "you", "see", "it", "come", "?", "sign", "they", "be", "on", "the", "rock"]
(c3-3 / multi-sentence
      :snt1 (c3-13 / and
                   :op1 (c3-8 / person
                              :name (c3-2 / name
                                          :op1 "Miley"
                                          :op2 "Cyrus"))
                   :op2 (c3-4 / person
                              :name (c3-7 / name
                                          :op1 "amp"))
                   :op3 (c3-5 / split-01
                              :ARG1 (c3-15 / person
                                           :name (c3-9 / name
                                                       :op1 "Liam"
                                                       :op2 "Hemsworth"))))
      :snt2 (c3-0 / see-01
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-10 / come-03
                               :ARG1 (c3-12 / it))
                  :polarity (c3-14 / amr-unknown))
      :snt3 (c3-16 / signal-07
                   :ARG1 (c3-6 / rock
                               :location-of (c3-11 / they))))

# ::snt :thats true
# ::tokens [":", "that", "s", "true"]
# ::lemmas [":", "that", "s", "true"]
(c4-1 / true-01
      :ARG1 (c4-0 / that))
