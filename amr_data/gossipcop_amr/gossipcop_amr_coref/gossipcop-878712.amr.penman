# ::snt They are not that good anyway do no real loss.
# ::tokens ["They", "are", "not", "that", "good", "anyway", "do", "no", "real", "loss", "."]
# ::lemmas ["they", "be", "not", "that", "good", "anyway", "do", "no", "real", "loss", "."]
(c1-0 / multi-sentence
      :snt1 (c1-5 / good-02
                  :ARG1 (c1-3 / they)
                  :mod (c1-4 / anyway)
                  :degree (c1-6 / that)
                  :polarity -)
      :snt2 (c1-2 / lose-03
                  :ARG1-of (c1-1 / real-04)
                  :polarity -))

# ::snt Well fuck
# ::tokens ["Well", "fuck"]
# ::lemmas ["well", "fuck"]
(c2-0 / fuck-01
      :mod (c2-1 / well))

# ::snt Gutted!
# ::tokens ["Gutted", "!"]
# ::lemmas ["gutte", "!"]
(c3-0 / gut-01)

# ::snt This annoys me.
# ::tokens ["This", "annoys", "me", "."]
# ::lemmas ["this", "annoy", "i", "."]
(c4-2 / annoy-01
      :ARG0 (c4-0 / this)
      :ARG1 (c4-1 / i))

# ::snt Well, it's their loss.
# ::tokens ["Well", ",", "it", "'s", "their", "loss", "."]
# ::lemmas ["well", ",", "it", "be", "their", "loss", "."]
(c5-1 / lose-02
      :ARG0 (c5-3 / they)
      :ARG1 (c5-2 / it)
      :mod (c5-0 / well))

# ::snt Excellent idea!
# ::tokens ["Excellent", "idea", "!"]
# ::lemmas ["excellent", "idea", "!"]
(c6-1 / idea
      :ARG1-of (c6-0 / excellent-02)
      :mode expressive)

# ::snt Noooooooooo. Guess I'll be checking out Amazon Prime to see what they offer.
# ::tokens ["Noooooooooo", ".", "Guess", "I", "'ll", "be", "checking", "out", "Amazon", "Prime", "to", "see", "what", "they", "offer", "."]
# ::lemmas ["Noooooooooo", ".", "guess", "i", "'ll", "be", "check", "out", "Amazon", "Prime", "to", "see", "what", "they", "offer", "."]
(c8-2 / multi-sentence
      :snt1 (c8-1 / noooooooooo
                  :mode expressive)
      :snt2 (c8-8 / guess-01
                  :ARG1 (c8-5 / check-out-05
                              :ARG0 (c8-6 / i)
                              :ARG1 (c8-9 / company
                                          :name (c8-4 / name
                                                      :op1 "Amazon"
                                                      :op2 "Prime"))
                              :purpose (c8-3 / see-01
                                             :ARG0 c8-6
                                             :ARG1 (c8-7 / thing
                                                         :ARG1-of (c8-0 / offer-01
                                                                        :ARG0 c8-9))))))

# ::snt Damn it
# ::tokens ["Damn", "it"]
# ::lemmas ["damn", "it"]
(c9-0 / damn-01
      :ARG1 (c9-1 / it))

# ::snt Time to . If we keep allowing groups to splinter off the main streaming services, we're going to pay more and more.
# ::tokens ["Time", "to", ".", "If", "we", "keep", "allowing", "groups", "to", "splinter", "off", "the", "main", "streaming", "services", ",", "we", "'re", "going", "to", "pay", "more", "and", "more", "."]
# ::lemmas ["time", "to", ".", "if", "we", "keep", "allow", "group", "to", "splinter", "off", "the", "main", "streaming", "service", ",", "we", "be", "go", "to", "pay", "more", "and", "more", "."]
(c10-2 / multi-sentence
       :snt1 (c10-9 / time
                    :mod (c10-11 / to))
       :snt2 (c10-6 / pay-01
                    :ARG0 (c10-8 / we)
                    :ARG1-of (c10-10 / increase-01)
                    :condition (c10-7 / keep-02
                                      :ARG0 c10-8
                                      :ARG1 (c10-4 / allow-01
                                                   :ARG0 c10-8
                                                   :ARG1 (c10-3 / splinter-01
                                                                :ARG1 (c10-12 / group)
                                                                :mod (c10-0 / off)
                                                                :source (c10-1 / service
                                                                               :ARG0-of (c10-13 / stream-01)
                                                                               :mod (c10-5 / main)))))))

# ::snt But can get Dark Matter season &amp; .
# ::tokens ["But", "can", "get", "Dark", "Matter", "season", "&", "amp", ";", "."]
# ::lemmas ["but", "can", "get", "Dark", "Matter", "season", "&", "amp", ";", "."]
(c11-4 / contrast-01
       :ARG2 (c11-3 / possible-01
                    :ARG1 (c11-7 / get-01
                                 :ARG1 (c11-6 / and
                                              :op1 (c11-2 / season
                                                          :mod (c11-0 / broadcast-program
                                                                      :name (c11-1 / name
                                                                                   :op1 "Dark"
                                                                                   :op2 "Matter")))
                                              :op2 (c11-5 / amp)))))

# ::snt Yuck
# ::tokens ["Yuck"]
# ::lemmas ["Yuck"]
(c12-0 / yuck
       :mode expressive)

# ::snt And that app will be available only on Disney phones and TVs.
# ::tokens ["And", "that", "app", "will", "be", "available", "only", "on", "Disney", "phones", "and", "TVs", "."]
# ::lemmas ["and", "that", "app", "will", "be", "available", "only", "on", "Disney", "phone", "and", "tv", "."]
(c13-7 / and
       :op2 (c13-6 / available-02
                   :ARG1 (c13-4 / and
                                :op1 (c13-2 / phone
                                            :poss (c13-3 / company
                                                         :name (c13-1 / name
                                                                      :op1 "Disney")))
                                :op2 (c13-5 / television
                                            :poss c13-3))
                   :ARG2 (c13-8 / app
                                :mod (c13-9 / that))
                   :mod (c13-0 / only)))

# ::snt Smh...
# ::tokens ["Smh", "..."]
# ::lemmas ["Smh", "..."]
(c14-0 / smoke-02
       :mode expressive)

# ::snt Can't tell you how absolutely greedy and stupid this is....you probably already know just don't care! Smh
# ::tokens ["Ca", "n't", "tell", "you", "how", "absolutely", "greedy", "and", "stupid", "this", "is", "....", "you", "probably", "already", "know", "just", "do", "n't", "care", "!", "Smh"]
# ::lemmas ["can", "not", "tell", "you", "how", "absolutely", "greedy", "and", "stupid", "this", "be", "....", "you", "probably", "already", "know", "just", "do", "not", "care", "!", "smh"]
(c15-2 / multi-sentence
       :snt1 (c15-6 / possible-01
                    :ARG1 (c15-10 / tell-01
                                  :ARG0 (c15-11 / i)
                                  :ARG1 (c15-12 / and
                                                :op1 (c15-13 / greedy
                                                             :degree (c15-14 / absolute)
                                                             :domain (c15-17 / this))
                                                :op2 (c15-4 / stupid
                                                            :degree (c15-9 / absolute)
                                                            :domain c15-17))
                                  :ARG2 (c15-1 / you))
                    :polarity -)
       :snt2 (c15-3 / probable
                    :domain (c15-7 / know-01
                                   :ARG0 (c15-15 / you)
                                   :ARG1 (c15-8 / care-01
                                                :ARG0 c15-15
                                                :mod (c15-16 / just)
                                                :polarity -)
                                   :time (c15-5 / already)))
       :snt3 (c15-0 / smh
                    :mode expressive))

# ::snt They're basically crap movies made popular by the herd instinct PR &amp; advertising campaigns, and sales oriented news blurbs
# ::tokens ["They", "'re", "basically", "crap", "movies", "made", "popular", "by", "the", "herd", "instinct", "PR", "&", "amp", ";", "advertising", "campaigns", ",", "and", "sales", "oriented", "news", "blurbs"]
# ::lemmas ["they", "be", "basically", "crap", "movie", "make", "popular", "by", "the", "herd", "instinct", "PR", "&", "amp", ";", "advertising", "campaign", ",", "and", "sale", "orient", "news", "blurb"]
(c16-2 / movie
       :ARG1-of (c16-10 / crap-01)
       :mod (c16-1 / basic)
       :ARG1-of (c16-5 / make-02
                       :ARG0 (c16-13 / and
                                     :op1 (c16-15 / company
                                                  :name (c16-3 / name
                                                               :op1 "PR&&amp")
                                                  :mod (c16-12 / instinct
                                                               :mod (c16-6 / herd)))
                                     :op2 (c16-14 / advertise-01)
                                     :op3 (c16-7 / blurble-01
                                                 :ARG1 (c16-8 / news)
                                                 :ARG1-of (c16-0 / orient-01
                                                                 :ARG2 (c16-4 / sell-01))))
                       :ARG1-of (c16-9 / popular-02))
       :domain (c16-11 / they))

# ::snt What?
# ::tokens ["What", "?"]
# ::lemmas ["what", "?"]
(c17-0 / amr-unknown)

# ::snt Disney is ridiculously greedy.
# ::tokens ["Disney", "is", "ridiculously", "greedy", "."]
# ::lemmas ["Disney", "be", "ridiculously", "greedy", "."]
(c18-0 / greedy
       :domain (c18-1 / company
                      :name (c18-2 / name
                                   :op1 "Disney"))
       :ARG1-of (c18-3 / ridiculous-02))

# ::snt your in the picture....yay but boo about netflix
# ::tokens ["your", "in", "the", "picture", "....", "yay", "but", "boo", "about", "netflix"]
# ::lemmas ["your", "in", "the", "picture", "....", "yay", "but", "boo", "about", "netflix"]
(c19-2 / multi-sentence
       :snt1 (c19-0 / be-located-at-91
                    :ARG1 (c19-1 / you)
                    :ARG2 (c19-5 / picture))
       :snt2 (c19-6 / contrast-01
                    :ARG1 (c19-7 / yay)
                    :ARG2 (c19-4 / boo-01
                                 :topic (c19-8 / company
                                               :name (c19-3 / name
                                                            :op1 "Netflix"))
                                 :mode expressive)))

# ::snt Well that sucks
# ::tokens ["Well", "that", "sucks"]
# ::lemmas ["well", "that", "suck"]
(c20-2 / suck-03
       :ARG0 (c20-1 / that)
       :mod (c20-0 / well))
