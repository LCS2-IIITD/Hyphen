# ::snt of course, but maybe
# ::tokens ["of", "course", ",", "but", "maybe"]
# ::lemmas ["of", "course", ",", "but", "maybe"]
(c1-0 / contrast-01
      :ARG2 (c1-1 / possible-01)
      :mod (c1-2 / of-course))

# ::snt anyway - do read his whole piece (you may still hate it )
# ::tokens ["anyway", "-", "do", "read", "his", "whole", "piece", "(", "you", "may", "still", "hate", "it", ")"]
# ::lemmas ["anyway", "-", "do", "read", "his", "whole", "piece", "(", "you", "may", "still", "hate", "it", ")"]
(c2-3 / read-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-5 / piece
                  :mod (c2-6 / whole)
                  :poss (c2-4 / he))
      :concession (c2-1 / possible-01
                        :ARG1 (c2-7 / hate-01
                                    :ARG0 c2-0
                                    :ARG1 c2-5
                                    :mod (c2-2 / still)))
      :mod (c2-8 / anyway)
      :mode imperative)

# ::snt that line is offputting. But did you read whole piece? also brings up interchangeable males, while talking abt roles women get
# ::tokens ["that", "line", "is", "offputting", ".", "But", "did", "you", "read", "whole", "piece", "?", "also", "brings", "up", "interchangeable", "males", ",", "while", "talking", "abt", "roles", "women", "get"]
# ::lemmas ["that", "line", "be", "offputting", ".", "but", "do", "you", "read", "whole", "piece", "?", "also", "bring", "up", "interchangeable", "male", ",", "while", "talk", "abt", "role", "woman", "get"]
(c3-11 / multi-sentence
       :snt1 (c3-3 / offput-00
                   :ARG0 (c3-0 / line
                               :mod (c3-8 / that)))
       :snt2 (c3-13 / contrast-01
                    :ARG2 (c3-16 / read-01
                                 :ARG0 (c3-4 / you)
                                 :ARG1 (c3-17 / piece
                                              :mod (c3-18 / whole))
                                 :polarity (c3-7 / amr-unknown)
                                 :ARG0-of (c3-10 / bring-up-02
                                                 :ARG1 (c3-5 / male
                                                             :ARG1-of (c3-15 / marry-01
                                                                             :ARG1-of (c3-12 / possible-01)))
                                                 :mod (c3-6 / also)
                                                 :time (c3-14 / talk-01
                                                              :ARG0 c3-4
                                                              :ARG1 (c3-2 / role
                                                                          :ARG1-of (c3-9 / get-01
                                                                                         :ARG0 (c3-1 / woman))))))))

# ::snt Usual justification for this sort of thing is subtext this person displaced someone 'deserving' in the firmament.
# ::tokens ["Usual", "justification", "for", "this", "sort", "of", "thing", "is", "subtext", "this", "person", "displaced", "someone", "'", "deserving", "'", "in", "the", "firmament", "."]
# ::lemmas ["usual", "justification", "for", "this", "sort", "of", "thing", "be", "subtext", "this", "person", "displace", "someone", "'", "deserve", "'", "in", "the", "firmament", "."]
(c4-3 / subtext
      :domain (c4-6 / justify-01
                    :ARG1 (c4-7 / thing
                                :mod (c4-0 / sort
                                           :mod (c4-9 / this)))
                    :ARG2 (c4-8 / displace-01
                                :ARG0 (c4-4 / person)
                                :ARG1 (c4-10 / someone
                                             :ARG0-of (c4-5 / deserve-01))
                                :location (c4-1 / firmament))
                    :ARG1 c4-6
                    :ARG1-of (c4-2 / need-01
                                   :polarity -)))

# ::snt was a bit misogynist wasn't it? I do think points abt Hudson/Lively being interchangeably terrible actresses isn't wrong tho
# ::tokens ["was", "a", "bit", "misogynist", "was", "n't", "it", "?", "I", "do", "think", "points", "abt", "Hudson", "/", "Lively", "being", "interchangeably", "terrible", "actresses", "is", "n't", "wrong", "tho"]
# ::lemmas ["be", "a", "bit", "misogynist", "be", "not", "it", "?", "i", "do", "think", "point", "abt", "Hudson", "/", "Lively", "be", "interchangeably", "terrible", "actress", "be", "not", "wrong", "tho"]
(c5-1 / multi-sentence
      :snt1 (c5-6 / misogynist
                  :domain (c5-12 / it)
                  :degree (c5-0 / bit)
                  :ARG1-of (c5-5 / request-confirmation-91))
      :snt2 (c5-13 / think-01
                   :ARG0 (c5-4 / i)
                   :ARG1 (c5-10 / wrong-02
                                :ARG1 (c5-7 / point-04
                                            :ARG1 (c5-2 / possible-01
                                                        :ARG1 (c5-16 / terrible-01
                                                                     :ARG1 (c5-15 / person
                                                                                  :name (c5-3 / name
                                                                                              :op1 "Hudson"))
                                                                     :ARG2 (c5-11 / person
                                                                                  :name (c5-8 / name
                                                                                              :op1 "Lively"))
                                                                     :manner (c5-14 / interchange-01))))
                                :polarity -)
                   :ARG1-of (c5-9 / have-concession-91)))

# ::snt She was actually really good in the
# ::tokens ["She", "was", "actually", "really", "good", "in", "the"]
# ::lemmas ["she", "be", "actually", "really", "good", "in", "the"]
(c7-0 / good-03
      :ARG1 (c7-3 / she)
      :ARG2-of (c7-1 / actual-02)
      :degree (c7-2 / really))

# ::snt Teach me! Love you, Richard!
# ::tokens ["Teach", "me", "!", "Love", "you", ",", "Richard", "!"]
# ::lemmas ["teach", "i", "!", "Love", "you", ",", "Richard", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-8 / teach-01
                  :ARG0 (c8-0 / you)
                  :ARG1 c8-8
                  :ARG0 c8-0
                  :ARG2 (c8-7 / i)
                  :mode imperative)
      :snt2 (c8-3 / say-01
                  :ARG0 (c8-4 / i)
                  :ARG1 (c8-5 / love-01
                              :ARG0 (c8-10 / i)
                              :ARG1 (c8-9 / you))
                  :ARG2 (c8-6 / person
                              :name (c8-2 / name
                                          :op1 "Richard"))))

# ::snt yeah it was okay! I mean, I like shark movies soooo lol
# ::tokens ["yeah", "it", "was", "okay", "!", "I", "mean", ",", "I", "like", "shark", "movies", "soooo", "lol"]
# ::lemmas ["yeah", "it", "be", "okay", "!", "i", "mean", ",", "i", "like", "shark", "movie", "soooo", "lol"]
(c9-0 / okay-04
      :ARG1 (c9-9 / it)
      :mod (c9-1 / yeah
                 :mode expressive)
      :ARG1-of (c9-2 / mean-01
                     :ARG0 (c9-5 / i)
                     :ARG2 (c9-7 / like-01
                                 :ARG0 c9-5
                                 :ARG1 (c9-6 / movie
                                             :name (c9-3 / name
                                                         :op1 "Sharks"))
                                 :degree (c9-4 / so-much)
                                 :ARG2-of (c9-10 / laugh-01
                                                 :ARG0 c9-5
                                                 :manner (c9-8 / loud)))))

# ::snt did you enjoy it?!
# ::tokens ["did", "you", "enjoy", "it", "?", "!"]
# ::lemmas ["do", "you", "enjoy", "it", "?", "!"]
(c10-0 / enjoy-01
       :ARG0 (c10-1 / you)
       :ARG1 (c10-2 / it)
       :polarity (c10-3 / amr-unknown))

# ::snt lol I saw the shallows today
# ::tokens ["lol", "I", "saw", "the", "shallows", "today"]
# ::lemmas ["lol", "i", "see", "the", "shallow", "today"]
(c11-1 / see-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-0 / shallow)
       :time (c11-4 / today)
       :manner (c11-2 / laugh-01
                      :ARG0 c11-3
                      :manner (c11-5 / loud)
                      :mode expressive))

# ::snt This article title tho
# ::tokens ["This", "article", "title", "tho"]
# ::lemmas ["this", "article", "title", "tho"]
(c12-3 / title-01
       :ARG1 (c12-0 / article
                    :mod (c12-2 / this))
       :ARG1-of (c12-1 / have-concession-91))

# ::snt hilarious article.
# ::tokens ["hilarious", "article", "."]
# ::lemmas ["hilarious", "article", "."]
(c13-1 / article
       :mod (c13-0 / hilarious))

# ::snt Conflicted about this. Certainly clever, but will it change anything or just let "regular" people feel superior?
# ::tokens ["Conflicted", "about", "this", ".", "Certainly", "clever", ",", "but", "will", "it", "change", "anything", "or", "just", "let", "\"", "regular", "\"", "people", "feel", "superior", "?"]
# ::lemmas ["conflict", "about", "this", ".", "certainly", "clever", ",", "but", "will", "it", "change", "anything", "or", "just", "let", "\"", "regular", "\"", "people", "feel", "superior", "?"]
(c14-1 / multi-sentence
       :snt1 (c14-10 / inflict-01
                     :ARG1 (c14-9 / this))
       :snt2 (c14-7 / clever-01
                    :concession (c14-11 / amr-choice
                                        :op1 (c14-14 / change-01
                                                     :ARG0 (c14-3 / it)
                                                     :ARG1 (c14-12 / anything))
                                        :op2 (c14-5 / let-01
                                                    :ARG0 c14-3
                                                    :ARG1 (c14-0 / feel-01
                                                                 :ARG0 (c14-6 / person
                                                                              :ARG1-of (c14-4 / regular-03))
                                                                 :ARG1 (c14-2 / superior-01
                                                                              :ARG1 c14-6))
                                                    :mod (c14-13 / just)))
                    :mod (c14-8 / certain)))

# ::snt great piece but the whole time I thought BUT SHE JUST WON AN OSCAR, WES. Looked it up. It was Brie Larson.
# ::tokens ["great", "piece", "but", "the", "whole", "time", "I", "thought", "BUT", "SHE", "JUST", "WON", "AN", "OSCAR", ",", "WES", ".", "Looked", "it", "up", ".", "It", "was", "Brie", "Larson", "."]
# ::lemmas ["great", "piece", "but", "the", "whole", "time", "i", "think", "but", "SHE", "just", "win", "AN", "OSCAR", ",", "WES", ".", "look", "it", "up", ".", "it", "be", "Brie", "Larson", "."]
(c15-1 / multi-sentence
       :snt1 (c15-9 / contrast-01
                    :ARG1 (c15-6 / piece
                                 :mod (c15-14 / great))
                    :ARG2 (c15-13 / think-01
                                  :ARG0 (c15-12 / i)
                                  :ARG1-of (c15-16 / contrast-01
                                                   :ARG2 (c15-10 / win-01
                                                                 :ARG0 (c15-3 / she)
                                                                 :mod (c15-11 / just)))
                                  :duration (c15-15 / time
                                                    :mod (c15-8 / whole))))
       :snt2 (c15-7 / look-up-05
                    :ARG0 (c15-0 / you)
                    :ARG1 (c15-4 / it))
       :snt3 (c15-2 / person
                    :name (c15-5 / name
                                 :op1 "Brie"
                                 :op2 "Larson")))

# ::snt I used to love her basic ass and her hustle then she went and got all antebellum I
# ::tokens ["I", "used", "to", "love", "her", "basic", "ass", "and", "her", "hustle", "then", "she", "went", "and", "got", "all", "antebellum", "I"]
# ::lemmas ["i", "use", "to", "love", "her", "basic", "ass", "and", "her", "hustle", "then", "she", "go", "and", "get", "all", "antebellum", "i"]
(c16-5 / love-01
       :ARG0 (c16-10 / i)
       :ARG1 (c16-3 / and
                    :op1 (c16-9 / ass
                                :poss (c16-2 / she)
                                :mod (c16-0 / basic))
                    :op2 (c16-4 / hustle
                                :poss c16-2))
       :time (c16-13 / use-03)
       :time (c16-8 / then
                    :op1 (c16-7 / and
                                :op1 (c16-11 / go-02
                                             :ARG0 c16-2)
                                :op2 (c16-12 / get-01
                                             :ARG0 c16-2
                                             :ARG1 (c16-1 / antebellum
                                                          :mod (c16-6 / all))))))

# ::snt Lol, so are a LOT of people.
# ::tokens ["Lol", ",", "so", "are", "a", "LOT", "of", "people", "."]
# ::lemmas ["Lol", ",", "so", "be", "a", "LOT", "of", "people", "."]
(c17-3 / and
       :op1 (c17-2 / laugh-01
                   :manner (c17-4 / loud)
                   :mode expressive)
       :op2 (c17-0 / person
                   :quant (c17-1 / lot)))

# ::snt I'm with ya. Just was wondering.
# ::tokens ["I", "'m", "with", "ya", ".", "Just", "was", "wondering", "."]
# ::lemmas ["i", "be", "with", "ya", ".", "just", "be", "wonder", "."]
(c18-1 / multi-sentence
       :snt1 (c18-6 / accompany-01
                    :ARG0 (c18-5 / i)
                    :ARG1 (c18-0 / you))
       :snt2 (c18-3 / wonder-01
                    :ARG0 (c18-2 / i)
                    :mod (c18-4 / just)))

# ::snt maybe you've answered this already, but do you not write about TomH anymore? Your pieces were my fav. Sigh, I miss those days.
# ::tokens ["maybe", "you", "'ve", "answered", "this", "already", ",", "but", "do", "you", "not", "write", "about", "TomH", "anymore", "?", "Your", "pieces", "were", "my", "fav", ".", "Sigh", ",", "I", "miss", "those", "days", "."]
# ::lemmas ["maybe", "you", "'ve", "answer", "this", "already", ",", "but", "do", "you", "not", "write", "about", "TomH", "anymore", "?", "your", "piece", "be", "my", "fav", ".", "Sigh", ",", "i", "miss", "those", "days", "."]
(c19-10 / multi-sentence
        :snt1 (c19-12 / contrast-01
                      :ARG1 (c19-16 / possible-01
                                    :ARG1 (c19-8 / answer-01
                                                 :ARG0 (c19-2 / you)
                                                 :ARG1 (c19-7 / this)
                                                 :time (c19-6 / already)))
                      :ARG2 (c19-17 / write-01
                                    :ARG0 c19-2
                                    :ARG3 (c19-11 / person
                                                  :name (c19-15 / name
                                                                :op1 "TomH"))
                                    :time (c19-5 / anymore)
                                    :polarity -))
        :snt2 (c19-14 / favor-01
                      :ARG0 (c19-18 / i)
                      :ARG1 (c19-1 / piece
                                   :poss (c19-9 / you)))
        :snt3 (c19-0 / sigh-02
                     :ARG0 (c19-3 / i)
                     :ARG1 (c19-4 / miss-01
                                  :ARG0 c19-3
                                  :ARG1 (c19-19 / day
                                                :mod (c19-13 / that)))
                     :mode expressive))

# ::snt The movie that made me finally like Blake Lively, tbh. What movie did he see?
# ::tokens ["The", "movie", "that", "made", "me", "finally", "like", "Blake", "Lively", ",", "tbh", ".", "What", "movie", "did", "he", "see", "?"]
# ::lemmas ["the", "movie", "that", "make", "i", "finally", "like", "Blake", "Lively", ",", "tbh", ".", "what", "movie", "do", "he", "see", "?"]
(c20-1 / multi-sentence
       :snt1 (c20-4 / make-02
                    :ARG0 (c20-12 / movie)
                    :ARG1 (c20-5 / like-01
                                 :ARG0 (c20-10 / i)
                                 :ARG1 (c20-6 / person
                                              :name (c20-2 / name
                                                           :op1 "Blake"
                                                           :op2 "Lively"))
                                 :mod (c20-0 / final))
                    :ARG1-of (c20-7 / honest-01))
       :snt2 (c20-3 / see-01
                    :ARG0 (c20-9 / he)
                    :ARG1 (c20-8 / movie
                                 :mod (c20-11 / amr-unknown))))

# ::snt I really liked his Prince article, but yeesh.
# ::tokens ["I", "really", "liked", "his", "Prince", "article", ",", "but", "yeesh", "."]
# ::lemmas ["i", "really", "like", "his", "Prince", "article", ",", "but", "yeesh", "."]
(c21-5 / contrast-01
       :ARG1 (c21-3 / like-01
                    :ARG0 (c21-6 / i)
                    :ARG1 (c21-7 / article
                                 :poss (c21-2 / he)
                                 :topic (c21-4 / prince))
                    :degree (c21-1 / really))
       :ARG2 (c21-0 / yeesh
                    :mode expressive))

# ::snt and surprisingly accurate!
# ::tokens ["and", "surprisingly", "accurate", "!"]
# ::lemmas ["and", "surprisingly", "accurate", "!"]
(c22-2 / and
       :op2 (c22-1 / accurate
                   :ARG0-of (c22-0 / surprise-01)))

# ::snt The bit on Channing Tatum / Brendan Fraser? Perfect
# ::tokens ["The", "bit", "on", "Channing", "Tatum", "/", "Brendan", "Fraser", "?", "Perfect"]
# ::lemmas ["the", "bit", "on", "Channing", "Tatum", "/", "Brendan", "Fraser", "?", "perfect"]
(c23-6 / perfect-02
       :ARG1 (c23-0 / bit
                    :topic (c23-3 / slash
                                  :op1 (c23-2 / person
                                              :name (c23-1 / name
                                                           :op1 "Channing"
                                                           :op2 "Tatum"))
                                  :op2 (c23-7 / person
                                              :name (c23-5 / name
                                                           :op1 "Brendan"
                                                           :op2 "Fraser"))))
       :polarity (c23-4 / amr-unknown))

# ::snt also his description of "Non-Stop" as "magnificently bonkers."
# ::tokens ["also", "his", "description", "of", "\"", "Non", "-", "Stop", "\"", "as", "\"", "magnificently", "bonkers", ".", "\""]
# ::lemmas ["also", "his", "description", "of", "\"", "Non", "-", "stop", "\"", "as", "\"", "magnificently", "bonker", ".", "\""]
(c25-6 / describe-01
       :ARG0 (c25-4 / he)
       :ARG1 (c25-1 / broadcast-program
                    :name (c25-2 / name
                                 :op1 "Non-Stop"))
       :ARG2 (c25-3 / bonkers
                    :ARG1-of (c25-0 / fantastic-02))
       :mod (c25-5 / also))

# ::snt also , referring to Liam Neeson's oeuvre as "'stop taking my stuff' movies" is great
# ::tokens ["also", ",", "referring", "to", "Liam", "Neeson", "'s", "oeuvre", "as", "\"", "'", "stop", "taking", "my", "stuff", "'", "movies", "\"", "is", "great"]
# ::lemmas ["also", ",", "refer", "to", "Liam", "Neeson", "'s", "oeuvre", "as", "\"", "'", "stop", "take", "my", "stuff", "'", "movie", "\"", "be", "great"]
(c26-9 / great
       :domain (c26-5 / refer-01
                      :ARG1 (c26-0 / oeuvre
                                   :poss (c26-7 / person
                                                :name (c26-2 / name
                                                             :op1 "Liam"
                                                             :op2 "Neeson")))
                      :ARG2 (c26-3 / movie
                                   :ARG1-of (c26-4 / stop-01
                                                   :ARG2 (c26-8 / take-01
                                                                :ARG1 (c26-1 / stuff
                                                                             :poss c26-7)))))
       :mod (c26-6 / also))

# ::snt ok, yeah, spend that time watching West Wing on Netflix.
# ::tokens ["ok", ",", "yeah", ",", "spend", "that", "time", "watching", "West", "Wing", "on", "Netflix", "."]
# ::lemmas ["ok", ",", "yeah", ",", "spend", "that", "time", "watch", "West", "Wing", "on", "Netflix", "."]
(c27-5 / spend-02
       :ARG0 (c27-3 / you)
       :ARG1 (c27-7 / time
                    :mod (c27-9 / that))
       :ARG2 (c27-6 / watch-01
                    :ARG0 c27-3
                    :ARG1 (c27-2 / broadcast-program
                                 :name (c27-4 / name
                                              :op1 "West"
                                              :op2 "Wing"))
                    :medium (c27-0 / streaming-program
                                   :name c27-4
                                   :op1 "Netflix"))
       :ARG1-of (c27-1 / okay-04)
       :mod (c27-8 / yeah
                   :mode expressive)
       :mode imperative)

# ::snt I never have! I've missed out on a lot. Also this article says the shark doesn't win against Blake Lively so I'll skip this movie.
# ::tokens ["I", "never", "have", "!", "I", "'ve", "missed", "out", "on", "a", "lot", ".", "Also", "this", "article", "says", "the", "shark", "does", "n't", "win", "against", "Blake", "Lively", "so", "I", "'ll", "skip", "this", "movie", "."]
# ::lemmas ["i", "never", "have", "!", "i", "'ve", "miss", "out", "on", "a", "lot", ".", "also", "this", "article", "say", "the", "shark", "do", "not", "win", "against", "Blake", "Lively", "so", "i", "'ll", "skip", "this", "movie", "."]
(c29-8 / multi-sentence
       :snt1 (c29-4 / miss-out-03
                    :ARG0 (c29-18 / i)
                    :time (c29-15 / ever)
                    :snt2-of c29-8
                    :polarity -)
       :ARG0 (c29-3 / i)
       :quant (c29-1 / lot)
       :snt3 (c29-0 / say-01
                    :ARG0 (c29-7 / article
                                 :mod (c29-6 / this))
                    :ARG1 (c29-17 / win-01
                                  :ARG0 (c29-16 / person
                                                :name (c29-14 / name
                                                              :op1 "Sharks"))
                                  :ARG4 (c29-9 / person
                                               :name (c29-10 / name
                                                             :op1 "Blake"
                                                             :op2 "Lively"))
                                  :ARG0-of (c29-11 / cause-01
                                                   :ARG1 (c29-2 / skip-01
                                                                :ARG0 c29-3
                                                                :ARG1 (c29-13 / movie
                                                                              :mod (c29-12 / this))))
                                  :polarity -)
                    :mod (c29-5 / also)))

# ::snt ... is this how you reveal you've never seen the West Wing, Liam?
# ::tokens ["...", "is", "this", "how", "you", "reveal", "you", "'ve", "never", "seen", "the", "West", "Wing", ",", "Liam", "?"]
# ::lemmas ["...", "be", "this", "how", "you", "reveal", "you", "'ve", "never", "see", "the", "West", "Wing", ",", "Liam", "?"]
(c30-8 / ask-01
       :ARG1 (c30-2 / reveal-01
                    :ARG0 (c30-5 / person
                                 :name (c30-0 / name
                                              :op1 "Liam"))
                    :ARG1 (c30-1 / see-01
                                 :ARG0 c30-5
                                 :ARG1 (c30-9 / government-organization
                                              :name (c30-4 / name
                                                           :op1 "West"
                                                           :op2 "Wing"))
                                 :time (c30-3 / ever)
                                 :polarity -)
                    :manner (c30-6 / this)
                    :polarity (c30-7 / amr-unknown))
       :ARG2 c30-5)

# ::snt I just had to look up who Mark Harmon was. And Brad Rowe (Billy's Hollywood Screen Kiss!)
# ::tokens ["I", "just", "had", "to", "look", "up", "who", "Mark", "Harmon", "was", ".", "And", "Brad", "Rowe", "(", "Billy", "'s", "Hollywood", "Screen", "Kiss", "!", ")"]
# ::lemmas ["i", "just", "have", "to", "look", "up", "who", "Mark", "Harmon", "be", ".", "and", "Brad", "Rowe", "(", "Billy", "'s", "Hollywood", "Screen", "Kiss", "!", ")"]
(c31-2 / multi-sentence
       :snt1 (c31-0 / obligate-01
                    :ARG1 (c31-11 / i)
                    :ARG2 (c31-6 / look-up-05
                                 :ARG0 c31-11
                                 :ARG1 (c31-7 / person
                                              :name (c31-3 / name
                                                           :op1 "Mark"
                                                           :op2 "Harmon")))
                    :mod (c31-10 / just))
       :snt2 (c31-12 / and
                     :op2 (c31-4 / person
                                 :name (c31-5 / name
                                              :op1 "Brad"
                                              :op2 "Rowe")
                                 :mod (c31-1 / broadcast-program
                                             :name (c31-8 / name
                                                          :op1 "Hollywood"
                                                          :op2 " Screen"
                                                          :op3 "Kiss")
                                             :poss (c31-13 / person
                                                           :name (c31-9 / name
                                                                        :op1 "Billy"))))))

# ::snt this entire article is my favorite
# ::tokens ["this", "entire", "article", "is", "my", "favorite"]
# ::lemmas ["this", "entire", "article", "be", "my", "favorite"]
(c32-0 / favor-01
       :ARG0 (c32-3 / i)
       :ARG1 (c32-1 / article
                    :mod (c32-2 / entire)
                    :mod (c32-4 / this)))

# ::snt did you read the Mark Harmon-Kevin Costner graf? One of my favorites.
# ::tokens ["did", "you", "read", "the", "Mark", "Harmon", "-", "Kevin", "Costner", "graf", "?", "One", "of", "my", "favorites", "."]
# ::lemmas ["do", "you", "read", "the", "Mark", "Harmon", "-", "Kevin", "Costner", "graf", "?", "One", "of", "my", "favorite", "."]
(c33-3 / multi-sentence
       :snt1 (c33-7 / read-01
                    :ARG0 (c33-2 / you)
                    :ARG1 (c33-13 / graf
                                  :mod (c33-9 / person
                                              :name (c33-4 / name
                                                           :op1 "Mark"
                                                           :op2 "Harmon"))
                                  :mod (c33-5 / person
                                              :name (c33-8 / name
                                                           :op1 "Kevin"
                                                           :op2 "Costner")))
                    :polarity (c33-12 / amr-unknown))
       :snt2 (c33-11 / include-91
                     :ARG1 (c33-0 / one)
                     :ARG2 (c33-10 / thing
                                   :ARG1-of (c33-1 / favor-01
                                                   :ARG0 (c33-6 / i)))))

# ::snt you can be sexist no matter your sexual preference
# ::tokens ["you", "can", "be", "sexist", "no", "matter", "your", "sexual", "preference"]
# ::lemmas ["you", "can", "be", "sexist", "no", "matter", "your", "sexual", "preference"]
(c34-5 / possible-01
       :ARG1 (c34-3 / sexist
                    :domain (c34-1 / you))
       :ARG1-of (c34-4 / regardless-91
                       :ARG2 (c34-2 / prefer-01
                                    :ARG0 c34-1
                                    :manner (c34-0 / sex))))

# ::snt isn't Morris openly gay or have I just assumed that? Regardless, hated the review
# ::tokens ["is", "n't", "Morris", "openly", "gay", "or", "have", "I", "just", "assumed", "that", "?", "Regardless", ",", "hated", "the", "review"]
# ::lemmas ["be", "not", "Morris", "openly", "gay", "or", "have", "i", "just", "assume", "that", "?", "regardless", ",", "hate", "the", "review"]
(c35-2 / multi-sentence
       :snt1 (c35-8 / amr-choice
                    :op1 (c35-9 / gay-01
                                :ARG1 (c35-5 / person
                                             :name (c35-1 / name
                                                          :op1 "Morris"))
                                :ARG1-of (c35-0 / open-04))
                    :op2 (c35-7 / assume-02
                                :ARG0 (c35-10 / i)
                                :ARG1 c35-9
                                :mod (c35-6 / just)))
       :snt2 (c35-4 / hate-01
                    :ARG0 c35-10
                    :ARG1 (c35-3 / review-01)
                    :ARG1-of (c35-11 / regardless-91)))

# ::snt "I aspired to be turned down by Kate Hudson but now I have to aspire to be turned down by Blake Lively? Boo hoo!"
# ::tokens ["\"", "I", "aspired", "to", "be", "turned", "down", "by", "Kate", "Hudson", "but", "now", "I", "have", "to", "aspire", "to", "be", "turned", "down", "by", "Blake", "Lively", "?", "Boo", "hoo", "!", "\""]
# ::lemmas ["\"", "i", "aspire", "to", "be", "turn", "down", "by", "Kate", "Hudson", "but", "now", "i", "have", "to", "aspire", "to", "be", "turn", "down", "by", "Blake", "Lively", "?", "Boo", "hoo", "!", "\""]
(c36-2 / multi-sentence
       :snt1 (c36-9 / contrast-01
                    :ARG1 (c36-5 / aspire-01
                                 :ARG0 (c36-10 / i)
                                 :ARG1 (c36-11 / turn-down-05
                                               :ARG0 (c36-7 / person
                                                            :name (c36-3 / name
                                                                         :op1 "Kate"
                                                                         :op2 "Hudson"))
                                               :ARG1 c36-10))
                    :ARG2 (c36-0 / obligate-01
                                 :ARG1 c36-10
                                 :ARG2 (c36-12 / aspire-01
                                               :ARG0 c36-10
                                               :ARG1 (c36-13 / turn-down-05
                                                             :ARG0 (c36-4 / person
                                                                          :name (c36-6 / name
                                                                                       :op1 "Blake"
                                                                                       :op2 "Lively"))
                                                             :ARG1 c36-10))
                                 :time (c36-8 / now)))
       :snt2 (c36-1 / boo-hoo
                    :mode expressive))

# ::snt "NYT movie reviewer never got the girl of his dreams."
# ::tokens ["\"", "NYT", "movie", "reviewer", "never", "got", "the", "girl", "of", "his", "dreams", ".", "\""]
# ::lemmas ["\"", "nyt", "movie", "reviewer", "never", "get", "the", "girl", "of", "his", "dream", ".", "\""]
(c37-7 / get-01
       :ARG0 (c37-4 / person
                    :ARG0-of (c37-2 / review-01
                                    :ARG1 (c37-0 / movie))
                    :mod (c37-5 / city
                                :name (c37-1 / name
                                             :op1 "NYT")))
       :ARG1 (c37-6 / girl
                    :ARG1-of (c37-8 / dream-01
                                    :ARG0 c37-4))
       :time (c37-3 / ever)
       :polarity -)

# ::snt jeez that was gross
# ::tokens ["jeez", "that", "was", "gross"]
# ::lemmas ["jeez", "that", "be", "gross"]
(c38-0 / gross-05
       :ARG1 (c38-2 / that)
       :mod (c38-1 / jeez
                   :mode expressive))

# ::snt gross
# ::tokens ["gross"]
# ::lemmas ["gross"]
(c39-0 / gross)

# ::snt sameeeee
# ::tokens ["sameeeee"]
# ::lemmas ["sameeeee"]
(c40-0 / same-01)

# ::snt i legitimately died reading that
# ::tokens ["i", "legitimately", "died", "reading", "that"]
# ::lemmas ["i", "legitimately", "die", "read", "that"]
(c41-4 / die-01
       :ARG1 (c41-2 / i)
       :ARG1-of (c41-1 / legitimate-02)
       :manner (c41-0 / read-01
                      :ARG0 c41-2
                      :ARG1 (c41-3 / that)))

# ::snt entire article is fucking hilarious
# ::tokens ["entire", "article", "is", "fucking", "hilarious"]
# ::lemmas ["entire", "article", "be", "fucking", "hilarious"]
(c42-2 / hilarious
       :domain (c42-3 / article
                      :mod (c42-1 / entire))
       :mod (c42-0 / fucking))

# ::snt Also the first four paragraphs are gold
# ::tokens ["Also", "the", "first", "four", "paragraphs", "are", "gold"]
# ::lemmas ["also", "the", "first", "four", "paragraph", "be", "gold"]
(c43-0 / gold
       :domain (c43-2 / paragraph
                      :ord (c43-1 / ordinal-entity
                                  :value 1)
                      :quant 4)
       :mod (c43-3 / also))

# ::snt This article was hilarious!
# ::tokens ["This", "article", "was", "hilarious", "!"]
# ::lemmas ["this", "article", "be", "hilarious", "!"]
(c44-0 / hilarious
       :domain (c44-2 / article
                      :mod (c44-1 / this)))

# ::snt agree and i got bored with the review half way thru and walked out
# ::tokens ["agree", "and", "i", "got", "bored", "with", "the", "review", "half", "way", "thru", "and", "walked", "out"]
# ::lemmas ["agree", "and", "i", "get", "bored", "with", "the", "review", "half", "way", "thru", "and", "walk", "out"]
(c45-2 / and
       :op1 (c45-9 / agree-01
                   :ARG0 (c45-8 / i))
       :op2 (c45-6 / and
                   :op1 (c45-1 / bore-02
                               :ARG0 (c45-3 / review-01)
                               :ARG1 c45-8
                               :time (c45-7 / through
                                            :op1 (c45-4 / half)))
                   :op2 (c45-5 / walk-01
                               :ARG0 c45-8
                               :direction (c45-0 / out))))

# ::snt so? It's a bad review. I won a Loeb and if I wrote a sucky piece I would expect people to say so
# ::tokens ["so", "?", "It", "'s", "a", "bad", "review", ".", "I", "won", "a", "Loeb", "and", "if", "I", "wrote", "a", "sucky", "piece", "I", "would", "expect", "people", "to", "say", "so"]
# ::lemmas ["so", "?", "it", "be", "a", "bad", "review", ".", "i", "win", "a", "Loeb", "and", "if", "i", "write", "a", "sucky", "piece", "i", "would", "expect", "people", "to", "say", "so"]
(c46-2 / multi-sentence
       :snt1 (c46-4 / so
                    :polarity (c46-14 / amr-unknown))
       :snt2 (c46-6 / review
                    :ARG1-of (c46-1 / bad-07)
                    :domain (c46-13 / it))
       :snt3 (c46-15 / and
                     :op1 (c46-12 / win-01
                                  :ARG0 (c46-5 / i)
                                  :ARG1 (c46-9 / book
                                               :name (c46-3 / name
                                                            :op1 "Leb")))
                     :op2 (c46-8 / expect-01
                                 :ARG0 c46-5
                                 :ARG1 (c46-0 / say-01
                                              :ARG0 (c46-10 / person)
                                              :ARG1 c46-4)
                                 :condition (c46-11 / write-01
                                                    :ARG0 c46-5
                                                    :ARG1 (c46-7 / piece
                                                                 :ARG0-of (c46-16 / suck-03))))))

# ::snt he's a Pulitzer Prize winner.
# ::tokens ["he", "'s", "a", "Pulitzer", "Prize", "winner", "."]
# ::lemmas ["he", "be", "a", "Pulitzer", "Prize", "winner", "."]
(c47-2 / person
       :ARG0-of (c47-3 / win-01
                       :ARG1 (c47-4 / award
                                    :name (c47-0 / name
                                                 :op1 "Pulitzer"
                                                 :op2 "Prize")))
       :domain (c47-1 / he))

# ::snt sorry!
# ::tokens ["sorry", "!"]
# ::lemmas ["sorry", "!"]
(c48-0 / sorry-01
       :mode expressive)

# ::snt I was! Just not this
# ::tokens ["I", "was", "!", "Just", "not", "this"]
# ::lemmas ["i", "be", "!", "just", "not", "this"]
(c49-0 / multi-sentence
       :snt1 (c49-1 / event
                    :mod (c49-3 / i))
       :snt2 (c49-4 / this
                    :mod (c49-2 / just)
                    :polarity -))

# ::snt not a great piece, but Morris won a Pulitzer for at the globe, killed it at Grantland, and has done good work at NYT.
# ::tokens ["not", "a", "great", "piece", ",", "but", "Morris", "won", "a", "Pulitzer", "for", "at", "the", "globe", ",", "killed", "it", "at", "Grantland", ",", "and", "has", "done", "good", "work", "at", "NYT", "."]
# ::lemmas ["not", "a", "great", "piece", ",", "but", "Morris", "win", "a", "Pulitzer", "for", "at", "the", "globe", ",", "kill", "it", "at", "Grantland", ",", "and", "have", "do", "good", "work", "at", "NYT", "."]
(c50-7 / contrast-01
       :ARG1 (c50-3 / piece
                    :mod (c50-13 / great
                                 :polarity -))
       :ARG2 (c50-12 / and
                     :op1 (c50-8 / win-01
                                 :ARG0 (c50-1 / person
                                              :name (c50-0 / name
                                                           :op1 "Morris"))
                                 :ARG1 (c50-11 / award
                                               :name (c50-2 / name
                                                            :op1 "Pulitzer"))
                                 :ARG4 (c50-14 / globe))
                     :op2 (c50-4 / kill-01
                                 :ARG0 c50-1
                                 :ARG1 c50-11
                                 :location (c50-15 / university
                                                   :name (c50-5 / name
                                                                :op1 "Grantland")))
                     :op3 (c50-6 / work-01
                                 :ARG0 c50-1
                                 :ARG1-of (c50-16 / good-02)
                                 :location (c50-9 / publication
                                                  :name (c50-10 / name
                                                                :op1 "NYT")))))
