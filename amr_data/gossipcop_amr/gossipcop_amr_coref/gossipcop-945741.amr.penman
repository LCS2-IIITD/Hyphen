# ::snt great slot!
# ::tokens ["great", "slot", "!"]
# ::lemmas ["great", "slot", "!"]
(c1-1 / slot
      :mod (c1-0 / great)
      :mode expressive)

# ::snt ...Sand Demon, Tar Pit, Atom Smasher off top of my head.
# ::tokens ["...", "Sand", "Demon", ",", "Tar", "Pit", ",", "Atom", "Smasher", "off", "top", "of", "my", "head", "."]
# ::lemmas ["...", "Sand", "Demon", ",", "Tar", "Pit", ",", "Atom", "Smasher", "off", "top", "of", "my", "head", "."]
(c4-8 / and
      :op1 (c4-3 / person
                 :name (c4-0 / name
                             :op1 "Sand"
                             :op2 "Demon"))
      :op2 (c4-1 / person
                 :name (c4-2 / name
                             :op1 "Tar"
                             :op2 "Pit"))
      :op3 (c4-9 / person
                 :name (c4-4 / name
                             :op1 "Atom"
                             :op2 "smasher"))
      :location (c4-6 / top
                      :part-of (c4-5 / head
                                     :part-of (c4-7 / i))))

# ::snt Yes! Barry Allen has killed. Pre-Crisis he snapped Reverse-Flash's neck to stop him killing new fianc. On CW, a few...
# ::tokens ["Yes", "!", "Barry", "Allen", "has", "killed", ".", "Pre", "-", "Crisis", "he", "snapped", "Reverse", "-", "Flash", "'s", "neck", "to", "stop", "him", "killing", "new", "fianc", ".", "On", "CW", ",", "a", "few", "..."]
# ::lemmas ["yes", "!", "Barry", "Allen", "have", "kill", ".", "Pre", "-", "Crisis", "he", "snap", "Reverse", "-", "Flash", "'s", "neck", "to", "stop", "he", "kill", "new", "fianc", ".", "on", "CW", ",", "a", "few", "..."]
(c5-7 / multi-sentence
      :snt1 (c5-5 / kill-01
                  :ARG0 (c5-15 / person
                               :name (c5-14 / name
                                            :op1 "Barry"
                                            :op2 "Allen"))
                  :mode expressive)
      :snt2 (c5-0 / snap-01
                  :ARG0 (c5-4 / he)
                  :ARG1 (c5-9 / neck
                              :part-of (c5-8 / person
                                             :name (c5-16 / name
                                                          :op1 "Reverly-Flash")))
                  :purpose (c5-3 / stop-03
                                 :ARG0 c5-4
                                 :ARG1 c5-8
                                 :ARG2 (c5-12 / kill-01
                                              :ARG0 c5-8
                                              :ARG1 (c5-2 / person
                                                          :ARG0-of (c5-18 / have-rel-role-91
                                                                          :ARG1 c5-8
                                                                          :ARG2 (c5-13 / fiancee))
                                                          :ARG1-of (c5-11 / new-01))))
                  :time (c5-6 / before
                              :op1 (c5-10 / crisis)))
      :snt3 (c5-17 / few
                   :medium (c5-1 / broadcast-program
                                 :name (c5-19 / name
                                              :op1 "CW"))))

# ::snt : The CWs fall premiere dates have been revealed, including and
# ::tokens [":", "The", "CWs", "fall", "premiere", "dates", "have", "been", "revealed", ",", "including", "and"]
# ::lemmas [":", "the", "cw", "fall", "premiere", "date", "have", "be", "reveal", ",", "include", "and"]
(c6-3 / reveal-01
      :ARG1 (c6-7 / date
                  :time-of (c6-4 / premiere-01
                                 :ARG1 (c6-1 / broadcast-program
                                             :name (c6-2 / name
                                                         :op1 "The"
                                                         :op2 " CW"))
                                 :time (c6-5 / date-entity
                                             :season (c6-0 / fall)))
                  :ARG2-of (c6-6 / include-01)))

# ::snt soooooo exciting!
# ::tokens ["soooooo", "exciting", "!"]
# ::lemmas ["soooooo", "exciting", "!"]
(c7-0 / excite-01
      :degree (c7-1 / so))

# ::snt Pretty sure that's on the cards, and I'm expecting mid-season to set up for Legends of Tomorrow.
# ::tokens ["Pretty", "sure", "that", "'s", "on", "the", "cards", ",", "and", "I", "'m", "expecting", "mid", "-", "season", "to", "set", "up", "for", "Legends", "of", "Tomorrow", "."]
# ::lemmas ["pretty", "sure", "that", "be", "on", "the", "card", ",", "and", "i", "be", "expect", "mid", "-", "season", "to", "set", "up", "for", "Legends", "of", "Tomorrow", "."]
(c8-5 / and
      :op1 (c8-4 / sure-02
                 :ARG0 (c8-9 / i)
                 :ARG1 (c8-0 / on-the-card-00
                             :ARG1 (c8-10 / that))
                 :degree (c8-7 / pretty))
      :op2 (c8-6 / expect-01
                 :ARG0 c8-9
                 :ARG1 (c8-1 / set-up-03
                             :ARG1 (c8-8 / work-of-art
                                         :name (c8-2 / name
                                                     :op1 "Legends"
                                                     :op2 "of"
                                                     :op3 "Tomorrow"))
                             :time (c8-3 / midseason))))

# ::snt Wahey!!! Cannot wait! Wonder if they will have a crossover soon too
# ::tokens ["Wahey", "!", "!", "!", "Can", "not", "wait", "!", "Wonder", "if", "they", "will", "have", "a", "crossover", "soon", "too"]
# ::lemmas ["wahey", "!", "!", "!", "can", "not", "wait", "!", "wonder", "if", "they", "will", "have", "a", "crossover", "soon", "too"]
(c9-0 / multi-sentence
      :snt1 (c9-2 / hey
                  :mode expressive)
      :snt2 (c9-3 / possible-01
                  :ARG1 (c9-5 / wait-01
                              :ARG1 (c9-8 / i))
                  :polarity -)
      :snt3 (c9-4 / wonder-01
                  :ARG0 c9-8
                  :ARG1 (c9-7 / have-03
                              :ARG0 (c9-9 / they)
                              :ARG1 (c9-6 / crossover)
                              :time (c9-1 / soon)
                              :mod (c9-10 / too))))

# ::snt : The CWs fall premiere dates have been revealed, inc. and
# ::tokens [":", "The", "CWs", "fall", "premiere", "dates", "have", "been", "revealed", ",", "inc", ".", "and"]
# ::lemmas [":", "the", "cw", "fall", "premiere", "date", "have", "be", "reveal", ",", "inc", ".", "and"]
(c10-9 / and
       :op1 (c10-4 / reveal-01
                   :ARG1 (c10-10 / date
                                 :time-of (c10-7 / premiere-01
                                                 :ARG1 (c10-1 / broadcast-program
                                                              :name (c10-2 / name
                                                                           :op1 "The"
                                                                           :op2 " CW"))
                                                 :time (c10-8 / date-entity
                                                              :season (c10-0 / fall))))
                   :location (c10-3 / state
                                    :name (c10-6 / name
                                                 :op1 "Pennsylvania")))
       :op2 (c10-5 / et-cetera))

# ::snt I'm in your crew in gta5
# ::tokens ["I", "'m", "in", "your", "crew", "in", "gta5"]
# ::lemmas ["i", "be", "in", "your", "crew", "in", "gta5"]
(c11-5 / include-91
       :ARG1 (c11-3 / i)
       :ARG2 (c11-4 / crew
                    :poss (c11-1 / you)
                    :location (c11-0 / organization
                                     :name (c11-2 / name
                                                  :op1 "Gta5"))))

# ::snt YES!
# ::tokens ["YES", "!"]
# ::lemmas ["yes", "!"]
(c12-0 / yes)

# ::snt yawn when's Daredevil coming back?
# ::tokens ["yawn", "when", "'s", "Daredevil", "coming", "back", "?"]
# ::lemmas ["yawn", "when", "'s", "Daredevil", "come", "back", "?"]
(c13-4 / come-01
       :ARG1 (c13-3 / person
                    :name (c13-2 / name
                                 :op1 "Daredevil"))
       :direction (c13-0 / back)
       :time (c13-5 / amr-unknown)
       :mod (c13-1 / yawn
                   :mode expressive))

# ::snt look
# ::tokens ["look"]
# ::lemmas ["look"]
(c14-0 / look-01)

# ::snt one day later for arrow
# ::tokens ["one", "day", "later", "for", "arrow"]
# ::lemmas ["one", "day", "later", "for", "arrow"]
(c15-3 / after
       :quant (c15-1 / temporal-quantity
                     :unit (c15-0 / day)
                     :quant 1)
       :topic (c15-2 / arrow))

# ::snt October for flash
# ::tokens ["October", "for", "flash"]
# ::lemmas ["October", "for", "flash"]
(c16-0 / date-entity
       :ARG1-of (c16-1 / flash-02)
       :month 10)

# ::snt lads
# ::tokens ["lads"]
# ::lemmas ["lad"]
(c17-0 / lad)

# ::snt It's official Season will premiere /13/2011
# ::tokens ["It", "'s", "official", "Season", "will", "premiere", "/13/2011"]
# ::lemmas ["it", "be", "official", "Season", "will", "premiere", "/13/2011"]
(c18-2 / premiere-01
       :ARG1 (c18-1 / season
                    :mod (c18-0 / official)
                    :poss (c18-3 / it))
       :time (c18-4 / date-entity
                    :year 2011
                    :month 13
                    :day 13))

# ::snt still disappointed that The was pushed to next year, best show on CW in my opinion
# ::tokens ["still", "disappointed", "that", "The", "was", "pushed", "to", "next", "year", ",", "best", "show", "on", "CW", "in", "my", "opinion"]
# ::lemmas ["still", "disappoint", "that", "the", "be", "push", "to", "next", "year", ",", "good", "show", "on", "CW", "in", "my", "opinion"]
(c19-13 / disappoint-01
        :ARG0 (c19-8 / push-01
                     :ARG1 (c19-2 / broadcast-program
                                  :name (c19-4 / name
                                               :op1 "The"
                                               :op2 "Phoenix"))
                     :ARG2 (c19-3 / year
                                  :mod (c19-7 / next)))
        :ARG1 (c19-11 / i)
        :mod (c19-6 / still)
        :ARG1-of (c19-10 / cause-01
                         :ARG0 (c19-0 / show-04
                                      :ARG0 c19-2
                                      :ARG1-of (c19-9 / have-degree-91
                                                      :ARG2 (c19-12 / good-02
                                                                    :ARG1 c19-0)
                                                      :ARG3 (c19-5 / most)))
                         :ARG1-of (c19-1 / opine-01
                                         :ARG0 c19-11)))

# ::snt at most
# ::tokens ["at", "most"]
# ::lemmas ["at", "most"]
(c20-0 / at-most)

# ::snt Or maybe episodes later...
# ::tokens ["Or", "maybe", "episodes", "later", "..."]
# ::lemmas ["or", "maybe", "episode", "later", "..."]
(c21-0 / or
       :op2 (c21-2 / possible-01
                   :ARG1 (c21-1 / episode
                                :time (c21-3 / after
                                             :op1 (c21-4 / event)))))

# ::snt Marked, and the Countdown to The Boys Are Back In Town is on!!
# ::tokens ["Marked", ",", "and", "the", "Countdown", "to", "The", "Boys", "Are", "Back", "In", "Town", "is", "on", "!", "!"]
# ::lemmas ["mark", ",", "and", "the", "Countdown", "to", "The", "Boys", "Are", "Back", "In", "Town", "be", "on", "!", "!"]
(c22-5 / and
       :op1 (c22-2 / mark-01)
       :op2 (c22-0 / on-01
                   :ARG1 (c22-4 / countdown
                                :mod (c22-1 / broadcast-program
                                            :name (c22-3 / name
                                                         :op1 "The"
                                                         :op2 "Boys"
                                                         :op3 "Are"
                                                         :op4 "Back"
                                                         :op5 "In"
                                                         :op6 "Town")))))

# ::snt Or as I would like to call it, when we find out definitely that *our* Castiel comes back to Supernatural.
# ::tokens ["Or", "as", "I", "would", "like", "to", "call", "it", ",", "when", "we", "find", "out", "definitely", "that", "*", "our", "*", "Castiel", "comes", "back", "to", "Supernatural", "."]
# ::lemmas ["or", "as", "i", "would", "like", "to", "call", "it", ",", "when", "we", "find", "out", "definitely", "that", "*", "our", "*", "Castiel", "come", "back", "to", "Supernatural", "."]
(c23-0 / or
       :op2 (c23-2 / be-temporally-at-91
                   :ARG1 (c23-1 / find-out-03
                                :ARG0 (c23-10 / we)
                                :ARG1 (c23-9 / come-01
                                             :ARG1 (c23-6 / person
                                                          :name (c23-3 / name
                                                                       :op1 "Castiel"))
                                             :ARG4 (c23-5 / broadcast-program
                                                          :name (c23-7 / name
                                                                       :op1 "Supernatural"))
                                             :direction (c23-14 / back))
                                :mod (c23-12 / definite))
                   :ARG2 (c23-8 / like-02
                                :ARG0 (c23-11 / i)
                                :ARG1 (c23-13 / call-01
                                              :ARG0 c23-11
                                              :ARG1 (c23-4 / it)))))

# ::snt Hey,would appreciate it if you could RT st design &amp; am hoping its going become somewhat successful!
# ::tokens ["Hey", ",", "would", "appreciate", "it", "if", "you", "could", "RT", "st", "design", "&", "amp", ";", "am", "hoping", "its", "going", "become", "somewhat", "successful", "!"]
# ::lemmas ["hey", ",", "would", "appreciate", "it", "if", "you", "could", "RT", "st", "design", "&", "amp", ";", "be", "hope", "its", "go", "become", "somewhat", "successful", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-11 / appreciate-02
                     :ARG0 (c24-10 / i)
                     :ARG1 (c24-8 / possible-01
                                  :ARG1 (c24-3 / publication
                                               :name (c24-4 / name
                                                            :op1 "St"
                                                            :op2 "Design"
                                                            :op3 "&"
                                                            :op4 "amp")))
                     :mod (c24-7 / hey
                                 :mode expressive))
       :snt2 (c24-9 / hope-01
                    :ARG0 (c24-5 / i)
                    :ARG1 (c24-1 / become-01
                                 :ARG1 (c24-12 / it)
                                 :ARG2 (c24-6 / succeed-01
                                              :ARG0 c24-12
                                              :degree (c24-0 / somewhat)))))

# ::snt can't wait til the flash comes back so I can find out how badly Barry messed up the timeline by saving his mother
# ::tokens ["ca", "n't", "wait", "til", "the", "flash", "comes", "back", "so", "I", "can", "find", "out", "how", "badly", "Barry", "messed", "up", "the", "timeline", "by", "saving", "his", "mother"]
# ::lemmas ["can", "not", "wait", "til", "the", "flash", "come", "back", "so", "i", "can", "find", "out", "how", "badly", "Barry", "mess", "up", "the", "timeline", "by", "save", "his", "mother"]
(c25-10 / cause-01
        :ARG0 (c25-17 / wait-01
                      :ARG1 (c25-18 / i)
                      :time (c25-12 / until
                                    :op1 (c25-6 / come-01
                                                :ARG1 (c25-13 / flash)
                                                :direction (c25-7 / back))))
        :ARG1 (c25-15 / possible-01
                      :ARG1 (c25-16 / find-out-03
                                    :ARG0 c25-18
                                    :ARG1 (c25-5 / thing
                                                 :degree-of (c25-1 / bad-04
                                                                   :ARG1 (c25-8 / mess-up-02
                                                                                :ARG0 (c25-9 / person
                                                                                             :name (c25-14 / name
                                                                                                           :op1 "Barry"))
                                                                                :ARG1 (c25-11 / timeline)
                                                                                :manner (c25-0 / save-02
                                                                                               :ARG0 c25-9
                                                                                               :ARG1 (c25-2 / person
                                                                                                            :ARG0-of (c25-3 / have-rel-role-91
                                                                                                                            :ARG1 c25-9
                                                                                                                            :ARG2 (c25-4 / mother))))))))))

# ::snt ICYMI
# ::tokens ["ICYMI"]
# ::lemmas ["ICYMI"]
(c27-1 / island
       :name (c27-0 / name
                    :op1 "Miami"))

# ::snt We're not NOT saying that...
# ::tokens ["We", "'re", "not", "NOT", "saying", "that", "..."]
# ::lemmas ["we", "be", "not", "not", "say", "that", "..."]
(c29-2 / say-01
       :ARG0 (c29-0 / we)
       :ARG1 (c29-1 / that)
       :polarity -)

# ::snt If you're telling me to just stay in and order pizzas that whole week, I'm very much ok with that.
# ::tokens ["If", "you", "'re", "telling", "me", "to", "just", "stay", "in", "and", "order", "pizzas", "that", "whole", "week", ",", "I", "'m", "very", "much", "ok", "with", "that", "."]
# ::lemmas ["if", "you", "be", "tell", "i", "to", "just", "stay", "in", "and", "order", "pizza", "that", "whole", "week", ",", "i", "be", "very", "much", "ok", "with", "that", "."]
(c30-0 / okay-01
       :ARG0 (c30-11 / i)
       :ARG1 (c30-10 / tell-01
                     :ARG0 (c30-2 / you)
                     :ARG1 (c30-12 / and
                                   :op1 (c30-4 / stay-01
                                               :ARG1 c30-11
                                               :location (c30-5 / inside)
                                               :mod (c30-13 / just))
                                   :op2 (c30-1 / order-02
                                               :ARG0 c30-11
                                               :ARG1 (c30-7 / pizza))
                                   :duration (c30-9 / week
                                                    :mod (c30-8 / whole)))
                     :ARG2 c30-11)
       :degree (c30-3 / much
                      :degree (c30-6 / very))
       :condition c30-10)

# ::snt Is the same date for o.k
# ::tokens ["Is", "the", "same", "date", "for", "o.k"]
# ::lemmas ["be", "the", "same", "date", "for", "o.k"]
(c31-4 / date
       :ARG1-of (c31-1 / same-01)
       :polarity (c31-3 / amr-unknown)
       :beneficiary (c31-2 / person
                           :name (c31-0 / name
                                        :op1 "ossubu")))
