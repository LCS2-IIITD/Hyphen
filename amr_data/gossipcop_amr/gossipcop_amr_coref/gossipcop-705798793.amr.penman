# ::snt VERB YOU WISE DAN A MOFUCKER...TEACH YOUR PEERS TO BE MORE SELF ASSURED....AND DONT SAY STOP EATIN CHUCKEN
# ::tokens ["VERB", "YOU", "WISE", "DAN", "A", "MOFUCKER", "...", "TEACH", "YOUR", "PEERS", "TO", "BE", "MORE", "SELF", "ASSURED", "....", "AND", "DONT", "SAY", "STOP", "EATIN", "CHUCKEN"]
# ::lemmas ["verb", "you", "wise", "DAN", "A", "MOFUCKER", "...", "teach", "your", "peer", "to", "be", "more", "self", "assured", "....", "and", "dont", "say", "stop", "EATIN", "CHUCKEN"]
(c1-3 / multi-sentence
      :snt1 (c1-13 / decide-01
                   :ARG0 (c1-2 / you)
                   :ARG1 (c1-7 / make-01
                               :ARG0 c1-2
                               :ARG1 (c1-14 / MOFUCKER))
                   :mode imperative)
      :snt2 (c1-11 / teach-01
                   :ARG0 (c1-12 / you)
                   :ARG1 (c1-6 / employ-01
                               :ARG0 c1-12
                               :ARG1 c1-12
                               :ARG2-of (c1-8 / have-degree-91
                                              :ARG1 c1-12
                                              :ARG3 (c1-9 / more)))
                   :ARG2 c1-12
                   :mode imperative)
      :snt3 (c1-4 / say-01
                  :ARG0 (c1-0 / you)
                  :ARG1 (c1-1 / stop-01
                              :ARG1 (c1-10 / chuck
                                           :mod (c1-5 / apple)))
                  :polarity -
                  :mode imperative))

# ::snt Nice
# ::tokens ["Nice"]
# ::lemmas ["nice"]
(c2-0 / nice-01)

# ::snt Ruin The Friendship e Lonely no entraram no Top ?
# ::tokens ["Ruin", "The", "Friendship", "e", "Lonely", "no", "entraram", "no", "Top", "?"]
# ::lemmas ["Ruin", "the", "Friendship", "e", "Lonely", "no", "entraram", "no", "Top", "?"]
(c3-1 / multi-sentence
      :snt1 (c3-4 / work-of-art
                  :name (c3-0 / name
                              :op1 "Ruin"
                              :op2 "The"
                              :op3 "Friendship"
                              :op4 "E"
                              :op5 "Lonely"))
      :snt2 (c3-3 / entraram
                  :domain (c3-5 / top)
                  :polarity -)
      :polarity (c3-2 / amr-unknown))

# ::snt KKKKKKKKKKKKai eu gosto, acho bem danante
# ::tokens ["KKKKKKKKKKKKai", "eu", "gosto", ",", "acho", "bem", "danante"]
# ::lemmas ["KKKKKKKKKKKKai", "eu", "gosto", ",", "acho", "bem", "danante"]
(c4-5 / and
      :op1 (c4-4 / KKKKKKKKKKai
                 :mode expressive)
      :op2 (c4-6 / gosto
                 :mode expressive)
      :op3 (c4-0 / be-located-at-91
                 :ARG1 (c4-3 / person
                             :name (c4-1 / name
                                         :op1 "Dante"))
                 :ARG2 (c4-2 / here)))

# ::snt tem certeza que s o clipe ??
# ::tokens ["tem", "certeza", "que", "s", "o", "clipe", "?", "?"]
# ::lemmas ["tem", "certeza", "que", "s", "o", "clipe", "?", "?"]
(c5-0 / request-confirmation-91
      :ARG1 (c5-1 / clipe
                  :domain (c5-2 / amr-unintelligible
                                :value "tem")))

# ::snt hino carnavalesco. s o clipe que ruim
# ::tokens ["hino", "carnavalesco", ".", "s", "o", "clipe", "que", "ruim"]
# ::lemmas ["hino", "carnavalesco", ".", "s", "o", "clipe", "que", "ruim"]
(c6-2 / multi-sentence
      :snt1 (c6-4 / event
                  :name (c6-1 / name
                              :op1 "Hino"
                              :op2 "Carnavalesco"))
      :snt2 (c6-5 / clipe-01
                  :ARG0 (c6-0 / you)
                  :ARG1-of (c6-3 / request-confirmation-91)))

# ::snt E instruction boa... s teve um clip mal dirigido kkkk
# ::tokens ["E", "instruction", "boa", "...", "s", "teve", "um", "clip", "mal", "dirigido", "kkkk"]
# ::lemmas ["e", "instruction", "boa", "...", "s", "teve", "um", "clip", "mal", "dirigido", "kkkk"]
(c8-2 / multi-sentence
      :snt1 (c8-0 / boa
                  :snt2 (c8-7 / instruct-01
                              :mod (c8-3 / e))
                  :mode expressive)
      :snt3 (c8-5 / possible-01
                  :ARG1 (c8-4 / mind-05
                              :ARG0 (c8-1 / you)
                              :ARG1 (c8-8 / thing
                                          :ARG1-of (c8-6 / clip-01)
                                          :mod (c8-10 / mal
                                                      :op1 (c8-9 / dirigido))))
                  :polarity -))

# ::snt I belive nunca nem vi
# ::tokens ["I", "belive", "nunca", "nem", "vi"]
# ::lemmas ["i", "belive", "nunca", "nem", "vi"]
(c9-3 / say-01
      :ARG0 (c9-4 / i)
      :ARG1 (c9-0 / believe-01
                  :ARG0 c9-4
                  :ARG1 (c9-2 / nunca
                              :mode expressive))
      :ARG2 (c9-1 / you))

# ::snt algumas msicas do lbum entraram no top100, como SDL, YDDIFMA e Lonely
# ::tokens ["algumas", "msicas", "do", "lbum", "entraram", "no", "top100", ",", "como", "SDL", ",", "YDDIFMA", "e", "Lonely"]
# ::lemmas ["algumas", "msicas", "do", "lbum", "entraram", "no", "top100", ",", "como", "SDL", ",", "YDDIFMA", "e", "Lonely"]
(c10-2 / multi-sentence
       :snt1 (c10-12 / do-02
                     :ARG0 (c10-7 / company
                                  :name (c10-1 / name
                                               :op1 "algumas"
                                               :op2 "MSN"))
                     :ARG1 (c10-4 / music
                                  :name (c10-5 / name
                                               :op1 "Top100")))
       :snt2 (c10-3 / exemplify-01
                    :ARG0 (c10-11 / and
                                  :op1 (c10-13 / company
                                               :name (c10-6 / name
                                                            :op1 "SDL"))
                                  :op2 (c10-9 / company
                                              :name (c10-8 / name
                                                           :op1 "YDDIFMA"))
                                  :op3 (c10-0 / company
                                              :name (c10-10 / name
                                                            :op1 "Lonely"
                                                            :op2 "Mechanics")))))

# ::snt I believe e instruction kkkkk, pelo menos instruction hitou um pouco na Europa j I believe
# ::tokens ["I", "believe", "e", "instruction", "kkkkk", ",", "pelo", "menos", "instruction", "hitou", "um", "pouco", "na", "Europa", "j", "I", "believe"]
# ::lemmas ["i", "believe", "e", "instruction", "kkkkk", ",", "pelo", "menos", "instruction", "hitou", "um", "pouco", "na", "Europa", "j", "i", "believe"]
(c11-10 / believe-01
        :ARG0 (c11-18 / i)
        :ARG1 (c11-6 / and
                     :op1 (c11-1 / believe-01
                                 :ARG0 c11-18
                                 :ARG1 (c11-7 / thing
                                              :ARG1-of (c11-3 / instruct-01)
                                              :mod (c11-16 / e))
                                 :mod (c11-5 / kkkkk
                                             :mode expressive))
                     :op2 (c11-2 / believe-01
                                 :ARG0 c11-18
                                 :ARG1 (c11-14 / thing
                                               :ARG1-of (c11-8 / instruct-01)
                                               :mod (c11-17 / pelo
                                                            :op1 (c11-11 / man))))
                     :op3 (c11-4 / hit-02
                                 :ARG0 (c11-19 / thing
                                               :ARG1-of (c11-0 / instruct-01))
                                 :ARG1 (c11-12 / person
                                               :name (c11-15 / name
                                                             :op1 "Hitou"
                                                             :op2 "Um"
                                                             :op3 "Pouco")
                                               :ARG2-of c11-4)
                                 :name (c11-13 / name
                                               :op1 "Europa")))
        :op4 (c11-9 / believe-01
                    :ARG0 c11-18))

# ::snt Instruction
# ::tokens ["Instruction"]
# ::lemmas ["instruction"]
(c12-0 / educate-01)

# ::snt I understand your take, but that is what Nixon is saying: vote like Democrats used to vote...for labor and people over management and profit.
# ::tokens ["I", "understand", "your", "take", ",", "but", "that", "is", "what", "Nixon", "is", "saying", ":", "vote", "like", "Democrats", "used", "to", "vote", "...", "for", "labor", "and", "people", "over", "management", "and", "profit", "."]
# ::lemmas ["i", "understand", "your", "take", ",", "but", "that", "be", "what", "Nixon", "be", "say", ":", "vote", "like", "Democrats", "use", "to", "vote", "...", "for", "labor", "and", "people", "over", "management", "and", "profit", "."]
(c13-17 / contrast-01
        :ARG1 (c13-18 / understand-01
                      :ARG0 (c13-22 / i)
                      :ARG1 (c13-11 / take-04
                                    :ARG0 (c13-5 / you)))
        :ARG2 (c13-0 / say-01
                     :ARG0 (c13-21 / person
                                   :name (c13-19 / name
                                                 :op1 "Nixon"))
                     :ARG1 (c13-7 / vote-01
                                  :ARG1-of (c13-20 / resemble-01
                                                   :ARG2 (c13-2 / vote-01
                                                                :ARG0 (c13-14 / person
                                                                              :ARG0-of (c13-8 / have-org-role-91
                                                                                              :ARG1 (c13-4 / political-party
                                                                                                           :name (c13-15 / name
                                                                                                                         :op1 "Democratic"
                                                                                                                         :op2 "Party"))))
                                                                :time (c13-16 / use-03)
                                                                :purpose (c13-10 / and
                                                                                 :op1 (c13-1 / labor-01)
                                                                                 :op2 (c13-3 / person)
                                                                                 :ARG1-of (c13-6 / instead-of-91
                                                                                                 :ARG2 (c13-9 / and
                                                                                                              :op1 (c13-13 / manage-01)
                                                                                                              :op2 (c13-12 / profit-01)))))))))

# ::snt N ur family will be effected yrs come. By kavanaugh
# ::tokens ["N", "ur", "family", "will", "be", "effected", "yrs", "come", ".", "By", "kavanaugh"]
# ::lemmas ["N", "ur", "family", "will", "be", "effect", "yr", "come", ".", "by", "kavanaugh"]
(c14-3 / multi-sentence
       :snt1 (c14-9 / affect-01
                    :ARG1 (c14-0 / family
                                 :poss (c14-2 / you))
                    :time (c14-7 / come-01
                                 :ARG1 (c14-5 / multiple
                                              :op1 (c14-8 / temporal-quantity
                                                          :unit (c14-10 / year)
                                                          :quant 1)))
                    :polarity -)
       :snt2 (c14-1 / by
                    :op1 (c14-6 / person
                                :name (c14-4 / name
                                             :op1 "Kavanaugh"))))

# ::snt RightSaying "don't use google' is basically the same as saying don't use the internet
# ::tokens ["RightSaying", "\"", "do", "n't", "use", "google", "'", "is", "basically", "the", "same", "as", "saying", "do", "n't", "use", "the", "internet"]
# ::lemmas ["rightsaye", "\"", "do", "not", "use", "google", "'", "be", "basically", "the", "same", "as", "say", "do", "not", "use", "the", "internet"]
(c15-4 / same-01
       :ARG1 (c15-0 / say-01
                    :ARG1 (c15-8 / use-01
                                 :ARG0 (c15-2 / you)
                                 :ARG1 (c15-6 / company
                                              :name (c15-3 / name
                                                           :op1 "Google"))
                                 :polarity -
                                 :mode imperative))
       :ARG2 (c15-9 / say-01
                    :ARG1 (c15-5 / use-01
                                 :ARG0 c15-2
                                 :ARG1 (c15-7 / internet)
                                 :polarity -
                                 :mode imperative))
       :mod (c15-1 / basic))

# ::snt Imagine the phone company listening to your calls and deciding it doesnt like what you say and blocks some of your incoming or outgoing calls. Shadow banning. Imagine the post office sorting your mail and stopping the delivery of mail it doesn't want you to see, Google relevancy
# ::tokens ["Imagine", "the", "phone", "company", "listening", "to", "your", "calls", "and", "deciding", "it", "does", "nt", "like", "what", "you", "say", "and", "blocks", "some", "of", "your", "incoming", "or", "outgoing", "calls", ".", "Shadow", "banning", ".", "Imagine", "the", "post", "office", "sorting", "your", "mail", "and", "stopping", "the", "delivery", "of", "mail", "it", "does", "n't", "want", "you", "to", "see", ",", "Google", "relevancy"]
# ::lemmas ["imagine", "the", "phone", "company", "listen", "to", "your", "call", "and", "decide", "it", "do", "not", "like", "what", "you", "say", "and", "block", "some", "of", "your", "incoming", "or", "outgoing", "call", ".", "shadow", "ban", ".", "imagine", "the", "post", "office", "sort", "your", "mail", "and", "stop", "the", "delivery", "of", "mail", "it", "do", "not", "want", "you", "to", "see", ",", "Google", "relevancy"]
(c16-22 / multi-sentence
        :snt1 (c16-34 / imagine-01
                      :ARG0 (c16-10 / you)
                      :ARG1 (c16-15 / and
                                    :op1 (c16-4 / listen-01
                                                :ARG0 (c16-25 / company
                                                              :mod (c16-32 / phone))
                                                :ARG1 (c16-18 / call-02
                                                              :ARG0 c16-10))
                                    :op2 (c16-35 / decide-01
                                                 :ARG0 c16-25
                                                 :ARG1 (c16-26 / dislike-01
                                                               :ARG0 c16-25
                                                               :ARG1 (c16-14 / thing
                                                                             :ARG1-of (c16-1 / say-01
                                                                                             :ARG0 c16-10))))
                                    :op3 (c16-20 / block-01
                                                 :ARG0 c16-25
                                                 :ARG1 (c16-5 / call-02
                                                              :ARG0 c16-10
                                                              :quant (c16-7 / some)
                                                              :ARG1-of (c16-11 / include-91
                                                                               :ARG2 (c16-8 / or
                                                                                            :op1 (c16-28 / call-02
                                                                                                         :ARG0 c16-10
                                                                                                         :mod (c16-17 / incoming))
                                                                                            :op2 (c16-9 / call-02
                                                                                                        :ARG0 c16-10
                                                                                                        :mod (c16-19 / outgoing)))))))
                      :mode imperative)
        :snt2 (c16-3 / ban-01
                     :mod (c16-6 / shadow))
        :snt3 (c16-0 / imagine-01
                     :ARG0 (c16-16 / you)
                     :ARG1 (c16-13 / and
                                   :op1 (c16-30 / sort-01
                                                :ARG0 (c16-36 / office
                                                              :mod (c16-23 / post))
                                                :ARG1 (c16-12 / mail
                                                              :poss c16-16))
                                   :op2 (c16-2 / stop-01
                                               :ARG0 c16-36
                                               :ARG1 (c16-24 / deliver-01
                                                             :ARG1 (c16-27 / mail
                                                                           :ARG1-of (c16-21 / see-01
                                                                                            :ARG0 c16-16
                                                                                            :ARG1-of (c16-33 / want-01
                                                                                                             :ARG0 c16-16
                                                                                                             :polarity -))))))
                     :mod (c16-31 / relevancy
                                  :mod c16-25
                                  :name (c16-29 / name
                                                :op1 "Google"))
                     :mode imperative))

# ::snt Done and done
# ::tokens ["Done", "and", "done"]
# ::lemmas ["do", "and", "do"]
(c17-2 / and
       :op1 (c17-0 / do-02)
       :op2 (c17-1 / do-02))

# ::snt How about we make legislation placing them under the FCC? The FCC can update it's rules to include companies that attract x-number of bandwidth be regulated for political buas (insuring st ammendment rights are not infringed).
# ::tokens ["How", "about", "we", "make", "legislation", "placing", "them", "under", "the", "FCC", "?", "The", "FCC", "can", "update", "it", "'s", "rules", "to", "include", "companies", "that", "attract", "x", "-", "number", "of", "bandwidth", "be", "regulated", "for", "political", "buas", "(", "insuring", "st", "ammendment", "rights", "are", "not", "infringed", ")", "."]
# ::lemmas ["how", "about", "we", "make", "legislation", "place", "they", "under", "the", "FCC", "?", "the", "FCC", "can", "update", "it", "be", "rule", "to", "include", "company", "that", "attract", "x", "-", "number", "of", "bandwidth", "be", "regulate", "for", "political", "buas", "(", "insure", "st", "ammendment", "right", "be", "not", "infringe", ")", "."]
(c18-14 / multi-sentence
        :snt1 (c18-23 / propose-01
                      :ARG0 (c18-25 / we)
                      :ARG1 (c18-7 / make-01
                                   :ARG0 c18-25
                                   :ARG1 (c18-1 / legislate-01
                                                :ARG1 (c18-15 / place-01
                                                              :ARG1 (c18-10 / they)
                                                              :ARG2 (c18-11 / government-organization
                                                                            :name (c18-21 / name
                                                                                          :op1 "FCC"))))))
        :snt2 (c18-4 / possible-01
                     :ARG1 (c18-19 / update-01
                                   :ARG0 (c18-3 / government-organization
                                                :name (c18-16 / name
                                                              :op1 "FCC"))
                                   :ARG1 (c18-22 / rule
                                                 :poss c18-3)
                                   :ARG2 (c18-26 / include-01
                                                 :ARG1 (c18-18 / company
                                                               :ARG0-of (c18-9 / attract-01
                                                                               :ARG1 (c18-24 / number
                                                                                             :quant-of (c18-13 / bandwidth))))
                                                 :ARG2 (c18-5 / regulate-01
                                                              :ARG1 c18-18
                                                              :purpose (c18-0 / buam
                                                                              :mod (c18-2 / politics)))))
                     :ARG1-of (c18-20 / mean-01
                                      :ARG2 (c18-6 / insure-01
                                                   :ARG1 (c18-12 / infringe-01
                                                                 :ARG1 (c18-17 / right-05
                                                                               :ARG2 (c18-8 / amend-01))
                                                                 :polarity -)))))

# ::snt Watch Tucker Carlsons yesterdays show on tech tyranny. You are % correct
# ::tokens ["Watch", "Tucker", "Carlsons", "yesterdays", "show", "on", "tech", "tyranny", ".", "You", "are", "%", "correct"]
# ::lemmas ["Watch", "Tucker", "Carlsons", "yesterday", "show", "on", "tech", "tyranny", ".", "you", "be", "%", "correct"]
(c19-1 / multi-sentence
       :snt1 (c19-6 / watch-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-3 / show
                                 :poss (c19-5 / person
                                              :name (c19-2 / name
                                                           :op1 "Tucker"
                                                           :op2 "Carlsons"))
                                 :topic (c19-9 / tyranny
                                               :mod (c19-11 / tech))
                                 :time (c19-8 / today))
                    :mode imperative)
       :snt2 (c19-7 / correct-02
                    :ARG1 (c19-10 / you)
                    :degree (c19-4 / percentage-entity)))

# ::snt definitely anti-trust issues with our internet, that pay (equally, more or less) for access to. I, for one, want to be reimbursed by Google for the limits rendered against my paid access to use the internet!
# ::tokens ["definitely", "anti", "-", "trust", "issues", "with", "our", "internet", ",", "that", "pay", "(", "equally", ",", "more", "or", "less", ")", "for", "access", "to", ".", "I", ",", "for", "one", ",", "want", "to", "be", "reimbursed", "by", "Google", "for", "the", "limits", "rendered", "against", "my", "paid", "access", "to", "use", "the", "internet", "!"]
# ::lemmas ["definitely", "anti", "-", "trust", "issue", "with", "our", "internet", ",", "that", "pay", "(", "equally", ",", "more", "or", "less", ")", "for", "access", "to", ".", "i", ",", "for", "one", ",", "want", "to", "be", "reimburse", "by", "Google", "for", "the", "limit", "render", "against", "my", "pay", "access", "to", "use", "the", "internet", "!"]
(c20-9 / multi-sentence
       :snt1 (c20-17 / issue-02
                     :ARG0 (c20-4 / internet
                                  :poss (c20-16 / we)
                                  :ARG0-of (c20-15 / pay-01
                                                   :ARG3 (c20-7 / access-01
                                                                :ARG0 c20-16
                                                                :ARG1 c20-4)
                                                   :mod (c20-18 / definite)))
                     :ARG1 (c20-6 / trust)
                     :mod c20-18)
       :snt2 (c20-2 / want-01
                    :ARG0 (c20-8 / i)
                    :ARG1 (c20-14 / reimburse-01
                                  :ARG0 (c20-11 / company
                                                :name (c20-13 / name
                                                              :op1 "Google"))
                                  :ARG1 (c20-12 / thing
                                                :ARG1-of (c20-1 / limit-01)
                                                :ARG1-of (c20-3 / render-02
                                                                :prep-against (c20-5 / access-01
                                                                                     :ARG0 c20-8
                                                                                     :ARG1 (c20-0 / internet)
                                                                                     :ARG1-of (c20-10 / pay-01))))
                                  :ARG2 c20-8)
                    :li 1))

# ::snt Oh (big) brother we are done for. Regulate the bast*rds.
# ::tokens ["Oh", "(", "big", ")", "brother", "we", "are", "done", "for", ".", "Regulate", "the", "bast*rds", "."]
# ::lemmas ["oh", "(", "big", ")", "brother", "we", "be", "do", "for", ".", "regulate", "the", "bast*rd", "."]
(c21-4 / multi-sentence
       :snt1 (c21-2 / be-done-for-06
                    :ARG0 (c21-7 / we)
                    :mod (c21-6 / brother
                                :mod (c21-8 / big))
                    :mod (c21-0 / oh
                                :mode expressive))
       :snt2 (c21-5 / regulate-01
                    :ARG0 (c21-3 / you)
                    :ARG1 (c21-1 / bastard)
                    :mode imperative))

# ::snt Clearly goes to show he wasnt on board trading Teddy
# ::tokens ["Clearly", "goes", "to", "show", "he", "was", "nt", "on", "board", "trading", "Teddy"]
# ::lemmas ["clearly", "go", "to", "show", "he", "be", "not", "on", "board", "trading", "Teddy"]
(c22-2 / show-01
       :ARG1 (c22-0 / board-01
                    :ARG0 (c22-3 / he)
                    :ARG1 (c22-6 / trade-01
                                 :ARG0 c22-3
                                 :ARG1 (c22-4 / person
                                              :name (c22-1 / name
                                                           :op1 "Teddy")))
                    :polarity -)
       :ARG1-of (c22-5 / clear-06))

# ::snt Check back in two years ( vis--vis Hackenberg)
# ::tokens ["Check", "back", "in", "two", "years", "(", "vis", "--", "vis", "Hackenberg", ")"]
# ::lemmas ["check", "back", "in", "two", "years", "(", "vis", "--", "vis", "Hackenberg", ")"]
(c23-6 / check-01
       :ARG0 (c23-1 / you)
       :direction (c23-0 / back)
       :time (c23-8 / after
                    :op1 (c23-2 / now)
                    :quant (c23-7 / temporal-quantity
                                  :unit (c23-9 / year)
                                  :quant 2))
       :ARG1-of (c23-3 / vis-01
                       :ARG2 (c23-5 / person
                                    :name (c23-4 / name
                                                 :op1 "Hackenberg")))
       :mode imperative)

# ::snt Well said. . .
# ::tokens ["Well", "said", ".", ".", "."]
# ::lemmas ["well", "say", ".", ".", "."]
(c25-1 / say-01
       :manner (c25-0 / good-02))

# ::snt Know your place. Keep your place. Be a shoe.
# ::tokens ["Know", "your", "place", ".", "Keep", "your", "place", ".", "Be", "a", "shoe", "."]
# ::lemmas ["know", "your", "place", ".", "keep", "your", "place", ".", "be", "a", "shoe", "."]
(c26-2 / multi-sentence
       :snt1 (c26-6 / know-01
                    :ARG0 (c26-1 / you)
                    :ARG1 (c26-5 / place
                                 :poss c26-1)
                    :mode imperative)
       :snt2 (c26-8 / keep-01
                    :ARG0 (c26-7 / you)
                    :ARG1 (c26-3 / place
                                 :poss c26-7)
                    :mode imperative)
       :snt3 (c26-4 / shoe-01
                    :ARG0 (c26-0 / you)
                    :mode imperative))

# ::snt De verdad os lo digo, escuchad y disfrutad de este pedazo de vozarrones.
# ::tokens ["De", "verdad", "os", "lo", "digo", ",", "escuchad", "y", "disfrutad", "de", "este", "pedazo", "de", "vozarrones", "."]
# ::lemmas ["De", "verdad", "os", "lo", "digo", ",", "escuchad", "y", "disfrutad", "de", "este", "pedazo", "de", "vozarrone", "."]
(c27-6 / and
       :op1 (c27-0 / verdad
                   :mode expressive)
       :op2 (c27-7 / digo
                   :mode expressive)
       :op3 (c27-1 / escuchad)
       :op4 (c27-4 / disfrutad
                   :mode expressive)
       :op5 (c27-2 / pedazo
                   :mod (c27-3 / vozarrones)
                   :mod (c27-5 / this)))

# ::snt Thank you so much!!
# ::tokens ["Thank", "you", "so", "much", "!", "!"]
# ::lemmas ["thank", "you", "so", "much", "!", "!"]
(c28-5 / thank-01
       :ARG0 (c28-4 / i)
       :ARG1 (c28-0 / you)
       :ARG1-of (c28-3 / have-quant-91
                       :ARG2 (c28-1 / much)
                       :ARG3 (c28-2 / so)))

# ::snt it's kinda overrated, like beautiful lyrics and vocals, but yeah it has nothing special
# ::tokens ["it", "'s", "kinda", "overrated", ",", "like", "beautiful", "lyrics", "and", "vocals", ",", "but", "yeah", "it", "has", "nothing", "special"]
# ::lemmas ["it", "be", "kinda", "overrate", ",", "like", "beautiful", "lyric", "and", "vocal", ",", "but", "yeah", "it", "have", "nothing", "special"]
(c29-9 / contrast-01
       :ARG1 (c29-0 / overrate-01
                    :ARG1 (c29-10 / it)
                    :degree (c29-7 / kind-of)
                    :example (c29-11 / and
                                     :op1 (c29-8 / lyric)
                                     :op2 (c29-5 / voice)
                                     :ARG1-of (c29-1 / beautiful-02)))
       :ARG2 (c29-6 / have-03
                    :ARG0 c29-10
                    :ARG1 (c29-3 / nothing
                                 :ARG1-of (c29-4 / special-02))
                    :mod (c29-2 / yeah)))

# ::snt ...and then giving away a nd rounder in that trade aswell as wasting a rd rounder and th rounder on AJ McCarron &amp; Martavis Bryant. It's just a mess &amp; in -3 years will really regret picking Gruden over Mack.
# ::tokens ["...", "and", "then", "giving", "away", "a", "nd", "rounder", "in", "that", "trade", "aswell", "as", "wasting", "a", "rd", "rounder", "and", "th", "rounder", "on", "AJ", "McCarron", "&", "amp", ";", "Martavis", "Bryant", ".", "It", "'s", "just", "a", "mess", "&", "amp", ";", "in", "-3", "years", "will", "really", "regret", "picking", "Gruden", "over", "Mack", "."]
# ::lemmas ["...", "and", "then", "give", "away", "a", "nd", "rounder", "in", "that", "trade", "aswell", "as", "waste", "a", "rd", "rounder", "and", "th", "rounder", "on", "AJ", "McCarron", "&", "amp", ";", "Martavis", "Bryant", ".", "it", "be", "just", "a", "mess", "&", "amp", ";", "in", "-3", "years", "will", "really", "regret", "pick", "Gruden", "over", "Mack", "."]
(c30-16 / multi-sentence
        :snt1 (c30-12 / and
                      :op1 (c30-13 / give-away-02
                                   :ARG1 (c30-29 / person
                                                 :ARG0-of (c30-27 / round-03))
                                   :ARG2 (c30-11 / trade-01
                                                 :mod (c30-21 / that))
                                   :time (c30-34 / then)
                                   :mod (c30-10 / as-well))
                      :op2 (c30-31 / waste-01
                                   :ARG1 (c30-8 / and
                                                :op1 (c30-17 / person
                                                             :ARG0-of (c30-4 / round-03))
                                                :op2 (c30-3 / person
                                                            :ARG0-of (c30-19 / round-03)))
                                   :ARG2 (c30-36 / and
                                                 :op1 (c30-2 / person
                                                             :name (c30-26 / name
                                                                           :op1 "AJ"
                                                                           :op2 "McCarron"))
                                                 :op2 (c30-14 / person
                                                              :name (c30-18 / name
                                                                            :op1 "Martavis"
                                                                            :op2 "Bryant")))))
        :snt2 (c30-32 / and
                      :op1 (c30-7 / mess
                                  :domain (c30-35 / it)
                                  :mod (c30-9 / just))
                      :op2 (c30-37 / person
                                   :name (c30-30 / name
                                                 :op1 "amp")))
        :snt3 (c30-0 / regret-01
                     :ARG0 (c30-6 / i)
                     :ARG1 (c30-24 / pick-01
                                   :ARG0 c30-6
                                   :ARG1 (c30-22 / person
                                                 :name (c30-20 / name
                                                               :op1 "Gruden"))
                                   :ARG3 (c30-15 / person
                                                 :name (c30-33 / name
                                                               :op1 "Mack")))
                     :ARG1-of (c30-25 / real-04)
                     :time (c30-23 / after
                                   :op1 (c30-28 / now)
                                   :quant (c30-1 / temporal-quantity
                                                 :unit (c30-5 / year)
                                                 :quant 3))))

# ::snt Chris, Im wearing Nike shoes as I write. Probably not me.
# ::tokens ["Chris", ",", "I", "m", "wearing", "Nike", "shoes", "as", "I", "write", ".", "Probably", "not", "me", "."]
# ::lemmas ["Chris", ",", "i", "m", "wear", "Nike", "shoe", "as", "i", "write", ".", "probably", "not", "i", "."]
(c31-1 / multi-sentence
       :snt1 (c31-3 / say-01
                    :ARG0 (c31-10 / i)
                    :ARG1 (c31-9 / wear-01
                                 :ARG0 c31-10
                                 :ARG1 (c31-0 / shoe
                                              :name (c31-2 / name
                                                           :op1 "Nike"))
                                 :time (c31-8 / write-01
                                              :ARG0 c31-10))
                    :ARG2 (c31-7 / person
                                 :name (c31-6 / name
                                              :op1 "Chris")))
       :snt2 (c31-4 / probable
                    :domain c31-9
                    :ARG0 (c31-5 / i)
                    :ARG1 c31-0
                    :polarity -))

# ::snt I dont pretend to know anything Chris We dont need to try to label people when they use certain terminology do we ? If someone is a racist it will sadly be evident soon enough. Its an attempt to scare African-Americans for no other than political reasons. Sad
# ::tokens ["I", "do", "nt", "pretend", "to", "know", "anything", "Chris", "We", "do", "nt", "need", "to", "try", "to", "label", "people", "when", "they", "use", "certain", "terminology", "do", "we", "?", "If", "someone", "is", "a", "racist", "it", "will", "sadly", "be", "evident", "soon", "enough", ".", "Its", "an", "attempt", "to", "scare", "African", "-", "Americans", "for", "no", "other", "than", "political", "reasons", ".", "Sad"]
# ::lemmas ["i", "do", "not", "pretend", "to", "know", "anything", "Chris", "we", "do", "not", "need", "to", "try", "to", "label", "people", "when", "they", "use", "certain", "terminology", "do", "we", "?", "if", "someone", "be", "a", "racist", "it", "will", "sadly", "be", "evident", "soon", "enough", ".", "its", "an", "attempt", "to", "scare", "African", "-", "Americans", "for", "no", "other", "than", "political", "reason", ".", "sad"]
(c32-18 / multi-sentence
        :snt1 (c32-0 / say-01
                     :ARG0 (c32-32 / i)
                     :ARG1 (c32-29 / pretend-01
                                   :ARG0 c32-32
                                   :ARG1 (c32-12 / know-01
                                                 :ARG0 c32-32
                                                 :ARG1 (c32-15 / anything))
                                   :polarity -)
                     :ARG2 (c32-19 / person
                                   :name (c32-25 / name
                                                 :op1 "Chris")))
        :snt2 (c32-20 / need-01
                      :ARG0 (c32-31 / we)
                      :ARG1 (c32-14 / try-01
                                    :ARG0 c32-31
                                    :ARG1 (c32-2 / label-01
                                                 :ARG0 c32-31
                                                 :ARG1 (c32-5 / person)
                                                 :time (c32-24 / use-01
                                                               :ARG0 c32-5
                                                               :ARG1 (c32-23 / terminology
                                                                             :mod (c32-22 / certain)))))
                      :ARG1-of (c32-17 / cause-01
                                       :ARG0 (c32-27 / racist
                                                     :domain (c32-8 / someone)))
                      :ARG0-of (c32-7 / sad-02)
                      :time (c32-26 / soon
                                    :ARG2-of (c32-11 / have-degree-91
                                                     :ARG1 (c32-28 / evident
                                                                   :ARG3 (c32-16 / enough))))
                      :snt3 (c32-13 / attempt-01
                                    :ARG0 (c32-10 / it)
                                    :ARG1 (c32-1 / scare-01
                                                 :ARG0 c32-10
                                                 :ARG1 (c32-3 / person
                                                              :mod (c32-21 / ethnic-group
                                                                           :name (c32-30 / name
                                                                                         :op1 "African-American")))
                                                 :ARG1-of (c32-4 / cause-01
                                                                 :ARG0 (c32-6 / reason
                                                                              :mod (c32-9 / other
                                                                                          :polarity -))))
                                    :snt4 c32-7)
                      :polarity -))

# ::snt These remarks only serve to fan the dying flames of racism Just like the monkey up comment in Florida. Turns out progressive icons have used terminology almost identical or very similar. Its bad enough racism still exists its also bad when you look for it where it is not.
# ::tokens ["These", "remarks", "only", "serve", "to", "fan", "the", "dying", "flames", "of", "racism", "Just", "like", "the", "monkey", "up", "comment", "in", "Florida", ".", "Turns", "out", "progressive", "icons", "have", "used", "terminology", "almost", "identical", "or", "very", "similar", ".", "Its", "bad", "enough", "racism", "still", "exists", "its", "also", "bad", "when", "you", "look", "for", "it", "where", "it", "is", "not", "."]
# ::lemmas ["these", "remark", "only", "serve", "to", "fan", "the", "die", "flame", "of", "racism", "just", "like", "the", "monkey", "up", "comment", "in", "Florida", ".", "turn", "out", "progressive", "icon", "have", "use", "terminology", "almost", "identical", "or", "very", "similar", ".", "its", "bad", "enough", "racism", "still", "exist", "its", "also", "bad", "when", "you", "look", "for", "it", "where", "it", "be", "not", "."]
(c33-18 / multi-sentence
        :snt1 (c33-1 / serve-01
                     :ARG0 (c33-25 / remark-01
                                   :mod (c33-15 / this))
                     :ARG1 (c33-23 / fan-01
                                   :ARG0 c33-25
                                   :ARG1 (c33-28 / flame
                                                 :ARG1-of (c33-31 / die-01)
                                                 :mod (c33-5 / racism)))
                     :mod (c33-7 / only)
                     :ARG1-of (c33-19 / resemble-01
                                      :ARG2 (c33-20 / comment-01
                                                    :mod (c33-11 / monkey-up-00)
                                                    :location (c33-8 / state
                                                                     :name (c33-24 / name
                                                                                   :op1 "Florida")))))
        :snt2 (c33-21 / turn-out-11
                      :ARG1 (c33-22 / use-01
                                    :ARG0 (c33-29 / icon
                                                  :ARG1-of (c33-27 / progressive-02))
                                    :ARG1 (c33-30 / terminology
                                                  :ARG1-of (c33-10 / identical-01
                                                                   :mod (c33-16 / almost))
                                                  :ARG1-of c33-19
                                                  :mod c33-16)))
        :snt3 (c33-14 / and
                      :op1 (c33-0 / racism
                                  :ARG1-of (c33-12 / have-degree-91
                                                   :ARG2 (c33-17 / bad-07
                                                                 :ARG1 c33-0)
                                                   :ARG3 (c33-26 / enough)
                                                   :time (c33-6 / still)))
                      :op2 (c33-3 / bad-07
                                  :ARG1 c33-0
                                  :mod (c33-13 / also)
                                  :time (c33-4 / look-01
                                               :ARG0 (c33-9 / you)
                                               :ARG1 c33-0
                                               :location (c33-2 / thing
                                                                :polarity -)))))

# ::snt Spooks Chris ? Thats a pretty demeaning way to describe someone dont think ?
# ::tokens ["Spooks", "Chris", "?", "That", "s", "a", "pretty", "demeaning", "way", "to", "describe", "someone", "do", "nt", "think", "?"]
# ::lemmas ["Spooks", "Chris", "?", "that", "s", "a", "pretty", "demeaning", "way", "to", "describe", "someone", "do", "not", "think", "?"]
(c34-2 / multi-sentence
       :snt1 (c34-3 / spook-01
                    :ARG1 (c34-6 / person
                                 :name (c34-1 / name
                                              :op1 "Chris")))
       :snt2 (c34-9 / demean-01
                    :ARG0 (c34-7 / describe-01
                                 :ARG1 (c34-0 / someone
                                              :ARG0-of (c34-8 / think-01
                                                              :polarity -))
                                 :ARG2 (c34-10 / that))
                    :degree (c34-4 / pretty)
                    :polarity (c34-5 / amr-unknown)))

# ::snt Demeaning that is.
# ::tokens ["Demeaning", "that", "is", "."]
# ::lemmas ["Demeaning", "that", "be", "."]
(c35-1 / mean-01
       :ARG2 (c35-0 / demean-01))

# ::snt It was confirming to see the ruling class come together to bash Trump at McCains funeral.confirming once again that Trump is not part of their club and they are all in it together without question. As they unite to try and oust him before he dismantles their globalist designs..
# ::tokens ["It", "was", "confirming", "to", "see", "the", "ruling", "class", "come", "together", "to", "bash", "Trump", "at", "McCains", "funeral.confirming", "once", "again", "that", "Trump", "is", "not", "part", "of", "their", "club", "and", "they", "are", "all", "in", "it", "together", "without", "question", ".", "As", "they", "unite", "to", "try", "and", "oust", "him", "before", "he", "dismantles", "their", "globalist", "designs", ".."]
# ::lemmas ["it", "be", "confirm", "to", "see", "the", "rule", "class", "come", "together", "to", "bash", "Trump", "at", "McCains", "funeral.confirme", "once", "again", "that", "Trump", "be", "not", "part", "of", "their", "club", "and", "they", "be", "all", "in", "it", "together", "without", "question", ".", "as", "they", "unite", "to", "try", "and", "oust", "he", "before", "he", "dismantle", "their", "globalist", "design", ".."]
(c36-17 / multi-sentence
        :snt1 (c36-20 / confirm-01
                      :ARG0 (c36-29 / it)
                      :ARG1 (c36-0 / see-01
                                   :ARG1 (c36-13 / come-01
                                                 :ARG1 (c36-3 / class
                                                              :ARG0-of (c36-27 / rule-03))
                                                 :manner (c36-10 / together)
                                                 :purpose (c36-16 / bash-01
                                                                  :ARG0 c36-3
                                                                  :ARG1 (c36-28 / person
                                                                                :name (c36-26 / name
                                                                                              :op1 "Trump"))
                                                                  :location (c36-25 / funeral
                                                                                    :poss (c36-18 / person
                                                                                                  :name (c36-19 / name
                                                                                                                :op1 "McCains"))))))
                      :snt2-of c36-17)
        :ARG1 (c36-9 / and
                     :op1 (c36-6 / have-part-91
                                 :ARG1 (c36-24 / club
                                               :poss c36-3)
                                 :ARG2 c36-28
                                 :polarity -)
                     :op2 (c36-2 / be-located-at-91
                                 :ARG1 (c36-22 / they
                                               :mod (c36-8 / all))
                                 :ARG2 c36-24
                                 :manner (c36-30 / together)
                                 :ARG1-of (c36-11 / question-03
                                                  :polarity -)))
        :mod (c36-7 / again
                    :mod (c36-5 / once))
        :snt3 (c36-4 / be-temporally-at-91
                     :ARG2 (c36-23 / unite-01
                                   :ARG1 c36-22
                                   :ARG2 (c36-1 / try-01
                                                :ARG0 c36-22
                                                :ARG1 (c36-14 / oust-01
                                                              :ARG0 c36-22
                                                              :ARG1 c36-28
                                                              :time (c36-15 / before
                                                                            :op1 (c36-31 / dismantle-01
                                                                                         :ARG0 c36-28
                                                                                         :ARG1 (c36-21 / design-01
                                                                                                       :ARG0 c36-22
                                                                                                       :mod (c36-12 / globeist)))))))))

# ::snt murro na poc
# ::tokens ["murro", "na", "poc"]
# ::lemmas ["murro", "na", "poc"]
(c37-1 / na-poc
       :mod (c37-0 / murro))

# ::snt Nesse show se tivesse cem pessoas era muito tadinha gente
# ::tokens ["Nesse", "show", "se", "tivesse", "cem", "pessoas", "era", "muito", "tadinha", "gente"]
# ::lemmas ["Nesse", "show", "se", "tivesse", "cem", "pessoas", "era", "muito", "tadinha", "gente"]
(c38-2 / multi-sentence
       :snt1 (c38-3 / show-04
                    :ARG0 (c38-8 / country
                                 :name (c38-1 / name
                                              :op1 "Nesse")))
       :snt2 (c38-11 / give-16
                     :ARG0 (c38-9 / we)
                     :ARG1 (c38-5 / era
                                  :mod (c38-7 / pessoas))
                     :ARG2 c38-9)
       :snt3 (c38-4 / person
                    :ARG0-of (c38-0 / fuck-01
                                    :mode expressive)
                    :ARG0-of (c38-6 / have-rel-role-91
                                    :ARG2 (c38-10 / girlfriend))))

# ::snt aaaaaa
# ::tokens ["aaaaaa"]
# ::lemmas ["aaaaaa"]
(c40-0 / aha
       :mode expressive)

# ::snt A xtina super me
# ::tokens ["A", "xtina", "super", "me"]
# ::lemmas ["a", "xtina", "super", "i"]
(c41-2 / i
       :mod (c41-3 / super)
       :mod (c41-0 / country
                   :name (c41-1 / name
                                :op1 "Australia")))

# ::snt Oh wait Why Dont You Love Me....
# ::tokens ["Oh", "wait", "Why", "Do", "nt", "You", "Love", "Me", "...."]
# ::lemmas ["oh", "wait", "why", "do", "not", "you", "love", "i", "...."]
(c42-3 / wait-01
       :ARG1 (c42-1 / you)
       :mod (c42-0 / oh
                   :mode expressive)
       :ARG1-of (c42-4 / cause-01
                       :ARG0 (c42-6 / amr-unknown)
                       :ARG1 (c42-2 / love-01
                                    :ARG0 c42-1
                                    :ARG1 (c42-5 / i)
                                    :polarity -)))

# ::snt gurl, when she used a necklace as a tiara in the voice, she thought that kind of "creativity" is like the discovery of fire
# ::tokens ["gurl", ",", "when", "she", "used", "a", "necklace", "as", "a", "tiara", "in", "the", "voice", ",", "she", "thought", "that", "kind", "of", "\"", "creativity", "\"", "is", "like", "the", "discovery", "of", "fire"]
# ::lemmas ["gurl", ",", "when", "she", "use", "a", "necklace", "as", "a", "tiara", "in", "the", "voice", ",", "she", "think", "that", "kind", "of", "\"", "creativity", "\"", "be", "like", "the", "discovery", "of", "fire"]
(c43-2 / say-01
       :ARG1 (c43-10 / think-01
                     :ARG0 (c43-6 / person
                                  :name (c43-1 / name
                                               :op1 "Gurl"))
                     :ARG1 (c43-3 / resemble-01
                                  :ARG1 (c43-8 / creativity
                                               :mod (c43-7 / kind
                                                           :mod (c43-13 / that)))
                                  :ARG2 (c43-11 / discover-01
                                                :ARG1 (c43-0 / fire)))
                     :time (c43-12 / use-01
                                   :ARG0 c43-6
                                   :ARG1 (c43-5 / necklace)
                                   :ARG2 (c43-9 / tiara
                                                :location (c43-4 / voice))))
       :ARG2 c43-6)

# ::snt so adding songs is that super creative move shes referring to? god ill be so pissed.setlist is the arrangement &amp;the amateurish way she puts on a show.
# ::tokens ["so", "adding", "songs", "is", "that", "super", "creative", "move", "she", "s", "referring", "to", "?", "god", "ill", "be", "so", "pissed.setlist", "is", "the", "arrangement", "&", "amp;the", "amateurish", "way", "she", "puts", "on", "a", "show", "."]
# ::lemmas ["so", "add", "song", "be", "that", "super", "creative", "move", "she", "s", "refer", "to", "?", "god", "ill", "be", "so", "pissed.setlist", "be", "the", "arrangement", "&", "amp;the", "amateurish", "way", "she", "put", "on", "a", "show", "."]
(c44-11 / multi-sentence
        :snt1 (c44-5 / move-02
                     :polarity (c44-9 / amr-unknown)
                     :ARG0 (c44-0 / she)
                     :ARG1 (c44-7 / add-02
                                  :ARG0 c44-0
                                  :ARG1 (c44-4 / song))
                     :mod (c44-14 / creative
                                  :degree (c44-3 / super))
                     :ARG1-of (c44-18 / refer-01
                                      :ARG0 c44-0))
        :snt2 (c44-19 / piss-03
                      :ARG1 (c44-12 / person
                                    :name (c44-16 / name
                                                  :op1 "God"))
                      :degree (c44-17 / so))
        :snt3 (c44-6 / and
                     :op1 (c44-21 / arrange-01)
                     :op2 (c44-20 / amp)
                     :domain (c44-8 / thing
                                    :ARG2-of (c44-1 / set-list-01))
                     :manner (c44-2 / put-on-08
                                    :ARG0 (c44-10 / she)
                                    :ARG1 (c44-13 / show-04
                                                  :ARG0 c44-10)
                                    :mod (c44-15 / amateurish))))

# ::snt Sure we would be so surprised lmao
# ::tokens ["Sure", "we", "would", "be", "so", "surprised", "lmao"]
# ::lemmas ["sure", "we", "would", "be", "so", "surprised", "lmao"]
(c45-1 / surprise-01
       :ARG1 (c45-3 / we)
       :degree (c45-0 / so)
       :ARG1-of (c45-6 / sure-02)
       :ARG2-of (c45-2 / laugh-01
                       :ARG0 (c45-4 / i)
                       :manner (c45-5 / loud)
                       :mode expressive))

# ::snt I want some bionic, well some songs on lotus and hidden gema on back to basics ans her debut era and impossible on stripped
# ::tokens ["I", "want", "some", "bionic", ",", "well", "some", "songs", "on", "lotus", "and", "hidden", "gema", "on", "back", "to", "basics", "ans", "her", "debut", "era", "and", "impossible", "on", "stripped"]
# ::lemmas ["i", "want", "some", "bionic", ",", "well", "some", "song", "on", "lotus", "and", "hide", "gema", "on", "back", "to", "basic", "an", "her", "debut", "era", "and", "impossible", "on", "strip"]
(c46-11 / want-01
        :ARG0 (c46-12 / i)
        :ARG1 (c46-13 / and
                      :op1 (c46-3 / music
                                  :name (c46-2 / name
                                               :op1 "Bionic"
                                               :op2 "Song")
                                  :quant (c46-4 / some))
                      :op2 (c46-0 / song
                                  :name (c46-7 / name
                                               :op1 "Secret"
                                               :op2 "Gara")
                                  :quant (c46-16 / some)
                                  :location (c46-14 / and
                                                    :op1 (c46-1 / back
                                                                :op1 (c46-8 / basic))
                                                    :op2 (c46-6 / era
                                                                :time-of (c46-15 / debut-01
                                                                                 :ARG0 (c46-5 / she)))))
                      :op3 (c46-9 / possible-01
                                  :ARG1 (c46-10 / strip-01
                                                :ARG1 c46-5)
                                  :polarity -)))

# ::snt sensato
# ::tokens ["sensato"]
# ::lemmas ["sensato"]
(c47-1 / person
       :name (c47-0 / name
                    :op1 "sensato"))

# ::snt fall in line
# ::tokens ["fall", "in", "line"]
# ::lemmas ["fall", "in", "line"]
(c48-0 / fall-07
       :ARG2 (c48-1 / line))

# ::snt S um mesmo
# ::tokens ["S", "um", "mesmo"]
# ::lemmas ["s", "um", "mesmo"]
(c49-0 / um
       :mod (c49-1 / mesmo))

# ::snt dois hinos
# ::tokens ["dois", "hinos"]
# ::lemmas ["dois", "hinos"]
(c50-0 / dois
       :mode expressive)
