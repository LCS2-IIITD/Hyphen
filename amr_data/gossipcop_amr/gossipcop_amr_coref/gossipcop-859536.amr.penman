# ::snt Rip Danny I watched that show
# ::tokens ["Rip", "Danny", "I", "watched", "that", "show"]
# ::lemmas ["Rip", "Danny", "i", "watch", "that", "show"]
(c1-2 / say-01
      :ARG0 (c1-5 / i)
      :ARG1 (c1-4 / watch-01
                  :ARG0 c1-5
                  :ARG1 (c1-0 / show-04
                              :mod (c1-6 / that)))
      :ARG2 (c1-3 / person
                  :name (c1-1 / name
                              :op1 "Danny")))

# ::snt Omg
# ::tokens ["Omg"]
# ::lemmas ["Omg"]
(c2-0 / oh-my-god
      :mode expressive)

# ::snt im thinking maggie or my shitty pilot star wars dnd podcast.
# ::tokens ["i", "m", "thinking", "maggie", "or", "my", "shitty", "pilot", "star", "wars", "dnd", "podcast", "."]
# ::lemmas ["i", "m", "think", "maggie", "or", "my", "shitty", "pilot", "star", "war", "dnd", "podcast", "."]
(c3-8 / think-01
      :ARG0 (c3-7 / i)
      :ARG1 (c3-0 / or
                  :op1 (c3-3 / magazine
                             :name (c3-2 / name
                                         :op1 "Maggie"))
                  :op2 (c3-9 / thing
                             :name c3-2
                             :op1 "Star"
                             :op2 "Wars")
                  :mod (c3-6 / pilot-01)
                  :mod (c3-4 / shitty)
                  :poss c3-7
                  :mod (c3-5 / podcast
                             :mod (c3-1 / second))))

# ::snt Never heard of him but may he rip.
# ::tokens ["Never", "heard", "of", "him", "but", "may", "he", "rip", "."]
# ::lemmas ["never", "hear", "of", "he", "but", "may", "he", "rip", "."]
(c4-4 / contrast-01
      :ARG1 (c4-2 / hear-01
                  :ARG1 (c4-5 / he)
                  :time (c4-1 / ever)
                  :polarity -)
      :ARG2 (c4-3 / permit-01
                  :ARG1 (c4-0 / rip-01
                              :ARG0 c4-5)
                  :ARG2 c4-5))

# ::snt Very sad
# ::tokens ["Very", "sad"]
# ::lemmas ["very", "sad"]
(c5-1 / sad-02
      :degree (c5-0 / very))

# ::snt years old!
# ::tokens ["years", "old", "!"]
# ::lemmas ["years", "old", "!"]
(c6-3 / age-01
      :ARG2 (c6-2 / multiple
                  :op1 (c6-0 / temporal-quantity
                             :unit (c6-1 / year)
                             :quant 1)))

# ::snt He sure was young to die!
# ::tokens ["He", "sure", "was", "young", "to", "die", "!"]
# ::lemmas ["he", "sure", "be", "young", "to", "die", "!"]
(c7-0 / young
      :ARG1-of (c7-1 / sure-02)
      :ARG0-of (c7-3 / cause-01
                     :ARG1 (c7-4 / die-01
                                 :ARG1 (c7-2 / he
                                             :domain-of c7-0))))

# ::snt Drugs killRIP
# ::tokens ["Drugs", "killRIP"]
# ::lemmas ["drug", "killrip"]
(c8-2 / kill-01
      :ARG0 (c8-0 / drug)
      :ARG1 (c8-1 / you)
      :manner (c8-3 / peace))
