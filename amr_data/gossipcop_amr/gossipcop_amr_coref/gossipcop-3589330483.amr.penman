# ::snt What an idiot
# ::tokens ["What", "an", "idiot"]
# ::lemmas ["what", "an", "idiot"]
(c1-0 / idiot
      :degree (c1-1 / so))

# ::snt woof woof...,sorry, I'm dyslexic
# ::tokens ["woof", "woof", "...", ",sorry", ",", "I", "'m", "dyslexic"]
# ::lemmas ["woof", "woof", "...", ",sorry", ",", "i", "be", "dyslexic"]
(c2-3 / sorry-01
      :ARG1 (c2-2 / i)
      :ARG2 (c2-0 / dyslexic
                  :domain c2-2)
      :mod (c2-1 / woof
                 :mode expressive))

# ::snt Look in the toilet before you flush it; after you sit on it for an hour. Just be sure to flush it.
# ::tokens ["Look", "in", "the", "toilet", "before", "you", "flush", "it", ";", "after", "you", "sit", "on", "it", "for", "an", "hour", ".", "Just", "be", "sure", "to", "flush", "it", "."]
# ::lemmas ["look", "in", "the", "toilet", "before", "you", "flush", "it", ";", "after", "you", "sit", "on", "it", "for", "an", "hour", ".", "just", "be", "sure", "to", "flush", "it", "."]
(c3-4 / multi-sentence
      :snt1 (c3-9 / look-01
                  :ARG0 (c3-3 / you)
                  :ARG1 (c3-15 / toilet)
                  :time (c3-2 / before
                              :op1 (c3-1 / flush-01
                                         :ARG0 c3-3
                                         :ARG1 c3-15))
                  :mode imperative)
      :snt2 (c3-8 / be-temporally-at-91
                  :ARG1 (c3-10 / flush-01
                               :ARG0 (c3-16 / you)
                               :ARG1 c3-15
                               :duration (c3-17 / temporal-quantity
                                                :unit (c3-11 / hour)
                                                :quant 1))
                  :ARG2 (c3-6 / after
                              :op1 (c3-5 / sit-01
                                         :ARG1 c3-16
                                         :ARG2 c3-15
                                         :duration c3-17)))
      :snt3 (c3-7 / ensure-01
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-12 / flush-01
                               :ARG0 c3-0
                               :ARG1 (c3-14 / it))
                  :mod (c3-13 / just)
                  :mode imperative))

# ::snt That's a definite sign she shouldn't.
# ::tokens ["That", "'s", "a", "definite", "sign", "she", "should", "n't", "."]
# ::lemmas ["that", "be", "a", "definite", "sign", "she", "should", "not", "."]
(c4-1 / signal-07
      :ARG0 (c4-3 / that)
      :ARG1 (c4-2 / recommend-01
                  :ARG2 (c4-0 / she)
                  :polarity -)
      :mod (c4-4 / definite))

# ::snt God help us !
# ::tokens ["God", "help", "us", "!"]
# ::lemmas ["God", "help", "we", "!"]
(c5-1 / help-01
      :ARG0 (c5-2 / person
                  :name (c5-0 / name
                              :op1 "God"))
      :ARG2 (c5-3 / we)
      :mode imperative)

# ::snt He dont exist Oprah......
# ::tokens ["He", "do", "nt", "exist", "Oprah", "......"]
# ::lemmas ["he", "do", "not", "exist", "Oprah", "......"]
(c6-1 / say-01
      :ARG0 (c6-4 / i)
      :ARG1 (c6-2 / exist-01
                  :ARG1 (c6-3 / person
                              :name (c6-0 / name
                                          :op1 "Oprah")
                              :ARG2-of c6-1)
                  :polarity -))

# ::snt America broke a mirror
# ::tokens ["America", "broke", "a", "mirror"]
# ::lemmas ["America", "break", "a", "mirror"]
(c7-2 / break-01
      :ARG0 (c7-1 / country
                  :name (c7-3 / name
                              :op1 "America"))
      :ARG1 (c7-0 / mirror))

# ::snt The sign is Trump saying he will run again.
# ::tokens ["The", "sign", "is", "Trump", "saying", "he", "will", "run", "again", "."]
# ::lemmas ["the", "sign", "be", "Trump", "say", "he", "will", "run", "again", "."]
(c8-2 / signal-07
      :ARG1 (c8-0 / say-01
                  :ARG0 (c8-4 / person
                              :name (c8-1 / name
                                          :op1 "Trump"))
                  :ARG1 (c8-3 / run-02
                              :ARG0 c8-4
                              :mod (c8-5 / again))))

# ::snt Absolutely delusional
# ::tokens ["Absolutely", "delusional"]
# ::lemmas ["absolutely", "delusional"]
(c9-0 / delusional
      :degree (c9-1 / absolute))

# ::snt About right the make believe world.
# ::tokens ["About", "right", "the", "make", "believe", "world", "."]
# ::lemmas ["about", "right", "the", "make", "believe", "world", "."]
(c10-1 / world
       :mod (c10-2 / make-believe-24)
       :ARG1-of (c10-3 / right-06
                       :degree (c10-0 / about)))

# ::snt Well what will all the atheists do if she runs because she got a sign from God? Surely they won't be able to vote for her!
# ::tokens ["Well", "what", "will", "all", "the", "atheists", "do", "if", "she", "runs", "because", "she", "got", "a", "sign", "from", "God", "?", "Surely", "they", "wo", "n't", "be", "able", "to", "vote", "for", "her", "!"]
# ::lemmas ["well", "what", "will", "all", "the", "atheist", "do", "if", "she", "run", "because", "she", "get", "a", "sign", "from", "God", "?", "surely", "they", "will", "not", "be", "able", "to", "vote", "for", "she", "!"]
(c11-1 / multi-sentence
       :snt1 (c11-15 / do-02
                     :ARG0 (c11-13 / atheist
                                   :mod (c11-12 / all))
                     :ARG1 (c11-10 / amr-unknown)
                     :condition (c11-5 / run-02
                                       :ARG0 (c11-3 / she)
                                       :ARG1-of (c11-9 / cause-01
                                                       :ARG0 (c11-14 / get-01
                                                                     :ARG0 c11-3
                                                                     :ARG1 (c11-0 / signal-07
                                                                                  :ARG0 (c11-8 / person
                                                                                               :name (c11-2 / name
                                                                                                            :op1 "God"))
                                                                                  :ARG2 c11-3))))
                     :mod (c11-11 / well))
       :snt2 (c11-16 / sure-02
                     :ARG1 (c11-4 / possible-01
                                  :ARG1 (c11-6 / vote-01
                                               :ARG0 c11-13
                                               :ARG1 (c11-7 / she))
                                  :polarity -)))

# ::snt she may be waiting a while then.
# ::tokens ["she", "may", "be", "waiting", "a", "while", "then", "."]
# ::lemmas ["she", "may", "be", "wait", "a", "while", "then", "."]
(c12-1 / possible-01
       :ARG1 (c12-3 / wait-01
                    :ARG1 (c12-0 / she)
                    :duration (c12-2 / while)
                    :time (c12-4 / then)))

# ::snt Just for the record God is the numerical and mathematical symbol zero its why nothing can be added or taken from God zero zip zilch nada a big fat Just thought you should know that
# ::tokens ["Just", "for", "the", "record", "God", "is", "the", "numerical", "and", "mathematical", "symbol", "zero", "its", "why", "nothing", "can", "be", "added", "or", "taken", "from", "God", "zero", "zip", "zilch", "nada", "a", "big", "fat", "Just", "thought", "you", "should", "know", "that"]
# ::lemmas ["just", "for", "the", "record", "God", "be", "the", "numerical", "and", "mathematical", "symbol", "zero", "its", "why", "nothing", "can", "be", "add", "or", "take", "from", "God", "zero", "zip", "zilch", "nada", "a", "big", "fat", "just", "think", "you", "should", "know", "that"]
(c13-11 / multi-sentence
        :snt1 (c13-0 / symbolize-01
                     :ARG1 (c13-22 / person
                                   :name (c13-19 / name
                                                 :op1 "God"))
                     :ARG2 (c13-8 / and
                                  :op1 (c13-13 / numerical)
                                  :op2 (c13-3 / mathematics))
                     :mod (c13-6 / just))
        :snt2 (c13-14 / cause-01
                      :ARG0 (c13-7 / amr-unknown)
                      :ARG1 (c13-12 / possible-01
                                    :ARG1 (c13-1 / or
                                                 :op1 (c13-5 / add-02
                                                             :ARG1 (c13-23 / nothing)
                                                             :ARG2 c13-22)
                                                 :op2 (c13-9 / take-01
                                                             :ARG1 c13-23
                                                             :ARG2 c13-22))))
        :snt3 (c13-21 / zip
                      :polarity -)
        :snt4 (c13-15 / nada)
        :snt5 (c13-18 / fat
                      :mod (c13-10 / big))
        :snt6 (c13-16 / think-01
                      :ARG0 (c13-24 / i)
                      :ARG1 (c13-20 / recommend-01
                                    :ARG1 (c13-4 / know-01
                                                 :ARG0 (c13-2 / you)
                                                 :ARG1 (c13-25 / that)))
                      :mod (c13-17 / just)))

# ::snt Here is a compilation why you should not
# ::tokens ["Here", "is", "a", "compilation", "why", "you", "should", "not"]
# ::lemmas ["here", "be", "a", "compilation", "why", "you", "should", "not"]
(c15-4 / thing
       :ARG0-of (c15-3 / cause-01
                       :ARG1 (c15-1 / recommend-01
                                    :ARG2 (c15-0 / you)
                                    :polarity -))
       :ARG2-of (c15-5 / compile-01)
       :location (c15-2 / here))

# ::snt Thet should prove she's not mentally competent to be president: waiting for a sign from an imaginary friend FFS
# ::tokens ["Thet", "should", "prove", "she", "'s", "not", "mentally", "competent", "to", "be", "president", ":", "waiting", "for", "a", "sign", "from", "an", "imaginary", "friend", "FFS"]
# ::lemmas ["thet", "should", "prove", "she", "be", "not", "mentally", "competent", "to", "be", "president", ":", "wait", "for", "a", "sign", "from", "an", "imaginary", "friend", "FFS"]
(c16-1 / multi-sentence
       :snt1 (c16-5 / recommend-01
                    :ARG1 (c16-7 / prove-01
                                 :ARG0 (c16-2 / person
                                              :name (c16-3 / name
                                                           :op1 "Thet"))
                                 :ARG1 (c16-10 / competent-01
                                               :ARG1 c16-2
                                               :ARG2 (c16-6 / have-org-role-91
                                                            :ARG0 c16-2
                                                            :ARG2 (c16-15 / president))
                                               :mod (c16-8 / mental)
                                               :polarity -)))
       :snt2 (c16-11 / wait-01
                     :ARG1 (c16-12 / person
                                   :name (c16-9 / name
                                                :op1 "FFS")
                                   :ARG0-of (c16-13 / have-rel-role-91
                                                    :ARG2 (c16-0 / friend))
                                   :mod (c16-14 / imaginary))
                     :ARG2 (c16-4 / sign)))

# ::snt Any comments, ?
# ::tokens ["Any", "comments", ",", "?"]
# ::lemmas ["any", "comment", ",", "?"]
(c17-0 / comment-01
       :polarity (c17-2 / amr-unknown)
       :mod (c17-1 / any))

# ::snt Has she tried LSD?
# ::tokens ["Has", "she", "tried", "LSD", "?"]
# ::lemmas ["have", "she", "try", "LSD", "?"]
(c18-3 / try-01
       :ARG0 (c18-2 / she)
       :ARG1 (c18-0 / small-molecule
                    :name (c18-1 / name
                                 :op1 "LSD"))
       :polarity (c18-4 / amr-unknown))

# ::snt Basically till God comes down, she ain't running, rrright? Sometimes the voice of the people can be the voice from God. She's nice and everything but I will not vote for her if she decides to run.
# ::tokens ["Basically", "till", "God", "comes", "down", ",", "she", "ai", "n't", "running", ",", "rrright", "?", "Sometimes", "the", "voice", "of", "the", "people", "can", "be", "the", "voice", "from", "God", ".", "She", "'s", "nice", "and", "everything", "but", "I", "will", "not", "vote", "for", "her", "if", "she", "decides", "to", "run", "."]
# ::lemmas ["basically", "till", "God", "come", "down", ",", "she", "be", "not", "run", ",", "rrright", "?", "sometimes", "the", "voice", "of", "the", "people", "can", "be", "the", "voice", "from", "God", ".", "she", "be", "nice", "and", "everything", "but", "i", "will", "not", "vote", "for", "she", "if", "she", "decide", "to", "run", "."]
(c19-10 / multi-sentence
        :snt1 (c19-16 / run-02
                      :ARG0 (c19-0 / she)
                      :time (c19-6 / till
                                   :op1 (c19-14 / come-down-23
                                                :ARG1 (c19-17 / person
                                                              :name (c19-15 / name
                                                                            :op1 "God")))
                                   :mod (c19-9 / basic))
                      :ARG1-of (c19-2 / request-confirmation-91)
                      :polarity -)
        :snt2 (c19-11 / possible-01
                      :ARG1 (c19-5 / voice
                                   :source c19-17
                                   :domain (c19-1 / voice
                                                  :poss c19-17))
                      :frequency (c19-4 / sometimes))
        :snt3 (c19-8 / contrast-01
                     :ARG1 (c19-12 / nice-01
                                   :ARG1 (c19-3 / she))
                     :ARG2 (c19-7 / vote-01
                                  :ARG0 (c19-18 / i)
                                  :ARG1 c19-3
                                  :condition (c19-19 / decide-01
                                                     :ARG0 c19-3
                                                     :ARG1 (c19-13 / run-02
                                                                   :ARG0 c19-3))
                                  :polarity -)))

# ::snt Isn't God the POTUS now? He seems to think so. Or at least he thinks he's God's gift to humanity
# ::tokens ["Is", "n't", "God", "the", "POTUS", "now", "?", "He", "seems", "to", "think", "so", ".", "Or", "at", "least", "he", "thinks", "he", "'s", "God", "'s", "gift", "to", "humanity"]
# ::lemmas ["be", "not", "God", "the", "POTUS", "now", "?", "he", "seem", "to", "think", "so", ".", "or", "at", "least", "he", "think", "he", "be", "God", "'s", "gift", "to", "humanity"]
(c20-10 / multi-sentence
        :snt1 (c20-4 / have-org-role-91
                     :ARG0 (c20-17 / person
                                   :name (c20-16 / name
                                                 :op1 "God"))
                     :ARG1 (c20-13 / country
                                   :name (c20-12 / name
                                                 :op1 "United"
                                                 :op2 "States"))
                     :ARG2 (c20-11 / president)
                     :time (c20-18 / now)
                     :polarity (c20-8 / amr-unknown)
                     :polarity -)
        :snt2 (c20-0 / seem-01
                     :ARG1 (c20-7 / think-01
                                  :ARG0 (c20-19 / he)
                                  :ARG1 (c20-1 / so)))
        :snt3 (c20-2 / or
                     :op2 (c20-14 / think-01
                                  :ARG0 (c20-3 / he)
                                  :ARG1 (c20-20 / thing
                                                :ARG1-of (c20-9 / gift-01
                                                                :ARG0 c20-17
                                                                :ARG2 (c20-15 / humanity))
                                                :domain (c20-5 / he))
                                  :mod (c20-6 / at-least))))

# ::snt Hi, I think you will like this item....
# ::tokens ["Hi", ",", "I", "think", "you", "will", "like", "this", "item", "...."]
# ::lemmas ["hi", ",", "i", "think", "you", "will", "like", "this", "item", "...."]
(c21-1 / multi-sentence
       :snt1 (c21-3 / hi)
       :snt2 (c21-6 / think-01
                    :ARG0 (c21-5 / i)
                    :ARG1 (c21-4 / like-01
                                 :ARG0 (c21-0 / you)
                                 :ARG1 (c21-2 / item
                                              :mod (c21-7 / this)))))

# ::snt please don't. noperah
# ::tokens ["please", "do", "n't", ".", "noperah"]
# ::lemmas ["please", "do", "not", ".", "noperah"]
(c22-2 / multi-sentence
       :snt1 (c22-4 / do-02
                    :ARG0 (c22-0 / you)
                    :polite +
                    :mode imperative
                    :polarity -)
       :snt2 (c22-3 / person
                    :name (c22-1 / name
                                 :op1 "noperah")))

# ::snt I've heard from him, and he said "don't do it!".
# ::tokens ["I", "'ve", "heard", "from", "him", ",", "and", "he", "said", "\"", "do", "n't", "do", "it", "!", "\"", "."]
# ::lemmas ["i", "'ve", "hear", "from", "he", ",", "and", "he", "say", "\"", "do", "not", "do", "it", "!", "\"", "."]
(c23-5 / and
       :op1 (c23-2 / hear-01
                   :ARG0 (c23-4 / i)
                   :ARG2 (c23-3 / he))
       :op2 (c23-0 / say-01
                   :ARG0 c23-3
                   :ARG1 (c23-6 / do-02
                                :ARG0 c23-3
                                :ARG1 (c23-1 / it)
                                :polarity -
                                :mode imperative)))

# ::snt Oh right and a few weeks ago said she wouldn't run... Fake news or a scheme is brewing...
# ::tokens ["Oh", "right", "and", "a", "few", "weeks", "ago", "said", "she", "would", "n't", "run", "...", "Fake", "news", "or", "a", "scheme", "is", "brewing", "..."]
# ::lemmas ["oh", "right", "and", "a", "few", "weeks", "ago", "say", "she", "would", "not", "run", "...", "fake", "news", "or", "a", "scheme", "be", "brew", "..."]
(c24-4 / multi-sentence
       :snt1 (c24-14 / and
                     :op2 (c24-6 / say-01
                                 :ARG0 (c24-0 / she)
                                 :ARG1 (c24-8 / run-02
                                              :ARG0 c24-0
                                              :polarity -)
                                 :time (c24-2 / before
                                              :op1 (c24-5 / now)
                                              :quant (c24-1 / few
                                                            :op1 (c24-13 / temporal-quantity
                                                                         :unit (c24-12 / week)
                                                                         :quant 1)))))
       :snt2 (c24-9 / brew-01
                    :ARG1 (c24-3 / or
                                 :op1 (c24-10 / news
                                              :ARG1-of (c24-11 / fake-02))
                                 :op2 (c24-15 / scheme-01)))
       :mod (c24-7 / oh
                   :mode expressive))

# ::snt What America really needs is another TV celebrity as president, it works so well.
# ::tokens ["What", "America", "really", "needs", "is", "another", "TV", "celebrity", "as", "president", ",", "it", "works", "so", "well", "."]
# ::lemmas ["what", "America", "really", "need", "be", "another", "tv", "celebrity", "as", "president", ",", "it", "work", "so", "well", "."]
(c25-0 / need-01
       :ARG0 (c25-7 / country
                    :name (c25-4 / name
                                 :op1 "America"))
       :ARG1 (c25-11 / celebrity
                     :mod (c25-10 / television)
                     :mod (c25-2 / another)
                     :prep-as (c25-5 / president))
       :ARG1-of (c25-9 / cause-01
                       :ARG0 (c25-8 / work-09
                                    :ARG1 c25-11
                                    :ARG1-of (c25-6 / well-09
                                                    :degree (c25-1 / so))))
       :ARG1-of (c25-3 / real-04))

# ::snt Is she real?
# ::tokens ["Is", "she", "real", "?"]
# ::lemmas ["be", "she", "real", "?"]
(c26-1 / real-04
       :polarity (c26-2 / amr-unknown)
       :ARG1 (c26-0 / she))

# ::snt You have to be quiet in libraries...hence the silencer.
# ::tokens ["You", "have", "to", "be", "quiet", "in", "libraries", "...", "hence", "the", "silencer", "."]
# ::lemmas ["you", "have", "to", "be", "quiet", "in", "library", "...", "hence", "the", "silencer", "."]
(c27-5 / infer-01
       :ARG1 (c27-2 / silencer)
       :ARG2 (c27-0 / obligate-01
                    :ARG1 (c27-4 / quiet-04
                                 :ARG1 (c27-1 / you)
                                 :location (c27-3 / library))))

# ::snt Barking mad.
# ::tokens ["Barking", "mad", "."]
# ::lemmas ["bark", "mad", "."]
(c28-1 / mad-04
       :ARG1 (c28-2 / i)
       :degree (c28-0 / blister-01))

# ::snt the Trump is the sign.
# ::tokens ["the", "Trump", "is", "the", "sign", "."]
# ::lemmas ["the", "Trump", "be", "the", "sign", "."]
(c29-2 / signal-07
       :ARG0 (c29-1 / person
                    :name (c29-0 / name
                                 :op1 "Trump")))

# ::snt Another rich nutcase megalomaniac- didnt we learn anything from the Romans?
# ::tokens ["Another", "rich", "nutcase", "megalomaniac-", "did", "nt", "we", "learn", "anything", "from", "the", "Romans", "?"]
# ::lemmas ["another", "rich", "nutcase", "megalomaniac-", "do", "not", "we", "learn", "anything", "from", "the", "Romans", "?"]
(c30-3 / learn-01
       :ARG0 (c30-5 / we)
       :ARG1 (c30-9 / anything)
       :ARG2 (c30-4 / person
                    :mod (c30-6 / country
                                :name (c30-0 / name
                                             :op1 "Rome")))
       :polarity (c30-8 / amr-unknown)
       :mod (c30-7 / another)
       :mod (c30-1 / megalomaniac
                   :mod (c30-2 / rich)))

# ::snt Unless God goes crazy she wont get any message or a sign
# ::tokens ["Unless", "God", "goes", "crazy", "she", "wo", "nt", "get", "any", "message", "or", "a", "sign"]
# ::lemmas ["unless", "God", "go", "crazy", "she", "will", "not", "get", "any", "message", "or", "a", "sign"]
(c31-8 / get-01
       :ARG0 (c31-4 / she)
       :ARG1 (c31-0 / or
                    :op1 (c31-2 / message-01)
                    :op2 (c31-1 / sign-01)
                    :mod (c31-7 / any))
       :condition (c31-6 / craze-01
                         :ARG1 (c31-5 / person
                                      :name (c31-3 / name
                                                   :op1 "God")))
       :polarity -)

# ::snt She sounds like Donald Trump ha ha ha ha
# ::tokens ["She", "sounds", "like", "Donald", "Trump", "ha", "ha", "ha", "ha"]
# ::lemmas ["she", "sound", "like", "Donald", "Trump", "ha", "ha", "ha", "ha"]
(c32-2 / sound-01
       :ARG1 (c32-0 / she)
       :ARG2 (c32-4 / person
                    :name (c32-1 / name
                                 :op1 "Donald"
                                 :op2 "Trump"))
       :mod (c32-3 / ha
                   :mode expressive))

# ::snt What reason?
# ::tokens ["What", "reason", "?"]
# ::lemmas ["what", "reason", "?"]
(c33-0 / reason
       :domain (c33-1 / amr-unknown))

# ::snt A Christian? Like every President ever? Why is that a bad thing?
# ::tokens ["A", "Christian", "?", "Like", "every", "President", "ever", "?", "Why", "is", "that", "a", "bad", "thing", "?"]
# ::lemmas ["a", "Christian", "?", "like", "every", "President", "ever", "?", "why", "be", "that", "a", "bad", "thing", "?"]
(c34-2 / multi-sentence
       :snt1 (c34-8 / person
                    :mod (c34-4 / religious-group
                                :name (c34-1 / name
                                             :op1 "Christian")))
       :snt2 (c34-13 / resemble-01
                     :ARG2 (c34-3 / person
                                  :ARG0-of (c34-7 / have-org-role-91
                                                  :ARG2 (c34-11 / president))
                                  :mod (c34-6 / every)
                                  :time (c34-12 / ever)))
       :snt3 (c34-9 / cause-01
                    :ARG0 (c34-5 / amr-unknown)
                    :ARG1 (c34-10 / thing
                                  :ARG1-of (c34-0 / bad-07)
                                  :domain (c34-14 / that))))

# ::snt And you thought Trump was mad
# ::tokens ["And", "you", "thought", "Trump", "was", "mad"]
# ::lemmas ["and", "you", "think", "Trump", "be", "mad"]
(c35-3 / and
       :op2 (c35-5 / think-01
                   :ARG0 (c35-0 / you)
                   :ARG1 (c35-1 / mad-04
                                :ARG1 (c35-4 / person
                                             :name (c35-2 / name
                                                          :op1 "Trump")))))

# ::snt A very good reason why she should be disqualified from taking office.
# ::tokens ["A", "very", "good", "reason", "why", "she", "should", "be", "disqualified", "from", "taking", "office", "."]
# ::lemmas ["a", "very", "good", "reason", "why", "she", "should", "be", "disqualify", "from", "take", "office", "."]
(c36-2 / reason
       :ARG1-of (c36-6 / good-02
                       :degree (c36-3 / very))
       :ARG0-of (c36-4 / cause-01
                       :ARG1 (c36-8 / recommend-01
                                    :ARG1 (c36-7 / disqualify-01
                                                 :ARG1 (c36-1 / she)
                                                 :ARG2 (c36-5 / take-01
                                                              :ARG0 c36-1
                                                              :ARG1 (c36-0 / office))))))

# ::snt Otra mierda mas en el mbito poltico
# ::tokens ["Otra", "mierda", "mas", "en", "el", "mbito", "poltico"]
# ::lemmas ["Otra", "mierda", "ma", "en", "el", "mbito", "poltico"]
(c37-0 / mas
       :domain (c37-1 / amr-unintelligible
                      :value "Otra"))

# ::snt If the car crash that is not a sign that any other human that ever graced Gods green earth could do a better job as president then I don't know what is
# ::tokens ["If", "the", "car", "crash", "that", "is", "not", "a", "sign", "that", "any", "other", "human", "that", "ever", "graced", "Gods", "green", "earth", "could", "do", "a", "better", "job", "as", "president", "then", "I", "do", "n't", "know", "what", "is"]
# ::lemmas ["if", "the", "car", "crash", "that", "be", "not", "a", "sign", "that", "any", "other", "human", "that", "ever", "grace", "Gods", "green", "earth", "could", "do", "a", "well", "job", "as", "president", "then", "i", "do", "not", "know", "what", "be"]
(c38-7 / have-condition-91
       :ARG1 (c38-8 / know-01
                    :ARG0 (c38-23 / i)
                    :ARG1 (c38-11 / thing)
                    :polarity -)
       :ARG2 (c38-0 / signal-07
                    :ARG0 (c38-17 / crash-01
                                  :ARG1 (c38-13 / car))
                    :ARG1 (c38-21 / possible-01
                                  :ARG1 (c38-24 / do-02
                                                :ARG0 (c38-22 / human
                                                              :mod (c38-5 / other)
                                                              :mod (c38-10 / any)
                                                              :ARG0-of (c38-12 / grace-01
                                                                               :ARG1 (c38-15 / person
                                                                                             :name (c38-19 / name
                                                                                                           :op1 "God"))
                                                                               :time (c38-20 / ever)
                                                                               :location (c38-3 / planet
                                                                                                :name (c38-16 / name
                                                                                                              :op1 "Earth")
                                                                                                :ARG1-of (c38-2 / green-03)
                                                                                                :poss c38-15)))
                                                :ARG1 (c38-9 / job
                                                             :ARG1-of (c38-6 / have-degree-91
                                                                             :ARG2 (c38-4 / good-02
                                                                                          :ARG1 c38-9)
                                                                             :ARG3 (c38-14 / more)))
                                                :ARG2 (c38-18 / have-org-role-91
                                                              :ARG0 c38-22
                                                              :ARG2 (c38-1 / president))))
                    :polarity -))

# ::snt she will be waiting a long time
# ::tokens ["she", "will", "be", "waiting", "a", "long", "time"]
# ::lemmas ["she", "will", "be", "wait", "a", "long", "time"]
(c39-0 / wait-01
       :ARG1 (c39-2 / she)
       :ARG1-of (c39-1 / long-03))

# ::snt Obviously means the devil
# ::tokens ["Obviously", "means", "the", "devil"]
# ::lemmas ["obviously", "mean", "the", "devil"]
(c40-1 / mean-01
       :ARG2 (c40-0 / devil)
       :ARG1-of (c40-2 / obvious-01))

# ::snt Can we get someone grounded in the objective world please?
# ::tokens ["Can", "we", "get", "someone", "grounded", "in", "the", "objective", "world", "please", "?"]
# ::lemmas ["can", "we", "get", "someone", "ground", "in", "the", "objective", "world", "please", "?"]
(c41-2 / possible-01
       :polarity (c41-6 / amr-unknown)
       :ARG1 (c41-7 / get-04
                    :ARG0 (c41-4 / we)
                    :ARG1 (c41-5 / ground-01
                                 :ARG1 (c41-1 / someone)
                                 :ARG2 (c41-3 / world
                                              :mod (c41-0 / objective))))
       :polite +)

# ::snt As someone famously said we dont do god
# ::tokens ["As", "someone", "famously", "said", "we", "do", "nt", "do", "god"]
# ::lemmas ["as", "someone", "famously", "say", "we", "do", "not", "do", "god"]
(c42-2 / say-01
       :ARG0 (c42-0 / someone)
       :ARG1 (c42-5 / do-02
                    :ARG0 (c42-3 / we)
                    :ARG1 (c42-4 / god)
                    :polarity -)
       :manner (c42-1 / fame-01))

# ::snt God has spoken Oprah, just do it
# ::tokens ["God", "has", "spoken", "Oprah", ",", "just", "do", "it"]
# ::lemmas ["God", "have", "speak", "Oprah", ",", "just", "do", "it"]
(c43-3 / speak-01
       :ARG0 (c43-5 / person
                    :name (c43-1 / name
                                 :op1 "God"))
       :ARG2 (c43-2 / person
                    :name (c43-4 / name
                                 :op1 "Oprah"))
       :ARG1-of (c43-7 / do-02
                       :ARG0 (c43-0 / you)
                       :mod (c43-6 / just)
                       :mode imperative))

# ::snt I wouldnt hold my breath if I was Oprah.
# ::tokens ["I", "would", "nt", "hold", "my", "breath", "if", "I", "was", "Oprah", "."]
# ::lemmas ["i", "would", "not", "hold", "my", "breath", "if", "i", "be", "Oprah", "."]
(c44-2 / hold-01
       :ARG0 (c44-4 / i)
       :ARG1 (c44-0 / breathe-01
                    :ARG0 c44-4)
       :condition (c44-3 / person
                         :name (c44-1 / name
                                      :op1 "Oprah")
                         :domain c44-4)
       :polarity -)

# ::snt Seriously?!
# ::tokens ["Seriously", "?", "!"]
# ::lemmas ["seriously", "?", "!"]
(c45-1 / serious-01
       :polarity (c45-0 / amr-unknown))

# ::snt "Go forth and multiply!"
# ::tokens ["\"", "Go", "forth", "and", "multiply", "!", "\""]
# ::lemmas ["\"", "go", "forth", "and", "multiply", "!", "\""]
(c46-3 / and
       :op1 (c46-4 / go-02
                   :ARG0 (c46-1 / you)
                   :ARG4 (c46-0 / forth)
                   :mode imperative)
       :op2 (c46-2 / multiply-01
                   :ARG0 c46-1
                   :mode imperative))

# ::snt Jesus says " have a go O"
# ::tokens ["Jesus", "says", "\"", "have", "a", "go", "O", "\""]
# ::lemmas ["Jesus", "say", "\"", "have", "a", "go", "o", "\""]
(c47-3 / say-01
       :ARG0 (c47-4 / person
                    :name (c47-2 / name
                                 :op1 "Jesus"))
       :ARG1 (c47-5 / go-01
                    :ARG1 (c47-1 / you)
                    :mod (c47-0 / oh)
                    :mode imperative))

# ::snt FFS
# ::tokens ["FFS"]
# ::lemmas ["FFS"]
(c49-1 / person
       :name (c49-0 / name
                    :op1 "FFS"))

# ::snt well?
# ::tokens ["well", "?"]
# ::lemmas ["well", "?"]
(c50-0 / well
       :polarity (c50-1 / amr-unknown))
