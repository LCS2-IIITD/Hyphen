# ::snt yes!!!!
# ::tokens ["yes", "!", "!", "!", "!"]
# ::lemmas ["yes", "!", "!", "!", "!"]
(c1-0 / yes
      :mode expressive)

# ::snt The release date is October th, .
# ::tokens ["The", "release", "date", "is", "October", "th", ",", "."]
# ::lemmas ["the", "release", "date", "be", "October", "th", ",", "."]
(c2-0 / date-entity
      :time-of (c2-1 / release-01)
      :month 10
      :day 14)

# ::snt Because everything went down hill when she left
# ::tokens ["Because", "everything", "went", "down", "hill", "when", "she", "left"]
# ::lemmas ["because", "everything", "go", "down", "hill", "when", "she", "leave"]
(c3-4 / cause-01
      :ARG0 (c3-5 / go-01
                  :ARG1 (c3-1 / everything)
                  :ARG4 (c3-2 / hill)
                  :direction (c3-6 / down)
                  :time (c3-3 / leave-11
                              :ARG0 (c3-0 / she))))

# ::snt Return for Halloween is what I can't wait for.
# ::tokens ["Return", "for", "Halloween", "is", "what", "I", "ca", "n't", "wait", "for", "."]
# ::lemmas ["return", "for", "Halloween", "be", "what", "i", "can", "not", "wait", "for", "."]
(c4-3 / possible-01
      :ARG1 (c4-4 / wait-01
                  :ARG1 (c4-5 / i)
                  :ARG2 (c4-1 / return-01
                              :ARG1 c4-5
                              :ARG4 (c4-2 / event
                                          :name (c4-0 / name
                                                      :op1 "Halloween"))))
      :polarity -)

# ::snt Quite a few brackett,marion (nurse) ben traimer, lindsay, tommy, may even get some sort of loomis scene.
# ::tokens ["Quite", "a", "few", "brackett", ",", "marion", "(", "nurse", ")", "ben", "traimer", ",", "lindsay", ",", "tommy", ",", "may", "even", "get", "some", "sort", "of", "loomis", "scene", "."]
# ::lemmas ["quite", "a", "few", "brackett", ",", "marion", "(", "nurse", ")", "ben", "traimer", ",", "lindsay", ",", "tommy", ",", "may", "even", "get", "some", "sort", "of", "loomis", "scene", "."]
(c5-17 / possible-01
       :ARG1 (c5-8 / get-01
                   :ARG0 (c5-7 / and
                               :op1 (c5-11 / person
                                           :name (c5-14 / name
                                                        :op1 "Backett"))
                               :op2 (c5-3 / person
                                          :name (c5-12 / name
                                                       :op1 "Marion")
                                          :ARG0-of (c5-18 / nurse-01))
                               :op3 (c5-2 / person
                                          :name (c5-13 / name
                                                       :op1 "Ben"
                                                       :op2 "Traimer"))
                               :op4 (c5-6 / person
                                          :name (c5-19 / name
                                                       :op1 "Lindsay"))
                               :op5 (c5-20 / person
                                           :name (c5-15 / name
                                                        :op1 "Tommy")))
                   :ARG1 (c5-0 / scene
                               :mod (c5-1 / loomis)
                               :mod (c5-5 / sort
                                          :mod (c5-4 / some)))
                   :mod (c5-16 / even)
                   :quant (c5-10 / many
                                 :degree (c5-9 / quite))))

# ::snt Tommy?
# ::tokens ["Tommy", "?"]
# ::lemmas ["Tommy", "?"]
(c6-1 / person
      :polarity (c6-2 / amr-unknown)
      :name (c6-0 / name
                  :op1 "Tommy"))

# ::snt I'm not biased but Meeker is x the Sheriff Brackett was...
# ::tokens ["I", "'m", "not", "biased", "but", "Meeker", "is", "x", "the", "Sheriff", "Brackett", "was", "..."]
# ::lemmas ["i", "be", "not", "biased", "but", "Meeker", "be", "x", "the", "Sheriff", "Brackett", "be", "..."]
(c8-7 / contrast-01
      :ARG1 (c8-0 / bias-01
                  :ARG1 (c8-8 / i)
                  :polarity -)
      :ARG2 (c8-5 / person
                  :name (c8-1 / name
                              :op1 "Meeker")
                  :domain (c8-2 / person
                                :name (c8-4 / name
                                            :op1 "Brackett")
                                :ARG0-of (c8-6 / have-org-role-91
                                               :ARG2 (c8-3 / sheriff)))))

# ::snt Loomis?
# ::tokens ["Loomis", "?"]
# ::lemmas ["loomis", "?"]
(c9-1 / product
      :polarity (c9-2 / amr-unknown)
      :name (c9-0 / name
                  :op1 "Loomis"))

# ::snt I reckon he loses his mind AND HIS HEAD when he encounters Michael!
# ::tokens ["I", "reckon", "he", "loses", "his", "mind", "AND", "HIS", "HEAD", "when", "he", "encounters", "Michael", "!"]
# ::lemmas ["i", "reckon", "he", "lose", "his", "mind", "and", "his", "head", "when", "he", "encounter", "Michael", "!"]
(c10-2 / reckon-01
       :ARG0 (c10-8 / i)
       :ARG1 (c10-5 / lose-02
                    :ARG0 (c10-4 / he
                                 :part (c10-0 / mind)
                                 :part (c10-7 / head))
                    :ARG1 (c10-9 / and
                                 :time (c10-3 / encounter-01
                                              :ARG0 c10-4
                                              :ARG1 (c10-6 / person
                                                           :name (c10-1 / name
                                                                        :op1 "Michael"))))))

# ::snt Well found man!!
# ::tokens ["Well", "found", "man", "!", "!"]
# ::lemmas ["well", "find", "man", "!", "!"]
(c11-0 / find-01
       :ARG1 (c11-1 / man)
       :ARG1-of (c11-2 / well-09)
       :mode expressive)

# ::snt It'll probably be Ben Tramer and Tommy Doyle who sadly will not be played by Ant Man. Oh and Lindsy, the other kid at the end of the movie.
# ::tokens ["It", "'ll", "probably", "be", "Ben", "Tramer", "and", "Tommy", "Doyle", "who", "sadly", "will", "not", "be", "played", "by", "Ant", "Man", ".", "Oh", "and", "Lindsy", ",", "the", "other", "kid", "at", "the", "end", "of", "the", "movie", "."]
# ::lemmas ["it", "'ll", "probably", "be", "Ben", "Tramer", "and", "Tommy", "Doyle", "who", "sadly", "will", "not", "be", "play", "by", "Ant", "Man", ".", "oh", "and", "Lindsy", ",", "the", "other", "kid", "at", "the", "end", "of", "the", "movie", "."]
(c12-9 / multi-sentence
       :snt1 (c12-16 / probable
                     :domain (c12-10 / play-01
                                     :ARG0 (c12-2 / person
                                                  :name (c12-14 / name
                                                                :op1 "Ant"
                                                                :op2 "Man"))
                                     :ARG1 (c12-7 / and
                                                  :op1 (c12-1 / person
                                                              :name (c12-11 / name
                                                                            :op1 "Ben"
                                                                            :op2 "Tramer"))
                                                  :op2 (c12-6 / person
                                                              :name (c12-17 / name
                                                                            :op1 "Tommy"
                                                                            :op2 "Doyle")))
                                     :ARG0-of (c12-0 / sad-02)
                                     :polarity -))
       :snt2 (c12-8 / and
                    :op1 (c12-19 / person
                                 :name (c12-12 / name
                                               :op1 "Oh"))
                    :op2 (c12-13 / person
                                 :name (c12-18 / name
                                               :op1 "Lindsy")
                                 :mod (c12-5 / kid
                                             :mod (c12-3 / other))
                                 :time (c12-15 / end-01
                                               :ARG1 (c12-4 / movie)))))

# ::snt Nancy Stephens still at the asylum watching over Michael or Brackett as traumatised old man would be good nods
# ::tokens ["Nancy", "Stephens", "still", "at", "the", "asylum", "watching", "over", "Michael", "or", "Brackett", "as", "traumatised", "old", "man", "would", "be", "good", "nods"]
# ::lemmas ["Nancy", "Stephens", "still", "at", "the", "asylum", "watch", "over", "Michael", "or", "Brackett", "as", "traumatise", "old", "man", "would", "be", "good", "nod"]
(c13-1 / nod-01
       :ARG1 (c13-5 / person
                    :name (c13-4 / name
                                 :op1 "Nancy"
                                 :op2 "Stephens")
                    :location (c13-9 / asylum)
                    :ARG0-of (c13-7 / watch-01
                                    :ARG1 (c13-0 / or
                                                 :op1 (c13-2 / person
                                                             :name (c13-6 / name
                                                                          :op1 "Michael"))
                                                 :op2 (c13-11 / person
                                                              :name (c13-8 / name
                                                                           :op1 "Brackett")))))
       :ARG1-of (c13-10 / good-02)
       :mod (c13-3 / still))

# ::snt Hearing the new footage is incredible, Im ready for fall
# ::tokens ["Hearing", "the", "new", "footage", "is", "incredible", ",", "I", "m", "ready", "for", "fall"]
# ::lemmas ["hear", "the", "new", "footage", "be", "incredible", ",", "i", "m", "ready", "for", "fall"]
(c14-7 / and
       :op1 (c14-6 / incredible
                   :domain (c14-4 / hear-01
                                  :ARG0 (c14-2 / i)
                                  :ARG1 (c14-0 / footage
                                               :ARG1-of (c14-1 / new-01))))
       :op2 (c14-3 / ready-02
                   :ARG0 c14-2
                   :ARG1 c14-2
                   :ARG2 (c14-5 / fall)))

# ::snt Oh noes! You dont think Kyle Richards shows up?
# ::tokens ["Oh", "noes", "!", "You", "do", "nt", "think", "Kyle", "Richards", "shows", "up", "?"]
# ::lemmas ["oh", "noe", "!", "you", "do", "not", "think", "Kyle", "Richards", "show", "up", "?"]
(c15-2 / multi-sentence
       :snt1 (c15-0 / oh-no
                    :mode expressive)
       :snt2 (c15-7 / think-01
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-4 / show-up-02
                                 :ARG1 (c15-6 / person
                                              :name (c15-3 / name
                                                           :op1 "Kyle"
                                                           :op2 "Richards")))
                    :polarity (c15-5 / amr-unknown)
                    :polarity -))

# ::snt Haha! Maybe he went back to the Myers house, despite Loomis warning him to get his ass away from there!
# ::tokens ["Haha", "!", "Maybe", "he", "went", "back", "to", "the", "Myers", "house", ",", "despite", "Loomis", "warning", "him", "to", "get", "his", "ass", "away", "from", "there", "!"]
# ::lemmas ["Haha", "!", "maybe", "he", "go", "back", "to", "the", "Myers", "house", ",", "despite", "Loomis", "warn", "he", "to", "get", "his", "ass", "away", "from", "there", "!"]
(c16-0 / multi-sentence
       :snt1 (c16-5 / haha
                    :mode expressive)
       :snt2 (c16-6 / possible-01
                    :ARG1 (c16-12 / go-back-19
                                  :ARG1 (c16-9 / he)
                                  :ARG2 (c16-4 / house
                                               :poss (c16-1 / person
                                                            :name (c16-2 / name
                                                                         :op1 "Myers"))))
                    :concession (c16-8 / warn-01
                                       :ARG0 (c16-11 / person
                                                     :name (c16-7 / name
                                                                  :op1 "Loomis"))
                                       :ARG1 (c16-10 / get-05
                                                     :ARG0 (c16-14 / he
                                                                   :part (c16-3 / ass
                                                                                :ARG1-of c16-10))
                                                     :ARG2 (c16-13 / away
                                                                   :op1 c16-4))
                                       :ARG2 c16-14)))

# ::snt Judith's boyfriend! Great call there pal!
# ::tokens ["Judith", "'s", "boyfriend", "!", "Great", "call", "there", "pal", "!"]
# ::lemmas ["Judith", "'s", "boyfriend", "!", "great", "call", "there", "pal", "!"]
(c17-2 / multi-sentence
       :snt1 (c17-5 / person
                    :ARG0-of (c17-4 / have-rel-role-91
                                    :ARG1 (c17-3 / person
                                                 :name (c17-1 / name
                                                              :op1 "Judith"))
                                    :ARG2 (c17-0 / boyfriend)))
       :snt2 (c17-6 / call-02
                    :ARG0 (c17-8 / pal)
                    :mod (c17-9 / great)
                    :location (c17-7 / there)
                    :mode expressive))

# ::snt He better keep his ass away from... There.
# ::tokens ["He", "better", "keep", "his", "ass", "away", "from", "...", "There", "."]
# ::lemmas ["he", "well", "keep", "his", "ass", "away", "from", "...", "there", "."]
(c18-0 / multi-sentence
       :snt1 (c18-1 / recommend-01
                    :ARG1 (c18-3 / keep-04
                                 :ARG0 (c18-2 / he)
                                 :ARG1 (c18-7 / ass
                                              :part-of (c18-4 / he))
                                 :ARG2 (c18-6 / away
                                              :op1 c18-7)))
       :snt2 (c18-5 / there))

# ::snt Sure would bud! I can picture appearing.
# ::tokens ["Sure", "would", "bud", "!", "I", "can", "picture", "appearing", "."]
# ::lemmas ["sure", "would", "bud", "!", "i", "can", "picture", "appear", "."]
(c19-1 / multi-sentence
       :snt1 (c19-3 / sure-02
                    :ARG1 (c19-0 / bud))
       :snt2 (c19-4 / possible-01
                    :ARG1 (c19-2 / picture-01
                                 :ARG0 (c19-6 / i)
                                 :ARG1 (c19-7 / appear-01
                                              :ARG1 (c19-5 / thing)))))

# ::snt I didn't even think of Lindsay! That'd be cool!!
# ::tokens ["I", "did", "n't", "even", "think", "of", "Lindsay", "!", "That", "'d", "be", "cool", "!", "!"]
# ::lemmas ["i", "do", "not", "even", "think", "of", "Lindsay", "!", "that", "would", "be", "cool", "!", "!"]
(c20-1 / multi-sentence
       :snt1 (c20-6 / think-01
                    :ARG0 (c20-5 / i)
                    :ARG1 (c20-3 / person
                                 :name (c20-0 / name
                                              :op1 "Lindsay"))
                    :mod (c20-2 / even)
                    :polarity -)
       :snt2 (c20-4 / cool-04
                    :ARG1 (c20-7 / that)))

# ::snt Ok that's awesome! Sheriff Brackett would be my pick as well, bud! Or even David Kyle (Judith's bf)...could find a decent way to throw him in there.
# ::tokens ["Ok", "that", "'s", "awesome", "!", "Sheriff", "Brackett", "would", "be", "my", "pick", "as", "well", ",", "bud", "!", "Or", "even", "David", "Kyle", "(", "Judith", "'s", "bf)", "...", "could", "find", "a", "decent", "way", "to", "throw", "him", "in", "there", "."]
# ::lemmas ["ok", "that", "be", "awesome", "!", "Sheriff", "Brackett", "would", "be", "my", "pick", "as", "well", ",", "bud", "!", "or", "even", "David", "Kyle", "(", "Judith", "'s", "bf)", "...", "could", "find", "a", "decent", "way", "to", "throw", "he", "in", "there", "."]
(c21-12 / multi-sentence
        :snt1 (c21-7 / awesome-03
                     :ARG1 (c21-8 / that)
                     :mod (c21-3 / ok))
        :snt2 (c21-19 / pick-01
                      :ARG0 (c21-23 / i)
                      :ARG1 (c21-13 / person
                                    :name (c21-17 / name
                                                  :op1 "Brackett")
                                    :ARG0-of (c21-5 / have-org-role-91
                                                    :ARG2 (c21-0 / sheriff)))
                      :mod (c21-6 / as-well))
        :snt3 (c21-10 / or
                      :op2 (c21-2 / person
                                  :name (c21-14 / name
                                                :op1 "David"
                                                :op2 "Kyle")
                                  :mod (c21-18 / even)
                                  :ARG0-of (c21-22 / have-rel-role-91
                                                   :ARG1 (c21-1 / person
                                                                :name (c21-20 / name
                                                                              :op1 "Judith"))
                                                   :ARG2 (c21-11 / boyfriend))
                                  :ARG0-of (c21-16 / find-01
                                                   :ARG1 (c21-21 / way
                                                                 :mod (c21-25 / decent)
                                                                 :manner-of (c21-15 / throw-01
                                                                                    :ARG1 (c21-4 / he)
                                                                                    :ARG2 (c21-24 / there)))
                                                   :ARG1-of (c21-9 / possible-01)))))

# ::snt THE POSSIBILITIES ARE ENDLESS! THINK LONNIE WILL GET WHAT HE'S DUE!!
# ::tokens ["THE", "POSSIBILITIES", "ARE", "ENDLESS", "!", "THINK", "LONNIE", "WILL", "GET", "WHAT", "HE", "'S", "DUE", "!", "!"]
# ::lemmas ["the", "possibility", "be", "ENDLESS", "!", "think", "LONNIE", "will", "get", "what", "he", "be", "DUE", "!", "!"]
(c22-1 / multi-sentence
       :snt1 (c22-5 / position-02
                    :ARG2 (c22-4 / end-01)
                    :polarity -)
       :snt2 (c22-6 / think-01
                    :ARG0 (c22-0 / you)
                    :ARG1 (c22-7 / get-01
                                 :ARG0 (c22-2 / person
                                              :name (c22-3 / name
                                                           :op1 "Lonne"))
                                 :ARG1 (c22-9 / thing
                                              :ARG1-of (c22-8 / dupe-01
                                                              :ARG0 c22-2)))
                    :mode imperative))

# ::snt Haha! Know exactly what you mean bud!
# ::tokens ["Haha", "!", "Know", "exactly", "what", "you", "mean", "bud", "!"]
# ::lemmas ["Haha", "!", "know", "exactly", "what", "you", "mean", "bud", "!"]
(c23-1 / multi-sentence
       :snt1 (c23-3 / haha
                    :mode expressive)
       :snt2 (c23-4 / know-01
                    :ARG0 (c23-0 / you)
                    :ARG1 (c23-6 / thing
                                 :ARG2-of (c23-5 / mean-01
                                                 :ARG0 (c23-7 / you)))
                    :manner (c23-2 / exact)
                    :mode imperative))

# ::snt You never know!
# ::tokens ["You", "never", "know", "!"]
# ::lemmas ["you", "never", "know", "!"]
(c24-2 / know-01
       :ARG0 (c24-1 / you)
       :time (c24-0 / ever)
       :polarity -)

# ::snt Could be a real chance of seeing that scene come to life man! Exciting stuff!
# ::tokens ["Could", "be", "a", "real", "chance", "of", "seeing", "that", "scene", "come", "to", "life", "man", "!", "Exciting", "stuff", "!"]
# ::lemmas ["could", "be", "a", "real", "chance", "of", "see", "that", "scene", "come", "to", "life", "man", "!", "exciting", "stuff", "!"]
(c25-1 / multi-sentence
       :snt1 (c25-5 / possible-01
                    :ARG1 (c25-7 / chance-02
                                 :ARG1 (c25-2 / see-01
                                              :ARG1 (c25-9 / come-04
                                                           :ARG1 (c25-0 / scene
                                                                        :mod (c25-8 / that))
                                                           :ARG2 (c25-6 / life)))
                                 :ARG1-of (c25-3 / real-04)))
       :snt2 (c25-10 / stuff
                     :ARG0-of (c25-4 / excite-01)))

# ::snt Yes!! I would so love that, man!
# ::tokens ["Yes", "!", "!", "I", "would", "so", "love", "that", ",", "man", "!"]
# ::lemmas ["yes", "!", "!", "i", "would", "so", "love", "that", ",", "man", "!"]
(c26-2 / say-01
       :ARG0 (c26-4 / i)
       :ARG1 (c26-3 / love-01
                    :ARG0 c26-4
                    :ARG1 (c26-5 / that)
                    :degree (c26-0 / so))
       :ARG2 (c26-1 / man)
       :mode expressive)

# ::snt I second that! Well played, Andy! It made me laugh hard, which helped me cough. Im sick.
# ::tokens ["I", "second", "that", "!", "Well", "played", ",", "Andy", "!", "It", "made", "me", "laugh", "hard", ",", "which", "helped", "me", "cough", ".", "I", "m", "sick", "."]
# ::lemmas ["i", "second", "that", "!", "well", "play", ",", "Andy", "!", "it", "make", "i", "laugh", "hard", ",", "which", "help", "i", "cough", ".", "i", "m", "sick", "."]
(c28-2 / multi-sentence
       :snt1 (c28-4 / second-01
                    :ARG0 (c28-14 / i)
                    :ARG1 (c28-15 / that))
       :snt2 (c28-8 / play-01
                    :ARG0 (c28-3 / person
                                 :name (c28-5 / name
                                              :op1 "Andy"))
                    :ARG1-of (c28-11 / well-09))
       :snt3 (c28-7 / make-02
                    :ARG0 (c28-6 / it)
                    :ARG1 (c28-9 / laugh-01
                                 :ARG0 (c28-16 / i)
                                 :ARG1-of (c28-10 / hard-02)
                                 :ARG0-of (c28-13 / help-01
                                                  :ARG1 (c28-12 / cough-01
                                                                :ARG0 c28-16)
                                                  :ARG2 c28-16)))
       :snt4 (c28-0 / sick-05
                    :ARG1 (c28-1 / i)))

# ::snt Can wait for the Halloween movie to come out. She coming back Jamie Lee Curtis can wait.
# ::tokens ["Can", "wait", "for", "the", "Halloween", "movie", "to", "come", "out", ".", "She", "coming", "back", "Jamie", "Lee", "Curtis", "can", "wait", "."]
# ::lemmas ["can", "wait", "for", "the", "Halloween", "movie", "to", "come", "out", ".", "she", "come", "back", "Jamie", "Lee", "Curtis", "can", "wait", "."]
(c30-1 / multi-sentence
       :snt1 (c30-6 / possible-01
                    :ARG1 (c30-10 / wait-01
                                  :ARG2 (c30-9 / come-out-09
                                               :ARG1 (c30-5 / movie
                                                            :name (c30-2 / name
                                                                         :op1 "Halloween")))))
       :snt2 (c30-3 / possible-01
                    :ARG1 (c30-8 / wait-01
                                 :ARG1 (c30-4 / she
                                              :ARG1-of (c30-12 / come-01
                                                               :direction (c30-0 / back)))
                                 :ARG2 (c30-11 / person
                                               :name (c30-7 / name
                                                            :op1 "Jamie"
                                                            :op2 "Lee"
                                                            :op3 "Curtis")))))

# ::snt Last ones were crappy!
# ::tokens ["Last", "ones", "were", "crappy", "!"]
# ::lemmas ["last", "one", "be", "crappy", "!"]
(c31-0 / crap-01
       :ARG1 (c31-2 / one
                    :mod (c31-1 / last))
       :mode expressive)

# ::snt Cant wait for this one. I do hope they do not give away too much though...
# ::tokens ["Ca", "nt", "wait", "for", "this", "one", ".", "I", "do", "hope", "they", "do", "not", "give", "away", "too", "much", "though", "..."]
# ::lemmas ["can", "nt", "wait", "for", "this", "one", ".", "i", "do", "hope", "they", "do", "not", "give", "away", "too", "much", "though", "..."]
(c32-1 / multi-sentence
       :snt1 (c32-5 / possible-01
                    :ARG1 (c32-8 / wait-01
                                 :ARG1 (c32-10 / i)
                                 :ARG2 (c32-11 / this
                                               :mod (c32-0 / one)))
                    :polarity -)
       :snt2 (c32-4 / hope-01
                    :ARG0 (c32-2 / i)
                    :ARG1 (c32-12 / give-away-02
                                  :ARG0 (c32-14 / they)
                                  :ARG1 (c32-13 / thing
                                                :ARG1-of (c32-9 / have-quant-91
                                                                :ARG2 (c32-6 / much)
                                                                :ARG3 (c32-3 / too)))
                                  :ARG1-of (c32-7 / have-concession-91)
                                  :polarity -)))

# ::snt Laurie Strode...
# ::tokens ["Laurie", "Strode", "..."]
# ::lemmas ["Laurie", "Strode", "..."]
(c33-1 / person
       :name (c33-0 / name
                    :op1 "Laurie"
                    :op2 "Strode"))

# ::snt Holy shit. Don't know why I didn't think of it. Steven Ogg could be a interesting Freddy. He's tall but has the personality.
# ::tokens ["Holy", "shit", ".", "Do", "n't", "know", "why", "I", "did", "n't", "think", "of", "it", ".", "Steven", "Ogg", "could", "be", "a", "interesting", "Freddy", ".", "He", "'s", "tall", "but", "has", "the", "personality", "."]
# ::lemmas ["holy", "shit", ".", "do", "not", "know", "why", "i", "do", "not", "think", "of", "it", ".", "Steven", "Ogg", "could", "be", "a", "interesting", "Freddy", ".", "he", "be", "tall", "but", "have", "the", "personality", "."]
(c34-9 / multi-sentence
       :snt1 (c34-0 / shit
                    :mod (c34-4 / holy)
                    :mode expressive)
       :snt2 (c34-5 / know-01
                    :ARG0 (c34-17 / i)
                    :ARG1 (c34-6 / thing
                                 :ARG0-of (c34-12 / cause-01
                                                  :ARG1 (c34-13 / think-01
                                                                :ARG0 c34-17
                                                                :ARG1 (c34-3 / it)
                                                                :polarity -)))
                    :polarity -)
       :snt3 (c34-15 / possible-01
                     :ARG1 (c34-10 / person
                                   :name (c34-14 / name
                                                 :op1 "Freddy")
                                   :ARG2-of (c34-7 / interest-01)))
       :snt4 (c34-8 / contrast-01
                    :ARG1 (c34-18 / tall
                                  :domain (c34-2 / person
                                                 :name (c34-11 / name
                                                               :op1 "Steven"
                                                               :op2 "Ogg")))
                    :ARG2 (c34-16 / have-03
                                  :ARG0 c34-2
                                  :ARG1 (c34-1 / personality))))

# ::snt Chris O'Dowd actually kinda looks like Robert Englund. lol.
# ::tokens ["Chris", "O'Dowd", "actually", "kinda", "looks", "like", "Robert", "Englund", ".", "lol", "."]
# ::lemmas ["Chris", "O'Dowd", "actually", "kinda", "look", "like", "Robert", "Englund", ".", "lol", "."]
(c35-4 / look-02
       :ARG0 (c35-3 / person
                    :name (c35-0 / name
                                 :op1 "Chris"
                                 :op2 "O'Dowd"))
       :ARG1 (c35-1 / person
                    :name (c35-2 / name
                                 :op1 "Robert"
                                 :op2 "Englund"))
       :degree (c35-5 / kind-of)
       :ARG1-of (c35-8 / actual-02)
       :ARG2-of (c35-9 / laugh-01
                       :ARG0 (c35-7 / i)
                       :manner (c35-6 / loud)
                       :mode expressive))

# ::snt Willem Dafoe is a bit up there in age but I think he'd do great.
# ::tokens ["Willem", "Dafoe", "is", "a", "bit", "up", "there", "in", "age", "but", "I", "think", "he", "'d", "do", "great", "."]
# ::lemmas ["Willem", "Dafoe", "be", "a", "bit", "up", "there", "in", "age", "but", "i", "think", "he", "would", "do", "great", "."]
(c36-3 / have-concession-91
       :ARG1 (c36-6 / think-01
                    :ARG0 (c36-5 / i)
                    :ARG1 (c36-8 / do-02
                                 :ARG0 (c36-4 / person
                                              :name (c36-1 / name
                                                           :op1 "Willem"
                                                           :op2 "Dafoe"))
                                 :ARG1 (c36-7 / great)))
       :ARG2 (c36-9 / up-03
                    :ARG1 c36-4
                    :ARG2 (c36-10 / there)
                    :degree (c36-0 / bit)
                    :time (c36-2 / age-01
                                 :ARG1 c36-4)))

# ::snt He's still gotta be a smaller guy that enjoys hurting kids.
# ::tokens ["He", "'s", "still", "got", "ta", "be", "a", "smaller", "guy", "that", "enjoys", "hurting", "kids", "."]
# ::lemmas ["he", "be", "still", "got", "to", "be", "a", "small", "guy", "that", "enjoy", "hurt", "kid", "."]
(c37-9 / get-03
       :ARG1 (c37-8 / guy
                    :domain (c37-4 / he)
                    :mod (c37-2 / still)
                    :ARG0-of (c37-3 / enjoy-01
                                    :ARG1 (c37-7 / hurt-01
                                                 :ARG0 c37-8
                                                 :ARG1 (c37-5 / kid)))
                    :ARG1-of (c37-6 / have-degree-91
                                    :ARG2 (c37-0 / small)
                                    :ARG3 (c37-1 / more))))

# ::snt True but with this type of character... I don't know
# ::tokens ["True", "but", "with", "this", "type", "of", "character", "...", "I", "do", "n't", "know"]
# ::lemmas ["true", "but", "with", "this", "type", "of", "character", "...", "i", "do", "not", "know"]
(c38-1 / contrast-01
       :ARG1 (c38-3 / true-01)
       :ARG2 (c38-0 / know-01
                    :ARG0 (c38-2 / i)
                    :ARG1 (c38-6 / character
                                 :mod (c38-5 / type
                                             :mod (c38-4 / this)))
                    :polarity -))

# ::snt Sure but it can't be so different that it doesn't resemble the same character.
# ::tokens ["Sure", "but", "it", "ca", "n't", "be", "so", "different", "that", "it", "does", "n't", "resemble", "the", "same", "character", "."]
# ::lemmas ["sure", "but", "it", "can", "not", "be", "so", "different", "that", "it", "do", "not", "resemble", "the", "same", "character", "."]
(c39-1 / sure-02
       :concession-of (c39-4 / possible-01
                             :ARG1 (c39-7 / differ-02
                                          :ARG1 (c39-6 / it)
                                          :ARG2-of (c39-3 / have-degree-91
                                                          :ARG1 c39-6
                                                          :ARG3 (c39-0 / so)
                                                          :ARG6 (c39-2 / resemble-01
                                                                       :ARG1 c39-6
                                                                       :ARG2 (c39-5 / character
                                                                                    :ARG1-of (c39-8 / same-01))
                                                                       :polarity -)))
                             :polarity -))

# ::snt Jim may have just not been familiar with The Riddler or was told by the director to go over the top.
# ::tokens ["Jim", "may", "have", "just", "not", "been", "familiar", "with", "The", "Riddler", "or", "was", "told", "by", "the", "director", "to", "go", "over", "the", "top", "."]
# ::lemmas ["Jim", "may", "have", "just", "not", "be", "familiar", "with", "the", "Riddler", "or", "be", "tell", "by", "the", "director", "to", "go", "over", "the", "top", "."]
(c40-6 / possible-01
       :ARG1 (c40-0 / or
                    :op1 (c40-1 / familiarize-01
                                :ARG1 (c40-4 / person
                                             :name (c40-3 / name
                                                          :op1 "Jim"))
                                :ARG2 (c40-2 / book
                                             :name (c40-5 / name
                                                          :op1 "The"
                                                          :op2 "Riddler"))
                                :mod (c40-8 / just)
                                :polarity -)
                    :op2 (c40-9 / tell-01
                                :ARG0 (c40-12 / person
                                              :ARG0-of (c40-7 / have-org-role-91
                                                              :ARG2 (c40-11 / director)))
                                :ARG1 (c40-10 / go-over-the-top
                                              :domain c40-4)
                                :ARG2 c40-4)))

# ::snt Jim Carrey can do all different types of acting. His Riddler was awful but he's done a lot of serious stuff too.
# ::tokens ["Jim", "Carrey", "can", "do", "all", "different", "types", "of", "acting", ".", "His", "Riddler", "was", "awful", "but", "he", "'s", "done", "a", "lot", "of", "serious", "stuff", "too", "."]
# ::lemmas ["Jim", "Carrey", "can", "do", "all", "different", "type", "of", "act", ".", "his", "Riddler", "be", "awful", "but", "he", "be", "do", "a", "lot", "of", "serious", "stuff", "too", "."]
(c41-1 / multi-sentence
       :snt1 (c41-6 / possible-01
                    :ARG1 (c41-16 / do-02
                                  :ARG0 (c41-2 / person
                                               :name (c41-3 / name
                                                            :op1 "Jim"
                                                            :op2 "Carprey"))
                                  :ARG1 (c41-15 / act-01
                                                :mod (c41-13 / type
                                                             :mod (c41-14 / all)
                                                             :ARG1-of (c41-10 / differ-02)))))
       :snt2 (c41-9 / contrast-01
                    :ARG1 (c41-11 / awful
                                  :domain (c41-12 / work-of-art
                                                  :name (c41-5 / name
                                                               :op1 "Riddler")
                                                  :poss c41-2))
                    :ARG2 (c41-7 / do-02
                                 :ARG0 c41-2
                                 :ARG1 (c41-4 / stuff
                                              :ARG1-of (c41-0 / serious-02)
                                              :quant (c41-8 / lot))
                                 :mod (c41-17 / too))))

# ::snt Huh that'd be a nightmare. He'd over act. Lol
# ::tokens ["Huh", "that", "'d", "be", "a", "nightmare", ".", "He", "'d", "over", "act", ".", "Lol"]
# ::lemmas ["huh", "that", "would", "be", "a", "nightmare", ".", "he", "would", "over", "act", ".", "Lol"]
(c42-2 / multi-sentence
       :snt1 (c42-1 / nightmare
                    :domain (c42-6 / that)
                    :mod (c42-3 / huh
                                :mode expressive))
       :snt2 (c42-0 / overreact-01
                    :ARG0 (c42-5 / he))
       :snt3 (c42-4 / laugh-01
                    :manner (c42-7 / loud)
                    :mode expressive))

# ::snt I haven't a clue. If someone does it. They need to do their own take on it. (Performance whys)
# ::tokens ["I", "have", "n't", "a", "clue", ".", "If", "someone", "does", "it", ".", "They", "need", "to", "do", "their", "own", "take", "on", "it", ".", "(", "Performance", "why", "s", ")"]
# ::lemmas ["i", "have", "not", "a", "clue", ".", "if", "someone", "do", "it", ".", "they", "need", "to", "do", "their", "own", "take", "on", "it", ".", "(", "performance", "why", "s", ")"]
(c43-0 / multi-sentence
       :snt1 (c43-4 / have-03
                    :ARG0 (c43-9 / i)
                    :ARG1 (c43-6 / clue)
                    :polarity -)
       :snt2 (c43-8 / have-condition-91
                    :ARG1 (c43-1 / need-01
                                 :ARG0 (c43-2 / someone)
                                 :ARG1 (c43-10 / take-34
                                               :ARG0 c43-2
                                               :ARG1 (c43-3 / it)))
                    :ARG2 (c43-11 / do-02
                                  :ARG0 c43-2
                                  :ARG1 c43-3))
       :snt3 (c43-7 / whine-01
                    :ARG1 (c43-5 / perform-02)))

# ::snt Walton Goggins could play him too. Maybe Jim Carrey? LOL.
# ::tokens ["Walton", "Goggins", "could", "play", "him", "too", ".", "Maybe", "Jim", "Carrey", "?", "LOL", "."]
# ::lemmas ["Walton", "Goggins", "could", "play", "he", "too", ".", "maybe", "Jim", "Carrey", "?", "LOL", "."]
(c44-1 / multi-sentence
       :snt1 (c44-5 / possible-01
                    :ARG1 (c44-2 / play-01
                                 :ARG0 (c44-12 / person
                                               :name (c44-0 / name
                                                            :op1 "Walton"
                                                            :op2 "Goggins"))
                                 :ARG2 (c44-4 / he)
                                 :mod (c44-10 / too)))
       :snt2 (c44-8 / possible-01
                    :ARG1 (c44-11 / play-01
                                  :ARG0 (c44-15 / person
                                                :name (c44-6 / name
                                                             :op1 "Jim"
                                                             :op2 "Carrey"))
                                  :ARG2 (c44-9 / he))
                    :polarity (c44-3 / amr-unknown)
                    :ARG2-of (c44-7 / laugh-01
                                    :ARG0 (c44-13 / i)
                                    :manner (c44-14 / loud)
                                    :mode expressive)))

# ::snt It can't be some big hulking action guy.
# ::tokens ["It", "ca", "n't", "be", "some", "big", "hulking", "action", "guy", "."]
# ::lemmas ["it", "can", "not", "be", "some", "big", "hulking", "action", "guy", "."]
(c45-3 / possible-01
       :ARG1 (c45-5 / guy
                    :mod (c45-4 / action)
                    :ARG0-of (c45-2 / hulk-01
                                    :mod (c45-0 / big))
                    :mod (c45-1 / some))
       :polarity -)

# ::snt I dunno who else could play Freddy. Maybe Joseph Gilgun from Preacher?
# ::tokens ["I", "dunno", "who", "else", "could", "play", "Freddy", ".", "Maybe", "Joseph", "Gilgun", "from", "Preacher", "?"]
# ::lemmas ["i", "dunno", "who", "else", "could", "play", "Freddy", ".", "maybe", "Joseph", "Gilgun", "from", "Preacher", "?"]
(c46-0 / multi-sentence
       :snt1 (c46-7 / know-01
                    :ARG0 (c46-11 / i)
                    :ARG1 (c46-6 / person
                                 :mod (c46-4 / else)
                                 :ARG0-of (c46-1 / play-02
                                                 :ARG1 (c46-12 / person
                                                               :name (c46-2 / name
                                                                            :op1 "Freddy"))
                                                 :ARG1-of (c46-9 / possible-01)))
                    :polarity -)
       :snt2 (c46-13 / possible-01
                     :ARG1 (c46-14 / person
                                   :name (c46-5 / name
                                                :op1 "Joseph"
                                                :op2 "Gilgun")
                                   :source (c46-10 / work-of-art
                                                   :name (c46-8 / name
                                                                :op1 "Preacher")))
                     :polarity (c46-3 / amr-unknown)))

# ::snt I meant minor CGI. Kinda like what they did with Deadpools mask for example.
# ::tokens ["I", "meant", "minor", "CGI", ".", "Kinda", "like", "what", "they", "did", "with", "Deadpools", "mask", "for", "example", "."]
# ::lemmas ["i", "mean", "minor", "CGI", ".", "Kinda", "like", "what", "they", "do", "with", "Deadpools", "mask", "for", "example", "."]
(c47-1 / multi-sentence
       :snt1 (c47-4 / mean-01
                    :ARG0 (c47-9 / i)
                    :ARG2 (c47-10 / thing
                                  :name (c47-0 / name
                                               :op1 "CGI")
                                  :ARG1-of (c47-13 / minor-01)))
       :snt2 (c47-2 / resemble-01
                    :ARG1 (c47-14 / thing
                                  :ARG1-of (c47-12 / do-02
                                                   :ARG0 (c47-11 / they)
                                                   :ARG3 (c47-6 / mask
                                                                :poss (c47-5 / person
                                                                             :name (c47-7 / name
                                                                                          :op1 "Deadpool"))
                                                                :ARG0-of (c47-3 / exemplify-01))))
                    :degree (c47-8 / kind-of)))

# ::snt He's . I'm pretty sure it's time to hang up the glove. Anyway in my opinion CGI still looks like CGI. The makeup still looks better.
# ::tokens ["He", "'s", ".", "I", "'m", "pretty", "sure", "it", "'s", "time", "to", "hang", "up", "the", "glove", ".", "Anyway", "in", "my", "opinion", "CGI", "still", "looks", "like", "CGI", ".", "The", "makeup", "still", "looks", "better", "."]
# ::lemmas ["he", "be", ".", "i", "be", "pretty", "sure", "it", "be", "time", "to", "hang", "up", "the", "glove", ".", "anyway", "in", "my", "opinion", "CGI", "still", "look", "like", "CGI", ".", "the", "makeup", "still", "look", "well", "."]
(c48-13 / multi-sentence
        :snt1 (c48-7 / he)
        :snt2 (c48-0 / sure-02
                     :ARG0 (c48-20 / i)
                     :ARG1 (c48-10 / time
                                   :time-of (c48-19 / hang-01
                                                    :ARG1 (c48-11 / glove
                                                                  :ARG2-of c48-19)))
                     :degree (c48-18 / pretty))
        :snt3 (c48-1 / look-02
                     :ARG0 (c48-14 / product
                                   :name (c48-17 / name
                                                 :op1 "CGI"))
                     :ARG1 (c48-3 / product
                                  :name (c48-15 / name
                                                :op1 "CG"))
                     :mod (c48-9 / anyway)
                     :concession (c48-4 / opine-01
                                        :ARG0 c48-20
                                        :ARG1 c48-1))
        :snt4 (c48-12 / look-02
                      :ARG0 (c48-8 / makeup)
                      :ARG1 (c48-2 / good-02
                                   :ARG2-of (c48-6 / have-degree-91
                                                   :ARG1 c48-8
                                                   :ARG3 (c48-16 / more)))
                      :mod (c48-5 / still)))

# ::snt Good thing about Freddy is he's not really that active of a character. He mostly just follows you creepily so it wouldn't matter if he's .
# ::tokens ["Good", "thing", "about", "Freddy", "is", "he", "'s", "not", "really", "that", "active", "of", "a", "character", ".", "He", "mostly", "just", "follows", "you", "creepily", "so", "it", "would", "n't", "matter", "if", "he", "'s", "."]
# ::lemmas ["good", "thing", "about", "Freddy", "be", "he", "be", "not", "really", "that", "active", "of", "a", "character", ".", "he", "mostly", "just", "follow", "you", "creepily", "so", "it", "would", "not", "matter", "if", "he", "be", "."]
(c49-3 / multi-sentence
       :snt1 (c49-14 / good-02
                     :ARG1 (c49-9 / character
                                  :domain (c49-6 / person
                                                 :name (c49-2 / name
                                                              :op1 "Freddy"))
                                  :ARG1-of (c49-13 / activity-06
                                                   :degree (c49-11 / that)
                                                   :ARG1-of (c49-4 / real-04)
                                                   :polarity -)))
       :snt2 (c49-0 / follow-02
                    :ARG0 (c49-5 / he)
                    :ARG1 (c49-1 / you)
                    :mod (c49-12 / just)
                    :mod (c49-7 / most)
                    :manner (c49-16 / creepily)
                    :ARG0-of (c49-10 / cause-01
                                     :ARG1 (c49-15 / matter-01
                                                   :ARG1 (c49-8 / follow-02
                                                                :ARG0 c49-5
                                                                :ARG1 c49-1)
                                                   :polarity -))))

# ::snt They could find ways around it today though. They could do it CG on his face or even some sort of mask/digital/face hybrid.
# ::tokens ["They", "could", "find", "ways", "around", "it", "today", "though", ".", "They", "could", "do", "it", "CG", "on", "his", "face", "or", "even", "some", "sort", "of", "mask", "/", "digital", "/", "face", "hybrid", "."]
# ::lemmas ["they", "could", "find", "way", "around", "it", "today", "though", ".", "they", "could", "do", "it", "cg", "on", "his", "face", "or", "even", "some", "sort", "of", "mask", "/", "digital", "/", "face", "hybrid", "."]
(c50-10 / multi-sentence
        :snt1 (c50-6 / have-concession-91
                     :ARG2 (c50-15 / possible-01
                                   :ARG1 (c50-14 / find-01
                                                 :ARG0 (c50-9 / they)
                                                 :ARG1 (c50-18 / way
                                                               :manner-of (c50-8 / around
                                                                                 :op1 (c50-20 / it)))
                                                 :time (c50-13 / today))))
        :snt2 (c50-11 / possible-01
                      :ARG1 (c50-22 / do-02
                                    :ARG0 (c50-21 / they)
                                    :ARG1 (c50-4 / it)
                                    :ARG2 (c50-2 / or
                                                 :op1 (c50-16 / face
                                                              :part-of (c50-19 / he))
                                                 :op2 (c50-5 / hybrid
                                                             :mod (c50-0 / slash
                                                                         :op1 (c50-7 / mask)
                                                                         :op2 (c50-12 / digital)
                                                                         :op3 (c50-17 / face))
                                                             :mod (c50-3 / sort
                                                                         :mod (c50-1 / some)))))))
