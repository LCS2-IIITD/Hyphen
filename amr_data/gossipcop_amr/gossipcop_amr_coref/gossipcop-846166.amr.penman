# ::snt till proven guilty, he's not. Besides if he is, if, keeping quiet for decades made more victims than less. If it is true.
# ::tokens ["till", "proven", "guilty", ",", "he", "'s", "not", ".", "Besides", "if", "he", "is", ",", "if", ",", "keeping", "quiet", "for", "decades", "made", "more", "victims", "than", "less", ".", "If", "it", "is", "true", "."]
# ::lemmas ["till", "prove", "guilty", ",", "he", "be", "not", ".", "besides", "if", "he", "be", ",", "if", ",", "keep", "quiet", "for", "decades", "make", "more", "victim", "than", "less", ".", "if", "it", "be", "true", "."]
(c2-14 / multi-sentence
       :snt1 (c2-21 / prove-01
                    :ARG1 (c2-12 / guilty-01
                                 :ARG1 (c2-5 / he))
                    :time (c2-20 / until
                                 :op1 (c2-15 / prove-01
                                             :ARG1 (c2-2 / guilty-01
                                                         :ARG1 c2-5)))
                    :polarity -)
       :snt2 (c2-22 / have-condition-91
                    :ARG1 (c2-6 / make-02
                                :ARG0 (c2-7 / keep-02
                                            :ARG0 (c2-4 / he)
                                            :ARG1 (c2-10 / quiet-04
                                                         :ARG1 c2-4)
                                            :duration (c2-19 / multiple
                                                             :op1 (c2-11 / temporal-quantity
                                                                         :unit (c2-24 / decade)
                                                                         :quant 1)))
                                :ARG1 (c2-3 / victim
                                            :ARG1-of (c2-18 / have-quant-91
                                                            :ARG3 (c2-16 / more)
                                                            :ARG4 (c2-1 / victim
                                                                        :ARG1-of (c2-8 / have-quant-91
                                                                                       :ARG3 (c2-0 / less)))))
                                :mod (c2-13 / besides))
                    :snt3 (c2-9 / have-condition-91
                                :ARG2 (c2-17 / true-01
                                             :ARG1 (c2-23 / it)))))

# ::snt Wow, I did not know may God Bless Him.
# ::tokens ["Wow", ",", "I", "did", "not", "know", "may", "God", "Bless", "Him", "."]
# ::lemmas ["wow", ",", "i", "do", "not", "know", "may", "God", "bless", "he", "."]
(c3-5 / know-01
      :ARG0 (c3-7 / i)
      :ARG1 (c3-4 / possible-01
                  :ARG1 (c3-0 / bless-01
                              :ARG0 (c3-2 / person
                                          :name (c3-1 / name
                                                      :op1 "God"))
                              :ARG1 (c3-3 / he)))
      :mod (c3-6 / wow
                 :mode expressive)
      :polarity -)

# ::snt ....shame on youuuu! THE Hero of my children Time is a Monster!
# ::tokens ["....", "shame", "on", "youuuu", "!", "THE", "Hero", "of", "my", "children", "Time", "is", "a", "Monster", "!"]
# ::lemmas ["....", "shame", "on", "youuuu", "!", "the", "Hero", "of", "my", "child", "Time", "be", "a", "monster", "!"]
(c4-1 / multi-sentence
      :snt1 (c4-2 / shame-01
                  :ARG1 (c4-0 / you)
                  :mod (c4-9 / umm
                             :mode expressive))
      :snt2 (c4-3 / monster
                  :domain (c4-4 / hero
                                :poss (c4-5 / person
                                            :ARG0-of (c4-7 / have-rel-role-91
                                                           :ARG1 (c4-8 / i)
                                                           :ARG2 (c4-6 / child))))))

# ::snt Who gives a flying f!
# ::tokens ["Who", "gives", "a", "flying", "f", "!"]
# ::lemmas ["who", "give", "a", "fly", "f", "!"]
(c5-0 / give-16
      :ARG0 (c5-3 / amr-unknown)
      :ARG1 (c5-1 / f!
                  :ARG1-of (c5-2 / fly-01))
      :mode expressive)

# ::snt Could this be the tables turning in !?!
# ::tokens ["Could", "this", "be", "the", "tables", "turning", "in", "!", "?", "!"]
# ::lemmas ["could", "this", "be", "the", "table", "turn", "in", "!", "?", "!"]
(c6-0 / possible-01
      :ARG1 (c6-1 / turn-02
                  :ARG1 (c6-4 / table))
      :polarity (c6-3 / amr-unknown)
      :mod (c6-2 / this)
      :mode expressive)

# ::snt Well I wouldn't quite go that far but blindness is REALLY GOOD KARMA!
# ::tokens ["Well", "I", "would", "n't", "quite", "go", "that", "far", "but", "blindness", "is", "REALLY", "GOOD", "KARMA", "!"]
# ::lemmas ["well", "i", "would", "not", "quite", "go", "that", "far", "but", "blindness", "be", "REALLY", "GOOD", "KARMA", "!"]
(c7-3 / say-01
      :ARG0 (c7-7 / i)
      :ARG1 (c7-6 / contrast-01
                  :ARG1 (c7-9 / go-01
                              :ARG1 c7-7
                              :ARG4 (c7-0 / far
                                          :degree (c7-8 / that))
                              :mod (c7-10 / quite)
                              :polarity -)
                  :ARG2 (c7-11 / good-02
                               :ARG1 (c7-1 / blind-02)
                               :degree (c7-4 / really)))
      :ARG2 (c7-5 / person
                  :name (c7-2 / name
                              :op1 "KarMA")))

# ::snt He should have left his alleged victims alone.
# ::tokens ["He", "should", "have", "left", "his", "alleged", "victims", "alone", "."]
# ::lemmas ["he", "should", "have", "leave", "his", "allege", "victim", "alone", "."]
(c8-0 / recommend-01
      :ARG1 (c8-3 / leave-14
                  :ARG0 (c8-2 / he)
                  :ARG1 (c8-4 / person
                              :ARG1-of (c8-1 / victimize-01
                                             :ARG0 c8-2
                                             :ARG1-of (c8-6 / allege-01))
                              :mod (c8-5 / alone))))

# ::snt To much viagra
# ::tokens ["To", "much", "viagra"]
# ::lemmas ["to", "much", "viagra"]
(c9-0 / viagra
      :quant (c9-1 / much))

# ::snt Boo boo. Lock him up.
# ::tokens ["Boo", "boo", ".", "Lock", "him", "up", "."]
# ::lemmas ["Boo", "boo", ".", "lock", "he", "up", "."]
(c10-2 / multi-sentence
       :snt1 (c10-0 / boo-hoo
                    :mode expressive)
       :snt2 (c10-4 / lock-up-03
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-3 / he)
                    :mode imperative))

# ::snt Irrelevant.
# ::tokens ["Irrelevant", "."]
# ::lemmas ["irrelevant", "."]
(c11-0 / relevant-01
       :polarity -)

# ::snt He wasn't blind when he was doping up his victims - he knew exactly whose drink the drugs went in - or whose mouth. So sad these women.
# ::tokens ["He", "was", "n't", "blind", "when", "he", "was", "doping", "up", "his", "victims", "-", "he", "knew", "exactly", "whose", "drink", "the", "drugs", "went", "in", "-", "or", "whose", "mouth", ".", "So", "sad", "these", "women", "."]
# ::lemmas ["he", "be", "not", "blind", "when", "he", "be", "dope", "up", "his", "victim", "-", "he", "know", "exactly", "whose", "drink", "the", "drug", "go", "in", "-", "or", "whose", "mouth", ".", "so", "sad", "these", "woman", "."]
(c12-10 / multi-sentence
        :snt1 (c12-9 / blind-02
                     :ARG1 (c12-4 / he)
                     :time (c12-18 / dope-up-02
                                   :ARG0 c12-4
                                   :ARG1 (c12-15 / person
                                                 :ARG1-of (c12-3 / victimize-01
                                                                 :ARG0 c12-4)))
                     :polarity -)
        :snt2 (c12-5 / know-01
                     :ARG0 (c12-17 / he)
                     :ARG1 (c12-1 / or
                                  :op1 (c12-11 / person
                                               :ARG1-of (c12-13 / drink-01
                                                                :ARG1-of (c12-8 / go-01
                                                                                :ARG4 (c12-12 / drug)))
                                               :part (c12-6 / mouth
                                                            :op2-of c12-1)))
                     :manner (c12-14 / exact))
        :snt3 (c12-0 / sad-02
                     :ARG1 (c12-16 / woman
                                   :mod (c12-7 / this))
                     :degree (c12-2 / so)))

# ::snt He fooled America with his evil ways! What do you think ?. Now its apparent why he was so creepy. Reminds me of Trump!
# ::tokens ["He", "fooled", "America", "with", "his", "evil", "ways", "!", "What", "do", "you", "think", "?", ".", "Now", "its", "apparent", "why", "he", "was", "so", "creepy", ".", "Reminds", "me", "of", "Trump", "!"]
# ::lemmas ["he", "fool", "America", "with", "his", "evil", "way", "!", "what", "do", "you", "think", "?", ".", "now", "its", "apparent", "why", "he", "be", "so", "creepy", ".", "remind", "i", "of", "Trump", "!"]
(c13-8 / multi-sentence
       :snt1 (c13-12 / fool-01
                     :ARG0 (c13-3 / he)
                     :ARG1 (c13-10 / country
                                   :name (c13-13 / name
                                                 :op1 "America"))
                     :ARG2 (c13-18 / way
                                   :mod (c13-15 / evil)
                                   :poss c13-3))
       :snt2 (c13-6 / think-01
                    :ARG0 (c13-2 / you)
                    :ARG1 (c13-5 / amr-unknown))
       :snt3 (c13-4 / appear-02
                    :ARG1 (c13-11 / thing
                                  :ARG0-of (c13-7 / cause-01
                                                  :ARG1 (c13-1 / creepy-04
                                                               :ARG1 (c13-19 / he)
                                                               :degree (c13-0 / so))))
                    :time (c13-9 / now))
       :snt4 (c13-14 / remind-01
                     :ARG1 (c13-16 / person
                                   :name (c13-17 / name
                                                 :op1 "Trump"))
                     :ARG2 (c13-20 / i)))

# ::snt Youth &amp; make some ppl (ALL races) "feel" invincible. Stars or not Caught or not. Karma? Spirit of GOD had written not B erased
# ::tokens ["Youth", "&", "amp", ";", "make", "some", "ppl", "(", "ALL", "races", ")", "\"", "feel", "\"", "invincible", ".", "Stars", "or", "not", "Caught", "or", "not", ".", "Karma", "?", "Spirit", "of", "GOD", "had", "written", "not", "B", "erased"]
# ::lemmas ["Youth", "&", "amp", ";", "make", "some", "ppl", "(", "all", "race", ")", "\"", "feel", "\"", "invincible", ".", "star", "or", "not", "catch", "or", "not", ".", "Karma", "?", "Spirit", "of", "GOD", "have", "write", "not", "b", "erase"]
(c15-14 / multi-sentence
        :snt1 (c15-10 / and
                      :op1 (c15-5 / youth)
                      :op2 (c15-22 / person
                                   :mod (c15-3 / old)))
        :snt2 (c15-7 / make-02
                     :ARG0 (c15-11 / you)
                     :ARG1 (c15-18 / feel-01
                                   :ARG0 (c15-15 / person
                                                 :mod (c15-0 / some)
                                                 :ARG1-of (c15-23 / include-91
                                                                  :ARG2 (c15-20 / race
                                                                                :mod (c15-9 / all))))
                                   :ARG1 (c15-6 / invincible
                                                :domain c15-15))
                     :mode imperative)
        :snt3 (c15-13 / or
                      :op1 (c15-4 / star)
                      :op2 (c15-24 / or
                                   :op1 (c15-16 / catch-02
                                                :ARG1 c15-4
                                                :polarity -)
                                   :op2 (c15-12 / catch-02
                                                :ARG1 c15-4
                                                :polarity -))
                      :snt4 (c15-17 / or
                                    :op1 (c15-8 / karma)
                                    :op2 (c15-21 / erase-01
                                                 :ARG1 (c15-2 / spirit
                                                              :poss (c15-1 / person
                                                                           :name (c15-19 / name
                                                                                         :op1 "God")))
                                                 :polarity -))))

# ::snt Believing is seeing!
# ::tokens ["Believing", "is", "seeing", "!"]
# ::lemmas ["believing", "be", "see", "!"]
(c16-1 / see-01
       :ARG0 (c16-0 / believe-01))

# ::snt Wow. He's life just got darker!
# ::tokens ["Wow", ".", "He", "'s", "life", "just", "got", "darker", "!"]
# ::lemmas ["wow", ".", "he", "be", "life", "just", "get", "dark", "!"]
(c17-0 / multi-sentence
       :snt1 (c17-4 / wow
                    :mode expressive)
       :snt2 (c17-7 / get-03
                    :ARG1 (c17-2 / life
                                 :poss (c17-1 / he))
                    :ARG2 (c17-8 / dark-02
                                 :ARG1 c17-2
                                 :ARG2-of (c17-5 / have-degree-91
                                                 :ARG1 c17-2
                                                 :ARG3 (c17-3 / more)))
                    :mod (c17-6 / just)))

# ::snt But you're still a rapist....
# ::tokens ["But", "you", "'re", "still", "a", "rapist", "...."]
# ::lemmas ["but", "you", "be", "still", "a", "rapist", "...."]
(c18-1 / contrast-01
       :ARG2 (c18-3 / rape-01
                    :ARG0 (c18-2 / you)
                    :mod (c18-0 / still)))

# ::snt Is it a Fr crime?
# ::tokens ["Is", "it", "a", "Fr", "crime", "?"]
# ::lemmas ["be", "it", "a", "Fr", "crime", "?"]
(c19-0 / crime-02
       :polarity (c19-3 / amr-unknown)
       :ARG1 (c19-2 / it)
       :mod (c19-1 / fr))

# ::snt And the Pope is Jewish
# ::tokens ["And", "the", "Pope", "is", "Jewish"]
# ::lemmas ["and", "the", "Pope", "be", "Jewish"]
(c20-5 / and
       :op2 (c20-2 / religious-group
                   :name (c20-0 / name
                                :op1 "Jew")
                   :domain (c20-4 / person
                                  :ARG0-of (c20-3 / have-org-role-91
                                                  :ARG2 (c20-1 / pope)))))

# ::snt Leave the man alone
# ::tokens ["Leave", "the", "man", "alone"]
# ::lemmas ["leave", "the", "man", "alone"]
(c21-2 / leave-14
       :ARG0 (c21-1 / you)
       :ARG1 (c21-3 / alone
                    :domain (c21-0 / man))
       :mode imperative)

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c22-0 / good-02)

# ::snt Karma is creepy how it works its magic so was Bill Cosby
# ::tokens ["Karma", "is", "creepy", "how", "it", "works", "its", "magic", "so", "was", "Bill", "Cosby"]
# ::lemmas ["Karma", "be", "creepy", "how", "it", "work", "its", "magic", "so", "be", "Bill", "Cosby"]
(c23-3 / and
       :op1 (c23-6 / creepy-04
                   :ARG0 (c23-8 / thing
                                :manner-of (c23-7 / work-09
                                                  :ARG0 (c23-5 / product
                                                               :name (c23-0 / name
                                                                            :op1 "Karma"))
                                                  :ARG1 (c23-1 / magic
                                                               :poss c23-5))))
       :op2 (c23-9 / creepy-04
                   :ARG0 (c23-2 / person
                                :name (c23-4 / name
                                             :op1 "Bill"
                                             :op2 "Cosby"))))

# ::snt does that explain the groping?
# ::tokens ["does", "that", "explain", "the", "groping", "?"]
# ::lemmas ["do", "that", "explain", "the", "groping", "?"]
(c24-1 / explain-01
       :polarity (c24-3 / amr-unknown)
       :ARG0 (c24-2 / that)
       :ARG1 (c24-0 / grop-01))
