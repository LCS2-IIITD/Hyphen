# ::snt I hope he feels better soon
# ::tokens ["I", "hope", "he", "feels", "better", "soon"]
# ::lemmas ["i", "hope", "he", "feel", "well", "soon"]
(c1-4 / hope-01
      :ARG0 (c1-7 / i)
      :ARG1 (c1-0 / feel-01
                  :ARG0 (c1-6 / he)
                  :ARG1 (c1-5 / well-05
                              :ARG1 c1-6
                              :ARG2-of (c1-3 / have-degree-91
                                             :ARG1 c1-6
                                             :ARG3 (c1-1 / more)))
                  :time (c1-2 / soon)))

# ::snt Whos john mayer
# ::tokens ["Who", "s", "john", "mayer"]
# ::lemmas ["who", "s", "john", "mayer"]
(c2-1 / person
      :name (c2-0 / name
                  :op1 "John"
                  :op2 "Mayer"))

# ::snt he'll be needing stitches... sorry
# ::tokens ["he", "'ll", "be", "needing", "stitches", "...", "sorry"]
# ::lemmas ["he", "'ll", "be", "need", "stitch", "...", "sorry"]
(c3-5 / and
      :op1 (c3-1 / need-01
                 :ARG0 (c3-3 / he)
                 :ARG1 (c3-2 / stitch))
      :op2 (c3-0 / sorry-01
                 :ARG1 (c3-4 / i)))

# ::snt feel better hun
# ::tokens ["feel", "better", "hun"]
# ::lemmas ["feel", "well", "hun"]
(c4-2 / say-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-0 / feel-01
                  :ARG0 (c4-3 / hun)
                  :ARG1 (c4-6 / good-02
                              :ARG2-of (c4-4 / have-degree-91
                                             :ARG1 c4-0
                                             :ARG3 (c4-1 / more)))
                  :mode imperative)
      :ARG2 c4-3)

# ::snt Hope all is good and that recovery is quick and not too painful.
# ::tokens ["Hope", "all", "is", "good", "and", "that", "recovery", "is", "quick", "and", "not", "too", "painful", "."]
# ::lemmas ["hope", "all", "be", "good", "and", "that", "recovery", "be", "quick", "and", "not", "too", "painful", "."]
(c5-1 / hope-01
      :ARG1 (c5-7 / and
                  :op1 (c5-8 / good-02
                             :ARG1 (c5-6 / all))
                  :op2 (c5-3 / and
                             :op1 (c5-9 / quick-02
                                        :ARG1 (c5-0 / recover-01))
                             :op2 (c5-2 / pain-01
                                        :ARG0 c5-0
                                        :ARG2-of (c5-4 / have-degree-91
                                                       :ARG1 c5-0
                                                       :ARG3 (c5-5 / too)
                                                       :polarity -)))))

# ::snt WHAT
# ::tokens ["WHAT"]
# ::lemmas ["what"]
(c8-0 / amr-unknown)

# ::snt Im all a dither waiting for first post appendectomy tweet. Heres to a safe &amp; speedy recovery
# ::tokens ["I", "m", "all", "a", "dither", "waiting", "for", "first", "post", "appendectomy", "tweet", ".", "Heres", "to", "a", "safe", "&", "amp", ";", "speedy", "recovery"]
# ::lemmas ["i", "m", "all", "a", "dither", "wait", "for", "first", "post", "appendectomy", "tweet", ".", "here", "to", "a", "safe", "&", "amp", ";", "speedy", "recovery"]
(c10-2 / multi-sentence
       :snt1 (c10-7 / wait-01
                    :ARG1 (c10-10 / i
                                  :mod (c10-5 / all))
                    :ARG2 (c10-11 / tweet-01
                                  :ARG1 (c10-4 / surgery-01
                                               :ARG2 (c10-12 / appendectomy))
                                  :ord (c10-0 / ordinal-entity
                                              :value 1)
                                  :time (c10-8 / after
                                               :op1 (c10-3 / now))))
       :snt2 (c10-13 / and
                     :op1 (c10-1 / safe-01)
                     :op2 (c10-9 / amp))
       :snt3 (c10-6 / recover-01
                    :ARG1-of (c10-14 / speedy-03)))

# ::snt SAME!!!!!
# ::tokens ["SAME", "!", "!", "!", "!", "!"]
# ::lemmas ["same", "!", "!", "!", "!", "!"]
(c11-0 / same-01
       :mode expressive)

# ::snt man, fuck appendicitis
# ::tokens ["man", ",", "fuck", "appendicitis"]
# ::lemmas ["man", ",", "fuck", "appendicitis"]
(c12-2 / say-01
       :ARG0 (c12-3 / i)
       :ARG1 (c12-0 / fuck-01
                    :ARG1 (c12-4 / appendicitis)
                    :mode expressive)
       :ARG2 (c12-1 / man))

# ::snt Get well soon!! Im sorry this has happened, but so glad you didnt wait to go in!!! Sending lots of well wishes, prayers, love, &amp; hugs!
# ::tokens ["Get", "well", "soon", "!", "!", "I", "m", "sorry", "this", "has", "happened", ",", "but", "so", "glad", "you", "did", "nt", "wait", "to", "go", "in", "!", "!", "!", "Sending", "lots", "of", "well", "wishes", ",", "prayers", ",", "love", ",", "&", "amp", ";", "hugs", "!"]
# ::lemmas ["get", "well", "soon", "!", "!", "i", "m", "sorry", "this", "have", "happen", ",", "but", "so", "glad", "you", "do", "nt", "wait", "to", "go", "in", "!", "!", "!", "send", "lot", "of", "well", "wish", ",", "prayer", ",", "love", ",", "&", "amp", ";", "hug", "!"]
(c13-16 / multi-sentence
        :snt1 (c13-13 / get-03
                      :ARG1 (c13-8 / you)
                      :ARG2 (c13-21 / well-05
                                    :ARG1 c13-8)
                      :time (c13-1 / soon)
                      :mode imperative)
        :snt2 (c13-17 / contrast-01
                      :ARG1 (c13-7 / sorry-01
                                   :ARG1 (c13-22 / i)
                                   :ARG2 (c13-12 / this))
                      :ARG2 (c13-4 / glad-02
                                   :ARG0 (c13-3 / wait-01
                                                :ARG1 (c13-14 / you)
                                                :ARG2 (c13-5 / go-02
                                                             :ARG0 c13-14
                                                             :ARG4 (c13-9 / inside))
                                                :polarity -)
                                   :ARG1 c13-22
                                   :degree (c13-6 / so)))
        :snt3 (c13-19 / send-01
                      :ARG1 (c13-11 / and
                                    :op1 (c13-18 / wish-01
                                                 :ARG1 (c13-0 / well-05)
                                                 :quant (c13-2 / lot))
                                    :op2 (c13-20 / pray-01
                                                 :quant c13-2)
                                    :op3 (c13-15 / love-01
                                                 :quant c13-2)
                                    :op4 (c13-10 / hug-01
                                                 :quant c13-2))))

# ::snt Laura and John Mayer are one in the same
# ::tokens ["Laura", "and", "John", "Mayer", "are", "one", "in", "the", "same"]
# ::lemmas ["Laura", "and", "John", "Mayer", "be", "one", "in", "the", "same"]
(c14-2 / same-01
       :ARG1 (c14-4 / person
                    :name (c14-0 / name
                                 :op1 "Laura"))
       :ARG2 (c14-1 / person
                    :name (c14-3 / name
                                 :op1 "John"
                                 :op2 "Mayer")))

# ::snt cheeky
# ::tokens ["cheeky"]
# ::lemmas ["cheeky"]
(c15-0 / cheeky)

# ::snt thoughts &amp; prayers
# ::tokens ["thoughts", "&", "amp", ";", "prayers"]
# ::lemmas ["thoughts", "&", "amp", ";", "prayer"]
(c16-0 / and
       :op1 (c16-3 / think-01)
       :op2 (c16-4 / thing
                   :ARG1-of (c16-2 / amp-01))
       :op3 (c16-1 / pray-01))

# ::snt Kurang kurangin makan indomie bang
# ::tokens ["Kurang", "kurangin", "makan", "indomie", "bang"]
# ::lemmas ["Kurang", "kurangin", "makan", "indomie", "bang"]
(c18-0 / bang
       :mod (c18-2 / ethnic-group
                   :name (c18-1 / name
                                :op1 "Kurang")
                   :mod-of c18-0)
       :name c18-1
       :op1 "Indomie")

# ::snt Oh no, I hope he is fine!!! Sending all my thoughts!
# ::tokens ["Oh", "no", ",", "I", "hope", "he", "is", "fine", "!", "!", "!", "Sending", "all", "my", "thoughts", "!"]
# ::lemmas ["oh", "no", ",", "i", "hope", "he", "be", "fine", "!", "!", "!", "send", "all", "my", "thought", "!"]
(c19-2 / multi-sentence
       :snt1 (c19-6 / hope-01
                    :ARG0 (c19-8 / i)
                    :ARG1 (c19-0 / fine-04
                                 :ARG1 (c19-7 / he))
                    :mod (c19-1 / oh-no
                                :mode expressive)
                    :mode expressive)
       :snt2 (c19-3 / send-01
                    :ARG0 (c19-4 / i)
                    :ARG1 (c19-9 / thing
                                 :ARG1-of (c19-10 / think-01
                                                  :ARG0 c19-4)
                                 :mod (c19-5 / all))
                    :mode expressive))

# ::snt Hey , hope Johnnys doing okay.
# ::tokens ["Hey", ",", "hope", "Johnnys", "doing", "okay", "."]
# ::lemmas ["hey", ",", "hope", "Johnnys", "do", "okay", "."]
(c20-2 / hope-01
       :ARG0 (c20-5 / i)
       :ARG1 (c20-0 / okay-04
                    :ARG1 (c20-3 / person
                                 :name (c20-1 / name
                                              :op1 "Johnnys")))
       :mod (c20-4 / hey
                   :mode expressive))

# ::snt Porra... impossvel. Que susto!
# ::tokens ["Porra", "...", "impossvel", ".", "Que", "susto", "!"]
# ::lemmas ["Porra", "...", "impossvel", ".", "Que", "susto", "!"]
(c21-1 / multi-sentence
       :snt1 (c21-2 / impossvel)
       :snt2 (c21-0 / Que
                    :mode expressive))

# ::snt I feel the same way every time I hear his music
# ::tokens ["I", "feel", "the", "same", "way", "every", "time", "I", "hear", "his", "music"]
# ::lemmas ["i", "feel", "the", "same", "way", "every", "time", "i", "hear", "his", "music"]
(c22-0 / feel-01
       :ARG0 (c22-7 / i)
       :ARG1 (c22-5 / way
                    :ARG1-of (c22-2 / same-01))
       :frequency (c22-3 / rate-entity-91
                         :ARG4 (c22-4 / hear-01
                                      :ARG0 c22-7
                                      :ARG1 (c22-1 / music
                                                   :poss (c22-6 / he)))))

# ::snt u ok hun?
# ::tokens ["u", "ok", "hun", "?"]
# ::lemmas ["u", "ok", "hun", "?"]
(c23-0 / okay-01
       :polarity (c23-3 / amr-unknown)
       :ARG1 (c23-1 / you)
       :ARG2 (c23-2 / hun))

# ::snt NAH
# ::tokens ["NAH"]
# ::lemmas ["NAH"]
(c24-1 / person
       :name (c24-0 / name
                    :op1 "NAH"))

# ::snt Get well soon
# ::tokens ["Get", "well", "soon"]
# ::lemmas ["get", "well", "soon"]
(c27-0 / get-03
       :ARG1 (c27-2 / you)
       :ARG2 (c27-1 / well-05
                    :ARG1 c27-2)
       :time (c27-3 / soon)
       :mode imperative)

# ::snt Emergency appendectomy
# ::tokens ["Emergency", "appendectomy"]
# ::lemmas ["emergency", "appendectomy"]
(c28-1 / appendectomy
       :mod (c28-0 / emergency))

# ::snt Oh you got this you'll be well in no time and singing like a song bird like you always do.
# ::tokens ["Oh", "you", "got", "this", "you", "'ll", "be", "well", "in", "no", "time", "and", "singing", "like", "a", "song", "bird", "like", "you", "always", "do", "."]
# ::lemmas ["oh", "you", "get", "this", "you", "'ll", "be", "well", "in", "no", "time", "and", "singe", "like", "a", "song", "bird", "like", "you", "always", "do", "."]
(c29-4 / multi-sentence
       :snt1 (c29-12 / get-01
                     :ARG0 (c29-3 / you)
                     :ARG1 (c29-11 / this)
                     :mod (c29-0 / oh
                                 :mode expressive))
       :snt2 (c29-7 / and
                    :op1 (c29-9 / well-09
                                :ARG1 (c29-14 / you)
                                :time (c29-15 / time
                                              :polarity -))
                    :op2 (c29-5 / sing-01
                                :ARG0 c29-14
                                :ARG1-of (c29-8 / resemble-01
                                                :ARG2 (c29-1 / sing-01
                                                             :ARG0 c29-14
                                                             :ARG1 (c29-2 / bird
                                                                          :mod (c29-16 / song))
                                                             :ARG1-of (c29-6 / resemble-01
                                                                             :ARG2 (c29-13 / do-02
                                                                                           :ARG0 c29-14
                                                                                           :time (c29-10 / always))))))))

# ::snt Sending healing energy your way. Feel better soon
# ::tokens ["Sending", "healing", "energy", "your", "way", ".", "Feel", "better", "soon"]
# ::lemmas ["send", "healing", "energy", "your", "way", ".", "feel", "well", "soon"]
(c30-3 / multi-sentence
       :snt1 (c30-5 / send-01
                    :ARG0 (c30-2 / you)
                    :ARG1 (c30-6 / energy
                                 :mod (c30-7 / heal-01))
                    :manner (c30-9 / way
                                   :poss c30-2))
       :snt2 (c30-0 / feel-01
                    :ARG0 (c30-11 / you)
                    :ARG1 (c30-4 / good-02
                                 :ARG2-of (c30-10 / have-degree-91
                                                  :ARG1 c30-11
                                                  :ARG3 (c30-8 / more)))
                    :time (c30-1 / soon)))

# ::snt baby!!!!!!!!!!
# ::tokens ["baby", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["baby", "!", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c31-0 / baby
       :mode expressive)

# ::snt You ll survive and write a song about it entitled surgery is an amusement park....
# ::tokens ["You", "ll", "survive", "and", "write", "a", "song", "about", "it", "entitled", "surgery", "is", "an", "amusement", "park", "...."]
# ::lemmas ["you", "ll", "survive", "and", "write", "a", "song", "about", "it", "entitle", "surgery", "be", "an", "amusement", "park", "...."]
(c32-6 / and
       :op1 (c32-2 / survive-01
                   :ARG0 (c32-1 / you))
       :op2 (c32-4 / write-01
                   :ARG0 c32-1
                   :ARG1 (c32-0 / song
                                :ARG1-of (c32-3 / entitle-02
                                                :ARG2 (c32-5 / amusement-park
                                                             :domain (c32-7 / surgery-01))))))

# ::snt bb
# ::tokens ["bb"]
# ::lemmas ["bb"]
(c33-1 / person
       :name (c33-0 / name
                    :op1 "bb"))

# ::snt Get well soon
# ::tokens ["Get", "well", "soon"]
# ::lemmas ["get", "well", "soon"]
(c34-0 / get-03
       :ARG1 (c34-2 / you)
       :ARG2 (c34-1 / well-05
                    :ARG1 c34-2)
       :time (c34-3 / soon)
       :mode imperative)

# ::snt John Mayer has been hospitalized for an emergency appendectomy
# ::tokens ["John", "Mayer", "has", "been", "hospitalized", "for", "an", "emergency", "appendectomy"]
# ::lemmas ["John", "Mayer", "have", "be", "hospitalize", "for", "an", "emergency", "appendectomy"]
(c35-2 / hospitalize-01
       :ARG1 (c35-3 / person
                    :name (c35-0 / name
                                 :op1 "John"
                                 :op2 "Mayer"))
       :ARG3 (c35-1 / emergency
                    :op1 (c35-4 / appendectomy)))

# ::snt Omg I hope everything may be solved quickly and without complications
# ::tokens ["Omg", "I", "hope", "everything", "may", "be", "solved", "quickly", "and", "without", "complications"]
# ::lemmas ["Omg", "i", "hope", "everything", "may", "be", "solve", "quickly", "and", "without", "complication"]
(c36-3 / hope-01
       :ARG0 (c36-6 / i)
       :ARG1 (c36-4 / possible-01
                    :ARG1 (c36-1 / solve-01
                                 :ARG1 (c36-2 / everything)
                                 :ARG1-of (c36-7 / quick-02)
                                 :manner (c36-5 / complicate-01
                                                :polarity -)))
       :mod (c36-0 / oh-my-god
                   :mode expressive))

# ::snt loalaaaah
# ::tokens ["loalaaaah"]
# ::lemmas ["loalaaaah"]
(c37-0 / laugh-01
       :mode expressive)

# ::snt praying for u babe
# ::tokens ["praying", "for", "u", "babe"]
# ::lemmas ["pray", "for", "u", "babe"]
(c38-2 / say-01
       :ARG1 (c38-1 / pray-01
                    :beneficiary (c38-0 / babe
                                        :ARG2-of c38-2)))

# ::snt fica calma
# ::tokens ["fica", "calma"]
# ::lemmas ["fica", "calma"]
(c39-1 / product
       :name (c39-0 / name
                    :op1 "Fica"
                    :op2 "Calma"))

# ::snt Sending love and best wishes to dearest for an easy time and speedy recovery.. Please take care.
# ::tokens ["Sending", "love", "and", "best", "wishes", "to", "dearest", "for", "an", "easy", "time", "and", "speedy", "recovery", "..", "Please", "take", "care", "."]
# ::lemmas ["send", "love", "and", "good", "wish", "to", "dearest", "for", "an", "easy", "time", "and", "speedy", "recovery", "..", "please", "take", "care", "."]
(c41-2 / multi-sentence
       :snt1 (c41-3 / send-01
                    :ARG1 (c41-13 / and
                                  :op1 (c41-7 / love-01)
                                  :op2 (c41-9 / wish-01
                                              :ARG1 (c41-12 / and
                                                            :op1 (c41-11 / time
                                                                         :ARG1-of (c41-5 / easy-05))
                                                            :op2 (c41-4 / recover-01
                                                                        :ARG1-of (c41-0 / speedy-03)))
                                              :ARG2 (c41-15 / dear)
                                              :ARG1-of (c41-6 / have-degree-91
                                                              :ARG2 (c41-14 / good-02
                                                                            :ARG1 c41-9)
                                                              :ARG3 (c41-8 / most))))
                    :ARG2 c41-15)
       :snt2 (c41-10 / care-03
                     :ARG0 (c41-1 / you)
                     :polite +
                     :mode imperative))

# ::snt Now that is a genuine reason to cancel. Not over a sprained finger...
# ::tokens ["Now", "that", "is", "a", "genuine", "reason", "to", "cancel", ".", "Not", "over", "a", "sprained", "finger", "..."]
# ::lemmas ["now", "that", "be", "a", "genuine", "reason", "to", "cancel", ".", "not", "over", "a", "sprain", "finger", "..."]
(c42-2 / multi-sentence
       :snt1 (c42-5 / reason
                    :domain (c42-7 / that)
                    :mod (c42-8 / genuine)
                    :ARG0-of (c42-6 / cause-01
                                    :ARG1 (c42-9 / cancel-01)
                                    :time (c42-3 / now)))
       :snt2 (c42-0 / over
                    :op1 (c42-1 / finger
                                :ARG1-of (c42-4 / sprain-01))
                    :polarity -))

# ::snt I hope he doesn't get peritonitis. Hope all goes well.
# ::tokens ["I", "hope", "he", "does", "n't", "get", "peritonitis", ".", "Hope", "all", "goes", "well", "."]
# ::lemmas ["i", "hope", "he", "do", "not", "get", "peritonitis", ".", "hope", "all", "go", "well", "."]
(c43-0 / multi-sentence
       :snt1 (c43-3 / hope-01
                    :ARG0 (c43-7 / i)
                    :ARG1 (c43-9 / get-01
                                 :ARG0 (c43-6 / he)
                                 :ARG1 (c43-4 / peritonitis)
                                 :polarity -))
       :snt2 (c43-2 / hope-01
                    :ARG0 c43-7
                    :ARG1 (c43-8 / go-on-15
                                 :ARG1 (c43-1 / all)
                                 :ARG1-of (c43-5 / well-09))))

# ::snt Don't rush it John. Let your body heal.
# ::tokens ["Do", "n't", "rush", "it", "John", ".", "Let", "your", "body", "heal", "."]
# ::lemmas ["do", "not", "rush", "it", "John", ".", "let", "your", "body", "heal", "."]
(c44-2 / multi-sentence
       :snt1 (c44-4 / say-01
                    :ARG0 (c44-10 / i)
                    :ARG1 (c44-6 / rush-01
                                 :ARG0 (c44-8 / person
                                              :name (c44-3 / name
                                                           :op1 "John"))
                                 :ARG1 (c44-5 / it)
                                 :polarity -
                                 :mode imperative)
                    :ARG2 c44-8)
       :snt2 (c44-9 / let-01
                    :ARG0 (c44-1 / you)
                    :ARG1 (c44-7 / heal-01
                                 :ARG1 (c44-0 / body
                                              :poss c44-1))
                    :mode imperative))

# ::snt Jesus. Lets just hope he doesnt end up at
# ::tokens ["Jesus", ".", "Lets", "just", "hope", "he", "does", "nt", "end", "up", "at"]
# ::lemmas ["Jesus", ".", "let", "just", "hope", "he", "do", "not", "end", "up", "at"]
(c45-1 / multi-sentence
       :snt1 (c45-4 / person
                    :name (c45-0 / name
                                 :op1 "Jesus")
                    :mode expressive)
       :snt2 (c45-3 / hope-01
                    :ARG0 (c45-6 / we)
                    :ARG1 (c45-2 / end-up-03
                                 :ARG1 (c45-7 / he)
                                 :ARG2 (c45-5 / location)
                                 :polarity -)
                    :mod (c45-8 / just)
                    :mode imperative))

# ::snt Cuiden al chiquito!!!
# ::tokens ["Cuiden", "al", "chiquito", "!", "!", "!"]
# ::lemmas ["Cuiden", "al", "chiquito", "!", "!", "!"]
(c46-0 / cuiden
       :mod (c46-1 / al-chiquito))

# ::snt Qqqqqqqqqq
# ::tokens ["Qqqqqqqqqq"]
# ::lemmas ["Qqqqqqqqqq"]
(c47-0 / string-entity
       :value "Qqqqqqqq")

# ::snt Im praying for the best
# ::tokens ["I", "m", "praying", "for", "the", "best"]
# ::lemmas ["i", "m", "pray", "for", "the", "good"]
(c48-2 / pray-01
       :ARG0 (c48-3 / i)
       :ARG1 (c48-4 / thing
                    :ARG1-of (c48-1 / have-degree-91
                                    :ARG2 (c48-5 / good-02
                                                 :ARG1 c48-4)
                                    :ARG3 (c48-0 / most))))

# ::snt Now he can be a deusch bag to the female nurses
# ::tokens ["Now", "he", "can", "be", "a", "deusch", "bag", "to", "the", "female", "nurses"]
# ::lemmas ["now", "he", "can", "be", "a", "deusch", "bag", "to", "the", "female", "nurse"]
(c49-4 / possible-01
       :ARG1 (c49-1 / bag
                    :mod (c49-6 / deusch)
                    :domain (c49-3 / he)
                    :beneficiary (c49-2 / nurse
                                        :mod (c49-0 / female)))
       :time (c49-5 / now))
