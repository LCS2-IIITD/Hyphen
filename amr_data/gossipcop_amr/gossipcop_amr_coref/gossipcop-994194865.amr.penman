# ::snt Reps won't support her b/c she trans. Dems won't b/c she repub. LGBT+ won't because she does support our community. No chance to win.
# ::tokens ["Reps", "wo", "n't", "support", "her", "b", "/", "c", "she", "trans", ".", "Dems", "wo", "n't", "b", "/", "c", "she", "repub", ".", "LGBT+", "wo", "n't", "because", "she", "does", "support", "our", "community", ".", "No", "chance", "to", "win", "."]
# ::lemmas ["rep", "will", "not", "support", "she", "b", "/", "c", "she", "tran", ".", "dem", "will", "not", "b", "/", "c", "she", "repub", ".", "LGBT+", "will", "not", "because", "she", "do", "support", "our", "community", ".", "no", "chance", "to", "win", "."]
(c1-11 / multi-sentence
       :snt1 (c1-0 / support-01
                   :ARG0 (c1-18 / person
                                :ARG0-of (c1-8 / have-org-role-91
                                               :ARG1 (c1-12 / political-party
                                                            :name (c1-16 / name
                                                                         :op1 "Republican"))))
                   :ARG1 (c1-7 / she)
                   :ARG1-of (c1-14 / cause-01
                                   :ARG0 (c1-9 / transgressive
                                               :domain c1-7))
                   :polarity -)
       :snt2 (c1-6 / support-01
                   :ARG0 (c1-5 / person
                               :ARG0-of (c1-20 / have-org-role-91
                                               :ARG1 (c1-3 / political-party
                                                           :name (c1-13 / name
                                                                        :op1 "Democratic"
                                                                        :op2 "Party"))))
                   :ARG1 (c1-17 / she)
                   :ARG1-of (c1-10 / cause-01
                                   :ARG0 (c1-1 / support-01
                                               :ARG0 c1-17
                                               :ARG1 (c1-4 / community
                                                           :poss (c1-19 / we))))
                   :polarity -)
       :snt3 (c1-15 / chance-02
                    :ARG1 (c1-2 / win-01)
                    :polarity -))

# ::snt You'll age and no one cares for you or your views killer.
# ::tokens ["You", "'ll", "age", "and", "no", "one", "cares", "for", "you", "or", "your", "views", "killer", "."]
# ::lemmas ["you", "'ll", "age", "and", "no", "one", "care", "for", "you", "or", "your", "view", "killer", "."]
(c2-7 / and
      :op1 (c2-6 / age-01
                 :ARG1 (c2-1 / you))
      :op2 (c2-5 / care-01
                 :ARG0 (c2-2 / no-one)
                 :ARG1 (c2-0 / or
                             :op1 c2-1
                             :op2 (c2-3 / view-02
                                        :ARG0 c2-1
                                        :ARG0-of (c2-4 / kill-01)))))

# ::snt keep it
# ::tokens ["keep", "it"]
# ::lemmas ["keep", "it"]
(c3-1 / keep-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-2 / it)
      :mode imperative)

# ::snt Dems called a special secret meeting when Kid Rock announced a run, the way the've been losing, now they panic at Caitlyn running..
# ::tokens ["Dems", "called", "a", "special", "secret", "meeting", "when", "Kid", "Rock", "announced", "a", "run", ",", "the", "way", "the've", "been", "losing", ",", "now", "they", "panic", "at", "Caitlyn", "running", ".."]
# ::lemmas ["dem", "call", "a", "special", "secret", "meeting", "when", "Kid", "Rock", "announce", "a", "run", ",", "the", "way", "the've", "been", "lose", ",", "now", "they", "panic", "at", "Caitlyn", "run", ".."]
(c4-13 / call-03
       :ARG0 (c4-17 / person
                    :ARG0-of (c4-6 / have-org-role-91
                                   :ARG1 (c4-11 / political-party
                                                :name (c4-15 / name
                                                             :op1 "Democrat"))))
       :ARG1 (c4-10 / meet-03
                    :mod (c4-0 / secret)
                    :ARG1-of (c4-5 / special-02))
       :time (c4-8 / announce-01
                   :ARG0 (c4-3 / person
                               :name (c4-12 / name
                                            :op1 "Kid"
                                            :op2 "Rock"))
                   :ARG1 (c4-16 / run-02
                                :ARG0 c4-3))
       :ARG1-of (c4-9 / cause-01
                      :ARG0 (c4-1 / lose-03
                                  :ARG0 c4-3
                                  :ARG1-of c4-9
                                  :ARG0 (c4-2 / panic-01
                                              :ARG0 c4-17
                                              :ARG1 (c4-4 / run-02
                                                          :ARG0 (c4-7 / person
                                                                      :name (c4-18 / name
                                                                                   :op1 "Caitlyn")))
                                              :time (c4-14 / now)))))

# ::snt Idiot
# ::tokens ["Idiot"]
# ::lemmas ["idiot"]
(c5-0 / idiot)

# ::snt What a fuckin joke.
# ::tokens ["What", "a", "fuckin", "joke", "."]
# ::lemmas ["what", "a", "fuckin", "joke", "."]
(c7-1 / joke-01
      :mod (c7-0 / fucking
                 :degree (c7-2 / so)
                 :mode expressive))

# ::snt No!
# ::tokens ["No", "!"]
# ::lemmas ["no", "!"]
(c8-0 / no)

# ::snt If she does run she is going to have to take it out of state. No body is going to vote for a trump supporting oddball
# ::tokens ["If", "she", "does", "run", "she", "is", "going", "to", "have", "to", "take", "it", "out", "of", "state", ".", "No", "body", "is", "going", "to", "vote", "for", "a", "trump", "supporting", "oddball"]
# ::lemmas ["if", "she", "do", "run", "she", "be", "go", "to", "have", "to", "take", "it", "out", "of", "state", ".", "no", "body", "be", "go", "to", "vote", "for", "a", "trump", "support", "oddball"]
(c9-4 / multi-sentence
      :snt1 (c9-0 / obligate-01
                  :ARG1 (c9-5 / she)
                  :ARG2 (c9-9 / take-out-11
                              :ARG0 c9-5
                              :ARG1 (c9-8 / it)
                              :source (c9-1 / state))
                  :condition (c9-6 / run-02
                                   :ARG0 c9-5))
      :snt2 (c9-7 / vote-01
                  :ARG0 (c9-2 / body)
                  :ARG1 (c9-3 / oddball
                              :ARG0-of (c9-11 / support-01
                                              :ARG1 (c9-10 / trump)))
                  :polarity -))

# ::snt Where is Miley Cyrus when you need her to come in like a Wrecking Ball...
# ::tokens ["Where", "is", "Miley", "Cyrus", "when", "you", "need", "her", "to", "come", "in", "like", "a", "Wrecking", "Ball", "..."]
# ::lemmas ["where", "be", "Miley", "Cyrus", "when", "you", "need", "she", "to", "come", "in", "like", "a", "Wrecking", "Ball", "..."]
(c10-0 / be-located-at-91
       :ARG1 (c10-5 / person
                    :name (c10-2 / name
                                 :op1 "Miley"
                                 :op2 "Cyrus"))
       :ARG2 (c10-9 / amr-unknown)
       :time (c10-4 / need-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-7 / come-in-07
                                 :ARG1 c10-5
                                 :ARG1-of (c10-3 / resemble-01
                                                 :ARG2 (c10-6 / ball
                                                              :ARG0-of (c10-8 / wreck-01))))))

# ::snt They have Ann Culter as a figurehead, anything' possible.
# ::tokens ["They", "have", "Ann", "Culter", "as", "a", "figurehead", ",", "anything", "'", "possible", "."]
# ::lemmas ["they", "have", "Ann", "Culter", "as", "a", "figurehead", ",", "anything", "'", "possible", "."]
(c11-5 / have-03
       :ARG0 (c11-7 / they)
       :ARG1 (c11-0 / figurehead
                    :domain (c11-6 / person
                                   :name (c11-1 / name
                                                :op1 "Ann"
                                                :op2 "Culter"))
                    :ARG1-of (c11-2 / mean-01
                                    :ARG2 (c11-4 / anything
                                                 :ARG1-of (c11-3 / possible-01)))))

# ::snt Just wanting attention.
# ::tokens ["Just", "wanting", "attention", "."]
# ::lemmas ["just", "want", "attention", "."]
(c12-0 / want-01
       :ARG1 (c12-2 / attend-02)
       :mod (c12-1 / just))

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c13-0 / care-01
       :ARG0 (c13-1 / amr-unknown))

# ::snt Run for what office!!!
# ::tokens ["Run", "for", "what", "office", "!", "!", "!"]
# ::lemmas ["run", "for", "what", "office", "!", "!", "!"]
(c14-0 / run-02
       :ARG1 (c14-1 / you)
       :ARG2 (c14-3 / office
                    :mod (c14-2 / amr-unknown)))

# ::snt Lord help us.
# ::tokens ["Lord", "help", "us", "."]
# ::lemmas ["Lord", "help", "we", "."]
(c15-1 / help-01
       :ARG0 (c15-2 / person
                    :name (c15-0 / name
                                 :op1 "Lord"))
       :ARG2 (c15-3 / we)
       :mode imperative)

# ::snt Thanks for the joke of the day.
# ::tokens ["Thanks", "for", "the", "joke", "of", "the", "day", "."]
# ::lemmas ["thank", "for", "the", "joke", "of", "the", "day", "."]
(c16-3 / thank-01
       :ARG1 (c16-1 / you)
       :ARG2 (c16-2 / joke-01
                    :time (c16-0 / day)))

# ::snt NO NO NO to them all
# ::tokens ["NO", "NO", "NO", "to", "them", "all"]
# ::lemmas ["no", "no", "no", "to", "they", "all"]
(c17-1 / no
       :beneficiary (c17-2 / they
                           :mod (c17-0 / all))
       :mode expressive)

# ::snt They all have the right to run and they have an obligation to the American people to be well informed and knowledgeable! Don't be like Trump
# ::tokens ["They", "all", "have", "the", "right", "to", "run", "and", "they", "have", "an", "obligation", "to", "the", "American", "people", "to", "be", "well", "informed", "and", "knowledgeable", "!", "Do", "n't", "be", "like", "Trump"]
# ::lemmas ["you", "all", "have", "the", "right", "to", "run", "and", "they", "have", "an", "obligation", "to", "the", "American", "people", "to", "be", "well", "informed", "and", "knowledgeable", "!", "do", "not", "be", "like", "Trump"]
(c18-2 / multi-sentence
       :snt1 (c18-6 / and
                    :op1 (c18-5 / right-05
                                :ARG1 (c18-15 / they
                                              :mod (c18-14 / all))
                                :ARG2 (c18-17 / run-02
                                              :ARG0 c18-15))
                    :op2 (c18-0 / oblige-01
                                :ARG1 c18-15
                                :ARG2 (c18-12 / and
                                              :op1 (c18-16 / inform-01
                                                           :ARG1 (c18-8 / person
                                                                        :mod (c18-11 / country
                                                                                     :name (c18-3 / name
                                                                                                  :op1 "America")))
                                                           :manner (c18-13 / well))
                                              :op2 (c18-9 / know-01
                                                          :ARG0 c18-8))))
       :snt2 (c18-10 / resemble-01
                     :ARG1 (c18-1 / you)
                     :ARG2 (c18-4 / person
                                  :name (c18-7 / name
                                               :op1 "Trump"))
                     :polarity -
                     :mode imperative))

# ::snt Bruce Gender, Kid Rock and the Russians are running Republican Donald Trump ran Republican what is happening to the Grand Old Party
# ::tokens ["Bruce", "Gender", ",", "Kid", "Rock", "and", "the", "Russians", "are", "running", "Republican", "Donald", "Trump", "ran", "Republican", "what", "is", "happening", "to", "the", "Grand", "Old", "Party"]
# ::lemmas ["Bruce", "Gender", ",", "Kid", "Rock", "and", "the", "Russians", "be", "run", "Republican", "Donald", "Trump", "run", "Republican", "what", "be", "happen", "to", "the", "Grand", "Old", "Party"]
(c19-2 / run-02
       :ARG0 (c19-11 / and
                     :op1 (c19-4 / person
                                 :name (c19-0 / name
                                              :op1 "Bruce"
                                              :op2 " Gender"))
                     :op2 (c19-1 / person
                                 :name (c19-3 / name
                                              :op1 "Kid"
                                              :op2 "Rock"))
                     :op3 (c19-13 / person
                                  :mod (c19-6 / country
                                              :name (c19-5 / name
                                                           :op1 "Russia"))))
       :ARG1 (c19-7 / political-party
                    :name (c19-8 / name
                                 :op1 "Republican"))
       :ARG1-of (c19-14 / contrast-01
                        :ARG2 (c19-12 / run-02
                                      :ARG0 (c19-10 / person
                                                    :name (c19-9 / name
                                                                 :op1 "Donald"
                                                                 :op2 "Trump"))
                                      :ARG1 c19-7)))

# ::snt More, Larry ,Curly!!!
# ::tokens ["More", ",", "Larry", ",", "Curly", "!", "!", "!"]
# ::lemmas ["more", ",", "Larry", ",", "Curly", "!", "!", "!"]
(c20-2 / say-01
       :ARG0 (c20-4 / i)
       :ARG1 (c20-1 / more)
       :ARG2 (c20-3 / person
                    :name (c20-0 / name
                                 :op1 "Larry")))

# ::snt oh god not framkenstien
# ::tokens ["oh", "god", "not", "framkenstien"]
# ::lemmas ["oh", "god", "not", "framkenstien"]
(c21-1 / person
       :name (c21-0 / name
                    :op1 "Framkenstien")
       :mod (c21-2 / oh
                   :mode expressive)
       :polarity -)

# ::snt ATTENTION: Don't sneeze,doze or daydream! Another reality star applying for a job they're NOT qualified for- position currently filled by
# ::tokens ["ATTENTION", ":", "Do", "n't", "sneeze", ",", "doze", "or", "daydream", "!", "Another", "reality", "star", "applying", "for", "a", "job", "they", "'re", "NOT", "qualified", "for-", "position", "currently", "filled", "by"]
# ::lemmas ["attention", ":", "do", "not", "sneeze", ",", "doze", "or", "daydream", "!", "another", "reality", "star", "apply", "for", "a", "job", "they", "be", "not", "qualified", "for-", "position", "currently", "fill", "by"]
(c22-5 / multi-sentence
       :snt1 (c22-4 / notice-03
                    :ARG1 (c22-0 / or
                                 :op1 (c22-6 / sneeze-01
                                             :ARG0 (c22-3 / you)
                                             :polarity -
                                             :mode imperative)
                                 :op2 (c22-14 / doze-01
                                              :ARG0 c22-3
                                              :polarity -
                                              :mode imperative)
                                 :op3 (c22-9 / daydream-00
                                             :ARG0 c22-3
                                             :polarity -
                                             :mode imperative)))
       :snt2 (c22-12 / apply-01
                     :ARG0 (c22-1 / star
                                  :mod (c22-7 / reality)
                                  :mod (c22-11 / another))
                     :ARG1 (c22-10 / job
                                   :ARG2-of (c22-13 / qualify-02
                                                    :ARG1 c22-1
                                                    :polarity -))
                     :ARG2-of (c22-2 / fill-01
                                     :time (c22-8 / current))))

# ::snt Would be better than Hillary
# ::tokens ["Would", "be", "better", "than", "Hillary"]
# ::lemmas ["would", "be", "well", "than", "Hillary"]
(c23-2 / have-degree-91
       :ARG2 (c23-4 / good-02)
       :ARG3 (c23-1 / more)
       :ARG4 (c23-3 / person
                    :name (c23-0 / name
                                 :op1 "Hillary")))

# ::snt South Park called it!!!
# ::tokens ["South", "Park", "called", "it", "!", "!", "!"]
# ::lemmas ["South", "Park", "call", "it", "!", "!", "!"]
(c24-0 / call-01
       :ARG0 (c24-1 / broadcast-program
                    :name (c24-2 / name
                                 :op1 "South"
                                 :op2 "Park"))
       :ARG1 (c24-3 / it))

# ::snt Ppl need be tested as looks easy st;Medical &amp; Mental stability.2nd;Knowledge America &amp; World History rd;Knowledge ALL governments work
# ::tokens ["Ppl", "need", "be", "tested", "as", "looks", "easy", "st;Medical", "&", "amp", ";", "Mental", "stability.2nd;Knowledge", "America", "&", "amp", ";", "World", "History", "rd;Knowledge", "ALL", "governments", "work"]
# ::lemmas ["Ppl", "need", "be", "test", "as", "look", "easy", "st;medical", "&", "amp", ";", "Mental", "stability.2nd;Knowledge", "America", "&", "amp", ";", "World", "History", "rd;Knowledge", "all", "government", "work"]
(c25-13 / multi-sentence
        :snt1 (c25-19 / need-01
                      :ARG1 (c25-11 / test-01
                                    :ARG1 (c25-21 / person)
                                    :manner (c25-1 / look-02
                                                   :ARG1 (c25-20 / easy-05))))
        :snt2 (c25-10 / and
                      :op1 (c25-5 / medical)
                      :op2 (c25-18 / medication)
                      :op3 (c25-0 / stability
                                  :mod (c25-15 / mental))
                      :ord (c25-4 / ordinal-entity
                                  :value 2))
        :snt3 (c25-6 / know-ledge-01
                     :ARG1 (c25-9 / and
                                  :op1 (c25-16 / country
                                               :name (c25-14 / name
                                                             :op1 "America"))
                                  :op2 (c25-8 / amp)))
        :snt4 (c25-17 / know-ledge-01
                      :ARG1 (c25-7 / history
                                   :mod (c25-22 / world)))
        :snt5 (c25-2 / work-01
                     :ARG0 (c25-12 / government-organization
                                   :ARG0-of (c25-3 / govern-01)
                                   :mod (c25-23 / all))))

# ::snt Oh, pulease! Kid Rock?! "Caitlyn" Jenner?! Apparently the thinking is "Well, if trump can get elected, ANYBODY can! NO EXPERIENCE NECESSARY"
# ::tokens ["Oh", ",", "pulease", "!", "Kid", "Rock", "?", "!", "\"", "Caitlyn", "\"", "Jenner", "?", "!", "Apparently", "the", "thinking", "is", "\"", "Well", ",", "if", "trump", "can", "get", "elected", ",", "ANYBODY", "can", "!", "NO", "EXPERIENCE", "NECESSARY", "\""]
# ::lemmas ["oh", ",", "pulease", "!", "Kid", "Rock", "?", "!", "\"", "Caitlyn", "\"", "Jenner", "?", "!", "apparently", "the", "thinking", "be", "\"", "well", ",", "if", "trump", "can", "get", "elect", ",", "ANYBODY", "can", "!", "no", "experience", "NECESSARY", "\""]
(c26-9 / multi-sentence
       :snt1 (c26-15 / please
                     :mod (c26-2 / oh)
                     :mode expressive)
       :snt2 (c26-10 / person
                     :name (c26-13 / name
                                   :op1 "Kid"
                                   :op2 "Rock")
                     :polarity (c26-6 / amr-unknown))
       :snt3 (c26-1 / person
                    :name (c26-11 / name
                                  :op1 "Caitlyn"
                                  :op2 "Jenner")
                    :polarity (c26-4 / amr-unknown))
       :snt4 (c26-5 / think-01
                    :ARG1 (c26-0 / possible-01
                                 :ARG1 (c26-14 / elect-01
                                               :ARG1 (c26-7 / person
                                                            :name (c26-16 / name
                                                                          :op1 " trump")))
                                 :ARG0-of (c26-12 / cause-01
                                                  :ARG1 (c26-18 / possible-01
                                                                :ARG1 (c26-8 / elect-01
                                                                             :ARG1 (c26-3 / anybody))
                                                                :polarity -)))
                    :ARG1-of (c26-17 / appear-02)))

# ::snt If Any Of These Freaks Were Elected! It's Time To Run For The Border &amp; Ask For Asylum!
# ::tokens ["If", "Any", "Of", "These", "Freaks", "Were", "Elected", "!", "It", "'s", "Time", "To", "Run", "For", "The", "Border", "&", "amp", ";", "Ask", "For", "Asylum", "!"]
# ::lemmas ["if", "any", "of", "these", "Freaks", "be", "elect", "!", "it", "be", "time", "to", "run", "for", "the", "Border", "&", "amp", ";", "ask", "for", "Asylum", "!"]
(c27-1 / multi-sentence
       :snt1 (c27-7 / have-condition-91
                    :ARG2 (c27-6 / elect-01
                                 :ARG1 (c27-0 / freak
                                              :mod (c27-12 / this)
                                              :quant (c27-4 / any))))
       :snt2 (c27-11 / and
                     :op1 (c27-14 / time
                                  :time-of (c27-5 / run-02
                                                  :ARG0 c27-11
                                                  :op1 (c27-8 / person
                                                              :name (c27-2 / name
                                                                           :op1 "Border"
                                                                           :op2 "&amp"))
                                                  :op2 (c27-3 / person
                                                              :name (c27-9 / name
                                                                           :op1 "George"
                                                                           :op2 "W."
                                                                           :op3 "Bush")))))
       :op2 (c27-10 / ask-02
                    :ARG0 c27-11
                    :ARG1 (c27-13 / asylum)))

# ::snt No. Please.
# ::tokens ["No", ".", "Please", "."]
# ::lemmas ["no", ".", "please", "."]
(c28-0 / no
       :polite +)

# ::snt Why not? When a rapist, pussy grabber can become President what exactly is she lacking?
# ::tokens ["Why", "not", "?", "When", "a", "rapist", ",", "pussy", "grabber", "can", "become", "President", "what", "exactly", "is", "she", "lacking", "?"]
# ::lemmas ["why", "not", "?", "when", "a", "rapist", ",", "pussy", "grabber", "can", "become", "President", "what", "exactly", "be", "she", "lack", "?"]
(c29-1 / multi-sentence
       :snt1 (c29-8 / cause-01
                    :ARG0 (c29-12 / amr-unknown)
                    :polarity -)
       :snt2 (c29-6 / lack-01
                    :ARG0 (c29-3 / she)
                    :ARG1 (c29-11 / amr-unknown
                                  :mod (c29-5 / exact))
                    :time (c29-7 / possible-01
                                 :ARG1 (c29-0 / become-01
                                              :ARG1 (c29-9 / and
                                                           :op1 (c29-2 / person
                                                                       :ARG0-of (c29-4 / rape-01))
                                                           :op2 (c29-15 / person
                                                                        :ARG0-of (c29-13 / grab-01
                                                                                         :ARG1 (c29-10 / pussy))))
                                              :ARG2 (c29-14 / president)))))

# ::snt Moe,Larry and Curley!
# ::tokens ["Moe", ",", "Larry", "and", "Curley", "!"]
# ::lemmas ["Moe", ",", "Larry", "and", "Curley", "!"]
(c30-5 / and
       :op1 (c30-3 / person
                   :name (c30-0 / name
                                :op1 "Moe"))
       :op2 (c30-1 / person
                   :name (c30-2 / name
                                :op1 "Larry"))
       :op3 (c30-6 / person
                   :name (c30-4 / name
                                :op1 "Curley")))

# ::snt And they are qualified for political office because...?
# ::tokens ["And", "they", "are", "qualified", "for", "political", "office", "because", "...", "?"]
# ::lemmas ["and", "they", "be", "qualified", "for", "political", "office", "because", "...", "?"]
(c31-1 / and
       :op2 (c31-3 / cause-01
                   :ARG0 (c31-6 / amr-unknown)
                   :ARG1 (c31-4 / qualify-02
                                :ARG1 (c31-5 / they)
                                :ARG2 (c31-0 / office
                                             :mod (c31-2 / politics)))))

# ::snt RASMUSSEN: TRUMP APPROVE AT %...
# ::tokens ["RASMUSSEN", ":", "TRUMP", "APPROVE", "AT", "%", "..."]
# ::lemmas ["RASMUSSEN", ":", "TRUMP", "APPROVE", "at", "%", "..."]
(c32-2 / argue-01
       :ARG0 (c32-4 / person
                    :name (c32-0 / name
                                 :op1 "Rasmussen"))
       :ARG1 (c32-1 / prove-01
                    :ARG0 (c32-6 / person
                                 :name (c32-3 / name
                                              :op1 "Trump"))
                    :degree (c32-5 / percentage-entity)))

# ::snt What a bunch
# ::tokens ["What", "a", "bunch"]
# ::lemmas ["what", "a", "bunch"]
(c33-0 / bunch
       :degree (c33-1 / so))

# ::snt LOL
# ::tokens ["LOL"]
# ::lemmas ["LOL"]
(c34-1 / laugh-01
       :ARG0 (c34-2 / i)
       :manner (c34-0 / loud))

# ::snt I'm applying for American citizenship n hopefully run election
# ::tokens ["I", "'m", "applying", "for", "American", "citizenship", "n", "hopefully", "run", "election"]
# ::lemmas ["i", "be", "apply", "for", "American", "citizenship", "n", "hopefully", "run", "election"]
(c37-1 / and
       :op1 (c37-7 / apply-01
                   :ARG0 (c37-6 / i)
                   :ARG1 (c37-5 / citizenship
                                :mod (c37-8 / country
                                            :name (c37-0 / name
                                                         :op1 "America"))))
       :op2 (c37-2 / run-02
                   :ARG0 c37-6
                   :ARG1 (c37-3 / elect-01)
                   :ARG1-of (c37-4 / hope-01)))

# ::snt I guess I also have a chance
# ::tokens ["I", "guess", "I", "also", "have", "a", "chance"]
# ::lemmas ["i", "guess", "i", "also", "have", "a", "chance"]
(c38-0 / guess-01
       :ARG0 (c38-2 / i)
       :ARG1 (c38-1 / chance-02
                    :ARG0 c38-2
                    :mod (c38-3 / also)))

# ::snt where does she think she has a chance of getting elected? Alaska?
# ::tokens ["where", "does", "she", "think", "she", "has", "a", "chance", "of", "getting", "elected", "?", "Alaska", "?"]
# ::lemmas ["where", "do", "she", "think", "she", "have", "a", "chance", "of", "getting", "elect", "?", "Alaska", "?"]
(c39-1 / multi-sentence
       :snt1 (c39-8 / think-01
                    :ARG0 (c39-3 / she)
                    :ARG1 (c39-6 / chance-02
                                 :ARG0 c39-3
                                 :ARG1 (c39-5 / elect-01
                                              :ARG1 c39-3)
                                 :location (c39-4 / amr-unknown)))
       :snt2 (c39-0 / state
                    :name (c39-2 / name
                                 :op1 "Alaska")
                    :location (c39-7 / amr-unknown)))

# ::snt Lord help us! We have someone without political experience and look where that got us.
# ::tokens ["Lord", "help", "us", "!", "We", "have", "someone", "without", "political", "experience", "and", "look", "where", "that", "got", "us", "."]
# ::lemmas ["Lord", "help", "we", "!", "we", "have", "someone", "without", "political", "experience", "and", "look", "where", "that", "get", "we", "."]
(c40-1 / multi-sentence
       :snt1 (c40-5 / help-01
                    :ARG0 (c40-6 / person
                                 :name (c40-0 / name
                                              :op1 "Lord"))
                    :ARG1 (c40-9 / we)
                    :mode imperative)
       :snt2 (c40-12 / and
                     :op1 (c40-10 / have-03
                                  :ARG0 (c40-8 / we)
                                  :ARG1 (c40-2 / someone
                                               :ARG0-of (c40-4 / experience-01
                                                               :ARG1 (c40-3 / politics)
                                                               :polarity -)))
                     :op2 (c40-7 / look-01
                                 :ARG0 c40-8
                                 :ARG1 (c40-11 / thing
                                               :ARG2-of (c40-13 / get-02
                                                                :ARG0 c40-2
                                                                :ARG1 c40-8))
                                 :mode imperative)))

# ::snt We need more people that are not politicians they are the answer to drain the swamp. Get rid of bums in office.
# ::tokens ["We", "need", "more", "people", "that", "are", "not", "politicians", "they", "are", "the", "answer", "to", "drain", "the", "swamp", ".", "Get", "rid", "of", "bums", "in", "office", "."]
# ::lemmas ["we", "need", "more", "people", "that", "be", "not", "politician", "they", "be", "the", "answer", "to", "drain", "the", "swamp", ".", "get", "rid", "of", "bum", "in", "office", "."]
(c41-3 / multi-sentence
       :snt1 (c41-2 / need-01
                    :ARG0 (c41-10 / we)
                    :ARG1 (c41-8 / person
                                 :quant (c41-7 / more)
                                 :ARG0-of (c41-9 / have-org-role-91
                                                 :ARG2 (c41-4 / politician)
                                                 :polarity -)))
       :snt2 (c41-11 / answer-01
                     :ARG1 (c41-12 / drain-01
                                   :ARG1 (c41-5 / swamp))
                     :ARG2 (c41-6 / rid-01
                                  :ARG1 (c41-1 / bums)
                                  :location (c41-0 / office))))

# ::snt Can you take American refugees? I'm about ready to pack and run. My POW dad always said govt was collapsing. I believe
# ::tokens ["Can", "you", "take", "American", "refugees", "?", "I", "'m", "about", "ready", "to", "pack", "and", "run", ".", "My", "POW", "dad", "always", "said", "govt", "was", "collapsing", ".", "I", "believe"]
# ::lemmas ["can", "you", "take", "American", "refugee", "?", "i", "be", "about", "ready", "to", "pack", "and", "run", ".", "my", "pow", "dad", "always", "say", "govt", "be", "collapse", ".", "i", "believe"]
(c42-15 / multi-sentence
        :snt1 (c42-22 / possible-01
                      :ARG1 (c42-10 / take-01
                                    :ARG0 (c42-4 / you)
                                    :ARG1 (c42-21 / refugee
                                                  :mod (c42-19 / country
                                                               :name (c42-20 / name
                                                                             :op1 "America"))))
                      :polarity (c42-9 / amr-unknown))
        :snt2 (c42-3 / ready-02
                     :ARG1 (c42-24 / i)
                     :ARG2 (c42-8 / and
                                  :op1 (c42-16 / pack-01
                                               :ARG0 c42-24)
                                  :op2 (c42-18 / run-02
                                               :ARG0 c42-24))
                     :degree (c42-7 / about))
        :snt3 (c42-0 / say-01
                     :ARG0 (c42-2 / person
                                  :ARG0-of (c42-6 / have-rel-role-91
                                                  :ARG1 (c42-5 / i)
                                                  :ARG2 (c42-25 / dad
                                                                :mod (c42-23 / war))))
                     :ARG1 (c42-13 / collapse-01
                                   :ARG1 (c42-11 / government-organization
                                                 :ARG0-of (c42-1 / govern-01)))
                     :time (c42-17 / always))
        :snt4 (c42-14 / believe-01
                      :ARG0 (c42-12 / i)))

# ::snt In a word? NO. After gaining fame through her wife she trashed said wife in her "tell-all" book. Enuf with the misogynists!
# ::tokens ["In", "a", "word", "?", "NO", ".", "After", "gaining", "fame", "through", "her", "wife", "she", "trashed", "said", "wife", "in", "her", "\"", "tell", "-", "all", "\"", "book", ".", "Enuf", "with", "the", "misogynists", "!"]
# ::lemmas ["in", "a", "word", "?", "no", ".", "after", "gain", "fame", "through", "her", "wife", "she", "trash", "say", "wife", "in", "she", "\"", "tell", "-", "all", "\"", "book", ".", "Enuf", "with", "the", "misogynist", "!"]
(c43-10 / multi-sentence
        :snt1 (c43-17 / word
                      :polarity (c43-6 / amr-unknown)
                      :mod (c43-14 / no))
        :snt2 (c43-7 / trash-01
                     :ARG0 (c43-0 / she)
                     :ARG1 (c43-16 / person
                                   :ARG0-of (c43-3 / have-rel-role-91
                                                   :ARG1 c43-0
                                                   :ARG2 (c43-1 / wife))
                                   :ARG1-of (c43-2 / say-01))
                     :location (c43-9 / book
                                      :poss c43-0
                                      :mod (c43-11 / tell-all))
                     :time (c43-5 / after
                                  :op1 (c43-8 / gain-02
                                              :ARG0 c43-0
                                              :ARG1 (c43-13 / fame-01
                                                            :ARG1 c43-0)
                                              :manner c43-16
                                              :ARG0-of (c43-18 / have-rel-role-91
                                                               :ARG1 c43-0
                                                               :ARG2 (c43-12 / wife)))))
        :snt3 (c43-15 / enuf
                      :op1 (c43-4 / misogynist)))

# ::snt opened the tent...showed US that governing can be a clown act ...but all shows come to an ...
# ::tokens ["opened", "the", "tent", "...", "showed", "US", "that", "governing", "can", "be", "a", "clown", "act", "...", "but", "all", "shows", "come", "to", "an", "..."]
# ::lemmas ["open", "the", "tent", "...", "show", "US", "that", "governing", "can", "be", "a", "clown", "act", "...", "but", "all", "show", "come", "to", "an", "..."]
(c44-3 / multi-sentence
       :snt1 (c44-1 / open-01
                    :ARG1 (c44-12 / tent))
       :snt2 (c44-5 / show-01
                    :ARG1 (c44-9 / country
                                 :name (c44-4 / name
                                              :op1 "US"))
                    :ARG3 (c44-8 / possible-01
                                 :ARG1 (c44-6 / act-01
                                              :ARG1 (c44-13 / govern-01)
                                              :mod (c44-14 / clown))))
       :snt3 (c44-10 / contrast-01
                     :ARG1 (c44-0 / come-04
                                  :ARG1 (c44-2 / show-04
                                               :mod (c44-11 / all))
                                  :ARG2 (c44-7 / end-01
                                               :ARG1 c44-2))))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c45-1 / laugh-01
       :manner (c45-0 / loud)
       :mode expressive)

# ::snt There's enough fools in government, non more need to apply!
# ::tokens ["There", "'s", "enough", "fools", "in", "government", ",", "non", "more", "need", "to", "apply", "!"]
# ::lemmas ["there", "be", "enough", "fool", "in", "government", ",", "non", "more", "need", "to", "apply", "!"]
(c46-4 / have-concession-91
       :ARG1 (c46-0 / fool
                    :location (c46-8 / government-organization
                                     :ARG0-of (c46-6 / govern-01))
                    :ARG1-of (c46-5 / have-quant-91
                                    :ARG3 (c46-3 / enough)))
       :ARG2 (c46-1 / need-01
                    :ARG1 (c46-7 / apply-01)
                    :mod (c46-2 / more)
                    :polarity -))

# ::snt She's not pretending to have a vagina, not has she ever. You triggered, whining snowflake.
# ::tokens ["She", "'s", "not", "pretending", "to", "have", "a", "vagina", ",", "not", "has", "she", "ever", ".", "You", "triggered", ",", "whining", "snowflake", "."]
# ::lemmas ["she", "be", "not", "pretend", "to", "have", "a", "vagina", ",", "not", "have", "she", "ever", ".", "you", "trigger", ",", "whine", "snowflake", "."]
(c47-2 / multi-sentence
       :snt1 (c47-9 / contrast-01
                    :ARG1 (c47-8 / pretend-01
                                 :ARG0 (c47-4 / she)
                                 :ARG1 (c47-7 / have-03
                                              :ARG0 c47-4
                                              :ARG1 (c47-5 / vagina))
                                 :polarity -)
                    :ARG2 (c47-3 / pretend-01
                                 :ARG0 c47-4
                                 :ARG1 (c47-11 / have-03
                                               :ARG0 c47-4
                                               :ARG1 c47-5
                                               :time (c47-6 / ever))
                                 :polarity -))
       :snt2 (c47-0 / say-01
                    :ARG1 (c47-12 / trigger-01
                                  :ARG1 (c47-1 / you
                                               :mod (c47-13 / snowflake
                                                            :ARG0-of (c47-10 / whine-01))
                                               :ARG2-of c47-0))))

# ::snt Elizabeth Warren Sends PANICKED EMAIL Over Kid Rocks Senate Run via
# ::tokens ["Elizabeth", "Warren", "Sends", "PANICKED", "EMAIL", "Over", "Kid", "Rocks", "Senate", "Run", "via"]
# ::lemmas ["Elizabeth", "Warren", "Sends", "PANICKED", "EMAIL", "over", "Kid", "Rocks", "Senate", "Run", "via"]
(c48-3 / send-01
       :ARG0 (c48-7 / person
                    :name (c48-2 / name
                                 :op1 "Elizabeth"
                                 :op2 "Warren"))
       :ARG1 (c48-5 / email-01
                    :ARG0 c48-7
                    :ARG1-of (c48-0 / scratch-02)
                    :topic (c48-4 / run-02
                                  :ARG0 c48-7
                                  :ARG0-of (c48-6 / have-org-role-91
                                                  :ARG1 (c48-11 / government-organization
                                                                :name (c48-8 / name
                                                                             :op1 "Senate"))
                                                  :ARG2 (c48-9 / kid))))
       :medium (c48-1 / broadcast-program
                      :name (c48-10 / name
                                    :op1 "Senate")))

# ::snt Sheriff Clarke Delivers HANDS DOWN Best RESPONSE to Don Jr. Russia Meeting via
# ::tokens ["Sheriff", "Clarke", "Delivers", "HANDS", "DOWN", "Best", "RESPONSE", "to", "Don", "Jr.", "Russia", "Meeting", "via"]
# ::lemmas ["Sheriff", "Clarke", "deliver", "hand", "down", "good", "response", "to", "Don", "Jr.", "Russia", "Meeting", "via"]
(c49-13 / and
        :op1 (c49-10 / wipe-down-02
                     :ARG0 (c49-6 / person
                                  :name (c49-0 / name
                                               :op1 "Clarke")
                                  :ARG0-of (c49-5 / have-org-role-91
                                                  :ARG2 (c49-2 / sheriff)))
                     :ARG1 (c49-1 / meet-03
                                  :ARG0 (c49-3 / person
                                               :name (c49-7 / name
                                                            :op1 "Don"
                                                            :op2 "Jr."))
                                  :mod (c49-11 / country
                                               :name (c49-8 / name
                                                            :op1 "Russia"))))
        :op2 (c49-4 / respond-01
                    :ARG0 c49-6
                    :ARG1 c49-1
                    :manner (c49-14 / good-02
                                    :ARG2-of (c49-12 / have-degree-91
                                                     :ARG1 (c49-15 / RESPONSE
                                                                   :ARG3 (c49-9 / most))))))

# ::snt when standards are low everybody qualifies,welcome president catlyn jenner.
# ::tokens ["when", "standards", "are", "low", "everybody", "qualifies", ",", "welcome", "president", "catlyn", "jenner", "."]
# ::lemmas ["when", "standard", "be", "low", "everybody", "qualifie", ",", "welcome", "president", "catlyn", "jenner", "."]
(c50-6 / welcome-01
       :ARG1 (c50-4 / person
                    :name (c50-0 / name
                                 :op1 "Catlyn"
                                 :op2 "Jenner")
                    :ARG0-of (c50-3 / have-org-role-91
                                    :ARG2 (c50-1 / president)))
       :time (c50-5 / low-04
                    :ARG1 (c50-2 / standard)))
