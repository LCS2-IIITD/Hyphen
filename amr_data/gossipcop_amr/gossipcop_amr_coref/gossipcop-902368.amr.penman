# ::snt IF U GET A MULLET TO COPE YOU ARE VALID
# ::tokens ["IF", "U", "GET", "A", "MULLET", "TO", "COPE", "YOU", "ARE", "VALID"]
# ::lemmas ["if", "u", "get", "a", "MULLET", "to", "cope", "you", "be", "VALID"]
(c1-3 / have-condition-91
      :ARG1 (c1-2 / value-02
                  :ARG1 (c1-0 / you))
      :ARG2 (c1-5 / get-01
                  :ARG0 c1-0
                  :ARG1 (c1-1 / microwave)
                  :beneficiary (c1-4 / cop)))

# ::snt mullets are valid
# ::tokens ["mullets", "are", "valid"]
# ::lemmas ["mullet", "be", "valid"]
(c2-0 / valid-02
      :ARG1 (c2-1 / Mullet))

# ::snt WHOS GONNA BITE THE BULLET FOR THE MULLET
# ::tokens ["WHOS", "GONNA", "BITE", "THE", "BULLET", "FOR", "THE", "MULLET"]
# ::lemmas ["WHOS", "GONNA", "bite", "the", "bullet", "for", "the", "MULLET"]
(c3-3 / cause-01
      :ARG0 (c3-6 / amr-unknown)
      :ARG1 (c3-0 / bite-01
                  :ARG0 (c3-4 / we)
                  :ARG1 (c3-2 / book
                              :name (c3-1 / name
                                          :op1 "BULLET"))
                  :purpose (c3-5 / ammunition)))

# ::snt Oh I've heard that song but had no idea what they all looked like
# ::tokens ["Oh", "I", "'ve", "heard", "that", "song", "but", "had", "no", "idea", "what", "they", "all", "looked", "like"]
# ::lemmas ["oh", "i", "'ve", "hear", "that", "song", "but", "have", "no", "idea", "what", "you", "all", "look", "like"]
(c4-6 / contrast-01
      :ARG1 (c4-4 / hear-01
                  :ARG0 (c4-8 / i)
                  :ARG1 (c4-1 / song
                              :mod (c4-9 / that)))
      :ARG2 (c4-7 / have-03
                  :ARG0 c4-8
                  :ARG1 (c4-2 / idea
                              :topic (c4-11 / thing
                                            :ARG2-of (c4-5 / look-02
                                                           :ARG0 (c4-10 / they
                                                                        :mod (c4-3 / all)))))
                  :polarity -)
      :mod (c4-0 / oh
                 :mode expressive))

# ::snt what girl band is that?
# ::tokens ["what", "girl", "band", "is", "that", "?"]
# ::lemmas ["what", "girl", "band", "be", "that", "?"]
(c5-2 / band
      :mod (c5-0 / girl)
      :domain (c5-3 / that)
      :mod (c5-1 / amr-unknown))

# ::snt And i don't mind either
# ::tokens ["And", "i", "do", "n't", "mind", "either"]
# ::lemmas ["and", "i", "do", "not", "mind", "either"]
(c9-3 / and
      :op2 (c9-1 / mind-01
                 :ARG0 (c9-2 / i)
                 :mod (c9-0 / either)
                 :polarity -))

# ::snt I will wear it
# ::tokens ["I", "will", "wear", "it"]
# ::lemmas ["i", "will", "wear", "it"]
(c10-1 / wear-01
       :ARG0 (c10-2 / i)
       :ARG1 (c10-0 / it))

# ::snt Don't pity me since you won't wear it. I won't have to be pitied.
# ::tokens ["Do", "n't", "pity", "me", "since", "you", "wo", "n't", "wear", "it", ".", "I", "wo", "n't", "have", "to", "be", "pitied", "."]
# ::lemmas ["do", "not", "pity", "i", "since", "you", "will", "not", "wear", "it", ".", "i", "will", "not", "have", "to", "be", "pity", "."]
(c11-2 / multi-sentence
       :snt1 (c11-4 / pity-01
                    :ARG0 (c11-1 / you)
                    :ARG1 (c11-7 / i)
                    :ARG1-of (c11-5 / cause-01
                                    :ARG0 (c11-6 / wear-01
                                                 :ARG0 c11-1
                                                 :ARG1 (c11-3 / it)
                                                 :polarity -))
                    :polarity -
                    :mode imperative)
       :snt2 (c11-0 / obligate-01
                    :ARG1 (c11-8 / i)
                    :ARG2 c11-4
                    :ARG1 c11-8
                    :polarity -))

# ::snt Its you i am pitying jo. I cannot kiss a woman naa
# ::tokens ["Its", "you", "i", "am", "pitying", "jo", ".", "I", "can", "not", "kiss", "a", "woman", "naa"]
# ::lemmas ["its", "you", "i", "be", "pity", "jo", ".", "i", "can", "not", "kiss", "a", "woman", "naa"]
(c12-0 / multi-sentence
       :snt1 (c12-2 / say-01
                    :ARG0 (c12-9 / i)
                    :ARG1 (c12-6 / pity-01
                                 :ARG0 c12-9)
                    :ARG2 (c12-1 / person
                                 :name (c12-3 / name
                                              :op1 " jo")))
       :snt2 (c12-10 / possible-01
                     :ARG1 (c12-7 / kiss-01
                                  :ARG0 (c12-4 / i)
                                  :ARG1 (c12-8 / woman))
                     :polarity -)
       :snt3 (c12-5 / naa))

# ::snt Kiss her hand. Must it be head
# ::tokens ["Kiss", "her", "hand", ".", "Must", "it", "be", "head"]
# ::lemmas ["kiss", "her", "hand", ".", "must", "it", "be", "head"]
(c13-2 / multi-sentence
       :snt1 (c13-5 / kiss-01
                    :ARG0 (c13-1 / you)
                    :ARG1 (c13-4 / hand
                                 :part-of (c13-3 / she))
                    :mode imperative)
       :snt2 (c13-0 / obligate-01
                    :ARG2 (c13-6 / head
                                 :domain (c13-7 / it))))

# ::snt Someone cannot even kiss her even on the forehead
# ::tokens ["Someone", "can", "not", "even", "kiss", "her", "even", "on", "the", "forehead"]
# ::lemmas ["someone", "can", "not", "even", "kiss", "she", "even", "on", "the", "forehead"]
(c14-4 / possible-01
       :ARG1 (c14-5 / kiss-01
                    :ARG0 (c14-2 / someone)
                    :ARG1 (c14-0 / she
                                 :part (c14-1 / forehead))
                    :mod (c14-3 / even)
                    :location c14-1)
       :mod (c14-6 / even)
       :polarity -)

# ::snt I know your own won't be different
# ::tokens ["I", "know", "your", "own", "wo", "n't", "be", "different"]
# ::lemmas ["i", "know", "your", "own", "will", "not", "be", "different"]
(c15-1 / know-01
       :ARG0 (c15-2 / i)
       :ARG1 (c15-4 / differ-02
                    :ARG1 (c15-3 / thing
                                 :poss (c15-0 / you))
                    :polarity -))

# ::snt Where I'm not mad
# ::tokens ["Where", "I", "'m", "not", "mad"]
# ::lemmas ["where", "i", "be", "not", "mad"]
(c16-0 / mad-04
       :ARG1 (c16-1 / i)
       :polarity -)

# ::snt How comfortable is she? Can she scoop any meal without having problem? How well can she talk without been hindered? Anyways its a No for me
# ::tokens ["How", "comfortable", "is", "she", "?", "Can", "she", "scoop", "any", "meal", "without", "having", "problem", "?", "How", "well", "can", "she", "talk", "without", "been", "hindered", "?", "Anyways", "its", "a", "No", "for", "me"]
# ::lemmas ["how", "comfortable", "be", "she", "?", "can", "she", "scoop", "any", "meal", "without", "have", "problem", "?", "how", "well", "can", "she", "talk", "without", "be", "hinder", "?", "anyway", "its", "a", "no", "for", "i"]
(c17-11 / multi-sentence
        :snt1 (c17-13 / comfortable-02
                      :ARG0 (c17-0 / she)
                      :degree (c17-10 / amr-unknown))
        :snt2 (c17-16 / possible-01
                      :ARG1 (c17-3 / scoop-01
                                   :ARG0 (c17-2 / she)
                                   :ARG1 (c17-5 / meal
                                                :mod (c17-8 / any))
                                   :manner (c17-6 / have-03
                                                  :ARG0 c17-2
                                                  :ARG1 (c17-12 / problem)
                                                  :polarity -)))
        :snt3 (c17-1 / possible-01
                     :ARG1 (c17-9 / talk-01
                                  :ARG0 (c17-15 / she)
                                  :manner (c17-17 / hinder-01
                                                  :ARG1 c17-15
                                                  :polarity -))
                     :manner (c17-7 / amr-unknown))
        :snt4 (c17-14 / no
                      :domain (c17-18 / it)
                      :beneficiary (c17-4 / i)
                      :mod (c17-19 / anyways)))

# ::snt Yes oo
# ::tokens ["Yes", "oo"]
# ::lemmas ["yes", "oo"]
(c18-0 / oo
       :mode expressive)

# ::snt Fashion wey no go gree make I see
# ::tokens ["Fashion", "wey", "no", "go", "gree", "make", "I", "see"]
# ::lemmas ["fashion", "wey", "no", "go", "gree", "make", "i", "see"]
(c19-2 / see-01
       :ARG0 (c19-3 / i)
       :ARG1 (c19-4 / and
                    :op1 (c19-0 / fashion)
                    :op2 (c19-5 / go-23
                                :ARG0 (c19-1 / you)
                                :ARG1 (c19-6 / gree)
                                :polarity -
                                :mode imperative)))

# ::snt This wan go need wiper
# ::tokens ["This", "wan", "go", "need", "wiper"]
# ::lemmas ["this", "wan", "go", "need", "wiper"]
(c20-0 / go-03
       :ARG0 (c20-3 / this)
       :ARG1 (c20-2 / need-01
                    :ARG0 c20-3
                    :ARG1 (c20-1 / wiper))
       :polarity -)

# ::snt I sha go skuuu
# ::tokens ["I", "sha", "go", "skuuu"]
# ::lemmas ["i", "sha", "go", "skuuu"]
(c21-0 / go-23
       :ARG1 (c21-1 / i)
       :ARG2 (c21-2 / sku))

# ::snt Ook o. Tosin
# ::tokens ["Ook", "o.", "Tosin"]
# ::lemmas ["Ook", "o.", "Tosin"]
(c22-0 / ook
       :op1 (c22-2 / person
                   :name (c22-1 / name
                                :op1 "Tosin")))

# ::snt ara oko Akungba.
# ::tokens ["ara", "oko", "Akungba", "."]
# ::lemmas ["ara", "oko", "Akungba", "."]
(c23-0 / oko
       :op1 (c23-1 / kungba))

# ::snt You've been saying that to everyone. I like my old school goals o
# ::tokens ["You", "'ve", "been", "saying", "that", "to", "everyone", ".", "I", "like", "my", "old", "school", "goals", "o"]
# ::lemmas ["you", "'ve", "be", "say", "that", "to", "everyone", ".", "i", "like", "my", "old", "school", "goal", "o"]
(c24-3 / multi-sentence
       :snt1 (c24-4 / say-01
                    :ARG0 (c24-2 / you)
                    :ARG1 (c24-8 / that)
                    :ARG2 (c24-5 / everyone))
       :snt2 (c24-6 / like-01
                    :ARG0 (c24-7 / i)
                    :ARG1 (c24-9 / goal
                                 :poss c24-7
                                 :mod (c24-0 / school)
                                 :mod (c24-1 / old))))

# ::snt And it will fit you. Its going to trend in . And you'll be old school.
# ::tokens ["And", "it", "will", "fit", "you", ".", "Its", "going", "to", "trend", "in", ".", "And", "you", "'ll", "be", "old", "school", "."]
# ::lemmas ["and", "it", "will", "fit", "you", ".", "its", "go", "to", "trend", "in", ".", "and", "you", "'ll", "be", "old", "school", "."]
(c25-3 / multi-sentence
       :snt1 (c25-8 / and
                    :op2 (c25-0 / fit-06
                                :ARG1 (c25-7 / it)
                                :ARG2 (c25-2 / you)))
       :snt2 (c25-6 / trend-01
                    :ARG1 (c25-5 / it))
       :snt3 (c25-9 / and
                    :op2 (c25-4 / school
                                :mod (c25-1 / old)
                                :domain (c25-10 / you))))

# ::snt Nope. Definitely not me. Wear it all you want. If it doesn't suit me, it's a no no. And no, I won't rock that! What's that supposed to be sef
# ::tokens ["Nope", ".", "Definitely", "not", "me", ".", "Wear", "it", "all", "you", "want", ".", "If", "it", "does", "n't", "suit", "me", ",", "it", "'s", "a", "no", "no", ".", "And", "no", ",", "I", "wo", "n't", "rock", "that", "!", "What", "'s", "that", "supposed", "to", "be", "sef"]
# ::lemmas ["nope", ".", "definitely", "not", "i", ".", "wear", "it", "all", "you", "want", ".", "if", "it", "do", "not", "suit", "i", ",", "it", "be", "a", "no", "no", ".", "and", "no", ",", "i", "will", "not", "rock", "that", "!", "what", "be", "that", "suppose", "to", "be", "sef"]
(c26-12 / multi-sentence
        :snt1 (c26-16 / nope)
        :snt2 (c26-6 / have-polarity-91
                     :ARG1 (c26-19 / i)
                     :mod (c26-20 / definite)
                     :ARG2 -)
        :snt3 (c26-18 / wear-01
                      :ARG0 (c26-4 / you)
                      :ARG1 (c26-5 / it)
                      :manner (c26-2 / want-01
                                     :ARG0 c26-4
                                     :ARG1 c26-18
                                     :mod (c26-10 / all))
                      :mode imperative)
        :snt4 (c26-13 / no
                      :condition (c26-1 / suit-01
                                        :ARG1 (c26-11 / it)
                                        :ARG2 (c26-0 / i)
                                        :polarity -))
        :snt5 (c26-8 / and
                     :op2 (c26-17 / rock-03
                                  :ARG0 (c26-15 / i)
                                  :ARG1 (c26-9 / that)
                                  :polarity -))
        :snt6 (c26-3 / suppose-02
                     :ARG1 (c26-14 / that)
                     :ARG2 (c26-7 / amr-unknown)))

# ::snt Fashion to me is comfort so I can't rock this
# ::tokens ["Fashion", "to", "me", "is", "comfort", "so", "I", "ca", "n't", "rock", "this"]
# ::lemmas ["fashion", "to", "i", "be", "comfort", "so", "i", "can", "not", "rock", "this"]
(c27-3 / comfort-01
       :ARG0 (c27-0 / fashion
                    :beneficiary (c27-4 / i
                                        :ARG1-of c27-3))
       :ARG0-of (c27-6 / cause-01
                       :ARG1 (c27-2 / possible-01
                                    :ARG1 (c27-1 / rock-03
                                                 :ARG0 c27-4
                                                 :ARG1 (c27-5 / this))
                                    :polarity -)))

# ::snt you don't know fashion o
# ::tokens ["you", "do", "n't", "know", "fashion", "o"]
# ::lemmas ["you", "do", "not", "know", "fashion", "o"]
(c28-2 / know-03
       :ARG0 (c28-1 / you)
       :ARG1 (c28-0 / fashion)
       :polarity -)

# ::snt My sight fits me more
# ::tokens ["My", "sight", "fits", "me", "more"]
# ::lemmas ["my", "sight", "fit", "i", "more"]
(c29-0 / fit-06
       :ARG1 (c29-2 / sight-01
                    :ARG0 (c29-4 / i
                                 :ARG2-of c29-0))
       :ARG1-of (c29-3 / have-quant-91
                       :ARG3 (c29-1 / more)))

# ::snt Nah, I choose my fashion wisely
# ::tokens ["Nah", ",", "I", "choose", "my", "fashion", "wisely"]
# ::lemmas ["Nah", ",", "i", "choose", "my", "fashion", "wisely"]
(c30-2 / choose-01
       :ARG0 (c30-4 / i)
       :ARG1 (c30-0 / fashion
                    :poss c30-4)
       :manner (c30-3 / wise)
       :mod (c30-1 / nah))

# ::snt And it will fit you o
# ::tokens ["And", "it", "will", "fit", "you", "o"]
# ::lemmas ["and", "it", "will", "fit", "you", "o"]
(c31-3 / and
       :op2 (c31-0 / fit-06
                   :ARG1 (c31-2 / it)
                   :ARG2 (c31-1 / you)))

# ::snt And it will fit you o
# ::tokens ["And", "it", "will", "fit", "you", "o"]
# ::lemmas ["and", "it", "will", "fit", "you", "o"]
(c32-3 / and
       :op2 (c32-0 / fit-06
                   :ARG1 (c32-2 / it)
                   :ARG2 (c32-1 / you)))

# ::snt No, I would feel caged
# ::tokens ["No", ",", "I", "would", "feel", "caged"]
# ::lemmas ["no", ",", "i", "would", "feel", "cage"]
(c33-0 / feel-01
       :ARG0 (c33-2 / i)
       :ARG1 (c33-1 / caged-00
                    :ARG1 c33-2))

# ::snt Lool I can barely see. Wont try it
# ::tokens ["Lool", "I", "can", "barely", "see", ".", "Wo", "nt", "try", "it"]
# ::lemmas ["lool", "i", "can", "barely", "see", ".", "will", "not", "try", "it"]
(c34-2 / multi-sentence
       :snt1 (c34-5 / possible-01
                    :ARG1 (c34-3 / see-01
                                 :ARG0 (c34-6 / i)
                                 :manner (c34-0 / barely)))
       :snt2 (c34-7 / try-01
                    :ARG0 (c34-1 / you)
                    :ARG1 (c34-4 / it)
                    :polarity -
                    :mode imperative))

# ::snt You're nice. This one is CD that they cut /4.
# ::tokens ["You", "'re", "nice", ".", "This", "one", "is", "CD", "that", "they", "cut", "/4", "."]
# ::lemmas ["you", "be", "nice", ".", "this", "one", "be", "CD", "that", "they", "cut", "/4", "."]
(c35-3 / multi-sentence
       :snt1 (c35-2 / nice-01
                    :ARG1 (c35-1 / you))
       :snt2 (c35-10 / disc
                     :mod (c35-7 / compact)
                     :domain (c35-0 / one
                                    :mod (c35-9 / this))
                     :ARG1-of (c35-11 / cut-01
                                      :ARG0 (c35-6 / they)
                                      :ARG4 (c35-8 / disc
                                                   :mod (c35-5 / versatile)
                                                   :quant (c35-4 / slash
                                                                 :op1 4
                                                                 :op2 8)))))

# ::snt This one be like protractor... Mba!
# ::tokens ["This", "one", "be", "like", "protractor", "...", "Mba", "!"]
# ::lemmas ["this", "one", "be", "like", "protractor", "...", "mba", "!"]
(c36-2 / resemble-01
       :ARG1 (c36-0 / one
                    :mod (c36-4 / this))
       :ARG2 (c36-3 / protractor)
       :mod (c36-1 / bba
                   :mode expressive))

# ::snt Boys go wash em for road...na naira.
# ::tokens ["Boys", "go", "wash", "em", "for", "road", "...", "na", "naira", "."]
# ::lemmas ["boy", "go", "wash", "em", "for", "road", "...", "na", "naira", "."]
(c37-5 / go-05
       :ARG0 (c37-0 / boy)
       :ARG1 (c37-3 / wash-01
                    :ARG0 c37-0
                    :ARG1 (c37-4 / they)
                    :purpose (c37-2 / road))
       :mod (c37-1 / naira
                   :mode expressive))

# ::snt Can one see the future in those
# ::tokens ["Can", "one", "see", "the", "future", "in", "those"]
# ::lemmas ["can", "one", "see", "the", "future", "in", "those"]
(c38-3 / possible-01
       :polarity (c38-5 / amr-unknown)
       :ARG1 (c38-2 / see-01
                    :ARG0 (c38-0 / one)
                    :ARG1 (c38-1 / future)
                    :prep-in (c38-4 / that)))

# ::snt Lmaoooo
# ::tokens ["Lmaoooo"]
# ::lemmas ["Lmaoooo"]
(c39-1 / laugh-01
       :ARG0 (c39-2 / i)
       :manner (c39-0 / loud)
       :mode expressive)

# ::snt Crazy idea but looks good on her
# ::tokens ["Crazy", "idea", "but", "looks", "good", "on", "her"]
# ::lemmas ["crazy", "idea", "but", "look", "good", "on", "she"]
(c40-2 / contrast-01
       :ARG1 (c40-3 / idea
                    :ARG1-of (c40-5 / crazy-03))
       :ARG2 (c40-1 / look-02
                    :ARG0 (c40-0 / she)
                    :ARG1 (c40-4 / good-02)))

# ::snt Yes it's foineee
# ::tokens ["Yes", "it", "'s", "foineee"]
# ::lemmas ["yes", "it", "be", "foineee"]
(c41-0 / foineee
       :domain (c41-1 / it))

# ::snt Loooool
# ::tokens ["Loooool"]
# ::lemmas ["loooool"]
(c42-0 / ool
       :mode expressive)

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c43-0 / yes)

# ::snt No. It cant fit in my purse. It will also stop me from eating Eba... these are my top two priorities with eye wear
# ::tokens ["No", ".", "It", "ca", "nt", "fit", "in", "my", "purse", ".", "It", "will", "also", "stop", "me", "from", "eating", "Eba", "...", "these", "are", "my", "top", "two", "priorities", "with", "eye", "wear"]
# ::lemmas ["no", ".", "it", "can", "not", "fit", "in", "my", "purse", ".", "it", "will", "also", "stop", "i", "from", "eat", "eba", "...", "these", "be", "my", "top", "two", "priority", "with", "eye", "wear"]
(c44-9 / multi-sentence
       :snt1 (c44-15 / no)
       :snt2 (c44-17 / possible-01
                     :ARG1 (c44-14 / fit-01
                                   :ARG1 (c44-19 / it)
                                   :ARG2 (c44-10 / purse
                                                 :poss (c44-4 / i)))
                     :polarity -)
       :snt3 (c44-1 / stop-03
                    :ARG0 (c44-8 / it)
                    :ARG1 (c44-0 / i)
                    :ARG2 (c44-16 / eat-01
                                  :ARG0 c44-0
                                  :ARG1 (c44-3 / product
                                               :name (c44-11 / name
                                                             :op1 "Eba")))
                    :mod (c44-5 / also))
       :snt4 (c44-2 / priority
                    :poss (c44-13 / i)
                    :mod (c44-6 / top)
                    :topic (c44-18 / wear-01
                                   :ARG1 (c44-7 / eye))
                    :domain (c44-12 / this)
                    :quant 2))

# ::snt la. Sesangat over taksub la kekadang certain people. Layan layan la... Jgn la lelebih...
# ::tokens ["la", ".", "Sesangat", "over", "taksub", "la", "kekadang", "certain", "people", ".", "Layan", "layan", "la", "...", "Jgn", "la", "lelebih", "..."]
# ::lemmas ["la", ".", "sesangat", "over", "taksub", "la", "kekadang", "certain", "people", ".", "Layan", "layan", "la", "...", "Jgn", "la", "lelebih", "..."]
(c46-1 / multi-sentence
       :snt1 (c46-4 / person
                    :name (c46-0 / name
                                 :op1 "Sesangat")
                    :topic (c46-2 / person
                                  :mod (c46-6 / certain)))
       :snt2 (c46-10 / person
                     :name (c46-3 / name
                                  :op1 "Layan"
                                  :op2 "Layan"))
       :snt3 (c46-7 / person
                    :name (c46-5 / name
                                 :op1 "Jgn"))
       :snt4 (c46-9 / person
                    :name (c46-8 / name
                                 :op1 "Lelebih")))

# ::snt Kan? I mean I don't mind la orang minat. Tapi everything pun nak Korean. Come on la.
# ::tokens ["Kan", "?", "I", "mean", "I", "do", "n't", "mind", "la", "orang", "minat", ".", "Tapi", "everything", "pun", "nak", "Korean", ".", "Come", "on", "la", "."]
# ::lemmas ["Kan", "?", "i", "mean", "i", "do", "not", "mind", "la", "orang", "minat", ".", "tapi", "everything", "pun", "nak", "Korean", ".", "come", "on", "la", "."]
(c47-2 / multi-sentence
       :snt1 (c47-5 / language
                    :name (c47-1 / name
                                 :op1 "Kan")
                    :polarity (c47-14 / amr-unknown))
       :snt2 (c47-4 / mean-01
                    :ARG0 (c47-13 / i)
                    :ARG2 (c47-16 / mind-01
                                  :ARG0 c47-13
                                  :ARG1 (c47-0 / orang
                                               :op1 (c47-6 / minat))
                                  :polarity -))
       :snt3 (c47-15 / and
                     :op1 (c47-12 / thing
                                  :name (c47-7 / name
                                               :op1 "Tapi"))
                     :op2 (c47-8 / pun
                                 :mod (c47-9 / country
                                             :name (c47-10 / name
                                                           :op1 "North"
                                                           :op2 "Korea"))))
       :snt4 (c47-17 / come-on-25
                     :ARG1 (c47-3 / person
                                  :name (c47-11 / name
                                                :op1 "la"))
                     :mode imperative))

# ::snt Preach gurl... To me sesngat over rated sngt da abes bende nk di"korean"kan. Pathetic breeds of a human being betul.
# ::tokens ["Preach", "gurl", "...", "To", "me", "sesngat", "over", "rated", "sngt", "da", "abes", "bende", "nk", "di\"korean\"kan", ".", "Pathetic", "breeds", "of", "a", "human", "being", "betul", "."]
# ::lemmas ["preach", "gurl", "...", "to", "i", "sesngat", "over", "rate", "sngt", "da", "abe", "bende", "nk", "di\"korean\"kan", ".", "pathetic", "breed", "of", "a", "human", "be", "betul", "."]
(c48-4 / multi-sentence
       :snt1 (c48-9 / person
                    :name (c48-3 / name
                                 :op1 "Preach"
                                 :op2 "Gurl"))
       :snt2 (c48-5 / say-01
                    :ARG0 (c48-14 / i)
                    :ARG1 (c48-15 / and
                                  :op1 (c48-7 / rate-01
                                              :ARG1-of (c48-0 / over-03))
                                  :op2 c48-15
                                  :op1 (c48-2 / bend-01
                                              :ARG1 (c48-16 / abes)
                                              :op2-of c48-15)
                                  :ARG1 (c48-10 / kan
                                                :mod (c48-13 / country
                                                             :name (c48-8 / name
                                                                          :op1 "Korea")))))
       :ARG2 c48-14
       :snt3 (c48-11 / breed-01
                     :ARG1 (c48-17 / being
                                   :mod (c48-12 / human))
                     :mod (c48-6 / pathetic)
                     :mod (c48-1 / betul)))

# ::snt girl Harry INVENTED boots
# ::tokens ["girl", "Harry", "INVENTED", "boots"]
# ::lemmas ["girl", "Harry", "INVENTED", "boot"]
(c49-3 / investigate-01
       :ARG0 (c49-2 / person
                    :name (c49-1 / name
                                 :op1 "Harry")
                    :mod (c49-4 / girl))
       :ARG1 (c49-0 / boot))

# ::snt .. I can't wait for it to trend in Nigeria. At least Nigerian tailors will have extra work
# ::tokens ["..", "I", "ca", "n't", "wait", "for", "it", "to", "trend", "in", "Nigeria", ".", "At", "least", "Nigerian", "tailors", "will", "have", "extra", "work"]
# ::lemmas ["..", "i", "can", "not", "wait", "for", "it", "to", "trend", "in", "Nigeria", ".", "At", "least", "Nigerian", "tailor", "will", "have", "extra", "work"]
(c50-0 / multi-sentence
       :snt1 (c50-7 / wait-01
                    :ARG1 (c50-9 / i)
                    :ARG2 (c50-10 / trend-01
                                  :ARG1 (c50-2 / it)
                                  :ARG2 (c50-8 / country
                                               :name (c50-1 / name
                                                            :op1 "Nigeria")))
                    :polarity -)
       :snt2 (c50-6 / work-01
                    :ARG0 (c50-5 / person
                                 :ARG0-of (c50-12 / tail-01)
                                 :mod (c50-11 / country
                                              :name c50-1
                                              :op1 "Nigeria"))
                    :mod (c50-3 / at-least))
       :mod (c50-4 / extra))
