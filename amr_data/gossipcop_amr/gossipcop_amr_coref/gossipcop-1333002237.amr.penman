# ::snt The saddest thing of all is when these misfits go &amp; have children. It was obvious from day that yr old , who is nowhere ready to have kids, would be sticking around w/a year old. Now he's dating someone his own age. just bounces from man to man.
# ::tokens ["The", "saddest", "thing", "of", "all", "is", "when", "these", "misfits", "go", "&", "amp", ";", "have", "children", ".", "It", "was", "obvious", "from", "day", "that", "yr", "old", ",", "who", "is", "nowhere", "ready", "to", "have", "kids", ",", "would", "be", "sticking", "around", "w", "/", "a", "year", "old", ".", "Now", "he", "'s", "dating", "someone", "his", "own", "age", ".", "just", "bounces", "from", "man", "to", "man", "."]
# ::lemmas ["the", "saddest", "thing", "of", "all", "be", "when", "these", "misfit", "go", "&", "amp", ";", "have", "child", ".", "it", "be", "obvious", "from", "day", "that", "yr", "old", ",", "who", "be", "nowhere", "ready", "to", "have", "kid", ",", "would", "be", "stick", "around", "w", "/", "a", "year", "old", ".", "now", "he", "be", "date", "someone", "his", "own", "age", ".", "just", "bounce", "from", "man", "to", "man", "."]
(c1-19 / multi-sentence
       :snt1 (c1-0 / sadden-01
                   :ARG0 (c1-16 / and
                                :op1 (c1-17 / go-02
                                            :ARG0 (c1-7 / misfit
                                                        :mod (c1-15 / this)))
                                :op2 (c1-14 / amp-00
                                            :ARG0 c1-7)
                                :time (c1-8 / have-05
                                            :ARG0 c1-7
                                            :ARG1 (c1-33 / person
                                                         :ARG0-of (c1-34 / have-rel-role-91
                                                                         :ARG1 c1-7
                                                                         :ARG2 (c1-24 / child)))))
                   :ARG2-of (c1-6 / have-degree-91
                                  :ARG1 c1-16
                                  :ARG3 (c1-28 / most)
                                  :ARG5 (c1-12 / all)))
       :snt2 (c1-3 / obvious-01
                   :ARG1 (c1-4 / stick-around-03
                               :ARG0 (c1-20 / person
                                            :age (c1-26 / temporal-quantity
                                                        :unit (c1-5 / year)
                                                        :quant 1)
                                            :ARG1-of (c1-31 / ready-02
                                                            :ARG2 (c1-27 / have-05
                                                                         :ARG0 c1-20
                                                                         :ARG1 (c1-9 / kid))
                                                            :location (c1-30 / nowhere))))
                   :time (c1-36 / day))
       :snt3 (c1-25 / date-02
                    :ARG0 (c1-10 / he)
                    :ARG1 (c1-2 / someone
                                :ARG1-of (c1-21 / age-01
                                                :ARG2 (c1-35 / temporal-quantity
                                                             :ARG1-of (c1-32 / equal-01
                                                                             :ARG2 (c1-1 / temporal-quantity
                                                                                         :unit c1-5
                                                                                         :quant 1)))))
                    :time (c1-22 / now))
       :snt4 (c1-18 / bounce-01
                    :ARG1 (c1-11 / he)
                    :ARG3 (c1-23 / man)
                    :ARG4 (c1-29 / man)
                    :mod (c1-13 / just)))

# ::snt Does anyone really care I couldn't care less
# ::tokens ["Does", "anyone", "really", "care", "I", "could", "n't", "care", "less"]
# ::lemmas ["do", "anyone", "really", "care", "i", "could", "not", "care", "less"]
(c2-0 / multi-sentence
      :snt1 (c2-5 / care-01
                  :polarity (c2-7 / amr-unknown)
                  :ARG0 (c2-6 / anyone)
                  :ARG1-of (c2-1 / real-04))
      :snt2 (c2-3 / possible-01
                  :ARG1 (c2-2 / have-degree-91
                              :ARG1 (c2-8 / i)
                              :ARG2 (c2-9 / care-01
                                          :ARG0 c2-8)
                              :ARG3 (c2-4 / less))
                  :polarity -))

# ::snt Just another way of making money selling stories nobody cares about your private affairs thats your business
# ::tokens ["Just", "another", "way", "of", "making", "money", "selling", "stories", "nobody", "cares", "about", "your", "private", "affairs", "that", "s", "your", "business"]
# ::lemmas ["just", "another", "way", "of", "make", "money", "selling", "story", "nobody", "care", "about", "your", "private", "affair", "that", "s", "your", "business"]
(c3-8 / way
      :manner-of (c3-3 / make-05
                       :ARG0 (c3-2 / you)
                       :ARG1 (c3-6 / money)
                       :ARG2 (c3-5 / sell-01
                                   :ARG0 c3-2
                                   :ARG1 (c3-0 / story)))
      :mod (c3-12 / another)
      :mod (c3-10 / just)
      :ARG1-of (c3-9 / care-01
                     :ARG0 (c3-4 / nobody)
                     :ARG1 (c3-11 / affair-01
                                  :ARG0 c3-2
                                  :ARG1-of (c3-7 / private-02))
                     :polarity -)
      :domain (c3-1 / business
                    :poss c3-2))

# ::snt So????
# ::tokens ["So", "?", "?", "?", "?"]
# ::lemmas ["so", "?", "?", "?", "?"]
(c5-1 / so
      :polarity (c5-0 / amr-unknown))

# ::snt Big deal
# ::tokens ["Big", "deal"]
# ::lemmas ["big", "deal"]
(c6-0 / deal-03
      :mod (c6-1 / big))

# ::snt And nobody surprised at this statement!
# ::tokens ["And", "nobody", "surprised", "at", "this", "statement", "!"]
# ::lemmas ["and", "nobody", "surprise", "at", "this", "statement", "!"]
(c7-3 / and
      :op2 (c7-2 / surprise-01
                 :ARG0 (c7-4 / thing
                             :ARG1-of (c7-0 / state-01)
                             :mod (c7-5 / this))
                 :ARG1 (c7-1 / nobody)))

# ::snt Never......I'd never have guesses,. Muppets
# ::tokens ["Never", "......", "I'd", "never", "have", "guesses", ",", ".", "Muppets"]
# ::lemmas ["never", "......", "i'd", "never", "have", "guess", ",", ".", "muppet"]
(c8-0 / multi-sentence
      :snt1 (c8-2 / have-polarity-91
                  :time (c8-1 / ever)
                  :ARG2 -)
      :snt2 (c8-4 / have-03
                  :ARG0 (c8-5 / i)
                  :ARG1 (c8-6 / guess-01
                              :ARG0 c8-5)
                  :time (c8-7 / ever)
                  :polarity -)
      :snt3 (c8-3 / muppet))

# ::snt Tell us something we didnt know
# ::tokens ["Tell", "us", "something", "we", "did", "nt", "know"]
# ::lemmas ["tell", "we", "something", "we", "do", "not", "know"]
(c10-4 / tell-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-1 / something
                    :ARG1-of (c10-2 / know-01
                                    :ARG0 (c10-3 / we
                                                 :ARG2-of c10-4)
                                    :polarity -))
       :mode imperative)

# ::snt Well you arent going confirm you split up before you split up
# ::tokens ["Well", "you", "are", "nt", "going", "confirm", "you", "split", "up", "before", "you", "split", "up"]
# ::lemmas ["well", "you", "be", "not", "go", "confirm", "you", "split", "up", "before", "you", "split", "up"]
(c11-4 / confirm-01
       :ARG0 (c11-2 / you)
       :ARG1 (c11-3 / split-up-03
                    :ARG1 c11-2
                    :time (c11-1 / before
                                 :op1 (c11-0 / split-up-03
                                             :ARG1 c11-2)))
       :mod (c11-5 / well)
       :polarity -)

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c12-0 / care-01
       :ARG0 (c12-1 / amr-unknown))

# ::snt Telling people your personal life to plug records-charming
# ::tokens ["Telling", "people", "your", "personal", "life", "to", "plug", "records", "-", "charming"]
# ::lemmas ["tell", "people", "your", "personal", "life", "to", "plug", "record", "-", "charming"]
(c14-6 / tell-01
       :ARG0 (c14-0 / you)
       :ARG1 (c14-4 / life
                    :ARG1-of (c14-3 / personal-02
                                    :ARG2 c14-0))
       :ARG2 (c14-1 / person)
       :purpose (c14-7 / plug-02
                       :ARG0 c14-0
                       :ARG1 (c14-2 / record)
                       :ARG0-of (c14-5 / charm-01)))

# ::snt I think everyone knew that!
# ::tokens ["I", "think", "everyone", "knew", "that", "!"]
# ::lemmas ["i", "think", "everyone", "know", "that", "!"]
(c15-2 / think-01
       :ARG0 (c15-3 / i)
       :ARG1 (c15-1 / know-01
                    :ARG0 (c15-0 / everyone)
                    :ARG1 (c15-4 / that)))

# ::snt Zzzzz
# ::tokens ["Zzzzz"]
# ::lemmas ["zzzzz"]
(c16-0 / zzzzz)

# ::snt Or maybe its just shite.
# ::tokens ["Or", "maybe", "its", "just", "shite", "."]
# ::lemmas ["or", "maybe", "its", "just", "shite", "."]
(c18-0 / or
       :op2 (c18-2 / possible-01
                   :ARG1 (c18-1 / shit
                                :mod (c18-3 / just)
                                :domain (c18-4 / it))))

# ::snt Still saddling the boys with the nastyaf womanizer image huh? Wonders who's stupid a$$ deemed this a way to promote an artist?!
# ::tokens ["Still", "saddling", "the", "boys", "with", "the", "nastyaf", "womanizer", "image", "huh", "?", "Wonders", "who", "'s", "stupid", "a$$", "deemed", "this", "a", "way", "to", "promote", "an", "artist", "?", "!"]
# ::lemmas ["still", "saddle", "the", "boy", "with", "the", "nastyaf", "womanizer", "image", "huh", "?", "wonder", "who", "be", "stupid", "a$$", "deem", "this", "a", "way", "to", "promote", "an", "artist", "?", "!"]
(c19-2 / multi-sentence
       :snt1 (c19-4 / saddle-01
                    :polarity (c19-14 / amr-unknown)
                    :ARG1 (c19-1 / boy)
                    :ARG2 (c19-13 / image
                                  :mod (c19-9 / womanizer
                                              :mod (c19-3 / nastyaf)))
                    :mod (c19-0 / still)
                    :mod (c19-6 / huh))
       :snt2 (c19-8 / wonder-01
                    :ARG1 (c19-16 / deem-01
                                  :ARG0 (c19-15 / amr-unknown
                                                :mod (c19-17 / stupid)
                                                :mod (c19-10 / ass))
                                  :ARG1 (c19-12 / this
                                                :manner-of (c19-7 / promote-02
                                                                  :ARG1 (c19-5 / artist)))
                                  :polarity (c19-11 / amr-unknown))))

# ::snt Hes now LiaminPayne
# ::tokens ["He", "s", "now", "LiaminPayne"]
# ::lemmas ["he", "s", "now", "LiaminPayne"]
(c20-2 / person
       :name (c20-0 / name
                    :op1 "LiaminPayne")
       :time (c20-1 / now))

# ::snt Oh do one &amp; grow a pair you cardboard cut out cunt!
# ::tokens ["Oh", "do", "one", "&", "amp", ";", "grow", "a", "pair", "you", "cardboard", "cut", "out", "cunt", "!"]
# ::lemmas ["oh", "do", "one", "&", "amp", ";", "grow", "a", "pair", "you", "cardboard", "cut", "out", "cunt", "!"]
(c21-3 / multi-sentence
       :snt1 (c21-10 / do-02
                     :ARG0 (c21-2 / you)
                     :ARG1 (c21-8 / and
                                  :op1 (c21-0 / one)
                                  :op2 (c21-7 / amp))
                     :mod (c21-1 / oh
                                 :mode expressive)
                     :mode imperative)
       :snt2 (c21-9 / grow-03
                    :ARG0 (c21-11 / you
                                  :mod (c21-5 / cunt
                                              :ARG1-of (c21-12 / cut-out-06)
                                              :mod (c21-6 / cardboard)))
                    :ARG1 (c21-4 / pair)
                    :mode imperative))

# ::snt Pals.... so just some knobs trying to make a few quid and get mins of game by talking bollocks they know nothing about? Also does anyone actually care?
# ::tokens ["Pals", "....", "so", "just", "some", "knobs", "trying", "to", "make", "a", "few", "quid", "and", "get", "mins", "of", "game", "by", "talking", "bollocks", "they", "know", "nothing", "about", "?", "Also", "does", "anyone", "actually", "care", "?"]
# ::lemmas ["pal", "....", "so", "just", "some", "knob", "try", "to", "make", "a", "few", "quid", "and", "get", "min", "of", "game", "by", "talk", "bollock", "they", "know", "nothing", "about", "?", "also", "do", "anyone", "actually", "care", "?"]
(c22-12 / multi-sentence
        :snt1 (c22-21 / pardon-01)
        :snt2 (c22-15 / cause-01
                      :ARG1 (c22-3 / knob
                                   :quant (c22-0 / some)
                                   :mod (c22-5 / just)
                                   :ARG0-of (c22-8 / try-01
                                                   :ARG1 (c22-7 / and
                                                                :op1 (c22-2 / make-05
                                                                            :ARG0 c22-3
                                                                            :ARG1 (c22-19 / few
                                                                                          :op1 (c22-18 / monetary-quantity
                                                                                                       :unit (c22-13 / pound)
                                                                                                       :quant 1)))
                                                                :op2 (c22-9 / get-01
                                                                            :ARG0 c22-3
                                                                            :ARG1 (c22-16 / temporal-quantity
                                                                                          :unit (c22-14 / minute)
                                                                                          :quant 1)
                                                                            :ARG2 (c22-1 / game)
                                                                            :manner (c22-23 / talk-01
                                                                                            :ARG0 c22-3
                                                                                            :ARG1 (c22-11 / bollock
                                                                                                          :ARG1-of (c22-17 / know-01
                                                                                                                           :ARG0 c22-3
                                                                                                                           :ARG2 (c22-20 / nothing))))))))
                      :snt3 (c22-10 / care-01
                                    :polarity (c22-6 / amr-unknown)
                                    :ARG0 (c22-4 / anyone)
                                    :ARG1-of (c22-24 / actual-02)
                                    :mod (c22-22 / also))))

# ::snt Yes there more to it Im sure him being away a lot didnt help Im sure
# ::tokens ["Yes", "there", "more", "to", "it", "I", "m", "sure", "him", "being", "away", "a", "lot", "did", "nt", "help", "I", "m", "sure"]
# ::lemmas ["yes", "there", "more", "to", "it", "i", "m", "sure", "he", "be", "away", "a", "lot", "do", "not", "help", "i", "m", "sure"]
(c23-8 / and
       :op1 (c23-1 / more
                   :domain (c23-7 / it))
       :op2 (c23-2 / sure-02
                   :ARG0 (c23-3 / i)
                   :ARG1 (c23-4 / help-01
                                :ARG0 (c23-9 / away
                                             :domain (c23-6 / he)
                                             :quant (c23-5 / lot))
                                :polarity -))
       :ARG1-of (c23-0 / sure-02
                       :ARG0 c23-3))

# ::snt No I don't believe that either
# ::tokens ["No", "I", "do", "n't", "believe", "that", "either"]
# ::lemmas ["no", "i", "do", "not", "believe", "that", "either"]
(c24-1 / believe-01
       :ARG0 (c24-2 / i)
       :ARG1 (c24-3 / that)
       :mod (c24-0 / either)
       :polarity -)

# ::snt Find that hard to believe Cheryl know he would have to promote his music she been in th there game and knows whats expected yes it prob was an issue but cant see it being just Liam was away a lot.
# ::tokens ["Find", "that", "hard", "to", "believe", "Cheryl", "know", "he", "would", "have", "to", "promote", "his", "music", "she", "been", "in", "th", "there", "game", "and", "knows", "what", "s", "expected", "yes", "it", "prob", "was", "an", "issue", "but", "ca", "nt", "see", "it", "being", "just", "Liam", "was", "away", "a", "lot", "."]
# ::lemmas ["find", "that", "hard", "to", "believe", "Cheryl", "know", "he", "would", "have", "to", "promote", "his", "music", "she", "be", "in", "th", "there", "game", "and", "know", "what", "s", "expect", "yes", "it", "prob", "be", "an", "issue", "but", "can", "not", "see", "it", "be", "just", "Liam", "be", "away", "a", "lot", "."]
(c25-17 / find-02
        :ARG1 (c25-6 / hard-02
                     :ARG1 (c25-12 / believe-01
                                   :ARG1 (c25-7 / know-01
                                                :ARG0 (c25-20 / person
                                                              :name (c25-18 / name
                                                                            :op1 "Cheryl"))
                                                :ARG1 (c25-4 / obligate-01
                                                             :ARG1 (c25-21 / he)
                                                             :ARG2 (c25-14 / promote-02
                                                                           :ARG0 c25-21
                                                                           :ARG1 (c25-13 / music
                                                                                         :poss c25-21))))))
        :ARG1-of (c25-15 / cause-01
                         :ARG0 (c25-9 / and
                                      :op1 (c25-1 / be-located-at-91
                                                  :ARG1 c25-20
                                                  :ARG2 (c25-10 / game
                                                                :poss c25-20))
                                      :op2 (c25-16 / know-01
                                                   :ARG0 c25-20
                                                   :ARG1 (c25-8 / thing
                                                                :ARG1-of (c25-19 / expect-01)))))
        :ARG1-of (c25-11 / cause-01
                         :ARG0 (c25-2 / contrast-01
                                      :ARG1 (c25-3 / possible-01
                                                   :ARG1 (c25-0 / see-01
                                                                :ARG0 c25-20
                                                                :ARG1 (c25-22 / issue-02
                                                                              :ARG0 (c25-5 / it)))
                                                   :polarity -))))

# ::snt I've been waiting for this
# ::tokens ["I", "'ve", "been", "waiting", "for", "this"]
# ::lemmas ["i", "'ve", "be", "wait", "for", "this"]
(c26-0 / wait-01
       :ARG1 (c26-1 / i)
       :ARG2 (c26-2 / this))

# ::snt They were never gonna make it. Hes young and ambitious who wants to live his life to the max. Shes happy as she got the child she wanted and he will always be supportive of that. Different strokes...
# ::tokens ["They", "were", "never", "gon", "na", "make", "it", ".", "He", "s", "young", "and", "ambitious", "who", "wants", "to", "live", "his", "life", "to", "the", "max", ".", "She", "s", "happy", "as", "she", "got", "the", "child", "she", "wanted", "and", "he", "will", "always", "be", "supportive", "of", "that", ".", "Different", "strokes", "..."]
# ::lemmas ["they", "be", "never", "going", "to", "make", "it", ".", "he", "s", "young", "and", "ambitious", "who", "want", "to", "live", "his", "life", "to", "the", "max", ".", "she", "s", "happy", "as", "she", "get", "the", "child", "she", "want", "and", "he", "will", "always", "be", "supportive", "of", "that", ".", "different", "stroke", "..."]
(c27-15 / multi-sentence
        :snt1 (c27-7 / make-02
                     :ARG0 (c27-13 / they)
                     :ARG1 (c27-24 / it)
                     :time (c27-20 / ever)
                     :polarity -)
        :snt2 (c27-11 / and
                      :op1 (c27-5 / young
                                  :domain (c27-8 / he))
                      :op2 (c27-10 / ambitious
                                   :domain c27-8)
                      :ARG0-of (c27-22 / want-01
                                       :ARG1 (c27-1 / live-01
                                                    :ARG0 c27-8
                                                    :ARG1 (c27-14 / life
                                                                  :poss c27-8)
                                                    :extent (c27-18 / maximum))))
        :snt3 (c27-9 / and
                     :op1 (c27-23 / happy-01
                                  :ARG0 (c27-12 / get-01
                                                :ARG0 (c27-0 / she)
                                                :ARG1 (c27-21 / person
                                                              :ARG1-of (c27-2 / want-01
                                                                              :ARG0 c27-0)
                                                              :ARG0-of (c27-6 / have-rel-role-91
                                                                              :ARG1 c27-0
                                                                              :ARG2 (c27-16 / child))))
                                  :ARG1 (c27-17 / he))
                     :op2 (c27-4 / support-01
                                 :ARG0 c27-17
                                 :ARG1 c27-12
                                 :time (c27-25 / always)))
        :snt4 (c27-3 / stroke-02
                     :ARG1-of (c27-19 / differ-02)))

# ::snt Dear god.... hes a little pathetic boy wtf did she see in him
# ::tokens ["Dear", "god", "....", "he", "s", "a", "little", "pathetic", "boy", "wtf", "did", "she", "see", "in", "him"]
# ::lemmas ["dear", "god", "....", "he", "s", "a", "little", "pathetic", "boy", "wtf", "do", "she", "see", "in", "he"]
(c29-4 / multi-sentence
       :snt1 (c29-8 / person
                    :name (c29-3 / name
                                 :op1 "God")
                    :mod (c29-12 / dear))
       :snt2 (c29-2 / boy
                    :mod (c29-5 / pathetic
                                :degree (c29-9 / little))
                    :domain (c29-7 / he))
       :snt3 (c29-6 / see-01
                    :ARG0 (c29-0 / she)
                    :ARG1 (c29-10 / he)
                    :mod (c29-1 / fuck
                                :mode expressive)
                    :polarity (c29-11 / amr-unknown)))

# ::snt you are right im enjoying it
# ::tokens ["you", "are", "right", "i", "m", "enjoying", "it"]
# ::lemmas ["you", "be", "right", "i", "m", "enjoy", "it"]
(c30-2 / right-06
       :ARG1 (c30-0 / you)
       :ARG2 (c30-3 / enjoy-01
                    :ARG0 (c30-4 / i)
                    :ARG1 (c30-1 / it)))
