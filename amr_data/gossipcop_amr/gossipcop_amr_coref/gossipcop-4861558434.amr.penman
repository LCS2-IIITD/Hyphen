# ::snt That's wat friends are
# ::tokens ["That", "'s", "wat", "friends", "are"]
# ::lemmas ["that", "be", "wat", "friend", "be"]
(c1-2 / person
      :ARG0-of (c1-1 / have-rel-role-91
                     :ARG2 (c1-0 / friend))
      :domain (c1-3 / that))

# ::snt Suri is what America needs right now
# ::tokens ["Suri", "is", "what", "America", "needs", "right", "now"]
# ::lemmas ["Suri", "be", "what", "America", "need", "right", "now"]
(c3-6 / thing
      :name (c3-0 / name
                  :op1 "Suri")
      :ARG1-of (c3-2 / need-01
                     :ARG0 (c3-4 / country
                                 :name (c3-3 / name
                                             :op1 "America"))
                     :time (c3-5 / now
                                 :mod (c3-1 / right))))

# ::snt Also, I still find myself reading celebrity kid news &amp; thinking "I wonder how Suri would react to this."
# ::tokens ["Also", ",", "I", "still", "find", "myself", "reading", "celebrity", "kid", "news", "&", "amp", ";", "thinking", "\"", "I", "wonder", "how", "Suri", "would", "react", "to", "this", ".", "\""]
# ::lemmas ["also", ",", "i", "still", "find", "myself", "read", "celebrity", "kid", "news", "&", "amp", ";", "think", "\"", "i", "wonder", "how", "Suri", "would", "react", "to", "this", ".", "\""]
(c4-11 / and
       :op1 (c4-0 / find-01
                  :ARG0 (c4-10 / i)
                  :ARG1 (c4-4 / read-01
                              :ARG0 c4-10
                              :ARG1 (c4-1 / magazine
                                          :name (c4-2 / name
                                                      :op1 "News&amp")
                                          :mod (c4-7 / celebrity)))
                  :mod (c4-3 / still))
       :op2 (c4-9 / think-01
                  :ARG0 c4-10
                  :ARG1 (c4-8 / wonder-01
                              :ARG0 c4-10
                              :ARG1 (c4-15 / thing
                                           :ARG2-of (c4-14 / react-01
                                                           :ARG0 (c4-6 / person
                                                                       :name (c4-5 / name
                                                                                   :op1 "Suri"))
                                                           :ARG1 (c4-12 / this)))))
       :mod (c4-13 / also))

# ::snt just catching up &amp; CONGRATS!! I'm going to miss but can't wait for Notorious. Woo!
# ::tokens ["just", "catching", "up", "&", "amp", ";", "CONGRATS", "!", "!", "I", "'m", "going", "to", "miss", "but", "ca", "n't", "wait", "for", "Notorious", ".", "Woo", "!"]
# ::lemmas ["just", "catch", "up", "&", "amp", ";", "CONGRATS", "!", "!", "i", "be", "go", "to", "miss", "but", "can", "not", "wait", "for", "notorious", ".", "Woo", "!"]
(c5-0 / multi-sentence
      :snt1 (c5-12 / and
                   :op1 (c5-8 / catch-up-04
                              :ARG1 (c5-11 / i)
                              :mod (c5-10 / just))
                   :op2 (c5-5 / person
                              :name (c5-1 / name
                                          :op1 "amp")))
      :snt2 (c5-13 / concession-of
                   :ARG1 (c5-4 / miss-02
                               :ARG0 (c5-3 / i))
                   :ARG2 (c5-9 / wait-01
                               :ARG1 c5-3
                               :ARG2 (c5-2 / person
                                           :name (c5-6 / name
                                                       :op1 "Notorious"))))
      :snt3 (c5-7 / woo-01
                  :mode expressive))

# ::snt I am so depressed/happy for you! Can't wait to watch your show. Congrats girl, you deserve it!
# ::tokens ["I", "am", "so", "depressed", "/", "happy", "for", "you", "!", "Ca", "n't", "wait", "to", "watch", "your", "show", ".", "Congrats", "girl", ",", "you", "deserve", "it", "!"]
# ::lemmas ["i", "be", "so", "depressed", "/", "happy", "for", "you", "!", "can", "not", "wait", "to", "watch", "your", "show", ".", "congrat", "girl", ",", "you", "deserve", "it", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-4 / slash
                  :op1 (c6-14 / depress-01
                              :ARG1 (c6-12 / i)
                              :degree (c6-0 / so))
                  :op2 (c6-6 / happy-01
                             :ARG1 c6-12
                             :degree c6-0)
                  :beneficiary (c6-1 / you))
      :snt2 (c6-7 / possible-01
                  :ARG1 (c6-9 / wait-01
                              :ARG1 c6-12
                              :ARG2 (c6-8 / watch-01
                                          :ARG0 c6-12
                                          :ARG1 (c6-16 / show-04
                                                       :ARG0 (c6-13 / you))))
                  :polarity -)
      :snt3 (c6-10 / congratulate-01
                   :ARG1 (c6-3 / girl)
                   :ARG1-of (c6-15 / cause-01
                                   :ARG0 (c6-11 / deserve-01
                                                :ARG0 c6-3
                                                :ARG1 (c6-5 / it)))))

# ::snt You will be missed, my dear!! Congrats on all things xo
# ::tokens ["You", "will", "be", "missed", ",", "my", "dear", "!", "!", "Congrats", "on", "all", "things", "xo"]
# ::lemmas ["you", "will", "be", "miss", ",", "my", "dear", "!", "!", "congrat", "on", "all", "thing", "xo"]
(c7-1 / multi-sentence
      :snt1 (c7-5 / miss-01
                  :ARG1 (c7-0 / you)
                  :ARG1-of (c7-2 / say-01
                                 :ARG0 (c7-7 / i)
                                 :ARG2 (c7-10 / dear
                                              :poss c7-7)))
      :snt2 (c7-6 / congratulate-01
                  :ARG0 c7-7)
      :ARG1 (c7-9 / you)
      :topic (c7-8 / thing
                   :mod (c7-3 / all))
      :mod (c7-4 / emoticon
                 :value "xo"))

# ::snt Nooooo! (But great news on the new show!)
# ::tokens ["Nooooo", "!", "(", "But", "great", "news", "on", "the", "new", "show", "!", ")"]
# ::lemmas ["Nooooo", "!", "(", "but", "great", "news", "on", "the", "new", "show", "!", ")"]
(c8-4 / contrast-01
      :ARG1 (c8-0 / no)
      :ARG2 (c8-2 / news
                  :mod (c8-5 / great)
                  :topic (c8-1 / show-04
                               :ARG1-of (c8-3 / new-01)))
      :mode expressive)

# ::snt cheers and best luck going forward!
# ::tokens ["cheers", "and", "best", "luck", "going", "forward", "!"]
# ::lemmas ["cheer", "and", "good", "luck", "go", "forward", "!"]
(c9-5 / and
      :op1 (c9-4 / cheers)
      :op2 (c9-3 / luck
                 :ARG1-of (c9-2 / have-degree-91
                                :ARG2 (c9-6 / good-02
                                            :ARG1 c9-3)
                                :ARG3 (c9-1 / most)))
      :direction (c9-0 / forward))

# ::snt Thank you! It's pretty exciting!
# ::tokens ["Thank", "you", "!", "It", "'s", "pretty", "exciting", "!"]
# ::lemmas ["thank", "you", "!", "it", "be", "pretty", "exciting", "!"]
(c11-1 / multi-sentence
       :snt1 (c11-6 / thank-01
                    :ARG0 (c11-5 / i)
                    :ARG1 (c11-0 / you))
       :snt2 (c11-3 / excite-01
                    :ARG0 (c11-2 / it)
                    :degree (c11-4 / pretty)))

# ::snt been a fun ride. Can't wait to see what's next for you
# ::tokens ["been", "a", "fun", "ride", ".", "Ca", "n't", "wait", "to", "see", "what", "'s", "next", "for", "you"]
# ::lemmas ["be", "a", "fun", "ride", ".", "can", "not", "wait", "to", "see", "what", "be", "next", "for", "you"]
(c12-2 / multi-sentence
       :snt1 (c12-5 / ride-01
                    :ARG1-of (c12-0 / fun-01))
       :snt2 (c12-6 / wait-01
                    :ARG1 (c12-7 / i)
                    :ARG2 (c12-4 / see-01
                                 :ARG0 c12-7
                                 :ARG1 (c12-8 / thing
                                              :mod (c12-3 / next)
                                              :beneficiary (c12-1 / you)))))

# ::snt If true Jamie movie career is over, there are consequences when you backstab your friend, specifically when its Cruise
# ::tokens ["If", "true", "Jamie", "movie", "career", "is", "over", ",", "there", "are", "consequences", "when", "you", "backstab", "your", "friend", ",", "specifically", "when", "its", "Cruise"]
# ::lemmas ["if", "true", "Jamie", "movie", "career", "be", "over", ",", "there", "be", "consequence", "when", "you", "backstab", "your", "friend", ",", "specifically", "when", "its", "Cruise"]
(c13-12 / consequence-03
        :ARG1 (c13-6 / stab-01
                     :ARG0 (c13-3 / you)
                     :ARG1 (c13-10 / person
                                   :ARG0-of (c13-9 / have-rel-role-91
                                                   :ARG1 c13-3
                                                   :ARG2 (c13-0 / friend)))
                     :manner (c13-2 / back))
        :condition (c13-1 / over-01
                          :ARG1 (c13-15 / career
                                        :mod (c13-4 / movie)
                                        :mod (c13-5 / person
                                                    :name (c13-7 / name
                                                                 :op1 "Jamie"))
                                        :ARG1-of (c13-13 / true-01)))
        :ARG1-of (c13-8 / specific-02
                        :ARG2 (c13-14 / person
                                      :name (c13-11 / name
                                                    :op1 "Cruise"))))

# ::snt until he does a spinning back kick on yo ass. I know you seen those MI movies.
# ::tokens ["until", "he", "does", "a", "spinning", "back", "kick", "on", "yo", "ass", ".", "I", "know", "you", "seen", "those", "MI", "movies", "."]
# ::lemmas ["until", "he", "do", "a", "spinning", "back", "kick", "on", "yo", "ass", ".", "i", "know", "you", "see", "those", "mi", "movie", "."]
(c14-3 / multi-sentence
       :snt1 (c14-1 / be-temporally-at-91
                    :ARG2 (c14-15 / until
                                  :op1 (c14-7 / kick-01
                                              :ARG0 (c14-6 / he)
                                              :ARG1 (c14-12 / ass
                                                            :part-of (c14-2 / you))
                                              :ARG0-of (c14-5 / spin-01
                                                              :direction (c14-8 / back))
                                              :destination c14-12))
                    :polarity -)
       :snt2 (c14-14 / know-01
                     :ARG0 (c14-11 / i)
                     :ARG1 (c14-0 / see-01
                                  :ARG0 (c14-13 / you)
                                  :ARG1 (c14-9 / movie
                                               :name (c14-4 / name
                                                            :op1 "MI")
                                               :mod (c14-10 / that)))))

# ::snt nah ain't nobody fuckin up tom cruise. Most solid '4 dude on the set.
# ::tokens ["nah", "ai", "n't", "nobody", "fuckin", "up", "tom", "cruise", ".", "Most", "solid", "'", "4", "dude", "on", "the", "set", "."]
# ::lemmas ["nah", "ai", "not", "nobody", "fuckin", "up", "tom", "cruise", ".", "most", "solid", "'", "4", "dude", "on", "the", "set", "."]
(c15-3 / multi-sentence
       :snt1 (c15-10 / up-03
                     :ARG1 (c15-2 / nobody)
                     :mod (c15-0 / fuck)
                     :snt2 (c15-7 / cruise-01
                                  :mod (c15-8 / tom))
                     :polarity -)
       :snt3 (c15-5 / have-degree-91
                    :ARG1 (c15-9 / dude
                                 :location (c15-4 / set)
                                 :mod (c15-1 / solid
                                             :ARG2-of c15-5)))
       :ARG3 (c15-6 / most))

# ::snt .. Would u believe?
# ::tokens ["..", "Would", "u", "believe", "?"]
# ::lemmas ["..", "would", "u", "believe", "?"]
(c16-0 / believe-01
       :polarity (c16-2 / amr-unknown)
       :ARG0 (c16-1 / you))

# ::snt they make a beautiful couple
# ::tokens ["they", "make", "a", "beautiful", "couple"]
# ::lemmas ["they", "make", "a", "beautiful", "couple"]
(c17-2 / make-01
       :ARG1 (c17-3 / they)
       :ARG2 (c17-0 / couple
                    :ARG1-of (c17-1 / beautiful-02)))

# ::snt Ha. I knew it. She has jungle fever
# ::tokens ["Ha", ".", "I", "knew", "it", ".", "She", "has", "jungle", "fever"]
# ::lemmas ["ha", ".", "i", "know", "it", ".", "she", "have", "jungle", "fever"]
(c18-1 / multi-sentence
       :snt1 (c18-5 / know-01
                    :ARG0 (c18-8 / i)
                    :ARG1 (c18-3 / it)
                    :mod (c18-4 / ha
                                :mode expressive))
       :snt2 (c18-6 / have-03
                    :ARG0 (c18-2 / she)
                    :ARG1 (c18-0 / fever
                                 :mod (c18-7 / jungle))))

# ::snt haha I didn't know that either?? Weird.
# ::tokens ["haha", "I", "did", "n't", "know", "that", "either", "?", "?", "Weird", "."]
# ::lemmas ["haha", "i", "do", "not", "know", "that", "either", "?", "?", "weird", "."]
(c19-0 / multi-sentence
       :snt1 (c19-3 / know-01
                    :ARG0 (c19-5 / i)
                    :ARG1 (c19-6 / that)
                    :mod (c19-1 / either)
                    :mod (c19-2 / haha
                                :mode expressive)
                    :polarity -)
       :snt2 (c19-4 / weird))

# ::snt I always wanted have the Jenna Lately show.
# ::tokens ["I", "always", "wanted", "have", "the", "Jenna", "Lately", "show", "."]
# ::lemmas ["i", "always", "want", "have", "the", "Jenna", "Lately", "show", "."]
(c20-3 / want-01
       :ARG0 (c20-4 / i)
       :ARG1 (c20-2 / have-03
                    :ARG0 c20-4
                    :ARG1 (c20-1 / show
                                 :name (c20-0 / name
                                              :op1 "Jenna"
                                              :op2 "Lately")))
       :time (c20-5 / always))
