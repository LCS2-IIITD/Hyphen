# ::snt sometimes without even knowing is that as males and females we forgot that we both communicate on different levels
# ::tokens ["sometimes", "without", "even", "knowing", "is", "that", "as", "males", "and", "females", "we", "forgot", "that", "we", "both", "communicate", "on", "different", "levels"]
# ::lemmas ["sometimes", "without", "even", "know", "be", "that", "as", "male", "and", "female", "we", "forget", "that", "we", "both", "communicate", "on", "different", "level"]
(c1-0 / forget-01
      :ARG0 (c1-9 / we
                  :mod (c1-1 / both))
      :ARG1 (c1-8 / communicate-01
                  :ARG0 c1-9
                  :manner (c1-5 / level
                                :ARG1-of (c1-11 / differ-02)))
      :frequency (c1-3 / sometimes)
      :manner (c1-6 / know-01
                    :ARG0 c1-9
                    :mod (c1-4 / even)
                    :polarity -)
      :ARG1-of (c1-12 / cause-01
                      :ARG0 (c1-10 / and
                                   :op1 (c1-2 / male)
                                   :op2 (c1-7 / female)
                                   :domain c1-9)))

# ::snt Who freakin' cares!!! Too busy with the other reality show
# ::tokens ["Who", "freakin", "'", "cares", "!", "!", "!", "Too", "busy", "with", "the", "other", "reality", "show"]
# ::lemmas ["who", "freakin", "'", "care", "!", "!", "!", "too", "busy", "with", "the", "other", "reality", "show"]
(c2-3 / multi-sentence
      :snt1 (c2-7 / care-01
                  :ARG0 (c2-9 / amr-unknown)
                  :mod (c2-0 / freak))
      :snt2 (c2-5 / have-degree-91
                  :ARG1 (c2-2 / broadcast-program
                              :name (c2-4 / name
                                          :op1 "reality"
                                          :op2 "show")
                              :mod (c2-1 / other))
                  :ARG2 (c2-6 / busy-01
                              :ARG1 c2-2)
                  :ARG3 (c2-8 / too)))

# ::snt maybe that's a good thing
# ::tokens ["maybe", "that", "'s", "a", "good", "thing"]
# ::lemmas ["maybe", "that", "be", "a", "good", "thing"]
(c3-1 / possible-01
      :ARG1 (c3-0 / good-02
                  :ARG1 (c3-3 / thing
                              :domain (c3-2 / that))))

# ::snt preach!
# ::tokens ["preach", "!"]
# ::lemmas ["preach", "!"]
(c4-1 / preach-01
      :ARG0 (c4-0 / you)
      :mode imperative)
