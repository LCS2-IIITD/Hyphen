# ::snt Is this something to do with last nights episode? You lost me at smachagassgar.
# ::tokens ["Is", "this", "something", "to", "do", "with", "last", "nights", "episode", "?", "You", "lost", "me", "at", "smachagassgar", "."]
# ::lemmas ["be", "this", "something", "to", "do", "with", "last", "nights", "episode", "?", "you", "lose", "i", "at", "smachagassgar", "."]
(c1-1 / multi-sentence
      :snt1 (c1-5 / have-to-do-with-04
                  :polarity (c1-3 / amr-unknown)
                  :ARG0 (c1-10 / this)
                  :ARG1 (c1-4 / episode
                              :time (c1-12 / date-entity
                                           :dayperiod (c1-2 / night)
                                           :mod (c1-0 / yesterday))))
      :snt2 (c1-6 / lose-02
                  :ARG0 (c1-11 / you)
                  :ARG1 (c1-9 / i)
                  :ARG2 (c1-7 / person
                              :name (c1-8 / name
                                          :op1 "smachagassgar"))))

# ::snt dying hahahah
# ::tokens ["dying", "hahahah"]
# ::lemmas ["die", "hahahah"]
(c2-0 / die-01)

# ::snt I asked him that SEVEN YEARS AGO LMAO
# ::tokens ["I", "asked", "him", "that", "SEVEN", "YEARS", "AGO", "LMAO"]
# ::lemmas ["i", "ask", "he", "that", "SEVEN", "YEARS", "AGO", "lmao"]
(c3-2 / ask-01
      :ARG0 (c3-6 / i)
      :ARG1 (c3-4 / age-01
                  :ARG1 (c3-3 / he)
                  :ARG2 (c3-5 / temporal-quantity
                              :unit (c3-1 / year)
                              :quant 5)
                  :mod (c3-0 / off))
      :ARG2 c3-3)

# ::snt Omg do it!!
# ::tokens ["Omg", "do", "it", "!", "!"]
# ::lemmas ["Omg", "do", "it", "!", "!"]
(c4-0 / do-02
      :ARG0 (c4-1 / you)
      :ARG1 (c4-2 / it)
      :mod (c4-3 / oh-my-god
                 :mode expressive)
      :mode imperative)

# ::snt Regarde la saison sur Versace!!
# ::tokens ["Regarde", "la", "saison", "sur", "Versace", "!", "!"]
# ::lemmas ["Regarde", "la", "saison", "sur", "Versace", "!", "!"]
(c5-0 / event
      :name (c5-1 / name
                  :op1 "Regarde"
                  :op2 "la"
                  :op3 "saison"
                  :op4 " sur"
                  :op5 "Versace")
      :mode expressive)

# ::snt And big Al (my dad). Theres no battling it
# ::tokens ["And", "big", "Al", "(", "my", "dad", ")", ".", "There", "s", "no", "battling", "it"]
# ::lemmas ["and", "big", "Al", "(", "my", "dad", ")", ".", "there", "s", "no", "battle", "it"]
(c6-3 / multi-sentence
      :snt1 (c6-9 / and
                  :op2 (c6-6 / person
                             :name (c6-2 / name
                                         :op1 "Al")
                             :mod (c6-0 / big)
                             :ARG0-of (c6-5 / have-rel-role-91
                                            :ARG1 (c6-8 / i)
                                            :ARG2 (c6-10 / dad))))
      :snt2 (c6-7 / battle-01
                  :ARG0 (c6-1 / you)
                  :ARG1 (c6-4 / it)
                  :polarity -))

# ::snt Not quite sure where I'm going with this, je trouve le mlange des genres plutt amusant.
# ::tokens ["Not", "quite", "sure", "where", "I", "'m", "going", "with", "this", ",", "je", "trouve", "le", "mlange", "des", "genres", "plutt", "amusant", "."]
# ::lemmas ["not", "quite", "sure", "where", "i", "be", "go", "with", "this", ",", "je", "trouve", "le", "mlange", "des", "genres", "plutt", "amusant", "."]
(c7-0 / multi-sentence
      :snt1 (c7-1 / sure-02
                  :ARG0 (c7-5 / i)
                  :ARG1 (c7-3 / location
                              :ARG4-of (c7-7 / go-02
                                             :ARG0 c7-5
                                             :accompanier (c7-6 / this)))
                  :degree (c7-8 / quite)
                  :polarity -)
      :snt2 (c7-4 / plutt-amusant
                  :domain (c7-2 / et-cetera)))

# ::snt Keep up the crypto movement! We are supporters of UTRUST, trying to help the adoption of crypto, check us out!
# ::tokens ["Keep", "up", "the", "crypto", "movement", "!", "We", "are", "supporters", "of", "UTRUST", ",", "trying", "to", "help", "the", "adoption", "of", "crypto", ",", "check", "us", "out", "!"]
# ::lemmas ["keep", "up", "the", "crypto", "movement", "!", "we", "be", "supporter", "of", "UTRUST", ",", "try", "to", "help", "the", "adoption", "of", "crypto", ",", "check", "we", "out", "!"]
(c8-2 / multi-sentence
      :snt1 (c8-7 / keep-up-05
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-6 / movement-07
                              :ARG1 (c8-9 / crypto))
                  :mode imperative)
      :snt2 (c8-4 / support-01
                  :ARG0 (c8-10 / we)
                  :ARG1 (c8-0 / organization
                              :name (c8-3 / name
                                          :op1 "UTRUST")
                              :ARG0-of (c8-11 / try-01
                                              :ARG1 (c8-8 / help-01
                                                          :ARG0 c8-0
                                                          :ARG1 (c8-5 / adopt-01
                                                                      :ARG1 (c8-12 / technology
                                                                                   :name c8-3)))))))

# ::snt Itachi est os observando
# ::tokens ["Itachi", "est", "os", "observando"]
# ::lemmas ["itachi", "est", "os", "observando"]
(c9-1 / est-01
      :ARG1 (c9-0 / country
                  :name (c9-2 / name
                              :op1 "Itachi"))
      :ARG2 (c9-3 / observe-01
                  :ARG0 c9-0))

# ::snt When u going to b on the show again? Ur Awesome
# ::tokens ["When", "u", "going", "to", "b", "on", "the", "show", "again", "?", "Ur", "Awesome"]
# ::lemmas ["when", "u", "go", "to", "b", "on", "the", "show", "again", "?", "ur", "Awesome"]
(c11-3 / multi-sentence
       :snt1 (c11-1 / be-located-at-91
                    :polarity (c11-7 / amr-unknown)
                    :ARG1 (c11-2 / you)
                    :ARG2 (c11-4 / show-04
                                 :ARG1 (c11-8 / you)
                                 :mod (c11-6 / again))
                    :time (c11-5 / amr-unknown))
       :snt2 (c11-9 / awesome-03
                    :ARG0 (c11-0 / you)))

# ::snt Hey Rob...What's up?
# ::tokens ["Hey", "Rob", "...", "What", "'s", "up", "?"]
# ::lemmas ["hey", "Rob", "...", "what", "be", "up", "?"]
(c12-5 / ask-01
       :ARG1 (c12-1 / event
                    :mod (c12-4 / amr-unknown))
       :ARG2 (c12-3 / person
                    :name (c12-0 / name
                                 :op1 "Rob"))
       :mod (c12-2 / hey
                   :mode expressive))

# ::snt Hey big head lol
# ::tokens ["Hey", "big", "head", "lol"]
# ::lemmas ["hey", "big", "head", "lol"]
(c13-1 / head
       :mod (c13-0 / big)
       :mod (c13-3 / hey
                   :mode expressive)
       :ARG2-of (c13-2 / laugh-01
                       :ARG0 (c13-4 / i)
                       :manner (c13-5 / loud)))

# ::snt Hahaha hes soo cute!
# ::tokens ["Hahaha", "he", "s", "soo", "cute", "!"]
# ::lemmas ["Hahaha", "he", "s", "soo", "cute", "!"]
(c14-1 / cute
       :domain (c14-2 / he)
       :degree (c14-3 / so)
       :mod (c14-0 / haha
                   :mode expressive))

# ::snt Salut i spaek french
# ::tokens ["Salut", "i", "spaek", "french"]
# ::lemmas ["salut", "i", "spaek", "french"]
(c15-4 / and
       :op1 (c15-2 / salad)
       :op2 (c15-0 / speak-01
                   :ARG3 (c15-3 / language
                                :name (c15-1 / name
                                             :op1 "French"))))

# ::snt Heeeey rob
# ::tokens ["Heeeey", "rob"]
# ::lemmas ["heeeey", "rob"]
(c16-0 / rob-01
       :mod (c16-1 / hey
                   :mode expressive))

# ::snt Is that all it take hey Robbie whats up bestie
# ::tokens ["Is", "that", "all", "it", "take", "hey", "Robbie", "what", "s", "up", "bestie"]
# ::lemmas ["be", "that", "all", "it", "take", "hey", "Robbie", "what", "s", "up", "bestie"]
(c17-0 / multi-sentence
       :snt1 (c17-9 / take-10
                    :ARG0 (c17-13 / that)
                    :ARG1 (c17-11 / all)
                    :polarity (c17-10 / amr-unknown))
       :snt2 (c17-2 / say-01
                    :ARG0 (c17-12 / i)
                    :ARG1 (c17-5 / know-up-04
                                 :ARG0 (c17-6 / person
                                              :name (c17-1 / name
                                                           :op1 "Robbie"))
                                 :ARG1 (c17-8 / amr-unknown)
                                 :ARG1-of (c17-4 / have-degree-91
                                                 :ARG2 (c17-3 / good-02
                                                              :ARG1 c17-5)
                                                 :ARG3 (c17-7 / most)))
                    :ARG2 c17-6))

# ::snt Rob snap out of it we miss you lover!!
# ::tokens ["Rob", "snap", "out", "of", "it", "we", "miss", "you", "lover", "!", "!"]
# ::lemmas ["Rob", "snap", "out", "of", "it", "we", "miss", "you", "lover", "!", "!"]
(c18-4 / say-01
       :ARG0 (c18-12 / i)
       :ARG1 (c18-0 / snap-07
                    :ARG0 (c18-8 / person
                                 :name (c18-2 / name
                                              :op1 "Rob"))
                    :ARG2 (c18-1 / out-06
                                 :ARG2 (c18-5 / it))
                    :ARG1-of (c18-10 / cause-01
                                     :ARG0 (c18-3 / miss-01
                                                  :ARG0 (c18-11 / we)
                                                  :ARG1 (c18-6 / person
                                                               :ARG0-of (c18-7 / have-rel-role-91
                                                                               :ARG1 c18-8
                                                                               :ARG2 (c18-9 / lover)))))
                    :mode imperative)
       :ARG2 c18-8)

# ::snt We miss you Rob
# ::tokens ["We", "miss", "you", "Rob"]
# ::lemmas ["we", "miss", "you", "Rob"]
(c19-2 / say-01
       :ARG0 (c19-4 / we)
       :ARG1 (c19-1 / miss-01
                    :ARG0 c19-4
                    :ARG1 (c19-3 / person
                                 :name (c19-0 / name
                                              :op1 "Rob")
                                 :ARG2-of c19-2)))

# ::snt Hi Rob
# ::tokens ["Hi", "Rob"]
# ::lemmas ["hi", "Rob"]
(c20-3 / say-01
       :ARG1 (c20-1 / hi)
       :ARG2 (c20-2 / person
                    :name (c20-0 / name
                                 :op1 "Rob")))

# ::snt DADDY KING
# ::tokens ["DADDY", "KING"]
# ::lemmas ["DADDY", "KING"]
(c21-1 / person
       :name (c21-0 / name
                    :op1 "DADDY"
                    :op2 "King"))

# ::snt Same
# ::tokens ["Same"]
# ::lemmas ["same"]
(c22-0 / same-01)

# ::snt Oh hey Robert
# ::tokens ["Oh", "hey", "Robert"]
# ::lemmas ["oh", "hey", "Robert"]
(c23-3 / say-01
       :ARG1 (c23-1 / hey
                    :mode expressive)
       :ARG2 (c23-2 / person
                    :name (c23-0 / name
                                 :op1 "Robert")))

# ::snt Heeeeyyyy
# ::tokens ["Heeeeyyyy"]
# ::lemmas ["Heeeeyyyy"]
(c24-0 / hmm
       :mode expressive)

# ::snt So did you
# ::tokens ["So", "did", "you"]
# ::lemmas ["so", "do", "you"]
(c25-0 / do-02
       :ARG0 (c25-1 / you)
       :mod (c25-2 / so))

# ::snt Good to see
# ::tokens ["Good", "to", "see"]
# ::lemmas ["good", "to", "see"]
(c27-0 / good-02
       :ARG1 (c27-1 / see-01))

# ::snt Heeeeeeeeeey rob!
# ::tokens ["Heeeeeeeeeey", "rob", "!"]
# ::lemmas ["heeeeeeeeeey", "rob", "!"]
(c28-0 / rob-01
       :ARG0 (c28-1 / you)
       :mod (c28-2 / hmm
                   :mode expressive)
       :mode expressive)

# ::snt Hi I love you
# ::tokens ["Hi", "I", "love", "you"]
# ::lemmas ["hi", "i", "love", "you"]
(c29-1 / multi-sentence
       :snt1 (c29-2 / hi)
       :snt2 (c29-3 / love-01
                    :ARG0 (c29-4 / i)
                    :ARG1 (c29-0 / you)))

# ::snt Damn I wish I could get a follow hey boo
# ::tokens ["Damn", "I", "wish", "I", "could", "get", "a", "follow", "hey", "boo"]
# ::lemmas ["damn", "i", "wish", "i", "could", "get", "a", "follow", "hey", "boo"]
(c30-1 / multi-sentence
       :snt1 (c30-4 / wish-01
                    :ARG0 (c30-5 / i)
                    :ARG1 (c30-3 / possible-01
                                 :ARG1 (c30-0 / follow-02
                                              :ARG1 c30-5))
                    :mod (c30-6 / damn
                                :mode expressive))
       :snt2 (c30-2 / hey
                    :mode expressive))

# ::snt Hi rob !! Dream is absolutely adorable!
# ::tokens ["Hi", "rob", "!", "!", "Dream", "is", "absolutely", "adorable", "!"]
# ::lemmas ["hi", "rob", "!", "!", "dream", "be", "absolutely", "adorable", "!"]
(c31-1 / multi-sentence
       :snt1 (c31-2 / say-01
                    :ARG1 (c31-4 / hi)
                    :ARG2 (c31-5 / person
                                 :name (c31-0 / name
                                              :op1 " rob")))
       :snt2 (c31-7 / cute
                    :domain (c31-3 / person
                                   :name (c31-6 / name
                                                :op1 "Dream"))
                    :degree (c31-8 / absolute)))

# ::snt Oh hey Robbie
# ::tokens ["Oh", "hey", "Robbie"]
# ::lemmas ["oh", "hey", "Robbie"]
(c32-3 / say-01
       :ARG1 (c32-1 / hey
                    :mode expressive)
       :ARG2 (c32-2 / person
                    :name (c32-0 / name
                                 :op1 "Robbie")))

# ::snt IMO the sexiest Kardashian. Rob's still got it.
# ::tokens ["IMO", "the", "sexiest", "Kardashian", ".", "Rob", "'s", "still", "got", "it", "."]
# ::lemmas ["imo", "the", "sexiest", "Kardashian", ".", "Rob", "'s", "still", "get", "it", "."]
(c33-2 / multi-sentence
       :snt1 (c33-6 / have-degree-91
                    :ARG1 (c33-7 / person
                                 :name (c33-1 / name
                                              :op1 "Kardashian"))
                    :ARG2 (c33-3 / sex-01
                                 :ARG0 c33-7)
                    :ARG3 (c33-8 / most)
                    :ARG5 (c33-10 / i))
       :snt2 (c33-11 / get-02
                     :ARG0 (c33-4 / person
                                  :name (c33-9 / name
                                               :op1 "Rob"))
                     :ARG1 (c33-5 / it)
                     :mod (c33-0 / still)))

# ::snt Oh hey Robertttttt
# ::tokens ["Oh", "hey", "Robertttttt"]
# ::lemmas ["oh", "hey", "Robertttttt"]
(c34-3 / say-01
       :ARG1 (c34-1 / hey
                    :mode expressive)
       :ARG2 (c34-2 / person
                    :name (c34-0 / name
                                 :op1 "Robertttttt")))

# ::snt Check our dm
# ::tokens ["Check", "our", "dm"]
# ::lemmas ["check", "our", "dm"]
(c35-3 / check-01
       :ARG0 (c35-0 / you)
       :ARG1 (c35-2 / product
                    :name (c35-1 / name
                                 :op1 "Dm")
                    :poss (c35-4 / we))
       :mode imperative)

# ::snt Heyyyyy
# ::tokens ["Heyyyyy"]
# ::lemmas ["Heyyyyy"]
(c36-0 / hey
       :mode expressive)

# ::snt I have literally been after that fine piece of ass for over years. WTF Rob.
# ::tokens ["I", "have", "literally", "been", "after", "that", "fine", "piece", "of", "ass", "for", "over", "years", ".", "WTF", "Rob", "."]
# ::lemmas ["i", "have", "literally", "be", "after", "that", "fine", "piece", "of", "ass", "for", "over", "years", ".", "WTF", "Rob", "."]
(c37-3 / multi-sentence
       :snt1 (c37-12 / after
                     :op1 (c37-7 / piece
                                 :consist-of (c37-11 / ass)
                                 :ARG1-of (c37-0 / fine-03)
                                 :mod (c37-10 / that))
                     :mod (c37-8 / literal)
                     :duration (c37-1 / over
                                      :op1 (c37-14 / temporal-quantity
                                                   :unit (c37-2 / year)
                                                   :quant 1)))
       :snt2 (c37-5 / say-01
                    :ARG0 (c37-13 / i)
                    :ARG1 (c37-9 / fuck
                                 :mode expressive)
                    :ARG2 (c37-4 / person
                                 :name (c37-6 / name
                                              :op1 "Rob"))))

# ::snt yooo rob where you been you my fav kardashian hope you doing good bro
# ::tokens ["yooo", "rob", "where", "you", "been", "you", "my", "fav", "kardashian", "hope", "you", "doing", "good", "bro"]
# ::lemmas ["yooo", "rob", "where", "you", "be", "you", "my", "fav", "kardashian", "hope", "you", "do", "good", "bro"]
(c38-3 / multi-sentence
       :snt1 (c38-5 / say-01
                    :ARG0 (c38-11 / i)
                    :ARG1 (c38-7 / rob-01
                                 :ARG0 (c38-2 / you)
                                 :location (c38-12 / amr-unknown)
                                 :mode imperative)
                    :ARG2 c38-2
                    :mod (c38-13 / yoo
                                 :mode expressive)
                    :snt2-of c38-3)
       :ARG0 (c38-6 / i)
       :ARG1 (c38-8 / hope-01
                    :ARG0 c38-6
                    :ARG1 (c38-14 / do-02
                                  :ARG0 (c38-0 / you)
                                  :ARG1 (c38-4 / good-02)))
       :ARG2 (c38-9 / person
                    :ARG0-of (c38-10 / have-rel-role-91
                                     :ARG1 c38-6
                                     :ARG2 (c38-1 / bro))))

# ::snt Hey Bobbi I sent you a dm
# ::tokens ["Hey", "Bobbi", "I", "sent", "you", "a", "dm"]
# ::lemmas ["hey", "Bobbi", "i", "send", "you", "a", "dm"]
(c39-2 / say-01
       :ARG0 (c39-5 / i)
       :ARG1 (c39-0 / send-01
                    :ARG0 c39-5
                    :ARG1 (c39-6 / dm)
                    :ARG2 (c39-4 / person
                                 :name (c39-1 / name
                                              :op1 "Bobbi"))
                    :mod (c39-3 / hey
                                :mode expressive))
       :ARG2 c39-4)

# ::snt Rob did the black onesie come back in yet, I only been waiting since Christmas
# ::tokens ["Rob", "did", "the", "black", "onesie", "come", "back", "in", "yet", ",", "I", "only", "been", "waiting", "since", "Christmas"]
# ::lemmas ["Rob", "do", "the", "black", "onesie", "come", "back", "in", "yet", ",", "i", "only", "been", "wait", "since", "Christmas"]
(c40-11 / and
        :op1 (c40-8 / come-01
                    :ARG1 (c40-0 / one
                                 :ARG1-of (c40-2 / black-05))
                    :direction (c40-7 / back)
                    :time (c40-3 / yet))
        :op2 (c40-9 / wait-01
                    :ARG1 (c40-10 / i)
                    :mod (c40-1 / only)
                    :time (c40-6 / since
                                 :op1 (c40-4 / festival
                                             :name (c40-5 / name
                                                          :op1 "Christmas")))))

# ::snt Follow me, foo!
# ::tokens ["Follow", "me", ",", "foo", "!"]
# ::lemmas ["follow", "i", ",", "foo", "!"]
(c41-2 / say-01
       :ARG0 (c41-4 / i)
       :ARG1 (c41-0 / follow-02
                    :ARG0 (c41-3 / person
                                 :name (c41-1 / name
                                              :op1 " foo"))
                    :ARG1 c41-4
                    :mode imperative)
       :ARG2 c41-3)

# ::snt Hey Robert
# ::tokens ["Hey", "Robert"]
# ::lemmas ["hey", "Robert"]
(c42-3 / say-01
       :ARG1 (c42-1 / hey)
       :ARG2 (c42-2 / person
                    :name (c42-0 / name
                                 :op1 "Robert")))

# ::snt He just an every day dude like the rest
# ::tokens ["He", "just", "an", "every", "day", "dude", "like", "the", "rest"]
# ::lemmas ["he", "just", "an", "every", "day", "dude", "like", "the", "rest"]
(c43-6 / dude
       :domain (c43-1 / he)
       :frequency (c43-0 / rate-entity-91
                         :ARG3 (c43-5 / temporal-quantity
                                      :unit (c43-3 / day)
                                      :quant 1))
       :mod (c43-4 / just)
       :ARG1-of (c43-7 / resemble-01
                       :ARG2 (c43-2 / rest)))

# ::snt Dogs she your big sis!
# ::tokens ["Dogs", "she", "your", "big", "sis", "!"]
# ::lemmas ["Dogs", "she", "your", "big", "sis", "!"]
(c44-2 / say-01
       :ARG0 (c44-3 / i)
       :ARG1 (c44-0 / sis
                    :mod (c44-1 / big)
                    :domain (c44-4 / she
                                   :ARG2-of c44-2))
       :mode expressive)

# ::snt Heyyy rob!!!! I loved you ever since season !! Follow back?
# ::tokens ["Heyyy", "rob", "!", "!", "!", "!", "I", "loved", "you", "ever", "since", "season", "!", "!", "Follow", "back", "?"]
# ::lemmas ["Heyyy", "rob", "!", "!", "!", "!", "i", "love", "you", "ever", "since", "season", "!", "!", "follow", "back", "?"]
(c45-4 / multi-sentence
       :snt1 (c45-6 / say-01
                    :ARG0 (c45-12 / i)
                    :ARG1 (c45-9 / hey
                                 :mode expressive)
                    :ARG2 (c45-10 / person
                                  :name (c45-5 / name
                                               :op1 " rob")))
       :snt2 (c45-11 / love-01
                     :ARG0 (c45-7 / i)
                     :ARG1 (c45-3 / you)
                     :time (c45-0 / since
                                  :op1 (c45-15 / season)
                                  :mod (c45-8 / ever)))
       :snt3 (c45-1 / follow-02
                    :polarity (c45-13 / amr-unknown)
                    :ARG0 (c45-14 / you)
                    :direction (c45-2 / back)))

# ::snt This is such a cute interaction
# ::tokens ["This", "is", "such", "a", "cute", "interaction"]
# ::lemmas ["this", "be", "such", "a", "cute", "interaction"]
(c46-2 / interact-01
       :mod (c46-0 / cute
                   :degree (c46-3 / such))
       :domain (c46-1 / this))

# ::snt Miss you Bob!! Feels like forever since Ive seen you about! Hope youre well
# ::tokens ["Miss", "you", "Bob", "!", "!", "Feels", "like", "forever", "since", "I", "ve", "seen", "you", "about", "!", "Hope", "you", "re", "well"]
# ::lemmas ["miss", "you", "Bob", "!", "!", "feel", "like", "forever", "since", "i", "ve", "see", "you", "about", "!", "hope", "you", "re", "well"]
(c47-4 / multi-sentence
       :snt1 (c47-7 / miss-01
                    :ARG0 (c47-12 / i)
                    :ARG1 (c47-8 / person
                                 :name (c47-3 / name
                                              :op1 "Bob")))
       :snt2 (c47-0 / feel-05
                    :ARG1 (c47-9 / forever)
                    :time (c47-5 / since
                                 :op1 (c47-1 / see-01
                                             :ARG0 (c47-6 / i)
                                             :ARG1 (c47-2 / you))))
       :snt3 (c47-10 / hope-01
                     :ARG0 (c47-14 / i)
                     :ARG1 (c47-11 / well-09
                                   :ARG1 (c47-13 / you))))

# ::snt hi rob !!!
# ::tokens ["hi", "rob", "!", "!", "!"]
# ::lemmas ["hi", "rob", "!", "!", "!"]
(c48-0 / rob-01
       :mod (c48-1 / hi)
       :mode expressive)

# ::snt love you handsome
# ::tokens ["love", "you", "handsome"]
# ::lemmas ["love", "you", "handsome"]
(c49-2 / love-01
       :ARG0 (c49-3 / i)
       :ARG1 (c49-1 / you)
       :mod (c49-0 / handsome))

# ::snt Heyyyy
# ::tokens ["Heyyyy"]
# ::lemmas ["Heyyyy"]
(c50-0 / hey
       :mode expressive)
