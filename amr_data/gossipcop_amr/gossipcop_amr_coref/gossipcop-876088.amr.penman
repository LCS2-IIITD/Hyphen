# ::snt Yeah!!!
# ::tokens ["Yeah", "!", "!", "!"]
# ::lemmas ["yeah", "!", "!", "!"]
(c1-0 / yeah
      :mode expressive)

# ::snt - Thabks E, for picking my baby as number one! You have brought honor to us all!
# ::tokens ["-", "Thabks", "E", ",", "for", "picking", "my", "baby", "as", "number", "one", "!", "You", "have", "brought", "honor", "to", "us", "all", "!"]
# ::lemmas ["-", "Thabks", "e", ",", "for", "pick", "my", "baby", "as", "number", "one", "!", "you", "have", "bring", "honor", "to", "we", "all", "!"]
(c2-4 / multi-sentence
      :snt1 (c2-13 / thank-01
                   :ARG1 (c2-8 / person
                               :name (c2-3 / name
                                           :op1 "Thabks"
                                           :op2 "E"))
                   :ARG2 (c2-5 / pick-01
                               :ARG0 c2-8
                               :ARG1 (c2-14 / person
                                            :ARG0-of (c2-7 / have-rel-role-91
                                                           :ARG1 (c2-12 / i)
                                                           :ARG2 (c2-1 / baby)))
                               :ARG3 (c2-0 / ordinal-entity
                                           :value 1)))
      :snt2 (c2-9 / bring-01
                  :ARG0 (c2-2 / you)
                  :ARG1 (c2-11 / honor-01)
                  :ARG2 (c2-10 / we
                               :mod (c2-6 / all))))

# ::snt I love Mushu, but Draco should be in the th or th place.
# ::tokens ["I", "love", "Mushu", ",", "but", "Draco", "should", "be", "in", "the", "th", "or", "th", "place", "."]
# ::lemmas ["i", "love", "Mushu", ",", "but", "Draco", "should", "be", "in", "the", "th", "or", "th", "place", "."]
(c3-8 / contrast-01
      :ARG1 (c3-7 / love-01
                  :ARG0 (c3-10 / i)
                  :ARG1 (c3-6 / person
                              :name (c3-2 / name
                                          :op1 "Mushu")))
      :ARG2 (c3-4 / recommend-01
                  :ARG1 (c3-1 / be-located-at-91
                              :ARG1 (c3-3 / person
                                          :name (c3-5 / name
                                                      :op1 "Draco"))
                              :ARG2 (c3-11 / place
                                           :mod (c3-0 / or
                                                      :op1 (c3-9 / th
                                                                 :op2-of c3-0))))))

# ::snt Ha! You will get no argument from me on this!
# ::tokens ["Ha", "!", "You", "will", "get", "no", "argument", "from", "me", "on", "this", "!"]
# ::lemmas ["ha", "!", "you", "will", "get", "no", "argument", "from", "i", "on", "this", "!"]
(c4-1 / argue-02
      :ARG0 (c4-0 / you)
      :ARG1 (c4-3 / i)
      :ARG2 (c4-4 / this)
      :mod (c4-2 / ha
                 :mode expressive)
      :polarity -)

# ::snt I really curious if anyone has photo graphed a leprecon lately. I am certain one ran by in the knights realm. Catch that. Laugh my ads off.
# ::tokens ["I", "really", "curious", "if", "anyone", "has", "photo", "graphed", "a", "leprecon", "lately", ".", "I", "am", "certain", "one", "ran", "by", "in", "the", "knights", "realm", ".", "Catch", "that", ".", "Laugh", "my", "ads", "off", "."]
# ::lemmas ["i", "really", "curious", "if", "anyone", "have", "photo", "graph", "a", "leprecon", "lately", ".", "i", "be", "certain", "one", "run", "by", "in", "the", "knight", "realm", ".", "catch", "that", ".", "laugh", "my", "ad", "off", "."]
(c5-15 / multi-sentence
       :snt1 (c5-18 / curious-01
                    :ARG0 (c5-21 / possible-01
                                 :ARG1 (c5-16 / photograph-01
                                              :ARG0 (c5-10 / anyone)
                                              :ARG1 (c5-1 / leprecon)
                                              :time (c5-11 / lately)))
                    :ARG1 (c5-22 / i)
                    :degree (c5-20 / really))
       :snt2 (c5-6 / know-01
                   :ARG0 (c5-5 / i)
                   :ARG1 (c5-2 / run-01
                               :ARG0 (c5-3 / one
                                           :ARG1-of (c5-12 / include-91
                                                           :ARG2 (c5-17 / realm
                                                                        :poss (c5-19 / knight))))))
       :snt3 (c5-13 / catch-02
                    :ARG0 (c5-4 / you)
                    :ARG1 (c5-9 / that)
                    :mode imperative)
       :snt4 (c5-7 / laugh-01
                   :ARG0 c5-4
                   :ARG1 (c5-8 / advertise-01
                               :ARG0 (c5-0 / i))
                   :manner (c5-14 / off)
                   :mode imperative))

# ::snt Need Logo..? Vector file, Social Media kit, Stationary design. Redesign, Graphics .Contact-
# ::tokens ["Need", "Logo", "..", "?", "Vector", "file", ",", "Social", "Media", "kit", ",", "Stationary", "design", ".", "Redesign", ",", "Graphics", ".Contact-"]
# ::lemmas ["Need", "Logo", "..", "?", "vector", "file", ",", "Social", "Media", "kit", ",", "stationary", "design", ".", "Redesign", ",", "Graphics", ".contact-"]
(c6-3 / multi-sentence
      :snt1 (c6-2 / need-01
                  :ARG1 (c6-6 / logo)
                  :polarity (c6-11 / amr-unknown))
      :snt2 (c6-10 / and
                   :op1 (c6-0 / file
                              :name (c6-5 / name
                                          :op1 "Vector"))
                   :op2 (c6-7 / kit
                              :mod (c6-4 / social-03))
                   :op3 (c6-13 / design-01
                               :ARG1 (c6-1 / stationary)))
      :snt3 (c6-9 / company
                  :name (c6-8 / name
                              :op1 "Redesign"))
      :snt4 (c6-12 / graphics))

# ::snt When life hands you hockey pucks, make Spam.
# ::tokens ["When", "life", "hands", "you", "hockey", "pucks", ",", "make", "Spam", "."]
# ::lemmas ["when", "life", "hand", "you", "hockey", "puck", ",", "make", "Spam", "."]
(c7-2 / make-01
      :ARG0 (c7-1 / you
                  :mod (c7-5 / puck
                             :mod (c7-4 / hockey)))
      :ARG1 (c7-3 / shit
                  :ARG1-of (c7-0 / spin-03))
      :condition (c7-7 / hand-01
                       :ARG0 (c7-6 / life)
                       :ARG1 c7-5
                       :ARG2 c7-1)
      :mode imperative)

# ::snt Sounds like we missed out!
# ::tokens ["Sounds", "like", "we", "missed", "out", "!"]
# ::lemmas ["sound", "like", "we", "miss", "out", "!"]
(c8-2 / sound-01
      :ARG2 (c8-1 / miss-out-03
                  :ARG0 (c8-0 / we)))

# ::snt I would pay to hear those outtakes.
# ::tokens ["I", "would", "pay", "to", "hear", "those", "outtakes", "."]
# ::lemmas ["i", "would", "pay", "to", "hear", "those", "outtake", "."]
(c9-1 / pay-01
      :ARG0 (c9-3 / i)
      :ARG3 (c9-0 / hear-01
                  :ARG0 c9-3
                  :ARG1 (c9-2 / thing
                              :ARG1-of (c9-4 / take-01)
                              :mod (c9-5 / that))))

# ::snt I loved working with Don Rickles. We got on so well and laughed so much... We ad libbed a ton of stuff, and they didn't use a word!
# ::tokens ["I", "loved", "working", "with", "Don", "Rickles", ".", "We", "got", "on", "so", "well", "and", "laughed", "so", "much", "...", "We", "ad", "libbed", "a", "ton", "of", "stuff", ",", "and", "they", "did", "n't", "use", "a", "word", "!"]
# ::lemmas ["i", "love", "work", "with", "Don", "Rickles", ".", "we", "get", "on", "so", "well", "and", "laugh", "so", "much", "...", "we", "ad", "libbe", "a", "ton", "of", "stuff", ",", "and", "they", "do", "not", "use", "a", "word", "!"]
(c10-14 / multi-sentence
        :snt1 (c10-2 / love-01
                     :ARG0 (c10-21 / i)
                     :ARG1 (c10-20 / work-01
                                   :ARG0 c10-21
                                   :ARG3 (c10-19 / person
                                                 :name (c10-18 / name
                                                               :op1 "Don"
                                                               :op2 "Rickles"))))
        :snt2 (c10-11 / and
                      :op1 (c10-12 / get-on-20
                                   :ARG1 (c10-3 / we)
                                   :ARG1-of (c10-17 / well-09
                                                    :degree (c10-1 / so)))
                      :op2 (c10-13 / laugh-01
                                   :ARG0 c10-3
                                   :ARG1-of (c10-6 / have-quant-91
                                                   :ARG2 (c10-7 / much)
                                                   :ARG3 (c10-5 / so)))
                      :snt3 (c10-9 / and
                                   :op1 (c10-8 / advertise-01
                                               :ARG0 c10-3
                                               :ARG1 (c10-4 / stuff
                                                            :quant (c10-10 / ton)))
                                   :op2 (c10-16 / use-01
                                                :ARG0 (c10-15 / they)
                                                :ARG1 (c10-0 / word)
                                                :polarity -))))

# ::snt Surprised no mention of Pete's Dragon or is that too old..
# ::tokens ["Surprised", "no", "mention", "of", "Pete", "'s", "Dragon", "or", "is", "that", "too", "old", ".."]
# ::lemmas ["surprise", "no", "mention", "of", "Pete", "'s", "Dragon", "or", "be", "that", "too", "old", ".."]
(c11-4 / surprise-01
       :ARG0 (c11-3 / mention-01
                    :ARG1 (c11-9 / dragon
                                 :poss (c11-7 / person
                                              :name (c11-2 / name
                                                           :op1 "Petersburg")))
                    :ARG1-of (c11-0 / or
                                    :op2 (c11-6 / have-degree-91
                                                :ARG1 c11-9
                                                :ARG2 (c11-1 / old)
                                                :ARG3 (c11-8 / too)
                                                :polarity (c11-5 / amr-unknown)))
                    :polarity -))
