# ::snt Just joking kinnies
# ::tokens ["Just", "joking", "kinnies"]
# ::lemmas ["just", "joke", "kinnie"]
(c1-1 / joke-01
      :ARG0 (c1-2 / kinnie)
      :mod (c1-0 / just))

# ::snt That's mean babe!
# ::tokens ["That", "'s", "mean", "babe", "!"]
# ::lemmas ["that", "be", "mean", "babe", "!"]
(c2-2 / say-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-1 / mean-04
                  :ARG0 (c2-4 / that))
      :ARG2 (c2-0 / babe))

# ::snt Dude no one cares. Don't report shit like this again
# ::tokens ["Dude", "no", "one", "cares", ".", "Do", "n't", "report", "shit", "like", "this", "again"]
# ::lemmas ["dude", "no", "one", "care", ".", "do", "not", "report", "shit", "like", "this", "again"]
(c3-1 / multi-sentence
      :snt1 (c3-5 / care-01
                  :ARG0 (c3-7 / dude))
      :snt2 (c3-3 / report-01
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-2 / shit
                              :ARG1-of (c3-8 / resemble-01
                                             :ARG2 (c3-6 / this)))
                  :mod (c3-4 / again)
                  :mode imperative
                  :polarity -))

# ::snt That's sad. Don't date him if you can't trust him
# ::tokens ["That", "'s", "sad", ".", "Do", "n't", "date", "him", "if", "you", "ca", "n't", "trust", "him"]
# ::lemmas ["that", "be", "sad", ".", "do", "not", "date", "he", "if", "you", "can", "not", "trust", "he"]
(c4-1 / multi-sentence
      :snt1 (c4-2 / sad-02
                  :ARG0 (c4-6 / that))
      :snt2 (c4-7 / date-02
                  :ARG0 (c4-0 / you)
                  :ARG1 (c4-3 / he)
                  :condition (c4-4 / possible-01
                                   :ARG1 (c4-8 / trust-02
                                               :ARG0 c4-0
                                               :ARG1 (c4-5 / he))
                                   :polarity -)
                  :mode imperative
                  :polarity -))

# ::snt I don't believe it.
# ::tokens ["I", "do", "n't", "believe", "it", "."]
# ::lemmas ["i", "do", "not", "believe", "it", "."]
(c5-1 / believe-01
      :ARG0 (c5-2 / i)
      :ARG1 (c5-0 / it)
      :polarity -)

# ::snt I don't blame her
# ::tokens ["I", "do", "n't", "blame", "her"]
# ::lemmas ["i", "do", "not", "blame", "she"]
(c6-0 / blame-01
      :ARG0 (c6-1 / i)
      :ARG1 (c6-2 / she)
      :polarity -)

# ::snt "She's From Cali" "
# ::tokens ["\"", "She", "'s", "From", "Cali", "\"", "\""]
# ::lemmas ["\"", "she", "be", "from", "Cali", "\"", "\""]
(c7-1 / be-from-91
      :ARG1 (c7-3 / she)
      :ARG2 (c7-0 / city
                  :name (c7-2 / name
                              :op1 "Cali")))

# ::snt Why not, he cheated in baseball.she is next
# ::tokens ["Why", "not", ",", "he", "cheated", "in", "baseball.she", "is", "next"]
# ::lemmas ["why", "not", ",", "he", "cheat", "in", "baseball.she", "be", "next"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / cause-01
                  :ARG0 (c8-6 / amr-unknown)
                  :polarity -)
      :snt2 (c8-7 / cheat-03
                  :ARG0 (c8-4 / he)
                  :ARG1 (c8-0 / baseball))
      :snt3 (c8-2 / next
                  :domain (c8-3 / she)))

# ::snt Oh boy!
# ::tokens ["Oh", "boy", "!"]
# ::lemmas ["oh", "boy", "!"]
(c9-1 / boy
      :mod (c9-0 / oh
                 :mode expressive))

# ::snt You just don't say No to J-Lo.
# ::tokens ["You", "just", "do", "n't", "say", "No", "to", "J", "-", "Lo", "."]
# ::lemmas ["you", "just", "do", "not", "say", "no", "to", "J", "-", "Lo", "."]
(c10-2 / say-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-1 / no)
       :ARG2 (c10-4 / person
                    :name (c10-3 / name
                                 :op1 "J-Lo"))
       :mod (c10-5 / just)
       :polarity -)
