# ::snt Good for her. F him.
# ::tokens ["Good", "for", "her", ".", "F", "him", "."]
# ::lemmas ["good", "for", "she", ".", "F", "he", "."]
(c1-2 / multi-sentence
      :snt1 (c1-5 / good-04
                  :ARG2 (c1-3 / she))
      :snt2 (c1-0 / fuck-01
                  :ARG0 (c1-1 / you)
                  :ARG1 (c1-4 / he)
                  :mode imperative))

# ::snt Now this is what's called a 'settlement'
# ::tokens ["Now", "this", "is", "what", "'s", "called", "a", "'", "settlement", "'"]
# ::lemmas ["now", "this", "be", "what", "be", "call", "a", "'", "settlement", "'"]
(c2-1 / call-01
      :ARG1 (c2-3 / this)
      :ARG2 (c2-0 / settle-02)
      :time (c2-2 / now))

# ::snt half of that Fraiser pension?
# ::tokens ["half", "of", "that", "Fraiser", "pension", "?"]
# ::lemmas ["half", "of", "that", "Fraiser", "pension", "?"]
(c3-3 / pension
      :polarity (c3-2 / amr-unknown)
      :ARG1-of (c3-4 / include-91
                     :ARG2 (c3-1 / pension
                                 :mod (c3-5 / that)
                                 :mod (c3-6 / person
                                            :name (c3-0 / name
                                                        :op1 "Fraiser")))
                     :ARG3 "1/2"))
