# ::snt And not a soul will miss her.
# ::tokens ["And", "not", "a", "soul", "will", "miss", "her", "."]
# ::lemmas ["and", "not", "a", "soul", "will", "miss", "she", "."]
(c1-3 / and
      :op2 (c1-2 / miss-01
                 :ARG0 (c1-0 / soul
                             :polarity -)
                 :ARG1 (c1-1 / she)))

# ::snt I would love her on
# ::tokens ["I", "would", "love", "her", "on"]
# ::lemmas ["i", "would", "love", "she", "on"]
(c2-0 / love-01
      :ARG0 (c2-1 / i)
      :ARG1 (c2-2 / she))

# ::snt No.
# ::tokens ["No", "."]
# ::lemmas ["no", "."]
(c3-0 / no)

# ::snt nvm
# ::tokens ["nvm"]
# ::lemmas ["nvm"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "nvm"))

# ::snt Please be in US CBB.
# ::tokens ["Please", "be", "in", "US", "CBB", "."]
# ::lemmas ["please", "be", "in", "US", "CBB", "."]
(c5-1 / be-located-at-91
      :ARG1 (c5-2 / you)
      :ARG2 (c5-5 / country
                  :name (c5-3 / name
                              :op1 "US"))
      :location (c5-0 / facility
                      :name (c5-4 / name
                                  :op1 "CBB"))
      :mode imperative
      :polite +)

# ::snt That might explain the rumours. Stormy will prob be brought on as a "surprise" housemate later.
# ::tokens ["That", "might", "explain", "the", "rumours", ".", "Stormy", "will", "prob", "be", "brought", "on", "as", "a", "\"", "surprise", "\"", "housemate", "later", "."]
# ::lemmas ["that", "might", "explain", "the", "rumour", ".", "Stormy", "will", "prob", "be", "bring", "on", "as", "a", "\"", "surprise", "\"", "housemate", "later", "."]
(c6-1 / multi-sentence
      :snt1 (c6-9 / possible-01
                  :ARG1 (c6-7 / explain-01
                              :ARG0 (c6-10 / that)
                              :ARG1 (c6-5 / rumor-01)))
      :snt2 (c6-2 / probable
                  :domain (c6-0 / bring-on-06
                                :ARG1 (c6-11 / person
                                             :name (c6-3 / name
                                                         :op1 "Stormy"))
                                :prep-as (c6-8 / housemate
                                               :ARG0-of (c6-4 / surprise-01))
                                :time (c6-6 / after))))

# ::snt I am disappointed that this is a UK thing. Of coarse I would watch this. Not very often you get a chance to DVR a train wreck.
# ::tokens ["I", "am", "disappointed", "that", "this", "is", "a", "UK", "thing", ".", "Of", "coarse", "I", "would", "watch", "this", ".", "Not", "very", "often", "you", "get", "a", "chance", "to", "DVR", "a", "train", "wreck", "."]
# ::lemmas ["i", "be", "disappointed", "that", "this", "be", "a", "UK", "thing", ".", "of", "coarse", "i", "would", "watch", "this", ".", "not", "very", "often", "you", "get", "a", "chance", "to", "DVR", "a", "train", "wreck", "."]
(c7-4 / multi-sentence
      :snt1 (c7-15 / disappoint-01
                   :ARG0 (c7-13 / thing
                                :mod (c7-9 / country
                                           :name (c7-3 / name
                                                       :op1 "UK"))
                                :domain (c7-17 / this))
                   :ARG1 (c7-12 / i))
      :snt2 (c7-10 / watch-01
                   :ARG0 (c7-5 / i)
                   :ARG1 (c7-14 / this)
                   :mod (c7-0 / of-course))
      :snt3 (c7-16 / chance-02
                   :ARG0 (c7-2 / you)
                   :ARG1 (c7-6 / VR-00
                               :ARG0 c7-2
                               :ARG1 (c7-8 / wreck-01
                                           :ARG1 (c7-7 / train)))
                   :frequency (c7-1 / often
                                    :degree (c7-11 / very)
                                    :polarity -)))

# ::snt We all have to wait and see
# ::tokens ["We", "all", "have", "to", "wait", "and", "see"]
# ::lemmas ["we", "all", "have", "to", "wait", "and", "see"]
(c8-0 / obligate-01
      :ARG1 (c8-3 / we
                  :mod (c8-5 / all))
      :ARG2 (c8-4 / and
                  :op1 (c8-2 / wait-01
                             :ARG1 c8-3)
                  :op2 (c8-1 / see-01
                             :ARG0 c8-3)))
