# ::snt Good for you!
# ::tokens ["Good", "for", "you", "!"]
# ::lemmas ["good", "for", "you", "!"]
(c1-0 / good-04
      :beneficiary (c1-1 / you))

# ::snt Yes ppl often kisses they best friend,so Thats y I believe Madison when she said her &amp; Brooklyn are jus friends.
# ::tokens ["Yes", "ppl", "often", "kisses", "they", "best", "friend", ",", "so", "That", "s", "y", "I", "believe", "Madison", "when", "she", "said", "her", "&", "amp", ";", "Brooklyn", "are", "jus", "friends", "."]
# ::lemmas ["yes", "ppl", "often", "kiss", "they", "good", "friend", ",", "so", "that", "s", "y", "i", "believe", "Madison", "when", "she", "say", "she", "&", "amp", ";", "Brooklyn", "be", "jus", "friend", "."]
(c2-12 / multi-sentence
       :snt1 (c2-5 / kiss-01
                   :ARG0 (c2-9 / they)
                   :ARG1 (c2-17 / person
                                :ARG0-of (c2-4 / have-rel-role-91
                                               :ARG1 c2-9
                                               :ARG2 (c2-15 / friend
                                                            :ARG1-of (c2-19 / have-degree-91
                                                                            :ARG2 (c2-10 / good-02
                                                                                         :ARG1 c2-15)
                                                                            :ARG3 (c2-6 / most)))))
                   :frequency (c2-2 / often))
       :snt2 (c2-11 / believe-01
                    :ARG0 (c2-20 / i)
                    :ARG1 (c2-13 / person
                                 :name (c2-16 / name
                                              :op1 "Madison"))
                    :time (c2-0 / say-01
                                :ARG0 c2-13
                                :ARG1 (c2-3 / have-rel-role-91
                                            :ARG0 (c2-8 / and
                                                        :op1 c2-13
                                                        :op2 (c2-1 / person
                                                                   :name (c2-14 / name
                                                                                :op1 "Brooklyn")))
                                            :ARG1 (c2-7 / and
                                                        :op1 c2-13
                                                        :op2 c2-1)
                                            :ARG2 (c2-18 / friend)))))

# ::snt Next term plz famiLY
# ::tokens ["Next", "term", "plz", "famiLY"]
# ::lemmas ["next", "term", "plz", "famiLY"]
(c3-2 / have-purpose-91
      :ARG2 (c3-3 / inform-01
                  :ARG1 (c3-0 / you))
      :time (c3-4 / term
                  :mod (c3-1 / next)))

# ::snt ily all! Lunch/dinner soon plz tnx
# ::tokens ["ily", "all", "!", "Lunch", "/", "dinner", "soon", "plz", "tnx"]
# ::lemmas ["you", "all", "!", "Lunch", "/", "dinner", "soon", "plz", "tnx"]
(c4-1 / multi-sentence
      :snt1 (c4-4 / all
                  :mode expressive)
      :snt2 (c4-2 / slash
                  :op1 (c4-3 / lunch-01)
                  :op2 (c4-5 / dinner)
                  :time (c4-0 / soon)
                  :polite +))

# ::snt Miss u ms presidente
# ::tokens ["Miss", "u", "ms", "presidente"]
# ::lemmas ["Miss", "u", "ms", "presidente"]
(c5-0 / miss-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-3 / person
                  :ARG0-of (c5-2 / have-org-role-91
                                 :ARG2 (c5-1 / president))
                  :mod (c5-4 / ms)))

# ::snt thank you, means a lot
# ::tokens ["thank", "you", ",", "means", "a", "lot"]
# ::lemmas ["thank", "you", ",", "mean", "a", "lot"]
(c6-4 / thank-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-0 / you)
      :ARG1-of (c6-1 / mean-01
                     :ARG2 (c6-2 / lot)))

# ::snt I miss u guys
# ::tokens ["I", "miss", "u", "guys"]
# ::lemmas ["i", "miss", "u", "guy"]
(c7-2 / miss-01
      :ARG0 (c7-3 / i)
      :ARG1 (c7-0 / guy
                  :mod (c7-1 / you)))

# ::snt Yeah wonder why people are quick to make assumptions bcs people kiss their best friends all the time
# ::tokens ["Yeah", "wonder", "why", "people", "are", "quick", "to", "make", "assumptions", "bcs", "people", "kiss", "their", "best", "friends", "all", "the", "time"]
# ::lemmas ["yeah", "wonder", "why", "people", "be", "quick", "to", "make", "assumption", "bcs", "people", "kiss", "their", "good", "friend", "all", "the", "time"]
(c8-2 / multi-sentence
      :snt1 (c8-9 / wonder-01
                  :ARG1 (c8-13 / thing
                               :ARG0-of (c8-10 / cause-01
                                               :ARG1 (c8-12 / quick-02
                                                            :ARG1 (c8-4 / assume-02
                                                                        :ARG0 (c8-6 / person)))))
                  :mod (c8-1 / yeah
                             :mode expressive))
      :snt2 (c8-7 / kiss-01
                  :ARG0 (c8-3 / person)
                  :ARG1 (c8-16 / person
                               :ARG0-of (c8-5 / have-rel-role-91
                                              :ARG1 c8-3
                                              :ARG2 (c8-0 / friend
                                                          :ARG1-of (c8-11 / have-degree-91
                                                                          :ARG2 (c8-14 / good-02
                                                                                       :ARG1 c8-0)
                                                                          :ARG3 (c8-8 / most)))))
                  :frequency (c8-17 / time
                                    :mod (c8-15 / all))))

# ::snt Hey,guys,look here! Meeting a hot sexy girl or a rich man on luxurydatingapp.us
# ::tokens ["Hey", ",", "guys", ",", "look", "here", "!", "Meeting", "a", "hot", "sexy", "girl", "or", "a", "rich", "man", "on", "luxurydatingapp.us"]
# ::lemmas ["hey", ",", "guy", ",", "look", "here", "!", "meet", "a", "hot", "sexy", "girl", "or", "a", "rich", "man", "on", "luxurydatingapp.us"]
(c9-3 / multi-sentence
      :snt1 (c9-5 / say-01
                  :ARG1 (c9-9 / look-01
                              :ARG0 (c9-14 / guy)
                              :ARG1 (c9-8 / here)
                              :mod (c9-12 / hey
                                          :mode expressive)
                              :mode imperative)
                  :ARG2 c9-14)
      :snt2 (c9-10 / meet-02
                   :ARG0 (c9-2 / you)
                   :ARG1 (c9-0 / or
                               :op1 (c9-13 / girl
                                           :ARG1-of (c9-7 / hot-03)
                                           :ARG0-of (c9-1 / seduce-01))
                               :op2 (c9-15 / man
                                           :mod (c9-6 / rich)))
                   :medium (c9-11 / product
                                  :name (c9-4 / name
                                              :op1 " luxurydatingapp.us"))
                   :mode expressive))

# ::snt DO BFFS KISS EACH OTHER WHILE SHOPPING???? DONT BS ME
# ::tokens ["DO", "BFFS", "KISS", "EACH", "OTHER", "WHILE", "SHOPPING", "?", "?", "?", "?", "DONT", "BS", "ME"]
# ::lemmas ["DO", "BFFS", "kiss", "each", "other", "while", "shopping", "?", "?", "?", "?", "dont", "BS", "ME"]
(c10-3 / multi-sentence
       :snt1 (c10-6 / kiss-01
                    :polarity (c10-8 / amr-unknown)
                    :ARG0 (c10-1 / butt)
                    :ARG1 (c10-0 / other
                                 :mod (c10-7 / all))
                    :time (c10-4 / shit-01))
       :snt2 (c10-5 / bullshit-01
                    :ARG0 (c10-2 / you)
                    :ARG1 (c10-9 / i)
                    :mode imperative
                    :polarity -))

# ::snt i want brooklyn as my best friend too
# ::tokens ["i", "want", "brooklyn", "as", "my", "best", "friend", "too"]
# ::lemmas ["i", "want", "brooklyn", "as", "my", "good", "friend", "too"]
(c11-5 / want-01
       :ARG0 (c11-7 / i)
       :ARG1 (c11-3 / have-rel-role-91
                    :ARG0 (c11-4 / person
                                 :name (c11-1 / name
                                              :op1 "Brookslyn"))
                    :ARG1 c11-7
                    :ARG2 (c11-0 / friend
                                 :ARG1-of (c11-6 / have-degree-91
                                                 :ARG2 (c11-9 / good-02
                                                              :ARG1 c11-0)
                                                 :ARG3 (c11-2 / most)))
                    :mod (c11-8 / too)))

# ::snt "BFWB" if you know what I mean...
# ::tokens ["\"", "BFWB", "\"", "if", "you", "know", "what", "I", "mean", "..."]
# ::lemmas ["\"", "BFWB", "\"", "if", "you", "know", "what", "i", "mean", "..."]
(c12-3 / have-condition-91
       :ARG1 (c12-0 / fuck-01
                    :mode expressive)
       :ARG2 (c12-4 / know-01
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-6 / thing
                                 :ARG2-of (c12-2 / mean-01
                                                 :ARG0 (c12-5 / i)))))

# ::snt Maybe they are just friends
# ::tokens ["Maybe", "they", "are", "just", "friends"]
# ::lemmas ["maybe", "they", "be", "just", "friend"]
(c13-2 / possible-01
       :ARG1 (c13-1 / have-rel-role-91
                    :ARG0 (c13-4 / they)
                    :ARG2 (c13-0 / friend)
                    :mod (c13-3 / just)))

# ::snt Oh yea bc i kiss my best friend all the time
# ::tokens ["Oh", "yea", "bc", "i", "kiss", "my", "best", "friend", "all", "the", "time"]
# ::lemmas ["oh", "yea", "bc", "i", "kiss", "my", "good", "friend", "all", "the", "time"]
(c14-7 / cause-01
       :ARG0 (c14-6 / kiss-01
                    :ARG0 (c14-9 / i)
                    :ARG1 (c14-5 / person
                                 :ARG0-of (c14-4 / have-rel-role-91
                                                 :ARG1 c14-9
                                                 :ARG2 (c14-0 / friend
                                                              :ARG1-of (c14-8 / have-degree-91
                                                                              :ARG2 (c14-11 / good-02
                                                                                            :ARG1 c14-0)
                                                                              :ARG3 (c14-2 / most)))))
                    :frequency (c14-10 / time
                                       :mod (c14-3 / all)))
       :mod (c14-1 / oh
                   :mode expressive))
