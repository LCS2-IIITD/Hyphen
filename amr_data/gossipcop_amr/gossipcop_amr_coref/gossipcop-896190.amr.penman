# ::snt A job that matches her intellectual prowess.
# ::tokens ["A", "job", "that", "matches", "her", "intellectual", "prowess", "."]
# ::lemmas ["a", "job", "that", "match", "her", "intellectual", "prowess", "."]
(c1-3 / job
      :ARG1-of (c1-0 / match-01
                     :ARG2 (c1-2 / prowess
                                 :mod (c1-4 / intellectual)
                                 :poss (c1-1 / she))))

# ::snt You call this news that anyone would want to know about? I really don't care what she does or want to do!
# ::tokens ["You", "call", "this", "news", "that", "anyone", "would", "want", "to", "know", "about", "?", "I", "really", "do", "n't", "care", "what", "she", "does", "or", "want", "to", "do", "!"]
# ::lemmas ["you", "call", "this", "news", "that", "anyone", "would", "want", "to", "know", "about", "?", "i", "really", "do", "not", "care", "what", "she", "do", "or", "want", "to", "do", "!"]
(c2-9 / multi-sentence
      :snt1 (c2-10 / call-01
                   :polarity (c2-7 / amr-unknown)
                   :ARG0 (c2-3 / you)
                   :ARG1 (c2-13 / news
                                :mod (c2-6 / this)
                                :ARG1-of (c2-4 / know-01
                                               :ARG0 (c2-5 / anyone)
                                               :ARG1-of (c2-15 / want-01
                                                               :ARG0 c2-5))))
      :snt2 (c2-8 / care-01
                  :ARG0 (c2-16 / i)
                  :ARG1 (c2-2 / or
                              :op1 (c2-12 / thing
                                          :ARG1-of (c2-18 / do-02
                                                          :ARG0 (c2-0 / she)))
                              :op2 (c2-17 / thing
                                          :ARG1-of (c2-11 / do-02
                                                          :ARG0 c2-0
                                                          :ARG1-of (c2-1 / want-01
                                                                         :ARG0 c2-0))))
                  :ARG1-of (c2-14 / real-04)
                  :polarity -))

# ::snt I need a break soon.
# ::tokens ["I", "need", "a", "break", "soon", "."]
# ::lemmas ["i", "need", "a", "break", "soon", "."]
(c3-1 / need-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-0 / break-19
                  :ARG1 c3-2)
      :time (c3-3 / soon))

# ::snt fake story
# ::tokens ["fake", "story"]
# ::lemmas ["fake", "story"]
(c4-1 / story
      :ARG1-of (c4-0 / fake-02))

# ::snt Pregnant or mentally exhausted Place your bets !
# ::tokens ["Pregnant", "or", "mentally", "exhausted", "Place", "your", "bets", "!"]
# ::lemmas ["pregnant", "or", "mentally", "exhausted", "Place", "your", "bet", "!"]
(c5-5 / place-01
      :ARG0 (c5-2 / you)
      :ARG1 (c5-1 / bet-01
                  :ARG0 c5-2)
      :condition (c5-0 / or
                       :op1 (c5-6 / impregnate-01
                                  :ARG1 c5-2)
                       :op2 (c5-4 / exhaust-01
                                  :ARG1 c5-2
                                  :manner (c5-3 / mental)))
      :mode imperative)

# ::snt Godspeed
# ::tokens ["Godspeed"]
# ::lemmas ["Godspeed"]
(c6-1 / speed
      :name (c6-0 / name
                  :op1 "Godspeed")
      :mode expressive)

# ::snt Yeah she needs it she works so much
# ::tokens ["Yeah", "she", "needs", "it", "she", "works", "so", "much"]
# ::lemmas ["yeah", "she", "need", "it", "she", "work", "so", "much"]
(c7-2 / need-01
      :ARG0 (c7-4 / she)
      :ARG1 (c7-8 / it)
      :mod (c7-1 / yeah)
      :ARG1-of (c7-6 / cause-01
                     :ARG0 (c7-7 / work-01
                                 :ARG0 c7-4
                                 :ARG1-of (c7-5 / have-quant-91
                                                :ARG2 (c7-3 / much)
                                                :ARG3 (c7-0 / so)))))

# ::snt She works maybe once a year...not sure downtime is what shes missing however she maybe missing brain cells
# ::tokens ["She", "works", "maybe", "once", "a", "year", "...", "not", "sure", "downtime", "is", "what", "she", "s", "missing", "however", "she", "maybe", "missing", "brain", "cells"]
# ::lemmas ["she", "work", "maybe", "once", "a", "year", "...", "not", "sure", "downtime", "be", "what", "she", "s", "miss", "however", "she", "maybe", "miss", "brain", "cell"]
(c8-9 / contrast-01
      :ARG1 (c8-10 / work-01
                   :ARG0 (c8-5 / she)
                   :ARG1-of (c8-8 / possible-01)
                   :frequency (c8-6 / rate-entity-91
                                    :ARG2 (c8-12 / temporal-quantity
                                                 :unit (c8-2 / year)
                                                 :quant 1)
                                    :ARG1 1))
      :ARG2 (c8-0 / sure-02
                  :ARG0 (c8-11 / i)
                  :ARG1 (c8-3 / miss-02
                              :ARG0 c8-5
                              :ARG1 (c8-14 / time
                                           :time-of (c8-15 / sleep-01
                                                           :ARG0 c8-5)
                                           :polarity -))
                  :concession (c8-4 / possible-01
                                    :ARG1 (c8-7 / miss-02
                                                :ARG0 c8-5
                                                :ARG1 (c8-13 / cell
                                                             :part-of (c8-1 / brain))))
                  :polarity -))

# ::snt Just do it, everyone deserves downtime
# ::tokens ["Just", "do", "it", ",", "everyone", "deserves", "downtime"]
# ::lemmas ["just", "do", "it", ",", "everyone", "deserve", "downtime"]
(c9-7 / do-02
      :ARG0 (c9-0 / you)
      :ARG1 (c9-6 / it)
      :mod (c9-5 / just)
      :ARG0-of (c9-3 / cause-01
                     :ARG1 (c9-4 / deserve-01
                                 :ARG0 (c9-1 / everyone)
                                 :ARG1 (c9-2 / downtime)))
      :mode imperative)

# ::snt Please do!
# ::tokens ["Please", "do", "!"]
# ::lemmas ["please", "do", "!"]
(c10-0 / event
       :mod (c10-1 / you)
       :polite +)

# ::snt Go and enjoy yourself, taking a break is healthy!!!
# ::tokens ["Go", "and", "enjoy", "yourself", ",", "taking", "a", "break", "is", "healthy", "!", "!", "!"]
# ::lemmas ["go", "and", "enjoy", "yourself", ",", "take", "a", "break", "be", "healthy", "!", "!", "!"]
(c11-5 / and
       :op1 (c11-6 / go-02
                   :ARG0 (c11-1 / you)
                   :mode imperative)
       :op2 (c11-2 / enjoy-01
                   :ARG0 c11-1
                   :ARG1 c11-1
                   :mode imperative)
       :ARG1-of (c11-4 / cause-01
                       :ARG0 (c11-3 / healthy
                                    :domain (c11-0 / break-19))))

# ::snt Vous avez raison , si javais de l'argent , c'est ce que je ferais aussi !
# ::tokens ["Vous", "avez", "raison", ",", "si", "javais", "de", "l'argent", ",", "c'est", "ce", "que", "je", "ferais", "aussi", "!"]
# ::lemmas ["vous", "avez", "raison", ",", "si", "javais", "de", "l'argent", ",", "c'", "ce", "que", "je", "ferais", "aussi", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-5 / vous
                    :op1 (c12-4 / raison))
       :snt2 (c12-6 / have-concession-91
                    :ARG1 (c12-9 / c'est-cetera
                                 :ARG1 (c12-7 / possible-01
                                              :ARG1 (c12-0 / ferais-01
                                                           :ARG1 (c12-12 / country
                                                                         :name (c12-2 / name
                                                                                      :op1 "Australia"))
                                                           :mode expressive))
                                 :mode expressive)
                    :ARG2 c12-6
                    :ARG1 (c12-10 / c'est-cetera
                                  :ARG1 (c12-3 / possible-01
                                               :ARG1 (c12-8 / ferais-01
                                                            :ARG1 c12-12
                                                            :mode expressive))
                                  :mode expressive)
                    :ARG2 (c12-11 / javais-de)))

# ::snt Hope that farm is in Canada
# ::tokens ["Hope", "that", "farm", "is", "in", "Canada"]
# ::lemmas ["hope", "that", "farm", "be", "in", "Canada"]
(c13-2 / hope-01
       :ARG1 (c13-0 / farm
                    :location (c13-3 / country
                                     :name (c13-1 / name
                                                  :op1 "Canada"))
                    :mod (c13-4 / that)))

# ::snt Do that!
# ::tokens ["Do", "that", "!"]
# ::lemmas ["do", "that", "!"]
(c14-0 / do-02
       :ARG0 (c14-1 / you)
       :ARG1 (c14-2 / that)
       :mode imperative)

# ::snt Smart move. Take some time working on a farm. Good for you.
# ::tokens ["Smart", "move", ".", "Take", "some", "time", "working", "on", "a", "farm", ".", "Good", "for", "you", "."]
# ::lemmas ["smart", "move", ".", "take", "some", "time", "work", "on", "a", "farm", ".", "good", "for", "you", "."]
(c15-3 / multi-sentence
       :snt1 (c15-5 / move-02
                    :ARG1-of (c15-4 / smart-06))
       :snt2 (c15-7 / take-01
                    :ARG0 (c15-2 / you)
                    :ARG1 (c15-10 / time
                                  :quant (c15-0 / some))
                    :ARG2 (c15-6 / work-01
                                 :ARG0 c15-2
                                 :ARG1 (c15-1 / farm)))
       :snt3 (c15-8 / good-04
                    :ARG2 (c15-9 / you)))

# ::snt Why is this news and does anyone care?
# ::tokens ["Why", "is", "this", "news", "and", "does", "anyone", "care", "?"]
# ::lemmas ["why", "be", "this", "news", "and", "do", "anyone", "care", "?"]
(c16-1 / and
       :op1 (c16-0 / news
                   :mod (c16-5 / this)
                   :ARG1-of (c16-2 / cause-01
                                   :ARG0 (c16-4 / amr-unknown)))
       :op2 (c16-7 / care-01
                   :polarity (c16-3 / amr-unknown)
                   :ARG0 (c16-6 / anyone)))

# ::snt Pick me up on your way !!!!!
# ::tokens ["Pick", "me", "up", "on", "your", "way", "!", "!", "!", "!", "!"]
# ::lemmas ["pick", "i", "up", "on", "your", "way", "!", "!", "!", "!", "!"]
(c17-2 / pick-up-04
       :ARG0 (c17-1 / you)
       :ARG1 (c17-3 / i)
       :direction (c17-0 / way
                         :poss c17-1)
       :mode imperative)

# ::snt I must say, itd be nice to have that option. The majority work our asses off to make ends meet.
# ::tokens ["I", "must", "say", ",", "it", "d", "be", "nice", "to", "have", "that", "option", ".", "The", "majority", "work", "our", "asses", "off", "to", "make", "ends", "meet", "."]
# ::lemmas ["i", "must", "say", ",", "it", "d", "be", "nice", "to", "have", "that", "option", ".", "the", "majority", "work", "our", "ass", "off", "to", "make", "end", "meet", "."]
(c18-3 / multi-sentence
       :snt1 (c18-0 / obligate-01
                    :ARG1 (c18-4 / say-01
                                 :ARG0 (c18-11 / i)
                                 :ARG1 (c18-2 / nice-01
                                              :ARG1 (c18-7 / have-03
                                                           :ARG1 (c18-1 / option
                                                                        :mod (c18-12 / that))))))
       :snt2 (c18-10 / work-01
                     :ARG0 (c18-8 / majority)
                     :ARG1 (c18-5 / ass-off
                                  :poss c18-8)
                     :purpose (c18-13 / make-02
                                      :ARG0 c18-8
                                      :ARG1 (c18-9 / meet-01
                                                   :ARG0 (c18-6 / end)))))

# ::snt Ok, good luck
# ::tokens ["Ok", ",", "good", "luck"]
# ::lemmas ["ok", ",", "good", "luck"]
(c19-2 / luck
       :ARG1-of (c19-0 / good-02)
       :ARG1-of (c19-1 / okay-04))

# ::snt Good for her...
# ::tokens ["Good", "for", "her", "..."]
# ::lemmas ["good", "for", "she", "..."]
(c20-0 / good-04
       :ARG2 (c20-1 / she))

# ::snt Thank God.
# ::tokens ["Thank", "God", "."]
# ::lemmas ["thank", "God", "."]
(c21-2 / thank-01
       :ARG1 (c21-1 / person
                    :name (c21-0 / name
                                 :op1 "God")))

# ::snt Bye Felicia
# ::tokens ["Bye", "Felicia"]
# ::lemmas ["Bye", "Felicia"]
(c22-2 / say-01
       :ARG0 (c22-4 / i)
       :ARG1 (c22-0 / bye)
       :ARG2 (c22-3 / person
                    :name (c22-1 / name
                                 :op1 "Felicia")))

# ::snt Raise goats , you dont want to milk them
# ::tokens ["Raise", "goats", ",", "you", "do", "nt", "want", "to", "milk", "them"]
# ::lemmas ["raise", "goat", ",", "you", "do", "not", "want", "to", "milk", "they"]
(c23-2 / raise-03
       :ARG0 (c23-0 / you)
       :ARG1 (c23-4 / goat)
       :concession (c23-3 / want-01
                          :ARG0 c23-0
                          :ARG1 (c23-1 / milk-01
                                       :ARG0 c23-0
                                       :ARG1 c23-4)
                          :polarity -))

# ::snt Which farm? Where?! I'll join you
# ::tokens ["Which", "farm", "?", "Where", "?", "!", "I", "'ll", "join", "you"]
# ::lemmas ["which", "farm", "?", "where", "?", "!", "i", "'ll", "join", "you"]
(c25-3 / multi-sentence
       :snt1 (c25-0 / farm
                    :mod (c25-6 / amr-unknown))
       :snt2 (c25-1 / be-located-at-91
                    :ARG1 (c25-4 / join-01
                                 :ARG0 (c25-5 / i)
                                 :ARG1 (c25-2 / you))
                    :ARG2 (c25-7 / amr-unknown)))

# ::snt Good riddance. Poor goats.
# ::tokens ["Good", "riddance", ".", "Poor", "goats", "."]
# ::lemmas ["good", "riddance", ".", "poor", "goat", "."]
(c26-0 / multi-sentence
       :snt1 (c26-1 / riddance
                    :ARG1-of (c26-4 / good-02))
       :snt2 (c26-3 / goat
                    :mod (c26-2 / poor)))

# ::snt Can you even milk goats? It must be really weird if you are an animal and some human comes up to you and starts milking you.
# ::tokens ["Can", "you", "even", "milk", "goats", "?", "It", "must", "be", "really", "weird", "if", "you", "are", "an", "animal", "and", "some", "human", "comes", "up", "to", "you", "and", "starts", "milking", "you", "."]
# ::lemmas ["can", "you", "even", "milk", "goat", "?", "it", "must", "be", "really", "weird", "if", "you", "be", "an", "animal", "and", "some", "human", "come", "up", "to", "you", "and", "start", "milk", "you", "."]
(c27-11 / multi-sentence
        :snt1 (c27-16 / possible-01
                      :ARG1 (c27-4 / milk-01
                                   :ARG0 (c27-3 / you)
                                   :ARG1 (c27-9 / goat)
                                   :mod (c27-15 / even))
                      :polarity (c27-8 / amr-unknown))
        :snt2 (c27-18 / infer-01
                      :ARG1 (c27-17 / weird
                                    :degree (c27-14 / really)
                                    :domain (c27-7 / and
                                                   :op1 (c27-6 / animal
                                                               :domain (c27-10 / you))
                                                   :op2 (c27-12 / come-01
                                                                :ARG1 (c27-5 / human
                                                                             :mod (c27-0 / some))
                                                                :ARG4 (c27-1 / you))
                                                   :op3 (c27-2 / start-01
                                                               :ARG0 c27-5
                                                               :ARG1 (c27-13 / milk-01
                                                                             :ARG0 c27-5
                                                                             :ARG1 c27-1))))))

# ::snt She does need a break. Shes been in so many movies lately that she is over doing it. She can come back to the spotlight in -5 years. Life is not all about Hollywood.
# ::tokens ["She", "does", "need", "a", "break", ".", "She", "s", "been", "in", "so", "many", "movies", "lately", "that", "she", "is", "over", "doing", "it", ".", "She", "can", "come", "back", "to", "the", "spotlight", "in", "-5", "years", ".", "Life", "is", "not", "all", "about", "Hollywood", "."]
# ::lemmas ["she", "do", "need", "a", "break", ".", "she", "s", "be", "in", "so", "many", "movie", "lately", "that", "she", "be", "over", "do", "it", ".", "she", "can", "come", "back", "to", "the", "spotlight", "in", "-5", "years", ".", "life", "be", "not", "all", "about", "Hollywood", "."]
(c28-17 / multi-sentence
        :snt1 (c28-22 / need-01
                      :ARG0 (c28-0 / she)
                      :ARG1 (c28-16 / break-19
                                    :ARG1 c28-0))
        :snt2 (c28-9 / have-degree-91
                     :ARG1 (c28-2 / be-located-at-91
                                  :ARG1 (c28-6 / she)
                                  :ARG2 (c28-10 / movie)
                                  :time (c28-3 / lately))
                     :ARG2 (c28-21 / many)
                     :ARG3 (c28-5 / so)
                     :ARG6 (c28-7 / overdo-01
                                  :ARG0 c28-6
                                  :ARG1 c28-2))
        :snt3 (c28-24 / possible-01
                      :ARG1 (c28-20 / come-01
                                    :ARG1 (c28-23 / she)
                                    :ARG4 (c28-1 / spotlight)
                                    :direction (c28-4 / back)
                                    :time (c28-12 / after
                                                  :op1 (c28-18 / now)
                                                  :quant (c28-13 / temporal-quantity
                                                                 :unit (c28-8 / year)
                                                                 :quant 5))))
        :snt4 (c28-15 / concern-02
                      :ARG0 (c28-14 / life)
                      :ARG1 (c28-19 / market-sector
                                    :name (c28-25 / name
                                                  :op1 "Hollywood"))
                      :degree (c28-11 / all
                                      :polarity -)))

# ::snt Alrighty then.
# ::tokens ["Alrighty", "then", "."]
# ::lemmas ["Alrighty", "then", "."]
(c29-0 / cause-01
       :ARG1 (c29-1 / all-right))

# ::snt You mean on a milking table.....lmao
# ::tokens ["You", "mean", "on", "a", "milking", "table", ".....", "lmao"]
# ::lemmas ["you", "mean", "on", "a", "milking", "table", ".....", "lmao"]
(c30-1 / mean-01
       :ARG0 (c30-0 / you)
       :location (c30-6 / table
                        :location-of (c30-3 / milk-01))
       :mod (c30-4 / laugh-01
                   :ARG0 (c30-5 / i
                                :part (c30-2 / ass))
                   :manner (c30-7 / loud)
                   :mode expressive))

# ::snt Good riddance
# ::tokens ["Good", "riddance"]
# ::lemmas ["good", "riddance"]
(c31-1 / riddance
       :ARG1-of (c31-0 / good-02))

# ::snt . Original designed and handmade bead embroidery braclets incorporating natural stone,gems,beads, etc.
# ::tokens [".", "Original", "designed", "and", "handmade", "bead", "embroidery", "braclets", "incorporating", "natural", "stone", ",", "gems", ",", "beads", ",", "etc", "."]
# ::lemmas [".", "original", "design", "and", "handmade", "bead", "embroidery", "braclet", "incorporate", "natural", "stone", ",", "gem", ",", "bead", ",", "etc", "."]
(c32-6 / and
       :op1 (c32-11 / thing
                    :ARG1-of (c32-13 / design-01)
                    :ARG1-of (c32-9 / create-01
                                    :ARG3 (c32-1 / braclet
                                                 :ARG0-of (c32-7 / embroider-01
                                                                 :ARG1 (c32-15 / thing
                                                                               :ARG1-of (c32-8 / bead-01)))
                                                 :mod (c32-0 / original))))
       :op2 (c32-10 / thing
                    :ARG1-of c32-9
                    :ARG3 c32-1)
       :ARG0-of (c32-12 / incorporate-02
                        :ARG1 (c32-14 / and
                                      :op1 (c32-4 / stone
                                                  :ARG1-of (c32-2 / natural-03))
                                      :op2 (c32-3 / gem)
                                      :op3 (c32-16 / bead)
                                      :op4 (c32-5 / et-cetera))))

# ::snt Please go
# ::tokens ["Please", "go"]
# ::lemmas ["please", "go"]
(c33-0 / go-02
       :ARG0 (c33-1 / you)
       :mode imperative
       :polite +)

# ::snt 'Acting'... Lol!!!
# ::tokens ["'", "Acting", "'", "...", "Lol", "!", "!", "!"]
# ::lemmas ["'", "act", "'", "...", "Lol", "!", "!", "!"]
(c34-2 / act-01
       :mod (c34-1 / laugh-01
                   :manner (c34-0 / loud)
                   :mode expressive))

# ::snt Bye
# ::tokens ["Bye"]
# ::lemmas ["bye"]
(c35-0 / bye)

# ::snt She is where she is because she " milked" the right fat goat in Hollywood..so please
# ::tokens ["She", "is", "where", "she", "is", "because", "she", "\"", "milked", "\"", "the", "right", "fat", "goat", "in", "Hollywood", "..", "so", "please"]
# ::lemmas ["she", "be", "where", "she", "be", "because", "she", "\"", "milk", "\"", "the", "right", "fat", "goat", "in", "Hollywood", "..", "so", "please"]
(c37-7 / cause-01
       :ARG0 (c37-2 / milk-02
                    :ARG0 (c37-4 / she)
                    :ARG1 (c37-8 / goat
                                 :ARG1-of (c37-0 / fat-03
                                                 :ARG1-of (c37-5 / right-03))
                                 :location (c37-6 / market-sector
                                                  :name (c37-3 / name
                                                               :op1 "Hollywood"))))
       :ARG1 (c37-1 / be-located-at-91
                    :ARG1 c37-4)
       :polite +)

# ::snt Are we supposed to curl up in a corner and ?
# ::tokens ["Are", "we", "supposed", "to", "curl", "up", "in", "a", "corner", "and", "?"]
# ::lemmas ["be", "we", "suppose", "to", "curl", "up", "in", "a", "corner", "and", "?"]
(c38-0 / suppose-02
       :polarity (c38-3 / amr-unknown)
       :ARG1 (c38-2 / we)
       :ARG2 (c38-1 / curl-up-02
                    :ARG1 c38-2
                    :location (c38-4 / corner)))

# ::snt Yeah you do that.
# ::tokens ["Yeah", "you", "do", "that", "."]
# ::lemmas ["yeah", "you", "do", "that", "."]
(c39-1 / do-02
       :ARG0 (c39-2 / you)
       :ARG1 (c39-3 / that)
       :mod (c39-0 / yeah
                   :mode expressive))

# ::snt That's one way to grab a tit without getting into trouble...
# ::tokens ["That", "'s", "one", "way", "to", "grab", "a", "tit", "without", "getting", "into", "trouble", "..."]
# ::lemmas ["that", "be", "one", "way", "to", "grab", "a", "tit", "without", "get", "into", "trouble", "..."]
(c40-0 / manner
       :manner-of (c40-4 / grab-01
                         :ARG1 (c40-1 / tit)
                         :manner (c40-2 / in-trouble-02
                                        :ARG1 c40-1
                                        :polarity -))
       :domain (c40-3 / that)
       :quant 1)

# ::snt Lucky goats
# ::tokens ["Lucky", "goats"]
# ::lemmas ["lucky", "goat"]
(c41-0 / goat
       :mod (c41-1 / lucky))

# ::snt I dont blame her! Get outta there!
# ::tokens ["I", "do", "nt", "blame", "her", "!", "Get", "outta", "there", "!"]
# ::lemmas ["i", "do", "not", "blame", "she", "!", "get", "outta", "there", "!"]
(c42-3 / multi-sentence
       :snt1 (c42-1 / blame-01
                    :ARG0 (c42-5 / i)
                    :ARG1 (c42-4 / she)
                    :polarity -)
       :snt2 (c42-7 / get-05
                    :ARG0 (c42-2 / you)
                    :ARG2 (c42-0 / out-06
                                 :ARG1 c42-2
                                 :ARG2 (c42-6 / there))
                    :mode imperative))

# ::snt How self indulgent. How many wish they could take a break from *truly* terrible lives!?!?
# ::tokens ["How", "self", "indulgent", ".", "How", "many", "wish", "they", "could", "take", "a", "break", "from", "*", "truly", "*", "terrible", "lives", "!", "?", "!", "?"]
# ::lemmas ["how", "self", "indulgent", ".", "how", "many", "wish", "they", "could", "take", "a", "break", "from", "*", "truly", "*", "terrible", "life", "!", "?", "!", "?"]
(c43-2 / multi-sentence
       :snt1 (c43-9 / indulge-01
                    :ARG0 (c43-3 / self)
                    :degree (c43-0 / so))
       :snt2 (c43-7 / wish-01
                    :ARG0 (c43-4 / many
                                 :quant (c43-10 / amr-unknown))
                    :ARG1 (c43-5 / possible-01
                                 :ARG1 (c43-1 / break-16
                                              :ARG0 c43-4
                                              :ARG1 (c43-6 / life
                                                           :ARG1-of (c43-8 / terrible-01
                                                                           :degree (c43-11 / truly)))))))

# ::snt The American Dream.
# ::tokens ["The", "American", "Dream", "."]
# ::lemmas ["The", "American", "Dream", "."]
(c44-0 / dream-01
       :ARG1 (c44-1 / event
                    :name (c44-2 / name
                                 :op1 "American"
                                 :op2 "Dream")))

# ::snt Right on schedule.
# ::tokens ["Right", "on", "schedule", "."]
# ::lemmas ["right", "on", "schedule", "."]
(c45-0 / on-schedule
       :mod (c45-1 / right))

# ::snt I can understand her saying that as an actor I still kept my nine-to-five job because I don't want to lose the person I am to get into acting full fledge I'm grateful to say that I have a Kevin Hart project that's coming out in March but I'm also happy to be a Hospital worker
# ::tokens ["I", "can", "understand", "her", "saying", "that", "as", "an", "actor", "I", "still", "kept", "my", "nine", "-", "to", "-", "five", "job", "because", "I", "do", "n't", "want", "to", "lose", "the", "person", "I", "am", "to", "get", "into", "acting", "full", "fledge", "I", "'m", "grateful", "to", "say", "that", "I", "have", "a", "Kevin", "Hart", "project", "that", "'s", "coming", "out", "in", "March", "but", "I", "'m", "also", "happy", "to", "be", "a", "Hospital", "worker"]
# ::lemmas ["i", "can", "understand", "she", "say", "that", "as", "an", "actor", "i", "still", "keep", "my", "nine", "-", "to", "-", "five", "job", "because", "i", "do", "not", "want", "to", "lose", "the", "person", "i", "be", "to", "get", "into", "act", "full", "fledge", "i", "be", "grateful", "to", "say", "that", "i", "have", "a", "Kevin", "Hart", "project", "that", "be", "come", "out", "in", "March", "but", "i", "be", "also", "happy", "to", "be", "a", "Hospital", "worker"]
(c46-23 / multi-sentence
        :snt1 (c46-31 / possible-01
                      :ARG1 (c46-27 / understand-01
                                    :ARG0 (c46-35 / i)
                                    :ARG1 (c46-0 / say-01
                                                 :ARG0 (c46-7 / she)
                                                 :ARG1 (c46-12 / keep-01
                                                               :ARG0 c46-35
                                                               :ARG1 (c46-14 / job
                                                                             :poss c46-35
                                                                             :mod (c46-22 / between
                                                                                          :op1 (c46-16 / temporal-quantity
                                                                                                       :unit (c46-8 / year)
                                                                                                       :quant 9)
                                                                                          :op2 (c46-26 / temporal-quantity
                                                                                                       :unit (c46-18 / year)
                                                                                                       :quant 5)))
                                                               :mod (c46-6 / still)
                                                               :ARG1-of (c46-25 / cause-01
                                                                                :ARG0 (c46-33 / want-01
                                                                                              :ARG0 c46-35
                                                                                              :ARG1 (c46-1 / lose-02
                                                                                                           :ARG0 c46-35
                                                                                                           :ARG1 (c46-24 / person
                                                                                                                         :ARG0-of (c46-17 / get-05
                                                                                                                                          :ARG1 c46-35
                                                                                                                                          :ARG2 (c46-19 / act-01
                                                                                                                                                        :ARG0 c46-35
                                                                                                                                                        :manner (c46-28 / fledge-01
                                                                                                                                                                        :degree (c46-32 / full))))))
                                                                                              :polarity -))))))
        :snt2 (c46-21 / contrast-01
                      :ARG1 (c46-15 / appreciate-02
                                    :ARG0 (c46-9 / i)
                                    :ARG1 (c46-30 / say-01
                                                  :ARG0 c46-9
                                                  :ARG1 (c46-11 / have-03
                                                                :ARG0 c46-9
                                                                :ARG1 (c46-5 / project
                                                                             :topic (c46-3 / person
                                                                                           :name (c46-29 / name
                                                                                                         :op1 "Kevin"
                                                                                                         :op2 "Hart"))
                                                                             :ARG1-of (c46-4 / come-out-09
                                                                                             :time (c46-36 / date-entity
                                                                                                           :month 3)))))
                                    :ARG2 (c46-34 / happy-01
                                                  :ARG0 (c46-20 / person
                                                                :ARG0-of (c46-2 / work-01
                                                                                :ARG2 (c46-10 / hospital)))
                                                  :ARG1 c46-9
                                                  :mod (c46-13 / also)))))

# ::snt Reason being she opened her big mouth &amp; now shes not getting offers!
# ::tokens ["Reason", "being", "she", "opened", "her", "big", "mouth", "&", "amp", ";", "now", "she", "s", "not", "getting", "offers", "!"]
# ::lemmas ["reason", "be", "she", "open", "her", "big", "mouth", "&", "amp", ";", "now", "she", "s", "not", "get", "offer", "!"]
(c47-7 / cause-01
       :ARG0 (c47-0 / open-01
                    :ARG0 (c47-5 / she
                                 :part (c47-3 / mouth
                                              :mod (c47-2 / big)
                                              :ARG1-of c47-0))
                    :ARG3 (c47-9 / and
                                 :op1 (c47-8 / aspirin)
                                 :op2 (c47-6 / et-cetera)))
       :ARG1 (c47-10 / get-01
                     :ARG0 c47-5
                     :ARG1 (c47-1 / offer-01)
                     :time (c47-4 / now)
                     :polarity -))

# ::snt Good for her.
# ::tokens ["Good", "for", "her", "."]
# ::lemmas ["good", "for", "she", "."]
(c48-0 / good-04
       :ARG2 (c48-1 / she))

# ::snt She will probably find is very relaxing! Goats are sweet!
# ::tokens ["She", "will", "probably", "find", "is", "very", "relaxing", "!", "Goats", "are", "sweet", "!"]
# ::lemmas ["she", "will", "probably", "find", "be", "very", "relaxing", "!", "goat", "be", "sweet", "!"]
(c49-2 / multi-sentence
       :snt1 (c49-0 / find-02
                    :ARG0 (c49-4 / she)
                    :ARG1 (c49-5 / relax-01
                                 :degree (c49-6 / very))
                    :mod (c49-7 / probable))
       :snt2 (c49-1 / sweet-03
                    :ARG1 (c49-8 / animal
                                 :name (c49-3 / name
                                              :op1 "Goat"))))

# ::snt Bye !
# ::tokens ["Bye", "!"]
# ::lemmas ["bye", "!"]
(c50-0 / bye
       :mode expressive)
