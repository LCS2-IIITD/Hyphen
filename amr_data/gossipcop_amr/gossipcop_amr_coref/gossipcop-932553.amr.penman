# ::snt I thought She was a man. To much plastic.. sad As she's So Ugly Danny
# ::tokens ["I", "thought", "She", "was", "a", "man", ".", "To", "much", "plastic", "..", "sad", "As", "she", "'s", "So", "Ugly", "Danny"]
# ::lemmas ["i", "think", "she", "be", "a", "man", ".", "to", "much", "plastic", "..", "sad", "as", "she", "be", "so", "Ugly", "danny"]
(c1-2 / multi-sentence
      :snt1 (c1-11 / think-01
                   :ARG0 (c1-10 / i)
                   :ARG1 (c1-7 / man
                               :domain (c1-4 / she)))
      :snt2 (c1-8 / plastic
                  :degree (c1-12 / much)
                  :ARG0-of (c1-0 / sad-02
                                 :ARG1-of (c1-9 / cause-01
                                                :ARG0 (c1-1 / ugly
                                                            :domain (c1-13 / she)
                                                            :degree (c1-5 / so)
                                                            :topic (c1-3 / person
                                                                         :name (c1-6 / name
                                                                                     :op1 "Danny")))))))

# ::snt So she doesnt have any other friends besides Teresa for maid of honor ??
# ::tokens ["So", "she", "does", "nt", "have", "any", "other", "friends", "besides", "Teresa", "for", "maid", "of", "honor", "?", "?"]
# ::lemmas ["so", "she", "do", "not", "have", "any", "other", "friend", "besides", "Teresa", "for", "maid", "of", "honor", "?", "?"]
(c2-10 / cause-01
       :ARG1 (c2-7 / have-03
                   :ARG0 (c2-4 / she)
                   :ARG1 (c2-8 / person
                               :ARG0-of (c2-11 / have-rel-role-91
                                               :ARG1 c2-4
                                               :ARG2 (c2-0 / friend))
                               :mod (c2-1 / other)
                               :mod (c2-13 / any)
                               :ARG2-of (c2-6 / except-01
                                              :ARG1 (c2-3 / person
                                                          :name (c2-2 / name
                                                                      :op1 "Teresa"))))
                   :purpose (c2-5 / maid
                                  :ARG2-of (c2-9 / honor-01))
                   :polarity -)
       :polarity (c2-12 / amr-unknown))

# ::snt Wont last
# ::tokens ["Wo", "nt", "last"]
# ::lemmas ["will", "nt", "last"]
(c3-1 / last-01
      :ARG0 (c3-0 / you)
      :polarity -
      :mode imperative)
