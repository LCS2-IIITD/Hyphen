# ::snt Has to do with his childhood, learned behavior.
# ::tokens ["Has", "to", "do", "with", "his", "childhood", ",", "learned", "behavior", "."]
# ::lemmas ["have", "to", "do", "with", "his", "childhood", ",", "learn", "behavior", "."]
(c2-1 / have-to-do-with-04
      :ARG1 (c2-5 / and
                  :op1 (c2-3 / childhood
                             :poss (c2-4 / he))
                  :op2 (c2-0 / behave-01
                             :ARG0 c2-4
                             :ARG1-of (c2-2 / learn-01))))

# ::snt Thats the authoritarian way....
# ::tokens ["That", "s", "the", "authoritarian", "way", "...."]
# ::lemmas ["that", "s", "the", "authoritarian", "way", "...."]
(c3-0 / way
      :mod (c3-2 / authoritarian)
      :domain (c3-1 / that))

# ::snt I believe the reason he cant promote peace is because he is racist, sexist, homophobe (lgbt), and he is full of hate.
# ::tokens ["I", "believe", "the", "reason", "he", "ca", "nt", "promote", "peace", "is", "because", "he", "is", "racist", ",", "sexist", ",", "homophobe", "(", "lgbt", ")", ",", "and", "he", "is", "full", "of", "hate", "."]
# ::lemmas ["i", "believe", "the", "reason", "he", "can", "not", "promote", "peace", "be", "because", "he", "be", "racist", ",", "sexist", ",", "homophobe", "(", "lgbt", ")", ",", "and", "he", "be", "full", "of", "hate", "."]
(c4-1 / believe-01
      :ARG0 (c4-12 / i)
      :ARG1 (c4-10 / cause-01
                   :ARG0 (c4-13 / and
                                :op1 (c4-5 / racist)
                                :op2 (c4-4 / sexist)
                                :op3 (c4-7 / homophobe
                                           :ARG1-of (c4-2 / mean-01
                                                          :ARG2 (c4-8 / lesbian)))
                                :op4 (c4-0 / fill-01
                                           :ARG1 (c4-11 / he)
                                           :ARG2 (c4-6 / hate-01)))
                   :ARG1 (c4-9 / possible-01
                               :ARG1 (c4-3 / promote-02
                                           :ARG0 c4-11
                                           :ARG1 (c4-14 / peace))
                               :polarity -)))

# ::snt He is a real A hole however
# ::tokens ["He", "is", "a", "real", "A", "hole", "however"]
# ::lemmas ["he", "be", "a", "real", "a", "hole", "however"]
(c5-3 / contrast-01
      :ARG2 (c5-2 / hole
                  :mod (c5-5 / thing
                             :name (c5-0 / name
                                         :op1 "A"))
                  :ARG1-of (c5-1 / real-04)
                  :domain (c5-4 / he)))

# ::snt He craves novelty. Peace is boring. He can't stand not being the center of attention. He's not a leader.
# ::tokens ["He", "craves", "novelty", ".", "Peace", "is", "boring", ".", "He", "ca", "n't", "stand", "not", "being", "the", "center", "of", "attention", ".", "He", "'s", "not", "a", "leader", "."]
# ::lemmas ["he", "crave", "novelty", ".", "peace", "be", "boring", ".", "he", "can", "not", "stand", "not", "be", "the", "center", "of", "attention", ".", "he", "be", "not", "a", "leader", "."]
(c6-2 / multi-sentence
      :snt1 (c6-9 / craves-01
                  :ARG0 (c6-6 / he)
                  :ARG1 (c6-1 / novelty))
      :snt2 (c6-0 / bore-02
                  :ARG0 (c6-7 / peace))
      :snt3 (c6-3 / possible-01
                  :ARG1 (c6-4 / stand-03
                              :ARG0 (c6-10 / he)
                              :ARG1 (c6-13 / center-01
                                           :ARG1 c6-10
                                           :ARG2 (c6-11 / attend-02
                                                        :ARG1 c6-10)
                                           :polarity -))
                  :polarity -)
      :snt4 (c6-12 / person
                   :ARG0-of (c6-8 / lead-02)
                   :domain (c6-5 / he)
                   :polarity -))

# ::snt bc he's not a real potus
# ::tokens ["bc", "he", "'s", "not", "a", "real", "potus"]
# ::lemmas ["bc", "he", "be", "not", "a", "real", "potus"]
(c7-0 / cause-01
      :ARG0 (c7-2 / potus
                  :ARG1-of (c7-3 / real-04)
                  :domain (c7-1 / he)
                  :polarity -))

# ::snt Yes! WHY???
# ::tokens ["Yes", "!", "WHY", "?", "?", "?"]
# ::lemmas ["yes", "!", "why", "?", "?", "?"]
(c8-1 / yes
      :ARG1-of (c8-0 / cause-01
                     :ARG0 (c8-2 / amr-unknown))
      :mode expressive)

# ::snt i think just that
# ::tokens ["i", "think", "just", "that"]
# ::lemmas ["i", "think", "just", "that"]
(c9-3 / think-01
      :ARG0 (c9-2 / i)
      :ARG1 (c9-0 / that
                  :mod (c9-1 / just)))

# ::snt I need to terminate this friendship
# ::tokens ["I", "need", "to", "terminate", "this", "friendship"]
# ::lemmas ["i", "need", "to", "terminate", "this", "friendship"]
(c11-0 / obligate-01
       :ARG1 (c11-3 / i)
       :ARG2 (c11-2 / terminate-01
                    :ARG0 c11-3
                    :ARG1 (c11-1 / friendship
                                 :mod (c11-4 / this))))

# ::snt I agree
# ::tokens ["I", "agree"]
# ::lemmas ["i", "agree"]
(c13-1 / agree-01
       :ARG0 (c13-0 / i))

# ::snt But so are you
# ::tokens ["But", "so", "are", "you"]
# ::lemmas ["but", "so", "be", "you"]
(c16-0 / contrast-01
       :ARG2 (c16-1 / you
                    :domain (c16-2 / amr-unknown)))

# ::snt Whaat?! Shes gorgeous!
# ::tokens ["Whaat", "?", "!", "She", "s", "gorgeous", "!"]
# ::lemmas ["Whaat", "?", "!", "she", "s", "gorgeous", "!"]
(c17-0 / gorgeous
       :domain (c17-2 / he)
       :mod (c17-1 / whaat
                   :mode expressive))

# ::snt once played she hates me by puddle of mudd and my friend thought it was nirvana
# ::tokens ["once", "played", "she", "hates", "me", "by", "puddle", "of", "mudd", "and", "my", "friend", "thought", "it", "was", "nirvana"]
# ::lemmas ["once", "play", "she", "hate", "i", "by", "puddle", "of", "mudd", "and", "my", "friend", "think", "it", "be", "nirvana"]
(c18-10 / and
        :op1 (c18-5 / hate-01
                    :ARG0 (c18-3 / she)
                    :ARG1 (c18-9 / i)
                    :manner (c18-6 / puddle
                                   :consist-of (c18-1 / mudd))
                    :time (c18-2 / play-01
                                 :ARG0 c18-9))
        :op2 (c18-8 / think-01
                    :ARG0 (c18-11 / person
                                  :ARG0-of (c18-7 / have-rel-role-91
                                                  :ARG1 c18-9
                                                  :ARG2 (c18-0 / friend)))
                    :ARG1 (c18-4 / nirvana
                                 :domain c18-5)))

# ::snt now play My Bloody Valentine
# ::tokens ["now", "play", "My", "Bloody", "Valentine"]
# ::lemmas ["now", "play", "my", "Bloody", "Valentine"]
(c19-4 / play-11
       :ARG0 (c19-0 / you)
       :ARG1 (c19-1 / music
                    :name (c19-2 / name
                                 :op1 "My"
                                 :op2 "Bloody"
                                 :op3 "Valentine's"))
       :time (c19-3 / now)
       :mode imperative)

# ::snt My copy is in the mail. I'm dying to sneak a peek on Spotify before my copy gets here, but I'm holding out to listen to it st on vinyl.
# ::tokens ["My", "copy", "is", "in", "the", "mail", ".", "I", "'m", "dying", "to", "sneak", "a", "peek", "on", "Spotify", "before", "my", "copy", "gets", "here", ",", "but", "I", "'m", "holding", "out", "to", "listen", "to", "it", "st", "on", "vinyl", "."]
# ::lemmas ["my", "copy", "be", "in", "the", "mail", ".", "i", "be", "die", "to", "sneak", "a", "peek", "on", "Spotify", "before", "my", "copy", "get", "here", ",", "but", "i", "be", "hold", "out", "to", "listen", "to", "it", "st", "on", "vinyl", "."]
(c20-1 / multi-sentence
       :snt1 (c20-0 / be-located-at-91
                    :ARG1 (c20-11 / copy-01
                                  :ARG0 (c20-14 / i))
                    :ARG2 (c20-6 / mail))
       :snt2 (c20-7 / have-concession-91
                    :ARG1 (c20-12 / hold-out-09
                                  :ARG1 (c20-4 / i)
                                  :purpose (c20-8 / listen-01
                                                  :ARG0 c20-4
                                                  :ARG1 (c20-17 / copy-01
                                                                :ARG0 c20-4
                                                                :medium (c20-13 / company
                                                                                :name (c20-2 / name
                                                                                             :op1 "Spotify")))))
                    :ARG2 (c20-16 / dying-02
                                  :ARG1 (c20-3 / sneak-01
                                               :ARG0 c20-4
                                               :ARG1 (c20-9 / peek-01
                                                            :ARG0 c20-4
                                                            :ARG1 c20-13)
                                               :time (c20-10 / before
                                                             :op1 (c20-15 / get-05
                                                                          :ARG1 c20-17
                                                                          :ARG2 (c20-5 / here)))))))

# ::snt Lucky horse. Most are sold to killers for meat. But ya know government has to make room for cattle and pipelines.
# ::tokens ["Lucky", "horse", ".", "Most", "are", "sold", "to", "killers", "for", "meat", ".", "But", "ya", "know", "government", "has", "to", "make", "room", "for", "cattle", "and", "pipelines", "."]
# ::lemmas ["lucky", "horse", ".", "most", "be", "sell", "to", "killer", "for", "meat", ".", "but", "ya", "know", "government", "have", "to", "make", "room", "for", "cattle", "and", "pipeline", "."]
(c21-11 / multi-sentence
        :snt1 (c21-6 / horse
                     :mod (c21-1 / lucky))
        :snt2 (c21-0 / sell-01
                     :ARG1 (c21-5 / most)
                     :ARG2 (c21-18 / person
                                   :ARG0-of (c21-7 / kill-01))
                     :purpose (c21-16 / meat))
        :snt3 (c21-14 / contrast-01
                      :ARG2 (c21-15 / know-01
                                    :ARG0 (c21-4 / you)
                                    :ARG1 (c21-3 / obligate-01
                                                 :ARG1 (c21-13 / make-01
                                                               :ARG0 (c21-9 / government-organization
                                                                            :ARG0-of (c21-2 / govern-01))
                                                               :ARG1 (c21-17 / room
                                                                             :purpose (c21-8 / and
                                                                                             :op1 (c21-10 / cattle)
                                                                                             :op2 (c21-12 / pipeline))))))))

# ::snt recuerdo como si fuese sido ayer, y 'all I wanna do' es del ao . Saludos. Y un abrazo a con sus .
# ::tokens ["recuerdo", "como", "si", "fuese", "sido", "ayer", ",", "y", "'", "all", "I", "wanna", "do", "'", "es", "del", "ao", ".", "Saludos", ".", "Y", "un", "abrazo", "a", "con", "sus", "."]
# ::lemmas ["recuerdo", "como", "si", "fuese", "sido", "ayer", ",", "y", "'", "all", "i", "wanna", "do", "'", "es", "del", "ao", ".", "saludo", ".", "Y", "un", "abrazo", "a", "con", "sus", "."]
(c22-1 / multi-sentence
       :snt1 (c22-3 / recuerdo
                    :ARG1-of (c22-4 / cause-01
                                    :ARG0 (c22-5 / want-01
                                                 :ARG0 (c22-7 / i)
                                                 :ARG1 (c22-10 / do-02
                                                               :ARG0 c22-7
                                                               :mod (c22-8 / all)))))
       :snt2 (c22-6 / del-a-o)
       :snt3 (c22-2 / Saludos)
       :snt4 (c22-9 / abrazo-00
                    :ARG0 (c22-0 / you)
                    :ARG1 (c22-11 / con-cros)
                    :polarity -))

# ::snt Cool, very cool and cute!
# ::tokens ["Cool", ",", "very", "cool", "and", "cute", "!"]
# ::lemmas ["cool", ",", "very", "cool", "and", "cute", "!"]
(c23-3 / and
       :op1 (c23-1 / cool-04)
       :op2 (c23-4 / cool-04
                   :degree (c23-0 / very))
       :op3 (c23-2 / cute))

# ::snt I listened to both before picking Sheryl Crow's, 'Shoulders' was way to dang slow lol
# ::tokens ["I", "listened", "to", "both", "before", "picking", "Sheryl", "Crow", "'s", ",", "'", "Shoulders", "'", "was", "way", "to", "dang", "slow", "lol"]
# ::lemmas ["i", "listen", "to", "both", "before", "pick", "Sheryl", "Crow", "'s", ",", "'", "shoulder", "'", "be", "way", "to", "dang", "slow", "lol"]
(c25-6 / listen-01
       :ARG0 (c25-10 / i)
       :ARG1 (c25-0 / both)
       :time (c25-4 / before
                    :op1 (c25-5 / pick-01
                                :ARG0 c25-10
                                :ARG1 (c25-11 / thing
                                              :source (c25-2 / person
                                                             :name (c25-1 / name
                                                                          :op1 "Sheryl"
                                                                          :op2 "Crow")))))
       :ARG0-of (c25-8 / cause-01
                       :ARG1 (c25-3 / slow-04
                                    :ARG1 c25-11
                                    :mod (c25-12 / dang)
                                    :degree (c25-9 / way)
                                    :ARG2-of (c25-13 / laugh-01
                                                     :ARG0 c25-10
                                                     :manner (c25-7 / loud)
                                                     :mode expressive))))

# ::snt She's beautiful.I'm thinking it's "Morning After" and she's worried the Poseidon is going to sink.The replay of Tyler singing "The Sun'll Come Out, Tomorrow" for her is fading in her head bc that "succubus" Angela. It's going to get messy.
# ::tokens ["She", "'s", "beautiful", ".", "I'm", "thinking", "it", "'s", "\"", "Morning", "After", "\"", "and", "she", "'s", "worried", "the", "Poseidon", "is", "going", "to", "sink", ".", "The", "replay", "of", "Tyler", "singing", "\"", "The", "Sun'll", "Come", "Out", ",", "Tomorrow", "\"", "for", "her", "is", "fading", "in", "her", "head", "bc", "that", "\"", "succubus", "\"", "Angela", ".", "It", "'s", "going", "to", "get", "messy", "."]
# ::lemmas ["she", "be", "beautiful", ".", "i'm", "think", "it", "be", "\"", "Morning", "After", "\"", "and", "she", "be", "worry", "the", "Poseidon", "be", "go", "to", "sink", ".", "the", "replay", "of", "Tyler", "singe", "\"", "The", "Sun'll", "Come", "Out", ",", "Tomorrow", "\"", "for", "she", "be", "fade", "in", "her", "head", "bc", "that", "\"", "succubus", "\"", "Angela", ".", "it", "be", "go", "to", "get", "messy", "."]
(c27-12 / multi-sentence
        :snt1 (c27-10 / beautiful-02
                      :ARG1 (c27-0 / she))
        :snt2 (c27-8 / and
                     :op1 (c27-7 / think-01
                                 :ARG0 (c27-28 / i)
                                 :ARG1 (c27-5 / music
                                              :name (c27-21 / name
                                                            :op1 "Morning"
                                                            :op2 "After")
                                              :domain (c27-4 / it)))
                     :op2 (c27-26 / worry-01
                                  :ARG0 c27-0
                                  :ARG1 (c27-3 / sink-01
                                               :ARG1 (c27-2 / ship
                                                            :name (c27-14 / name
                                                                          :op1 "Poseidon")))))
        :snt3 (c27-20 / fade-01
                      :ARG1 (c27-23 / repeat-01
                                    :ARG1 (c27-22 / sing-01
                                                  :ARG0 (c27-24 / person
                                                                :name (c27-25 / name
                                                                              :op1 "Tyler"))
                                                  :ARG1 (c27-19 / music
                                                                :name (c27-17 / name
                                                                              :op1 "The"
                                                                              :op2 "Sun'll"
                                                                              :op3 "Come"
                                                                              :op4 "Out"
                                                                              :op5 ","
                                                                              :op6 "Tomorrow"))
                                                  :ARG2 (c27-1 / she
                                                               :part (c27-6 / head
                                                                            :location-of c27-23)))
                                    :ARG1-of (c27-16 / cause-01
                                                     :ARG0 (c27-13 / person
                                                                   :name (c27-27 / name
                                                                                 :op1 "Angela")
                                                                   :mod (c27-11 / succubus)
                                                                   :mod (c27-18 / that))))
                      :snt4 (c27-9 / get-03
                                   :ARG1 c27-4)
                      :ARG2 (c27-15 / mess)))

# ::snt But Sheryl is better!
# ::tokens ["But", "Sheryl", "is", "better", "!"]
# ::lemmas ["but", "Sheryl", "be", "well", "!"]
(c28-4 / contrast-01
       :ARG2 (c28-2 / have-degree-91
                    :ARG1 (c28-3 / person
                                 :name (c28-0 / name
                                              :op1 "Sheryl"))
                    :ARG2 (c28-5 / good-02
                                 :ARG1 c28-3)
                    :ARG3 (c28-1 / more)))

# ::snt Prior to this she had asked JC if he knew of John Denver. Then JC asked, "what's a song by him?" and Sam's reply was Sunshine on my Shoulders. I pictured her singing that song in her head then.
# ::tokens ["Prior", "to", "this", "she", "had", "asked", "JC", "if", "he", "knew", "of", "John", "Denver", ".", "Then", "JC", "asked", ",", "\"", "what", "'s", "a", "song", "by", "him", "?", "\"", "and", "Sam", "'s", "reply", "was", "Sunshine", "on", "my", "Shoulders", ".", "I", "pictured", "her", "singing", "that", "song", "in", "her", "head", "then", "."]
# ::lemmas ["prior", "to", "this", "she", "have", "ask", "JC", "if", "he", "know", "of", "John", "Denver", ".", "then", "JC", "ask", ",", "\"", "what", "be", "a", "song", "by", "he", "?", "\"", "and", "Sam", "'s", "reply", "be", "Sunshine", "on", "my", "shoulder", ".", "i", "picture", "she", "singing", "that", "song", "in", "her", "head", "then", "."]
(c29-15 / multi-sentence
        :snt1 (c29-11 / ask-01
                      :ARG0 (c29-0 / she)
                      :ARG1 (c29-12 / truth-value
                                    :polarity-of (c29-8 / know-01
                                                        :ARG0 (c29-23 / person
                                                                      :name (c29-20 / name
                                                                                    :op1 "JC"))
                                                        :ARG1 (c29-16 / person
                                                                      :name (c29-17 / name
                                                                                    :op1 "John"
                                                                                    :op2 "Denver"))))
                      :ARG2 c29-23
                      :time (c29-4 / prior
                                   :op1 (c29-19 / this)))
        :snt2 (c29-10 / and
                      :op1 (c29-9 / ask-01
                                  :ARG0 (c29-3 / person
                                               :name (c29-24 / name
                                                             :op1 "JC"))
                                  :ARG1 (c29-6 / song
                                               :domain (c29-29 / amr-unknown)
                                               :poss (c29-7 / he))
                                  :time (c29-27 / then))
                      :op2 (c29-22 / reply-01
                                   :ARG0 (c29-13 / person
                                                 :name (c29-18 / name
                                                               :op1 "Sam"))
                                   :ARG2 (c29-5 / song
                                                :name (c29-26 / name
                                                              :op1 "Sunshine"
                                                              :op2 "on"
                                                              :op3 "Shoulders"))))
        :snt3 (c29-30 / picture-01
                      :ARG0 (c29-28 / i)
                      :ARG1 (c29-21 / sing-01
                                    :ARG0 (c29-1 / she
                                                 :part (c29-25 / head))
                                    :ARG1 (c29-14 / song
                                                  :mod (c29-2 / that))
                                    :location c29-25
                                    :time c29-27)))

# ::snt Nice music video!
# ::tokens ["Nice", "music", "video", "!"]
# ::lemmas ["nice", "music", "video", "!"]
(c30-1 / video
       :topic (c30-2 / music)
       :ARG1-of (c30-0 / nice-01))

# ::snt She looks so pretty here.
# ::tokens ["She", "looks", "so", "pretty", "here", "."]
# ::lemmas ["she", "look", "so", "pretty", "here", "."]
(c31-4 / look-02
       :ARG0 (c31-1 / she)
       :ARG1 (c31-3 / pretty
                    :degree (c31-0 / so))
       :location (c31-2 / here))

# ::snt Love this. She looks so beautiful
# ::tokens ["Love", "this", ".", "She", "looks", "so", "beautiful"]
# ::lemmas ["love", "this", ".", "she", "look", "so", "beautiful"]
(c33-2 / multi-sentence
       :snt1 (c33-4 / love-01
                    :ARG1 (c33-5 / this))
       :snt2 (c33-6 / look-02
                    :ARG0 (c33-3 / she)
                    :ARG1 (c33-1 / beautiful-02
                                 :ARG1 c33-3
                                 :degree (c33-0 / so))))

# ::snt Nice!
# ::tokens ["Nice", "!"]
# ::lemmas ["nice", "!"]
(c34-0 / nice-01
       :mode expressive)

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c36-2 / thank-01
       :ARG0 (c36-1 / i)
       :ARG1 (c36-0 / you))

# ::snt You and I will sing it when we start the band
# ::tokens ["You", "and", "I", "will", "sing", "it", "when", "we", "start", "the", "band"]
# ::lemmas ["you", "and", "i", "will", "sing", "it", "when", "we", "start", "the", "band"]
(c37-3 / sing-01
       :ARG0 (c37-6 / and
                    :op1 (c37-2 / you)
                    :op2 (c37-5 / i))
       :ARG1 (c37-4 / it)
       :time (c37-0 / start-01
                    :ARG0 c37-6
                    :ARG1 (c37-1 / band)))

# ::snt I can but Im not a girl. Does that matter?
# ::tokens ["I", "can", "but", "I", "m", "not", "a", "girl", ".", "Does", "that", "matter", "?"]
# ::lemmas ["i", "can", "but", "i", "m", "not", "a", "girl", ".", "do", "that", "matter", "?"]
(c38-0 / multi-sentence
       :snt1 (c38-4 / contrast-01
                    :ARG1 (c38-3 / possible-01
                                 :ARG1 (c38-5 / i))
                    :ARG2 (c38-7 / girl
                                 :domain c38-5
                                 :polarity -))
       :snt2 (c38-2 / matter-01
                    :ARG1 (c38-6 / that)
                    :polarity (c38-1 / amr-unknown)))

# ::snt Hi again, did the command work?
# ::tokens ["Hi", "again", ",", "did", "the", "command", "work", "?"]
# ::lemmas ["hi", "again", ",", "do", "the", "command", "work", "?"]
(c39-0 / multi-sentence
       :snt1 (c39-1 / hi
                    :mod (c39-5 / again))
       :snt2 (c39-2 / work-09
                    :polarity (c39-4 / amr-unknown)
                    :ARG1 (c39-3 / command-02)))

# ::snt Hey Ryan, we saw your tweet. Could you try to use this command "Ok Google, The first cut is the deepest release date by Cat Stevens according to Wikipedia"?
# ::tokens ["Hey", "Ryan", ",", "we", "saw", "your", "tweet", ".", "Could", "you", "try", "to", "use", "this", "command", "\"", "Ok", "Google", ",", "The", "first", "cut", "is", "the", "deepest", "release", "date", "by", "Cat", "Stevens", "according", "to", "Wikipedia", "\"", "?"]
# ::lemmas ["hey", "Ryan", ",", "we", "see", "your", "tweet", ".", "could", "you", "try", "to", "use", "this", "command", "\"", "Ok", "Google", ",", "the", "first", "cut", "be", "the", "deep", "release", "date", "by", "Cat", "Stevens", "accord", "to", "Wikipedia", "\"", "?"]
(c40-11 / multi-sentence
        :snt1 (c40-0 / say-01
                     :ARG0 (c40-25 / i)
                     :ARG1 (c40-4 / see-01
                                  :ARG0 (c40-24 / we)
                                  :ARG1 (c40-9 / tweet-02
                                               :ARG0 (c40-22 / person
                                                             :name (c40-19 / name
                                                                           :op1 "Ryan")
                                                             :ARG2-of c40-0))))
        :snt2 (c40-12 / possible-01
                      :ARG1 (c40-16 / try-01
                                    :ARG0 (c40-6 / you)
                                    :ARG1 (c40-17 / use-01
                                                  :ARG0 c40-6
                                                  :ARG1 (c40-14 / command
                                                                :mod (c40-26 / this)
                                                                :ARG1-of (c40-7 / mean-01
                                                                                :ARG2 (c40-3 / say-01
                                                                                             :ARG0 (c40-2 / person
                                                                                                          :name (c40-13 / name
                                                                                                                        :op1 "Cat"
                                                                                                                        :op2 "Stevens"))
                                                                                             :ARG1 (c40-27 / date
                                                                                                           :time-of (c40-21 / release-01
                                                                                                                            :ARG0 c40-2)
                                                                                                           :ord (c40-5 / ordinal-entity
                                                                                                                       :value 1)
                                                                                                           :ARG1-of (c40-8 / have-degree-91
                                                                                                                           :ARG2 (c40-15 / deep-03
                                                                                                                                         :ARG1 c40-27)
                                                                                                                           :ARG3 (c40-18 / most)))
                                                                                             :ARG1-of (c40-20 / say-01
                                                                                                              :ARG0 (c40-1 / publication
                                                                                                                           :name (c40-23 / name
                                                                                                                                         :op1 "Wikipedia"))))))))
                      :polarity (c40-10 / amr-unknown)))

# ::snt Siri has your back
# ::tokens ["Siri", "has", "your", "back"]
# ::lemmas ["Siri", "have", "your", "back"]
(c41-1 / have-back-07
       :ARG0 (c41-2 / person
                    :name (c41-0 / name
                                 :op1 "Siri"))
       :ARG1 (c41-3 / you))

# ::snt Me: Hey Google, in what year did Cat Stevens release The First Cut is the Deepest?Google: The First Cut is the Deepest was released in . Me
# ::tokens ["Me", ":", "Hey", "Google", ",", "in", "what", "year", "did", "Cat", "Stevens", "release", "The", "First", "Cut", "is", "the", "Deepest?Google", ":", "The", "First", "Cut", "is", "the", "Deepest", "was", "released", "in", ".", "Me"]
# ::lemmas ["i", ":", "hey", "Google", ",", "in", "what", "year", "do", "Cat", "Stevens", "release", "The", "First", "Cut", "be", "the", "Deepest?Google", ":", "the", "First", "Cut", "be", "the", "Deepest", "be", "release", "in", ".", "i"]
(c42-11 / multi-sentence
        :snt1 (c42-0 / say-01
                     :ARG0 (c42-20 / i)
                     :ARG1 (c42-3 / say-01
                                  :ARG0 c42-20
                                  :ARG1 (c42-17 / release-01
                                                :ARG0 (c42-13 / company
                                                              :name (c42-16 / name
                                                                            :op1 "Google"))
                                                :ARG1 (c42-10 / cut
                                                              :name (c42-12 / name
                                                                            :op1 "The"
                                                                            :op2 "First"
                                                                            :op3 "Cut")
                                                              :ARG1-of (c42-7 / have-degree-91
                                                                              :ARG2 (c42-21 / deep-02
                                                                                            :ARG1 c42-10)
                                                                              :ARG3 (c42-8 / most)))
                                                :time (c42-9 / amr-unknown))
                                  :mod (c42-19 / hey
                                               :mode expressive))
                     :ARG2 c42-13)
        :snt2 (c42-2 / release-01
                     :ARG0 (c42-1 / company
                                  :name (c42-18 / name
                                                :op1 "Cat"
                                                :op2 "Stevens"))
                     :ARG1 c42-10
                     :time (c42-4 / year
                                  :mod c42-9))
        :ARG1-of (c42-6 / have-degree-91
                        :ARG2 (c42-14 / deep-02
                                      :ARG1 c42-10)
                        :ARG3 (c42-15 / most))
        :snt3 (c42-5 / i))

# ::snt :Is the show not back until the Tuesday?
# ::tokens [":", "Is", "the", "show", "not", "back", "until", "the", "Tuesday", "?"]
# ::lemmas [":", "be", "the", "show", "not", "back", "until", "the", "Tuesday", "?"]
(c43-0 / back
       :polarity (c43-3 / amr-unknown)
       :domain (c43-1 / show-04)
       :time (c43-5 / until
                    :op1 (c43-4 / date-entity
                                :weekday (c43-2 / tuesday))))

# ::snt Thats the nicest thing anyones ever said to me
# ::tokens ["That", "s", "the", "nicest", "thing", "anyones", "ever", "said", "to", "me"]
# ::lemmas ["that", "s", "the", "nice", "thing", "anyone", "ever", "say", "to", "i"]
(c44-5 / have-degree-91
       :ARG1 (c44-6 / that)
       :ARG2 (c44-1 / nice-01
                    :ARG1 c44-6)
       :ARG3 (c44-0 / most)
       :ARG5 (c44-8 / thing
                    :ARG1-of (c44-2 / say-01
                                    :ARG0 (c44-3 / anyone)
                                    :ARG2 (c44-7 / i)
                                    :time (c44-4 / ever))))

# ::snt THE FUCKING BOP WE'VE BEEN BLESSED WITH
# ::tokens ["THE", "FUCKING", "BOP", "WE'VE", "BEEN", "BLESSED", "WITH"]
# ::lemmas ["the", "fucking", "BOP", "we've", "be", "BLESSED", "with"]
(c45-1 / bless-01
       :ARG1 (c45-0 / we)
       :mod (c45-2 / fucking
                   :mode expressive))

# ::snt TUBE
# ::tokens ["TUBE"]
# ::lemmas ["TUBE"]
(c48-1 / publication
       :name (c48-0 / name
                    :op1 "TUBE"))

# ::snt Lolololololllll I hope so b/c otherwise were all just gonna be broke for the rest of our lives
# ::tokens ["Lolololololllll", "I", "hope", "so", "b", "/", "c", "otherwise", "were", "all", "just", "gon", "na", "be", "broke", "for", "the", "rest", "of", "our", "lives"]
# ::lemmas ["lolololololllll", "i", "hope", "so", "b", "/", "c", "otherwise", "be", "all", "just", "going", "to", "be", "break", "for", "the", "rest", "of", "our", "life"]
(c49-3 / hope-01
       :ARG0 (c49-10 / i)
       :ARG1 (c49-6 / cause-01
                    :ARG0 (c49-8 / have-condition-91
                                 :ARG2 (c49-0 / broke-23
                                              :ARG1 (c49-7 / we
                                                           :mod (c49-11 / all))
                                              :mod (c49-9 / just)
                                              :duration (c49-1 / rest
                                                               :part-of (c49-4 / live-01
                                                                               :ARG0 c49-7))
                                              :ARG1-of (c49-13 / cause-01
                                                               :ARG0 (c49-2 / have-polarity-91
                                                                            :ARG2 -)))))
       :mod (c49-12 / laugh-01
                    :ARG0 c49-10
                    :manner (c49-5 / loud)
                    :mode expressive))

# ::snt Your kid is gonna be the next Lin Manuel Miranda or some shit I stg
# ::tokens ["Your", "kid", "is", "gon", "na", "be", "the", "next", "Lin", "Manuel", "Miranda", "or", "some", "shit", "I", "stg"]
# ::lemmas ["your", "kid", "be", "going", "to", "be", "the", "next", "Lin", "Manuel", "Miranda", "or", "some", "shit", "i", "stg"]
(c50-0 / or
       :op1 (c50-7 / person
                   :name (c50-3 / name
                                :op1 "Lin"
                                :op2 "Manuel"
                                :op3 "Miranda")
                   :mod (c50-6 / next)
                   :domain (c50-4 / person
                                  :ARG0-of (c50-8 / have-rel-role-91
                                                  :ARG1 (c50-2 / you)
                                                  :ARG2 (c50-9 / kid))))
       :op2 (c50-5 / shit
                   :mod (c50-1 / some)
                   :ARG1-of (c50-10 / stg0)))
