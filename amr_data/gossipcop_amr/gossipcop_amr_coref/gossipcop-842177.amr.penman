# ::snt Good! She belongs with her felon pals.
# ::tokens ["Good", "!", "She", "belongs", "with", "her", "felon", "pals", "."]
# ::lemmas ["good", "!", "she", "belong", "with", "her", "felon", "pal", "."]
(c1-3 / multi-sentence
      :snt1 (c1-6 / good-02
                  :mode expressive)
      :snt2 (c1-2 / belong-01
                  :ARG0 (c1-4 / she)
                  :ARG1 (c1-5 / pal
                              :poss (c1-0 / she)
                              :mod (c1-1 / felon))))

# ::snt Phaedra was the best part of the show for me. I stopped watching when she left.
# ::tokens ["Phaedra", "was", "the", "best", "part", "of", "the", "show", "for", "me", ".", "I", "stopped", "watching", "when", "she", "left", "."]
# ::lemmas ["Phaedra", "be", "the", "good", "part", "of", "the", "show", "for", "i", ".", "i", "stop", "watch", "when", "she", "leave", "."]
(c2-2 / multi-sentence
      :snt1 (c2-4 / have-degree-91
                  :ARG1 (c2-5 / person
                              :name (c2-1 / name
                                          :op1 "Phaedra")
                              :part-of (c2-3 / show-04))
                  :ARG2 (c2-10 / good-02
                               :ARG1 c2-5)
                  :ARG3 (c2-6 / most))
      :snt2 (c2-0 / stop-01
                  :ARG0 (c2-9 / i)
                  :ARG1 (c2-8 / watch-01
                              :ARG0 c2-9
                              :time (c2-7 / leave-11
                                          :ARG0 (c2-11 / she)))))

# ::snt One day...
# ::tokens ["One", "day", "..."]
# ::lemmas ["One", "day", "..."]
(c3-0 / day
      :mod (c3-1 / one))

# ::snt I think because I've dealt with that as a woman since I was a teenager, it almost makes me feel so much for those guys like they were in the same position I was and couldn't do anything about it.
# ::tokens ["I", "think", "because", "I", "'ve", "dealt", "with", "that", "as", "a", "woman", "since", "I", "was", "a", "teenager", ",", "it", "almost", "makes", "me", "feel", "so", "much", "for", "those", "guys", "like", "they", "were", "in", "the", "same", "position", "I", "was", "and", "could", "n't", "do", "anything", "about", "it", "."]
# ::lemmas ["i", "think", "because", "i", "'ve", "deal", "with", "that", "as", "a", "woman", "since", "i", "be", "a", "teenager", ",", "it", "almost", "make", "i", "feel", "so", "much", "for", "those", "guy", "like", "they", "be", "in", "the", "same", "position", "i", "be", "and", "could", "not", "do", "anything", "about", "it", "."]
(c4-9 / think-01
      :ARG0 (c4-18 / i)
      :ARG1 (c4-12 / cause-01
                   :ARG0 (c4-20 / deal-01
                                :ARG0 c4-18
                                :ARG2 (c4-14 / that)
                                :time (c4-0 / since
                                            :op1 (c4-19 / teenager
                                                        :domain c4-18)))
                   :ARG1 (c4-10 / make-02
                                :ARG0 c4-14
                                :ARG1 (c4-15 / feel-01
                                             :ARG0 c4-18
                                             :ARG1 (c4-4 / much
                                                         :degree (c4-3 / so))
                                             :ARG2 (c4-8 / guy
                                                         :mod c4-14)
                                             :ARG1-of (c4-16 / resemble-01
                                                             :ARG2 (c4-7 / and
                                                                         :op1 (c4-17 / position
                                                                                     :ARG1-of (c4-2 / same-01
                                                                                                    :ARG2 (c4-11 / position
                                                                                                                 :poss c4-18))
                                                                                     :op2 (c4-1 / possible-01
                                                                                                :ARG1 (c4-13 / do-02
                                                                                                             :ARG0 c4-8
                                                                                                             :ARG1 (c4-6 / anything)
                                                                                                             :ARG2 c4-17)
                                                                                                :polarity -)))))
                                :mod (c4-5 / almost))))

# ::snt VERY creepy! He's that nerd that finally gets to get back at the guys who probably didn't give him the time of day that were straight. :|
# ::tokens ["VERY", "creepy", "!", "He", "'s", "that", "nerd", "that", "finally", "gets", "to", "get", "back", "at", "the", "guys", "who", "probably", "did", "n't", "give", "him", "the", "time", "of", "day", "that", "were", "straight", ".", ":|"]
# ::lemmas ["very", "creepy", "!", "he", "be", "that", "nerd", "that", "finally", "get", "to", "get", "back", "at", "the", "guy", "who", "probably", "do", "not", "give", "he", "the", "time", "of", "day", "that", "be", "straight", ".", ":|"]
(c5-1 / multi-sentence
      :snt1 (c5-7 / creepy-04
                  :ARG0 (c5-5 / he)
                  :mod (c5-4 / every))
      :snt2 (c5-2 / nerd
                  :domain (c5-8 / he)
                  :ARG0-of (c5-11 / get-back-25
                                  :ARG1 (c5-9 / guy
                                              :ARG0-of (c5-13 / give-01
                                                              :ARG1 (c5-10 / time
                                                                           :part-of (c5-12 / day))
                                                              :ARG2 c5-8
                                                              :mod (c5-6 / probable)
                                                              :ARG1-of (c5-3 / straight-04)
                                                              :polarity -))
                                  :time (c5-0 / final))))

# ::snt As much as Jax isn't that smart on Pump Rules, he knows how to own Andy and call him on his BS, and Andy only lets him get away with it because he is drooling all over him like a creep. lol
# ::tokens ["As", "much", "as", "Jax", "is", "n't", "that", "smart", "on", "Pump", "Rules", ",", "he", "knows", "how", "to", "own", "Andy", "and", "call", "him", "on", "his", "BS", ",", "and", "Andy", "only", "lets", "him", "get", "away", "with", "it", "because", "he", "is", "drooling", "all", "over", "him", "like", "a", "creep", ".", "lol"]
# ::lemmas ["as", "much", "as", "Jax", "be", "not", "that", "smart", "on", "Pump", "Rules", ",", "he", "know", "how", "to", "own", "Andy", "and", "call", "he", "on", "his", "BS", ",", "and", "Andy", "only", "let", "he", "get", "away", "with", "it", "because", "he", "be", "drool", "all", "over", "he", "like", "a", "creep", ".", "lol"]
(c6-8 / and
      :op1 (c6-5 / know-03
                 :ARG0 (c6-19 / person
                              :name (c6-17 / name
                                           :op1 "Jax"))
                 :ARG1 (c6-7 / and
                             :op1 (c6-4 / own-01
                                        :ARG0 c6-19
                                        :ARG1 (c6-14 / person
                                                     :name (c6-15 / name
                                                                  :op1 "Andy")))
                             :op2 (c6-16 / call-13
                                         :ARG0 c6-19
                                         :ARG1 c6-14
                                         :ARG2 (c6-13 / bullshit-01
                                                      :ARG0 c6-14))))
      :op2 (c6-2 / let-01
                 :ARG0 c6-14
                 :ARG1 (c6-9 / get-away-08
                             :ARG0 c6-19
                             :ARG1 c6-7)
                 :mod (c6-12 / only)
                 :ARG1-of (c6-11 / cause-01
                                 :ARG0 (c6-21 / drool-01
                                              :ARG0 c6-19
                                              :location (c6-6 / all-over
                                                              :op1 c6-19)
                                              :ARG1-of (c6-18 / resemble-01
                                                              :ARG2 (c6-3 / creep)))))
      :concession (c6-0 / smart-06
                        :ARG1 c6-19
                        :medium (c6-1 / broadcast-program
                                      :name (c6-20 / name
                                                   :op1 "Pump"
                                                   :op2 "Rules"))
                        :degree (c6-10 / that)
                        :polarity -))

# ::snt I guess he doesn't like that new girl that they had on this season, Eva? I know she was on ANTM/YR at one point. She was probably too nice like Kim Fields.
# ::tokens ["I", "guess", "he", "does", "n't", "like", "that", "new", "girl", "that", "they", "had", "on", "this", "season", ",", "Eva", "?", "I", "know", "she", "was", "on", "ANTM", "/", "YR", "at", "one", "point", ".", "She", "was", "probably", "too", "nice", "like", "Kim", "Fields", "."]
# ::lemmas ["i", "guess", "he", "do", "not", "like", "that", "new", "girl", "that", "they", "have", "on", "this", "season", ",", "Eva", "?", "i", "know", "she", "be", "on", "ANTM", "/", "YR", "at", "one", "point", ".", "she", "be", "probably", "too", "nice", "like", "Kim", "Fields", "."]
(c7-15 / multi-sentence
       :snt1 (c7-0 / say-01
                   :ARG0 (c7-25 / i)
                   :ARG1 (c7-13 / guess-01
                                :ARG0 c7-25
                                :ARG1 (c7-27 / dislike-01
                                             :ARG0 (c7-9 / he)
                                             :ARG1 (c7-3 / girl
                                                         :ARG1-of (c7-20 / new-01)
                                                         :ARG1-of (c7-23 / have-03
                                                                         :ARG0 (c7-12 / they)
                                                                         :time (c7-6 / season
                                                                                     :mod (c7-19 / this)))
                                                         :mod (c7-26 / that))))
                   :ARG2 (c7-21 / person
                                :name (c7-17 / name
                                             :op1 "Eva")))
       :snt2 (c7-10 / know-01
                    :ARG0 (c7-7 / i)
                    :ARG1 (c7-14 / be-located-at-91
                                 :ARG1 (c7-5 / she)
                                 :ARG2 (c7-16 / publication
                                              :name (c7-22 / name
                                                           :op1 "ANTM/YR"))
                                 :time (c7-4 / point
                                             :quant 1)))
       :snt3 (c7-18 / nice-01
                    :ARG1 c7-5
                    :mod (c7-2 / probable)
                    :ARG2-of (c7-8 / have-degree-91
                                   :ARG1 c7-5
                                   :ARG3 (c7-1 / too)
                                   :ARG6 (c7-11 / person
                                                :name (c7-24 / name
                                                             :op1 "Kim"
                                                             :op2 "Fields")))))

# ::snt Nene is back on top again from what I heard back to Andy's fave list, so I bet she'll be back.
# ::tokens ["Nene", "is", "back", "on", "top", "again", "from", "what", "I", "heard", "back", "to", "Andy", "'s", "fave", "list", ",", "so", "I", "bet", "she", "'ll", "be", "back", "."]
# ::lemmas ["Nene", "be", "back", "on", "top", "again", "from", "what", "i", "hear", "back", "to", "Andy", "'s", "fave", "list", ",", "so", "i", "bet", "she", "'ll", "be", "back", "."]
(c8-11 / cause-01
       :ARG0 (c8-2 / be-located-at-91
                   :ARG1 (c8-7 / person
                               :name (c8-3 / name
                                           :op1 "Nene"))
                   :ARG2 (c8-13 / top)
                   :mod (c8-5 / again)
                   :source (c8-14 / thing
                                  :ARG1-of (c8-6 / hear-01
                                                 :ARG0 (c8-12 / i)
                                                 :ARG2 (c8-8 / list
                                                             :ARG1-of (c8-0 / favor-01
                                                                            :ARG0 (c8-4 / person
                                                                                        :name (c8-9 / name
                                                                                                    :op1 "Andy"))))
                                                 :direction (c8-10 / back))))
       :ARG1 (c8-15 / bet-01
                    :ARG0 c8-12
                    :ARG2 c8-2
                    :ARG1 c8-7
                    :ARG2 (c8-1 / back)))

# ::snt Yep, our faves are targets always, but they are the ones who are able to think quick on their feet, and Andrew HATES that.
# ::tokens ["Yep", ",", "our", "faves", "are", "targets", "always", ",", "but", "they", "are", "the", "ones", "who", "are", "able", "to", "think", "quick", "on", "their", "feet", ",", "and", "Andrew", "HATES", "that", "."]
# ::lemmas ["Yep", ",", "our", "fave", "be", "target", "always", ",", "but", "they", "be", "the", "one", "who", "be", "able", "to", "think", "quick", "on", "their", "foot", ",", "and", "Andrew", "HATES", "that", "."]
(c9-5 / contrast-01
      :ARG1 (c9-7 / target
                  :domain (c9-0 / favorite
                                :poss (c9-6 / we))
                  :time (c9-9 / always))
      :ARG2 (c9-8 / and
                  :op1 (c9-13 / capable-01
                              :ARG1 (c9-11 / they
                                           :part (c9-4 / foot))
                              :ARG2 (c9-10 / think-01
                                           :ARG0 c9-11
                                           :ARG1-of (c9-12 / quick-02)
                                           :manner c9-4))
                  :op2 (c9-2 / hate-01
                             :ARG0 (c9-3 / person
                                         :name (c9-1 / name
                                                     :op1 "Andrew"))
                             :ARG1 c9-13)))

# ::snt LMFAO We're the out people out every time minus Kim. lol Oh, lord, ppl want her head on a platter and her fired. RME Idiots. Just shut up.
# ::tokens ["LMFAO", "We", "'re", "the", "out", "people", "out", "every", "time", "minus", "Kim", ".", "lol", "Oh", ",", "lord", ",", "ppl", "want", "her", "head", "on", "a", "platter", "and", "her", "fired", ".", "RME", "Idiots", ".", "Just", "shut", "up", "."]
# ::lemmas ["lmfao", "we", "be", "the", "out", "people", "out", "every", "time", "minus", "Kim", ".", "lol", "oh", ",", "lord", ",", "ppl", "want", "her", "head", "on", "a", "platter", "and", "she", "fire", ".", "RME", "Idiots", ".", "just", "shut", "up", "."]
(c10-17 / multi-sentence
        :snt1 (c10-23 / person
                      :ARG1-of (c10-5 / out-06)
                      :domain (c10-24 / we)
                      :frequency (c10-13 / time
                                         :mod (c10-22 / every))
                      :ARG2-of (c10-14 / except-01
                                       :ARG1 (c10-18 / person
                                                     :name (c10-21 / name
                                                                   :op1 "Kim")))
                      :ARG1-of (c10-1 / laugh-01
                                      :ARG0 (c10-25 / i)
                                      :manner (c10-15 / loud)
                                      :mode expressive))
        :snt2 (c10-2 / want-01
                     :ARG0 c10-24)
        :ARG1 (c10-12 / and
                      :op1 (c10-16 / be-located-at-91
                                   :ARG1 (c10-9 / head
                                                :part-of (c10-0 / she))
                                   :ARG2 (c10-4 / platter))
                      :op2 (c10-20 / fire-02
                                   :ARG1 c10-0))
        :mod (c10-10 / lord
                     :mode expressive)
        :snt3 (c10-8 / idiot
                     :mod (c10-3 / political-movement
                                 :name (c10-19 / name
                                               :op1 "RME")))
        :snt4 (c10-6 / shut-up-06
                     :ARG0 (c10-7 / you)
                     :mod (c10-11 / just)
                     :mode imperative))

# ::snt Because Phae is too smart for Andrew. He wants to pretend he's the smartest person in the room, and he can't when Phae is around. So he buried her.
# ::tokens ["Because", "Phae", "is", "too", "smart", "for", "Andrew", ".", "He", "wants", "to", "pretend", "he", "'s", "the", "smartest", "person", "in", "the", "room", ",", "and", "he", "ca", "n't", "when", "Phae", "is", "around", ".", "So", "he", "buried", "her", "."]
# ::lemmas ["because", "Phae", "be", "too", "smart", "for", "Andrew", ".", "he", "want", "to", "pretend", "he", "be", "the", "smart", "person", "in", "the", "room", ",", "and", "he", "can", "not", "when", "Phae", "be", "around", ".", "so", "he", "bury", "she", "."]
(c11-14 / multi-sentence
        :snt1 (c11-17 / cause-01
                      :ARG0 (c11-0 / smart-06
                                   :ARG1 (c11-22 / person
                                                 :name (c11-19 / name
                                                               :op1 "Phae"))
                                   :ARG2-of (c11-7 / have-degree-91
                                                   :ARG1 c11-22
                                                   :ARG3 (c11-11 / too)
                                                   :ARG6 (c11-15 / person
                                                                 :name (c11-16 / name
                                                                               :op1 "Andrew")))))
        :snt2 (c11-10 / and
                      :op1 (c11-24 / want-01
                                   :ARG0 (c11-25 / he)
                                   :ARG1 (c11-3 / pretend-01
                                                :ARG0 c11-25
                                                :ARG1 (c11-5 / smart-06
                                                             :ARG1 c11-25
                                                             :ARG2-of (c11-6 / have-degree-91
                                                                             :ARG1 c11-25
                                                                             :ARG3 (c11-8 / most)
                                                                             :ARG5 (c11-21 / room)))))
                      :op2 (c11-2 / possible-01
                                  :ARG1 (c11-9 / pretend-01
                                               :ARG0 c11-25
                                               :ARG1 (c11-4 / smart-06
                                                            :ARG1 c11-25)
                                               :time (c11-13 / be-located-at-91
                                                             :ARG1 (c11-26 / person
                                                                           :name (c11-23 / name
                                                                                         :op1 "Phae"))
                                                             :ARG2 (c11-12 / around)))
                                  :polarity -))
        :snt3 c11-17
        :ARG1 (c11-1 / bury-01
                     :ARG0 (c11-18 / he)
                     :ARG1 (c11-20 / she)))

# ::snt ITA! lol As if Bravo caters to us though...
# ::tokens ["ITA", "!", "lol", "As", "if", "Bravo", "caters", "to", "us", "though", "..."]
# ::lemmas ["ITA", "!", "lol", "as", "if", "Bravo", "cater", "to", "we", "though", "..."]
(c12-1 / have-concession-91
       :ARG1 (c12-4 / caters-01
                    :ARG0 (c12-2 / person
                                 :name (c12-0 / name
                                              :op1 "Bravo"))
                    :ARG2 (c12-5 / we)
                    :mod (c12-3 / laugh-01
                                :ARG0 (c12-6 / i)
                                :manner (c12-7 / loud)
                                :mode expressive)))

# ::snt Crying at the caption
# ::tokens ["Crying", "at", "the", "caption"]
# ::lemmas ["cry", "at", "the", "caption"]
(c13-2 / try-01
       :ARG1 (c13-1 / thing
                    :ARG0-of (c13-0 / caption-01)))

# ::snt Our queen ???
# ::tokens ["Our", "queen", "?", "?", "?"]
# ::lemmas ["our", "queen", "?", "?", "?"]
(c14-1 / queen
       :polarity (c14-2 / amr-unknown)
       :poss (c14-0 / we))

# ::snt I love me some Phaedra.
# ::tokens ["I", "love", "me", "some", "Phaedra", "."]
# ::lemmas ["i", "love", "i", "some", "Phaedra", "."]
(c15-3 / love-01
       :ARG0 (c15-4 / i)
       :ARG1 (c15-2 / product
                    :name (c15-0 / name
                                 :op1 "Phaedra")
                    :quant (c15-1 / some)))

# ::snt I hope not-her or Kenya
# ::tokens ["I", "hope", "not", "-", "her", "or", "Kenya"]
# ::lemmas ["i", "hope", "not", "-", "she", "or", "Kenya"]
(c16-3 / hope-01
       :ARG0 (c16-5 / i)
       :ARG1 (c16-0 / or
                    :op1 (c16-2 / she
                                :polarity -)
                    :op2 (c16-4 / country
                                :name (c16-1 / name
                                             :op1 "Kenya"))))

# ::snt " The Unique North Star Undiscovered Genius- Urban Poetry sends unconditional love to you from Maryland".
# ::tokens ["\"", "The", "Unique", "North", "Star", "Undiscovered", "Genius-", "Urban", "Poetry", "sends", "unconditional", "love", "to", "you", "from", "Maryland", "\"", "."]
# ::lemmas ["\"", "The", "Unique", "North", "Star", "Undiscovered", "Genius-", "Urban", "Poetry", "send", "unconditional", "love", "to", "you", "from", "Maryland", "\"", "."]
(c17-4 / send-01
       :ARG0 (c17-6 / poetry
                    :mod (c17-3 / publication
                                :name (c17-2 / name
                                             :op1 "The"
                                             :op2 "Unique"
                                             :op3 "North"
                                             :op4 "Star"
                                             :op5 "Undiscovered"
                                             :op6 "Genius"))
                    :mod (c17-9 / urban))
       :ARG1 (c17-7 / love-01
                    :ARG1-of (c17-8 / condition-01
                                    :polarity -))
       :ARG2 (c17-1 / you)
       :source (c17-0 / state
                      :name (c17-5 / name
                                   :op1 "Maryland")))

# ::snt "Good Afternoon to you from Maryland- met her in Baltimore Maryland-AFRAM- M&amp;T Stadium-she had lots of Security nearby".
# ::tokens ["\"", "Good", "Afternoon", "to", "you", "from", "Maryland-", "met", "her", "in", "Baltimore", "Maryland", "-", "AFRAM-", "M&amp;T", "Stadium", "-", "she", "had", "lots", "of", "Security", "nearby", "\"", "."]
# ::lemmas ["\"", "Good", "Afternoon", "to", "you", "from", "Maryland-", "meet", "she", "in", "Baltimore", "Maryland", "-", "AFRAM-", "M&amp;T", "Stadium", "-", "she", "have", "lot", "of", "Security", "nearby", "\"", "."]
(c18-3 / say-01
       :ARG0 (c18-11 / i)
       :ARG1 (c18-12 / and
                     :op1 (c18-1 / meet-02
                                 :ARG0 c18-11
                                 :ARG1 (c18-0 / she)
                                 :location (c18-10 / city
                                                   :name (c18-2 / name
                                                                :op1 "Baltimore")
                                                   :part-of (c18-15 / state
                                                                    :name (c18-6 / name
                                                                                 :op1 "Maryland")))
                                 :time (c18-14 / date-entity
                                               :dayperiod (c18-13 / afternoon)
                                               :ARG1-of (c18-4 / good-02)))
                     :op2 (c18-7 / have-03
                                 :ARG0 c18-0
                                 :ARG1 (c18-5 / security
                                              :quant (c18-8 / lot)
                                              :location (c18-9 / nearby))))
       :ARG2 c18-0)

# ::snt This is one of the most embarrassing useless shows on TV.
# ::tokens ["This", "is", "one", "of", "the", "most", "embarrassing", "useless", "shows", "on", "TV", "."]
# ::lemmas ["this", "be", "one", "of", "the", "most", "embarrassing", "useless", "show", "on", "tv", "."]
(c19-5 / include-91
       :ARG1 (c19-6 / this)
       :ARG2 (c19-1 / show
                    :ARG1-of (c19-3 / have-degree-91
                                    :ARG2 (c19-2 / embarrass-01
                                                 :ARG0 c19-1)
                                    :ARG3 (c19-0 / most)
                                    :ARG5 (c19-8 / television))
                    :ARG1-of (c19-7 / use-01
                                    :ARG1-of (c19-4 / possible-01
                                                    :polarity -))))

# ::snt Please let her lying ass lay in her lies!! don't nobody want to see her.. or Porsha !!
# ::tokens ["Please", "let", "her", "lying", "ass", "lay", "in", "her", "lies", "!", "!", "do", "n't", "nobody", "want", "to", "see", "her", "..", "or", "Porsha", "!", "!"]
# ::lemmas ["please", "let", "she", "lie", "ass", "lay", "in", "her", "lie", "!", "!", "do", "not", "nobody", "want", "to", "see", "she", "..", "or", "Porsha", "!", "!"]
(c20-3 / multi-sentence
       :snt1 (c20-7 / let-01
                    :ARG0 (c20-2 / you)
                    :ARG1 (c20-14 / lay-01
                                  :ARG1 (c20-13 / ass
                                                :part-of (c20-5 / she)
                                                :ARG0-of (c20-8 / lie-08))
                                  :ARG2 (c20-11 / lie-08
                                                :ARG0 c20-5))
                    :mode imperative
                    :polite +)
       :snt2 (c20-10 / want-01
                     :ARG0 (c20-4 / nobody)
                     :ARG1 (c20-0 / see-01
                                  :ARG0 c20-4
                                  :ARG1 (c20-1 / or
                                               :op1 (c20-15 / she)
                                               :op2 (c20-9 / person
                                                           :name (c20-6 / name
                                                                        :op1 "Porsha"))))
                     :polarity (c20-12 / amr-unknown)
                     :polarity -))

# ::snt She won't be missed. Bible thumping hypocrite. Who will listen to her now. She is evil.
# ::tokens ["She", "wo", "n't", "be", "missed", ".", "Bible", "thumping", "hypocrite", ".", "Who", "will", "listen", "to", "her", "now", ".", "She", "is", "evil", "."]
# ::lemmas ["she", "will", "not", "be", "miss", ".", "Bible", "thumping", "hypocrite", ".", "who", "will", "listen", "to", "she", "now", ".", "she", "be", "evil", "."]
(c21-2 / multi-sentence
       :snt1 (c21-7 / miss-01
                    :ARG1 (c21-4 / she)
                    :polarity -)
       :snt2 (c21-8 / hypocrite
                    :ARG0-of (c21-11 / thump-01
                                     :ARG1 (c21-1 / book
                                                  :name (c21-3 / name
                                                               :op1 "Bible"))))
       :snt3 (c21-9 / listen-01
                    :ARG0 (c21-5 / amr-unknown)
                    :ARG1 (c21-0 / she)
                    :time (c21-10 / now))
       :snt4 (c21-6 / evil
                    :domain c21-0))

# ::snt Good! She created a hurtful and terrible lie. As a lawyer, I would think she could be disbarred.
# ::tokens ["Good", "!", "She", "created", "a", "hurtful", "and", "terrible", "lie", ".", "As", "a", "lawyer", ",", "I", "would", "think", "she", "could", "be", "disbarred", "."]
# ::lemmas ["good", "!", "she", "create", "a", "hurtful", "and", "terrible", "lie", ".", "as", "a", "lawyer", ",", "i", "would", "think", "she", "could", "be", "disbar", "."]
(c22-2 / multi-sentence
       :snt1 (c22-10 / good-02
                     :mode expressive)
       :snt2 (c22-7 / create-01
                    :ARG0 (c22-3 / she)
                    :ARG1 (c22-5 / lie-08
                                 :ARG0 c22-3
                                 :ARG0-of (c22-4 / hurt-01)
                                 :ARG1-of (c22-9 / terrible-01)))
       :snt3 (c22-12 / think-01
                     :ARG0 (c22-8 / i
                                  :prep-as (c22-11 / lawyer))
                     :ARG1 (c22-6 / possible-01
                                  :ARG1 (c22-1 / barbar-01
                                               :ARG1 (c22-0 / she)))))

# ::snt I've always believed Housewives franchise was fake basically scripted drama but i believe this is REAL
# ::tokens ["I", "'ve", "always", "believed", "Housewives", "franchise", "was", "fake", "basically", "scripted", "drama", "but", "i", "believe", "this", "is", "REAL"]
# ::lemmas ["i", "'ve", "always", "believe", "Housewives", "franchise", "be", "fake", "basically", "script", "drama", "but", "i", "believe", "this", "be", "real"]
(c23-7 / contrast-01
       :ARG1 (c23-2 / believe-01
                    :ARG0 (c23-8 / i)
                    :ARG1 (c23-0 / fake-02
                                 :ARG1 (c23-6 / broadcast-program
                                              :name (c23-3 / name
                                                           :op1 "Housewives"))
                                 :ARG2 (c23-10 / drama
                                               :ARG1-of (c23-4 / script-01
                                                               :manner (c23-11 / basic))))
                    :time (c23-9 / always))
       :ARG2 (c23-1 / believe-01
                    :ARG0 c23-8
                    :ARG1 (c23-5 / real-04
                                 :ARG1 c23-6)))

# ::snt you called it
# ::tokens ["you", "called", "it"]
# ::lemmas ["you", "call", "it"]
(c24-0 / call-01
       :ARG0 (c24-1 / you)
       :ARG1 (c24-2 / it))

# ::snt O
# ::tokens ["O"]
# ::lemmas ["o"]
(c25-1 / person
       :name (c25-0 / name
                    :op1 "O"))

# ::snt Vicki came back after lying about cancer. Why not? It'd be boring without her.
# ::tokens ["Vicki", "came", "back", "after", "lying", "about", "cancer", ".", "Why", "not", "?", "It", "'d", "be", "boring", "without", "her", "."]
# ::lemmas ["Vicki", "come", "back", "after", "lie", "about", "cancer", ".", "why", "not", "?", "it", "would", "be", "bore", "without", "she", "."]
(c29-2 / multi-sentence
       :snt1 (c29-9 / come-01
                    :ARG1 (c29-5 / person
                                 :name (c29-1 / name
                                              :op1 "Vicki"))
                    :ARG4 (c29-0 / back)
                    :time (c29-12 / after
                                  :op1 (c29-6 / lie-08
                                              :ARG0 c29-5
                                              :ARG3 (c29-14 / disease
                                                            :name (c29-4 / name
                                                                         :op1 "cancer")))))
       :snt2 (c29-15 / cause-01
                     :ARG0 (c29-11 / amr-unknown)
                     :ARG1 (c29-7 / have-polarity-91
                                  :ARG2 -))
       :snt3 (c29-8 / bore-02
                    :ARG0 (c29-13 / it)
                    :manner (c29-10 / accompany-01
                                    :ARG0 (c29-3 / she)
                                    :ARG1 c29-5
                                    :polarity -)))

# ::snt After what I saw last season if Andy Cohen allows Phaedra back on this show I will never watch it again she should be prosecuted and jailed
# ::tokens ["After", "what", "I", "saw", "last", "season", "if", "Andy", "Cohen", "allows", "Phaedra", "back", "on", "this", "show", "I", "will", "never", "watch", "it", "again", "she", "should", "be", "prosecuted", "and", "jailed"]
# ::lemmas ["after", "what", "i", "see", "last", "season", "if", "Andy", "Cohen", "allow", "Phaedra", "back", "on", "this", "show", "i", "will", "never", "watch", "it", "again", "she", "should", "be", "prosecute", "and", "jail"]
(c30-18 / watch-01
        :ARG0 (c30-19 / i)
        :ARG1 (c30-0 / show-04
                     :ARG1 (c30-17 / person
                                   :name (c30-14 / name
                                                 :op1 "Phaedra"))
                     :mod (c30-9 / this))
        :time (c30-16 / ever)
        :mod (c30-8 / again)
        :condition (c30-7 / allow-01
                          :ARG0 (c30-11 / person
                                        :name (c30-12 / name
                                                      :op1 "Andy"
                                                      :op2 "Cohen"))
                          :ARG1 (c30-10 / back-02
                                        :ARG1 c30-17
                                        :location c30-0))
        :ARG1-of (c30-15 / recommend-01
                         :ARG0 c30-19
                         :ARG2 (c30-5 / and
                                      :op1 (c30-2 / prosecute-01
                                                  :ARG1 c30-17)
                                      :op2 (c30-6 / jail-01
                                                  :ARG1 c30-17)))
        :time (c30-20 / after
                      :op1 (c30-13 / thing
                                   :ARG1-of (c30-4 / see-01
                                                   :ARG0 c30-19
                                                   :time (c30-3 / season
                                                                :mod (c30-1 / last)))))
        :polarity -)

# ::snt Oh no! I hope not! She is disgraceful!
# ::tokens ["Oh", "no", "!", "I", "hope", "not", "!", "She", "is", "disgraceful", "!"]
# ::lemmas ["oh", "no", "!", "i", "hope", "not", "!", "she", "be", "disgraceful", "!"]
(c31-1 / multi-sentence
       :snt1 (c31-0 / oh-no
                    :mode expressive)
       :snt2 (c31-3 / hope-01
                    :ARG0 (c31-4 / i)
                    :polarity -)
       :snt3 (c31-5 / disgrace-01
                    :ARG0 (c31-2 / she)
                    :mode expressive))

# ::snt Chile plz she is talking to stay relevant her butt is not returning
# ::tokens ["Chile", "plz", "she", "is", "talking", "to", "stay", "relevant", "her", "butt", "is", "not", "returning"]
# ::lemmas ["chile", "plz", "she", "be", "talk", "to", "stay", "relevant", "her", "butt", "be", "not", "return"]
(c32-4 / cause-01
       :ARG0 (c32-5 / talk-01
                    :ARG0 (c32-2 / she
                                 :part (c32-1 / butt))
                    :purpose (c32-0 / stay-01
                                    :ARG1 c32-2
                                    :ARG3 (c32-3 / relevant-01
                                                 :ARG1 c32-2)))
       :ARG1 (c32-6 / return-01
                    :ARG1 c32-1
                    :polarity -)
       :mod (c32-7 / chile
                   :mode expressive))

# ::snt God I hope not. I cant stand her lying fake ass.
# ::tokens ["God", "I", "hope", "not", ".", "I", "ca", "nt", "stand", "her", "lying", "fake", "ass", "."]
# ::lemmas ["God", "i", "hope", "not", ".", "i", "can", "not", "stand", "she", "lie", "fake", "ass", "."]
(c33-2 / multi-sentence
       :snt1 (c33-8 / hope-01
                    :ARG0 (c33-10 / i)
                    :ARG1 (c33-7 / event
                                 :polarity -)
                    :mod (c33-9 / person
                                :name (c33-3 / name
                                             :op1 "God")
                                :mode expressive))
       :snt2 (c33-4 / possible-01
                    :ARG1 (c33-5 / stand-03
                                 :ARG0 (c33-6 / i)
                                 :ARG1 (c33-0 / she
                                              :part (c33-11 / ass
                                                            :ARG1-of (c33-1 / fake-02))))
                    :polarity -))

# ::snt I'm sorry but I love Phaedra! She was a hoot to watch.
# ::tokens ["I", "'m", "sorry", "but", "I", "love", "Phaedra", "!", "She", "was", "a", "hoot", "to", "watch", "."]
# ::lemmas ["i", "be", "sorry", "but", "i", "love", "Phaedra", "!", "she", "be", "a", "hoot", "to", "watch", "."]
(c34-1 / multi-sentence
       :snt1 (c34-8 / contrast-01
                    :ARG1 (c34-3 / sorry-01
                                 :ARG1 (c34-10 / i))
                    :ARG2 (c34-6 / love-01
                                 :ARG0 (c34-4 / i)
                                 :ARG1 (c34-7 / person
                                              :name (c34-2 / name
                                                           :op1 "Phaedra"))))
       :snt2 (c34-5 / hoot
                    :domain (c34-0 / she)
                    :ARG2-of (c34-9 / watch-01)))

# ::snt NOOOOOOOOOOOOOOOOOOOOOO........Please Dont let her Return..
# ::tokens ["NOOOOOOOOOOOOOOOOOOOOOO", "........", "Please", "Do", "nt", "let", "her", "Return", ".."]
# ::lemmas ["NOOOOOOOOOOOOOOOOOOOOOO", "........", "please", "do", "not", "let", "she", "return", ".."]
(c35-2 / let-01
       :ARG0 (c35-1 / you)
       :ARG1 (c35-0 / return-01
                    :ARG1 (c35-3 / she))
       :polarity -
       :polite +
       :mode imperative)

# ::snt If she returned I would stop watching. There are some lines that should not be crossed. Accusing people of drugging others and raping them would be one of them.
# ::tokens ["If", "she", "returned", "I", "would", "stop", "watching", ".", "There", "are", "some", "lines", "that", "should", "not", "be", "crossed", ".", "Accusing", "people", "of", "drugging", "others", "and", "raping", "them", "would", "be", "one", "of", "them", "."]
# ::lemmas ["if", "she", "return", "i", "would", "stop", "watch", ".", "there", "be", "some", "line", "that", "should", "not", "be", "cross", ".", "accuse", "people", "of", "drug", "other", "and", "rape", "they", "would", "be", "one", "of", "they", "."]
(c36-2 / multi-sentence
       :snt1 (c36-4 / stop-01
                    :ARG0 (c36-13 / i)
                    :ARG1 (c36-10 / watch-01
                                  :ARG0 c36-13)
                    :condition (c36-6 / return-01
                                      :ARG1 (c36-0 / she)))
       :snt2 (c36-7 / line
                    :quant (c36-17 / some)
                    :ARG1-of (c36-11 / cross-02
                                     :ARG1-of (c36-16 / recommend-01
                                                      :polarity -)))
       :snt3 (c36-5 / include-91
                    :ARG1 (c36-14 / accuse-01
                                  :ARG1 (c36-8 / person)
                                  :ARG2 (c36-15 / and
                                                :op1 (c36-9 / rape-01
                                                            :ARG0 c36-8
                                                            :ARG1 (c36-3 / person
                                                                         :mod (c36-1 / other))
                                                            :op2-of c36-15)
                                                :ARG0 c36-8
                                                :ARG1 c36-3)))
       :ARG2 (c36-12 / they))

# ::snt Yep
# ::tokens ["Yep"]
# ::lemmas ["yep"]
(c38-0 / yep)

# ::snt Me too!
# ::tokens ["Me", "too", "!"]
# ::lemmas ["i", "too", "!"]
(c39-0 / i
       :mod (c39-1 / too))

# ::snt NOOO
# ::tokens ["NOOO"]
# ::lemmas ["NOOO"]
(c40-0 / no)

# ::snt Anyone who tries to convince you so hard that they're deliriously happy, usually aren't...
# ::tokens ["Anyone", "who", "tries", "to", "convince", "you", "so", "hard", "that", "they", "'re", "deliriously", "happy", ",", "usually", "are", "n't", "..."]
# ::lemmas ["anyone", "who", "try", "to", "convince", "you", "so", "hard", "that", "they", "be", "deliriously", "happy", ",", "usually", "be", "not", "..."]
(c41-4 / happy-01
       :ARG1 (c41-2 / anyone
                    :ARG0-of (c41-7 / try-01
                                    :ARG1 (c41-5 / convince-01
                                                 :ARG0 c41-2
                                                 :ARG1 (c41-0 / you)
                                                 :ARG1-of (c41-6 / hard-02
                                                                 :ARG2-of (c41-3 / have-degree-91
                                                                                 :ARG1 c41-5
                                                                                 :ARG3 (c41-1 / so)
                                                                                 :ARG6 (c41-9 / happy-01
                                                                                              :ARG1 c41-2
                                                                                              :degree (c41-8 / delirious)))))))
       :mod (c41-10 / usual)
       :polarity -)

# ::snt I think this is BS. If those women had a brain they would realize that was a rumor. I never believed that crap!. Phaedra should come back.
# ::tokens ["I", "think", "this", "is", "BS", ".", "If", "those", "women", "had", "a", "brain", "they", "would", "realize", "that", "was", "a", "rumor", ".", "I", "never", "believed", "that", "crap", "!", ".", "Phaedra", "should", "come", "back", "."]
# ::lemmas ["i", "think", "this", "be", "BS", ".", "if", "those", "woman", "have", "a", "brain", "they", "would", "realize", "that", "be", "a", "rumor", ".", "i", "never", "believe", "that", "crap", "!", ".", "Phaedra", "should", "come", "back", "."]
(c44-13 / multi-sentence
        :snt1 (c44-8 / think-01
                     :ARG0 (c44-21 / i)
                     :ARG1 (c44-12 / bullshit-01
                                   :ARG1 (c44-16 / this)))
        :snt2 (c44-18 / realize-01
                      :ARG0 (c44-20 / woman
                                    :mod (c44-22 / that))
                      :ARG1 (c44-4 / rumor-01
                                   :ARG1 (c44-0 / that))
                      :condition (c44-7 / have-03
                                        :ARG0 c44-20
                                        :ARG1 (c44-1 / brain)))
        :snt3 (c44-5 / believe-01
                     :ARG0 (c44-6 / i)
                     :ARG1 (c44-9 / thing
                                  :mod (c44-3 / that)
                                  :ARG1-of (c44-15 / crap-01))
                     :time (c44-19 / ever)
                     :polarity -)
        :snt4 (c44-14 / recommend-01
                      :ARG1 (c44-10 / come-01
                                    :ARG1 (c44-2 / law
                                                 :name (c44-17 / name
                                                               :op1 "Phaedra"))
                                    :direction (c44-11 / back))))

# ::snt I never want to see on again! She crossed the line and then some!
# ::tokens ["I", "never", "want", "to", "see", "on", "again", "!", "She", "crossed", "the", "line", "and", "then", "some", "!"]
# ::lemmas ["i", "never", "want", "to", "see", "on", "again", "!", "she", "cross", "the", "line", "and", "then", "some", "!"]
(c45-1 / multi-sentence
       :snt1 (c45-5 / want-01
                    :ARG0 (c45-8 / i)
                    :ARG1 (c45-2 / see-01
                                 :ARG0 c45-8
                                 :mod (c45-9 / again)
                                 :time (c45-3 / ever))
                    :polarity -)
       :snt2 (c45-10 / and
                     :op1 (c45-6 / cross-02
                                 :ARG0 (c45-0 / she)
                                 :ARG1 (c45-4 / line))
                     :op2 (c45-11 / cross-02
                                  :ARG0 (c45-12 / some)
                                  :ARG1 c45-4
                                  :time (c45-7 / then))))

# ::snt It's probably for the best! Hopefully, she can save what's left of her brand, whatever that may be.
# ::tokens ["It", "'s", "probably", "for", "the", "best", "!", "Hopefully", ",", "she", "can", "save", "what", "'s", "left", "of", "her", "brand", ",", "whatever", "that", "may", "be", "."]
# ::lemmas ["it", "be", "probably", "for", "the", "good", "!", "hopefully", ",", "she", "can", "save", "what", "be", "leave", "of", "her", "brand", ",", "whatever", "that", "may", "be", "."]
(c46-2 / multi-sentence
       :snt1 (c46-6 / probable
                    :domain (c46-13 / good-02
                                    :ARG1 (c46-11 / it)
                                    :ARG2-of (c46-5 / have-degree-91
                                                    :ARG1 c46-11
                                                    :ARG3 (c46-7 / most))))
       :snt2 (c46-10 / hope-01
                     :ARG1 (c46-3 / possible-01
                                  :ARG1 (c46-4 / save-02
                                               :ARG0 (c46-0 / she)
                                               :ARG1 (c46-12 / thing
                                                             :ARG1-of (c46-8 / leave-17
                                                                             :ARG2 (c46-1 / brand
                                                                                          :poss c46-0)))
                                               :concession (c46-14 / possible-01
                                                                   :ARG1 (c46-9 / whatever))))))

# ::snt All housewives need to be held accountable to the same standards Phaedra was. Does Rinna sound familiar?
# ::tokens ["All", "housewives", "need", "to", "be", "held", "accountable", "to", "the", "same", "standards", "Phaedra", "was", ".", "Does", "Rinna", "sound", "familiar", "?"]
# ::lemmas ["all", "housewife", "need", "to", "be", "hold", "accountable", "to", "the", "same", "standard", "Phaedra", "be", ".", "do", "Rinna", "sound", "familiar", "?"]
(c47-3 / multi-sentence
       :snt1 (c47-2 / need-01
                    :ARG0 (c47-6 / housewife
                                 :mod (c47-14 / all))
                    :ARG1 (c47-12 / hold-02
                                  :ARG1 (c47-13 / accountable-02
                                                :ARG0 c47-6
                                                :ARG1 (c47-4 / standard
                                                             :ARG1-of (c47-0 / same-01
                                                                             :ARG2 (c47-15 / standard
                                                                                           :ARG1-of c47-12
                                                                                           :ARG0 (c47-7 / law
                                                                                                        :name (c47-8 / name
                                                                                                                     :op1 "Phaedra"))))))))
       :snt2 (c47-5 / sound-01
                    :ARG1 (c47-9 / person
                                 :name (c47-10 / name
                                               :op1 "Rinna"))
                    :ARG2 (c47-1 / familiarize-01
                                 :ARG2 c47-9)
                    :polarity (c47-11 / amr-unknown)))

# ::snt So shes returning back to the show?
# ::tokens ["So", "she", "s", "returning", "back", "to", "the", "show", "?"]
# ::lemmas ["so", "she", "s", "return", "back", "to", "the", "show", "?"]
(c48-0 / return-01
       :ARG1 (c48-3 / she)
       :ARG4 (c48-1 / show-04)
       :polarity (c48-2 / amr-unknown))

# ::snt Yasssss Bitch!!!! I miss her so much. I don't care what nobody say about her, she the bomb diggaty bomb and they know the show was not the same without her. Way to go Phaedra Parks
# ::tokens ["Yasssss", "Bitch", "!", "!", "!", "!", "I", "miss", "her", "so", "much", ".", "I", "do", "n't", "care", "what", "nobody", "say", "about", "her", ",", "she", "the", "bomb", "diggaty", "bomb", "and", "they", "know", "the", "show", "was", "not", "the", "same", "without", "her", ".", "Way", "to", "go", "Phaedra", "Parks"]
# ::lemmas ["Yasssss", "Bitch", "!", "!", "!", "!", "i", "miss", "she", "so", "much", ".", "i", "do", "not", "care", "what", "nobody", "say", "about", "she", ",", "she", "the", "bomb", "diggaty", "bomb", "and", "they", "know", "the", "show", "be", "not", "the", "same", "without", "she", ".", "way", "to", "go", "Phaedra", "Parks"]
(c49-14 / multi-sentence
        :snt1 (c49-6 / miss-01
                     :ARG0 (c49-24 / i)
                     :ARG1 (c49-22 / person
                                   :name (c49-20 / name
                                                 :op1 "Bitch"))
                     :mod (c49-4 / yass
                                 :mode expressive)
                     :ARG1-of (c49-7 / have-quant-91
                                     :ARG2 (c49-19 / much)
                                     :ARG3 (c49-0 / so))
                     :mode expressive)
        :snt2 (c49-11 / and
                      :op1 (c49-17 / care-01
                                   :ARG0 (c49-5 / i)
                                   :ARG1 (c49-10 / thing
                                                 :ARG1-of (c49-3 / say-01
                                                                 :ARG0 (c49-16 / nobody)
                                                                 :topic c49-22))
                                   :polarity -)
                      :op2 (c49-9 / and
                                  :op1 (c49-13 / bomb
                                               :ARG0-of (c49-25 / dig-01
                                                                :ARG1 (c49-1 / bomb))
                                               :domain c49-22)
                                  :op2 (c49-8 / know-01
                                              :ARG0 (c49-18 / they)
                                              :ARG1 (c49-2 / same-01
                                                           :ARG1 (c49-21 / show-04)
                                                           :ARG2 (c49-15 / person
                                                                         :name c49-20
                                                                         :op1 "Phaedra"
                                                                         :op2 "Parks")
                                                           :polarity -))))
        :snt3 (c49-23 / way
                      :ARG4-of (c49-12 / go-06)))

# ::snt No!!!!
# ::tokens ["No", "!", "!", "!", "!"]
# ::lemmas ["no", "!", "!", "!", "!"]
(c50-0 / no)
