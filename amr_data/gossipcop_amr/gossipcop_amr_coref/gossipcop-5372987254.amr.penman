# ::snt how pathetic. Please grow up, you really are making fools of yourselves!
# ::tokens ["how", "pathetic", ".", "Please", "grow", "up", ",", "you", "really", "are", "making", "fools", "of", "yourselves", "!"]
# ::lemmas ["how", "pathetic", ".", "please", "grow", "up", ",", "you", "really", "be", "make", "fool", "of", "yourself", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-5 / pathetic
                  :degree (c1-2 / so))
      :snt2 (c1-7 / grow-up-04
                  :ARG1 (c1-0 / you)
                  :ARG1-of (c1-6 / cause-01
                                 :ARG0 (c1-4 / make-
                                             :ARG0 (c1-8 / you
                                                         :ARG1-of c1-4)
                                             :ARG1-of (c1-3 / real-04)))
                  :mode imperative
                  :polite +))

# ::snt ..yeh them...
# ::tokens ["..", "yeh", "them", "..."]
# ::lemmas ["..", "yeh", "they", "..."]
(c2-1 / they
      :mod (c2-0 / yeh
                 :mode expressive))

# ::snt you Mean washed up has beens
# ::tokens ["you", "Mean", "washed", "up", "has", "beens"]
# ::lemmas ["you", "Mean", "wash", "up", "have", "been"]
(c3-2 / mean-01
      :ARG0 (c3-1 / you)
      :ARG2 (c3-0 / wash-up-02))

# ::snt ..oh God I hope so...
# ::tokens ["..", "oh", "God", "I", "hope", "so", "..."]
# ::lemmas ["..", "oh", "god", "i", "hope", "so", "..."]
(c4-3 / hope-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-2 / so)
      :mod (c4-0 / oh
                 :mode expressive)
      :mod (c4-4 / person
                 :name (c4-1 / name
                             :op1 "God")))

# ::snt Hollywood actors. Meh. Soon they'll be replaced by CGI.
# ::tokens ["Hollywood", "actors", ".", "Meh", ".", "Soon", "they", "'ll", "be", "replaced", "by", "CGI", "."]
# ::lemmas ["Hollywood", "actor", ".", "Meh", ".", "soon", "they", "'ll", "be", "replace", "by", "CGI", "."]
(c5-1 / multi-sentence
      :snt1 (c5-6 / person
                  :ARG0-of (c5-9 / act-01)
                  :mod (c5-5 / market-sector
                             :name (c5-0 / name
                                         :op1 "Hollywood")))
      :snt2 (c5-10 / meh
                   :mode expressive)
      :snt3 (c5-4 / replace-01
                  :ARG1 (c5-8 / they)
                  :ARG2 (c5-2 / product
                              :name (c5-7 / name
                                          :op1 "CGI"))
                  :time (c5-3 / soon)))

# ::snt None of us care what THEY think! Get over it!
# ::tokens ["None", "of", "us", "care", "what", "THEY", "think", "!", "Get", "over", "it", "!"]
# ::lemmas ["none", "of", "we", "care", "what", "they", "think", "!", "get", "over", "it", "!"]
(c7-3 / multi-sentence
      :snt1 (c7-5 / care-01
                  :ARG0 (c7-2 / none
                              :ARG1-of (c7-7 / include-91
                                             :ARG2 (c7-6 / we)))
                  :ARG1 (c7-8 / thing
                              :ARG1-of (c7-10 / think-01
                                              :ARG0 (c7-9 / they))))
      :snt2 (c7-0 / over-02
                  :ARG1 (c7-1 / you)
                  :ARG2 (c7-4 / it)
                  :mode imperative))

# ::snt Can't stand Chrissy..so why did she watch then?
# ::tokens ["Ca", "n't", "stand", "Chrissy", "..", "so", "why", "did", "she", "watch", "then", "?"]
# ::lemmas ["can", "not", "stand", "Chrissy", "..", "so", "why", "do", "she", "watch", "then", "?"]
(c8-1 / multi-sentence
      :snt1 (c8-5 / possible-01
                  :ARG1 (c8-3 / stand-03
                              :ARG0 (c8-9 / i)
                              :ARG1 (c8-2 / person
                                          :name (c8-4 / name
                                                      :op1 "Chrissy")))
                  :polarity -)
      :snt2 (c8-6 / cause-01
                  :ARG0 (c8-10 / amr-unknown)
                  :ARG1 (c8-7 / watch-01
                              :ARG0 (c8-0 / she)
                              :time (c8-8 / then))))

# ::snt These two are your A-listers Your kidding? One is married to a singer,period. nd is a mess Psychologically.
# ::tokens ["These", "two", "are", "your", "A", "-", "listers", "Your", "kidding", "?", "One", "is", "married", "to", "a", "singer", ",", "period", ".", "nd", "is", "a", "mess", "Psychologically", "."]
# ::lemmas ["these", "two", "be", "your", "a", "-", "lister", "your", "kidding", "?", "One", "be", "married", "to", "a", "singer", ",", "period", ".", "nd", "be", "a", "mess", "psychologically", "."]
(c9-2 / multi-sentence
      :snt1 (c9-7 / person
                  :ARG0-of (c9-12 / inherit-01
                                  :ARG1 (c9-13 / ass
                                               :poss (c9-1 / you)))
                  :domain (c9-3 / person
                                :mod (c9-11 / this)
                                :quant 2))
      :snt2 (c9-8 / kid-01
                  :ARG0 c9-1
                  :ARG1 (c9-6 / marry-01
                              :ARG1 (c9-0 / one)
                              :ARG2 (c9-15 / person
                                           :ARG0-of (c9-4 / sing-01))
                              :mod (c9-9 / period)))
      :snt3 (c9-10 / mess
                   :domain (c9-14 / person
                                  :name (c9-5 / name
                                              :op1 "nd"))
                   :manner (c9-16 / psychology)))

# ::snt look in the mirror. your team stabbed Israel in the back
# ::tokens ["look", "in", "the", "mirror", ".", "your", "team", "stabbed", "Israel", "in", "the", "back"]
# ::lemmas ["look", "in", "the", "mirror", ".", "your", "team", "stab", "Israel", "in", "the", "back"]
(c10-2 / multi-sentence
       :snt1 (c10-6 / look-01
                    :ARG0 (c10-1 / you)
                    :ARG1 (c10-5 / mirror)
                    :mode imperative)
       :snt2 (c10-4 / stab-01
                    :ARG0 (c10-8 / team
                                 :poss (c10-9 / you))
                    :ARG1 (c10-7 / country
                                 :name (c10-3 / name
                                              :op1 "Israel"))
                    :location (c10-0 / back)))

# ::snt understand God is still the high priest and we are his disciples.
# ::tokens ["understand", "God", "is", "still", "the", "high", "priest", "and", "we", "are", "his", "disciples", "."]
# ::lemmas ["understand", "God", "be", "still", "the", "high", "priest", "and", "we", "be", "his", "disciple", "."]
(c11-10 / understand-01
        :ARG0 (c11-0 / you)
        :ARG1 (c11-8 / and
                     :op1 (c11-5 / priest
                                 :ARG1-of (c11-4 / high-02)
                                 :domain (c11-2 / person
                                                :name (c11-1 / name
                                                             :op1 "God"))
                                 :mod (c11-3 / still))
                     :op2 (c11-7 / person
                                 :ARG0-of (c11-9 / disciplesize-00
                                                 :ARG1 c11-2)
                                 :domain (c11-6 / we)))
        :mode imperative)

# ::snt who gives a shit what any one of those losers thinK?
# ::tokens ["who", "gives", "a", "shit", "what", "any", "one", "of", "those", "losers", "thinK", "?"]
# ::lemmas ["who", "give", "a", "shit", "what", "any", "one", "of", "those", "loser", "think", "?"]
(c12-8 / give-16
       :ARG0 (c12-1 / amr-unknown)
       :ARG1 (c12-0 / shit)
       :ARG2 (c12-7 / anyone
                    :ARG1-of (c12-6 / include-91
                                    :ARG2 (c12-2 / person
                                                 :ARG0-of (c12-3 / lose-03)
                                                 :mod (c12-5 / that))))
       :polarity (c12-4 / amr-unknown))

# ::snt well they pretend to be other people in their daily job. So why not pretend that they have a brain?
# ::tokens ["well", "they", "pretend", "to", "be", "other", "people", "in", "their", "daily", "job", ".", "So", "why", "not", "pretend", "that", "they", "have", "a", "brain", "?"]
# ::lemmas ["well", "they", "pretend", "to", "be", "other", "people", "in", "their", "daily", "job", ".", "so", "why", "not", "pretend", "that", "they", "have", "a", "brain", "?"]
(c13-2 / multi-sentence
       :snt1 (c13-7 / pretend-01
                    :ARG0 (c13-12 / they)
                    :ARG1 (c13-3 / person
                                 :mod (c13-0 / other)
                                 :domain c13-12
                                 :location (c13-10 / job
                                                   :poss c13-12
                                                   :frequency (c13-4 / rate-entity-91
                                                                     :ARG3 (c13-16 / temporal-quantity
                                                                                   :unit (c13-14 / day)
                                                                                   :quant 1))))
                    :mod (c13-8 / well))
       :snt2 (c13-11 / infer-01
                     :ARG1 (c13-5 / amr-unknown
                                  :ARG0-of (c13-9 / cause-01
                                                  :ARG1 (c13-15 / pretend-01
                                                                :ARG0 (c13-13 / they)
                                                                :ARG1 (c13-6 / have-03
                                                                             :ARG0 c13-13
                                                                             :ARG1 (c13-1 / brain))
                                                                :polarity -)))))

# ::snt Do not care.
# ::tokens ["Do", "not", "care", "."]
# ::lemmas ["do", "not", "care", "."]
(c14-0 / care-01
       :ARG0 (c14-1 / you)
       :polarity -)
