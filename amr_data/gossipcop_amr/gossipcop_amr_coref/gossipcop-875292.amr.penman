# ::snt it's ok xoAC
# ::tokens ["it", "'s", "ok", "xoAC"]
# ::lemmas ["it", "be", "ok", "xoac"]
(c1-0 / okay-04
      :ARG1 (c1-5 / it)
      :ARG1-of (c1-2 / say-01
                     :ARG0 (c1-3 / i)
                     :ARG2 (c1-4 / person
                                 :name (c1-1 / name
                                             :op1 "xxx"))))

# ::snt Must be the donuts
# ::tokens ["Must", "be", "the", "donuts"]
# ::lemmas ["must", "be", "the", "donut"]
(c2-1 / infer-01
      :ARG1 (c2-0 / donut))

# ::snt NOOOOOOOO!! How will the world keep turning without this entitled self-centered brat???
# ::tokens ["NOOOOOOOO", "!", "!", "How", "will", "the", "world", "keep", "turning", "without", "this", "entitled", "self", "-", "centered", "brat", "?", "?", "?"]
# ::lemmas ["NOOOOOOOO", "!", "!", "how", "will", "the", "world", "keep", "turn", "without", "this", "entitled", "self", "-", "center", "brat", "?", "?", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-1 / no)
      :snt2 (c3-5 / keep-02
                  :ARG1 (c3-9 / turn-01
                              :ARG1 (c3-6 / world))
                  :manner (c3-3 / amr-unknown)
                  :manner (c3-8 / accompany-01
                                :ARG0 (c3-0 / brat
                                            :ARG1-of (c3-4 / entitle-01)
                                            :ARG0-of (c3-7 / center-01
                                                           :ARG2 c3-0)
                                            :mod (c3-10 / this))
                                :ARG1 c3-6
                                :polarity -)))

# ::snt She must of ate some fkd up pho
# ::tokens ["She", "must", "of", "ate", "some", "fkd", "up", "pho"]
# ::lemmas ["she", "must", "of", "ate", "some", "fkd", "up", "pho"]
(c4-4 / infer-01
      :ARG1 (c4-3 / eat-01
                  :ARG0 (c4-2 / she)
                  :ARG1 (c4-0 / fkd
                              :mod (c4-1 / some))))

# ::snt Eat a sandwich
# ::tokens ["Eat", "a", "sandwich"]
# ::lemmas ["eat", "a", "sandwich"]
(c5-0 / eat-01
      :ARG0 (c5-1 / you)
      :ARG1 (c5-2 / sandwich)
      :mode imperative)

# ::snt Sorry bb what ever the situation hope u get better. All the best for next time. Get well soon, ur a strong ladet we can alkatel thru it
# ::tokens ["Sorry", "bb", "what", "ever", "the", "situation", "hope", "u", "get", "better", ".", "All", "the", "best", "for", "next", "time", ".", "Get", "well", "soon", ",", "ur", "a", "strong", "ladet", "we", "can", "alkatel", "thru", "it"]
# ::lemmas ["sorry", "bb", "what", "ever", "the", "situation", "hope", "u", "get", "well", ".", "all", "the", "good", "for", "next", "time", ".", "get", "well", "soon", ",", "ur", "a", "strong", "ladet", "we", "can", "alkatel", "thru", "it"]
(c6-20 / multi-sentence
       :snt1 (c6-0 / sorry-01
                   :ARG1 (c6-31 / i)
                   :ARG2 (c6-10 / hope-01
                                :ARG0 c6-31
                                :ARG1 (c6-15 / get-03
                                             :ARG1 (c6-7 / you)
                                             :ARG2 (c6-30 / have-degree-91
                                                          :ARG1 c6-7
                                                          :ARG2 (c6-3 / good-02
                                                                      :ARG1 c6-7)
                                                          :ARG3 (c6-11 / more)))
                                :condition (c6-6 / situation
                                                 :mod (c6-13 / any))))
       :snt2 (c6-29 / wish-01
                    :ARG0 (c6-8 / i)
                    :ARG1 (c6-14 / thing
                                 :ARG1-of (c6-9 / have-degree-91
                                                :ARG2 (c6-4 / good-02
                                                            :ARG1 c6-14)
                                                :ARG3 (c6-24 / more)))
                    :ARG2 (c6-28 / person
                                 :name (c6-26 / name
                                              :op1 "bb"))
                    :time (c6-23 / time
                                 :mod (c6-21 / next)))
       :snt3 (c6-16 / get-05
                    :ARG1 (c6-17 / you)
                    :ARG2 (c6-2 / well-05)
                    :time (c6-5 / soon)
                    :ARG1-of (c6-22 / cause-01
                                    :ARG0 (c6-1 / ladet
                                                :ARG1-of (c6-27 / strong-02)
                                                :ARG1-of (c6-19 / capable-01
                                                                :ARG2 (c6-12 / alkatel-00
                                                                             :ARG0 (c6-25 / we)
                                                                             :ARG2 (c6-18 / it)))
                                                :domain c6-17))
                    :mode imperative))

# ::snt praying that she gets well very soon
# ::tokens ["praying", "that", "she", "gets", "well", "very", "soon"]
# ::lemmas ["pray", "that", "she", "get", "well", "very", "soon"]
(c7-3 / hope-01
      :ARG1 (c7-5 / get-03
                  :ARG1 (c7-1 / she)
                  :ARG2 (c7-4 / well-05
                              :ARG1 c7-1)
                  :time (c7-0 / soon
                              :degree (c7-2 / very))))

# ::snt Hope she gets to feeling better lol
# ::tokens ["Hope", "she", "gets", "to", "feeling", "better", "lol"]
# ::lemmas ["hope", "she", "get", "to", "feel", "well", "lol"]
(c8-3 / hope-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-8 / get-03
                  :ARG1 (c8-2 / she)
                  :ARG2 (c8-0 / feel-01
                              :ARG0 c8-2
                              :ARG1 (c8-7 / good-02
                                          :ARG2-of (c8-5 / have-degree-91
                                                         :ARG1 c8-0
                                                         :ARG3 (c8-1 / more)))))
      :ARG2-of (c8-4 / laugh-01
                     :ARG0 c8-6
                     :manner (c8-9 / loud)))

# ::snt Her message was so sweet! Hang in there babe. The whole worlds got your back!
# ::tokens ["Her", "message", "was", "so", "sweet", "!", "Hang", "in", "there", "babe", ".", "The", "whole", "worlds", "got", "your", "back", "!"]
# ::lemmas ["her", "message", "be", "so", "sweet", "!", "hang", "in", "there", "babe", ".", "the", "whole", "world", "get", "your", "back", "!"]
(c9-2 / multi-sentence
      :snt1 (c9-3 / sweet-03
                  :ARG1 (c9-4 / message-01
                              :ARG0 (c9-0 / she))
                  :degree (c9-11 / so))
      :snt2 (c9-5 / hang-01
                  :ARG0 (c9-1 / you
                              :ARG1-of c9-5)
                  :ARG2 (c9-8 / there)
                  :mode imperative)
      :snt3 (c9-9 / get-back-09
                  :ARG0 (c9-7 / world
                              :mod (c9-6 / whole))
                  :ARG1 (c9-10 / you)))

# ::snt They gotta realize they're not invincible. Gotta Eat, Drink &amp; Sleep jus like everyone else.
# ::tokens ["They", "got", "ta", "realize", "they", "'re", "not", "invincible", ".", "Got", "ta", "Eat", ",", "Drink", "&", "amp", ";", "Sleep", "jus", "like", "everyone", "else", "."]
# ::lemmas ["they", "got", "to", "realize", "they", "be", "not", "invincible", ".", "got", "to", "Eat", ",", "Drink", "&", "amp", ";", "sleep", "ju", "like", "everyone", "else", "."]
(c10-3 / multi-sentence
       :snt1 (c10-0 / obligate-01
                    :ARG1 (c10-12 / they)
                    :ARG2 (c10-6 / realize-01
                                 :ARG0 c10-12
                                 :ARG1 (c10-11 / invincible
                                               :domain c10-12
                                               :polarity -)))
       :snt2 c10-0
       :ARG1 (c10-2 / you)
       :ARG2 (c10-7 / and
                    :op1 (c10-8 / eat-01
                                :ARG0 c10-2)
                    :op2 (c10-14 / drink-01
                                 :ARG0 c10-2)
                    :op3 (c10-13 / amphetamine))
       :snt3 (c10-4 / sleep-01
                    :ARG0 (c10-15 / you)
                    :ARG1-of (c10-5 / resemble-01
                                    :ARG2 (c10-1 / sleep-01
                                                 :ARG0 (c10-9 / everyone
                                                              :mod (c10-10 / else))))))
