# ::snt Yeah they give you less Marshmallows already so we switched to something different
# ::tokens ["Yeah", "they", "give", "you", "less", "Marshmallows", "already", "so", "we", "switched", "to", "something", "different"]
# ::lemmas ["yeah", "they", "give", "you", "less", "Marshmallows", "already", "so", "we", "switch", "to", "something", "different"]
(c1-9 / give-01
      :ARG0 (c1-8 / they)
      :ARG1 (c1-2 / marshmallow
                  :quant (c1-5 / less))
      :ARG2 (c1-1 / you)
      :time (c1-4 / already)
      :ARG0-of (c1-6 / cause-01
                     :ARG1 (c1-3 / switch-01
                                 :ARG0 (c1-7 / we)
                                 :ARG2 (c1-0 / something
                                             :ARG1-of (c1-10 / differ-02))))
      :mod (c1-11 / yeah))

# ::snt JzzzgzjsGx
# ::tokens ["JzzzgzjsGx"]
# ::lemmas ["JzzzgzjsGx"]
(c2-2 / person
      :name (c2-0 / name
                  :op1 "Jzzzgz")
      :mod (c2-1 / emoticon
                 :value "JSGx"))

# ::snt I love me some Lucky charms
# ::tokens ["I", "love", "me", "some", "Lucky", "charms"]
# ::lemmas ["i", "love", "i", "some", "lucky", "charm"]
(c3-2 / love-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-3 / charm
                  :mod (c3-5 / company
                             :name (c3-0 / name
                                         :op1 "Lucky"))
                  :quant (c3-1 / some)))

# ::snt what the fuck are you shit heads covering this for, when we got these?
# ::tokens ["what", "the", "fuck", "are", "you", "shit", "heads", "covering", "this", "for", ",", "when", "we", "got", "these", "?"]
# ::lemmas ["what", "the", "fuck", "be", "you", "shit", "head", "cover", "this", "for", ",", "when", "we", "get", "these", "?"]
(c4-10 / and
       :op1 (c4-5 / cover-03
                  :ARG0 (c4-2 / you
                              :mod (c4-4 / head
                                         :mod (c4-3 / shit)))
                  :ARG1 (c4-8 / this)
                  :mod (c4-9 / amr-unknown
                             :mod (c4-0 / fuck
                                        :mode expressive)))
       :op2 (c4-1 / be-temporally-at-91
                  :ARG1 (c4-11 / get-01
                               :ARG0 (c4-6 / we)
                               :ARG1 (c4-12 / this))
                  :ARG2 (c4-7 / amr-unknown)))

# ::snt Mourning drink
# ::tokens ["Mourning", "drink"]
# ::lemmas ["mourning", "drink"]
(c5-0 / drink-01
      :ARG1-of (c5-1 / mourn-01))

# ::snt No
# ::tokens ["No"]
# ::lemmas ["no"]
(c6-0 / no)

# ::snt Is for mr
# ::tokens ["Is", "for", "mr"]
# ::lemmas ["be", "for", "mr"]
(c7-1 / have-purpose-91
      :ARG2 (c7-2 / person
                  :name (c7-0 / name
                              :op1 "Msr")))
