# ::snt to late they practically already did
# ::tokens ["to", "late", "they", "practically", "already", "did"]
# ::lemmas ["to", "late", "they", "practically", "already", "do"]
(c1-0 / event
      :mod (c1-2 / they)
      :time (c1-3 / already
                  :ARG1-of (c1-1 / practical-02))
      :time (c1-4 / to-date))

# ::snt nobody cares about that roach honestly
# ::tokens ["nobody", "cares", "about", "that", "roach", "honestly"]
# ::lemmas ["nobody", "care", "about", "that", "roach", "honestly"]
(c2-3 / care-01
      :ARG0 (c2-0 / nobody)
      :ARG1 (c2-1 / roach
                  :mod (c2-4 / that))
      :ARG1-of (c2-2 / honest-01))

# ::snt So Rih allegedly unfollowing Jen's IG is not being pressed when she was never a thing with Aubrey to begin with? Hmmm
# ::tokens ["So", "Rih", "allegedly", "unfollowing", "Jen", "'s", "IG", "is", "not", "being", "pressed", "when", "she", "was", "never", "a", "thing", "with", "Aubrey", "to", "begin", "with", "?", "Hmmm"]
# ::lemmas ["so", "Rih", "allegedly", "unfollowe", "Jen", "'s", "IG", "be", "not", "be", "press", "when", "she", "be", "never", "a", "thing", "with", "Aubrey", "to", "begin", "with", "?", "hmmm"]
(c3-3 / multi-sentence
      :snt1 (c3-8 / press-01
                  :ARG1 (c3-4 / person
                              :name (c3-2 / name
                                          :op1 "Rih"))
                  :ARG2 (c3-0 / follow-02
                              :ARG0 c3-4
                              :ARG1 (c3-15 / publication
                                           :name (c3-7 / name
                                                       :op1 " IG")
                                           :poss (c3-11 / person
                                                        :name (c3-9 / name
                                                                    :op1 "Jen")))
                              :ARG1-of (c3-5 / allege-01))
                  :polarity (c3-14 / amr-unknown)
                  :time (c3-13 / thing
                               :prep-with (c3-16 / person
                                                 :name (c3-12 / name
                                                              :op1 "Aubrey"))
                               :domain c3-4
                               :time (c3-6 / ever)
                               :ARG2-of (c3-1 / begin-01)
                               :polarity -)
                  :polarity -)
      :snt2 (c3-10 / hmm
                   :mode expressive))

# ::snt yaaass
# ::tokens ["yaaass"]
# ::lemmas ["yaaass"]
(c4-0 / yaass)

# ::snt pls
# ::tokens ["pls"]
# ::lemmas ["pls"]
(c5-1 / person
      :name (c5-0 / name
                  :op1 "pls"))

# ::snt i live at dennys
# ::tokens ["i", "live", "at", "dennys"]
# ::lemmas ["i", "live", "at", "denny"]
(c6-2 / live-01
      :ARG0 (c6-3 / i)
      :location (c6-0 / city
                      :name (c6-1 / name
                                  :op1 "Dennys")))

# ::snt e ainda por cima apaga o Tweet que corvaede
# ::tokens ["e", "ainda", "por", "cima", "apaga", "o", "Tweet", "que", "corvaede"]
# ::lemmas ["e", "ainda", "por", "cima", "apaga", "o", "Tweet", "que", "corvaede"]
(c8-7 / ainda
      :ARG1-of (c8-4 / cause-01
                     :ARG0 (c8-3 / possible-01
                                 :ARG1 (c8-6 / apaga-00
                                             :ARG0 (c8-1 / person
                                                         :name (c8-0 / name
                                                                     :op1 "cia"))
                                             :ARG1 (c8-5 / thing
                                                         :ARG1-of (c8-9 / tweet-01)))))
      :ARG1-of (c8-2 / say-01
                     :ARG0 (c8-8 / i)))

# ::snt n klkkkk a cara preguia dessas pessoas
# ::tokens ["n", "klkkkk", "a", "cara", "preguia", "dessas", "pessoas"]
# ::lemmas ["n", "klkkkk", "a", "cara", "preguia", "dessas", "pessoas"]
(c9-2 / klkkkk
      :domain (c9-4 / cara
                    :mod (c9-3 / preguia)
                    :ARG0-of (c9-1 / have-03
                                   :ARG1 (c9-0 / pessoas)))
      :mode expressive)

# ::snt como voc venceu a corrida dos espermatozides?
# ::tokens ["como", "voc", "venceu", "a", "corrida", "dos", "espermatozides", "?"]
# ::lemmas ["como", "voc", "venceu", "a", "corrida", "do", "espermatozide", "?"]
(c10-0 / request-confirmation-91
       :ARG1 (c10-1 / venceu
                    :mod (c10-3 / vocifer)
                    :domain (c10-2 / corrida
                                   :mod (c10-4 / dos))))

# ::snt ai ela disse q s lixo vai e ai apagou o tweet
# ::tokens ["ai", "ela", "disse", "q", "s", "lixo", "vai", "e", "ai", "apagou", "o", "tweet"]
# ::lemmas ["ai", "ela", "disse", "q", "s", "lixo", "vai", "e", "ai", "apagou", "o", "tweet"]
(c11-1 / multi-sentence
       :snt1 (c11-5 / explain-01
                    :ARG0 (c11-6 / person
                                 :name (c11-2 / name
                                              :op1 "Ela"))
                    :ARG1 (c11-0 / you))
       :snt2 (c11-10 / and
                     :op1 (c11-4 / vai
                                 :ARG0 (c11-3 / person
                                              :name c11-2
                                              :op1 "Lixo")
                                 :polarity -))
       :op2 (c11-11 / possible-01
                    :ARG1 (c11-9 / apagou-00
                                 :ARG0 (c11-7 / person))
                    :polarity -)
       :op3 (c11-8 / tweet-02
                   :ARG0 c11-7))

# ::snt . Primeramebte quem essa who ?
# ::tokens [".", "Primeramebte", "quem", "essa", "who", "?"]
# ::lemmas [".", "Primeramebte", "quem", "essa", "who", "?"]
(c12-4 / amr-unknown
       :polarity (c12-3 / amr-unknown)
       :mod (c12-0 / primer)
       :ARG1-of (c12-1 / compare-01
                       :ARG2 (c12-2 / amr-unknown)))

# ::snt enfia londres inteiro e o james bay no seu nus LIXO DO UK
# ::tokens ["enfia", "londres", "inteiro", "e", "o", "james", "bay", "no", "seu", "nus", "LIXO", "DO", "UK"]
# ::lemmas ["enfia", "londre", "inteiro", "e", "o", "james", "bay", "no", "seu", "nus", "LIXO", "DO", "UK"]
(c13-2 / multi-sentence
       :snt1 (c13-0 / fia
                    :mod (c13-5 / londres)
                    :mod (c13-7 / inteiro
                                :mod (c13-6 / country
                                            :name (c13-3 / name
                                                         :op1 "France"))))
       :snt2 (c13-1 / bay
                    :mod (c13-8 / country
                                :name (c13-4 / name
                                             :op1 "UK"))
                    :polarity -))

# ::snt CALA BOCA FALSA AT APAGOU O TWEET
# ::tokens ["CALA", "BOCA", "FALSA", "AT", "APAGOU", "O", "TWEET"]
# ::lemmas ["cala", "BOCA", "FALSA", "AT", "APAGOU", "o", "tweet"]
(c14-0 / fight-off-02
       :ARG0 (c14-4 / city
                    :name (c14-1 / name
                                 :op1 "CALA"
                                 :op2 "BOCA"))
       :ARG1 (c14-3 / fish)
       :location (c14-5 / city
                        :name (c14-2 / name
                                     :op1 "APAGOU")))

# ::snt f do maconheiro flop
# ::tokens ["f", "do", "maconheiro", "flop"]
# ::lemmas ["f", "do", "maconheiro", "flop"]
(c15-0 / flop
       :mod (c15-2 / person
                   :name (c15-1 / name
                                :op1 "Maconheiro")))

# ::snt : Katy laugh at Rihanna's signing ": Rihanna's probably laughing her ass off at Katy Perrys dancing skills"
# ::tokens [":", "Katy", "laugh", "at", "Rihanna", "'s", "signing", "\"", ":", "Rihanna", "'s", "probably", "laughing", "her", "ass", "off", "at", "Katy", "Perrys", "dancing", "skills", "\""]
# ::lemmas [":", "Katy", "laugh", "at", "Rihanna", "'s", "signing", "\"", ":", "Rihanna", "'s", "probably", "laugh", "her", "ass", "off", "at", "Katy", "Perrys", "dancing", "skill", "\""]
(c16-8 / laugh-01
       :ARG0 (c16-7 / person
                    :name (c16-1 / name
                                 :op1 "Katy"))
       :ARG2 (c16-3 / sign-01
                    :ARG0 (c16-2 / person
                                 :name (c16-6 / name
                                              :op1 "Riyanna")))
       :ARG0-of (c16-4 / mean-01
                       :ARG1 (c16-11 / probable
                                     :domain (c16-13 / laugh-01
                                                     :ARG0 c16-2
                                                     :ARG2 (c16-0 / skill
                                                                  :mod (c16-12 / dance-01)
                                                                  :poss (c16-10 / person
                                                                                :name (c16-9 / name
                                                                                             :op1 "Katy"
                                                                                             :op2 "Perry")))
                                                     :degree (c16-5 / ass-off)))))

# ::snt it is horrific. Makes my ears bleed.
# ::tokens ["it", "is", "horrific", ".", "Makes", "my", "ears", "bleed", "."]
# ::lemmas ["it", "be", "horrific", ".", "make", "my", "ear", "bleed", "."]
(c17-1 / multi-sentence
       :snt1 (c17-5 / horrific
                    :domain (c17-6 / it))
       :snt2 (c17-4 / make-02
                    :ARG0 c17-6
                    :ARG1 (c17-0 / bleed-01
                                 :ARG1 (c17-3 / ear
                                              :part-of (c17-2 / i)))))

# ::snt Reporter should be called out. : Presser highlight: reporter's phone goes off to Rihanna "Only Girl in the World."
# ::tokens ["Reporter", "should", "be", "called", "out", ".", ":", "Presser", "highlight", ":", "reporter", "'s", "phone", "goes", "off", "to", "Rihanna", "\"", "Only", "Girl", "in", "the", "World", ".", "\""]
# ::lemmas ["reporter", "should", "be", "call", "out", ".", ":", "Presser", "highlight", ":", "reporter", "'s", "phone", "go", "off", "to", "Rihanna", "\"", "only", "Girl", "in", "the", "World", ".", "\""]
(c18-0 / multi-sentence
       :snt1 (c18-4 / recommend-01
                    :ARG1 (c18-10 / call-out-15
                                  :ARG1 (c18-6 / person
                                               :ARG0-of (c18-14 / report-01))))
       :snt2 (c18-5 / highlight-01
                    :ARG0 (c18-1 / person
                                 :ARG0-of (c18-9 / report-01))
                    :ARG1 (c18-13 / go-off-16
                                  :ARG1 (c18-12 / phone
                                                :poss c18-1)
                                  :ARG2 (c18-7 / music
                                               :name (c18-2 / name
                                                            :op1 "Only"
                                                            :op2 "Girl"
                                                            :op3 "in"
                                                            :op4 "the"
                                                            :op5 "World")
                                               :ARG1-of (c18-3 / sing-01
                                                               :ARG0 (c18-11 / person
                                                                             :name (c18-8 / name
                                                                                          :op1 "Rihanna")))))))

# ::snt THIS IS WHY WE NEED VIDEO!!
# ::tokens ["THIS", "IS", "WHY", "WE", "NEED", "VIDEO", "!", "!"]
# ::lemmas ["this", "be", "why", "we", "need", "video", "!", "!"]
(c19-2 / cause-01
       :ARG0 (c19-4 / this)
       :ARG1 (c19-0 / need-01
                    :ARG0 (c19-3 / we)
                    :ARG1 (c19-1 / video))
       :mode expressive)

# ::snt It is a very good song
# ::tokens ["It", "is", "a", "very", "good", "song"]
# ::lemmas ["it", "be", "a", "very", "good", "song"]
(c20-3 / song
       :ARG1-of (c20-0 / good-02
                       :degree (c20-1 / very))
       :domain (c20-2 / it))

# ::snt well! chubs legit went "ba ba ba" and it sounded just like the song omg, i can't stop laughing
# ::tokens ["well", "!", "chubs", "legit", "went", "\"", "ba", "ba", "ba", "\"", "and", "it", "sounded", "just", "like", "the", "song", "omg", ",", "i", "ca", "n't", "stop", "laughing"]
# ::lemmas ["well", "!", "chub", "legit", "go", "\"", "ba", "ba", "ba", "\"", "and", "it", "sound", "just", "like", "the", "song", "omg", ",", "i", "can", "not", "stop", "laugh"]
(c21-2 / multi-sentence
       :snt1 (c21-10 / and
                     :op1 (c21-11 / go-23
                                  :ARG0 (c21-7 / chubs)
                                  :ARG1 (c21-3 / string-entity
                                               :value "ba ba ba")
                                  :ARG1-of (c21-5 / legitimate-02))
                     :op2 (c21-0 / sound-01
                                 :ARG1 c21-3
                                 :ARG2 (c21-13 / song)
                                 :mod (c21-8 / just)))
       :snt2 (c21-6 / possible-01
                    :ARG1 (c21-4 / stop-01
                                 :ARG0 (c21-9 / i)
                                 :ARG1 (c21-12 / laugh-01
                                               :ARG0 c21-9))
                    :mod (c21-1 / oh
                                :mode expressive)
                    :polarity -))

# ::snt oh hoe
# ::tokens ["oh", "hoe"]
# ::lemmas ["oh", "hoe"]
(c22-0 / oh-hoe
       :mode expressive)

# ::snt Oh?
# ::tokens ["Oh", "?"]
# ::lemmas ["oh", "?"]
(c23-0 / oh
       :polarity (c23-1 / amr-unknown))

# ::snt : I'm laughing at this tweet. RT : I bet Rihanna is going to sing her ass off tonight.
# ::tokens [":", "I", "'m", "laughing", "at", "this", "tweet", ".", "RT", ":", "I", "bet", "Rihanna", "is", "going", "to", "sing", "her", "ass", "off", "tonight", "."]
# ::lemmas [":", "i", "be", "laugh", "at", "this", "tweet", ".", "RT", ":", "i", "bet", "Rihanna", "be", "go", "to", "sing", "her", "ass", "off", "tonight", "."]
(c24-3 / multi-sentence
       :snt1 (c24-11 / laugh-01
                     :ARG0 (c24-14 / i)
                     :ARG2 (c24-13 / thing
                                   :ARG1-of (c24-15 / tweet-01)
                                   :mod (c24-16 / this)))
       :snt2 (c24-5 / say-01
                    :ARG0 (c24-6 / i)
                    :ARG1 (c24-2 / bet-01
                                 :ARG0 c24-6
                                 :ARG2 (c24-0 / sing-01
                                              :ARG0 (c24-12 / person
                                                            :name (c24-4 / name
                                                                         :op1 "Rihanna")
                                                            :part (c24-7 / ass
                                                                         :mod (c24-1 / off)))
                                              :time (c24-17 / date-entity
                                                            :dayperiod (c24-10 / night)
                                                            :mod (c24-9 / today))))
                    :ARG2 (c24-8 / publication
                                 :name c24-4
                                 :op1 "RT")))

# ::snt Watch [RT] RNF - Extra Ft. Lil Fam
# ::tokens ["Watch", "[", "RT", "]", "RNF", "-", "Extra", "Ft", ".", "Lil", "Fam"]
# ::lemmas ["watch", "[", "rt", "]", "rnf", "-", "Extra", "Ft", ".", "Lil", "Fam"]
(c25-5 / watch-01
       :ARG1 (c25-0 / broadcast-program
                    :name (c25-1 / name
                                 :op1 "RNF"
                                 :op2 "Extra"
                                 :op3 "Ft."
                                 :op4 "Lilo"
                                 :op5 "Fam"))
       :ARG1-of (c25-4 / publication-91
                       :ARG4 (c25-2 / publication
                                    :name (c25-3 / name
                                                 :op1 "RT"))))

# ::snt shocking!!
# ::tokens ["shocking", "!", "!"]
# ::lemmas ["shocking", "!", "!"]
(c26-0 / shock-01
       :mode expressive)

# ::snt ... as if the producers even let this happen
# ::tokens ["...", "as", "if", "the", "producers", "even", "let", "this", "happen"]
# ::lemmas ["...", "as", "if", "the", "producer", "even", "let", "this", "happen"]
(c27-1 / resemble-01
       :ARG2 (c27-3 / let-01
                    :ARG0 (c27-4 / person
                                 :ARG0-of (c27-0 / produce-01))
                    :ARG1 (c27-5 / this)
                    :mod (c27-2 / even)))

# ::snt holy shit
# ::tokens ["holy", "shit"]
# ::lemmas ["holy", "shit"]
(c28-1 / shit
       :mod (c28-0 / holy)
       :mode expressive)

# ::snt loll, he even keeps the show going when he's dead!
# ::tokens ["loll", ",", "he", "even", "keeps", "the", "show", "going", "when", "he", "'s", "dead", "!"]
# ::lemmas ["loll", ",", "he", "even", "keep", "the", "show", "go", "when", "he", "be", "dead", "!"]
(c30-3 / keep-02
       :ARG0 (c30-2 / he)
       :ARG1 (c30-5 / go-on-15
                    :ARG1 (c30-0 / show-04))
       :mod (c30-1 / even)
       :time (c30-6 / die-01
                    :ARG1 c30-2)
       :mod (c30-4 / laugh-01
                   :manner (c30-7 / loud)
                   :mode expressive)
       :mode expressive)

# ::snt LOL
# ::tokens ["LOL"]
# ::lemmas ["LOL"]
(c32-1 / laugh-01
       :ARG0 (c32-2 / i)
       :manner (c32-0 / loud))

# ::snt lpl right!
# ::tokens ["lpl", "right", "!"]
# ::lemmas ["lpl", "right", "!"]
(c33-0 / right-06
       :mod (c33-2 / laugh-01
                   :ARG0 (c33-3 / i)
                   :manner (c33-1 / loud)
                   :mode expressive))

# ::snt LMFAO let her have her moment!
# ::tokens ["LMFAO", "let", "her", "have", "her", "moment", "!"]
# ::lemmas ["LMFAO", "let", "she", "have", "her", "moment", "!"]
(c34-4 / let-01
       :ARG0 (c34-5 / i
                    :part (c34-6 / ass
                                 :mod (c34-0 / fucking)))
       :ARG1 (c34-3 / have-03
                    :ARG0 (c34-2 / she)
                    :ARG1 (c34-1 / moment
                                 :poss c34-2))
       :mode expressive)

# ::snt Boooooooooooooooy!!!
# ::tokens ["Boooooooooooooooy", "!", "!", "!"]
# ::lemmas ["Boooooooooooooooy", "!", "!", "!"]
(c35-0 / booy
       :mode expressive)

# ::snt maw need to let go &amp; let God
# ::tokens ["maw", "need", "to", "let", "go", "&", "amp", ";", "let", "God"]
# ::lemmas ["maw", "need", "to", "let", "go", "&", "amp", ";", "let", "God"]
(c36-1 / multi-sentence
       :snt1 (c36-0 / need-01
                    :ARG0 (c36-6 / i)
                    :ARG1 (c36-4 / let-01
                                 :ARG0 c36-6
                                 :ARG1 (c36-7 / and
                                              :op1 (c36-8 / go-01
                                                          :ARG1 c36-6)
                                              :op2 (c36-9 / amp))))
       :snt2 (c36-10 / let-01
                     :ARG0 (c36-2 / i)
                     :ARG1 (c36-5 / person
                                  :name (c36-3 / name
                                               :op1 "God"))))

# ::snt lmfaoooo she acting all tough Bt she Gon cry ina Car
# ::tokens ["lmfaoooo", "she", "acting", "all", "tough", "Bt", "she", "Gon", "cry", "ina", "Car"]
# ::lemmas ["lmfaoooo", "she", "act", "all", "tough", "Bt", "she", "Gon", "cry", "ina", "car"]
(c37-2 / multi-sentence
       :snt1 (c37-4 / act-01
                    :ARG0 (c37-3 / she)
                    :ARG1 (c37-9 / tough-03
                                 :ARG1 c37-3
                                 :mod (c37-8 / all)))
       :snt2 (c37-6 / cry-02
                    :ARG0 (c37-0 / she)
                    :location (c37-12 / car)
                    :ARG1-of (c37-7 / cause-01
                                    :ARG0 (c37-1 / off
                                                 :domain c37-0)))
       :snt3 (c37-5 / laugh-01
                    :ARG0 (c37-10 / i)
                    :manner (c37-11 / loud)
                    :mode expressive))

# ::snt you mean she stunting for Twitter knowing she gone cry &amp; stay
# ::tokens ["you", "mean", "she", "stunting", "for", "Twitter", "knowing", "she", "gone", "cry", "&", "amp", ";", "stay"]
# ::lemmas ["you", "mean", "she", "stunt", "for", "Twitter", "know", "she", "go", "cry", "&", "amp", ";", "stay"]
(c38-2 / mean-01
       :ARG0 (c38-1 / you)
       :ARG2 (c38-4 / stun-01
                    :ARG0 (c38-0 / she)
                    :medium (c38-5 / publication
                                   :name (c38-3 / name
                                                :op1 "Twitter"))
                    :manner (c38-6 / know-01
                                   :ARG0 c38-0
                                   :ARG1 (c38-10 / go-02
                                                 :ARG0 c38-0
                                                 :ARG1 (c38-9 / and
                                                              :op1 (c38-7 / cry-02
                                                                          :ARG0 c38-0)
                                                              :op2 (c38-8 / amp))))
                    :ARG0-of (c38-11 / cause-01
                                     :ARG1 (c38-12 / stay-01
                                                   :ARG1 c38-0))))

# ::snt that's Goody for her I'm weak , &amp; the media don't make it no better Tho !
# ::tokens ["that", "'s", "Goody", "for", "her", "I", "'m", "weak", ",", "&", "amp", ";", "the", "media", "do", "n't", "make", "it", "no", "better", "Tho", "!"]
# ::lemmas ["that", "be", "Goody", "for", "she", "i", "be", "weak", ",", "&", "amp", ";", "the", "medium", "do", "not", "make", "it", "no", "well", "Tho", "!"]
(c39-0 / multi-sentence
       :snt1 (c39-10 / goody
                     :domain (c39-7 / that)
                     :beneficiary (c39-1 / she))
       :snt2 (c39-9 / and
                    :op1 (c39-6 / weak-02
                                :ARG1 (c39-8 / i))
                    :op2 (c39-11 / amp))
       :snt3 (c39-3 / make-02
                    :ARG0 (c39-13 / media)
                    :ARG1 (c39-2 / it)
                    :ARG2 (c39-12 / good-02
                                  :ARG2-of (c39-4 / have-degree-91
                                                  :ARG1 c39-2
                                                  :ARG3 (c39-5 / more)))
                    :polarity -)
       :snt4 c39-7
       :mode expressive)

# ::snt girl poor Karreuche I feel sorry for her he just Fxck all over that poor girl
# ::tokens ["girl", "poor", "Karreuche", "I", "feel", "sorry", "for", "her", "he", "just", "Fxck", "all", "over", "that", "poor", "girl"]
# ::lemmas ["girl", "poor", "Karreuche", "i", "feel", "sorry", "for", "she", "he", "just", "Fxck", "all", "over", "that", "poor", "girl"]
(c40-2 / multi-sentence
       :snt1 (c40-4 / say-01
                    :ARG0 (c40-9 / i)
                    :ARG1 (c40-0 / sorry-01
                                 :ARG1 c40-9
                                 :ARG2 (c40-11 / girl
                                               :name (c40-3 / name
                                                            :op1 "Karreuche")
                                               :mod (c40-7 / poor)
                                               :ARG2-of c40-4)))
       :snt2 (c40-1 / fuck-01
                    :ARG0 (c40-6 / he)
                    :ARG1 (c40-10 / girl
                                  :mod c40-7
                                  :mod (c40-8 / that))
                    :mod (c40-12 / just)
                    :degree (c40-5 / all-over)
                    :mode expressive))

# ::snt If she not , I Surely am
# ::tokens ["If", "she", "not", ",", "I", "Surely", "am"]
# ::lemmas ["if", "she", "not", ",", "i", "surely", "be"]
(c41-1 / have-condition-91
       :ARG1 (c41-3 / sure-02
                    :ARG0 (c41-2 / i))
       :ARG2 (c41-0 / she
                    :polarity -))

# ::snt And what happened to karrauche except her been famous and make millions.. He didn't abuse her.. He had sex with another girl when they broke and he want her back... Thats love
# ::tokens ["And", "what", "happened", "to", "karrauche", "except", "her", "been", "famous", "and", "make", "millions", "..", "He", "did", "n't", "abuse", "her", "..", "He", "had", "sex", "with", "another", "girl", "when", "they", "broke", "and", "he", "want", "her", "back", "...", "That", "s", "love"]
# ::lemmas ["and", "what", "happen", "to", "karrauche", "except", "she", "be", "famous", "and", "make", "millions", "..", "he", "do", "not", "abuse", "she", "..", "he", "have", "sex", "with", "another", "girl", "when", "they", "break", "and", "he", "want", "she", "back", "...", "that", "s", "love"]
(c42-11 / multi-sentence
        :snt1 (c42-7 / and
                     :op2 (c42-18 / except-01
                                  :ARG1 (c42-6 / and
                                               :op1 (c42-15 / fame-01
                                                            :ARG1 (c42-19 / person
                                                                          :name (c42-16 / name
                                                                                        :op1 "Karrauche")))
                                               :op2 (c42-3 / make-05
                                                           :ARG0 c42-19
                                                           :ARG1 (c42-14 / multiple
                                                                         :op1 (c42-12 / monetary-quantity
                                                                                      :unit (c42-17 / dollar)
                                                                                      :quant 1000000))))
                                  :ARG2 c42-19))
        :snt2 (c42-5 / abuse-01
                     :ARG0 (c42-4 / he)
                     :ARG1 c42-19
                     :polarity -)
        :snt3 (c42-23 / and
                      :op1 (c42-0 / sex-01
                                  :ARG0 (c42-22 / he)
                                  :ARG1 (c42-8 / girl
                                               :mod (c42-20 / another))
                                  :time (c42-10 / break-13
                                                :ARG1 (c42-9 / they)))
                      :op2 (c42-21 / want-01
                                   :ARG0 c42-22
                                   :ARG1 (c42-1 / back
                                                :domain c42-8)))
        :snt4 (c42-2 / love-01
                     :ARG1 (c42-13 / that)))

# ::snt wasn't that your th grade look??
# ::tokens ["was", "n't", "that", "your", "th", "grade", "look", "?", "?"]
# ::lemmas ["be", "not", "that", "your", "th", "grade", "look", "?", "?"]
(c43-3 / look-02
       :ARG0 (c43-4 / that)
       :ARG1 (c43-5 / grade
                    :ord (c43-0 / ordinal-entity
                                :value (c43-2 / value-interval
                                              :op1 2)))
       :polarity (c43-1 / amr-unknown))

# ::snt please do it
# ::tokens ["please", "do", "it"]
# ::lemmas ["please", "do", "it"]
(c44-0 / do-02
       :ARG0 (c44-1 / you)
       :ARG1 (c44-2 / it)
       :mode imperative
       :polite +)

# ::snt : WASTE, RAM,DUCK,KANGAROO,DONKEY,GORILLA!! Wow your names are beautiful
# ::tokens [":", "WASTE", ",", "RAM", ",", "DUCK", ",", "KANGAROO", ",", "DONKEY", ",", "GORILLA", "!", "!", "Wow", "your", "names", "are", "beautiful"]
# ::lemmas [":", "waste", ",", "RAM", ",", "DUCK", ",", "KANGAROO", ",", "DONKEY", ",", "GORILLA", "!", "!", "wow", "your", "name", "be", "beautiful"]
(c46-3 / multi-sentence
       :snt1 (c46-15 / and
                     :op1 (c46-10 / WASTE)
                     :op2 (c46-7 / person
                                 :name (c46-2 / name
                                              :op1 "Ram"))
                     :op3 (c46-4 / person
                                 :name (c46-6 / name
                                              :op1 "DUCK"))
                     :op4 (c46-16 / person
                                  :name (c46-8 / name
                                               :op1 "Kangaroo"))
                     :op5 (c46-11 / person
                                  :name (c46-12 / name
                                                :op1 "Donkey"))
                     :op6 (c46-14 / person
                                  :name (c46-13 / name
                                                :op1 "Gorilla")))
       :snt2 (c46-0 / beautiful-02
                    :ARG1 (c46-5 / name
                                 :poss (c46-1 / you))
                    :mod (c46-9 / wow
                                :mode expressive)))

# ::snt WASTE, RAM,DUCK,KANGAROO,DONKEY,GORILLA!!
# ::tokens ["WASTE", ",", "RAM", ",", "DUCK", ",", "KANGAROO", ",", "DONKEY", ",", "GORILLA", "!", "!"]
# ::lemmas ["WASTE", ",", "RAM", ",", "DUCK", ",", "KANGAROO", ",", "DONKEY", ",", "GORILLA", "!", "!"]
(c47-10 / and
        :op1 (c47-5 / wash-01)
        :op2 (c47-3 / person
                    :name (c47-0 / name
                                 :op1 "Ram"))
        :op3 (c47-1 / person
                    :name (c47-2 / name
                                 :op1 "DUCK"))
        :op4 (c47-11 / person
                     :name (c47-4 / name
                                  :op1 "Kangaroo"))
        :op5 (c47-6 / person
                    :name (c47-7 / name
                                 :op1 "Donkey"))
        :op6 (c47-9 / person
                    :name (c47-8 / name
                                 :op1 "Gorilla")))

# ::snt : always insults my Rihanna forehead , this bitch said LYFHO (Laughing Your Fore Head Off) smhmay God be with you!
# ::tokens [":", "always", "insults", "my", "Rihanna", "forehead", ",", "this", "bitch", "said", "LYFHO", "(", "Laughing", "Your", "Fore", "Head", "Off", ")", "smhmay", "God", "be", "with", "you", "!"]
# ::lemmas [":", "always", "insult", "my", "Rihanna", "forehead", ",", "this", "bitch", "say", "LYFHO", "(", "laugh", "your", "Fore", "Head", "Off", ")", "smhmay", "God", "be", "with", "you", "!"]
(c48-11 / multi-sentence
        :snt1 (c48-19 / insult-01
                      :ARG0 (c48-4 / i
                                   :part (c48-14 / forehead
                                                 :mod (c48-16 / person
                                                              :name (c48-15 / name
                                                                            :op1 "Rihanna"))
                                                 :ARG1-of c48-19))
                      :time (c48-9 / always))
        :snt2 (c48-0 / say-01
                     :ARG0 (c48-10 / bitch
                                   :mod (c48-8 / this))
                     :ARG1 (c48-18 / wish-01
                                   :ARG0 c48-10
                                   :ARG1 (c48-7 / accompany-01
                                                :ARG0 (c48-12 / person
                                                              :name (c48-13 / name
                                                                            :op1 "God"))
                                                :ARG1 (c48-3 / you
                                                             :part (c48-5 / head
                                                                          :mod (c48-17 / fore)))))
                     :ARG1-of (c48-6 / mean-01
                                     :ARG2 (c48-1 / laugh-01
                                                  :ARG0 c48-10
                                                  :manner (c48-2 / off)))))

# ::snt Hi, please send us a DM with your email address used and a brief description of how we can help. Thank you!
# ::tokens ["Hi", ",", "please", "send", "us", "a", "DM", "with", "your", "email", "address", "used", "and", "a", "brief", "description", "of", "how", "we", "can", "help", ".", "Thank", "you", "!"]
# ::lemmas ["hi", ",", "please", "send", "we", "a", "dm", "with", "your", "email", "address", "use", "and", "a", "brief", "description", "of", "how", "we", "can", "help", ".", "thank", "you", "!"]
(c49-2 / multi-sentence
       :snt1 (c49-5 / hi
                    :mode expressive)
       :snt2 (c49-3 / send-01
                    :ARG0 (c49-1 / you)
                    :ARG1 (c49-12 / and
                                  :op1 (c49-4 / email-address-entity
                                              :value "DM")
                                  :op2 (c49-14 / describe-01
                                               :ARG1 (c49-10 / thing
                                                             :manner-of (c49-9 / help-01
                                                                               :ARG0 (c49-8 / we)
                                                                               :ARG1-of (c49-6 / possible-01)))
                                               :mod (c49-0 / brief)))
                    :ARG2 (c49-7 / we)
                    :mode imperative
                    :polite +)
       :snt3 (c49-15 / thank-01
                     :ARG0 (c49-11 / i)
                     :ARG1 (c49-13 / you)
                     :mode expressive))

# ::snt Please send us a DM for further assistance. Sinemia Cardless is available to users who haven't received their cards yet. The latest version of the app should be installed.
# ::tokens ["Please", "send", "us", "a", "DM", "for", "further", "assistance", ".", "Sinemia", "Cardless", "is", "available", "to", "users", "who", "have", "n't", "received", "their", "cards", "yet", ".", "The", "latest", "version", "of", "the", "app", "should", "be", "installed", "."]
# ::lemmas ["please", "send", "we", "a", "DM", "for", "further", "assistance", ".", "Sinemia", "Cardless", "be", "available", "to", "user", "who", "have", "not", "receive", "their", "card", "yet", ".", "the", "late", "version", "of", "the", "app", "should", "be", "instal", "."]
(c50-9 / multi-sentence
       :snt1 (c50-0 / send-01
                    :ARG0 (c50-3 / you)
                    :ARG1 (c50-19 / DM)
                    :ARG2 (c50-17 / we)
                    :purpose (c50-7 / assist-01
                                    :ARG0 c50-3
                                    :degree (c50-13 / further))
                    :mode imperative
                    :polite +)
       :snt2 (c50-6 / available-02
                    :ARG1 (c50-16 / person
                                  :ARG0-of (c50-12 / use-01)
                                  :ARG0-of (c50-15 / receive-01
                                                   :ARG1 (c50-11 / card
                                                                 :poss c50-16)
                                                   :time (c50-8 / yet)
                                                   :polarity -))
                    :ARG2 (c50-10 / product
                                  :name (c50-14 / name
                                                :op1 "Sinemia"
                                                :op2 "Cardless")))
       :snt3 (c50-2 / recommend-01
                    :ARG1 (c50-18 / install-01
                                  :ARG1 (c50-4 / version
                                               :mod (c50-1 / last)
                                               :mod (c50-5 / app)))))
