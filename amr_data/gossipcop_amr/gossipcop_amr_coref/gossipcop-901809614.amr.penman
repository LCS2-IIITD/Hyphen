# ::snt Si wey
# ::tokens ["Si", "wey"]
# ::lemmas ["Si", "wey"]
(c1-0 / si)

# ::snt This Kremlin Con Don rag paper Insulted Hillary Clinton with Dick Morris stories Every Issue but Nothing on Putin's Russian Drumpf
# ::tokens ["This", "Kremlin", "Con", "Don", "rag", "paper", "Insulted", "Hillary", "Clinton", "with", "Dick", "Morris", "stories", "Every", "Issue", "but", "Nothing", "on", "Putin", "'s", "Russian", "Drumpf"]
# ::lemmas ["this", "Kremlin", "Con", "Don", "rag", "paper", "Insulted", "Hillary", "Clinton", "with", "Dick", "Morris", "story", "every", "Issue", "but", "nothing", "on", "Putin", "'s", "russian", "Drumpf"]
(c2-20 / insult-01
       :ARG0 (c2-17 / paper
                    :mod (c2-15 / rag)
                    :mod (c2-6 / this)
                    :mod (c2-7 / government-organization
                               :name (c2-14 / name
                                            :op1 "Kremlin"))
                    :mod (c2-10 / person
                                :name (c2-11 / name
                                             :op1 "Don")))
       :ARG1 (c2-4 / person
                   :name (c2-18 / name
                                :op1 "Hillary"
                                :op2 "Clinton"))
       :instrument (c2-0 / story
                         :mod (c2-9 / magazine
                                    :name (c2-13 / name
                                                 :op1 "Every"
                                                 :op2 "Issue"))
                         :mod (c2-3 / person
                                    :name (c2-19 / name
                                                 :op1 "Dick"
                                                 :op2 "Morris")))
       :ARG1-of (c2-12 / contrast-01
                       :ARG2 (c2-16 / nothing
                                    :topic (c2-21 / drumfume
                                                  :poss (c2-5 / person
                                                              :name (c2-2 / name
                                                                          :op1 "Putin"))
                                                  :mod (c2-8 / country
                                                             :name (c2-1 / name
                                                                         :op1 "Russia"))))))

# ::snt Say what!! You mean she's not pregnant in this issue!?
# ::tokens ["Say", "what", "!", "!", "You", "mean", "she", "'s", "not", "pregnant", "in", "this", "issue", "!", "?"]
# ::lemmas ["say", "what", "!", "!", "you", "mean", "she", "be", "not", "pregnant", "in", "this", "issue", "!", "?"]
(c3-2 / multi-sentence
      :snt1 (c3-3 / say-01
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-9 / thing)
                  :mode imperative)
      :snt2 (c3-6 / mean-01
                  :ARG0 (c3-10 / you)
                  :ARG2 (c3-8 / impregnate-01
                              :ARG1 (c3-0 / she)
                              :ARG1-of (c3-7 / cause-01
                                             :ARG0 (c3-4 / issue-02
                                                         :mod (c3-11 / this)))
                              :polarity -)
                  :polarity (c3-5 / amr-unknown)))

# ::snt Did she buy new boobs?? She used to be flat
# ::tokens ["Did", "she", "buy", "new", "boobs", "?", "?", "She", "used", "to", "be", "flat"]
# ::lemmas ["do", "she", "buy", "new", "boob", "?", "?", "she", "use", "to", "be", "flat"]
(c4-3 / multi-sentence
      :snt1 (c4-2 / buy-01
                  :polarity (c4-7 / amr-unknown)
                  :ARG0 (c4-5 / she)
                  :ARG1 (c4-6 / boob
                              :ARG1-of (c4-4 / new-01)))
      :snt2 (c4-0 / flat-03
                  :ARG1 (c4-1 / she)
                  :time (c4-8 / use-03)))

# ::snt Right?!
# ::tokens ["Right", "?", "!"]
# ::lemmas ["right", "?", "!"]
(c5-0 / request-confirmation-91)

# ::snt Dig that!! what's going on
# ::tokens ["Dig", "that", "!", "!", "what", "'s", "going", "on"]
# ::lemmas ["dig", "that", "!", "!", "what", "be", "go", "on"]
(c7-1 / multi-sentence
      :snt1 (c7-5 / dig-01
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-4 / that)
                  :mode imperative)
      :snt2 (c7-3 / event
                  :mod (c7-2 / amr-unknown)))

# ::snt Is Brad Pitt separated ?
# ::tokens ["Is", "Brad", "Pitt", "separated", "?"]
# ::lemmas ["be", "Brad", "Pitt", "separate", "?"]
(c8-3 / separate-01
      :ARG1 (c8-2 / person
                  :name (c8-1 / name
                              :op1 "Brad"
                              :op2 "Pitt"))
      :polarity (c8-0 / amr-unknown))

# ::snt That's good to know. It's been keeping me awake at night..
# ::tokens ["That", "'s", "good", "to", "know", ".", "It", "'s", "been", "keeping", "me", "awake", "at", "night", ".."]
# ::lemmas ["that", "be", "good", "to", "know", ".", "it", "be", "be", "keep", "i", "awake", "at", "night", ".."]
(c9-0 / multi-sentence
      :snt1 (c9-7 / good-02
                  :ARG1 (c9-4 / know-01))
      :snt2 (c9-8 / keep-02
                  :ARG0 (c9-5 / it)
                  :ARG1 (c9-6 / awake-03
                              :ARG1 (c9-2 / i)
                              :time (c9-3 / date-entity
                                          :dayperiod (c9-1 / night)))))

# ::snt Who knows, maybe Brad is really the guy for her . Hes free!
# ::tokens ["Who", "knows", ",", "maybe", "Brad", "is", "really", "the", "guy", "for", "her", ".", "He", "s", "free", "!"]
# ::lemmas ["who", "know", ",", "maybe", "Brad", "be", "really", "the", "guy", "for", "she", ".", "he", "s", "free", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-8 / know-01
                    :ARG0 (c10-9 / amr-unknown))
       :snt2 (c10-7 / possible-01
                    :ARG1 (c10-10 / guy
                                  :domain (c10-2 / person
                                                 :name (c10-3 / name
                                                              :op1 "Brad"))
                                  :ARG1-of (c10-5 / real-04)
                                  :beneficiary (c10-4 / she)))
       :snt3 (c10-0 / free-04
                    :ARG1 (c10-6 / he)))

# ::snt Are you serious . Our children are being shot at school &amp; you think we are heartbroken about these two? How out of touch are you? You should be ashamed to tweet something like that when we have dead people in Parkland.
# ::tokens ["Are", "you", "serious", ".", "Our", "children", "are", "being", "shot", "at", "school", "&", "amp", ";", "you", "think", "we", "are", "heartbroken", "about", "these", "two", "?", "How", "out", "of", "touch", "are", "you", "?", "You", "should", "be", "ashamed", "to", "tweet", "something", "like", "that", "when", "we", "have", "dead", "people", "in", "Parkland", "."]
# ::lemmas ["be", "you", "serious", ".", "our", "child", "be", "be", "shoot", "at", "school", "&", "amp", ";", "you", "think", "we", "be", "heartbroken", "about", "these", "two", "?", "how", "out", "of", "touch", "be", "you", "?", "you", "should", "be", "ashamed", "to", "tweet", "something", "like", "that", "when", "we", "have", "dead", "people", "in", "Parkland", "."]
(c11-17 / multi-sentence
        :snt1 (c11-0 / serious-01
                     :ARG1 (c11-10 / you))
        :snt2 (c11-14 / and
                      :op1 (c11-9 / shoot-02
                                  :ARG1 (c11-24 / person
                                                :ARG0-of (c11-11 / have-rel-role-91
                                                                 :ARG1 (c11-25 / we)
                                                                 :ARG2 (c11-19 / child)))
                                  :location (c11-7 / school))
                      :op2 (c11-13 / think-01
                                   :ARG0 (c11-15 / you)
                                   :ARG1 (c11-16 / break-heart-31
                                                 :ARG1 (c11-3 / we)
                                                 :ARG2 (c11-18 / person
                                                               :mod (c11-20 / this)
                                                               :quant 2))))
        :snt3 (c11-27 / in-touch-11
                      :ARG1 (c11-8 / you)
                      :degree (c11-12 / amr-unknown)
                      :polarity -)
        :snt4 (c11-23 / recommend-01
                      :ARG1 (c11-22 / shame-02
                                    :ARG0 (c11-28 / tweet-02
                                                  :ARG0 c11-8
                                                  :ARG1 (c11-1 / something
                                                               :ARG1-of (c11-6 / resemble-01
                                                                               :ARG2 (c11-2 / that))))
                                    :ARG1 c11-8
                                    :time (c11-26 / have-03
                                                  :ARG0 (c11-21 / we)
                                                  :ARG1 (c11-5 / person
                                                               :ARG1-of (c11-29 / die-01))
                                                  :location (c11-4 / parkland)))
                      :ARG2 c11-8))

# ::snt What in the world happened? I'm saddened by this news.
# ::tokens ["What", "in", "the", "world", "happened", "?", "I", "'m", "saddened", "by", "this", "news", "."]
# ::lemmas ["what", "in", "the", "world", "happen", "?", "i", "be", "sadden", "by", "this", "news", "."]
(c12-1 / multi-sentence
       :snt1 (c12-3 / event
                    :location (c12-4 / world))
       :snt2 (c12-2 / sadden-01
                    :ARG0 (c12-0 / news
                                 :mod (c12-6 / this))
                    :ARG1 (c12-5 / i)))

# ::snt Who cares about them when young students are gone, by a craze young man who open fire at Parkland.
# ::tokens ["Who", "cares", "about", "them", "when", "young", "students", "are", "gone", ",", "by", "a", "craze", "young", "man", "who", "open", "fire", "at", "Parkland", "."]
# ::lemmas ["who", "care", "about", "they", "when", "young", "student", "be", "go", ",", "by", "a", "craze", "young", "man", "who", "open", "fire", "at", "Parkland", "."]
(c13-7 / care-01
       :ARG0 (c13-5 / amr-unknown)
       :ARG1 (c13-9 / they)
       :time (c13-10 / go-02
                     :ARG0 (c13-6 / person
                                  :mod (c13-1 / young)
                                  :ARG0-of (c13-4 / study-01))
                     :ARG1-of (c13-12 / cause-01
                                      :ARG0 (c13-2 / man
                                                   :mod (c13-11 / young)
                                                   :ARG1-of (c13-8 / craze-01)
                                                   :ARG0-of (c13-0 / open-fire-06
                                                                   :location (c13-3 / parkland))))))

# ::snt Why. Why. Why?
# ::tokens ["Why", ".", "Why", ".", "Why", "?"]
# ::lemmas ["why", ".", "why", ".", "why", "?"]
(c14-0 / multi-sentence
       :snt1 (c14-1 / cause-01
                    :ARG0 (c14-3 / amr-unknown))
       :snt2 (c14-4 / cause-01
                    :ARG0 (c14-2 / amr-unknown)))

# ::snt Er...A writer and actor married to Jennifer Aniston. They have just split up. It's all over the news you know?
# ::tokens ["Er", "...", "A", "writer", "and", "actor", "married", "to", "Jennifer", "Aniston", ".", "They", "have", "just", "split", "up", ".", "It", "'s", "all", "over", "the", "news", "you", "know", "?"]
# ::lemmas ["er", "...", "a", "writer", "and", "actor", "marry", "to", "Jennifer", "Aniston", ".", "they", "have", "just", "split", "up", ".", "it", "be", "all", "over", "the", "news", "you", "know", "?"]
(c15-2 / multi-sentence
       :snt1 (c15-6 / marry-01
                    :ARG1 (c15-7 / person
                                 :ARG0-of (c15-10 / write-01)
                                 :ARG0-of (c15-14 / act-01))
                    :ARG2 (c15-3 / person
                                 :name (c15-4 / name
                                              :op1 "Jennifer"
                                              :op2 "Aniston")))
       :snt2 (c15-5 / split-up-03
                    :ARG1 (c15-12 / they)
                    :mod (c15-13 / just))
       :snt3 (c15-0 / be-located-at-91
                    :ARG1 (c15-15 / it)
                    :ARG2 (c15-16 / all-over
                                  :op1 (c15-8 / news))
                    :ARG1-of (c15-9 / know-01
                                    :ARG0 (c15-1 / you)
                                    :polarity (c15-11 / amr-unknown))))

# ::snt Who in the Hell is Justin Theroux?
# ::tokens ["Who", "in", "the", "Hell", "is", "Justin", "Theroux", "?"]
# ::lemmas ["who", "in", "the", "Hell", "be", "Justin", "Theroux", "?"]
(c16-2 / person
       :name (c16-0 / name
                    :op1 "Justin"
                    :op2 "Theroux")
       :mod (c16-3 / amr-unknown
                   :mod (c16-1 / hell
                               :mode expressive)))

# ::snt More things to be heartbroken about than that
# ::tokens ["More", "things", "to", "be", "heartbroken", "about", "than", "that"]
# ::lemmas ["more", "thing", "to", "be", "heartbroken", "about", "than", "that"]
(c17-3 / thing
       :ARG2-of (c17-0 / break-heart-31)
       :ARG1-of (c17-2 / have-quant-91
                       :ARG3 (c17-1 / more)
                       :ARG4 (c17-4 / that)))

# ::snt Um, no.
# ::tokens ["Um", ",", "no", "."]
# ::lemmas ["um", ",", "no", "."]
(c18-1 / no
       :mod (c18-0 / um
                   :mode expressive))

# ::snt Really Twitter? Heartbroken? No one should be surprised!
# ::tokens ["Really", "Twitter", "?", "Heartbroken", "?", "No", "one", "should", "be", "surprised", "!"]
# ::lemmas ["really", "Twitter", "?", "Heartbroken", "?", "no", "one", "should", "be", "surprise", "!"]
(c19-2 / multi-sentence
       :snt1 (c19-6 / publication
                    :name (c19-1 / name
                                 :op1 "Twitter")
                    :ARG1-of (c19-4 / real-04)
                    :polarity (c19-8 / amr-unknown))
       :snt2 (c19-0 / break-heart-31
                    :polarity (c19-7 / amr-unknown))
       :snt3 (c19-9 / recommend-01
                    :ARG1 (c19-3 / surprise-01
                                 :ARG1 (c19-5 / no-one
                                              :ARG2-of c19-9))))

# ::snt EW: Twitter, please be heartbroken!
# ::tokens ["EW", ":", "Twitter", ",", "please", "be", "heartbroken", "!"]
# ::lemmas ["EW", ":", "Twitter", ",", "please", "be", "heartbroken", "!"]
(c20-3 / say-01
       :ARG0 (c20-5 / person
                    :name (c20-1 / name
                                 :op1 "EW"))
       :ARG1 (c20-0 / break-heart-31
                    :ARG0 (c20-2 / publication
                                 :name (c20-4 / name
                                              :op1 "Twitter")
                                 :ARG2-of c20-3)
                    :mode imperative
                    :polite +))

# ::snt Heartbroken please !!! Get real with what just happened in Florida
# ::tokens ["Heartbroken", "please", "!", "!", "!", "Get", "real", "with", "what", "just", "happened", "in", "Florida"]
# ::lemmas ["heartbroken", "please", "!", "!", "!", "get", "real", "with", "what", "just", "happen", "in", "Florida"]
(c21-2 / multi-sentence
       :snt1 (c21-0 / break-heart-31
                    :polite +)
       :snt2 (c21-5 / real-04
                    :ARG1 (c21-1 / you)
                    :ARG2 (c21-6 / event
                                 :location (c21-4 / state
                                                  :name (c21-3 / name
                                                               :op1 "Florida"))
                                 :mod (c21-7 / just))
                    :mode imperative))

# ::snt They are beautiful together. But individually they are beautiful people. May they both find their happiness I am one of you fans
# ::tokens ["They", "are", "beautiful", "together", ".", "But", "individually", "they", "are", "beautiful", "people", ".", "May", "they", "both", "find", "their", "happiness", "I", "am", "one", "of", "you", "fans"]
# ::lemmas ["they", "be", "beautiful", "together", ".", "but", "individually", "they", "be", "beautiful", "people", ".", "may", "they", "both", "find", "their", "happiness", "i", "be", "one", "of", "you", "fan"]
(c22-3 / multi-sentence
       :snt1 (c22-1 / beautiful-02
                    :ARG1 (c22-12 / they)
                    :mod (c22-14 / together))
       :snt2 (c22-10 / contrast-01
                     :ARG2 (c22-6 / beautiful-02
                                  :ARG1 (c22-7 / person
                                               :domain (c22-13 / they
                                                               :mod (c22-17 / both)))
                                  :manner (c22-15 / individual)))
       :snt3 (c22-11 / wish-01
                     :ARG1 (c22-0 / find-01
                                  :ARG0 (c22-5 / they)
                                  :ARG1 (c22-8 / happy-01
                                               :ARG1 c22-5)))
       :snt4 (c22-4 / include-91
                    :ARG1 (c22-16 / i)
                    :ARG2 (c22-2 / you
                                 :mod (c22-9 / fan))))

# ::snt We are too!
# ::tokens ["We", "are", "too", "!"]
# ::lemmas ["we", "be", "too", "!"]
(c23-0 / we
       :mod (c23-1 / too))

# ::snt Unless they can help with lets move on and let them deal with their personal issues.
# ::tokens ["Unless", "they", "can", "help", "with", "lets", "move", "on", "and", "let", "them", "deal", "with", "their", "personal", "issues", "."]
# ::lemmas ["unless", "they", "can", "help", "with", "let", "move", "on", "and", "let", "they", "deal", "with", "their", "personal", "issue", "."]
(c24-2 / have-condition-91
       :ARG1 (c24-9 / and
                    :op1 (c24-0 / move-01
                                :ARG0 (c24-5 / we
                                             :ARG1-of c24-0)
                                :mode imperative)
                    :op2 (c24-3 / let-01
                                :ARG0 c24-5
                                :ARG1 (c24-10 / deal-01
                                              :ARG0 (c24-7 / they)
                                              :ARG2 (c24-8 / issue-02
                                                           :ARG1 c24-7
                                                           :ARG1-of (c24-4 / personal-02)))
                                :mode imperative))
       :ARG2 (c24-1 / possible-01
                    :ARG1 (c24-6 / help-01
                                 :ARG0 c24-7)))

# ::snt No one cares about this right now . Read the room
# ::tokens ["No", "one", "cares", "about", "this", "right", "now", ".", "Read", "the", "room"]
# ::lemmas ["no", "one", "care", "about", "this", "right", "now", ".", "read", "the", "room"]
(c25-2 / multi-sentence
       :snt1 (c25-6 / care-01
                    :ARG0 (c25-1 / no-one)
                    :ARG1 (c25-7 / this)
                    :time (c25-4 / now
                                 :mod (c25-3 / right)))
       :snt2 (c25-8 / read-01
                    :ARG0 (c25-0 / you)
                    :ARG1 (c25-5 / room)
                    :mode imperative))

# ::snt Huh
# ::tokens ["Huh"]
# ::lemmas ["huh"]
(c26-0 / amr-unintelligible
       :value "Huh")

# ::snt Heartbroken? Really? Do you know what that word really means?
# ::tokens ["Heartbroken", "?", "Really", "?", "Do", "you", "know", "what", "that", "word", "really", "means", "?"]
# ::lemmas ["Heartbroken", "?", "really", "?", "do", "you", "know", "what", "that", "word", "really", "mean", "?"]
(c27-2 / multi-sentence
       :snt1 (c27-0 / break-heart-31
                    :polarity (c27-9 / amr-unknown)
                    :ARG1-of (c27-3 / real-04))
       :snt2 (c27-5 / know-01
                    :ARG0 (c27-1 / you)
                    :ARG1 (c27-7 / thing
                                 :ARG2-of (c27-4 / mean-01
                                                 :ARG1 (c27-6 / word
                                                              :mod (c27-11 / that))
                                                 :ARG1-of (c27-10 / real-04)))
                    :polarity (c27-8 / amr-unknown)))

# ::snt People got shot st school yesterday. They are just fine!
# ::tokens ["People", "got", "shot", "st", "school", "yesterday", ".", "They", "are", "just", "fine", "!"]
# ::lemmas ["people", "got", "shoot", "st", "school", "yesterday", ".", "they", "be", "just", "fine", "!"]
(c29-3 / multi-sentence
       :snt1 (c29-4 / shoot-02
                    :ARG1 (c29-5 / person)
                    :location (c29-0 / school)
                    :time (c29-2 / yesterday))
       :snt2 (c29-1 / fine-04
                    :ARG1 (c29-7 / they)
                    :mod (c29-6 / just)))

# ::snt Brad Pitt in six months book it,
# ::tokens ["Brad", "Pitt", "in", "six", "months", "book", "it", ","]
# ::lemmas ["Brad", "Pitt", "in", "six", "months", "book", "it", ","]
(c30-0 / book-03
       :ARG0 (c30-3 / person
                    :name (c30-1 / name
                                 :op1 "Brad"
                                 :op2 "Pitt"))
       :ARG1 (c30-4 / it)
       :duration (c30-5 / temporal-quantity
                        :unit (c30-2 / month)
                        :quant 6)
       :mode imperative)

# ::snt After what happened yesterday in Florida,no one gives a fuck about Jennifer Aniston and Justin Theroux.
# ::tokens ["After", "what", "happened", "yesterday", "in", "Florida", ",", "no", "one", "gives", "a", "fuck", "about", "Jennifer", "Aniston", "and", "Justin", "Theroux", "."]
# ::lemmas ["after", "what", "happen", "yesterday", "in", "Florida", ",", "no", "one", "give", "a", "fuck", "about", "Jennifer", "Aniston", "and", "Justin", "Theroux", "."]
(c31-12 / give-16
        :ARG0 (c31-2 / no-one)
        :ARG1 (c31-0 / fuck)
        :ARG2 (c31-11 / and
                      :op1 (c31-7 / person
                                  :name (c31-6 / name
                                               :op1 "Jennifer"
                                               :op2 "Aniston"))
                      :op2 (c31-3 / person
                                  :name (c31-8 / name
                                               :op1 "Justin"
                                               :op2 "Theroux")))
        :time (c31-10 / after
                      :op1 (c31-5 / event
                                  :location (c31-4 / state
                                                   :name (c31-9 / name
                                                                :op1 "Florida"))
                                  :time (c31-1 / yesterday))))

# ::snt Too bad, they were a beautiful couple!
# ::tokens ["Too", "bad", ",", "they", "were", "a", "beautiful", "couple", "!"]
# ::lemmas ["too", "bad", ",", "they", "be", "a", "beautiful", "couple", "!"]
(c32-1 / have-degree-91
       :ARG1 (c32-3 / couple
                    :domain (c32-4 / they)
                    :ARG1-of (c32-0 / beautiful-02))
       :ARG2 (c32-2 / bad-07
                    :ARG1 c32-3)
       :ARG3 (c32-5 / too))

# ::snt Never thought that this would even happen. Duh!She was with this man on the rebound. You know that this was going to happen.
# ::tokens ["Never", "thought", "that", "this", "would", "even", "happen", ".", "Duh!She", "was", "with", "this", "man", "on", "the", "rebound", ".", "You", "know", "that", "this", "was", "going", "to", "happen", "."]
# ::lemmas ["never", "think", "that", "this", "would", "even", "happen", ".", "duh!she", "be", "with", "this", "man", "on", "the", "rebound", ".", "you", "know", "that", "this", "be", "go", "to", "happen", "."]
(c33-2 / multi-sentence
       :snt1 (c33-12 / think-01
                     :ARG0 (c33-11 / i)
                     :ARG1 (c33-6 / event
                                  :mod (c33-14 / even)
                                  :mod (c33-15 / this))
                     :time (c33-9 / ever)
                     :polarity -)
       :snt2 (c33-0 / be-with-10
                    :ARG0 (c33-3 / she)
                    :ARG1 (c33-7 / man
                                 :mod (c33-13 / this)
                                 :ARG1-of (c33-4 / rebound-01))
                    :mod (c33-5 / duh
                                :mode expressive))
       :snt3 (c33-8 / know-01
                    :ARG0 (c33-1 / you)
                    :ARG1 (c33-10 / this)))

# ::snt Who cares! Theyre always breaking up. Its never a surprise. They will all divorce at some point. Watch, Amy will separate too very soon. Lol!!
# ::tokens ["Who", "cares", "!", "They", "re", "always", "breaking", "up", ".", "Its", "never", "a", "surprise", ".", "They", "will", "all", "divorce", "at", "some", "point", ".", "Watch", ",", "Amy", "will", "separate", "too", "very", "soon", ".", "Lol", "!", "!"]
# ::lemmas ["who", "care", "!", "they", "re", "always", "break", "up", ".", "its", "never", "a", "surprise", ".", "they", "will", "all", "divorce", "at", "some", "point", ".", "Watch", ",", "Amy", "will", "separate", "too", "very", "soon", ".", "Lol", "!", "!"]
(c34-13 / multi-sentence
        :snt1 (c34-15 / care-01
                      :ARG0 (c34-8 / amr-unknown))
        :snt2 (c34-12 / break-up-08
                      :ARG1 (c34-9 / they)
                      :time (c34-7 / always))
        :snt3 (c34-0 / surprise-01
                     :ARG0 (c34-22 / it)
                     :time (c34-19 / ever)
                     :polarity -)
        :snt4 (c34-24 / divorce-01
                      :ARG0 (c34-16 / they
                                    :mod (c34-6 / all))
                      :time (c34-20 / point
                                    :mod (c34-3 / some)))
        :snt5 (c34-21 / watch-out-02
                      :ARG0 (c34-4 / you)
                      :ARG1-of (c34-11 / cause-01
                                       :ARG0 (c34-2 / separate-01
                                                    :ARG1 (c34-14 / person
                                                                  :name (c34-17 / name
                                                                                :op1 "Amy"))
                                                    :time (c34-18 / soon
                                                                  :ARG2-of (c34-5 / have-degree-91
                                                                                  :ARG1 c34-2
                                                                                  :ARG3 (c34-23 / too)))))
                      :mode imperative)
        :snt6 (c34-1 / laugh-01
                     :manner (c34-10 / loud)
                     :mode expressive))

# ::snt I have no idea who the fuck he is.
# ::tokens ["I", "have", "no", "idea", "who", "the", "fuck", "he", "is", "."]
# ::lemmas ["i", "have", "no", "idea", "who", "the", "fuck", "he", "be", "."]
(c35-2 / have-03
       :ARG0 (c35-5 / i)
       :ARG1 (c35-1 / idea
                    :topic (c35-3 / person
                                  :domain (c35-4 / he)
                                  :mod (c35-0 / fuck
                                              :mode expressive)))
       :polarity -)

# ::snt Parkland now this! When will it end...
# ::tokens ["Parkland", "now", "this", "!", "When", "will", "it", "end", "..."]
# ::lemmas ["Parkland", "now", "this", "!", "when", "will", "it", "end", "..."]
(c36-1 / multi-sentence
       :snt1 (c36-4 / parkland
                    :time (c36-0 / now)
                    :mod (c36-6 / this))
       :snt2 (c36-3 / end-01
                    :ARG1 (c36-5 / it)
                    :time (c36-2 / amr-unknown)))

# ::snt Who gives a shit
# ::tokens ["Who", "gives", "a", "shit"]
# ::lemmas ["who", "give", "a", "shit"]
(c37-0 / give-16
       :ARG0 (c37-2 / amr-unknown)
       :ARG1 (c37-1 / shit))

# ::snt nope. I could care less
# ::tokens ["nope", ".", "I", "could", "care", "less"]
# ::lemmas ["nope", ".", "i", "could", "care", "less"]
(c38-1 / multi-sentence
       :snt1 (c38-0 / nope)
       :snt2 (c38-3 / possible-01
                    :ARG1 (c38-5 / care-01
                                 :ARG0 (c38-6 / i)
                                 :ARG1-of (c38-2 / have-quant-91
                                                 :ARG3 (c38-4 / less)))))

# ::snt Oh no! Hookup with Brad again?
# ::tokens ["Oh", "no", "!", "Hookup", "with", "Brad", "again", "?"]
# ::lemmas ["oh", "no", "!", "Hookup", "with", "Brad", "again", "?"]
(c39-2 / multi-sentence
       :snt1 (c39-0 / oh-no
                    :mode expressive)
       :snt2 (c39-3 / hook-up-02
                    :ARG1 (c39-4 / person
                                 :name (c39-1 / name
                                              :op1 "Brad"))
                    :polarity (c39-6 / amr-unknown)
                    :mod (c39-5 / again)))

# ::snt Does anyone really care?
# ::tokens ["Does", "anyone", "really", "care", "?"]
# ::lemmas ["do", "anyone", "really", "care", "?"]
(c40-0 / care-01
       :polarity (c40-3 / amr-unknown)
       :ARG0 (c40-2 / anyone)
       :ARG1-of (c40-1 / real-04))

# ::snt not at all. People are upset over things that are personally effecting them. Gun violence? Massive opioid epidemic? Universally shitty people?
# ::tokens ["not", "at", "all", ".", "People", "are", "upset", "over", "things", "that", "are", "personally", "effecting", "them", ".", "Gun", "violence", "?", "Massive", "opioid", "epidemic", "?", "Universally", "shitty", "people", "?"]
# ::lemmas ["not", "at", "all", ".", "people", "be", "upset", "over", "thing", "that", "be", "personally", "effect", "they", ".", "Gun", "violence", "?", "massive", "opioid", "epidemic", "?", "universally", "shitty", "people", "?"]
(c41-1 / multi-sentence
       :snt1 (c41-7 / have-polarity-91
                    :degree (c41-4 / at-all)
                    :ARG2 -)
       :snt2 (c41-16 / upset-01
                     :ARG0 (c41-14 / thing
                                   :ARG0-of (c41-13 / affect-01
                                                    :ARG1 (c41-8 / person)
                                                    :manner (c41-2 / personal-02)))
                     :ARG1 c41-8)
       :snt3 (c41-5 / violence
                    :instrument (c41-15 / gun))
       :snt4 (c41-6 / epidemic
                    :mod (c41-9 / massive)
                    :mod (c41-0 / opiate-01))
       :snt5 (c41-12 / person
                     :mod (c41-3 / shitty
                                 :mod (c41-10 / universal)))
       :polarity (c41-11 / amr-unknown))

# ::snt I would think Twitter would be heartbroken about the th school shooting this year or the innocent who died...
# ::tokens ["I", "would", "think", "Twitter", "would", "be", "heartbroken", "about", "the", "th", "school", "shooting", "this", "year", "or", "the", "innocent", "who", "died", "..."]
# ::lemmas ["i", "would", "think", "Twitter", "would", "be", "heartbroken", "about", "the", "th", "school", "shooting", "this", "year", "or", "the", "innocent", "who", "die", "..."]
(c42-10 / think-01
        :ARG0 (c42-9 / i)
        :ARG1 (c42-2 / break-heart-31
                     :ARG0 (c42-0 / or
                                  :op1 (c42-6 / shoot-02
                                              :location (c42-1 / school)
                                              :time (c42-3 / year
                                                           :mod (c42-12 / this)))
                                  :op2 (c42-8 / person
                                              :ARG1-of (c42-7 / innocent-01)
                                              :ARG1-of (c42-11 / die-01)))
                     :ARG1 (c42-5 / publication
                                  :name (c42-4 / name
                                               :op1 "Twitter"))))

# ::snt Who fucking cares? Kids being slaughtered and Im supposed to give a shit about Jennifer Aniston breaking up with husband or whatever this guy is.
# ::tokens ["Who", "fucking", "cares", "?", "Kids", "being", "slaughtered", "and", "I", "m", "supposed", "to", "give", "a", "shit", "about", "Jennifer", "Aniston", "breaking", "up", "with", "husband", "or", "whatever", "this", "guy", "is", "."]
# ::lemmas ["who", "fucking", "care", "?", "kid", "be", "slaughter", "and", "i", "m", "suppose", "to", "give", "a", "shit", "about", "Jennifer", "Aniston", "break", "up", "with", "husband", "or", "whatever", "this", "guy", "be", "."]
(c43-12 / multi-sentence
        :snt1 (c43-14 / care-01
                      :ARG0 (c43-8 / amr-unknown)
                      :mod (c43-15 / fucking))
        :snt2 (c43-7 / and
                     :op1 (c43-0 / slaughter-01
                                 :ARG1 (c43-6 / kid))
                     :op2 (c43-3 / suppose-02
                                 :ARG1 (c43-20 / i)
                                 :ARG2 (c43-9 / give-16
                                              :ARG0 c43-20
                                              :ARG1 (c43-2 / shit)
                                              :ARG2 (c43-4 / or
                                                           :op1 (c43-11 / break-up-08
                                                                        :ARG1 (c43-17 / person
                                                                                      :name (c43-16 / name
                                                                                                    :op1 "Jennifer"
                                                                                                    :op2 "Aniston"))
                                                                        :ARG3 (c43-13 / person
                                                                                      :ARG0-of (c43-5 / have-rel-role-91
                                                                                                      :ARG1 c43-17
                                                                                                      :ARG2 (c43-19 / husband))))
                                                           :op2 (c43-18 / whatever
                                                                        :domain (c43-1 / guy
                                                                                       :mod (c43-10 / this))))))))

# ::snt No Twitter doesn't care. At all. Never has. Neither do we.
# ::tokens ["No", "Twitter", "does", "n't", "care", ".", "At", "all", ".", "Never", "has", ".", "Neither", "do", "we", "."]
# ::lemmas ["no", "Twitter", "do", "not", "care", ".", "at", "all", ".", "never", "have", ".", "neither", "do", "we", "."]
(c44-1 / multi-sentence
       :snt1 (c44-4 / care-01
                    :ARG0 (c44-3 / publication
                                 :name (c44-0 / name
                                              :op1 "Twitter"))
                    :mod (c44-8 / at-all)
                    :polarity -)
       :snt2 (c44-10 / care-01
                     :ARG0 (c44-5 / we)
                     :time (c44-2 / ever)
                     :polarity -)
       :snt3 (c44-7 / and
                    :op2 (c44-6 / care-01
                                :ARG0 c44-5
                                :mod (c44-9 / either)
                                :polarity -)))

# ::snt There are dead in Florida who gives a crap about a celebrities love life?
# ::tokens ["There", "are", "dead", "in", "Florida", "who", "gives", "a", "crap", "about", "a", "celebrities", "love", "life", "?"]
# ::lemmas ["there", "be", "dead", "in", "Florida", "who", "give", "a", "crap", "about", "a", "celebrity", "love", "life", "?"]
(c45-6 / die-01
       :ARG1 (c45-4 / amr-unknown
                    :ARG0-of (c45-5 / give-16
                                    :ARG1 (c45-3 / crap)
                                    :ARG2 (c45-2 / life
                                                 :mod (c45-7 / love-01)
                                                 :poss (c45-8 / celebrity))))
       :location (c45-1 / state
                        :name (c45-0 / name
                                     :op1 "Florida")))

# ::snt Nope. Don't care. These people deserve some privacy, don't you think?
# ::tokens ["Nope", ".", "Do", "n't", "care", ".", "These", "people", "deserve", "some", "privacy", ",", "do", "n't", "you", "think", "?"]
# ::lemmas ["nope", ".", "do", "not", "care", ".", "these", "people", "deserve", "some", "privacy", ",", "do", "not", "you", "think", "?"]
(c46-1 / multi-sentence
       :snt1 (c46-0 / nope)
       :snt2 (c46-6 / care-01
                    :ARG0 (c46-7 / i)
                    :polarity -)
       :snt3 (c46-9 / deserve-01
                    :ARG0 (c46-5 / person
                                 :mod (c46-8 / this))
                    :ARG1 (c46-2 / private-02
                                 :ARG1 c46-5
                                 :quant (c46-3 / some))
                    :ARG1-of (c46-4 / request-confirmation-91)))

# ::snt I think Twitter has bigger fish to filet.
# ::tokens ["I", "think", "Twitter", "has", "bigger", "fish", "to", "filet", "."]
# ::lemmas ["i", "think", "Twitter", "have", "big", "fish", "to", "filet", "."]
(c48-9 / think-01
       :ARG0 (c48-8 / i)
       :ARG1 (c48-4 / have-03
                    :ARG0 (c48-5 / publication
                                 :name (c48-2 / name
                                              :op1 "Twitter"))
                    :ARG1 (c48-0 / fish
                                 :ARG1-of (c48-7 / have-degree-91
                                                 :ARG2 (c48-1 / big)
                                                 :ARG3 (c48-3 / more))
                                 :ARG1-of (c48-6 / file-01))))

# ::snt I'd be happy to offer my comfort and support to Justin
# ::tokens ["I", "'d", "be", "happy", "to", "offer", "my", "comfort", "and", "support", "to", "Justin"]
# ::lemmas ["i", "would", "be", "happy", "to", "offer", "my", "comfort", "and", "support", "to", "Justin"]
(c49-3 / happy-01
       :ARG0 (c49-0 / offer-01
                    :ARG0 (c49-6 / i)
                    :ARG1 (c49-7 / and
                                 :op1 (c49-5 / comfort-01
                                             :ARG1 c49-6)
                                 :op2 (c49-2 / support-01
                                             :ARG0 c49-6))
                    :ARG3 (c49-4 / person
                                 :name (c49-1 / name
                                              :op1 "Justin")))
       :ARG1 c49-6)
