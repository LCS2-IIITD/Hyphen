# ::snt you mean the same CB that she's been hanging with, I mean f*%$&amp;*for months now? My mama told me long ago DON'T BE A HOE
# ::tokens ["you", "mean", "the", "same", "CB", "that", "she", "'s", "been", "hanging", "with", ",", "I", "mean", "f*%$&amp;*for", "months", "now", "?", "My", "mama", "told", "me", "long", "ago", "DON'T", "BE", "A", "HOE"]
# ::lemmas ["you", "mean", "the", "same", "cb", "that", "she", "be", "be", "hang", "with", ",", "i", "mean", "f*%$&amp;*for", "months", "now", "?", "my", "mama", "tell", "i", "long", "ago", "don't", "be", "a", "HOE"]
(c1-13 / multi-sentence
       :snt1 (c1-8 / mean-01
                   :ARG0 (c1-5 / you)
                   :ARG2 (c1-24 / person
                                :name (c1-23 / name
                                             :op1 "CB")
                                :ARG1-of (c1-0 / same-01
                                               :ARG2 (c1-14 / person
                                                            :ARG1-of (c1-9 / hang-02
                                                                           :ARG0 (c1-4 / she))))))
       :snt2 (c1-19 / mean-01
                    :ARG0 (c1-26 / i)
                    :ARG2 (c1-3 / person
                                :ARG0-of (c1-22 / fuck-01
                                                :mode expressive))
                    :duration (c1-16 / multiple
                                     :op1 (c1-10 / temporal-quantity
                                                 :unit (c1-18 / month)
                                                 :quant 1))
                    :time (c1-15 / now))
       :snt3 (c1-17 / tell-01
                    :ARG0 (c1-2 / person
                                :ARG0-of (c1-25 / have-rel-role-91
                                                :ARG1 c1-26
                                                :ARG2 (c1-21 / mama)))
                    :ARG1 (c1-7 / have-mod-91
                                :ARG1 (c1-11 / you)
                                :ARG2 (c1-20 / hake)
                                :polarity -
                                :mode imperative)
                    :ARG2 (c1-6 / i
                                :time (c1-12 / before
                                             :op1 c1-15)
                                :quant (c1-1 / long))))

# ::snt yo!!! Same thing I was thinking. Like that baby never looks happy around him. Always looks scared for her life!
# ::tokens ["yo", "!", "!", "!", "Same", "thing", "I", "was", "thinking", ".", "Like", "that", "baby", "never", "looks", "happy", "around", "him", ".", "Always", "looks", "scared", "for", "her", "life", "!"]
# ::lemmas ["yo", "!", "!", "!", "same", "thing", "i", "be", "think", ".", "like", "that", "baby", "never", "look", "happy", "around", "he", ".", "always", "look", "scared", "for", "her", "life", "!"]
(c3-3 / multi-sentence
      :snt1 (c3-2 / yo
                  :mode expressive)
      :snt2 (c3-11 / thing
                   :ARG1-of (c3-13 / think-01
                                   :ARG0 (c3-12 / i))
                   :ARG1-of (c3-4 / same-01))
      :snt3 (c3-5 / resemble-01
                  :ARG2 (c3-9 / look-02
                              :ARG0 (c3-1 / baby
                                          :mod (c3-14 / that))
                              :ARG1 (c3-8 / happy-01)
                              :time (c3-7 / ever)
                              :location (c3-6 / around
                                              :op1 c3-1)
                              :polarity -))
      :snt4 (c3-16 / look-02
                   :ARG0 (c3-0 / she)
                   :ARG1 (c3-17 / scare-01
                                :ARG0 c3-0
                                :ARG2 (c3-10 / life
                                             :poss c3-0))
                   :time (c3-15 / always)))

# ::snt she know wtf he is capable of
# ::tokens ["she", "know", "wtf", "he", "is", "capable", "of"]
# ::lemmas ["she", "know", "wtf", "he", "be", "capable", "of"]
(c4-3 / know-01
      :ARG0 (c4-1 / she)
      :ARG1 (c4-4 / capable-01
                  :ARG1 (c4-2 / he)
                  :ARG2 (c4-5 / amr-unknown))
      :mod (c4-0 / fuck
                 :mode expressive))

# ::snt Thats her dumb ass fault for dating someone she knew was abusive! I could careless!
# ::tokens ["That", "s", "her", "dumb", "ass", "fault", "for", "dating", "someone", "she", "knew", "was", "abusive", "!", "I", "could", "careless", "!"]
# ::lemmas ["that", "s", "her", "dumb", "ass", "fault", "for", "date", "someone", "she", "know", "be", "abusive", "!", "i", "could", "careless", "!"]
(c5-2 / multi-sentence
      :snt1 (c5-0 / fault-01
                  :ARG1 (c5-10 / ass
                               :mod (c5-12 / dumb)
                               :part-of (c5-3 / she))
                  :ARG2 (c5-7 / date-02
                              :ARG0 c5-3
                              :ARG1 (c5-1 / someone
                                          :ARG0-of (c5-9 / abuse-01
                                                         :ARG1-of (c5-4 / know-01
                                                                        :ARG0 (c5-13 / she)))))
                  :domain (c5-8 / that))
      :snt2 (c5-5 / possible-01
                  :ARG1 (c5-6 / careless-00
                              :ARG0 (c5-11 / i))))

# ::snt Joe Jonas would have been ok as he's not a woman... You'd be fucked though...
# ::tokens ["Joe", "Jonas", "would", "have", "been", "ok", "as", "he", "'s", "not", "a", "woman", "...", "You", "'d", "be", "fucked", "though", "..."]
# ::lemmas ["Joe", "Jonas", "would", "have", "be", "ok", "as", "he", "be", "not", "a", "woman", "...", "you", "would", "be", "fuck", "though", "..."]
(c6-4 / multi-sentence
      :snt1 (c6-0 / okay-04
                  :ARG1 (c6-6 / person
                              :name (c6-3 / name
                                          :op1 "Joe"
                                          :op2 "Jonas"))
                  :ARG1-of (c6-7 / cause-01
                                 :ARG0 (c6-8 / woman
                                             :domain c6-6
                                             :polarity -)))
      :snt2 (c6-5 / have-concession-91
                  :ARG1 (c6-1 / fuck-01
                              :ARG1 (c6-2 / you))))

# ::snt please do! As soon as possible if you can
# ::tokens ["please", "do", "!", "As", "soon", "as", "possible", "if", "you", "can"]
# ::lemmas ["please", "do", "!", "as", "soon", "as", "possible", "if", "you", "can"]
(c7-5 / do-02
      :ARG0 (c7-0 / you)
      :time (c7-1 / soon
                  :ARG2-of (c7-3 / have-degree-91
                                 :ARG1 c7-5
                                 :ARG3 (c7-2 / equal)
                                 :ARG4 (c7-4 / possible-01
                                             :ARG1 c7-5)))
      :polite +
      :mode imperative)

# ::snt I'll help him
# ::tokens ["I", "'ll", "help", "him"]
# ::lemmas ["i", "'ll", "help", "he"]
(c8-1 / help-01
      :ARG0 (c8-2 / i)
      :ARG2 (c8-0 / he))

# ::snt lol right. He just got to let go.
# ::tokens ["lol", "right", ".", "He", "just", "got", "to", "let", "go", "."]
# ::lemmas ["lol", "right", ".", "he", "just", "get", "to", "let", "go", "."]
(c9-1 / multi-sentence
      :snt1 (c9-2 / right-06
                  :mod (c9-4 / laugh-01
                             :manner (c9-8 / loud)
                             :mode expressive))
      :snt2 (c9-0 / obligate-01
                  :ARG2 (c9-5 / let-01
                              :ARG1 (c9-7 / go-01
                                          :ARG1 (c9-3 / he)))
                  :mod (c9-6 / just)))

# ::snt lol he need to chill. I like him!
# ::tokens ["lol", "he", "need", "to", "chill", ".", "I", "like", "him", "!"]
# ::lemmas ["lol", "he", "need", "to", "chill", ".", "i", "like", "he", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-0 / need-01
                    :ARG0 (c10-2 / he)
                    :ARG1 (c10-4 / chill-01
                                 :ARG0 c10-2)
                    :manner (c10-3 / loud))
       :snt2 (c10-7 / like-01
                    :ARG0 (c10-6 / i)
                    :ARG1 (c10-5 / he)))

# ::snt lol that fight with karreucha or however you spell her name
# ::tokens ["lol", "that", "fight", "with", "karreucha", "or", "however", "you", "spell", "her", "name"]
# ::lemmas ["lol", "that", "fight", "with", "karreucha", "or", "however", "you", "spell", "her", "name"]
(c11-0 / fight-01
       :ARG1 (c11-4 / person
                    :name (c11-2 / name
                                 :op1 "Karreucha"))
       :manner (c11-5 / laugh-01
                      :ARG0 (c11-6 / i)
                      :manner (c11-7 / loud)
                      :concession (c11-3 / spell-01
                                         :ARG0 (c11-1 / you)
                                         :ARG1 c11-2
                                         :poss c11-4)
                      :mode expressive))

# ::snt lol what he do now?
# ::tokens ["lol", "what", "he", "do", "now", "?"]
# ::lemmas ["lol", "what", "he", "do", "now", "?"]
(c12-5 / do-02
       :ARG0 (c12-1 / he)
       :ARG1 (c12-4 / amr-unknown)
       :time (c12-0 / now)
       :manner (c12-2 / laugh-01
                      :ARG0 (c12-3 / i)
                      :manner (c12-6 / loud)
                      :mode expressive))

# ::snt he's a ticking time bomb. You never know what he'll do next.
# ::tokens ["he", "'s", "a", "ticking", "time", "bomb", ".", "You", "never", "know", "what", "he", "'ll", "do", "next", "."]
# ::lemmas ["he", "be", "a", "tick", "time", "bomb", ".", "you", "never", "know", "what", "he", "'ll", "do", "next", "."]
(c13-2 / multi-sentence
       :snt1 (c13-0 / bomb
                    :ARG0-of (c13-8 / tick-01
                                    :ARG1 (c13-10 / time))
                    :domain (c13-5 / he))
       :snt2 (c13-6 / know-01
                    :ARG0 (c13-1 / you)
                    :ARG1 (c13-9 / thing
                                 :ARG1-of (c13-11 / do-02
                                                  :ARG0 (c13-7 / he)
                                                  :time (c13-3 / next)))
                    :time (c13-4 / ever)
                    :polarity -))

# ::snt why??
# ::tokens ["why", "?", "?"]
# ::lemmas ["why", "?", "?"]
(c14-0 / cause-01
       :ARG0 (c14-1 / amr-unknown))

# ::snt : Chris Brown is spending days in anger management rehab, and he is reportedly terrified of going to jail!&lt;&lt;&lt;&lt;&lt;-------
# ::tokens [":", "Chris", "Brown", "is", "spending", "days", "in", "anger", "management", "rehab", ",", "and", "he", "is", "reportedly", "terrified", "of", "going", "to", "jail!&lt;&lt;&lt;&lt;&lt;-------"]
# ::lemmas [":", "Chris", "Brown", "be", "spend", "day", "in", "anger", "management", "rehab", ",", "and", "he", "be", "reportedly", "terrified", "of", "go", "to", "jail!&lt;&lt;&lt;&lt;&lt;-------"]
(c15-9 / and
       :op1 (c15-2 / spend-02
                   :ARG0 (c15-6 / person
                                :name (c15-0 / name
                                             :op1 "Chris"
                                             :op2 "Brown"))
                   :ARG1 (c15-1 / multiple
                                :op1 (c15-7 / temporal-quantity
                                            :unit (c15-11 / day)
                                            :quant 1))
                   :ARG2 (c15-4 / rehab
                                :mod (c15-5 / manage-01
                                            :ARG1 (c15-8 / anger))))
       :op2 (c15-13 / terrify-01
                    :ARG0 (c15-10 / go-02
                                  :ARG0 c15-6
                                  :ARG4 (c15-12 / jail))
                    :ARG1 c15-6
                    :ARG1-of (c15-3 / report-01)))

# ::snt The fact that I even made the bar lineup was beyond my wildest dreams. Day OU I was told: "Okay, so we're going to start from square one on bars. Today - giants." It's nothing but a true testament to KJ, Lou and Tom willing to teach AND help help fulfill dreams.
# ::tokens ["The", "fact", "that", "I", "even", "made", "the", "bar", "lineup", "was", "beyond", "my", "wildest", "dreams", ".", "Day", "OU", "I", "was", "told", ":", "\"", "Okay", ",", "so", "we", "'re", "going", "to", "start", "from", "square", "one", "on", "bars", ".", "Today", "-", "giants", ".", "\"", "It", "'s", "nothing", "but", "a", "true", "testament", "to", "KJ", ",", "Lou", "and", "Tom", "willing", "to", "teach", "AND", "help", "help", "fulfill", "dreams", "."]
# ::lemmas ["the", "fact", "that", "i", "even", "make", "the", "bar", "lineup", "be", "beyond", "my", "wild", "dream", ".", "Day", "OU", "i", "be", "tell", ":", "\"", "okay", ",", "so", "we", "be", "go", "to", "start", "from", "square", "one", "on", "bar", ".", "Today", "-", "giant", ".", "\"", "it", "be", "nothing", "but", "a", "true", "testament", "to", "KJ", ",", "Lou", "and", "Tom", "willing", "to", "teach", "and", "help", "help", "fulfill", "dream", "."]
(c16-16 / multi-sentence
        :snt1 (c16-15 / beyond
                      :op1 (c16-38 / dream-01
                                   :ARG0 (c16-36 / i)
                                   :ARG1-of (c16-10 / have-degree-91
                                                    :ARG2 (c16-33 / wild)
                                                    :ARG3 (c16-11 / most)))
                      :domain (c16-27 / fact
                                      :mod (c16-24 / make-18
                                                   :ARG0 c16-36
                                                   :ARG1 (c16-3 / lineup
                                                                :mod (c16-2 / bar))
                                                   :mod (c16-29 / even))))
        :snt2 (c16-13 / tell-01
                      :ARG1 (c16-20 / cause-01
                                    :ARG0 (c16-7 / okay-01)
                                    :ARG1 (c16-0 / start-01
                                                 :ARG0 (c16-4 / we)
                                                 :ARG2 (c16-8 / square
                                                              :quant 1)
                                                 :location (c16-6 / bar)))
                      :ARG2 (c16-9 / i)
                      :time (c16-21 / day
                                    :mod (c16-25 / university
                                                 :name (c16-28 / name
                                                               :op1 "OU"))))
        :snt3 (c16-23 / testament
                      :ARG1-of (c16-37 / true-01)
                      :domain (c16-26 / will-02
                                      :ARG0 (c16-14 / and
                                                    :op1 (c16-30 / person
                                                                 :name (c16-18 / name
                                                                               :op1 "KJ"))
                                                    :op2 (c16-17 / person
                                                                 :name (c16-31 / name
                                                                               :op1 "Lou"))
                                                    :op3 (c16-5 / person
                                                                :name (c16-22 / name
                                                                              :op1 "Tom")))
                                      :ARG1 (c16-12 / and
                                                    :op1 (c16-1 / teach-01
                                                                :ARG0 c16-14)
                                                    :op2 (c16-34 / help-01
                                                                 :ARG0 c16-14
                                                                 :ARG1 (c16-32 / fulfill-01
                                                                               :ARG1 (c16-19 / dream-01)))))
                      :mod (c16-35 / nothing-but)))

# ::snt Haha - thanks. Childish thought for the day!
# ::tokens ["Haha", "-", "thanks", ".", "Childish", "thought", "for", "the", "day", "!"]
# ::lemmas ["Haha", "-", "thank", ".", "childish", "think", "for", "the", "day", "!"]
(c17-1 / multi-sentence
       :snt1 (c17-2 / haha
                    :mode expressive)
       :snt2 (c17-5 / thank-01
                    :ARG0 (c17-4 / i)
                    :ARG1 (c17-0 / you))
       :snt3 (c17-7 / think-01
                    :ARG0 (c17-3 / child)
                    :time (c17-6 / day)))

# ::snt Lmao he love her prlly was the
# ::tokens ["Lmao", "he", "love", "her", "prlly", "was", "the"]
# ::lemmas ["Lmao", "he", "love", "she", "prlly", "be", "the"]
(c18-2 / love-01
       :ARG0 (c18-1 / he)
       :ARG1 (c18-0 / she)
       :mod (c18-5 / laugh-01
                   :ARG0 (c18-4 / i)
                   :manner (c18-3 / loud)
                   :mode expressive))

# ::snt I just wanna know y he want her back so bad
# ::tokens ["I", "just", "wanna", "know", "y", "he", "want", "her", "back", "so", "bad"]
# ::lemmas ["i", "just", "wanna", "know", "y", "he", "want", "she", "back", "so", "bad"]
(c19-7 / want-01
       :ARG0 (c19-9 / i)
       :ARG1 (c19-4 / know-01
                    :ARG0 c19-9
                    :ARG1 (c19-6 / want-01
                                 :ARG0 (c19-3 / he)
                                 :ARG1 (c19-2 / she)
                                 :ARG1-of (c19-1 / bad-05
                                                 :degree (c19-0 / so))
                                 :direction (c19-5 / back)))
       :mod (c19-8 / just))

# ::snt nah it ain't work lmao she ain't take him back
# ::tokens ["nah", "it", "ai", "n't", "work", "lmao", "she", "ai", "n't", "take", "him", "back"]
# ::lemmas ["nah", "it", "be", "not", "work", "lmao", "she", "be", "not", "take", "he", "back"]
(c20-8 / and
       :op1 (c20-5 / work-09
                   :ARG1 (c20-7 / it)
                   :polarity -)
       :op2 (c20-4 / laugh-01
                   :ARG0 (c20-2 / i)
                   :manner (c20-9 / loud)
                   :mode expressive)
       :op3 (c20-6 / take-01
                   :ARG0 (c20-1 / she)
                   :ARG1 (c20-3 / he)
                   :direction (c20-0 / back)
                   :polarity -))

# ::snt Was just a lie
# ::tokens ["Was", "just", "a", "lie"]
# ::lemmas ["be", "just", "a", "lie"]
(c21-2 / thing
       :ARG1-of (c21-1 / lie-08)
       :mod (c21-0 / just))

# ::snt must be why everybody is isolating him
# ::tokens ["must", "be", "why", "everybody", "is", "isolating", "him"]
# ::lemmas ["must", "be", "why", "everybody", "be", "isolate", "he"]
(c22-4 / infer-01
       :ARG1 (c22-5 / thing
                    :ARG0-of (c22-3 / cause-01
                                    :ARG1 (c22-0 / isolate-01
                                                 :ARG0 (c22-1 / everybody)
                                                 :ARG1 (c22-2 / he)))))

# ::snt But why was she put in a holding room? Like let's lock the man up for once!
# ::tokens ["But", "why", "was", "she", "put", "in", "a", "holding", "room", "?", "Like", "let", "'s", "lock", "the", "man", "up", "for", "once", "!"]
# ::lemmas ["but", "why", "be", "she", "put", "in", "a", "holding", "room", "?", "like", "let", "us", "lock", "the", "man", "up", "for", "once", "!"]
(c23-1 / multi-sentence
       :snt1 (c23-8 / contrast-01
                    :ARG2 (c23-5 / put-01
                                 :ARG1 (c23-2 / she)
                                 :ARG2 (c23-3 / room
                                              :ARG0-of (c23-4 / hold-01))
                                 :ARG1-of (c23-12 / cause-01
                                                  :ARG0 (c23-9 / amr-unknown))))
       :snt2 (c23-10 / resemble-01
                     :ARG2 (c23-6 / let-01
                                  :ARG1 (c23-11 / lock-up-03
                                                :ARG1 (c23-7 / man))
                                  :mod (c23-0 / for-once))))

# ::snt who's we?
# ::tokens ["who", "'s", "we", "?"]
# ::lemmas ["who", "be", "we", "?"]
(c24-0 / we
       :domain (c24-1 / amr-unknown))

# ::snt Same here.Thats why my goal is to create a space to continue to do me and carry out what I believe in freely, being all i can be
# ::tokens ["Same", "here", ".", "Thats", "why", "my", "goal", "is", "to", "create", "a", "space", "to", "continue", "to", "do", "me", "and", "carry", "out", "what", "I", "believe", "in", "freely", ",", "being", "all", "i", "can", "be"]
# ::lemmas ["same", "here", ".", "that", "why", "my", "goal", "be", "to", "create", "a", "space", "to", "continue", "to", "do", "i", "and", "carry", "out", "what", "i", "believe", "in", "freely", ",", "be", "all", "i", "can", "be"]
(c25-4 / multi-sentence
       :snt1 (c25-5 / same-01
                    :location (c25-7 / here))
       :snt2 (c25-10 / cause-01
                     :ARG0 (c25-13 / that)
                     :ARG1 (c25-14 / goal
                                   :poss (c25-12 / i)
                                   :domain (c25-16 / create-01
                                                   :ARG0 c25-12
                                                   :ARG1 (c25-1 / space)
                                                   :purpose (c25-6 / and
                                                                   :op1 (c25-11 / continue-01
                                                                                :ARG0 c25-12
                                                                                :ARG1 (c25-15 / do-02
                                                                                              :ARG0 c25-12
                                                                                              :ARG1 (c25-9 / thing
                                                                                                           :ARG1-of (c25-3 / believe-01
                                                                                                                           :ARG0 c25-12))))
                                                                   :op2 (c25-0 / carry-out-03
                                                                               :ARG0 c25-12
                                                                               :ARG1 c25-9
                                                                               :manner (c25-2 / free-04
                                                                                              :ARG1 c25-12
                                                                                              :ARG3-of (c25-8 / possible-01))))))))

# ::snt focus! RT " Not afraid of losing. But I'm terrified of stopping! " don't stop!
# ::tokens ["focus", "!", "RT", "\"", "Not", "afraid", "of", "losing", ".", "But", "I", "'m", "terrified", "of", "stopping", "!", "\"", "do", "n't", "stop", "!"]
# ::lemmas ["focus", "!", "RT", "\"", "not", "afraid", "of", "lose", ".", "but", "i", "be", "terrified", "of", "stop", "!", "\"", "do", "not", "stop", "!"]
(c26-3 / multi-sentence
       :snt1 (c26-0 / focus-01
                    :ARG0 (c26-2 / you)
                    :mode imperative)
       :snt2 (c26-5 / publication-91
                    :ARG1 (c26-8 / contrast-01
                                 :ARG1 (c26-6 / fear-01
                                              :ARG0 (c26-11 / you)
                                              :ARG1 (c26-7 / lose-03
                                                           :ARG0 c26-11)
                                              :polarity -)
                                 :ARG2 (c26-10 / terrify-01
                                               :ARG0 (c26-4 / stop-01
                                                            :ARG0 c26-11)
                                               :ARG1 (c26-9 / i)))
                    :ARG4 (c26-1 / stop-01
                                 :ARG0 c26-11
                                 :mode imperative
                                 :polarity -)))

# ::snt what a great human thing to recognize
# ::tokens ["what", "a", "great", "human", "thing", "to", "recognize"]
# ::lemmas ["what", "a", "great", "human", "thing", "to", "recognize"]
(c27-3 / thing
       :mod (c27-2 / human)
       :mod (c27-0 / great)
       :ARG1-of (c27-1 / recognize-02))

# ::snt no stop never
# ::tokens ["no", "stop", "never"]
# ::lemmas ["no", "stop", "never"]
(c28-2 / stop-01
       :ARG0 (c28-1 / you)
       :time (c28-0 / ever)
       :polarity -
       :mode imperative)

# ::snt That's exactly how I feel. I'm always tired but I keep pushing. &amp; trust I've come a---long way from the projects. Thank u God
# ::tokens ["That", "'s", "exactly", "how", "I", "feel", ".", "I", "'m", "always", "tired", "but", "I", "keep", "pushing", ".", "&", "amp", ";", "trust", "I", "'ve", "come", "a", "---", "long", "way", "from", "the", "projects", ".", "Thank", "u", "God"]
# ::lemmas ["that", "be", "exactly", "how", "i", "feel", ".", "i", "be", "always", "tired", "but", "i", "keep", "push", ".", "&", "amp", ";", "trust", "i", "'ve", "come", "a", "---", "long", "way", "from", "the", "project", ".", "thank", "u", "God"]
(c29-10 / multi-sentence
        :snt1 (c29-14 / feel-01
                      :ARG0 (c29-19 / i)
                      :ARG1 (c29-7 / that)
                      :manner (c29-16 / exact))
        :snt2 (c29-12 / contrast-01
                      :ARG1 (c29-13 / tire-01
                                    :ARG1 (c29-4 / i)
                                    :time (c29-6 / always))
                      :ARG2 (c29-5 / keep-02
                                   :ARG0 c29-4
                                   :ARG1 (c29-17 / push-01
                                                 :ARG0 c29-4)))
        :snt3 (c29-20 / trust-01
                      :ARG0 (c29-8 / i)
                      :ARG1 (c29-9 / come-01
                                   :ARG1 c29-8
                                   :ARG4 (c29-18 / way
                                                 :ARG1-of (c29-2 / long-03))
                                   :source (c29-11 / project)))
        :snt4 (c29-1 / thank-01
                     :ARG0 (c29-0 / i)
                     :ARG1 (c29-3 / person
                                  :name (c29-15 / name
                                                :op1 "God"))))

# ::snt Love me some U
# ::tokens ["Love", "me", "some", "U"]
# ::lemmas ["love", "i", "some", "u"]
(c30-1 / love-01
       :ARG0 (c30-0 / you)
       :ARG1 (c30-2 / i)
       :mod (c30-3 / some))

# ::snt excellent word
# ::tokens ["excellent", "word"]
# ::lemmas ["excellent", "word"]
(c31-0 / word
       :ARG1-of (c31-1 / excellent-02))

# ::snt Don't Stop Bruh You Great At What You Do
# ::tokens ["Do", "n't", "Stop", "Bruh", "You", "Great", "At", "What", "You", "Do"]
# ::lemmas ["do", "not", "stop", "Bruh", "you", "great", "at", "what", "you", "do"]
(c32-2 / stop-01
       :ARG0 (c32-1 / you)
       :ARG1 (c32-0 / bane-01
                    :ARG0 c32-1
                    :ARG1 (c32-3 / thing
                                 :ARG1-of (c32-5 / do-02
                                                 :ARG0 c32-1)))
       :mod (c32-4 / great)
       :polarity -
       :mode imperative)

# ::snt never stopping
# ::tokens ["never", "stopping"]
# ::lemmas ["never", "stop"]
(c33-1 / stop-01
       :time (c33-0 / ever)
       :polarity -)

# ::snt keep going. You inspired so many people
# ::tokens ["keep", "going", ".", "You", "inspired", "so", "many", "people"]
# ::lemmas ["keep", "go", ".", "you", "inspire", "so", "many", "people"]
(c35-1 / multi-sentence
       :snt1 (c35-4 / keep-02
                    :ARG0 (c35-0 / you)
                    :ARG1 (c35-7 / go-02
                                 :ARG0 c35-0)
                    :mode imperative)
       :snt2 (c35-6 / inspire-01
                    :ARG0 (c35-8 / you)
                    :ARG1 (c35-5 / person
                                 :quant (c35-3 / many
                                               :degree (c35-2 / so)))))

# ::snt never limit yourself of anything, you can do it just believe!
# ::tokens ["never", "limit", "yourself", "of", "anything", ",", "you", "can", "do", "it", "just", "believe", "!"]
# ::lemmas ["never", "limit", "yourself", "of", "anything", ",", "you", "can", "do", "it", "just", "believe", "!"]
(c36-3 / limit-01
       :ARG0 (c36-1 / you
                    :ARG1-of c36-3)
       :ARG2 (c36-7 / anything)
       :time (c36-2 / ever)
       :ARG1-of (c36-5 / cause-01
                       :ARG0 (c36-4 / possible-01
                                    :ARG1 (c36-8 / do-02
                                                 :ARG0 c36-1
                                                 :ARG1 c36-7)
                                    :condition (c36-0 / believe-01
                                                      :ARG0 c36-1
                                                      :mod (c36-6 / just))))
       :polarity -
       :mode imperative)

# ::snt I won't let you stop. I can name a million reasons for you to not stop, but I'm only gonna name one..
# ::tokens ["I", "wo", "n't", "let", "you", "stop", ".", "I", "can", "name", "a", "million", "reasons", "for", "you", "to", "not", "stop", ",", "but", "I", "'m", "only", "gon", "na", "name", "one", ".."]
# ::lemmas ["i", "will", "not", "let", "you", "stop", ".", "i", "can", "name", "a", "million", "reason", "for", "you", "to", "not", "stop", ",", "but", "i", "be", "only", "going", "to", "name", "one", ".."]
(c37-3 / multi-sentence
       :snt1 (c37-9 / let-01
                    :ARG0 (c37-12 / i)
                    :ARG1 (c37-5 / stop-01
                                 :ARG0 (c37-2 / you))
                    :polarity -)
       :snt2 (c37-11 / contrast-01
                     :ARG1 (c37-10 / possible-01
                                   :ARG1 (c37-4 / name-01
                                                :ARG0 (c37-6 / i)
                                                :ARG1 (c37-7 / reason
                                                             :ARG0-of (c37-14 / cause-01
                                                                              :ARG1 (c37-0 / stop-01
                                                                                           :ARG0 (c37-13 / you)
                                                                                           :polarity -))
                                                             :quant 1000000)))
                     :ARG2 (c37-8 / name-01
                                  :ARG0 c37-6
                                  :ARG1 c37-7
                                  :mod (c37-1 / only))))

# ::snt you should be afraid to stop but recall that the moon could not go on shining if it gave attention to the dogs that back
# ::tokens ["you", "should", "be", "afraid", "to", "stop", "but", "recall", "that", "the", "moon", "could", "not", "go", "on", "shining", "if", "it", "gave", "attention", "to", "the", "dogs", "that", "back"]
# ::lemmas ["you", "should", "be", "afraid", "to", "stop", "but", "recall", "that", "the", "moon", "could", "not", "go", "on", "shine", "if", "it", "give", "attention", "to", "the", "dog", "that", "back"]
(c38-8 / contrast-01
       :ARG1 (c38-6 / recommend-01
                    :ARG1 (c38-0 / fear-01
                                 :ARG0 (c38-3 / you)
                                 :ARG1 (c38-5 / stop-01
                                              :ARG0 c38-3)))
       :ARG2 (c38-12 / recall-02
                     :ARG0 c38-3
                     :ARG1 (c38-7 / possible-01
                                  :ARG1 (c38-10 / go-on-15
                                                :ARG1 (c38-1 / shine-01
                                                             :ARG1 (c38-4 / moon)))
                                  :condition (c38-9 / attend-02
                                                    :ARG0 c38-4
                                                    :ARG1 (c38-11 / dog)
                                                    :direction (c38-2 / back))
                                  :polarity -)))

# ::snt a little more you must always trust in God and family and know all else is just that. People say what they will don't get caught
# ::tokens ["a", "little", "more", "you", "must", "always", "trust", "in", "God", "and", "family", "and", "know", "all", "else", "is", "just", "that", ".", "People", "say", "what", "they", "will", "do", "n't", "get", "caught"]
# ::lemmas ["a", "little", "more", "you", "must", "always", "trust", "in", "God", "and", "family", "and", "know", "all", "else", "be", "just", "that", ".", "people", "say", "what", "they", "will", "do", "not", "get", "catch"]
(c39-12 / multi-sentence
        :snt1 (c39-2 / obligate-01
                     :ARG1 (c39-3 / you)
                     :ARG2 (c39-10 / and
                                   :op1 (c39-11 / trust-02
                                                :ARG0 c39-3
                                                :ARG1 (c39-9 / and
                                                             :op1 (c39-19 / person
                                                                          :name (c39-17 / name
                                                                                        :op1 "God"))
                                                             :op2 (c39-16 / family))
                                                :time (c39-7 / always))
                                   :op2 (c39-5 / know-01
                                               :ARG0 c39-3
                                               :ARG1 (c39-15 / that
                                                             :mod (c39-8 / just)
                                                             :domain (c39-21 / all
                                                                             :mod (c39-18 / else)))))
                     :ARG1-of (c39-4 / have-quant-91
                                     :ARG2 (c39-1 / little)
                                     :ARG3 (c39-6 / more)))
        :snt2 (c39-0 / say-01
                     :ARG0 (c39-13 / person)
                     :ARG1 (c39-20 / thing
                                   :ARG1-of (c39-14 / catch-03
                                                    :polarity -))))

# ::snt Don't Stop,Keep Excelling! We learn by our mistakes! They make us stronger &amp; wiser!
# ::tokens ["Do", "n't", "Stop", ",", "Keep", "Excelling", "!", "We", "learn", "by", "our", "mistakes", "!", "They", "make", "us", "stronger", "&", "amp", ";", "wiser", "!"]
# ::lemmas ["do", "not", "stop", ",", "keep", "excelling", "!", "we", "learn", "by", "our", "mistake", "!", "they", "make", "we", "stronger", "&", "amp", ";", "wise", "!"]
(c40-12 / multi-sentence
        :snt1 (c40-0 / stop-01
                     :ARG0 (c40-4 / you)
                     :ARG1 (c40-11 / you)
                     :mode imperative
                     :polarity -)
        :snt2 (c40-7 / keep-02
                     :ARG0 c40-11
                     :ARG1 (c40-16 / exercise-02
                                   :ARG0 c40-11)
                     :mode imperative)
        :snt3 (c40-1 / learn-01
                     :ARG0 (c40-17 / we)
                     :ARG2 (c40-6 / mistake-02
                                  :ARG0 c40-17))
        :snt4 (c40-15 / make-02
                      :ARG0 (c40-10 / they)
                      :ARG1 (c40-9 / and
                                   :op1 (c40-8 / have-degree-91
                                               :ARG1 (c40-2 / we)
                                               :ARG2 (c40-3 / strong-02
                                                            :ARG1 c40-2)
                                               :ARG3 (c40-13 / more))
                                   :op2 (c40-18 / have-degree-91
                                                :ARG1 c40-2
                                                :ARG2 (c40-5 / healthy)
                                                :ARG3 (c40-14 / more)))
                      :ARG2 c40-2))

# ::snt old enough to be your gran but I read Twitter. My advice start true to yourself listen to those u know love u and forget others
# ::tokens ["old", "enough", "to", "be", "your", "gran", "but", "I", "read", "Twitter", ".", "My", "advice", "start", "true", "to", "yourself", "listen", "to", "those", "u", "know", "love", "u", "and", "forget", "others"]
# ::lemmas ["old", "enough", "to", "be", "your", "gran", "but", "i", "read", "Twitter", ".", "my", "advice", "start", "true", "to", "yourself", "listen", "to", "those", "u", "know", "love", "u", "and", "forget", "other"]
(c41-15 / multi-sentence
        :snt1 (c41-17 / contrast-01
                      :ARG1 (c41-6 / have-degree-91
                                   :ARG1 (c41-24 / i)
                                   :ARG2 (c41-3 / old)
                                   :ARG3 (c41-21 / enough)
                                   :ARG6 (c41-23 / have-rel-role-91
                                                 :ARG0 c41-24
                                                 :ARG1 (c41-4 / you)
                                                 :ARG2 (c41-10 / grandmother)))
                      :ARG2 (c41-20 / read-01
                                    :ARG0 c41-24
                                    :ARG1 (c41-22 / publication
                                                  :name (c41-19 / name
                                                                :op1 "Twitter"))))
        :snt2 (c41-0 / start-01
                     :ARG0 (c41-9 / advise-01
                                  :ARG0 (c41-5 / i)
                                  :ARG1 (c41-11 / you)
                                  :ARG2 (c41-8 / and
                                               :op1 (c41-1 / listen-01
                                                           :ARG0 c41-11
                                                           :ARG1 (c41-16 / person
                                                                         :ARG0-of (c41-12 / love-01
                                                                                          :ARG1 c41-11)
                                                                         :ARG1-of (c41-7 / know-01
                                                                                         :ARG0 c41-11)))
                                               :op2 (c41-18 / forget-01
                                                            :ARG0 c41-11
                                                            :ARG1 (c41-2 / person
                                                                         :mod (c41-14 / other))))
                                  :ARG1-of (c41-13 / true-01
                                                   :ARG2 c41-11))))

# ::snt MAJOR KEY DON'T PLAY YOURSELF HAVE HOPE!!!
# ::tokens ["MAJOR", "KEY", "DON'T", "PLAY", "YOURSELF", "HAVE", "HOPE", "!", "!", "!"]
# ::lemmas ["MAJOR", "KEY", "don't", "play", "yourself", "have", "HOPE", "!", "!", "!"]
(c42-3 / hope-01
       :ARG0 (c42-0 / you)
       :ARG1 (c42-4 / play-01
                    :ARG0 (c42-5 / key
                                 :mod (c42-2 / person
                                             :name (c42-1 / name
                                                          :op1 "MAJOR")))
                    :ARG1 c42-0
                    :polarity -)
       :mode imperative)

# ::snt : Not afraid of losing. But I'm terrified of stopping!
# ::tokens [":", "Not", "afraid", "of", "losing", ".", "But", "I", "'m", "terrified", "of", "stopping", "!"]
# ::lemmas [":", "not", "afraid", "of", "lose", ".", "but", "i", "be", "terrified", "of", "stop", "!"]
(c43-1 / multi-sentence
       :snt1 (c43-0 / fear-01
                    :ARG0 (c43-6 / i)
                    :ARG1 (c43-4 / lose-03
                                 :ARG0 c43-6)
                    :polarity -)
       :snt2 (c43-5 / contrast-01
                    :ARG2 (c43-7 / terrify-01
                                 :ARG0 (c43-2 / stop-01
                                              :ARG0 (c43-3 / i
                                                           :ARG1-of c43-7)))))

# ::snt Biggest fan in the world and I only like songs on . Somethin aint right.
# ::tokens ["Biggest", "fan", "in", "the", "world", "and", "I", "only", "like", "songs", "on", ".", "Somethin", "ai", "nt", "right", "."]
# ::lemmas ["big", "fan", "in", "the", "world", "and", "i", "only", "like", "song", "on", ".", "somethin", "be", "not", "right", "."]
(c44-4 / multi-sentence
       :snt1 (c44-13 / and
                     :op1 (c44-0 / fan
                                 :domain (c44-12 / i)
                                 :ARG1-of (c44-8 / have-degree-91
                                                 :ARG2 (c44-2 / big)
                                                 :ARG3 (c44-9 / most)
                                                 :ARG5 (c44-11 / world)))
                     :op2 (c44-10 / like-01
                                  :ARG0 c44-12
                                  :ARG1 (c44-5 / song
                                               :medium (c44-6 / internet))
                                  :mod (c44-1 / only)))
       :snt2 (c44-7 / right-06
                    :ARG1 (c44-3 / something)
                    :polarity -))

# ::snt You're so amazing Chris I'm in love with your heart, mind, spirit, and talents
# ::tokens ["You", "'re", "so", "amazing", "Chris", "I", "'m", "in", "love", "with", "your", "heart", ",", "mind", ",", "spirit", ",", "and", "talents"]
# ::lemmas ["you", "be", "so", "amazing", "Chris", "i", "be", "in", "love", "with", "your", "heart", ",", "mind", ",", "spirit", ",", "and", "talent"]
(c45-3 / say-01
       :ARG0 (c45-9 / i)
       :ARG1 (c45-10 / amaze-01
                     :ARG0 (c45-5 / person
                                  :name (c45-1 / name
                                               :op1 "Chris"))
                     :ARG2-of (c45-4 / have-degree-91
                                     :ARG1 c45-5
                                     :ARG3 (c45-0 / so)
                                     :ARG6 (c45-6 / love-01
                                                  :ARG0 c45-9
                                                  :ARG1 c45-5
                                                  :ARG2 (c45-11 / and
                                                                :op1 (c45-7 / heart)
                                                                :op2 (c45-2 / mind)
                                                                :op3 (c45-12 / spirit)
                                                                :op4 (c45-8 / talent)))))
       :ARG2 c45-5)

# ::snt I agree......
# ::tokens ["I", "agree", "......"]
# ::lemmas ["i", "agree", "......"]
(c46-1 / agree-01
       :ARG0 (c46-0 / i))

# ::snt Yesss keep believing &amp; neva stop ,losing is part of life
# ::tokens ["Yesss", "keep", "believing", "&", "amp", ";", "neva", "stop", ",", "losing", "is", "part", "of", "life"]
# ::lemmas ["yesss", "keep", "believe", "&", "amp", ";", "neva", "stop", ",", "lose", "be", "part", "of", "life"]
(c47-2 / multi-sentence
       :snt1 (c47-5 / keep-02
                    :ARG0 (c47-1 / you)
                    :ARG1 (c47-8 / and
                                 :op1 (c47-0 / believe-01
                                             :ARG0 c47-1)
                                 :op2 (c47-7 / amp)))
       :snt2 (c47-4 / stop-01
                    :ARG0 (c47-9 / you)
                    :ARG1 (c47-6 / lose-02
                                 :part-of (c47-10 / life))
                    :mod (c47-3 / nah)
                    :mode imperative))

# ::snt please dont stop
# ::tokens ["please", "do", "nt", "stop"]
# ::lemmas ["please", "do", "not", "stop"]
(c48-1 / stop-01
       :ARG0 (c48-0 / you)
       :mode imperative
       :polite +)

# ::snt can't stop won't stop
# ::tokens ["ca", "n't", "stop", "wo", "n't", "stop"]
# ::lemmas ["can", "not", "stop", "will", "not", "stop"]
(c49-2 / stop-01
       :ARG1-of (c49-1 / possible-01
                       :polarity -)
       :ARG1-of (c49-0 / stop-01)
       :polarity -)

# ::snt always believe in yourself handsome,stay positive,and focused,
# ::tokens ["always", "believe", "in", "yourself", "handsome", ",", "stay", "positive", ",", "and", "focused", ","]
# ::lemmas ["always", "believe", "in", "yourself", "handsome", ",", "stay", "positive", ",", "and", "focus", ","]
(c50-7 / and
       :op1 (c50-1 / believe-01
                   :ARG0 (c50-2 / you
                                :ARG1-of c50-1)
                   :manner (c50-4 / handsome))
       :op2 (c50-3 / stay-01
                   :ARG1 c50-2
                   :ARG3 (c50-5 / positive))
       :op3 (c50-0 / focus-01
                   :ARG1 c50-2)
       :time (c50-6 / always))
