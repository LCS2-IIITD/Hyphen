# ::snt but what can we say , the truth will catch up with ya
# ::tokens ["but", "what", "can", "we", "say", ",", "the", "truth", "will", "catch", "up", "with", "ya"]
# ::lemmas ["but", "what", "can", "we", "say", ",", "the", "truth", "will", "catch", "up", "with", "ya"]
(c1-3 / contrast-01
      :ARG2 (c1-2 / possible-01
                  :ARG1 (c1-1 / say-01
                              :ARG0 (c1-4 / we)
                              :ARG1 (c1-6 / thing))
                  :ARG1-of (c1-8 / cause-01
                                 :ARG0 (c1-5 / catch-up-04
                                             :ARG1 (c1-7 / truth)
                                             :ARG2 (c1-0 / you)))))

# ::snt I'm very sensitive, thanks. However, my sensitivity, most definitely, doesn't go to murderers. Now, lemme channel my inner Nene Leakes
# ::tokens ["I", "'m", "very", "sensitive", ",", "thanks", ".", "However", ",", "my", "sensitivity", ",", "most", "definitely", ",", "does", "n't", "go", "to", "murderers", ".", "Now", ",", "lemme", "channel", "my", "inner", "Nene", "Leakes"]
# ::lemmas ["i", "be", "very", "sensitive", ",", "thank", ".", "however", ",", "my", "sensitivity", ",", "most", "definitely", ",", "do", "not", "go", "to", "murderer", ".", "now", ",", "lemme", "channel", "my", "inner", "Nene", "Leakes"]
(c2-12 / multi-sentence
       :snt1 (c2-0 / sensitive-03
                   :ARG0 (c2-18 / i)
                   :degree (c2-4 / very)
                   :ARG2-of (c2-7 / thank-01
                                  :ARG1 (c2-2 / you)))
       :snt2 (c2-14 / contrast-01
                    :ARG2 (c2-8 / go-01
                                :ARG1 (c2-1 / sensitive-03
                                            :ARG0 (c2-3 / i))
                                :ARG4 (c2-17 / person
                                             :ARG0-of (c2-5 / murder-01))
                                :manner (c2-19 / definite
                                               :ARG2-of (c2-6 / have-degree-91
                                                              :ARG1 c2-8
                                                              :ARG3 (c2-15 / most)))
                                :polarity -))
       :snt3 (c2-11 / channel-01
                    :ARG0 (c2-9 / you)
                    :ARG1 c2-17
                    :name (c2-16 / name
                                 :op1 "Nene"
                                 :op2 "Leakes")
                    :mod (c2-10 / inner)
                    :poss c2-3
                    :mode imperative)
       :time (c2-13 / now))

# ::snt :Um. How is it offensive?
# ::tokens [":", "Um", ".", "How", "is", "it", "offensive", "?"]
# ::lemmas [":", "um", ".", "how", "be", "it", "offensive", "?"]
(c3-1 / multi-sentence
      :snt1 (c3-4 / um
                  :mode expressive)
      :snt2 (c3-0 / offend-01
                  :ARG0 (c3-2 / it)
                  :manner (c3-3 / amr-unknown)))

# ::snt Because he is a murderous, narcissistic sociopath; case closed
# ::tokens ["Because", "he", "is", "a", "murderous", ",", "narcissistic", "sociopath", ";", "case", "closed"]
# ::lemmas ["because", "he", "be", "a", "murderous", ",", "narcissistic", "sociopath", ";", "case", "close"]
(c4-0 / multi-sentence
      :snt1 (c4-5 / cause-01
                  :ARG0 (c4-2 / sociopath
                              :domain (c4-4 / he)
                              :ARG0-of (c4-3 / murder-01)
                              :mod (c4-1 / narcissism)))
      :snt2 (c4-7 / close-03
                  :ARG1 (c4-6 / case)))

# ::snt oscar pistorius i dnt like to judge leave that to god....but in this case " you do the crime you do the time "
# ::tokens ["oscar", "pistorius", "i", "dnt", "like", "to", "judge", "leave", "that", "to", "god", "....", "but", "in", "this", "case", "\"", "you", "do", "the", "crime", "you", "do", "the", "time", "\""]
# ::lemmas ["oscar", "pistorius", "i", "dnt", "like", "to", "judge", "leave", "that", "to", "god", "....", "but", "in", "this", "case", "\"", "you", "do", "the", "crime", "you", "do", "the", "time", "\""]
(c5-3 / say-01
      :ARG0 (c5-12 / i)
      :ARG1 (c5-8 / contrast-01
                  :ARG1 (c5-14 / dislike-01
                               :ARG0 c5-12
                               :ARG1 (c5-11 / judge-01
                                            :ARG0 c5-12
                                            :ARG1 (c5-5 / leave-10
                                                        :ARG0 c5-12
                                                        :ARG1 (c5-13 / that)
                                                        :ARG2 (c5-6 / person
                                                                    :name (c5-1 / name
                                                                                :op1 "God")))))
                  :ARG2 (c5-15 / case-04
                               :ARG1 (c5-9 / do-02
                                           :ARG0 (c5-0 / you)
                                           :ARG1 (c5-10 / crime-02
                                                        :ARG0 c5-0
                                                        :time (c5-7 / time)))))
      :ARG2 (c5-2 / person
                  :name (c5-4 / name
                              :op1 "oscar"
                              :op2 "Pallorius")))

# ::snt The mystery is, she wanted to leave him and one-legged guy's ego couldn't take it.
# ::tokens ["The", "mystery", "is", ",", "she", "wanted", "to", "leave", "him", "and", "one", "-", "legged", "guy", "'s", "ego", "could", "n't", "take", "it", "."]
# ::lemmas ["the", "mystery", "be", ",", "she", "want", "to", "leave", "he", "and", "one", "-", "legged", "guy", "'s", "ego", "could", "not", "take", "it", "."]
(c6-0 / mystery
      :domain (c6-6 / want-01
                    :ARG0 (c6-1 / she)
                    :ARG1 (c6-4 / leave-15
                                :ARG0 c6-1
                                :ARG1 (c6-9 / and
                                            :op1 (c6-3 / he)
                                            :op2 (c6-10 / guy
                                                        :part (c6-11 / leg
                                                                     :quant 1))))
                    :ARG1-of (c6-7 / cause-01
                                   :ARG0 (c6-5 / possible-01
                                               :ARG1 (c6-8 / take-02
                                                           :ARG0 (c6-2 / ego
                                                                       :poss c6-10)
                                                           :ARG1 c6-4)
                                               :polarity -))))
