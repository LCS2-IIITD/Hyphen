# ::snt What ever
# ::tokens ["What", "ever"]
# ::lemmas ["what", "ever"]
(c1-1 / amr-unknown
      :mod (c1-0 / ever))

# ::snt HAPPY BIRTHDAY SHOUTOUT! !
# ::tokens ["HAPPY", "BIRTHDAY", "SHOUTOUT", "!", "!"]
# ::lemmas ["HAPPY", "BIRTHDAY", "shoutout", "!", "!"]
(c2-2 / shame-02
      :ARG1 (c2-0 / birthday)
      :ARG2 (c2-1 / happy-02)
      :mode expressive)

# ::snt Kick their arses Gwyneth!
# ::tokens ["Kick", "their", "arses", "Gwyneth", "!"]
# ::lemmas ["kick", "their", "arsis", "Gwyneth", "!"]
(c3-1 / say-01
      :ARG0 (c3-5 / i)
      :ARG1 (c3-3 / kick-01
                  :ARG0 (c3-2 / person
                              :name (c3-0 / name
                                          :op1 "Gwyneth"))
                  :ARG1 (c3-6 / ass
                              :poss (c3-4 / they))
                  :mode imperative)
      :ARG2 c3-2)

# ::snt False medical claims--nope, all businesses DONT do that
# ::tokens ["False", "medical", "claims", "--", "nope", ",", "all", "businesses", "DONT", "do", "that"]
# ::lemmas ["false", "medical", "claim", "--", "nope", ",", "all", "business", "dont", "do", "that"]
(c4-6 / and
      :op1 (c4-3 / claim-01
                 :mod (c4-2 / medicine)
                 :mod (c4-0 / false))
      :op2 (c4-7 / do-02
                 :ARG0 (c4-1 / business
                             :mod (c4-5 / all))
                 :ARG1 (c4-4 / that)
                 :polarity -))

# ::snt Gwen stop it!
# ::tokens ["Gwen", "stop", "it", "!"]
# ::lemmas ["Gwen", "stop", "it", "!"]
(c5-3 / stop-01
      :ARG0 (c5-1 / person
                  :name (c5-0 / name
                              :op1 "Gwen"))
      :ARG1 (c5-2 / it)
      :mode imperative)

# ::snt All companies tell us lies
# ::tokens ["All", "companies", "tell", "us", "lies"]
# ::lemmas ["all", "company", "tell", "we", "lie"]
(c6-3 / tell-01
      :ARG0 (c6-2 / company
                  :mod (c6-4 / all))
      :ARG1 (c6-0 / lie-08)
      :ARG2 (c6-1 / we))

# ::snt FDA
# ::tokens ["FDA"]
# ::lemmas ["FDA"]
(c7-0 / government-organization
      :name (c7-1 / name
                  :op1 "FDA"))

# ::snt Mistook her cuteness for her stupidness
# ::tokens ["Mistook", "her", "cuteness", "for", "her", "stupidness"]
# ::lemmas ["mistook", "her", "cuteness", "for", "her", "stupidness"]
(c8-2 / mistake-01
      :ARG1 (c8-0 / cuteness
                  :poss (c8-3 / she))
      :ARG2 (c8-1 / stupid
                  :domain c8-3))

# ::snt Me too!!!
# ::tokens ["Me", "too", "!", "!", "!"]
# ::lemmas ["i", "too", "!", "!", "!"]
(c9-0 / i
      :mod (c9-1 / too))

# ::snt Yes. Some one needs to admit she screwed up by giving medical advice when said someone is an actress not a doctor. Some one prefer threats
# ::tokens ["Yes", ".", "Some", "one", "needs", "to", "admit", "she", "screwed", "up", "by", "giving", "medical", "advice", "when", "said", "someone", "is", "an", "actress", "not", "a", "doctor", ".", "Some", "one", "prefer", "threats"]
# ::lemmas ["yes", ".", "some", "one", "need", "to", "admit", "she", "screw", "up", "by", "give", "medical", "advice", "when", "say", "someone", "be", "an", "actress", "not", "a", "doctor", ".", "some", "one", "prefer", "threat"]
(c10-3 / multi-sentence
       :snt1 (c10-1 / yes)
       :snt2 (c10-2 / need-01
                    :ARG0 (c10-4 / someone)
                    :ARG1 (c10-14 / admit-01
                                  :ARG0 c10-4
                                  :ARG1 (c10-0 / screw-up-01
                                               :ARG0 c10-4
                                               :ARG1 (c10-13 / advise-01
                                                             :ARG0 c10-4
                                                             :ARG1 c10-4
                                                             :mod (c10-8 / medicine)
                                                             :time (c10-16 / say-01
                                                                           :ARG1 (c10-10 / contrast-01
                                                                                         :ARG1 (c10-9 / person
                                                                                                      :ARG0-of (c10-11 / act-01)
                                                                                                      :domain (c10-5 / someone))
                                                                                         :ARG2 (c10-15 / doctor
                                                                                                       :polarity -)))))))
       :snt3 (c10-6 / prefer-01
                    :ARG0 (c10-7 / someone)
                    :ARG1 (c10-12 / threaten-01)))

# ::snt Yes tells consumers LIES, keep telling em, FDA watching
# ::tokens ["Yes", "tells", "consumers", "LIES", ",", "keep", "telling", "em", ",", "FDA", "watching"]
# ::lemmas ["yes", "tell", "consumer", "LIES", ",", "keep", "tell", "em", ",", "FDA", "watch"]
(c11-2 / and
       :op1 (c11-8 / tell-01
                   :ARG1 (c11-4 / lie-08
                                :ARG0 (c11-3 / person
                                             :ARG0-of (c11-6 / consume-01)
                                             :ARG2-of c11-8))
                   :mod (c11-0 / yes))
       :op2 (c11-5 / keep-02
                   :ARG1 (c11-10 / tell-01
                                 :ARG1 (c11-7 / watch-01
                                              :ARG0 (c11-9 / government-organization
                                                           :name (c11-1 / name
                                                                        :op1 "FDA")))
                                 :ARG2 c11-3)))

# ::snt Yes, continue pretending, your jade eggs aren't worth when dealing with infertility. What's next Gwyneth? Advice on rocket science?
# ::tokens ["Yes", ",", "continue", "pretending", ",", "your", "jade", "eggs", "are", "n't", "worth", "when", "dealing", "with", "infertility", ".", "What", "'s", "next", "Gwyneth", "?", "Advice", "on", "rocket", "science", "?"]
# ::lemmas ["yes", ",", "continue", "pretend", ",", "your", "jade", "egg", "be", "not", "worth", "when", "deal", "with", "infertility", ".", "what", "be", "next", "Gwyneth", "?", "advice", "on", "rocket", "science", "?"]
(c12-3 / multi-sentence
       :snt1 (c12-10 / continue-01
                     :ARG0 (c12-8 / person
                                  :name (c12-1 / name
                                               :op1 "Gwyneth"))
                     :ARG1 (c12-2 / pretend-01
                                  :ARG0 c12-8
                                  :ARG1 (c12-11 / worth-02
                                                :ARG1 (c12-6 / egg
                                                             :mod (c12-12 / jade)
                                                             :poss c12-8)
                                                :time (c12-16 / deal-01
                                                              :ARG0 c12-8
                                                              :ARG2 (c12-13 / infidelity))
                                                :polarity -))
                     :mod (c12-0 / yes)
                     :mode imperative)
       :snt2 (c12-14 / amr-unknown
                     :mod (c12-7 / next)
                     :domain (c12-17 / person
                                     :name (c12-9 / name
                                                  :op1 "Gwyneth")))
       :snt3 (c12-15 / advise-01
                     :ARG2 (c12-4 / science
                                  :mod (c12-5 / rocket))))

# ::snt "A" game brought, it's called FDA, and Gwyneth's Goop is the being slung by this woman who sells crystals and claims to cure infertility
# ::tokens ["\"", "A", "\"", "game", "brought", ",", "it", "'s", "called", "FDA", ",", "and", "Gwyneth", "'s", "Goop", "is", "the", "being", "slung", "by", "this", "woman", "who", "sells", "crystals", "and", "claims", "to", "cure", "infertility"]
# ::lemmas ["\"", "A", "\"", "game", "bring", ",", "it", "be", "call", "FDA", ",", "and", "Gwyneth", "'s", "Goop", "be", "the", "be", "sling", "by", "this", "woman", "who", "sell", "crystal", "and", "claim", "to", "cure", "infertility"]
(c13-5 / and
       :op1 (c13-8 / bring-01
                   :ARG1 (c13-6 / game
                                :name (c13-14 / name
                                              :op1 "A")
                                :ARG1-of (c13-11 / call-01
                                                 :ARG2 (c13-2 / government-organization
                                                              :name (c13-10 / name
                                                                            :op1 "FDA"))))
                   :op2 (c13-0 / sling-01
                               :ARG0 (c13-17 / woman
                                             :mod (c13-4 / this)
                                             :ARG0-of (c13-3 / sell-01
                                                             :ARG1 (c13-7 / crystal))
                                             :ARG0-of (c13-1 / claim-01
                                                             :ARG1 (c13-13 / cure-01
                                                                           :ARG0 c13-17
                                                                           :ARG1 (c13-18 / infidelity))))
                               :ARG1 (c13-15 / product
                                             :name (c13-16 / name
                                                           :op1 "Goop")
                                             :poss (c13-9 / person
                                                          :name (c13-12 / name
                                                                        :op1 "Gwyneth"))))))

# ::snt Um ya ok.
# ::tokens ["Um", "ya", "ok", "."]
# ::lemmas ["um", "ya", "ok", "."]
(c14-0 / okay-01
       :ARG1 (c14-2 / you)
       :mod (c14-1 / um
                   :mode expressive))

# ::snt F**k you. You are such a bitch....
# ::tokens ["F**k", "you", ".", "You", "are", "such", "a", "bitch", "...."]
# ::lemmas ["F**k", "you", ".", "you", "be", "such", "a", "bitch", "...."]
(c15-3 / multi-sentence
       :snt1 (c15-0 / fuck-01
                    :ARG1 (c15-2 / you)
                    :mode expressive)
       :snt2 (c15-1 / bitch
                    :domain (c15-5 / you)
                    :degree (c15-4 / such)))

# ::snt Nobody cares about you Ms. Snooty Pants Von Vagina Steamer. Your minutes are up!
# ::tokens ["Nobody", "cares", "about", "you", "Ms.", "Snooty", "Pants", "Von", "Vagina", "Steamer", ".", "Your", "minutes", "are", "up", "!"]
# ::lemmas ["nobody", "care", "about", "you", "Ms.", "Snooty", "Pants", "Von", "Vagina", "Steamer", ".", "your", "minute", "be", "up", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-6 / care-01
                    :ARG0 (c16-1 / nobody)
                    :ARG1 (c16-4 / person
                                 :name (c16-3 / name
                                              :op1 "Ms."
                                              :op2 "Snooty"
                                              :op3 "Pants"
                                              :op4 "Vagina"
                                              :op5 "Steamer")))
       :snt2 (c16-7 / up-02
                    :ARG1 (c16-5 / minute
                                 :poss (c16-0 / you))))

# ::snt Whatever
# ::tokens ["Whatever"]
# ::lemmas ["whatever"]
(c17-0 / whatever)

# ::snt Sit DOWN Gwen
# ::tokens ["Sit", "DOWN", "Gwen"]
# ::lemmas ["sit", "down", "Gwen"]
(c18-3 / say-01
       :ARG1 (c18-0 / sit-down-02
                    :ARG1 (c18-2 / person
                                 :name (c18-1 / name
                                              :op1 "Gwen")
                                 :ARG2-of c18-3)
                    :mode imperative))

# ::snt You tell them Gwyneth
# ::tokens ["You", "tell", "them", "Gwyneth"]
# ::lemmas ["you", "tell", "they", "Gwyneth"]
(c19-3 / tell-01
       :ARG0 (c19-0 / you)
       :ARG2 (c19-2 / person
                    :name (c19-1 / name
                                 :op1 "Gwyneth"))
       :ARG3 (c19-4 / they))

# ::snt This is not how she should have shown then how to be better than them. Its just by ignoring what they say, that we show that.
# ::tokens ["This", "is", "not", "how", "she", "should", "have", "shown", "then", "how", "to", "be", "better", "than", "them", ".", "Its", "just", "by", "ignoring", "what", "they", "say", ",", "that", "we", "show", "that", "."]
# ::lemmas ["this", "be", "not", "how", "she", "should", "have", "show", "then", "how", "to", "be", "well", "than", "they", ".", "its", "just", "by", "ignore", "what", "they", "say", ",", "that", "we", "show", "that", "."]
(c20-12 / multi-sentence
        :snt1 (c20-9 / thing
                     :manner-of (c20-15 / recommend-01
                                        :ARG1 (c20-0 / show-01
                                                     :ARG0 (c20-5 / she)
                                                     :ARG1 (c20-13 / thing
                                                                   :manner-of (c20-11 / good-02
                                                                                      :ARG2-of (c20-6 / have-degree-91
                                                                                                      :ARG1 c20-5
                                                                                                      :ARG3 (c20-7 / more)
                                                                                                      :ARG4 (c20-17 / they))))))
                     :domain (c20-1 / this)
                     :polarity -)
        :snt2 (c20-4 / show-01
                     :ARG0 (c20-16 / we)
                     :ARG1 (c20-10 / that)
                     :manner (c20-18 / ignore-01
                                     :ARG0 c20-16
                                     :ARG1 (c20-3 / thing
                                                  :ARG1-of (c20-14 / say-01
                                                                   :ARG0 (c20-2 / they))))
                     :mod (c20-8 / just)))

# ::snt Haha! I love Gwyneth Paltrow! Can't wait to see her on the next Avengers movie!! !
# ::tokens ["Haha", "!", "I", "love", "Gwyneth", "Paltrow", "!", "Ca", "n't", "wait", "to", "see", "her", "on", "the", "next", "Avengers", "movie", "!", "!", "!"]
# ::lemmas ["Haha", "!", "i", "love", "Gwyneth", "Paltrow", "!", "can", "not", "wait", "to", "see", "she", "on", "the", "next", "Avengers", "movie", "!", "!", "!"]
(c21-0 / multi-sentence
       :snt1 (c21-3 / haha
                    :domain (c21-5 / love-01
                                   :ARG0 (c21-10 / i)
                                   :ARG1 (c21-4 / person
                                                :name (c21-1 / name
                                                             :op1 "Gwyneth"
                                                             :op2 "Paltrow")))
                    :mode expressive)
       :snt2 (c21-8 / wait-01
                    :ARG1 c21-10
                    :ARG2 (c21-2 / see-01
                                 :ARG0 c21-10
                                 :ARG1 c21-4
                                 :location (c21-6 / movie
                                                  :name (c21-7 / name
                                                               :op1 "Avengers")
                                                  :mod (c21-9 / next)))))

# ::snt No one cares.
# ::tokens ["No", "one", "cares", "."]
# ::lemmas ["no", "one", "care", "."]
(c22-0 / care-01
       :ARG0 (c22-1 / no-one))

# ::snt Not my type
# ::tokens ["Not", "my", "type"]
# ::lemmas ["not", "my", "type"]
(c23-1 / type-03
       :ARG1 (c23-0 / i)
       :polarity -)

# ::snt Everyone needs to stop using the N word.
# ::tokens ["Everyone", "needs", "to", "stop", "using", "the", "N", "word", "."]
# ::lemmas ["everyone", "need", "to", "stop", "use", "the", "N", "word", "."]
(c24-1 / need-01
       :ARG0 (c24-3 / everyone)
       :ARG1 (c24-2 / stop-01
                    :ARG0 c24-3
                    :ARG1 (c24-5 / use-01
                                 :ARG0 c24-3
                                 :ARG1 (c24-4 / word
                                              :mod (c24-0 / string-entity
                                                          :value "N")))))

# ::snt Uh... Nooooo
# ::tokens ["Uh", "...", "Nooooo"]
# ::lemmas ["uh", "...", "Nooooo"]
(c25-1 / no
       :mod (c25-0 / uh))

# ::snt Nobody going to f*** with you unless they got a full body condom on. You are one skanky ho go steam your vajayjay.
# ::tokens ["Nobody", "going", "to", "f", "*", "*", "*", "with", "you", "unless", "they", "got", "a", "full", "body", "condom", "on", ".", "You", "are", "one", "skanky", "ho", "go", "steam", "your", "vajayjay", "."]
# ::lemmas ["nobody", "go", "to", "f", "*", "*", "*", "with", "you", "unless", "they", "get", "a", "full", "body", "condom", "on", ".", "you", "be", "one", "skanky", "ho", "go", "steam", "your", "vajayjay", "."]
(c26-6 / multi-sentence
       :snt1 (c26-1 / fuck-01
                    :ARG0 (c26-5 / nobody)
                    :ARG1 (c26-4 / you)
                    :condition (c26-10 / have-03
                                       :ARG0 c26-5
                                       :ARG1 (c26-12 / condom
                                                     :mod (c26-3 / body
                                                                 :ARG1-of (c26-11 / full-09)))
                                       :polarity -)
                    :polarity -)
       :snt2 (c26-7 / skanky
                    :domain (c26-13 / you))
       :snt3 (c26-8 / go-05
                    :ARG0 (c26-0 / you)
                    :ARG1 (c26-2 / steam-02
                                 :ARG0 c26-0
                                 :ARG1 (c26-9 / vajayjay
                                              :poss c26-0))
                    :mode imperative))

# ::snt Ok
# ::tokens ["Ok"]
# ::lemmas ["ok"]
(c27-0 / okay-01)

# ::snt Hell yeah
# ::tokens ["Hell", "yeah"]
# ::lemmas ["hell", "yeah"]
(c28-0 / yeah
       :mod (c28-1 / hell)
       :mode expressive)

# ::snt Country Strong ...
# ::tokens ["Country", "Strong", "..."]
# ::lemmas ["Country", "Strong", "..."]
(c29-1 / strong-02
       :ARG1 (c29-0 / country))

# ::snt love you gwen
# ::tokens ["love", "you", "gwen"]
# ::lemmas ["love", "you", "gwen"]
(c30-1 / say-01
       :ARG1 (c30-3 / love-01
                    :ARG0 (c30-4 / i)
                    :ARG1 (c30-2 / person
                                 :name (c30-0 / name
                                              :op1 "Gwen")
                                 :ARG2-of c30-1)))

# ::snt Whoa, don't mistake her meekness for her weakness. Get em girl.
# ::tokens ["Whoa", ",", "do", "n't", "mistake", "her", "meekness", "for", "her", "weakness", ".", "Get", "em", "girl", "."]
# ::lemmas ["whoa", ",", "do", "not", "mistake", "her", "meekness", "for", "her", "weakness", ".", "get", "em", "girl", "."]
(c31-1 / multi-sentence
       :snt1 (c31-3 / mistake-01
                    :ARG0 (c31-0 / you)
                    :ARG1 (c31-9 / meekness
                                 :poss (c31-2 / she))
                    :ARG2 (c31-5 / weak-02
                                 :ARG1 c31-2)
                    :mod (c31-4 / whoa
                                :mode expressive)
                    :polarity -
                    :mode imperative)
       :snt2 (c31-7 / get-05
                    :ARG0 (c31-8 / you)
                    :ARG1 (c31-6 / girl)
                    :mode imperative))

# ::snt You tell em girl.
# ::tokens ["You", "tell", "em", "girl", "."]
# ::lemmas ["you", "tell", "em", "girl", "."]
(c32-0 / say-01
       :ARG0 (c32-2 / i)
       :ARG1 (c32-1 / tell-01
                    :ARG0 (c32-4 / girl)
                    :ARG2 (c32-3 / they))
       :ARG2 c32-4)

# ::snt Welp!
# ::tokens ["Welp", "!"]
# ::lemmas ["welp", "!"]
(c33-0 / welp
       :mode expressive)

# ::snt You go Girrrl!
# ::tokens ["You", "go", "Girrrl", "!"]
# ::lemmas ["you", "go", "Girrrl", "!"]
(c34-2 / say-01
       :ARG1 (c34-4 / go-01
                    :ARG1 (c34-0 / you))
       :ARG2 (c34-3 / person
                    :name (c34-1 / name
                                 :op1 "Girrrl"))
       :mode expressive)

# ::snt Who is going to fuck with her
# ::tokens ["Who", "is", "going", "to", "fuck", "with", "her"]
# ::lemmas ["who", "be", "go", "to", "fuck", "with", "she"]
(c35-1 / fuck-01
       :ARG0 (c35-2 / amr-unknown)
       :ARG1 (c35-0 / she))

# ::snt You are spilling all over, why
# ::tokens ["You", "are", "spilling", "all", "over", ",", "why"]
# ::lemmas ["you", "be", "spill", "all", "over", ",", "why"]
(c36-1 / spill-01
       :ARG1 (c36-0 / you)
       :ARG2 (c36-4 / all-over)
       :ARG1-of (c36-2 / cause-01
                       :ARG0 (c36-3 / amr-unknown)))
