# ::snt So sad another one bites the dust. Sad,sad,sad.
# ::tokens ["So", "sad", "another", "one", "bites", "the", "dust", ".", "Sad", ",", "sad", ",", "sad", "."]
# ::lemmas ["so", "sad", "another", "one", "bite", "the", "dust", ".", "sad", ",", "sad", ",", "sad", "."]
(c1-3 / multi-sentence
      :snt1 (c1-4 / sad-02
                  :degree (c1-0 / so))
      :snt2 (c1-2 / bite-01
                  :ARG0 (c1-1 / one
                              :mod (c1-5 / another))
                  :ARG1 (c1-6 / dust))
      :snt3 (c1-7 / sad-02))

# ::snt He's gonna take her for all her shape ups money.
# ::tokens ["He", "'s", "gon", "na", "take", "her", "for", "all", "her", "shape", "ups", "money", "."]
# ::lemmas ["he", "be", "going", "to", "take", "she", "for", "all", "her", "shape", "up", "money", "."]
(c2-5 / take-01
      :ARG0 (c2-4 / he)
      :ARG1 (c2-2 / she)
      :ARG3 (c2-1 / money
                  :mod (c2-0 / shape-up)
                  :poss c2-2
                  :mod (c2-3 / all)))

# ::snt why is it that all these movie stars break up,or get a divorce,have you seen the numbers,what is the problem,marry for true love ok
# ::tokens ["why", "is", "it", "that", "all", "these", "movie", "stars", "break", "up", ",", "or", "get", "a", "divorce", ",", "have", "you", "seen", "the", "numbers", ",", "what", "is", "the", "problem", ",", "marry", "for", "true", "love", "ok"]
# ::lemmas ["why", "be", "it", "that", "all", "these", "movie", "star", "break", "up", ",", "or", "get", "a", "divorce", ",", "have", "you", "see", "the", "number", ",", "what", "be", "the", "problem", ",", "marry", "for", "true", "love", "ok"]
(c3-12 / multi-sentence
       :snt1 (c3-2 / or
                   :op1 (c3-11 / break-up-08
                               :ARG1 (c3-0 / star
                                           :mod (c3-5 / movie)
                                           :mod (c3-9 / all)
                                           :mod (c3-8 / this)))
                   :op2 (c3-18 / divorce-01
                               :ARG1 c3-0)
                   :ARG1-of (c3-13 / cause-01
                                   :ARG0 (c3-7 / amr-unknown)))
       :snt2 (c3-3 / see-01
                   :ARG0 (c3-4 / you)
                   :ARG1 (c3-16 / number)
                   :polarity (c3-6 / amr-unknown))
       :snt3 (c3-17 / problem
                    :domain (c3-15 / marry-01
                                   :ARG1 (c3-1 / love-01
                                               :ARG1-of (c3-14 / true-01))
                                   :ARG1-of (c3-10 / okay-04))))

# ::snt No way
# ::tokens ["No", "way"]
# ::lemmas ["no", "way"]
(c4-0 / way
      :quant 0)

# ::snt Hollywood marriage never works ....
# ::tokens ["Hollywood", "marriage", "never", "works", "...."]
# ::lemmas ["Hollywood", "marriage", "never", "work", "...."]
(c5-4 / work-09
      :ARG1 (c5-1 / marry-01
                  :mod (c5-3 / market-sector
                             :name (c5-0 / name
                                         :op1 "Hollywood")))
      :time (c5-2 / ever)
      :polarity -)

# ::snt I really thought those would last.
# ::tokens ["I", "really", "thought", "those", "would", "last", "."]
# ::lemmas ["i", "really", "think", "those", "would", "last", "."]
(c6-2 / think-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-1 / last-01
                  :ARG1 (c6-4 / that))
      :ARG1-of (c6-0 / real-04))

# ::snt who and who?
# ::tokens ["who", "and", "who", "?"]
# ::lemmas ["who", "and", "who", "?"]
(c7-2 / and
      :op1 (c7-1 / amr-unknown)
      :op2 (c7-0 / amr-unknown))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c8-0 / amr-unknown)

# ::snt No, there isn't.
# ::tokens ["No", ",", "there", "is", "n't", "."]
# ::lemmas ["no", ",", "there", "be", "not", "."]
(c9-0 / event
      :polarity -)

# ::snt Now that she's available I need to check with my wife to see if I can try my chances with her.
# ::tokens ["Now", "that", "she", "'s", "available", "I", "need", "to", "check", "with", "my", "wife", "to", "see", "if", "I", "can", "try", "my", "chances", "with", "her", "."]
# ::lemmas ["now", "that", "she", "be", "available", "i", "need", "to", "check", "with", "my", "wife", "to", "see", "if", "i", "can", "try", "my", "chance", "with", "she", "."]
(c10-0 / need-01
       :ARG0 (c10-9 / i)
       :ARG1 (c10-7 / check-01
                    :ARG0 c10-9
                    :ARG1 (c10-5 / person
                                 :ARG0-of (c10-4 / have-rel-role-91
                                                 :ARG1 c10-9
                                                 :ARG2 (c10-8 / wife)))
                    :purpose (c10-2 / see-01
                                    :ARG0 c10-9
                                    :ARG1 (c10-10 / truth-value
                                                  :polarity-of (c10-1 / possible-01
                                                                      :ARG1 (c10-12 / try-01
                                                                                    :ARG0 c10-9
                                                                                    :ARG1 (c10-11 / chance-01
                                                                                                  :ARG0 c10-9
                                                                                                  :ARG2 c10-5))))))
       :time (c10-3 / available-02
                    :ARG2 c10-5
                    :time (c10-6 / now)))

# ::snt OMG!
# ::tokens ["OMG", "!"]
# ::lemmas ["OMG", "!"]
(c11-0 / oh-my-god
       :mode expressive)

# ::snt Now's your chance Kevin
# ::tokens ["Now", "'s", "your", "chance", "Kevin"]
# ::lemmas ["now", "be", "your", "chance", "Kevin"]
(c12-1 / say-01
       :ARG0 (c12-5 / i)
       :ARG1 (c12-4 / chance-02
                    :ARG0 (c12-3 / person
                                 :name (c12-0 / name
                                              :op1 "Kevin"))
                    :time (c12-2 / now))
       :ARG2 c12-3)

# ::snt WhoDis?
# ::tokens ["WhoDis", "?"]
# ::lemmas ["WhoDis", "?"]
(c13-0 / amr-unknownDispatch)

# ::snt From now on you are my go to for all celebrity gossip
# ::tokens ["From", "now", "on", "you", "are", "my", "go", "to", "for", "all", "celebrity", "gossip"]
# ::lemmas ["from", "now", "on", "you", "be", "my", "go", "to", "for", "all", "celebrity", "gossip"]
(c14-7 / go-02
       :ARG0 (c14-6 / i)
       :ARG1 (c14-1 / you)
       :ARG4 (c14-5 / gossip
                    :mod (c14-4 / celebrity)
                    :mod (c14-3 / all))
       :time (c14-0 / from
                    :op1 (c14-2 / now)))

# ::snt She pees a little
# ::tokens ["She", "pees", "a", "little"]
# ::lemmas ["she", "pee", "a", "little"]
(c15-0 / peep-01
       :ARG0 (c15-2 / she)
       :degree (c15-1 / little))

# ::snt She's still unbelievable
# ::tokens ["She", "'s", "still", "unbelievable"]
# ::lemmas ["she", "be", "still", "unbelievable"]
(c16-2 / possible-01
       :ARG1 (c16-1 / believe-01
                    :ARG1 (c16-3 / she))
       :mod (c16-0 / still)
       :polarity -)

# ::snt Now's my chance !
# ::tokens ["Now", "'s", "my", "chance", "!"]
# ::lemmas ["now", "be", "my", "chance", "!"]
(c17-0 / chance-02
       :ARG0 (c17-2 / i)
       :time (c17-1 / now)
       :mode expressive)

# ::snt Thanks for sharing!
# ::tokens ["Thanks", "for", "sharing", "!"]
# ::lemmas ["thank", "for", "sharing", "!"]
(c18-2 / thank-01
       :ARG1 (c18-1 / you)
       :ARG2 (c18-0 / share-01
                    :ARG0 c18-1)
       :mode expressive)

# ::snt You starting a second career as a gossip columnist?
# ::tokens ["You", "starting", "a", "second", "career", "as", "a", "gossip", "columnist", "?"]
# ::lemmas ["you", "start", "a", "second", "career", "as", "a", "gossip", "columnist", "?"]
(c19-2 / start-01
       :polarity (c19-4 / amr-unknown)
       :ARG0 (c19-1 / you)
       :ARG1 (c19-3 / career
                    :ord (c19-0 / ordinal-entity
                                :value 2)
                    :mod (c19-6 / columnist
                                :topic (c19-5 / gossip))))

# ::snt What's that old saying? "For every beautiful women, there's a guy out there who's tired of her bullshit!"
# ::tokens ["What", "'s", "that", "old", "saying", "?", "\"", "For", "every", "beautiful", "women", ",", "there", "'s", "a", "guy", "out", "there", "who", "'s", "tired", "of", "her", "bullshit", "!", "\""]
# ::lemmas ["what", "be", "that", "old", "saying", "?", "\"", "for", "every", "beautiful", "woman", ",", "there", "be", "a", "guy", "out", "there", "who", "be", "tired", "of", "her", "bullshit", "!", "\""]
(c20-3 / multi-sentence
       :snt1 (c20-4 / say-01
                    :ARG1 (c20-9 / amr-unknown)
                    :mod (c20-0 / old))
       :snt2 (c20-8 / tire-03
                    :ARG0 (c20-10 / guy
                                  :location (c20-1 / out-there))
                    :ARG1 (c20-2 / bullshit
                                 :poss (c20-7 / woman
                                              :ARG1-of (c20-6 / beautiful-02)
                                              :mod (c20-5 / every)))))

# ::snt He's going to bag year old's like Adam! He's still on the hot side.
# ::tokens ["He", "'s", "going", "to", "bag", "year", "old", "'s", "like", "Adam", "!", "He", "'s", "still", "on", "the", "hot", "side", "."]
# ::lemmas ["he", "be", "go", "to", "bag", "year", "old", "'s", "like", "Adam", "!", "he", "be", "still", "on", "the", "hot", "side", "."]
(c21-4 / multi-sentence
       :snt1 (c21-6 / resemble-01
                    :ARG1 (c21-8 / he)
                    :ARG2 (c21-9 / person
                                 :name (c21-3 / name
                                              :op1 "Adam"))
                    :mod (c21-2 / year))
       :snt2 (c21-1 / be-located-at-91
                    :ARG1 (c21-10 / he)
                    :ARG2 (c21-5 / side
                                 :ARG1-of (c21-7 / hot-04))
                    :mod (c21-0 / still)))

# ::snt oh no!
# ::tokens ["oh", "no", "!"]
# ::lemmas ["oh", "no", "!"]
(c22-0 / oh-no
       :mode expressive)

# ::snt Who are those two people?
# ::tokens ["Who", "are", "those", "two", "people", "?"]
# ::lemmas ["who", "be", "those", "two", "people", "?"]
(c23-1 / person
       :domain (c23-2 / amr-unknown)
       :mod (c23-0 / that)
       :quant 2)

# ::snt What a shock? NOT!
# ::tokens ["What", "a", "shock", "?", "NOT", "!"]
# ::lemmas ["what", "a", "shock", "?", "not", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-3 / shock-01
                    :degree (c24-0 / so))
       :snt2 (c24-1 / have-polarity-91
                    :ARG2 -))
