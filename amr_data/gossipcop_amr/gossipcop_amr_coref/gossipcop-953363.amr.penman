# ::snt If you want to walk around and see the inside of the Brady Bunch home the way it was on the show -I do D renderings of TV homes, then, I remodel them! You'll see Full House, I Love Lucy, Bewitched, etc. Next up is the Brady Bunch home.
# ::tokens ["If", "you", "want", "to", "walk", "around", "and", "see", "the", "inside", "of", "the", "Brady", "Bunch", "home", "the", "way", "it", "was", "on", "the", "show", "-I", "do", "D", "renderings", "of", "TV", "homes", ",", "then", ",", "I", "remodel", "them", "!", "You", "'ll", "see", "Full", "House", ",", "I", "Love", "Lucy", ",", "Bewitched", ",", "etc", ".", "Next", "up", "is", "the", "Brady", "Bunch", "home", "."]
# ::lemmas ["if", "you", "want", "to", "walk", "around", "and", "see", "the", "inside", "of", "the", "Brady", "Bunch", "home", "the", "way", "it", "be", "on", "the", "show", "-i", "do", "d", "rendering", "of", "tv", "home", ",", "then", ",", "i", "remodel", "they", "!", "you", "'ll", "see", "Full", "House", ",", "i", "love", "Lucy", ",", "Bewitched", ",", "etc", ".", "next", "up", "be", "the", "Brady", "Bunch", "home", "."]
(c1-16 / multi-sentence
       :snt1 (c1-9 / have-condition-91
                   :ARG1 (c1-27 / want-01
                                :ARG0 (c1-6 / you)
                                :ARG1 (c1-13 / and
                                             :op1 (c1-2 / walk-01
                                                        :ARG0 c1-6
                                                        :ARG2 (c1-11 / around))
                                             :op2 (c1-0 / see-01
                                                        :ARG0 c1-6
                                                        :ARG1 (c1-30 / inside
                                                                     :part-of (c1-28 / home
                                                                                     :poss (c1-25 / person
                                                                                                  :name (c1-22 / name
                                                                                                               :op1 "Brady"
                                                                                                               :op2 "Bunch"))))
                                                        :manner (c1-21 / way
                                                                       :manner-of (c1-23 / remodel-01
                                                                                         :ARG0 c1-25
                                                                                         :ARG1 (c1-8 / home
                                                                                                     :mod (c1-12 / television))))))
                                :ARG2-of c1-9)
                   :ARG0 c1-6
                   :ARG1 (c1-10 / and
                                :op1 c1-2
                                :ARG0 c1-6
                                :ARG2 c1-11))
       :op2 (c1-5 / see-01
                  :ARG0 c1-6
                  :ARG1 c1-30
                  :part-of c1-8)
       :snt2 c1-23
       :ARG0 (c1-7 / i)
       :ARG1 c1-8
       :time (c1-19 / then)
       :snt3 (c1-3 / see-01
                   :ARG0 (c1-14 / you)
                   :ARG1 (c1-31 / and
                                :op1 (c1-15 / broadcast-program
                                            :name (c1-17 / name
                                                         :op1 "Full"
                                                         :op2 "House"))
                                :op2 (c1-1 / broadcast-program
                                           :name (c1-26 / name
                                                        :op1 "I"
                                                        :op2 "Love"
                                                        :op3 "Lucy"))
                                :op3 (c1-4 / broadcast-program
                                           :name (c1-18 / name
                                                        :op1 "Bewitched"))
                                :op4 (c1-24 / et-cetera)))
       :snt4 (c1-20 / home
                    :poss c1-25
                    :mod (c1-29 / next)))

# ::snt Don Drysdale showing Greg how to throw a proper cutter on that astroturf.
# ::tokens ["Don", "Drysdale", "showing", "Greg", "how", "to", "throw", "a", "proper", "cutter", "on", "that", "astroturf", "."]
# ::lemmas ["Don", "Drysdale", "show", "Greg", "how", "to", "throw", "a", "proper", "cutter", "on", "that", "astroturf", "."]
(c2-2 / show-01
      :ARG0 (c2-5 / person
                  :name (c2-0 / name
                              :op1 "Don"
                              :op2 "Drysdale"))
      :ARG1 (c2-8 / throw-01
                  :ARG0 (c2-1 / person
                              :name (c2-4 / name
                                          :op1 "Greg"))
                  :ARG1 (c2-9 / product
                              :ARG0-of (c2-6 / cut-01
                                             :mod (c2-7 / proper)))
                  :ARG2 (c2-3 / astroturf
                              :mod (c2-10 / that)))
      :ARG2 c2-1)

# ::snt House value doubled roughly five times over years. Rule of calc puts that at about an % smoothed annual appreciation rate (aka CAGR aka compound annual growth rate) over that period.Nice to tweet about numbs and financial health from time to time ...
# ::tokens ["House", "value", "doubled", "roughly", "five", "times", "over", "years", ".", "Rule", "of", "calc", "puts", "that", "at", "about", "an", "%", "smoothed", "annual", "appreciation", "rate", "(", "aka", "CAGR", "aka", "compound", "annual", "growth", "rate", ")", "over", "that", "period", ".", "Nice", "to", "tweet", "about", "numbs", "and", "financial", "health", "from", "time", "to", "time", "..."]
# ::lemmas ["House", "value", "double", "roughly", "five", "time", "over", "year", ".", "rule", "of", "calc", "put", "that", "at", "about", "an", "%", "smoothed", "annual", "appreciation", "rate", "(", "aka", "CAGR", "aka", "compound", "annual", "growth", "rate", ")", "over", "that", "period", ".", "nice", "to", "tweet", "about", "numb", "and", "financial", "health", "from", "time", "to", "time", "..."]
(c3-19 / multi-sentence
       :snt1 (c3-34 / double-01
                    :ARG1 (c3-9 / value-01
                                :ARG1 (c3-10 / house))
                    :ARG2 (c3-29 / roughly
                                 :op1 5)
                    :duration (c3-11 / multiple
                                     :op1 (c3-15 / temporal-quantity
                                                 :unit (c3-8 / year)
                                                 :quant 1)))
       :snt2 (c3-30 / put-01
                    :ARG0 (c3-6 / rule-01
                                :ARG1 (c3-24 / thing
                                             :name (c3-28 / name
                                                          :op1 "Rule"
                                                          :op2 "of"
                                                          :op3 " calc")))
                    :ARG1 c3-9
                    :ARG2 (c3-22 / rate-entity-91
                                 :ARG1 (c3-14 / about
                                              :op1 (c3-20 / percentage-entity
                                                          :value 1)
                                              :ARG1-of (c3-1 / smooth-06))
                                 :ARG2 (c3-0 / rate-entity-91
                                             :ARG1 (c3-13 / appreciate-01)
                                             :ARG2 (c3-33 / temporal-quantity
                                                          :unit (c3-16 / year)
                                                          :quant 1)
                                             :ARG1-of (c3-25 / mean-01
                                                             :ARG2 (c3-27 / rate-entity-91
                                                                          :ARG1 (c3-23 / compound-01
                                                                                       :ARG1 (c3-17 / grow-01)
                                                                                       :ARG2 (c3-2 / temporal-quantity
                                                                                                   :unit (c3-7 / year)
                                                                                                   :quant 1)))))
                                 :duration (c3-4 / period
                                                 :mod (c3-18 / that))))
       :snt3 (c3-21 / nice-01
                    :ARG1 (c3-5 / tweet-02
                                :topic (c3-12 / and
                                              :op1 (c3-31 / numbs)
                                              :op2 (c3-32 / health
                                                          :mod (c3-26 / finance)))
                                :frequency (c3-3 / time-to-time))))

# ::snt Not sure if this one is still available, but if Im gonna buy a house with a connection to a tv show...
# ::tokens ["Not", "sure", "if", "this", "one", "is", "still", "available", ",", "but", "if", "I", "m", "gon", "na", "buy", "a", "house", "with", "a", "connection", "to", "a", "tv", "show", "..."]
# ::lemmas ["not", "sure", "if", "this", "one", "be", "still", "available", ",", "but", "if", "i", "m", "going", "to", "buy", "a", "house", "with", "a", "connection", "to", "a", "tv", "show", "..."]
(c4-6 / contrast-01
      :ARG1 (c4-3 / sure-02
                  :ARG0 (c4-9 / i)
                  :ARG1 (c4-10 / available-02
                               :ARG2 (c4-0 / one
                                           :mod (c4-8 / this))
                               :mod (c4-1 / still))
                  :polarity -)
      :ARG2 (c4-5 / have-condition-91
                  :ARG2 (c4-2 / buy-01
                              :ARG0 c4-9
                              :ARG1 (c4-7 / house
                                          :ARG0-of (c4-4 / have-03
                                                         :ARG1 (c4-12 / connection
                                                                      :prep-to (c4-13 / show-04
                                                                                      :ARG1 (c4-11 / television))))))))

# ::snt so a typical bed bath?
# ::tokens ["so", "a", "typical", "bed", "bath", "?"]
# ::lemmas ["so", "a", "typical", "bed", "bath", "?"]
(c5-3 / infer-01
      :polarity (c5-1 / amr-unknown)
      :ARG1 (c5-0 / bath-01
                  :mod (c5-2 / bed)
                  :ARG1-of (c5-4 / typical-02)))

# ::snt Here's a story of a certain news team
# ::tokens ["Here", "'s", "a", "story", "of", "a", "certain", "news", "team"]
# ::lemmas ["here", "be", "a", "story", "of", "a", "certain", "news", "team"]
(c6-1 / story
      :poss (c6-4 / team
                  :mod (c6-0 / news)
                  :mod (c6-3 / certain))
      :location (c6-2 / here))

# ::snt Yes but you have to throw in ! His personality is awesome! From what I can tell by watching y'all
# ::tokens ["Yes", "but", "you", "have", "to", "throw", "in", "!", "His", "personality", "is", "awesome", "!", "From", "what", "I", "can", "tell", "by", "watching", "y'", "all"]
# ::lemmas ["yes", "but", "you", "have", "to", "throw", "in", "!", "his", "personality", "be", "awesome", "!", "from", "what", "i", "can", "tell", "by", "watch", "you", "all"]
(c7-2 / multi-sentence
      :snt1 (c7-7 / contrast-01
                  :ARG2 (c7-0 / obligate-01
                              :ARG1 (c7-1 / you)
                              :ARG2 (c7-10 / throw-in-02
                                           :ARG0 c7-1)))
      :snt2 (c7-4 / awesome-03
                  :ARG1 (c7-6 / personality
                              :poss (c7-5 / he)))
      :snt3 (c7-13 / thing
                   :ARG1-of (c7-9 / tell-01
                                  :ARG0 (c7-11 / i)
                                  :ARG1-of (c7-3 / possible-01)
                                  :manner (c7-8 / watch-01
                                                :ARG0 c7-11
                                                :ARG1 c7-1
                                                :mod (c7-12 / all)))))

# ::snt Marcia Marcia Marcia
# ::tokens ["Marcia", "Marcia", "Marcia"]
# ::lemmas ["Marcia", "Marcia", "Marcia"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "MarciaMarcia"))

# ::snt ABSOLUTELY
# ::tokens ["ABSOLUTELY"]
# ::lemmas ["ABSOLUTELY"]
(c9-0 / absolute)

# ::snt Wheres Tiger?
# ::tokens ["Where", "s", "Tiger", "?"]
# ::lemmas ["where", "s", "Tiger", "?"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Wheres"
                    :op2 "Tiger")
       :polarity (c10-2 / amr-unknown))

# ::snt lmaoo you guys crack me up every day and every morning! great team for my morning fix
# ::tokens ["lmaoo", "you", "guys", "crack", "me", "up", "every", "day", "and", "every", "morning", "!", "great", "team", "for", "my", "morning", "fix"]
# ::lemmas ["lmaoo", "you", "guy", "crack", "i", "up", "every", "day", "and", "every", "morning", "!", "great", "team", "for", "my", "morning", "fix"]
(c12-10 / multi-sentence
        :snt1 (c12-12 / crack-up-03
                      :ARG0 (c12-3 / you
                                   :mod (c12-7 / guy))
                      :ARG1 (c12-18 / i)
                      :frequency (c12-17 / rate-entity-91
                                         :ARG3 (c12-6 / temporal-quantity
                                                      :unit (c12-19 / day)
                                                      :quant 1))
                      :frequency (c12-2 / rate-entity-91
                                        :ARG3 (c12-13 / date-entity
                                                      :dayperiod (c12-5 / morning))))
        :snt2 (c12-14 / team
                      :mod (c12-1 / great)
                      :purpose (c12-16 / fix-02
                                       :ARG0 (c12-4 / i)
                                       :time (c12-11 / date-entity
                                                     :dayperiod (c12-15 / morning))))
        :snt3 (c12-0 / laugh-01
                     :ARG0 (c12-9 / i)
                     :manner (c12-8 / loud)
                     :mode expressive))

# ::snt Hi Heather do have a great weekend, you always bring a kind full smile to my face, thanks pretty lady.
# ::tokens ["Hi", "Heather", "do", "have", "a", "great", "weekend", ",", "you", "always", "bring", "a", "kind", "full", "smile", "to", "my", "face", ",", "thanks", "pretty", "lady", "."]
# ::lemmas ["hi", "Heather", "do", "have", "a", "great", "weekend", ",", "you", "always", "bring", "a", "kind", "full", "smile", "to", "my", "face", ",", "thank", "pretty", "lady", "."]
(c13-11 / multi-sentence
        :snt1 (c13-0 / say-01
                     :ARG1 (c13-8 / and
                                  :op1 (c13-4 / hi)
                                  :op2 (c13-18 / have-03
                                               :ARG0 (c13-15 / person
                                                             :name (c13-14 / name
                                                                           :op1 "Heather")
                                                             :part (c13-13 / face))
                                               :ARG1 (c13-17 / weekend
                                                             :mod (c13-9 / great))))
                     :ARG2 c13-15)
        :snt2 (c13-10 / bring-01
                      :ARG0 (c13-3 / you)
                      :ARG1 (c13-2 / smile-01
                                   :ARG0 c13-3
                                   :ARG1-of (c13-16 / full-09)
                                   :mod (c13-5 / kind))
                      :ARG2 c13-13
                      :time (c13-6 / always))
        :snt3 (c13-7 / thank-01
                     :ARG0 (c13-19 / i
                                   :part c13-13)
                     :ARG1 (c13-1 / lady
                                  :mod (c13-12 / pretty))))

# ::snt ????
# ::tokens ["?", "?", "?", "?"]
# ::lemmas ["?", "?", "?", "?"]
(c15-0 / amr-empty)

# ::snt House would be to small! Buy it to upgrade! I Forgot you cant! Let me talk to Greg &amp; Marsha!
# ::tokens ["House", "would", "be", "to", "small", "!", "Buy", "it", "to", "upgrade", "!", "I", "Forgot", "you", "ca", "nt", "!", "Let", "me", "talk", "to", "Greg", "&", "amp", ";", "Marsha", "!"]
# ::lemmas ["House", "would", "be", "to", "small", "!", "buy", "it", "to", "upgrade", "!", "i", "forgot", "you", "can", "nt", "!", "let", "i", "talk", "to", "Greg", "&", "amp", ";", "Marsha", "!"]
(c16-11 / multi-sentence
        :snt1 (c16-0 / small
                     :domain (c16-6 / house)
                     :degree (c16-8 / too))
        :snt2 (c16-10 / buy-01
                      :ARG0 (c16-4 / you)
                      :ARG1 c16-6
                      :purpose (c16-15 / upgrade-02
                                       :ARG1 c16-6)
                      :mode imperative)
        :snt3 (c16-16 / Forgot-01
                      :ARG0 (c16-19 / i)
                      :ARG1 (c16-18 / possible-01
                                    :ARG1 (c16-9 / you)
                                    :polarity -))
        :snt4 (c16-1 / let-01
                     :ARG0 (c16-3 / you)
                     :ARG1 (c16-14 / talk-01
                                   :ARG0 (c16-5 / i)
                                   :ARG2 (c16-7 / and
                                                :op1 (c16-12 / person
                                                             :name (c16-17 / name
                                                                           :op1 "Greg"
                                                                           :op2 "&"
                                                                           :op3 "amp"))
                                                :op2 (c16-2 / person
                                                            :name (c16-13 / name
                                                                          :op1 "Marsha"))))
                     :mode imperative))

# ::snt I don't know...those two boys are trouble!
# ::tokens ["I", "do", "n't", "know", "...", "those", "two", "boys", "are", "trouble", "!"]
# ::lemmas ["i", "do", "not", "know", "...", "those", "two", "boy", "be", "trouble", "!"]
(c17-1 / multi-sentence
       :snt1 (c17-2 / know-01
                    :ARG0 (c17-3 / i)
                    :polarity -)
       :snt2 (c17-4 / trouble-05
                    :ARG1 (c17-0 / boy
                                 :mod (c17-5 / that)
                                 :quant 2)))

# ::snt Yass
# ::tokens ["Yass"]
# ::lemmas ["yass"]
(c18-0 / ass
       :mode expressive)

# ::snt TGIF Love you guys!
# ::tokens ["TGIF", "Love", "you", "guys", "!"]
# ::lemmas ["tgif", "Love", "you", "guy", "!"]
(c19-0 / say-01
       :ARG0 (c19-3 / i)
       :ARG1 (c19-4 / and
                    :op1 (c19-2 / TGIF)
                    :op2 (c19-1 / love-01
                                :ARG0 c19-3
                                :ARG1 (c19-5 / guy
                                             :ARG2-of c19-0))))

# ::snt Hahaha love it. Thanks for playing along, Donna!
# ::tokens ["Hahaha", "love", "it", ".", "Thanks", "for", "playing", "along", ",", "Donna", "!"]
# ::lemmas ["Hahaha", "love", "it", ".", "thank", "for", "play", "along", ",", "Donna", "!"]
(c20-0 / multi-sentence
       :snt1 (c20-6 / love-01
                    :ARG1 (c20-8 / it)
                    :mod (c20-5 / haha))
       :snt2 (c20-9 / thank-01
                    :ARG0 (c20-3 / i)
                    :ARG1 (c20-7 / person
                                 :name (c20-1 / name
                                              :op1 "Donna"))
                    :ARG2 (c20-2 / play-01
                                 :ARG0 c20-7
                                 :manner (c20-4 / along))))

# ::snt Awesome!!! You are killing me lol !! Love the morning crew!!! The best ever
# ::tokens ["Awesome", "!", "!", "!", "You", "are", "killing", "me", "lol", "!", "!", "Love", "the", "morning", "crew", "!", "!", "!", "The", "best", "ever"]
# ::lemmas ["Awesome", "!", "!", "!", "you", "be", "kill", "i", "lol", "!", "!", "love", "the", "morning", "crew", "!", "!", "!", "the", "good", "ever"]
(c21-1 / multi-sentence
       :snt1 (c21-11 / awe-01
                     :mode expressive)
       :snt2 (c21-4 / kill-01
                    :ARG0 (c21-0 / you)
                    :ARG1 (c21-10 / i)
                    :manner (c21-5 / laugh-01
                                   :ARG0 c21-10
                                   :manner (c21-14 / loud)))
       :snt3 (c21-6 / love-01
                    :ARG1 (c21-8 / crew
                                 :time (c21-13 / date-entity
                                               :dayperiod (c21-3 / morning)))
                    :mode expressive)
       :snt4 (c21-9 / thing
                    :ARG1-of (c21-7 / have-degree-91
                                    :ARG2 (c21-12 / good-02
                                                  :ARG1 c21-9)
                                    :ARG3 (c21-15 / most)
                                    :time (c21-2 / ever))))

# ::snt Musing Ken!
# ::tokens ["Musing", "Ken", "!"]
# ::lemmas ["Musing", "Ken", "!"]
(c22-1 / make-01
       :ARG1 (c22-2 / thing
                    :name (c22-0 / name
                                 :op1 "Ken"))
       :mode expressive)

# ::snt I didn't think about her whining. But your sweet &amp; so was she!!!
# ::tokens ["I", "did", "n't", "think", "about", "her", "whining", ".", "But", "your", "sweet", "&", "amp", ";", "so", "was", "she", "!", "!", "!"]
# ::lemmas ["i", "do", "not", "think", "about", "her", "whining", ".", "but", "your", "sweet", "&", "amp", ";", "so", "be", "she", "!", "!", "!"]
(c23-2 / multi-sentence
       :snt1 (c23-8 / think-01
                    :ARG0 (c23-7 / i)
                    :ARG1 (c23-5 / whine-01
                                 :ARG0 (c23-3 / she))
                    :polarity -)
       :snt2 (c23-6 / contrast-01
                    :ARG2 (c23-4 / and
                                 :op1 (c23-0 / sweet-and-amp
                                             :poss (c23-1 / you))
                                 :op2 (c23-9 / she))))

# ::snt Wait a minute... I am not Jan. Jan is a whiner
# ::tokens ["Wait", "a", "minute", "...", "I", "am", "not", "Jan.", "Jan", "is", "a", "whiner"]
# ::lemmas ["wait", "a", "minute", "...", "i", "be", "not", "Jan.", "Jan", "be", "a", "whiner"]
(c24-1 / multi-sentence
       :snt1 (c24-7 / wait-01
                    :ARG1 (c24-0 / you)
                    :duration (c24-9 / temporal-quantity
                                     :unit (c24-4 / minute)
                                     :quant 1)
                    :mode imperative)
       :snt2 (c24-5 / person
                    :name (c24-2 / name
                                 :op1 "Jan")
                    :domain (c24-8 / i)
                    :polarity -)
       :snt3 (c24-6 / whine-01
                    :ARG0 (c24-3 / person
                                 :name c24-2
                                 :op1 "Jan")))

# ::snt Heather your Jan, Shirleen your Cindy, Rob your Bobby &amp; Bill your Greg!!!
# ::tokens ["Heather", "your", "Jan", ",", "Shirleen", "your", "Cindy", ",", "Rob", "your", "Bobby", "&", "amp", ";", "Bill", "your", "Greg", "!", "!", "!"]
# ::lemmas ["heather", "your", "Jan", ",", "Shirleen", "your", "Cindy", ",", "Rob", "your", "Bobby", "&", "amp", ";", "Bill", "your", "Greg", "!", "!", "!"]
(c25-7 / and
       :op1 (c25-17 / person
                    :name (c25-15 / name
                                  :op1 "Heather")
                    :ARG0-of (c25-4 / have-rel-role-91
                                    :ARG1 (c25-2 / you)
                                    :ARG2 (c25-5 / Jan)))
       :op2 (c25-10 / person
                    :name (c25-11 / name
                                  :op1 "Shirleen")
                    :ARG0-of (c25-19 / have-rel-role-91
                                     :ARG1 c25-2
                                     :ARG2 (c25-12 / Cindy)))
       :op3 (c25-1 / person
                   :name (c25-18 / name
                                 :op1 "Rob")
                   :ARG0-of (c25-3 / have-rel-role-91
                                   :ARG1 c25-2
                                   :ARG2 (c25-6 / and
                                                :op1 (c25-0 / person
                                                            :name (c25-13 / name
                                                                          :op1 "Bobby"))
                                                :op2 (c25-8 / person
                                                            :name (c25-20 / name
                                                                          :op1 "Greg")))))
       :op4 (c25-21 / person
                    :name (c25-16 / name
                                  :op1 "Bill")
                    :ARG0-of (c25-14 / have-rel-role-91
                                     :ARG1 c25-2
                                     :ARG2 (c25-9 / member))))

# ::snt The ABC Bunch!
# ::tokens ["The", "ABC", "Bunch", "!"]
# ::lemmas ["the", "ABC", "Bunch", "!"]
(c27-2 / lunch
       :mod (c27-0 / publication
                   :name (c27-1 / name
                                :op1 "ABC")))

# ::snt I'm convinced I have a better idea.
# ::tokens ["I", "'m", "convinced", "I", "have", "a", "better", "idea", "."]
# ::lemmas ["i", "be", "convinced", "i", "have", "a", "well", "idea", "."]
(c28-3 / convince-01
       :ARG1 (c28-5 / i)
       :ARG2 (c28-2 / have-03
                    :ARG0 c28-5
                    :ARG1 (c28-1 / idea
                                 :ARG1-of (c28-4 / have-degree-91
                                                 :ARG2 (c28-6 / good-02
                                                              :ARG1 c28-1)
                                                 :ARG3 (c28-0 / more)))))

# ::snt I think you would all look great in the house . Have a wonderful Friday and a beautiful weekend!! !!!
# ::tokens ["I", "think", "you", "would", "all", "look", "great", "in", "the", "house", ".", "Have", "a", "wonderful", "Friday", "and", "a", "beautiful", "weekend", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "think", "you", "would", "all", "look", "great", "in", "the", "house", ".", "have", "a", "wonderful", "Friday", "and", "a", "beautiful", "weekend", "!", "!", "!", "!", "!"]
(c29-3 / multi-sentence
       :snt1 (c29-12 / think-01
                     :ARG0 (c29-11 / i)
                     :ARG1 (c29-7 / look-02
                                  :ARG0 (c29-2 / you
                                               :mod (c29-4 / all))
                                  :ARG1 (c29-13 / great)
                                  :location (c29-6 / house)))
       :snt2 (c29-10 / have-03
                     :ARG0 c29-2
                     :mode imperative)
       :ARG1 (c29-14 / and
                     :op1 (c29-5 / date-entity
                                 :weekday (c29-0 / friday)
                                 :ARG1-of (c29-9 / wonderful-03))
                     :op2 (c29-8 / weekend
                                 :ARG1-of (c29-1 / beautiful-02))))

# ::snt Bahahahaha
# ::tokens ["Bahahahaha"]
# ::lemmas ["Bahahahaha"]
(c30-0 / haha
       :mode expressive)

# ::snt If you want to walk around and see the inside of the Brady Bunch home the way it was on the show -I do D renderings of TV homes, then, I remodel them! You'll see Full House, I Love Lucy, Bewitched, etc. Next up is the Brady Bunch home.
# ::tokens ["If", "you", "want", "to", "walk", "around", "and", "see", "the", "inside", "of", "the", "Brady", "Bunch", "home", "the", "way", "it", "was", "on", "the", "show", "-I", "do", "D", "renderings", "of", "TV", "homes", ",", "then", ",", "I", "remodel", "them", "!", "You", "'ll", "see", "Full", "House", ",", "I", "Love", "Lucy", ",", "Bewitched", ",", "etc", ".", "Next", "up", "is", "the", "Brady", "Bunch", "home", "."]
# ::lemmas ["if", "you", "want", "to", "walk", "around", "and", "see", "the", "inside", "of", "the", "Brady", "Bunch", "home", "the", "way", "it", "be", "on", "the", "show", "-i", "do", "d", "rendering", "of", "tv", "home", ",", "then", ",", "i", "remodel", "they", "!", "you", "'ll", "see", "Full", "House", ",", "i", "love", "Lucy", ",", "Bewitched", ",", "etc", ".", "next", "up", "be", "the", "Brady", "Bunch", "home", "."]
(c31-16 / multi-sentence
        :snt1 (c31-9 / have-condition-91
                     :ARG1 (c31-27 / want-01
                                   :ARG0 (c31-6 / you)
                                   :ARG1 (c31-13 / and
                                                 :op1 (c31-2 / walk-01
                                                             :ARG0 c31-6
                                                             :ARG2 (c31-11 / around))
                                                 :op2 (c31-0 / see-01
                                                             :ARG0 c31-6
                                                             :ARG1 (c31-30 / inside
                                                                           :part-of (c31-28 / home
                                                                                            :poss (c31-25 / person
                                                                                                          :name (c31-22 / name
                                                                                                                        :op1 "Brady"
                                                                                                                        :op2 "Bunch"))))
                                                             :manner (c31-21 / way
                                                                             :manner-of (c31-23 / remodel-01
                                                                                                :ARG0 c31-25
                                                                                                :ARG1 (c31-8 / home
                                                                                                             :mod (c31-12 / television))))))
                                   :ARG2-of c31-9)
                     :ARG0 c31-6
                     :ARG1 (c31-10 / and
                                   :op1 c31-2
                                   :ARG0 c31-6
                                   :ARG2 c31-11))
        :op2 (c31-5 / see-01
                    :ARG0 c31-6
                    :ARG1 c31-30
                    :part-of c31-8)
        :snt2 c31-23
        :ARG0 (c31-7 / i)
        :ARG1 c31-8
        :time (c31-19 / then)
        :snt3 (c31-3 / see-01
                     :ARG0 (c31-14 / you)
                     :ARG1 (c31-31 / and
                                   :op1 (c31-15 / broadcast-program
                                                :name (c31-17 / name
                                                              :op1 "Full"
                                                              :op2 "House"))
                                   :op2 (c31-1 / broadcast-program
                                               :name (c31-26 / name
                                                             :op1 "I"
                                                             :op2 "Love"
                                                             :op3 "Lucy"))
                                   :op3 (c31-4 / broadcast-program
                                               :name (c31-18 / name
                                                             :op1 "Bewitched"))
                                   :op4 (c31-24 / et-cetera)))
        :snt4 (c31-20 / home
                      :poss c31-25
                      :mod (c31-29 / next)))

# ::snt Stephanie, Stephanie. Stephanie!
# ::tokens ["Stephanie", ",", "Stephanie", ".", "Stephanie", "!"]
# ::lemmas ["Stephanie", ",", "Stephanie", ".", "Stephanie", "!"]
(c33-1 / multi-sentence
       :snt1 (c33-4 / person
                    :name (c33-0 / name
                                 :op1 "Stephanie"))
       :snt2 (c33-2 / person
                    :name (c33-3 / name
                                 :op1 "Stephanie")))

# ::snt Bedroom scenes were odd.
# ::tokens ["Bedroom", "scenes", "were", "odd", "."]
# ::lemmas ["bedroom", "scene", "be", "odd", "."]
(c34-0 / odd
       :domain (c34-2 / scene
                      :location (c34-1 / bedroom)))

# ::snt Well why not... tell Marla the L.A. river runs behind these homes.... maybe we can talk her into kayaking away after the story...
# ::tokens ["Well", "why", "not", "...", "tell", "Marla", "the", "L.A.", "river", "runs", "behind", "these", "homes", "....", "maybe", "we", "can", "talk", "her", "into", "kayaking", "away", "after", "the", "story", "..."]
# ::lemmas ["well", "why", "not", "...", "tell", "Marla", "the", "L.A.", "river", "run", "behind", "these", "home", "....", "maybe", "we", "can", "talk", "she", "into", "kayak", "away", "after", "the", "story", "..."]
(c35-10 / multi-sentence
        :snt1 (c35-13 / cause-01
                      :ARG0 (c35-7 / amr-unknown)
                      :ARG1 (c35-8 / tell-01
                                   :ARG0 (c35-2 / you)
                                   :ARG1 (c35-16 / run-13
                                                 :ARG1 (c35-1 / river
                                                              :name (c35-15 / name
                                                                            :op1 "L.A."))
                                                 :ARG2 (c35-9 / behind
                                                              :op1 (c35-3 / home
                                                                          :mod (c35-14 / this))))
                                   :ARG2 (c35-17 / person
                                                 :name (c35-12 / name
                                                               :op1 "Marla"))
                                   :mode imperative
                                   :polarity -))
        :snt2 (c35-11 / possible-01
                      :ARG1 (c35-19 / talk-01
                                    :ARG0 (c35-18 / we)
                                    :ARG1 (c35-4 / kayak-01
                                                 :ARG0 c35-17
                                                 :direction (c35-6 / away)
                                                 :time (c35-5 / after
                                                              :op1 (c35-0 / story)))
                                    :ARG2 c35-17)))

# ::snt I was actually thinking that she should do this one!
# ::tokens ["I", "was", "actually", "thinking", "that", "she", "should", "do", "this", "one", "!"]
# ::lemmas ["i", "be", "actually", "think", "that", "she", "should", "do", "this", "one", "!"]
(c36-5 / think-01
       :ARG0 (c36-4 / i)
       :ARG1 (c36-2 / recommend-01
                    :ARG1 (c36-6 / do-02
                                 :ARG0 (c36-1 / she)
                                 :ARG1 (c36-0 / one
                                              :mod (c36-7 / this)))
                    :ARG2 c36-1)
       :ARG1-of (c36-3 / actual-02))

# ::snt So Steph.... do you think that is going to make this next ??? I don't think it even has a pool for Marla to jump in...
# ::tokens ["So", "Steph", "....", "do", "you", "think", "that", "is", "going", "to", "make", "this", "next", "?", "?", "?", "I", "do", "n't", "think", "it", "even", "has", "a", "pool", "for", "Marla", "to", "jump", "in", "..."]
# ::lemmas ["so", "Steph", "....", "do", "you", "think", "that", "be", "go", "to", "make", "this", "next", "?", "?", "?", "i", "do", "not", "think", "it", "even", "have", "a", "pool", "for", "Marla", "to", "jump", "in", "..."]
(c37-10 / multi-sentence
        :snt1 (c37-0 / say-01
                     :ARG1 (c37-9 / think-01
                                  :ARG0 (c37-16 / person
                                                :name (c37-14 / name
                                                              :op1 "Steph"))
                                  :ARG1 (c37-4 / make-02
                                               :ARG0 (c37-13 / that)
                                               :ARG1 (c37-18 / this)
                                               :time (c37-12 / next))
                                  :polarity (c37-8 / amr-unknown))
                     :ARG2 c37-16)
        :snt2 (c37-1 / think-01
                     :ARG0 (c37-19 / i)
                     :ARG1 (c37-5 / have-03
                                  :ARG0 (c37-3 / it)
                                  :ARG1 (c37-11 / pool
                                                :purpose (c37-6 / jump-in-04
                                                                :ARG0 (c37-2 / person
                                                                             :name (c37-17 / name
                                                                                           :op1 "Marla"))))
                                  :mod (c37-15 / even))
                     :polarity (c37-7 / amr-unknown)
                     :polarity -))

# ::snt Thx u!
# ::tokens ["Thx", "u", "!"]
# ::lemmas ["thx", "u", "!"]
(c38-1 / string-entity
       :domain (c38-0 / you)
       :value "x")

# ::snt Lovely photo!
# ::tokens ["Lovely", "photo", "!"]
# ::lemmas ["lovely", "photo", "!"]
(c39-0 / photo
       :ARG1-of (c39-1 / love-01))

# ::snt I laugh the fake window put on to make the house look story when story,on set sliding door no glass,astro turf backyard and no toilet bathroom yeah I watched
# ::tokens ["I", "laugh", "the", "fake", "window", "put", "on", "to", "make", "the", "house", "look", "story", "when", "story", ",", "on", "set", "sliding", "door", "no", "glass", ",", "astro", "turf", "backyard", "and", "no", "toilet", "bathroom", "yeah", "I", "watched"]
# ::lemmas ["i", "laugh", "the", "fake", "window", "put", "on", "to", "make", "the", "house", "look", "story", "when", "story", ",", "on", "set", "slide", "door", "no", "glass", ",", "astro", "turf", "backyard", "and", "no", "toilet", "bathroom", "yeah", "i", "watch"]
(c40-11 / and
        :op1 (c40-2 / laugh-01
                    :ARG0 (c40-19 / i)
                    :ARG2 (c40-18 / window
                                  :ARG1-of (c40-16 / fake-02)
                                  :ARG1-of (c40-17 / put-on-08
                                                   :purpose (c40-14 / make-02
                                                                    :ARG0 c40-18
                                                                    :ARG1 (c40-12 / look-02
                                                                                  :ARG0 (c40-6 / house)
                                                                                  :ARG1 (c40-0 / story))))))
        :op2 (c40-8 / and
                    :op1 (c40-20 / door
                                 :ARG0-of (c40-4 / slide-01)
                                 :mod (c40-5 / on-set))
                    :op2 (c40-10 / glass
                                 :polarity -)
                    :op3 (c40-13 / backyard
                                 :mod (c40-9 / turf
                                             :mod (c40-7 / astro)))
                    :op4 (c40-1 / bathroom
                                :purpose (c40-15 / toilet)
                                :polarity -))
        :op3 (c40-3 / watch-01
                    :ARG0 c40-19))

# ::snt What's address?? We're needs locations
# ::tokens ["What", "'s", "address", "?", "?", "We", "'re", "needs", "locations"]
# ::lemmas ["what", "be", "address", "?", "?", "we", "be", "need", "location"]
(c41-1 / multi-sentence
       :snt1 (c41-5 / address-02
                    :ARG2 (c41-4 / amr-unknown))
       :snt2 (c41-0 / need-01
                    :ARG0 (c41-3 / we)
                    :ARG1 (c41-2 / location)))

# ::snt But Sam is in the basement
# ::tokens ["But", "Sam", "is", "in", "the", "basement"]
# ::lemmas ["but", "Sam", "be", "in", "the", "basement"]
(c42-4 / contrast-01
       :ARG2 (c42-0 / be-located-at-91
                    :ARG1 (c42-3 / person
                                 :name (c42-1 / name
                                              :op1 "Sam"))
                    :ARG2 (c42-2 / basement)))

# ::snt Watching Jimmy Kimmel to or was just the Eyewitness Boring ass news
# ::tokens ["Watching", "Jimmy", "Kimmel", "to", "or", "was", "just", "the", "Eyewitness", "Boring", "ass", "news"]
# ::lemmas ["watch", "Jimmy", "Kimmel", "to", "or", "be", "just", "the", "Eyewitness", "Boring", "ass", "news"]
(c43-0 / or
       :op1 (c43-4 / watch-01
                   :ARG0 (c43-6 / i)
                   :ARG1 (c43-1 / broadcast-program
                                :name (c43-2 / name
                                             :op1 "Jimmy"
                                             :op2 "Kimmelman")
                                :op2-of c43-0))
       :name c43-2
       :mod (c43-5 / just)
       :ARG0-of (c43-3 / bore-02
                       :mod (c43-7 / ass
                                   :mode expressive))
       :op1 "Eyewitness"
       :op2 "News")

# ::snt Pork chops and applesauce
# ::tokens ["Pork", "chops", "and", "applesauce"]
# ::lemmas ["pork", "chop", "and", "applesauce"]
(c44-3 / and
       :op1 (c44-0 / chop-01
                   :ARG1 (c44-1 / pork))
       :op2 (c44-2 / apple))

# ::snt It probably still smells like perm chemicals &amp; Alice's XL bottle of Old Spice.
# ::tokens ["It", "probably", "still", "smells", "like", "perm", "chemicals", "&", "amp", ";", "Alice", "'s", "XL", "bottle", "of", "Old", "Spice", "."]
# ::lemmas ["it", "probably", "still", "smell", "like", "perm", "chemical", "&", "amp", ";", "Alice", "'s", "XL", "bottle", "of", "Old", "Spice", "."]
(c45-4 / smell-02
       :ARG1 (c45-10 / it)
       :ARG2 (c45-11 / and
                     :op1 (c45-8 / chemical
                                 :mod (c45-6 / perm))
                     :op2 (c45-12 / amp))
       :mod (c45-3 / probable)
       :mod (c45-0 / still)
       :source (c45-1 / bottle
                      :mod (c45-14 / company
                                   :name (c45-2 / name
                                                :op1 "Old"
                                                :op2 "Spice"))
                      :poss (c45-13 / person
                                    :name (c45-5 / name
                                                 :op1 "Alice"))
                      :mod (c45-9 / product
                                  :name (c45-7 / name
                                               :op1 "XL"))))

# ::snt I love the Brady Bunch.
# ::tokens ["I", "love", "the", "Brady", "Bunch", "."]
# ::lemmas ["i", "love", "the", "Brady", "Bunch", "."]
(c47-2 / love-01
       :ARG0 (c47-3 / i)
       :ARG1 (c47-1 / broadcast-program
                    :name (c47-0 / name
                                 :op1 "Brady"
                                 :op2 "Bunch")))

# ::snt The door bell should be "Marsha Marsha Marsha"
# ::tokens ["The", "door", "bell", "should", "be", "\"", "Marsha", "Marsha", "Marsha", "\""]
# ::lemmas ["the", "door", "bell", "should", "be", "\"", "Marsha", "Marsha", "Marsha", "\""]
(c49-3 / recommend-01
       :ARG1 (c49-0 / bell
                    :purpose (c49-5 / door)
                    :ARG1-of (c49-2 / say-01
                                    :ARG2 (c49-4 / person
                                                 :name (c49-1 / name
                                                              :op1 "Marsha")))))

# ::snt I thought they had Jack and Jill bathrooms. But Alice was always standing in front of the toilet.
# ::tokens ["I", "thought", "they", "had", "Jack", "and", "Jill", "bathrooms", ".", "But", "Alice", "was", "always", "standing", "in", "front", "of", "the", "toilet", "."]
# ::lemmas ["i", "think", "they", "have", "Jack", "and", "Jill", "bathroom", ".", "but", "Alice", "be", "always", "stand", "in", "front", "of", "the", "toilet", "."]
(c50-1 / multi-sentence
       :snt1 (c50-12 / think-01
                     :ARG0 (c50-13 / i)
                     :ARG1 (c50-7 / have-03
                                  :ARG0 (c50-14 / they)
                                  :ARG1 (c50-0 / bathroom
                                               :mod (c50-5 / and
                                                           :op1 (c50-8 / person
                                                                       :name (c50-2 / name
                                                                                    :op1 "Jack"))
                                                           :op2 (c50-3 / person
                                                                       :name (c50-9 / name
                                                                                    :op1 "Jill"))))))
       :snt2 (c50-11 / contrast-01
                     :ARG2 (c50-4 / stand-01
                                  :ARG1 (c50-17 / person
                                                :name (c50-10 / name
                                                              :op1 "Alice"))
                                  :ARG2 (c50-6 / in-front-of
                                               :op1 (c50-15 / toilet))
                                  :time (c50-16 / always))))
