# ::snt WELL NO BUT I CAN UNDER STAND WHY HE WOULD WANT OUT
# ::tokens ["WELL", "NO", "BUT", "I", "CAN", "UNDER", "STAND", "WHY", "HE", "WOULD", "WANT", "OUT"]
# ::lemmas ["well", "no", "but", "i", "can", "under", "STAND", "why", "he", "would", "want", "out"]
(c1-3 / contrast-01
      :ARG1 (c1-1 / have-polarity-91
                  :ARG2 -)
      :ARG2 (c1-2 / possible-01
                  :ARG1 (c1-8 / understand-01
                              :ARG0 (c1-6 / i)
                              :ARG1 (c1-7 / thing
                                          :ARG0-of (c1-9 / cause-01
                                                         :ARG1 (c1-4 / want-01
                                                                     :ARG0 (c1-5 / he)
                                                                     :ARG1 (c1-0 / out-06
                                                                                 :ARG1 c1-5)))))))

# ::snt ! Could happen!!
# ::tokens ["!", "Could", "happen", "!", "!"]
# ::lemmas ["!", "could", "happen", "!", "!"]
(c2-0 / possible-01
      :mode expressive)

# ::snt You mean.. get a real job?
# ::tokens ["You", "mean", "..", "get", "a", "real", "job", "?"]
# ::lemmas ["you", "mean", "..", "get", "a", "real", "job", "?"]
(c3-1 / mean-01
      :polarity (c3-4 / amr-unknown)
      :ARG0 (c3-0 / you)
      :ARG2 (c3-5 / get-01
                  :ARG0 c3-0
                  :ARG1 (c3-3 / job
                              :ARG1-of (c3-2 / real-04))
                  :mode imperative))

# ::snt I know the feeling. I wanted to get out of my " ordinary life" for a royal life. So I could be in the latest People magazine or TMZ!
# ::tokens ["I", "know", "the", "feeling", ".", "I", "wanted", "to", "get", "out", "of", "my", "\"", "ordinary", "life", "\"", "for", "a", "royal", "life", ".", "So", "I", "could", "be", "in", "the", "latest", "People", "magazine", "or", "TMZ", "!"]
# ::lemmas ["i", "know", "the", "feeling", ".", "i", "want", "to", "get", "out", "of", "my", "\"", "ordinary", "life", "\"", "for", "a", "royal", "life", ".", "so", "i", "could", "be", "in", "the", "late", "people", "magazine", "or", "TMZ", "!"]
(c4-13 / multi-sentence
       :snt1 (c4-4 / know-01
                   :ARG0 (c4-21 / i)
                   :ARG1 (c4-6 / thing
                               :ARG1-of (c4-16 / feel-01)))
       :snt2 (c4-20 / want-01
                    :ARG0 (c4-2 / i)
                    :ARG1 (c4-7 / get-05
                                :ARG1 c4-2
                                :ARG2 (c4-1 / out-06
                                            :ARG1 c4-2
                                            :ARG2 (c4-0 / life
                                                        :mod (c4-11 / ordinary)
                                                        :poss c4-2)
                                            :purpose (c4-8 / life
                                                           :mod (c4-18 / royal)))))
       :snt3 (c4-15 / cause-01
                    :ARG1 (c4-19 / possible-01
                                 :ARG1 (c4-12 / be-located-at-91
                                              :ARG1 (c4-9 / i)
                                              :ARG2 (c4-22 / or
                                                           :op1 (c4-3 / magazine
                                                                      :name (c4-17 / name
                                                                                   :op1 "People"))
                                                           :op2 (c4-10 / company
                                                                       :name (c4-14 / name
                                                                                    :op1 "TMZ"))
                                                           :mod (c4-5 / last))))))

# ::snt A brave and incredible guy.. Will help others to not have shame for feeling
# ::tokens ["A", "brave", "and", "incredible", "guy", "..", "Will", "help", "others", "to", "not", "have", "shame", "for", "feeling"]
# ::lemmas ["a", "brave", "and", "incredible", "guy", "..", "will", "help", "other", "to", "not", "have", "shame", "for", "feel"]
(c5-3 / multi-sentence
      :snt1 (c5-8 / guy
                  :ARG0-of (c5-2 / brave-02)
                  :mod (c5-7 / incredible))
      :snt2 (c5-6 / help-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-4 / shame-02
                              :ARG1 (c5-0 / other)
                              :ARG2 (c5-1 / feel-01
                                          :ARG0 c5-0)
                              :polarity -)
                  :ARG2 c5-0))

# ::snt I can't imagine having to grow up in that world. Everyone constantly watching &amp; judging your every move. No privacy.
# ::tokens ["I", "ca", "n't", "imagine", "having", "to", "grow", "up", "in", "that", "world", ".", "Everyone", "constantly", "watching", "&", "amp", ";", "judging", "your", "every", "move", ".", "No", "privacy", "."]
# ::lemmas ["i", "can", "not", "imagine", "have", "to", "grow", "up", "in", "that", "world", ".", "everyone", "constantly", "watch", "&", "amp", ";", "judge", "your", "every", "move", ".", "no", "privacy", "."]
(c6-2 / multi-sentence
      :snt1 (c6-9 / possible-01
                  :ARG1 (c6-14 / imagine-01
                               :ARG0 (c6-5 / i)
                               :ARG1 (c6-0 / obligate-01
                                           :ARG2 (c6-16 / grow-up-04
                                                        :location (c6-11 / world
                                                                         :mod (c6-15 / that)))))
                  :polarity -)
      :snt2 (c6-6 / and
                  :op1 (c6-10 / watch-01
                              :ARG0 (c6-7 / everyone)
                              :ARG1 c6-6
                              :op2 (c6-17 / amp))
                  :frequency (c6-12 / constant))
      :op2 (c6-13 / judge-01
                  :ARG0 c6-7
                  :ARG1 (c6-8 / move-03
                              :ARG0 (c6-1 / you)
                              :mod (c6-4 / every)))
      :op3 (c6-3 / private-02
                 :ARG1 c6-1
                 :polarity -))

# ::snt So?
# ::tokens ["So", "?"]
# ::lemmas ["so", "?"]
(c7-1 / so
      :polarity (c7-0 / amr-unknown))

# ::snt We know
# ::tokens ["We", "know"]
# ::lemmas ["we", "know"]
(c8-1 / know-01
      :ARG0 (c8-0 / we))

# ::snt Oh. How great!
# ::tokens ["Oh", ".", "How", "great", "!"]
# ::lemmas ["oh", ".", "how", "great", "!"]
(c9-0 / great
      :degree (c9-2 / so)
      :mod (c9-1 / oh
                 :mode expressive))

# ::snt this looks like you
# ::tokens ["this", "looks", "like", "you"]
# ::lemmas ["this", "look", "like", "you"]
(c10-1 / look-02
       :ARG0 (c10-2 / this)
       :ARG1 (c10-0 / you))

# ::snt I love this guy. True to himself. True to all his people. Great example of a dude just surviving the best he can.
# ::tokens ["I", "love", "this", "guy", ".", "True", "to", "himself", ".", "True", "to", "all", "his", "people", ".", "Great", "example", "of", "a", "dude", "just", "surviving", "the", "best", "he", "can", "."]
# ::lemmas ["i", "love", "this", "guy", ".", "true", "to", "himself", ".", "true", "to", "all", "his", "people", ".", "great", "example", "of", "a", "dude", "just", "survive", "the", "good", "he", "can", "."]
(c11-11 / multi-sentence
        :snt1 (c11-1 / love-01
                     :ARG0 (c11-16 / i)
                     :ARG1 (c11-9 / guy
                                  :mod (c11-8 / this)))
        :snt2 (c11-13 / true-01
                      :ARG1 c11-9
                      :ARG2 c11-9)
        :snt3 (c11-17 / true-01
                      :ARG1 (c11-2 / guy)
                      :ARG2 (c11-15 / person
                                    :mod (c11-7 / all)
                                    :poss c11-2))
        :snt4 (c11-14 / exemplify-01
                      :ARG1 (c11-18 / dude
                                    :ARG0-of (c11-0 / survive-01
                                                    :ARG1-of (c11-12 / possible-01)
                                                    :mod (c11-6 / just)
                                                    :manner (c11-3 / good-03
                                                                   :ARG2-of (c11-4 / have-degree-91
                                                                                   :ARG1 c11-0
                                                                                   :ARG3 (c11-5 / most)))))
                      :mod (c11-10 / great)))

# ::snt . . . . ! !
# ::tokens [".", ".", ".", ".", "!", "!"]
# ::lemmas [".", ".", ".", ".", "!", "!"]
(c12-0)

# ::snt I guess because of what happened to his mother.
# ::tokens ["I", "guess", "because", "of", "what", "happened", "to", "his", "mother", "."]
# ::lemmas ["i", "guess", "because", "of", "what", "happen", "to", "his", "mother", "."]
(c13-7 / guess-01
       :ARG0 (c13-6 / i)
       :ARG1 (c13-4 / cause-01
                    :ARG0 (c13-1 / event
                                 :beneficiary (c13-3 / person
                                                     :ARG0-of (c13-2 / have-rel-role-91
                                                                     :ARG1 (c13-5 / he)
                                                                     :ARG2 (c13-0 / mother))))))

# ::snt CUMEONWITHI.T.Harryillneverquestionwhatheypututhrew:MEATGRINDER. IMTHEREALKINGS KING. !ilovefamilyeveryone!!! GOODASDEadRECTIndellWindsor
# ::tokens ["CUMEONWITHI.T.Harryillneverquestionwhatheypututhrew", ":", "MEATGRINDER", ".", "IMTHEREALKINGS", "KING", ".", "!", "ilovefamilyeveryone", "!", "!", "!", "GOODASDEadRECTIndellWindsor"]
# ::lemmas ["cumeonwithi.t.harryillneverquestionwhatheypututhrew", ":", "MEATGRINDER", ".", "imtherealking", "KING", ".", "!", "ilovefamilyeveryone", "!", "!", "!", "GOODASDEadRECTIndellWindsor"]
(c14-1 / multi-sentence
       :snt1 (c14-5 / person
                    :name (c14-0 / name
                                 :op1 "CumeonWITHI.T."
                                 :op2 "Harryillneverquestionwhatheypututhrew:"))
       :snt2 (c14-2 / person
                    :name (c14-4 / name
                                 :op1 "MEATGRINDER"))
       :snt3 (c14-3 / say-01
                    :ARG1 (c14-11 / talk-01)
                    :ARG2 (c14-13 / person
                                  :name (c14-6 / name
                                               :op1 "King")))
       :snt4 (c14-7 / person
                    :name (c14-8 / name
                                 :op1 "ilovefamily")
                    :mode expressive)
       :snt5 (c14-12 / good-02
                     :ARG1 (c14-10 / person
                                   :name (c14-9 / name
                                                :op1 "IndellWindsor"))
                     :mode expressive))

# ::snt Work?
# ::tokens ["Work", "?"]
# ::lemmas ["work", "?"]
(c16-0 / work-01
       :polarity (c16-1 / amr-unknown))

# ::snt Maajid is an annoying baffoon. Remember when he got caught with Stippers lol
# ::tokens ["Maajid", "is", "an", "annoying", "baffoon", ".", "Remember", "when", "he", "got", "caught", "with", "Stippers", "lol"]
# ::lemmas ["Maajid", "be", "an", "annoying", "baffoon", ".", "remember", "when", "he", "got", "catch", "with", "Stippers", "lol"]
(c17-3 / multi-sentence
       :snt1 (c17-0 / baffoon
                    :ARG0-of (c17-11 / annoy-01)
                    :domain (c17-7 / person
                                   :name (c17-2 / name
                                                :op1 "Maajid")))
       :snt2 (c17-5 / remember-01
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-9 / catch-02
                                 :ARG1 (c17-6 / he)
                                 :ARG2 (c17-4 / shippers)
                                 :ARG2-of (c17-8 / laugh-01
                                                 :ARG0 (c17-10 / i)
                                                 :manner (c17-12 / loud)
                                                 :mode expressive))
                    :mode imperative))

# ::snt This guy is HOT!
# ::tokens ["This", "guy", "is", "HOT", "!"]
# ::lemmas ["this", "guy", "be", "hot", "!"]
(c18-1 / hot-03
       :ARG1 (c18-0 / guy
                    :mod (c18-2 / this)))

# ::snt He likes the Saudis Royal family more
# ::tokens ["He", "likes", "the", "Saudis", "Royal", "family", "more"]
# ::lemmas ["he", "like", "the", "Saudis", "Royal", "family", "more"]
(c19-5 / like-01
       :ARG0 (c19-4 / he)
       :ARG1 (c19-0 / family
                    :mod (c19-6 / country
                                :name (c19-1 / name
                                             :op1 "Saudi"
                                             :op2 "Arabia"))
                    :mod (c19-3 / royal))
       :ARG2-of (c19-7 / have-degree-91
                       :ARG1 c19-4
                       :ARG3 (c19-2 / more)))

# ::snt Do you really expect this man to like the monarchy. Please!
# ::tokens ["Do", "you", "really", "expect", "this", "man", "to", "like", "the", "monarchy", ".", "Please", "!"]
# ::lemmas ["do", "you", "really", "expect", "this", "man", "to", "like", "the", "monarchy", ".", "please", "!"]
(c20-1 / multi-sentence
       :snt1 (c20-3 / expect-01
                    :polarity (c20-8 / amr-unknown)
                    :ARG0 (c20-0 / you)
                    :ARG1 (c20-5 / like-01
                                 :ARG0 (c20-4 / man
                                              :mod (c20-7 / this))
                                 :ARG1 (c20-9 / monarchy))
                    :ARG1-of (c20-2 / real-04))
       :snt2 (c20-6 / please
                    :polite +))

# ::snt Maajid is an annoying baffoon. Remember when he got caught with Stippers lol
# ::tokens ["Maajid", "is", "an", "annoying", "baffoon", ".", "Remember", "when", "he", "got", "caught", "with", "Stippers", "lol"]
# ::lemmas ["Maajid", "be", "an", "annoying", "baffoon", ".", "remember", "when", "he", "got", "catch", "with", "Stippers", "lol"]
(c21-3 / multi-sentence
       :snt1 (c21-0 / baffoon
                    :ARG0-of (c21-11 / annoy-01)
                    :domain (c21-7 / person
                                   :name (c21-2 / name
                                                :op1 "Maajid")))
       :snt2 (c21-5 / remember-01
                    :ARG0 (c21-1 / you)
                    :ARG1 (c21-9 / catch-02
                                 :ARG1 (c21-6 / he)
                                 :ARG2 (c21-4 / shippers)
                                 :ARG2-of (c21-8 / laugh-01
                                                 :ARG0 (c21-10 / i)
                                                 :manner (c21-12 / loud)
                                                 :mode expressive))
                    :mode imperative))

# ::snt getting him to do a DNA test may allegedly do this
# ::tokens ["getting", "him", "to", "do", "a", "DNA", "test", "may", "allegedly", "do", "this"]
# ::lemmas ["get", "he", "to", "do", "a", "dna", "test", "may", "allegedly", "do", "this"]
(c22-3 / possible-01
       :ARG1 (c22-7 / do-02
                    :ARG0 (c22-6 / get-04
                                 :ARG1 (c22-5 / test-01
                                              :ARG1 (c22-2 / he)
                                              :ARG2 (c22-0 / nucleic-acid
                                                           :name (c22-4 / name
                                                                        :op1 "DNA"))))
                    :ARG1 (c22-8 / this))
       :ARG1-of (c22-1 / allege-01))

# ::snt Allowing the Monarchy to have the same rights and privileges as a corporate CEO would be a start, to re-empower the Monarchy. Agree?
# ::tokens ["Allowing", "the", "Monarchy", "to", "have", "the", "same", "rights", "and", "privileges", "as", "a", "corporate", "CEO", "would", "be", "a", "start", ",", "to", "re", "-", "empower", "the", "Monarchy", ".", "Agree", "?"]
# ::lemmas ["allow", "the", "Monarchy", "to", "have", "the", "same", "right", "and", "privilege", "as", "a", "corporate", "ceo", "would", "be", "a", "start", ",", "to", "re", "-", "empower", "the", "Monarchy", ".", "agree", "?"]
(c23-10 / multi-sentence
        :snt1 (c23-0 / start-01
                     :ARG0 (c23-7 / allow-01
                                  :ARG1 (c23-4 / have-03
                                               :ARG0 (c23-3 / monarchy)
                                               :ARG1 (c23-6 / and
                                                            :op1 (c23-14 / right-05
                                                                         :ARG1 c23-3)
                                                            :op2 (c23-16 / privilege-01
                                                                         :ARG1 c23-3)
                                                            :ARG1-of (c23-1 / same-01
                                                                            :ARG2 (c23-11 / person
                                                                                          :ARG0-of (c23-17 / have-org-role-91
                                                                                                           :ARG1 (c23-12 / corporation)
                                                                                                           :ARG2 (c23-2 / officer
                                                                                                                        :mod (c23-9 / chief)
                                                                                                                        :mod (c23-15 / executive))))))))
                     :ARG2 (c23-8 / empower-01
                                  :ARG1 (c23-13 / monarchy)))
        :snt2 (c23-5 / agree-01
                     :polarity (c23-18 / amr-unknown)))

# ::snt Wanted to comment this AM but had no time. Per none of the boys looking forward to being king. The Queen &amp; her father didnt either.
# ::tokens ["Wanted", "to", "comment", "this", "AM", "but", "had", "no", "time", ".", "Per", "none", "of", "the", "boys", "looking", "forward", "to", "being", "king", ".", "The", "Queen", "&", "amp", ";", "her", "father", "did", "nt", "either", "."]
# ::lemmas ["want", "to", "comment", "this", "am", "but", "have", "no", "time", ".", "per", "none", "of", "the", "boy", "look", "forward", "to", "be", "king", ".", "the", "Queen", "&", "amp", ";", "her", "father", "do", "not", "either", "."]
(c24-12 / multi-sentence
        :snt1 (c24-14 / contrast-01
                      :ARG1 (c24-21 / want-01
                                    :ARG0 (c24-23 / i)
                                    :ARG1 (c24-10 / comment-01
                                                  :ARG0 c24-23
                                                  :time (c24-24 / date-entity
                                                                :dayperiod (c24-8 / AM)
                                                                :mod (c24-7 / this))))
                      :ARG2 (c24-4 / have-03
                                   :ARG0 c24-23
                                   :ARG1 (c24-15 / time)
                                   :polarity -))
        :snt2 (c24-1 / look-forward-03
                     :ARG0 (c24-11 / boy
                                   :quant (c24-18 / none))
                     :ARG1 (c24-22 / have-org-role-91
                                   :ARG0 (c24-2 / i)
                                   :ARG2 (c24-5 / king))
                     :polarity -)
        :snt3 (c24-6 / and
                     :op1 (c24-20 / person
                                  :ARG0-of (c24-3 / have-org-role-91
                                                  :ARG2 (c24-9 / queen)))
                     :op2 (c24-13 / person
                                  :ARG0-of (c24-16 / have-rel-role-91
                                                   :ARG1 (c24-0 / she)
                                                   :ARG2 (c24-17 / father)))
                     :mod (c24-19 / either)))

# ::snt I'm sure E&amp;C can sympathize.
# ::tokens ["I", "'m", "sure", "E&amp;C", "can", "sympathize", "."]
# ::lemmas ["i", "be", "sure", "e&amp;c", "can", "sympathize", "."]
(c25-2 / sure-02
       :ARG0 (c25-5 / i)
       :ARG1 (c25-3 / possible-01
                    :ARG1 (c25-0 / sympathize-01
                                 :ARG0 (c25-6 / and
                                              :op1 (c25-4 / company
                                                          :name (c25-1 / name
                                                                       :op1 "E&amp"
                                                                       :op2 "C")
                                                          :op2-of c25-6)))))

# ::snt I'd say that I love this "kid", but no longer see him as a kid. Harry is an incredibly fine young man. We need more in UK &amp; USA.
# ::tokens ["I", "'d", "say", "that", "I", "love", "this", "\"", "kid", "\"", ",", "but", "no", "longer", "see", "him", "as", "a", "kid", ".", "Harry", "is", "an", "incredibly", "fine", "young", "man", ".", "We", "need", "more", "in", "UK", "&", "amp", ";", "USA", "."]
# ::lemmas ["i", "would", "say", "that", "i", "love", "this", "\"", "kid", "\"", ",", "but", "no", "long", "see", "he", "as", "a", "kid", ".", "Harry", "be", "an", "incredibly", "fine", "young", "man", ".", "we", "need", "more", "in", "UK", "&", "amp", ";", "USA", "."]
(c26-11 / multi-sentence
        :snt1 (c26-14 / contrast-01
                      :ARG1 (c26-0 / say-01
                                   :ARG0 (c26-25 / i)
                                   :ARG1 (c26-1 / love-01
                                                :ARG0 c26-25
                                                :ARG1 (c26-7 / kid
                                                             :mod (c26-8 / this))))
                      :ARG2 (c26-3 / see-01
                                   :ARG0 c26-25
                                   :ARG1 (c26-21 / person
                                                 :name (c26-19 / name
                                                               :op1 "Harry"))
                                   :ARG2 (c26-16 / kid)
                                   :time (c26-13 / no-longer)))
        :snt2 (c26-6 / man
                     :mod (c26-4 / young)
                     :ARG1-of (c26-18 / fine-04
                                      :degree (c26-5 / incredible))
                     :domain (c26-12 / person
                                     :name (c26-22 / name
                                                   :op1 "Harry")))
        :snt3 (c26-15 / need-01
                      :ARG0 (c26-23 / we)
                      :ARG1 (c26-17 / more)
                      :location (c26-9 / and
                                       :op1 (c26-10 / country
                                                    :name (c26-24 / name
                                                                  :op1 "UK"))
                                       :op2 (c26-2 / country
                                                   :name (c26-20 / name
                                                                 :op1 "USA")))))

# ::snt Harry understandably suffered beyond belief fr loss of his mother. Already has matured much &amp; recovered. He's amazing.
# ::tokens ["Harry", "understandably", "suffered", "beyond", "belief", "fr", "loss", "of", "his", "mother", ".", "Already", "has", "matured", "much", "&", "amp", ";", "recovered", ".", "He", "'s", "amazing", "."]
# ::lemmas ["Harry", "understandably", "suffer", "beyond", "belief", "fr", "loss", "of", "his", "mother", ".", "already", "have", "mature", "much", "&", "amp", ";", "recover", ".", "he", "be", "amazing", "."]
(c27-10 / multi-sentence
        :snt1 (c27-0 / suffer-01
                     :ARG0 (c27-18 / person
                                   :name (c27-16 / name
                                                 :op1 "Harry"))
                     :ARG1 (c27-9 / beyond
                                  :op1 (c27-1 / believe-01))
                     :ARG1-of (c27-15 / understand-01
                                      :polarity -)
                     :ARG1-of (c27-11 / possible-01)
                     :ARG1-of (c27-13 / cause-01
                                      :ARG0 (c27-2 / lose-02
                                                   :ARG0 c27-18
                                                   :ARG1 (c27-3 / person
                                                                :ARG0-of (c27-4 / have-rel-role-91
                                                                                :ARG1 c27-18
                                                                                :ARG2 (c27-5 / mother))))))
        :snt2 (c27-8 / and
                     :op1 (c27-14 / mature-02
                                  :ARG1 (c27-19 / he)
                                  :degree (c27-12 / much)
                                  :time (c27-7 / already))
                     :op2 (c27-17 / recover-01
                                  :ARG1 c27-19)
                     :op3 (c27-6 / amaze-01
                                 :ARG1 c27-19)))

# ::snt Fifth in line? To me, he seems like Henry VII, who was a magnificent king. Jes' sayin'.
# ::tokens ["Fifth", "in", "line", "?", "To", "me", ",", "he", "seems", "like", "Henry", "VII", ",", "who", "was", "a", "magnificent", "king", ".", "Jes", "'", "sayin", "'", "."]
# ::lemmas ["Fifth", "in", "line", "?", "to", "i", ",", "he", "seem", "like", "Henry", "VII", ",", "who", "be", "a", "magnificent", "king", ".", "Jes", "'", "sayin", "'", "."]
(c28-2 / multi-sentence
       :snt1 (c28-7 / line-up-02
                    :ord (c28-0 / ordinal-entity
                                :value 5)
                    :polarity (c28-13 / amr-unknown))
       :snt2 (c28-4 / seem-01
                    :ARG1 (c28-5 / resemble-01
                                 :ARG1 (c28-6 / he)
                                 :ARG2 (c28-8 / person
                                              :name (c28-3 / name
                                                           :op1 "Henry"
                                                           :op2 "Vale")
                                              :ARG0-of (c28-11 / have-org-role-91
                                                               :ARG2 (c28-9 / king)
                                                               :mod (c28-10 / magnificent))))
                    :ARG2 (c28-12 / i))
       :snt3 (c28-1 / say-01
                    :ARG0 c28-8
                    :name c28-3
                    :op1 "Jes"))

# ::snt Prince Harry can u get m in e royal family pleeeeeeeease
# ::tokens ["Prince", "Harry", "can", "u", "get", "m", "in", "e", "royal", "family", "pleeeeeeeease"]
# ::lemmas ["Prince", "Harry", "can", "u", "get", "m", "in", "e", "royal", "family", "pleeeeeeeease"]
(c29-5 / possible-01
       :ARG1 (c29-7 / include-91
                    :ARG1 (c29-2 / person
                                 :name (c29-1 / name
                                              :op1 "Harry")
                                 :ARG0-of (c29-4 / have-org-role-91
                                                 :ARG2 (c29-8 / prince)))
                    :ARG2 (c29-0 / family
                                 :mod (c29-3 / royal)))
       :mod (c29-6 / please
                   :mode expressive))

# ::snt Really
# ::tokens ["Really"]
# ::lemmas ["really"]
(c30-0 / real-04)

# ::snt Can you BLAME Prince Harry revealing that he once "wanted out" of the royal family and wished to be a commoner ?
# ::tokens ["Can", "you", "BLAME", "Prince", "Harry", "revealing", "that", "he", "once", "\"", "wanted", "out", "\"", "of", "the", "royal", "family", "and", "wished", "to", "be", "a", "commoner", "?"]
# ::lemmas ["can", "you", "blame", "Prince", "Harry", "reveal", "that", "he", "once", "\"", "want", "out", "\"", "of", "the", "royal", "family", "and", "wish", "to", "be", "a", "commoner", "?"]
(c31-8 / possible-01
       :ARG1 (c31-2 / blame-01
                    :ARG0 (c31-3 / you)
                    :ARG1 (c31-5 / person
                                 :name (c31-4 / name
                                              :op1 "Prince"
                                              :op2 "Harry"))
                    :ARG2 (c31-7 / reveal-01
                                 :ARG0 c31-5
                                 :ARG1 (c31-13 / and
                                               :op1 (c31-10 / want-01
                                                            :ARG0 c31-5
                                                            :ARG1 (c31-0 / out-06
                                                                         :ARG1 c31-5
                                                                         :ARG2 (c31-1 / family
                                                                                      :mod (c31-14 / royal)))
                                                            :time (c31-6 / once))
                                               :op2 (c31-9 / wish-01
                                                           :ARG0 c31-5
                                                           :ARG1 (c31-15 / person
                                                                         :mod (c31-11 / common)
                                                                         :domain c31-5)))))
       :polarity (c31-12 / amr-unknown))

# ::snt Get FREE.....Worth $500 here....
# ::tokens ["Get", "FREE", ".....", "Worth", "$", "500", "here", "...."]
# ::lemmas ["get", "FREE", ".....", "worth", "$", "500", "here", "...."]
(c32-2 / multi-sentence
       :snt1 (c32-6 / get-01
                    :ARG0 (c32-1 / you)
                    :ARG1 (c32-0 / free-03
                                 :ARG1 c32-1)
                    :mode imperative)
       :snt2 (c32-5 / worth-01
                    :ARG1 (c32-3 / monetary-quantity
                                 :unit (c32-7 / dollar)
                                 :quant 500)
                    :ARG2 (c32-4 / here)))

# ::snt What stop him now free money
# ::tokens ["What", "stop", "him", "now", "free", "money"]
# ::lemmas ["what", "stop", "he", "now", "free", "money"]
(c33-3 / stop-03
       :ARG0 (c33-5 / amr-unknown)
       :ARG1 (c33-4 / he)
       :ARG2 (c33-1 / money
                    :ARG1-of (c33-0 / free-03))
       :time (c33-2 / now))

# ::snt So did Diana &amp; Fergie!
# ::tokens ["So", "did", "Diana", "&", "amp", ";", "Fergie", "!"]
# ::lemmas ["so", "do", "Diana", "&", "amp", ";", "Fergie", "!"]
(c34-5 / and
       :op1 (c34-3 / person
                   :name (c34-0 / name
                                :op1 "Diana"))
       :op2 (c34-1 / person
                   :name (c34-2 / name
                                :op1 "amp"))
       :op3 (c34-6 / person
                   :name (c34-4 / name
                                :op1 "Fergie")))

# ::snt I suppose they all did at some point.
# ::tokens ["I", "suppose", "they", "all", "did", "at", "some", "point", "."]
# ::lemmas ["i", "suppose", "you", "all", "do", "at", "some", "point", "."]
(c35-1 / suppose-01
       :ARG0 (c35-4 / i)
       :ARG1 (c35-6 / do-02
                    :ARG0 (c35-3 / they
                                 :mod (c35-5 / all))
                    :time (c35-2 / point
                                 :mod (c35-0 / some))))

# ::snt It's hard out here for a prince.
# ::tokens ["It", "'s", "hard", "out", "here", "for", "a", "prince", "."]
# ::lemmas ["it", "be", "hard", "out", "here", "for", "a", "prince", "."]
(c36-2 / hard-02
       :ARG1 (c36-3 / prince)
       :location (c36-0 / here
                        :mod (c36-1 / out)))

# ::snt If he did a DNA test he would find out he isn't part of it
# ::tokens ["If", "he", "did", "a", "DNA", "test", "he", "would", "find", "out", "he", "is", "n't", "part", "of", "it"]
# ::lemmas ["if", "he", "do", "a", "dna", "test", "he", "would", "find", "out", "he", "be", "not", "part", "of", "it"]
(c37-0 / find-out-03
       :ARG0 (c37-2 / he)
       :ARG1 (c37-4 / have-part-91
                    :ARG1 (c37-5 / it)
                    :ARG2 c37-2
                    :polarity -)
       :condition (c37-6 / test-01
                         :ARG0 c37-2
                         :ARG1 (c37-1 / nucleic-acid
                                      :name (c37-3 / name
                                                   :op1 "DNA"))))

# ::snt Only ONCE ?????
# ::tokens ["Only", "ONCE", "?", "?", "?", "?", "?"]
# ::lemmas ["only", "once", "?", "?", "?", "?", "?"]
(c38-1 / have-frequency-91
       :ARG2 (c38-0 / only)
       :polarity (c38-2 / amr-unknown))

# ::snt A momentary brainfart.He got over it
# ::tokens ["A", "momentary", "brainfart", ".", "He", "got", "over", "it"]
# ::lemmas ["a", "momentary", "brainfart", ".", "he", "get", "over", "it"]
(c40-2 / multi-sentence
       :snt1 (c40-0 / fart-01
                    :mod (c40-3 / momentary))
       :snt2 (c40-1 / over-02
                    :ARG1 (c40-4 / he)
                    :ARG2 (c40-5 / it)))

# ::snt Your answer! You said: " I woke up the same way" instead of "He woke up the same way! But it doesn't matter....
# ::tokens ["Your", "answer", "!", "You", "said", ":", "\"", "I", "woke", "up", "the", "same", "way", "\"", "instead", "of", "\"", "He", "woke", "up", "the", "same", "way", "!", "But", "it", "does", "n't", "matter", "...."]
# ::lemmas ["your", "answer", "!", "you", "say", ":", "\"", "i", "wake", "up", "the", "same", "way", "\"", "instead", "of", "\"", "he", "wake", "up", "the", "same", "way", "!", "but", "it", "do", "not", "matter", "...."]
(c41-2 / multi-sentence
       :snt1 (c41-14 / answer-01
                     :ARG0 (c41-1 / you))
       :snt2 (c41-4 / say-01
                    :ARG0 (c41-15 / you)
                    :ARG1 (c41-11 / wake-up-02
                                  :ARG1 c41-15
                                  :manner (c41-10 / way
                                                  :ARG1-of (c41-0 / same-01)))
                    :ARG1-of (c41-13 / instead-of-91
                                     :ARG2 (c41-16 / say-01
                                                   :ARG0 c41-15
                                                   :ARG1 (c41-7 / wake-up-02
                                                                :ARG1 (c41-8 / he)
                                                                :manner (c41-3 / way
                                                                               :ARG1-of (c41-5 / same-01))))))
       :snt3 (c41-12 / contrast-01
                     :ARG2 (c41-9 / matter-01
                                  :ARG1 (c41-6 / it)
                                  :polarity -)))

# ::snt No different then any "kid" who has questioned their path or in life. is brave to share it &amp; show others they aren't alone
# ::tokens ["No", "different", "then", "any", "\"", "kid", "\"", "who", "has", "questioned", "their", "path", "or", "in", "life", ".", "is", "brave", "to", "share", "it", "&", "amp", ";", "show", "others", "they", "are", "n't", "alone"]
# ::lemmas ["no", "different", "then", "any", "\"", "kid", "\"", "who", "have", "question", "their", "path", "or", "in", "life", ".", "be", "brave", "to", "share", "it", "&", "amp", ";", "show", "other", "they", "be", "not", "alone"]
(c42-4 / multi-sentence
       :snt1 (c42-14 / differ-02
                     :ARG2 (c42-7 / kid
                                  :mod (c42-12 / any)
                                  :ARG0-of (c42-11 / question-01
                                                   :ARG1 (c42-0 / or
                                                                :op1 (c42-8 / path
                                                                            :poss c42-7)
                                                                :op2 (c42-9 / life
                                                                            :poss c42-7))))
                     :polarity -)
       :snt2 (c42-2 / brave-02
                    :ARG0 (c42-13 / and
                                  :op1 (c42-6 / share-01
                                              :ARG0 c42-7
                                              :ARG1 (c42-15 / it))
                                  :op2 (c42-10 / amp))
                    :snt3 (c42-1 / show-01
                                 :ARG0 c42-7
                                 :ARG1 (c42-5 / alone
                                              :domain (c42-3 / other
                                                             :ARG2-of c42-1)
                                              :polarity -))))

# ::snt I think he needs to be quiet now. He's said quite enough. You don't bite the hand that feeds you
# ::tokens ["I", "think", "he", "needs", "to", "be", "quiet", "now", ".", "He", "'s", "said", "quite", "enough", ".", "You", "do", "n't", "bite", "the", "hand", "that", "feeds", "you"]
# ::lemmas ["i", "think", "he", "need", "to", "be", "quiet", "now", ".", "he", "be", "say", "quite", "enough", ".", "you", "do", "not", "bite", "the", "hand", "that", "feed", "you"]
(c43-4 / multi-sentence
       :snt1 (c43-13 / think-01
                     :ARG0 (c43-12 / i)
                     :ARG1 (c43-3 / need-01
                                  :ARG0 (c43-7 / he)
                                  :ARG1 (c43-14 / quiet-04
                                                :ARG1 c43-7
                                                :time (c43-8 / now))))
       :snt2 (c43-5 / say-01
                    :ARG0 (c43-11 / he)
                    :ARG1-of (c43-6 / have-quant-91
                                    :ARG3 (c43-9 / enough
                                                 :degree (c43-10 / quite))))
       :snt3 (c43-1 / bite-01
                    :ARG0 (c43-2 / you)
                    :ARG1 (c43-15 / hand
                                  :ARG0-of (c43-0 / feed-01
                                                  :ARG2 c43-2))
                    :polarity -))

# ::snt Blimy! And he woke up sweating and thanked God that he was just dreaming. He was still in his cosy bed with pillows on each side.
# ::tokens ["Blimy", "!", "And", "he", "woke", "up", "sweating", "and", "thanked", "God", "that", "he", "was", "just", "dreaming", ".", "He", "was", "still", "in", "his", "cosy", "bed", "with", "pillows", "on", "each", "side", "."]
# ::lemmas ["Blimy", "!", "and", "he", "wake", "up", "sweat", "and", "thank", "God", "that", "he", "be", "just", "dream", ".", "he", "be", "still", "in", "his", "cosy", "bed", "with", "pillow", "on", "each", "side", "."]
(c44-12 / multi-sentence
        :snt1 (c44-11 / blimy
                      :mode expressive)
        :snt2 (c44-10 / and
                      :op2 (c44-8 / and
                                  :op1 (c44-18 / wake-up-02
                                               :ARG1 (c44-6 / he)
                                               :manner (c44-0 / sweat-01
                                                              :ARG0 c44-6))
                                  :op2 (c44-9 / thank-01
                                              :ARG0 c44-6
                                              :ARG1 (c44-17 / person
                                                            :name (c44-15 / name
                                                                          :op1 "God"))
                                              :ARG2 (c44-20 / dream-01
                                                            :ARG0 c44-6
                                                            :mod (c44-7 / just)))))
        :snt3 (c44-1 / be-located-at-91
                     :ARG1 (c44-19 / he)
                     :ARG2 (c44-2 / bed
                                  :mod (c44-14 / cosy)
                                  :poss c44-19
                                  :ARG0-of (c44-5 / have-03
                                                  :ARG1 (c44-13 / pillow)
                                                  :location (c44-4 / side
                                                                   :mod (c44-16 / each))))
                     :mod (c44-3 / still)))

# ::snt good for him because the whole thing is kind of ridiculous.
# ::tokens ["good", "for", "him", "because", "the", "whole", "thing", "is", "kind", "of", "ridiculous", "."]
# ::lemmas ["good", "for", "he", "because", "the", "whole", "thing", "be", "kind", "of", "ridiculous", "."]
(c45-3 / cause-01
       :ARG0 (c45-0 / ridiculous-02
                    :ARG1 (c45-5 / thing
                                 :mod (c45-4 / whole))
                    :degree (c45-2 / kind-of))
       :ARG1 (c45-6 / good-04
                    :ARG2 (c45-1 / he)))

# ::snt I've seen that movie (often)
# ::tokens ["I", "'ve", "seen", "that", "movie", "(", "often", ")"]
# ::lemmas ["i", "'ve", "see", "that", "movie", "(", "often", ")"]
(c46-2 / see-01
       :ARG0 (c46-3 / i)
       :ARG1 (c46-1 / movie
                    :mod (c46-4 / that))
       :frequency (c46-0 / often))

# ::snt Smdt, come live my life for a week Prince H, lemme show you how to be grateful.
# ::tokens ["Smdt", ",", "come", "live", "my", "life", "for", "a", "week", "Prince", "H", ",", "lemme", "show", "you", "how", "to", "be", "grateful", "."]
# ::lemmas ["Smdt", ",", "come", "live", "my", "life", "for", "a", "week", "Prince", "H", ",", "lemme", "show", "you", "how", "to", "be", "grateful", "."]
(c47-3 / say-01
       :ARG0 (c47-10 / i)
       :ARG1 (c47-11 / and
                     :op1 (c47-7 / come-01
                                 :ARG1 (c47-5 / person
                                              :name (c47-1 / name
                                                           :op1 "Smdt"))
                                 :ARG4 (c47-6 / live-01
                                              :ARG0 c47-5
                                              :ARG1 (c47-13 / life
                                                            :poss c47-10)
                                              :duration (c47-9 / temporal-quantity
                                                               :unit (c47-8 / week)
                                                               :quant 1))
                                 :mode imperative)
                     :op2 (c47-0 / show-01
                                 :ARG0 (c47-2 / person
                                              :name (c47-4 / name
                                                           :op1 "Prince"
                                                           :op2 "H"))
                                 :ARG1 (c47-14 / thing
                                               :manner-of (c47-12 / appreciate-02
                                                                  :ARG0 c47-5))
                                 :ARG2 c47-5
                                 :mode imperative))
       :ARG2 c47-5)

# ::snt Of course. Wouldn't a normal person feel uncomfortable in that situation?
# ::tokens ["Of", "course", ".", "Would", "n't", "a", "normal", "person", "feel", "uncomfortable", "in", "that", "situation", "?"]
# ::lemmas ["of", "course", ".", "would", "not", "a", "normal", "person", "feel", "uncomfortable", "in", "that", "situation", "?"]
(c48-3 / multi-sentence
       :snt1 (c48-0 / of-course)
       :snt2 (c48-1 / feel-01
                    :ARG0 (c48-6 / person
                                 :ARG1-of (c48-2 / normal-02))
                    :ARG1 (c48-7 / comfortable-02
                                 :ARG0 (c48-4 / situation
                                              :mod (c48-8 / that))
                                 :ARG1 c48-6
                                 :polarity -)
                    :polarity (c48-5 / amr-unknown)
                    :polarity -))

# ::snt He can trade places with me any day
# ::tokens ["He", "can", "trade", "places", "with", "me", "any", "day"]
# ::lemmas ["he", "can", "trade", "place", "with", "i", "any", "day"]
(c49-3 / possible-01
       :ARG1 (c49-5 / trade-01
                    :ARG0 (c49-2 / he)
                    :ARG1 (c49-0 / place)
                    :ARG2 (c49-4 / i))
       :time (c49-6 / day
                    :mod (c49-1 / any)))

# ::snt Yeah, and I once wanted to drop out of high school. Kids are stupid.
# ::tokens ["Yeah", ",", "and", "I", "once", "wanted", "to", "drop", "out", "of", "high", "school", ".", "Kids", "are", "stupid", "."]
# ::lemmas ["yeah", ",", "and", "i", "once", "want", "to", "drop", "out", "of", "high", "school", ".", "kid", "be", "stupid", "."]
(c50-1 / multi-sentence
       :snt1 (c50-7 / and
                    :op2 (c50-5 / want-01
                                :ARG0 (c50-6 / i)
                                :ARG1 (c50-8 / drop-out-04
                                             :ARG0 c50-6
                                             :ARG1 (c50-3 / high-school))
                                :time (c50-0 / once)))
       :snt2 (c50-2 / stupid
                    :domain (c50-4 / kid)))
