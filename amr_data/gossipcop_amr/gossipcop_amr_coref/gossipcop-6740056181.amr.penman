# ::snt can't it be that Kim is drive Kanye crazy to be honest just give him the kids let him make his music and let him live his life
# ::tokens ["ca", "n't", "it", "be", "that", "Kim", "is", "drive", "Kanye", "crazy", "to", "be", "honest", "just", "give", "him", "the", "kids", "let", "him", "make", "his", "music", "and", "let", "him", "live", "his", "life"]
# ::lemmas ["can", "not", "it", "be", "that", "Kim", "be", "drive", "Kanye", "crazy", "to", "be", "honest", "just", "give", "he", "the", "kid", "let", "he", "make", "his", "music", "and", "let", "he", "live", "his", "life"]
(c1-17 / possible-01
       :ARG1 (c1-14 / cause-01
                    :ARG0 (c1-18 / drive-02
                                 :ARG0 (c1-12 / person
                                              :name (c1-16 / name
                                                           :op1 "Kim"))
                                 :ARG1 (c1-1 / person
                                             :name (c1-13 / name
                                                          :op1 "Kanye"))
                                 :ARG2 (c1-10 / crazy-03
                                              :ARG1 c1-1))
                    :ARG1 (c1-8 / give-01
                                :ARG0 (c1-2 / you)
                                :ARG1 (c1-7 / and
                                            :op1 (c1-0 / let-01
                                                       :ARG0 c1-2
                                                       :ARG1 (c1-11 / make-01
                                                                    :ARG0 c1-1
                                                                    :ARG1 (c1-3 / music
                                                                                :poss c1-1)))
                                            :op2 (c1-9 / let-01
                                                       :ARG0 c1-2
                                                       :ARG1 (c1-4 / live-01
                                                                   :ARG0 c1-1
                                                                   :ARG1 (c1-15 / life
                                                                                :poss c1-1))))
                                :ARG2 c1-1
                                :mod (c1-6 / just)))
       :ARG1-of (c1-5 / honest-01)
       :polarity -)

# ::snt here we go again...
# ::tokens ["here", "we", "go", "again", "..."]
# ::lemmas ["here", "we", "go", "again", "..."]
(c2-0 / go-02
      :ARG0 (c2-1 / we)
      :ARG4 (c2-2 / here)
      :mod (c2-3 / again))

# ::snt HeyBitch!!! YeahBothOfYou!!! IAlmostThoughtYourTourtureWasKompleteButtNAH! BURNDUMBITCHS
# ::tokens ["HeyBitch", "!", "!", "!", "YeahBothOfYou", "!", "!", "!", "IAlmostThoughtYourTourtureWasKompleteButtNAH", "!", "BURNDUMBITCHS"]
# ::lemmas ["HeyBitch", "!", "!", "!", "yeahbothofyou", "!", "!", "!", "IAlmostThoughtYourTourtureWasKompleteButtNAH", "!", "BURNDUMBITCHS"]
(c3-3 / multi-sentence
      :snt1 (c3-4 / say-01
                  :ARG2 (c3-6 / person
                              :name (c3-2 / name
                                          :op1 "Bitch"))
                  :mode expressive)
      :snt2 (c3-1 / yeah
                  :mode expressive)
      :snt3 (c3-0 / say-01
                  :ARG0 (c3-8 / i)
                  :ARG1 (c3-9 / almost
                              :op1 (c3-7 / think-01
                                         :ARG0 c3-8
                                         :ARG1 (c3-10 / thing
                                                      :name c3-2
                                                      :op1 "YourTourtureWasKompleteButtNAH"))))
      :ARG2 (c3-5 / person
                  :name c3-2
                  :op1 "BurndumBITCHS"))

# ::snt No shocker there
# ::tokens ["No", "shocker", "there"]
# ::lemmas ["no", "shocker", "there"]
(c4-2 / thing
      :ARG0-of (c4-0 / shock-01)
      :location (c4-1 / there)
      :polarity -)

# ::snt fake news
# ::tokens ["fake", "news"]
# ::lemmas ["fake", "news"]
(c5-1 / news
      :ARG1-of (c5-0 / fake-02))

# ::snt Its her rd failed marriage! Maybe she needs to stay single!
# ::tokens ["Its", "her", "rd", "failed", "marriage", "!", "Maybe", "she", "needs", "to", "stay", "single", "!"]
# ::lemmas ["its", "her", "rd", "fail", "marriage", "!", "maybe", "she", "need", "to", "stay", "single", "!"]
(c6-2 / multi-sentence
      :snt1 (c6-6 / marry-01
                  :ARG1 (c6-4 / she)
                  :ARG1-of (c6-0 / fail-01))
      :snt2 (c6-7 / possible-01
                  :ARG1 (c6-3 / need-01
                              :ARG0 (c6-1 / she)
                              :ARG1 (c6-8 / stay-01
                                          :ARG1 c6-1
                                          :ARG3 (c6-5 / single-03
                                                      :ARG1 c6-1)))))

# ::snt wonder what her first clue was? lol
# ::tokens ["wonder", "what", "her", "first", "clue", "was", "?", "lol"]
# ::lemmas ["wonder", "what", "her", "first", "clue", "be", "?", "lol"]
(c7-3 / wonder-01
      :ARG0 (c7-5 / i)
      :ARG1 (c7-4 / clue
                  :ord (c7-0 / ordinal-entity
                             :value 1)
                  :poss (c7-1 / she))
      :polarity (c7-6 / amr-unknown)
      :ARG2-of (c7-2 / laugh-01
                     :ARG0 c7-5
                     :manner (c7-7 / loud)
                     :mode expressive))

# ::snt She might as well. She marries then casts the husbands off like they were dead meat. What is her problem? She is no prize herself in spite what she thinks.
# ::tokens ["She", "might", "as", "well", ".", "She", "marries", "then", "casts", "the", "husbands", "off", "like", "they", "were", "dead", "meat", ".", "What", "is", "her", "problem", "?", "She", "is", "no", "prize", "herself", "in", "spite", "what", "she", "thinks", "."]
# ::lemmas ["she", "might", "as", "well", ".", "she", "marry", "then", "cast", "the", "husband", "off", "like", "they", "be", "dead", "meat", ".", "what", "be", "her", "problem", "?", "she", "be", "no", "prize", "herself", "in", "spite", "what", "she", "think", "."]
(c8-1 / multi-sentence
      :snt1 (c8-5 / possible-01
                  :ARG1 (c8-3 / she)
                  :mod (c8-12 / as-well))
      :snt2 (c8-11 / and
                   :op1 (c8-4 / marry-01
                              :ARG1 (c8-0 / she))
                   :op2 (c8-7 / cast-off-05
                              :ARG0 c8-0
                              :ARG1 (c8-6 / husband)
                              :manner (c8-15 / meat
                                             :ARG1-of (c8-14 / die-01)
                                             :domain c8-6)
                              :time (c8-10 / then)))
      :snt3 (c8-2 / problem
                  :poss (c8-17 / she)
                  :domain (c8-8 / amr-unknown))
      :snt4 (c8-9 / prize-01
                  :ARG0 c8-17
                  :ARG1 c8-17
                  :concession (c8-16 / thing
                                     :ARG1-of (c8-13 / think-01
                                                     :ARG0 c8-17))
                  :polarity -))
