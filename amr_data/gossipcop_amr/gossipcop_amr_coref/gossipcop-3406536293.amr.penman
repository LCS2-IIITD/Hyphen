# ::snt ROB SHOULD GO BACK WITH HIS EX KRISTEN STEWART. I THINK HE HAS FEELING FOR HIS EX.
# ::tokens ["ROB", "SHOULD", "GO", "BACK", "WITH", "HIS", "EX", "KRISTEN", "STEWART", ".", "I", "THINK", "HE", "HAS", "FEELING", "FOR", "HIS", "EX", "."]
# ::lemmas ["ROB", "should", "GO", "back", "with", "his", "EX", "KRISTEN", "STEWART", ".", "i", "think", "he", "have", "feel", "for", "his", "ex", "."]
(c1-2 / multi-sentence
      :snt1 (c1-5 / recommend-01
                  :ARG1 (c1-13 / go-back-19
                               :ARG1 (c1-8 / person
                                           :name (c1-1 / name
                                                       :op1 "ROB"))
                               :ARG2 (c1-3 / person
                                           :name (c1-7 / name
                                                       :op1 "Kristen"
                                                       :op2 "Smith")
                                           :time (c1-6 / ex))))
      :snt2 (c1-12 / think-01
                   :ARG0 (c1-11 / i)
                   :ARG1 (c1-0 / feel-01
                               :ARG0 (c1-9 / he)
                               :ARG2 (c1-15 / person
                                            :ARG0-of (c1-10 / have-rel-role-91
                                                            :ARG1 c1-9
                                                            :ARG2 (c1-4 / significant-other)
                                                            :time (c1-14 / ex))))))

# ::snt WHY YOU SHOWING ROB AND KRISTEN VIDEO?
# ::tokens ["WHY", "YOU", "SHOWING", "ROB", "AND", "KRISTEN", "VIDEO", "?"]
# ::lemmas ["why", "you", "showing", "ROB", "and", "KRISTEN", "VIDEO", "?"]
(c2-3 / show-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-10 / and
                   :op1 (c2-4 / video
                              :mod (c2-6 / person
                                         :name (c2-1 / name
                                                     :op1 "Rob")))
                   :op2 (c2-7 / video
                              :mod (c2-2 / person
                                         :name (c2-5 / name
                                                     :op1 "Kirk"))))
      :ARG1-of (c2-8 / cause-01
                     :ARG0 (c2-9 / amr-unknown)))

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c3-0 / care-01
      :ARG0 (c3-1 / amr-unknown))

# ::snt I don't understand how they are Kristen fans then FKA the next.
# ::tokens ["I", "do", "n't", "understand", "how", "they", "are", "Kristen", "fans", "then", "FKA", "the", "next", "."]
# ::lemmas ["i", "do", "not", "understand", "how", "they", "be", "Kristen", "fan", "then", "FKA", "the", "next", "."]
(c5-9 / understand-01
      :ARG0 (c5-7 / i)
      :ARG1 (c5-0 / fan
                  :domain (c5-8 / they)
                  :mod (c5-4 / person
                             :name (c5-1 / name
                                         :op1 "Kristen"))
                  :ARG1-of (c5-6 / contrast-01
                                 :ARG2 (c5-2 / publication
                                             :name (c5-3 / name
                                                         :op1 "FKA")
                                             :time (c5-5 / next))))
      :polarity -)

# ::snt Same
# ::tokens ["Same"]
# ::lemmas ["same"]
(c6-0 / same-01)

# ::snt I only care about Kristen and her slay
# ::tokens ["I", "only", "care", "about", "Kristen", "and", "her", "slay"]
# ::lemmas ["i", "only", "care", "about", "Kristen", "and", "her", "slay"]
(c7-4 / care-01
      :ARG0 (c7-5 / i)
      :ARG1 (c7-6 / and
                  :op1 (c7-3 / person
                             :name (c7-1 / name
                                         :op1 "Kristen"))
                  :op2 (c7-2 / slay-01
                             :ARG0 c7-3))
      :mod (c7-0 / only))

# ::snt :/
# ::tokens [":/"]
# ::lemmas [":/"]
(c8-0 / amr-empty)

# ::snt same. Fucking pisses me off
# ::tokens ["same", ".", "Fucking", "pisses", "me", "off"]
# ::lemmas ["same", ".", "Fucking", "piss", "i", "off"]
(c9-1 / multi-sentence
      :snt1 (c9-2 / same-01)
      :snt2 (c9-3 / piss-off-02
                  :ARG1 (c9-4 / i)
                  :ARG2 (c9-0 / fuck)))

# ::snt do you know her? nominated mercury prize, prelist grammy, best album in Rolling Stone... Leave her and her bf alone, krisbian
# ::tokens ["do", "you", "know", "her", "?", "nominated", "mercury", "prize", ",", "prelist", "grammy", ",", "best", "album", "in", "Rolling", "Stone", "...", "Leave", "her", "and", "her", "bf", "alone", ",", "krisbian"]
# ::lemmas ["do", "you", "know", "she", "?", "nominated", "mercury", "prize", ",", "prelist", "grammy", ",", "good", "album", "in", "Rolling", "Stone", "...", "leave", "she", "and", "her", "bf", "alone", ",", "krisbian"]
(c10-13 / multi-sentence
        :snt1 (c10-5 / know-01
                     :ARG0 (c10-3 / you)
                     :ARG1 (c10-0 / she)
                     :polarity (c10-10 / amr-unknown))
        :snt2 (c10-9 / and
                     :op1 (c10-18 / nominate-01
                                  :ARG1 (c10-2 / she)
                                  :ARG2 (c10-8 / award
                                               :name (c10-14 / name
                                                             :op1 "Mercury"
                                                             :op2 "Prize")
                                               :op2-of c10-9))
                     :name (c10-19 / name
                                   :op1 "Prelist"
                                   :op2 "Gymmy"))
        :op3 (c10-23 / album
                     :ARG1-of (c10-4 / have-degree-91
                                     :ARG2 (c10-11 / good-02
                                                   :ARG1 c10-23)
                                     :ARG3 (c10-6 / most)
                                     :ARG5 (c10-21 / album
                                                   :location (c10-17 / magazine
                                                                     :name (c10-15 / name
                                                                                   :op1 "Rolling"
                                                                                   :op2 "Stone")))))
        :op4 (c10-1 / leave-14
                    :ARG0 c10-3
                    :ARG1 (c10-16 / and
                                  :op1 c10-2
                                  :op2 (c10-20 / person
                                               :ARG0-of (c10-22 / have-rel-role-91
                                                                :ARG1 c10-2
                                                                :ARG2 (c10-12 / boyfriend))))
                    :ARG2 (c10-7 / alone)
                    :mode imperative))

# ::snt fka most ugly women in the world.
# ::tokens ["fka", "most", "ugly", "women", "in", "the", "world", "."]
# ::lemmas ["fka", "most", "ugly", "woman", "in", "the", "world", "."]
(c11-1 / have-degree-91
       :ARG1 (c11-3 / woman)
       :ARG2 (c11-4 / ugly)
       :ARG3 (c11-0 / most)
       :ARG5 (c11-2 / world))

# ::snt . She was only stating the truth
# ::tokens [".", "She", "was", "only", "stating", "the", "truth"]
# ::lemmas [".", "she", "be", "only", "state", "the", "truth"]
(c12-3 / state-01
       :ARG0 (c12-0 / she)
       :ARG1 (c12-2 / truth)
       :mod (c12-1 / only))

# ::snt it's her fault. she slept with another (MARRIED) man!
# ::tokens ["it", "'s", "her", "fault", ".", "she", "slept", "with", "another", "(", "MARRIED", ")", "man", "!"]
# ::lemmas ["it", "be", "her", "fault", ".", "she", "sleep", "with", "another", "(", "MARRIED", ")", "man", "!"]
(c13-2 / multi-sentence
       :snt1 (c13-0 / fault-01
                    :ARG1 (c13-3 / she)
                    :ARG2 (c13-5 / it))
       :snt2 (c13-1 / sleep-02
                    :ARG0 (c13-8 / she)
                    :ARG1 (c13-4 / man
                                 :mod (c13-6 / another)
                                 :ARG1-of (c13-7 / marry-01))))

# ::snt Insiders are so liars!!!.Everyone knows she doesn't feel anything for Rob. She loves her gf
# ::tokens ["Insiders", "are", "so", "liars!!!.Everyone", "knows", "she", "does", "n't", "feel", "anything", "for", "Rob", ".", "She", "loves", "her", "gf"]
# ::lemmas ["insider", "be", "so", "liars!!!.everyone", "know", "she", "do", "not", "feel", "anything", "for", "Rob", ".", "she", "love", "she", "gf"]
(c14-2 / multi-sentence
       :snt1 (c14-8 / person
                    :ARG0-of (c14-9 / lie-08
                                    :degree (c14-4 / so))
                    :domain (c14-3 / person
                                   :ARG0-of (c14-12 / insure-02)))
       :snt2 (c14-10 / know-01
                     :ARG0 (c14-6 / everyone)
                     :ARG1 (c14-0 / feel-01
                                  :ARG0 (c14-1 / she)
                                  :ARG1 (c14-13 / anything)
                                  :ARG2 (c14-16 / person
                                                :name (c14-5 / name
                                                             :op1 "Rob"))
                                  :polarity -))
       :snt3 (c14-15 / love-01
                     :ARG0 (c14-17 / she)
                     :ARG1 (c14-11 / person
                                   :ARG0-of (c14-7 / have-rel-role-91
                                                   :ARG1 c14-17
                                                   :ARG2 (c14-14 / girlfriend)))))

# ::snt hee ?
# ::tokens ["hee", "?"]
# ::lemmas ["hee", "?"]
(c16-0 / hehe
       :polarity (c16-1 / amr-unknown))

# ::snt pffft! Stop digging up corpses. Nobody needs to be jealous. These don't do b.s cat fights.
# ::tokens ["pffft", "!", "Stop", "digging", "up", "corpses", ".", "Nobody", "needs", "to", "be", "jealous", ".", "These", "do", "n't", "do", "b.s", "cat", "fights", "."]
# ::lemmas ["pffft", "!", "stop", "dig", "up", "corpse", ".", "nobody", "need", "to", "be", "jealous", ".", "these", "do", "not", "do", "b.s", "cat", "fights", "."]
(c17-4 / multi-sentence
       :snt1 (c17-7 / pffft
                    :mode expressive)
       :snt2 (c17-6 / stop-01
                    :ARG0 (c17-3 / you)
                    :ARG1 (c17-11 / dig-up-02
                                  :ARG0 c17-3
                                  :ARG1 (c17-8 / corpse))
                    :mode imperative)
       :snt3 (c17-0 / obligate-01
                    :ARG1 (c17-5 / nobody)
                    :ARG2 (c17-9 / jealous-02
                                 :ARG0 c17-5))
       :snt4 (c17-1 / fight-01
                    :ARG0 (c17-10 / this)
                    :ARG2 (c17-12 / cat)
                    :mod (c17-2 / bullshit)
                    :polarity -))

# ::snt HAHAHAHAHAHAHA no.
# ::tokens ["HAHAHAHAHAHAHA", "no", "."]
# ::lemmas ["HAHAHAHAHAHAHA", "no", "."]
(c18-1 / no
       :mod (c18-0 / haha
                   :mode expressive))

# ::snt Well, I wondered when this was going to be mentioned but looks like all went well. Enough said.
# ::tokens ["Well", ",", "I", "wondered", "when", "this", "was", "going", "to", "be", "mentioned", "but", "looks", "like", "all", "went", "well", ".", "Enough", "said", "."]
# ::lemmas ["well", ",", "i", "wonder", "when", "this", "be", "go", "to", "be", "mention", "but", "look", "like", "all", "go", "well", ".", "Enough", "say", "."]
(c19-0 / multi-sentence
       :snt1 (c19-8 / contrast-01
                    :ARG1 (c19-9 / wonder-01
                                 :ARG0 (c19-10 / i)
                                 :ARG1 (c19-11 / time
                                               :time-of (c19-4 / mention-01
                                                               :ARG1 (c19-14 / this))))
                    :ARG2 (c19-5 / look-02
                                 :ARG1 (c19-12 / go-06
                                               :ARG0 (c19-2 / all)
                                               :ARG1-of (c19-7 / well-09))))
       :snt2 (c19-1 / say-01
                    :ARG1 (c19-13 / thing
                                  :ARG1-of (c19-6 / have-quant-91
                                                  :ARG3 (c19-3 / enough)))))

# ::snt LEAVE THIS GIRL OUT OF THEIR SHIT DAMN!
# ::tokens ["LEAVE", "THIS", "GIRL", "OUT", "OF", "THEIR", "SHIT", "DAMN", "!"]
# ::lemmas ["leave", "this", "girl", "out", "of", "their", "SHIT", "DAMN", "!"]
(c20-3 / lift-01
       :ARG0 (c20-1 / you)
       :ARG1 (c20-5 / guy
                    :mod (c20-4 / this))
       :ARG2 (c20-2 / shit
                    :poss c20-5)
       :ARG3 (c20-0 / out-06
                    :ARG1 c20-5
                    :ARG2 c20-2)
       :mode imperative)

# ::snt Wait. As if KFA'd never been caught red handed! My poor Rob is being way too gullible.
# ::tokens ["Wait", ".", "As", "if", "KFA'd", "never", "been", "caught", "red", "handed", "!", "My", "poor", "Rob", "is", "being", "way", "too", "gullible", "."]
# ::lemmas ["wait", ".", "as", "if", "kfa'd", "never", "be", "catch", "red", "handed", "!", "my", "poor", "Rob", "be", "be", "way", "too", "gullible", "."]
(c21-1 / multi-sentence
       :snt1 (c21-10 / wait-01
                     :ARG1 (c21-0 / you)
                     :mode imperative)
       :snt2 (c21-11 / catch-02
                     :ARG1 (c21-7 / person
                                  :name (c21-2 / name
                                               :op1 "KFA"))
                     :time (c21-5 / ever)
                     :manner (c21-4 / red-handed)
                     :polarity -)
       :snt3 (c21-15 / gullible
                     :domain (c21-3 / person
                                    :name (c21-6 / name
                                                 :op1 "Rob")
                                    :poss (c21-13 / i)
                                    :mod (c21-14 / poor))
                     :ARG2-of (c21-8 / have-degree-91
                                     :ARG1 c21-3
                                     :ARG3 (c21-12 / too
                                                   :mod (c21-9 / way)))))

# ::snt I hated Kristen. Ok. And you're years older than me? Fine, I'll give you that. But you can never question my concern for Rob.
# ::tokens ["I", "hated", "Kristen", ".", "Ok", ".", "And", "you", "'re", "years", "older", "than", "me", "?", "Fine", ",", "I", "'ll", "give", "you", "that", ".", "But", "you", "can", "never", "question", "my", "concern", "for", "Rob", "."]
# ::lemmas ["i", "hate", "Kristen", ".", "ok", ".", "and", "you", "be", "year", "old", "than", "i", "?", "fine", ",", "i", "'ll", "give", "you", "that", ".", "but", "you", "can", "never", "question", "my", "concern", "for", "Rob", "."]
(c22-14 / multi-sentence
        :snt1 (c22-5 / hate-01
                     :ARG0 (c22-25 / i)
                     :ARG1 (c22-23 / person
                                   :name (c22-21 / name
                                                 :op1 "Kristen")))
        :snt2 (c22-2 / okay-01
                     :ARG1 (c22-10 / and
                                   :op2 (c22-24 / have-degree-91
                                                :ARG1 (c22-3 / you)
                                                :ARG2 (c22-13 / old)
                                                :ARG3 (c22-6 / more
                                                             :quant (c22-19 / multiple
                                                                            :op1 (c22-8 / temporal-quantity
                                                                                        :unit (c22-11 / year)
                                                                                        :quant 1)))
                                                :ARG4 c22-25))
                     :snt3 (c22-20 / fine-04
                                   :ARG1 (c22-9 / give-01
                                                :ARG0 (c22-4 / i)
                                                :ARG1 (c22-18 / that)
                                                :ARG2 c22-3))
                     :snt4 (c22-17 / contrast-01
                                   :ARG2 (c22-15 / possible-01
                                                 :ARG1 (c22-7 / question-03
                                                              :ARG0 (c22-1 / you)
                                                              :ARG1 (c22-12 / concern-01
                                                                            :ARG0 (c22-0 / person
                                                                                         :name (c22-16 / name
                                                                                                       :op1 "Rob"))
                                                                            :ARG1 c22-4)
                                                              :time (c22-22 / ever))
                                                 :polarity -))))

# ::snt I just love Rob too much. I love Robsten too much.
# ::tokens ["I", "just", "love", "Rob", "too", "much", ".", "I", "love", "Robsten", "too", "much", "."]
# ::lemmas ["i", "just", "love", "Rob", "too", "much", ".", "i", "love", "Robsten", "too", "much", "."]
(c23-1 / multi-sentence
       :snt1 (c23-6 / love-01
                    :ARG0 (c23-11 / i)
                    :ARG1 (c23-5 / person
                                 :name (c23-0 / name
                                              :op1 "Rob"))
                    :mod (c23-10 / just)
                    :ARG1-of (c23-4 / have-quant-91
                                    :ARG2 (c23-7 / much)
                                    :ARG3 (c23-12 / too)))
       :snt2 (c23-13 / love-01
                     :ARG0 (c23-3 / i)
                     :ARG1 (c23-2 / person
                                  :name (c23-8 / name
                                               :op1 "Robsten"))
                     :ARG1-of (c23-9 / have-quant-91
                                     :ARG2 (c23-14 / much)
                                     :ARG3 (c23-15 / too))))

# ::snt is this trueee /??
# ::tokens ["is", "this", "trueee", "/", "?", "?"]
# ::lemmas ["be", "this", "trueee", "/", "?", "?"]
(c24-2 / true-01
       :polarity (c24-0 / amr-unknown)
       :ARG1 (c24-1 / this))

# ::snt Listen it's like all parts of me are pleased n I feel so good about it
# ::tokens ["Listen", "it", "'s", "like", "all", "parts", "of", "me", "are", "pleased", "n", "I", "feel", "so", "good", "about", "it"]
# ::lemmas ["listen", "it", "be", "like", "all", "part", "of", "i", "be", "pleased", "n", "i", "feel", "so", "good", "about", "it"]
(c25-10 / and
        :op1 (c25-5 / resemble-01
                    :ARG1 (c25-9 / it)
                    :ARG2 (c25-7 / please-01
                                 :ARG1 (c25-2 / part
                                              :mod (c25-11 / all)
                                              :part-of (c25-4 / i))))
        :op2 (c25-0 / feel-01
                    :ARG0 c25-4
                    :ARG1 (c25-3 / good-02
                                 :degree (c25-6 / so))
                    :ARG2 c25-9)
        :ARG1-of (c25-8 / listen-01
                        :ARG0 (c25-1 / you)
                        :mode imperative))

# ::snt fka twigs()
# ::tokens ["fka", "twigs", "(", ")"]
# ::lemmas ["fka", "twig", "(", ")"]
(c27-2 / twig
       :mod (c27-1 / person
                   :name (c27-0 / name
                                :op1 "Fka")))

# ::snt This is THE --- Best Joke ever! Thanks! ROFL!!!
# ::tokens ["This", "is", "THE", "---", "Best", "Joke", "ever", "!", "Thanks", "!", "ROFL", "!", "!", "!"]
# ::lemmas ["this", "be", "the", "---", "Best", "Joke", "ever", "!", "thank", "!", "rofl", "!", "!", "!"]
(c28-2 / multi-sentence
       :snt1 (c28-7 / joke-01
                    :ARG1-of (c28-6 / have-degree-91
                                    :ARG2 (c28-10 / good-02
                                                  :ARG1 c28-7)
                                    :ARG3 (c28-5 / most)
                                    :ARG5 (c28-4 / ever))
                    :domain (c28-9 / this)
                    :mode expressive)
       :snt2 (c28-11 / thank-01
                     :ARG0 (c28-8 / i)
                     :ARG1 (c28-1 / you)
                     :mode expressive)
       :snt3 (c28-3 / roll-01
                    :ARG0 c28-1
                    :manner (c28-0 / floor)
                    :mode expressive))

# ::snt Maybe
# ::tokens ["Maybe"]
# ::lemmas ["maybe"]
(c29-0 / possible-01)

# ::snt Agreed. Why do people think anonimity gives them carte blanche to be complete a**holes is beyond me.
# ::tokens ["Agreed", ".", "Why", "do", "people", "think", "anonimity", "gives", "them", "carte", "blanche", "to", "be", "complete", "a**holes", "is", "beyond", "me", "."]
# ::lemmas ["agree", ".", "why", "do", "people", "think", "anonimity", "give", "they", "carte", "blanche", "to", "be", "complete", "a**hole", "be", "beyond", "i", "."]
(c30-1 / multi-sentence
       :snt1 (c30-3 / agree-01
                    :ARG1 (c30-9 / i))
       :snt2 (c30-10 / think-01
                     :ARG0 (c30-5 / person)
                     :ARG1 (c30-11 / give-01
                                   :ARG0 (c30-4 / environment)
                                   :ARG1 (c30-6 / carte-blanche)
                                   :ARG2 (c30-12 / asshole
                                                 :ARG1-of (c30-13 / complete-02))
                                   :ARG2 c30-5
                                   :ARG1-of (c30-8 / cause-01
                                                   :ARG0 (c30-7 / amr-unknown)))
                     :location (c30-0 / beyond
                                      :op1 (c30-2 / i))))

# ::snt The kind of things I see tweeted to Twigs directly are really appalling. I don't blame Kristen at all for avoiding Twitter.
# ::tokens ["The", "kind", "of", "things", "I", "see", "tweeted", "to", "Twigs", "directly", "are", "really", "appalling", ".", "I", "do", "n't", "blame", "Kristen", "at", "all", "for", "avoiding", "Twitter", "."]
# ::lemmas ["the", "kind", "of", "thing", "i", "see", "tweet", "to", "Twigs", "directly", "be", "really", "appalling", ".", "i", "do", "not", "blame", "Kristen", "at", "all", "for", "avoid", "Twitter", "."]
(c31-1 / multi-sentence
       :snt1 (c31-5 / appall-01
                    :ARG0 (c31-14 / thing
                                  :mod (c31-9 / kind)
                                  :ARG1-of (c31-3 / see-01
                                                  :ARG0 (c31-13 / i)
                                                  :ARG2 (c31-10 / person
                                                                :name (c31-2 / name
                                                                             :op1 "Twig"))
                                                  :ARG1-of (c31-16 / direct-02)))
                    :degree (c31-6 / really))
       :snt2 (c31-0 / blame-01
                    :ARG0 (c31-4 / i)
                    :ARG1 (c31-7 / person
                                 :name (c31-8 / name
                                              :op1 "Kristen"))
                    :ARG2 (c31-15 / avoid-01
                                  :ARG0 c31-7
                                  :ARG1 (c31-17 / publication
                                                :name (c31-11 / name
                                                              :op1 "Twitter")))
                    :degree (c31-12 / at-all)
                    :polarity -))

# ::snt Me either.
# ::tokens ["Me", "either", "."]
# ::lemmas ["i", "either", "."]
(c32-1 / i
       :mod (c32-0 / either))

# ::snt That's nice lmao
# ::tokens ["That", "'s", "nice", "lmao"]
# ::lemmas ["that", "be", "nice", "lmao"]
(c33-0 / nice-01
       :ARG1 (c33-2 / that)
       :ARG2-of (c33-1 / laugh-01
                       :ARG0 (c33-3 / i
                                    :part (c33-4 / ass))
                       :manner (c33-5 / loud)))

# ::snt who the hell are you? Go mind your own business somewhere else. And don't tell me to grow up.
# ::tokens ["who", "the", "hell", "are", "you", "?", "Go", "mind", "your", "own", "business", "somewhere", "else", ".", "And", "do", "n't", "tell", "me", "to", "grow", "up", "."]
# ::lemmas ["who", "the", "hell", "be", "you", "?", "go", "mind", "your", "own", "business", "somewhere", "else", ".", "and", "do", "not", "tell", "i", "to", "grow", "up", "."]
(c34-3 / multi-sentence
       :snt1 (c34-2 / you
                    :domain (c34-10 / amr-unknown
                                    :mod (c34-6 / hell
                                                :mode expressive)))
       :snt2 (c34-11 / go-05
                     :ARG0 (c34-13 / you)
                     :ARG1 (c34-7 / mind-15
                                  :ARG0 c34-13
                                  :ARG1 (c34-1 / business
                                               :poss c34-13
                                               :location (c34-4 / somewhere
                                                                :mod (c34-5 / else))))
                     :mode imperative)
       :snt3 (c34-9 / and
                    :op2 (c34-8 / tell-01
                                :ARG0 (c34-0 / you)
                                :ARG1 (c34-12 / grow-up-04
                                              :ARG1 (c34-14 / i
                                                            :ARG2-of c34-8))
                                :polarity -
                                :mode imperative)))

# ::snt tiene que ser uno muy estupido pra dejar el amor de Kristen,por esa mujer tan fea, sin gracia y parece mas vieja que l.
# ::tokens ["tiene", "que", "ser", "uno", "muy", "estupido", "pra", "dejar", "el", "amor", "de", "Kristen", ",", "por", "esa", "mujer", "tan", "fea", ",", "sin", "gracia", "y", "parece", "mas", "vieja", "que", "l."]
# ::lemmas ["tiene", "que", "ser", "uno", "muy", "estupido", "pra", "dejar", "el", "amor", "de", "Kristen", ",", "por", "esa", "mujer", "tan", "fea", ",", "sin", "gracia", "y", "parece", "mas", "vieja", "que", "l."]
(c35-16 / multi-sentence
        :snt1 (c35-8 / have-polarity-91
                     :ARG1 (c35-12 / try-01
                                   :ARG0 (c35-5 / you)
                                   :ARG1 (c35-22 / estupid
                                                 :domain c35-5
                                                 :degree (c35-6 / very)))
                     :ARG2 -)
        :snt2 (c35-24 / have-condition-91
                      :ARG1 (c35-23 / possible-01
                                    :ARG1 (c35-25 / dejar-01
                                                  :ARG0 (c35-13 / you)
                                                  :ARG1 (c35-11 / amor
                                                                :poss (c35-17 / person
                                                                              :name (c35-20 / name
                                                                                            :op1 "Kristen"))))
                                    :ARG1-of (c35-18 / cause-01
                                                     :ARG0 (c35-10 / and
                                                                   :op1 (c35-3 / person
                                                                               :ARG0-of (c35-7 / have-rel-role-91
                                                                                               :ARG1 c35-13
                                                                                               :ARG2 (c35-9 / mujer))
                                                                               :ARG1-of (c35-19 / tan-01))
                                                                   :op2 (c35-1 / person
                                                                               :ARG0-of c35-7
                                                                               :ARG1 c35-13
                                                                               :ARG2 (c35-0 / sister)))
                                                     :op3 (c35-4 / sin-01
                                                                 :ARG0 c35-13
                                                                 :ARG1 (c35-14 / gracia))
                                                     :op4 (c35-15 / parece)
                                                     :op5 (c35-2 / vieja)
                                                     :ARG1-of (c35-21 / request-confirmation-91)))))

# ::snt bitch needs to be stopped
# ::tokens ["bitch", "needs", "to", "be", "stopped"]
# ::lemmas ["bitch", "need", "to", "be", "stop"]
(c36-1 / need-01
       :ARG1 (c36-2 / stop-01
                    :ARG1 (c36-0 / bitch)))

# ::snt I'm tired of tabs kissing her ass. Bitch copies her style and this is proof she talks shit about k to ppl.
# ::tokens ["I", "'m", "tired", "of", "tabs", "kissing", "her", "ass", ".", "Bitch", "copies", "her", "style", "and", "this", "is", "proof", "she", "talks", "shit", "about", "k", "to", "ppl", "."]
# ::lemmas ["i", "be", "tired", "of", "tab", "kiss", "her", "ass", ".", "bitch", "copy", "her", "style", "and", "this", "be", "proof", "she", "talk", "shit", "about", "k", "to", "ppl", "."]
(c37-10 / multi-sentence
        :snt1 (c37-8 / tire-01
                     :ARG0 (c37-6 / kiss-01
                                  :ARG0 (c37-13 / tab)
                                  :ARG1 (c37-9 / ass
                                               :part-of (c37-0 / she)))
                     :ARG1 (c37-17 / i))
        :snt2 (c37-7 / and
                     :op1 (c37-12 / copy-01
                                  :ARG0 (c37-16 / person
                                                :name (c37-14 / name
                                                              :op1 "Bitch"))
                                  :ARG1 (c37-5 / style
                                               :poss (c37-4 / she)))
                     :op2 (c37-11 / prove-01
                                  :ARG0 (c37-18 / this)
                                  :ARG1 (c37-1 / talk-01
                                               :ARG0 c37-16
                                               :ARG1 (c37-15 / shit)
                                               :ARG2 (c37-3 / person
                                                            :ARG0-of (c37-2 / post-01))))))

# ::snt Always I have so many movies to fix
# ::tokens ["Always", "I", "have", "so", "many", "movies", "to", "fix"]
# ::lemmas ["always", "i", "have", "so", "many", "movie", "to", "fix"]
(c38-3 / have-03
       :ARG0 (c38-6 / i)
       :ARG1 (c38-1 / movie
                    :ARG1-of (c38-0 / fix-02
                                    :ARG0 c38-6)
                    :ARG1-of (c38-5 / have-quant-91
                                    :ARG2 (c38-4 / many)
                                    :ARG3 (c38-2 / so)))
       :time (c38-7 / always))

# ::snt well, kristen was from Rob to Rupert Sanders and now is dating with a woman....
# ::tokens ["well", ",", "kristen", "was", "from", "Rob", "to", "Rupert", "Sanders", "and", "now", "is", "dating", "with", "a", "woman", "...."]
# ::lemmas ["well", ",", "kristen", "be", "from", "Rob", "to", "Rupert", "Sanders", "and", "now", "be", "date", "with", "a", "woman", "...."]
(c39-8 / and
       :op1 (c39-3 / person
                   :name (c39-0 / name
                                :op1 "Rob")
                   :domain (c39-1 / person
                                  :name (c39-2 / name
                                               :op1 "Kristen"))
                   :prep-from (c39-10 / person
                                      :name (c39-4 / name
                                                   :op1 "Rupert"
                                                   :op2 "Sanders")))
       :op2 (c39-9 / date-02
                   :ARG0 c39-1
                   :ARG1 (c39-6 / woman)
                   :time (c39-7 / now))
       :mod (c39-5 / well))

# ::snt Truth! then Kstew turned lesbian! Upgrade! LOL
# ::tokens ["Truth", "!", "then", "Kstew", "turned", "lesbian", "!", "Upgrade", "!", "LOL"]
# ::lemmas ["truth", "!", "then", "Kstew", "turn", "lesbian", "!", "upgrade", "!", "LOL"]
(c40-0 / multi-sentence
       :snt1 (c40-5 / truth
                    :time (c40-7 / then)
                    :mode expressive)
       :snt2 (c40-6 / turn-02
                    :ARG1 (c40-2 / person
                                 :name (c40-1 / name
                                              :op1 "Kstew"))
                    :ARG2 (c40-3 / lesbian))
       :snt3 (c40-9 / upgrade-01
                    :ARG2-of (c40-8 / laugh-01
                                    :manner (c40-4 / loud)
                                    :mode expressive)
                    :mode expressive))

# ::snt You gals know shit I, a R fan, didn't know.
# ::tokens ["You", "gals", "know", "shit", "I", ",", "a", "R", "fan", ",", "did", "n't", "know", "."]
# ::lemmas ["you", "gal", "know", "shit", "i", ",", "a", "r", "fan", ",", "do", "not", "know", "."]
(c41-3 / know-01
       :ARG0 (c41-5 / i
                    :mod (c41-0 / fan
                                :mod (c41-2 / string-entity
                                            :value "R")))
       :ARG1 (c41-1 / shit)
       :ARG1-of (c41-4 / cause-01
                       :ARG0 (c41-6 / know-01
                                    :ARG0 c41-5))
       :polarity -)

# ::snt oh my goddd..wake up from your fantasy.. Robert would thank you!!
# ::tokens ["oh", "my", "goddd", "..", "wake", "up", "from", "your", "fantasy", "..", "Robert", "would", "thank", "you", "!", "!"]
# ::lemmas ["oh", "my", "goddd", "..", "wake", "up", "from", "your", "fantasy", "..", "Robert", "would", "thank", "you", "!", "!"]
(c42-4 / multi-sentence
       :snt1 (c42-7 / person
                    :name (c42-3 / name
                                 :op1 "Goddd")
                    :mod (c42-0 / oh
                                :mode expressive))
       :snt2 (c42-8 / wake-up-02
                    :ARG0 (c42-2 / you
                                 :ARG1-of c42-8)
                    :source (c42-1 / fantasy
                                   :poss c42-2)
                    :mode imperative)
       :snt3 (c42-9 / thank-01
                    :ARG0 (c42-5 / person
                                 :name (c42-6 / name
                                              :op1 "Robert"))
                    :ARG1 (c42-10 / you)))
