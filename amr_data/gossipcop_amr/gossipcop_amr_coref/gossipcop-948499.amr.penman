# ::snt No one said i cared i was just wondering if anyone else thought that she looked old enough to be his mom or if it was just me who thought they were mother and son while scrolling through my feed.
# ::tokens ["No", "one", "said", "i", "cared", "i", "was", "just", "wondering", "if", "anyone", "else", "thought", "that", "she", "looked", "old", "enough", "to", "be", "his", "mom", "or", "if", "it", "was", "just", "me", "who", "thought", "they", "were", "mother", "and", "son", "while", "scrolling", "through", "my", "feed", "."]
# ::lemmas ["no", "one", "say", "i", "care", "i", "be", "just", "wonder", "if", "anyone", "else", "think", "that", "she", "look", "old", "enough", "to", "be", "his", "mom", "or", "if", "it", "be", "just", "i", "who", "think", "they", "be", "mother", "and", "son", "while", "scroll", "through", "my", "feed", "."]
(c1-16 / multi-sentence
       :snt1 (c1-0 / say-01
                   :ARG0 (c1-22 / no-one)
                   :ARG1 (c1-17 / care-01
                                :ARG0 (c1-27 / i)))
       :snt2 (c1-25 / wonder-01
                    :ARG0 (c1-5 / i)
                    :ARG1 (c1-3 / or
                                :op1 (c1-13 / think-01
                                            :ARG0 (c1-12 / anyone
                                                         :mod (c1-24 / else))
                                            :ARG1 (c1-1 / look-02
                                                        :ARG0 (c1-4 / she)
                                                        :ARG1 (c1-7 / have-degree-91
                                                                    :ARG1 c1-4
                                                                    :ARG2 (c1-15 / old)
                                                                    :ARG3 (c1-14 / enough)
                                                                    :ARG6 (c1-26 / have-rel-role-91
                                                                                 :ARG0 c1-4
                                                                                 :ARG1 (c1-6 / he)
                                                                                 :ARG2 (c1-8 / mom)))))
                                :op2 (c1-18 / think-01
                                            :ARG0 c1-5
                                            :ARG1 (c1-11 / and
                                                         :op1 (c1-19 / have-rel-role-91
                                                                     :ARG0 c1-4
                                                                     :ARG2 (c1-20 / mother))
                                                         :op2 (c1-9 / have-rel-role-91
                                                                    :ARG0 c1-4
                                                                    :ARG2 (c1-2 / son)))
                                            :time (c1-23 / scroll-01
                                                         :ARG0 c1-5
                                                         :ARG1 (c1-21 / feed
                                                                      :poss c1-5)
                                                         :medium (c1-28 / through))))
                    :mod (c1-10 / just)))

# ::snt Only one who cares about what lol
# ::tokens ["Only", "one", "who", "cares", "about", "what", "lol"]
# ::lemmas ["only", "one", "who", "care", "about", "what", "lol"]
(c2-3 / care-01
      :ARG0 (c2-1 / one
                  :mod (c2-0 / only))
      :ARG1 (c2-5 / thing)
      :ARG2-of (c2-2 / laugh-01
                     :ARG0 (c2-4 / i)
                     :manner (c2-6 / loud)
                     :mode expressive))

# ::snt Who??
# ::tokens ["Who", "?", "?"]
# ::lemmas ["who", "?", "?"]
(c3-0 / amr-unknown)

# ::snt Who gives a shit
# ::tokens ["Who", "gives", "a", "shit"]
# ::lemmas ["who", "give", "a", "shit"]
(c4-0 / give-16
      :ARG0 (c4-2 / amr-unknown)
      :ARG1 (c4-1 / shit))

# ::snt Well a mother who doesnt want to share a photo of her baby with her husband is pretty mean! Who else has felt sorry for who was only allowed to show a photo of his sons foot with the world. Even royalty share their new baby moment!
# ::tokens ["Well", "a", "mother", "who", "does", "nt", "want", "to", "share", "a", "photo", "of", "her", "baby", "with", "her", "husband", "is", "pretty", "mean", "!", "Who", "else", "has", "felt", "sorry", "for", "who", "was", "only", "allowed", "to", "show", "a", "photo", "of", "his", "sons", "foot", "with", "the", "world", ".", "Even", "royalty", "share", "their", "new", "baby", "moment", "!"]
# ::lemmas ["well", "a", "mother", "who", "do", "not", "want", "to", "share", "a", "photo", "of", "her", "baby", "with", "her", "husband", "be", "pretty", "mean", "!", "who", "else", "have", "feel", "sorry", "for", "who", "be", "only", "allow", "to", "show", "a", "photo", "of", "his", "son", "foot", "with", "the", "world", ".", "even", "royalty", "share", "their", "new", "baby", "moment", "!"]
(c5-18 / multi-sentence
       :snt1 (c5-10 / mean-04
                    :ARG0 (c5-29 / person
                                 :ARG0-of (c5-11 / have-rel-role-91
                                                 :ARG2 (c5-22 / mother))
                                 :ARG0-of (c5-31 / want-01
                                                 :ARG1 (c5-0 / share-01
                                                             :ARG0 c5-29
                                                             :ARG1 (c5-19 / photo
                                                                          :topic (c5-5 / person
                                                                                       :ARG0-of (c5-32 / have-rel-role-91
                                                                                                       :ARG1 c5-29
                                                                                                       :ARG2 (c5-17 / baby))))
                                                             :ARG2 (c5-4 / person
                                                                         :ARG0-of (c5-9 / have-rel-role-91
                                                                                        :ARG1 c5-29
                                                                                        :ARG2 (c5-21 / husband))))
                                                 :polarity -)
                                 :degree (c5-13 / pretty))
                    :snt2 (c5-24 / feel-01
                                 :ARG0 (c5-14 / amr-unknown
                                              :mod (c5-28 / else))
                                 :ARG1 (c5-7 / sorry-01
                                             :ARG1 c5-14)
                                 :ARG2 (c5-15 / allow-01
                                              :ARG1 (c5-6 / show-01
                                                          :ARG0 c5-14
                                                          :ARG1 (c5-33 / photo
                                                                       :topic (c5-30 / foot
                                                                                     :part-of (c5-23 / person
                                                                                                     :ARG0-of (c5-12 / have-rel-role-91
                                                                                                                     :ARG2 (c5-26 / son)
                                                                                                                     :ARG1 c5-23))))
                                                          :ARG2 (c5-3 / world))
                                              :mod (c5-8 / only)))
                    :snt3 (c5-1 / share-01
                                :ARG0 (c5-27 / royalty)
                                :ARG1 (c5-20 / moment
                                             :mod (c5-2 / baby)
                                             :ARG1-of (c5-25 / new-01))
                                :mod (c5-16 / even))
                    :mode expressive))

# ::snt who?
# ::tokens ["who", "?"]
# ::lemmas ["who", "?"]
(c6-0 / amr-unknown)

# ::snt Im guessing theyre well known in England, is it?
# ::tokens ["I", "m", "guessing", "they", "re", "well", "known", "in", "England", ",", "is", "it", "?"]
# ::lemmas ["i", "m", "guess", "they", "re", "well", "known", "in", "England", ",", "be", "it", "?"]
(c7-7 / guess-01
      :ARG0 (c7-5 / i)
      :ARG1 (c7-2 / know-02
                  :ARG1 (c7-6 / they)
                  :degree (c7-3 / well)
                  :location (c7-4 / country
                                  :name (c7-0 / name
                                              :op1 "England"))
                  :ARG1-of (c7-1 / request-confirmation-91)))

# ::snt Bovvered?
# ::tokens ["Bovvered", "?"]
# ::lemmas ["bovvere", "?"]
(c8-0 / borrow-01
      :polarity (c8-1 / amr-unknown))

# ::snt Awww noooo!
# ::tokens ["Awww", "noooo", "!"]
# ::lemmas ["Awww", "noooo", "!"]
(c9-0 / no
      :mod (c9-1 / awww
                 :mode expressive))

# ::snt Nobody is surprised .
# ::tokens ["Nobody", "is", "surprised", "."]
# ::lemmas ["nobody", "be", "surprised", "."]
(c10-1 / surprise-01
       :ARG1 (c10-0 / nobody))

# ::snt Who are these people?
# ::tokens ["Who", "are", "these", "people", "?"]
# ::lemmas ["who", "be", "these", "people", "?"]
(c12-1 / person
       :domain (c12-2 / amr-unknown)
       :mod (c12-0 / this))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c13-0 / amr-unknown)

# ::snt Who didn't see this coming?
# ::tokens ["Who", "did", "n't", "see", "this", "coming", "?"]
# ::lemmas ["who", "do", "not", "see", "this", "come", "?"]
(c15-3 / see-01
       :ARG0 (c15-0 / amr-unknown)
       :ARG1 (c15-1 / come-03
                    :ARG1 (c15-2 / this))
       :polarity -)

# ::snt Never liked her
# ::tokens ["Never", "liked", "her"]
# ::lemmas ["never", "like", "she"]
(c16-0 / dislike-01
       :ARG1 (c16-2 / she)
       :time (c16-1 / ever))

# ::snt pues que feo tratas a tus amigas... y no soy ninguna nia.
# ::tokens ["pues", "que", "feo", "tratas", "a", "tus", "amigas", "...", "y", "no", "soy", "ninguna", "nia", "."]
# ::lemmas ["pue", "que", "feo", "trata", "a", "tus", "amigas", "...", "y", "no", "soy", "ninguna", "nia", "."]
(c17-1 / multi-sentence
       :snt1 (c17-3 / request-confirmation-91
                    :ARG1 (c17-0 / feo-tratas-a-tus-amigas))
       :snt2 (c17-5 / and
                    :op1 (c17-4 / have-polarity-91
                                :op2-of c17-5
                                :ARG2 -)
                    :ARG1 (c17-2 / nia)
                    :ARG2 -))

# ::snt Yawn
# ::tokens ["Yawn"]
# ::lemmas ["yawn"]
(c18-0 / yawn-01)

# ::snt Am I the only one who thinks she could pass for his mom
# ::tokens ["Am", "I", "the", "only", "one", "who", "thinks", "she", "could", "pass", "for", "his", "mom"]
# ::lemmas ["be", "i", "the", "only", "one", "who", "think", "she", "could", "pass", "for", "his", "mom"]
(c19-1 / one
       :mod (c19-0 / only)
       :domain (c19-8 / i)
       :ARG0-of (c19-9 / think-01
                       :ARG1 (c19-7 / possible-01
                                    :ARG1 (c19-3 / pass-21
                                                 :ARG1 (c19-4 / she)
                                                 :ARG2 (c19-10 / person
                                                               :ARG0-of (c19-6 / have-rel-role-91
                                                                               :ARG1 c19-1
                                                                               :ARG2 (c19-2 / mom))))))
       :polarity (c19-5 / amr-unknown))

# ::snt Oh yeah, what sad :"(
# ::tokens ["Oh", "yeah", ",", "what", "sad", ":", "\"", "("]
# ::lemmas ["oh", "yeah", ",", "what", "sad", ":", "\"", "("]
(c21-2 / sad-02
       :degree (c21-0 / so)
       :mod (c21-1 / oh-yeah
                   :mode expressive))

# ::snt en realidad muchas relaciones terminan por esa razon, y no es necesario que seas tan grosera.
# ::tokens ["en", "realidad", "muchas", "relaciones", "terminan", "por", "esa", "razon", ",", "y", "no", "es", "necesario", "que", "seas", "tan", "grosera", "."]
# ::lemmas ["en", "realidad", "muchas", "relacione", "terminan", "por", "esa", "razon", ",", "y", "no", "es", "necesario", "que", "seas", "tan", "grosera", "."]
(c22-5 / and
       :op1 (c22-8 / terminan-01
                   :ARG1 (c22-4 / relaciones
                                :quant (c22-1 / much))
                   :ARG1-of (c22-7 / cause-01
                                   :ARG0 (c22-10 / razon
                                                 :domain (c22-0 / you)))
                   :ARG1-of (c22-6 / real-04))
       :op2 (c22-2 / necesario
                   :domain (c22-3 / seas
                                  :ARG1-of (c22-11 / tan-01
                                                   :ARG2 (c22-9 / grosera)))
                   :polarity -))

# ::snt This is just a normal thing for celebrities..
# ::tokens ["This", "is", "just", "a", "normal", "thing", "for", "celebrities", ".."]
# ::lemmas ["this", "be", "just", "a", "normal", "thing", "for", "celebrity", ".."]
(c25-0 / normal-02
       :ARG1 (c25-3 / thing
                    :mod (c25-4 / this))
       :ARG2 (c25-1 / celebrity)
       :mod (c25-2 / just))

# ::snt Who are they ?
# ::tokens ["Who", "are", "they", "?"]
# ::lemmas ["who", "be", "they", "?"]
(c27-1 / they
       :domain (c27-0 / amr-unknown))

# ::snt R we supposed to be suprised?
# ::tokens ["R", "we", "supposed", "to", "be", "suprised", "?"]
# ::lemmas ["r", "we", "suppose", "to", "be", "suprise", "?"]
(c28-3 / suppose-02
       :polarity (c28-0 / amr-unknown)
       :ARG1 (c28-2 / we)
       :ARG2 (c28-1 / surprise-01
                    :ARG1 c28-2))

# ::snt They just had a baby these people are fucking idiots
# ::tokens ["They", "just", "had", "a", "baby", "these", "people", "are", "fucking", "idiots"]
# ::lemmas ["they", "just", "have", "a", "baby", "these", "people", "be", "fucking", "idiot"]
(c29-5 / idiot
       :mod (c29-0 / fucking)
       :mod (c29-6 / this)
       :domain (c29-3 / person
                      :ARG0-of (c29-2 / have-rel-role-91
                                      :ARG1 (c29-7 / they)
                                      :ARG2 (c29-1 / baby)))
       :time (c29-4 / just))

# ::snt Its about time!!! She had no reason with that boy!!!! She too grown!!
# ::tokens ["Its", "about", "time", "!", "!", "!", "She", "had", "no", "reason", "with", "that", "boy", "!", "!", "!", "!", "She", "too", "grown", "!", "!"]
# ::lemmas ["its", "about", "time", "!", "!", "!", "she", "have", "no", "reason", "with", "that", "boy", "!", "!", "!", "!", "she", "too", "grow", "!", "!"]
(c30-2 / multi-sentence
       :snt1 (c30-1 / be-temporally-at-91
                    :ARG1 (c30-8 / it)
                    :ARG2 (c30-9 / about-time))
       :snt2 (c30-4 / reason-01
                    :ARG1 (c30-3 / she)
                    :ARG2 (c30-5 / boy
                                 :mod (c30-7 / that))
                    :polarity -)
       :snt3 (c30-10 / grow-01
                     :ARG1 (c30-0 / she)
                     :ARG2-of (c30-6 / have-degree-91
                                     :ARG1 c30-0
                                     :ARG3 (c30-11 / too))))

# ::snt Saw this one coming a mile away!!!!!
# ::tokens ["Saw", "this", "one", "coming", "a", "mile", "away", "!", "!", "!", "!", "!"]
# ::lemmas ["saw", "this", "one", "come", "a", "mile", "away", "!", "!", "!", "!", "!"]
(c31-2 / see-01
       :ARG0 (c31-5 / i)
       :ARG1 (c31-4 / come-01
                    :ARG1 (c31-0 / one
                                 :mod (c31-6 / this))
                    :direction (c31-3 / away)
                    :quant (c31-7 / distance-quantity
                                  :unit (c31-1 / mile)
                                  :quant 1))
       :mode expressive)

# ::snt Ohhhhhh, a boy band group lol
# ::tokens ["Ohhhhhh", ",", "a", "boy", "band", "group", "lol"]
# ::lemmas ["ohhhhhh", ",", "a", "boy", "band", "group", "lol"]
(c32-2 / multi-sentence
       :snt1 (c32-0 / oh
                    :mode expressive)
       :snt2 (c32-4 / group
                    :mod (c32-1 / boy)
                    :ARG2-of (c32-3 / laugh-01
                                    :manner (c32-5 / loud)
                                    :mode expressive)))

# ::snt Pues s, ve el tweet de Liam. No cortas con alguien porque lo dejas de querer mensota
# ::tokens ["Pues", "s", ",", "ve", "el", "tweet", "de", "Liam", ".", "No", "cortas", "con", "alguien", "porque", "lo", "dejas", "de", "querer", "mensota"]
# ::lemmas ["Pues", "s", ",", "ve", "el", "tweet", "de", "Liam", ".", "no", "corta", "con", "alguien", "porque", "lo", "dejas", "de", "querer", "mensota"]
(c33-10 / multi-sentence
        :snt1 (c33-6 / question-03
                     :ARG1 (c33-16 / possible-01
                                   :ARG1 (c33-8 / tweet-01
                                                :ARG0 (c33-11 / person
                                                              :name (c33-15 / name
                                                                            :op1 "Liam")))))
        :snt2 (c33-13 / cortas-00
                      :ARG1 (c33-3 / person
                                   :ARG0-of (c33-4 / have-rel-role-91
                                                   :ARG1 c33-11
                                                   :ARG2 (c33-0 / significant-other)))
                      :ARG1-of (c33-9 / cause-01
                                      :ARG0 (c33-17 / have-concession-91
                                                    :ARG1 (c33-12 / no-one)
                                                    :ARG2 (c33-7 / alguien)))
                      :ARG1-of (c33-2 / cause-01
                                      :ARG0 c33-17
                                      :ARG1 (c33-18 / dejas-00
                                                    :ARG0 (c33-1 / person)
                                                    :ARG1 (c33-14 / querer-01
                                                                  :ARG0 c33-1
                                                                  :ARG1 (c33-5 / mensota)))
                                      :ARG2 c33-12)
                      :polarity -))

# ::snt get it girl
# ::tokens ["get", "it", "girl"]
# ::lemmas ["get", "it", "girl"]
(c34-3 / say-01
       :ARG1 (c34-0 / get-02
                    :ARG0 (c34-2 / girl)
                    :ARG1 (c34-1 / it)
                    :mode imperative)
       :ARG2 c34-2)

# ::snt Because most are stupid
# ::tokens ["Because", "most", "are", "stupid"]
# ::lemmas ["because", "most", "be", "stupid"]
(c35-1 / cause-01
       :ARG0 (c35-3 / stupid
                    :domain (c35-2 / person
                                   :mod (c35-0 / most))))

# ::snt Thought they were already split
# ::tokens ["Thought", "they", "were", "already", "split"]
# ::lemmas ["Thought", "they", "be", "already", "split"]
(c36-3 / think-01
       :ARG1 (c36-0 / split-01
                    :ARG1 (c36-2 / they)
                    :time (c36-1 / already)))

# ::snt everyone knew it wasn't going to last...he's still immature for her.
# ::tokens ["everyone", "knew", "it", "was", "n't", "going", "to", "last", "...", "he", "'s", "still", "immature", "for", "her", "."]
# ::lemmas ["everyone", "know", "it", "be", "not", "go", "to", "last", "...", "he", "be", "still", "immature", "for", "she", "."]
(c37-7 / cause-01
       :ARG0 (c37-1 / mature-02
                    :ARG1 (c37-4 / he)
                    :ARG2 (c37-2 / she)
                    :mod (c37-0 / still)
                    :polarity -)
       :ARG1 (c37-5 / know-01
                    :ARG0 (c37-3 / everyone)
                    :ARG1 (c37-6 / last-04
                                 :ARG1 (c37-8 / it)
                                 :polarity -)))

# ::snt Ok umm...
# ::tokens ["Ok", "umm", "..."]
# ::lemmas ["ok", "umm", "..."]
(c38-0 / okay-01
       :mod (c38-1 / umm))

# ::snt Bella Thorne will eventually get back together with Gregg sulkin
# ::tokens ["Bella", "Thorne", "will", "eventually", "get", "back", "together", "with", "Gregg", "sulkin"]
# ::lemmas ["Bella", "Thorne", "will", "eventually", "get", "back", "together", "with", "Gregg", "sulkin"]
(c39-6 / get-back-10
       :ARG1 (c39-4 / person
                    :name (c39-0 / name
                                 :op1 "Bella"
                                 :op2 "Thorne"))
       :ARG2 (c39-5 / together
                    :domain c39-4
                    :accompanier (c39-1 / person
                                        :name (c39-3 / name
                                                     :op1 "Gregg"
                                                     :op2 "Sulkin")))
       :time (c39-2 / eventual))

# ::snt They have a baby, this is beyond disrespectful
# ::tokens ["They", "have", "a", "baby", ",", "this", "is", "beyond", "disrespectful"]
# ::lemmas ["they", "have", "a", "baby", ",", "this", "be", "beyond", "disrespectful"]
(c41-1 / and
       :op1 (c41-2 / have-05
                   :ARG0 (c41-4 / they)
                   :ARG1 (c41-0 / baby))
       :op2 (c41-5 / disrespect-01
                   :ARG0 (c41-6 / this)
                   :degree (c41-3 / beyond)))

# ::snt Gute Nacht
# ::tokens ["Gute", "Nacht"]
# ::lemmas ["Gute", "Nacht"]
(c42-1 / nacht
       :mod (c42-0 / cute))

# ::snt Lol. Must not be. Never heard of either.
# ::tokens ["Lol", ".", "Must", "not", "be", ".", "Never", "heard", "of", "either", "."]
# ::lemmas ["Lol", ".", "must", "not", "be", ".", "never", "hear", "of", "either", "."]
(c43-2 / multi-sentence
       :snt1 (c43-5 / laugh-01
                    :manner (c43-7 / loud)
                    :mode expressive)
       :snt2 (c43-0 / obligate-01
                    :ARG2 (c43-1 / be-02
                                 :polarity -))
       :snt3 (c43-4 / hear-01
                    :ARG1 (c43-3 / either)
                    :time (c43-6 / ever)
                    :polarity -))

# ::snt Well at least that contract has finally expired.
# ::tokens ["Well", "at", "least", "that", "contract", "has", "finally", "expired", "."]
# ::lemmas ["well", "at", "least", "that", "contract", "have", "finally", "expire", "."]
(c45-1 / expire-01
       :ARG1 (c45-2 / contract
                    :mod (c45-4 / that))
       :mod (c45-5 / at-least)
       :time (c45-0 / final)
       :mod (c45-3 / well
                   :mode expressive))

# ::snt Wait, who?
# ::tokens ["Wait", ",", "who", "?"]
# ::lemmas ["wait", ",", "who", "?"]
(c47-3 / and
       :op1 (c47-0 / wait-01
                   :ARG1 (c47-1 / you)
                   :mode imperative)
       :op2 (c47-2 / amr-unknown))
