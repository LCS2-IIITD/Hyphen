# ::snt Good for and Please let her know that the majority of Americans dont care who she is dating either
# ::tokens ["Good", "for", "and", "Please", "let", "her", "know", "that", "the", "majority", "of", "Americans", "do", "nt", "care", "who", "she", "is", "dating", "either"]
# ::lemmas ["good", "for", "and", "please", "let", "she", "know", "that", "the", "majority", "of", "Americans", "do", "not", "care", "who", "she", "be", "date", "either"]
(c3-10 / and
       :op1 (c3-11 / good-02)
       :op2 (c3-6 / let-know-07
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-3 / she)
                  :ARG2 (c3-8 / care-01
                              :ARG0 (c3-1 / majority
                                          :ARG3-of (c3-9 / include-91
                                                         :ARG2 (c3-7 / person
                                                                     :mod (c3-13 / country
                                                                                 :name (c3-2 / name
                                                                                             :op1 "America")))))
                              :ARG1 (c3-4 / person
                                          :ARG1-of (c3-12 / date-02
                                                          :ARG0 c3-3))
                              :mod (c3-5 / either)
                              :polarity -)
                  :polite +
                  :mode imperative))

# ::snt years?! Whoa. Okay.
# ::tokens ["years", "?", "!", "Whoa", ".", "Okay", "."]
# ::lemmas ["year", "?", "!", "whoa", ".", "okay", "."]
(c4-2 / multi-sentence
      :snt1 (c4-4 / whoa
                  :duration (c4-3 / multiple
                                  :op1 (c4-5 / temporal-quantity
                                             :unit (c4-1 / year)
                                             :quant 1))
                  :mode expressive)
      :snt2 (c4-0 / okay-01))

# ::snt Holland is a jewel anyone would be happy to have her....
# ::tokens ["Holland", "is", "a", "jewel", "anyone", "would", "be", "happy", "to", "have", "her", "...."]
# ::lemmas ["Holland", "be", "a", "jewel", "anyone", "would", "be", "happy", "to", "have", "she", "...."]
(c5-4 / jewel
      :domain (c5-2 / person
                    :name (c5-0 / name
                                :op1 "Holland"))
      :ARG2-of (c5-1 / happy-01
                     :ARG0 (c5-3 / have-03
                                 :ARG0 (c5-5 / anyone)
                                 :ARG1 c5-2)))

# ::snt Good for her....she is hot
# ::tokens ["Good", "for", "her", "....", "she", "is", "hot"]
# ::lemmas ["good", "for", "she", "....", "she", "be", "hot"]
(c6-1 / multi-sentence
      :snt1 (c6-4 / good-04
                  :ARG2 (c6-2 / she))
      :snt2 (c6-3 / hot-03
                  :ARG1 (c6-0 / she)))

# ::snt VOTEVOTEVOTE NOW, , play the Celebrity Slot Machine and WIN BIG!!! also in Appstores: Celebrity4President
# ::tokens ["VOTEVOTEVOTE", "NOW", ",", ",", "play", "the", "Celebrity", "Slot", "Machine", "and", "WIN", "BIG", "!", "!", "!", "also", "in", "Appstores", ":", "Celebrity4President"]
# ::lemmas ["VOTEVOTEVOTE", "now", ",", ",", "play", "the", "Celebrity", "Slot", "Machine", "and", "WIN", "BIG", "!", "!", "!", "also", "in", "Appstores", ":", "celebrity4president"]
(c7-13 / and
       :op1 (c7-6 / vote-01
                  :ARG0 (c7-1 / you)
                  :time (c7-2 / now)
                  :mode imperative)
       :op2 (c7-8 / play-01
                  :ARG0 c7-1
                  :ARG1 (c7-14 / game
                               :name (c7-7 / name
                                           :op1 "Celebrity"
                                           :op2 "Slot"
                                           :op3 "Machine"))
                  :mode imperative)
       :op3 (c7-10 / win-01
                   :ARG0 c7-1
                   :manner (c7-0 / big)
                   :mode imperative)
       :location (c7-4 / store
                       :name (c7-9 / name
                                   :op1 "Appstore")
                       :mod (c7-12 / also))
       :ARG1-of (c7-3 / mean-01
                      :ARG2 (c7-5 / product
                                  :name (c7-11 / name
                                               :op1 "Celebrity4President"))))

# ::snt Slow day?
# ::tokens ["Slow", "day", "?"]
# ::lemmas ["slow", "day", "?"]
(c8-1 / day
      :polarity (c8-2 / amr-unknown)
      :ARG1-of (c8-0 / slow-05))

# ::snt As long as no one's underaged, it's fine
# ::tokens ["As", "long", "as", "no", "one", "'s", "underaged", ",", "it", "'s", "fine"]
# ::lemmas ["as", "long", "as", "no", "one", "'s", "underaged", ",", "it", "be", "fine"]
(c9-0 / fine-04
      :ARG1 (c9-2 / it)
      :condition (c9-3 / as-long-as
                       :op1 (c9-4 / underage-01
                                  :ARG1 (c9-1 / no-one))))

# ::snt Hey ... as long as both are over ,who cares?
# ::tokens ["Hey", "...", "as", "long", "as", "both", "are", "over", ",", "who", "cares", "?"]
# ::lemmas ["hey", "...", "as", "long", "as", "both", "be", "over", ",", "who", "care", "?"]
(c10-3 / care-01
       :ARG0 (c10-5 / amr-unknown)
       :condition (c10-4 / as-long-as
                         :op1 (c10-0 / over-01
                                     :ARG1 (c10-1 / both)))
       :mod (c10-2 / hey
                   :mode expressive))

# ::snt Thank you!! Please never change!
# ::tokens ["Thank", "you", "!", "!", "Please", "never", "change", "!"]
# ::lemmas ["thank", "you", "!", "!", "please", "never", "change", "!"]
(c11-1 / multi-sentence
       :snt1 (c11-5 / thank-01
                    :ARG0 (c11-4 / i)
                    :ARG1 (c11-0 / you)
                    :mode expressive)
       :snt2 (c11-3 / change-01
                    :ARG0 c11-0
                    :time (c11-2 / ever)
                    :mode imperative
                    :polite +))

# ::snt Come on with this ...Who cares no one says anything about some disgusting old man with a year old women
# ::tokens ["Come", "on", "with", "this", "...", "Who", "cares", "no", "one", "says", "anything", "about", "some", "disgusting", "old", "man", "with", "a", "year", "old", "women"]
# ::lemmas ["come", "on", "with", "this", "...", "who", "care", "no", "one", "say", "anything", "about", "some", "disgusting", "old", "man", "with", "a", "year", "old", "woman"]
(c12-3 / multi-sentence
       :snt1 (c12-9 / come-on-25
                    :ARG1 (c12-11 / this)
                    :mode imperative)
       :snt2 (c12-15 / care-01
                     :ARG0 (c12-13 / amr-unknown))
       :snt3 (c12-5 / say-01
                    :ARG0 (c12-4 / no-one)
                    :ARG1 (c12-12 / anything)
                    :ARG3 (c12-6 / man
                                 :mod (c12-0 / old)
                                 :ARG0-of (c12-14 / disgust-01)
                                 :ARG1-of (c12-7 / have-03
                                                 :ARG0 (c12-10 / woman
                                                               :age (c12-8 / temporal-quantity
                                                                           :unit (c12-2 / year)
                                                                           :quant 1)))
                                 :mod (c12-1 / some))))

# ::snt ... no judgement here. YOU DO YOU! Age doesnt define love, respect, gratitude and honor define true love. Im happy for you. Let the haters and the players say what they will...Stay happy! You deserve it
# ::tokens ["...", "no", "judgement", "here", ".", "YOU", "DO", "YOU", "!", "Age", "does", "nt", "define", "love", ",", "respect", ",", "gratitude", "and", "honor", "define", "true", "love", ".", "I", "m", "happy", "for", "you", ".", "Let", "the", "haters", "and", "the", "players", "say", "what", "they", "will", "...", "Stay", "happy", "!", "You", "deserve", "it"]
# ::lemmas ["...", "no", "judgement", "here", ".", "you", "do", "you", "!", "Age", "do", "not", "define", "love", ",", "respect", ",", "gratitude", "and", "honor", "define", "true", "love", ".", "i", "m", "happy", "for", "you", ".", "let", "the", "hater", "and", "the", "player", "say", "what", "they", "will", "...", "stay", "happy", "!", "you", "deserve", "it"]
(c13-19 / multi-sentence
        :snt1 (c13-12 / judge-01
                      :ARG1 (c13-5 / you)
                      :location (c13-8 / here)
                      :polarity -)
        :snt2 (c13-32 / do-02
                      :ARG0 (c13-16 / you
                                    :ARG1-of c13-32))
        :snt3 (c13-22 / define-01
                      :ARG0 (c13-14 / age)
                      :ARG1 (c13-1 / love-01)
                      :ARG2 (c13-21 / define-01
                                    :ARG0 (c13-13 / and
                                                  :op1 (c13-27 / respect-01)
                                                  :op2 (c13-15 / gratitude)
                                                  :op3 (c13-30 / honor-01))
                                    :ARG1 (c13-17 / love-01
                                                  :ARG1-of (c13-18 / true-01)))
                      :polarity -)
        :snt4 (c13-7 / happy-01
                     :ARG1 (c13-31 / i)
                     :ARG2 (c13-3 / you))
        :snt5 (c13-9 / let-01
                     :ARG0 (c13-26 / you)
                     :ARG1 (c13-0 / say-01
                                  :ARG0 (c13-11 / and
                                                :op1 (c13-29 / person
                                                             :ARG0-of (c13-25 / hate-01))
                                                :op2 (c13-20 / person
                                                             :ARG0-of (c13-2 / play-01)))
                                  :ARG1 (c13-23 / thing
                                                :ARG1-of (c13-28 / do-02
                                                                 :ARG0 c13-26)))
                     :mode imperative)
        :snt6 (c13-4 / stay-01
                     :ARG1 c13-26
                     :ARG3 (c13-10 / happy-01
                                   :ARG1 c13-26)
                     :mode imperative)
        :snt7 (c13-24 / deserve-01
                      :ARG0 c13-26
                      :ARG1 (c13-6 / it)))

# ::snt If it were a hetro relationship she would be a gold digger
# ::tokens ["If", "it", "were", "a", "hetro", "relationship", "she", "would", "be", "a", "gold", "digger"]
# ::lemmas ["if", "it", "be", "a", "hetro", "relationship", "she", "would", "be", "a", "gold", "digger"]
(c14-3 / person
       :ARG0-of (c14-5 / dig-01
                       :ARG1 (c14-4 / gold))
       :domain (c14-0 / she)
       :condition (c14-1 / relation-03
                         :ARG0 (c14-2 / hetro)))

# ::snt Who cares. Its her life.
# ::tokens ["Who", "cares", ".", "Its", "her", "life", "."]
# ::lemmas ["who", "care", ".", "its", "her", "life", "."]
(c15-0 / multi-sentence
       :snt1 (c15-3 / care-01
                    :ARG0 (c15-5 / amr-unknown))
       :snt2 (c15-2 / life
                    :poss (c15-1 / she)
                    :domain (c15-4 / it)))

# ::snt People need to stop worrying about other people. Let them be.
# ::tokens ["People", "need", "to", "stop", "worrying", "about", "other", "people", ".", "Let", "them", "be", "."]
# ::lemmas ["people", "need", "to", "stop", "worry", "about", "other", "people", ".", "let", "they", "be", "."]
(c16-3 / multi-sentence
       :snt1 (c16-2 / need-01
                    :ARG0 (c16-6 / person)
                    :ARG1 (c16-4 / stop-01
                                 :ARG0 c16-6
                                 :ARG1 (c16-8 / worry-01
                                              :ARG0 c16-6
                                              :ARG1 (c16-5 / person
                                                           :mod (c16-0 / other)))))
       :snt2 (c16-7 / let-01
                    :ARG0 (c16-1 / you)
                    :ARG1 (c16-9 / they)
                    :mode imperative))

# ::snt Yep
# ::tokens ["Yep"]
# ::lemmas ["yep"]
(c17-0 / yep)

# ::snt What if the older one was a man..... wouldnt people be a saying its disgusting on his part....?
# ::tokens ["What", "if", "the", "older", "one", "was", "a", "man", ".....", "would", "nt", "people", "be", "a", "saying", "its", "disgusting", "on", "his", "part", "....", "?"]
# ::lemmas ["what", "if", "the", "old", "one", "be", "a", "man", ".....", "would", "not", "people", "be", "a", "say", "its", "disgusting", "on", "his", "part", "....", "?"]
(c18-2 / multi-sentence
       :snt1 (c18-5 / have-condition-91
                    :ARG1 (c18-8 / amr-unknown)
                    :ARG2 (c18-4 / man
                                 :domain (c18-0 / one
                                                :ARG1-of (c18-7 / have-degree-91
                                                                :ARG2 (c18-1 / old)
                                                                :ARG3 (c18-10 / more)))))
       :snt2 (c18-3 / say-01
                    :ARG0 (c18-6 / person)
                    :ARG1 (c18-9 / disgust-01
                                 :ARG0 c18-4)
                    :polarity c18-8))

# ::snt Age is just a number not who you Are or who u luv.
# ::tokens ["Age", "is", "just", "a", "number", "not", "who", "you", "Are", "or", "who", "u", "luv", "."]
# ::lemmas ["Age", "be", "just", "a", "number", "not", "who", "you", "be", "or", "who", "u", "luv", "."]
(c19-2 / number
       :domain (c19-7 / age)
       :mod (c19-5 / just)
       :ARG1-of (c19-6 / instead-of-91
                       :ARG2 (c19-0 / or
                                    :op1 (c19-8 / thing
                                                :domain (c19-1 / you))
                                    :op2 (c19-3 / person
                                                :ARG1-of (c19-4 / love-01
                                                                :ARG0 c19-1)))))

# ::snt Arf barf
# ::tokens ["Arf", "barf"]
# ::lemmas ["arf", "barf"]
(c20-1 / person
       :name (c20-0 / name
                    :op1 "Arf"
                    :op2 "Barf"))

# ::snt It is about the connection you have; however, the older of the two HAS TO understand what comes with the large gap, then adjust accordingly
# ::tokens ["It", "is", "about", "the", "connection", "you", "have", ";", "however", ",", "the", "older", "of", "the", "two", "HAS", "TO", "understand", "what", "comes", "with", "the", "large", "gap", ",", "then", "adjust", "accordingly"]
# ::lemmas ["it", "be", "about", "the", "connection", "you", "have", ";", "however", ",", "the", "old", "of", "the", "two", "have", "to", "understand", "what", "come", "with", "the", "large", "gap", ",", "then", "adjust", "accordingly"]
(c21-13 / contrast-01
        :ARG1 (c21-10 / concern-02
                      :ARG0 (c21-18 / it)
                      :ARG1 (c21-1 / connect-01
                                   :ARG1 (c21-3 / you)))
        :ARG2 (c21-2 / obligate-01
                     :ARG1 (c21-17 / person
                                   :ARG1-of (c21-4 / include-91
                                                   :ARG2 (c21-8 / two))
                                   :ARG1-of (c21-5 / have-degree-91
                                                   :ARG2 (c21-11 / old)
                                                   :ARG3 (c21-12 / more)))
                     :ARG2 (c21-15 / understand-01
                                   :ARG0 c21-17
                                   :ARG1 (c21-14 / thing
                                                 :ARG1-of (c21-16 / come-03
                                                                  :ARG2 (c21-9 / gap
                                                                               :mod (c21-0 / large)))))
                     :condition-of (c21-7 / adjust-01
                                          :ARG0 c21-17
                                          :manner (c21-6 / accordingly))))

# ::snt If you're happy band it make you happy be happy
# ::tokens ["If", "you", "'re", "happy", "band", "it", "make", "you", "happy", "be", "happy"]
# ::lemmas ["if", "you", "be", "happy", "band", "it", "make", "you", "happy", "be", "happy"]
(c22-2 / happy-01
       :ARG1 (c22-3 / you)
       :condition (c22-0 / happy-01
                         :ARG0 (c22-1 / band-01
                                      :ARG1 c22-3)
                         :ARG1 c22-3))

# ::snt You go Sarah
# ::tokens ["You", "go", "Sarah"]
# ::lemmas ["you", "go", "Sarah"]
(c23-1 / say-01
       :ARG0 (c23-3 / i)
       :ARG1 (c23-4 / go-02
                    :ARG0 (c23-2 / person
                                 :name (c23-0 / name
                                              :op1 "Sarah")
                                 :ARG2-of c23-1)
                    :mode imperative))

# ::snt If she is happy good for her !!
# ::tokens ["If", "she", "is", "happy", "good", "for", "her", "!", "!"]
# ::lemmas ["if", "she", "be", "happy", "good", "for", "she", "!", "!"]
(c24-0 / good-02
       :ARG2 (c24-2 / she)
       :condition (c24-1 / happy-01
                         :ARG1 c24-2))

# ::snt Uhh. Yeah. Thats what I did. Otherwise, I wouldnt know that my assumptions were incorrect. That was sort of the whole point.
# ::tokens ["Uhh", ".", "Yeah", ".", "That", "s", "what", "I", "did", ".", "Otherwise", ",", "I", "would", "nt", "know", "that", "my", "assumptions", "were", "incorrect", ".", "That", "was", "sort", "of", "the", "whole", "point", "."]
# ::lemmas ["Uhh", ".", "yeah", ".", "that", "s", "what", "i", "do", ".", "otherwise", ",", "i", "would", "not", "know", "that", "my", "assumption", "be", "incorrect", ".", "that", "be", "sort", "of", "the", "whole", "point", "."]
(c25-0 / multi-sentence
       :snt1 (c25-12 / uhh
                     :mode expressive)
       :snt2 (c25-11 / do-02
                     :ARG0 (c25-9 / i)
                     :ARG1 (c25-10 / that))
       :snt3 (c25-5 / know-01
                    :ARG0 (c25-2 / i)
                    :ARG1 (c25-7 / correct-02
                                 :ARG1 (c25-3 / assume-02
                                              :ARG0 c25-2)
                                 :polarity -)
                    :condition (c25-4 / have-polarity-91
                                      :ARG2 -)
                    :polarity -)
       :snt4 (c25-6 / point-03
                    :ARG1 (c25-13 / that)
                    :mod (c25-8 / whole)
                    :degree (c25-1 / sort-of)))

# ::snt Wait what Holland is a chick, what is going on
# ::tokens ["Wait", "what", "Holland", "is", "a", "chick", ",", "what", "is", "going", "on"]
# ::lemmas ["wait", "what", "Holland", "be", "a", "chick", ",", "what", "be", "go", "on"]
(c26-5 / and
       :op1 (c26-2 / wait-01
                   :ARG1 (c26-0 / you)
                   :ARG2 (c26-3 / chick
                                :domain (c26-7 / country
                                               :name (c26-1 / name
                                                            :op1 "Holland")))
                   :mode imperative)
       :op2 (c26-6 / go-on-15
                   :ARG1 (c26-4 / amr-unknown)))

# ::snt It says about you that you should read the entire story, just not a click bait headline.
# ::tokens ["It", "says", "about", "you", "that", "you", "should", "read", "the", "entire", "story", ",", "just", "not", "a", "click", "bait", "headline", "."]
# ::lemmas ["it", "say", "about", "you", "that", "you", "should", "read", "the", "entire", "story", ",", "just", "not", "a", "click", "bait", "headline", "."]
(c27-2 / say-01
       :ARG0 (c27-8 / it)
       :ARG1 (c27-6 / contrast-01
                    :ARG1 (c27-3 / recommend-01
                                 :ARG1 (c27-9 / read-01
                                              :ARG0 (c27-1 / you)
                                              :ARG1 (c27-0 / story
                                                           :mod (c27-4 / entire)))
                                 :ARG2 c27-1)
                    :ARG2 (c27-5 / headline
                                 :mod (c27-10 / click)
                                 :mod (c27-7 / just)
                                 :polarity -))
       :ARG3 c27-1)

# ::snt Dont know what this says about me:But without knowing anything about the relationship-and just reading headline, I assumed was the older person in the relationship(which then made me think she was a , )&amp; was a man.Didnt see that comin.
# ::tokens ["Do", "nt", "know", "what", "this", "says", "about", "me", ":", "But", "without", "knowing", "anything", "about", "the", "relationship", "-", "and", "just", "reading", "headline", ",", "I", "assumed", "was", "the", "older", "person", "in", "the", "relationship(which", "then", "made", "me", "think", "she", "was", "a", ",", ")", "&", "amp", ";", "was", "a", "man", ".", "Didnt", "see", "that", "comin", "."]
# ::lemmas ["do", "not", "know", "what", "this", "say", "about", "i", ":", "but", "without", "know", "anything", "about", "the", "relationship", "-", "and", "just", "read", "headline", ",", "i", "assume", "be", "the", "old", "person", "in", "the", "relationship(which", "then", "make", "i", "think", "she", "be", "a", ",", ")", "&", "amp", ";", "be", "a", "man", ".", "Didnt", "see", "that", "comin", "."]
(c28-15 / multi-sentence
        :snt1 (c28-7 / know-01
                     :ARG0 (c28-23 / i)
                     :ARG1 (c28-11 / thing
                                   :ARG1-of (c28-0 / say-01
                                                   :ARG0 (c28-18 / this)
                                                   :ARG3 c28-23))
                     :polarity -)
        :snt2 (c28-17 / contrast-01
                      :ARG2 (c28-10 / assume-02
                                    :ARG0 (c28-5 / i)
                                    :ARG1 (c28-6 / have-degree-91
                                                 :ARG1 (c28-21 / person
                                                               :part-of (c28-20 / relation-03))
                                                 :ARG2 (c28-3 / old)
                                                 :ARG3 (c28-8 / more)
                                                 :ARG4 c28-5)
                                    :ARG0-of (c28-19 / make-02
                                                     :ARG1 (c28-24 / think-01
                                                                   :ARG0 c28-5
                                                                   :ARG1 (c28-16 / man
                                                                                 :domain c28-21))
                                                     :time (c28-1 / then)))
                      :manner (c28-2 / read-01
                                     :ARG0 c28-5
                                     :ARG1 (c28-22 / headline)
                                     :mod (c28-9 / just)))
        :snt3 (c28-4 / see-01
                     :ARG0 (c28-13 / i)
                     :ARG1 (c28-14 / come-in-07
                                   :ARG1 (c28-12 / that))
                     :polarity -))

# ::snt Love who you love. Age, sex, race aside. We are progressing.
# ::tokens ["Love", "who", "you", "love", ".", "Age", ",", "sex", ",", "race", "aside", ".", "We", "are", "progressing", "."]
# ::lemmas ["Love", "who", "you", "love", ".", "Age", ",", "sex", ",", "race", "aside", ".", "we", "be", "progress", "."]
(c29-1 / multi-sentence
       :snt1 (c29-7 / love-01
                    :ARG0 (c29-0 / you)
                    :ARG1 (c29-6 / person
                                 :ARG1-of (c29-11 / love-01
                                                  :ARG0 c29-0))
                    :mode imperative)
       :snt2 (c29-5 / except-01
                    :ARG1 (c29-10 / and
                                  :op1 (c29-9 / age-01)
                                  :op2 (c29-3 / sex-01)
                                  :op3 (c29-4 / race))
                    :ARG2 (c29-2 / progress-01
                                 :ARG1 (c29-8 / we))))

# ::snt It is strange. She even knows its strange. Now should there be hate thrown at her? No. Why? Because its a strange relationship? Lots of people are in strange relationships. Dont be a dink your whole life.
# ::tokens ["It", "is", "strange", ".", "She", "even", "knows", "its", "strange", ".", "Now", "should", "there", "be", "hate", "thrown", "at", "her", "?", "No", ".", "Why", "?", "Because", "its", "a", "strange", "relationship", "?", "Lots", "of", "people", "are", "in", "strange", "relationships", ".", "Do", "nt", "be", "a", "dink", "your", "whole", "life", "."]
# ::lemmas ["it", "be", "strange", ".", "she", "even", "know", "its", "strange", ".", "now", "should", "there", "be", "hate", "throw", "at", "she", "?", "no", ".", "why", "?", "because", "its", "a", "strange", "relationship", "?", "lot", "of", "people", "be", "in", "strange", "relationship", ".", "do", "not", "be", "a", "dink", "your", "whole", "life", "."]
(c30-11 / multi-sentence
        :snt1 (c30-0 / strange
                     :domain (c30-18 / it))
        :snt2 (c30-6 / know-01
                     :ARG0 (c30-3 / she)
                     :ARG1 (c30-2 / strange
                                  :domain (c30-5 / it))
                     :mod (c30-15 / even))
        :snt3 (c30-12 / cause-01
                      :ARG0 (c30-8 / amr-unknown))
        :snt4 (c30-10 / cause-01
                      :ARG0 (c30-7 / amr-unknown))
        :snt5 (c30-14 / relation-03
                      :ARG0 (c30-16 / person
                                    :quant (c30-1 / lot))
                      :ARG1 (c30-13 / strange))
        :snt6 (c30-19 / dink
                      :domain (c30-4 / you)
                      :duration (c30-9 / life
                                       :mod (c30-17 / whole)
                                       :poss c30-4)
                      :mode imperative
                      :polarity -))

# ::snt If youre lucky enough to find love in this world then love with all you have !
# ::tokens ["If", "you", "re", "lucky", "enough", "to", "find", "love", "in", "this", "world", "then", "love", "with", "all", "you", "have", "!"]
# ::lemmas ["if", "you", "re", "lucky", "enough", "to", "find", "love", "in", "this", "world", "then", "love", "with", "all", "you", "have", "!"]
(c31-3 / have-condition-91
       :ARG1 (c31-4 / love-01
                    :accompanier (c31-10 / all
                                         :ARG1-of (c31-8 / have-03
                                                         :ARG0 (c31-1 / you)))
                    :mode expressive)
       :ARG2 (c31-11 / lucky
                     :domain c31-1
                     :ARG2-of (c31-2 / have-degree-91
                                     :ARG1 c31-1
                                     :ARG3 (c31-5 / enough)
                                     :ARG6 (c31-0 / find-01
                                                  :ARG0 c31-1
                                                  :ARG1 (c31-6 / love-01)
                                                  :location (c31-7 / world
                                                                   :mod (c31-9 / this))))))

# ::snt Love is love
# ::tokens ["Love", "is", "love"]
# ::lemmas ["Love", "be", "love"]
(c33-1 / love-01
       :domain (c33-0 / love-01))

# ::snt ??? My husband is definitely in daycare.... fuuuuuuuck one of the kids Im teaching might be one
# ::tokens ["?", "?", "?", "My", "husband", "is", "definitely", "in", "daycare", "....", "fuuuuuuuck", "one", "of", "the", "kids", "I", "m", "teaching", "might", "be", "one"]
# ::lemmas ["?", "?", "?", "my", "husband", "be", "definitely", "in", "daycare", "....", "fuuuuuuuck", "one", "of", "the", "kid", "i", "m", "teach", "might", "be", "one"]
(c34-2 / multi-sentence
       :snt1 (c34-1 / be-located-at-91
                    :ARG1 (c34-6 / person
                                 :ARG0-of (c34-5 / have-rel-role-91
                                                 :ARG1 (c34-11 / i)
                                                 :ARG2 (c34-10 / husband)))
                    :ARG2 (c34-13 / daycare)
                    :mod (c34-9 / definite))
       :snt2 (c34-3 / possible-01
                    :ARG1 (c34-4 / include-91
                                 :ARG1 (c34-7 / kid
                                              :ARG1-of c34-4
                                              :ARG2 (c34-8 / kid
                                                           :ARG1-of (c34-12 / teach-01
                                                                            :ARG0 c34-11))
                                              :quant 1))
                    :ARG2 (c34-14 / kid))
       :mod (c34-0 / fuck
                   :mode expressive))

# ::snt Very beautiful
# ::tokens ["Very", "beautiful"]
# ::lemmas ["very", "beautiful"]
(c35-1 / beautiful-02
       :degree (c35-0 / very))

# ::snt They're both bad ass women let them be
# ::tokens ["They", "'re", "both", "bad", "ass", "women", "let", "them", "be"]
# ::lemmas ["they", "be", "both", "bad", "ass", "woman", "let", "they", "be"]
(c37-3 / woman
       :domain (c37-4 / they
                      :mod (c37-0 / both))
       :mod (c37-5 / ass
                   :ARG1-of (c37-1 / bad-ass-03))
       :ARG0-of (c37-2 / let-01
                       :ARG1 c37-4))

# ::snt Because people don't know how to mind their own business.
# ::tokens ["Because", "people", "do", "n't", "know", "how", "to", "mind", "their", "own", "business", "."]
# ::lemmas ["because", "people", "do", "not", "know", "how", "to", "mind", "their", "own", "business", "."]
(c38-4 / cause-01
       :ARG0 (c38-2 / know-01
                    :ARG0 (c38-3 / person)
                    :ARG1 (c38-1 / mind-02
                                 :ARG0 c38-3
                                 :ARG1 (c38-0 / business
                                              :poss c38-3))
                    :polarity -))

# ::snt What ever makes You Happy, Go for it because tomorrow isnt guarantee
# ::tokens ["What", "ever", "makes", "You", "Happy", ",", "Go", "for", "it", "because", "tomorrow", "is", "nt", "guarantee"]
# ::lemmas ["what", "ever", "make", "You", "Happy", ",", "go", "for", "it", "because", "tomorrow", "be", "not", "guarantee"]
(c39-4 / have-condition-91
       :ARG1 (c39-10 / go-03
                     :ARG0 (c39-0 / you)
                     :ARG1 (c39-8 / it)
                     :ARG1-of (c39-5 / cause-01
                                     :ARG0 (c39-9 / guarantee-01
                                                  :ARG1 (c39-7 / tomorrow)
                                                  :polarity -))
                     :mode imperative)
       :ARG2 (c39-1 / make-02
                    :ARG0 (c39-2 / amr-unknown)
                    :ARG1 (c39-6 / happy-01
                                 :ARG1 c39-0)
                    :mod (c39-3 / ever)))

# ::snt Why are people tripping over this relationship as if you have to Pay taxes to them wtf
# ::tokens ["Why", "are", "people", "tripping", "over", "this", "relationship", "as", "if", "you", "have", "to", "Pay", "taxes", "to", "them", "wtf"]
# ::lemmas ["why", "be", "people", "trip", "over", "this", "relationship", "as", "if", "you", "have", "to", "pay", "taxis", "to", "they", "wtf"]
(c40-8 / tripe-01
       :ARG0 (c40-6 / person)
       :ARG1 (c40-4 / relation-03
                    :mod (c40-10 / this))
       :manner (c40-0 / obligate-01
                      :ARG1 (c40-2 / you)
                      :ARG2 (c40-3 / pay-01
                                   :ARG0 c40-2
                                   :ARG1 (c40-9 / tax-01)
                                   :ARG2 c40-6))
       :ARG1-of (c40-7 / cause-01
                       :ARG0 (c40-5 / amr-unknown))
       :mod (c40-1 / fuck
                   :mode expressive))

# ::snt haters gonna hate.
# ::tokens ["haters", "gon", "na", "hate", "."]
# ::lemmas ["hater", "going", "to", "hate", "."]
(c41-0 / hate-01
       :ARG0 (c41-1 / person
                    :ARG0-of c41-0))

# ::snt i could care less
# ::tokens ["i", "could", "care", "less"]
# ::lemmas ["i", "could", "care", "less"]
(c42-2 / possible-01
       :ARG1 (c42-0 / have-quant-91
                    :ARG1 (c42-3 / care-01
                                 :ARG0 (c42-4 / i))
                    :ARG3 (c42-1 / less)))

# ::snt If she enjoys dusty pussy, that's her damn business.
# ::tokens ["If", "she", "enjoys", "dusty", "pussy", ",", "that", "'s", "her", "damn", "business", "."]
# ::lemmas ["if", "she", "enjoy", "dusty", "pussy", ",", "that", "be", "her", "damn", "business", "."]
(c43-0 / business
       :ARG1-of (c43-5 / damn-01
                       :ARG0 (c43-1 / she))
       :domain (c43-2 / enjoy-01
                      :ARG0 c43-1
                      :ARG1 (c43-3 / pussy
                                   :mod (c43-4 / dusty))))

# ::snt Do you, boo!
# ::tokens ["Do", "you", ",", "boo", "!"]
# ::lemmas ["do", "you", ",", "boo", "!"]
(c44-0 / boo-01
       :ARG0 (c44-2 / i)
       :ARG1 (c44-1 / you)
       :mode expressive)

# ::snt Its her life. Not ours
# ::tokens ["Its", "her", "life", ".", "Not", "ours"]
# ::lemmas ["its", "her", "life", ".", "not", "ours"]
(c45-0 / multi-sentence
       :snt1 (c45-2 / life
                    :poss (c45-1 / she)
                    :domain (c45-4 / it))
       :snt2 (c45-5 / life
                    :poss (c45-3 / we)
                    :domain c45-4
                    :polarity -))

# ::snt good for her, none of our damn business.
# ::tokens ["good", "for", "her", ",", "none", "of", "our", "damn", "business", "."]
# ::lemmas ["good", "for", "she", ",", "none", "of", "our", "damn", "business", "."]
(c46-4 / and
       :op1 (c46-5 / good-02
                   :ARG2 (c46-1 / she))
       :op2 (c46-2 / concern-02
                   :ARG0 (c46-3 / we)
                   :ARG1 (c46-0 / none
                                :ARG1-of (c46-6 / damn-01))
                   :polarity -))
