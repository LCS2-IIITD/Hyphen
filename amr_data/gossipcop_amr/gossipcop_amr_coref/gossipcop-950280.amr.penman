# ::snt great Netflix doc. He was a very handsome and cool guy. Damn.
# ::tokens ["great", "Netflix", "doc", ".", "He", "was", "a", "very", "handsome", "and", "cool", "guy", ".", "Damn", "."]
# ::lemmas ["great", "Netflix", "doc", ".", "he", "be", "a", "very", "handsome", "and", "cool", "guy", ".", "Damn", "."]
(c2-1 / multi-sentence
      :snt1 (c2-9 / documentary
                  :medium (c2-4 / company
                                :name (c2-0 / name
                                            :op1 "Netflix"))
                  :mod (c2-8 / great))
      :snt2 (c2-7 / guy
                  :domain (c2-3 / he)
                  :ARG1-of (c2-6 / handsome-02
                                 :degree (c2-2 / very))
                  :ARG1-of (c2-10 / cool-04))
      :snt3 (c2-5 / damn-01))

# ::snt Rest in peace...
# ::tokens ["Rest", "in", "peace", "..."]
# ::lemmas ["rest", "in", "peace", "..."]
(c3-0 / rest-01
      :manner (c3-1 / peace))

# ::snt R.I.P.
# ::tokens ["R.I.P."]
# ::lemmas ["R.I.P."]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "R.I.P."))

# ::snt When STARS were STARS! May he Tab Hunter RIP. Damned Yankees was both a wonderful Musical &amp; Motion Picture.
# ::tokens ["When", "STARS", "were", "STARS", "!", "May", "he", "Tab", "Hunter", "RIP", ".", "Damned", "Yankees", "was", "both", "a", "wonderful", "Musical", "&", "amp", ";", "Motion", "Picture", "."]
# ::lemmas ["when", "star", "be", "star", "!", "may", "he", "Tab", "Hunter", "RIP", ".", "Damned", "Yankees", "be", "both", "a", "wonderful", "Musical", "&", "amp", ";", "Motion", "Picture", "."]
(c5-7 / multi-sentence
      :snt1 (c5-6 / be-temporally-at-91
                  :ARG2 (c5-0 / star-01
                              :ARG1 (c5-1 / broadcast-program
                                          :name (c5-14 / name
                                                       :op1 "Star"))))
      :snt2 (c5-18 / wish-01
                   :ARG1 (c5-15 / rest-01
                                :ARG1 (c5-16 / person
                                             :name (c5-9 / name
                                                         :op1 "Tab"
                                                         :op2 "Hunting"))
                                :manner c5-15))
      :ARG2 c5-16
      :name (c5-17 / name
                   :op1 "Tab"
                   :op2 "Haiti")
      :ARG1-of (c5-10 / cause-01
                      :ARG0 (c5-8 / pass-20
                                  :ARG1 c5-16))
      :snt3 (c5-5 / and
                  :op1 (c5-4 / musical)
                  :op2 (c5-13 / film
                              :mod (c5-12 / motion))
                  :domain (c5-3 / product
                                :name (c5-11 / name
                                             :op1 "Damned"
                                             :op2 "Yankees"))
                  :ARG1-of (c5-2 / wonderful-03)))

# ::snt Gay? Who writes that? Is that a new thing? I now expect to see "straight" for all other obits. Smh
# ::tokens ["Gay", "?", "Who", "writes", "that", "?", "Is", "that", "a", "new", "thing", "?", "I", "now", "expect", "to", "see", "\"", "straight", "\"", "for", "all", "other", "obits", ".", "Smh"]
# ::lemmas ["Gay", "?", "who", "write", "that", "?", "be", "that", "a", "new", "thing", "?", "i", "now", "expect", "to", "see", "\"", "straight", "\"", "for", "all", "other", "obit", ".", "smh"]
(c6-10 / multi-sentence
       :snt1 (c6-8 / gay-01
                   :polarity (c6-7 / amr-unknown))
       :snt2 (c6-15 / write-01
                    :ARG0 (c6-5 / amr-unknown)
                    :ARG1 (c6-6 / that))
       :snt3 (c6-12 / thing
                    :polarity (c6-4 / amr-unknown)
                    :ARG1-of (c6-13 / new-01)
                    :domain (c6-16 / that))
       :snt4 (c6-14 / expect-01
                    :ARG0 (c6-17 / i)
                    :ARG1 (c6-0 / see-01
                                :ARG0 c6-17
                                :ARG1 (c6-2 / straight-04
                                            :ARG1 (c6-3 / obit
                                                        :mod (c6-18 / all)
                                                        :mod (c6-9 / other))))
                    :time (c6-11 / now))
       :snt5 (c6-1 / sigh-02
                   :mode expressive))

# ::snt who cares if he is gay, cut the crap w/divisive language
# ::tokens ["who", "cares", "if", "he", "is", "gay", ",", "cut", "the", "crap", "w", "/", "divisive", "language"]
# ::lemmas ["who", "care", "if", "he", "be", "gay", ",", "cut", "the", "crap", "w", "/", "divisive", "language"]
(c8-6 / and
      :op1 (c8-3 / care-01
                 :ARG0 (c8-5 / amr-unknown)
                 :ARG1 (c8-7 / gay-01
                             :ARG1 (c8-1 / he)))
      :op2 (c8-9 / cut-03
                 :ARG0 (c8-0 / you)
                 :ARG1 (c8-4 / crap)
                 :manner (c8-2 / language
                               :mod (c8-8 / isive))
                 :mode imperative))

# ::snt R.I.P
# ::tokens ["R.I.P"]
# ::lemmas ["R.I.P"]
(c9-1 / person
      :name (c9-0 / name
                  :op1 "R.I.P."))
