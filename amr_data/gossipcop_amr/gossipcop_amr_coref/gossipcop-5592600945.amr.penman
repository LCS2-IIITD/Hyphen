# ::snt I need that power couple in my life
# ::tokens ["I", "need", "that", "power", "couple", "in", "my", "life"]
# ::lemmas ["i", "need", "that", "power", "couple", "in", "my", "life"]
(c1-0 / need-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-3 / couple
                  :mod (c1-1 / power)
                  :mod (c1-5 / that))
      :location (c1-2 / life
                      :poss c1-4))

# ::snt apparently tom holland accidentally let it out that they are. god i hope they are
# ::tokens ["apparently", "tom", "holland", "accidentally", "let", "it", "out", "that", "they", "are", ".", "god", "i", "hope", "they", "are"]
# ::lemmas ["apparently", "tom", "holland", "accidentally", "let", "it", "out", "that", "they", "be", ".", "god", "i", "hope", "they", "be"]
(c2-2 / multi-sentence
      :snt1 (c2-7 / let-01
                  :ARG0 (c2-6 / person
                              :name (c2-1 / name
                                          :op1 "Tom"
                                          :op2 "Holland"))
                  :ARG1 (c2-0 / out-06
                              :ARG1 (c2-10 / they))
                  :manner (c2-4 / accidental)
                  :ARG1-of (c2-9 / appear-02))
      :snt2 (c2-5 / hope-01
                  :ARG0 (c2-11 / i)
                  :ARG1 (c2-12 / they))
      :snt3 (c2-3 / person
                  :name (c2-8 / name
                              :op1 "God")))

# ::snt Omg are they actually
# ::tokens ["Omg", "are", "they", "actually"]
# ::lemmas ["Omg", "be", "they", "actually"]
(c3-2 / they
      :ARG1-of (c3-0 / actual-02)
      :mod (c3-1 / oh-my-god
                 :mode expressive))

# ::snt A uns dias atrs ela foi vista com aquele cara do SNL, que dizem que o namorado dela, no casamento da cabeleira dela.
# ::tokens ["A", "uns", "dias", "atrs", "ela", "foi", "vista", "com", "aquele", "cara", "do", "SNL", ",", "que", "dizem", "que", "o", "namorado", "dela", ",", "no", "casamento", "da", "cabeleira", "dela", "."]
# ::lemmas ["a", "uns", "dias", "atrs", "ela", "foi", "vista", "com", "aquele", "cara", "do", "SNL", ",", "que", "dizem", "que", "o", "namorado", "dela", ",", "no", "casamento", "da", "cabeleira", "dela", "."]
(c4-2 / multi-sentence
      :snt1 (c4-6 / have-polarity-91
                  :time (c4-14 / atrs)
                  :ARG2 -)
      :snt2 (c4-4 / vista-00
                  :ARG0 (c4-5 / ela)
                  :ARG1 (c4-10 / cara
                               :mod (c4-13 / aquele)
                               :ARG1-of (c4-15 / do-02
                                               :ARG0 (c4-0 / broadcast-program
                                                           :name (c4-3 / name
                                                                       :op1 "SNL")))))
      :snt3 (c4-11 / dizem-01
                   :ARG0 (c4-1 / you)
                   :ARG1 (c4-7 / namorado
                               :mod (c4-8 / dela)))
      :snt4 (c4-16 / casamento
                   :mod (c4-12 / cabeleira
                               :mod (c4-9 / dela))
                   :polarity -))

# ::snt Oh my goodness
# ::tokens ["Oh", "my", "goodness"]
# ::lemmas ["oh", "my", "goodness"]
(c6-0 / goodness
      :poss (c6-1 / i)
      :mode expressive)

# ::snt I hear the theme playing in my head now lol
# ::tokens ["I", "hear", "the", "theme", "playing", "in", "my", "head", "now", "lol"]
# ::lemmas ["i", "hear", "the", "theme", "playing", "in", "my", "head", "now", "lol"]
(c8-1 / hear-01
      :ARG0 (c8-5 / i
                  :part (c8-4 / head))
      :ARG1 (c8-2 / play-11
                  :ARG1 (c8-6 / theme)
                  :location c8-4)
      :time (c8-0 / now)
      :ARG2-of (c8-3 / laugh-01
                     :ARG0 c8-5
                     :manner (c8-7 / loud)
                     :mode expressive))

# ::snt I really am old!
# ::tokens ["I", "really", "am", "old", "!"]
# ::lemmas ["i", "really", "be", "old", "!"]
(c9-0 / old
      :domain (c9-1 / i)
      :ARG1-of (c9-2 / real-04))

# ::snt Dibs on Diane Kruger!
# ::tokens ["Dibs", "on", "Diane", "Kruger", "!"]
# ::lemmas ["Dibs", "on", "Diane", "Kruger", "!"]
(c10-0 / dibs-on
       :name (c10-1 / name
                    :op1 "Diane"
                    :op2 "Kruger"))

# ::snt Jajajja as como as
# ::tokens ["Jajajja", "as", "como", "as"]
# ::lemmas ["Jajajja", "as", "como", "as"]
(c11-2 / person
       :name (c11-0 / name
                    :op1 "Jajajja")
       :ARG1-of (c11-3 / resemble-01
                       :ARG2 (c11-1 / como)))

# ::snt Mais algumas fotos de Emma no festival ontem!
# ::tokens ["Mais", "algumas", "fotos", "de", "Emma", "no", "festival", "ontem", "!"]
# ::lemmas ["Mais", "alguma", "foto", "de", "Emma", "no", "festival", "ontem", "!"]
(c12-0 / foto
       :poss (c12-2 / person
                    :name (c12-1 / name
                                 :op1 "Emma"))
       :mod (c12-3 / festival
                   :polarity -)
       :mod (c12-5 / as-temporally)
       :mod (c12-4 / algum))

# ::snt Se nota por tu para anterior tuit
# ::tokens ["Se", "nota", "por", "tu", "para", "anterior", "tuit"]
# ::lemmas ["Se", "nota", "por", "tu", "para", "anterior", "tuit"]
(c13-1 / say-01
       :ARG0 (c13-5 / i)
       :ARG1 (c13-3 / have-polarity-91
                    :ARG1 (c13-0 / you)
                    :ARG1-of (c13-4 / cause-01
                                    :ARG0 (c13-6 / tuit
                                                 :mod (c13-2 / anterior)))
                    :ARG2 -)
       :ARG2 c13-0)

# ::snt No
# ::tokens ["No"]
# ::lemmas ["no"]
(c14-0 / no)

# ::snt No has visto easy A
# ::tokens ["No", "has", "visto", "easy", "A"]
# ::lemmas ["no", "have", "visto", "easy", "a"]
(c15-0 / easy-05
       :ARG1 (c15-1 / string-entity
                    :value "A")
       :polarity -)

# ::snt Does that mean Emma will come to London filn festival?!
# ::tokens ["Does", "that", "mean", "Emma", "will", "come", "to", "London", "filn", "festival", "?", "!"]
# ::lemmas ["do", "that", "mean", "Emma", "will", "come", "to", "London", "filn", "festival", "?", "!"]
(c16-2 / mean-01
       :ARG1 (c16-7 / that)
       :ARG2 (c16-6 / come-01
                    :ARG1 (c16-5 / person
                                 :name (c16-1 / name
                                              :op1 "Emma"))
                    :ARG4 (c16-0 / festival
                                 :name (c16-4 / name
                                              :op1 "London"
                                              :op2 "Filn"
                                              :op3 "Festival")))
       :polarity (c16-3 / amr-unknown))

# ::snt Not confirmed if Emma will be there
# ::tokens ["Not", "confirmed", "if", "Emma", "will", "be", "there"]
# ::lemmas ["not", "confirm", "if", "Emma", "will", "be", "there"]
(c17-0 / confirm-01
       :ARG1 (c17-3 / truth-value
                    :polarity-of (c17-1 / Emma
                                        :location (c17-2 / there)))
       :polarity -)

# ::snt This is not confirmed?
# ::tokens ["This", "is", "not", "confirmed", "?"]
# ::lemmas ["this", "be", "not", "confirm", "?"]
(c18-0 / confirm-01
       :ARG1 (c18-2 / this)
       :polarity (c18-1 / amr-unknown)
       :polarity -)

# ::snt sorry, my bad! it's because in my country it will be th
# ::tokens ["sorry", ",", "my", "bad", "!", "it", "'s", "because", "in", "my", "country", "it", "will", "be", "th"]
# ::lemmas ["sorry", ",", "my", "bad", "!", "it", "be", "because", "in", "my", "country", "it", "will", "be", "th"]
(c19-1 / multi-sentence
       :snt1 (c19-2 / sorry-01
                    :ARG1 (c19-6 / i)
                    :ARG2 (c19-7 / thing
                                 :ARG1-of (c19-0 / bad-07
                                                 :ARG0 c19-6)))
       :snt2 (c19-5 / cause-01
                    :ARG0 (c19-4 / be-located-at-91
                                 :ARG1 (c19-3 / it)
                                 :ARG2 (c19-9 / country
                                              :poss (c19-8 / i)))
                    :ARG1 c19-3))

# ::snt isn't the premiere at the new york film festival on september ?
# ::tokens ["is", "n't", "the", "premiere", "at", "the", "new", "york", "film", "festival", "on", "september", "?"]
# ::lemmas ["be", "not", "the", "premiere", "at", "the", "new", "york", "film", "festival", "on", "september", "?"]
(c20-3 / premiere-01
       :ARG2 (c20-0 / festival
                    :name (c20-1 / name
                                 :op1 "New"
                                 :op2 "York"
                                 :op3 "Film"
                                 :op4 "Festival"))
       :time (c20-4 / date-entity
                    :month 9)
       :ARG1-of (c20-2 / request-confirmation-91)
       :polarity -)

# ::snt Ona jest taka pikna
# ::tokens ["Ona", "jest", "taka", "pikna"]
# ::lemmas ["Ona", "jest", "taka", "pikna"]
(c21-1 / say-01
       :ARG0 (c21-4 / i)
       :ARG1 (c21-3 / jest)
       :ARG2 (c21-2 / person
                    :name (c21-0 / name
                                 :op1 "Ona"
                                 :op2 "Jest")))

# ::snt Yesss
# ::tokens ["Yesss"]
# ::lemmas ["yesss"]
(c22-0 / yesss)

# ::snt Actually, yes exactly, but keep telling yourself otherwise.
# ::tokens ["Actually", ",", "yes", "exactly", ",", "but", "keep", "telling", "yourself", "otherwise", "."]
# ::lemmas ["actually", ",", "yes", "exactly", ",", "but", "keep", "tell", "yourself", "otherwise", "."]
(c23-4 / contrast-01
       :ARG1 (c23-0 / yes
                    :mod (c23-1 / exact)
                    :ARG1-of (c23-6 / actual-02))
       :ARG2 (c23-3 / keep-02
                    :ARG0 (c23-7 / you)
                    :ARG1 (c23-5 / tell-01
                                 :ARG0 c23-7
                                 :ARG1 (c23-2 / have-polarity-91
                                              :ARG2 -)
                                 :ARG2 c23-7)))

# ::snt He's not talented. Y do people think she went FROM Tom him? He has no career, at all, which means that everything gets controlled by HER, entirely how she likes it. Tom was already known&amp;when she figured out that she couldn't control everything, she moved on to her next victim.
# ::tokens ["He", "'s", "not", "talented", ".", "Y", "do", "people", "think", "she", "went", "FROM", "Tom", "him", "?", "He", "has", "no", "career", ",", "at", "all", ",", "which", "means", "that", "everything", "gets", "controlled", "by", "HER", ",", "entirely", "how", "she", "likes", "it", ".", "Tom", "was", "already", "known&amp;when", "she", "figured", "out", "that", "she", "could", "n't", "control", "everything", ",", "she", "moved", "on", "to", "her", "next", "victim", "."]
# ::lemmas ["he", "be", "not", "talented", ".", "Y", "do", "people", "think", "she", "go", "FROM", "Tom", "he", "?", "he", "have", "no", "career", ",", "at", "all", ",", "which", "mean", "that", "everything", "gets", "control", "by", "she", ",", "entirely", "how", "she", "like", "it", ".", "Tom", "be", "already", "known&amp;when", "she", "figure", "out", "that", "she", "could", "not", "control", "everything", ",", "she", "move", "on", "to", "her", "next", "victim", "."]
(c24-19 / multi-sentence
        :snt1 (c24-15 / talent
                      :domain (c24-9 / he)
                      :polarity -)
        :snt2 (c24-24 / think-01
                      :ARG0 (c24-30 / person)
                      :ARG1 (c24-16 / go-02
                                    :ARG0 (c24-0 / she)
                                    :ARG3 (c24-20 / person
                                                  :name (c24-28 / name
                                                                :op1 "Tom"
                                                                :op2 "He")))
                      :polarity (c24-14 / amr-unknown))
        :snt3 (c24-31 / have-03
                      :ARG0 (c24-8 / he)
                      :ARG1 (c24-23 / career)
                      :degree (c24-13 / at-all)
                      :ARG1-of (c24-10 / mean-01
                                       :ARG2 (c24-18 / control-01
                                                     :ARG0 (c24-6 / she
                                                                  :ARG1 (c24-29 / everything)
                                                                  :ARG1-of c24-10
                                                                  :ARG2 (c24-3 / control-01
                                                                               :ARG1 c24-29
                                                                               :manner (c24-17 / entire)
                                                                               :ARG1-of (c24-1 / like-01
                                                                                               :ARG0 c24-6))
                                                                  :ARG0-of c24-3)))
                      :polarity -)
        :snt4 (c24-12 / and
                      :op1 (c24-11 / know-02
                                   :ARG1 (c24-4 / person
                                                :name c24-28
                                                :op1 "Tom"))
                      :time (c24-32 / already))
        :op2 (c24-25 / move-01
                     :ARG0 (c24-5 / she)
                     :ARG2 (c24-7 / victim
                                  :mod (c24-21 / next)
                                  :poss c24-5)
                     :time (c24-27 / figure-out-05
                                   :ARG0 c24-5
                                   :ARG1 (c24-2 / possible-01
                                                :ARG1 (c24-26 / control-01
                                                              :ARG0 c24-5
                                                              :ARG1 (c24-22 / everything))
                                                :polarity -))))

# ::snt Joe Alwyn being referred to as Swifts boyfriend when he is a genuinely super talented actor who was the lead of Ang Lees Billy Lynns Long Halftime Walk and is in three high profile films this year, is just ridiculous.
# ::tokens ["Joe", "Alwyn", "being", "referred", "to", "as", "Swifts", "boyfriend", "when", "he", "is", "a", "genuinely", "super", "talented", "actor", "who", "was", "the", "lead", "of", "Ang", "Lees", "Billy", "Lynns", "Long", "Halftime", "Walk", "and", "is", "in", "three", "high", "profile", "films", "this", "year", ",", "is", "just", "ridiculous", "."]
# ::lemmas ["Joe", "Alwyn", "be", "refer", "to", "as", "Swifts", "boyfriend", "when", "he", "be", "a", "genuinely", "super", "talented", "actor", "who", "be", "the", "lead", "of", "Ang", "Lees", "Billy", "Lynns", "Long", "Halftime", "Walk", "and", "be", "in", "three", "high", "profile", "film", "this", "year", ",", "be", "just", "ridiculous", "."]
(c25-20 / ridiculous-02
        :ARG1 (c25-5 / refer-01
                     :ARG1 (c25-21 / person
                                   :name (c25-19 / name
                                                 :op1 "Joe"
                                                 :op2 "Alwyn"))
                     :ARG2 (c25-15 / person
                                   :ARG0-of (c25-8 / have-rel-role-91
                                                   :ARG1 (c25-6 / organization
                                                                :name (c25-16 / name
                                                                              :op1 "Swifts"))
                                                   :ARG2 (c25-14 / boyfriend)))
                     :time (c25-12 / and
                                   :op1 (c25-4 / person
                                               :ARG0-of (c25-10 / act-01)
                                               :domain c25-21
                                               :mod (c25-11 / talent
                                                            :mod (c25-13 / genuine)
                                                            :mod (c25-0 / super))
                                               :ARG0-of (c25-2 / lead-02
                                                               :ARG1 (c25-23 / work-of-art
                                                                             :name (c25-22 / name
                                                                                           :op1 "Ang"
                                                                                           :op2 "Lees"
                                                                                           :op3 "Billy"
                                                                                           :op4 "Lynns"
                                                                                           :op5 "Long"
                                                                                           :op6 "Halftime"
                                                                                           :op7 "Walk"))))
                                   :op2 (c25-1 / be-located-at-91
                                               :ARG1 c25-21
                                               :ARG2 (c25-18 / film
                                                             :mod (c25-3 / profile
                                                                         :ARG1-of (c25-24 / high-02))
                                                             :time (c25-7 / year
                                                                          :mod (c25-17 / this))
                                                             :quant 3))))
        :mod (c25-9 / just))

# ::snt They are friends. Emma been in business longer than jen
# ::tokens ["They", "are", "friends", ".", "Emma", "been", "in", "business", "longer", "than", "jen"]
# ::lemmas ["they", "be", "friend", ".", "Emma", "be", "in", "business", "long", "than", "jen"]
(c26-3 / multi-sentence
       :snt1 (c26-5 / have-rel-role-91
                    :ARG0 (c26-12 / they)
                    :ARG1 (c26-6 / person
                                 :name (c26-2 / name
                                              :op1 "Emma"))
                    :ARG2 (c26-0 / friend))
       :snt2 (c26-11 / have-degree-91
                     :ARG1 (c26-1 / business
                                  :poss (c26-4 / person
                                               :name (c26-7 / name
                                                            :op1 "Jen")))
                     :ARG2 (c26-8 / long-03
                                  :ARG1 (c26-9 / business
                                               :poss c26-4))
                     :ARG3 (c26-10 / more)
                     :ARG4 c26-9))

# ::snt Perch Emma accetta ruoli anche non d spiccata lead cosa che Jen invece...
# ::tokens ["Perch", "Emma", "accetta", "ruoli", "anche", "non", "d", "spiccata", "lead", "cosa", "che", "Jen", "invece", "..."]
# ::lemmas ["perch", "Emma", "accetta", "ruoli", "anche", "non", "d", "spiccata", "lead", "cosa", "che", "Jen", "invece", "..."]
(c27-1 / multi-sentence
       :snt1 (c27-5 / perch-01
                    :ARG0 (c27-2 / person
                                 :name (c27-0 / name
                                              :op1 "Emma"
                                              :op2 "Accetta")))
       :snt2 (c27-11 / accuse-01
                     :ARG0 (c27-12 / person
                                   :name (c27-4 / name
                                                :op1 "Ruvoli")
                                   :ARG1-of c27-11)
                     :ARG2 (c27-3 / spiccata
                                  :ARG1-of (c27-8 / cause-01
                                                  :ARG0 (c27-6 / lead-02))
                                  :polarity -)
                     :snt3 (c27-9 / person
                                  :name (c27-7 / name
                                               :op1 "Jen")
                                  :mod (c27-10 / invece))))

# ::snt !
# ::tokens ["!"]
# ::lemmas ["!"]
(c28-0 / thing
       :mode expressive)

# ::snt Grit duro en la que sale hablando con Cuarn.
# ::tokens ["Grit", "duro", "en", "la", "que", "sale", "hablando", "con", "Cuarn", "."]
# ::lemmas ["Grit", "duro", "en", "la", "que", "sale", "hablando", "con", "Cuarn", "."]
(c29-6 / duro
       :mod (c29-5 / country
                   :name (c29-0 / name
                                :op1 "Grit"))
       :mod (c29-2 / en-la-que)
       :ARG1-of (c29-1 / sell-01
                       :ARG4 (c29-7 / city
                                    :name (c29-3 / name
                                                 :op1 "Cuarn"))
                       :ARG1-of (c29-4 / hablando-00)))

# ::snt If that were possible they shouldve given it to Jesse Eisenberg, Andrew Garfield and Justin Timberlake for TSN
# ::tokens ["If", "that", "were", "possible", "they", "should", "ve", "given", "it", "to", "Jesse", "Eisenberg", ",", "Andrew", "Garfield", "and", "Justin", "Timberlake", "for", "TSN"]
# ::lemmas ["if", "that", "be", "possible", "they", "should", "ve", "give", "it", "to", "Jesse", "Eisenberg", ",", "Andrew", "Garfield", "and", "Justin", "Timberlake", "for", "TSN"]
(c30-3 / recommend-01
       :ARG1 (c30-12 / give-01
                     :ARG0 (c30-9 / they)
                     :ARG1 (c30-10 / it)
                     :ARG2 (c30-11 / and
                                   :op1 (c30-5 / person
                                               :name (c30-1 / name
                                                            :op1 "Jesse"
                                                            :op2 "Eisenberg"))
                                   :op2 (c30-2 / person
                                               :name (c30-4 / name
                                                            :op1 "Andrew"
                                                            :op2 "Garfield"))
                                   :op3 (c30-13 / person
                                                :name (c30-6 / name
                                                             :op1 "Justin"
                                                             :op2 "Timberlake")))
                     :beneficiary (c30-0 / broadcast-program
                                         :name (c30-8 / name
                                                      :op1 "TSN")))
       :condition (c30-7 / possible-01
                         :ARG1 (c30-14 / that)))

# ::snt Lol late night thoughts man
# ::tokens ["Lol", "late", "night", "thoughts", "man"]
# ::lemmas ["Lol", "late", "night", "thought", "man"]
(c31-2 / say-01
       :ARG1 (c31-5 / think-01
                    :time (c31-3 / late
                                 :op1 (c31-0 / night))
                    :mod (c31-6 / laugh-01
                                :manner (c31-4 / loud)
                                :mode expressive))
       :ARG2 (c31-1 / man))

# ::snt Few questions. First :36am? seconds was there a giant plate of food after more than a few drinks. And third to answer the questions. Yes cause Emma Stone was always a first rounder that actually panned out. And well, Lindsay was always going to be Ryan Leaf.
# ::tokens ["Few", "questions", ".", "First", ":", "36am", "?", "seconds", "was", "there", "a", "giant", "plate", "of", "food", "after", "more", "than", "a", "few", "drinks", ".", "And", "third", "to", "answer", "the", "questions", ".", "Yes", "cause", "Emma", "Stone", "was", "always", "a", "first", "rounder", "that", "actually", "panned", "out", ".", "And", "well", ",", "Lindsay", "was", "always", "going", "to", "be", "Ryan", "Leaf", "."]
# ::lemmas ["few", "question", ".", "First", ":", "36am", "?", "seconds", "be", "there", "a", "giant", "plate", "of", "food", "after", "more", "than", "a", "few", "drink", ".", "and", "third", "to", "answer", "the", "question", ".", "yes", "cause", "Emma", "Stone", "be", "always", "a", "first", "rounder", "that", "actually", "pan", "out", ".", "and", "well", ",", "Lindsay", "be", "always", "go", "to", "be", "Ryan", "Leaf", "."]
(c32-14 / multi-sentence
        :snt1 (c32-8 / question-01
                     :quant (c32-23 / few))
        :snt2 (c32-27 / plate
                      :consist-of (c32-28 / food)
                      :mod (c32-10 / giant)
                      :time (c32-9 / after
                                   :op1 (c32-25 / drink-01
                                                :quant (c32-5 / more-than
                                                              :op1 (c32-29 / few))))
                      :ord (c32-2 / ordinal-entity
                                  :value 1)
                      :time (c32-18 / date-entity
                                    :polarity (c32-11 / amr-unknown)
                                    :time "36:00"))
        :snt3 (c32-7 / and
                     :op2 (c32-33 / answer-01
                                  :ARG1 (c32-19 / question-01)
                                  :li 3))
        :snt4 (c32-17 / cause-01
                      :ARG0 (c32-15 / person
                                    :name (c32-24 / name
                                                  :op1 "Emma"
                                                  :op2 "Stone")
                                    :mod (c32-26 / rounder
                                                 :ord (c32-13 / ordinal-entity
                                                              :value 1)
                                                 :ARG1-of (c32-31 / actual-02)))
                      :ARG1 (c32-22 / and
                                    :op2 (c32-1 / person
                                                :name (c32-16 / name
                                                              :op1 "Ryan"
                                                              :op2 "Leaf")
                                                :domain (c32-0 / person
                                                               :name (c32-30 / name
                                                                             :op1 "Lindsay"))
                                                :time (c32-6 / always)))
                      :mod (c32-4 / yes))
        :snt5 (c32-20 / and
                      :op2 (c32-12 / person
                                   :name (c32-21 / name
                                                 :op1 "Ryan"
                                                 :op2 "Leaf")
                                   :time (c32-3 / always)
                                   :mod (c32-32 / well))))

# ::snt As a lurker myself, I approve. I knew I stan the right person.
# ::tokens ["As", "a", "lurker", "myself", ",", "I", "approve", ".", "I", "knew", "I", "stan", "the", "right", "person", "."]
# ::lemmas ["as", "a", "lurker", "myself", ",", "i", "approve", ".", "i", "know", "i", "stan", "the", "right", "person", "."]
(c33-0 / multi-sentence
       :snt1 (c33-8 / approve-01
                    :ARG0 (c33-7 / i)
                    :ARG1 (c33-5 / lurk-01
                                 :ARG0 c33-7))
       :snt2 (c33-4 / know-01
                    :ARG0 (c33-2 / i)
                    :ARG1 (c33-1 / stan-01
                                 :ARG0 c33-2
                                 :ARG1 (c33-6 / person
                                              :ARG1-of (c33-3 / right-03)))))

# ::snt So soft and pale white...
# ::tokens ["So", "soft", "and", "pale", "white", "..."]
# ::lemmas ["so", "soft", "and", "pale", "white", "..."]
(c34-0 / white-03
       :degree (c34-3 / so)
       :ARG1-of (c34-1 / soft-02)
       :ARG1-of (c34-2 / pale-03))

# ::snt hey not too far off from the actual plot tbh
# ::tokens ["hey", "not", "too", "far", "off", "from", "the", "actual", "plot", "tbh"]
# ::lemmas ["hey", "not", "too", "far", "off", "from", "the", "actual", "plot", "tbh"]
(c35-0 / off
       :op1 (c35-4 / plot
                   :ARG1-of (c35-8 / actual-02))
       :ARG1-of (c35-3 / have-degree-91
                       :ARG2 (c35-1 / far)
                       :ARG3 (c35-6 / too)
                       :polarity -)
       :mod (c35-5 / hey
                   :mode expressive)
       :condition (c35-2 / honest-01
                         :ARG0 (c35-7 / i)))

# ::snt Ne dubito, ha certamente altro a cui pensare.
# ::tokens ["Ne", "dubito", ",", "ha", "certamente", "altro", "a", "cui", "pensare", "."]
# ::lemmas ["Ne", "dubito", ",", "ha", "certamente", "altro", "a", "cui", "pensare", "."]
(c36-4 / and
       :op1 (c36-5 / dubito
                   :mode expressive)
       :op2 (c36-2 / certamente
                   :domain (c36-3 / amr-unintelligible
                                  :value " altro"))
       :op3 (c36-1 / penare-00
                   :ARG1-of (c36-0 / request-confirmation-91)))

# ::snt La mia non una domanda, un'affermazione.
# ::tokens ["La", "mia", "non", "una", "domanda", ",", "un'affermazione", "."]
# ::lemmas ["La", "mia", "non", "una", "domanda", ",", "un'affermazione", "."]
(c37-2 / multi-sentence
       :snt1 (c37-1 / una
                    :domain (c37-0 / domanda)
                    :polarity -
                    :mode expressive)
       :snt2 (c37-3 / affermazione))

# ::snt Well after Emma Stone replaced Emma Watson in La La Land because Em Watson took on Beauty and the Beast then its very likely Em Watson learned from THAT mistake
# ::tokens ["Well", "after", "Emma", "Stone", "replaced", "Emma", "Watson", "in", "La", "La", "Land", "because", "Em", "Watson", "took", "on", "Beauty", "and", "the", "Beast", "then", "its", "very", "likely", "Em", "Watson", "learned", "from", "THAT", "mistake"]
# ::lemmas ["well", "after", "Emma", "Stone", "replace", "Emma", "Watson", "in", "La", "La", "Land", "because", "Em", "Watson", "take", "on", "Beauty", "and", "the", "Beast", "then", "its", "very", "likely", "Em", "Watson", "learn", "from", "that", "mistake"]
(c38-8 / likely-01
       :ARG1 (c38-15 / learn-01
                     :ARG0 (c38-7 / person
                                  :name (c38-1 / name
                                               :op1 "Emma"
                                               :op2 "Watson"))
                     :ARG1 (c38-0 / mistake-02
                                  :mod (c38-14 / that)))
       :degree (c38-4 / very)
       :time (c38-3 / after
                    :op1 (c38-5 / replace-01
                                :ARG0 (c38-2 / person
                                             :name (c38-6 / name
                                                          :op1 "Emma"
                                                          :op2 "Stone"))
                                :ARG1 c38-7
                                :location (c38-11 / work-of-art
                                                  :name (c38-9 / name
                                                               :op1 "La"
                                                               :op2 "La"
                                                               :op3 "Land"))
                                :ARG1-of (c38-12 / cause-01
                                                 :ARG0 (c38-16 / take-on-09
                                                               :ARG0 c38-7
                                                               :ARG1 (c38-10 / work-of-art
                                                                             :name (c38-13 / name
                                                                                           :op1 "Beauty"
                                                                                           :op2 "and"
                                                                                           :op3 "the"
                                                                                           :op4 "Beast"))))))
       :mod (c38-17 / well))

# ::snt I know, right??
# ::tokens ["I", "know", ",", "right", "?", "?"]
# ::lemmas ["i", "know", ",", "right", "?", "?"]
(c39-1 / know-01
       :ARG0 (c39-2 / i)
       :ARG1-of (c39-0 / request-confirmation-91
                       :ARG2 c39-2))

# ::snt Ohh, that would have been so cool!
# ::tokens ["Ohh", ",", "that", "would", "have", "been", "so", "cool", "!"]
# ::lemmas ["Ohh", ",", "that", "would", "have", "be", "so", "cool", "!"]
(c40-1 / cool-04
       :ARG1 (c40-3 / that)
       :degree (c40-0 / so)
       :mod (c40-2 / oh
                   :mode expressive))

# ::snt Emma left Venice already but Id have loved to see her alongside Lali!
# ::tokens ["Emma", "left", "Venice", "already", "but", "I", "d", "have", "loved", "to", "see", "her", "alongside", "Lali", "!"]
# ::lemmas ["Emma", "leave", "Venice", "already", "but", "I", "d", "have", "love", "to", "see", "she", "alongside", "Lali", "!"]
(c41-6 / leave-11
       :ARG0 (c41-5 / person
                    :name (c41-0 / name
                                 :op1 "Emma"))
       :ARG1 (c41-8 / island
                    :name (c41-4 / name
                                 :op1 "Venice"))
       :time (c41-9 / already)
       :concession-of (c41-10 / love-02
                              :ARG0 (c41-3 / i)
                              :ARG1 (c41-2 / see-01
                                           :ARG0 c41-3
                                           :ARG1 c41-5
                                           :accompanier (c41-1 / person
                                                               :name (c41-7 / name
                                                                            :op1 "Lali")))))

# ::snt Red Vines are so much better than Twizzlers
# ::tokens ["Red", "Vines", "are", "so", "much", "better", "than", "Twizzlers"]
# ::lemmas ["Red", "Vines", "be", "so", "much", "well", "than", "Twizzlers"]
(c42-4 / have-degree-91
       :ARG1 (c42-3 / recipe
                    :ARG1-of (c42-8 / red-02))
       :ARG2 (c42-7 / good-02
                    :ARG1 c42-3)
       :ARG3 (c42-0 / more
                    :quant (c42-5 / much
                                  :degree (c42-2 / so)))
       :ARG4 (c42-6 / product
                    :name (c42-1 / name
                                 :op1 "Twizzlers")))

# ::snt Such great chemistry between these two fab actors!
# ::tokens ["Such", "great", "chemistry", "between", "these", "two", "fab", "actors", "!"]
# ::lemmas ["such", "great", "chemistry", "between", "these", "two", "fab", "actor", "!"]
(c43-4 / chemistry
       :mod (c43-7 / great
                   :degree (c43-2 / such))
       :mod (c43-1 / between
                   :op1 (c43-3 / person
                               :ARG0-of (c43-6 / act-01)
                               :mod (c43-5 / this)
                               :mod (c43-0 / fab)
                               :quant 2))
       :mode expressive)

# ::snt Her sure is special . Just kidding about the BF part ! We all wish he was ours!! A girl can dream
# ::tokens ["Her", "sure", "is", "special", ".", "Just", "kidding", "about", "the", "BF", "part", "!", "We", "all", "wish", "he", "was", "ours", "!", "!", "A", "girl", "can", "dream"]
# ::lemmas ["her", "sure", "be", "special", ".", "just", "kid", "about", "the", "BF", "part", "!", "we", "all", "wish", "he", "be", "ours", "!", "!", "a", "girl", "can", "dream"]
(c45-2 / multi-sentence
       :snt1 (c45-4 / special-02
                    :ARG1 (c45-0 / she)
                    :ARG1-of (c45-15 / sure-02))
       :snt2 (c45-6 / kid-01
                    :ARG0 (c45-11 / i)
                    :ARG2 (c45-7 / part
                                 :mod (c45-1 / boyfriend))
                    :mod (c45-10 / just))
       :snt3 (c45-9 / wish-01
                    :ARG0 (c45-8 / we
                                 :mod (c45-12 / all))
                    :ARG1 (c45-5 / have-rel-role-91
                                 :ARG0 c45-1
                                 :ARG1 c45-8))
       :snt4 (c45-3 / possible-01
                    :ARG1 (c45-14 / dream-01
                                  :ARG0 (c45-13 / girl))))

# ::snt Gorgeous redhead girls like her always have the most beautiful, smooth, and flawless pale white thighs
# ::tokens ["Gorgeous", "redhead", "girls", "like", "her", "always", "have", "the", "most", "beautiful", ",", "smooth", ",", "and", "flawless", "pale", "white", "thighs"]
# ::lemmas ["gorgeous", "redhead", "girl", "like", "she", "always", "have", "the", "most", "beautiful", ",", "smooth", ",", "and", "flawless", "pale", "white", "thigh"]
(c46-5 / have-03
       :ARG0 (c46-10 / girl
                     :mod (c46-3 / redhead)
                     :ARG1-of (c46-0 / beautiful-02)
                     :ARG1-of (c46-11 / resemble-01
                                      :ARG2 (c46-2 / she)))
       :ARG1 (c46-9 / thigh
                    :ARG1-of (c46-7 / white-03)
                    :ARG1-of (c46-6 / pale-03)
                    :ARG1-of (c46-8 / have-degree-91
                                    :ARG2 c46-0
                                    :ARG1 c46-9)
                    :ARG3 (c46-1 / most))
       :time (c46-4 / always))

# ::snt Those legs are perfect
# ::tokens ["Those", "legs", "are", "perfect"]
# ::lemmas ["those", "leg", "be", "perfect"]
(c47-0 / perfect-02
       :ARG1 (c47-1 / leg
                    :mod (c47-2 / that)))

# ::snt Excelente actriz Marina de Tavira, deseando ya ver Roma
# ::tokens ["Excelente", "actriz", "Marina", "de", "Tavira", ",", "deseando", "ya", "ver", "Roma"]
# ::lemmas ["Excelente", "actriz", "Marina", "de", "Tavira", ",", "deseando", "ya", "ver", "Roma"]
(c48-8 / intend-01
       :ARG0 (c48-4 / person
                    :name (c48-0 / name
                                 :op1 "Marina"
                                 :op2 "de"
                                 :op3 "Tavira")
                    :ARG0-of (c48-3 / have-org-role-91
                                    :ARG1 (c48-7 / company
                                                 :name (c48-5 / name
                                                              :op1 "Excelente"))
                                    :ARG3 (c48-9 / actriz)))
       :ARG1 (c48-1 / prove-01
                    :ARG0 c48-4
                    :ARG1 (c48-2 / ver
                                 :op1 (c48-10 / city
                                              :name (c48-6 / name
                                                           :op1 "Roma")))))

# ::snt Lol no its not happening. Ive had it confirmed that a paperback is not being made so I dont know where this info is coming from
# ::tokens ["Lol", "no", "its", "not", "happening", ".", "I", "ve", "had", "it", "confirmed", "that", "a", "paperback", "is", "not", "being", "made", "so", "I", "do", "nt", "know", "where", "this", "info", "is", "coming", "from"]
# ::lemmas ["Lol", "no", "its", "not", "happen", ".", "i", "ve", "have", "it", "confirm", "that", "a", "paperback", "be", "not", "be", "make", "so", "i", "do", "not", "know", "where", "this", "info", "be", "come", "from"]
(c49-1 / multi-sentence
       :snt1 (c49-3 / have-polarity-91
                    :ARG1 (c49-11 / it)
                    :mod (c49-4 / laugh-01
                                :ARG0 (c49-2 / i)
                                :manner (c49-13 / loud)
                                :mode expressive)
                    :ARG2 -)
       :snt2 (c49-8 / confirm-01
                    :ARG0 (c49-14 / i)
                    :ARG1 (c49-5 / make-01
                                 :ARG1 (c49-6 / paperback)
                                 :polarity -)
                    :ARG0-of (c49-15 / cause-01
                                     :ARG1 (c49-7 / know-01
                                                  :ARG0 c49-14
                                                  :ARG1 (c49-9 / location
                                                               :ARG2-of (c49-10 / come-03
                                                                                :ARG1 (c49-0 / information
                                                                                             :mod (c49-12 / this))))
                                                  :polarity -))))

# ::snt TellurideQ&amp;A
# ::tokens ["TellurideQ&amp;A"]
# ::lemmas ["TellurideQ&amp;A"]
(c50-4 / and
       :op1 (c50-3 / person
                   :name (c50-0 / name
                                :op1 "TellurideQ"))
       :op2 (c50-1 / person
                   :name (c50-2 / name
                                :op1 "amp")))
