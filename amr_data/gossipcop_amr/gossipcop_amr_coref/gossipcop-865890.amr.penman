# ::snt Let's hope they don't sell out immediately
# ::tokens ["Let", "'s", "hope", "they", "do", "n't", "sell", "out", "immediately"]
# ::lemmas ["let", "us", "hope", "they", "do", "not", "sell", "out", "immediately"]
(c1-1 / hope-01
      :ARG0 (c1-2 / we)
      :ARG1 (c1-0 / sell-out-02
                  :ARG0 (c1-4 / they)
                  :time (c1-3 / immediate)
                  :polarity -)
      :mode imperative)

# ::snt He's coming to Boston!
# ::tokens ["He", "'s", "coming", "to", "Boston", "!"]
# ::lemmas ["he", "be", "come", "to", "Boston", "!"]
(c2-0 / come-01
      :ARG1 (c2-1 / he)
      :ARG4 (c2-3 / city
                  :name (c2-2 / name
                              :op1 "Boston")))

# ::snt Jammer had zo graag gewild
# ::tokens ["Jammer", "had", "zo", "graag", "gewild"]
# ::lemmas ["Jammer", "have", "zo", "graag", "gewild"]
(c3-2 / have-03
      :ARG0 (c3-3 / person
                  :name (c3-1 / name
                              :op1 "Jammer"))
      :ARG1 (c3-0 / gewild))

# ::snt hier x
# ::tokens ["hier", "x"]
# ::lemmas ["hier", "x"]
(c4-1 / have-degree-91
      :ARG2 (c4-2 / loud)
      :ARG3 (c4-0 / more))

# ::snt Each ticket purchase for Niall Horan's 'Flicker Sessions ' shows will include a copy of his upcoming debut solo album.
# ::tokens ["Each", "ticket", "purchase", "for", "Niall", "Horan", "'s", "'", "Flicker", "Sessions", "'", "shows", "will", "include", "a", "copy", "of", "his", "upcoming", "debut", "solo", "album", "."]
# ::lemmas ["each", "ticket", "purchase", "for", "Niall", "Horan", "'s", "'", "Flicker", "Sessions", "'", "show", "will", "include", "a", "copy", "of", "his", "upcoming", "debut", "solo", "album", "."]
(c5-9 / include-01
      :ARG1 (c5-8 / thing
                  :ARG2-of (c5-7 / copy-01
                                 :ARG1 (c5-10 / album
                                              :name (c5-1 / name
                                                          :op1 "Flicker"
                                                          :op2 "Sessions")
                                              :poss (c5-6 / person
                                                          :name (c5-5 / name
                                                                      :op1 "Niall"
                                                                      :op2 "Horan"))
                                              :ARG1-of (c5-11 / debut-01
                                                              :ARG0 c5-6)
                                              :mod (c5-3 / solo))))
      :ARG2 (c5-2 / purchase-01
                  :ARG1 (c5-12 / ticket)
                  :purpose (c5-0 / show-04
                                 :ARG0 c5-6)
                  :mod (c5-4 / each)))
