# ::snt srx semaines
# ::tokens ["srx", "semaines"]
# ::lemmas ["srx", "semaine"]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "srx"
                  :op2 "Semaines"))

# ::snt c'est bien aussi amazon
# ::tokens ["c'est", "bien", "aussi", "amazon"]
# ::lemmas ["c'", "bien", "aussi", "amazon"]
(c2-1 / have-mod-91
      :ARG1 (c2-3 / amazon)
      :ARG2 (c2-0 / bizarre)
      :ARG3 (c2-2 / most))

# ::snt c'etait la seule qu'ils avaient
# ::tokens ["c'etait", "la", "seule", "qu'ils", "avaient"]
# ::lemmas ["c'etait", "la", "seule", "qu'ils", "avaient"]
(c3-0 / c'etait-la-seule
      :ARG1-of (c3-1 / compare-01
                     :ARG2 (c3-2 / au-naturel)))

# ::snt j'ai fais de bons achats aujourd'hui
# ::tokens ["j'ai", "fais", "de", "bons", "achats", "aujourd'hui"]
# ::lemmas ["j'ai", "fais", "de", "bons", "achat", "aujourd'hui"]
(c5-0 / bons-a-chats
      :ARG1-of (c5-2 / say-01
                     :ARG0 (c5-4 / i)
                     :ARG2 (c5-3 / person
                                 :name (c5-1 / name
                                             :op1 "Aujourd'hui")))
      :mode expressive)

# ::snt je crois bien MDRRRR
# ::tokens ["je", "crois", "bien", "MDRRRR"]
# ::lemmas ["je", "crois", "bien", "MDRRRR"]
(c6-0 / string-entity
      :value "je crois bien MDRRRR")

# ::snt ma meilleure amie habite l bas aussi ! Je compatis ...
# ::tokens ["ma", "meilleure", "amie", "habite", "l", "bas", "aussi", "!", "Je", "compatis", "..."]
# ::lemmas ["ma", "meilleure", "amie", "habite", "l", "bas", "aussi", "!", "Je", "compatis", "..."]
(c7-1 / multi-sentence
      :snt1 (c7-4 / meilleure
                  :mode expressive)
      :snt2 (c7-0 / bite-01
                  :ARG0 (c7-5 / person)
                  :ARG1 (c7-2 / person
                              :mod (c7-6 / country
                                         :name (c7-3 / name
                                                     :op1 "Australia")))
                  :mode expressive)
      :snt3 (c7-7 / compatis
                  :mode expressive))

# ::snt t'habites ou ? XD
# ::tokens ["t'habites", "ou", "?", "XD"]
# ::lemmas ["t'habites", "ou", "?", "XD"]
(c8-6 / and
      :op1 (c8-2 / religious-group
                 :name (c8-1 / name
                             :op1 "T'habite")
                 :polarity (c8-5 / amr-unknown))
      :op2 (c8-3 / have-mod-91
                 :ARG2 (c8-0 / obamabot)
                 :polarity (c8-4 / amr-unknown)))

# ::snt c'est calme
# ::tokens ["c'est", "calme"]
# ::lemmas ["c'", "calme"]
(c9-1 / possible-01
      :ARG1 (c9-0 / calme-01)
      :polarity -)

# ::snt ouais paris c'est top ! Le pire c'est que je suis bien dans mon pays ... sauf pour ce genre de trucs !
# ::tokens ["ouais", "paris", "c'est", "top", "!", "Le", "pire", "c'est", "que", "je", "suis", "bien", "dans", "mon", "pays", "...", "sauf", "pour", "ce", "genre", "de", "trucs", "!"]
# ::lemmas ["ouais", "paris", "c'est", "top", "!", "le", "pire", "c'est", "que", "je", "suis", "bien", "dans", "mon", "pay", "...", "sauf", "pour", "ce", "genre", "de", "truc", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-6 / have-polarity-91
                    :ARG1 (c10-10 / have-mod-91
                                  :ARG1 (c10-11 / this)
                                  :ARG2 (c10-13 / top))
                    :ARG2 -)
       :snt2 (c10-5 / have-mod-91
                    :ARG1 (c10-8 / cause-01
                                 :ARG0 (c10-4 / amr-unknown)
                                 :ARG1 (c10-17 / come-01
                                               :ARG1 (c10-7 / person)
                                               :ARG4 (c10-12 / amr-unknown)))
                    :ARG2 (c10-9 / amr-unknown))
       :snt3 (c10-14 / cause-01
                     :ARG0 (c10-15 / amr-unknown)
                     :ARG1 (c10-0 / come-01
                                  :ARG1 (c10-2 / person)
                                  :ARG4 (c10-3 / genre
                                               :mod (c10-16 / trucs)))))

# ::snt thx pour le conseil
# ::tokens ["thx", "pour", "le", "conseil"]
# ::lemmas ["thx", "pour", "le", "conseil"]
(c11-1 / pour-03
       :ARG1 (c11-2 / string-entity
                    :value "thx")
       :ARG2 (c11-0 / conseil))

# ::snt I know XD
# ::tokens ["I", "know", "XD"]
# ::lemmas ["i", "know", "XD"]
(c12-1 / know-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-3 / thing
                    :name (c12-0 / name
                                 :op1 " XD")))

# ::snt donc j'ai laiss tomb
# ::tokens ["donc", "j'ai", "laiss", "tomb"]
# ::lemmas ["donc", "j'ai", "laiss", "tomb"]
(c13-2 / tomb
       :poss (c13-1 / person
                    :name (c13-0 / name
                                 :op1 "Donc"
                                 :op2 "J'ai"
                                 :op3 "laiss")))

# ::snt je viens de voir que pour le produit pour le bain d'Emma que j'allais commander y a euros de frais de port
# ::tokens ["je", "viens", "de", "voir", "que", "pour", "le", "produit", "pour", "le", "bain", "d'Emma", "que", "j'allais", "commander", "y", "a", "euros", "de", "frais", "de", "port"]
# ::lemmas ["je", "viens", "de", "voir", "que", "pour", "le", "produit", "pour", "le", "bain", "d'Emma", "que", "j'allais", "commander", "y", "a", "euro", "de", "frais", "de", "port"]
(c14-10 / cause-01
        :ARG0 (c14-8 / pour-02
                     :ARG1 (c14-2 / product
                                  :ARG1-of (c14-15 / produce-01))
                     :ARG2 (c14-11 / person
                                   :name (c14-1 / name
                                                :op1 "Le"
                                                :op2 "Bain"
                                                :op3 "d'Emma")
                                   :ARG0-of c14-10
                                   :ARG1 (c14-4 / and
                                                :op1 (c14-14 / person
                                                             :ARG0-of (c14-7 / have-org-role-91
                                                                             :ARG2 (c14-16 / commander))
                                                             :mod (c14-13 / country
                                                                          :name (c14-9 / name
                                                                                       :op1 "France")))
                                                :op2 (c14-6 / euro
                                                            :mod (c14-0 / frais
                                                                        :mod (c14-3 / port))))))
        :ARG1 (c14-5 / viens
                     :mod (c14-12 / voir)))

# ::snt ouais comme ca on fait durer le plaisir ! XD
# ::tokens ["ouais", "comme", "ca", "on", "fait", "durer", "le", "plaisir", "!", "XD"]
# ::lemmas ["ouais", "comme", "can", "on", "fait", "durer", "le", "plaisir", "!", "XD"]
(c15-2 / multi-sentence
       :snt1 (c15-4 / amr-unintelligible
                    :value "ouais")
       :snt2 (c15-3 / possible-01
                    :ARG1 (c15-0 / on-15
                                 :ARG1 (c15-1 / fait))))

# ::snt oui merci, je dois me contenir et ne pas acheter les rouges lvres
# ::tokens ["oui", "merci", ",", "je", "dois", "me", "contenir", "et", "ne", "pas", "acheter", "les", "rouges", "lvres"]
# ::lemmas ["oui", "merci", ",", "je", "dois", "i", "contenir", "et", "ne", "pas", "acheter", "les", "rouges", "lvre"]
(c16-1 / multi-sentence
       :snt1 (c16-3 / say-01
                    :ARG0 (c16-8 / i)
                    :ARG1 (c16-5 / merci))
       :snt2 (c16-11 / dois-polite
                     :ARG0 (c16-0 / you)
                     :ARG1 (c16-9 / and
                                  :op1 (c16-7 / contenir-00
                                              :ARG0 (c16-10 / you)
                                              :ARG1 c16-8)
                                  :op2 (c16-12 / acheter-00
                                               :ARG0 c16-10
                                               :ARG1 (c16-4 / rouge
                                                            :mod (c16-6 / lvres))
                                               :mod (c16-2 / nastiness)))))

# ::snt t'as raison !
# ::tokens ["t'as", "raison", "!"]
# ::lemmas ["t'as", "raison", "!"]
(c17-0 / raison
       :mode expressive)

# ::snt y a produits bodyshop comment faire pour ne pas acheter les ? XD
# ::tokens ["y", "a", "produits", "bodyshop", "comment", "faire", "pour", "ne", "pas", "acheter", "les", "?", "XD"]
# ::lemmas ["y", "a", "produit", "bodyshop", "comment", "faire", "pour", "ne", "pas", "acheter", "les", "?", "XD"]
(c18-2 / multi-sentence
       :snt1 (c18-6 / comment-01
                    :ARG0 (c18-0 / you)
                    :ARG3 (c18-9 / company
                                 :name (c18-1 / name
                                              :op1 "Boshop"))
                    :ARG1-of (c18-3 / request-confirmation-91))
       :snt2 (c18-4 / ne-polarity-91
                    :ARG1 (c18-8 / acheter-00
                                 :ARG1 (c18-5 / les))
                    :ARG2 (c18-7 / amr-unknown)))

# ::snt En + tu pourras pas te tromper comme c'est conseill par emma !
# ::tokens ["En", "+", "tu", "pourras", "pas", "te", "tromper", "comme", "c'est", "conseill", "par", "emma", "!"]
# ::lemmas ["En", "+", "tu", "pourras", "pas", "te", "tromper", "comme", "c'est", "conseill", "par", "emma", "!"]
(c19-1 / multi-sentence
       :snt1 (c19-3 / et-cetera
                    :mode expressive)
       :snt2 (c19-10 / et-cetera
                     :domain (c19-5 / person
                                    :ARG1-of (c19-2 / pour-03))
                     :mode expressive)
       :snt3 (c19-7 / comme-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-11 / converse-01
                                  :ARG0 c19-0
                                  :ARG1-of (c19-8 / cause-01
                                                  :ARG0 (c19-9 / person
                                                               :ARG0-of (c19-4 / have-rel-role-91
                                                                               :ARG2 (c19-6 / emma)))))
                    :mode imperative))

# ::snt c'est clair ! Demain je vais dvaliser bodyshop
# ::tokens ["c'est", "clair", "!", "Demain", "je", "vais", "dvaliser", "bodyshop"]
# ::lemmas ["c'", "clair", "!", "Demain", "je", "vais", "dvaliser", "bodyshop"]
(c20-1 / multi-sentence
       :snt1 (c20-5 / have-concession-91
                    :ARG2 (c20-7 / clair))
       :snt2 (c20-4 / vie-01
                    :ARG0 (c20-6 / person
                                 :name (c20-2 / name
                                              :op1 "Demain"))
                    :ARG1 (c20-3 / person
                                 :mod (c20-0 / bodyshop))))

# ::snt c'est des trucs de fille !
# ::tokens ["c'est", "des", "trucs", "de", "fille", "!"]
# ::lemmas ["c'", "des", "trucs", "de", "fille", "!"]
(c21-0 / amr-unintelligible
       :value "c'est des trucs de fille")

# ::snt haha tu vas essayer d'en trouver aussi ?
# ::tokens ["haha", "tu", "vas", "essayer", "d'en", "trouver", "aussi", "?"]
# ::lemmas ["haha", "tu", "vas", "essayer", "d'en", "trouver", "aussi", "?"]
(c22-2 / request-confirmation-91
       :ARG1 (c22-8 / and
                    :op1 (c22-4 / person
                                :name (c22-0 / name
                                             :op1 "Tu"
                                             :op2 " vas"
                                             :op3 " essayer"))
                    :op2 (c22-1 / person
                                :ARG0-of (c22-7 / trouver-00
                                                :ARG1 (c22-9 / person
                                                             :mod (c22-6 / country
                                                                         :name (c22-3 / name
                                                                                      :op1 "Australia")))))
                    :mod (c22-5 / haha
                                :mode expressive)))

# ::snt je viens d'en trouver un me
# ::tokens ["je", "viens", "d'en", "trouver", "un", "me"]
# ::lemmas ["je", "viens", "d'en", "trouver", "un", "i"]
(c23-2 / trouver-01
       :ARG0 (c23-0 / you)
       :ARG1 (c23-1 / i)
       :mode imperative
       :polite +)

# ::snt je ne connais mme pas une grande partie des marques, faudra que je regarde mieux dans les magasins
# ::tokens ["je", "ne", "connais", "mme", "pas", "une", "grande", "partie", "des", "marques", ",", "faudra", "que", "je", "regarde", "mieux", "dans", "les", "magasins"]
# ::lemmas ["je", "ne", "connais", "mme", "pas", "une", "grande", "partie", "des", "marque", ",", "faudra", "que", "je", "regarde", "mieux", "dans", "les", "magasin"]
(c24-12 / and
        :op1 (c24-10 / connais-00
                     :ARG0 (c24-1 / you)
                     :ARG1 (c24-7 / have-mod-91
                                  :ARG1 (c24-11 / i)
                                  :ARG2 (c24-8 / partie
                                               :mod (c24-13 / grand)
                                               :mod (c24-14 / des
                                                            :op1 (c24-2 / marques))))
                     :mode imperative)
        :op2 (c24-0 / faudra
                    :ARG1-of (c24-16 / cause-01
                                     :ARG0 (c24-6 / regard-01
                                                  :ARG0 c24-1
                                                  :ARG1 (c24-3 / person
                                                               :name (c24-4 / name
                                                                            :op1 "Mieux"))
                                                  :ARG2 (c24-15 / amr-unknown)
                                                  :ARG1-of (c24-5 / instead-of-91
                                                                  :ARG2 (c24-9 / magasins))))
                    :mode expressive))

# ::snt de Genve ^^
# ::tokens ["de", "Genve", "^^"]
# ::lemmas ["de", "Genve", "^^"]
(c25-2 / string-entity
       :mod (c25-0 / country
                   :name (c25-1 / name
                                :op1 "Genve"))
       :value "de")

# ::snt t'as plus qu'une douche ?
# ::tokens ["t'as", "plus", "qu'une", "douche", "?"]
# ::lemmas ["t'as", "plus", "qu'une", "douche", "?"]
(c26-1 / plus
       :polarity (c26-3 / amr-unknown)
       :op1 (c26-0 / douche
                   :mod (c26-2 / qu'une)))

# ::snt ouais c'est cher et surtout c'est pas dispo ou j'habite y a que produits que je peux trouver
# ::tokens ["ouais", "c'est", "cher", "et", "surtout", "c'est", "pas", "dispo", "ou", "j'habite", "y", "a", "que", "produits", "que", "je", "peux", "trouver"]
# ::lemmas ["ouais", "c'est", "cher", "et", "surtout", "c'est", "pas", "dispo", "ou", "j'habite", "y", "a", "que", "produit", "que", "je", "peux", "trouver"]
(c27-8 / and
       :op1 (c27-5 / have-quant-91
                   :ARG1 (c27-13 / cher)
                   :ARG3 (c27-11 / most))
       :op2 (c27-21 / have-quant-91
                    :ARG1 (c27-7 / thing
                                 :ARG1-of (c27-0 / sense-02))
                    :ARG3 (c27-6 / most))
       :op3 (c27-4 / have-quant-91
                   :ARG1 (c27-14 / thing
                                 :ARG1-of c27-0))
       :ARG3 (c27-16 / most)
       :ARG5 (c27-22 / thing
                     :ARG1-of (c27-10 / comment-01))
       :op4 (c27-15 / have-quant-91
                    :ARG1 (c27-1 / thing)
                    :ARG3 (c27-19 / equal)
                    :ARG4 c27-8
                    :op1 (c27-20 / person
                                 :mod (c27-18 / religious-group
                                              :name (c27-17 / name
                                                            :op1 "Jew")))
                    :op2 (c27-12 / person
                                 :ARG0-of (c27-3 / produce-01))
                    :op3 (c27-2 / person
                                :ARG0-of (c27-9 / trouver-01))))

# ::snt exact !
# ::tokens ["exact", "!"]
# ::lemmas ["exact", "!"]
(c28-1 / event
       :mod (c28-0 / exact)
       :mode expressive)

# ::snt j'ai la peau super fragile alors beaucoup cotent chers aussi ^^ mais surement pas autant que les siens
# ::tokens ["j'ai", "la", "peau", "super", "fragile", "alors", "beaucoup", "cotent", "chers", "aussi", "^^", "mais", "surement", "pas", "autant", "que", "les", "siens"]
# ::lemmas ["j'ai", "la", "peau", "super", "fragile", "alor", "beaucoup", "cotent", "cher", "aussi", "^^", "mais", "surement", "pas", "autant", "que", "les", "sien"]
(c29-12 / multi-sentence
        :snt1 (c29-9 / and
                     :op1 (c29-0 / say-01
                                 :ARG0 (c29-21 / i)
                                 :ARG1 (c29-19 / person
                                               :name (c29-16 / name
                                                             :op1 "j'ai"
                                                             :op2 "la"
                                                             :op3 "peau")
                                               :mod (c29-15 / fragile
                                                            :degree (c29-4 / super)))
                                 :ARG2 (c29-13 / person
                                               :name c29-16
                                               :op1 "Christ")))
        :op2 (c29-6 / have-mod-91
                    :ARG1 c29-13
                    :ARG2 (c29-14 / cautuous
                                  :degree (c29-11 / beaucoup))
                    :ARG1-of (c29-10 / cause-01
                                     :ARG0 (c29-1 / cher
                                                  :mod (c29-8 / aussi))))
        :snt2 (c29-3 / sure-02
                     :ARG0 (c29-5 / i)
                     :ARG1 (c29-20 / have-polarity-91
                                   :mod (c29-7 / autant)
                                   :ARG3 (c29-18 / equal)
                                   :ARG4 (c29-2 / person
                                                :mod (c29-17 / siens))
                                   :ARG2 -)))

# ::snt et comme elle j'adore les bains, ca prend un temps de fou
# ::tokens ["et", "comme", "elle", "j'adore", "les", "bains", ",", "ca", "prend", "un", "temps", "de", "fou"]
# ::lemmas ["et", "comme", "elle", "j'adore", "les", "bain", ",", "can", "prend", "un", "temps", "de", "fou"]
(c30-1 / multi-sentence
       :snt1 (c30-3 / et-cetera)
       :snt2 (c30-5 / comme-l'adore
                    :poss (c30-10 / country
                                  :name (c30-2 / name
                                               :op1 "France")))
       :snt3 (c30-4 / possible-01
                    :ARG1 (c30-8 / arrest-01
                                 :ARG1 (c30-7 / temps
                                              :mod (c30-9 / un)
                                              :ARG1-of (c30-6 / cause-01
                                                              :ARG0 (c30-0 / foul-01))))
                    :polarity -))

# ::snt j'en utilise autant XD
# ::tokens ["j'en", "utilise", "autant", "XD"]
# ::lemmas ["j'en", "utilise", "autant", "XD"]
(c31-4 / utilize-01
       :ARG0 (c31-3 / person
                    :name (c31-0 / name
                                 :op1 "j'en"))
       :ARG1 (c31-1 / product
                    :name (c31-2 / name
                                 :op1 "Autant"
                                 :op2 "D XD")))

# ::snt Elle partage tout avec nous, c'est tellement adorable !
# ::tokens ["Elle", "partage", "tout", "avec", "nous", ",", "c'est", "tellement", "adorable", "!"]
# ::lemmas ["Elle", "partage", "tout", "avec", "nous", ",", "c'", "tellement", "adorable", "!"]
(c32-1 / multi-sentence
       :snt1 (c32-6 / tout-01
                    :ARG0 (c32-4 / person
                                 :name (c32-0 / name
                                              :op1 "Elle"
                                              :op2 "Partage"))
                    :ARG1 (c32-3 / nous))
       :snt2 (c32-5 / cute
                    :degree (c32-7 / c'est-17)
                    :domain (c32-2 / person)))

# ::snt that's definitly something that happens sometimes
# ::tokens ["that", "'s", "definitly", "something", "that", "happens", "sometimes"]
# ::lemmas ["that", "be", "definitly", "something", "that", "happen", "sometimes"]
(c33-3 / something
       :domain (c33-2 / that)
       :mod (c33-0 / definite)
       :frequency (c33-1 / sometimes))

# ::snt but then again, in hollywood women get trash talked if male co workers make advances and get turned down
# ::tokens ["but", "then", "again", ",", "in", "hollywood", "women", "get", "trash", "talked", "if", "male", "co", "workers", "make", "advances", "and", "get", "turned", "down"]
# ::lemmas ["but", "then", "again", ",", "in", "hollywood", "woman", "get", "trash", "talk", "if", "male", "co", "worker", "make", "advance", "and", "get", "turn", "down"]
(c34-7 / contrast-01
       :ARG2 (c34-13 / get-04
                     :ARG1 (c34-10 / talk-01
                                   :ARG1 (c34-8 / woman)
                                   :mod (c34-12 / trash))
                     :location (c34-0 / market-sector
                                      :name (c34-1 / name
                                                   :op1 "Hollywood"))
                     :condition (c34-2 / and
                                       :op1 (c34-4 / make-01
                                                   :ARG0 (c34-5 / person
                                                                :ARG0-of (c34-6 / work-01
                                                                                :ARG2 (c34-16 / company
                                                                                              :mod (c34-15 / male))))
                                                   :ARG1 (c34-11 / advance-01
                                                                 :ARG1 c34-5))
                                       :op2 (c34-14 / turn-down-05
                                                    :ARG1 c34-5)))
       :mod (c34-9 / again
                   :mod (c34-3 / then)))

# ::snt I like Beyonc but is beautiful
# ::tokens ["I", "like", "Beyonc", "but", "is", "beautiful"]
# ::lemmas ["i", "like", "Beyonc", "but", "be", "beautiful"]
(c35-4 / contrast-01
       :ARG1 (c35-3 / like-01
                    :ARG0 (c35-5 / i)
                    :ARG1 (c35-2 / person
                                 :name (c35-1 / name
                                              :op1 "Beyonc")))
       :ARG2 (c35-0 / beautiful-02
                    :ARG1 c35-2))

# ::snt "El feminismo es sobre darle eleccin a las mujeres. No es palo con el cual golpear al resto de mujeres. Se trata de libertad, de liberacin, de igualdad. Realmente no entiendo que tienen que ver mis tetas con esto, es muy confuso".
# ::tokens ["\"", "El", "feminismo", "es", "sobre", "darle", "eleccin", "a", "las", "mujeres", ".", "No", "es", "palo", "con", "el", "cual", "golpear", "al", "resto", "de", "mujeres", ".", "Se", "trata", "de", "libertad", ",", "de", "liberacin", ",", "de", "igualdad", ".", "Realmente", "no", "entiendo", "que", "tienen", "que", "ver", "mis", "tetas", "con", "esto", ",", "es", "muy", "confuso", "\"", "."]
# ::lemmas ["\"", "El", "feminismo", "es", "sobre", "darle", "eleccin", "a", "las", "mujere", ".", "no", "es", "palo", "con", "el", "cual", "golpear", "al", "resto", "de", "mujeres", ".", "se", "trata", "de", "libertad", ",", "de", "liberacin", ",", "de", "igualdad", ".", "Realmente", "no", "entiendo", "que", "tienen", "que", "ver", "mis", "teta", "con", "esto", ",", "es", "muy", "confuso", "\"", "."]
(c36-16 / multi-sentence
        :snt1 (c36-27 / equal-01
                      :ARG1 (c36-25 / feminism
                                    :mod (c36-11 / el))
                      :ARG2 (c36-31 / darle-01
                                    :ARG1 (c36-18 / eleccin-00
                                                  :ARG1 (c36-28 / person
                                                                :ARG0-of (c36-6 / have-org-role-91
                                                                                :ARG2 (c36-7 / mujeres))))))
        :snt2 (c36-29 / have-polarity-91
                      :ARG1 (c36-17 / palo)
                      :ARG1-of (c36-21 / cause-01
                                       :ARG0 (c36-10 / golpe-01
                                                     :ARG1 (c36-26 / rest
                                                                   :ARG1-of (c36-30 / include-91
                                                                                    :ARG2 (c36-3 / person
                                                                                                 :ARG0-of c36-6
                                                                                                 :ARG1 (c36-1 / person
                                                                                                              :ARG1-of (c36-24 / mujeres)))))
                                                     :mod (c36-9 / al)))
                      :ARG2 -)
        :snt3 (c36-12 / trata-01
                      :ARG1 (c36-8 / and
                                   :op1 (c36-0 / libertad)
                                   :op2 (c36-22 / de-liberacin-00)
                                   :op3 (c36-19 / de-ugualdad))
                      :ARG1-of (c36-15 / cause-01
                                       :ARG0 (c36-23 / exist-01
                                                     :ARG1 (c36-13 / person
                                                                   :ARG0-of (c36-5 / have-rel-role-91
                                                                                   :ARG2 (c36-20 / mother)))
                                                     :ARG1-of (c36-4 / real-04)
                                                     :polarity -)))
        :snt4 (c36-14 / entiendo
                      :domain (c36-32 / possible-01
                                      :ARG1 (c36-2 / confuso))
                      :polarity -)
        :ARG1-of c36-4)

# ::snt A lo que ella, siendo la reina que es, respondi
# ::tokens ["A", "lo", "que", "ella", ",", "siendo", "la", "reina", "que", "es", ",", "respondi"]
# ::lemmas ["a", "lo", "que", "ella", ",", "siendo", "la", "reina", "que", "es", ",", "respondi"]
(c37-3 / respond-01
       :ARG0 (c37-7 / i)
       :ARG1 (c37-4 / person
                    :name (c37-0 / name
                                 :op1 "Ella")
                    :mod (c37-5 / lo
                                :mode expressive))
       :ARG1-of (c37-6 / cause-01
                       :ARG0 (c37-2 / siendo
                                    :op1 (c37-8 / reina-00
                                                :ARG1-of (c37-1 / possible-01)))))

# ::snt :Inclusive dijeron que ella "no se conoca a ella misma" y que no est capacitada para tomar decisiones inteligentes
# ::tokens [":", "Inclusive", "dijeron", "que", "ella", "\"", "no", "se", "conoca", "a", "ella", "misma", "\"", "y", "que", "no", "est", "capacitada", "para", "tomar", "decisiones", "inteligentes"]
# ::lemmas [":", "inclusive", "dijeron", "que", "ella", "\"", "no", "se", "conoca", "a", "ella", "misma", "\"", "y", "que", "no", "est", "capacitada", "para", "tomar", "decisione", "inteligente"]
(c38-2 / say-01
       :ARG0 (c38-5 / person
                    :name (c38-0 / name
                                 :op1 "Dijeron")
                    :ARG0-of (c38-4 / exclusive-02))
       :ARG1 (c38-10 / and
                     :op1 (c38-7 / converse-01
                                 :ARG0 (c38-11 / ella)
                                 :ARG1 (c38-1 / misma
                                              :poss c38-11)
                                 :polarity -)
                     :op2 (c38-6 / est-01
                                 :ARG1 c38-11
                                 :ARG2 (c38-12 / capacitada)
                                 :purpose (c38-8 / tomar-00
                                                 :ARG0 c38-11
                                                 :ARG1 (c38-3 / decide-01
                                                              :mod (c38-9 / inteligent)))
                                 :polarity -)))

# ::snt Uy, pblico, poco lido y escbido.
# ::tokens ["Uy", ",", "pblico", ",", "poco", "lido", "y", "escbido", "."]
# ::lemmas ["uy", ",", "pblico", ",", "poco", "lido", "y", "escbido", "."]
(c39-4 / and
       :op1 (c39-0 / you)
       :op2 (c39-2 / pblico)
       :op3 (c39-3 / lido)
       :op4 (c39-1 / escbido))

# ::snt I was so shocked that anyone could nail those songs so exactly perfectly
# ::tokens ["I", "was", "so", "shocked", "that", "anyone", "could", "nail", "those", "songs", "so", "exactly", "perfectly"]
# ::lemmas ["i", "be", "so", "shocked", "that", "anyone", "could", "nail", "those", "song", "so", "exactly", "perfectly"]
(c40-3 / shock-01
       :ARG0 (c40-5 / possible-01
                    :ARG1 (c40-1 / nail-01
                                 :ARG0 (c40-8 / anyone)
                                 :ARG1 (c40-0 / song
                                              :mod (c40-6 / that))
                                 :ARG1-of (c40-2 / perfect-02
                                                 :mod (c40-4 / exact
                                                             :degree (c40-9 / so)))))
       :ARG1 (c40-7 / i)
       :degree c40-9)

# ::snt E no que a Fera e o Spider tambm marcaram presena?
# ::tokens ["E", "no", "que", "a", "Fera", "e", "o", "Spider", "tambm", "marcaram", "presena", "?"]
# ::lemmas ["e", "no", "que", "a", "Fera", "e", "o", "Spider", "tambm", "marcaram", "presena", "?"]
(c41-4 / multi-sentence
       :snt1 (c41-3 / no
                    :mode expressive)
       :snt2 (c41-8 / possible-01
                    :ARG1 (c41-1 / believe-01
                                 :ARG0 (c41-2 / you)
                                 :ARG1 (c41-0 / fera))
                    :polarity -)
       :snt3 (c41-5 / say-01
                    :ARG0 (c41-9 / i)
                    :ARG1 (c41-10 / amr-unknown)
                    :ARG2 (c41-6 / person
                                 :name (c41-7 / name
                                              :op1 "Spider"))))

# ::snt Sim ou com certeza??
# ::tokens ["Sim", "ou", "com", "certeza", "?", "?"]
# ::lemmas ["sim", "ou", "com", "certeza", "?", "?"]
(c42-2 / Sim-01
       :polarity (c42-0 / amr-unknown)
       :mod (c42-1 / ou-com-culteza))

# ::snt Ela a coisinha mais lindinha e inteligente do mundo
# ::tokens ["Ela", "a", "coisinha", "mais", "lindinha", "e", "inteligente", "do", "mundo"]
# ::lemmas ["Ela", "a", "coisinha", "mais", "lindinha", "e", "inteligente", "do", "mundo"]
(c43-5 / and
       :op1 (c43-4 / aha
                   :mod (c43-3 / coisinha)
                   :mode expressive)
       :op2 (c43-1 / have-manner-91
                   :ARG1 (c43-2 / lindinha)
                   :ARG2 (c43-6 / inteligente
                                :mod (c43-7 / do-02
                                            :ARG1 (c43-0 / mundo)))))

# ::snt E vc a minha
# ::tokens ["E", "vc", "a", "minha"]
# ::lemmas ["e", "vc", "a", "minha"]
(c44-1 / amr-unintelligible
       :mod (c44-0 / minha)
       :value "E vc")

# ::snt Nossa querida
# ::tokens ["Nossa", "querida"]
# ::lemmas ["nossa", "querida"]
(c45-1 / publication
       :name (c45-0 / name
                    :op1 "Nossa"
                    :op2 " querida"))

# ::snt Um mulhero feminista desses bicho
# ::tokens ["Um", "mulhero", "feminista", "desses", "bicho"]
# ::lemmas ["um", "mulhero", "feminista", "desse", "bicho"]
(c46-3 / say-01
       :ARG0 (c46-5 / i)
       :ARG1 (c46-6 / um
                    :mod (c46-0 / feminista
                                :mod (c46-1 / mulhero))
                    :mode expressive)
       :ARG2 (c46-4 / person
                    :name (c46-2 / name
                                 :op1 "Bicho")))

# ::snt Ela uma inspirao, como atriz e ser humano
# ::tokens ["Ela", "uma", "inspirao", ",", "como", "atriz", "e", "ser", "humano"]
# ::lemmas ["Ela", "uma", "inspirao", ",", "como", "atriz", "e", "ser", "humano"]
(c47-5 / person
       :ARG0-of (c47-6 / inspire-01)
       :domain (c47-1 / person
                      :name (c47-0 / name
                                   :op1 "Ela"))
       :ARG1-of (c47-2 / say-01
                       :ARG0 (c47-3 / i)
                       :ARG2 (c47-7 / and
                                    :op1 (c47-8 / atriz)
                                    :op2 (c47-4 / human
                                                :domain c47-1))))

# ::snt que mulher n
# ::tokens ["que", "mulher", "n"]
# ::lemmas ["que", "mulher", "n"]
(c48-1 / person
       :name (c48-0 / name
                    :op1 "mulher")
       :mod (c48-2 / que))

# ::snt meu primeiro papel de parede no windows
# ::tokens ["meu", "primeiro", "papel", "de", "parede", "no", "windows"]
# ::lemmas ["meu", "primeiro", "papel", "de", "parede", "no", "window"]
(c49-0 / multi-sentence
       :snt1 (c49-2 / meu
                    :mod (c49-3 / primeiro))
       :snt2 (c49-1 / paree
                    :mod (c49-4 / window)
                    :polarity -))

# ::snt My childhood crush lovely and goregous
# ::tokens ["My", "childhood", "crush", "lovely", "and", "goregous"]
# ::lemmas ["my", "childhood", "crush", "lovely", "and", "goregous"]
(c50-3 / and
       :op1 (c50-0 / lovely)
       :op2 (c50-4 / goregous)
       :domain (c50-1 / crush-02
                      :ARG1 (c50-2 / i)
                      :time (c50-5 / childhood)))
