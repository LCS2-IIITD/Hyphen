# ::snt Qui s'en fout ?
# ::tokens ["Qui", "s'en", "fout", "?"]
# ::lemmas ["Qui", "s'en", "fout", "?"]
(c1-0 / fuck-01
      :polarity (c1-2 / amr-unknown)
      :ARG1 (c1-1 / you))

# ::snt Ah there you go. Brad Pitt's back on the market.
# ::tokens ["Ah", "there", "you", "go", ".", "Brad", "Pitt", "'s", "back", "on", "the", "market", "."]
# ::lemmas ["ah", "there", "you", "go", ".", "Brad", "Pitt", "'s", "back", "on", "the", "market", "."]
(c2-2 / multi-sentence
      :snt1 (c2-8 / go-01
                  :ARG1 (c2-1 / you)
                  :ARG4 (c2-6 / there)
                  :mod (c2-7 / ah
                             :mode expressive))
      :snt2 (c2-0 / back-02
                  :ARG1 (c2-5 / person
                              :name (c2-3 / name
                                          :op1 "Brad"
                                          :op2 "Pitt"))
                  :ARG2 (c2-4 / market)))

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c3-0 / care-01
      :ARG0 (c3-1 / amr-unknown))

# ::snt How sad is that.
# ::tokens ["How", "sad", "is", "that", "."]
# ::lemmas ["how", "sad", "be", "that", "."]
(c4-2 / sad-02
      :ARG0 (c4-1 / that)
      :degree (c4-0 / so))

# ::snt BOUK BOUK
# ::tokens ["BOUK", "BOUK"]
# ::lemmas ["BOUK", "BOUK"]
(c5-0 / bouk
      :mode expressive)

# ::snt In the weeks National Enquirer: Justin vs Justin! Did Trudeau Replace Theroux in Jens Heart?
# ::tokens ["In", "the", "weeks", "National", "Enquirer", ":", "Justin", "vs", "Justin", "!", "Did", "Trudeau", "Replace", "Theroux", "in", "Jens", "Heart", "?"]
# ::lemmas ["in", "the", "weeks", "National", "Enquirer", ":", "Justin", "vs", "Justin", "!", "do", "Trudeau", "Replace", "Theroux", "in", "Jens", "Heart", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-4 / versus
                  :op1 (c6-7 / person
                             :name (c6-0 / name
                                         :op1 "Justin")
                             :op2-of c6-4))
      :snt2 (c6-3 / replace-01
                  :ARG0 (c6-2 / person
                              :name (c6-6 / name
                                          :op1 "Trudeau"))
                  :ARG1 (c6-15 / person
                               :name (c6-8 / name
                                           :op1 "Theroux"))
                  :ARG2 (c6-9 / heart
                              :part-of (c6-10 / person
                                              :name (c6-12 / name
                                                           :op1 "Jens")))
                  :polarity (c6-5 / amr-unknown))
      :snt3 (c6-14 / publication
                   :name (c6-13 / name
                                :op1 "National"
                                :op2 "Enquirer")
                   :time (c6-11 / week)))

# ::snt SAME!!!
# ::tokens ["SAME", "!", "!", "!"]
# ::lemmas ["same", "!", "!", "!"]
(c7-0 / same-01
      :mode expressive)

# ::snt Okay, shes getting another divorce its sad, but shell be alright I came out of years and do just fine for years now. So like Disney says , Let it go
# ::tokens ["Okay", ",", "she", "s", "getting", "another", "divorce", "its", "sad", ",", "but", "shell", "be", "alright", "I", "came", "out", "of", "years", "and", "do", "just", "fine", "for", "years", "now", ".", "So", "like", "Disney", "says", ",", "Let", "it", "go"]
# ::lemmas ["okay", ",", "she", "s", "get", "another", "divorce", "its", "sad", ",", "but", "shell", "be", "alright", "i", "come", "out", "of", "year", "and", "do", "just", "fine", "for", "years", "now", ".", "so", "like", "Disney", "say", ",", "let", "it", "go"]
(c9-17 / multi-sentence
       :snt1 (c9-19 / contrast-01
                    :ARG1 (c9-0 / sad-02
                                :ARG0 (c9-26 / divorce-01
                                             :ARG0 (c9-5 / she)
                                             :mod (c9-14 / another)))
                    :ARG2 (c9-11 / all-right
                                 :domain c9-26))
       :snt2 (c9-9 / and
                   :op1 (c9-16 / come-out-09
                               :ARG0 (c9-25 / i)
                               :ARG2 (c9-8 / multiple
                                           :op1 (c9-12 / temporal-quantity
                                                       :unit (c9-6 / year)
                                                       :quant 1)))
                   :op2 (c9-22 / fine-04
                               :ARG1 c9-25
                               :mod (c9-10 / just)
                               :time (c9-21 / multiple
                                            :op1 (c9-20 / temporal-quantity
                                                        :unit (c9-13 / year)
                                                        :quant 1))
                               :time (c9-23 / now)))
       :snt3 (c9-1 / let-01
                   :ARG0 (c9-4 / you)
                   :ARG1 (c9-15 / go-01
                                :ARG1 (c9-7 / it))
                   :ARG1-of (c9-24 / resemble-01
                                   :ARG2 (c9-3 / say-01
                                               :ARG0 (c9-2 / company
                                                           :name (c9-18 / name
                                                                        :op1 "Disney"))))
                   :mode imperative))

# ::snt Poor Jen no more
# ::tokens ["Poor", "Jen", "no", "more"]
# ::lemmas ["Poor", "Jen", "no", "more"]
(c10-2 / person
       :name (c10-1 / name
                    :op1 "Jen")
       :mod (c10-3 / poor)
       :mod (c10-0 / more
                   :polarity -))

# ::snt can she get back together with brad pitt already
# ::tokens ["can", "she", "get", "back", "together", "with", "brad", "pitt", "already"]
# ::lemmas ["can", "she", "get", "back", "together", "with", "brad", "pitt", "already"]
(c11-4 / possible-01
       :ARG1 (c11-7 / get-back-10
                    :ARG1 (c11-2 / she)
                    :ARG2 (c11-6 / together)
                    :accompanier (c11-1 / person
                                        :name (c11-0 / name
                                                     :op1 "Brad"
                                                     :op2 "Pitt"))
                    :time (c11-3 / already))
       :polarity (c11-5 / amr-unknown))

# ::snt Ask Brad for a date.
# ::tokens ["Ask", "Brad", "for", "a", "date", "."]
# ::lemmas ["ask", "Brad", "for", "a", "date", "."]
(c12-3 / ask-02
       :ARG0 (c12-0 / you)
       :ARG1 (c12-4 / date-02
                    :ARG0 (c12-2 / person
                                 :name (c12-1 / name
                                              :op1 "Brad")
                                 :ARG2-of c12-3)))

# ::snt dollars to doughnuts it's never been the men who are crazy
# ::tokens ["dollars", "to", "doughnuts", "it", "'s", "never", "been", "the", "men", "who", "are", "crazy"]
# ::lemmas ["dollar", "to", "doughnut", "it", "be", "never", "be", "the", "man", "who", "be", "crazy"]
(c13-2 / crazy-03
       :ARG1 (c13-0 / man)
       :time (c13-1 / ever)
       :source (c13-4 / and
                      :op1 (c13-5 / dime)
                      :op2 (c13-3 / doughnut))
       :polarity -)

# ::snt And!!
# ::tokens ["And", "!", "!"]
# ::lemmas ["and", "!", "!"]
(c14-0 / and
       :mode expressive)

# ::snt Jai cru que ctait A Benalla, comme quoi les RS...
# ::tokens ["Jai", "cru", "que", "ctait", "A", "Benalla", ",", "comme", "quoi", "les", "RS", "..."]
# ::lemmas ["Jai", "cru", "que", "ctait", "A", "Benalla", ",", "comme", "quoi", "les", "RS", "..."]
(c15-2 / say-01
       :ARG0 (c15-8 / i)
       :ARG1 (c15-6 / ctait-01
                    :ARG0 (c15-4 / person
                                 :name (c15-0 / name
                                              :op1 "Jai"
                                              :op2 " cru"
                                              :op3 "que"))
                    :ARG1 (c15-1 / person
                                 :name (c15-3 / name
                                              :op1 "A"
                                              :op2 "Benalla"))
                    :ARG1-of (c15-10 / cause-01
                                     :ARG0 (c15-7 / comme-cetera
                                                  :mode expressive)))
       :ARG2 (c15-9 / person
                    :name (c15-5 / name
                                 :op1 "RS")))

# ::snt bouk bouk
# ::tokens ["bouk", "bouk"]
# ::lemmas ["bouk", "bouk"]
(c16-1 / bouk
       :mod (c16-0 / ouk))

# ::snt Heureusement que vous tes l pour nous donner les bonnes infos capitales ds le lever du jour
# ::tokens ["Heureusement", "que", "vous", "tes", "l", "pour", "nous", "donner", "les", "bonnes", "infos", "capitales", "ds", "le", "lever", "du", "jour"]
# ::lemmas ["heureusement", "que", "vous", "te", "l", "pour", "nous", "donner", "les", "bonne", "infos", "capitale", "ds", "le", "lever", "du", "jour"]
(c17-4 / pour-02
       :ARG0 (c17-7 / amr-unknown)
       :ARG1 (c17-3 / pour-02
                    :ARG0 (c17-2 / you)
                    :ARG1 (c17-9 / donner-05
                                 :ARG0 c17-2
                                 :ARG1 (c17-1 / bonnes
                                              :mod (c17-6 / infos
                                                          :op1 (c17-5 / capital))))
                    :ARG3 (c17-8 / amr-unintelligible
                                 :value "le lever du jour"))
       :ARG2-of (c17-0 / obligate-01))

# ::snt "Neither one of us is dead, neither one of us is looking to throw hatchets at each other,"Jennifer Aniston tendra que "throw hatchets" hasta destrozarte la vida, pedazo de escoria.
# ::tokens ["\"", "Neither", "one", "of", "us", "is", "dead", ",", "neither", "one", "of", "us", "is", "looking", "to", "throw", "hatchets", "at", "each", "other,\"Jennifer", "Aniston", "tendra", "que", "\"", "throw", "hatchets", "\"", "hasta", "destrozarte", "la", "vida", ",", "pedazo", "de", "escoria", "."]
# ::lemmas ["\"", "neither", "one", "of", "we", "be", "dead", ",", "neither", "one", "of", "we", "be", "look", "to", "throw", "hatchet", "at", "each", "other,\"jennifer", "Aniston", "tendra", "que", "\"", "throw", "hatchet", "\"", "hasta", "destrozarte", "la", "vida", ",", "pedazo", "de", "escoria", "."]
(c18-11 / tendra-00
        :ARG0 (c18-7 / person
                     :name (c18-1 / name
                                  :op1 "Jennifer"
                                  :op2 "Aniston"))
        :ARG1 (c18-13 / throw-01
                      :ARG0 (c18-9 / we
                                   :mod (c18-5 / either))
                      :ARG1 (c18-6 / hatchet)
                      :time (c18-10 / hasta
                                    :op1 (c18-4 / and
                                                :op1 (c18-14 / die-01
                                                             :ARG1 c18-9)
                                                :op2 (c18-8 / look-04
                                                            :ARG0 c18-9
                                                            :ARG1 (c18-12 / throw-01
                                                                          :ARG0 c18-9
                                                                          :ARG1 c18-6
                                                                          :ARG2 (c18-0 / other
                                                                                       :mod (c18-2 / each)))
                                                            :polarity -))))
        :ARG2 (c18-3 / say-01
                     :ARG0 c18-7
                     :ARG1 c18-4
                     :op1 c18-14
                     :op2 c18-8))

# ::snt She is the real life
# ::tokens ["She", "is", "the", "real", "life"]
# ::lemmas ["she", "be", "the", "real", "life"]
(c19-1 / life
       :ARG1-of (c19-0 / real-04)
       :domain (c19-2 / she))

# ::snt I love too!
# ::tokens ["I", "love", "too", "!"]
# ::lemmas ["i", "love", "too", "!"]
(c20-0 / love-01
       :ARG0 (c20-1 / i)
       :mod (c20-2 / too))

# ::snt I love you Princess
# ::tokens ["I", "love", "you", "Princess"]
# ::lemmas ["i", "love", "you", "Princess"]
(c21-1 / say-01
       :ARG0 (c21-4 / i)
       :ARG1 (c21-3 / love-01
                    :ARG0 c21-4
                    :ARG1 (c21-2 / person
                                 :name (c21-0 / name
                                              :op1 "Princess")
                                 :ARG2-of c21-1)))

# ::snt Look at her smirk. Maybe she was just tired of fishing hair out of her mouth.
# ::tokens ["Look", "at", "her", "smirk", ".", "Maybe", "she", "was", "just", "tired", "of", "fishing", "hair", "out", "of", "her", "mouth", "."]
# ::lemmas ["look", "at", "her", "smirk", ".", "maybe", "she", "be", "just", "tired", "of", "fishing", "hair", "out", "of", "her", "mouth", "."]
(c22-4 / multi-sentence
       :snt1 (c22-7 / look-01
                    :ARG0 (c22-3 / you)
                    :ARG1 (c22-5 / smirk-01
                                 :ARG0 (c22-0 / she
                                              :part (c22-6 / mouth)))
                    :mode imperative)
       :snt2 (c22-8 / possible-01
                    :ARG1 (c22-11 / tire-03
                                  :ARG0 (c22-1 / fish-01
                                               :ARG0 (c22-12 / she
                                                             :part c22-6)
                                               :ARG1 (c22-9 / hair)
                                               :direction (c22-2 / out-of
                                                                 :op1 c22-6))
                                  :ARG1 c22-12
                                  :mod (c22-10 / just))))

# ::snt Thats true as well...its our internal voice and instinct that senses danger ahead or somethings not right here. I understand what youre saying.
# ::tokens ["That", "s", "true", "as", "well", "...", "its", "our", "internal", "voice", "and", "instinct", "that", "senses", "danger", "ahead", "or", "somethings", "not", "right", "here", ".", "I", "understand", "what", "you", "re", "saying", "."]
# ::lemmas ["that", "s", "true", "as", "well", "...", "its", "our", "internal", "voice", "and", "instinct", "that", "sense", "danger", "ahead", "or", "something", "not", "right", "here", ".", "i", "understand", "what", "you", "re", "say", "."]
(c23-13 / multi-sentence
        :snt1 (c23-10 / true-01
                      :ARG1 (c23-14 / that)
                      :mod (c23-11 / as-well))
        :snt2 (c23-0 / sense-01
                     :ARG0 (c23-9 / and
                                  :op1 (c23-6 / voice
                                              :ARG1-of (c23-18 / internal-02)
                                              :poss (c23-17 / we))
                                  :op2 (c23-5 / instinct
                                              :poss c23-17))
                     :ARG1 (c23-2 / or
                                  :op1 (c23-20 / danger
                                               :location (c23-8 / ahead))
                                  :op2 (c23-3 / something
                                              :location (c23-7 / here
                                                               :mod (c23-16 / right)
                                                               :polarity -))))
        :snt3 (c23-15 / understand-01
                      :ARG0 (c23-12 / i)
                      :ARG1 (c23-19 / thing
                                    :ARG1-of (c23-1 / say-01
                                                    :ARG0 (c23-4 / you)))))

# ::snt Beautiful on the outside doesnt mean beautiful on the inside. Plus their public persona is completely different than their private one.
# ::tokens ["Beautiful", "on", "the", "outside", "does", "nt", "mean", "beautiful", "on", "the", "inside", ".", "Plus", "their", "public", "persona", "is", "completely", "different", "than", "their", "private", "one", "."]
# ::lemmas ["beautiful", "on", "the", "outside", "do", "not", "mean", "beautiful", "on", "the", "inside", ".", "plus", "their", "public", "persona", "be", "completely", "different", "than", "their", "private", "one", "."]
(c24-2 / multi-sentence
       :snt1 (c24-5 / mean-01
                    :ARG1 (c24-1 / beautiful-02
                                 :ARG1 (c24-0 / outside))
                    :ARG2 (c24-4 / beautiful-02
                                 :ARG1 (c24-10 / inside))
                    :polarity -)
       :snt2 (c24-11 / and
                     :op2 (c24-12 / differ-02
                                  :ARG1 (c24-6 / persona
                                               :poss (c24-9 / they)
                                               :ARG1-of (c24-3 / public-02))
                                  :ARG2 (c24-13 / persona
                                                :poss c24-9
                                                :ARG1-of (c24-7 / private-02))
                                  :ARG1-of (c24-8 / complete-02))))

# ::snt Who cares! She has many unresolved internal issues!!
# ::tokens ["Who", "cares", "!", "She", "has", "many", "unresolved", "internal", "issues", "!", "!"]
# ::lemmas ["who", "care", "!", "she", "have", "many", "unresolved", "internal", "issue", "!", "!"]
(c25-0 / multi-sentence
       :snt1 (c25-6 / care-01
                    :ARG0 (c25-8 / amr-unknown))
       :snt2 (c25-4 / have-03
                    :ARG0 (c25-1 / she)
                    :ARG1 (c25-7 / issue-02
                                 :ARG1-of (c25-3 / resolve-01
                                                 :polarity -)
                                 :ARG1-of (c25-2 / internal-02)
                                 :quant (c25-5 / many))))

# ::snt She would have to posses a heart first.
# ::tokens ["She", "would", "have", "to", "posses", "a", "heart", "first", "."]
# ::lemmas ["she", "would", "have", "to", "posse", "a", "heart", "first", "."]
(c26-1 / obligate-01
       :ARG1 (c26-2 / she)
       :ARG2 (c26-4 / possess-01
                    :ARG0 c26-2
                    :ARG1 (c26-3 / heart))
       :ord (c26-0 / ordinal-entity
                   :value 1))

# ::snt Hi there, are you looking for a Graphic designer? I'm a Graphic Designer.... Please check it out
# ::tokens ["Hi", "there", ",", "are", "you", "looking", "for", "a", "Graphic", "designer", "?", "I", "'m", "a", "Graphic", "Designer", "....", "Please", "check", "it", "out"]
# ::lemmas ["hi", "there", ",", "be", "you", "look", "for", "a", "Graphic", "designer", "?", "i", "be", "a", "Graphic", "Designer", "....", "please", "check", "it", "out"]
(c27-1 / multi-sentence
       :snt1 (c27-3 / say-01
                    :ARG1 (c27-6 / hi)
                    :ARG2 (c27-7 / person
                                 :location (c27-12 / there)
                                 :ARG0-of (c27-8 / look-01
                                                 :ARG1 (c27-2 / person
                                                              :ARG0-of (c27-14 / design-01
                                                                               :ARG1 (c27-13 / graphic)))
                                                 :polarity (c27-5 / amr-unknown)))
                    :snt2 (c27-16 / person
                                  :ARG0-of (c27-10 / design-01
                                                   :ARG1 (c27-11 / graphic))
                                  :domain (c27-15 / i))
                    :snt3 (c27-9 / check-out-05
                                 :ARG0 (c27-0 / you)
                                 :ARG1 (c27-4 / it)
                                 :mode imperative
                                 :polite +)))

# ::snt I guess so!
# ::tokens ["I", "guess", "so", "!"]
# ::lemmas ["i", "guess", "so", "!"]
(c29-0 / guess-01
       :ARG0 (c29-1 / i)
       :ARG1 (c29-2 / so))

# ::snt They got a divorce
# ::tokens ["They", "got", "a", "divorce"]
# ::lemmas ["they", "get", "a", "divorce"]
(c30-0 / divorce-01
       :ARG1 (c30-1 / they))

# ::snt She cant catch a break. A pre-nup should have prevented a fight on a marriage that lasted less than years.
# ::tokens ["She", "ca", "nt", "catch", "a", "break", ".", "A", "pre", "-", "nup", "should", "have", "prevented", "a", "fight", "on", "a", "marriage", "that", "lasted", "less", "than", "years", "."]
# ::lemmas ["she", "can", "not", "catch", "a", "break", ".", "a", "pre", "-", "nup", "should", "have", "prevent", "a", "fight", "on", "a", "marriage", "that", "last", "less", "than", "years", "."]
(c31-3 / multi-sentence
       :snt1 (c31-9 / possible-01
                    :ARG1 (c31-12 / catch-01
                                  :ARG0 (c31-5 / she)
                                  :ARG1 (c31-1 / break-19
                                               :ARG0 c31-5))
                    :polarity -)
       :snt2 (c31-7 / recommend-01
                    :ARG1 (c31-4 / prevent-01
                                 :ARG1 (c31-0 / fight-01
                                              :ARG2 (c31-8 / marry-01
                                                           :ARG1 c31-5
                                                           :duration (c31-10 / less-than
                                                                             :op1 (c31-13 / temporal-quantity
                                                                                          :unit (c31-2 / year)
                                                                                          :quant 1))))
                                 :time (c31-11 / before
                                               :op1 (c31-6 / nup-02
                                                           :ARG1 c31-5)))))

# ::snt She was probably more unhappy in the marriage than out of it.
# ::tokens ["She", "was", "probably", "more", "unhappy", "in", "the", "marriage", "than", "out", "of", "it", "."]
# ::lemmas ["she", "be", "probably", "more", "unhappy", "in", "the", "marriage", "than", "out", "of", "it", "."]
(c32-3 / happy-01
       :ARG1 (c32-2 / she)
       :mod (c32-4 / probable)
       :time (c32-1 / marry-01)
       :ARG2-of (c32-6 / have-degree-91
                       :ARG1 c32-2
                       :ARG3 (c32-5 / more)
                       :ARG4 (c32-0 / out-06
                                    :ARG1 c32-2
                                    :ARG2 c32-1))
       :polarity -)

# ::snt Why is he talking about their divorce. It's theirs business keep it that way. He doesn't have to justify anything to anyone else.
# ::tokens ["Why", "is", "he", "talking", "about", "their", "divorce", ".", "It", "'s", "theirs", "business", "keep", "it", "that", "way", ".", "He", "does", "n't", "have", "to", "justify", "anything", "to", "anyone", "else", "."]
# ::lemmas ["why", "be", "he", "talk", "about", "their", "divorce", ".", "it", "be", "theirs", "business", "keep", "it", "that", "way", ".", "he", "do", "not", "have", "to", "justify", "anything", "to", "anyone", "else", "."]
(c33-2 / multi-sentence
       :snt1 (c33-8 / cause-01
                    :ARG0 (c33-3 / amr-unknown)
                    :ARG1 (c33-14 / talk-01
                                  :ARG0 (c33-5 / he)
                                  :ARG1 (c33-16 / divorce-01
                                                :ARG0 (c33-17 / they))))
       :snt2 (c33-1 / business
                    :poss (c33-11 / he)
                    :ARG0-of (c33-6 / keep-02
                                    :ARG1 c33-16
                                    :manner (c33-9 / way
                                                   :mod (c33-13 / that))))
       :snt3 (c33-0 / obligate-01
                    :ARG1 (c33-4 / he)
                    :ARG2 (c33-12 / justify-01
                                  :ARG0 c33-4
                                  :ARG1 (c33-15 / anything)
                                  :ARG2 (c33-10 / anyone
                                                :mod (c33-7 / else)))
                    :polarity -))

# ::snt Holly Robinson Peete should host Big Brother
# ::tokens ["Holly", "Robinson", "Peete", "should", "host", "Big", "Brother"]
# ::lemmas ["Holly", "Robinson", "Peete", "should", "host", "big", "Brother"]
(c34-2 / recommend-01
       :ARG1 (c34-3 / host-01
                    :ARG0 (c34-4 / person
                                 :name (c34-1 / name
                                              :op1 "Holly"
                                              :op2 "Robinson"
                                              :op3 "Peete"))
                    :ARG1 (c34-0 / broadcast-program
                                 :name (c34-5 / name
                                              :op1 "Big"
                                              :op2 "Brother"))))

# ::snt I like Valarie Bertinillie on the show,,(i know I spelled her name wrong,,sorry)
# ::tokens ["I", "like", "Valarie", "Bertinillie", "on", "the", "show,,(i", "know", "I", "spelled", "her", "name", "wrong,,sorry", ")"]
# ::lemmas ["i", "like", "Valarie", "Bertinillie", "on", "the", "show,,(i", "know", "i", "spell", "her", "name", "wrong,,sorry", ")"]
(c35-2 / multi-sentence
       :snt1 (c35-6 / like-01
                    :ARG0 (c35-9 / i)
                    :ARG1 (c35-5 / person
                                 :name (c35-1 / name
                                              :op1 "Valarie"
                                              :op2 "Bertinillie")
                                 :medium (c35-3 / show)))
       :snt2 (c35-7 / know-01
                    :ARG0 (c35-4 / i)
                    :ARG1 (c35-0 / spell-01
                                 :ARG0 c35-4
                                 :ARG1 c35-1
                                 :poss c35-5)
                    :ARG2-of (c35-8 / wrong-04))
       :ARG2-of (c35-10 / sorry-01
                        :ARG1 c35-4))

# ::snt has also been attacked for choosing not to have children; even as some of her best friends, like Courtney Cox, have bambinos whom she adores and pampers. Jennifer appears to assert that many women dislike her more than men do she has a right to call them out.
# ::tokens ["has", "also", "been", "attacked", "for", "choosing", "not", "to", "have", "children", ";", "even", "as", "some", "of", "her", "best", "friends", ",", "like", "Courtney", "Cox", ",", "have", "bambinos", "whom", "she", "adores", "and", "pampers", ".", "Jennifer", "appears", "to", "assert", "that", "many", "women", "dislike", "her", "more", "than", "men", "do", "she", "has", "a", "right", "to", "call", "them", "out", "."]
# ::lemmas ["have", "also", "be", "attack", "for", "choose", "not", "to", "have", "child", ";", "even", "as", "some", "of", "her", "good", "friend", ",", "like", "Courtney", "Cox", ",", "have", "bambino", "whom", "she", "adore", "and", "pamper", ".", "Jennifer", "appear", "to", "assert", "that", "many", "woman", "dislike", "she", "more", "than", "man", "do", "she", "have", "a", "right", "to", "call", "they", "out", "."]
(c36-15 / multi-sentence
        :snt1 (c36-10 / attack-01
                      :ARG1 (c36-28 / person
                                    :name (c36-25 / name
                                                  :op1 "Jennifer"))
                      :ARG2 (c36-19 / choose-01
                                    :ARG0 c36-28
                                    :ARG1 (c36-5 / have-05
                                                 :ARG0 c36-28
                                                 :ARG1 (c36-13 / child)
                                                 :polarity -))
                      :mod (c36-9 / also)
                      :concession (c36-27 / even-as
                                          :op1 (c36-32 / have-03
                                                       :ARG0 (c36-16 / person
                                                                     :ARG1-of (c36-33 / include-91
                                                                                      :ARG2 (c36-3 / person
                                                                                                   :ARG0-of (c36-4 / have-rel-role-91
                                                                                                                   :ARG1 c36-28
                                                                                                                   :ARG2 (c36-24 / friend
                                                                                                                                 :ARG1-of (c36-21 / have-degree-91
                                                                                                                                                  :ARG2 (c36-11 / good-02
                                                                                                                                                                :ARG1 c36-24)
                                                                                                                                                  :ARG3 (c36-6 / most)))))
                                                                                      :example (c36-1 / person
                                                                                                      :name (c36-17 / name
                                                                                                                    :op1 "Courtney"
                                                                                                                    :op2 "Cox")))
                                                                     :quant (c36-0 / some))
                                                       :ARG1 (c36-8 / and
                                                                    :op1 (c36-14 / bambino
                                                                                 :ARG1-of (c36-34 / adore-01
                                                                                                  :ARG0 c36-28))
                                                                    :op2 (c36-12 / panda)))))
        :snt2 (c36-30 / appear-02
                      :ARG1 (c36-20 / assert-02
                                    :ARG0 (c36-35 / person
                                                  :name (c36-29 / name
                                                                :op1 "Jennifer"))
                                    :ARG1 (c36-26 / right-05
                                                  :ARG1 c36-35
                                                  :ARG2 (c36-2 / call-out-15
                                                               :ARG0 c36-35
                                                               :ARG1 (c36-31 / woman
                                                                             :quant (c36-22 / many)
                                                                             :ARG1-of (c36-7 / have-quant-91
                                                                                             :ARG3 (c36-18 / more)
                                                                                             :ARG4 (c36-23 / man))))))))

# ::snt It's seems that the real issue is Jennifer Aniston with all her 'poor me' bullshit. Maybe she needs to look in the mirror and get some relationship coaching for herself.
# ::tokens ["It", "'s", "seems", "that", "the", "real", "issue", "is", "Jennifer", "Aniston", "with", "all", "her", "'", "poor", "me", "'", "bullshit", ".", "Maybe", "she", "needs", "to", "look", "in", "the", "mirror", "and", "get", "some", "relationship", "coaching", "for", "herself", "."]
# ::lemmas ["it", "be", "seem", "that", "the", "real", "issue", "be", "Jennifer", "Aniston", "with", "all", "she", "'", "poor", "i", "'", "bullshit", ".", "maybe", "she", "need", "to", "look", "in", "the", "mirror", "and", "get", "some", "relationship", "coach", "for", "herself", "."]
(c37-12 / multi-sentence
        :snt1 (c37-0 / seem-01
                     :ARG1 (c37-19 / issue-02
                                   :ARG0 (c37-18 / person
                                                 :name (c37-16 / name
                                                               :op1 "Jennifer"
                                                               :op2 "Aniston")
                                                 :ARG0-of (c37-11 / bullshit-01
                                                                  :ARG1 (c37-7 / i
                                                                               :mod (c37-13 / poor))
                                                                  :mod (c37-10 / all)))
                                   :ARG1-of (c37-17 / real-04)))
        :snt2 (c37-3 / possible-01
                     :ARG1 (c37-14 / need-01
                                   :ARG0 (c37-6 / she)
                                   :ARG1 (c37-9 / and
                                                :op1 (c37-2 / look-01
                                                            :ARG0 c37-6
                                                            :ARG1 (c37-8 / mirror))
                                                :op2 (c37-15 / coach-01
                                                             :ARG0 c37-6
                                                             :ARG1 c37-6
                                                             :ARG2 (c37-4 / relation-03)
                                                             :mod (c37-5 / some)
                                                             :mod (c37-1 / by-oneself))))))

# ::snt Not a keeper
# ::tokens ["Not", "a", "keeper"]
# ::lemmas ["not", "a", "keeper"]
(c38-0 / person
       :ARG0-of (c38-1 / keep-01)
       :polarity -)

# ::snt Cela ne nous intresse pas...
# ::tokens ["Cela", "ne", "nous", "intresse", "pas", "..."]
# ::lemmas ["Cela", "ne", "nous", "intresse", "pas", "..."]
(c40-2 / sense-02
       :ARG1 (c40-1 / nous
                    :domain (c40-0 / pas))
       :polarity -)

# ::snt Vous etes closer ?
# ::tokens ["Vous", "etes", "closer", "?"]
# ::lemmas ["vous", "ete", "close", "?"]
(c41-1 / et-cetera
       :polarity (c41-4 / amr-unknown)
       :ARG1-of (c41-2 / have-degree-91
                       :ARG2 (c41-3 / close-10
                                    :ARG1 c41-1)
                       :ARG3 (c41-0 / more)))

# ::snt il lui a peut-tre dit que les franaises sont les meilleures au lit
# ::tokens ["il", "lui", "a", "peut", "-", "tre", "dit", "que", "les", "franaises", "sont", "les", "meilleures", "au", "lit"]
# ::lemmas ["il", "lui", "a", "peut", "-", "tre", "dit", "que", "les", "franaise", "sont", "les", "meilleure", "au", "light"]
(c42-4 / cause-01
       :ARG0 (c42-2 / exist-01
                    :ARG1 (c42-0 / franaise)
                    :polarity -)
       :ARG1 (c42-3 / have-mod-91
                    :ARG1 c42-0
                    :ARG2 (c42-1 / meilleure
                                 :mod (c42-5 / au-lit))))

# ::snt Franchement jen sais Rien mais a reste de lordre priv et cest toujours douloureux une sparation je sais bien
# ::tokens ["Franchement", "jen", "sais", "Rien", "mais", "a", "reste", "de", "lordre", "priv", "et", "cest", "toujours", "douloureux", "une", "sparation", "je", "sais", "bien"]
# ::lemmas ["Franchement", "jen", "sais", "Rien", "mais", "a", "reste", "de", "lordre", "priv", "et", "c", "toujour", "douloureux", "une", "sparation", "je", "sais", "bien"]
(c43-1 / multi-sentence
       :snt1 (c43-2 / say-01
                    :ARG0 (c43-8 / i)
                    :ARG1 (c43-6 / person
                                 :name (c43-0 / name
                                              :op1 "Franchement"))
                    :ARG2 (c43-3 / person
                                 :name (c43-5 / name
                                              :op1 "Rien")))
       :snt2 (c43-9 / and
                    :op1 (c43-4 / reste
                                :poss (c43-10 / person
                                              :name (c43-7 / name
                                                           :op1 " lordre"
                                                           :op2 "poss ( person_3 :name ( name_3 :op1 ")))))

# ::snt Vraiment rien secouer..... Si si je confirme
# ::tokens ["Vraiment", "rien", "secouer", ".....", "Si", "si", "je", "confirme"]
# ::lemmas ["Vraiment", "rien", "secouer", ".....", "Si", "si", "je", "confirme"]
(c44-2 / multi-sentence
       :snt1 (c44-5 / vraiment-00
                    :ARG1 (c44-6 / person
                                 :name (c44-1 / name
                                              :op1 "Rien"
                                              :op2 "Sante")))
       :snt2 (c44-3 / si
                    :mode expressive)
       :snt3 (c44-4 / possible-01
                    :ARG1 (c44-7 / confirme-01
                                 :ARG0 (c44-0 / you))))

# ::snt Car Brad Pitt est plus avec Angelina
# ::tokens ["Car", "Brad", "Pitt", "est", "plus", "avec", "Angelina"]
# ::lemmas ["car", "Brad", "Pitt", "est", "plus", "avec", "Angelina"]
(c45-5 / and
       :op1 (c45-2 / est-cetera
                   :domain (c45-4 / person
                                  :name (c45-0 / name
                                               :op1 "Car"
                                               :op2 "Brad"
                                               :op3 "Pitt")))
       :op2 (c45-6 / est-a-cetera
                   :domain (c45-1 / person
                                  :name (c45-3 / name
                                               :op1 "Angelina"))))

# ::snt I think youre on to something
# ::tokens ["I", "think", "you", "re", "on", "to", "something"]
# ::lemmas ["i", "think", "you", "re", "on", "to", "something"]
(c46-4 / think-01
       :ARG0 (c46-3 / i)
       :ARG1 (c46-0 / on-to-01
                    :ARG0 (c46-1 / you)
                    :ARG1 (c46-2 / something)))

# ::snt Maybe he thought she said dry thighs
# ::tokens ["Maybe", "he", "thought", "she", "said", "dry", "thighs"]
# ::lemmas ["maybe", "he", "think", "she", "say", "dry", "thigh"]
(c47-3 / possible-01
       :ARG1 (c47-4 / think-01
                    :ARG0 (c47-2 / he)
                    :ARG1 (c47-1 / say-01
                                 :ARG0 (c47-0 / she)
                                 :ARG1 (c47-6 / thigh
                                              :ARG1-of (c47-5 / dry-08)))))

# ::snt why
# ::tokens ["why"]
# ::lemmas ["why"]
(c48-0 / cause-01
       :ARG0 (c48-1 / amr-unknown))

# ::snt latest case the very least of this JUST DOESN'T ADD UP (March , ; :37 PDT)
# ::tokens ["latest", "case", "the", "very", "least", "of", "this", "JUST", "DOESN'T", "ADD", "UP", "(", "March", ",", ";", ":", "37", "PDT", ")"]
# ::lemmas ["late", "case", "the", "very", "least", "of", "this", "just", "doesn't", "add", "UP", "(", "March", ",", ";", ":", "37", "PDT", ")"]
(c49-8 / add-up-04
       :ARG1 (c49-4 / case-04
                    :ARG1-of (c49-1 / have-quant-91
                                    :ARG3 (c49-2 / least
                                                 :degree (c49-0 / very))
                                    :ARG5 (c49-6 / this))
                    :mod (c49-10 / last))
       :mod (c49-7 / just)
       :ARG1-of (c49-9 / describe-01
                       :ARG0 (c49-3 / publication
                                    :time (c49-5 / date-entity
                                                 :month 3
                                                 :day 37
                                                 :timezone "PST")))
       :polarity -)

# ::snt that sure DOESN'T sound like he's "heartbroken over (March , ; :37 PDT)
# ::tokens ["that", "sure", "DOESN'T", "sound", "like", "he", "'s", "\"", "heartbroken", "over", "(", "March", ",", ";", ":", "37", "PDT", ")"]
# ::lemmas ["that", "sure", "doesn't", "sound", "like", "he", "be", "\"", "heartbroken", "over", "(", "March", ",", ";", ":", "37", "PDT", ")"]
(c50-2 / sound-01
       :ARG1 (c50-4 / that)
       :ARG2 (c50-1 / break-heart-31
                    :ARG1 (c50-3 / he))
       :ARG1-of (c50-0 / sure-02)
       :time (c50-5 / date-entity
                    :month 3
                    :day 37
                    :timezone "PST")
       :polarity -)
