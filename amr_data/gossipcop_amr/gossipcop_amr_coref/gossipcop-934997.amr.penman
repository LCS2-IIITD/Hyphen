# ::snt doesnt remember after she was on the show for a year and is shunnedthat he didnt get an invite to the wedding?
# ::tokens ["does", "nt", "remember", "after", "she", "was", "on", "the", "show", "for", "a", "year", "and", "is", "shunnedthat", "he", "did", "nt", "get", "an", "invite", "to", "the", "wedding", "?"]
# ::lemmas ["do", "not", "remember", "after", "she", "be", "on", "the", "show", "for", "a", "year", "and", "be", "shunnedthat", "he", "do", "not", "get", "an", "invite", "to", "the", "wedding", "?"]
(c1-4 / remember-01
      :ARG1 (c1-11 / get-01
                   :ARG0 (c1-5 / he)
                   :ARG1 (c1-9 / invite-01
                               :ARG1 c1-5
                               :ARG2 (c1-6 / wed-01))
                   :time (c1-10 / after
                                :op1 (c1-12 / and
                                            :op1 (c1-1 / be-located-at-91
                                                       :ARG1 (c1-3 / she)
                                                       :ARG2 (c1-0 / show)
                                                       :duration (c1-8 / temporal-quantity
                                                                       :unit (c1-2 / year)
                                                                       :quant 1))
                                            :op2 (c1-13 / shun-01
                                                        :ARG1 c1-3)))
                   :polarity -)
      :polarity (c1-7 / amr-unknown)
      :polarity -)

# ::snt That makes at least two of us
# ::tokens ["That", "makes", "at", "least", "two", "of", "us"]
# ::lemmas ["that", "make", "at", "least", "two", "of", "we"]
(c2-0 / make-02
      :ARG0 (c2-3 / that)
      :ARG1 (c2-1 / person
                  :quant (c2-5 / at-least
                               :op1 2)
                  :ARG1-of (c2-4 / include-91
                                 :ARG2 (c2-2 / we))))

# ::snt she rubbed his head and said "genie grant me a wish" Thats why he doesnt remember
# ::tokens ["she", "rubbed", "his", "head", "and", "said", "\"", "genie", "grant", "me", "a", "wish", "\"", "That", "s", "why", "he", "does", "nt", "remember"]
# ::lemmas ["she", "rub", "his", "head", "and", "say", "\"", "genie", "grant", "i", "a", "wish", "\"", "that", "s", "why", "he", "do", "not", "remember"]
(c3-7 / cause-01
      :ARG0 (c3-10 / that)
      :ARG1 (c3-3 / remember-01
                  :ARG0 (c3-5 / he
                              :part (c3-9 / head))
                  :polarity -)
      :ARG1 (c3-4 / and
                  :op1 (c3-12 / rub-01
                              :ARG0 (c3-2 / she)
                              :ARG1 c3-9)
                  :op2 (c3-0 / say-01
                             :ARG0 c3-2
                             :ARG1 (c3-11 / grant-01
                                          :ARG0 (c3-6 / person
                                                      :name (c3-1 / name
                                                                  :op1 "genie"))
                                          :ARG1 (c3-8 / wish-01)
                                          :ARG2 c3-5))))

# ::snt Why is this news?
# ::tokens ["Why", "is", "this", "news", "?"]
# ::lemmas ["why", "be", "this", "news", "?"]
(c4-2 / news
      :mod (c4-3 / this)
      :ARG1-of (c4-1 / cause-01
                     :ARG0 (c4-0 / amr-unknown)))

# ::snt Hell, Howie probably doesn't even remember "The Banker" (Peter Abbay btw)
# ::tokens ["Hell", ",", "Howie", "probably", "does", "n't", "even", "remember", "\"", "The", "Banker", "\"", "(", "Peter", "Abbay", "btw", ")"]
# ::lemmas ["hell", ",", "Howie", "probably", "do", "not", "even", "remember", "\"", "The", "Banker", "\"", "(", "Peter", "Abbay", "btw", ")"]
(c5-6 / probable
      :domain (c5-3 / remember-01
                    :ARG0 (c5-2 / person
                                :name (c5-1 / name
                                            :op1 "Howie"))
                    :ARG1 (c5-0 / book
                                :name (c5-5 / name
                                            :op1 "The"
                                            :op2 "Banker")
                                :ARG1-of (c5-10 / author-01
                                                :ARG0 (c5-11 / person
                                                             :name (c5-7 / name
                                                                         :op1 "Peter"
                                                                         :op2 "Abbay"))
                                                :mod (c5-8 / by-the-way)))
                    :mod (c5-4 / even)
                    :polarity -)
      :mod (c5-9 / hell
                 :mode expressive))

# ::snt Lmao, He said NOPE, not going to get me to admit to checking those women out...
# ::tokens ["Lmao", ",", "He", "said", "NOPE", ",", "not", "going", "to", "get", "me", "to", "admit", "to", "checking", "those", "women", "out", "..."]
# ::lemmas ["Lmao", ",", "he", "say", "NOPE", ",", "not", "go", "to", "get", "i", "to", "admit", "to", "check", "those", "woman", "out", "..."]
(c6-8 / and
      :op1 (c6-3 / laugh-01
                 :ARG0 (c6-7 / i)
                 :manner (c6-11 / loud))
      :op2 (c6-1 / say-01
                 :ARG0 (c6-2 / he)
                 :ARG1 (c6-0 / nOPE)
                 :ARG0-of (c6-4 / cause-01
                                :ARG1 (c6-9 / get-04
                                            :ARG0 c6-2
                                            :ARG1 (c6-10 / admit-01
                                                         :ARG0 c6-7
                                                         :ARG1 (c6-12 / check-out-05
                                                                      :ARG0 c6-7
                                                                      :ARG1 (c6-5 / woman
                                                                                  :mod (c6-6 / that))))
                                            :polarity -))))

# ::snt Good for him so sick of her she is worse than a kardashian
# ::tokens ["Good", "for", "him", "so", "sick", "of", "her", "she", "is", "worse", "than", "a", "kardashian"]
# ::lemmas ["good", "for", "he", "so", "sick", "of", "she", "she", "be", "bad", "than", "a", "kardashian"]
(c7-9 / good-04
      :ARG2 (c7-5 / he)
      :ARG1-of (c7-7 / cause-01
                     :ARG0 (c7-4 / sick-05
                                 :ARG0 (c7-0 / she)
                                 :ARG1 c7-5
                                 :degree (c7-11 / so)
                                 :ARG6 (c7-8 / have-degree-91
                                             :ARG1 c7-0
                                             :ARG2 (c7-1 / bad-07
                                                         :ARG1 c7-0)
                                             :ARG3 (c7-2 / more)
                                             :ARG4 (c7-6 / person
                                                         :mod (c7-10 / country
                                                                     :name (c7-3 / name
                                                                                 :op1 "Kardashia")))))))

# ::snt Wasnt there like women all dressed up the same? Why would he?
# ::tokens ["Was", "nt", "there", "like", "women", "all", "dressed", "up", "the", "same", "?", "Why", "would", "he", "?"]
# ::lemmas ["be", "not", "there", "like", "woman", "all", "dress", "up", "the", "same", "?", "why", "would", "he", "?"]
(c8-0 / multi-sentence
      :snt1 (c8-2 / resemble-01
                  :ARG1 (c8-4 / woman
                              :mod (c8-9 / all)
                              :ARG1-of (c8-10 / dress-up-02
                                              :ARG1-of (c8-1 / same-01)))
                  :ARG2 (c8-7 / there)
                  :polarity (c8-8 / amr-unknown)
                  :polarity -)
      :snt2 (c8-5 / cause-01
                  :ARG0 (c8-6 / amr-unknown)
                  :ARG1 (c8-3 / he)))

# ::snt Who cares?
# ::tokens ["Who", "cares", "?"]
# ::lemmas ["who", "care", "?"]
(c9-0 / care-01
      :ARG0 (c9-1 / amr-unknown))

# ::snt Whos Howie Mandel?
# ::tokens ["Who", "s", "Howie", "Mandel", "?"]
# ::lemmas ["who", "s", "Howie", "Mandel", "?"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Howie"
                    :op2 "Mandel")
       :mod (c10-2 / amr-unknown))

# ::snt I don't remember 'Deal or No Deal'
# ::tokens ["I", "do", "n't", "remember", "'", "Deal", "or", "No", "Deal", "'"]
# ::lemmas ["i", "do", "not", "remember", "'", "deal", "or", "no", "deal", "'"]
(c11-0 / remember-01
       :ARG0 (c11-3 / i)
       :ARG1 (c11-1 / book
                    :name (c11-2 / name
                                 :op1 "Deal"
                                 :op2 "or"
                                 :op3 "No"
                                 :op4 "Deal"))
       :polarity -)

# ::snt Ahh f it then. The wedding is off l!!!!!
# ::tokens ["Ahh", "f", "it", "then", ".", "The", "wedding", "is", "off", "l", "!", "!", "!", "!", "!"]
# ::lemmas ["Ahh", "f", "it", "then", ".", "the", "wedding", "be", "off", "l", "!", "!", "!", "!", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-4 / it
                    :mod (c12-2 / ah
                                :mode expressive)
                    :time (c12-5 / then))
       :snt2 (c12-0 / off
                    :domain (c12-3 / wed-01)))

# ::snt She's actually a very smart woman. She also had excellent penmanship for a year old.
# ::tokens ["She", "'s", "actually", "a", "very", "smart", "woman", ".", "She", "also", "had", "excellent", "penmanship", "for", "a", "year", "old", "."]
# ::lemmas ["she", "be", "actually", "a", "very", "smart", "woman", ".", "she", "also", "have", "excellent", "penmanship", "for", "a", "year", "old", "."]
(c13-2 / multi-sentence
       :snt1 (c13-8 / woman
                    :ARG1-of (c13-3 / smart-06
                                    :degree (c13-4 / very)
                                    :ARG1-of (c13-11 / actual-02))
                    :domain (c13-0 / she))
       :snt2 (c13-6 / have-03
                    :ARG0 (c13-12 / she)
                    :ARG1 (c13-7 / penmanship
                                 :ARG1-of (c13-5 / excellent-02)
                                 :duration (c13-9 / temporal-quantity
                                                  :unit (c13-1 / year)
                                                  :quant 1))
                    :mod (c13-10 / also)))

# ::snt This is Howie we're talking about.
# ::tokens ["This", "is", "Howie", "we", "'re", "talking", "about", "."]
# ::lemmas ["this", "be", "Howie", "we", "be", "talk", "about", "."]
(c14-3 / talk-01
       :ARG0 (c14-2 / we)
       :ARG1 (c14-1 / person
                    :name (c14-0 / name
                                 :op1 "Howie")
                    :domain (c14-4 / this)))

# ::snt . Getting tired of media trying to morph this opportunist into another Grace Kelly. has a lot of work ahead of them to spiff this one up.
# ::tokens [".", "Getting", "tired", "of", "media", "trying", "to", "morph", "this", "opportunist", "into", "another", "Grace", "Kelly", ".", "has", "a", "lot", "of", "work", "ahead", "of", "them", "to", "spiff", "this", "one", "up", "."]
# ::lemmas [".", "get", "tired", "of", "medium", "try", "to", "morph", "this", "opportunist", "into", "another", "Grace", "Kelly", ".", "have", "a", "lot", "of", "work", "ahead", "of", "they", "to", "spiff", "this", "one", "up", "."]
(c15-1 / multi-sentence
       :snt1 (c15-11 / tire-03
                     :ARG0 (c15-6 / media)
                     :ARG1 (c15-13 / try-01
                                   :ARG0 c15-6
                                   :ARG1 (c15-16 / morph-01
                                                 :ARG0 c15-6
                                                 :ARG1 (c15-0 / opportunist
                                                              :mod (c15-12 / this))
                                                 :ARG2 (c15-7 / person
                                                              :name (c15-2 / name
                                                                           :op1 "Grace"
                                                                           :op2 "Kelly")
                                                              :mod (c15-4 / another)))))
       :snt2 (c15-8 / have-03
                    :ARG0 (c15-5 / they)
                    :ARG1 (c15-10 / work-01
                                  :ARG0 c15-5
                                  :ARG1 (c15-3 / spiff-up-02
                                               :ARG0 c15-5
                                               :ARG1 (c15-14 / this))
                                  :quant (c15-9 / lot))
                    :time (c15-15 / ahead)))

# ::snt Saved gif for a better tweet!
# ::tokens ["Saved", "gif", "for", "a", "better", "tweet", "!"]
# ::lemmas ["save", "gif", "for", "a", "well", "tweet", "!"]
(c16-5 / gift
       :ARG1-of (c16-1 / save-02
                       :purpose (c16-4 / tweet-01
                                       :ARG1-of (c16-2 / have-degree-91
                                                       :ARG2 (c16-3 / good-02
                                                                    :ARG1 c16-4)
                                                       :ARG3 (c16-0 / more)))))

# ::snt Now that's something.
# ::tokens ["Now", "that", "'s", "something", "."]
# ::lemmas ["now", "that", "be", "something", "."]
(c17-2 / something
       :domain (c17-1 / that)
       :time (c17-0 / now))

# ::snt Nor do I
# ::tokens ["Nor", "do", "I"]
# ::lemmas ["nor", "do", "i"]
(c18-0 / do-02
       :ARG0 (c18-1 / i)
       :polarity -)

# ::snt Howie has always been wrapped up in Howie. Maybe its just me, but she stands out like a shining jewel.
# ::tokens ["Howie", "has", "always", "been", "wrapped", "up", "in", "Howie", ".", "Maybe", "its", "just", "me", ",", "but", "she", "stands", "out", "like", "a", "shining", "jewel", "."]
# ::lemmas ["Howie", "have", "always", "be", "wrap", "up", "in", "Howie", ".", "maybe", "its", "just", "i", ",", "but", "she", "stand", "out", "like", "a", "shine", "jewel", "."]
(c19-2 / multi-sentence
       :snt1 (c19-7 / wrap-up-02
                    :ARG1 (c19-6 / person
                                 :name (c19-1 / name
                                              :op1 "Howie")
                                 :ARG2-of c19-7)
                    :time (c19-11 / always))
       :snt2 (c19-8 / contrast-01
                    :ARG1 (c19-3 / possible-01
                                 :ARG1 (c19-10 / i
                                               :mod (c19-9 / just)))
                    :ARG2 (c19-4 / stand-out-06
                                 :ARG1 c19-6
                                 :ARG1-of (c19-5 / resemble-01
                                                 :ARG2 (c19-12 / jewel
                                                               :ARG1-of (c19-0 / shine-01))))))

# ::snt Did he get an invite?
# ::tokens ["Did", "he", "get", "an", "invite", "?"]
# ::lemmas ["do", "he", "get", "an", "invite", "?"]
(c20-1 / invite-01
       :polarity (c20-2 / amr-unknown)
       :ARG1 (c20-0 / he))

# ::snt There are alot of people who I don't remember. I don't see why this is news.
# ::tokens ["There", "are", "alot", "of", "people", "who", "I", "do", "n't", "remember", ".", "I", "do", "n't", "see", "why", "this", "is", "news", "."]
# ::lemmas ["there", "be", "alot", "of", "people", "who", "i", "do", "not", "remember", ".", "i", "do", "not", "see", "why", "this", "be", "news", "."]
(c21-0 / multi-sentence
       :snt1 (c21-5 / person
                    :quant (c21-6 / lot)
                    :ARG1-of (c21-4 / remember-01
                                    :ARG0 (c21-8 / i)
                                    :polarity -))
       :snt2 (c21-2 / see-01
                    :ARG0 (c21-3 / i)
                    :ARG1 (c21-9 / thing
                                 :ARG0-of (c21-7 / cause-01
                                                 :ARG1 (c21-1 / news
                                                              :domain (c21-10 / this))))
                    :polarity -))

# ::snt Now you will never forget her.
# ::tokens ["Now", "you", "will", "never", "forget", "her", "."]
# ::lemmas ["now", "you", "will", "never", "forget", "she", "."]
(c22-0 / forget-01
       :ARG0 (c22-1 / you)
       :ARG1 (c22-3 / she)
       :time (c22-4 / ever)
       :time (c22-2 / now)
       :polarity -)

# ::snt I dont remember you too Howie.
# ::tokens ["I", "do", "nt", "remember", "you", "too", "Howie", "."]
# ::lemmas ["i", "do", "not", "remember", "you", "too", "Howie", "."]
(c23-1 / say-01
       :ARG0 (c23-4 / i)
       :ARG1 (c23-2 / remember-01
                    :ARG0 c23-4
                    :ARG1 (c23-3 / person
                                 :name (c23-0 / name
                                              :op1 "Howie"))
                    :mod (c23-5 / too)
                    :polarity -)
       :ARG2 c23-3)

# ::snt Omg meghan was box ?!? / is ... half life release date confirmed as the royal wedding!!!
# ::tokens ["Omg", "meghan", "was", "box", "?", "!", "?", "/", "is", "...", "half", "life", "release", "date", "confirmed", "as", "the", "royal", "wedding", "!", "!", "!"]
# ::lemmas ["Omg", "meghan", "be", "box", "?", "!", "?", "/", "be", "...", "half", "life", "release", "date", "confirm", "as", "the", "royal", "wedding", "!", "!", "!"]
(c24-3 / multi-sentence
       :snt1 (c24-1 / box
                    :polarity (c24-10 / amr-unknown)
                    :domain (c24-6 / person
                                   :name (c24-2 / name
                                                :op1 "Meghan"))
                    :mod (c24-0 / oh-my-god
                                :mode expressive))
       :snt2 (c24-8 / confirm-01
                    :ARG1 (c24-11 / date
                                  :time-of (c24-4 / release-01
                                                  :ARG1 (c24-7 / life
                                                               :mod (c24-5 / half))))
                    :ARG3 (c24-9 / wed-01
                                 :mod (c24-12 / royal))))

# ::snt no she's joing the royal family
# ::tokens ["no", "she", "'s", "joing", "the", "royal", "family"]
# ::lemmas ["no", "she", "be", "joe", "the", "royal", "family"]
(c25-1 / joe-01
       :ARG0 (c25-3 / she)
       :ARG1 (c25-0 / family
                    :mod (c25-2 / royal)))

# ::snt Hi
# ::tokens ["Hi"]
# ::lemmas ["hi"]
(c26-0 / hi)

# ::snt She was just an extra back then sooo dont think hed be there chatting with the girls with suitcases
# ::tokens ["She", "was", "just", "an", "extra", "back", "then", "sooo", "do", "nt", "think", "he", "d", "be", "there", "chatting", "with", "the", "girls", "with", "suitcases"]
# ::lemmas ["she", "be", "just", "an", "extra", "back", "then", "sooo", "do", "not", "think", "he", "d", "be", "there", "chat", "with", "the", "girl", "with", "suitcase"]
(c27-7 / cause-01
       :ARG0 (c27-4 / extra
                    :domain (c27-3 / she)
                    :mod (c27-8 / just)
                    :time (c27-10 / then
                                  :mod (c27-1 / back)))
       :ARG1 (c27-12 / think-01
                     :ARG0 (c27-9 / i)
                     :ARG1 (c27-5 / be-located-at-91
                                  :ARG1 c27-9
                                  :ARG2 (c27-11 / there)
                                  :accompanier (c27-2 / girl
                                                      :ARG0-of (c27-6 / have-03
                                                                      :ARG1 (c27-0 / suitcase))))
                     :polarity -))

# ::snt Guess she not one of the girls he slept with.
# ::tokens ["Guess", "she", "not", "one", "of", "the", "girls", "he", "slept", "with", "."]
# ::lemmas ["guess", "she", "not", "one", "of", "the", "girl", "he", "sleep", "with", "."]
(c28-6 / guess-01
       :ARG0 (c28-5 / i)
       :ARG1 (c28-4 / girl
                    :ARG1-of (c28-2 / include-91
                                    :ARG2 (c28-7 / girl
                                                 :ARG4-of (c28-1 / sleep-01
                                                                 :ARG0 (c28-3 / he)))
                                    :polarity -)
                    :domain (c28-0 / she)))

# ::snt 's Gart Condit(sic).
# ::tokens ["'s", "Gart", "Condit(sic", ")", "."]
# ::lemmas ["be", "Gart", "Condit(sic", ")", "."]
(c29-1 / person
       :name (c29-0 / name
                    :op1 "Gart"
                    :op2 "Condit"))

# ::snt That briefcase must have had a whole lot of Who gives a shit in it..
# ::tokens ["That", "briefcase", "must", "have", "had", "a", "whole", "lot", "of", "Who", "gives", "a", "shit", "in", "it", ".."]
# ::lemmas ["that", "briefcase", "must", "have", "have", "a", "whole", "lot", "of", "who", "give", "a", "shit", "in", "it", ".."]
(c30-6 / infer-01
       :ARG1 (c30-2 / have-03
                    :ARG0 (c30-0 / briefcase
                                 :mod (c30-7 / that))
                    :ARG1 (c30-3 / lot
                                 :mod (c30-5 / whole)
                                 :quant-of (c30-4 / person
                                                  :ARG0-of (c30-8 / give-16
                                                                  :ARG1 (c30-1 / shit-01)
                                                                  :ARG2 c30-0)))))

# ::snt I get more useful information from my farts
# ::tokens ["I", "get", "more", "useful", "information", "from", "my", "farts"]
# ::lemmas ["i", "get", "more", "useful", "information", "from", "my", "fart"]
(c31-5 / get-01
       :ARG0 (c31-4 / i)
       :ARG1 (c31-2 / information
                    :ARG1-of (c31-6 / useful-05
                                    :ARG2-of (c31-3 / have-degree-91
                                                    :ARG1 c31-2
                                                    :ARG3 (c31-1 / more))))
       :ARG2 (c31-0 / fart-01
                    :ARG0 c31-4))

# ::snt BIG NEWS!
# ::tokens ["BIG", "NEWS", "!"]
# ::lemmas ["big", "news", "!"]
(c32-1 / news
       :mod (c32-0 / big))

# ::snt It's because of how you conduct yourself. Focused, none attention seeker, behaved, keeping to oneself ... She's a princess right from the start.
# ::tokens ["It", "'s", "because", "of", "how", "you", "conduct", "yourself", ".", "Focused", ",", "none", "attention", "seeker", ",", "behaved", ",", "keeping", "to", "oneself", "...", "She", "'s", "a", "princess", "right", "from", "the", "start", "."]
# ::lemmas ["it", "be", "because", "of", "how", "you", "conduct", "yourself", ".", "focused", ",", "none", "attention", "seeker", ",", "behave", ",", "keep", "to", "oneself", "...", "she", "be", "a", "princess", "right", "from", "the", "start", "."]
(c33-10 / multi-sentence
        :snt1 (c33-12 / cause-01
                      :ARG0 (c33-7 / thing
                                   :manner-of (c33-8 / conduct-01
                                                     :ARG0 (c33-3 / you
                                                                  :ARG1-of c33-8))))
        :snt2 (c33-6 / and
                     :op1 (c33-14 / focus-01
                                  :ARG1 (c33-17 / person
                                                :ARG0-of (c33-0 / seek-01
                                                                :ARG1 (c33-5 / attend-02))
                                                :mod (c33-15 / none)))
                     :op2 (c33-9 / behave-01
                                 :ARG0 c33-17)
                     :op3 (c33-4 / keep-02
                                 :ARG0 c33-17
                                 :ARG1 (c33-13 / to-oneself))
                     :op4 (c33-11 / princess
                                  :domain (c33-2 / she)
                                  :time (c33-18 / from
                                                :op1 (c33-1 / start-01)
                                                :mod (c33-16 / right)))))

# ::snt Its not where you are from!! Its where you are going!! Howie Mandel doesnt need to remember Meghan!! I am sure she doesnt remember him either - And thats more important!!!
# ::tokens ["Its", "not", "where", "you", "are", "from", "!", "!", "Its", "where", "you", "are", "going", "!", "!", "Howie", "Mandel", "does", "nt", "need", "to", "remember", "Meghan", "!", "!", "I", "am", "sure", "she", "does", "nt", "remember", "him", "either", "-", "And", "that", "s", "more", "important", "!", "!", "!"]
# ::lemmas ["its", "not", "where", "you", "be", "from", "!", "!", "its", "where", "you", "be", "go", "!", "!", "Howie", "Mandel", "do", "not", "need", "to", "remember", "Meghan", "!", "!", "i", "be", "sure", "she", "do", "not", "remember", "he", "either", "-", "and", "that", "s", "more", "important", "!", "!", "!"]
(c34-13 / multi-sentence
        :snt1 (c34-12 / be-from-91
                      :ARG1 (c34-3 / you)
                      :polarity -)
        :snt2 (c34-8 / go-02
                     :ARG0 (c34-9 / you)
                     :ARG4 (c34-22 / it))
        :snt3 (c34-16 / need-01
                      :ARG0 (c34-19 / person
                                    :name (c34-15 / name
                                                  :op1 "Howie"
                                                  :op2 "Mandel"))
                      :ARG1 (c34-17 / remember-01
                                    :ARG0 c34-19
                                    :ARG1 (c34-14 / person
                                                  :name (c34-20 / name
                                                                :op1 "Meghan")))
                      :polarity -)
        :snt4 (c34-0 / sure-02
                     :ARG0 (c34-4 / i)
                     :ARG1 (c34-1 / remember-01
                                  :ARG0 (c34-2 / she)
                                  :ARG1 (c34-5 / he)
                                  :mod (c34-18 / either)
                                  :polarity -))
        :snt5 (c34-7 / and
                     :op2 (c34-11 / important-01
                                  :ARG1 (c34-10 / that)
                                  :ARG2-of (c34-21 / have-degree-91
                                                   :ARG1 c34-10
                                                   :ARG3 (c34-6 / more)))))

# ::snt Please do not purchase Nissan Sentra Incase of an accident the airbags do not deploy but the ford car deployed all airbags North America
# ::tokens ["Please", "do", "not", "purchase", "Nissan", "Sentra", "Incase", "of", "an", "accident", "the", "airbags", "do", "not", "deploy", "but", "the", "ford", "car", "deployed", "all", "airbags", "North", "America"]
# ::lemmas ["please", "do", "not", "purchase", "Nissan", "Sentra", "Incase", "of", "an", "accident", "the", "airbag", "do", "not", "deploy", "but", "the", "ford", "car", "you", "all", "airbag", "North", "America"]
(c35-5 / multi-sentence
       :snt1 (c35-7 / purchase-01
                    :ARG0 (c35-3 / you)
                    :ARG1 (c35-8 / car
                                 :name (c35-4 / name
                                              :op1 "Nissan"
                                              :op2 "Sentra"
                                              :op3 "Incase"))
                    :ARG1-of (c35-14 / cause-01
                                     :ARG0 (c35-12 / accident))
                    :polarity -
                    :mode imperative
                    :polite +)
       :snt2 (c35-10 / contrast-01
                     :ARG1 (c35-13 / deploy-01
                                   :ARG1 (c35-11 / airbag)
                                   :polarity -)
                     :ARG2 (c35-9 / deploy-01
                                  :ARG1 (c35-0 / car
                                               :mod (c35-1 / ford))
                                  :ARG2 (c35-2 / continent
                                               :name (c35-6 / name
                                                            :op1 "North"
                                                            :op2 "America")))))

# ::snt Best answer he could give. Whether its true or not.
# ::tokens ["Best", "answer", "he", "could", "give", ".", "Whether", "its", "true", "or", "not", "."]
# ::lemmas ["good", "answer", "he", "could", "give", ".", "whether", "its", "true", "or", "not", "."]
(c36-0 / multi-sentence
       :snt1 (c36-9 / good-02
                    :ARG1 (c36-6 / thing
                                 :ARG2-of (c36-8 / answer-01)
                                 :ARG1-of (c36-7 / give-01
                                                 :ARG0 (c36-2 / he)
                                                 :ARG1-of (c36-3 / possible-01)))
                    :ARG2-of (c36-5 / have-degree-91
                                    :ARG1 c36-6
                                    :ARG3 (c36-4 / most)))
       :snt2 (c36-1 / regardless-91
                    :ARG2 (c36-11 / true-01
                                  :ARG1 (c36-10 / it))))

# ::snt But fate remembers her.
# ::tokens ["But", "fate", "remembers", "her", "."]
# ::lemmas ["but", "fate", "remember", "she", "."]
(c37-1 / contrast-01
       :ARG2 (c37-3 / remember-01
                    :ARG0 (c37-2 / fate)
                    :ARG1 (c37-0 / she)))

# ::snt So does remember any of the girls on there
# ::tokens ["So", "does", "remember", "any", "of", "the", "girls", "on", "there"]
# ::lemmas ["so", "do", "remember", "any", "of", "the", "girl", "on", "there"]
(c38-0 / remember-01
       :ARG1 (c38-4 / girl
                    :mod (c38-1 / any)
                    :location (c38-3 / there))
       :polarity (c38-2 / amr-unknown))

# ::snt She probably doesnt remember him either. Moved onto bigger things a long time ago
# ::tokens ["She", "probably", "does", "nt", "remember", "him", "either", ".", "Moved", "onto", "bigger", "things", "a", "long", "time", "ago"]
# ::lemmas ["she", "probably", "do", "not", "remember", "he", "either", ".", "move", "onto", "big", "thing", "a", "long", "time", "ago"]
(c39-1 / multi-sentence
       :snt1 (c39-4 / remember-01
                    :ARG0 (c39-3 / she)
                    :ARG1 (c39-6 / he)
                    :mod (c39-5 / either)
                    :mod (c39-7 / probable)
                    :polarity -)
       :snt2 (c39-8 / move-01
                    :ARG2 (c39-12 / thing
                                  :ARG1-of (c39-11 / have-degree-91
                                                   :ARG2 (c39-0 / big)
                                                   :ARG3 (c39-13 / more)))
                    :time (c39-9 / before
                                 :op1 (c39-2 / now)
                                 :quant (c39-14 / time
                                                :ARG1-of (c39-10 / long-03)))))

# ::snt Umm...why would he? lol
# ::tokens ["Umm", "...", "why", "would", "he", "?", "lol"]
# ::lemmas ["Umm", "...", "why", "would", "he", "?", "lol"]
(c40-2 / cause-01
       :ARG0 (c40-4 / amr-unknown)
       :ARG1 (c40-0 / he)
       :mod (c40-6 / umm
                   :mode expressive)
       :ARG2-of (c40-1 / laugh-01
                       :ARG0 (c40-3 / i)
                       :manner (c40-5 / loud)))
