# ::snt Oh please there are many ppl that would pay to just see and hear either of these two talk let alone sing, thank god that's what they do though its our memories that we want refreshed, not to hype Elton's ego, and his pockets are full already, Rod aught to join him, you rock too!!
# ::tokens ["Oh", "please", "there", "are", "many", "ppl", "that", "would", "pay", "to", "just", "see", "and", "hear", "either", "of", "these", "two", "talk", "let", "alone", "sing", ",", "thank", "god", "that", "'s", "what", "they", "do", "though", "its", "our", "memories", "that", "we", "want", "refreshed", ",", "not", "to", "hype", "Elton", "'s", "ego", ",", "and", "his", "pockets", "are", "full", "already", ",", "Rod", "aught", "to", "join", "him", ",", "you", "rock", "too", "!", "!"]
# ::lemmas ["oh", "please", "there", "be", "many", "ppl", "that", "would", "pay", "to", "just", "see", "and", "hear", "either", "of", "these", "two", "talk", "let", "alone", "sing", ",", "thank", "god", "that", "be", "what", "they", "do", "though", "its", "our", "memory", "that", "we", "want", "refresh", ",", "not", "to", "hype", "Elton", "'s", "ego", ",", "and", "his", "pocket", "be", "full", "already", ",", "Rod", "aught", "to", "join", "he", ",", "you", "rock", "too", "!", "!"]
(c1-20 / multi-sentence
       :snt1 (c1-32 / please-01
                    :ARG1 (c1-21 / person
                                 :quant (c1-9 / many)
                                 :ARG0-of (c1-5 / pay-01
                                                :ARG1 (c1-14 / and
                                                             :op1 (c1-0 / see-01
                                                                        :ARG0 c1-21
                                                                        :ARG1 (c1-15 / talk-01
                                                                                     :ARG0 (c1-4 / person
                                                                                                 :mod (c1-23 / this)
                                                                                                 :quant 2)
                                                                                     :mod (c1-31 / either)))
                                                             :op2 (c1-10 / hear-01
                                                                         :ARG0 c1-21
                                                                         :ARG1 c1-15
                                                                         :mod (c1-2 / let-alone)))
                                                :mod (c1-12 / just)))
                    :mod (c1-7 / oh
                               :mode expressive))
       :snt2 (c1-36 / thank-01
                    :ARG0 (c1-37 / i)
                    :ARG1 (c1-13 / person
                                 :name (c1-29 / name
                                              :op1 "God"))
                    :ARG2 (c1-38 / do-02
                                 :ARG0 c1-13
                                 :ARG1 (c1-1 / that))
                    :concession (c1-16 / and
                                       :op1 (c1-25 / memory
                                                   :poss (c1-34 / we)
                                                   :ARG1-of (c1-30 / refresh-01
                                                                   :ARG1-of (c1-3 / want-01
                                                                                  :ARG0 c1-34)))
                                       :op2 (c1-35 / hype-01
                                                   :ARG0 c1-34
                                                   :ARG1 (c1-17 / ego
                                                                :poss (c1-39 / person
                                                                             :name (c1-22 / name
                                                                                          :op1 "Elton")))
                                                   :polarity -)
                                       :op3 (c1-28 / full-09
                                                   :ARG1 (c1-27 / pocket
                                                                :poss c1-39)
                                                   :time (c1-11 / already))
                                       :op4 (c1-19 / obligate-01
                                                   :ARG1 (c1-24 / person
                                                                :name (c1-33 / name
                                                                             :op1 "Rod"))
                                                   :ARG2 (c1-26 / join-04
                                                                :ARG0 c1-24
                                                                :ARG1 c1-39
                                                                :mod (c1-18 / too)))))
       :snt3 (c1-6 / rock-03
                   :ARG0 (c1-8 / you)
                   :mod c1-18
                   :mode expressive))

# ::snt Well it iz
# ::tokens ["Well", "it", "iz"]
# ::lemmas ["well", "it", "iz"]
(c2-2 / iz
      :domain (c2-0 / it)
      :mod (c2-1 / well))

# ::snt He's like Ron Santo, has an every day one, and one for special occasions.
# ::tokens ["He", "'s", "like", "Ron", "Santo", ",", "has", "an", "every", "day", "one", ",", "and", "one", "for", "special", "occasions", "."]
# ::lemmas ["he", "be", "like", "Ron", "Santo", ",", "have", "an", "every", "day", "one", ",", "and", "one", "for", "special", "occasion", "."]
(c3-9 / and
      :op1 (c3-3 / resemble-01
                 :ARG1 (c3-5 / he)
                 :ARG2 (c3-6 / person
                             :name (c3-1 / name
                                         :op1 "Ron"
                                         :op2 "Santorum")))
      :op2 (c3-7 / have-03
                 :ARG0 c3-5
                 :ARG1 (c3-8 / thing
                             :mod (c3-4 / every)
                             :ARG1-of (c3-11 / rate-entity-91
                                             :ARG2 (c3-12 / temporal-quantity
                                                          :unit (c3-10 / day)
                                                          :quant 1))
                             :frequency 1)
                 :purpose (c3-0 / occasion-02
                                :ARG1-of (c3-2 / special-02))))

# ::snt Not taking sides I enjoy both of their music &amp; would really like to see each one. Bucket list...doubtful
# ::tokens ["Not", "taking", "sides", "I", "enjoy", "both", "of", "their", "music", "&", "amp", ";", "would", "really", "like", "to", "see", "each", "one", ".", "Bucket", "list", "...", "doubtful"]
# ::lemmas ["not", "take", "side", "i", "enjoy", "both", "of", "their", "music", "&", "amp", ";", "would", "really", "like", "to", "see", "each", "one", ".", "Bucket", "list", "...", "doubtful"]
(c4-2 / multi-sentence
      :snt1 (c4-11 / take-
                   :ARG0 (c4-12 / i)
                   :polarity -)
      :snt2 (c4-13 / and
                   :op1 (c4-7 / enjoy-01
                              :ARG0 (c4-4 / i)
                              :ARG1 (c4-8 / music
                                          :mod (c4-1 / both)
                                          :poss (c4-16 / they)))
                   :op2 (c4-9 / like-02
                              :ARG0 c4-4
                              :ARG1 (c4-3 / see-01
                                          :ARG0 c4-4
                                          :ARG1 (c4-14 / each
                                                       :mod (c4-0 / one)))
                              :degree (c4-5 / really)))
      :snt3 (c4-6 / doubt-01
                  :ARG1 (c4-15 / list
                               :topic (c4-10 / bucket))))

# ::snt He could just change the punctuation. Elton John - The Retirement Tour!, should be Elton John - The Retirement Tour?
# ::tokens ["He", "could", "just", "change", "the", "punctuation", ".", "Elton", "John", "-", "The", "Retirement", "Tour", "!", ",", "should", "be", "Elton", "John", "-", "The", "Retirement", "Tour", "?"]
# ::lemmas ["he", "could", "just", "change", "the", "punctuation", ".", "Elton", "John", "-", "The", "Retirement", "Tour", "!", ",", "should", "be", "Elton", "John", "-", "The", "Retirement", "Tour", "?"]
(c5-1 / multi-sentence
      :snt1 (c5-7 / possible-01
                  :ARG1 (c5-9 / change-01
                              :ARG0 (c5-6 / he)
                              :ARG1 (c5-2 / punctuate-01)
                              :mod (c5-10 / just)))
      :snt2 (c5-4 / recommend-01
                  :ARG1 (c5-0 / broadcast-program
                              :name (c5-3 / name
                                          :op1 "The"
                                          :op2 "Retirement"
                                          :op3 "Tour")
                              :poss (c5-11 / person
                                           :name (c5-8 / name
                                                       :op1 "Elton"
                                                       :op2 "John")))
                  :polarity (c5-5 / amr-unknown)))

# ::snt Rod still pissed about Tommy
# ::tokens ["Rod", "still", "pissed", "about", "Tommy"]
# ::lemmas ["Rod", "still", "piss", "about", "Tommy"]
(c6-4 / piss-03
      :ARG0 (c6-1 / person
                  :name (c6-0 / name
                              :op1 "Tommy"
                              :op2 "Robinson"))
      :ARG1 (c6-5 / person
                  :name (c6-3 / name
                              :op1 "Rod"))
      :mod (c6-2 / still))

# ::snt He should retire the bad wig
# ::tokens ["He", "should", "retire", "the", "bad", "wig"]
# ::lemmas ["he", "should", "retire", "the", "bad", "wig"]
(c8-1 / recommend-01
      :ARG1 (c8-4 / retire-01
                  :ARG0 (c8-2 / he)
                  :ARG1 (c8-3 / wig
                              :ARG1-of (c8-0 / bad-07))))

# ::snt But if its really last tour?
# ::tokens ["But", "if", "its", "really", "last", "tour", "?"]
# ::lemmas ["but", "if", "its", "really", "last", "tour", "?"]
(c9-4 / contrast-01
      :ARG2 (c9-2 / have-condition-91
                  :ARG2 (c9-6 / tour
                              :mod (c9-3 / last
                                         :ARG1-of (c9-0 / real-04))
                              :domain (c9-5 / it))
                  :polarity (c9-1 / amr-unknown)))

# ::snt Who??
# ::tokens ["Who", "?", "?"]
# ::lemmas ["who", "?", "?"]
(c10-0 / amr-unknown)

# ::snt Retirement tour or not John's the best!!!
# ::tokens ["Retirement", "tour", "or", "not", "John", "'s", "the", "best", "!", "!", "!"]
# ::lemmas ["retirement", "tour", "or", "not", "John", "'s", "the", "good", "!", "!", "!"]
(c11-4 / have-degree-91
       :ARG1 (c11-5 / person
                    :name (c11-1 / name
                                 :op1 "John"))
       :ARG2 (c11-7 / good-02
                    :ARG1 c11-5
                    :ARG1-of (c11-3 / regardless-91
                                    :ARG2 (c11-0 / or
                                                 :op1 (c11-6 / tour-01
                                                             :mod (c11-8 / retire-01))
                                                 :op2 (c11-9 / tour-01
                                                             :mod c11-8))))
       :ARG3 (c11-2 / most)
       :mode expressive)

# ::snt Always.
# ::tokens ["Always", "."]
# ::lemmas ["always", "."]
(c14-0 / be-temporally-at-91
       :ARG2 (c14-1 / always))

# ::snt Lolll Rod right to the point.
# ::tokens ["Lolll", "Rod", "right", "to", "the", "point", "."]
# ::lemmas ["Lolll", "Rod", "right", "to", "the", "point", "."]
(c15-1 / person
       :name (c15-0 / name
                    :op1 "Lolll"
                    :op2 "Rod")
       :mod (c15-2 / right-to-the-point))

# ::snt It's the Truth! Come onnn..THREE YEAR Tour!! Oook
# ::tokens ["It", "'s", "the", "Truth", "!", "Come", "onnn", "..", "THREE", "YEAR", "Tour", "!", "!", "Oook"]
# ::lemmas ["it", "be", "the", "Truth", "!", "come", "onnn", "..", "THREE", "YEAR", "Tour", "!", "!", "oook"]
(c16-2 / multi-sentence
       :snt1 (c16-4 / true-01
                    :ARG1 (c16-5 / it))
       :snt2 (c16-3 / come-on-25
                    :ARG1 (c16-6 / tour
                                 :duration (c16-7 / temporal-quantity
                                                  :unit (c16-1 / year)
                                                  :quant 3))
                    :mode imperative)
       :snt3 (c16-0 / oook
                    :mode expressive))

# ::snt Im sure also has to do with trumps executive order on December
# ::tokens ["I", "m", "sure", "also", "has", "to", "do", "with", "trumps", "executive", "order", "on", "December"]
# ::lemmas ["i", "m", "sure", "also", "have", "to", "do", "with", "trump", "executive", "order", "on", "December"]
(c17-4 / have-to-do-with-04
       :ARG0 (c17-6 / i)
       :ARG1 (c17-0 / order-01
                    :ARG0 (c17-5 / person
                                 :name (c17-1 / name
                                              :op1 "Trumps"))
                    :mod (c17-3 / executive)
                    :time (c17-8 / date-entity
                                 :month 12))
       :ARG1-of (c17-2 / sure-02
                       :ARG0 c17-6)
       :mod (c17-7 / also))
