# ::snt owen wilson?? fuckin dick van dyke???
# ::tokens ["owen", "wilson", "?", "?", "fuckin", "dick", "van", "dyke", "?", "?", "?"]
# ::lemmas ["owen", "wilson", "?", "?", "fuckin", "dick", "van", "dyke", "?", "?", "?"]
(c1-2 / multi-sentence
      :snt1 (c1-4 / person
                  :name (c1-1 / name
                              :op1 "Willson")
                  :polarity (c1-7 / amr-unknown))
      :snt2 (c1-8 / dick
                  :mod (c1-0 / fucking)
                  :mod (c1-3 / van
                             :op1 (c1-5 / dyke))
                  :polarity (c1-6 / amr-unknown)))

# ::snt Go Ben
# ::tokens ["Go", "Ben"]
# ::lemmas ["go", "Ben"]
(c2-0 / go-03
      :ARG0 (c2-2 / person
                  :name (c2-1 / name
                              :op1 "Ben"))
      :mode imperative)

# ::snt Great heart, fantastic Person
# ::tokens ["Great", "heart", ",", "fantastic", "Person"]
# ::lemmas ["great", "heart", ",", "fantastic", "Person"]
(c3-3 / and
      :op1 (c3-1 / heart
                 :mod (c3-4 / great))
      :op2 (c3-2 / person
                 :ARG1-of (c3-0 / fantastic-02)))

# ::snt Number is Homicide Hunter w/Joe Kenda
# ::tokens ["Number", "is", "Homicide", "Hunter", "w", "/", "Joe", "Kenda"]
# ::lemmas ["number", "be", "Homicide", "Hunter", "w", "/", "Joe", "Kenda"]
(c4-1 / number
      :mod (c4-3 / person
                 :name (c4-2 / name
                             :op1 "Joe"
                             :op2 "Kenda")
                 :ARG0-of (c4-4 / hunt-01
                                :ARG1 (c4-0 / murder-01))))

# ::snt Pura filosofa Marge Simpson
# ::tokens ["Pura", "filosofa", "Marge", "Simpson"]
# ::lemmas ["pura", "filosofa", "Marge", "Simpson"]
(c5-0 / filosof
      :name (c5-1 / name
                  :op1 "Marge"
                  :op2 "Simpson"))

# ::snt Quisiera rerme (es chistoso, sin duda) pero que hpta guayabo con esa catstrofe
# ::tokens ["Quisiera", "rerme", "(", "es", "chistoso", ",", "sin", "duda", ")", "pero", "que", "hpta", "guayabo", "con", "esa", "catstrofe"]
# ::lemmas ["Quisiera", "rerme", "(", "es", "chistoso", ",", "sin", "duda", ")", "pero", "que", "hpta", "guayabo", "con", "esa", "catstrofe"]
(c6-2 / request-confirmation-91
      :ARG1 (c6-8 / rerme
                  :domain (c6-6 / amr-unintelligible
                                :value "es"
                                :op2 "chistoso")
                  :ARG1-of (c6-1 / sin-01
                                 :ARG0 (c6-0 / you
                                             :ARG2-of c6-2)))
      :ARG1-of (c6-4 / cause-01
                     :ARG0 (c6-3 / have-concession-91
                                 :ARG1 (c6-5 / hpta
                                             :mod (c6-7 / guayabo))
                                 :ARG2 (c6-9 / catstrofe))))

# ::snt De pronto dejara escapar una que otra obra. Quizs se enamora de una y golpeara a otra. Pero nunca dejara quemar el museo.
# ::tokens ["De", "pronto", "dejara", "escapar", "una", "que", "otra", "obra", ".", "Quizs", "se", "enamora", "de", "una", "y", "golpeara", "a", "otra", ".", "Pero", "nunca", "dejara", "quemar", "el", "museo", "."]
# ::lemmas ["De", "pronto", "dejara", "escapar", "una", "que", "otra", "obra", ".", "Quizs", "se", "enamora", "de", "una", "y", "golpeara", "a", "otra", ".", "Pero", "nunca", "dejara", "quemar", "el", "museo", "."]
(c7-13 / multi-sentence
       :snt1 (c7-19 / escapar-00
                    :ARG0 (c7-3 / you)
                    :ARG1 (c7-17 / una)
                    :ARG1-of (c7-15 / cause-01
                                    :ARG0 (c7-2 / obra))
                    :ARG1-of (c7-11 / cause-01
                                    :ARG0 c7-3
                                    :ARG1 (c7-14 / una
                                                 :ARG1-of (c7-0 / cause-01
                                                                :ARG0 (c7-12 / otra)))
                                    :ARG0 c7-19))
       :snt2 (c7-8 / enamora
                   :domain (c7-6 / and
                                 :op1 (c7-5 / quizs)
                                 :op2 (c7-7 / golpeara-00
                                            :ARG0 (c7-9 / you)
                                            :ARG1 (c7-22 / otra)))
                   :ARG1-of (c7-18 / cause-01
                                   :ARG0 (c7-10 / amr-unknown)))
       :snt3 (c7-20 / permit-01
                    :ARG1 (c7-21 / dejara-01
                                 :ARG0 (c7-1 / you)
                                 :ARG1 (c7-16 / quemar-01
                                              :ARG0 c7-1
                                              :ARG1 (c7-4 / museo
                                                          :poss c7-1)))
                    :ARG2 c7-1))

# ::snt exacto. Y Adam Driver est maravilloso. Dira que como siempre. Aunque el puntazo de poner a Ben Stiller y Adam Sandler de hermanastros es muy grande
# ::tokens ["exacto", ".", "Y", "Adam", "Driver", "est", "maravilloso", ".", "Dira", "que", "como", "siempre", ".", "Aunque", "el", "puntazo", "de", "poner", "a", "Ben", "Stiller", "y", "Adam", "Sandler", "de", "hermanastros", "es", "muy", "grande"]
# ::lemmas ["exacto", ".", "Y", "Adam", "Driver", "est", "maravilloso", ".", "Dira", "que", "como", "siempre", ".", "Aunque", "el", "puntazo", "de", "poner", "a", "Ben", "Stiller", "y", "Adam", "Sandler", "de", "hermanastros", "es", "muy", "grande"]
(c9-10 / multi-sentence
       :snt1 (c9-17 / existo)
       :snt2 (c9-8 / estrange-01
                   :ARG1 (c9-18 / person
                                :name (c9-16 / name
                                             :op1 "Adam"
                                             :op2 "Driver"))
                   :ARG2 (c9-3 / maravilloso))
       :snt3 (c9-20 / dira-00
                    :ARG1-of (c9-14 / cause-01
                                    :ARG0 (c9-0 / siempre)))
       :snt4 (c9-7 / grande
                   :mod (c9-15 / muy)
                   :domain (c9-13 / el
                                  :mod (c9-11 / puntazo)
                                  :mod (c9-2 / poner-00
                                             :ARG1 (c9-6 / and
                                                         :op1 (c9-1 / person
                                                                    :name (c9-12 / name
                                                                                 :op1 "Ben"
                                                                                 :op2 "Stiller"))
                                                         :op2 (c9-5 / person
                                                                    :name (c9-19 / name
                                                                                 :op1 "Adam"
                                                                                 :op2 "Sandler")))
                                             :ARG2 (c9-4 / hermanastros)))
                   :mod (c9-9 / aunque)))

# ::snt Coincido, se le da muy bien crear escenas incmodas (algo tpico de Woody) en este caso con el salto generacional.
# ::tokens ["Coincido", ",", "se", "le", "da", "muy", "bien", "crear", "escenas", "incmodas", "(", "algo", "tpico", "de", "Woody", ")", "en", "este", "caso", "con", "el", "salto", "generacional", "."]
# ::lemmas ["Coincido", ",", "se", "le", "da", "muy", "bien", "crear", "escenas", "incmodas", "(", "algo", "tpico", "de", "Woody", ")", "en", "este", "caso", "con", "el", "salto", "generacional", "."]
(c10-10 / coincido
        :domain (c10-9 / possible-01
                       :ARG1 (c10-15 / da
                                     :ARG1-of (c10-3 / mean-01
                                                     :ARG2 (c10-16 / crear-01
                                                                   :ARG0 (c10-2 / you)
                                                                   :ARG1 (c10-8 / escenas
                                                                                :mod (c10-12 / incidental)
                                                                                :ARG1-of c10-3
                                                                                :ARG2 (c10-13 / tpico
                                                                                              :domain (c10-4 / person
                                                                                                             :name (c10-5 / name
                                                                                                                          :op1 "Woody")))))))
                       :mod (c10-1 / bien))
        :location (c10-11 / caso
                          :mod (c10-0 / con
                                      :op1 (c10-6 / salto
                                                  :mod (c10-14 / generacional))
                                      :mod (c10-7 / este))))

# ::snt 'While we are young' para m supera a los Meyerowitz. Pero s, ojal escribir dilogos como Noah Baumbach
# ::tokens ["'", "While", "we", "are", "young", "'", "para", "m", "supera", "a", "los", "Meyerowitz", ".", "Pero", "s", ",", "ojal", "escribir", "dilogos", "como", "Noah", "Baumbach"]
# ::lemmas ["'", "while", "we", "be", "young", "'", "para", "m", "supera", "a", "los", "Meyerowitz", ".", "Pero", "s", ",", "ojal", "escribir", "dilogos", "como", "Noah", "Baumbach"]
(c11-1 / multi-sentence
       :snt1 (c11-7 / have-concession-91
                    :ARG1 (c11-8 / possible-01
                                 :ARG1 (c11-3 / super-01
                                              :ARG1 (c11-2 / person
                                                           :name (c11-4 / name
                                                                        :op1 "Meyerowitz"))))
                    :ARG2 (c11-0 / young
                                 :domain (c11-10 / we)))
       :snt2 (c11-12 / permit-01
                     :ARG1 (c11-6 / escribir-01
                                  :ARG1 (c11-13 / dilogos)
                                  :ARG2 (c11-11 / person
                                                :name (c11-9 / name
                                                             :op1 "Noah"
                                                             :op2 "Baumbach")))
                     :ARG1-of (c11-5 / request-confirmation-91)))

# ::snt Y eso que tienes jet privado
# ::tokens ["Y", "eso", "que", "tienes", "jet", "privado"]
# ::lemmas ["Y", "eso", "que", "tiene", "jet", "privado"]
(c12-1 / eso
       :concession-of (c12-3 / tienes-01
                             :ARG1 (c12-2 / jet
                                          :ARG1-of (c12-0 / privado-00)))
       :mode expressive)

# ::snt Noah Baumbach me recuerda mucho a Woody Allen.
# ::tokens ["Noah", "Baumbach", "me", "recuerda", "mucho", "a", "Woody", "Allen", "."]
# ::lemmas ["Noah", "Baumbach", "i", "recuerda", "mucho", "a", "Woody", "Allen", "."]
(c13-3 / recuerda
       :mod (c13-2 / much)
       :topic (c13-5 / person
                     :name (c13-0 / name
                                  :op1 "Woody"
                                  :op2 "Allen"))
       :domain (c13-1 / person
                      :name (c13-4 / name
                                   :op1 "Noah"
                                   :op2 "Baumbach")))

# ::snt Muy, muy fan de Qu fue de Brad...
# ::tokens ["Muy", ",", "muy", "fan", "de", "Qu", "fue", "de", "Brad", "..."]
# ::lemmas ["Muy", ",", "muy", "fan", "de", "Qu", "fue", "de", "Brad", "..."]
(c14-3 / say-01
       :ARG0 (c14-6 / i)
       :ARG1 (c14-0 / fan
                    :domain (c14-5 / person
                                   :name (c14-1 / name
                                                :op1 "Qu"))
                    :mod (c14-2 / person
                                :name (c14-4 / name
                                             :op1 "Brad")))
       :ARG2 c14-5)

# ::snt Id keep your Tropic of Thunder cosmetics handy, just Incase.
# ::tokens ["I", "d", "keep", "your", "Tropic", "of", "Thunder", "cosmetics", "handy", ",", "just", "Incase", "."]
# ::lemmas ["i", "d", "keep", "your", "Tropic", "of", "thunder", "cosmetic", "handy", ",", "just", "Incase", "."]
(c15-7 / contrast-01
       :ARG1 (c15-5 / keep-01
                    :ARG0 (c15-9 / i)
                    :ARG1 (c15-3 / handy-02
                                 :ARG1 (c15-4 / product
                                              :name (c15-1 / name
                                                           :op1 "Tropic"
                                                           :op2 "of"
                                                           :op3 "Thunder"
                                                           :op4 "Cosmetics")
                                              :poss (c15-0 / you))))
       :ARG2 (c15-10 / keep-01
                     :ARG0 c15-9
                     :ARG1 (c15-2 / product
                                  :name (c15-6 / name
                                               :op1 "Incase")
                                  :mod (c15-8 / just)
                                  :poss c15-0)))

# ::snt Come on New Yorker... Are you serious??? Everyone knows you cant schedule white supremacists after Labor Day. Talk about your major faux pas.
# ::tokens ["Come", "on", "New", "Yorker", "...", "Are", "you", "serious", "?", "?", "?", "Everyone", "knows", "you", "ca", "nt", "schedule", "white", "supremacists", "after", "Labor", "Day", ".", "Talk", "about", "your", "major", "faux", "pas", "."]
# ::lemmas ["come", "on", "New", "Yorker", "...", "be", "you", "serious", "?", "?", "?", "everyone", "know", "you", "can", "not", "schedule", "white", "supremacist", "after", "Labor", "Day", ".", "talk", "about", "your", "major", "faux", "pas", "."]
(c16-13 / multi-sentence
        :snt1 (c16-16 / come-on-25
                      :ARG1 (c16-20 / person
                                    :name (c16-18 / name
                                                  :op1 "New"
                                                  :op2 "Yorker")))
        :snt2 (c16-0 / serious-01
                     :ARG1 c16-20
                     :polarity (c16-9 / amr-unknown)
                     :ARG1-of (c16-12 / cause-01
                                      :ARG0 (c16-6 / know-01
                                                   :ARG0 (c16-19 / everyone)
                                                   :ARG1 (c16-14 / possible-01
                                                                 :ARG1 (c16-3 / schedule-01
                                                                              :ARG0 (c16-4 / you)
                                                                              :ARG1 (c16-1 / person
                                                                                           :ARG0-of (c16-2 / supremacist-01)
                                                                                           :ARG1-of (c16-21 / white-02))
                                                                              :time (c16-7 / after
                                                                                           :op1 (c16-10 / event
                                                                                                        :name (c16-15 / name
                                                                                                                      :op1 "Labor"
                                                                                                                      :op2 "Day"))))
                                                                 :polarity -))))
        :snt3 (c16-8 / talk-01
                     :ARG0 (c16-11 / you)
                     :ARG1 (c16-17 / faux-
                                   :ARG1-of (c16-5 / major-02)
                                   :poss c16-11)
                     :mode imperative))

# ::snt Ground control to major Tom
# ::tokens ["Ground", "control", "to", "major", "Tom"]
# ::lemmas ["ground", "control", "to", "major", "Tom"]
(c17-3 / control-01
       :ARG1 (c17-4 / ground)
       :ARG2 (c17-2 / person
                    :name (c17-0 / name
                                 :op1 "Tom")
                    :ARG1-of (c17-1 / major-02)))

# ::snt Truth
# ::tokens ["Truth"]
# ::lemmas ["truth"]
(c18-0 / truth)

# ::snt same old same thing again and again Thats waste of time should respect me
# ::tokens ["same", "old", "same", "thing", "again", "and", "again", "That", "s", "waste", "of", "time", "should", "respect", "me"]
# ::lemmas ["same", "old", "same", "thing", "again", "and", "again", "that", "s", "waste", "of", "time", "should", "respect", "i"]
(c19-2 / recommend-01
       :ARG1 (c19-8 / respect-01
                    :ARG0 (c19-3 / person
                                 :ARG0-of (c19-4 / waste-01
                                                 :ARG1 (c19-6 / time))
                                 :domain (c19-9 / thing
                                                :ARG1-of (c19-1 / same-01
                                                                :mod (c19-0 / old))))
                    :ARG1 (c19-5 / i))
       :frequency (c19-7 / time-and-again))

# ::snt LOLOLLLL
# ::tokens ["LOLOLLLL"]
# ::lemmas ["LOLOLLLL"]
(c20-1 / laugh-01
       :ARG0 (c20-2 / i)
       :manner (c20-0 / loud)
       :mode expressive)

# ::snt Brannon banned but Stiller still soliciting?
# ::tokens ["Brannon", "banned", "but", "Stiller", "still", "soliciting", "?"]
# ::lemmas ["Brannon", "ban", "but", "Stiller", "still", "solicit", "?"]
(c21-7 / contrast-01
       :ARG1 (c21-1 / ban-01
                    :ARG2 (c21-6 / person
                                 :name (c21-2 / name
                                              :op1 "Brannon")))
       :ARG2 (c21-4 / solicit-01
                    :ARG0 (c21-3 / person
                                 :name (c21-5 / name
                                              :op1 "Stiller"))
                    :mod (c21-0 / still))
       :polarity (c21-8 / amr-unknown))

# ::snt Cada pessoa tem suas escolhas, tem consequncias seja qual for seus atos e atitudes ....
# ::tokens ["Cada", "pessoa", "tem", "suas", "escolhas", ",", "tem", "consequncias", "seja", "qual", "for", "seus", "atos", "e", "atitudes", "...."]
# ::lemmas ["Cada", "pessoa", "tem", "suas", "escolhas", ",", "tem", "consequncia", "seja", "qual", "for", "seus", "ato", "e", "atitude", "...."]
(c22-6 / and
       :op1 (c22-3 / cada
                   :mod (c22-2 / pessoa)
                   :mod (c22-1 / suas-))
       :op2 (c22-8 / converse-01
                   :ARG1 (c22-0 / seja
                                :mod (c22-5 / qual))
                   :mod (c22-7 / atos
                               :mod (c22-4 / atitudes))))

# ::snt Hey you could talk about the fact that Walter Mitty is one of my favorite all time movies and has an awesome soundtrack
# ::tokens ["Hey", "you", "could", "talk", "about", "the", "fact", "that", "Walter", "Mitty", "is", "one", "of", "my", "favorite", "all", "time", "movies", "and", "has", "an", "awesome", "soundtrack"]
# ::lemmas ["hey", "you", "could", "talk", "about", "the", "fact", "that", "Walter", "Mitty", "be", "one", "of", "my", "favorite", "all", "time", "movie", "and", "have", "an", "awesome", "soundtrack"]
(c23-7 / possible-01
       :ARG1 (c23-11 / talk-01
                     :ARG0 (c23-1 / you)
                     :ARG1 (c23-13 / and
                                   :op1 (c23-12 / include-91
                                                :ARG1 (c23-2 / movie
                                                             :name (c23-3 / name
                                                                          :op1 "Walter"
                                                                          :op2 "Mitty"))
                                                :ARG2 (c23-6 / movie
                                                             :time (c23-15 / time
                                                                           :mod (c23-14 / all))
                                                             :ARG1-of (c23-0 / favor-01
                                                                             :ARG0 (c23-5 / i))))
                                   :op2 (c23-8 / have-03
                                               :ARG0 c23-2
                                               :ARG1 (c23-4 / soundtrack
                                                            :ARG0-of (c23-9 / awe-01)))))
       :mod (c23-10 / hey
                    :mode expressive))

# ::snt You or Steve Bannon? It's no contest!
# ::tokens ["You", "or", "Steve", "Bannon", "?", "It", "'s", "no", "contest", "!"]
# ::lemmas ["you", "or", "Steve", "Bannon", "?", "it", "be", "no", "contest", "!"]
(c24-4 / contest-02
       :ARG0 (c24-0 / or
                    :op1 (c24-1 / you)
                    :op2 (c24-3 / person
                                :name (c24-2 / name
                                             :op1 "Steve"
                                             :op2 "B Bannon")))
       :polarity (c24-5 / amr-unknown)
       :polarity -)

# ::snt Eyebrows
# ::tokens ["Eyebrows"]
# ::lemmas ["eyebrow"]
(c25-0 / eyebrow)

# ::snt Ben, if they dont call, you can come speak to an as-yet-undetermined group of people. Just so you know.
# ::tokens ["Ben", ",", "if", "they", "do", "nt", "call", ",", "you", "can", "come", "speak", "to", "an", "as", "-", "yet", "-", "undetermined", "group", "of", "people", ".", "Just", "so", "you", "know", "."]
# ::lemmas ["Ben", ",", "if", "they", "do", "not", "call", ",", "you", "can", "come", "speak", "to", "an", "as", "-", "yet", "-", "undetermined", "group", "of", "people", ".", "just", "so", "you", "know", "."]
(c27-2 / multi-sentence
       :snt1 (c27-4 / say-01
                    :ARG0 (c27-10 / i)
                    :ARG1 (c27-6 / possible-01
                                 :ARG1 (c27-8 / come-01
                                              :ARG1 (c27-3 / person
                                                           :name (c27-5 / name
                                                                        :op1 "Ben"))
                                              :ARG4 (c27-0 / speak-01
                                                           :ARG0 c27-3
                                                           :ARG2 (c27-12 / group
                                                                         :consist-of (c27-11 / person)
                                                                         :ARG1-of (c27-13 / determine-01
                                                                                          :time (c27-1 / yet)
                                                                                          :polarity -))))
                                 :condition (c27-16 / call-02
                                                    :ARG0 (c27-9 / they)
                                                    :polarity -))
                    :ARG2 c27-3)
       :snt2 (c27-7 / know-01
                    :ARG0 (c27-14 / you)
                    :mod (c27-15 / just)))

# ::snt Biggups to yah Ben
# ::tokens ["Biggups", "to", "yah", "Ben"]
# ::lemmas ["biggup", "to", "yah", "Ben"]
(c28-1 / biggup
       :beneficiary (c28-2 / person
                           :name (c28-0 / name
                                        :op1 "Yah"
                                        :op2 "Ben"))
       :mode expressive)

# ::snt I was invited once, to talk about The Stooges, 'cause I'd played one of them. I declined, saying, "I don't actually know very much about The Stooges."I'm going to make believe the invite was this year, and that the reason I gave is, "'Cause you guys suck."
# ::tokens ["I", "was", "invited", "once", ",", "to", "talk", "about", "The", "Stooges", ",", "'cause", "I", "'d", "played", "one", "of", "them", ".", "I", "declined", ",", "saying", ",", "\"", "I", "do", "n't", "actually", "know", "very", "much", "about", "The", "Stooges", ".", "\"I'm", "going", "to", "make", "believe", "the", "invite", "was", "this", "year", ",", "and", "that", "the", "reason", "I", "gave", "is", ",", "\"", "'Cause", "you", "guys", "suck", ".", "\""]
# ::lemmas ["i", "be", "invite", "once", ",", "to", "talk", "about", "the", "Stooges", ",", "'cause", "i", "would", "play", "one", "of", "they", ".", "i", "decline", ",", "say", ",", "\"", "i", "do", "not", "actually", "know", "very", "much", "about", "the", "Stooges", ".", "\"I'm", "go", "to", "make", "believe", "the", "invite", "be", "this", "year", ",", "and", "that", "the", "reason", "i", "give", "be", ",", "\"", "'cause", "you", "guy", "suck", ".", "\""]
(c29-18 / multi-sentence
        :snt1 (c29-25 / invite-01
                      :ARG1 (c29-6 / i)
                      :ARG2 (c29-12 / talk-01
                                    :ARG0 c29-6
                                    :ARG1 (c29-3 / organization
                                                 :name (c29-23 / name
                                                               :op1 "The"
                                                               :op2 "Stoops")))
                      :ARG1-of (c29-19 / cause-01
                                       :ARG0 (c29-24 / play-01
                                                     :ARG0 c29-6
                                                     :ARG1 (c29-17 / one
                                                                   :ARG1-of (c29-15 / include-91
                                                                                    :ARG2 c29-3))))
                      :frequency 1)
        :snt2 (c29-26 / decline-01
                      :ARG0 (c29-0 / i)
                      :ARG1-of (c29-16 / cause-01
                                       :ARG0 (c29-1 / say-01
                                                    :ARG0 c29-0
                                                    :ARG1 (c29-9 / know-01
                                                                 :ARG0 c29-0
                                                                 :ARG1 (c29-8 / much
                                                                              :degree (c29-7 / very))
                                                                 :ARG1-of (c29-11 / actual-02)
                                                                 :topic c29-3
                                                                 :polarity -))))
        :snt3 (c29-10 / and
                      :op1 (c29-22 / make-believe-24
                                   :ARG0 (c29-21 / i)
                                   :ARG1 c29-25
                                   :ARG1 c29-21
                                   :time (c29-5 / year
                                                :mod (c29-20 / this))))
        :op2 (c29-2 / cause-01
                    :ARG0 (c29-4 / suck-03
                                 :ARG0 (c29-13 / you
                                               :mod (c29-14 / guy)))
                    :ARG1 c29-25))

# ::snt Kaepernick said he's pulling out if you are invited. Sorry, he's got more pull than you.
# ::tokens ["Kaepernick", "said", "he", "'s", "pulling", "out", "if", "you", "are", "invited", ".", "Sorry", ",", "he", "'s", "got", "more", "pull", "than", "you", "."]
# ::lemmas ["Kaepernick", "say", "he", "be", "pull", "out", "if", "you", "be", "invite", ".", "sorry", ",", "he", "be", "get", "more", "pull", "than", "you", "."]
(c30-3 / multi-sentence
       :snt1 (c30-5 / say-01
                    :ARG0 (c30-8 / person
                                 :name (c30-2 / name
                                              :op1 "Kaepernick"))
                    :ARG1 (c30-4 / pull-out-02
                                 :ARG0 c30-8
                                 :condition (c30-12 / invite-01
                                                    :ARG1 (c30-1 / you))))
       :snt2 (c30-0 / sorry-01
                    :ARG1 (c30-6 / i)
                    :ARG2 (c30-13 / pull-out-02
                                  :ARG1 (c30-7 / he)
                                  :ARG1-of (c30-11 / have-quant-91
                                                   :ARG3 (c30-9 / more)
                                                   :ARG4 (c30-10 / pull-out-02
                                                                 :ARG1 (c30-14 / you))))))

# ::snt Mr. Stiller, I have confidence in you being able to accomplish what ever you set your mind to.
# ::tokens ["Mr.", "Stiller", ",", "I", "have", "confidence", "in", "you", "being", "able", "to", "accomplish", "what", "ever", "you", "set", "your", "mind", "to", "."]
# ::lemmas ["Mr.", "Stiller", ",", "i", "have", "confidence", "in", "you", "be", "able", "to", "accomplish", "what", "ever", "you", "set", "your", "mind", "to", "."]
(c31-3 / say-01
       :ARG1 (c31-7 / trust-02
                    :ARG0 (c31-8 / i)
                    :ARG1 (c31-5 / possible-01
                                 :ARG1 (c31-9 / accomplish-01
                                              :ARG0 (c31-2 / person
                                                           :name (c31-1 / name
                                                                        :op1 "Mr."
                                                                        :op2 "Stiller")
                                                           :part (c31-4 / mind))
                                              :ARG1 (c31-6 / whatever
                                                           :ARG1-of (c31-0 / set-16
                                                                           :ARG0 c31-2
                                                                           :ARG2 c31-4)))))
       :ARG2 c31-2)

# ::snt Stiller/Garofalo reunion!
# ::tokens ["Stiller", "/", "Garofalo", "reunion", "!"]
# ::lemmas ["Stiller", "/", "Garofalo", "reunion", "!"]
(c32-3 / reunite-01
       :ARG1 (c32-2 / slash
                    :op1 (c32-5 / person
                                :name (c32-0 / name
                                             :op1 "Stiller"))
                    :op2 (c32-1 / person
                                :name (c32-4 / name
                                             :op1 "Garofalo"))))

# ::snt This is very funny
# ::tokens ["This", "is", "very", "funny"]
# ::lemmas ["this", "be", "very", "funny"]
(c34-0 / funny-02
       :ARG1 (c34-2 / this)
       :degree (c34-1 / very))

# ::snt You havent said that before? Hrmmm
# ::tokens ["You", "have", "nt", "said", "that", "before", "?", "Hrmmm"]
# ::lemmas ["you", "have", "not", "say", "that", "before", "?", "Hrmmm"]
(c35-2 / say-01
       :ARG0 (c35-1 / you)
       :ARG1 (c35-5 / that)
       :time (c35-0 / before)
       :ARG1-of (c35-3 / request-confirmation-91)
       :mod (c35-4 / hmm
                   :mode expressive)
       :polarity -)

# ::snt *sighing* me too. . . Me too.
# ::tokens ["*", "sighing", "*", "me", "too", ".", ".", ".", "Me", "too", "."]
# ::lemmas ["*", "sigh", "*", "i", "too", ".", ".", ".", "i", "too", "."]
(c36-0 / multi-sentence
       :snt1 (c36-1 / sigh-02
                    :ARG1 (c36-3 / i)
                    :mod (c36-4 / too))
       :snt2 (c36-2 / i
                    :mod (c36-5 / too)))

# ::snt When I'm with a lady and she appears to have had a orgasms, I say things like, "Oh, my goodness! What's happening to you?!"
# ::tokens ["When", "I", "'m", "with", "a", "lady", "and", "she", "appears", "to", "have", "had", "a", "orgasms", ",", "I", "say", "things", "like", ",", "\"", "Oh", ",", "my", "goodness", "!", "What", "'s", "happening", "to", "you", "?", "!", "\""]
# ::lemmas ["when", "i", "be", "with", "a", "lady", "and", "she", "appear", "to", "have", "have", "a", "orgasm", ",", "i", "say", "thing", "like", ",", "\"", "oh", ",", "my", "goodness", "!", "what", "be", "happen", "to", "you", "?", "!", "\""]
(c37-4 / say-01
       :ARG0 (c37-11 / i)
       :ARG1 (c37-10 / thing
                     :ARG1-of (c37-5 / resemble-01
                                     :ARG2 (c37-12 / and
                                                   :op1 (c37-13 / goodness
                                                                :poss c37-11
                                                                :mod (c37-0 / oh)
                                                                :mode expressive)
                                                   :op2 (c37-6 / event
                                                               :mod (c37-14 / amr-unknown)
                                                               :beneficiary (c37-2 / you))
                                                   :time-of c37-4)))
       :op1 (c37-9 / accompany-01
                   :ARG0 c37-11
                   :ARG1 (c37-8 / lady))
       :op2 (c37-3 / appear-02
                   :ARG1 (c37-7 / have-06
                                :ARG0 c37-8
                                :ARG1 (c37-1 / orgasm))))

# ::snt Nono ahaha Cos me la godo per bene quando li vedr
# ::tokens ["Nono", "ahaha", "Cos", "me", "la", "godo", "per", "bene", "quando", "li", "vedr"]
# ::lemmas ["Nono", "ahaha", "cos", "i", "la", "godo", "per", "bene", "quando", "li", "vedr"]
(c38-2 / multi-sentence
       :snt1 (c38-1 / non-o
                    :mode expressive)
       :snt2 (c38-8 / cos-01
                    :ARG1 (c38-9 / i)
                    :ARG2 (c38-5 / person
                                 :name (c38-4 / name
                                              :op1 "La"
                                              :op2 "Godo")
                                 :ARG1-of (c38-6 / mean-01
                                                 :ARG2 (c38-3 / person
                                                              :ARG0-of (c38-0 / fuck-01)))))
       :snt3 (c38-10 / quando
                     :op1 (c38-11 / person
                                  :ARG0-of (c38-7 / lie-08))))

# ::snt Adoroo bellissimo in generale vedere attori famosi che compaiono a caso nelle serie tv ma in Friends fa ancora pi effetto
# ::tokens ["Adoroo", "bellissimo", "in", "generale", "vedere", "attori", "famosi", "che", "compaiono", "a", "caso", "nelle", "serie", "tv", "ma", "in", "Friends", "fa", "ancora", "pi", "effetto"]
# ::lemmas ["Adoroo", "bellissimo", "in", "generale", "vedere", "attori", "famosi", "che", "compaiono", "a", "caso", "nelle", "serie", "tv", "ma", "in", "Friends", "fa", "ancora", "pi", "effetto"]
(c39-2 / multi-sentence
       :snt1 (c39-12 / adoroo
                     :mod (c39-1 / bellissimo)
                     :location (c39-13 / generale))
       :snt2 (c39-11 / accuse-01
                     :ARG1 (c39-6 / person
                                  :ARG0-of (c39-5 / have-rel-role-91
                                                  :ARG2 (c39-0 / father))
                                  :ARG1-of (c39-10 / attori-00)
                                  :ARG0-of (c39-9 / work-of-art
                                                  :name (c39-3 / name
                                                               :op1 "Communications"
                                                               :op2 "and"
                                                               :op3 "Commercial"
                                                               :op4 "Services")
                                                  :ARG2-of c39-11))
                     :name (c39-7 / name
                                  :op1 "Friends")
                     :mod (c39-8 / fa
                                 :mod (c39-14 / ancora
                                              :mod (c39-4 / pi)))))

# ::snt stiller i got you confused with charlie sheen in my latest tweet. Check it out hahaha
# ::tokens ["stiller", "i", "got", "you", "confused", "with", "charlie", "sheen", "in", "my", "latest", "tweet", ".", "Check", "it", "out", "hahaha"]
# ::lemmas ["stiller", "i", "get", "you", "confused", "with", "charlie", "sheen", "in", "my", "late", "tweet", ".", "check", "it", "out", "hahaha"]
(c40-1 / multi-sentence
       :snt1 (c40-3 / say-01
                    :ARG0 (c40-11 / i)
                    :ARG1 (c40-13 / get-04
                                  :ARG0 c40-11
                                  :ARG1 (c40-10 / confuse-01
                                                :ARG1 (c40-7 / person
                                                             :name (c40-2 / name
                                                                          :op1 "stiller"))
                                                :ARG2 (c40-4 / person
                                                             :name (c40-6 / name
                                                                          :op1 " charlie"
                                                                          :op2 "sheen"))
                                                :location (c40-12 / tweet-01
                                                                  :ARG0 c40-11
                                                                  :mod (c40-8 / last))))
                    :ARG2 c40-7)
       :snt2 (c40-14 / check-out-05
                     :ARG0 (c40-0 / you)
                     :ARG1 (c40-5 / it)
                     :mod (c40-9 / haha
                                 :mode expressive)
                     :mode imperative))

# ::snt Ta nessa vida pra rir da porra toda
# ::tokens ["Ta", "nessa", "vida", "pra", "rir", "da", "porra", "toda"]
# ::lemmas ["Ta", "nessa", "vida", "pra", "rir", "da", "porra", "toda"]
(c41-2 / vida
       :domain (c41-3 / person
                      :name (c41-0 / name
                                   :op1 "Ta"
                                   :op2 "nessa"))
       :mod (c41-1 / pra
                   :mod (c41-4 / toda)))

# ::snt To nessa vida pelo humor
# ::tokens ["To", "nessa", "vida", "pelo", "humor"]
# ::lemmas ["to", "nessa", "vida", "pelo", "humor"]
(c42-3 / to
       :op1 (c42-1 / humor
                   :mod (c42-2 / nessa
                               :mod (c42-0 / vida))))

# ::snt Olha vc fazendo piada com coisa seria de novo banguela, tome tento
# ::tokens ["Olha", "vc", "fazendo", "piada", "com", "coisa", "seria", "de", "novo", "banguela", ",", "tome", "tento"]
# ::lemmas ["Olha", "vc", "fazendo", "piada", "com", "coisa", "seria", "de", "novo", "banguela", ",", "tome", "tento"]
(c43-3 / multi-sentence
       :snt1 (c43-8 / laugh-01
                    :ARG0 (c43-7 / person
                                 :name (c43-2 / name
                                              :op1 "Olha"))
                    :manner (c43-0 / fuck-01)
                    :ARG1-of (c43-9 / cause-01
                                    :ARG0 (c43-4 / piada))
                    :mode expressive)
       :snt2 (c43-12 / coisa-01
                     :ARG0 (c43-10 / i)
                     :ARG1 (c43-5 / seria
                                  :mod (c43-6 / novo
                                              :mod (c43-1 / banguela))))
       :snt3 (c43-11 / tento
                     :domain c43-10))

# ::snt Kkkk pode crer
# ::tokens ["Kkkk", "pode", "crer"]
# ::lemmas ["Kkkk", "pode", "crer"]
(c44-1 / person
       :name (c44-0 / name
                    :op1 "Kkkk"
                    :op2 "Pode"
                    :op3 "Crer"))

# ::snt Piada triste...
# ::tokens ["Piada", "triste", "..."]
# ::lemmas ["Piada", "triste", "..."]
(c45-0 / piada)

# ::snt Hahahahahaha ta uma verdade! Talvez o aerolito fosse mais eficiente que ele!
# ::tokens ["Hahahahahaha", "ta", "uma", "verdade", "!", "Talvez", "o", "aerolito", "fosse", "mais", "eficiente", "que", "ele", "!"]
# ::lemmas ["Hahahahahaha", "ta", "uma", "verdade", "!", "Talvez", "o", "aerolito", "fosse", "mais", "eficiente", "que", "ele", "!"]
(c46-2 / multi-sentence
       :snt1 (c46-9 / ta
                    :mod (c46-6 / verdade)
                    :mode expressive)
       :snt2 (c46-0 / fosse-01
                    :ARG0 (c46-8 / person
                                 :name (c46-3 / name
                                              :op1 "Talvez")
                                 :mod (c46-1 / o
                                             :op1 (c46-5 / aerolito)))
                    :ARG1 (c46-4 / possible-01
                                 :ARG1 (c46-7 / excel-01
                                              :ARG0 (c46-10 / person
                                                            :name c46-3
                                                            :op1 "Ele"))
                                 :polarity -)))

# ::snt Triste mas verdade. Piada sincera e pronta.
# ::tokens ["Triste", "mas", "verdade", ".", "Piada", "sincera", "e", "pronta", "."]
# ::lemmas ["Triste", "mas", "verdade", ".", "Piada", "sincera", "e", "pronta", "."]
(c47-1 / multi-sentence
       :snt1 (c47-3 / say-01
                    :ARG0 (c47-9 / i)
                    :ARG1 (c47-6 / verdade
                                 :domain (c47-8 / person
                                                :name (c47-2 / name
                                                             :op1 "Triste")
                                                :ARG2-of c47-3)))
       :snt2 (c47-0 / sincera
                    :mod (c47-7 / e
                                :op1 (c47-4 / pronta))
                    :ARG1-of c47-3
                    :ARG0 (c47-5 / i)))

# ::snt Quem evitaria o incndio seria o acervo, aps adquirir vida prpria; Ben Stiller apenas correria assustado (dentro do museu, nunca pra fora dele)
# ::tokens ["Quem", "evitaria", "o", "incndio", "seria", "o", "acervo", ",", "aps", "adquirir", "vida", "prpria", ";", "Ben", "Stiller", "apenas", "correria", "assustado", "(", "dentro", "do", "museu", ",", "nunca", "pra", "fora", "dele", ")"]
# ::lemmas ["Quem", "evitaria", "o", "incndio", "seria", "o", "acervo", ",", "ap", "adquirir", "vida", "prpria", ";", "Ben", "Stiller", "apenas", "correria", "assustado", "(", "dentro", "do", "museu", ",", "nunca", "pra", "fora", "dele", ")"]
(c48-7 / multi-sentence
       :snt1 (c48-4 / quem-01
                    :ARG1 (c48-5 / and
                                 :op1 (c48-15 / evitaria)
                                 :op2 (c48-18 / incndio)
                                 :op3 (c48-6 / adquirir-00
                                             :ARG1 (c48-1 / vida
                                                          :mod (c48-16 / prpria)))))
       :snt2 (c48-8 / person
                    :name (c48-14 / name
                                  :op1 "Ben"
                                  :op2 "Stiller")
                    :ARG1-of (c48-3 / apenas
                                    :op1 (c48-11 / country-region
                                                 :name (c48-9 / name
                                                              :op1 "Correria")
                                                 :ARG1-of (c48-2 / mean-01
                                                                 :ARG2 c48-5
                                                                 :op1 (c48-19 / do-02
                                                                              :ARG1 (c48-12 / dentro
                                                                                            :mod (c48-13 / museu))
                                                                              :op2 (c48-17 / nunca
                                                                                           :mod (c48-0 / pra
                                                                                                       :mod (c48-10 / dele)))))))))

# ::snt Exato! Mas fiquei pensando depois, no era bem ele, era aquela tbua egpcia, no?
# ::tokens ["Exato", "!", "Mas", "fiquei", "pensando", "depois", ",", "no", "era", "bem", "ele", ",", "era", "aquela", "tbua", "egpcia", ",", "no", "?"]
# ::lemmas ["Exato", "!", "Mas", "fiquei", "pensando", "depois", ",", "no", "era", "bem", "ele", ",", "era", "aquela", "tbua", "egpcia", ",", "no", "?"]
(c49-11 / multi-sentence
        :snt1 (c49-15 / exato
                      :mode expressive)
        :snt2 (c49-6 / and
                     :op1 (c49-10 / be-located-at-91
                                  :ARG1 (c49-16 / penando-)
                                  :ARG2 (c49-7 / era))
                     :op2 (c49-0 / be-located-at-91
                                 :ARG1 (c49-12 / era)
                                 :ARG2 (c49-5 / amr-unknown)
                                 :polarity -)
                     :op3 (c49-2 / be-located-at-91
                                 :ARG1 (c49-13 / era)
                                 :ARG2 (c49-3 / amr-unknown))
                     :op4 (c49-9 / be-located-at-91
                                 :ARG1 c49-13
                                 :ARG2 (c49-8 / era
                                              :mod (c49-18 / aquela)))
                     :op5 (c49-4 / be-located-at-91
                                 :ARG1 (c49-1 / egpcia)
                                 :ARG2 (c49-17 / amr-unknown))
                     :polarity (c49-14 / amr-unknown)))

# ::snt Yep. Day one. Douche
# ::tokens ["Yep", ".", "Day", "one", ".", "Douche"]
# ::lemmas ["yep", ".", "day", "one", ".", "Douche"]
(c50-2 / multi-sentence
       :snt1 (c50-1 / yep)
       :snt2 (c50-4 / douche)
       :snt1 (c50-3 / day
                    :ord (c50-0 / ordinal-entity
                                :value 1)))
