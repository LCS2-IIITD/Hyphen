# ::snt although I think they make a cute couple I don't see this relationship as long term. Gwen is too LA and Blake is pure country.
# ::tokens ["although", "I", "think", "they", "make", "a", "cute", "couple", "I", "do", "n't", "see", "this", "relationship", "as", "long", "term", ".", "Gwen", "is", "too", "LA", "and", "Blake", "is", "pure", "country", "."]
# ::lemmas ["although", "i", "think", "they", "make", "a", "cute", "couple", "i", "do", "not", "see", "this", "relationship", "as", "long", "term", ".", "Gwen", "be", "too", "LA", "and", "Blake", "be", "pure", "country", "."]
(c1-10 / multi-sentence
       :snt1 (c1-6 / have-concession-91
                   :ARG1 (c1-0 / see-01
                               :ARG0 (c1-21 / i)
                               :ARG1 (c1-17 / relation-03
                                            :mod (c1-8 / this))
                               :ARG2 (c1-2 / long-03)
                               :polarity -)
                   :ARG2 (c1-14 / think-01
                                :ARG0 c1-21
                                :ARG1 (c1-13 / couple
                                             :mod (c1-9 / cute)
                                             :domain (c1-22 / they))))
       :snt2 (c1-7 / and
                   :op1 (c1-20 / have-mod-91
                               :ARG1 (c1-18 / person
                                            :name (c1-16 / name
                                                         :op1 "Gwen"))
                               :ARG2 (c1-3 / city
                                           :name (c1-12 / name
                                                        :op1 "LA"))
                               :ARG3 (c1-1 / too))
                   :op2 (c1-5 / have-mod-91
                              :ARG1 (c1-11 / person
                                           :name (c1-19 / name
                                                        :op1 "Blake"))
                              :ARG2 (c1-15 / country
                                           :ARG1-of (c1-4 / pure-02)))))

# ::snt she did tho
# ::tokens ["she", "did", "tho"]
# ::lemmas ["she", "do", "tho"]
(c2-1 / have-concession-91
      :ARG1 (c2-0 / do-02
                  :ARG0 (c2-2 / she)))

# ::snt Miranda didn't cause shit. Blake has always been a horn dog...
# ::tokens ["Miranda", "did", "n't", "cause", "shit", ".", "Blake", "has", "always", "been", "a", "horn", "dog", "..."]
# ::lemmas ["Miranda", "do", "not", "cause", "shit", ".", "Blake", "have", "always", "be", "a", "horn", "dog", "..."]
(c3-1 / multi-sentence
      :snt1 (c3-7 / cause-01
                  :ARG0 (c3-5 / person
                              :name (c3-0 / name
                                          :op1 "Miranda"))
                  :ARG1 (c3-2 / shit)
                  :polarity -)
      :snt2 (c3-9 / dog
                  :mod (c3-4 / horn)
                  :domain (c3-3 / person
                                :name (c3-6 / name
                                            :op1 "Blake"))
                  :time (c3-8 / always)))

# ::snt of course it changes lol Miranda caused her divorce not Gwen...
# ::tokens ["of", "course", "it", "changes", "lol", "Miranda", "caused", "her", "divorce", "not", "Gwen", "..."]
# ::lemmas ["of", "course", "it", "change", "lol", "Miranda", "cause", "her", "divorce", "not", "Gwen", "..."]
(c4-7 / change-01
      :ARG1 (c4-8 / it)
      :mod (c4-0 / of-course)
      :ARG2-of (c4-5 / laugh-01
                     :ARG0 (c4-3 / i)
                     :manner (c4-10 / loud)
                     :mode expressive)
      :ARG1-of (c4-11 / instead-of-91
                      :ARG2 (c4-12 / cause-01
                                   :ARG0 (c4-6 / person
                                               :name (c4-1 / name
                                                           :op1 "Miranda"))
                                   :ARG1 (c4-9 / divorce-01
                                               :ARG0 c4-6
                                               :ARG1 (c4-2 / person
                                                           :name (c4-4 / name
                                                                       :op1 "Gwen"))))))

# ::snt oh ya, real "painful split." He looked like he was in "real" pain.
# ::tokens ["oh", "ya", ",", "real", "\"", "painful", "split", ".", "\"", "He", "looked", "like", "he", "was", "in", "\"", "real", "\"", "pain", "."]
# ::lemmas ["oh", "ya", ",", "real", "\"", "painful", "split", ".", "\"", "he", "look", "like", "he", "be", "in", "\"", "real", "\"", "pain", "."]
(c6-2 / multi-sentence
      :snt1 (c6-4 / split-01
                  :ARG1-of (c6-7 / pain-01
                                 :ARG1-of (c6-5 / real-04))
                  :mod (c6-0 / oh
                             :ARG1 (c6-1 / you)
                             :mode expressive))
      :snt2 (c6-8 / look-02
                  :ARG0 (c6-6 / he)
                  :ARG1 (c6-3 / pain-01
                              :ARG1 c6-6
                              :ARG1-of (c6-9 / real-04))))

# ::snt we're hoping to hear wedding bells sooner than later! Put a ring on it
# ::tokens ["we", "'re", "hoping", "to", "hear", "wedding", "bells", "sooner", "than", "later", "!", "Put", "a", "ring", "on", "it"]
# ::lemmas ["we", "be", "hope", "to", "hear", "wedding", "bell", "soon", "than", "later", "!", "put", "a", "ring", "on", "it"]
(c7-2 / multi-sentence
      :snt1 (c7-7 / hope-01
                  :ARG0 (c7-11 / we)
                  :ARG1 (c7-12 / hear-01
                               :ARG0 c7-11
                               :ARG1 (c7-0 / bell
                                           :mod (c7-10 / wed-01))
                               :time (c7-4 / soon
                                           :ARG2-of (c7-6 / have-degree-91
                                                          :ARG1 c7-12
                                                          :ARG3 (c7-8 / more)
                                                          :ARG4 (c7-14 / after
                                                                       :op1 (c7-3 / now))))))
      :snt2 (c7-9 / put-01
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-5 / ring)
                  :ARG2 (c7-13 / it)
                  :mode imperative))

# ::snt lovely couple
# ::tokens ["lovely", "couple"]
# ::lemmas ["lovely", "couple"]
(c8-0 / couple
      :ARG1-of (c8-1 / love-01))

# ::snt Blakes like any other man he's fell in love with the wrong head
# ::tokens ["Blakes", "like", "any", "other", "man", "he", "'s", "fell", "in", "love", "with", "the", "wrong", "head"]
# ::lemmas ["blake", "like", "any", "other", "man", "he", "be", "fall", "in", "love", "with", "the", "wrong", "head"]
(c9-4 / resemble-01
      :ARG1 (c9-3 / shake-01)
      :ARG2 (c9-2 / man
                  :mod (c9-0 / other)
                  :mod (c9-8 / any)
                  :ARG1-of (c9-1 / fall-07
                                 :ARG2 (c9-6 / love-01
                                             :ARG0 c9-2
                                             :ARG1 (c9-5 / head
                                                         :ARG1-of (c9-7 / wrong-04))))))

# ::snt it's from the rolling stone interview
# ::tokens ["it", "'s", "from", "the", "rolling", "stone", "interview"]
# ::lemmas ["it", "be", "from", "the", "roll", "stone", "interview"]
(c10-0 / be-from-91
       :ARG1 (c10-4 / it)
       :ARG2 (c10-2 / interview-01
                    :manner (c10-1 / stone
                                   :ARG1-of (c10-3 / roll-01))))

# ::snt They are happy together . Nice couple.
# ::tokens ["They", "are", "happy", "together", ".", "Nice", "couple", "."]
# ::lemmas ["they", "be", "happy", "together", ".", "nice", "couple", "."]
(c11-0 / multi-sentence
       :snt1 (c11-2 / happy-01
                    :ARG1 (c11-4 / they)
                    :mod (c11-5 / together))
       :snt2 (c11-3 / couple
                    :ARG1-of (c11-1 / nice-01)))

# ::snt isn't this taken from a different interview that had nothing to do with E? Jesus. Stop using others stuff.
# ::tokens ["is", "n't", "this", "taken", "from", "a", "different", "interview", "that", "had", "nothing", "to", "do", "with", "E", "?", "Jesus", ".", "Stop", "using", "others", "stuff", "."]
# ::lemmas ["be", "not", "this", "take", "from", "a", "different", "interview", "that", "have", "nothing", "to", "do", "with", "e", "?", "Jesus", ".", "stop", "use", "other", "stuff", "."]
(c12-3 / multi-sentence
       :snt1 (c12-10 / take-01
                     :ARG1 (c12-12 / this)
                     :ARG3 (c12-11 / interview-01
                                   :ARG1-of (c12-13 / differ-02)
                                   :ARG0-of (c12-7 / have-to-do-with-04
                                                   :ARG1 (c12-8 / person
                                                                :name (c12-4 / name
                                                                             :op1 "E"))
                                                   :ARG2 (c12-9 / nothing)))
                     :ARG1-of (c12-6 / request-confirmation-91))
       :snt2 (c12-5 / stop-01
                    :ARG0 (c12-2 / you)
                    :ARG1 (c12-14 / use-01
                                  :ARG0 c12-2
                                  :ARG1 (c12-0 / stuff
                                               :mod (c12-1 / other)))
                    :mode imperative))

# ::snt my rebound is in its th year. Such stupid people
# ::tokens ["my", "rebound", "is", "in", "its", "th", "year", ".", "Such", "stupid", "people"]
# ::lemmas ["my", "rebound", "be", "in", "its", "th", "year", ".", "such", "stupid", "people"]
(c13-4 / multi-sentence
       :snt1 (c13-2 / be-temporally-at-91
                    :ARG1 (c13-6 / rebound-01
                                 :ARG0 (c13-8 / i))
                    :ARG2 (c13-3 / year
                                 :ord (c13-0 / ordinal-entity
                                             :value 3)))
       :snt2 (c13-7 / person
                    :mod (c13-5 / stupid
                                :degree (c13-1 / such))))

# ::snt there are many from Tennessee /OK who know EXACTLY what M L is, and it isn't the Virgin Mary. Her fans chose to ignore it
# ::tokens ["there", "are", "many", "from", "Tennessee", "/OK", "who", "know", "EXACTLY", "what", "M", "L", "is", ",", "and", "it", "is", "n't", "the", "Virgin", "Mary", ".", "Her", "fans", "chose", "to", "ignore", "it"]
# ::lemmas ["there", "be", "many", "from", "Tennessee", "/ok", "who", "know", "exactly", "what", "M", "L", "be", ",", "and", "it", "be", "not", "the", "Virgin", "Mary", ".", "her", "fan", "choose", "to", "ignore", "it"]
(c14-2 / multi-sentence
       :snt1 (c14-15 / and
                     :op1 (c14-8 / person
                                 :quant (c14-7 / many)
                                 :source (c14-4 / state
                                                :name (c14-3 / name
                                                             :op1 "Tennessee"))
                                 :ARG0-of (c14-9 / know-01
                                                 :ARG1 (c14-13 / thing
                                                               :domain (c14-5 / person
                                                                              :name (c14-10 / name
                                                                                            :op1 "M"
                                                                                            :op2 "L"))
                                                               :mod (c14-6 / exact))))
                     :op2 (c14-16 / person
                                  :name (c14-11 / name
                                                :op1 "Virgin"
                                                :op2 "Mary")
                                  :domain c14-5
                                  :polarity -))
       :snt2 (c14-12 / choose-01
                     :ARG0 (c14-0 / fan
                                  :poss (c14-1 / she))
                     :ARG1 (c14-14 / ignore-01
                                   :ARG0 c14-0
                                   :ARG1 c14-13)))

# ::snt like most weak men, he had to have a spare tire. He and Gwen a both home wreckers
# ::tokens ["like", "most", "weak", "men", ",", "he", "had", "to", "have", "a", "spare", "tire", ".", "He", "and", "Gwen", "a", "both", "home", "wreckers"]
# ::lemmas ["like", "most", "weak", "man", ",", "he", "have", "to", "have", "a", "spare", "tire", ".", "he", "and", "Gwen", "a", "both", "home", "wrecker"]
(c15-2 / multi-sentence
       :snt1 (c15-0 / obligate-01
                    :ARG1 (c15-8 / he)
                    :ARG2 (c15-14 / have-03
                                  :ARG0 c15-8
                                  :ARG1 (c15-15 / tire
                                                :ARG1-of (c15-4 / spare-02)))
                    :ARG1-of (c15-5 / resemble-01
                                    :ARG2 (c15-9 / man
                                                 :ARG1-of (c15-13 / weak-02
                                                                  :ARG2-of (c15-7 / have-degree-91
                                                                                  :ARG1 c15-9
                                                                                  :ARG3 (c15-17 / most))))))
       :snt2 (c15-6 / and
                    :op1 (c15-16 / he)
                    :op2 (c15-10 / person
                                 :name (c15-3 / name
                                              :op1 "Gwen"))
                    :mod (c15-1 / both)
                    :ARG0-of (c15-11 / wreck-01
                                     :location (c15-12 / home))))

# ::snt yup
# ::tokens ["yup"]
# ::lemmas ["yup"]
(c16-0 / yup)

# ::snt Thats a good thing, they are very inspirational
# ::tokens ["That", "s", "a", "good", "thing", ",", "they", "are", "very", "inspirational"]
# ::lemmas ["that", "s", "a", "good", "thing", ",", "they", "be", "very", "inspirational"]
(c17-5 / good-02
       :ARG1 (c17-2 / thing
                    :domain (c17-4 / that))
       :ARG1-of (c17-1 / cause-01
                       :ARG0 (c17-3 / inspire-01
                                    :ARG0 (c17-6 / they)
                                    :degree (c17-0 / very))))

# ::snt saying goes to get over your ex is to get under someone else.....
# ::tokens ["saying", "goes", "to", "get", "over", "your", "ex", "is", "to", "get", "under", "someone", "else", "....."]
# ::lemmas ["say", "go", "to", "get", "over", "your", "ex", "be", "to", "get", "under", "someone", "else", "....."]
(c18-8 / go-11
       :ARG1 (c18-3 / say-01
                    :ARG0 (c18-2 / you))
       :ARG2 (c18-7 / get-03
                    :ARG1 c18-2
                    :ARG2 (c18-10 / under
                                  :op1 (c18-0 / someone
                                              :mod (c18-4 / else)))
                    :purpose (c18-1 / over-02
                                    :ARG1 c18-2
                                    :ARG2 (c18-6 / person
                                                 :ARG0-of (c18-5 / have-rel-role-91
                                                                 :ARG1 c18-2
                                                                 :ARG2 (c18-11 / significant-other)
                                                                 :time (c18-9 / ex))))))

# ::snt I believe that their love is strong, I think they will be fine. They keep in contact by phone
# ::tokens ["I", "believe", "that", "their", "love", "is", "strong", ",", "I", "think", "they", "will", "be", "fine", ".", "They", "keep", "in", "contact", "by", "phone"]
# ::lemmas ["i", "believe", "that", "their", "love", "be", "strong", ",", "i", "think", "they", "will", "be", "fine", ".", "they", "keep", "in", "contact", "by", "phone"]
(c19-2 / multi-sentence
       :snt1 (c19-12 / and
                     :op1 (c19-1 / believe-01
                                 :ARG0 (c19-11 / i)
                                 :ARG1 (c19-3 / strong-02
                                              :ARG1 (c19-6 / love-01
                                                           :ARG0 (c19-10 / they))))
                     :op2 (c19-14 / think-01
                                  :ARG0 (c19-4 / i)
                                  :ARG1 (c19-0 / fine-04
                                               :ARG1 (c19-13 / they))))
       :snt2 (c19-7 / keep-02
                    :ARG0 (c19-5 / they)
                    :ARG1 (c19-9 / contact-01
                                 :ARG0 c19-5
                                 :medium (c19-8 / phone))))

# ::snt throwing up... Stop talking, obviously he feels he needs to justify shit.Wait till another blonde singer comes along.
# ::tokens ["throwing", "up", "...", "Stop", "talking", ",", "obviously", "he", "feels", "he", "needs", "to", "justify", "shit", ".", "Wait", "till", "another", "blonde", "singer", "comes", "along", "."]
# ::lemmas ["throw", "up", "...", "stop", "talk", ",", "obviously", "he", "feel", "he", "need", "to", "justify", "shit", ".", "wait", "till", "another", "blonde", "singer", "come", "along", "."]
(c20-12 / multi-sentence
        :snt1 (c20-7 / throw-up-06
                     :ARG0 (c20-4 / you)
                     :mode imperative)
        :snt2 (c20-0 / stop-01
                     :ARG0 c20-4
                     :ARG1 (c20-14 / talk-01
                                   :ARG0 c20-4)
                     :ARG1-of (c20-13 / cause-01
                                      :ARG0 (c20-16 / feel-02
                                                    :ARG0 (c20-5 / he)
                                                    :ARG1 (c20-17 / need-01
                                                                  :ARG0 c20-5
                                                                  :ARG1 (c20-6 / justify-01
                                                                               :ARG0 c20-5
                                                                               :ARG1 (c20-2 / shit)))
                                                    :ARG1-of (c20-3 / obvious-01)))
                     :mode imperative)
        :snt3 (c20-19 / wait-01
                      :ARG1 (c20-8 / you)
                      :time (c20-15 / until
                                    :op1 (c20-10 / come-along-19
                                                 :ARG1 (c20-18 / person
                                                               :ARG0-of (c20-1 / sing-01)
                                                               :mod (c20-11 / blonde)
                                                               :mod (c20-9 / another))))
                      :mode imperative))

# ::snt Aww
# ::tokens ["Aww"]
# ::lemmas ["Aww"]
(c21-0 / aw
       :mode expressive)

# ::snt Perhaps Blake should man up and stop relying on women to "save" him.
# ::tokens ["Perhaps", "Blake", "should", "man", "up", "and", "stop", "relying", "on", "women", "to", "\"", "save", "\"", "him", "."]
# ::lemmas ["perhaps", "Blake", "should", "man", "up", "and", "stop", "rely", "on", "woman", "to", "\"", "save", "\"", "he", "."]
(c22-6 / possible-01
       :ARG1 (c22-5 / recommend-01
                    :ARG1 (c22-8 / and
                                 :op1 (c22-1 / man-up-00
                                             :ARG1 (c22-2 / person
                                                          :name (c22-3 / name
                                                                       :op1 "Blake")))
                                 :op2 (c22-4 / stop-01
                                             :ARG1 (c22-9 / rely-01
                                                          :ARG0 c22-2
                                                          :ARG1 (c22-7 / woman)
                                                          :ARG2 (c22-0 / save-02
                                                                       :ARG0 c22-7
                                                                       :ARG1 c22-2))))))

# ::snt it will b tough these as they will not c each other much the next months hope their love is strong
# ::tokens ["it", "will", "b", "tough", "these", "as", "they", "will", "not", "c", "each", "other", "much", "the", "next", "months", "hope", "their", "love", "is", "strong"]
# ::lemmas ["it", "will", "b", "tough", "these", "as", "they", "will", "not", "c", "each", "other", "much", "the", "next", "months", "hope", "their", "love", "be", "strong"]
(c23-7 / tough-02
       :ARG1 (c23-9 / this)
       :ARG1-of (c23-6 / cause-01
                       :ARG0 (c23-3 / hope-01
                                    :ARG0 (c23-8 / they)
                                    :ARG1 (c23-2 / strong-02
                                                 :ARG1 (c23-4 / love-01
                                                              :ARG0 c23-8))
                                    :time (c23-0 / month
                                                 :mod (c23-1 / next))
                                    :quant (c23-5 / much
                                                  :polarity -))))

# ::snt I love Jason Kennedy so much...he is so Shefani!!!
# ::tokens ["I", "love", "Jason", "Kennedy", "so", "much", "...", "he", "is", "so", "Shefani", "!", "!", "!"]
# ::lemmas ["i", "love", "Jason", "Kennedy", "so", "much", "...", "he", "be", "so", "Shefani", "!", "!", "!"]
(c24-6 / love-01
       :ARG0 (c24-8 / i)
       :ARG1 (c24-5 / person
                    :name (c24-2 / name
                                 :op1 "Jason"
                                 :op2 "Kennedy"))
       :degree (c24-1 / much
                      :degree (c24-3 / so))
       :ARG0-of (c24-7 / cause-01
                       :ARG1 c24-5
                       :name (c24-4 / name
                                    :op1 "Shefani")
                       :domain c24-5
                       :degree (c24-0 / so)))

# ::snt blessed ! Gwen Stefani is good girl
# ::tokens ["blessed", "!", "Gwen", "Stefani", "is", "good", "girl"]
# ::lemmas ["bless", "!", "Gwen", "Stefani", "be", "good", "girl"]
(c25-0 / bless-01
       :ARG1 (c25-4 / girl
                    :ARG1-of (c25-3 / good-02)
                    :domain (c25-2 / person
                                   :name (c25-1 / name
                                                :op1 "Gwen"
                                                :op2 "Ste Stefani")))
       :mode expressive)

# ::snt cuties
# ::tokens ["cuties"]
# ::lemmas ["cutie"]
(c26-1 / person
       :ARG0-of (c26-0 / uties-01))

# ::snt doesn't change what I said....
# ::tokens ["does", "n't", "change", "what", "I", "said", "...."]
# ::lemmas ["do", "not", "change", "what", "i", "say", "...."]
(c27-1 / change-01
       :ARG1 (c27-3 / thing
                    :ARG1-of (c27-0 / say-01
                                    :ARG0 (c27-2 / i)))
       :polarity -)

# ::snt POWER COUPLE!
# ::tokens ["POWER", "COUPLE", "!"]
# ::lemmas ["POWER", "COUPLE", "!"]
(c28-2 / pour-01
       :ARG0 (c28-1 / you)
       :ARG1 (c28-0 / cup)
       :mode imperative)

# ::snt I believe it's called a rebound
# ::tokens ["I", "believe", "it", "'s", "called", "a", "rebound"]
# ::lemmas ["i", "believe", "it", "be", "call", "a", "rebound"]
(c29-0 / believe-01
       :ARG0 (c29-4 / i)
       :ARG1 (c29-3 / call-01
                    :ARG1 (c29-1 / it)
                    :ARG2 (c29-2 / rebound-01)))

# ::snt given that she caused it, that's a relief.
# ::tokens ["given", "that", "she", "caused", "it", ",", "that", "'s", "a", "relief", "."]
# ::lemmas ["give", "that", "she", "cause", "it", ",", "that", "be", "a", "relief", "."]
(c30-1 / relieve-01
       :domain (c30-4 / that)
       :ARG1-of (c30-2 / cause-01
                       :ARG0 (c30-0 / she)
                       :ARG1 (c30-3 / it)))

# ::snt un clavo saca a otro clavo
# ::tokens ["un", "clavo", "saca", "a", "otro", "clavo"]
# ::lemmas ["un", "clavo", "saca", "a", "otro", "clavo"]
(c31-1 / multi-sentence
       :snt1 (c31-0 / have-polarity-91
                    :ARG2 -)
       :snt2 (c31-2 / saca
                    :mode expressive)
       :snt3 c31-0
       :ARG2 -)

# ::snt we know, old news.
# ::tokens ["we", "know", ",", "old", "news", "."]
# ::lemmas ["we", "know", ",", "old", "news", "."]
(c32-2 / know-01
       :ARG0 (c32-0 / we)
       :topic (c32-1 / news
                     :mod (c32-3 / old)))

# ::snt NOT TRUE COME ON PEOPLE
# ::tokens ["NOT", "TRUE", "COME", "ON", "PEOPLE"]
# ::lemmas ["not", "true", "come", "ON", "people"]
(c33-2 / say-01
       :ARG1 (c33-1 / true-01
                    :polarity -)
       :ARG2 (c33-0 / person))

# ::snt yep so amazing xxx
# ::tokens ["yep", "so", "amazing", "xxx"]
# ::lemmas ["yep", "so", "amazing", "xxx"]
(c34-3 / amaze-01
       :ARG0 (c34-4 / thing
                    :ARG1-of (c34-2 / sign-01))
       :degree (c34-0 / so)
       :mod (c34-1 / yep
                   :mode expressive))

# ::snt How many times do we have tell u people NO NO NO NO NO NO NO NO NO NO NO NO NO NO LISTEN NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO
# ::tokens ["How", "many", "times", "do", "we", "have", "tell", "u", "people", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "LISTEN", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"]
# ::lemmas ["how", "many", "time", "do", "we", "have", "tell", "u", "people", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "listen", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no", "no"]
(c35-4 / tell-01
       :ARG0 (c35-3 / we)
       :ARG1 (c35-6 / and
                    :op1 (c35-0 / no
                                :op2-of c35-6
                                :op3-of c35-6))
       :op4 c35-0
       :op5 c35-0
       :op6 c35-0
       :op7 c35-0
       :condition (c35-1 / listen-01
                         :polarity -)
       :ARG2 (c35-2 / person)
       :frequency (c35-5 / amr-unknown))

# ::snt Gosh dang..I was so hoping that it was true!
# ::tokens ["Gosh", "dang", "..", "I", "was", "so", "hoping", "that", "it", "was", "true", "!"]
# ::lemmas ["gosh", "dang", "..", "i", "be", "so", "hope", "that", "it", "be", "true", "!"]
(c36-2 / hope-01
       :ARG0 (c36-3 / i)
       :ARG1 (c36-4 / true-01
                    :ARG1 (c36-1 / it))
       :degree (c36-0 / so)
       :mod (c36-6 / dang
                   :mod (c36-5 / gosh)
                   :mode expressive)
       :mode expressive)

# ::snt NOT TRUE COME ON
# ::tokens ["NOT", "TRUE", "COME", "ON"]
# ::lemmas ["not", "true", "come", "on"]
(c37-0 / come-on-25
       :ARG1 (c37-1 / you)
       :ARG1-of (c37-2 / true-01
                       :polarity -)
       :mode imperative)

# ::snt Eu quero muito a felicidade dele,Sou f dele e ele meu idolo simplesmente...
# ::tokens ["Eu", "quero", "muito", "a", "felicidade", "dele", ",", "Sou", "f", "dele", "e", "ele", "meu", "idolo", "simplesmente", "..."]
# ::lemmas ["Eu", "quero", "muito", "a", "felicidade", "dele", ",", "Sou", "f", "dele", "e", "ele", "meu", "idolo", "simplesmente", "..."]
(c38-1 / multi-sentence
       :snt1 (c38-6 / quero
                    :ARG1-of (c38-5 / cause-01
                                    :ARG0 (c38-2 / string-entity
                                                 :value "le dele"))
                    :polarity -)
       :snt2 (c38-7 / and
                    :op1 (c38-0 / string-entity
                                :value "f dele")
                    :op2 (c38-8 / string-entity
                                :value " ele")
                    :op3 (c38-3 / string-entity
                                :domain (c38-4 / string-entity
                                               :value " idolo simplesmente")
                                :value "polite +")))

# ::snt Eu nao acho normal nao...So compatilho mesmo,pra trocar ideias,simplesmente...A pessoa fala o que acha e eu falo o que eu acho
# ::tokens ["Eu", "nao", "acho", "normal", "nao", "...", "So", "compatilho", "mesmo", ",", "pra", "trocar", "ideias", ",", "simplesmente", "...", "A", "pessoa", "fala", "o", "que", "acha", "e", "eu", "falo", "o", "que", "eu", "acho"]
# ::lemmas ["Eu", "nao", "acho", "normal", "nao", "...", "so", "compatilho", "mesmo", ",", "pra", "trocar", "ideia", ",", "simplesmente", "...", "a", "pessoa", "fala", "o", "que", "acha", "e", "eu", "falo", "o", "que", "eu", "acho"]
(c39-1 / multi-sentence
       :snt1 (c39-8 / cause-01
                    :ARG1 (c39-3 / have-mod-91
                                 :ARG1 (c39-0 / you)
                                 :ARG2 (c39-17 / common)))
       :snt2 (c39-9 / have-mod-91
                    :ARG1 (c39-13 / you)
                    :ARG2 (c39-10 / compatilho
                                  :mod (c39-4 / mesmo))
                    :ARG1-of (c39-16 / mean-01
                                     :ARG2 (c39-2 / have-mod-91
                                                  :ARG1 c39-13
                                                  :ARG2 (c39-11 / ideologue)
                                                  :ARG1-of (c39-5 / mean-01
                                                                  :ARG2 (c39-15 / have-mod-91
                                                                                :ARG1 c39-13
                                                                                :ARG2 (c39-12 / trocar))))))
       :snt3 (c39-6 / have-condition-91
                    :ARG2 (c39-7 / possible-01
                                 :ARG1 (c39-14 / differ-02))))

# ::snt Claro que nao...Cada um tem o seu sucesso,eles nao precisam ter inveja um do outro..Ele dela e nem ela dele
# ::tokens ["Claro", "que", "nao", "...", "Cada", "um", "tem", "o", "seu", "sucesso", ",", "eles", "nao", "precisam", "ter", "inveja", "um", "do", "outro", "..", "Ele", "dela", "e", "nem", "ela", "dele"]
# ::lemmas ["claro", "que", "nao", "...", "Cada", "um", "tem", "o", "seu", "sucesso", ",", "ele", "nao", "precisam", "ter", "inveja", "um", "do", "outro", "..", "Ele", "dela", "e", "nem", "ela", "dele"]
(c40-8 / multi-sentence
       :snt1 (c40-11 / call-01
                     :ARG0 (c40-18 / i)
                     :ARG1 (c40-16 / person
                                   :name (c40-13 / name
                                                 :op1 "Claro"))
                     :ARG2 (c40-10 / nao))
       :snt2 (c40-7 / cause-01
                    :ARG0 (c40-9 / possible-01
                                 :ARG1 (c40-0 / sucess-01
                                              :ARG0 (c40-2 / person))
                                 :polarity -)
                    :ARG1 (c40-1 / precisam-01
                                 :ARG0 (c40-3 / person
                                              :name (c40-17 / name
                                                            :op1 "Nao_1"))
                                 :ARG1 (c40-5 / ter-inveja
                                              :ARG1-of (c40-14 / request-confirmation-91
                                                               :ARG0 c40-18))))
       :snt3 (c40-4 / and
                    :op1 (c40-19 / dela
                                 :mod (c40-15 / Ele))
                    :op2 (c40-6 / ela
                                :mod (c40-12 / dele))))

# ::snt tem coisa que maldade com o seu dolo, o Blake. Mas se vc acha normal, ok.
# ::tokens ["tem", "coisa", "que", "maldade", "com", "o", "seu", "dolo", ",", "o", "Blake", ".", "Mas", "se", "vc", "acha", "normal", ",", "ok", "."]
# ::lemmas ["tem", "coisa", "que", "maldade", "com", "o", "seu", "dolo", ",", "o", "Blake", ".", "Mas", "se", "vc", "acha", "normal", ",", "ok", "."]
(c41-3 / multi-sentence
       :snt1 (c41-9 / coisa-00
                    :ARG0 (c41-10 / i)
                    :ARG1 (c41-6 / person
                                 :name (c41-2 / name
                                              :op1 "Maldade")
                                 :ARG1-of (c41-5 / mean-01
                                                 :ARG2 (c41-4 / person
                                                              :name (c41-7 / name
                                                                           :op1 "Blake")))))
       :snt2 (c41-13 / cause-01
                     :ARG0 (c41-11 / amr-unknown
                                   :ARG1-of (c41-8 / normal-02)
                                   :domain (c41-1 / you))
                     :ARG1 (c41-0 / okay-04
                                  :ARG1 (c41-12 / you))))

# ::snt So vc nao deveria se preocupar com o que eu publico,se eu replico ou compartilho porque eu quero
# ::tokens ["So", "vc", "nao", "deveria", "se", "preocupar", "com", "o", "que", "eu", "publico", ",", "se", "eu", "replico", "ou", "compartilho", "porque", "eu", "quero"]
# ::lemmas ["so", "vc", "nao", "deveria", "se", "preocupar", "com", "o", "que", "eu", "publico", ",", "se", "eu", "replico", "ou", "compartilho", "porque", "eu", "quero"]
(c42-5 / cause-01
       :ARG1 (c42-4 / possible-01
                    :ARG1 (c42-1 / predict-01
                                 :ARG0 (c42-9 / person
                                              :name (c42-0 / name
                                                           :op1 "Nao"
                                                           :op2 "deveria"))
                                 :ARG1 (c42-2 / and
                                              :op1 (c42-10 / come-01
                                                           :ARG1 c42-9
                                                           :ARG4 (c42-6 / public-02
                                                                        :ARG1 c42-9))
                                              :op2 (c42-3 / replicate-01
                                                          :ARG0 c42-9
                                                          :ARG1 (c42-7 / work-of-art
                                                                       :name c42-0
                                                                       :op1 "Cartilho")))
                                 :op3 (c42-8 / quero
                                             :domain c42-7))))

# ::snt nunca que o Blake ficaria com cimes do sucesso da Gwen, nem ela do dele. Jamais.
# ::tokens ["nunca", "que", "o", "Blake", "ficaria", "com", "cimes", "do", "sucesso", "da", "Gwen", ",", "nem", "ela", "do", "dele", ".", "Jamais", "."]
# ::lemmas ["nunca", "que", "o", "Blake", "ficaria", "com", "cime", "do", "sucesso", "da", "Gwen", ",", "nem", "ela", "do", "dele", ".", "Jamais", "."]
(c43-1 / multi-sentence
       :snt1 (c43-6 / have-concession-91
                    :ARG1 (c43-7 / possible-01
                                 :ARG1 (c43-0 / ficaria
                                              :mod (c43-2 / person
                                                          :name (c43-3 / name
                                                                       :op1 "Blake")))
                                 :polarity -)
                    :ARG2 (c43-10 / com-01
                                  :ARG0 c43-2
                                  :ARG1 (c43-15 / cop
                                                :mod (c43-4 / sucesso
                                                            :beneficiary (c43-13 / person
                                                                                 :name (c43-8 / name
                                                                                              :op1 "Gwen"))))))
       :snt2 (c43-5 / ela
                    :mod (c43-14 / dele)
                    :mod (c43-11 / person
                                 :mod (c43-12 / political-party
                                              :name (c43-9 / name
                                                           :op1 "Jamais")))))

# ::snt Eu compartilho por que eu quero....E tb para informar e trocar ideias,SIMPLES
# ::tokens ["Eu", "compartilho", "por", "que", "eu", "quero", "....", "E", "tb", "para", "informar", "e", "trocar", "ideias", ",", "SIMPLES"]
# ::lemmas ["Eu", "compartilho", "por", "que", "eu", "quero", "....", "e", "tb", "para", "informar", "e", "trocar", "ideia", ",", "simple"]
(c44-0 / multi-sentence
       :snt1 (c44-8 / compartilho
                    :domain (c44-5 / e)
                    :ARG1-of (c44-13 / cause-01
                                     :ARG0 (c44-10 / quero
                                                   :domain (c44-12 / e))))
       :snt2 (c44-6 / have-purpose-91
                    :ARG1 (c44-7 / publication
                                 :name (c44-1 / name
                                              :op1 "TSB"))
                    :ARG2 (c44-11 / inform-01
                                  :ARG1 (c44-4 / and
                                               :op1 (c44-3 / ideia
                                                           :mod (c44-9 / trocar))
                                               :op2 (c44-2 / simples)))))

# ::snt Pois e,ele tem o sucesso dele e ela tem o dela
# ::tokens ["Pois", "e", ",", "ele", "tem", "o", "sucesso", "dele", "e", "ela", "tem", "o", "dela"]
# ::lemmas ["Pois", "e", ",", "ele", "tem", "o", "sucesso", "dele", "e", "ela", "tem", "o", "dela"]
(c45-1 / and
       :op1 (c45-0 / have-polarity-91
                   :op2-of c45-1
                   :ARG2 -)
       :op3 c45-0
       :op4 c45-0
       :op5 c45-0
       :op6 c45-0
       :ARG2 -
       :ARG2 -
       :ARG2 -
       :ARG2 -
       :ARG2 -)

# ::snt pq vc replica uma bobagem dessas? Blake com inveja da Gwen? Fala srio
# ::tokens ["pq", "vc", "replica", "uma", "bobagem", "dessas", "?", "Blake", "com", "inveja", "da", "Gwen", "?", "Fala", "srio"]
# ::lemmas ["pq", "vc", "replica", "uma", "bobagem", "dessa", "?", "blake", "com", "inveja", "da", "Gwen", "?", "Fala", "srio"]
(c46-2 / multi-sentence
       :snt1 (c46-11 / and
                     :op1 (c46-7 / publication
                                 :name (c46-1 / name
                                              :op1 "Pq"
                                              :op2 "Vc"))
                     :op2 (c46-9 / create-01
                                 :ARG1 (c46-5 / replica)
                                 :ARG1-of (c46-12 / request-confirmation-91))
                     :op3 (c46-14 / come-01
                                  :ARG1 (c46-3 / person
                                               :name (c46-6 / name
                                                            :op1 "Blake"))
                                  :manner (c46-10 / inveja
                                                  :mod (c46-13 / person
                                                               :name (c46-8 / name
                                                                            :op1 "Gwen")))))
       :snt2 (c46-0 / fala
                    :mod (c46-4 / srio)))

# ::snt Wonder what will happen to the house building? Sorry for the kids
# ::tokens ["Wonder", "what", "will", "happen", "to", "the", "house", "building", "?", "Sorry", "for", "the", "kids"]
# ::lemmas ["wonder", "what", "will", "happen", "to", "the", "house", "building", "?", "sorry", "for", "the", "kid"]
(c47-1 / multi-sentence
       :snt1 (c47-6 / wonder-01
                    :ARG1 (c47-3 / event
                                 :topic (c47-0 / building
                                               :mod (c47-4 / house))))
       :snt2 (c47-2 / sorry-01
                    :ARG1 (c47-7 / i)
                    :ARG2 (c47-5 / kid)))

# ::snt Is it true???
# ::tokens ["Is", "it", "true", "?", "?", "?"]
# ::lemmas ["be", "it", "true", "?", "?", "?"]
(c48-2 / true-01
       :polarity (c48-0 / amr-unknown)
       :ARG1 (c48-1 / it))

# ::snt I work once a week in a radio station, and TOTALLY banned her music from my shows (Blake is unknown here anyway so,no big deal)
# ::tokens ["I", "work", "once", "a", "week", "in", "a", "radio", "station", ",", "and", "TOTALLY", "banned", "her", "music", "from", "my", "shows", "(", "Blake", "is", "unknown", "here", "anyway", "so", ",", "no", "big", "deal", ")"]
# ::lemmas ["i", "work", "once", "a", "week", "in", "a", "radio", "station", ",", "and", "TOTALLY", "ban", "her", "music", "from", "my", "show", "(", "Blake", "be", "unknown", "here", "anyway", "so", ",", "no", "big", "deal", ")"]
(c49-14 / multi-sentence
        :snt1 (c49-12 / and
                      :op1 (c49-20 / work-01
                                   :ARG0 (c49-21 / i)
                                   :ARG2 (c49-0 / station
                                                :mod (c49-18 / radio))
                                   :frequency (c49-3 / rate-entity-91
                                                     :ARG2 (c49-11 / temporal-quantity
                                                                   :unit (c49-2 / week)
                                                                   :quant 1)
                                                     :ARG1 1))
                      :op2 (c49-13 / ban-01
                                   :ARG0 c49-21
                                   :ARG1 (c49-7 / music
                                                :poss (c49-5 / she))
                                   :ARG2 (c49-4 / show-04
                                                :ARG0 c49-21)
                                   :degree (c49-16 / total)))
        :snt2 (c49-8 / know-01
                     :ARG0 (c49-6 / i)
                     :ARG1 (c49-19 / person
                                   :name (c49-17 / name
                                                 :op1 "Blake"))
                     :location (c49-9 / here)
                     :mod (c49-10 / anyway)
                     :ARG0-of (c49-15 / cause-01
                                      :ARG1 (c49-22 / deal-03
                                                    :mod (c49-1 / big
                                                                :polarity -)))
                     :polarity -))

# ::snt WAAAAY before they want people to believe.There's evidence(on her FB page) not many people apparently have paid attention to LOL
# ::tokens ["WAAAAY", "before", "they", "want", "people", "to", "believe", ".", "There", "'s", "evidence(on", "her", "FB", "page", ")", "not", "many", "people", "apparently", "have", "paid", "attention", "to", "LOL"]
# ::lemmas ["WAAAAY", "before", "they", "want", "people", "to", "believe", ".", "there", "be", "evidence(on", "her", "fb", "page", ")", "not", "many", "people", "apparently", "have", "pay", "attention", "to", "LOL"]
(c50-12 / multi-sentence
        :snt1 (c50-11 / before
                      :op1 (c50-17 / want-01
                                   :ARG0 (c50-9 / they)
                                   :ARG1 (c50-1 / believe-01
                                                :ARG0 (c50-16 / person)))
                      :quant (c50-3 / way))
        :snt2 (c50-15 / evidence
                      :location (c50-13 / page
                                        :mod (c50-5 / publication
                                                    :name (c50-14 / name
                                                                  :op1 "Facebook"))
                                        :poss (c50-0 / she))
                      :ARG0-of (c50-8 / attend-02
                                      :ARG1 c50-8
                                      :ARG0 (c50-4 / person
                                                   :quant (c50-6 / many))
                                      :ARG1-of (c50-7 / appear-02)
                                      :ARG2-of (c50-2 / laugh-01
                                                      :ARG0 (c50-18 / i)
                                                      :manner (c50-10 / loud)
                                                      :mode expressive)
                                      :polarity -)))
