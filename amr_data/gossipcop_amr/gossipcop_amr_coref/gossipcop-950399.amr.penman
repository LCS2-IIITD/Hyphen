# ::snt Samesies
# ::tokens ["Samesies"]
# ::lemmas ["samesie"]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "Samesies"))

# ::snt yes, cause won't it be lovely to see all those caramel macchiatos drizzled down the front of everyone's work clothes? I'l all for protecting ocean wildlife, but am thinking they need to go back to the drawing board on this one...
# ::tokens ["yes", ",", "cause", "wo", "n't", "it", "be", "lovely", "to", "see", "all", "those", "caramel", "macchiatos", "drizzled", "down", "the", "front", "of", "everyone", "'s", "work", "clothes", "?", "I'l", "all", "for", "protecting", "ocean", "wildlife", ",", "but", "am", "thinking", "they", "need", "to", "go", "back", "to", "the", "drawing", "board", "on", "this", "one", "..."]
# ::lemmas ["yes", ",", "cause", "will", "not", "it", "be", "lovely", "to", "see", "all", "those", "caramel", "macchiato", "drizzle", "down", "the", "front", "of", "everyone", "'s", "work", "clothe", "?", "i'l", "all", "for", "protect", "ocean", "wildlife", ",", "but", "be", "think", "they", "need", "to", "go", "back", "to", "the", "drawing", "board", "on", "this", "one", "..."]
(c2-13 / multi-sentence
       :snt1 (c2-2 / lovely
                   :domain (c2-0 / see-01
                                 :ARG1 (c2-26 / drip-01
                                              :ARG1 (c2-6 / macchiato
                                                          :mod (c2-8 / that)
                                                          :mod (c2-7 / all)
                                                          :mod c2-8))
                                 :ARG2 (c2-16 / down
                                              :op1 (c2-18 / front
                                                          :part-of (c2-15 / clothes
                                                                          :poss (c2-21 / everyone)
                                                                          :purpose (c2-23 / work-01))))))
       :ARG1-of (c2-20 / request-confirmation-91)
       :snt2 (c2-10 / contrast-01
                    :ARG1 (c2-4 / support-01
                                :ARG0 (c2-24 / i)
                                :ARG1 (c2-22 / protect-01
                                             :ARG1 (c2-3 / wildlife
                                                         :mod (c2-5 / ocean))))
                    :ARG2 (c2-17 / think-01
                                 :ARG0 c2-24
                                 :ARG1 (c2-19 / need-01
                                              :ARG0 (c2-25 / they)
                                              :ARG1 (c2-9 / go-back-19
                                                          :ARG1 c2-25
                                                          :ARG2 (c2-12 / board
                                                                       :mod (c2-14 / draw-02))
                                                          :topic (c2-11 / one
                                                                        :mod (c2-1 / this)))))))

# ::snt all plastic
# ::tokens ["all", "plastic"]
# ::lemmas ["all", "plastic"]
(c3-0 / plastic
      :mod (c3-1 / all))

# ::snt Can't wait to feel like a toddler again!
# ::tokens ["Ca", "n't", "wait", "to", "feel", "like", "a", "toddler", "again", "!"]
# ::lemmas ["can", "not", "wait", "to", "feel", "like", "a", "toddler", "again", "!"]
(c4-3 / wait-01
      :ARG1 (c4-4 / i)
      :ARG2 (c4-0 / feel-01
                  :ARG0 c4-4
                  :ARG1 (c4-1 / resemble-01
                              :ARG1 c4-4
                              :ARG2 (c4-5 / toddler))
                  :mod (c4-2 / again)))

# ::snt Wouldnt it be cool if you got a discount if you brought your own cup? No plastic!
# ::tokens ["Would", "nt", "it", "be", "cool", "if", "you", "got", "a", "discount", "if", "you", "brought", "your", "own", "cup", "?", "No", "plastic", "!"]
# ::lemmas ["would", "not", "it", "be", "cool", "if", "you", "get", "a", "discount", "if", "you", "bring", "your", "own", "cup", "?", "no", "plastic", "!"]
(c5-2 / multi-sentence
      :snt1 (c5-4 / cool-04
                  :ARG1 (c5-6 / get-01
                              :ARG0 (c5-1 / you)
                              :ARG1 (c5-7 / discount)
                              :condition (c5-0 / bring-01
                                               :ARG0 c5-1
                                               :ARG1 (c5-8 / cup
                                                           :poss c5-1)))
                  :polarity (c5-5 / amr-unknown))
      :snt2 (c5-3 / plastic
                  :polarity -))

# ::snt We dont want single usage plastic crap. Close all starbucks until they get it.
# ::tokens ["We", "do", "nt", "want", "single", "usage", "plastic", "crap", ".", "Close", "all", "starbucks", "until", "they", "get", "it", "."]
# ::lemmas ["we", "do", "not", "want", "single", "usage", "plastic", "crap", ".", "close", "all", "starbuck", "until", "they", "get", "it", "."]
(c6-1 / multi-sentence
      :snt1 (c6-8 / want-01
                  :ARG0 (c6-6 / we)
                  :ARG1 (c6-11 / thing
                               :ARG1-of (c6-9 / crap-01)
                               :consist-of (c6-5 / plastic)
                               :ARG1-of (c6-14 / use-01
                                               :ARG1-of (c6-3 / single-02)))
                  :polarity -)
      :snt2 (c6-15 / close-01
                   :ARG0 (c6-0 / you)
                   :ARG1 (c6-10 / company
                                :name (c6-2 / name
                                            :op1 "Starbucks")
                                :mod (c6-4 / all))
                   :time (c6-7 / until
                               :op1 (c6-12 / get-01
                                           :ARG0 (c6-13 / they)
                                           :ARG1 c6-11))
                   :mode imperative))

# ::snt Hello Tina, we are elated that you are excited and happy about our straw innoventions. Have an amazing day! -Anthony
# ::tokens ["Hello", "Tina", ",", "we", "are", "elated", "that", "you", "are", "excited", "and", "happy", "about", "our", "straw", "innoventions", ".", "Have", "an", "amazing", "day", "!", "-Anthony"]
# ::lemmas ["Hello", "Tina", ",", "we", "be", "elated", "that", "you", "be", "excited", "and", "happy", "about", "our", "straw", "innovention", ".", "have", "an", "amazing", "day", "!", "-anthony"]
(c7-10 / multi-sentence
       :snt1 (c7-0 / say-01
                   :ARG0 (c7-18 / i)
                   :ARG1 (c7-4 / hello)
                   :ARG2 (c7-7 / and
                               :op1 (c7-14 / elate-01
                                           :ARG0 (c7-6 / and
                                                       :op1 (c7-8 / excite-01
                                                                  :ARG0 (c7-2 / innovate-01
                                                                              :ARG0 (c7-16 / we)
                                                                              :mod (c7-1 / straw))
                                                                  :ARG1 (c7-15 / person
                                                                               :name (c7-13 / name
                                                                                            :op1 "Tina")))
                                                       :op2 (c7-17 / happy-01
                                                                   :ARG0 c7-2
                                                                   :ARG1 c7-16))
                                           :ARG1 c7-16)
                               :op2 (c7-3 / have-03
                                          :ARG0 (c7-11 / person
                                                       :name c7-13
                                                       :op1 "Anthony")
                                          :mode imperative)
                               :ARG1 (c7-19 / day
                                            :ARG0-of (c7-5 / amaze-01)))
                   :snt2-of c7-10)
       :ARG0 (c7-9 / i)
       :ARG1 (c7-12 / and
                    :op1 c7-8
                    :ARG0 c7-2
                    :ARG1 c7-16)
       :op2 c7-17
       :ARG0 c7-2
       :ARG1 c7-16
       :ARG2 c7-11)

# ::snt can yall give us recyclable straws plz
# ::tokens ["can", "y", "all", "give", "us", "recyclable", "straws", "plz"]
# ::lemmas ["can", "you", "all", "give", "we", "recyclable", "straw", "plz"]
(c9-3 / possible-01
      :ARG1 (c9-6 / give-01
                  :ARG0 (c9-0 / you
                              :mod (c9-5 / all))
                  :ARG1 (c9-1 / straw
                              :ARG1-of (c9-2 / recycle-01
                                             :ARG1-of c9-3)))
      :ARG2 (c9-4 / we)
      :polite +)

# ::snt Then Im bringing my own paper straws for my green tea frap. How else can I drink a frap ?
# ::tokens ["Then", "I", "m", "bringing", "my", "own", "paper", "straws", "for", "my", "green", "tea", "frap", ".", "How", "else", "can", "I", "drink", "a", "frap", "?"]
# ::lemmas ["then", "i", "m", "bring", "my", "own", "paper", "straw", "for", "my", "green", "tea", "frap", ".", "how", "else", "can", "i", "drink", "a", "frap", "?"]
(c10-2 / multi-sentence
       :snt1 (c10-1 / bring-01
                    :ARG0 (c10-10 / i)
                    :ARG1 (c10-4 / straw
                                 :consist-of (c10-8 / paper)
                                 :poss c10-10)
                    :purpose (c10-0 / frap
                                    :mod (c10-11 / tea
                                                 :ARG1-of (c10-12 / green-03))
                                    :poss c10-10)
                    :time (c10-14 / then))
       :snt2 (c10-3 / possible-01
                    :ARG1 (c10-13 / drink-01
                                  :ARG0 (c10-5 / i)
                                  :ARG1 (c10-9 / frap))
                    :manner (c10-6 / amr-unknown
                                   :mod (c10-7 / else))))

# ::snt So I guess well find out if that long wear lipstick really does work.
# ::tokens ["So", "I", "guess", "well", "find", "out", "if", "that", "long", "wear", "lipstick", "really", "does", "work", "."]
# ::lemmas ["so", "i", "guess", "well", "find", "out", "if", "that", "long", "wear", "lipstick", "really", "do", "work", "."]
(c11-7 / guess-01
       :ARG0 (c11-5 / i)
       :ARG1 (c11-0 / find-out-03
                    :ARG1 (c11-6 / truth-value
                                 :polarity-of (c11-4 / work-09
                                                     :ARG1 (c11-2 / lipstick
                                                                  :ARG1-of (c11-3 / wear-01
                                                                                  :ARG1-of (c11-8 / long-03)))
                                                     :ARG1-of (c11-1 / real-04)))
                    :mod (c11-9 / well)))

# ::snt Great question!
# ::tokens ["Great", "question", "!"]
# ::lemmas ["great", "question", "!"]
(c12-2 / thing
       :ARG1-of (c12-1 / question-01)
       :mod (c12-0 / great))

# ::snt There no reason for straws... bravo - plus it makes wrinkles on your lips &amp; face
# ::tokens ["There", "no", "reason", "for", "straws", "...", "bravo", "-", "plus", "it", "makes", "wrinkles", "on", "your", "lips", "&", "amp", ";", "face"]
# ::lemmas ["there", "no", "reason", "for", "straw", "...", "bravo", "-", "plus", "it", "make", "wrinkle", "on", "your", "lip", "&", "amp", ";", "face"]
(c13-2 / multi-sentence
       :snt1 (c13-4 / reason-01
                    :ARG1 (c13-3 / straw)
                    :polarity -)
       :snt2 (c13-1 / bravo
                    :mode expressive)
       :snt3 (c13-10 / and
                     :op2 (c13-5 / make-02
                                 :ARG0 c13-3
                                 :ARG1 (c13-9 / and
                                              :op1 (c13-7 / wrinkle-01
                                                          :location (c13-6 / lip))
                                              :op2 (c13-8 / amp)
                                              :op3 (c13-0 / face)))))

# ::snt Ok, so it used to be a cup, lid, and straw, now its just a cup and lid. Also lids are easier to make recyclable than straws and much less dangerous for wildlife if they do end up in the ocean for something. Small progress is still progress.
# ::tokens ["Ok", ",", "so", "it", "used", "to", "be", "a", "cup", ",", "lid", ",", "and", "straw", ",", "now", "its", "just", "a", "cup", "and", "lid", ".", "Also", "lids", "are", "easier", "to", "make", "recyclable", "than", "straws", "and", "much", "less", "dangerous", "for", "wildlife", "if", "they", "do", "end", "up", "in", "the", "ocean", "for", "something", ".", "Small", "progress", "is", "still", "progress", "."]
# ::lemmas ["ok", ",", "so", "it", "use", "to", "be", "a", "cup", ",", "lid", ",", "and", "straw", ",", "now", "its", "just", "a", "cup", "and", "lid", ".", "also", "lid", "be", "easy", "to", "make", "recyclable", "than", "straw", "and", "much", "less", "dangerous", "for", "wildlife", "if", "they", "do", "end", "up", "in", "the", "ocean", "for", "something", ".", "small", "progress", "be", "still", "progress", "."]
(c15-18 / multi-sentence
        :snt1 (c15-22 / contrast-01
                      :ARG1 (c15-14 / and
                                    :op1 (c15-17 / cup)
                                    :op2 (c15-2 / lid)
                                    :op3 (c15-0 / straw)
                                    :domain (c15-33 / it)
                                    :time (c15-24 / use-03))
                      :ARG2 (c15-13 / and
                                    :op1 (c15-3 / cup)
                                    :op2 (c15-16 / lid)
                                    :domain (c15-7 / it)
                                    :mod (c15-12 / just)
                                    :time (c15-26 / now)))
        :snt2 (c15-11 / and
                      :op1 (c15-29 / easy-05
                                   :ARG1 (c15-8 / make-01
                                                :ARG1 (c15-28 / recycle-01
                                                              :ARG1 (c15-9 / lid)))
                                   :ARG2-of (c15-10 / have-degree-91
                                                    :ARG1 c15-8
                                                    :ARG3 (c15-25 / more)
                                                    :ARG4 (c15-5 / straw)))
                      :op2 (c15-15 / endanger-01
                                   :ARG0 c15-8
                                   :ARG1 (c15-31 / wildlife)
                                   :condition (c15-20 / end-up-03
                                                      :ARG1 c15-9
                                                      :ARG2 (c15-6 / ocean)
                                                      :purpose (c15-4 / something))
                                   :ARG2-of (c15-32 / have-degree-91
                                                    :ARG1 c15-8
                                                    :ARG3 (c15-23 / less
                                                                  :quant (c15-21 / much))))
                      :mod (c15-34 / also))
        :snt3 (c15-30 / progress-01
                      :ARG1 (c15-19 / progress-01
                                    :mod (c15-27 / small))
                      :time (c15-1 / still)))

# ::snt Children are compostable, yes, but I don't think Starbucks should be selling them
# ::tokens ["Children", "are", "compostable", ",", "yes", ",", "but", "I", "do", "n't", "think", "Starbucks", "should", "be", "selling", "them"]
# ::lemmas ["child", "be", "compostable", ",", "yes", ",", "but", "i", "do", "not", "think", "Starbucks", "should", "be", "sell", "they"]
(c17-5 / contrast-01
       :ARG1 (c17-4 / possible-01
                    :ARG1 (c17-9 / compost-01
                                 :ARG1 (c17-6 / child)))
       :ARG2 (c17-8 / think-01
                    :ARG0 (c17-7 / i)
                    :ARG1 (c17-3 / recommend-01
                                 :ARG1 (c17-2 / sell-01
                                              :ARG0 (c17-0 / company
                                                           :name (c17-1 / name
                                                                        :op1 "Starbucks"))
                                              :ARG1 c17-6))
                    :polarity -))

# ::snt Exactly, same difference lol
# ::tokens ["Exactly", ",", "same", "difference", "lol"]
# ::lemmas ["exactly", ",", "same", "difference", "lol"]
(c18-1 / and
       :op1 (c18-2 / exact)
       :op2 (c18-4 / thing
                   :ARG1-of (c18-5 / differ-02)
                   :ARG1-of (c18-0 / same-01))
       :ARG2-of (c18-3 / laugh-01
                       :manner (c18-6 / loud)
                       :mode expressive))

# ::snt Out of control
# ::tokens ["Out", "of", "control"]
# ::lemmas ["out", "of", "control"]
(c19-0 / out-06
       :ARG2 (c19-1 / control-01))

# ::snt Plastic for plastic How about replacing plastic at all?
# ::tokens ["Plastic", "for", "plastic", "How", "about", "replacing", "plastic", "at", "all", "?"]
# ::lemmas ["plastic", "for", "plastic", "how", "about", "replace", "plastic", "at", "all", "?"]
(c20-0 / multi-sentence
       :snt1 (c20-4 / plastic
                    :purpose (c20-1 / plastic))
       :snt2 (c20-2 / replace-01
                    :ARG1 (c20-7 / plastic)
                    :ARG2 (c20-5 / plastic)
                    :mod (c20-3 / at-all)
                    :polarity (c20-6 / amr-unknown)))

# ::snt This is a really overwrought way of saying you don't care about disabled people
# ::tokens ["This", "is", "a", "really", "overwrought", "way", "of", "saying", "you", "do", "n't", "care", "about", "disabled", "people"]
# ::lemmas ["this", "be", "a", "really", "overwrought", "way", "of", "say", "you", "do", "not", "care", "about", "disabled", "people"]
(c21-5 / way
       :ARG1-of (c21-0 / overwrought-02
                       :degree (c21-3 / really))
       :domain (c21-7 / this)
       :manner-of (c21-2 / say-01
                         :ARG0 (c21-1 / you)
                         :ARG1 (c21-6 / care-01
                                      :ARG0 c21-1
                                      :ARG1 (c21-4 / person
                                                   :ARG1-of (c21-8 / disable-01))
                                      :polarity -)))

# ::snt puuuuure
# ::tokens ["puuuuure"]
# ::lemmas ["puuuuure"]
(c22-0 / please
       :mode expressive)

# ::snt Royalties incoming
# ::tokens ["Royalties", "incoming"]
# ::lemmas ["royalty", "incoming"]
(c23-0 / incoming
       :domain (c23-1 / alties))

# ::snt Nitro fucking rules!! Woohoo
# ::tokens ["Nitro", "fucking", "rules", "!", "!", "Woohoo"]
# ::lemmas ["Nitro", "fucking", "rule", "!", "!", "Woohoo"]
(c24-0 / rule-01
       :ARG1 (c24-2 / nitro)
       :mod (c24-1 / fucking
                   :mode expressive)
       :mod (c24-3 / Woohoo))

# ::snt Will the kids be compostable? If not it still ends up being single use plastic. We need answers.
# ::tokens ["Will", "the", "kids", "be", "compostable", "?", "If", "not", "it", "still", "ends", "up", "being", "single", "use", "plastic", ".", "We", "need", "answers", "."]
# ::lemmas ["will", "the", "kid", "be", "compostable", "?", "if", "not", "it", "still", "end", "up", "be", "single", "use", "plastic", ".", "we", "need", "answer", "."]
(c25-1 / multi-sentence
       :snt1 (c25-8 / possible-01
                    :polarity (c25-14 / amr-unknown)
                    :ARG1 (c25-9 / compost-01
                                 :ARG1 (c25-7 / kid)))
       :snt2 (c25-6 / have-condition-91
                    :ARG1 (c25-5 / end-up-03
                                 :ARG1 (c25-13 / it)
                                 :ARG2 (c25-2 / plastic
                                              :ARG1-of (c25-16 / use-01
                                                               :ARG1-of (c25-3 / single-02)))
                                 :mod (c25-0 / still))
                    :ARG2 (c25-11 / possible-01
                                  :ARG1 c25-9
                                  :ARG1 c25-7
                                  :polarity -))
       :snt3 (c25-4 / need-01
                    :ARG0 (c25-10 / we)
                    :ARG1 (c25-12 / thing
                                  :ARG0-of (c25-15 / answer-01))))

# ::snt only major gripe with this is that the openings are TOO LARGE and I am VERY GOOD at spilling things
# ::tokens ["only", "major", "gripe", "with", "this", "is", "that", "the", "openings", "are", "TOO", "LARGE", "and", "I", "am", "VERY", "GOOD", "at", "spilling", "things"]
# ::lemmas ["only", "major", "gripe", "with", "this", "be", "that", "the", "opening", "be", "TOO", "LARGE", "and", "i", "be", "very", "good", "at", "spill", "thing"]
(c26-11 / gripe-01
        :ARG0 (c26-9 / i)
        :ARG1 (c26-10 / this)
        :ARG1-of (c26-2 / major-02)
        :ARG1-of (c26-8 / cause-01
                        :ARG0 (c26-4 / and
                                     :op1 (c26-6 / have-degree-91
                                                 :ARG1 (c26-0 / open-01)
                                                 :ARG2 (c26-7 / LARG1)
                                                 :ARG3 (c26-14 / too))
                                     :op2 (c26-12 / good-03
                                                  :ARG1 c26-9
                                                  :ARG2 (c26-3 / spill-01
                                                               :ARG0 c26-9
                                                               :ARG1 (c26-13 / thing))
                                                  :degree (c26-5 / very))))
        :mod (c26-1 / only))

# ::snt Just what we need, more disposable garbage to clog the system. Bravo
# ::tokens ["Just", "what", "we", "need", ",", "more", "disposable", "garbage", "to", "clog", "the", "system", ".", "Bravo"]
# ::lemmas ["just", "what", "we", "need", ",", "more", "disposable", "garbage", "to", "clog", "the", "system", ".", "Bravo"]
(c27-1 / multi-sentence
       :snt1 (c27-0 / need-01
                    :ARG0 (c27-6 / we)
                    :ARG1 (c27-9 / thing
                                 :mod (c27-8 / just)))
       :snt2 (c27-7 / clog-01
                    :ARG0 (c27-10 / garbage
                                  :ARG1-of (c27-11 / disposal-03
                                                   :polarity -)
                                  :quant (c27-3 / more))
                    :ARG1 (c27-2 / system))
       :snt3 (c27-4 / person
                    :name (c27-5 / name
                                 :op1 "Bravo")))

# ::snt Why should it take years to do that??? Then we will tackle the cups next!
# ::tokens ["Why", "should", "it", "take", "years", "to", "do", "that", "?", "?", "?", "Then", "we", "will", "tackle", "the", "cups", "next", "!"]
# ::lemmas ["why", "should", "it", "take", "years", "to", "do", "that", "?", "?", "?", "then", "we", "will", "tackle", "the", "cup", "next", "!"]
(c28-1 / multi-sentence
       :snt1 (c28-7 / cause-01
                    :ARG0 (c28-4 / amr-unknown)
                    :ARG1 (c28-3 / recommend-01
                                 :ARG1 (c28-10 / take-10
                                               :ARG0 (c28-12 / do-02
                                                             :ARG1 (c28-14 / that))
                                               :ARG1 (c28-6 / multiple
                                                            :op1 (c28-9 / temporal-quantity
                                                                        :unit (c28-0 / year)
                                                                        :quant 1)))))
       :snt2 (c28-5 / tackle-01
                    :ARG0 (c28-8 / we)
                    :ARG1 (c28-13 / cup)
                    :time (c28-2 / next)
                    :time (c28-11 / then)))

# ::snt I have a reusable starbucks cup with this style lid, seems fine
# ::tokens ["I", "have", "a", "reusable", "starbucks", "cup", "with", "this", "style", "lid", ",", "seems", "fine"]
# ::lemmas ["i", "have", "a", "reusable", "starbuck", "cup", "with", "this", "style", "lid", ",", "seem", "fine"]
(c29-5 / have-03
       :ARG0 (c29-9 / i)
       :ARG1 (c29-8 / cup
                    :mod (c29-11 / company
                                 :name (c29-2 / name
                                              :op1 "Starbucks"))
                    :ARG1-of (c29-4 / reuse-01
                                    :ARG1-of (c29-6 / possible-01))
                    :ARG0-of c29-5
                    :ARG1 (c29-7 / lid
                                 :mod (c29-3 / style
                                             :mod (c29-10 / this))))
       :ARG1-of (c29-0 / fine-04
                       :ARG1-of (c29-1 / seem-01)))

# ::snt This doesnt really solve the problem of single-use plastic. Whats needed now is waste management that doesnt dump plastic in the oceans. Eradication of single-use plastic is a dream right now.
# ::tokens ["This", "does", "nt", "really", "solve", "the", "problem", "of", "single", "-", "use", "plastic", ".", "What", "s", "needed", "now", "is", "waste", "management", "that", "does", "nt", "dump", "plastic", "in", "the", "oceans", ".", "Eradication", "of", "single", "-", "use", "plastic", "is", "a", "dream", "right", "now", "."]
# ::lemmas ["this", "do", "not", "really", "solve", "the", "problem", "of", "single", "-", "use", "plastic", ".", "what", "s", "need", "now", "be", "waste", "management", "that", "do", "not", "dump", "plastic", "in", "the", "ocean", ".", "eradication", "of", "single", "-", "use", "plastic", "be", "a", "dream", "right", "now", "."]
(c30-9 / multi-sentence
       :snt1 (c30-0 / solve-01
                    :ARG0 (c30-8 / this)
                    :ARG1 (c30-18 / problem
                                  :topic (c30-10 / plastic
                                                 :ARG1-of (c30-14 / use-01
                                                                  :ARG1-of (c30-5 / single-02))))
                    :ARG1-of (c30-16 / real-04)
                    :polarity -)
       :snt2 (c30-15 / need-01
                     :ARG1 (c30-7 / manage-01
                                  :ARG1 (c30-20 / waste)
                                  :ARG0-of (c30-21 / dump-01
                                                   :ARG1 (c30-2 / plastic)
                                                   :ARG2 (c30-6 / ocean)
                                                   :polarity -))
                     :time (c30-11 / now))
       :snt3 (c30-13 / dream-01
                     :ARG1 (c30-17 / eliminate-01
                                   :ARG1 (c30-1 / plastic
                                                :ARG1-of (c30-12 / use-01
                                                                 :ARG1-of (c30-4 / single-02))))
                     :time (c30-19 / now
                                   :mod (c30-3 / right))))

# ::snt Aww, I wish we had the option of paper straws. Nothing worse than feeling like a big toddler!
# ::tokens ["Aww", ",", "I", "wish", "we", "had", "the", "option", "of", "paper", "straws", ".", "Nothing", "worse", "than", "feeling", "like", "a", "big", "toddler", "!"]
# ::lemmas ["Aww", ",", "i", "wish", "we", "have", "the", "option", "of", "paper", "straw", ".", "nothing", "bad", "than", "feel", "like", "a", "big", "toddler", "!"]
(c31-3 / multi-sentence
       :snt1 (c31-12 / wish-01
                     :ARG0 (c31-15 / i)
                     :ARG1 (c31-7 / have-03
                                  :ARG0 (c31-10 / we)
                                  :ARG1 (c31-0 / option
                                               :mod (c31-5 / straw
                                                           :consist-of (c31-8 / paper))))
                     :mod (c31-16 / aw
                                  :mode expressive))
       :snt2 (c31-2 / bad-07
                    :ARG1 (c31-4 / nothing)
                    :ARG2-of (c31-13 / have-degree-91
                                     :ARG1 c31-4
                                     :ARG3 (c31-9 / more)
                                     :ARG4 (c31-1 / feel-01
                                                  :ARG0 c31-15
                                                  :ARG1 (c31-6 / resemble-01
                                                               :ARG1 c31-15
                                                               :ARG2 (c31-14 / toddler
                                                                             :mod (c31-11 / big)))))))

# ::snt Yes, like the lid on Dunkin Donuts Coffee. I guess no one has contamination concerns i always use a straw regardless.
# ::tokens ["Yes", ",", "like", "the", "lid", "on", "Dunkin", "Donuts", "Coffee", ".", "I", "guess", "no", "one", "has", "contamination", "concerns", "i", "always", "use", "a", "straw", "regardless", "."]
# ::lemmas ["yes", ",", "like", "the", "lid", "on", "Dunkin", "Donuts", "Coffee", ".", "i", "guess", "no", "one", "have", "contamination", "concern", "i", "always", "use", "a", "straw", "regardless", "."]
(c32-2 / multi-sentence
       :snt1 (c32-5 / resemble-01
                    :ARG2 (c32-11 / thing
                                  :ARG0-of (c32-4 / shut-01
                                                  :ARG1 (c32-8 / coffee
                                                               :poss (c32-15 / company
                                                                             :name (c32-3 / name
                                                                                          :op1 "Dunkin"
                                                                                          :op2 "Donuts"))))))
       :snt2 (c32-12 / guess-01
                     :ARG0 (c32-10 / i)
                     :ARG1 (c32-9 / concern-01
                                  :ARG0 (c32-0 / contaminate-01)
                                  :ARG1 (c32-7 / no-one)))
       :snt3 (c32-14 / use-01
                     :ARG0 c32-10
                     :ARG1 (c32-1 / straw)
                     :time (c32-6 / always)
                     :ARG1-of (c32-13 / regardless-91)))

# ::snt Save the turtles!!!
# ::tokens ["Save", "the", "turtles", "!", "!", "!"]
# ::lemmas ["save", "the", "turtle", "!", "!", "!"]
(c33-2 / save-01
       :ARG0 (c33-0 / you)
       :ARG1 (c33-1 / turtle)
       :mode imperative)

# ::snt I used one of these a few weeks ago in a pilot store and found it pleasant to drink from
# ::tokens ["I", "used", "one", "of", "these", "a", "few", "weeks", "ago", "in", "a", "pilot", "store", "and", "found", "it", "pleasant", "to", "drink", "from"]
# ::lemmas ["i", "use", "one", "of", "these", "a", "few", "weeks", "ago", "in", "a", "pilot", "store", "and", "find", "it", "pleasant", "to", "drink", "from"]
(c34-12 / and
        :op1 (c34-14 / use-01
                     :ARG0 (c34-11 / i)
                     :ARG1 (c34-0 / one
                                  :ARG1-of (c34-6 / include-91
                                                  :ARG2 (c34-10 / this)))
                     :time (c34-2 / before
                                  :op1 (c34-3 / now)
                                  :quant (c34-1 / few
                                                :op1 (c34-15 / temporal-quantity
                                                             :unit (c34-9 / week)
                                                             :quant 1)))
                     :location (c34-5 / store
                                      :mod (c34-7 / pilot-01)))
        :op2 (c34-8 / find-01
                    :ARG0 c34-11
                    :ARG1 (c34-4 / pleasant-02
                                 :ARG1 (c34-13 / drink-01
                                               :ARG1 c34-0))))

# ::snt This seems like something they could accomplish by July of
# ::tokens ["This", "seems", "like", "something", "they", "could", "accomplish", "by", "July", "of"]
# ::lemmas ["this", "seem", "like", "something", "they", "could", "accomplish", "by", "July", "of"]
(c35-2 / seem-01
       :ARG1 (c35-3 / resemble-01
                    :ARG1 (c35-5 / this)
                    :ARG2 (c35-0 / something
                                 :ARG1-of (c35-6 / accomplish-01
                                                 :ARG0 (c35-8 / they)
                                                 :ARG1-of (c35-4 / possible-01)
                                                 :time (c35-1 / by
                                                              :op1 (c35-7 / date-entity
                                                                          :month 7))))))

# ::snt Wow. That's amazing
# ::tokens ["Wow", ".", "That", "'s", "amazing"]
# ::lemmas ["wow", ".", "that", "be", "amazing"]
(c36-1 / amaze-01
       :ARG0 (c36-0 / that))
