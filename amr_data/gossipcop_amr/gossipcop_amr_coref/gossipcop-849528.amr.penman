# ::snt Can she get a spray tan in Fed Prison?
# ::tokens ["Can", "she", "get", "a", "spray", "tan", "in", "Fed", "Prison", "?"]
# ::lemmas ["can", "she", "get", "a", "spray", "tan", "in", "Fed", "Prison", "?"]
(c1-5 / possible-01
      :ARG1 (c1-6 / tan-01
                  :ARG1 (c1-3 / she)
                  :ARG2 (c1-0 / spray-01)
                  :location (c1-2 / prison
                                  :mod (c1-1 / federal)))
      :polarity (c1-4 / amr-unknown))

# ::snt She'll never serve the time! I give her mos tops! Plus the govt will have to buy her food $$$ It'll never last -mos
# ::tokens ["She", "'ll", "never", "serve", "the", "time", "!", "I", "give", "her", "mos", "tops", "!", "Plus", "the", "govt", "will", "have", "to", "buy", "her", "food", "$", "$", "$", "It", "'ll", "never", "last", "-mos"]
# ::lemmas ["she", "'ll", "never", "serve", "the", "time", "!", "i", "give", "she", "mos", "top", "!", "plus", "the", "govt", "will", "have", "to", "buy", "her", "food", "$", "$", "$", "it", "'ll", "never", "last", "-mos"]
(c2-14 / multi-sentence
       :snt1 (c2-0 / serve-04
                   :ARG0 (c2-5 / she)
                   :ARG1 (c2-10 / time)
                   :time (c2-17 / ever)
                   :polarity -)
       :snt2 (c2-12 / give-01
                    :ARG0 (c2-18 / i)
                    :ARG1 (c2-15 / top
                                 :mod (c2-8 / month))
                    :ARG2 (c2-4 / she))
       :snt3 (c2-9 / and
                   :op2 (c2-6 / obligate-01
                              :ARG1 (c2-2 / government-organization
                                          :ARG0-of (c2-3 / govern-01))
                              :ARG2 (c2-13 / buy-01
                                           :ARG0 c2-2
                                           :ARG1 (c2-16 / food
                                                        :poss c2-4)))
                   :snt4 (c2-1 / last-01
                               :ARG1 (c2-7 / it)
                               :time (c2-11 / ever)
                               :polarity -)))

# ::snt I still think she should have got the death penalty
# ::tokens ["I", "still", "think", "she", "should", "have", "got", "the", "death", "penalty"]
# ::lemmas ["i", "still", "think", "she", "should", "have", "get", "the", "death", "penalty"]
(c3-5 / think-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-2 / recommend-01
                  :ARG1 (c3-3 / penalize-01
                              :ARG1 (c3-1 / she)
                              :manner (c3-6 / die-01)))
      :mod (c3-0 / still))

# ::snt Yea poor little Buttercup !
# ::tokens ["Yea", "poor", "little", "Buttercup", "!"]
# ::lemmas ["yea", "poor", "little", "Buttercup", "!"]
(c4-3 / say-01
      :ARG1 (c4-0 / yea)
      :ARG2 (c4-4 / person
                  :name (c4-1 / name
                              :op1 "Buttercup")
                  :mod (c4-2 / poor)
                  :mod (c4-5 / little))
      :mode expressive)

# ::snt Fucking LOL
# ::tokens ["Fucking", "LOL"]
# ::lemmas ["fucking", "lol"]
(c5-2 / laugh-01
      :ARG0 (c5-3 / i)
      :manner (c5-1 / loud)
      :mod (c5-0 / fucking)
      :mode expressive)

# ::snt Lmao
# ::tokens ["Lmao"]
# ::lemmas ["lmao"]
(c6-1 / laugh-01
      :ARG0 (c6-2 / i
                  :part (c6-3 / ass))
      :ARG3 (c6-0 / off
                  :op1 c6-3))

# ::snt HAHAHAH I wonder what Cathy has to say about this I'm sure her and her darling daughter are laughing it up
# ::tokens ["HAHAHAH", "I", "wonder", "what", "Cathy", "has", "to", "say", "about", "this", "I", "'m", "sure", "her", "and", "her", "darling", "daughter", "are", "laughing", "it", "up"]
# ::lemmas ["HAHAHAH", "i", "wonder", "what", "Cathy", "have", "to", "say", "about", "this", "i", "be", "sure", "she", "and", "her", "darling", "daughter", "be", "laugh", "it", "up"]
(c7-5 / and
      :op1 (c7-9 / wonder-01
                 :ARG0 (c7-12 / i)
                 :ARG1 (c7-13 / thing
                              :ARG1-of (c7-3 / say-01
                                             :ARG0 (c7-7 / person
                                                         :name (c7-1 / name
                                                                     :op1 "Cathy"))
                                             :ARG3 (c7-16 / this)))
                 :mod (c7-6 / haha
                            :mode expressive))
      :op2 (c7-0 / sure-02
                 :ARG0 c7-12
                 :ARG1 (c7-8 / laugh-01
                             :ARG0 (c7-14 / and
                                          :op1 c7-7
                                          :op2 (c7-2 / person
                                                     :ARG0-of (c7-11 / have-rel-role-91
                                                                     :ARG1 c7-7
                                                                     :ARG2 (c7-15 / daughter
                                                                                  :mod (c7-10 / darling)))))
                             :ARG2 (c7-4 / it))))

# ::snt I feel like we could sell the idea of an "Abby Lee : behind bars" show to .... One episode we'll get Cathy to stop and visit
# ::tokens ["I", "feel", "like", "we", "could", "sell", "the", "idea", "of", "an", "\"", "Abby", "Lee", ":", "behind", "bars", "\"", "show", "to", "....", "One", "episode", "we", "'ll", "get", "Cathy", "to", "stop", "and", "visit"]
# ::lemmas ["i", "feel", "like", "we", "could", "sell", "the", "idea", "of", "an", "\"", "Abby", "Lee", ":", "behind", "bar", "\"", "show", "to", "....", "One", "episode", "we", "'ll", "get", "Cathy", "to", "stop", "and", "visit"]
(c8-11 / multi-sentence
       :snt1 (c8-14 / feel-06
                    :ARG0 (c8-19 / i)
                    :ARG1 (c8-17 / possible-01
                                 :ARG1 (c8-0 / sell-04
                                             :ARG0 (c8-18 / we)
                                             :ARG1 (c8-6 / idea
                                                         :topic (c8-5 / show-04
                                                                      :ARG1 (c8-12 / person
                                                                                   :name (c8-15 / name
                                                                                                :op1 "Abby"
                                                                                                :op2 "Lee")
                                                                                   :location (c8-10 / behind
                                                                                                    :op1 (c8-1 / bar)))
                                                                      :ARG2-of c8-0)))))
       :snt2 (c8-9 / get-04
                   :ARG0 (c8-2 / we)
                   :ARG1 (c8-8 / and
                               :op1 (c8-4 / stop-01
                                          :ARG0 (c8-3 / person
                                                      :name (c8-13 / name
                                                                   :op1 "Cathy")))
                               :op2 (c8-7 / visit-01
                                          :ARG0 c8-3))
                   :time (c8-16 / episode
                                :quant 1)))

# ::snt HAHAHAH YES I MEANT TO TEXT YOU! I wonder how she's going to survive in there
# ::tokens ["HAHAHAH", "YES", "I", "MEANT", "TO", "TEXT", "YOU", "!", "I", "wonder", "how", "she", "'s", "going", "to", "survive", "in", "there"]
# ::lemmas ["HAHAHAH", "yes", "i", "mean", "to", "text", "you", "!", "i", "wonder", "how", "she", "be", "go", "to", "survive", "in", "there"]
(c9-2 / multi-sentence
      :snt1 (c9-5 / mean-02
                  :ARG0 (c9-8 / i)
                  :ARG1 (c9-9 / text-01
                              :ARG0 c9-8
                              :ARG2 (c9-1 / you))
                  :mod (c9-6 / haha
                             :mode expressive))
      :snt2 (c9-7 / wonder-01
                  :ARG0 (c9-4 / i)
                  :ARG1 (c9-11 / thing
                               :manner-of (c9-3 / survive-01
                                                :ARG0 (c9-0 / she)
                                                :location (c9-10 / there)))))

# ::snt You see this ???
# ::tokens ["You", "see", "this", "?", "?", "?"]
# ::lemmas ["you", "see", "this", "?", "?", "?"]
(c10-3 / see-01
       :polarity (c10-0 / amr-unknown)
       :ARG0 (c10-1 / you)
       :ARG1 (c10-2 / this))

# ::snt When is the rest of those "moms" "monsters" going to jail for destroying those kids.
# ::tokens ["When", "is", "the", "rest", "of", "those", "\"", "moms", "\"", "\"", "monsters", "\"", "going", "to", "jail", "for", "destroying", "those", "kids", "."]
# ::lemmas ["when", "be", "the", "rest", "of", "those", "\"", "mom", "\"", "\"", "monster", "\"", "go", "to", "jail", "for", "destroy", "those", "kid", "."]
(c12-8 / go-02
       :ARG0 (c12-1 / rest
                    :ARG1-of (c12-6 / include-91
                                    :ARG2 (c12-0 / monster
                                                 :mod (c12-7 / that)
                                                 :mod (c12-3 / mother))))
       :ARG4 (c12-5 / jail-01
                    :ARG1 c12-1
                    :ARG3 (c12-9 / destroy-01
                                 :ARG0 c12-1
                                 :ARG1 (c12-4 / kid
                                              :mod (c12-10 / that))))
       :time (c12-2 / amr-unknown))

# ::snt That means no good time. One whole year.
# ::tokens ["That", "means", "no", "good", "time", ".", "One", "whole", "year", "."]
# ::lemmas ["that", "mean", "no", "good", "time", ".", "One", "whole", "year", "."]
(c13-1 / multi-sentence
       :snt1 (c13-2 / mean-01
                    :ARG1 (c13-4 / that)
                    :ARG2 (c13-5 / time
                                 :ARG1-of (c13-6 / good-02)
                                 :polarity -))
       :snt2 (c13-0 / year
                    :mod (c13-3 / whole)
                    :quant 1))

# ::snt Oh dam! What'd she do?
# ::tokens ["Oh", "dam", "!", "What", "'d", "she", "do", "?"]
# ::lemmas ["oh", "dam", "!", "what", "would", "she", "do", "?"]
(c14-1 / multi-sentence
       :snt1 (c14-0 / oh-my-god
                    :mode expressive)
       :snt2 (c14-4 / do-02
                    :ARG0 (c14-2 / she)
                    :ARG1 (c14-3 / amr-unknown)))

# ::snt . WOW AND YOU LOVE TO WATCH DANCE MOM GOSH!!!!
# ::tokens [".", "WOW", "AND", "YOU", "LOVE", "TO", "WATCH", "DANCE", "MOM", "GOSH", "!", "!", "!", "!"]
# ::lemmas [".", "WOW", "and", "you", "love", "to", "watch", "DANCE", "MOM", "GOSH", "!", "!", "!", "!"]
(c15-6 / and
       :op1 (c15-5 / wow-01)
       :op2 (c15-2 / love-01
                   :ARG0 (c15-0 / you)
                   :ARG1 (c15-4 / watch-01
                                :ARG0 c15-0
                                :ARG1 (c15-7 / dance-01))
                   :mod (c15-3 / person
                               :name (c15-1 / name
                                            :op1 "MOM"
                                            :op2 "GOSH")
                               :mode expressive)))

# ::snt probs for being a fuckin bitch
# ::tokens ["probs", "for", "being", "a", "fuckin", "bitch"]
# ::lemmas ["prob", "for", "be", "a", "fuckin", "bitch"]
(c17-3 / protest-01
       :ARG1 (c17-1 / bitch
                    :mod (c17-0 / fucking)
                    :domain (c17-2 / you)))

# ::snt Omg!!!
# ::tokens ["Omg", "!", "!", "!"]
# ::lemmas ["Omg", "!", "!", "!"]
(c18-0 / oh-my-god
       :mode expressive)

# ::snt So she just had most of her stomach removed in surgery, now she'll go to jail? DEATH SENTENCE. She'll be in bed for months at least!
# ::tokens ["So", "she", "just", "had", "most", "of", "her", "stomach", "removed", "in", "surgery", ",", "now", "she", "'ll", "go", "to", "jail", "?", "DEATH", "SENTENCE", ".", "She", "'ll", "be", "in", "bed", "for", "months", "at", "least", "!"]
# ::lemmas ["so", "she", "just", "have", "most", "of", "her", "stomach", "remove", "in", "surgery", ",", "now", "she", "'ll", "go", "to", "jail", "?", "DEATH", "SENTENCE", ".", "she", "'ll", "be", "in", "bed", "for", "months", "at", "least", "!"]
(c19-13 / multi-sentence
        :snt1 (c19-15 / cause-01
                      :ARG0 (c19-19 / remove-01
                                    :ARG1 (c19-0 / stomach
                                                 :part-of (c19-5 / she)
                                                 :quant (c19-6 / most))
                                    :time (c19-4 / surgery-01
                                                 :ARG1 c19-5))
                      :ARG1 (c19-9 / go-02
                                   :ARG0 (c19-18 / she
                                                 :part c19-0)
                                   :ARG4 (c19-7 / jail)
                                   :time (c19-17 / now)))
        :snt2 (c19-3 / guilty-01
                     :ARG1 (c19-1 / she)
                     :ARG2 (c19-20 / die-01))
        :snt3 (c19-11 / be-located-at-91
                      :ARG1 (c19-12 / she)
                      :ARG2 (c19-2 / bed)
                      :duration (c19-8 / at-least
                                       :op1 (c19-16 / multiple
                                                    :op1 (c19-10 / temporal-quantity
                                                                 :unit (c19-14 / month)
                                                                 :quant 1)))))

# ::snt FYI: Her bankruptcy occurred before the original Dancemoms started. A retired judge brought the bogus charges. Abby just too dumb to listen.
# ::tokens ["FYI", ":", "Her", "bankruptcy", "occurred", "before", "the", "original", "Dancemoms", "started", ".", "A", "retired", "judge", "brought", "the", "bogus", "charges", ".", "Abby", "just", "too", "dumb", "to", "listen", "."]
# ::lemmas ["fyi", ":", "her", "bankruptcy", "occur", "before", "the", "original", "Dancemoms", "start", ".", "a", "retired", "judge", "bring", "the", "bogus", "charge", ".", "Abby", "just", "too", "dumb", "to", "listen", "."]
(c20-13 / multi-sentence
        :snt1 (c20-22 / inform-01
                      :ARG1 (c20-7 / you)
                      :ARG2 (c20-12 / bankrupt-01
                                    :ARG1 (c20-0 / she)
                                    :time (c20-1 / before
                                                 :op1 (c20-5 / start-01
                                                             :ARG1 (c20-4 / show
                                                                          :name (c20-18 / name
                                                                                        :op1 "Dancingmoms")
                                                                          :mod (c20-6 / original))))))
        :snt2 (c20-3 / bring-01
                     :ARG0 (c20-20 / person
                                   :ARG0-of (c20-19 / retire-01)
                                   :ARG0-of (c20-8 / have-org-role-91
                                                   :ARG3 (c20-9 / judge-01)))
                     :ARG1 (c20-16 / charge-05
                                   :mod (c20-11 / bogus)))
        :snt3 (c20-21 / have-degree-91
                      :ARG1 (c20-14 / person
                                    :name (c20-15 / name
                                                  :op1 "Abby"))
                      :ARG2 (c20-23 / dumb)
                      :ARG3 (c20-10 / too)
                      :ARG6 (c20-2 / listen-01
                                   :ARG0 c20-14)
                      :mod (c20-17 / just)))

# ::snt WTF why am I not that surprised
# ::tokens ["WTF", "why", "am", "I", "not", "that", "surprised"]
# ::lemmas ["WTF", "why", "be", "i", "not", "that", "surprised"]
(c21-1 / surprise-01
       :ARG1 (c21-4 / i)
       :degree (c21-3 / that)
       :ARG1-of (c21-2 / cause-01
                       :ARG0 (c21-5 / amr-unknown)
                       :mod (c21-0 / fuck
                                   :mode expressive))
       :polarity -)

# ::snt hahahahaha
# ::tokens ["hahahahaha"]
# ::lemmas ["hahahahaha"]
(c22-0 / haha
       :mode expressive)

# ::snt I HAVE MY HOLLY MONOLOGUE AND SIDES MEMORIZED ALREADY!!!!!
# ::tokens ["I", "HAVE", "MY", "HOLLY", "MONOLOGUE", "AND", "SIDES", "MEMORIZED", "ALREADY", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "have", "my", "HOLLY", "MONOLOGUE", "and", "side", "MEMORIZED", "already", "!", "!", "!", "!", "!"]
(c23-3 / have-03
       :ARG0 (c23-5 / i)
       :ARG1 (c23-6 / and
                    :op1 (c23-4 / publication
                                :name (c23-0 / name
                                             :op1 "Halo"
                                             :op2 "Monology")
                                :poss c23-5)
                    :op2 (c23-2 / side
                                :ARG1-of (c23-1 / photograph-01)))
       :time (c23-7 / already)
       :mode expressive)

# ::snt Me too! Bloop!
# ::tokens ["Me", "too", "!", "Bloop", "!"]
# ::lemmas ["i", "too", "!", "Bloop", "!"]
(c24-0 / bloop-01
       :ARG0 (c24-1 / i)
       :mod (c24-2 / too)
       :mode expressive)

# ::snt You could not!!!!! U should be out of the USA Take care of your children and please go away.
# ::tokens ["You", "could", "not", "!", "!", "!", "!", "!", "U", "should", "be", "out", "of", "the", "USA", "Take", "care", "of", "your", "children", "and", "please", "go", "away", "."]
# ::lemmas ["you", "could", "not", "!", "!", "!", "!", "!", "u", "should", "be", "out", "of", "the", "USA", "Take", "care", "of", "your", "child", "and", "please", "go", "away", "."]
(c26-3 / multi-sentence
       :snt1 (c26-9 / possible-01
                    :ARG1 (c26-2 / you)
                    :polarity -)
       :snt2 (c26-7 / recommend-01
                    :ARG1 (c26-1 / out-06
                                 :ARG1 (c26-14 / you)
                                 :ARG2 (c26-10 / country
                                               :name (c26-4 / name
                                                            :op1 "USA"))))
       :snt3 (c26-13 / and
                     :op1 (c26-15 / care-03
                                  :ARG0 (c26-0 / you)
                                  :ARG1 (c26-5 / person
                                               :ARG0-of (c26-8 / have-rel-role-91
                                                               :ARG1 c26-0
                                                               :ARG2 (c26-11 / child))))
                     :op2 (c26-6 / go-02
                                 :ARG0 c26-0
                                 :ARG4 (c26-12 / away)
                                 :mode imperative
                                 :polite +)))

# ::snt I have a feeling there's not a tremendous amount of acting involved
# ::tokens ["I", "have", "a", "feeling", "there", "'s", "not", "a", "tremendous", "amount", "of", "acting", "involved"]
# ::lemmas ["i", "have", "a", "feeling", "there", "be", "not", "a", "tremendous", "amount", "of", "acting", "involve"]
(c27-0 / feel-02
       :ARG0 (c27-5 / i)
       :ARG1 (c27-1 / involve-01
                    :ARG1 (c27-2 / act-02
                                 :quant (c27-4 / amount
                                               :mod (c27-3 / tremendous)))
                    :polarity -))

# ::snt TV show.. not real
# ::tokens ["TV", "show", "..", "not", "real"]
# ::lemmas ["tv", "show", "..", "not", "real"]
(c28-2 / multi-sentence
       :snt1 (c28-3 / show-04
                    :ARG3 (c28-1 / television))
       :snt2 (c28-0 / real-04
                    :polarity -))

# ::snt I spent the day (in court) partially thinking about Michael Flynn colluding with Russia and going free and Ab going to prison.
# ::tokens ["I", "spent", "the", "day", "(", "in", "court", ")", "partially", "thinking", "about", "Michael", "Flynn", "colluding", "with", "Russia", "and", "going", "free", "and", "Ab", "going", "to", "prison", "."]
# ::lemmas ["i", "spend", "the", "day", "(", "in", "court", ")", "partially", "think", "about", "Michael", "Flynn", "collude", "with", "Russia", "and", "go", "free", "and", "ab", "go", "to", "prison", "."]
(c29-3 / spend-02
       :ARG0 (c29-11 / i)
       :ARG1 (c29-14 / day)
       :ARG2 (c29-10 / think-01
                     :ARG0 c29-11
                     :ARG1 (c29-12 / and
                                   :op1 (c29-7 / collude-01
                                               :ARG0 (c29-5 / person
                                                            :name (c29-1 / name
                                                                         :op1 "Michael"
                                                                         :op2 "Flynn"))
                                               :ARG1 (c29-17 / country
                                                             :name (c29-4 / name
                                                                          :op1 "Russia")))
                                   :op2 (c29-13 / go-02
                                                :ARG0 c29-5
                                                :ARG1 (c29-0 / free-04
                                                             :ARG1 c29-5))
                                   :op3 (c29-15 / go-02
                                                :ARG0 (c29-2 / person
                                                             :name (c29-6 / name
                                                                          :op1 "Ab"))
                                                :ARG4 (c29-16 / prison)))
                     :degree (c29-8 / part))
       :location (c29-9 / court))

# ::snt cute joke but there are real people and real lives involved her. Our society is tanking.
# ::tokens ["cute", "joke", "but", "there", "are", "real", "people", "and", "real", "lives", "involved", "her", ".", "Our", "society", "is", "tanking", "."]
# ::lemmas ["cute", "joke", "but", "there", "be", "real", "people", "and", "real", "life", "involve", "she", ".", "our", "society", "be", "tanking", "."]
(c30-1 / multi-sentence
       :snt1 (c30-6 / contrast-01
                    :ARG1 (c30-8 / joke-01
                                 :mod (c30-13 / cute))
                    :ARG2 (c30-9 / involve-01
                                 :ARG1 (c30-10 / and
                                               :op1 (c30-4 / person
                                                           :ARG1-of (c30-3 / real-04))
                                               :op2 (c30-5 / life
                                                           :ARG1-of (c30-12 / real-04)))
                                 :ARG2 (c30-2 / she)))
       :snt2 (c30-11 / tank-01
                     :ARG0 (c30-0 / society
                                  :poss (c30-7 / we))))

# ::snt 'horrible woman.' It's shocking that people really believe 'reality tv' is real. IT"S NOT! I know the real woman and this is a TV show.
# ::tokens ["'", "horrible", "woman", ".", "'", "It", "'s", "shocking", "that", "people", "really", "believe", "'", "reality", "tv", "'", "is", "real", ".", "IT\"S", "NOT", "!", "I", "know", "the", "real", "woman", "and", "this", "is", "a", "TV", "show", "."]
# ::lemmas ["'", "horrible", "woman", ".", "'", "it", "be", "shocking", "that", "people", "really", "believe", "'", "reality", "tv", "'", "be", "real", ".", "it\"s", "not", "!", "i", "know", "the", "real", "woman", "and", "this", "be", "a", "tv", "show", "."]
(c31-3 / multi-sentence
       :snt1 (c31-12 / woman
                     :mod (c31-8 / horrible))
       :snt2 (c31-4 / shock-01
                    :ARG0 (c31-1 / believe-01
                                 :ARG0 (c31-9 / person)
                                 :ARG1 (c31-6 / real-04
                                              :ARG1 (c31-14 / television))
                                 :ARG1-of (c31-16 / real-04)))
       :snt3 (c31-11 / real-04
                     :ARG1 (c31-13 / it)
                     :polarity -)
       :snt4 (c31-7 / and
                    :op1 (c31-10 / know-02
                                 :ARG0 (c31-5 / i)
                                 :ARG1 c31-12
                                 :ARG1-of (c31-2 / real-04)))
       :op2 (c31-0 / show-04
                   :ARG1 (c31-17 / television)
                   :domain (c31-15 / this)))

# ::snt Other reality stars seem to get away with fraud. That's weird, right?
# ::tokens ["Other", "reality", "stars", "seem", "to", "get", "away", "with", "fraud", ".", "That", "'s", "weird", ",", "right", "?"]
# ::lemmas ["other", "reality", "star", "seem", "to", "get", "away", "with", "fraud", ".", "that", "be", "weird", ",", "right", "?"]
(c33-2 / multi-sentence
       :snt1 (c33-3 / seem-01
                    :ARG1 (c33-7 / get-away-08
                                 :ARG0 (c33-0 / star
                                              :mod (c33-4 / reality)
                                              :mod (c33-1 / other))
                                 :ARG1 (c33-8 / defraud-01)))
       :snt2 (c33-5 / weird
                    :domain (c33-6 / that)
                    :ARG1-of (c33-9 / request-confirmation-91)))

# ::snt Omg that would be AMAZING
# ::tokens ["Omg", "that", "would", "be", "AMAZING"]
# ::lemmas ["Omg", "that", "would", "be", "amazing"]
(c34-1 / amaze-01
       :ARG0 (c34-0 / that)
       :mode expressive)

# ::snt Things happen not like she robbed someone ,,, she's forgiven .
# ::tokens ["Things", "happen", "not", "like", "she", "robbed", "someone", ",", ",", ",", "she", "'s", "forgiven", "."]
# ::lemmas ["thing", "happen", "not", "like", "she", "rob", "someone", ",", ",", ",", "she", "be", "forgive", "."]
(c35-0 / forgive-01
       :ARG1 (c35-2 / she)
       :ARG1-of (c35-3 / resemble-01
                       :ARG2 (c35-4 / rob-01
                                    :ARG0 c35-2
                                    :ARG1 (c35-1 / someone))
                       :polarity -))

# ::snt taxes paid.. CHECK... bills paid.. CHECK. Now IMPEACH trump! seems fair
# ::tokens ["taxes", "paid", "..", "CHECK", "...", "bills", "paid", "..", "CHECK", ".", "Now", "IMPEACH", "trump", "!", "seems", "fair"]
# ::lemmas ["taxis", "pay", "..", "CHECK", "...", "bill", "pay", "..", "check", ".", "now", "IMPEACH", "trump", "!", "seem", "fair"]
(c36-2 / multi-sentence
       :snt1 (c36-6 / and
                    :op1 (c36-9 / pay-01
                                :ARG1 (c36-8 / monetary-quantity
                                             :ARG1-of (c36-11 / tax-01))
                                :ARG1-of (c36-10 / check-01))
                    :op2 (c36-3 / pay-01
                                :ARG1 (c36-13 / monetary-quantity
                                              :ARG1-of (c36-1 / bill-01))
                                :ARG1-of (c36-14 / check-01)))
       :snt2 (c36-4 / seem-01
                    :ARG1 (c36-0 / fair-01
                                 :ARG1 (c36-12 / trump-01
                                               :mod (c36-7 / exact)))
                    :time (c36-5 / now)))

# ::snt Trump first. Lol
# ::tokens ["Trump", "first", ".", "Lol"]
# ::lemmas ["Trump", "first", ".", "Lol"]
(c37-2 / multi-sentence
       :snt1 (c37-3 / person
                    :name (c37-1 / name
                                 :op1 "Trump")
                    :ord (c37-0 / ordinal-entity
                                :value 1))
       :snt2 (c37-4 / laugh-01
                    :manner (c37-5 / loud)
                    :mode expressive))

# ::snt You have to!!!!!
# ::tokens ["You", "have", "to", "!", "!", "!", "!", "!"]
# ::lemmas ["you", "have", "to", "!", "!", "!", "!", "!"]
(c38-0 / obligate-01
       :ARG1 (c38-1 / you)
       :mode expressive)

# ::snt Good casting.
# ::tokens ["Good", "casting", "."]
# ::lemmas ["good", "casting", "."]
(c40-1 / cast-02
       :ARG1-of (c40-0 / good-02))

# ::snt I'll never understand how people think they can fool the IRS.
# ::tokens ["I", "'ll", "never", "understand", "how", "people", "think", "they", "can", "fool", "the", "IRS", "."]
# ::lemmas ["i", "'ll", "never", "understand", "how", "people", "think", "they", "can", "fool", "the", "IRS", "."]
(c41-9 / understand-01
       :ARG0 (c41-6 / i)
       :ARG1 (c41-5 / thing
                    :manner-of (c41-7 / think-01
                                      :ARG0 (c41-4 / person)
                                      :ARG1 (c41-2 / possible-01
                                                   :ARG1 (c41-0 / fool-01
                                                                :ARG0 c41-4
                                                                :ARG1 (c41-8 / government-organization
                                                                             :name (c41-1 / name
                                                                                          :op1 "IRS"))))))
       :time (c41-3 / ever)
       :polarity -)

# ::snt Omg!!!! Pay ur taxes n bills people!!
# ::tokens ["Omg", "!", "!", "!", "!", "Pay", "ur", "taxes", "n", "bills", "people", "!", "!"]
# ::lemmas ["Omg", "!", "!", "!", "!", "pay", "ur", "taxis", "n", "bill", "people", "!", "!"]
(c42-3 / and
       :op1 (c42-4 / pay-01
                   :ARG0 (c42-2 / you)
                   :ARG1 (c42-5 / tax-01
                                :ARG2 c42-2)
                   :mode imperative)
       :op2 (c42-1 / bill-01
                   :ARG0 c42-2
                   :mode imperative)
       :mod (c42-0 / oh-my-god
                   :mode expressive))

# ::snt Gotta pay for ur bad choices. Consequences. This should be learned at an early age.
# ::tokens ["Got", "ta", "pay", "for", "ur", "bad", "choices", ".", "Consequences", ".", "This", "should", "be", "learned", "at", "an", "early", "age", "."]
# ::lemmas ["got", "to", "pay", "for", "ur", "bad", "choice", ".", "consequence", ".", "this", "should", "be", "learn", "at", "an", "early", "age", "."]
(c43-3 / multi-sentence
       :snt1 (c43-0 / obligate-01
                    :ARG2 (c43-7 / pay-01
                                 :ARG0 (c43-2 / you)
                                 :ARG3 (c43-9 / choose-01
                                              :ARG0 c43-2
                                              :ARG1-of (c43-1 / bad-07))))
       :snt2 (c43-11 / consequence-03)
       :snt3 (c43-4 / recommend-01
                    :ARG1 (c43-8 / learn-01
                                 :ARG1 (c43-10 / this)
                                 :time (c43-6 / early
                                              :op1 (c43-5 / age-01
                                                          :ARG1 c43-2)))))

# ::snt Featuring as...everyone else!
# ::tokens ["Featuring", "as", "...", "everyone", "else", "!"]
# ::lemmas ["feature", "as", "...", "everyone", "else", "!"]
(c44-0 / feature-01
       :ARG1 (c44-1 / everyone
                    :mod (c44-2 / else)))

# ::snt Can't stand the way that woman treats kids.
# ::tokens ["Ca", "n't", "stand", "the", "way", "that", "woman", "treats", "kids", "."]
# ::lemmas ["can", "not", "stand", "the", "way", "that", "woman", "treat", "kid", "."]
(c45-1 / possible-01
       :ARG1 (c45-0 / stand-03
                    :ARG1 (c45-4 / way
                                 :manner-of (c45-5 / treat-01
                                                   :ARG0 (c45-3 / woman)
                                                   :ARG1 (c45-2 / kid))))
       :polarity -)

# ::snt yes please both of you !
# ::tokens ["yes", "please", "both", "of", "you", "!"]
# ::lemmas ["yes", "please", "both", "of", "you", "!"]
(c46-3 / multi-sentence
       :snt1 (c46-2 / yes)
       :snt2 (c46-0 / you
                    :mod (c46-1 / both)))

# ::snt If there is a movie about her you would be perfect to play her!
# ::tokens ["If", "there", "is", "a", "movie", "about", "her", "you", "would", "be", "perfect", "to", "play", "her", "!"]
# ::lemmas ["if", "there", "be", "a", "movie", "about", "she", "you", "would", "be", "perfect", "to", "play", "she", "!"]
(c47-4 / perfect-02
       :ARG1 (c47-0 / you)
       :ARG2 (c47-2 / play-02
                    :ARG0 c47-0
                    :ARG1 (c47-3 / she))
       :condition (c47-1 / movie
                         :topic c47-3))

# ::snt "Jitterbug is the New Tango"
# ::tokens ["\"", "Jitterbug", "is", "the", "New", "Tango", "\""]
# ::lemmas ["\"", "Jitterbug", "be", "the", "New", "Tango", "\""]
(c48-2 / animal
       :name (c48-1 / name
                    :op1 "New"
                    :op2 "Tango")
       :domain (c48-0 / person
                      :name c48-1
                      :op1 "Jitterbug"))

# ::snt She had it coming,She had it comingShe only had herself to blame
# ::tokens ["She", "had", "it", "coming", ",", "She", "had", "it", "comingShe", "only", "had", "herself", "to", "blame"]
# ::lemmas ["she", "have", "it", "come", ",", "she", "have", "it", "comingshe", "only", "have", "herself", "to", "blame"]
(c49-8 / and
       :op1 (c49-4 / have-04
                   :ARG0 (c49-3 / she)
                   :ARG1 (c49-5 / come-01
                                :ARG1 (c49-7 / it)))
       :op2 (c49-6 / have-04
                   :ARG0 c49-3
                   :ARG1 (c49-9 / come-01
                                :ARG1 c49-7))
       :op3 (c49-0 / obligate-01
                   :ARG1 c49-3
                   :ARG2 (c49-2 / blame-01
                                :ARG1 c49-3)
                   :mod (c49-1 / only)))

# ::snt Yeeeessssss!!!!!!
# ::tokens ["Yeeeessssss", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["Yeeeessssss", "!", "!", "!", "!", "!", "!"]
(c50-0 / yeeeessssss
       :mode expressive)
