# ::snt A Jew that steals? Never.
# ::tokens ["A", "Jew", "that", "steals", "?", "Never", "."]
# ::lemmas ["a", "Jew", "that", "steal", "?", "never", "."]
(c1-1 / multi-sentence
      :snt1 (c1-3 / steal-01
                  :polarity (c1-7 / amr-unknown)
                  :ARG0 (c1-6 / person
                              :mod (c1-4 / religious-group
                                         :name (c1-2 / name
                                                     :op1 "Jew"))))
      :snt2 (c1-0 / steal-01
                  :time (c1-5 / ever)
                  :polarity -))

# ::snt Looks like Divine and Linda Richman procreated together.
# ::tokens ["Looks", "like", "Divine", "and", "Linda", "Richman", "procreated", "together", "."]
# ::lemmas ["look", "like", "Divine", "and", "Linda", "Richman", "procreate", "together", "."]
(c2-4 / look-02
      :ARG1 (c2-3 / procreate-00
                  :ARG0 (c2-6 / and
                              :op1 (c2-1 / person
                                         :name (c2-0 / name
                                                     :op1 "Divine"))
                              :op2 (c2-7 / person
                                         :name (c2-2 / name
                                                     :op1 "Linda"
                                                     :op2 "Richman")))
                  :manner (c2-5 / together)))

# ::snt She wanted a Big Fat Greek Christmas.
# ::tokens ["She", "wanted", "a", "Big", "Fat", "Greek", "Christmas", "."]
# ::lemmas ["she", "want", "a", "Big", "Fat", "Greek", "Christmas", "."]
(c3-5 / want-01
      :ARG0 (c3-3 / she)
      :ARG1 (c3-0 / festival
                  :name (c3-2 / name
                              :op1 "Christmas")
                  :mod (c3-1 / big)
                  :mod (c3-6 / country
                             :name (c3-4 / name
                                         :op1 "Greece"))))

# ::snt What?!
# ::tokens ["What", "?", "!"]
# ::lemmas ["what", "?", "!"]
(c5-0 / amr-unknown
      :mode expressive)

# ::snt With all your acting can you not afford to pay for groceries!!!!
# ::tokens ["With", "all", "your", "acting", "can", "you", "not", "afford", "to", "pay", "for", "groceries", "!", "!", "!", "!"]
# ::lemmas ["with", "all", "your", "acting", "can", "you", "not", "afford", "to", "pay", "for", "grocery", "!", "!", "!", "!"]
(c7-2 / possible-01
      :ARG1 (c7-6 / afford-01
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-1 / pay-01
                              :ARG0 c7-0
                              :ARG3 (c7-7 / grocery))
                  :polarity -)
      :ARG1-of (c7-3 / cause-01
                     :ARG0 (c7-5 / act-02
                                 :ARG0 c7-0
                                 :mod (c7-4 / all))))

# ::snt Merry Christmas from the police!
# ::tokens ["Merry", "Christmas", "from", "the", "police", "!"]
# ::lemmas ["Merry", "Christmas", "from", "the", "police", "!"]
(c8-1 / festival
      :name (c8-2 / name
                  :op1 "Christmas")
      :mod (c8-0 / merry)
      :source (c8-3 / police))

# ::snt Is she related to the Ball family? First name begins with an "L"
# ::tokens ["Is", "she", "related", "to", "the", "Ball", "family", "?", "First", "name", "begins", "with", "an", "\"", "L", "\""]
# ::lemmas ["be", "she", "relate", "to", "the", "Ball", "family", "?", "First", "name", "begin", "with", "an", "\"", "l", "\""]
(c9-5 / multi-sentence
      :snt1 (c9-7 / relate-01
                  :ARG1 (c9-6 / she)
                  :ARG2 (c9-0 / family
                              :name (c9-4 / name
                                          :op1 "Ball"))
                  :polarity (c9-9 / amr-unknown))
      :snt2 (c9-2 / begin-01
                  :ARG1 (c9-8 / name
                              :ord (c9-1 / ordinal-entity
                                         :value 1))
                  :ARG2 (c9-3 / string-entity
                              :value "L")))

# ::snt Trump will save her
# ::tokens ["Trump", "will", "save", "her"]
# ::lemmas ["Trump", "will", "save", "she"]
(c10-3 / save-02
       :ARG0 (c10-2 / person
                    :name (c10-0 / name
                                 :op1 "Trump"))
       :ARG1 (c10-1 / she))

# ::snt That's sad
# ::tokens ["That", "'s", "sad"]
# ::lemmas ["that", "be", "sad"]
(c11-1 / sad-02
       :ARG0 (c11-0 / that))

# ::snt Nooooo oooo!!
# ::tokens ["Nooooo", "oooo", "!", "!"]
# ::lemmas ["Nooooo", "oooo", "!", "!"]
(c12-0 / no)

# ::snt Wtf!!!!
# ::tokens ["Wtf", "!", "!", "!", "!"]
# ::lemmas ["Wtf", "!", "!", "!", "!"]
(c13-1 / amr-unknown
       :mod (c13-0 / fuck
                   :mode expressive))

# ::snt Her granddaughter Andrea Zuckerman is gonna be sad. Now she will have to have Susan Meyer take some more shifts dancing on the net.
# ::tokens ["Her", "granddaughter", "Andrea", "Zuckerman", "is", "gon", "na", "be", "sad", ".", "Now", "she", "will", "have", "to", "have", "Susan", "Meyer", "take", "some", "more", "shifts", "dancing", "on", "the", "net", "."]
# ::lemmas ["her", "granddaughter", "Andrea", "Zuckerman", "be", "going", "to", "be", "sad", ".", "now", "she", "will", "have", "to", "have", "Susan", "Meyer", "take", "some", "more", "shift", "dance", "on", "the", "net", "."]
(c15-9 / multi-sentence
       :snt1 (c15-0 / sad-02
                    :ARG1 (c15-15 / person
                                  :name (c15-13 / name
                                                :op1 "Andrea"
                                                :op2 "Zuckerman")
                                  :ARG0-of (c15-5 / have-rel-role-91
                                                  :ARG1 (c15-3 / she)
                                                  :ARG2 (c15-8 / granddaughter))))
       :snt2 (c15-4 / obligate-01
                    :ARG1 (c15-2 / she)
                    :ARG2 (c15-17 / have-04
                                  :ARG0 c15-2
                                  :ARG1 (c15-7 / take-01
                                               :ARG0 (c15-10 / person
                                                             :name (c15-11 / name
                                                                           :op1 "Susan"
                                                                           :op2 "Meyer"))
                                               :ARG1 (c15-14 / shift
                                                             :quant (c15-1 / some)
                                                             :mod (c15-6 / more))
                                               :manner (c15-18 / dance-01
                                                               :medium (c15-16 / net))))
                    :time (c15-12 / now)))

# ::snt Wow I remember her in Columbia she was young then.damn what did she steal?
# ::tokens ["Wow", "I", "remember", "her", "in", "Columbia", "she", "was", "young", "then.damn", "what", "did", "she", "steal", "?"]
# ::lemmas ["wow", "i", "remember", "she", "in", "Columbia", "she", "be", "young", "then.damn", "what", "do", "she", "steal", "?"]
(c16-2 / multi-sentence
       :snt1 (c16-5 / remember-01
                    :ARG0 (c16-9 / i)
                    :ARG1 (c16-4 / she
                                 :location (c16-7 / city
                                                  :name (c16-3 / name
                                                               :op1 "Columbia"))
                                 :mod (c16-1 / young
                                             :time (c16-10 / then)))
                    :mod (c16-8 / wow
                                :mode expressive))
       :snt2 (c16-0 / steal-01
                    :ARG0 (c16-12 / she)
                    :ARG1 (c16-6 / amr-unknown)
                    :mod (c16-11 / damn
                                 :mode expressive)))

# ::snt Zohan finna get her out
# ::tokens ["Zohan", "finna", "get", "her", "out"]
# ::lemmas ["Zohan", "finna", "get", "she", "out"]
(c17-4 / get-05
       :ARG0 (c17-3 / person
                    :name (c17-1 / name
                                 :op1 "Zohan"))
       :ARG1 (c17-2 / she)
       :ARG2 (c17-0 / out))

# ::snt Very bad and sad news
# ::tokens ["Very", "bad", "and", "sad", "news"]
# ::lemmas ["very", "bad", "and", "sad", "news"]
(c18-2 / news
       :ARG1-of (c18-1 / bad-07
                       :degree (c18-0 / very))
       :ARG0-of (c18-3 / sad-02
                       :degree c18-0))

# ::snt One movie role a decade can't be good on finances. Pray about it?
# ::tokens ["One", "movie", "role", "a", "decade", "ca", "n't", "be", "good", "on", "finances", ".", "Pray", "about", "it", "?"]
# ::lemmas ["One", "movie", "role", "a", "decade", "can", "not", "be", "good", "on", "finance", ".", "pray", "about", "it", "?"]
(c20-1 / multi-sentence
       :snt1 (c20-6 / possible-01
                    :ARG1 (c20-9 / good-04
                                 :ARG1 (c20-3 / role
                                              :mod (c20-5 / movie)
                                              :frequency (c20-8 / temporal-quantity
                                                                :unit (c20-10 / decade)
                                                                :quant 1)
                                              :quant 1)
                                 :ARG2 (c20-0 / finance))
                    :polarity -)
       :snt2 (c20-2 / pray-01
                    :polarity (c20-4 / amr-unknown)
                    :ARG1 (c20-7 / it)))

# ::snt Oh no shes a Klepper!
# ::tokens ["Oh", "no", "she", "s", "a", "Klepper", "!"]
# ::lemmas ["oh", "no", "she", "s", "a", "Klepper", "!"]
(c21-2 / product
       :name (c21-0 / name
                    :op1 "Klepper")
       :domain (c21-3 / she)
       :mod (c21-1 / oh-no
                   :mode expressive))

# ::snt You ask a fair question.
# ::tokens ["You", "ask", "a", "fair", "question", "."]
# ::lemmas ["you", "ask", "a", "fair", "question", "."]
(c22-3 / ask-01
       :ARG0 (c22-1 / you)
       :ARG1 (c22-2 / question-01
                    :ARG1-of (c22-0 / fair-01)))

# ::snt Nah, a 'boondt.'
# ::tokens ["Nah", ",", "a", "'", "boondt", ".", "'"]
# ::lemmas ["Nah", ",", "a", "'", "boondt", ".", "'"]
(c23-0 / boondt
       :mod (c23-1 / nah))

# ::snt Lame excuse especially now with credit and debit cards
# ::tokens ["Lame", "excuse", "especially", "now", "with", "credit", "and", "debit", "cards"]
# ::lemmas ["Lame", "excuse", "especially", "now", "with", "credit", "and", "debit", "card"]
(c24-2 / excuse-02
       :ARG2 (c24-6 / and
                    :op1 (c24-4 / card
                                :instrument-of (c24-8 / credit-02))
                    :op2 (c24-5 / card
                                :instrument-of (c24-7 / debit)))
       :mod (c24-3 / lame)
       :time (c24-0 / now
                    :mod (c24-1 / especially)))

# ::snt A silent cry for help maybe she needs the 'acting community' to be there for her
# ::tokens ["A", "silent", "cry", "for", "help", "maybe", "she", "needs", "the", "'", "acting", "community", "'", "to", "be", "there", "for", "her"]
# ::lemmas ["a", "silent", "cry", "for", "help", "maybe", "she", "need", "the", "'", "act", "community", "'", "to", "be", "there", "for", "she"]
(c25-4 / possible-01
       :ARG1 (c25-1 / need-01
                    :ARG0 (c25-2 / she)
                    :ARG1 (c25-5 / community
                                 :ARG0-of (c25-8 / act-01)
                                 :location (c25-7 / there)
                                 :beneficiary c25-2))
       :ARG1-of (c25-9 / cause-01
                       :ARG0 (c25-6 / cry-01
                                    :ARG0 c25-2
                                    :ARG1 (c25-3 / help-01)
                                    :mod (c25-0 / silent))))

# ::snt Maybe the poor women is suffering from some sort of dementia. Lets not be too quick to judge just yet.
# ::tokens ["Maybe", "the", "poor", "women", "is", "suffering", "from", "some", "sort", "of", "dementia", ".", "Lets", "not", "be", "too", "quick", "to", "judge", "just", "yet", "."]
# ::lemmas ["maybe", "the", "poor", "woman", "be", "suffer", "from", "some", "sort", "of", "dementia", ".", "let", "not", "be", "too", "quick", "to", "judge", "just", "yet", "."]
(c26-2 / multi-sentence
       :snt1 (c26-7 / possible-01
                    :ARG1 (c26-4 / suffer-01
                                 :ARG0 (c26-9 / woman
                                              :mod (c26-3 / poor))
                                 :ARG1 (c26-13 / disease
                                               :name (c26-5 / name
                                                            :op1 "Dementia")
                                               :mod (c26-0 / sort
                                                           :mod (c26-15 / some)))))
       :snt2 (c26-11 / quick-02
                     :ARG1 (c26-8 / we)
                     :ARG2-of (c26-6 / have-degree-91
                                     :ARG1 c26-8
                                     :ARG3 (c26-12 / too)
                                     :ARG6 (c26-10 / judge-01
                                                   :ARG0 c26-8
                                                   :time (c26-1 / yet
                                                                :mod (c26-14 / just))))
                     :polarity -
                     :mode imperative))

# ::snt Guess she didn't make enough from the movie
# ::tokens ["Guess", "she", "did", "n't", "make", "enough", "from", "the", "movie"]
# ::lemmas ["guess", "she", "do", "not", "make", "enough", "from", "the", "movie"]
(c27-6 / guess-01
       :ARG1 (c27-0 / make-05
                    :ARG0 (c27-1 / she)
                    :ARG1 (c27-5 / thing
                                 :ARG1-of (c27-3 / have-quant-91
                                                 :ARG3 (c27-2 / enough
                                                              :polarity -)))
                    :ARG2 (c27-4 / movie)))

# ::snt The bottle let me down
# ::tokens ["The", "bottle", "let", "me", "down"]
# ::lemmas ["the", "bottle", "let", "i", "down"]
(c28-1 / let-down-04
       :ARG0 (c28-0 / bottle)
       :ARG1 (c28-2 / i))

# ::snt Whaaaat..!!??That woman has no much money she can wipe her ass with a $100 bill several times a day and not have any dent in her pocket....WTF..!!??IF and I say IF, she did this, she needs some serious medical help.Because this is wrong on all levels coming from a millionaire.
# ::tokens ["Whaaaat", "..", "!!??That", "woman", "has", "no", "much", "money", "she", "can", "wipe", "her", "ass", "with", "a", "$", "100", "bill", "several", "times", "a", "day", "and", "not", "have", "any", "dent", "in", "her", "pocket", "....", "WTF", "..", "!!??IF", "and", "I", "say", "IF", ",", "she", "did", "this", ",", "she", "needs", "some", "serious", "medical", "help", ".", "Because", "this", "is", "wrong", "on", "all", "levels", "coming", "from", "a", "millionaire", "."]
# ::lemmas ["Whaaaat", "..", "!!??That", "woman", "have", "no", "much", "money", "she", "can", "wipe", "her", "ass", "with", "a", "$", "100", "bill", "several", "time", "a", "day", "and", "not", "have", "any", "dent", "in", "her", "pocket", "....", "WTF", "..", "!!??if", "and", "i", "say", "if", ",", "she", "do", "this", ",", "she", "need", "some", "serious", "medical", "help", ".", "because", "this", "be", "wrong", "on", "all", "level", "come", "from", "a", "millionaire", "."]
(c29-16 / multi-sentence
        :snt1 (c29-8 / have-03
                     :ARG0 (c29-33 / woman
                                   :mod (c29-12 / that)
                                   :part (c29-13 / ass))
                     :ARG1 (c29-9 / money
                                  :quant (c29-25 / much
                                                 :polarity -)
                                  :ARG1-of (c29-4 / wipe-01
                                                  :ARG0 c29-33
                                                  :ARG2 c29-13
                                                  :instrument (c29-15 / bill
                                                                      :mod (c29-18 / monetary-quantity
                                                                                   :unit (c29-37 / dollar)
                                                                                   :quant 100))
                                                  :ARG1-of (c29-32 / possible-01)
                                                  :frequency (c29-30 / rate-entity-91
                                                                     :ARG1 (c29-0 / several)
                                                                     :ARG2 (c29-22 / temporal-quantity
                                                                                   :unit (c29-21 / day)
                                                                                   :quant 1)))))
        :snt2 (c29-34 / have-03
                      :ARG0 c29-33
                      :ARG1 (c29-19 / dent-01
                                    :ARG1 (c29-17 / pocket
                                                  :poss c29-33))
                      :condition (c29-31 / do-02
                                         :ARG0 c29-33
                                         :ARG1 (c29-35 / this))
                      :mod (c29-27 / fuck
                                   :mode expressive)
                      :polarity -)
        :snt3 (c29-28 / need-01
                      :ARG0 c29-33
                      :ARG1 (c29-7 / help-01
                                   :mod (c29-24 / medicine)
                                   :ARG1-of (c29-6 / serious-02)
                                   :mod (c29-5 / some))
                      :condition (c29-11 / and
                                         :op1 (c29-29 / say-01
                                                      :ARG0 (c29-36 / i)
                                                      :ARG1 (c29-23 / do-02
                                                                    :ARG0 c29-33
                                                                    :ARG1 (c29-1 / this)))
                                         :op2 (c29-2 / say-01
                                                     :ARG0 c29-36
                                                     :ARG1 (c29-26 / wrong-04
                                                                   :ARG1 (c29-14 / this)
                                                                   :prep-on (c29-3 / level
                                                                                   :mod (c29-10 / all)))))
                      :ARG1-of (c29-20 / cause-01
                                       :ARG0 c29-26
                                       :ARG1 c29-14
                                       :prep-on c29-3)))

# ::snt I saw her once at the Greek Theater for a performance. And that was one angry woman. Maybe she's still angry and shoplifted to raise her mood or maybe she thought she wouldn't get caught.
# ::tokens ["I", "saw", "her", "once", "at", "the", "Greek", "Theater", "for", "a", "performance", ".", "And", "that", "was", "one", "angry", "woman", ".", "Maybe", "she", "'s", "still", "angry", "and", "shoplifted", "to", "raise", "her", "mood", "or", "maybe", "she", "thought", "she", "would", "n't", "get", "caught", "."]
# ::lemmas ["i", "see", "she", "once", "at", "the", "Greek", "Theater", "for", "a", "performance", ".", "and", "that", "be", "one", "angry", "woman", ".", "maybe", "she", "be", "still", "angry", "and", "shoplift", "to", "raise", "her", "mood", "or", "maybe", "she", "think", "she", "would", "not", "get", "catch", "."]
(c31-12 / multi-sentence
        :snt1 (c31-0 / see-01
                     :ARG0 (c31-21 / i)
                     :ARG1 (c31-4 / she)
                     :location (c31-10 / theater
                                       :mod (c31-14 / country
                                                    :name (c31-16 / name
                                                                  :op1 "Greece")))
                     :purpose (c31-19 / perform-01
                                      :ARG0 c31-4)
                     :frequency 1)
        :snt2 (c31-9 / and
                     :op2 (c31-20 / woman
                                  :ARG1-of (c31-8 / anger-01)
                                  :domain (c31-15 / that)
                                  :quant 1))
        :snt3 (c31-5 / or
                     :op1 (c31-13 / possible-01
                                  :ARG1 (c31-7 / and
                                               :op1 (c31-23 / anger-01
                                                            :ARG1 (c31-3 / she)
                                                            :mod (c31-17 / still))
                                               :op2 (c31-1 / shoplift-01
                                                           :purpose (c31-18 / raise-01
                                                                            :ARG1 (c31-6 / mood
                                                                                         :poss c31-3)))))
                     :op2 (c31-2 / possible-01
                                 :ARG1 (c31-22 / think-01
                                               :ARG0 c31-3
                                               :ARG1 (c31-11 / catch-03
                                                             :ARG1 c31-3
                                                             :polarity -)))))

# ::snt Oy vey! Shes a klepper!
# ::tokens ["Oy", "vey", "!", "She", "s", "a", "klepper", "!"]
# ::lemmas ["Oy", "vey", "!", "she", "s", "a", "klepper", "!"]
(c33-2 / multi-sentence
       :snt1 (c33-1 / hey
                    :mode expressive)
       :snt2 (c33-3 / klepper
                    :domain (c33-0 / he)))

# ::snt Sometimes I wish there was a sad face button
# ::tokens ["Sometimes", "I", "wish", "there", "was", "a", "sad", "face", "button"]
# ::lemmas ["sometimes", "i", "wish", "there", "be", "a", "sad", "face", "button"]
(c34-4 / wish-01
       :ARG0 (c34-5 / i)
       :ARG1 (c34-2 / button
                    :mod (c34-0 / face
                                :ARG1-of (c34-3 / sad-02)))
       :time (c34-1 / sometimes))
