# ::snt YOU WILL GOOD LUCK AND I LOVE YOU MY WIFE MRS JESSICA MBAVARIRE LOVE HUSBAND MAX
# ::tokens ["YOU", "WILL", "GOOD", "LUCK", "AND", "I", "LOVE", "YOU", "MY", "WIFE", "MRS", "JESSICA", "MBAVARIRE", "LOVE", "HUSBAND", "MAX"]
# ::lemmas ["you", "will", "good", "LUCK", "and", "i", "love", "you", "my", "wife", "MRS", "JESSICA", "MBAVARIRE", "LOVE", "HUSBAND", "MAX"]
(c1-13 / and
       :op1 (c1-14 / good-02
                   :ARG1 (c1-0 / fuck-01
                               :ARG0 (c1-1 / you)))
       :op2 (c1-7 / love-01
                  :ARG0 (c1-12 / i)
                  :ARG1 c1-1)
       :op3 (c1-4 / say-01
                  :ARG0 c1-12
                  :ARG1 (c1-15 / love-01
                               :ARG0 c1-12
                               :ARG1 (c1-8 / person
                                           :name (c1-2 / name
                                                       :op1 "Jessica"
                                                       :op2 "Mariani")
                                           :ARG0-of (c1-6 / have-rel-role-91
                                                          :ARG1 c1-12
                                                          :ARG2 (c1-10 / wife))
                                           :ARG0-of (c1-11 / have-rel-role-91
                                                           :ARG1 c1-12
                                                           :ARG2 (c1-3 / mother)))
                               :ARG2 (c1-5 / person
                                           :name (c1-9 / name
                                                       :op1 "HUSBAND"
                                                       :op2 "Max")))
                  :ARG2 c1-8))

# ::snt I have a diagram that will explain everything
# ::tokens ["I", "have", "a", "diagram", "that", "will", "explain", "everything"]
# ::lemmas ["i", "have", "a", "diagram", "that", "will", "explain", "everything"]
(c2-2 / have-03
      :ARG0 (c2-3 / i)
      :ARG1 (c2-4 / diagram
                  :ARG0-of (c2-1 / explain-01
                                 :ARG1 (c2-0 / everything))))

# ::snt take it back sweaty
# ::tokens ["take", "it", "back", "sweaty"]
# ::lemmas ["take", "it", "back", "sweaty"]
(c3-4 / take-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-3 / it)
      :ARG3 (c3-0 / back)
      :manner (c3-2 / sweat-03
                    :ARG1 c3-1)
      :mode imperative)

# ::snt I heart you! I just wanna give you a big ole hug.
# ::tokens ["I", "heart", "you", "!", "I", "just", "wanna", "give", "you", "a", "big", "ole", "hug", "."]
# ::lemmas ["i", "heart", "you", "!", "i", "just", "wanna", "give", "you", "a", "big", "ole", "hug", "."]
(c4-3 / multi-sentence
      :snt1 (c4-5 / heart-01
                  :ARG0 (c4-9 / i)
                  :ARG1 (c4-2 / you))
      :snt2 (c4-6 / want-01
                  :ARG0 (c4-4 / i)
                  :ARG1 (c4-7 / hug-01
                              :ARG0 c4-4
                              :ARG1 (c4-10 / you)
                              :mod (c4-0 / old)
                              :mod (c4-1 / big))
                  :mod (c4-8 / just)))

# ::snt Yes she is....
# ::tokens ["Yes", "she", "is", "...."]
# ::lemmas ["yes", "she", "be", "...."]
(c5-0 / yes)

# ::snt And who would care if you were? Smh
# ::tokens ["And", "who", "would", "care", "if", "you", "were", "?", "Smh"]
# ::lemmas ["and", "who", "would", "care", "if", "you", "be", "?", "smh"]
(c6-1 / multi-sentence
      :snt1 (c6-5 / and
                  :op2 (c6-3 / care-01
                             :ARG0 (c6-4 / amr-unknown)
                             :condition (c6-0 / you)))
      :snt2 (c6-2 / smh
                  :mode expressive))

# ::snt Not pregnant. Just gross. She's a at best.
# ::tokens ["Not", "pregnant", ".", "Just", "gross", ".", "She", "'s", "a", "at", "best", "."]
# ::lemmas ["not", "pregnant", ".", "just", "gross", ".", "she", "be", "a", "at", "good", "."]
(c7-1 / multi-sentence
      :snt1 (c7-4 / impregnate-01
                  :ARG1 (c7-2 / she)
                  :polarity -)
      :snt2 (c7-6 / gross-05
                  :ARG1 (c7-0 / she)
                  :mod (c7-3 / just))
      :snt3 (c7-5 / at-best
                  :domain (c7-7 / she)))

# ::snt nice work JD. Didn't even know u two were dating.
# ::tokens ["nice", "work", "JD", ".", "Did", "n't", "even", "know", "u", "two", "were", "dating", "."]
# ::lemmas ["nice", "work", "JD", ".", "do", "not", "even", "know", "u", "two", "be", "date", "."]
(c8-2 / multi-sentence
      :snt1 (c8-3 / say-01
                  :ARG1 (c8-8 / work-01
                              :ARG0 (c8-6 / person
                                          :name (c8-1 / name
                                                      :op1 "JD"))
                              :ARG1-of (c8-5 / nice-01))
                  :ARG2 c8-6)
      :snt2 (c8-7 / know-01
                  :ARG0 (c8-9 / i)
                  :ARG1 (c8-10 / date-02
                               :ARG0 (c8-0 / you
                                           :quant 2))
                  :mod (c8-4 / even)
                  :polarity -))

# ::snt finally! Only took her four years.
# ::tokens ["finally", "!", "Only", "took", "her", "four", "years", "."]
# ::lemmas ["finally", "!", "only", "take", "her", "four", "years", "."]
(c9-4 / take-10
      :ARG0 (c9-5 / it)
      :ARG1 (c9-6 / temporal-quantity
                  :unit (c9-2 / year)
                  :poss (c9-3 / she)
                  :quant 4)
      :mod (c9-0 / only)
      :mod (c9-1 / final))

# ::snt you know she had her baby right?
# ::tokens ["you", "know", "she", "had", "her", "baby", "right", "?"]
# ::lemmas ["you", "know", "she", "have", "her", "baby", "right", "?"]
(c10-5 / know-01
       :polarity (c10-8 / amr-unknown)
       :ARG0 (c10-1 / you)
       :ARG1 (c10-4 / have-03
                    :ARG0 (c10-2 / she)
                    :ARG1 (c10-0 / baby
                                 :ARG0-of (c10-7 / have-rel-role-91
                                                 :ARG1 c10-2
                                                 :ARG2 (c10-6 / child)))
                    :ARG1-of (c10-3 / request-confirmation-91)))

# ::snt wow. I'm VERY impressed!
# ::tokens ["wow", ".", "I", "'m", "VERY", "impressed", "!"]
# ::lemmas ["wow", ".", "i", "be", "very", "impressed", "!"]
(c11-0 / multi-sentence
       :snt1 (c11-3 / wow
                    :mode expressive)
       :snt2 (c11-4 / impress-01
                    :ARG1 (c11-1 / i)
                    :degree (c11-2 / very)))
