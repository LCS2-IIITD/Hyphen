# ::snt Yeah she had a bad drinking problem that resulted in her getting replaced later in the show. Sucks cause nobody else could ever play Laurie like she did
# ::tokens ["Yeah", "she", "had", "a", "bad", "drinking", "problem", "that", "resulted", "in", "her", "getting", "replaced", "later", "in", "the", "show", ".", "Sucks", "cause", "nobody", "else", "could", "ever", "play", "Laurie", "like", "she", "did"]
# ::lemmas ["yeah", "she", "have", "a", "bad", "drinking", "problem", "that", "result", "in", "she", "getting", "replace", "later", "in", "the", "show", ".", "suck", "cause", "nobody", "else", "could", "ever", "play", "Laurie", "like", "she", "do"]
(c1-11 / multi-sentence
       :snt1 (c1-7 / have-03
                   :ARG0 (c1-0 / she)
                   :ARG1 (c1-18 / problem
                                :topic (c1-19 / drink-01
                                              :ARG0 c1-0)
                                :ARG1-of (c1-10 / bad-07)
                                :ARG1-of (c1-16 / result-01
                                                :ARG2 (c1-3 / replace-01
                                                            :ARG1 c1-0
                                                            :time (c1-8 / after
                                                                        :op1 (c1-5 / show-04)))))
                   :mod (c1-6 / yeah))
       :snt2 (c1-4 / suck-03
                   :ARG1 (c1-12 / play-01
                                :ARG0 (c1-15 / nobody
                                             :mod (c1-17 / else))
                                :ARG1 (c1-2 / person
                                            :name (c1-13 / name
                                                         :op1 "Laurie"))
                                :time (c1-9 / ever)
                                :ARG1-of (c1-14 / resemble-01
                                                :ARG2 (c1-1 / play-01
                                                            :ARG0 c1-2
                                                            :ARG1 c1-2)))))

# ::snt yes!!
# ::tokens ["yes", "!", "!"]
# ::lemmas ["yes", "!", "!"]
(c2-0 / yes)

# ::snt omg yes! drugs right?
# ::tokens ["omg", "yes", "!", "drugs", "right", "?"]
# ::lemmas ["omg", "yes", "!", "drug", "right", "?"]
(c3-0 / drug
      :ARG1-of (c3-2 / request-confirmation-91)
      :mod (c3-1 / oh-my-god
                 :mode expressive))

# ::snt Still unacceptable i literally love them together lol
# ::tokens ["Still", "unacceptable", "i", "literally", "love", "them", "together", "lol"]
# ::lemmas ["still", "unacceptable", "i", "literally", "love", "they", "together", "lol"]
(c4-1 / love-01
      :ARG0 (c4-4 / i)
      :ARG1 (c4-3 / they)
      :manner (c4-5 / together)
      :ARG2-of (c4-6 / laugh-01
                     :ARG0 c4-4
                     :manner (c4-2 / loud)
                     :mode expressive)
      :mod (c4-0 / still))

# ::snt yoooooo I was so hurt when that started coolest dude in the group gets with the epitome of entitled and annoying
# ::tokens ["yoooooo", "I", "was", "so", "hurt", "when", "that", "started", "coolest", "dude", "in", "the", "group", "gets", "with", "the", "epitome", "of", "entitled", "and", "annoying"]
# ::lemmas ["yoooooo", "i", "be", "so", "hurt", "when", "that", "start", "coolest", "dude", "in", "the", "group", "get", "with", "the", "epitome", "of", "entitled", "and", "annoying"]
(c5-5 / hurt-01
      :ARG0 (c5-2 / start-01
                  :ARG1 (c5-10 / get-01
                               :ARG0 (c5-11 / dude
                                            :ARG1-of (c5-7 / have-degree-91
                                                           :ARG2 (c5-6 / cool-04
                                                                       :ARG1 c5-11)
                                                           :ARG3 (c5-1 / most)
                                                           :ARG5 (c5-8 / group)))
                               :ARG1 (c5-4 / epitome-01
                                           :ARG1 (c5-9 / and
                                                       :op1 (c5-3 / entitle-01)
                                                       :op2 (c5-12 / annoy-01)))))
      :ARG1 (c5-13 / i)
      :degree (c5-0 / so))

# ::snt You clearly care enough to reply to my tweet
# ::tokens ["You", "clearly", "care", "enough", "to", "reply", "to", "my", "tweet"]
# ::lemmas ["you", "clearly", "care", "enough", "to", "reply", "to", "my", "tweet"]
(c6-3 / have-degree-91
      :ARG1 (c6-0 / you)
      :ARG2 (c6-4 / care-01
                  :ARG0 c6-0
                  :ARG1-of (c6-8 / clear-06))
      :ARG3 (c6-2 / enough)
      :ARG6 (c6-1 / reply-01
                  :ARG0 c6-0
                  :ARG1 (c6-6 / thing
                              :ARG1-of (c6-7 / tweet-01
                                             :ARG0 (c6-5 / i)))))

# ::snt Unacceptable im reliving the entire Jackie &amp; Hyde relationship (which i found out has a name and everything lmao)
# ::tokens ["Unacceptable", "i", "m", "reliving", "the", "entire", "Jackie", "&", "amp", ";", "Hyde", "relationship", "(", "which", "i", "found", "out", "has", "a", "name", "and", "everything", "lmao", ")"]
# ::lemmas ["unacceptable", "i", "m", "relive", "the", "entire", "Jackie", "&", "amp", ";", "Hyde", "relationship", "(", "which", "i", "find", "out", "have", "a", "name", "and", "everything", "lmao", ")"]
(c7-6 / possible-01
      :ARG1 (c7-10 / accept-01
                   :ARG1 (c7-3 / relive-01
                               :ARG0 (c7-9 / i)
                               :ARG1 (c7-13 / relation-03
                                            :ARG0 (c7-11 / and
                                                         :op1 (c7-2 / person
                                                                    :name (c7-1 / name
                                                                                :op1 "Jackie"))
                                                         :op2 (c7-14 / person
                                                                     :name (c7-5 / name
                                                                                 :op1 "amp"))
                                                         :mod (c7-4 / entire))
                                            :ARG1 (c7-8 / and
                                                        :op1 (c7-7 / name
                                                                   :op1 "Hyde"))
                                            :op2 (c7-12 / everything)
                                            :ARG1-of (c7-0 / find-out-03
                                                           :ARG0 c7-9))))
      :polarity -)

# ::snt Put my brother on to it a few weeks ago...he's
# ::tokens ["Put", "my", "brother", "on", "to", "it", "a", "few", "weeks", "ago", "...", "he", "'s"]
# ::lemmas ["put", "my", "brother", "on", "to", "it", "a", "few", "weeks", "ago", "...", "he", "be"]
(c8-6 / put-01
      :ARG0 (c8-9 / i)
      :ARG1 (c8-3 / person
                  :ARG0-of (c8-5 / have-rel-role-91
                                 :ARG1 c8-9
                                 :ARG2 (c8-1 / brother)))
      :ARG2 (c8-4 / it)
      :time (c8-7 / before
                  :op1 (c8-2 / now)
                  :quant (c8-0 / few
                               :op1 (c8-10 / temporal-quantity
                                           :unit (c8-8 / week)
                                           :quant 1))))

# ::snt Nikkas dont care tho
# ::tokens ["Nikkas", "do", "nt", "care", "tho"]
# ::lemmas ["Nikkas", "do", "not", "care", "tho"]
(c9-2 / have-concession-91
      :ARG1 (c9-4 / care-01
                  :ARG0 (c9-3 / person
                              :mod (c9-1 / political-movement
                                         :name (c9-0 / name
                                                     :op1 "Nikkas")))
                  :polarity -))

# ::snt shit has been done &lt;3 thank u v much
# ::tokens ["shit", "has", "been", "done", "&", "lt;3", "thank", "u", "v", "much"]
# ::lemmas ["shit", "have", "be", "do", "&", "lt;3", "thank", "u", "v", "much"]
(c10-3 / and
       :op1 (c10-6 / do-02
                   :ARG1 (c10-2 / shit))
       :op2 (c10-5 / thank-01
                   :ARG0 (c10-4 / i)
                   :ARG1 (c10-0 / you)
                   :mod (c10-1 / much)))

# ::snt Do your homework first
# ::tokens ["Do", "your", "homework", "first"]
# ::lemmas ["do", "your", "homework", "first"]
(c11-0 / do-02
       :ARG0 (c11-1 / you)
       :ARG1 (c11-2 / homework
                    :poss c11-1)
       :ord (c11-3 / ordinal-entity
                   :value 1)
       :mode imperative)

# ::snt This is a fact
# ::tokens ["This", "is", "a", "fact"]
# ::lemmas ["this", "be", "a", "fact"]
(c12-0 / fact
       :domain (c12-1 / this))

# ::snt I think all of season episodes are named after Led Zeppelin songs, and I think season episodes are named after Queen
# ::tokens ["I", "think", "all", "of", "season", "episodes", "are", "named", "after", "Led", "Zeppelin", "songs", ",", "and", "I", "think", "season", "episodes", "are", "named", "after", "Queen"]
# ::lemmas ["i", "think", "all", "of", "season", "episode", "be", "name", "after", "Led", "Zeppelin", "song", ",", "and", "i", "think", "season", "episode", "be", "name", "after", "queen"]
(c13-4 / and
       :op1 (c13-11 / think-01
                    :ARG0 (c13-10 / i)
                    :ARG1 (c13-1 / name-02
                                 :ARG1 (c13-5 / episode
                                              :mod (c13-3 / season)
                                              :mod (c13-12 / all))
                                 :ARG2 (c13-0 / song
                                              :mod (c13-7 / person
                                                          :name (c13-6 / name
                                                                       :op1 "Led"
                                                                       :op2 "Zeppelin")))))
       :op2 (c13-14 / think-01
                    :ARG0 c13-10
                    :ARG1 (c13-8 / name-02
                                 :ARG1 (c13-13 / episode
                                               :mod (c13-15 / season))
                                 :ARG2 (c13-2 / person
                                              :name (c13-9 / name
                                                           :op1 "Queen")))))

# ::snt Mas q? mto divertido, eu sempre assistia na Warner
# ::tokens ["Mas", "q", "?", "mto", "divertido", ",", "eu", "sempre", "assistia", "na", "Warner"]
# ::lemmas ["Mas", "q", "?", "mto", "divertido", ",", "eu", "sempre", "assistia", "na", "Warner"]
(c14-1 / multi-sentence
       :snt1 (c14-8 / amr-unknown
                    :polarity (c14-7 / amr-unknown))
       :snt2 (c14-10 / divertido
                     :domain (c14-0 / you))
       :snt3 (c14-6 / amr-unknown
                    :ARG1-of (c14-4 / mean-01
                                    :ARG2 (c14-2 / assist-01
                                                 :ARG0 (c14-9 / you)
                                                 :ARG1 (c14-5 / person
                                                              :name (c14-3 / name
                                                                           :op1 "Warner"))))
                    :polarity -))

# ::snt Uhhh s, bien jugado. Ah s no discuto xd
# ::tokens ["Uhhh", "s", ",", "bien", "jugado", ".", "Ah", "s", "no", "discuto", "xd"]
# ::lemmas ["Uhhh", "s", ",", "bien", "jugado", ".", "ah", "s", "no", "discuto", "xd"]
(c15-1 / multi-sentence
       :snt1 (c15-0 / bien
                    :mod (c15-4 / uhhh
                                :mode expressive)
                    :mode expressive)
       :snt2 (c15-3 / discuto
                    :mod (c15-2 / emoticon
                                :value "xd")
                    :polarity -))

# ::snt La mejor es How I Met your Mother, la gente de bien lo sabe xd
# ::tokens ["La", "mejor", "es", "How", "I", "Met", "your", "Mother", ",", "la", "gente", "de", "bien", "lo", "sabe", "xd"]
# ::lemmas ["La", "mejor", "es", "how", "i", "meet", "your", "Mother", ",", "la", "gente", "de", "bien", "lo", "sabe", "xd"]
(c16-3 / multi-sentence
       :snt1 (c16-5 / es-01
                    :ARG1 (c16-6 / mejor)
                    :ARG2 (c16-8 / work-of-art
                                 :name (c16-4 / name
                                              :op1 "How"
                                              :op2 "I"
                                              :op3 "Met"
                                              :op4 "Your"
                                              :op5 "Mother")))
       :snt2 (c16-7 / possible-01
                    :ARG1 (c16-9 / come-01
                                 :ARG1 (c16-2 / you)
                                 :ARG4 (c16-10 / gente
                                               :mod (c16-1 / bien))
                                 :snt3-of c16-3))
       :ARG1 c16-2
       :ARG4 (c16-0 / xd))

# ::snt s2 ep16 of Frasier (The One Where Sam Shows Up)
# ::tokens ["s2", "ep16", "of", "Frasier", "(", "The", "One", "Where", "Sam", "Shows", "Up", ")"]
# ::lemmas ["s2", "ep16", "of", "Frasier", "(", "the", "One", "where", "Sam", "Shows", "up", ")"]
(c17-4 / publication-91
       :ARG1 (c17-5 / chapter
                    :part-of (c17-0 / book
                                    :name (c17-1 / name
                                                 :op1 "The"
                                                 :op2 "One"
                                                 :op3 "Where"
                                                 :op4 "Sam"
                                                 :op5 " Shows"
                                                 :op6 "Up"))
                    :mod 16)
       :ARG4 (c17-2 / person
                    :name (c17-3 / name
                                 :op1 "Frasier")))

# ::snt s3 ep4 of That s Show (the Hitchcock episode)
# ::tokens ["s3", "ep4", "of", "That", "s", "Show", "(", "the", "Hitchcock", "episode", ")"]
# ::lemmas ["s3", "ep4", "of", "that", "s", "Show", "(", "the", "Hitchcock", "episode", ")"]
(c18-3 / episode
       :part-of (c18-0 / broadcast-program
                       :name (c18-2 / name
                                    :op1 "That"
                                    :op2 " s"
                                    :op3 "Show"))
       :ARG1-of (c18-1 / mean-01
                       :ARG2 (c18-6 / episode
                                    :mod (c18-5 / person
                                                :name (c18-4 / name
                                                             :op1 "Hitchcock"))))
       :mod 3)

# ::snt I think they felt real good when Brent got there. He added some vocals and fresh energy. I miss those days man. So many great shows and the fun that went into a road trip
# ::tokens ["I", "think", "they", "felt", "real", "good", "when", "Brent", "got", "there", ".", "He", "added", "some", "vocals", "and", "fresh", "energy", ".", "I", "miss", "those", "days", "man", ".", "So", "many", "great", "shows", "and", "the", "fun", "that", "went", "into", "a", "road", "trip"]
# ::lemmas ["i", "think", "they", "feel", "real", "good", "when", "Brent", "get", "there", ".", "he", "add", "some", "vocal", "and", "fresh", "energy", ".", "i", "miss", "those", "days", "man", ".", "so", "many", "great", "show", "and", "the", "fun", "that", "go", "into", "a", "road", "trip"]
(c19-19 / multi-sentence
        :snt1 (c19-14 / think-01
                      :ARG0 (c19-32 / i)
                      :ARG1 (c19-23 / feel-05
                                    :ARG1 (c19-21 / they)
                                    :ARG2 (c19-15 / good-02
                                                  :degree (c19-26 / really))
                                    :time (c19-2 / get-05
                                                 :ARG1 (c19-28 / person
                                                               :name (c19-24 / name
                                                                             :op1 "Brent"))
                                                 :ARG2 (c19-33 / there))))
        :snt2 (c19-13 / add-02
                      :ARG0 (c19-9 / he)
                      :ARG1 (c19-12 / and
                                    :op1 (c19-8 / vocal
                                                :quant (c19-0 / some))
                                    :op2 (c19-27 / energy
                                                 :ARG1-of (c19-29 / fresh-04))))
        :snt3 (c19-10 / miss-01
                      :ARG0 (c19-7 / i)
                      :ARG1 (c19-34 / day
                                    :mod (c19-1 / that)))
        :snt4 (c19-11 / and
                      :op1 (c19-6 / show-04
                                  :mod (c19-4 / great)
                                  :ARG1-of (c19-31 / have-quant-91
                                                   :ARG2 (c19-22 / many)
                                                   :ARG3 (c19-5 / so)))
                      :op2 (c19-30 / fun-01
                                   :ARG1-of (c19-16 / go-06
                                                    :ARG2 (c19-17 / trip-03
                                                                  :ARG0 c19-7
                                                                  :ARG1 (c19-3 / road)))))
        :snt5 (c19-25 / say-01
                      :ARG0 (c19-18 / i)
                      :ARG1 c19-10
                      :ARG0 c19-18
                      :ARG1 c19-34)
        :ARG2 (c19-20 / man))

# ::snt Yes Phil! Mine sure was..
# ::tokens ["Yes", "Phil", "!", "Mine", "sure", "was", ".."]
# ::lemmas ["yes", "Phil", "!", "mine", "sure", "be", ".."]
(c20-1 / multi-sentence
       :snt1 (c20-0 / yes
                    :mode expressive)
       :snt2 (c20-3 / sure-02
                    :ARG1 (c20-6 / thing
                                 :poss (c20-5 / i)))
       :snt3 (c20-4 / person
                    :name (c20-2 / name
                                 :op1 "Phil")))

# ::snt Ok Captain Subtlety You could say theyre popular. Sure, you could say that.
# ::tokens ["Ok", "Captain", "Subtlety", "You", "could", "say", "they", "re", "popular", ".", "Sure", ",", "you", "could", "say", "that", "."]
# ::lemmas ["ok", "Captain", "Subtlety", "You", "could", "say", "they", "re", "popular", ".", "sure", ",", "you", "could", "say", "that", "."]
(c21-5 / multi-sentence
       :snt1 (c21-0 / okay-01
                    :ARG2 (c21-7 / person
                                 :name (c21-3 / name
                                              :op1 "Captain"
                                              :op2 "Subtlety")))
       :snt2 (c21-4 / possible-01
                    :ARG1 (c21-6 / say-01
                                 :ARG0 (c21-2 / you)
                                 :ARG1 (c21-10 / popular-02
                                               :ARG1 (c21-9 / they))))
       :snt3 (c21-1 / sure-02
                    :ARG1 (c21-8 / possible-01
                                 :ARG1 (c21-13 / say-01
                                               :ARG0 (c21-11 / you)
                                               :ARG1 (c21-12 / that)))))

# ::snt Good times!
# ::tokens ["Good", "times", "!"]
# ::lemmas ["good", "time", "!"]
(c22-1 / time
       :ARG1-of (c22-0 / good-02))

# ::snt Worth noting that Phil said "most popular", not best.
# ::tokens ["Worth", "noting", "that", "Phil", "said", "\"", "most", "popular", "\"", ",", "not", "best", "."]
# ::lemmas ["worth", "note", "that", "Phil", "say", "\"", "most", "popular", "\"", ",", "not", "good", "."]
(c23-7 / worth-02
       :ARG2 (c23-0 / note-01
                    :ARG1 (c23-2 / say-01
                                 :ARG0 (c23-5 / person
                                              :name (c23-4 / name
                                                           :op1 "Phil"))
                                 :ARG1 (c23-8 / contrast-01
                                              :ARG1 (c23-6 / have-degree-91
                                                           :ARG1 c23-5
                                                           :ARG2 (c23-1 / popular-02
                                                                        :ARG1 c23-5)
                                                           :ARG3 (c23-3 / most))
                                              :ARG2 (c23-9 / have-degree-91
                                                           :ARG1 c23-5
                                                           :ARG2 (c23-10 / good-02
                                                                         :ARG1 c23-5)
                                                           :ARG3 c23-3
                                                           :polarity -)))))

# ::snt Thank You USAF for stationing me and just outside of San Francisco -1981 (Travis AFB) and giving us time off for all but local GD shows. (missed Warfield shows)Also thank you for the flight back to Travis after the Alaska GD shows in
# ::tokens ["Thank", "You", "USAF", "for", "stationing", "me", "and", "just", "outside", "of", "San", "Francisco", "-1981", "(", "Travis", "AFB", ")", "and", "giving", "us", "time", "off", "for", "all", "but", "local", "GD", "shows", ".", "(", "missed", "Warfield", "shows)Also", "thank", "you", "for", "the", "flight", "back", "to", "Travis", "after", "the", "Alaska", "GD", "shows", "in"]
# ::lemmas ["thank", "you", "USAF", "for", "station", "i", "and", "just", "outside", "of", "San", "Francisco", "-1981", "(", "Travis", "AFB", ")", "and", "give", "we", "time", "off", "for", "all", "but", "local", "GD", "show", ".", "(", "miss", "Warfield", "shows)also", "thank", "you", "for", "the", "flight", "back", "to", "Travis", "after", "the", "Alaska", "GD", "show", "in"]
(c24-9 / thank-01
       :ARG1 (c24-13 / military
                     :name (c24-20 / name
                                   :op1 "USAF"))
       :ARG2 (c24-11 / and
                     :op1 (c24-0 / station-01
                                 :ARG0 c24-13
                                 :ARG1 (c24-8 / and
                                              :op1 (c24-26 / i)
                                              :op2 (c24-3 / outside
                                                          :op1 (c24-16 / city
                                                                       :name (c24-15 / name
                                                                                     :op1 "San"
                                                                                     :op2 "Francisco"))
                                                          :mod (c24-7 / just)))
                                 :time (c24-28 / date-entity
                                               :year 1981)
                                 :location (c24-19 / facility
                                                   :name (c24-22 / name
                                                                 :op1 "Travis"
                                                                 :op2 "Airland")))
                     :op2 (c24-10 / give-01
                                  :ARG0 c24-13
                                  :ARG1 (c24-18 / time
                                                :mod (c24-12 / off))
                                  :ARG2 (c24-23 / we)
                                  :purpose (c24-4 / show-04
                                                  :ARG1 (c24-27 / thing
                                                                :name (c24-17 / name
                                                                              :op1 "GOD"))
                                                  :ARG1-of (c24-1 / local-02)
                                                  :mod (c24-6 / all)
                                                  :ARG1-of (c24-5 / miss-01))))
       :mod (c24-14 / also)
       :time (c24-24 / after
                     :op1 (c24-2 / show-04
                                 :ARG1 c24-27
                                 :location (c24-21 / state
                                                   :name (c24-25 / name
                                                                 :op1 "Alaska")))))

# ::snt Congrats and thank you for sharing your memories out here!
# ::tokens ["Congrats", "and", "thank", "you", "for", "sharing", "your", "memories", "out", "here", "!"]
# ::lemmas ["congrat", "and", "thank", "you", "for", "share", "your", "memory", "out", "here", "!"]
(c25-4 / and
       :op1 (c25-6 / congratulate-01
                   :ARG1 (c25-1 / you))
       :op2 (c25-7 / thank-01
                   :ARG1 c25-1
                   :ARG2 (c25-3 / share-01
                                :ARG0 c25-1
                                :ARG1 (c25-2 / memory
                                             :poss c25-1)
                                :location (c25-0 / out
                                                 :op1 (c25-5 / here)))))

# ::snt Saw some great shows in fantastic shows that always remember
# ::tokens ["Saw", "some", "great", "shows", "in", "fantastic", "shows", "that", "always", "remember"]
# ::lemmas ["saw", "some", "great", "show", "in", "fantastic", "show", "that", "always", "remember"]
(c26-2 / see-01
       :ARG0 (c26-5 / i)
       :ARG1 (c26-0 / show
                    :mod (c26-7 / great)
                    :quant (c26-8 / some))
       :location (c26-3 / show
                        :ARG1-of (c26-1 / fantastic-02)
                        :ARG1-of (c26-4 / remember-01
                                        :time (c26-6 / always))))

# ::snt Truth
# ::tokens ["Truth"]
# ::lemmas ["truth"]
(c27-0 / truth)

# ::snt Having witnessed those shows in the s multiple times during that period, I totally agree Phil!
# ::tokens ["Having", "witnessed", "those", "shows", "in", "the", "s", "multiple", "times", "during", "that", "period", ",", "I", "totally", "agree", "Phil", "!"]
# ::lemmas ["having", "witness", "those", "show", "in", "the", "s", "multiple", "time", "during", "that", "period", ",", "i", "totally", "agree", "Phil", "!"]
(c28-3 / say-01
       :ARG0 (c28-9 / i)
       :ARG1 (c28-10 / agree-01
                     :ARG0 c28-9
                     :ARG1-of (c28-8 / total-02)
                     :ARG1-of (c28-6 / cause-01
                                     :ARG0 (c28-7 / witness-01
                                                  :ARG0 c28-9
                                                  :ARG1 (c28-0 / show-04
                                                               :mod (c28-11 / that))
                                                  :frequency (c28-1 / multiple)
                                                  :time (c28-5 / period
                                                               :mod c28-11))))
       :ARG2 (c28-2 / person
                    :name (c28-4 / name
                                 :op1 "Phil")))

# ::snt Winterland? Our first date was there (Dick's Pick )Still happily married + years laterShe took me to dinner in SF and then to the showNow we are Grateful Grand Parents
# ::tokens ["Winterland", "?", "Our", "first", "date", "was", "there", "(", "Dick", "'s", "Pick", ")", "Still", "happily", "married", "+", "years", "laterShe", "took", "me", "to", "dinner", "in", "SF", "and", "then", "to", "the", "showNow", "we", "are", "Grateful", "Grand", "Parents"]
# ::lemmas ["Winterland", "?", "our", "first", "date", "be", "there", "(", "Dick", "'s", "Pick", ")", "still", "happily", "marry", "+", "years", "latershe", "take", "i", "to", "dinner", "in", "SF", "and", "then", "to", "the", "shownow", "we", "be", "Grateful", "Grand", "Parents"]
(c29-16 / multi-sentence
        :snt1 (c29-29 / date-02
                      :polarity (c29-14 / amr-unknown)
                      :ARG0 (c29-25 / we)
                      :ARG1 (c29-24 / person
                                    :name (c29-23 / name
                                                  :op1 "Dick's"
                                                  :op2 "Pick"))
                      :location (c29-13 / there)
                      :ord (c29-5 / ordinal-entity
                                  :value 1))
        :snt2 (c29-12 / and
                      :op1 (c29-9 / marry-01
                                  :ARG1 (c29-27 / i)
                                  :time (c29-11 / after
                                                :quant (c29-22 / more-than
                                                               :op1 (c29-21 / temporal-quantity
                                                                            :unit (c29-7 / year)
                                                                            :quant 1)))
                                  :mod (c29-0 / still)
                                  :ARG0-of (c29-10 / happy-01))
                      :op2 (c29-28 / take-01
                                   :ARG0 (c29-6 / she)
                                   :ARG1 (c29-8 / i)
                                   :ARG3 (c29-17 / and
                                                 :op1 (c29-20 / dinner)
                                                 :op2 (c29-4 / show-04))))
        :snt3 (c29-18 / person
                      :ARG0-of (c29-26 / have-rel-role-91
                                       :ARG1 (c29-1 / we)
                                       :ARG2 (c29-3 / parent
                                                    :mod (c29-15 / grand))
                                       :ARG1-of (c29-2 / Grateful-03))
                      :mod (c29-19 / now)))

# ::snt Donna!!!!
# ::tokens ["Donna", "!", "!", "!", "!"]
# ::lemmas ["Donna", "!", "!", "!", "!"]
(c30-1 / person
       :name (c30-0 / name
                    :op1 "Donna"))

# ::snt it's too bad that this quote is about all that was covered in the Amazon Long Strange Trip documentary for this period. There could have been an entire episode covering -78. missed opportunity.
# ::tokens ["it", "'s", "too", "bad", "that", "this", "quote", "is", "about", "all", "that", "was", "covered", "in", "the", "Amazon", "Long", "Strange", "Trip", "documentary", "for", "this", "period", ".", "There", "could", "have", "been", "an", "entire", "episode", "covering", "-78", ".", "missed", "opportunity", "."]
# ::lemmas ["it", "be", "too", "bad", "that", "this", "quote", "be", "about", "all", "that", "be", "cover", "in", "the", "Amazon", "Long", "Strange", "Trip", "documentary", "for", "this", "period", ".", "there", "could", "have", "be", "an", "entire", "episode", "cover", "-78", ".", "miss", "opportunity", "."]
(c31-2 / multi-sentence
       :snt1 (c31-7 / have-degree-91
                    :ARG1 (c31-12 / thing
                                  :ARG1-of (c31-13 / quote-01)
                                  :mod (c31-14 / this))
                    :ARG2 (c31-1 / bad-07
                                 :ARG1 c31-12)
                    :ARG3 (c31-15 / too)
                    :ARG6 (c31-11 / cover-03
                                  :ARG0 (c31-16 / documentary
                                                :name (c31-3 / name
                                                             :op1 "Amazon"
                                                             :op2 "Long"
                                                             :op3 "Strange"
                                                             :op4 " Trip"))
                                  :ARG1 c31-12
                                  :duration (c31-8 / period
                                                   :mod (c31-6 / this))))
       :snt2 (c31-4 / possible-01
                    :ARG1 (c31-9 / episode
                                 :mod (c31-5 / entire)
                                 :ARG0-of (c31-17 / cover-03
                                                  :ARG1 (c31-0 / opportunity
                                                               :ARG1-of (c31-10 / miss-02))))))

# ::snt Yes!
# ::tokens ["Yes", "!"]
# ::lemmas ["yes", "!"]
(c32-0 / yes)

# ::snt IMHO, The legendary shows from '77 represent the pinnacle of what music can be. When, at years old I was given a min cassette of "Buffalo -9-77" opening with Help-Slip-Frank, my life was forever changed. I remain forever Grateful.
# ::tokens ["IMHO", ",", "The", "legendary", "shows", "from", "'", "77", "represent", "the", "pinnacle", "of", "what", "music", "can", "be", ".", "When", ",", "at", "years", "old", "I", "was", "given", "a", "min", "cassette", "of", "\"", "Buffalo", "-9", "-", "77", "\"", "opening", "with", "Help", "-", "Slip", "-", "Frank", ",", "my", "life", "was", "forever", "changed", ".", "I", "remain", "forever", "Grateful", "."]
# ::lemmas ["IMHO", ",", "the", "legendary", "show", "from", "'", "77", "represent", "the", "pinnacle", "of", "what", "music", "can", "be", ".", "when", ",", "at", "year", "old", "i", "be", "give", "a", "min", "cassette", "of", "\"", "Buffalo", "-9", "-", "77", "\"", "opening", "with", "Help", "-", "slip", "-", "Frank", ",", "my", "life", "be", "forever", "change", ".", "i", "remain", "forever", "grateful", "."]
(c33-16 / multi-sentence
        :snt1 (c33-4 / opine-01
                     :ARG0 (c33-30 / i)
                     :ARG1 (c33-27 / represent-01
                                   :ARG0 (c33-0 / show
                                                :mod (c33-1 / legendary)
                                                :time (c33-31 / date-entity
                                                              :year 1977))
                                   :ARG1 (c33-28 / pinnacle
                                                 :domain (c33-7 / music)
                                                 :ARG1-of (c33-17 / possible-01)))
                     :ARG1-of (c33-8 / humble-01))
        :snt2 (c33-20 / change-01
                      :ARG1 (c33-12 / life
                                    :poss (c33-6 / i))
                      :time (c33-10 / give-01
                                    :ARG1 (c33-21 / disc
                                                  :quant (c33-24 / min)
                                                  :mod (c33-9 / tape)
                                                  :mod (c33-19 / music
                                                               :name (c33-26 / name
                                                                             :op1 "Buffalo -9-77")
                                                               :ARG1-of (c33-15 / open-02
                                                                                :ARG2 (c33-23 / music
                                                                                              :name (c33-18 / name
                                                                                                            :op1 "Help-Slip-Frank")))))
                                    :ARG2 c33-6
                                    :time (c33-11 / age-01
                                                  :ARG1 c33-6
                                                  :ARG2 (c33-22 / temporal-quantity
                                                                :unit (c33-5 / year)
                                                                :quant 1)))
                      :ARG1-of (c33-14 / cause-01
                                       :ARG1 c33-12
                                       :duration (c33-25 / forever)
                                       :ARG0 c33-20))
        :snt3 (c33-3 / remain-01
                     :ARG1 (c33-13 / i)
                     :ARG3 (c33-2 / Grateful)
                     :duration (c33-29 / forever)))

# ::snt Word up
# ::tokens ["Word", "up"]
# ::lemmas ["word", "up"]
(c34-0 / word-up-00
       :ARG0 (c34-1 / you)
       :mode imperative)

# ::snt Yup, agree Phil
# ::tokens ["Yup", ",", "agree", "Phil"]
# ::lemmas ["yup", ",", "agree", "Phil"]
(c36-2 / say-01
       :ARG0 (c36-4 / i)
       :ARG1 (c36-5 / agree-01
                    :ARG0 c36-4)
       :ARG2 (c36-3 / person
                    :name (c36-1 / name
                                 :op1 "Phil"))
       :mod (c36-0 / yup))

# ::snt Oh no she a dumbass. She didnt go to college for love smh guys aint shit
# ::tokens ["Oh", "no", "she", "a", "dumbass", ".", "She", "did", "nt", "go", "to", "college", "for", "love", "smh", "guys", "ai", "nt", "shit"]
# ::lemmas ["oh", "no", "she", "a", "dumbass", ".", "she", "do", "not", "go", "to", "college", "for", "love", "smh", "guy", "be", "not", "shit"]
(c37-2 / multi-sentence
       :snt1 (c37-9 / dumbass
                    :domain (c37-3 / she)
                    :mod (c37-0 / oh-no
                                :mode expressive))
       :snt2 (c37-8 / go-02
                    :ARG0 (c37-1 / she)
                    :ARG4 (c37-6 / college)
                    :purpose (c37-5 / love-01
                                    :ARG0 c37-1
                                    :ARG1 (c37-7 / guy
                                                 :mod (c37-10 / smh
                                                              :mode expressive)))
                    :mod (c37-4 / shit
                                :polarity -)
                    :polarity -))

# ::snt You got some you wanna say dawg
# ::tokens ["You", "got", "some", "you", "wanna", "say", "dawg"]
# ::lemmas ["you", "get", "some", "you", "wanna", "say", "dawg"]
(c38-4 / get-01
       :ARG0 (c38-1 / you)
       :ARG1 (c38-2 / some
                    :ARG1-of (c38-0 / say-01
                                    :ARG0 c38-1
                                    :ARG1-of (c38-3 / want-01
                                                    :ARG0 c38-1)
                                    :mod (c38-5 / dawg
                                                :mode expressive))))

# ::snt It kills me when red discovers the word dumbass
# ::tokens ["It", "kills", "me", "when", "red", "discovers", "the", "word", "dumbass"]
# ::lemmas ["it", "kill", "i", "when", "red", "discover", "the", "word", "dumbass"]
(c39-1 / kill-01
       :ARG0 (c39-6 / discover-01
                    :ARG0 (c39-2 / person
                                 :name (c39-0 / name
                                              :op1 "Red"))
                    :ARG1 (c39-3 / word
                                 :mod (c39-4 / dumbass)))
       :ARG1 (c39-5 / i))

# ::snt meu preferido tbm rssAdoro os encontros dele c o desafeto dele Fanton kkkkk
# ::tokens ["meu", "preferido", "tbm", "rssAdoro", "os", "encontros", "dele", "c", "o", "desafeto", "dele", "Fanton", "kkkkk"]
# ::lemmas ["meu", "preferido", "tbm", "rssAdoro", "os", "encontros", "dele", "c", "o", "desafeto", "dele", "Fanton", "kkkkk"]
(c41-5 / prefer-01
       :ARG0 (c41-10 / i)
       :ARG1 (c41-1 / person
                    :name (c41-0 / name
                                 :op1 "rssAdoro")
                    :ARG0-of (c41-11 / post-01
                                     :mod (c41-7 / publication
                                                 :name (c41-4 / name
                                                              :op1 "TSB"))))
       :ARG1-of (c41-8 / cause-01
                       :ARG0 (c41-2 / and
                                    :op1 (c41-3 / encontros
                                                :mod (c41-12 / dele))
                                    :op2 (c41-9 / desafeto
                                                :mod c41-12
                                                :mod (c41-6 / kkkkk
                                                            :mode expressive)))))

# ::snt O fez a melhor pessoa, morro de rir kkkkk
# ::tokens ["O", "fez", "a", "melhor", "pessoa", ",", "morro", "de", "rir", "kkkkk"]
# ::lemmas ["o", "fez", "a", "melhor", "pessoa", ",", "morro", "de", "rir", "kkkkk"]
(c42-1 / multi-sentence
       :snt1 (c42-0 / fez
                    :mod (c42-5 / pessoa)
                    :mode expressive)
       :snt2 (c42-4 / morro
                    :mod (c42-2 / person
                                :name (c42-3 / name
                                             :op1 "Rir"))
                    :mode expressive))

# ::snt J assisti todas as temporadas, mais de uma vz e morro de rir sempre rsss
# ::tokens ["J", "assisti", "todas", "as", "temporadas", ",", "mais", "de", "uma", "vz", "e", "morro", "de", "rir", "sempre", "rsss"]
# ::lemmas ["J", "assisti", "todas", "as", "temporada", ",", "mais", "de", "uma", "vz", "e", "morro", "de", "rir", "sempre", "rsss"]
(c43-2 / multi-sentence
       :snt1 (c43-11 / assist-01
                     :ARG0 (c43-7 / person)
                     :ARG1 (c43-3 / person
                                  :name (c43-1 / name
                                               :op1 "J"))
                     :prep-as (c43-9 / temporada))
       :snt2 (c43-14 / possible-01
                     :ARG1 (c43-10 / and
                                   :op1 (c43-0 / uma)
                                   :op2 (c43-6 / morro
                                               :mod (c43-12 / de-rir))
                                   :op3 (c43-8 / person
                                               :ARG0-of (c43-5 / rape-01))
                                   :mod (c43-4 / sempre))
                     :ARG1-of (c43-13 / request-confirmation-91)))

# ::snt jackie voice: MICHAEL
# ::tokens ["jackie", "voice", ":", "MICHAEL"]
# ::lemmas ["jackie", "voice", ":", "MICHAEL"]
(c44-1 / voice-01
       :ARG0 (c44-3 / person
                    :name (c44-0 / name
                                 :op1 "Michael"))
       :mod (c44-2 / jackie))

# ::snt As me tiene
# ::tokens ["As", "me", "tiene"]
# ::lemmas ["as", "i", "tiene"]
(c45-0 / resemble-01
       :ARG2 (c45-1 / i))

# ::snt Rico
# ::tokens ["Rico"]
# ::lemmas ["Rico"]
(c46-1 / person
       :name (c46-0 / name
                    :op1 "Rico"))

# ::snt Kelso
# ::tokens ["Kelso"]
# ::lemmas ["kelso"]
(c47-1 / person
       :name (c47-0 / name
                    :op1 "Kelso"))

# ::snt personally think i would look great in donnas clothes
# ::tokens ["personally", "think", "i", "would", "look", "great", "in", "donnas", "clothes"]
# ::lemmas ["personally", "think", "i", "would", "look", "great", "in", "donnas", "clothe"]
(c48-4 / think-01
       :ARG0 (c48-3 / i)
       :ARG1 (c48-0 / look-02
                    :ARG0 c48-3
                    :ARG1 (c48-5 / great)
                    :ARG2 (c48-2 / clothes
                                 :poss (c48-6 / donnas)))
       :ARG1-of (c48-1 / personal-02))

# ::snt Need to see u in a fez lewk
# ::tokens ["Need", "to", "see", "u", "in", "a", "fez", "lewk"]
# ::lemmas ["need", "to", "see", "u", "in", "a", "fez", "lewk"]
(c49-2 / need-01
       :ARG0 (c49-5 / i)
       :ARG1 (c49-3 / see-01
                    :ARG0 c49-5
                    :ARG1 (c49-1 / you)
                    :time (c49-4 / lewk
                                 :mod (c49-0 / fez))))

# ::snt iFanboy was a daycare essentially.
# ::tokens ["iFanboy", "was", "a", "daycare", "essentially", "."]
# ::lemmas ["iFanboy", "be", "a", "daycare", "essentially", "."]
(c50-0 / daycare
       :domain (c50-2 / product
                      :name (c50-1 / name
                                   :op1 "iFanboy"))
       :mod (c50-3 / essential))
