# ::snt e meu tambmo presente foi o jogo de ontem
# ::tokens ["e", "meu", "tambmo", "presente", "foi", "o", "jogo", "de", "ontem"]
# ::lemmas ["e", "meu", "tambmo", "presente", "foi", "o", "jogo", "de", "ontem"]
(c1-1 / multi-sentence
      :snt1 (c1-3 / meu)
      :snt2 (c1-4 / present-02
                  :ARG1 (c1-2 / possible-01
                              :ARG1 (c1-5 / laugh-01
                                          :ARG0 (c1-7 / i)
                                          :manner (c1-8 / loud))
                              :snt3-of c1-1))
      :ARG1 (c1-6 / jogo
                  :poss (c1-0 / ontem)))

# ::snt So?
# ::tokens ["So", "?"]
# ::lemmas ["so", "?"]
(c3-1 / so
      :polarity (c3-0 / amr-unknown))

# ::snt Happy Birthday
# ::tokens ["Happy", "Birthday"]
# ::lemmas ["Happy", "Birthday"]
(c4-0 / birthday
      :ARG1-of (c4-1 / happy-02))

# ::snt Thank you.
# ::tokens ["Thank", "you", "."]
# ::lemmas ["thank", "you", "."]
(c5-2 / thank-01
      :ARG0 (c5-1 / i)
      :ARG1 (c5-0 / you))

# ::snt Thank you very much
# ::tokens ["Thank", "you", "very", "much"]
# ::lemmas ["thank", "you", "very", "much"]
(c6-4 / thank-01
      :ARG0 (c6-3 / i)
      :ARG1 (c6-0 / you)
      :mod (c6-1 / much
                 :degree (c6-2 / very)))

# ::snt Happy Birthday!! Hope you are having a fantastic day!!
# ::tokens ["Happy", "Birthday", "!", "!", "Hope", "you", "are", "having", "a", "fantastic", "day", "!", "!"]
# ::lemmas ["Happy", "Birthday", "!", "!", "hope", "you", "be", "have", "a", "fantastic", "day", "!", "!"]
(c7-3 / multi-sentence
      :snt1 (c7-5 / happy-01
                  :ARG1 (c7-1 / birthday))
      :snt2 (c7-6 / hope-01
                  :ARG0 (c7-7 / i)
                  :ARG1 (c7-4 / have-03
                              :ARG0 (c7-2 / you)
                              :ARG1 (c7-8 / day
                                          :ARG1-of (c7-0 / fantastic-02)))))

# ::snt No problem. And thank you
# ::tokens ["No", "problem", ".", "And", "thank", "you"]
# ::lemmas ["no", "problem", ".", "and", "thank", "you"]
(c8-1 / multi-sentence
      :snt1 (c8-3 / problem
                  :polarity -)
      :snt2 (c8-2 / and
                  :op2 (c8-4 / thank-01
                             :ARG1 (c8-0 / you))))

# ::snt Yeah, thats my bad. Im GIF addict. I hope today has been awesome.
# ::tokens ["Yeah", ",", "that", "s", "my", "bad", ".", "I", "m", "GIF", "addict", ".", "I", "hope", "today", "has", "been", "awesome", "."]
# ::lemmas ["yeah", ",", "that", "s", "my", "bad", ".", "i", "m", "GIF", "addict", ".", "i", "hope", "today", "have", "be", "awesome", "."]
(c9-2 / multi-sentence
      :snt1 (c9-0 / bad-07
                  :ARG1 (c9-8 / i)
                  :ARG2 (c9-9 / that)
                  :mod (c9-1 / yeah
                             :mode expressive))
      :snt2 (c9-5 / addict-01
                  :ARG1 (c9-4 / i)
                  :ARG2 (c9-7 / product
                              :name (c9-3 / name
                                          :op1 " GIF")))
      :snt3 (c9-6 / hope-01
                  :ARG0 (c9-11 / i)
                  :ARG1 (c9-10 / awesome-02
                               :ARG1 (c9-12 / today))))

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c10-2 / thank-01
       :ARG0 (c10-1 / i)
       :ARG1 (c10-0 / you))

# ::snt Happy Birthday!
# ::tokens ["Happy", "Birthday", "!"]
# ::lemmas ["Happy", "Birthday", "!"]
(c11-1 / happy-01
       :ARG1 (c11-0 / birthday))

# ::snt Thanks very appreciated.
# ::tokens ["Thanks", "very", "appreciated", "."]
# ::lemmas ["thank", "very", "appreciated", "."]
(c12-2 / thank-01
       :ARG1 (c12-1 / you)
       :degree (c12-0 / very))

# ::snt Thank you. Very appreciated
# ::tokens ["Thank", "you", ".", "Very", "appreciated"]
# ::lemmas ["thank", "you", ".", "very", "appreciated"]
(c13-1 / multi-sentence
       :snt1 (c13-3 / thank-01
                    :ARG1 (c13-0 / you))
       :snt2 (c13-4 / appreciate-02
                    :degree (c13-2 / very)))

# ::snt Happy Birthday, my man!
# ::tokens ["Happy", "Birthday", ",", "my", "man", "!"]
# ::lemmas ["Happy", "Birthday", ",", "my", "man", "!"]
(c14-2 / say-01
       :ARG1 (c14-3 / happy-01
                    :ARG1 (c14-0 / birthday
                                 :poss (c14-1 / man
                                              :poss (c14-4 / i)
                                              :ARG2-of c14-2)))
       :mode expressive)

# ::snt Thank you
# ::tokens ["Thank", "you"]
# ::lemmas ["thank", "you"]
(c15-2 / thank-01
       :ARG0 (c15-1 / i)
       :ARG1 (c15-0 / you))

# ::snt Thanks
# ::tokens ["Thanks"]
# ::lemmas ["thank"]
(c16-2 / thank-01
       :ARG0 (c16-1 / i)
       :ARG1 (c16-0 / you))

# ::snt Happy birthday buddy
# ::tokens ["Happy", "birthday", "buddy"]
# ::lemmas ["happy", "birthday", "buddy"]
(c17-3 / say-01
       :ARG1 (c17-1 / happy-01
                    :ARG1 (c17-0 / birthday))
       :ARG2 (c17-2 / buddy))

# ::snt Happy birthday man!
# ::tokens ["Happy", "birthday", "man", "!"]
# ::lemmas ["happy", "birthday", "man", "!"]
(c18-3 / say-01
       :ARG1 (c18-1 / happy-01
                    :ARG1 (c18-0 / birthday))
       :ARG2 (c18-2 / man)
       :mode expressive)

# ::snt Im going to assume that either a birthday cake or something saying happy birthday. So thank you very much
# ::tokens ["I", "m", "going", "to", "assume", "that", "either", "a", "birthday", "cake", "or", "something", "saying", "happy", "birthday", ".", "So", "thank", "you", "very", "much"]
# ::lemmas ["i", "m", "go", "to", "assume", "that", "either", "a", "birthday", "cake", "or", "something", "say", "happy", "birthday", ".", "so", "thank", "you", "very", "much"]
(c19-4 / multi-sentence
       :snt1 (c19-13 / assume-02
                     :ARG0 (c19-12 / i)
                     :ARG1 (c19-0 / or
                                  :op1 (c19-10 / cake
                                               :mod (c19-2 / birthday))
                                  :op2 (c19-5 / something
                                              :ARG0-of (c19-1 / say-01
                                                              :ARG1 (c19-7 / happy-01
                                                                           :ARG1 (c19-8 / birthday))))))
       :snt2 (c19-11 / thank-01
                     :ARG0 c19-12
                     :ARG1 (c19-3 / you)
                     :mod (c19-9 / much
                                 :degree (c19-6 / very))))

# ::snt Mission accomplished.
# ::tokens ["Mission", "accomplished", "."]
# ::lemmas ["mission", "accomplish", "."]
(c21-1 / accomplish-01
       :ARG1 (c21-0 / mission-01))

# ::snt Budista
# ::tokens ["Budista"]
# ::lemmas ["Budista"]
(c22-1 / person
       :name (c22-0 / name
                    :op1 "Budista"))

# ::snt Blockbuster At least you had your moment.
# ::tokens ["Blockbuster", "At", "least", "you", "had", "your", "moment", "."]
# ::lemmas ["Blockbuster", "at", "least", "you", "have", "your", "moment", "."]
(c23-6 / and
       :op1 (c23-3 / store
                   :name (c23-1 / name
                                :op1 "Blockbuster"))
       :op2 (c23-4 / have-03
                   :ARG0 (c23-0 / you)
                   :ARG1 (c23-2 / moment
                                :poss c23-0)
                   :mod (c23-5 / at-least)))

# ::snt I never really get any new films to subtitle so if I wanted to watch them I probably already had This is probably the most memorable one. And the butterfly effect.
# ::tokens ["I", "never", "really", "get", "any", "new", "films", "to", "subtitle", "so", "if", "I", "wanted", "to", "watch", "them", "I", "probably", "already", "had", "This", "is", "probably", "the", "most", "memorable", "one", ".", "And", "the", "butterfly", "effect", "."]
# ::lemmas ["i", "never", "really", "get", "any", "new", "film", "to", "subtitle", "so", "if", "i", "want", "to", "watch", "they", "i", "probably", "already", "have", "this", "be", "probably", "the", "most", "memorable", "one", ".", "and", "the", "butterfly", "effect", "."]
(c24-10 / multi-sentence
        :snt1 (c24-12 / cause-01
                      :ARG0 (c24-7 / get-01
                                   :ARG0 (c24-21 / i)
                                   :ARG1 (c24-14 / film
                                                 :ARG1-of (c24-15 / new-01)
                                                 :quant (c24-6 / any))
                                   :time (c24-17 / ever)
                                   :ARG1-of (c24-16 / real-04)
                                   :polarity -)
                      :ARG1 (c24-18 / probable
                                    :domain (c24-2 / have-03
                                                   :ARG0 c24-21
                                                   :ARG1 (c24-1 / one
                                                                :mod (c24-5 / this)
                                                                :ARG1-of (c24-20 / have-degree-91
                                                                                 :ARG2 (c24-3 / memorable)
                                                                                 :ARG3 (c24-13 / most)
                                                                                 :mod (c24-11 / probable)))
                                                   :time (c24-4 / already)
                                                   :condition (c24-19 / want-01
                                                                      :ARG0 c24-21
                                                                      :ARG1 (c24-0 / watch-01
                                                                                   :ARG0 c24-21
                                                                                   :ARG1 c24-14)))))
        :snt2 (c24-8 / effect-03
                     :ARG1 (c24-9 / butterfly)))

# ::snt Genius at work
# ::tokens ["Genius", "at", "work"]
# ::lemmas ["genius", "at", "work"]
(c25-0 / genius
       :location (c25-1 / work-01))

# ::snt Pretty woman? lmao you didnt know the name?
# ::tokens ["Pretty", "woman", "?", "lmao", "you", "did", "nt", "know", "the", "name", "?"]
# ::lemmas ["pretty", "woman", "?", "lmao", "you", "do", "not", "know", "the", "name", "?"]
(c26-2 / multi-sentence
       :snt1 (c26-6 / woman
                    :mod (c26-5 / pretty)
                    :polarity (c26-9 / amr-unknown))
       :snt2 (c26-4 / know-01
                    :ARG0 (c26-1 / you)
                    :ARG1 (c26-7 / thing
                                 :ARG2-of (c26-3 / name-01))
                    :polarity (c26-8 / amr-unknown)
                    :mod (c26-0 / fucking
                                :mode expressive)
                    :polarity -))

# ::snt Je suis bien d'accord avec toi Richard une lgende
# ::tokens ["Je", "suis", "bien", "d'accord", "avec", "toi", "Richard", "une", "lgende"]
# ::lemmas ["Je", "suis", "bien", "d'accord", "avec", "toi", "Richard", "une", "lgende"]
(c27-0 / bien-de-accord
       :ARG1-of (c27-3 / compare-01
                       :ARG2 (c27-2 / person
                                    :name (c27-1 / name
                                                 :op1 "Richard")
                                    :mod (c27-4 / une
                                                :op1 "Lgende")))
       :mode expressive)

# ::snt C'est le patron, lui !
# ::tokens ["C'est", "le", "patron", ",", "lui", "!"]
# ::lemmas ["c'", "le", "patron", ",", "lui", "!"]
(c28-1 / say-01
       :ARG0 (c28-4 / i)
       :ARG1 (c28-3 / patronize-01
                    :ARG0 (c28-2 / lui)
                    :ARG1-of (c28-0 / possible-01))
       :ARG2 c28-2)

# ::snt Oui mais dans c'est pas pareil, il me fait moins rver il dit toujours la mme chose
# ::tokens ["Oui", "mais", "dans", "c'est", "pas", "pareil", ",", "il", "me", "fait", "moins", "rver", "il", "dit", "toujours", "la", "mme", "chose"]
# ::lemmas ["Oui", "mais", "dan", "c'", "pas", "pareil", ",", "il", "me", "fait", "moin", "rver", "il", "dit", "toujour", "la", "mme", "choose"]
(c29-3 / multi-sentence
       :snt1 (c29-4 / say-01
                    :ARG0 (c29-12 / i)
                    :ARG1 (c29-7 / have-polarity-91
                                 :ARG1 (c29-0 / sense-02
                                              :ARG1 (c29-8 / pareil))
                                 :mod (c29-15 / ui)
                                 :ARG2 -))
       :snt2 (c29-13 / and
                     :op1 (c29-1 / fait-00
                                 :ARG0 (c29-5 / i))
                     :op2 (c29-9 / make-02
                                 :ARG0 (c29-14 / il)
                                 :ARG1 (c29-10 / laugh-01
                                               :ARG0 c29-5))
                     :op3 (c29-6 / et-cetera)
                     :op4 (c29-11 / choose-01
                                  :ARG0 (c29-2 / i))))

# ::snt Et de !
# ::tokens ["Et", "de", "!"]
# ::lemmas ["Et", "de", "!"]
(c30-0 / et-de
       :mode expressive)

# ::snt meu eterno crush
# ::tokens ["meu", "eterno", "crush"]
# ::lemmas ["meu", "eterno", "crush"]
(c31-0 / crush-01
       :mod (c31-1 / eterno)
       :mod (c31-2 / meu))

# ::snt Gato!
# ::tokens ["Gato", "!"]
# ::lemmas ["Gato", "!"]
(c32-0 / gato
       :mode expressive)

# ::snt Que paizo gzuiiissss
# ::tokens ["Que", "paizo", "gzuiiissss"]
# ::lemmas ["Que", "paizo", "gzuiiissss"]
(c33-0 / amr-unintelligible
       :value "Que paizo gzuiiissss")

# ::snt Amazing
# ::tokens ["Amazing"]
# ::lemmas ["amazing"]
(c34-0 / amaze-01)

# ::snt Sorry, but he has no business looking like Roger Waters like that..
# ::tokens ["Sorry", ",", "but", "he", "has", "no", "business", "looking", "like", "Roger", "Waters", "like", "that", ".."]
# ::lemmas ["sorry", ",", "but", "he", "have", "no", "business", "look", "like", "Roger", "Waters", "like", "that", ".."]
(c35-7 / contrast-01
       :ARG1 (c35-2 / sorry-01)
       :ARG2 (c35-4 / have-03
                    :ARG0 (c35-8 / he)
                    :ARG1 (c35-0 / business
                                 :topic (c35-5 / look-02
                                               :ARG0 c35-8
                                               :ARG1 (c35-6 / person
                                                            :name (c35-1 / name
                                                                         :op1 "Roger"
                                                                         :op2 "Waters"))
                                               :ARG2 (c35-3 / resemble-01
                                                            :ARG1 c35-8
                                                            :ARG2 (c35-9 / that))))
                    :polarity -))

# ::snt Oh, my ! We're the same age!
# ::tokens ["Oh", ",", "my", "!", "We", "'re", "the", "same", "age", "!"]
# ::lemmas ["oh", ",", "my", "!", "we", "be", "the", "same", "age", "!"]
(c36-1 / multi-sentence
       :snt1 (c36-0 / oh
                    :mod (c36-4 / i)
                    :mode expressive)
       :snt2 (c36-2 / same-01
                    :ARG1 (c36-3 / we)
                    :ARG2 (c36-5 / temporal-quantity
                                 :age-of c36-3)))

# ::snt O Alex, na verdadeTomado banho deve ser uma gracinha kkkkkkk(O Kevin muito amor)
# ::tokens ["O", "Alex", ",", "na", "verdadeTomado", "banho", "deve", "ser", "uma", "gracinha", "kkkkkkk(O", "Kevin", "muito", "amor", ")"]
# ::lemmas ["o", "Alex", ",", "na", "verdadeTomado", "banho", "deve", "ser", "uma", "gracinha", "kkkkkkk(O", "Kevin", "muito", "amor", ")"]
(c37-11 / multi-sentence
        :snt1 (c37-0 / say-01
                     :ARG0 (c37-19 / i)
                     :ARG1 (c37-17 / person
                                   :name (c37-16 / name
                                                 :op1 "Alex"))
                     :ARG2 (c37-12 / person
                                   :name (c37-13 / name
                                                 :op1 "Na"
                                                 :op2 "Verdade")))
        :snt2 (c37-4 / say-01
                     :ARG0 (c37-5 / i)
                     :ARG1 (c37-8 / and
                                  :op1 (c37-10 / banho
                                               :mod (c37-2 / person
                                                           :name (c37-18 / name
                                                                         :op1 "Tomado")))
                                  :op2 (c37-3 / ser-01
                                              :ARG1 (c37-15 / uma
                                                            :mod (c37-9 / gracinha
                                                                        :mod (c37-6 / kkkkkkkkkkkkkkk))))
                                  :ARG2 (c37-1 / person
                                               :name (c37-14 / name
                                                             :op1 "Kevin")
                                               :mod (c37-7 / amor)))))

# ::snt Eu ia no guitarrista da Tarja
# ::tokens ["Eu", "ia", "no", "guitarrista", "da", "Tarja"]
# ::lemmas ["Eu", "ia", "no", "guitarrista", "da", "Tarja"]
(c38-0 / guitarrista
       :name (c38-1 / name
                    :op1 "Eu"
                    :op2 "ia")
       :polarity -
       :mode expressive)

# ::snt HETERO
# ::tokens ["HETERO"]
# ::lemmas ["HETERO"]
(c39-0 / zero)

# ::snt Hahahahaha wala siyang fb?
# ::tokens ["Hahahahaha", "wala", "siyang", "fb", "?"]
# ::lemmas ["Hahahahaha", "wala", "siyang", "fb", "?"]
(c40-3 / laugh-01
       :ARG0 (c40-4 / i)
       :ARG2 (c40-2 / person
                    :name (c40-0 / name
                                 :op1 "fb"))
       :mod (c40-1 / haha
                   :mode expressive)
       :polarity (c40-5 / amr-unknown)
       :mode expressive)

# ::snt La paciencia siempre te hace coger buenos frutos. Tres aos hasta llegar a lo que ellos queran.
# ::tokens ["La", "paciencia", "siempre", "te", "hace", "coger", "buenos", "frutos", ".", "Tres", "aos", "hasta", "llegar", "a", "lo", "que", "ellos", "queran", "."]
# ::lemmas ["La", "paciencia", "siempre", "te", "hace", "coger", "buenos", "fruto", ".", "Tres", "aos", "hasta", "llegar", "a", "lo", "que", "ellos", "queran", "."]
(c41-2 / multi-sentence
       :snt1 (c41-4 / have-polarity-91
                    :ARG1 (c41-10 / hace-01
                                  :ARG0 (c41-8 / country
                                               :name (c41-1 / name
                                                            :op1 " paciencia"))
                                  :ARG1 (c41-16 / coger-00
                                                :ARG0 c41-8
                                                :ARG1 (c41-0 / frutos)))
                    :ARG1-of (c41-11 / cause-01
                                     :ARG0 (c41-13 / amr-unknown))
                    :ARG2 -)
       :snt2 (c41-3 / have-concession-91
                    :ARG1 (c41-15 / have-03
                                  :ARG0 (c41-9 / we)
                                  :ARG1 (c41-5 / llegar-00
                                               :ARG0 c41-9
                                               :ARG1 (c41-14 / lo
                                                             :ARG2-of (c41-12 / query-01
                                                                              :ARG0 (c41-6 / ellos))))
                                  :ARG2 (c41-7 / hasta))))

# ::snt Hahaha - age is definitely in the heart
# ::tokens ["Hahaha", "-", "age", "is", "definitely", "in", "the", "heart"]
# ::lemmas ["Hahaha", "-", "age", "be", "definitely", "in", "the", "heart"]
(c42-3 / age-01
       :location (c42-2 / heart)
       :mod (c42-1 / definite)
       :mod (c42-0 / haha
                   :mode expressive))

# ::snt You're still a youngster at Mike! :~)
# ::tokens ["You", "'re", "still", "a", "youngster", "at", "Mike", "!", ":", "~", ")"]
# ::lemmas ["you", "be", "still", "a", "youngster", "at", "Mike", "!", ":", "~", ")"]
(c43-1 / youngster
       :domain (c43-2 / person
                      :name (c43-0 / name
                                   :op1 "Mike"))
       :mod (c43-3 / still))

# ::snt This list makes me feel old. Edwin Moses is ?! And I had no idea that I was a year older than Debbie Gibson.
# ::tokens ["This", "list", "makes", "me", "feel", "old", ".", "Edwin", "Moses", "is", "?", "!", "And", "I", "had", "no", "idea", "that", "I", "was", "a", "year", "older", "than", "Debbie", "Gibson", "."]
# ::lemmas ["this", "list", "make", "i", "feel", "old", ".", "Edwin", "Moses", "be", "?", "!", "and", "i", "have", "no", "idea", "that", "i", "be", "a", "year", "old", "than", "Debbie", "Gibson", "."]
(c44-12 / multi-sentence
        :snt1 (c44-5 / make-02
                     :ARG0 (c44-0 / list-01
                                  :mod (c44-9 / this))
                     :ARG1 (c44-17 / feel-01
                                   :ARG0 (c44-21 / i)
                                   :ARG1 (c44-1 / old)))
        :snt2 (c44-8 / and
                     :op2 (c44-6 / have-mod-91
                                 :ARG1 (c44-19 / person
                                               :name (c44-18 / name
                                                             :op1 "Edwin"
                                                             :op2 "Moses"))
                                 :ARG2 (c44-7 / amr-unknown))
                     :snt3 c44-8
                     :op2 (c44-20 / have-03
                                  :ARG0 (c44-3 / i)
                                  :ARG1 (c44-10 / idea
                                                :topic (c44-4 / have-degree-91
                                                              :ARG1 c44-3
                                                              :ARG2 (c44-11 / old)
                                                              :ARG3 (c44-16 / more
                                                                            :quant (c44-15 / temporal-quantity
                                                                                           :unit (c44-2 / year)
                                                                                           :quant 1))
                                                              :ARG4 (c44-13 / person
                                                                            :name (c44-14 / name
                                                                                          :op1 "Debbie"
                                                                                          :op2 "Gibson"))))
                                  :polarity -)))

# ::snt Well, that was kind of a downer...not the happiest of endings! Yet, still a worthy movie and great beach scenery!
# ::tokens ["Well", ",", "that", "was", "kind", "of", "a", "downer", "...", "not", "the", "happiest", "of", "endings", "!", "Yet", ",", "still", "a", "worthy", "movie", "and", "great", "beach", "scenery", "!"]
# ::lemmas ["well", ",", "that", "be", "kind", "of", "a", "downer", "...", "not", "the", "happy", "of", "ending", "!", "yet", ",", "still", "a", "worthy", "movie", "and", "great", "beach", "scenery", "!"]
(c46-2 / multi-sentence
       :snt1 (c46-16 / down-03
                     :ARG1 (c46-14 / that)
                     :degree (c46-7 / kind-of)
                     :ARG1-of (c46-6 / mean-01
                                     :ARG2 (c46-8 / happy-01
                                                  :ARG0 (c46-5 / end-01)
                                                  :ARG2-of (c46-13 / have-degree-91
                                                                   :ARG1 c46-5
                                                                   :ARG3 (c46-17 / most))
                                                  :polarity -))
                     :mod (c46-11 / well))
       :snt2 (c46-9 / have-concession-91
                    :ARG1 (c46-4 / and
                                 :op1 (c46-10 / movie
                                              :ARG0-of (c46-12 / deserve-01))
                                 :op2 (c46-3 / scenery
                                             :mod (c46-1 / beach)
                                             :mod (c46-15 / great))
                                 :mod (c46-0 / still))))

# ::snt Quando ero piccola pensavo proprio che stessero assieme
# ::tokens ["Quando", "ero", "piccola", "pensavo", "proprio", "che", "stessero", "assieme"]
# ::lemmas ["Quando", "ero", "piccola", "pensavo", "proprio", "che", "stessero", "assieme"]
(c47-0 / multi-sentence
       :snt1 (c47-6 / quando
                    :ARG1 (c47-5 / i)
                    :ARG2 (c47-3 / piccola))
       :snt2 (c47-4 / come-03
                    :ARG1 c47-5
                    :ARG2 (c47-1 / pensavo
                                 :mod (c47-7 / proprio
                                             :mode expressive)))
       :snt3 (c47-2 / stessero
                    :mode expressive))

# ::snt l'altro film che adoro in assoluto BRIDGET JONES
# ::tokens ["l'altro", "film", "che", "adoro", "in", "assoluto", "BRIDGET", "JONES"]
# ::lemmas ["l'altro", "film", "che", "adoro", "in", "assoluto", "BRIDGET", "JONES"]
(c49-1 / multi-sentence
       :snt1 (c49-0 / film
                    :mod (c49-6 / al-altro))
       :snt2 (c49-5 / adoro
                    :prep-in (c49-4 / assoluto
                                    :mode expressive)
                    :beneficiary (c49-3 / person
                                        :name (c49-2 / name
                                                     :op1 "BRIDGET"
                                                     :op2 "JONES"))))

# ::snt Amavo anch'io questo film!
# ::tokens ["Amavo", "anch'io", "questo", "film", "!"]
# ::lemmas ["Amavo", "anch'io", "questo", "film", "!"]
(c50-0 / film
       :mod (c50-2 / questo)
       :mod (c50-3 / amavo
                   :op1 (c50-1 / anch'io))
       :mode expressive)
