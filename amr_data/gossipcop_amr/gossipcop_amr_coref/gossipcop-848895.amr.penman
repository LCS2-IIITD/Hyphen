# ::snt Whoever got Seacrest in Idol and Kelly Ripa show in ABC should run the country.
# ::tokens ["Whoever", "got", "Seacrest", "in", "Idol", "and", "Kelly", "Ripa", "show", "in", "ABC", "should", "run", "the", "country", "."]
# ::lemmas ["whoever", "get", "Seacrest", "in", "Idol", "and", "Kelly", "Ripa", "show", "in", "ABC", "should", "run", "the", "country", "."]
(c1-3 / recommend-01
      :ARG1 (c1-13 / run-01
                   :ARG0 (c1-5 / person
                               :mod (c1-11 / any)
                               :ARG0-of (c1-12 / get-02
                                               :ARG1 (c1-10 / and
                                                            :op1 (c1-1 / broadcast-program
                                                                       :name (c1-2 / name
                                                                                   :op1 "Seacrest")
                                                                       :medium (c1-4 / broadcast-program
                                                                                     :name (c1-6 / name
                                                                                                 :op1 "Idol")))
                                                            :op2 (c1-14 / broadcast-program
                                                                        :name (c1-7 / name
                                                                                    :op1 "Kelly"
                                                                                    :op2 "Ripa")
                                                                        :medium (c1-0 / broadcast-program
                                                                                      :name (c1-9 / name
                                                                                                  :op1 "ABC"))))))
                   :ARG1 (c1-8 / country)))

# ::snt yeah ok
# ::tokens ["yeah", "ok"]
# ::lemmas ["yeah", "ok"]
(c3-0 / okay-01
      :mod (c3-1 / yeah))

# ::snt He can be the host.
# ::tokens ["He", "can", "be", "the", "host", "."]
# ::lemmas ["he", "can", "be", "the", "host", "."]
(c4-2 / possible-01
      :ARG1 (c4-1 / host-01
                  :ARG0 (c4-0 / he)))

# ::snt Why the hell and don't bring stupid Ryan again, he's boring I'm not watching that shit again
# ::tokens ["Why", "the", "hell", "and", "do", "n't", "bring", "stupid", "Ryan", "again", ",", "he", "'s", "boring", "I", "'m", "not", "watching", "that", "shit", "again"]
# ::lemmas ["why", "the", "hell", "and", "do", "not", "bring", "stupid", "Ryan", "again", ",", "he", "be", "boring", "i", "be", "not", "watch", "that", "shit", "again"]
(c5-8 / cause-01
      :ARG0 (c5-14 / amr-unknown
                   :mod (c5-5 / hell))
      :ARG1 (c5-1 / bring-01
                  :ARG0 (c5-2 / you)
                  :ARG1 (c5-6 / person
                              :name (c5-3 / name
                                          :op1 "Ryan")
                              :mod (c5-4 / stupid))
                  :mod (c5-13 / again)
                  :ARG1-of (c5-16 / cause-01
                                  :ARG0 (c5-7 / bore-02
                                              :ARG0 c5-6))
                  :polarity -
                  :mode imperative)
      :ARG1-of (c5-11 / cause-01
                      :ARG0 (c5-9 / watch-01
                                  :ARG0 (c5-15 / i)
                                  :ARG1 (c5-0 / shit
                                              :mod (c5-12 / that))
                                  :mod (c5-10 / again)
                                  :polarity -)))

# ::snt What about Stephen A. Smith?
# ::tokens ["What", "about", "Stephen", "A.", "Smith", "?"]
# ::lemmas ["what", "about", "Stephen", "A.", "Smith", "?"]
(c6-2 / amr-unknown
      :topic (c6-1 / person
                   :name (c6-0 / name
                               :op1 "Stephen"
                               :op2 "A."
                               :op3 "Smith")))

# ::snt Like the lyrics to frozen, "let it go."
# ::tokens ["Like", "the", "lyrics", "to", "frozen", ",", "\"", "let", "it", "go", ".", "\""]
# ::lemmas ["like", "the", "lyric", "to", "frozen", ",", "\"", "let", "it", "go", ".", "\""]
(c7-1 / resemble-01
      :ARG1 (c7-2 / lyric
                  :topic (c7-5 / let-01
                               :ARG1 (c7-4 / go-01
                                           :ARG1 (c7-3 / it)))
                  :ARG1-of (c7-0 / freeze-01)))

# ::snt What's coming back?
# ::tokens ["What", "'s", "coming", "back", "?"]
# ::lemmas ["what", "be", "come", "back", "?"]
(c8-0 / come-01
      :ARG1 (c8-2 / amr-unknown)
      :direction (c8-1 / back))

# ::snt Omg why!? This show was over years ago why bring it back??? So dumb!
# ::tokens ["Omg", "why", "!", "?", "This", "show", "was", "over", "years", "ago", "why", "bring", "it", "back", "?", "?", "?", "So", "dumb", "!"]
# ::lemmas ["omg", "why", "!", "?", "this", "show", "be", "over", "years", "ago", "why", "bring", "it", "back", "?", "?", "?", "so", "dumb", "!"]
(c9-4 / multi-sentence
      :snt1 (c9-9 / cause-01
                  :ARG0 (c9-12 / amr-unknown)
                  :mod (c9-0 / oh-my-god
                             :mode expressive))
      :snt2 (c9-2 / bring-01
                  :ARG0 (c9-11 / amr-unknown)
                  :ARG1 (c9-6 / show-04
                              :mod (c9-10 / this))
                  :direction (c9-8 / back)
                  :time (c9-15 / before
                               :op1 (c9-5 / now)
                               :quant (c9-1 / over
                                            :op1 (c9-14 / temporal-quantity
                                                        :unit (c9-3 / year)
                                                        :quant 1))))
      :snt3 (c9-13 / dumb
                   :degree (c9-7 / so)))

# ::snt looks so much fun looks less drama looks much diverse on the other hand American Idol is lame nd boring
# ::tokens ["looks", "so", "much", "fun", "looks", "less", "drama", "looks", "much", "diverse", "on", "the", "other", "hand", "American", "Idol", "is", "lame", "nd", "boring"]
# ::lemmas ["look", "so", "much", "fun", "look", "less", "drama", "look", "much", "diverse", "on", "the", "other", "hand", "American", "Idol", "be", "lame", "nd", "bore"]
(c10-12 / contrast-01
        :ARG1 (c10-8 / and
                     :op1 (c10-2 / look-02
                                 :ARG1 (c10-15 / fun-01
                                               :ARG1-of (c10-4 / have-quant-91
                                                               :ARG2 (c10-11 / much)
                                                               :ARG3 (c10-0 / so))))
                     :op2 (c10-9 / look-02
                                 :ARG1 (c10-18 / drama
                                               :ARG1-of (c10-17 / have-quant-91
                                                                :ARG3 (c10-5 / less)))
                                 :ARG2 (c10-13 / diverse
                                               :ARG2-of (c10-3 / have-degree-91
                                                               :ARG1 c10-18
                                                               :ARG3 (c10-6 / much)))))
        :ARG2 (c10-7 / and
                     :op1 (c10-14 / lame
                                  :domain (c10-10 / broadcast-program
                                                  :name (c10-16 / name
                                                                :op1 "American"
                                                                :op2 "Idol")))
                     :op2 (c10-1 / bore-02
                                 :ARG0 c10-10)))

# ::snt i agreed with you
# ::tokens ["i", "agreed", "with", "you"]
# ::lemmas ["i", "agree", "with", "you"]
(c11-2 / agree-01
       :ARG0 (c11-1 / i)
       :ARG2 (c11-0 / you))

# ::snt Yas
# ::tokens ["Yas"]
# ::lemmas ["Yas"]
(c12-1 / person
       :name (c12-0 / name
                    :op1 "Yas"))

# ::snt Ohhh crap!!
# ::tokens ["Ohhh", "crap", "!", "!"]
# ::lemmas ["Ohhh", "crap", "!", "!"]
(c13-0 / crap-01
       :mod (c13-1 / oh
                   :mode expressive))

# ::snt Why?!?
# ::tokens ["Why", "?", "!", "?"]
# ::lemmas ["why", "?", "!", "?"]
(c14-0 / cause-01
       :ARG0 (c14-1 / amr-unknown))

# ::snt NOOOOOOO
# ::tokens ["NOOOOOOO"]
# ::lemmas ["NOOOOOOO"]
(c15-0 / no)

# ::snt BFD, the lame judges will ruin it like last time.
# ::tokens ["BFD", ",", "the", "lame", "judges", "will", "ruin", "it", "like", "last", "time", "."]
# ::lemmas ["BFD", ",", "the", "lame", "judge", "will", "ruin", "it", "like", "last", "time", "."]
(c16-1 / ruin-01
       :ARG0 (c16-2 / person
                    :ARG0-of (c16-5 / judge-01)
                    :mod (c16-3 / lame))
       :ARG1 (c16-6 / it)
       :ARG1-of (c16-8 / resemble-01
                       :ARG2 (c16-4 / ruin-01
                                    :ARG0 c16-2
                                    :ARG1 c16-6
                                    :time (c16-9 / last)))
       :mod (c16-7 / thing
                   :name (c16-0 / name
                                :op1 "BFD")))

# ::snt I'm sorry, I just don't care!
# ::tokens ["I", "'m", "sorry", ",", "I", "just", "do", "n't", "care", "!"]
# ::lemmas ["i", "be", "sorry", ",", "i", "just", "do", "not", "care", "!"]
(c18-4 / and
       :op1 (c18-0 / sorry-01
                   :ARG1 (c18-3 / i))
       :op2 (c18-1 / care-01
                   :ARG0 c18-3
                   :mod (c18-2 / just)
                   :polarity -))

# ::snt Jlo for SURE!!!!
# ::tokens ["Jlo", "for", "SURE", "!", "!", "!", "!"]
# ::lemmas ["Jlo", "for", "SURE", "!", "!", "!", "!"]
(c19-3 / sure-02
       :ARG0 (c19-2 / i)
       :ARG1 (c19-1 / person
                    :name (c19-0 / name
                                 :op1 "Jlo"))
       :mode expressive)

# ::snt I give it until Dec.1st.... Dead on arrival.
# ::tokens ["I", "give", "it", "until", "Dec.1st", "....", "Dead", "on", "arrival", "."]
# ::lemmas ["i", "give", "it", "until", "dec.1st", "....", "dead", "on", "arrival", "."]
(c21-0 / multi-sentence
       :snt1 (c21-6 / give-01
                    :ARG0 (c21-4 / i)
                    :ARG1 (c21-1 / it)
                    :time (c21-8 / until
                                 :op1 (c21-7 / date-entity
                                             :month 12
                                             :day 1)))
       :snt2 (c21-3 / die-01
                    :time (c21-5 / arrive-01
                                 :ARG1 (c21-2 / person))))

# ::snt Let's not bring down on this one..that guys an angel
# ::tokens ["Let", "'s", "not", "bring", "down", "on", "this", "one", "..", "that", "guys", "an", "angel"]
# ::lemmas ["let", "us", "not", "bring", "down", "on", "this", "one", "..", "that", "guy", "an", "angel"]
(c22-1 / bring-down-03
       :ARG0 (c22-4 / we)
       :ARG1 (c22-0 / one
                    :mod (c22-5 / this)
                    :ARG1-of (c22-2 / mean-01
                                    :ARG2 (c22-6 / guy
                                                 :mod (c22-7 / that)
                                                 :mod (c22-3 / angel))))
       :polarity -
       :mode imperative)

# ::snt Why though?!
# ::tokens ["Why", "though", "?", "!"]
# ::lemmas ["why", "though", "?", "!"]
(c23-0 / have-concession-91
       :ARG1 (c23-1 / amr-unknown))

# ::snt What about us Canadians! Not a great show but I would like to show off my talent and be the next William hung!
# ::tokens ["What", "about", "us", "Canadians", "!", "Not", "a", "great", "show", "but", "I", "would", "like", "to", "show", "off", "my", "talent", "and", "be", "the", "next", "William", "hung", "!"]
# ::lemmas ["what", "about", "we", "Canadians", "!", "not", "a", "great", "show", "but", "i", "would", "like", "to", "show", "off", "my", "talent", "and", "be", "the", "next", "William", "hang", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-11 / amr-unknown
                     :topic (c24-7 / we
                                   :mod (c24-8 / country
                                               :name (c24-1 / name
                                                            :op1 "Canada"))))
       :snt2 (c24-14 / contrast-01
                     :ARG1 (c24-3 / show-04
                                  :mod (c24-12 / great)
                                  :polarity -)
                     :ARG2 (c24-5 / like-02
                                  :ARG0 (c24-10 / i)
                                  :ARG1 (c24-13 / and
                                                :op1 (c24-0 / show-04
                                                            :ARG0 c24-10
                                                            :ARG1 (c24-9 / talent
                                                                         :poss c24-10))
                                                :op2 (c24-4 / hang-01
                                                            :ARG1 c24-10
                                                            :mod (c24-6 / next))))))

# ::snt Do it girl!!
# ::tokens ["Do", "it", "girl", "!", "!"]
# ::lemmas ["do", "it", "girl", "!", "!"]
(c25-0 / say-01
       :ARG0 (c25-2 / i)
       :ARG1 (c25-4 / do-02
                    :ARG0 (c25-3 / girl)
                    :ARG1 (c25-1 / it)
                    :mode imperative)
       :ARG2 c25-3)

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c27-0 / cause-01
       :ARG0 (c27-1 / amr-unknown))

# ::snt Lemme audition really quick
# ::tokens ["Lemme", "audition", "really", "quick"]
# ::lemmas ["Lemme", "audition", "really", "quick"]
(c28-1 / easy-05
       :ARG1 (c28-3 / audition-01
                    :ARG0 (c28-2 / i))
       :degree (c28-0 / really))

# ::snt I'll only watch if Kanye West, Lavar Ball, and the catch me outside girl are judges.
# ::tokens ["I", "'ll", "only", "watch", "if", "Kanye", "West", ",", "Lavar", "Ball", ",", "and", "the", "catch", "me", "outside", "girl", "are", "judges", "."]
# ::lemmas ["i", "'ll", "only", "watch", "if", "Kanye", "West", ",", "Lavar", "Ball", ",", "and", "the", "catch", "i", "outside", "girl", "be", "judge", "."]
(c29-7 / watch-01
       :ARG0 (c29-10 / i)
       :ARG1 (c29-4 / have-condition-91
                    :ARG2 (c29-5 / person
                                 :ARG0-of (c29-9 / judge-01)
                                 :domain (c29-11 / and
                                                 :op1 (c29-3 / person
                                                             :name (c29-2 / name
                                                                          :op1 "Kanye"
                                                                          :op2 "West"))
                                                 :op2 (c29-13 / person
                                                              :name (c29-6 / name
                                                                           :op1 "Lavar"
                                                                           :op2 "Ball"))
                                                 :op3 (c29-8 / catch-01
                                                             :ARG0 (c29-12 / girl
                                                                           :location (c29-0 / outside))
                                                             :ARG1 c29-10))))
       :mod (c29-1 / only))

# ::snt Lmao they couldn't stay away
# ::tokens ["Lmao", "they", "could", "n't", "stay", "away"]
# ::lemmas ["Lmao", "they", "could", "not", "stay", "away"]
(c30-5 / and
       :op1 (c30-2 / laugh-01
                   :ARG0 (c30-4 / i)
                   :manner (c30-7 / loud)
                   :mode expressive)
       :op2 (c30-1 / possible-01
                   :ARG1 (c30-0 / stay-01
                                :ARG1 (c30-3 / they)
                                :ARG3 (c30-6 / away))
                   :polarity -))

# ::snt No ones care
# ::tokens ["No", "ones", "care"]
# ::lemmas ["no", "one", "care"]
(c31-0 / care-01
       :ARG0 (c31-1 / no-one))

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c33-0 / cause-01
       :ARG0 (c33-1 / amr-unknown))

# ::snt Oh God - here comes the judges drama again! Can't they just put that thing out to pasture for a while?
# ::tokens ["Oh", "God", "-", "here", "comes", "the", "judges", "drama", "again", "!", "Ca", "n't", "they", "just", "put", "that", "thing", "out", "to", "pasture", "for", "a", "while", "?"]
# ::lemmas ["oh", "God", "-", "here", "come", "the", "judge", "drama", "again", "!", "can", "not", "they", "just", "put", "that", "thing", "out", "to", "pasture", "for", "a", "while", "?"]
(c34-9 / multi-sentence
       :snt1 (c34-11 / come-01
                     :ARG1 (c34-18 / drama
                                   :mod (c34-14 / person
                                                :ARG0-of (c34-3 / have-org-role-91
                                                                :ARG3 (c34-4 / judge-01))))
                     :ARG4 (c34-16 / here)
                     :mod (c34-7 / again)
                     :mod (c34-2 / oh
                                 :mode expressive))
       :snt2 (c34-10 / possible-01
                     :ARG1 (c34-1 / put-01
                                  :ARG0 (c34-6 / they)
                                  :ARG1 (c34-12 / thing
                                                :mod (c34-17 / that))
                                  :ARG2 (c34-8 / out-06
                                               :ARG1 c34-12
                                               :ARG2 (c34-0 / pasture)
                                               :duration (c34-15 / while))
                                  :mod (c34-13 / just))
                     :polarity (c34-5 / amr-unknown)
                     :polarity -))

# ::snt Awesome, yet another job for Ryan seacrest while rest of America is trying to find ONE job.
# ::tokens ["Awesome", ",", "yet", "another", "job", "for", "Ryan", "seacrest", "while", "rest", "of", "America", "is", "trying", "to", "find", "ONE", "job", "."]
# ::lemmas ["Awesome", ",", "yet", "another", "job", "for", "Ryan", "seacr", "while", "rest", "of", "America", "be", "try", "to", "find", "ONE", "job", "."]
(c36-7 / job
       :beneficiary (c36-5 / person
                           :name (c36-2 / name
                                        :op1 "Ryan"
                                        :op2 "Seacrest"))
       :mod (c36-9 / another
                   :mod (c36-1 / yet))
       :ARG0-of (c36-8 / awe-01)
       :time (c36-10 / try-01
                     :ARG0 (c36-3 / rest
                                  :part-of (c36-6 / country
                                                  :name (c36-4 / name
                                                               :op1 "America")))
                     :ARG1 (c36-0 / find-01
                                  :ARG0 c36-3
                                  :ARG1 (c36-11 / job
                                                :quant 1))))

# ::snt But why???
# ::tokens ["But", "why", "?", "?", "?"]
# ::lemmas ["but", "why", "?", "?", "?"]
(c37-0 / contrast-01
       :ARG2 (c37-1 / cause-01
                    :ARG0 (c37-2 / amr-unknown)))

# ::snt prefer not it all went down hill after simon left and ratings went down so why? If so better be good chosen singers!!
# ::tokens ["prefer", "not", "it", "all", "went", "down", "hill", "after", "simon", "left", "and", "ratings", "went", "down", "so", "why", "?", "If", "so", "better", "be", "good", "chosen", "singers", "!", "!"]
# ::lemmas ["prefer", "not", "it", "all", "go", "down", "hill", "after", "simon", "leave", "and", "rating", "go", "down", "so", "why", "?", "if", "so", "well", "be", "good", "choose", "singer", "!", "!"]
(c38-16 / multi-sentence
        :snt1 (c38-23 / prefer-01
                      :ARG0 (c38-7 / you)
                      :ARG1 (c38-13 / and
                                    :op1 (c38-14 / go-01
                                                 :ARG1 (c38-25 / it
                                                               :mod (c38-12 / all))
                                                 :ARG2 (c38-9 / hill)
                                                 :direction (c38-21 / down)
                                                 :time (c38-11 / after
                                                               :op1 (c38-1 / leave-11
                                                                           :ARG0 (c38-17 / person
                                                                                         :name (c38-20 / name
                                                                                                       :op1 "Simon")))))
                                    :op2 (c38-3 / go-01
                                                :ARG1 (c38-22 / rate-01)
                                                :direction (c38-19 / down))
                                    :ARG0-of (c38-18 / cause-01
                                                     :ARG1-of (c38-15 / cause-01
                                                                      :ARG0 (c38-26 / amr-unknown))))
                      :polarity -)
        :snt2 (c38-24 / have-condition-91
                      :ARG1 (c38-8 / have-degree-91
                                   :ARG1 (c38-4 / person
                                                :ARG0-of (c38-0 / sing-01)
                                                :ARG1-of (c38-2 / choose-01)
                                                :ARG1-of (c38-5 / good-02
                                                                :ARG2-of c38-8)))
                      :ARG3 (c38-10 / more))
        :ARG2 (c38-6 / so))

# ::snt WHY?!!!!!
# ::tokens ["WHY", "?", "!", "!", "!", "!", "!"]
# ::lemmas ["why", "?", "!", "!", "!", "!", "!"]
(c39-0 / cause-01
       :ARG0 (c39-1 / amr-unknown))

# ::snt Why? The show's ratings tanked year after year. How is returning to a different network going to help it?
# ::tokens ["Why", "?", "The", "show", "'s", "ratings", "tanked", "year", "after", "year", ".", "How", "is", "returning", "to", "a", "different", "network", "going", "to", "help", "it", "?"]
# ::lemmas ["why", "?", "the", "show", "'s", "rating", "tank", "year", "after", "year", ".", "how", "be", "return", "to", "a", "different", "network", "go", "to", "help", "it", "?"]
(c40-1 / multi-sentence
       :snt1 (c40-7 / cause-01
                    :ARG0 (c40-5 / amr-unknown))
       :snt2 (c40-9 / tank-01
                    :ARG0 (c40-4 / rate-01
                                 :ARG1 (c40-3 / show-04))
                    :time (c40-0 / year-after-year))
       :snt3 (c40-6 / help-01
                    :ARG0 (c40-11 / return-01
                                  :ARG1 c40-3
                                  :ARG4 (c40-2 / network
                                               :ARG1-of (c40-10 / differ-02))
                                  :manner (c40-8 / amr-unknown))
                    :ARG1 c40-3))

# ::snt THE Voice is all I want
# ::tokens ["THE", "Voice", "is", "all", "I", "want"]
# ::lemmas ["the", "Voice", "be", "all", "i", "want"]
(c43-0 / want-01
       :ARG0 (c43-2 / i)
       :ARG1 (c43-1 / voice)
       :degree (c43-3 / all))

# ::snt Thank you ABC
# ::tokens ["Thank", "you", "ABC"]
# ::lemmas ["thank", "you", "ABC"]
(c44-3 / thank-01
       :ARG0 (c44-2 / i)
       :ARG1 (c44-1 / publication
                    :name (c44-0 / name
                                 :op1 "ABC")))

# ::snt no. please.
# ::tokens ["no", ".", "please", "."]
# ::lemmas ["no", ".", "please", "."]
(c45-0 / no
       :polite +)
