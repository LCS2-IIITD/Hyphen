# ::snt Dude u still replying? This thread is expired if you don't take the time to listen to them than that's whatever but they don't lipsync
# ::tokens ["Dude", "u", "still", "replying", "?", "This", "thread", "is", "expired", "if", "you", "do", "n't", "take", "the", "time", "to", "listen", "to", "them", "than", "that", "'s", "whatever", "but", "they", "do", "n't", "lipsync"]
# ::lemmas ["dude", "u", "still", "reply", "?", "this", "thread", "be", "expire", "if", "you", "do", "not", "take", "the", "time", "to", "listen", "to", "they", "than", "that", "be", "whatever", "but", "they", "do", "not", "lipsync"]
(c1-1 / multi-sentence
      :snt1 (c1-3 / reply-01
                  :ARG0 (c1-12 / dude)
                  :mod (c1-2 / still)
                  :polarity (c1-10 / amr-unknown))
      :snt2 (c1-7 / contrast-01
                  :ARG1 (c1-4 / expire-01
                              :ARG1 (c1-8 / thread
                                          :mod (c1-14 / this))
                              :condition (c1-9 / take-01
                                               :ARG0 (c1-0 / you)
                                               :ARG1 (c1-5 / time)
                                               :purpose (c1-6 / listen-01
                                                              :ARG0 c1-0
                                                              :ARG1 (c1-11 / they))
                                               :polarity -))
                  :ARG2 (c1-13 / lipsync-00
                               :ARG0 c1-11
                               :polarity -)))

# ::snt Sorry I'm so happy you know they sing live
# ::tokens ["Sorry", "I", "'m", "so", "happy", "you", "know", "they", "sing", "live"]
# ::lemmas ["sorry", "i", "be", "so", "happy", "you", "know", "they", "sing", "live"]
(c2-2 / sorry-01
      :ARG1 (c2-6 / i)
      :ARG2 (c2-3 / happy-01
                  :ARG0 (c2-4 / know-01
                              :ARG0 (c2-1 / you)
                              :ARG1 (c2-0 / sing-01
                                          :ARG0 (c2-7 / they)
                                          :manner (c2-5 / live)))
                  :ARG1 c2-6
                  :degree (c2-8 / so)))

# ::snt Ouch
# ::tokens ["Ouch"]
# ::lemmas ["ouch"]
(c3-0 / ouch
      :mode expressive)

# ::snt I'm so happy know
# ::tokens ["I", "'m", "so", "happy", "know"]
# ::lemmas ["i", "be", "so", "happy", "know"]
(c4-0 / happy-01
      :ARG1 (c4-2 / i)
      :degree (c4-3 / so)
      :ARG1-of (c4-1 / know-01))

# ::snt Well that was irrelevant to this article they don't even do that
# ::tokens ["Well", "that", "was", "irrelevant", "to", "this", "article", "they", "do", "n't", "even", "do", "that"]
# ::lemmas ["well", "that", "be", "irrelevant", "to", "this", "article", "they", "do", "not", "even", "do", "that"]
(c5-0 / relevant-01
      :ARG1 (c5-4 / that)
      :ARG2 (c5-6 / article
                  :mod (c5-8 / this))
      :mod (c5-2 / well)
      :ARG1-of (c5-3 / cause-01
                     :ARG0 (c5-7 / do-02
                                 :ARG0 (c5-5 / they)
                                 :ARG1 c5-4
                                 :mod (c5-1 / even)
                                 :polarity -))
      :polarity -)

# ::snt Thats cause is a pro lol
# ::tokens ["That", "s", "cause", "is", "a", "pro", "lol"]
# ::lemmas ["that", "s", "cause", "be", "a", "pro", "lol"]
(c6-2 / cause-01
      :ARG0 (c6-4 / that)
      :ARG1 (c6-0 / favor-01)
      :ARG2-of (c6-1 / laugh-01
                     :ARG0 (c6-3 / i)
                     :manner (c6-5 / loud)
                     :mode expressive))

# ::snt its entertainment news u ass
# ::tokens ["its", "entertainment", "news", "u", "ass"]
# ::lemmas ["its", "entertainment", "news", "u", "ass"]
(c7-1 / news
      :domain (c7-3 / it)
      :topic (c7-2 / entertainment)
      :ARG1-of (c7-4 / ass-01
                     :ARG0 (c7-0 / you)))

# ::snt And this is news why???
# ::tokens ["And", "this", "is", "news", "why", "?", "?", "?"]
# ::lemmas ["and", "this", "be", "news", "why", "?", "?", "?"]
(c8-1 / and
      :op2 (c8-0 / news
                 :domain (c8-4 / this)
                 :ARG1-of (c8-2 / cause-01
                                :ARG0 (c8-3 / amr-unknown))))
