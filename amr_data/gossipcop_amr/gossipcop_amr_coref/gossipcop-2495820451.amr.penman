# ::snt How could they spilt very fast and forget each other ,where is the love
# ::tokens ["How", "could", "they", "spilt", "very", "fast", "and", "forget", "each", "other", ",", "where", "is", "the", "love"]
# ::lemmas ["how", "could", "they", "spilt", "very", "fast", "and", "forget", "each", "other", ",", "where", "be", "the", "love"]
(c1-2 / multi-sentence
      :snt1 (c1-6 / possible-01
                  :ARG1 (c1-4 / and
                              :op1 (c1-3 / spilt-01
                                         :ARG1 (c1-11 / they)
                                         :ARG1-of (c1-0 / fast-02
                                                        :degree (c1-5 / very)))
                              :op2 (c1-7 / forget-01
                                         :ARG0 c1-11
                                         :ARG1 c1-11))
                  :manner (c1-10 / amr-unknown))
      :snt2 (c1-1 / be-located-at-91
                  :ARG1 (c1-8 / love-01)
                  :ARG2 (c1-9 / amr-unknown)))

# ::snt Fr
# ::tokens ["Fr"]
# ::lemmas ["fr"]
(c2-1 / person
      :name (c2-0 / name
                  :op1 "Fr"))

# ::snt Who cares.
# ::tokens ["Who", "cares", "."]
# ::lemmas ["who", "care", "."]
(c3-0 / care-01
      :ARG0 (c3-1 / amr-unknown))

# ::snt Very sad!!!!
# ::tokens ["Very", "sad", "!", "!", "!", "!"]
# ::lemmas ["very", "sad", "!", "!", "!", "!"]
(c5-1 / sad-02
      :degree (c5-0 / very))

# ::snt I suspected one of them was already dating someone else. That's how it goes.
# ::tokens ["I", "suspected", "one", "of", "them", "was", "already", "dating", "someone", "else", ".", "That", "'s", "how", "it", "goes", "."]
# ::lemmas ["i", "suspect", "one", "of", "they", "be", "already", "date", "someone", "else", ".", "that", "be", "how", "it", "go", "."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / suspect-01
                  :ARG0 (c6-7 / i)
                  :ARG1 (c6-10 / date-02
                               :ARG0 (c6-6 / person
                                           :ARG1-of (c6-3 / include-91
                                                          :ARG2 (c6-8 / they)))
                               :ARG1 (c6-0 / someone
                                           :mod (c6-5 / else))
                               :time (c6-4 / already)))
      :snt2 (c6-9 / go-06
                  :ARG0 (c6-11 / it)
                  :manner (c6-12 / that)))

# ::snt nows your chance
# ::tokens ["nows", "your", "chance"]
# ::lemmas ["now", "your", "chance"]
(c7-0 / chance-02
      :ARG0 (c7-1 / you)
      :mod (c7-2 / most))

# ::snt Me too! Lol. I remember being so sad that they announced their split and then saw she was linked to someone so quickly.
# ::tokens ["Me", "too", "!", "Lol", ".", "I", "remember", "being", "so", "sad", "that", "they", "announced", "their", "split", "and", "then", "saw", "she", "was", "linked", "to", "someone", "so", "quickly", "."]
# ::lemmas ["i", "too", "!", "Lol", ".", "i", "remember", "be", "so", "sad", "that", "they", "announce", "their", "split", "and", "then", "see", "she", "be", "link", "to", "someone", "so", "quickly", "."]
(c8-13 / multi-sentence
       :snt1 (c8-18 / i)
       :snt2 (c8-2 / laugh-01
                   :manner (c8-11 / loud)
                   :mode expressive)
       :snt3 (c8-17 / remember-01
                    :ARG0 (c8-5 / i)
                    :ARG1 (c8-0 / sad-02
                                :ARG0 (c8-9 / and
                                            :op1 (c8-7 / announce-01
                                                       :ARG0 (c8-8 / they)
                                                       :ARG1 (c8-4 / split-01
                                                                   :ARG1 c8-8))
                                            :op2 (c8-3 / see-01
                                                       :ARG0 c8-5
                                                       :ARG1 (c8-6 / link-01
                                                                   :ARG1 (c8-16 / she)
                                                                   :ARG2 (c8-1 / someone)
                                                                   :ARG1-of (c8-10 / quick-02
                                                                                   :degree (c8-12 / so)))
                                                       :time (c8-15 / then)))
                                :ARG1 c8-5
                                :degree (c8-14 / so))))

# ::snt I'm not ok
# ::tokens ["I", "'m", "not", "ok"]
# ::lemmas ["i", "be", "not", "ok"]
(c9-0 / okay-04
      :ARG1 (c9-1 / i)
      :polarity -)

# ::snt Yeah, because we all know he has a girl on the side!
# ::tokens ["Yeah", ",", "because", "we", "all", "know", "he", "has", "a", "girl", "on", "the", "side", "!"]
# ::lemmas ["yeah", ",", "because", "we", "all", "know", "he", "have", "a", "girl", "on", "the", "side", "!"]
(c10-4 / cause-01
       :ARG0 (c10-3 / know-01
                    :ARG0 (c10-5 / we
                                 :mod (c10-7 / all))
                    :ARG1 (c10-2 / have-03
                                 :ARG0 (c10-6 / he)
                                 :ARG1 (c10-8 / girl
                                              :location (c10-1 / side))))
       :mod (c10-0 / yeah
                   :mode expressive))

# ::snt Michael Barrett
# ::tokens ["Michael", "Barrett"]
# ::lemmas ["Michael", "Barrett"]
(c11-1 / person
       :name (c11-0 / name
                    :op1 "Michael"
                    :op2 "Barrett"))

# ::snt I bet Towie was to Blame for it
# ::tokens ["I", "bet", "Towie", "was", "to", "Blame", "for", "it"]
# ::lemmas ["i", "bet", "Towie", "be", "to", "blame", "for", "it"]
(c12-0 / bet-01
       :ARG0 (c12-5 / i)
       :ARG2 (c12-3 / blame-01
                    :ARG1 (c12-4 / person
                                 :name (c12-1 / name
                                              :op1 "Towie"))
                    :ARG2 (c12-2 / it)))

# ::snt I mean, she has a boyfriend, so....
# ::tokens ["I", "mean", ",", "she", "has", "a", "boyfriend", ",", "so", "...."]
# ::lemmas ["i", "mean", ",", "she", "have", "a", "boyfriend", ",", "so", "...."]
(c13-1 / mean-01
       :ARG0 (c13-7 / i)
       :ARG2 (c13-4 / have-03
                    :ARG0 (c13-2 / she)
                    :ARG1 (c13-5 / person
                                 :ARG0-of (c13-6 / have-rel-role-91
                                                 :ARG1 c13-2
                                                 :ARG2 (c13-0 / boyfriend)))
                    :ARG1-of (c13-3 / infer-01)))

# ::snt Just goes to show once again Nothing Last Forever in Hollywood.
# ::tokens ["Just", "goes", "to", "show", "once", "again", "Nothing", "Last", "Forever", "in", "Hollywood", "."]
# ::lemmas ["just", "go", "to", "show", "once", "again", "nothing", "last", "forever", "in", "Hollywood", "."]
(c15-8 / go-11
       :ARG1 (c15-3 / show-01
                    :ARG1 (c15-2 / nothing
                                 :name (c15-4 / name
                                              :op1 "Last"
                                              :op2 "Forever")
                                 :location (c15-1 / market-sector
                                                  :name (c15-5 / name
                                                               :op1 "Hollywood")))
                    :mod (c15-7 / again
                                :mod (c15-0 / once)))
       :mod (c15-6 / just))

# ::snt Nooooooo!!!!
# ::tokens ["Nooooooo", "!", "!", "!", "!"]
# ::lemmas ["Nooooooo", "!", "!", "!", "!"]
(c17-0 / no
       :mode expressive)

# ::snt Might be one of the saddest headlines today.
# ::tokens ["Might", "be", "one", "of", "the", "saddest", "headlines", "today", "."]
# ::lemmas ["might", "be", "one", "of", "the", "sad", "headline", "today", "."]
(c18-4 / possible-01
       :ARG1 (c18-3 / headline
                    :ARG1-of (c18-6 / include-91
                                    :ARG2 (c18-5 / headline
                                                 :time (c18-7 / today)
                                                 :ARG1-of (c18-2 / have-degree-91
                                                                 :ARG2 (c18-1 / sadden-01
                                                                              :ARG0 c18-5)
                                                                 :ARG3 (c18-0 / most))))))

# ::snt Shocker
# ::tokens ["Shocker"]
# ::lemmas ["shocker"]
(c19-0 / shock-01)

# ::snt ...You can't be Star Lord, if you can't smash everything like Star Lord.
# ::tokens ["...", "You", "ca", "n't", "be", "Star", "Lord", ",", "if", "you", "ca", "n't", "smash", "everything", "like", "Star", "Lord", "."]
# ::lemmas ["...", "you", "can", "not", "be", "Star", "Lord", ",", "if", "you", "can", "not", "smash", "everything", "like", "Star", "Lord", "."]
(c20-6 / possible-01
       :ARG1 (c20-2 / person
                    :name (c20-1 / name
                                 :op1 "Star"
                                 :op2 "Lord")
                    :domain (c20-0 / you))
       :condition (c20-7 / possible-01
                         :ARG1 (c20-3 / smash-01
                                      :ARG0 c20-0
                                      :ARG1 (c20-5 / everything)
                                      :ARG1-of (c20-4 / resemble-01
                                                      :ARG2 c20-2))
                         :polarity -)
       :polarity -)

# ::snt Extremely sad you hear this..
# ::tokens ["Extremely", "sad", "you", "hear", "this", ".."]
# ::lemmas ["extremely", "sad", "you", "hear", "this", ".."]
(c21-1 / sad-02
       :ARG0 (c21-3 / hear-01
                    :ARG0 (c21-0 / you)
                    :ARG1 (c21-4 / this))
       :degree (c21-2 / extreme))

# ::snt That bitch gots ta GO.
# ::tokens ["That", "bitch", "gots", "ta", "GO", "."]
# ::lemmas ["that", "bitch", "got", "ta", "GO", "."]
(c22-0 / get-06
       :ARG0 (c22-1 / bitch
                    :mod (c22-3 / that))
       :ARG1 (c22-2 / go-01
                    :ARG1 c22-1))

# ::snt This was such a fun couple.
# ::tokens ["This", "was", "such", "a", "fun", "couple", "."]
# ::lemmas ["this", "be", "such", "a", "fun", "couple", "."]
(c23-0 / couple
       :ARG1-of (c23-1 / fun-01
                       :degree (c23-3 / such))
       :domain (c23-2 / this))

# ::snt It's so sad
# ::tokens ["It", "'s", "so", "sad"]
# ::lemmas ["it", "be", "so", "sad"]
(c24-1 / have-degree-91
       :ARG1 (c24-2 / it)
       :ARG2 (c24-3 / sad-02)
       :ARG3 (c24-0 / so))

# ::snt I cant handle this
# ::tokens ["I", "ca", "nt", "handle", "this"]
# ::lemmas ["i", "can", "not", "handle", "this"]
(c25-1 / possible-01
       :ARG1 (c25-0 / handle-01
                    :ARG0 (c25-2 / i)
                    :ARG1 (c25-3 / this))
       :polarity -)

# ::snt We already know why
# ::tokens ["We", "already", "know", "why"]
# ::lemmas ["we", "already", "know", "why"]
(c26-0 / know-01
       :ARG0 (c26-1 / we)
       :ARG1 (c26-3 / thing
                    :ARG0-of (c26-2 / cause-01))
       :time (c26-4 / already))

# ::snt She always looked crazy to me
# ::tokens ["She", "always", "looked", "crazy", "to", "me"]
# ::lemmas ["she", "always", "look", "crazy", "to", "i"]
(c27-1 / look-02
       :ARG0 (c27-0 / she)
       :ARG1 (c27-2 / crazy-03
                    :ARG1 c27-0)
       :ARG2 (c27-3 / i)
       :time (c27-4 / always))

# ::snt Dont let ya wife stop you from being with your true love lol
# ::tokens ["Do", "nt", "let", "ya", "wife", "stop", "you", "from", "being", "with", "your", "true", "love", "lol"]
# ::lemmas ["do", "not", "let", "ya", "wife", "stop", "you", "from", "be", "with", "your", "true", "love", "lol"]
(c28-6 / let-01
       :ARG0 (c28-1 / you)
       :ARG1 (c28-3 / stop-03
                    :ARG0 (c28-5 / person
                                 :ARG0-of (c28-4 / have-rel-role-91
                                                 :ARG1 c28-1
                                                 :ARG2 (c28-8 / wife)))
                    :ARG1 c28-1
                    :ARG2 (c28-0 / be-with-10
                                 :ARG0 c28-1
                                 :ARG1 (c28-2 / person
                                              :ARG1-of (c28-12 / love-01
                                                               :ARG0 c28-1
                                                               :ARG1-of (c28-11 / true-01)))))
       :ARG2-of (c28-7 / laugh-01
                       :ARG0 (c28-10 / i)
                       :manner (c28-9 / loud)
                       :mode expressive)
       :polarity -)

# ::snt small world!
# ::tokens ["small", "world", "!"]
# ::lemmas ["small", "world", "!"]
(c30-0 / world
       :mod (c30-1 / small))

# ::snt I dont know who these people are.
# ::tokens ["I", "do", "nt", "know", "who", "these", "people", "are", "."]
# ::lemmas ["i", "do", "not", "know", "who", "these", "people", "be", "."]
(c31-1 / know-01
       :ARG0 (c31-2 / i)
       :ARG1 (c31-0 / person
                    :mod (c31-3 / this))
       :polarity -)

# ::snt Who cares????
# ::tokens ["Who", "cares", "?", "?", "?", "?"]
# ::lemmas ["who", "care", "?", "?", "?", "?"]
(c33-0 / care-01
       :ARG0 (c33-1 / amr-unknown))

# ::snt Didnt they announce this week's ago?
# ::tokens ["Did", "nt", "they", "announce", "this", "week", "'s", "ago", "?"]
# ::lemmas ["do", "not", "they", "announce", "this", "week", "'s", "ago", "?"]
(c35-2 / announce-01
       :ARG0 (c35-5 / they)
       :time (c35-0 / before
                    :op1 (c35-1 / now)
                    :quant (c35-3 / week
                                  :mod (c35-6 / this)))
       :polarity (c35-4 / amr-unknown)
       :polarity -)

# ::snt He getting that Guardians of the Galaxy money now. He like fck uh marriage
# ::tokens ["He", "getting", "that", "Guardians", "of", "the", "Galaxy", "money", "now", ".", "He", "like", "fck", "uh", "marriage"]
# ::lemmas ["he", "get", "that", "Guardians", "of", "the", "Galaxy", "money", "now", ".", "he", "like", "fck", "uh", "marriage"]
(c36-1 / multi-sentence
       :snt1 (c36-9 / get-01
                    :ARG0 (c36-4 / he)
                    :ARG1 (c36-3 / money
                                 :source (c36-7 / work-of-art
                                                :name (c36-2 / name
                                                             :op1 "Guardian"
                                                             :op2 "of"
                                                             :op3 "the"
                                                             :op4 "Galaxy")))
                    :time (c36-5 / now))
       :snt2 (c36-6 / like-01
                    :ARG0 (c36-8 / he)
                    :ARG1 (c36-10 / marry-01
                                  :mod (c36-0 / fuck
                                              :mode expressive))))

# ::snt Something so sad about funny people that couldn't make it work in their relationship, I hope they really tried to make it better.
# ::tokens ["Something", "so", "sad", "about", "funny", "people", "that", "could", "n't", "make", "it", "work", "in", "their", "relationship", ",", "I", "hope", "they", "really", "tried", "to", "make", "it", "better", "."]
# ::lemmas ["something", "so", "sad", "about", "funny", "people", "that", "could", "not", "make", "it", "work", "in", "their", "relationship", ",", "i", "hope", "they", "really", "try", "to", "make", "it", "well", "."]
(c37-4 / hope-01
       :ARG0 (c37-9 / i)
       :ARG1 (c37-10 / try-01
                     :ARG0 (c37-5 / person
                                  :ARG1-of (c37-0 / funny-02)
                                  :ARG0-of (c37-1 / make-02
                                                  :ARG1 (c37-7 / work-09
                                                               :ARG1 (c37-3 / relation-03
                                                                            :ARG0 c37-5)
                                                               :ARG1-of (c37-2 / possible-01
                                                                               :polarity -))))
                     :ARG1 (c37-6 / make-02
                                  :ARG0 c37-5
                                  :ARG1 (c37-11 / good-02
                                                :ARG1 c37-3
                                                :ARG2-of (c37-8 / have-degree-91
                                                                :ARG1 c37-3
                                                                :ARG3 (c37-13 / more))))
                     :ARG1-of (c37-12 / real-04)))

# ::snt Someone got a big head.
# ::tokens ["Someone", "got", "a", "big", "head", "."]
# ::lemmas ["someone", "get", "a", "big", "head", "."]
(c38-0 / get-02
       :ARG0 (c38-3 / someone)
       :ARG1 (c38-2 / head
                    :mod (c38-1 / big)))

# ::snt Ha! *follows *
# ::tokens ["Ha", "!", "*", "follows", "*"]
# ::lemmas ["ha", "!", "*", "follow", "*"]
(c39-0 / follow-01
       :mod (c39-1 / ha
                   :mode expressive))

# ::snt And boners are popping all over Hollywood
# ::tokens ["And", "boners", "are", "popping", "all", "over", "Hollywood"]
# ::lemmas ["and", "boner", "be", "pop", "all", "over", "Hollywood"]
(c40-5 / and
       :op2 (c40-3 / pop-up-03
                   :ARG1 (c40-0 / boner)
                   :location (c40-4 / all-over
                                    :op1 (c40-1 / market-sector
                                                :name (c40-2 / name
                                                             :op1 "Hollywood")))))

# ::snt Looks like anna will be free saturday night, whats her number?
# ::tokens ["Looks", "like", "anna", "will", "be", "free", "saturday", "night", ",", "what", "s", "her", "number", "?"]
# ::lemmas ["look", "like", "anna", "will", "be", "free", "saturday", "night", ",", "what", "s", "her", "number", "?"]
(c41-8 / and
       :op1 (c41-4 / look-02
                   :ARG1 (c41-0 / free-03
                                :ARG1 (c41-5 / person
                                             :name (c41-1 / name
                                                          :op1 " anna"))
                                :time (c41-9 / date-entity
                                             :weekday (c41-2 / saturday)
                                             :dayperiod (c41-3 / night))))
       :op2 (c41-6 / number
                   :poss c41-5
                   :domain (c41-7 / amr-unknown)))

# ::snt Lol um alil late? They been separated for afew months now
# ::tokens ["Lol", "um", "alil", "late", "?", "They", "been", "separated", "for", "afew", "months", "now"]
# ::lemmas ["Lol", "um", "alil", "late", "?", "they", "been", "separate", "for", "afew", "months", "now"]
(c43-1 / multi-sentence
       :snt1 (c43-6 / laugh-01
                    :ARG0 (c43-7 / i)
                    :manner (c43-9 / loud)
                    :mode expressive)
       :snt2 (c43-3 / separate-01
                    :ARG1 (c43-8 / they)
                    :time (c43-0 / before
                                 :op1 (c43-2 / now)
                                 :quant (c43-4 / afew
                                               :op1 (c43-10 / temporal-quantity
                                                            :unit (c43-5 / month)
                                                            :quant 1)))))

# ::snt No they were separated before but now its a divorce
# ::tokens ["No", "they", "were", "separated", "before", "but", "now", "its", "a", "divorce"]
# ::lemmas ["no", "they", "be", "separate", "before", "but", "now", "its", "a", "divorce"]
(c44-3 / contrast-01
       :ARG1 (c44-2 / separate-01
                    :ARG1 (c44-4 / they)
                    :time (c44-0 / before))
       :ARG2 (c44-5 / divorce-01
                    :time (c44-1 / now)))

# ::snt That was quick
# ::tokens ["That", "was", "quick"]
# ::lemmas ["that", "be", "quick"]
(c45-0 / quick-02
       :ARG1 (c45-1 / that))

# ::snt Damn, crazy thing is I was literally thinking this morning they may have a shot still, but its been too long of a separation that they may get divorced.
# ::tokens ["Damn", ",", "crazy", "thing", "is", "I", "was", "literally", "thinking", "this", "morning", "they", "may", "have", "a", "shot", "still", ",", "but", "its", "been", "too", "long", "of", "a", "separation", "that", "they", "may", "get", "divorced", "."]
# ::lemmas ["damn", ",", "crazy", "thing", "be", "i", "be", "literally", "think", "this", "morning", "they", "may", "have", "a", "shot", "still", ",", "but", "its", "be", "too", "long", "of", "a", "separation", "that", "they", "may", "get", "divorce", "."]
(c47-11 / crazy-03
        :ARG1 (c47-5 / think-01
                     :ARG0 (c47-16 / i)
                     :ARG1 (c47-7 / contrast-01
                                  :ARG1 (c47-14 / possible-01
                                                :ARG1 (c47-4 / have-03
                                                             :ARG0 (c47-13 / they)
                                                             :ARG1 (c47-0 / shoot-01)
                                                             :mod (c47-3 / still))
                                                :time (c47-18 / date-entity
                                                              :dayperiod (c47-8 / morning)
                                                              :mod (c47-17 / today)))
                                  :ARG2 (c47-9 / possible-01
                                               :ARG1 (c47-12 / divorce-01
                                                             :ARG0 c47-13)
                                               :ARG1-of (c47-2 / long-03
                                                               :ARG2-of (c47-15 / have-degree-91
                                                                                :ARG1 c47-12
                                                                                :ARG3 (c47-1 / too)))))
                     :manner (c47-6 / literal))
        :mod (c47-10 / damn))

# ::snt So sad
# ::tokens ["So", "sad"]
# ::lemmas ["so", "sad"]
(c48-1 / sad-02
       :degree (c48-0 / so))

# ::snt And how does this info help anyone?
# ::tokens ["And", "how", "does", "this", "info", "help", "anyone", "?"]
# ::lemmas ["and", "how", "do", "this", "info", "help", "anyone", "?"]
(c49-0 / and
       :op2 (c49-1 / help-01
                   :ARG0 (c49-5 / information
                                :mod (c49-4 / this))
                   :ARG2 (c49-3 / anyone)
                   :manner (c49-2 / amr-unknown)))

# ::snt Like we didnt saw this coming.
# ::tokens ["Like", "we", "did", "nt", "saw", "this", "coming", "."]
# ::lemmas ["like", "we", "do", "not", "see", "this", "coming", "."]
(c50-1 / resemble-01
       :ARG2 (c50-0 / see-01
                    :ARG0 (c50-3 / we)
                    :ARG1 (c50-2 / come-03
                                 :ARG1 (c50-4 / this))
                    :polarity -))
