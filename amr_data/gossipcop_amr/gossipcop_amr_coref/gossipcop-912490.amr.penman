# ::snt He will be missed! Wonder how Carisi, Rollins, and Fin reacted?
# ::tokens ["He", "will", "be", "missed", "!", "Wonder", "how", "Carisi", ",", "Rollins", ",", "and", "Fin", "reacted", "?"]
# ::lemmas ["he", "will", "be", "miss", "!", "wonder", "how", "Carisi", ",", "Rollins", ",", "and", "Fin", "react", "?"]
(c1-1 / multi-sentence
      :snt1 (c1-6 / miss-01
                  :ARG1 (c1-7 / he))
      :snt2 (c1-11 / wonder-01
                   :ARG0 (c1-0 / you)
                   :ARG1 (c1-13 / thing
                                :ARG2-of (c1-4 / react-01
                                               :ARG0 (c1-5 / and
                                                           :op1 (c1-8 / person
                                                                      :name (c1-2 / name
                                                                                  :op1 "Carisi"))
                                                           :op2 (c1-3 / person
                                                                      :name (c1-9 / name
                                                                                  :op1 "Rollins"))
                                                           :op3 (c1-14 / person
                                                                       :name (c1-10 / name
                                                                                    :op1 "Fin")))))
                   :polarity (c1-12 / amr-unknown)
                   :mode imperative))

# ::snt That was actually quite good
# ::tokens ["That", "was", "actually", "quite", "good"]
# ::lemmas ["that", "be", "actually", "quite", "good"]
(c2-0 / good-02
      :ARG1 (c2-3 / that)
      :degree (c2-2 / quite)
      :ARG1-of (c2-1 / actual-02))

# ::snt No! No! No! No!!!
# ::tokens ["No", "!", "No", "!", "No", "!", "No", "!", "!", "!"]
# ::lemmas ["no", "!", "no", "!", "no", "!", "no", "!", "!", "!"]
(c3-3 / and
      :op1 (c3-2 / no)
      :op2 (c3-1 / no)
      :op3 (c3-0 / no))

# ::snt Noooooo
# ::tokens ["Noooooo"]
# ::lemmas ["Noooooo"]
(c4-0 / no)

# ::snt Sad, but what an exit. All the best to Raul
# ::tokens ["Sad", ",", "but", "what", "an", "exit", ".", "All", "the", "best", "to", "Raul"]
# ::lemmas ["sad", ",", "but", "what", "an", "exit", ".", "all", "the", "good", "to", "raul"]
(c5-1 / multi-sentence
      :snt1 (c5-9 / contrast-01
                  :ARG1 (c5-3 / sad-02)
                  :ARG2 (c5-5 / exit-01
                              :degree (c5-0 / so)))
      :snt2 (c5-10 / wish-01
                   :ARG1 (c5-11 / thing
                                :mod (c5-4 / all)
                                :ARG1-of (c5-6 / have-degree-91
                                               :ARG2 (c5-12 / good-02
                                                            :ARG1 c5-11)
                                               :ARG3 (c5-7 / most)))
                   :ARG2 (c5-8 / person
                               :name (c5-2 / name
                                           :op1 "Raul"))))

# ::snt I hope we r right
# ::tokens ["I", "hope", "we", "r", "right"]
# ::lemmas ["i", "hope", "we", "r", "right"]
(c6-1 / hope-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-0 / right-06
                  :ARG1 (c6-3 / we)))

# ::snt That is what I was thinking too. If it was permanent, he would had lost the case, and he was not fired.
# ::tokens ["That", "is", "what", "I", "was", "thinking", "too", ".", "If", "it", "was", "permanent", ",", "he", "would", "had", "lost", "the", "case", ",", "and", "he", "was", "not", "fired", "."]
# ::lemmas ["that", "be", "what", "i", "be", "think", "too", ".", "if", "it", "be", "permanent", ",", "he", "would", "have", "lose", "the", "case", ",", "and", "he", "be", "not", "fire", "."]
(c7-1 / multi-sentence
      :snt1 (c7-8 / think-01
                  :ARG0 (c7-11 / i)
                  :ARG1 (c7-10 / that)
                  :mod (c7-9 / too))
      :snt2 (c7-3 / and
                  :op1 (c7-5 / lose-03
                             :ARG0 (c7-4 / he)
                             :ARG1 (c7-7 / case-03))
                  :op2 (c7-0 / fire-02
                             :ARG1 c7-4
                             :polarity -)
                  :condition (c7-6 / permanent
                                   :domain (c7-2 / it))))

# ::snt i know I been holding back tears all day lol. it is so hard
# ::tokens ["i", "know", "I", "been", "holding", "back", "tears", "all", "day", "lol", ".", "it", "is", "so", "hard"]
# ::lemmas ["i", "know", "i", "been", "hold", "back", "tear", "all", "day", "lol", ".", "it", "be", "so", "hard"]
(c9-0 / multi-sentence
      :snt1 (c9-5 / know-01
                  :ARG0 (c9-8 / i)
                  :ARG1 (c9-4 / hold-back-07
                              :ARG0 c9-8
                              :ARG1 (c9-9 / tear)
                              :time (c9-10 / day
                                           :mod (c9-3 / all))
                              :ARG2-of (c9-6 / laugh-01
                                             :ARG0 c9-8
                                             :manner (c9-11 / loud))))
      :snt2 (c9-7 / hard-02
                  :ARG1 (c9-2 / it)
                  :degree (c9-1 / so)))

# ::snt It absolutely killed me! I'm still not over it! Won't for a long time. Was hoping Liv and Raffy would end up together . They seemed to be The It Couple!
# ::tokens ["It", "absolutely", "killed", "me", "!", "I", "'m", "still", "not", "over", "it", "!", "Wo", "n't", "for", "a", "long", "time", ".", "Was", "hoping", "Liv", "and", "Raffy", "would", "end", "up", "together", ".", "They", "seemed", "to", "be", "The", "It", "Couple", "!"]
# ::lemmas ["it", "absolutely", "kill", "i", "!", "i", "be", "still", "not", "over", "it", "!", "will", "not", "for", "a", "long", "time", ".", "be", "hope", "Liv", "and", "Raffy", "would", "end", "up", "together", ".", "they", "seem", "to", "be", "The", "It", "Couple", "!"]
(c10-14 / multi-sentence
        :snt1 (c10-8 / kill-01
                     :ARG0 (c10-23 / it)
                     :ARG1 (c10-6 / i)
                     :manner (c10-11 / absolute))
        :snt2 (c10-4 / over-02
                     :ARG1 (c10-12 / i)
                     :ARG2 (c10-0 / it)
                     :mod (c10-1 / still)
                     :polarity -)
        :snt3 (c10-13 / over-02
                      :ARG1 c10-12
                      :ARG2 c10-0
                      :time (c10-10 / time
                                    :ARG1-of (c10-3 / long-03))
                      :polarity -)
        :snt4 (c10-7 / hope-01
                     :ARG0 (c10-19 / i)
                     :ARG1 (c10-21 / end-up-03
                                   :ARG1 (c10-9 / and
                                                :op1 (c10-22 / person
                                                             :name (c10-20 / name
                                                                           :op1 "Liv"))
                                                :op2 (c10-15 / person
                                                             :name (c10-16 / name
                                                                           :op1 "Raffy")))
                                   :manner (c10-18 / together)))
        :snt5 (c10-5 / seem-01
                     :ARG1 (c10-17 / couple
                                   :mod (c10-2 / it)
                                   :domain (c10-24 / they))))

# ::snt Makes me so sad.
# ::tokens ["Makes", "me", "so", "sad", "."]
# ::lemmas ["make", "i", "so", "sad", "."]
(c11-1 / make-02
       :ARG1 (c11-3 / sad-02
                    :ARG1 (c11-2 / i)
                    :degree (c11-0 / so)))

# ::snt Why is he going
# ::tokens ["Why", "is", "he", "going"]
# ::lemmas ["why", "be", "he", "go"]
(c12-0 / go-02
       :ARG0 (c12-2 / he)
       :ARG1-of (c12-1 / cause-01
                       :ARG0 (c12-3 / amr-unknown)))

# ::snt This stinks. Going to miss Raul, seeing an opening is left for a comeback, hoping that's in the near future.
# ::tokens ["This", "stinks", ".", "Going", "to", "miss", "Raul", ",", "seeing", "an", "opening", "is", "left", "for", "a", "comeback", ",", "hoping", "that", "'s", "in", "the", "near", "future", "."]
# ::lemmas ["this", "stink", ".", "go", "to", "miss", "Raul", ",", "see", "an", "opening", "be", "leave", "for", "a", "comeback", ",", "hope", "that", "be", "in", "the", "near", "future", "."]
(c13-3 / multi-sentence
       :snt1 (c13-5 / stink-01
                    :ARG1 (c13-13 / this))
       :snt2 (c13-6 / miss-01
                    :ARG0 (c13-12 / i)
                    :ARG1 (c13-7 / person
                                 :name (c13-4 / name
                                              :op1 "Raul"))
                    :ARG1-of (c13-11 / cause-01
                                     :ARG0 (c13-0 / see-01
                                                  :ARG0 c13-12
                                                  :ARG1 (c13-8 / leave-17
                                                               :ARG1 (c13-1 / open-01)
                                                               :purpose (c13-14 / comeback-01))
                                                  :ARG0-of (c13-9 / hope-01
                                                                  :ARG1 c13-14
                                                                  :time (c13-2 / future
                                                                               :ARG1-of (c13-10 / near-02)))))))
