# ::snt Who CARES
# ::tokens ["Who", "CARES"]
# ::lemmas ["who", "CARES"]
(c1-1 / thing
      :domain (c1-0 / amr-unknown))

# ::snt Too bad she endorsed him
# ::tokens ["Too", "bad", "she", "endorsed", "him"]
# ::lemmas ["too", "bad", "she", "endorse", "he"]
(c2-3 / have-degree-91
      :ARG1 (c2-2 / endorse-01
                  :ARG0 (c2-1 / she)
                  :ARG1 (c2-4 / he))
      :ARG2 (c2-0 / bad-07
                  :ARG1 c2-2)
      :ARG3 (c2-5 / too))

# ::snt Right? Bizarre
# ::tokens ["Right", "?", "Bizarre"]
# ::lemmas ["right", "?", "bizarre"]
(c3-0 / request-confirmation-91
      :ARG1 (c3-1 / bizarre))

# ::snt Transgender rights. You have the right to feel what you feel. Or think what you think. You have the right to alter your own body if you want to. You dont have the right to insist others see this as normal. Or expect special rights because youre different.
# ::tokens ["Transgender", "rights", ".", "You", "have", "the", "right", "to", "feel", "what", "you", "feel", ".", "Or", "think", "what", "you", "think", ".", "You", "have", "the", "right", "to", "alter", "your", "own", "body", "if", "you", "want", "to", ".", "You", "do", "nt", "have", "the", "right", "to", "insist", "others", "see", "this", "as", "normal", ".", "Or", "expect", "special", "rights", "because", "you", "re", "different", "."]
# ::lemmas ["transgender", "right", ".", "you", "have", "the", "right", "to", "feel", "what", "you", "feel", ".", "or", "think", "what", "you", "think", ".", "you", "have", "the", "right", "to", "alter", "your", "own", "body", "if", "you", "want", "to", ".", "you", "do", "not", "have", "the", "right", "to", "insist", "other", "see", "this", "as", "normal", ".", "or", "expect", "special", "right", "because", "you", "re", "different", "."]
(c4-16 / multi-sentence
       :snt1 (c4-24 / right-05
                    :ARG1 (c4-9 / you)
                    :ARG2 (c4-12 / transgender))
       :snt2 (c4-5 / right-05
                   :ARG1 (c4-13 / you)
                   :ARG2 (c4-20 / feel-01
                                :ARG0 c4-13
                                :ARG1 (c4-19 / thing
                                             :ARG1-of (c4-26 / feel-01
                                                             :ARG0 c4-13))))
       :snt3 (c4-7 / or
                   :op2 (c4-28 / think-01
                               :ARG0 c4-13
                               :ARG1 (c4-2 / thing
                                           :ARG1-of (c4-11 / think-01
                                                           :ARG0 c4-13))))
       :snt4 (c4-17 / right-05
                    :ARG1 (c4-6 / you)
                    :ARG2 (c4-10 / alter-01
                                 :ARG0 c4-6
                                 :ARG1 (c4-15 / body
                                              :poss c4-6)
                                 :condition (c4-27 / want-01
                                                   :ARG0 c4-6
                                                   :ARG1 c4-10)))
       :snt5 (c4-0 / right-05
                   :ARG1 (c4-23 / you)
                   :ARG2 (c4-29 / insist-01
                                :ARG0 c4-23
                                :ARG1 (c4-1 / see-01
                                            :ARG0 (c4-14 / other)
                                            :ARG1 (c4-4 / this)
                                            :ARG2 (c4-22 / normal-02
                                                         :ARG1 c4-4)))
                   :polarity -)
       :snt6 (c4-31 / or
                    :op2 (c4-25 / expect-01
                                :ARG0 c4-23
                                :ARG1 (c4-3 / thing
                                            :ARG1-of (c4-21 / right-05)
                                            :ARG1-of (c4-8 / special-02))
                                :ARG1-of (c4-18 / cause-01
                                                :ARG0 (c4-30 / differ-02
                                                             :ARG1 c4-23)))))

# ::snt Rawr!!
# ::tokens ["Rawr", "!", "!"]
# ::lemmas ["Rawr", "!", "!"]
(c5-0 / rawr
      :mode expressive)

# ::snt I'll be on Sunday
# ::tokens ["I", "'ll", "be", "on", "Sunday"]
# ::lemmas ["i", "'ll", "be", "on", "Sunday"]
(c6-1 / be-located-at-91
      :ARG1 (c6-2 / i)
      :time (c6-0 / date-entity
                  :weekday (c6-3 / sunday)))

# ::snt Jesse's Girl came later. They Call Me Bruce was an early non-hit about his struggle with people mistaking him for Bruce Springsteen.Thanks Tiger Beat Magazine!
# ::tokens ["Jesse", "'s", "Girl", "came", "later", ".", "They", "Call", "Me", "Bruce", "was", "an", "early", "non", "-", "hit", "about", "his", "struggle", "with", "people", "mistaking", "him", "for", "Bruce", "Springsteen", ".", "Thanks", "Tiger", "Beat", "Magazine", "!"]
# ::lemmas ["Jesse", "'s", "Girl", "come", "later", ".", "they", "call", "i", "Bruce", "be", "an", "early", "non", "-", "hit", "about", "his", "struggle", "with", "people", "mistake", "he", "for", "Bruce", "Springsteen", ".", "thank", "Tiger", "Beat", "Magazine", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-11 / come-01
                   :ARG1 (c7-6 / magazine
                               :name (c7-1 / name
                                           :op1 "Jesse's"
                                           :op2 "Girl"))
                   :time (c7-15 / after))
      :snt2 (c7-7 / hit
                  :time (c7-5 / early)
                  :topic (c7-3 / struggle-02
                               :ARG0 (c7-13 / he)
                               :ARG1 (c7-8 / person
                                           :ARG0-of (c7-16 / mistake-01
                                                           :ARG1 c7-13
                                                           :ARG2 (c7-4 / person
                                                                       :name (c7-9 / name
                                                                                   :op1 "Bruce"
                                                                                   :op2 "Springsteen")))))
                  :domain (c7-0 / broadcast-program
                                :name (c7-10 / name
                                             :op1 "They"
                                             :op2 "Call"
                                             :op3 "Me"
                                             :op4 "Bruce"))
                  :polarity -)
      :snt3 (c7-14 / thank-01
                   :ARG1 c7-6
                   :name (c7-12 / name
                                :op1 "Tiger"
                                :op2 "Beat"
                                :op3 "Magazine")
                   :mode expressive))

# ::snt Rick Springfield had a song by the same name in the s Yes. I'm old.
# ::tokens ["Rick", "Springfield", "had", "a", "song", "by", "the", "same", "name", "in", "the", "s", "Yes", ".", "I", "'m", "old", "."]
# ::lemmas ["Rick", "Springfield", "have", "a", "song", "by", "the", "same", "name", "in", "the", "s", "yes", ".", "i", "be", "old", "."]
(c8-3 / multi-sentence
      :snt1 (c8-5 / have-03
                  :ARG0 (c8-6 / person
                              :name (c8-2 / name
                                          :op1 "Rick"
                                          :op2 "Springfield"))
                  :ARG1 (c8-4 / song
                              :ARG1-of (c8-0 / same-01
                                             :ARG2 (c8-7 / name
                                                         :op1 "Yes"))))
      :snt2 (c8-1 / old
                  :domain (c8-8 / i)))

# ::snt She or he hasnt done shit
# ::tokens ["She", "or", "he", "has", "nt", "done", "shit"]
# ::lemmas ["she", "or", "he", "have", "not", "do", "shit"]
(c10-4 / do-02
       :ARG0 (c10-1 / or
                    :op1 (c10-2 / she)
                    :op2 (c10-3 / he))
       :ARG1 (c10-0 / shit)
       :polarity -)

# ::snt She voted for him
# ::tokens ["She", "voted", "for", "him"]
# ::lemmas ["she", "vote", "for", "he"]
(c12-0 / vote-01
       :ARG0 (c12-2 / she)
       :ARG1 (c12-1 / he))

# ::snt So, it's all a secret, eh? Is that why none of it is working? Maybe she should just stop supporting the party that is destroying the community she allegedly advocates for.
# ::tokens ["So", ",", "it", "'s", "all", "a", "secret", ",", "eh", "?", "Is", "that", "why", "none", "of", "it", "is", "working", "?", "Maybe", "she", "should", "just", "stop", "supporting", "the", "party", "that", "is", "destroying", "the", "community", "she", "allegedly", "advocates", "for", "."]
# ::lemmas ["so", ",", "it", "be", "all", "a", "secret", ",", "eh", "?", "be", "that", "why", "none", "of", "it", "be", "work", "?", "maybe", "she", "should", "just", "stop", "support", "the", "party", "that", "be", "destroy", "the", "community", "she", "allegedly", "advocate", "for", "."]
(c13-12 / multi-sentence
        :snt1 (c13-0 / secret
                     :domain (c13-21 / it
                                     :mod (c13-9 / all))
                     :ARG1-of (c13-18 / request-confirmation-91))
        :snt2 (c13-15 / cause-01
                      :ARG0 (c13-8 / that)
                      :ARG1 (c13-20 / work-09
                                    :ARG1 (c13-16 / none
                                                  :ARG1-of (c13-4 / include-91
                                                                  :ARG2 (c13-10 / it))))
                      :polarity (c13-7 / amr-unknown))
        :snt3 (c13-19 / possible-01
                      :ARG1 (c13-1 / recommend-01
                                   :ARG1 (c13-3 / stop-01
                                                :ARG0 (c13-2 / she)
                                                :ARG1 (c13-17 / support-01
                                                              :ARG0 c13-2
                                                              :ARG1 (c13-13 / party
                                                                            :ARG0-of (c13-22 / destroy-01
                                                                                             :ARG1 (c13-11 / community
                                                                                                           :ARG1-of (c13-5 / advocate-01
                                                                                                                           :ARG0 c13-2
                                                                                                                           :ARG1-of (c13-14 / allege-01))))))
                                                :mod (c13-6 / just)))))

# ::snt "secretly"aka, she's not.
# ::tokens ["\"", "secretly\"aka", ",", "she", "'s", "not", "."]
# ::lemmas ["\"", "secretly\"aka", ",", "she", "be", "not", "."]
(c14-1 / have-polarity-91
       :ARG1 (c14-2 / she)
       :ARG1-of (c14-0 / secret-00)
       :ARG2 -)

# ::snt Im sure shes good at keeping secrets
# ::tokens ["I", "m", "sure", "she", "s", "good", "at", "keeping", "secrets"]
# ::lemmas ["i", "m", "sure", "she", "s", "good", "at", "keep", "secret"]
(c16-1 / sure-02
       :ARG0 (c16-3 / i)
       :ARG1 (c16-4 / good-03
                    :ARG1 (c16-0 / she)
                    :ARG2 (c16-2 / keep-01
                                 :ARG0 c16-0
                                 :ARG1 (c16-5 / secret))))

# ::snt No one cares!
# ::tokens ["No", "one", "cares", "!"]
# ::lemmas ["no", "one", "care", "!"]
(c17-0 / care-01
       :ARG0 (c17-1 / no-one))

# ::snt "A day late &amp; a dollar short" as my grandmother used to say.
# ::tokens ["\"", "A", "day", "late", "&", "amp", ";", "a", "dollar", "short", "\"", "as", "my", "grandmother", "used", "to", "say", "."]
# ::lemmas ["\"", "a", "day", "late", "&", "amp", ";", "a", "dollar", "short", "\"", "as", "my", "grandmother", "use", "to", "say", "."]
(c18-1 / say-01
       :ARG0 (c18-3 / person
                    :ARG0-of (c18-2 / have-rel-role-91
                                    :ARG1 (c18-6 / i)
                                    :ARG2 (c18-8 / grandmother)))
       :ARG1 (c18-7 / and
                    :op1 (c18-4 / late-02
                                :ARG1 (c18-9 / day))
                    :op2 (c18-0 / short-06
                                :ARG2 (c18-5 / dollar)))
       :time (c18-10 / use-03))

# ::snt Sorry Bruce!
# ::tokens ["Sorry", "Bruce", "!"]
# ::lemmas ["Sorry", "Bruce", "!"]
(c19-3 / say-01
       :ARG1 (c19-0 / sorry-01)
       :ARG2 (c19-2 / person
                    :name (c19-1 / name
                                 :op1 "Bruce")))

# ::snt How, I secretly don't believe in any of Caitlyn's political efforts.
# ::tokens ["How", ",", "I", "secretly", "do", "n't", "believe", "in", "any", "of", "Caitlyn", "'s", "political", "efforts", "."]
# ::lemmas ["how", ",", "i", "secretly", "do", "not", "believe", "in", "any", "of", "Caitlyn", "'s", "political", "effort", "."]
(c21-0 / believe-01
       :ARG0 (c21-6 / i)
       :ARG1 (c21-4 / effort-01
                    :ARG0 (c21-5 / person
                                 :name (c21-1 / name
                                              :op1 "Caitlyn"))
                    :mod (c21-2 / politics)
                    :mod (c21-7 / any))
       :manner (c21-3 / secret)
       :manner (c21-8 / amr-unknown)
       :polarity -)

# ::snt She was kind as Bruce a Trump supporter as Caitlynenough said.
# ::tokens ["She", "was", "kind", "as", "Bruce", "a", "Trump", "supporter", "as", "Caitlynenough", "said", "."]
# ::lemmas ["she", "be", "kind", "as", "Bruce", "a", "Trump", "supporter", "as", "Caitlynenough", "say", "."]
(c22-5 / kind-01
       :ARG0 (c22-3 / she)
       :ARG1 (c22-0 / support-01
                    :ARG0 (c22-6 / person
                                 :name (c22-1 / name
                                              :op1 "Bruce"))
                    :ARG1 (c22-2 / person
                                 :name (c22-4 / name
                                              :op1 "Trump")))
       :ARG1-of (c22-9 / say-01
                       :ARG0 (c22-8 / person
                                    :name (c22-7 / name
                                                 :op1 "Caitlynenough"))))

# ::snt So did she retired her Trump Grabbed me by my pussy shirt? The only thing Jenner has done is proven trans people can be just as big of shitbags as the rest of the population.
# ::tokens ["So", "did", "she", "retired", "her", "Trump", "Grabbed", "me", "by", "my", "pussy", "shirt", "?", "The", "only", "thing", "Jenner", "has", "done", "is", "proven", "trans", "people", "can", "be", "just", "as", "big", "of", "shitbags", "as", "the", "rest", "of", "the", "population", "."]
# ::lemmas ["so", "do", "she", "retire", "her", "Trump", "Grabbed", "i", "by", "my", "pussy", "shirt", "?", "the", "only", "thing", "Jenner", "have", "do", "be", "prove", "trans", "people", "can", "be", "just", "as", "big", "of", "shitbag", "as", "the", "rest", "of", "the", "population", "."]
(c23-11 / multi-sentence
        :snt1 (c23-14 / cause-01
                      :ARG1 (c23-17 / retire-01
                                    :ARG0 (c23-0 / she)
                                    :ARG1 (c23-9 / grab-01
                                                 :ARG0 (c23-19 / person
                                                               :name (c23-16 / name
                                                                             :op1 "Trump"))
                                                 :ARG1 (c23-20 / i)
                                                 :ARG2 (c23-4 / shirt
                                                              :mod (c23-12 / pussy)
                                                              :poss c23-20))))
        :snt2 (c23-21 / do-02
                      :ARG0 (c23-2 / person
                                   :name (c23-13 / name
                                                 :op1 "Jenner"))
                      :ARG1 (c23-1 / prove-01
                                   :ARG0 c23-2
                                   :ARG1 (c23-7 / possible-01
                                                :ARG1 (c23-6 / have-degree-91
                                                             :ARG1 (c23-22 / person
                                                                           :mod (c23-8 / trans))
                                                             :ARG2 (c23-10 / big)
                                                             :ARG3 (c23-18 / equal)
                                                             :ARG4 (c23-3 / rest
                                                                          :part-of (c23-15 / population))))
                                   :mod (c23-5 / only))))

# ::snt you look nice in this pic Caitlyn
# ::tokens ["you", "look", "nice", "in", "this", "pic", "Caitlyn"]
# ::lemmas ["you", "look", "nice", "in", "this", "pic", "Caitlyn"]
(c24-2 / say-01
       :ARG0 (c24-6 / i)
       :ARG1 (c24-5 / look-02
                    :ARG0 (c24-4 / person
                                 :name (c24-0 / name
                                              :op1 "Caitlyn"))
                    :ARG1 (c24-3 / nice-01
                                 :ARG1 c24-4)
                    :location (c24-1 / pic
                                     :mod (c24-7 / this)))
       :ARG2 c24-4)

# ::snt Narrator: She's not.
# ::tokens ["Narrator", ":", "She", "'s", "not", "."]
# ::lemmas ["narrator", ":", "she", "be", "not", "."]
(c25-2 / say-01
       :ARG0 (c25-4 / person
                    :ARG0-of (c25-1 / narrate-01))
       :ARG1 (c25-3 / have-polarity-91
                    :ARG1 (c25-0 / she)
                    :ARG2 -))

# ::snt Oh cool, a murderer is uhhh secretly fighting the pos in office... maybe edit your title. That person murdered someone or did you forget vanity fair
# ::tokens ["Oh", "cool", ",", "a", "murderer", "is", "uhhh", "secretly", "fighting", "the", "pos", "in", "office", "...", "maybe", "edit", "your", "title", ".", "That", "person", "murdered", "someone", "or", "did", "you", "forget", "vanity", "fair"]
# ::lemmas ["oh", "cool", ",", "a", "murderer", "be", "uhhh", "secretly", "fight", "the", "pos", "in", "office", "...", "maybe", "edit", "your", "title", ".", "that", "person", "murder", "someone", "or", "do", "you", "forget", "vanity", "fair"]
(c26-12 / multi-sentence
        :snt1 (c26-14 / cool-04
                      :ARG1 (c26-17 / fight-01
                                    :ARG0 (c26-19 / person
                                                  :ARG0-of (c26-7 / murder-01))
                                    :ARG1 (c26-13 / person
                                                  :mod (c26-2 / pos)
                                                  :location (c26-3 / office))
                                    :manner (c26-0 / secret)
                                    :mod (c26-11 / oh
                                                 :mode expressive)))
        :snt2 (c26-1 / possible-01
                     :ARG1 (c26-18 / edit-01
                                   :ARG0 (c26-5 / you)
                                   :ARG1 (c26-10 / title
                                                 :poss c26-5)))
        :snt3 (c26-9 / amr-choice
                     :op1 (c26-16 / murder-01
                                  :ARG0 (c26-8 / person
                                               :mod (c26-15 / that))
                                  :ARG1 (c26-4 / someone))
                     :op2 (c26-20 / forget-01
                                  :ARG0 c26-5
                                  :ARG1 (c26-21 / fair-01
                                                :ARG1 (c26-6 / vanity)))))

# ::snt By dressing up as a man!!!
# ::tokens ["By", "dressing", "up", "as", "a", "man", "!", "!", "!"]
# ::lemmas ["by", "dress", "up", "as", "a", "man", "!", "!", "!"]
(c27-1 / have-manner-91
       :ARG2 (c27-0 / dress-up-02
                    :ARG2 (c27-2 / man)))

# ::snt Keep it.
# ::tokens ["Keep", "it", "."]
# ::lemmas ["keep", "it", "."]
(c28-1 / keep-01
       :ARG0 (c28-0 / you)
       :ARG1 (c28-2 / it)
       :mode imperative)

# ::snt nah
# ::tokens ["nah"]
# ::lemmas ["nah"]
(c29-0 / nah)

# ::snt Who cares ? She supported this disaster or a president in the first place.
# ::tokens ["Who", "cares", "?", "She", "supported", "this", "disaster", "or", "a", "president", "in", "the", "first", "place", "."]
# ::lemmas ["who", "care", "?", "she", "support", "this", "disaster", "or", "a", "president", "in", "the", "first", "place", "."]
(c30-2 / multi-sentence
       :snt1 (c30-7 / care-01
                    :ARG0 (c30-10 / amr-unknown))
       :snt2 (c30-4 / support-01
                    :ARG0 (c30-0 / she)
                    :ARG1 (c30-1 / or
                                 :op1 (c30-11 / disaster
                                              :mod (c30-8 / this))
                                 :op2 (c30-6 / person
                                             :ARG0-of (c30-5 / have-org-role-91
                                                             :ARG2 (c30-3 / president))))
                    :mod (c30-9 / in-the-first-place)))

# ::snt She can go to hell, she was supporting Trump from the beginning.
# ::tokens ["She", "can", "go", "to", "hell", ",", "she", "was", "supporting", "Trump", "from", "the", "beginning", "."]
# ::lemmas ["she", "can", "go", "to", "hell", ",", "she", "be", "support", "Trump", "from", "the", "beginning", "."]
(c31-8 / cause-01
       :ARG0 (c31-5 / support-01
                    :ARG0 (c31-0 / she)
                    :ARG1 (c31-7 / person
                                 :name (c31-3 / name
                                              :op1 "Trump"))
                    :time (c31-1 / from
                                 :op1 (c31-2 / begin-01)))
       :ARG1 (c31-4 / possible-01
                    :ARG1 (c31-9 / go-02
                                 :ARG0 c31-0
                                 :ARG4 (c31-6 / hell))))
