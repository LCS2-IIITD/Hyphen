# ::snt I am hoping that Mayor Walsh will not forget the back roads in Dorchester as he prepares for this coming winter. please do share the salt with us, we do pay taxes also. we are part of Boston although we are not in the downtown area. .
# ::tokens ["I", "am", "hoping", "that", "Mayor", "Walsh", "will", "not", "forget", "the", "back", "roads", "in", "Dorchester", "as", "he", "prepares", "for", "this", "coming", "winter", ".", "please", "do", "share", "the", "salt", "with", "us", ",", "we", "do", "pay", "taxes", "also", ".", "we", "are", "part", "of", "Boston", "although", "we", "are", "not", "in", "the", "downtown", "area", ".", "."]
# ::lemmas ["i", "be", "hope", "that", "Mayor", "Walsh", "will", "not", "forget", "the", "back", "road", "in", "Dorchester", "as", "he", "prepare", "for", "this", "coming", "winter", ".", "please", "do", "share", "the", "salt", "with", "we", ",", "we", "do", "pay", "taxis", "also", ".", "we", "be", "part", "of", "Boston", "although", "we", "be", "not", "in", "the", "downtown", "area", ".", "."]
(c1-16 / multi-sentence
       :snt1 (c1-8 / hope-01
                   :ARG0 (c1-30 / i)
                   :ARG1 (c1-23 / forget-01
                                :ARG0 (c1-26 / person
                                             :name (c1-24 / name
                                                          :op1 "Walsh")
                                             :ARG0-of (c1-29 / have-org-role-91
                                                             :ARG2 (c1-9 / mayor)))
                                :ARG1 (c1-25 / road
                                             :mod (c1-15 / back)
                                             :location (c1-19 / city-district
                                                              :name (c1-18 / name
                                                                           :op1 "Dorchester")))
                                :time (c1-17 / prepare-02
                                             :ARG0 c1-26
                                             :ARG1 c1-26
                                             :ARG2 (c1-28 / winter
                                                          :ARG1-of (c1-14 / come-01)
                                                          :mod (c1-13 / this)))
                                :polarity -))
       :snt2 (c1-12 / and
                    :op1 (c1-0 / share-01
                               :ARG0 (c1-6 / you)
                               :ARG1 (c1-5 / salt)
                               :ARG2 (c1-2 / we)
                               :mode imperative
                               :polite +)
                    :op2 (c1-4 / pay-01
                               :ARG0 c1-6
                               :ARG1 (c1-21 / monetary-quantity
                                            :ARG1-of (c1-20 / tax-01))
                               :mod (c1-11 / also)
                               :mode imperative))
       :snt3 (c1-7 / have-part-91
                   :ARG1 (c1-3 / city
                               :name (c1-27 / name
                                            :op1 "Boston"))
                   :ARG2 (c1-22 / we)
                   :concession (c1-1 / be-located-at-91
                                     :ARG1 c1-22
                                     :ARG2 (c1-10 / area
                                                  :mod (c1-31 / downtown))
                                     :polarity -)))

# ::snt Dude... it's LA
# ::tokens ["Dude", "...", "it", "'s", "LA"]
# ::lemmas ["dude", "...", "it", "be", "LA"]
(c2-1 / say-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-2 / city
                  :name (c2-0 / name
                              :op1 "LA"))
      :ARG2 (c2-4 / dude))

# ::snt Same! And it only gives it a bad name to twisty people. Normal people know for a fine fact shit like is way more interesting.
# ::tokens ["Same", "!", "And", "it", "only", "gives", "it", "a", "bad", "name", "to", "twisty", "people", ".", "Normal", "people", "know", "for", "a", "fine", "fact", "shit", "like", "is", "way", "more", "interesting", "."]
# ::lemmas ["same", "!", "and", "it", "only", "give", "it", "a", "bad", "name", "to", "twisty", "people", ".", "normal", "people", "know", "for", "a", "fine", "fact", "shit", "like", "be", "way", "more", "interesting", "."]
(c3-10 / multi-sentence
       :snt1 (c3-7 / and
                   :op2 (c3-8 / give-01
                              :ARG0 (c3-19 / it)
                              :ARG1 (c3-14 / name
                                           :ARG1-of (c3-9 / bad-07))
                              :ARG2 (c3-16 / person
                                           :mod (c3-6 / twisty))
                              :mod (c3-1 / only)))
       :snt2 (c3-4 / know-01
                   :ARG0 (c3-11 / person
                                :ARG1-of (c3-12 / normal-02))
                   :ARG1 (c3-0 / shit
                               :ARG1-of (c3-15 / resemble-01
                                               :ARG2 (c3-13 / fact
                                                            :ARG1-of (c3-17 / fine-03)))
                               :ARG1-of (c3-3 / have-degree-91
                                              :ARG2 (c3-2 / interest-01
                                                          :ARG0 c3-0)
                                              :ARG3 (c3-5 / more
                                                          :quant (c3-18 / way))))))

# ::snt I was excited but now I'm waiting like a little boy for Christmas. Ok gives it a bad name in some way but also promotes UFC
# ::tokens ["I", "was", "excited", "but", "now", "I", "'m", "waiting", "like", "a", "little", "boy", "for", "Christmas", ".", "Ok", "gives", "it", "a", "bad", "name", "in", "some", "way", "but", "also", "promotes", "UFC"]
# ::lemmas ["i", "be", "excited", "but", "now", "i", "be", "wait", "like", "a", "little", "boy", "for", "Christmas", ".", "ok", "give", "it", "a", "bad", "name", "in", "some", "way", "but", "also", "promote", "UFC"]
(c4-9 / multi-sentence
      :snt1 (c4-12 / contrast-01
                   :ARG1 (c4-17 / excite-01
                                :ARG1 (c4-22 / i))
                   :ARG2 (c4-20 / wait-01
                                :ARG1 c4-22
                                :ARG2 (c4-14 / festival
                                             :name (c4-15 / name
                                                          :op1 "Christmas"))
                                :ARG1-of (c4-16 / resemble-01
                                                :ARG2 (c4-8 / boy
                                                            :mod (c4-2 / little))))
                   :time (c4-11 / now))
      :snt2 (c4-7 / contrast-01
                  :ARG1 (c4-6 / give-01
                              :ARG0 (c4-18 / person
                                           :name (c4-19 / name
                                                        :op1 "Ok"))
                              :ARG1 (c4-13 / name
                                           :ARG1-of (c4-1 / bad-07))
                              :ARG2 (c4-4 / it)
                              :manner (c4-0 / some))
                  :ARG2 (c4-10 / promote-02
                               :ARG0 c4-18
                               :ARG1 (c4-3 / organization
                                           :name (c4-21 / name
                                                        :op1 "UFC"))
                               :mod (c4-5 / also))))

# ::snt The clever them two man! Best fight sellers in the game its gonna be massive! Praying McGregor gets the win haha
# ::tokens ["The", "clever", "them", "two", "man", "!", "Best", "fight", "sellers", "in", "the", "game", "its", "gon", "na", "be", "massive", "!", "Praying", "McGregor", "gets", "the", "win", "haha"]
# ::lemmas ["the", "clever", "they", "two", "man", "!", "good", "fight", "seller", "in", "the", "game", "its", "going", "to", "be", "massive", "!", "Praying", "McGregor", "get", "the", "win", "haha"]
(c5-9 / multi-sentence
      :snt1 (c5-4 / man
                  :ARG1-of (c5-11 / clever-01)
                  :domain (c5-6 / they))
      :snt2 (c5-12 / massive
                   :domain (c5-18 / it)
                   :ARG1-of (c5-8 / cause-01
                                  :ARG0 (c5-0 / sell-01
                                              :ARG1 (c5-13 / fight-01)
                                              :location (c5-7 / game)
                                              :ARG1-of (c5-5 / have-degree-91
                                                             :ARG2 (c5-1 / good-03
                                                                         :ARG1 c5-0)
                                                             :ARG3 (c5-10 / most)))))
      :snt3 (c5-17 / hope-01
                   :ARG1 (c5-2 / get-01
                               :ARG0 (c5-15 / person
                                            :name (c5-14 / name
                                                         :op1 "McGregor"))
                               :ARG1 (c5-16 / win-01
                                            :ARG0 c5-15))
                   :mod (c5-3 / haha
                              :mode expressive)))

# ::snt Beautiful and precious my dear and sweet Angie
# ::tokens ["Beautiful", "and", "precious", "my", "dear", "and", "sweet", "Angie"]
# ::lemmas ["beautiful", "and", "precious", "my", "dear", "and", "sweet", "Angie"]
(c6-4 / say-01
      :ARG1 (c6-7 / and
                  :op1 (c6-1 / beautiful-02)
                  :op2 (c6-5 / precious))
      :ARG2 (c6-3 / person
                  :name (c6-2 / name
                              :op1 "Angie")
                  :ARG1-of (c6-0 / sweet-03)
                  :poss (c6-6 / i)
                  :mod (c6-8 / dear)))

# ::snt He looks like ass the video like a hell of a hangover and asked to Please Explain....
# ::tokens ["He", "looks", "like", "ass", "the", "video", "like", "a", "hell", "of", "a", "hangover", "and", "asked", "to", "Please", "Explain", "...."]
# ::lemmas ["he", "look", "like", "ass", "the", "video", "like", "a", "hell", "of", "a", "hangover", "and", "ask", "to", "please", "explain", "...."]
(c8-8 / and
      :op1 (c8-3 / look-02
                 :ARG0 (c8-2 / he)
                 :ARG1 (c8-7 / ass)
                 :ARG2 (c8-0 / video)
                 :ARG3 (c8-6 / hangover
                             :degree (c8-1 / hell)))
      :op2 (c8-5 / ask-02
                 :ARG0 c8-2
                 :ARG1 (c8-4 / explain-01
                             :ARG0 c8-2
                             :polite +)
                 :ARG2 c8-2))

# ::snt Of course he has no idea about the Perisic move.
# ::tokens ["Of", "course", "he", "has", "no", "idea", "about", "the", "Perisic", "move", "."]
# ::lemmas ["of", "course", "he", "have", "no", "idea", "about", "the", "Perisic", "move", "."]
(c9-3 / have-03
      :ARG0 (c9-5 / he)
      :ARG1 (c9-6 / idea
                  :topic (c9-1 / move-02
                               :ARG0 (c9-4 / person
                                           :name (c9-2 / name
                                                       :op1 "Perisic"))))
      :mod (c9-0 / of-course)
      :polarity -)

# ::snt They're pretty much competitive RPG's.
# ::tokens ["They", "'re", "pretty", "much", "competitive", "RPG", "'s", "."]
# ::lemmas ["they", "be", "pretty", "much", "competitive", "RPG", "'s", "."]
(c10-0 / compete-01
       :ARG3 (c10-2 / product
                    :name (c10-1 / name
                                 :op1 "PGR"))
       :degree (c10-3 / pretty-much))

# ::snt I love the "They're not real games" variety of salt
# ::tokens ["I", "love", "the", "\"", "They", "'re", "not", "real", "games", "\"", "variety", "of", "salt"]
# ::lemmas ["i", "love", "the", "\"", "they", "be", "not", "real", "game", "\"", "variety", "of", "salt"]
(c11-3 / love-01
       :ARG0 (c11-4 / i)
       :ARG1 (c11-2 / variety
                    :mod (c11-6 / game
                                :ARG1-of (c11-1 / real-04
                                                :polarity -)
                                :domain (c11-5 / they))
                    :mod (c11-0 / salt)))

# ::snt Standing in line at the DMV with no reservation.
# ::tokens ["Standing", "in", "line", "at", "the", "DMV", "with", "no", "reservation", "."]
# ::lemmas ["stand", "in", "line", "at", "the", "DMV", "with", "no", "reservation", "."]
(c12-1 / stand-01
       :ARG2 (c12-3 / line)
       :location (c12-4 / government-organization
                        :name (c12-0 / name
                                     :op1 "DMV"))
       :manner (c12-2 / reservation
                      :polarity -))

# ::snt trying to pee in an Andy Gump porta potty on a degree day
# ::tokens ["trying", "to", "pee", "in", "an", "Andy", "Gump", "porta", "potty", "on", "a", "degree", "day"]
# ::lemmas ["try", "to", "pee", "in", "an", "Andy", "Gump", "porta", "potty", "on", "a", "degree", "day"]
(c13-5 / try-01
       :ARG1 (c13-2 / pee-01
                    :ARG1 (c13-1 / potty
                                 :mod (c13-6 / person
                                             :name (c13-0 / name
                                                          :op1 "Andy"
                                                          :op2 "Gump"))
                                 :mod (c13-3 / porta)))
       :time (c13-7 / day
                    :mod (c13-4 / degree)))

# ::snt Standing at Disneyland when it's % filled to capacity at AM.
# ::tokens ["Standing", "at", "Disneyland", "when", "it", "'s", "%", "filled", "to", "capacity", "at", "AM", "."]
# ::lemmas ["stand", "at", "Disneyland", "when", "it", "be", "%", "fill", "to", "capacity", "at", "AM", "."]
(c14-2 / stand-01
       :ARG2 (c14-5 / amusement-park
                    :name (c14-1 / name
                                 :op1 "Disneyland"))
       :time (c14-0 / fill-01
                    :ARG1 c14-5
                    :ARG2 (c14-4 / capacity)
                    :degree (c14-3 / percentage-entity)
                    :time (c14-6 / date-entity
                                 :time "AM")))

# ::snt being in line at the grocery store behind somebody paying a $100 tab with all pennies
# ::tokens ["being", "in", "line", "at", "the", "grocery", "store", "behind", "somebody", "paying", "a", "$", "100", "tab", "with", "all", "pennies"]
# ::lemmas ["be", "in", "line", "at", "the", "grocery", "store", "behind", "somebody", "pay", "a", "$", "100", "tab", "with", "all", "penny"]
(c15-6 / line-up-02
       :ARG2 (c15-4 / store
                    :mod (c15-9 / grocery))
       :location (c15-1 / behind
                        :op1 (c15-0 / somebody
                                    :ARG0-of (c15-7 / pay-01
                                                    :ARG1 (c15-8 / tab
                                                                 :mod (c15-2 / monetary-quantity
                                                                             :unit (c15-10 / dollar)
                                                                             :quant 100)
                                                                 :accompanier (c15-3 / penny
                                                                                     :mod (c15-5 / all)))))))

# ::snt On the , sitting in behind a car pile up.
# ::tokens ["On", "the", ",", "sitting", "in", "behind", "a", "car", "pile", "up", "."]
# ::lemmas ["on", "the", ",", "sit", "in", "behind", "a", "car", "pile", "up", "."]
(c16-2 / pile-up-02
       :ARG1 (c16-3 / sit-01
                    :ARG2 (c16-1 / behind
                                 :op1 (c16-0 / car))))

# ::snt sitting in L.A. traffic
# ::tokens ["sitting", "in", "L.A.", "traffic"]
# ::lemmas ["sit", "in", "L.A.", "traffic"]
(c17-3 / sit-01
       :ARG2 (c17-2 / traffic
                    :mod (c17-0 / city
                                :name (c17-1 / name
                                             :op1 "L.A."))))

# ::snt Watching paint dry.
# ::tokens ["Watching", "paint", "dry", "."]
# ::lemmas ["watch", "paint", "dry", "."]
(c18-0 / watch-01
       :ARG1 (c18-2 / dry-02
                    :ARG1 (c18-1 / paint)))

# ::snt I'll give you that one
# ::tokens ["I", "'ll", "give", "you", "that", "one"]
# ::lemmas ["i", "'ll", "give", "you", "that", "one"]
(c19-4 / give-01
       :ARG0 (c19-2 / i)
       :ARG1 (c19-0 / one
                    :mod (c19-3 / that))
       :ARG2 (c19-1 / you))

# ::snt I was right Tommy boy!!! And the media lapped it up
# ::tokens ["I", "was", "right", "Tommy", "boy", "!", "!", "!", "And", "the", "media", "lapped", "it", "up"]
# ::lemmas ["i", "be", "right", "Tommy", "boy", "!", "!", "!", "and", "the", "medium", "lap", "it", "up"]
(c20-1 / multi-sentence
       :snt1 (c20-3 / right-06
                    :ARG1 (c20-7 / i)
                    :ARG2 (c20-5 / person
                                 :name (c20-0 / name
                                              :op1 "Tommy"
                                              :op2 "Boy")))
       :snt2 (c20-8 / and
                    :op2 (c20-6 / lap-up-02
                                :ARG0 (c20-4 / media)
                                :ARG1 (c20-2 / it))))

# ::snt have t wait and see !
# ::tokens ["have", "t", "wait", "and", "see", "!"]
# ::lemmas ["have", "t", "wait", "and", "see", "!"]
(c21-3 / and
       :op1 (c21-1 / wait-01
                   :ARG1 (c21-2 / you)
                   :polarity -)
       :op2 (c21-0 / see-01
                   :ARG0 c21-2
                   :polarity -))

# ::snt and beat him easy!!! Still talks nonsense and will % fight again
# ::tokens ["and", "beat", "him", "easy", "!", "!", "!", "Still", "talks", "nonsense", "and", "will", "%", "fight", "again"]
# ::lemmas ["and", "beat", "he", "easy", "!", "!", "!", "still", "talk", "nonsense", "and", "will", "%", "fight", "again"]
(c22-2 / multi-sentence
       :snt1 (c22-12 / and
                     :op2 (c22-1 / beat-03
                                 :ARG1 (c22-6 / he)
                                 :ARG1-of (c22-5 / easy-05)))
       :snt2 (c22-11 / and
                     :op1 (c22-10 / talk-01
                                  :ARG1 (c22-3 / nonsense)
                                  :mod (c22-4 / still))
                     :op2 (c22-0 / fight-01
                                 :ARG2 (c22-9 / he)
                                 :mod (c22-8 / again)
                                 :degree (c22-7 / percentage-entity
                                                :value 40))))

# ::snt beat klitschko though
# ::tokens ["beat", "klitschko", "though"]
# ::lemmas ["beat", "klitschko", "though"]
(c23-2 / have-concession-91
       :ARG2 (c23-1 / beat-03
                    :ARG1 (c23-3 / person
                                 :name (c23-0 / name
                                              :op1 "Klitschko"))))

# ::snt I WANNA GO AS A GUEST ;w;
# ::tokens ["I", "WANNA", "GO", "AS", "A", "GUEST", ";", "w", ";"]
# ::lemmas ["i", "wanna", "GO", "as", "a", "GUEST", ";", "w", ";"]
(c24-0 / go-02
       :ARG0 (c24-1 / i)
       :manner (c24-2 / support-01
                      :ARG0 c24-1)
       :mode imperative)

# ::snt They'll most likely enjoy their property value rising significantly
# ::tokens ["They", "'ll", "most", "likely", "enjoy", "their", "property", "value", "rising", "significantly"]
# ::lemmas ["they", "'ll", "most", "likely", "enjoy", "their", "property", "value", "rise", "significantly"]
(c25-6 / likely-01
       :ARG1 (c25-4 / enjoy-01
                    :ARG0 (c25-8 / they)
                    :ARG1 (c25-2 / rise-01
                                 :ARG1 (c25-3 / value-01
                                              :ARG1 (c25-7 / property
                                                           :poss c25-8))
                                 :ARG2 (c25-1 / significant-02)))
       :ARG2-of (c25-5 / have-degree-91
                       :ARG1 c25-4
                       :ARG3 (c25-0 / most)))

# ::snt This is going to rock. From San Diego and living in Delaware. Really hoping the wave is like technology!
# ::tokens ["This", "is", "going", "to", "rock", ".", "From", "San", "Diego", "and", "living", "in", "Delaware", ".", "Really", "hoping", "the", "wave", "is", "like", "technology", "!"]
# ::lemmas ["this", "be", "go", "to", "rock", ".", "from", "San", "Diego", "and", "live", "in", "Delaware", ".", "really", "hope", "the", "wave", "be", "like", "technology", "!"]
(c26-1 / multi-sentence
       :snt1 (c26-4 / rock-03
                    :ARG0 (c26-11 / this))
       :snt2 (c26-12 / and
                     :op1 (c26-0 / be-from-91
                                 :ARG2 (c26-9 / city
                                              :name (c26-2 / name
                                                           :op1 "San"
                                                           :op2 "Diego")))
                     :op2 (c26-6 / live-01
                                 :location (c26-3 / state
                                                  :name (c26-5 / name
                                                               :op1 "Delaware"))))
       :snt3 (c26-7 / hope-01
                    :ARG1 (c26-13 / resemble-01
                                  :ARG1 (c26-10 / wave)
                                  :ARG2 (c26-14 / technology))
                    :degree (c26-8 / really)))

# ::snt djajdjsjdjsjd
# ::tokens ["djajdjsjdjsjd"]
# ::lemmas ["djajdjsjdjsjd"]
(c27-1 / person
       :name (c27-0 / name
                    :op1 "djajd"
                    :op2 "JSjd"
                    :op3 "jsjd"))

# ::snt Um...Budenholzer coached the Hawks for a few years. And, you know, had a win season and made the conference finals. What exactly did Kidd do that topped that?
# ::tokens ["Um", "...", "Budenholzer", "coached", "the", "Hawks", "for", "a", "few", "years", ".", "And", ",", "you", "know", ",", "had", "a", "win", "season", "and", "made", "the", "conference", "finals", ".", "What", "exactly", "did", "Kidd", "do", "that", "topped", "that", "?"]
# ::lemmas ["um", "...", "Budenholzer", "coach", "the", "Hawks", "for", "a", "few", "years", ".", "and", ",", "you", "know", ",", "have", "a", "win", "season", "and", "make", "the", "conference", "final", ".", "what", "exactly", "do", "Kidd", "do", "that", "top", "that", "?"]
(c28-10 / multi-sentence
        :snt1 (c28-13 / coach-01
                      :ARG0 (c28-19 / person
                                    :name (c28-17 / name
                                                  :op1 "Budenholzer"))
                      :ARG1 (c28-7 / team
                                   :name (c28-12 / name
                                                 :op1 "Hawks"))
                      :duration (c28-16 / few
                                        :op1 (c28-14 / temporal-quantity
                                                     :unit (c28-2 / year)
                                                     :quant 1))
                      :mod (c28-15 / um
                                   :mode expressive))
        :snt2 (c28-6 / and
                     :op1 (c28-3 / have-03
                                 :ARG0 (c28-8 / you)
                                 :ARG1 (c28-0 / season
                                              :mod (c28-22 / win-01)))
                     :op2 (c28-4 / make-18
                                 :ARG0 c28-8
                                 :ARG1 (c28-20 / final
                                               :mod (c28-9 / conference)))
                     :op3 (c28-24 / do-02
                                  :ARG0 (c28-11 / person
                                                :name (c28-21 / name
                                                              :op1 "Kidd"))
                                  :ARG1 (c28-5 / amr-unknown
                                               :mod (c28-18 / exact))
                                  :ARG0-of (c28-23 / top-01
                                                   :ARG1 (c28-1 / that)))))

# ::snt Egypt? Tf?
# ::tokens ["Egypt", "?", "Tf", "?"]
# ::lemmas ["Egypt", "?", "Tf", "?"]
(c29-1 / multi-sentence
       :snt1 (c29-4 / country
                    :name (c29-0 / name
                                 :op1 "Egypt")
                    :polarity (c29-6 / amr-unknown))
       :snt2 (c29-3 / person
                    :name (c29-2 / name
                                 :op1 "Tf")
                    :polarity (c29-5 / amr-unknown)))

# ::snt Wanted to emphasize theyre team players/wont be a hassle to LA28. But clearly eager to get moving.
# ::tokens ["Wanted", "to", "emphasize", "they", "re", "team", "players", "/", "wont", "be", "a", "hassle", "to", "LA28", ".", "But", "clearly", "eager", "to", "get", "moving", "."]
# ::lemmas ["want", "to", "emphasize", "they", "re", "team", "player", "/", "wont", "be", "a", "hassle", "to", "LA28", ".", "but", "clearly", "eager", "to", "get", "move", "."]
(c30-0 / multi-sentence
       :snt1 (c30-8 / want-01
                    :ARG1 (c30-4 / emphasize-01
                                 :ARG1 (c30-2 / slash
                                              :op1 (c30-6 / person
                                                          :ARG0-of (c30-1 / play-01
                                                                          :ARG1 (c30-10 / team))
                                                          :domain (c30-14 / they))
                                              :op2 (c30-5 / hassle-02
                                                          :ARG0 c30-14
                                                          :ARG1 c30-6
                                                          :name (c30-3 / name
                                                                       :op1 "LA28")
                                                          :polarity -))))
       :snt2 (c30-9 / contrast-01
                    :ARG2 (c30-12 / eager-01
                                  :ARG1 (c30-11 / get-03
                                                :ARG1 (c30-7 / move-01))
                                  :ARG1-of (c30-13 / clear-06))))

# ::snt kihaa olhuvaalumei kihaa baivaru dhogei hadhaalaanebaa
# ::tokens ["kihaa", "olhuvaalumei", "kihaa", "baivaru", "dhogei", "hadhaalaanebaa"]
# ::lemmas ["kihaa", "olhuvaalumei", "kihaa", "baivaru", "dhogei", "hadhaalaanebaa"]
(c31-7 / and
       :op1 (c31-3 / person
                   :name (c31-0 / name
                                :op1 "kihaa"
                                :op2 " olhuvaalumei"))
       :op2 (c31-1 / person
                   :name (c31-2 / name
                                :op1 "Khaa"
                                :op2 "Baivaru"))
       :op3 (c31-8 / person
                   :name (c31-4 / name
                                :op1 "Dhogei"))
       :op4 (c31-5 / person
                   :name (c31-6 / name
                                :op1 "Hadhaalaanebaa")))

# ::snt this is the westminster system. you elect a fresh &amp; suave-looking derek. not a leading ablutions product.
# ::tokens ["this", "is", "the", "westminster", "system", ".", "you", "elect", "a", "fresh", "&", "amp", ";", "suave", "-", "looking", "derek", ".", "not", "a", "leading", "ablutions", "product", "."]
# ::lemmas ["this", "be", "the", "westminster", "system", ".", "you", "elect", "a", "fresh", "&", "amp", ";", "suave", "-", "look", "derek", ".", "not", "a", "lead", "ablution", "product", "."]
(c32-4 / multi-sentence
       :snt1 (c32-5 / system
                    :mod (c32-12 / city
                                 :name (c32-3 / name
                                              :op1 "Westminster"))
                    :domain (c32-14 / this))
       :snt2 (c32-8 / elect-01
                    :ARG0 (c32-2 / you)
                    :ARG1 (c32-7 / and
                                 :op1 (c32-10 / product
                                              :name (c32-9 / name
                                                           :op1 "Derek")
                                              :ARG1-of (c32-0 / fresh-04)
                                              :ARG1-of (c32-11 / look-02
                                                               :ARG2 (c32-1 / suave)))
                                 :op2 (c32-6 / product
                                             :ARG0-of (c32-15 / lead-01
                                                              :ARG2 (c32-13 / ablute-01))
                                             :polarity -))))

# ::snt Haha obviously
# ::tokens ["Haha", "obviously"]
# ::lemmas ["Haha", "obviously"]
(c33-0 / obvious-01
       :mod (c33-1 / haha
                   :mode expressive))

# ::snt Obviously, you ding dong!
# ::tokens ["Obviously", ",", "you", "ding", "dong", "!"]
# ::lemmas ["obviously", ",", "you", "ding", "dong", "!"]
(c34-0 / ding-dong
       :domain (c34-1 / you)
       :ARG1-of (c34-2 / obvious-01)
       :mode expressive)

# ::snt Nice!! Are the Grizz the Avalanche new farm team?
# ::tokens ["Nice", "!", "!", "Are", "the", "Grizz", "the", "Avalanche", "new", "farm", "team", "?"]
# ::lemmas ["nice", "!", "!", "be", "the", "Grizz", "the", "Avalanche", "new", "farm", "team", "?"]
(c35-2 / multi-sentence
       :snt1 (c35-1 / nice-01
                    :mode expressive)
       :snt2 (c35-5 / team
                    :polarity (c35-6 / amr-unknown)
                    :mod (c35-0 / farm)
                    :ARG1-of (c35-3 / new-01)
                    :domain c35-5
                    :name (c35-4 / name
                                 :op1 "Gri"
                                 :op2 "the"
                                 :op3 "Av Avalanche")))

# ::snt Oh good thats good news .
# ::tokens ["Oh", "good", "that", "s", "good", "news", "."]
# ::lemmas ["oh", "good", "that", "s", "good", "news", "."]
(c36-4 / good-02
       :ARG1 (c36-1 / news
                    :domain (c36-3 / that))
       :mod (c36-0 / oh
                   :mode expressive)
       :ARG1-of (c36-2 / good-02))

# ::snt I cover Utah football signing day every year.
# ::tokens ["I", "cover", "Utah", "football", "signing", "day", "every", "year", "."]
# ::lemmas ["i", "cover", "Utah", "football", "signing", "day", "every", "year", "."]
(c37-4 / cover-03
       :ARG0 (c37-5 / i)
       :ARG1 (c37-3 / event
                    :name (c37-1 / name
                                 :op1 "Utah"
                                 :op2 "Football"
                                 :op3 "Signing"
                                 :op4 "Day"))
       :frequency (c37-2 / rate-entity-91
                         :ARG3 (c37-6 / temporal-quantity
                                      :unit (c37-0 / year)
                                      :quant 1)))

# ::snt congrats!
# ::tokens ["congrats", "!"]
# ::lemmas ["congrat", "!"]
(c38-0 / congratulate-01
       :mode expressive)

# ::snt Congratulations
# ::tokens ["Congratulations"]
# ::lemmas ["congratulation"]
(c39-0 / congratulate-01)

# ::snt Gonna be weird for you to cover a presser with recruits ranked in the top ?
# ::tokens ["Gon", "na", "be", "weird", "for", "you", "to", "cover", "a", "presser", "with", "recruits", "ranked", "in", "the", "top", "?"]
# ::lemmas ["going", "to", "be", "weird", "for", "you", "to", "cover", "a", "presser", "with", "recruit", "rank", "in", "the", "top", "?"]
(c40-4 / weird
       :polarity (c40-7 / amr-unknown)
       :domain (c40-5 / cover-03
                      :ARG0 (c40-0 / you)
                      :ARG1 (c40-3 / person
                                   :ARG0-of (c40-1 / press-01)
                                   :ARG1-of (c40-2 / recruit-01
                                                   :ARG1-of (c40-8 / rank-01
                                                                   :ARG2 (c40-6 / top))))))

# ::snt you've given this team so much Javi! If you have to leave, you deserve a better goodbye! We you! You always have a home in SLC!
# ::tokens ["you", "'ve", "given", "this", "team", "so", "much", "Javi", "!", "If", "you", "have", "to", "leave", ",", "you", "deserve", "a", "better", "goodbye", "!", "We", "you", "!", "You", "always", "have", "a", "home", "in", "SLC", "!"]
# ::lemmas ["you", "'ve", "give", "this", "team", "so", "much", "Javi", "!", "if", "you", "have", "to", "leave", ",", "you", "deserve", "a", "well", "goodbye", "!", "we", "you", "!", "you", "always", "have", "a", "home", "in", "SLC", "!"]
(c41-15 / multi-sentence
        :snt1 (c41-0 / say-01
                     :ARG0 (c41-25 / i)
                     :ARG1 (c41-12 / give-01
                                   :ARG0 (c41-22 / person
                                                 :name (c41-21 / name
                                                               :op1 "Javi"))
                                   :ARG1 (c41-11 / thing
                                                 :ARG1-of (c41-9 / have-quant-91
                                                                 :ARG2 (c41-10 / much)
                                                                 :ARG3 (c41-5 / so)))
                                   :ARG2 (c41-18 / team
                                                 :mod (c41-26 / this)))
                     :ARG2 c41-22)
        :snt2 (c41-27 / deserve-01
                      :ARG0 (c41-7 / you)
                      :ARG1 (c41-2 / goodbye
                                   :ARG1-of (c41-24 / have-degree-91
                                                    :ARG2 (c41-3 / good-02
                                                                 :ARG1 c41-2)
                                                    :ARG3 (c41-20 / more)))
                      :condition (c41-6 / obligate-01
                                        :ARG1 c41-7
                                        :ARG2 (c41-1 / leave-11
                                                     :ARG0 c41-7)))
        :snt3 (c41-23 / we
                      :domain (c41-13 / you))
        :snt4 (c41-8 / have-03
                     :ARG0 (c41-4 / you)
                     :ARG1 (c41-19 / home
                                   :location (c41-17 / city
                                                     :name (c41-16 / name
                                                                   :op1 "SLC")))
                     :time (c41-14 / always)))

# ::snt We love you Javi! The last thing we want is you gone. You will always be synonymous with RSL, you deserve so much better! SO sad!
# ::tokens ["We", "love", "you", "Javi", "!", "The", "last", "thing", "we", "want", "is", "you", "gone", ".", "You", "will", "always", "be", "synonymous", "with", "RSL", ",", "you", "deserve", "so", "much", "better", "!", "SO", "sad", "!"]
# ::lemmas ["we", "love", "you", "Javi", "!", "the", "last", "thing", "we", "want", "be", "you", "go", ".", "you", "will", "always", "be", "synonymous", "with", "RSL", ",", "you", "deserve", "so", "much", "well", "!", "so", "sad", "!"]
(c42-14 / multi-sentence
        :snt1 (c42-1 / love-01
                     :ARG0 (c42-21 / we)
                     :ARG1 (c42-20 / person
                                   :name (c42-19 / name
                                                 :op1 "Javi")))
        :snt2 (c42-2 / want-01
                     :ARG0 (c42-18 / we)
                     :ARG1 (c42-12 / go-02
                                   :ARG0 c42-20)
                     :mod (c42-13 / last))
        :snt3 (c42-0 / synonymous
                     :domain (c42-6 / you)
                     :prep-with (c42-16 / company
                                        :name (c42-15 / name
                                                      :op1 "RSL"))
                     :time (c42-11 / always))
        :snt4 (c42-22 / deserve-01
                      :ARG0 (c42-10 / you)
                      :ARG1 (c42-9 / thing
                                   :ARG1-of (c42-7 / have-degree-91
                                                   :ARG2 (c42-3 / good-02
                                                                :ARG1 c42-9)
                                                   :ARG3 (c42-8 / more
                                                                :quant (c42-17 / much
                                                                               :degree (c42-5 / so)))))
                      :snt5 (c42-4 / sad-02
                                   :degree c42-5)))

# ::snt We (the fans) want you here Javi. I believe the formation doesn't play to your strengths and if the FO wants the -3-3 it's on them
# ::tokens ["We", "(", "the", "fans", ")", "want", "you", "here", "Javi", ".", "I", "believe", "the", "formation", "does", "n't", "play", "to", "your", "strengths", "and", "if", "the", "FO", "wants", "the", "-3", "-", "3", "it", "'s", "on", "them"]
# ::lemmas ["we", "(", "the", "fan", ")", "want", "you", "here", "Javi", ".", "i", "believe", "the", "formation", "do", "not", "play", "to", "your", "strength", "and", "if", "the", "FO", "want", "the", "-3", "-", "3", "it", "be", "on", "they"]
(c43-10 / multi-sentence
        :snt1 (c43-1 / say-01
                     :ARG0 (c43-20 / i)
                     :ARG1 (c43-18 / want-01
                                   :ARG0 (c43-3 / we
                                                :mod (c43-13 / fan))
                                   :ARG1 (c43-9 / be-located-at-91
                                                :ARG1 (c43-16 / person
                                                              :name (c43-14 / name
                                                                            :op1 "Javi"))
                                                :ARG2 (c43-6 / here)))
                     :ARG2 c43-16)
        :snt2 (c43-2 / believe-01
                     :ARG0 (c43-5 / i)
                     :ARG1 (c43-7 / and
                                  :op1 (c43-11 / play-02
                                               :ARG0 (c43-17 / formation)
                                               :ARG2 (c43-4 / strong-02
                                                            :ARG1 c43-16)
                                               :polarity -)
                                  :op2 (c43-19 / have-condition-91
                                               :ARG1 c43-9
                                               :ARG1 (c43-15 / equal-01
                                                             :ARG2 "3/3")
                                               :ARG3 (c43-12 / want-01
                                                             :ARG0 (c43-8 / team
                                                                          :name c43-14
                                                                          :op1 "Footbal"))
                                               :ARG1 c43-15))
                     :ARG2 (c43-0 / want-01
                                  :ARG0 c43-8
                                  :ARG1 c43-15)))

# ::snt Javi, you are RSL. You set the tone for this club. The Riot is the House built by Javi, Beckerman, and Rimando...always!!!
# ::tokens ["Javi", ",", "you", "are", "RSL", ".", "You", "set", "the", "tone", "for", "this", "club", ".", "The", "Riot", "is", "the", "House", "built", "by", "Javi", ",", "Beckerman", ",", "and", "Rimando", "...", "always", "!", "!", "!"]
# ::lemmas ["Javi", ",", "you", "be", "RSL", ".", "you", "set", "the", "tone", "for", "this", "club", ".", "the", "Riot", "be", "the", "House", "build", "by", "Javi", ",", "Beckerman", ",", "and", "Rimando", "...", "always", "!", "!", "!"]
(c44-9 / multi-sentence
       :snt1 (c44-17 / person
                     :name (c44-15 / name
                                   :op1 "RSL")
                     :domain (c44-10 / person
                                     :name (c44-11 / name
                                                   :op1 "Javi")))
       :snt2 (c44-0 / set-02
                    :ARG0 c44-10
                    :ARG1 (c44-6 / tone)
                    :beneficiary (c44-12 / club
                                         :mod (c44-14 / this)))
       :snt3 (c44-16 / riot-01
                     :domain (c44-3 / house
                                    :ARG1-of (c44-8 / build-01
                                                    :ARG0 (c44-5 / and
                                                                 :op1 c44-10
                                                                 :op2 (c44-2 / person
                                                                             :name (c44-18 / name
                                                                                           :op1 "Javi"))
                                                                 :op3 (c44-1 / person
                                                                             :name (c44-13 / name
                                                                                           :op1 "Beckerman"))
                                                                 :op4 (c44-4 / person
                                                                             :name (c44-19 / name
                                                                                           :op1 "Rimando")))))
                     :time (c44-7 / always)))

# ::snt will there be any stream available to see this?
# ::tokens ["will", "there", "be", "any", "stream", "available", "to", "see", "this", "?"]
# ::lemmas ["will", "there", "be", "any", "stream", "available", "to", "see", "this", "?"]
(c45-5 / available-02
       :polarity (c45-4 / amr-unknown)
       :ARG2 (c45-1 / stream
                    :mod (c45-2 / any))
       :purpose (c45-0 / see-01
                       :ARG1 (c45-3 / this)))

# ::snt I'm going to be there
# ::tokens ["I", "'m", "going", "to", "be", "there"]
# ::lemmas ["i", "be", "go", "to", "be", "there"]
(c46-0 / be-located-at-91
       :ARG1 (c46-1 / i)
       :ARG2 (c46-2 / there))

# ::snt Javier, it has been a joy to watch you play. I'm sad to have you leave, but it will probably better for you, and RSL. Good luck
# ::tokens ["Javier", ",", "it", "has", "been", "a", "joy", "to", "watch", "you", "play", ".", "I", "'m", "sad", "to", "have", "you", "leave", ",", "but", "it", "will", "probably", "better", "for", "you", ",", "and", "RSL", ".", "Good", "luck"]
# ::lemmas ["javier", ",", "it", "have", "be", "a", "joy", "to", "watch", "you", "play", ".", "i", "be", "sad", "to", "have", "you", "leave", ",", "but", "it", "will", "probably", "well", "for", "you", ",", "and", "RSL", ".", "good", "luck"]
(c47-14 / multi-sentence
        :snt1 (c47-0 / say-01
                     :ARG0 (c47-21 / i)
                     :ARG1 (c47-8 / joy
                                  :domain (c47-20 / watch-01
                                                  :ARG0 c47-21
                                                  :ARG1 (c47-19 / play-01
                                                                :ARG0 (c47-15 / person
                                                                              :name (c47-18 / name
                                                                                            :op1 "Javier")
                                                                              :ARG2-of c47-0)))))
        :snt2 (c47-17 / contrast-01
                      :ARG1 (c47-4 / sad-02
                                   :ARG0 (c47-7 / have-04
                                                :ARG0 (c47-6 / i)
                                                :ARG1 (c47-1 / leave-11
                                                             :ARG0 (c47-5 / you)))
                                   :ARG1 c47-6)
                      :ARG2 (c47-3 / probable
                                   :domain (c47-10 / good-02
                                                   :ARG1 (c47-13 / it)
                                                   :ARG2 (c47-9 / and
                                                                :op1 (c47-11 / you)
                                                                :op2 (c47-2 / person
                                                                            :name (c47-16 / name
                                                                                          :op1 "RSL"))))))
        :snt3 (c47-12 / luck
                      :ARG1-of c47-10))

# ::snt what in the world is happening.
# ::tokens ["what", "in", "the", "world", "is", "happening", "."]
# ::lemmas ["what", "in", "the", "world", "be", "happen", "."]
(c48-1 / event
       :location (c48-0 / world))

# ::snt Makes me want to go and see what he says...
# ::tokens ["Makes", "me", "want", "to", "go", "and", "see", "what", "he", "says", "..."]
# ::lemmas ["make", "i", "want", "to", "go", "and", "see", "what", "he", "say", "..."]
(c49-1 / make-02
       :ARG1 (c49-4 / want-01
                    :ARG0 (c49-6 / i)
                    :ARG1 (c49-7 / and
                                 :op1 (c49-8 / go-02
                                             :ARG0 c49-6)
                                 :op2 (c49-2 / see-01
                                             :ARG0 c49-6
                                             :ARG1 (c49-5 / thing
                                                          :ARG1-of (c49-0 / say-01
                                                                          :ARG0 (c49-3 / he)))))))

# ::snt wow. I did not
# ::tokens ["wow", ".", "I", "did", "not"]
# ::lemmas ["wow", ".", "i", "do", "not"]
(c50-1 / event
       :mod (c50-2 / i)
       :mod (c50-0 / wow
                   :mode expressive)
       :polarity -)
