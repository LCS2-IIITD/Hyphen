# ::snt Maybe her and Rob can get a for discount on gastric bypass surgery
# ::tokens ["Maybe", "her", "and", "Rob", "can", "get", "a", "for", "discount", "on", "gastric", "bypass", "surgery"]
# ::lemmas ["maybe", "she", "and", "Rob", "can", "get", "a", "for", "discount", "on", "gastric", "bypass", "surgery"]
(c1-5 / possible-01
      :ARG1 c1-5
      :ARG1 (c1-8 / get-01
                  :ARG0 (c1-7 / and
                              :op1 (c1-4 / she)
                              :op2 (c1-3 / person
                                         :name (c1-2 / name
                                                     :op1 "Rob")))
                  :ARG1 (c1-9 / discount-01
                              :ARG3 (c1-0 / surgery-01
                                          :ARG2 (c1-1 / bypass
                                                      :mod (c1-6 / gastric))))))

# ::snt Why is she with that guy Corey?
# ::tokens ["Why", "is", "she", "with", "that", "guy", "Corey", "?"]
# ::lemmas ["why", "be", "she", "with", "that", "guy", "Corey", "?"]
(c3-3 / cause-01
      :ARG0 (c3-5 / amr-unknown)
      :ARG1 (c3-0 / be-with-10
                  :ARG0 (c3-2 / she)
                  :ARG1 (c3-6 / guy
                              :name (c3-1 / name
                                          :op1 "Corey")
                              :mod (c3-4 / that))))

# ::snt Sounds like a good time lol
# ::tokens ["Sounds", "like", "a", "good", "time", "lol"]
# ::lemmas ["sound", "like", "a", "good", "time", "lol"]
(c4-0 / sound-01
      :ARG2 (c4-3 / time
                  :ARG1-of (c4-4 / good-02))
      :ARG2-of (c4-1 / laugh-01
                     :ARG0 (c4-2 / i)
                     :manner (c4-5 / loud)
                     :mode expressive))

# ::snt You could have millions be still be a Sad lonely hoe.
# ::tokens ["You", "could", "have", "millions", "be", "still", "be", "a", "Sad", "lonely", "hoe", "."]
# ::lemmas ["you", "could", "have", "millions", "be", "still", "be", "a", "sad", "lonely", "hoe", "."]
(c5-6 / possible-01
      :ARG1 (c5-5 / have-03
                  :ARG0 (c5-1 / you)
                  :ARG1 (c5-2 / multiple
                              :op1 (c5-4 / monetary-quantity
                                         :unit (c5-9 / dollar)
                                         :quant 1000000))
                  :mod (c5-8 / hoe
                             :ARG1-of (c5-3 / sad-02)
                             :mod (c5-7 / lonely)
                             :mod (c5-0 / still))))

# ::snt She's always complaining about being overweight. Drinking tons of wine and not exercising will do that to ya.
# ::tokens ["She", "'s", "always", "complaining", "about", "being", "overweight", ".", "Drinking", "tons", "of", "wine", "and", "not", "exercising", "will", "do", "that", "to", "ya", "."]
# ::lemmas ["she", "be", "always", "complain", "about", "be", "overweight", ".", "drink", "ton", "of", "wine", "and", "not", "exercise", "will", "do", "that", "to", "ya", "."]
(c7-2 / multi-sentence
      :snt1 (c7-5 / complain-01
                  :ARG0 (c7-3 / she)
                  :ARG1 (c7-0 / overweight
                              :domain c7-3)
                  :time (c7-10 / always))
      :snt2 (c7-11 / do-02
                   :ARG0 (c7-9 / and
                               :op1 (c7-6 / drink-01
                                          :ARG0 (c7-1 / you)
                                          :ARG1 (c7-7 / wine
                                                      :quant (c7-8 / ton)))
                               :op2 (c7-4 / exercise-02
                                          :ARG0 c7-1
                                          :polarity -))
                   :ARG1 (c7-12 / that)
                   :ARG2 c7-1))

# ::snt Wow look. Our alcoholism rubbing off on her
# ::tokens ["Wow", "look", ".", "Our", "alcoholism", "rubbing", "off", "on", "her"]
# ::lemmas ["wow", "look", ".", "our", "alcoholism", "rub", "off", "on", "she"]
(c8-1 / multi-sentence
      :snt1 (c8-4 / look-01
                  :ARG0 (c8-0 / you)
                  :mod (c8-6 / wow
                             :mode expressive)
                  :mode imperative)
      :snt2 (c8-3 / rub-off-02
                  :ARG1 (c8-7 / alcoholic
                              :poss (c8-5 / we))
                  :ARG2 (c8-2 / she)))

# ::snt Im down for anything that involves drinking
# ::tokens ["I", "m", "down", "for", "anything", "that", "involves", "drinking"]
# ::lemmas ["i", "m", "down", "for", "anything", "that", "involve", "drink"]
(c9-4 / down-03
      :ARG1 (c9-2 / i)
      :ARG3 (c9-3 / anything
                  :ARG2-of (c9-0 / involve-01
                                 :ARG1 (c9-1 / drink-01))))

# ::snt I just don't like her
# ::tokens ["I", "just", "do", "n't", "like", "her"]
# ::lemmas ["i", "just", "do", "not", "like", "she"]
(c10-0 / dislike-01
       :ARG0 (c10-2 / i)
       :ARG1 (c10-3 / she)
       :mod (c10-1 / just))

# ::snt Maybe well celebrate early and go there for a weekend
# ::tokens ["Maybe", "well", "celebrate", "early", "and", "go", "there", "for", "a", "weekend"]
# ::lemmas ["maybe", "well", "celebrate", "early", "and", "go", "there", "for", "a", "weekend"]
(c11-1 / possible-01
       :ARG1 (c11-5 / and
                    :op1 (c11-2 / celebrate-02
                                :time (c11-0 / early))
                    :op2 (c11-6 / go-02
                                :ARG4 (c11-4 / there)
                                :duration (c11-3 / weekend))))

# ::snt Pretty sure there is, we found one last year when we went for her st bday, but it was closing before we could go in and find out info, Ill do some research
# ::tokens ["Pretty", "sure", "there", "is", ",", "we", "found", "one", "last", "year", "when", "we", "went", "for", "her", "st", "bday", ",", "but", "it", "was", "closing", "before", "we", "could", "go", "in", "and", "find", "out", "info", ",", "Ill", "do", "some", "research"]
# ::lemmas ["pretty", "sure", "there", "be", ",", "we", "find", "one", "last", "year", "when", "we", "go", "for", "her", "st", "bday", ",", "but", "it", "be", "close", "before", "we", "could", "go", "in", "and", "find", "out", "info", ",", "Ill", "do", "some", "research"]
(c12-9 / and
       :op1 (c12-0 / sure-02
                   :ARG0 (c12-22 / i)
                   :ARG1 (c12-18 / exist-01)
                   :degree (c12-19 / pretty))
       :op2 (c12-15 / contrast-01
                    :ARG1 (c12-16 / find-01
                                  :ARG0 (c12-21 / we)
                                  :ARG1 (c12-4 / one)
                                  :time (c12-6 / year
                                               :mod (c12-2 / last))
                                  :time (c12-10 / go-02
                                                :ARG0 c12-21
                                                :ARG4 (c12-13 / birthday
                                                              :poss (c12-5 / she))))
                    :ARG2 (c12-12 / close-01
                                  :ARG1 c12-4
                                  :time (c12-1 / before
                                               :op1 (c12-14 / possible-01
                                                            :ARG1 (c12-8 / and
                                                                         :op1 c12-10
                                                                         :ARG0 c12-21
                                                                         :ARG4 (c12-7 / inside))
                                                            :op2 (c12-20 / find-out-03
                                                                         :ARG0 c12-21
                                                                         :ARG1 (c12-11 / information))))))
       :op3 (c12-17 / research-01
                    :ARG0 c12-22
                    :quant (c12-3 / some)))

# ::snt Maybe theres one in AC we can do???
# ::tokens ["Maybe", "there", "s", "one", "in", "AC", "we", "can", "do", "?", "?", "?"]
# ::lemmas ["maybe", "there", "s", "one", "in", "AC", "we", "can", "do", "?", "?", "?"]
(c13-3 / possible-01
       :ARG1 (c13-7 / do-02
                    :ARG0 (c13-5 / we)
                    :ARG1 (c13-0 / one
                                 :location (c13-4 / city
                                                  :name (c13-1 / name
                                                               :op1 "AC"))
                                 :ARG1-of (c13-2 / possible-01)))
       :polarity (c13-6 / amr-unknown))

# ::snt Sam isnt actually next but As far as legal age people so that we could do this, it would be her. So Lets sing hoe
# ::tokens ["Sam", "is", "nt", "actually", "next", "but", "As", "far", "as", "legal", "age", "people", "so", "that", "we", "could", "do", "this", ",", "it", "would", "be", "her", ".", "So", "Lets", "sing", "hoe"]
# ::lemmas ["Sam", "be", "not", "actually", "next", "but", "as", "far", "as", "legal", "age", "people", "so", "that", "we", "could", "do", "this", ",", "it", "would", "be", "she", ".", "so", "let", "sing", "hoe"]
(c14-2 / multi-sentence
       :snt1 (c14-1 / next
                    :domain (c14-6 / person
                                   :name (c14-5 / name
                                                :op1 "Sam"))
                    :ARG1-of (c14-12 / actual-02)
                    :polarity -)
       :snt2 (c14-7 / have-condition-91
                    :ARG1 (c14-3 / person
                                 :domain (c14-4 / she))
                    :ARG2 (c14-14 / possible-01
                                  :ARG1 (c14-13 / do-02
                                                :ARG0 (c14-8 / we)
                                                :ARG1 (c14-11 / this))))
       :snt3 (c14-9 / cause-01
                    :ARG1 (c14-0 / sing-01
                                 :ARG0 c14-8
                                 :mode imperative)
                    :ARG1 (c14-10 / hoe)))

# ::snt I am ALL types of down for that. Whos birthday next thats what were doing
# ::tokens ["I", "am", "ALL", "types", "of", "down", "for", "that", ".", "Who", "s", "birthday", "next", "that", "s", "what", "were", "doing"]
# ::lemmas ["i", "be", "all", "type", "of", "down", "for", "that", ".", "who", "s", "birthday", "next", "that", "s", "what", "be", "do"]
(c15-1 / multi-sentence
       :snt1 (c15-8 / down-01
                    :ARG1 (c15-5 / i)
                    :mod (c15-4 / type
                                :mod (c15-6 / all))
                    :purpose (c15-10 / that))
       :snt2 (c15-3 / do-02
                    :ARG0 (c15-0 / birthday
                                 :poss (c15-7 / amr-unknown)
                                 :time (c15-2 / next))
                    :ARG1 (c15-9 / that)))

# ::snt We need to go to one of those private room karaoke places and get drunk and be like this LOL
# ::tokens ["We", "need", "to", "go", "to", "one", "of", "those", "private", "room", "karaoke", "places", "and", "get", "drunk", "and", "be", "like", "this", "LOL"]
# ::lemmas ["we", "need", "to", "go", "to", "one", "of", "those", "private", "room", "karaoke", "place", "and", "get", "drunk", "and", "be", "like", "this", "LOL"]
(c16-4 / obligate-01
       :ARG2 (c16-9 / and
                    :op1 (c16-10 / go-02
                                 :ARG0 (c16-16 / we)
                                 :ARG4 (c16-15 / place
                                               :ARG1-of (c16-17 / include-91
                                                                :ARG2 (c16-12 / place
                                                                              :mod (c16-8 / that)
                                                                              :mod (c16-14 / room
                                                                                           :ARG1-of (c16-2 / private-02)))
                                                                :purpose (c16-6 / karaoke))
                                               :quant 1))
                    :op2 (c16-7 / and
                                :op1 (c16-1 / get-03
                                            :ARG1 c16-16
                                            :ARG2 (c16-18 / drunk))
                                :op2 (c16-3 / resemble-01
                                            :ARG1 c16-16
                                            :ARG2 (c16-13 / this))))
       :ARG2-of (c16-0 / laugh-01
                       :ARG0 (c16-5 / i)
                       :manner (c16-11 / loud)
                       :mode expressive))

# ::snt why is she my spirit animal
# ::tokens ["why", "is", "she", "my", "spirit", "animal"]
# ::lemmas ["why", "be", "she", "my", "spirit", "animal"]
(c17-4 / animal
       :mod (c17-1 / spirit)
       :poss (c17-3 / i)
       :domain (c17-0 / she)
       :ARG1-of (c17-2 / cause-01
                       :ARG0 (c17-5 / amr-unknown)))

# ::snt Lets add "sloppy drunk" to her Resume. The day this entire family becomes irrelevant and go away will be a fine day indeed. As a woman, and a mother, I'd be embarrassed to behave so disgustingly. All those dollars can't buy Class.
# ::tokens ["Lets", "add", "\"", "sloppy", "drunk", "\"", "to", "her", "Resume", ".", "The", "day", "this", "entire", "family", "becomes", "irrelevant", "and", "go", "away", "will", "be", "a", "fine", "day", "indeed", ".", "As", "a", "woman", ",", "and", "a", "mother", ",", "I", "'d", "be", "embarrassed", "to", "behave", "so", "disgustingly", ".", "All", "those", "dollars", "ca", "n't", "buy", "Class", "."]
# ::lemmas ["let", "add", "\"", "sloppy", "drunk", "\"", "to", "her", "Resume", ".", "the", "day", "this", "entire", "family", "become", "irrelevant", "and", "go", "away", "will", "be", "a", "fine", "day", "indeed", ".", "as", "a", "woman", ",", "and", "a", "mother", ",", "i", "would", "be", "embarrassed", "to", "behave", "so", "disgustingly", ".", "all", "those", "dollar", "can", "not", "buy", "Class", "."]
(c18-16 / multi-sentence
        :snt1 (c18-14 / add-02
                      :ARG0 (c18-28 / we)
                      :ARG1 (c18-30 / drunk
                                    :mod (c18-0 / sloppy))
                      :ARG2 (c18-23 / resume-01
                                    :ARG0 (c18-6 / she))
                      :mode imperative)
        :snt2 (c18-20 / day
                      :ARG1-of (c18-22 / fine-04)
                      :mod (c18-29 / indeed)
                      :domain (c18-10 / and
                                      :op1 (c18-15 / become-01
                                                   :ARG1 (c18-27 / family
                                                                 :mod (c18-24 / entire)
                                                                 :mod (c18-11 / this))
                                                   :ARG2 (c18-3 / relevant-01
                                                                :ARG1 c18-27
                                                                :polarity -))
                                      :op2 (c18-12 / go-02
                                                   :ARG0 c18-27
                                                   :ARG4 (c18-9 / away))))
        :snt3 (c18-13 / embarrass-01
                      :ARG0 (c18-1 / behave-01
                                   :ARG0 (c18-7 / i)
                                   :ARG0-of (c18-18 / disgust-01
                                                    :degree (c18-4 / so)))
                      :ARG1 c18-7
                      :manner (c18-2 / woman
                                     :domain c18-7)
                      :manner (c18-8 / mother
                                     :domain c18-7))
        :snt4 (c18-26 / possible-01
                      :ARG1 (c18-5 / buy-01
                                   :ARG0 (c18-25 / dollar
                                                 :mod (c18-17 / all)
                                                 :mod (c18-21 / that))
                                   :ARG1 (c18-19 / class))
                      :polarity -))

# ::snt Ffs... probably fake drunk.
# ::tokens ["Ffs", "...", "probably", "fake", "drunk", "."]
# ::lemmas ["ffs", "...", "probably", "fake", "drunk", "."]
(c19-2 / probable
       :domain (c19-0 / drunk
                      :ARG1-of (c19-1 / fake-02))
       :mod (c19-3 / fuck
                   :mode expressive))

# ::snt Drunk Kris Jenner is fab
# ::tokens ["Drunk", "Kris", "Jenner", "is", "fab"]
# ::lemmas ["Drunk", "Kris", "Jenner", "be", "fab"]
(c20-0 / fab
       :domain (c20-2 / person
                      :name (c20-1 / name
                                   :op1 "Kris"
                                   :op2 "Jenner")
                      :ARG1-of (c20-3 / drug-01)))

# ::snt way to keep it classy
# ::tokens ["way", "to", "keep", "it", "classy"]
# ::lemmas ["way", "to", "keep", "it", "classy"]
(c21-0 / way
       :manner-of (c21-2 / keep-02
                         :ARG1 (c21-1 / classy-02
                                      :ARG1 (c21-3 / it))))

# ::snt Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...
# ::tokens ["Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz", "..."]
# ::lemmas ["Zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz", "..."]
(c22-0)

# ::snt Drunks always thing they are looking and sounding great.
# ::tokens ["Drunks", "always", "thing", "they", "are", "looking", "and", "sounding", "great", "."]
# ::lemmas ["drunk", "always", "thing", "they", "be", "look", "and", "sound", "great", "."]
(c23-3 / thing
       :ARG1-of (c23-2 / look-01
                       :ARG0 (c23-5 / drunk))
       :ARG1-of (c23-0 / sound-01
                       :ARG2 (c23-4 / great))
       :time (c23-1 / always))

# ::snt That Klan, always Keeping it Klassy!
# ::tokens ["That", "Klan", ",", "always", "Keeping", "it", "Klassy", "!"]
# ::lemmas ["that", "Klan", ",", "always", "keep", "it", "Klassy", "!"]
(c24-3 / keep-01
       :ARG0 (c24-2 / person
                    :name (c24-0 / name
                                 :op1 "Klan")
                    :mod (c24-5 / that))
       :ARG1 (c24-4 / it)
       :time (c24-1 / always)
       :mod (c24-6 / kassy))

# ::snt Interesting ..
# ::tokens ["Interesting", ".."]
# ::lemmas ["interesting", ".."]
(c25-0 / interest-01)

# ::snt She's always drunk and it's not really that amusing
# ::tokens ["She", "'s", "always", "drunk", "and", "it", "'s", "not", "really", "that", "amusing"]
# ::lemmas ["she", "be", "always", "drunk", "and", "it", "be", "not", "really", "that", "amusing"]
(c26-5 / and
       :op1 (c26-6 / drunk
                   :domain (c26-0 / she)
                   :time (c26-4 / always))
       :op2 (c26-2 / amuse-01
                   :ARG0 c26-6
                   :degree (c26-3 / that)
                   :ARG1-of (c26-1 / real-04)
                   :polarity -))

# ::snt who the frig does she thinks she is?! Everybody's momager?! Leave him alone!
# ::tokens ["who", "the", "frig", "does", "she", "thinks", "she", "is", "?", "!", "Everybody", "'s", "momager", "?", "!", "Leave", "him", "alone", "!"]
# ::lemmas ["who", "the", "frig", "do", "she", "think", "she", "be", "?", "!", "everybody", "'s", "momager", "?", "!", "leave", "he", "alone", "!"]
(c27-3 / multi-sentence
       :snt1 (c27-13 / think-01
                     :ARG0 (c27-4 / she)
                     :ARG1 (c27-0 / she
                                  :domain c27-4
                                  :mod (c27-1 / frigging
                                              :mode expressive)))
       :snt2 (c27-8 / person
                    :ARG0-of (c27-7 / have-rel-role-91
                                    :ARG1 (c27-6 / everybody)
                                    :ARG2 (c27-9 / momager))
                    :polarity (c27-5 / amr-unknown))
       :snt3 (c27-10 / leave-14
                     :ARG0 (c27-2 / you)
                     :ARG1 (c27-12 / alone
                                   :domain (c27-11 / he))
                     :mode imperative))

# ::snt Good God! Get them away from the wine before they infect it! Cheers!
# ::tokens ["Good", "God", "!", "Get", "them", "away", "from", "the", "wine", "before", "they", "infect", "it", "!", "Cheers", "!"]
# ::lemmas ["good", "God", "!", "get", "they", "away", "from", "the", "wine", "before", "they", "infect", "it", "!", "cheer", "!"]
(c28-3 / multi-sentence
       :snt1 (c28-6 / person
                    :name (c28-2 / name
                                 :op1 "God")
                    :ARG1-of (c28-11 / good-02)
                    :mode expressive)
       :snt2 (c28-9 / get-05
                    :ARG0 (c28-1 / you)
                    :ARG1 (c28-10 / they)
                    :ARG2 (c28-5 / away
                                 :op1 (c28-7 / wine))
                    :time (c28-0 / before
                                 :op1 (c28-12 / infect-01
                                              :ARG1 c28-10
                                              :ARG2 (c28-4 / it)))
                    :mode imperative)
       :snt3 (c28-8 / cheers
                    :mode expressive))

# ::snt Raise your hands who care?
# ::tokens ["Raise", "your", "hands", "who", "care", "?"]
# ::lemmas ["raise", "your", "hand", "who", "care", "?"]
(c29-1 / raise-01
       :ARG0 (c29-0 / you
                    :part (c29-2 / hand
                                 :ARG1-of c29-1))
       :ARG1-of (c29-3 / care-01
                       :ARG0 (c29-4 / amr-unknown))
       :mode imperative)

# ::snt Not one of em wears a coat properly
# ::tokens ["Not", "one", "of", "em", "wears", "a", "coat", "properly"]
# ::lemmas ["not", "one", "of", "em", "wear", "a", "coat", "properly"]
(c30-2 / wear-01
       :ARG0 (c30-0 / one
                    :ARG1-of (c30-4 / include-91
                                    :ARG2 (c30-5 / they)))
       :ARG1 (c30-3 / coat)
       :manner (c30-1 / proper)
       :polarity -)

# ::snt Next week on Plastic sluts .......,
# ::tokens ["Next", "week", "on", "Plastic", "sluts", ".......", ","]
# ::lemmas ["Next", "week", "on", "Plastic", "slut", ".......", ","]
(c31-0 / week
       :mod (c31-1 / next)
       :topic (c31-3 / slut
                     :mod (c31-2 / plastic)))

# ::snt Drunk Kris Jenner will have her own reality TV show soon.
# ::tokens ["Drunk", "Kris", "Jenner", "will", "have", "her", "own", "reality", "TV", "show", "soon", "."]
# ::lemmas ["Drunk", "Kris", "Jenner", "will", "have", "her", "own", "reality", "tv", "show", "soon", "."]
(c32-4 / have-03
       :ARG0 (c32-5 / person
                    :name (c32-1 / name
                                 :op1 "Kris"
                                 :op2 "Jenner")
                    :ARG1-of (c32-7 / drug-01))
       :ARG1 (c32-2 / show-04
                    :ARG1 (c32-6 / television
                                 :mod (c32-3 / reality))
                    :ARG3 c32-5)
       :time (c32-0 / soon))

# ::snt You do realize if you ignore these talented media whores they do go away
# ::tokens ["You", "do", "realize", "if", "you", "ignore", "these", "talented", "media", "whores", "they", "do", "go", "away"]
# ::lemmas ["you", "do", "realize", "if", "you", "ignore", "these", "talented", "medium", "whore", "they", "do", "go", "away"]
(c33-2 / realize-01
       :ARG0 (c33-0 / you)
       :ARG1 (c33-7 / go-02
                    :ARG0 (c33-4 / whore
                                 :mod (c33-1 / media)
                                 :mod (c33-6 / talent)
                                 :mod (c33-8 / this))
                    :ARG4 (c33-3 / away)
                    :condition (c33-5 / ignore-01
                                      :ARG0 c33-0
                                      :ARG1 c33-4)))

# ::snt I cant figure out why anyone cares about these rich useless people
# ::tokens ["I", "ca", "nt", "figure", "out", "why", "anyone", "cares", "about", "these", "rich", "useless", "people"]
# ::lemmas ["i", "can", "not", "figure", "out", "why", "anyone", "care", "about", "these", "rich", "useless", "people"]
(c34-4 / possible-01
       :ARG1 (c34-0 / figure-out-05
                    :ARG0 (c34-6 / i)
                    :ARG1 (c34-7 / thing
                                 :ARG0-of (c34-5 / cause-01
                                                 :ARG1 (c34-10 / care-01
                                                               :ARG0 (c34-2 / anyone)
                                                               :ARG1 (c34-1 / person
                                                                            :mod (c34-3 / rich)
                                                                            :mod (c34-8 / this)
                                                                            :ARG1-of (c34-9 / use-01
                                                                                            :ARG1-of c34-4
                                                                                            :polarity -))))))
       :polarity -)
