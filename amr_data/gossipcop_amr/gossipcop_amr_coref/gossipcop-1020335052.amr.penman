# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c1-1 / laugh-01
      :manner (c1-0 / loud)
      :mode expressive)

# ::snt and a retweet
# ::tokens ["and", "a", "retweet"]
# ::lemmas ["and", "a", "retweet"]
(c2-1 / and
      :op2 (c2-0 / retribute-01))

# ::snt I do it every time I tweet, even my replies are golden. This will get at least , maybe favs
# ::tokens ["I", "do", "it", "every", "time", "I", "tweet", ",", "even", "my", "replies", "are", "golden", ".", "This", "will", "get", "at", "least", ",", "maybe", "favs"]
# ::lemmas ["i", "do", "it", "every", "time", "i", "tweet", ",", "even", "my", "reply", "be", "golden", ".", "this", "will", "get", "at", "least", ",", "maybe", "fav"]
(c3-1 / multi-sentence
      :snt1 (c3-11 / do-02
                   :ARG0 (c3-8 / i)
                   :ARG1 (c3-2 / it)
                   :frequency (c3-3 / rate-entity-91
                                    :ARG4 (c3-9 / tweet-02
                                                :ARG0 c3-8)))
      :snt2 (c3-10 / golden
                   :domain (c3-16 / thing
                                  :ARG2-of (c3-12 / reply-01
                                                  :ARG0 (c3-13 / i))
                                  :mod (c3-5 / even)))
      :snt3 (c3-14 / get-01
                   :ARG0 (c3-15 / this)
                   :ARG1 (c3-6 / thing
                               :ARG1-of (c3-0 / favor-01)
                               :ARG1-of (c3-7 / possible-01))
                   :mod (c3-4 / at-least)))

# ::snt two stars, salad bars. Olive delights, olive delights
# ::tokens ["two", "stars", ",", "salad", "bars", ".", "Olive", "delights", ",", "olive", "delights"]
# ::lemmas ["two", "star", ",", "salad", "bar", ".", "olive", "delights", ",", "olive", "delight"]
(c4-4 / multi-sentence
      :snt1 (c4-5 / star
                  :quant 2)
      :snt2 (c4-2 / bar
                  :mod (c4-0 / salad))
      :snt3 (c4-7 / and
                  :op1 (c4-8 / delight-01
                             :mod (c4-1 / olive))
                  :op2 (c4-6 / delight-01
                             :mod (c4-3 / olive))))

# ::snt Fuck yes for our Lord and Savior Yeezus Christ
# ::tokens ["Fuck", "yes", "for", "our", "Lord", "and", "Savior", "Yeezus", "Christ"]
# ::lemmas ["fuck", "yes", "for", "our", "Lord", "and", "Savior", "Yeezus", "Christ"]
(c5-1 / yes
      :mod (c5-0 / fuck
                 :mode expressive)
      :beneficiary (c5-7 / and
                         :op1 (c5-5 / person
                                    :name (c5-2 / name
                                                :op1 "Lord"))
                         :op2 (c5-3 / person
                                    :name (c5-4 / name
                                                :op1 "Savior"))
                         :poss (c5-6 / we)))

# ::snt What's that? Lol
# ::tokens ["What", "'s", "that", "?", "Lol"]
# ::lemmas ["what", "be", "that", "?", "Lol"]
(c6-0 / multi-sentence
      :snt1 (c6-1 / amr-unknown
                  :domain (c6-4 / that))
      :snt2 (c6-2 / laugh-01
                  :ARG0 (c6-3 / i)
                  :manner (c6-5 / loud)
                  :mode expressive))

# ::snt Would you go though?
# ::tokens ["Would", "you", "go", "though", "?"]
# ::lemmas ["would", "you", "go", "though", "?"]
(c7-1 / have-concession-91
      :ARG1 (c7-0 / go-02
                  :ARG0 (c7-2 / you)
                  :polarity (c7-3 / amr-unknown)))

# ::snt A fuckin grilled cheese gonna cost you $50 with no side cuz its a grilled cheese from a god
# ::tokens ["A", "fuckin", "grilled", "cheese", "gon", "na", "cost", "you", "$", "50", "with", "no", "side", "cuz", "its", "a", "grilled", "cheese", "from", "a", "god"]
# ::lemmas ["a", "fuckin", "grill", "cheese", "going", "to", "cost", "you", "$", "50", "with", "no", "side", "cuz", "its", "a", "grill", "cheese", "from", "a", "god"]
(c8-5 / cost-01
      :ARG1 (c8-11 / cheese
                   :ARG1-of (c8-8 / grill-01)
                   :mod (c8-1 / fucking))
      :ARG2 (c8-3 / monetary-quantity
                  :unit (c8-9 / dollar)
                  :quant 50)
      :ARG3 (c8-2 / you)
      :prep-with (c8-4 / side
                       :polarity -)
      :ARG1-of (c8-6 / cause-01
                     :ARG0 (c8-0 / cheese
                                 :ARG1-of (c8-7 / grill-01)
                                 :source (c8-10 / god)
                                 :domain c8-11)))

# ::snt wow, one of the reasons why the Yeezy's name now are ingredients?
# ::tokens ["wow", ",", "one", "of", "the", "reasons", "why", "the", "Yeezy", "'s", "name", "now", "are", "ingredients", "?"]
# ::lemmas ["wow", ",", "one", "of", "the", "reason", "why", "the", "Yeezy", "'s", "name", "now", "be", "ingredient", "?"]
(c9-8 / ingredient
      :domain (c9-7 / thing
                    :ARG1-of (c9-1 / include-91
                                   :ARG2 (c9-9 / thing
                                               :ARG0-of (c9-6 / cause-01
                                                              :ARG1 (c9-0 / name-01
                                                                          :ARG1 (c9-4 / person
                                                                                      :name (c9-3 / name
                                                                                                  :op1 "Yeezy"))
                                                                          :time (c9-5 / now)))))
                    :quant 1)
      :polarity (c9-2 / amr-unknown))

# ::snt Yeezy
# ::tokens ["Yeezy"]
# ::lemmas ["yeezy"]
(c10-0 / yeezy)

# ::snt : Kanye West is opening up a breakfast restaurant, its called, omelette you finish. What is this world coming to?
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "its", "called", ",", "omelette", "you", "finish", ".", "What", "is", "this", "world", "coming", "to", "?"]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "its", "call", ",", "omelette", "you", "finish", ".", "what", "be", "this", "world", "come", "to", "?"]
(c12-5 / multi-sentence
       :snt1 (c12-0 / open-up-03
                    :ARG0 (c12-9 / person
                                 :name (c12-4 / name
                                              :op1 "Kanye"
                                              :op2 "West"))
                    :ARG1 (c12-7 / restaurant
                                 :ARG1-of (c12-2 / breakfast-01)
                                 :ARG1-of (c12-10 / call-01
                                                  :ARG2 (c12-1 / omelette
                                                               :ARG1-of (c12-3 / finish-01
                                                                               :ARG0 (c12-6 / you))))))
       :snt2 (c12-13 / come-04
                     :ARG1 (c12-11 / world
                                   :mod (c12-12 / this))
                     :ARG2 (c12-8 / amr-unknown)))

# ::snt hahahahahhaha
# ::tokens ["hahahahahhaha"]
# ::lemmas ["hahahahahhaha"]
(c15-0 / ha
       :mode expressive)

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c16-0 / open-up-03
       :ARG0 (c16-7 / person
                    :name (c16-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c16-6 / restaurant
                    :mod (c16-2 / breakfast)
                    :ARG1-of (c16-8 / call-01
                                    :ARG2 (c16-1 / finish-01
                                                 :ARG0 (c16-3 / you)
                                                 :ARG1 (c16-5 / omelette)))))

# ::snt love it!
# ::tokens ["love", "it", "!"]
# ::lemmas ["love", "it", "!"]
(c17-1 / love-01
       :ARG0 (c17-2 / i)
       :ARG1 (c17-0 / it))

# ::snt is it sad that this is believable...?
# ::tokens ["is", "it", "sad", "that", "this", "is", "believable", "...", "?"]
# ::lemmas ["be", "it", "sad", "that", "this", "be", "believable", "...", "?"]
(c18-1 / sad-02
       :ARG0 (c18-2 / possible-01
                    :ARG1 (c18-0 / believe-01
                                 :ARG1 (c18-3 / this)))
       :polarity (c18-4 / amr-unknown))

# ::snt Ha : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens ["Ha", ":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas ["ha", ":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c19-0 / open-up-03
       :ARG0 (c19-7 / person
                    :name (c19-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c19-5 / restaurant
                    :ARG1-of (c19-2 / breakfast-01)
                    :ARG1-of (c19-8 / call-01
                                    :ARG2 (c19-9 / cheese
                                                 :ARG1-of (c19-1 / finish-01
                                                                 :ARG0 (c19-3 / you)))))
       :mod (c19-6 / ha
                   :mode expressive))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c20-0 / open-up-03
       :ARG0 (c20-7 / person
                    :name (c20-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c20-6 / restaurant
                    :mod (c20-2 / breakfast)
                    :ARG1-of (c20-8 / call-01
                                    :ARG2 (c20-1 / finish-01
                                                 :ARG0 (c20-3 / you)
                                                 :ARG1 (c20-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c21-0 / open-up-03
       :ARG0 (c21-7 / person
                    :name (c21-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c21-6 / restaurant
                    :mod (c21-2 / breakfast)
                    :ARG1-of (c21-8 / call-01
                                    :ARG2 (c21-1 / finish-01
                                                 :ARG0 (c21-3 / you)
                                                 :ARG1 (c21-5 / omelette)))))

# ::snt where they always bring you your check before you're finished eating.
# ::tokens ["where", "they", "always", "bring", "you", "your", "check", "before", "you", "'re", "finished", "eating", "."]
# ::lemmas ["where", "they", "always", "bring", "you", "your", "check", "before", "you", "be", "finish", "eat", "."]
(c22-1 / be-located-at-91
       :ARG2 (c22-5 / bring-01
                    :ARG0 (c22-7 / they)
                    :ARG1 (c22-6 / check
                                 :poss (c22-2 / you
                                              :ARG2-of c22-5))
                    :time (c22-3 / always)
                    :time (c22-8 / before
                                 :op1 (c22-0 / finish-01
                                             :ARG0 c22-2
                                             :ARG1 (c22-4 / eat-01
                                                          :ARG0 c22-2)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c23-0 / open-up-03
       :ARG0 (c23-7 / person
                    :name (c23-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c23-6 / restaurant
                    :mod (c23-2 / breakfast)
                    :ARG1-of (c23-8 / call-01
                                    :ARG2 (c23-1 / finish-01
                                                 :ARG0 (c23-3 / you)
                                                 :ARG1 (c23-5 / omelette)))))

# ::snt omg hilarious
# ::tokens ["omg", "hilarious"]
# ::lemmas ["omg", "hilarious"]
(c24-1 / hilarious
       :mod (c24-0 / oh-my-god
                   :mode expressive))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c25-0 / open-up-03
       :ARG0 (c25-7 / person
                    :name (c25-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c25-6 / restaurant
                    :mod (c25-2 / breakfast)
                    :ARG1-of (c25-8 / call-01
                                    :ARG2 (c25-1 / finish-01
                                                 :ARG0 (c25-3 / you)
                                                 :ARG1 (c25-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c26-0 / open-up-03
       :ARG0 (c26-7 / person
                    :name (c26-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c26-6 / restaurant
                    :mod (c26-2 / breakfast)
                    :ARG1-of (c26-8 / call-01
                                    :ARG2 (c26-1 / finish-01
                                                 :ARG0 (c26-3 / you)
                                                 :ARG1 (c26-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c27-0 / open-up-03
       :ARG0 (c27-7 / person
                    :name (c27-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c27-6 / restaurant
                    :mod (c27-2 / breakfast)
                    :ARG1-of (c27-8 / call-01
                                    :ARG2 (c27-1 / finish-01
                                                 :ARG0 (c27-3 / you)
                                                 :ARG1 (c27-5 / omelette)))))

# ::snt hey conhecem esse cantor?
# ::tokens ["hey", "conhecem", "esse", "cantor", "?"]
# ::lemmas ["hey", "conhecem", "esse", "cantor", "?"]
(c28-0 / say-01
       :ARG0 (c28-5 / i)
       :ARG1 (c28-6 / truth-value
                    :polarity-of (c28-1 / have-org-role-91
                                        :ARG0 (c28-2 / person)
                                        :ARG2 (c28-3 / cantor)))
       :mod (c28-4 / hey
                   :mode expressive))

# ::snt since when did Kanye let anyone finish anything?
# ::tokens ["since", "when", "did", "Kanye", "let", "anyone", "finish", "anything", "?"]
# ::lemmas ["since", "when", "do", "Kanye", "let", "anyone", "finish", "anything", "?"]
(c29-4 / let-01
       :ARG0 (c29-3 / person
                    :name (c29-1 / name
                                 :op1 "Kanye"))
       :ARG1 (c29-0 / finish-01
                    :ARG0 (c29-7 / anyone)
                    :ARG1 (c29-6 / anything))
       :time (c29-2 / since
                    :op1 (c29-5 / amr-unknown)))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".LOL
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish\"", ".", "LOL"]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish\"", ".", "lol"]
(c30-0 / open-up-03
       :ARG0 (c30-7 / person
                    :name (c30-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c30-6 / restaurant
                    :ARG1-of (c30-2 / breakfast-01)
                    :ARG1-of (c30-9 / call-01
                                    :ARG2 (c30-1 / finish-01
                                                 :ARG0 (c30-3 / you)
                                                 :ARG1 (c30-5 / omelette))))
       :ARG2-of (c30-8 / laugh-01
                       :ARG0 (c30-10 / i)
                       :manner (c30-11 / loud)
                       :mode expressive))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c31-0 / open-up-03
       :ARG0 (c31-7 / person
                    :name (c31-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c31-6 / restaurant
                    :mod (c31-2 / breakfast)
                    :ARG1-of (c31-8 / call-01
                                    :ARG2 (c31-1 / finish-01
                                                 :ARG0 (c31-3 / you)
                                                 :ARG1 (c31-5 / omelette)))))

# ::snt Hold up lmao : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens ["Hold", "up", "lmao", ":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas ["hold", "up", "lmao", ":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c32-4 / multi-sentence
       :snt1 (c32-8 / hold-up-11
                    :ARG1 (c32-3 / you)
                    :mode imperative)
       :snt2 (c32-0 / open-up-03
                    :ARG0 (c32-9 / person
                                 :name (c32-5 / name
                                              :op1 "Kanye"
                                              :op2 "West"))
                    :ARG1 (c32-7 / restaurant
                                 :ARG1-of (c32-2 / breakfast-01)
                                 :ARG1-of (c32-10 / call-01
                                                  :ARG2 (c32-1 / finish-01
                                                               :ARG0 (c32-11 / you)
                                                               :ARG1 (c32-6 / omelette))))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c33-0 / open-up-03
       :ARG0 (c33-7 / person
                    :name (c33-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c33-6 / restaurant
                    :mod (c33-2 / breakfast)
                    :ARG1-of (c33-8 / call-01
                                    :ARG2 (c33-1 / finish-01
                                                 :ARG0 (c33-3 / you)
                                                 :ARG1 (c33-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c34-0 / open-up-03
       :ARG0 (c34-7 / person
                    :name (c34-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c34-6 / restaurant
                    :mod (c34-2 / breakfast)
                    :ARG1-of (c34-8 / call-01
                                    :ARG2 (c34-1 / finish-01
                                                 :ARG0 (c34-3 / you)
                                                 :ARG1 (c34-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c35-0 / open-up-03
       :ARG0 (c35-7 / person
                    :name (c35-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c35-6 / restaurant
                    :mod (c35-2 / breakfast)
                    :ARG1-of (c35-8 / call-01
                                    :ARG2 (c35-1 / finish-01
                                                 :ARG0 (c35-3 / you)
                                                 :ARG1 (c35-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c36-0 / open-up-03
       :ARG0 (c36-7 / person
                    :name (c36-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c36-6 / restaurant
                    :mod (c36-2 / breakfast)
                    :ARG1-of (c36-8 / call-01
                                    :ARG2 (c36-1 / finish-01
                                                 :ARG0 (c36-3 / you)
                                                 :ARG1 (c36-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c37-0 / open-up-03
       :ARG0 (c37-7 / person
                    :name (c37-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c37-6 / restaurant
                    :mod (c37-2 / breakfast)
                    :ARG1-of (c37-8 / call-01
                                    :ARG2 (c37-1 / finish-01
                                                 :ARG0 (c37-3 / you)
                                                 :ARG1 (c37-5 / omelette)))))

# ::snt lmao xD my sides !!
# ::tokens ["lmao", "xD", "my", "sides", "!", "!"]
# ::lemmas ["lmao", "xD", "my", "side", "!", "!"]
(c38-0 / side
       :poss (c38-3 / i)
       :mod (c38-1 / emoticon
                   :value "xD")
       :mod (c38-2 / laugh-01
                   :ARG0 c38-3
                   :manner (c38-4 / loud)))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c39-0 / open-up-03
       :ARG0 (c39-7 / person
                    :name (c39-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c39-6 / restaurant
                    :mod (c39-2 / breakfast)
                    :ARG1-of (c39-8 / call-01
                                    :ARG2 (c39-1 / finish-01
                                                 :ARG0 (c39-3 / you)
                                                 :ARG1 (c39-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c40-0 / open-up-03
       :ARG0 (c40-7 / person
                    :name (c40-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c40-6 / restaurant
                    :mod (c40-2 / breakfast)
                    :ARG1-of (c40-8 / call-01
                                    :ARG2 (c40-1 / finish-01
                                                 :ARG0 (c40-3 / you)
                                                 :ARG1 (c40-5 / omelette)))))

# ::snt too good
# ::tokens ["too", "good"]
# ::lemmas ["too", "good"]
(c41-1 / have-degree-91
       :ARG2 (c41-0 / good-02)
       :ARG3 (c41-2 / too))

# ::snt om nom nom nom
# ::tokens ["om", "nom", "nom", "nom"]
# ::lemmas ["om", "nom", "nom", "nom"]
(c42-0 / nom-01
       :mode expressive)

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c43-0 / open-up-03
       :ARG0 (c43-7 / person
                    :name (c43-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c43-6 / restaurant
                    :mod (c43-2 / breakfast)
                    :ARG1-of (c43-8 / call-01
                                    :ARG2 (c43-1 / finish-01
                                                 :ARG0 (c43-3 / you)
                                                 :ARG1 (c43-5 / omelette)))))

# ::snt lol RT : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens ["lol", "RT", ":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas ["lol", "RT", ":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c44-11 / and
        :op1 (c44-7 / laugh-01
                    :ARG0 (c44-10 / i)
                    :manner (c44-12 / loud)
                    :mode expressive)
        :op2 (c44-0 / open-up-03
                    :ARG0 (c44-8 / person
                                 :name (c44-4 / name
                                              :op1 "Kanye"
                                              :op2 "West"))
                    :ARG1 (c44-6 / restaurant
                                 :ARG1-of (c44-2 / breakfast-01)
                                 :ARG1-of (c44-9 / call-01
                                                 :ARG2 (c44-1 / finish-01
                                                              :ARG0 (c44-3 / you)
                                                              :ARG1 (c44-5 / omelette))))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish".
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", "."]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", "."]
(c45-0 / open-up-03
       :ARG0 (c45-7 / person
                    :name (c45-4 / name
                                 :op1 "Kanye"
                                 :op2 "West"))
       :ARG1 (c45-6 / restaurant
                    :mod (c45-2 / breakfast)
                    :ARG1-of (c45-8 / call-01
                                    :ARG2 (c45-1 / finish-01
                                                 :ARG0 (c45-3 / you)
                                                 :ARG1 (c45-5 / omelette)))))

# ::snt : Kanye West is opening up a breakfast restaurant, it's called, "omelette you finish". Lol
# ::tokens [":", "Kanye", "West", "is", "opening", "up", "a", "breakfast", "restaurant", ",", "it", "'s", "called", ",", "\"", "omelette", "you", "finish", "\"", ".", "Lol"]
# ::lemmas [":", "Kanye", "West", "be", "open", "up", "a", "breakfast", "restaurant", ",", "it", "be", "call", ",", "\"", "omelette", "you", "finish", "\"", ".", "Lol"]
(c46-5 / multi-sentence
       :snt1 (c46-0 / open-up-03
                    :ARG0 (c46-8 / person
                                 :name (c46-4 / name
                                              :op1 "Kanye"
                                              :op2 "West"))
                    :ARG1 (c46-7 / restaurant
                                 :ARG1-of (c46-2 / breakfast-01)
                                 :ARG1-of (c46-10 / call-01
                                                  :ARG2 (c46-1 / finish-01
                                                               :ARG0 (c46-3 / you)
                                                               :ARG1 (c46-6 / omelette)))))
       :snt2 (c46-9 / laugh-01
                    :manner (c46-11 / loud)
                    :mode expressive))

# ::snt So when does the raffle open for pizza?
# ::tokens ["So", "when", "does", "the", "raffle", "open", "for", "pizza", "?"]
# ::lemmas ["so", "when", "do", "the", "raffle", "open", "for", "pizza", "?"]
(c47-1 / open-01
       :ARG1 (c47-3 / raffle-01
                    :purpose (c47-2 / pizza))
       :time (c47-0 / amr-unknown))

# ::snt Hes gonna serve air and tell you to use your imagination to taste the food, then charge you $200 per dish
# ::tokens ["He", "s", "gon", "na", "serve", "air", "and", "tell", "you", "to", "use", "your", "imagination", "to", "taste", "the", "food", ",", "then", "charge", "you", "$", "200", "per", "dish"]
# ::lemmas ["he", "s", "going", "to", "serve", "air", "and", "tell", "you", "to", "use", "your", "imagination", "to", "taste", "the", "food", ",", "then", "charge", "you", "$", "200", "per", "dish"]
(c48-11 / and
        :op1 (c48-10 / and
                     :op1 (c48-3 / serve-02
                                 :ARG0 (c48-5 / he)
                                 :ARG1 (c48-7 / air))
                     :op2 (c48-9 / tell-01
                                 :ARG0 c48-5
                                 :ARG1 (c48-15 / use-01
                                               :ARG0 (c48-1 / you)
                                               :ARG1 (c48-12 / imagine-01
                                                             :ARG0 c48-1)
                                               :ARG2 (c48-16 / taste-01
                                                             :ARG0 c48-1
                                                             :ARG1 (c48-0 / food)))
                                 :ARG2 c48-1))
        :op2 (c48-6 / charge-01
                    :ARG0 c48-5
                    :ARG1 (c48-4 / rate-entity-91
                                 :ARG1 (c48-2 / monetary-quantity
                                              :unit (c48-13 / dollar)
                                              :quant 200)
                                 :ARG2 (c48-8 / dish))
                    :ARG2 c48-1
                    :time (c48-14 / then)))

# ::snt Did you make this up?!?! This is the best thing Ive ever heard.
# ::tokens ["Did", "you", "make", "this", "up", "?", "!", "?", "!", "This", "is", "the", "best", "thing", "I", "ve", "ever", "heard", "."]
# ::lemmas ["do", "you", "make", "this", "up", "?", "!", "?", "!", "this", "be", "the", "good", "thing", "i", "ve", "ever", "hear", "."]
(c50-1 / multi-sentence
       :snt1 (c50-4 / make-up-10
                    :polarity (c50-2 / amr-unknown)
                    :ARG0 (c50-0 / you)
                    :ARG1 (c50-8 / this))
       :snt2 (c50-5 / have-degree-91
                    :ARG1 (c50-12 / thing
                                  :mod (c50-7 / this))
                    :ARG2 (c50-9 / good-02)
                    :ARG3 (c50-11 / most)
                    :ARG5 c50-12
                    :ARG1-of (c50-6 / hear-01
                                    :ARG0 (c50-10 / i)
                                    :time (c50-3 / ever))))
