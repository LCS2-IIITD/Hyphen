# ::snt Hollup
# ::tokens ["Hollup"]
# ::lemmas ["Hollup"]
(c1-1 / person
      :name (c1-0 / name
                  :op1 "Hollup"))

# ::snt Ooh yeah? I doubt you can found such girls here in SA, unless you are into "slay queens"
# ::tokens ["Ooh", "yeah", "?", "I", "doubt", "you", "can", "found", "such", "girls", "here", "in", "SA", ",", "unless", "you", "are", "into", "\"", "slay", "queens", "\""]
# ::lemmas ["ooh", "yeah", "?", "i", "doubt", "you", "can", "find", "such", "girl", "here", "in", "SA", ",", "unless", "you", "be", "into", "\"", "slay", "queen", "\""]
(c2-4 / multi-sentence
      :snt1 (c2-0 / oh-yeah
                  :mode expressive)
      :snt2 (c2-14 / doubt-01
                   :ARG0 (c2-11 / i)
                   :ARG1 (c2-8 / possible-01
                               :ARG1 (c2-1 / find-01
                                           :ARG0 (c2-3 / you)
                                           :ARG1 (c2-13 / girl
                                                        :mod (c2-6 / such))
                                           :location (c2-7 / here
                                                           :location (c2-10 / country
                                                                            :name (c2-5 / name
                                                                                        :op1 "SA"))))
                               :condition (c2-9 / like-01
                                                :ARG0 c2-3
                                                :ARG1 (c2-12 / queen
                                                             :mod (c2-2 / slut))
                                                :polarity -))))

# ::snt Lol... like a Kim K history, it comes with some perks
# ::tokens ["Lol", "...", "like", "a", "Kim", "K", "history", ",", "it", "comes", "with", "some", "perks"]
# ::lemmas ["Lol", "...", "like", "a", "Kim", "K", "history", ",", "it", "come", "with", "some", "perk"]
(c3-7 / come-03
      :ARG1 (c3-8 / it)
      :ARG2 (c3-5 / perk
                  :quant (c3-2 / some))
      :ARG2-of (c3-3 / resemble-01
                     :ARG1 (c3-4 / history
                                 :poss (c3-1 / person
                                             :name (c3-0 / name
                                                         :op1 "Kim"
                                                         :op2 "K"))))
      :ARG2-of (c3-6 / laugh-01
                     :manner (c3-9 / loud)
                     :mode expressive))

# ::snt Don't they all?
# ::tokens ["Do", "n't", "they", "all", "?"]
# ::lemmas ["do", "not", "you", "all", "?"]
(c4-0 / request-confirmation-91
      :ARG1 (c4-2 / they
                  :mod (c4-1 / all)))

# ::snt I like a girl with a history...
# ::tokens ["I", "like", "a", "girl", "with", "a", "history", "..."]
# ::lemmas ["i", "like", "a", "girl", "with", "a", "history", "..."]
(c5-1 / like-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-4 / girl
                  :ARG0-of (c5-0 / have-03
                                 :ARG1 (c5-2 / history))))

# ::snt Kim is rich
# ::tokens ["Kim", "is", "rich"]
# ::lemmas ["Kim", "be", "rich"]
(c6-0 / rich
      :domain (c6-2 / person
                    :name (c6-1 / name
                                :op1 "Kim")))

# ::snt Tricky
# ::tokens ["Tricky"]
# ::lemmas ["tricky"]
(c7-0 / tricky-02)

# ::snt We different people. I will also never date someone like that knowing. Preferences are not the same. Some even date people who are murderers. Asifani
# ::tokens ["We", "different", "people", ".", "I", "will", "also", "never", "date", "someone", "like", "that", "knowing", ".", "Preferences", "are", "not", "the", "same", ".", "Some", "even", "date", "people", "who", "are", "murderers", ".", "Asifani"]
# ::lemmas ["we", "different", "people", ".", "i", "will", "also", "never", "date", "someone", "like", "that", "know", ".", "preference", "be", "not", "the", "same", ".", "some", "even", "date", "people", "who", "be", "murderer", ".", "asifani"]
(c8-10 / multi-sentence
       :snt1 (c8-17 / person
                    :ARG1-of (c8-20 / differ-02)
                    :domain (c8-18 / we))
       :snt2 (c8-13 / date-02
                    :ARG0 (c8-19 / i)
                    :ARG1 (c8-0 / someone
                                :ARG1-of (c8-15 / resemble-01
                                                :ARG2 (c8-8 / that)))
                    :mod (c8-7 / also)
                    :time (c8-16 / ever)
                    :manner (c8-6 / know-01
                                  :ARG0 c8-19)
                    :polarity -)
       :snt3 (c8-4 / same-01
                   :ARG1 (c8-11 / prefer-01)
                   :polarity -)
       :snt4 (c8-12 / date-02
                    :ARG0 (c8-3 / some)
                    :ARG1 (c8-2 / person
                                :ARG0-of (c8-5 / murder-01))
                    :mod (c8-9 / even))
       :snt5 (c8-1 / person
                   :name (c8-14 / name
                                :op1 "Asifani")))

# ::snt But we not puppets like kanye
# ::tokens ["But", "we", "not", "puppets", "like", "kanye"]
# ::lemmas ["but", "we", "not", "puppet", "like", "kanye"]
(c9-3 / contrast-01
      :ARG2 (c9-2 / puppet
                  :example (c9-1 / person
                                 :name (c9-0 / name
                                             :op1 "Kanye"))
                  :domain (c9-4 / we)
                  :polarity -))

# ::snt Kim is rich.
# ::tokens ["Kim", "is", "rich", "."]
# ::lemmas ["Kim", "be", "rich", "."]
(c10-0 / rich
       :domain (c10-2 / person
                      :name (c10-1 / name
                                   :op1 "Kim")))

# ::snt What are you trying to do
# ::tokens ["What", "are", "you", "trying", "to", "do"]
# ::lemmas ["what", "be", "you", "try", "to", "do"]
(c11-3 / try-01
       :ARG0 (c11-1 / you)
       :ARG1 (c11-0 / do-02
                    :ARG0 c11-1
                    :ARG1 (c11-2 / amr-unknown)))

# ::snt Is the girl worth $350 million?
# ::tokens ["Is", "the", "girl", "worth", "$", "350", "million", "?"]
# ::lemmas ["be", "the", "girl", "worth", "$", "350", "million", "?"]
(c12-1 / worth-01
       :polarity (c12-2 / amr-unknown)
       :ARG1 (c12-3 / girl)
       :ARG2 (c12-0 / monetary-quantity
                    :unit (c12-4 / dollar)
                    :quant 400000000))

# ::snt You go gurll
# ::tokens ["You", "go", "gurll"]
# ::lemmas ["you", "go", "gurll"]
(c13-0 / go-23
       :ARG1 (c13-1 / you)
       :ARG2 (c13-2 / gurll)
       :mode imperative)

# ::snt Ok, real husband...
# ::tokens ["Ok", ",", "real", "husband", "..."]
# ::lemmas ["ok", ",", "real", "husband", "..."]
(c14-3 / person
       :ARG0-of (c14-2 / have-rel-role-91
                       :ARG2 (c14-0 / husband))
       :ARG1-of (c14-1 / real-04))

# ::snt virtual husband*
# ::tokens ["virtual", "husband", "*"]
# ::lemmas ["virtual", "husband", "*"]
(c15-3 / person
       :ARG0-of (c15-2 / have-rel-role-91
                       :ARG2 (c15-0 / husband))
       :mod (c15-1 / virtual))

# ::snt What a joke
# ::tokens ["What", "a", "joke"]
# ::lemmas ["what", "a", "joke"]
(c16-0 / joke-01
       :mod (c16-1 / so))

# ::snt Lmaoooo Issa vibe lmao
# ::tokens ["Lmaoooo", "Issa", "vibe", "lmao"]
# ::lemmas ["Lmaoooo", "Issa", "vibe", "lmao"]
(c19-6 / and
       :op1 (c19-3 / laugh-01
                   :ARG0 (c19-5 / i)
                   :manner (c19-7 / loud)
                   :mode expressive)
       :op2 (c19-2 / laugh-01
                   :ARG0 c19-5
                   :manner c19-7
                   :mode expressive)
       :op3 (c19-1 / vibe
                   :mod (c19-4 / person
                               :name (c19-0 / name
                                            :op1 "Issa"))))

# ::snt I peep you riding in that space ship
# ::tokens ["I", "peep", "you", "riding", "in", "that", "space", "ship"]
# ::lemmas ["i", "peep", "you", "ride", "in", "that", "space", "ship"]
(c20-4 / peep-01
       :ARG0 (c20-5 / i)
       :ARG1 (c20-3 / ride-01
                    :ARG0 (c20-1 / you)
                    :ARG1 (c20-2 / ship
                                 :mod (c20-0 / space)
                                 :mod (c20-6 / that))))

# ::snt Yessir
# ::tokens ["Yessir"]
# ::lemmas ["Yessir"]
(c21-1 / person
       :name (c21-0 / name
                    :op1 "Yessir"))

# ::snt Hah Happy
# ::tokens ["Hah", "Happy"]
# ::lemmas ["Hah", "Happy"]
(c22-1 / happy-01
       :mod (c22-0 / haha))

# ::snt West is a gay fish, no????
# ::tokens ["West", "is", "a", "gay", "fish", ",", "no", "?", "?", "?", "?"]
# ::lemmas ["West", "be", "a", "gay", "fish", ",", "no", "?", "?", "?", "?"]
(c23-0 / fish
       :ARG1-of (c23-4 / gay-01)
       :domain (c23-3 / person
                      :name (c23-1 / name
                                   :op1 "West"))
       :ARG1-of (c23-2 / request-confirmation-91))

# ::snt Me too!
# ::tokens ["Me", "too", "!"]
# ::lemmas ["i", "too", "!"]
(c24-0 / i
       :mod (c24-1 / too))

# ::snt I like the dress.
# ::tokens ["I", "like", "the", "dress", "."]
# ::lemmas ["i", "like", "the", "dress", "."]
(c25-1 / like-01
       :ARG0 (c25-2 / i)
       :ARG1 (c25-0 / dress))

# ::snt Rock on
# ::tokens ["Rock", "on"]
# ::lemmas ["rock", "on"]
(c26-0 / rock-on-02)

# ::snt Now why wouldnt that be restaurant friendly?
# ::tokens ["Now", "why", "would", "nt", "that", "be", "restaurant", "friendly", "?"]
# ::lemmas ["now", "why", "would", "not", "that", "be", "restaurant", "friendly", "?"]
(c27-0 / friendly-01
       :ARG1 (c27-4 / that)
       :ARG2 (c27-2 / restaurant)
       :ARG1-of (c27-3 / cause-01
                       :ARG0 (c27-5 / amr-unknown))
       :time (c27-1 / now)
       :polarity -)

# ::snt Ummm latex isn't restraunt friendly? Well then.... News to me...She should get this in red as well
# ::tokens ["Ummm", "latex", "is", "n't", "restraunt", "friendly", "?", "Well", "then", "....", "News", "to", "me", "...", "She", "should", "get", "this", "in", "red", "as", "well"]
# ::lemmas ["ummm", "latex", "be", "not", "restraunt", "friendly", "?", "well", "then", "....", "news", "to", "i", "...", "she", "should", "get", "this", "in", "red", "as", "well"]
(c28-2 / multi-sentence
       :snt1 (c28-0 / friendly-01
                    :ARG1 (c28-7 / product
                                 :name (c28-1 / name
                                              :op1 " latex"))
                    :ARG2 (c28-5 / restraunt)
                    :polarity (c28-12 / amr-unknown)
                    :polarity (c28-11 / amr-unknown)
                    :mod (c28-16 / umm
                                 :mode expressive)
                    :polarity -)
       :snt2 (c28-9 / and
                    :op1 (c28-6 / news
                                :beneficiary (c28-13 / i))
                    :op2 (c28-15 / recommend-01
                                 :ARG1 (c28-3 / get-01
                                              :ARG0 (c28-4 / she)
                                              :ARG1 (c28-10 / this)
                                              :manner (c28-8 / red-02)
                                              :mod (c28-14 / as-well)))))

# ::snt Are they reffering to that?Because that is pretty tame, to be honest.
# ::tokens ["Are", "they", "reffering", "to", "that?Because", "that", "is", "pretty", "tame", ",", "to", "be", "honest", "."]
# ::lemmas ["be", "they", "reffere", "to", "that?because", "that", "be", "pretty", "tame", ",", "to", "be", "honest", "."]
(c29-0 / reffer-01
       :polarity (c29-1 / amr-unknown)
       :ARG0 (c29-6 / they)
       :ARG1 (c29-7 / that)
       :ARG1-of (c29-4 / cause-01
                       :ARG0 (c29-5 / tame-01
                                    :ARG1 c29-7
                                    :degree (c29-3 / pretty)
                                    :condition (c29-2 / honest-01))))

# ::snt Lmao end him
# ::tokens ["Lmao", "end", "him"]
# ::lemmas ["Lmao", "end", "he"]
(c30-0 / end-01
       :ARG1 (c30-1 / he)
       :mod (c30-2 / laugh-01
                   :ARG0 (c30-3 / i)
                   :manner (c30-4 / loud)
                   :mode expressive))

# ::snt sos lmao
# ::tokens ["sos", "lmao"]
# ::lemmas ["sos", "lmao"]
(c31-1 / laugh-01
       :ARG0 (c31-2 / i
                    :part (c31-3 / ass))
       :ARG3 (c31-0 / off
                    :op1 c31-3))

# ::snt Run
# ::tokens ["Run"]
# ::lemmas ["run"]
(c32-0 / run-02)

# ::snt He should have listened. Has he grown or gotten worse since he got married? Other than the sweet kids, of course.
# ::tokens ["He", "should", "have", "listened", ".", "Has", "he", "grown", "or", "gotten", "worse", "since", "he", "got", "married", "?", "Other", "than", "the", "sweet", "kids", ",", "of", "course", "."]
# ::lemmas ["he", "should", "have", "listen", ".", "have", "he", "grow", "or", "get", "bad", "since", "he", "got", "marry", "?", "other", "than", "the", "sweet", "kid", ",", "of", "course", "."]
(c33-3 / multi-sentence
       :snt1 (c33-5 / recommend-01
                    :ARG1 (c33-8 / listen-01
                                 :ARG0 (c33-7 / he)))
       :snt2 (c33-0 / or
                    :op1 (c33-15 / grow-01
                                 :ARG1 (c33-12 / he))
                    :op2 (c33-11 / worsen-01
                                 :ARG1 c33-12)
                    :time (c33-4 / since
                                 :op1 (c33-9 / marry-01
                                             :ARG1 c33-12))
                    :polarity (c33-14 / amr-unknown)
                    :ARG2-of (c33-6 / except-01
                                    :ARG1 (c33-10 / kid
                                                  :ARG1-of (c33-1 / sweet-05))
                                    :mod (c33-2 / of-course))
                    :polarity (c33-13 / amr-unknown)))

# ::snt Who Cares!
# ::tokens ["Who", "Cares", "!"]
# ::lemmas ["who", "Cares", "!"]
(c34-0 / care-01
       :ARG0 (c34-1 / amr-unknown)
       :mode expressive)

# ::snt Should be the other way around Ye got more issues
# ::tokens ["Should", "be", "the", "other", "way", "around", "Ye", "got", "more", "issues"]
# ::lemmas ["should", "be", "the", "other", "way", "around", "Ye", "get", "more", "issue"]
(c35-2 / recommend-01
       :ARG1 (c35-4 / way
                    :mod (c35-0 / other)
                    :mod (c35-6 / around)
                    :domain (c35-7 / get-02
                                   :ARG0 (c35-3 / person)
                                   :ARG1 (c35-5 / issue-02
                                                :quant (c35-1 / more)))))

# ::snt Uh...but shes the normal one in this relationship.
# ::tokens ["Uh", "...", "but", "she", "s", "the", "normal", "one", "in", "this", "relationship", "."]
# ::lemmas ["uh", "...", "but", "she", "s", "the", "normal", "one", "in", "this", "relationship", "."]
(c36-3 / contrast-01
       :ARG2 (c36-0 / normal-02
                    :ARG1 (c36-1 / she)
                    :location (c36-2 / relation-03
                                     :mod (c36-4 / this)))
       :mod (c36-5 / uh
                   :mode expressive))

# ::snt No one gives a shit about your sex tape! That must be why you bring it up all the time! Let it go with all the other vhs and beta tapes go to die.
# ::tokens ["No", "one", "gives", "a", "shit", "about", "your", "sex", "tape", "!", "That", "must", "be", "why", "you", "bring", "it", "up", "all", "the", "time", "!", "Let", "it", "go", "with", "all", "the", "other", "vhs", "and", "beta", "tapes", "go", "to", "die", "."]
# ::lemmas ["no", "one", "give", "a", "shit", "about", "your", "sex", "tape", "!", "that", "must", "be", "why", "you", "bring", "it", "up", "all", "the", "time", "!", "let", "it", "go", "with", "all", "the", "other", "vhs", "and", "beta", "tape", "go", "to", "die", "."]
(c37-18 / multi-sentence
        :snt1 (c37-14 / give-16
                      :ARG0 (c37-21 / no-one)
                      :ARG1 (c37-0 / shit)
                      :ARG2 (c37-13 / tape
                                    :mod (c37-6 / sex)
                                    :poss (c37-8 / you)))
        :snt2 (c37-22 / infer-01
                      :ARG1 (c37-19 / cause-01
                                    :ARG0 (c37-20 / that)
                                    :ARG1 (c37-17 / bring-up-02
                                                  :ARG0 (c37-15 / you)
                                                  :ARG1 c37-13
                                                  :frequency (c37-23 / time
                                                                     :mod (c37-12 / all)))))
        :snt3 (c37-3 / let-01
                     :ARG0 (c37-5 / you)
                     :ARG1 (c37-4 / go-01
                                  :ARG1 (c37-9 / it)
                                  :accompanier (c37-11 / and
                                                       :op1 (c37-1 / tape
                                                                   :mod (c37-7 / other)
                                                                   :mod (c37-10 / all))
                                                       :op2 (c37-16 / tape
                                                                    :mod (c37-2 / beta)))
                                  :ARG0-of c37-19
                                  :ARG1 (c37-24 / die-01
                                                :ARG1 c37-11))
                     :mode imperative))

# ::snt trash attracts trash
# ::tokens ["trash", "attracts", "trash"]
# ::lemmas ["trash", "attract", "trash"]
(c38-2 / attract-01
       :ARG0 (c38-0 / trash)
       :ARG1 (c38-1 / trash))

# ::snt Probably shouldve listened!!
# ::tokens ["Probably", "should", "ve", "listened", "!", "!"]
# ::lemmas ["probably", "should", "ve", "listen", "!", "!"]
(c39-1 / probable
       :domain (c39-2 / listen-01
                      :ARG0 (c39-0 / i)))

# ::snt That CAN'T be the only reason. That's not even top .
# ::tokens ["That", "CAN'T", "be", "the", "only", "reason", ".", "That", "'s", "not", "even", "top", "."]
# ::lemmas ["that", "can't", "be", "the", "only", "reason", ".", "that", "be", "not", "even", "top", "."]
(c40-1 / multi-sentence
       :snt1 (c40-4 / possible-01
                    :ARG1 (c40-2 / reason
                                 :mod (c40-0 / only)
                                 :domain (c40-6 / that))
                    :polarity -)
       :snt2 (c40-7 / top-01
                    :ARG1 (c40-5 / that)
                    :mod (c40-3 / even)
                    :polarity -))

# ::snt Haha thats right Jay, B and everyone else.
# ::tokens ["Haha", "that", "s", "right", "Jay", ",", "B", "and", "everyone", "else", "."]
# ::lemmas ["Haha", "that", "s", "right", "Jay", ",", "B", "and", "everyone", "else", "."]
(c41-2 / right-06
       :ARG2 (c41-7 / and
                    :op1 (c41-5 / person
                                :name (c41-0 / name
                                             :op1 "Jay"))
                    :op2 (c41-1 / person
                                :name (c41-4 / name
                                             :op1 "B"))
                    :op3 (c41-3 / everyone
                                :mod (c41-8 / else)))
       :mod (c41-6 / haha
                   :mode expressive))

# ::snt He liked!!
# ::tokens ["He", "liked", "!", "!"]
# ::lemmas ["he", "like", "!", "!"]
(c42-1 / like-01
       :ARG0 (c42-0 / he))

# ::snt Everyone has a past so why should that stop people from dating and that tape should never got leaked people need to leave them alone and let them be happy xx
# ::tokens ["Everyone", "has", "a", "past", "so", "why", "should", "that", "stop", "people", "from", "dating", "and", "that", "tape", "should", "never", "got", "leaked", "people", "need", "to", "leave", "them", "alone", "and", "let", "them", "be", "happy", "xx"]
# ::lemmas ["everyone", "have", "a", "past", "so", "why", "should", "that", "stop", "people", "from", "date", "and", "that", "tape", "should", "never", "got", "leak", "people", "need", "to", "leave", "they", "alone", "and", "let", "they", "be", "happy", "xx"]
(c43-13 / multi-sentence
        :snt1 (c43-4 / have-03
                     :ARG0 (c43-19 / everyone)
                     :ARG1 (c43-20 / past)
                     :ARG0-of (c43-15 / cause-01
                                      :ARG1 (c43-18 / recommend-01
                                                    :ARG1 (c43-0 / stop-03
                                                                 :ARG0 (c43-9 / that)
                                                                 :ARG1 (c43-14 / person)
                                                                 :ARG2 (c43-23 / date-02
                                                                               :ARG0 c43-14)))))
        :snt2 (c43-12 / cause-01
                      :ARG0 (c43-8 / amr-unknown)
                      :ARG1 (c43-3 / recommend-01
                                   :ARG1 (c43-1 / leak-01
                                                :ARG1 (c43-16 / tape
                                                              :mod (c43-22 / that))
                                                :time (c43-10 / ever)
                                                :polarity -)))
        :snt3 (c43-17 / need-01
                      :ARG0 (c43-2 / person)
                      :ARG1 (c43-7 / and
                                   :op1 (c43-11 / leave-14
                                                :ARG0 c43-2
                                                :ARG1 (c43-6 / alone
                                                             :domain c43-2))
                                   :op2 (c43-5 / let-01
                                               :ARG0 c43-2
                                               :ARG1 (c43-21 / happy-01
                                                             :ARG1 c43-2)))))

# ::snt I think people seem to forget she made a sex tape with a guy she had dated for yrs she was in relationship i'm not in any way saying that its right but it wasn't some random hookup
# ::tokens ["I", "think", "people", "seem", "to", "forget", "she", "made", "a", "sex", "tape", "with", "a", "guy", "she", "had", "dated", "for", "yrs", "she", "was", "in", "relationship", "i", "'m", "not", "in", "any", "way", "saying", "that", "its", "right", "but", "it", "was", "n't", "some", "random", "hookup"]
# ::lemmas ["i", "think", "people", "seem", "to", "forget", "she", "make", "a", "sex", "tape", "with", "a", "guy", "she", "have", "date", "for", "yr", "she", "be", "in", "relationship", "i", "be", "not", "in", "any", "way", "say", "that", "its", "right", "but", "it", "be", "not", "some", "random", "hookup"]
(c44-12 / multi-sentence
        :snt1 (c44-9 / think-01
                     :ARG0 (c44-20 / i)
                     :ARG1 (c44-0 / seem-01
                                  :ARG1 (c44-16 / forget-01
                                                :ARG0 (c44-19 / person)
                                                :ARG1 (c44-15 / tape-02
                                                              :ARG0 (c44-4 / she)
                                                              :ARG1 (c44-3 / sex-01
                                                                           :ARG0 c44-4
                                                                           :ARG1 (c44-10 / guy
                                                                                         :ARG1-of (c44-22 / date-02
                                                                                                          :ARG0 c44-4
                                                                                                          :duration (c44-7 / multiple
                                                                                                                           :op1 (c44-21 / temporal-quantity
                                                                                                                                        :unit (c44-5 / year)
                                                                                                                                        :quant 1))
                                                                                                          :time-of (c44-18 / relation-03
                                                                                                                           :ARG0 c44-4
                                                                                                                           :ARG1 c44-4))))))))
        :snt2 (c44-14 / contrast-01
                      :ARG1 (c44-17 / say-01
                                    :ARG0 (c44-6 / i)
                                    :ARG1 (c44-2 / right-02
                                                 :ARG1 c44-15)
                                    :manner (c44-11 / any)
                                    :polarity -)
                      :ARG2 (c44-8 / hook-up-02
                                   :mod (c44-13 / random)
                                   :domain c44-15
                                   :mod (c44-1 / some)
                                   :polarity -)))

# ::snt Yet no one toments rayj interesting
# ::tokens ["Yet", "no", "one", "toments", "rayj", "interesting"]
# ::lemmas ["yet", "no", "one", "toment", "rayj", "interesting"]
(c45-1 / have-concession-91
       :ARG1 (c45-4 / interest-01
                    :ARG0 (c45-0 / no-one)
                    :ARG2 (c45-2 / person
                                 :name (c45-3 / name
                                              :op1 "Rayj"))))

# ::snt And who cares??
# ::tokens ["And", "who", "cares", "?", "?"]
# ::lemmas ["and", "who", "care", "?", "?"]
(c46-2 / and
       :op2 (c46-0 / care-01
                   :ARG0 (c46-1 / amr-unknown)))

# ::snt Maybe someone should have warned her not to date him because hes off his rocker?!
# ::tokens ["Maybe", "someone", "should", "have", "warned", "her", "not", "to", "date", "him", "because", "he", "s", "off", "his", "rocker", "?", "!"]
# ::lemmas ["maybe", "someone", "should", "have", "warn", "she", "not", "to", "date", "he", "because", "he", "s", "off", "his", "rocker", "?", "!"]
(c47-5 / possible-01
       :ARG1 (c47-3 / recommend-01
                    :ARG1 (c47-6 / warn-01
                                 :ARG0 (c47-2 / someone)
                                 :ARG1 (c47-9 / date-02
                                              :ARG0 (c47-0 / she)
                                              :ARG1 (c47-4 / he)
                                              :ARG1-of (c47-7 / cause-01
                                                              :ARG0 (c47-1 / off
                                                                           :op1 (c47-10 / rocker
                                                                                        :poss c47-4)
                                                                           :domain c47-4))
                                              :polarity -)
                                 :ARG2 c47-0)
                    :ARG2 c47-2)
       :polarity (c47-8 / amr-unknown))

# ::snt A little to late for that
# ::tokens ["A", "little", "to", "late", "for", "that"]
# ::lemmas ["a", "little", "to", "late", "for", "that"]
(c50-1 / late
       :degree (c50-0 / little)
       :topic (c50-2 / that))
