# ::snt Pues que quieres que te diga, PUTA AMA!
# ::tokens ["Pues", "que", "quieres", "que", "te", "diga", ",", "PUTA", "AMA", "!"]
# ::lemmas ["pue", "que", "quiere", "que", "te", "diga", ",", "PUTA", "AMA", "!"]
(c1-5 / and
      :op1 (c1-4 / quieres-polarity-91
                 :ARG1 (c1-6 / diga-00
                             :ARG0 (c1-0 / you)))
      :op2 (c1-2 / publication
                 :name (c1-1 / name
                             :op1 "AMA")
                 :ARG1-of (c1-3 / knock-out-03)))

# ::snt Information? Ha ha ha! Shame
# ::tokens ["Information", "?", "Ha", "ha", "ha", "!", "Shame"]
# ::lemmas ["information", "?", "ha", "ha", "ha", "!", "shame"]
(c3-0 / multi-sentence
      :snt1 (c3-3 / information
                  :polarity (c3-4 / amr-unknown))
      :snt2 (c3-2 / ha
                  :mode expressive)
      :snt3 (c3-1 / shame-02))

# ::snt At least she went out on a high.
# ::tokens ["At", "least", "she", "went", "out", "on", "a", "high", "."]
# ::lemmas ["at", "least", "she", "go", "out", "on", "a", "high", "."]
(c4-0 / go-out-17
      :ARG0 (c4-3 / she)
      :manner (c4-2 / high-02)
      :mod (c4-1 / at-least))

# ::snt -
# ::tokens ["-"]
# ::lemmas ["-"]
(c5-0 / amr-empty)

# ::snt Idol!
# ::tokens ["Idol", "!"]
# ::lemmas ["Idol", "!"]
(c6-0 / idiot)

# ::snt so so sad.
# ::tokens ["so", "so", "sad", "."]
# ::lemmas ["so", "so", "sad", "."]
(c7-1 / sad-02
      :degree (c7-0 / so))

# ::snt Let rest her!!
# ::tokens ["Let", "rest", "her", "!", "!"]
# ::lemmas ["let", "rest", "she", "!", "!"]
(c8-1 / rest-01
      :ARG0 (c8-2 / we)
      :ARG1 (c8-0 / she)
      :mode imperative)

# ::snt Carrie Mixer...
# ::tokens ["Carrie", "Mixer", "..."]
# ::lemmas ["Carrie", "Mixer", "..."]
(c9-1 / person
      :name (c9-0 / name
                  :op1 "Carrie"
                  :op2 "Mixer"))

# ::snt Que fuerte esto es un suicidio lo que a echo ella dep
# ::tokens ["Que", "fuerte", "esto", "es", "un", "suicidio", "lo", "que", "a", "echo", "ella", "dep"]
# ::lemmas ["Que", "fuerte", "esto", "es", "un", "suicidio", "lo", "que", "a", "echo", "ella", "dep"]
(c10-1 / suicidio
       :domain (c10-2 / esto)
       :ARG1-of (c10-4 / cause-01
                       :ARG0 (c10-7 / amr-unknown))
       :ARG1-of (c10-9 / cause-01
                       :ARG0 (c10-8 / echo-01
                                    :ARG1 (c10-3 / person
                                                 :name (c10-0 / name
                                                              :op1 "Ella"
                                                              :op2 "Dep"))))
       :ARG1-of (c10-5 / cause-01
                       :ARG0 (c10-6 / amr-unknown)))

# ::snt . Why in God's name would your paper disclose such personal and confi. info on Carrie Fisher. I hope u get sued.
# ::tokens [".", "Why", "in", "God", "'s", "name", "would", "your", "paper", "disclose", "such", "personal", "and", "confi", ".", "info", "on", "Carrie", "Fisher", ".", "I", "hope", "u", "get", "sued", "."]
# ::lemmas [".", "why", "in", "God", "'s", "name", "would", "your", "paper", "disclose", "such", "personal", "and", "confi", ".", "info", "on", "Carrie", "Fisher", ".", "i", "hope", "u", "get", "sue", "."]
(c11-2 / multi-sentence
       :snt1 (c11-16 / disclose-01
                     :ARG0 (c11-9 / paper
                                  :poss (c11-1 / you))
                     :ARG1 (c11-14 / information
                                   :ARG1-of (c11-3 / personal-02)
                                   :mod (c11-12 / confidential)
                                   :mod (c11-4 / such)
                                   :topic (c11-15 / person
                                                  :name (c11-5 / name
                                                               :op1 "Carrie"
                                                               :op2 "Fishers")))
                     :ARG1-of (c11-17 / cause-01
                                      :ARG0 (c11-6 / amr-unknown))
                     :manner (c11-8 / name
                                    :poss (c11-13 / person
                                                  :name (c11-10 / name
                                                                :op1 "God"))))
       :snt2 (c11-11 / hope-01
                     :ARG0 (c11-7 / i)
                     :ARG1 (c11-0 / sue-02
                                  :ARG1 c11-1)))

# ::snt No tena problemas con las drogas: le gustaban todas!!!
# ::tokens ["No", "tena", "problemas", "con", "las", "drogas", ":", "le", "gustaban", "todas", "!", "!", "!"]
# ::lemmas ["no", "tena", "problemas", "con", "las", "drogas", ":", "le", "gustaban", "toda", "!", "!", "!"]
(c12-0 / multi-sentence
       :snt1 (c12-2 / have-03
                    :ARG0 (c12-5 / i)
                    :ARG1 (c12-3 / problem
                                 :quant 10)
                    :topic (c12-7 / gas
                                  :mod (c12-8 / drogas))
                    :polarity -)
       :snt2 (c12-6 / gustaban-00
                    :ARG0 (c12-1 / i)
                    :ARG1 (c12-4 / todas)))

# ::snt Holy shit!
# ::tokens ["Holy", "shit", "!"]
# ::lemmas ["holy", "shit", "!"]
(c13-1 / shit
       :mod (c13-0 / holy)
       :mode expressive)

# ::snt Why are you doing this? Let her rest in peace.
# ::tokens ["Why", "are", "you", "doing", "this", "?", "Let", "her", "rest", "in", "peace", "."]
# ::lemmas ["why", "be", "you", "do", "this", "?", "let", "she", "rest", "in", "peace", "."]
(c14-1 / multi-sentence
       :snt1 (c14-6 / cause-01
                    :ARG0 (c14-8 / amr-unknown)
                    :ARG1 (c14-9 / do-02
                                 :ARG0 (c14-0 / you)
                                 :ARG1 (c14-7 / this)))
       :snt2 (c14-4 / let-01
                    :ARG0 c14-0
                    :ARG1 (c14-3 / rest-01
                                 :ARG1 (c14-2 / she)
                                 :manner (c14-5 / peace))
                    :mode imperative))

# ::snt What an unkind thing to say.
# ::tokens ["What", "an", "unkind", "thing", "to", "say", "."]
# ::lemmas ["what", "an", "unkind", "thing", "to", "say", "."]
(c15-3 / thing
       :ARG1-of (c15-2 / kind-01
                       :degree (c15-0 / so)
                       :polarity -)
       :ARG1-of (c15-1 / say-01))

# ::snt And? Doesn't change the person she was. Bipolars always seek an alternate reality, I have friends struggling daily. They're still good ppl
# ::tokens ["And", "?", "Does", "n't", "change", "the", "person", "she", "was", ".", "Bipolars", "always", "seek", "an", "alternate", "reality", ",", "I", "have", "friends", "struggling", "daily", ".", "They", "'re", "still", "good", "ppl"]
# ::lemmas ["and", "?", "do", "not", "change", "the", "person", "she", "be", ".", "bipolar", "always", "seek", "an", "alternate", "reality", ",", "i", "have", "friend", "struggle", "daily", ".", "they", "be", "still", "good", "ppl"]
(c16-12 / multi-sentence
        :snt1 (c16-10 / and
                      :op2 (c16-8 / amr-unknown)
                      :op3 (c16-14 / change-01
                                   :ARG1 (c16-20 / person
                                                 :domain (c16-0 / she))
                                   :polarity -))
        :snt2 (c16-4 / seek-01
                     :ARG0 (c16-13 / person
                                   :ARG0-of (c16-5 / olars-01))
                     :ARG1 (c16-18 / reality
                                   :mod (c16-7 / alternate))
                     :time (c16-22 / always))
        :snt3 (c16-3 / struggle-02
                     :ARG0 (c16-1 / person
                                  :ARG0-of (c16-6 / have-rel-role-91
                                                  :ARG1 (c16-21 / i)
                                                  :ARG2 (c16-16 / friend)))
                     :frequency (c16-2 / rate-entity-91
                                       :ARG3 (c16-9 / temporal-quantity
                                                    :unit (c16-19 / day)
                                                    :quant 1))
                     :snt4 (c16-11 / good-02
                                   :ARG1 (c16-15 / they)
                                   :mod (c16-17 / still))))

# ::snt And blood.
# ::tokens ["And", "blood", "."]
# ::lemmas ["and", "blood", "."]
(c17-1 / and
       :op2 (c17-0 / blood))

# ::snt damn, I wonder what was troubling her.
# ::tokens ["damn", ",", "I", "wonder", "what", "was", "troubling", "her", "."]
# ::lemmas ["damn", ",", "i", "wonder", "what", "be", "trouble", "she", "."]
(c19-1 / wonder-01
       :ARG0 (c19-3 / i)
       :ARG1 (c19-2 / thing
                    :ARG0-of (c19-4 / trouble-01
                                    :ARG1 (c19-0 / she)))
       :mod (c19-5 / damn
                   :mode expressive))

# ::snt Just more no-talent H'wood trash. Good riddance.
# ::tokens ["Just", "more", "no", "-", "talent", "H'wood", "trash", ".", "Good", "riddance", "."]
# ::lemmas ["just", "more", "no", "-", "talent", "h'wood", "trash", ".", "good", "riddance", "."]
(c20-1 / multi-sentence
       :snt1 (c20-5 / trash
                    :mod (c20-7 / talent
                                :polarity -)
                    :mod (c20-4 / person
                                :name (c20-0 / name
                                             :op1 "H'wood"))
                    :mod (c20-3 / more)
                    :mod (c20-6 / just))
       :snt2 (c20-2 / riddance
                    :ARG1-of (c20-8 / good-02)))

# ::snt Rest well, Carrie Fisher.
# ::tokens ["Rest", "well", ",", "Carrie", "Fisher", "."]
# ::lemmas ["rest", "well", ",", "Carrie", "Fisher", "."]
(c21-1 / say-01
       :ARG1 (c21-2 / rest-01
                    :ARG1 (c21-3 / person
                                 :name (c21-0 / name
                                              :op1 "Carrie"
                                              :op2 "Fishers"))
                    :ARG1-of (c21-4 / well-09))
       :ARG2 c21-3)

# ::snt Carrie
# ::tokens ["Carrie"]
# ::lemmas ["carrie"]
(c22-1 / person
       :name (c22-0 / name
                    :op1 "Carrie"))

# ::snt Is this truly necessary? Let the woman rest in peace. ...
# ::tokens ["Is", "this", "truly", "necessary", "?", "Let", "the", "woman", "rest", "in", "peace", ".", "..."]
# ::lemmas ["be", "this", "truly", "necessary", "?", "let", "the", "woman", "rest", "in", "peace", ".", "..."]
(c23-2 / multi-sentence
       :snt1 (c23-1 / need-01
                    :polarity (c23-3 / amr-unknown)
                    :ARG1 (c23-8 / this)
                    :ARG1-of (c23-9 / true-01))
       :snt2 (c23-5 / let-01
                    :ARG0 (c23-0 / you)
                    :ARG1 (c23-4 / rest-01
                                 :ARG1 (c23-7 / woman)
                                 :manner (c23-6 / peace))
                    :mode imperative))

# ::snt Bsicamente se dio con todo
# ::tokens ["Bsicamente", "se", "dio", "con", "todo"]
# ::lemmas ["Bsicamente", "se", "dio", "con", "todo"]
(c24-0 / amr-unintelligible
       :value "Bsicamente")

# ::snt Now this girl will finally be healed. John :28, .
# ::tokens ["Now", "this", "girl", "will", "finally", "be", "healed", ".", "John", ":", "28", ",", "."]
# ::lemmas ["now", "this", "girl", "will", "finally", "be", "heal", ".", "John", ":", "28", ",", "."]
(c25-2 / multi-sentence
       :snt1 (c25-4 / heal-01
                    :ARG1 (c25-8 / girl
                                 :mod (c25-7 / this))
                    :time (c25-1 / now)
                    :mod (c25-0 / final))
       :snt2 (c25-5 / publication-91
                    :ARG0 (c25-3 / person
                                 :name (c25-6 / name
                                              :op1 "John"))
                    :ARG1 28))
