# ::snt Whatever Angelina and Brad decided to do to celebrate Christmas is their business. If they want to come together for the sake of the children that would also be their business.
# ::tokens ["Whatever", "Angelina", "and", "Brad", "decided", "to", "do", "to", "celebrate", "Christmas", "is", "their", "business", ".", "If", "they", "want", "to", "come", "together", "for", "the", "sake", "of", "the", "children", "that", "would", "also", "be", "their", "business", "."]
# ::lemmas ["whatever", "Angelina", "and", "Brad", "decide", "to", "do", "to", "celebrate", "Christmas", "be", "their", "business", ".", "if", "they", "want", "to", "come", "together", "for", "the", "sake", "of", "the", "child", "that", "would", "also", "be", "their", "business", "."]
(c1-10 / multi-sentence
       :snt1 (c1-9 / business
                   :domain (c1-19 / whatever
                                  :ARG1-of (c1-20 / do-02
                                                  :ARG0 (c1-7 / and
                                                              :op1 (c1-17 / person
                                                                          :name (c1-16 / name
                                                                                       :op1 "Angelina"))
                                                              :op2 (c1-11 / person
                                                                          :name (c1-12 / name
                                                                                       :op1 "Brad")))
                                                  :ARG2 (c1-13 / celebrate-01
                                                               :ARG0 c1-7
                                                               :ARG1 (c1-15 / festival
                                                                            :name (c1-18 / name
                                                                                         :op1 "Christmas")))
                                                  :ARG1-of (c1-14 / decide-01
                                                                  :ARG0 c1-7)))
                   :poss c1-7)
       :snt2 (c1-1 / business
                   :domain (c1-8 / come-01
                                 :ARG1 (c1-5 / and
                                             :op1 c1-17
                                             :op2 c1-11)
                                 :manner (c1-6 / together)
                                 :purpose (c1-0 / sake
                                                :poss (c1-3 / child)))
                   :mod (c1-4 / also)
                   :condition (c1-2 / want-01
                                    :ARG0 c1-5
                                    :ARG1 c1-8)))

# ::snt You're Awesome love
# ::tokens ["You", "'re", "Awesome", "love"]
# ::lemmas ["you", "be", "Awesome", "love"]
(c2-1 / love-01
      :ARG0 (c2-0 / you)
      :ARG1-of (c2-2 / awe-01))

# ::snt . latest chapter of THIS SHITSHOW/DRAMA (December , )
# ::tokens [".", "latest", "chapter", "of", "THIS", "SHITSHOW", "/", "DRAMA", "(", "December", ",", ")"]
# ::lemmas [".", "late", "chapter", "of", "this", "SHITSHOW", "/", "DRAMA", "(", "December", ",", ")"]
(c3-3 / chapter
      :mod (c3-2 / last)
      :part-of (c3-0 / book
                     :name (c3-1 / name
                                 :op1 "ShitSHOW/DRAMA")
                     :mod (c3-4 / this))
      :time (c3-5 / date-entity
                  :month 12))

# ::snt . SHE'S STILL in charge: hashtag in ALL CAPS (December , )
# ::tokens [".", "SHE", "'S", "STILL", "in", "charge", ":", "hashtag", "in", "ALL", "CAPS", "(", "December", ",", ")"]
# ::lemmas [".", "SHE", "be", "still", "in", "charge", ":", "hashtag", "in", "all", "CAPS", "(", "December", ",", ")"]
(c4-4 / charge-05
      :ARG1 (c4-2 / she)
      :mod (c4-0 / still)
      :ARG1-of (c4-1 / mean-01
                     :ARG2 (c4-3 / hashtag
                                 :location (c4-7 / CAP
                                                 :mod (c4-5 / all))
                                 :time (c4-6 / date-entity
                                             :month 12))))

# ::snt . "opens the door" is NOT "yes"; it's "MAYBE" (December , )
# ::tokens [".", "\"", "opens", "the", "door", "\"", "is", "NOT", "\"", "yes", "\"", ";", "it", "'s", "\"", "MAYBE", "\"", "(", "December", ",", ")"]
# ::lemmas [".", "\"", "open", "the", "door", "\"", "be", "not", "\"", "yes", "\"", ";", "it", "be", "\"", "maybe", "\"", "(", "December", ",", ")"]
(c5-2 / multi-sentence
      :snt1 (c5-1 / yes
                  :domain (c5-0 / open-01
                                :ARG1 (c5-5 / door))
                  :polarity -)
      :snt2 (c5-4 / date-entity
                  :ARG1-of (c5-3 / mean-01
                                 :ARG2 c5-4)
                  :month 12))

# ::snt THREE things note here (December , )
# ::tokens ["THREE", "things", "note", "here", "(", "December", ",", ")"]
# ::lemmas ["THREE", "thing", "note", "here", "(", "December", ",", ")"]
(c6-2 / note-01
      :ARG1 (c6-3 / thing
                  :quant 3)
      :location (c6-1 / here)
      :time (c6-0 / date-entity
                  :month 12))

# ::snt Update: CELEBRITY INSIDER (December , )
# ::tokens ["Update", ":", "CELEBRITY", "INSIDER", "(", "December", ",", ")"]
# ::lemmas ["update", ":", "celebrity", "INSIDER", "(", "December", ",", ")"]
(c7-1 / update-02
      :ARG0 (c7-2 / publication
                  :name (c7-0 / name
                              :op1 "CELEBRITY"
                              :op2 " INSIDER"))
      :time (c7-3 / date-entity
                  :month 12))
