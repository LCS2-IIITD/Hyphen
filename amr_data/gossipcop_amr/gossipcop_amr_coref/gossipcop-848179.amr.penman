# ::snt if this thing procreates , dear God, I'm moving planets
# ::tokens ["if", "this", "thing", "procreates", ",", "dear", "God", ",", "I", "'m", "moving", "planets"]
# ::lemmas ["if", "this", "thing", "procreate", ",", "dear", "God", ",", "i", "be", "move", "planet"]
(c1-0 / move-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-3 / planet)
      :condition (c1-1 / procure-01
                       :ARG0 (c1-5 / thing
                                   :mod (c1-8 / this))
                       :ARG1 (c1-6 / thing
                                   :name (c1-2 / name
                                               :op1 "God")
                                   :mod (c1-7 / dear))))

# ::snt What you did for your DAD was Fantastic. I wish you best. Thank you for showing your love to your Dad.
# ::tokens ["What", "you", "did", "for", "your", "DAD", "was", "Fantastic", ".", "I", "wish", "you", "best", ".", "Thank", "you", "for", "showing", "your", "love", "to", "your", "Dad", "."]
# ::lemmas ["what", "you", "do", "for", "your", "dad", "be", "Fantastic", ".", "i", "wish", "you", "well", ".", "thank", "you", "for", "show", "your", "love", "to", "your", "Dad", "."]
(c2-9 / multi-sentence
      :snt1 (c2-13 / fantastic-03
                   :ARG1 (c2-6 / thing
                               :ARG1-of (c2-19 / do-02
                                               :ARG0 (c2-2 / you)
                                               :ARG2 (c2-14 / person
                                                            :ARG0-of (c2-4 / have-rel-role-91
                                                                           :ARG1 c2-2
                                                                           :ARG2 (c2-15 / father))))))
      :snt2 (c2-16 / wish-01
                   :ARG0 (c2-18 / i)
                   :ARG1 (c2-7 / good-02
                               :ARG2-of (c2-17 / have-degree-91
                                               :ARG1 c2-6
                                               :ARG3 (c2-5 / most)))
                   :ARG2 c2-2)
      :snt3 (c2-12 / thank-01
                   :ARG0 c2-18
                   :ARG1 (c2-8 / you)
                   :ARG2 (c2-0 / show-01
                               :ARG0 c2-8
                               :ARG1 (c2-1 / love-01
                                           :ARG0 c2-8)
                               :ARG2 (c2-10 / person
                                            :ARG0-of (c2-3 / have-rel-role-91
                                                           :ARG1 c2-8
                                                           :ARG2 (c2-11 / dad))))))

# ::snt That is the worst reason to have a baby!
# ::tokens ["That", "is", "the", "worst", "reason", "to", "have", "a", "baby", "!"]
# ::lemmas ["that", "be", "the", "bad", "reason", "to", "have", "a", "baby", "!"]
(c3-4 / have-purpose-91
      :ARG1 (c3-6 / have-05
                  :ARG1 (c3-0 / baby))
      :ARG2 (c3-2 / reason
                  :ARG1-of (c3-3 / have-degree-91
                                 :ARG2 (c3-5 / bad-07
                                             :ARG1 c3-2)
                                 :ARG3 (c3-1 / most))))

# ::snt If she wants kids or if she doesn't want kids! That's her choice!
# ::tokens ["If", "she", "wants", "kids", "or", "if", "she", "does", "n't", "want", "kids", "!", "That", "'s", "her", "choice", "!"]
# ::lemmas ["if", "she", "want", "kid", "or", "if", "she", "do", "not", "want", "kid", "!", "that", "be", "her", "choice", "!"]
(c4-3 / choose-01
      :ARG0 (c4-1 / she)
      :ARG1 (c4-0 / or
                  :op1 (c4-2 / kid)
                  :op2 (c4-5 / kid
                             :polarity -))
      :condition (c4-4 / want-01
                       :ARG0 c4-1
                       :ARG1 c4-5))

# ::snt huh? mad?
# ::tokens ["huh", "?", "mad", "?"]
# ::lemmas ["huh", "?", "mad", "?"]
(c5-1 / mad-04
      :polarity (c5-2 / amr-unknown)
      :ARG1 (c5-0 / you))

# ::snt The real question: are these kids ready for Amy Schumer
# ::tokens ["The", "real", "question", ":", "are", "these", "kids", "ready", "for", "Amy", "Schumer"]
# ::lemmas ["the", "real", "question", ":", "be", "these", "kid", "ready", "for", "Amy", "Schumer"]
(c6-5 / question-01
      :ARG1 (c6-1 / ready-02
                  :ARG1 (c6-4 / kid
                              :mod (c6-6 / this))
                  :ARG2 (c6-3 / person
                              :name (c6-0 / name
                                          :op1 "Amy"
                                          :op2 "Schumer"))
                  :polarity (c6-2 / amr-unknown))
      :ARG1-of (c6-7 / real-04))

# ::snt ew
# ::tokens ["ew"]
# ::lemmas ["ew"]
(c7-0 / eek)

# ::snt Should Amy Schumer have kids?
# ::tokens ["Should", "Amy", "Schumer", "have", "kids", "?"]
# ::lemmas ["should", "Amy", "Schumer", "have", "kid", "?"]
(c8-2 / recommend-01
      :ARG1 (c8-3 / have-05
                  :ARG0 (c8-4 / person
                              :name (c8-0 / name
                                          :op1 "Amy"
                                          :op2 "Schumer"))
                  :ARG1 (c8-1 / person
                              :ARG0-of (c8-6 / have-rel-role-91
                                             :ARG1 c8-4
                                             :ARG2 (c8-5 / kid))))
      :polarity (c8-7 / amr-unknown))

# ::snt she should just adopt like she does her jokes !!!
# ::tokens ["she", "should", "just", "adopt", "like", "she", "does", "her", "jokes", "!", "!", "!"]
# ::lemmas ["she", "should", "just", "adopt", "like", "she", "do", "her", "joke", "!", "!", "!"]
(c9-1 / recommend-01
      :ARG1 (c9-4 / adopt-01
                  :ARG0 (c9-0 / she)
                  :mod (c9-2 / just)
                  :ARG1-of (c9-5 / resemble-01
                                 :ARG2 (c9-3 / adopt-01
                                             :ARG0 c9-0
                                             :manner (c9-6 / joke-01
                                                           :ARG0 c9-0)))))

# ::snt Please do not add to our US problems.
# ::tokens ["Please", "do", "not", "add", "to", "our", "US", "problems", "."]
# ::lemmas ["please", "do", "not", "add", "to", "our", "US", "problem", "."]
(c10-5 / add-02
       :ARG0 (c10-0 / you)
       :ARG2 (c10-2 / problem
                    :poss (c10-3 / we)
                    :mod (c10-4 / country
                                :name (c10-1 / name
                                             :op1 "US")))
       :polarity -
       :mode imperative
       :polite +)

# ::snt It is her decision, besides not everyone wants to have children. Just because people everyone should have kids, it is up to that person.
# ::tokens ["It", "is", "her", "decision", ",", "besides", "not", "everyone", "wants", "to", "have", "children", ".", "Just", "because", "people", "everyone", "should", "have", "kids", ",", "it", "is", "up", "to", "that", "person", "."]
# ::lemmas ["it", "be", "her", "decision", ",", "besides", "not", "everyone", "want", "to", "have", "child", ".", "just", "because", "people", "everyone", "should", "have", "kid", ",", "it", "be", "up", "to", "that", "person", "."]
(c11-7 / multi-sentence
       :snt1 (c11-18 / decide-01
                     :ARG0 (c11-0 / she)
                     :ARG1 (c11-17 / it)
                     :ARG2-of (c11-13 / except-01
                                      :ARG1 (c11-15 / want-01
                                                    :ARG0 (c11-6 / everyone)
                                                    :ARG1 (c11-2 / have-05
                                                                 :ARG0 c11-6
                                                                 :ARG1 (c11-14 / person)
                                                                 :ARG2 (c11-10 / child))
                                                    :polarity -)))
       :snt2 (c11-11 / depend-01
                     :ARG0 (c11-8 / person
                                  :mod (c11-5 / that))
                     :ARG1 (c11-1 / person
                                  :ARG1-of (c11-12 / recommend-01
                                                   :ARG2 (c11-16 / have-05
                                                                 :ARG0 (c11-9 / everyone)
                                                                 :ARG1 (c11-3 / kid))))
                     :mod (c11-4 / just)))

# ::snt You do you not anyone's business
# ::tokens ["You", "do", "you", "not", "anyone", "'s", "business"]
# ::lemmas ["you", "do", "you", "not", "anyone", "'s", "business"]
(c12-0 / do-02
       :ARG0 (c12-2 / you)
       :ARG1 (c12-1 / business
                    :poss (c12-3 / anyone)
                    :polarity -))
