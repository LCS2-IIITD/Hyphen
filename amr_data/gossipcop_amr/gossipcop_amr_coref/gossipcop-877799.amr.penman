# ::snt To be honest I am not even mad. He was a legit carpenter when he first came into the scene. It was just so fitting for him to be a plumber
# ::tokens ["To", "be", "honest", "I", "am", "not", "even", "mad", ".", "He", "was", "a", "legit", "carpenter", "when", "he", "first", "came", "into", "the", "scene", ".", "It", "was", "just", "so", "fitting", "for", "him", "to", "be", "a", "plumber"]
# ::lemmas ["to", "be", "honest", "i", "be", "not", "even", "mad", ".", "he", "be", "a", "legit", "carpenter", "when", "he", "first", "come", "into", "the", "scene", ".", "it", "be", "just", "so", "fitting", "for", "he", "to", "be", "a", "plumber"]
(c1-3 / multi-sentence
      :snt1 (c1-8 / mad-04
                  :ARG1 (c1-14 / i)
                  :mod (c1-6 / even)
                  :ARG1-of (c1-7 / honest-01)
                  :polarity -)
      :snt2 (c1-11 / carpenter
                   :ARG1-of (c1-9 / legitimate-02)
                   :domain (c1-12 / he)
                   :time (c1-15 / come-01
                                :ARG1 c1-12
                                :ARG4 (c1-4 / scene)
                                :ord (c1-0 / ordinal-entity
                                           :value 1)))
      :snt3 (c1-1 / fit-06
                  :ARG1 (c1-5 / it)
                  :ARG2 (c1-10 / plumber
                               :domain c1-12)
                  :degree (c1-2 / so)
                  :mod (c1-13 / just)))

# ::snt lol
# ::tokens ["lol"]
# ::lemmas ["lol"]
(c2-1 / laugh-01
      :manner (c2-0 / loud)
      :mode expressive)

# ::snt Watching a monkey faced dance? Hahahaha
# ::tokens ["Watching", "a", "monkey", "faced", "dance", "?", "Hahahaha"]
# ::lemmas ["watch", "a", "monkey", "faced", "dance", "?", "Hahahaha"]
(c3-3 / watch-01
      :ARG1 (c3-4 / dance-01
                  :manner (c3-0 / face
                                :part-of (c3-1 / monkey)))
      :mod (c3-2 / haha
                 :mode expressive))

# ::snt Why would it be the end of an era? It's not like they are going to stop making Mario games.
# ::tokens ["Why", "would", "it", "be", "the", "end", "of", "an", "era", "?", "It", "'s", "not", "like", "they", "are", "going", "to", "stop", "making", "Mario", "games", "."]
# ::lemmas ["why", "would", "it", "be", "the", "end", "of", "an", "era", "?", "it", "be", "not", "like", "they", "be", "go", "to", "stop", "make", "Mario", "game", "."]
(c5-0 / multi-sentence
      :snt1 (c5-6 / cause-01
                  :ARG0 (c5-9 / amr-unknown)
                  :ARG1 (c5-4 / end-01
                              :ARG1 (c5-11 / era)))
      :snt2 (c5-3 / resemble-01
                  :ARG1 (c5-8 / it)
                  :ARG2 (c5-2 / stop-01
                              :ARG0 (c5-7 / they)
                              :ARG1 (c5-5 / make-01
                                          :ARG0 c5-7
                                          :ARG1 (c5-10 / game
                                                       :name (c5-1 / name
                                                                   :op1 "Mario"))))
                  :polarity -))

# ::snt equal opportunities and all that
# ::tokens ["equal", "opportunities", "and", "all", "that"]
# ::lemmas ["equal", "opportunity", "and", "all", "that"]
(c6-1 / and
      :op1 (c6-0 / opportunity
                 :ARG1-of (c6-2 / equal-01))
      :op2 (c6-4 / that
                 :mod (c6-3 / all)))

# ::snt But is he still a doctor?
# ::tokens ["But", "is", "he", "still", "a", "doctor", "?"]
# ::lemmas ["but", "be", "he", "still", "a", "doctor", "?"]
(c7-2 / contrast-01
      :polarity (c7-3 / amr-unknown)
      :ARG2 (c7-4 / doctor
                  :mod (c7-0 / still)
                  :domain (c7-1 / he)))

# ::snt is he a corgi registered boiler technician now?
# ::tokens ["is", "he", "a", "corgi", "registered", "boiler", "technician", "now", "?"]
# ::lemmas ["be", "he", "a", "corgi", "register", "boiler", "technician", "now", "?"]
(c8-6 / technician
      :mod (c8-0 / boiler)
      :ARG1-of (c8-2 / register-02
                     :ARG2 (c8-7 / government-organization
                                 :name (c8-1 / name
                                             :op1 "Corps")))
      :domain (c8-4 / he)
      :polarity (c8-3 / amr-unknown)
      :time (c8-5 / now))

# ::snt It's DK not Bowser
# ::tokens ["It", "'s", "DK", "not", "Bowser"]
# ::lemmas ["it", "be", "DK", "not", "Bowser"]
(c9-4 / instead-of-91
      :ARG1 (c9-3 / person
                  :name (c9-0 / name
                              :op1 "Dakota"))
      :ARG2 (c9-1 / person
                  :name (c9-2 / name
                              :op1 "Bowser")))

# ::snt It's monopoly board game where you can be Mario, Bowser, Yoshi and Peach from what I can see in commercial.
# ::tokens ["It", "'s", "monopoly", "board", "game", "where", "you", "can", "be", "Mario", ",", "Bowser", ",", "Yoshi", "and", "Peach", "from", "what", "I", "can", "see", "in", "commercial", "."]
# ::lemmas ["it", "be", "monopoly", "board", "game", "where", "you", "can", "be", "Mario", ",", "Bowser", ",", "Yoshi", "and", "Peach", "from", "what", "i", "can", "see", "in", "commercial", "."]
(c11-7 / game
       :mod (c11-8 / board)
       :mod (c11-9 / monopoly)
       :location-of (c11-16 / possible-01
                            :ARG1 (c11-6 / and
                                         :op1 (c11-10 / person
                                                      :name (c11-14 / name
                                                                    :op1 "Mario"))
                                         :op2 (c11-2 / person
                                                     :name (c11-11 / name
                                                                   :op1 "Bowser"))
                                         :op3 (c11-1 / person
                                                     :name (c11-17 / name
                                                                   :op1 "Yoshi"))
                                         :op4 (c11-4 / person
                                                     :name (c11-13 / name
                                                                   :op1 "Peach"))
                                         :domain (c11-3 / you)
                                         :ARG1-of (c11-15 / resemble-01
                                                          :ARG2 (c11-5 / thing
                                                                       :ARG1-of (c11-0 / see-01
                                                                                       :ARG0 (c11-18 / i)
                                                                                       :ARG1-of (c11-19 / possible-01)
                                                                                       :source (c11-12 / commercial)))))))

# ::snt Or another game?
# ::tokens ["Or", "another", "game", "?"]
# ::lemmas ["or", "another", "game", "?"]
(c12-1 / or
       :op2 (c12-0 / game
                   :mod (c12-3 / another)
                   :polarity (c12-2 / amr-unknown)))

# ::snt Someone brought that up in the video.
# ::tokens ["Someone", "brought", "that", "up", "in", "the", "video", "."]
# ::lemmas ["someone", "bring", "that", "up", "in", "the", "video", "."]
(c13-1 / bring-up-02
       :ARG0 (c13-3 / someone)
       :ARG1 (c13-2 / that)
       :location (c13-0 / video))

# ::snt Is Super Mario Bros WiiU he and Luigi fix a broken pipe though....
# ::tokens ["Is", "Super", "Mario", "Bros", "WiiU", "he", "and", "Luigi", "fix", "a", "broken", "pipe", "though", "...."]
# ::lemmas ["be", "Super", "Mario", "Bros", "WiiU", "he", "and", "Luigi", "fix", "a", "broken", "pipe", "though", "...."]
(c14-0 / fix-02
       :ARG0 (c14-9 / and
                    :op1 (c14-4 / he)
                    :op2 (c14-5 / person
                                :name (c14-2 / name
                                             :op1 "Luigi")))
       :ARG1 (c14-3 / pipe
                    :ARG1-of (c14-1 / break-01))
       :polarity (c14-8 / amr-unknown)
       :mod (c14-10 / game
                    :name (c14-6 / name
                                 :op1 "Super"
                                 :op2 "Mario"
                                 :op3 "Bros"
                                 :op4 "WiiU"))
       :ARG1-of (c14-7 / have-concession-91))

# ::snt He'll always be a plumber in my heart. I'm not crying you're crying.
# ::tokens ["He", "'ll", "always", "be", "a", "plumber", "in", "my", "heart", ".", "I", "'m", "not", "crying", "you", "'re", "crying", "."]
# ::lemmas ["he", "'ll", "always", "be", "a", "plumber", "in", "my", "heart", ".", "i", "be", "not", "cry", "you", "be", "cry", "."]
(c15-1 / multi-sentence
       :snt1 (c15-4 / plumber
                    :domain (c15-3 / he)
                    :location (c15-6 / heart
                                     :part-of (c15-8 / i))
                    :time (c15-9 / always))
       :snt2 (c15-5 / contrast-01
                    :ARG1 (c15-10 / cry-02
                                  :ARG0 (c15-2 / i)
                                  :polarity -)
                    :ARG2 (c15-7 / cry-02
                                 :ARG0 (c15-0 / you))))

# ::snt To be fair when's the last time he did any plumbing? The only time I remember is in one of the Mario and Luigi games.
# ::tokens ["To", "be", "fair", "when", "'s", "the", "last", "time", "he", "did", "any", "plumbing", "?", "The", "only", "time", "I", "remember", "is", "in", "one", "of", "the", "Mario", "and", "Luigi", "games", "."]
# ::lemmas ["to", "be", "fair", "when", "be", "the", "last", "time", "he", "do", "any", "plumbing", "?", "the", "only", "time", "i", "remember", "be", "in", "one", "of", "the", "Mario", "and", "Luigi", "game", "."]
(c16-4 / multi-sentence
       :snt1 (c16-2 / be-temporally-at-91
                    :ARG1 (c16-15 / do-02
                                  :ARG0 (c16-8 / he)
                                  :ARG1 (c16-9 / plumbing)
                                  :mod (c16-10 / last))
                    :ARG2 (c16-0 / fair-01)
                    :time (c16-13 / amr-unknown))
       :snt2 (c16-7 / remember-01
                    :ARG0 (c16-12 / i)
                    :ARG1 (c16-11 / be-located-at-91
                                  :ARG1 (c16-14 / game
                                                :ARG1-of (c16-6 / include-91
                                                                :ARG2 (c16-16 / game
                                                                              :name (c16-5 / name
                                                                                           :op1 "Mario"
                                                                                           :op2 "and"
                                                                                           :op3 "Luigi")))
                                                :quant 1)
                                  :ARG2 (c16-1 / one))
                    :mod (c16-3 / only)))

# ::snt I don't really care, I love anyway
# ::tokens ["I", "do", "n't", "really", "care", ",", "I", "love", "anyway"]
# ::lemmas ["i", "do", "not", "really", "care", ",", "i", "love", "anyway"]
(c17-4 / and
       :op1 (c17-2 / care-01
                   :ARG0 (c17-3 / i)
                   :ARG1-of (c17-0 / real-04)
                   :polarity -)
       :op2 (c17-1 / love-01
                   :ARG0 c17-3
                   :mod (c17-5 / anyway)))

# ::snt Why
# ::tokens ["Why"]
# ::lemmas ["why"]
(c18-0 / cause-01
       :ARG0 (c18-1 / amr-unknown))

# ::snt Oh sry m on plumer
# ::tokens ["Oh", "sry", "m", "on", "plumer"]
# ::lemmas ["oh", "sry", "m", "on", "plumer"]
(c19-5 / and
       :op1 (c19-0 / oh)
       :op2 (c19-1 / be-located-at-91
                   :ARG1 (c19-4 / person
                                :name (c19-2 / name
                                             :op1 "plumer"))
                   :ARG2 (c19-3 / here)
                   :mode imperative))

# ::snt Well of course he's not a plumber anymore! He's gotta save that bitch Peach, race karts and play every sport known to man! The man is busy!
# ::tokens ["Well", "of", "course", "he", "'s", "not", "a", "plumber", "anymore", "!", "He", "'s", "got", "ta", "save", "that", "bitch", "Peach", ",", "race", "karts", "and", "play", "every", "sport", "known", "to", "man", "!", "The", "man", "is", "busy", "!"]
# ::lemmas ["well", "of", "course", "he", "be", "not", "a", "plumber", "anymore", "!", "he", "be", "got", "to", "save", "that", "bitch", "Peach", ",", "race", "kart", "and", "play", "every", "sport", "know", "to", "man", "!", "the", "man", "be", "busy", "!"]
(c20-13 / multi-sentence
        :snt1 (c20-18 / plumber
                      :domain (c20-4 / he)
                      :time (c20-9 / anymore)
                      :mod (c20-2 / of-course)
                      :polarity -)
        :snt2 (c20-11 / obligate-01
                      :ARG1 (c20-19 / he)
                      :ARG2 (c20-7 / and
                                   :op1 (c20-0 / save-02
                                               :ARG0 c20-19
                                               :ARG1 (c20-12 / bitch
                                                             :name (c20-16 / name
                                                                           :op1 "Peach")
                                                             :mod (c20-8 / that)))
                                   :op2 (c20-14 / play-01
                                                :ARG0 c20-19
                                                :ARG1 (c20-10 / game
                                                              :name c20-16
                                                              :op1 "Race"
                                                              :op2 "Karts")
                                                :op3-of c20-11))
                      :ARG0 c20-19
                      :ARG1 (c20-3 / sport
                                   :mod (c20-17 / every)
                                   :ARG1-of (c20-5 / know-02
                                                   :ARG2 (c20-6 / man))))
        :snt3 (c20-1 / busy-01
                     :ARG1 (c20-15 / man)))
