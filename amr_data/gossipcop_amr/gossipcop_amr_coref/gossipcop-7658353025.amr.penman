# ::snt vilken av alla frlagorna? , eller ?
# ::tokens ["vilken", "av", "alla", "frlagorna", "?", ",", "eller", "?"]
# ::lemmas ["vilken", "av", "alla", "frlagorna", "?", ",", "eller", "?"]
(c1-1 / say-01
      :ARG0 (c1-4 / person
                  :name (c1-0 / name
                              :op1 "ller"))
      :ARG1 (c1-8 / and
                  :op1 (c1-2 / vilken
                             :mode expressive)
                  :op2 (c1-7 / all
                             :location (c1-5 / country
                                             :name (c1-3 / name
                                                         :op1 "France"))
                             :mode expressive)
                  :polarity (c1-6 / amr-unknown)))

# ::snt HUNDEN r underbar! Den var frresten det enda som lyckades framkalla ngot som var i nrheten av en tr.
# ::tokens ["HUNDEN", "r", "underbar", "!", "Den", "var", "frresten", "det", "enda", "som", "lyckades", "framkalla", "ngot", "som", "var", "i", "nrheten", "av", "en", "tr", "."]
# ::lemmas ["hunden", "r", "underbar", "!", "Den", "var", "frresten", "det", "enda", "som", "lyckade", "framkalla", "ngot", "som", "var", "i", "nrheten", "av", "en", "tr", "."]
(c2-8 / multi-sentence
      :snt1 (c2-18 / wait-01
                   :ARG1 (c2-2 / you)
                   :ARG2 (c2-11 / under
                                :op1 (c2-7 / bar))
                   :mode imperative)
      :snt2 (c2-5 / and
                  :op1 (c2-19 / deny-01
                              :ARG1 (c2-15 / end-01
                                           :ARG1 (c2-16 / person
                                                        :ARG0-of (c2-13 / fuck-01
                                                                        :ARG1 (c2-9 / person
                                                                                    :name (c2-14 / name
                                                                                                 :op1 "Framkalla"))))
                                           :op2-of c2-5))
                  :ARG1 c2-16
                  :ARG2 (c2-1 / person
                              :name (c2-10 / name
                                           :op1 "Lyckades")))
      :op3 (c2-0 / person
                 :name (c2-17 / name
                              :op1 "Nigot"))
      :op4 (c2-4 / person
                 :ARG0-of c2-13
                 :ARG1 (c2-20 / person))
      :op5 (c2-12 / person
                  :ARG0-of (c2-3 / make-01
                                 :ARG1 (c2-6 / tr))))

# ::snt Och jag hade/har ingen aning om vem denne Bradley Cooper r! Sg bara Gaga nr jag sg filmen. ?
# ::tokens ["Och", "jag", "hade", "/", "har", "ingen", "aning", "om", "vem", "denne", "Bradley", "Cooper", "r", "!", "Sg", "bara", "Gaga", "nr", "jag", "sg", "filmen", ".", "?"]
# ::lemmas ["Och", "jag", "hade", "/", "har", "ingen", "aning", "om", "vem", "denne", "Bradley", "Cooper", "r", "!", "Sg", "bara", "Gaga", "nr", "jag", "sg", "filman", ".", "?"]
(c3-9 / multi-sentence
      :snt1 (c3-2 / or
                  :op1 (c3-4 / have-03
                             :ARG0 (c3-14 / person
                                          :name (c3-13 / name
                                                       :op1 "Jag"))
                             :ARG1 (c3-18 / ingenuous))
                  :op2 (c3-16 / have-03
                              :ARG0 c3-14
                              :ARG1 c3-18)
                  :op3 (c3-3 / have-03
                             :ARG0 c3-14
                             :ARG1 (c3-10 / person
                                          :name (c3-11 / name
                                                       :op1 "Bradley"
                                                       :op2 "Cooper")
                                          :ARG1-of (c3-19 / denne-01)))
                  :mod (c3-8 / och
                             :mode expressive))
      :snt2 (c3-6 / and
                  :op1 (c3-1 / person
                             :name (c3-15 / name
                                          :op1 "Bara"
                                          :op2 "Gaga"))
                  :op2 (c3-0 / person
                             :name (c3-12 / name
                                          :op1 "Jag"))
                  :op3 (c3-5 / person
                             :name (c3-17 / name
                                          :op1 "Filmen"))
                  :polarity (c3-7 / amr-unknown)))

# ::snt Haha, taskigt men roligt och mycket sant.
# ::tokens ["Haha", ",", "taskigt", "men", "roligt", "och", "mycket", "sant", "."]
# ::lemmas ["Haha", ",", "taskigt", "man", "roligt", "och", "mycket", "sant", "."]
(c4-6 / and
      :op1 (c4-4 / haha
                 :mode expressive)
      :op2 (c4-3 / roligt-00
                 :ARG0 (c4-1 / man)
                 :ARG1 (c4-0 / och
                             :op1 (c4-2 / sant
                                        :poss (c4-5 / i)))))

# ::snt Knns den hr beskrivningen igen?
# ::tokens ["Knns", "den", "hr", "beskrivningen", "igen", "?"]
# ::lemmas ["knn", "den", "hr", "beskrivningen", "igen", "?"]
(c5-1 / string-entity
      :polarity (c5-0 / amr-unknown)
      :value "Knns den hr beskrivningen igen")

# ::snt Och ltarna!? Den hon framfrde p nn late night show, hur trovrdigt var det, att den skulle vara en hit?
# ::tokens ["Och", "ltarna", "!", "?", "Den", "hon", "framfrde", "p", "nn", "late", "night", "show", ",", "hur", "trovrdigt", "var", "det", ",", "att", "den", "skulle", "vara", "en", "hit", "?"]
# ::lemmas ["och", "ltarna", "!", "?", "Den", "hon", "framfrde", "p", "nn", "late", "night", "show", ",", "hur", "trovrdigt", "var", "det", ",", "att", "den", "skulle", "vara", "en", "hit", "?"]
(c6-9 / multi-sentence
      :snt1 (c6-4 / och
                  :domain (c6-12 / company
                                 :name (c6-15 / name
                                              :op1 "Ltarna"))
                  :mode expressive)
      :snt2 (c6-8 / and
                  :op1 (c6-5 / have-polarity-91
                             :ARG1 (c6-16 / person
                                          :ARG0-of (c6-14 / fuck-01))
                             :op2-of c6-8
                             :ARG2 -)
                  :ARG1 (c6-0 / show-04
                              :mod (c6-1 / late
                                         :op1 (c6-11 / night)))
                  :ARG2 -)
      :op3 c6-5
      :ARG1 (c6-7 / trovrdigt-00
                  :ARG1 (c6-10 / person
                               :ARG0-of (c6-17 / fuck-01))
                  :ARG2 -)
      :op4 c6-5
      :ARG1 (c6-3 / person
                  :ARG0-of (c6-18 / fuck-01))
      :op5 c6-5
      :ARG1 (c6-2 / person
                  :ARG0-of (c6-13 / fuck-01))
      :op6 c6-5
      :ARG1 (c6-19 / hit-01)
      :polarity (c6-6 / amr-unknown)
      :ARG2 -
      :ARG2 -
      :ARG2 -
      :ARG2 -)

# ::snt FRUKTANSVRDA outfits!
# ::tokens ["FRUKTANSVRDA", "outfits", "!"]
# ::lemmas ["fruktansvrda", "outfit", "!"]
(c7-1 / outfit
      :mod (c7-0 / organization
                 :name (c7-2 / name
                             :op1 "FRUKTANSVRDA"))
      :mode expressive)

# ::snt Jag satt och undrade varfr dom hade hittat p s urfniga ltar, danser och outfits till henne. Guldprasselklnningen och den lila (?) sminkningen p The Grammys, vad var det liksom. Cheapest in town.
# ::tokens ["Jag", "satt", "och", "undrade", "varfr", "dom", "hade", "hittat", "p", "s", "urfniga", "ltar", ",", "danser", "och", "outfits", "till", "henne", ".", "Guldprasselklnningen", "och", "den", "lila", "(", "?", ")", "sminkningen", "p", "The", "Grammys", ",", "vad", "var", "det", "liksom", ".", "Cheapest", "in", "town", "."]
# ::lemmas ["Jag", "satt", "och", "undrade", "varfr", "dom", "hade", "hittat", "p", "s", "urfniga", "ltar", ",", "danser", "och", "outfit", "till", "henne", ".", "Guldprasselklnningen", "och", "den", "lila", "(", "?", ")", "sminkningen", "p", "the", "Grammys", ",", "vad", "var", "det", "liksom", ".", "cheap", "in", "town", "."]
(c8-20 / multi-sentence
       :snt1 (c8-18 / and
                    :op1 (c8-11 / have-03
                                :ARG0 (c8-31 / person
                                             :name (c8-29 / name
                                                          :op1 "Jag"))
                                :ARG1 (c8-21 / person
                                             :ARG0-of (c8-1 / support-01
                                                            :ARG1 c8-31
                                                            :polarity -)))
                    :op2 (c8-33 / have-03
                                :ARG0 (c8-5 / person
                                            :ARG0-of (c8-28 / fuck-01))
                                :ARG1 (c8-10 / hittat)
                                :location (c8-16 / and
                                                 :op1 (c8-23 / city
                                                             :name (c8-22 / name
                                                                          :op1 "Urfniga"))
                                                 :op2 (c8-19 / city
                                                             :name (c8-32 / name
                                                                          :op1 "Tunisia"))
                                                 :op3 (c8-7 / outfit
                                                            :location (c8-17 / till
                                                                             :op1 (c8-4 / city
                                                                                        :name (c8-24 / name
                                                                                                     :op1 "Henne"))))))
                    :snt2 (c8-15 / and
                                 :op1 (c8-26 / have-03
                                             :ARG0 (c8-3 / person)
                                             :ARG1 (c8-8 / string-entity
                                                         :value "guldprasselklnningen"))
                                 :op2 (c8-12 / have-03
                                             :ARG0 c8-3
                                             :ARG1 (c8-6 / string-entity
                                                         :value "lila")))
                    :op3 (c8-14 / have-03
                                :ARG0 c8-3
                                :ARG1 (c8-30 / string-entity
                                             :value "lila"))
                    :op4 (c8-25 / have-03
                                :ARG0 c8-3
                                :ARG1 (c8-2 / string-entity
                                            :value "lila")))
       :snt3 (c8-0 / have-degree-91
                   :ARG1 (c8-27 / city)
                   :ARG2 (c8-9 / cheap-02
                               :ARG1 c8-27)
                   :ARG3 (c8-13 / most)))

# ::snt Men grundproblemet var vl att det var en fr mossig frlaga. Fr mycket Pretty Woman-upplgg. (Hade iofs kunnat ndrats och moderniserats.)
# ::tokens ["Men", "grundproblemet", "var", "vl", "att", "det", "var", "en", "fr", "mossig", "frlaga", ".", "Fr", "mycket", "Pretty", "Woman", "-", "upplgg", ".", "(", "Hade", "iofs", "kunnat", "ndrats", "och", "moderniserats", ".", ")"]
# ::lemmas ["men", "grundproblemet", "var", "vl", "att", "det", "var", "en", "fr", "mossig", "frlaga", ".", "Fr", "mycket", "Pretty", "woman", "-", "upplgg", ".", "(", "hade", "iofs", "kunnat", "ndrat", "och", "moderniserat", ".", ")"]
(c9-7 / multi-sentence
      :snt1 (c9-5 / and
                  :op1 (c9-20 / deny-01
                              :ARG0 (c9-3 / man)
                              :ARG1 (c9-6 / thing
                                          :name (c9-13 / name
                                                       :op1 "Grainndproblemet"))
                              :op2-of c9-5)
                  :ARG0 c9-3
                  :ARG1 c9-6)
      :op3 c9-20
      :ARG0 c9-3
      :ARG1 (c9-15 / person
                   :name (c9-9 / name
                               :op1 "Mossig"))
      :ARG2 (c9-8 / person
                  :name (c9-16 / name
                               :op1 "laga"))
      :op4 (c9-12 / fuck-01
                  :ARG0 (c9-2 / person
                              :name (c9-10 / name
                                           :op1 "Fr"
                                           :op2 "Mycket"))
                  :ARG1 (c9-1 / person
                              :name (c9-18 / name
                                           :op1 "Pretty"
                                           :op2 "Woman"))
                  :op5-of c9-7)
      :ARG0 (c9-4 / person
                  :name (c9-14 / name
                               :op1 "Hade"
                               :op2 " iofs"))
      :ARG1 (c9-21 / person
                   :ARG1-of (c9-19 / include-91
                                   :ARG2 (c9-11 / person
                                                :ARG0-of (c9-17 / work-of-art
                                                                :name (c9-0 / name
                                                                            :op1 "Moderniserat"))))))

# ::snt Att han fick leka rockstjrna som var s mycket mer KTA n det Lady Gagas rollfigur fnifierades till.
# ::tokens ["Att", "han", "fick", "leka", "rockstjrna", "som", "var", "s", "mycket", "mer", "KTA", "n", "det", "Lady", "Gagas", "rollfigur", "fnifierades", "till", "."]
# ::lemmas ["Att", "han", "fick", "leka", "rockstjrna", "som", "var", "s", "mycket", "mer", "KTA", "n", "det", "Lady", "Gagas", "rollfigur", "fnifierade", "till", "."]
(c10-13 / and
        :op1 (c10-6 / have-mod-91
                    :ARG1 (c10-7 / person
                                 :name (c10-2 / name
                                              :op1 "Att"))
                    :ARG2 (c10-0 / fuck
                                 :op1 (c10-4 / rockstjrna)))
        :op2 (c10-11 / have-mod-91
                     :ARG1 c10-7
                     :ARG2 c10-0)
        :op3 (c10-5 / have-mod-91
                    :ARG1 c10-7
                    :ARG2 (c10-1 / organization
                                 :name (c10-8 / name
                                              :op1 "KTA")))
        :op4 (c10-15 / have-mod-91
                     :ARG1 c10-7
                     :ARG2 (c10-9 / fnifierades
                                  :mod (c10-14 / roll)
                                  :mod (c10-3 / person
                                              :name (c10-10 / name
                                                            :op1 "Lady"
                                                            :op2 "Gagas"))))
        :time (c10-12 / till))

# ::snt Det fanns mycket som var sevrt, men jag kunde inte skaka av mig knslan av att allting EGENTLIGEN handlade om Bradley Cooper hela tiden. Speciellt som han producerat, regisserat och manusfrfattat.
# ::tokens ["Det", "fanns", "mycket", "som", "var", "sevrt", ",", "men", "jag", "kunde", "inte", "skaka", "av", "mig", "knslan", "av", "att", "allting", "EGENTLIGEN", "handlade", "om", "Bradley", "Cooper", "hela", "tiden", ".", "Speciellt", "som", "han", "producerat", ",", "regisserat", "och", "manusfrfattat", "."]
# ::lemmas ["Det", "fann", "mycket", "som", "var", "sevrt", ",", "man", "jag", "kunde", "inte", "skaka", "av", "mig", "knslan", "av", "att", "allting", "EGENTLIGEN", "handlade", "om", "Bradley", "Cooper", "hela", "tiden", ".", "speciellt", "som", "han", "producerat", ",", "regisserat", "och", "manusfrfattat", "."]
(c11-24 / multi-sentence
        :snt1 (c11-17 / and
                      :op1 (c11-8 / have-03
                                  :ARG0 (c11-36 / person
                                                :ARG0-of (c11-25 / prosecute-01))
                                  :ARG1 (c11-5 / person
                                               :name (c11-34 / name
                                                             :op1 "Det"))
                                  :mod (c11-33 / fuck))
                      :op2 (c11-37 / have-03
                                   :ARG0 (c11-9 / man)
                                   :ARG1 (c11-10 / kunde))
                      :op3 (c11-7 / have-03
                                  :ARG0 c11-9
                                  :ARG1 (c11-16 / and
                                                :op1 (c11-18 / goal
                                                             :mod (c11-1 / luck))
                                                :op2 (c11-4 / goal
                                                            :mod (c11-20 / luck))))
                      :op4 (c11-30 / have-03
                                   :ARG0 c11-9
                                   :ARG1 (c11-11 / handlade
                                                 :mod (c11-12 / luck)))
                      :op5 (c11-13 / have-03
                                   :ARG0 c11-9
                                   :ARG1 (c11-28 / hand))
                      :op6 (c11-0 / have-03
                                  :ARG0 c11-9
                                  :ARG1 c11-28))
        :op7 (c11-22 / have-03
                     :ARG0 (c11-2 / person
                                  :name (c11-26 / name
                                                :op1 "Bradley"
                                                :op2 "Cooper"))
                     :ARG1 c11-28)
        :snt2 (c11-14 / and
                      :op1 (c11-19 / person
                                   :ARG0-of (c11-39 / produce-01))
                      :op2 (c11-32 / person
                                   :ARG0-of (c11-35 / represent-01))
                      :op3 (c11-29 / person
                                   :ARG0-of (c11-38 / have-03
                                                    :ARG1 (c11-6 / regisserat)))
                      :op4 (c11-21 / person
                                   :ARG0-of (c11-31 / have-03
                                                    :ARG1 c11-28)))
        :op5 (c11-3 / person
                    :ARG0-of (c11-15 / have-03
                                     :ARG1 c11-28))
        :op6 (c11-23 / person
                     :ARG0-of c11-15
                     :ARG1 c11-28)
        :mod (c11-27 / luck))

# ::snt On a ador
# ::tokens ["On", "a", "ador"]
# ::lemmas ["on", "a", "ador"]
(c12-0 / advertise-01)

# ::snt Et en plus parait que c'est bradley lui mme qui chante. Je suis bluffee.
# ::tokens ["Et", "en", "plus", "parait", "que", "c'est", "bradley", "lui", "mme", "qui", "chante", ".", "Je", "suis", "bluffee", "."]
# ::lemmas ["Et", "en", "plus", "parait", "que", "c'est", "bradley", "lui", "mme", "qui", "chante", ".", "Je", "suis", "bluffee", "."]
(c13-3 / multi-sentence
       :snt1 (c13-8 / parait
                    :domain (c13-6 / et-cetera)
                    :ARG1-of (c13-10 / cause-01
                                     :ARG0 (c13-7 / have-mod-91
                                                  :ARG1 (c13-4 / person
                                                               :name (c13-5 / name
                                                                            :op1 "Badley"))
                                                  :ARG2 (c13-1 / bradley))))
       :snt2 (c13-13 / cause-01
                     :ARG0 (c13-12 / amr-unknown
                                   :ARG0-of (c13-11 / cause-01
                                                    :ARG1 (c13-0 / chante)))
                     :ARG1 (c13-9 / bluff-01
                                  :ARG0 (c13-2 / you)
                                  :mode imperative)))

# ::snt J'ai aussi beaucoup aim, et la BO est vraiment top
# ::tokens ["J'ai", "aussi", "beaucoup", "aim", ",", "et", "la", "BO", "est", "vraiment", "top"]
# ::lemmas ["J'ai", "aussi", "beaucoup", "aim", ",", "et", "la", "BO", "est", "vraiment", "top"]
(c14-7 / and
       :op1 (c14-6 / aim-01
                   :ARG0 (c14-4 / person
                                :name (c14-1 / name
                                             :op1 "J'ai"))
                   :mod (c14-0 / beaucoup))
       :op2 (c14-2 / est-vraiment-00
                   :ARG0 c14-4
                   :name (c14-3 / name
                                :op1 "BO"))
       :ARG1 (c14-5 / top))

# ::snt J'approuve! J'ai vraiment pass un bon moment et la trame sonore est magnifique.
# ::tokens ["J'approuve", "!", "J'ai", "vraiment", "pass", "un", "bon", "moment", "et", "la", "trame", "sonore", "est", "magnifique", "."]
# ::lemmas ["j'approuve", "!", "J'ai", "vraiment", "pass", "un", "bon", "moment", "et", "la", "trame", "sonore", "est", "magnifique", "."]
(c15-1 / multi-sentence
       :snt1 (c15-8 / apply-02
                    :ARG0 (c15-5 / we))
       :snt2 (c15-7 / and
                    :op1 (c15-4 / pass-07
                                :ARG1 (c15-3 / moment
                                             :mod (c15-0 / bon)))
                    :op2 (c15-2 / et-cetera
                                :op1 (c15-6 / trame-un-minor
                                            :mod (c15-9 / est
                                                        :mod (c15-10 / magnifique)))
                                :op2 c15-2)))

# ::snt Cest pas comme si on lavais dj vu nan
# ::tokens ["Cest", "pas", "comme", "si", "on", "lavais", "dj", "vu", "nan"]
# ::lemmas ["cest", "pas", "comme", "si", "on", "lavais", "dj", "vu", "nan"]
(c16-5 / and
       :op1 (c16-0 / have-polarity-91
                   :ARG1 (c16-4 / amr-unintelligible
                                :value "cest")
                   :ARG2 -)
       :op2 (c16-2 / comme
                   :ARG1-of (c16-6 / cause-01
                                   :ARG0 (c16-1 / lava))
                   :polarity -)
       :op3 c16-0
       :ARG1 (c16-3 / amr-unintelligible
                    :value " dj")
       :ARG2 -)

# ::snt Ptdrrrrrrrrr aksip cest gnial
# ::tokens ["Ptdrrrrrrrrr", "aksip", "cest", "gnial"]
# ::lemmas ["ptdrrrrrrrrr", "aksip", "cest", "gnial"]
(c17-2 / say-01
       :ARG0 (c17-5 / i)
       :ARG1 (c17-6 / and
                    :op1 (c17-4 / prattle-01
                                :mode expressive)
                    :op2 (c17-3 / laugh-01
                                :ARG0 c17-5
                                :mode expressive))
       :ARG2 (c17-1 / person
                    :name (c17-0 / name
                                 :op1 "Cest"
                                 :op2 "gnial")))

# ::snt il faut le voir !!
# ::tokens ["il", "faut", "le", "voir", "!", "!"]
# ::lemmas ["il", "faut", "le", "voir", "!", "!"]
(c18-1 / voir
       :mod (c18-2 / au-naturel)
       :mod (c18-0 / faut)
       :mode expressive)

# ::snt Cest quoi la fin
# ::tokens ["Cest", "quoi", "la", "fin"]
# ::lemmas ["c", "quoi", "la", "fin"]
(c19-0 / amr-unintelligible
       :value "Cest quoi la fin")

# ::snt Is this the bonus scene after the credits, like a Marvel movie? I didnt stay for the whole credits, dammit.
# ::tokens ["Is", "this", "the", "bonus", "scene", "after", "the", "credits", ",", "like", "a", "Marvel", "movie", "?", "I", "did", "nt", "stay", "for", "the", "whole", "credits", ",", "dammit", "."]
# ::lemmas ["be", "this", "the", "bonus", "scene", "after", "the", "credit", ",", "like", "a", "Marvel", "movie", "?", "i", "do", "not", "stay", "for", "the", "whole", "credit", ",", "dammit", "."]
(c20-2 / multi-sentence
       :snt1 (c20-4 / scene
                    :polarity (c20-12 / amr-unknown)
                    :mod (c20-1 / bonus)
                    :time (c20-11 / after
                                  :op1 (c20-8 / credits))
                    :ARG1-of (c20-5 / resemble-01
                                    :ARG2 (c20-6 / movie
                                                 :mod (c20-7 / book
                                                             :name (c20-3 / name
                                                                          :op1 "Marvel"))))
                    :domain (c20-10 / this))
       :snt2 (c20-0 / stay-01
                    :ARG1 (c20-13 / i)
                    :duration (c20-15 / credits
                                      :mod (c20-9 / whole))
                    :ARG1-of (c20-14 / damn-01
                                     :ARG0 c20-13)
                    :polarity -))

# ::snt *Directing, damnit
# ::tokens ["*", "Directing", ",", "damnit"]
# ::lemmas ["*", "directing", ",", "damnit"]
(c21-0 / direct-01
       :ARG0 (c21-1 / damnit))

# ::snt Because you arent dead inside.
# ::tokens ["Because", "you", "are", "nt", "dead", "inside", "."]
# ::lemmas ["because", "you", "be", "not", "dead", "inside", "."]
(c22-0 / cause-01
       :ARG0 (c22-3 / die-01
                    :ARG1 (c22-2 / you)
                    :location (c22-1 / inside)
                    :polarity -))

# ::snt I totally loved it! Except I cried like a little baby. Why do I have feelings?!
# ::tokens ["I", "totally", "loved", "it", "!", "Except", "I", "cried", "like", "a", "little", "baby", ".", "Why", "do", "I", "have", "feelings", "?", "!"]
# ::lemmas ["i", "totally", "love", "it", "!", "except", "i", "cry", "like", "a", "little", "baby", ".", "why", "do", "i", "have", "feeling", "?", "!"]
(c23-3 / multi-sentence
       :snt1 (c23-8 / love-01
                    :ARG0 (c23-10 / i)
                    :ARG1 (c23-4 / it)
                    :degree (c23-11 / total))
       :snt2 (c23-7 / except-01
                    :ARG1 (c23-9 / cry-02
                                 :ARG0 (c23-13 / i)
                                 :ARG1-of (c23-5 / resemble-01
                                                 :ARG2 (c23-2 / baby
                                                              :mod (c23-12 / little)))))
       :snt3 (c23-14 / cause-01
                     :ARG0 (c23-6 / amr-unknown)
                     :ARG1 (c23-0 / feel-01
                                  :ARG0 (c23-1 / i))))

# ::snt Did you love it? We saw it too. It was a bit long but otherwise great.
# ::tokens ["Did", "you", "love", "it", "?", "We", "saw", "it", "too", ".", "It", "was", "a", "bit", "long", "but", "otherwise", "great", "."]
# ::lemmas ["do", "you", "love", "it", "?", "we", "see", "it", "too", ".", "it", "be", "a", "bit", "long", "but", "otherwise", "great", "."]
(c24-2 / multi-sentence
       :snt1 (c24-6 / love-01
                    :ARG0 (c24-1 / you)
                    :ARG1 (c24-10 / it)
                    :polarity (c24-11 / amr-unknown))
       :snt2 (c24-3 / see-01
                    :ARG0 (c24-7 / we)
                    :ARG1 (c24-4 / it)
                    :mod (c24-9 / too))
       :snt3 (c24-8 / contrast-01
                    :ARG1 (c24-13 / long-03
                                  :ARG1 c24-4
                                  :degree (c24-0 / bit))
                    :ARG2 (c24-12 / great
                                  :domain c24-4
                                  :condition (c24-5 / have-polarity-91
                                                    :ARG1 c24-6
                                                    :ARG2 -))))

# ::snt I REMEMBER!!! WE WERE IN A PLACE THEN WOWO
# ::tokens ["I", "REMEMBER", "!", "!", "!", "WE", "WERE", "IN", "A", "PLACE", "THEN", "WOWO"]
# ::lemmas ["i", "remember", "!", "!", "!", "we", "be", "in", "a", "PLACE", "then", "WOWO"]
(c25-1 / multi-sentence
       :snt1 (c25-2 / remember-01
                    :ARG0 (c25-5 / i))
       :snt2 (c25-0 / be-located-at-91
                    :ARG1 (c25-4 / we)
                    :ARG2 (c25-3 / place)
                    :mod (c25-6 / then)))

# ::snt I think its like...anybody? When they get so saturated and we keep talking about them, its boring.
# ::tokens ["I", "think", "its", "like", "...", "anybody", "?", "When", "they", "get", "so", "saturated", "and", "we", "keep", "talking", "about", "them", ",", "its", "boring", "."]
# ::lemmas ["i", "think", "its", "like", "...", "anybody", "?", "when", "they", "get", "so", "saturate", "and", "we", "keep", "talk", "about", "they", ",", "its", "boring", "."]
(c26-2 / multi-sentence
       :snt1 (c26-11 / think-01
                     :ARG0 (c26-10 / i)
                     :ARG1 (c26-6 / resemble-01
                                  :ARG1 (c26-5 / it)
                                  :ARG2 (c26-7 / anybody)))
       :snt2 (c26-1 / bore-02
                    :ARG0 c26-5)
       :time (c26-12 / and
                     :op1 (c26-3 / get-03
                                 :ARG1 (c26-14 / they)
                                 :ARG2 (c26-4 / saturate-01
                                              :ARG1 c26-14
                                              :degree (c26-0 / so)))
                     :op2 (c26-8 / keep-02
                                 :ARG0 (c26-9 / we)
                                 :ARG1 (c26-13 / talk-01
                                               :ARG0 c26-9
                                               :ARG1 c26-14))))

# ::snt Kidding of course, Im over him too
# ::tokens ["Kidding", "of", "course", ",", "I", "m", "over", "him", "too"]
# ::lemmas ["kid", "of", "course", ",", "i", "m", "over", "he", "too"]
(c27-5 / and
       :op1 (c27-3 / joke-01
                   :ARG0 (c27-4 / i)
                   :mod (c27-1 / of-course))
       :op2 (c27-0 / over-02
                   :ARG1 c27-4
                   :ARG2 (c27-2 / he)
                   :mod (c27-6 / too)))

# ::snt Never.
# ::tokens ["Never", "."]
# ::lemmas ["never", "."]
(c28-1 / have-polarity-91
       :time (c28-0 / ever)
       :ARG2 -)

# ::snt Oh yous can all stay in the friggin shallow
# ::tokens ["Oh", "yous", "can", "all", "stay", "in", "the", "friggin", "shallow"]
# ::lemmas ["oh", "yous", "can", "all", "stay", "in", "the", "friggin", "shallow"]
(c29-5 / possible-01
       :ARG1 (c29-4 / stay-01
                    :ARG1 (c29-3 / you
                                 :mod (c29-6 / all))
                    :location (c29-0 / shallow
                                     :mod (c29-1 / frigging)))
       :mod (c29-2 / oh
                   :mode expressive))

# ::snt I enjoyed it! I enjoy screeching along to the soundtrack in the car
# ::tokens ["I", "enjoyed", "it", "!", "I", "enjoy", "screeching", "along", "to", "the", "soundtrack", "in", "the", "car"]
# ::lemmas ["i", "enjoy", "it", "!", "i", "enjoy", "screech", "along", "to", "the", "soundtrack", "in", "the", "car"]
(c30-1 / multi-sentence
       :snt1 (c30-5 / enjoy-01
                    :ARG0 (c30-7 / i)
                    :ARG1 (c30-3 / it))
       :snt2 (c30-9 / enjoy-01
                    :ARG0 (c30-10 / i)
                    :ARG1 (c30-2 / screech-02
                                 :ARG0 c30-10
                                 :ARG2 (c30-8 / thing
                                              :ARG2-of (c30-0 / soundtrack-01)
                                              :location (c30-6 / car))
                                 :manner (c30-4 / along))))

# ::snt Have you seen it? It made me cringe in parts as well
# ::tokens ["Have", "you", "seen", "it", "?", "It", "made", "me", "cringe", "in", "parts", "as", "well"]
# ::lemmas ["have", "you", "see", "it", "?", "it", "make", "i", "cringe", "in", "part", "as", "well"]
(c31-1 / multi-sentence
       :snt1 (c31-2 / see-01
                    :polarity (c31-8 / amr-unknown)
                    :ARG0 (c31-0 / you)
                    :ARG1 (c31-7 / it))
       :snt2 (c31-4 / make-02
                    :ARG0 (c31-3 / it)
                    :ARG1 (c31-6 / cringe-01
                                 :ARG0 (c31-10 / i)
                                 :location (c31-5 / part)
                                 :mod (c31-9 / as-well))))

# ::snt ikrrrrrrr what a masterpiece
# ::tokens ["ikrrrrrrr", "what", "a", "masterpiece"]
# ::lemmas ["ikrrrrrrr", "what", "a", "masterpiece"]
(c32-0 / masterpiece
       :degree (c32-1 / so))

# ::snt V o whatsapp, oh puta !
# ::tokens ["V", "o", "whatsapp", ",", "oh", "puta", "!"]
# ::lemmas ["v", "o", "whatsapp", ",", "oh", "puta", "!"]
(c33-3 / puta
       :mod (c33-0 / oh
                   :mode expressive)
       :mod (c33-2 / version
                   :mod (c33-5 / v))
       :mod (c33-4 / company
                   :name (c33-1 / name
                                :op1 "Whatsapp"))
       :mode expressive)

# ::snt Wow!
# ::tokens ["Wow", "!"]
# ::lemmas ["wow", "!"]
(c34-0 / wow-01
       :mode expressive)

# ::snt Its so good!!!
# ::tokens ["Its", "so", "good", "!", "!", "!"]
# ::lemmas ["its", "so", "good", "!", "!", "!"]
(c35-0 / good-02
       :ARG1 (c35-1 / it)
       :degree (c35-2 / so))

# ::snt If that movie were made about Ottoman royalty or prehistoric British mulla, it would sweep the Oscars.
# ::tokens ["If", "that", "movie", "were", "made", "about", "Ottoman", "royalty", "or", "prehistoric", "British", "mulla", ",", "it", "would", "sweep", "the", "Oscars", "."]
# ::lemmas ["if", "that", "movie", "be", "make", "about", "Ottoman", "royalty", "or", "prehistoric", "British", "mulla", ",", "it", "would", "sweep", "the", "Oscars", "."]
(c36-3 / sweep-02
       :ARG0 (c36-1 / make-01
                    :ARG1 (c36-6 / movie
                                 :mod (c36-11 / that)
                                 :topic (c36-0 / or
                                               :op1 (c36-4 / royalty
                                                           :mod (c36-10 / country
                                                                        :name (c36-2 / name
                                                                                     :op1 "Ottoman")))
                                               :op2 (c36-12 / mulla
                                                            :mod (c36-13 / country
                                                                         :name (c36-7 / name
                                                                                      :op1 "Britain"))
                                                            :mod (c36-8 / prehistoric)))))
       :ARG1 (c36-5 / award
                    :name (c36-9 / name
                                 :op1 "Oscars"))
       :condition c36-1)

# ::snt That was probably my Gamma. She did that every single time. I had to keep shushing her.
# ::tokens ["That", "was", "probably", "my", "Gamma", ".", "She", "did", "that", "every", "single", "time", ".", "I", "had", "to", "keep", "shushing", "her", "."]
# ::lemmas ["that", "be", "probably", "my", "Gamma", ".", "she", "do", "that", "every", "single", "time", ".", "i", "have", "to", "keep", "shush", "she", "."]
(c37-3 / multi-sentence
       :snt1 (c37-8 / probable
                    :domain (c37-4 / person
                                   :name (c37-2 / name
                                                :op1 "Gamma")
                                   :poss (c37-10 / i)
                                   :domain (c37-11 / that)))
       :snt2 (c37-13 / do-02
                     :ARG0 (c37-5 / she)
                     :ARG1 (c37-14 / that)
                     :frequency (c37-12 / time
                                        :ARG1-of (c37-0 / single-02)))
       :snt3 (c37-1 / obligate-01
                    :ARG1 (c37-6 / i)
                    :ARG2 (c37-9 / keep-02
                                 :ARG0 c37-6
                                 :ARG1 (c37-15 / shush-01
                                               :ARG0 c37-6
                                               :ARG1 (c37-7 / she)))))

# ::snt Hannah I literally BURST out greeting. Also the whole cinema basically gasped when the doggy was waiting outside the garage
# ::tokens ["Hannah", "I", "literally", "BURST", "out", "greeting", ".", "Also", "the", "whole", "cinema", "basically", "gasped", "when", "the", "doggy", "was", "waiting", "outside", "the", "garage"]
# ::lemmas ["Hannah", "i", "literally", "burst", "out", "greeting", ".", "also", "the", "whole", "cinema", "basically", "gasp", "when", "the", "doggy", "be", "wait", "outside", "the", "garage"]
(c38-2 / multi-sentence
       :snt1 (c38-4 / say-01
                    :ARG0 (c38-12 / i)
                    :ARG1 (c38-1 / bury-01
                                 :ARG0 c38-12
                                 :ARG2 (c38-14 / greet-01)
                                 :manner (c38-7 / literal))
                    :ARG2 (c38-8 / person
                                 :name (c38-3 / name
                                              :op1 "Hannah"))
                    :mode expressive)
       :snt2 (c38-13 / gasp-01
                     :ARG0 (c38-10 / cinema
                                   :mod (c38-11 / whole))
                     :mod (c38-6 / basic)
                     :time (c38-9 / wait-01
                                  :ARG1 (c38-15 / doggy)
                                  :ARG2 (c38-0 / outside
                                               :op1 (c38-16 / garage)))
                     :mod (c38-5 / also)))

# ::snt Is it any good ??
# ::tokens ["Is", "it", "any", "good", "?", "?"]
# ::lemmas ["be", "it", "any", "good", "?", "?"]
(c39-0 / good-02
       :polarity (c39-3 / amr-unknown)
       :ARG1 (c39-2 / it)
       :mod (c39-1 / any))

# ::snt Yesssss
# ::tokens ["Yesssss"]
# ::lemmas ["Yesssss"]
(c40-0 / yesssss)

# ::snt Oui ctait geniallllll
# ::tokens ["Oui", "ctait", "geniallllll"]
# ::lemmas ["Oui", "ctait", "geniallllll"]
(c41-1 / say-01
       :ARG0 (c41-4 / i)
       :ARG1 (c41-3 / ctait
                    :mode expressive)
       :ARG2 (c41-2 / person
                    :name (c41-0 / name
                                 :op1 "Geniallllll")))

# ::snt Oh man. Same!
# ::tokens ["Oh", "man", ".", "Same", "!"]
# ::lemmas ["oh", "man", ".", "same", "!"]
(c42-2 / multi-sentence
       :snt1 (c42-0 / oh
                    :mod (c42-1 / man)
                    :mode expressive)
       :snt2 (c42-3 / same-01))

# ::snt I finally saw it. SO GOOD.
# ::tokens ["I", "finally", "saw", "it", ".", "SO", "GOOD", "."]
# ::lemmas ["i", "finally", "see", "it", ".", "so", "good", "."]
(c43-2 / multi-sentence
       :snt1 (c43-3 / see-01
                    :ARG0 (c43-5 / i)
                    :ARG1 (c43-4 / it)
                    :time (c43-0 / final))
       :snt2 (c43-6 / good-02
                    :degree (c43-1 / so)))

# ::snt + Gaga qui est magique
# ::tokens ["+", "Gaga", "qui", "est", "magique"]
# ::lemmas ["+", "Gaga", "qui", "est", "magique"]
(c47-3 / add-02
       :ARG1 (c47-2 / amr-unknown
                    :topic-of (c47-1 / person
                                     :name (c47-0 / name
                                                  :op1 "Gaga"))))

# ::snt I actually hope Rami Malek wins for best actor!
# ::tokens ["I", "actually", "hope", "Rami", "Malek", "wins", "for", "best", "actor", "!"]
# ::lemmas ["i", "actually", "hope", "Rami", "Malek", "win", "for", "good", "actor", "!"]
(c48-2 / hope-01
       :ARG0 (c48-7 / i)
       :ARG1 (c48-4 / win-01
                    :ARG0 (c48-3 / person
                                 :name (c48-0 / name
                                              :op1 "Rami"
                                              :op2 "Malek"))
                    :ARG1 (c48-8 / award
                                 :ARG1-of (c48-6 / have-degree-91
                                                 :ARG2 (c48-9 / good-02
                                                              :ARG1 c48-3
                                                              :ARG2 (c48-10 / act-01))
                                                 :ARG3 (c48-1 / most))))
       :ARG1-of (c48-5 / actual-02)
       :mode expressive)

# ::snt Might be an idea
# ::tokens ["Might", "be", "an", "idea"]
# ::lemmas ["might", "be", "an", "idea"]
(c49-0 / possible-01
       :ARG1 (c49-1 / idea))

# ::snt Have to be honest, I didn't cry because I knew what to expect. But it was absolutely fantastic
# ::tokens ["Have", "to", "be", "honest", ",", "I", "did", "n't", "cry", "because", "I", "knew", "what", "to", "expect", ".", "But", "it", "was", "absolutely", "fantastic"]
# ::lemmas ["have", "to", "be", "honest", ",", "i", "do", "not", "cry", "because", "i", "know", "what", "to", "expect", ".", "but", "it", "be", "absolutely", "fantastic"]
(c50-2 / multi-sentence
       :snt1 (c50-0 / obligate-01
                    :ARG2 (c50-6 / honest-01
                                 :ARG0 (c50-10 / i)
                                 :ARG1 (c50-8 / cry-02
                                              :ARG0 c50-10
                                              :ARG1-of (c50-12 / cause-01
                                                               :ARG0 (c50-7 / know-01
                                                                            :ARG0 c50-10
                                                                            :ARG1 (c50-11 / thing
                                                                                          :ARG1-of (c50-5 / expect-01
                                                                                                          :ARG0 c50-10))))
                                              :polarity -)))
       :snt2 (c50-9 / contrast-01
                    :ARG2 (c50-1 / fantastic-02
                                 :ARG1 (c50-3 / it)
                                 :degree (c50-4 / absolute))))
