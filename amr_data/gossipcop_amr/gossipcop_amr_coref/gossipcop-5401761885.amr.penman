# ::snt With a phone charger? Lol
# ::tokens ["With", "a", "phone", "charger", "?", "Lol"]
# ::lemmas ["with", "a", "phone", "charger", "?", "Lol"]
(c1-2 / have-03
      :polarity (c1-1 / amr-unknown)
      :ARG0 (c1-0 / you)
      :ARG1 (c1-7 / thing
                  :ARG0-of (c1-5 / charge-03
                                 :ARG1 (c1-3 / phone)))
      :mod (c1-4 / laugh-01
                 :ARG0 (c1-6 / i)
                 :manner (c1-8 / loud)
                 :mode expressive))

# ::snt A hoe is a hoe
# ::tokens ["A", "hoe", "is", "a", "hoe"]
# ::lemmas ["a", "hoe", "be", "a", "hoe"]
(c2-2 / mean-01
      :ARG1 (c2-1 / hoe)
      :ARG2 (c2-0 / hoe))

# ::snt No matter how hard you try, you can't turn no bitch into a house wife
# ::tokens ["No", "matter", "how", "hard", "you", "try", ",", "you", "ca", "n't", "turn", "no", "bitch", "into", "a", "house", "wife"]
# ::lemmas ["no", "matter", "how", "hard", "you", "try", ",", "you", "can", "not", "turn", "no", "bitch", "into", "a", "house", "wife"]
(c3-4 / possible-01
      :ARG1 (c3-8 / turn-02
                  :ARG0 (c3-1 / you)
                  :ARG1 (c3-0 / bitch
                              :polarity -)
                  :ARG2 (c3-5 / wife
                              :mod (c3-3 / house)))
      :ARG1-of (c3-2 / regardless-91
                     :ARG2 (c3-9 / thing
                                 :degree-of (c3-6 / hard-02
                                                  :ARG1 (c3-7 / try-01
                                                              :ARG0 c3-1))))
      :polarity -)

# ::snt man these niggas are crazy
# ::tokens ["man", "these", "niggas", "are", "crazy"]
# ::lemmas ["man", "these", "niggas", "be", "crazy"]
(c4-1 / crazy-03
      :ARG1 (c4-2 / nigga
                  :mod (c4-3 / this))
      :mod (c4-0 / man
                 :mode expressive))

# ::snt I'm just so sorry she failed...
# ::tokens ["I", "'m", "just", "so", "sorry", "she", "failed", "..."]
# ::lemmas ["i", "be", "just", "so", "sorry", "she", "fail", "..."]
(c5-2 / sorry-01
      :ARG1 (c5-4 / i)
      :ARG2 (c5-0 / fail-01
                  :ARG1 (c5-1 / she))
      :degree (c5-5 / so)
      :mod (c5-3 / just))

# ::snt Rob, that was one time you really need to get over it...
# ::tokens ["Rob", ",", "that", "was", "one", "time", "you", "really", "need", "to", "get", "over", "it", "..."]
# ::lemmas ["Rob", ",", "that", "be", "one", "time", "you", "really", "need", "to", "get", "over", "it", "..."]
(c6-3 / say-01
      :ARG0 (c6-8 / i)
      :ARG1 (c6-2 / need-01
                  :ARG0 (c6-7 / person
                              :name (c6-6 / name
                                          :op1 "Rob"))
                  :ARG1 (c6-0 / over-02
                              :ARG1 c6-7
                              :ARG2 (c6-4 / it))
                  :degree (c6-5 / really)
                  :domain (c6-9 / time
                                :mod (c6-1 / one)))
      :ARG2 c6-7)

# ::snt Too bad all that can't buy class or integrity.
# ::tokens ["Too", "bad", "all", "that", "ca", "n't", "buy", "class", "or", "integrity", "."]
# ::lemmas ["too", "bad", "all", "that", "can", "not", "buy", "class", "or", "integrity", "."]
(c7-4 / have-degree-91
      :ARG2 (c7-1 / bad-07
                  :ARG1 (c7-5 / possible-01
                              :ARG1 (c7-3 / buy-05
                                          :ARG0 (c7-8 / that
                                                      :mod (c7-2 / all))
                                          :ARG1 (c7-0 / or
                                                      :op1 (c7-6 / class)
                                                      :op2 (c7-7 / integrity)))
                              :polarity -))
      :ARG3 (c7-9 / too))

# ::snt What the fuk
# ::tokens ["What", "the", "fuk"]
# ::lemmas ["what", "the", "fuk"]
(c8-0 / amr-unintelligible
      :value "fuk")

# ::snt Not thinking
# ::tokens ["Not", "thinking"]
# ::lemmas ["not", "think"]
(c11-0 / think-01
       :polarity -)

# ::snt Niggaaaa whatttttt . Wtf, these Kardashians got going on?
# ::tokens ["Niggaaaa", "whatttttt", ".", "Wtf", ",", "these", "Kardashians", "got", "going", "on", "?"]
# ::lemmas ["Niggaaaa", "whatttttt", ".", "Wtf", ",", "these", "Kardashians", "got", "go", "on", "?"]
(c13-2 / multi-sentence
       :snt1 (c13-1 / nigga
                    :mode expressive)
       :snt2 (c13-7 / go-on-15
                    :ARG1 (c13-5 / person
                                 :name (c13-4 / name
                                              :op1 "K Kardashians")
                                 :mod (c13-6 / this))
                    :mod (c13-0 / fuck
                                :mode expressive)
                    :polarity (c13-3 / amr-unknown)))

# ::snt Who would win My moneys on Chyna even when hes sober
# ::tokens ["Who", "would", "win", "My", "moneys", "on", "Chyna", "even", "when", "he", "s", "sober"]
# ::lemmas ["who", "would", "win", "my", "money", "on", "Chyna", "even", "when", "he", "s", "sober"]
(c14-6 / win-01
       :ARG0 (c14-8 / amr-unknown)
       :ARG1 (c14-5 / person
                    :ARG0-of (c14-4 / have-rel-role-91
                                    :ARG1 (c14-7 / i)
                                    :ARG2 (c14-9 / girlfriend)))
       :ARG4 (c14-1 / person
                    :name (c14-0 / name
                                 :op1 "Chyna"))
       :concession (c14-3 / even-when
                          :op1 (c14-2 / sober-02
                                      :ARG1 c14-1)))

# ::snt Oh please, what a crybaby, suck it up cupcake! Be a man for once . You should be charged for sharing nudes of her anyway.
# ::tokens ["Oh", "please", ",", "what", "a", "crybaby", ",", "suck", "it", "up", "cupcake", "!", "Be", "a", "man", "for", "once", ".", "You", "should", "be", "charged", "for", "sharing", "nudes", "of", "her", "anyway", "."]
# ::lemmas ["oh", "please", ",", "what", "a", "crybaby", ",", "suck", "it", "up", "cupcake", "!", "be", "a", "man", "for", "once", ".", "you", "should", "be", "charge", "for", "share", "nude", "of", "she", "anyway", "."]
(c15-4 / multi-sentence
       :snt1 (c15-6 / say-01
                    :ARG1 (c15-0 / suck-up-04
                                 :ARG0 (c15-10 / cupcake)
                                 :ARG1 (c15-11 / it)
                                 :mod (c15-1 / oh
                                             :mode expressive)
                                 :mode imperative)
                    :ARG2 c15-10)
       :snt2 (c15-9 / man
                    :domain (c15-3 / you)
                    :mod (c15-2 / for-once))
       :snt3 (c15-8 / recommend-01
                    :ARG1 (c15-14 / charge-05
                                  :ARG1 (c15-13 / you)
                                  :ARG2 (c15-15 / share-01
                                                :ARG0 c15-13
                                                :ARG1 (c15-5 / nude
                                                             :topic (c15-7 / she)))
                                  :mod (c15-12 / anyway))))

# ::snt And chyna will suing him for nude publicity
# ::tokens ["And", "chyna", "will", "suing", "him", "for", "nude", "publicity"]
# ::lemmas ["and", "chyna", "will", "sue", "he", "for", "nude", "publicity"]
(c16-6 / and
       :op2 (c16-2 / sue-02
                   :ARG0 (c16-4 / person
                                :name (c16-0 / name
                                             :op1 "Chyna"))
                   :ARG1 (c16-3 / he)
                   :ARG2 (c16-1 / publicity
                                :mod (c16-5 / nude))))

# ::snt All involved are trash
# ::tokens ["All", "involved", "are", "trash"]
# ::lemmas ["all", "involve", "be", "trash"]
(c17-2 / trash
       :domain (c17-0 / all
                      :ARG1-of (c17-1 / involve-01)))

# ::snt Really? Who cares?!!!
# ::tokens ["Really", "?", "Who", "cares", "?", "!", "!", "!"]
# ::lemmas ["really", "?", "who", "care", "?", "!", "!", "!"]
(c18-2 / multi-sentence
       :snt1 (c18-0 / real-04)
       :snt2 (c18-1 / care-01
                    :ARG0 (c18-3 / amr-unknown)))

# ::snt Money grubbing skank!
# ::tokens ["Money", "grubbing", "skank", "!"]
# ::lemmas ["money", "grub", "skank", "!"]
(c19-2 / skank
       :ARG0-of (c19-0 / grub-01
                       :ARG1 (c19-1 / money))
       :mode expressive)

# ::snt Me too!! Its sad
# ::tokens ["Me", "too", "!", "!", "Its", "sad"]
# ::lemmas ["i", "too", "!", "!", "its", "sad"]
(c20-0 / multi-sentence
       :snt1 (c20-3 / i
                    :mod (c20-4 / too))
       :snt2 (c20-1 / sad-02
                    :ARG0 (c20-2 / it)))

# ::snt Tks task Mary Brown, What's up they kick you off the stage n your butt hurt? Or just a Kardashian fan...ewwww
# ::tokens ["Tks", "task", "Mary", "Brown", ",", "What", "'s", "up", "they", "kick", "you", "off", "the", "stage", "n", "your", "butt", "hurt", "?", "Or", "just", "a", "Kardashian", "fan", "...", "ewwww"]
# ::lemmas ["tks", "task", "Mary", "Brown", ",", "what", "be", "up", "they", "kick", "you", "off", "the", "stage", "n", "your", "butt", "hurt", "?", "or", "just", "a", "Kardashian", "fan", "...", "ewwww"]
(c21-9 / multi-sentence
       :snt1 (c21-7 / task-01
                    :ARG0 (c21-17 / publication
                                  :name (c21-15 / name
                                                :op1 "TS"))
                    :ARG1 (c21-10 / person
                                  :name (c21-11 / name
                                                :op1 "Mary"
                                                :op2 "Brown")
                                  :part (c21-8 / butt))
                    :ARG2 (c21-6 / amr-unknown
                                 :mod (c21-13 / up)
                                 :domain (c21-4 / kick-01
                                                :ARG0 (c21-12 / they)
                                                :ARG1 c21-10
                                                :source (c21-0 / stage)
                                                :manner (c21-3 / hurt-01
                                                               :ARG1 c21-8))))
       :snt2 (c21-2 / or
                    :op2 (c21-14 / fan
                                 :mod (c21-1 / person
                                             :name (c21-18 / name
                                                           :op1 "Kardash"))
                                 :mod (c21-5 / just))
                    :mod (c21-16 / ewww
                                 :mode expressive)))

# ::snt Omg RobKardashian?? Please you musta had a perfect past. Bow down .... Never,Blac..."Look back but don't stare"
# ::tokens ["Omg", "RobKardashian", "?", "?", "Please", "you", "musta", "had", "a", "perfect", "past", ".", "Bow", "down", "....", "Never", ",", "Blac", "...", "\"Look", "back", "but", "do", "n't", "stare", "\""]
# ::lemmas ["Omg", "RobKardashian", "?", "?", "please", "you", "musta", "have", "a", "perfect", "past", ".", "bow", "down", "....", "never", ",", "Blac", "...", "\"look", "back", "but", "do", "not", "stare", "\""]
(c22-12 / multi-sentence
        :snt1 (c22-0 / say-01
                     :ARG1 (c22-9 / amr-unknown)
                     :ARG2 (c22-18 / person
                                   :name (c22-16 / name
                                                 :op1 "RobKardashian"))
                     :mod (c22-5 / oh-my-god
                                 :mode expressive))
        :snt2 (c22-10 / obligate-01
                      :ARG2 (c22-8 / have-03
                                   :ARG0 (c22-7 / you)
                                   :ARG1 (c22-13 / past
                                                 :ARG1-of (c22-3 / perfect-02)))
                      :polite +)
        :snt3 (c22-6 / shut-down-05
                     :ARG0 c22-7
                     :time (c22-17 / ever)
                     :mode imperative)
        :snt4 c22-0
        :ARG1 (c22-15 / contrast-01
                      :ARG1 (c22-1 / look-01
                                   :ARG0 (c22-2 / person
                                                :name (c22-14 / name
                                                              :op1 "Blac"))
                                   :direction (c22-11 / back)
                                   :mode imperative)
                      :ARG2 (c22-4 / stare-01
                                   :ARG0 c22-2
                                   :mode imperative
                                   :polarity -))
        :ARG2 c22-2)

# ::snt Blac Chyna, your more beautiful than any Kardashian, play your cards and lay low. Don't go off as ALL of them do.!
# ::tokens ["Blac", "Chyna", ",", "your", "more", "beautiful", "than", "any", "Kardashian", ",", "play", "your", "cards", "and", "lay", "low", ".", "Do", "n't", "go", "off", "as", "ALL", "of", "them", "do", ".", "!"]
# ::lemmas ["Blac", "Chyna", ",", "your", "more", "beautiful", "than", "any", "Kardashian", ",", "play", "your", "card", "and", "lie", "low", ".", "do", "not", "go", "off", "as", "all", "of", "they", "do", ".", "!"]
(c23-12 / multi-sentence
        :snt1 (c23-8 / and
                     :op1 (c23-18 / play-01
                                  :ARG0 (c23-13 / person
                                                :name (c23-16 / name
                                                              :op1 "Blac"
                                                              :op2 "Chyna")
                                                :ARG1-of (c23-3 / have-degree-91
                                                                :ARG2 (c23-11 / beautiful-02
                                                                              :ARG1 c23-13)
                                                                :ARG3 (c23-4 / more)
                                                                :ARG4 (c23-1 / person
                                                                             :name (c23-14 / name
                                                                                           :op1 "Kardashian")
                                                                             :mod (c23-6 / any))))
                                  :ARG1 (c23-15 / card
                                                :poss c23-13))
                     :op2 (c23-0 / lay-01
                                 :ARG1 c23-13
                                 :ARG2 (c23-10 / low-04
                                               :ARG1 c23-13)))
        :snt2 (c23-9 / go-off-16
                     :ARG1 (c23-2 / you)
                     :ARG1-of (c23-17 / resemble-01
                                      :ARG2 (c23-19 / do-02
                                                    :ARG0 (c23-7 / they
                                                                 :mod (c23-5 / all))))
                     :polarity -
                     :mode imperative))

# ::snt Ummm really?
# ::tokens ["Ummm", "really", "?"]
# ::lemmas ["ummm", "really", "?"]
(c25-0 / real-04
       :polarity (c25-2 / amr-unknown)
       :mod (c25-1 / ummm))

# ::snt No show no money. No Black and Rob no show. Looks like she stepped to early. Oh well, live with it.
# ::tokens ["No", "show", "no", "money", ".", "No", "Black", "and", "Rob", "no", "show", ".", "Looks", "like", "she", "stepped", "to", "early", ".", "Oh", "well", ",", "live", "with", "it", "."]
# ::lemmas ["no", "show", "no", "money", ".", "no", "black", "and", "Rob", "no", "show", ".", "look", "like", "she", "step", "to", "early", ".", "oh", "well", ",", "live", "with", "it", "."]
(c26-3 / multi-sentence
       :snt1 (c26-5 / show-01
                    :ARG1 (c26-9 / money)
                    :polarity -)
       :snt2 (c26-0 / show-01
                    :ARG1 (c26-14 / and
                                  :op1 (c26-10 / person
                                               :name (c26-4 / name
                                                            :op1 "Black"))
                                  :op2 (c26-6 / person
                                              :name (c26-11 / name
                                                            :op1 "Rob")))
                    :polarity -)
       :snt3 (c26-12 / look-02
                     :ARG1 (c26-16 / step-01
                                   :ARG1 (c26-7 / she)
                                   :time (c26-8 / early)))
       :snt4 (c26-15 / live-02
                     :ARG0 (c26-2 / you)
                     :ARG1 (c26-13 / it)
                     :mod (c26-1 / oh-well
                                 :mode expressive)
                     :mode imperative))

# ::snt I think we all saw this coming lol
# ::tokens ["I", "think", "we", "all", "saw", "this", "coming", "lol"]
# ::lemmas ["i", "think", "we", "all", "see", "this", "come", "lol"]
(c27-4 / think-01
       :ARG0 (c27-5 / i)
       :ARG1 (c27-0 / see-01
                    :ARG0 (c27-2 / we
                                 :mod (c27-6 / all))
                    :ARG1 (c27-3 / come-03
                                 :ARG1 (c27-8 / this)))
       :ARG2-of (c27-1 / laugh-01
                       :ARG0 c27-5
                       :manner (c27-7 / loud)))

# ::snt Gold digger
# ::tokens ["Gold", "digger"]
# ::lemmas ["gold", "digger"]
(c28-2 / person
       :ARG0-of (c28-1 / dig-01
                       :ARG1 (c28-0 / gold)))

# ::snt Oh god! And we should care bc she and also the K family are so talented and America should never miss on their reality show.give me a break
# ::tokens ["Oh", "god", "!", "And", "we", "should", "care", "bc", "she", "and", "also", "the", "K", "family", "are", "so", "talented", "and", "America", "should", "never", "miss", "on", "their", "reality", "show.give", "me", "a", "break"]
# ::lemmas ["oh", "god", "!", "and", "we", "should", "care", "bc", "she", "and", "also", "the", "K", "family", "be", "so", "talented", "and", "America", "should", "never", "miss", "on", "their", "reality", "show.give", "i", "a", "break"]
(c29-15 / multi-sentence
        :snt1 (c29-23 / person
                      :name (c29-20 / name
                                    :op1 "God")
                      :mod (c29-4 / oh)
                      :mode expressive)
        :snt2 (c29-11 / and
                      :op2 (c29-21 / recommend-01
                                   :ARG1 (c29-18 / care-01
                                                 :ARG0 (c29-25 / we)
                                                 :ARG1-of (c29-13 / cause-01
                                                                  :ARG0 (c29-9 / and
                                                                               :op1 (c29-10 / talent
                                                                                            :degree (c29-0 / so)
                                                                                            :domain (c29-5 / she))
                                                                               :op2 (c29-19 / family
                                                                                            :name (c29-16 / name
                                                                                                          :op1 "K family")
                                                                                            :mod (c29-8 / also)))
                                                                  :op3 (c29-2 / recommend-01
                                                                              :ARG1 (c29-7 / miss-02
                                                                                           :ARG0 (c29-1 / country
                                                                                                        :name (c29-24 / name
                                                                                                                      :op1 "America"))
                                                                                           :ARG1 (c29-3 / show-04
                                                                                                        :ARG0 c29-1
                                                                                                        :ARG1 (c29-17 / reality))
                                                                                           :time (c29-22 / ever)
                                                                                           :polarity -))))))
        :snt3 (c29-12 / give-01
                      :ARG0 (c29-6 / you)
                      :ARG1 (c29-14 / break-19)
                      :ARG2 (c29-26 / i)
                      :mode imperative))

# ::snt She is a bitch!! She only dated Rob for the fame. Bad on her!!!
# ::tokens ["She", "is", "a", "bitch", "!", "!", "She", "only", "dated", "Rob", "for", "the", "fame", ".", "Bad", "on", "her", "!", "!", "!"]
# ::lemmas ["she", "be", "a", "bitch", "!", "!", "she", "only", "date", "Rob", "for", "the", "fame", ".", "bad", "on", "she", "!", "!", "!"]
(c30-4 / multi-sentence
       :snt1 (c30-2 / bitch
                    :domain (c30-6 / she))
       :snt2 (c30-9 / date-02
                    :ARG0 (c30-0 / she)
                    :ARG1 (c30-8 / person
                                 :name (c30-5 / name
                                              :op1 "Rob"))
                    :purpose (c30-1 / fame-01)
                    :mod (c30-3 / only))
       :snt3 (c30-7 / bad-04
                    :ARG1 (c30-10 / she)
                    :mode expressive))

# ::snt Ha ha! Ktrash have been trash for years! About time someone went after them! You go girl!!!!
# ::tokens ["Ha", "ha", "!", "Ktrash", "have", "been", "trash", "for", "years", "!", "About", "time", "someone", "went", "after", "them", "!", "You", "go", "girl", "!", "!", "!", "!"]
# ::lemmas ["ha", "ha", "!", "Ktrash", "have", "be", "trash", "for", "years", "!", "about", "time", "someone", "go", "after", "they", "!", "you", "go", "girl", "!", "!", "!", "!"]
(c31-1 / multi-sentence
       :snt1 (c31-6 / trash
                    :domain c31-6)
       :duration (c31-5 / multiple
                        :op1 (c31-8 / temporal-quantity
                                    :unit (c31-0 / year)
                                    :quant 1))
       :snt2 (c31-9 / go-03
                    :ARG0 (c31-2 / someone)
                    :ARG1 (c31-7 / they)
                    :time (c31-3 / about
                                 :op1 (c31-4 / time))
                    :snt3-of c31-1)
       :ARG0 (c31-11 / you
                     :mod (c31-10 / girl))
       :mode imperative)

# ::snt Isnt slut shamming just part of being a kardashian ? This is a royal family ....
# ::tokens ["Is", "nt", "slut", "shamming", "just", "part", "of", "being", "a", "kardashian", "?", "This", "is", "a", "royal", "family", "...."]
# ::lemmas ["be", "not", "slut", "sham", "just", "part", "of", "be", "a", "kardashian", "?", "this", "be", "a", "royal", "family", "...."]
(c32-3 / multi-sentence
       :snt1 (c32-6 / have-part-91
                    :ARG1 (c32-8 / have-mod-91
                                 :ARG2 (c32-7 / country
                                              :name (c32-2 / name
                                                           :op1 "Kardashian")))
                    :ARG2 (c32-4 / shamming
                                 :mod (c32-0 / slut))
                    :mod (c32-9 / just)
                    :polarity -)
       :snt2 (c32-1 / family
                    :mod (c32-5 / royal)
                    :domain (c32-10 / this)))

# ::snt Disgusting that she doesn't think about the baby just herself! You get more money with not being a smh
# ::tokens ["Disgusting", "that", "she", "does", "n't", "think", "about", "the", "baby", "just", "herself", "!", "You", "get", "more", "money", "with", "not", "being", "a", "smh"]
# ::lemmas ["disgusting", "that", "she", "do", "not", "think", "about", "the", "baby", "just", "herself", "!", "you", "get", "more", "money", "with", "not", "be", "a", "smh"]
(c33-3 / multi-sentence
       :snt1 (c33-10 / disgust-01
                     :ARG0 (c33-8 / think-01
                                  :ARG0 (c33-4 / she)
                                  :ARG2 (c33-1 / baby)
                                  :mod (c33-7 / just)
                                  :polarity -))
       :snt2 (c33-9 / get-01
                    :ARG0 (c33-2 / you)
                    :ARG1 (c33-5 / money
                                 :quant (c33-11 / more))
                    :ARG1-of (c33-6 / cause-01
                                    :ARG0 (c33-0 / smh
                                                 :domain c33-2
                                                 :polarity -))))

# ::snt But didn't she just the the slutw.. nevermind
# ::tokens ["But", "did", "n't", "she", "just", "the", "the", "slutw", "..", "nevermind"]
# ::lemmas ["but", "do", "not", "she", "just", "the", "the", "slutw", "..", "nevermind"]
(c35-5 / contrast-01
       :ARG2 (c35-3 / slutwipe
                    :domain (c35-0 / she)
                    :mod (c35-6 / just)
                    :ARG1-of (c35-2 / mind-15
                                    :ARG0 (c35-1 / you)
                                    :time (c35-4 / ever)
                                    :polarity -
                                    :mode imperative)))

# ::snt Only my opinion, but she clearly took advantage of a vulnerable guy a d had a baby with him for the money. Totally opportunistic.
# ::tokens ["Only", "my", "opinion", ",", "but", "she", "clearly", "took", "advantage", "of", "a", "vulnerable", "guy", "a", "d", "had", "a", "baby", "with", "him", "for", "the", "money", ".", "Totally", "opportunistic", "."]
# ::lemmas ["only", "my", "opinion", ",", "but", "she", "clearly", "take", "advantage", "of", "a", "vulnerable", "guy", "a", "d", "have", "a", "baby", "with", "he", "for", "the", "money", ".", "totally", "opportunistic", "."]
(c37-3 / multi-sentence
       :snt1 (c37-0 / opine-01
                    :ARG0 (c37-9 / i)
                    :ARG1 (c37-10 / take-advantage-02
                                  :ARG0 (c37-4 / she)
                                  :ARG1 (c37-11 / guy
                                                :ARG1-of (c37-5 / vulnerable-01)
                                                :ARG0-of (c37-6 / have-05
                                                                :ARG1 (c37-2 / baby)))
                                  :ARG1-of (c37-8 / clear-06)
                                  :purpose (c37-7 / money))
                    :mod (c37-1 / only))
       :snt2 (c37-12 / opportunistic
                     :degree (c37-13 / total)
                     :domain c37-4))

# ::snt The thirst is REAL.
# ::tokens ["The", "thirst", "is", "REAL", "."]
# ::lemmas ["the", "thirst", "be", "real", "."]
(c38-0 / real-04
       :ARG1 (c38-1 / thirst-01))

# ::snt Give it up !!slut-shaming isnt against the law. Stop trying to get more attention. No one cares
# ::tokens ["Give", "it", "up", "!", "!", "slut", "-", "shaming", "is", "nt", "against", "the", "law", ".", "Stop", "trying", "to", "get", "more", "attention", ".", "No", "one", "cares"]
# ::lemmas ["give", "it", "up", "!", "!", "slut", "-", "shame", "be", "not", "against", "the", "law", ".", "stop", "try", "to", "get", "more", "attention", ".", "no", "one", "care"]
(c39-2 / multi-sentence
       :snt1 (c39-11 / give-up-07
                     :ARG0 (c39-1 / you)
                     :ARG1 (c39-9 / it)
                     :mode imperative)
       :snt2 (c39-10 / against
                     :op1 (c39-6 / law)
                     :domain (c39-4 / slap-01
                                    :ARG2 (c39-0 / slut))
                     :polarity -)
       :snt3 (c39-15 / stop-01
                     :ARG0 (c39-13 / you)
                     :ARG1 (c39-8 / try-01
                                  :ARG0 c39-13
                                  :ARG1 (c39-12 / get-01
                                                :ARG0 c39-13
                                                :ARG1 (c39-14 / attend-02
                                                              :mod (c39-5 / more))))
                     :mode imperative)
       :snt4 (c39-7 / care-01
                    :ARG0 (c39-3 / no-one)))

# ::snt This is what the are thinking
# ::tokens ["This", "is", "what", "the", "are", "thinking"]
# ::lemmas ["this", "be", "what", "the", "be", "think"]
(c40-2 / think-01
       :ARG0 (c40-1 / they)
       :ARG1 (c40-0 / this))

# ::snt Haha I think the names unite fitting... no surprises here... her plans are going as she wanted them too ....
# ::tokens ["Haha", "I", "think", "the", "names", "unite", "fitting", "...", "no", "surprises", "here", "...", "her", "plans", "are", "going", "as", "she", "wanted", "them", "too", "...."]
# ::lemmas ["haha", "i", "think", "the", "name", "unite", "fit", "...", "no", "surprise", "here", "...", "her", "plan", "be", "go", "as", "she", "want", "they", "too", "...."]
(c41-3 / multi-sentence
       :snt1 (c41-10 / think-01
                     :ARG0 (c41-9 / i)
                     :ARG1 (c41-0 / fit-06
                                  :ARG1 (c41-2 / name))
                     :mod (c41-5 / haha))
       :snt2 (c41-4 / surprise-01
                    :location (c41-8 / here)
                    :polarity -)
       :snt3 (c41-11 / go-09
                     :ARG1 (c41-6 / plan-01
                                  :ARG0 (c41-1 / she))
                     :manner (c41-7 / want-01
                                    :ARG0 c41-1
                                    :ARG1 c41-6)
                     :mod (c41-12 / too)))

# ::snt Rob paid for all your fake body, what a Dum bitch!
# ::tokens ["Rob", "paid", "for", "all", "your", "fake", "body", ",", "what", "a", "Dum", "bitch", "!"]
# ::lemmas ["Rob", "pay", "for", "all", "your", "fake", "body", ",", "what", "a", "Dum", "bitch", "!"]
(c42-6 / say-01
       :ARG0 (c42-9 / i)
       :ARG1 (c42-8 / pay-01
                    :ARG0 (c42-5 / person
                                 :name (c42-4 / name
                                              :op1 "Rob"))
                    :ARG3 (c42-2 / body
                                 :ARG1-of (c42-0 / fake-02)
                                 :poss (c42-3 / you)
                                 :mod (c42-10 / all)))
       :ARG2 (c42-7 / bitch
                    :mod (c42-11 / Dum)
                    :degree (c42-1 / so)))

# ::snt GOLD DIGGGIN ASSSSSSSSSSSSSS A TOURS THE BULLLLL......... a female Bernie Madoff at his finest......Judge smack her for Bernie PLZ.
# ::tokens ["GOLD", "DIGGGIN", "ASSSSSSSSSSSSSS", "A", "TOURS", "THE", "BULLLLL", ".........", "a", "female", "Bernie", "Madoff", "at", "his", "finest", "......", "Judge", "smack", "her", "for", "Bernie", "PLZ", "."]
# ::lemmas ["gold", "DIGGGIN", "ASSSSSSSSSSSSSS", "a", "tours", "the", "BULLLLL", ".........", "a", "female", "Bernie", "Madoff", "at", "his", "fine", "......", "Judge", "smack", "she", "for", "Bernie", "PLZ", "."]
(c43-3 / multi-sentence
       :snt1 (c43-1 / butt-around-00
                    :ARG0 (c43-14 / dummy
                                  :ARG1-of (c43-13 / gold-01))
                    :ARG1 (c43-7 / bill))
       :snt2 (c43-8 / person
                    :name (c43-4 / name
                                 :op1 "Bernie"
                                 :op2 "Madoff")
                    :mod (c43-0 / female)
                    :ARG1-of (c43-9 / have-degree-91
                                    :ARG2 (c43-10 / fine-03
                                                  :ARG1 c43-8)
                                    :ARG3 (c43-11 / most))
                    :mode expressive)
       :snt3 (c43-5 / smack-02
                    :ARG0 (c43-2 / you)
                    :ARG1 (c43-6 / person
                                 :name (c43-12 / name
                                               :op1 "Bernie"
                                               :op2 "PLZ"))
                    :mode imperative))

# ::snt She's suing to get back on th gravy train, wasn't she in the national slut walk with amber rose.
# ::tokens ["She", "'s", "suing", "to", "get", "back", "on", "th", "gravy", "train", ",", "was", "n't", "she", "in", "the", "national", "slut", "walk", "with", "amber", "rose", "."]
# ::lemmas ["she", "be", "sue", "to", "get", "back", "on", "th", "gravy", "train", ",", "be", "not", "she", "in", "the", "national", "slut", "walk", "with", "amber", "rise", "."]
(c44-2 / sue-02
       :ARG0 (c44-0 / she)
       :ARG2 (c44-8 / get-back-10
                    :ARG1 c44-0
                    :ARG2 (c44-7 / train
                                 :mod (c44-6 / gravy)))
       :ARG1-of (c44-3 / request-confirmation-91)
       :subevent-of (c44-5 / walk-01
                           :ARG0 c44-0
                           :mod (c44-10 / slut
                                        :mod (c44-1 / nation))
                           :instrument (c44-9 / rose
                                              :mod (c44-4 / amber))))

# ::snt Shes trying but she should know the kardashians dont play in court.
# ::tokens ["She", "s", "trying", "but", "she", "should", "know", "the", "kardashians", "do", "nt", "play", "in", "court", "."]
# ::lemmas ["she", "s", "try", "but", "she", "should", "know", "the", "kardashian", "do", "not", "play", "in", "court", "."]
(c45-8 / try-01
       :ARG0 (c45-4 / he)
       :concession-of (c45-3 / recommend-01
                             :ARG1 (c45-5 / know-01
                                          :ARG0 (c45-2 / she)
                                          :ARG1 (c45-6 / play-01
                                                       :ARG0 (c45-1 / person
                                                                    :mod (c45-7 / country
                                                                                :name (c45-0 / name
                                                                                             :op1 "Kardashia")))
                                                       :location (c45-9 / court)
                                                       :polarity -))
                             :ARG2 c45-2))

# ::snt Gold digger
# ::tokens ["Gold", "digger"]
# ::lemmas ["gold", "digger"]
(c46-2 / person
       :ARG0-of (c46-1 / dig-01
                       :ARG1 (c46-0 / gold)))

# ::snt Why waste your time
# ::tokens ["Why", "waste", "your", "time"]
# ::lemmas ["why", "waste", "your", "time"]
(c47-1 / waste-01
       :ARG1 (c47-3 / time
                    :poss (c47-0 / you))
       :ARG1-of (c47-2 / cause-01
                       :ARG0 (c47-4 / amr-unknown)))

# ::snt How would there be a show if the show's namesake is broke up?
# ::tokens ["How", "would", "there", "be", "a", "show", "if", "the", "show", "'s", "namesake", "is", "broke", "up", "?"]
# ::lemmas ["how", "would", "there", "be", "a", "show", "if", "the", "show", "'s", "namesake", "be", "break", "up", "?"]
(c48-3 / show-04
       :manner (c48-0 / amr-unknown)
       :condition (c48-1 / break-up-08
                         :ARG1 (c48-2 / namesake
                                      :poss c48-3)))

# ::snt You were a stripper before you got famous off someone else such a gold digger!! I feel bad for
# ::tokens ["You", "were", "a", "stripper", "before", "you", "got", "famous", "off", "someone", "else", "such", "a", "gold", "digger", "!", "!", "I", "feel", "bad", "for"]
# ::lemmas ["you", "be", "a", "stripper", "before", "you", "get", "famous", "off", "someone", "else", "such", "a", "gold", "digger", "!", "!", "i", "feel", "bad", "for"]
(c50-4 / multi-sentence
       :snt1 (c50-9 / person
                    :ARG0-of (c50-6 / stripe-01)
                    :domain (c50-3 / you)
                    :time (c50-2 / before
                                 :op1 (c50-0 / fame-01
                                             :ARG1 c50-3
                                             :ARG2 (c50-5 / person
                                                          :ARG0-of (c50-13 / dig-01
                                                                           :ARG2 (c50-12 / gold
                                                                                         :mod-of c50-5)))
                                             :mod (c50-1 / such))))
       :snt2 (c50-10 / feel-01
                     :ARG0 (c50-11 / i)
                     :ARG1 (c50-8 / bad-07)
                     :ARG2 (c50-14 / someone
                                   :mod (c50-7 / else))))
