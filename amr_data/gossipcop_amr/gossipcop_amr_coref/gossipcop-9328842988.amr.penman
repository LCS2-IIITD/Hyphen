# ::snt Again, dream come TRUE. All Avengers. Come party at my wedding.
# ::tokens ["Again", ",", "dream", "come", "TRUE", ".", "All", "Avengers", ".", "Come", "party", "at", "my", "wedding", "."]
# ::lemmas ["again", ",", "dream", "come", "true", ".", "all", "avenger", ".", "come", "party", "at", "my", "wedding", "."]
(c1-2 / multi-sentence
      :snt1 (c1-11 / dream-01
                   :ARG1-of (c1-5 / come-04
                                  :ARG2 (c1-7 / true-01
                                              :ARG1 c1-11))
                   :mod (c1-9 / again))
      :snt2 (c1-0 / organization
                  :name (c1-3 / name
                              :op1 "Avengers")
                  :mod (c1-8 / all))
      :snt3 (c1-12 / come-04
                   :ARG0 (c1-1 / you)
                   :ARG1 (c1-4 / party-01)
                   :time (c1-6 / wed-01
                               :ARG1 (c1-10 / i))
                   :mode imperative))

# ::snt Yeah they just haven't hooked up with the Mozz, I'm sure they wouldn't be saying men are trash if they took the time to appreciate an epic male such as myself.
# ::tokens ["Yeah", "they", "just", "have", "n't", "hooked", "up", "with", "the", "Mozz", ",", "I", "'m", "sure", "they", "would", "n't", "be", "saying", "men", "are", "trash", "if", "they", "took", "the", "time", "to", "appreciate", "an", "epic", "male", "such", "as", "myself", "."]
# ::lemmas ["yeah", "they", "just", "have", "not", "hook", "up", "with", "the", "Mozz", ",", "i", "be", "sure", "they", "would", "not", "be", "say", "man", "be", "trash", "if", "they", "take", "the", "time", "to", "appreciate", "an", "epic", "male", "such", "as", "myself", "."]
(c2-2 / multi-sentence
      :snt1 (c2-6 / hook-up-02
                  :ARG1 (c2-12 / they)
                  :ARG2 (c2-7 / product
                              :name (c2-1 / name
                                          :op1 "Mozz"))
                  :mod (c2-10 / just)
                  :polarity -)
      :snt2 (c2-3 / sure-02
                  :ARG0 (c2-11 / i)
                  :ARG1 (c2-0 / say-01
                              :ARG0 c2-12
                              :ARG1 (c2-15 / trash
                                           :domain (c2-8 / man))
                              :condition (c2-13 / take-01
                                                :ARG0 c2-12
                                                :ARG1 (c2-5 / time)
                                                :purpose (c2-4 / appreciate-02
                                                               :ARG0 c2-12
                                                               :ARG1 (c2-14 / male
                                                                            :mod (c2-9 / epic)
                                                                            :example c2-11)))
                              :polarity -)))

# ::snt X10000000000
# ::tokens ["X10000000000"]
# ::lemmas ["x10000000000"]
(c3-0 / emoticon
      :value "X10000000000")

# ::snt I want it
# ::tokens ["I", "want", "it"]
# ::lemmas ["i", "want", "it"]
(c4-1 / want-01
      :ARG0 (c4-2 / i)
      :ARG1 (c4-0 / it))

# ::snt Hola quera preguntar si este producto que dicen que cuesta euros aproximadamente entro a comprarlo en amazon y me piden cerca de los euros.
# ::tokens ["Hola", "quera", "preguntar", "si", "este", "producto", "que", "dicen", "que", "cuesta", "euros", "aproximadamente", "entro", "a", "comprarlo", "en", "amazon", "y", "me", "piden", "cerca", "de", "los", "euros", "."]
# ::lemmas ["Hola", "quera", "preguntar", "si", "este", "producto", "que", "dicen", "que", "cuesta", "euros", "aproximadamente", "entro", "a", "comprarlo", "en", "amazon", "y", "i", "piden", "cerca", "de", "los", "euros", "."]
(c5-12 / multi-sentence
       :snt1 (c5-5 / hola
                   :mode expressive)
       :snt2 (c5-20 / possible-01
                    :ARG1 (c5-13 / preguntar-00
                                 :ARG0 (c5-21 / i)
                                 :ARG1 (c5-2 / producto
                                             :mod (c5-8 / this)
                                             :ARG0-of (c5-15 / cause-01
                                                             :ARG1 (c5-0 / possible-01
                                                                         :ARG1 (c5-11 / come-01
                                                                                      :ARG1 (c5-19 / euro
                                                                                                   :mod (c5-1 / cuesta))
                                                                                      :ARG4 (c5-10 / entro
                                                                                                   :op1 (c5-17 / comprarlo
                                                                                                               :ARG1-of (c5-6 / mean-01
                                                                                                                              :ARG2 (c5-3 / company
                                                                                                                                          :name (c5-18 / name
                                                                                                                                                       :op1 "Amazon")))))
                                                                                      :ARG0-of (c5-16 / cause-01
                                                                                                      :ARG1 (c5-7 / piden-00
                                                                                                                  :ARG0 (c5-4 / i)
                                                                                                                  :ARG1 (c5-9 / cerca
                                                                                                                              :mod (c5-14 / euro)))))))))))

# ::snt Want to get one pleeaasse!!!!!!!
# ::tokens ["Want", "to", "get", "one", "pleeaasse", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["want", "to", "get", "one", "pleeaasse", "!", "!", "!", "!", "!", "!", "!"]
(c6-1 / pleea
      :domain (c6-2 / want-01
                    :ARG0 (c6-3 / i)
                    :ARG1 (c6-4 / get-01
                                :ARG0 c6-3
                                :ARG1 (c6-0 / one)))
      :mode expressive)

# ::snt What a time to be alive
# ::tokens ["What", "a", "time", "to", "be", "alive"]
# ::lemmas ["what", "a", "time", "to", "be", "alive"]
(c7-2 / time
      :time-of (c7-1 / live-01)
      :degree (c7-0 / so))

# ::snt Take my Money!!
# ::tokens ["Take", "my", "Money", "!", "!"]
# ::lemmas ["take", "my", "money", "!", "!"]
(c8-3 / take-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-1 / money
                  :poss (c8-2 / i))
      :mode imperative)

# ::snt apik na hahahaha
# ::tokens ["apik", "na", "hahahaha"]
# ::lemmas ["apik", "na", "hahahaha"]
(c9-0 / aha
      :mode expressive)

# ::snt I like how this is more life size than the Dinos in the movie
# ::tokens ["I", "like", "how", "this", "is", "more", "life", "size", "than", "the", "Dinos", "in", "the", "movie"]
# ::lemmas ["i", "like", "how", "this", "be", "more", "life", "size", "than", "the", "Dinos", "in", "the", "movie"]
(c10-4 / like-01
       :ARG0 (c10-6 / i)
       :ARG1 (c10-3 / have-degree-91
                    :ARG1 (c10-7 / this)
                    :ARG2 (c10-2 / size
                                 :mod (c10-9 / life))
                    :ARG3 (c10-1 / more)
                    :ARG4 (c10-0 / size
                                 :mod (c10-8 / dinosaur)
                                 :location (c10-5 / movie))))

# ::snt AL MENOS CUATRO
# ::tokens ["AL", "MENOS", "CUATRO"]
# ::lemmas ["AL", "MENOS", "CUATRO"]
(c12-2 / menos-cuatro
       :mod (c12-0 / regional-group
                   :name (c12-1 / name
                                :op1 "Al"
                                :op2 "Menos")))

# ::snt Oh my word. This is year old mes worst nightmare. And current mes dream
# ::tokens ["Oh", "my", "word", ".", "This", "is", "year", "old", "mes", "worst", "nightmare", ".", "And", "current", "mes", "dream"]
# ::lemmas ["oh", "my", "word", ".", "this", "be", "year", "old", "me", "bad", "nightmare", ".", "and", "current", "me", "dream"]
(c13-4 / multi-sentence
       :snt1 (c13-10 / word-01
                     :ARG0 (c13-12 / i)
                     :mod (c13-0 / oh
                                 :mode expressive))
       :snt2 (c13-3 / nightmare
                    :domain (c13-13 / this)
                    :poss (c13-7 / person
                                 :name (c13-6 / name
                                              :op1 "Mes")
                                 :age (c13-15 / temporal-quantity
                                              :unit (c13-2 / year)
                                              :quant 1))
                    :ARG1-of (c13-8 / have-degree-91
                                    :ARG2 (c13-1 / bad-07
                                                 :ARG1 c13-3)
                                    :ARG3 (c13-9 / most)))
       :snt3 (c13-5 / and
                    :op2 (c13-14 / dream-01
                                 :ARG0 c13-7
                                 :time (c13-11 / current))))

# ::snt cuantos?
# ::tokens ["cuantos", "?"]
# ::lemmas ["cuanto", "?"]
(c14-0 / cuantos
       :polarity (c14-1 / amr-unknown))

# ::snt no ma esta bien chingon
# ::tokens ["no", "ma", "esta", "bien", "chingon"]
# ::lemmas ["no", "ma", "esta", "bien", "chingon"]
(c15-2 / multi-sentence
       :snt1 (c15-1 / no)
       :snt2 (c15-3 / say-01
                    :ARG0 (c15-5 / i)
                    :ARG1 (c15-4 / come-on-25
                                 :ARG1 (c15-0 / you
                                              :ARG2-of c15-3)
                                 :mode imperative)))

# ::snt Hola en Espaa dnd lo podemos comprar
# ::tokens ["Hola", "en", "Espaa", "dnd", "lo", "podemos", "comprar"]
# ::lemmas ["Hola", "en", "Espaa", "dnd", "lo", "podemos", "comprar"]
(c16-2 / have-concession-91
       :ARG1 (c16-3 / possible-01
                    :ARG1 (c16-4 / comprar-01
                                 :ARG0 (c16-0 / you)))
       :ARG2 (c16-5 / hola
                    :location (c16-6 / country
                                     :name (c16-1 / name
                                                  :op1 "Spain"))))

# ::snt : free news Update informateion backstage newsdownlaodwatch free movies &amp; download free hd online also torrent link available free update news on
# ::tokens [":", "free", "news", "Update", "informateion", "backstage", "newsdownlaodwatch", "free", "movies", "&", "amp", ";", "download", "free", "hd", "online", "also", "torrent", "link", "available", "free", "update", "news", "on"]
# ::lemmas [":", "free", "news", "Update", "informateion", "backstage", "newsdownlaodwatch", "free", "movie", "&", "amp", ";", "download", "free", "hd", "online", "also", "torrent", "link", "available", "free", "update", "news", "on"]
(c17-9 / multi-sentence
       :snt1 (c17-14 / update-02
                     :ARG2 (c17-16 / news)
                     :ARG1-of (c17-15 / free-03)
                     :topic (c17-21 / informateion
                                    :location (c17-8 / backstage)))
       :snt2 (c17-6 / and
                    :op1 (c17-22 / downlaodwatch-00
                                 :ARG1 (c17-3 / movie
                                              :ARG1-of (c17-18 / free-03)))
                    :op2 (c17-13 / movie
                                 :name (c17-10 / name
                                               :op1 "&amp")))
       :snt3 (c17-12 / download-01
                     :ARG0 (c17-2 / you)
                     :ARG1 (c17-17 / product
                                   :name (c17-19 / name
                                                 :op1 "Hd")
                                   :ARG1-of (c17-20 / free-03))
                     :medium (c17-1 / online)
                     :mode imperative)
       :snt4 (c17-0 / link
                    :mod (c17-7 / torrent)
                    :ARG2-of (c17-5 / available-02)
                    :mod (c17-4 / also)
                    :mod (c17-11 / update-02)))

# ::snt Where can I get one
# ::tokens ["Where", "can", "I", "get", "one"]
# ::lemmas ["where", "can", "i", "get", "one"]
(c18-1 / possible-01
       :ARG1 (c18-4 / get-01
                    :ARG0 (c18-2 / i)
                    :ARG1 (c18-0 / one)
                    :location (c18-3 / amr-unknown)))

# ::snt Ouais t'as vu ! a doit coter une blinde aussi
# ::tokens ["Ouais", "t'as", "vu", "!", "a", "doit", "coter", "une", "blinde", "aussi"]
# ::lemmas ["Ouais", "t'as", "vu", "!", "a", "doit", "coter", "une", "blinde", "aussi"]
(c21-0 / multi-sentence
       :snt1 (c21-2 / have-polarity-91
                    :ARG2 -
                    :mode expressive)
       :snt2 (c21-5 / doit
                    :ARG0-of (c21-4 / cause-01
                                    :ARG1 (c21-7 / coter-00
                                                 :ARG0 (c21-3 / person
                                                              :name (c21-1 / name
                                                                           :op1 "Aussi"))
                                                 :ARG1 (c21-6 / une)))
                    :mode expressive))

# ::snt Woow la complexit du truc
# ::tokens ["Woow", "la", "complexit", "du", "truc"]
# ::lemmas ["Woow", "la", "complexit", "du", "truc"]
(c22-0 / du
       :mod (c22-2 / wow
                   :mode expressive)
       :mod (c22-1 / complexit))

# ::snt Oh lord
# ::tokens ["Oh", "lord"]
# ::lemmas ["oh", "lord"]
(c23-1 / lord
       :mod (c23-0 / oh))

# ::snt i need this to scare people
# ::tokens ["i", "need", "this", "to", "scare", "people"]
# ::lemmas ["i", "need", "this", "to", "scare", "people"]
(c24-0 / need-01
       :ARG0 (c24-3 / i)
       :ARG1 (c24-4 / this)
       :purpose (c24-1 / scare-01
                       :ARG0 c24-4
                       :ARG1 (c24-2 / person)))

# ::snt i need this !! xD
# ::tokens ["i", "need", "this", "!", "!", "xD"]
# ::lemmas ["i", "need", "this", "!", "!", "xd"]
(c25-1 / need-01
       :ARG0 (c25-2 / i)
       :ARG1 (c25-3 / this)
       :mod (c25-0 / emoticon
                   :value "xD")
       :mode expressive)

# ::snt This better be coming out globally (especially down under!). I NEED one!!
# ::tokens ["This", "better", "be", "coming", "out", "globally", "(", "especially", "down", "under", "!", ")", ".", "I", "NEED", "one", "!", "!"]
# ::lemmas ["this", "well", "be", "come", "out", "globally", "(", "especially", "down", "under", "!", ")", ".", "i", "NEED", "one", "!", "!"]
(c26-1 / multi-sentence
       :snt1 (c26-3 / have-degree-91
                    :ARG1 (c26-5 / come-out-09
                                 :ARG1 (c26-7 / this)
                                 :manner (c26-8 / globe))
                    :ARG2 (c26-6 / good-02
                                 :ARG1 c26-5)
                    :ARG3 (c26-4 / more))
       :snt2 (c26-2 / need-01
                    :ARG0 (c26-9 / i)
                    :ARG1 (c26-0 / one)))

# ::snt Yes human, pretend you control lizardkind, not other way around
# ::tokens ["Yes", "human", ",", "pretend", "you", "control", "lizardkind", ",", "not", "other", "way", "around"]
# ::lemmas ["yes", "human", ",", "pretend", "you", "control", "lizardkind", ",", "not", "other", "way", "around"]
(c27-2 / say-01
       :ARG0 (c27-9 / i)
       :ARG1 (c27-6 / contrast-01
                    :ARG1 (c27-4 / pretend-01
                                 :ARG0 (c27-3 / human)
                                 :ARG1 (c27-11 / control-01
                                               :ARG0 c27-3
                                               :ARG1 (c27-1 / person
                                                            :mod (c27-5 / lizardkind)))
                                 :mode imperative)
                    :ARG2 (c27-8 / control-01
                                 :ARG0 c27-3
                                 :ARG1 c27-1
                                 :mod (c27-7 / way
                                             :mod (c27-0 / other)
                                             :mod (c27-10 / around))
                                 :polarity -))
       :ARG2 c27-3)

# ::snt build in amazon alexa
# ::tokens ["build", "in", "amazon", "alexa"]
# ::lemmas ["build", "in", "amazon", "alexa"]
(c29-1 / build-01
       :ARG0 (c29-2 / you)
       :location (c29-0 / company
                        :name (c29-3 / name
                                     :op1 "Amazon"
                                     :op2 "Alexa"))
       :mode imperative)

# ::snt This is so adorable omg!
# ::tokens ["This", "is", "so", "adorable", "omg", "!"]
# ::lemmas ["this", "be", "so", "adorable", "omg", "!"]
(c32-0 / cute
       :degree (c32-3 / so)
       :domain (c32-2 / this)
       :mod (c32-1 / oh-my-god
                   :mode expressive))

# ::snt Shut upppp thats the cutest ever
# ::tokens ["Shut", "upppp", "that", "s", "the", "cutest", "ever"]
# ::lemmas ["shut", "upppp", "that", "s", "the", "cut", "ever"]
(c33-2 / shut-up-06
       :ARG0 (c33-0 / you
                    :ARG1-of c33-2)
       :mod (c33-7 / upppp
                   :mode expressive)
       :ARG1-of (c33-4 / have-degree-91
                       :ARG2 (c33-5 / cut-02
                                    :ARG1 (c33-6 / that)
                                    :ARG3 (c33-1 / most)
                                    :ARG5 (c33-3 / ever)))
       :mode imperative)

# ::snt become your idle
# ::tokens ["become", "your", "idle"]
# ::lemmas ["become", "your", "idle"]
(c35-0 / become-01
       :ARG1 (c35-1 / you)
       :ARG2 (c35-2 / idle-01
                    :ARG1 c35-1))

# ::snt OMG I NEED ONE!
# ::tokens ["OMG", "I", "NEED", "ONE", "!"]
# ::lemmas ["OMG", "i", "NEED", "one", "!"]
(c36-2 / need-01
       :ARG0 (c36-3 / i)
       :ARG1 (c36-1 / one)
       :mod (c36-0 / oh-my-god
                   :mode expressive))

# ::snt THAT'S SO AWESOME!!! I want my own Blue, It looks like fun.
# ::tokens ["THAT", "'S", "SO", "AWESOME", "!", "!", "!", "I", "want", "my", "own", "Blue", ",", "It", "looks", "like", "fun", "."]
# ::lemmas ["that", "be", "SO", "AWESOME", "!", "!", "!", "i", "want", "my", "own", "Blue", ",", "it", "look", "like", "fun", "."]
(c37-1 / multi-sentence
       :snt1 (c37-4 / awesome-03
                    :ARG1 (c37-8 / that)
                    :degree (c37-3 / so))
       :snt2 (c37-7 / and
                    :op1 (c37-6 / want-01
                                :ARG0 (c37-9 / i)
                                :ARG1 (c37-10 / thing
                                              :name (c37-2 / name
                                                           :op1 "Blue")
                                              :poss c37-9))
                    :op2 (c37-5 / look-02
                                :ARG0 c37-10
                                :ARG1 (c37-0 / fun-01))))

# ::snt No manches..tomen mi dinero donde lo venden en Mxico!!
# ::tokens ["No", "manches", "..", "tomen", "mi", "dinero", "donde", "lo", "venden", "en", "Mxico", "!", "!"]
# ::lemmas ["no", "manche", "..", "toman", "mi", "dinero", "donde", "lo", "venden", "en", "Mxico", "!", "!"]
(c39-1 / multi-sentence
       :snt1 (c39-0 / no)
       :snt2 (c39-3 / have-03
                    :ARG0 (c39-7 / i)
                    :ARG1 (c39-8 / dinero
                                 :poss c39-7)
                    :ARG1-of (c39-6 / cause-01
                                    :ARG0 (c39-2 / venden-01
                                                 :ARG0 (c39-4 / lo)
                                                 :ARG1 (c39-9 / country
                                                              :name (c39-5 / name
                                                                           :op1 "Mexico"))))
                    :polarity -))

# ::snt GIVE IT TO ME NOW
# ::tokens ["GIVE", "IT", "TO", "ME", "NOW"]
# ::lemmas ["give", "IT", "to", "i", "now"]
(c40-4 / give-01
       :ARG0 (c40-0 / you)
       :ARG1 (c40-3 / it)
       :ARG2 (c40-2 / i)
       :time (c40-1 / now)
       :mode imperative)

# ::snt I want one
# ::tokens ["I", "want", "one"]
# ::lemmas ["i", "want", "one"]
(c41-0 / want-01
       :ARG0 (c41-1 / i)
       :ARG1 (c41-2 / one))

# ::snt Ridiculous
# ::tokens ["Ridiculous"]
# ::lemmas ["ridiculous"]
(c42-0 / ridiculous-02)

# ::snt can it find "sarah connor"? XD
# ::tokens ["can", "it", "find", "\"", "sarah", "connor", "\"", "?", "XD"]
# ::lemmas ["can", "it", "find", "\"", "sarah", "connor", "\"", "?", "XD"]
(c43-2 / multi-sentence
       :snt1 (c43-6 / possible-01
                    :ARG1 (c43-0 / find-01
                                 :ARG0 (c43-7 / it)
                                 :ARG1 (c43-3 / person
                                              :name (c43-4 / name
                                                           :op1 "Sarah"
                                                           :op2 "Connor")))
                    :polarity (c43-8 / amr-unknown)
                    :polarity (c43-9 / amr-unknown))
       :snt2 (c43-5 / have-mod-91
                    :ARG2 (c43-1 / XD)))

# ::snt Guessing its so that its hidden and not a hole in its rib cage
# ::tokens ["Guessing", "its", "so", "that", "its", "hidden", "and", "not", "a", "hole", "in", "its", "rib", "cage"]
# ::lemmas ["guess", "its", "so", "that", "its", "hidden", "and", "not", "a", "hole", "in", "its", "rib", "cage"]
(c45-6 / guess-01
       :ARG1 (c45-2 / cause-01
                    :ARG0 (c45-5 / and
                                 :op1 (c45-1 / hide-01
                                             :ARG1 (c45-4 / it))
                                 :op2 (c45-3 / hole
                                             :location (c45-7 / cage
                                                              :mod (c45-0 / rib)
                                                              :part-of c45-4)
                                             :polarity -))
                    :ARG1 c45-4))

# ::snt Clever toy! Also I know what they did when putting the ports on the butthole, put a USB and charger up her ass
# ::tokens ["Clever", "toy", "!", "Also", "I", "know", "what", "they", "did", "when", "putting", "the", "ports", "on", "the", "butthole", ",", "put", "a", "USB", "and", "charger", "up", "her", "ass"]
# ::lemmas ["clever", "toy", "!", "also", "i", "know", "what", "they", "do", "when", "put", "the", "port", "on", "the", "butthole", ",", "put", "a", "usb", "and", "charger", "up", "her", "ass"]
(c47-13 / multi-sentence
        :snt1 (c47-10 / toy
                      :ARG1-of (c47-15 / Clever-03))
        :snt2 (c47-5 / know-01
                     :ARG0 (c47-20 / i)
                     :ARG1 (c47-16 / thing
                                   :ARG1-of (c47-22 / do-02
                                                    :ARG0 (c47-21 / they)
                                                    :time (c47-19 / put-01
                                                                  :ARG0 c47-21
                                                                  :ARG1 (c47-14 / port)
                                                                  :ARG2 (c47-12 / butthole)))
                                   :ARG1-of (c47-4 / mean-01
                                                   :ARG2 c47-19
                                                   :ARG0 c47-21
                                                   :ARG1 (c47-8 / and
                                                                :op1 (c47-1 / thing
                                                                            :ARG0-of (c47-11 / charge-03
                                                                                             :mod (c47-3 / product
                                                                                                         :name (c47-18 / name
                                                                                                                       :op1 "USB"))))
                                                                :op2 (c47-9 / thing
                                                                            :ARG0-of (c47-2 / charge-01)))
                                                   :ARG2 (c47-17 / up
                                                                 :op1 (c47-7 / ass
                                                                             :part-of (c47-0 / she))))))
        :mod (c47-6 / also))

# ::snt I just sent him a crap load more lol
# ::tokens ["I", "just", "sent", "him", "a", "crap", "load", "more", "lol"]
# ::lemmas ["i", "just", "send", "he", "a", "crap", "load", "more", "lol"]
(c48-1 / send-01
       :ARG0 (c48-7 / i)
       :ARG1 (c48-3 / load
                    :mod (c48-5 / crap)
                    :quant (c48-0 / more))
       :ARG2 (c48-2 / he)
       :mod (c48-6 / just)
       :ARG2-of (c48-8 / laugh-01
                       :ARG0 c48-7
                       :manner (c48-4 / loud)
                       :mode expressive))

# ::snt I'll do my best.
# ::tokens ["I", "'ll", "do", "my", "best", "."]
# ::lemmas ["i", "'ll", "do", "my", "good", "."]
(c49-1 / have-degree-91
       :ARG1 (c49-4 / do-02
                    :ARG0 (c49-2 / i))
       :ARG2 (c49-3 / good-03
                    :ARG1 c49-2)
       :ARG3 (c49-0 / most))

# ::snt All respect to Harrison Ford, I love the guy, but the series needs new life, new blood, and Chris Pratt has just the charisma and heroic charm indicative of the character.
# ::tokens ["All", "respect", "to", "Harrison", "Ford", ",", "I", "love", "the", "guy", ",", "but", "the", "series", "needs", "new", "life", ",", "new", "blood", ",", "and", "Chris", "Pratt", "has", "just", "the", "charisma", "and", "heroic", "charm", "indicative", "of", "the", "character", "."]
# ::lemmas ["all", "respect", "to", "Harrison", "Ford", ",", "i", "love", "the", "guy", ",", "but", "the", "series", "need", "new", "life", ",", "new", "blood", ",", "and", "Chris", "Pratt", "have", "just", "the", "charisma", "and", "heroic", "charm", "indicative", "of", "the", "character", "."]
(c50-12 / contrast-01
        :ARG1 (c50-16 / respect-01
                      :ARG0 (c50-19 / i)
                      :ARG1 (c50-17 / person
                                    :name (c50-15 / name
                                                  :op1 "Harrison"
                                                  :op2 "Ford"))
                      :mod (c50-8 / all))
        :ARG2 (c50-7 / and
                     :op1 (c50-11 / need-01
                                  :ARG0 (c50-0 / series)
                                  :ARG1 (c50-5 / and
                                               :op1 (c50-1 / life
                                                           :ARG1-of (c50-18 / new-01))
                                               :op2 (c50-10 / blood
                                                            :ARG1-of (c50-13 / new-01))))
                     :op2 (c50-3 / indicate-01
                                 :ARG0 (c50-20 / and
                                               :op1 (c50-9 / charisma)
                                               :op2 (c50-2 / charm
                                                           :mod (c50-4 / hero))
                                               :mod (c50-6 / just))
                                 :ARG1 (c50-14 / character))))
