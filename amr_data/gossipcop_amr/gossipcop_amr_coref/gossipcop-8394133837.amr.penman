# ::snt bucket list must include hot, hip-breaking sex with
# ::tokens ["bucket", "list", "must", "include", "hot", ",", "hip", "-", "breaking", "sex", "with"]
# ::lemmas ["bucket", "list", "must", "include", "hot", ",", "hip", "-", "break", "sex", "with"]
(c1-0 / obligate-01
      :ARG2 (c1-8 / include-01
                  :ARG1 (c1-2 / sex-01
                              :ARG1 (c1-4 / person)
                              :ARG1-of (c1-3 / hot-05)
                              :ARG0-of (c1-1 / break-01
                                             :ARG1 (c1-7 / hip)))
                  :ARG2 (c1-5 / list
                              :mod (c1-6 / bucket))))

# ::snt os= other stuff which is not that important
# ::tokens ["os=", "other", "stuff", "which", "is", "not", "that", "important"]
# ::lemmas ["os=", "other", "stuff", "which", "be", "not", "that", "important"]
(c2-2 / equal-01
      :ARG1 (c2-5 / emoticon
                  :value "os")
      :ARG2 (c2-1 / stuff
                  :mod (c2-0 / other)
                  :ARG1-of (c2-3 / important-01
                                 :degree (c2-4 / that)
                                 :polarity -)))

# ::snt GG = Golden Girls
# ::tokens ["GG", "=", "Golden", "Girls"]
# ::lemmas ["gg", "=", "golden", "girl"]
(c3-2 / equal-01
      :ARG1 (c3-3 / person
                  :name (c3-1 / name
                              :op1 "GG"))
      :ARG2 (c3-0 / girl))

# ::snt : Clear your schedule Oct -Nov and come party in Vegas with my friends and I for my st
# ::tokens [":", "Clear", "your", "schedule", "Oct", "-Nov", "and", "come", "party", "in", "Vegas", "with", "my", "friends", "and", "I", "for", "my", "st"]
# ::lemmas [":", "clear", "your", "schedule", "Oct", "-nov", "and", "come", "party", "in", "Vegas", "with", "my", "friend", "and", "i", "for", "my", "st"]
(c4-12 / and
       :op1 (c4-8 / clear-01
                  :ARG0 (c4-1 / you)
                  :ARG1 (c4-4 / schedule-01
                              :ARG0 c4-1
                              :ARG1 (c4-11 / and
                                           :op1 (c4-14 / date-entity
                                                       :month 10)
                                           :op2 (c4-9 / date-entity
                                                      :month 11)))
                  :mode imperative)
       :op2 (c4-7 / party-01
                  :ARG0 c4-1
                  :location (c4-15 / city
                                   :name (c4-2 / name
                                               :op1 "Vegas"))
                  :accompanier (c4-10 / and
                                      :op1 (c4-3 / person
                                                 :ARG0-of (c4-6 / have-rel-role-91
                                                                :ARG1 (c4-13 / i)
                                                                :ARG2 (c4-0 / friend)))
                                      :op2 c4-13)
                  :purpose (c4-5 / event
                                 :mod c4-13)
                  :mode imperative))

# ::snt You are one lucky guy
# ::tokens ["You", "are", "one", "lucky", "guy"]
# ::lemmas ["you", "be", "one", "lucky", "guy"]
(c5-0 / guy
      :mod (c5-2 / lucky)
      :domain (c5-1 / you)
      :quant 1)

# ::snt Hope you like sloppy seconds. We hooked up yesterday.
# ::tokens ["Hope", "you", "like", "sloppy", "seconds", ".", "We", "hooked", "up", "yesterday", "."]
# ::lemmas ["hope", "you", "like", "sloppy", "second", ".", "we", "hook", "up", "yesterday", "."]
(c6-2 / multi-sentence
      :snt1 (c6-4 / hope-01
                  :ARG0 (c6-8 / i)
                  :ARG1 (c6-5 / like-01
                              :ARG0 (c6-1 / you)
                              :ARG1 (c6-3 / second
                                          :mod (c6-0 / sloppy))))
      :snt2 (c6-7 / hook-up-02
                  :ARG0 (c6-6 / we)
                  :time (c6-9 / yesterday)))

# ::snt you can add that to your bucketlist at !
# ::tokens ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
# ::lemmas ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
(c7-3 / possible-01
      :ARG1 (c7-2 / add-02
                  :ARG0 (c7-1 / you)
                  :ARG1 (c7-4 / that)
                  :ARG2 (c7-0 / bucketlist
                              :poss c7-1))
      :mode expressive)

# ::snt what a wonderful and inspiring story I hope she gets to meet
# ::tokens ["what", "a", "wonderful", "and", "inspiring", "story", "I", "hope", "she", "gets", "to", "meet"]
# ::lemmas ["what", "a", "wonderful", "and", "inspiring", "story", "i", "hope", "she", "get", "to", "meet"]
(c8-2 / story
      :ARG1-of (c8-5 / wonderful-03)
      :ARG0-of (c8-6 / inspire-01)
      :ARG1-of (c8-1 / meet-02
                     :ARG0 (c8-0 / she)
                     :ARG1-of (c8-7 / get-02
                                    :ARG0 c8-0
                                    :ARG1-of (c8-4 / hope-01
                                                   :ARG0 (c8-3 / i)))))

# ::snt can I please be there when you get it?!
# ::tokens ["can", "I", "please", "be", "there", "when", "you", "get", "it", "?", "!"]
# ::lemmas ["can", "i", "please", "be", "there", "when", "you", "get", "it", "?", "!"]
(c9-4 / possible-01
      :polarity (c9-3 / amr-unknown)
      :ARG1 (c9-0 / be-located-at-91
                  :ARG1 (c9-5 / i)
                  :ARG2 (c9-6 / there)
                  :time (c9-7 / get-01
                              :ARG0 (c9-1 / you)
                              :ARG1 (c9-2 / it)))
      :polite +)

# ::snt Happy birthday, Betty!
# ::tokens ["Happy", "birthday", ",", "Betty", "!"]
# ::lemmas ["happy", "birthday", ",", "Betty", "!"]
(c10-2 / say-01
       :ARG1 (c10-3 / happy-01
                    :ARG1 (c10-0 / birthday
                                 :poss (c10-4 / person
                                              :name (c10-1 / name
                                                           :op1 "Betty")
                                              :ARG2-of c10-2))))

# ::snt nope I saw her on the Telly
# ::tokens ["nope", "I", "saw", "her", "on", "the", "Telly"]
# ::lemmas ["nope", "i", "see", "she", "on", "the", "Telly"]
(c12-3 / see-01
       :ARG0 (c12-5 / i)
       :ARG1 (c12-0 / she)
       :location (c12-1 / boat
                        :name (c12-2 / name
                                     :op1 "Telly"))
       :mod (c12-4 / nope))

# ::snt rando?
# ::tokens ["rando", "?"]
# ::lemmas ["rando", "?"]
(c13-0 / rando
       :polarity (c13-1 / amr-unknown))

# ::snt LOVE that woman! Her show is the best!
# ::tokens ["LOVE", "that", "woman", "!", "Her", "show", "is", "the", "best", "!"]
# ::lemmas ["love", "that", "woman", "!", "her", "show", "be", "the", "good", "!"]
(c14-1 / multi-sentence
       :snt1 (c14-4 / love-01
                    :ARG0 (c14-7 / i)
                    :ARG1 (c14-6 / woman
                                 :mod (c14-8 / that))
                    :mode expressive)
       :snt2 (c14-3 / have-degree-91
                    :ARG1 (c14-2 / show-04
                                 :ARG0 (c14-0 / she))
                    :ARG2 (c14-9 / good-02
                                 :ARG1 c14-2)
                    :ARG3 (c14-5 / most)))

# ::snt you can add that to your bucketlist at !
# ::tokens ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
# ::lemmas ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
(c15-3 / possible-01
       :ARG1 (c15-2 / add-02
                    :ARG0 (c15-1 / you)
                    :ARG1 (c15-4 / that)
                    :ARG2 (c15-0 / bucketlist
                                 :poss c15-1))
       :mode expressive)

# ::snt Yeah,that's what i said!she still spunky at !
# ::tokens ["Yeah", ",", "that", "'s", "what", "i", "said!she", "still", "spunky", "at", "!"]
# ::lemmas ["yeah", ",", "that", "be", "what", "i", "said!she", "still", "spunky", "at", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-3 / say-01
                    :ARG0 (c16-5 / i)
                    :ARG1 (c16-6 / that)
                    :mod (c16-1 / yeah
                                :mode expressive))
       :snt2 (c16-0 / spinky
                    :domain (c16-7 / she)
                    :mod (c16-4 / still)))

# ::snt She's still is strong for a or year old lady!good going betty white!
# ::tokens ["She", "'s", "still", "is", "strong", "for", "a", "or", "year", "old", "lady!good", "going", "betty", "white", "!"]
# ::lemmas ["she", "be", "still", "be", "strong", "for", "a", "or", "year", "old", "lady!good", "go", "betty", "white", "!"]
(c17-4 / multi-sentence
       :snt1 (c17-5 / strong-02
                    :ARG1 (c17-0 / she)
                    :mod (c17-12 / still)
                    :beneficiary (c17-6 / lady
                                        :age (c17-1 / or
                                                    :op1 (c17-9 / temporal-quantity
                                                                :unit (c17-3 / year)
                                                                :quant 1)
                                                    :op2 (c17-11 / temporal-quantity
                                                                 :unit c17-3
                                                                 :quant 1))))
       :snt2 (c17-10 / good-02
                     :ARG1 (c17-8 / go-01
                                  :ARG1 c17-0)
                     :ARG4 (c17-7 / white-02
                                  :ARG1 c17-0
                                  :mod (c17-2 / betty))
                     :mode expressive))

# ::snt That's awesome! I wish I could go with you! I want to see her too!
# ::tokens ["That", "'s", "awesome", "!", "I", "wish", "I", "could", "go", "with", "you", "!", "I", "want", "to", "see", "her", "too", "!"]
# ::lemmas ["that", "be", "awesome", "!", "i", "wish", "i", "could", "go", "with", "you", "!", "i", "want", "to", "see", "she", "too", "!"]
(c18-2 / multi-sentence
       :snt1 (c18-5 / awesome-03
                    :ARG0 (c18-10 / that))
       :snt2 (c18-8 / wish-01
                    :ARG0 (c18-9 / i)
                    :ARG1 (c18-6 / possible-01
                                 :ARG1 (c18-11 / go-02
                                               :ARG0 c18-9
                                               :accompanier (c18-1 / you))))
       :snt3 (c18-7 / want-01
                    :ARG0 (c18-4 / i)
                    :ARG1 (c18-3 / see-01
                                 :ARG0 c18-4
                                 :ARG1 (c18-0 / she)
                                 :mod (c18-12 / too))))

# ::snt Cheers to her!
# ::tokens ["Cheers", "to", "her", "!"]
# ::lemmas ["cheer", "to", "she", "!"]
(c19-0 / cheer-01
       :ARG1 (c19-1 / she)
       :mode expressive)

# ::snt damn straight.
# ::tokens ["damn", "straight", "."]
# ::lemmas ["damn", "straight", "."]
(c20-1 / straight-04
       :ARG1 (c20-0 / damn-01))

# ::snt Vote for too! thanksss
# ::tokens ["Vote", "for", "too", "!", "thanksss"]
# ::lemmas ["vote", "for", "too", "!", "thanksss"]
(c21-1 / vote-01
       :ARG0 (c21-0 / you)
       :mod (c21-2 / too)
       :ARG2-of (c21-4 / thank-01
                       :ARG0 (c21-3 / i)
                       :ARG1 c21-0)
       :mode imperative)

# ::snt you can add that to your bucketlist at !
# ::tokens ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
# ::lemmas ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
(c22-3 / possible-01
       :ARG1 (c22-2 / add-02
                    :ARG0 (c22-1 / you)
                    :ARG1 (c22-4 / that)
                    :ARG2 (c22-0 / bucketlist
                                 :poss c22-1))
       :mode expressive)

# ::snt you can add that to your bucketlist at !
# ::tokens ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
# ::lemmas ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
(c23-3 / possible-01
       :ARG1 (c23-2 / add-02
                    :ARG0 (c23-1 / you)
                    :ARG1 (c23-4 / that)
                    :ARG2 (c23-0 / bucketlist
                                 :poss c23-1))
       :mode expressive)

# ::snt The Artemis Film Festival is way better should go there and have a ball
# ::tokens ["The", "Artemis", "Film", "Festival", "is", "way", "better", "should", "go", "there", "and", "have", "a", "ball"]
# ::lemmas ["The", "Artemis", "Film", "Festival", "be", "way", "well", "should", "go", "there", "and", "have", "a", "ball"]
(c24-4 / recommend-01
       :ARG1 (c24-10 / and
                     :op1 (c24-11 / go-02
                                  :ARG4 (c24-0 / festival
                                               :name (c24-2 / name
                                                            :op1 "Artemis"
                                                            :op2 "Film"
                                                            :op3 "Festival"))
                                  :ARG4 (c24-8 / there))
                     :op2 (c24-5 / have-06
                                 :ARG0 c24-0
                                 :ARG1 (c24-1 / ball)))
       :ARG2 c24-0
       :ARG1-of (c24-7 / have-degree-91
                       :ARG2 (c24-9 / good-02
                                    :ARG1 c24-0)
                       :ARG3 (c24-3 / more
                                    :quant (c24-6 / way))))

# ::snt Yep, he does indeed.
# ::tokens ["Yep", ",", "he", "does", "indeed", "."]
# ::lemmas ["yep", ",", "he", "do", "indeed", "."]
(c25-0 / do-02
       :ARG0 (c25-1 / he)
       :mod (c25-2 / indeed))

# ::snt Yeah it's to meet Robert Redford he runs the Sundance film festival in park city Utah
# ::tokens ["Yeah", "it", "'s", "to", "meet", "Robert", "Redford", "he", "runs", "the", "Sundance", "film", "festival", "in", "park", "city", "Utah"]
# ::lemmas ["yeah", "it", "be", "to", "meet", "Robert", "Redford", "he", "run", "the", "Sundance", "film", "festival", "in", "park", "city", "Utah"]
(c26-3 / meet-02
       :ARG1 (c26-7 / person
                    :name (c26-2 / name
                                 :op1 "Robert"
                                 :op2 "Redford")
                    :ARG0-of (c26-5 / run-01
                                    :ARG1 (c26-0 / festival
                                                 :name (c26-6 / name
                                                              :op1 "Sundance")
                                                 :mod (c26-8 / film)
                                                 :location (c26-10 / city
                                                                   :name (c26-9 / name
                                                                                :op1 "Utah")
                                                                   :location (c26-4 / park)))))
       :mod (c26-1 / yeah
                   :mode expressive))

# ::snt great interview by my but the lady was laughing &amp; clapping her hands WAY to much!
# ::tokens ["great", "interview", "by", "my", "but", "the", "lady", "was", "laughing", "&", "amp", ";", "clapping", "her", "hands", "WAY", "to", "much", "!"]
# ::lemmas ["great", "interview", "by", "my", "but", "the", "lady", "be", "laugh", "&", "amp", ";", "clap", "her", "hand", "WAY", "to", "much", "!"]
(c27-4 / contrast-01
       :ARG1 (c27-6 / interview-01
                    :ARG0 (c27-1 / i
                                 :ARG1-of c27-6)
                    :mod (c27-8 / great))
       :ARG2 (c27-7 / and
                    :op1 (c27-3 / laugh-01
                                :ARG0 (c27-9 / lady
                                             :part (c27-2 / hand)))
                    :op2 (c27-10 / clap-01
                                 :ARG0 c27-9
                                 :ARG1 c27-2
                                 :quant (c27-0 / much
                                               :degree (c27-5 / way)))))

# ::snt you can add that to your bucketlist at !
# ::tokens ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
# ::lemmas ["you", "can", "add", "that", "to", "your", "bucketlist", "at", "!"]
(c28-3 / possible-01
       :ARG1 (c28-2 / add-02
                    :ARG0 (c28-1 / you)
                    :ARG1 (c28-4 / that)
                    :ARG2 (c28-0 / bucketlist
                                 :poss c28-1))
       :mode expressive)

# ::snt Two icons!! Love this
# ::tokens ["Two", "icons", "!", "!", "Love", "this"]
# ::lemmas ["Two", "icon", "!", "!", "love", "this"]
(c29-1 / multi-sentence
       :snt1 (c29-2 / icon
                    :quant 2)
       :snt2 (c29-0 / love-01
                    :ARG1 (c29-3 / this)))

# ::snt Hi Ruby!
# ::tokens ["Hi", "Ruby", "!"]
# ::lemmas ["hi", "Ruby", "!"]
(c30-3 / say-01
       :ARG1 (c30-1 / hi)
       :ARG2 (c30-2 / person
                    :name (c30-0 / name
                                 :op1 "Ruby")))

# ::snt hi Ruby!
# ::tokens ["hi", "Ruby", "!"]
# ::lemmas ["hi", "Ruby", "!"]
(c31-3 / say-01
       :ARG1 (c31-1 / hi)
       :ARG2 (c31-2 / person
                    :name (c31-0 / name
                                 :op1 "Rao")))

# ::snt These allegations have blown Spacey's "house of cards" down.
# ::tokens ["These", "allegations", "have", "blown", "Spacey", "'s", "\"", "house", "of", "cards", "\"", "down", "."]
# ::lemmas ["these", "allegation", "have", "blow", "Spacey", "'s", "\"", "house", "of", "card", "\"", "down", "."]
(c32-0 / blow-down-05
       :ARG0 (c32-2 / allege-01
                    :mod (c32-6 / this))
       :ARG1 (c32-3 / house
                    :consist-of (c32-5 / card)
                    :poss (c32-4 / person
                                 :name (c32-1 / name
                                              :op1 "Spacey"))))

# ::snt Play Chess with The Red Headed Stranger in his RV Green Room?
# ::tokens ["Play", "Chess", "with", "The", "Red", "Headed", "Stranger", "in", "his", "RV", "Green", "Room", "?"]
# ::lemmas ["Play", "Chess", "with", "The", "Red", "Headed", "Stranger", "in", "his", "RV", "Green", "Room", "?"]
(c33-6 / play-01
       :ARG0 (c33-0 / you)
       :ARG1 (c33-9 / chess)
       :ARG3 (c33-1 / music
                    :name (c33-2 / name
                                 :op1 "Red"
                                 :op2 "Headed"
                                 :op3 "Stranger"))
       :polarity (c33-10 / amr-unknown)
       :location (c33-3 / room
                        :name (c33-5 / name
                                     :op1 "Green"
                                     :op2 "Room")
                        :poss (c33-7 / he)
                        :mod (c33-4 / vehicle
                                    :name (c33-8 / name
                                                 :op1 "RV"))))

# ::snt On my List - to meet Willie Nelson and spend some time in his RV... and, uh... I forgot what else is on my Bucket List...LOL
# ::tokens ["On", "my", "List", "-", "to", "meet", "Willie", "Nelson", "and", "spend", "some", "time", "in", "his", "RV", "...", "and", ",", "uh", "...", "I", "forgot", "what", "else", "is", "on", "my", "Bucket", "List", "...", "LOL"]
# ::lemmas ["on", "my", "list", "-", "to", "meet", "Willie", "Nelson", "and", "spend", "some", "time", "in", "his", "RV", "...", "and", ",", "uh", "...", "i", "forget", "what", "else", "be", "on", "my", "Bucket", "List", "...", "LOL"]
(c34-7 / and
       :op1 (c34-6 / and
                   :op1 (c34-11 / meet-03
                                :ARG0 (c34-21 / i)
                                :ARG1 (c34-19 / person
                                              :name (c34-17 / name
                                                            :op1 "Willie"
                                                            :op2 "Nelson")))
                   :op2 (c34-0 / spend-02
                               :ARG0 c34-21
                               :ARG1 (c34-9 / time
                                            :quant (c34-3 / some))
                               :location (c34-4 / vehicle
                                                :name (c34-12 / name
                                                              :op1 "RV")
                                                :poss c34-19))
                   :prep-on (c34-14 / thing
                                    :ARG2-of (c34-2 / list-01
                                                    :ARG0 c34-21)))
       :op2 (c34-16 / forget-01
                    :ARG0 c34-21
                    :ARG1 (c34-22 / thing
                                  :mod (c34-18 / else)
                                  :prep-on (c34-1 / thing
                                                  :ARG2-of (c34-10 / list-01
                                                                   :ARG0 c34-21
                                                                   :ARG1 (c34-8 / thing
                                                                                :name (c34-20 / name
                                                                                              :op1 "B bucket")))))
                    :mod (c34-15 / uh
                                 :mode expressive)
                    :ARG2-of (c34-5 / laugh-01
                                    :ARG0 c34-21
                                    :manner (c34-13 / loud))))

# ::snt I'm laughing thinking about a diner with Paul and Betty. I'm sure it would be fun
# ::tokens ["I", "'m", "laughing", "thinking", "about", "a", "diner", "with", "Paul", "and", "Betty", ".", "I", "'m", "sure", "it", "would", "be", "fun"]
# ::lemmas ["i", "be", "laugh", "think", "about", "a", "diner", "with", "Paul", "and", "Betty", ".", "i", "be", "sure", "it", "would", "be", "fun"]
(c35-1 / multi-sentence
       :snt1 (c35-8 / laugh-01
                    :ARG0 (c35-10 / i)
                    :ARG2 (c35-11 / think-01
                                  :ARG0 c35-10
                                  :ARG1 (c35-12 / diner
                                                :accompanier (c35-5 / and
                                                                    :op1 (c35-9 / person
                                                                                :name (c35-2 / name
                                                                                             :op1 "Paul"))
                                                                    :op2 (c35-3 / person
                                                                                :name (c35-7 / name
                                                                                             :op1 "Betty"))))))
       :snt2 (c35-4 / sure-02
                    :ARG0 (c35-6 / i)
                    :ARG1 (c35-0 / fun-01
                                 :ARG1 (c35-13 / it))))

# ::snt Like your list, hope you'll make it
# ::tokens ["Like", "your", "list", ",", "hope", "you", "'ll", "make", "it"]
# ::lemmas ["like", "your", "list", ",", "hope", "you", "'ll", "make", "it"]
(c36-3 / hope-01
       :ARG0 (c36-5 / i)
       :ARG1 (c36-1 / make-18
                    :ARG0 (c36-0 / you)
                    :ARG1 (c36-4 / list-01
                                 :ARG0 c36-0))
       :ARG1-of (c36-2 / resemble-01
                       :ARG2 c36-4))

# ::snt lmao man she like done out lasted all the golden girls and everything
# ::tokens ["lmao", "man", "she", "like", "done", "out", "lasted", "all", "the", "golden", "girls", "and", "everything"]
# ::lemmas ["lmao", "man", "she", "like", "do", "out", "last", "all", "the", "golden", "girl", "and", "everything"]
(c37-0 / multi-sentence
       :snt1 (c37-4 / laugh-01
                    :ARG0 (c37-6 / i)
                    :manner (c37-10 / loud)
                    :mode expressive)
       :snt2 (c37-3 / last-01
                    :ARG1 (c37-9 / do-out-17
                                 :ARG0 (c37-1 / she)
                                 :ARG1-of (c37-5 / like-02
                                                 :ARG0 c37-1))
                    :ARG2 (c37-7 / and
                                 :op1 (c37-8 / girl
                                             :mod (c37-11 / golden)
                                             :mod (c37-12 / all))
                                 :op2 (c37-2 / everything))))

# ::snt Perhaps that was on Bradley Cooper's list!
# ::tokens ["Perhaps", "that", "was", "on", "Bradley", "Cooper", "'s", "list", "!"]
# ::lemmas ["perhaps", "that", "be", "on", "Bradley", "Cooper", "'s", "list", "!"]
(c38-3 / possible-01
       :ARG1 (c38-0 / be-located-at-91
                    :ARG1 (c38-5 / that)
                    :ARG2 (c38-4 / list
                                 :poss (c38-2 / person
                                              :name (c38-1 / name
                                                           :op1 "Bradley"
                                                           :op2 "Cooper")))))

# ::snt I miss your food. I used to eat at Blue Ginger when in the area. Yum
# ::tokens ["I", "miss", "your", "food", ".", "I", "used", "to", "eat", "at", "Blue", "Ginger", "when", "in", "the", "area", ".", "Yum"]
# ::lemmas ["i", "miss", "your", "food", ".", "i", "use", "to", "eat", "at", "Blue", "Ginger", "when", "in", "the", "area", ".", "Yum"]
(c39-3 / multi-sentence
       :snt1 (c39-7 / miss-01
                    :ARG0 (c39-9 / i)
                    :ARG1 (c39-0 / food
                                 :poss (c39-2 / you)))
       :snt2 (c39-6 / eat-01
                    :ARG0 (c39-5 / i)
                    :location (c39-8 / facility
                                     :name (c39-4 / name
                                                  :op1 "Blue"
                                                  :op2 "Ginger"))
                    :time (c39-1 / be-located-at-91
                                 :ARG1 c39-5
                                 :ARG2 (c39-10 / area))
                    :time (c39-12 / use-03))
       :snt3 (c39-11 / yum
                     :mode expressive))

# ::snt . the lovely made my day &amp; bucket list when she did an intv w/ me for &amp; she still emails me
# ::tokens [".", "the", "lovely", "made", "my", "day", "&", "amp", ";", "bucket", "list", "when", "she", "did", "an", "intv", "w/", "me", "for", "&", "amp", ";", "she", "still", "emails", "me"]
# ::lemmas [".", "the", "lovely", "make", "my", "day", "&", "amp", ";", "bucket", "list", "when", "she", "do", "an", "intv", "w/", "i", "for", "&", "amp", ";", "she", "still", "email", "i"]
(c40-2 / multi-sentence
       :snt1 (c40-6 / make-01
                    :ARG0 (c40-7 / lovely)
                    :ARG1 (c40-13 / list
                                  :mod (c40-1 / bucket))
                    :time (c40-12 / do-02
                                  :ARG0 c40-7
                                  :ARG1 (c40-9 / interview-01
                                               :ARG0 c40-7
                                               :ARG1 (c40-4 / i)
                                               :purpose (c40-10 / and
                                                                :op1 (c40-8 / day
                                                                            :poss c40-4)
                                                                :op2 (c40-11 / amp)))))
       :snt2 (c40-5 / email-01
                    :ARG0 (c40-3 / she)
                    :ARG2 (c40-14 / i)
                    :mod (c40-0 / still)))

# ::snt she's gonna walk into Jamba one of these days
# ::tokens ["she", "'s", "gon", "na", "walk", "into", "Jamba", "one", "of", "these", "days"]
# ::lemmas ["she", "be", "going", "to", "walk", "into", "Jamba", "one", "of", "these", "days"]
(c41-2 / walk-01
       :ARG0 (c41-1 / she)
       :ARG2 (c41-3 / city
                    :name (c41-0 / name
                                 :op1 "Jamba"))
       :time (c41-7 / day
                    :ARG1-of (c41-5 / include-91
                                    :ARG2 (c41-4 / day
                                                 :mod (c41-6 / this)))))

# ::snt there's still time
# ::tokens ["there", "'s", "still", "time"]
# ::lemmas ["there", "be", "still", "time"]
(c42-1 / time
       :mod (c42-0 / still))

# ::snt why
# ::tokens ["why"]
# ::lemmas ["why"]
(c43-0 / cause-01
       :ARG0 (c43-1 / amr-unknown))

# ::snt EVER!! Golden Girls gives me life!
# ::tokens ["EVER", "!", "!", "Golden", "Girls", "gives", "me", "life", "!"]
# ::lemmas ["EVER", "!", "!", "golden", "Girls", "give", "i", "life", "!"]
(c44-1 / multi-sentence
       :snt1 (c44-3 / event
                    :time (c44-7 / ever)
                    :mode expressive)
       :snt2 (c44-6 / give-01
                    :ARG0 (c44-0 / broadcast-program
                                 :name (c44-2 / name
                                              :op1 "Golden"
                                              :op2 "Girls"))
                    :ARG1 (c44-4 / life)
                    :ARG2 (c44-5 / i)))

# ::snt she's my idol. Gotta be the most hilarious woman on television.
# ::tokens ["she", "'s", "my", "idol", ".", "Got", "ta", "be", "the", "most", "hilarious", "woman", "on", "television", "."]
# ::lemmas ["she", "be", "my", "idol", ".", "got", "to", "be", "the", "most", "hilarious", "woman", "on", "television", "."]
(c45-2 / multi-sentence
       :snt1 (c45-10 / idol
                     :domain (c45-3 / she)
                     :poss (c45-4 / i))
       :snt2 (c45-0 / obligate-01
                    :ARG2 (c45-5 / have-degree-91
                                 :ARG1 (c45-8 / woman
                                              :domain (c45-1 / she))
                                 :ARG2 (c45-9 / hilarious)
                                 :ARG3 (c45-6 / most)
                                 :ARG5 (c45-7 / woman
                                              :location (c45-11 / television)))))
