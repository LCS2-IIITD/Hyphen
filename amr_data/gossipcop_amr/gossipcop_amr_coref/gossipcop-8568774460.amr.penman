# ::snt And what an awesome Princess she will be!
# ::tokens ["And", "what", "an", "awesome", "Princess", "she", "will", "be", "!"]
# ::lemmas ["and", "what", "an", "awesome", "Princess", "she", "will", "be", "!"]
(c1-4 / and
      :op2 (c1-2 / Princess
                 :domain (c1-1 / she)
                 :ARG0-of (c1-3 / awe-01
                                :degree (c1-0 / so))))

# ::snt LOL
# ::tokens ["LOL"]
# ::lemmas ["LOL"]
(c2-1 / laugh-01
      :ARG0 (c2-2 / i)
      :manner (c2-0 / loud))

# ::snt Girl, dont I know it. I do the same thing even before a long walk.
# ::tokens ["Girl", ",", "do", "nt", "I", "know", "it", ".", "I", "do", "the", "same", "thing", "even", "before", "a", "long", "walk", "."]
# ::lemmas ["girl", ",", "do", "not", "i", "know", "it", ".", "i", "do", "the", "same", "thing", "even", "before", "a", "long", "walk", "."]
(c3-1 / multi-sentence
      :snt1 (c3-5 / know-01
                  :ARG0 (c3-8 / i)
                  :ARG1 (c3-3 / it)
                  :polarity -)
      :snt2 (c3-10 / do-02
                   :ARG0 (c3-11 / i)
                   :ARG1 (c3-9 / thing
                               :ARG1-of (c3-2 / same-01))
                   :time (c3-0 / before
                               :op1 (c3-7 / walk-01
                                          :ARG0 c3-11
                                          :ARG1-of (c3-6 / long-03))
                               :mod (c3-4 / even))))

# ::snt when you get older, you have to stretch before doing anything strenuous.. lol
# ::tokens ["when", "you", "get", "older", ",", "you", "have", "to", "stretch", "before", "doing", "anything", "strenuous", "..", "lol"]
# ::lemmas ["when", "you", "get", "old", ",", "you", "have", "to", "stretch", "before", "do", "anything", "strenuous", "..", "lol"]
(c4-0 / obligate-01
      :ARG1 (c4-3 / you)
      :ARG2 (c4-5 / stretch-01
                  :ARG0 c4-3
                  :time (c4-2 / before
                              :op1 (c4-10 / do-02
                                          :ARG0 c4-3
                                          :ARG1 (c4-8 / anything
                                                      :mod (c4-1 / strenuous)))))
      :time (c4-9 / get-03
                  :ARG1 c4-3
                  :ARG2 (c4-4 / old))
      :ARG2-of (c4-6 / laugh-01
                     :ARG0 (c4-7 / i)
                     :manner (c4-11 / loud)
                     :mode expressive))

# ::snt I loved them!! Thank you
# ::tokens ["I", "loved", "them", "!", "!", "Thank", "you"]
# ::lemmas ["i", "love", "they", "!", "!", "thank", "you"]
(c5-1 / multi-sentence
      :snt1 (c5-2 / love-01
                  :ARG0 (c5-4 / i)
                  :ARG1 (c5-3 / they))
      :snt2 (c5-5 / thank-01
                  :ARG0 c5-4
                  :ARG1 (c5-0 / you)))

# ::snt I thought it was Lord Paul Hayward of Brighton?
# ::tokens ["I", "thought", "it", "was", "Lord", "Paul", "Hayward", "of", "Brighton", "?"]
# ::lemmas ["i", "think", "it", "be", "Lord", "Paul", "Hayward", "of", "Brighton", "?"]
(c6-6 / think-01
      :ARG0 (c6-5 / i)
      :ARG1 (c6-3 / person
                  :name (c6-0 / name
                              :op1 "Lord"
                              :op2 "Paul"
                              :op3 "Hayward")
                  :poss (c6-4 / city
                              :name (c6-2 / name
                                          :op1 "Brighton")))
      :polarity (c6-1 / amr-unknown))

# ::snt Why all southern too?
# ::tokens ["Why", "all", "southern", "too", "?"]
# ::lemmas ["you", "all", "southern", "too", "?"]
(c7-2 / cause-01
      :ARG0 (c7-1 / amr-unknown)
      :ARG1 (c7-0 / south
                  :mod (c7-3 / all)
                  :mod (c7-4 / too)))

# ::snt I thought everyone in Sussex is Royalty Paul!?
# ::tokens ["I", "thought", "everyone", "in", "Sussex", "is", "Royalty", "Paul", "!", "?"]
# ::lemmas ["i", "think", "everyone", "in", "Sussex", "be", "Royalty", "Paul", "!", "?"]
(c8-7 / think-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-4 / person
                  :name (c8-0 / name
                              :op1 "Royalty"
                              :op2 "Paul")
                  :domain (c8-2 / everyone
                                :location (c8-5 / county
                                                :name (c8-3 / name
                                                            :op1 "Sussex"))))
      :polarity (c8-1 / amr-unknown))

# ::snt A duke parachuted in! First job: learn the words to Sussex by the Sea. He wont want to make John Redwoods mistake with Wales anthem.
# ::tokens ["A", "duke", "parachuted", "in", "!", "First", "job", ":", "learn", "the", "words", "to", "Sussex", "by", "the", "Sea", ".", "He", "wo", "nt", "want", "to", "make", "John", "Redwoods", "mistake", "with", "Wales", "anthem", "."]
# ::lemmas ["a", "duke", "parachute", "in", "!", "First", "job", ":", "learn", "the", "word", "to", "Sussex", "by", "the", "Sea", ".", "he", "will", "not", "want", "to", "make", "John", "Redwoods", "mistake", "with", "Wales", "anthem", "."]
(c9-1 / multi-sentence
      :snt1 (c9-5 / parachute-01
                  :ARG1 (c9-15 / duke))
      :snt2 (c9-13 / job
                   :ord (c9-0 / ordinal-entity
                              :value 1)
                   :domain (c9-6 / learn-01
                                 :ARG1 (c9-9 / word)
                                 :ARG2 (c9-16 / location
                                              :name (c9-2 / name
                                                          :op1 "Sussex"
                                                          :op2 "by"
                                                          :op3 "the"
                                                          :op4 "Sea"))))
      :snt3 (c9-7 / want-01
                  :ARG0 (c9-4 / he)
                  :ARG1 (c9-8 / mistake-01
                              :ARG0 c9-4
                              :ARG1 (c9-14 / anthem
                                           :mod (c9-10 / country
                                                       :name (c9-11 / name
                                                                    :op1 "Wales")))
                              :ARG2 (c9-3 / person
                                          :name (c9-12 / name
                                                       :op1 "John"
                                                       :op2 "Redwoods")))
                  :polarity -))

# ::snt I'm duke of nowhere
# ::tokens ["I", "'m", "duke", "of", "nowhere"]
# ::lemmas ["i", "be", "duke", "of", "nowhere"]
(c10-0 / duke
       :poss (c10-2 / i)
       :location (c10-1 / nowhere))

# ::snt Would NEVER forget the Myles
# ::tokens ["Would", "NEVER", "forget", "the", "Myles"]
# ::lemmas ["would", "never", "forget", "the", "Myles"]
(c11-0 / forget-01
       :ARG1 (c11-2 / Myles)
       :time (c11-1 / ever)
       :polarity -)

# ::snt Theyll be disappointed to get one from Division Two of the County Championship....
# ::tokens ["They", "ll", "be", "disappointed", "to", "get", "one", "from", "Division", "Two", "of", "the", "County", "Championship", "...."]
# ::lemmas ["they", "ll", "be", "disappoint", "to", "get", "one", "from", "Division", "Two", "of", "the", "County", "Championship", "...."]
(c13-7 / disappoint-01
       :ARG0 (c13-6 / get-01
                    :ARG0 (c13-3 / they)
                    :ARG1 (c13-5 / thing
                                 :quant 1)
                    :ARG2 (c13-2 / Division
                                 :ord (c13-0 / ordinal-entity
                                             :value 2)
                                 :part-of (c13-4 / game
                                                 :name (c13-1 / name
                                                              :op1 "County"
                                                              :op2 "Championship"))))
       :ARG1 c13-3)

# ::snt And a huuuge county too...
# ::tokens ["And", "a", "huuuge", "county", "too", "..."]
# ::lemmas ["and", "a", "huuuge", "county", "too", "..."]
(c14-3 / and
       :op2 (c14-0 / county
                   :mod (c14-1 / huge
                               :mode expressive)
                   :mod (c14-2 / too)))

# ::snt How does Harry get a county (or two counties) and William only got Cambridge? Thats not fair
# ::tokens ["How", "does", "Harry", "get", "a", "county", "(", "or", "two", "counties", ")", "and", "William", "only", "got", "Cambridge", "?", "That", "s", "not", "fair"]
# ::lemmas ["how", "do", "Harry", "get", "a", "county", "(", "or", "two", "county", ")", "and", "William", "only", "get", "Cambridge", "?", "that", "s", "not", "fair"]
(c15-2 / multi-sentence
       :snt1 (c15-13 / and
                     :op1 (c15-14 / get-01
                                  :ARG0 (c15-5 / person
                                               :name (c15-1 / name
                                                            :op1 "Harry"))
                                  :ARG1 (c15-8 / county
                                               :ARG1-of (c15-4 / mean-01
                                                               :ARG2 (c15-16 / county
                                                                             :quant 2)))
                                  :manner (c15-12 / amr-unknown))
                     :op2 (c15-15 / get-01
                                  :ARG0 (c15-3 / person
                                               :name (c15-6 / name
                                                            :op1 "William"))
                                  :ARG1 (c15-10 / county
                                                :name (c15-7 / name
                                                             :op1 "Cambridge"))
                                  :manner (c15-9 / amr-unknown)))
       :snt2 (c15-0 / fair-01
                    :ARG1 (c15-11 / that)
                    :polarity -))

# ::snt Paul will always be the king of Ringmer
# ::tokens ["Paul", "will", "always", "be", "the", "king", "of", "Ringmer"]
# ::lemmas ["Paul", "will", "always", "be", "the", "king", "of", "Ringmer"]
(c16-2 / have-org-role-91
       :ARG0 (c16-3 / person
                    :name (c16-0 / name
                                 :op1 "Paul"))
       :ARG1 (c16-1 / person
                    :name (c16-4 / name
                                 :op1 "Rangmer"))
       :ARG2 (c16-5 / king)
       :time (c16-6 / always))

# ::snt Game changer in lets work to break the stigma
# ::tokens ["Game", "changer", "in", "lets", "work", "to", "break", "the", "stigma"]
# ::lemmas ["game", "changer", "in", "let", "work", "to", "break", "the", "stigma"]
(c18-2 / let-01
       :ARG0 (c18-4 / we)
       :ARG1 (c18-3 / work-01
                    :ARG0 c18-4
                    :ARG1 (c18-0 / break-01
                                 :ARG0 c18-4
                                 :ARG1 (c18-1 / stigma)))
       :mod (c18-5 / in))

# ::snt PRIME FACTORIZATION: X
# ::tokens ["PRIME", "FACTORIZATION", ":", "X"]
# ::lemmas ["PRIME", "FACTORIZATION", ":", "x"]
(c21-3 / thing
       :ARG0-of (c21-2 / indicate-01
                       :ARG1 (c21-0 / crime-02))
       :mod (c21-1 / emoticon
                   :value "X"))

# ::snt Great work
# ::tokens ["Great", "work"]
# ::lemmas ["great", "work"]
(c22-1 / work-01
       :mod (c22-0 / great))

# ::snt TWEET TO FOLLOWERS
# ::tokens ["TWEET", "TO", "FOLLOWERS"]
# ::lemmas ["tweet", "to", "follower"]
(c25-2 / tip-05
       :ARG2 (c25-1 / person
                    :ARG0-of (c25-0 / follow-01)))

# ::snt Are those sunglasses by ???
# ::tokens ["Are", "those", "sunglasses", "by", "?", "?", "?"]
# ::lemmas ["be", "those", "sunglass", "by", "?", "?", "?"]
(c26-1 / by
       :polarity (c26-3 / amr-unknown)
       :domain (c26-0 / sunglasses
                      :mod (c26-2 / that)))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c27-0 / amr-empty)

# ::snt Magnifique
# ::tokens ["Magnifique"]
# ::lemmas ["magnifique"]
(c28-1 / person
       :name (c28-0 / name
                    :op1 "Magnifique"))

# ::snt As usual very unorthodox choice for a wedding outfit - black! And that on a very hot day! And the black hair fascinator gives the feel that it is more of a funeral outfit than a wedding one...the black shoes, on a hot day!, pull the whole outfit further down...worst choice ever!
# ::tokens ["As", "usual", "very", "unorthodox", "choice", "for", "a", "wedding", "outfit", "-", "black", "!", "And", "that", "on", "a", "very", "hot", "day", "!", "And", "the", "black", "hair", "fascinator", "gives", "the", "feel", "that", "it", "is", "more", "of", "a", "funeral", "outfit", "than", "a", "wedding", "one", "...", "the", "black", "shoes", ",", "on", "a", "hot", "day", "!", ",", "pull", "the", "whole", "outfit", "further", "down", "...", "worst", "choice", "ever", "!"]
# ::lemmas ["as", "usual", "very", "unorthodox", "choice", "for", "a", "wedding", "outfit", "-", "black", "!", "and", "that", "on", "a", "very", "hot", "day", "!", "and", "the", "black", "hair", "fascinator", "give", "the", "feel", "that", "it", "be", "more", "of", "a", "funeral", "outfit", "than", "a", "wedding", "one", "...", "the", "black", "shoe", ",", "on", "a", "hot", "day", "!", ",", "pull", "the", "whole", "outfit", "far", "down", "...", "bad", "choice", "ever", "!"]
(c29-18 / multi-sentence
        :snt1 (c29-20 / choose-01
                      :ARG1 (c29-5 / outfit
                                   :mod (c29-32 / wed-01)
                                   :ARG1-of (c29-17 / black-04))
                      :mod (c29-12 / as-usual)
                      :manner (c29-24 / unorthodox
                                      :degree (c29-6 / very))
                      :mod c29-12)
        :snt2 (c29-10 / and
                      :op2 (c29-11 / that
                                   :time (c29-34 / day
                                                 :ARG1-of (c29-8 / hot-05
                                                                 :degree (c29-3 / very))))
                      :op3 (c29-13 / give-01
                                   :ARG0 (c29-27 / fascinator
                                                 :mod (c29-33 / hair)
                                                 :ARG1-of (c29-1 / black-04))
                                   :ARG1 (c29-30 / feel-02
                                                 :ARG0 c29-27
                                                 :ARG1 (c29-7 / have-degree-91
                                                              :ARG1 (c29-15 / outfit
                                                                            :mod (c29-31 / funeral))
                                                              :ARG2 (c29-9 / much)
                                                              :ARG3 (c29-25 / more)
                                                              :ARG4 (c29-35 / outfit
                                                                            :mod (c29-2 / wed-01))))))
        :snt3 (c29-29 / pull-01
                      :ARG0 (c29-0 / shoe
                                   :ARG1-of (c29-4 / black-04))
                      :ARG1 (c29-23 / outfit
                                    :mod (c29-26 / whole))
                      :ARG2 (c29-21 / down)
                      :time c29-34
                      :ARG1-of c29-8
                      :mode imperative)
        :snt4 c29-7
        :ARG1 (c29-22 / thing
                      :ARG1-of (c29-14 / choose-01
                                       :time (c29-28 / ever)))
        :ARG2 (c29-16 / bad-02
                      :ARG1 c29-22)
        :ARG3 (c29-19 / most))

# ::snt Yikes. It's like the Invictus Games in Toronto -- one London reporter didn't look at the forecasts and brought heavy sweaters (it's C today with humidity)
# ::tokens ["Yikes", ".", "It", "'s", "like", "the", "Invictus", "Games", "in", "Toronto", "--", "one", "London", "reporter", "did", "n't", "look", "at", "the", "forecasts", "and", "brought", "heavy", "sweaters", "(", "it", "'s", "C", "today", "with", "humidity", ")"]
# ::lemmas ["yike", ".", "it", "be", "like", "the", "Invictus", "Games", "in", "Toronto", "--", "one", "London", "reporter", "do", "not", "look", "at", "the", "forecast", "and", "bring", "heavy", "sweater", "(", "it", "be", "c", "today", "with", "humidity", ")"]
(c30-11 / multi-sentence
        :snt1 (c30-4 / yikes)
        :snt2 (c30-16 / resemble-01
                      :ARG1 (c30-20 / it)
                      :ARG2 (c30-7 / game
                                   :name (c30-15 / name
                                                 :op1 "Invictus"
                                                 :op2 "Games")
                                   :location (c30-13 / city
                                                     :name (c30-12 / name
                                                                   :op1 "Toronto"))))
        :snt3 (c30-6 / and
                     :op1 (c30-1 / look-01
                                 :ARG0 (c30-17 / person
                                               :ARG0-of (c30-3 / report-01)
                                               :location (c30-9 / city
                                                                :name (c30-18 / name
                                                                              :op1 "London"))
                                               :quant 1)
                                 :ARG1 (c30-14 / forecast-01)
                                 :polarity -)
                     :op2 (c30-10 / bring-01
                                  :ARG0 c30-17
                                  :ARG1 (c30-0 / sweater
                                               :mod (c30-5 / heavy)))
                     :ARG1-of (c30-2 / cause-01
                                     :ARG0 (c30-19 / humidity
                                                   :time (c30-8 / today)))))

# ::snt Very hot, were not used to it.
# ::tokens ["Very", "hot", ",", "were", "not", "used", "to", "it", "."]
# ::lemmas ["very", "hot", ",", "be", "not", "use", "to", "it", "."]
(c31-4 / and
       :op1 (c31-1 / hot-03
                   :degree (c31-0 / very))
       :op2 (c31-5 / use-02
                   :ARG0 (c31-2 / we)
                   :ARG1 (c31-3 / it)
                   :polarity -))

# ::snt Yes, I ALWAYS wear black to weddings!
# ::tokens ["Yes", ",", "I", "ALWAYS", "wear", "black", "to", "weddings", "!"]
# ::lemmas ["yes", ",", "i", "always", "wear", "black", "to", "wedding", "!"]
(c32-2 / wear-01
       :ARG0 (c32-3 / i)
       :ARG1 (c32-5 / dress
                    :ARG1-of (c32-0 / black-04))
       :time (c32-1 / wed-01)
       :time (c32-4 / always))

# ::snt Prince Harry ought to take his wife to for a getaway holiday! I would suggest - hotel where each room has its own pool.
# ::tokens ["Prince", "Harry", "ought", "to", "take", "his", "wife", "to", "for", "a", "getaway", "holiday", "!", "I", "would", "suggest", "-", "hotel", "where", "each", "room", "has", "its", "own", "pool", "."]
# ::lemmas ["Prince", "Harry", "ought", "to", "take", "his", "wife", "to", "for", "a", "getaway", "holiday", "!", "i", "would", "suggest", "-", "hotel", "where", "each", "room", "have", "its", "own", "pool", "."]
(c33-9 / multi-sentence
       :snt1 (c33-13 / recommend-01
                     :ARG1 (c33-7 / take-01
                                  :ARG0 (c33-15 / person
                                                :name (c33-12 / name
                                                              :op1 "Harry")
                                                :ARG0-of (c33-5 / have-org-role-91
                                                                :ARG2 (c33-10 / prince)))
                                  :ARG1 (c33-2 / person
                                               :ARG0-of (c33-17 / have-rel-role-91
                                                                :ARG1 c33-15
                                                                :ARG2 (c33-16 / wife)))
                                  :ARG4 (c33-4 / holiday-01
                                               :purpose (c33-8 / get-away-08))))
       :snt2 (c33-0 / suggest-01
                    :ARG0 (c33-18 / i)
                    :ARG1 (c33-11 / hotel
                                  :location-of (c33-6 / have-03
                                                      :ARG0 (c33-3 / room
                                                                   :mod (c33-14 / each))
                                                      :ARG1 (c33-1 / pool
                                                                   :poss c33-3)))))

# ::snt I like her hat and shoes.
# ::tokens ["I", "like", "her", "hat", "and", "shoes", "."]
# ::lemmas ["i", "like", "her", "hat", "and", "shoe", "."]
(c34-3 / like-01
       :ARG0 (c34-4 / i)
       :ARG1 (c34-5 / and
                    :op1 (c34-2 / hat
                                :poss (c34-1 / she))
                    :op2 (c34-0 / shoe
                                :poss c34-1)))

# ::snt I wonder if this photo is photoshop or not...that face is so rotten!
# ::tokens ["I", "wonder", "if", "this", "photo", "is", "photoshop", "or", "not", "...", "that", "face", "is", "so", "rotten", "!"]
# ::lemmas ["i", "wonder", "if", "this", "photo", "be", "photoshop", "or", "not", "...", "that", "face", "be", "so", "rotten", "!"]
(c35-1 / multi-sentence
       :snt1 (c35-6 / wonder-01
                    :ARG0 (c35-7 / i)
                    :ARG1 (c35-8 / truth-value
                                 :polarity-of (c35-5 / photoshop
                                                     :domain (c35-2 / photo
                                                                    :mod (c35-10 / this)))))
       :snt2 (c35-4 / rot-01
                    :ARG1 (c35-0 / face
                                 :part-of (c35-9 / that))
                    :degree (c35-3 / so)
                    :mode expressive))

# ::snt Theyre so cute
# ::tokens ["They", "re", "so", "cute"]
# ::lemmas ["they", "re", "so", "cute"]
(c36-0 / cute
       :degree (c36-2 / so)
       :domain (c36-1 / they))

# ::snt Nice photos, Mark. But boy, it looks hot
# ::tokens ["Nice", "photos", ",", "Mark", ".", "But", "boy", ",", "it", "looks", "hot"]
# ::lemmas ["nice", "photo", ",", "Mark", ".", "but", "boy", ",", "it", "look", "hot"]
(c37-2 / multi-sentence
       :snt1 (c37-4 / say-01
                    :ARG1 (c37-6 / photo
                                 :ARG1-of (c37-1 / nice-01))
                    :ARG2 (c37-3 / person
                                 :name (c37-5 / name
                                              :op1 "Mark")))
       :snt2 (c37-9 / contrast-01
                    :ARG2 (c37-7 / look-02
                                 :ARG0 (c37-10 / it)
                                 :ARG1 (c37-8 / hot-03
                                              :ARG1 c37-10)
                                 :mod (c37-0 / boy))))

# ::snt Lovely pics thanks
# ::tokens ["Lovely", "pics", "thanks"]
# ::lemmas ["lovely", "pic", "thank"]
(c38-4 / thank-01
       :ARG0 (c38-3 / i)
       :ARG1 (c38-1 / you)
       :ARG2 (c38-2 / pics
                    :ARG1-of (c38-0 / beautiful-02)))

# ::snt Harry needs some new shoes or he needs to resole these
# ::tokens ["Harry", "needs", "some", "new", "shoes", "or", "he", "needs", "to", "resole", "these"]
# ::lemmas ["Harry", "need", "some", "new", "shoe", "or", "he", "need", "to", "resole", "these"]
(c39-0 / or
       :op1 (c39-2 / need-01
                   :ARG0 (c39-6 / person
                                :name (c39-5 / name
                                             :op1 "Harry"))
                   :ARG1 (c39-3 / shoe
                                :ARG1-of (c39-7 / new-01)
                                :quant (c39-1 / some)))
       :op2 (c39-8 / need-01
                   :ARG0 c39-6
                   :ARG1 (c39-4 / resole-00
                                :ARG0 c39-6
                                :ARG1 c39-3)))

# ::snt Great pictures. Thanks for posting.
# ::tokens ["Great", "pictures", ".", "Thanks", "for", "posting", "."]
# ::lemmas ["great", "picture", ".", "thank", "for", "post", "."]
(c40-1 / multi-sentence
       :snt1 (c40-3 / picture
                    :mod (c40-6 / great))
       :snt2 (c40-5 / thank-01
                    :ARG0 (c40-4 / i)
                    :ARG1 (c40-0 / you)
                    :ARG2 (c40-2 / post-01
                                 :ARG0 c40-0)))

# ::snt Happy marriage
# ::tokens ["Happy", "marriage"]
# ::lemmas ["happy", "marriage"]
(c42-0 / happy-01
       :ARG1 (c42-1 / marry-01))

# ::snt Wow !!! the dress is so long.
# ::tokens ["Wow", "!", "!", "!", "the", "dress", "is", "so", "long", "."]
# ::lemmas ["wow", "!", "!", "!", "the", "dress", "be", "so", "long", "."]
(c43-1 / long-03
       :ARG1 (c43-0 / dress)
       :degree (c43-3 / so)
       :mod (c43-2 / wow
                   :mode expressive))

# ::snt Top hottest?? Hahahahaha and thats why he fucked a porn star while she was pregnant
# ::tokens ["Top", "hottest", "?", "?", "Hahahahaha", "and", "that", "s", "why", "he", "fucked", "a", "porn", "star", "while", "she", "was", "pregnant"]
# ::lemmas ["top", "hot", "?", "?", "Hahahahaha", "and", "that", "s", "why", "he", "fuck", "a", "porn", "star", "while", "she", "be", "pregnant"]
(c44-1 / multi-sentence
       :snt1 (c44-5 / hot-03
                    :polarity (c44-11 / amr-unknown)
                    :ARG2-of (c44-8 / have-degree-91
                                    :ARG3 (c44-4 / most)))
       :snt2 (c44-10 / and
                     :op1 (c44-3 / haha
                                 :mode expressive)
                     :op2 (c44-7 / cause-01
                                 :ARG0 (c44-9 / that)
                                 :ARG1 (c44-0 / fuck-01
                                              :ARG0 (c44-13 / he)
                                              :ARG1 (c44-2 / star
                                                           :mod (c44-6 / porn))
                                              :time (c44-12 / impregnate-01
                                                            :ARG1 c44-2)))))

# ::snt Whoa this chick parachuted in for her wedding ... !
# ::tokens ["Whoa", "this", "chick", "parachuted", "in", "for", "her", "wedding", "...", "!"]
# ::lemmas ["whoa", "this", "chick", "parachute", "in", "for", "her", "wedding", "...", "!"]
(c45-0 / parachute-01
       :ARG0 (c45-2 / chick
                    :mod (c45-4 / this))
       :ARG2 (c45-3 / wed-01
                    :ARG1 c45-2)
       :mod (c45-1 / whoa
                   :mode expressive)
       :mode expressive)

# ::snt And you're just a libtard.
# ::tokens ["And", "you", "'re", "just", "a", "libtard", "."]
# ::lemmas ["and", "you", "be", "just", "a", "libtard", "."]
(c46-3 / and
       :op2 (c46-0 / retard-01
                   :ARG1 (c46-1 / you)
                   :mod (c46-2 / just)))

# ::snt You have Trump on your profile. Of course you're a hypocrite. Muting your anti-American ass now.
# ::tokens ["You", "have", "Trump", "on", "your", "profile", ".", "Of", "course", "you", "'re", "a", "hypocrite", ".", "Muting", "your", "anti", "-", "American", "ass", "now", "."]
# ::lemmas ["you", "have", "Trump", "on", "your", "profile", ".", "of", "course", "you", "be", "a", "hypocrite", ".", "mute", "your", "anti", "-", "American", "ass", "now", "."]
(c47-4 / multi-sentence
       :snt1 (c47-6 / have-03
                    :ARG0 (c47-2 / you)
                    :ARG1 (c47-7 / person
                                 :name (c47-3 / name
                                              :op1 "Trump"))
                    :location (c47-5 / profile
                                     :poss c47-2))
       :snt2 (c47-12 / hypocrite
                     :domain (c47-14 / you)
                     :mod (c47-0 / of-course))
       :snt3 (c47-8 / Mutter-01
                    :ARG1 (c47-13 / ass
                                  :poss c47-14
                                  :ARG0-of (c47-1 / oppose-01
                                                  :ARG1 (c47-11 / country
                                                                :name (c47-9 / name
                                                                             :op1 "America"))))
                    :time (c47-10 / now)))

# ::snt Watching,I'm struck by the contrast between our countries now,&amp; the reason we left England seek out a new land,that we could be free from the restraints of the motherland.Only have a Pres.that wants put restraints on us,while this wedding is filled with wonderful diversity.
# ::tokens ["Watching", ",", "I'm", "struck", "by", "the", "contrast", "between", "our", "countries", "now,&amp", ";", "the", "reason", "we", "left", "England", "seek", "out", "a", "new", "land", ",", "that", "we", "could", "be", "free", "from", "the", "restraints", "of", "the", "motherland", ".", "Only", "have", "a", "Pres.that", "wants", "put", "restraints", "on", "us", ",", "while", "this", "wedding", "is", "filled", "with", "wonderful", "diversity", "."]
# ::lemmas ["watch", ",", "i'm", "strike", "by", "the", "contrast", "between", "our", "country", "now,&amp", ";", "the", "reason", "we", "leave", "England", "seek", "out", "a", "new", "land", ",", "that", "we", "could", "be", "free", "from", "the", "restraint", "of", "the", "motherland", ".", "only", "have", "a", "pres.that", "want", "put", "restraint", "on", "we", ",", "while", "this", "wedding", "be", "fill", "with", "wonderful", "diversity", "."]
(c48-16 / multi-sentence
        :snt1 (c48-1 / strike-01
                     :ARG0 (c48-29 / watch-01
                                   :ARG0 (c48-31 / i))
                     :ARG1 (c48-19 / contrast-01
                                   :ARG1 (c48-15 / country
                                                 :poss (c48-3 / we))
                                   :ARG2 (c48-5 / country
                                                :name (c48-23 / name
                                                              :op1 "England"))
                                   :time (c48-18 / now)))
        :snt2 (c48-21 / cause-01
                      :ARG0 (c48-26 / possible-01
                                    :ARG1 (c48-9 / seek-out-02
                                                 :ARG0 (c48-20 / we)
                                                 :ARG1 (c48-2 / land
                                                              :ARG1-of (c48-27 / new-01))))
                      :ARG1 (c48-22 / free-04
                                    :ARG1 c48-20
                                    :ARG2 (c48-25 / restrain-01
                                                  :ARG0 (c48-11 / motherland))))
        :snt3 (c48-12 / have-03
                      :ARG0 (c48-0 / we)
                      :ARG1 (c48-17 / person
                                    :ARG0-of (c48-30 / have-org-role-91
                                                     :ARG2 (c48-6 / president))
                                    :ARG0-of (c48-14 / want-01
                                                     :ARG1 (c48-4 / put-01
                                                                  :ARG0 c48-17
                                                                  :ARG1 (c48-7 / restrain-01)
                                                                  :ARG2 c48-0)))
                      :mod (c48-10 / only)
                      :time (c48-28 / fill-01
                                    :ARG1 (c48-8 / wed-01
                                                 :mod (c48-13 / this))
                                    :ARG2 (c48-32 / diversity
                                                  :ARG1-of (c48-24 / wonderful-03)))))

# ::snt A waste of time to watch a ruling class wedding in a country that does not recognize God given rights.
# ::tokens ["A", "waste", "of", "time", "to", "watch", "a", "ruling", "class", "wedding", "in", "a", "country", "that", "does", "not", "recognize", "God", "given", "rights", "."]
# ::lemmas ["a", "waste", "of", "time", "to", "watch", "a", "rule", "class", "wedding", "in", "a", "country", "that", "do", "not", "recognize", "God", "give", "right", "."]
(c49-5 / waste-01
       :ARG1 (c49-7 / time)
       :ARG2 (c49-3 / watch-01
                    :ARG1 (c49-11 / wed-01
                                  :mod (c49-6 / class
                                              :ARG0-of (c49-1 / rule-03))
                                  :location (c49-10 / country
                                                    :ARG0-of (c49-9 / recognize-01
                                                                    :ARG1 (c49-4 / right-05
                                                                                 :ARG1 (c49-2 / person
                                                                                              :name (c49-0 / name
                                                                                                           :op1 "God"))
                                                                                 :ARG1-of (c49-8 / give-01
                                                                                                 :ARG2 c49-2))
                                                                    :polarity -)))))

# ::snt Oh savage ! got me.
# ::tokens ["Oh", "savage", "!", "got", "me", "."]
# ::lemmas ["oh", "savage", "!", "get", "i", "."]
(c50-0 / get-01
       :ARG0 (c50-3 / savage
                    :mod (c50-1 / oh))
       :ARG1 (c50-2 / i)
       :mode expressive)
