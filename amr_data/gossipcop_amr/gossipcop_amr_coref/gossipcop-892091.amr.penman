# ::snt she did the same thing for so go away
# ::tokens ["she", "did", "the", "same", "thing", "for", "so", "go", "away"]
# ::lemmas ["she", "do", "the", "same", "thing", "for", "so", "go", "away"]
(c1-7 / do-02
      :ARG0 (c1-2 / she)
      :ARG1 (c1-5 / thing
                  :ARG1-of (c1-0 / same-01))
      :ARG0-of (c1-4 / cause-01
                     :ARG1 (c1-6 / go-02
                                 :ARG0 (c1-1 / you)
                                 :direction (c1-3 / away)
                                 :mode imperative)))

# ::snt She did the secret session long before that sweaty...
# ::tokens ["She", "did", "the", "secret", "session", "long", "before", "that", "sweaty", "..."]
# ::lemmas ["she", "do", "the", "secret", "session", "long", "before", "that", "sweaty", "..."]
(c2-5 / do-02
      :ARG0 (c2-2 / she)
      :ARG1 (c2-0 / session
                  :mod (c2-6 / secret))
      :time (c2-1 / before
                  :op1 (c2-3 / sweat-03
                             :ARG1 c2-2)
                  :quant (c2-4 / long)))

# ::snt Girl. Its at taylor house. She doesnt have homes all around the world.
# ::tokens ["Girl", ".", "Its", "at", "taylor", "house", ".", "She", "does", "nt", "have", "homes", "all", "around", "the", "world", "."]
# ::lemmas ["girl", ".", "its", "at", "taylor", "house", ".", "she", "do", "not", "have", "home", "all", "around", "the", "world", "."]
(c3-1 / multi-sentence
      :snt1 (c3-10 / girl
                   :mode expressive)
      :snt2 (c3-0 / be-located-at-91
                  :ARG1 (c3-8 / it)
                  :ARG2 (c3-5 / house
                              :name (c3-2 / name
                                          :op1 "Taylor"
                                          :op2 "House")))
      :snt3 (c3-7 / have-03
                  :ARG0 (c3-3 / she)
                  :ARG1 (c3-4 / home)
                  :location (c3-9 / around
                                  :op1 (c3-6 / world)
                                  :mod (c3-11 / all))
                  :polarity -))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c4-1 / laugh-01
      :manner (c4-0 / loud)
      :mode expressive)

# ::snt Generic ? She isnt selena Gomez
# ::tokens ["Generic", "?", "She", "is", "nt", "selena", "Gomez"]
# ::lemmas ["Generic", "?", "she", "be", "not", "selena", "Gomez"]
(c5-1 / multi-sentence
      :snt1 (c5-5 / generic
                  :polarity (c5-4 / amr-unknown))
      :snt2 (c5-3 / person
                  :name (c5-0 / name
                              :op1 "Slena"
                              :op2 "Gomez")
                  :domain (c5-2 / she)
                  :polarity -))

# ::snt You can meet the same amount of people. If anything, stadiums give their fans a better opportunity since tickets will sell out slower
# ::tokens ["You", "can", "meet", "the", "same", "amount", "of", "people", ".", "If", "anything", ",", "stadiums", "give", "their", "fans", "a", "better", "opportunity", "since", "tickets", "will", "sell", "out", "slower"]
# ::lemmas ["you", "can", "meet", "the", "same", "amount", "of", "people", ".", "if", "anything", ",", "stadium", "give", "their", "fan", "a", "well", "opportunity", "since", "ticket", "will", "sell", "out", "slow"]
(c6-12 / multi-sentence
       :snt1 (c6-19 / possible-01
                    :ARG1 (c6-6 / meet-02
                                :ARG0 (c6-5 / you)
                                :ARG1 (c6-13 / person
                                             :quant (c6-10 / amount
                                                           :ARG1-of (c6-0 / same-01)))))
       :snt2 (c6-11 / give-01
                    :ARG0 (c6-3 / stadium)
                    :ARG1 (c6-4 / opportunity
                                :ARG1-of (c6-7 / have-degree-91
                                               :ARG2 (c6-1 / good-02
                                                           :ARG1 c6-4)
                                               :ARG3 (c6-16 / more)))
                    :ARG2 (c6-17 / fan
                                 :poss c6-3)
                    :condition (c6-8 / anything)
                    :ARG1-of (c6-15 / cause-01
                                    :ARG0 (c6-2 / sell-out-03
                                                :ARG1 (c6-9 / ticket)
                                                :ARG1-of (c6-20 / have-degree-91
                                                                :ARG2 (c6-18 / slow-05
                                                                             :ARG1 c6-2)
                                                                :ARG3 (c6-14 / more))))))

# ::snt Ok fine.
# ::tokens ["Ok", "fine", "."]
# ::lemmas ["ok", "fine", "."]
(c7-0 / okay-01
      :mod (c7-1 / fine))

# ::snt Swiftiess is so delusional. Xtina beat tayloose vocal to dust *chuckled
# ::tokens ["Swiftiess", "is", "so", "delusional", ".", "Xtina", "beat", "tayloose", "vocal", "to", "dust", "*", "chuckled"]
# ::lemmas ["swiftiess", "be", "so", "delusional", ".", "Xtina", "beat", "tayloose", "vocal", "to", "dust", "*", "chuckle"]
(c8-2 / multi-sentence
      :snt1 (c8-11 / delusional
                   :domain (c8-7 / person
                                 :name (c8-1 / name
                                             :op1 "Swiftiess"))
                   :degree (c8-3 / so))
      :snt2 (c8-0 / beat-01
                  :ARG0 (c8-4 / person
                              :name (c8-6 / name
                                          :op1 "Xtina"))
                  :ARG1 (c8-5 / vocal
                              :mod (c8-10 / tayloose))
                  :ARG2 (c8-9 / dust)
                  :ARG1-of (c8-8 / crack-02)))

# ::snt OH MY GOOOD SHE DOESNT DESERVE THE HATE I LOVEE HERRRRR SO MUCH
# ::tokens ["OH", "MY", "GOOOD", "SHE", "DOESNT", "DESERVE", "THE", "HATE", "I", "LOVEE", "HERRRRR", "SO", "MUCH"]
# ::lemmas ["OH", "my", "goood", "SHE", "doesnt", "deserve", "the", "hate", "i", "lovee", "herrrrr", "SO", "much"]
(c9-2 / multi-sentence
      :snt1 (c9-9 / deserve-01
                  :ARG0 (c9-3 / she)
                  :ARG1 (c9-4 / hate-01)
                  :mod (c9-0 / oh
                             :op1 (c9-8 / gosh
                                        :poss (c9-7 / i))
                             :mode expressive)
                  :polarity -)
      :snt2 (c9-5 / love-01
                  :ARG0 c9-7
                  :ARG1 (c9-1 / she
                              :mode expressive)
                  :degree (c9-6 / much
                                :degree (c9-10 / so))))

# ::snt yes! that was a great day and it actually ran late and was hours long because she refused to leave until she met everyone in the arena
# ::tokens ["yes", "!", "that", "was", "a", "great", "day", "and", "it", "actually", "ran", "late", "and", "was", "hours", "long", "because", "she", "refused", "to", "leave", "until", "she", "met", "everyone", "in", "the", "arena"]
# ::lemmas ["yes", "!", "that", "be", "a", "great", "day", "and", "it", "actually", "run", "late", "and", "be", "hours", "long", "because", "she", "refuse", "to", "leave", "until", "she", "meet", "everyone", "in", "the", "arena"]
(c10-4 / and
       :op1 (c10-13 / day
                    :mod (c10-12 / great)
                    :domain (c10-11 / that))
       :op2 (c10-3 / run-01
                   :ARG1 c10-11
                   :time (c10-6 / late)
                   :ARG1-of (c10-10 / actual-02))
       :op3 (c10-14 / long-03
                    :ARG1 c10-11
                    :ARG1-of (c10-8 / cause-01
                                    :ARG0 (c10-1 / refuse-01
                                                 :ARG0 (c10-2 / she)
                                                 :ARG1 (c10-7 / leave-11
                                                              :ARG0 c10-2)
                                                 :time (c10-15 / until
                                                               :op1 (c10-0 / meet-02
                                                                           :ARG0 c10-2
                                                                           :ARG1 (c10-5 / everyone)
                                                                           :location (c10-9 / arena)))))))

# ::snt aaandd dont forget the hours m&amp;gs she loves her fans that much
# ::tokens ["aaandd", "do", "nt", "forget", "the", "hours", "m&amp;gs", "she", "loves", "her", "fans", "that", "much"]
# ::lemmas ["aaandd", "do", "not", "forget", "the", "hour", "m&amp;gs", "she", "love", "her", "fan", "that", "much"]
(c11-3 / and
       :op2 (c11-0 / forget-01
                   :ARG1 (c11-1 / multiple
                                :op1 (c11-9 / temporal-quantity
                                            :unit (c11-4 / hour)
                                            :quant 1))
                   :ARG1-of (c11-8 / cause-01
                                   :ARG0 (c11-5 / love-01
                                                :ARG0 (c11-2 / she)
                                                :ARG1 (c11-6 / fan
                                                             :poss c11-2)
                                                :degree (c11-7 / much
                                                               :degree (c11-10 / that))))
                   :polarity -))

# ::snt That makes literally no sense. An arena vs a stadium is not what's gonna bring you closer to your fans.
# ::tokens ["That", "makes", "literally", "no", "sense", ".", "An", "arena", "vs", "a", "stadium", "is", "not", "what", "'s", "gon", "na", "bring", "you", "closer", "to", "your", "fans", "."]
# ::lemmas ["that", "make", "literally", "no", "sense", ".", "an", "arena", "vs", "a", "stadium", "be", "not", "what", "be", "going", "to", "bring", "you", "close", "to", "your", "fan", "."]
(c12-4 / multi-sentence
       :snt1 (c12-5 / sense-02
                    :ARG1 (c12-11 / that)
                    :manner (c12-8 / literal)
                    :polarity -)
       :snt2 (c12-2 / bring-01
                    :ARG0 (c12-10 / compare-01
                                  :ARG1 (c12-6 / arena)
                                  :ARG2 (c12-0 / stadium))
                    :ARG1 (c12-3 / you)
                    :ARG2 (c12-12 / close-10
                                  :ARG1 c12-3
                                  :ARG2 (c12-1 / fan
                                               :poss c12-3)
                                  :ARG2-of (c12-7 / have-degree-91
                                                  :ARG1 c12-3
                                                  :ARG3 (c12-9 / more)))
                    :polarity -))

# ::snt lol was this released to cover up that white supremacist messy shit she's in
# ::tokens ["lol", "was", "this", "released", "to", "cover", "up", "that", "white", "supremacist", "messy", "shit", "she", "'s", "in"]
# ::lemmas ["lol", "be", "this", "release", "to", "cover", "up", "that", "white", "supremacist", "messy", "shit", "she", "be", "in"]
(c13-2 / release-01
       :ARG1 (c13-6 / this)
       :purpose (c13-4 / cover-up-04
                       :ARG0 c13-6
                       :ARG1 (c13-1 / shit
                                    :ARG1-of (c13-8 / clean-04)
                                    :mod (c13-0 / supremacy
                                                :ARG1-of (c13-5 / white-02))
                                    :location (c13-9 / she)))
       :ARG2-of (c13-3 / laugh-01
                       :manner (c13-7 / loud)
                       :mode expressive))

# ::snt outsold
# ::tokens ["outsold"]
# ::lemmas ["outsold"]
(c14-0 / outsold-01)

# ::snt A Coachella debut with no promo... everyday outflopped
# ::tokens ["A", "Coachella", "debut", "with", "no", "promo", "...", "everyday", "outflopped"]
# ::lemmas ["a", "Coachella", "debut", "with", "no", "promo", "...", "everyday", "outfloppe"]
(c15-7 / and
       :op1 (c15-8 / debut-01
                   :ARG2 (c15-3 / event
                                :name (c15-1 / name
                                             :op1 "Coachella"))
                   :manner (c15-4 / promote-02
                                  :polarity -))
       :op2 (c15-0 / outflop-01
                   :frequency (c15-2 / rate-entity-91
                                     :ARG3 (c15-6 / temporal-quantity
                                                  :unit (c15-5 / day)
                                                  :quant 1))))

# ::snt A top hit with million streams on Spotify? I dont need to.
# ::tokens ["A", "top", "hit", "with", "million", "streams", "on", "Spotify", "?", "I", "do", "nt", "need", "to", "."]
# ::lemmas ["a", "top", "hit", "with", "million", "stream", "on", "Spotify", "?", "i", "do", "not", "need", "to", "."]
(c16-1 / multi-sentence
       :snt1 (c16-4 / hit-02
                    :ARG2 (c16-2 / stream-03
                                 :medium (c16-6 / company
                                                :name (c16-0 / name
                                                             :op1 "Spotify"))
                                 :quant 1000000)
                    :polarity (c16-9 / amr-unknown)
                    :mod (c16-7 / top))
       :snt2 (c16-5 / need-01
                    :ARG0 (c16-8 / i)
                    :ARG1 (c16-3 / event
                                 :mod c16-8)
                    :polarity -))

# ::snt Dont worry, boo. I got them.
# ::tokens ["Do", "nt", "worry", ",", "boo", ".", "I", "got", "them", "."]
# ::lemmas ["do", "not", "worry", ",", "boo", ".", "i", "get", "they", "."]
(c17-2 / multi-sentence
       :snt1 (c17-4 / worry-02
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-0 / boo-01
                                 :ARG0 (c17-7 / you))
                    :polarity -
                    :mode imperative)
       :snt2 (c17-3 / get-01
                    :ARG0 (c17-5 / i)
                    :ARG1 (c17-6 / they)))

# ::snt She does free meet and greets on tour. For , there was loft , Red, club Red. Im not sure for Speak Now but Fearless has the tea party
# ::tokens ["She", "does", "free", "meet", "and", "greets", "on", "tour", ".", "For", ",", "there", "was", "loft", ",", "Red", ",", "club", "Red", ".", "I", "m", "not", "sure", "for", "Speak", "Now", "but", "Fearless", "has", "the", "tea", "party"]
# ::lemmas ["she", "do", "free", "meet", "and", "greet", "on", "tour", ".", "for", ",", "there", "be", "loft", ",", "Red", ",", "club", "Red", ".", "i", "m", "not", "sure", "for", "Speak", "Now", "but", "Fearless", "have", "the", "tea", "party"]
(c18-10 / multi-sentence
        :snt1 (c18-22 / do-02
                      :ARG0 (c18-0 / she)
                      :ARG1 (c18-7 / and
                                   :op1 (c18-4 / meet-03
                                               :ARG0 c18-0)
                                   :op2 (c18-8 / greet-01
                                               :ARG0 c18-0)
                                   :ARG1-of (c18-15 / free-03))
                      :time (c18-6 / tour-01))
        :snt2 (c18-17 / event
                      :mod (c18-2 / organization
                                  :name (c18-16 / name
                                                :op1 "Loft"))
                      :mod (c18-13 / club
                                   :name (c18-12 / name
                                                 :op1 "Red")))
        :snt3 (c18-9 / contrast-01
                     :ARG1 (c18-3 / sure-02
                                  :ARG0 (c18-21 / i)
                                  :ARG1 (c18-1 / speak-01
                                               :time (c18-18 / now))
                                  :polarity -)
                     :ARG2 (c18-5 / have-03
                                  :ARG0 (c18-19 / person
                                                :name (c18-14 / name
                                                              :op1 "Fearless"))
                                  :ARG1 (c18-11 / political-movement
                                                :name (c18-20 / name
                                                              :op1 "Tea"
                                                              :op2 "Party")))))

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c19-0 / yes)

# ::snt she did it
# ::tokens ["she", "did", "it"]
# ::lemmas ["she", "do", "it"]
(c20-0 / do-02
       :ARG0 (c20-2 / she)
       :ARG1 (c20-1 / it))

# ::snt yes she always does free meet &amp; greets at every tour where fans get picked at random from the crowd if they're being really extra
# ::tokens ["yes", "she", "always", "does", "free", "meet", "&", "amp", ";", "greets", "at", "every", "tour", "where", "fans", "get", "picked", "at", "random", "from", "the", "crowd", "if", "they", "'re", "being", "really", "extra"]
# ::lemmas ["yes", "she", "always", "do", "free", "meet", "&", "amp", ";", "greet", "at", "every", "tour", "where", "fan", "get", "pick", "at", "random", "from", "the", "crowd", "if", "they", "be", "be", "really", "extra"]
(c22-1 / multi-sentence
       :snt1 (c22-15 / do-02
                     :ARG0 (c22-2 / she)
                     :ARG1 (c22-13 / and
                                   :op1 (c22-6 / meet-03
                                               :ARG0 c22-2
                                               :ARG1-of (c22-0 / free-03))
                                   :op2 (c22-12 / amp))
                     :time (c22-10 / always))
       :snt2 (c22-14 / greet-01
                     :ARG1 (c22-8 / fan)
                     :location (c22-11 / tour-01
                                       :mod (c22-5 / every)
                                       :location-of (c22-7 / pick-01
                                                           :ARG0 (c22-9 / crowd)
                                                           :ARG1 c22-8
                                                           :manner (c22-4 / random)
                                                           :condition (c22-3 / extra
                                                                             :domain c22-8
                                                                             :degree (c22-16 / really))))))

# ::snt Go buy everyday sis.
# ::tokens ["Go", "buy", "everyday", "sis", "."]
# ::lemmas ["go", "buy", "everyday", "sis", "."]
(c23-6 / go-05
       :ARG0 (c23-1 / you)
       :ARG1 (c23-0 / buy-01
                    :ARG0 c23-1
                    :ARG1 (c23-5 / thing
                                 :ARG0-of (c23-4 / have-rel-role-91
                                                 :ARG1 c23-1
                                                 :ARG2 (c23-2 / sister))
                                 :frequency (c23-3 / rate-entity-91
                                                   :ARG3 (c23-8 / temporal-quantity
                                                                :unit (c23-7 / day)
                                                                :quant 1))))
       :mode imperative)

# ::snt Katy did the same exact thing but didn't brag about it.
# ::tokens ["Katy", "did", "the", "same", "exact", "thing", "but", "did", "n't", "brag", "about", "it", "."]
# ::lemmas ["Katy", "do", "the", "same", "exact", "thing", "but", "do", "not", "brag", "about", "it", "."]
(c24-5 / contrast-01
       :ARG1 (c24-7 / do-02
                    :ARG0 (c24-4 / person
                                 :name (c24-1 / name
                                              :op1 "Katy"))
                    :ARG1 (c24-6 / thing
                                 :ARG1-of (c24-2 / same-01)
                                 :mod (c24-3 / exact)))
       :ARG2 (c24-0 / brag-01
                    :ARG0 c24-4
                    :ARG1 c24-6
                    :polarity -))

# ::snt Ok. Gaga outtalented
# ::tokens ["Ok", ".", "Gaga", "outtalented"]
# ::lemmas ["ok", ".", "Gaga", "outtalente"]
(c25-1 / outtalented
       :domain (c25-3 / person
                      :name (c25-2 / name
                                   :op1 "Gaga"))
       :ARG1-of (c25-0 / okay-04))

# ::snt but gaga is a queen
# ::tokens ["but", "gaga", "is", "a", "queen"]
# ::lemmas ["but", "gaga", "be", "a", "queen"]
(c26-0 / contrast-01
       :ARG2 (c26-3 / queen
                    :domain (c26-2 / person
                                   :name (c26-1 / name
                                                :op1 "Gaga"))))

# ::snt this ain't even a competition dafuqq
# ::tokens ["this", "ai", "n't", "even", "a", "competition", "dafuqq"]
# ::lemmas ["this", "be", "not", "even", "a", "competition", "dafuqq"]
(c27-1 / say-01
       :ARG0 (c27-4 / i)
       :ARG1 (c27-3 / compete-01
                    :domain (c27-5 / this)
                    :mod (c27-2 / even)
                    :polarity -)
       :ARG2 (c27-0 / you))

# ::snt We been knew but we don't care.
# ::tokens ["We", "been", "knew", "but", "we", "do", "n't", "care", "."]
# ::lemmas ["we", "be", "know", "but", "we", "do", "not", "care", "."]
(c28-0 / contrast-01
       :ARG1 (c28-1 / know-01
                    :ARG1 (c28-3 / we))
       :ARG2 (c28-2 / care-01
                    :ARG0 c28-3
                    :polarity -))

# ::snt QUEEN
# ::tokens ["QUEEN"]
# ::lemmas ["queen"]
(c29-1 / person
       :name (c29-0 / name
                    :op1 "QUEEN"))

# ::snt Gaga outfanned
# ::tokens ["Gaga", "outfanned"]
# ::lemmas ["Gaga", "outfanne"]
(c30-1 / outfanned-01
       :ARG0 (c30-0 / gaga))

# ::snt secret sessions is better
# ::tokens ["secret", "sessions", "is", "better"]
# ::lemmas ["secret", "session", "be", "well"]
(c31-3 / have-degree-91
       :ARG1 (c31-2 / session
                    :mod (c31-0 / secret))
       :ARG2 (c31-4 / good-02
                    :ARG1 c31-2)
       :ARG3 (c31-1 / more))

# ::snt Some deserved. Some are not.
# ::tokens ["Some", "deserved", ".", "Some", "are", "not", "."]
# ::lemmas ["some", "deserve", ".", "some", "be", "not", "."]
(c32-1 / multi-sentence
       :snt1 (c32-4 / deserve-01
                    :ARG1 (c32-2 / some))
       :snt2 (c32-3 / deserve-01
                    :ARG1 (c32-0 / some)
                    :polarity -))
