# ::snt That's great so now she should be held accountable for lying and he should still go to therapy
# ::tokens ["That", "'s", "great", "so", "now", "she", "should", "be", "held", "accountable", "for", "lying", "and", "he", "should", "still", "go", "to", "therapy"]
# ::lemmas ["that", "be", "great", "so", "now", "she", "should", "be", "hold", "accountable", "for", "lying", "and", "he", "should", "still", "go", "to", "therapy"]
(c1-11 / great
       :domain (c1-8 / that)
       :ARG0-of (c1-6 / cause-01
                      :ARG1 (c1-10 / and
                                   :op1 (c1-3 / recommend-01
                                              :ARG1 (c1-4 / hold-02
                                                          :ARG1 (c1-9 / accountable-02
                                                                      :ARG0 (c1-2 / she)
                                                                      :ARG1 (c1-5 / lie-08
                                                                                  :ARG0 c1-2))))
                                   :op2 (c1-13 / recommend-01
                                               :ARG1 (c1-12 / go-02
                                                            :ARG0 (c1-7 / he)
                                                            :ARG4 (c1-14 / therapy)
                                                            :mod (c1-0 / still)))
                                   :time (c1-1 / now))))

# ::snt sentiment got our sense of reasoning beclouded at the bay of emotional pool
# ::tokens ["sentiment", "got", "our", "sense", "of", "reasoning", "beclouded", "at", "the", "bay", "of", "emotional", "pool"]
# ::lemmas ["sentiment", "get", "our", "sense", "of", "reasoning", "becloud", "at", "the", "bay", "of", "emotional", "pool"]
(c2-8 / get-04
      :ARG0 (c2-2 / sentence-01)
      :ARG1 (c2-6 / cloud-01
                  :ARG0 (c2-1 / bay
                              :consist-of (c2-5 / pool
                                                :mod (c2-4 / emotion)))
                  :ARG1 (c2-0 / sense-01
                              :ARG0 (c2-7 / we)
                              :ARG1 (c2-3 / reason-01
                                          :ARG0 c2-7))))

# ::snt Will and jada gave him m so that crying did help. Some people bought it
# ::tokens ["Will", "and", "jada", "gave", "him", "m", "so", "that", "crying", "did", "help", ".", "Some", "people", "bought", "it"]
# ::lemmas ["Will", "and", "jada", "give", "he", "m", "so", "that", "cry", "do", "help", ".", "some", "people", "buy", "it"]
(c3-3 / multi-sentence
      :snt1 (c3-13 / give-01
                   :ARG0 (c3-12 / and
                                :op1 (c3-7 / person
                                           :name (c3-2 / name
                                                       :op1 "Will"))
                                :op2 (c3-4 / person
                                           :name (c3-6 / name
                                                       :op1 "Jada")))
                   :ARG1 (c3-5 / string-entity
                               :value "m")
                   :ARG2 (c3-8 / he)
                   :purpose (c3-10 / help-01
                                   :ARG0 (c3-9 / cry-02)))
      :snt2 (c3-1 / buy-01
                  :ARG0 (c3-14 / person
                               :mod (c3-0 / some))
                  :ARG1 (c3-11 / it)))

# ::snt I was really hoping Tyrese would get it together, instead he's made things worse by his "display" on social media.
# ::tokens ["I", "was", "really", "hoping", "Tyrese", "would", "get", "it", "together", ",", "instead", "he", "'s", "made", "things", "worse", "by", "his", "\"", "display", "\"", "on", "social", "media", "."]
# ::lemmas ["i", "be", "really", "hope", "Tyrese", "would", "get", "it", "together", ",", "instead", "he", "be", "make", "thing", "bad", "by", "his", "\"", "display", "\"", "on", "social", "medium", "."]
(c4-4 / hope-01
      :ARG0 (c4-7 / i)
      :ARG1 (c4-9 / get-together-14
                  :ARG0 (c4-5 / person
                              :name (c4-0 / name
                                          :op1 "Tyrese"))
                  :ARG1 (c4-2 / it))
      :ARG1-of (c4-3 / real-04)
      :ARG1-of (c4-11 / instead-of-91
                      :ARG2 (c4-6 / worsen-01
                                  :ARG0 (c4-10 / display-01
                                               :ARG0 c4-5
                                               :medium (c4-1 / social-03))
                                  :ARG1 (c4-8 / thing))))

# ::snt Doesn't change the fact Tyrese went off the deep end &amp; it doesn't excuse his behavior
# ::tokens ["Does", "n't", "change", "the", "fact", "Tyrese", "went", "off", "the", "deep", "end", "&", "amp", ";", "it", "does", "n't", "excuse", "his", "behavior"]
# ::lemmas ["do", "not", "change", "the", "fact", "Tyrese", "go", "off", "the", "deep", "end", "&", "amp", ";", "it", "do", "not", "excuse", "his", "behavior"]
(c5-10 / and
       :op1 (c5-8 / change-01
                  :ARG1 (c5-11 / go-02
                               :ARG0 (c5-9 / and
                                           :op1 (c5-7 / person
                                                      :name (c5-2 / name
                                                                  :op1 "Tyrese"))
                                           :op2 (c5-3 / person
                                                      :name (c5-6 / name
                                                                  :op1 "&"
                                                                  :op2 "amp")))
                               :ARG1 (c5-0 / off
                                           :op1 (c5-5 / end
                                                      :mod (c5-12 / deep))))
                  :polarity -)
       :op2 (c5-4 / excuse-01
                  :ARG1 (c5-1 / behave-01
                              :ARG0 c5-7)
                  :ARG2 c5-11
                  :polarity -))

# ::snt Im disappointed at Tyrese behavior.
# ::tokens ["I", "m", "disappointed", "at", "Tyrese", "behavior", "."]
# ::lemmas ["i", "m", "disappointed", "at", "Tyrese", "behavior", "."]
(c6-4 / disappoint-01
      :ARG0 (c6-0 / behave-01
                  :ARG0 (c6-2 / person
                              :name (c6-1 / name
                                          :op1 "Tyrese")))
      :ARG1 (c6-3 / i))

# ::snt What a MOFO; put his ass UNDER the jail. Don't worry, my deceased brother was a private detective for missing kids!! Thx &amp; Jimmy D. &amp; Chris
# ::tokens ["What", "a", "MOFO", ";", "put", "his", "ass", "UNDER", "the", "jail", ".", "Do", "n't", "worry", ",", "my", "deceased", "brother", "was", "a", "private", "detective", "for", "missing", "kids", "!", "!", "Thx", "&", "amp", ";", "Jimmy", "D.", "&", "amp", ";", "Chris"]
# ::lemmas ["what", "a", "MOFO", ";", "put", "his", "ass", "under", "the", "jail", ".", "do", "not", "worry", ",", "my", "deceased", "brother", "be", "a", "private", "detective", "for", "miss", "kid", "!", "!", "Thx", "&", "amp", ";", "Jimmy", "D.", "&", "amp", ";", "Chris"]
(c7-13 / multi-sentence
       :snt1 (c7-10 / and
                    :op1 (c7-4 / MOFO
                               :degree (c7-0 / so))
                    :op2 (c7-21 / put-01
                                :ARG1 (c7-9 / ass
                                            :part-of (c7-5 / he))
                                :ARG2 (c7-19 / under
                                             :op1 (c7-8 / jail))))
       :snt2 (c7-23 / worry-01
                    :ARG0 (c7-3 / you)
                    :ARG1-of (c7-16 / cause-01
                                    :ARG0 (c7-26 / detective
                                                 :ARG1-of (c7-14 / private-02)
                                                 :beneficiary (c7-18 / miss-01
                                                                     :ARG1 (c7-6 / kid))
                                                 :domain (c7-2 / person
                                                               :ARG0-of (c7-24 / have-rel-role-91
                                                                               :ARG1 (c7-25 / i)
                                                                               :ARG2 (c7-12 / brother))
                                                               :ARG1-of (c7-17 / decease-01))))
                    :polarity -
                    :mode imperative)
       :snt3 (c7-7 / and
                   :op1 (c7-1 / person
                              :name (c7-20 / name
                                           :op1 "Thx"))
                   :op2 (c7-11 / person
                               :name (c7-15 / name
                                            :op1 "Jimmy"
                                            :op2 "D."
                                            :op3 "&amp"))
                   :op3 (c7-27 / person
                               :name (c7-22 / name
                                            :op1 "Chris"))))
