# ::snt Everyone knows that In Touch is ALWAYS wrong. No one who wants find out real factual information turn InTouch. It's just fun N gossip
# ::tokens ["Everyone", "knows", "that", "In", "Touch", "is", "ALWAYS", "wrong", ".", "No", "one", "who", "wants", "find", "out", "real", "factual", "information", "turn", "InTouch", ".", "It", "'s", "just", "fun", "N", "gossip"]
# ::lemmas ["everyone", "know", "that", "in", "Touch", "be", "always", "wrong", ".", "no", "one", "who", "wants", "find", "out", "real", "factual", "information", "turn", "InTouch", ".", "it", "be", "just", "fun", "n", "gossip"]
(c1-9 / multi-sentence
      :snt1 (c1-3 / know-01
                  :ARG0 (c1-14 / everyone)
                  :ARG1 (c1-18 / wrong-04
                               :ARG1 (c1-8 / broadcast-program
                                           :name (c1-12 / name
                                                        :op1 "In"
                                                        :op2 "Touch"))
                               :time (c1-6 / always)))
      :snt2 (c1-5 / turn-01
                  :ARG0 (c1-10 / no-one
                               :ARG0-of (c1-1 / want-01
                                              :ARG1 (c1-11 / find-out-03
                                                           :ARG0 c1-10
                                                           :ARG1 (c1-19 / information
                                                                        :mod (c1-16 / factual)
                                                                        :ARG1-of (c1-13 / real-04)))))
                  :ARG1 (c1-0 / broadcast-program
                              :name (c1-15 / name
                                           :op1 "In"
                                           :op2 "Touch")))
      :snt3 (c1-17 / fun-01
                   :ARG1 (c1-2 / it)
                   :mod (c1-4 / just))
      :snt4 (c1-7 / gossip
                  :mod c1-4))

# ::snt If only wishes came true
# ::tokens ["If", "only", "wishes", "came", "true"]
# ::lemmas ["if", "only", "wish", "come", "true"]
(c2-1 / have-condition-91
      :ARG2 (c2-2 / come-04
                  :ARG1 (c2-3 / wish-01)
                  :ARG2 (c2-4 / true-01
                              :ARG1 c2-3)
                  :mod (c2-0 / only)))

# ::snt Why not? NBC lost credibility hiring Megyn in the st place.
# ::tokens ["Why", "not", "?", "NBC", "lost", "credibility", "hiring", "Megyn", "in", "the", "st", "place", "."]
# ::lemmas ["why", "not", "?", "NBC", "lose", "credibility", "hire", "Megyn", "in", "the", "st", "place", "."]
(c3-0 / multi-sentence
      :snt1 (c3-8 / cause-01
                  :ARG0 (c3-10 / amr-unknown)
                  :ARG1 (c3-4 / have-polarity-91
                              :ARG2 -))
      :snt2 (c3-5 / lose-02
                  :ARG0 (c3-6 / publication
                              :name (c3-1 / name
                                          :op1 "NBC"))
                  :ARG1 (c3-12 / credibility)
                  :ARG3 (c3-9 / hire-01
                              :ARG0 c3-6
                              :ARG1 (c3-2 / person
                                          :name (c3-7 / name
                                                      :op1 "Megyn"))
                              :location (c3-11 / place
                                               :mod (c3-3 / st)))))
