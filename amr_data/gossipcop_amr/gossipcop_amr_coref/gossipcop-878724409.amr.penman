# ::snt This will forever be a mood
# ::tokens ["This", "will", "forever", "be", "a", "mood"]
# ::lemmas ["this", "will", "forever", "be", "a", "mood"]
(c1-1 / mood
      :domain (c1-2 / this)
      :duration (c1-0 / forever))

# ::snt was wrong about Justin too Selena was meant for him.
# ::tokens ["was", "wrong", "about", "Justin", "too", "Selena", "was", "meant", "for", "him", "."]
# ::lemmas ["be", "wrong", "about", "Justin", "too", "Selena", "be", "mean", "for", "he", "."]
(c2-5 / wrong-04
      :ARG2 (c2-4 / person
                  :name (c2-1 / name
                              :op1 "Justin"))
      :mod (c2-6 / too)
      :ARG1-of (c2-0 / mean-02
                     :ARG0 (c2-2 / person
                                 :name (c2-3 / name
                                             :op1 "Selena"))
                     :ARG2 c2-4))

# ::snt is suffering from "God Given Talent" Privilege! Extremely talented/making Zillions from her Talents. I don't recommend HOWEVER you get your Political, Investment or "Love Life Advice" from her.
# ::tokens ["is", "suffering", "from", "\"", "God", "Given", "Talent", "\"", "Privilege", "!", "Extremely", "talented", "/", "making", "Zillions", "from", "her", "Talents", ".", "I", "do", "n't", "recommend", "HOWEVER", "you", "get", "your", "Political", ",", "Investment", "or", "\"", "Love", "Life", "Advice", "\"", "from", "her", "."]
# ::lemmas ["be", "suffer", "from", "\"", "God", "Given", "Talent", "\"", "Privilege", "!", "extremely", "talented", "/", "make", "zillion", "from", "her", "Talents", ".", "i", "do", "not", "recommend", "however", "you", "get", "your", "Political", ",", "Investment", "or", "\"", "Love", "Life", "Advice", "\"", "from", "she", "."]
(c3-16 / multi-sentence
       :snt1 (c3-0 / suffer-01
                   :ARG0 (c3-6 / she)
                   :ARG1 (c3-25 / privilege-01
                                :ARG2 (c3-12 / talent)
                                :ARG1-of (c3-13 / give-01
                                                :ARG0 (c3-17 / person
                                                             :name (c3-21 / name
                                                                          :op1 "God"))
                                                :ARG2 c3-6)))
       :snt2 (c3-5 / slash
                   :op1 (c3-19 / talent
                               :degree (c3-24 / extreme))
                   :op2 (c3-10 / make-05
                               :ARG0 c3-6
                               :ARG1 (c3-20 / multiple
                                            :op1 (c3-18 / monetary-quantity
                                                        :unit (c3-28 / dollar)
                                                        :quant 1000000000000))
                               :ARG2 (c3-26 / talent
                                            :poss (c3-22 / she))))
       :snt3 (c3-23 / recommend-01
                    :ARG0 (c3-27 / i)
                    :ARG1 (c3-1 / thing
                                :manner-of (c3-3 / get-01
                                                 :ARG0 (c3-8 / you)
                                                 :ARG1 (c3-7 / or
                                                             :op1 (c3-14 / advice
                                                                         :topic (c3-4 / politics))
                                                             :op2 (c3-9 / Investment)
                                                             :op3 (c3-11 / advice
                                                                         :topic (c3-2 / love-01
                                                                                      :ARG1 (c3-15 / life))))
                                                 :ARG2 c3-22))
                    :polarity -))

# ::snt Poor child mistakes make a person stronger.she will grow up someday
# ::tokens ["Poor", "child", "mistakes", "make", "a", "person", "stronger.she", "will", "grow", "up", "someday"]
# ::lemmas ["poor", "child", "mistake", "make", "a", "person", "stronger.she", "will", "grow", "up", "someday"]
(c4-1 / multi-sentence
      :snt1 (c4-4 / make-02
                  :ARG0 (c4-10 / mistake-02
                               :ARG0 (c4-8 / child
                                           :mod (c4-5 / poor)))
                  :ARG1 (c4-3 / strong-02
                              :ARG1 (c4-2 / person)
                              :ARG2-of (c4-6 / have-degree-91
                                             :ARG1 c4-2
                                             :ARG3 (c4-7 / more))))
      :snt2 (c4-9 / grow-up-04
                  :ARG1 (c4-0 / she)
                  :time (c4-11 / someday)))

# ::snt And eat a donut
# ::tokens ["And", "eat", "a", "donut"]
# ::lemmas ["and", "eat", "a", "donut"]
(c5-3 / and
      :op2 (c5-1 / eat-01
                 :ARG0 (c5-2 / you)
                 :ARG1 (c5-0 / donut)
                 :mode imperative))

# ::snt I'll never forgive her for destroying Tom Hiddleston's career and breaking heart.
# ::tokens ["I", "'ll", "never", "forgive", "her", "for", "destroying", "Tom", "Hiddleston", "'s", "career", "and", "breaking", "heart", "."]
# ::lemmas ["i", "'ll", "never", "forgive", "she", "for", "destroy", "Tom", "Hiddleston", "'s", "career", "and", "break", "heart", "."]
(c6-0 / forgive-01
      :ARG0 (c6-7 / i)
      :ARG1 (c6-3 / she)
      :ARG2 (c6-8 / and
                  :op1 (c6-9 / destroy-01
                             :ARG0 c6-3
                             :ARG1 (c6-6 / career
                                         :poss (c6-5 / person
                                                     :name (c6-2 / name
                                                                 :op1 "Tom"
                                                                 :op2 "Hiddleston"))))
                  :op2 (c6-1 / break-heart-31
                             :ARG0 c6-3))
      :time (c6-4 / ever)
      :polarity -)

# ::snt hahaa!!! these two! "strumming a guitar doesn't count!
# ::tokens ["hahaa", "!", "!", "!", "these", "two", "!", "\"", "strumming", "a", "guitar", "does", "n't", "count", "!"]
# ::lemmas ["hahaa", "!", "!", "!", "these", "two", "!", "\"", "strum", "a", "guitar", "do", "not", "count", "!"]
(c8-1 / count-04
      :ARG1 (c8-3 / string-01
                  :ARG1 (c8-0 / guitar))
      :mod (c8-2 / ah
                 :mode expressive)
      :polarity -
      :mode expressive)

# ::snt Damit wird die Sache auch nicht besser. Nur Geldreinholen
# ::tokens ["Damit", "wird", "die", "Sache", "auch", "nicht", "besser", ".", "Nur", "Geldreinholen"]
# ::lemmas ["Damit", "wird", "die", "Sache", "auch", "nicht", "besser", ".", "Nur", "Geldreinholen"]
(c9-1 / multi-sentence
      :snt1 (c9-5 / wrong-02
                  :ARG1 (c9-7 / die-Sache
                              :mod (c9-0 / besser
                                         :mod (c9-2 / nicht)))
                  :mod (c9-6 / damit))
      :snt2 (c9-4 / person
                  :name (c9-3 / name
                              :op1 "Nur"
                              :op2 "Geldreinholen")))

# ::snt :Too cute at Percy Warner Park.
# ::tokens [":", "Too", "cute", "at", "Percy", "Warner", "Park", "."]
# ::lemmas [":", "too", "cute", "at", "Percy", "Warner", "Park", "."]
(c10-0 / cute
       :degree (c10-3 / too)
       :location (c10-2 / park
                        :name (c10-1 / name
                                     :op1 "Percy"
                                     :op2 "Warner"
                                     :op3 "Park")))

# ::snt Love these two!
# ::tokens ["Love", "these", "two", "!"]
# ::lemmas ["love", "these", "two", "!"]
(c11-1 / love-01
       :ARG1 (c11-0 / person
                    :mod (c11-2 / this)
                    :quant 2))

# ::snt Who are the people behind???
# ::tokens ["Who", "are", "the", "people", "behind", "?", "?", "?"]
# ::lemmas ["who", "be", "the", "people", "behind", "?", "?", "?"]
(c13-1 / person
       :location (c13-0 / behind)
       :domain (c13-2 / amr-unknown))

# ::snt So amazing
# ::tokens ["So", "amazing"]
# ::lemmas ["so", "amazing"]
(c14-1 / amaze-01
       :degree (c14-0 / so))

# ::snt Oh my. Someone forced this bitch to promote the nominations. Lmao.
# ::tokens ["Oh", "my", ".", "Someone", "forced", "this", "bitch", "to", "promote", "the", "nominations", ".", "Lmao", "."]
# ::lemmas ["oh", "my", ".", "someone", "force", "this", "bitch", "to", "promote", "the", "nomination", ".", "Lmao", "."]
(c15-3 / multi-sentence
       :snt1 (c15-0 / oh-my-god
                    :mode expressive)
       :snt2 (c15-1 / force-01
                    :ARG0 (c15-5 / someone)
                    :ARG1 (c15-2 / bitch
                                 :mod (c15-9 / this))
                    :ARG2 (c15-6 / promote-02
                                 :ARG0 c15-2
                                 :ARG1 (c15-4 / nominate-01)))
       :snt3 (c15-7 / laugh-01
                    :ARG0 (c15-8 / i)
                    :manner (c15-10 / loud)
                    :mode expressive))

# ::snt How to vote???
# ::tokens ["How", "to", "vote", "?", "?", "?"]
# ::lemmas ["how", "to", "vote", "?", "?", "?"]
(c16-0 / vote-01
       :manner (c16-1 / amr-unknown))

# ::snt MY SWEERAN HEARTTTT
# ::tokens ["MY", "SWEERAN", "HEARTTTT"]
# ::lemmas ["my", "sweeran", "heartttt"]
(c17-2 / thing
       :name (c17-0 / name
                    :op1 "SWEERAN"
                    :op2 "HEARTTTT")
       :poss (c17-1 / i))

# ::snt She said "Drakes gonna win with such conviction." I love them together." Can you imagine both of them on" the Voice"
# ::tokens ["She", "said", "\"", "Drakes", "gon", "na", "win", "with", "such", "conviction", ".", "\"", "I", "love", "them", "together", ".", "\"", "Can", "you", "imagine", "both", "of", "them", "on", "\"", "the", "Voice", "\""]
# ::lemmas ["she", "say", "\"", "drake", "going", "to", "win", "with", "such", "conviction", ".", "\"", "i", "love", "they", "together", ".", "\"", "can", "you", "imagine", "both", "of", "they", "on", "\"", "the", "Voice", "\""]
(c18-3 / multi-sentence
       :snt1 (c18-5 / say-01
                    :ARG0 (c18-0 / she)
                    :ARG1 (c18-11 / win-01
                                  :ARG0 (c18-9 / person
                                               :name (c18-4 / name
                                                            :op1 "Drakes"))
                                  :manner (c18-12 / conviction-02
                                                  :degree (c18-16 / such))))
       :snt2 (c18-10 / love-01
                     :ARG0 (c18-13 / i)
                     :ARG1 (c18-14 / they
                                   :mod (c18-1 / both))
                     :manner (c18-15 / together))
       :snt3 (c18-6 / possible-01
                    :ARG1 (c18-7 / imagine-01
                                 :ARG0 (c18-2 / you)
                                 :ARG1 c18-14
                                 :medium (c18-8 / voice))))

# ::snt she's so funny. i love her &amp; ed. LEGENDS
# ::tokens ["she", "'s", "so", "funny", ".", "i", "love", "her", "&", "amp", ";", "ed", ".", "LEGENDS"]
# ::lemmas ["she", "be", "so", "funny", ".", "i", "love", "she", "&", "amp", ";", "ed", ".", "legend"]
(c19-2 / multi-sentence
       :snt1 (c19-0 / funny-02
                    :ARG1 (c19-4 / she)
                    :degree (c19-1 / so))
       :snt2 (c19-5 / love-01
                    :ARG0 (c19-7 / i)
                    :ARG1 (c19-8 / and
                                 :op1 (c19-10 / she)
                                 :op2 (c19-6 / person
                                             :name (c19-3 / name
                                                          :op1 "amp"))
                                 :op3 (c19-9 / law
                                             :name c19-3
                                             :op1 "Ed"))))

# ::snt if drake or any male wins I will scream
# ::tokens ["if", "drake", "or", "any", "male", "wins", "I", "will", "scream"]
# ::lemmas ["if", "drake", "or", "any", "male", "win", "i", "will", "scream"]
(c20-3 / scream-01
       :ARG0 (c20-6 / i)
       :condition (c20-5 / win-01
                         :ARG0 (c20-0 / or
                                      :op1 (c20-4 / person
                                                  :name (c20-1 / name
                                                               :op1 " drake"))
                                      :op2 (c20-2 / male
                                                  :mod (c20-7 / any)))))

# ::snt SHES SO CUTEE
# ::tokens ["SHES", "SO", "CUTEE"]
# ::lemmas ["SHES", "SO", "CUTEE"]
(c21-2 / show-01
       :ARG1 (c21-0 / cut-02
                    :degree (c21-1 / so)))

# ::snt i was just trying to make a joke...
# ::tokens ["i", "was", "just", "trying", "to", "make", "a", "joke", "..."]
# ::lemmas ["i", "be", "just", "try", "to", "make", "a", "joke", "..."]
(c22-3 / try-01
       :ARG0 (c22-2 / i)
       :ARG1 (c22-1 / joke-01
                    :ARG0 c22-2)
       :mod (c22-0 / just))

# ::snt its called middle finger in case you didnt know
# ::tokens ["its", "called", "middle", "finger", "in", "case", "you", "did", "nt", "know"]
# ::lemmas ["its", "call", "middle", "finger", "in", "case", "you", "do", "not", "know"]
(c23-4 / call-01
       :ARG1 (c23-5 / it)
       :ARG2 (c23-0 / finger
                    :mod (c23-2 / middle))
       :condition (c23-3 / know-01
                         :ARG0 (c23-1 / you)
                         :polarity -))

# ::snt I'm crying I love them so much!
# ::tokens ["I", "'m", "crying", "I", "love", "them", "so", "much", "!"]
# ::lemmas ["i", "be", "cry", "i", "love", "they", "so", "much", "!"]
(c24-0 / multi-sentence
       :snt1 (c24-5 / cry-02
                    :ARG0 (c24-6 / i))
       :snt2 (c24-4 / love-01
                    :ARG0 (c24-2 / i)
                    :ARG1 (c24-7 / they)
                    :degree (c24-3 / much
                                   :degree (c24-1 / so))))

# ::snt Ok, Thank you
# ::tokens ["Ok", ",", "Thank", "you"]
# ::lemmas ["ok", ",", "thank", "you"]
(c25-2 / thank-01
       :ARG0 (c25-1 / i)
       :ARG1 (c25-0 / you))

# ::snt One time per day per category
# ::tokens ["One", "time", "per", "day", "per", "category"]
# ::lemmas ["One", "time", "per", "day", "per", "category"]
(c26-0 / rate-entity-91
       :ARG1 (c26-2 / thing
                    :quant 1)
       :ARG2 (c26-3 / temporal-quantity
                    :unit (c26-4 / day)
                    :quant 1)
       :ARG3 (c26-1 / category))

# ::snt I can retweet one time per day each category or many times??
# ::tokens ["I", "can", "retweet", "one", "time", "per", "day", "each", "category", "or", "many", "times", "?", "?"]
# ::lemmas ["i", "can", "retweet", "one", "time", "per", "day", "each", "category", "or", "many", "time", "?", "?"]
(c27-4 / possible-01
       :ARG1 (c27-1 / retribute-01
                    :ARG0 (c27-7 / i)
                    :ARG1 (c27-6 / category
                                 :mod (c27-3 / each))
                    :frequency (c27-10 / rate-entity-91
                                       :ARG2 (c27-8 / temporal-quantity
                                                    :unit (c27-9 / day)
                                                    :quant 1)
                                       :ARG1 1)
                    :frequency (c27-5 / rate-entity-91
                                      :ARG1 (c27-0 / many)
                                      :ARG2 c27-8))
       :polarity (c27-2 / amr-unknown))

# ::snt Yup on Twitter
# ::tokens ["Yup", "on", "Twitter"]
# ::lemmas ["yup", "on", "Twitter"]
(c28-1 / yup
       :medium (c28-2 / publication
                      :name (c28-0 / name
                                   :op1 "Twitter")))

# ::snt Can we vote if we don't live in US??
# ::tokens ["Can", "we", "vote", "if", "we", "do", "n't", "live", "in", "US", "?", "?"]
# ::lemmas ["can", "we", "vote", "if", "we", "do", "not", "live", "in", "US", "?", "?"]
(c29-2 / possible-01
       :polarity (c29-6 / amr-unknown)
       :ARG1 (c29-1 / vote-01
                    :ARG0 (c29-4 / we))
       :condition (c29-3 / live-01
                         :ARG0 c29-4
                         :location (c29-5 / country
                                          :name (c29-0 / name
                                                       :op1 "US"))
                         :polarity -))

# ::snt The friendship is life! I love them both and they deserve no hate
# ::tokens ["The", "friendship", "is", "life", "!", "I", "love", "them", "both", "and", "they", "deserve", "no", "hate"]
# ::lemmas ["the", "friendship", "be", "life", "!", "i", "love", "they", "both", "and", "they", "deserve", "no", "hate"]
(c30-2 / multi-sentence
       :snt1 (c30-4 / life
                    :domain (c30-0 / friendship))
       :snt2 (c30-7 / and
                    :op1 (c30-9 / love-01
                                :ARG0 (c30-6 / i)
                                :ARG1 (c30-5 / they
                                             :quant (c30-1 / both)))
                    :op2 (c30-8 / deserve-01
                                :ARG0 c30-5
                                :ARG1 (c30-3 / hate-01)
                                :polarity -)))

# ::snt Priceless
# ::tokens ["Priceless"]
# ::lemmas ["priceless"]
(c31-0 / price-01
       :polarity -)

# ::snt Always love my !
# ::tokens ["Always", "love", "my", "!"]
# ::lemmas ["always", "love", "my", "!"]
(c32-0 / love-01
       :ARG1 (c32-1 / i)
       :time (c32-2 / always)
       :mode expressive)

# ::snt Awwww they are the cutest
# ::tokens ["Awwww", "they", "are", "the", "cutest"]
# ::lemmas ["Awwww", "they", "be", "the", "cut"]
(c33-1 / have-degree-91
       :ARG1 (c33-3 / they)
       :ARG2 (c33-0 / cute)
       :ARG3 (c33-2 / most))

# ::snt Just some good ol Sweeran banter! I love it!
# ::tokens ["Just", "some", "good", "ol", "Sweeran", "banter", "!", "I", "love", "it", "!"]
# ::lemmas ["just", "some", "good", "ol", "Sweeran", "banter", "!", "i", "love", "it", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-1 / banter-01
                    :ARG2 (c34-6 / person
                                 :name (c34-3 / name
                                              :op1 "Sweeran"))
                    :quant (c34-4 / some)
                    :ARG1-of (c34-10 / good-02)
                    :mod (c34-0 / old)
                    :mod (c34-8 / just)
                    :mode expressive)
       :snt2 (c34-7 / love-01
                    :ARG0 (c34-9 / i)
                    :ARG1 (c34-5 / it)))

# ::snt Sweeran
# ::tokens ["Sweeran"]
# ::lemmas ["sweeran"]
(c35-1 / person
       :name (c35-0 / name
                    :op1 "Sweeran"))

# ::snt when ur friend knows that ure tired af but still ask u if ure okay
# ::tokens ["when", "ur", "friend", "knows", "that", "ure", "tired", "af", "but", "still", "ask", "u", "if", "ure", "okay"]
# ::lemmas ["when", "ur", "friend", "know", "that", "ure", "tired", "af", "but", "still", "ask", "u", "if", "ure", "okay"]
(c36-8 / contrast-01
       :ARG1 (c36-6 / know-01
                    :ARG0 (c36-7 / person
                                 :ARG0-of (c36-5 / have-rel-role-91
                                                 :ARG1 (c36-2 / you)
                                                 :ARG2 (c36-0 / friend)))
                    :ARG1 (c36-10 / tire-01
                                  :ARG1 c36-2
                                  :mod (c36-4 / af)))
       :ARG2 (c36-9 / ask-01
                    :ARG0 c36-7
                    :ARG1 (c36-11 / truth-value
                                  :polarity-of (c36-1 / okay-04
                                                      :ARG1 c36-2))
                    :ARG2 c36-2
                    :mod (c36-3 / still)))

# ::snt omg, they are so cute and funnyand omg again she posted about it ... so there's a big possibility she'll attend maybe uhhhh, swifties, please vote, vote, vote!
# ::tokens ["omg", ",", "they", "are", "so", "cute", "and", "funnyand", "omg", "again", "she", "posted", "about", "it", "...", "so", "there", "'s", "a", "big", "possibility", "she", "'ll", "attend", "maybe", "uhhhh", ",", "swifties", ",", "please", "vote", ",", "vote", ",", "vote", "!"]
# ::lemmas ["omg", ",", "they", "be", "so", "cute", "and", "funnyand", "omg", "again", "she", "post", "about", "it", "...", "so", "there", "be", "a", "big", "possibility", "she", "'ll", "attend", "maybe", "uhhhh", ",", "swiftie", ",", "please", "vote", ",", "vote", ",", "vote", "!"]
(c37-9 / and
       :op1 (c37-14 / cute
                    :domain (c37-10 / they)
                    :degree (c37-0 / so)
                    :ARG1-of (c37-15 / funny-02))
       :op2 (c37-17 / post-01
                    :ARG0 (c37-3 / she)
                    :topic (c37-18 / it)
                    :mod (c37-8 / again)
                    :mod (c37-4 / oh-my-god
                                :mode expressive))
       :ARG0-of (c37-11 / cause-01
                        :ARG1 (c37-13 / possible-01
                                      :ARG1 (c37-7 / attend-01
                                                   :ARG0 c37-3
                                                   :ARG1 (c37-19 / and
                                                                 :op1 (c37-2 / person
                                                                             :name (c37-16 / name
                                                                                           :op1 " swifties"))
                                                                 :op2 (c37-6 / vote-01
                                                                             :ARG0 c37-3
                                                                             :mode imperative
                                                                             :polite +)
                                                                 :op3 (c37-1 / vote-01
                                                                             :ARG0 (c37-5 / you)
                                                                             :mode imperative))
                                                   :mod (c37-12 / big)))))

# ::snt my favorite people !!!!
# ::tokens ["my", "favorite", "people", "!", "!", "!", "!"]
# ::lemmas ["my", "favorite", "people", "!", "!", "!", "!"]
(c38-1 / person
       :ARG1-of (c38-0 / favor-01
                       :ARG0 (c38-2 / i)))

# ::snt Wildest dreams was mine
# ::tokens ["Wildest", "dreams", "was", "mine"]
# ::lemmas ["wildest", "dream", "be", "mine"]
(c39-4 / dream-01
       :ARG0 (c39-3 / i)
       :ARG1-of (c39-1 / have-degree-91
                       :ARG2 (c39-2 / wild)
                       :ARG3 (c39-0 / most)))

# ::snt its better to get your heart broken from a girl rather than a guy
# ::tokens ["its", "better", "to", "get", "your", "heart", "broken", "from", "a", "girl", "rather", "than", "a", "guy"]
# ::lemmas ["its", "well", "to", "get", "your", "heart", "break", "from", "a", "girl", "rather", "than", "a", "guy"]
(c40-3 / have-degree-91
       :ARG1 (c40-7 / get-04
                    :ARG0 (c40-1 / you
                                 :part (c40-4 / heart))
                    :ARG1 (c40-0 / break-heart-31
                                 :ARG0 c40-1
                                 :ARG1 c40-4
                                 :ARG2 (c40-5 / girl))
                    :ARG1-of (c40-6 / instead-of-91
                                    :ARG2 (c40-9 / guy)))
       :ARG2 (c40-8 / good-02
                    :ARG1 c40-7)
       :ARG3 (c40-2 / more))

# ::snt NooooNarrator: she lied
# ::tokens ["NooooNarrator", ":", "she", "lied"]
# ::lemmas ["NooooNarrator", ":", "she", "lie"]
(c41-2 / say-01
       :ARG0 (c41-3 / person
                    :ARG0-of (c41-1 / narrate-01))
       :ARG1 (c41-4 / lie-08
                    :ARG0 (c41-0 / she)))

# ::snt aw have i broken your heart?
# ::tokens ["aw", "have", "i", "broken", "your", "heart", "?"]
# ::lemmas ["aw", "have", "i", "break", "your", "heart", "?"]
(c42-0 / break-heart-31
       :ARG0 (c42-3 / i)
       :ARG1 (c42-2 / heart
                    :part-of (c42-1 / you))
       :polarity (c42-4 / amr-unknown)
       :mod (c42-5 / aw
                   :mode expressive))

# ::snt that's what i listen to whenever you bully me in van
# ::tokens ["that", "'s", "what", "i", "listen", "to", "whenever", "you", "bully", "me", "in", "van"]
# ::lemmas ["that", "be", "what", "i", "listen", "to", "whenever", "you", "bully", "i", "in", "van"]
(c43-4 / listen-01
       :ARG0 (c43-5 / i)
       :ARG1 (c43-6 / that)
       :time (c43-0 / bully-01
                    :ARG0 (c43-1 / you)
                    :ARG1 c43-5
                    :location (c43-3 / van)
                    :mod (c43-2 / any)))

# ::snt Also a classic t-swizzle ballad
# ::tokens ["Also", "a", "classic", "t", "-", "swizzle", "ballad"]
# ::lemmas ["also", "a", "classic", "t", "-", "swizzle", "ballad"]
(c44-0 / ballad
       :mod (c44-1 / classic)
       :mod (c44-3 / izzle-01
                   :ARG1 (c44-2 / t-swizzle))
       :mod (c44-4 / also))

# ::snt But White Horse though
# ::tokens ["But", "White", "Horse", "though"]
# ::lemmas ["but", "White", "Horse", "though"]
(c45-0 / contrast-01
       :ARG2 (c45-3 / organization
                    :name (c45-2 / name
                                 :op1 "White"
                                 :op2 "Horse"))
       :ARG1-of (c45-1 / have-concession-91))

# ::snt Babe, she's trash what do you expect
# ::tokens ["Babe", ",", "she", "'s", "trash", "what", "do", "you", "expect"]
# ::lemmas ["Babe", ",", "she", "be", "trash", "what", "do", "you", "expect"]
(c46-3 / expect-01
       :ARG0 (c46-0 / you)
       :ARG1 (c46-2 / amr-unknown)
       :ARG1-of (c46-4 / cause-01
                       :ARG0 (c46-6 / trash-01
                                    :ARG0 (c46-1 / she)))
       :mod (c46-5 / abe
                   :mode expressive))

# ::snt i just reaaaaaalllllllllly h8 her
# ::tokens ["i", "just", "reaaaaaalllllllllly", "h8", "her"]
# ::lemmas ["i", "just", "reaaaaaalllllllllly", "h8", "she"]
(c47-4 / ask-01
       :ARG0 (c47-3 / i)
       :ARG2 (c47-0 / she)
       :mod (c47-2 / just)
       :ARG1-of (c47-1 / real-04))

# ::snt For a person who claims to be a writer, seems to be lacking of research and perspective. Hmm. .
# ::tokens ["For", "a", "person", "who", "claims", "to", "be", "a", "writer", ",", "seems", "to", "be", "lacking", "of", "research", "and", "perspective", ".", "Hmm", ".", "."]
# ::lemmas ["for", "a", "person", "who", "claim", "to", "be", "a", "writer", ",", "seem", "to", "be", "lack", "of", "research", "and", "perspective", ".", "hmm", ".", "."]
(c48-0 / multi-sentence
       :snt1 (c48-2 / seem-01
                    :ARG1 (c48-6 / lack-01
                                 :ARG0 (c48-5 / person
                                              :ARG0-of (c48-7 / claim-01
                                                              :ARG1 (c48-1 / person
                                                                           :ARG0-of (c48-8 / write-01))))
                                 :ARG1 (c48-9 / and
                                              :op1 (c48-3 / research-01)
                                              :op2 (c48-10 / perspective))))
       :snt2 (c48-4 / hmm
                    :mode expressive))

# ::snt She already did. Tons of them. You obviously just want to be in the stereotype/bandwagon. Can't miss the hype, can't you.
# ::tokens ["She", "already", "did", ".", "Tons", "of", "them", ".", "You", "obviously", "just", "want", "to", "be", "in", "the", "stereotype", "/", "bandwagon", ".", "Ca", "n't", "miss", "the", "hype", ",", "ca", "n't", "you", "."]
# ::lemmas ["she", "already", "do", ".", "ton", "of", "they", ".", "you", "obviously", "just", "want", "to", "be", "in", "the", "stereotype", "/", "bandwagon", ".", "can", "not", "miss", "the", "hype", ",", "can", "not", "you", "."]
(c49-13 / multi-sentence
        :snt1 (c49-18 / do-02
                      :ARG0 (c49-0 / she)
                      :time (c49-11 / already))
        :snt2 (c49-10 / tons
                      :topic (c49-15 / they))
        :snt3 (c49-17 / want-01
                      :ARG0 (c49-6 / you)
                      :ARG1 (c49-16 / participate-01
                                    :ARG0 c49-6
                                    :ARG1 (c49-4 / slash
                                                 :op1 (c49-3 / stereotype-01)
                                                 :op2 (c49-1 / wagon)))
                      :ARG1-of (c49-5 / obvious-01)
                      :mod (c49-9 / just))
        :snt4 (c49-14 / possible-01
                      :ARG1 (c49-7 / miss-02
                                   :ARG0 (c49-12 / you)
                                   :ARG1 (c49-8 / hype-01))
                      :ARG1-of (c49-2 / possible-01
                                      :polarity -)
                      :polarity -))

# ::snt Oh same same. Hndi din unli data pag billplay plan lng ata may unli eh
# ::tokens ["Oh", "same", "same", ".", "Hndi", "din", "unli", "data", "pag", "billplay", "plan", "lng", "ata", "may", "unli", "eh"]
# ::lemmas ["oh", "same", "same", ".", "Hndi", "din", "unli", "datum", "pag", "billplay", "plan", "lng", "ata", "may", "unli", "eh"]
(c50-3 / multi-sentence
       :snt1 (c50-5 / same-01
                    :mod (c50-0 / oh
                                :mode expressive))
       :snt2 (c50-11 / and
                     :op1 (c50-13 / din-01
                                  :ARG0 (c50-2 / you)
                                  :ARG1 (c50-9 / data
                                               :poss (c50-12 / you)))
                     :op2 (c50-8 / plan-01
                                 :ARG1 (c50-4 / play-01))
                     :op3 (c50-14 / possible-01
                                  :ARG1 (c50-1 / unli
                                               :ARG1-of (c50-7 / have-quant-91
                                                               :ARG3 (c50-6 / equal)
                                                               :ARG4 (c50-10 / they))
                                               :polarity -))))
