# ::snt Qu pena
# ::tokens ["Qu", "pena"]
# ::lemmas ["Qu", "pena"]
(c1-0 / qu
      :mode expressive)

# ::snt Lo que nos enseo House Of Cards es que siempre podes matar a alguien en una serie\movie.
# ::tokens ["Lo", "que", "nos", "enseo", "House", "Of", "Cards", "es", "que", "siempre", "podes", "matar", "a", "alguien", "en", "una", "serie\\movie", "."]
# ::lemmas ["Lo", "que", "nos", "enseo", "House", "Of", "Cards", "es", "que", "siempre", "pode", "matar", "a", "alguien", "en", "una", "serie\\movie", "."]
(c2-7 / enseo
      :op1 (c2-2 / broadcast-program
                 :name (c2-4 / name
                             :op1 "House"
                             :op2 "Of"
                             :op3 "Cards"))
      :ARG1-of (c2-11 / cause-01
                      :ARG0 (c2-9 / pode-01
                                  :ARG0 (c2-3 / you)
                                  :ARG1 (c2-5 / person
                                              :ARG0-of (c2-8 / have-rel-role-91
                                                             :ARG2 (c2-12 / alguien)))
                                  :ARG2 (c2-0 / film
                                              :mod (c2-6 / serie)
                                              :mod (c2-13 / una))
                                  :manner (c2-1 / siempre)))
      :mod (c2-10 / lo
                  :mode expressive))

# ::snt No necesitan maquillaje, ni filtros...ni retoques...solo les alcanza con sonreir
# ::tokens ["No", "necesitan", "maquillaje", ",", "ni", "filtros", "...", "ni", "retoques", "...", "solo", "les", "alcanza", "con", "sonreir"]
# ::lemmas ["no", "necesitan", "maquillaje", ",", "ni", "filtros", "...", "ni", "retoque", "...", "solo", "les", "alcanza", "con", "sonreir"]
(c3-7 / and
      :op1 (c3-3 / maquillaje
                 :mod (c3-2 / necesitan)
                 :polarity -)
      :op2 (c3-0 / filtros
                 :polarity -)
      :op3 (c3-5 / retoques
                 :polarity -)
      :op4 (c3-1 / olo
                 :op1 (c3-6 / alcanza)
                 :op2 (c3-4 / sonreir)))

# ::snt I know ,hard to imagine
# ::tokens ["I", "know", ",", "hard", "to", "imagine"]
# ::lemmas ["i", "know", ",", "hard", "to", "imagine"]
(c4-2 / know-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-1 / hard-02
                  :ARG1 (c4-0 / imagine-01)))

# ::snt A fourth would be so much better..
# ::tokens ["A", "fourth", "would", "be", "so", "much", "better", ".."]
# ::lemmas ["a", "fourth", "would", "be", "so", "much", "well", ".."]
(c5-5 / good-02
      :ARG1 (c5-0 / ordinal-entity
                  :value 4)
      :ARG2-of (c5-4 / have-degree-91
                     :ARG1 c5-0
                     :ARG3 (c5-1 / more
                                 :quant (c5-3 / much
                                              :degree (c5-2 / so)))))

# ::snt Just love.. - from My Design. Jorge -
# ::tokens ["Just", "love", "..", "-", "from", "My", "Design", ".", "Jorge", "-"]
# ::lemmas ["just", "love", "..", "-", "from", "my", "design", ".", "Jorge", "-"]
(c6-0 / multi-sentence
      :snt1 (c6-2 / love-01
                  :mod (c6-4 / just)
                  :source (c6-6 / design
                                :poss (c6-5 / i)))
      :snt2 (c6-3 / person
                  :name (c6-1 / name
                              :op1 "Jorge")))

# ::snt Is this still in discussion ....hmmmm wonder how bored kim is of the speculation all the time ...oh and hi the kats x
# ::tokens ["Is", "this", "still", "in", "discussion", "....", "hmmmm", "wonder", "how", "bored", "kim", "is", "of", "the", "speculation", "all", "the", "time", "...", "oh", "and", "hi", "the", "kats", "x"]
# ::lemmas ["be", "this", "still", "in", "discussion", "....", "hmmmm", "wonder", "how", "bored", "kim", "be", "of", "the", "speculation", "all", "the", "time", "...", "oh", "and", "hi", "the", "kat", "x"]
(c7-4 / multi-sentence
      :snt1 (c7-16 / discuss-01
                   :polarity (c7-7 / amr-unknown)
                   :ARG1 (c7-14 / this)
                   :mod (c7-6 / still))
      :snt2 (c7-10 / wonder-01
                   :ARG0 (c7-3 / you)
                   :ARG1 (c7-17 / thing
                                :degree-of (c7-2 / bore-02
                                                 :ARG0 (c7-0 / speculate-01
                                                             :ARG0 (c7-9 / person
                                                                         :name (c7-5 / name
                                                                                     :op1 "Kim")
                                                                         :ARG1-of c7-2))
                                                 :time (c7-13 / time
                                                              :mod (c7-15 / all))))
                   :mod (c7-8 / hmm
                              :mode expressive)
                   :mode imperative)
      :snt3 (c7-11 / and
                   :op1 (c7-1 / oh)
                   :op2 (c7-12 / hi)))

# ::snt SJP definitely knows that Sex and the City wouldn't be Sex and the City without 's Samantha Jones. Kim MADE the show. Simple.
# ::tokens ["SJP", "definitely", "knows", "that", "Sex", "and", "the", "City", "would", "n't", "be", "Sex", "and", "the", "City", "without", "'s", "Samantha", "Jones", ".", "Kim", "MADE", "the", "show", ".", "Simple", "."]
# ::lemmas ["SJP", "definitely", "know", "that", "Sex", "and", "the", "City", "would", "not", "be", "Sex", "and", "the", "City", "without", "'s", "Samantha", "Jones", ".", "Kim", "make", "the", "show", ".", "simple", "."]
(c8-3 / multi-sentence
      :snt1 (c8-8 / know-01
                  :ARG0 (c8-7 / person
                              :name (c8-2 / name
                                          :op1 "SJP"))
                  :ARG1 (c8-1 / broadcast-program
                              :name (c8-6 / name
                                          :op1 "Sex"
                                          :op2 "and"
                                          :op3 "the"
                                          :op4 "City")
                              :domain (c8-9 / broadcast-program
                                            :name (c8-10 / name
                                                         :op1 "Samantha"
                                                         :op2 "Jones")
                                            :polarity -))
                  :mod (c8-13 / definite))
      :snt2 (c8-11 / make-01
                   :ARG0 (c8-4 / person
                               :name (c8-12 / name
                                            :op1 "Kim"))
                   :ARG1 (c8-5 / show))
      :snt3 (c8-0 / simple-02))

# ::snt Yes! Just like The Beatles losing Lennon. Nobody cared..
# ::tokens ["Yes", "!", "Just", "like", "The", "Beatles", "losing", "Lennon", ".", "Nobody", "cared", ".."]
# ::lemmas ["yes", "!", "just", "like", "the", "Beatles", "lose", "Lennon", ".", "nobody", "care", ".."]
(c9-3 / multi-sentence
      :snt1 (c9-1 / yes
                  :mode expressive)
      :snt2 (c9-9 / care-01
                  :ARG0 (c9-2 / nobody))
      :snt3 (c9-4 / resemble-01
                  :ARG2 (c9-6 / lose-03
                              :ARG0 (c9-0 / band
                                          :name (c9-5 / name
                                                      :op1 "The"
                                                      :op2 "Beatles"))
                              :ARG1 (c9-7 / person
                                          :name (c9-8 / name
                                                      :op1 "Lennon")))
                  :mod (c9-10 / just)))

# ::snt People will still see the film without Kim cattrall she is important and people would miss her but I still feel like people would go see it, Kim cattrall never really wants to reunite and that's her decision but the other should move forward and do another film
# ::tokens ["People", "will", "still", "see", "the", "film", "without", "Kim", "cattrall", "she", "is", "important", "and", "people", "would", "miss", "her", "but", "I", "still", "feel", "like", "people", "would", "go", "see", "it", ",", "Kim", "cattrall", "never", "really", "wants", "to", "reunite", "and", "that", "'s", "her", "decision", "but", "the", "other", "should", "move", "forward", "and", "do", "another", "film"]
# ::lemmas ["people", "will", "still", "see", "the", "film", "without", "Kim", "cattrall", "she", "be", "important", "and", "people", "would", "miss", "she", "but", "i", "still", "feel", "like", "people", "would", "go", "see", "it", ",", "Kim", "cattrall", "never", "really", "want", "to", "reunite", "and", "that", "be", "her", "decision", "but", "the", "other", "should", "move", "forward", "and", "do", "another", "film"]
(c10-14 / multi-sentence
        :snt1 (c10-18 / contrast-01
                      :ARG1 (c10-0 / see-01
                                   :ARG0 (c10-26 / person)
                                   :ARG1 (c10-21 / film)
                                   :mod (c10-5 / still)
                                   :manner (c10-11 / accompany-01
                                                   :ARG0 (c10-15 / person
                                                                 :name (c10-22 / name
                                                                               :op1 "Kim"
                                                                               :op2 "Cattrall"))
                                                   :ARG1 c10-21
                                                   :polarity -))
                      :ARG2 (c10-10 / and
                                    :op1 (c10-30 / important-01
                                                 :ARG1 c10-15)
                                    :op2 (c10-8 / miss-01
                                                :ARG0 c10-15
                                                :ARG1 c10-26)))
        :snt2 (c10-27 / feel-01
                      :ARG0 (c10-7 / i)
                      :ARG1 (c10-12 / go-05
                                    :ARG0 (c10-2 / person)
                                    :ARG1 (c10-4 / see-01
                                                 :ARG0 c10-2
                                                 :ARG1 c10-21))
                      :mod (c10-23 / still))
        :snt3 (c10-13 / contrast-01
                      :ARG1 (c10-29 / want-01
                                    :ARG0 (c10-1 / person
                                                 :name c10-22
                                                 :op1 "Kim"
                                                 :op2 "Cattrall")
                                    :polarity -)
                      :ARG1 (c10-24 / reunite-01
                                    :ARG1 c10-1
                                    :ARG2 c10-1)
                      :time (c10-25 / ever)
                      :ARG1-of (c10-3 / real-04))
        :ARG2 (c10-17 / recommend-01
                      :ARG1 (c10-9 / and
                                   :op1 (c10-20 / move-01
                                                :ARG0 (c10-6 / other)
                                                :direction (c10-28 / forward))
                                   :op2 (c10-31 / do-02
                                                :ARG0 c10-6
                                                :ARG1 (c10-19 / film
                                                              :mod (c10-16 / another))))))

# ::snt Esto es muyyyy viejo!!
# ::tokens ["Esto", "es", "muyyyy", "viejo", "!", "!"]
# ::lemmas ["Esto", "es", "muyyyy", "viejo", "!", "!"]
(c11-1 / viejo
       :domain (c11-2 / Esto)
       :degree (c11-0 / very)
       :mode expressive)

# ::snt No es lo mismo sin ella
# ::tokens ["No", "es", "lo", "mismo", "sin", "ella"]
# ::lemmas ["no", "es", "lo", "mismo", "sin", "ella"]
(c12-3 / sin-01
       :ARG0 (c12-2 / i)
       :ARG1 (c12-1 / mismo
                    :domain (c12-0 / you)))

# ::snt Y la verdad me gustara que este Samantha
# ::tokens ["Y", "la", "verdad", "me", "gustara", "que", "este", "Samantha"]
# ::lemmas ["Y", "la", "verdad", "i", "gustara", "que", "este", "Samantha"]
(c13-6 / gustara-00
       :ARG0 (c13-5 / i)
       :ARG1 (c13-4 / person
                    :name (c13-0 / name
                                 :op1 "Samantha")
                    :mod (c13-3 / este))
       :concession (c13-1 / say-01
                          :ARG0 c13-5
                          :ARG1 (c13-2 / verdad)
                          :ARG2 c13-4))

# ::snt Ellen had to be joking.Sia... hmm...
# ::tokens ["Ellen", "had", "to", "be", "joking", ".", "Sia", "...", "hmm", "..."]
# ::lemmas ["Ellen", "have", "to", "be", "joke", ".", "Sia", "...", "hmm", "..."]
(c14-1 / multi-sentence
       :snt1 (c14-0 / obligate-01
                    :ARG2 (c14-8 / joke-01
                                 :ARG0 (c14-6 / person
                                              :name (c14-2 / name
                                                           :op1 "Ellen"))))
       :snt2 (c14-3 / say-01
                    :ARG0 (c14-9 / i)
                    :ARG2 (c14-4 / person
                                 :name (c14-5 / name
                                              :op1 "Sia"))
                    :mod (c14-7 / hmm)))

# ::snt no !
# ::tokens ["no", "!"]
# ::lemmas ["no", "!"]
(c15-0 / no)

# ::snt Yes! And I guarantee that there will be or of you in the audience..
# ::tokens ["Yes", "!", "And", "I", "guarantee", "that", "there", "will", "be", "or", "of", "you", "in", "the", "audience", ".."]
# ::lemmas ["yes", "!", "and", "i", "guarantee", "that", "there", "will", "be", "or", "of", "you", "in", "the", "audience", ".."]
(c16-5 / and
       :op2 (c16-6 / guarantee-01
                   :ARG0 (c16-4 / i)
                   :ARG1 (c16-0 / or
                                :op1 (c16-1 / be-located-at-91
                                            :ARG1 (c16-2 / you)
                                            :ARG2 (c16-7 / audience))
                                :op2 (c16-3 / be-located-at-91
                                            :ARG1 c16-2
                                            :ARG2 c16-7))))

# ::snt Lol you can not replace Willie
# ::tokens ["Lol", "you", "can", "not", "replace", "Willie"]
# ::lemmas ["Lol", "you", "can", "not", "replace", "Willie"]
(c17-4 / possible-01
       :ARG1 (c17-3 / replace-01
                    :ARG0 (c17-0 / you)
                    :ARG1 (c17-2 / person
                                 :name (c17-1 / name
                                              :op1 "Willie")))
       :mod (c17-5 / laugh-01
                   :manner (c17-6 / loud)
                   :mode expressive)
       :polarity -)

# ::snt No? Warwick would be the perfect fit. You know it makes sense..
# ::tokens ["No", "?", "Warwick", "would", "be", "the", "perfect", "fit", ".", "You", "know", "it", "makes", "sense", ".."]
# ::lemmas ["no", "?", "Warwick", "would", "be", "the", "perfect", "fit", ".", "you", "know", "it", "make", "sense", ".."]
(c18-3 / multi-sentence
       :snt1 (c18-2 / no)
       :snt2 (c18-0 / fit-06
                    :ARG1 (c18-8 / city
                                 :name (c18-5 / name
                                              :op1 "Warwick"))
                    :ARG1-of (c18-6 / perfect-02))
       :snt3 (c18-7 / know-01
                    :ARG0 (c18-1 / you)
                    :ARG1 (c18-4 / sense-02
                                 :ARG1 (c18-9 / it))))

# ::snt Samantha has died from cancer. Smith is comforted by Charlotte and as sometimes happen, they comfort each other too much. Miranda's kid has turned into a juvenile delinquent. And Big is still perfect.
# ::tokens ["Samantha", "has", "died", "from", "cancer", ".", "Smith", "is", "comforted", "by", "Charlotte", "and", "as", "sometimes", "happen", ",", "they", "comfort", "each", "other", "too", "much", ".", "Miranda", "'s", "kid", "has", "turned", "into", "a", "juvenile", "delinquent", ".", "And", "Big", "is", "still", "perfect", "."]
# ::lemmas ["Samantha", "have", "die", "from", "cancer", ".", "Smith", "be", "comfort", "by", "Charlotte", "and", "as", "sometimes", "happen", ",", "they", "comfort", "each", "other", "too", "much", ".", "Miranda", "'s", "kid", "have", "turn", "into", "a", "juvenile", "delinquent", ".", "and", "big", "be", "still", "perfect", "."]
(c19-12 / multi-sentence
        :snt1 (c19-25 / die-01
                      :ARG1 (c19-21 / person
                                    :name (c19-20 / name
                                                  :op1 "Samantha"))
                      :ARG1-of (c19-15 / cause-01
                                       :ARG0 (c19-11 / cancer)))
        :snt2 (c19-2 / comfort-01
                     :ARG0 (c19-13 / person
                                   :name (c19-14 / name
                                                 :op1 "Charlotte"))
                     :ARG1 (c19-3 / person
                                  :name (c19-22 / name
                                                :op1 "Smith"))
                     :ARG1-of (c19-4 / have-quant-91
                                     :ARG2 (c19-5 / much)
                                     :ARG3 (c19-9 / too)))
        :snt3 (c19-18 / turn-02
                      :ARG1 (c19-1 / person
                                   :ARG0-of (c19-23 / have-rel-role-91
                                                    :ARG1 (c19-8 / person
                                                                 :name (c19-17 / name
                                                                               :op1 "Miranda"))
                                                    :ARG2 (c19-6 / kid)))
                      :ARG2 (c19-16 / delinquent
                                    :mod (c19-7 / juvenile)))
        :snt4 (c19-10 / and
                      :op2 (c19-26 / perfect-02
                                   :ARG1 (c19-19 / person
                                                 :name (c19-24 / name
                                                               :op1 "Big"))
                                   :mod (c19-0 / still))))

# ::snt Yes! And Stanford Blatch aka to be played by Warwick Davis..?
# ::tokens ["Yes", "!", "And", "Stanford", "Blatch", "aka", "to", "be", "played", "by", "Warwick", "Davis", "..", "?"]
# ::lemmas ["yes", "!", "and", "Stanford", "Blatch", "aka", "to", "be", "play", "by", "Warwick", "Davis", "..", "?"]
(c20-1 / multi-sentence
       :snt1 (c20-0 / yes
                    :mode expressive)
       :snt2 (c20-7 / and
                    :op2 (c20-5 / play-02
                                :ARG0 (c20-2 / person
                                             :name (c20-3 / name
                                                          :op1 "Warwick"
                                                          :op2 "Davis"))
                                :ARG1 (c20-8 / person
                                             :name (c20-4 / name
                                                          :op1 "Stanford"
                                                          :op2 "Blatch"))
                                :polarity (c20-6 / amr-unknown))))

# ::snt A fitting end for that character. It makes perfect sense. And will hook the viewers from the get go
# ::tokens ["A", "fitting", "end", "for", "that", "character", ".", "It", "makes", "perfect", "sense", ".", "And", "will", "hook", "the", "viewers", "from", "the", "get", "go"]
# ::lemmas ["a", "fitting", "end", "for", "that", "character", ".", "it", "make", "perfect", "sense", ".", "and", "will", "hook", "the", "viewer", "from", "the", "get", "go"]
(c21-1 / multi-sentence
       :snt1 (c21-6 / end-01
                    :ARG1 (c21-10 / character
                                  :mod (c21-12 / that))
                    :ARG1-of (c21-0 / fit-06))
       :snt2 (c21-3 / sense-02
                    :ARG1 (c21-11 / it)
                    :ARG1-of (c21-8 / perfect-02))
       :snt3 (c21-4 / and
                    :op2 (c21-7 / hook-01
                                :ARG1 (c21-2 / person
                                             :ARG0-of (c21-5 / view-01))
                                :time (c21-9 / from
                                             :op1 (c21-13 / get-go)))))

# ::snt Exactly. We all deal with losing people in life. It would be very touching.
# ::tokens ["Exactly", ".", "We", "all", "deal", "with", "losing", "people", "in", "life", ".", "It", "would", "be", "very", "touching", "."]
# ::lemmas ["exactly", ".", "we", "all", "deal", "with", "lose", "people", "in", "life", ".", "it", "would", "be", "very", "touching", "."]
(c22-0 / multi-sentence
       :snt1 (c22-2 / exact)
       :snt2 (c22-9 / deal-01
                    :ARG0 (c22-5 / we
                                 :mod (c22-8 / all))
                    :ARG2 (c22-3 / lose-02
                                 :ARG0 c22-5
                                 :ARG1 (c22-4 / person)
                                 :time (c22-10 / life)))
       :snt3 (c22-6 / touch-01
                    :ARG0 (c22-7 / it)
                    :degree (c22-1 / very)))

# ::snt They dont need Samantha. Open the movie with Samantha's funeral (cancer returned), and then have her 'long lost sister introduced at the funeral. Someone with similar mannerisms that endears her to the girls. And the story continues...
# ::tokens ["They", "do", "nt", "need", "Samantha", ".", "Open", "the", "movie", "with", "Samantha", "'s", "funeral", "(", "cancer", "returned", ")", ",", "and", "then", "have", "her", "'", "long", "lost", "sister", "introduced", "at", "the", "funeral", ".", "Someone", "with", "similar", "mannerisms", "that", "endears", "her", "to", "the", "girls", ".", "And", "the", "story", "continues", "..."]
# ::lemmas ["they", "do", "not", "need", "Samantha", ".", "open", "the", "movie", "with", "Samantha", "'s", "funeral", "(", "cancer", "return", ")", ",", "and", "then", "have", "she", "'", "long", "lose", "sister", "introduce", "at", "the", "funeral", ".", "someone", "with", "similar", "mannerism", "that", "endear", "she", "to", "the", "girl", ".", "and", "the", "story", "continue", "..."]
(c23-14 / multi-sentence
        :snt1 (c23-21 / need-01
                      :ARG0 (c23-10 / they)
                      :ARG1 (c23-24 / person
                                    :name (c23-16 / name
                                                  :op1 "Samantha"))
                      :polarity -)
        :snt2 (c23-9 / and
                     :op1 (c23-4 / open-01
                                 :ARG0 (c23-6 / you)
                                 :ARG1 (c23-7 / movie)
                                 :time (c23-20 / funeral
                                               :poss c23-24
                                               :ARG1-of (c23-19 / mean-01
                                                                :ARG2 (c23-22 / return-01
                                                                              :ARG1 (c23-18 / cancer))))
                                 :mode imperative)
                     :op2 (c23-26 / introduce-01
                                  :ARG0 c23-6
                                  :ARG1 (c23-15 / person
                                                :ARG0-of (c23-8 / have-rel-role-91
                                                                :ARG1 c23-24
                                                                :ARG2 (c23-0 / sister))
                                                :ARG1-of (c23-1 / lose-02
                                                                :ARG1-of (c23-12 / long-03)))
                                  :time c23-20
                                  :mode imperative))
        :snt3 (c23-5 / someone
                     :ARG0-of (c23-25 / have-03
                                      :ARG1 (c23-17 / mannerism
                                                    :ARG1-of (c23-2 / resemble-01)
                                                    :ARG0-of (c23-23 / endear-01
                                                                     :ARG1 c23-5
                                                                     :ARG2 (c23-11 / girl)))))
        :snt4 c23-9
        :op2 (c23-13 / continue-01
                     :ARG1 (c23-3 / story)))

# ::snt Good. Move on.
# ::tokens ["Good", ".", "Move", "on", "."]
# ::lemmas ["good", ".", "move", "on", "."]
(c24-3 / multi-sentence
       :snt1 (c24-0 / good-02)
       :snt2 (c24-2 / move-01
                    :ARG2 (c24-1 / on)))
