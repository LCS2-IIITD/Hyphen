# ::snt DOES RYAN KNOW?!?!?!
# ::tokens ["DOES", "RYAN", "KNOW", "?", "!", "?", "!", "?", "!"]
# ::lemmas ["do", "RYAN", "KNOW", "?", "!", "?", "!", "?", "!"]
(c1-2 / know-01
      :polarity (c1-4 / amr-unknown)
      :ARG0 (c1-1 / person
                  :name (c1-0 / name
                              :op1 "RYAN"))
      :polarity (c1-3 / amr-unknown))

# ::snt She doesn't care so much she took the time to come to this TL and let us know. And I don't care that you don't care.
# ::tokens ["She", "does", "n't", "care", "so", "much", "she", "took", "the", "time", "to", "come", "to", "this", "TL", "and", "let", "us", "know", ".", "And", "I", "do", "n't", "care", "that", "you", "do", "n't", "care", "."]
# ::lemmas ["she", "do", "not", "care", "so", "much", "she", "take", "the", "time", "to", "come", "to", "this", "TL", "and", "let", "we", "know", ".", "and", "i", "do", "not", "care", "that", "you", "do", "not", "care", "."]
(c2-10 / multi-sentence
       :snt1 (c2-11 / care-01
                    :ARG0 (c2-0 / she)
                    :ARG1-of (c2-6 / have-quant-91
                                   :ARG2 (c2-5 / much)
                                   :ARG3 (c2-3 / so)
                                   :ARG6 (c2-8 / take-01
                                               :ARG0 c2-0
                                               :ARG1 (c2-12 / time)
                                               :purpose (c2-7 / and
                                                              :op1 (c2-9 / come-01
                                                                         :ARG1 c2-0
                                                                         :ARG4 (c2-15 / publication
                                                                                      :name (c2-14 / name
                                                                                                   :op1 "TL")
                                                                                      :mod (c2-17 / this)))
                                                              :op2 (c2-1 / let-know-07
                                                                         :ARG0 c2-0
                                                                         :ARG1 (c2-16 / we))
                                                              :snt2-of c2-10)))
                    :polarity -)
       :op2 (c2-2 / care-01
                  :ARG0 (c2-18 / i)
                  :ARG1 (c2-13 / care-01
                               :ARG0 (c2-4 / you))
                  :polarity -))

# ::snt Congratulations, Mindy!!! Love you!!
# ::tokens ["Congratulations", ",", "Mindy", "!", "!", "!", "Love", "you", "!", "!"]
# ::lemmas ["congratulation", ",", "Mindy", "!", "!", "!", "love", "you", "!", "!"]
(c3-1 / multi-sentence
      :snt1 (c3-4 / congratulate-01
                  :ARG1 (c3-2 / person
                              :name (c3-0 / name
                                          :op1 "Mindy")))
      :snt2 (c3-3 / love-01
                  :ARG0 (c3-5 / i)
                  :ARG1 c3-2
                  :mode expressive))

# ::snt Please be BJ's!
# ::tokens ["Please", "be", "BJ", "'s", "!"]
# ::lemmas ["please", "be", "BJ", "'s", "!"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "B BJ")
      :mode imperative
      :polite +)

# ::snt Congrats Mindy!! Hope it's a girl so u can enjoy dressing her up like u always wished u could've been when u were a lil girl!!
# ::tokens ["Congrats", "Mindy", "!", "!", "Hope", "it", "'s", "a", "girl", "so", "u", "can", "enjoy", "dressing", "her", "up", "like", "u", "always", "wished", "u", "could", "'ve", "been", "when", "u", "were", "a", "lil", "girl", "!", "!"]
# ::lemmas ["Congrats", "Mindy", "!", "!", "hope", "it", "be", "a", "girl", "so", "u", "can", "enjoy", "dress", "she", "up", "like", "u", "always", "wish", "u", "could", "'ve", "be", "when", "u", "be", "a", "lil", "girl", "!", "!"]
(c5-9 / multi-sentence
      :snt1 (c5-11 / congratulate-01
                   :ARG1 (c5-16 / person
                                :name (c5-13 / name
                                             :op1 "Mindy")))
      :snt2 (c5-5 / hope-01
                  :ARG0 (c5-18 / i)
                  :ARG1 (c5-7 / girl
                              :domain (c5-4 / it)
                              :ARG0-of (c5-8 / cause-01
                                             :ARG1 (c5-10 / possible-01
                                                          :ARG1 (c5-15 / enjoy-01
                                                                       :ARG0 (c5-3 / you)
                                                                       :ARG1 (c5-19 / dress-up-02
                                                                                    :ARG0 c5-3
                                                                                    :ARG1 (c5-0 / she)
                                                                                    :ARG1-of (c5-14 / resemble-01
                                                                                                    :ARG2 (c5-17 / wish-01
                                                                                                                 :ARG0 c5-3
                                                                                                                 :ARG1 (c5-12 / dress-up-02
                                                                                                                              :ARG0 c5-3
                                                                                                                              :ARG1 c5-0
                                                                                                                              :time (c5-2 / girl
                                                                                                                                          :mod (c5-1 / little)
                                                                                                                                          :domain c5-3))
                                                                                                                 :time (c5-6 / always))))))))))

# ::snt With whose baby?
# ::tokens ["With", "whose", "baby", "?"]
# ::lemmas ["with", "whose", "baby", "?"]
(c6-2 / accompany-01
      :ARG0 (c6-1 / amr-unknown)
      :ARG1 (c6-0 / baby))

# ::snt Sweet congratulations !
# ::tokens ["Sweet", "congratulations", "!"]
# ::lemmas ["sweet", "congratulation", "!"]
(c7-0 / congratulate-01
      :mod (c7-1 / sweet)
      :mode expressive)

# ::snt That is impossible is a virgin!
# ::tokens ["That", "is", "impossible", "is", "a", "virgin", "!"]
# ::lemmas ["that", "be", "impossible", "be", "a", "virgin", "!"]
(c8-1 / possible-01
      :ARG1 (c8-2 / that)
      :condition (c8-0 / virgin)
      :polarity -
      :mode expressive)

# ::snt PLEASE say this is true! !
# ::tokens ["PLEASE", "say", "this", "is", "true", "!", "!"]
# ::lemmas ["please", "say", "this", "be", "true", "!", "!"]
(c10-3 / say-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-1 / true-01
                    :ARG1 (c10-2 / this))
       :polite +
       :mode imperative)

# ::snt Congrats
# ::tokens ["Congrats"]
# ::lemmas ["Congrats"]
(c11-0 / congratulate-01)

# ::snt OOOOOMGGGG
# ::tokens ["OOOOOMGGGG"]
# ::lemmas ["OOOOOMGGGG"]
(c12-0 / oops
       :mode expressive)

# ::snt Mindy apologizes for not making that dinner date.
# ::tokens ["Mindy", "apologizes", "for", "not", "making", "that", "dinner", "date", "."]
# ::lemmas ["Mindy", "apologize", "for", "not", "make", "that", "dinner", "date", "."]
(c13-4 / apologize-01
       :ARG0 (c13-1 / person
                    :name (c13-0 / name
                                 :op1 "Mindy"))
       :ARG1 (c13-5 / date-02
                    :ARG0 c13-1
                    :ARG1 (c13-2 / dinner)
                    :mod (c13-3 / that)
                    :polarity -))

# ::snt B.J. Novak right now
# ::tokens ["B.J.", "Novak", "right", "now"]
# ::lemmas ["B.J.", "Novak", "right", "now"]
(c14-2 / person
       :name (c14-0 / name
                    :op1 "B.J."
                    :op2 "Novak")
       :time (c14-1 / now
                    :mod (c14-3 / right)))

# ::snt She's finally,having babiesss
# ::tokens ["She", "'s", "finally", ",", "having", "babiesss"]
# ::lemmas ["she", "be", "finally", ",", "have", "babiesss"]
(c15-2 / have-03
       :ARG0 (c15-3 / she)
       :ARG1 (c15-1 / babily)
       :time (c15-0 / final))

# ::snt !
# ::tokens ["!"]
# ::lemmas ["!"]
(c16-0 / thing
       :mode expressive)

# ::snt Your girl
# ::tokens ["Your", "girl"]
# ::lemmas ["your", "girl"]
(c17-0 / girl
       :poss (c17-1 / you))

# ::snt I hate when stars get work done. You're original face was just fine toots
# ::tokens ["I", "hate", "when", "stars", "get", "work", "done", ".", "You", "'re", "original", "face", "was", "just", "fine", "toots"]
# ::lemmas ["i", "hate", "when", "star", "get", "work", "do", ".", "you", "be", "original", "face", "be", "just", "fine", "toot"]
(c18-3 / multi-sentence
       :snt1 (c18-5 / hate-01
                    :ARG0 (c18-9 / i)
                    :time (c18-7 / work-01
                                 :ARG0 (c18-4 / star)))
       :snt2 (c18-10 / toots
                     :ARG1-of (c18-0 / fine-04
                                     :mod (c18-8 / just))
                     :domain (c18-6 / face
                                    :mod (c18-1 / original)
                                    :part-of (c18-2 / you))))

# ::snt You are a genius
# ::tokens ["You", "are", "a", "genius"]
# ::lemmas ["you", "be", "a", "genius"]
(c19-0 / genius
       :domain (c19-1 / you))

# ::snt he cant even cook a cheesy pita
# ::tokens ["he", "ca", "nt", "even", "cook", "a", "cheesy", "pita"]
# ::lemmas ["he", "can", "not", "even", "cook", "a", "cheesy", "pita"]
(c20-3 / possible-01
       :ARG1 (c20-4 / cook-01
                    :ARG0 (c20-2 / he)
                    :ARG1 (c20-0 / pita
                                 :mod (c20-5 / cheesy)))
       :mod (c20-1 / even)
       :polarity -)

# ::snt Hahahaha!
# ::tokens ["Hahahaha", "!"]
# ::lemmas ["Hahahaha", "!"]
(c22-0 / haha
       :mode expressive)

# ::snt look at the replies
# ::tokens ["look", "at", "the", "replies"]
# ::lemmas ["look", "at", "the", "reply"]
(c23-2 / look-01
       :ARG0 (c23-1 / you)
       :ARG1 (c23-0 / reply-01)
       :mode imperative)

# ::snt !!!!!!!
# ::tokens ["!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!", "!", "!", "!"]
(c25-0 / thing
       :mode expressive)

# ::snt deffffff
# ::tokens ["deffffff"]
# ::lemmas ["deffffff"]
(c26-0 / erff
       :mode expressive)

# ::snt Me too!! It's def a winter ting
# ::tokens ["Me", "too", "!", "!", "It", "'s", "def", "a", "winter", "ting"]
# ::lemmas ["i", "too", "!", "!", "it", "be", "def", "a", "winter", "ting"]
(c27-0 / multi-sentence
       :snt1 (c27-4 / i
                    :mod (c27-3 / too))
       :snt2 (c27-5 / ting
                    :time (c27-6 / date-entity
                                 :season (c27-1 / winter)
                                 :mod (c27-2 / definite))))

# ::snt lmaoooo veryy! i miss following the show
# ::tokens ["lmaoooo", "veryy", "!", "i", "miss", "following", "the", "show"]
# ::lemmas ["lmaoooo", "veryy", "!", "i", "miss", "follow", "the", "show"]
(c28-1 / miss-02
       :ARG0 (c28-5 / i)
       :ARG1 (c28-0 / follow-02
                    :ARG0 c28-5
                    :ARG1 (c28-2 / show-04))
       :degree (c28-3 / very)
       :mod (c28-4 / laugh-01
                   :ARG0 c28-5
                   :manner (c28-6 / loud)
                   :mode expressive))

# ::snt Crying at the emoji.. That's really miskeen
# ::tokens ["Crying", "at", "the", "emoji", "..", "That", "'s", "really", "miskeen"]
# ::lemmas ["cry", "at", "the", "emoji", "..", "that", "be", "really", "miskeen"]
(c29-0 / multi-sentence
       :snt1 (c29-4 / try-01
                    :ARG1 (c29-2 / emote))
       :snt2 (c29-3 / miskeen
                    :degree (c29-1 / really)
                    :domain (c29-5 / that)))

# ::snt OHH MY GOD!!!!
# ::tokens ["OHH", "MY", "GOD", "!", "!", "!", "!"]
# ::lemmas ["OHH", "MY", "GOD", "!", "!", "!", "!"]
(c31-1 / person
       :name (c31-0 / name
                    :op1 "God")
       :mod (c31-3 / oh
                   :mode expressive)
       :poss (c31-2 / i)
       :mode expressive)

# ::snt Omg yasssss
# ::tokens ["Omg", "yasssss"]
# ::lemmas ["omg", "yasssss"]
(c32-1 / yasssss
       :mod (c32-0 / oh-my-god
                   :mode expressive))

# ::snt Yeah but she won't say with who
# ::tokens ["Yeah", "but", "she", "wo", "n't", "say", "with", "who"]
# ::lemmas ["yeah", "but", "she", "will", "not", "say", "with", "who"]
(c35-4 / contrast-01
       :ARG1 (c35-1 / yeah)
       :ARG2 (c35-2 / say-01
                    :ARG0 (c35-0 / she)
                    :ARG3 (c35-3 / person)
                    :polarity -))

# ::snt Idk she's keeping it private
# ::tokens ["Idk", "she", "'s", "keeping", "it", "private"]
# ::lemmas ["Idk", "she", "be", "keep", "it", "private"]
(c37-3 / know-01
       :ARG0 (c37-4 / i)
       :ARG1 (c37-5 / keep-02
                    :ARG0 (c37-0 / she)
                    :ARG1 (c37-2 / private-02
                                 :ARG1 (c37-1 / it)))
       :polarity -)

# ::snt Who's her baby daddy??????
# ::tokens ["Who", "'s", "her", "baby", "daddy", "?", "?", "?", "?", "?", "?"]
# ::lemmas ["who", "be", "her", "baby", "daddy", "?", "?", "?", "?", "?", "?"]
(c38-3 / person
       :polarity (c38-4 / amr-unknown)
       :ARG0-of (c38-2 / have-rel-role-91
                       :ARG1 (c38-1 / she)
                       :ARG2 (c38-5 / daddy)
                       :mod (c38-0 / baby)))

# ::snt you're famous lol
# ::tokens ["you", "'re", "famous", "lol"]
# ::lemmas ["you", "be", "famous", "lol"]
(c40-0 / fame-01
       :ARG1 (c40-2 / you)
       :ARG2-of (c40-3 / laugh-01
                       :manner (c40-1 / loud)
                       :mode expressive))

# ::snt WUT?!
# ::tokens ["WUT", "?", "!"]
# ::lemmas ["WUT", "?", "!"]
(c42-0 / wut
       :mode expressive)

# ::snt Congratulations !!
# ::tokens ["Congratulations", "!", "!"]
# ::lemmas ["congratulation", "!", "!"]
(c44-0 / congratulate-01
       :mode expressive)

# ::snt WHAT DID YOU DO
# ::tokens ["WHAT", "DID", "YOU", "DO"]
# ::lemmas ["what", "do", "you", "do"]
(c50-0 / do-02
       :ARG0 (c50-1 / you)
       :ARG1 (c50-2 / amr-unknown))
