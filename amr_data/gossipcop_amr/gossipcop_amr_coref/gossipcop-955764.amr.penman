# ::snt Stop saying that. Before you know it, True will be able to read those words.
# ::tokens ["Stop", "saying", "that", ".", "Before", "you", "know", "it", ",", "True", "will", "be", "able", "to", "read", "those", "words", "."]
# ::lemmas ["stop", "say", "that", ".", "before", "you", "know", "it", ",", "true", "will", "be", "able", "to", "read", "those", "word", "."]
(c1-3 / multi-sentence
      :snt1 (c1-5 / stop-01
                  :ARG0 (c1-2 / you)
                  :ARG1 (c1-0 / say-01
                              :ARG0 c1-2
                              :ARG1 (c1-12 / that))
                  :mode imperative)
      :snt2 (c1-8 / possible-01
                  :ARG1 (c1-7 / read-01
                              :ARG0 (c1-4 / person
                                          :name (c1-6 / name
                                                      :op1 "True"))
                              :ARG1 (c1-10 / word
                                           :mod (c1-13 / that)))
                  :time (c1-1 / before
                              :op1 (c1-9 / know-01
                                         :ARG0 c1-2
                                         :ARG1 (c1-11 / it)))))

# ::snt She needs to discuss her issues with a therapist rather than the press
# ::tokens ["She", "needs", "to", "discuss", "her", "issues", "with", "a", "therapist", "rather", "than", "the", "press"]
# ::lemmas ["she", "need", "to", "discuss", "her", "issue", "with", "a", "therapist", "rather", "than", "the", "press"]
(c2-0 / need-01
      :ARG0 (c2-1 / she)
      :ARG1 (c2-6 / discuss-01
                  :ARG0 c2-1
                  :ARG1 (c2-4 / issue-02
                              :ARG1 c2-1)
                  :ARG2 (c2-5 / therapist)
                  :ARG1-of (c2-2 / instead-of-91
                                 :ARG2 (c2-3 / press))))

# ::snt Poor Chloe.
# ::tokens ["Poor", "Chloe", "."]
# ::lemmas ["Poor", "Chloe", "."]
(c3-1 / person
      :name (c3-0 / name
                  :op1 "Chloe")
      :mod (c3-2 / poor))

# ::snt I think she only wanted a boy because Tristan already had one and to carry on Tristans name, I doubt they even last as a couple!!
# ::tokens ["I", "think", "she", "only", "wanted", "a", "boy", "because", "Tristan", "already", "had", "one", "and", "to", "carry", "on", "Tristans", "name", ",", "I", "doubt", "they", "even", "last", "as", "a", "couple", "!", "!"]
# ::lemmas ["i", "think", "she", "only", "want", "a", "boy", "because", "Tristan", "already", "have", "one", "and", "to", "carry", "on", "Tristans", "name", ",", "i", "doubt", "they", "even", "last", "as", "a", "couple", "!", "!"]
(c4-7 / and
      :op1 (c4-8 / think-01
                 :ARG0 (c4-18 / i)
                 :ARG1 (c4-17 / want-01
                              :ARG0 (c4-0 / she)
                              :ARG1 (c4-10 / boy)
                              :mod (c4-4 / only)
                              :ARG1-of (c4-12 / cause-01
                                              :ARG0 (c4-5 / have-03
                                                          :ARG0 (c4-16 / person
                                                                       :name (c4-14 / name
                                                                                    :op1 "Tristan"))
                                                          :ARG1 (c4-1 / boy)
                                                          :time (c4-6 / already)))))
      :op2 (c4-9 / carry-on-02
                 :ARG0 c4-0
                 :ARG1 (c4-11 / name-01
                              :ARG1 c4-16))
      :op3 (c4-19 / doubt-01
                  :ARG0 c4-18
                  :ARG1 (c4-2 / last-04
                              :ARG1 (c4-13 / they)
                              :ARG2 (c4-3 / couple
                                          :domain c4-13)
                              :mod (c4-15 / even))))

# ::snt Her daughter will feel great reading how her mom didnt want her she wanted a boy! So selfish some people cant even have kids
# ::tokens ["Her", "daughter", "will", "feel", "great", "reading", "how", "her", "mom", "did", "nt", "want", "her", "she", "wanted", "a", "boy", "!", "So", "selfish", "some", "people", "ca", "nt", "even", "have", "kids"]
# ::lemmas ["her", "daughter", "will", "feel", "great", "read", "how", "her", "mom", "do", "not", "want", "she", "she", "want", "a", "boy", "!", "so", "selfish", "some", "people", "can", "not", "even", "have", "kid"]
(c5-12 / multi-sentence
       :snt1 (c5-14 / feel-01
                    :ARG0 (c5-18 / person
                                 :ARG0-of (c5-6 / have-rel-role-91
                                                :ARG1 (c5-0 / she)
                                                :ARG2 (c5-21 / daughter)))
                    :ARG1 (c5-10 / great)
                    :ARG2 (c5-16 / read-01
                                 :ARG0 c5-18
                                 :ARG1 (c5-9 / thing
                                             :manner-of (c5-19 / want-01
                                                               :ARG0 (c5-13 / person
                                                                            :ARG0-of (c5-20 / have-rel-role-91
                                                                                            :ARG1 c5-18
                                                                                            :ARG2 (c5-7 / mom)))
                                                               :ARG1 (c5-1 / want-01
                                                                           :ARG0 c5-18
                                                                           :ARG1 (c5-11 / boy))
                                                               :polarity -))))
       :snt2 (c5-4 / selfish
                   :degree (c5-3 / so)
                   :domain (c5-2 / person
                                 :mod (c5-15 / some))
                   :ARG0-of (c5-5 / have-05
                                  :ARG1 (c5-8 / kid)
                                  :mod (c5-17 / even)
                                  :polarity -)))

# ::snt Don't hope &amp; waste your time, join Forex PRO and get good daily profitsWho wants to earn up to daily? Who wants to earn within a week without much work or stress...Do you want to to ?PEPPERSTONE
# ::tokens ["Do", "n't", "hope", "&", "amp", ";", "waste", "your", "time", ",", "join", "Forex", "PRO", "and", "get", "good", "daily", "profitsWho", "wants", "to", "earn", "up", "to", "daily", "?", "Who", "wants", "to", "earn", "within", "a", "week", "without", "much", "work", "or", "stress", "...", "Do", "you", "want", "to", "to", "?", "PEPPERSTONE"]
# ::lemmas ["do", "not", "hope", "&", "amp", ";", "waste", "your", "time", ",", "join", "Forex", "PRO", "and", "get", "good", "daily", "profitsWho", "want", "to", "earn", "up", "to", "daily", "?", "who", "want", "to", "earn", "within", "a", "week", "without", "much", "work", "or", "stress", "...", "do", "you", "want", "to", "to", "?", "pepperstone"]
(c6-17 / multi-sentence
       :snt1 (c6-13 / and
                    :op1 (c6-6 / hope-01
                               :ARG0 (c6-5 / you)
                               :polarity -
                               :mode imperative)
                    :op2 (c6-29 / waste-01
                                :ARG0 c6-5
                                :ARG1 (c6-11 / time
                                             :poss c6-5)
                                :mode imperative))
       :snt2 (c6-10 / and
                    :op1 c6-29
                    :ARG0 c6-5
                    :ARG1 c6-11
                    :mode imperative)
       :op2 (c6-9 / join-04
                  :ARG0 c6-5
                  :ARG1 (c6-20 / company
                               :name (c6-25 / name
                                            :op1 "Forex"
                                            :op2 "Pro"))
                  :mode imperative)
       :op3 (c6-12 / get-01
                   :ARG0 c6-5
                   :ARG1 (c6-28 / profit-01
                                :ARG0 c6-5
                                :ARG1-of (c6-3 / good-02)
                                :frequency (c6-26 / rate-entity-91
                                                  :ARG3 (c6-21 / temporal-quantity
                                                               :unit (c6-32 / day)
                                                               :quant 1)))
                   :mode imperative)
       :snt3 (c6-2 / want-01
                   :ARG0 (c6-8 / amr-unknown)
                   :ARG1 (c6-27 / earn-01
                                :ARG0 (c6-18 / amr-unknown)
                                :time (c6-30 / after
                                             :op1 (c6-19 / now)
                                             :quant (c6-23 / up-to
                                                           :op1 (c6-31 / temporal-quantity
                                                                       :unit (c6-24 / week)
                                                                       :quant 1)))
                                :manner (c6-4 / or
                                              :op1 (c6-0 / work-01
                                                         :ARG0 c6-18
                                                         :polarity -)
                                              :op2 (c6-1 / stress-02
                                                         :ARG0 c6-18
                                                         :polarity -)
                                              :quant (c6-7 / much))))
       :snt4 (c6-15 / want-01
                    :ARG0 (c6-14 / you)
                    :ARG1 (c6-16 / earn-01
                                 :ARG0 c6-14)
                    :polarity (c6-22 / amr-unknown)))

# ::snt :And we care why?
# ::tokens [":", "And", "we", "care", "why", "?"]
# ::lemmas [":", "and", "we", "care", "why", "?"]
(c7-3 / and
      :op2 (c7-0 / care-01
                 :ARG0 (c7-1 / we)
                 :ARG1 (c7-2 / amr-unknown
                             :ARG0-of (c7-4 / cause-01))))

# ::snt She looks like her wax statue here lmfao
# ::tokens ["She", "looks", "like", "her", "wax", "statue", "here", "lmfao"]
# ::lemmas ["she", "look", "like", "her", "wax", "statue", "here", "lmfao"]
(c8-2 / say-01
      :ARG1 (c8-4 / look-02
                  :ARG0 (c8-0 / she)
                  :ARG1 (c8-7 / statue
                              :mod (c8-6 / wax)
                              :poss c8-0
                              :location (c8-3 / here)))
      :ARG2 (c8-5 / person
                  :name (c8-1 / name
                              :op1 "Lmfao")))

# ::snt Because Jordan Craig had a boy.
# ::tokens ["Because", "Jordan", "Craig", "had", "a", "boy", "."]
# ::lemmas ["because", "Jordan", "Craig", "have", "a", "boy", "."]
(c10-4 / cause-01
       :ARG0 (c10-2 / have-05
                    :ARG0 (c10-3 / person
                                 :name (c10-1 / name
                                              :op1 "Jordan"
                                              :op2 "Craig"))
                    :ARG1 (c10-0 / boy)))
