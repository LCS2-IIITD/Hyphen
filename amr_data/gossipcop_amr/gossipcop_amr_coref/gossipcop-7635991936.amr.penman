# ::snt She looks amazing in that photo. s movie star meets punk rock.
# ::tokens ["She", "looks", "amazing", "in", "that", "photo", ".", "s", "movie", "star", "meets", "punk", "rock", "."]
# ::lemmas ["she", "look", "amazing", "in", "that", "photo", ".", "s", "movie", "star", "meet", "punk", "rock", "."]
(c1-6 / look-02
      :ARG0 (c1-3 / she)
      :ARG1 (c1-9 / amazing)
      :location (c1-7 / photo
                      :mod (c1-8 / that))
      :topic (c1-1 / meet-03
                   :ARG0 (c1-0 / star
                               :mod (c1-5 / movie))
                   :ARG1 (c1-4 / rock
                               :mod (c1-2 / punk))))

# ::snt +1 on that. Every review starts with some disclaimer... years later it's tiresome bs.
# ::tokens ["+1", "on", "that", ".", "Every", "review", "starts", "with", "some", "disclaimer", "...", "years", "later", "it", "'s", "tiresome", "bs", "."]
# ::lemmas ["+1", "on", "that", ".", "every", "review", "start", "with", "some", "disclaimer", "...", "years", "later", "it", "be", "tiresome", "bs", "."]
(c2-2 / multi-sentence
      :snt1 (c2-5 / add-02
                  :ARG1 (c2-9 / that))
      :snt2 (c2-3 / start-01
                  :ARG0 (c2-4 / review-01
                              :mod (c2-6 / every))
                  :ARG2 (c2-11 / disclaimer
                               :mod (c2-0 / some)))
      :snt3 (c2-13 / tiresome
                   :domain (c2-8 / it)
                   :time (c2-10 / after
                                :quant (c2-7 / multiple
                                             :op1 (c2-12 / temporal-quantity
                                                         :unit (c2-1 / year)
                                                         :quant 1)))))

# ::snt Damn. Variety fucked up.
# ::tokens ["Damn", ".", "Variety", "fucked", "up", "."]
# ::lemmas ["damn", ".", "Variety", "fuck", "up", "."]
(c3-3 / multi-sentence
      :snt1 (c3-0 / damn
                  :mode expressive)
      :snt2 (c3-2 / fuck-up-02
                  :ARG1 (c3-1 / Variety)))

# ::snt yup in with Rupert Sanders
# ::tokens ["yup", "in", "with", "Rupert", "Sanders"]
# ::lemmas ["yup", "in", "with", "Rupert", "Sanders"]
(c5-1 / yup
      :accompanier (c5-2 / person
                         :name (c5-0 / name
                                     :op1 "Rupert"
                                     :op2 "Sanders")))

# ::snt for fuck sakes thats not what she said. Ah!! ppl hv some dignity
# ::tokens ["for", "fuck", "sakes", "that", "s", "not", "what", "she", "said", ".", "Ah", "!", "!", "ppl", "hv", "some", "dignity"]
# ::lemmas ["for", "fuck", "sake", "that", "s", "not", "what", "she", "say", ".", "ah", "!", "!", "ppl", "hv", "some", "dignity"]
(c6-2 / multi-sentence
      :snt1 (c6-3 / say-01
                  :ARG0 (c6-0 / she)
                  :ARG1 (c6-7 / thing
                              :domain (c6-9 / that))
                  :purpose (c6-10 / sake
                                  :mod (c6-1 / fuck))
                  :polarity -)
      :snt2 (c6-5 / ah
                  :mode expressive)
      :snt3 (c6-8 / dignity
                  :quant (c6-4 / some)
                  :poss (c6-6 / we)))

# ::snt EU ENTENDI KKKKKKKK GENTE BERROO
# ::tokens ["EU", "ENTENDI", "KKKKKKKK", "GENTE", "BERROO"]
# ::lemmas ["EU", "ENTENDI", "KKKKKKKK", "GENTE", "berroo"]
(c7-1 / beg-01
      :ARG0 (c7-0 / organization
                  :name (c7-3 / name
                              :op1 "EU")
                  :ARG2-of c7-1)
      :name (c7-2 / name
                  :op1 "KKKKK"
                  :op2 "Gente"))

# ::snt meu deus eu amei
# ::tokens ["meu", "deus", "eu", "amei"]
# ::lemmas ["meu", "deus", "eu", "amei"]
(c8-3 / and
      :op1 (c8-1 / meu)
      :op2 (c8-0 / eu
                 :domain (c8-2 / amei)
                 :mode expressive))

# ::snt kaskkaks que coisa boa
# ::tokens ["kaskkaks", "que", "coisa", "boa"]
# ::lemmas ["kaskkak", "que", "coisa", "boa"]
(c9-2 / ask-01
      :ARG0 (c9-5 / i)
      :ARG1 (c9-4 / que
                  :mod (c9-0 / boa))
      :ARG2 (c9-3 / person
                  :name (c9-1 / name
                              :op1 "Kaskkaks")))

# ::snt BERROKKKKKKJ kristen melhor pessoa
# ::tokens ["BERROKKKKKKJ", "kristen", "melhor", "pessoa"]
# ::lemmas ["BERROKKKKKKJ", "kristen", "melhor", "pessoa"]
(c12-4 / and
       :op1 (c12-2 / rape-01)
       :op2 (c12-3 / person
                   :name (c12-0 / name
                                :op1 "Kristen"
                                :op2 "Melhor"))
       :op3 (c12-1 / pessoa))

# ::snt teste de ingls
# ::tokens ["teste", "de", "ingls"]
# ::lemmas ["teste", "de", "ingls"]
(c13-0 / teste-de-
       :mode expressive)

# ::snt onde foi isso que programa??
# ::tokens ["onde", "foi", "isso", "que", "programa", "?", "?"]
# ::lemmas ["onde", "foi", "isso", "que", "programa", "?", "?"]
(c14-1 / programa
       :polarity (c14-2 / amr-unknown)
       :domain (c14-0 / foi
                      :mode expressive))

# ::snt voc sabe algum link desse vdeo legendado?
# ::tokens ["voc", "sabe", "algum", "link", "desse", "vdeo", "legendado", "?"]
# ::lemmas ["voc", "sabe", "algum", "link", "desse", "vdeo", "legendado", "?"]
(c15-1 / request-confirmation-91
       :ARG1 (c15-2 / link-01
                    :ARG1 (c15-5 / amr-unknown)
                    :mod (c15-4 / algum)
                    :ARG0-of (c15-3 / cause-01
                                    :ARG1 (c15-6 / deny-01
                                                 :ARG1 (c15-7 / legend
                                                              :domain (c15-0 / you
                                                                             :ARG2-of c15-1))))))

# ::snt brigada por compartilhar aqui eu acabei de falar desse vdeo
# ::tokens ["brigada", "por", "compartilhar", "aqui", "eu", "acabei", "de", "falar", "desse", "vdeo"]
# ::lemmas ["brigada", "por", "compartilhar", "aqui", "eu", "acabei", "de", "falar", "desse", "vdeo"]
(c16-2 / multi-sentence
       :snt1 (c16-3 / work-of-art
                    :name (c16-1 / name
                                 :op1 "Brigada")
                    :ARG1-of (c16-4 / cause-01
                                    :name c16-1
                                    :ARG0 c16-3
                                    :op1 "Cartilhar"))
       :snt2 (c16-7 / cause-01
                    :ARG0 c16-3
                    :ARG1 (c16-5 / acabe-00
                                 :ARG1 (c16-0 / falar-01
                                              :ARG1 (c16-6 / desse)))))

# ::snt didn't even notice! We understand your thoughts!
# ::tokens ["did", "n't", "even", "notice", "!", "We", "understand", "your", "thoughts", "!"]
# ::lemmas ["do", "not", "even", "notice", "!", "we", "understand", "your", "thought", "!"]
(c17-2 / multi-sentence
       :snt1 (c17-1 / notice-01
                    :ARG0 (c17-5 / i)
                    :mod (c17-3 / even)
                    :polarity -)
       :snt2 (c17-7 / understand-01
                    :ARG0 (c17-4 / we)
                    :ARG1 (c17-6 / thing
                                 :ARG1-of (c17-8 / think-01
                                                 :ARG0 (c17-0 / you)))))

# ::snt "Oscar".... I declare my keyboard types what it wants
# ::tokens ["\"", "Oscar", "\"", "....", "I", "declare", "my", "keyboard", "types", "what", "it", "wants"]
# ::lemmas ["\"", "Oscar", "\"", "....", "i", "declare", "my", "keyboard", "type", "what", "it", "want"]
(c18-1 / multi-sentence
       :snt1 (c18-2 / person
                    :name (c18-0 / name
                                 :op1 "Oscar"))
       :snt2 (c18-7 / declare-02
                    :ARG0 (c18-5 / i)
                    :ARG1 (c18-6 / type-01
                                 :ARG0 (c18-3 / keyboard
                                              :poss c18-5)
                                 :ARG1 (c18-8 / thing
                                              :ARG1-of (c18-4 / want-01
                                                              :ARG0 c18-3)))))

# ::snt Exactly!!!
# ::tokens ["Exactly", "!", "!", "!"]
# ::lemmas ["exactly", "!", "!", "!"]
(c19-0 / exact)

# ::snt Kristen Stewart plays her new role beautifully, her signature underplaying building in light and shade
# ::tokens ["Kristen", "Stewart", "plays", "her", "new", "role", "beautifully", ",", "her", "signature", "underplaying", "building", "in", "light", "and", "shade"]
# ::lemmas ["Kristen", "Stewart", "play", "her", "new", "role", "beautifully", ",", "her", "signature", "underplaying", "building", "in", "light", "and", "shade"]
(c20-11 / and
        :op1 (c20-7 / play-02
                    :ARG0 (c20-3 / person
                                 :name (c20-2 / name
                                              :op1 "Kristen"
                                              :op2 "Stewart"))
                    :ARG1 (c20-5 / role
                                 :ARG1-of (c20-6 / new-01)
                                 :poss c20-3)
                    :ARG1-of (c20-1 / beautiful-02))
        :op2 (c20-12 / underplay-01
                     :ARG0 (c20-4 / signature
                                  :poss c20-3)
                     :ARG1 (c20-8 / building)
                     :manner (c20-10 / and
                                     :op1 (c20-9 / light-06)
                                     :op2 (c20-0 / shade))))

# ::snt and who cares if she did or didn't
# ::tokens ["and", "who", "cares", "if", "she", "did", "or", "did", "n't"]
# ::lemmas ["and", "who", "care", "if", "she", "do", "or", "do", "not"]
(c21-5 / and
       :op2 (c21-2 / care-01
                   :ARG0 (c21-4 / amr-unknown)
                   :ARG1 (c21-0 / or
                                :op1 (c21-6 / do-02
                                            :ARG0 (c21-1 / she))
                                :op2 (c21-3 / do-02
                                            :ARG0 c21-1
                                            :polarity -))))

# ::snt How does he feel about people who think she looks like she smells and needs a bath?
# ::tokens ["How", "does", "he", "feel", "about", "people", "who", "think", "she", "looks", "like", "she", "smells", "and", "needs", "a", "bath", "?"]
# ::lemmas ["how", "do", "he", "feel", "about", "people", "who", "think", "she", "look", "like", "she", "smell", "and", "need", "a", "bath", "?"]
(c22-0 / feel-01
       :ARG0 (c22-6 / he)
       :ARG1 (c22-5 / amr-unknown)
       :ARG2 (c22-7 / person
                    :ARG0-of (c22-10 / think-01
                                     :ARG1 (c22-8 / look-02
                                                  :ARG0 (c22-4 / she)
                                                  :ARG1 (c22-9 / and
                                                               :op1 (c22-1 / smell-01
                                                                           :ARG0 c22-4)
                                                               :op2 (c22-3 / need-01
                                                                           :ARG0 c22-4
                                                                           :ARG1 (c22-2 / bathe-01
                                                                                        :ARG1 c22-4)))))))

# ::snt Tbf I have one list, it has one person on it, and everytime I remember Ive got said list it amuses me.
# ::tokens ["Tbf", "I", "have", "one", "list", ",", "it", "has", "one", "person", "on", "it", ",", "and", "everytime", "I", "remember", "I", "ve", "got", "said", "list", "it", "amuses", "me", "."]
# ::lemmas ["Tbf", "i", "have", "one", "list", ",", "it", "have", "one", "person", "on", "it", ",", "and", "everytime", "i", "remember", "i", "ve", "got", "say", "list", "it", "amuse", "i", "."]
(c23-8 / and
       :op1 (c23-3 / have-03
                   :ARG0 (c23-7 / i)
                   :ARG1 (c23-4 / list
                                :quant 1))
       :op2 (c23-6 / have-03
                   :ARG0 c23-4
                   :ARG1 (c23-5 / person
                                :location c23-4
                                :quant 1))
       :op3 (c23-9 / amuse-01
                   :ARG0 (c23-2 / have-03
                                :ARG0 c23-7
                                :ARG1 c23-4
                                :frequency (c23-1 / rate-entity-91
                                                  :ARG4 (c23-10 / remember-01
                                                                :ARG0 c23-7
                                                                :ARG1 c23-3)))
                   :ARG1 c23-7)
       :topic c23-5
       :name (c23-0 / name
                    :op1 "TBF"))

# ::snt Who has time for that shit?
# ::tokens ["Who", "has", "time", "for", "that", "shit", "?"]
# ::lemmas ["who", "have", "time", "for", "that", "shit", "?"]
(c24-2 / have-03
       :ARG0 (c24-1 / amr-unknown)
       :ARG1 (c24-3 / time
                    :purpose (c24-0 / shit
                                    :mod (c24-4 / that))))

# ::snt DO NOT
# ::tokens ["DO", "NOT"]
# ::lemmas ["do", "not"]
(c25-0 / do-02
       :polarity -)

# ::snt Awwhhhhh....
# ::tokens ["Awwhhhhh", "...."]
# ::lemmas ["Awwhhhhh", "...."]
(c26-0 / aww
       :mode expressive)

# ::snt Do not
# ::tokens ["Do", "not"]
# ::lemmas ["do", "not"]
(c27-0 / do-02
       :polarity -)

# ::snt I will henceforth express myself using only gifs of kristen stewart.
# ::tokens ["I", "will", "henceforth", "express", "myself", "using", "only", "gifs", "of", "kristen", "stewart", "."]
# ::lemmas ["i", "will", "henceforth", "express", "myself", "use", "only", "gif", "of", "kristen", "stewart", "."]
(c28-3 / express-01
       :ARG0 (c28-6 / i
                    :ARG1-of c28-3)
       :ARG2 (c28-8 / use-01
                    :ARG0 c28-6
                    :ARG1 (c28-7 / gift
                                 :mod (c28-2 / stewart
                                             :mod (c28-5 / company
                                                         :name (c28-1 / name
                                                                      :op1 "Kristen")))
                                 :mod (c28-0 / only)))
       :time (c28-4 / henceforth))

# ::snt right?
# ::tokens ["right", "?"]
# ::lemmas ["right", "?"]
(c29-0 / request-confirmation-91)

# ::snt I've laid le trap
# ::tokens ["I", "'ve", "laid", "le", "trap"]
# ::lemmas ["i", "'ve", "lay", "le", "trap"]
(c30-2 / trap-01
       :ARG0 (c30-1 / i)
       :mod (c30-0 / lem))

# ::snt Instead you get a call out post.Nobody else would see this. You basically gave me a private notification to tell me you think I'm a moron without even verbally engaging me. Go fuck yourself. You and your search term alert.
# ::tokens ["Instead", "you", "get", "a", "call", "out", "post", ".", "Nobody", "else", "would", "see", "this", ".", "You", "basically", "gave", "me", "a", "private", "notification", "to", "tell", "me", "you", "think", "I", "'m", "a", "moron", "without", "even", "verbally", "engaging", "me", ".", "Go", "fuck", "yourself", ".", "You", "and", "your", "search", "term", "alert", "."]
# ::lemmas ["instead", "you", "get", "a", "call", "out", "post", ".", "nobody", "else", "would", "see", "this", ".", "you", "basically", "give", "i", "a", "private", "notification", "to", "tell", "i", "you", "think", "i", "be", "a", "moron", "without", "even", "verbally", "engage", "i", ".", "go", "fuck", "yourself", ".", "you", "and", "your", "search", "term", "alert", "."]
(c31-15 / multi-sentence
        :snt1 (c31-25 / instead-of-91
                      :ARG1 (c31-10 / get-01
                                    :ARG0 (c31-5 / you)
                                    :ARG1 (c31-24 / post-01
                                                  :mod (c31-19 / call-out-15)))
                      :ARG2 (c31-0 / see-01
                                   :ARG0 (c31-22 / nobody
                                                 :mod (c31-23 / else))
                                   :ARG1 (c31-9 / this)))
        :snt2 (c31-1 / give-01
                     :ARG0 (c31-12 / you)
                     :ARG1 (c31-17 / notification
                                   :ARG1-of (c31-16 / private-02)
                                   :purpose (c31-20 / tell-01
                                                    :ARG0 c31-12
                                                    :ARG1 (c31-26 / think-01
                                                                  :ARG0 c31-12
                                                                  :ARG1 (c31-8 / moron
                                                                               :domain (c31-6 / i
                                                                                              :ARG2-of c31-20)))
                                                    :manner (c31-11 / engage-01
                                                                    :ARG0 c31-12
                                                                    :ARG1 c31-6
                                                                    :manner (c31-7 / verbal)
                                                                    :mod (c31-18 / even)
                                                                    :polarity -)))
                     :ARG2 c31-6
                     :mod (c31-14 / basic))
        :snt3 (c31-2 / go-05
                     :ARG0 (c31-3 / you)
                     :ARG1 (c31-21 / fuck-01
                                   :ARG0 c31-3
                                   :ARG1 c31-3)
                     :mode imperative)
        :snt4 (c31-13 / alert-01
                      :ARG1 c31-3
                      :ARG2 (c31-4 / search-01)))

# ::snt , if you'd just 'd me about it instead of being a jerk, I'dve discussed with you how I think she's a great actor, who has been under utilised in role which would let her talent shine and how it took me minutes to find a pic/gif of her making a dumb face.
# ::tokens [",", "if", "you", "'d", "just", "'d", "me", "about", "it", "instead", "of", "being", "a", "jerk", ",", "I'dve", "discussed", "with", "you", "how", "I", "think", "she", "'s", "a", "great", "actor", ",", "who", "has", "been", "under", "utilised", "in", "role", "which", "would", "let", "her", "talent", "shine", "and", "how", "it", "took", "me", "minutes", "to", "find", "a", "pic", "/", "gif", "of", "her", "making", "a", "dumb", "face", "."]
# ::lemmas [",", "if", "you", "would", "just", "would", "i", "about", "it", "instead", "of", "be", "a", "jerk", ",", "I'dve", "discuss", "with", "you", "how", "i", "think", "she", "be", "a", "great", "actor", ",", "who", "have", "be", "under", "utilise", "in", "role", "which", "would", "let", "her", "talent", "shine", "and", "how", "it", "take", "i", "minute", "to", "find", "a", "pic", "/", "gif", "of", "she", "make", "a", "dumb", "face", "."]
(c32-29 / discuss-01
        :ARG0 (c32-27 / i)
        :ARG1 (c32-11 / and
                      :op1 (c32-13 / think-01
                                   :ARG0 c32-27
                                   :ARG1 (c32-25 / person
                                                 :ARG0-of (c32-10 / act-01)
                                                 :mod (c32-12 / great)
                                                 :domain (c32-0 / she)
                                                 :ARG1-of (c32-20 / utilize-01
                                                                  :ARG2 (c32-24 / role
                                                                                :ARG0-of (c32-2 / let-01
                                                                                                :ARG1 (c32-5 / shine-01
                                                                                                             :ARG1 (c32-19 / talent
                                                                                                                           :poss c32-0)))))))
                      :op2 (c32-28 / take-10
                                   :ARG0 (c32-23 / find-01
                                                 :ARG0 c32-27
                                                 :ARG1 (c32-4 / slash
                                                              :op1 (c32-17 / pic)
                                                              :op2 (c32-3 / gif)
                                                              :topic (c32-16 / make-01
                                                                             :ARG0 c32-0
                                                                             :ARG1 (c32-26 / face
                                                                                           :mod (c32-18 / dumb)))))
                                   :ARG1 (c32-8 / multiple
                                                :op1 (c32-1 / temporal-quantity
                                                            :unit (c32-21 / minute)
                                                            :quant 1))
                                   :ARG2 c32-27))
        :ARG2 c32-0
        :condition (c32-14 / like-01
                           :ARG0 (c32-6 / you)
                           :ARG1 (c32-7 / it)
                           :mod (c32-9 / just)
                           :ARG1-of (c32-15 / instead-of-91
                                            :ARG2 (c32-22 / jerk
                                                          :domain c32-27))))

# ::snt Please a walk in the park considering fucking around with a married Director whose wife she sat at dinner with.
# ::tokens ["Please", "a", "walk", "in", "the", "park", "considering", "fucking", "around", "with", "a", "married", "Director", "whose", "wife", "she", "sat", "at", "dinner", "with", "."]
# ::lemmas ["please", "a", "walk", "in", "the", "park", "consider", "fuck", "around", "with", "a", "married", "Director", "whose", "wife", "she", "sit", "at", "dinner", "with", "."]
(c33-8 / walk-01
       :ARG0 (c33-1 / you)
       :ARG2 (c33-6 / park)
       :purpose (c33-9 / consider-02
                       :ARG0 c33-1
                       :ARG1 (c33-0 / fuck-around-00
                                    :ARG0 c33-1
                                    :ARG1 (c33-3 / person
                                                 :ARG0-of (c33-5 / have-org-role-91
                                                                 :ARG2 (c33-13 / director))
                                                 :ARG1-of (c33-2 / marry-01)
                                                 :ARG0-of (c33-11 / have-rel-role-91
                                                                  :ARG1 (c33-12 / person
                                                                                :ARG2-of (c33-4 / sit-01
                                                                                                :ARG1 c33-3
                                                                                                :time (c33-10 / dinner)))
                                                                  :ARG2 (c33-7 / wife)))))
       :mode imperative
       :polite +)

# ::snt : Beauty: My fave nail color this season is a deep grey-blue like the Kristen Stewart
# ::tokens [":", "Beauty", ":", "My", "fave", "nail", "color", "this", "season", "is", "a", "deep", "grey", "-", "blue", "like", "the", "Kristen", "Stewart"]
# ::lemmas [":", "beauty", ":", "my", "fave", "nail", "color", "this", "season", "be", "a", "deep", "grey", "-", "blue", "like", "the", "Kristen", "Stewart"]
(c34-11 / and
        :op1 (c34-7 / company
                    :name (c34-1 / name
                                 :op1 "Beauty"))
        :op2 (c34-13 / color-01
                     :ARG1 (c34-4 / nail)
                     :ARG1-of (c34-0 / favor-01
                                     :ARG0 (c34-10 / i))
                     :time (c34-2 / season
                                  :mod (c34-9 / this))
                     :ARG1-of (c34-12 / deep-02)
                     :ARG1-of (c34-3 / resemble-01
                                     :ARG2 (c34-8 / color-01
                                                  :ARG1 (c34-5 / person
                                                               :name (c34-6 / name
                                                                            :op1 "Kristen"
                                                                            :op2 "Stewart"))
                                                  :ARG2 c34-4))))

# ::snt My fave nail color this season is a deep grey-blue like the shade K Stewart wore at
# ::tokens ["My", "fave", "nail", "color", "this", "season", "is", "a", "deep", "grey", "-", "blue", "like", "the", "shade", "K", "Stewart", "wore", "at"]
# ::lemmas ["my", "fave", "nail", "color", "this", "season", "be", "a", "deep", "grey", "-", "blue", "like", "the", "shade", "K", "Stewart", "wear", "at"]
(c35-8 / color-01
       :ARG1 (c35-3 / nail)
       :ARG2 (c35-2 / blue
                    :ARG1-of (c35-12 / deep-02)
                    :ARG1-of (c35-5 / resemble-01
                                    :ARG2 (c35-4 / shade
                                                 :ARG1-of (c35-9 / wear-01
                                                                 :ARG0 (c35-7 / person
                                                                              :name (c35-6 / name
                                                                                           :op1 "K"
                                                                                           :op2 "Stewart"))))))
       :ARG1-of (c35-0 / favor-01
                       :ARG0 (c35-10 / i))
       :time (c35-1 / season
                    :mod (c35-11 / this)))

# ::snt I have this colour and love it. A great colour for when black satin is too dark for the occasion.
# ::tokens ["I", "have", "this", "colour", "and", "love", "it", ".", "A", "great", "colour", "for", "when", "black", "satin", "is", "too", "dark", "for", "the", "occasion", "."]
# ::lemmas ["i", "have", "this", "colour", "and", "love", "it", ".", "a", "great", "colour", "for", "when", "black", "satin", "be", "too", "dark", "for", "the", "occasion", "."]
(c36-2 / multi-sentence
       :snt1 (c36-11 / and
                     :op1 (c36-4 / have-03
                                 :ARG0 (c36-10 / i)
                                 :ARG1 (c36-7 / color
                                              :mod (c36-9 / this)))
                     :op2 (c36-5 / love-01
                                 :ARG0 c36-10
                                 :ARG1 c36-7))
       :snt2 (c36-14 / color
                     :mod (c36-12 / great)
                     :purpose (c36-8 / have-degree-91
                                     :ARG1 (c36-3 / satin
                                                  :ARG1-of (c36-1 / black-04))
                                     :ARG2 (c36-13 / dark-02
                                                   :ARG1 c36-3)
                                     :ARG3 (c36-6 / too)
                                     :ARG6 (c36-0 / occasion-02))))

# ::snt only congratulations i care about is post malone fam
# ::tokens ["only", "congratulations", "i", "care", "about", "is", "post", "malone", "fam"]
# ::lemmas ["only", "congratulation", "i", "care", "about", "be", "post", "malone", "fam"]
(c37-3 / care-01
       :ARG0 (c37-4 / i)
       :ARG1 (c37-5 / congratulate-01
                    :ARG0 c37-4
                    :ARG1 (c37-2 / person
                                 :name (c37-1 / name
                                              :op1 "Malone"
                                              :op2 " fam"))
                    :mod (c37-0 / only)))

# ::snt wow using the word retarded and being homophobic? it's bro, not cool.
# ::tokens ["wow", "using", "the", "word", "retarded", "and", "being", "homophobic", "?", "it", "'s", "bro", ",", "not", "cool", "."]
# ::lemmas ["wow", "use", "the", "word", "retard", "and", "be", "homophobic", "?", "it", "be", "bro", ",", "not", "cool", "."]
(c38-1 / multi-sentence
       :snt1 (c38-10 / and
                     :op1 (c38-12 / use-01
                                  :ARG1 (c38-6 / word
                                               :mod (c38-3 / retard-01)))
                     :op2 (c38-4 / homophobia)
                     :polarity (c38-9 / amr-unknown)
                     :mod (c38-5 / wow
                                 :mode expressive))
       :snt2 (c38-7 / cool-04
                    :ARG1 (c38-11 / it)
                    :polarity -)
       :snt3 (c38-8 / have-rel-role-91
                    :ARG0 (c38-2 / i)
                    :ARG2 (c38-0 / bro)))

# ::snt you seem like a fun guy
# ::tokens ["you", "seem", "like", "a", "fun", "guy"]
# ::lemmas ["you", "seem", "like", "a", "fun", "guy"]
(c39-3 / seem-01
       :ARG1 (c39-0 / guy
                    :ARG0-of (c39-1 / fun-01)
                    :domain (c39-2 / you)))

# ::snt Yes but there still is that chin.
# ::tokens ["Yes", "but", "there", "still", "is", "that", "chin", "."]
# ::lemmas ["yes", "but", "there", "still", "be", "that", "chin", "."]
(c40-2 / contrast-01
       :ARG1 (c40-0 / yes)
       :ARG2 (c40-4 / chin
                    :mod (c40-3 / that)
                    :time (c40-1 / still)))

# ::snt major eye roll
# ::tokens ["major", "eye", "roll"]
# ::lemmas ["major", "eye", "roll"]
(c41-0 / roll-01
       :ARG1 (c41-1 / eye)
       :degree (c41-2 / major))

# ::snt good move
# ::tokens ["good", "move"]
# ::lemmas ["good", "move"]
(c42-1 / move-02
       :ARG1-of (c42-0 / good-02))

# ::snt I like SW, but why continue on with the Twi disparagement? Overdone already!
# ::tokens ["I", "like", "SW", ",", "but", "why", "continue", "on", "with", "the", "Twi", "disparagement", "?", "Overdone", "already", "!"]
# ::lemmas ["i", "like", "SW", ",", "but", "why", "continue", "on", "with", "the", "Twi", "disparagement", "?", "overdone", "already", "!"]
(c43-1 / multi-sentence
       :snt1 (c43-7 / contrast-01
                    :ARG1 (c43-6 / like-01
                                 :ARG0 (c43-9 / i)
                                 :ARG1 (c43-5 / person
                                              :name (c43-2 / name
                                                           :op1 "SW")))
                    :ARG2 (c43-13 / continue-01
                                  :ARG1 (c43-12 / disparage-01
                                                :ARG1 (c43-3 / political-movement
                                                             :name (c43-4 / name
                                                                          :op1 "Twi")))
                                  :ARG1-of (c43-8 / cause-01
                                                  :ARG0 (c43-10 / amr-unknown))))
       :snt2 (c43-0 / overdone-00
                    :time (c43-11 / already)))

# ::snt for sure.
# ::tokens ["for", "sure", "."]
# ::lemmas ["for", "sure", "."]
(c44-0 / sure-02)

# ::snt they are petty brown nosers at eonline. As well as their shitty network
# ::tokens ["they", "are", "petty", "brown", "nosers", "at", "eonline", ".", "As", "well", "as", "their", "shitty", "network"]
# ::lemmas ["they", "be", "petty", "brown", "noser", "at", "eonline", ".", "as", "well", "as", "their", "shitty", "network"]
(c45-1 / multi-sentence
       :snt1 (c45-7 / person
                    :ARG0-of (c45-9 / ignore-01
                                    :mod (c45-0 / brown)
                                    :mod (c45-2 / petty))
                    :domain (c45-10 / they)
                    :location (c45-8 / company
                                     :name (c45-3 / name
                                                  :op1 "eOnline")))
       :snt2 (c45-5 / and
                    :op2 (c45-6 / network
                                :poss (c45-11 / they)
                                :mod (c45-4 / shitty))))

# ::snt K pissed them off somehow.
# ::tokens ["K", "pissed", "them", "off", "somehow", "."]
# ::lemmas ["K", "piss", "they", "off", "somehow", "."]
(c46-3 / piss-off-02
       :ARG0 (c46-1 / person
                    :name (c46-0 / name
                                 :op1 "K"))
       :ARG1 (c46-4 / they)
       :manner (c46-2 / somehow))

# ::snt But thats none of my business.
# ::tokens ["But", "that", "s", "none", "of", "my", "business", "."]
# ::lemmas ["but", "that", "s", "none", "of", "my", "business", "."]
(c47-0 / contrast-01
       :ARG2 (c47-2 / concern-02
                    :ARG0 (c47-1 / i)
                    :ARG1 (c47-3 / that)
                    :polarity -))

# ::snt not K stew
# ::tokens ["not", "K", "stew"]
# ::lemmas ["not", "K", "stew"]
(c49-2 / stew
       :mod (c49-1 / person
                   :name (c49-0 / name
                                :op1 "K"))
       :polarity -)

# ::snt I Agree This Is Really Hilarious!!!!!
# ::tokens ["I", "Agree", "This", "Is", "Really", "Hilarious", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "agree", "this", "be", "really", "hilarious", "!", "!", "!", "!", "!"]
(c50-1 / agree-01
       :ARG0 (c50-3 / i)
       :ARG1 (c50-2 / hilarious
                    :domain (c50-4 / this)
                    :ARG1-of (c50-0 / real-04)))
