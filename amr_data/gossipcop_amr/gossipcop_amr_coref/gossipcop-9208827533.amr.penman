# ::snt Never go full guardian
# ::tokens ["Never", "go", "full", "guardian"]
# ::lemmas ["never", "go", "full", "guardian"]
(c1-4 / go-02
      :ARG0 (c1-1 / you)
      :ARG4 (c1-3 / guardian
                  :mod (c1-0 / full))
      :time (c1-2 / ever)
      :polarity -
      :mode imperative)

# ::snt Talk about a over dramatic reaction. 'feels like a death' oh dear. Actual people are dying in this country not brexit. Stupid but fit woman
# ::tokens ["Talk", "about", "a", "over", "dramatic", "reaction", ".", "'", "feels", "like", "a", "death", "'", "oh", "dear", ".", "Actual", "people", "are", "dying", "in", "this", "country", "not", "brexit", ".", "Stupid", "but", "fit", "woman"]
# ::lemmas ["talk", "about", "a", "over", "dramatic", "reaction", ".", "'", "feel", "like", "a", "death", "'", "oh", "dear", ".", "actual", "people", "be", "die", "in", "this", "country", "not", "brexit", ".", "stupid", "but", "fit", "woman"]
(c2-3 / multi-sentence
      :snt1 (c2-13 / talk-01
                   :ARG1 (c2-5 / react-01
                               :mod (c2-0 / over-the-scale)))
      :snt2 (c2-1 / feel-05
                  :ARG1 (c2-12 / it)
                  :ARG2 (c2-15 / resemble-01
                               :ARG1 c2-12
                               :ARG2 (c2-14 / die-01)))
      :snt3 (c2-10 / die-01
                   :ARG1 (c2-7 / person
                               :ARG1-of (c2-6 / actual-02))
                   :location (c2-9 / country
                                   :mod (c2-17 / this))
                   :ARG1-of (c2-16 / contrast-01
                                   :ARG2 (c2-2 / brexit
                                               :polarity -)))
      :snt4 (c2-11 / woman
                   :ARG1-of (c2-4 / stupid-02)
                   :ARG1-of (c2-8 / fit-05)))

# ::snt Sock account said what?
# ::tokens ["Sock", "account", "said", "what", "?"]
# ::lemmas ["Sock", "account", "say", "what", "?"]
(c3-1 / say-01
      :ARG0 (c3-4 / account
                  :mod (c3-2 / person
                             :name (c3-0 / name
                                         :op1 "Sock")))
      :ARG1 (c3-3 / amr-unknown))

# ::snt Beautifully articulating all our pain and sadnesses
# ::tokens ["Beautifully", "articulating", "all", "our", "pain", "and", "sadnesses"]
# ::lemmas ["beautifully", "articulate", "all", "our", "pain", "and", "sadness"]
(c4-6 / articulate-01
      :ARG0 (c4-3 / we)
      :ARG1 (c4-5 / and
                  :op1 (c4-2 / pain)
                  :op2 (c4-1 / sad-02)
                  :mod (c4-4 / all)
                  :poss c4-3)
      :ARG1-of (c4-0 / beautiful-02))

# ::snt !!!
# ::tokens ["!", "!", "!"]
# ::lemmas ["!", "!", "!"]
(c5-0 / thing
      :mode expressive)

# ::snt Mass migration on an unprecedented scale and we should not be worried. "The strange death of Europe".
# ::tokens ["Mass", "migration", "on", "an", "unprecedented", "scale", "and", "we", "should", "not", "be", "worried", ".", "\"", "The", "strange", "death", "of", "Europe", "\"", "."]
# ::lemmas ["mass", "migration", "on", "an", "unprecedented", "scale", "and", "we", "should", "not", "be", "worried", ".", "\"", "the", "strange", "death", "of", "Europe", "\"", "."]
(c7-1 / multi-sentence
      :snt1 (c7-10 / and
                   :op1 (c7-5 / migrate-01
                              :manner (c7-3 / scale
                                            :mod (c7-6 / precedent
                                                       :polarity -)))
                   :op2 (c7-4 / recommend-01
                              :ARG1 (c7-8 / worry-01
                                          :ARG0 (c7-7 / we)
                                          :polarity -)))
      :snt2 (c7-11 / die-01
                   :ARG1 (c7-9 / continent
                               :name (c7-2 / name
                                           :op1 "Europe"))
                   :mod (c7-0 / strange)))

# ::snt jews gonna jew
# ::tokens ["jews", "gon", "na", "jew"]
# ::lemmas ["jews", "gon", "to", "jew"]
(c8-1 / say-01
      :ARG0 (c8-4 / i)
      :ARG1 (c8-3 / jeez
                  :mode expressive)
      :ARG2 (c8-2 / person
                  :name (c8-0 / name
                              :op1 "Jew")))

# ::snt Press for reversal if madness
# ::tokens ["Press", "for", "reversal", "if", "madness"]
# ::lemmas ["press", "for", "reversal", "if", "madness"]
(c10-3 / press-02
       :ARG0 (c10-2 / you)
       :ARG2 (c10-1 / reverse-01)
       :condition (c10-0 / madness)
       :mode imperative)

# ::snt She lives in New York. If she's that bothered maybe she should move back home
# ::tokens ["She", "lives", "in", "New", "York", ".", "If", "she", "'s", "that", "bothered", "maybe", "she", "should", "move", "back", "home"]
# ::lemmas ["she", "live", "in", "New", "York", ".", "if", "she", "be", "that", "bother", "maybe", "she", "should", "move", "back", "home"]
(c11-3 / multi-sentence
       :snt1 (c11-7 / live-01
                    :ARG0 (c11-4 / she)
                    :location (c11-11 / city
                                      :name (c11-2 / name
                                                   :op1 "New"
                                                   :op2 "York")))
       :snt2 (c11-8 / possible-01
                    :ARG1 (c11-5 / recommend-01
                                 :ARG1 (c11-6 / move-01
                                              :ARG1 (c11-0 / she)
                                              :ARG2 (c11-9 / home
                                                           :mod (c11-1 / back)))
                                 :condition (c11-10 / bother-01
                                                    :ARG1 c11-0
                                                    :degree (c11-12 / that)))))

# ::snt So not the EU then...
# ::tokens ["So", "not", "the", "EU", "then", "..."]
# ::lemmas ["so", "not", "the", "EU", "then", "..."]
(c12-0 / cause-01
       :ARG1 (c12-3 / organization
                    :name (c12-2 / name
                                 :op1 "EU")
                    :mod (c12-1 / then)
                    :polarity -))

# ::snt ...especially to a !!!
# ::tokens ["...", "especially", "to", "a", "!", "!", "!"]
# ::lemmas ["...", "especially", "to", "a", "!", "!", "!"]
(c13-0 / especially
       :mode expressive)

# ::snt Quite. The fact that one of mine was gives me a possible escape route, but other than that it's just dreadful, second gen immigrant or not.
# ::tokens ["Quite", ".", "The", "fact", "that", "one", "of", "mine", "was", "gives", "me", "a", "possible", "escape", "route", ",", "but", "other", "than", "that", "it", "'s", "just", "dreadful", ",", "second", "gen", "immigrant", "or", "not", "."]
# ::lemmas ["quite", ".", "the", "fact", "that", "one", "of", "mine", "be", "give", "i", "a", "possible", "escape", "route", ",", "but", "other", "than", "that", "it", "be", "just", "dreadful", ",", "second", "gen", "immigrant", "or", "not", "."]
(c14-10 / multi-sentence
        :snt1 (c14-4 / quite)
        :snt2 (c14-12 / contrast-01
                      :ARG1 (c14-6 / give-01
                                   :ARG0 (c14-1 / one
                                                :ARG1-of (c14-17 / include-91
                                                                 :ARG2 (c14-5 / thing
                                                                              :poss (c14-2 / i))))
                                   :ARG1 (c14-14 / route
                                                 :path-of (c14-15 / escape-01
                                                                  :ARG0 c14-2)
                                                 :ARG1-of (c14-16 / possible-01))
                                   :ARG2 c14-2
                                   :mod (c14-13 / fact))
                      :ARG2 (c14-7 / except-01
                                   :ARG1 c14-6
                                   :ARG2 (c14-9 / or
                                                :op1 (c14-18 / dreadful-02
                                                             :ARG1 (c14-11 / person
                                                                           :ARG0-of (c14-8 / immigrate-01)
                                                                           :mod (c14-0 / gen
                                                                                       :ord (c14-19 / ordinal-entity
                                                                                                    :value 2)))
                                                             :op2-of c14-9)
                                                :ARG1 c14-11
                                                :polarity -)
                                   :mod (c14-3 / just))))

# ::snt Seems like you are right in the middle of a manic episode - double your Quetiapine
# ::tokens ["Seems", "like", "you", "are", "right", "in", "the", "middle", "of", "a", "manic", "episode", "-", "double", "your", "Quetiapine"]
# ::lemmas ["seem", "like", "you", "be", "right", "in", "the", "middle", "of", "a", "manic", "episode", "-", "double", "your", "Quetiapine"]
(c15-4 / seem-01
       :ARG1 (c15-0 / be-located-at-91
                    :ARG1 (c15-1 / you
                                 :ARG1-of (c15-9 / double-01
                                                 :ARG3 (c15-8 / product
                                                              :name (c15-2 / name
                                                                           :op1 "Quetiapine")
                                                              :poss c15-1)))
                    :ARG2 (c15-3 / middle
                                 :part-of (c15-6 / episode
                                                 :mod (c15-7 / manic))
                                 :mod (c15-5 / right))))

# ::snt You remember this man? Anders Breivik? he killed teenagers in a few hours in . Not difficult to find out more about white terror!
# ::tokens ["You", "remember", "this", "man", "?", "Anders", "Breivik", "?", "he", "killed", "teenagers", "in", "a", "few", "hours", "in", ".", "Not", "difficult", "to", "find", "out", "more", "about", "white", "terror", "!"]
# ::lemmas ["you", "remember", "this", "man", "?", "Anders", "Breivik", "?", "he", "kill", "teenager", "in", "a", "few", "hours", "in", ".", "not", "difficult", "to", "find", "out", "more", "about", "white", "terror", "!"]
(c16-9 / multi-sentence
       :snt1 (c16-15 / remember-01
                     :ARG0 (c16-1 / you)
                     :ARG1 (c16-2 / man
                                  :mod (c16-8 / this))
                     :polarity (c16-7 / amr-unknown))
       :snt2 (c16-3 / kill-01
                    :ARG0 (c16-16 / person
                                  :name (c16-14 / name
                                                :op1 "Anders"
                                                :op2 "Breivik"))
                    :ARG1 (c16-11 / teenager)
                    :polarity (c16-6 / amr-unknown)
                    :time (c16-5 / after
                                 :quant (c16-13 / few
                                                :op1 (c16-19 / temporal-quantity
                                                             :unit (c16-4 / hour)
                                                             :quant 1))))
       :snt3 (c16-20 / difficult
                     :domain (c16-17 / find-out-03
                                     :ARG1 (c16-0 / terror-02
                                                  :ARG0 (c16-10 / person
                                                                :ARG1-of (c16-18 / white-02))
                                                  :mod (c16-12 / more)))
                     :polarity -))

# ::snt huh? Labour committed to leaving EU and regaining immigration control %+ vote in election. Or were Labour lying to hijack votes?
# ::tokens ["huh", "?", "Labour", "committed", "to", "leaving", "EU", "and", "regaining", "immigration", "control", "%", "+", "vote", "in", "election", ".", "Or", "were", "Labour", "lying", "to", "hijack", "votes", "?"]
# ::lemmas ["huh", "?", "labour", "commit", "to", "leave", "EU", "and", "regain", "immigration", "control", "%", "+", "vote", "in", "election", ".", "or", "be", "Labour", "lie", "to", "hijack", "vote", "?"]
(c17-3 / multi-sentence
       :snt1 (c17-7 / huh
                    :mode expressive)
       :snt2 (c17-11 / commit-01
                     :ARG1 (c17-8 / political-party
                                  :name (c17-2 / name
                                               :op1 "Labour"))
                     :ARG2 (c17-14 / and
                                   :op1 (c17-9 / leave-11
                                               :ARG0 c17-8
                                               :ARG1 (c17-0 / organization
                                                            :name (c17-10 / name
                                                                          :op1 "EU")))
                                   :op2 (c17-4 / regain-01
                                               :ARG0 c17-8
                                               :ARG1 (c17-17 / control-01
                                                             :ARG0 c17-8
                                                             :ARG1 (c17-13 / immigrate-01)))
                                   :subevent-of (c17-6 / elect-01)))
       :snt3 (c17-1 / or
                    :op2 (c17-16 / lie-08
                                 :ARG0 c17-8)
                    :ARG3 (c17-12 / hijack-01
                                  :ARG0 c17-8
                                  :ARG1 (c17-5 / vote-01))
                    :polarity (c17-15 / amr-unknown)))

# ::snt Mine weren't, and it still does.
# ::tokens ["Mine", "were", "n't", ",", "and", "it", "still", "does", "."]
# ::lemmas ["mine", "be", "not", ",", "and", "it", "still", "do", "."]
(c18-1 / and
       :op1 (c18-2 / event
                   :mod (c18-4 / thing
                               :poss (c18-3 / i))
                   :polarity -)
       :op2 (c18-5 / event
                   :mod (c18-0 / still)
                   :mod c18-4))

# ::snt "misguided" How the luvvies desperate to rehabilitate evil nutters....shameful
# ::tokens ["\"", "misguided", "\"", "How", "the", "luvvies", "desperate", "to", "rehabilitate", "evil", "nutters", "....", "shameful"]
# ::lemmas ["\"", "misguided", "\"", "how", "the", "luvvie", "desperate", "to", "rehabilitate", "evil", "nutter", "....", "shameful"]
(c19-0 / multi-sentence
       :snt1 (c19-5 / misguide-01
                    :ARG0 (c19-7 / amr-unknown))
       :snt2 (c19-8 / desperate-02
                    :ARG0 (c19-6 / luvvy)
                    :ARG1 (c19-3 / rehabilitate-01
                                 :ARG0 c19-6
                                 :ARG1 (c19-1 / nutter
                                              :mod (c19-4 / evil))))
       :snt3 (c19-2 / shame-02))

# ::snt noting thing to see here - just another luvvie spouting anti- propaganda - move along please
# ::tokens ["noting", "thing", "to", "see", "here", "-", "just", "another", "luvvie", "spouting", "anti-", "propaganda", "-", "move", "along", "please"]
# ::lemmas ["note", "thing", "to", "see", "here", "-", "just", "another", "luvvie", "spouting", "anti-", "propaganda", "-", "move", "along", "please"]
(c20-3 / move-01
       :ARG0 (c20-2 / you
                    :ARG1-of c20-3)
       :ARG2 (c20-7 / along)
       :ARG1-of (c20-11 / cause-01
                        :ARG0 (c20-14 / thing
                                      :ARG1-of (c20-5 / see-01
                                                      :location (c20-8 / here))
                                      :ARG1-of (c20-9 / mean-01
                                                      :ARG2 (c20-0 / spout-01
                                                                   :ARG0 (c20-10 / person
                                                                                 :name (c20-4 / name
                                                                                              :op1 "Luvvie")
                                                                                 :mod (c20-13 / another)
                                                                                 :mod (c20-12 / just))
                                                                   :ARG1 (c20-6 / propaganda
                                                                                :ARG0-of (c20-1 / oppose-01
                                                                                                :ARG1 c20-1))))))
       :mode imperative
       :polite +)

# ::snt Brexit feels like death???????? . Rachel I find that quiet offensive &amp; insulting as you live in New York with hubby Daniel Craig
# ::tokens ["Brexit", "feels", "like", "death", "?", "?", "?", "?", "?", "?", "?", "?", ".", "Rachel", "I", "find", "that", "quiet", "offensive", "&", "amp", ";", "insulting", "as", "you", "live", "in", "New", "York", "with", "hubby", "Daniel", "Craig"]
# ::lemmas ["Brexit", "feel", "like", "death", "?", "?", "?", "?", "?", "?", "?", "?", ".", "Rachel", "i", "find", "that", "quiet", "offensive", "&", "amp", ";", "insult", "as", "you", "live", "in", "New", "York", "with", "hubby", "Daniel", "Craig"]
(c21-11 / multi-sentence
        :snt1 (c21-14 / feel-02
                      :ARG0 (c21-13 / country
                                    :name (c21-15 / name
                                                  :op1 "Britain"))
                      :ARG1 (c21-21 / die-01)
                      :polarity (c21-8 / amr-unknown))
        :snt2 (c21-17 / find-02
                      :ARG0 (c21-20 / i)
                      :ARG1 (c21-6 / and
                                   :op1 (c21-2 / offend-01
                                               :ARG0 (c21-7 / that
                                                            :ARG1-of (c21-9 / quiet-04)))
                                   :op2 (c21-4 / insult-01
                                               :ARG0 c21-7))
                      :ARG1-of (c21-10 / cause-01
                                       :ARG0 (c21-0 / live-01
                                                    :ARG0 (c21-3 / you)
                                                    :location (c21-1 / city
                                                                     :name (c21-12 / name
                                                                                   :op1 "New"
                                                                                   :op2 "York"))
                                                    :accompanier (c21-16 / person
                                                                         :name (c21-18 / name
                                                                                       :op1 "Daniel"
                                                                                       :op2 "Craig")
                                                                         :ARG0-of (c21-5 / have-rel-role-91
                                                                                         :ARG1 c21-3
                                                                                         :ARG2 (c21-19 / hubby)))))))

# ::snt Charleston church Dylann Roof? Kansas? Portland, Jo Cox? and many many more white male terror attacks are times more than others.
# ::tokens ["Charleston", "church", "Dylann", "Roof", "?", "Kansas", "?", "Portland", ",", "Jo", "Cox", "?", "and", "many", "many", "more", "white", "male", "terror", "attacks", "are", "times", "more", "than", "others", "."]
# ::lemmas ["Charleston", "church", "Dylann", "Roof", "?", "Kansas", "?", "Portland", ",", "Jo", "Cox", "?", "and", "many", "many", "more", "white", "male", "terror", "attack", "be", "time", "more", "than", "other", "."]
(c22-9 / multi-sentence
       :snt1 (c22-12 / church
                     :poss (c22-17 / person
                                   :name (c22-16 / name
                                                 :op1 "Dylann"
                                                 :op2 "Roof"))
                     :location (c22-8 / city
                                      :name (c22-11 / name
                                                    :op1 "Charleston")))
       :snt2 (c22-0 / state
                    :name (c22-18 / name
                                  :op1 "Kansas"))
       :snt3 (c22-1 / city
                    :name (c22-13 / name
                                  :op1 "Portland"))
       :snt4 (c22-10 / person
                     :name (c22-20 / name
                                   :op1 "Jo"
                                   :op2 "Cox"))
       :snt5 (c22-7 / attack-01
                    :ARG0 (c22-3 / male
                                 :ARG1-of (c22-19 / white-02))
                    :ARG1-of (c22-4 / have-quant-91
                                    :ARG3 (c22-6 / times
                                                 :quant (c22-15 / many))
                                    :ARG4 (c22-5 / attack-01
                                                 :ARG0 (c22-2 / other)
                                                 :mod (c22-14 / terror)))))

# ::snt What horror? You mean the few people that got killed by a handful of misguided people?
# ::tokens ["What", "horror", "?", "You", "mean", "the", "few", "people", "that", "got", "killed", "by", "a", "handful", "of", "misguided", "people", "?"]
# ::lemmas ["what", "horror", "?", "you", "mean", "the", "few", "people", "that", "got", "kill", "by", "a", "handful", "of", "misguided", "people", "?"]
(c23-2 / multi-sentence
       :snt1 (c23-5 / horror
                    :domain (c23-9 / amr-unknown))
       :snt2 (c23-4 / mean-01
                    :ARG0 (c23-1 / you)
                    :ARG2 (c23-6 / person
                                 :quant (c23-0 / few)
                                 :ARG1-of (c23-7 / kill-01
                                                 :ARG0 (c23-3 / person
                                                              :ARG1-of (c23-10 / misguide-01)
                                                              :quant (c23-8 / handful))))))

# ::snt Do tell me which European country does this horde originate from? Because once I finally have this fact I can support your cause
# ::tokens ["Do", "tell", "me", "which", "European", "country", "does", "this", "horde", "originate", "from", "?", "Because", "once", "I", "finally", "have", "this", "fact", "I", "can", "support", "your", "cause"]
# ::lemmas ["do", "tell", "i", "which", "European", "country", "do", "this", "horde", "originate", "from", "?", "because", "once", "i", "finally", "have", "this", "fact", "i", "can", "support", "your", "cause"]
(c24-10 / multi-sentence
        :snt1 (c24-7 / tell-01
                     :ARG0 (c24-3 / you)
                     :ARG1 (c24-2 / originate-01
                                  :ARG1 (c24-5 / horde
                                               :mod (c24-12 / this))
                                  :ARG2 (c24-11 / country
                                                :location (c24-9 / continent
                                                                 :name (c24-15 / name
                                                                               :op1 "Europe"))
                                                :source (c24-6 / amr-unknown)))
                     :ARG2 (c24-19 / i)
                     :mode imperative)
        :snt2 (c24-1 / cause-01
                     :ARG0 (c24-16 / possible-01
                                   :ARG1 (c24-0 / support-01
                                                :ARG0 (c24-4 / i)
                                                :ARG1 (c24-13 / cause
                                                              :poss (c24-8 / you))
                                                :time (c24-18 / have-03
                                                              :ARG0 c24-4
                                                              :ARG1 (c24-14 / fact
                                                                            :mod (c24-20 / this))
                                                              :mod (c24-17 / final))))))

# ::snt **you're**
# ::tokens ["*", "*", "you", "'re", "*", "*"]
# ::lemmas ["*", "*", "you", "be", "*", "*"]
(c25-0 / you)

# ::snt I mean , and all stupid racist white brain-dead english white males!
# ::tokens ["I", "mean", ",", "and", "all", "stupid", "racist", "white", "brain", "-", "dead", "english", "white", "males", "!"]
# ::lemmas ["i", "mean", ",", "and", "all", "stupid", "racist", "white", "brain", "-", "dead", "english", "white", "male", "!"]
(c27-1 / mean-01
       :ARG0 (c27-10 / i)
       :ARG2 (c27-4 / and
                    :op1 (c27-6 / male
                                :mod (c27-9 / all)
                                :mod (c27-5 / racist)
                                :ARG1-of (c27-11 / die-01)
                                :mod (c27-0 / brain)
                                :ARG1-of (c27-7 / white-02)
                                :mod (c27-8 / country
                                            :name (c27-2 / name
                                                         :op1 "England"))
                                :mod (c27-3 / stupid)
                                :mod c27-5)))

# ::snt and english one!
# ::tokens ["and", "english", "one", "!"]
# ::lemmas ["and", "english", "one", "!"]
(c28-3 / and
       :op2 (c28-0 / one
                   :mod (c28-1 / country
                               :name (c28-2 / name
                                            :op1 "England"))))

# ::snt american white male one!
# ::tokens ["american", "white", "male", "one", "!"]
# ::lemmas ["american", "white", "male", "one", "!"]
(c29-0 / one
       :mod (c29-2 / male)
       :ARG1-of (c29-4 / white-02)
       :mod (c29-3 / country
                   :name (c29-1 / name
                                :op1 "America")))

# ::snt The only ones who ever did that were the anglo-saxons back in the days. I don't recall any invasion these days
# ::tokens ["The", "only", "ones", "who", "ever", "did", "that", "were", "the", "anglo", "-", "saxons", "back", "in", "the", "days", ".", "I", "do", "n't", "recall", "any", "invasion", "these", "days"]
# ::lemmas ["the", "only", "one", "who", "ever", "do", "that", "be", "the", "anglo", "-", "saxon", "back", "in", "the", "days", ".", "i", "do", "not", "recall", "any", "invasion", "these", "days"]
(c30-2 / multi-sentence
       :snt1 (c30-8 / person
                    :mod (c30-0 / only)
                    :ARG0-of (c30-14 / do-02
                                     :ARG1 (c30-12 / that)
                                     :time (c30-7 / ever))
                    :domain (c30-5 / agent
                                   :mod (c30-11 / island
                                                :name (c30-3 / name
                                                             :op1 "Anglo-Saxon")))
                    :time (c30-10 / day
                                  :mod (c30-1 / back)))
       :snt2 (c30-6 / recall-02
                    :ARG0 (c30-4 / i)
                    :ARG1 (c30-15 / invade-01
                                  :mod (c30-13 / any))
                    :time (c30-9 / day
                                 :mod (c30-16 / this))
                    :polarity -))

# ::snt It was a different time then.People didn't come here full of hate.They came full of hope!
# ::tokens ["It", "was", "a", "different", "time", "then", ".", "People", "did", "n't", "come", "here", "full", "of", "hate", ".", "They", "came", "full", "of", "hope", "!"]
# ::lemmas ["it", "be", "a", "different", "time", "then", ".", "people", "do", "not", "come", "here", "full", "of", "hate", ".", "they", "come", "full", "of", "hope", "!"]
(c31-1 / multi-sentence
       :snt1 (c31-12 / differ-02
                     :ARG1 (c31-8 / time)
                     :time (c31-10 / then))
       :snt2 (c31-6 / contrast-01
                    :ARG1 (c31-13 / come-01
                                  :ARG1 (c31-4 / person)
                                  :ARG4 (c31-3 / here)
                                  :manner (c31-0 / fill-01
                                                 :ARG1 c31-4
                                                 :ARG2 (c31-7 / hate-01))
                                  :polarity -)
                    :ARG2 (c31-9 / come-01
                                 :ARG1 (c31-11 / they)
                                 :ARG4 c31-3)
                    :manner (c31-5 / fill-01
                                   :ARG1 c31-11
                                   :ARG2 (c31-2 / hopeful-03
                                                :ARG0 c31-11))))

# ::snt Racists, fascists, bigots, idiots, lowlives Tommy Robinson's F*CK BOYs, UKIPY slaves etc etc!
# ::tokens ["Racists", ",", "fascists", ",", "bigots", ",", "idiots", ",", "lowlives", "Tommy", "Robinson", "'s", "F*CK", "BOYs", ",", "UKIPY", "slaves", "etc", "etc", "!"]
# ::lemmas ["racist", ",", "fascist", ",", "bigot", ",", "idiot", ",", "lowlive", "Tommy", "Robinson", "'s", "f*ck", "boy", ",", "ukipy", "slave", "etc", "etc", "!"]
(c32-7 / and
       :op1 (c32-15 / person
                    :mod (c32-9 / political-movement
                                :name (c32-13 / name
                                              :op1 "Nazism")))
       :op2 (c32-4 / person
                   :mod (c32-3 / political-movement
                               :name (c32-10 / name
                                             :op1 "Fascism")))
       :op3 (c32-8 / bigot)
       :op4 (c32-17 / idiot)
       :op5 (c32-6 / person
                   :mod (c32-2 / low-life)
                   :ARG0-of (c32-5 / have-rel-role-91
                                   :ARG1 (c32-18 / person
                                                 :name (c32-16 / name
                                                               :op1 "Tommy"
                                                               :op2 "Robinson"))
                                   :ARG2 (c32-1 / boyfriend)))
       :op6 (c32-0 / slave
                   :mod (c32-12 / political-movement
                                :name (c32-11 / name
                                              :op1 "UKIPY")))
       :op7 (c32-14 / et-cetera))

# ::snt UKIP dumb brain-dead lowlives...righ!
# ::tokens ["UKIP", "dumb", "brain", "-", "dead", "lowlives", "...", "righ", "!"]
# ::lemmas ["UKIP", "dumb", "brain", "-", "dead", "lowlive", "...", "righ", "!"]
(c33-2 / sigh-02
       :ARG1 (c33-3 / low-life
                    :mod (c33-6 / dumb)
                    :ARG1-of (c33-5 / die-01)
                    :mod (c33-0 / brain)
                    :mod (c33-4 / country
                                :name (c33-1 / name
                                             :op1 "UK")))
       :mode expressive)

# ::snt bomber parents are refugees too
# ::tokens ["bomber", "parents", "are", "refugees", "too"]
# ::lemmas ["bomber", "parent", "be", "refugee", "too"]
(c34-2 / refugee
       :domain (c34-4 / person
                      :ARG0-of (c34-3 / have-rel-role-91
                                      :ARG1 (c34-0 / bomb-01)
                                      :ARG2 (c34-1 / parent)))
       :mod (c34-5 / too))

# ::snt You cannot get lower than this, could you?
# ::tokens ["You", "can", "not", "get", "lower", "than", "this", ",", "could", "you", "?"]
# ::lemmas ["you", "can", "not", "get", "low", "than", "this", ",", "could", "you", "?"]
(c35-5 / possible-01
       :ARG1 (c35-7 / get-03
                    :ARG1 (c35-0 / you)
                    :ARG2 (c35-3 / have-degree-91
                                 :ARG1 c35-0
                                 :ARG2 (c35-4 / low-04
                                              :ARG1 c35-0)
                                 :ARG3 (c35-1 / more)
                                 :ARG4 (c35-6 / this)))
       :ARG1-of (c35-2 / request-confirmation-91)
       :polarity -)

# ::snt Exactly
# ::tokens ["Exactly"]
# ::lemmas ["exactly"]
(c36-0 / exact)

# ::snt Wow Weiss is still smoking hot even tho she must be getting on in years. kudos to u, Rachel.
# ::tokens ["Wow", "Weiss", "is", "still", "smoking", "hot", "even", "tho", "she", "must", "be", "getting", "on", "in", "years", ".", "kudos", "to", "u", ",", "Rachel", "."]
# ::lemmas ["wow", "Weiss", "be", "still", "smoke", "hot", "even", "tho", "she", "must", "be", "get", "on", "in", "years", ".", "kudo", "to", "u", ",", "Rachel", "."]
(c37-3 / multi-sentence
       :snt1 (c37-6 / have-concession-91
                    :ARG1 (c37-4 / smoke-02
                                 :ARG0 (c37-7 / person
                                              :name (c37-2 / name
                                                           :op1 "Weiss"))
                                 :mod (c37-0 / still)
                                 :ARG1-of (c37-12 / hot-05))
                    :ARG2 (c37-14 / infer-01
                                  :ARG1 (c37-16 / get-on-20
                                                :ARG0 c37-7
                                                :time (c37-15 / after
                                                              :quant (c37-8 / multiple
                                                                            :op1 (c37-13 / temporal-quantity
                                                                                         :unit (c37-1 / year)
                                                                                         :quant 1)))))
                    :mod (c37-11 / wow
                                 :mode expressive))
       :snt2 (c37-9 / kudos
                    :beneficiary (c37-17 / you)
                    :beneficiary (c37-5 / person
                                        :name (c37-10 / name
                                                      :op1 "Rachel"))))

# ::snt Histrionics
# ::tokens ["Histrionics"]
# ::lemmas ["Histrionics"]
(c38-0 / history)

# ::snt Ffs
# ::tokens ["Ffs"]
# ::lemmas ["ffs"]
(c39-1 / person
       :name (c39-0 / name
                    :op1 "Ffs"))

# ::snt - I call myself a Unicostal
# ::tokens ["-", "I", "call", "myself", "a", "Unicostal"]
# ::lemmas ["-", "i", "call", "myself", "a", "Unicostal"]
(c40-0 / call-01
       :ARG0 (c40-2 / i
                    :ARG1-of c40-0)
       :ARG2 (c40-3 / animal
                    :mod (c40-1 / Unicostal)))

# ::snt she must have it so hard.
# ::tokens ["she", "must", "have", "it", "so", "hard", "."]
# ::lemmas ["she", "must", "have", "it", "so", "hard", "."]
(c42-5 / infer-01
       :ARG1 (c42-3 / have-03
                    :ARG0 (c42-1 / she)
                    :ARG1 (c42-2 / it)
                    :ARG1-of (c42-4 / hard-02
                                    :degree (c42-0 / so))))

# ::snt So sorry.
# ::tokens ["So", "sorry", "."]
# ::lemmas ["so", "sorry", "."]
(c43-1 / sorry-01
       :degree (c43-0 / so))

# ::snt - We're here because we said Yes to life. Hell is when we forget that
# ::tokens ["-", "We", "'re", "here", "because", "we", "said", "Yes", "to", "life", ".", "Hell", "is", "when", "we", "forget", "that"]
# ::lemmas ["-", "we", "be", "here", "because", "we", "say", "yes", "to", "life", ".", "Hell", "be", "when", "we", "forget", "that"]
(c44-3 / multi-sentence
       :snt1 (c44-1 / be-located-at-91
                    :ARG1 (c44-9 / we)
                    :ARG2 (c44-5 / here)
                    :ARG1-of (c44-10 / cause-01
                                     :ARG0 (c44-4 / say-01
                                                  :ARG0 c44-9
                                                  :ARG1 (c44-2 / yes)
                                                  :ARG3 (c44-6 / life))))
       :snt2 (c44-7 / be-temporally-at-91
                    :ARG1 (c44-0 / forget-01
                                 :ARG0 (c44-8 / we)
                                 :ARG1 (c44-12 / that))
                    :ARG2 (c44-11 / hell)))

# ::snt Mine came when population was million,me born at million,today it's million.for future children help Brexit control population.
# ::tokens ["Mine", "came", "when", "population", "was", "million", ",", "me", "born", "at", "million", ",", "today", "it", "'s", "million.for", "future", "children", "help", "Brexit", "control", "population", "."]
# ::lemmas ["mine", "come", "when", "population", "be", "million", ",", "i", "bear", "at", "million", ",", "today", "it", "be", "million.for", "future", "child", "help", "Brexit", "control", "population", "."]
(c45-2 / multi-sentence
       :snt1 (c45-7 / come-01
                    :ARG1 (c45-10 / thing
                                  :poss (c45-11 / i))
                    :time (c45-12 / and
                                  :op1 (c45-6 / population
                                              :quant 1000000)
                                  :op2 (c45-1 / bear-02
                                              :ARG1 c45-11
                                              :time (c45-14 / today)
                                              :quant 1000000)))
       :snt2 (c45-5 / help-01
                    :ARG0 (c45-13 / child
                                  :time (c45-0 / future))
                    :ARG1 (c45-9 / control-01
                                 :ARG0 (c45-3 / political-party
                                              :name (c45-4 / name
                                                           :op1 "EU"))
                                 :ARG1 (c45-8 / population))
                    :ARG2 c45-13))

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c46-0 / cause-01
       :ARG0 (c46-1 / amr-unknown))

# ::snt Mine too...
# ::tokens ["Mine", "too", "..."]
# ::lemmas ["mine", "too", "..."]
(c47-2 / thing
       :poss (c47-1 / i)
       :mod (c47-0 / too))

# ::snt I watched The Lobster the other night, she made that movie work. She's incredibly charming and refreshingly delightful.
# ::tokens ["I", "watched", "The", "Lobster", "the", "other", "night", ",", "she", "made", "that", "movie", "work", ".", "She", "'s", "incredibly", "charming", "and", "refreshingly", "delightful", "."]
# ::lemmas ["i", "watch", "the", "Lobster", "the", "other", "night", ",", "she", "make", "that", "movie", "work", ".", "she", "be", "incredibly", "charming", "and", "refreshingly", "delightful", "."]
(c48-2 / multi-sentence
       :snt1 (c48-10 / watch-01
                     :ARG0 (c48-13 / i)
                     :ARG1 (c48-9 / work-09
                                  :ARG0 (c48-4 / she)
                                  :ARG1 (c48-7 / movie
                                               :name (c48-3 / name
                                                            :op1 "The"
                                                            :op2 "Lobster")))
                     :time (c48-15 / date-entity
                                   :mod (c48-0 / other)
                                   :dayperiod (c48-8 / night)))
       :snt2 (c48-14 / and
                     :op1 (c48-11 / charm-01
                                  :ARG0 (c48-1 / she)
                                  :degree (c48-5 / incredible))
                     :op2 (c48-12 / delight-01
                                  :ARG0 c48-1
                                  :ARG0-of (c48-6 / refresh-01
                                                  :ARG1 c48-1))))

# ::snt Yep, from the Mummy to the Fountain..... she makes weird scripts wonderful LOL
# ::tokens ["Yep", ",", "from", "the", "Mummy", "to", "the", "Fountain", ".....", "she", "makes", "weird", "scripts", "wonderful", "LOL"]
# ::lemmas ["Yep", ",", "from", "the", "Mummy", "to", "the", "Fountain", ".....", "she", "make", "weird", "script", "wonderful", "LOL"]
(c49-1 / make-02
       :ARG0 (c49-3 / she)
       :ARG1 (c49-10 / wonderful-03
                     :ARG1 (c49-0 / script-01
                                  :mod (c49-8 / weird)))
       :ARG2-of (c49-6 / laugh-01
                       :ARG0 (c49-11 / i)
                       :manner (c49-13 / loud)
                       :mode expressive)
       :source (c49-12 / and
                       :op1 (c49-7 / person
                                   :ARG0-of (c49-5 / have-rel-role-91
                                                   :ARG2 (c49-9 / mum)))
                       :op2 (c49-2 / person
                                   :name (c49-4 / name
                                                :op1 "The"
                                                :op2 "Fountain"))))

# ::snt Love her.
# ::tokens ["Love", "her", "."]
# ::lemmas ["love", "she", "."]
(c50-0 / love-01
       :ARG1 (c50-1 / she))
