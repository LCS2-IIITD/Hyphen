# ::snt Lmfaoo omg
# ::tokens ["Lmfaoo", "omg"]
# ::lemmas ["lmfaoo", "omg"]
(c1-2 / laugh-01
      :ARG0 (c1-3 / i)
      :manner (c1-1 / loud)
      :mod (c1-0 / omg)
      :mode expressive)

# ::snt This account is searching amber's name to argue lmfaooooo
# ::tokens ["This", "account", "is", "searching", "amber", "'s", "name", "to", "argue", "lmfaooooo"]
# ::lemmas ["this", "account", "be", "search", "amber", "'s", "name", "to", "argue", "lmfaooooo"]
(c2-1 / search-01
      :ARG0 (c2-5 / account
                  :mod (c2-3 / this))
      :ARG1 (c2-0 / name
                  :poss (c2-4 / amber))
      :purpose (c2-2 / argue-01
                     :ARG0 c2-5
                     :ARG1 (c2-6 / amr-unintelligible
                                 :value "lmfaooooo")))

# ::snt Basically
# ::tokens ["Basically"]
# ::lemmas ["basically"]
(c3-0 / basic)

# ::snt Each of her exs tho
# ::tokens ["Each", "of", "her", "exs", "tho"]
# ::lemmas ["each", "of", "her", "exs", "tho"]
(c4-3 / have-concession-91
      :ARG1 (c4-7 / thing
                  :mod (c4-2 / each)
                  :ARG1-of (c4-6 / include-91
                                 :ARG2 (c4-4 / person
                                             :ARG0-of (c4-5 / have-rel-role-91
                                                            :ARG1 (c4-1 / she)
                                                            :ARG2 (c4-0 / significant-other)
                                                            :time (c4-8 / ex))))))

# ::snt This thread
# ::tokens ["This", "thread"]
# ::lemmas ["this", "thread"]
(c5-1 / thread
      :mod (c5-0 / this))

# ::snt how it yrs ago w savage in the pic?
# ::tokens ["how", "it", "yrs", "ago", "w", "savage", "in", "the", "pic", "?"]
# ::lemmas ["how", "it", "yr", "ago", "w", "savage", "in", "the", "pic", "?"]
(c6-4 / savage
      :domain (c6-6 / person)
      :location (c6-3 / pic)
      :time (c6-0 / before
                  :op1 (c6-2 / now)
                  :quant (c6-7 / temporal-quantity
                               :unit (c6-1 / year)
                               :quant 1))
      :manner (c6-5 / amr-unknown))

# ::snt They gone have to stomp and clap
# ::tokens ["They", "gone", "have", "to", "stomp", "and", "clap"]
# ::lemmas ["they", "go", "have", "to", "stomp", "and", "clap"]
(c7-0 / obligate-01
      :ARG2 (c7-2 / and
                  :op1 (c7-1 / stomp-01
                             :ARG0 (c7-4 / they))
                  :op2 (c7-3 / clap-01
                             :ARG0 c7-4))
      :time (c7-5 / go-02
                  :ARG0 c7-4))

# ::snt This is why you dont date famous rappersyou gon hear them everywhere luv what she did tho
# ::tokens ["This", "is", "why", "you", "do", "nt", "date", "famous", "rappersyou", "gon", "hear", "them", "everywhere", "luv", "what", "she", "did", "tho"]
# ::lemmas ["this", "be", "why", "you", "do", "not", "date", "famous", "rappersyou", "gon", "hear", "they", "everywhere", "luv", "what", "she", "do", "tho"]
(c8-4 / multi-sentence
      :snt1 (c8-11 / cause-01
                   :ARG0 (c8-14 / this)
                   :ARG1 (c8-16 / date-02
                                :ARG0 (c8-3 / you)
                                :ARG1 (c8-9 / person
                                            :ARG0-of (c8-6 / rap-02)
                                            :ARG1-of (c8-1 / fame-01))
                                :polarity -))
      :snt2 (c8-2 / obligate-01
                  :ARG1 (c8-15 / you)
                  :ARG2 (c8-8 / hear-01
                              :ARG0 c8-15
                              :ARG2 c8-9
                              :location (c8-7 / everywhere)))
      :snt3 (c8-13 / have-concession-91
                   :ARG1 (c8-10 / know-01
                                :ARG0 (c8-0 / you)
                                :ARG1 (c8-17 / thing
                                             :ARG1-of (c8-12 / do-02
                                                             :ARG0 (c8-5 / she))))))

# ::snt Type here since...
# ::tokens ["Type", "here", "since", "..."]
# ::lemmas ["type", "here", "since", "..."]
(c9-3 / type-01
      :ARG0 (c9-1 / you)
      :ARG1 (c9-2 / here)
      :time (c9-0 / since)
      :mode imperative)

# ::snt Then only JayZ survives and the rest of the females.
# ::tokens ["Then", "only", "JayZ", "survives", "and", "the", "rest", "of", "the", "females", "."]
# ::lemmas ["then", "only", "JayZ", "survive", "and", "the", "rest", "of", "the", "female", "."]
(c10-3 / survive-01
       :ARG0 (c10-8 / and
                    :op1 (c10-5 / person
                                :name (c10-2 / name
                                             :op1 "JayZ"))
                    :op2 (c10-4 / rest
                                :ARG1-of (c10-7 / include-91
                                                :ARG2 (c10-0 / female))))
       :mod (c10-1 / only)
       :time (c10-6 / then))

# ::snt bro the tweet you quoted is literally over a year old...
# ::tokens ["bro", "the", "tweet", "you", "quoted", "is", "literally", "over", "a", "year", "old", "..."]
# ::lemmas ["bro", "the", "tweet", "you", "quote", "be", "literally", "over", "a", "year", "old", "..."]
(c11-2 / age-01
       :ARG1 (c11-5 / thing
                    :ARG1-of (c11-8 / tweet-01)
                    :ARG1-of (c11-4 / quote-01
                                    :ARG0 (c11-1 / you)))
       :ARG2 (c11-0 / over
                    :op1 (c11-6 / temporal-quantity
                                :unit (c11-7 / year)
                                :quant 1)
                    :mod (c11-3 / literal)))

# ::snt listen to music
# ::tokens ["listen", "to", "music"]
# ::lemmas ["listen", "to", "music"]
(c13-2 / listen-01
       :ARG0 (c13-1 / you)
       :ARG1 (c13-0 / music)
       :mode imperative)

# ::snt Go suck wan black dick
# ::tokens ["Go", "suck", "wan", "black", "dick"]
# ::lemmas ["go", "suck", "wan", "black", "dick"]
(c14-3 / go-03
       :ARG0 (c14-1 / you)
       :ARG1 (c14-2 / suck-01
                    :ARG0 c14-1
                    :ARG1 (c14-4 / dick
                                 :ARG1-of (c14-0 / black-04)))
       :mode imperative)

# ::snt TBH tho id love a big-band themed club. Karaoke?Have you ever heard of that funny reefer maaaaan?
# ::tokens ["TBH", "tho", "i", "d", "love", "a", "big", "-", "band", "themed", "club", ".", "Karaoke?Have", "you", "ever", "heard", "of", "that", "funny", "reefer", "maaaaan", "?"]
# ::lemmas ["TBH", "tho", "i", "d", "love", "a", "big", "-", "band", "themed", "club", ".", "Karaoke?Have", "you", "ever", "hear", "of", "that", "funny", "reefer", "maaaaan", "?"]
(c15-9 / multi-sentence
       :snt1 (c15-4 / have-concession-91
                    :ARG2 (c15-2 / love-01
                                 :ARG0 (c15-18 / i)
                                 :ARG1 (c15-10 / club
                                               :ARG1-of (c15-7 / theme-01
                                                               :ARG2 (c15-8 / band
                                                                            :mod (c15-1 / big))))))
       :snt2 (c15-0 / say-01
                    :ARG1 (c15-17 / hear-01
                                  :ARG0 (c15-3 / you)
                                  :ARG1 (c15-5 / maaaaan
                                               :mod (c15-14 / reefer)
                                               :mod (c15-12 / funny)
                                               :mod (c15-11 / that))
                                  :polarity (c15-6 / amr-unknown)
                                  :time (c15-15 / ever))
                    :ARG2 (c15-16 / person
                                  :name (c15-13 / name
                                                :op1 "TBH"))))

# ::snt MMMk all y'all, what'chu tryin to say? That the guys she dumped were legends or that she's a ho? Which is it?
# ::tokens ["MMMk", "all", "y'", "all", ",", "what'chu", "tryin", "to", "say", "?", "That", "the", "guys", "she", "dumped", "were", "legends", "or", "that", "she", "'s", "a", "ho", "?", "Which", "is", "it", "?"]
# ::lemmas ["mmmk", "all", "you", "all", ",", "what'chu", "tryin", "to", "say", "?", "that", "the", "guy", "she", "dump", "be", "legend", "or", "that", "she", "be", "a", "ho", "?", "which", "be", "it", "?"]
(c16-3 / multi-sentence
       :snt1 (c16-7 / try-01
                    :ARG0 (c16-2 / you
                                 :mod (c16-9 / all))
                    :ARG1 (c16-4 / say-01
                                 :ARG0 c16-2
                                 :ARG1 (c16-8 / amr-unknown)))
       :snt2 (c16-0 / or
                    :op1 (c16-6 / legend
                                :domain (c16-10 / guy
                                                :ARG1-of (c16-11 / dump-01
                                                                 :ARG0 (c16-1 / she))))
                    :op2 (c16-5 / ho
                                :domain c16-1))
       :snt3 c16-8
       :domain (c16-12 / it))

# ::snt Who can they play then?
# ::tokens ["Who", "can", "they", "play", "then", "?"]
# ::lemmas ["who", "can", "they", "play", "then", "?"]
(c17-2 / possible-01
       :ARG1 (c17-0 / play-01
                    :ARG0 (c17-3 / they)
                    :ARG2 (c17-1 / amr-unknown)
                    :time (c17-4 / then)))

# ::snt Ok and lmao
# ::tokens ["Ok", "and", "lmao"]
# ::lemmas ["ok", "and", "lmao"]
(c18-2 / and
       :op1 (c18-0 / okay-01)
       :op2 (c18-3 / laugh-01
                   :ARG0 (c18-5 / i
                                :part (c18-4 / ass))
                   :ARG3 (c18-1 / off
                                :op1 c18-4)))

# ::snt Youre literally replying to something from a year ago, before ppl even used that meme
# ::tokens ["You", "re", "literally", "replying", "to", "something", "from", "a", "year", "ago", ",", "before", "ppl", "even", "used", "that", "meme"]
# ::lemmas ["you", "re", "literally", "reply", "to", "something", "from", "a", "year", "ago", ",", "before", "ppl", "even", "use", "that", "meme"]
(c19-5 / reply-01
       :ARG0 (c19-1 / you)
       :ARG1 (c19-4 / something
                    :time (c19-0 / before
                                 :op1 (c19-2 / now)
                                 :quant (c19-9 / temporal-quantity
                                               :unit (c19-10 / year)
                                               :quant 1)))
       :manner (c19-7 / literal)
       :time c19-0
       :op1 (c19-11 / use-01
                    :ARG0 (c19-8 / i)
                    :ARG1 (c19-3 / meme
                                 :mod (c19-12 / that))
                    :mod (c19-6 / even)))

# ::snt Country Night at the Club
# ::tokens ["Country", "Night", "at", "the", "Club"]
# ::lemmas ["Country", "Night", "at", "the", "Club"]
(c21-1 / night
       :mod (c21-0 / country)
       :location (c21-2 / club))

# ::snt Kiss Love
# ::tokens ["Kiss", "Love"]
# ::lemmas ["Kiss", "Love"]
(c22-0 / kiss-01
       :ARG1 (c22-1 / love))

# ::snt Yeah listen to a h....nvm
# ::tokens ["Yeah", "listen", "to", "a", "h", "....", "nvm"]
# ::lemmas ["yeah", "listen", "to", "a", "h", "....", "nvm"]
(c23-3 / listen-01
       :ARG0 (c23-0 / you)
       :ARG1 (c23-2 / person
                    :name (c23-1 / name
                                 :op1 "a"
                                 :op2 "h....nvm"))
       :mod (c23-4 / yeah)
       :mode imperative)

# ::snt So she can work out which rapper she wants to fuck next
# ::tokens ["So", "she", "can", "work", "out", "which", "rapper", "she", "wants", "to", "fuck", "next"]
# ::lemmas ["so", "she", "can", "work", "out", "which", "rapper", "she", "want", "to", "fuck", "next"]
(c24-7 / cause-01
       :ARG1 (c24-5 / possible-01
                    :ARG1 (c24-8 / work-out-02
                                 :ARG0 (c24-3 / she)
                                 :ARG1 (c24-2 / person
                                              :mod (c24-4 / rapper)
                                              :ARG1-of (c24-0 / fuck-01
                                                              :ARG0 c24-3
                                                              :ARG1-of (c24-6 / want-01
                                                                              :ARG0 c24-3)
                                                              :time (c24-1 / next))))))

# ::snt Amber Rose has more X's than
# ::tokens ["Amber", "Rose", "has", "more", "X", "'s", "than"]
# ::lemmas ["Amber", "Rose", "have", "more", "x", "'s", "than"]
(c25-3 / have-quant-91
       :ARG1 (c25-7 / thing
                    :name (c25-0 / name
                                 :op1 "X")
                    :ARG1-of (c25-6 / have-03
                                    :ARG0 (c25-4 / person
                                                 :name (c25-5 / name
                                                              :op1 "Amber"
                                                              :op2 "Rose"))))
       :ARG3 (c25-1 / more)
       :ARG4 (c25-8 / thing
                    :ARG1-of (c25-2 / have-03
                                    :ARG0 c25-4)))

# ::snt A movement
# ::tokens ["A", "movement"]
# ::lemmas ["a", "movement"]
(c26-0 / movement-07)

# ::snt LMAO
# ::tokens ["LMAO"]
# ::lemmas ["lmao"]
(c27-1 / laugh-01
       :ARG0 (c27-2 / i
                    :part (c27-3 / ass))
       :ARG3 (c27-0 / off
                    :op1 c27-3))

# ::snt ndi3r gyes3 Joe Mettle tracks o
# ::tokens ["ndi3r", "gyes3", "Joe", "Mettle", "tracks", "o"]
# ::lemmas ["ndi3r", "gyes3", "Joe", "Mettle", "track", "o"]
(c29-2 / track-03
       :ARG0 (c29-1 / person
                    :name (c29-0 / name
                                 :op1 "Joe"
                                 :op2 "Mettle")
                    :mod-of c29-2)
       :name c29-0
       :op1 "ndi3r")

# ::snt Guess they might as well take my song out, I fucked her a bunch of times w my pillow.
# ::tokens ["Guess", "they", "might", "as", "well", "take", "my", "song", "out", ",", "I", "fucked", "her", "a", "bunch", "of", "times", "w", "my", "pillow", "."]
# ::lemmas ["guess", "they", "might", "as", "well", "take", "my", "song", "out", ",", "i", "fuck", "she", "a", "bunch", "of", "time", "w", "my", "pillow", "."]
(c30-11 / guess-01
        :ARG0 (c30-9 / i)
        :ARG1 (c30-6 / possible-01
                     :ARG1 (c30-8 / take-out-11
                                  :ARG0 (c30-10 / they)
                                  :ARG1 (c30-4 / song
                                               :poss c30-9))
                     :mod (c30-5 / as-well))
        :ARG1-of (c30-7 / cause-01
                        :ARG0 (c30-0 / fuck-01
                                     :ARG0 c30-9
                                     :ARG1 (c30-1 / she)
                                     :instrument (c30-3 / pillow
                                                        :poss c30-9)
                                     :frequency (c30-2 / bunch))))

# ::snt The best response I've seen today
# ::tokens ["The", "best", "response", "I", "'ve", "seen", "today"]
# ::lemmas ["the", "good", "response", "i", "'ve", "see", "today"]
(c31-4 / thing
       :ARG2-of (c31-2 / respond-01)
       :ARG1-of (c31-1 / see-01
                       :ARG0 (c31-5 / i)
                       :time (c31-6 / today))
       :ARG1-of (c31-3 / have-degree-91
                       :ARG2 (c31-7 / good-02
                                    :ARG1 c31-4)
                       :ARG3 (c31-0 / most)))

# ::snt Nick cannon is dope asf y'all jus
# ::tokens ["Nick", "cannon", "is", "dope", "asf", "y'", "all", "jus"]
# ::lemmas ["Nick", "cannon", "be", "dope", "asf", "you", "all", "ju"]
(c32-6 / dope
       :domain (c32-3 / person
                      :name (c32-1 / name
                                   :op1 "Nick"
                                   :op2 " cannon"))
       :mod (c32-5 / as-fucky)
       :ARG1-of (c32-2 / say-01
                       :ARG2 (c32-0 / you
                                    :mod (c32-4 / all))))

# ::snt All bro All
# ::tokens ["All", "bro", "All"]
# ::lemmas ["all", "bro", "all"]
(c33-1 / say-01
       :ARG1 (c33-4 / all)
       :ARG2 (c33-3 / person
                    :ARG0-of (c33-2 / have-rel-role-91
                                    :ARG2 (c33-0 / bro))
                    :mod c33-4))

# ::snt Lmao!!! cus she dated almost all pop stars.
# ::tokens ["Lmao", "!", "!", "!", "cus", "she", "dated", "almost", "all", "pop", "stars", "."]
# ::lemmas ["Lmao", "!", "!", "!", "cus", "she", "date", "almost", "all", "pop", "star", "."]
(c34-1 / multi-sentence
       :snt1 (c34-3 / laugh-01
                    :ARG0 (c34-6 / i)
                    :manner (c34-10 / loud)
                    :mode expressive)
       :snt2 (c34-5 / cause-01
                    :ARG0 (c34-9 / date-02
                                 :ARG0 (c34-2 / she)
                                 :ARG1 (c34-0 / star
                                              :mod (c34-4 / pop)
                                              :mod (c34-7 / all
                                                          :mod (c34-8 / almost))))))

# ::snt Only country music will be played at the club.
# ::tokens ["Only", "country", "music", "will", "be", "played", "at", "the", "club", "."]
# ::lemmas ["only", "country", "music", "will", "be", "play", "at", "the", "club", "."]
(c35-2 / play-11
       :ARG1 (c35-1 / music
                    :mod (c35-3 / country)
                    :mod (c35-0 / only))
       :location (c35-4 / club))

# ::snt Are you now in love with Amber ?
# ::tokens ["Are", "you", "now", "in", "love", "with", "Amber", "?"]
# ::lemmas ["be", "you", "now", "in", "love", "with", "Amber", "?"]
(c36-4 / love-01
       :ARG0 (c36-0 / you)
       :ARG1 (c36-3 / person
                    :name (c36-1 / name
                                 :op1 "Amber"))
       :polarity (c36-5 / amr-unknown)
       :time (c36-2 / now))

# ::snt Whats a club without music?
# ::tokens ["What", "s", "a", "club", "without", "music", "?"]
# ::lemmas ["what", "s", "a", "club", "without", "music", "?"]
(c37-0 / club
       :ARG0-of (c37-1 / have-03
                       :ARG1 (c37-2 / music)
                       :polarity -)
       :domain (c37-3 / amr-unknown))

# ::snt First song played as she walks in
# ::tokens ["First", "song", "played", "as", "she", "walks", "in"]
# ::lemmas ["First", "song", "play", "as", "she", "walk", "in"]
(c40-3 / play-11
       :ARG1 (c40-2 / song
                    :ord (c40-0 / ordinal-entity
                                :value 1))
       :time (c40-4 / walk-01
                    :ARG0 (c40-1 / she)))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c41-1 / laugh-01
       :manner (c41-0 / loud)
       :mode expressive)

# ::snt YO omg lmao
# ::tokens ["YO", "omg", "lmao"]
# ::lemmas ["YO", "omg", "lmao"]
(c42-0 / omg
       :mod (c42-1 / yep)
       :mod (c42-2 / laugh-01
                   :ARG0 (c42-3 / i)
                   :manner (c42-4 / loud))
       :mode expressive)

# ::snt that pretty much sums it up
# ::tokens ["that", "pretty", "much", "sums", "it", "up"]
# ::lemmas ["that", "pretty", "much", "sum", "it", "up"]
(c43-3 / sum-up-01
       :ARG0 (c43-1 / that)
       :ARG1 (c43-2 / it)
       :degree (c43-0 / pretty-much))

# ::snt Choppa flow out now link in bio
# ::tokens ["Choppa", "flow", "out", "now", "link", "in", "bio"]
# ::lemmas ["Choppa", "flow", "out", "now", "link", "in", "bio"]
(c44-5 / link-01
       :ARG1 (c44-0 / flow-01
                    :ARG1 (c44-6 / person
                                 :name (c44-3 / name
                                              :op1 "Choppa"))
                    :direction (c44-1 / out))
       :ARG2 (c44-2 / bio)
       :time (c44-4 / now))

# ::snt "You gone fuck it up for all the real niggas wit yo stupid ass"
# ::tokens ["\"", "You", "gone", "fuck", "it", "up", "for", "all", "the", "real", "niggas", "wit", "yo", "stupid", "ass", "\""]
# ::lemmas ["\"", "you", "go", "fuck", "it", "up", "for", "all", "the", "real", "niggas", "wit", "yo", "stupid", "ass", "\""]
(c45-5 / cause-01
       :ARG0 (c45-8 / go-05
                    :ARG0 (c45-1 / you
                                 :mod (c45-7 / ass
                                             :mod (c45-3 / stupid)))
                    :ARG1 (c45-0 / fuck-up-02
                                 :ARG0 c45-1
                                 :ARG1 (c45-6 / it)
                                 :beneficiary (c45-2 / nigga
                                                     :ARG1-of (c45-4 / real-04)
                                                     :mod (c45-9 / all)))
                    :ARG1-of c45-5))

# ::snt Sooo No youre not listening to them
# ::tokens ["Sooo", "No", "you", "re", "not", "listening", "to", "them"]
# ::lemmas ["Sooo", "no", "you", "re", "not", "listen", "to", "they"]
(c46-3 / listen-01
       :ARG0 (c46-0 / you)
       :ARG1 (c46-4 / they)
       :mod (c46-2 / so)
       :mod (c46-1 / no)
       :polarity -)

# ::snt dated her and Im preeeety sure drake smashed fym
# ::tokens ["dated", "her", "and", "I", "m", "preeeety", "sure", "drake", "smashed", "fym"]
# ::lemmas ["date", "she", "and", "i", "m", "preeeety", "sure", "drake", "smash", "fym"]
(c47-7 / and
       :op1 (c47-8 / date-02
                   :ARG1 (c47-3 / she))
       :op2 (c47-0 / sure-02
                   :ARG0 (c47-6 / i)
                   :ARG1 (c47-9 / smash-01
                                :ARG0 (c47-5 / drake)
                                :ARG1 (c47-4 / person
                                             :name (c47-1 / name
                                                          :op1 "Fym")))
                   :time (c47-2 / preexist-01)))

# ::snt Underrated tweet for sure
# ::tokens ["Underrated", "tweet", "for", "sure"]
# ::lemmas ["underrated", "tweet", "for", "sure"]
(c48-3 / sure-02
       :ARG1 (c48-2 / tweet-01
                    :ARG1-of (c48-0 / rate-01
                                    :ARG2 (c48-1 / under))))

# ::snt But honestly it's not hard to do. No Wiz (Wiz doesn't make club songs in my opinion), no (he's been on a lot of features so the DJ gotta be careful w. That one) and no Kanye (Ye's club bangers are old anyway except I Love it but I'll only be mad if he didn't play MAMA)
# ::tokens ["But", "honestly", "it", "'s", "not", "hard", "to", "do", ".", "No", "Wiz", "(", "Wiz", "does", "n't", "make", "club", "songs", "in", "my", "opinion", ")", ",", "no", "(", "he", "'s", "been", "on", "a", "lot", "of", "features", "so", "the", "DJ", "got", "ta", "be", "careful", "w.", "That", "one", ")", "and", "no", "Kanye", "(", "Ye", "'s", "club", "bangers", "are", "old", "anyway", "except", "I", "Love", "it", "but", "I", "'ll", "only", "be", "mad", "if", "he", "did", "n't", "play", "MAMA", ")"]
# ::lemmas ["but", "honestly", "it", "be", "not", "hard", "to", "do", ".", "no", "wiz", "(", "wiz", "do", "not", "make", "club", "song", "in", "my", "opinion", ")", ",", "no", "(", "he", "be", "be", "on", "a", "lot", "of", "feature", "so", "the", "DJ", "got", "to", "be", "careful", "w.", "that", "one", ")", "and", "no", "Kanye", "(", "Ye", "'s", "club", "banger", "be", "old", "anyway", "except", "i", "Love", "it", "but", "i", "'ll", "only", "be", "mad", "if", "he", "do", "not", "play", "MAMA", ")"]
(c49-17 / multi-sentence
        :snt1 (c49-21 / contrast-01
                      :ARG2 (c49-9 / hard-02
                                   :ARG1 (c49-36 / do-02
                                                 :ARG1 (c49-35 / it))
                                   :ARG1-of (c49-34 / honest-01)
                                   :polarity -))
        :snt2 (c49-12 / and
                      :op1 (c49-32 / person
                                   :name (c49-29 / name
                                                 :op1 "Wiz")
                                   :ARG1-of (c49-15 / cause-01
                                                    :ARG0 (c49-10 / make-01
                                                                  :ARG0 c49-32
                                                                  :ARG1 (c49-0 / song
                                                                               :mod (c49-3 / club)
                                                                               :ARG1-of (c49-5 / opine-01
                                                                                               :ARG0 (c49-7 / i)))
                                                                  :polarity -))
                                   :polarity -)
                      :op2 (c49-8 / have-03
                                  :ARG0 c49-32
                                  :ARG1 (c49-28 / feature
                                                :quant (c49-1 / lot))
                                  :ARG0-of (c49-27 / cause-01
                                                   :ARG1 (c49-16 / obligate-01
                                                                 :ARG1 (c49-18 / person
                                                                               :ARG0-of (c49-22 / DJ-01))
                                                                 :ARG2 (c49-6 / care-04
                                                                              :ARG0 c49-18)))
                                  :polarity -)
                      :op3 (c49-25 / have-03
                                   :ARG0 (c49-4 / person
                                                :name (c49-19 / name
                                                              :op1 "Ye"))
                                   :ARG1 (c49-37 / one
                                                 :mod (c49-13 / that))
                                   :polarity -))
        :snt3 (c49-2 / person
                     :name (c49-33 / name
                                   :op1 "Kanye")
                     :mod (c49-24 / old
                                  :ARG2-of (c49-31 / except-01
                                                   :ARG1 (c49-14 / love-01
                                                                 :ARG0 c49-7
                                                                 :ARG1 c49-24))
                                  :concession-of (c49-26 / mad-04
                                                         :ARG0 (c49-11 / play-01
                                                                       :ARG0 c49-2
                                                                       :ARG1 (c49-20 / music
                                                                                     :name (c49-23 / name
                                                                                                   :op1 "MAMA"))
                                                                       :polarity -)
                                                         :ARG1 c49-7
                                                         :mod (c49-30 / only)))
                     :polarity -))

# ::snt The whole music industry
# ::tokens ["The", "whole", "music", "industry"]
# ::lemmas ["the", "whole", "music", "industry"]
(c50-2 / industry
       :mod (c50-1 / music)
       :mod (c50-0 / whole))
