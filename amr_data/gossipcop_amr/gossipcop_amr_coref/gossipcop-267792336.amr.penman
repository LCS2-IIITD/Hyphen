# ::snt Nice
# ::tokens ["Nice"]
# ::lemmas ["nice"]
(c1-0 / nice-01)

# ::snt Just Friends
# ::tokens ["Just", "Friends"]
# ::lemmas ["just", "friend"]
(c2-0 / friend
      :mod (c2-1 / just))

# ::snt nice looking couple!
# ::tokens ["nice", "looking", "couple", "!"]
# ::lemmas ["nice", "look", "couple", "!"]
(c3-0 / couple
      :ARG0-of (c3-2 / look-02
                     :ARG1 (c3-1 / nice-01)))

# ::snt wish
# ::tokens ["wish"]
# ::lemmas ["wish"]
(c4-0 / wish-01)

# ::snt I hope you said yes
# ::tokens ["I", "hope", "you", "said", "yes"]
# ::lemmas ["i", "hope", "you", "say", "yes"]
(c5-2 / hope-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-1 / say-01
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-4 / yes)))

# ::snt watch other tabloids follow in t samething cs they always feed frm them even thore they know they makeup stories.
# ::tokens ["watch", "other", "tabloids", "follow", "in", "t", "samething", "cs", "they", "always", "feed", "frm", "them", "even", "thore", "they", "know", "they", "makeup", "stories", "."]
# ::lemmas ["watch", "other", "tabloid", "follow", "in", "t", "samethe", "cs", "they", "always", "feed", "frm", "they", "even", "thore", "they", "know", "they", "makeup", "story", "."]
(c6-6 / and
      :op1 (c6-11 / watch-01
                  :ARG0 (c6-2 / you)
                  :ARG1 (c6-0 / follow-01
                              :ARG1 (c6-14 / tabloid
                                           :mod (c6-1 / other))
                              :ARG2 (c6-8 / publication
                                          :name (c6-3 / name
                                                      :op1 "CS")))
                  :mode imperative)
      :op2 (c6-9 / feed-01
                 :ARG0 c6-14
                 :ARG2 c6-14
                 :time (c6-13 / always)
                 :ARG1-of (c6-12 / cause-01
                                 :ARG0 (c6-10 / know-01
                                              :ARG0 c6-14
                                              :ARG1 (c6-5 / story
                                                          :topic (c6-4 / makeup)
                                                          :poss c6-14)
                                              :mod (c6-7 / even)))))

# ::snt it's a publicity stunt as usual
# ::tokens ["it", "'s", "a", "publicity", "stunt", "as", "usual"]
# ::lemmas ["it", "be", "a", "publicity", "stunt", "as", "usual"]
(c7-0 / publicity
      :domain (c7-1 / it)
      :mod (c7-2 / as-usual))

# ::snt ok but what about meeeee
# ::tokens ["ok", "but", "what", "about", "meeeee"]
# ::lemmas ["ok", "but", "what", "about", "meeeee"]
(c8-0 / contrast-01
      :ARG1 (c8-3 / okay-04)
      :ARG2 (c8-1 / amr-unknown
                  :topic (c8-2 / i)))

# ::snt omg yes! that didn't come to mind but it's perfect. it distracts everyone
# ::tokens ["omg", "yes", "!", "that", "did", "n't", "come", "to", "mind", "but", "it", "'s", "perfect", ".", "it", "distracts", "everyone"]
# ::lemmas ["omg", "yes", "!", "that", "do", "not", "come", "to", "mind", "but", "it", "be", "perfect", ".", "it", "distract", "everyone"]
(c10-1 / multi-sentence
       :snt1 (c10-4 / come-to-mind-09
                    :ARG2 (c10-6 / that)
                    :mod (c10-0 / oh-my-god
                                :mode expressive)
                    :ARG1-of (c10-8 / contrast-01
                                    :ARG2 (c10-3 / perfect-02
                                                 :ARG1 c10-6))
                    :polarity -)
       :snt2 (c10-7 / distract-01
                    :ARG0 (c10-5 / it)
                    :ARG1 (c10-2 / everyone)))

# ::snt I honestly think that his team is trying to deflect the whole Kid Cudi rapping mental illness situation
# ::tokens ["I", "honestly", "think", "that", "his", "team", "is", "trying", "to", "deflect", "the", "whole", "Kid", "Cudi", "rapping", "mental", "illness", "situation"]
# ::lemmas ["i", "honestly", "think", "that", "his", "team", "be", "try", "to", "deflect", "the", "whole", "Kid", "Cudi", "rap", "mental", "illness", "situation"]
(c11-9 / think-01
       :ARG0 (c11-12 / i)
       :ARG1 (c11-11 / try-01
                     :ARG0 (c11-10 / team
                                   :poss (c11-5 / he))
                     :ARG1 (c11-13 / deflect-01
                                   :ARG0 c11-10
                                   :ARG1 (c11-2 / situation
                                                :mod (c11-4 / rant-01
                                                            :ARG0 (c11-6 / person
                                                                         :name (c11-0 / name
                                                                                      :op1 "Kid"
                                                                                      :op2 "Cudi"))
                                                            :ARG3 (c11-3 / ill-01
                                                                         :ARG2 (c11-1 / mental)))
                                                :mod (c11-7 / whole))))
       :ARG1-of (c11-8 / honest-01))

# ::snt honestly! the general public may find this as scalding tea but stans are just bored of this bs
# ::tokens ["honestly", "!", "the", "general", "public", "may", "find", "this", "as", "scalding", "tea", "but", "stans", "are", "just", "bored", "of", "this", "bs"]
# ::lemmas ["honestly", "!", "the", "general", "public", "may", "find", "this", "as", "scald", "tea", "but", "stan", "be", "just", "bored", "of", "this", "bs"]
(c12-6 / honest-01
       :ARG1 (c12-9 / contrast-01
                    :ARG1 (c12-7 / possible-01
                                 :ARG1 (c12-0 / find-02
                                              :ARG0 (c12-4 / public
                                                           :ARG1-of (c12-14 / general-02))
                                              :ARG1 (c12-13 / this)
                                              :ARG2 (c12-16 / tea
                                                            :ARG0-of (c12-5 / scald-01))))
                    :ARG2 (c12-2 / bore-02
                                 :ARG0 (c12-15 / publication
                                               :name (c12-3 / name
                                                            :op1 "Bs")
                                               :mod (c12-12 / this))
                                 :ARG1 (c12-10 / person
                                               :mod (c12-1 / country
                                                           :name (c12-8 / name
                                                                        :op1 "Britain")))
                                 :mod (c12-11 / just))))

# ::snt same. it's too obvious, like please Aubrey
# ::tokens ["same", ".", "it", "'s", "too", "obvious", ",", "like", "please", "Aubrey"]
# ::lemmas ["same", ".", "it", "be", "too", "obvious", ",", "like", "please", "Aubrey"]
(c13-1 / multi-sentence
       :snt1 (c13-3 / same-01)
       :snt2 (c13-0 / obvious-01
                    :ARG1 (c13-8 / it)
                    :ARG2-of (c13-6 / have-degree-91
                                    :ARG1 c13-8
                                    :ARG3 (c13-9 / too))
                    :ARG1-of (c13-5 / resemble-01
                                    :ARG2 (c13-7 / please-01
                                                 :ARG1 (c13-2 / person
                                                              :name (c13-4 / name
                                                                           :op1 "Aubrey"))))))

# ::snt yeah definitely. i think it's a publicity stunt set out by either their teams or one team. im personally not interested
# ::tokens ["yeah", "definitely", ".", "i", "think", "it", "'s", "a", "publicity", "stunt", "set", "out", "by", "either", "their", "teams", "or", "one", "team", ".", "i", "m", "personally", "not", "interested"]
# ::lemmas ["yeah", "definitely", ".", "i", "think", "it", "be", "a", "publicity", "stunt", "set", "out", "by", "either", "their", "team", "or", "one", "team", ".", "i", "m", "personally", "not", "interested"]
(c14-2 / multi-sentence
       :snt1 (c14-1 / yeah
                    :manner (c14-11 / definite)
                    :mode expressive)
       :snt2 (c14-9 / think-01
                    :ARG0 (c14-8 / i)
                    :ARG1 (c14-4 / set-out-06
                                 :ARG0 (c14-0 / or
                                              :op1 (c14-13 / team
                                                           :poss (c14-10 / they))
                                              :op2 (c14-6 / team
                                                          :poss c14-10
                                                          :quant 1))
                                 :ARG1 (c14-5 / it)
                                 :ARG2 (c14-7 / publicity)))
       :snt3 (c14-12 / interest-01
                     :ARG1 c14-8
                     :ARG1-of (c14-3 / personal-02)
                     :polarity -))

# ::snt whew knows?im just making the distinction that for him to be all up on Rih, then this news with him and Taylor comes up is :/
# ::tokens ["whew", "knows?im", "just", "making", "the", "distinction", "that", "for", "him", "to", "be", "all", "up", "on", "Rih", ",", "then", "this", "news", "with", "him", "and", "Taylor", "comes", "up", "is", ":/"]
# ::lemmas ["whew", "knows?im", "just", "make", "the", "distinction", "that", "for", "he", "to", "be", "all", "up", "on", "Rih", ",", "then", "this", "news", "with", "he", "and", "Taylor", "come", "up", "be", ":/"]
(c15-8 / multi-sentence
       :snt1 (c15-2 / know-01
                    :ARG0 (c15-15 / person
                                  :name (c15-14 / name
                                                :op1 "Whew"))
                    :polarity (c15-6 / amr-unknown))
       :snt2 (c15-19 / distinguish-01
                     :ARG0 (c15-18 / i)
                     :ARG1 (c15-13 / up-03
                                   :ARG1 (c15-1 / he)
                                   :ARG2 (c15-9 / person
                                                :name (c15-10 / name
                                                              :op1 "Rih"))
                                   :degree (c15-5 / all))
                     :mod (c15-4 / just))
       :snt3 (c15-11 / come-up-13
                     :ARG1 (c15-16 / news
                                   :mod (c15-7 / this)
                                   :accompanier (c15-3 / and
                                                       :op1 (c15-17 / he)
                                                       :op2 (c15-0 / person
                                                                   :name (c15-12 / name
                                                                                 :op1 "Taylor"))))))

# ::snt do you think they're really hooking up tho?
# ::tokens ["do", "you", "think", "they", "'re", "really", "hooking", "up", "tho", "?"]
# ::lemmas ["do", "you", "think", "they", "be", "really", "hook", "up", "tho", "?"]
(c16-3 / have-concession-91
       :ARG2 (c16-5 / think-01
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-4 / hook-up-02
                                 :ARG0 (c16-6 / they)
                                 :ARG1-of (c16-1 / real-04))
                    :polarity (c16-2 / amr-unknown)))

# ::snt All these 's fantasies on my mind, the difference is that with mine, they all come true in due time.
# ::tokens ["All", "these", "'s", "fantasies", "on", "my", "mind", ",", "the", "difference", "is", "that", "with", "mine", ",", "they", "all", "come", "true", "in", "due", "time", "."]
# ::lemmas ["all", "these", "'s", "fantasy", "on", "my", "mind", ",", "the", "difference", "be", "that", "with", "mine", ",", "you", "all", "come", "true", "in", "due", "time", "."]
(c17-2 / and
       :op1 (c17-0 / on-ones-mind-07
                   :ARG1 (c17-7 / i)
                   :ARG2 (c17-1 / fantasy
                                :mod (c17-8 / this)
                                :mod (c17-9 / all)))
       :op2 (c17-10 / differ-02
                    :ARG1 (c17-4 / come-04
                                 :ARG1 (c17-3 / fantasy
                                              :mod (c17-5 / all))
                                 :ARG2 (c17-12 / true-01
                                               :ARG1 c17-3)
                                 :time (c17-11 / time
                                               :mod (c17-6 / due)))
                    :ARG2 c17-3))

# ::snt i hope they were goals af
# ::tokens ["i", "hope", "they", "were", "goals", "af"]
# ::lemmas ["i", "hope", "they", "be", "goal", "af"]
(c18-1 / hope-01
       :ARG0 (c18-2 / i)
       :ARG1 (c18-0 / goal
                    :domain (c18-3 / they)))

# ::snt Can't Take A Joke is way juicer
# ::tokens ["Ca", "n't", "Take", "A", "Joke", "is", "way", "juicer"]
# ::lemmas ["can", "not", "take", "a", "Joke", "be", "way", "juicer"]
(c19-1 / possible-01
       :ARG1 (c19-5 / take-01
                    :ARG0 (c19-0 / you)
                    :ARG1 (c19-4 / joke-01))
       :ARG0-of (c19-2 / cause-01
                       :ARG1 (c19-6 / juicer
                                    :degree (c19-3 / way)))
       :polarity -)

# ::snt after reading that stanton line.
# ::tokens ["after", "reading", "that", "stanton", "line", "."]
# ::lemmas ["after", "read", "that", "stanton", "line", "."]
(c20-0 / be-temporally-at-91
       :ARG2 (c20-5 / after
                    :op1 (c20-2 / read-01
                                :ARG1 (c20-3 / line
                                             :mod (c20-1 / stanton)
                                             :mod (c20-4 / that)))))

# ::snt Hmm
# ::tokens ["Hmm"]
# ::lemmas ["hmm"]
(c21-0 / hmm)

# ::snt I dont think it is. That would be letting him off the hook. But I agree with the sentiment.
# ::tokens ["I", "do", "nt", "think", "it", "is", ".", "That", "would", "be", "letting", "him", "off", "the", "hook", ".", "But", "I", "agree", "with", "the", "sentiment", "."]
# ::lemmas ["i", "do", "not", "think", "it", "be", ".", "that", "would", "be", "let", "he", "off", "the", "hook", ".", "but", "i", "agree", "with", "the", "sentiment", "."]
(c22-1 / multi-sentence
       :snt1 (c22-10 / think-01
                     :ARG0 (c22-9 / i)
                     :ARG1 (c22-3 / it)
                     :polarity -)
       :snt2 (c22-6 / let-01
                    :ARG0 (c22-13 / that)
                    :ARG1 (c22-11 / get-05
                                  :ARG1 (c22-5 / he)
                                  :ARG2 (c22-0 / off
                                               :op1 (c22-8 / hook))))
       :snt3 (c22-7 / contrast-01
                    :ARG2 (c22-4 / agree-01
                                 :ARG0 (c22-12 / i)
                                 :ARG1 (c22-2 / sentiment))))

# ::snt I might be!
# ::tokens ["I", "might", "be", "!"]
# ::lemmas ["i", "might", "be", "!"]
(c23-0 / possible-01
       :ARG1 (c23-1 / i)
       :mode expressive)

# ::snt Reaching like Stanton in the ninth
# ::tokens ["Reaching", "like", "Stanton", "in", "the", "ninth"]
# ::lemmas ["reach", "like", "Stanton", "in", "the", "ninth"]
(c24-2 / reach-02
       :ARG1-of (c24-4 / resemble-01
                       :ARG2 (c24-3 / pitcher
                                    :name (c24-1 / name
                                                 :op1 "Stanton")
                                    :ord (c24-0 / ordinal-entity
                                                :value 9))))

# ::snt I cant wait for the new single after she leaves him
# ::tokens ["I", "ca", "nt", "wait", "for", "the", "new", "single", "after", "she", "leaves", "him"]
# ::lemmas ["i", "can", "not", "wait", "for", "the", "new", "single", "after", "she", "leave", "he"]
(c25-5 / wait-01
       :ARG1 (c25-6 / i)
       :ARG2 (c25-3 / person
                    :ARG1-of (c25-1 / single-03)
                    :ARG1-of (c25-0 / new-02))
       :time (c25-7 / after
                    :op1 (c25-4 / leave-15
                                :ARG0 c25-3
                                :ARG1 (c25-2 / he)))
       :polarity -)

# ::snt this.
# ::tokens ["this", "."]
# ::lemmas ["this", "."]
(c26-0 / this)

# ::snt he getting pulled up on regardless idc
# ::tokens ["he", "getting", "pulled", "up", "on", "regardless", "idc"]
# ::lemmas ["he", "getting", "pull", "up", "on", "regardless", "idc"]
(c27-0 / regardless-91
       :ARG1 (c27-2 / pull-over-05
                    :ARG1 (c27-1 / he))
       :ARG2 (c27-3 / idc))

# ::snt Congrats!
# ::tokens ["Congrats", "!"]
# ::lemmas ["Congrats", "!"]
(c28-0 / congratulate-01
       :mode expressive)

# ::snt So many exciting new thrillers to watch out for. I can hardly wait!
# ::tokens ["So", "many", "exciting", "new", "thrillers", "to", "watch", "out", "for", ".", "I", "can", "hardly", "wait", "!"]
# ::lemmas ["so", "many", "exciting", "new", "thriller", "to", "watch", "out", "for", ".", "i", "can", "hardly", "wait", "!"]
(c29-1 / multi-sentence
       :snt1 (c29-4 / have-quant-91
                    :ARG1 (c29-10 / thriller
                                  :ARG0-of (c29-3 / excite-01)
                                  :ARG1-of (c29-0 / new-01)
                                  :ARG1-of (c29-7 / watch-out-02))
                    :ARG2 (c29-5 / many)
                    :ARG3 (c29-2 / so))
       :snt2 (c29-6 / wait-01
                    :ARG1 (c29-9 / i)
                    :mod (c29-8 / hardly)))

# ::snt and? there're guilty niggas in jail still swearing they innocent
# ::tokens ["and", "?", "there", "'re", "guilty", "niggas", "in", "jail", "still", "swearing", "they", "innocent"]
# ::lemmas ["and", "?", "there", "be", "guilty", "niggas", "in", "jail", "still", "swear", "they", "innocent"]
(c30-5 / and
       :op2 (c30-2 / swear-01
                   :ARG0 (c30-1 / nigga
                                :ARG1-of (c30-6 / guilty-01))
                   :ARG1 (c30-4 / innocent-01
                                :ARG1 c30-1)
                   :mod (c30-0 / still)
                   :location (c30-3 / jail))
       :polarity (c30-7 / amr-unknown))

# ::snt Lol why wouldnt she, when everybody is out here talking like the thread is facts
# ::tokens ["Lol", "why", "would", "nt", "she", ",", "when", "everybody", "is", "out", "here", "talking", "like", "the", "thread", "is", "facts"]
# ::lemmas ["Lol", "why", "would", "not", "she", ",", "when", "everybody", "be", "out", "here", "talk", "like", "the", "thread", "be", "fact"]
(c31-7 / cause-01
       :ARG0 (c31-3 / amr-unknown)
       :ARG1 (c31-2 / she)
       :condition (c31-9 / talk-01
                         :ARG0 (c31-4 / everybody
                                      :location (c31-0 / out
                                                       :op1 (c31-5 / here)))
                         :conj-as-if (c31-1 / fact
                                            :domain (c31-11 / thread)))
       :manner (c31-6 / laugh-01
                      :ARG0 (c31-8 / i)
                      :manner (c31-10 / loud)
                      :mode expressive))

# ::snt As long as youre /17 years old and dont mind being raped if youre after Jared Leto
# ::tokens ["As", "long", "as", "you", "re", "/17", "years", "old", "and", "do", "nt", "mind", "being", "raped", "if", "you", "re", "after", "Jared", "Leto"]
# ::lemmas ["as", "long", "as", "you", "re", "/17", "year", "old", "and", "do", "not", "mind", "be", "rape", "if", "you", "re", "after", "Jared", "Leto"]
(c32-3 / mind-01
       :ARG0 (c32-2 / you)
       :ARG1 (c32-5 / rape-01
                    :ARG1 c32-2)
       :condition (c32-10 / after
                          :op1 (c32-6 / person
                                      :name (c32-4 / name
                                                   :op1 "Jared"
                                                   :op2 "Leto")))
       :condition (c32-9 / as-long-as
                         :op1 (c32-7 / age-01
                                     :ARG1 c32-2
                                     :ARG2 (c32-1 / or
                                                  :op1 (c32-8 / temporal-quantity
                                                              :unit (c32-11 / year)
                                                              :quant 17)
                                                  :op2 (c32-12 / temporal-quantity
                                                               :unit (c32-0 / year)
                                                               :quant 17))))
       :polarity -)

# ::snt Wait... I didn't consider the effect of Black peen on tiny little Taylor. She about to drop a concept album called "Sweet T"
# ::tokens ["Wait", "...", "I", "did", "n't", "consider", "the", "effect", "of", "Black", "peen", "on", "tiny", "little", "Taylor", ".", "She", "about", "to", "drop", "a", "concept", "album", "called", "\"", "Sweet", "T", "\""]
# ::lemmas ["wait", "...", "i", "do", "not", "consider", "the", "effect", "of", "black", "peen", "on", "tiny", "little", "Taylor", ".", "she", "about", "to", "drop", "a", "concept", "album", "call", "\"", "Sweet", "T", "\""]
(c34-1 / multi-sentence
       :snt1 (c34-9 / wait-01
                    :ARG1 (c34-0 / you)
                    :mode imperative)
       :snt2 (c34-10 / consider-02
                     :ARG0 (c34-13 / i)
                     :ARG1 (c34-14 / affect-01
                                   :ARG0 (c34-6 / person
                                                :name (c34-2 / name
                                                             :op1 "Black"
                                                             :op2 "Peen"))
                                   :ARG1 (c34-3 / person
                                                :name (c34-5 / name
                                                             :op1 "Taylor")
                                                :mod (c34-7 / little)
                                                :mod (c34-12 / tiny)))
                     :polarity -)
       :snt3 (c34-16 / drop-05
                     :ARG0 (c34-4 / she)
                     :ARG1 (c34-15 / album
                                   :name (c34-8 / name
                                                :op1 "Sweet"
                                                :op2 "T")
                                   :mod (c34-17 / concept))
                     :time (c34-11 / about-to)))

# ::snt all this time I prayed for her to hook up with a black I really should have been more specific
# ::tokens ["all", "this", "time", "I", "prayed", "for", "her", "to", "hook", "up", "with", "a", "black", "I", "really", "should", "have", "been", "more", "specific"]
# ::lemmas ["all", "this", "time", "i", "pray", "for", "she", "to", "hook", "up", "with", "a", "black", "i", "really", "should", "have", "be", "more", "specific"]
(c35-2 / multi-sentence
       :snt1 (c35-9 / pray-01
                    :ARG0 (c35-12 / i)
                    :ARG1 (c35-8 / hook-up-02
                                 :ARG0 (c35-4 / she)
                                 :ARG1 (c35-3 / person
                                              :ARG1-of (c35-1 / black-05)))
                    :time (c35-13 / time
                                  :mod (c35-15 / this)
                                  :mod (c35-6 / all)))
       :snt2 (c35-7 / recommend-01
                    :ARG1 (c35-11 / have-degree-91
                                  :ARG1 (c35-5 / i)
                                  :ARG2 (c35-0 / specific-02
                                               :ARG1 c35-5)
                                  :ARG3 (c35-10 / more))
                    :ARG1-of (c35-14 / real-04)))

# ::snt Kiki Drake said this shit will serve itself
# ::tokens ["Kiki", "Drake", "said", "this", "shit", "will", "serve", "itself"]
# ::lemmas ["Kiki", "Drake", "say", "this", "shit", "will", "serve", "itself"]
(c36-2 / say-01
       :ARG0 (c36-3 / person
                    :name (c36-1 / name
                                 :op1 "Kiki"
                                 :op2 "Drake"))
       :ARG1 (c36-0 / serve-02
                    :ARG0 (c36-5 / shit
                                 :mod (c36-4 / this)
                                 :ARG1-of c36-0)))

# ::snt Kiki is Kim
# ::tokens ["Kiki", "is", "Kim"]
# ::lemmas ["Kiki", "be", "Kim"]
(c37-2 / person
       :name (c37-0 / name
                    :op1 "Kim")
       :domain (c37-3 / person
                      :name (c37-1 / name
                                   :op1 "Kiki")))

# ::snt Ain't surprised. All these hoes hook up with Drake.
# ::tokens ["Ai", "n't", "surprised", ".", "All", "these", "hoes", "hook", "up", "with", "Drake", "."]
# ::lemmas ["be", "not", "surprised", ".", "all", "these", "hoe", "hook", "up", "with", "Drake", "."]
(c38-0 / multi-sentence
       :snt1 (c38-2 / surprise-01
                    :polarity -)
       :snt2 (c38-3 / hook-up-02
                    :ARG0 (c38-5 / hoe
                                 :mod (c38-7 / all)
                                 :mod (c38-6 / this))
                    :ARG1 (c38-4 / person
                                 :name (c38-1 / name
                                              :op1 "Drake"))))

# ::snt Lies
# ::tokens ["Lies"]
# ::lemmas ["lie"]
(c39-1 / thing
       :ARG1-of (c39-0 / lie-08))

# ::snt Two bitches !!
# ::tokens ["Two", "bitches", "!", "!"]
# ::lemmas ["Two", "bitch", "!", "!"]
(c40-0 / bitch
       :quant 2)

# ::snt Yall didnt see this coming
# ::tokens ["Yall", "did", "nt", "see", "this", "coming"]
# ::lemmas ["Yall", "do", "not", "see", "this", "come"]
(c42-1 / see-01
       :ARG0 (c42-0 / you
                    :mod (c42-4 / all))
       :ARG1 (c42-2 / come-03
                    :ARG1 (c42-3 / this))
       :polarity -)

# ::snt Nigga reaching
# ::tokens ["Nigga", "reaching"]
# ::lemmas ["Nigga", "reach"]
(c43-0 / reach-01
       :ARG0 (c43-2 / person
                    :name (c43-1 / name
                                 :op1 "Nigga")))

# ::snt Kiki
# ::tokens ["Kiki"]
# ::lemmas ["kiki"]
(c44-1 / person
       :name (c44-0 / name
                    :op1 "Kiki"))

# ::snt Right lol
# ::tokens ["Right", "lol"]
# ::lemmas ["right", "lol"]
(c45-0 / right-06
       :ARG2-of (c45-2 / laugh-01
                       :manner (c45-1 / loud)))

# ::snt Lol. Okay girl
# ::tokens ["Lol", ".", "Okay", "girl"]
# ::lemmas ["Lol", ".", "okay", "girl"]
(c46-1 / multi-sentence
       :snt1 (c46-2 / laugh-01
                    :manner (c46-4 / loud)
                    :mode expressive)
       :snt2 (c46-0 / okay-01
                    :ARG1 (c46-3 / girl)))

# ::snt Y'all gotta see the whole thing
# ::tokens ["Y'all", "got", "ta", "see", "the", "whole", "thing"]
# ::lemmas ["Y'all", "got", "to", "see", "the", "whole", "thing"]
(c47-0 / obligate-01
       :ARG1 (c47-1 / you
                    :mod (c47-3 / all))
       :ARG2 (c47-2 / see-01
                    :ARG0 c47-1
                    :ARG1 (c47-5 / thing
                                 :mod (c47-4 / whole))))

# ::snt who cares
# ::tokens ["who", "cares"]
# ::lemmas ["who", "care"]
(c48-0 / care-01
       :ARG0 (c48-1 / amr-unknown))

# ::snt nah his mom is way too old for her
# ::tokens ["nah", "his", "mom", "is", "way", "too", "old", "for", "her"]
# ::lemmas ["nah", "his", "mom", "be", "way", "too", "old", "for", "she"]
(c49-5 / have-degree-91
       :ARG1 (c49-6 / person
                    :ARG0-of (c49-8 / have-rel-role-91
                                    :ARG1 (c49-4 / he)
                                    :ARG2 (c49-1 / mom)))
       :ARG2 (c49-0 / old)
       :ARG3 (c49-9 / too
                    :mod (c49-7 / way))
       :ARG6 (c49-3 / she)
       :mod (c49-2 / nah
                   :mode expressive))

# ::snt Taylor's got no type
# ::tokens ["Taylor", "'s", "got", "no", "type"]
# ::lemmas ["Taylor", "'s", "get", "no", "type"]
(c50-1 / have-03
       :ARG0 (c50-2 / person
                    :name (c50-0 / name
                                 :op1 "Taylor"))
       :ARG1 (c50-3 / type)
       :polarity -)
