# ::snt who?
# ::tokens ["who", "?"]
# ::lemmas ["who", "?"]
(c1-0 / amr-unknown)

# ::snt Take this show off. Just a chance to be with alot of women
# ::tokens ["Take", "this", "show", "off", ".", "Just", "a", "chance", "to", "be", "with", "alot", "of", "women"]
# ::lemmas ["take", "this", "show", "off", ".", "just", "a", "chance", "to", "be", "with", "alot", "of", "woman"]
(c2-2 / multi-sentence
      :snt1 (c2-7 / take-off-07
                  :ARG0 (c2-1 / you)
                  :ARG1 (c2-3 / show-off-03
                              :ARG0 c2-1
                              :mod (c2-9 / this))
                  :mode imperative)
      :snt2 (c2-5 / chance-02
                  :ARG0 (c2-10 / you)
                  :ARG1 (c2-0 / be-with-10
                              :ARG0 c2-10
                              :ARG1 (c2-6 / woman
                                          :quant (c2-4 / lot)))
                  :mod (c2-8 / just)))

# ::snt Awe I think he's cute
# ::tokens ["Awe", "I", "think", "he", "'s", "cute"]
# ::lemmas ["Awe", "i", "think", "he", "be", "cute"]
(c3-2 / think-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-1 / cute
                  :domain (c3-0 / he))
      :mod (c3-4 / awe))

# ::snt HOW DO THE SHOW MADE THEIR DECISIONARIE, WTHH. LET THE FAN MAKE THE DECISION &amp; HAVE A POLE, THE MOST VITE WIN. THE PRODUCER GOT IT WRONG
# ::tokens ["HOW", "DO", "THE", "SHOW", "MADE", "THEIR", "DECISIONARIE", ",", "WTHH", ".", "LET", "THE", "FAN", "MAKE", "THE", "DECISION", "&", "amp", ";", "HAVE", "A", "POLE", ",", "THE", "MOST", "VITE", "WIN", ".", "THE", "PRODUCER", "GOT", "IT", "WRONG"]
# ::lemmas ["how", "do", "the", "SHOW", "make", "their", "DECISIONARIE", ",", "WTHH", ".", "let", "the", "fan", "make", "the", "DECISION", "&", "amp", ";", "have", "a", "pole", ",", "the", "MOST", "VITE", "WIN", ".", "the", "PRODUCER", "get", "it", "wrong"]
(c4-13 / multi-sentence
       :snt1 (c4-6 / make-01
                   :ARG0 (c4-0 / show-04)
                   :ARG1 (c4-11 / thing
                                :ARG1-of (c4-18 / decide-01
                                                :ARG0 c4-0))
                   :manner (c4-10 / amr-unknown)
                   :mod (c4-7 / heck
                              :mode expressive))
       :snt2 (c4-9 / and
                   :op1 (c4-1 / let-01
                              :ARG1 (c4-15 / decide-01
                                           :ARG0 (c4-17 / folk)))
                   :op2 (c4-21 / have-03
                               :ARG0 c4-17
                               :ARG1 (c4-8 / and
                                           :op1 c4-11
                                           :op2 (c4-23 / amp))
                               :op3-of c4-9)
                   :ARG0 c4-17
                   :ARG1 (c4-19 / POLE
                                :ARG0-of (c4-20 / win-01
                                                :ARG1-of (c4-5 / have-degree-91
                                                               :ARG2 (c4-14 / perverse)
                                                               :ARG3 (c4-16 / most)))))
       :snt3 (c4-12 / get-02
                    :ARG0 (c4-4 / person
                                :ARG0-of (c4-3 / prosecute-01))
                    :ARG1 (c4-2 / wrong-04
                                :ARG1 (c4-22 / it))))

# ::snt True lol! I
# ::tokens ["True", "lol", "!", "I"]
# ::lemmas ["true", "lol", "!", "i"]
(c5-3 / true-01
      :ARG1 (c5-2 / i)
      :ARG2-of (c5-1 / laugh-01
                     :ARG0 c5-2
                     :manner (c5-0 / loud)
                     :mode expressive))

# ::snt I don't take the show seriously so it will be entertaining to see the trips &amp; tears
# ::tokens ["I", "do", "n't", "take", "the", "show", "seriously", "so", "it", "will", "be", "entertaining", "to", "see", "the", "trips", "&", "amp", ";", "tears"]
# ::lemmas ["i", "do", "not", "take", "the", "show", "seriously", "so", "it", "will", "be", "entertaining", "to", "see", "the", "trips", "&", "amp", ";", "tear"]
(c6-4 / cause-01
      :ARG0 (c6-6 / take-04
                  :ARG0 (c6-5 / i)
                  :ARG1 (c6-1 / show-04)
                  :ARG2 (c6-0 / serious-01)
                  :polarity -)
      :ARG1 (c6-3 / entertain-01
                  :ARG0 (c6-10 / see-01
                               :ARG1 (c6-2 / and
                                           :op1 (c6-9 / trip-03)
                                           :op2 (c6-7 / amp)
                                           :op3 (c6-8 / tear-03)))))

# ::snt Dean? Lmfaoo he acts like a horny th grader
# ::tokens ["Dean", "?", "Lmfaoo", "he", "acts", "like", "a", "horny", "th", "grader"]
# ::lemmas ["dean", "?", "lmfaoo", "he", "act", "like", "a", "horny", "th", "grader"]
(c7-1 / multi-sentence
      :snt1 (c7-5 / person
                  :name (c7-0 / name
                              :op1 "Dean")
                  :polarity (c7-9 / amr-unknown))
      :snt2 (c7-8 / act-01
                  :ARG0 (c7-4 / he)
                  :ARG1 (c7-2 / person
                              :mod (c7-7 / high-school)
                              :ARG1-of (c7-3 / horn-01))
                  :ARG2-of (c7-6 / laugh-01
                                 :ARG0 (c7-10 / i)
                                 :manner (c7-11 / loud)
                                 :mode expressive)))

# ::snt No normal woman would have took Nick seriously who went on after being rejected twice and a stunt on BIP/DWTS
# ::tokens ["No", "normal", "woman", "would", "have", "took", "Nick", "seriously", "who", "went", "on", "after", "being", "rejected", "twice", "and", "a", "stunt", "on", "BIP", "/", "DWTS"]
# ::lemmas ["no", "normal", "woman", "would", "have", "take", "Nick", "seriously", "who", "go", "on", "after", "be", "reject", "twice", "and", "a", "stunt", "on", "BIP", "/", "DWTS"]
(c8-11 / take-04
       :ARG0 (c8-9 / woman
                   :ARG1-of (c8-2 / normal-02))
       :ARG1 (c8-7 / person
                   :name (c8-6 / name
                               :op1 "Nick"))
       :ARG2 (c8-3 / serious-01)
       :ARG1-of (c8-12 / go-on-15
                       :time (c8-4 / after
                                   :op1 (c8-10 / and
                                               :op1 (c8-5 / reject-01
                                                          :ARG1 c8-7
                                                          :frequency 2)
                                               :op2 (c8-13 / thing
                                                           :ARG1-of (c8-0 / stunt-01)
                                                           :medium (c8-1 / broadcast-program
                                                                         :name (c8-8 / name
                                                                                     :op1 "BIP/DWTS"))))))
       :polarity -)

# ::snt No the stupid clowns like Dean and Robby were good for BIP. They finally got someone mature who isn't looking for fame. He has a career!
# ::tokens ["No", "the", "stupid", "clowns", "like", "Dean", "and", "Robby", "were", "good", "for", "BIP", ".", "They", "finally", "got", "someone", "mature", "who", "is", "n't", "looking", "for", "fame", ".", "He", "has", "a", "career", "!"]
# ::lemmas ["no", "the", "stupid", "clown", "like", "Dean", "and", "Robby", "be", "good", "for", "BIP", ".", "they", "finally", "get", "someone", "mature", "who", "be", "not", "look", "for", "fame", ".", "he", "have", "a", "career", "!"]
(c9-11 / multi-sentence
       :snt1 (c9-9 / good-03
                   :ARG1 (c9-14 / clown
                                :mod (c9-0 / stupid)
                                :example (c9-8 / and
                                               :op1 (c9-17 / person
                                                           :name (c9-16 / name
                                                                        :op1 "Dean"))
                                               :op2 (c9-12 / person
                                                           :name (c9-13 / name
                                                                        :op1 "Robby"))))
                   :ARG2 (c9-3 / product
                               :name (c9-18 / name
                                            :op1 "BIP"))
                   :polarity -)
       :snt2 (c9-2 / get-01
                   :ARG0 (c9-7 / they)
                   :ARG1 (c9-4 / someone
                               :ARG1-of (c9-5 / mature-02)
                               :ARG0-of (c9-1 / look-02
                                              :ARG1 (c9-15 / fame-01)
                                              :polarity -))
                   :time (c9-19 / final))
       :snt3 (c9-6 / have-03
                   :ARG0 (c9-20 / he)
                   :ARG1 (c9-10 / career)))

# ::snt Bachelor millennials need to disappear he's hot, he was a great kisser on Emily's season and oh wait for it...HE HAS A CAREER
# ::tokens ["Bachelor", "millennials", "need", "to", "disappear", "he", "'s", "hot", ",", "he", "was", "a", "great", "kisser", "on", "Emily", "'s", "season", "and", "oh", "wait", "for", "it", "...", "HE", "HAS", "A", "CAREER"]
# ::lemmas ["bachelor", "millennial", "need", "to", "disappear", "he", "be", "hot", ",", "he", "be", "a", "great", "kisser", "on", "Emily", "'s", "season", "and", "oh", "wait", "for", "it", "...", "he", "have", "a", "career"]
(c10-10 / multi-sentence
        :snt1 (c10-15 / need-01
                      :ARG1 (c10-19 / disappear-01
                                    :ARG1 (c10-16 / person
                                                  :mod (c10-2 / young)
                                                  :mod (c10-9 / bachelor))))
        :snt2 (c10-4 / hot-03
                     :ARG1 (c10-18 / he))
        :snt3 (c10-5 / kiss-01
                     :ARG0 (c10-3 / he)
                     :mod (c10-7 / great)
                     :time (c10-0 / season
                                  :poss (c10-11 / person
                                                :name (c10-12 / name
                                                              :op1 "Emily"))))
        :snt4 (c10-17 / wait-01
                      :ARG1 (c10-8 / you)
                      :mod (c10-1 / oh)
                      :mode imperative)
        :snt5 (c10-14 / have-03
                      :ARG0 (c10-6 / he)
                      :ARG1 (c10-13 / care-03
                                    :ARG0 c10-6)))

# ::snt After all this time,and you have not found someone,why you were waiting to be the bachelor to find love,sorry not buying this
# ::tokens ["After", "all", "this", "time", ",", "and", "you", "have", "not", "found", "someone", ",", "why", "you", "were", "waiting", "to", "be", "the", "bachelor", "to", "find", "love", ",", "sorry", "not", "buying", "this"]
# ::lemmas ["after", "all", "this", "time", ",", "and", "you", "have", "not", "find", "someone", ",", "why", "you", "be", "wait", "to", "be", "the", "bachelor", "to", "find", "love", ",", "sorry", "not", "buy", "this"]
(c11-4 / sorry-01
       :ARG1 (c11-11 / i)
       :ARG2 (c11-12 / and
                     :op1 (c11-0 / find-01
                                 :ARG0 (c11-3 / you)
                                 :ARG1 (c11-1 / someone)
                                 :concession (c11-13 / after
                                                     :op1 (c11-10 / time
                                                                  :mod (c11-16 / this)
                                                                  :mod (c11-8 / all)))
                                 :polarity -)
                     :op2 (c11-7 / wait-01
                                 :ARG1 c11-3
                                 :ARG2 (c11-6 / find-01
                                              :ARG0 c11-3
                                              :ARG1 (c11-5 / love-01))
                                 :ARG1-of (c11-9 / cause-01
                                                 :ARG0 (c11-14 / amr-unknown)))
                     :op3 c11-4
                     :ARG1 c11-11
                     :ARG2 (c11-2 / buy-05
                                  :ARG0 c11-11
                                  :ARG1 (c11-15 / this))
                     :polarity -))

# ::snt In a word: yes.
# ::tokens ["In", "a", "word", ":", "yes", "."]
# ::lemmas ["in", "a", "word", ":", "yes", "."]
(c12-1 / yes
       :ARG1-of (c12-0 / word-01
                       :quant 1))

# ::snt Still not warmed up to him.
# ::tokens ["Still", "not", "warmed", "up", "to", "him", "."]
# ::lemmas ["still", "not", "warm", "up", "to", "he", "."]
(c13-0 / warm-up-02
       :ARG1 (c13-1 / he)
       :mod (c13-2 / still)
       :polarity -)

# ::snt DEFINITELY WRONG CHOICEHE HAS HIS CHANCE WITH COURTNEY. PICK CHASE, JOHN MAYER, JARED, DEAN OR BAD BOY CONTROVERSY CHAD
# ::tokens ["DEFINITELY", "WRONG", "CHOICEHE", "HAS", "HIS", "CHANCE", "WITH", "COURTNEY", ".", "PICK", "CHASE", ",", "JOHN", "MAYER", ",", "JARED", ",", "DEAN", "OR", "BAD", "BOY", "CONTROVERSY", "CHAD"]
# ::lemmas ["DEFINITELY", "WRONG", "CHOICEHE", "have", "his", "chance", "with", "COURTNEY", ".", "PICK", "CHASE", ",", "JOHN", "MAYER", ",", "JARED", ",", "DEAN", "or", "bad", "BOY", "CONTROVERSY", "chad"]
(c14-9 / multi-sentence
       :snt1 (c14-12 / choose-01
                     :ARG1-of (c14-18 / wrong-02
                                      :mod (c14-14 / final)))
       :snt2 (c14-4 / have-03
                    :ARG0 (c14-19 / he)
                    :ARG1 (c14-8 / care-03
                                 :ARG0 c14-19
                                 :ARG1 (c14-16 / person
                                               :ARG0-of (c14-3 / have-rel-role-91
                                                               :ARG1 c14-19
                                                               :ARG2 (c14-6 / attorney)))))
       :snt3 (c14-5 / and
                    :op1 (c14-10 / pick-01
                                 :ARG0 (c14-2 / you)
                                 :mode imperative)
                    :op2 (c14-1 / person
                                :name (c14-15 / name
                                              :op1 "John"
                                              :op2 "Mayer"))
                    :op3 (c14-0 / person
                                :name (c14-11 / name
                                              :op1 "Jared"))
                    :op4 (c14-7 / person
                                :name (c14-17 / name
                                              :op1 "Dean"))
                    :op5 (c14-20 / person
                                 :name (c14-13 / name
                                               :op1 "Bad"
                                               :op2 "Boys"
                                               :op3 "Chad"))))

# ::snt Is he the oldest!?
# ::tokens ["Is", "he", "the", "oldest", "!", "?"]
# ::lemmas ["be", "he", "the", "old", "!", "?"]
(c16-2 / have-degree-91
       :ARG1 (c16-3 / he)
       :ARG2 (c16-0 / old)
       :ARG3 (c16-1 / most)
       :polarity (c16-4 / amr-unknown))

# ::snt Can someone please explain why you think he is such a bad choice? After his season, I always thought he should have been the bachelor.
# ::tokens ["Can", "someone", "please", "explain", "why", "you", "think", "he", "is", "such", "a", "bad", "choice", "?", "After", "his", "season", ",", "I", "always", "thought", "he", "should", "have", "been", "the", "bachelor", "."]
# ::lemmas ["can", "someone", "please", "explain", "why", "you", "think", "he", "be", "such", "a", "bad", "choice", "?", "after", "his", "season", ",", "i", "always", "think", "he", "should", "have", "be", "the", "bachelor", "."]
(c17-12 / multi-sentence
        :snt1 (c17-17 / possible-01
                      :polarity (c17-9 / amr-unknown)
                      :ARG1 (c17-16 / explain-01
                                    :ARG0 (c17-0 / someone)
                                    :ARG1 (c17-7 / amr-unknown
                                                 :ARG0-of (c17-13 / cause-01
                                                                  :ARG1 (c17-8 / think-01
                                                                               :ARG0 (c17-4 / you)
                                                                               :ARG1 (c17-10 / choose-01
                                                                                             :ARG0 (c17-5 / he)
                                                                                             :ARG1-of (c17-11 / bad-07
                                                                                                              :degree (c17-3 / such))))))
                                    :polite +)
                      :snt2 (c17-14 / think-01
                                    :ARG0 (c17-19 / i)
                                    :ARG1 (c17-15 / recommend-01
                                                  :ARG1 (c17-1 / bachelor
                                                               :domain (c17-18 / he)))
                                    :time (c17-6 / after
                                                 :op1 (c17-2 / season
                                                             :poss c17-18))
                                    :time (c17-20 / always))))

# ::snt Me trying to understand
# ::tokens ["Me", "trying", "to", "understand"]
# ::lemmas ["i", "try", "to", "understand"]
(c18-2 / try-01
       :ARG0 (c18-1 / i)
       :ARG1 (c18-0 / understand-01
                    :ARG0 c18-1))

# ::snt Maybe and maybe not, but i think hes goos.
# ::tokens ["Maybe", "and", "maybe", "not", ",", "but", "i", "think", "he", "s", "goos", "."]
# ::lemmas ["maybe", "and", "maybe", "not", ",", "but", "i", "think", "he", "s", "goos", "."]
(c19-4 / contrast-01
       :ARG1 (c19-1 / and
                    :op1 (c19-3 / possible-01)
                    :op2 (c19-0 / possible-01
                                :polarity -))
       :ARG2 (c19-6 / think-01
                    :ARG0 (c19-5 / i)
                    :ARG1 (c19-7 / goos
                                 :domain (c19-2 / he))))

# ::snt I'm sure he's a good son. A good friend. A good guy. Not bachelor tho. Better for BIP
# ::tokens ["I", "'m", "sure", "he", "'s", "a", "good", "son", ".", "A", "good", "friend", ".", "A", "good", "guy", ".", "Not", "bachelor", "tho", ".", "Better", "for", "BIP"]
# ::lemmas ["i", "be", "sure", "he", "be", "a", "good", "son", ".", "a", "good", "friend", ".", "a", "good", "guy", ".", "not", "bachelor", "tho", ".", "well", "for", "BIP"]
(c20-14 / multi-sentence
        :snt1 (c20-0 / sure-02
                     :ARG0 (c20-19 / i)
                     :ARG1 (c20-11 / good-02
                                   :ARG1 (c20-7 / he)
                                   :ARG2 (c20-18 / have-rel-role-91
                                                 :ARG0 c20-7
                                                 :ARG2 (c20-5 / son))))
        :snt2 (c20-6 / have-rel-role-91
                     :ARG0 (c20-16 / he)
                     :ARG2 (c20-17 / friend
                                   :ARG1-of (c20-3 / good-02)))
        :snt3 (c20-4 / guy
                     :ARG1-of (c20-12 / good-02))
        :snt4 (c20-8 / have-concession-91
                     :ARG1 (c20-13 / bachelor
                                   :domain (c20-10 / he)
                                   :polarity -))
        :snt5 (c20-2 / good-02
                     :ARG2 (c20-1 / bip)
                     :ARG2-of (c20-15 / have-degree-91
                                      :ARG1 c20-1
                                      :ARG3 (c20-9 / more))))

# ::snt Of AALLLLL the single guys in the US, best u can do?
# ::tokens ["Of", "AALLLLL", "the", "single", "guys", "in", "the", "US", ",", "best", "u", "can", "do", "?"]
# ::lemmas ["of", "AALLLLL", "the", "single", "guy", "in", "the", "US", ",", "good", "u", "can", "do", "?"]
(c21-6 / know-01
       :ARG0 (c21-0 / you)
       :ARG1 (c21-10 / thing
                     :ARG1-of (c21-12 / do-02
                                      :ARG0 c21-0
                                      :ARG1-of (c21-7 / possible-01))
                     :ARG1-of (c21-11 / good-02
                                      :ARG2-of (c21-5 / have-degree-91
                                                      :ARG1 c21-10
                                                      :ARG3 (c21-1 / most)))
                     :topic (c21-9 / guy
                                   :ARG1-of (c21-3 / single-03)
                                   :location (c21-8 / country
                                                    :name (c21-2 / name
                                                                 :op1 "US"))))
       :polarity (c21-4 / amr-unknown))

# ::snt Kinda ! No normal woman will take him seriously.
# ::tokens ["Kinda", "!", "No", "normal", "woman", "will", "take", "him", "seriously", "."]
# ::lemmas ["Kinda", "!", "no", "normal", "woman", "will", "take", "he", "seriously", "."]
(c22-5 / take-04
       :ARG0 (c22-4 / woman
                    :ARG1-of (c22-0 / normal-02)
                    :polarity -)
       :ARG1 (c22-2 / he)
       :ARG2 (c22-1 / serious-01)
       :degree (c22-3 / kind-of))

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c23-0 / yes)

# ::snt At first I thought this was a joke because I don't remember him at all, but apparently it's real.
# ::tokens ["At", "first", "I", "thought", "this", "was", "a", "joke", "because", "I", "do", "n't", "remember", "him", "at", "all", ",", "but", "apparently", "it", "'s", "real", "."]
# ::lemmas ["at", "first", "i", "think", "this", "be", "a", "joke", "because", "i", "do", "not", "remember", "he", "at", "all", ",", "but", "apparently", "it", "be", "real", "."]
(c24-3 / contrast-01
       :ARG1 (c24-8 / think-01
                    :ARG0 (c24-6 / i)
                    :ARG1 (c24-5 / joke-01
                                 :ARG2 (c24-7 / this))
                    :ARG1-of (c24-11 / cause-01
                                     :ARG0 (c24-0 / remember-01
                                                  :ARG0 c24-6
                                                  :ARG1 (c24-2 / he)
                                                  :degree (c24-1 / at-all)
                                                  :polarity -))
                    :time (c24-9 / at-first))
       :ARG2 (c24-10 / real-04
                     :ARG1 c24-7
                     :mod (c24-4 / apparent)))

# ::snt Give him a chance.. come on
# ::tokens ["Give", "him", "a", "chance", "..", "come", "on"]
# ::lemmas ["give", "he", "a", "chance", "..", "come", "on"]
(c25-2 / come-on-25
       :ARG1 (c25-1 / he)
       :condition (c25-3 / give-01
                         :ARG0 (c25-0 / you)
                         :ARG1 (c25-4 / chance-02
                                      :ARG0 c25-1)
                         :ARG2 c25-1)
       :mode imperative)

# ::snt Is this a real question. Just say it isn't so! They cannot possibly be serious about Arie Luyendyk Jr. being the next bachelor.
# ::tokens ["Is", "this", "a", "real", "question", ".", "Just", "say", "it", "is", "n't", "so", "!", "They", "can", "not", "possibly", "be", "serious", "about", "Arie", "Luyendyk", "Jr.", "being", "the", "next", "bachelor", "."]
# ::lemmas ["be", "this", "a", "real", "question", ".", "just", "say", "it", "be", "not", "so", "!", "they", "can", "not", "possibly", "be", "serious", "about", "Arie", "Luyendyk", "Jr.", "be", "the", "next", "bachelor", "."]
(c26-11 / multi-sentence
        :snt1 (c26-7 / question-01
                     :polarity (c26-8 / amr-unknown)
                     :ARG1-of (c26-15 / real-04)
                     :domain (c26-9 / this))
        :snt2 (c26-0 / say-01
                     :ARG0 (c26-3 / you)
                     :ARG1 (c26-4 / have-polarity-91
                                  :ARG1 (c26-18 / it)
                                  :mod (c26-2 / so)
                                  :ARG2 -)
                     :mod (c26-6 / just)
                     :mode imperative)
        :snt3 (c26-16 / possible-01
                      :ARG1 (c26-1 / serious-01
                                   :ARG1 (c26-13 / they)
                                   :ARG2 (c26-12 / person
                                                 :name (c26-14 / name
                                                               :op1 "Arie"
                                                               :op2 "Luyendyk"
                                                               :op3 "Jr.")
                                                 :ARG1-of (c26-17 / have-degree-91
                                                                  :ARG2 (c26-10 / bachelor)
                                                                  :ARG3 (c26-5 / most))))
                      :polarity -))

# ::snt ...
# ::tokens ["..."]
# ::lemmas ["..."]
(c27-0 / amr-empty)

# ::snt Cause the shows been on seasons too long?
# ::tokens ["Cause", "the", "shows", "been", "on", "seasons", "too", "long", "?"]
# ::lemmas ["cause", "the", "show", "be", "on", "season", "too", "long", "?"]
(c28-5 / cause-01
       :ARG0 (c28-3 / have-03
                    :ARG0 (c28-1 / show)
                    :ARG1 (c28-0 / season)
                    :ARG1-of (c28-4 / long-03
                                    :ARG2-of (c28-6 / have-degree-91
                                                    :ARG1 c28-0
                                                    :ARG3 (c28-7 / too)))
                    :polarity (c28-2 / amr-unknown)))
