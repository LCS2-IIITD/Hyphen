# ::snt And nobody with a life gave a $hit.....
# ::tokens ["And", "nobody", "with", "a", "life", "gave", "a", "$", "hit", "....."]
# ::lemmas ["and", "nobody", "with", "a", "life", "give", "a", "$", "hit", "....."]
(c1-3 / and
      :op2 (c1-4 / give-16
                 :ARG0 (c1-0 / nobody
                             :ARG0-of (c1-2 / live-01))
                 :ARG1 (c1-1 / hit-01)))

# ::snt Team Lana Del Ray
# ::tokens ["Team", "Lana", "Del", "Ray"]
# ::lemmas ["Team", "Lana", "Del", "Ray"]
(c2-1 / team
      :name (c2-0 / name
                  :op1 "Lana"
                  :op2 "Del"
                  :op3 "Ray"))

# ::snt Yes if l had lots of money then l could think about something else
# ::tokens ["Yes", "if", "l", "had", "lots", "of", "money", "then", "l", "could", "think", "about", "something", "else"]
# ::lemmas ["yes", "if", "l", "have", "lot", "of", "money", "then", "l", "could", "think", "about", "something", "else"]
(c3-4 / possible-01
      :ARG1 (c3-7 / think-01
                  :ARG0 (c3-6 / i)
                  :ARG2 (c3-1 / something
                              :mod (c3-2 / else)))
      :condition (c3-3 / have-03
                       :ARG0 c3-6
                       :ARG1 (c3-0 / money
                                   :quant (c3-5 / lot))))

# ::snt A marriage is a person compromise. . It takes to have a marriage
# ::tokens ["A", "marriage", "is", "a", "person", "compromise", ".", ".", "It", "takes", "to", "have", "a", "marriage"]
# ::lemmas ["a", "marriage", "be", "a", "person", "compromise", ".", ".", "it", "take", "to", "have", "a", "marriage"]
(c4-0 / multi-sentence
      :snt1 (c4-3 / compromise-01
                  :ARG0 (c4-2 / person)
                  :domain (c4-1 / marry-01))
      :snt2 (c4-4 / take-10
                  :ARG0 (c4-5 / marry-01)))

# ::snt I wouldn't
# ::tokens ["I", "would", "n't"]
# ::lemmas ["i", "would", "not"]
(c5-0 / prefer-01
      :ARG0 (c5-1 / i)
      :polarity -)

# ::snt He just wants attention. Like a small child who doesn't care what kind of attention he gets.
# ::tokens ["He", "just", "wants", "attention", ".", "Like", "a", "small", "child", "who", "does", "n't", "care", "what", "kind", "of", "attention", "he", "gets", "."]
# ::lemmas ["he", "just", "want", "attention", ".", "like", "a", "small", "child", "who", "do", "not", "care", "what", "kind", "of", "attention", "he", "get", "."]
(c6-0 / multi-sentence
      :snt1 (c6-5 / want-01
                  :ARG0 (c6-3 / he)
                  :ARG1 (c6-10 / attend-02
                               :ARG1 c6-3)
                  :mod (c6-8 / just))
      :snt2 (c6-2 / resemble-01
                  :ARG1 (c6-7 / he)
                  :ARG2 (c6-6 / child
                              :mod (c6-1 / small)
                              :ARG0-of (c6-11 / care-01
                                              :ARG1 (c6-4 / kind
                                                          :degree-of (c6-9 / attend-02
                                                                           :ARG1 c6-6))
                                              :polarity -))))

# ::snt Eve is the only person who has realized that he starts to say something but doesn't elaborate or complete what he means. It's his meds that makes him think that way. Bipolar meds can Eff up your brain and thinking.
# ::tokens ["Eve", "is", "the", "only", "person", "who", "has", "realized", "that", "he", "starts", "to", "say", "something", "but", "does", "n't", "elaborate", "or", "complete", "what", "he", "means", ".", "It", "'s", "his", "meds", "that", "makes", "him", "think", "that", "way", ".", "Bipolar", "meds", "can", "Eff", "up", "your", "brain", "and", "thinking", "."]
# ::lemmas ["Eve", "be", "the", "only", "person", "who", "have", "realize", "that", "he", "start", "to", "say", "something", "but", "do", "not", "elaborate", "or", "complete", "what", "he", "mean", ".", "it", "be", "his", "med", "that", "make", "he", "think", "that", "way", ".", "bipolar", "med", "can", "Eff", "up", "your", "brain", "and", "thinking", "."]
(c7-14 / multi-sentence
       :snt1 (c7-25 / person
                    :name (c7-22 / name
                                 :op1 "Eve")
                    :mod (c7-3 / only)
                    :ARG0-of (c7-23 / realize-01
                                    :ARG1 (c7-0 / start-01
                                                :ARG0 (c7-6 / he)
                                                :ARG1 (c7-4 / say-01
                                                            :ARG0 c7-6
                                                            :ARG1 (c7-2 / something))
                                                :ARG1-of (c7-18 / contrast-01
                                                                :ARG2 (c7-12 / or
                                                                             :op1 (c7-24 / elaborate-01
                                                                                         :ARG0 c7-6
                                                                                         :ARG1 (c7-8 / thing
                                                                                                     :ARG2-of (c7-7 / mean-01
                                                                                                                    :ARG0 c7-6))
                                                                                         :polarity -)
                                                                             :op2 (c7-11 / complete-01
                                                                                         :ARG0 c7-6
                                                                                         :ARG1 c7-8
                                                                                         :polarity -)))))
                    :snt2 (c7-21 / make-02
                                 :ARG0 (c7-17 / medication
                                              :poss (c7-27 / he))
                                 :ARG1 (c7-19 / think-01
                                              :ARG0 c7-27
                                              :manner (c7-26 / way
                                                             :mod (c7-28 / that))))
                    :snt3 (c7-15 / possible-01
                                 :ARG1 (c7-10 / Eff-up-00
                                              :ARG0 (c7-20 / medication
                                                           :mod c7-25
                                                           :name (c7-16 / name
                                                                        :op1 "Bipolar")))
                                 :ARG1 (c7-9 / and
                                             :op1 (c7-13 / brain
                                                         :part-of (c7-5 / you))
                                             :op2 (c7-1 / think-01
                                                        :ARG0 c7-5)))))

# ::snt You can keep them both, to much for a simple gal like me lol
# ::tokens ["You", "can", "keep", "them", "both", ",", "to", "much", "for", "a", "simple", "gal", "like", "me", "lol"]
# ::lemmas ["you", "can", "keep", "they", "both", ",", "to", "much", "for", "a", "simple", "gal", "like", "i", "lol"]
(c8-6 / possible-01
      :ARG1 (c8-7 / keep-01
                  :ARG0 (c8-1 / you)
                  :ARG1 (c8-10 / they
                               :quant (c8-0 / both))
                  :ARG1-of (c8-5 / have-quant-91
                                 :ARG3 (c8-13 / too
                                              :quant (c8-2 / much))
                                 :ARG6 (c8-11 / gal
                                              :ARG1-of (c8-3 / simple-02)
                                              :ARG1-of (c8-4 / resemble-01
                                                             :ARG2 (c8-9 / i)))
                                 :ARG2-of (c8-8 / laugh-01
                                                :ARG0 c8-9
                                                :manner (c8-12 / loud)))))

# ::snt For a million dollar check..Sure!
# ::tokens ["For", "a", "million", "dollar", "check", "..", "Sure", "!"]
# ::lemmas ["for", "a", "million", "dollar", "check", "..", "sure", "!"]
(c9-3 / sure-02
      :prep-for (c9-0 / check
                      :value (c9-1 / monetary-quantity
                                   :unit (c9-2 / dollar)
                                   :quant 1000000))
      :mode expressive)

# ::snt What a stupid question and so typical of the talk! Thats like asking if one could handle being married to a diabetic or a person who has a heart condition. Mental illness is a medical condition like all other medical conditions, managed and maintained w/medication and therapy!
# ::tokens ["What", "a", "stupid", "question", "and", "so", "typical", "of", "the", "talk", "!", "That", "s", "like", "asking", "if", "one", "could", "handle", "being", "married", "to", "a", "diabetic", "or", "a", "person", "who", "has", "a", "heart", "condition", ".", "Mental", "illness", "is", "a", "medical", "condition", "like", "all", "other", "medical", "conditions", ",", "managed", "and", "maintained", "w", "/", "medication", "and", "therapy", "!"]
# ::lemmas ["what", "a", "stupid", "question", "and", "so", "typical", "of", "the", "talk", "!", "that", "s", "like", "ask", "if", "one", "could", "handle", "be", "married", "to", "a", "diabetic", "or", "a", "person", "who", "have", "a", "heart", "condition", ".", "mental", "illness", "be", "a", "medical", "condition", "like", "all", "other", "medical", "condition", ",", "manage", "and", "maintain", "w", "/", "medication", "and", "therapy", "!"]
(c10-17 / multi-sentence
        :snt1 (c10-11 / and
                      :op1 (c10-12 / thing
                                   :ARG1-of (c10-10 / question-01)
                                   :mod (c10-0 / stupid)
                                   :ARG1-of (c10-23 / typical-02
                                                    :ARG2 (c10-33 / talk-01)
                                                    :degree (c10-4 / so)))
                      :op2 (c10-29 / resemble-01
                                   :ARG1 (c10-1 / that)
                                   :ARG2 (c10-13 / ask-01
                                                 :ARG1 (c10-30 / possible-01
                                                               :ARG1 (c10-7 / handle-01
                                                                            :ARG0 (c10-5 / one)
                                                                            :ARG1 (c10-8 / marry-01
                                                                                         :ARG1 c10-5
                                                                                         :ARG2 (c10-16 / or
                                                                                                       :op1 (c10-18 / person
                                                                                                                    :ARG0-of (c10-31 / have-03
                                                                                                                                     :ARG1 (c10-22 / condition
                                                                                                                                                   :mod (c10-35 / diabetes))))
                                                                                                       :op2 (c10-3 / person
                                                                                                                   :ARG0-of (c10-6 / have-03
                                                                                                                                   :ARG1 (c10-15 / condition
                                                                                                                                                 :mod (c10-24 / heart)))))))))))
        :snt2 (c10-2 / condition
                     :mod (c10-25 / medical)
                     :domain (c10-34 / ill-01
                                     :ARG2 (c10-21 / mental))
                     :ARG1-of c10-29
                     :ARG2 (c10-28 / condition
                                   :mod (c10-26 / medical)
                                   :mod (c10-36 / other)
                                   :mod (c10-9 / all))
                     :ARG1-of (c10-27 / manage-01)
                     :ARG1-of (c10-20 / maintain-01
                                      :manner (c10-19 / and
                                                      :op1 (c10-32 / medicate-01)
                                                      :op2 (c10-14 / therapy)))))

# ::snt No friggen way !!! He needs help!!!
# ::tokens ["No", "friggen", "way", "!", "!", "!", "He", "needs", "help", "!", "!", "!"]
# ::lemmas ["no", "friggen", "way", "!", "!", "!", "he", "need", "help", "!", "!", "!"]
(c11-2 / multi-sentence
       :snt1 (c11-4 / way
                    :mod (c11-0 / frigging)
                    :polarity -)
       :snt2 (c11-1 / need-01
                    :ARG0 (c11-3 / he)
                    :ARG1 (c11-5 / help-01
                                 :ARG1 c11-3)))

# ::snt Nope he is a clown.
# ::tokens ["Nope", "he", "is", "a", "clown", "."]
# ::lemmas ["nope", "he", "be", "a", "clown", "."]
(c12-0 / clown
       :domain (c12-1 / he)
       :mod (c12-2 / nope))

# ::snt Cant get with that.......
# ::tokens ["Ca", "nt", "get", "with", "that", "......."]
# ::lemmas ["can", "not", "get", "with", "that", "......."]
(c13-1 / possible-01
       :ARG1 (c13-0 / get-22
                    :ARG1 (c13-2 / that))
       :polarity -)

# ::snt HELL NO NEITHER ONE OF THEM. THEY ARE TOO HIGH MAINTENANCE AND ATTENTION HUNGRY.
# ::tokens ["HELL", "NO", "NEITHER", "ONE", "OF", "THEM", ".", "THEY", "ARE", "TOO", "HIGH", "MAINTENANCE", "AND", "ATTENTION", "HUNGRY", "."]
# ::lemmas ["HELL", "no", "neither", "ONE", "of", "they", ".", "they", "be", "too", "high", "MAINTENANCE", "and", "attention", "hungry", "."]
(c14-1 / multi-sentence
       :snt1 (c14-4 / have-polarity-91
                    :ARG1 (c14-6 / they
                                 :ARG1-of (c14-7 / include-91
                                                 :ARG2 (c14-8 / they)))
                    :ARG2 -)
       :snt2 (c14-2 / and
                    :op1 (c14-0 / fake-02
                                :ARG1 (c14-9 / they)
                                :ARG1-of (c14-5 / high-02))
                    :op2 (c14-3 / hunt-01
                                :ARG0 c14-9
                                :ARG1 (c14-10 / attend-02
                                              :ARG0 c14-9))))

# ::snt I lost respect from him after the incident with Taylor Swift.
# ::tokens ["I", "lost", "respect", "from", "him", "after", "the", "incident", "with", "Taylor", "Swift", "."]
# ::lemmas ["i", "lose", "respect", "from", "he", "after", "the", "incident", "with", "Taylor", "Swift", "."]
(c15-4 / lose-02
       :ARG0 (c15-6 / i)
       :ARG1 (c15-2 / respect-01
                    :ARG0 c15-6
                    :ARG1 (c15-3 / he
                                 :ARG2-of c15-4))
       :time (c15-7 / after
                    :op1 (c15-1 / incident
                                :prep-with (c15-5 / person
                                                  :name (c15-0 / name
                                                               :op1 "Taylor"
                                                               :op2 "Swift")))))

# ::snt Mental institution for Kenya West needs help y'all before he BLOW
# ::tokens ["Mental", "institution", "for", "Kenya", "West", "needs", "help", "y'", "all", "before", "he", "BLOW"]
# ::lemmas ["mental", "institution", "for", "Kenya", "West", "need", "help", "you", "all", "before", "he", "BLOW"]
(c17-3 / need-01
       :ARG0 (c17-9 / institution
                    :mod (c17-2 / mental)
                    :beneficiary (c17-7 / country
                                        :name (c17-4 / name
                                                     :op1 "Kenya"
                                                     :op2 "West")))
       :ARG1 (c17-5 / help-01
                    :ARG1 c17-9
                    :ARG2 (c17-1 / you
                                 :mod (c17-10 / all)))
       :time (c17-0 / before
                    :op1 (c17-6 / bleed-01
                                :ARG0 (c17-8 / he))))

# ::snt Oh hell no. They both only care about one thing, and that's themselves. They both need to go away, sick of seeing their faces all the time.
# ::tokens ["Oh", "hell", "no", ".", "They", "both", "only", "care", "about", "one", "thing", ",", "and", "that", "'s", "themselves", ".", "They", "both", "need", "to", "go", "away", ",", "sick", "of", "seeing", "their", "faces", "all", "the", "time", "."]
# ::lemmas ["oh", "hell", "no", ".", "they", "both", "only", "care", "about", "one", "thing", ",", "and", "that", "be", "themselves", ".", "they", "both", "need", "to", "go", "away", ",", "sick", "of", "see", "their", "face", "all", "the", "time", "."]
(c18-4 / multi-sentence
       :snt1 (c18-9 / have-polarity-91
                    :mod (c18-0 / oh
                                :mod (c18-11 / hell)
                                :mode expressive)
                    :ARG2 -)
       :snt2 (c18-10 / care-01
                     :ARG0 (c18-13 / they
                                   :mod (c18-2 / both))
                     :ARG1 (c18-17 / thing
                                   :quant 1)
                     :mod (c18-1 / only))
       :snt3 (c18-5 / need-01
                    :ARG0 c18-13
                    :ARG1 (c18-14 / go-02
                                  :ARG0 c18-13
                                  :ARG4 (c18-8 / away))
                    :ARG1-of (c18-16 / cause-01
                                     :ARG0 (c18-6 / sick-04
                                                  :ARG0 (c18-3 / see-01
                                                               :ARG0 c18-13
                                                               :ARG1 (c18-7 / face)
                                                               :time (c18-12 / time
                                                                             :mod (c18-15 / all)))
                                                  :ARG1 c18-13))))

# ::snt How did everyone miss Fords opening statement? Claims in she told a therapist Brett might be on the S.C. one day. B.S. Shes such an actor With thousands of judges there is no way in in the middle of the terrorists Obama hey day she would think of Brett being on the S.C
# ::tokens ["How", "did", "everyone", "miss", "Fords", "opening", "statement", "?", "Claims", "in", "she", "told", "a", "therapist", "Brett", "might", "be", "on", "the", "S.C.", "one", "day", ".", "B.S.", "She", "s", "such", "an", "actor", "With", "thousands", "of", "judges", "there", "is", "no", "way", "in", "in", "the", "middle", "of", "the", "terrorists", "Obama", "hey", "day", "she", "would", "think", "of", "Brett", "being", "on", "the", "S.C"]
# ::lemmas ["how", "do", "everyone", "miss", "Fords", "open", "statement", "?", "claim", "in", "she", "tell", "a", "therapist", "Brett", "might", "be", "on", "the", "S.C.", "one", "day", ".", "B.S.", "she", "s", "such", "an", "actor", "with", "thousands", "of", "judge", "there", "be", "no", "way", "in", "in", "the", "middle", "of", "the", "terrorist", "Obama", "hey", "day", "she", "would", "think", "of", "Brett", "be", "on", "the", "S.C"]
(c19-15 / multi-sentence
        :snt1 (c19-7 / miss-02
                     :ARG0 (c19-24 / everyone)
                     :ARG1 (c19-0 / state-01
                                  :ARG0 (c19-25 / person
                                                :name (c19-22 / name
                                                              :op1 "Fords"))
                                  :ARG2-of (c19-5 / open-01))
                     :manner (c19-11 / amr-unknown))
        :snt2 (c19-18 / claim-01
                      :ARG1 (c19-10 / tell-01
                                    :ARG0 (c19-6 / she)
                                    :ARG1 (c19-16 / possible-01
                                                  :ARG1 (c19-14 / be-located-at-91
                                                                :ARG1 (c19-3 / person
                                                                             :name (c19-17 / name
                                                                                           :op1 "Brett"))
                                                                :ARG2 (c19-4 / state
                                                                             :name (c19-26 / name
                                                                                           :op1 "S.C."))
                                                                :time (c19-31 / day
                                                                              :mod (c19-13 / one))))
                                    :ARG2 (c19-20 / therapist)))
        :snt3 (c19-2 / person
                     :ARG0-of (c19-9 / act-01)
                     :mod (c19-23 / such)
                     :domain (c19-12 / person
                                     :name (c19-19 / name
                                                   :op1 "B.S.")))
        :snt4 (c19-8 / have-concession-91
                     :ARG1 (c19-27 / way
                                   :time (c19-21 / middle
                                                 :op1 (c19-30 / terrorist
                                                              :mod (c19-28 / hey
                                                                           :mode expressive)
                                                              :mod (c19-32 / person
                                                                           :name (c19-29 / name
                                                                                         :op1 "Obama"))))
                                   :polarity -)
                     :ARG2 (c19-1 / think-01
                                  :ARG0 c19-6)
                     :ARG1 c19-14
                     :ARG1 c19-3
                     :ARG2 c19-0))

# ::snt Wouldn't even think about it!
# ::tokens ["Would", "n't", "even", "think", "about", "it", "!"]
# ::lemmas ["would", "not", "even", "think", "about", "it", "!"]
(c20-2 / think-01
       :ARG1 (c20-1 / it)
       :mod (c20-0 / even)
       :polarity -
       :mode expressive)

# ::snt Hes not news worthy. Why bother and Jimmy Crack corn!
# ::tokens ["He", "s", "not", "news", "worthy", ".", "Why", "bother", "and", "Jimmy", "Crack", "corn", "!"]
# ::lemmas ["he", "s", "not", "news", "worthy", ".", "why", "bother", "and", "Jimmy", "Crack", "corn", "!"]
(c21-2 / multi-sentence
       :snt1 (c21-9 / deserve-01
                    :ARG0 (c21-3 / he)
                    :ARG1 (c21-1 / news)
                    :polarity -)
       :snt2 (c21-6 / cause-01
                    :ARG0 (c21-8 / amr-unknown)
                    :ARG1 (c21-7 / and
                                 :op1 (c21-0 / bother-01)
                                 :op2 (c21-4 / product
                                             :name (c21-5 / name
                                                          :op1 "Jimmy"
                                                          :op2 "Crack"
                                                          :op3 "Corn")))))

# ::snt I couldn't handle being married to either. Both Kim and Kanye are people. She says she "neglects" Kanye for having three kids. Sure Kim. Its not like she's raising them herself. As for He's just a rude person.
# ::tokens ["I", "could", "n't", "handle", "being", "married", "to", "either", ".", "Both", "Kim", "and", "Kanye", "are", "people", ".", "She", "says", "she", "\"", "neglects", "\"", "Kanye", "for", "having", "three", "kids", ".", "Sure", "Kim", ".", "Its", "not", "like", "she", "'s", "raising", "them", "herself", ".", "As", "for", "He", "'s", "just", "a", "rude", "person", "."]
# ::lemmas ["i", "could", "not", "handle", "be", "married", "to", "either", ".", "both", "Kim", "and", "Kanye", "be", "people", ".", "she", "say", "she", "\"", "neglect", "\"", "Kanye", "for", "have", "three", "kid", ".", "Sure", "Kim", ".", "its", "not", "like", "she", "be", "raise", "they", "herself", ".", "as", "for", "he", "be", "just", "a", "rude", "person", "."]
(c22-16 / multi-sentence
        :snt1 (c22-24 / possible-01
                      :ARG1 (c22-9 / handle-01
                                   :ARG0 (c22-27 / i)
                                   :ARG1 (c22-8 / marry-01
                                                :ARG1 c22-27
                                                :ARG2 (c22-23 / either)))
                      :polarity -)
        :snt2 (c22-17 / person
                      :domain (c22-13 / and
                                      :op1 (c22-2 / person
                                                  :name (c22-21 / name
                                                                :op1 "Kim"))
                                      :op2 (c22-1 / person
                                                  :name (c22-18 / name
                                                                :op1 "Kanye"))
                                      :mod (c22-15 / both)))
        :snt3 (c22-0 / say-01
                     :ARG0 (c22-5 / she)
                     :ARG1 (c22-20 / criticize-01
                                   :ARG0 c22-5
                                   :ARG1 c22-1
                                   :ARG2 (c22-26 / have-05
                                                 :ARG0 c22-1
                                                 :ARG1 (c22-10 / kid
                                                               :quant 3))))
        :snt4 (c22-4 / sure-02
                     :ARG1 (c22-12 / person
                                   :name (c22-25 / name
                                                 :op1 "Kim")))
        :snt5 (c22-22 / resemble-01
                      :ARG1 (c22-6 / it)
                      :ARG2 (c22-3 / raise-03
                                   :ARG0 c22-5
                                   :ARG1 (c22-14 / they))
                      :polarity -)
        :snt6 (c22-28 / person
                      :ARG1-of (c22-19 / rude-01)
                      :mod (c22-11 / just)
                      :domain (c22-7 / he)))

# ::snt NO WAY!!!!
# ::tokens ["NO", "WAY", "!", "!", "!", "!"]
# ::lemmas ["no", "WAY", "!", "!", "!", "!"]
(c23-0 / way
       :polarity -)

# ::snt Neither one of them.
# ::tokens ["Neither", "one", "of", "them", "."]
# ::lemmas ["neither", "one", "of", "they", "."]
(c24-1 / include-91
       :ARG1 (c24-2 / they)
       :ARG2 (c24-0 / either)
       :polarity -)

# ::snt Any man willing to dress like a roblox character doesnt have my respect
# ::tokens ["Any", "man", "willing", "to", "dress", "like", "a", "roblox", "character", "does", "nt", "have", "my", "respect"]
# ::lemmas ["any", "man", "willing", "to", "dress", "like", "a", "roblox", "character", "do", "not", "have", "my", "respect"]
(c25-1 / respect-01
       :ARG0 (c25-5 / i)
       :ARG1 (c25-0 / man
                    :mod (c25-6 / any)
                    :ARG0-of (c25-3 / will-02
                                    :ARG1 (c25-7 / dress-01
                                                 :ARG0 c25-0
                                                 :ARG1-of (c25-8 / resemble-01
                                                                 :ARG2 (c25-4 / character
                                                                              :mod (c25-2 / roblox))))))
       :polarity -)

# ::snt Do you think you could handle being married to Kanye? not just no, but HeLL NO
# ::tokens ["Do", "you", "think", "you", "could", "handle", "being", "married", "to", "Kanye", "?", "not", "just", "no", ",", "but", "HeLL", "NO"]
# ::lemmas ["do", "you", "think", "you", "could", "handle", "be", "married", "to", "Kanye", "?", "not", "just", "no", ",", "but", "HeLL", "no"]
(c26-1 / multi-sentence
       :snt1 (c26-13 / think-01
                     :ARG0 (c26-0 / you)
                     :ARG1 (c26-6 / possible-01
                                  :ARG1 (c26-5 / handle-01
                                               :ARG0 c26-0
                                               :ARG1 (c26-7 / marry-01
                                                            :ARG1 c26-0
                                                            :ARG2 (c26-2 / person
                                                                         :name (c26-3 / name
                                                                                      :op1 "Kanye")))))
                     :polarity (c26-4 / amr-unknown))
       :snt2 (c26-10 / contrast-01
                     :ARG1 (c26-8 / no
                                  :mod (c26-12 / just
                                               :polarity -))
                     :ARG2 (c26-9 / no
                                  :mod (c26-11 / hell))))

# ::snt What happen to love thee family Kenya West ?
# ::tokens ["What", "happen", "to", "love", "thee", "family", "Kenya", "West", "?"]
# ::lemmas ["what", "happen", "to", "love", "thee", "family", "Kenya", "West", "?"]
(c27-3 / love-01
       :ARG0 (c27-5 / i)
       :ARG1 (c27-0 / family
                    :poss (c27-1 / you)
                    :location (c27-4 / country-region
                                     :name (c27-2 / name
                                                  :op1 "Kenya"
                                                  :op2 "West")))
       :mod (c27-6 / amr-unknown))

# ::snt No but couldn't handle the Kardashians either
# ::tokens ["No", "but", "could", "n't", "handle", "the", "Kardashians", "either"]
# ::lemmas ["no", "but", "could", "not", "handle", "the", "Kardashians", "either"]
(c28-4 / possible-01
       :ARG1 (c28-3 / handle-01
                    :ARG0 (c28-6 / i)
                    :ARG1 (c28-1 / person
                                 :name (c28-0 / name
                                              :op1 "K Kardashians"))
                    :mod (c28-2 / either))
       :mod (c28-5 / no-but)
       :polarity -)

# ::snt You guys have the balls to ask about her husband?! Hahaha Why dont you ask about being married to first!
# ::tokens ["You", "guys", "have", "the", "balls", "to", "ask", "about", "her", "husband", "?", "!", "Hahaha", "Why", "do", "nt", "you", "ask", "about", "being", "married", "to", "first", "!"]
# ::lemmas ["you", "guy", "have", "the", "ball", "to", "ask", "about", "her", "husband", "?", "!", "Hahaha", "why", "do", "not", "you", "ask", "about", "be", "marry", "to", "first", "!"]
(c29-3 / multi-sentence
       :snt1 (c29-7 / have-03
                    :ARG0 (c29-2 / you
                                 :mod (c29-15 / guy))
                    :ARG1 (c29-1 / ball)
                    :purpose (c29-14 / ask-01
                                     :ARG0 c29-2
                                     :ARG1 (c29-8 / person
                                                  :ARG0-of (c29-12 / have-rel-role-91
                                                                   :ARG1 (c29-5 / she)
                                                                   :ARG2 (c29-6 / husband))))
                    :mode expressive)
       :snt2 (c29-10 / cause-01
                     :ARG0 (c29-13 / amr-unknown)
                     :ARG1 (c29-11 / ask-01
                                   :ARG0 (c29-16 / you)
                                   :ARG1 (c29-9 / marry-01
                                                :ARG1 c29-16
                                                :ARG2 (c29-4 / person)
                                                :ord (c29-0 / ordinal-entity
                                                            :value 1))
                                   :polarity -)
                     :mod (c29-17 / haha
                                  :mode expressive)))

# ::snt Kim is mad at Kanye because he is soft. No one is scared of him. He does not have a single thug bone in his entire body. She is married to the only rapper who everyone laughs at.
# ::tokens ["Kim", "is", "mad", "at", "Kanye", "because", "he", "is", "soft", ".", "No", "one", "is", "scared", "of", "him", ".", "He", "does", "not", "have", "a", "single", "thug", "bone", "in", "his", "entire", "body", ".", "She", "is", "married", "to", "the", "only", "rapper", "who", "everyone", "laughs", "at", "."]
# ::lemmas ["Kim", "be", "mad", "at", "Kanye", "because", "he", "be", "soft", ".", "no", "one", "be", "scared", "of", "he", ".", "he", "do", "not", "have", "a", "single", "thug", "bone", "in", "his", "entire", "body", ".", "she", "be", "married", "to", "the", "only", "rapper", "who", "everyone", "laugh", "at", "."]
(c30-13 / multi-sentence
        :snt1 (c30-8 / mad-04
                     :ARG0 (c30-21 / person
                                   :name (c30-18 / name
                                                 :op1 "Kanye"))
                     :ARG1 (c30-14 / person
                                   :name (c30-15 / name
                                                 :op1 "Kim"))
                     :ARG1-of (c30-16 / cause-01
                                      :ARG0 (c30-0 / soft-02
                                                   :ARG1 c30-14)))
        :snt2 (c30-5 / scare-01
                     :ARG0 (c30-9 / he)
                     :ARG1 (c30-22 / no-one))
        :snt3 (c30-23 / have-03
                      :ARG0 (c30-7 / he)
                      :ARG1 (c30-12 / bone
                                    :mod (c30-10 / thug)
                                    :quant 1)
                      :location (c30-1 / body
                                       :poss c30-7
                                       :mod (c30-20 / entire))
                      :polarity -)
        :snt4 (c30-17 / marry-01
                      :ARG1 (c30-4 / she)
                      :ARG2 (c30-3 / person
                                   :mod (c30-6 / only)
                                   :ARG0-of (c30-19 / rap-01)
                                   :ARG2-of (c30-2 / laugh-01
                                                   :ARG0 (c30-11 / everyone)))))

# ::snt No! He is to wishey washey for me!
# ::tokens ["No", "!", "He", "is", "to", "wishey", "washey", "for", "me", "!"]
# ::lemmas ["no", "!", "he", "be", "to", "wishey", "washey", "for", "i", "!"]
(c31-1 / multi-sentence
       :snt1 (c31-0 / no)
       :snt2 (c31-2 / hey
                    :domain (c31-3 / he)
                    :beneficiary (c31-4 / i)
                    :mode expressive))

# ::snt NO FREAKING WAY! Sorry Kim!!
# ::tokens ["NO", "FREAKING", "WAY", "!", "Sorry", "Kim", "!", "!"]
# ::lemmas ["no", "FREAKING", "WAY", "!", "Sorry", "Kim", "!", "!"]
(c32-2 / multi-sentence
       :snt1 (c32-6 / way
                    :mod (c32-1 / freak)
                    :polarity -)
       :snt2 (c32-4 / say-01
                    :ARG1 (c32-0 / sorry-01)
                    :ARG2 (c32-5 / person
                                 :name (c32-3 / name
                                              :op1 "Kim"))))

# ::snt Yes ma'am, that's my take on it. If she could put her hands on him, he wouldn't even think of acting up like he has been all these yrs...SMH
# ::tokens ["Yes", "ma'am", ",", "that", "'s", "my", "take", "on", "it", ".", "If", "she", "could", "put", "her", "hands", "on", "him", ",", "he", "would", "n't", "even", "think", "of", "acting", "up", "like", "he", "has", "been", "all", "these", "yrs", "...", "SMH"]
# ::lemmas ["yes", "ma'am", ",", "that", "be", "my", "take", "on", "it", ".", "if", "she", "could", "put", "her", "hand", "on", "he", ",", "he", "would", "not", "even", "think", "of", "act", "up", "like", "he", "have", "be", "all", "these", "yr", "...", "SMH"]
(c33-12 / multi-sentence
        :snt1 (c33-10 / take-34
                      :ARG0 (c33-20 / i)
                      :ARG1 (c33-3 / it)
                      :ARG2 (c33-14 / that)
                      :mod (c33-2 / yes))
        :snt2 (c33-21 / think-01
                      :ARG0 (c33-5 / he)
                      :ARG1 (c33-8 / act-up-02
                                   :ARG0 c33-5
                                   :ARG1-of (c33-16 / resemble-01
                                                    :ARG2 (c33-7 / act-up-02
                                                                 :ARG0 c33-5
                                                                 :duration (c33-1 / temporal-quantity
                                                                                  :unit (c33-11 / year)
                                                                                  :mod (c33-9 / this)
                                                                                  :mod (c33-6 / all)
                                                                                  :quant 1))))
                      :mod (c33-17 / even)
                      :condition (c33-18 / possible-01
                                         :ARG1 (c33-13 / put-01
                                                       :ARG0 (c33-0 / she
                                                                    :part (c33-19 / hand
                                                                                  :ARG1-of c33-13))
                                                       :ARG2 (c33-4 / he)))
                      :mod (c33-15 / hmm
                                   :mode expressive)
                      :polarity -))

# ::snt I wouldnt even WANT to be married to Kanye West. Sorry not sorry.
# ::tokens ["I", "would", "nt", "even", "WANT", "to", "be", "married", "to", "Kanye", "West", ".", "Sorry", "not", "sorry", "."]
# ::lemmas ["i", "would", "not", "even", "want", "to", "be", "marry", "to", "Kanye", "West", ".", "sorry", "not", "sorry", "."]
(c34-0 / multi-sentence
       :snt1 (c34-6 / want-01
                    :ARG0 (c34-7 / i)
                    :ARG1 (c34-4 / marry-01
                                 :ARG1 c34-7
                                 :ARG2 (c34-5 / person
                                              :name (c34-1 / name
                                                           :op1 "Kanye"
                                                           :op2 "West")))
                    :mod (c34-3 / even)
                    :polarity -)
       :snt2 (c34-2 / sorry-01
                    :ARG1 c34-2
                    :ARG1 c34-7
                    :polarity -))

# ::snt Hell to the no!!!
# ::tokens ["Hell", "to", "the", "no", "!", "!", "!"]
# ::lemmas ["hell", "to", "the", "no", "!", "!", "!"]
(c35-1 / no
       :mod (c35-0 / hell
                   :mode expressive))

# ::snt I have all been a big fan.. In always will be. Everyone goes through ups &amp; breakdowns, but who are we to judge.... Seriously
# ::tokens ["I", "have", "all", "been", "a", "big", "fan", "..", "In", "always", "will", "be", ".", "Everyone", "goes", "through", "ups", "&", "amp", ";", "breakdowns", ",", "but", "who", "are", "we", "to", "judge", "....", "Seriously"]
# ::lemmas ["i", "have", "all", "be", "a", "big", "fan", "..", "in", "always", "will", "be", ".", "everyone", "go", "through", "up", "&", "amp", ";", "breakdown", ",", "but", "who", "be", "we", "to", "judge", "....", "seriously"]
(c36-2 / multi-sentence
       :snt1 (c36-0 / fan
                    :domain (c36-12 / i)
                    :mod (c36-1 / big)
                    :mod (c36-13 / all))
       :snt2 (c36-7 / fan
                    :domain c36-12
                    :mod (c36-6 / big)
                    :time (c36-14 / always))
       :snt3 (c36-8 / contrast-01
                    :ARG1 (c36-3 / go-through-20
                                 :ARG0 (c36-5 / everyone)
                                 :ARG1 (c36-9 / and
                                              :op1 (c36-16 / ups-and-amp)
                                              :op2 (c36-17 / break-down-11)))
                    :ARG2 (c36-11 / judge-01
                                  :ARG0 (c36-10 / we)
                                  :ARG1 (c36-15 / amr-unknown)))
       :snt1 (c36-4 / serious-01))

# ::snt Hell no he is a idiot
# ::tokens ["Hell", "no", "he", "is", "a", "idiot"]
# ::lemmas ["hell", "no", "he", "be", "a", "idiot"]
(c37-2 / idiot
       :domain (c37-1 / he)
       :mod (c37-0 / hell))

# ::snt Just pass it ..... System Overload
# ::tokens ["Just", "pass", "it", ".....", "System", "Overload"]
# ::lemmas ["just", "pass", "it", ".....", "system", "overload"]
(c38-2 / multi-sentence
       :snt1 (c38-4 / pass-05
                    :ARG0 (c38-1 / you)
                    :ARG1 (c38-6 / it)
                    :mod (c38-5 / just)
                    :mode imperative)
       :snt2 (c38-0 / overload-01
                    :ARG1 (c38-3 / system)))

# ::snt :He fits in perfectly with the Kardashians...all stupid drama!
# ::tokens [":", "He", "fits", "in", "perfectly", "with", "the", "Kardashians", "...", "all", "stupid", "drama", "!"]
# ::lemmas [":", "he", "fit", "in", "perfectly", "with", "the", "Kardashians", "...", "all", "stupid", "drama", "!"]
(c39-0 / fit-in-02
       :ARG1 (c39-4 / he)
       :ARG2 (c39-7 / and
                    :op1 (c39-1 / broadcast-program
                                :name (c39-2 / name
                                             :op1 "K Kardashians"))
                    :op2 (c39-8 / drama
                                :mod (c39-3 / stupid)
                                :mod (c39-6 / all)))
       :ARG1-of (c39-5 / perfect-02))

# ::snt Uh, they're both whores, so?
# ::tokens ["Uh", ",", "they", "'re", "both", "whores", ",", "so", "?"]
# ::lemmas ["uh", ",", "they", "be", "both", "whore", ",", "so", "?"]
(c40-2 / whore
       :domain (c40-3 / they
                      :mod (c40-0 / both))
       :mod (c40-4 / uh
                   :mode expressive)
       :ARG1-of (c40-1 / request-confirmation-91))

# ::snt he is in need of professional help.
# ::tokens ["he", "is", "in", "need", "of", "professional", "help", "."]
# ::lemmas ["he", "be", "in", "need", "of", "professional", "help", "."]
(c41-3 / need-01
       :ARG0 (c41-2 / he)
       :ARG1 (c41-0 / help-01
                    :ARG0 (c41-1 / professional)
                    :ARG1 c41-2))

# ::snt It should be abolished or amended at least. Maybe that was his point... criminal convictions can result in slavery!?
# ::tokens ["It", "should", "be", "abolished", "or", "amended", "at", "least", ".", "Maybe", "that", "was", "his", "point", "...", "criminal", "convictions", "can", "result", "in", "slavery", "!", "?"]
# ::lemmas ["it", "should", "be", "abolish", "or", "amend", "at", "least", ".", "maybe", "that", "be", "his", "point", "...", "criminal", "conviction", "can", "result", "in", "slavery", "!", "?"]
(c42-1 / multi-sentence
       :snt1 (c42-4 / recommend-01
                    :ARG1 (c42-0 / or
                                 :op1 (c42-11 / abolish-01
                                              :ARG1 (c42-10 / it))
                                 :op2 (c42-12 / amend-01
                                              :ARG1 c42-10)
                                 :mod (c42-8 / at-least)))
       :snt2 (c42-6 / possible-01
                    :ARG1 (c42-2 / point-04
                                 :ARG0 (c42-5 / he)
                                 :ARG1 (c42-9 / that)))
       :snt3 (c42-15 / possible-01
                     :ARG1 (c42-14 / result-01
                                   :ARG1 (c42-7 / convict-01
                                                :ARG2 (c42-16 / criminal-03))
                                   :ARG2 (c42-3 / slavery)
                                   :polarity (c42-13 / amr-unknown))))

# ::snt Kanye must be off his meds.
# ::tokens ["Kanye", "must", "be", "off", "his", "meds", "."]
# ::lemmas ["Kanye", "must", "be", "off", "his", "med", "."]
(c43-4 / infer-01
       :ARG1 (c43-0 / off
                    :op1 (c43-2 / medication
                                :poss (c43-3 / person
                                             :name (c43-1 / name
                                                          :op1 "Kanye")
                                             :domain-of c43-0))))

# ::snt No, I couldnt deal with that. I dont know how anyone understands what he is trying to say. It doesnt seem coherent to me.
# ::tokens ["No", ",", "I", "could", "nt", "deal", "with", "that", ".", "I", "do", "nt", "know", "how", "anyone", "understands", "what", "he", "is", "trying", "to", "say", ".", "It", "does", "nt", "seem", "coherent", "to", "me", "."]
# ::lemmas ["no", ",", "i", "could", "not", "deal", "with", "that", ".", "i", "do", "not", "know", "how", "anyone", "understand", "what", "he", "be", "try", "to", "say", ".", "it", "do", "not", "seem", "coherent", "to", "i", "."]
(c44-1 / multi-sentence
       :snt1 (c44-7 / possible-01
                    :ARG1 (c44-13 / deal-01
                                  :ARG0 (c44-10 / i)
                                  :ARG2 (c44-11 / that))
                    :polarity -)
       :snt2 (c44-8 / know-01
                    :ARG0 (c44-3 / i)
                    :ARG1 (c44-16 / thing
                                  :manner-of (c44-15 / understand-01
                                                     :ARG0 (c44-4 / anyone)
                                                     :ARG1 (c44-12 / thing
                                                                   :ARG1-of (c44-2 / say-01
                                                                                   :ARG0 (c44-6 / he)
                                                                                   :ARG1-of (c44-5 / try-01
                                                                                                   :ARG0 c44-6)))))
                    :polarity -)
       :snt3 (c44-0 / seem-01
                    :ARG1 (c44-9 / cohere-01
                                 :ARG1 (c44-14 / it))
                    :ARG2 c44-3
                    :polarity -))

# ::snt No
# ::tokens ["No"]
# ::lemmas ["no"]
(c45-0 / no)

# ::snt The way Kanye was before Kim got married to him .. should have been enough.... she should have seen it
# ::tokens ["The", "way", "Kanye", "was", "before", "Kim", "got", "married", "to", "him", "..", "should", "have", "been", "enough", "....", "she", "should", "have", "seen", "it"]
# ::lemmas ["the", "way", "Kanye", "be", "before", "Kim", "get", "married", "to", "he", "..", "should", "have", "be", "enough", "....", "she", "should", "have", "see", "it"]
(c46-12 / and
        :op1 (c46-6 / recommend-01
                    :ARG1 (c46-11 / way
                                  :manner-of (c46-9 / person
                                                    :name (c46-2 / name
                                                                 :op1 "Kanye")
                                                    :time (c46-1 / before
                                                                 :op1 (c46-3 / marry-01
                                                                             :ARG1 (c46-4 / person
                                                                                          :name (c46-8 / name
                                                                                                       :op1 "Kim"))
                                                                             :ARG2 c46-9)))
                                  :ARG1-of (c46-10 / have-quant-91
                                                   :ARG3 (c46-7 / enough))))
        :op2 (c46-13 / recommend-01
                     :ARG1 (c46-5 / see-01
                                  :ARG0 (c46-0 / she)
                                  :ARG1 c46-11)))

# ::snt Absolute no
# ::tokens ["Absolute", "no"]
# ::lemmas ["absolute", "no"]
(c47-0 / no
       :mod (c47-1 / absolute))

# ::snt Geeezwhat about Sharon Oz!! Lol . Ozzy is a saint.
# ::tokens ["Geeezwhat", "about", "Sharon", "Oz", "!", "!", "Lol", ".", "Ozzy", "is", "a", "saint", "."]
# ::lemmas ["geeezwhat", "about", "Sharon", "Oz", "!", "!", "Lol", ".", "Ozzy", "be", "a", "saint", "."]
(c48-1 / multi-sentence
       :snt1 (c48-5 / person
                    :name (c48-0 / name
                                 :op1 "Sharon"
                                 :op2 "Oz")
                    :mod (c48-8 / geeez
                                :mode expressive)
                    :mode expressive)
       :snt2 (c48-2 / saint
                    :domain (c48-3 / person
                                   :name (c48-4 / name
                                                :op1 "Ozzy")))
       :snt3 (c48-6 / laugh-01
                    :ARG0 (c48-7 / i)
                    :manner (c48-9 / loud)
                    :mode expressive))

# ::snt I would rather die than be married to him
# ::tokens ["I", "would", "rather", "die", "than", "be", "married", "to", "him"]
# ::lemmas ["i", "would", "rather", "die", "than", "be", "married", "to", "he"]
(c49-2 / prefer-01
       :ARG0 (c49-3 / i)
       :ARG1 (c49-4 / die-01
                    :ARG1 c49-3)
       :ARG2 (c49-0 / marry-01
                    :ARG1 c49-3
                    :ARG2 (c49-1 / he)))

# ::snt Hes full of shit but great at marketing- he didnt want competition on sept with Waynes album dropping - obvi
# ::tokens ["He", "s", "full", "of", "shit", "but", "great", "at", "marketing-", "he", "did", "nt", "want", "competition", "on", "sept", "with", "Waynes", "album", "dropping", "-", "obvi"]
# ::lemmas ["he", "s", "full", "of", "shit", "but", "great", "at", "marketing-", "he", "do", "not", "want", "competition", "on", "sept", "with", "Waynes", "album", "dropping", "-", "obvi"]
(c50-3 / multi-sentence
       :snt1 (c50-9 / contrast-01
                    :ARG1 (c50-0 / fill-01
                                 :ARG1 (c50-6 / he)
                                 :ARG2 (c50-5 / shit))
                    :ARG2 (c50-14 / great
                                  :domain c50-6
                                  :topic (c50-7 / market-01)))
       :snt2 (c50-10 / want-01
                     :ARG0 (c50-11 / he)
                     :ARG1 (c50-16 / compete-01
                                   :location (c50-1 / sept))
                     :ARG1-of (c50-12 / cause-01
                                      :ARG0 (c50-15 / drop-05
                                                    :ARG1 (c50-13 / album
                                                                  :poss (c50-8 / person
                                                                               :name (c50-4 / name
                                                                                            :op1 "Waynes")))))
                     :ARG1-of (c50-2 / obvious-01)
                     :polarity -))
