# ::snt Jax you need to grow up. Your fourty years old and act like your in high school. You are so jealous of other people and it is so apparent.
# ::tokens ["Jax", "you", "need", "to", "grow", "up", ".", "Your", "fourty", "years", "old", "and", "act", "like", "your", "in", "high", "school", ".", "You", "are", "so", "jealous", "of", "other", "people", "and", "it", "is", "so", "apparent", "."]
# ::lemmas ["Jax", "you", "need", "to", "grow", "up", ".", "your", "fourty", "years", "old", "and", "act", "like", "your", "in", "high", "school", ".", "you", "be", "so", "jealous", "of", "other", "people", "and", "it", "be", "so", "apparent", "."]
(c1-15 / multi-sentence
       :snt1 (c1-0 / say-01
                   :ARG0 (c1-24 / i)
                   :ARG1 (c1-18 / need-01
                                :ARG0 (c1-21 / person
                                             :name (c1-17 / name
                                                          :op1 "Jax"))
                                :ARG1 (c1-13 / grow-up-04
                                             :ARG1 c1-21))
                   :ARG2 c1-21)
       :snt2 (c1-12 / and
                    :op1 (c1-10 / age-01
                                :ARG1 (c1-5 / you)
                                :ARG2 (c1-11 / temporal-quantity
                                             :unit (c1-14 / year)
                                             :quant 4))
                    :op2 (c1-8 / act-01
                               :ARG0 c1-5
                               :ARG1 (c1-22 / way
                                            :ARG1-of (c1-20 / resemble-01
                                                            :ARG2 (c1-2 / you
                                                                        :location (c1-7 / high-school))))))
       :snt3 (c1-25 / and
                    :op1 (c1-9 / jealous-02
                               :ARG0 (c1-19 / you)
                               :ARG1 (c1-16 / person
                                            :mod (c1-3 / other))
                               :degree (c1-4 / so))
                    :op2 (c1-23 / appear-02
                                :ARG1 (c1-6 / it)
                                :degree (c1-1 / so))))

# ::snt how come James can't drink but Jax can do drugs at work? time to start testing Lisa
# ::tokens ["how", "come", "James", "ca", "n't", "drink", "but", "Jax", "can", "do", "drugs", "at", "work", "?", "time", "to", "start", "testing", "Lisa"]
# ::lemmas ["how", "come", "James", "can", "not", "drink", "but", "Jax", "can", "do", "drug", "at", "work", "?", "time", "to", "start", "test", "Lisa"]
(c2-7 / multi-sentence
      :snt1 (c2-11 / cause-01
                   :ARG0 (c2-5 / amr-unknown)
                   :ARG1 (c2-6 / contrast-01
                               :ARG1 (c2-15 / possible-01
                                            :ARG1 (c2-18 / drink-01
                                                         :ARG0 (c2-8 / person
                                                                     :name (c2-14 / name
                                                                                  :op1 "James")))
                                            :polarity -)
                               :ARG2 (c2-2 / possible-01
                                           :ARG1 (c2-12 / do-02
                                                        :ARG0 (c2-1 / person
                                                                    :name (c2-9 / name
                                                                                :op1 "Jax"))
                                                        :ARG1 (c2-10 / drug)
                                                        :location (c2-17 / work)))))
      :snt2 (c2-4 / time
                  :time-of (c2-0 / start-01
                                 :ARG1 (c2-13 / test-01
                                              :ARG1 (c2-3 / person
                                                          :name (c2-16 / name
                                                                       :op1 "Lisa"))))))

# ::snt Jaxs best quality is lying
# ::tokens ["Jaxs", "best", "quality", "is", "lying"]
# ::lemmas ["Jaxs", "good", "quality", "be", "lie"]
(c3-4 / lie-08
      :ARG0 (c3-3 / product
                  :name (c3-0 / name
                              :op1 "Jax"))
      :domain (c3-5 / quality
                    :ARG1-of (c3-2 / have-degree-91
                                   :ARG2 (c3-6 / good-02
                                               :ARG1 c3-5)
                                   :ARG3 (c3-1 / most))))

# ::snt I personally think hes full of shit. If theres an offer its at the admin level at best. What qualifications does he have to be a marketing / PR / social media manager or w/e he claimed his title to be?
# ::tokens ["I", "personally", "think", "he", "s", "full", "of", "shit", ".", "If", "there", "s", "an", "offer", "its", "at", "the", "admin", "level", "at", "best", ".", "What", "qualifications", "does", "he", "have", "to", "be", "a", "marketing", "/", "PR", "/", "social", "media", "manager", "or", "w", "/", "e", "he", "claimed", "his", "title", "to", "be", "?"]
# ::lemmas ["i", "personally", "think", "he", "s", "full", "of", "shit", ".", "if", "there", "s", "an", "offer", "its", "at", "the", "admin", "level", "at", "well", ".", "what", "qualification", "do", "he", "have", "to", "be", "a", "marketing", "/", "pr", "/", "social", "medium", "manager", "or", "w", "/", "e", "he", "claim", "his", "title", "to", "be", "?"]
(c4-14 / multi-sentence
       :snt1 (c4-11 / think-01
                    :ARG0 (c4-22 / i)
                    :ARG1 (c4-19 / fill-01
                                 :ARG1 (c4-6 / he)
                                 :ARG2 (c4-0 / shit))
                    :ARG1-of (c4-20 / personal-02))
       :snt2 (c4-21 / have-condition-91
                    :ARG1 (c4-3 / offer-01
                                :location (c4-1 / level
                                                :mod (c4-12 / government-organization
                                                            :ARG0-of (c4-10 / administrate-01)))
                                :mod (c4-9 / at-best)
                                :ARG2-of c4-21))
       :snt3 (c4-13 / qualify-02
                    :ARG1 (c4-5 / he)
                    :ARG2 (c4-8 / amr-choice
                                :op1 (c4-4 / slash
                                           :op1 (c4-7 / market-01)
                                           :op2 (c4-15 / PR)
                                           :op3 (c4-18 / media
                                                       :mod (c4-2 / social)))
                                :op2 (c4-16 / claim-01
                                            :ARG0 c4-5
                                            :ARG1 (c4-17 / title
                                                         :poss c4-5)))))

# ::snt Not a very smart guy!
# ::tokens ["Not", "a", "very", "smart", "guy", "!"]
# ::lemmas ["not", "a", "very", "smart", "guy", "!"]
(c5-0 / guy
      :ARG1-of (c5-2 / smart-06
                     :degree (c5-1 / very))
      :polarity -)

# ::snt I'm happy for him
# ::tokens ["I", "'m", "happy", "for", "him"]
# ::lemmas ["i", "be", "happy", "for", "he"]
(c6-1 / happy-01
      :ARG0 (c6-0 / he)
      :ARG1 (c6-2 / i))

# ::snt Him a liar? No way lol
# ::tokens ["Him", "a", "liar", "?", "No", "way", "lol"]
# ::lemmas ["he", "a", "liar", "?", "no", "way", "lol"]
(c7-0 / multi-sentence
      :snt1 (c7-2 / person
                  :polarity (c7-7 / amr-unknown)
                  :ARG0-of (c7-3 / lie-08)
                  :domain (c7-1 / he))
      :snt2 (c7-5 / way
                  :mod (c7-8 / laugh-01
                             :ARG0 (c7-6 / i)
                             :manner (c7-4 / loud)
                             :mode expressive)
                  :polarity -))
