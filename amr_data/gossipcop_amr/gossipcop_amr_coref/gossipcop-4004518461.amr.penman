# ::snt Give them some privacy instead of analyzing their every move. Geez!!
# ::tokens ["Give", "them", "some", "privacy", "instead", "of", "analyzing", "their", "every", "move", ".", "Geez", "!", "!"]
# ::lemmas ["give", "they", "some", "privacy", "instead", "of", "analyze", "their", "every", "move", ".", "Geez", "!", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-10 / give-01
                   :ARG0 (c1-0 / you)
                   :ARG1 (c1-6 / private-02
                               :quant (c1-2 / some))
                   :ARG2 (c1-9 / they)
                   :ARG1-of (c1-8 / instead-of-91
                                  :ARG2 (c1-3 / analyze-01
                                              :ARG0 c1-0
                                              :ARG1 (c1-5 / move-02
                                                          :ARG0 c1-9
                                                          :mod (c1-4 / every))
                                              :mode imperative))
                   :mode imperative)
      :snt2 (c1-7 / jeez
                  :mode expressive))

# ::snt At least he didn't cheat with a tranny. Sorry just had to.
# ::tokens ["At", "least", "he", "did", "n't", "cheat", "with", "a", "tranny", ".", "Sorry", "just", "had", "to", "."]
# ::lemmas ["at", "least", "he", "do", "not", "cheat", "with", "a", "tranny", ".", "sorry", "just", "have", "to", "."]
(c2-1 / multi-sentence
      :snt1 (c2-4 / cheat-03
                  :ARG0 (c2-3 / he)
                  :ARG3 (c2-6 / tranny)
                  :mod (c2-8 / at-least)
                  :polarity -)
      :snt2 (c2-2 / sorry-01
                  :ARG1 (c2-7 / i)
                  :ARG2 (c2-0 / obligate-01
                              :ARG1 (c2-5 / he)
                              :mod (c2-9 / just))))

# ::snt he is not marriage material too immature
# ::tokens ["he", "is", "not", "marriage", "material", "too", "immature"]
# ::lemmas ["he", "be", "not", "marriage", "material", "too", "immature"]
(c3-2 / have-degree-91
      :ARG1 (c3-3 / he)
      :ARG2 (c3-0 / mature-02
                  :ARG1 c3-3
                  :ARG2 (c3-1 / marry-01)
                  :polarity -)
      :ARG3 (c3-4 / too))

# ::snt you ever think that they want to be left alone?!?
# ::tokens ["you", "ever", "think", "that", "they", "want", "to", "be", "left", "alone", "?", "!", "?"]
# ::lemmas ["you", "ever", "think", "that", "they", "want", "to", "be", "leave", "alone", "?", "!", "?"]
(c4-4 / think-01
      :polarity (c4-6 / amr-unknown)
      :ARG0 (c4-0 / you)
      :ARG1 (c4-3 / want-01
                  :ARG0 (c4-7 / they)
                  :ARG1 (c4-2 / leave-14
                              :ARG1 c4-7
                              :ARG2 (c4-5 / alone
                                          :domain c4-7)))
      :time (c4-1 / ever))

# ::snt who breaks up and goes on a trip together after ... Thats crazy in my mind
# ::tokens ["who", "breaks", "up", "and", "goes", "on", "a", "trip", "together", "after", "...", "That", "s", "crazy", "in", "my", "mind"]
# ::lemmas ["who", "break", "up", "and", "go", "on", "a", "trip", "together", "after", "...", "that", "s", "crazy", "in", "my", "mind"]
(c5-2 / crazy-03
      :ARG1 (c5-6 / and
                  :op1 (c5-0 / break-up-08
                             :ARG1 (c5-5 / amr-unknown))
                  :op2 (c5-7 / go-02
                             :ARG0 c5-5
                             :ARG1 (c5-4 / trip-03
                                         :ARG0 c5-5
                                         :accompanier (c5-3 / amr-unknown))
                             :time (c5-8 / after)))
      :location (c5-1 / mind
                      :part-of (c5-9 / i)))

# ::snt Dez dropped it.
# ::tokens ["Dez", "dropped", "it", "."]
# ::lemmas ["Dez", "drop", "it", "."]
(c6-0 / drop-05
      :ARG0 (c6-2 / person
                  :name (c6-1 / name
                              :op1 "Dez"))
      :ARG1 (c6-3 / it))

# ::snt Maybe it was just a tense neighborhood block party.
# ::tokens ["Maybe", "it", "was", "just", "a", "tense", "neighborhood", "block", "party", "."]
# ::lemmas ["maybe", "it", "be", "just", "a", "tense", "neighborhood", "block", "party", "."]
(c7-3 / possible-01
      :ARG1 (c7-2 / party-01
                  :mod (c7-0 / block)
                  :location (c7-1 / neighborhood)
                  :ARG0-of (c7-5 / tense-03)
                  :mod (c7-4 / just)))

# ::snt Do you want to send Ben Affleck a personal message go to and search USA people for free.
# ::tokens ["Do", "you", "want", "to", "send", "Ben", "Affleck", "a", "personal", "message", "go", "to", "and", "search", "USA", "people", "for", "free", "."]
# ::lemmas ["do", "you", "want", "to", "send", "Ben", "Affleck", "a", "personal", "message", "go", "to", "and", "search", "USA", "people", "for", "free", "."]
(c8-9 / want-01
      :ARG0 (c8-2 / you)
      :ARG1 (c8-5 / send-01
                  :ARG0 c8-2
                  :ARG1 (c8-3 / message-01
                              :ARG1 (c8-12 / and
                                           :op1 (c8-13 / go-02
                                                       :ARG0 (c8-8 / person
                                                                   :name (c8-4 / name
                                                                               :op1 "Ben"
                                                                               :op2 "Affleck"))
                                                       :ARG4 (c8-10 / country
                                                                    :name (c8-7 / name
                                                                                :op1 "USA")))
                                           :op2 (c8-0 / search-01
                                                      :ARG0 c8-8
                                                      :ARG1 (c8-6 / person
                                                                  :mod c8-10)
                                                      :ARG1-of (c8-1 / free-03)))
                              :ARG2 c8-8
                              :ARG1-of (c8-14 / personal-02))
                  :ARG2 c8-8)
      :polarity (c8-11 / amr-unknown))

# ::snt The person says Ben didn't leave Jen because of the other woman- they had a ton of other problems, seems like saying Jen was to blame.
# ::tokens ["The", "person", "says", "Ben", "did", "n't", "leave", "Jen", "because", "of", "the", "other", "woman-", "they", "had", "a", "ton", "of", "other", "problems", ",", "seems", "like", "saying", "Jen", "was", "to", "blame", "."]
# ::lemmas ["the", "person", "say", "Ben", "do", "not", "leave", "Jen", "because", "of", "the", "other", "woman-", "they", "have", "a", "ton", "of", "other", "problem", ",", "seem", "like", "say", "Jen", "be", "to", "blame", "."]
(c9-9 / and
      :op1 (c9-0 / say-01
                 :ARG0 (c9-17 / person)
                 :ARG1 (c9-1 / leave-15
                             :ARG0 (c9-12 / person
                                          :name (c9-16 / name
                                                       :op1 "Ben"))
                             :ARG1 (c9-3 / person
                                         :name (c9-13 / name
                                                      :op1 "Jen"))
                             :ARG1-of (c9-14 / cause-01
                                             :ARG0 (c9-18 / woman
                                                          :mod (c9-5 / other)))
                             :polarity -))
      :op2 (c9-7 / have-03
                 :ARG0 (c9-8 / they)
                 :ARG1 (c9-2 / problem
                             :mod (c9-10 / other)
                             :quant (c9-15 / ton)))
      :op3 (c9-6 / seem-01
                 :ARG1 (c9-4 / say-01
                             :ARG1 (c9-11 / blame-01
                                          :ARG1 c9-3))))

# ::snt He ended his marriage and ruined his family because he lacked loyalty and in the end he'll know that it was over nothing. Very sad.
# ::tokens ["He", "ended", "his", "marriage", "and", "ruined", "his", "family", "because", "he", "lacked", "loyalty", "and", "in", "the", "end", "he", "'ll", "know", "that", "it", "was", "over", "nothing", ".", "Very", "sad", "."]
# ::lemmas ["he", "end", "his", "marriage", "and", "ruin", "his", "family", "because", "he", "lack", "loyalty", "and", "in", "the", "end", "he", "'ll", "know", "that", "it", "be", "over", "nothing", ".", "very", "sad", "."]
(c10-2 / multi-sentence
       :snt1 (c10-15 / and
                     :op1 (c10-7 / end-01
                                 :ARG0 (c10-9 / he)
                                 :ARG1 (c10-8 / marry-01
                                              :ARG1 c10-9))
                     :op2 (c10-5 / ruin-01
                                 :ARG0 c10-9
                                 :ARG1 (c10-0 / family
                                              :poss c10-9)
                                 :ARG1-of (c10-12 / cause-01
                                                  :ARG0 (c10-10 / lack-01
                                                                :ARG0 c10-9
                                                                :ARG1 (c10-17 / loyal-01
                                                                              :ARG1 c10-9)))))
       :snt2 (c10-11 / know-01
                     :ARG0 (c10-13 / he)
                     :ARG1 (c10-1 / over-01
                                  :ARG1 (c10-14 / it)
                                  :ARG2 (c10-3 / nothing))
                     :time (c10-16 / end-01))
       :snt3 (c10-4 / sad-02
                    :degree (c10-6 / very)))

# ::snt He will regret it in the long run because how he got the other woman is how he'll lose her!!
# ::tokens ["He", "will", "regret", "it", "in", "the", "long", "run", "because", "how", "he", "got", "the", "other", "woman", "is", "how", "he", "'ll", "lose", "her", "!", "!"]
# ::lemmas ["he", "will", "regret", "it", "in", "the", "long", "run", "because", "how", "he", "get", "the", "other", "woman", "be", "how", "he", "'ll", "lose", "she", "!", "!"]
(c11-1 / regret-01
       :ARG0 (c11-2 / he)
       :ARG1 (c11-6 / it)
       :time (c11-9 / run-13
                    :ARG1-of (c11-3 / long-03))
       :ARG1-of (c11-4 / cause-01
                       :ARG0 (c11-7 / thing
                                    :manner-of (c11-8 / get-01
                                                      :ARG0 c11-2
                                                      :ARG1 (c11-5 / woman
                                                                   :mod (c11-0 / other)))
                                    :domain (c11-11 / thing
                                                    :manner-of (c11-10 / lose-02
                                                                       :ARG0 c11-2
                                                                       :ARG1 c11-5)))))

# ::snt To be fair, if I had a camera pointing at me every time I left the house, I'd be pretty tense too.
# ::tokens ["To", "be", "fair", ",", "if", "I", "had", "a", "camera", "pointing", "at", "me", "every", "time", "I", "left", "the", "house", ",", "I", "'d", "be", "pretty", "tense", "too", "."]
# ::lemmas ["to", "be", "fair", ",", "if", "i", "have", "a", "camera", "pointing", "at", "i", "every", "time", "i", "leave", "the", "house", ",", "i", "would", "be", "pretty", "tense", "too", "."]
(c12-9 / tense-03
       :ARG1 (c12-10 / i)
       :mod (c12-11 / too)
       :degree (c12-5 / pretty)
       :condition (c12-4 / have-03
                         :ARG0 c12-10
                         :ARG1 (c12-1 / point-01
                                      :ARG0 (c12-7 / camera)
                                      :ARG2 c12-10
                                      :time (c12-6 / leave-11
                                                   :ARG0 c12-10
                                                   :ARG1 (c12-8 / house))
                                      :frequency (c12-2 / rate-entity-91
                                                        :ARG4 (c12-12 / time
                                                                      :mod (c12-3 / every)))))
       :ARG1-of (c12-0 / fair-04))

# ::snt strong smart acting pro who eazily hides true emotions NEVER upset in public. DM criminals fabricating lies as usu.
# ::tokens ["strong", "smart", "acting", "pro", "who", "eazily", "hides", "true", "emotions", "NEVER", "upset", "in", "public", ".", "DM", "criminals", "fabricating", "lies", "as", "usu", "."]
# ::lemmas ["strong", "smart", "act", "pro", "who", "eazily", "hide", "true", "emotion", "NEVER", "upset", "in", "public", ".", "DM", "criminal", "fabricate", "lie", "as", "usu", "."]
(c14-8 / multi-sentence
       :snt1 (c14-18 / person
                     :ARG0-of (c14-6 / act-01)
                     :ARG1-of (c14-0 / strong-02)
                     :ARG0-of c14-6)
       :ARG0-of (c14-4 / hide-01
                       :ARG1 (c14-17 / emotion
                                     :ARG1-of (c14-5 / true-01))
                       :manner (c14-7 / easy-05))
       :ARG1-of (c14-13 / upset-01
                        :location (c14-9 / public)
                        :time (c14-10 / ever)
                        :polarity -)
       :snt2 (c14-3 / person
                    :ARG2-of (c14-11 / criminal-03)
                    :ARG0-of (c14-14 / fabricate-01
                                     :ARG1 (c14-12 / thing
                                                   :ARG1-of (c14-1 / lie-08))
                                     :ARG1-of (c14-16 / resemble-01
                                                      :ARG2 (c14-2 / person
                                                                   :name (c14-15 / name
                                                                                 :op1 "Usu"))))
                    :ARG2-of (c14-19 / DM-01)))

# ::snt Beatle Bob's Must Reading List For The Month Of July: Hot Rod Magazine
# ::tokens ["Beatle", "Bob", "'s", "Must", "Reading", "List", "For", "The", "Month", "Of", "July", ":", "Hot", "Rod", "Magazine"]
# ::lemmas ["Beatle", "Bob", "'s", "must", "read", "List", "for", "the", "Month", "of", "July", ":", "Hot", "Rod", "Magazine"]
(c15-7 / publication
       :name (c15-2 / name
                    :op1 "Hot"
                    :op2 "Rod"
                    :op3 "Magazine")
       :ARG1-of (c15-1 / mean-01
                       :ARG2 (c15-3 / publication
                                    :name (c15-6 / name
                                                 :op1 "Beatle"
                                                 :op2 "Bob")
                                    :ARG0-of (c15-8 / have-org-role-91
                                                    :ARG2 (c15-5 / editor))))
       :topic (c15-10 / thing
                      :ARG2-of (c15-9 / list-01
                                      :ARG1 (c15-4 / read-01
                                                   :ARG1-of (c15-0 / obligate-01)))
                      :time (c15-11 / date-entity
                                    :month 7)))

# ::snt :|
# ::tokens [":|"]
# ::lemmas [":|"]
(c16-0 / string-entity
       :value ":")

# ::snt a ternit la rputation de Benben alors je prfre pas y croire
# ::tokens ["a", "ternit", "la", "rputation", "de", "Benben", "alors", "je", "prfre", "pas", "y", "croire"]
# ::lemmas ["a", "ternit", "la", "rputation", "de", "Benben", "alors", "je", "prfre", "pas", "y", "croire"]
(c17-2 / multi-sentence
       :snt1 (c17-8 / try-02
                    :ARG1 (c17-6 / person
                                 :name (c17-1 / name
                                              :op1 "Benben"))
                    :mod (c17-10 / ternit)
                    :mod (c17-5 / rputation))
       :snt2 (c17-3 / say-01
                    :ARG0 (c17-9 / i)
                    :ARG1 (c17-4 / prfre
                                 :mode expressive)
                    :ARG2 (c17-0 / you
                                 :mod (c17-7 / croire))))

# ::snt c'est priv dsole u.u
# ::tokens ["c'est", "priv", "dsole", "u.u"]
# ::lemmas ["c'", "priv", "dsole", "u.u"]
(c18-2 / have-polarity-91
       :ARG1-of (c18-0 / obvious-01)
       :mod (c18-1 / u.u)
       :ARG2 -)

# ::snt tu rves, y a trop de problmes dans leur vie
# ::tokens ["tu", "rves", ",", "y", "a", "trop", "de", "problmes", "dans", "leur", "vie"]
# ::lemmas ["tu", "rves", ",", "y", "a", "trop", "de", "problme", "dans", "leur", "vie"]
(c19-0 / multi-sentence
       :snt1 (c19-3 / et-cetera
                    :polarity (c19-1 / amr-unknown))
       :snt2 (c19-9 / et-cetera
                    :op1 (c19-8 / trop)
                    :op2 (c19-4 / problmes)
                    :polarity (c19-7 / amr-unknown)
                    :ARG1-of (c19-5 / cause-01
                                    :ARG0 (c19-6 / amr-unknown))
                    :polarity -)
       :snt3 (c19-2 / vie-01))

# ::snt c'est tendu
# ::tokens ["c'est", "tendu"]
# ::lemmas ["c'", "tendu"]
(c20-1 / tendu
       :degree (c20-0 / c'est))

# ::snt I Agree They Sure Do!!!!!
# ::tokens ["I", "Agree", "They", "Sure", "Do", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "agree", "they", "sure", "do", "!", "!", "!", "!", "!"]
(c21-1 / agree-01
       :ARG0 (c21-2 / i)
       :ARG1 (c21-4 / do-02
                    :ARG0 (c21-3 / they)
                    :ARG1-of (c21-0 / sure-02)))

# ::snt of course they do. Lol
# ::tokens ["of", "course", "they", "do", ".", "Lol"]
# ::lemmas ["of", "course", "they", "do", ".", "Lol"]
(c22-1 / multi-sentence
       :snt1 (c22-5 / do-02
                    :ARG0 (c22-4 / they)
                    :mod (c22-0 / of-course))
       :snt2 (c22-2 / laugh-01
                    :ARG0 (c22-3 / i)
                    :manner (c22-6 / loud)
                    :mode expressive))

# ::snt They play Seal "Kiss from a Rose" and the marriage is saved!...
# ::tokens ["They", "play", "Seal", "\"", "Kiss", "from", "a", "Rose", "\"", "and", "the", "marriage", "is", "saved", "!", "..."]
# ::lemmas ["they", "play", "Seal", "\"", "Kiss", "from", "a", "Rose", "\"", "and", "the", "marriage", "be", "save", "!", "..."]
(c23-3 / and
       :op1 (c23-5 / play-01
                   :ARG0 (c23-6 / they)
                   :ARG1 (c23-0 / music
                                :name (c23-1 / name
                                             :op1 "Seal"
                                             :op2 "Kiss"
                                             :op3 "from"
                                             :op4 "a"
                                             :op5 "Rose")))
       :op2 (c23-2 / save-02
                   :ARG1 (c23-4 / marry-01)))

# ::snt They just announced publicly that they are getting divorced. I doubt they are all happy go lucky
# ::tokens ["They", "just", "announced", "publicly", "that", "they", "are", "getting", "divorced", ".", "I", "doubt", "they", "are", "all", "happy", "go", "lucky"]
# ::lemmas ["they", "just", "announce", "publicly", "that", "they", "be", "get", "divorce", ".", "i", "doubt", "they", "be", "all", "happy", "go", "lucky"]
(c24-0 / multi-sentence
       :snt1 (c24-2 / announce-01
                    :ARG0 (c24-9 / they)
                    :ARG1 (c24-11 / divorce-01
                                  :ARG0 c24-9)
                    :ARG1-of (c24-4 / public-02)
                    :time (c24-7 / just))
       :snt2 (c24-6 / doubt-01
                    :ARG0 (c24-8 / i)
                    :ARG1 (c24-3 / happy-01
                                 :ARG1 (c24-12 / they
                                               :mod (c24-10 / all))
                                 :mod (c24-1 / go-05
                                             :ARG0 c24-12
                                             :ARG1 (c24-5 / lucky)))))

# ::snt They all had no problems when they were raking in the CASH, doing whatever to advance their careers, but NOW it's an issue. WHORES...fuckem!
# ::tokens ["They", "all", "had", "no", "problems", "when", "they", "were", "raking", "in", "the", "CASH", ",", "doing", "whatever", "to", "advance", "their", "careers", ",", "but", "NOW", "it", "'s", "an", "issue", ".", "WHORES", "...", "fuckem", "!"]
# ::lemmas ["you", "all", "have", "no", "problem", "when", "they", "be", "rake", "in", "the", "cash", ",", "do", "whatever", "to", "advance", "their", "career", ",", "but", "now", "it", "be", "an", "issue", ".", "WHORES", "...", "fuckem", "!"]
(c25-0 / multi-sentence
       :snt1 (c25-7 / contrast-01
                    :ARG1 (c25-4 / have-03
                                 :ARG0 (c25-11 / they
                                               :mod (c25-13 / all))
                                 :ARG1 (c25-5 / problem)
                                 :time (c25-12 / and
                                               :op1 (c25-3 / rake-in-02
                                                           :ARG0 c25-11
                                                           :ARG1 (c25-16 / cash))
                                               :op2 (c25-15 / do-02
                                                            :ARG0 c25-11
                                                            :ARG1 (c25-8 / whatever)
                                                            :purpose (c25-9 / advance-01
                                                                            :ARG0 c25-11
                                                                            :ARG1 (c25-10 / career
                                                                                          :poss c25-11))))
                                 :polarity -)
                    :ARG2 (c25-14 / issue-02
                                  :ARG0 (c25-2 / it)
                                  :time (c25-1 / now)))
       :snt2 (c25-6 / whem
                    :mode expressive))

# ::snt GOOMBYE !!!!
# ::tokens ["GOOMBYE", "!", "!", "!", "!"]
# ::lemmas ["GOOMBYE", "!", "!", "!", "!"]
(c26-0 / cheer-on-04
       :mode expressive)

# ::snt THOSE ARE MEN BAAAABY! JUST LIKE REESE "DON'T YOU KNOW WHO IAM" DRUNKEN WITHERSPOON. NOW SHE WAS SEXUALLY ASSAULTED NUMEROUS TIMES SINCE !
# ::tokens ["THOSE", "ARE", "MEN", "BAAAABY", "!", "JUST", "LIKE", "REESE", "\"", "DON'T", "YOU", "KNOW", "WHO", "IAM", "\"", "DRUNKEN", "WITHERSPOON", ".", "NOW", "SHE", "WAS", "SEXUALLY", "ASSAULTED", "NUMEROUS", "TIMES", "SINCE", "!"]
# ::lemmas ["those", "be", "MEN", "BAAAABY", "!", "just", "like", "REESE", "\"", "don't", "you", "know", "who", "IAM", "\"", "DRUNKEN", "WITHERSPOON", ".", "now", "SHE", "be", "sexually", "ASSAULTED", "NUMEROUS", "TIMES", "since", "!"]
(c27-11 / multi-sentence
        :snt1 (c27-5 / man
                     :domain (c27-8 / they)
                     :mod (c27-10 / bah
                                  :mode expressive))
        :snt2 (c27-18 / run-16
                      :ARG0 (c27-20 / person
                                    :ARG1-of (c27-16 / mean-01
                                                     :ARG2 (c27-0 / say-01
                                                                  :ARG0 (c27-12 / person
                                                                                :mod (c27-14 / country
                                                                                             :name (c27-17 / name
                                                                                                           :op1 "France")))
                                                                  :ARG1 (c27-6 / know-01
                                                                               :ARG0 (c27-4 / you)
                                                                               :ARG1 (c27-2 / person
                                                                                            :domain (c27-22 / i))
                                                                               :polarity -))))
                      :ARG2 (c27-1 / person
                                   :name c27-17
                                   :op1 "Ron"))
        :mod (c27-7 / just)
        :snt3 (c27-19 / equal-01
                      :ARG1 (c27-3 / she)
                      :ARG2 (c27-15 / time
                                    :quant (c27-13 / numerous))
                      :mod (c27-9 / exact)
                      :time (c27-21 / now)
                      :mode expressive))

# ::snt give the poor woman a break.
# ::tokens ["give", "the", "poor", "woman", "a", "break", "."]
# ::lemmas ["give", "the", "poor", "woman", "a", "break", "."]
(c28-4 / give-01
       :ARG0 (c28-1 / you)
       :ARG1 (c28-0 / break-19)
       :ARG2 (c28-3 / woman
                    :mod (c28-2 / poor))
       :mode imperative)

# ::snt Ladies hirer someone that looks like y (HAZEL for example) that young hot nanny wants to be in ur shoes &amp; have ur $$
# ::tokens ["Ladies", "hirer", "someone", "that", "looks", "like", "y", "(", "HAZEL", "for", "example", ")", "that", "young", "hot", "nanny", "wants", "to", "be", "in", "ur", "shoes", "&", "amp", ";", "have", "ur", "$", "$"]
# ::lemmas ["lady", "hirer", "someone", "that", "look", "like", "y", "(", "HAZEL", "for", "example", ")", "that", "young", "hot", "nanny", "want", "to", "be", "in", "ur", "shoe", "&", "amp", ";", "have", "ur", "$", "$"]
(c29-12 / multi-sentence
        :snt1 (c29-6 / hire-01
                     :ARG0 (c29-1 / lady)
                     :ARG1 (c29-0 / someone
                                  :ARG0-of (c29-10 / look-02
                                                   :ARG1 (c29-4 / you)
                                                   :ARG2 (c29-17 / person
                                                                 :mod (c29-14 / country
                                                                              :name (c29-15 / name
                                                                                            :op1 "Hazel"))
                                                                 :ARG0-of (c29-18 / want-01
                                                                                  :ARG1 (c29-11 / be-located-at-91
                                                                                                :ARG1 (c29-13 / nanny
                                                                                                              :mod (c29-9 / young)
                                                                                                              :ARG1-of (c29-19 / hot-05)
                                                                                                              :mod c29-9))
                                                                                  :ARG2 (c29-8 / and
                                                                                               :op1 (c29-3 / shoe
                                                                                                           :poss c29-4)
                                                                                               :op2 (c29-7 / amp
                                                                                                           :poss c29-4))))
                                                   :ARG0-of (c29-16 / exemplify-01))))
        :snt2 (c29-5 / have-03
                     :ARG0 (c29-2 / you)
                     :ARG1 (c29-20 / dollar
                                   :poss c29-2)
                     :mode imperative))
