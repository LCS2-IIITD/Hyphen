# ::snt Lucky Man!
# ::tokens ["Lucky", "Man", "!"]
# ::lemmas ["Lucky", "Man", "!"]
(c1-0 / man
      :mod (c1-1 / lucky)
      :mode expressive)

# ::snt Yes indeed. Btw if your looking for a good movie with Alicia, check out a royal affair. It's excellent.
# ::tokens ["Yes", "indeed", ".", "Btw", "if", "your", "looking", "for", "a", "good", "movie", "with", "Alicia", ",", "check", "out", "a", "royal", "affair", ".", "It", "'s", "excellent", "."]
# ::lemmas ["yes", "indeed", ".", "btw", "if", "your", "look", "for", "a", "good", "movie", "with", "Alicia", ",", "check", "out", "a", "royal", "affair", ".", "it", "be", "excellent", "."]
(c2-2 / multi-sentence
      :snt1 (c2-12 / indeed
                   :domain (c2-1 / yes))
      :snt2 (c2-11 / check-out-05
                   :ARG0 (c2-14 / you)
                   :ARG1 (c2-13 / affair-02
                                :mod (c2-6 / royal))
                   :condition (c2-9 / look-01
                                    :ARG0 c2-14
                                    :ARG1 (c2-8 / movie
                                                :ARG1-of (c2-3 / good-02)
                                                :accompanier (c2-10 / person
                                                                    :name (c2-4 / name
                                                                                :op1 "Alicia"))))
                   :mod (c2-0 / by-the-way)
                   :mode imperative)
      :snt3 (c2-7 / excellent-02
                  :ARG1 (c2-5 / it)))

# ::snt I saw earlier today! gorgeous ppl!
# ::tokens ["I", "saw", "earlier", "today", "!", "gorgeous", "ppl", "!"]
# ::lemmas ["i", "see", "earlier", "today", "!", "gorgeous", "ppl", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-3 / see-01
                  :ARG0 (c3-5 / i)
                  :time (c3-0 / before
                              :op1 (c3-1 / now))
                  :time (c3-6 / today))
      :snt2 (c3-4 / ppl
                  :mod (c3-7 / gorgeous)
                  :mode expressive))

# ::snt The babies they'll make will be beautiful! Lol
# ::tokens ["The", "babies", "they", "'ll", "make", "will", "be", "beautiful", "!", "Lol"]
# ::lemmas ["the", "baby", "they", "'ll", "make", "will", "be", "beautiful", "!", "Lol"]
(c4-0 / beautiful-02
      :ARG1 (c4-2 / baby
                  :ARG1-of (c4-1 / make-01
                                 :ARG0 (c4-4 / they)))
      :ARG2-of (c4-3 / laugh-01
                     :manner (c4-5 / loud)
                     :mode expressive))

# ::snt I thought they were already married. Hehe
# ::tokens ["I", "thought", "they", "were", "already", "married", ".", "Hehe"]
# ::lemmas ["i", "think", "they", "be", "already", "marry", ".", "hehe"]
(c5-0 / multi-sentence
      :snt1 (c5-4 / think-01
                  :ARG0 (c5-5 / i)
                  :ARG1 (c5-2 / marry-01
                              :ARG1 (c5-6 / they)
                              :time (c5-1 / already)))
      :snt2 (c5-3 / hehe
                  :mode expressive))

# ::snt be happy nothings better than a happy marriage
# ::tokens ["be", "happy", "nothings", "better", "than", "a", "happy", "marriage"]
# ::lemmas ["be", "happy", "nothing", "well", "than", "a", "happy", "marriage"]
(c6-3 / have-degree-91
      :ARG1 (c6-0 / nothing
                  :ARG1-of (c6-5 / happy-01))
      :ARG2 (c6-6 / good-02
                  :ARG1 c6-0)
      :ARG3 (c6-1 / more)
      :ARG4 (c6-4 / marry-01
                  :ARG1-of (c6-2 / happy-01)))

# ::snt Good for them
# ::tokens ["Good", "for", "them"]
# ::lemmas ["good", "for", "they"]
(c7-0 / good-04
      :ARG2 (c7-1 / they))

# ::snt Congratulations to this Beautiful Couple. May their love for one another continue to grow.
# ::tokens ["Congratulations", "to", "this", "Beautiful", "Couple", ".", "May", "their", "love", "for", "one", "another", "continue", "to", "grow", "."]
# ::lemmas ["congratulation", "to", "this", "Beautiful", "Couple", ".", "may", "their", "love", "for", "one", "another", "continue", "to", "grow", "."]
(c8-2 / multi-sentence
      :snt1 (c8-5 / congratulate-01
                  :ARG1 (c8-10 / couple
                               :mod (c8-8 / this)
                               :ARG1-of (c8-1 / beautiful-02)))
      :snt2 (c8-6 / wish-01
                  :ARG1 (c8-7 / continue-01
                              :ARG1 (c8-9 / grow-01
                                          :ARG1 (c8-4 / love-01
                                                      :ARG0 c8-10
                                                      :ARG1 (c8-3 / another
                                                                  :mod (c8-0 / one)))))))

# ::snt Congrats !
# ::tokens ["Congrats", "!"]
# ::lemmas ["Congrats", "!"]
(c9-0 / congratulate-01
      :mode expressive)

# ::snt A te soreta
# ::tokens ["A", "te", "soreta"]
# ::lemmas ["a", "te", "soreta"]
(c10-0 / soreta
       :mode expressive)

# ::snt Mai ed puoi mai
# ::tokens ["Mai", "ed", "puoi", "mai"]
# ::lemmas ["Mai", "ed", "puoi", "mai"]
(c11-3 / and
       :op1 (c11-2 / amr-unintelligible
                   :value "Mai")
       :op2 (c11-1 / amr-unintelligible
                   :value "ai")
       :op3 (c11-0 / amr-unintelligible
                   :value "ai"))

# ::snt No... she's the lucky one...
# ::tokens ["No", "...", "she", "'s", "the", "lucky", "one", "..."]
# ::lemmas ["no", "...", "she", "be", "the", "lucky", "one", "..."]
(c12-2 / multi-sentence
       :snt1 (c12-1 / no)
       :snt2 (c12-0 / one
                    :mod (c12-4 / lucky)
                    :domain (c12-3 / she)))

# ::snt She's also the lucky one.. have you seen him? He's absolutely freaking GORGEOUS
# ::tokens ["She", "'s", "also", "the", "lucky", "one", "..", "have", "you", "seen", "him", "?", "He", "'s", "absolutely", "freaking", "GORGEOUS"]
# ::lemmas ["she", "be", "also", "the", "lucky", "one", "..", "have", "you", "see", "he", "?", "he", "be", "absolutely", "freak", "GORGEOUS"]
(c13-4 / multi-sentence
       :snt1 (c13-0 / one
                    :mod (c13-7 / lucky
                                :mod (c13-11 / also))
                    :domain (c13-5 / she))
       :snt2 (c13-1 / see-01
                    :ARG0 (c13-3 / you)
                    :ARG1 (c13-6 / he)
                    :polarity (c13-10 / amr-unknown))
       :snt3 (c13-12 / gorgeous
                     :domain (c13-9 / he)
                     :mod (c13-8 / absolute)
                     :mod (c13-2 / freaking
                                 :mode expressive)))

# ::snt .. if it's true, I'm so happy for them.. they make a Gorgeous couple.. I wish them happiness and love.. lucky, lucky woman
# ::tokens ["..", "if", "it", "'s", "true", ",", "I", "'m", "so", "happy", "for", "them", "..", "they", "make", "a", "Gorgeous", "couple", "..", "I", "wish", "them", "happiness", "and", "love", "..", "lucky", ",", "lucky", "woman"]
# ::lemmas ["..", "if", "it", "be", "true", ",", "i", "be", "so", "happy", "for", "they", "..", "they", "make", "a", "gorgeous", "couple", "..", "i", "wish", "they", "happiness", "and", "love", "..", "lucky", ",", "lucky", "woman"]
(c14-0 / multi-sentence
       :snt1 (c14-6 / happy-01
                    :ARG1 (c14-14 / i)
                    :ARG2 (c14-13 / they)
                    :condition (c14-15 / true-01
                                       :ARG1 (c14-3 / it))
                    :degree (c14-2 / so))
       :snt2 (c14-7 / make-01
                    :ARG0 (c14-16 / they)
                    :ARG1 (c14-10 / couple
                                  :mod (c14-1 / gorgeous)))
       :snt3 (c14-11 / wish-01
                     :ARG0 c14-14)
       :ARG1 (c14-4 / and
                    :op1 (c14-12 / happy-01
                                 :ARG1 (c14-5 / they))
                    :op2 (c14-8 / love-01
                                :ARG1 c14-5))
       :ARG2 (c14-9 / woman
                    :mod (c14-17 / lucky
                                 :mod-of c14-9)))

# ::snt Yesssssss!
# ::tokens ["Yesssssss", "!"]
# ::lemmas ["Yesssssss", "!"]
(c16-0 / yesssss
       :mode expressive)

# ::snt Jorma. I keep following and unfollowing you let's connect
# ::tokens ["Jorma", ".", "I", "keep", "following", "and", "unfollowing", "you", "let", "'s", "connect"]
# ::lemmas ["Jorma", ".", "i", "keep", "follow", "and", "unfollowe", "you", "let", "us", "connect"]
(c17-3 / multi-sentence
       :snt1 (c17-8 / jorma)
       :snt2 (c17-4 / keep-02
                    :ARG0 (c17-9 / i)
                    :ARG1 (c17-10 / and
                                  :op1 (c17-0 / follow-02
                                              :ARG0 c17-9
                                              :ARG1 (c17-2 / you))
                                  :op2 (c17-1 / ollow-01
                                              :ARG0 c17-9
                                              :ARG1 c17-2)))
       :snt3 (c17-5 / let-01
                    :ARG0 (c17-6 / we)
                    :ARG1 (c17-7 / connect-01
                                 :ARG1 c17-6)
                    :mode imperative))

# ::snt Nu viss. Iekj trauma)
# ::tokens ["Nu", "viss", ".", "Iekj", "trauma", ")"]
# ::lemmas ["nu", "viss", ".", "Iekj", "trauma", ")"]
(c18-2 / multi-sentence
       :snt1 (c18-0 / viss)
       :snt2 (c18-3 / trauma
                    :mod (c18-1 / meekj)))

# ::snt Nice!!!!LMAO!
# ::tokens ["Nice!!!!LMAO", "!"]
# ::lemmas ["nice!!!!lmao", "!"]
(c19-1 / nice-01
       :mod (c19-2 / laugh-01
                   :ARG1 (c19-4 / ass
                                :part-of (c19-3 / i))
                   :mod (c19-0 / off)
                   :mode expressive))

# ::snt Are they going for the standard -year plan, the extended-wishful-thinking year plan, or the deluxe extended years + kid plan?
# ::tokens ["Are", "they", "going", "for", "the", "standard", "-year", "plan", ",", "the", "extended", "-", "wishful", "-", "thinking", "year", "plan", ",", "or", "the", "deluxe", "extended", "years", "+", "kid", "plan", "?"]
# ::lemmas ["be", "they", "go", "for", "the", "standard", "-year", "plan", ",", "the", "extend", "-", "wishful", "-", "think", "year", "plan", ",", "or", "the", "deluxe", "extend", "years", "+", "kid", "plan", "?"]
(c20-13 / go-21
        :ARG1 (c20-12 / they)
        :ARG2 (c20-1 / or
                     :op1 (c20-9 / plan-01
                                 :ARG1 (c20-2 / year
                                              :ARG1-of (c20-4 / standard-02)))
                     :op2 (c20-3 / plan-01
                                 :ARG1 (c20-15 / year
                                               :ARG1-of (c20-17 / think-01
                                                                :manner (c20-8 / extend-01))))
                     :op3 (c20-16 / plan-01
                                  :ARG1 (c20-0 / year
                                               :ARG1-of (c20-14 / extend-01))
                                  :mod (c20-6 / deluxe)
                                  :mod (c20-11 / plus
                                               :op1 (c20-5 / year
                                                           :mod (c20-10 / kid)))))
        :polarity (c20-7 / amr-unknown))

# ::snt My man is married. Ahhhh.
# ::tokens ["My", "man", "is", "married", ".", "Ahhhh", "."]
# ::lemmas ["my", "man", "be", "marry", ".", "ahhhh", "."]
(c21-0 / multi-sentence
       :snt1 (c21-1 / marry-01
                    :ARG1 (c21-4 / man
                                 :poss (c21-2 / i)))
       :snt2 (c21-3 / ah
                    :mode expressive))

# ::snt Dammit! Lol
# ::tokens ["Dammit", "!", "Lol"]
# ::lemmas ["Dammit", "!", "Lol"]
(c22-2 / multi-sentence
       :snt1 (c22-0 / damn-01)
       :snt2 (c22-3 / laugh-01
                    :manner (c22-1 / loud)
                    :mode expressive))

# ::snt Shameless publicity stunt for planned Tomb Raider-Assassin's Creed crossover (EA has console rights)
# ::tokens ["Shameless", "publicity", "stunt", "for", "planned", "Tomb", "Raider", "-", "Assassin", "'s", "Creed", "crossover", "(", "EA", "has", "console", "rights", ")"]
# ::lemmas ["shameless", "publicity", "stunt", "for", "plan", "Tomb", "Raider", "-", "Assassin", "'s", "Creed", "crossover", "(", "EA", "have", "console", "right", ")"]
(c23-9 / and
       :op1 (c23-5 / event
                   :name (c23-1 / name
                                :op1 "Tomb"
                                :op2 "Racification")
                   :ARG1-of (c23-7 / plan-01)
                   :mod (c23-2 / publicity))
       :op2 (c23-3 / sell-01
                   :ARG1 (c23-10 / product
                                 :name (c23-6 / name
                                              :op1 "Assassin's"
                                              :op2 "Creed"
                                              :op3 " crossover")))
       :ARG1-of (c23-4 / right-05
                       :ARG2 (c23-8 / console))
       :ARG1-of (c23-0 / shame-02
                       :polarity -))

# ::snt I had no idea they were even together!
# ::tokens ["I", "had", "no", "idea", "they", "were", "even", "together", "!"]
# ::lemmas ["i", "have", "no", "idea", "they", "be", "even", "together", "!"]
(c25-2 / have-03
       :ARG0 (c25-4 / i)
       :ARG1 (c25-0 / idea
                    :topic (c25-3 / together
                                  :domain (c25-5 / they)
                                  :mod (c25-1 / even)))
       :polarity -)

# ::snt Huh?
# ::tokens ["Huh", "?"]
# ::lemmas ["Huh", "?"]
(c26-0 / request-confirmation-91)

# ::snt HOOOOOOW
# ::tokens ["HOOOOOOW"]
# ::lemmas ["HOOOOOOW"]
(c27-0 / hoor
       :mode expressive)

# ::snt Babe, I think it's been like weeks already!
# ::tokens ["Babe", ",", "I", "think", "it", "'s", "been", "like", "weeks", "already", "!"]
# ::lemmas ["Babe", ",", "i", "think", "it", "be", "be", "like", "weeks", "already", "!"]
(c28-6 / think-01
       :ARG0 (c28-5 / i)
       :ARG1 (c28-2 / resemble-01
                    :ARG1 (c28-1 / now)
                    :ARG2 (c28-0 / multiple
                                 :op1 (c28-8 / temporal-quantity
                                             :unit (c28-4 / week)
                                             :quant 1))
                    :time (c28-3 / already))
       :mod (c28-7 / abe)
       :mode expressive)

# ::snt oh god. fassbender is bad news. nooooo!!! ugh.
# ::tokens ["oh", "god", ".", "fassbender", "is", "bad", "news", ".", "nooooo", "!", "!", "!", "ugh", "."]
# ::lemmas ["oh", "god", ".", "fassbender", "be", "bad", "news", ".", "nooooo", "!", "!", "!", "ugh", "."]
(c29-4 / multi-sentence
       :snt1 (c29-6 / god
                    :mod (c29-0 / oh))
       :snt2 (c29-3 / news
                    :ARG1-of (c29-2 / bad-07)
                    :domain (c29-1 / fassbender))
       :snt3 (c29-5 / no
                    :mode expressive)
       :snt4 (c29-7 / ugh
                    :mode expressive))

# ::snt When do we start seeing the star wars vs X-Men memes?
# ::tokens ["When", "do", "we", "start", "seeing", "the", "star", "wars", "vs", "X", "-", "Men", "memes", "?"]
# ::lemmas ["when", "do", "we", "start", "see", "the", "star", "war", "vs", "X", "-", "men", "meme", "?"]
(c30-3 / start-01
       :ARG0 (c30-6 / we)
       :ARG1 (c30-0 / see-01
                    :ARG0 c30-6
                    :ARG1 (c30-1 / meme
                                 :topic (c30-5 / war-01
                                               :ARG0 (c30-8 / star)
                                               :ARG1 (c30-4 / person
                                                            :name (c30-2 / name
                                                                         :op1 "X-Men")))))
       :time (c30-7 / amr-unknown))

# ::snt A tomb raider and an assassin
# ::tokens ["A", "tomb", "raider", "and", "an", "assassin"]
# ::lemmas ["a", "tomb", "raider", "and", "an", "assassin"]
(c32-2 / and
       :op1 (c32-3 / person
                   :ARG0-of (c32-1 / raid-01
                                   :ARG1 (c32-5 / tomb)))
       :op2 (c32-0 / person
                   :ARG0-of (c32-4 / assassinate-01)))

# ::snt AI + Android!
# ::tokens ["AI", "+", "Android", "!"]
# ::lemmas ["AI", "+", "Android", "!"]
(c33-1 / and
       :op1 (c33-4 / intelligent-01
                   :mod (c33-3 / artificial))
       :op2 (c33-2 / product
                   :name (c33-0 / name
                                :op1 "Android")))

# ::snt Congratulations mem and sir
# ::tokens ["Congratulations", "mem", "and", "sir"]
# ::lemmas ["congratulation", "mem", "and", "sir"]
(c34-2 / say-01
       :ARG1 (c34-4 / congratulate-01
                    :ARG1 (c34-5 / and
                                 :op1 (c34-3 / person
                                             :name (c34-0 / name
                                                          :op1 "Mem"))
                                 :op2 (c34-1 / person
                                             :name c34-0
                                             :op1 "Sir")
                                 :ARG2-of c34-2)))

# ::snt Nice couple pic mem
# ::tokens ["Nice", "couple", "pic", "mem"]
# ::lemmas ["nice", "couple", "pic", "mem"]
(c35-2 / post-scriptum
       :domain (c35-3 / picture
                      :quant (c35-0 / couple)
                      :ARG1-of (c35-1 / nice-01)))

# ::snt Katchannnnnn
# ::tokens ["Katchannnnnn"]
# ::lemmas ["katchannnnnn"]
(c36-1 / publication
       :name (c36-0 / name
                    :op1 "Katchannnnnn"))

# ::snt !!!
# ::tokens ["!", "!", "!"]
# ::lemmas ["!", "!", "!"]
(c37-0 / thing
       :mode expressive)

# ::snt hjashahjf i know!!!!!!!!! they are so beautiful daddy looked so happyyyyy
# ::tokens ["hjashahjf", "i", "know", "!", "!", "!", "!", "!", "!", "!", "!", "!", "they", "are", "so", "beautiful", "daddy", "looked", "so", "happyyyyy"]
# ::lemmas ["hjashahjf", "i", "know", "!", "!", "!", "!", "!", "!", "!", "!", "!", "they", "be", "so", "beautiful", "daddy", "look", "so", "happyyyyy"]
(c38-2 / multi-sentence
       :snt1 (c38-5 / know-01
                    :ARG0 (c38-9 / i))
       :snt2 (c38-1 / beautiful-02
                    :ARG1 (c38-10 / they)
                    :degree (c38-3 / so))
       :snt3 (c38-6 / look-02
                    :ARG0 (c38-7 / person
                                 :ARG0-of (c38-4 / have-rel-role-91
                                                 :ARG1 c38-9)
                                 :ARG2 (c38-11 / daddy)))
       :ARG1 (c38-8 / happy-01
                    :ARG1 c38-7
                    :degree (c38-0 / so)))

# ::snt rocknrolllara croft
# ::tokens ["rocknrolllara", "croft"]
# ::lemmas ["rocknrolllara", "croft"]
(c39-0 / croft
       :domain (c39-2 / person
                      :name (c39-1 / name
                                   :op1 "rocknrolllara")))

# ::snt Don't miss it please
# ::tokens ["Do", "n't", "miss", "it", "please"]
# ::lemmas ["do", "not", "miss", "it", "please"]
(c41-1 / miss-02
       :ARG0 (c41-0 / you)
       :ARG1 (c41-2 / it)
       :polarity -
       :mode imperative
       :polite +)

# ::snt OMG!!! This is amazing. I`m very happy for her
# ::tokens ["OMG", "!", "!", "!", "This", "is", "amazing", ".", "I`m", "very", "happy", "for", "her"]
# ::lemmas ["OMG", "!", "!", "!", "this", "be", "amazing", ".", "i`m", "very", "happy", "for", "she"]
(c42-1 / multi-sentence
       :snt1 (c42-3 / amazing
                    :domain (c42-7 / this)
                    :mod (c42-0 / oh-my-god
                                :mode expressive))
       :snt2 (c42-5 / happy-01
                    :ARG0 (c42-2 / she)
                    :ARG1 (c42-6 / i)
                    :degree (c42-4 / very)))

# ::snt There goes a promising career.
# ::tokens ["There", "goes", "a", "promising", "career", "."]
# ::lemmas ["there", "go", "a", "promising", "career", "."]
(c43-0 / go-09
       :ARG1 (c43-1 / career
                    :ARG0-of (c43-2 / promise-01)))

# ::snt The only jesus I'll claim tho...
# ::tokens ["The", "only", "jesus", "I", "'ll", "claim", "tho", "..."]
# ::lemmas ["the", "only", "jesus", "i", "'ll", "claim", "tho", "..."]
(c44-3 / have-concession-91
       :ARG1 (c44-5 / claim-01
                    :ARG0 (c44-6 / i)
                    :ARG1 (c44-4 / person
                                 :mod (c44-0 / only)
                                 :mod (c44-2 / religious-group
                                             :name (c44-1 / name
                                                          :op1 "Jesus")))))

# ::snt its all about timing like I know their child going to be the second coming of Jesus...
# ::tokens ["its", "all", "about", "timing", "like", "I", "know", "their", "child", "going", "to", "be", "the", "second", "coming", "of", "Jesus", "..."]
# ::lemmas ["its", "all", "about", "time", "like", "i", "know", "their", "child", "go", "to", "be", "the", "second", "coming", "of", "Jesus", "..."]
(c45-9 / concern-02
       :ARG0 (c45-11 / it)
       :ARG1 (c45-12 / time-02
                     :ARG1-of (c45-4 / resemble-01
                                     :ARG2 (c45-7 / know-01
                                                  :ARG0 (c45-3 / i)
                                                  :ARG1 (c45-14 / come-01
                                                                :ARG1 (c45-8 / person
                                                                             :ARG0-of (c45-6 / have-rel-role-91
                                                                                             :ARG1 (c45-13 / they)
                                                                                             :ARG2 (c45-10 / child)))
                                                                :ARG4 (c45-2 / person
                                                                             :name (c45-1 / name
                                                                                          :op1 "Jesus"))
                                                                :ord (c45-0 / ordinal-entity
                                                                            :value 2)))))
       :degree (c45-5 / all))

# ::snt But where are the babies ?? We need to improve this ugly world
# ::tokens ["But", "where", "are", "the", "babies", "?", "?", "We", "need", "to", "improve", "this", "ugly", "world"]
# ::lemmas ["but", "where", "be", "the", "baby", "?", "?", "we", "need", "to", "improve", "this", "ugly", "world"]
(c46-1 / multi-sentence
       :snt1 (c46-5 / contrast-01
                    :ARG2 (c46-0 / be-located-at-91
                                 :ARG1 (c46-3 / baby)
                                 :ARG2 (c46-9 / amr-unknown)))
       :snt2 (c46-2 / need-01
                    :ARG0 (c46-6 / we)
                    :ARG1 (c46-8 / improve-01
                                 :ARG0 c46-6
                                 :ARG1 (c46-4 / world
                                              :mod (c46-10 / ugly)
                                              :mod (c46-7 / this)))))

# ::snt Way to go
# ::tokens ["Way", "to", "go"]
# ::lemmas ["way", "to", "go"]
(c47-1 / way
       :manner-of (c47-0 / go-06))

# ::snt Congrats Michael and Alicia and I wish them a long and happy marriage
# ::tokens ["Congrats", "Michael", "and", "Alicia", "and", "I", "wish", "them", "a", "long", "and", "happy", "marriage"]
# ::lemmas ["Congrats", "Michael", "and", "Alicia", "and", "i", "wish", "they", "a", "long", "and", "happy", "marriage"]
(c48-3 / and
       :op1 (c48-8 / congratulate-01
                   :ARG0 (c48-11 / i)
                   :ARG1 (c48-10 / and
                                 :op1 (c48-5 / person
                                             :name (c48-0 / name
                                                          :op1 "Michael"))
                                 :op2 (c48-1 / person
                                             :name (c48-4 / name
                                                          :op1 "Alicia"))))
       :op2 (c48-9 / wish-01
                   :ARG0 c48-11
                   :ARG1 (c48-2 / marry-01
                                :ARG1 c48-10
                                :ARG1-of (c48-6 / long-03)
                                :ARG1-of (c48-7 / happy-02))
                   :ARG2 c48-10))

# ::snt Congratulations!
# ::tokens ["Congratulations", "!"]
# ::lemmas ["congratulation", "!"]
(c49-0 / congratulate-01
       :mode expressive)
