# ::snt COME DOWN?! IT CAN BE A MASSIVE REUNION?!
# ::tokens ["COME", "DOWN", "?", "!", "IT", "CAN", "BE", "A", "MASSIVE", "REUNION", "?", "!"]
# ::lemmas ["come", "down", "?", "!", "it", "can", "be", "a", "MASSIVE", "reunion", "?", "!"]
(c1-1 / multi-sentence
      :snt1 (c1-4 / come-down-23
                  :ARG1 (c1-0 / you)
                  :mode imperative)
      :snt2 (c1-3 / possible-01
                  :ARG1 (c1-7 / crisis
                              :degree (c1-2 / massive)
                              :domain (c1-5 / it))
                  :polarity (c1-6 / amr-unknown)))

# ::snt moving back to uni that day, hopefully see you another time homeboy x
# ::tokens ["moving", "back", "to", "uni", "that", "day", ",", "hopefully", "see", "you", "another", "time", "homeboy", "x"]
# ::lemmas ["move", "back", "to", "uni", "that", "day", ",", "hopefully", "see", "you", "another", "time", "homeboy", "x"]
(c2-3 / say-01
      :ARG0 (c2-7 / i)
      :ARG1 (c2-8 / and
                  :op1 (c2-2 / move-01
                             :ARG2 (c2-11 / university)
                             :time (c2-10 / day
                                          :mod (c2-6 / that)))
                  :op2 (c2-0 / see-01
                             :ARG0 c2-7
                             :ARG1 (c2-1 / you)
                             :time (c2-9 / another)
                             :mod (c2-4 / homeboy)
                             :ARG1-of (c2-5 / hope-01)))
      :ARG2 c2-1)

# ::snt Come Blackpool
# ::tokens ["Come", "Blackpool"]
# ::lemmas ["come", "Blackpool"]
(c3-0 / come-on-25
      :ARG1 (c3-2 / city
                  :name (c3-1 / name
                              :op1 "Blackpool"))
      :mode imperative)

# ::snt Dont live in London no more I miss your face
# ::tokens ["Do", "nt", "live", "in", "London", "no", "more", "I", "miss", "your", "face"]
# ::lemmas ["do", "nt", "live", "in", "London", "no", "more", "i", "miss", "your", "face"]
(c4-5 / cause-01
      :ARG0 (c4-2 / miss-01
                  :ARG0 (c4-6 / i)
                  :ARG1 (c4-0 / face
                              :part-of (c4-1 / you)))
      :ARG1 (c4-4 / live-01
                  :ARG0 c4-1
                  :location (c4-8 / city
                                  :name (c4-3 / name
                                              :op1 "London"))
                  :mod (c4-7 / anymore)
                  :polarity -
                  :mode imperative))

# ::snt Imam try so hard to be there x
# ::tokens ["Imam", "try", "so", "hard", "to", "be", "there", "x"]
# ::lemmas ["Imam", "try", "so", "hard", "to", "be", "there", "x"]
(c5-3 / try-01
      :ARG0 (c5-4 / i)
      :ARG1 (c5-0 / be-located-at-91
                  :ARG1 c5-4
                  :ARG2 (c5-5 / there))
      :ARG1-of (c5-2 / hard-02
                     :degree (c5-1 / so)))

# ::snt See you soon
# ::tokens ["See", "you", "soon"]
# ::lemmas ["see", "you", "soon"]
(c6-3 / see-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-1 / you)
      :time (c6-0 / soon))

# ::snt Don't want to worry you, dude, but even Hamsters can get the hang of those...
# ::tokens ["Do", "n't", "want", "to", "worry", "you", ",", "dude", ",", "but", "even", "Hamsters", "can", "get", "the", "hang", "of", "those", "..."]
# ::lemmas ["do", "not", "want", "to", "worry", "you", ",", "dude", ",", "but", "even", "hamster", "can", "get", "the", "hang", "of", "those", "..."]
(c7-0 / say-01
      :ARG0 (c7-8 / i)
      :ARG1 (c7-5 / contrast-01
                  :ARG1 (c7-6 / want-01
                              :ARG0 c7-8
                              :ARG1 (c7-4 / worry-01
                                          :ARG0 c7-8
                                          :ARG1 (c7-11 / dude))
                              :polarity -)
                  :ARG2 (c7-3 / possible-01
                              :ARG1 (c7-10 / get-01
                                           :ARG0 (c7-2 / hamster
                                                       :mod (c7-1 / even))
                                           :ARG1 (c7-7 / hang-01
                                                       :ARG1 (c7-9 / that)))))
      :ARG2 c7-11)

# ::snt Sounds like a question for ...
# ::tokens ["Sounds", "like", "a", "question", "for", "..."]
# ::lemmas ["sound", "like", "a", "question", "for", "..."]
(c8-2 / sound-01
      :ARG2 (c8-0 / thing
                  :ARG1-of (c8-1 / question-01)))

# ::snt It would be interesting to find out of the approx weekly visitors, how many have downloaded the app and requested a refill? On my visit, my bottle was filled from a tap in a sink with a "For Handwash Only" sign....
# ::tokens ["It", "would", "be", "interesting", "to", "find", "out", "of", "the", "approx", "weekly", "visitors", ",", "how", "many", "have", "downloaded", "the", "app", "and", "requested", "a", "refill", "?", "On", "my", "visit", ",", "my", "bottle", "was", "filled", "from", "a", "tap", "in", "a", "sink", "with", "a", "\"", "For", "Handwash", "Only", "\"", "sign", "...."]
# ::lemmas ["it", "would", "be", "interesting", "to", "find", "out", "of", "the", "approx", "weekly", "visitor", ",", "how", "many", "have", "download", "the", "app", "and", "request", "a", "refill", "?", "on", "my", "visit", ",", "my", "bottle", "be", "fill", "from", "a", "tap", "in", "a", "sink", "with", "a", "\"", "for", "Handwash", "only", "\"", "sign", "...."]
(c9-14 / multi-sentence
       :snt1 (c9-24 / interest-01
                    :ARG0 (c9-18 / find-out-03
                                 :ARG1 (c9-11 / and
                                              :op1 (c9-20 / download-01
                                                          :ARG0 (c9-21 / person
                                                                       :ARG1-of (c9-5 / include-91
                                                                                      :ARG2 (c9-15 / person
                                                                                                   :ARG0-of (c9-6 / visit-01)
                                                                                                   :frequency (c9-19 / rate-entity-91
                                                                                                                     :ARG3 (c9-10 / temporal-quantity
                                                                                                                                  :unit (c9-23 / week)
                                                                                                                                  :quant 1)
                                                                                                                     :mod (c9-9 / approximate))))
                                                                       :quant (c9-8 / amr-unknown))
                                                          :ARG1 (c9-25 / app))
                                              :op2 (c9-2 / request-01
                                                         :ARG0 c9-21
                                                         :ARG1 (c9-16 / refill-01
                                                                      :ARG0 c9-21))))
                    :ARG2 (c9-1 / visit-01
                                :ARG0 (c9-12 / i)))
       :snt2 (c9-22 / fill-01
                    :ARG1 (c9-13 / bottle
                                 :poss c9-12)
                    :ARG2 (c9-0 / sign
                                :mod (c9-7 / handwash-01
                                           :mod (c9-3 / only)))
                    :source (c9-17 / tap
                                   :location (c9-4 / sink))))

# ::snt However, we do have lots of sites in the Market on that offer free tap water! Good excuse to download the app...
# ::tokens ["However", ",", "we", "do", "have", "lots", "of", "sites", "in", "the", "Market", "on", "that", "offer", "free", "tap", "water", "!", "Good", "excuse", "to", "download", "the", "app", "..."]
# ::lemmas ["however", ",", "we", "do", "have", "lot", "of", "site", "in", "the", "Market", "on", "that", "offer", "free", "tap", "water", "!", "good", "excuse", "to", "download", "the", "app", "..."]
(c10-2 / multi-sentence
       :snt1 (c10-10 / contrast-01
                     :ARG2 (c10-6 / have-03
                                  :ARG0 (c10-11 / we)
                                  :ARG1 (c10-3 / site
                                               :quant (c10-7 / lot)
                                               :location (c10-8 / market)
                                               :ARG0-of (c10-0 / offer-01
                                                               :ARG1 (c10-9 / water
                                                                            :ARG1-of (c10-12 / tap-02)
                                                                            :ARG1-of (c10-1 / free-03))))))
       :snt2 (c10-5 / excuse-02
                    :ARG1 (c10-14 / download-01
                                  :ARG1 (c10-4 / app))
                    :ARG1-of (c10-13 / good-02)))

# ::snt But sadly not , one of London's most popular destinations with a reported visitors each week.
# ::tokens ["But", "sadly", "not", ",", "one", "of", "London", "'s", "most", "popular", "destinations", "with", "a", "reported", "visitors", "each", "week", "."]
# ::lemmas ["but", "sadly", "not", ",", "one", "of", "London", "'s", "most", "popular", "destination", "with", "a", "report", "visitor", "each", "week", "."]
(c11-7 / contrast-01
       :ARG2 (c11-12 / destination
                     :ARG1-of (c11-10 / include-91
                                      :ARG2 (c11-8 / destination
                                                   :ARG1-of (c11-5 / have-degree-91
                                                                   :ARG2 (c11-6 / popular-02
                                                                                :ARG1 c11-8)
                                                                   :ARG3 (c11-0 / most)
                                                                   :ARG5 (c11-14 / city
                                                                                 :name (c11-1 / name
                                                                                              :op1 "London")))))
                     :ARG0-of (c11-4 / visit-01
                                     :ARG1-of (c11-3 / report-01)
                                     :frequency (c11-13 / rate-entity-91
                                                        :ARG3 (c11-11 / temporal-quantity
                                                                      :unit (c11-9 / week)
                                                                      :quant 1)))
                     :ARG0-of (c11-2 / sad-02
                                     :polarity -)
                     :quant 1))

# ::snt Class game although london runs me ragged
# ::tokens ["Class", "game", "although", "london", "runs", "me", "ragged"]
# ::lemmas ["class", "game", "although", "london", "run", "i", "ragged"]
(c12-4 / game
       :mod (c12-2 / class)
       :concession (c12-1 / run-10
                          :ARG0 (c12-6 / city
                                       :name (c12-0 / name
                                                    :op1 "London"))
                          :ARG1 (c12-3 / i)
                          :manner (c12-5 / ragged)))

# ::snt Probably the best in the world on that particular instrument.I thought it was an excellent choice of soundtrack.
# ::tokens ["Probably", "the", "best", "in", "the", "world", "on", "that", "particular", "instrument", ".", "I", "thought", "it", "was", "an", "excellent", "choice", "of", "soundtrack", "."]
# ::lemmas ["probably", "the", "good", "in", "the", "world", "on", "that", "particular", "instrument", ".", "i", "think", "it", "be", "an", "excellent", "choice", "of", "soundtrack", "."]
(c13-0 / multi-sentence
       :snt1 (c13-6 / probable
                    :domain (c13-5 / have-degree-91
                                   :ARG1 (c13-10 / instrument
                                                 :mod (c13-1 / particular)
                                                 :mod (c13-11 / that))
                                   :ARG2 (c13-12 / good-03
                                                 :ARG1 c13-10)
                                   :ARG3 (c13-7 / most)
                                   :ARG5 (c13-8 / world)))
       :snt2 (c13-14 / think-01
                     :ARG0 (c13-3 / i)
                     :ARG1 (c13-9 / choose-01
                                  :ARG1 (c13-13 / it)
                                  :ARG3 (c13-2 / soundtrack)
                                  :ARG1-of (c13-4 / excellent-02))))

# ::snt That was Larry Adler .
# ::tokens ["That", "was", "Larry", "Adler", "."]
# ::lemmas ["that", "be", "Larry", "Adler", "."]
(c14-1 / person
       :name (c14-0 / name
                    :op1 "Larry"
                    :op2 "Adler")
       :domain (c14-2 / that))

# ::snt I don't want our people to take lists rather take action!!.. ward ..
# ::tokens ["I", "do", "n't", "want", "our", "people", "to", "take", "lists", "rather", "take", "action", "!", "!", "..", "ward", ".."]
# ::lemmas ["i", "do", "not", "want", "our", "people", "to", "take", "list", "rather", "take", "action", "!", "!", "..", "ward", ".."]
(c15-4 / want-01
       :ARG0 (c15-5 / i)
       :ARG1 (c15-0 / instead-of-91
                    :ARG1 (c15-2 / list-01
                                 :ARG0 (c15-1 / person
                                              :poss (c15-3 / we)))
                    :ARG2 (c15-6 / act-02
                                 :ARG0 c15-1))
       :polarity -)

# ::snt Councillor of Nompumelelo saying "Dept of Housing and Social development will come on Monday" that being days after the fire.. community give kg rice, kg samp and mealie meal. No shelter was offered.
# ::tokens ["Councillor", "of", "Nompumelelo", "saying", "\"", "Dept", "of", "Housing", "and", "Social", "development", "will", "come", "on", "Monday", "\"", "that", "being", "days", "after", "the", "fire", "..", "community", "give", "kg", "rice", ",", "kg", "samp", "and", "mealie", "meal", ".", "No", "shelter", "was", "offered", "."]
# ::lemmas ["Councillor", "of", "Nompumelelo", "say", "\"", "Dept", "of", "Housing", "and", "Social", "development", "will", "come", "on", "Monday", "\"", "that", "be", "day", "after", "the", "fire", "..", "community", "give", "kg", "rice", ",", "kg", "samp", "and", "mealie", "meal", ".", "no", "shelter", "be", "offer", "."]
(c16-14 / multi-sentence
        :snt1 (c16-0 / say-01
                     :ARG0 (c16-27 / person
                                   :ARG0-of (c16-5 / have-org-role-91
                                                   :ARG1 (c16-17 / city
                                                                 :name (c16-23 / name
                                                                               :op1 "Nompumelelo"))
                                                   :ARG2 (c16-6 / mayor)))
                     :ARG1 (c16-13 / come-01
                                   :ARG1 (c16-29 / department
                                                 :topic (c16-11 / and
                                                                :op1 (c16-28 / house-01)
                                                                :op2 (c16-18 / develop-02
                                                                             :ARG1 (c16-3 / social))))
                                   :time (c16-15 / date-entity
                                                 :weekday (c16-20 / monday))
                                   :time (c16-9 / after
                                                :op1 (c16-22 / fire)
                                                :quant (c16-16 / multiple
                                                               :op1 (c16-10 / temporal-quantity
                                                                            :unit (c16-26 / day)
                                                                            :quant 1)))))
        :snt2 (c16-12 / give-01
                      :ARG0 (c16-1 / community)
                      :ARG1 (c16-8 / and
                                   :op1 (c16-25 / rice
                                                :quant (c16-19 / mass-quantity
                                                               :unit (c16-7 / kilogram)
                                                               :quant 1))
                                   :op2 (c16-2 / samp
                                               :quant c16-19)
                                   :op3 (c16-21 / meal
                                                :mod c16-21)))
        :snt3 (c16-4 / offer-01
                     :ARG1 (c16-24 / shelter-01)
                     :polarity -))

# ::snt People have been sleeping outside, there aren't any community halls and schools can't be open to the community. It's been a week since the fire.
# ::tokens ["People", "have", "been", "sleeping", "outside", ",", "there", "are", "n't", "any", "community", "halls", "and", "schools", "ca", "n't", "be", "open", "to", "the", "community", ".", "It", "'s", "been", "a", "week", "since", "the", "fire", "."]
# ::lemmas ["people", "have", "be", "sleep", "outside", ",", "there", "be", "not", "any", "community", "hall", "and", "school", "can", "not", "be", "open", "to", "the", "community", ".", "it", "be", "be", "a", "week", "since", "the", "fire", "."]
(c17-4 / multi-sentence
       :snt1 (c17-6 / sleep-01
                    :ARG0 (c17-8 / person)
                    :location (c17-0 / outside))
       :snt2 (c17-13 / and
                     :op1 (c17-7 / hall
                                 :mod (c17-9 / community)
                                 :mod (c17-12 / any)
                                 :polarity -)
                     :op2 (c17-5 / possible-01
                                 :ARG1 (c17-1 / open-01
                                              :ARG1 (c17-2 / school)
                                              :ARG3 (c17-15 / community))
                                 :polarity -))
       :snt3 (c17-14 / pass-03
                     :ARG1 (c17-11 / temporal-quantity
                                   :unit (c17-10 / week)
                                   :quant 1)
                     :time (c17-16 / since
                                   :op1 (c17-3 / fire))))

# ::snt of the residents here says that in previous times the only help offered has been a small food parcel and those grey blankets with white stripes. .
# ::tokens ["of", "the", "residents", "here", "says", "that", "in", "previous", "times", "the", "only", "help", "offered", "has", "been", "a", "small", "food", "parcel", "and", "those", "grey", "blankets", "with", "white", "stripes", ".", "."]
# ::lemmas ["of", "the", "resident", "here", "say", "that", "in", "previous", "time", "the", "only", "help", "offer", "have", "be", "a", "small", "food", "parcel", "and", "those", "grey", "blanket", "with", "white", "stripe", ".", "."]
(c18-0 / say-01
       :ARG0 (c18-16 / person
                     :ARG0-of (c18-15 / reside-01
                                      :ARG1 (c18-6 / here)))
       :ARG1 (c18-3 / offer-01
                    :ARG1 (c18-18 / help-01
                                  :ARG1 (c18-8 / and
                                               :op1 (c18-12 / parcel
                                                            :mod (c18-14 / food)
                                                            :mod (c18-4 / small))
                                               :op2 (c18-11 / blanket
                                                            :ARG1-of (c18-9 / gray-02)
                                                            :mod (c18-7 / that)
                                                            :ARG0-of (c18-5 / have-03
                                                                            :ARG1 (c18-2 / stripe
                                                                                         :ARG1-of (c18-17 / white-03)))))
                                  :mod (c18-10 / only))
                    :time (c18-13 / time
                                  :mod (c18-1 / previous))))

# ::snt The most painful thing about this is knowing that these people will rebuild, live here for another presidential term. . I lived like this for half my life. . It hurts. .
# ::tokens ["The", "most", "painful", "thing", "about", "this", "is", "knowing", "that", "these", "people", "will", "rebuild", ",", "live", "here", "for", "another", "presidential", "term", ".", ".", "I", "lived", "like", "this", "for", "half", "my", "life", ".", ".", "It", "hurts", ".", "."]
# ::lemmas ["the", "most", "painful", "thing", "about", "this", "be", "know", "that", "these", "people", "will", "rebuild", ",", "live", "here", "for", "another", "presidential", "term", ".", ".", "i", "live", "like", "this", "for", "half", "my", "life", ".", ".", "it", "hurt", ".", "."]
(c19-14 / multi-sentence
        :snt1 (c19-6 / have-degree-91
                     :ARG1 (c19-7 / know-01
                                  :ARG1 (c19-12 / and
                                                :op1 (c19-18 / rebuild-01
                                                             :ARG0 (c19-19 / person
                                                                           :mod (c19-11 / this)))
                                                :op2 (c19-1 / live-01
                                                            :ARG0 c19-19
                                                            :location (c19-20 / here)
                                                            :purpose (c19-16 / term
                                                                             :mod (c19-15 / president)
                                                                             :mod (c19-10 / another)))))
                     :ARG2 (c19-2 / pain-01
                                  :ARG0 c19-7)
                     :ARG3 (c19-8 / most)
                     :topic (c19-21 / this))
        :snt2 (c19-13 / live-01
                      :ARG0 (c19-22 / i)
                      :ARG1-of (c19-3 / resemble-01
                                      :ARG2 (c19-0 / this))
                      :duration (c19-5 / half
                                       :op1 (c19-9 / live-01
                                                   :ARG0 c19-22)))
        :snt3 (c19-17 / hurt-01
                      :ARG1 (c19-4 / it)))

# ::snt Im in the BCMM Regional Office right now. Our secretary and other RCT members are attending to it. I will be joining them soon
# ::tokens ["I", "m", "in", "the", "BCMM", "Regional", "Office", "right", "now", ".", "Our", "secretary", "and", "other", "RCT", "members", "are", "attending", "to", "it", ".", "I", "will", "be", "joining", "them", "soon"]
# ::lemmas ["i", "m", "in", "the", "BCMM", "Regional", "Office", "right", "now", ".", "our", "secretary", "and", "other", "RCT", "member", "be", "attend", "to", "it", ".", "i", "will", "be", "join", "they", "soon"]
(c20-14 / multi-sentence
        :snt1 (c20-13 / be-located-at-91
                      :ARG1 (c20-23 / i)
                      :ARG2 (c20-9 / government-organization
                                   :name (c20-17 / name
                                                 :op1 "BCMM"
                                                 :op2 "Regional"
                                                 :op3 "Office"))
                      :time (c20-16 / now
                                    :mod (c20-18 / right)))
        :snt2 (c20-8 / attend-01
                     :ARG0 (c20-7 / and
                                  :op1 (c20-19 / person
                                               :ARG0-of (c20-4 / have-org-role-91
                                                               :ARG1 (c20-21 / we)
                                                               :ARG2 (c20-0 / secretary)))
                                  :op2 (c20-15 / person
                                               :ARG0-of (c20-22 / have-org-role-91
                                                                :ARG1 (c20-1 / organization
                                                                             :name (c20-20 / name
                                                                                           :op1 "RCT"))
                                                                :ARG2 (c20-5 / member))
                                               :mod (c20-12 / other)))
                     :ARG1 (c20-3 / it))
        :snt3 (c20-6 / join-01
                     :ARG0 (c20-11 / i)
                     :ARG1 (c20-10 / they)
                     :time (c20-2 / soon)))

# ::snt - -
# ::tokens ["-", "-"]
# ::lemmas ["-", "-"]
(c21-0 / amr-empty)

# ::snt I have been here for over an hour walking around and I haven't seen toilets or taps. . Nompumelelo location, rough estimation of homes lost in the fire. A disabled man lost his life in the fire after a shack behind him caught fire. His screams were heard a mile away.
# ::tokens ["I", "have", "been", "here", "for", "over", "an", "hour", "walking", "around", "and", "I", "have", "n't", "seen", "toilets", "or", "taps", ".", ".", "Nompumelelo", "location", ",", "rough", "estimation", "of", "homes", "lost", "in", "the", "fire", ".", "A", "disabled", "man", "lost", "his", "life", "in", "the", "fire", "after", "a", "shack", "behind", "him", "caught", "fire", ".", "His", "screams", "were", "heard", "a", "mile", "away", "."]
# ::lemmas ["i", "have", "be", "here", "for", "over", "an", "hour", "walk", "around", "and", "i", "have", "not", "see", "toilet", "or", "tap", ".", ".", "Nompumelelo", "location", ",", "rough", "estimation", "of", "home", "lose", "in", "the", "fire", ".", "a", "disabled", "man", "lose", "his", "life", "in", "the", "fire", "after", "a", "shack", "behind", "he", "catch", "fire", ".", "his", "scream", "be", "hear", "a", "mile", "away", "."]
(c22-18 / multi-sentence
        :snt1 (c22-12 / and
                      :op1 (c22-31 / walk-01
                                   :ARG0 (c22-33 / i)
                                   :ARG2 (c22-11 / around)
                                   :duration (c22-4 / over
                                                    :op1 (c22-13 / temporal-quantity
                                                                 :unit (c22-7 / hour)
                                                                 :quant 1)))
                      :op2 (c22-0 / see-01
                                  :ARG0 c22-33
                                  :ARG1 (c22-16 / or
                                                :op1 (c22-23 / toilet)
                                                :op2 (c22-34 / tap))
                                  :polarity -))
        :snt2 (c22-1 / location
                     :location (c22-20 / city
                                       :name (c22-26 / name
                                                     :op1 "Nompumelelo"))
                     :location-of (c22-28 / estimate-01
                                          :ARG1 (c22-32 / home
                                                        :ARG1-of (c22-14 / lose-02
                                                                         :ARG0 (c22-25 / fire)))
                                          :ARG1-of (c22-27 / rough-04)))
        :snt3 (c22-8 / lose-02
                     :ARG0 (c22-9 / man
                                  :ARG1-of (c22-35 / disable-01))
                     :ARG1 (c22-22 / life
                                   :poss c22-9)
                     :ARG2 (c22-29 / fire)
                     :time (c22-10 / after
                                   :op1 (c22-15 / catch-02
                                                :ARG0 (c22-5 / shack
                                                             :location (c22-17 / behind
                                                                               :op1 c22-9))
                                                :ARG1 (c22-30 / fire))))
        :snt4 (c22-6 / hear-01
                     :ARG1 (c22-3 / scream-01
                                  :ARG0 c22-9)
                     :location (c22-2 / relative-position
                                      :op1 (c22-19 / away)
                                      :quant (c22-21 / distance-quantity
                                                     :unit (c22-24 / mile)
                                                     :quant 1))))

# ::snt Last frame is what seems like a CV. .
# ::tokens ["Last", "frame", "is", "what", "seems", "like", "a", "CV", ".", "."]
# ::lemmas ["last", "frame", "be", "what", "seem", "like", "a", "cv", ".", "."]
(c24-1 / seem-01
       :ARG1 (c24-2 / resemble-01
                    :ARG1 (c24-0 / frame
                                 :mod (c24-3 / last))
                    :ARG2 (c24-4 / CV)))

# ::snt Get some African Hip-HopAFRO SAL SOUL VOLUME by ZILO GROOVEHip-Hop, African Music, Jazz &amp; DanceSPOTIFY MUSIC MUSIC
# ::tokens ["Get", "some", "African", "Hip", "-", "HopAFRO", "SAL", "SOUL", "VOLUME", "by", "ZILO", "GROOVEHip", "-", "Hop", ",", "African", "Music", ",", "Jazz", "&", "amp", ";", "DanceSPOTIFY", "MUSIC", "MUSIC"]
# ::lemmas ["get", "some", "African", "Hip", "-", "hopafro", "SAL", "SOUL", "volume", "by", "ZILO", "GROOVEHip", "-", "Hop", ",", "African", "Music", ",", "Jazz", "&", "amp", ";", "DanceSPOTIFY", "MUSIC", "MUSIC"]
(c25-13 / get-01
        :ARG0 (c25-1 / you)
        :ARG1 (c25-3 / music
                     :name (c25-2 / name
                                  :op1 "Africa"
                                  :op2 "Hip-Hop"
                                  :op3 "AFRO"
                                  :op4 "Sal"
                                  :op5 "Solecule")
                     :ARG1-of (c25-5 / produce-01
                                     :ARG0 (c25-0 / organization
                                                  :name (c25-4 / name
                                                               :op1 "ZILO"
                                                               :op2 "GROOVEHip-Hop")))
                     :mod (c25-6 / music
                                 :mod (c25-9 / continent
                                             :name (c25-7 / name
                                                          :op1 "Africa")))
                     :mod (c25-11 / jazz)
                     :mod (c25-14 / music
                                  :name (c25-10 / name
                                                :op1 "Jazz"
                                                :op2 "&amp"))
                     :mod (c25-8 / music
                                 :name (c25-12 / name
                                               :op1 "DanceSPOTIFY"
                                               :op2 "Music")))
        :mode imperative)

# ::snt Lol... Real life.
# ::tokens ["Lol", "...", "Real", "life", "."]
# ::lemmas ["lol", "...", "real", "life", "."]
(c26-3 / and
       :op1 (c26-2 / laugh-01
                   :manner (c26-4 / loud)
                   :mode expressive)
       :op2 (c26-1 / life
                   :ARG1-of (c26-0 / real-04)))

# ::snt My surname is Makurdi. I also know Gboko family lol.
# ::tokens ["My", "surname", "is", "Makurdi", ".", "I", "also", "know", "Gboko", "family", "lol", "."]
# ::lemmas ["my", "surname", "be", "Makurdi", ".", "i", "also", "know", "Gboko", "family", "lol", "."]
(c27-2 / multi-sentence
       :snt1 (c27-3 / surname
                    :poss (c27-9 / i)
                    :domain (c27-6 / person
                                   :name (c27-1 / name
                                                :op1 "Makurdi")))
       :snt2 (c27-7 / know-02
                    :ARG0 (c27-4 / i)
                    :ARG1 (c27-0 / family
                                 :name (c27-5 / name
                                              :op1 "Gboko"))
                    :mod (c27-10 / also)
                    :ARG2-of (c27-8 / laugh-01
                                    :ARG0 c27-4
                                    :manner (c27-11 / loud))))

# ::snt IMO
# ::tokens ["IMO"]
# ::lemmas ["imo"]
(c28-0 / opine-01
       :ARG0 (c28-1 / i))

# ::snt Lagos, Uyo, Sambisa
# ::tokens ["Lagos", ",", "Uyo", ",", "Sambisa"]
# ::lemmas ["Lagos", ",", "Uyo", ",", "Sambisa"]
(c29-5 / and
       :op1 (c29-3 / city
                   :name (c29-0 / name
                                :op1 "Lagos"))
       :op2 (c29-6 / city
                   :name (c29-1 / name
                                :op1 "Uyo"))
       :op3 (c29-4 / city
                   :name (c29-2 / name
                                :op1 "Sambisa")))

# ::snt Majidun
# ::tokens ["Majidun"]
# ::lemmas ["Majidun"]
(c30-1 / person
       :name (c30-0 / name
                    :op1 "Majidun"))

# ::snt Ogbomoso
# ::tokens ["Ogbomoso"]
# ::lemmas ["Ogbomoso"]
(c31-1 / person
       :name (c31-0 / name
                    :op1 "Ogbomoso"))

# ::snt Delta
# ::tokens ["Delta"]
# ::lemmas ["Delta"]
(c32-0 / company
       :name (c32-1 / name
                    :op1 "Delta"))

# ::snt In the north they are normally named by their LGAs Take the present and past governors of sokoto for example; Wammako and Tambuwal.
# ::tokens ["In", "the", "north", "they", "are", "normally", "named", "by", "their", "LGAs", "Take", "the", "present", "and", "past", "governors", "of", "sokoto", "for", "example", ";", "Wammako", "and", "Tambuwal", "."]
# ::lemmas ["in", "the", "north", "they", "be", "normally", "name", "by", "their", "lga", "take", "the", "present", "and", "past", "governor", "of", "sokoto", "for", "example", ";", "Wammako", "and", "Tambuwal", "."]
(c33-15 / name-01
        :ARG0 (c33-17 / person
                      :ARG0-of (c33-4 / have-org-role-91
                                      :ARG2 (c33-8 / governor))
                      :poss (c33-7 / they)
                      :ARG0-of (c33-19 / have-org-role-91
                                       :ARG2 (c33-9 / member)))
        :ARG1 c33-7
        :ARG1-of (c33-11 / normal-02)
        :location (c33-18 / north)
        :example (c33-6 / and
                        :op1 (c33-10 / person
                                     :name (c33-13 / name
                                                   :op1 "Wammako")
                                     :ARG0-of (c33-3 / have-org-role-91
                                                     :ARG1 (c33-12 / city
                                                                   :name (c33-20 / name
                                                                                 :op1 "Sokoto"))
                                                     :ARG2 (c33-1 / governor)
                                                     :time (c33-2 / present)))
                        :op2 (c33-0 / person
                                    :name (c33-16 / name
                                                  :op1 "Tambuwal")
                                    :ARG0-of (c33-14 / have-org-role-91
                                                     :ARG2 c33-1)
                                    :time (c33-5 / past))))

# ::snt Sorry lokoja
# ::tokens ["Sorry", "lokoja"]
# ::lemmas ["sorry", "lokoja"]
(c34-2 / say-01
       :ARG1 (c34-0 / sorry-01)
       :ARG2 (c34-1 / lokoja))

# ::snt Loki Ja
# ::tokens ["Loki", "Ja"]
# ::lemmas ["Loki", "Ja"]
(c35-1 / person
       :name (c35-0 / name
                    :op1 "Loki"
                    :op2 "Ja"))

# ::snt You say wetin?
# ::tokens ["You", "say", "wetin", "?"]
# ::lemmas ["you", "say", "wetin", "?"]
(c36-3 / say-01
       :polarity (c36-0 / amr-unknown)
       :ARG0 (c36-1 / you)
       :ARG1 (c36-2 / wet-01))

# ::snt Ojodu
# ::tokens ["Ojodu"]
# ::lemmas ["Ojodu"]
(c37-1 / person
       :name (c37-0 / name
                    :op1 "Ojodu"))

# ::snt I recently found out my surname is actually my great grand mother's village name. She named her child her village name so her land will not be forgotten since shes a woman. My first son's name is already picked out ''iyede''
# ::tokens ["I", "recently", "found", "out", "my", "surname", "is", "actually", "my", "great", "grand", "mother", "'s", "village", "name", ".", "She", "named", "her", "child", "her", "village", "name", "so", "her", "land", "will", "not", "be", "forgotten", "since", "she", "s", "a", "woman", ".", "My", "first", "son", "'s", "name", "is", "already", "picked", "out", "''", "iyede", "''"]
# ::lemmas ["i", "recently", "find", "out", "my", "surname", "be", "actually", "my", "great", "grand", "mother", "'s", "village", "name", ".", "she", "name", "her", "child", "her", "village", "name", "so", "her", "land", "will", "not", "be", "forget", "since", "she", "s", "a", "woman", ".", "my", "first", "son", "'s", "name", "be", "already", "pick", "out", "''", "iyede", "''"]
(c38-17 / multi-sentence
        :snt1 (c38-21 / find-out-03
                      :ARG0 (c38-30 / i)
                      :ARG1 (c38-22 / name
                                    :poss (c38-25 / person
                                                  :ARG0-of (c38-11 / have-rel-role-91
                                                                   :ARG1 c38-30
                                                                   :ARG2 (c38-12 / mother))
                                                  :mod (c38-15 / great)
                                                  :mod (c38-3 / grand))
                                    :domain (c38-0 / surname
                                                   :poss c38-30)
                                    :ARG1-of (c38-14 / actual-02))
                      :time (c38-24 / recent))
        :snt2 (c38-19 / name-01
                      :ARG0 (c38-6 / she)
                      :ARG1 (c38-18 / person
                                    :ARG0-of (c38-29 / have-rel-role-91
                                                     :ARG1 (c38-5 / she)
                                                     :ARG2 (c38-20 / child)))
                      :ARG2 (c38-9 / village)
                      :purpose (c38-26 / forget-01
                                       :ARG1 (c38-1 / land
                                                    :poss c38-5)
                                       :ARG1-of (c38-16 / cause-01
                                                        :ARG0 (c38-28 / woman
                                                                      :domain c38-5))
                                       :polarity -))
        :snt3 (c38-4 / pick-out-03
                     :ARG1 (c38-27 / name
                                   :poss (c38-2 / person
                                                :ARG0-of (c38-10 / have-rel-role-91
                                                                 :ARG1 (c38-8 / i)
                                                                 :ARG2 (c38-23 / son
                                                                               :ord (c38-7 / ordinal-entity
                                                                                           :value 1)))))
                     :time (c38-13 / already)))

# ::snt Haven't you heard of Kurfi-an LG in Katsina, Makarfi-an LG in Kaduna, tambuwal-an LG in Sokoto, and Jega Too. All these are names of prominent Nigerians.
# ::tokens ["Have", "n't", "you", "heard", "of", "Kurfi", "-", "an", "LG", "in", "Katsina", ",", "Makarfi", "-", "an", "LG", "in", "Kaduna", ",", "tambuwal", "-", "an", "LG", "in", "Sokoto", ",", "and", "Jega", "Too", ".", "All", "these", "are", "names", "of", "prominent", "Nigerians", "."]
# ::lemmas ["have", "not", "you", "hear", "of", "Kurfi", "-", "an", "LG", "in", "Katsina", ",", "Makarfi", "-", "an", "LG", "in", "Kaduna", ",", "tambuwal", "-", "an", "LG", "in", "Sokoto", ",", "and", "Jega", "Too", ".", "all", "these", "be", "name", "of", "prominent", "Nigerians", "."]
(c39-14 / multi-sentence
        :snt1 (c39-7 / hear-01
                     :ARG0 (c39-6 / you)
                     :ARG1 (c39-11 / and
                                   :op1 (c39-23 / person
                                                :name (c39-21 / name
                                                              :op1 "Kurfi-an"
                                                              :op2 "Lang")
                                                :location (c39-17 / city
                                                                  :name (c39-16 / name
                                                                                :op1 "Katsina")))
                                   :op2 (c39-15 / person
                                                :name (c39-24 / name
                                                              :op1 "Makarfi-an"
                                                              :op2 "Lang")
                                                :location (c39-13 / city
                                                                  :name (c39-18 / name
                                                                                :op1 "Kaduna")))
                                   :op3 (c39-5 / person
                                               :name (c39-25 / name
                                                             :op1 "Tambuwal-an"
                                                             :op2 "Lang")
                                               :location (c39-4 / city
                                                                :name (c39-22 / name
                                                                              :op1 "Sokoto")))
                                   :op4 (c39-3 / person
                                               :name (c39-1 / name
                                                            :op1 "Jega")
                                               :mod (c39-10 / too)))
                     :polarity (c39-9 / amr-unknown))
        :snt2 (c39-0 / name-01
                     :ARG1 (c39-12 / person
                                   :mod (c39-20 / country
                                                :name (c39-2 / name
                                                             :op1 "Niger"))
                                   :mod (c39-26 / prominent))
                     :ARG2 (c39-19 / this
                                   :mod (c39-8 / all))))

# ::snt I've actually met someone named Nigeria
# ::tokens ["I", "'ve", "actually", "met", "someone", "named", "Nigeria"]
# ::lemmas ["i", "'ve", "actually", "meet", "someone", "name", "Nigeria"]
(c40-1 / meet-02
       :ARG0 (c40-3 / i)
       :ARG1 (c40-2 / someone
                    :name (c40-0 / name
                                 :op1 "Nigeria"))
       :ARG1-of (c40-4 / actual-02))

# ::snt Osasogie.
# ::tokens ["Osasogie", "."]
# ::lemmas ["Osasogie", "."]
(c41-1 / person
       :name (c41-0 / name
                    :op1 "Osasogie"))

# ::snt Lagos and Port Harcourt. Met guys bearing these names when I was serving in Bayelsa. It was so funny.
# ::tokens ["Lagos", "and", "Port", "Harcourt", ".", "Met", "guys", "bearing", "these", "names", "when", "I", "was", "serving", "in", "Bayelsa", ".", "It", "was", "so", "funny", "."]
# ::lemmas ["Lagos", "and", "Port", "Harcourt", ".", "Met", "guy", "bear", "these", "name", "when", "i", "be", "serve", "in", "Bayelsa", ".", "it", "be", "so", "funny", "."]
(c42-10 / multi-sentence
        :snt1 (c42-6 / and
                     :op1 (c42-12 / city
                                  :name (c42-16 / name
                                                :op1 "Lagos"))
                     :op2 (c42-8 / city
                                 :name (c42-11 / name
                                               :op1 "Port"
                                               :op2 "Harcourt")))
        :snt2 (c42-4 / meet-03
                     :ARG1 (c42-7 / guy
                                  :ARG0-of (c42-9 / bear-01
                                                  :ARG1 (c42-5 / thing
                                                               :ARG2-of (c42-17 / name-01
                                                                                :mod (c42-14 / this)))))
                     :time (c42-0 / serve-01
                                  :ARG0 (c42-18 / i)
                                  :location (c42-1 / city
                                                   :name (c42-13 / name
                                                                 :op1 "Bayelsa"))))
        :snt3 (c42-15 / funny-02
                      :ARG1 (c42-3 / it)
                      :degree (c42-2 / so)))

# ::snt Zaria, zaria , zaria
# ::tokens ["Zaria", ",", "zaria", ",", "zaria"]
# ::lemmas ["Zaria", ",", "zaria", ",", "zaria"]
(c43-1 / person
       :name (c43-0 / name
                    :op1 "Zaria"))

# ::snt Just call the child Fagba Wole then sit back and sip tea
# ::tokens ["Just", "call", "the", "child", "Fagba", "Wole", "then", "sit", "back", "and", "sip", "tea"]
# ::lemmas ["just", "call", "the", "child", "Fagba", "Wole", "then", "sit", "back", "and", "sip", "tea"]
(c45-8 / and
       :op1 (c45-5 / call-01
                   :ARG0 (c45-2 / you)
                   :ARG1 (c45-11 / child
                                 :name (c45-3 / name
                                              :op1 "Fagba"
                                              :op2 "Wole"))
                   :mod (c45-6 / just)
                   :mode imperative)
       :op2 (c45-7 / and
                   :op1 (c45-4 / sit-01
                               :ARG1 c45-2
                               :ARG2 (c45-1 / back)
                               :mode imperative)
                   :op2 (c45-0 / sip-01
                               :ARG0 c45-2
                               :ARG1 (c45-9 / tea)
                               :mode imperative)
                   :time (c45-10 / then)))

# ::snt Just Harcourt... theres no way Im putting Port
# ::tokens ["Just", "Harcourt", "...", "there", "s", "no", "way", "I", "m", "putting", "Port"]
# ::lemmas ["just", "Harcourt", "...", "there", "s", "no", "way", "i", "m", "put", "Port"]
(c46-1 / multi-sentence
       :snt1 (c46-4 / court
                    :name (c46-0 / name
                                 :op1 "Harcourt")
                    :mod (c46-5 / just))
       :snt2 (c46-3 / possible-01
                    :ARG1 (c46-2 / put-01
                                 :ARG0 (c46-6 / i)
                                 :ARG1 (c46-7 / port))
                    :polarity -))

# ::snt Harcourt
# ::tokens ["Harcourt"]
# ::lemmas ["Harcourt"]
(c47-1 / person
       :name (c47-0 / name
                    :op1 "Harcourt"))

# ::snt I used to know a girl named Abuja
# ::tokens ["I", "used", "to", "know", "a", "girl", "named", "Abuja"]
# ::lemmas ["i", "use", "to", "know", "a", "girl", "name", "Abuja"]
(c48-1 / know-02
       :ARG0 (c48-2 / i)
       :ARG1 (c48-3 / girl
                    :name (c48-0 / name
                                 :op1 "Abuja"))
       :time (c48-4 / use-03))

# ::snt "Harcourt" plenty.
# ::tokens ["\"", "Harcourt", "\"", "plenty", "."]
# ::lemmas ["\"", "Harcourt", "\"", "plenty", "."]
(c49-1 / plenty
       :topic (c49-0 / murder-01
                     :ARG0 (c49-2 / person)))
