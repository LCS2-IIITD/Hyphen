# ::snt Omggg ohh noo Thanks for your answer!!
# ::tokens ["Omggg", "ohh", "noo", "Thanks", "for", "your", "answer", "!", "!"]
# ::lemmas ["Omggg", "ohh", "noo", "thank", "for", "your", "answer", "!", "!"]
(c1-2 / thank-01
      :ARG0 (c1-3 / i)
      :ARG1 (c1-1 / you)
      :ARG2 (c1-4 / answer-01
                  :ARG0 c1-1)
      :mod (c1-0 / oh-no
                 :mode expressive))

# ::snt Unlikely. Unless a show is a runaway ratings hit, is about promoting the new shows in tha back half of the season. OUAT is neither new nor a smash success. Expect news at the end of the season w/ . Sorry.
# ::tokens ["Unlikely", ".", "Unless", "a", "show", "is", "a", "runaway", "ratings", "hit", ",", "is", "about", "promoting", "the", "new", "shows", "in", "tha", "back", "half", "of", "the", "season", ".", "OUAT", "is", "neither", "new", "nor", "a", "smash", "success", ".", "Expect", "news", "at", "the", "end", "of", "the", "season", "w/", ".", "Sorry", "."]
# ::lemmas ["unlikely", ".", "unless", "a", "show", "be", "a", "runaway", "rating", "hit", ",", "be", "about", "promote", "the", "new", "show", "in", "tha", "back", "half", "of", "the", "season", ".", "OUAT", "be", "neither", "new", "nor", "a", "smash", "success", ".", "expect", "news", "at", "the", "end", "of", "the", "season", "w/", ".", "sorry", "."]
(c2-10 / multi-sentence
       :snt1 (c2-17 / resemble-01
                    :polarity -)
       :snt2 (c2-13 / concern-02
                    :ARG0 (c2-19 / promote-02
                                 :ARG1 (c2-0 / show
                                             :ARG1-of (c2-15 / new-01))
                                 :time (c2-6 / half
                                             :part-of (c2-4 / season)
                                             :mod (c2-8 / back)))
                    :ARG1 (c2-3 / show
                                :ARG1-of (c2-12 / new-01))
                    :polarity -)
       :snt3 (c2-5 / or
                   :op1 (c2-20 / new-01
                               :ARG1 (c2-2 / broadcast-program
                                           :name (c2-14 / name
                                                        :op1 "OUAT"))
                               :polarity -)
                   :op2 (c2-16 / succeed-01
                               :ARG0 c2-2
                               :mod (c2-1 / smash)
                               :polarity -))
       :snt4 (c2-18 / expect-01
                    :ARG1 (c2-21 / news)
                    :time (c2-7 / end-01
                                :ARG1 (c2-9 / season))
                    :ARG1-of (c2-11 / sorry-01)))

# ::snt Agreed!!!
# ::tokens ["Agreed", "!", "!", "!"]
# ::lemmas ["agree", "!", "!", "!"]
(c3-0 / agree-01
      :mode expressive)

# ::snt Me too, it would have been a perfect way to end it.
# ::tokens ["Me", "too", ",", "it", "would", "have", "been", "a", "perfect", "way", "to", "end", "it", "."]
# ::lemmas ["i", "too", ",", "it", "would", "have", "be", "a", "perfect", "way", "to", "end", "it", "."]
(c4-0 / say-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-4 / way
                  :ARG1-of (c4-3 / perfect-02)
                  :manner-of (c4-2 / end-01
                                   :ARG1 (c4-1 / it
                                               :domain-of c4-4)))
      :ARG2 c4-5
      :mod (c4-6 / too))

# ::snt I get why the actor who is playing Henry is leaving...I think they should have ended it there, no need for a season !
# ::tokens ["I", "get", "why", "the", "actor", "who", "is", "playing", "Henry", "is", "leaving", "...", "I", "think", "they", "should", "have", "ended", "it", "there", ",", "no", "need", "for", "a", "season", "!"]
# ::lemmas ["i", "get", "why", "the", "actor", "who", "be", "play", "Henry", "be", "leave", "...", "i", "think", "they", "should", "have", "end", "it", "there", ",", "no", "need", "for", "a", "season", "!"]
(c5-9 / multi-sentence
      :snt1 (c5-7 / get-01
                  :ARG0 (c5-18 / i)
                  :ARG1 (c5-6 / thing
                              :ARG0-of (c5-12 / cause-01
                                              :ARG1 (c5-2 / leave-11
                                                          :ARG0 (c5-17 / person
                                                                       :ARG0-of (c5-5 / act-01)
                                                                       :ARG0-of (c5-10 / play-02
                                                                                       :ARG1 (c5-3 / person
                                                                                                   :name (c5-14 / name
                                                                                                                :op1 "Henry"))))))))
      :snt2 (c5-13 / think-01
                   :ARG0 (c5-4 / i)
                   :ARG1 (c5-15 / recommend-01
                                :ARG1 (c5-16 / end-01
                                             :ARG0 (c5-19 / they)
                                             :ARG1 (c5-8 / it)
                                             :location (c5-1 / there))
                                :ARG1-of c5-12
                                :ARG0 (c5-11 / need-01
                                             :ARG1 (c5-0 / season)
                                             :polarity -))))

# ::snt HaHa told ya!
# ::tokens ["HaHa", "told", "ya", "!"]
# ::lemmas ["HaHa", "tell", "ya", "!"]
(c6-2 / tell-01
      :ARG2 (c6-0 / you)
      :mod (c6-1 / ha
                 :mode expressive))

# ::snt There were tears!
# ::tokens ["There", "were", "tears", "!"]
# ::lemmas ["there", "be", "tear", "!"]
(c7-0 / tear)

# ::snt Ah wounder! I wont ruin it for u then
# ::tokens ["Ah", "wounder", "!", "I", "wo", "nt", "ruin", "it", "for", "u", "then"]
# ::lemmas ["ah", "wounder", "!", "i", "will", "not", "ruin", "it", "for", "u", "then"]
(c8-1 / multi-sentence
      :snt1 (c8-7 / ah-01
                  :ARG1 (c8-4 / wounder)
                  :mode expressive)
      :snt2 (c8-3 / ruin-01
                  :ARG0 (c8-6 / i)
                  :ARG1 (c8-2 / it)
                  :beneficiary (c8-0 / you)
                  :mod (c8-5 / then)
                  :polarity -))

# ::snt Ahhh! I can't watch it until Wed when it comes on Netflix!
# ::tokens ["Ahhh", "!", "I", "ca", "n't", "watch", "it", "until", "We", "d", "when", "it", "comes", "on", "Netflix", "!"]
# ::lemmas ["ahhh", "!", "i", "can", "not", "watch", "it", "until", "we", "d", "when", "it", "come", "on", "Netflix", "!"]
(c9-2 / possible-01
      :ARG1 (c9-4 / watch-01
                  :ARG0 (c9-6 / i)
                  :ARG1 (c9-1 / it))
      :time (c9-9 / until
                  :op1 (c9-8 / date-entity
                             :weekday (c9-3 / wednesday)
                             :time-of (c9-5 / come-on-08
                                            :ARG1 c9-1
                                            :medium (c9-10 / company
                                                           :name (c9-0 / name
                                                                       :op1 "Netflix")))))
      :mod (c9-7 / ah
                 :mode expressive)
      :polarity -
      :mode expressive)

# ::snt OMG OMG just watched the season finale of ! Ill bet you any money you cry!
# ::tokens ["OMG", "OMG", "just", "watched", "the", "season", "finale", "of", "!", "Ill", "bet", "you", "any", "money", "you", "cry", "!"]
# ::lemmas ["OMG", "OMG", "just", "watch", "the", "season", "finale", "of", "!", "Ill", "bet", "you", "any", "money", "you", "cry", "!"]
(c10-4 / multi-sentence
       :snt1 (c10-0 / oh-my-god
                    :mode expressive)
       :snt2 (c10-7 / watch-01
                    :ARG0 (c10-10 / i)
                    :ARG1 (c10-5 / season
                                 :mod (c10-1 / final))
                    :time (c10-9 / just))
       :snt3 (c10-2 / bet-01
                    :ARG0 c10-10
                    :ARG1 (c10-6 / money
                                 :mod (c10-11 / any)
                                 :ARG1-of (c10-8 / cry-02
                                                 :ARG0 (c10-3 / you
                                                              :ARG2-of c10-2)))))

# ::snt Yeah thats most of the main characters
# ::tokens ["Yeah", "that", "s", "most", "of", "the", "main", "characters"]
# ::lemmas ["yeah", "that", "s", "most", "of", "the", "main", "character"]
(c11-0 / character
       :mod (c11-2 / main)
       :quant (c11-1 / most)
       :domain (c11-3 / that))

# ::snt Me too...I'm not sure I'll watch it again...won't be the same!!
# ::tokens ["Me", "too", "...", "I'm", "not", "sure", "I", "'ll", "watch", "it", "again", "...", "won't", "be", "the", "same", "!", "!"]
# ::lemmas ["i", "too", "...", "i'm", "not", "sure", "i", "'ll", "watch", "it", "again", "...", "won't", "be", "the", "same", "!", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-7 / i
                    :mod (c12-8 / too))
       :snt2 (c12-2 / sure-02
                    :ARG0 c12-7
                    :ARG1 (c12-6 / watch-01
                                 :ARG0 c12-7
                                 :ARG1 (c12-3 / it)
                                 :mod (c12-4 / again))
                    :ARG0-of (c12-5 / mean-01
                                    :ARG1 (c12-0 / same-01
                                                 :ARG1 c12-3
                                                 :polarity -))
                    :polarity -))

# ::snt Think Id rather it ended if all those left
# ::tokens ["Think", "I", "d", "rather", "it", "ended", "if", "all", "those", "left"]
# ::lemmas ["think", "i", "d", "rather", "it", "end", "if", "all", "those", "leave"]
(c13-7 / think-01
       :ARG0 (c13-6 / i)
       :ARG1 (c13-4 / prefer-01
                    :ARG0 c13-6
                    :ARG1 (c13-3 / end-01
                                 :ARG1 (c13-1 / it)
                                 :condition (c13-5 / leave-17
                                                   :ARG0 (c13-0 / person
                                                                :mod (c13-2 / all)
                                                                :mod (c13-8 / that))))))

# ::snt Noooooooo
# ::tokens ["Noooooooo"]
# ::lemmas ["Noooooooo"]
(c14-0 / no
       :mode expressive)

# ::snt I just saw this...interview with producers...
# ::tokens ["I", "just", "saw", "this", "...", "interview", "with", "producers", "..."]
# ::lemmas ["i", "just", "see", "this", "...", "interview", "with", "producer", "..."]
(c15-1 / see-01
       :ARG0 (c15-5 / i)
       :ARG1 (c15-6 / and
                    :op1 (c15-4 / this)
                    :op2 (c15-2 / interview-01
                                :ARG1 (c15-3 / person
                                             :ARG0-of (c15-0 / produce-01))))
       :mod (c15-7 / just))

# ::snt Charming and Snow have confirmed they are staying I believe
# ::tokens ["Charming", "and", "Snow", "have", "confirmed", "they", "are", "staying", "I", "believe"]
# ::lemmas ["Charming", "and", "Snow", "have", "confirm", "they", "be", "stay", "i", "believe"]
(c16-0 / believe-01
       :ARG0 (c16-7 / i)
       :ARG1 (c16-6 / confirm-01
                    :ARG0 (c16-8 / and
                                 :op1 (c16-5 / person
                                             :name (c16-1 / name
                                                          :op1 "Charming"))
                                 :op2 (c16-2 / person
                                             :name (c16-4 / name
                                                          :op1 "Snow")))
                    :ARG1 (c16-3 / stay-01
                                 :ARG1 c16-8)))

# ::snt Oh no....I hope this isn't true!
# ::tokens ["Oh", "no", "....", "I", "hope", "this", "is", "n't", "true", "!"]
# ::lemmas ["oh", "no", "....", "i", "hope", "this", "be", "not", "true", "!"]
(c17-1 / hope-01
       :ARG0 (c17-3 / i)
       :ARG1 (c17-2 / true-01
                    :ARG1 (c17-4 / this)
                    :polarity -)
       :mod (c17-0 / oh-no
                   :mode expressive))

# ::snt No way! Although shes kinda easy to move on.. but Emma Swan Im still in shock with that
# ::tokens ["No", "way", "!", "Although", "she", "s", "kinda", "easy", "to", "move", "on", "..", "but", "Emma", "Swan", "I", "m", "still", "in", "shock", "with", "that"]
# ::lemmas ["no", "way", "!", "although", "she", "s", "kinda", "easy", "to", "move", "on", "..", "but", "Emma", "Swan", "i", "m", "still", "in", "shock", "with", "that"]
(c18-2 / multi-sentence
       :snt1 (c18-7 / way
                    :polarity -
                    :mode expressive)
       :snt2 (c18-3 / shock-01
                    :ARG0 (c18-9 / that)
                    :ARG1 (c18-8 / i)
                    :mod (c18-0 / still)
                    :concession (c18-4 / easy-05
                                       :ARG1 (c18-5 / move-01
                                                    :ARG1 (c18-10 / she)
                                                    :direction (c18-1 / on))
                                       :degree (c18-6 / kind-of))))

# ::snt And another!
# ::tokens ["And", "another", "!"]
# ::lemmas ["and", "another", "!"]
(c19-1 / and
       :op2 (c19-0 / another))

# ::snt Yeah but Hook is staying so they cant be running off happily into the sunset so I dont like her chances of surviving
# ::tokens ["Yeah", "but", "Hook", "is", "staying", "so", "they", "ca", "nt", "be", "running", "off", "happily", "into", "the", "sunset", "so", "I", "do", "nt", "like", "her", "chances", "of", "surviving"]
# ::lemmas ["yeah", "but", "Hook", "be", "stay", "so", "they", "can", "not", "be", "run", "off", "happily", "into", "the", "sunset", "so", "i", "do", "not", "like", "her", "chance", "of", "survive"]
(c20-7 / contrast-01
       :ARG2 (c20-3 / stay-01
                    :ARG1 (c20-6 / person
                                 :name (c20-1 / name
                                              :op1 "Hook"))
                    :purpose (c20-2 / possible-01
                                    :ARG1 (c20-4 / run-off-24
                                                 :ARG0 (c20-10 / they)
                                                 :ARG1-of (c20-5 / happy-01)
                                                 :direction (c20-0 / sunset))
                                    :polarity -)
                    :ARG0-of (c20-12 / cause-01
                                     :ARG1 (c20-11 / dislike-01
                                                   :ARG0 (c20-9 / i)
                                                   :ARG1 (c20-8 / chance-02
                                                                :ARG0 c20-6
                                                                :ARG1 (c20-13 / survive-01
                                                                              :ARG0 c20-6))))))

# ::snt Yay!! Although No Emma Swan!
# ::tokens ["Yay", "!", "!", "Although", "No", "Emma", "Swan", "!"]
# ::lemmas ["Yay", "!", "!", "although", "no", "Emma", "Swan", "!"]
(c21-2 / multi-sentence
       :snt1 (c21-0 / yay)
       :snt2 (c21-3 / have-concession-91
                    :ARG1 (c21-1 / no
                                 :name (c21-4 / name
                                              :op1 "Emma"
                                              :op2 "Swan")
                                 :mode expressive)))

# ::snt Glad it is renewed but a little concerned how it will be without all those main characters returning
# ::tokens ["Glad", "it", "is", "renewed", "but", "a", "little", "concerned", "how", "it", "will", "be", "without", "all", "those", "main", "characters", "returning"]
# ::lemmas ["glad", "it", "be", "renew", "but", "a", "little", "concerned", "how", "it", "will", "be", "without", "all", "those", "main", "character", "return"]
(c22-5 / contrast-01
       :ARG1 (c22-9 / glad-02
                    :ARG0 (c22-2 / renew-01
                                 :ARG1 (c22-7 / it))
                    :ARG1 (c22-1 / i))
       :ARG2 (c22-12 / concern-01
                     :ARG0 c22-2
                     :ARG1 c22-1
                     :ARG2 (c22-8 / thing
                                  :manner-of (c22-11 / return-01
                                                     :ARG1 (c22-6 / character
                                                                  :mod (c22-0 / main)
                                                                  :mod (c22-3 / all)
                                                                  :mod (c22-10 / that))
                                                     :polarity -))
                     :degree (c22-4 / little)))

# ::snt YAY!!
# ::tokens ["YAY", "!", "!"]
# ::lemmas ["YAY", "!", "!"]
(c23-0 / yay
       :mode expressive)

# ::snt Awesome so without Emma swan I guess
# ::tokens ["Awesome", "so", "without", "Emma", "swan", "I", "guess"]
# ::lemmas ["Awesome", "so", "without", "Emma", "swan", "i", "guess"]
(c24-3 / cause-01
       :ARG0 (c24-1 / swan-01
                    :ARG1 (c24-2 / person
                                 :name (c24-0 / name
                                              :op1 "Emma"))
                    :ARG1-of (c24-6 / guess-01
                                    :ARG0 (c24-4 / i))
                    :polarity -)
       :ARG1 (c24-5 / awe-01))

# ::snt I that is being renewed!!
# ::tokens ["I", "that", "is", "being", "renewed", "!", "!"]
# ::lemmas ["i", "that", "be", "be", "renew", "!", "!"]
(c26-0 / renew-01
       :ARG1 (c26-1 / i)
       :mode expressive)

# ::snt Yes! Keep it coming with the good news, ! You're being a lot better than Or !
# ::tokens ["Yes", "!", "Keep", "it", "coming", "with", "the", "good", "news", ",", "!", "You", "'re", "being", "a", "lot", "better", "than", "Or", "!"]
# ::lemmas ["yes", "!", "keep", "it", "come", "with", "the", "good", "news", ",", "!", "you", "be", "be", "a", "lot", "well", "than", "or", "!"]
(c27-2 / multi-sentence
       :snt1 (c27-1 / yes
                    :mode expressive)
       :snt2 (c27-6 / keep-02
                    :ARG0 (c27-13 / you)
                    :ARG1 (c27-10 / come-01
                                  :ARG1 (c27-12 / it)
                                  :accompanier (c27-3 / news
                                                      :ARG1-of (c27-4 / good-02
                                                                      :snt3-of c27-2)))
                    :mode imperative)
       :ARG1 (c27-0 / you)
       :ARG2-of (c27-5 / have-degree-91
                       :ARG1 c27-0
                       :ARG3 (c27-7 / more
                                    :quant (c27-8 / lot))
                       :ARG4 (c27-9 / person
                                    :name (c27-11 / name
                                                  :op1 "Or"))))

# ::snt That is horrible news. I don't want to see Hook lose his everything with Emma! But that's what I get w/a season doomed for cancellation!
# ::tokens ["That", "is", "horrible", "news", ".", "I", "do", "n't", "want", "to", "see", "Hook", "lose", "his", "everything", "with", "Emma", "!", "But", "that", "'s", "what", "I", "get", "w", "/", "a", "season", "doomed", "for", "cancellation", "!"]
# ::lemmas ["that", "be", "horrible", "news", ".", "i", "do", "not", "want", "to", "see", "Hook", "lose", "his", "everything", "with", "Emma", "!", "but", "that", "be", "what", "i", "get", "w", "/", "a", "season", "doom", "for", "cancellation", "!"]
(c28-2 / multi-sentence
       :snt1 (c28-1 / news
                    :mod (c28-7 / horrible)
                    :domain (c28-15 / that))
       :snt2 (c28-12 / want-01
                     :ARG0 (c28-14 / i)
                     :ARG1 (c28-3 / see-01
                                  :ARG0 c28-14
                                  :ARG1 (c28-8 / lose-02
                                               :ARG0 (c28-9 / person
                                                            :name (c28-10 / name
                                                                          :op1 "Hook"))
                                               :ARG1 (c28-6 / everything
                                                            :poss c28-9)
                                               :ARG3 (c28-4 / person
                                                            :name (c28-11 / name
                                                                          :op1 "Emma"))))
                     :polarity -)
       :snt3 (c28-13 / contrast-01
                     :ARG2 (c28-16 / doom-01
                                   :ARG1 (c28-5 / i)
                                   :ARG2 (c28-17 / cancel-01
                                                 :ARG1 (c28-0 / season)))))

# ::snt That's Great News!!!!!
# ::tokens ["That", "'s", "Great", "News", "!", "!", "!", "!", "!"]
# ::lemmas ["that", "be", "Great", "News", "!", "!", "!", "!", "!"]
(c29-1 / news
       :mod (c29-0 / great)
       :domain (c29-2 / that))

# ::snt You and me!
# ::tokens ["You", "and", "me", "!"]
# ::lemmas ["you", "and", "i", "!"]
(c30-2 / and
       :op1 (c30-0 / you)
       :op2 (c30-1 / i))

# ::snt Girl same I havent reached the acceptance stage
# ::tokens ["Girl", "same", "I", "have", "nt", "reached", "the", "acceptance", "stage"]
# ::lemmas ["girl", "same", "i", "have", "not", "reach", "the", "acceptance", "stage"]
(c31-1 / multi-sentence
       :snt1 (c31-6 / girl
                    :ARG1-of (c31-2 / same-01))
       :snt2 (c31-3 / reach-01
                    :ARG0 (c31-4 / i)
                    :ARG1 (c31-0 / stage
                                 :mod (c31-5 / accept-01))
                    :polarity -))

# ::snt IM NOT READY TO SAY GOODBYE
# ::tokens ["IM", "NOT", "READY", "TO", "SAY", "GOODBYE"]
# ::lemmas ["IM", "not", "ready", "to", "say", "GOODBYE"]
(c32-1 / read-01
       :ARG0 (c32-2 / i)
       :ARG1 (c32-3 / say-01
                    :ARG0 c32-2
                    :ARG1 (c32-0 / goodbye))
       :polarity -)

# ::snt sadly... Such a big mess when /3 of the cast is leaving. A huge mistake which will provide embarrassingly low ratings
# ::tokens ["sadly", "...", "Such", "a", "big", "mess", "when", "/3", "of", "the", "cast", "is", "leaving", ".", "A", "huge", "mistake", "which", "will", "provide", "embarrassingly", "low", "ratings"]
# ::lemmas ["sadly", "...", "such", "a", "big", "mess", "when", "/3", "of", "the", "cast", "be", "leave", ".", "a", "huge", "mistake", "which", "will", "provide", "embarrassingly", "low", "rating"]
(c33-2 / multi-sentence
       :snt1 (c33-4 / sad-02)
       :snt2 (c33-7 / mess
                    :mod (c33-1 / big
                                :degree (c33-0 / such))
                    :time (c33-8 / leave-11
                                 :ARG0 (c33-9 / person
                                              :ARG1-of (c33-12 / include-91
                                                               :ARG2 (c33-3 / person
                                                                            :ARG1-of (c33-11 / cast-02))
                                                               :ARG3 "1/3"))))
       :snt3 (c33-15 / mistake-02
                     :mod (c33-10 / huge)
                     :ARG0-of (c33-13 / provide-01
                                      :ARG1 (c33-5 / rate
                                                   :ARG1-of (c33-14 / low-04
                                                                    :ARG0-of (c33-6 / embarrass-01))))))

# ::snt surprised they gave the renewal.
# ::tokens ["surprised", "they", "gave", "the", "renewal", "."]
# ::lemmas ["surprised", "they", "give", "the", "renewal", "."]
(c34-3 / surprise-01
       :ARG0 (c34-0 / renew-01
                    :ARG0 (c34-1 / they))
       :ARG1 (c34-2 / i))

# ::snt WHY would you use that picture????
# ::tokens ["WHY", "would", "you", "use", "that", "picture", "?", "?", "?", "?"]
# ::lemmas ["why", "would", "you", "use", "that", "picture", "?", "?", "?", "?"]
(c35-4 / use-01
       :ARG0 (c35-0 / you)
       :ARG1 (c35-1 / picture
                    :mod (c35-2 / that))
       :ARG2 (c35-3 / amr-unknown))

# ::snt But without Jennifer Morrison?
# ::tokens ["But", "without", "Jennifer", "Morrison", "?"]
# ::lemmas ["but", "without", "Jennifer", "Morrison", "?"]
(c36-2 / contrast-01
       :ARG2 (c36-4 / accompany-01
                    :ARG0 (c36-1 / person
                                 :name (c36-0 / name
                                              :op1 "Jennifer"
                                              :op2 "Morrison"))
                    :polarity (c36-3 / amr-unknown)
                    :polarity -))

# ::snt well change the pic for a s7. it's not ouat anymore.
# ::tokens ["well", "change", "the", "pic", "for", "a", "s7", ".", "it", "'s", "not", "ouat", "anymore", "."]
# ::lemmas ["well", "change", "the", "pic", "for", "a", "s7", ".", "it", "be", "not", "ouat", "anymore", "."]
(c37-4 / change-01
       :ARG0 (c37-1 / you)
       :ARG1 (c37-3 / picture)
       :mod (c37-5 / well)
       :purpose (c37-2 / s7)
       :ARG1-of (c37-8 / cause-01
                       :ARG0 (c37-0 / ouat
                                    :domain (c37-6 / it)
                                    :time (c37-7 / anymore)
                                    :polarity -))
       :mode imperative)

# ::snt anything on quantico?
# ::tokens ["anything", "on", "quantico", "?"]
# ::lemmas ["anything", "on", "quantico", "?"]
(c38-2 / anything
       :polarity (c38-1 / amr-unknown)
       :topic (c38-0 / quantico))

# ::snt Why would you use that picture??? What's wrong with you? isn't coming back this just hurts if you use that pic
# ::tokens ["Why", "would", "you", "use", "that", "picture", "?", "?", "?", "What", "'s", "wrong", "with", "you", "?", "is", "n't", "coming", "back", "this", "just", "hurts", "if", "you", "use", "that", "pic"]
# ::lemmas ["why", "would", "you", "use", "that", "picture", "?", "?", "?", "what", "be", "wrong", "with", "you", "?", "be", "not", "come", "back", "this", "just", "hurt", "if", "you", "use", "that", "pic"]
(c39-2 / multi-sentence
       :snt1 (c39-5 / cause-01
                    :ARG0 (c39-9 / amr-unknown)
                    :ARG1 (c39-14 / use-01
                                  :ARG0 (c39-1 / you)
                                  :ARG1 (c39-3 / picture
                                               :mod (c39-7 / that))))
       :snt2 (c39-6 / wrong-02
                    :ARG1 (c39-8 / amr-unknown)
                    :ARG2 (c39-10 / you))
       :snt3 (c39-15 / come-01
                     :ARG1 (c39-11 / this)
                     :direction (c39-0 / back)
                     :condition (c39-4 / use-01
                                       :ARG0 c39-10
                                       :ARG1 c39-3
                                       :mod (c39-12 / that))
                     :polarity -)
       :mod (c39-13 / just))

# ::snt Misleading to use that pic when they're destroying Emma's happy ending. Don't want it.
# ::tokens ["Misleading", "to", "use", "that", "pic", "when", "they", "'re", "destroying", "Emma", "'s", "happy", "ending", ".", "Do", "n't", "want", "it", "."]
# ::lemmas ["mislead", "to", "use", "that", "pic", "when", "they", "be", "destroy", "Emma", "'s", "happy", "ending", ".", "do", "not", "want", "it", "."]
(c40-0 / multi-sentence
       :snt1 (c40-4 / mislead-01
                    :ARG1 (c40-11 / use-01
                                  :ARG1 (c40-5 / pic
                                               :mod (c40-9 / that))
                                  :time (c40-10 / destroy-01
                                                :ARG0 (c40-12 / they)
                                                :ARG1 (c40-3 / end-01
                                                             :ARG1 (c40-6 / happy-01)
                                                             :ARG2 (c40-1 / person
                                                                          :name (c40-2 / name
                                                                                       :op1 "Emma"))))))
       :snt2 (c40-7 / want-01
                    :ARG0 (c40-8 / i)
                    :ARG1 c40-3
                    :polarity -))

# ::snt Good god why?
# ::tokens ["Good", "god", "why", "?"]
# ::lemmas ["good", "god", "why", "?"]
(c41-0 / god
       :ARG1-of (c41-2 / good-02)
       :ARG0-of (c41-1 / cause-01
                       :ARG1 (c41-3 / amr-unknown)))

# ::snt That's Great News!!!!!
# ::tokens ["That", "'s", "Great", "News", "!", "!", "!", "!", "!"]
# ::lemmas ["that", "be", "Great", "News", "!", "!", "!", "!", "!"]
(c42-1 / news
       :mod (c42-0 / great)
       :domain (c42-2 / that))

# ::snt I love it so much!
# ::tokens ["I", "love", "it", "so", "much", "!"]
# ::lemmas ["i", "love", "it", "so", "much", "!"]
(c43-3 / love-01
       :ARG0 (c43-4 / i)
       :ARG1 (c43-2 / it)
       :degree (c43-0 / much
                      :degree (c43-1 / so)))

# ::snt Not going to be the same without
# ::tokens ["Not", "going", "to", "be", "the", "same", "without"]
# ::lemmas ["not", "go", "to", "be", "the", "same", "without"]
(c44-1 / same-01
       :condition (c44-0 / have-03
                         :polarity -)
       :polarity -)

# ::snt Yes however Rebecca Madder(Zelena) was fired I know it was a creative decision but still
# ::tokens ["Yes", "however", "Rebecca", "Madder(Zelena", ")", "was", "fired", "I", "know", "it", "was", "a", "creative", "decision", "but", "still"]
# ::lemmas ["yes", "however", "Rebecca", "Madder(Zelena", ")", "be", "fire", "i", "know", "it", "be", "a", "creative", "decision", "but", "still"]
(c45-8 / contrast-01
       :ARG1 (c45-6 / know-01
                    :ARG0 (c45-9 / i)
                    :ARG1 (c45-10 / decide-01
                                  :ARG1 (c45-0 / fire-02
                                               :ARG1 (c45-7 / person
                                                            :name (c45-1 / name
                                                                         :op1 "Rebecca"
                                                                         :op2 "Madder")
                                                            :ARG1-of (c45-2 / mean-01
                                                                            :ARG2 (c45-3 / person
                                                                                         :name (c45-5 / name
                                                                                                      :op1 "Zelena")))))
                                  :mod (c45-11 / creative)))
       :ARG2 (c45-4 / still))

# ::snt He can't until his contact is up love that's how contracts work
# ::tokens ["He", "ca", "n't", "until", "his", "contact", "is", "up", "love", "that", "'s", "how", "contracts", "work"]
# ::lemmas ["he", "can", "not", "until", "his", "contact", "be", "up", "love", "that", "be", "how", "contract", "work"]
(c46-7 / and
       :op1 (c46-2 / possible-01
                   :ARG1 (c46-0 / be-temporally-at-91
                                :ARG1 (c46-5 / contact-01
                                             :ARG0 (c46-1 / he))
                                :ARG2 (c46-8 / until
                                             :op1 (c46-4 / up-03
                                                         :ARG1 c46-5)))
                   :polarity -)
       :op2 (c46-6 / work-09
                   :ARG1 (c46-9 / contract-02)
                   :manner (c46-3 / love-01)))

# ::snt I don't really like it either but I love the show and the characters that will still be on the show so I'm watching....
# ::tokens ["I", "do", "n't", "really", "like", "it", "either", "but", "I", "love", "the", "show", "and", "the", "characters", "that", "will", "still", "be", "on", "the", "show", "so", "I", "'m", "watching", "...."]
# ::lemmas ["i", "do", "not", "really", "like", "it", "either", "but", "i", "love", "the", "show", "and", "the", "character", "that", "will", "still", "be", "on", "the", "show", "so", "i", "be", "watch", "...."]
(c47-7 / contrast-01
       :ARG1 (c47-12 / dislike-01
                     :ARG0 (c47-10 / i)
                     :ARG1 (c47-3 / it)
                     :mod (c47-5 / either)
                     :degree (c47-4 / really))
       :ARG2 (c47-6 / love-01
                    :ARG0 c47-10
                    :ARG1 (c47-11 / and
                                  :op1 (c47-2 / show)
                                  :op2 (c47-13 / character
                                               :ARG1-of (c47-1 / be-located-at-91
                                                               :ARG2 c47-2
                                                               :mod (c47-0 / still))))
                    :ARG0-of (c47-9 / cause-01
                                    :ARG1 (c47-8 / watch-01
                                                 :ARG0 c47-10))))

# ::snt "bringing back several popular regular cast members"So, like, three of them? That's not "several", that's just THREE.
# ::tokens ["\"", "bringing", "back", "several", "popular", "regular", "cast", "members\"So", ",", "like", ",", "three", "of", "them", "?", "That", "'s", "not", "\"", "several", "\"", ",", "that", "'s", "just", "THREE", "."]
# ::lemmas ["\"", "bring", "back", "several", "popular", "regular", "cast", "members\"So", ",", "like", ",", "three", "of", "they", "?", "that", "be", "not", "\"", "several", "\"", ",", "that", "be", "just", "three", "."]
(c48-1 / multi-sentence
       :snt1 (c48-0 / bring-01
                    :ARG1 (c48-6 / person
                                 :ARG0-of (c48-5 / have-org-role-91
                                                 :ARG1 (c48-9 / cast-03)
                                                 :ARG2 (c48-7 / member
                                                              :ARG1-of (c48-4 / regular-03)))
                                 :quant (c48-3 / several)
                                 :ARG1-of (c48-2 / popular-02))
                    :direction (c48-8 / back)
                    :ARG1-of (c48-14 / request-confirmation-91))
       :snt2 (c48-15 / contrast-01
                     :ARG1 c48-3
                     :domain (c48-12 / that)
                     :polarity -)
       :ARG2 (c48-13 / three
                     :domain (c48-11 / that)
                     :mod (c48-10 / just)))

# ::snt Yeah and? I don't need to be a fan of it. Might don't even watch it. I don't like the idea. They should've cancelled it..
# ::tokens ["Yeah", "and", "?", "I", "do", "n't", "need", "to", "be", "a", "fan", "of", "it", ".", "Might", "do", "n't", "even", "watch", "it", ".", "I", "do", "n't", "like", "the", "idea", ".", "They", "should", "'ve", "cancelled", "it", ".."]
# ::lemmas ["yeah", "and", "?", "i", "do", "not", "need", "to", "be", "a", "fan", "of", "it", ".", "might", "do", "not", "even", "watch", "it", ".", "i", "do", "not", "like", "the", "idea", ".", "they", "should", "'ve", "cancel", "it", ".."]
(c49-7 / multi-sentence
       :snt1 (c49-4 / and
                    :polarity (c49-3 / amr-unknown)
                    :op2 (c49-12 / need-01
                                 :ARG0 (c49-17 / i)
                                 :ARG1 (c49-11 / fan
                                               :domain c49-17
                                               :topic (c49-2 / it))
                                 :polarity -))
       :snt2 (c49-15 / possible-01
                     :ARG1 (c49-16 / watch-01
                                   :ARG0 (c49-6 / i)
                                   :ARG1 (c49-0 / it)
                                   :mod (c49-14 / even)
                                   :polarity -))
       :snt3 (c49-18 / dislike-01
                     :ARG0 (c49-10 / i)
                     :ARG1 (c49-1 / idea))
       :snt4 (c49-13 / recommend-01
                     :ARG1 (c49-9 / cancel-01
                                  :ARG0 (c49-5 / they)
                                  :ARG1 (c49-8 / it))))

# ::snt But it's not the same
# ::tokens ["But", "it", "'s", "not", "the", "same"]
# ::lemmas ["but", "it", "be", "not", "the", "same"]
(c50-0 / contrast-01
       :ARG2 (c50-2 / same-01
                    :ARG1 (c50-1 / it)
                    :polarity -))
