# ::snt Stop bringing older shows back. Yes it is nice every once in a while, but it's getting crazy. I think screenwriters have lost their creativity and they can't come up with anything new!!!
# ::tokens ["Stop", "bringing", "older", "shows", "back", ".", "Yes", "it", "is", "nice", "every", "once", "in", "a", "while", ",", "but", "it", "'s", "getting", "crazy", ".", "I", "think", "screenwriters", "have", "lost", "their", "creativity", "and", "they", "ca", "n't", "come", "up", "with", "anything", "new", "!", "!", "!"]
# ::lemmas ["stop", "bring", "old", "show", "back", ".", "yes", "it", "be", "nice", "every", "once", "in", "a", "while", ",", "but", "it", "be", "get", "crazy", ".", "i", "think", "screenwriter", "have", "lose", "their", "creativity", "and", "they", "can", "not", "come", "up", "with", "anything", "new", "!", "!", "!"]
(c2-19 / multi-sentence
       :snt1 (c2-0 / stop-01
                   :ARG0 (c2-8 / you)
                   :ARG1 (c2-18 / bring-01
                                :ARG0 c2-8
                                :ARG1 (c2-6 / show-04
                                            :ARG1-of (c2-10 / have-degree-91
                                                            :ARG2 (c2-7 / old)
                                                            :ARG3 (c2-11 / more)))
                                :direction (c2-1 / back))
                   :mode imperative)
       :snt2 (c2-22 / contrast-01
                    :ARG1 (c2-24 / nice-01
                                 :ARG1 (c2-28 / it)
                                 :frequency (c2-25 / rate-entity-91
                                                   :ARG2 (c2-27 / while)
                                                   :ARG1 1)
                                 :mod (c2-15 / yes))
                    :ARG2 (c2-14 / get-03
                                 :ARG1 c2-28
                                 :ARG2 (c2-17 / crazy-03
                                              :ARG1 c2-28)))
       :snt3 (c2-13 / think-01
                    :ARG0 (c2-9 / i)
                    :ARG1 (c2-16 / and
                                 :op1 (c2-2 / lose-02
                                            :ARG0 (c2-26 / person
                                                         :ARG0-of (c2-3 / write-01
                                                                        :ARG2 (c2-5 / screenwriter)))
                                            :ARG1 (c2-4 / creativity
                                                        :poss c2-26))
                                 :op2 (c2-20 / possible-01
                                             :ARG1 (c2-23 / come-up-11
                                                          :ARG0 c2-26
                                                          :ARG1 (c2-12 / anything
                                                                       :ARG1-of (c2-21 / new-01)))
                                             :polarity -))))

# ::snt ER.. Never.. Lol.. Is it interesting??
# ::tokens ["ER", "..", "Never", "..", "Lol", "..", "Is", "it", "interesting", "?", "?"]
# ::lemmas ["ER", "..", "never", "..", "lol", "..", "be", "it", "interesting", "?", "?"]
(c3-1 / multi-sentence
      :snt1 (c3-5 / person
                  :name (c3-0 / name
                              :op1 "ER"))
      :snt2 (c3-4 / have-polarity-91
                  :time (c3-3 / ever)
                  :ARG2 -)
      :snt3 (c3-7 / interest-01
                  :ARG2 (c3-2 / it)
                  :polarity (c3-8 / amr-unknown)
                  :ARG2-of (c3-6 / laugh-01
                                 :manner (c3-9 / loud)
                                 :mode expressive)))

# ::snt when?
# ::tokens ["when", "?"]
# ::lemmas ["when", "?"]
(c4-1 / time
      :mod (c4-0 / amr-unknown))

# ::snt I grew up watching ER
# ::tokens ["I", "grew", "up", "watching", "ER"]
# ::lemmas ["i", "grow", "up", "watch", "ER"]
(c5-2 / watch-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-0 / broadcast-program
                  :name (c5-1 / name
                              :op1 "ER"))
      :time (c5-4 / grow-up-04
                  :ARG1 c5-3))

# ::snt If you thought there were no more heroes..
# ::tokens ["If", "you", "thought", "there", "were", "no", "more", "heroes", ".."]
# ::lemmas ["if", "you", "think", "there", "be", "no", "more", "hero", ".."]
(c6-2 / have-condition-91
      :ARG2 (c6-4 / think-01
                  :ARG0 (c6-0 / you)
                  :ARG1 (c6-3 / hero
                              :quant (c6-1 / more
                                           :polarity -))))

# ::snt No I haven't yet.
# ::tokens ["No", "I", "have", "n't", "yet", "."]
# ::lemmas ["no", "i", "have", "not", "yet", "."]
(c7-0 / have-06
      :ARG0 (c7-2 / i)
      :time (c7-1 / yet)
      :polarity -)

# ::snt th
# ::tokens ["th"]
# ::lemmas ["th"]
(c8-0 / amr-empty)

# ::snt Watching it right now! One of the best series ever
# ::tokens ["Watching", "it", "right", "now", "!", "One", "of", "the", "best", "series", "ever"]
# ::lemmas ["watch", "it", "right", "now", "!", "One", "of", "the", "good", "series", "ever"]
(c9-2 / multi-sentence
      :snt1 (c9-9 / watch-01
                  :ARG1 (c9-10 / it)
                  :time (c9-1 / now
                              :mod (c9-5 / right)))
      :snt2 (c9-4 / include-91
                  :ARG1 (c9-3 / series
                              :ARG2 (c9-0 / series
                                          :ARG1-of (c9-7 / have-degree-91
                                                         :ARG2 (c9-11 / good-02
                                                                      :ARG1 c9-0)
                                                         :ARG3 (c9-8 / most)
                                                         :ARG5 (c9-12 / series
                                                                      :time (c9-6 / ever))))
                              :ARG1-of c9-4)))

# ::snt I love that show
# ::tokens ["I", "love", "that", "show"]
# ::lemmas ["i", "love", "that", "show"]
(c10-1 / love-01
       :ARG0 (c10-2 / i)
       :ARG1 (c10-3 / show-04
                    :mod (c10-0 / that)))

# ::snt I name my son after dr Carter
# ::tokens ["I", "name", "my", "son", "after", "dr", "Carter"]
# ::lemmas ["i", "name", "my", "son", "after", "dr", "Carter"]
(c11-0 / name-01
       :ARG0 (c11-6 / i)
       :ARG1 (c11-4 / person
                    :ARG0-of (c11-3 / have-rel-role-91
                                    :ARG1 c11-6
                                    :ARG2 (c11-2 / son)))
       :ARG2 (c11-1 / person
                    :name (c11-5 / name
                                 :op1 "Dr"
                                 :op2 "Carter")))

# ::snt One of the best series ever!
# ::tokens ["One", "of", "the", "best", "series", "ever", "!"]
# ::lemmas ["One", "of", "the", "good", "series", "ever", "!"]
(c12-5 / include-91
       :ARG1 (c12-2 / series)
       :ARG2 (c12-0 / series
                    :ARG1-of (c12-4 / have-degree-91
                                    :ARG2 (c12-6 / good-02
                                                 :ARG1 c12-0)
                                    :ARG3 (c12-1 / most)
                                    :time (c12-3 / ever))))
