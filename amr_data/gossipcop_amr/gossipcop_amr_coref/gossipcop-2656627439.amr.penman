# ::snt joking comes easy for a joke.
# ::tokens ["joking", "comes", "easy", "for", "a", "joke", "."]
# ::lemmas ["joke", "come", "easy", "for", "a", "joke", "."]
(c1-0 / come-04
      :ARG1 (c1-3 / joke-01)
      :ARG2 (c1-1 / easy-05)
      :purpose (c1-2 / joke-01))

# ::snt No..
# ::tokens ["No", ".."]
# ::lemmas ["no", ".."]
(c2-0 / no)

# ::snt I am beginning to think she has low self esteem. This guy is. It what she deserves neither skunks kids. Get therapy and leave him
# ::tokens ["I", "am", "beginning", "to", "think", "she", "has", "low", "self", "esteem", ".", "This", "guy", "is", ".", "It", "what", "she", "deserves", "neither", "skunks", "kids", ".", "Get", "therapy", "and", "leave", "him"]
# ::lemmas ["i", "be", "begin", "to", "think", "she", "have", "low", "self", "esteem", ".", "this", "guy", "be", ".", "it", "what", "she", "deserve", "neither", "skunk", "kid", ".", "get", "therapy", "and", "leave", "he"]
(c3-3 / multi-sentence
      :snt1 (c3-1 / begin-01
                  :ARG0 (c3-10 / i)
                  :ARG1 (c3-11 / think-01
                               :ARG0 c3-10
                               :ARG1 (c3-7 / esteem-01
                                           :ARG0 (c3-4 / she
                                                       :ARG1-of c3-7)
                                           :ARG1-of (c3-9 / low-04))))
      :snt2 (c3-12 / guy
                   :mod (c3-17 / this))
      :snt3 (c3-13 / deserve-01
                   :ARG0 (c3-0 / she)
                   :ARG1 (c3-5 / it)
                   :polarity -)
      :snt4 (c3-6 / and
                  :op1 (c3-14 / get-01
                              :ARG0 (c3-2 / you)
                              :ARG1 (c3-15 / therapy)
                              :mode imperative)
                  :op2 (c3-16 / leave-15
                              :ARG0 c3-2
                              :ARG1 (c3-8 / he)
                              :mode imperative)))

# ::snt one care about those talentless losers! Yeah you, , losers!
# ::tokens ["one", "care", "about", "those", "talentless", "losers", "!", "Yeah", "you", ",", ",", "losers", "!"]
# ::lemmas ["one", "care", "about", "those", "talentless", "loser", "!", "yeah", "you", ",", ",", "loser", "!"]
(c4-2 / multi-sentence
      :snt1 (c4-8 / care-01
                  :ARG0 (c4-0 / one)
                  :ARG1 (c4-7 / person
                              :ARG0-of (c4-6 / lose-03)
                              :mod (c4-9 / talent
                                         :polarity -)
                              :mod (c4-12 / that)))
      :snt2 (c4-4 / say-01
                  :ARG1 (c4-1 / yeah
                              :ARG1-of (c4-5 / mean-01
                                             :ARG2 (c4-3 / person
                                                         :ARG0-of (c4-11 / lose-03)))
                              :mode expressive)
                  :ARG2 (c4-10 / you)))

# ::snt you deserve each othet
# ::tokens ["you", "deserve", "each", "othet"]
# ::lemmas ["you", "deserve", "each", "othet"]
(c5-0 / deserve-01
      :ARG0 (c5-2 / you)
      :ARG1 (c5-3 / othet
                  :mod (c5-1 / each)))

# ::snt Does anyone really care?
# ::tokens ["Does", "anyone", "really", "care", "?"]
# ::lemmas ["do", "anyone", "really", "care", "?"]
(c6-0 / care-01
      :polarity (c6-3 / amr-unknown)
      :ARG0 (c6-2 / anyone)
      :ARG1-of (c6-1 / real-04))

# ::snt is she stupid? Scott needs to grow up. Isn't she tired of having an adult kid?
# ::tokens ["is", "she", "stupid", "?", "Scott", "needs", "to", "grow", "up", ".", "Is", "n't", "she", "tired", "of", "having", "an", "adult", "kid", "?"]
# ::lemmas ["be", "she", "stupid", "?", "Scott", "need", "to", "grow", "up", ".", "be", "not", "she", "tired", "of", "have", "an", "adult", "kid", "?"]
(c7-2 / multi-sentence
      :snt1 (c7-3 / stupid
                  :polarity (c7-10 / amr-unknown)
                  :domain (c7-0 / she))
      :snt2 (c7-1 / need-01
                  :ARG0 (c7-5 / person
                              :name (c7-4 / name
                                          :op1 "Scott"))
                  :ARG1 (c7-11 / grow-up-04
                               :ARG1 c7-5))
      :snt3 (c7-8 / tire-03
                  :ARG0 (c7-6 / have-05
                              :ARG0 (c7-12 / she)
                              :ARG1 (c7-7 / kid
                                          :mod (c7-9 / adult)))
                  :ARG1 c7-12
                  :polarity c7-10
                  :polarity -))

# ::snt losers
# ::tokens ["losers"]
# ::lemmas ["loser"]
(c8-0 / person
      :ARG0-of (c8-1 / lose-03))

# ::snt get over that man alreadyyyyyy!
# ::tokens ["get", "over", "that", "man", "alreadyyyyyy", "!"]
# ::lemmas ["get", "over", "that", "man", "alreadyyyyyy", "!"]
(c9-0 / over-02
      :ARG1 (c9-1 / you)
      :ARG2 (c9-2 / man
                  :mod (c9-4 / that))
      :time (c9-5 / already)
      :degree (c9-3 / way)
      :mode imperative)

# ::snt Yes yes yes. Work it out. Love you two together
# ::tokens ["Yes", "yes", "yes", ".", "Work", "it", "out", ".", "Love", "you", "two", "together"]
# ::lemmas ["yes", "yes", "yes", ".", "work", "it", "out", ".", "love", "you", "two", "together"]
(c10-1 / multi-sentence
       :snt1 (c10-0 / yes
                    :snt2-of c10-1)
       :snt3 (c10-4 / work-out-02
                    :ARG1 (c10-5 / it))
       :snt4 (c10-3 / love-01
                    :ARG0 (c10-2 / i)
                    :ARG1 (c10-7 / you
                                 :mod (c10-6 / together)
                                 :quant 2)))

# ::snt that whole family is a joke
# ::tokens ["that", "whole", "family", "is", "a", "joke"]
# ::lemmas ["that", "whole", "family", "be", "a", "joke"]
(c12-2 / joke-01
       :ARG2 (c12-0 / family
                    :mod (c12-3 / whole)
                    :mod (c12-1 / that)))

# ::snt well maybe this is for the best. Only Kourtney would know that
# ::tokens ["well", "maybe", "this", "is", "for", "the", "best", ".", "Only", "Kourtney", "would", "know", "that"]
# ::lemmas ["well", "maybe", "this", "be", "for", "the", "good", ".", "only", "Kourtney", "would", "know", "that"]
(c13-1 / multi-sentence
       :snt1 (c13-5 / possible-01
                    :ARG1 (c13-4 / have-degree-91
                                 :ARG1 (c13-9 / this)
                                 :ARG2 (c13-10 / good-02
                                               :ARG1 c13-9)
                                 :ARG3 (c13-6 / most))
                    :mod (c13-8 / well))
       :snt2 (c13-7 / know-01
                    :ARG0 (c13-2 / person
                                 :name (c13-3 / name
                                              :op1 "Kourtney")
                                 :mod (c13-0 / only))
                    :ARG1 (c13-11 / that)))

# ::snt he wrong
# ::tokens ["he", "wrong"]
# ::lemmas ["he", "wrong"]
(c14-0 / wrong-04
       :ARG1 (c14-1 / he))

# ::snt I would hope that the split is permanent sorry for the kids but Scot is an alcoholic and I know from personal exp it's not good
# ::tokens ["I", "would", "hope", "that", "the", "split", "is", "permanent", "sorry", "for", "the", "kids", "but", "Scot", "is", "an", "alcoholic", "and", "I", "know", "from", "personal", "exp", "it", "'s", "not", "good"]
# ::lemmas ["i", "would", "hope", "that", "the", "split", "be", "permanent", "sorry", "for", "the", "kid", "but", "Scot", "be", "an", "alcoholic", "and", "i", "know", "from", "personal", "exp", "it", "be", "not", "good"]
(c15-9 / contrast-01
       :ARG1 (c15-6 / hope-01
                    :ARG0 (c15-10 / i)
                    :ARG1 (c15-3 / sorry-01
                                 :ARG1 (c15-0 / split-01)
                                 :ARG2 (c15-7 / kid)
                                 :duration (c15-8 / permanent)))
       :ARG2 (c15-11 / and
                     :op1 (c15-12 / alcoholic
                                  :domain (c15-2 / person
                                                 :name (c15-1 / name
                                                              :op1 "Scot")))
                     :op2 (c15-13 / know-01
                                  :ARG0 c15-10
                                  :ARG1 (c15-4 / good-02
                                               :ARG1 c15-0
                                               :source (c15-5 / exp
                                                              :ARG1-of (c15-14 / personal-02))
                                               :polarity -))))

# ::snt bout damn time
# ::tokens ["bout", "damn", "time"]
# ::lemmas ["bout", "damn", "time"]
(c16-1 / time
       :mod (c16-0 / damn
                   :mode expressive))

# ::snt good about damn time she opened her eyes.
# ::tokens ["good", "about", "damn", "time", "she", "opened", "her", "eyes", "."]
# ::lemmas ["good", "about", "damn", "time", "she", "open", "her", "eye", "."]
(c17-5 / good-02
       :ARG1 (c17-0 / open-01
                    :ARG0 (c17-1 / she
                                 :part (c17-2 / eye
                                              :ARG1-of c17-0)))
       :time (c17-4 / about
                    :op1 (c17-3 / time
                                :ARG1-of (c17-6 / damn-01))))

# ::snt sad for the kids that he won't get help. He can still be a parent even though they are not together. Seems he's too selfish
# ::tokens ["sad", "for", "the", "kids", "that", "he", "wo", "n't", "get", "help", ".", "He", "can", "still", "be", "a", "parent", "even", "though", "they", "are", "not", "together", ".", "Seems", "he", "'s", "too", "selfish"]
# ::lemmas ["sad", "for", "the", "kid", "that", "he", "will", "not", "get", "help", ".", "he", "can", "still", "be", "a", "parent", "even", "though", "they", "be", "not", "together", ".", "seem", "he", "be", "too", "selfish"]
(c18-1 / multi-sentence
       :snt1 (c18-3 / sad-02
                    :ARG0 (c18-6 / help-01
                                 :ARG1 (c18-11 / he)
                                 :polarity -)
                    :ARG1 (c18-7 / kid))
       :snt2 (c18-8 / possible-01
                    :ARG1 (c18-5 / have-rel-role-91
                                 :ARG0 (c18-13 / he)
                                 :ARG2 (c18-2 / parent)
                                 :mod (c18-0 / still)
                                 :concession (c18-12 / together
                                                     :domain c18-13
                                                     :polarity -)))
       :snt3 (c18-15 / seem-01
                     :ARG1 (c18-9 / have-degree-91
                                  :ARG1 (c18-10 / he)
                                  :ARG2 (c18-4 / selfish)
                                  :ARG3 (c18-14 / too))))

# ::snt EXACTLY! There's a new season of the show coming up, and of course new drama is needed! Smh for these pple
# ::tokens ["EXACTLY", "!", "There", "'s", "a", "new", "season", "of", "the", "show", "coming", "up", ",", "and", "of", "course", "new", "drama", "is", "needed", "!", "Smh", "for", "these", "pple"]
# ::lemmas ["exactly", "!", "there", "be", "a", "new", "season", "of", "the", "show", "come", "up", ",", "and", "of", "course", "new", "drama", "be", "need", "!", "smh", "for", "these", "pple"]
(c19-2 / multi-sentence
       :snt1 (c19-5 / exact
                    :mode expressive)
       :snt2 (c19-11 / and
                     :op1 (c19-9 / come-up-13
                                 :ARG1 (c19-4 / season
                                              :ARG1-of (c19-3 / new-01)
                                              :part-of (c19-0 / show-04)))
                     :op2 (c19-6 / need-01
                                 :ARG1 (c19-12 / drama
                                               :ARG1-of (c19-7 / new-01))
                                 :mod (c19-1 / of-course)))
       :snt3 (c19-13 / Smh
                     :topic (c19-8 / pple
                                   :mod (c19-10 / this))
                     :mode expressive))

# ::snt it's better that they aren't married...
# ::tokens ["it", "'s", "better", "that", "they", "are", "n't", "married", "..."]
# ::lemmas ["it", "be", "well", "that", "they", "be", "not", "marry", "..."]
(c20-2 / have-degree-91
       :ARG1 (c20-0 / marry-01
                    :ARG1 (c20-3 / they)
                    :polarity -)
       :ARG2 (c20-4 / good-02
                    :ARG1 c20-0)
       :ARG3 (c20-1 / more))

# ::snt she should not get back to him in the first place.
# ::tokens ["she", "should", "not", "get", "back", "to", "him", "in", "the", "first", "place", "."]
# ::lemmas ["she", "should", "not", "get", "back", "to", "he", "in", "the", "first", "place", "."]
(c21-1 / recommend-01
       :ARG1 (c21-4 / get-back-25
                    :ARG0 (c21-0 / she)
                    :ARG1 (c21-2 / he)
                    :mod (c21-3 / in-the-first-place)
                    :polarity -))

# ::snt Kylie Jenner, , puts her boobs on display in new snapchat video
# ::tokens ["Kylie", "Jenner", ",", ",", "puts", "her", "boobs", "on", "display", "in", "new", "snapchat", "video"]
# ::lemmas ["Kylie", "Jenner", ",", ",", "put", "her", "boob", "on", "display", "in", "new", "snapchat", "video"]
(c22-6 / display-01
       :ARG0 (c22-5 / person
                    :name (c22-1 / name
                                 :op1 "Kylie"
                                 :op2 "Jenner")
                    :part (c22-0 / boob
                                 :ARG1-of c22-6))
       :ARG2 (c22-3 / video
                    :medium (c22-2 / snapchat)
                    :ARG1-of (c22-4 / new-01)))

# ::snt who cares?
# ::tokens ["who", "cares", "?"]
# ::lemmas ["who", "care", "?"]
(c23-0 / care-01
       :ARG0 (c23-1 / amr-unknown))

# ::snt I'm done with life
# ::tokens ["I", "'m", "done", "with", "life"]
# ::lemmas ["i", "be", "do", "with", "life"]
(c24-0 / be-done-08
       :ARG0 (c24-2 / i)
       :ARG1 (c24-1 / life))

# ::snt not this week. Next week she'll be pregnant.
# ::tokens ["not", "this", "week", ".", "Next", "week", "she", "'ll", "be", "pregnant", "."]
# ::lemmas ["not", "this", "week", ".", "Next", "week", "she", "'ll", "be", "pregnant", "."]
(c25-0 / multi-sentence
       :snt1 (c25-4 / week
                    :mod (c25-6 / this)
                    :polarity -)
       :snt2 (c25-5 / impregnate-01
                    :ARG1 (c25-2 / she)
                    :time (c25-3 / week
                                 :mod (c25-1 / next))))

# ::snt Well, that's a relief because I had been worried about that all week.
# ::tokens ["Well", ",", "that", "'s", "a", "relief", "because", "I", "had", "been", "worried", "about", "that", "all", "week", "."]
# ::lemmas ["well", ",", "that", "be", "a", "relief", "because", "i", "have", "be", "worry", "about", "that", "all", "week", "."]
(c26-3 / cause-01
       :ARG0 (c26-4 / worry-02
                    :ARG0 (c26-6 / that)
                    :ARG1 (c26-5 / i)
                    :duration (c26-2 / week
                                     :mod (c26-0 / all)))
       :ARG1 (c26-1 / relieve-01
                    :ARG0 c26-6
                    :mod (c26-7 / well)))

# ::snt that should be for her betterment and interest of her kids.She should move on and it baffles me on why Kris still want him on
# ::tokens ["that", "should", "be", "for", "her", "betterment", "and", "interest", "of", "her", "kids", ".", "She", "should", "move", "on", "and", "it", "baffles", "me", "on", "why", "Kris", "still", "want", "him", "on"]
# ::lemmas ["that", "should", "be", "for", "her", "betterment", "and", "interest", "of", "her", "kid", ".", "she", "should", "move", "on", "and", "it", "baffle", "i", "on", "why", "Kris", "still", "want", "he", "on"]
(c27-13 / multi-sentence
        :snt1 (c27-18 / recommend-01
                      :ARG1 (c27-7 / have-purpose-91
                                   :ARG1 (c27-10 / that)
                                   :ARG2 (c27-11 / and
                                                 :op1 (c27-12 / better-01
                                                              :ARG0 (c27-0 / she)
                                                              :ARG1 (c27-19 / person
                                                                            :ARG0-of (c27-21 / have-rel-role-91
                                                                                             :ARG1 c27-0
                                                                                             :ARG2 (c27-8 / kid))))
                                                 :op2 (c27-22 / interest-01
                                                              :ARG1 c27-19))))
        :snt2 c27-11
        :op1 (c27-2 / recommend-01
                    :ARG1 (c27-9 / move-01
                                 :ARG1 (c27-4 / she)
                                 :direction (c27-5 / on)))
        :op2 (c27-1 / baffle-01
                    :ARG0 (c27-16 / thing
                                  :ARG0-of (c27-15 / cause-01
                                                   :ARG1 (c27-20 / want-01
                                                                 :ARG0 (c27-14 / person
                                                                               :name (c27-17 / name
                                                                                             :op1 "Kris"))
                                                                 :ARG1 c27-9
                                                                 :mod (c27-3 / still))))
                    :ARG1 (c27-6 / i)))

# ::snt smart choice he didn't seem to help out much w being a family man just partying
# ::tokens ["smart", "choice", "he", "did", "n't", "seem", "to", "help", "out", "much", "w", "being", "a", "family", "man", "just", "partying"]
# ::lemmas ["smart", "choice", "he", "do", "not", "seem", "to", "help", "out", "much", "w", "be", "a", "family", "man", "just", "party"]
(c29-3 / seem-01
       :ARG1 (c29-4 / help-out-03
                    :ARG0 (c29-8 / he)
                    :degree (c29-2 / much)
                    :ARG1-of (c29-7 / cause-01
                                    :ARG0 (c29-5 / man
                                                 :mod (c29-0 / family)
                                                 :domain c29-8
                                                 :ARG0-of (c29-6 / party-01
                                                                 :mod (c29-9 / just)))))
       :ARG1-of (c29-10 / choose-01
                        :ARG1-of (c29-1 / smart-06))
       :polarity -)

# ::snt nobody cares!
# ::tokens ["nobody", "cares", "!"]
# ::lemmas ["nobody", "care", "!"]
(c30-0 / care-01
       :ARG0 (c30-1 / nobody))

# ::snt Scott's a lame she can do a lot better !
# ::tokens ["Scott", "'s", "a", "lame", "she", "can", "do", "a", "lot", "better", "!"]
# ::lemmas ["Scott", "'s", "a", "lame", "she", "can", "do", "a", "lot", "well", "!"]
(c31-5 / lame
       :domain (c31-4 / person
                      :name (c31-0 / name
                                   :op1 "Scott"))
       :ARG0-of (c31-6 / cause-01
                       :ARG1 (c31-1 / possible-01
                                    :ARG1 (c31-9 / do-02
                                                 :ARG0 c31-4
                                                 :ARG1 (c31-7 / thing
                                                              :ARG1-of (c31-8 / good-02
                                                                              :ARG2-of (c31-3 / have-degree-91
                                                                                              :ARG1 c31-7
                                                                                              :ARG3 (c31-2 / more
                                                                                                           :quant (c31-10 / lot)))))))))

# ::snt like ever?
# ::tokens ["like", "ever", "?"]
# ::lemmas ["like", "ever", "?"]
(c32-0 / resemble-01
       :polarity (c32-2 / amr-unknown)
       :ARG2 (c32-1 / ever))

# ::snt I'll definitely sleep better tonight knowing that.
# ::tokens ["I", "'ll", "definitely", "sleep", "better", "tonight", "knowing", "that", "."]
# ::lemmas ["i", "'ll", "definitely", "sleep", "well", "tonight", "know", "that", "."]
(c33-2 / sleep-01
       :ARG0 (c33-6 / i)
       :time (c33-9 / date-entity
                    :dayperiod (c33-0 / night)
                    :mod (c33-7 / today))
       :manner (c33-5 / definite)
       :manner (c33-4 / know-01
                      :ARG0 c33-6
                      :ARG1 (c33-10 / that))
       :ARG1-of (c33-3 / have-degree-91
                       :ARG2 (c33-8 / good-02
                                    :ARG1 c33-2)
                       :ARG3 (c33-1 / more)))

# ::snt stop yes they will this will all blow over ok i refuse to believe this
# ::tokens ["stop", "yes", "they", "will", "this", "will", "all", "blow", "over", "ok", "i", "refuse", "to", "believe", "this"]
# ::lemmas ["stop", "yes", "they", "will", "this", "will", "all", "blow", "over", "ok", "i", "refuse", "to", "believe", "this"]
(c34-4 / and
       :op1 (c34-3 / stop-01
                   :ARG0 (c34-2 / you)
                   :mode imperative)
       :op2 (c34-1 / blow-over-12
                   :ARG1 (c34-8 / this
                                :mod (c34-7 / all))
                   :ARG1-of (c34-0 / okay-04))
       :op3 (c34-5 / refuse-01
                   :ARG0 (c34-9 / i)
                   :ARG1 (c34-6 / believe-01
                                :ARG0 c34-9
                                :ARG1 c34-8)))

# ::snt perdi la fe en el amor
# ::tokens ["perdi", "la", "fe", "en", "el", "amor"]
# ::lemmas ["perdi", "la", "fe", "en", "el", "amor"]
(c35-0 / perdi-la-
       :mode expressive)

# ::snt good ! She deserves way better
# ::tokens ["good", "!", "She", "deserves", "way", "better"]
# ::lemmas ["good", "!", "she", "deserve", "way", "well"]
(c36-0 / multi-sentence
       :snt1 (c36-5 / good-02
                    :mode expressive)
       :snt2 (c36-6 / deserve-01
                    :ARG0 (c36-1 / she)
                    :ARG1 (c36-2 / have-degree-91
                                 :ARG1 c36-1
                                 :ARG2 c36-5
                                 :ARG1 c36-1)
                    :ARG3 (c36-3 / more
                                 :quant (c36-4 / way))))

# ::snt great!!!!
# ::tokens ["great", "!", "!", "!", "!"]
# ::lemmas ["great", "!", "!", "!", "!"]
(c37-0 / great
       :mode expressive)

# ::snt hmmmm never say never. Lol
# ::tokens ["hmmmm", "never", "say", "never", ".", "Lol"]
# ::lemmas ["hmmmm", "never", "say", "never", ".", "Lol"]
(c39-1 / multi-sentence
       :snt1 (c39-2 / say-01
                    :ARG0 (c39-0 / you)
                    :time (c39-3 / ever)
                    :mod (c39-4 / hmm
                                :mode expressive)
                    :polarity -
                    :mode imperative)
       :snt2 (c39-5 / laugh-01
                    :ARG0 (c39-6 / i)
                    :manner (c39-7 / loud)
                    :mode expressive))

# ::snt please get back together you guys are goals
# ::tokens ["please", "get", "back", "together", "you", "guys", "are", "goals"]
# ::lemmas ["please", "get", "back", "together", "you", "guy", "be", "goal"]
(c40-0 / get-back-10
       :ARG1 (c40-1 / you
                    :mod (c40-2 / guy))
       :ARG2 (c40-3 / together)
       :mode imperative
       :polite +)

# ::snt scort.. should kinda mature up and act more like a husband. Were so sick of him being a baby like his realy a kardashians
# ::tokens ["scort", "..", "should", "kinda", "mature", "up", "and", "act", "more", "like", "a", "husband", ".", "Were", "so", "sick", "of", "him", "being", "a", "baby", "like", "his", "realy", "a", "kardashians"]
# ::lemmas ["scort", "..", "should", "kinda", "mature", "up", "and", "act", "more", "like", "a", "husband", ".", "be", "so", "sick", "of", "he", "be", "a", "baby", "like", "his", "realy", "a", "kardashian"]
(c41-13 / multi-sentence
        :snt1 (c41-0 / scort-01)
        :snt2 (c41-21 / recommend-01
                      :ARG1 (c41-11 / and
                                    :op1 (c41-5 / mature-02
                                                :ARG2-of (c41-6 / have-degree-91
                                                                :ARG1 (c41-23 / he)
                                                                :ARG3 (c41-19 / more)))
                                    :op2 (c41-10 / act-01
                                                 :ARG0 c41-23
                                                 :ARG1 (c41-4 / have-degree-91
                                                              :ARG1 c41-23
                                                              :ARG2 (c41-1 / resemble-01
                                                                           :ARG1 c41-23
                                                                           :ARG2 (c41-22 / person
                                                                                         :ARG0-of (c41-18 / have-rel-role-91
                                                                                                          :ARG2 (c41-7 / husband))))
                                                              :ARG3 (c41-15 / more)))
                                    :degree (c41-8 / kind-of)))
        :snt3 (c41-3 / sick-04
                     :ARG0 (c41-12 / baby
                                   :domain (c41-9 / he)
                                   :ARG1-of (c41-16 / resemble-01
                                                    :ARG2 (c41-14 / person
                                                                  :mod (c41-17 / country
                                                                               :name (c41-20 / name
                                                                                             :op1 "Kardashistan")))))
                     :ARG1 (c41-24 / i)
                     :degree (c41-2 / so)))

# ::snt Dag, the video won't play for me!
# ::tokens ["Dag", ",", "the", "video", "wo", "n't", "play", "for", "me", "!"]
# ::lemmas ["Dag", ",", "the", "video", "will", "not", "play", "for", "i", "!"]
(c42-2 / say-01
       :ARG0 (c42-5 / i)
       :ARG1 (c42-4 / play-01
                    :ARG0 (c42-3 / video)
                    :beneficiary c42-5
                    :polarity -)
       :ARG2 (c42-1 / person
                    :name (c42-0 / name
                                 :op1 "Dag")))

# ::snt YES
# ::tokens ["YES"]
# ::lemmas ["yes"]
(c43-0 / yes)

# ::snt yessssss
# ::tokens ["yessssss"]
# ::lemmas ["yessssss"]
(c44-0 / yessssssss)

# ::snt omg noooooooooo
# ::tokens ["omg", "noooooooooo"]
# ::lemmas ["omg", "noooooooooo"]
(c45-1 / no
       :mod (c45-0 / oh-my-god
                   :mode expressive))

# ::snt no no no let him heal
# ::tokens ["no", "no", "no", "let", "him", "heal"]
# ::lemmas ["no", "no", "no", "let", "he", "heal"]
(c46-2 / let-01
       :ARG0 (c46-1 / you)
       :ARG1 (c46-3 / heal-01
                    :ARG1 (c46-0 / he))
       :mode imperative
       :polarity -)

# ::snt think so, never no
# ::tokens ["think", "so", ",", "never", "no"]
# ::lemmas ["think", "so", ",", "never", "no"]
(c47-2 / and
       :op1 (c47-4 / think-01
                   :ARG1 (c47-1 / so))
       :op2 (c47-0 / no
                   :time (c47-3 / ever)))

# ::snt like me n mine
# ::tokens ["like", "me", "n", "mine"]
# ::lemmas ["like", "i", "n", "mine"]
(c48-0 / resemble-01
       :ARG2 (c48-3 / and
                    :op1 (c48-2 / i)
                    :op2 (c48-1 / thing
                                :poss c48-2)))

# ::snt B like nike n jus do it
# ::tokens ["B", "like", "nike", "n", "jus", "do", "it"]
# ::lemmas ["b", "like", "nike", "n", "ju", "do", "it"]
(c49-5 / and
       :op1 (c49-3 / like-01
                   :ARG0 (c49-4 / i)
                   :ARG1 (c49-1 / nike))
       :op2 (c49-6 / do-02
                   :ARG0 (c49-0 / you)
                   :ARG1 (c49-2 / it)))

# ::snt Man I hope so! They really love each other.
# ::tokens ["Man", "I", "hope", "so", "!", "They", "really", "love", "each", "other", "."]
# ::lemmas ["man", "i", "hope", "so", "!", "they", "really", "love", "each", "other", "."]
(c50-0 / multi-sentence
       :snt1 (c50-4 / hope-01
                    :ARG0 (c50-6 / i)
                    :ARG1 (c50-1 / so)
                    :mod (c50-3 / man
                                :mode expressive))
       :snt2 (c50-5 / love-01
                    :ARG0 (c50-7 / they
                                 :ARG1-of c50-5)
                    :degree (c50-2 / really)))
