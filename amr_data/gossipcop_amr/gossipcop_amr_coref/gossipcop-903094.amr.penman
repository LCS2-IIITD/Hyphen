# ::snt eh i think the one ep was enough tbh
# ::tokens ["eh", "i", "think", "the", "one", "ep", "was", "enough", "tbh"]
# ::lemmas ["eh", "i", "think", "the", "one", "ep", "be", "enough", "tbh"]
(c2-5 / think-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-1 / have-quant-91
                  :ARG1 (c2-0 / episode
                              :quant 1)
                  :ARG3 (c2-6 / enough))
      :mod (c2-2 / eh
                 :mode expressive)
      :ARG1-of (c2-3 / honest-01
                     :ARG0 c2-4))

# ::snt PLEASE
# ::tokens ["PLEASE"]
# ::lemmas ["please"]
(c3-0 / please
      :polite +)

# ::snt leave it as a one off and keep the memory
# ::tokens ["leave", "it", "as", "a", "one", "off", "and", "keep", "the", "memory"]
# ::lemmas ["leave", "it", "as", "a", "one", "off", "and", "keep", "the", "memory"]
(c5-6 / and
      :op1 (c5-3 / leave-14
                 :ARG0 (c5-1 / you)
                 :ARG1 (c5-5 / it)
                 :ARG2 (c5-0 / one-off)
                 :mode imperative)
      :op2 (c5-4 / keep-01
                 :ARG0 c5-1
                 :ARG1 (c5-2 / memory)
                 :mode imperative))

# ::snt I agree, was fine how they left it.
# ::tokens ["I", "agree", ",", "was", "fine", "how", "they", "left", "it", "."]
# ::lemmas ["i", "agree", ",", "be", "fine", "how", "they", "leave", "it", "."]
(c7-2 / agree-01
      :ARG0 (c7-4 / i)
      :ARG1 (c7-0 / fine-04
                  :ARG1 (c7-5 / thing
                              :manner-of (c7-3 / leave-15
                                               :ARG0 (c7-6 / they)
                                               :ARG1 (c7-1 / it)))))

# ::snt Idk it was aiighttttt
# ::tokens ["Idk", "it", "was", "aiighttttt"]
# ::lemmas ["Idk", "it", "be", "aiighttttt"]
(c8-2 / know-01
      :ARG0 (c8-3 / i)
      :ARG1 (c8-1 / easy-05
                  :ARG1 (c8-0 / it))
      :polarity -)

# ::snt Meh that was shit
# ::tokens ["Meh", "that", "was", "shit"]
# ::lemmas ["Meh", "that", "be", "shit"]
(c9-2 / shit
      :domain (c9-1 / that)
      :mod (c9-0 / meh
                 :mode expressive))

# ::snt Yes!!!
# ::tokens ["Yes", "!", "!", "!"]
# ::lemmas ["yes", "!", "!", "!"]
(c10-0 / yes
       :mode expressive)

# ::snt What goes around comes around lad
# ::tokens ["What", "goes", "around", "comes", "around", "lad"]
# ::lemmas ["what", "go", "around", "come", "around", "lad"]
(c11-1 / come-around-32
       :ARG1 (c11-2 / thing
                    :ARG1-of (c11-4 / go-06
                                    :ARG2 (c11-3 / around)))
       :ARG2 (c11-0 / lad))

# ::snt No spin offs please lets not ruin it
# ::tokens ["No", "spin", "offs", "please", "lets", "not", "ruin", "it"]
# ::lemmas ["no", "spin", "off", "please", "lets", "not", "ruin", "it"]
(c12-0 / multi-sentence
       :snt1 (c12-1 / spin-off-02
                    :ARG0 (c12-4 / we)
                    :polarity -
                    :polite +
                    :mode imperative)
       :snt2 (c12-2 / ruin-01
                    :ARG0 (c12-3 / we)
                    :ARG1 (c12-5 / it)
                    :mode imperative
                    :polite +))

# ::snt YES I need more Elena in my life
# ::tokens ["YES", "I", "need", "more", "Elena", "in", "my", "life"]
# ::lemmas ["yes", "i", "need", "more", "Elena", "in", "my", "life"]
(c13-2 / say-01
       :ARG0 (c13-6 / i)
       :ARG1 (c13-0 / need-01
                    :ARG0 c13-6
                    :ARG1 (c13-4 / person
                                 :name (c13-3 / name
                                              :op1 "Elena")
                                 :mod (c13-1 / more))
                    :time (c13-5 / life
                                 :poss c13-6))
       :ARG2 c13-4)

# ::snt Madness mate
# ::tokens ["Madness", "mate"]
# ::lemmas ["madness", "mate"]
(c15-2 / say-01
       :ARG1 (c15-1 / madness)
       :ARG2 (c15-0 / mate))

# ::snt Angry reacts only Dan
# ::tokens ["Angry", "reacts", "only", "Dan"]
# ::lemmas ["angry", "react", "only", "Dan"]
(c18-2 / react-01
       :ARG0 (c18-3 / person
                    :name (c18-1 / name
                                 :op1 "Dan"))
       :ARG2 (c18-4 / anger-01)
       :mod (c18-0 / only))

# ::snt Absolute bollocks
# ::tokens ["Absolute", "bollocks"]
# ::lemmas ["absolute", "bollock"]
(c21-0 / bollock
       :mod (c21-1 / absolute)
       :mode expressive)

# ::snt Please!
# ::tokens ["Please", "!"]
# ::lemmas ["please", "!"]
(c23-0 / please
       :polite +)

# ::snt What the fuck is Ronald Koeman doing?
# ::tokens ["What", "the", "fuck", "is", "Ronald", "Koeman", "doing", "?"]
# ::lemmas ["what", "the", "fuck", "be", "Ronald", "Koeman", "do", "?"]
(c26-4 / do-02
       :ARG0 (c26-2 / person
                    :name (c26-1 / name
                                 :op1 "Ronald"
                                 :op2 "Koeman"))
       :ARG1 (c26-3 / amr-unknown)
       :mod (c26-0 / fuck
                   :mode expressive))

# ::snt Needs another episode best one in the season by far
# ::tokens ["Needs", "another", "episode", "best", "one", "in", "the", "season", "by", "far"]
# ::lemmas ["need", "another", "episode", "good", "one", "in", "the", "season", "by", "far"]
(c27-0 / need-01
       :ARG1 (c27-3 / episode
                    :mod (c27-5 / another)
                    :ARG1-of (c27-4 / have-degree-91
                                    :ARG2 (c27-6 / good-02
                                                 :ARG1 c27-3)
                                    :ARG3 (c27-1 / most)
                                    :ARG5 (c27-7 / episode
                                                 :part-of (c27-2 / season)))))

# ::snt unlucky
# ::tokens ["unlucky"]
# ::lemmas ["unlucky"]
(c31-0 / lucky
       :polarity -)

# ::snt What about san junipero tho.
# ::tokens ["What", "about", "san", "junipero", "tho", "."]
# ::lemmas ["what", "about", "san", "junipero", "tho", "."]
(c33-1 / have-concession-91
       :ARG1 (c33-2 / amr-unknown
                    :topic (c33-0 / san-)))

# ::snt Why can't people just leave nice things alone?
# ::tokens ["Why", "ca", "n't", "people", "just", "leave", "nice", "things", "alone", "?"]
# ::lemmas ["why", "can", "not", "people", "just", "leave", "nice", "thing", "alone", "?"]
(c34-3 / possible-01
       :ARG1 (c34-4 / leave-14
                    :ARG0 (c34-1 / person)
                    :ARG1 (c34-8 / thing
                                 :ARG1-of (c34-0 / nice-01))
                    :ARG2 (c34-2 / alone)
                    :mod (c34-6 / just))
       :ARG1-of (c34-5 / cause-01
                       :ARG0 (c34-7 / amr-unknown))
       :polarity -)

# ::snt Leave it how it is
# ::tokens ["Leave", "it", "how", "it", "is"]
# ::lemmas ["leave", "it", "how", "it", "be"]
(c37-1 / leave-14
       :ARG0 (c37-0 / you)
       :ARG1 (c37-2 / it)
       :manner (c37-3 / thing
                      :domain c37-2)
       :mode imperative)

# ::snt !!!!
# ::tokens ["!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!"]
(c38-0 / thing
       :mode expressive)

# ::snt Was well fucked tbf
# ::tokens ["Was", "well", "fucked", "tbf"]
# ::lemmas ["be", "well", "fuck", "tbf"]
(c39-0 / fuck-01
       :ARG1 (c39-5 / i)
       :ARG1-of (c39-4 / well-09)
       :ARG1-of (c39-2 / say-01
                       :ARG2 (c39-3 / person
                                    :name (c39-1 / name
                                                 :op1 "tbf"))))

# ::snt It's called 'Star Trek: into the douchiness'
# ::tokens ["It", "'s", "called", "'", "Star", "Trek", ":", "into", "the", "douchiness", "'"]
# ::lemmas ["it", "be", "call", "'", "Star", "Trek", ":", "into", "the", "douchiness", "'"]
(c40-2 / call-01
       :ARG1 (c40-3 / it)
       :ARG2 (c40-0 / broadcast-program
                    :name (c40-1 / name
                                 :op1 "Star"
                                 :op2 "Trekkie")
                    :destination (c40-4 / douchiness)))

# ::snt Mad, probably one of my favourite episodes
# ::tokens ["Mad", ",", "probably", "one", "of", "my", "favourite", "episodes"]
# ::lemmas ["mad", ",", "probably", "one", "of", "my", "favourite", "episode"]
(c41-1 / mad-02
       :ARG1-of (c41-5 / include-91
                       :ARG2 (c41-3 / episode
                                    :ARG1-of (c41-0 / favor-01
                                                    :ARG0 (c41-2 / i)))
                       :mod (c41-4 / probable)))

# ::snt !!!!!
# ::tokens ["!", "!", "!", "!", "!"]
# ::lemmas ["!", "!", "!", "!", "!"]
(c44-0 / thing
       :mode expressive)

# ::snt I would fuck with that
# ::tokens ["I", "would", "fuck", "with", "that"]
# ::lemmas ["i", "would", "fuck", "with", "that"]
(c48-0 / fuck-01
       :ARG0 (c48-1 / i)
       :ARG1 (c48-2 / that))
