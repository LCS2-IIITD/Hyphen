# ::snt That would be the kiss of death for that show!
# ::tokens ["That", "would", "be", "the", "kiss", "of", "death", "for", "that", "show", "!"]
# ::lemmas ["that", "would", "be", "the", "kiss", "of", "death", "for", "that", "show", "!"]
(c1-2 / kiss-01
      :ARG1 (c1-0 / die-01)
      :beneficiary (c1-3 / show
                         :mod (c1-1 / that
                                    :domain-of c1-2))
      :mode expressive)

# ::snt LOL you can watch it online or probably on demand.
# ::tokens ["LOL", "you", "can", "watch", "it", "online", "or", "probably", "on", "demand", "."]
# ::lemmas ["LOL", "you", "can", "watch", "it", "online", "or", "probably", "on", "demand", "."]
(c2-5 / possible-01
      :ARG1 (c2-7 / watch-01
                  :ARG0 (c2-2 / you)
                  :ARG1 (c2-8 / it)
                  :medium (c2-0 / or
                                :op1 (c2-1 / online)
                                :op2 (c2-9 / demand-01
                                           :ARG1 c2-8
                                           :mod (c2-3 / probable))))
      :ARG2-of (c2-6 / laugh-01
                     :ARG0 (c2-4 / i)
                     :manner (c2-10 / loud)
                     :mode expressive))

# ::snt Word up!
# ::tokens ["Word", "up", "!"]
# ::lemmas ["word", "up", "!"]
(c3-0 / word-up-00
      :ARG0 (c3-1 / you)
      :mode imperative)

# ::snt is everything!
# ::tokens ["is", "everything", "!"]
# ::lemmas ["be", "everything", "!"]
(c4-0 / everything
      :mode expressive)

# ::snt If this is true then hell has really frozen over if Kim is judging music. That's just pathetic.
# ::tokens ["If", "this", "is", "true", "then", "hell", "has", "really", "frozen", "over", "if", "Kim", "is", "judging", "music", ".", "That", "'s", "just", "pathetic", "."]
# ::lemmas ["if", "this", "be", "true", "then", "hell", "have", "really", "freeze", "over", "if", "Kim", "be", "judge", "music", ".", "that", "be", "just", "pathetic", "."]
(c5-1 / multi-sentence
      :snt1 (c5-0 / freeze-01
                  :ARG1 (c5-5 / hell)
                  :ARG1-of (c5-4 / real-04)
                  :condition (c5-10 / true-01
                                    :ARG1 (c5-12 / this))
                  :condition (c5-8 / judge-01
                                   :ARG0 (c5-6 / person
                                               :name (c5-2 / name
                                                           :op1 "Kim"))
                                   :ARG1 (c5-7 / music)))
      :snt2 (c5-3 / pathetic
                  :domain (c5-9 / that)
                  :mod (c5-11 / just)))

# ::snt it still sounds like a complete joke to me
# ::tokens ["it", "still", "sounds", "like", "a", "complete", "joke", "to", "me"]
# ::lemmas ["it", "still", "sound", "like", "a", "complete", "joke", "to", "i"]
(c6-1 / sound-01
      :ARG1 (c6-5 / it)
      :ARG2 (c6-4 / joke-01
                  :ARG1-of (c6-3 / complete-02))
      :ARG3 (c6-2 / i)
      :mod (c6-0 / still))

# ::snt No way!!!!!!
# ::tokens ["No", "way", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["no", "way", "!", "!", "!", "!", "!", "!"]
(c7-0 / way
      :quant 0
      :mode expressive)

# ::snt So what's the difference between and heidi Blum being judge on a talent show and Kim Kardashian doing idol? Same thing to me!
# ::tokens ["So", "what", "'s", "the", "difference", "between", "and", "heidi", "Blum", "being", "judge", "on", "a", "talent", "show", "and", "Kim", "Kardashian", "doing", "idol", "?", "Same", "thing", "to", "me", "!"]
# ::lemmas ["so", "what", "be", "the", "difference", "between", "and", "heidi", "Blum", "be", "judge", "on", "a", "talent", "show", "and", "Kim", "Kardashian", "do", "idol", "?", "same", "thing", "to", "i", "!"]
(c8-2 / multi-sentence
      :snt1 (c8-13 / differ-02
                   :ARG1 (c8-8 / person
                               :name (c8-1 / name
                                           :op1 "Heidi"
                                           :op2 "Blum")
                               :ARG0-of (c8-10 / judge-01
                                               :location (c8-3 / show
                                                               :mod (c8-12 / talent))))
                   :ARG2 (c8-4 / person
                               :name (c8-7 / name
                                           :op1 "Kim"
                                           :op2 "Kardashian")
                               :ARG0-of (c8-9 / do-02
                                              :ARG1 (c8-11 / idol)))
                   :ARG3 (c8-5 / amr-unknown))
      :snt2 (c8-0 / same-01
                  :ARG1 (c8-14 / thing)
                  :ARG2 (c8-6 / i)))

# ::snt ,..but if she joins, AMERICAN IDOL will GO DOWN THE DRAIN (September , )
# ::tokens [",", "..", "but", "if", "she", "joins", ",", "AMERICAN", "IDOL", "will", "GO", "DOWN", "THE", "DRAIN", "(", "September", ",", ")"]
# ::lemmas [",", "..", "but", "if", "she", "join", ",", "AMERICAN", "IDOL", "will", "go", "down", "the", "DRAIN", "(", "September", ",", ")"]
(c9-5 / contrast-01
      :ARG2 (c9-9 / go-01
                  :ARG1 (c9-4 / person
                              :mod (c9-11 / country
                                          :name (c9-0 / name
                                                      :op1 "America"))
                              :mod (c9-8 / idiot))
                  :ARG4 (c9-10 / down
                               :op1 (c9-2 / river
                                          :name (c9-3 / name
                                                      :op1 "DRAIN")))
                  :condition (c9-7 / join-04
                                   :ARG0 (c9-1 / she))
                  :time (c9-6 / date-entity
                              :month 9)))

# ::snt a GREAT show...,(September , )
# ::tokens ["a", "GREAT", "show", "...", ",(September", ",", ")"]
# ::lemmas ["a", "GREAT", "show", "...", ",(september", ",", ")"]
(c10-2 / show-04
       :ARG1-of (c10-0 / great-02)
       :time (c10-1 / date-entity
                    :month 9))

# ::snt focus on...,(September , )
# ::tokens ["focus", "on", "...", ",(September", ",", ")"]
# ::lemmas ["focus", "on", "...", ",(september", ",", ")"]
(c11-0 / focus-01
       :ARG1 (c11-1 / date-entity
                    :month 9))

# ::snt she better NOT join...: KIM KARDASHIAN (September , )
# ::tokens ["she", "better", "NOT", "join", "...", ":", "KIM", "KARDASHIAN", "(", "September", ",", ")"]
# ::lemmas ["she", "well", "not", "join", "...", ":", "KIM", "KARDASHIAN", "(", "September", ",", ")"]
(c12-2 / recommend-01
       :ARG1 (c12-4 / join-04
                    :ARG0 (c12-1 / she)
                    :polarity -)
       :ARG2 (c12-3 / person
                    :name (c12-0 / name
                                 :op1 "Kim"
                                 :op2 "Kardashian"))
       :time (c12-5 / date-entity
                    :month 9))

# ::snt Update: CELEBRITY INSIDER (September , )
# ::tokens ["Update", ":", "CELEBRITY", "INSIDER", "(", "September", ",", ")"]
# ::lemmas ["update", ":", "celebrity", "INSIDER", "(", "September", ",", ")"]
(c13-1 / update-02
       :ARG2 (c13-2 / publication
                    :name (c13-0 / name
                                 :op1 "CELEBRITY"
                                 :op2 " INSIDER")
                    :time (c13-3 / date-entity
                                 :month 9)))

# ::snt with her fake lips. No thank u
# ::tokens ["with", "her", "fake", "lips", ".", "No", "thank", "u"]
# ::lemmas ["with", "her", "fake", "lip", ".", "no", "thank", "u"]
(c14-2 / multi-sentence
       :snt1 (c14-4 / lip
                    :ARG1-of (c14-0 / fake-02)
                    :part-of (c14-3 / she))
       :snt2 (c14-6 / thank-01
                    :ARG0 (c14-5 / i)
                    :ARG1 (c14-1 / you)
                    :polarity -))

# ::snt I agree with the Filipino boxer the LGBT evil spirits,God should kill all of them.they are no good to the society.
# ::tokens ["I", "agree", "with", "the", "Filipino", "boxer", "the", "LGBT", "evil", "spirits", ",", "God", "should", "kill", "all", "of", "them.they", "are", "no", "good", "to", "the", "society", "."]
# ::lemmas ["i", "agree", "with", "the", "Filipino", "boxer", "the", "LGBT", "evil", "spirit", ",", "God", "should", "kill", "all", "of", "them.they", "be", "no", "good", "to", "the", "society", "."]
(c15-11 / multi-sentence
        :snt1 (c15-7 / agree-01
                     :ARG0 (c15-19 / i)
                     :ARG1 (c15-0 / spirit
                                  :mod (c15-17 / evil)
                                  :mod (c15-1 / lesbian)
                                  :mod (c15-8 / gay-01))
                     :ARG2 (c15-18 / person
                                   :ARG0-of (c15-10 / box-03)
                                   :mod (c15-14 / country
                                                :name (c15-15 / name
                                                              :op1 "Philippines"))))
        :snt2 (c15-16 / recommend-01
                      :ARG1 (c15-4 / kill-01
                                   :ARG0 (c15-12 / person
                                                 :name (c15-13 / name
                                                               :op1 "God"))
                                   :ARG1 (c15-6 / they
                                                :mod (c15-5 / all)))
                      :ARG1-of (c15-9 / cause-01
                                      :ARG0 (c15-2 / good-04
                                                   :ARG1 c15-0
                                                   :ARG2 (c15-3 / society)
                                                   :polarity -))))

# ::snt Anderson cooper, where to be a black guy who is gay,an sure he will not be working at CNN
# ::tokens ["Anderson", "cooper", ",", "where", "to", "be", "a", "black", "guy", "who", "is", "gay", ",", "an", "sure", "he", "will", "not", "be", "working", "at", "CNN"]
# ::lemmas ["Anderson", "cooper", ",", "where", "to", "be", "a", "black", "guy", "who", "be", "gay", ",", "an", "sure", "he", "will", "not", "be", "work", "at", "CNN"]
(c16-7 / and
       :op1 (c16-8 / guy
                   :name (c16-1 / name
                                :op1 "Anderson"
                                :op2 "Cooper")
                   :mod c16-8
                   :ARG1-of (c16-0 / black-05)
                   :ARG1-of (c16-6 / gay-01))
       :location (c16-9 / amr-unknown)
       :op2 (c16-2 / sure-02
                   :ARG0 (c16-10 / i)
                   :ARG1 (c16-5 / work-01
                                :ARG0 c16-8
                                :ARG2 (c16-4 / publication
                                             :name (c16-3 / name
                                                          :op1 "CNN"))
                                :polarity -)))

# ::snt why
# ::tokens ["why"]
# ::lemmas ["why"]
(c18-0 / cause-01
       :ARG0 (c18-1 / amr-unknown))

# ::snt lol, ahahah, I did love Kanye here, like a cute baby
# ::tokens ["lol", ",", "ahahah", ",", "I", "did", "love", "Kanye", "here", ",", "like", "a", "cute", "baby"]
# ::lemmas ["lol", ",", "ahahah", ",", "i", "do", "love", "Kanye", "here", ",", "like", "a", "cute", "baby"]
(c20-5 / love-01
       :ARG0 (c20-8 / i)
       :ARG1 (c20-4 / person
                    :name (c20-1 / name
                                 :op1 "Kanye"))
       :location (c20-3 / here)
       :ARG1-of (c20-2 / resemble-01
                       :ARG2 (c20-0 / baby
                                    :mod (c20-7 / cute)))
       :mod (c20-9 / laugh-01
                   :ARG0 c20-8
                   :manner (c20-6 / loud)
                   :mode expressive))

# ::snt I saw this last night
# ::tokens ["I", "saw", "this", "last", "night"]
# ::lemmas ["i", "see", "this", "last", "night"]
(c21-2 / see-01
       :ARG0 (c21-3 / i)
       :ARG1 (c21-4 / this)
       :time (c21-5 / date-entity
                    :dayperiod (c21-1 / night)
                    :mod (c21-0 / yesterday)))

# ::snt killed it
# ::tokens ["killed", "it"]
# ::lemmas ["kill", "it"]
(c22-0 / kill-01
       :ARG1 (c22-1 / it))

# ::snt when is that
# ::tokens ["when", "is", "that"]
# ::lemmas ["when", "be", "that"]
(c23-1 / amr-unknown
       :time-of (c23-0 / that))

# ::snt wish it was Kanyes farewell season... Can't sing for shit
# ::tokens ["wish", "it", "was", "Kanyes", "farewell", "season", "...", "Ca", "n't", "sing", "for", "shit"]
# ::lemmas ["wish", "it", "be", "Kanyes", "farewell", "season", "...", "can", "not", "sing", "for", "shit"]
(c24-2 / multi-sentence
       :snt1 (c24-8 / wish-01
                    :ARG0 (c24-9 / i)
                    :ARG1 (c24-4 / season
                                 :mod (c24-0 / farewell)
                                 :poss (c24-7 / person
                                              :name (c24-3 / name
                                                           :op1 "Kanyes"))))
       :snt2 (c24-5 / possible-01
                    :ARG1 (c24-1 / sing-01
                                 :ARG0 (c24-6 / i)
                                 :mod (c24-10 / shit))
                    :polarity -))

# ::snt it was cute I guess, but don't see the point of it though ..
# ::tokens ["it", "was", "cute", "I", "guess", ",", "but", "do", "n't", "see", "the", "point", "of", "it", "though", ".."]
# ::lemmas ["it", "be", "cute", "i", "guess", ",", "but", "do", "not", "see", "the", "point", "of", "it", "though", ".."]
(c26-3 / contrast-01
       :ARG1 (c26-6 / cute
                    :domain (c26-4 / it)
                    :ARG1-of (c26-5 / guess-01
                                    :ARG0 (c26-1 / i)))
       :ARG2 (c26-0 / see-01
                    :ARG0 c26-1
                    :ARG1 (c26-2 / point-03
                                 :ARG1 c26-4)
                    :polarity -))

# ::snt He was funny and as always showcased his talent.
# ::tokens ["He", "was", "funny", "and", "as", "always", "showcased", "his", "talent", "."]
# ::lemmas ["he", "be", "funny", "and", "as", "always", "showcase", "his", "talent", "."]
(c28-2 / and
       :op1 (c28-0 / funny
                   :domain (c28-3 / he))
       :op2 (c28-1 / showcase-01
                   :ARG0 c28-3
                   :ARG1 (c28-5 / talent
                                :poss c28-3)
                   :time (c28-4 / always)))

# ::snt err'bdy kwz ths'z gna b massive.....
# ::tokens ["err'bdy", "kwz", "ths'z", "gna", "b", "massive", "....."]
# ::lemmas ["err'bdy", "kwz", "ths'z", "gna", "b", "massive", "....."]
(c29-3 / have-mod-91
       :ARG1 (c29-4 / person
                    :name (c29-1 / name
                                 :op1 "err'dy"
                                 :op2 "kwz"))
       :ARG2 (c29-2 / person
                    :mod (c29-0 / massive)))

# ::snt I think it was hillarious and it went along way to showing Kenya's funny side on idol
# ::tokens ["I", "think", "it", "was", "hillarious", "and", "it", "went", "along", "way", "to", "showing", "Kenya", "'s", "funny", "side", "on", "idol"]
# ::lemmas ["i", "think", "it", "be", "hillarious", "and", "it", "go", "along", "way", "to", "show", "Kenya", "'s", "funny", "side", "on", "idol"]
(c31-5 / and
       :op1 (c31-10 / think-01
                    :ARG0 (c31-9 / i)
                    :ARG1 (c31-6 / hillarious
                                 :domain (c31-4 / it)))
       :op2 (c31-11 / go-01
                    :ARG1 c31-4
                    :ARG4 (c31-3 / show-01
                                 :ARG0 c31-4
                                 :ARG1 (c31-0 / side
                                              :poss (c31-7 / country
                                                           :name (c31-2 / name
                                                                        :op1 "Kenya"))
                                              :mod (c31-1 / funny)
                                              :location (c31-13 / idol)))
                    :mod (c31-12 / along
                                 :op1 (c31-8 / way))))

# ::snt he's a joke.
# ::tokens ["he", "'s", "a", "joke", "."]
# ::lemmas ["he", "be", "a", "joke", "."]
(c32-1 / joke-01
       :ARG2 (c32-0 / he))

# ::snt wow i cant even pretend to like that shit.
# ::tokens ["wow", "i", "ca", "nt", "even", "pretend", "to", "like", "that", "shit", "."]
# ::lemmas ["wow", "i", "can", "not", "even", "pretend", "to", "like", "that", "shit", "."]
(c33-4 / possible-01
       :ARG1 (c33-0 / pretend-01
                    :ARG0 (c33-6 / i)
                    :ARG1 (c33-3 / like-01
                                 :ARG0 c33-6
                                 :ARG1 (c33-1 / shit
                                              :mod (c33-7 / that)))
                    :mod (c33-2 / even))
       :mod (c33-5 / wow
                   :mode expressive)
       :polarity -)

# ::snt kanye cant sing for shit. over rated.
# ::tokens ["kanye", "ca", "nt", "sing", "for", "shit", ".", "over", "rated", "."]
# ::lemmas ["kanye", "can", "not", "sing", "for", "shit", ".", "over", "rate", "."]
(c35-3 / multi-sentence
       :snt1 (c35-6 / possible-01
                    :ARG1 (c35-5 / sing-01
                                 :ARG0 (c35-4 / person
                                              :name (c35-2 / name
                                                           :op1 "Kanye"))
                                 :ARG1-of (c35-7 / cause-01
                                                 :ARG0 (c35-0 / shit)))
                    :polarity -)
       :snt2 (c35-1 / overrate-01))

# ::snt so sick
# ::tokens ["so", "sick"]
# ::lemmas ["so", "sick"]
(c36-1 / sick-02
       :degree (c36-0 / so))

# ::snt jajajaja don't worry, I won't let you
# ::tokens ["jajajaja", "do", "n't", "worry", ",", "I", "wo", "n't", "let", "you"]
# ::lemmas ["jajajaja", "do", "not", "worry", ",", "i", "will", "not", "let", "you"]
(c38-2 / say-01
       :ARG0 (c38-7 / i)
       :ARG1 (c38-5 / worry-01
                    :ARG0 (c38-3 / person
                                 :name (c38-1 / name
                                              :op1 "Jajajaja"))
                    :ARG1-of (c38-6 / cause-01
                                    :ARG0 (c38-4 / let-01
                                                 :ARG0 c38-7
                                                 :ARG1 (c38-0 / you)
                                                 :polarity -))
                    :polarity -
                    :mode imperative)
       :ARG2 c38-3)

# ::snt calla que an no soy la sensacin del bloque cmo predijiste.
# ::tokens ["calla", "que", "an", "no", "soy", "la", "sensacin", "del", "bloque", "cmo", "predijiste", "."]
# ::lemmas ["calla", "que", "an", "no", "soy", "la", "sensacin", "del", "bloque", "cmo", "predijiste", "."]
(c39-6 / call-01
       :ARG0 (c39-0 / you)
       :ARG1 (c39-1 / no-one)
       :ARG2 (c39-3 / sensacin
                    :poss (c39-7 / del-bloque)
                    :ARG1-of (c39-2 / mean-01
                                    :ARG2 (c39-5 / person
                                                 :ARG1-of (c39-4 / predijiste-00)
                                                 :domain c39-0)))
       :mode imperative)

# ::snt t no digas mucho Mara Vernica que ni FAV me has dado en tu vida.
# ::tokens ["t", "no", "digas", "mucho", "Mara", "Vernica", "que", "ni", "FAV", "me", "has", "dado", "en", "tu", "vida", "."]
# ::lemmas ["t", "no", "digas", "mucho", "Mara", "Vernica", "que", "ni", "FAV", "i", "have", "dado", "en", "tu", "vida", "."]
(c40-9 / multi-sentence
       :snt1 (c40-18 / digas-00
                     :ARG0 (c40-17 / i)
                     :mod (c40-6 / much)
                     :polarity -)
       :snt2 (c40-0 / say-01
                    :ARG0 (c40-4 / i)
                    :ARG1 (c40-7 / have-03
                                 :ARG0 (c40-8 / and
                                              :op1 (c40-14 / person
                                                           :name (c40-13 / name
                                                                         :op1 "Mara"
                                                                         :op2 "Vernica"))
                                              :op2 (c40-10 / person
                                                           :ARG0-of (c40-16 / have-org-role-91
                                                                            :ARG1 (c40-2 / organization
                                                                                         :name (c40-11 / name
                                                                                                       :op1 "FAV")))))
                                 :ARG1 (c40-12 / dado)
                                 :location (c40-5 / vida
                                                  :poss (c40-3 / you)))
                    :ARG2 (c40-1 / person
                                 :name (c40-15 / name
                                               :op1 "Mara"
                                               :op2 "Vernica"))))

# ::snt desde que nac. Vaya y pregunte.
# ::tokens ["desde", "que", "nac", ".", "Vaya", "y", "pregunte", "."]
# ::lemmas ["desde", "que", "nac", ".", "Vaya", "y", "pregunte", "."]
(c41-1 / multi-sentence
       :snt1 (c41-0 / nac
                    :de (c41-4 / que))
       :snt2 (c41-5 / and
                    :op1 (c41-2 / vaya)
                    :op2 (c41-3 / pregunte-01)))

# ::snt solo porque es negro das RT.
# ::tokens ["solo", "porque", "es", "negro", "das", "RT", "."]
# ::lemmas ["solo", "porque", "es", "negro", "das", "RT", "."]
(c42-0 / negro
       :domain (c42-3 / eso)
       :ARG1-of (c42-2 / say-01
                       :ARG0 (c42-5 / publication
                                    :name (c42-4 / name
                                                 :op1 "RT")))
       :mod (c42-1 / porque))

# ::snt way to jinx your last season Ryan. Sucks
# ::tokens ["way", "to", "jinx", "your", "last", "season", "Ryan", ".", "Sucks"]
# ::lemmas ["way", "to", "jinx", "your", "last", "season", "Ryan", ".", "suck"]
(c43-1 / multi-sentence
       :snt1 (c43-3 / say-01
                    :ARG0 (c43-8 / i)
                    :ARG1 (c43-7 / way
                                 :manner-of (c43-4 / inx-01
                                                   :ARG0 (c43-5 / person
                                                                :name (c43-2 / name
                                                                             :op1 "Ryan"))
                                                   :ARG1 (c43-0 / season
                                                                :mod (c43-6 / last)
                                                                :poss c43-5)))
                    :ARG2 c43-5)
       :snt2 (c43-9 / suck-03))

# ::snt talentless ass. Can't even carry a note. Has to rap. Lmao
# ::tokens ["talentless", "ass", ".", "Ca", "n't", "even", "carry", "a", "note", ".", "Has", "to", "rap", ".", "Lmao"]
# ::lemmas ["talentless", "ass", ".", "can", "not", "even", "carry", "a", "note", ".", "have", "to", "rap", ".", "Lmao"]
(c44-1 / multi-sentence
       :snt1 (c44-3 / ass
                    :mod (c44-10 / talent)
                    :polarity -)
       :snt2 (c44-6 / possible-01
                    :ARG1 (c44-8 / carry-01
                                 :ARG1 (c44-2 / note)
                                 :mod (c44-5 / even))
                    :polarity -)
       :snt3 (c44-0 / obligate-01
                    :ARG2 (c44-4 / rap-01)
                    :mod (c44-7 / laugh-01
                                :ARG0 (c44-9 / i)
                                :manner (c44-11 / loud)
                                :mode expressive)))

# ::snt but it was fun Theo
# ::tokens ["but", "it", "was", "fun", "Theo"]
# ::lemmas ["but", "it", "be", "fun", "Theo"]
(c45-2 / say-01
       :ARG0 (c45-6 / i)
       :ARG1 (c45-5 / contrast-01
                    :ARG2 (c45-0 / fun-01
                                 :ARG1 (c45-3 / it)))
       :ARG2 (c45-4 / person
                    :name (c45-1 / name
                                 :op1 " Theo")))

# ::snt kin your man is sick.what is he going to do there.that is crazy
# ::tokens ["kin", "your", "man", "is", "sick.what", "is", "he", "going", "to", "do", "there.that", "is", "crazy"]
# ::lemmas ["kin", "your", "man", "be", "sick.what", "be", "he", "go", "to", "do", "there.that", "be", "crazy"]
(c46-1 / multi-sentence
       :snt1 (c46-2 / sick-05
                    :ARG1 (c46-3 / man
                                 :poss (c46-0 / you)))
       :snt2 (c46-8 / do-02
                    :ARG0 (c46-4 / he)
                    :ARG1 (c46-7 / amr-unknown)
                    :location (c46-6 / there))
       :snt3 (c46-5 / crazy-03
                    :ARG1 (c46-9 / that)))

# ::snt il gre
# ::tokens ["il", "gre"]
# ::lemmas ["il", "gre"]
(c47-0 / greasy
       :mode expressive)

# ::snt yo
# ::tokens ["yo"]
# ::lemmas ["yo"]
(c48-0 / yo)

# ::snt ptdrrrr jpp de lui
# ::tokens ["ptdrrrr", "jpp", "de", "lui"]
# ::lemmas ["ptdrrrr", "jpp", "de", "lui"]
(c49-1 / person
       :name (c49-0 / name
                    :op1 "Jpp"
                    :op2 "de"
                    :op3 "Lui"))

# ::snt at
# ::tokens ["at"]
# ::lemmas ["at"]
(c50-0 / at)
