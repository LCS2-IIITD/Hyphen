# ::snt there's a horse today named Dothraki Queen... they really know how to get me.
# ::tokens ["there", "'s", "a", "horse", "today", "named", "Dothraki", "Queen", "...", "they", "really", "know", "how", "to", "get", "me", "."]
# ::lemmas ["there", "be", "a", "horse", "today", "name", "Dothraki", "Queen", "...", "they", "really", "know", "how", "to", "get", "i", "."]
(c1-6 / cause-01
      :ARG0 (c1-0 / name-01
                  :ARG1 (c1-2 / horse)
                  :ARG2 (c1-3 / person
                              :name (c1-4 / name
                                          :op1 "Dothraki"
                                          :op2 "Queen"))
                  :time (c1-8 / today))
      :ARG1 (c1-5 / know-01
                  :ARG0 (c1-11 / they)
                  :ARG1 (c1-7 / thing
                              :manner-of (c1-9 / get-01
                                               :ARG0 c1-11
                                               :ARG1 (c1-10 / i)))
                  :ARG1-of (c1-1 / real-04)))

# ::snt heard he liked it in the rear of the field.
# ::tokens ["heard", "he", "liked", "it", "in", "the", "rear", "of", "the", "field", "."]
# ::lemmas ["hear", "he", "like", "it", "in", "the", "rear", "of", "the", "field", "."]
(c2-2 / hear-01
      :ARG1 (c2-3 / like-01
                  :ARG0 (c2-4 / he)
                  :ARG1 (c2-5 / it)
                  :location (c2-1 / rear
                                  :part-of (c2-0 / field))))

# ::snt I'd argue thats the best name
# ::tokens ["I", "'d", "argue", "that", "s", "the", "best", "name"]
# ::lemmas ["i", "would", "argue", "that", "s", "the", "good", "name"]
(c3-2 / argue-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-0 / name
                  :domain (c3-5 / that)
                  :ARG1-of (c3-3 / have-degree-91
                                 :ARG2 (c3-6 / good-02
                                             :ARG1 c3-0)
                                 :ARG3 (c3-1 / most))))

# ::snt shhh just close your eyes. It will all be over soon
# ::tokens ["shhh", "just", "close", "your", "eyes", ".", "It", "will", "all", "be", "over", "soon"]
# ::lemmas ["shhh", "just", "close", "your", "eye", ".", "it", "will", "all", "be", "over", "soon"]
(c4-3 / multi-sentence
      :snt1 (c4-6 / close-01
                  :ARG0 (c4-2 / you
                              :part (c4-5 / eye
                                          :ARG1-of c4-6))
                  :mod (c4-7 / just)
                  :mode imperative)
      :snt2 (c4-0 / over-01
                  :ARG1 (c4-8 / it)
                  :time (c4-4 / soon)
                  :mod (c4-9 / all))
      :mod (c4-1 / shhh
                 :mode expressive))

# ::snt Gone but not forgotten, The Cock.
# ::tokens ["Gone", "but", "not", "forgotten", ",", "The", "Cock", "."]
# ::lemmas ["go", "but", "not", "forget", ",", "the", "Cock", "."]
(c5-3 / say-01
      :ARG1 (c5-5 / contrast-01
                  :ARG1 (c5-0 / old)
                  :ARG2 (c5-1 / forget-01
                              :polarity -))
      :ARG2 (c5-4 / person
                  :name (c5-2 / name
                              :op1 "The"
                              :op2 "Cock")))

# ::snt Oh, Mucho, It's true. Just the sound of your name makes every mare swoon....
# ::tokens ["Oh", ",", "Mucho", ",", "It", "'s", "true", ".", "Just", "the", "sound", "of", "your", "name", "makes", "every", "mare", "swoon", "...."]
# ::lemmas ["oh", ",", "Mucho", ",", "it", "be", "true", ".", "just", "the", "sound", "of", "your", "name", "make", "every", "mare", "swoon", "...."]
(c6-3 / multi-sentence
      :snt1 (c6-10 / true-01
                   :ARG1 (c6-9 / it)
                   :mod (c6-0 / oh
                              :mode expressive))
      :snt2 (c6-7 / make-02
                  :ARG0 (c6-5 / sound-01
                              :ARG1 (c6-4 / name
                                          :poss (c6-2 / you))
                              :mod (c6-8 / just))
                  :ARG1 (c6-1 / swoon-01
                              :ARG0 (c6-11 / mare
                                           :mod (c6-6 / every)))))

# ::snt Zing! It was the coolest name by far
# ::tokens ["Zing", "!", "It", "was", "the", "coolest", "name", "by", "far"]
# ::lemmas ["ze", "!", "it", "be", "the", "cool", "name", "by", "far"]
(c7-3 / zing
      :ARG1-of (c7-1 / name-01
                     :ARG2 (c7-6 / it)
                     :ARG1-of (c7-4 / have-degree-91
                                    :ARG2 (c7-5 / cool-04
                                                :ARG1 c7-1)
                                    :ARG3 (c7-2 / most
                                                :quant (c7-0 / far))))
      :mode expressive)

# ::snt I can't Justify Ozzie's pick of Magnum Moon
# ::tokens ["I", "ca", "n't", "Justify", "Ozzie", "'s", "pick", "of", "Magnum", "Moon"]
# ::lemmas ["i", "can", "not", "Justify", "Ozzie", "'s", "pick", "of", "Magnum", "Moon"]
(c8-4 / possible-01
      :ARG1 (c8-5 / Justify-01
                  :ARG0 (c8-6 / i)
                  :ARG1 (c8-2 / pick-01
                              :ARG0 (c8-7 / person
                                          :name (c8-1 / name
                                                      :op1 "Ozzie"))
                              :ARG1 (c8-0 / book
                                          :name (c8-3 / name
                                                      :op1 "Magnum"
                                                      :op2 "Moon"))))
      :polarity -)

# ::snt Ozzies taking Magnum Moon as well
# ::tokens ["Ozzies", "taking", "Magnum", "Moon", "as", "well"]
# ::lemmas ["ozzie", "take", "Magnum", "Moon", "as", "well"]
(c10-3 / take-01
       :ARG0 (c10-0 / ozzie)
       :ARG1 (c10-1 / book
                    :name (c10-2 / name
                                 :op1 "Magnum"
                                 :op2 "Moon"))
       :mod (c10-4 / as-well))

# ::snt Im going with Magnum Moon
# ::tokens ["I", "m", "going", "with", "Magnum", "Moon"]
# ::lemmas ["i", "m", "go", "with", "Magnum", "Moon"]
(c11-0 / go-06
       :ARG0 (c11-3 / i)
       :accompanier (c11-1 / organization
                           :name (c11-2 / name
                                        :op1 "Magnum"
                                        :op2 "Moon")))
