# ::snt Oh he could be a poster boy alright but it's not for that
# ::tokens ["Oh", "he", "could", "be", "a", "poster", "boy", "alright", "but", "it", "'s", "not", "for", "that"]
# ::lemmas ["oh", "he", "could", "be", "a", "poster", "boy", "alright", "but", "it", "be", "not", "for", "that"]
(c1-5 / contrast-01
      :ARG1 (c1-4 / possible-01
                  :ARG1 (c1-1 / boy
                              :ARG0-of (c1-2 / post-01)
                              :domain (c1-3 / he)
                              :mod (c1-0 / oh
                                         :mode expressive))
                  :mod (c1-7 / all))
      :ARG2 (c1-6 / have-purpose-91
                  :ARG2 c1-1
                  :polarity -))

# ::snt I agree, he is a real me too person, after all its all about him correct?
# ::tokens ["I", "agree", ",", "he", "is", "a", "real", "me", "too", "person", ",", "after", "all", "its", "all", "about", "him", "correct", "?"]
# ::lemmas ["i", "agree", ",", "he", "be", "a", "real", "i", "too", "person", ",", "after", "all", "its", "all", "about", "he", "correct", "?"]
(c3-1 / agree-01
      :ARG0 (c3-9 / i)
      :ARG1 (c3-8 / and
                  :op1 (c3-4 / person
                             :domain (c3-3 / he)
                             :ARG1-of (c3-2 / real-04)
                             :mod (c3-7 / too))
                  :op2 (c3-5 / concern-02
                             :ARG0 (c3-0 / it
                                         :mod (c3-6 / all))
                             :ARG1 c3-3
                             :mod (c3-10 / after-all)
                             :ARG1-of (c3-11 / request-confirmation-91))))

# ::snt Yes. Yes he did.
# ::tokens ["Yes", ".", "Yes", "he", "did", "."]
# ::lemmas ["yes", ".", "yes", "he", "do", "."]
(c5-2 / multi-sentence
      :snt1 (c5-1 / yes)
      :snt2 (c5-0 / do-02
                  :ARG0 (c5-3 / he)))

# ::snt Sick
# ::tokens ["Sick"]
# ::lemmas ["sick"]
(c6-0 / sick-05)

# ::snt Yeah! The WANTED poster
# ::tokens ["Yeah", "!", "The", "WANTED", "poster"]
# ::lemmas ["yeah", "!", "the", "wanted", "poster"]
(c11-2 / person
       :ARG0-of (c11-3 / post-01)
       :ARG1-of (c11-0 / want-01)
       :mod (c11-1 / yeah
                   :mode expressive))

# ::snt I came to the comments just to see if I should read the article and I reckon I shan't.
# ::tokens ["I", "came", "to", "the", "comments", "just", "to", "see", "if", "I", "should", "read", "the", "article", "and", "I", "reckon", "I", "sha", "n't", "."]
# ::lemmas ["i", "come", "to", "the", "comment", "just", "to", "see", "if", "i", "should", "read", "the", "article", "and", "i", "reckon", "i", "shall", "not", "."]
(c13-7 / and
       :op1 (c13-4 / come-01
                   :ARG1 (c13-6 / i)
                   :ARG4 (c13-11 / comment-01)
                   :purpose (c13-1 / see-01
                                   :ARG0 c13-6
                                   :ARG1 (c13-5 / truth-value
                                                :polarity-of (c13-2 / recommend-01
                                                                    :ARG1 (c13-10 / read-01
                                                                                  :ARG0 c13-6
                                                                                  :ARG1 (c13-8 / article))))
                                   :mod (c13-9 / just)))
       :op2 (c13-3 / reckon-01
                   :ARG0 c13-6
                   :ARG1 (c13-0 / read-01
                                :ARG0 c13-6
                                :ARG1 c13-8
                                :polarity -)))

# ::snt This isn't an Onion article?
# ::tokens ["This", "is", "n't", "an", "Onion", "article", "?"]
# ::lemmas ["this", "be", "not", "an", "Onion", "article", "?"]
(c14-2 / article
       :mod (c14-3 / publication
                   :name (c14-0 / name
                                :op1 "Onion"))
       :domain (c14-4 / this)
       :ARG1-of (c14-1 / request-confirmation-91)
       :polarity -)

# ::snt Woody Allen
# ::tokens ["Woody", "Allen"]
# ::lemmas ["Woody", "Allen"]
(c16-1 / person
       :name (c16-0 / name
                    :op1 "Woody"
                    :op2 "Allen"))

# ::snt Marrying your underage stepdaughter doesnt make you a champion for womens movement thank you very much!
# ::tokens ["Marrying", "your", "underage", "stepdaughter", "does", "nt", "make", "you", "a", "champion", "for", "womens", "movement", "thank", "you", "very", "much", "!"]
# ::lemmas ["marry", "your", "underage", "stepdaughter", "do", "not", "make", "you", "a", "champion", "for", "women", "movement", "thank", "you", "very", "much", "!"]
(c17-1 / make-02
       :ARG0 (c17-4 / marry-01
                    :ARG1 (c17-0 / you)
                    :ARG2 (c17-5 / person
                                 :ARG0-of (c17-6 / have-rel-role-91
                                                 :ARG1 c17-0
                                                 :ARG2 (c17-2 / stepdaughter
                                                              :mod (c17-12 / underage)))))
       :ARG1 (c17-8 / champion
                    :domain c17-0
                    :topic (c17-10 / movement-07
                                   :ARG1 (c17-9 / woman)))
       :ARG2-of (c17-11 / thank-01
                        :ARG1 c17-0
                        :mod (c17-7 / much
                                    :degree (c17-3 / very)))
       :polarity -)

# ::snt Pedophile
# ::tokens ["Pedophile"]
# ::lemmas ["pedophile"]
(c19-0 / pedophile)

# ::snt You arent any different, if you werent famous and living abroad with you should have gone to jail. A pathetic man
# ::tokens ["You", "are", "nt", "any", "different", ",", "if", "you", "were", "nt", "famous", "and", "living", "abroad", "with", "you", "should", "have", "gone", "to", "jail", ".", "A", "pathetic", "man"]
# ::lemmas ["you", "be", "not", "any", "different", ",", "if", "you", "be", "not", "famous", "and", "live", "abroad", "with", "you", "should", "have", "go", "to", "jail", ".", "a", "pathetic", "man"]
(c20-2 / multi-sentence
       :snt1 (c20-12 / differ-02
                     :ARG1 (c20-1 / you)
                     :mod (c20-10 / any)
                     :polarity -)
       :snt2 (c20-3 / recommend-01
                    :ARG1 (c20-11 / go-02
                                  :ARG0 (c20-13 / you)
                                  :ARG4 (c20-8 / jail)
                                  :condition (c20-9 / and
                                                    :op1 (c20-0 / fame-01
                                                                :ARG1 c20-13
                                                                :polarity -)
                                                    :op2 (c20-5 / live-01
                                                                :ARG0 c20-13
                                                                :location (c20-7 / abroad)
                                                                :accompanier c20-13))))
       :snt3 (c20-4 / man
                    :mod (c20-6 / pathetic)))

# ::snt I have lost count of the number of people I have told to shut up today...Woody....shut up. Crawl back in your hole.
# ::tokens ["I", "have", "lost", "count", "of", "the", "number", "of", "people", "I", "have", "told", "to", "shut", "up", "today", "...", "Woody", "....", "shut", "up", ".", "Crawl", "back", "in", "your", "hole", "."]
# ::lemmas ["i", "have", "lose", "count", "of", "the", "number", "of", "people", "i", "have", "tell", "to", "shut", "up", "today", "...", "woody", "....", "shut", "up", ".", "crawl", "back", "in", "your", "hole", "."]
(c21-4 / multi-sentence
       :snt1 (c21-8 / lose-02
                    :ARG0 (c21-12 / i)
                    :ARG1 (c21-11 / count-01
                                  :ARG0 c21-12
                                  :ARG1 (c21-3 / number
                                               :quant-of (c21-9 / person
                                                                :ARG1-of (c21-13 / tell-01
                                                                                 :ARG0 c21-12
                                                                                 :ARG2 (c21-5 / shut-up-06
                                                                                              :ARG1 c21-9)
                                                                                 :time (c21-15 / today))))))
       :snt2 (c21-0 / say-01
                    :ARG1 c21-5
                    :ARG2 c21-9
                    :name (c21-7 / name
                                 :op1 "Woody"))
       :snt3 (c21-6 / and
                    :op1 c21-5
                    :op2 (c21-14 / crawl-01
                                 :ARG0 (c21-2 / you)
                                 :ARG1 (c21-10 / hole
                                               :poss c21-2)
                                 :direction (c21-1 / back)
                                 :mode imperative)))

# ::snt Didnt this man marry his underaged adopted daughter
# ::tokens ["Did", "nt", "this", "man", "marry", "his", "underaged", "adopted", "daughter"]
# ::lemmas ["do", "not", "this", "man", "marry", "his", "underaged", "adopt", "daughter"]
(c23-0 / marry-01
       :ARG1 (c23-1 / man
                    :mod (c23-4 / this))
       :ARG2 (c23-2 / person
                    :ARG1-of (c23-6 / adopt-01)
                    :mod (c23-8 / underage)
                    :ARG0-of (c23-3 / have-rel-role-91
                                    :ARG1 c23-1
                                    :ARG2 (c23-7 / daughter)))
       :polarity (c23-5 / amr-unknown)
       :polarity -)

# ::snt No! No! No! No! No! If hes the poster boy for something, its pedophilia.
# ::tokens ["No", "!", "No", "!", "No", "!", "No", "!", "No", "!", "If", "he", "s", "the", "poster", "boy", "for", "something", ",", "its", "pedophilia", "."]
# ::lemmas ["no", "!", "no", "!", "no", "!", "no", "!", "no", "!", "if", "he", "s", "the", "poster", "boy", "for", "something", ",", "its", "pedophilia", "."]
(c24-2 / multi-sentence
       :snt1 (c24-1 / no)
       :snt2 (c24-5 / no)
       :snt3 (c24-6 / no)
       :snt4 (c24-10 / no)
       :snt5 (c24-7 / pedophilia
                    :condition (c24-0 / boy
                                      :ARG0-of (c24-3 / post-01)
                                      :domain (c24-8 / he)
                                      :ARG1-of (c24-9 / cause-01
                                                      :ARG0 (c24-4 / something)))))

# ::snt I guess, if he means to serve as a warning against not believing children and women, so predators can continue their abuse. Then yes him, Weinstein, and Cosby could all be on that poster.
# ::tokens ["I", "guess", ",", "if", "he", "means", "to", "serve", "as", "a", "warning", "against", "not", "believing", "children", "and", "women", ",", "so", "predators", "can", "continue", "their", "abuse", ".", "Then", "yes", "him", ",", "Weinstein", ",", "and", "Cosby", "could", "all", "be", "on", "that", "poster", "."]
# ::lemmas ["i", "guess", ",", "if", "he", "mean", "to", "serve", "as", "a", "warning", "against", "not", "believe", "child", "and", "woman", ",", "so", "predator", "can", "continue", "their", "abuse", ".", "then", "yes", "he", ",", "Weinstein", ",", "and", "Cosby", "could", "all", "be", "on", "that", "poster", "."]
(c25-16 / multi-sentence
        :snt1 (c25-11 / guess-01
                      :ARG0 (c25-25 / i)
                      :ARG1 (c25-7 / have-condition-91
                                   :ARG2 (c25-6 / mean-02
                                                :ARG0 (c25-24 / he)
                                                :ARG1 (c25-0 / serve-01
                                                             :ARG0 c25-24
                                                             :ARG1 (c25-23 / warn-01
                                                                           :ARG0 c25-24
                                                                           :ARG1 (c25-15 / believe-01
                                                                                         :ARG1 (c25-10 / and
                                                                                                       :op1 (c25-19 / child)
                                                                                                       :op2 (c25-1 / woman))
                                                                                         :purpose (c25-22 / possible-01
                                                                                                          :ARG1 (c25-14 / continue-01
                                                                                                                        :ARG0 (c25-17 / predator)
                                                                                                                        :ARG1 (c25-9 / abuse-01
                                                                                                                                     :ARG1 c25-17)))
                                                                                         :polarity -))))))
        :snt2 (c25-3 / possible-01
                     :ARG1 (c25-4 / include-91
                                  :ARG1 (c25-8 / and
                                               :op1 (c25-5 / he)
                                               :op2 (c25-2 / person
                                                           :name (c25-21 / name
                                                                         :op1 "Weinstein"))
                                               :op3 (c25-12 / person
                                                            :name (c25-18 / name
                                                                          :op1 "Bill"
                                                                          :op2 "Cosby"))
                                               :mod (c25-26 / all))
                                  :ARG2 (c25-27 / person
                                                :ARG0-of (c25-20 / post-01)
                                                :mod (c25-13 / that)))))

# ::snt Uhhhh wtf
# ::tokens ["Uhhhh", "wtf"]
# ::lemmas ["uhhhh", "wtf"]
(c26-0 / fuck
       :mod (c26-1 / uhhhh
                   :mode expressive)
       :mode expressive)

# ::snt He should - the wanted poster
# ::tokens ["He", "should", "-", "the", "wanted", "poster"]
# ::lemmas ["he", "should", "-", "the", "wanted", "poster"]
(c27-0 / recommend-01
       :ARG1 (c27-1 / person
                    :ARG0-of (c27-2 / post-01)
                    :ARG1-of (c27-3 / want-01)))

# ::snt Wtf?! He another sick ass!
# ::tokens ["Wtf", "?", "!", "He", "another", "sick", "ass", "!"]
# ::lemmas ["Wtf", "?", "!", "he", "another", "sick", "ass", "!"]
(c29-1 / multi-sentence
       :snt1 (c29-6 / amr-unknown
                    :mod (c29-0 / fuck
                                :mode expressive))
       :snt2 (c29-5 / ass
                    :ARG1-of (c29-2 / sick-02)
                    :mod (c29-4 / another)
                    :domain (c29-3 / he)))

# ::snt Not gonna bother reading this.
# ::tokens ["Not", "gon", "na", "bother", "reading", "this", "."]
# ::lemmas ["not", "going", "to", "bother", "read", "this", "."]
(c30-1 / bother-02
       :ARG0 (c30-2 / you)
       :ARG1 (c30-0 / read-01
                    :ARG0 c30-2
                    :ARG1 (c30-3 / this))
       :polarity -)

# ::snt Um.
# ::tokens ["Um", "."]
# ::lemmas ["um", "."]
(c31-0 / um
       :mode expressive)

# ::snt He shud b in jail
# ::tokens ["He", "shud", "b", "in", "jail"]
# ::lemmas ["he", "shud", "b", "in", "jail"]
(c32-1 / jail-01
       :ARG1 (c32-0 / he)
       :mod (c32-2 / shud
                   :mode expressive))

# ::snt Oh, he's part of it, apparently, just not in the way he thinks . . .
# ::tokens ["Oh", ",", "he", "'s", "part", "of", "it", ",", "apparently", ",", "just", "not", "in", "the", "way", "he", "thinks", ".", ".", "."]
# ::lemmas ["oh", ",", "he", "be", "part", "of", "it", ",", "apparently", ",", "just", "not", "in", "the", "way", "he", "think", ".", ".", "."]
(c33-6 / and
       :op1 (c33-1 / he
                   :part-of (c33-5 / it))
       :op2 (c33-3 / have-manner-91
                   :ARG1 c33-1
                   :ARG2 (c33-2 / way
                                :manner-of (c33-4 / think-01
                                                  :ARG0 c33-1))
                   :mod (c33-7 / just)
                   :ARG1-of (c33-8 / appear-02)
                   :polarity -)
       :mod (c33-0 / oh
                   :mode expressive))
