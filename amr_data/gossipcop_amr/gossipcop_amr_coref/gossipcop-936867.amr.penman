# ::snt Memories
# ::tokens ["Memories"]
# ::lemmas ["memory"]
(c1-0 / memory)

# ::snt This wedding was so emotional so beautiful. I love how they unity two different beliefs into one monumental moment. ONE WORLD ONE LOVE. GOD BLESS THIS UNITY.
# ::tokens ["This", "wedding", "was", "so", "emotional", "so", "beautiful", ".", "I", "love", "how", "they", "unity", "two", "different", "beliefs", "into", "one", "monumental", "moment", ".", "ONE", "WORLD", "ONE", "LOVE", ".", "GOD", "BLESS", "THIS", "UNITY", "."]
# ::lemmas ["this", "wedding", "be", "so", "emotional", "so", "beautiful", ".", "i", "love", "how", "they", "unity", "two", "different", "belief", "into", "one", "monumental", "moment", ".", "ONE", "world", "ONE", "love", ".", "GOD", "bless", "this", "UNITY", "."]
(c2-12 / multi-sentence
       :snt1 (c2-18 / emotional-02
                    :ARG1 (c2-20 / wed-01
                                 :mod (c2-9 / this))
                    :degree (c2-0 / so))
       :snt2 (c2-11 / beautiful-02
                    :ARG1 c2-20
                    :mod (c2-14 / this))
       :degree (c2-6 / so)
       :snt3 (c2-3 / love-01
                   :ARG0 (c2-21 / i)
                   :ARG1 (c2-16 / unity-00
                                :ARG0 (c2-22 / they)
                                :ARG1 (c2-2 / believe-01
                                            :ARG1-of (c2-23 / differ-02)
                                            :quant 2)
                                :prep-into (c2-8 / moment
                                                 :mod (c2-15 / monumental)
                                                 :quant 1)))
       :snt4 (c2-10 / love-01
                    :ARG0 (c2-7 / one
                                :op1 (c2-4 / world
                                           :quant 1))
                    :ARG1 (c2-19 / person
                                 :name (c2-17 / name
                                              :op1 "God")))
       :snt5 (c2-5 / bless-01
                   :ARG0 c2-19
                   :name c2-17
                   :mode imperative
                   :op1 "God")
       :ARG1 (c2-13 / nationality
                    :mod (c2-1 / this)))

# ::snt Hahaha
# ::tokens ["Hahaha"]
# ::lemmas ["Hahaha"]
(c3-0 / haha
      :mode expressive)

# ::snt wow..Kodwa where's my Royal prince
# ::tokens ["wow", "..", "Kodwa", "where", "'s", "my", "Royal", "prince"]
# ::lemmas ["wow", "..", "Kodwa", "where", "be", "my", "royal", "prince"]
(c4-0 / be-located-at-91
      :ARG1 (c4-3 / prince
                  :mod (c4-2 / royal)
                  :poss (c4-6 / i))
      :ARG2 (c4-4 / city
                  :name (c4-1 / name
                              :op1 "Kodwa"))
      :mod (c4-5 / wow
                 :mode expressive))

# ::snt Memories
# ::tokens ["Memories"]
# ::lemmas ["memory"]
(c5-0 / memory)

# ::snt To much of this taking away from my tv shows sorry to say this I dont care I want my tv show ok n Saturday morning not this mumbo jumbo crap
# ::tokens ["To", "much", "of", "this", "taking", "away", "from", "my", "tv", "shows", "sorry", "to", "say", "this", "I", "do", "nt", "care", "I", "want", "my", "tv", "show", "ok", "n", "Saturday", "morning", "not", "this", "mumbo", "jumbo", "crap"]
# ::lemmas ["to", "much", "of", "this", "take", "away", "from", "my", "tv", "show", "sorry", "to", "say", "this", "i", "do", "not", "care", "i", "want", "my", "tv", "show", "ok", "n", "Saturday", "morning", "not", "this", "mumbo", "jumbo", "crap"]
(c6-0 / sorry-01
      :ARG1 (c6-17 / i)
      :ARG2 (c6-4 / say-01
                  :ARG0 c6-17
                  :ARG1 (c6-8 / and
                              :op1 (c6-11 / care-01
                                          :ARG0 c6-17
                                          :polarity -)
                              :op2 (c6-16 / want-01
                                          :ARG0 c6-17
                                          :ARG1 (c6-3 / show-04
                                                      :ARG0 c6-17
                                                      :ARG3 (c6-7 / television))
                                          :time (c6-19 / date-entity
                                                       :weekday (c6-15 / saturday)
                                                       :dayperiod (c6-10 / morning))
                                          :ARG1-of (c6-9 / contrast-01
                                                         :ARG2 (c6-12 / thing
                                                                      :mod (c6-5 / mumbo)
                                                                      :mod (c6-18 / this)
                                                                      :ARG1-of (c6-2 / crap-01)
                                                                      :mod (c6-6 / jumbo))))))
      :ARG1-of (c6-14 / cause-01
                      :ARG0 (c6-1 / take-away-05
                                  :ARG1 c6-18
                                  :quant (c6-13 / much))
                      :source c6-3))

# ::snt kids died yesterday but thank god we have all the details about the wedding rings
# ::tokens ["kids", "died", "yesterday", "but", "thank", "god", "we", "have", "all", "the", "details", "about", "the", "wedding", "rings"]
# ::lemmas ["kid", "die", "yesterday", "but", "thank", "god", "we", "have", "all", "the", "detail", "about", "the", "wedding", "ring"]
(c8-7 / contrast-01
      :ARG1 (c8-12 / die-01
                   :ARG1 (c8-4 / kid)
                   :time (c8-0 / yesterday))
      :ARG2 (c8-3 / have-03
                  :ARG0 (c8-8 / we)
                  :ARG1 (c8-9 / detail
                              :topic (c8-2 / ring
                                           :mod (c8-6 / wed-01))
                              :mod (c8-11 / all))
                  :ARG2-of (c8-10 / thank-01
                                  :ARG0 c8-8
                                  :ARG1 (c8-5 / person
                                              :name (c8-1 / name
                                                          :op1 "God")))))

# ::snt Donald Trump Threatens Kim Jong-un With Decimation If He Does Not Denuclearise Korean Peninsula
# ::tokens ["Donald", "Trump", "Threatens", "Kim", "Jong", "-", "un", "With", "Decimation", "If", "He", "Does", "Not", "Denuclearise", "Korean", "Peninsula"]
# ::lemmas ["Donald", "Trump", "threaten", "Kim", "Jong", "-", "un", "with", "Decimation", "if", "he", "do", "not", "denuclearise", "Korean", "Peninsula"]
(c9-6 / threaten-01
      :ARG0 (c9-3 / person
                  :name (c9-0 / name
                              :op1 "Donald"
                              :op2 "Trump"))
      :ARG1 (c9-7 / decimate-01
                  :ARG0 c9-3
                  :ARG1 (c9-1 / person
                              :name (c9-2 / name
                                          :op1 "Kim"
                                          :op2 "Jong-un")
                              :ARG2-of c9-6))
      :condition (c9-5 / Denuclearize-01
                       :ARG0 c9-1
                       :ARG1 (c9-8 / peninsula
                                   :name (c9-4 / name
                                               :op1 "Korean"
                                               :op2 "Peninsula"))
                       :polarity -))

# ::snt looking for logo, website, brochure, flyer apps, brand identity, UX/UI designer ? Contact
# ::tokens ["looking", "for", "logo", ",", "website", ",", "brochure", ",", "flyer", "apps", ",", "brand", "identity", ",", "UX", "/", "UI", "designer", "?", "Contact"]
# ::lemmas ["look", "for", "logo", ",", "website", ",", "brochure", ",", "flyer", "app", ",", "brand", "identity", ",", "UX", "/", "UI", "designer", "?", "contact"]
(c10-2 / multi-sentence
       :snt1 (c10-5 / look-01
                    :ARG1 (c10-12 / and
                                  :op1 (c10-15 / logo)
                                  :op2 (c10-8 / website)
                                  :op3 (c10-1 / brochure)
                                  :op4 (c10-11 / app
                                               :mod (c10-0 / flyer))
                                  :op5 (c10-13 / identity
                                               :mod (c10-4 / brand))
                                  :op6 (c10-6 / person
                                              :ARG0-of (c10-14 / design-01
                                                               :ARG1 (c10-3 / slash
                                                                            :op1 (c10-16 / UX)
                                                                            :op2 (c10-7 / UI)))))
                    :polarity (c10-9 / amr-unknown))
       :snt2 (c10-10 / contact-01))

# ::snt Those hands will never work
# ::tokens ["Those", "hands", "will", "never", "work"]
# ::lemmas ["those", "hand", "will", "never", "work"]
(c11-0 / work-09
       :ARG1 (c11-2 / hand
                    :mod (c11-3 / that))
       :time (c11-1 / ever)
       :polarity -)
