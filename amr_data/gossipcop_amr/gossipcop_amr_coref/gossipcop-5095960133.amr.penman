# ::snt And now hes back up
# ::tokens ["And", "now", "he", "s", "back", "up"]
# ::lemmas ["and", "now", "he", "s", "back", "up"]
(c1-3 / and
      :op2 (c1-0 / back-up-04
                 :ARG0 (c1-1 / he)
                 :time (c1-2 / now)))

# ::snt I just posted the article and they have the screenshots this is what he was at earlier today.
# ::tokens ["I", "just", "posted", "the", "article", "and", "they", "have", "the", "screenshots", "this", "is", "what", "he", "was", "at", "earlier", "today", "."]
# ::lemmas ["i", "just", "post", "the", "article", "and", "they", "have", "the", "screenshot", "this", "be", "what", "he", "be", "at", "earlier", "today", "."]
(c2-2 / and
      :op1 (c2-5 / post-01
                 :ARG0 (c2-9 / i)
                 :ARG1 (c2-8 / article)
                 :time (c2-7 / just))
      :op2 (c2-4 / have-03
                 :ARG0 (c2-10 / they)
                 :ARG1 (c2-12 / thing
                              :ARG1-of (c2-1 / screenshots-01)
                              :domain (c2-11 / thing
                                             :location-of (c2-6 / he)
                                             :time (c2-0 / before)
                                             :time (c2-3 / today)))))

# ::snt Somebody got the screenshots. Story
# ::tokens ["Somebody", "got", "the", "screenshots", ".", "Story"]
# ::lemmas ["somebody", "get", "the", "screenshot", ".", "story"]
(c3-1 / multi-sentence
      :snt1 (c3-4 / get-01
                  :ARG0 (c3-2 / somebody)
                  :ARG1 (c3-3 / thing
                              :ARG1-of (c3-0 / screenshots-01)))
      :snt2 (c3-5 / story))

# ::snt I doubt that. She manipulated her husband's BS into a great opportunity for a cause she believes in. Girl is so much smarter than people give her credit for.
# ::tokens ["I", "doubt", "that", ".", "She", "manipulated", "her", "husband", "'s", "BS", "into", "a", "great", "opportunity", "for", "a", "cause", "she", "believes", "in", ".", "Girl", "is", "so", "much", "smarter", "than", "people", "give", "her", "credit", "for", "."]
# ::lemmas ["i", "doubt", "that", ".", "she", "manipulate", "her", "husband", "'s", "BS", "into", "a", "great", "opportunity", "for", "a", "cause", "she", "believe", "in", ".", "girl", "be", "so", "much", "smart", "than", "people", "give", "her", "credit", "for", "."]
(c6-14 / multi-sentence
       :snt1 (c6-22 / doubt-01
                    :ARG0 (c6-21 / i)
                    :ARG1 (c6-10 / that))
       :snt2 (c6-8 / manipulate-02
                   :ARG0 (c6-0 / she)
                   :ARG1 (c6-13 / bullshit-01
                                :ARG0 (c6-19 / person
                                             :ARG0-of (c6-9 / have-rel-role-91
                                                            :ARG1 c6-0
                                                            :ARG2 (c6-20 / husband))))
                   :ARG2 (c6-5 / opportunity
                               :mod (c6-11 / great)
                               :purpose (c6-17 / cause
                                               :ARG1-of (c6-1 / believe-01
                                                              :ARG0 c6-0))))
       :snt3 (c6-7 / have-degree-91
                   :ARG1 (c6-2 / girl)
                   :ARG2 (c6-6 / smart-06
                               :ARG1 c6-2)
                   :ARG3 (c6-18 / more
                                :quant (c6-16 / much
                                              :degree (c6-4 / so)))
                   :ARG4 (c6-15 / person
                                :ARG2-of (c6-12 / credit-01
                                                :ARG0 (c6-3 / person)
                                                :ARG1 c6-2))))

# ::snt NO COMMENTS .....SPEAKS VOLUMES!!
# ::tokens ["NO", "COMMENTS", ".....", "SPEAKS", "VOLUMES", "!", "!"]
# ::lemmas ["no", "comment", ".....", "SPEAKS", "VOLUMES", "!", "!"]
(c7-3 / and
      :op1 (c7-1 / comment-01
                 :polarity -)
      :op2 (c7-0 / shake-01
                 :ARG1 (c7-2 / volume)
                 :mode expressive))

# ::snt Shes useless
# ::tokens ["She", "s", "useless"]
# ::lemmas ["she", "s", "useless"]
(c8-0 / useless
      :domain (c8-1 / he))

# ::snt The family poured millions of dollars into his lustrous political career of wearing a red hat for a couple of weeks
# ::tokens ["The", "family", "poured", "millions", "of", "dollars", "into", "his", "lustrous", "political", "career", "of", "wearing", "a", "red", "hat", "for", "a", "couple", "of", "weeks"]
# ::lemmas ["the", "family", "pour", "millions", "of", "dollars", "into", "his", "lustrous", "political", "career", "of", "wear", "a", "red", "hat", "for", "a", "couple", "of", "weeks"]
(c9-5 / pour-01
      :ARG0 (c9-0 / family)
      :ARG1 (c9-1 / multiple
                  :op1 (c9-4 / monetary-quantity
                             :unit (c9-13 / dollar)
                             :quant 1000000))
      :ARG2 (c9-9 / career
                  :mod (c9-2 / politics)
                  :ARG1-of (c9-6 / lustrous-03)
                  :poss (c9-7 / he)
                  :consist-of (c9-10 / wear-01
                                     :ARG0 c9-7
                                     :ARG1 (c9-11 / hat
                                                  :ARG1-of (c9-3 / red-02))
                                     :duration (c9-14 / couple
                                                      :op1 (c9-12 / temporal-quantity
                                                                  :unit (c9-8 / week)
                                                                  :quant 1)))))

# ::snt Well wat u know more dollars than sense
# ::tokens ["Well", "wat", "u", "know", "more", "dollars", "than", "sense"]
# ::lemmas ["well", "wat", "u", "know", "more", "dollar", "than", "sense"]
(c11-4 / know-01
       :ARG0 (c11-0 / you)
       :ARG1 (c11-3 / have-quant-91
                    :ARG1 (c11-6 / dollar)
                    :ARG3 (c11-1 / more)
                    :ARG4 (c11-2 / sense-02))
       :mod (c11-5 / well))

# ::snt Who cares?
# ::tokens ["Who", "cares", "?"]
# ::lemmas ["who", "care", "?"]
(c12-0 / care-01
       :ARG0 (c12-1 / amr-unknown))

# ::snt The annoyance can be somewhat tempered with the realisation that this officially makes Kim's vagina the "North West Passage".
# ::tokens ["The", "annoyance", "can", "be", "somewhat", "tempered", "with", "the", "realisation", "that", "this", "officially", "makes", "Kim", "'s", "vagina", "the", "\"", "North", "West", "Passage", "\"", "."]
# ::lemmas ["the", "annoyance", "can", "be", "somewhat", "temper", "with", "the", "realisation", "that", "this", "officially", "make", "Kim", "'s", "vagina", "the", "\"", "North", "West", "Passage", "\"", "."]
(c13-8 / possible-01
       :ARG1 (c13-10 / temper-01
                     :ARG0 (c13-5 / realize-01
                                  :ARG1 (c13-1 / make-02
                                               :ARG0 (c13-11 / this)
                                               :ARG1 (c13-2 / pass-03
                                                            :ARG1 (c13-6 / vagina
                                                                         :part-of (c13-12 / person
                                                                                          :name (c13-3 / name
                                                                                                       :op1 "Kim")))
                                                            :ARG2 (c13-9 / country-region
                                                                         :name c13-3
                                                                         :op1 "North"
                                                                         :op2 "West"
                                                                         :op3 "Passage"))
                                               :mod (c13-0 / official))))
       :ARG1 (c13-7 / annoy-01)
       :degree (c13-4 / somewhat))

# ::snt What the fuck
# ::tokens ["What", "the", "fuck"]
# ::lemmas ["what", "the", "fuck"]
(c14-1 / amr-unknown
       :mod (c14-0 / fuck))

# ::snt If it makes you feel better drake bell in response said he would name his child taco
# ::tokens ["If", "it", "makes", "you", "feel", "better", "drake", "bell", "in", "response", "said", "he", "would", "name", "his", "child", "taco"]
# ::lemmas ["if", "it", "make", "you", "feel", "well", "drake", "bell", "in", "response", "say", "he", "would", "name", "his", "child", "taco"]
(c15-6 / respond-01
       :ARG0 (c15-8 / person
                    :name (c15-2 / name
                                 :op1 " drake"
                                 :op2 "bell"))
       :ARG1 (c15-4 / say-01
                    :ARG0 c15-8
                    :ARG1 (c15-7 / name-01
                                 :ARG0 c15-8
                                 :ARG1 (c15-3 / person
                                              :ARG0-of (c15-9 / have-rel-role-91
                                                              :ARG1 c15-8
                                                              :ARG2 (c15-12 / child)))
                                 :ARG2 (c15-10 / name
                                               :op1 "Taco")))
       :condition (c15-5 / make-02
                         :ARG0 (c15-14 / it)
                         :ARG1 (c15-0 / feel-01
                                      :ARG0 (c15-1 / you)
                                      :ARG1-of (c15-13 / have-degree-91
                                                       :ARG2 (c15-15 / good-02
                                                                     :ARG1 c15-0)
                                                       :ARG3 (c15-11 / more)))))

# ::snt They gave birth to a compass Kappa
# ::tokens ["They", "gave", "birth", "to", "a", "compass", "Kappa"]
# ::lemmas ["they", "give", "birth", "to", "a", "compass", "Kappa"]
(c16-1 / bear-02
       :ARG0 (c16-3 / they)
       :ARG1 (c16-2 / person
                    :name (c16-0 / name
                                 :op1 "Poss ( compass"
                                 :op2 "Kappa")))

# ::snt Their new baby is named Chicago
# ::tokens ["Their", "new", "baby", "is", "named", "Chicago"]
# ::lemmas ["their", "new", "baby", "be", "name", "Chicago"]
(c17-1 / name-02
       :ARG1 (c17-0 / baby
                    :ARG1-of (c17-2 / new-01)
                    :poss (c17-5 / they))
       :ARG2 (c17-4 / city
                    :name (c17-3 / name
                                 :op1 "Chicago")))

# ::snt Hope you dont mind that they named their son Saint West.
# ::tokens ["Hope", "you", "do", "nt", "mind", "that", "they", "named", "their", "son", "Saint", "West", "."]
# ::lemmas ["hope", "you", "do", "not", "mind", "that", "they", "name", "their", "son", "Saint", "West", "."]
(c18-4 / hope-01
       :ARG0 (c18-8 / i)
       :ARG1 (c18-2 / mind-01
                    :ARG0 (c18-0 / you)
                    :ARG1 (c18-1 / name-01
                                 :ARG0 (c18-9 / they)
                                 :ARG1 (c18-5 / person
                                              :name (c18-6 / name
                                                           :op1 "Saint"
                                                           :op2 "West")
                                              :ARG0-of (c18-7 / have-rel-role-91
                                                              :ARG1 c18-9
                                                              :ARG2 (c18-3 / son))))
                    :polarity -))

# ::snt yeah
# ::tokens ["yeah"]
# ::lemmas ["yeah"]
(c19-0 / yeah)

# ::snt Baby.
# ::tokens ["Baby", "."]
# ::lemmas ["baby", "."]
(c20-0 / baby)

# ::snt i hate memes
# ::tokens ["i", "hate", "memes"]
# ::lemmas ["i", "hate", "meme"]
(c21-0 / hate-01
       :ARG0 (c21-2 / i)
       :ARG1 (c21-1 / meme))

# ::snt Fair enough, can't fault you for that.Best thing is, it was a meme before Kim even got pregnant.
# ::tokens ["Fair", "enough", ",", "ca", "n't", "fault", "you", "for", "that", ".", "Best", "thing", "is", ",", "it", "was", "a", "meme", "before", "Kim", "even", "got", "pregnant", "."]
# ::lemmas ["fair", "enough", ",", "can", "not", "fault", "you", "for", "that", ".", "good", "thing", "be", ",", "it", "be", "a", "meme", "before", "Kim", "even", "get", "pregnant", "."]
(c22-3 / multi-sentence
       :snt1 (c22-9 / possible-01
                    :ARG1 (c22-0 / fault-01
                                 :ARG1 (c22-2 / you)
                                 :ARG2 (c22-14 / that))
                    :ARG1-of (c22-10 / fair-01
                                     :ARG2-of (c22-8 / have-degree-91
                                                     :ARG1 c22-9
                                                     :ARG3 (c22-7 / enough)))
                    :polarity -)
       :snt2 (c22-11 / meme
                     :domain (c22-13 / it)
                     :time (c22-1 / before
                                  :op1 (c22-6 / impregnate-01
                                              :ARG1 (c22-4 / person
                                                           :name (c22-5 / name
                                                                        :op1 "Kim"))
                                              :mod (c22-16 / even)))
                     :ARG1-of (c22-12 / have-degree-91
                                      :ARG2 (c22-15 / good-02
                                                    :ARG1 c22-11)
                                      :ARG3 (c22-17 / most))))

# ::snt genuine indifference toward popular culture
# ::tokens ["genuine", "indifference", "toward", "popular", "culture"]
# ::lemmas ["genuine", "indifference", "toward", "popular", "culture"]
(c23-3 / indifferent-01
       :ARG2 (c23-1 / culture
                    :ARG1-of (c23-2 / popular-02))
       :mod (c23-0 / genuine))

# ::snt That's been a meme for years now how'd you miss that for so long?
# ::tokens ["That", "'s", "been", "a", "meme", "for", "years", "now", "how", "'d", "you", "miss", "that", "for", "so", "long", "?"]
# ::lemmas ["that", "be", "be", "a", "meme", "for", "years", "now", "how", "would", "you", "miss", "that", "for", "so", "long", "?"]
(c24-1 / miss-02
       :ARG0 (c24-0 / you)
       :ARG1 (c24-7 / that)
       :ARG1-of (c24-6 / long-03
                       :degree (c24-3 / so))
       :manner (c24-4 / amr-unknown)
       :time (c24-2 / now)
       :duration (c24-5 / multiple
                        :op1 (c24-9 / temporal-quantity
                                    :unit (c24-8 / year)
                                    :quant 1)))

# ::snt ....should I call Hr
# ::tokens ["....", "should", "I", "call", "Hr"]
# ::lemmas ["....", "should", "i", "call", "Hr"]
(c25-1 / recommend-01
       :ARG1 (c25-3 / call-01
                    :ARG0 (c25-4 / i)
                    :ARG1 (c25-2 / person
                                 :name (c25-0 / name
                                              :op1 "Hr"))))

# ::snt now ya feel me
# ::tokens ["now", "ya", "feel", "me"]
# ::lemmas ["now", "ya", "feel", "i"]
(c26-0 / feel-01
       :ARG0 (c26-1 / you)
       :ARG1 (c26-3 / i)
       :time (c26-2 / now))

# ::snt I would hate you
# ::tokens ["I", "would", "hate", "you"]
# ::lemmas ["i", "would", "hate", "you"]
(c27-0 / hate-01
       :ARG0 (c27-2 / i)
       :ARG1 (c27-1 / you))

# ::snt yeah not Mike DROP or somethin
# ::tokens ["yeah", "not", "Mike", "DROP", "or", "somethin"]
# ::lemmas ["yeah", "not", "Mike", "DROP", "or", "somethin"]
(c28-0 / or
       :op1 (c28-4 / person
                   :name (c28-2 / name
                                :op1 "Mike"
                                :op2 "DROP"))
       :op2 (c28-3 / something)
       :mod (c28-1 / yeah)
       :polarity -)

# ::snt Your name is Mike
# ::tokens ["Your", "name", "is", "Mike"]
# ::lemmas ["your", "name", "be", "Mike"]
(c29-2 / name-01
       :ARG1 (c29-0 / person
                    :name (c29-1 / name
                                 :op1 "Mike")
                    :domain (c29-3 / you)))

# ::snt my G! Take Out' using My Mixtapez app
# ::tokens ["my", "G", "!", "Take", "Out", "'", "using", "My", "Mixtapez", "app"]
# ::lemmas ["my", "G", "!", "take", "out", "'", "use", "my", "Mixtapez", "app"]
(c30-5 / use-01
       :ARG0 (c30-3 / i)
       :ARG1 (c30-2 / thing
                    :name (c30-0 / name
                                 :op1 "Take"
                                 :op2 "out"))
       :ARG2 (c30-4 / app
                    :name (c30-1 / name
                                 :op1 "Mixtapez")
                    :poss c30-3))

# ::snt Its a horrible place for sure. Best to stay away from it.
# ::tokens ["Its", "a", "horrible", "place", "for", "sure", ".", "Best", "to", "stay", "away", "from", "it", "."]
# ::lemmas ["its", "a", "horrible", "place", "for", "sure", ".", "good", "to", "stay", "away", "from", "it", "."]
(c31-2 / multi-sentence
       :snt1 (c31-5 / place
                    :mod (c31-4 / horrible)
                    :ARG1-of (c31-3 / sure-02))
       :snt2 (c31-10 / good-02
                     :ARG1 (c31-0 / stay-01
                                  :ARG1 (c31-1 / you)
                                  :ARG3 (c31-9 / away
                                               :op1 (c31-8 / it)))
                     :ARG2-of (c31-7 / have-degree-91
                                     :ARG1 c31-0
                                     :ARG3 (c31-6 / most))))

# ::snt And if she where to make an album with her own name it would be called North by Noth West
# ::tokens ["And", "if", "she", "where", "to", "make", "an", "album", "with", "her", "own", "name", "it", "would", "be", "called", "North", "by", "Noth", "West"]
# ::lemmas ["and", "if", "she", "where", "to", "make", "an", "album", "with", "her", "own", "name", "it", "would", "be", "call", "North", "by", "Noth", "West"]
(c32-8 / and
       :op2 (c32-5 / call-01
                   :ARG1 (c32-7 / album
                                :name (c32-0 / name
                                             :op1 "North"))
                   :ARG2 (c32-3 / name
                                :op1 "Noth"
                                :op2 "West")
                   :condition (c32-1 / make-01
                                     :ARG0 (c32-2 / she)
                                     :ARG1 (c32-6 / album
                                                  :ARG1-of (c32-4 / name-01
                                                                  :ARG2 c32-2))
                                     :location (c32-9 / amr-unknown))))

# ::snt Thank you I hate it
# ::tokens ["Thank", "you", "I", "hate", "it"]
# ::lemmas ["thank", "you", "i", "hate", "it"]
(c33-5 / thank-01
       :ARG0 (c33-4 / i)
       :ARG1 (c33-0 / you)
       :ARG1-of (c33-3 / cause-01
                       :ARG0 (c33-2 / hate-01
                                    :ARG0 c33-4
                                    :ARG1 (c33-1 / it))))

# ::snt that's fair
# ::tokens ["that", "'s", "fair"]
# ::lemmas ["that", "be", "fair"]
(c34-0 / fair-01
       :ARG1 (c34-1 / that))

# ::snt Welcome to the world of years ago. Lol
# ::tokens ["Welcome", "to", "the", "world", "of", "years", "ago", ".", "Lol"]
# ::lemmas ["welcome", "to", "the", "world", "of", "years", "ago", ".", "Lol"]
(c36-3 / multi-sentence
       :snt1 (c36-7 / welcome-01
                    :ARG2 (c36-6 / world
                                 :time (c36-0 / before
                                              :op1 (c36-2 / now)
                                              :quant (c36-4 / multiple
                                                            :op1 (c36-9 / temporal-quantity
                                                                        :unit (c36-1 / year)
                                                                        :quant 1)))))
       :snt2 (c36-5 / laugh-01
                    :ARG0 (c36-8 / i)
                    :manner (c36-10 / loud)
                    :mode expressive))

# ::snt Naming my kid Weast
# ::tokens ["Naming", "my", "kid", "Weast"]
# ::lemmas ["name", "my", "kid", "weast"]
(c37-0 / name-01
       :ARG1 (c37-2 / person
                    :ARG0-of (c37-1 / have-rel-role-91
                                    :ARG1 (c37-5 / i)
                                    :ARG2 (c37-3 / kid)))
       :ARG2 (c37-4 / weast))

# ::snt afraid her vagina will get upset?
# ::tokens ["afraid", "her", "vagina", "will", "get", "upset", "?"]
# ::lemmas ["afraid", "her", "vagina", "will", "get", "upset", "?"]
(c38-0 / fear-01
       :polarity (c38-3 / amr-unknown)
       :ARG0 (c38-1 / she
                    :part (c38-2 / vagina))
       :ARG1 (c38-4 / upset-01
                    :ARG1 c38-2))
