# ::snt Oh boy the two most interesting characters
# ::tokens ["Oh", "boy", "the", "two", "most", "interesting", "characters"]
# ::lemmas ["oh", "boy", "the", "two", "most", "interesting", "character"]
(c1-3 / character
      :mod (c1-0 / oh
                 :mode expressive)
      :ARG1-of (c1-2 / have-degree-91
                     :ARG2 (c1-4 / interest-01
                                 :ARG0 c1-3)
                     :ARG3 (c1-1 / most))
      :quant 2)

# ::snt guess it was a good time for me to watch all seasons this month! Ha
# ::tokens ["guess", "it", "was", "a", "good", "time", "for", "me", "to", "watch", "all", "seasons", "this", "month", "!", "Ha"]
# ::lemmas ["guess", "it", "be", "a", "good", "time", "for", "i", "to", "watch", "all", "seasons", "this", "month", "!", "ha"]
(c2-8 / guess-01
      :ARG0 (c2-7 / i)
      :ARG1 (c2-5 / time
                  :ARG1-of (c2-6 / good-02
                                 :ARG2 (c2-4 / watch-01
                                             :ARG0 c2-7
                                             :ARG1 (c2-1 / season
                                                         :mod (c2-2 / all))
                                             :time (c2-0 / month
                                                         :mod (c2-9 / this)))))
      :mod (c2-3 / ha
                 :mode expressive))

# ::snt spinoff
# ::tokens ["spinoff"]
# ::lemmas ["spinoff"]
(c3-0 / spin-off-02)

# ::snt dumb lmao who even watched it till the end i couldnt deal
# ::tokens ["dumb", "lmao", "who", "even", "watched", "it", "till", "the", "end", "i", "could", "nt", "deal"]
# ::lemmas ["dumb", "lmao", "who", "even", "watch", "it", "till", "the", "end", "i", "could", "not", "deal"]
(c4-4 / possible-01
      :ARG1 (c4-10 / deal-01
                   :ARG0 (c4-8 / i
                               :ARG0-of (c4-6 / watch-01
                                              :ARG1 (c4-1 / it)
                                              :mod (c4-3 / even)
                                              :time (c4-9 / till
                                                          :op1 (c4-0 / end-01)))
                               :mod (c4-7 / dumb)
                               :ARG0-of (c4-5 / laugh-01
                                              :ARG1 (c4-2 / ass
                                                          :part-of c4-8)
                                              :manner (c4-11 / loud)
                                              :mode expressive)))
      :polarity -)

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c5-0 / amr-empty)

# ::snt Es difcil, son temas diferentes
# ::tokens ["Es", "difcil", ",", "son", "temas", "diferentes"]
# ::lemmas ["Es", "difcil", ",", "son", "temas", "diferente"]
(c6-3 / and
      :op1 (c6-4 / differ-02
                 :ARG1 (c6-1 / event))
      :op2 (c6-2 / differ-02
                 :ARG1 (c6-0 / son-of-a-bitch)))

# ::snt Btw no puedo con las conversaciones multiredes hahhaa
# ::tokens ["Btw", "no", "puedo", "con", "las", "conversaciones", "multiredes", "hahhaa"]
# ::lemmas ["btw", "no", "puedo", "con", "las", "conversaciones", "multirede", "hahhaa"]
(c7-1 / multi-sentence
      :snt1 (c7-2 / mind-15
                  :ARG0 (c7-6 / i)
                  :ARG1 (c7-5 / con-cetera
                              :mod (c7-3 / las)
                              :topic (c7-7 / multirede))
                  :mod (c7-0 / by-the-way)
                  :polarity -)
      :snt2 (c7-4 / hah
                  :mode expressive))

# ::snt I like the idea of the two of them in a spin off
# ::tokens ["I", "like", "the", "idea", "of", "the", "two", "of", "them", "in", "a", "spin", "off"]
# ::lemmas ["i", "like", "the", "idea", "of", "the", "two", "of", "they", "in", "a", "spin", "off"]
(c8-2 / like-01
      :ARG0 (c8-3 / i)
      :ARG1 (c8-1 / idea
                  :topic (c8-0 / spin-off-02
                               :ARG1 (c8-4 / they
                                           :quant 2))))

# ::snt VE A VER LO QUE TE MANDE A INSTAGRAM!!!!!
# ::tokens ["VE", "A", "VER", "LO", "QUE", "TE", "MANDE", "A", "INSTAGRAM", "!", "!", "!", "!", "!"]
# ::lemmas ["ve", "a", "VER", "LO", "QUE", "TE", "MANDE", "a", "instagram", "!", "!", "!", "!", "!"]
(c10-5 / give-01
       :ARG0 (c10-0 / you)
       :ARG1 (c10-3 / phone-number-entity
                    :mod (c10-4 / all)
                    :value "Verlo")
       :ARG2 (c10-2 / person
                    :name (c10-1 / name
                                 :op1 "MANDE"))
       :mode imperative)

# ::snt Ahahahahhaa
# ::tokens ["Ahahahahhaa"]
# ::lemmas ["ahahahahhaa"]
(c11-0 / aha
       :mode expressive)

# ::snt Ugh dnt they just give up with PLL
# ::tokens ["Ugh", "dnt", "they", "just", "give", "up", "with", "PLL"]
# ::lemmas ["ugh", "dnt", "they", "just", "give", "up", "with", "PLL"]
(c12-4 / give-up-07
       :ARG0 (c12-3 / they)
       :ARG1 (c12-1 / product
                    :name (c12-0 / name
                                 :op1 "PLL"))
       :mod (c12-2 / just)
       :mod (c12-5 / ugh
                   :mode expressive))

# ::snt mmmm
# ::tokens ["mmmm"]
# ::lemmas ["mmmm"]
(c13-0 / hmm
       :mode expressive)

# ::snt yey we love it
# ::tokens ["yey", "we", "love", "it"]
# ::lemmas ["yey", "we", "love", "it"]
(c14-2 / love-01
       :ARG0 (c14-0 / we)
       :ARG1 (c14-3 / it)
       :mod (c14-1 / yey
                   :mode expressive))

# ::snt Yes of course!
# ::tokens ["Yes", "of", "course", "!"]
# ::lemmas ["yes", "of", "course", "!"]
(c15-1 / yes
       :mod (c15-0 / of-course))

# ::snt They need to let this show RIP it should have ended after season
# ::tokens ["They", "need", "to", "let", "this", "show", "RIP", "it", "should", "have", "ended", "after", "season"]
# ::lemmas ["they", "need", "to", "let", "this", "show", "rip", "it", "should", "have", "end", "after", "season"]
(c16-0 / obligate-01
       :ARG1 (c16-7 / they)
       :ARG2 (c16-6 / let-01
                    :ARG0 c16-7
                    :ARG1 (c16-2 / show-04
                                 :mod (c16-8 / this)
                                 :ARG1-of (c16-5 / end-01
                                                 :ARG1-of (c16-3 / recommend-01)
                                                 :time (c16-4 / after
                                                              :op1 (c16-1 / season))))))

# ::snt LmfAoooooo
# ::tokens ["LmfAoooooo"]
# ::lemmas ["LmfAoooooo"]
(c17-1 / laugh-01
       :ARG0 (c17-2 / i)
       :manner (c17-0 / loud)
       :mode expressive)

# ::snt There is literally nothing left to talk about, after years there is nothing else
# ::tokens ["There", "is", "literally", "nothing", "left", "to", "talk", "about", ",", "after", "years", "there", "is", "nothing", "else"]
# ::lemmas ["there", "be", "literally", "nothing", "leave", "to", "talk", "about", ",", "after", "year", "there", "be", "nothing", "else"]
(c18-3 / and
       :op1 (c18-6 / leave-17
                   :ARG1 (c18-1 / nothing
                                :mod (c18-9 / literal))
                   :ARG2 (c18-8 / talk-01
                                :ARG1 c18-1))
       :op2 (c18-5 / nothing
                   :mod (c18-4 / else)
                   :time (c18-7 / after
                                :quant (c18-2 / multiple
                                              :op1 (c18-10 / temporal-quantity
                                                           :unit (c18-0 / year)
                                                           :quant 1)))))

# ::snt truthfully, we don't want... it took too long to find A... are we going to be looking for B this time?
# ::tokens ["truthfully", ",", "we", "do", "n't", "want", "...", "it", "took", "too", "long", "to", "find", "A", "...", "are", "we", "going", "to", "be", "looking", "for", "B", "this", "time", "?"]
# ::lemmas ["truthfully", ",", "we", "do", "not", "want", "...", "it", "take", "too", "long", "to", "find", "a", "...", "be", "we", "go", "to", "be", "look", "for", "b", "this", "time", "?"]
(c19-13 / multi-sentence
        :snt1 (c19-19 / want-01
                      :ARG0 (c19-4 / we)
                      :ARG1-of (c19-10 / true-01)
                      :polarity -)
        :snt2 (c19-15 / take-10
                      :ARG0 (c19-17 / find-01
                                    :ARG0 (c19-16 / we)
                                    :ARG1 (c19-20 / thing
                                                  :mod (c19-7 / variable
                                                              :name (c19-18 / name
                                                                            :op1 "A"))))
                      :ARG1 (c19-2 / long-03
                                   :ARG2-of (c19-8 / have-degree-91
                                                   :ARG1 c19-17
                                                   :ARG3 (c19-1 / too))))
        :snt3 (c19-12 / look-01
                      :ARG0 (c19-0 / we)
                      :ARG1 (c19-11 / thing
                                    :mod (c19-5 / variable
                                                :name (c19-14 / name
                                                              :op1 "B")))
                      :polarity (c19-9 / amr-unknown)
                      :time (c19-6 / time
                                   :mod (c19-3 / this))))
