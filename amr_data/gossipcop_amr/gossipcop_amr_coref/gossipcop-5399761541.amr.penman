# ::snt Old Conspiracy that keeps creeping up. You should see the one about Dave Chappelle.
# ::tokens ["Old", "Conspiracy", "that", "keeps", "creeping", "up", ".", "You", "should", "see", "the", "one", "about", "Dave", "Chappelle", "."]
# ::lemmas ["Old", "Conspiracy", "that", "keep", "creep", "up", ".", "you", "should", "see", "the", "one", "about", "Dave", "Chappelle", "."]
(c1-3 / multi-sentence
      :snt1 (c1-7 / keep-02
                  :ARG1 (c1-9 / creep-01
                              :ARG0 (c1-10 / conspiracy
                                           :mod (c1-0 / old))))
      :snt2 (c1-6 / recommend-01
                  :ARG1 (c1-5 / see-01
                              :ARG0 (c1-2 / you)
                              :ARG1 (c1-1 / one
                                          :topic (c1-8 / person
                                                       :name (c1-4 / name
                                                                   :op1 "Dave"
                                                                   :op2 "Chappelle"))))
                  :ARG2 c1-2))

# ::snt That's exactly what Melissa would say though. Good try.
# ::tokens ["That", "'s", "exactly", "what", "Melissa", "would", "say", "though", ".", "Good", "try", "."]
# ::lemmas ["that", "be", "exactly", "what", "Melissa", "would", "say", "though", ".", "good", "try", "."]
(c2-1 / multi-sentence
      :snt1 (c2-4 / have-concession-91
                  :ARG1 (c2-2 / say-01
                              :ARG0 (c2-5 / person
                                          :name (c2-0 / name
                                                      :op1 "Melissa"))
                              :ARG1 (c2-6 / that
                                          :mod (c2-3 / exact))))
      :snt2 (c2-8 / try-01
                  :ARG1-of (c2-7 / good-02)))

# ::snt melissa, go home
# ::tokens ["melissa", ",", "go", "home"]
# ::lemmas ["melissa", ",", "go", "home"]
(c3-1 / say-01
      :ARG0 (c3-4 / i)
      :ARG1 (c3-5 / go-02
                  :ARG0 (c3-3 / person
                              :name (c3-0 / name
                                          :op1 "Melissa"))
                  :ARG4 (c3-2 / home)
                  :mode imperative)
      :ARG2 c3-3)
