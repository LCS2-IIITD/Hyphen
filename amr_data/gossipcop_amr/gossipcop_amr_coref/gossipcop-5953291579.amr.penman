# ::snt I una peli, per favor demano.
# ::tokens ["I", "una", "peli", ",", "per", "favor", "demano", "."]
# ::lemmas ["i", "una", "peli", ",", "per", "favor", "demano", "."]
(c1-1 / per
      :ARG0 (c1-2 / i)
      :ARG1 (c1-0 / demano))

# ::snt Hi! Can u help Spice Girls fans signing and sharing this important petition? Thank You very much!
# ::tokens ["Hi", "!", "Can", "u", "help", "Spice", "Girls", "fans", "signing", "and", "sharing", "this", "important", "petition", "?", "Thank", "You", "very", "much", "!"]
# ::lemmas ["hi", "!", "can", "u", "help", "Spice", "Girls", "fan", "sign", "and", "share", "this", "important", "petition", "?", "thank", "you", "very", "much", "!"]
(c2-12 / multi-sentence
       :snt1 (c2-5 / hi
                   :mode expressive)
       :snt2 (c2-17 / possible-01
                    :polarity (c2-9 / amr-unknown)
                    :ARG1 (c2-18 / help-01
                                 :ARG0 (c2-2 / you)
                                 :ARG1 (c2-7 / and
                                             :op1 (c2-0 / sign-01
                                                        :ARG0 (c2-15 / fan
                                                                     :mod (c2-11 / broadcast-program
                                                                                 :name (c2-16 / name
                                                                                              :op1 "Spice"
                                                                                              :op2 "Girls")))
                                                        :ARG1 (c2-13 / petition
                                                                     :ARG1-of (c2-19 / important-01)
                                                                     :mod (c2-8 / this)))
                                             :op2 (c2-1 / share-01
                                                        :ARG0 c2-15
                                                        :ARG1 c2-13)))
                    :polarity c2-9)
       :snt3 (c2-14 / thank-01
                    :ARG0 (c2-3 / i)
                    :ARG1 (c2-10 / you)
                    :mod (c2-6 / much
                               :degree (c2-4 / very))))

# ::snt Oh please god no!!!
# ::tokens ["Oh", "please", "god", "no", "!", "!", "!"]
# ::lemmas ["oh", "please", "god", "no", "!", "!", "!"]
(c3-2 / no
      :mod (c3-0 / oh
                 :mode expressive)
      :mod (c3-3 / person
                 :name (c3-1 / name
                             :op1 "God"))
      :mode expressive
      :polite +)

# ::snt oh great. must look into hibernation
# ::tokens ["oh", "great", ".", "must", "look", "into", "hibernation"]
# ::lemmas ["oh", "great", ".", "must", "look", "into", "hibernation"]
(c4-2 / multi-sentence
      :snt1 (c4-5 / great
                  :mod (c4-0 / oh))
      :snt2 (c4-1 / obligate-01
                  :ARG2 (c4-4 / look-into-11
                              :ARG1 (c4-3 / hibernation))))

# ::snt This needs to happen
# ::tokens ["This", "needs", "to", "happen"]
# ::lemmas ["this", "need", "to", "happen"]
(c5-0 / need-01
      :ARG1 (c5-1 / this))

# ::snt Thanks for the warning.
# ::tokens ["Thanks", "for", "the", "warning", "."]
# ::lemmas ["thank", "for", "the", "warning", "."]
(c6-3 / thank-01
      :ARG0 (c6-2 / i)
      :ARG1 (c6-1 / you)
      :ARG2 (c6-0 / warn-01
                  :ARG0 c6-1))

# ::snt Gawd nooooo.
# ::tokens ["Gawd", "nooooo", "."]
# ::lemmas ["Gawd", "nooooo", "."]
(c8-1 / no
      :mod (c8-0 / oh-my-god
                 :mode expressive))

# ::snt Be like your aunts at your cousins Wedding
# ::tokens ["Be", "like", "your", "aunts", "at", "your", "cousins", "Wedding"]
# ::lemmas ["be", "like", "your", "aunt", "at", "your", "cousin", "wedding"]
(c9-3 / resemble-01
      :ARG1 (c9-1 / you)
      :ARG2 (c9-5 / person
                  :ARG0-of (c9-4 / have-rel-role-91
                                 :ARG1 c9-1
                                 :ARG2 (c9-8 / aunt))
                  :location (c9-0 / bridal-01
                                  :ARG1 (c9-2 / person
                                              :ARG0-of (c9-7 / have-rel-role-91
                                                             :ARG1 c9-1
                                                             :ARG2 (c9-6 / cousin))))))

# ::snt Lets hope!
# ::tokens ["Lets", "hope", "!"]
# ::lemmas ["let", "hope", "!"]
(c10-1 / hope-01
       :ARG0 (c10-0 / we)
       :mode imperative)

# ::snt xx
# ::tokens ["xx"]
# ::lemmas ["xx"]
(c11-1 / person
       :name (c11-0 / name
                    :op1 "xx")
       :ARG2-of (c11-2 / sign-01))

# ::snt Its not about the money!!!!!
# ::tokens ["Its", "not", "about", "the", "money", "!", "!", "!", "!", "!"]
# ::lemmas ["its", "not", "about", "the", "money", "!", "!", "!", "!", "!"]
(c12-0 / concern-02
       :ARG0 (c12-2 / it)
       :ARG1 (c12-1 / money)
       :polarity -)

# ::snt I think Ill believe it when I see it
# ::tokens ["I", "think", "Ill", "believe", "it", "when", "I", "see", "it"]
# ::lemmas ["i", "think", "Ill", "believe", "it", "when", "i", "see", "it"]
(c13-4 / think-01
       :ARG0 (c13-3 / i)
       :ARG1 (c13-0 / believe-01
                    :ARG0 c13-3
                    :ARG1 (c13-2 / it)
                    :time (c13-1 / see-01
                                 :ARG0 c13-3
                                 :ARG1 c13-2)))

# ::snt Yeah every year they say they're going to do it and never do.
# ::tokens ["Yeah", "every", "year", "they", "say", "they", "'re", "going", "to", "do", "it", "and", "never", "do", "."]
# ::lemmas ["yeah", "every", "year", "they", "say", "they", "be", "go", "to", "do", "it", "and", "never", "do", "."]
(c14-2 / and
       :op1 (c14-1 / say-01
                   :ARG0 (c14-7 / they)
                   :ARG1 (c14-9 / do-02
                                :ARG0 c14-7
                                :ARG1 (c14-6 / it)))
       :op2 (c14-5 / do-02
                   :ARG0 c14-7
                   :ARG1 c14-6
                   :time (c14-4 / ever)
                   :polarity -)
       :frequency (c14-3 / rate-entity-91
                         :ARG3 (c14-10 / temporal-quantity
                                       :unit (c14-0 / year)
                                       :quant 1))
       :mod (c14-8 / yeah
                   :mode expressive))

# ::snt I feel like they've been saying this for years
# ::tokens ["I", "feel", "like", "they", "'ve", "been", "saying", "this", "for", "years"]
# ::lemmas ["i", "feel", "like", "they", "'ve", "be", "say", "this", "for", "years"]
(c15-0 / feel-02
       :ARG0 (c15-5 / i)
       :ARG1 (c15-3 / say-01
                    :ARG0 (c15-4 / they)
                    :ARG1 (c15-6 / this)
                    :duration (c15-2 / multiple
                                     :op1 (c15-7 / temporal-quantity
                                                 :unit (c15-1 / year)
                                                 :quant 1))))

# ::snt FUCKING SICK!!!! I hope it happens! (I have right hands because I'm a mutant) YAY SPIS GURLS!
# ::tokens ["FUCKING", "SICK", "!", "!", "!", "!", "I", "hope", "it", "happens", "!", "(", "I", "have", "right", "hands", "because", "I", "'m", "a", "mutant", ")", "YAY", "SPIS", "GURLS", "!"]
# ::lemmas ["FUCKING", "SICK", "!", "!", "!", "!", "i", "hope", "it", "happen", "!", "(", "i", "have", "right", "hand", "because", "i", "be", "a", "mutant", ")", "YAY", "SPIS", "GURLS", "!"]
(c17-2 / multi-sentence
       :snt1 (c17-3 / sick-02
                    :mod (c17-0 / fucking)
                    :mode expressive)
       :snt2 (c17-7 / hope-01
                    :ARG0 (c17-11 / i)
                    :ARG1 (c17-4 / it))
       :snt3 (c17-10 / have-03
                     :ARG0 (c17-13 / i)
                     :ARG1 (c17-6 / hand
                                  :ARG1-of (c17-5 / right-04))
                     :ARG1-of (c17-9 / cause-01
                                     :ARG0 (c17-8 / mutant
                                                  :domain c17-13)))
       :snt4 (c17-12 / gurl
                     :mod (c17-1 / yay)))

# ::snt For the love of god, please dont.
# ::tokens ["For", "the", "love", "of", "god", ",", "please", "do", "nt", "."]
# ::lemmas ["for", "the", "love", "of", "god", ",", "please", "do", "not", "."]
(c18-4 / do-02
       :ARG0 (c18-0 / you)
       :purpose (c18-2 / love-01
                       :ARG0 c18-0
                       :ARG1 (c18-3 / person
                                    :name (c18-1 / name
                                                 :op1 "God")))
       :polarity -
       :polite +
       :mode imperative)

# ::snt mate
# ::tokens ["mate"]
# ::lemmas ["mate"]
(c19-2 / person
       :ARG0-of (c19-1 / have-rel-role-91
                       :ARG2 (c19-0 / mate)))

# ::snt It Will be so fantastic!!!!!
# ::tokens ["It", "Will", "be", "so", "fantastic", "!", "!", "!", "!", "!"]
# ::lemmas ["it", "will", "be", "so", "fantastic", "!", "!", "!", "!", "!"]
(c20-0 / fantastic-02
       :ARG1 (c20-1 / it)
       :degree (c20-2 / so))

# ::snt Hahaha.........
# ::tokens ["Hahaha", "........."]
# ::lemmas ["Hahaha", "........."]
(c22-0 / haha
       :mode expressive)

# ::snt oh my god no way!
# ::tokens ["oh", "my", "god", "no", "way", "!"]
# ::lemmas ["oh", "my", "god", "no", "way", "!"]
(c23-3 / way
       :mod (c23-0 / oh
                   :op1 (c23-2 / person
                               :name (c23-1 / name
                                            :op1 "God")
                               :poss (c23-4 / i))
                   :mode expressive)
       :polarity -)

# ::snt The news the world needs at this time.
# ::tokens ["The", "news", "the", "world", "needs", "at", "this", "time", "."]
# ::lemmas ["the", "news", "the", "world", "need", "at", "this", "time", "."]
(c24-0 / news
       :ARG1-of (c24-1 / need-01
                       :ARG0 (c24-2 / world)
                       :time (c24-3 / time
                                    :mod (c24-4 / this))))

# ::snt Can't wait. You can never have too much shite in the world.
# ::tokens ["Ca", "n't", "wait", ".", "You", "can", "never", "have", "too", "much", "shite", "in", "the", "world", "."]
# ::lemmas ["can", "not", "wait", ".", "you", "can", "never", "have", "too", "much", "shite", "in", "the", "world", "."]
(c25-1 / multi-sentence
       :snt1 (c25-8 / wait-01
                    :ARG1 (c25-0 / you)
                    :polarity -)
       :snt2 (c25-5 / possible-01
                    :ARG1 (c25-4 / have-03
                                 :ARG0 (c25-11 / you)
                                 :ARG1 (c25-2 / shit
                                              :ARG1-of (c25-9 / have-quant-91
                                                              :ARG2 (c25-6 / much)
                                                              :ARG3 (c25-10 / too)))
                                 :time (c25-3 / ever)
                                 :location (c25-7 / world))
                    :polarity -))

# ::snt We won't get tickets cos of the touts twats.
# ::tokens ["We", "wo", "n't", "get", "tickets", "cos", "of", "the", "touts", "twats", "."]
# ::lemmas ["we", "will", "not", "get", "ticket", "cos", "of", "the", "tout", "twat", "."]
(c26-0 / cause-01
       :ARG0 (c26-2 / twat
                    :mod (c26-4 / tout))
       :ARG1 (c26-5 / get-01
                    :ARG0 (c26-1 / we)
                    :ARG1 (c26-3 / ticket)
                    :polarity -))

# ::snt More fabricated trash to kill the music industry
# ::tokens ["More", "fabricated", "trash", "to", "kill", "the", "music", "industry"]
# ::lemmas ["more", "fabricate", "trash", "to", "kill", "the", "music", "industry"]
(c28-5 / trash
       :ARG1-of (c28-0 / fabricate-01)
       :quant (c28-1 / more)
       :ARG0-of (c28-3 / kill-01
                       :ARG1 (c28-4 / industry
                                    :mod (c28-2 / music))))

# ::snt I think I'm dreaming...
# ::tokens ["I", "think", "I", "'m", "dreaming", "..."]
# ::lemmas ["i", "think", "i", "be", "dream", "..."]
(c29-2 / think-01
       :ARG0 (c29-1 / i)
       :ARG1 (c29-0 / dream-01
                    :ARG0 c29-1))

# ::snt Dont believe it until it happens
# ::tokens ["Do", "nt", "believe", "it", "until", "it", "happens"]
# ::lemmas ["do", "not", "believe", "it", "until", "it", "happen"]
(c31-0 / believe-01
       :ARG0 (c31-1 / you)
       :ARG1 (c31-2 / it)
       :time (c31-3 / until
                    :op1 c31-2)
       :polarity -
       :mode imperative)

# ::snt Al !!!
# ::tokens ["Al", "!", "!", "!"]
# ::lemmas ["Al", "!", "!", "!"]
(c32-0 / al
       :mode expressive)

# ::snt Running short of cash
# ::tokens ["Running", "short", "of", "cash"]
# ::lemmas ["run", "short", "of", "cash"]
(c33-0 / run-07
       :ARG2 (c33-2 / short-06
                    :ARG2 (c33-1 / cash)))

# ::snt isn't the world fucked up enough ?
# ::tokens ["is", "n't", "the", "world", "fucked", "up", "enough", "?"]
# ::lemmas ["be", "not", "the", "world", "fuck", "up", "enough", "?"]
(c36-0 / fuck-up-02
       :ARG1 (c36-3 / world)
       :ARG1-of (c36-2 / have-quant-91
                       :ARG3 (c36-1 / enough))
       :polarity (c36-4 / amr-unknown))

# ::snt Buuuu why not? HOW much time we need to wait for a spice girls reunin please think about yor fans
# ::tokens ["Buuuu", "why", "not", "?", "HOW", "much", "time", "we", "need", "to", "wait", "for", "a", "spice", "girls", "reunin", "please", "think", "about", "yor", "fans"]
# ::lemmas ["Buuuu", "why", "not", "?", "how", "much", "time", "we", "need", "to", "wait", "for", "a", "spice", "girl", "reunin", "please", "think", "about", "yor", "fan"]
(c37-3 / multi-sentence
       :snt1 (c37-10 / cause-01
                     :ARG0 (c37-14 / amr-unknown)
                     :ARG1 (c37-8 / have-polarity-91
                                  :ARG2 -)
                     :mod (c37-1 / buuu
                                 :mode expressive))
       :snt2 (c37-12 / think-01
                     :ARG0 (c37-2 / you)
                     :ARG2 (c37-0 / fan
                                  :poss (c37-15 / you))
                     :topic (c37-13 / amr-unknown
                                    :quant-of (c37-16 / time
                                                      :ARG1-of (c37-4 / need-01
                                                                      :ARG0 (c37-11 / we)
                                                                      :purpose (c37-9 / wait-01
                                                                                      :ARG1 c37-11
                                                                                      :ARG2 (c37-7 / reunite-01
                                                                                                   :ARG1 (c37-5 / girl
                                                                                                                :ARG0-of (c37-6 / spice-01)))))))
                     :mode imperative
                     :polite +))

# ::snt 'Never put all your egos in one basket' Everyone knows that!
# ::tokens ["'", "Never", "put", "all", "your", "egos", "in", "one", "basket", "'", "Everyone", "knows", "that", "!"]
# ::lemmas ["'", "never", "put", "all", "your", "ego", "in", "one", "basket", "'", "everyone", "know", "that", "!"]
(c38-3 / put-01
       :ARG0 (c38-1 / you)
       :ARG1 (c38-2 / ego
                    :mod (c38-6 / all)
                    :poss c38-1)
       :ARG2 (c38-0 / basket
                    :quant 1)
       :time (c38-7 / ever)
       :ARG1-of (c38-4 / know-01
                       :ARG0 (c38-5 / everyone))
       :polarity -
       :mode imperative)

# ::snt Ay dios te oiga!!!! Qu nervios. Me muero x verlas
# ::tokens ["Ay", "dios", "te", "oiga", "!", "!", "!", "!", "Qu", "nervios", ".", "Me", "muero", "x", "verlas"]
# ::lemmas ["ay", "dio", "te", "oiga", "!", "!", "!", "!", "Qu", "nervio", ".", "i", "muero", "x", "verla"]
(c39-1 / multi-sentence
       :snt1 (c39-4 / possible-01
                    :ARG1 (c39-0 / oiga)
                    :mod (c39-6 / ay
                                :mode expressive))
       :snt2 (c39-5 / qu
                    :mode expressive)
       :snt3 (c39-3 / me
                    :mod (c39-7 / muero
                                :mode expressive)
                    :mod (c39-2 / verlas)))

# ::snt As soon as Ginger finishes filming the Little House in the Prairie remake.
# ::tokens ["As", "soon", "as", "Ginger", "finishes", "filming", "the", "Little", "House", "in", "the", "Prairie", "remake", "."]
# ::lemmas ["as", "soon", "as", "Ginger", "finish", "film", "the", "Little", "House", "in", "the", "Prairie", "remake", "."]
(c40-0 / finish-01
       :ARG0 (c40-4 / person
                    :name (c40-1 / name
                                 :op1 "Ginger"))
       :ARG1 (c40-5 / film-01
                    :ARG0 c40-4
                    :ARG1 (c40-6 / work-of-art
                                 :name (c40-3 / name
                                              :op1 "Little"
                                              :op2 "House"
                                              :op3 "in"
                                              :op4 "the"
                                              :op5 "Pine")
                                 :ARG1-of (c40-2 / remake-01)))
       :time (c40-7 / as-soon-as
                    :op1 c40-0))

# ::snt Why?????
# ::tokens ["Why", "?", "?", "?", "?", "?"]
# ::lemmas ["why", "?", "?", "?", "?", "?"]
(c41-0 / cause-01
       :ARG0 (c41-1 / amr-unknown))

# ::snt Why? They were awful first time round.
# ::tokens ["Why", "?", "They", "were", "awful", "first", "time", "round", "."]
# ::lemmas ["why", "?", "they", "be", "awful", "first", "time", "round", "."]
(c42-1 / multi-sentence
       :snt1 (c42-4 / cause-01
                    :ARG0 (c42-2 / amr-unknown))
       :snt2 (c42-5 / awful
                    :domain (c42-6 / they)
                    :time (c42-3 / round
                                 :ord (c42-0 / ordinal-entity
                                             :value 1))))

# ::snt No!
# ::tokens ["No", "!"]
# ::lemmas ["no", "!"]
(c43-0 / no)

# ::snt Well this is unbelievable. Completely utter utter unbelievable.
# ::tokens ["Well", "this", "is", "unbelievable", ".", "Completely", "utter", "utter", "unbelievable", "."]
# ::lemmas ["well", "this", "be", "unbelievable", ".", "completely", "utter", "utter", "unbelievable", "."]
(c44-1 / multi-sentence
       :snt1 (c44-4 / possible-01
                    :ARG1 (c44-0 / believe-01
                                 :ARG1 (c44-7 / this))
                    :mod (c44-5 / well)
                    :polarity -)
       :snt2 (c44-2 / possible-01
                    :ARG1 (c44-3 / believe-01
                                 :ARG1 c44-7)
                    :mod (c44-8 / utter)
                    :mod (c44-6 / complete)
                    :polarity -))

# ::snt Oh come on no
# ::tokens ["Oh", "come", "on", "no"]
# ::lemmas ["oh", "come", "on", "no"]
(c45-0 / come-on-25
       :ARG1 (c45-1 / you)
       :mod (c45-2 / oh
                   :mode expressive)
       :mode imperative)

# ::snt This has perked me up no end
# ::tokens ["This", "has", "perked", "me", "up", "no", "end"]
# ::lemmas ["this", "have", "perk", "i", "up", "no", "end"]
(c47-1 / perk-up-01
       :ARG0 (c47-3 / this)
       :ARG1 (c47-2 / i)
       :ARG1-of (c47-0 / end-01
                       :polarity -))

# ::snt Threw in my mouth
# ::tokens ["Threw", "in", "my", "mouth"]
# ::lemmas ["throw", "in", "my", "mouth"]
(c48-2 / throw-01
       :ARG2 (c48-0 / mouth
                    :part-of (c48-1 / i)))

# ::snt All the Spice girls run out of money again, 'av they?
# ::tokens ["All", "the", "Spice", "girls", "run", "out", "of", "money", "again", ",", "'", "av", "they", "?"]
# ::lemmas ["all", "the", "Spice", "girl", "run", "out", "of", "money", "again", ",", "'", "av", "they", "?"]
(c49-2 / run-out-05
       :ARG1 (c49-0 / money)
       :ARG2 (c49-6 / girl
                    :mod (c49-5 / all)
                    :mod (c49-3 / company
                                :name (c49-1 / name
                                             :op1 "Spice"
                                             :op2 "Girl")))
       :mod (c49-4 / again)
       :ARG1-of (c49-7 / request-confirmation-91))
