# ::snt wow, so shocked.
# ::tokens ["wow", ",", "so", "shocked", "."]
# ::lemmas ["wow", ",", "so", "shocked", "."]
(c1-2 / shock-01
      :degree (c1-0 / so)
      :mod (c1-1 / wow
                 :mode expressive))

# ::snt yes this is what we should be worried about...
# ::tokens ["yes", "this", "is", "what", "we", "should", "be", "worried", "about", "..."]
# ::lemmas ["yes", "this", "be", "what", "we", "should", "be", "worried", "about", "..."]
(c2-1 / recommend-01
      :ARG1 (c2-3 / worry-01
                  :ARG0 (c2-2 / this)
                  :ARG1 (c2-0 / we)))

# ::snt guess she didn't want to be st lady in
# ::tokens ["guess", "she", "did", "n't", "want", "to", "be", "st", "lady", "in"]
# ::lemmas ["guess", "she", "do", "not", "want", "to", "be", "st", "lady", "in"]
(c3-4 / guess-01
      :ARG1 (c3-3 / want-01
                  :ARG0 (c3-1 / she)
                  :ARG1 (c3-2 / lady
                              :mod (c3-0 / st)
                              :domain c3-1)
                  :polarity -))

# ::snt yet another man ruined by this family
# ::tokens ["yet", "another", "man", "ruined", "by", "this", "family"]
# ::lemmas ["yet", "another", "man", "ruin", "by", "this", "family"]
(c4-3 / ruin-01
      :ARG0 (c4-0 / family
                  :mod (c4-4 / this))
      :ARG1 (c4-2 / man
                  :mod (c4-5 / another
                             :mod (c4-1 / yet))))

# ::snt Really? And two cute babies plus all that cha-ching? Who'd thought? *shuts off sarcasm switch*
# ::tokens ["Really", "?", "And", "two", "cute", "babies", "plus", "all", "that", "cha", "-", "ching", "?", "Who", "'d", "thought", "?", "*", "shuts", "off", "sarcasm", "switch", "*"]
# ::lemmas ["really", "?", "and", "two", "cute", "baby", "plus", "all", "that", "cha", "-", "ching", "?", "who", "would", "think", "?", "*", "shut", "off", "sarcasm", "switch", "*"]
(c5-2 / multi-sentence
      :snt1 (c5-4 / real-04
                  :polarity (c5-11 / amr-unknown))
      :snt2 (c5-10 / and
                   :op2 (c5-1 / baby
                              :mod (c5-6 / cute)
                              :ARG2-of (c5-7 / add-02
                                             :ARG1 (c5-14 / chachchch-01
                                                          :mod (c5-12 / all)
                                                          :mod (c5-9 / that)))
                              :quant 2)
                   :polarity (c5-8 / amr-unknown))
      :snt3 (c5-5 / think-01
                  :ARG0 (c5-13 / amr-unknown))
      :snt4 (c5-3 / shut-off-06
                  :ARG1 (c5-0 / switch-01
                              :ARG1 (c5-15 / sarcasm))))

# ::snt because nobody's focused on her?
# ::tokens ["because", "nobody", "'s", "focused", "on", "her", "?"]
# ::lemmas ["because", "nobody", "be", "focus", "on", "she", "?"]
(c6-3 / cause-01
      :ARG0 (c6-0 / focus-01
                  :ARG0 (c6-1 / nobody)
                  :ARG2 (c6-2 / she))
      :polarity (c6-4 / amr-unknown))

# ::snt .se toi qui le dit can moi mon coeur aime une autre nauvelle femme qui me donnera des enfant
# ::tokens [".se", "toi", "qui", "le", "dit", "can", "moi", "mon", "coeur", "aime", "une", "autre", "nauvelle", "femme", "qui", "me", "donnera", "des", "enfant"]
# ::lemmas [".se", "toi", "qui", "le", "dit", "can", "moi", "mon", "coeur", "aime", "une", "autre", "nauvelle", "femme", "qui", "i", "donnera", "des", "enfant"]
(c7-2 / multi-sentence
      :snt1 (c7-8 / possible-01
                  :ARG1 (c7-13 / amr-unknown
                               :ARG1-of (c7-9 / cause-01
                                              :ARG0 (c7-12 / amr-unknown))
                               :polarity -))
      :snt2 (c7-3 / possible-01
                  :ARG1 (c7-10 / amr-unknown
                               :ARG1-of (c7-16 / cause-01
                                               :ARG0 (c7-11 / coeur
                                                            :mod (c7-7 / mon)))
                               :polarity -))
      :snt3 (c7-1 / femme
                  :mod (c7-15 / autre)
                  :mod (c7-4 / nauvelle)
                  :ARG2-of (c7-0 / cause-01
                                 :ARG1 (c7-5 / donnera-00
                                             :ARG0 (c7-14 / i)
                                             :ARG1 (c7-6 / enfant)))))

# ::snt Too late you already birthed two kids from this loser you dummy!
# ::tokens ["Too", "late", "you", "already", "birthed", "two", "kids", "from", "this", "loser", "you", "dummy", "!"]
# ::lemmas ["too", "late", "you", "already", "birth", "two", "kid", "from", "this", "loser", "you", "dummy", "!"]
(c8-2 / say-01
      :ARG0 (c8-8 / i)
      :ARG1 (c8-0 / bear-02
                  :ARG0 (c8-1 / you
                              :mod (c8-10 / dummy))
                  :ARG1 (c8-5 / kid
                              :source (c8-6 / person
                                            :ARG0-of (c8-7 / lose-03)
                                            :mod (c8-9 / this))
                              :quant 2)
                  :time (c8-3 / already)
                  :ARG1-of (c8-4 / have-degree-91
                                 :ARG2 (c8-11 / late)
                                 :ARG3 (c8-12 / too)))
      :ARG2 c8-1)

# ::snt hi
# ::tokens ["hi"]
# ::lemmas ["hi"]
(c9-0 / hi)

# ::snt She is only miserable cause he won't rest!? What a joke!
# ::tokens ["She", "is", "only", "miserable", "cause", "he", "wo", "n't", "rest", "!", "?", "What", "a", "joke", "!"]
# ::lemmas ["she", "be", "only", "miserable", "cause", "he", "will", "not", "rest", "!", "?", "what", "a", "joke", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-4 / miserable
                    :domain (c10-2 / she)
                    :ARG1-of (c10-6 / cause-01
                                    :ARG0 (c10-3 / rest-01
                                                 :ARG0 (c10-5 / he)
                                                 :polarity -))
                    :mod (c10-0 / only))
       :snt2 (c10-7 / joke-01
                    :degree (c10-8 / amr-unknown)
                    :mode expressive))

# ::snt Kim just move on,hell you have been through dozen of men's and a few husband. Don't let life pass you by worry about BS!
# ::tokens ["Kim", "just", "move", "on", ",", "hell", "you", "have", "been", "through", "dozen", "of", "men", "'s", "and", "a", "few", "husband", ".", "Do", "n't", "let", "life", "pass", "you", "by", "worry", "about", "BS", "!"]
# ::lemmas ["Kim", "just", "move", "on", ",", "hell", "you", "have", "be", "through", "dozen", "of", "man", "'s", "and", "a", "few", "husband", ".", "do", "not", "let", "life", "pass", "you", "by", "worry", "about", "BS", "!"]
(c11-12 / multi-sentence
        :snt1 (c11-5 / move-01
                     :ARG0 (c11-18 / person
                                   :name (c11-17 / name
                                                 :op1 "Kim"))
                     :direction (c11-2 / on)
                     :mod (c11-7 / just)
                     :ARG1-of (c11-14 / cause-01
                                      :ARG0 (c11-9 / go-through-20
                                                   :ARG0 (c11-8 / and
                                                                :op1 (c11-15 / man
                                                                             :quant 12)
                                                                :op2 (c11-13 / person
                                                                             :ARG0-of (c11-6 / have-rel-role-91
                                                                                             :ARG2 (c11-20 / husband))
                                                                             :quant (c11-16 / few)))
                                                   :mod (c11-4 / hell
                                                               :mode expressive)))
                     :mode imperative)
        :snt2 (c11-0 / let-01
                     :ARG0 (c11-3 / you)
                     :ARG1 (c11-1 / pass-03
                                  :ARG1 (c11-10 / life)
                                  :ARG2 c11-3
                                  :ARG1-of c11-14
                                  :ARG0 (c11-19 / worry-01
                                                :ARG0 (c11-11 / bullshit)
                                                :ARG1 c11-3))
                     :mode imperative
                     :polarity -))

# ::snt give him sleep pill in cold water.
# ::tokens ["give", "him", "sleep", "pill", "in", "cold", "water", "."]
# ::lemmas ["give", "he", "sleep", "pill", "in", "cold", "water", "."]
(c12-6 / give-01
       :ARG0 (c12-0 / you)
       :ARG1 (c12-3 / pill
                    :purpose (c12-1 / sleep-01
                                    :ARG0 (c12-2 / he))
                    :location (c12-4 / water
                                     :ARG1-of (c12-5 / cold-01)))
       :ARG2 c12-2
       :mode imperative)

# ::snt she can fly to Paris to get a feel better fix
# ::tokens ["she", "can", "fly", "to", "Paris", "to", "get", "a", "feel", "better", "fix"]
# ::lemmas ["she", "can", "fly", "to", "Paris", "to", "get", "a", "feel", "well", "fix"]
(c13-5 / possible-01
       :ARG1 (c13-0 / fly-01
                    :ARG1 (c13-3 / she)
                    :destination (c13-7 / city
                                        :name (c13-1 / name
                                                     :op1 "Paris"))
                    :purpose (c13-9 / get-01
                                    :ARG0 c13-3
                                    :ARG1 (c13-6 / fix-02
                                                 :ARG1-of (c13-4 / have-degree-91
                                                                 :ARG2 (c13-8 / good-02
                                                                              :ARG1 c13-6)
                                                                 :ARG3 (c13-2 / more))))))

# ::snt oh poor big rich girl
# ::tokens ["oh", "poor", "big", "rich", "girl"]
# ::lemmas ["oh", "poor", "big", "rich", "girl"]
(c14-4 / girl
       :mod (c14-2 / rich)
       :mod (c14-3 / poor)
       :mod (c14-1 / big)
       :mod (c14-0 / oh
                   :mode expressive))

# ::snt so, like every other married couple on earth, they're having normal probs.
# ::tokens ["so", ",", "like", "every", "other", "married", "couple", "on", "earth", ",", "they", "'re", "having", "normal", "probs", "."]
# ::lemmas ["so", ",", "like", "every", "other", "married", "couple", "on", "earth", ",", "they", "be", "have", "normal", "prob", "."]
(c15-10 / infer-01
        :ARG1 (c15-6 / have-03
                     :ARG0 (c15-11 / they)
                     :ARG1 (c15-7 / probs
                                  :ARG1-of (c15-1 / normal-02))
                     :ARG1-of (c15-4 / resemble-01
                                     :ARG2 (c15-9 / couple
                                                  :ARG1-of (c15-2 / marry-01)
                                                  :mod (c15-0 / other
                                                              :mod (c15-5 / every))
                                                  :location (c15-3 / planet
                                                                   :name (c15-8 / name
                                                                                :op1 "Earth"))))))

# ::snt I'm sure she'll divorce him soon. Kim cannot be inconvenienced with such nonsense like a sick husband in her life.
# ::tokens ["I", "'m", "sure", "she", "'ll", "divorce", "him", "soon", ".", "Kim", "can", "not", "be", "inconvenienced", "with", "such", "nonsense", "like", "a", "sick", "husband", "in", "her", "life", "."]
# ::lemmas ["i", "be", "sure", "she", "'ll", "divorce", "he", "soon", ".", "Kim", "can", "not", "be", "inconvenience", "with", "such", "nonsense", "like", "a", "sick", "husband", "in", "her", "life", "."]
(c16-9 / multi-sentence
       :snt1 (c16-0 / sure-02
                    :ARG0 (c16-17 / i)
                    :ARG1 (c16-18 / divorce-01
                                  :ARG0 (c16-4 / she)
                                  :ARG1 (c16-7 / he)
                                  :time (c16-3 / soon)))
       :snt2 (c16-15 / possible-01
                     :ARG1 (c16-5 / inconvenience-01
                                  :ARG0 (c16-13 / sense-02
                                                :mod (c16-1 / such)
                                                :ARG1-of (c16-14 / resemble-01
                                                                 :ARG2 (c16-10 / person
                                                                               :ARG0-of (c16-16 / have-rel-role-91
                                                                                                :ARG1 (c16-8 / she)
                                                                                                :ARG2 (c16-6 / husband))
                                                                               :ARG1-of (c16-11 / sick-05)
                                                                               :time (c16-2 / life
                                                                                            :poss c16-8)))
                                                :polarity -)
                                  :ARG1 c16-10
                                  :name (c16-12 / name
                                                :op1 "Kim"))
                     :polarity -))

# ::snt hey Kim. It'd a little late to be crying about your marriage now. You married the dumb bastard.
# ::tokens ["hey", "Kim", ".", "It", "'d", "a", "little", "late", "to", "be", "crying", "about", "your", "marriage", "now", ".", "You", "married", "the", "dumb", "bastard", "."]
# ::lemmas ["hey", "Kim", ".", "it", "would", "a", "little", "late", "to", "be", "cry", "about", "your", "marriage", "now", ".", "you", "marry", "the", "dumb", "bastard", "."]
(c17-3 / multi-sentence
       :snt1 (c17-4 / say-01
                    :ARG1 (c17-5 / hey)
                    :ARG2 (c17-6 / person
                                 :name (c17-2 / name
                                              :op1 "Kim")))
       :snt2 (c17-7 / late
                    :domain (c17-10 / cry-02
                                    :ARG0 (c17-1 / you)
                                    :ARG1 (c17-8 / marry-01
                                                 :ARG1 c17-1)
                                    :time (c17-9 / now))
                    :degree (c17-13 / little))
       :snt3 (c17-14 / marry-01
                     :ARG1 (c17-11 / you)
                     :ARG2 (c17-0 / bastard
                                  :mod (c17-12 / dumb))))

# ::snt I'm 'annoyed' by how much you keep posting about these people. .
# ::tokens ["I", "'m", "'", "annoyed", "'", "by", "how", "much", "you", "keep", "posting", "about", "these", "people", ".", "."]
# ::lemmas ["i", "be", "'", "annoyed", "'", "by", "how", "much", "you", "keep", "post", "about", "these", "people", ".", "."]
(c18-2 / embarrass-01
       :ARG0 (c18-6 / thing
                    :quant-of (c18-3 / post-01
                                     :ARG0 (c18-0 / you)
                                     :ARG1 (c18-1 / person
                                                  :mod (c18-7 / this))
                                     :ARG1-of (c18-4 / keep-02
                                                     :ARG0 c18-0)))
       :ARG1 (c18-5 / i))

# ::snt so sick of you guys reporting stories about this couple every single day.. you have no facts so let these two work it out
# ::tokens ["so", "sick", "of", "you", "guys", "reporting", "stories", "about", "this", "couple", "every", "single", "day", "..", "you", "have", "no", "facts", "so", "let", "these", "two", "work", "it", "out"]
# ::lemmas ["so", "sick", "of", "you", "guy", "report", "story", "about", "this", "couple", "every", "single", "day", "..", "you", "have", "no", "fact", "so", "let", "these", "two", "work", "it", "out"]
(c20-0 / sick-04
       :ARG0 (c20-15 / report-01
                     :ARG0 (c20-6 / you
                                  :mod (c20-9 / guy))
                     :ARG1 (c20-5 / story
                                  :topic (c20-11 / couple
                                                 :mod (c20-8 / this)))
                     :frequency (c20-3 / rate-entity-91
                                       :ARG3 (c20-12 / temporal-quantity
                                                     :unit (c20-18 / day)
                                                     :ARG1-of (c20-4 / single-02)
                                                     :quant 1)))
       :ARG1 c20-6
       :degree (c20-14 / so)
       :ARG0-of (c20-10 / cause-01
                        :ARG1 (c20-7 / have-03
                                     :ARG0 c20-6
                                     :ARG1 (c20-13 / fact)
                                     :ARG0-of (c20-2 / cause-01
                                                     :ARG1 (c20-1 / let-01
                                                                  :ARG0 c20-6
                                                                  :ARG1 (c20-16 / work-out-02
                                                                                :ARG0 c20-11
                                                                                :ARG1 (c20-17 / it))))
                                     :polarity -)))

# ::snt your prediction may be on point!
# ::tokens ["your", "prediction", "may", "be", "on", "point", "!"]
# ::lemmas ["your", "prediction", "may", "be", "on", "point", "!"]
(c21-2 / possible-01
       :ARG1 (c21-0 / on-point
                    :domain (c21-3 / predict-01
                                   :ARG0 (c21-1 / you))))

# ::snt "Woman looks at husband"
# ::tokens ["\"", "Woman", "looks", "at", "husband", "\""]
# ::lemmas ["\"", "woman", "look", "at", "husband", "\""]
(c22-1 / look-01
       :ARG0 (c22-3 / woman)
       :ARG1 (c22-2 / person
                    :ARG0-of (c22-0 / have-rel-role-91
                                    :ARG2 (c22-4 / husband))))

# ::snt That's it, I'm out. You people are as lazy and pointless at .
# ::tokens ["That", "'s", "it", ",", "I", "'m", "out", ".", "You", "people", "are", "as", "lazy", "and", "pointless", "at", "."]
# ::lemmas ["that", "be", "it", ",", "i", "be", "out", ".", "you", "people", "be", "as", "lazy", "and", "pointless", "at", "."]
(c23-3 / multi-sentence
       :snt1 (c23-1 / be-it-06
                    :ARG0 (c23-9 / i)
                    :ARG1 (c23-0 / out-06
                                 :ARG1 c23-9))
       :snt2 (c23-6 / have-degree-91
                    :ARG1 (c23-2 / you
                                 :domain (c23-7 / person))
                    :ARG2 (c23-10 / and
                                  :op1 (c23-8 / lazy)
                                  :op2 (c23-4 / point-03
                                              :polarity -))
                    :ARG3 (c23-5 / equal)))

# ::snt For real
# ::tokens ["For", "real"]
# ::lemmas ["for", "real"]
(c24-0 / real-04)

# ::snt keep this up and i'm gonna stop following
# ::tokens ["keep", "this", "up", "and", "i", "'m", "gon", "na", "stop", "following"]
# ::lemmas ["keep", "this", "up", "and", "i", "be", "going", "to", "stop", "follow"]
(c25-3 / and
       :op1 (c25-4 / keep-up-10
                   :ARG0 (c25-1 / you)
                   :ARG1 (c25-6 / this)
                   :mode imperative)
       :op2 (c25-2 / stop-01
                   :ARG0 (c25-5 / i)
                   :ARG1 (c25-0 / follow-02
                                :ARG0 c25-5)))

# ::snt fuck you
# ::tokens ["fuck", "you"]
# ::lemmas ["fuck", "you"]
(c26-0 / fuck-01
       :ARG1 (c26-1 / you)
       :mode imperative
       :mode expressive)

# ::snt I think Kanye has a problem in his head. Like a mental disorder.
# ::tokens ["I", "think", "Kanye", "has", "a", "problem", "in", "his", "head", ".", "Like", "a", "mental", "disorder", "."]
# ::lemmas ["i", "think", "Kanye", "have", "a", "problem", "in", "his", "head", ".", "like", "a", "mental", "disorder", "."]
(c27-0 / multi-sentence
       :snt1 (c27-9 / think-01
                    :ARG0 (c27-8 / i)
                    :ARG1 (c27-4 / have-03
                                 :ARG0 (c27-5 / person
                                              :name (c27-1 / name
                                                           :op1 "Kanye")
                                              :part (c27-7 / head))
                                 :ARG1 (c27-2 / problem
                                              :location c27-7)))
       :snt2 (c27-3 / resemble-01
                    :ARG2 (c27-10 / disorder
                                  :mod (c27-6 / mind))))

# ::snt miserable cuz she's married to him
# ::tokens ["miserable", "cuz", "she", "'s", "married", "to", "him"]
# ::lemmas ["miserable", "cuz", "she", "be", "married", "to", "he"]
(c28-4 / cause-01
       :ARG0 (c28-0 / marry-01
                    :ARG1 (c28-1 / she)
                    :ARG2 (c28-2 / he))
       :ARG1 (c28-3 / possible-01
                    :ARG1 (c28-5 / argue-02)
                    :polarity -))

# ::snt please find something else to tweet about
# ::tokens ["please", "find", "something", "else", "to", "tweet", "about"]
# ::lemmas ["please", "find", "something", "else", "to", "tweet", "about"]
(c29-0 / find-01
       :ARG0 (c29-1 / you)
       :ARG1 (c29-2 / something
                    :mod (c29-3 / else)
                    :ARG1-of (c29-4 / tweet-01
                                    :ARG0 c29-1))
       :mode imperative
       :polite +)

# ::snt leave the wrists alone
# ::tokens ["leave", "the", "wrists", "alone"]
# ::lemmas ["leave", "the", "wrist", "alone"]
(c30-2 / leave-14
       :ARG0 (c30-1 / you)
       :ARG1 (c30-3 / alone
                    :domain (c30-0 / wrist))
       :mode imperative)

# ::snt Why rest when you can make a further spectacle of yourself and making people dislike you more by posing with Trump
# ::tokens ["Why", "rest", "when", "you", "can", "make", "a", "further", "spectacle", "of", "yourself", "and", "making", "people", "dislike", "you", "more", "by", "posing", "with", "Trump"]
# ::lemmas ["why", "rest", "when", "you", "can", "make", "a", "further", "spectacle", "of", "yourself", "and", "make", "people", "dislike", "you", "more", "by", "pose", "with", "Trump"]
(c31-6 / rest-01
       :ARG1-of (c31-9 / cause-01
                       :ARG0 (c31-13 / amr-unknown))
       :time (c31-8 / possible-01
                    :ARG1 (c31-12 / and
                                  :op1 (c31-2 / make-01
                                              :ARG0 (c31-1 / you)
                                              :ARG1 (c31-4 / spectacle
                                                           :mod (c31-0 / further)
                                                           :topic c31-1))
                                  :op2 (c31-7 / make-02
                                              :ARG0 c31-1
                                              :ARG1 (c31-14 / dislike-01
                                                            :ARG0 (c31-3 / person)
                                                            :ARG1 c31-1)
                                              :manner (c31-15 / pose-01
                                                              :ARG0 c31-1
                                                              :ARG2 (c31-10 / person
                                                                            :name (c31-5 / name
                                                                                         :op1 "Trump")))
                                              :mod (c31-11 / more)))))

# ::snt oh my God who the hell cares
# ::tokens ["oh", "my", "God", "who", "the", "hell", "cares"]
# ::lemmas ["oh", "my", "God", "who", "the", "hell", "care"]
(c32-4 / care-01
       :ARG0 (c32-5 / amr-unknown
                    :mod (c32-2 / hell))
       :ARG1 (c32-3 / person
                    :name (c32-1 / name
                                 :op1 "God")
                    :mod (c32-0 / oh
                                :mode expressive)))

# ::snt For better or worse, suck it up, deal with it.
# ::tokens ["For", "better", "or", "worse", ",", "suck", "it", "up", ",", "deal", "with", "it", "."]
# ::lemmas ["for", "well", "or", "bad", ",", "suck", "it", "up", ",", "deal", "with", "it", "."]
(c33-8 / and
       :op1 (c33-3 / suck-up-04
                   :ARG0 (c33-1 / you)
                   :ARG1 (c33-7 / it)
                   :ARG1-of (c33-4 / have-degree-91
                                   :ARG2 (c33-9 / good-02
                                                :ARG1 c33-3)
                                   :ARG3 (c33-2 / more))
                   :mode imperative)
       :op2 (c33-10 / deal-01
                    :ARG0 c33-1
                    :ARG2 c33-7
                    :ARG1-of (c33-6 / have-degree-91
                                    :ARG2 (c33-0 / bad-07
                                                 :ARG1 c33-10)
                                    :ARG3 (c33-5 / more))
                    :mode imperative))

# ::snt they always look miserable no matter where they go. Money can't buy you happiness!
# ::tokens ["they", "always", "look", "miserable", "no", "matter", "where", "they", "go", ".", "Money", "ca", "n't", "buy", "you", "happiness", "!"]
# ::lemmas ["they", "always", "look", "miserable", "no", "matter", "where", "they", "go", ".", "money", "can", "not", "buy", "you", "happiness", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-5 / look-02
                    :ARG0 (c34-8 / they)
                    :ARG1 (c34-4 / miserable)
                    :time (c34-9 / always)
                    :ARG1-of (c34-3 / regardless-91
                                    :ARG2 (c34-11 / location
                                                  :ARG4-of (c34-10 / go-01
                                                                   :ARG1 c34-8))))
       :snt2 (c34-6 / possible-01
                    :ARG1 (c34-0 / buy-01
                                 :ARG0 (c34-12 / money)
                                 :ARG1 (c34-7 / happiness)
                                 :ARG4 (c34-1 / you))
                    :polarity -))

# ::snt Do they ever look anything but miserable in pictures?
# ::tokens ["Do", "they", "ever", "look", "anything", "but", "miserable", "in", "pictures", "?"]
# ::lemmas ["do", "they", "ever", "look", "anything", "but", "miserable", "in", "picture", "?"]
(c35-3 / look-02
       :polarity (c35-1 / amr-unknown)
       :ARG0 (c35-6 / they)
       :ARG1 (c35-5 / anything
                    :ARG2-of (c35-2 / except-01
                                    :ARG1 (c35-0 / miserable)))
       :time (c35-7 / ever)
       :location (c35-4 / picture))

# ::snt Just as I prophesied, Taylor replies to Kim's post! What d f**k does "famous" lyrics mean to y'all!
# ::tokens ["Just", "as", "I", "prophesied", ",", "Taylor", "replies", "to", "Kim", "'s", "post", "!", "What", "d", "f**k", "does", "\"", "famous", "\"", "lyrics", "mean", "to", "y'", "all", "!"]
# ::lemmas ["just", "as", "i", "prophesy", ",", "Taylor", "reply", "to", "Kim", "'s", "post", "!", "what", "d", "f**k", "do", "\"", "famous", "\"", "lyric", "mean", "to", "you", "all", "!"]
(c36-4 / multi-sentence
       :snt1 (c36-5 / reply-01
                    :ARG0 (c36-8 / person
                                 :name (c36-2 / name
                                              :op1 "Taylor"))
                    :ARG1 (c36-3 / post-01
                                 :ARG0 (c36-14 / person
                                               :name (c36-7 / name
                                                            :op1 "Kim")))
                    :mod (c36-12 / just))
       :snt2 (c36-9 / mean-01
                    :ARG1 (c36-10 / lyric
                                  :ARG1-of (c36-0 / fame-01))
                    :ARG2 (c36-6 / amr-unknown
                                 :mod (c36-11 / fuck
                                              :mode expressive))
                    :ARG3 (c36-1 / you
                                 :mod (c36-13 / all))))

# ::snt Just can't wait to see the next crappy y'all gon post here on Twitter! Sick ass clowns.
# ::tokens ["Just", "ca", "n't", "wait", "to", "see", "the", "next", "crappy", "y'", "all", "gon", "post", "here", "on", "Twitter", "!", "Sick", "ass", "clowns", "."]
# ::lemmas ["just", "can", "not", "wait", "to", "see", "the", "next", "crappy", "you", "all", "gon", "post", "here", "on", "Twitter", "!", "sick", "ass", "clown", "."]
(c37-2 / multi-sentence
       :snt1 (c37-8 / wait-01
                    :ARG1 (c37-11 / i)
                    :ARG2 (c37-4 / see-01
                                 :ARG0 c37-11
                                 :ARG1 (c37-7 / post-01
                                              :ARG0 (c37-1 / you
                                                           :mod (c37-12 / all))
                                              :ARG2 (c37-3 / publication
                                                           :name (c37-5 / name
                                                                        :op1 "Twitter"))
                                              :mod (c37-6 / next)
                                              :ARG1-of (c37-9 / crap-01)))
                    :mod (c37-10 / just))
       :snt2 (c37-14 / clown
                     :mod (c37-13 / ass
                                  :ARG1-of (c37-0 / sick-05))))

# ::snt Today Kim shares recording of Taylor's call with Kanye, who f**king cares to hear them recordings?
# ::tokens ["Today", "Kim", "shares", "recording", "of", "Taylor", "'s", "call", "with", "Kanye", ",", "who", "f**king", "cares", "to", "hear", "them", "recordings", "?"]
# ::lemmas ["today", "Kim", "share", "recording", "of", "Taylor", "'s", "call", "with", "Kanye", ",", "who", "f**ke", "care", "to", "hear", "they", "recording", "?"]
(c38-3 / share-01
       :ARG0 (c38-7 / person
                    :name (c38-1 / name
                                 :op1 "Kim"))
       :ARG1 (c38-4 / record-01
                    :ARG1 (c38-10 / call-02
                                  :ARG0 (c38-2 / person
                                               :name (c38-6 / name
                                                            :op1 "Taylor"))))
       :ARG2 (c38-12 / person
                     :name (c38-8 / name
                                  :op1 "Kanye"))
       :time (c38-11 / today)
       :ARG0-of (c38-15 / care-01
                        :ARG1 (c38-9 / hear-01
                                     :ARG0 (c38-5 / amr-unknown)
                                     :ARG1 (c38-14 / record-01
                                                   :ARG0 (c38-13 / they)))
                        :mod (c38-0 / fucking
                                    :mode expressive)))
