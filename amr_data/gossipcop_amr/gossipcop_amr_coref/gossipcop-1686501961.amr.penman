# ::snt OmG mEnS LIveS wILl bE rUInEd yeah, he looks like hes having a real rough time
# ::tokens ["OmG", "mEnS", "LIveS", "wILl", "bE", "rUInEd", "yeah", ",", "he", "looks", "like", "he", "s", "having", "a", "real", "rough", "time"]
# ::lemmas ["OmG", "mEnS", "LIveS", "will", "be", "ruined", "yeah", ",", "he", "look", "like", "he", "s", "have", "a", "real", "rough", "time"]
(c1-2 / multi-sentence
      :snt1 (c1-0 / oh-my-god
                  :mode expressive)
      :snt2 (c1-5 / look-02
                  :ARG0 (c1-4 / he)
                  :ARG1 (c1-3 / rough-04
                              :ARG1 c1-4
                              :degree (c1-6 / really)))
      :snt3 (c1-1 / yeah
                  :mode expressive))

# ::snt What's the latest on Les Moonves?
# ::tokens ["What", "'s", "the", "latest", "on", "Les", "Moonves", "?"]
# ::lemmas ["what", "be", "the", "late", "on", "Les", "Moonves", "?"]
(c2-3 / amr-unknown
      :mod (c2-2 / last)
      :topic (c2-0 / person
                   :name (c2-1 / name
                               :op1 "Les"
                               :op2 "Moonves")))

# ::snt BUY HOLDUse Way to Buy Crypto
# ::tokens ["BUY", "HOLDUse", "Way", "to", "Buy", "Crypto"]
# ::lemmas ["BUY", "HOLDUse", "Way", "to", "buy", "Crypto"]
(c3-2 / hold-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-4 / way
                  :manner-of (c3-0 / buy-01
                                   :ARG0 c3-1
                                   :ARG1 (c3-3 / Crypto))
                  :ARG1-of (c3-5 / use-01
                                 :ARG0 c3-1))
      :mode imperative)

# ::snt My thoughts exactly! Good to know hes out there living it up with little repercussions for his actions
# ::tokens ["My", "thoughts", "exactly", "!", "Good", "to", "know", "he", "s", "out", "there", "living", "it", "up", "with", "little", "repercussions", "for", "his", "actions"]
# ::lemmas ["my", "thought", "exactly", "!", "good", "to", "know", "he", "s", "out", "there", "live", "it", "up", "with", "little", "repercussion", "for", "his", "action"]
(c4-1 / multi-sentence
      :snt1 (c4-10 / thing
                   :ARG1-of (c4-12 / think-01
                                   :ARG0 (c4-11 / i)
                                   :manner (c4-5 / exact)))
      :snt2 (c4-13 / good-02
                   :ARG1 (c4-7 / know-01
                               :ARG1 (c4-8 / live-up-04
                                           :ARG0 (c4-6 / he)
                                           :ARG1 (c4-2 / it)
                                           :location (c4-0 / out-there)
                                           :manner (c4-3 / repercussion
                                                         :mod (c4-14 / little)
                                                         :ARG1-of (c4-9 / cause-01
                                                                        :ARG0 (c4-4 / act-02
                                                                                    :ARG0 c4-6)))))))

# ::snt ....People Magazine will be saying Matt Lauer goes paddleboarding years after scandel
# ::tokens ["....", "People", "Magazine", "will", "be", "saying", "Matt", "Lauer", "goes", "paddleboarding", "years", "after", "scandel"]
# ::lemmas ["....", "People", "Magazine", "will", "be", "say", "Matt", "Lauer", "go", "paddleboarding", "years", "after", "scandel"]
(c5-3 / say-01
      :ARG0 (c5-2 / magazine
                  :name (c5-1 / name
                              :op1 "People"
                              :op2 "Magazine"))
      :ARG1 (c5-11 / go-05
                   :ARG0 (c5-6 / person
                               :name (c5-5 / name
                                           :op1 "Matt"
                                           :op2 "Lauer"))
                   :ARG1 (c5-4 / paddle-01
                               :ARG0 c5-6)
                   :time (c5-10 / after
                                :op1 (c5-12 / person
                                            :name (c5-7 / name
                                                        :op1 "Scandel"))
                                :quant (c5-8 / multiple
                                             :op1 (c5-9 / temporal-quantity
                                                        :unit (c5-0 / year)
                                                        :quant 1)))))

# ::snt Why is this a news story? The man does not deserve any media coverage.
# ::tokens ["Why", "is", "this", "a", "news", "story", "?", "The", "man", "does", "not", "deserve", "any", "media", "coverage", "."]
# ::lemmas ["why", "be", "this", "a", "news", "story", "?", "the", "man", "do", "not", "deserve", "any", "media", "coverage", "."]
(c6-1 / multi-sentence
      :snt1 (c6-2 / story
                  :mod (c6-0 / news)
                  :domain (c6-6 / this)
                  :ARG1-of (c6-5 / cause-01
                                 :ARG0 (c6-3 / amr-unknown)))
      :snt2 (c6-7 / deserve-01
                  :ARG0 (c6-4 / man)
                  :ARG1 (c6-9 / cover-03
                              :ARG0 (c6-8 / media)
                              :ARG1 c6-4)
                  :polarity -))

# ::snt (Wannaabe) Are you seriously bringing other women around your children are you insane? Yeah because no one else wants to be around you do you have any guy friends that you can hang out with and try to heal yourself? Get in counseling and stay there.
# ::tokens ["(", "Wannaabe", ")", "Are", "you", "seriously", "bringing", "other", "women", "around", "your", "children", "are", "you", "insane", "?", "Yeah", "because", "no", "one", "else", "wants", "to", "be", "around", "you", "do", "you", "have", "any", "guy", "friends", "that", "you", "can", "hang", "out", "with", "and", "try", "to", "heal", "yourself", "?", "Get", "in", "counseling", "and", "stay", "there", "."]
# ::lemmas ["(", "Wannaabe", ")", "be", "you", "seriously", "bring", "other", "woman", "around", "your", "child", "be", "you", "insane", "?", "yeah", "because", "no", "one", "else", "want", "to", "be", "around", "you", "do", "you", "have", "any", "guy", "friend", "that", "you", "can", "hang", "out", "with", "and", "try", "to", "heal", "yourself", "?", "get", "in", "counseling", "and", "stay", "there", "."]
(c7-22 / multi-sentence
       :snt1 (c7-0 / say-01
                   :ARG1 (c7-8 / serious-01
                               :ARG1 (c7-21 / bring-01
                                            :ARG0 (c7-10 / you)
                                            :ARG1 (c7-32 / woman
                                                         :mod (c7-9 / other))
                                            :ARG2 (c7-16 / around
                                                         :op1 (c7-31 / person
                                                                     :ARG0-of (c7-12 / have-rel-role-91
                                                                                     :ARG1 c7-10
                                                                                     :ARG2 (c7-25 / child))))))
                   :ARG2 (c7-23 / person
                                :name (c7-29 / name
                                             :op1 "Wannaabe")))
       :snt2 (c7-35 / insane
                    :domain (c7-17 / you)
                    :polarity (c7-15 / amr-unknown)
                    :ARG1-of (c7-20 / cause-01
                                    :ARG0 (c7-2 / want-01
                                                :ARG0 (c7-24 / no-one
                                                             :mod (c7-30 / else))
                                                :ARG1 (c7-1 / be-located-at-91
                                                            :ARG1 c7-24
                                                            :ARG2 (c7-14 / around
                                                                         :op1 c7-17))))
                    :snt3 (c7-34 / have-03
                                 :ARG0 (c7-7 / you)
                                 :ARG1 (c7-5 / person
                                             :mod (c7-36 / any)
                                             :ARG0-of (c7-11 / have-rel-role-91
                                                             :ARG1 c7-7
                                                             :ARG2 (c7-28 / friend))
                                             :ARG1-of (c7-27 / hang-out-06
                                                             :ARG2 c7-7
                                                             :ARG1-of (c7-3 / possible-01))
                                             :ARG0-of (c7-18 / try-01
                                                             :ARG1 (c7-13 / heal-01
                                                                          :ARG0 c7-7
                                                                          :ARG1 c7-7))))
                    :snt4 (c7-33 / and
                                 :op1 (c7-19 / get-05
                                             :ARG1 c7-7
                                             :ARG2 (c7-4 / counsel-01
                                                         :ARG1 c7-7))
                                 :op2 (c7-6 / stay-01
                                            :ARG1 c7-7
                                            :location (c7-26 / there)))))

# ::snt You had a lock button.
# ::tokens ["You", "had", "a", "lock", "button", "."]
# ::lemmas ["you", "have", "a", "lock", "button", "."]
(c8-1 / have-03
      :ARG0 (c8-3 / you)
      :ARG1 (c8-0 / button
                  :purpose (c8-2 / lock-01)))

# ::snt Boofrikkinhoo!
# ::tokens ["Boofrikkinhoo", "!"]
# ::lemmas ["Boofrikkinhoo", "!"]
(c9-0 / boofrikkinhoo
      :mode expressive)

# ::snt What a jackass.
# ::tokens ["What", "a", "jackass", "."]
# ::lemmas ["what", "a", "jackass", "."]
(c10-0 / jackass
       :degree (c10-1 / so))

# ::snt of course. once a dick, always a dick.
# ::tokens ["of", "course", ".", "once", "a", "dick", ",", "always", "a", "dick", "."]
# ::lemmas ["of", "course", ".", "once", "a", "dick", ",", "always", "a", "dick", "."]
(c11-2 / have-condition-91
       :ARG1 (c11-5 / dick
                    :time (c11-4 / always))
       :ARG2 (c11-3 / dick
                    :time (c11-0 / once))
       :mod (c11-1 / of-course))

# ::snt Seriously, he's had a difficult time?? smh
# ::tokens ["Seriously", ",", "he", "'s", "had", "a", "difficult", "time", "?", "?", "smh"]
# ::lemmas ["seriously", ",", "he", "be", "have", "a", "difficult", "time", "?", "?", "smh"]
(c12-2 / have-03
       :polarity (c12-1 / amr-unknown)
       :ARG0 (c12-3 / he)
       :ARG1 (c12-4 / time
                    :mod (c12-5 / difficult))
       :ARG2-of (c12-0 / serious-01))

# ::snt That one really hit me in the feels /2 way through - superb!
# ::tokens ["That", "one", "really", "hit", "me", "in", "the", "feels", "/2", "way", "through", "-", "superb", "!"]
# ::lemmas ["that", "one", "really", "hit", "i", "in", "the", "feel", "/2", "way", "through", "-", "superb", "!"]
(c13-5 / hit-01
       :ARG0 (c13-0 / one
                    :mod (c13-8 / that))
       :ARG1 (c13-7 / i)
       :degree (c13-3 / really)
       :manner (c13-10 / through
                       :op1 (c13-9 / thing
                                   :ARG1-of (c13-1 / feel-01)
                                   :ARG1-of (c13-4 / equal-01
                                                   :ARG2 (c13-6 / thing
                                                                :quant 2))))
       :mod (c13-2 / superb
                   :mode expressive))

# ::snt Thats very kind of you Andrew. Cheers man.
# ::tokens ["That", "s", "very", "kind", "of", "you", "Andrew", ".", "Cheers", "man", "."]
# ::lemmas ["that", "s", "very", "kind", "of", "you", "Andrew", ".", "cheer", "man", "."]
(c14-0 / multi-sentence
       :snt1 (c14-2 / say-01
                    :ARG0 (c14-8 / i)
                    :ARG1 (c14-5 / kind-01
                                 :ARG1 (c14-6 / person
                                              :name (c14-1 / name
                                                           :op1 "Andrew"))
                                 :degree (c14-3 / very))
                    :ARG2 c14-6
                    :snt2-of c14-0)
       :ARG0 c14-8
       :ARG1 (c14-7 / cheers)
       :ARG2 (c14-4 / man))

# ::snt You really are a genius when it comes to combining word, thought and morals, David!
# ::tokens ["You", "really", "are", "a", "genius", "when", "it", "comes", "to", "combining", "word", ",", "thought", "and", "morals", ",", "David", "!"]
# ::lemmas ["you", "really", "be", "a", "genius", "when", "it", "come", "to", "combine", "word", ",", "thought", "and", "moral", ",", "David", "!"]
(c15-2 / say-01
       :ARG0 (c15-8 / i)
       :ARG1 (c15-10 / genius
                     :domain (c15-4 / person
                                    :name (c15-0 / name
                                                 :op1 "David"))
                     :degree (c15-3 / really)
                     :topic (c15-5 / combine-01
                                   :ARG1 (c15-6 / word)
                                   :ARG2 (c15-9 / and
                                                :op1 (c15-7 / think-01)
                                                :op2 (c15-1 / moral-02))))
       :ARG2 c15-4)

# ::snt Cheers man
# ::tokens ["Cheers", "man"]
# ::lemmas ["cheer", "man"]
(c16-3 / say-01
       :ARG0 (c16-2 / i)
       :ARG1 (c16-0 / cheers)
       :ARG2 (c16-1 / man))

# ::snt Haha bloody spot on.
# ::tokens ["Haha", "bloody", "spot", "on", "."]
# ::lemmas ["haha", "bloody", "spot", "on", "."]
(c17-2 / spot-on
       :mod (c17-0 / bloody
                   :mode expressive)
       :mod (c17-1 / haha))

# ::snt . . . and I think some wonderful crap out there, too! Most of which has f'all to do with golf!
# ::tokens [".", ".", ".", "and", "I", "think", "some", "wonderful", "crap", "out", "there", ",", "too", "!", "Most", "of", "which", "has", "f'all", "to", "do", "with", "golf", "!"]
# ::lemmas [".", ".", ".", "and", "i", "think", "some", "wonderful", "crap", "out", "there", ",", "too", "!", "most", "of", "which", "have", "f'all", "to", "do", "with", "golf", "!"]
(c18-1 / multi-sentence
       :snt1 (c18-5 / and
                    :op2 (c18-9 / think-01
                                :ARG0 (c18-10 / i)
                                :ARG1 (c18-11 / thing
                                              :ARG1-of (c18-8 / wonderful-03)
                                              :quant (c18-3 / some)
                                              :location (c18-0 / out-there)
                                              :mod (c18-12 / too))))
       :snt2 (c18-6 / have-to-do-with-04
                    :ARG0 (c18-7 / most
                                 :ARG3-of (c18-4 / include-91
                                                 :ARG2 (c18-2 / golf-01
                                                              :ARG1-of c18-6)))
                    :ARG2 (c18-13 / all)))

# ::snt Golf-given strength
# ::tokens ["Golf", "-", "given", "strength"]
# ::lemmas ["golf", "-", "give", "strength"]
(c19-2 / strong-02
       :ARG1-of (c19-0 / give-01
                       :ARG2 (c19-1 / golf)))

# ::snt and I'm not even puffed!
# ::tokens ["and", "I", "'m", "not", "even", "puffed", "!"]
# ::lemmas ["and", "i", "be", "not", "even", "puff", "!"]
(c20-3 / and
       :op2 (c20-1 / puff-01
                   :ARG1 (c20-2 / i)
                   :mod (c20-0 / even)
                   :polarity -))

# ::snt Thanks so much K
# ::tokens ["Thanks", "so", "much", "K"]
# ::lemmas ["thank", "so", "much", "k"]
(c22-3 / say-01
       :ARG0 (c22-5 / i)
       :ARG1 (c22-6 / thank-01
                    :ARG0 c22-5
                    :ARG1 (c22-4 / person
                                 :name (c22-1 / name
                                              :op1 "K"))
                    :degree (c22-2 / much
                                   :degree (c22-0 / so)))
       :ARG2 c22-4)

# ::snt Delighted!
# ::tokens ["Delighted", "!"]
# ::lemmas ["delighted", "!"]
(c23-0 / brilliant-01
       :mode expressive)

# ::snt That makes very happy! Cheers J
# ::tokens ["That", "makes", "very", "happy", "!", "Cheers", "J"]
# ::lemmas ["that", "make", "very", "happy", "!", "Cheers", "J"]
(c24-0 / multi-sentence
       :snt1 (c24-3 / make-02
                    :ARG0 (c24-7 / that)
                    :ARG1 (c24-4 / happy-01
                                 :degree (c24-2 / very)))
       :snt2 (c24-6 / cheers
                    :mod (c24-5 / person
                                :name (c24-1 / name
                                             :op1 "J"))
                    :mode expressive))

# ::snt Another enjoyable and thought provoking read. I look forward to Sunday's column
# ::tokens ["Another", "enjoyable", "and", "thought", "provoking", "read", ".", "I", "look", "forward", "to", "Sunday", "'s", "column"]
# ::lemmas ["another", "enjoyable", "and", "think", "provoke", "read", ".", "i", "look", "forward", "to", "Sunday", "'s", "column"]
(c25-0 / multi-sentence
       :snt1 (c25-2 / read-01
                    :mod (c25-9 / another)
                    :ARG1-of (c25-3 / enjoy-01)
                    :ARG0-of (c25-4 / provoke-01
                                    :ARG1 (c25-7 / think-01)))
       :snt2 (c25-5 / look-forward-03
                    :ARG0 (c25-8 / i)
                    :ARG1 (c25-6 / column
                                 :time (c25-10 / date-entity
                                               :weekday (c25-1 / sunday)))))

# ::snt I all the way through that, thank you David!Now, Im off to do some gardening at Mums - not quite walking but at least its outside
# ::tokens ["I", "all", "the", "way", "through", "that", ",", "thank", "you", "David!Now", ",", "I", "m", "off", "to", "do", "some", "gardening", "at", "Mums", "-", "not", "quite", "walking", "but", "at", "least", "its", "outside"]
# ::lemmas ["i", "all", "the", "way", "through", "that", ",", "thank", "you", "david!now", ",", "i", "m", "off", "to", "do", "some", "gardening", "at", "Mums", "-", "not", "quite", "walk", "but", "at", "least", "its", "outside"]
(c26-11 / multi-sentence
        :snt1 (c26-7 / thank-01
                     :ARG0 (c26-18 / i)
                     :ARG1 (c26-15 / person
                                   :name (c26-14 / name
                                                 :op1 "David"))
                     :extent (c26-6 / all-the-way)
                     :snt2 c26-7
                     :ARG0 c26-18
                     :ARG1 c26-15)
        :snt3 (c26-10 / be-located-at-91
                      :ARG1 (c26-2 / i)
                      :ARG2 (c26-1 / off)
                      :purpose (c26-19 / do-02
                                       :ARG0 c26-2
                                       :ARG1 (c26-8 / garden-01
                                                    :ARG0 c26-2
                                                    :quant (c26-0 / some)
                                                    :location (c26-3 / home
                                                                     :poss c26-15
                                                                     :ARG0-of (c26-17 / have-rel-role-91
                                                                                      :ARG1 c26-2
                                                                                      :ARG2 (c26-4 / mum)))
                                                    :ARG1-of (c26-13 / contrast-01
                                                                     :ARG2 (c26-16 / walk-01
                                                                                   :ARG0 c26-2
                                                                                   :location (c26-9 / outside)
                                                                                   :mod (c26-5 / at-least)
                                                                                   :polarity -)))))
        :time (c26-12 / now))

# ::snt Bloody Marvellous...(bloody genius )
# ::tokens ["Bloody", "Marvellous", "...", "(bloody", "genius", ")"]
# ::lemmas ["Bloody", "Marvellous", "...", "(bloody", "genius", ")"]
(c27-2 / multi-sentence
       :snt1 (c27-1 / brilliant-01
                    :mod (c27-3 / bloody))
       :snt2 (c27-4 / brilliant-01
                    :mod (c27-0 / bloody)))

# ::snt This was so exciting, It was like reading a brilliant book that you couldn't put down, in case you missed something. Well written, well said.
# ::tokens ["This", "was", "so", "exciting", ",", "It", "was", "like", "reading", "a", "brilliant", "book", "that", "you", "could", "n't", "put", "down", ",", "in", "case", "you", "missed", "something", ".", "Well", "written", ",", "well", "said", "."]
# ::lemmas ["this", "be", "so", "exciting", ",", "it", "be", "like", "read", "a", "brilliant", "book", "that", "you", "could", "not", "put", "down", ",", "in", "case", "you", "miss", "something", ".", "well", "write", ",", "well", "say", "."]
(c28-12 / multi-sentence
        :snt1 (c28-15 / excite-01
                      :ARG0 (c28-10 / this)
                      :ARG2-of (c28-7 / have-degree-91
                                      :ARG1 c28-10
                                      :ARG3 (c28-0 / so)
                                      :ARG6 (c28-14 / resemble-01
                                                    :ARG1 c28-10
                                                    :ARG2 (c28-3 / read-01
                                                                 :ARG0 (c28-6 / you)
                                                                 :ARG1 (c28-11 / book
                                                                               :ARG1-of (c28-1 / brilliant-01)
                                                                               :ARG1-of (c28-16 / put-01
                                                                                                :ARG0 c28-6
                                                                                                :ARG2 (c28-18 / down)
                                                                                                :ARG1-of (c28-13 / possible-01
                                                                                                                 :polarity -)
                                                                                                :condition (c28-8 / miss-02
                                                                                                                  :ARG0 c28-6
                                                                                                                  :ARG1 (c28-5 / something))))))))
        :snt2 (c28-9 / and
                     :op1 (c28-17 / write-01
                                  :ARG1-of (c28-2 / well-09))
                     :op2 (c28-4 / say-01
                                 :ARG1-of c28-2)))

# ::snt Ka ching!!
# ::tokens ["Ka", "ching", "!", "!"]
# ::lemmas ["Ka", "ching", "!", "!"]
(c29-0 / ka-ching
       :mode expressive)

# ::snt points and a Kathmandu coupon for $1.75 off selected socks. You've earned it
# ::tokens ["points", "and", "a", "Kathmandu", "coupon", "for", "$", "1.75", "off", "selected", "socks", ".", "You", "'ve", "earned", "it"]
# ::lemmas ["point", "and", "a", "Kathmandu", "coupon", "for", "$", "1.75", "off", "select", "sock", ".", "you", "'ve", "earn", "it"]
(c30-2 / multi-sentence
       :snt1 (c30-11 / and
                     :op1 (c30-8 / point)
                     :op2 (c30-9 / coupon-01
                                 :ARG3 (c30-7 / monetary-quantity
                                              :unit (c30-12 / dollar)
                                              :ARG1-of (c30-10 / include-91
                                                               :ARG2 (c30-4 / sock
                                                                            :ARG1-of (c30-0 / select-01)))
                                              :quant 1.75)
                                 :location (c30-13 / city
                                                   :name (c30-3 / name
                                                                :op1 "Kathmandu"))))
       :snt2 (c30-6 / earn-01
                    :ARG0 (c30-1 / you)
                    :ARG1 (c30-5 / it)))

# ::snt Very glad it does, cheers Jo.
# ::tokens ["Very", "glad", "it", "does", ",", "cheers", "Jo", "."]
# ::lemmas ["very", "glad", "it", "do", ",", "cheer", "Jo", "."]
(c31-3 / cheer-02
       :ARG0 (c31-4 / i)
       :ARG1 (c31-2 / person
                    :name (c31-0 / name
                                 :op1 "Jo"))
       :degree (c31-1 / very))

# ::snt Always nice to read something that brightens my morning, thanks
# ::tokens ["Always", "nice", "to", "read", "something", "that", "brightens", "my", "morning", ",", "thanks"]
# ::lemmas ["always", "nice", "to", "read", "something", "that", "brighten", "my", "morning", ",", "thank"]
(c32-3 / nice-01
       :ARG1 (c32-5 / read-01
                    :ARG1 (c32-4 / something
                                 :ARG0-of (c32-0 / brighten-01
                                                 :ARG1 (c32-2 / morning
                                                              :poss (c32-7 / i)))))
       :time (c32-8 / always)
       :ARG2-of (c32-6 / thank-01
                       :ARG0 c32-7
                       :ARG1 (c32-1 / you)))

# ::snt Oh poor Matt! Would you like some cheese with that WHINE??? Puling mammot.
# ::tokens ["Oh", "poor", "Matt", "!", "Would", "you", "like", "some", "cheese", "with", "that", "WHINE", "?", "?", "?", "Puling", "mammot", "."]
# ::lemmas ["oh", "poor", "Matt", "!", "would", "you", "like", "some", "cheese", "with", "that", "WHINE", "?", "?", "?", "pule", "mammot", "."]
(c34-3 / multi-sentence
       :snt1 (c34-8 / person
                    :name (c34-2 / name
                                 :op1 "Matt")
                    :mod (c34-4 / poor)
                    :mode expressive)
       :snt2 (c34-9 / like-01
                    :ARG0 (c34-1 / you)
                    :ARG1 (c34-10 / cheese
                                  :quant (c34-5 / some)
                                  :accompanier (c34-13 / thing
                                                       :mod (c34-14 / that)
                                                       :ARG1-of (c34-11 / whine-01)))
                    :polarity (c34-6 / amr-unknown)
                    :polarity (c34-12 / amr-unknown))
       :snt3 (c34-7 / mammot
                    :ARG0-of (c34-0 / spoil-01)))

# ::snt Who cares!
# ::tokens ["Who", "cares", "!"]
# ::lemmas ["who", "care", "!"]
(c35-0 / care-01
       :ARG0 (c35-1 / amr-unknown)
       :mode expressive)

# ::snt Did anyone ask Matt about that secret button?
# ::tokens ["Did", "anyone", "ask", "Matt", "about", "that", "secret", "button", "?"]
# ::lemmas ["do", "anyone", "ask", "Matt", "about", "that", "secret", "button", "?"]
(c36-3 / ask-01
       :ARG0 (c36-6 / anyone)
       :ARG1 (c36-0 / button
                    :mod (c36-2 / secret)
                    :mod (c36-7 / that))
       :ARG2 (c36-4 / person
                    :name (c36-1 / name
                                 :op1 "Matt"))
       :polarity (c36-5 / amr-unknown))

# ::snt He thinks he's a victim. Pffffff!!! Lucky you're not in jail son
# ::tokens ["He", "thinks", "he", "'s", "a", "victim", ".", "Pffffff", "!", "!", "!", "Lucky", "you", "'re", "not", "in", "jail", "son"]
# ::lemmas ["he", "think", "he", "be", "a", "victim", ".", "Pffffff", "!", "!", "!", "lucky", "you", "be", "not", "in", "jail", "son"]
(c37-2 / multi-sentence
       :snt1 (c37-10 / think-01
                     :ARG0 (c37-5 / he)
                     :ARG1 (c37-4 / victim
                                  :domain c37-5))
       :snt2 (c37-6 / pffffff
                    :mode expressive)
       :snt3 (c37-7 / lucky
                    :domain (c37-0 / be-located-at-91
                                   :ARG1 (c37-1 / you
                                                :ARG0-of (c37-8 / have-rel-role-91
                                                                :ARG2 (c37-3 / son)))
                                   :ARG2 (c37-9 / jail)
                                   :polarity -)))

# ::snt How you bang somebody in your office and they had to be dragged out? This dude is a lame.
# ::tokens ["How", "you", "bang", "somebody", "in", "your", "office", "and", "they", "had", "to", "be", "dragged", "out", "?", "This", "dude", "is", "a", "lame", "."]
# ::lemmas ["how", "you", "bang", "somebody", "in", "your", "office", "and", "they", "have", "to", "be", "drag", "out", "?", "this", "dude", "be", "a", "lame", "."]
(c38-4 / multi-sentence
       :snt1 (c38-6 / have-manner-91
                    :ARG1 (c38-11 / and
                                  :op1 (c38-2 / bang-04
                                              :ARG0 (c38-3 / you)
                                              :ARG1 (c38-5 / somebody)
                                              :location (c38-0 / office
                                                               :poss c38-3))
                                  :op2 (c38-1 / obligate-01
                                              :ARG1 c38-5
                                              :ARG2 (c38-12 / drag-01
                                                            :ARG1 c38-5
                                                            :direction (c38-13 / out))))
                    :ARG2 (c38-10 / amr-unknown))
       :snt2 (c38-7 / lame
                    :domain (c38-8 / dude
                                   :mod (c38-9 / this))))

# ::snt So HE was the victim?!
# ::tokens ["So", "HE", "was", "the", "victim", "?", "!"]
# ::lemmas ["so", "he", "be", "the", "victim", "?", "!"]
(c39-0 / victim
       :polarity (c39-2 / amr-unknown)
       :domain (c39-1 / he))

# ::snt Nailed it.
# ::tokens ["Nailed", "it", "."]
# ::lemmas ["nail", "it", "."]
(c40-0 / nail-01
       :ARG1 (c40-1 / it))

# ::snt Shock that's he's the one without any contrition. The worst of the worst.
# ::tokens ["Shock", "that", "'s", "he", "'s", "the", "one", "without", "any", "contrition", ".", "The", "worst", "of", "the", "worst", "."]
# ::lemmas ["shock", "that", "be", "he", "be", "the", "one", "without", "any", "contrition", ".", "the", "bad", "of", "the", "bad", "."]
(c41-1 / multi-sentence
       :snt1 (c41-2 / shock-01
                    :ARG0 (c41-7 / contrition
                                 :domain (c41-4 / he)
                                 :polarity -))
       :snt2 (c41-9 / thing
                    :ARG1-of (c41-8 / have-degree-91
                                    :ARG2 (c41-0 / bad-07)
                                    :ARG3 (c41-5 / most))
                    :ARG1-of (c41-3 / have-degree-91
                                    :ARG2 (c41-6 / bad-07)
                                    :ARG3 (c41-10 / most))))

# ::snt No, "Easy Matt"
# ::tokens ["No", ",", "\"", "Easy", "Matt", "\""]
# ::lemmas ["no", ",", "\"", "Easy", "Matt", "\""]
(c42-3 / say-01
       :ARG1 (c42-1 / easy-05
                    :ARG1 (c42-2 / person
                                 :name (c42-0 / name
                                              :op1 "Matt")
                                 :ARG2-of c42-3)))

# ::snt Yeah, everyone with remote control rape locks on their doors might be what you could call low hanging fruit.
# ::tokens ["Yeah", ",", "everyone", "with", "remote", "control", "rape", "locks", "on", "their", "doors", "might", "be", "what", "you", "could", "call", "low", "hanging", "fruit", "."]
# ::lemmas ["yeah", ",", "everyone", "with", "remote", "control", "rape", "lock", "on", "their", "door", "might", "be", "what", "you", "could", "call", "low", "hanging", "fruit", "."]
(c43-5 / possible-01
       :ARG1 (c43-7 / call-01
                    :ARG0 (c43-1 / you)
                    :ARG1 (c43-3 / everyone
                                 :ARG0-of (c43-4 / have-03
                                                 :ARG1 (c43-6 / lock-01
                                                              :ARG1 (c43-2 / rape-01)
                                                              :ARG2 (c43-9 / door
                                                                           :poss c43-3)
                                                              :mod (c43-12 / control
                                                                           :mod (c43-10 / remote)))))
                    :ARG2 (c43-0 / fruit
                                 :ARG1-of (c43-8 / hanging-07
                                                 :degree (c43-11 / low-04)))))

# ::snt Oh ffs.
# ::tokens ["Oh", "ffs", "."]
# ::lemmas ["oh", "ff", "."]
(c44-0 / oh
       :mod (c44-1 / fuck
                   :mode expressive)
       :mode expressive)

# ::snt Well, that *kind of* rhymes with "sleazy dork."
# ::tokens ["Well", ",", "that", "*", "kind", "of", "*", "rhymes", "with", "\"", "sleazy", "dork", ".", "\""]
# ::lemmas ["well", ",", "that", "*", "kind", "of", "*", "rhyme", "with", "\"", "sleazy", "dork", ".", "\""]
(c45-0 / ymes-01
       :ARG1 (c45-4 / that)
       :ARG2 (c45-5 / dork
                    :mod (c45-2 / lazy))
       :degree (c45-1 / kind-of)
       :mod (c45-3 / well))

# ::snt Lol, time to take up knitting.
# ::tokens ["Lol", ",", "time", "to", "take", "up", "knitting", "."]
# ::lemmas ["Lol", ",", "time", "to", "take", "up", "knit", "."]
(c46-2 / time
       :purpose (c46-3 / take-up-30
                       :ARG1 (c46-1 / knit-01))
       :mod (c46-0 / laugh-01
                   :manner (c46-4 / loud)
                   :mode expressive))

# ::snt Im no fan of Matt Lauer, but this headline seems misleading. Hes talking about a land deal in New Zealand.Doesnt mean he deserves sympathy or anything, just a weird headline.
# ::tokens ["I", "m", "no", "fan", "of", "Matt", "Lauer", ",", "but", "this", "headline", "seems", "misleading", ".", "He", "s", "talking", "about", "a", "land", "deal", "in", "New", "Zealand", ".", "Doesnt", "mean", "he", "deserves", "sympathy", "or", "anything", ",", "just", "a", "weird", "headline", "."]
# ::lemmas ["i", "m", "no", "fan", "of", "Matt", "Lauer", ",", "but", "this", "headline", "seem", "misleading", ".", "he", "s", "talk", "about", "a", "land", "deal", "in", "New", "Zealand", ".", "Doesnt", "mean", "he", "deserve", "sympathy", "or", "anything", ",", "just", "a", "weird", "headline", "."]
(c47-13 / multi-sentence
        :snt1 (c47-15 / contrast-01
                      :ARG1 (c47-19 / fan
                                    :domain (c47-24 / i)
                                    :topic (c47-21 / person
                                                   :name (c47-20 / name
                                                                 :op1 "Matt"
                                                                 :op2 "Lauer"))
                                    :polarity -)
                      :ARG2 (c47-0 / seem-01
                                   :ARG1 (c47-7 / mislead-01
                                                :ARG0 (c47-10 / thing
                                                              :ARG2-of (c47-8 / headline-01)
                                                              :mod (c47-17 / this)))))
        :snt2 (c47-25 / talk-01
                      :ARG0 (c47-23 / he)
                      :ARG1 (c47-26 / deal-01
                                    :ARG2 (c47-1 / land)
                                    :location (c47-12 / country
                                                      :name (c47-14 / name
                                                                    :op1 "New"
                                                                    :op2 "Zealand"))))
        :snt3 (c47-18 / mean-01
                      :ARG1 (c47-5 / it)
                      :ARG2 (c47-16 / deserve-01
                                    :ARG0 c47-23
                                    :ARG1 (c47-3 / or
                                                 :op1 (c47-4 / sympathy)
                                                 :op2 (c47-11 / anything)))
                      :ARG1-of (c47-2 / contrast-01
                                      :ARG2 c47-10
                                      :ARG2-of (c47-6 / headline-01)
                                      :mod (c47-22 / weird)
                                      :mod (c47-9 / just))
                      :polarity -))

# ::snt Why are we interviewing this dude? We should be interviewing the victims not propping up a monster.
# ::tokens ["Why", "are", "we", "interviewing", "this", "dude", "?", "We", "should", "be", "interviewing", "the", "victims", "not", "propping", "up", "a", "monster", "."]
# ::lemmas ["why", "be", "we", "interview", "this", "dude", "?", "we", "should", "be", "interview", "the", "victim", "not", "prop", "up", "a", "monster", "."]
(c48-0 / multi-sentence
       :snt1 (c48-8 / cause-01
                    :ARG0 (c48-11 / amr-unknown)
                    :ARG1 (c48-10 / interview-01
                                  :ARG0 (c48-7 / we)
                                  :ARG1 (c48-12 / dude
                                                :mod (c48-9 / this))))
       :snt2 (c48-2 / recommend-01
                    :ARG1 (c48-1 / interview-01
                                 :ARG0 (c48-6 / we)
                                 :ARG1 (c48-3 / victim)
                                 :ARG1-of (c48-13 / instead-of-91
                                                  :ARG2 (c48-5 / prop-up-01
                                                               :ARG0 c48-6
                                                               :ARG1 (c48-4 / monster))))))

# ::snt An "easy mark" because he was blatantly guilty of assault and harassment...
# ::tokens ["An", "\"", "easy", "mark", "\"", "because", "he", "was", "blatantly", "guilty", "of", "assault", "and", "harassment", "..."]
# ::lemmas ["an", "\"", "easy", "mark", "\"", "because", "he", "be", "blatantly", "guilty", "of", "assault", "and", "harassment", "..."]
(c49-4 / cause-01
       :ARG0 (c49-8 / guilty-01
                    :ARG1 (c49-3 / he)
                    :ARG2 (c49-7 / and
                                 :op1 (c49-6 / assault-01
                                             :ARG0 c49-3)
                                 :op2 (c49-5 / harass-01
                                             :ARG0 c49-3))
                    :manner (c49-0 / blatant))
       :ARG1 (c49-1 / mark
                    :ARG1-of (c49-2 / easy-05)))

# ::snt Let me make it simple for you so that you can understand. In the big circle called Idiots are racists, sexual harassers and fact deniers. . I suggest you read or learn to read. Meanwhile, off my timeline. Blocked.
# ::tokens ["Let", "me", "make", "it", "simple", "for", "you", "so", "that", "you", "can", "understand", ".", "In", "the", "big", "circle", "called", "Idiots", "are", "racists", ",", "sexual", "harassers", "and", "fact", "deniers", ".", ".", "I", "suggest", "you", "read", "or", "learn", "to", "read", ".", "Meanwhile", ",", "off", "my", "timeline", ".", "Blocked", "."]
# ::lemmas ["let", "i", "make", "it", "simple", "for", "you", "so", "that", "you", "can", "understand", ".", "in", "the", "big", "circle", "call", "Idiots", "be", "racist", ",", "sexual", "harasser", "and", "fact", "denier", ".", ".", "i", "suggest", "you", "read", "or", "learn", "to", "read", ".", "meanwhile", ",", "off", "my", "timeline", ".", "block", "."]
(c50-18 / multi-sentence
        :snt1 (c50-3 / let-01
                     :ARG0 (c50-9 / you)
                     :ARG1 (c50-11 / make-02
                                   :ARG0 (c50-27 / i)
                                   :ARG1 (c50-1 / simple-02
                                                :ARG1 (c50-10 / it)
                                                :beneficiary (c50-14 / you)
                                                :purpose (c50-26 / possible-01
                                                                 :ARG1 (c50-23 / understand-01
                                                                               :ARG0 c50-14))))
                     :mode imperative)
        :snt2 (c50-13 / and
                      :op1 (c50-25 / racist)
                      :op2 (c50-12 / harass-01
                                   :ARG1 (c50-7 / sex))
                      :op3 (c50-28 / denier
                                   :topic (c50-24 / fact))
                      :domain (c50-19 / person
                                      :ARG1-of (c50-16 / include-91
                                                       :ARG2 (c50-21 / circle
                                                                     :mod (c50-17 / big)
                                                                     :consist-of (c50-0 / idiot)))))
        :snt3 (c50-5 / suggest-01
                     :ARG0 (c50-22 / i)
                     :ARG1 (c50-8 / or
                                  :op1 (c50-4 / read-01
                                              :ARG0 (c50-6 / you))
                                  :op2 (c50-15 / learn-01
                                               :ARG0 c50-6
                                               :ARG1 (c50-20 / read-01
                                                             :ARG0 c50-6))))
        :snt4 (c50-2 / blocked-01))
