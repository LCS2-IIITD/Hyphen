# ::snt Harvey Weinstein is a monster... But he did bring us the Classic Kill Bill. Check out the version Kill Bill here. You've never seen it like this!
# ::tokens ["Harvey", "Weinstein", "is", "a", "monster", "...", "But", "he", "did", "bring", "us", "the", "Classic", "Kill", "Bill", ".", "Check", "out", "the", "version", "Kill", "Bill", "here", ".", "You", "'ve", "never", "seen", "it", "like", "this", "!"]
# ::lemmas ["Harvey", "Weinstein", "be", "a", "monster", "...", "but", "he", "do", "bring", "we", "the", "Classic", "Kill", "Bill", ".", "check", "out", "the", "version", "Kill", "Bill", "here", ".", "you", "'ve", "never", "see", "it", "like", "this", "!"]
(c1-10 / multi-sentence
       :snt1 (c1-3 / monster
                   :domain (c1-16 / person
                                  :name (c1-13 / name
                                               :op1 "Harvey"
                                               :op2 "Weinstein")))
       :snt2 (c1-12 / contrast-01
                    :ARG2 (c1-9 / bring-01
                                :ARG0 c1-16
                                :ARG1 (c1-6 / game
                                            :name (c1-11 / name
                                                         :op1 "Classic"
                                                         :op2 "Kill"
                                                         :op3 "Bill"))
                                :ARG2 (c1-18 / we)))
       :snt3 (c1-8 / check-out-05
                   :ARG0 (c1-1 / you)
                   :ARG1 (c1-2 / version
                               :name (c1-17 / name
                                            :op1 "Kill"
                                            :op2 "Bill"))
                   :location (c1-4 / here)
                   :mode imperative)
       :snt4 (c1-0 / see-01
                   :ARG0 (c1-7 / you)
                   :ARG1 (c1-14 / resemble-01
                                :ARG1 c1-2
                                :ARG2 (c1-5 / this))
                   :time (c1-15 / ever)
                   :polarity -))

# ::snt apparently it seems that nobody has a sense of hunour here
# ::tokens ["apparently", "it", "seems", "that", "nobody", "has", "a", "sense", "of", "hunour", "here"]
# ::lemmas ["apparently", "it", "seem", "that", "nobody", "have", "a", "sense", "of", "hunour", "here"]
(c2-2 / seem-01
      :ARG1 (c2-0 / sense-01
                  :ARG0 (c2-1 / nobody)
                  :ARG1 (c2-3 / hunour)
                  :location (c2-4 / here))
      :ARG1-of (c2-5 / appear-02))

# ::snt You seem to me like someone who needs to get a sense of humor.
# ::tokens ["You", "seem", "to", "me", "like", "someone", "who", "needs", "to", "get", "a", "sense", "of", "humor", "."]
# ::lemmas ["you", "seem", "to", "i", "like", "someone", "who", "need", "to", "get", "a", "sense", "of", "humor", "."]
(c3-3 / seem-01
      :ARG1 (c3-4 / resemble-01
                  :ARG1 (c3-1 / you)
                  :ARG2 (c3-0 / someone
                              :ARG0-of (c3-2 / need-01
                                             :ARG1 (c3-7 / sense-01
                                                         :ARG0 c3-0
                                                         :ARG1 (c3-5 / humor)))))
      :ARG2 (c3-6 / i))

# ::snt You seem to me like the kind of person that always tries to find something to whine about
# ::tokens ["You", "seem", "to", "me", "like", "the", "kind", "of", "person", "that", "always", "tries", "to", "find", "something", "to", "whine", "about"]
# ::lemmas ["you", "seem", "to", "i", "like", "the", "kind", "of", "person", "that", "always", "try", "to", "find", "something", "to", "whine", "about"]
(c4-3 / seem-01
      :ARG1 (c4-4 / resemble-01
                  :ARG1 (c4-2 / you)
                  :ARG2 (c4-7 / person
                              :mod (c4-6 / kind)
                              :ARG0-of (c4-10 / try-01
                                              :ARG1 (c4-0 / find-01
                                                          :ARG0 c4-7
                                                          :ARG1 (c4-1 / something
                                                                      :ARG1-of (c4-8 / whine-01
                                                                                     :ARG0 c4-7)))
                                              :time (c4-5 / always))))
      :ARG2 (c4-9 / i))

# ::snt V v v good
# ::tokens ["V", "v", "v", "good"]
# ::lemmas ["v", "v", "v", "good"]
(c5-3 / and
      :op1 (c5-1 / v
                 :op1 (c5-2 / v))
      :op2 (c5-4 / v
                 :op1 (c5-0 / good-02)))

# ::snt She's quite a lovely role model for young women ... "Jennifer Lawrence made people uncomfortable with on-set nudity" ...
# ::tokens ["She", "'s", "quite", "a", "lovely", "role", "model", "for", "young", "women", "...", "\"", "Jennifer", "Lawrence", "made", "people", "uncomfortable", "with", "on", "-", "set", "nudity", "\"", "..."]
# ::lemmas ["she", "be", "quite", "a", "lovely", "role", "model", "for", "young", "woman", "...", "\"", "Jennifer", "Lawrence", "make", "people", "uncomfortable", "with", "on", "-", "set", "nudity", "\"", "..."]
(c6-2 / multi-sentence
      :snt1 (c6-6 / role-model
                  :domain (c6-4 / she)
                  :beneficiary (c6-11 / woman
                                      :mod (c6-1 / young))
                  :mod (c6-8 / lovely
                             :degree (c6-13 / quite)))
      :snt2 (c6-7 / make-02
                  :ARG0 (c6-9 / person
                              :name (c6-3 / name
                                          :op1 "Jennifer"
                                          :op2 "Lawrence"))
                  :ARG1 (c6-12 / comfortable-02
                               :ARG0 (c6-10 / nude-01
                                            :ARG0 c6-9
                                            :location (c6-0 / on-set))
                               :ARG1 (c6-5 / person)
                               :polarity -)))

# ::snt It would be great if Ms. Lawrence could keep her feet off the furniture.
# ::tokens ["It", "would", "be", "great", "if", "Ms.", "Lawrence", "could", "keep", "her", "feet", "off", "the", "furniture", "."]
# ::lemmas ["it", "would", "be", "great", "if", "Ms.", "Lawrence", "could", "keep", "her", "foot", "off", "the", "furniture", "."]
(c7-7 / great
      :domain (c7-4 / possible-01
                    :ARG1 (c7-5 / keep-04
                                :ARG0 (c7-3 / person
                                            :part (c7-0 / foot)
                                            :name (c7-2 / name
                                                        :op1 "Ms."
                                                        :op2 "Lawrence"))
                                :ARG1 c7-0
                                :ARG2 (c7-1 / off
                                            :op1 (c7-6 / furniture)))))

# ::snt Shes always so circumspect!
# ::tokens ["She", "s", "always", "so", "circumspect", "!"]
# ::lemmas ["she", "s", "always", "so", "circumspect", "!"]
(c8-1 / circumspect
      :domain (c8-2 / he)
      :time (c8-3 / always)
      :degree (c8-0 / so)
      :mode expressive)

# ::snt So he's a big hemorrhoid or something.
# ::tokens ["So", "he", "'s", "a", "big", "hemorrhoid", "or", "something", "."]
# ::lemmas ["so", "he", "be", "a", "big", "hemorrhoid", "or", "something", "."]
(c9-5 / infer-01
      :ARG1 (c9-0 / or
                  :op1 (c9-3 / hemorrhoid
                             :mod (c9-1 / big)
                             :domain (c9-4 / he))
                  :op2 (c9-2 / something)))
