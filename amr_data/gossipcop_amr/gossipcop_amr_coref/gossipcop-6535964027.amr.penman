# ::snt While Im sure she had a say on some parts of the upcoming nuptials, Id imagine most moments, minute details of the event are being planned by the palace. Its a royal event, so hard to be a bridezilla, Id guess. Besides no one would upset the Queen before the big day.
# ::tokens ["While", "I", "m", "sure", "she", "had", "a", "say", "on", "some", "parts", "of", "the", "upcoming", "nuptials", ",", "I", "d", "imagine", "most", "moments", ",", "minute", "details", "of", "the", "event", "are", "being", "planned", "by", "the", "palace", ".", "Its", "a", "royal", "event", ",", "so", "hard", "to", "be", "a", "bridezilla", ",", "I", "d", "guess", ".", "Besides", "no", "one", "would", "upset", "the", "Queen", "before", "the", "big", "day", "."]
# ::lemmas ["while", "i", "m", "sure", "she", "have", "a", "say", "on", "some", "part", "of", "the", "upcoming", "nuptial", ",", "i", "d", "imagine", "most", "moment", ",", "minute", "detail", "of", "the", "event", "be", "be", "plan", "by", "the", "palace", ".", "its", "a", "royal", "event", ",", "so", "hard", "to", "be", "a", "bridezilla", ",", "I", "d", "guess", ".", "besides", "no", "one", "would", "upset", "the", "Queen", "before", "the", "big", "day", "."]
(c1-13 / multi-sentence
       :snt1 (c1-23 / imagine-01
                    :ARG0 (c1-7 / i)
                    :ARG1 (c1-22 / plan-01
                                 :ARG0 (c1-14 / palace)
                                 :ARG1 (c1-21 / event
                                              :mod (c1-20 / royal)
                                              :ARG1-of (c1-8 / hard-02
                                                             :degree (c1-0 / so))))
                    :concession (c1-6 / sure-02
                                      :ARG0 c1-7
                                      :ARG1 (c1-4 / say-01
                                                  :ARG0 (c1-19 / she)
                                                  :ARG1 (c1-3 / part
                                                              :part-of (c1-18 / nuptial
                                                                              :mod (c1-17 / upcoming))
                                                              :quant (c1-1 / some)))))
       :snt2 (c1-10 / guess-01
                    :ARG0 (c1-11 / i)
                    :ARG1 (c1-16 / upset-01
                                 :ARG0 (c1-15 / no-one)
                                 :ARG1 (c1-9 / queen)
                                 :time (c1-12 / before
                                              :op1 (c1-24 / day
                                                          :mod (c1-2 / big))))
                    :mod (c1-5 / besides)))

# ::snt Its a joke, sweetie
# ::tokens ["Its", "a", "joke", ",", "sweetie"]
# ::lemmas ["its", "a", "joke", ",", "sweetie"]
(c2-3 / say-01
      :ARG1 (c2-1 / joke-01
                  :domain (c2-2 / it))
      :ARG2 (c2-0 / sweetie))

# ::snt You do realise its not am in Windsor UK right?
# ::tokens ["You", "do", "realise", "its", "not", "am", "in", "Windsor", "UK", "right", "?"]
# ::lemmas ["you", "do", "realise", "its", "not", "am", "in", "Windsor", "UK", "right", "?"]
(c3-3 / realize-01
      :ARG0 (c3-1 / you)
      :ARG1 (c3-0 / be-located-at-91
                  :ARG1 (c3-6 / it)
                  :ARG2 (c3-5 / city
                              :name (c3-2 / name
                                          :op1 "Windsor")
                              :part-of (c3-8 / country
                                             :name (c3-4 / name
                                                         :op1 "UK")))
                  :polarity -)
      :ARG1-of (c3-7 / request-confirmation-91
                     :ARG2 c3-1))

# ::snt Bridge... proof read.... seriously
# ::tokens ["Bridge", "...", "proof", "read", "....", "seriously"]
# ::lemmas ["bridge", "...", "proof", "read", "....", "seriously"]
(c4-3 / say-01
      :ARG1 (c4-4 / read-01
                  :ARG1 (c4-6 / thing
                              :ARG0-of (c4-5 / prove-01))
                  :ARG2-of (c4-0 / serious-01))
      :ARG2 (c4-2 / person
                  :name (c4-1 / name
                              :op1 "Bridge")))

# ::snt The truth is finally starting to come out!!!
# ::tokens ["The", "truth", "is", "finally", "starting", "to", "come", "out", "!", "!", "!"]
# ::lemmas ["the", "truth", "be", "finally", "start", "to", "come", "out", "!", "!", "!"]
(c5-3 / start-01
      :ARG1 (c5-0 / come-out-09
                  :ARG1 (c5-2 / truth))
      :time (c5-1 / final)
      :mode expressive)

# ::snt Every bride has the right to be a bridezilla...stop stirring the pot that isn't there
# ::tokens ["Every", "bride", "has", "the", "right", "to", "be", "a", "bridezilla", "...", "stop", "stirring", "the", "pot", "that", "is", "n't", "there"]
# ::lemmas ["every", "bride", "have", "the", "right", "to", "be", "a", "bridezilla", "...", "stop", "stir", "the", "pot", "that", "be", "not", "there"]
(c6-6 / right-05
      :ARG1 (c6-1 / bride
                  :mod (c6-7 / every))
      :ARG2 (c6-8 / person
                  :name (c6-3 / name
                              :op1 "Blair")
                  :domain c6-1)
      :ARG0-of (c6-9 / cause-01
                     :ARG1 (c6-5 / stop-01
                                 :ARG0 (c6-2 / you)
                                 :ARG1 (c6-0 / stir-01
                                             :ARG0 c6-2
                                             :ARG1 (c6-4 / pot
                                                         :location (c6-10 / there
                                                                          :polarity -)))
                                 :mode imperative)))

# ::snt Toi toi toi you lot! Hope you have an amazing night! Sending you all love!
# ::tokens ["Toi", "toi", "toi", "you", "lot", "!", "Hope", "you", "have", "an", "amazing", "night", "!", "Sending", "you", "all", "love", "!"]
# ::lemmas ["toi", "toi", "toi", "you", "lot", "!", "hope", "you", "have", "an", "amazing", "night", "!", "send", "you", "all", "love", "!"]
(c7-2 / multi-sentence
      :snt1 (c7-4 / say-01
                  :ARG1 (c7-10 / toi-toi)
                  :ARG2 (c7-7 / lot))
      :snt2 (c7-6 / hope-01
                  :ARG0 (c7-9 / i)
                  :ARG1 (c7-8 / have-03
                              :ARG0 (c7-1 / you)
                              :ARG1 (c7-3 / night
                                          :ARG0-of (c7-5 / amaze-01))))
      :snt3 (c7-0 / send-01
                  :ARG1 (c7-13 / love-01)
                  :ARG2 (c7-11 / you
                               :mod (c7-12 / all))))

# ::snt Toi toi toi for tonight!
# ::tokens ["Toi", "toi", "toi", "for", "tonight", "!"]
# ::lemmas ["toi", "toi", "toi", "for", "tonight", "!"]
(c8-3 / toi-toi
      :time (c8-0 / date-entity
                  :dayperiod (c8-1 / night)
                  :mod (c8-2 / today)))

# ::snt Gotta figure out how to get to Basel for this...
# ::tokens ["Got", "ta", "figure", "out", "how", "to", "get", "to", "Basel", "for", "this", "..."]
# ::lemmas ["got", "to", "figure", "out", "how", "to", "get", "to", "Basel", "for", "this", "..."]
(c9-1 / need-01
      :ARG0 (c9-4 / i)
      :ARG1 (c9-0 / figure-out-05
                  :ARG0 c9-4
                  :ARG1 (c9-5 / thing
                              :manner-of (c9-6 / get-05
                                               :ARG1 c9-4
                                               :ARG2 (c9-3 / city
                                                           :name (c9-2 / name
                                                                       :op1 "Basel"))
                                               :purpose (c9-7 / this)))))
