# ::snt Laughter can only go so far!
# ::tokens ["Laughter", "can", "only", "go", "so", "far", "!"]
# ::lemmas ["laughter", "can", "only", "go", "so", "far", "!"]
(c1-3 / possible-01
      :ARG1 (c1-5 / go-01
                  :ARG1 (c1-4 / laugh-01)
                  :ARG2 (c1-0 / far
                              :degree (c1-2 / so))
                  :mod (c1-1 / only)))

# ::snt They look like sister &amp; brother
# ::tokens ["They", "look", "like", "sister", "&", "amp", ";", "brother"]
# ::lemmas ["they", "look", "like", "sister", "&", "amp", ";", "brother"]
(c2-4 / look-02
      :ARG0 (c2-7 / they)
      :ARG1 (c2-8 / and
                  :op1 (c2-5 / person
                             :ARG0-of (c2-3 / have-rel-role-91
                                            :ARG2 (c2-2 / sister)))
                  :op2 (c2-1 / person
                             :ARG0-of (c2-6 / have-rel-role-91
                                            :ARG2 (c2-0 / brother)))))

# ::snt didn't even know they were an item
# ::tokens ["did", "n't", "even", "know", "they", "were", "an", "item"]
# ::lemmas ["do", "not", "even", "know", "they", "be", "an", "item"]
(c3-1 / know-01
      :ARG1 (c3-2 / item
                  :domain (c3-3 / they))
      :mod (c3-0 / even)
      :polarity -)

# ::snt No...when why. I'm confused
# ::tokens ["No", "...", "when", "why", ".", "I", "'m", "confused"]
# ::lemmas ["no", "...", "when", "why", ".", "i", "be", "confused"]
(c4-1 / multi-sentence
      :snt1 (c4-0 / no)
      :snt2 (c4-4 / amr-unknown
                  :ARG0-of (c4-2 / cause-01))
      :snt3 (c4-5 / confuse-01
                  :ARG1 (c4-3 / i)))

# ::snt My bae is single again!Eric, call me.
# ::tokens ["My", "bae", "is", "single", "again!Eric", ",", "call", "me", "."]
# ::lemmas ["my", "bae", "be", "single", "again!Eric", ",", "call", "i", "."]
(c5-1 / multi-sentence
      :snt1 (c5-3 / single-03
                  :ARG1 (c5-7 / person
                              :ARG0-of (c5-6 / have-rel-role-91
                                             :ARG1 (c5-9 / i)
                                             :ARG2 (c5-0 / bae)))
                  :mod (c5-10 / again))
      :snt2 (c5-8 / call-02
                  :ARG0 (c5-2 / person
                              :name (c5-4 / name
                                          :op1 "Eric"))
                  :ARG1 (c5-5 / i)
                  :mode imperative))

# ::snt l love and but not together
# ::tokens ["l", "love", "and", "but", "not", "together"]
# ::lemmas ["l", "love", "and", "but", "not", "together"]
(c6-0 / contrast-01
      :ARG1 (c6-1 / love-01
                  :ARG0 (c6-2 / i))
      :ARG2 (c6-3 / together
                  :domain c6-2
                  :polarity -))

# ::snt Back in with a chance you beauty!!!
# ::tokens ["Back", "in", "with", "a", "chance", "you", "beauty", "!", "!", "!"]
# ::lemmas ["back", "in", "with", "a", "chance", "you", "beauty", "!", "!", "!"]
(c7-1 / say-01
      :ARG0 (c7-4 / i)
      :ARG1 (c7-0 / back-02
                  :ARG1 (c7-2 / beauty)
                  :accompanier (c7-3 / chance-02
                                     :ARG0 c7-4
                                     :ARG1 c7-2)
                  :mode imperative)
      :ARG2 c7-2)

# ::snt Oh well
# ::tokens ["Oh", "well"]
# ::lemmas ["oh", "well"]
(c8-0 / oh-well
      :mode expressive)

# ::snt they didn't break up, it's not possible
# ::tokens ["they", "did", "n't", "break", "up", ",", "it", "'s", "not", "possible"]
# ::lemmas ["they", "do", "not", "break", "up", ",", "it", "be", "not", "possible"]
(c9-0 / break-up-08
      :ARG1 (c9-2 / they)
      :ARG1-of (c9-1 / possible-01
                     :polarity -)
      :polarity -)

# ::snt hold the fucking phone....
# ::tokens ["hold", "the", "fucking", "phone", "...."]
# ::lemmas ["hold", "the", "fucking", "phone", "...."]
(c10-1 / hold-01
       :ARG0 (c10-3 / you)
       :ARG1 (c10-2 / phone
                    :mod (c10-0 / fucking
                                :mode expressive))
       :mode imperative)
