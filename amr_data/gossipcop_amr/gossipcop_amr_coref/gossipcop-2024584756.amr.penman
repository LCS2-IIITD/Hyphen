# ::snt Things Bond is:1) ruthlessly competent ) British AF ) oversexed. Get those things right and I dont care about details like race or gender.
# ::tokens ["Things", "Bond", "is:1", ")", "ruthlessly", "competent", ")", "British", "AF", ")", "oversexed", ".", "Get", "those", "things", "right", "and", "I", "do", "nt", "care", "about", "details", "like", "race", "or", "gender", "."]
# ::lemmas ["Things", "Bond", "is:1", ")", "ruthlessly", "competent", ")", "British", "AF", ")", "oversexed", ".", "get", "those", "thing", "right", "and", "i", "do", "not", "care", "about", "detail", "like", "race", "or", "gender", "."]
(c1-12 / multi-sentence
       :snt1 (c1-8 / and
                   :op1 (c1-16 / competent-01
                               :ARG1 (c1-20 / person
                                            :name (c1-18 / name
                                                         :op1 "Bond"))
                               :manner (c1-19 / ruthless)
                               :li 1)
                   :op2 (c1-3 / oversex-00
                              :ARG1 (c1-13 / person
                                           :mod (c1-10 / country
                                                       :name (c1-14 / name
                                                                    :op1 "Great"
                                                                    :op2 "Britain"))
                                           :ARG0-of (c1-4 / have-org-role-91
                                                          :ARG1 (c1-5 / military
                                                                      :name (c1-21 / name
                                                                                   :op1 "British"
                                                                                   :op2 "AF"))))))
       :snt2 (c1-6 / and
                   :op1 (c1-9 / get-04
                              :ARG1 (c1-2 / right-06
                                          :ARG1 (c1-7 / thing
                                                      :mod (c1-17 / that))))
                   :op2 (c1-0 / care-01
                              :ARG0 (c1-22 / i)
                              :ARG1 (c1-23 / detail
                                           :example (c1-11 / or
                                                           :op1 (c1-15 / race)
                                                           :op2 (c1-1 / gender)))
                              :polarity -)))

# ::snt Hell yeah!!!!
# ::tokens ["Hell", "yeah", "!", "!", "!", "!"]
# ::lemmas ["hell", "yeah", "!", "!", "!", "!"]
(c2-0 / yeah
      :mod (c2-1 / hell)
      :mode expressive)

# ::snt Robin Wright as Felix Leiter
# ::tokens ["Robin", "Wright", "as", "Felix", "Leiter"]
# ::lemmas ["Robin", "Wright", "as", "Felix", "Leiter"]
(c3-2 / person
      :name (c3-0 / name
                  :op1 "Robin"
                  :op2 "Wright")
      :prep-as (c3-3 / person
                     :name (c3-1 / name
                                 :op1 "Felix"
                                 :op2 "Leiter")))

# ::snt Look, I don't disagree that Mirren would be a great choice. I just want more Judy Dench M because she was by far the superior M.
# ::tokens ["Look", ",", "I", "do", "n't", "disagree", "that", "Mirren", "would", "be", "a", "great", "choice", ".", "I", "just", "want", "more", "Judy", "Dench", "M", "because", "she", "was", "by", "far", "the", "superior", "M."]
# ::lemmas ["look", ",", "i", "do", "not", "disagree", "that", "Mirren", "would", "be", "a", "great", "choice", ".", "i", "just", "want", "more", "Judy", "Dench", "M", "because", "she", "be", "by", "far", "the", "superior", "M."]
(c4-2 / multi-sentence
      :snt1 (c4-16 / disagree-01
                   :ARG0 (c4-14 / i)
                   :ARG2 (c4-11 / choose-01
                                :ARG1 (c4-8 / person
                                            :name (c4-3 / name
                                                        :op1 "Mirren"))
                                :mod (c4-15 / great))
                   :mod (c4-9 / look-01
                              :ARG0 (c4-1 / you)
                              :mode imperative)
                   :polarity -)
      :snt2 (c4-12 / want-01
                   :ARG0 (c4-5 / i)
                   :ARG1 (c4-4 / person
                               :name (c4-7 / name
                                           :op1 "Judy"
                                           :op2 "Dench"
                                           :op3 "M")
                               :mod (c4-10 / more))
                   :mod (c4-13 / just)
                   :ARG1-of (c4-17 / cause-01
                                   :ARG0 (c4-6 / superior-01
                                               :ARG1 c4-4
                                               :ARG2 c4-8
                                               :degree (c4-0 / far)))))

# ::snt Don't care, want her back.
# ::tokens ["Do", "n't", "care", ",", "want", "her", "back", "."]
# ::lemmas ["do", "not", "care", ",", "want", "she", "back", "."]
(c5-5 / and
      :op1 (c5-2 / care-01
                 :ARG0 (c5-4 / i)
                 :polarity -)
      :op2 (c5-3 / want-01
                 :ARG0 c5-4
                 :ARG1 (c5-1 / she
                             :direction (c5-0 / back))))

# ::snt Judy. Dench. For. M.
# ::tokens ["Judy", ".", "Dench", ".", "For", ".", "M."]
# ::lemmas ["Judy", ".", "Dench", ".", "for", ".", "M."]
(c6-1 / multi-sentence
      :snt1 (c6-4 / person
                  :name (c6-0 / name
                              :op1 "Judy"
                              :op2 "Dench"))
      :snt2 (c6-2 / person
                  :name (c6-3 / name
                              :op1 "M.")))

# ::snt Letitia Wright for Q
# ::tokens ["Letitia", "Wright", "for", "Q"]
# ::lemmas ["Letitia", "Wright", "for", "Q"]
(c7-3 / person
      :name (c7-1 / name
                  :op1 "Letitia"
                  :op2 "Wright")
      :ARG0-of (c7-2 / have-org-role-91
                     :ARG2 (c7-0 / magazine
                                 :name (c7-4 / name
                                             :op1 "Q"))))

# ::snt While I would be all for that, if that hill is to steep there is always the Ed Brubaker, , great series Velvet, that would be an awesome fit.
# ::tokens ["While", "I", "would", "be", "all", "for", "that", ",", "if", "that", "hill", "is", "to", "steep", "there", "is", "always", "the", "Ed", "Brubaker", ",", ",", "great", "series", "Velvet", ",", "that", "would", "be", "an", "awesome", "fit", "."]
# ::lemmas ["while", "i", "would", "be", "all", "for", "that", ",", "if", "that", "hill", "be", "to", "steep", "there", "be", "always", "the", "Ed", "Brubaker", ",", ",", "great", "series", "Velvet", ",", "that", "would", "be", "an", "awesome", "fit", "."]
(c8-5 / have-concession-91
      :ARG1 (c8-0 / fit-06
                  :ARG1 (c8-7 / work-of-art
                              :name (c8-3 / name
                                          :op1 "Ed"
                                          :op2 "Brubaker")
                              :ARG1-of (c8-2 / mean-01
                                             :ARG2 (c8-4 / series
                                                         :name (c8-6 / name
                                                                     :op1 "Velvet")
                                                         :mod (c8-13 / great))))
                  :ARG0-of (c8-12 / awe-01)
                  :time (c8-11 / always)
                  :condition (c8-1 / steep-01
                                   :ARG1 (c8-9 / hill
                                               :mod (c8-10 / that))))
      :ARG2 (c8-15 / support-01
                   :ARG0 (c8-14 / i)
                   :ARG1 c8-10
                   :degree (c8-8 / all)))

# ::snt I hope they wait until November/December to announce that lineup. I'd like to use the flames of the fanboi rage to help reduce my heating bill this winter.
# ::tokens ["I", "hope", "they", "wait", "until", "November", "/", "December", "to", "announce", "that", "lineup", ".", "I", "'d", "like", "to", "use", "the", "flames", "of", "the", "fanboi", "rage", "to", "help", "reduce", "my", "heating", "bill", "this", "winter", "."]
# ::lemmas ["i", "hope", "they", "wait", "until", "November", "/", "December", "to", "announce", "that", "lineup", ".", "i", "would", "like", "to", "use", "the", "flame", "of", "the", "fanboi", "rage", "to", "help", "reduce", "my", "heating", "bill", "this", "winter", "."]
(c9-10 / multi-sentence
       :snt1 (c9-5 / hope-01
                   :ARG0 (c9-21 / i)
                   :ARG1 (c9-19 / wait-01
                                :ARG1 (c9-7 / they)
                                :ARG2 (c9-6 / announce-01
                                            :ARG0 c9-7
                                            :ARG1 (c9-0 / lineup
                                                        :mod (c9-14 / that)))
                                :time (c9-15 / until
                                             :op1 (c9-23 / date-entity
                                                         :month 11)
                                             :op2 (c9-13 / date-entity
                                                         :month 12))))
       :snt2 (c9-8 / like-02
                   :ARG0 (c9-3 / i)
                   :ARG1 (c9-12 / use-01
                                :ARG0 c9-3
                                :ARG1 (c9-16 / flame
                                             :mod (c9-17 / rage-02
                                                         :mod (c9-18 / fanboi)))
                                :ARG2 (c9-20 / help-01
                                             :ARG0 c9-3
                                             :ARG1 (c9-2 / reduce-01
                                                         :ARG1 (c9-9 / bill-01
                                                                     :ARG2 c9-3
                                                                     :ARG3 (c9-4 / heat-01))
                                                         :time (c9-11 / date-entity
                                                                      :season (c9-1 / winter
                                                                                    :mod (c9-22 / this))))))))

# ::snt s li verdades
# ::tokens ["s", "li", "verdades"]
# ::lemmas ["s", "li", "verdade"]
(c10-0 / verdade
       :li "s")

# ::snt Este momento teu
# ::tokens ["Este", "momento", "teu"]
# ::lemmas ["Este", "momento", "teu"]
(c11-1 / moment
       :mod (c11-0 / eh
                   :mode expressive)
       :mod (c11-2 / teu))

# ::snt Mums have shots for days . Most times those shots have no comebacks !
# ::tokens ["Mums", "have", "shots", "for", "days", ".", "Most", "times", "those", "shots", "have", "no", "comebacks", "!"]
# ::lemmas ["mum", "have", "shot", "for", "days", ".", "most", "time", "those", "shot", "have", "no", "comeback", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-4 / have-03
                    :ARG0 (c12-3 / mum)
                    :ARG1 (c12-2 / shoot-02)
                    :duration (c12-11 / multiple
                                      :op1 (c12-9 / temporal-quantity
                                                  :unit (c12-10 / day)
                                                  :quant 1)))
       :snt2 (c12-7 / have-03
                    :ARG0 (c12-0 / shoot-02
                                 :mod (c12-12 / that))
                    :ARG1 (c12-6 / comeback)
                    :frequency (c12-8 / time
                                      :mod (c12-5 / most))
                    :polarity -))

# ::snt Right! Just know we were not the same after that jab!
# ::tokens ["Right", "!", "Just", "know", "we", "were", "not", "the", "same", "after", "that", "jab", "!"]
# ::lemmas ["right", "!", "just", "know", "we", "be", "not", "the", "same", "after", "that", "jab", "!"]
(c13-0 / multi-sentence
       :snt1 (c13-2 / right-06
                    :mode expressive)
       :snt2 (c13-3 / know-01
                    :ARG1 (c13-1 / same-01
                                 :ARG1 (c13-4 / we)
                                 :time (c13-7 / after
                                              :op1 (c13-5 / jab-01
                                                          :mod (c13-6 / that)))
                                 :polarity -)
                    :mod (c13-8 / just)))

# ::snt Me when she included the numbers I was done! The rest of the movie was watched in silence
# ::tokens ["Me", "when", "she", "included", "the", "numbers", "I", "was", "done", "!", "The", "rest", "of", "the", "movie", "was", "watched", "in", "silence"]
# ::lemmas ["i", "when", "she", "include", "the", "number", "i", "be", "do", "!", "the", "rest", "of", "the", "movie", "be", "watch", "in", "silence"]
(c14-2 / multi-sentence
       :snt1 (c14-8 / i
                    :time (c14-4 / include-01
                                 :ARG0 (c14-3 / she)
                                 :ARG1 (c14-1 / number)
                                 :ARG2 (c14-9 / i)))
       :snt2 (c14-7 / watch-01
                    :ARG1 (c14-5 / rest
                                 :part-of (c14-6 / movie))
                    :manner (c14-0 / silence)))

# ::snt lmaoooo I'd cry
# ::tokens ["lmaoooo", "I", "'d", "cry"]
# ::lemmas ["lmaoooo", "i", "would", "cry"]
(c15-0 / cry-02
       :ARG0 (c15-2 / i)
       :mod (c15-1 / fucking
                   :mode expressive)
       :mode expressive)

# ::snt Painful
# ::tokens ["Painful"]
# ::lemmas ["painful"]
(c16-0 / pain-01)

# ::snt I'd be down
# ::tokens ["I", "'d", "be", "down"]
# ::lemmas ["i", "would", "be", "down"]
(c17-0 / down-01
       :ARG1 (c17-1 / i))

# ::snt please
# ::tokens ["please"]
# ::lemmas ["please"]
(c18-0 / please
       :polite +)

# ::snt realising cate blanchett is in /5 of these is more exposing than i intended
# ::tokens ["realising", "cate", "blanchett", "is", "in", "/5", "of", "these", "is", "more", "exposing", "than", "i", "intended"]
# ::lemmas ["realise", "cate", "blanchett", "be", "in", "/5", "of", "these", "be", "more", "exposing", "than", "i", "intend"]
(c19-3 / realize-01
       :ARG0 (c19-7 / i)
       :ARG1 (c19-4 / expose-01
                    :ARG0 (c19-2 / include-91
                                 :ARG1 (c19-6 / person
                                              :name (c19-0 / name
                                                           :op1 "Cate"
                                                           :op2 "Blanchett"))
                                 :ARG2 (c19-8 / this)
                                 :ARG3 "1/5")
                    :ARG2-of (c19-5 / have-degree-91
                                    :ARG1 c19-2
                                    :ARG3 (c19-1 / more)
                                    :ARG4 (c19-9 / intend-01
                                                 :ARG0 c19-7))))

# ::snt The BFG?
# ::tokens ["The", "BFG", "?"]
# ::lemmas ["the", "BFG", "?"]
(c20-1 / publication
       :name (c20-0 / name
                    :op1 "BFG")
       :polarity (c20-2 / amr-unknown))

# ::snt Matilda
# ::tokens ["Matilda"]
# ::lemmas ["Matilda"]
(c21-1 / person
       :name (c21-0 / name
                    :op1 "Matilda"))

# ::snt The leap year
# ::tokens ["The", "leap", "year"]
# ::lemmas ["The", "leap", "year"]
(c24-0 / year
       :mod (c24-1 / leap-01))

# ::snt ...
# ::tokens ["..."]
# ::lemmas ["..."]
(c26-0 / amr-empty)

# ::snt Drishyam
# ::tokens ["Drishyam"]
# ::lemmas ["Drishyam"]
(c27-1 / person
       :name (c27-0 / name
                    :op1 "Drishyam"))

# ::snt -_-
# ::tokens ["-_-"]
# ::lemmas ["-_-"]
(c28-0 / emoticon
       :value "_-")

# ::snt The Shape Of Water
# ::tokens ["The", "Shape", "Of", "Water"]
# ::lemmas ["The", "Shape", "Of", "Water"]
(c30-1 / shape
       :mod (c30-0 / water))

# ::snt Same here boi...the cast was like good but the movie was drrry....
# ::tokens ["Same", "here", "boi", "...", "the", "cast", "was", "like", "good", "but", "the", "movie", "was", "drrry", "...."]
# ::lemmas ["same", "here", "boi", "...", "the", "cast", "be", "like", "good", "but", "the", "movie", "be", "drrry", "...."]
(c34-1 / multi-sentence
       :snt1 (c34-3 / same-01
                    :location (c34-5 / here))
       :snt2 (c34-0 / say-01
                    :ARG0 (c34-9 / i)
                    :ARG1 (c34-8 / contrast-01
                                 :ARG1 (c34-12 / cast-02
                                               :ARG1-of (c34-4 / resemble-01
                                                               :ARG2 (c34-10 / good-02)))
                                 :ARG2 (c34-11 / drrry
                                               :domain (c34-6 / movie)))
                    :ARG2 (c34-7 / person
                                 :name (c34-2 / name
                                              :op1 "boi"))))

# ::snt I kept on dozing and rewinding smh
# ::tokens ["I", "kept", "on", "dozing", "and", "rewinding", "smh"]
# ::lemmas ["i", "keep", "on", "doze", "and", "rewinde", "smh"]
(c35-2 / keep-02
       :ARG0 (c35-3 / i)
       :ARG1 (c35-4 / and
                    :op1 (c35-5 / doze-01
                                :ARG0 c35-3)
                    :op2 (c35-1 / rewinding-06
                                :ARG0 c35-3
                                :ARG1 (c35-0 / smh))))

# ::snt OMG MEE TOO!!!!
# ::tokens ["OMG", "MEE", "TOO", "!", "!", "!", "!"]
# ::lemmas ["OMG", "MEE", "TOO", "!", "!", "!", "!"]
(c38-0 / please
       :mode expressive)

# ::snt Horrible asalu great cast ni spoil chesadu
# ::tokens ["Horrible", "asalu", "great", "cast", "ni", "spoil", "chesadu"]
# ::lemmas ["horrible", "asalu", "great", "cast", "ni", "spoil", "chesadu"]
(c39-6 / and
       :op1 (c39-5 / cast
                   :mod (c39-7 / great)
                   :mod (c39-3 / horrible)
                   :location (c39-8 / country
                                    :name (c39-1 / name
                                                 :op1 "Asalu")))
       :op2 (c39-2 / spoil-01
                   :ARG1 (c39-0 / film
                                :name (c39-4 / name
                                             :op1 "Chesadu"))))

# ::snt Kukka rod
# ::tokens ["Kukka", "rod"]
# ::lemmas ["Kukka", "rod"]
(c40-0 / rod
       :mod (c40-1 / kukka))

# ::snt Abbo rihanna hacking skills...awkwafina robbing skills...mindy jewellery skills abbbbo
# ::tokens ["Abbo", "rihanna", "hacking", "skills", "...", "awkwafina", "robbing", "skills", "...", "mindy", "jewellery", "skills", "abbbbo"]
# ::lemmas ["Abbo", "rihanna", "hack", "skill", "...", "awkwafina", "robbing", "skill", "...", "mindy", "jewellery", "skill", "abbbbo"]
(c41-10 / and
        :op1 (c41-3 / skill
                    :mod (c41-5 / hack-04)
                    :mod (c41-6 / person
                                :name (c41-1 / name
                                             :op1 "Abbo"
                                             :op2 "Rihanna")))
        :op2 (c41-0 / skill
                    :mod (c41-4 / rob-01)
                    :mod c41-6
                    :name (c41-7 / name
                                 :op1 "awkwafina"))
        :op3 (c41-11 / skill
                     :mod (c41-8 / jewel
                                 :mod (c41-2 / mind))
                     :mod c41-6)
        :op4 (c41-9 / abbbbo))

# ::snt D printer tho Zirconium material use chesi necklace print cheyadam ane idea ela vachindo hatsoff asala.
# ::tokens ["D", "printer", "tho", "Zirconium", "material", "use", "chesi", "necklace", "print", "cheyadam", "ane", "idea", "ela", "vachindo", "hatsoff", "asala", "."]
# ::lemmas ["d", "printer", "tho", "Zirconium", "material", "use", "chesi", "necklace", "print", "cheyadam", "ane", "idea", "ela", "vachindo", "hatsoff", "asala", "."]
(c42-1 / multi-sentence
       :snt1 (c42-8 / print-01
                    :instrument (c42-2 / product
                                       :name (c42-0 / name
                                                    :op1 "D"))
                    :concession (c42-13 / use-01
                                        :ARG0 (c42-7 / material
                                                     :mod (c42-5 / zirconium))
                                        :ARG1 (c42-12 / product
                                                      :name (c42-9 / name
                                                                   :op1 "Chesi"
                                                                   :op2 " necklace"))))
       :snt2 (c42-4 / and
                    :op1 (c42-10 / print-01
                                 :ARG1 (c42-3 / string-entity
                                              :value "cheyadam"))
                    :op2 (c42-11 / idea
                                 :mod (c42-6 / ela))))

# ::snt Como Danny Ocean esta muerto? Ya empezamos mal con esta pelcula
# ::tokens ["Como", "Danny", "Ocean", "esta", "muerto", "?", "Ya", "empezamos", "mal", "con", "esta", "pelcula"]
# ::lemmas ["Como", "Danny", "Ocean", "esta", "muerto", "?", "ya", "empezamo", "mal", "con", "esta", "pelcula"]
(c43-1 / multi-sentence
       :snt1 (c43-3 / say-01
                    :ARG1 (c43-9 / como
                                 :op1 (c43-5 / esta
                                             :poss (c43-7 / person
                                                          :name (c43-2 / name
                                                                       :op1 "Danny"
                                                                       :op2 "Ocean")
                                                          :ARG2-of c43-3))))
       :snt2 (c43-10 / empezamos-01
                     :ARG0 (c43-0 / you)
                     :ARG1 (c43-6 / mal
                                  :prep-with (c43-8 / esta
                                                    :op1 (c43-4 / pelcula)))))

# ::snt might have been the worst kept secret in a movie since coming back to life in .
# ::tokens ["might", "have", "been", "the", "worst", "kept", "secret", "in", "a", "movie", "since", "coming", "back", "to", "life", "in", "."]
# ::lemmas ["might", "have", "be", "the", "bad", "keep", "secret", "in", "a", "movie", "since", "come", "back", "to", "life", "in", "."]
(c44-6 / possible-01
       :ARG1 (c44-3 / secret
                    :ARG1-of (c44-5 / keep-01
                                    :ARG1-of (c44-4 / have-degree-91
                                                    :ARG2 (c44-1 / bad-07)
                                                    :ARG3 (c44-2 / most)))
                    :location (c44-7 / movie)
                    :time (c44-0 / since
                                 :op1 (c44-9 / come-01
                                             :ARG4 (c44-8 / life)
                                             :direction (c44-10 / back)))))

# ::snt I was about minutes into the movie when I realized they did to leave room for a trilogy.
# ::tokens ["I", "was", "about", "minutes", "into", "the", "movie", "when", "I", "realized", "they", "did", "to", "leave", "room", "for", "a", "trilogy", "."]
# ::lemmas ["i", "be", "about", "minutes", "into", "the", "movie", "when", "i", "realize", "they", "do", "to", "leave", "room", "for", "a", "trilogy", "."]
(c45-0 / be-temporally-at-91
       :ARG1 (c45-7 / i)
       :ARG2 (c45-2 / into
                    :op1 (c45-1 / movie)
                    :duration (c45-8 / about
                                     :op1 (c45-6 / temporal-quantity
                                                 :unit (c45-4 / minute)
                                                 :quant 1)))
       :time (c45-3 / realize-01
                    :ARG0 c45-7
                    :ARG1 (c45-10 / do-02
                                  :ARG0 (c45-12 / they)
                                  :ARG1 (c45-5 / leave-14
                                               :ARG0 c45-12
                                               :ARG1 (c45-11 / room)
                                               :ARG2 (c45-9 / trilogy)))))

# ::snt You killin me
# ::tokens ["You", "killin", "me"]
# ::lemmas ["you", "killin", "i"]
(c46-1 / kill-01
       :ARG0 (c46-0 / you)
       :ARG1 (c46-2 / i))

# ::snt Second of all, my name is a reference of what I must have on my forehead to the general human population
# ::tokens ["Second", "of", "all", ",", "my", "name", "is", "a", "reference", "of", "what", "I", "must", "have", "on", "my", "forehead", "to", "the", "general", "human", "population"]
# ::lemmas ["Second", "of", "all", ",", "my", "name", "be", "a", "reference", "of", "what", "i", "must", "have", "on", "my", "forehead", "to", "the", "general", "human", "population"]
(c47-3 / refer-03
       :ARG0 (c47-2 / name
                    :poss (c47-7 / i
                                 :part (c47-0 / forehead)))
       :ARG1 (c47-8 / thing
                    :ARG1-of (c47-4 / have-03
                                    :ARG0 c47-7
                                    :location c47-0
                                    :ARG1-of (c47-1 / obligate-01)))
       :ARG2 (c47-5 / population
                    :mod (c47-6 / human)
                    :ARG1-of (c47-9 / general-02))
       :li 2)

# ::snt can we not come at all types of crazy first and foremost
# ::tokens ["can", "we", "not", "come", "at", "all", "types", "of", "crazy", "first", "and", "foremost"]
# ::lemmas ["can", "we", "not", "come", "at", "all", "type", "of", "crazy", "first", "and", "foremost"]
(c48-3 / possible-01
       :ARG1 (c48-4 / come-01
                    :ARG1 (c48-5 / we)
                    :ARG4 (c48-6 / type
                                 :mod (c48-7 / crazy-03)
                                 :mod (c48-2 / at-all)))
       :ord (c48-0 / ordinal-entity
                   :value 1)
       :mod (c48-1 / foremost)
       :polarity -)

# ::snt Rihanna tambm tava um espetculo
# ::tokens ["Rihanna", "tambm", "tava", "um", "espetculo"]
# ::lemmas ["Rihanna", "tambm", "tava", "um", "espetculo"]
(c49-3 / tava-00
       :ARG0 (c49-2 / person
                    :name (c49-0 / name
                                 :op1 "Rihanna"))
       :ARG1 (c49-1 / espetculo))

# ::snt And like theres the obvious, stop letting guys who are dicks be in your movies and then theres the kinda overlooked story of how the production was less than safe. I saw it, paid money for it, but like... kinda not great feelings about it on those two grounds.
# ::tokens ["And", "like", "there", "s", "the", "obvious", ",", "stop", "letting", "guys", "who", "are", "dicks", "be", "in", "your", "movies", "and", "then", "there", "s", "the", "kinda", "overlooked", "story", "of", "how", "the", "production", "was", "less", "than", "safe", ".", "I", "saw", "it", ",", "paid", "money", "for", "it", ",", "but", "like", "...", "kinda", "not", "great", "feelings", "about", "it", "on", "those", "two", "grounds", "."]
# ::lemmas ["and", "like", "there", "s", "the", "obvious", ",", "stop", "let", "guy", "who", "be", "dick", "be", "in", "your", "movie", "and", "then", "there", "s", "the", "kinda", "overlook", "story", "of", "how", "the", "production", "be", "less", "than", "safe", ".", "i", "see", "it", ",", "pay", "money", "for", "it", ",", "but", "like", "...", "kinda", "not", "great", "feeling", "about", "it", "on", "those", "two", "ground", "."]
(c50-19 / multi-sentence
        :snt1 (c50-13 / and
                      :op2 (c50-26 / resemble-01
                                   :ARG1 (c50-4 / obvious-01
                                                :ARG1 (c50-12 / and
                                                              :op1 (c50-0 / stop-01
                                                                          :ARG0 (c50-6 / you)
                                                                          :ARG1 (c50-1 / let-01
                                                                                       :ARG0 c50-6
                                                                                       :ARG1 (c50-29 / dick
                                                                                                     :location (c50-8 / movie
                                                                                                                      :poss c50-6)))
                                                                          :mode imperative)
                                                              :op2 (c50-5 / story
                                                                          :ARG1-of (c50-18 / overlook-01
                                                                                           :degree (c50-9 / kind-of))
                                                                          :topic (c50-10 / have-degree-91
                                                                                         :ARG1 (c50-27 / produce-01)
                                                                                         :ARG2 (c50-3 / safe-01
                                                                                                      :ARG1 c50-27)
                                                                                         :ARG3 (c50-16 / less)))))))
        :snt2 (c50-21 / contrast-01
                      :ARG1 (c50-11 / and
                                    :op1 (c50-25 / see-01
                                                 :ARG0 (c50-28 / i)
                                                 :ARG1 (c50-7 / it))
                                    :op2 (c50-20 / pay-01
                                                 :ARG0 c50-28
                                                 :ARG1 (c50-23 / money)
                                                 :ARG3 c50-7))
                      :ARG2 (c50-24 / feel-01
                                    :ARG0 c50-28
                                    :ARG1 (c50-14 / great)
                                    :ARG1-of (c50-17 / cause-01
                                                     :ARG0 (c50-2 / ground
                                                                  :mod (c50-15 / that)
                                                                  :quant 2))
                                    :degree (c50-22 / kind-of)
                                    :polarity -)))
