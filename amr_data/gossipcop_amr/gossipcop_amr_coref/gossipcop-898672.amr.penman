# ::snt Ive never seen a single episode of GOT...
# ::tokens ["I", "ve", "never", "seen", "a", "single", "episode", "of", "GOT", "..."]
# ::lemmas ["i", "ve", "never", "see", "a", "single", "episode", "of", "GOT", "..."]
(c1-3 / see-01
      :ARG0 (c1-5 / i)
      :ARG1 (c1-4 / episode
                  :ARG1-of (c1-0 / single-02)
                  :part-of (c1-1 / broadcast-program
                                 :name (c1-2 / name
                                             :op1 "GBS")))
      :time (c1-6 / ever)
      :polarity -)

# ::snt No but production could take til Aug so it might happen.
# ::tokens ["No", "but", "production", "could", "take", "til", "Aug", "so", "it", "might", "happen", "."]
# ::lemmas ["no", "but", "production", "could", "take", "til", "Aug", "so", "it", "might", "happen", "."]
(c2-1 / possible-01
      :ARG1 (c2-4 / take-10
                  :ARG0 (c2-0 / produce-01)
                  :ARG1 (c2-6 / until
                              :op1 (c2-5 / date-entity
                                         :month 8))
                  :ARG0-of (c2-2 / cause-01
                                 :ARG1 (c2-3 / possible-01
                                             :ARG1 c2-0))))

# ::snt I appreciate the development to make sure it'll be amazing. But I dun wanna wait a year and a half. It was just getting good
# ::tokens ["I", "appreciate", "the", "development", "to", "make", "sure", "it", "'ll", "be", "amazing", ".", "But", "I", "dun", "wanna", "wait", "a", "year", "and", "a", "half", ".", "It", "was", "just", "getting", "good"]
# ::lemmas ["i", "appreciate", "the", "development", "to", "make", "sure", "it", "'ll", "be", "amazing", ".", "but", "i", "dun", "wanna", "wait", "a", "year", "and", "a", "half", ".", "it", "be", "just", "get", "good"]
(c3-2 / multi-sentence
      :snt1 (c3-11 / appreciate-02
                   :ARG0 (c3-10 / i)
                   :ARG1 (c3-13 / develop-02
                                :purpose (c3-5 / ensure-01
                                               :ARG0 c3-10
                                               :ARG1 (c3-12 / amaze-01
                                                            :ARG0 (c3-4 / it)))))
      :snt2 (c3-7 / contrast-01
                  :ARG2 (c3-8 / want-01
                              :ARG0 (c3-15 / i)
                              :ARG1 (c3-6 / wait-01
                                          :ARG1 c3-15
                                          :duration (c3-9 / temporal-quantity
                                                          :unit (c3-1 / year)
                                                          :quant 1.5))
                              :polarity -))
      :snt3 (c3-3 / get-03
                  :ARG1 (c3-0 / it)
                  :ARG2 (c3-14 / good-02
                               :ARG1 c3-0)
                  :mod (c3-16 / just)))

# ::snt Is that confirmed?
# ::tokens ["Is", "that", "confirmed", "?"]
# ::lemmas ["be", "that", "confirm", "?"]
(c4-0 / confirm-01
      :polarity (c4-2 / amr-unknown)
      :ARG1 (c4-1 / that))

# ::snt The show will be lit, with lots of twist and turns .
# ::tokens ["The", "show", "will", "be", "lit", ",", "with", "lots", "of", "twist", "and", "turns", "."]
# ::lemmas ["the", "show", "will", "be", "light", ",", "with", "lot", "of", "twist", "and", "turn", "."]
(c5-2 / lit-01
      :ARG1 (c5-0 / show-04
                  :ARG0-of (c5-1 / have-03
                                 :ARG1 (c5-4 / and
                                             :op1 (c5-3 / twist-01)
                                             :op2 (c5-6 / turn-01)
                                             :quant (c5-5 / lot)))))

# ::snt Goose bumps
# ::tokens ["Goose", "bumps"]
# ::lemmas ["goose", "bump"]
(c6-1 / bump
      :mod (c6-0 / goose))

# ::snt It's gonna be epic!!!!!...
# ::tokens ["It", "'s", "gon", "na", "be", "epic", "!", "!", "!", "!", "!", "..."]
# ::lemmas ["it", "be", "going", "to", "be", "epic", "!", "!", "!", "!", "!", "..."]
(c7-0 / epic
      :domain (c7-1 / it))

# ::snt Lmao.. Some ppl had trouble with how many armies came to the battlefield for hobbit, for all that hyped we expected more
# ::tokens ["Lmao", "..", "Some", "ppl", "had", "trouble", "with", "how", "many", "armies", "came", "to", "the", "battlefield", "for", "hobbit", ",", "for", "all", "that", "hyped", "we", "expected", "more"]
# ::lemmas ["Lmao", "..", "some", "ppl", "have", "trouble", "with", "how", "many", "army", "come", "to", "the", "battlefield", "for", "hobbit", ",", "for", "all", "that", "hype", "we", "expect", "more"]
(c8-6 / and
      :op1 (c8-1 / laugh-01
                 :ARG0 (c8-19 / i)
                 :manner (c8-8 / loud)
                 :mode expressive)
      :op2 (c8-3 / have-trouble-04
                 :ARG0 (c8-16 / person
                              :mod (c8-0 / some)
                              :ARG0-of (c8-18 / have-org-role-91
                                              :ARG2 (c8-12 / ppl)))
                 :ARG1 (c8-5 / army
                             :ARG1-of (c8-13 / come-01
                                             :ARG4 (c8-10 / battlefield)
                                             :purpose (c8-2 / hobbit)))
                 :ARG1-of (c8-9 / cause-01
                                :ARG0 (c8-15 / expect-01
                                             :ARG0 (c8-17 / we)
                                             :ARG1 (c8-11 / more)
                                             :concession (c8-4 / all
                                                               :op1 (c8-14 / hype-01
                                                                           :ARG1 (c8-7 / that)))))))

# ::snt ... Only going to do this marathon a month to the main release
# ::tokens ["...", "Only", "going", "to", "do", "this", "marathon", "a", "month", "to", "the", "main", "release"]
# ::lemmas ["...", "only", "go", "to", "do", "this", "marathon", "a", "month", "to", "the", "main", "release"]
(c9-7 / do-02
      :ARG0 (c9-5 / i)
      :ARG1 (c9-1 / marathon
                  :mod (c9-4 / this))
      :duration (c9-6 / temporal-quantity
                      :unit (c9-3 / month)
                      :quant 1)
      :purpose (c9-2 / release-01
                     :mod (c9-8 / main))
      :mod (c9-0 / only))

# ::snt Lol. But the armies lived up to the expectation, for me sha. GOT is taking forever. Started all over, presently in season
# ::tokens ["Lol", ".", "But", "the", "armies", "lived", "up", "to", "the", "expectation", ",", "for", "me", "sha", ".", "GOT", "is", "taking", "forever", ".", "Started", "all", "over", ",", "presently", "in", "season"]
# ::lemmas ["Lol", ".", "but", "the", "army", "live", "up", "to", "the", "expectation", ",", "for", "i", "sha", ".", "GOT", "be", "take", "forever", ".", "start", "all", "over", ",", "presently", "in", "season"]
(c10-12 / multi-sentence
        :snt1 (c10-1 / laugh-01
                     :ARG0 (c10-18 / i)
                     :manner (c10-11 / loud)
                     :mode expressive)
        :snt2 (c10-13 / contrast-01
                      :ARG2 (c10-6 / live-up-04
                                   :ARG0 (c10-9 / army)
                                   :ARG1 (c10-16 / expect-01))
                      :ARG1-of (c10-3 / opine-01
                                      :ARG0 (c10-5 / i)))
        :snt3 (c10-8 / take-10
                     :ARG0 (c10-10 / get-03
                                   :ARG1 (c10-2 / game
                                                :name (c10-15 / name
                                                              :op1 "GOT")))
                     :ARG2 (c10-14 / forever))
        :snt4 (c10-0 / start-01
                     :location (c10-7 / all-over)
                     :time (c10-17 / present)
                     :time (c10-4 / season)))

# ::snt You all should stop all this hype so we can enjoy it when it comes.. I am beginning to have a feeling it might be below expectations.. You know like the five army hobbit Ish
# ::tokens ["You", "all", "should", "stop", "all", "this", "hype", "so", "we", "can", "enjoy", "it", "when", "it", "comes", "..", "I", "am", "beginning", "to", "have", "a", "feeling", "it", "might", "be", "below", "expectations", "..", "You", "know", "like", "the", "five", "army", "hobbit", "Ish"]
# ::lemmas ["you", "all", "should", "stop", "all", "this", "hype", "so", "we", "can", "enjoy", "it", "when", "it", "come", "..", "i", "be", "begin", "to", "have", "a", "feeling", "it", "might", "be", "below", "expectation", "..", "you", "know", "like", "the", "five", "army", "hobbit", "Ish"]
(c11-14 / multi-sentence
        :snt1 (c11-19 / recommend-01
                      :ARG1 (c11-0 / stop-01
                                   :ARG0 (c11-4 / you
                                                :mod (c11-10 / all))
                                   :ARG1 (c11-5 / hype-01
                                                :mod (c11-9 / this)
                                                :mod (c11-8 / all))
                                   :purpose (c11-21 / possible-01
                                                    :ARG1 (c11-20 / enjoy-01
                                                                  :ARG0 (c11-22 / we
                                                                                :mod (c11-7 / all))
                                                                  :ARG1 c11-5
                                                                  :time (c11-16 / come-01
                                                                                :ARG1 c11-5))))
                      :ARG2 c11-4)
        :snt2 (c11-13 / begin-01
                      :ARG0 (c11-24 / i)
                      :ARG1 (c11-17 / feel-02
                                    :ARG0 c11-24
                                    :ARG1 (c11-15 / possible-01
                                                  :ARG1 (c11-1 / below
                                                               :op1 (c11-11 / expect-01
                                                                            :ARG1 c11-5)))))
        :snt3 (c11-6 / know-01
                     :ARG0 (c11-12 / you)
                     :ARG1 (c11-23 / hobbit
                                   :mod (c11-25 / army)
                                   :ARG1-of (c11-3 / resemble-01
                                                   :ARG2 (c11-2 / person
                                                                :name (c11-18 / name
                                                                              :op1 "Ish")))
                                   :quant 5)))

# ::snt It would be cool we could all dress up nice have fancy dinner and see the show and feel fancy and shit
# ::tokens ["It", "would", "be", "cool", "we", "could", "all", "dress", "up", "nice", "have", "fancy", "dinner", "and", "see", "the", "show", "and", "feel", "fancy", "and", "shit"]
# ::lemmas ["it", "would", "be", "cool", "we", "could", "all", "dress", "up", "nice", "have", "fancy", "dinner", "and", "see", "the", "show", "and", "feel", "fancy", "and", "shit"]
(c13-9 / cool-04
       :ARG1 (c13-5 / possible-01
                    :ARG1 (c13-12 / and
                                  :op1 (c13-13 / dress-up-02
                                               :ARG0 (c13-8 / we
                                                            :mod (c13-11 / all))
                                               :ARG1-of (c13-2 / nice-01))
                                  :op2 (c13-4 / have-06
                                              :ARG0 c13-8
                                              :ARG1 (c13-10 / dinner
                                                            :mod (c13-0 / fancy)))
                                  :op3 (c13-3 / see-01
                                              :ARG0 c13-8
                                              :ARG1 (c13-1 / show-04))
                                  :op4 (c13-6 / feel-01
                                              :ARG0 c13-8
                                              :ARG1 (c13-7 / fancy-02
                                                           :ARG1 c13-8))
                                  :op5 (c13-14 / shit-01
                                               :ARG0 c13-8))))

# ::snt I am...out
# ::tokens ["I", "am", "...", "out"]
# ::lemmas ["i", "be", "...", "out"]
(c14-0 / out-05
       :ARG1 (c14-1 / i))

# ::snt Its San Jose at the SAP center September , pm tickets starting at $46 plus tax
# ::tokens ["Its", "San", "Jose", "at", "the", "SAP", "center", "September", ",", "pm", "tickets", "starting", "at", "$", "46", "plus", "tax"]
# ::lemmas ["its", "San", "Jose", "at", "the", "SAP", "center", "September", ",", "pm", "ticket", "start", "at", "$", "46", "plus", "tax"]
(c15-1 / be-located-at-91
       :ARG1 (c15-5 / event)
       :ARG2 (c15-9 / city
                    :name (c15-2 / name
                                 :op1 "San"
                                 :op2 "Jose"))
       :location (c15-14 / center
                         :mod (c15-0 / organization
                                     :name (c15-6 / name
                                                  :op1 "SAP")))
       :time (c15-13 / date-entity
                     :month 9
                     :time "16:00")
       :ARG1-of (c15-4 / start-01
                       :ARG2 (c15-12 / ticket
                                     :ARG1-of (c15-11 / cost-01
                                                      :ARG2 (c15-7 / plus
                                                                   :op1 (c15-3 / monetary-quantity
                                                                               :unit (c15-10 / dollar)
                                                                               :quant 46)
                                                                   :op2 (c15-8 / tax-01))))))

# ::snt Haha Im serious I need a head count
# ::tokens ["Haha", "I", "m", "serious", "I", "need", "a", "head", "count"]
# ::lemmas ["haha", "i", "m", "serious", "i", "need", "a", "head", "count"]
(c16-1 / serious-01
       :ARG1 (c16-5 / i)
       :mod (c16-2 / haha)
       :ARG0-of (c16-3 / cause-01
                       :ARG1 (c16-0 / need-01
                                    :ARG0 c16-5
                                    :ARG1 (c16-6 / count-01
                                                 :ARG1 (c16-4 / head)))))

# ::snt Hey whos up for the game of thrones concert
# ::tokens ["Hey", "who", "s", "up", "for", "the", "game", "of", "thrones", "concert"]
# ::lemmas ["hey", "who", "s", "up", "for", "the", "game", "of", "throne", "concert"]
(c17-2 / whos-up-00
       :mod (c17-1 / hey
                   :mode expressive)
       :purpose (c17-3 / concert
                       :mod (c17-4 / game
                                   :name (c17-0 / name
                                                :op1 "Game"
                                                :op2 "of"
                                                :op3 "Thrones")))
       :mode expressive)

# ::snt Bro.... WTF am I to do until then?
# ::tokens ["Bro", "....", "WTF", "am", "I", "to", "do", "until", "then", "?"]
# ::lemmas ["bro", "....", "WTF", "be", "i", "to", "do", "until", "then", "?"]
(c19-2 / say-01
       :ARG1 (c19-6 / do-02
                    :ARG0 (c19-4 / i)
                    :ARG1 (c19-5 / amr-unknown)
                    :time (c19-7 / until
                                 :op1 (c19-3 / then))
                    :mod (c19-0 / fuck
                                :mode expressive))
       :ARG2 (c19-1 / bro))

# ::snt not ready I AM NOT READY!
# ::tokens ["not", "ready", "I", "AM", "NOT", "READY", "!"]
# ::lemmas ["not", "ready", "i", "be", "not", "ready", "!"]
(c20-3 / and
       :op1 (c20-0 / ready-02
                   :ARG1 (c20-2 / i)
                   :polarity -)
       :op2 (c20-1 / read-01
                   :ARG0 c20-2
                   :polarity -))

# ::snt No mames guey
# ::tokens ["No", "mames", "guey"]
# ::lemmas ["no", "mame", "guey"]
(c22-1 / person
       :name (c22-0 / name
                    :op1 "James"
                    :op2 "Guey")
       :polarity -)

# ::snt I only listen to my bed and my momma im sorry!
# ::tokens ["I", "only", "listen", "to", "my", "bed", "and", "my", "momma", "i", "m", "sorry", "!"]
# ::lemmas ["i", "only", "listen", "to", "my", "bed", "and", "my", "momma", "i", "m", "sorry", "!"]
(c23-8 / and
       :op1 (c23-5 / listen-01
                   :ARG0 (c23-7 / i)
                   :ARG1 (c23-1 / bed
                                :poss c23-7)
                   :mod (c23-0 / only))
       :op2 (c23-3 / sorry-01
                   :ARG1 c23-7
                   :ARG2 (c23-6 / person
                                :ARG0-of (c23-4 / have-rel-role-91
                                                :ARG1 c23-7
                                                :ARG2 (c23-2 / mom)))))

# ::snt He doesnt listen to anyone lol
# ::tokens ["He", "does", "nt", "listen", "to", "anyone", "lol"]
# ::lemmas ["he", "do", "not", "listen", "to", "anyone", "lol"]
(c24-2 / listen-01
       :ARG0 (c24-0 / he)
       :ARG1 (c24-3 / anyone)
       :ARG2-of (c24-4 / laugh-01
                       :ARG0 c24-0
                       :manner (c24-1 / loud))
       :polarity -)

# ::snt Dude wed watch it when it was getting dark too. It was dope.
# ::tokens ["Dude", "we", "d", "watch", "it", "when", "it", "was", "getting", "dark", "too", ".", "It", "was", "dope", "."]
# ::lemmas ["dude", "we", "d", "watch", "it", "when", "it", "be", "get", "dark", "too", ".", "it", "be", "dope", "."]
(c25-0 / multi-sentence
       :snt1 (c25-3 / watch-01
                    :ARG0 (c25-8 / dude)
                    :ARG1 (c25-5 / it)
                    :time (c25-7 / get-03
                                 :ARG1 c25-5
                                 :ARG2 (c25-4 / dark-02
                                              :ARG1 c25-5))
                    :mod (c25-6 / too))
       :snt2 (c25-2 / dope
                    :domain (c25-1 / it)))

# ::snt Oh. Never mind then
# ::tokens ["Oh", ".", "Never", "mind", "then"]
# ::lemmas ["oh", ".", "never", "mind", "then"]
(c26-2 / mind-15
       :ARG0 (c26-1 / you)
       :time (c26-3 / ever)
       :mod (c26-0 / oh
                   :mode expressive)
       :time (c26-4 / then)
       :polarity -
       :mode imperative)

# ::snt Holy shit... damn Dey lol
# ::tokens ["Holy", "shit", "...", "damn", "Dey", "lol"]
# ::lemmas ["holy", "shit", "...", "damn", "Dey", "lol"]
(c27-6 / and
       :op1 (c27-1 / shit
                   :mod (c27-2 / holy)
                   :mode expressive)
       :op2 (c27-3 / person
                   :name (c27-0 / name
                                :op1 "Dey")
                   :mod (c27-7 / damn
                               :mode expressive)
                   :ARG2-of (c27-4 / laugh-01
                                   :ARG0 (c27-5 / i)
                                   :manner (c27-8 / loud))))

# ::snt Sundays are the best with us doe
# ::tokens ["Sundays", "are", "the", "best", "with", "us", "doe"]
# ::lemmas ["sunday", "be", "the", "good", "with", "we", "doe"]
(c28-1 / have-degree-91
       :ARG1 (c28-4 / date-entity
                    :Sunday (c28-3 / good-02
                                   :ARG1 c28-4))
       :ARG3 (c28-0 / most)
       :prep-with (c28-2 / we
                         :mode expressive))

# ::snt Yes!!!
# ::tokens ["Yes", "!", "!", "!"]
# ::lemmas ["yes", "!", "!", "!"]
(c29-0 / yes
       :mode expressive)

# ::snt Dey you need to join our watch parties this time!!!
# ::tokens ["Dey", "you", "need", "to", "join", "our", "watch", "parties", "this", "time", "!", "!", "!"]
# ::lemmas ["dey", "you", "need", "to", "join", "our", "watch", "party", "this", "time", "!", "!", "!"]
(c30-0 / obligate-01
       :ARG1 (c30-1 / you)
       :ARG2 (c30-5 / join-04
                    :ARG0 c30-1
                    :ARG1 (c30-2 / party
                                 :mod (c30-4 / watch-01)
                                 :poss (c30-3 / we))
                    :time (c30-6 / time
                                 :mod (c30-8 / this)))
       :mod (c30-7 / da
                   :mode expressive)
       :mode expressive)

# ::snt When did it start last season?
# ::tokens ["When", "did", "it", "start", "last", "season", "?"]
# ::lemmas ["when", "do", "it", "start", "last", "season", "?"]
(c31-1 / start-01
       :ARG1 (c31-3 / it)
       :time (c31-0 / season
                    :mod (c31-2 / last))
       :time (c31-4 / amr-unknown))

# ::snt Im saying either February or March
# ::tokens ["I", "m", "saying", "either", "February", "or", "March"]
# ::lemmas ["i", "m", "say", "either", "February", "or", "March"]
(c32-1 / say-01
       :ARG0 (c32-3 / i)
       :ARG1 (c32-0 / or
                    :op1 (c32-4 / date-entity
                                :month 2)
                    :op2 (c32-2 / date-entity
                                :month 3)))

# ::snt Patiently waiting I cant wait to have a date!
# ::tokens ["Patiently", "waiting", "I", "ca", "nt", "wait", "to", "have", "a", "date", "!"]
# ::lemmas ["patiently", "wait", "i", "can", "not", "wait", "to", "have", "a", "date", "!"]
(c33-0 / multi-sentence
       :snt1 (c33-4 / wait-01
                    :manner (c33-2 / patient-01))
       :snt2 (c33-3 / wait-01
                    :ARG1 (c33-5 / i)
                    :ARG2 (c33-1 / have-06
                                 :ARG0 c33-5
                                 :ARG1 (c33-6 / date-02
                                              :ARG0 c33-5))
                    :polarity -))

# ::snt But yet so close
# ::tokens ["But", "yet", "so", "close"]
# ::lemmas ["but", "yet", "so", "close"]
(c35-0 / contrast-01
       :ARG2 (c35-2 / close-10
                    :degree (c35-3 / so)
                    :mod (c35-1 / yet)))

# ::snt Nooouuu pensaba en Abril .
# ::tokens ["Nooouuu", "pensaba", "en", "Abril", "."]
# ::lemmas ["nooouuu", "pensaba", "en", "Abril", "."]
(c38-2 / pensaba
       :mod (c38-0 / nooouuu)
       :location (c38-3 / island
                        :name (c38-1 / name
                                     :op1 "Abril")))

# ::snt OHHHH I CANT WAIT!! I wonder how theyre going to close it up
# ::tokens ["OHHHH", "I", "CANT", "WAIT", "!", "!", "I", "wonder", "how", "they", "re", "going", "to", "close", "it", "up"]
# ::lemmas ["OHHHH", "i", "cant", "WAIT", "!", "!", "i", "wonder", "how", "they", "re", "go", "to", "close", "it", "up"]
(c39-1 / multi-sentence
       :snt1 (c39-3 / possible-01
                    :ARG1 (c39-5 / WAIT-01
                                 :ARG0 (c39-7 / i))
                    :mod (c39-0 / oh-my-god
                                :mode expressive)
                    :polarity -)
       :snt2 (c39-4 / wonder-01
                    :ARG0 (c39-2 / i)
                    :ARG1 (c39-8 / thing
                                 :manner-of (c39-6 / close-up-04
                                                   :ARG0 (c39-10 / they)
                                                   :ARG1 (c39-9 / it)))))

# ::snt Thank god
# ::tokens ["Thank", "god"]
# ::lemmas ["thank", "god"]
(c40-2 / thank-01
       :ARG1 (c40-1 / person
                    :name (c40-0 / name
                                 :op1 "God")))
