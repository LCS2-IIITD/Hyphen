# ::snt Aww finally
# ::tokens ["Aww", "finally"]
# ::lemmas ["Aww", "finally"]
(c1-0 / final
      :mod (c1-1 / aw
                 :mode expressive))

# ::snt I absolutely called this when she started dating Kevin. I knew it would get him in his feelings.
# ::tokens ["I", "absolutely", "called", "this", "when", "she", "started", "dating", "Kevin", ".", "I", "knew", "it", "would", "get", "him", "in", "his", "feelings", "."]
# ::lemmas ["i", "absolutely", "call", "this", "when", "she", "start", "date", "Kevin", ".", "i", "know", "it", "would", "get", "he", "in", "his", "feeling", "."]
(c2-2 / multi-sentence
      :snt1 (c2-8 / call-01
                  :ARG0 (c2-10 / i)
                  :ARG1 (c2-9 / this)
                  :degree (c2-11 / absolute)
                  :time (c2-4 / start-01
                              :ARG0 (c2-0 / she)
                              :ARG1 (c2-13 / date-02
                                           :ARG0 c2-0
                                           :ARG1 (c2-6 / person
                                                       :name (c2-3 / name
                                                                   :op1 "Kevin")))))
      :snt2 (c2-7 / know-01
                  :ARG0 (c2-5 / i)
                  :ARG1 (c2-12 / get-03
                               :ARG0 (c2-14 / it)
                               :ARG1 (c2-1 / feel-01
                                           :ARG0 c2-6))))

# ::snt I can't help but smile on this one. Yeah Ashley and Jared.
# ::tokens ["I", "ca", "n't", "help", "but", "smile", "on", "this", "one", ".", "Yeah", "Ashley", "and", "Jared", "."]
# ::lemmas ["i", "can", "not", "help", "but", "smile", "on", "this", "one", ".", "yeah", "Ashley", "and", "Jared", "."]
(c4-2 / multi-sentence
      :snt1 (c4-8 / possible-01
                  :ARG1 (c4-7 / help-02
                              :ARG0 (c4-10 / i)
                              :ARG1 (c4-4 / smile-01
                                          :ARG0 c4-10
                                          :topic (c4-0 / one
                                                       :mod (c4-11 / this))))
                  :polarity -)
      :snt2 (c4-1 / yeah
                  :op1 (c4-6 / and
                             :op1 (c4-3 / person
                                        :name (c4-5 / name
                                                    :op1 "Ashley"))
                             :op2 (c4-12 / person
                                         :name (c4-9 / name
                                                     :op1 "Jared")))
                  :mode expressive))

# ::snt Good for both of them
# ::tokens ["Good", "for", "both", "of", "them"]
# ::lemmas ["good", "for", "both", "of", "they"]
(c5-0 / good-04
      :ARG2 (c5-2 / they
                  :mod (c5-1 / both)))

# ::snt Really? How you survived that damn wedding?
# ::tokens ["Really", "?", "How", "you", "survived", "that", "damn", "wedding", "?"]
# ::lemmas ["really", "?", "how", "you", "survive", "that", "damn", "wedding", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-3 / real-04
                  :polarity (c6-7 / amr-unknown))
      :snt2 (c6-2 / survive-01
                  :ARG0 (c6-0 / you)
                  :ARG1 (c6-4 / wed-01
                              :mod (c6-8 / damn
                                         :mode expressive)
                              :mod (c6-5 / that))
                  :manner (c6-6 / amr-unknown)))

# ::snt That is an ugly looking dude, maybe if he shaved he would look better
# ::tokens ["That", "is", "an", "ugly", "looking", "dude", ",", "maybe", "if", "he", "shaved", "he", "would", "look", "better"]
# ::lemmas ["that", "be", "an", "ugly", "looking", "dude", ",", "maybe", "if", "he", "shave", "he", "would", "look", "well"]
(c7-2 / and
      :op1 (c7-9 / dude
                 :ARG0-of (c7-4 / look-02
                                :ARG1 (c7-10 / ugly))
                 :domain (c7-7 / that))
      :op2 (c7-5 / possible-01
                 :ARG1 c7-4
                 :ARG0 (c7-3 / he)
                 :ARG1 (c7-8 / good-02
                             :ARG2-of (c7-6 / have-degree-91
                                            :ARG1 c7-4
                                            :ARG3 (c7-0 / more)))
                 :condition (c7-1 / shave-01
                                  :ARG0 c7-3)))

# ::snt OMG, watch this. A bit long but so worth it! They are ADORABLE!!
# ::tokens ["OMG", ",", "watch", "this", ".", "A", "bit", "long", "but", "so", "worth", "it", "!", "They", "are", "ADORABLE", "!", "!"]
# ::lemmas ["OMG", ",", "watch", "this", ".", "a", "bit", "long", "but", "so", "worth", "it", "!", "they", "be", "ADORABLE", "!", "!"]
(c8-3 / multi-sentence
      :snt1 (c8-8 / watch-01
                  :ARG0 (c8-2 / you)
                  :ARG1 (c8-11 / this)
                  :mod (c8-0 / oh-my-god
                             :mode expressive)
                  :mode imperative)
      :snt2 (c8-9 / contrast-01
                  :ARG1 (c8-6 / long-03
                              :degree (c8-1 / bit))
                  :ARG2 (c8-7 / worth-02
                              :ARG2 (c8-10 / it)
                              :degree (c8-4 / so)))
      :snt3 (c8-5 / beautiful-02
                  :ARG1 (c8-12 / they)
                  :mode expressive))

# ::snt No way? can you confirm or deny?
# ::tokens ["No", "way", "?", "can", "you", "confirm", "or", "deny", "?"]
# ::lemmas ["no", "way", "?", "can", "you", "confirm", "or", "deny", "?"]
(c10-2 / multi-sentence
       :snt1 (c10-4 / way
                    :manner (c10-7 / amr-unknown)
                    :polarity -)
       :snt2 (c10-3 / possible-01
                    :ARG1 (c10-0 / or
                                 :op1 (c10-5 / confirm-01
                                             :ARG0 (c10-1 / you))
                                 :op2 (c10-8 / deny-01
                                             :ARG0 c10-1))
                    :polarity (c10-6 / amr-unknown)))

# ::snt "he realised how emotional she could get and wasn't sure he could be with someone like that" ok no it would never work between us
# ::tokens ["\"", "he", "realised", "how", "emotional", "she", "could", "get", "and", "was", "n't", "sure", "he", "could", "be", "with", "someone", "like", "that", "\"", "ok", "no", "it", "would", "never", "work", "between", "us"]
# ::lemmas ["\"", "he", "realise", "how", "emotional", "she", "could", "get", "and", "be", "not", "sure", "he", "could", "be", "with", "someone", "like", "that", "\"", "ok", "no", "it", "would", "never", "work", "between", "we"]
(c11-12 / multi-sentence
        :snt1 (c11-8 / and
                     :op1 (c11-15 / realize-01
                                  :ARG0 (c11-7 / he)
                                  :ARG1 (c11-9 / thing
                                               :degree-of (c11-16 / emotional-02
                                                                  :ARG1 (c11-0 / she)
                                                                  :ARG1-of (c11-17 / possible-01))))
                     :op2 (c11-5 / sure-02
                                 :ARG0 c11-7
                                 :ARG1 (c11-13 / possible-01
                                               :ARG1 (c11-11 / be-with-10
                                                             :ARG0 (c11-19 / he)
                                                             :ARG1 (c11-4 / someone
                                                                          :ARG1-of (c11-3 / resemble-01
                                                                                          :ARG2 (c11-14 / that)))))
                                 :polarity -))
        :snt2 (c11-6 / okay-01
                     :ARG1 (c11-18 / work-09
                                   :ARG1 (c11-20 / it)
                                   :ARG2 (c11-1 / between
                                                :op1 (c11-2 / we))
                                   :time (c11-10 / ever)
                                   :polarity -)))

# ::snt dAMMIT
# ::tokens ["dAMMIT"]
# ::lemmas ["dammit"]
(c12-1 / person
       :name (c12-0 / name
                    :op1 "DAMMIT"))

# ::snt YESSSSS! Im so happy!!!!
# ::tokens ["YESSSSS", "!", "I", "m", "so", "happy", "!", "!", "!", "!"]
# ::lemmas ["YESSSSS", "!", "i", "m", "so", "happy", "!", "!", "!", "!"]
(c13-1 / multi-sentence
       :snt1 (c13-0 / yes)
       :snt2 (c13-3 / happy-01
                    :ARG1 (c13-4 / i)
                    :degree (c13-2 / so)))

# ::snt Charot! Hahaha
# ::tokens ["Charot", "!", "Hahaha"]
# ::lemmas ["Charot", "!", "Hahaha"]
(c14-3 / and
       :op1 (c14-2 / person
                   :name (c14-0 / name
                                :op1 "Charot"))
       :op2 (c14-1 / haha
                   :mode expressive))

# ::snt american jared is OFF the market
# ::tokens ["american", "jared", "is", "OFF", "the", "market"]
# ::lemmas ["american", "jared", "be", "off", "the", "market"]
(c15-0 / off
       :op1 (c15-3 / market)
       :domain (c15-2 / country
                      :name (c15-1 / name
                                   :op1 "America")))

# ::snt Im over the moon! Best news ever!
# ::tokens ["I", "m", "over", "the", "moon", "!", "Best", "news", "ever", "!"]
# ::lemmas ["i", "m", "over", "the", "moon", "!", "good", "news", "ever", "!"]
(c16-2 / multi-sentence
       :snt1 (c16-1 / be-located-at-91
                    :ARG1 (c16-7 / i)
                    :ARG2 (c16-0 / over
                                 :op1 (c16-5 / moon))
                    :mode expressive)
       :snt2 (c16-3 / news
                    :time (c16-4 / ever)
                    :ARG1-of (c16-6 / have-degree-91
                                    :ARG2 (c16-8 / good-02
                                                 :ARG1 c16-3)
                                    :ARG3 (c16-9 / most))))

# ::snt Its worth the min!
# ::tokens ["Its", "worth", "the", "min", "!"]
# ::lemmas ["its", "worth", "the", "min", "!"]
(c17-0 / worth-02
       :ARG1 (c17-2 / it)
       :ARG2 (c17-1 / min))

# ::snt Wait... So when a guy doesn't take no for an answer it's harassment... But....Okey dokey.
# ::tokens ["Wait", "...", "So", "when", "a", "guy", "does", "n't", "take", "no", "for", "an", "answer", "it", "'s", "harassment", "...", "But", "....", "Okey", "dokey", "."]
# ::lemmas ["wait", "...", "so", "when", "a", "guy", "do", "not", "take", "no", "for", "an", "answer", "it", "be", "harassment", "...", "but", "....", "Okey", "dokey", "."]
(c19-1 / multi-sentence
       :snt1 (c19-5 / wait-01
                    :ARG1 (c19-0 / you)
                    :mode imperative)
       :snt2 (c19-4 / harass-01
                    :condition (c19-8 / take-01
                                      :ARG0 (c19-9 / guy)
                                      :ARG1 (c19-2 / no)
                                      :ARG2 (c19-3 / answer-01)
                                      :polarity -)
                    :ARG1-of (c19-7 / infer-01))
       :snt3 (c19-6 / contrast-01
                    :mod (c19-10 / dokey
                                 :mode expressive)))

# ::snt yalllllllllll
# ::tokens ["yalllllllllll"]
# ::lemmas ["yalllllllllll"]
(c20-0 / yalllllllllll)

# ::snt Jared was on Bachelor in Paradise Australia a month or two ago. They get around, don't they?!
# ::tokens ["Jared", "was", "on", "Bachelor", "in", "Paradise", "Australia", "a", "month", "or", "two", "ago", ".", "They", "get", "around", ",", "do", "n't", "they", "?", "!"]
# ::lemmas ["Jared", "be", "on", "Bachelor", "in", "Paradise", "Australia", "a", "month", "or", "two", "ago", ".", "they", "get", "around", ",", "do", "not", "they", "?", "!"]
(c21-3 / multi-sentence
       :snt1 (c21-7 / person
                    :name (c21-2 / name
                                 :op1 "Jared")
                    :location (c21-1 / broadcast-program
                                     :name (c21-6 / name
                                                  :op1 "Bachelor"
                                                  :op2 "in"
                                                  :op3 "Paradise"
                                                  :op4 "Australia"))
                    :time (c21-8 / before
                                 :op1 (c21-9 / now)
                                 :quant (c21-0 / or
                                               :op1 (c21-12 / temporal-quantity
                                                            :unit (c21-10 / month)
                                                            :quant 1)
                                               :op2 (c21-15 / temporal-quantity
                                                            :unit (c21-14 / month)
                                                            :quant 2))))
       :snt2 (c21-13 / get-05
                     :ARG1 (c21-11 / they)
                     :ARG2 (c21-4 / around)
                     :ARG1-of (c21-5 / request-confirmation-91)))

# ::snt Omggggg yessssss
# ::tokens ["Omggggg", "yessssss"]
# ::lemmas ["Omggggg", "yessssss"]
(c22-0 / yessssssss
       :mode expressive)

# ::snt Poor Kevin
# ::tokens ["Poor", "Kevin"]
# ::lemmas ["Poor", "Kevin"]
(c23-1 / person
       :name (c23-0 / name
                    :op1 "Kevin")
       :mod (c23-2 / poor))

# ::snt Whaaaat???
# ::tokens ["Whaaaat", "?", "?", "?"]
# ::lemmas ["Whaaaat", "?", "?", "?"]
(c24-0 / whaaat
       :mode expressive)

# ::snt Thats definitely Belle Mer.
# ::tokens ["That", "s", "definitely", "Belle", "Mer", "."]
# ::lemmas ["that", "s", "definitely", "Belle", "Mer", "."]
(c25-1 / say-01
       :ARG1 (c25-3 / that)
       :ARG2 (c25-2 / person
                    :name (c25-0 / name
                                 :op1 "Belle"
                                 :op2 "Mer"))
       :mod (c25-4 / definite))

# ::snt omg watch the video! It will have you crying of joy
# ::tokens ["omg", "watch", "the", "video", "!", "It", "will", "have", "you", "crying", "of", "joy"]
# ::lemmas ["omg", "watch", "the", "video", "!", "it", "will", "have", "you", "cry", "of", "joy"]
(c27-2 / multi-sentence
       :snt1 (c27-5 / watch-01
                    :ARG0 (c27-1 / you)
                    :ARG1 (c27-3 / video)
                    :mod (c27-0 / oh
                                :mode expressive)
                    :mode imperative)
       :snt2 (c27-4 / have-04
                    :ARG0 (c27-8 / it)
                    :ARG1 (c27-6 / cry-02
                                 :ARG0 (c27-9 / you)
                                 :ARG1 (c27-7 / joy))))

# ::snt Awesome...
# ::tokens ["Awesome", "..."]
# ::lemmas ["Awesome", "..."]
(c28-0 / awe-01)

# ::snt this is the wildest story
# ::tokens ["this", "is", "the", "wildest", "story"]
# ::lemmas ["this", "be", "the", "wild", "story"]
(c29-1 / story
       :domain (c29-4 / this)
       :ARG1-of (c29-2 / have-degree-91
                       :ARG2 (c29-3 / wild)
                       :ARG3 (c29-0 / most)))

# ::snt Gross.
# ::tokens ["Gross", "."]
# ::lemmas ["Gross", "."]
(c30-0 / gross-03)

# ::snt IM SO HAPPY
# ::tokens ["IM", "SO", "HAPPY"]
# ::lemmas ["IM", "SO", "HAPPY"]
(c31-0 / happy-01
       :ARG1 (c31-1 / i)
       :degree (c31-2 / so))

# ::snt . Wow I liked them together.
# ::tokens [".", "Wow", "I", "liked", "them", "together", "."]
# ::lemmas [".", "wow", "i", "like", "they", "together", "."]
(c32-0 / like-01
       :ARG0 (c32-3 / i)
       :ARG1 (c32-2 / they)
       :mod (c32-4 / together)
       :mod (c32-1 / wow
                   :mode expressive))

# ::snt I give it a week
# ::tokens ["I", "give", "it", "a", "week"]
# ::lemmas ["i", "give", "it", "a", "week"]
(c33-5 / give-01
       :ARG0 (c33-3 / i)
       :ARG1 (c33-1 / rate-entity-91
                    :ARG3 (c33-4 / temporal-quantity
                                 :unit (c33-2 / week)
                                 :quant 1))
       :ARG2 (c33-0 / it))

# ::snt Watching it on my TV right now getting emotional
# ::tokens ["Watching", "it", "on", "my", "TV", "right", "now", "getting", "emotional"]
# ::lemmas ["watch", "it", "on", "my", "tv", "right", "now", "get", "emotional"]
(c34-5 / get-03
       :ARG1 (c34-3 / i)
       :ARG2 (c34-2 / emotional-02
                    :ARG1 c34-3)
       :time (c34-0 / now
                    :mod (c34-1 / right))
       :medium (c34-4 / television
                      :poss c34-3))

# ::snt They are?
# ::tokens ["They", "are", "?"]
# ::lemmas ["they", "be", "?"]
(c35-1 / they
       :polarity (c35-0 / amr-unknown))

# ::snt Lol no Ashley you can do way better
# ::tokens ["Lol", "no", "Ashley", "you", "can", "do", "way", "better"]
# ::lemmas ["Lol", "no", "Ashley", "you", "can", "do", "way", "well"]
(c37-2 / say-01
       :ARG0 (c37-8 / i)
       :ARG1 (c37-5 / possible-01
                    :ARG1 (c37-11 / do-02
                                  :ARG0 (c37-1 / person
                                               :name (c37-0 / name
                                                            :op1 "Ashley"))
                                  :ARG1 (c37-9 / thing
                                               :ARG1-of (c37-10 / good-02
                                                                :ARG2-of (c37-4 / have-degree-91
                                                                                :ARG1 c37-9
                                                                                :ARG3 (c37-3 / more
                                                                                             :quant (c37-7 / way))))))
                    :ARG2-of (c37-6 / laugh-01
                                    :manner (c37-12 / loud)
                                    :mode expressive))
       :ARG2 c37-1)

# ::snt ah, I see it now.
# ::tokens ["ah", ",", "I", "see", "it", "now", "."]
# ::lemmas ["ah", ",", "i", "see", "it", "now", "."]
(c38-1 / see-01
       :ARG0 (c38-3 / i)
       :ARG1 (c38-2 / it)
       :time (c38-0 / now)
       :mod (c38-4 / ah
                   :mode expressive))

# ::snt Omg I just sent that to Becky
# ::tokens ["Omg", "I", "just", "sent", "that", "to", "Becky"]
# ::lemmas ["Omg", "i", "just", "send", "that", "to", "Becky"]
(c41-2 / send-01
       :ARG0 (c41-5 / i)
       :ARG1 (c41-6 / that)
       :ARG2 (c41-3 / person
                    :name (c41-1 / name
                                 :op1 "Becky"))
       :mod (c41-0 / oh-my-god
                   :mode expressive)
       :time (c41-4 / just))

# ::snt hahaha i cant believe it! Persistence really does pay off
# ::tokens ["hahaha", "i", "ca", "nt", "believe", "it", "!", "Persistence", "really", "does", "pay", "off"]
# ::lemmas ["hahaha", "i", "can", "not", "believe", "it", "!", "persistence", "really", "do", "pay", "off"]
(c43-1 / multi-sentence
       :snt1 (c43-6 / possible-01
                    :ARG1 (c43-0 / believe-01
                                 :ARG0 (c43-7 / i)
                                 :ARG1 (c43-3 / it))
                    :mod (c43-5 / haha
                                :mode expressive)
                    :polarity -)
       :snt2 (c43-2 / pay-off-02
                    :ARG0 (c43-8 / persist-01)
                    :ARG1-of (c43-4 / real-04)))
