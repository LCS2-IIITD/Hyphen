# ::snt Gud quetion gyz uban
# ::tokens ["Gud", "quetion", "gyz", "uban"]
# ::lemmas ["gud", "quetion", "gyz", "uban"]
(c1-2 / quetion-00
      :ARG0 (c1-1 / uban)
      :mod (c1-0 / gud))

# ::snt So happy for her. What a cute couple.Best wishes .....KK
# ::tokens ["So", "happy", "for", "her", ".", "What", "a", "cute", "couple", ".", "Best", "wishes", ".....", "KK"]
# ::lemmas ["so", "happy", "for", "she", ".", "what", "a", "cute", "couple", ".", "good", "wish", ".....", "KK"]
(c2-1 / multi-sentence
      :snt1 (c2-3 / happy-01
                  :ARG1 (c2-2 / she)
                  :degree (c2-0 / so))
      :snt2 (c2-5 / cute
                  :domain (c2-10 / couple)
                  :degree c2-0)
      :snt3 (c2-6 / wish-01
                  :ARG1 (c2-8 / thing
                              :ARG1-of (c2-7 / have-degree-91
                                             :ARG2 (c2-9 / good-02
                                                         :ARG1 c2-8)
                                             :ARG3 (c2-4 / most)))))

# ::snt Who cares another black boomerang baby.
# ::tokens ["Who", "cares", "another", "black", "boomerang", "baby", "."]
# ::lemmas ["who", "care", "another", "black", "boomerang", "baby", "."]
(c3-2 / care-01
      :ARG0 (c3-4 / amr-unknown)
      :ARG1 (c3-0 / baby
                  :mod (c3-3 / another)
                  :ARG1-of (c3-1 / black-05)
                  :mod (c3-5 / boomerang)))

# ::snt Khlo is pregnant? Who's the daddy?
# ::tokens ["Khlo", "is", "pregnant", "?", "Who", "'s", "the", "daddy", "?"]
# ::lemmas ["Khlo", "be", "pregnant", "?", "who", "be", "the", "daddy", "?"]
(c4-2 / multi-sentence
      :snt1 (c4-5 / impregnate-01
                  :ARG1 (c4-4 / person
                              :name (c4-0 / name
                                          :op1 "Khlo")))
      :snt2 (c4-1 / person
                  :ARG0-of (c4-3 / have-rel-role-91
                                 :ARG2 (c4-7 / daddy))
                  :domain (c4-6 / amr-unknown)))
