# ::snt Hahahahaha me too I thought he was gay as well lolll !!!
# ::tokens ["Hahahahaha", "me", "too", "I", "thought", "he", "was", "gay", "as", "well", "lolll", "!", "!", "!"]
# ::lemmas ["Hahahahaha", "i", "too", "i", "think", "he", "be", "gay", "as", "well", "lolll", "!", "!", "!"]
(c1-0 / and
      :op1 (c1-2 / laugh-01
                 :ARG0 (c1-5 / i)
                 :mod (c1-4 / too)
                 :mode expressive)
      :op2 (c1-6 / think-01
                 :ARG0 c1-5
                 :ARG1 (c1-7 / gay-01
                             :ARG1 (c1-1 / he)
                             :mod (c1-8 / as-well))
                 :mod (c1-3 / haha
                            :mode expressive)))

# ::snt What?!..thought he was gay
# ::tokens ["What?!", "..", "thought", "he", "was", "gay"]
# ::lemmas ["what?!", "..", "think", "he", "be", "gay"]
(c2-3 / think-01
      :ARG1 (c2-0 / gay-01
                  :ARG1 (c2-2 / he))
      :mod (c2-1 / amr-unknown
                 :mode expressive))

# ::snt I thought he was gay
# ::tokens ["I", "thought", "he", "was", "gay"]
# ::lemmas ["i", "think", "he", "be", "gay"]
(c3-3 / think-01
      :ARG0 (c3-2 / i)
      :ARG1 (c3-0 / gay-01
                  :ARG1 (c3-1 / he)))

# ::snt omg
# ::tokens ["omg"]
# ::lemmas ["omg"]
(c5-0 / oh-my-god
      :mode expressive)

# ::snt click for more
# ::tokens ["click", "for", "more"]
# ::lemmas ["click", "for", "more"]
(c6-0 / click-01
      :ARG0 (c6-1 / you)
      :purpose (c6-2 / more)
      :mode imperative)

# ::snt Shes patient
# ::tokens ["She", "s", "patient"]
# ::lemmas ["she", "s", "patient"]
(c7-0 / person
      :ARG0-of (c7-1 / patient-01))

# ::snt Congratulations Darren
# ::tokens ["Congratulations", "Darren"]
# ::lemmas ["congratulation", "Darren"]
(c8-3 / say-01
      :ARG1 (c8-0 / congratulate-01)
      :ARG2 (c8-2 / person
                  :name (c8-1 / name
                              :op1 "Darren")))

# ::snt Congrats Darren
# ::tokens ["Congrats", "Darren"]
# ::lemmas ["Congrats", "Darren"]
(c9-3 / say-01
      :ARG1 (c9-0 / congratulate-01)
      :ARG2 (c9-2 / person
                  :name (c9-1 / name
                              :op1 "Darren")))

# ::snt Thought he is gay...
# ::tokens ["Thought", "he", "is", "gay", "..."]
# ::lemmas ["thought", "he", "be", "gay", "..."]
(c10-2 / think-01
       :ARG1 (c10-0 / gay-01
                    :ARG1 (c10-1 / he)))

# ::snt yrs is a long wait...now is the time
# ::tokens ["yrs", "is", "a", "long", "wait", "...", "now", "is", "the", "time"]
# ::lemmas ["yrs", "be", "a", "long", "wait", "...", "now", "be", "the", "time"]
(c13-3 / and
       :op1 (c13-5 / wait-01
                   :duration (c13-1 / multiple
                                    :op1 (c13-6 / temporal-quantity
                                                :unit (c13-0 / year)
                                                :quant 1))
                   :ARG1-of (c13-4 / long-03))
       :op2 (c13-2 / now
                   :domain (c13-7 / time)))

# ::snt If his mom is named Ruth, tell her them steaks overpriced
# ::tokens ["If", "his", "mom", "is", "named", "Ruth", ",", "tell", "her", "them", "steaks", "overpriced"]
# ::lemmas ["if", "his", "mom", "be", "name", "Ruth", ",", "tell", "she", "they", "steak", "overprice"]
(c14-10 / tell-01
        :ARG0 (c14-1 / you)
        :ARG1 (c14-4 / steak
                     :ARG1-of (c14-0 / overprice-01))
        :ARG2 (c14-7 / person
                     :ARG0-of (c14-6 / have-rel-role-91
                                     :ARG1 (c14-9 / he)
                                     :ARG2 (c14-2 / mom)))
        :condition (c14-3 / name-01
                          :ARG1 c14-7
                          :ARG2 (c14-5 / person
                                       :name (c14-8 / name
                                                    :op1 "Ruth")))
        :mode imperative)

# ::snt Pretty couple
# ::tokens ["Pretty", "couple"]
# ::lemmas ["pretty", "couple"]
(c15-0 / couple
       :degree (c15-1 / pretty))

# ::snt Its finally time he asked!
# ::tokens ["Its", "finally", "time", "he", "asked", "!"]
# ::lemmas ["its", "finally", "time", "he", "ask", "!"]
(c16-3 / time
       :mod (c16-0 / final)
       :time-of (c16-2 / ask-02
                       :ARG0 (c16-1 / he)))

# ::snt Chut
# ::tokens ["Chut"]
# ::lemmas ["chut"]
(c17-0 / chut)

# ::snt Mdrrrr mais il a jamais t gay !
# ::tokens ["Mdrrrr", "mais", "il", "a", "jamais", "t", "gay", "!"]
# ::lemmas ["Mdrrrr", "mais", "il", "a", "jamais", "t", "gay", "!"]
(c18-5 / gay-01
       :ARG1 (c18-3 / person
                    :name (c18-0 / name
                                 :op1 "Mdrrrr"))
       :ARG1-of (c18-4 / cause-01
                       :ARG0 (c18-1 / person
                                    :name (c18-2 / name
                                                 :op1 "Jesus")))
       :mode expressive)

# ::snt dou il est pas gay
# ::tokens ["dou", "il", "est", "pas", "gay"]
# ::lemmas ["dou", "il", "est", "pas", "gay"]
(c19-1 / say-01
       :ARG0 (c19-3 / i)
       :ARG1 (c19-2 / est-point-of-view-08
                    :ARG2 (c19-4 / gay-01))
       :ARG2 (c19-0 / you))

# ::snt Mazel Tov!
# ::tokens ["Mazel", "Tov", "!"]
# ::lemmas ["Mazel", "Tov", "!"]
(c20-1 / person
       :name (c20-0 / name
                    :op1 "Mazel"
                    :op2 "Tov"))

# ::snt Haha! Love this comment! Charlene is awesome too!
# ::tokens ["Haha", "!", "Love", "this", "comment", "!", "Charlene", "is", "awesome", "too", "!"]
# ::lemmas ["Haha", "!", "love", "this", "comment", "!", "Charlene", "be", "awesome", "too", "!"]
(c21-0 / multi-sentence
       :snt1 (c21-3 / haha
                    :mode expressive)
       :snt2 (c21-4 / love-01
                    :ARG0 (c21-7 / i)
                    :ARG1 (c21-8 / thing
                                 :ARG1-of (c21-6 / comment-01)
                                 :mod (c21-10 / this)))
       :snt3 (c21-2 / awesome-02
                    :ARG1 (c21-5 / person
                                 :name (c21-1 / name
                                              :op1 "Charlene"))
                    :mod (c21-9 / too)))

# ::snt Omg I thought u too were married!
# ::tokens ["Omg", "I", "thought", "u", "too", "were", "married", "!"]
# ::lemmas ["Omg", "i", "think", "u", "too", "be", "marry", "!"]
(c22-3 / think-01
       :ARG0 (c22-4 / i)
       :ARG1 (c22-2 / marry-01
                    :ARG1 (c22-1 / you
                                 :mod (c22-5 / too)))
       :mod (c22-0 / oh-my-god
                   :mode expressive))

# ::snt I fr thought he's gay...
# ::tokens ["I", "fr", "thought", "he", "'s", "gay", "..."]
# ::lemmas ["i", "fr", "think", "he", "be", "gay", "..."]
(c23-3 / think-01
       :ARG0 (c23-2 / i)
       :ARG1 (c23-0 / gay-01
                    :ARG1 (c23-1 / he)))

# ::snt I thought he was dating Charlene Kaye this whole time lol
# ::tokens ["I", "thought", "he", "was", "dating", "Charlene", "Kaye", "this", "whole", "time", "lol"]
# ::lemmas ["i", "think", "he", "be", "date", "Charlene", "Kaye", "this", "whole", "time", "lol"]
(c24-6 / think-01
       :ARG0 (c24-5 / i)
       :ARG1 (c24-7 / date-02
                    :ARG0 (c24-1 / he)
                    :ARG1 (c24-2 / person
                                 :name (c24-0 / name
                                              :op1 "Charlene"
                                              :op2 "Kaye"))
                    :time (c24-9 / time
                                 :mod (c24-4 / whole)))
       :ARG2-of (c24-3 / laugh-01
                       :ARG0 c24-5
                       :manner (c24-8 / loud)
                       :mode expressive))

# ::snt The gay jokes need to end. He played a gay guy so did Mark Ruffalo and Jake Gyllenhal and many other straight men. Let's give the guy a break
# ::tokens ["The", "gay", "jokes", "need", "to", "end", ".", "He", "played", "a", "gay", "guy", "so", "did", "Mark", "Ruffalo", "and", "Jake", "Gyllenhal", "and", "many", "other", "straight", "men", ".", "Let", "'s", "give", "the", "guy", "a", "break"]
# ::lemmas ["the", "gay", "joke", "need", "to", "end", ".", "he", "play", "a", "gay", "guy", "so", "do", "Mark", "Ruffalo", "and", "Jake", "Gyllenhal", "and", "many", "other", "straight", "man", ".", "let", "us", "give", "the", "guy", "a", "break"]
(c25-14 / multi-sentence
        :snt1 (c25-18 / need-01
                      :ARG1 (c25-20 / end-01
                                    :ARG1 (c25-9 / joke-01
                                                 :ARG2 (c25-11 / gay-01))))
        :snt2 (c25-21 / play-02
                      :ARG0 (c25-7 / he)
                      :ARG1 (c25-3 / guy
                                   :ARG1-of (c25-5 / gay-01))
                      :ARG1-of (c25-19 / resemble-01
                                       :ARG2 (c25-15 / play-02
                                                     :ARG0 (c25-10 / and
                                                                   :op1 (c25-4 / person
                                                                               :name (c25-16 / name
                                                                                             :op1 "Mark"
                                                                                             :op2 "Ruffalo"))
                                                                   :op2 (c25-1 / person
                                                                               :name (c25-22 / name
                                                                                             :op1 "Jake"
                                                                                             :op2 "Gyllenhal"))
                                                                   :op3 (c25-8 / man
                                                                               :ARG1-of (c25-0 / straight-05)
                                                                               :quant (c25-17 / many)
                                                                               :mod (c25-6 / other)))))
                      :snt3 (c25-12 / give-01
                                    :ARG0 (c25-23 / we)
                                    :ARG1 (c25-13 / break-19)
                                    :ARG2 (c25-2 / guy)
                                    :mode imperative)))

# ::snt Yes. He is not gay ever since.
# ::tokens ["Yes", ".", "He", "is", "not", "gay", "ever", "since", "."]
# ::lemmas ["yes", ".", "he", "be", "not", "gay", "ever", "since", "."]
(c26-1 / multi-sentence
       :snt1 (c26-0 / yes)
       :snt2 (c26-5 / gay-01
                    :ARG1 (c26-4 / he)
                    :time (c26-2 / since)
                    :time (c26-3 / ever)
                    :polarity -))

# ::snt Happy for you,
# ::tokens ["Happy", "for", "you", ","]
# ::lemmas ["happy", "for", "you", ","]
(c27-0 / happy-01
       :ARG1 (c27-1 / you))

# ::snt I legit thought Darren was gay... Wow
# ::tokens ["I", "legit", "thought", "Darren", "was", "gay", "...", "Wow"]
# ::lemmas ["i", "legit", "think", "Darren", "be", "gay", "...", "wow"]
(c28-5 / think-01
       :ARG0 (c28-4 / i)
       :ARG1 (c28-6 / gay-01
                    :ARG1 (c28-1 / person
                                 :name (c28-0 / name
                                              :op1 "Darren")))
       :ARG1-of (c28-2 / legit-02)
       :ARG0-of (c28-3 / wow-01))

# ::snt Aaah non sorry
# ::tokens ["Aaah", "non", "sorry"]
# ::lemmas ["Aaah", "non", "sorry"]
(c30-1 / sorry-01
       :mod (c30-0 / ah
                   :mode expressive)
       :polarity -)

# ::snt About Time
# ::tokens ["About", "Time"]
# ::lemmas ["about", "Time"]
(c32-1 / about
       :op1 (c32-0 / time))

# ::snt Invented love
# ::tokens ["Invented", "love"]
# ::lemmas ["invent", "love"]
(c33-1 / invent-01
       :ARG1 (c33-0 / love-01))

# ::snt THE engagement announcement over the weekend!!!!
# ::tokens ["THE", "engagement", "announcement", "over", "the", "weekend", "!", "!", "!", "!"]
# ::lemmas ["the", "engagement", "announcement", "over", "the", "weekend", "!", "!", "!", "!"]
(c34-2 / announce-01
       :ARG1 (c34-1 / engagement-02)
       :time (c34-0 / weekend))

# ::snt This could be the first time I've been surprised when someone came out as straight...
# ::tokens ["This", "could", "be", "the", "first", "time", "I", "'ve", "been", "surprised", "when", "someone", "came", "out", "as", "straight", "..."]
# ::lemmas ["this", "could", "be", "the", "first", "time", "i", "'ve", "be", "surprised", "when", "someone", "come", "out", "as", "straight", "..."]
(c35-3 / possible-01
       :ARG1 (c35-0 / ordinal-entity
                    :ord-of (c35-2 / surprise-01
                                   :ARG0 (c35-4 / come-out-09
                                                :ARG1 (c35-1 / someone)
                                                :manner (c35-7 / straight-05
                                                               :ARG1 c35-1))
                                   :ARG1 (c35-5 / i))
                    :domain (c35-6 / this)
                    :value 1))

# ::snt no i dont want that day to come, too painful to watch tbh
# ::tokens ["no", "i", "do", "nt", "want", "that", "day", "to", "come", ",", "too", "painful", "to", "watch", "tbh"]
# ::lemmas ["no", "i", "do", "not", "want", "that", "day", "to", "come", ",", "too", "painful", "to", "watch", "tbh"]
(c36-8 / and
       :op1 (c36-3 / want-01
                   :ARG0 (c36-7 / i)
                   :ARG1 (c36-4 / come-01
                                :ARG1 (c36-9 / day
                                             :mod (c36-6 / that)))
                   :polarity -)
       :op2 (c36-0 / have-degree-91
                   :ARG1 c36-9
                   :ARG2 (c36-1 / pain-01
                                :ARG0 c36-9)
                   :ARG3 (c36-10 / too)
                   :ARG6 (c36-2 / watch-01
                                :ARG1 c36-9
                                :ARG1-of (c36-5 / honest-01
                                                :ARG0 c36-7))))

# ::snt HE IS
# ::tokens ["HE", "IS"]
# ::lemmas ["he", "be"]
(c37-0 / he)

# ::snt I'm so disappointed with this &gt;
# ::tokens ["I", "'m", "so", "disappointed", "with", "this", "&", "gt", ";"]
# ::lemmas ["i", "be", "so", "disappointed", "with", "this", "&", "gt", ";"]
(c38-1 / disappoint-01
       :ARG0 (c38-3 / this)
       :ARG1 (c38-2 / i)
       :degree (c38-0 / so))

# ::snt Congrats!!! Great job in "The Assassination of Gianni Versace."!!!
# ::tokens ["Congrats", "!", "!", "!", "Great", "job", "in", "\"", "The", "Assassination", "of", "Gianni", "Versace", ".", "\"", "!", "!", "!"]
# ::lemmas ["Congrats", "!", "!", "!", "great", "job", "in", "\"", "The", "Assassination", "of", "Gianni", "Versace", ".", "\"", "!", "!", "!"]
(c40-2 / multi-sentence
       :snt1 (c40-4 / congratulate-01
                    :ARG1 (c40-1 / you)
                    :mode expressive)
       :snt2 (c40-5 / job
                    :mod (c40-6 / great)
                    :topic (c40-0 / film
                                  :name (c40-3 / name
                                               :op1 "The"
                                               :op2 " Assassinate"
                                               :op3 "Gianni"
                                               :op4 "Versace."))))

# ::snt What took so long for the proposal
# ::tokens ["What", "took", "so", "long", "for", "the", "proposal"]
# ::lemmas ["what", "take", "so", "long", "for", "the", "proposal"]
(c41-3 / take-10
       :ARG0 (c41-4 / thing)
       :ARG1 (c41-2 / long-03
                    :ARG1 c41-4
                    :degree (c41-0 / so))
       :ARG2 (c41-1 / propose-01))

# ::snt Someone warn
# ::tokens ["Someone", "warn"]
# ::lemmas ["someone", "warn"]
(c42-0 / warn-01
       :ARG0 (c42-1 / someone))

# ::snt Well CONGRATS to them
# ::tokens ["Well", "CONGRATS", "to", "them"]
# ::lemmas ["well", "CONGRATS", "to", "they"]
(c43-2 / accountable-02
       :ARG0 (c43-1 / they)
       :mod (c43-0 / well))

# ::snt Who??
# ::tokens ["Who", "?", "?"]
# ::lemmas ["who", "?", "?"]
(c44-0 / amr-unknown)

# ::snt It's called acting, look it up
# ::tokens ["It", "'s", "called", "acting", ",", "look", "it", "up"]
# ::lemmas ["it", "be", "call", "act", ",", "look", "it", "up"]
(c45-1 / multi-sentence
       :snt1 (c45-3 / call-01
                    :ARG1 (c45-4 / it)
                    :ARG2 (c45-5 / act-02))
       :snt2 (c45-2 / look-up-05
                    :ARG0 (c45-0 / you)
                    :ARG1 c45-5
                    :mode imperative))

# ::snt Wait what? Hes not gay?
# ::tokens ["Wait", "what", "?", "He", "s", "not", "gay", "?"]
# ::lemmas ["wait", "what", "?", "he", "s", "not", "gay", "?"]
(c46-1 / multi-sentence
       :snt1 (c46-3 / wait-01
                    :ARG1 (c46-0 / you)
                    :ARG2 (c46-4 / amr-unknown)
                    :mode imperative)
       :snt2 (c46-5 / gay-01
                    :ARG1 (c46-2 / he)
                    :polarity -))

# ::snt There goes another ship.
# ::tokens ["There", "goes", "another", "ship", "."]
# ::lemmas ["there", "go", "another", "ship", "."]
(c48-0 / go-01
       :ARG1 (c48-3 / ship
                    :mod (c48-1 / another))
       :direction (c48-2 / there))

# ::snt A-what? Cool. Congrats Darren!
# ::tokens ["A", "-", "what", "?", "Cool", ".", "Congrats", "Darren", "!"]
# ::lemmas ["a", "-", "what", "?", "cool", ".", "Congrats", "Darren", "!"]
(c49-0 / multi-sentence
       :snt1 (c49-4 / amr-unknown)
       :snt2 (c49-3 / cool-04)
       :snt3 (c49-5 / congratulate-01
                    :ARG1 (c49-2 / person
                                 :name (c49-1 / name
                                              :op1 "Darren"))))

# ::snt He never came out. She's his beard.
# ::tokens ["He", "never", "came", "out", ".", "She", "'s", "his", "beard", "."]
# ::lemmas ["he", "never", "come", "out", ".", "she", "be", "his", "beard", "."]
(c50-1 / multi-sentence
       :snt1 (c50-5 / come-out-09
                    :ARG1 (c50-4 / he)
                    :time (c50-3 / ever)
                    :polarity -)
       :snt2 (c50-0 / beard
                    :poss (c50-6 / he)
                    :domain (c50-2 / she)))
