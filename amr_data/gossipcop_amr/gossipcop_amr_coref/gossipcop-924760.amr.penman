# ::snt mmmm..... e_eah mentira
# ::tokens ["mmmm", ".....", "e_eah", "mentira"]
# ::lemmas ["mmmm", ".....", "e_eah", "mentira"]
(c1-3 / say-01
      :ARG1 (c1-1 / hmm
                  :mode expressive)
      :ARG2 (c1-2 / person
                  :name (c1-0 / name
                              :op1 "e_eah"
                              :op2 " mentira")))

# ::snt Omg that's good her fans must be happy. ughhh if only things like this happened in Korea all those weirdo's will have ended up like this too
# ::tokens ["Omg", "that", "'s", "good", "her", "fans", "must", "be", "happy", ".", "ughhh", "if", "only", "things", "like", "this", "happened", "in", "Korea", "all", "those", "weirdo", "'s", "will", "have", "ended", "up", "like", "this", "too"]
# ::lemmas ["Omg", "that", "be", "good", "her", "fan", "must", "be", "happy", ".", "ughhh", "if", "only", "thing", "like", "this", "happen", "in", "Korea", "all", "those", "weirdo", "'s", "will", "have", "end", "up", "like", "this", "too"]
(c2-11 / multi-sentence
       :snt1 (c2-7 / good-02
                   :ARG1 (c2-6 / that)
                   :mod (c2-3 / oh-my-god
                              :mode expressive))
       :snt2 (c2-10 / obligate-01
                    :ARG1 (c2-4 / happy-01
                                :ARG1 (c2-15 / fan
                                             :poss (c2-0 / she))))
       :snt3 (c2-20 / have-condition-91
                    :ARG1 (c2-18 / end-up-03
                                 :ARG1 (c2-19 / weirdo
                                              :mod (c2-13 / that)
                                              :mod (c2-5 / all))
                                 :ARG2 (c2-17 / resemble-01
                                              :ARG1 c2-19
                                              :ARG2 (c2-21 / this))
                                 :mod (c2-1 / too))
                    :ARG2 (c2-8 / event
                                :location (c2-12 / country
                                                 :name (c2-16 / name
                                                              :op1 "Korea"))
                                :mod (c2-22 / only)
                                :ARG1-of (c2-2 / resemble-01
                                               :ARG2 (c2-9 / this)))
                    :mod (c2-14 / ugh
                                :mode expressive)))

# ::snt no habrs sido tu ese ?
# ::tokens ["no", "habrs", "sido", "tu", "ese", "?"]
# ::lemmas ["no", "habrs", "sido", "tu", "ese", "?"]
(c3-0 / request-confirmation-91
      :ARG1 (c3-3 / sido-00
                  :ARG0 (c3-2 / you)
                  :ARG1 (c3-1 / ese)))

# ::snt I thought you were her stalker..when you were asking if someone got her pre cd ..
# ::tokens ["I", "thought", "you", "were", "her", "stalker", "..", "when", "you", "were", "asking", "if", "someone", "got", "her", "pre", "cd", ".."]
# ::lemmas ["i", "think", "you", "be", "her", "stalker", "..", "when", "you", "be", "ask", "if", "someone", "get", "her", "pre", "cd", ".."]
(c5-3 / multi-sentence
      :snt1 (c5-10 / think-01
                   :ARG0 (c5-9 / i)
                   :ARG1 (c5-5 / stalker
                               :domain (c5-2 / you)
                               :poss (c5-0 / she)))
      :snt2 (c5-1 / be-temporally-at-91
                  :ARG1 (c5-7 / ask-01
                              :ARG0 (c5-11 / you)
                              :ARG1 (c5-13 / truth-value
                                           :polarity-of (c5-4 / get-01
                                                              :ARG0 (c5-14 / someone)
                                                              :ARG1 (c5-12 / disc
                                                                           :mod (c5-8 / pre)
                                                                           :poss (c5-6 / she))))
                              :ARG2-of c5-1)
                  :ARG0 c5-11))

# ::snt While taylor swift is a horrible nasty woman she doesnt deserve to be stalked. Hope she gets it figured out
# ::tokens ["While", "taylor", "swift", "is", "a", "horrible", "nasty", "woman", "she", "does", "nt", "deserve", "to", "be", "stalked", ".", "Hope", "she", "gets", "it", "figured", "out"]
# ::lemmas ["while", "taylor", "swift", "be", "a", "horrible", "nasty", "woman", "she", "do", "not", "deserve", "to", "be", "stalk", ".", "hope", "she", "get", "it", "figure", "out"]
(c6-3 / multi-sentence
      :snt1 (c6-11 / deserve-01
                   :ARG0 (c6-6 / person
                               :name (c6-2 / name
                                           :op1 "Taylor"
                                           :op2 "Swift"))
                   :ARG1 (c6-4 / stalk-02
                               :ARG1 c6-6)
                   :concession (c6-8 / woman
                                     :mod (c6-5 / nasty)
                                     :mod (c6-7 / horrible)
                                     :domain c6-6)
                   :polarity -)
      :snt2 (c6-9 / hope-01
                  :ARG1 (c6-0 / figure-out-05
                              :ARG0 (c6-1 / she)
                              :ARG1 (c6-10 / it))))

# ::snt Kanye west
# ::tokens ["Kanye", "west"]
# ::lemmas ["Kanye", "west"]
(c7-1 / person
      :name (c7-0 / name
                  :op1 "Kanye"
                  :op2 "West"))

# ::snt I guess she doesnt have enough money for security.
# ::tokens ["I", "guess", "she", "does", "nt", "have", "enough", "money", "for", "security", "."]
# ::lemmas ["i", "guess", "she", "do", "not", "have", "enough", "money", "for", "security", "."]
(c8-7 / guess-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-4 / have-03
                  :ARG0 (c8-2 / she)
                  :ARG1 (c8-1 / money
                              :ARG1-of (c8-5 / have-quant-91
                                             :ARG3 (c8-3 / enough)
                                             :ARG6 (c8-0 / secure-02
                                                         :ARG1 c8-2)))
                  :polarity -))

# ::snt Ball dropped big time for pete's sake what about her family ?!
# ::tokens ["Ball", "dropped", "big", "time", "for", "pete", "'s", "sake", "what", "about", "her", "family", "?", "!"]
# ::lemmas ["ball", "drop", "big", "time", "for", "pete", "'s", "sake", "what", "about", "her", "family", "?", "!"]
(c9-10 / drop-05
       :ARG1 (c9-2 / ball)
       :mod (c9-6 / big-time)
       :purpose (c9-5 / sake
                      :poss (c9-7 / person
                                  :name (c9-3 / name
                                              :op1 "Pete")))
       :ARG2 (c9-9 / amr-unknown
                   :topic (c9-0 / family
                                :ARG1-of (c9-8 / have-org-role-91
                                               :ARG0 (c9-1 / she)
                                               :ARG2 (c9-4 / member)))))

# ::snt That was literally meant for the stalker, hence "it's what HE deserves"
# ::tokens ["That", "was", "literally", "meant", "for", "the", "stalker", ",", "hence", "\"", "it", "'s", "what", "HE", "deserves", "\""]
# ::lemmas ["that", "be", "literally", "mean", "for", "the", "stalker", ",", "hence", "\"", "it", "be", "what", "he", "deserve", "\""]
(c10-0 / mean-02
       :ARG1 (c10-5 / that)
       :ARG2 (c10-1 / stalker)
       :manner (c10-2 / literal)
       :ARG0-of (c10-3 / cause-01
                       :ARG1 (c10-6 / deserve-01
                                    :ARG0 c10-1
                                    :ARG1 (c10-4 / it))))

# ::snt Ohmygod!! How dare him to do that!
# ::tokens ["Ohmygod", "!", "!", "How", "dare", "him", "to", "do", "that", "!"]
# ::lemmas ["Ohmygod", "!", "!", "how", "dare", "he", "to", "do", "that", "!"]
(c12-4 / dare-01
       :ARG1 (c12-0 / he)
       :ARG2 (c12-1 / do-02
                    :ARG0 c12-0
                    :ARG1 (c12-2 / that))
       :manner (c12-3 / amr-unknown)
       :mode expressive)

# ::snt even if yall dont like taylor she doesnt deserve THAT
# ::tokens ["even", "if", "y", "all", "do", "nt", "like", "taylor", "she", "does", "nt", "deserve", "THAT"]
# ::lemmas ["even", "if", "you", "all", "do", "not", "like", "taylor", "she", "do", "not", "deserve", "that"]
(c13-4 / have-concession-91
       :ARG1 (c13-8 / deserve-01
                    :ARG0 (c13-5 / person
                                 :name (c13-1 / name
                                              :op1 "Taylor"))
                    :ARG1 (c13-7 / that)
                    :polarity -)
       :ARG2 (c13-3 / even-if
                    :op1 (c13-6 / dislike-01
                                :ARG0 (c13-0 / you
                                             :mod (c13-2 / all))
                                :ARG1 c13-5)))

# ::snt Iconic
# ::tokens ["Iconic"]
# ::lemmas ["iconic"]
(c14-0 / Iconic)

# ::snt I would have been so scared, poor Taylor
# ::tokens ["I", "would", "have", "been", "so", "scared", ",", "poor", "Taylor"]
# ::lemmas ["i", "would", "have", "be", "so", "scared", ",", "poor", "Taylor"]
(c15-3 / say-01
       :ARG0 (c15-5 / i)
       :ARG1 (c15-0 / scare-01
                    :ARG1 c15-5
                    :degree (c15-6 / so))
       :ARG2 (c15-4 / person
                    :name (c15-1 / name
                                 :op1 "Taylor")
                    :mod (c15-2 / poor)))

# ::snt just kidding
# ::tokens ["just", "kidding"]
# ::lemmas ["just", "kid"]
(c16-1 / kid-01
       :ARG0 (c16-2 / i)
       :mod (c16-0 / just))

# ::snt its what he deserves
# ::tokens ["its", "what", "he", "deserves"]
# ::lemmas ["its", "what", "he", "deserve"]
(c17-2 / thing
       :ARG1-of (c17-0 / deserve-01
                       :ARG0 (c17-1 / he)))

# ::snt You think You should wish a dead for someone who Did nothing to you? Why are you so Wretch?
# ::tokens ["You", "think", "You", "should", "wish", "a", "dead", "for", "someone", "who", "Did", "nothing", "to", "you", "?", "Why", "are", "you", "so", "Wretch", "?"]
# ::lemmas ["you", "think", "you", "should", "wish", "a", "dead", "for", "someone", "who", "do", "nothing", "to", "you", "?", "why", "be", "you", "so", "Wretch", "?"]
(c18-1 / multi-sentence
       :snt1 (c18-11 / think-01
                     :ARG0 (c18-0 / you)
                     :ARG1 (c18-4 / recommend-01
                                  :ARG1 (c18-7 / wish-01
                                               :ARG0 c18-0
                                               :ARG1 (c18-13 / die-01)
                                               :ARG2 (c18-3 / someone
                                                            :ARG0-of (c18-8 / do-02
                                                                            :ARG1 (c18-5 / anything)
                                                                            :ARG2 c18-0
                                                                            :polarity -)))))
       :snt2 (c18-9 / cause-01
                    :ARG0 (c18-10 / amr-unknown)
                    :ARG1 (c18-6 / person
                                 :name (c18-2 / name
                                              :op1 "Wretch")
                                 :domain (c18-12 / you))))

# ::snt You mean he?
# ::tokens ["You", "mean", "he", "?"]
# ::lemmas ["you", "mean", "he", "?"]
(c19-1 / mean-01
       :polarity (c19-3 / amr-unknown)
       :ARG0 (c19-0 / you)
       :ARG2 (c19-2 / he))

# ::snt Do you think you should Wish a dead for someone who Did nothing to you?
# ::tokens ["Do", "you", "think", "you", "should", "Wish", "a", "dead", "for", "someone", "who", "Did", "nothing", "to", "you", "?"]
# ::lemmas ["do", "you", "think", "you", "should", "wish", "a", "dead", "for", "someone", "who", "do", "nothing", "to", "you", "?"]
(c20-6 / think-01
       :polarity (c20-7 / amr-unknown)
       :ARG0 (c20-0 / you)
       :ARG1 (c20-3 / recommend-01
                    :ARG1 (c20-4 / wish-01
                                 :ARG0 c20-0
                                 :ARG1 (c20-8 / die-01)
                                 :beneficiary (c20-2 / someone
                                                     :ARG0-of (c20-5 / do-02
                                                                     :ARG1 (c20-1 / nothing)
                                                                     :ARG2 c20-0)))))

# ::snt Its what he deserves
# ::tokens ["Its", "what", "he", "deserves"]
# ::lemmas ["its", "what", "he", "deserve"]
(c22-2 / thing
       :ARG1-of (c22-0 / deserve-01
                       :ARG0 (c22-1 / he)))

# ::snt The fuck is wrong with you?
# ::tokens ["The", "fuck", "is", "wrong", "with", "you", "?"]
# ::lemmas ["the", "fuck", "be", "wrong", "with", "you", "?"]
(c23-0 / wrong-02
       :ARG1 (c23-3 / amr-unknown)
       :ARG2 (c23-2 / you)
       :mod (c23-1 / fuck
                   :mode expressive))

# ::snt MAYBE YOU SNAPPED
# ::tokens ["MAYBE", "YOU", "SNAPPED"]
# ::lemmas ["maybe", "you", "snapped"]
(c24-2 / SNAPP-00
       :ARG1 (c24-1 / you)
       :time (c24-0 / date-entity
                    :month 5))

# ::snt Shes a skinny And thicc legend wig
# ::tokens ["She", "s", "a", "skinny", "And", "thicc", "legend", "wig"]
# ::lemmas ["she", "s", "a", "skinny", "and", "thicc", "legend", "wig"]
(c25-2 / have-mod-91
       :ARG1 (c25-5 / he)
       :ARG2 (c25-4 / wig
                    :mod (c25-7 / and
                                :op1 (c25-1 / skinny)
                                :op2 (c25-3 / legend
                                            :mod (c25-6 / thing
                                                        :name (c25-0 / name
                                                                     :op1 "thicc"))))))

# ::snt What is probation?
# ::tokens ["What", "is", "probation", "?"]
# ::lemmas ["what", "be", "probation", "?"]
(c26-0 / probation
       :domain (c26-1 / amr-unknown))

# ::snt Wow!! Compared to that.475 .unhealthy amout of pics. Is nothing!!
# ::tokens ["Wow", "!", "!", "Compared", "to", "that.475", ".unhealthy", "amout", "of", "pics", ".", "Is", "nothing", "!", "!"]
# ::lemmas ["wow", "!", "!", "compare", "to", "that.475", ".unhealthy", "amout", "of", "pic", ".", "be", "nothing", "!", "!"]
(c27-1 / multi-sentence
       :snt1 (c27-6 / wow-01
                    :mode expressive)
       :snt2 (c27-0 / out-06
                    :ARG1 (c27-5 / person
                                 :mod (c27-4 / healthy
                                             :polarity -)
                                 :quant 475)
                    :ARG2 (c27-2 / pic))
       :snt3 (c27-3 / nothing
                    :mode expressive))

# ::snt You're disgusting
# ::tokens ["You", "'re", "disgusting"]
# ::lemmas ["you", "be", "disgusting"]
(c28-0 / disgust-01
       :ARG0 (c28-1 / you))

# ::snt that creep needs to be behind bars and stay there.
# ::tokens ["that", "creep", "needs", "to", "be", "behind", "bars", "and", "stay", "there", "."]
# ::lemmas ["that", "creep", "need", "to", "be", "behind", "bar", "and", "stay", "there", "."]
(c29-0 / obligate-01
       :ARG2 (c29-3 / and
                    :op1 (c29-6 / imprison-01
                                :ARG1 (c29-5 / creep
                                             :mod (c29-7 / that))
                                :location (c29-1 / behind
                                                 :op1 (c29-4 / bar)))
                    :op2 (c29-2 / stay-01
                                :ARG1 c29-5
                                :location c29-1)))

# ::snt Delete your account.
# ::tokens ["Delete", "your", "account", "."]
# ::lemmas ["Delete", "your", "account", "."]
(c30-0 / delete-01
       :ARG0 (c30-1 / you)
       :ARG1 (c30-2 / account
                    :poss c30-1)
       :mode imperative)

# ::snt this is terrifying
# ::tokens ["this", "is", "terrifying"]
# ::lemmas ["this", "be", "terrify"]
(c31-1 / terrify-01
       :ARG0 (c31-0 / this))

# ::snt You say this stupidness and don't even use proper grammar
# ::tokens ["You", "say", "this", "stupidness", "and", "do", "n't", "even", "use", "proper", "grammar"]
# ::lemmas ["you", "say", "this", "stupidness", "and", "do", "not", "even", "use", "proper", "grammar"]
(c32-3 / and
       :op1 (c32-2 / say-01
                   :ARG0 (c32-1 / you)
                   :ARG1 (c32-0 / stupidness
                                :mod (c32-6 / this)))
       :op2 (c32-8 / use-01
                   :ARG0 c32-1
                   :ARG1 (c32-7 / grammar
                                :mod (c32-5 / proper))
                   :mod (c32-4 / even)
                   :polarity -))

# ::snt Her safety is important thank god
# ::tokens ["Her", "safety", "is", "important", "thank", "god"]
# ::lemmas ["her", "safety", "be", "important", "thank", "god"]
(c33-4 / important-01
       :ARG1 (c33-2 / safe-01
                    :ARG1 (c33-0 / she))
       :ARG2-of (c33-5 / thank-01
                       :ARG1 (c33-3 / person
                                    :name (c33-1 / name
                                                 :op1 "God"))))

# ::snt I realize that theyre old and even though her weight is more, shes still pretty skinny and yes she looks amazing
# ::tokens ["I", "realize", "that", "they", "re", "old", "and", "even", "though", "her", "weight", "is", "more", ",", "she", "s", "still", "pretty", "skinny", "and", "yes", "she", "looks", "amazing"]
# ::lemmas ["i", "realize", "that", "they", "re", "old", "and", "even", "though", "her", "weight", "be", "more", ",", "she", "s", "still", "pretty", "skinny", "and", "yes", "she", "look", "amazing"]
(c34-5 / and
       :op1 (c34-4 / realize-01
                   :ARG0 (c34-11 / i)
                   :ARG1 (c34-0 / old
                                :domain (c34-12 / they)))
       :op2 (c34-13 / and
                    :op1 (c34-3 / skinny
                                :degree (c34-7 / pretty)
                                :domain (c34-1 / she)
                                :mod (c34-14 / still))
                    :op2 (c34-8 / look-02
                                :ARG0 c34-1
                                :ARG1 (c34-10 / amazing))
                    :concession (c34-6 / have-quant-91
                                       :ARG1 (c34-9 / weight
                                                    :poss c34-1)
                                       :ARG3 (c34-2 / more))))

# ::snt I hope you and your loved ones are always safe and never have to be afraid for your safety and lives. Bless you.
# ::tokens ["I", "hope", "you", "and", "your", "loved", "ones", "are", "always", "safe", "and", "never", "have", "to", "be", "afraid", "for", "your", "safety", "and", "lives", ".", "Bless", "you", "."]
# ::lemmas ["i", "hope", "you", "and", "your", "love", "one", "be", "always", "safe", "and", "never", "have", "to", "be", "afraid", "for", "your", "safety", "and", "life", ".", "bless", "you", "."]
(c35-13 / multi-sentence
        :snt1 (c35-5 / hope-01
                     :ARG0 (c35-17 / i)
                     :ARG1 (c35-8 / and
                                  :op1 (c35-0 / safe-01
                                              :ARG1 (c35-7 / and
                                                           :op1 (c35-4 / you)
                                                           :op2 (c35-2 / one
                                                                       :ARG1-of (c35-1 / love-01
                                                                                       :ARG0 c35-4)))
                                              :time (c35-6 / always))
                                  :op2 (c35-11 / obligate-01
                                               :ARG1 (c35-18 / and
                                                             :op1 c35-4
                                                             :op2 c35-2)
                                               :ARG2 (c35-14 / fear-01
                                                             :ARG0 c35-18
                                                             :ARG1 (c35-16 / and
                                                                           :op1 (c35-3 / safe-01
                                                                                       :ARG1 c35-4)
                                                                           :op2 (c35-10 / life
                                                                                        :poss c35-4)))
                                               :time (c35-15 / ever)
                                               :polarity -)))
        :snt2 (c35-12 / bless-01
                      :ARG1 (c35-9 / you)))

# ::snt Who exactly has she sued? She countersues when she has no other choice, the state actually charges and prosecutes criminals like stalkers, please educate yourself honey
# ::tokens ["Who", "exactly", "has", "she", "sued", "?", "She", "countersues", "when", "she", "has", "no", "other", "choice", ",", "the", "state", "actually", "charges", "and", "prosecutes", "criminals", "like", "stalkers", ",", "please", "educate", "yourself", "honey"]
# ::lemmas ["who", "exactly", "have", "she", "sue", "?", "she", "countersue", "when", "she", "have", "no", "other", "choice", ",", "the", "state", "actually", "charge", "and", "prosecute", "criminal", "like", "stalker", ",", "please", "educate", "yourself", "honey"]
(c36-16 / multi-sentence
        :snt1 (c36-0 / sue-02
                     :ARG0 (c36-5 / she)
                     :ARG1 (c36-12 / amr-unknown
                                   :mod (c36-21 / exact)))
        :snt2 (c36-18 / contrast-01
                      :ARG1 (c36-15 / counters-01
                                    :ARG0 (c36-4 / she)
                                    :time (c36-9 / have-03
                                                 :ARG0 c36-4
                                                 :ARG1 (c36-2 / choose-01
                                                              :ARG0 c36-4
                                                              :mod (c36-6 / other))
                                                 :polarity -))
                      :ARG2 (c36-11 / and
                                    :op1 (c36-19 / charge-05
                                                 :ARG0 (c36-20 / state)
                                                 :ARG1 (c36-22 / person
                                                               :ARG2-of (c36-7 / criminal-03)
                                                               :example (c36-17 / person
                                                                                :ARG0-of (c36-1 / stalk-02)))
                                                 :ARG1-of (c36-10 / actual-02))
                                    :op2 (c36-3 / prosecute-01
                                                :ARG0 c36-20
                                                :ARG1 c36-22)))
        :snt3 (c36-14 / educate-01
                      :ARG0 (c36-8 / you)
                      :ARG1 (c36-13 / you)
                      :mod (c36-23 / honey)
                      :mode imperative
                      :polite +))

# ::snt ?????
# ::tokens ["?", "?", "?", "?", "?"]
# ::lemmas ["?", "?", "?", "?", "?"]
(c37-0 / amr-unknown)

# ::snt Ewww what a disgusting person. Get away from social media, toxic people like you should be with a psychiatrists. Imagine wishing a rape to another person. Can't relate
# ::tokens ["Ewww", "what", "a", "disgusting", "person", ".", "Get", "away", "from", "social", "media", ",", "toxic", "people", "like", "you", "should", "be", "with", "a", "psychiatrists", ".", "Imagine", "wishing", "a", "rape", "to", "another", "person", ".", "Ca", "n't", "relate"]
# ::lemmas ["Ewww", "what", "a", "disgusting", "person", ".", "get", "away", "from", "social", "medium", ",", "toxic", "people", "like", "you", "should", "be", "with", "a", "psychiatrist", ".", "imagine", "wish", "a", "rape", "to", "another", "person", ".", "can", "not", "relate"]
(c38-15 / multi-sentence
        :snt1 (c38-21 / person
                      :ARG0-of (c38-24 / disgust-01)
                      :mod (c38-20 / ewww
                                   :mode expressive))
        :snt2 (c38-12 / get-05
                      :ARG0 (c38-5 / you
                                   :ARG1-of c38-12)
                      :ARG2 (c38-11 / away
                                    :op1 (c38-6 / media
                                                :mod (c38-1 / social)))
                      :ARG1-of (c38-18 / cause-01
                                       :ARG0 (c38-19 / recommend-01
                                                     :ARG1 (c38-8 / accompany-01
                                                                  :ARG0 (c38-16 / psychiatrist)
                                                                  :ARG1 (c38-3 / person
                                                                               :mod (c38-9 / toxic)
                                                                               :ARG1-of (c38-4 / resemble-01
                                                                                               :ARG2 c38-5)))))
                      :mode imperative)
        :snt3 (c38-23 / imagine-01
                      :ARG0 (c38-10 / you)
                      :ARG1 (c38-22 / wish-01
                                    :ARG0 c38-10
                                    :ARG1 (c38-17 / rape-01
                                                  :ARG1 (c38-2 / person
                                                               :mod (c38-7 / another))))
                      :mode imperative)
        :snt4 (c38-13 / possible-01
                      :ARG1 (c38-0 / relate-01
                                   :ARG2 (c38-14 / event))
                      :polarity -))

# ::snt Thats creepy
# ::tokens ["That", "s", "creepy"]
# ::lemmas ["that", "s", "creepy"]
(c39-0 / creepy-04
       :ARG0 (c39-1 / that))

# ::snt Probation?????? He need jail time!!
# ::tokens ["Probation", "?", "?", "?", "?", "?", "?", "He", "need", "jail", "time", "!", "!"]
# ::lemmas ["Probation", "?", "?", "?", "?", "?", "?", "he", "need", "jail", "time", "!", "!"]
(c40-1 / multi-sentence
       :snt1 (c40-3 / prove-01
                    :polarity (c40-6 / amr-unknown))
       :snt2 (c40-0 / need-01
                    :ARG0 (c40-2 / he)
                    :ARG1 (c40-4 / time
                                 :location (c40-5 / jail))))

# ::snt Sis delete.
# ::tokens ["Sis", "delete", "."]
# ::lemmas ["Sis", "delete", "."]
(c42-0 / delete-01
       :mod (c42-1 / this))

# ::snt rot in jail. Evil!
# ::tokens ["rot", "in", "jail", ".", "Evil", "!"]
# ::lemmas ["rot", "in", "jail", ".", "evil", "!"]
(c43-2 / multi-sentence
       :snt1 (c43-0 / rot-01
                    :location (c43-1 / jail))
       :snt2 (c43-3 / evil
                    :mode expressive))

# ::snt i hope he will die soon
# ::tokens ["i", "hope", "he", "will", "die", "soon"]
# ::lemmas ["i", "hope", "he", "will", "die", "soon"]
(c44-1 / hope-01
       :ARG0 (c44-3 / i)
       :ARG1 (c44-4 / die-01
                    :ARG1 (c44-2 / he)
                    :time (c44-0 / soon)))

# ::snt Don't forget that a fan killed John Lennon. I will never understand this kind of people, I love the queen but wouldn't do that... take my money, see you in concerts sis, but nothing more. Poor taylor.
# ::tokens ["Do", "n't", "forget", "that", "a", "fan", "killed", "John", "Lennon", ".", "I", "will", "never", "understand", "this", "kind", "of", "people", ",", "I", "love", "the", "queen", "but", "would", "n't", "do", "that", "...", "take", "my", "money", ",", "see", "you", "in", "concerts", "sis", ",", "but", "nothing", "more", ".", "Poor", "taylor", "."]
# ::lemmas ["do", "not", "forget", "that", "a", "fan", "kill", "John", "Lennon", ".", "i", "will", "never", "understand", "this", "kind", "of", "people", ",", "i", "love", "the", "queen", "but", "would", "not", "do", "that", "...", "take", "my", "money", ",", "see", "you", "in", "concert", "sis", ",", "but", "nothing", "more", ".", "poor", "taylor", "."]
(c45-13 / multi-sentence
        :snt1 (c45-22 / forget-01
                      :ARG0 (c45-5 / you)
                      :ARG1 (c45-7 / kill-01
                                   :ARG0 (c45-26 / fan)
                                   :ARG1 (c45-25 / person
                                                 :name (c45-23 / name
                                                               :op1 "John"
                                                               :op2 "Lennon")))
                      :polarity -
                      :mode imperative)
        :snt2 (c45-16 / contrast-01
                      :ARG1 (c45-19 / understand-01
                                    :ARG0 (c45-28 / i)
                                    :ARG1 (c45-14 / person
                                                  :mod (c45-18 / kind
                                                               :mod (c45-10 / this)))
                                    :time (c45-24 / ever)
                                    :polarity -)
                      :ARG2 (c45-1 / love-01
                                   :ARG0 c45-28
                                   :ARG1 (c45-8 / queen)
                                   :ARG1-of (c45-12 / contrast-01
                                                    :ARG2 (c45-29 / do-02
                                                                  :ARG0 c45-28
                                                                  :ARG1 c45-1
                                                                  :polarity -))))
        :snt3 (c45-9 / and
                     :op1 (c45-17 / take-01
                                  :ARG0 (c45-11 / you)
                                  :ARG1 (c45-6 / money
                                               :poss c45-28)
                                  :mode imperative)
                     :op2 (c45-0 / see-01
                                 :ARG0 c45-11
                                 :ARG1 c45-11
                                 :location (c45-3 / concert)
                                 :ARG1-of (c45-21 / contrast-01
                                                  :ARG2 (c45-15 / nothing
                                                                :mod (c45-20 / more)))
                                 :mode imperative))
        :snt4 (c45-4 / person
                     :name (c45-27 / name
                                   :op1 "taylor")
                     :mod (c45-2 / poor)))

# ::snt queen of winning legal disputes lmao
# ::tokens ["queen", "of", "winning", "legal", "disputes", "lmao"]
# ::lemmas ["queen", "of", "win", "legal", "dispute", "lmao"]
(c46-1 / lame
       :domain (c46-2 / win-01
                      :ARG2 (c46-5 / dispute-01
                                   :ARG2 (c46-6 / law)))
       :ARG2-of (c46-0 / laugh-01
                       :ARG0 (c46-4 / i)
                       :manner (c46-3 / loud)
                       :mode expressive))

# ::snt wbk sis!
# ::tokens ["wbk", "sis", "!"]
# ::lemmas ["wbk", "sis", "!"]
(c47-2 / sis
       :domain (c47-1 / person
                      :name (c47-0 / name
                                   :op1 "wbk"))
       :mode expressive)

# ::snt She skinny tho
# ::tokens ["She", "skinny", "tho"]
# ::lemmas ["she", "skinny", "tho"]
(c48-1 / have-concession-91
       :ARG1 (c48-2 / skinny
                    :domain (c48-0 / she)))

# ::snt Im so happy the queen is safe
# ::tokens ["I", "m", "so", "happy", "the", "queen", "is", "safe"]
# ::lemmas ["i", "m", "so", "happy", "the", "queen", "be", "safe"]
(c49-2 / have-degree-91
       :ARG1 (c49-5 / i)
       :ARG2 (c49-3 / happy-01
                    :ARG0 (c49-1 / safe-01
                                 :ARG1 (c49-4 / queen))
                    :ARG1 c49-5)
       :ARG3 (c49-0 / so))

# ::snt woke rekt
# ::tokens ["woke", "rekt"]
# ::lemmas ["wake", "rekt"]
(c50-0 / rekt
       :ARG1-of (c50-1 / oke-01))
