# ::snt Whatever they are young that's what they do..don't want to see it THO
# ::tokens ["Whatever", "they", "are", "young", "that", "'s", "what", "they", "do", "..", "don't", "want", "to", "see", "it", "THO"]
# ::lemmas ["whatever", "they", "be", "young", "that", "be", "what", "they", "do", "..", "don't", "want", "to", "see", "it", "THO"]
(c1-1 / multi-sentence
      :snt1 (c1-9 / do-02
                  :ARG0 (c1-6 / they)
                  :ARG1 (c1-8 / that)
                  :ARG1-of (c1-4 / regardless-91
                                 :ARG2 (c1-0 / young
                                             :domain c1-6)))
      :snt2 (c1-5 / want-01
                  :ARG0 (c1-7 / i)
                  :ARG1 (c1-2 / see-01
                              :ARG0 c1-7
                              :ARG1 (c1-3 / it))
                  :ARG1-of (c1-10 / request-confirmation-91)
                  :polarity -))

# ::snt Why they always have to show naked.....didn't they something in their brains.......................
# ::tokens ["Why", "they", "always", "have", "to", "show", "naked", ".....", "didn't", "they", "something", "in", "their", "brains", "......................."]
# ::lemmas ["why", "they", "always", "have", "to", "show", "naked", ".....", "didn't", "they", "something", "in", "their", "brain", "......................."]
(c2-6 / cause-01
      :ARG0 (c2-5 / amr-unknown)
      :ARG1 (c2-0 / obligate-01
                  :ARG1 (c2-8 / they
                              :part (c2-2 / brain))
                  :ARG2 (c2-4 / show-01
                              :ARG0 c2-8
                              :manner (c2-3 / naked))
                  :time (c2-7 / always))
      :mod (c2-1 / something
                 :location c2-2))

# ::snt Thot they are meant to be naked all the time?
# ::tokens ["Thot", "they", "are", "meant", "to", "be", "naked", "all", "the", "time", "?"]
# ::lemmas ["thot", "they", "be", "mean", "to", "be", "naked", "all", "the", "time", "?"]
(c3-1 / mean-02
      :polarity (c3-2 / amr-unknown)
      :ARG1 (c3-0 / naked
                  :domain (c3-4 / they)
                  :time (c3-5 / time
                              :mod (c3-3 / all))))

# ::snt 's her new job!
# ::tokens ["'s", "her", "new", "job", "!"]
# ::lemmas ["be", "her", "new", "job", "!"]
(c4-1 / job
      :ARG1-of (c4-0 / new-01)
      :poss (c4-3 / she)
      :domain (c4-2 / it))
