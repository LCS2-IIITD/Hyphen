# ::snt He's been messed up on drugs for over a decade
# ::tokens ["He", "'s", "been", "messed", "up", "on", "drugs", "for", "over", "a", "decade"]
# ::lemmas ["he", "be", "be", "mess", "up", "on", "drug", "for", "over", "a", "decade"]
(c1-1 / mess-up-02
      :ARG1 (c1-2 / he)
      :ARG2 (c1-5 / drug)
      :duration (c1-0 / over
                      :op1 (c1-4 / temporal-quantity
                                 :unit (c1-3 / decade)
                                 :quant 1)))

# ::snt What how when oh you are not looking good buddy
# ::tokens ["What", "how", "when", "oh", "you", "are", "not", "looking", "good", "buddy"]
# ::lemmas ["what", "how", "when", "oh", "you", "be", "not", "look", "good", "buddy"]
(c2-5 / amr-unknown
      :time (c2-4 / look-02
                  :ARG0 (c2-2 / you
                              :ARG0-of (c2-3 / have-rel-role-91
                                             :ARG2 (c2-1 / buddy)))
                  :ARG1 (c2-6 / good-02)
                  :mod (c2-0 / oh
                             :mode expressive)
                  :polarity -))

# ::snt He used to be really cute. Remember how hot he was in The s, on Party of Five.
# ::tokens ["He", "used", "to", "be", "really", "cute", ".", "Remember", "how", "hot", "he", "was", "in", "The", "s", ",", "on", "Party", "of", "Five", "."]
# ::lemmas ["he", "use", "to", "be", "really", "cute", ".", "remember", "how", "hot", "he", "be", "in", "the", "s", ",", "on", "Party", "of", "Five", "."]
(c3-2 / multi-sentence
      :snt1 (c3-9 / cute
                  :domain (c3-6 / he)
                  :degree (c3-4 / really)
                  :time (c3-13 / use-03))
      :snt2 (c3-12 / remember-01
                   :ARG0 (c3-1 / you)
                   :ARG1 (c3-11 / thing
                                :degree-of (c3-10 / hot-03
                                                  :ARG1 (c3-5 / he)
                                                  :location (c3-0 / broadcast-program
                                                                  :name (c3-3 / name
                                                                              :op1 "The"
                                                                              :op2 "S"))
                                                  :location (c3-7 / broadcast-program
                                                                  :name (c3-8 / name
                                                                              :op1 "Party"
                                                                              :op2 "of"
                                                                              :op3 "Five"))))
                   :mode imperative))

# ::snt th Heaven folks are something else.
# ::tokens ["th", "Heaven", "folks", "are", "something", "else", "."]
# ::lemmas ["th", "Heaven", "folk", "be", "something", "else", "."]
(c5-3 / something
      :mod (c5-1 / else)
      :domain (c5-0 / folk
                    :mod (c5-2 / heaven
                               :mode expressive)))

# ::snt I had to google to figure out who he is. Yikes.
# ::tokens ["I", "had", "to", "google", "to", "figure", "out", "who", "he", "is", ".", "Yikes", "."]
# ::lemmas ["i", "have", "to", "google", "to", "figure", "out", "who", "he", "be", ".", "yike", "."]
(c6-3 / multi-sentence
      :snt1 (c6-0 / obligate-01
                  :ARG1 (c6-6 / i)
                  :ARG2 (c6-7 / google-01
                              :ARG0 c6-6
                              :purpose (c6-1 / figure-out-05
                                             :ARG0 c6-6
                                             :ARG1 (c6-5 / person
                                                         :domain (c6-4 / he)))))
      :snt2 (c6-2 / yikes))

# ::snt Between this and that Stephen Collins thing, I think a Seventh Heaven reunion show will be impossible, unless they film a lot of it on visitors day.
# ::tokens ["Between", "this", "and", "that", "Stephen", "Collins", "thing", ",", "I", "think", "a", "Seventh", "Heaven", "reunion", "show", "will", "be", "impossible", ",", "unless", "they", "film", "a", "lot", "of", "it", "on", "visitors", "day", "."]
# ::lemmas ["between", "this", "and", "that", "Stephen", "Collins", "thing", ",", "i", "think", "a", "Seventh", "Heaven", "reunion", "show", "will", "be", "impossible", ",", "unless", "they", "film", "a", "lot", "of", "it", "on", "visitor", "day", "."]
(c7-4 / think-01
      :ARG0 (c7-16 / i)
      :ARG1 (c7-14 / possible-01
                   :ARG1 (c7-0 / show-04
                               :ARG1 (c7-13 / reunite-01
                                            :ARG2 (c7-15 / work-of-art
                                                         :name (c7-12 / name
                                                                      :op1 "Seven"
                                                                      :op2 "Heaven"))))
                   :condition (c7-11 / film-01
                                     :ARG0 (c7-10 / they)
                                     :ARG1 (c7-2 / lot
                                                 :part-of c7-0)
                                     :time (c7-18 / day
                                                  :time-of (c7-3 / visit-01)))
                   :polarity -)
      :ARG1-of (c7-9 / cause-01
                     :ARG0 (c7-6 / between
                                 :op1 (c7-17 / this)
                                 :op2 (c7-1 / thing
                                            :mod (c7-7 / person
                                                       :name (c7-8 / name
                                                                   :op1 "Stephen"
                                                                   :op2 "Collins"))
                                            :mod (c7-5 / that)))))

# ::snt Is that TS?
# ::tokens ["Is", "that", "TS", "?"]
# ::lemmas ["be", "that", "ts", "?"]
(c9-2 / person
      :name (c9-1 / name
                  :op1 "TS")
      :domain (c9-3 / that)
      :polarity (c9-0 / amr-unknown))

# ::snt Heaven might have to wait until this case is resolved
# ::tokens ["Heaven", "might", "have", "to", "wait", "until", "this", "case", "is", "resolved"]
# ::lemmas ["Heaven", "might", "have", "to", "wait", "until", "this", "case", "be", "resolve"]
(c10-3 / possible-01
       :ARG1 (c10-0 / obligate-01
                    :ARG1 (c10-2 / heaven)
                    :ARG2 (c10-4 / wait-01
                                 :ARG1 c10-2
                                 :time (c10-7 / until
                                              :op1 (c10-1 / resolve-01
                                                          :ARG1 (c10-5 / case-03
                                                                       :mod (c10-6 / this)))))))

# ::snt Man, time has not been good to him
# ::tokens ["Man", ",", "time", "has", "not", "been", "good", "to", "him"]
# ::lemmas ["man", ",", "time", "have", "not", "be", "good", "to", "he"]
(c11-0 / say-01
       :ARG0 (c11-2 / i)
       :ARG1 (c11-4 / good-04
                    :ARG1 (c11-3 / time)
                    :ARG2 (c11-1 / he
                                 :ARG2-of c11-0)
                    :polarity -))

# ::snt Jeremy London has really hit rock bottom.
# ::tokens ["Jeremy", "London", "has", "really", "hit", "rock", "bottom", "."]
# ::lemmas ["Jeremy", "London", "have", "really", "hit", "rock", "bottom", "."]
(c12-3 / hit-02
       :ARG0 (c12-4 / person
                    :name (c12-1 / name
                                 :op1 "Jeremy"
                                 :op2 "London"))
       :ARG1 (c12-0 / bottom
                    :mod (c12-2 / rock))
       :ARG1-of (c12-5 / real-04))

# ::snt He looks good
# ::tokens ["He", "looks", "good"]
# ::lemmas ["he", "look", "good"]
(c13-2 / look-02
       :ARG0 (c13-1 / he)
       :ARG1 (c13-0 / good-02
                    :ARG1 c13-1))

# ::snt Sad
# ::tokens ["Sad"]
# ::lemmas ["sad"]
(c15-0 / sad-02)

# ::snt O.M.G NOT JEREMY LONDON...now can someone tell me who this looser is...
# ::tokens ["O.M.G", "NOT", "JEREMY", "LONDON", "...", "now", "can", "someone", "tell", "me", "who", "this", "looser", "is", "..."]
# ::lemmas ["O.M.G", "not", "jeremy", "LONDON", "...", "now", "can", "someone", "tell", "i", "who", "this", "looser", "be", "..."]
(c18-1 / multi-sentence
       :snt1 (c18-6 / person
                    :name (c18-0 / name
                                 :op1 "O.M."
                                 :op2 "G")
                    :ARG1-of (c18-12 / instead-of-91
                                     :ARG2 (c18-10 / city
                                                   :name (c18-5 / name
                                                                :op1 "London"))))
       :snt2 (c18-2 / possible-01
                    :ARG1 (c18-13 / tell-01
                                  :ARG0 (c18-3 / someone)
                                  :ARG1 (c18-14 / person
                                                :domain (c18-15 / this
                                                                :ARG1-of (c18-7 / have-degree-91
                                                                                :ARG2 (c18-8 / looser)
                                                                                :ARG3 (c18-9 / more))))
                                  :ARG2 (c18-4 / i))
                    :time (c18-11 / now)))

# ::snt Such a shame that he's still getting busted at . I hope he gets it together, the logical third act won't end well.
# ::tokens ["Such", "a", "shame", "that", "he", "'s", "still", "getting", "busted", "at", ".", "I", "hope", "he", "gets", "it", "together", ",", "the", "logical", "third", "act", "wo", "n't", "end", "well", "."]
# ::lemmas ["such", "a", "shame", "that", "he", "be", "still", "getting", "bust", "at", ".", "i", "hope", "he", "get", "it", "together", ",", "the", "logical", "third", "act", "will", "not", "end", "well", "."]
(c20-3 / multi-sentence
       :snt1 (c20-4 / shame-02
                    :ARG0 (c20-2 / busted-02
                                 :ARG1 (c20-8 / he)
                                 :mod (c20-0 / still))
                    :degree (c20-16 / such))
       :snt2 (c20-12 / hope-01
                     :ARG0 (c20-13 / i)
                     :ARG1 (c20-15 / get-04
                                   :ARG0 (c20-7 / he)
                                   :ARG1 (c20-14 / together
                                                 :domain (c20-5 / it))))
       :snt3 (c20-9 / end-01
                    :ARG1 (c20-6 / act
                                 :ord (c20-1 / ordinal-entity
                                             :value 3)
                                 :mod (c20-10 / logic))
                    :manner (c20-11 / well-09)
                    :polarity -))

# ::snt What has become of his brother Jason? Last I heard he got busted in Arizona and while sitting in the backseat of the police car he defecated in his pants, on purpose.
# ::tokens ["What", "has", "become", "of", "his", "brother", "Jason", "?", "Last", "I", "heard", "he", "got", "busted", "in", "Arizona", "and", "while", "sitting", "in", "the", "backseat", "of", "the", "police", "car", "he", "defecated", "in", "his", "pants", ",", "on", "purpose", "."]
# ::lemmas ["what", "have", "become", "of", "his", "brother", "Jason", "?", "last", "i", "hear", "he", "got", "bust", "in", "Arizona", "and", "while", "sit", "in", "the", "backseat", "of", "the", "police", "car", "he", "defecate", "in", "his", "pant", ",", "on", "purpose", "."]
(c21-14 / multi-sentence
        :snt1 (c21-13 / become-01
                      :ARG1 (c21-10 / amr-unknown)
                      :ARG2 (c21-20 / person
                                    :name (c21-19 / name
                                                  :op1 "Jason")
                                    :ARG0-of (c21-8 / have-rel-role-91
                                                    :ARG1 (c21-21 / he)
                                                    :ARG2 (c21-1 / brother))))
        :snt2 (c21-7 / hear-01
                     :ARG0 (c21-22 / i)
                     :ARG1 (c21-9 / and
                                  :op1 (c21-5 / bust-02
                                              :ARG1 (c21-18 / he)
                                              :location (c21-0 / state
                                                               :name (c21-16 / name
                                                                             :op1 "Arizona")))
                                  :op2 (c21-23 / defecate-01
                                               :ARG0 c21-18
                                               :location (c21-15 / pant
                                                                 :poss c21-18)
                                               :time (c21-6 / sit-01
                                                            :ARG1 c21-18
                                                            :ARG2 (c21-12 / backseat
                                                                          :part-of (c21-17 / car
                                                                                           :mod (c21-4 / police))))
                                               :ARG1-of (c21-11 / cause-01
                                                                :ARG0 (c21-3 / purpose))))
                     :time (c21-2 / last)))

# ::snt Haha totally.
# ::tokens ["Haha", "totally", "."]
# ::lemmas ["Haha", "totally", "."]
(c22-1 / total
       :mod (c22-0 / haha
                   :mode expressive))

# ::snt So gross.
# ::tokens ["So", "gross", "."]
# ::lemmas ["so", "gross", "."]
(c23-0 / gross-05
       :degree (c23-1 / so))

# ::snt Jesus. It's been a long, bumpy ride since Mallrats and Party Of Five.
# ::tokens ["Jesus", ".", "It", "'s", "been", "a", "long", ",", "bumpy", "ride", "since", "Mallrats", "and", "Party", "Of", "Five", "."]
# ::lemmas ["Jesus", ".", "it", "be", "be", "a", "long", ",", "bumpy", "ride", "since", "Mallrats", "and", "Party", "of", "Five", "."]
(c24-2 / multi-sentence
       :snt1 (c24-6 / person
                    :name (c24-1 / name
                                 :op1 "Jesus")
                    :mode expressive)
       :snt2 (c24-4 / ride
                    :ARG1-of (c24-7 / long-03)
                    :mod (c24-0 / bumpy)
                    :domain (c24-10 / it)
                    :time (c24-3 / since
                                 :op1 (c24-11 / and
                                              :op1 (c24-5 / broadcast-program
                                                          :name (c24-8 / name
                                                                       :op1 "Mallrats"))
                                              :op2 (c24-12 / broadcast-program
                                                           :name (c24-9 / name
                                                                        :op1 "Party"
                                                                        :op2 "Of"
                                                                        :op3 "Five"))))))

# ::snt Crap. He looks horrible.
# ::tokens ["Crap", ".", "He", "looks", "horrible", "."]
# ::lemmas ["crap", ".", "he", "look", "horrible", "."]
(c25-0 / multi-sentence
       :snt1 (c25-3 / crap-01)
       :snt2 (c25-2 / look-02
                    :ARG0 (c25-1 / he)
                    :ARG1 (c25-4 / horrible)))

# ::snt Not the first time!
# ::tokens ["Not", "the", "first", "time", "!"]
# ::lemmas ["not", "the", "first", "time", "!"]
(c26-0 / ordinal-entity
       :value 1
       :polarity -)

# ::snt Not looking good
# ::tokens ["Not", "looking", "good"]
# ::lemmas ["not", "look", "good"]
(c27-1 / look-02
       :ARG1 (c27-0 / good-02)
       :polarity -)

# ::snt I am now convinced that the show is Cursed.Way too much weirdness and disturbing news around it.
# ::tokens ["I", "am", "now", "convinced", "that", "the", "show", "is", "Cursed", ".", "Way", "too", "much", "weirdness", "and", "disturbing", "news", "around", "it", "."]
# ::lemmas ["i", "be", "now", "convince", "that", "the", "show", "be", "curse", ".", "way", "too", "much", "weirdness", "and", "disturb", "news", "around", "it", "."]
(c30-1 / multi-sentence
       :snt1 (c30-9 / convince-01
                    :ARG1 (c30-12 / i)
                    :ARG2 (c30-0 / book
                                 :name (c30-2 / name
                                              :op1 "C Cursed")
                                 :domain (c30-3 / show))
                    :time (c30-4 / now))
       :snt2 (c30-13 / and
                     :op1 (c30-10 / weirdness
                                  :ARG1-of (c30-5 / have-quant-91
                                                  :ARG2 (c30-6 / much)
                                                  :ARG3 (c30-11 / too
                                                                :quant (c30-7 / way))))
                     :op2 (c30-8 / news
                                 :ARG0-of (c30-15 / disturb-01)
                                 :location (c30-14 / around
                                                   :op1 c30-3))))

# ::snt Wow if a mugshot alone could lead to a conviction...
# ::tokens ["Wow", "if", "a", "mugshot", "alone", "could", "lead", "to", "a", "conviction", "..."]
# ::lemmas ["wow", "if", "a", "mugshot", "alone", "could", "lead", "to", "a", "conviction", "..."]
(c31-1 / have-condition-91
       :ARG2 (c31-2 / possible-01
                    :ARG1 (c31-3 / lead-03
                                 :ARG0 (c31-0 / mugshot
                                              :mod (c31-6 / alone))
                                 :ARG2 (c31-4 / convict-01)))
       :mod (c31-5 / wow))

# ::snt Second time, second wife. Looks like a pattern. Maybe you ought to get some help.
# ::tokens ["Second", "time", ",", "second", "wife", ".", "Looks", "like", "a", "pattern", ".", "Maybe", "you", "ought", "to", "get", "some", "help", "."]
# ::lemmas ["Second", "time", ",", "second", "wife", ".", "look", "like", "a", "pattern", ".", "maybe", "you", "ought", "to", "get", "some", "help", "."]
(c32-3 / multi-sentence
       :snt1 (c32-7 / person
                    :ARG0-of (c32-6 / have-rel-role-91
                                    :ARG2 (c32-9 / wife
                                                 :ord (c32-0 / ordinal-entity
                                                             :ord-of c32-7
                                                             :value 2)))
                    :value 2)
       :snt2 (c32-8 / look-02
                    :ARG1 (c32-4 / pattern))
       :snt3 (c32-11 / possible-01
                     :ARG1 (c32-1 / obligate-01
                                  :ARG1 (c32-2 / you)
                                  :ARG2 (c32-12 / get-01
                                                :ARG0 c32-2
                                                :ARG1 (c32-10 / help-01
                                                              :ARG2 c32-2
                                                              :mod (c32-5 / some))))))

# ::snt So Jeremy London is Ned from Party of Five, not Griffin? Interesting.
# ::tokens ["So", "Jeremy", "London", "is", "Ned", "from", "Party", "of", "Five", ",", "not", "Griffin", "?", "Interesting", "."]
# ::lemmas ["so", "Jeremy", "London", "be", "Ned", "from", "Party", "of", "Five", ",", "not", "Griffin", "?", "interesting", "."]
(c33-1 / multi-sentence
       :snt1 (c33-6 / cause-01
                    :ARG1 (c33-9 / contrast-01
                                 :ARG1 (c33-4 / person
                                              :name (c33-0 / name
                                                           :op1 "Jeremy"
                                                           :op2 "London")
                                              :source (c33-2 / political-party
                                                             :name (c33-3 / name
                                                                          :op1 "Party"
                                                                          :op2 "of"
                                                                          :op3 "Five"))
                                              :domain (c33-8 / person
                                                             :name (c33-5 / name
                                                                          :op1 "Griffin")))))
       :snt2 (c33-7 / interest-01))

# ::snt Remember when the show was still on they kick JESSICA BIEL out the show for posing in a magazine.
# ::tokens ["Remember", "when", "the", "show", "was", "still", "on", "they", "kick", "JESSICA", "BIEL", "out", "the", "show", "for", "posing", "in", "a", "magazine", "."]
# ::lemmas ["remember", "when", "the", "show", "be", "still", "on", "they", "kick", "JESSICA", "biel", "out", "the", "show", "for", "pose", "in", "a", "magazine", "."]
(c34-5 / remember-01
       :ARG0 (c34-1 / you)
       :ARG1 (c34-6 / kick-out-05
                    :ARG0 (c34-9 / they)
                    :ARG1 (c34-8 / company
                                 :name (c34-2 / name
                                              :op1 "JESSICA"
                                              :op2 "BIEL"))
                    :ARG2 (c34-4 / show-04)
                    :ARG1-of (c34-10 / cause-01
                                     :ARG0 (c34-7 / pose-01
                                                  :ARG0 c34-8
                                                  :ARG2 (c34-3 / magazine)))
                    :time c34-4
                    :mod (c34-0 / still))
       :mode imperative)

# ::snt He send me $100,000Of the money he is making
# ::tokens ["He", "send", "me", "$", "100,000Of", "the", "money", "he", "is", "making"]
# ::lemmas ["he", "send", "i", "$", "100,000Of", "the", "money", "he", "be", "make"]
(c35-1 / send-01
       :ARG0 (c35-3 / he)
       :ARG1 (c35-0 / monetary-quantity
                    :unit (c35-6 / dollar)
                    :ARG1-of (c35-5 / include-91
                                    :ARG2 (c35-4 / money
                                                 :ARG1-of (c35-7 / make-05
                                                                 :ARG0 c35-3)))
                    :quant 100000)
       :ARG2 (c35-2 / i))

# ::snt Oh dear.
# ::tokens ["Oh", "dear", "."]
# ::lemmas ["oh", "dear", "."]
(c37-0 / dear
       :mod (c37-1 / oh))

# ::snt Bunch deviants on that show
# ::tokens ["Bunch", "deviants", "on", "that", "show"]
# ::lemmas ["bunch", "deviant", "on", "that", "show"]
(c38-1 / person
       :ARG0-of (c38-3 / deviate-01
                       :ARG1 (c38-4 / unch))
       :location (c38-0 / show-04
                        :mod (c38-2 / that)))

# ::snt He needs again!
# ::tokens ["He", "needs", "again", "!"]
# ::lemmas ["he", "need", "again", "!"]
(c40-1 / need-01
       :ARG0 (c40-0 / he)
       :mod (c40-2 / again))

# ::snt Neverending story
# ::tokens ["Neverending", "story"]
# ::lemmas ["neverending", "story"]
(c41-1 / story
       :ARG1-of (c41-0 / continue-01))

# ::snt Mine is just a typing error. Whats your excuse?
# ::tokens ["Mine", "is", "just", "a", "typing", "error", ".", "What", "s", "your", "excuse", "?"]
# ::lemmas ["mine", "be", "just", "a", "type", "error", ".", "what", "s", "your", "excuse", "?"]
(c42-1 / multi-sentence
       :snt1 (c42-3 / err-01
                    :ARG1 (c42-5 / type-01)
                    :mod (c42-4 / just)
                    :domain (c42-6 / thing
                                   :poss (c42-7 / i)))
       :snt2 (c42-8 / excuse-02
                    :ARG0 (c42-0 / you)
                    :ARG2 (c42-2 / amr-unknown)))

# ::snt Ya still fucked up haha
# ::tokens ["Ya", "still", "fucked", "up", "haha"]
# ::lemmas ["Ya", "still", "fuck", "up", "haha"]
(c43-0 / fuck-up-02
       :ARG1 (c43-1 / you)
       :mod (c43-3 / still)
       :mod (c43-2 / haha
                   :mode expressive))

# ::snt Their HYPOCRISY runs deep...you should see the look on their face when I tell them I voted Obama, got fed up &amp; voted Trump.
# ::tokens ["Their", "HYPOCRISY", "runs", "deep", "...", "you", "should", "see", "the", "look", "on", "their", "face", "when", "I", "tell", "them", "I", "voted", "Obama", ",", "got", "fed", "up", "&", "amp", ";", "voted", "Trump", "."]
# ::lemmas ["their", "HYPOCRISY", "run", "deep", "...", "you", "should", "see", "the", "look", "on", "their", "face", "when", "i", "tell", "they", "i", "vote", "Obama", ",", "got", "feed", "up", "&", "amp", ";", "vote", "Trump", "."]
(c44-8 / and
       :op1 (c44-15 / run-04
                    :ARG1 (c44-6 / hysteria
                                 :poss (c44-9 / they
                                              :part (c44-13 / face)))
                    :ARG2 (c44-19 / deep-02))
       :op2 (c44-3 / recommend-01
                   :ARG1 (c44-0 / see-01
                                :ARG0 (c44-4 / you)
                                :ARG1 (c44-1 / look-01
                                             :ARG0 c44-13
                                             :time (c44-12 / tell-01
                                                           :ARG0 (c44-18 / i)
                                                           :ARG1 (c44-7 / and
                                                                        :op1 (c44-5 / vote-01
                                                                                    :ARG0 c44-18
                                                                                    :ARG1 (c44-16 / person
                                                                                                  :name (c44-14 / name
                                                                                                                :op1 "Obama")))
                                                                        :op2 (c44-17 / feed-up-03
                                                                                     :ARG1 c44-18)
                                                                        :op3 (c44-2 / vote-01
                                                                                    :ARG0 c44-18
                                                                                    :ARG1 (c44-10 / person
                                                                                                  :name (c44-11 / name
                                                                                                                :op1 "Trump"))))
                                                           :ARG2 c44-9)))))

# ::snt Jason London started in Dazed &amp; Confused
# ::tokens ["Jason", "London", "started", "in", "Dazed", "&", "amp", ";", "Confused"]
# ::lemmas ["Jason", "London", "start", "in", "Dazed", "&", "amp", ";", "confused"]
(c45-6 / and
       :op1 (c45-1 / start-01
                   :ARG0 (c45-3 / person
                                :name (c45-0 / name
                                             :op1 "Jason"
                                             :op2 "London"))
                   :location (c45-4 / location
                                    :name (c45-2 / name
                                                 :op1 "Dazed"
                                                 :op2 "&"
                                                 :op3 "Amendment")))
       :op2 (c45-5 / Confused-01
                   :ARG1 c45-3))

# ::snt Jason London started in Dazed &amp; Confused
# ::tokens ["Jason", "London", "started", "in", "Dazed", "&", "amp", ";", "Confused"]
# ::lemmas ["Jason", "London", "start", "in", "Dazed", "&", "amp", ";", "confused"]
(c46-6 / and
       :op1 (c46-1 / start-01
                   :ARG0 (c46-3 / person
                                :name (c46-0 / name
                                             :op1 "Jason"
                                             :op2 "London"))
                   :location (c46-4 / location
                                    :name (c46-2 / name
                                                 :op1 "Dazed"
                                                 :op2 "&"
                                                 :op3 "Amendment")))
       :op2 (c46-5 / Confused-01
                   :ARG1 c46-3))

# ::snt Jason London started in Dazed &amp; Confused
# ::tokens ["Jason", "London", "started", "in", "Dazed", "&", "amp", ";", "Confused"]
# ::lemmas ["Jason", "London", "start", "in", "Dazed", "&", "amp", ";", "confused"]
(c47-6 / and
       :op1 (c47-1 / start-01
                   :ARG0 (c47-3 / person
                                :name (c47-0 / name
                                             :op1 "Jason"
                                             :op2 "London"))
                   :location (c47-4 / location
                                    :name (c47-2 / name
                                                 :op1 "Dazed"
                                                 :op2 "&"
                                                 :op3 "Amendment")))
       :op2 (c47-5 / Confused-01
                   :ARG1 c47-3))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c48-0 / amr-unknown)

# ::snt He should've signed that pledge.
# ::tokens ["He", "should", "'ve", "signed", "that", "pledge", "."]
# ::lemmas ["he", "should", "'ve", "sign", "that", "pledge", "."]
(c49-1 / recommend-01
       :ARG1 (c49-0 / sign-01
                    :ARG0 (c49-2 / he)
                    :ARG1 (c49-3 / pledge-01
                                 :mod (c49-4 / that))))

# ::snt He does look brutal.
# ::tokens ["He", "does", "look", "brutal", "."]
# ::lemmas ["he", "do", "look", "brutal", "."]
(c50-2 / look-02
       :ARG0 (c50-1 / he)
       :ARG1 (c50-0 / brutal-02
                    :ARG1 c50-1))
