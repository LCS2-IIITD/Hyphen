# ::snt That guy who called Taylor a robot is a fucking asshole and needs to be fired.
# ::tokens ["That", "guy", "who", "called", "Taylor", "a", "robot", "is", "a", "fucking", "asshole", "and", "needs", "to", "be", "fired", "."]
# ::lemmas ["that", "guy", "who", "call", "Taylor", "a", "robot", "be", "a", "fucking", "asshole", "and", "need", "to", "be", "fire", "."]
(c1-2 / and
      :op1 (c1-8 / asshole
                 :mod (c1-0 / fucking)
                 :domain (c1-10 / guy
                                :mod (c1-9 / that)
                                :ARG0-of (c1-7 / call-01
                                               :ARG1 (c1-5 / person
                                                           :name (c1-1 / name
                                                                       :op1 "Taylor"))
                                               :ARG2 (c1-3 / robot))))
      :op2 (c1-4 / need-01
                 :ARG0 c1-10
                 :ARG1 (c1-6 / fire-02
                             :ARG1 c1-10)))

# ::snt She is pregnant
# ::tokens ["She", "is", "pregnant"]
# ::lemmas ["she", "be", "pregnant"]
(c2-0 / impregnate-01
      :ARG1 (c2-1 / she))

# ::snt CandiceCandice ~ &amp;! OfCource ADD a Barbie slap all of dat
# ::tokens ["CandiceCandice", "~", "&", "amp", ";", "!", "OfCource", "ADD", "a", "Barbie", "slap", "all", "of", "dat"]
# ::lemmas ["CandiceCandice", "~", "&", "amp", ";", "!", "OfCource", "add", "a", "Barbie", "slap", "all", "of", "dat"]
(c3-1 / multi-sentence
      :snt1 (c3-5 / person
                  :name (c3-0 / name
                              :op1 "CandiceCandice"))
      :snt2 (c3-12 / and
                   :op2 (c3-2 / person
                              :name (c3-4 / name
                                          :op1 "amp")))
      :snt3 (c3-11 / add-02
                   :ARG0 (c3-7 / company
                               :name (c3-6 / name
                                           :op1 "OfCource"))
                   :ARG1 (c3-3 / slap-01
                               :ARG1 (c3-13 / person
                                            :name (c3-9 / name
                                                        :op1 "Barbie"))
                               :mod (c3-8 / all)
                               :mod (c3-10 / that))))

# ::snt Probs Trying to figure out what her next breakup single would be
# ::tokens ["Probs", "Trying", "to", "figure", "out", "what", "her", "next", "breakup", "single", "would", "be"]
# ::lemmas ["Probs", "Trying", "to", "figure", "out", "what", "her", "next", "breakup", "single", "would", "be"]
(c4-5 / try-01
      :ARG1 (c4-0 / figure-out-05
                  :ARG1 (c4-6 / thing
                              :ARG1-of (c4-4 / single-03
                                             :ARG2 (c4-2 / break-up-08
                                                         :ARG0 (c4-1 / she))
                                             :mod (c4-3 / next)))))

# ::snt Kidnapped
# ::tokens ["Kidnapped"]
# ::lemmas ["kidnap"]
(c6-0 / Kidnapped-01)
