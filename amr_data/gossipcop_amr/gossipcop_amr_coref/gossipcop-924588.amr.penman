# ::snt Put down the devices and just enjoy the performances. They did a great job while you were watching your screens.
# ::tokens ["Put", "down", "the", "devices", "and", "just", "enjoy", "the", "performances", ".", "They", "did", "a", "great", "job", "while", "you", "were", "watching", "your", "screens", "."]
# ::lemmas ["put", "down", "the", "device", "and", "just", "enjoy", "the", "performance", ".", "they", "do", "a", "great", "job", "while", "you", "be", "watch", "your", "screen", "."]
(c1-1 / multi-sentence
      :snt1 (c1-11 / and
                   :op1 (c1-5 / put-01
                              :ARG0 (c1-0 / you)
                              :ARG1 (c1-13 / device)
                              :ARG2 (c1-8 / down)
                              :mode imperative)
                   :op2 (c1-4 / enjoy-01
                              :ARG0 c1-0
                              :ARG1 (c1-2 / perform-01)
                              :mod (c1-9 / just)
                              :mode imperative))
      :snt2 (c1-6 / do-02
                  :ARG0 (c1-10 / they)
                  :ARG1 (c1-15 / job
                               :mod (c1-12 / great))
                  :time (c1-7 / watch-01
                              :ARG0 (c1-14 / you)
                              :ARG1 (c1-3 / screen
                                          :poss c1-14))))

# ::snt She's a hoot! And a joy.
# ::tokens ["She", "'s", "a", "hoot", "!", "And", "a", "joy", "."]
# ::lemmas ["she", "be", "a", "hoot", "!", "and", "a", "joy", "."]
(c2-0 / multi-sentence
      :snt1 (c2-2 / hoot
                  :domain (c2-1 / she))
      :snt2 (c2-4 / and
                  :op2 (c2-3 / joy
                             :domain c2-1)))

# ::snt She's amazing. Goodnight Larry!
# ::tokens ["She", "'s", "amazing", ".", "Goodnight", "Larry", "!"]
# ::lemmas ["she", "be", "amazing", ".", "Goodnight", "Larry", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-6 / amaze-01
                  :ARG0 (c3-3 / she))
      :snt2 (c3-0 / say-01
                  :ARG1 (c3-1 / night
                              :ARG1-of (c3-7 / good-02))
                  :ARG2 (c3-5 / person
                              :name (c3-4 / name
                                          :op1 "Larry"))))

# ::snt , holy lawd can we get your John to be the Phantom of the Opera because, HELLO!!!! Amazing performance
# ::tokens [",", "holy", "lawd", "can", "we", "get", "your", "John", "to", "be", "the", "Phantom", "of", "the", "Opera", "because", ",", "HELLO", "!", "!", "!", "!", "Amazing", "performance"]
# ::lemmas [",", "holy", "lawd", "can", "we", "get", "your", "John", "to", "be", "the", "Phantom", "of", "the", "Opera", "because", ",", "HELLO", "!", "!", "!", "!", "amazing", "performance"]
(c4-6 / possible-01
      :ARG1 (c4-13 / get-01
                   :ARG0 (c4-9 / we)
                   :ARG1 (c4-2 / person
                               :name (c4-1 / name
                                           :op1 "John")
                               :poss (c4-0 / you))
                   :ARG4 (c4-3 / music
                               :name (c4-5 / name
                                           :op1 "Phantom"
                                           :op2 "of"
                                           :op3 "the"
                                           :op4 "Opera")
                               :domain c4-2))
      :ARG1-of (c4-10 / cause-01
                      :ARG0 (c4-12 / perform-01
                                   :ARG0 c4-2
                                   :ARG1-of (c4-4 / amaze-01)
                                   :mod (c4-7 / hell
                                              :mode expressive)))
      :mod (c4-8 / law
                 :mod (c4-11 / holy)))

# ::snt I was disappointed the resurrection was not in the performance
# ::tokens ["I", "was", "disappointed", "the", "resurrection", "was", "not", "in", "the", "performance"]
# ::lemmas ["i", "be", "disappoint", "the", "resurrection", "be", "not", "in", "the", "performance"]
(c5-4 / disappoint-01
      :ARG0 (c5-3 / include-91
                  :ARG1 (c5-1 / resurrect-01)
                  :ARG2 (c5-2 / perform-01)
                  :polarity -)
      :ARG1 (c5-0 / i))

# ::snt ABC
# ::tokens ["ABC"]
# ::lemmas ["ABC"]
(c6-1 / publication
      :name (c6-0 / name
                  :op1 "ABC"))

# ::snt Where was it performed?
# ::tokens ["Where", "was", "it", "performed", "?"]
# ::lemmas ["where", "be", "it", "perform", "?"]
(c7-0 / perform-01
      :ARG1 (c7-1 / it)
      :location (c7-2 / amr-unknown))
