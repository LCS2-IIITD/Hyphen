# ::snt It's really noones business but theirs
# ::tokens ["It", "'s", "really", "noones", "business", "but", "theirs"]
# ::lemmas ["it", "be", "really", "noone", "business", "but", "their"]
(c1-4 / contrast-01
      :ARG1 (c1-0 / business
                  :poss (c1-1 / no-one))
      :ARG2 (c1-3 / business
                  :poss c1-1)
      :ARG1-of (c1-2 / real-04))

# ::snt Dont know why you people are still talking about this let it be let them work this out
# ::tokens ["Do", "nt", "know", "why", "you", "people", "are", "still", "talking", "about", "this", "let", "it", "be", "let", "them", "work", "this", "out"]
# ::lemmas ["do", "not", "know", "why", "you", "people", "be", "still", "talk", "about", "this", "let", "it", "be", "let", "they", "work", "this", "out"]
(c2-4 / know-01
      :ARG0 (c2-10 / i)
      :ARG1 (c2-9 / thing
                  :ARG0-of (c2-7 / cause-01
                                 :ARG1 (c2-11 / talk-01
                                              :ARG0 (c2-5 / person
                                                          :mod (c2-0 / you))
                                              :ARG1 (c2-12 / this)
                                              :mod (c2-2 / still)))
                  :ARG0-of (c2-6 / let-01
                                 :ARG1 (c2-13 / let-01
                                              :ARG1 (c2-8 / work-out-02
                                                          :ARG0 (c2-3 / they)
                                                          :ARG1 (c2-1 / this)))))
      :polarity -)

# ::snt Typical
# ::tokens ["Typical"]
# ::lemmas ["typical"]
(c3-0 / typical-02)

# ::snt Maybe she should stop dating basketball players!
# ::tokens ["Maybe", "she", "should", "stop", "dating", "basketball", "players", "!"]
# ::lemmas ["maybe", "she", "should", "stop", "date", "basketball", "player", "!"]
(c4-5 / possible-01
      :ARG1 (c4-4 / recommend-01
                  :ARG1 (c4-3 / stop-01
                              :ARG0 (c4-0 / she)
                              :ARG1 (c4-7 / date-02
                                          :ARG0 c4-0
                                          :ARG1 (c4-2 / person
                                                      :ARG0-of (c4-6 / play-01
                                                                     :ARG1 (c4-1 / basketball)))))))

# ::snt Let the guy breathe....he's been like that from day and it's been women and counting so far. He is obviously not ready to settle down with anyone, baby or no baby. Taking care of his responsibility doesn't mean he has to be with
# ::tokens ["Let", "the", "guy", "breathe", "....", "he", "'s", "been", "like", "that", "from", "day", "and", "it", "'s", "been", "women", "and", "counting", "so", "far", ".", "He", "is", "obviously", "not", "ready", "to", "settle", "down", "with", "anyone", ",", "baby", "or", "no", "baby", ".", "Taking", "care", "of", "his", "responsibility", "does", "n't", "mean", "he", "has", "to", "be", "with"]
# ::lemmas ["let", "the", "guy", "breathe", "....", "he", "be", "be", "like", "that", "from", "day", "and", "it", "be", "be", "woman", "and", "count", "so", "far", ".", "he", "be", "obviously", "not", "ready", "to", "settle", "down", "with", "anyone", ",", "baby", "or", "no", "baby", ".", "take", "care", "of", "his", "responsibility", "do", "not", "mean", "he", "have", "to", "be", "with"]
(c5-19 / multi-sentence
       :snt1 (c5-2 / let-01
                   :ARG0 (c5-8 / you)
                   :ARG1 (c5-18 / breathe-01
                                :ARG0 (c5-15 / guy))
                   :mode imperative)
       :snt2 (c5-14 / and
                    :op1 (c5-22 / resemble-01
                                :ARG1 (c5-3 / guy)
                                :ARG2 (c5-13 / that)
                                :time (c5-24 / day))
                    :op2 (c5-12 / and
                                :op1 (c5-23 / woman
                                            :domain c5-3)
                                :op2 (c5-21 / count-01
                                            :ARG1 c5-23)
                                :time (c5-0 / so-far)))
       :snt3 (c5-4 / ready-02
                   :ARG1 (c5-9 / he)
                   :ARG2 (c5-6 / settle-down-05
                               :ARG0 c5-9
                               :ARG1 (c5-7 / or
                                           :op1 (c5-11 / anyone)
                                           :op2 (c5-1 / baby
                                                      :polarity -)))
                   :ARG1-of (c5-17 / obvious-01)
                   :polarity -)
       :snt4 (c5-10 / mean-01
                    :ARG1 (c5-16 / care-03
                                 :ARG0 c5-9
                                 :ARG1 (c5-20 / responsible-03
                                              :ARG0 c5-9))
                    :ARG2 (c5-25 / obligate-01
                                 :ARG1 c5-9
                                 :ARG2 (c5-5 / be-with-10
                                             :ARG0 c5-9
                                             :ARG1 c5-9))
                    :polarity -))

# ::snt But who cares
# ::tokens ["But", "who", "cares"]
# ::lemmas ["but", "who", "care"]
(c6-0 / contrast-01
      :ARG2 (c6-1 / care-01
                  :ARG0 (c6-2 / amr-unknown)))

# ::snt That he is messy. Unless he wanted to get caught. He was so obvious. He didn't even try and hide it.
# ::tokens ["That", "he", "is", "messy", ".", "Unless", "he", "wanted", "to", "get", "caught", ".", "He", "was", "so", "obvious", ".", "He", "did", "n't", "even", "try", "and", "hide", "it", "."]
# ::lemmas ["that", "he", "be", "messy", ".", "unless", "he", "want", "to", "get", "catch", ".", "he", "be", "so", "obvious", ".", "he", "do", "not", "even", "try", "and", "hide", "it", "."]
(c7-1 / multi-sentence
      :snt1 (c7-4 / mess-up-02
                  :ARG0 (c7-5 / he))
      :snt2 (c7-10 / have-condition-91
                   :ARG2 (c7-8 / want-01
                               :ARG0 c7-5
                               :ARG1 (c7-9 / catch-03
                                           :ARG1 c7-5)
                               :polarity -))
      :snt3 (c7-0 / obvious-01
                  :ARG1 (c7-3 / he)
                  :degree (c7-2 / so))
      :snt4 (c7-12 / try-01
                   :ARG0 (c7-13 / he)
                   :ARG1 (c7-6 / hide-01
                               :ARG0 c7-13
                               :ARG1 (c7-11 / it))
                   :mod (c7-7 / even)
                   :polarity -))

# ::snt You know what world... can move on to someone she will love or stay with who might have or did not make a dumbass mistake. Either way...we root for and . No booing here.
# ::tokens ["You", "know", "what", "world", "...", "can", "move", "on", "to", "someone", "she", "will", "love", "or", "stay", "with", "who", "might", "have", "or", "did", "not", "make", "a", "dumbass", "mistake", ".", "Either", "way", "...", "we", "root", "for", "and", ".", "No", "booing", "here", "."]
# ::lemmas ["you", "know", "what", "world", "...", "can", "move", "on", "to", "someone", "she", "will", "love", "or", "stay", "with", "who", "might", "have", "or", "do", "not", "make", "a", "dumbass", "mistake", ".", "either", "way", "...", "we", "root", "for", "and", ".", "no", "boo", "here", "."]
(c8-13 / multi-sentence
       :snt1 (c8-8 / know-01
                   :ARG0 (c8-6 / you)
                   :ARG1 (c8-20 / world))
       :snt2 (c8-19 / possible-01
                    :ARG1 (c8-4 / or
                                :op1 (c8-7 / move-01
                                           :ARG0 (c8-0 / she)
                                           :ARG2 (c8-5 / someone
                                                       :ARG1-of (c8-1 / love-01
                                                                      :ARG0 c8-0)
                                                       :ARG0-of (c8-16 / make-01
                                                                       :ARG1 (c8-15 / mistake-02
                                                                                    :ARG0 c8-0
                                                                                    :mod (c8-21 / dumbass)
                                                                                    :ARG1-of (c8-14 / possible-01)
                                                                                    :polarity -))))
                                :op2 (c8-3 / stay-01
                                           :ARG1 c8-0
                                           :ARG3 c8-5)))
       :snt3 (c8-11 / or
                    :op1 (c8-17 / root-02
                                :ARG0 (c8-2 / we)
                                :ARG1 (c8-10 / and))
                    :op2 (c8-12 / boo-01
                                :location (c8-9 / here)
                                :polarity -)
                    :mod (c8-18 / either)))

# ::snt She will take him back..he will act right for a season and then he will cheat again.....but....go ahead and drag this story out
# ::tokens ["She", "will", "take", "him", "back", "..", "he", "will", "act", "right", "for", "a", "season", "and", "then", "he", "will", "cheat", "again", ".....", "but", "....", "go", "ahead", "and", "drag", "this", "story", "out"]
# ::lemmas ["she", "will", "take", "he", "back", "..", "he", "will", "act", "right", "for", "a", "season", "and", "then", "he", "will", "cheat", "again", ".....", "but", "....", "go", "ahead", "and", "drag", "this", "story", "out"]
(c9-12 / contrast-01
       :ARG1 (c9-7 / and
                   :op1 (c9-8 / take-01
                              :ARG0 (c9-0 / she)
                              :ARG1 (c9-4 / he)
                              :ARG3 (c9-11 / back))
                   :op2 (c9-6 / act-01
                              :ARG0 c9-4
                              :ARG1-of (c9-14 / right-06)
                              :duration (c9-2 / season))
                   :op3 (c9-10 / cheat-03
                               :ARG0 c9-4
                               :mod (c9-5 / again)
                               :time (c9-13 / then)))
       :ARG2 (c9-18 / and
                    :op1 (c9-9 / go-06
                               :ARG0 (c9-3 / you)
                               :ARG2 (c9-16 / ahead)
                               :mode imperative)
                    :op2 (c9-15 / drag-out-02
                                :ARG0 c9-3
                                :ARG1 (c9-1 / story
                                            :mod (c9-17 / this))
                                :mode imperative)))

# ::snt That too
# ::tokens ["That", "too"]
# ::lemmas ["that", "too"]
(c11-1 / that
       :mod (c11-0 / too))

# ::snt . Who gives a shit?
# ::tokens [".", "Who", "gives", "a", "shit", "?"]
# ::lemmas [".", "who", "give", "a", "shit", "?"]
(c12-0 / give-16
       :ARG0 (c12-2 / amr-unknown)
       :ARG1 (c12-1 / shit-01))

# ::snt Heres what we know:1. He did it.2. He got caught.
# ::tokens ["Heres", "what", "we", "know:1", ".", "He", "did", "it.2", ".", "He", "got", "caught", "."]
# ::lemmas ["here", "what", "we", "know:1", ".", "he", "do", "it.2", ".", "he", "got", "catch", "."]
(c13-1 / know-01
       :ARG0 (c13-2 / we)
       :ARG1 (c13-5 / and
                    :op1 (c13-6 / do-02
                                :ARG0 (c13-0 / he)
                                :ARG1 (c13-4 / it)
                                :li 1)
                    :op2 (c13-3 / catch-03
                                :ARG1 c13-0
                                :li 2)))

# ::snt A bit of empathy would be nice here. I feel sad for Khloe. I hope the media will let up.
# ::tokens ["A", "bit", "of", "empathy", "would", "be", "nice", "here", ".", "I", "feel", "sad", "for", "Khloe", ".", "I", "hope", "the", "media", "will", "let", "up", "."]
# ::lemmas ["a", "bit", "of", "empathy", "would", "be", "nice", "here", ".", "i", "feel", "sad", "for", "Khloe", ".", "i", "hope", "the", "medium", "will", "let", "up", "."]
(c14-3 / multi-sentence
       :snt1 (c14-2 / nice-01
                    :ARG1 (c14-6 / empathy
                                 :quant (c14-1 / bit))
                    :location (c14-7 / here))
       :snt2 (c14-0 / feel-01
                    :ARG0 (c14-13 / i)
                    :ARG1 (c14-4 / sad-02
                                 :ARG1 (c14-8 / person
                                              :name (c14-9 / name
                                                           :op1 "Khloe"))))
       :snt3 (c14-12 / hope-01
                     :ARG0 (c14-5 / i)
                     :ARG1 (c14-10 / let-up-04
                                   :ARG1 (c14-11 / media))))

# ::snt She's an idiot. What did she expect? He's a kid. Ridiculous.
# ::tokens ["She", "'s", "an", "idiot", ".", "What", "did", "she", "expect", "?", "He", "'s", "a", "kid", ".", "Ridiculous", "."]
# ::lemmas ["she", "be", "an", "idiot", ".", "what", "do", "she", "expect", "?", "he", "be", "a", "kid", ".", "ridiculous", "."]
(c16-1 / multi-sentence
       :snt1 (c16-7 / idiot
                    :domain (c16-2 / she))
       :snt2 (c16-4 / expect-01
                    :ARG0 (c16-0 / she)
                    :ARG1 (c16-8 / amr-unknown))
       :snt3 (c16-6 / kid
                    :domain (c16-5 / he))
       :snt4 (c16-3 / ridiculous-02))

# ::snt Throw the entire man away
# ::tokens ["Throw", "the", "entire", "man", "away"]
# ::lemmas ["throw", "the", "entire", "man", "away"]
(c17-3 / throw-away-07
       :ARG0 (c17-1 / you)
       :ARG1 (c17-2 / man
                    :mod (c17-0 / entire))
       :mode imperative)

# ::snt Honestly Im not shocked
# ::tokens ["Honestly", "I", "m", "not", "shocked"]
# ::lemmas ["honestly", "i", "m", "not", "shocked"]
(c18-2 / shock-01
       :ARG1 (c18-1 / i)
       :ARG1-of (c18-0 / honest-01)
       :polarity -)

# ::snt So sad..
# ::tokens ["So", "sad", ".."]
# ::lemmas ["so", "sad", ".."]
(c19-1 / sad-02
       :degree (c19-0 / so))
