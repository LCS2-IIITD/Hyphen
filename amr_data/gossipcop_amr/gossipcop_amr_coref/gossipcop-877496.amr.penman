# ::snt Lucky. We're stuck with Trump &amp; his Trumpkins.
# ::tokens ["Lucky", ".", "We", "'re", "stuck", "with", "Trump", "&", "amp", ";", "his", "Trumpkins", "."]
# ::lemmas ["lucky", ".", "we", "be", "stick", "with", "Trump", "&", "amp", ";", "his", "Trumpkins", "."]
(c1-0 / multi-sentence
      :snt1 (c1-5 / lucky)
      :snt2 (c1-2 / stick-01
                  :ARG1 (c1-7 / we)
                  :ARG2 (c1-8 / and
                              :op1 (c1-6 / person
                                         :name (c1-1 / name
                                                     :op1 "Trump"))
                              :op2 (c1-3 / person
                                         :name (c1-4 / name
                                                     :op1 "Trumpkins")
                                         :poss c1-6))))

# ::snt Like, when your hardcore Benfica stans admit Sporting has the better academy, you know it must be true.
# ::tokens ["Like", ",", "when", "your", "hardcore", "Benfica", "stans", "admit", "Sporting", "has", "the", "better", "academy", ",", "you", "know", "it", "must", "be", "true", "."]
# ::lemmas ["like", ",", "when", "your", "hardcore", "Benfica", "stan", "admit", "Sporting", "have", "the", "well", "academy", ",", "you", "know", "it", "must", "be", "true", "."]
(c2-5 / resemble-01
      :ARG2 (c2-0 / obligate-01
                  :ARG1 (c2-1 / you)
                  :ARG2 (c2-12 / true-01
                               :ARG1 (c2-11 / it))
                  :time (c2-6 / admit-01
                              :ARG0 (c2-15 / team
                                           :name (c2-2 / name
                                                       :op1 "Benfica")
                                           :mod (c2-8 / hardcore)
                                           :poss c2-1)
                              :ARG1 (c2-10 / have-03
                                           :ARG0 (c2-13 / team
                                                        :name (c2-9 / name
                                                                    :op1 "Sporting"))
                                           :ARG1 (c2-14 / academy
                                                        :ARG1-of (c2-7 / have-degree-91
                                                                       :ARG2 (c2-3 / good-03
                                                                                   :ARG1 c2-14)
                                                                       :ARG3 (c2-4 / more)))))))

# ::snt Also why would you put your child in Benfica's football academy, , everyone knows Sporting's is the best.
# ::tokens ["Also", "why", "would", "you", "put", "your", "child", "in", "Benfica", "'s", "football", "academy", ",", ",", "everyone", "knows", "Sporting", "'s", "is", "the", "best", "."]
# ::lemmas ["also", "why", "would", "you", "put", "your", "child", "in", "Benfica", "'s", "football", "academy", ",", ",", "everyone", "know", "Sporting", "'s", "be", "the", "good", "."]
(c3-6 / and
      :op2 (c3-17 / put-01
                  :ARG0 (c3-0 / you)
                  :ARG1 (c3-10 / person
                               :ARG0-of (c3-1 / have-rel-role-91
                                              :ARG1 c3-0
                                              :ARG2 (c3-12 / child)))
                  :ARG2 (c3-4 / academy
                              :mod (c3-14 / football)
                              :poss (c3-5 / team
                                          :name (c3-15 / name
                                                       :op1 "Benfica")))
                  :ARG1-of (c3-8 / cause-01
                                 :ARG0 (c3-3 / amr-unknown)))
      :op3 (c3-2 / know-01
                 :ARG0 (c3-16 / everyone)
                 :ARG1 (c3-18 / have-degree-91
                              :ARG1 (c3-13 / team
                                           :name (c3-11 / name
                                                        :op1 "Sporting"))
                              :ARG2 (c3-7 / good-03
                                          :ARG1 c3-13)
                              :ARG3 (c3-9 / most))))

# ::snt Adio H*
# ::tokens ["Adio", "H", "*"]
# ::lemmas ["Adio", "H", "*"]
(c4-0 / adio-h*)

# ::snt Good bye, yea
# ::tokens ["Good", "bye", ",", "yea"]
# ::lemmas ["good", "bye", ",", "yea"]
(c5-3 / and
      :op1 (c5-1 / bye
                 :ARG1-of (c5-0 / good-02))
      :op2 (c5-2 / yea))

# ::snt Bye good luck
# ::tokens ["Bye", "good", "luck"]
# ::lemmas ["bye", "good", "luck"]
(c6-2 / luck
      :ARG1-of (c6-0 / good-02)
      :mod (c6-1 / by-e))

# ::snt Ya and.....
# ::tokens ["Ya", "and", "....."]
# ::lemmas ["ya", "and", "....."]
(c7-1 / and
      :op1 (c7-0 / ya))

# ::snt Yay!!!! Stay bitch!!! Take Rosie with you!!
# ::tokens ["Yay", "!", "!", "!", "!", "Stay", "bitch", "!", "!", "!", "Take", "Rosie", "with", "you", "!", "!"]
# ::lemmas ["Yay", "!", "!", "!", "!", "stay", "bitch", "!", "!", "!", "take", "Rosie", "with", "you", "!", "!"]
(c8-3 / multi-sentence
      :snt1 (c8-2 / yay
                  :mode expressive)
      :snt2 (c8-5 / stay-01
                  :ARG1 (c8-8 / you)
                  :ARG3 (c8-1 / bitch)
                  :mode imperative)
      :snt3 (c8-7 / take-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-6 / person
                              :name (c8-4 / name
                                          :op1 "Rosie"))
                  :accompanier c8-0
                  :mode imperative))

# ::snt Ta
# ::tokens ["Ta"]
# ::lemmas ["Ta"]
(c9-1 / person
      :name (c9-0 / name
                  :op1 "Ta"))

# ::snt And we care why?
# ::tokens ["And", "we", "care", "why", "?"]
# ::lemmas ["and", "we", "care", "why", "?"]
(c10-3 / and
       :op2 (c10-0 / care-01
                   :ARG0 (c10-1 / we)
                   :ARG1 (c10-2 / amr-unknown
                                :ARG0-of (c10-4 / cause-01))))

# ::snt Let the others follow!
# ::tokens ["Let", "the", "others", "follow", "!"]
# ::lemmas ["let", "the", "other", "follow", "!"]
(c13-2 / let-01
       :ARG0 (c13-1 / you)
       :ARG1 (c13-0 / follow-01
                    :ARG1 (c13-3 / other))
       :mode imperative)

# ::snt Good please denounce your citizenship so we no longer have to claim you.
# ::tokens ["Good", "please", "denounce", "your", "citizenship", "so", "we", "no", "longer", "have", "to", "claim", "you", "."]
# ::lemmas ["good", "please", "denounce", "your", "citizenship", "so", "we", "no", "long", "have", "to", "claim", "you", "."]
(c14-6 / denounce-01
       :ARG0 (c14-1 / you)
       :ARG1 (c14-4 / citizenship
                    :poss c14-1)
       :purpose (c14-0 / obligate-01
                       :ARG1 (c14-3 / we)
                       :ARG2 (c14-7 / claim-02
                                    :ARG0 c14-3
                                    :ARG1 c14-1)
                       :time (c14-2 / no-longer))
       :ARG1-of (c14-5 / good-02)
       :mode imperative
       :polite +)

# ::snt Good.
# ::tokens ["Good", "."]
# ::lemmas ["good", "."]
(c15-0 / good-02)

# ::snt Yeah!!! Stay far away!!!
# ::tokens ["Yeah", "!", "!", "!", "Stay", "far", "away", "!", "!", "!"]
# ::lemmas ["yeah", "!", "!", "!", "stay", "far", "away", "!", "!", "!"]
(c17-2 / multi-sentence
       :snt1 (c17-1 / yeah
                    :mode expressive)
       :snt2 (c17-3 / stay-01
                    :ARG1 (c17-5 / you)
                    :ARG3 (c17-0 / far
                                 :direction (c17-4 / away))
                    :mode imperative))

# ::snt Three cheers! One anti- celebrity down, hope more follows her lead.
# ::tokens ["Three", "cheers", "!", "One", "anti-", "celebrity", "down", ",", "hope", "more", "follows", "her", "lead", "."]
# ::lemmas ["Three", "cheer", "!", "One", "anti-", "celebrity", "down", ",", "hope", "more", "follow", "her", "lead", "."]
(c18-2 / multi-sentence
       :snt1 (c18-7 / cheer-02
                    :quant 3
                    :mode expressive)
       :snt2 (c18-5 / hope-01
                    :ARG1 (c18-0 / follow-02
                                 :ARG0 (c18-4 / more)
                                 :ARG1 (c18-6 / lead-02
                                              :ARG0 (c18-3 / she))))
       :snt3 (c18-8 / down-01
                    :ARG1 (c18-9 / celebrity
                                 :ARG0-of (c18-1 / oppose-01)
                                 :quant 1)))

# ::snt Ciao
# ::tokens ["Ciao"]
# ::lemmas ["ciao"]
(c19-1 / person
       :name (c19-0 / name
                    :op1 "Ciao"))

# ::snt Love you Madonna and family
# ::tokens ["Love", "you", "Madonna", "and", "family"]
# ::lemmas ["love", "you", "Madonna", "and", "family"]
(c20-3 / love-01
       :ARG1 (c20-4 / and
                    :op1 (c20-2 / person
                                :name (c20-1 / name
                                             :op1 "Madonna"))
                    :op2 (c20-0 / family)))

# ::snt When will she announce her retirement?
# ::tokens ["When", "will", "she", "announce", "her", "retirement", "?"]
# ::lemmas ["when", "will", "she", "announce", "her", "retirement", "?"]
(c21-3 / announce-01
       :ARG0 (c21-0 / she)
       :ARG1 (c21-1 / retire-01
                    :ARG0 c21-0)
       :time (c21-2 / amr-unknown))

# ::snt And a racist bitch too!
# ::tokens ["And", "a", "racist", "bitch", "too", "!"]
# ::lemmas ["and", "a", "racist", "bitch", "too", "!"]
(c22-3 / and
       :op2 (c22-1 / bitch
                   :mod (c22-0 / racist)
                   :mod (c22-2 / too)))

# ::snt ARE YOU HAPPY?!
# ::tokens ["ARE", "YOU", "HAPPY", "?", "!"]
# ::lemmas ["be", "you", "HAPPY", "?", "!"]
(c23-0 / happy-01
       :polarity (c23-2 / amr-unknown)
       :ARG1 (c23-1 / you))

# ::snt Good, stay over there.
# ::tokens ["Good", ",", "stay", "over", "there", "."]
# ::lemmas ["good", ",", "stay", "over", "there", "."]
(c24-2 / and
       :op1 (c24-4 / good-02)
       :op2 (c24-1 / stay-01
                   :ARG1 (c24-0 / you)
                   :ARG3 (c24-3 / there)
                   :mode imperative))

# ::snt Stay there forever....please!
# ::tokens ["Stay", "there", "forever", "....", "please", "!"]
# ::lemmas ["stay", "there", "forever", "....", "please", "!"]
(c25-3 / stay-01
       :ARG1 (c25-1 / you)
       :ARG3 (c25-2 / there)
       :duration (c25-0 / forever)
       :mode imperative
       :polite +)

# ::snt Excited for new music from Queen.
# ::tokens ["Excited", "for", "new", "music", "from", "Queen", "."]
# ::lemmas ["excite", "for", "new", "music", "from", "Queen", "."]
(c27-2 / excite-01
       :ARG0 (c27-1 / music
                    :ARG1-of (c27-0 / new-01)
                    :source (c27-4 / person
                                   :name (c27-3 / name
                                                :op1 "Queen"))))

# ::snt No Madonna what is you doing
# ::tokens ["No", "Madonna", "what", "is", "you", "doing"]
# ::lemmas ["no", "Madonna", "what", "be", "you", "do"]
(c28-3 / ask-01
       :ARG0 (c28-2 / i)
       :ARG1 (c28-5 / do-02
                    :ARG0 (c28-1 / person
                                 :name (c28-0 / name
                                              :op1 "Madonna"))
                    :ARG1 (c28-4 / amr-unknown))
       :ARG2 c28-1)

# ::snt to all the haters
# ::tokens ["to", "all", "the", "haters"]
# ::lemmas ["to", "all", "the", "hater"]
(c29-3 / say-01
       :ARG2 (c29-2 / person
                    :ARG0-of (c29-1 / hate-01)
                    :mod (c29-0 / all)))

# ::snt They need help! And what makes it worse is that they don't even know it.
# ::tokens ["They", "need", "help", "!", "And", "what", "makes", "it", "worse", "is", "that", "they", "do", "n't", "even", "know", "it", "."]
# ::lemmas ["they", "need", "help", "!", "and", "what", "make", "it", "bad", "be", "that", "they", "do", "not", "even", "know", "it", "."]
(c30-1 / multi-sentence
       :snt1 (c30-0 / need-01
                    :ARG0 (c30-6 / they)
                    :ARG1 (c30-3 / help-01
                                 :ARG1 c30-6))
       :snt2 (c30-8 / and
                    :op2 (c30-5 / worsen-01
                                :ARG0 (c30-4 / know-01
                                             :ARG0 (c30-9 / they)
                                             :ARG1 (c30-7 / it)
                                             :mod (c30-2 / even)
                                             :polarity -)
                                :ARG1 c30-7)))

# ::snt I don't read it anymore, it's not worth it.
# ::tokens ["I", "do", "n't", "read", "it", "anymore", ",", "it", "'s", "not", "worth", "it", "."]
# ::lemmas ["i", "do", "not", "read", "it", "anymore", ",", "it", "be", "not", "worth", "it", "."]
(c31-2 / cause-01
       :ARG0 (c31-3 / worth-02
                    :ARG1 (c31-1 / read-01
                                 :ARG0 (c31-4 / i)
                                 :ARG1 (c31-0 / it)
                                 :time (c31-5 / anymore)
                                 :ARG2-of c31-3
                                 :ARG1-of c31-2)
                    :polarity -))

# ::snt Reading the responses and I ask myself: when did the world and its people become this file, ugly, bitter mess. Sweet jesus.
# ::tokens ["Reading", "the", "responses", "and", "I", "ask", "myself", ":", "when", "did", "the", "world", "and", "its", "people", "become", "this", "file", ",", "ugly", ",", "bitter", "mess", ".", "Sweet", "jesus", "."]
# ::lemmas ["read", "the", "response", "and", "i", "ask", "myself", ":", "when", "do", "the", "world", "and", "its", "people", "become", "this", "file", ",", "ugly", ",", "bitter", "mess", ".", "Sweet", "jesus", "."]
(c32-2 / multi-sentence
       :snt1 (c32-12 / and
                     :op1 (c32-5 / read-01
                                 :ARG0 (c32-11 / i)
                                 :ARG1 (c32-15 / respond-01))
                     :op2 (c32-13 / ask-01
                                  :ARG0 c32-11
                                  :ARG1 (c32-1 / become-01
                                               :ARG1 (c32-9 / and
                                                            :op1 (c32-8 / world)
                                                            :op2 (c32-7 / person
                                                                        :poss c32-8))
                                               :ARG2 (c32-0 / file
                                                            :mod (c32-10 / this)
                                                            :mod (c32-16 / ugly)
                                                            :mod (c32-6 / bitter))
                                               :time (c32-14 / amr-unknown))
                                  :ARG2 c32-11))
       :snt2 c32-7
       :name (c32-3 / name
                    :op1 "Jesus")
       :ARG1-of (c32-4 / sweet-03))

# ::snt Who cares?
# ::tokens ["Who", "cares", "?"]
# ::lemmas ["who", "care", "?"]
(c33-0 / care-01
       :ARG0 (c33-1 / amr-unknown))

# ::snt What did Portugal ever do to deserve that?!!!
# ::tokens ["What", "did", "Portugal", "ever", "do", "to", "deserve", "that", "?", "!", "!", "!"]
# ::lemmas ["what", "do", "Portugal", "ever", "do", "to", "deserve", "that", "?", "!", "!", "!"]
(c34-6 / do-02
       :ARG0 (c34-2 / country
                    :name (c34-0 / name
                                 :op1 "Portugal"))
       :ARG1 (c34-5 / amr-unknown)
       :time (c34-1 / ever)
       :purpose (c34-3 / deserve-01
                       :ARG0 c34-2
                       :ARG1 (c34-4 / that)))

# ::snt Saw her place in June, so sick, ridiculous views
# ::tokens ["Saw", "her", "place", "in", "June", ",", "so", "sick", ",", "ridiculous", "views"]
# ::lemmas ["saw", "her", "place", "in", "June", ",", "so", "sick", ",", "ridiculous", "view"]
(c35-1 / see-01
       :ARG0 (c35-5 / i)
       :ARG1 (c35-4 / place
                    :poss (c35-0 / she))
       :time (c35-6 / date-entity
                    :month 6)
       :ARG1-of (c35-7 / sick-02
                       :degree (c35-2 / so))
       :ARG1-of (c35-3 / ridiculous-02))

# ::snt I think it's good leaving the US for a while, there's too much negative energy &amp; divide, it's always good looking at things from the outside
# ::tokens ["I", "think", "it", "'s", "good", "leaving", "the", "US", "for", "a", "while", ",", "there", "'s", "too", "much", "negative", "energy", "&", "amp", ";", "divide", ",", "it", "'s", "always", "good", "looking", "at", "things", "from", "the", "outside"]
# ::lemmas ["i", "think", "it", "be", "good", "leave", "the", "US", "for", "a", "while", ",", "there", "be", "too", "much", "negative", "energy", "&", "amp", ";", "divide", ",", "it", "be", "always", "good", "look", "at", "thing", "from", "the", "outside"]
(c36-6 / and
       :op1 (c36-7 / think-01
                   :ARG0 (c36-17 / i)
                   :ARG1 (c36-8 / good-02
                                :ARG1 (c36-0 / leave-11
                                             :ARG1 (c36-12 / country
                                                           :name (c36-14 / name
                                                                         :op1 "US"))
                                             :duration (c36-16 / while))))
       :op2 (c36-5 / and
                   :op1 (c36-15 / energy
                                :ARG0-of (c36-11 / negative-02)
                                :ARG1-of (c36-3 / have-quant-91
                                                :ARG2 (c36-10 / much)
                                                :ARG3 (c36-13 / too)))
                   :op2 (c36-19 / divide-02)
                   :op3 (c36-1 / good-02
                               :ARG1 (c36-9 / look-01
                                            :ARG1 (c36-18 / thing)
                                            :source (c36-2 / outside))
                               :time (c36-4 / always))))

# ::snt Still trying to remain relevant
# ::tokens ["Still", "trying", "to", "remain", "relevant"]
# ::lemmas ["still", "try", "to", "remain", "relevant"]
(c37-3 / try-01
       :ARG1 (c37-2 / remain-01
                    :ARG3 (c37-4 / relevant-01
                                 :ARG1 (c37-0 / you)))
       :mod (c37-1 / still))

# ::snt Buhhh bye. Don't come back.
# ::tokens ["Buhhh", "bye", ".", "Do", "n't", "come", "back", "."]
# ::lemmas ["buhhh", "bye", ".", "do", "not", "come", "back", "."]
(c38-2 / multi-sentence
       :snt1 (c38-3 / say-01
                    :ARG1 (c38-0 / bye)
                    :mod (c38-6 / uhh
                                :mode expressive))
       :snt2 (c38-5 / come-01
                    :ARG1 (c38-1 / you)
                    :direction (c38-4 / back)
                    :mode imperative
                    :polarity -))

# ::snt Don't let the door hit you
# ::tokens ["Do", "n't", "let", "the", "door", "hit", "you"]
# ::lemmas ["do", "not", "let", "the", "door", "hit", "you"]
(c39-2 / let-01
       :ARG0 (c39-1 / you)
       :ARG1 (c39-3 / hit-01
                    :ARG1 (c39-0 / door)
                    :ARG2 c39-1)
       :polarity -
       :mode imperative)

# ::snt That affects us how????
# ::tokens ["That", "affects", "us", "how", "?", "?", "?", "?"]
# ::lemmas ["that", "affect", "we", "how", "?", "?", "?", "?"]
(c40-3 / affect-01
       :ARG0 (c40-1 / that)
       :ARG1 (c40-0 / we)
       :manner (c40-2 / amr-unknown))

# ::snt GREAT!
# ::tokens ["GREAT", "!"]
# ::lemmas ["GREAT", "!"]
(c42-0 / great
       :mode expressive)

# ::snt Bye bye bye
# ::tokens ["Bye", "bye", "bye"]
# ::lemmas ["bye", "bye", "bye"]
(c43-0 / bye
       :mode expressive)

# ::snt Good stay there.
# ::tokens ["Good", "stay", "there", "."]
# ::lemmas ["good", "stay", "there", "."]
(c44-3 / stay-01
       :ARG1 (c44-1 / you)
       :location (c44-2 / there)
       :ARG1-of (c44-0 / good-02))

# ::snt Please stay there! I promise we won't miss you....ever!
# ::tokens ["Please", "stay", "there", "!", "I", "promise", "we", "wo", "n't", "miss", "you", "....", "ever", "!"]
# ::lemmas ["please", "stay", "there", "!", "i", "promise", "we", "will", "not", "miss", "you", "....", "ever", "!"]
(c45-1 / multi-sentence
       :snt1 (c45-2 / stay-01
                    :ARG1 (c45-0 / you)
                    :ARG3 (c45-8 / there)
                    :mode imperative
                    :polite +)
       :snt2 (c45-5 / promise-01
                    :ARG0 (c45-7 / i)
                    :ARG2 (c45-4 / miss-01
                                 :ARG0 (c45-6 / we)
                                 :ARG1 (c45-9 / you)
                                 :time (c45-3 / ever)
                                 :polarity -)))

# ::snt Queen
# ::tokens ["Queen"]
# ::lemmas ["queen"]
(c46-1 / person
       :ARG0-of (c46-0 / have-org-role-91
                       :ARG2 (c46-2 / queen)))

# ::snt Bye, don't rush to come back
# ::tokens ["Bye", ",", "do", "n't", "rush", "to", "come", "back"]
# ::lemmas ["bye", ",", "do", "not", "rush", "to", "come", "back"]
(c47-2 / rush-01
       :ARG1 (c47-1 / you)
       :ARG2 (c47-4 / come-01
                    :ARG1 c47-1
                    :direction (c47-0 / back))
       :mod (c47-3 / bye)
       :polarity -
       :mode imperative)

# ::snt Who cares if she moved to Mars?
# ::tokens ["Who", "cares", "if", "she", "moved", "to", "Mars", "?"]
# ::lemmas ["who", "care", "if", "she", "move", "to", "Mars", "?"]
(c48-4 / care-01
       :ARG0 (c48-5 / amr-unknown)
       :ARG1 (c48-0 / move-01
                    :ARG0 (c48-2 / she)
                    :ARG2 (c48-3 / planet
                                 :name (c48-1 / name
                                              :op1 "Mars"))))

# ::snt Plz no music
# ::tokens ["Plz", "no", "music"]
# ::lemmas ["plz", "no", "music"]
(c49-1 / music
       :mod (c49-0 / plz)
       :polarity -)

# ::snt I don't blame her for wanting to leave the U.S. with all that is going on in America. Much Success!
# ::tokens ["I", "do", "n't", "blame", "her", "for", "wanting", "to", "leave", "the", "U.S.", "with", "all", "that", "is", "going", "on", "in", "America", ".", "Much", "Success", "!"]
# ::lemmas ["i", "do", "not", "blame", "she", "for", "want", "to", "leave", "the", "U.S.", "with", "all", "that", "be", "go", "on", "in", "America", ".", "much", "Success", "!"]
(c50-2 / multi-sentence
       :snt1 (c50-1 / blame-01
                    :ARG0 (c50-10 / i)
                    :ARG1 (c50-4 / she)
                    :ARG2 (c50-8 / want-01
                                 :ARG0 c50-4
                                 :ARG1 (c50-7 / leave-11
                                              :ARG0 c50-4
                                              :ARG1 (c50-9 / country
                                                           :name (c50-3 / name
                                                                        :op1 "U.S."))
                                              :ARG1-of (c50-13 / cause-01
                                                               :ARG0 (c50-11 / that
                                                                             :mod (c50-5 / all)
                                                                             :ARG1-of (c50-12 / go-on-15
                                                                                              :location c50-9)))))
                    :snt2 (c50-0 / succeed-01
                                 :degree (c50-6 / much))
                    :polarity -))
