# ::snt I would have been done once I was sentenced to year in jail; fuck*r had her seeing her babies from behind bars
# ::tokens ["I", "would", "have", "been", "done", "once", "I", "was", "sentenced", "to", "year", "in", "jail", ";", "fuck*r", "had", "her", "seeing", "her", "babies", "from", "behind", "bars"]
# ::lemmas ["i", "would", "have", "be", "do", "once", "i", "be", "sentence", "to", "year", "in", "jail", ";", "fuck*r", "have", "she", "see", "her", "baby", "from", "behind", "bar"]
(c2-4 / multi-sentence
      :snt1 (c2-12 / do-02
                   :ARG0 (c2-10 / i)
                   :time (c2-5 / sentence-01
                               :ARG1 c2-10
                               :ARG2 (c2-11 / temporal-quantity
                                            :unit (c2-3 / year)
                                            :location (c2-9 / jail)
                                            :quant 1)))
      :snt2 (c2-6 / have-04
                  :ARG0 (c2-0 / fuck-01)
                  :ARG1 (c2-1 / see-01
                              :ARG0 (c2-13 / she)
                              :ARG1 (c2-2 / baby
                                          :poss c2-13)
                              :manner (c2-7 / behind
                                            :op1 (c2-8 / bar)))))

# ::snt Ray Charles saw this coming....4 seasons ago..
# ::tokens ["Ray", "Charles", "saw", "this", "coming", "....", "4", "seasons", "ago", ".."]
# ::lemmas ["Ray", "Charles", "see", "this", "come", "....", "4", "seasons", "ago", ".."]
(c3-3 / see-01
      :ARG0 (c3-5 / person
                  :name (c3-2 / name
                              :op1 "Ray"
                              :op2 "Charles"))
      :ARG1 (c3-6 / come-03
                  :ARG1 (c3-7 / this))
      :time (c3-1 / before
                  :op1 (c3-4 / now)
                  :quant (c3-8 / temporal-quantity
                               :unit (c3-0 / season)
                               :quant 4)))

# ::snt Caroline Manzo predicted this.
# ::tokens ["Caroline", "Manzo", "predicted", "this", "."]
# ::lemmas ["Caroline", "Manzo", "predict", "this", "."]
(c4-1 / predict-01
      :ARG0 (c4-2 / person
                  :name (c4-0 / name
                              :op1 "Caroline"
                              :op2 "Manzo"))
      :ARG1 (c4-3 / this))

# ::snt I'm not ready to believe it yet
# ::tokens ["I", "'m", "not", "ready", "to", "believe", "it", "yet"]
# ::lemmas ["i", "be", "not", "ready", "to", "believe", "it", "yet"]
(c5-3 / ready-02
      :ARG1 (c5-4 / i)
      :ARG2 (c5-0 / believe-01
                  :ARG0 c5-4
                  :ARG1 (c5-2 / it))
      :time (c5-1 / yet)
      :polarity -)

# ::snt Good for her. I think she learned her lesson - she needs to keep moving forward with her transformation for both herself and her girls. Leave that deadweight behind.
# ::tokens ["Good", "for", "her", ".", "I", "think", "she", "learned", "her", "lesson", "-", "she", "needs", "to", "keep", "moving", "forward", "with", "her", "transformation", "for", "both", "herself", "and", "her", "girls", ".", "Leave", "that", "deadweight", "behind", "."]
# ::lemmas ["good", "for", "she", ".", "i", "think", "she", "learn", "her", "lesson", "-", "she", "need", "to", "keep", "move", "forward", "with", "her", "transformation", "for", "both", "herself", "and", "her", "girl", ".", "leave", "that", "deadweight", "behind", "."]
(c6-12 / multi-sentence
       :snt1 (c6-10 / good-04
                    :ARG2 (c6-0 / she))
       :snt2 (c6-9 / think-01
                   :ARG0 (c6-17 / i)
                   :ARG1 (c6-1 / learn-01
                               :ARG0 c6-0
                               :ARG1 (c6-11 / lesson
                                            :poss c6-0
                                            :ARG1-of (c6-5 / mean-01
                                                           :ARG2 (c6-16 / need-01
                                                                        :ARG0 (c6-3 / she)
                                                                        :ARG1 (c6-6 / keep-02
                                                                                    :ARG0 c6-3
                                                                                    :ARG1 (c6-14 / move-01
                                                                                                 :ARG0 c6-3
                                                                                                 :ARG2 (c6-13 / transform-01
                                                                                                              :ARG1 c6-3
                                                                                                              :beneficiary (c6-8 / and
                                                                                                                                 :op1 c6-3
                                                                                                                                 :op2 (c6-2 / girl
                                                                                                                                            :poss c6-3)))
                                                                                                 :direction (c6-15 / forward))))))))
       :snt3 (c6-7 / leave-behind-18
                   :ARG0 (c6-4 / you)
                   :ARG1 (c6-19 / deadweight
                                :mod (c6-18 / that))
                   :mode imperative))

# ::snt What a surprise! Shes been going buck wild all summer! Good for her, he treated her like trash!
# ::tokens ["What", "a", "surprise", "!", "She", "s", "been", "going", "buck", "wild", "all", "summer", "!", "Good", "for", "her", ",", "he", "treated", "her", "like", "trash", "!"]
# ::lemmas ["what", "a", "surprise", "!", "she", "s", "be", "go", "buck", "wild", "all", "summer", "!", "good", "for", "she", ",", "he", "treat", "she", "like", "trash", "!"]
(c8-1 / multi-sentence
      :snt1 (c8-2 / surprise-01
                  :mode expressive)
      :snt2 (c8-10 / go-08
                   :ARG1 (c8-4 / he)
                   :ARG2 (c8-5 / wild
                               :domain c8-4)
                   :time (c8-11 / date-entity
                                :season (c8-0 / summer)
                                :mod (c8-9 / all)))
      :snt3 (c8-8 / good-04
                  :ARG2 (c8-13 / she))
      :snt4 (c8-7 / treat-01
                  :ARG0 (c8-6 / he)
                  :ARG1 (c8-3 / she)
                  :ARG2 (c8-12 / trash)))

# ::snt I don't see her divorcing him she could move to Italy and Bravo give her a spinoff
# ::tokens ["I", "do", "n't", "see", "her", "divorcing", "him", "she", "could", "move", "to", "Italy", "and", "Bravo", "give", "her", "a", "spinoff"]
# ::lemmas ["i", "do", "not", "see", "she", "divorce", "he", "she", "could", "move", "to", "Italy", "and", "Bravo", "give", "she", "a", "spinoff"]
(c9-9 / and
      :op1 (c9-3 / see-01
                 :ARG0 (c9-8 / i)
                 :ARG1 (c9-11 / divorce-01
                              :ARG0 (c9-0 / she)
                              :ARG1 (c9-4 / he))
                 :polarity -)
      :op2 (c9-5 / possible-01
                 :ARG1 (c9-1 / move-01
                             :ARG0 c9-0
                             :ARG2 (c9-7 / country
                                         :name (c9-2 / name
                                                     :op1 "Italy"))))
      :op3 (c9-10 / give-01
                  :ARG0 (c9-12 / company
                               :name (c9-6 / name
                                           :op1 "Bravo"))
                  :ARG1 (c9-13 / spinoff)
                  :ARG2 c9-0))

# ::snt who gives a shit!
# ::tokens ["who", "gives", "a", "shit", "!"]
# ::lemmas ["who", "give", "a", "shit", "!"]
(c10-0 / give-16
       :ARG0 (c10-2 / amr-unknown)
       :ARG1 (c10-1 / shit)
       :mode expressive)
