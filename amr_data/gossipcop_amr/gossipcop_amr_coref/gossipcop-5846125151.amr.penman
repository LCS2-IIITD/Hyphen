# ::snt Ummmm....who cares!!
# ::tokens ["Ummmm", "....", "who", "cares", "!", "!"]
# ::lemmas ["Ummmm", "....", "who", "care", "!", "!"]
(c1-0 / care-01
      :ARG0 (c1-2 / amr-unknown)
      :mod (c1-1 / umm
                 :mode expressive))

# ::snt Thats downright low...
# ::tokens ["That", "s", "downright", "low", "..."]
# ::lemmas ["that", "s", "downright", "low", "..."]
(c2-1 / low-04
      :ARG1 (c2-2 / that)
      :degree (c2-0 / downright))

# ::snt Nobody's Perfect and just confess to your wife and your kids and Life Goes On tell them sorry it won't happen again.
# ::tokens ["Nobody", "'s", "Perfect", "and", "just", "confess", "to", "your", "wife", "and", "your", "kids", "and", "Life", "Goes", "On", "tell", "them", "sorry", "it", "wo", "n't", "happen", "again", "."]
# ::lemmas ["nobody", "'s", "perfect", "and", "just", "confess", "to", "your", "wife", "and", "your", "kid", "and", "life", "go", "on", "tell", "they", "sorry", "it", "will", "not", "happen", "again", "."]
(c3-9 / and
      :op1 (c3-14 / perfect-02
                  :ARG1 (c3-13 / nobody))
      :op2 (c3-8 / and
                 :op1 (c3-12 / confess-01
                             :ARG0 (c3-2 / you)
                             :ARG2 (c3-6 / and
                                         :op1 (c3-11 / person
                                                     :ARG0-of (c3-4 / have-rel-role-91
                                                                    :ARG1 c3-2
                                                                    :ARG2 (c3-15 / wife)))
                                         :op2 (c3-1 / person
                                                    :ARG0-of (c3-16 / have-rel-role-91
                                                                    :ARG1 c3-2
                                                                    :ARG2 (c3-5 / kid))))
                             :mod (c3-7 / just))
                 :op2 (c3-10 / tell-01
                             :ARG0 c3-2
                             :ARG1 (c3-0 / sorry-01
                                         :ARG1 c3-6
                                         :ARG2 (c3-3 / have-mod-91
                                                     :ARG1 (c3-17 / it)
                                                     :ARG2 (c3-18 / again)
                                                     :polarity -))
                             :ARG2 c3-6)))

# ::snt Pray about it and move on brah
# ::tokens ["Pray", "about", "it", "and", "move", "on", "brah"]
# ::lemmas ["pray", "about", "it", "and", "move", "on", "brah"]
(c4-5 / and
      :op1 (c4-3 / pray-01
                 :ARG0 (c4-1 / you)
                 :topic (c4-4 / it)
                 :mode imperative)
      :op2 (c4-2 / move-01
                 :ARG0 c4-1
                 :ARG2 (c4-0 / brah)
                 :mode imperative))

# ::snt LOL don't even feel bad for him
# ::tokens ["LOL", "do", "n't", "even", "feel", "bad", "for", "him"]
# ::lemmas ["lol", "do", "not", "even", "feel", "bad", "for", "he"]
(c5-0 / feel-01
      :ARG0 (c5-2 / you)
      :ARG1 (c5-1 / bad-07)
      :ARG2 (c5-4 / he)
      :mod (c5-3 / even)
      :ARG2-of (c5-5 / laugh-01
                     :ARG0 (c5-6 / i)
                     :manner (c5-7 / loud)
                     :mode expressive)
      :polarity -
      :mode imperative)

# ::snt Best meme ever! Lol
# ::tokens ["Best", "meme", "ever", "!", "Lol"]
# ::lemmas ["good", "meme", "ever", "!", "Lol"]
(c6-3 / have-degree-91
      :ARG1 (c6-0 / meme)
      :ARG2 (c6-5 / good-02
                  :ARG1 c6-0
                  :time (c6-1 / ever))
      :ARG3 (c6-2 / most)
      :ARG5 (c6-4 / laugh-01
                  :manner (c6-6 / loud)
                  :mode expressive)
      :mode expressive)

# ::snt He just funny that's it
# ::tokens ["He", "just", "funny", "that", "'s", "it"]
# ::lemmas ["he", "just", "funny", "that", "be", "it"]
(c7-0 / funny-02
      :ARG1 (c7-2 / he)
      :mod (c7-3 / just)
      :ARG1-of (c7-1 / be-it-06))

# ::snt Reality is no man would pay $10m to cover this up
# ::tokens ["Reality", "is", "no", "man", "would", "pay", "$", "10", "m", "to", "cover", "this", "up"]
# ::lemmas ["reality", "be", "no", "man", "would", "pay", "$", "10", "m", "to", "cover", "this", "up"]
(c8-1 / reality
      :domain (c8-3 / pay-01
                    :ARG0 (c8-0 / man)
                    :ARG1 (c8-2 / monetary-quantity
                                :unit (c8-6 / dollar)
                                :quant 10000000)
                    :ARG3 (c8-4 / cover-up-04
                                :ARG0 c8-0
                                :ARG1 (c8-5 / this))
                    :polarity -))

# ::snt If that is a confssion then l don't know.
# ::tokens ["If", "that", "is", "a", "confssion", "then", "l", "do", "n't", "know", "."]
# ::lemmas ["if", "that", "be", "a", "confssion", "then", "l", "do", "not", "know", "."]
(c10-1 / know-01
       :ARG0 (c10-2 / i)
       :condition (c10-0 / confssion
                         :domain (c10-3 / that))
       :polarity -)

# ::snt Nigga....
# ::tokens ["Nigga", "...."]
# ::lemmas ["Nigga", "...."]
(c11-1 / person
       :name (c11-0 / name
                    :op1 "Nigga"))

# ::snt Careful who you come at on Twitter. You'll get killed over a bad joke.
# ::tokens ["Careful", "who", "you", "come", "at", "on", "Twitter", ".", "You", "'ll", "get", "killed", "over", "a", "bad", "joke", "."]
# ::lemmas ["careful", "who", "you", "come", "at", "on", "Twitter", ".", "you", "'ll", "get", "kill", "over", "a", "bad", "joke", "."]
(c12-2 / multi-sentence
       :snt1 (c12-7 / care-04
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-5 / person
                                 :ARG2-of (c12-11 / come-03
                                                  :ARG1 c12-1
                                                  :medium (c12-3 / publication
                                                                 :name (c12-4 / name
                                                                              :op1 "Twitter"))))
                    :mode imperative)
       :snt2 (c12-6 / kill-01
                    :ARG1 (c12-10 / you)
                    :ARG1-of (c12-8 / cause-01
                                    :ARG0 (c12-9 / joke-01
                                                 :ARG1-of (c12-0 / bad-07)))))

# ::snt Who gives a FUCK live your life and FUCK as many as you can because one day you will FUCKING DIE
# ::tokens ["Who", "gives", "a", "FUCK", "live", "your", "life", "and", "FUCK", "as", "many", "as", "you", "can", "because", "one", "day", "you", "will", "FUCKING", "DIE"]
# ::lemmas ["who", "give", "a", "FUCK", "live", "your", "life", "and", "FUCK", "as", "many", "as", "you", "can", "because", "one", "day", "you", "will", "fucking", "DIE"]
(c13-10 / cause-01
        :ARG0 (c13-15 / die-01
                      :ARG1 (c13-2 / you)
                      :mod (c13-0 / fucking)
                      :time (c13-11 / day
                                    :mod (c13-1 / one)))
        :ARG1 (c13-14 / give-16
                      :ARG0 (c13-13 / amr-unknown)
                      :ARG1 (c13-7 / fuck)
                      :ARG2 (c13-12 / and
                                    :op1 (c13-6 / live-01
                                                :ARG0 c13-2
                                                :ARG1 (c13-16 / life
                                                              :poss c13-2))
                                    :op2 (c13-8 / live-01
                                                :ARG0 c13-2
                                                :ARG1-of (c13-5 / have-quant-91
                                                                :ARG2 (c13-3 / many)
                                                                :ARG3 (c13-4 / equal)
                                                                :ARG4 (c13-9 / possible-01
                                                                             :ARG1 c13-8))))))

# ::snt Proud of you kid. Stay strong
# ::tokens ["Proud", "of", "you", "kid", ".", "Stay", "strong"]
# ::lemmas ["proud", "of", "you", "kid", ".", "stay", "strong"]
(c14-2 / multi-sentence
       :snt1 (c14-4 / pride-01
                    :ARG0 (c14-6 / i)
                    :ARG1 (c14-5 / kid))
       :snt2 (c14-3 / stay-01
                    :ARG1 (c14-1 / you)
                    :ARG3 (c14-0 / strong-02
                                 :ARG1 c14-1)))

# ::snt Dam
# ::tokens ["Dam"]
# ::lemmas ["dam"]
(c15-1 / person
       :name (c15-0 / name))

# ::snt Damn Kevin!! U Cheated on ur Wife!! What The Hell u was Thinking?
# ::tokens ["Damn", "Kevin", "!", "!", "U", "Cheated", "on", "ur", "Wife", "!", "!", "What", "The", "Hell", "u", "was", "Thinking", "?"]
# ::lemmas ["Damn", "Kevin", "!", "!", "U", "Cheated", "on", "ur", "Wife", "!", "!", "what", "the", "Hell", "u", "be", "Thinking", "?"]
(c16-1 / multi-sentence
       :snt1 (c16-3 / say-01
                    :ARG0 (c16-11 / i)
                    :ARG1 (c16-14 / damn)
                    :ARG2 (c16-7 / person
                                 :name (c16-2 / name
                                              :op1 "Kevin")))
       :snt2 (c16-8 / cheat-03
                    :ARG0 (c16-0 / you)
                    :ARG1 (c16-4 / person
                                 :ARG0-of (c16-6 / have-rel-role-91
                                                 :ARG1 c16-0
                                                 :ARG2 (c16-9 / wife))))
       :snt3 (c16-12 / think-01
                     :ARG0 (c16-13 / you)
                     :ARG1 (c16-5 / amr-unknown)
                     :mod (c16-10 / hell
                                  :mode expressive)))

# ::snt This Gotta Go Viral
# ::tokens ["This", "Got", "ta", "Go", "Viral"]
# ::lemmas ["this", "got", "to", "go", "Viral"]
(c17-1 / obligate-01
       :ARG1 (c17-0 / go-02
                    :ARG0 (c17-3 / this)
                    :ARG1 (c17-2 / Viral)))

# ::snt This Gotta Go Viral
# ::tokens ["This", "Got", "ta", "Go", "Viral"]
# ::lemmas ["this", "got", "to", "go", "Viral"]
(c18-1 / obligate-01
       :ARG1 (c18-0 / go-02
                    :ARG0 (c18-3 / this)
                    :ARG1 (c18-2 / Viral)))

# ::snt He should have played the song ELEMENT.
# ::tokens ["He", "should", "have", "played", "the", "song", "ELEMENT", "."]
# ::lemmas ["he", "should", "have", "play", "the", "song", "ELEMENT", "."]
(c19-2 / recommend-01
       :ARG1 (c19-4 / play-11
                    :ARG0 (c19-3 / he)
                    :ARG1 (c19-1 / song
                                 :name (c19-0 / name
                                              :op1 "Eve"))))

# ::snt Is messy now he mess around with a woman and this woman was going to tell on him if she have more Cash that's why he telling on him self.
# ::tokens ["Is", "messy", "now", "he", "mess", "around", "with", "a", "woman", "and", "this", "woman", "was", "going", "to", "tell", "on", "him", "if", "she", "have", "more", "Cash", "that", "'s", "why", "he", "telling", "on", "him", "self", "."]
# ::lemmas ["be", "messy", "now", "he", "mess", "around", "with", "a", "woman", "and", "this", "woman", "be", "go", "to", "tell", "on", "he", "if", "she", "have", "more", "cash", "that", "be", "why", "he", "tell", "on", "he", "self", "."]
(c20-8 / and
       :op1 (c20-1 / mess-up-02
                   :ARG0 (c20-2 / he)
                   :ARG1 (c20-4 / woman)
                   :time (c20-0 / now))
       :op2 (c20-7 / tell-01
                   :ARG0 c20-4
                   :ARG2 c20-2
                   :condition (c20-6 / have-03
                                     :ARG0 c20-4
                                     :ARG1 (c20-5 / cash
                                                  :quant (c20-3 / more)))
                   :ARG0-of (c20-10 / cause-01
                                    :ARG1 (c20-9 / tell-01
                                                 :ARG0 c20-2
                                                 :ARG2 c20-2))))

# ::snt These Hoes in it for the
# ::tokens ["These", "Hoes", "in", "it", "for", "the"]
# ::lemmas ["these", "hoe", "in", "it", "for", "the"]
(c21-0 / be-located-at-91
       :ARG1 (c21-1 / hut
                    :mod (c21-3 / this))
       :ARG2 (c21-2 / it))

# ::snt It's messy and he is talking about the Issue but yall is missing the true story? He was a hot mess with his first wife? Now this one
# ::tokens ["It", "'s", "messy", "and", "he", "is", "talking", "about", "the", "Issue", "but", "y", "all", "is", "missing", "the", "true", "story", "?", "He", "was", "a", "hot", "mess", "with", "his", "first", "wife", "?", "Now", "this", "one"]
# ::lemmas ["it", "be", "messy", "and", "he", "be", "talk", "about", "the", "issue", "but", "you", "all", "be", "miss", "the", "true", "story", "?", "he", "be", "a", "hot", "mess", "with", "his", "first", "wife", "?", "now", "this", "one"]
(c22-10 / multi-sentence
        :snt1 (c22-7 / and
                     :op1 (c22-5 / mess-up-02
                                 :ARG0 (c22-19 / it))
                     :op2 (c22-8 / talk-01
                                 :ARG0 (c22-6 / he)
                                 :ARG1 (c22-3 / issue-02)
                                 :concession-of (c22-14 / miss-01
                                                        :ARG0 (c22-2 / you)
                                                        :ARG1 (c22-0 / story
                                                                     :ARG1-of (c22-12 / true-01)))))
        :snt2 (c22-11 / mess-up-02
                      :ARG0 (c22-18 / he)
                      :ARG1 (c22-16 / person
                                    :ARG0-of (c22-4 / have-rel-role-91
                                                    :ARG1 c22-18
                                                    :ARG2 (c22-17 / wife
                                                                  :ord (c22-1 / ordinal-entity
                                                                              :value 1))))
                      :ARG1-of (c22-13 / hot-05))
        :snt3 (c22-9 / one
                     :mod (c22-20 / this)
                     :time (c22-15 / now)))

# ::snt This is one of the biggest acts of repentance. Shit happens!!Give him a chance!! Kevin don't blow it. Next time you will lose your family.
# ::tokens ["This", "is", "one", "of", "the", "biggest", "acts", "of", "repentance", ".", "Shit", "happens!!Give", "him", "a", "chance", "!", "!", "Kevin", "do", "n't", "blow", "it", ".", "Next", "time", "you", "will", "lose", "your", "family", "."]
# ::lemmas ["this", "be", "one", "of", "the", "big", "act", "of", "repentance", ".", "Shit", "happens!!Give", "he", "a", "chance", "!", "!", "Kevin", "do", "not", "blow", "it", ".", "next", "time", "you", "will", "lose", "your", "family", "."]
(c23-12 / multi-sentence
        :snt1 (c23-21 / include-91
                      :ARG1 (c23-7 / this)
                      :ARG2 (c23-8 / act-02
                                   :ARG1 (c23-18 / repent-01)
                                   :ARG1-of (c23-5 / have-degree-91
                                                   :ARG2 (c23-11 / big)
                                                   :ARG3 (c23-6 / most))))
        :snt2 (c23-0 / shit-01
                     :mode expressive)
        :snt3 (c23-9 / give-01
                     :ARG0 (c23-3 / you)
                     :ARG1 (c23-14 / chance-02
                                   :ARG0 (c23-20 / he
                                                 :ARG2-of c23-9))
                     :mode imperative)
        :snt4 (c23-1 / blow-10
                     :ARG0 (c23-19 / person
                                   :name (c23-17 / name
                                                 :op1 "Kevin"))
                     :ARG1 (c23-4 / it)
                     :polarity -)
        :snt5 (c23-2 / lose-02
                     :ARG0 (c23-10 / you)
                     :ARG1 (c23-16 / family
                                   :poss c23-10)
                     :time (c23-15 / time
                                   :mod (c23-13 / next))))

# ::snt It was only a joke we all that guy can say jokes that you can end up believing
# ::tokens ["It", "was", "only", "a", "joke", "we", "all", "that", "guy", "can", "say", "jokes", "that", "you", "can", "end", "up", "believing"]
# ::lemmas ["it", "be", "only", "a", "joke", "we", "all", "that", "guy", "can", "say", "joke", "that", "you", "can", "end", "up", "believe"]
(c24-7 / possible-01
       :ARG1 (c24-9 / joke-01
                    :ARG0 (c24-8 / we
                                 :mod (c24-11 / guy
                                              :mod (c24-10 / that))
                                 :mod (c24-5 / all))
                    :ARG2 (c24-4 / say-01
                                 :ARG0 c24-11
                                 :ARG1 (c24-12 / joke-01
                                               :ARG1-of (c24-1 / believe-01
                                                               :ARG0 (c24-2 / you)
                                                               :ARG1-of (c24-3 / possible-01)
                                                               :ARG1-of (c24-6 / end-up-03
                                                                               :ARG2 c24-2)))))
       :mod (c24-0 / only))

# ::snt I knew he did that shit. Every male species cheats idcccccc
# ::tokens ["I", "knew", "he", "did", "that", "shit", ".", "Every", "male", "species", "cheats", "idcccccc"]
# ::lemmas ["i", "know", "he", "do", "that", "shit", ".", "every", "male", "specie", "cheat", "idcccccc"]
(c25-1 / multi-sentence
       :snt1 (c25-6 / know-01
                    :ARG0 (c25-9 / i)
                    :ARG1 (c25-11 / do-02
                                  :ARG0 (c25-5 / he)
                                  :ARG1 (c25-2 / shit
                                               :mod (c25-10 / that))))
       :snt2 (c25-8 / cheat-03
                    :ARG0 (c25-0 / species
                                 :mod (c25-7 / male)
                                 :mod (c25-4 / every)))
       :snt3 (c25-3 / idcccccc))

# ::snt could be so.. But where there's smoke there's fire.
# ::tokens ["could", "be", "so", "..", "But", "where", "there", "'s", "smoke", "there", "'s", "fire", "."]
# ::lemmas ["could", "be", "so", "..", "but", "where", "there", "be", "smoke", "there", "be", "fire", "."]
(c26-2 / multi-sentence
       :snt1 (c26-4 / possible-01
                    :ARG1 (c26-3 / so))
       :snt2 (c26-5 / contrast-01
                    :ARG2 (c26-0 / fire
                                 :location (c26-1 / smoke))))

# ::snt how do u know she didn't actually catch him. and this confession is just PR stuff
# ::tokens ["how", "do", "u", "know", "she", "did", "n't", "actually", "catch", "him", ".", "and", "this", "confession", "is", "just", "PR", "stuff"]
# ::lemmas ["how", "do", "u", "know", "she", "do", "not", "actually", "catch", "he", ".", "and", "this", "confession", "be", "just", "pr", "stuff"]
(c27-2 / multi-sentence
       :snt1 (c27-5 / know-01
                    :ARG0 (c27-1 / you)
                    :ARG1 (c27-7 / catch-03
                                 :ARG0 (c27-3 / she)
                                 :ARG1 (c27-4 / he)
                                 :ARG1-of (c27-10 / actual-02)
                                 :polarity -)
                    :manner (c27-9 / amr-unknown))
       :snt2 (c27-0 / stuff
                    :mod (c27-6 / public)
                    :mod (c27-8 / just)
                    :domain (c27-12 / confess-01
                                    :mod (c27-11 / this))))

# ::snt He doesn't say he cheated though...
# ::tokens ["He", "does", "n't", "say", "he", "cheated", "though", "..."]
# ::lemmas ["he", "do", "not", "say", "he", "cheat", "though", "..."]
(c28-2 / have-concession-91
       :ARG1 (c28-3 / say-01
                    :ARG0 (c28-0 / he)
                    :ARG1 (c28-1 / cheat-03
                                 :ARG0 c28-0)
                    :polarity -))

# ::snt One Thing For Sure Cheating Is Not A Problem As Long As Ya Are Able To Get Away With It Without Any Harm.....
# ::tokens ["One", "Thing", "For", "Sure", "Cheating", "Is", "Not", "A", "Problem", "As", "Long", "As", "Ya", "Are", "Able", "To", "Get", "Away", "With", "It", "Without", "Any", "Harm", "....."]
# ::lemmas ["One", "thing", "for", "sure", "cheating", "be", "not", "a", "problem", "as", "long", "as", "Ya", "be", "able", "to", "get", "away", "with", "it", "without", "any", "harm", "....."]
(c29-4 / problem
       :domain (c29-5 / cheat-03)
       :ARG1-of (c29-2 / sure-02)
       :condition (c29-7 / as-long-as
                         :op1 (c29-1 / possible-01
                                     :ARG1 (c29-8 / get-away-08
                                                  :ARG0 (c29-0 / you)
                                                  :ARG1 c29-5
                                                  :manner (c29-3 / harm-01
                                                                 :mod (c29-6 / any)
                                                                 :polarity -))))
       :polarity -)

# ::snt We all man will never be in this modest times be satisfied with one vagina it has been there before our forefathers nd will always be there
# ::tokens ["We", "all", "man", "will", "never", "be", "in", "this", "modest", "times", "be", "satisfied", "with", "one", "vagina", "it", "has", "been", "there", "before", "our", "forefathers", "nd", "will", "always", "be", "there"]
# ::lemmas ["we", "all", "man", "will", "never", "be", "in", "this", "modest", "time", "be", "satisfied", "with", "one", "vagina", "it", "have", "be", "there", "before", "our", "forefather", "nd", "will", "always", "be", "there"]
(c30-3 / satisfy-01
       :ARG0 (c30-5 / vagina
                    :ARG1-of (c30-1 / be-located-at-91
                                    :ARG2 (c30-11 / there)
                                    :time (c30-7 / before
                                                 :op1 (c30-4 / and
                                                             :op1 (c30-0 / forefather
                                                                         :poss (c30-2 / man
                                                                                      :mod (c30-10 / all)))
                                                             :op2 (c30-14 / be-located-at-91
                                                                          :ARG1 c30-2
                                                                          :ARG2 c30-5
                                                                          :time (c30-9 / always)))))
                    :quant 1)
       :ARG1 c30-2
       :time (c30-6 / ever)
       :time (c30-13 / time
                     :mod (c30-8 / modest)
                     :mod (c30-12 / this))
       :polarity -)

# ::snt Seriously like the apology changes anything
# ::tokens ["Seriously", "like", "the", "apology", "changes", "anything"]
# ::lemmas ["seriously", "like", "the", "apology", "change", "anything"]
(c31-1 / resemble-01
       :ARG2 (c31-2 / change-01
                    :ARG0 (c31-4 / apologize-01)
                    :ARG1 (c31-3 / anything))
       :ARG1-of (c31-0 / serious-01))

# ::snt spastic
# ::tokens ["spastic"]
# ::lemmas ["spastic"]
(c32-1 / thing
       :ARG1-of (c32-0 / fantastic-02))

# ::snt seems like he did Hun
# ::tokens ["seems", "like", "he", "did", "Hun"]
# ::lemmas ["seem", "like", "he", "do", "Hun"]
(c33-1 / seem-01
       :ARG1 (c33-2 / resemble-01
                    :ARG1 (c33-3 / he)
                    :ARG2 (c33-5 / do-02
                                 :ARG0 (c33-4 / person
                                              :name (c33-0 / name
                                                           :op1 "Hun")))))

# ::snt Like there's anything new here
# ::tokens ["Like", "there", "'s", "anything", "new", "here"]
# ::lemmas ["like", "there", "be", "anything", "new", "here"]
(c35-0 / resemble-01
       :ARG2 (c35-2 / new-01
                    :ARG1 (c35-3 / anything)
                    :location (c35-1 / here)))

# ::snt i was waiitng for him to crack a joke at the end
# ::tokens ["i", "was", "waiitng", "for", "him", "to", "crack", "a", "joke", "at", "the", "end"]
# ::lemmas ["i", "be", "waiitng", "for", "he", "to", "crack", "a", "joke", "at", "the", "end"]
(c36-2 / waiit-01
       :ARG0 (c36-5 / i)
       :ARG1 (c36-3 / crack-01
                    :ARG0 (c36-1 / he)
                    :ARG1 (c36-4 / joke-01)
                    :time (c36-0 / end-01)))

# ::snt reality is; no man would walk up to his woman and say I cheated.
# ::tokens ["reality", "is", ";", "no", "man", "would", "walk", "up", "to", "his", "woman", "and", "say", "I", "cheated", "."]
# ::lemmas ["reality", "be", ";", "no", "man", "would", "walk", "up", "to", "his", "woman", "and", "say", "i", "cheat", "."]
(c37-7 / and
       :op1 (c37-4 / walk-01
                   :ARG0 (c37-0 / man)
                   :ARG2 (c37-3 / woman
                                :poss c37-0)
                   :direction (c37-8 / up)
                   :polarity -)
       :op2 (c37-1 / say-01
                   :ARG0 c37-0
                   :ARG1 (c37-5 / cheat-03
                                :ARG0 (c37-6 / i))
                   :polarity -)
       :domain (c37-2 / reality))

# ::snt when did this happen?
# ::tokens ["when", "did", "this", "happen", "?"]
# ::lemmas ["when", "do", "this", "happen", "?"]
(c38-1 / be-temporally-at-91
       :ARG1 (c38-2 / this)
       :ARG2 (c38-0 / amr-unknown))

# ::snt He cheated on his previous wife with this current wife, and now he did it again, oh please... Spare us
# ::tokens ["He", "cheated", "on", "his", "previous", "wife", "with", "this", "current", "wife", ",", "and", "now", "he", "did", "it", "again", ",", "oh", "please", "...", "Spare", "us"]
# ::lemmas ["he", "cheat", "on", "his", "previous", "wife", "with", "this", "current", "wife", ",", "and", "now", "he", "do", "it", "again", ",", "oh", "please", "...", "spare", "we"]
(c39-10 / multi-sentence
        :snt1 (c39-8 / and
                     :op1 (c39-12 / cheat-03
                                  :ARG0 (c39-5 / he)
                                  :ARG1 (c39-16 / person
                                                :ARG0-of (c39-18 / have-rel-role-91
                                                                 :ARG1 c39-5
                                                                 :ARG2 (c39-17 / wife
                                                                               :time (c39-11 / previous))))
                                  :ARG2 (c39-2 / person
                                               :ARG0-of (c39-4 / have-rel-role-91
                                                               :ARG1 c39-5
                                                               :ARG2 (c39-1 / wife
                                                                            :time (c39-9 / current)))
                                               :mod (c39-7 / this)))
                     :op2 (c39-19 / do-02
                                  :ARG0 (c39-13 / he)
                                  :ARG1 c39-12
                                  :mod (c39-6 / again)
                                  :time (c39-15 / now)))
        :snt2 (c39-0 / scare-01
                     :ARG0 (c39-3 / you)
                     :ARG1 (c39-14 / we)
                     :mode imperative
                     :polite +))

# ::snt Lol that cause he got caught
# ::tokens ["Lol", "that", "cause", "he", "got", "caught"]
# ::lemmas ["Lol", "that", "cause", "he", "got", "catch"]
(c40-2 / cause-01
       :ARG0 (c40-5 / catch-02
                    :ARG1 (c40-0 / he))
       :ARG1 (c40-3 / that)
       :mod (c40-1 / laugh-01
                   :manner (c40-4 / loud)
                   :mode expressive))

# ::snt I really don't care
# ::tokens ["I", "really", "do", "n't", "care"]
# ::lemmas ["i", "really", "do", "not", "care"]
(c43-0 / care-01
       :ARG0 (c43-1 / i)
       :degree (c43-2 / really)
       :polarity -)

# ::snt Shave bro,you won't cheat anymore!
# ::tokens ["Shave", "bro", ",", "you", "wo", "n't", "cheat", "anymore", "!"]
# ::lemmas ["shave", "bro", ",", "you", "will", "not", "cheat", "anymore", "!"]
(c44-4 / cheat-03
       :ARG0 (c44-1 / you
                    :ARG0-of (c44-3 / have-rel-role-91
                                    :ARG2 (c44-0 / bro)))
       :time (c44-5 / anymore)
       :ARG1-of (c44-2 / shame-02)
       :polarity -
       :mode expressive)

# ::snt cheating ass nigga lmao
# ::tokens ["cheating", "ass", "nigga", "lmao"]
# ::lemmas ["cheat", "ass", "nigga", "lmao"]
(c45-1 / say-01
       :ARG0 (c45-4 / i)
       :ARG1 (c45-5 / ass
                    :ARG0-of (c45-3 / cheat-03))
       :ARG2 (c45-2 / person
                    :name (c45-0 / name
                                 :op1 "Lmao")))

# ::snt sometimes you gotta be the bigger man and do what's right, no matter how hard. I respect him for that
# ::tokens ["sometimes", "you", "got", "ta", "be", "the", "bigger", "man", "and", "do", "what", "'s", "right", ",", "no", "matter", "how", "hard", ".", "I", "respect", "him", "for", "that"]
# ::lemmas ["sometimes", "you", "got", "to", "be", "the", "big", "man", "and", "do", "what", "be", "right", ",", "no", "matter", "how", "hard", ".", "i", "respect", "he", "for", "that"]
(c46-3 / multi-sentence
       :snt1 (c46-0 / obligate-01
                    :ARG1 (c46-2 / you)
                    :ARG2 (c46-13 / and
                                  :op1 (c46-7 / have-degree-91
                                              :ARG1 c46-2
                                              :ARG2 (c46-1 / big)
                                              :ARG3 (c46-8 / more)
                                              :ARG4 (c46-16 / man))
                                  :op2 (c46-14 / do-02
                                               :ARG0 c46-2
                                               :ARG1 (c46-11 / thing
                                                             :ARG1-of (c46-5 / right-02))))
                    :frequency (c46-4 / sometimes)
                    :ARG1-of (c46-15 / regardless-91
                                     :ARG2 c46-11
                                     :degree-of (c46-10 / hard-02)))
       :snt2 (c46-9 / respect-01
                    :ARG0 (c46-12 / i)
                    :ARG1 (c46-6 / he)
                    :ARG2 (c46-17 / that)))

# ::snt He didnt say that wtf
# ::tokens ["He", "did", "nt", "say", "that", "wtf"]
# ::lemmas ["he", "do", "not", "say", "that", "wtf"]
(c47-3 / say-01
       :ARG0 (c47-1 / he)
       :ARG1 (c47-2 / that)
       :mod (c47-0 / fuck
                   :mode expressive)
       :polarity -)

# ::snt Who gives a flying fuck hats between him and his wife. I could care less. You gotta move better bruhhhhh
# ::tokens ["Who", "gives", "a", "flying", "fuck", "hats", "between", "him", "and", "his", "wife", ".", "I", "could", "care", "less", ".", "You", "got", "ta", "move", "better", "bruhhhhh"]
# ::lemmas ["who", "give", "a", "fly", "fuck", "hat", "between", "he", "and", "his", "wife", ".", "i", "could", "care", "less", ".", "you", "got", "to", "move", "well", "bruhhhhh"]
(c48-11 / multi-sentence
        :snt1 (c48-9 / give-16
                     :ARG0 (c48-8 / amr-unknown)
                     :ARG1 (c48-6 / hat
                                  :ARG1-of (c48-16 / fly-01)
                                  :mod (c48-18 / fuck))
                     :ARG2 (c48-10 / between
                                   :op1 (c48-20 / he)
                                   :op2 (c48-17 / person
                                                :ARG0-of (c48-5 / have-rel-role-91
                                                                :ARG1 c48-20
                                                                :ARG2 (c48-19 / wife)))))
        :snt2 (c48-12 / possible-01
                      :ARG1 (c48-14 / have-degree-91
                                    :ARG1 (c48-21 / i)
                                    :ARG2 (c48-13 / care-01
                                                  :ARG0 c48-21)
                                    :ARG3 (c48-1 / less)))
        :snt3 (c48-3 / obligate-01
                     :ARG1 (c48-4 / you)
                     :ARG2 (c48-7 / move-01
                                  :ARG1 c48-4
                                  :ARG1-of c48-14
                                  :ARG2 (c48-2 / good-02
                                               :ARG1 c48-7)
                                  :ARG3 (c48-15 / more)))
        :mod (c48-0 / bruh
                    :mode expressive))

# ::snt st. Don't care nd. Mind your business
# ::tokens ["st", ".", "Do", "n't", "care", "nd", ".", "Mind", "your", "business"]
# ::lemmas ["st", ".", "do", "not", "care", "nd", ".", "mind", "your", "business"]
(c49-4 / and
       :op1 (c49-3 / care-01
                   :polarity -
                   :li 1)
       :op2 (c49-2 / mind-05
                   :ARG0 (c49-1 / you)
                   :ARG1 (c49-0 / business
                                :poss c49-1)
                   :mode imperative))

# ::snt That wasn't a full apology. He said he has a target on his back. He deflected. He put the target on his own back
# ::tokens ["That", "was", "n't", "a", "full", "apology", ".", "He", "said", "he", "has", "a", "target", "on", "his", "back", ".", "He", "deflected", ".", "He", "put", "the", "target", "on", "his", "own", "back"]
# ::lemmas ["that", "be", "not", "a", "full", "apology", ".", "he", "say", "he", "have", "a", "target", "on", "his", "back", ".", "he", "deflect", ".", "he", "put", "the", "target", "on", "his", "own", "back"]
(c50-2 / multi-sentence
       :snt1 (c50-4 / apologize-01
                    :mod (c50-0 / full)
                    :domain (c50-10 / that)
                    :polarity -)
       :snt2 (c50-3 / say-01
                    :ARG0 (c50-6 / he)
                    :ARG1 (c50-9 / have-03
                                 :ARG0 (c50-5 / he
                                              :part (c50-1 / back))
                                 :ARG1 (c50-13 / target)
                                 :location c50-1))
       :snt3 (c50-11 / deflect-01
                     :ARG0 (c50-12 / he))
       :snt4 (c50-7 / put-01
                    :ARG0 (c50-8 / he)
                    :ARG1 c50-13
                    :ARG2 c50-1))
