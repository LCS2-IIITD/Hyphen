# ::snt Hes a loser! Seriously if he wasn't him and was an average joe he would be considered a dead beat dad and a cult member! Oh wait he IS!
# ::tokens ["He", "s", "a", "loser", "!", "Seriously", "if", "he", "was", "n't", "him", "and", "was", "an", "average", "joe", "he", "would", "be", "considered", "a", "dead", "beat", "dad", "and", "a", "cult", "member", "!", "Oh", "wait", "he", "IS", "!"]
# ::lemmas ["he", "s", "a", "loser", "!", "seriously", "if", "he", "be", "not", "he", "and", "be", "an", "average", "joe", "he", "would", "be", "consider", "a", "dead", "beat", "dad", "and", "a", "cult", "member", "!", "oh", "wait", "he", "be", "!"]
(c1-15 / multi-sentence
       :snt1 (c1-20 / person
                    :ARG0-of (c1-1 / lose-03)
                    :domain (c1-6 / he))
       :snt2 (c1-17 / consider-01
                    :ARG1 (c1-12 / and
                                 :op1 (c1-16 / person
                                             :ARG0-of (c1-22 / have-rel-role-91
                                                             :ARG1 (c1-5 / he)
                                                             :ARG2 (c1-23 / dad))
                                             :ARG0-of (c1-14 / beat-01
                                                             :ARG1-of (c1-18 / die-01)))
                                 :op2 (c1-2 / person
                                            :ARG0-of (c1-19 / have-org-role-91
                                                            :ARG1 (c1-13 / cult)
                                                            :ARG2 (c1-7 / member))))
                    :condition (c1-11 / and
                                      :op1 (c1-8 / he
                                                 :domain c1-5
                                                 :polarity -)
                                      :op2 (c1-10 / joe
                                                  :ARG1-of (c1-9 / average-03)
                                                  :domain c1-5))
                    :ARG2-of (c1-0 / serious-01))
       :snt3 (c1-21 / wait-01
                    :ARG1 (c1-4 / you)
                    :mod (c1-3 / oh)
                    :mode imperative))

# ::snt Remind me, why do I care about this?
# ::tokens ["Remind", "me", ",", "why", "do", "I", "care", "about", "this", "?"]
# ::lemmas ["remind", "i", ",", "why", "do", "i", "care", "about", "this", "?"]
(c2-1 / remind-01
      :ARG0 (c2-0 / you)
      :ARG1 (c2-3 / care-01
                  :ARG0 (c2-4 / i)
                  :ARG1 (c2-5 / this)
                  :ARG1-of (c2-6 / cause-01
                                 :ARG0 (c2-2 / amr-unknown)))
      :ARG2 c2-4
      :mode imperative)

# ::snt She probably did what she had do keep custody of her daughter.
# ::tokens ["She", "probably", "did", "what", "she", "had", "do", "keep", "custody", "of", "her", "daughter", "."]
# ::lemmas ["she", "probably", "do", "what", "she", "have", "do", "keep", "custody", "of", "her", "daughter", "."]
(c3-3 / probable
      :domain (c3-9 / do-02
                    :ARG0 (c3-1 / she)
                    :ARG1 (c3-8 / thing
                                :ARG1-of (c3-2 / have-03
                                               :ARG0 c3-1)
                                :ARG0-of (c3-4 / keep-01
                                               :ARG1 (c3-5 / custody
                                                           :poss (c3-0 / person
                                                                       :ARG0-of (c3-7 / have-rel-role-91
                                                                                      :ARG1 c3-1
                                                                                      :ARG2 (c3-6 / daughter))))))))

# ::snt M O L uk feedback quite anti the actor.
# ::tokens ["M", "O", "L", "uk", "feedback", "quite", "anti", "the", "actor", "."]
# ::lemmas ["M", "O", "L", "uk", "feedback", "quite", "anti", "the", "actor", "."]
(c4-0 / oppose-01
      :ARG0 (c4-1 / feedback
                  :mod (c4-4 / person
                             :name (c4-2 / name
                                         :op1 "M OL")))
      :ARG1 (c4-3 / person
                  :ARG0-of (c4-6 / act-01))
      :degree (c4-5 / quite))

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c5-0 / care-01
      :ARG0 (c5-1 / amr-unknown))

# ::snt He fucked up, letting her get away....
# ::tokens ["He", "fucked", "up", ",", "letting", "her", "get", "away", "...."]
# ::lemmas ["he", "fuck", "up", ",", "let", "she", "get", "away", "...."]
(c6-4 / and
      :op1 (c6-0 / fuck-up-02
                 :ARG0 (c6-2 / he))
      :op2 (c6-3 / let-01
                 :ARG0 c6-2
                 :ARG1 (c6-5 / get-away-08
                             :ARG0 (c6-1 / she))))
