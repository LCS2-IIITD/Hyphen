# ::snt Sorry.. losing my health care can get a gal down in the grumps.
# ::tokens ["Sorry", "..", "losing", "my", "health", "care", "can", "get", "a", "gal", "down", "in", "the", "grumps", "."]
# ::lemmas ["sorry", "..", "lose", "my", "health", "care", "can", "get", "a", "gal", "down", "in", "the", "grump", "."]
(c1-0 / sorry-01
      :ARG2 (c1-2 / possible-01
                  :ARG1 (c1-7 / get-04
                              :ARG0 (c1-3 / lose-02
                                          :ARG0 (c1-5 / i)
                                          :ARG1 (c1-4 / care-03
                                                      :ARG1 c1-5
                                                      :mod (c1-1 / health)))
                              :ARG1 (c1-6 / gal)
                              :ARG2 (c1-8 / down-01
                                          :ARG1 c1-6
                                          :location (c1-9 / grump)))))

# ::snt Bullshit. A yr old man doesn't change.
# ::tokens ["Bullshit", ".", "A", "yr", "old", "man", "does", "n't", "change", "."]
# ::lemmas ["Bullshit", ".", "a", "yr", "old", "man", "do", "not", "change", "."]
(c2-2 / multi-sentence
      :snt1 (c2-0 / bullshit-01)
      :snt2 (c2-4 / change-01
                  :ARG1 (c2-3 / man
                              :age (c2-5 / temporal-quantity
                                         :unit (c2-1 / year)
                                         :quant 1))
                  :polarity -))

# ::snt Jenner actually believed that Trump was fair and balanced.
# ::tokens ["Jenner", "actually", "believed", "that", "Trump", "was", "fair", "and", "balanced", "."]
# ::lemmas ["Jenner", "actually", "believe", "that", "Trump", "be", "fair", "and", "balanced", "."]
(c3-1 / believe-01
      :ARG0 (c3-5 / person
                  :name (c3-2 / name
                              :op1 "Jenner"))
      :ARG1 (c3-8 / and
                  :op1 (c3-0 / fair-01
                             :ARG1 (c3-3 / person
                                         :name (c3-4 / name
                                                     :op1 "Trump")))
                  :op2 (c3-6 / balance-01
                             :ARG1 c3-3))
      :ARG1-of (c3-7 / actual-02))

# ::snt Hey supporting SMDH how's that going for u
# ::tokens ["Hey", "supporting", "SMDH", "how", "'s", "that", "going", "for", "u"]
# ::lemmas ["hey", "support", "SMDH", "how", "be", "that", "go", "for", "u"]
(c4-2 / support-01
      :ARG0 (c4-1 / you)
      :ARG1 (c4-4 / person
                  :ARG0-of (c4-3 / have-rel-role-91
                                 :ARG1 c4-1
                                 :ARG2 (c4-0 / son-of-a-bitch)))
      :manner (c4-6 / amr-unknown)
      :mod (c4-5 / hey
                 :mode expressive))

# ::snt And you believed him. What a chump!
# ::tokens ["And", "you", "believed", "him", ".", "What", "a", "chump", "!"]
# ::lemmas ["and", "you", "believe", "he", ".", "what", "a", "chump", "!"]
(c5-2 / multi-sentence
      :snt1 (c5-6 / and
                  :op2 (c5-0 / believe-01
                             :ARG0 (c5-1 / you)
                             :ARG1 (c5-4 / he)))
      :snt2 (c5-5 / chump
                  :degree (c5-3 / so)
                  :mode expressive))

# ::snt likes mob families: she's no humanitarian she's a greedy hypocrite just like What about Malibu accident?
# ::tokens ["likes", "mob", "families", ":", "she", "'s", "no", "humanitarian", "she", "'s", "a", "greedy", "hypocrite", "just", "like", "What", "about", "Malibu", "accident", "?"]
# ::lemmas ["like", "mob", "family", ":", "she", "be", "no", "humanitarian", "she", "be", "a", "greedy", "hypocrite", "just", "like", "what", "about", "Malibu", "accident", "?"]
(c6-13 / and
       :op1 (c6-7 / like-01
                  :ARG0 (c6-6 / he)
                  :ARG1 (c6-0 / family
                              :mod (c6-1 / mob)))
       :op2 (c6-10 / humanitarian
                   :domain (c6-3 / she)
                   :polarity -)
       :op3 (c6-5 / hypocrite
                  :mod (c6-14 / greedy)
                  :domain c6-3
                  :ARG1-of (c6-4 / resemble-01
                                 :ARG2 (c6-12 / amr-unknown
                                              :topic (c6-9 / accident
                                                           :location (c6-8 / city
                                                                           :name (c6-2 / name
                                                                                       :op1 "Malibu"))))
                                 :mod (c6-11 / just))))

# ::snt Jenner, you voted for this idiot. Please take a seat for the rest of forever.
# ::tokens ["Jenner", ",", "you", "voted", "for", "this", "idiot", ".", "Please", "take", "a", "seat", "for", "the", "rest", "of", "forever", "."]
# ::lemmas ["Jenner", ",", "you", "vote", "for", "this", "idiot", ".", "please", "take", "a", "seat", "for", "the", "rest", "of", "forever", "."]
(c7-3 / multi-sentence
      :snt1 (c7-5 / say-01
                  :ARG0 (c7-10 / i)
                  :ARG1 (c7-8 / vote-01
                              :ARG0 (c7-9 / person
                                          :name (c7-4 / name
                                                      :op1 "Jenner"))
                              :ARG1 (c7-6 / idiot
                                          :mod (c7-11 / this)))
                  :ARG2 c7-9)
      :snt2 (c7-12 / take-01
                   :ARG0 (c7-2 / you)
                   :ARG1 (c7-0 / seat)
                   :duration (c7-7 / rest
                                   :op1 (c7-1 / forever))
                   :mode imperative
                   :polite +))

# ::snt do you still support your party?
# ::tokens ["do", "you", "still", "support", "your", "party", "?"]
# ::lemmas ["do", "you", "still", "support", "your", "party", "?"]
(c8-2 / support-01
      :polarity (c8-4 / amr-unknown)
      :ARG0 (c8-1 / you)
      :ARG1 (c8-3 / party
                  :poss c8-1)
      :mod (c8-0 / still))

# ::snt You fucked up for believing the man-child in the White House.
# ::tokens ["You", "fucked", "up", "for", "believing", "the", "man", "-", "child", "in", "the", "White", "House", "."]
# ::lemmas ["you", "fuck", "up", "for", "believe", "the", "man", "-", "child", "in", "the", "White", "House", "."]
(c9-0 / fuck-up-02
      :ARG1 (c9-2 / you)
      :ARG1-of (c9-5 / cause-01
                     :ARG0 (c9-1 / believe-01
                                 :ARG0 c9-2
                                 :ARG1 (c9-3 / manchild
                                             :location (c9-6 / government-organization
                                                             :name (c9-4 / name
                                                                         :op1 "White"
                                                                         :op2 "House"))))))

# ::snt But still supports him.
# ::tokens ["But", "still", "supports", "him", "."]
# ::lemmas ["but", "still", "support", "he", "."]
(c10-0 / contrast-01
       :ARG2 (c10-3 / support-01
                    :ARG1 (c10-2 / he)
                    :mod (c10-1 / still)))

# ::snt Sorry Sorry his Promises to had to come first. Bible Freaks trumped you.
# ::tokens ["Sorry", "Sorry", "his", "Promises", "to", "had", "to", "come", "first", ".", "Bible", "Freaks", "trumped", "you", "."]
# ::lemmas ["sorry", "sorry", "his", "promise", "to", "have", "to", "come", "first", ".", "Bible", "Freaks", "trump", "you", "."]
(c11-4 / multi-sentence
       :snt1 (c11-6 / sorry-01
                    :ARG1 (c11-11 / i)
                    :ARG2 (c11-0 / obligate-01
                                 :ARG2 (c11-10 / come-04
                                               :ARG1 (c11-9 / promise-01
                                                            :ARG0 (c11-8 / he)
                                                            :ARG2 (c11-1 / ordinal-entity
                                                                         :value 1)))))
       :snt2 (c11-12 / trump-01
                     :ARG0 (c11-2 / freak
                                  :mod (c11-3 / book
                                              :name (c11-5 / name
                                                           :op1 "Bible")))
                     :ARG1 (c11-7 / you)))

# ::snt I thought caitlynBeing transgender is personal. Nobody wants it thrown in there face. You are not the only people in the world.
# ::tokens ["I", "thought", "caitlynBeing", "transgender", "is", "personal", ".", "Nobody", "wants", "it", "thrown", "in", "there", "face", ".", "You", "are", "not", "the", "only", "people", "in", "the", "world", "."]
# ::lemmas ["i", "think", "caitlynbee", "transgender", "be", "personal", ".", "nobody", "want", "it", "throw", "in", "there", "face", ".", "you", "be", "not", "the", "only", "people", "in", "the", "world", "."]
(c12-3 / multi-sentence
       :snt1 (c12-11 / think-01
                     :ARG0 (c12-12 / i)
                     :ARG1 (c12-8 / personal-02
                                  :ARG1 (c12-13 / transgender
                                                :domain (c12-4 / person
                                                               :name (c12-5 / name
                                                                            :op1 "Caitlyn")))))
       :snt2 (c12-10 / want-01
                     :ARG0 (c12-7 / nobody)
                     :ARG1 (c12-14 / throw-01
                                   :ARG1 (c12-6 / it)
                                   :ARG2 (c12-0 / face)))
       :snt3 (c12-15 / person
                     :mod (c12-1 / only
                                 :polarity -)
                     :domain (c12-2 / you)
                     :location (c12-9 / world)))

# ::snt YOU VOTED FOR HIM Jenner...
# ::tokens ["YOU", "VOTED", "FOR", "HIM", "Jenner", "..."]
# ::lemmas ["you", "vote", "for", "HIM", "Jenner", "..."]
(c13-2 / say-01
       :ARG0 (c13-6 / i)
       :ARG1 (c13-5 / win-01
                    :ARG0 (c13-0 / you)
                    :ARG2 (c13-3 / he))
       :ARG2 (c13-4 / person
                    :name (c13-1 / name
                                 :op1 "Jenner")))

# ::snt Caitlyn and are perfect examples of why trumps policy is needed.
# ::tokens ["Caitlyn", "and", "are", "perfect", "examples", "of", "why", "trumps", "policy", "is", "needed", "."]
# ::lemmas ["Caitlyn", "and", "be", "perfect", "example", "of", "why", "trump", "policy", "be", "need", "."]
(c14-2 / and
       :op1 (c14-5 / person
                   :name (c14-0 / name
                                :op1 "Caitlyn"))
       :op2 (c14-3 / exemplify-01
                   :ARG0 c14-5
                   :ARG1 (c14-7 / thing
                                :ARG0-of (c14-6 / cause-01
                                                :ARG1 (c14-4 / need-01
                                                             :ARG1 (c14-1 / policy-01))))
                   :ARG1-of (c14-8 / perfect-02)))

# ::snt Sadly, just another one of his lies
# ::tokens ["Sadly", ",", "just", "another", "one", "of", "his", "lies"]
# ::lemmas ["sadly", ",", "just", "another", "one", "of", "his", "lie"]
(c15-2 / lie-08
       :ARG0 (c15-1 / he)
       :ARG1-of (c15-4 / include-91
                       :ARG2 (c15-6 / lie-08
                                    :ARG0 c15-1))
       :mod (c15-5 / another)
       :mod (c15-3 / just)
       :ARG0-of (c15-0 / sad-02)
       :quant 1)

# ::snt Caitlyn Jenner is an idiot!
# ::tokens ["Caitlyn", "Jenner", "is", "an", "idiot", "!"]
# ::lemmas ["Caitlyn", "Jenner", "be", "an", "idiot", "!"]
(c16-2 / idiot
       :domain (c16-1 / person
                      :name (c16-0 / name
                                   :op1 "Caitlyn"
                                   :op2 "Jenner")))

# ::snt it's amazing how % of americans continue to give DJT license to ignorance, corruption, lying..how do we benefit as a nation?
# ::tokens ["it", "'s", "amazing", "how", "%", "of", "americans", "continue", "to", "give", "DJT", "license", "to", "ignorance", ",", "corruption", ",", "lying", "..", "how", "do", "we", "benefit", "as", "a", "nation", "?"]
# ::lemmas ["it", "be", "amazing", "how", "%", "of", "americans", "continue", "to", "give", "DJT", "license", "to", "ignorance", ",", "corruption", ",", "lying", "..", "how", "do", "we", "benefit", "as", "a", "nation", "?"]
(c17-12 / amaze-01
        :ARG0 (c17-7 / continue-01
                     :ARG0 (c17-4 / percentage-entity
                                  :value-of (c17-2 / person
                                                   :mod (c17-17 / country
                                                                :name (c17-1 / name
                                                                             :op1 "America"))
                                                   :ARG0-of (c17-13 / give-01
                                                                    :ARG1 (c17-5 / license-01
                                                                                 :ARG1 (c17-11 / and
                                                                                               :op1 (c17-14 / ignorance)
                                                                                               :op2 (c17-10 / corrupt-01)
                                                                                               :op3 (c17-15 / lie-08))
                                                                                 :ARG2 (c17-16 / person
                                                                                               :name (c17-3 / name
                                                                                                            :op1 "DjT")
                                                                                               :ARG2-of c17-13))))))
        :ARG1 (c17-0 / benefit-01
                     :ARG0 (c17-8 / we)
                     :ARG1 (c17-6 / nation)
                     :manner (c17-9 / amr-unknown)))

# ::snt He needs too get right with GOD, Before its too late...
# ::tokens ["He", "needs", "too", "get", "right", "with", "GOD", ",", "Before", "its", "too", "late", "..."]
# ::lemmas ["he", "need", "too", "get", "right", "with", "GOD", ",", "before", "its", "too", "late", "..."]
(c19-1 / need-01
       :ARG0 (c19-3 / he)
       :ARG1 (c19-9 / get-03
                    :ARG1 c19-3
                    :ARG2 (c19-2 / right-06
                                 :ARG1 c19-3
                                 :ARG2 (c19-4 / person
                                              :name (c19-5 / name
                                                           :op1 "God"))))
       :time (c19-0 / before
                    :op1 (c19-7 / have-degree-91
                                :ARG1 c19-9
                                :ARG2 (c19-6 / late)
                                :ARG3 (c19-8 / too)
                                :ARG2 c19-1))
       :ARG1 c19-3
       :ARG3 c19-8)

# ::snt The Rand study estimates that between and Transgender persons in the U.S. Military. is gross exaggeration.
# ::tokens ["The", "Rand", "study", "estimates", "that", "between", "and", "Transgender", "persons", "in", "the", "U.S.", "Military", ".", "is", "gross", "exaggeration", "."]
# ::lemmas ["the", "Rand", "study", "estimate", "that", "between", "and", "Transgender", "person", "in", "the", "U.S.", "Military", ".", "be", "gross", "exaggeration", "."]
(c20-4 / estimate-01
       :ARG0 (c20-2 / study-01
                    :ARG0 (c20-13 / university
                                  :name (c20-0 / name
                                               :op1 "Rand")))
       :ARG1 (c20-12 / exaggerate-01
                     :ARG1 (c20-10 / and
                                   :op1 (c20-6 / person
                                               :mod (c20-9 / transgender))
                                   :op2 (c20-1 / person
                                               :mod c20-9)
                                   :ARG0-of (c20-5 / have-org-role-91
                                                   :ARG1 (c20-3 / military
                                                                :mod (c20-8 / country
                                                                            :name (c20-7 / name
                                                                                         :op1 "U.S.")))))
                     :ARG1-of (c20-11 / gross-06)))

# ::snt His promise to put the military back on track. Budget costs. Not social agenda!
# ::tokens ["His", "promise", "to", "put", "the", "military", "back", "on", "track", ".", "Budget", "costs", ".", "Not", "social", "agenda", "!"]
# ::lemmas ["his", "promise", "to", "put", "the", "military", "back", "on", "track", ".", "budget", "cost", ".", "not", "social", "agenda", "!"]
(c21-1 / multi-sentence
       :snt1 (c21-6 / promise-01
                    :ARG0 (c21-7 / he)
                    :ARG1 (c21-2 / put-03
                                 :ARG0 c21-7
                                 :ARG1 (c21-5 / military)
                                 :ARG2 (c21-10 / track-03
                                               :ARG1 c21-5)
                                 :direction (c21-0 / back)))
       :snt2 (c21-9 / cost-01
                    :ARG1 (c21-8 / budget))
       :snt3 (c21-4 / agenda
                    :mod (c21-3 / social)
                    :polarity -))

# ::snt Wrist watch check at jimmy eat world
# ::tokens ["Wrist", "watch", "check", "at", "jimmy", "eat", "world"]
# ::lemmas ["wrist", "watch", "check", "at", "jimmy", "eat", "world"]
(c22-4 / check-01
       :ARG1 (c22-5 / watch-01
                    :ARG0 (c22-3 / person
                                 :name (c22-1 / name
                                              :op1 "Wrist")))
       :location (c22-0 / broadcast-program
                        :name (c22-2 / name
                                     :op1 "Jimmy"
                                     :op2 " eat"
                                     :op3 "World")))

# ::snt Go away you attention craving shrew! You had multiple opportunities to speak out, and chose to sit there on your Lee Glamour Lengths. F. U.
# ::tokens ["Go", "away", "you", "attention", "craving", "shrew", "!", "You", "had", "multiple", "opportunities", "to", "speak", "out", ",", "and", "chose", "to", "sit", "there", "on", "your", "Lee", "Glamour", "Lengths", ".", "F.", "U."]
# ::lemmas ["go", "away", "you", "attention", "craving", "shrew", "!", "you", "have", "multiple", "opportunity", "to", "speak", "out", ",", "and", "choose", "to", "sit", "there", "on", "your", "Lee", "Glamour", "Lengths", ".", "F.", "U."]
(c23-15 / multi-sentence
        :snt1 (c23-12 / go-02
                      :ARG0 (c23-6 / you
                                   :mod (c23-0 / shrew)
                                   :ARG0-of (c23-16 / crave-01
                                                    :ARG1 (c23-11 / attend-02
                                                                  :ARG1 c23-6)))
                      :ARG4 (c23-10 / away)
                      :mode imperative)
        :snt2 (c23-9 / and
                     :op1 (c23-7 / have-03
                                 :ARG0 (c23-13 / you)
                                 :ARG1 (c23-4 / opportunity
                                              :quant (c23-8 / multiple)
                                              :purpose (c23-5 / speak-out-03
                                                              :ARG0 c23-13)))
                     :op2 (c23-14 / choose-01
                                  :ARG0 c23-13
                                  :ARG1 (c23-3 / sit-01
                                               :ARG1 c23-13
                                               :ARG2 (c23-1 / length
                                                            :mod (c23-2 / glamour
                                                                        :mod (c23-18 / person
                                                                                     :name (c23-17 / name
                                                                                                   :op1 "Lee")))
                                                            :poss c23-13))))
        :snt3 (c23-19 / amr-unintelligible
                      :value "F.U."))

# ::snt He just opened his mouth and LIED. Nothing new, though, nothing to see here.
# ::tokens ["He", "just", "opened", "his", "mouth", "and", "LIED", ".", "Nothing", "new", ",", "though", ",", "nothing", "to", "see", "here", "."]
# ::lemmas ["he", "just", "open", "his", "mouth", "and", "lied", ".", "nothing", "new", ",", "though", ",", "nothing", "to", "see", "here", "."]
(c24-1 / multi-sentence
       :snt1 (c24-12 / and
                     :op1 (c24-0 / open-01
                                 :ARG0 (c24-6 / he
                                              :part (c24-5 / mouth
                                                           :ARG1-of c24-0))
                                 :time (c24-11 / just))
                     :op2 (c24-7 / lie-08
                                 :ARG0 c24-6))
       :snt2 (c24-10 / have-concession-91
                     :ARG1 (c24-2 / nothing
                                  :ARG1-of (c24-8 / new-01))
                     :ARG2 (c24-9 / nothing
                                  :ARG1-of (c24-3 / see-01
                                                  :location (c24-4 / here)))))

# ::snt Same thing that happen to promise that Mexico would pay for wall, that HC would be better, cheaper, and that everyone would be covered.
# ::tokens ["Same", "thing", "that", "happen", "to", "promise", "that", "Mexico", "would", "pay", "for", "wall", ",", "that", "HC", "would", "be", "better", ",", "cheaper", ",", "and", "that", "everyone", "would", "be", "covered", "."]
# ::lemmas ["same", "thing", "that", "happen", "to", "promise", "that", "Mexico", "would", "pay", "for", "wall", ",", "that", "HC", "would", "be", "well", ",", "cheap", ",", "and", "that", "everyone", "would", "be", "cover", "."]
(c25-6 / thing
       :ARG1-of (c25-0 / same-01)
       :ARG0-of (c25-17 / promise-01
                        :ARG2 (c25-7 / and
                                     :op1 (c25-11 / pay-01
                                                  :ARG0 (c25-12 / country
                                                                :name (c25-15 / name
                                                                              :op1 "Mexico"))
                                                  :ARG3 (c25-18 / wall))
                                     :op2 (c25-4 / have-degree-91
                                                 :ARG1 (c25-9 / care-03
                                                              :ARG1 (c25-19 / health))
                                                 :ARG2 (c25-8 / good-02
                                                              :ARG1 c25-9)
                                                 :ARG3 (c25-10 / more))
                                     :op3 (c25-3 / have-degree-91
                                                 :ARG1 (c25-1 / care-03
                                                              :ARG1 (c25-13 / health))
                                                 :ARG2 (c25-14 / cheap-02
                                                               :ARG1 c25-1)
                                                 :ARG3 (c25-5 / more))
                                     :op4 (c25-2 / cover-01
                                                 :ARG1 (c25-16 / everyone)))))

# ::snt army training says a women cannot cover up at any time of her choosing if that's not a deal breaker, I don't know what is
# ::tokens ["army", "training", "says", "a", "women", "can", "not", "cover", "up", "at", "any", "time", "of", "her", "choosing", "if", "that", "'s", "not", "a", "deal", "breaker", ",", "I", "do", "n't", "know", "what", "is"]
# ::lemmas ["army", "training", "say", "a", "woman", "can", "not", "cover", "up", "at", "any", "time", "of", "she", "choose", "if", "that", "be", "not", "a", "deal", "breaker", ",", "i", "do", "not", "know", "what", "be"]
(c26-1 / multi-sentence
       :snt1 (c26-2 / say-01
                    :ARG0 (c26-8 / train-01
                                 :mod (c26-10 / arm))
                    :ARG1 (c26-3 / possible-01
                                 :ARG1 (c26-6 / cover-up-04
                                              :ARG0 (c26-7 / woman)
                                              :time (c26-13 / choose-01
                                                            :ARG0 c26-7
                                                            :mod (c26-9 / any)))
                                 :condition (c26-0 / break-18
                                                   :ARG0 c26-6
                                                   :ARG1 (c26-12 / deal-01)
                                                   :polarity -)
                                 :polarity -))
       :snt2 (c26-4 / know-01
                    :ARG0 (c26-11 / i)
                    :ARG1 (c26-5 / thing)
                    :polarity -))

# ::snt Caitlyn, you were dumb as a stump to ever believe it. Sad for you.
# ::tokens ["Caitlyn", ",", "you", "were", "dumb", "as", "a", "stump", "to", "ever", "believe", "it", ".", "Sad", "for", "you", "."]
# ::lemmas ["Caitlyn", ",", "you", "be", "dumb", "as", "a", "stump", "to", "ever", "believe", "it", ".", "sad", "for", "you", "."]
(c27-4 / multi-sentence
       :snt1 (c27-11 / dumb
                     :ARG2-of (c27-8 / have-degree-91
                                     :ARG1 (c27-9 / person
                                                  :name (c27-3 / name
                                                               :op1 "Caitlyn"))
                                     :ARG3 (c27-7 / equal)
                                     :ARG4 (c27-5 / stump))
                     :condition (c27-1 / believe-01
                                       :ARG0 c27-9
                                       :ARG1 (c27-10 / it)
                                       :time (c27-6 / ever)
                                       :polarity -))
       :snt2 (c27-0 / sad-02
                    :ARG1 (c27-2 / you)))

# ::snt What did you think would happen voting for a racist misogynistic lying greedy insane narcissistic slimy fascist? Did you care nothing then?
# ::tokens ["What", "did", "you", "think", "would", "happen", "voting", "for", "a", "racist", "misogynistic", "lying", "greedy", "insane", "narcissistic", "slimy", "fascist", "?", "Did", "you", "care", "nothing", "then", "?"]
# ::lemmas ["what", "do", "you", "think", "would", "happen", "vote", "for", "a", "racist", "misogynistic", "lie", "greedy", "insane", "narcissistic", "slimy", "fascist", "?", "do", "you", "care", "nothing", "then", "?"]
(c28-1 / multi-sentence
       :snt1 (c28-10 / think-01
                     :ARG0 (c28-0 / you)
                     :ARG1 (c28-12 / amr-unknown)
                     :ARG2 (c28-5 / vote-01
                                  :ARG0 c28-0
                                  :ARG1 (c28-7 / person
                                               :mod (c28-2 / political-movement
                                                           :name (c28-3 / name
                                                                        :op1 "Fascism"))
                                               :mod (c28-4 / racism)
                                               :mod (c28-6 / misogynistic)
                                               :mod (c28-13 / greedy)
                                               :mod (c28-11 / insane)
                                               :mod c28-2
                                               :name c28-3
                                               :op1 "Nazism")))
       :snt2 (c28-9 / care-01
                    :polarity c28-12)
       :ARG0 (c28-14 / you)
       :ARG1 (c28-8 / nothing)
       :time (c28-15 / then))

# ::snt Only for money, attention, reality shows, magazine covers... they are all the same!
# ::tokens ["Only", "for", "money", ",", "attention", ",", "reality", "shows", ",", "magazine", "covers", "...", "they", "are", "all", "the", "same", "!"]
# ::lemmas ["only", "for", "money", ",", "attention", ",", "reality", "show", ",", "magazine", "cover", "...", "they", "be", "all", "the", "same", "!"]
(c29-3 / same-01
       :ARG1 (c29-8 / they
                    :purpose (c29-10 / and
                                     :op1 (c29-2 / money)
                                     :op2 (c29-9 / attend-02)
                                     :op3 (c29-0 / show-04
                                                 :ARG1 (c29-4 / reality))
                                     :op4 (c29-6 / cover-03
                                                 :ARG1 (c29-5 / magazine)))
                    :mod (c29-1 / only))
       :degree (c29-7 / all))

# ::snt Jusy get in line, he will go back on every promise he gave to American people. He's already broken so many. I can't believe ppl voted him
# ::tokens ["Jusy", "get", "in", "line", ",", "he", "will", "go", "back", "on", "every", "promise", "he", "gave", "to", "American", "people", ".", "He", "'s", "already", "broken", "so", "many", ".", "I", "ca", "n't", "believe", "ppl", "voted", "him"]
# ::lemmas ["Jusy", "get", "in", "line", ",", "he", "will", "go", "back", "on", "every", "promise", "he", "give", "to", "American", "people", ".", "he", "be", "already", "break", "so", "many", ".", "i", "can", "not", "believe", "ppl", "vote", "he"]
(c30-15 / multi-sentence
        :snt1 (c30-13 / get-05
                      :ARG1 (c30-21 / person
                                    :name (c30-19 / name
                                                  :op1 "Jusy"))
                      :ARG2 (c30-2 / line)
                      :mode imperative)
        :snt2 (c30-4 / go-back-19
                     :ARG1 (c30-16 / promise-01
                                   :ARG0 c30-21
                                   :mod (c30-20 / every)
                                   :ARG1-of (c30-6 / give-01
                                                   :ARG0 c30-21
                                                   :ARG2 (c30-5 / person
                                                                :mod (c30-18 / country
                                                                             :name (c30-17 / name
                                                                                           :op1 "America"))))))
        :snt3 (c30-14 / break-13
                      :ARG0 (c30-9 / he)
                      :ARG1 (c30-3 / person
                                   :ARG1-of (c30-22 / have-quant-91
                                                    :ARG2 (c30-10 / many)
                                                    :ARG3 (c30-0 / so)))
                      :time (c30-12 / already))
        :snt4 (c30-11 / possible-01
                      :ARG1 (c30-1 / believe-01
                                   :ARG0 (c30-23 / i)
                                   :ARG1 (c30-7 / vote-01
                                                :ARG0 (c30-24 / person)
                                                :ARG1 (c30-8 / he)))
                      :polarity -))

# ::snt Ha ha...she drank the kool-aid now she's pissed off!!
# ::tokens ["Ha", "ha", "...", "she", "drank", "the", "kool", "-", "aid", "now", "she", "'s", "pissed", "off", "!", "!"]
# ::lemmas ["ha", "ha", "...", "she", "drink", "the", "kool", "-", "aid", "now", "she", "be", "piss", "off", "!", "!"]
(c31-6 / and
       :op1 (c31-3 / ha
                   :mode expressive)
       :op2 (c31-7 / drink-01
                   :ARG0 (c31-2 / she)
                   :ARG1 (c31-4 / product
                                :name (c31-0 / name
                                             :op1 "Kool-Aid"))
                   :time (c31-5 / now))
       :op3 (c31-1 / piss-off-02
                   :ARG1 c31-2))

# ::snt Like all his promises they are blowing in the wind.
# ::tokens ["Like", "all", "his", "promises", "they", "are", "blowing", "in", "the", "wind", "."]
# ::lemmas ["like", "all", "his", "promise", "they", "be", "blow", "in", "the", "wind", "."]
(c32-0 / blow-01
       :ARG1 (c32-6 / they)
       :ARG2 (c32-5 / wind)
       :ARG1-of (c32-1 / resemble-01
                       :ARG2 (c32-7 / thing
                                    :ARG2-of (c32-4 / promise-01
                                                    :ARG0 (c32-3 / he))
                                    :mod (c32-2 / all))))

# ::snt What promise!!!
# ::tokens ["What", "promise", "!", "!", "!"]
# ::lemmas ["what", "promise", "!", "!", "!"]
(c33-0 / promise-01
       :mod (c33-1 / so)
       :mode expressive)

# ::snt He is. Military/Trump are fighting to keep out Muslim extremists who would behead a LGBTQ/whatever the minute they came in contact with them
# ::tokens ["He", "is", ".", "Military", "/", "Trump", "are", "fighting", "to", "keep", "out", "Muslim", "extremists", "who", "would", "behead", "a", "LGBTQ", "/", "whatever", "the", "minute", "they", "came", "in", "contact", "with", "them"]
# ::lemmas ["he", "be", ".", "Military", "/", "Trump", "be", "fight", "to", "keep", "out", "Muslim", "extremist", "who", "would", "behead", "a", "LGBTQ", "/", "whatever", "the", "minute", "they", "come", "in", "contact", "with", "they"]
(c34-8 / multi-sentence
       :snt1 (c34-4 / he)
       :snt2 (c34-13 / fight-01
                     :ARG0 (c34-0 / slash
                                  :op1 (c34-3 / military)
                                  :op2 (c34-17 / person
                                               :name (c34-14 / name
                                                             :op1 "Trump")))
                     :ARG2 (c34-5 / keep-out-06
                                  :ARG0 c34-0
                                  :ARG1 (c34-16 / extremist
                                                :mod (c34-15 / religious-group
                                                             :name (c34-10 / name
                                                                           :op1 "Islam"))
                                                :ARG0-of (c34-7 / behead-01
                                                                :ARG1 (c34-1 / slash
                                                                             :op1 (c34-9 / person
                                                                                         :mod (c34-6 / gay-01))
                                                                             :op2 (c34-18 / whatever))
                                                                :time (c34-12 / minute
                                                                              :time-of (c34-11 / contact-01
                                                                                               :ARG0 c34-16
                                                                                               :ARG1 (c34-2 / or))))))))

# ::snt To become transgender and transition you have to be diagnosed with gender dysphoria. It's a fact. I agree it may be a smaller number.
# ::tokens ["To", "become", "transgender", "and", "transition", "you", "have", "to", "be", "diagnosed", "with", "gender", "dysphoria", ".", "It", "'s", "a", "fact", ".", "I", "agree", "it", "may", "be", "a", "smaller", "number", "."]
# ::lemmas ["to", "become", "transgender", "and", "transition", "you", "have", "to", "be", "diagnose", "with", "gender", "dysphoria", ".", "it", "be", "a", "fact", ".", "i", "agree", "it", "may", "be", "a", "small", "number", "."]
(c35-11 / multi-sentence
        :snt1 (c35-1 / obligate-01
                     :ARG2 (c35-18 / diagnose-01
                                   :ARG1 (c35-2 / you)
                                   :ARG2 (c35-12 / dysphoria
                                                 :mod (c35-9 / gender))
                                   :purpose (c35-8 / and
                                                   :op1 (c35-10 / become-01
                                                                :ARG1 c35-2
                                                                :ARG2 (c35-7 / transgender))
                                                   :op2 (c35-13 / transition-01
                                                                :ARG0 c35-2))))
        :snt2 (c35-14 / fact
                      :domain (c35-17 / it))
        :snt3 (c35-6 / agree-01
                     :ARG0 (c35-3 / i)
                     :ARG1 (c35-16 / possible-01
                                   :ARG1 (c35-15 / number
                                                 :ARG1-of (c35-4 / have-degree-91
                                                                 :ARG2 (c35-0 / small)
                                                                 :ARG3 (c35-5 / more)
                                                                 :ARG4 c35-15)))))

# ::snt It's because Obama made the decision to start with..Trump thinks he is really doing something.
# ::tokens ["It", "'s", "because", "Obama", "made", "the", "decision", "to", "start", "with", "..", "Trump", "thinks", "he", "is", "really", "doing", "something", "."]
# ::lemmas ["it", "be", "because", "Obama", "make", "the", "decision", "to", "start", "with", "..", "Trump", "think", "he", "be", "really", "do", "something", "."]
(c36-2 / multi-sentence
       :snt1 (c36-8 / cause-01
                    :ARG0 (c36-11 / decide-01
                                  :ARG0 (c36-7 / person
                                               :name (c36-1 / name
                                                            :op1 "Obama"))
                                  :ARG1 (c36-3 / start-01
                                               :ARG0 c36-7)))
       :snt2 (c36-10 / think-01
                     :ARG0 (c36-4 / person
                                  :name (c36-6 / name
                                               :op1 "Trump"))
                     :ARG1 (c36-9 / do-02
                                  :ARG0 c36-4
                                  :ARG1 (c36-0 / something)
                                  :ARG1-of (c36-5 / real-04))))

# ::snt Caitlyn what the HELL else did you expect from that deplorable idiot?
# ::tokens ["Caitlyn", "what", "the", "HELL", "else", "did", "you", "expect", "from", "that", "deplorable", "idiot", "?"]
# ::lemmas ["Caitlyn", "what", "the", "HELL", "else", "do", "you", "expect", "from", "that", "deplorable", "idiot", "?"]
(c37-8 / ask-01
       :ARG0 (c37-7 / i)
       :ARG1 (c37-3 / expect-01
                    :ARG0 (c37-5 / person
                                 :name (c37-0 / name
                                              :op1 "Caitlyn"))
                    :ARG1 (c37-9 / amr-unknown
                                 :mod (c37-10 / else)
                                 :mod (c37-4 / hell
                                             :mode expressive))
                    :ARG2 (c37-1 / idiot
                                 :mod (c37-6 / that)
                                 :ARG1-of (c37-2 / deplorable-02)))
       :ARG2 c37-5)

# ::snt No one is allowed to dicriminate against LGBTQ. Having standards that apply to all who serve in the military is not discrimination.
# ::tokens ["No", "one", "is", "allowed", "to", "dicriminate", "against", "LGBTQ", ".", "Having", "standards", "that", "apply", "to", "all", "who", "serve", "in", "the", "military", "is", "not", "discrimination", "."]
# ::lemmas ["no", "one", "be", "allow", "to", "dicriminate", "against", "LGBTQ", ".", "have", "standard", "that", "apply", "to", "all", "who", "serve", "in", "the", "military", "be", "not", "discrimination", "."]
(c38-4 / multi-sentence
       :snt1 (c38-11 / allow-01
                     :ARG1 (c38-13 / discriminate-02
                                   :ARG0 (c38-3 / no-one)
                                   :ARG1 (c38-0 / oppose-01
                                                :ARG0 c38-3
                                                :ARG1 (c38-12 / gay-01
                                                              :mod (c38-2 / bisexual)))
                                   :snt2-of c38-4
                                   :polarity -))
       :domain (c38-6 / have-04
                      :ARG1 (c38-10 / apply-02
                                    :ARG1 (c38-5 / standard)
                                    :ARG2 (c38-7 / person
                                                 :mod (c38-9 / all)
                                                 :ARG0-of (c38-1 / serve-01
                                                                 :ARG2 (c38-8 / military)))))
       :polarity -)

# ::snt Being transgender is not the crime. Joining the military as one or the other, then expect tax payers to foot your elective surgery is wrong.
# ::tokens ["Being", "transgender", "is", "not", "the", "crime", ".", "Joining", "the", "military", "as", "one", "or", "the", "other", ",", "then", "expect", "tax", "payers", "to", "foot", "your", "elective", "surgery", "is", "wrong", "."]
# ::lemmas ["be", "transgender", "be", "not", "the", "crime", ".", "join", "the", "military", "as", "one", "or", "the", "other", ",", "then", "expect", "tax", "payer", "to", "foot", "your", "elective", "surgery", "be", "wrong", "."]
(c39-2 / multi-sentence
       :snt1 (c39-7 / crime-02
                    :ARG1 (c39-10 / transgender)
                    :polarity -)
       :snt2 (c39-5 / expect-01
                    :ARG0 (c39-1 / you)
                    :ARG1 (c39-0 / foot-01
                                 :ARG0 (c39-6 / person
                                              :ARG0-of (c39-3 / pay-01
                                                              :ARG1 (c39-12 / tax)))
                                 :ARG1 (c39-4 / surgery-01
                                              :ARG1 c39-1
                                              :mod (c39-11 / elective)))
                    :time (c39-9 / then)
                    :ARG1-of (c39-8 / wrong-02)))

# ::snt Why do you support him! He is a louse!
# ::tokens ["Why", "do", "you", "support", "him", "!", "He", "is", "a", "louse", "!"]
# ::lemmas ["why", "do", "you", "support", "he", "!", "he", "be", "a", "louse", "!"]
(c40-1 / multi-sentence
       :snt1 (c40-2 / support-01
                    :ARG0 (c40-0 / you)
                    :ARG1 (c40-3 / he)
                    :ARG1-of (c40-5 / cause-01
                                    :ARG0 (c40-7 / amr-unknown)))
       :snt2 (c40-4 / louse
                    :domain (c40-6 / he)))

# ::snt I hope that your community realizes that you are an awful representative for them. Prove me wrong and stop supporting this Pres.
# ::tokens ["I", "hope", "that", "your", "community", "realizes", "that", "you", "are", "an", "awful", "representative", "for", "them", ".", "Prove", "me", "wrong", "and", "stop", "supporting", "this", "Pres", "."]
# ::lemmas ["i", "hope", "that", "your", "community", "realize", "that", "you", "be", "an", "awful", "representative", "for", "they", ".", "prove", "i", "wrong", "and", "stop", "support", "this", "pre", "."]
(c41-11 / multi-sentence
        :snt1 (c41-6 / hope-01
                     :ARG0 (c41-19 / i)
                     :ARG1 (c41-15 / realize-01
                                   :ARG0 (c41-13 / community
                                                 :poss (c41-4 / you))
                                   :ARG1 (c41-2 / represent-01
                                                :ARG0 c41-4
                                                :ARG1 (c41-10 / they)
                                                :ARG2 (c41-8 / awful))))
        :snt2 (c41-7 / and
                     :op1 (c41-16 / prove-01
                                  :ARG0 (c41-9 / you)
                                  :ARG1 (c41-17 / wrong-04
                                                :ARG1 (c41-5 / i))
                                  :mode imperative)
                     :op2 (c41-0 / stop-01
                                 :ARG0 c41-9
                                 :ARG1 (c41-3 / support-01
                                              :ARG0 c41-9
                                              :ARG1 (c41-12 / person
                                                            :ARG0-of (c41-18 / have-org-role-91
                                                                             :ARG2 (c41-1 / president))
                                                            :mod (c41-14 / this)))
                                 :mode imperative)))

# ::snt Welcome to the world of Trump Chump's.
# ::tokens ["Welcome", "to", "the", "world", "of", "Trump", "Chump", "'s", "."]
# ::lemmas ["welcome", "to", "the", "world", "of", "Trump", "Chump", "'s", "."]
(c42-4 / welcome-01
       :ARG1 (c42-0 / you)
       :ARG2 (c42-3 / world
                    :poss (c42-2 / person
                                 :name (c42-1 / name
                                              :op1 "Trump"
                                              :op2 "Chump"))))

# ::snt Can't wait til you Scream after Sharia Law is introduced by DEMS!
# ::tokens ["Ca", "n't", "wait", "til", "you", "Scream", "after", "Sharia", "Law", "is", "introduced", "by", "DEMS", "!"]
# ::lemmas ["can", "not", "wait", "til", "you", "scream", "after", "Sharia", "Law", "be", "introduce", "by", "DEMS", "!"]
(c43-5 / wait-01
       :ARG1 (c43-6 / i)
       :ARG2 (c43-2 / scream-01
                    :ARG0 (c43-0 / you)
                    :time (c43-7 / after
                                 :op1 (c43-3 / introduce-02
                                             :ARG0 (c43-8 / department)
                                             :ARG1 (c43-4 / law
                                                          :name (c43-1 / name
                                                                       :op1 "Sharia")))))
       :polarity -)

# ::snt Shame on Jenner for ever trusting that cretin.
# ::tokens ["Shame", "on", "Jenner", "for", "ever", "trusting", "that", "cretin", "."]
# ::lemmas ["shame", "on", "Jenner", "for", "ever", "trust", "that", "cretin", "."]
(c44-1 / shame-01
       :ARG1 (c44-3 / person
                    :name (c44-0 / name
                                 :op1 "Jenner"))
       :ARG2 (c44-5 / trust-02
                    :ARG0 c44-3
                    :ARG1 (c44-4 / cretin
                                 :mod (c44-6 / that))
                    :time (c44-2 / ever)))

# ::snt It wasn't fooled ya! It was Generals saying transgenders are more concerned with their sex then with doing their service! Big difference!
# ::tokens ["It", "was", "n't", "fooled", "ya", "!", "It", "was", "Generals", "saying", "transgenders", "are", "more", "concerned", "with", "their", "sex", "then", "with", "doing", "their", "service", "!", "Big", "difference", "!"]
# ::lemmas ["it", "be", "not", "fool", "ya", "!", "it", "be", "general", "say", "transgender", "be", "more", "concerned", "with", "their", "sex", "then", "with", "do", "their", "service", "!", "big", "difference", "!"]
(c45-4 / multi-sentence
       :snt1 (c45-0 / fool-01
                    :ARG0 (c45-13 / it)
                    :ARG1 (c45-3 / you)
                    :polarity -)
       :snt2 (c45-6 / say-01
                    :ARG0 (c45-8 / person
                                 :ARG0-of (c45-7 / have-org-role-91
                                                 :ARG2 (c45-15 / general)))
                    :ARG1 (c45-10 / concern-01
                                  :ARG0 (c45-1 / sex-01
                                               :ARG0 (c45-5 / person
                                                            :ARG1-of (c45-14 / transvert-01)
                                                            :ARG1-of c45-10))
                                  :ARG2-of (c45-12 / have-degree-91
                                                   :ARG1 c45-5
                                                   :ARG3 (c45-9 / more)
                                                   :ARG4 (c45-16 / do-02
                                                                 :ARG0 c45-5
                                                                 :ARG1 (c45-17 / serve-01
                                                                               :ARG0 c45-5)))))
       :snt3 (c45-11 / differ-02
                     :degree (c45-2 / big)))

# ::snt Caitlyn or whatever you called... another moron in the house
# ::tokens ["Caitlyn", "or", "whatever", "you", "called", "...", "another", "moron", "in", "the", "house"]
# ::lemmas ["Caitlyn", "or", "whatever", "you", "call", "...", "another", "moron", "in", "the", "house"]
(c46-2 / moron
       :location (c46-4 / house)
       :mod (c46-8 / another)
       :domain (c46-0 / or
                      :op1 (c46-5 / person
                                  :name (c46-3 / name
                                               :op1 "Caitlyn"))
                      :op2 (c46-6 / whatever
                                  :ARG1-of (c46-7 / call-01
                                                  :ARG0 (c46-1 / you)))))

# ::snt How does Jenner know there are (Patriotic). Privy to Numbers? And BC OBAMA Promised to pay for Surgery, doesn't make you Patriotic!
# ::tokens ["How", "does", "Jenner", "know", "there", "are", "(", "Patriotic", ")", ".", "Privy", "to", "Numbers", "?", "And", "BC", "OBAMA", "Promised", "to", "pay", "for", "Surgery", ",", "does", "n't", "make", "you", "Patriotic", "!"]
# ::lemmas ["how", "do", "Jenner", "know", "there", "be", "(", "Patriotic", ")", ".", "Privy", "to", "Numbers", "?", "and", "BC", "OBAMA", "Promised", "to", "pay", "for", "Surgery", ",", "do", "not", "make", "you", "Patriotic", "!"]
(c47-2 / multi-sentence
       :snt1 (c47-7 / know-01
                    :ARG0 (c47-6 / person
                                 :name (c47-1 / name
                                              :op1 "Jenner"))
                    :ARG1 (c47-3 / Patriotic)
                    :manner (c47-12 / amr-unknown))
       :snt2 (c47-14 / perverse
                     :prep-to (c47-5 / number))
       :snt3 (c47-11 / and
                     :op2 (c47-10 / promise-01
                                  :ARG0 (c47-13 / person
                                                :name (c47-8 / name
                                                             :op1 "Barack"
                                                             :op2 "Obama"))
                                  :ARG1 (c47-15 / pay-01
                                                :ARG0 c47-13
                                                :ARG3 (c47-4 / surgery-01)))
                     :ARG0-of (c47-9 / make-02
                                     :ARG1 (c47-16 / Patriotic
                                                   :domain (c47-0 / you))
                                     :polarity -)))

# ::snt That's exactly what Trump did to all those who voted for him. Example, the women whom still voted for him after hearing his misogynist words
# ::tokens ["That", "'s", "exactly", "what", "Trump", "did", "to", "all", "those", "who", "voted", "for", "him", ".", "Example", ",", "the", "women", "whom", "still", "voted", "for", "him", "after", "hearing", "his", "misogynist", "words"]
# ::lemmas ["that", "be", "exactly", "what", "Trump", "do", "to", "all", "those", "who", "vote", "for", "he", ".", "Example", ",", "the", "woman", "whom", "still", "vote", "for", "he", "after", "hear", "his", "misogynist", "word"]
(c48-1 / multi-sentence
       :snt1 (c48-16 / do-02
                     :ARG0 (c48-8 / person
                                  :name (c48-0 / name
                                               :op1 "Trump"))
                     :ARG1 (c48-15 / that
                                   :mod (c48-6 / exact))
                     :ARG2 (c48-2 / person
                                  :mod (c48-4 / all)
                                  :ARG0-of (c48-5 / vote-01
                                                  :ARG1 c48-8)))
       :snt2 (c48-3 / exemplify-01
                    :ARG0 (c48-12 / woman
                                  :ARG0-of (c48-13 / vote-01
                                                   :ARG1 c48-8
                                                   :mod (c48-7 / still)
                                                   :time (c48-14 / after
                                                                 :op1 (c48-9 / hear-01
                                                                             :ARG0 c48-12
                                                                             :ARG1 (c48-10 / word-01
                                                                                           :ARG0 c48-8
                                                                                           :mod (c48-11 / misogynist))))))))

# ::snt Cat should have know what kind of heartless person Trump. Anybody can see it a mile away.
# ::tokens ["Cat", "should", "have", "know", "what", "kind", "of", "heartless", "person", "Trump", ".", "Anybody", "can", "see", "it", "a", "mile", "away", "."]
# ::lemmas ["Cat", "should", "have", "know", "what", "kind", "of", "heartless", "person", "Trump", ".", "anybody", "can", "see", "it", "a", "mile", "away", "."]
(c49-0 / multi-sentence
       :snt1 (c49-4 / recommend-01
                    :ARG1 (c49-9 / know-01
                                 :ARG0 (c49-11 / cat)
                                 :ARG1 (c49-8 / person
                                              :mod (c49-7 / heartless)
                                              :domain (c49-1 / person
                                                             :name (c49-2 / name
                                                                          :op1 "Trump"))
                                              :mod (c49-15 / kind))))
       :snt2 (c49-13 / possible-01
                     :ARG1 (c49-3 / see-01
                                  :ARG0 (c49-5 / anybody)
                                  :ARG1 (c49-12 / it)
                                  :location (c49-16 / relative-position
                                                    :direction (c49-14 / away)
                                                    :quant (c49-6 / distance-quantity
                                                                  :unit (c49-10 / mile)
                                                                  :quant 1)))))

# ::snt If you're surprised by Trump's bait-and-switch, you're either pretty dumb or just not paying attention. He's done this a lot, yes?
# ::tokens ["If", "you", "'re", "surprised", "by", "Trump", "'s", "bait", "-", "and", "-", "switch", ",", "you", "'re", "either", "pretty", "dumb", "or", "just", "not", "paying", "attention", ".", "He", "'s", "done", "this", "a", "lot", ",", "yes", "?"]
# ::lemmas ["if", "you", "be", "surprise", "by", "Trump", "'s", "bait", "-", "and", "-", "switch", ",", "you", "be", "either", "pretty", "dumb", "or", "just", "not", "pay", "attention", ".", "he", "be", "do", "this", "a", "lot", ",", "yes", "?"]
(c50-2 / multi-sentence
       :snt1 (c50-0 / or
                    :op1 (c50-14 / dumb
                                 :degree (c50-7 / pretty)
                                 :domain (c50-1 / you))
                    :op2 (c50-12 / attend-02
                                 :ARG0 c50-1
                                 :mod (c50-10 / just)
                                 :polarity -)
                    :condition (c50-4 / surprise-01
                                      :ARG0 (c50-3 / person
                                                   :name (c50-5 / name
                                                                :op1 "Trump"))
                                      :ARG1 c50-1))
       :snt2 (c50-9 / do-02
                    :ARG0 (c50-6 / he)
                    :ARG1 (c50-11 / this)
                    :frequency (c50-8 / lot)
                    :polarity (c50-13 / amr-unknown)))
