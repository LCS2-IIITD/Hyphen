# ::snt Not excusing his poor behavior, but I am enjoying his ACTING. Alec Baldwin as Trump is comedy, not real life
# ::tokens ["Not", "excusing", "his", "poor", "behavior", ",", "but", "I", "am", "enjoying", "his", "ACTING", ".", "Alec", "Baldwin", "as", "Trump", "is", "comedy", ",", "not", "real", "life"]
# ::lemmas ["not", "excuse", "his", "poor", "behavior", ",", "but", "i", "be", "enjoy", "his", "acting", ".", "Alec", "Baldwin", "as", "Trump", "be", "comedy", ",", "not", "real", "life"]
(c1-1 / multi-sentence
      :snt1 (c1-10 / contrast-01
                   :ARG1 (c1-5 / excuse-01
                               :ARG2 (c1-0 / behave-01
                                           :ARG0 (c1-6 / he)
                                           :mod (c1-7 / poor))
                               :polarity -)
                   :ARG2 (c1-15 / enjoy-01
                                :ARG0 (c1-13 / i)
                                :ARG1 (c1-14 / act-01
                                             :ARG0 c1-6)))
      :snt2 (c1-17 / contrast-01
                   :ARG1 (c1-12 / comedy
                                :domain (c1-2 / person
                                              :name (c1-3 / name
                                                          :op1 "Alec"
                                                          :op2 "Baldwin")
                                              :ARG1-of (c1-16 / portray-01
                                                              :ARG0 (c1-11 / person
                                                                           :name (c1-8 / name
                                                                                       :op1 "Trump")))))
                   :ARG2 (c1-9 / life
                               :ARG1-of (c1-4 / real-04)
                               :domain c1-11
                               :polarity -)))

# ::snt I forgot what other roles he had
# ::tokens ["I", "forgot", "what", "other", "roles", "he", "had"]
# ::lemmas ["i", "forget", "what", "other", "role", "he", "have"]
(c2-0 / forget-01
      :ARG0 (c2-5 / i)
      :ARG1 (c2-2 / role
                  :mod (c2-1 / other)
                  :ARG1-of (c2-3 / have-03
                                 :ARG0 (c2-4 / he))))

# ::snt SMILES~
# ::tokens ["SMILES~"]
# ::lemmas ["smiles~"]
(c3-0 / trickle-01)

# ::snt This was perfect!
# ::tokens ["This", "was", "perfect", "!"]
# ::lemmas ["this", "be", "perfect", "!"]
(c4-0 / perfect-02
      :ARG1 (c4-1 / this))

# ::snt Who do they think they are!
# ::tokens ["Who", "do", "they", "think", "they", "are", "!"]
# ::lemmas ["who", "do", "they", "think", "they", "be", "!"]
(c5-2 / think-01
      :ARG0 (c5-1 / they)
      :ARG1 (c5-0 / amr-unknown
                  :domain c5-1))

# ::snt He has to keep going! IS HE AFRAID OF TRUMP??
# ::tokens ["He", "has", "to", "keep", "going", "!", "IS", "HE", "AFRAID", "OF", "TRUMP", "?", "?"]
# ::lemmas ["he", "have", "to", "keep", "go", "!", "be", "he", "afraid", "of", "TRUMP", "?", "?"]
(c6-1 / multi-sentence
      :snt1 (c6-0 / obligate-01
                  :ARG1 (c6-3 / he)
                  :ARG2 (c6-4 / keep-02
                              :ARG0 c6-3
                              :ARG1 (c6-9 / go-02
                                          :ARG0 c6-3)))
      :snt2 (c6-8 / anger-01
                  :ARG0 (c6-5 / person
                              :name (c6-2 / name
                                          :op1 "Trump"))
                  :ARG1 (c6-6 / he)
                  :polarity (c6-7 / amr-unknown)))

# ::snt The Donald needs to disappear forever.
# ::tokens ["The", "Donald", "needs", "to", "disappear", "forever", "."]
# ::lemmas ["the", "Donald", "need", "to", "disappear", "forever", "."]
(c7-1 / need-01
      :ARG0 (c7-3 / person
                  :name (c7-2 / name
                              :op1 "The"
                              :op2 "Donald"))
      :ARG1 (c7-4 / disappear-01
                  :ARG1 c7-3
                  :duration (c7-0 / forever)))

# ::snt I still prefer Christinas impression of Caton! It gets better every week! Thanks for turning me on to it.
# ::tokens ["I", "still", "prefer", "Christinas", "impression", "of", "Caton", "!", "It", "gets", "better", "every", "week", "!", "Thanks", "for", "turning", "me", "on", "to", "it", "."]
# ::lemmas ["i", "still", "prefer", "Christinas", "impression", "of", "Caton", "!", "it", "get", "well", "every", "week", "!", "thank", "for", "turn", "i", "on", "to", "it", "."]
(c8-11 / multi-sentence
       :snt1 (c8-18 / prefer-01
                    :ARG0 (c8-20 / i)
                    :ARG1 (c8-5 / impression-03
                                :ARG0 (c8-12 / person
                                             :name (c8-16 / name
                                                          :op1 "Christin"))
                                :ARG1 (c8-3 / person
                                            :name (c8-13 / name
                                                         :op1 "Caton")))
                    :mod (c8-1 / still))
       :snt2 (c8-9 / get-03
                   :ARG1 (c8-10 / it)
                   :ARG2 (c8-6 / have-degree-91
                               :ARG1 c8-10
                               :ARG2 (c8-2 / good-02
                                           :ARG1 c8-10)
                               :ARG3 (c8-7 / more))
                   :frequency (c8-17 / rate-entity-91
                                     :ARG3 (c8-8 / temporal-quantity
                                                 :unit (c8-19 / week)
                                                 :quant 1))
                   :snt3 (c8-14 / thank-01
                                :ARG0 (c8-0 / i)
                                :ARG1 (c8-4 / you)
                                :ARG2 (c8-21 / turn-on-13
                                             :ARG0 c8-4
                                             :ARG1 c8-0
                                             :destination (c8-15 / it)))))

# ::snt I was really thinking about this. It would be hella funny
# ::tokens ["I", "was", "really", "thinking", "about", "this", ".", "It", "would", "be", "hella", "funny"]
# ::lemmas ["i", "be", "really", "think", "about", "this", ".", "it", "would", "be", "hella", "funny"]
(c9-1 / multi-sentence
      :snt1 (c9-5 / think-01
                  :ARG0 (c9-6 / i)
                  :ARG2 (c9-7 / this)
                  :ARG1-of (c9-3 / real-04))
      :snt2 (c9-0 / funny-02
                  :ARG1 (c9-2 / it)
                  :degree (c9-4 / hell)))

# ::snt Will Ferrell as Bush, as Barack, Mathew M as Bill
# ::tokens ["Will", "Ferrell", "as", "Bush", ",", "as", "Barack", ",", "Mathew", "M", "as", "Bill"]
# ::lemmas ["Will", "Ferrell", "as", "Bush", ",", "as", "Barack", ",", "Mathew", "M", "as", "Bill"]
(c10-9 / and
       :op1 (c10-3 / person
                   :name (c10-0 / name
                                :op1 "Ferrell")
                   :prep-as (c10-1 / person
                                   :name (c10-2 / name
                                                :op1 "Bush"))
                   :prep-as (c10-10 / person
                                    :name (c10-4 / name
                                                 :op1 "Barack")))
       :op2 (c10-5 / person
                   :name (c10-6 / name
                                :op1 "Mathew"
                                :op2 "M")
                   :prep-as (c10-8 / person
                                   :name (c10-7 / name
                                                :op1 "Bill"))))

# ::snt Thanks for your reply! I shall check him out
# ::tokens ["Thanks", "for", "your", "reply", "!", "I", "shall", "check", "him", "out"]
# ::lemmas ["thank", "for", "your", "reply", "!", "i", "shall", "check", "he", "out"]
(c12-1 / multi-sentence
       :snt1 (c12-7 / thank-01
                    :ARG0 (c12-6 / i)
                    :ARG1 (c12-0 / you)
                    :ARG2 (c12-3 / reply-01
                                 :ARG0 c12-0))
       :snt2 (c12-5 / check-out-05
                    :ARG0 (c12-2 / i)
                    :ARG1 (c12-4 / he)))

# ::snt is the King of Trump. Brilliant. Better than the original.
# ::tokens ["is", "the", "King", "of", "Trump", ".", "Brilliant", ".", "Better", "than", "the", "original", "."]
# ::lemmas ["be", "the", "King", "of", "Trump", ".", "brilliant", ".", "well", "than", "the", "original", "."]
(c13-3 / multi-sentence
       :snt1 (c13-6 / person
                    :ARG0-of (c13-5 / have-org-role-91
                                    :ARG1 (c13-4 / person
                                                 :name (c13-2 / name
                                                              :op1 "Trump"))
                                    :ARG2 (c13-7 / king)))
       :snt2 (c13-1 / brilliant-01)
       :snt3 (c13-9 / have-degree-91
                    :ARG2 (c13-10 / good-02)
                    :ARG3 (c13-8 / more)
                    :ARG4 (c13-0 / original)))

# ::snt I can't tell if this is a joke or real.
# ::tokens ["I", "ca", "n't", "tell", "if", "this", "is", "a", "joke", "or", "real", "."]
# ::lemmas ["i", "can", "not", "tell", "if", "this", "be", "a", "joke", "or", "real", "."]
(c14-2 / possible-01
       :ARG1 (c14-5 / tell-02
                    :ARG0 (c14-4 / i)
                    :ARG1 (c14-0 / or
                                 :op1 (c14-3 / joke-01
                                             :ARG2 (c14-6 / this))
                                 :op2 (c14-1 / real-04
                                             :ARG1 c14-6)))
       :polarity -)

# ::snt it was his MLK day speech. Unity and all that shit.
# ::tokens ["it", "was", "his", "MLK", "day", "speech", ".", "Unity", "and", "all", "that", "shit", "."]
# ::lemmas ["it", "be", "his", "MLK", "day", "speech", ".", "unity", "and", "all", "that", "shit", "."]
(c15-2 / multi-sentence
       :snt1 (c15-3 / speak-01
                    :ARG0 (c15-5 / he)
                    :ARG1 (c15-4 / event
                                 :name (c15-1 / name
                                              :op1 "MLK"
                                              :op2 "Day"))
                    :domain (c15-7 / it))
       :snt2 (c15-8 / and
                    :op1 (c15-10 / unity)
                    :op2 (c15-0 / shit
                                :mod (c15-9 / all)
                                :mod (c15-6 / that))))

# ::snt "Vanity Fair? Who has time for that rag?! Vanity Fail more like! No real journalism. Bias media. Sad." - Trump on th of July
# ::tokens ["\"", "Vanity", "Fair", "?", "Who", "has", "time", "for", "that", "rag", "?", "!", "Vanity", "Fail", "more", "like", "!", "No", "real", "journalism", ".", "Bias", "media", ".", "Sad", ".", "\"", "-", "Trump", "on", "th", "of", "July"]
# ::lemmas ["\"", "Vanity", "Fair", "?", "who", "have", "time", "for", "that", "rag", "?", "!", "Vanity", "Fail", "more", "like", "!", "no", "real", "journalism", ".", "Bias", "medium", ".", "sad", ".", "\"", "-", "trump", "on", "th", "of", "July"]
(c17-10 / multi-sentence
        :snt1 (c17-3 / have-03
                     :polarity (c17-7 / amr-unknown)
                     :ARG0 (c17-6 / amr-unknown)
                     :ARG1 (c17-8 / time
                                  :purpose (c17-17 / rag
                                                   :mod (c17-13 / that))))
        :snt2 (c17-19 / have-degree-91
                      :ARG1 (c17-15 / fail-01
                                    :ARG1 (c17-4 / magazine
                                                 :name (c17-16 / name
                                                               :op1 "Vanity"
                                                               :op2 "Fair")))
                      :ARG2 (c17-1 / resemble-01
                                   :ARG1 c17-15)
                      :ARG3 (c17-14 / more))
        :snt3 (c17-5 / journalism
                     :ARG1-of (c17-12 / real-04)
                     :polarity -)
        :snt4 (c17-9 / bias-01
                     :ARG1 (c17-11 / media))
        :snt5 (c17-0 / sad-02)
        :ARG1-of (c17-2 / say-01
                        :ARG0 (c17-18 / person
                                      :name c17-16
                                      :op1 "Trump"))
        :time (c17-21 / date-entity
                      :day (c17-20 / th)
                      :month 7))

# ::snt The real fact, the truest fact, the best fact ever: They both suck
# ::tokens ["The", "real", "fact", ",", "the", "truest", "fact", ",", "the", "best", "fact", "ever", ":", "They", "both", "suck"]
# ::lemmas ["the", "real", "fact", ",", "the", "true", "fact", ",", "the", "good", "fact", "ever", ":", "they", "both", "suck"]
(c18-3 / suck-03
       :ARG0 (c18-7 / they
                    :mod (c18-1 / both))
       :ARG1-of (c18-4 / real-04)
       :ARG1-of (c18-6 / have-degree-91
                       :ARG2 (c18-8 / true-01
                                    :ARG1 (c18-0 / fact)
                                    :ARG3 (c18-2 / most)
                                    :ARG5 c18-0
                                    :time (c18-5 / ever))))

# ::snt You are off your rocker.
# ::tokens ["You", "are", "off", "your", "rocker", "."]
# ::lemmas ["you", "be", "off", "your", "rocker", "."]
(c19-0 / off
       :op1 (c19-2 / rocker
                   :poss (c19-1 / you
                                :domain-of c19-0)))

# ::snt Alternate fact..
# ::tokens ["Alternate", "fact", ".."]
# ::lemmas ["alternate", "fact", ".."]
(c20-0 / fact
       :ARG1-of (c20-1 / alternate-01))

# ::snt your worst tweet?
# ::tokens ["your", "worst", "tweet", "?"]
# ::lemmas ["your", "bad", "tweet", "?"]
(c21-4 / tweet-01
       :ARG0 (c21-1 / you)
       :polarity (c21-5 / amr-unknown)
       :ARG1-of (c21-3 / have-degree-91
                       :ARG2 (c21-0 / bad-07
                                    :ARG1 c21-4)
                       :ARG3 (c21-2 / most)))

# ::snt Real Donald Trump: Hold my beer.
# ::tokens ["Real", "Donald", "Trump", ":", "Hold", "my", "beer", "."]
# ::lemmas ["Real", "Donald", "Trump", ":", "hold", "my", "beer", "."]
(c22-2 / say-01
       :ARG1 (c22-4 / hold-01
                    :ARG0 (c22-5 / person
                                 :name (c22-1 / name
                                              :op1 "Donald"
                                              :op2 "Trump")
                                 :ARG1-of (c22-3 / real-04))
                    :ARG1 (c22-0 / beer
                                 :poss (c22-6 / i))
                    :mode imperative)
       :ARG2 c22-5)

# ::snt Now that's funny. Save it for SNL.
# ::tokens ["Now", "that", "'s", "funny", ".", "Save", "it", "for", "SNL", "."]
# ::lemmas ["now", "that", "be", "funny", ".", "save", "it", "for", "SNL", "."]
(c24-4 / multi-sentence
       :snt1 (c24-0 / funny
                    :domain (c24-8 / that)
                    :time (c24-3 / now))
       :snt2 (c24-5 / save-02
                    :ARG0 (c24-2 / you)
                    :ARG1 (c24-7 / it)
                    :ARG3 (c24-1 / broadcast-program
                                 :name (c24-6 / name
                                              :op1 "SNL"))
                    :mode imperative))

# ::snt Only silver lining four years of comedy gold making fun of idiot Trump. Has no idea what to do. The dog finally caught the car.
# ::tokens ["Only", "silver", "lining", "four", "years", "of", "comedy", "gold", "making", "fun", "of", "idiot", "Trump", ".", "Has", "no", "idea", "what", "to", "do", ".", "The", "dog", "finally", "caught", "the", "car", "."]
# ::lemmas ["only", "silver", "line", "four", "years", "of", "comedy", "gold", "make", "fun", "of", "idiot", "Trump", ".", "have", "no", "idea", "what", "to", "do", ".", "the", "dog", "finally", "catch", "the", "car", "."]
(c25-11 / multi-sentence
        :snt1 (c25-0 / silver
                     :ARG2-of (c25-1 / line-01
                                     :ARG1 (c25-8 / temporal-quantity
                                                  :unit (c25-4 / year)
                                                  :quant 4))
                     :mod (c25-3 / only)
                     :mod (c25-12 / comedy)
                     :ARG0-of (c25-6 / make-fun-04
                                     :ARG1 (c25-17 / person
                                                   :name (c25-16 / name
                                                                 :op1 "Trump")
                                                   :mod (c25-18 / idiot))))
        :snt2 (c25-7 / have-03
                     :ARG1 (c25-5 / idea
                                  :topic (c25-14 / thing
                                                 :ARG1-of (c25-19 / do-02
                                                                  :ARG0 (c25-9 / i))))
                     :polarity -)
        :snt3 (c25-10 / catch-02
                      :ARG0 (c25-13 / dog)
                      :ARG1 (c25-2 / car)
                      :time (c25-15 / final)))

# ::snt please Alec give the performance that gives Donny a stroke
# ::tokens ["please", "Alec", "give", "the", "performance", "that", "gives", "Donny", "a", "stroke"]
# ::lemmas ["please", "Alec", "give", "the", "performance", "that", "give", "Donny", "a", "stroke"]
(c27-4 / perform-01
       :ARG0 (c27-1 / person
                    :name (c27-0 / name
                                 :op1 "Alec"))
       :ARG1 (c27-5 / thing
                    :ARG0-of (c27-6 / give-01
                                    :ARG1 (c27-2 / stroke-02
                                                 :ARG1 (c27-7 / person
                                                              :name (c27-3 / name
                                                                           :op1 "Donny")
                                                              :ARG2-of c27-6))))
       :mode imperative
       :polite +)

# ::snt blah blah
# ::tokens ["blah", "blah"]
# ::lemmas ["blah", "blah"]
(c28-0 / blah-blah-blah)

# ::snt Well done Mr. Baldwin!
# ::tokens ["Well", "done", "Mr.", "Baldwin", "!"]
# ::lemmas ["well", "do", "Mr.", "Baldwin", "!"]
(c29-2 / say-01
       :ARG1 (c29-4 / do-02
                    :ARG1-of (c29-3 / well-09))
       :ARG2 (c29-0 / mister
                    :name (c29-1 / name
                                 :op1 "Baldwin")))

# ::snt He might've been a Hollywood commie had he been old enough in . Now he's just a left-wing troll
# ::tokens ["He", "might", "'ve", "been", "a", "Hollywood", "commie", "had", "he", "been", "old", "enough", "in", ".", "Now", "he", "'s", "just", "a", "left", "-", "wing", "troll"]
# ::lemmas ["he", "might", "'ve", "be", "a", "Hollywood", "commie", "have", "he", "be", "old", "enough", "in", ".", "now", "he", "be", "just", "a", "left", "-", "wing", "troll"]
(c30-2 / multi-sentence
       :snt1 (c30-5 / possible-01
                    :ARG1 (c30-9 / commie
                                 :mod (c30-4 / market-sector
                                             :name (c30-1 / name
                                                          :op1 "Hollywood"))
                                 :domain (c30-6 / he))
                    :condition (c30-11 / have-degree-91
                                       :ARG1 c30-6
                                       :ARG2 (c30-0 / old)
                                       :ARG3 (c30-3 / enough)))
       :snt2 (c30-13 / troll-01
                     :ARG0 (c30-7 / he)
                     :mod (c30-12 / just)
                     :mod (c30-8 / left-19)
                     :time (c30-10 / now)))

# ::snt now if he could only be a good actor that way people care
# ::tokens ["now", "if", "he", "could", "only", "be", "a", "good", "actor", "that", "way", "people", "care"]
# ::lemmas ["now", "if", "he", "could", "only", "be", "a", "good", "actor", "that", "way", "people", "care"]
(c31-3 / have-condition-91
       :ARG1 (c31-5 / care-01
                    :ARG0 (c31-4 / person))
       :ARG2 (c31-2 / possible-01
                    :ARG1 (c31-10 / good-03
                                  :ARG1 (c31-7 / he)
                                  :ARG2 (c31-9 / act-01
                                               :ARG0 c31-7)
                                  :mod (c31-0 / only)))
       :time (c31-1 / now)
       :manner (c31-6 / way
                      :mod (c31-8 / that)))

# ::snt You can get the hat here
# ::tokens ["You", "can", "get", "the", "hat", "here"]
# ::lemmas ["you", "can", "get", "the", "hat", "here"]
(c32-2 / possible-01
       :ARG1 (c32-4 / get-01
                    :ARG0 (c32-0 / you)
                    :ARG1 (c32-1 / hat)
                    :location (c32-3 / here)))

# ::snt :. GREAT job Comrades! Thanks you!!!
# ::tokens [":", ".", "GREAT", "job", "Comrades", "!", "Thanks", "you", "!", "!", "!"]
# ::lemmas [":", ".", "GREAT", "job", "comrade", "!", "thanks", "you", "!", "!", "!"]
(c33-0 / multi-sentence
       :snt1 (c33-1 / say-01
                    :ARG0 (c33-4 / i)
                    :ARG1 (c33-3 / job
                                 :mod (c33-6 / great))
                    :ARG2 (c33-2 / comrade))
       :snt2 (c33-5 / thank-01
                    :ARG0 c33-4
                    :ARG1 c33-2
                    :mode expressive))

# ::snt on him
# ::tokens ["on", "him"]
# ::lemmas ["on", "he"]
(c34-0 / on
       :op1 (c34-1 / he))

# ::snt Hillary not going to be president trump is for now that why the focus is
# ::tokens ["Hillary", "not", "going", "to", "be", "president", "trump", "is", "for", "now", "that", "why", "the", "focus", "is"]
# ::lemmas ["Hillary", "not", "go", "to", "be", "president", "trump", "be", "for", "now", "that", "why", "the", "focus", "be"]
(c35-7 / trump-01
       :ARG0 (c35-3 / have-org-role-91
                    :ARG0 (c35-4 / person
                                 :name (c35-1 / name
                                              :op1 "Hillary"))
                    :ARG2 (c35-2 / president)
                    :time (c35-5 / now)
                    :polarity -)
       :ARG1 (c35-8 / thing
                    :ARG0-of (c35-6 / cause-01
                                    :ARG1 (c35-0 / focus-01))))

# ::snt What a useless piece of shit that idiot is. Loser
# ::tokens ["What", "a", "useless", "piece", "of", "shit", "that", "idiot", "is", ".", "Loser"]
# ::lemmas ["what", "a", "useless", "piece", "of", "shit", "that", "idiot", "be", ".", "Loser"]
(c36-1 / multi-sentence
       :snt1 (c36-4 / piece
                    :consist-of (c36-3 / shit)
                    :ARG1-of (c36-8 / useful-05
                                    :degree (c36-0 / so)
                                    :polarity -)
                    :domain (c36-6 / idiot
                                   :mod (c36-7 / that)))
       :snt2 (c36-2 / person
                    :ARG0-of (c36-5 / lose-03)))

# ::snt Lessons from a wall building Russian Tzar: . I think Mr. Trump's a fan.
# ::tokens ["Lessons", "from", "a", "wall", "building", "Russian", "Tzar", ":", ".", "I", "think", "Mr.", "Trump", "'s", "a", "fan", "."]
# ::lemmas ["lesson", "from", "a", "wall", "build", "Russian", "Tzar", ":", ".", "i", "think", "Mr.", "Trump", "'s", "a", "fan", "."]
(c37-4 / say-01
       :ARG0 (c37-11 / i)
       :ARG1 (c37-12 / think-01
                     :ARG0 c37-11
                     :ARG1 (c37-0 / fan
                                  :domain (c37-6 / person
                                                 :name (c37-2 / name
                                                              :op1 "Mr."
                                                              :op2 "Trump"))))
       :ARG2 (c37-7 / lesson
                    :source (c37-1 / building-01
                                   :ARG1 (c37-9 / wall))
                    :mod (c37-3 / person
                                :name (c37-5 / name
                                             :op1 "Tzar")
                                :mod (c37-10 / country
                                             :name (c37-8 / name
                                                          :op1 "Russia")))))

# ::snt Keep up the good work Alec Baldwin! The country needs you!
# ::tokens ["Keep", "up", "the", "good", "work", "Alec", "Baldwin", "!", "The", "country", "needs", "you", "!"]
# ::lemmas ["keep", "up", "the", "good", "work", "Alec", "Baldwin", "!", "the", "country", "need", "you", "!"]
(c38-1 / multi-sentence
       :snt1 (c38-3 / say-01
                    :ARG0 (c38-9 / i)
                    :ARG1 (c38-5 / keep-up-10
                                 :ARG0 (c38-6 / person
                                              :name (c38-2 / name
                                                           :op1 "Alec"
                                                           :op2 "Baldwin"))
                                 :ARG1 (c38-7 / work-01
                                              :ARG0 c38-6
                                              :ARG1-of (c38-10 / good-02)))
                    :ARG2 c38-6)
       :snt2 (c38-4 / need-01
                    :ARG0 (c38-8 / country)
                    :ARG1 (c38-0 / you)))

# ::snt The Russian hats probably were made in China, too.
# ::tokens ["The", "Russian", "hats", "probably", "were", "made", "in", "China", ",", "too", "."]
# ::lemmas ["the", "Russian", "hat", "probably", "be", "make", "in", "China", ",", "too", "."]
(c41-1 / make-01
       :ARG1 (c41-2 / hat
                    :mod (c41-5 / country
                                :name (c41-0 / name
                                             :op1 "Russia")))
       :location (c41-7 / country
                        :name (c41-3 / name
                                     :op1 "China"))
       :mod (c41-6 / too)
       :mod (c41-4 / probable))

# ::snt .
# ::tokens ["."]
# ::lemmas ["."]
(c42-0 / amr-empty)

# ::snt Baldwin is a dancing chicken- he isnt the President
# ::tokens ["Baldwin", "is", "a", "dancing", "chicken-", "he", "is", "nt", "the", "President"]
# ::lemmas ["Baldwin", "be", "a", "dancing", "chicken-", "he", "be", "not", "the", "President"]
(c44-5 / and
       :op1 (c44-4 / chicken
                   :ARG0-of (c44-6 / dance-01)
                   :domain (c44-3 / person
                                  :name (c44-0 / name
                                               :op1 "Baldwin")))
       :op2 (c44-2 / have-org-role-91
                   :ARG0 c44-3
                   :ARG2 (c44-1 / president)
                   :polarity -))

# ::snt And we are not done watching it yet
# ::tokens ["And", "we", "are", "not", "done", "watching", "it", "yet"]
# ::lemmas ["and", "we", "be", "not", "do", "watch", "it", "yet"]
(c45-5 / and
       :op2 (c45-0 / be-done-08
                   :ARG0 (c45-3 / we)
                   :ARG1 (c45-2 / watch-01
                                :ARG0 c45-3
                                :ARG1 (c45-4 / it))
                   :time (c45-1 / yet)
                   :polarity -))

# ::snt but we are done pretending his version is better than , right?
# ::tokens ["but", "we", "are", "done", "pretending", "his", "version", "is", "better", "than", ",", "right", "?"]
# ::lemmas ["but", "we", "be", "do", "pretend", "his", "version", "be", "well", "than", ",", "right", "?"]
(c46-6 / contrast-01
       :ARG2 (c46-0 / be-done-08
                    :ARG0 (c46-7 / we)
                    :ARG1 (c46-5 / pretend-01
                                 :ARG0 c46-7
                                 :ARG1 (c46-4 / have-degree-91
                                              :ARG1 (c46-3 / version
                                                           :poss (c46-8 / he))
                                              :ARG2 (c46-9 / good-02
                                                           :ARG1 c46-3)
                                              :ARG3 (c46-1 / more)
                                              :ARG4 c46-3)))
       :ARG1-of (c46-2 / request-confirmation-91))

# ::snt Nope but it's funny as hell
# ::tokens ["Nope", "but", "it", "'s", "funny", "as", "hell"]
# ::lemmas ["nope", "but", "it", "be", "funny", "as", "hell"]
(c47-2 / contrast-01
       :ARG1 (c47-1 / nope)
       :ARG2 (c47-0 / funny-02
                    :ARG1 (c47-3 / it)
                    :degree (c47-4 / as-hell)))

# ::snt Trump isn't done playing America yet.
# ::tokens ["Trump", "is", "n't", "done", "playing", "America", "yet", "."]
# ::lemmas ["Trump", "be", "not", "do", "play", "America", "yet", "."]
(c48-0 / be-done-08
       :ARG0 (c48-5 / person
                    :name (c48-2 / name
                                 :op1 "Trump"))
       :ARG1 (c48-3 / play-01
                    :ARG0 c48-5
                    :ARG2 (c48-6 / country
                                 :name (c48-4 / name
                                              :op1 "America")))
       :time (c48-1 / yet)
       :polarity -)

# ::snt He's in prison preparing for his role as Trump in prison
# ::tokens ["He", "'s", "in", "prison", "preparing", "for", "his", "role", "as", "Trump", "in", "prison"]
# ::lemmas ["he", "be", "in", "prison", "prepare", "for", "his", "role", "as", "Trump", "in", "prison"]
(c50-0 / be-located-at-91
       :ARG1 (c50-4 / he)
       :ARG2 (c50-5 / prison)
       :purpose (c50-2 / prepare-02
                       :ARG0 c50-4
                       :ARG1 c50-4
                       :ARG2 (c50-3 / role
                                    :mod (c50-6 / person
                                                :name (c50-1 / name
                                                             :op1 "Trump"))
                                    :location c50-5)))
