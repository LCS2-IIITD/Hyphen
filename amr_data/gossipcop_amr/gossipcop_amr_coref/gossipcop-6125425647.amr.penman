# ::snt nice so nice'
# ::tokens ["nice", "so", "nice", "'"]
# ::lemmas ["nice", "so", "nice", "'"]
(c1-1 / nice-01
      :degree (c1-2 / so)
      :ARG1-of (c1-0 / nice-01))

# ::snt this is really serious
# ::tokens ["this", "is", "really", "serious"]
# ::lemmas ["this", "be", "really", "serious"]
(c2-2 / serious-02
      :ARG1 (c2-1 / this)
      :degree (c2-0 / really))

# ::snt Justin Bieber like selena Gomez
# ::tokens ["Justin", "Bieber", "like", "selena", "Gomez"]
# ::lemmas ["Justin", "Bieber", "like", "selena", "Gomez"]
(c3-2 / resemble-01
      :ARG1 (c3-4 / person
                  :name (c3-0 / name
                              :op1 "Justin"
                              :op2 "Bieber"))
      :ARG2 (c3-1 / person
                  :name (c3-3 / name
                              :op1 "Sylena"
                              :op2 "Gomez")))

# ::snt Whats new?
# ::tokens ["What", "s", "new", "?"]
# ::lemmas ["what", "s", "new", "?"]
(c4-0 / new-01
      :ARG1 (c4-1 / amr-unknown))

# ::snt we're done with this...
# ::tokens ["we", "'re", "done", "with", "this", "..."]
# ::lemmas ["we", "be", "do", "with", "this", "..."]
(c5-1 / be-done-08
      :ARG0 (c5-0 / we)
      :ARG1 (c5-2 / this))

# ::snt OMG! Justin: still Selena considering he deleted his IG. Selena: accept that there will always be a connection.
# ::tokens ["OMG", "!", "Justin", ":", "still", "Selena", "considering", "he", "deleted", "his", "IG", ".", "Selena", ":", "accept", "that", "there", "will", "always", "be", "a", "connection", "."]
# ::lemmas ["OMG", "!", "Justin", ":", "still", "Selena", "consider", "he", "delete", "his", "IG", ".", "Selena", ":", "accept", "that", "there", "will", "always", "be", "a", "connection", "."]
(c6-2 / multi-sentence
      :snt1 (c6-8 / consider-02
                  :ARG0 (c6-6 / person
                              :name (c6-1 / name
                                          :op1 "Justin"))
                  :ARG1 (c6-11 / delete-01
                               :ARG0 c6-6
                               :ARG1 (c6-3 / publication
                                           :name (c6-5 / name
                                                       :op1 "Institute")
                                           :poss c6-6))
                  :mod (c6-4 / still)
                  :mod (c6-0 / oh-my-god
                             :mode expressive))
      :snt2 (c6-10 / accept-01
                   :ARG0 (c6-12 / person
                                :name (c6-7 / name
                                            :op1 "Selena"))
                   :ARG1 (c6-13 / connect-01
                                :time (c6-9 / always))
                   :mode imperative))

# ::snt Selena you are the best
# ::tokens ["Selena", "you", "are", "the", "best"]
# ::lemmas ["Selena", "you", "be", "the", "good"]
(c7-2 / say-01
      :ARG1 (c7-3 / have-degree-91
                  :ARG1 (c7-4 / person
                              :name (c7-0 / name
                                          :op1 "Selena"))
                  :ARG2 (c7-5 / good-02
                              :ARG1 c7-4)
                  :ARG3 (c7-1 / most))
      :ARG2 c7-4)

# ::snt Y'all still chirpin about this
# ::tokens ["Y'all", "still", "chirpin", "about", "this"]
# ::lemmas ["Y'all", "still", "chirpin", "about", "this"]
(c8-3 / chirpin
      :domain (c8-0 / you
                    :mod (c8-2 / all))
      :topic (c8-4 / this)
      :mod (c8-1 / still))

# ::snt I wonder when they had their first pregnancy scare? Usually happens in the second month for me..
# ::tokens ["I", "wonder", "when", "they", "had", "their", "first", "pregnancy", "scare", "?", "Usually", "happens", "in", "the", "second", "month", "for", "me", ".."]
# ::lemmas ["i", "wonder", "when", "they", "have", "their", "first", "pregnancy", "scare", "?", "usually", "happen", "in", "the", "second", "month", "for", "i", ".."]
(c9-2 / multi-sentence
      :snt1 (c9-8 / wonder-01
                  :ARG0 (c9-9 / i)
                  :ARG1 (c9-10 / time
                               :time-of (c9-3 / scare-01
                                              :ARG0 (c9-7 / pregnancy
                                                          :poss (c9-12 / they
                                                                       :ARG1-of c9-3))
                                              :ord (c9-0 / ordinal-entity
                                                         :value 1))))
      :snt2 (c9-11 / usual
                   :domain (c9-5 / event
                                 :time (c9-6 / month
                                             :ord (c9-1 / ordinal-entity
                                                        :value 2))
                                 :beneficiary (c9-4 / i))))

# ::snt Why are you bringing this up? can u not, both of them have moved on and are now happy, stop
# ::tokens ["Why", "are", "you", "bringing", "this", "up", "?", "can", "u", "not", ",", "both", "of", "them", "have", "moved", "on", "and", "are", "now", "happy", ",", "stop"]
# ::lemmas ["why", "be", "you", "bring", "this", "up", "?", "can", "u", "not", ",", "both", "of", "they", "have", "move", "on", "and", "be", "now", "happy", ",", "stop"]
(c10-14 / multi-sentence
        :snt1 (c10-15 / cause-01
                      :ARG0 (c10-10 / amr-unknown)
                      :ARG1 (c10-13 / bring-up-02
                                    :ARG0 (c10-5 / you)
                                    :ARG1 (c10-9 / this)))
        :snt2 (c10-18 / possible-01
                      :ARG1 (c10-1 / bring-up-02
                                   :ARG0 (c10-11 / you)
                                   :ARG1 c10-9)
                      :ARG1-of (c10-12 / cause-01
                                       :ARG0 (c10-8 / and
                                                    :op1 (c10-6 / move-01
                                                                :ARG1 (c10-16 / they
                                                                              :mod (c10-2 / both))
                                                                :direction (c10-4 / on))
                                                    :op2 (c10-7 / happy-01
                                                                :ARG1 c10-16
                                                                :time (c10-17 / now))))
                      :polarity -)
        :snt3 (c10-0 / stop-01
                     :ARG0 (c10-3 / you)
                     :mode imperative))

# ::snt thank you
# ::tokens ["thank", "you"]
# ::lemmas ["thank", "you"]
(c11-2 / thank-01
       :ARG0 (c11-1 / i)
       :ARG1 (c11-0 / you))

# ::snt hello! you're now trending on RT for more votes!
# ::tokens ["hello", "!", "you", "'re", "now", "trending", "on", "RT", "for", "more", "votes", "!"]
# ::lemmas ["hello", "!", "you", "be", "now", "trend", "on", "RT", "for", "more", "vote", "!"]
(c12-1 / multi-sentence
       :snt1 (c12-4 / hello
                    :mode expressive)
       :snt2 (c12-8 / trend-01
                    :ARG1 (c12-0 / you)
                    :ARG2 (c12-5 / publication
                                 :name (c12-2 / name
                                              :op1 "RT"))
                    :time (c12-6 / now)
                    :purpose (c12-3 / vote-01
                                    :ARG2 (c12-7 / more))))

# ::snt Get the fuck out. There done!! They have been for years. Why bring it up when she's beyond happy. Smh
# ::tokens ["Get", "the", "fuck", "out", ".", "There", "done", "!", "!", "They", "have", "been", "for", "years", ".", "Why", "bring", "it", "up", "when", "she", "'s", "beyond", "happy", ".", "Smh"]
# ::lemmas ["get", "the", "fuck", "out", ".", "there", "do", "!", "!", "they", "have", "be", "for", "years", ".", "why", "bring", "it", "up", "when", "she", "be", "beyond", "happy", ".", "smh"]
(c13-4 / multi-sentence
       :snt1 (c13-13 / get-05
                     :ARG0 (c13-3 / you
                                  :ARG1-of c13-13)
                     :ARG2 (c13-0 / out)
                     :mod (c13-1 / fuck
                                 :mode expressive)
                     :mode imperative)
       :snt2 (c13-2 / be-done-08
                    :ARG0 (c13-12 / they)
                    :time (c13-8 / multiple
                                 :op1 (c13-15 / temporal-quantity
                                              :unit (c13-14 / year)
                                              :quant 1)))
       :snt3 (c13-9 / bring-up-02
                    :ARG0 (c13-7 / amr-unknown)
                    :ARG1 (c13-11 / it)
                    :time (c13-10 / happy-01
                                  :ARG1 (c13-6 / she)
                                  :degree (c13-16 / beyond)))
       :snt4 (c13-5 / smh
                    :mode expressive))

# ::snt My feels but they are both happy know
# ::tokens ["My", "feels", "but", "they", "are", "both", "happy", "know"]
# ::lemmas ["my", "feel", "but", "they", "be", "both", "happy", "know"]
(c14-3 / contrast-01
       :ARG1 (c14-0 / feel-01
                    :ARG0 (c14-4 / i))
       :ARG2 (c14-2 / happy-01
                    :ARG1 (c14-5 / they
                                 :mod (c14-1 / both))))

# ::snt No one cares
# ::tokens ["No", "one", "cares"]
# ::lemmas ["no", "one", "care"]
(c15-0 / care-01
       :ARG0 (c15-1 / no-one))
