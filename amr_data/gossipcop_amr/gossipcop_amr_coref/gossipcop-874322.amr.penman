# ::snt Thank you.
# ::tokens ["Thank", "you", "."]
# ::lemmas ["thank", "you", "."]
(c1-2 / thank-01
      :ARG0 (c1-1 / i)
      :ARG1 (c1-0 / you))

# ::snt For some reason I get get the poll. Hopefully she makes it to round and I will be able to vote. Keep voting!
# ::tokens ["For", "some", "reason", "I", "get", "get", "the", "poll", ".", "Hopefully", "she", "makes", "it", "to", "round", "and", "I", "will", "be", "able", "to", "vote", ".", "Keep", "voting", "!"]
# ::lemmas ["for", "some", "reason", "i", "get", "get", "the", "poll", ".", "hopefully", "she", "make", "it", "to", "round", "and", "i", "will", "be", "able", "to", "vote", ".", "keep", "vote", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-16 / get-01
                   :ARG0 (c2-14 / i)
                   :ARG1 (c2-9 / poll-01)
                   :ARG1-of (c2-12 / cause-01
                                   :ARG0 (c2-6 / reason
                                               :mod (c2-4 / some))))
      :snt2 (c2-15 / and
                   :op1 (c2-8 / hope-01
                              :ARG0 (c2-5 / i)
                              :ARG1 (c2-10 / make-18
                                           :ARG0 (c2-0 / she)
                                           :ARG1 (c2-17 / round-03
                                                        :ARG1 c2-0)))
                   :op2 (c2-3 / possible-01
                              :ARG1 (c2-7 / vote-01
                                          :ARG0 c2-5)))
      :snt3 (c2-11 / keep-02
                   :ARG0 (c2-1 / you)
                   :ARG1 (c2-13 / vote-01
                                :ARG0 c2-1)
                   :mode imperative))

# ::snt Click the link, scroll down to Alycia and vote!
# ::tokens ["Click", "the", "link", ",", "scroll", "down", "to", "Alycia", "and", "vote", "!"]
# ::lemmas ["click", "the", "link", ",", "scroll", "down", "to", "Alycia", "and", "vote", "!"]
(c3-7 / and
      :op1 (c3-6 / click-01
                 :ARG0 (c3-0 / you)
                 :ARG1 (c3-4 / link)
                 :mode imperative)
      :op2 (c3-2 / scroll-01
                 :ARG0 c3-0
                 :ARG4 (c3-5 / person
                             :name (c3-1 / name
                                         :op1 "Alycia"))
                 :direction (c3-8 / down)
                 :mode imperative)
      :op3 (c3-3 / vote-01
                 :ARG0 c3-0
                 :mode imperative))

# ::snt How do I vote?
# ::tokens ["How", "do", "I", "vote", "?"]
# ::lemmas ["how", "do", "i", "vote", "?"]
(c4-0 / vote-01
      :ARG0 (c4-1 / i)
      :manner (c4-2 / amr-unknown))

# ::snt Indeed! Lets vote for her!
# ::tokens ["Indeed", "!", "Lets", "vote", "for", "her", "!"]
# ::lemmas ["indeed", "!", "let", "vote", "for", "she", "!"]
(c5-0 / multi-sentence
      :snt1 (c5-4 / indeed
                  :mode expressive)
      :snt2 (c5-2 / vote-01
                  :ARG0 (c5-3 / we)
                  :ARG1 (c5-1 / she)
                  :mode imperative))

# ::snt Alycia must win
# ::tokens ["Alycia", "must", "win"]
# ::lemmas ["Alycia", "must", "win"]
(c6-0 / obligate-01
      :ARG1 (c6-3 / team
                  :name (c6-1 / name
                              :op1 "Alycia"))
      :ARG2 (c6-2 / win-01
                  :ARG0 c6-3))

# ::snt -
# ::tokens ["-"]
# ::lemmas ["-"]
(c7-0 / amr-empty)

# ::snt I know! But we have to get Cait through!
# ::tokens ["I", "know", "!", "But", "we", "have", "to", "get", "Cait", "through", "!"]
# ::lemmas ["i", "know", "!", "but", "we", "have", "to", "get", "Cait", "through", "!"]
(c9-1 / multi-sentence
      :snt1 (c9-3 / know-01
                  :ARG0 (c9-7 / i)
                  :mode expressive)
      :snt2 (c9-5 / contrast-01
                  :ARG2 (c9-0 / obligate-01
                              :ARG1 (c9-6 / we)
                              :ARG2 (c9-8 / get-through-13
                                          :ARG0 (c9-4 / person
                                                      :name (c9-2 / name
                                                                  :op1 "Cait"))))))

# ::snt my vision is so blurred it's not even funny. It's like a never ending voting cycle lol
# ::tokens ["my", "vision", "is", "so", "blurred", "it", "'s", "not", "even", "funny", ".", "It", "'s", "like", "a", "never", "ending", "voting", "cycle", "lol"]
# ::lemmas ["my", "vision", "be", "so", "blurred", "it", "be", "not", "even", "funny", ".", "it", "be", "like", "a", "never", "end", "voting", "cycle", "lol"]
(c10-3 / multi-sentence
       :snt1 (c10-2 / blur-01
                    :ARG1 (c10-4 / see-01
                                 :ARG0 (c10-13 / i))
                    :ARG2-of (c10-9 / have-degree-91
                                    :ARG1 c10-4
                                    :ARG3 (c10-0 / so)
                                    :ARG6 (c10-1 / funny-02
                                                 :ARG1 c10-4
                                                 :mod (c10-8 / even)
                                                 :polarity -)))
       :snt2 (c10-6 / resemble-01
                    :ARG1 (c10-5 / it)
                    :ARG2 (c10-12 / cycle-02
                                  :ARG1 (c10-7 / vote-01)
                                  :ARG1-of (c10-14 / end-01
                                                   :time (c10-11 / ever)
                                                   :polarity -))
                    :ARG2-of (c10-10 / laugh-01
                                     :manner (c10-15 / loud)
                                     :mode expressive)))

# ::snt I think I might need to replace my eyeballs with robot eyeballs after this. And then people's choice awards are coming.
# ::tokens ["I", "think", "I", "might", "need", "to", "replace", "my", "eyeballs", "with", "robot", "eyeballs", "after", "this", ".", "And", "then", "people", "'s", "choice", "awards", "are", "coming", "."]
# ::lemmas ["i", "think", "i", "might", "need", "to", "replace", "my", "eyeball", "with", "robot", "eyeball", "after", "this", ".", "and", "then", "people", "'s", "choice", "award", "be", "come", "."]
(c11-1 / multi-sentence
       :snt1 (c11-10 / think-01
                     :ARG0 (c11-9 / i)
                     :ARG1 (c11-6 / possible-01
                                  :ARG1 (c11-0 / need-01
                                               :ARG0 c11-9
                                               :ARG1 (c11-3 / replace-01
                                                            :ARG0 c11-9
                                                            :ARG1 (c11-5 / eyeball
                                                                         :part-of c11-9)
                                                            :ARG2 (c11-12 / eyeball
                                                                          :part-of (c11-13 / robot))
                                                            :time (c11-4 / after
                                                                         :op1 (c11-16 / this))))))
       :snt2 (c11-11 / and
                     :op2 (c11-7 / come-01
                                 :ARG1 (c11-8 / award-01
                                              :ARG1 (c11-15 / choose-01
                                                            :ARG0 (c11-2 / person)))
                                 :time (c11-14 / then))))

# ::snt are you sure you're not? I'm not so sure anymore. I've been questioned so many times I'm starting to wonder lol
# ::tokens ["are", "you", "sure", "you", "'re", "not", "?", "I", "'m", "not", "so", "sure", "anymore", ".", "I", "'ve", "been", "questioned", "so", "many", "times", "I", "'m", "starting", "to", "wonder", "lol"]
# ::lemmas ["be", "you", "sure", "you", "be", "not", "?", "i", "be", "not", "so", "sure", "anymore", ".", "i", "'ve", "be", "question", "so", "many", "time", "i", "be", "start", "to", "wonder", "lol"]
(c12-2 / multi-sentence
       :snt1 (c12-3 / sure-02
                    :polarity (c12-12 / amr-unknown)
                    :ARG0 (c12-1 / you)
                    :ARG1 (c12-6 / have-polarity-91
                                 :ARG1 c12-1
                                 :ARG2 -)
                    :polarity c12-12)
       :time (c12-11 / anymore)
       :snt2 (c12-0 / sure-02
                    :ARG0 (c12-13 / i)
                    :degree (c12-16 / so)
                    :time (c12-14 / question-01
                                  :ARG2 c12-13
                                  :ARG1-of (c12-10 / have-quant-91
                                                   :ARG2 (c12-7 / many)
                                                   :ARG3 (c12-4 / so)
                                                   :ARG6 (c12-5 / start-01
                                                                :ARG0 c12-13
                                                                :ARG1 (c12-9 / wonder-01
                                                                             :ARG0 c12-13)
                                                                :ARG2-of (c12-8 / laugh-01
                                                                                :ARG0 c12-13
                                                                                :manner (c12-15 / loud)))))
                    :polarity -))

# ::snt Thanks ... keep it up
# ::tokens ["Thanks", "...", "keep", "it", "up"]
# ::lemmas ["thank", "...", "keep", "it", "up"]
(c13-2 / and
       :op1 (c13-5 / thank-01
                   :ARG0 (c13-4 / i)
                   :ARG1 (c13-0 / you))
       :op2 (c13-3 / keep-up-05
                   :ARG0 c13-0
                   :ARG1 (c13-1 / it)
                   :mode imperative))

# ::snt Du kannst da nur ein mal .voten
# ::tokens ["Du", "kannst", "da", "nur", "ein", "mal", ".voten"]
# ::lemmas ["Du", "kannst", "da", "nur", "ein", "mal", ".voten"]
(c14-4 / amr-unintelligible
       :mod (c14-0 / fuck
                   :mode expressive)
       :ARG0-of (c14-3 / cause-01
                       :ARG1 (c14-5 / die-01
                                    :ARG1 (c14-2 / person
                                                 :name (c14-1 / name
                                                              :op1 "Mal."
                                                              :op2 "voten"))))
       :value "Du")

# ::snt da kann ich Caite so oft antippen wie ich will nach dem boten ist immer irgend ein anderer Name markiert!!
# ::tokens ["da", "kann", "ich", "Caite", "so", "oft", "antippen", "wie", "ich", "will", "nach", "dem", "boten", "ist", "immer", "irgend", "ein", "anderer", "Name", "markiert", "!", "!"]
# ::lemmas ["da", "kann", "ich", "Caite", "so", "oft", "antippen", "wie", "ich", "will", "nach", "dem", "boten", "ist", "immer", "irgend", "ein", "anderer", "Name", "markiert", "!", "!"]
(c15-16 / cause-01
        :ARG0 (c15-2 / oppose-01
                     :ARG0 (c15-23 / i)
                     :ARG1 (c15-9 / thing
                                  :name (c15-19 / name
                                                :op1 "ppen"))
                     :frequency (c15-11 / oft
                                        :degree (c15-0 / so)))
        :ARG1 (c15-20 / person
                      :ARG0-of (c15-5 / have-org-role-91
                                      :ARG2 (c15-12 / member))
                      :domain c15-23
                      :ARG1-of (c15-6 / mean-01
                                      :ARG2 (c15-13 / person
                                                    :ARG0-of (c15-18 / mark-02
                                                                     :ARG1 (c15-17 / thing
                                                                                   :name (c15-14 / name
                                                                                                 :op1 "name")))
                                                    :ARG0-of (c15-22 / have-03
                                                                     :ARG1 (c15-8 / and
                                                                                  :op1 c15-9
                                                                                  :op2 c15-17))))
                      :ARG1-of (c15-4 / have-degree-91
                                      :ARG2 (c15-3 / immerse-01
                                                   :ARG1 c15-20
                                                   :ARG2 (c15-7 / amr-unknown))
                                      :ARG3 (c15-15 / most)
                                      :ARG5 (c15-1 / person
                                                   :location (c15-10 / country
                                                                     :name (c15-21 / name
                                                                                   :op1 "Germany"))))))

# ::snt Done. Good luck.
# ::tokens ["Done", ".", "Good", "luck", "."]
# ::lemmas ["do", ".", "good", "luck", "."]
(c16-2 / multi-sentence
       :snt1 (c16-1 / do-02)
       :snt2 (c16-3 / luck
                    :ARG1-of (c16-0 / good-02)))

# ::snt You owe me a brownie!! (I'm hungry, shit, why not ask )
# ::tokens ["You", "owe", "me", "a", "brownie", "!", "!", "(", "I", "'m", "hungry", ",", "shit", ",", "why", "not", "ask", ")"]
# ::lemmas ["you", "owe", "i", "a", "brownie", "!", "!", "(", "i", "be", "hungry", ",", "shit", ",", "why", "not", "ask", ")"]
(c17-3 / multi-sentence
       :snt1 (c17-0 / owe-01
                    :ARG0 (c17-2 / you)
                    :ARG1 (c17-1 / brownie)
                    :ARG2 (c17-8 / i)
                    :mode expressive)
       :snt2 (c17-9 / and
                    :op1 (c17-6 / hunger-01
                                :ARG0 (c17-5 / i))
                    :op2 (c17-4 / shit-01
                                :mode expressive)
                    :ARG0-of (c17-7 / cause-01
                                    :ARG1 (c17-10 / ask-01
                                                  :ARG0 c17-5
                                                  :polarity -))))

# ::snt Yeah mobile van be quite an asshole with things like this idk why.
# ::tokens ["Yeah", "mobile", "van", "be", "quite", "an", "asshole", "with", "things", "like", "this", "idk", "why", "."]
# ::lemmas ["yeah", "mobile", "van", "be", "quite", "an", "asshole", "with", "thing", "like", "this", "idk", "why", "."]
(c18-2 / asshole
       :domain (c18-3 / van
                      :ARG1-of (c18-1 / mobile-02))
       :degree (c18-6 / quite)
       :condition (c18-7 / thing
                         :ARG1-of (c18-4 / resemble-01
                                         :ARG2 (c18-9 / this)))
       :ARG1-of (c18-5 / cause-01
                       :ARG0 (c18-8 / amr-unknown))
       :mod (c18-0 / yeah
                   :mode expressive))

# ::snt It ends tomorrow and the options are supposed to appear at the end of the page but my phone won't load them so I voted on my computer
# ::tokens ["It", "ends", "tomorrow", "and", "the", "options", "are", "supposed", "to", "appear", "at", "the", "end", "of", "the", "page", "but", "my", "phone", "wo", "n't", "load", "them", "so", "I", "voted", "on", "my", "computer"]
# ::lemmas ["it", "end", "tomorrow", "and", "the", "option", "be", "suppose", "to", "appear", "at", "the", "end", "of", "the", "page", "but", "my", "phone", "will", "not", "load", "they", "so", "i", "vote", "on", "my", "computer"]
(c19-4 / and
       :op1 (c19-6 / end-01
                   :ARG1 (c19-11 / it)
                   :time (c19-12 / tomorrow))
       :op2 (c19-9 / contrast-01
                   :ARG1 (c19-2 / suppose-02
                                :ARG1 (c19-13 / appear-01
                                              :ARG1 (c19-0 / option)
                                              :location (c19-14 / end-01
                                                                :ARG1 (c19-7 / page))))
                   :ARG2 (c19-8 / load-01
                                :ARG1 (c19-1 / phone
                                             :poss (c19-3 / i))
                                :ARG2 c19-0
                                :ARG0-of (c19-15 / cause-01
                                                 :ARG1 (c19-5 / vote-01
                                                              :ARG0 c19-3
                                                              :location (c19-10 / computer
                                                                                :poss c19-3)))
                                :polarity -)))

# ::snt ugh, yeah that sucks. i haven't found a mobile suitable version yet.
# ::tokens ["ugh", ",", "yeah", "that", "sucks", ".", "i", "have", "n't", "found", "a", "mobile", "suitable", "version", "yet", "."]
# ::lemmas ["ugh", ",", "yeah", "that", "suck", ".", "i", "have", "not", "find", "a", "mobile", "suitable", "version", "yet", "."]
(c22-3 / multi-sentence
       :snt1 (c22-4 / suck-03
                    :ARG0 (c22-8 / that)
                    :mod (c22-2 / yeah
                                :mode expressive))
       :snt2 (c22-0 / find-01
                    :ARG0 (c22-7 / i)
                    :ARG1 (c22-5 / version
                                 :ARG1-of (c22-1 / suitable-04
                                                 :ARG2 (c22-6 / mobile)))
                    :time (c22-9 / yet)
                    :polarity -))

# ::snt I'm not going to be able to get to desktop at all so I dunno if Im gonna be able to vote
# ::tokens ["I", "'m", "not", "going", "to", "be", "able", "to", "get", "to", "desktop", "at", "all", "so", "I", "dunno", "if", "I", "m", "gon", "na", "be", "able", "to", "vote"]
# ::lemmas ["i", "be", "not", "go", "to", "be", "able", "to", "get", "to", "desktop", "at", "all", "so", "i", "dunno", "if", "i", "m", "going", "to", "be", "able", "to", "vote"]
(c23-4 / cause-01
       :ARG0 (c23-2 / possible-01
                    :ARG1 (c23-8 / get-05
                                 :ARG1 (c23-6 / i)
                                 :ARG2 (c23-9 / desktop)
                                 :degree (c23-7 / at-all))
                    :polarity -)
       :ARG1 (c23-3 / know-01
                    :ARG0 c23-6
                    :ARG1 (c23-5 / truth-value
                                 :polarity-of (c23-0 / possible-01
                                                     :ARG1 (c23-1 / vote-01
                                                                  :ARG0 c23-6)))
                    :polarity -))

# ::snt Yeah I'm on mobile
# ::tokens ["Yeah", "I", "'m", "on", "mobile"]
# ::lemmas ["yeah", "i", "be", "on", "mobile"]
(c24-1 / mobile-02
       :ARG1 (c24-2 / i)
       :mod (c24-0 / yeah))

# ::snt are you on mobile or not? because I cannot see it on mobile either, but I can on my desktop
# ::tokens ["are", "you", "on", "mobile", "or", "not", "?", "because", "I", "can", "not", "see", "it", "on", "mobile", "either", ",", "but", "I", "can", "on", "my", "desktop"]
# ::lemmas ["be", "you", "on", "mobile", "or", "not", "?", "because", "i", "can", "not", "see", "it", "on", "mobile", "either", ",", "but", "i", "can", "on", "my", "desktop"]
(c25-3 / multi-sentence
       :snt1 (c25-12 / amr-choice
                     :op1 (c25-1 / be-located-at-91
                                 :ARG1 (c25-2 / you)
                                 :ARG2 (c25-6 / mobile))
                     :op2 (c25-7 / be-located-at-91
                                 :ARG1 c25-2
                                 :ARG2 (c25-15 / mobile)
                                 :polarity -))
       :snt2 (c25-10 / contrast-01
                     :ARG1 (c25-16 / cause-01
                                   :ARG0 (c25-8 / possible-01
                                                :ARG1 (c25-4 / see-01
                                                             :ARG0 (c25-11 / i)
                                                             :ARG1 (c25-5 / it)
                                                             :location (c25-13 / desktop
                                                                               :poss c25-11))
                                                :polarity -)
                                   :ARG1 (c25-0 / see-01
                                                :ARG0 (c25-14 / i)
                                                :ARG1 c25-5
                                                :location (c25-9 / mobile)))))

# ::snt Yeah there just isn't any place to vote at all
# ::tokens ["Yeah", "there", "just", "is", "n't", "any", "place", "to", "vote", "at", "all"]
# ::lemmas ["yeah", "there", "just", "be", "not", "any", "place", "to", "vote", "at", "all"]
(c26-2 / place
       :mod (c26-5 / any)
       :location-of (c26-1 / vote-01)
       :mod (c26-4 / at-all)
       :mod (c26-3 / just)
       :mod (c26-0 / yeah
                   :mode expressive)
       :polarity -)

# ::snt this is the actual link... if you're on mobile it doesn't show properly (as is often the case with E.
# ::tokens ["this", "is", "the", "actual", "link", "...", "if", "you", "'re", "on", "mobile", "it", "does", "n't", "show", "properly", "(", "as", "is", "often", "the", "case", "with", "E."]
# ::lemmas ["this", "be", "the", "actual", "link", "...", "if", "you", "be", "on", "mobile", "it", "do", "not", "show", "properly", "(", "as", "be", "often", "the", "case", "with", "E."]
(c27-2 / multi-sentence
       :snt1 (c27-8 / link
                    :ARG1-of (c27-4 / actual-02)
                    :domain (c27-12 / this))
       :snt2 (c27-3 / show-01
                    :ARG1 (c27-11 / it)
                    :manner (c27-9 / proper)
                    :condition (c27-7 / mobile-02
                                      :ARG1 (c27-1 / you))
                    :ARG1-of (c27-5 / resemble-01
                                    :ARG2 (c27-10 / case-04
                                                  :ARG1 (c27-6 / E)
                                                  :frequency (c27-0 / often)))
                    :polarity -))

# ::snt Where is it cause I can't find it either
# ::tokens ["Where", "is", "it", "cause", "I", "ca", "n't", "find", "it", "either"]
# ::lemmas ["where", "be", "it", "cause", "i", "can", "not", "find", "it", "either"]
(c28-1 / be-located-at-91
       :ARG1 (c28-6 / it)
       :ARG2 (c28-7 / amr-unknown)
       :ARG0-of (c28-5 / cause-01
                       :ARG1 (c28-4 / possible-01
                                    :ARG1 (c28-0 / find-01
                                                 :ARG0 (c28-2 / i)
                                                 :ARG1 c28-6
                                                 :mod (c28-3 / either))
                                    :polarity -)))

# ::snt How do we vote? Im confused. Is the voting over?
# ::tokens ["How", "do", "we", "vote", "?", "I", "m", "confused", ".", "Is", "the", "voting", "over", "?"]
# ::lemmas ["how", "do", "we", "vote", "?", "i", "m", "confused", ".", "be", "the", "voting", "over", "?"]
(c29-1 / multi-sentence
       :snt1 (c29-2 / vote-01
                    :ARG0 (c29-3 / we)
                    :manner (c29-7 / amr-unknown))
       :snt2 (c29-4 / confuse-01
                    :ARG1 (c29-6 / i))
       :snt3 (c29-0 / over-01
                    :ARG1 (c29-5 / vote-01)
                    :polarity (c29-8 / amr-unknown)))

# ::snt yay!
# ::tokens ["yay", "!"]
# ::lemmas ["yay", "!"]
(c30-0 / yay
       :mode expressive)

# ::snt This is the correct link.
# ::tokens ["This", "is", "the", "correct", "link", "."]
# ::lemmas ["this", "be", "the", "correct", "link", "."]
(c31-1 / link
       :ARG1-of (c31-0 / correct-02)
       :domain (c31-2 / this))

# ::snt Yeah. Weird. Anyways... I'm just gonna post the link in several groups so Melanie can win
# ::tokens ["Yeah", ".", "Weird", ".", "Anyways", "...", "I", "'m", "just", "gon", "na", "post", "the", "link", "in", "several", "groups", "so", "Melanie", "can", "win"]
# ::lemmas ["yeah", ".", "weird", ".", "anyway", "...", "i", "be", "just", "going", "to", "post", "the", "link", "in", "several", "group", "so", "Melanie", "can", "win"]
(c32-1 / multi-sentence
       :snt1 (c32-9 / weird
                    :mod (c32-0 / yeah))
       :snt2 (c32-6 / post-01
                    :ARG0 (c32-11 / i)
                    :ARG1 (c32-7 / link)
                    :ARG2 (c32-13 / group
                                  :quant (c32-3 / several))
                    :mod (c32-10 / just)
                    :purpose (c32-2 / possible-01
                                    :ARG1 (c32-8 / win-01
                                                 :ARG0 (c32-12 / person
                                                               :name (c32-4 / name
                                                                            :op1 "Melanie"))))
                    :mod (c32-5 / anyways)))

# ::snt I tweeted it from the page directly so it should have had the page there properly
# ::tokens ["I", "tweeted", "it", "from", "the", "page", "directly", "so", "it", "should", "have", "had", "the", "page", "there", "properly"]
# ::lemmas ["i", "tweet", "it", "from", "the", "page", "directly", "so", "it", "should", "have", "have", "the", "page", "there", "properly"]
(c33-7 / tweet-02
       :ARG0 (c33-6 / i)
       :ARG1 (c33-1 / it)
       :source (c33-4 / page)
       :ARG1-of (c33-8 / direct-02)
       :ARG0-of (c33-5 / cause-01
                       :ARG1 (c33-2 / recommend-01
                                    :ARG1 (c33-3 / have-03
                                                 :ARG0 c33-1
                                                 :ARG1 c33-4
                                                 :location c33-4
                                                 :manner (c33-0 / proper)))))

# ::snt I thought so too But it's not. Maybe you can change it?
# ::tokens ["I", "thought", "so", "too", "But", "it", "'s", "not", ".", "Maybe", "you", "can", "change", "it", "?"]
# ::lemmas ["i", "think", "so", "too", "but", "it", "be", "not", ".", "maybe", "you", "can", "change", "it", "?"]
(c34-1 / multi-sentence
       :snt1 (c34-7 / contrast-01
                    :ARG1 (c34-9 / think-01
                                 :ARG0 (c34-8 / i)
                                 :ARG1 (c34-2 / so)
                                 :mod (c34-12 / too))
                    :ARG2 (c34-5 / have-polarity-91
                                 :ARG1 (c34-3 / it)
                                 :ARG2 -))
       :snt2 (c34-6 / possible-01
                    :ARG1 (c34-11 / change-01
                                  :ARG0 (c34-0 / you)
                                  :ARG1 (c34-10 / it))
                    :polarity (c34-4 / amr-unknown)))

# ::snt the link is supposed to get you right to the actual page... but I guess that didn't work out.
# ::tokens ["the", "link", "is", "supposed", "to", "get", "you", "right", "to", "the", "actual", "page", "...", "but", "I", "guess", "that", "did", "n't", "work", "out", "."]
# ::lemmas ["the", "link", "be", "suppose", "to", "get", "you", "right", "to", "the", "actual", "page", "...", "but", "i", "guess", "that", "do", "not", "work", "out", "."]
(c35-1 / suppose-02
       :ARG1 (c35-4 / link)
       :ARG2 (c35-8 / get-05
                    :ARG0 c35-4
                    :ARG1 (c35-0 / you)
                    :ARG2 (c35-3 / page
                                 :ARG1-of (c35-7 / actual-02))
                    :ARG4-of (c35-2 / right-06
                                    :ARG1 c35-0))
       :concession (c35-6 / guess-01
                          :ARG0 (c35-9 / i)
                          :ARG1 (c35-5 / work-out-02
                                       :ARG1 c35-8
                                       :polarity -)))

# ::snt Figured it out. You have to click the link to vote.
# ::tokens ["Figured", "it", "out", ".", "You", "have", "to", "click", "the", "link", "to", "vote", "."]
# ::lemmas ["figured", "it", "out", ".", "you", "have", "to", "click", "the", "link", "to", "vote", "."]
(c36-3 / multi-sentence
       :snt1 (c36-0 / figure-out-05
                    :ARG1 (c36-7 / it))
       :snt2 (c36-1 / obligate-01
                    :ARG1 (c36-2 / you)
                    :ARG2 (c36-6 / click-01
                                 :ARG0 c36-2
                                 :ARG1 (c36-5 / link)
                                 :purpose (c36-4 / vote-01
                                                 :ARG0 c36-2))))

# ::snt that's weird indeed.
# ::tokens ["that", "'s", "weird", "indeed", "."]
# ::lemmas ["that", "be", "weird", "indeed", "."]
(c38-0 / weird
       :domain (c38-2 / that)
       :mod (c38-1 / indeed))

# ::snt further than that?
# ::tokens ["further", "than", "that", "?"]
# ::lemmas ["far", "than", "that", "?"]
(c39-2 / have-degree-91
       :ARG2 (c39-0 / far)
       :ARG3 (c39-1 / more)
       :ARG4 (c39-3 / that)
       :polarity (c39-4 / amr-unknown))

# ::snt Yes. But down is just more advertisement
# ::tokens ["Yes", ".", "But", "down", "is", "just", "more", "advertisement"]
# ::lemmas ["yes", ".", "but", "down", "be", "just", "more", "advertisement"]
(c40-1 / multi-sentence
       :snt1 (c40-0 / yes)
       :snt2 (c40-4 / contrast-01
                    :ARG2 (c40-6 / advertise-01
                                 :ARG1-of (c40-2 / have-quant-91
                                                 :ARG3 (c40-3 / more)
                                                 :mod (c40-5 / just))
                                 :direction (c40-7 / down))))

# ::snt you can't scroll up/down or glide up/down?
# ::tokens ["you", "ca", "n't", "scroll", "up", "/", "down", "or", "glide", "up", "/", "down", "?"]
# ::lemmas ["you", "can", "not", "scroll", "up", "/", "down", "or", "glide", "up", "/", "down", "?"]
(c41-4 / possible-01
       :ARG1 (c41-0 / or
                    :op1 (c41-3 / scroll-01
                                :ARG0 (c41-2 / you)
                                :direction (c41-1 / slash
                                                  :op1 (c41-8 / up-02)
                                                  :op2 (c41-7 / down-03)))
                    :op2 (c41-6 / glide-01
                                :ARG0 c41-2
                                :direction (c41-9 / slash
                                                  :op1 c41-8
                                                  :op2 c41-7)))
       :polarity (c41-5 / amr-unknown)
       :polarity -)

# ::snt This is all there is on the page from the link.
# ::tokens ["This", "is", "all", "there", "is", "on", "the", "page", "from", "the", "link", "."]
# ::lemmas ["this", "be", "all", "there", "be", "on", "the", "page", "from", "the", "link", "."]
(c42-0 / be-located-at-91
       :ARG1 (c42-1 / all
                    :domain (c42-4 / this))
       :ARG2 (c42-2 / page
                    :location-of (c42-3 / link)))

# ::snt screencap?
# ::tokens ["screencap", "?"]
# ::lemmas ["screencap", "?"]
(c45-1 / screencap
       :polarity (c45-0 / amr-unknown))

# ::snt No. There's just a lot of sponsored content and a description of the voting. Not anywhere to vote. Weird.
# ::tokens ["No", ".", "There", "'s", "just", "a", "lot", "of", "sponsored", "content", "and", "a", "description", "of", "the", "voting", ".", "Not", "anywhere", "to", "vote", ".", "Weird", "."]
# ::lemmas ["no", ".", "there", "be", "just", "a", "lot", "of", "sponsor", "content", "and", "a", "description", "of", "the", "voting", ".", "not", "anywhere", "to", "vote", ".", "weird", "."]
(c46-1 / multi-sentence
       :snt1 (c46-0 / no)
       :snt2 (c46-10 / and
                     :op1 (c46-5 / content
                                 :ARG1-of (c46-2 / sponsor-01)
                                 :quant (c46-4 / lot)
                                 :mod (c46-8 / just))
                     :op2 (c46-11 / describe-01
                                  :ARG1 (c46-3 / vote-01)))
       :snt3 (c46-9 / anywhere
                    :purpose (c46-6 / vote-01)
                    :polarity -)
       :snt4 (c46-7 / weird))

# ::snt click on the link and you'll see it
# ::tokens ["click", "on", "the", "link", "and", "you", "'ll", "see", "it"]
# ::lemmas ["click", "on", "the", "link", "and", "you", "'ll", "see", "it"]
(c47-3 / see-01
       :ARG0 (c47-1 / you)
       :ARG1 (c47-2 / link)
       :condition (c47-0 / click-01
                         :ARG0 c47-1
                         :ARG1 c47-2
                         :mode imperative))

# ::snt yay good!
# ::tokens ["yay", "good", "!"]
# ::lemmas ["yay", "good", "!"]
(c48-0 / good-02
       :mod (c48-1 / yay))

# ::snt Wait! Found it, all is god lol
# ::tokens ["Wait", "!", "Found", "it", ",", "all", "is", "god", "lol"]
# ::lemmas ["wait", "!", "find", "it", ",", "all", "be", "god", "lol"]
(c49-2 / multi-sentence
       :snt1 (c49-7 / wait-01
                    :ARG1 (c49-1 / you)
                    :mode imperative)
       :snt2 (c49-0 / find-01
                    :ARG1 (c49-9 / it)
                    :ARG1-of (c49-8 / cause-01
                                    :ARG0 (c49-5 / person
                                                 :name (c49-3 / name
                                                              :op1 "God")
                                                 :domain (c49-10 / all)
                                                 :ARG2-of (c49-6 / laugh-01
                                                                 :ARG0 (c49-4 / i)
                                                                 :manner (c49-11 / loud)
                                                                 :mode expressive)))))

# ::snt Where do I vote?
# ::tokens ["Where", "do", "I", "vote", "?"]
# ::lemmas ["where", "do", "i", "vote", "?"]
(c50-0 / vote-01
       :ARG0 (c50-1 / i)
       :location (c50-2 / amr-unknown))
