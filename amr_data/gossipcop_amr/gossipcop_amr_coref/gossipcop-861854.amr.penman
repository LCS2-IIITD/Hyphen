# ::snt Actually
# ::tokens ["Actually"]
# ::lemmas ["actually"]
(c1-0 / actual-02)

# ::snt Why don't they report with something like "Man's Hat Blows Off In Wind" Jesus H Jackson who's bothered! Get a freakin life
# ::tokens ["Why", "do", "n't", "they", "report", "with", "something", "like", "\"", "Man", "'s", "Hat", "Blows", "Off", "In", "Wind", "\"", "Jesus", "H", "Jackson", "who", "'s", "bothered", "!", "Get", "a", "freakin", "life"]
# ::lemmas ["why", "do", "not", "they", "report", "with", "something", "like", "\"", "man", "'s", "Hat", "blow", "off", "in", "Wind", "\"", "Jesus", "H", "Jackson", "who", "be", "bother", "!", "get", "a", "freakin", "life"]
(c3-4 / multi-sentence
      :snt1 (c3-11 / cause-01
                   :ARG0 (c3-7 / amr-unknown)
                   :ARG1 (c3-6 / report-01
                               :ARG0 (c3-13 / they)
                               :manner (c3-5 / something
                                             :ARG1-of (c3-15 / resemble-01
                                                             :ARG2 (c3-2 / blow-08
                                                                         :ARG1 (c3-8 / hat
                                                                                     :poss (c3-9 / man))
                                                                         :ARG2 (c3-0 / off)
                                                                         :location (c3-12 / wind))))
                               :polarity -))
      :snt2 (c3-14 / get-01
                   :ARG0 (c3-3 / you)
                   :ARG1 (c3-10 / life
                                :mod (c3-1 / freak))
                   :mode imperative))

# ::snt Ya alll are gonna report this crap while your at it make sure to see and do somthing Strong and goood
# ::tokens ["Ya", "alll", "are", "gon", "na", "report", "this", "crap", "while", "your", "at", "it", "make", "sure", "to", "see", "and", "do", "somthing", "Strong", "and", "goood"]
# ::lemmas ["ya", "alll", "be", "going", "to", "report", "this", "crap", "while", "your", "at", "it", "make", "sure", "to", "see", "and", "do", "somthe", "Strong", "and", "goood"]
(c4-5 / report-01
      :ARG0 (c4-2 / you
                  :mod (c4-6 / all))
      :ARG1 (c4-9 / crap
                  :mod (c4-11 / this))
      :time (c4-1 / be-located-at-91
                  :ARG1 c4-2
                  :ARG2 (c4-10 / it))
      :purpose (c4-7 / ensure-01
                     :ARG0 c4-2
                     :ARG1 (c4-12 / and
                                  :op1 (c4-4 / see-01
                                             :ARG0 c4-2
                                             :ARG1 (c4-13 / thing
                                                          :ARG1-of (c4-0 / strong-02)))
                                  :op2 (c4-3 / go-02
                                             :ARG0 c4-2
                                             :ARG4 (c4-8 / home)))))

# ::snt this just brings me joy because i love him so much and i think im almost proud
# ::tokens ["this", "just", "brings", "me", "joy", "because", "i", "love", "him", "so", "much", "and", "i", "think", "i", "m", "almost", "proud"]
# ::lemmas ["this", "just", "bring", "i", "joy", "because", "i", "love", "he", "so", "much", "and", "i", "think", "i", "m", "almost", "proud"]
(c5-6 / cause-01
      :ARG0 (c5-9 / and
                  :op1 (c5-4 / love-01
                             :ARG0 (c5-8 / i)
                             :ARG1 (c5-3 / he)
                             :degree (c5-1 / much
                                           :degree (c5-2 / so)))
                  :op2 (c5-7 / think-01
                             :ARG0 c5-8
                             :ARG1 (c5-5 / pride-01
                                         :ARG0 c5-8
                                         :mod (c5-10 / almost))))
      :ARG1 (c5-0 / bring-01
                  :ARG0 (c5-13 / this)
                  :ARG1 (c5-11 / joy)
                  :ARG2 c5-8
                  :mod (c5-12 / just)))

# ::snt lmao love
# ::tokens ["lmao", "love"]
# ::lemmas ["lmao", "love"]
(c7-1 / love-01
      :ARG1-of (c7-4 / laugh-01
                     :ARG0 (c7-2 / i
                                 :part (c7-3 / ass))
                     :manner (c7-0 / loud)))

# ::snt Not Surprising
# ::tokens ["Not", "Surprising"]
# ::lemmas ["not", "surprise"]
(c8-0 / surprise-01
      :polarity -)

# ::snt Your news show said he was detained that's not arrested
# ::tokens ["Your", "news", "show", "said", "he", "was", "detained", "that", "'s", "not", "arrested"]
# ::lemmas ["your", "news", "show", "say", "he", "be", "detain", "that", "be", "not", "arrest"]
(c9-3 / say-01
      :ARG0 (c9-0 / show-04
                  :ARG0 (c9-1 / you)
                  :ARG1 (c9-2 / news))
      :ARG1 (c9-6 / detain-01
                  :ARG1 (c9-4 / he
                              :ARG1-of (c9-5 / arrest-01
                                             :polarity -))))

# ::snt If he was walking, what's the problem....
# ::tokens ["If", "he", "was", "walking", ",", "what", "'s", "the", "problem", "...."]
# ::lemmas ["if", "he", "be", "walk", ",", "what", "be", "the", "problem", "...."]
(c10-2 / problem
       :domain (c10-3 / amr-unknown)
       :condition (c10-0 / walk-01
                         :ARG0 (c10-1 / he)))

# ::snt who is he
# ::tokens ["who", "is", "he"]
# ::lemmas ["who", "be", "he"]
(c11-0 / he
       :domain (c11-1 / amr-unknown))

# ::snt Come to in miles. We do that /7 and its legal
# ::tokens ["Come", "to", "in", "miles", ".", "We", "do", "that", "/7", "and", "its", "legal"]
# ::lemmas ["come", "to", "in", "mile", ".", "we", "do", "that", "/7", "and", "its", "legal"]
(c12-0 / multi-sentence
       :snt1 (c12-5 / come-01
                    :ARG4 (c12-10 / distance-quantity
                                  :unit (c12-2 / mile)
                                  :quant 1))
       :snt2 (c12-9 / and
                    :op1 (c12-6 / do-02
                                :ARG0 (c12-7 / we)
                                :ARG1 (c12-8 / that)
                                :frequency (c12-1 / rate-entity-91
                                                  :ARG2 (c12-11 / temporal-quantity
                                                                :unit (c12-4 / week)
                                                                :quant 1)
                                                  :ARG1 7))
                    :op2 (c12-3 / legal-02
                                :ARG1 c12-6)))

# ::snt Stupid!
# ::tokens ["Stupid", "!"]
# ::lemmas ["Stupid", "!"]
(c13-0 / stupid)

# ::snt I believe I speak for America when I say, who?
# ::tokens ["I", "believe", "I", "speak", "for", "America", "when", "I", "say", ",", "who", "?"]
# ::lemmas ["i", "believe", "i", "speak", "for", "America", "when", "i", "say", ",", "who", "?"]
(c14-1 / believe-01
       :ARG0 (c14-5 / i)
       :ARG1 (c14-3 / speak-01
                    :ARG0 c14-5
                    :ARG2 (c14-4 / country
                                 :name (c14-2 / name
                                              :op1 "America")))
       :time (c14-0 / say-01
                    :ARG0 c14-5
                    :ARG1 (c14-6 / amr-unknown)))

# ::snt Who??
# ::tokens ["Who", "?", "?"]
# ::lemmas ["who", "?", "?"]
(c15-0 / amr-unknown)

# ::snt LETS THANK GOD HE WAS NOT DRVING
# ::tokens ["LETS", "THANK", "GOD", "HE", "WAS", "NOT", "DRVING"]
# ::lemmas ["lets", "thank", "GOD", "he", "be", "not", "drve"]
(c16-3 / thank-01
       :ARG1 (c16-0 / god)
       :ARG2 (c16-1 / drive-01
                    :ARG0 (c16-2 / he)
                    :polarity -))

# ::snt Cops are dicks
# ::tokens ["Cops", "are", "dicks"]
# ::lemmas ["cop", "be", "dick"]
(c18-0 / dick
       :domain (c18-1 / cop))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c19-0 / amr-unknown)

# ::snt Good that's life now watch more important
# ::tokens ["Good", "that", "'s", "life", "now", "watch", "more", "important"]
# ::lemmas ["good", "that", "be", "life", "now", "watch", "more", "important"]
(c20-5 / watch-01
       :ARG0 (c20-0 / you)
       :ARG1 (c20-3 / have-degree-91
                    :ARG1 (c20-4 / life
                                 :domain (c20-7 / that))
                    :ARG2 (c20-6 / important-01
                                 :ARG1 c20-4)
                    :ARG3 (c20-1 / more))
       :time (c20-2 / now)
       :mode imperative)

# ::snt Yeah sure whole fuckin Europe has drunken dirtbags running around like idiots,act like a fucking decent human being
# ::tokens ["Yeah", "sure", "whole", "fuckin", "Europe", "has", "drunken", "dirtbags", "running", "around", "like", "idiots", ",", "act", "like", "a", "fucking", "decent", "human", "being"]
# ::lemmas ["yeah", "sure", "whole", "fuckin", "Europe", "have", "drunken", "dirtbag", "run", "around", "like", "idiot", ",", "act", "like", "a", "fucking", "decent", "human", "being"]
(c21-3 / sure-02
       :ARG1 (c21-12 / and
                     :op1 (c21-4 / run-02
                                 :ARG0 (c21-14 / dirtbag
                                               :mod (c21-9 / drunken))
                                 :ARG1 (c21-11 / around)
                                 :manner (c21-15 / resemble-01
                                                 :ARG1 c21-14
                                                 :ARG2 (c21-13 / idiot)))
                     :op2 (c21-10 / act-01
                                  :ARG0 c21-14
                                  :ARG1 (c21-7 / resemble-01
                                               :ARG1 c21-14
                                               :ARG2 (c21-1 / being
                                                            :mod (c21-5 / human)
                                                            :mod (c21-6 / decent)
                                                            :mod (c21-0 / fucking)))))
       :mod (c21-2 / yeah)
       :mod (c21-8 / whole))

# ::snt Gente qual esse pas? Eu ser preso todos os finais de semana
# ::tokens ["Gente", "qual", "esse", "pas", "?", "Eu", "ser", "preso", "todos", "os", "finais", "de", "semana"]
# ::lemmas ["gente", "qual", "esse", "pas", "?", "Eu", "ser", "preso", "todo", "os", "finais", "de", "semana"]
(c22-2 / multi-sentence
       :snt1 (c22-7 / gente
                    :mod (c22-5 / qual))
       :snt2 (c22-4 / cause-01
                    :ARG0 (c22-6 / amr-unknown)
                    :ARG1 (c22-0 / obligate-01
                                 :ARG1 (c22-8 / dodos
                                              :mod (c22-1 / finais
                                                          :mod (c22-3 / semana))
                                              :ARG2-of c22-0))))

# ::snt Hahahahahaha
# ::tokens ["Hahahahahaha"]
# ::lemmas ["Hahahahahaha"]
(c23-0 / haha
       :mode expressive)
