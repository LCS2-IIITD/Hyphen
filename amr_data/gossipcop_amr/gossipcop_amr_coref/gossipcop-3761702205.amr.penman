# ::snt Life skills
# ::tokens ["Life", "skills"]
# ::lemmas ["life", "skill"]
(c1-1 / skill
      :topic (c1-0 / life))

# ::snt so far i learned to like coronas
# ::tokens ["so", "far", "i", "learned", "to", "like", "coronas"]
# ::lemmas ["so", "far", "i", "learn", "to", "like", "corona"]
(c2-1 / learn-01
      :ARG0 (c2-3 / i)
      :ARG1 (c2-4 / like-01
                  :ARG0 c2-3
                  :ARG1 (c2-2 / coronas))
      :time (c2-0 / so-far))

# ::snt Yeah you should know this, what are they teaching you over there ? How to tie your shoes? God damn smh
# ::tokens ["Yeah", "you", "should", "know", "this", ",", "what", "are", "they", "teaching", "you", "over", "there", "?", "How", "to", "tie", "your", "shoes", "?", "God", "damn", "smh"]
# ::lemmas ["yeah", "you", "should", "know", "this", ",", "what", "be", "they", "teach", "you", "over", "there", "?", "how", "to", "tie", "your", "shoe", "?", "God", "damn", "smh"]
(c3-12 / multi-sentence
       :snt1 (c3-16 / recommend-01
                    :ARG1 (c3-7 / know-01
                                :ARG0 (c3-6 / you)
                                :ARG1 (c3-10 / this))
                    :mod (c3-11 / yeah
                                :mode expressive))
       :snt2 (c3-13 / teach-01
                    :ARG0 (c3-18 / they)
                    :ARG1 (c3-8 / amr-unknown)
                    :ARG2 (c3-3 / you)
                    :location (c3-4 / over
                                    :mod (c3-1 / there)))
       :snt3 (c3-9 / thing
                   :manner-of (c3-2 / tie-01
                                    :ARG1 (c3-0 / shoe
                                                :poss (c3-15 / you))))
       :snt4 (c3-5 / smh
                   :mod (c3-19 / damn
                               :mode expressive)
                   :mod (c3-17 / person
                               :name (c3-14 / name
                                            :op1 "God"))
                   :mode expressive))

# ::snt sorry im clearly a crackhead, how did i get into university
# ::tokens ["sorry", "i", "m", "clearly", "a", "crackhead", ",", "how", "did", "i", "get", "into", "university"]
# ::lemmas ["sorry", "i", "m", "clearly", "a", "crackhead", ",", "how", "do", "i", "get", "into", "university"]
(c4-3 / and
      :op1 (c4-0 / sorry-01
                 :ARG1 (c4-2 / i)
                 :ARG2 (c4-1 / crackhead
                             :domain c4-2
                             :ARG1-of (c4-7 / clear-06)))
      :op2 (c4-4 / get-05
                 :ARG1 c4-2
                 :ARG2 (c4-6 / university)
                 :manner (c4-5 / amr-unknown)))

# ::snt Jelena??
# ::tokens ["Jelena", "?", "?"]
# ::lemmas ["Jelena", "?", "?"]
(c5-1 / person
      :polarity (c5-2 / amr-unknown)
      :name (c5-0 / name
                  :op1 "Jelena"))

# ::snt Where is the a coming from???
# ::tokens ["Where", "is", "the", "a", "coming", "from", "?", "?", "?"]
# ::lemmas ["where", "be", "the", "a", "coming", "from", "?", "?", "?"]
(c6-0 / come-03
      :ARG1 (c6-1 / amr-unknown))

# ::snt jalena forever &lt;3
# ::tokens ["jalena", "forever", "&", "lt;3"]
# ::lemmas ["jalena", "forever", "&", "lt;3"]
(c7-4 / and
      :op1 (c7-0 / forever)
      :op2 (c7-2 / lt;3)
      :op3 (c7-3 / person
                 :name (c7-1 / name
                             :op1 "jalena")))

# ::snt THIS THREAD HAHHAHAHAHA
# ::tokens ["THIS", "THREAD", "HAHHAHAHAHA"]
# ::lemmas ["this", "THREAD", "hahhahahaha"]
(c8-2 / thread-01
      :ARG0 (c8-0 / you)
      :ARG1 (c8-1 / this)
      :mode imperative)

# ::snt who else was together for years and broke up a million times but KEPT getting back together? no one. rip jalena &lt;3
# ::tokens ["who", "else", "was", "together", "for", "years", "and", "broke", "up", "a", "million", "times", "but", "KEPT", "getting", "back", "together", "?", "no", "one", ".", "rip", "jalena", "&", "lt;3"]
# ::lemmas ["who", "else", "be", "together", "for", "years", "and", "break", "up", "a", "million", "time", "but", "KEPT", "get", "back", "together", "?", "no", "one", ".", "rip", "jalena", "&", "lt;3"]
(c10-9 / multi-sentence
       :snt1 (c10-12 / contrast-01
                     :ARG1 (c10-4 / and
                                  :op1 (c10-5 / together
                                              :domain (c10-3 / amr-unknown
                                                             :mod (c10-17 / else))
                                              :duration (c10-2 / multiple
                                                               :op1 (c10-14 / temporal-quantity
                                                                            :unit (c10-1 / year)
                                                                            :quant 1)))
                                  :op2 (c10-8 / break-up-08
                                              :ARG1 c10-3
                                              :frequency 1000000))
                     :ARG2 (c10-6 / get-back-10
                                  :ARG1 (c10-18 / person
                                                :name (c10-15 / name
                                                              :op1 "KEPT"))
                                  :ARG2 (c10-20 / together)))
       :snt2 (c10-11 / no-one)
       :snt3 (c10-16 / rip-01
                     :ARG0 (c10-7 / you)
                     :ARG1 c10-4
                     :op1 (c10-10 / person
                                  :name (c10-19 / name
                                                :op1 "Jalena"))
                     :op2 (c10-0 / person
                                 :name (c10-13 / name
                                               :op1 "lt;3"))
                     :mode imperative))

# ::snt but they went through so much and tried for so long just for them to not even end up together, sad
# ::tokens ["but", "they", "went", "through", "so", "much", "and", "tried", "for", "so", "long", "just", "for", "them", "to", "not", "even", "end", "up", "together", ",", "sad"]
# ::lemmas ["but", "they", "go", "through", "so", "much", "and", "try", "for", "so", "long", "just", "for", "they", "to", "not", "even", "end", "up", "together", ",", "sad"]
(c11-6 / contrast-01
       :ARG2 (c11-3 / and
                    :op1 (c11-10 / go-through-20
                                 :ARG0 (c11-9 / they)
                                 :ARG1 (c11-1 / much
                                              :degree (c11-2 / so)))
                    :op2 (c11-12 / try-01
                                 :ARG0 c11-9
                                 :ARG1 (c11-4 / end-up-03
                                              :ARG1 c11-9
                                              :ARG2 (c11-8 / together)
                                              :mod (c11-11 / even)
                                              :polarity -)
                                 :ARG1-of (c11-5 / long-03
                                                 :degree (c11-0 / so))
                                 :mod (c11-7 / just))
                    :ARG0-of (c11-13 / sad-02)))

# ::snt Nehum nem curto musica
# ::tokens ["Nehum", "nem", "curto", "musica"]
# ::lemmas ["Nehum", "nem", "curto", "musica"]
(c12-1 / musica
       :name (c12-0 / name
                    :op1 "Nehum"
                    :op2 "Nem"
                    :op3 "Curto"))

# ::snt Please check out our Justin Bieber Cover
# ::tokens ["Please", "check", "out", "our", "Justin", "Bieber", "Cover"]
# ::lemmas ["please", "check", "out", "our", "Justin", "Bieber", "Cover"]
(c13-3 / check-out-05
       :ARG0 (c13-0 / you)
       :ARG1 (c13-5 / cover-03
                    :ARG0 (c13-4 / we)
                    :ARG1 (c13-2 / person
                                 :name (c13-1 / name
                                              :op1 "Justin"
                                              :op2 "Bieber")))
       :mode imperative
       :polite +)

# ::snt Sdv
# ::tokens ["Sdv"]
# ::lemmas ["sdv"]
(c14-1 / person
       :name (c14-0 / name
                    :op1 "Sdv"))

# ::snt Lo peor es que el flaco en el sueo tena una pared llena de peluches y en el medio el cuchillo ahre wtf AJJAJAAJAAJ
# ::tokens ["Lo", "peor", "es", "que", "el", "flaco", "en", "el", "sueo", "tena", "una", "pared", "llena", "de", "peluches", "y", "en", "el", "medio", "el", "cuchillo", "ahre", "wtf", "AJJAJAAJAAJ"]
# ::lemmas ["Lo", "peor", "es", "que", "el", "flaco", "en", "el", "sueo", "tena", "una", "pare", "llena", "de", "peluches", "y", "en", "el", "medio", "el", "cuchillo", "ahre", "wtf", "AJJAJAAJAAJ"]
(c15-10 / multi-sentence
        :snt1 (c15-3 / have-polarity-91
                     :mod (c15-1 / lo)
                     :ARG2 -)
        :snt2 (c15-6 / and
                     :op1 (c15-7 / tena
                                 :ARG0 (c15-15 / flaco
                                               :mod (c15-17 / el))
                                 :ARG1 (c15-9 / llena
                                              :mod (c15-18 / pared))
                                 :ARG1-of (c15-4 / mean-01
                                                 :ARG2 (c15-11 / peluches)))
                     :op2 (c15-8 / el
                                 :mod (c15-13 / cuchillo)
                                 :location (c15-14 / medio
                                                   :mod (c15-12 / el))
                                 :mod (c15-5 / ah
                                             :mode expressive)))
        :snt3 (c15-0 / say-01
                     :ARG0 (c15-20 / i)
                     :ARG1 (c15-19 / fuck
                                   :mode expressive)
                     :ARG2 (c15-2 / person
                                  :name (c15-16 / name
                                                :op1 "AJJAJAAJAAJ"))))

# ::snt Theyre literally being pimped by the majors
# ::tokens ["They", "re", "literally", "being", "pimped", "by", "the", "majors"]
# ::lemmas ["they", "re", "literally", "be", "pimp", "by", "the", "major"]
(c16-3 / pimp-00
       :ARG0 (c16-1 / person
                    :ARG0-of (c16-2 / have-org-role-91
                                    :ARG2 (c16-0 / major)))
       :ARG1 (c16-5 / they)
       :mod (c16-4 / literal))

# ::snt troppo
# ::tokens ["troppo"]
# ::lemmas ["troppo"]
(c17-1 / person
       :name (c17-0 / name
                    :op1 "troppo"))

# ::snt Lovatics
# ::tokens ["Lovatics"]
# ::lemmas ["lovatic"]
(c23-1 / person
       :name (c23-0 / name
                    :op1 "Lovatics"))

# ::snt Selena, zaynnn
# ::tokens ["Selena", ",", "zaynnn"]
# ::lemmas ["Selena", ",", "zaynnn"]
(c24-1 / say-01
       :ARG0 (c24-4 / i)
       :ARG2 (c24-3 / person
                    :name (c24-0 / name
                                 :op1 "Selena"))
       :mod (c24-2 / zaynn
                   :mode expressive))

# ::snt Sdv pls?
# ::tokens ["Sdv", "pls", "?"]
# ::lemmas ["sdv", "pls", "?"]
(c25-1 / publication
       :name (c25-0 / name
                    :op1 "Sdv"
                    :op2 "pls")
       :polarity (c25-2 / amr-unknown))

# ::snt vamo vamo k
# ::tokens ["vamo", "vamo", "k"]
# ::lemmas ["vamo", "vamo", "k"]
(c26-2 / versus
       :op1 (c26-1 / vamo)
       :op2 (c26-0 / vamo)
       :op3 (c26-3 / k))

# ::snt Sdv
# ::tokens ["Sdv"]
# ::lemmas ["sdv"]
(c27-1 / person
       :name (c27-0 / name
                    :op1 "Sdv"))

# ::snt Sdv?
# ::tokens ["Sdv", "?"]
# ::lemmas ["Sdv", "?"]
(c28-1 / person
       :name (c28-0 / name
                    :op1 "Sdv")
       :polarity (c28-2 / amr-unknown))

# ::snt sdv
# ::tokens ["sdv"]
# ::lemmas ["sdv"]
(c29-1 / person
       :name (c29-0 / name
                    :op1 "SDV"))

# ::snt Gente me segue a que sigo de volta
# ::tokens ["Gente", "me", "segue", "a", "que", "sigo", "de", "volta"]
# ::lemmas ["gente", "i", "segue", "a", "que", "sigo", "de", "volta"]
(c30-2 / say-01
       :ARG0 (c30-5 / i)
       :ARG1 (c30-0 / segue-01
                    :ARG0 (c30-1 / you)
                    :ARG1 (c30-6 / amr-unknown)
                    :ARG2 (c30-4 / converse-01
                                 :ARG0 c30-1
                                 :ARG1-of (c30-3 / possible-01))
                    :mode imperative)
       :ARG2 c30-1)

# ::snt RT bts
# ::tokens ["RT", "bts"]
# ::lemmas ["RT", "bts"]
(c31-1 / publication
       :name (c31-0 / name
                    :op1 "RT"))

# ::snt S vamos
# ::tokens ["S", "vamos"]
# ::lemmas ["s", "vamo"]
(c32-0 / vamos
       :mode expressive)

# ::snt Justin e Demi cara
# ::tokens ["Justin", "e", "Demi", "cara"]
# ::lemmas ["Justin", "e", "Demi", "cara"]
(c33-4 / and
       :op1 (c33-3 / person
                   :name (c33-0 / name
                                :op1 "Justin"))
       :op2 (c33-1 / person
                   :name (c33-2 / name
                                :op1 "Demi"
                                :op2 "Cara")))

# ::snt Me la pasas? Pliss
# ::tokens ["Me", "la", "pasas", "?", "Pliss"]
# ::lemmas ["i", "la", "pasa", "?", "pliss"]
(c34-2 / multi-sentence
       :snt1 (c34-1 / me
                    :polarity (c34-3 / amr-unknown))
       :snt2 (c34-0 / pliss))

# ::snt Yo por favor
# ::tokens ["Yo", "por", "favor"]
# ::lemmas ["yo", "por", "favor"]
(c35-0 / favor-01
       :ARG1 (c35-1 / you))

# ::snt Pasala
# ::tokens ["Pasala"]
# ::lemmas ["pasala"]
(c36-1 / person
       :name (c36-0 / name
                    :op1 "Pasala"))

# ::snt Yo quiero
# ::tokens ["Yo", "quiero"]
# ::lemmas ["yo", "quiero"]
(c37-0 / quiero
       :mode expressive)

# ::snt OmgYo la quiero te mando mensaje privado?
# ::tokens ["OmgYo", "la", "quiero", "te", "mando", "mensaje", "privado", "?"]
# ::lemmas ["omgyo", "la", "quiero", "te", "mando", "mensaje", "privado", "?"]
(c38-2 / multi-sentence
       :snt1 (c38-0 / omg
                    :mode expressive)
       :snt2 (c38-6 / quiero
                    :polarity (c38-7 / amr-unknown)
                    :ARG0-of (c38-5 / cause-01
                                    :ARG1 (c38-3 / mando-00
                                                 :ARG0 (c38-1 / you)
                                                 :ARG1 (c38-4 / privado
                                                              :mod (c38-8 / mensaje))))))

# ::snt Yoooo por whats
# ::tokens ["Yoooo", "por", "what", "s"]
# ::lemmas ["yoooo", "por", "what", "s"]
(c39-1 / por
       :op1 (c39-2 / amr-unknown)
       :mod (c39-0 / yoooo
                   :mode expressive))

# ::snt Jajaja haba ledo uni-familiar y he pensado que estaran pensando en comprarse un adosado en las afueras
# ::tokens ["Jajaja", "haba", "ledo", "uni", "-", "familiar", "y", "he", "pensado", "que", "estaran", "pensando", "en", "comprarse", "un", "adosado", "en", "las", "afueras"]
# ::lemmas ["Jajaja", "haba", "ledo", "uni", "-", "familiar", "y", "he", "pensado", "que", "estaran", "pensando", "en", "comprarse", "un", "adosado", "en", "las", "afueras"]
(c40-10 / and
        :op1 (c40-6 / lead-01
                    :ARG0 (c40-5 / person
                                 :name (c40-2 / name
                                              :op1 "Jajaja"))
                    :ARG1 (c40-0 / familiarize-01
                                 :ARG2 c40-5
                                 :polarity -))
        :op2 (c40-3 / pensado
                    :ARG0 c40-5
                    :ARG1 (c40-4 / estaran-01
                                 :ARG0 c40-5
                                 :ARG1 (c40-12 / pensando)
                                 :ARG1-of (c40-7 / cause-01
                                                 :ARG0 (c40-13 / comprarse-01
                                                               :ARG0 c40-5
                                                               :ARG1 (c40-9 / adosado
                                                                            :mod (c40-1 / un))
                                                               :location (c40-8 / afueras
                                                                                :mod (c40-11 / las)))))))

# ::snt yo tambin la quiero
# ::tokens ["yo", "tambin", "la", "quiero"]
# ::lemmas ["yo", "tambin", "la", "quiero"]
(c41-1 / tambin-la-quiero
       :mod (c41-0 / yo)
       :mode expressive)

# ::snt me la puedes enviar?
# ::tokens ["me", "la", "puedes", "enviar", "?"]
# ::lemmas ["i", "la", "puedes", "enviar", "?"]
(c42-2 / permit-01
       :ARG0 (c42-0 / you)
       :ARG1 (c42-1 / enviar-00
                    :ARG1 (c42-3 / i))
       :polarity (c42-4 / amr-unknown))

# ::snt Lo busque por SoundCloud y no me sale!!
# ::tokens ["Lo", "busque", "por", "SoundCloud", "y", "no", "me", "sale", "!", "!"]
# ::lemmas ["Lo", "busque", "por", "SoundCloud", "y", "no", "me", "sale", "!", "!"]
(c43-6 / and
       :op1 (c43-3 / lo
                   :mod (c43-0 / busque)
                   :prep-in (c43-4 / company
                                   :name (c43-1 / name
                                                :op1 "SoundCloud"))
                   :mode expressive)
       :op2 (c43-2 / sell-01
                   :ARG0 (c43-5 / i)
                   :polarity -))

# ::snt yoo aunque cree que ya la escucha
# ::tokens ["yoo", "aunque", "cree", "que", "ya", "la", "escucha"]
# ::lemmas ["yoo", "aunque", "cree", "que", "ya", "la", "escucha"]
(c44-1 / creece-01
       :ARG0 (c44-3 / you)
       :ARG1 (c44-2 / escucha)
       :mod (c44-0 / yoo
                   :mode expressive))

# ::snt sdv?
# ::tokens ["sdv", "?"]
# ::lemmas ["sdv", "?"]
(c45-2 / thing
       :polarity (c45-0 / amr-unknown)
       :name (c45-1 / name
                    :op1 "SDV"))

# ::snt Kskskkssksk
# ::tokens ["Kskskkssksk"]
# ::lemmas ["Kskskkssksk"]
(c46-1 / person
       :name (c46-0 / name
                    :op1 "Kskskkssksk"))

# ::snt Gracias!
# ::tokens ["Gracias", "!"]
# ::lemmas ["Gracias", "!"]
(c47-0 / gracias
       :mode expressive)

# ::snt Como se llama el tema? Est en su YouTube?
# ::tokens ["Como", "se", "llama", "el", "tema", "?", "Est", "en", "su", "YouTube", "?"]
# ::lemmas ["Como", "se", "llama", "el", "tema", "?", "Est", "en", "su", "YouTube", "?"]
(c48-1 / multi-sentence
       :snt1 (c48-6 / truth-value
                    :polarity-of (c48-4 / llama-01
                                        :ARG0 (c48-0 / you)
                                        :ARG1 (c48-7 / tema)))
       :snt2 (c48-3 / Est-02
                    :ARG1 (c48-8 / you)
                    :ARG2 (c48-5 / publication
                                 :name (c48-2 / name
                                              :op1 "YouTube")
                                 :poss c48-8)))

# ::snt dump Hailey she's a man
# ::tokens ["dump", "Hailey", "she", "'s", "a", "man"]
# ::lemmas ["dump", "Hailey", "she", "be", "a", "man"]
(c49-4 / dump-01
       :ARG1 (c49-2 / person
                    :name (c49-1 / name
                                 :op1 "Hailey"))
       :ARG1-of (c49-3 / cause-01
                       :ARG0 (c49-0 / man
                                    :domain c49-2)))

# ::snt Mentira que o treco chato
# ::tokens ["Mentira", "que", "o", "treco", "chato"]
# ::lemmas ["Mentira", "que", "o", "treco", "chato"]
(c50-3 / que
       :op1 (c50-2 / chato
                   :mod (c50-4 / treco))
       :mod (c50-1 / person
                   :name (c50-0 / name
                                :op1 "Mentira")))
