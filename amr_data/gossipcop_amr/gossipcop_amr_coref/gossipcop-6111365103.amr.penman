# ::snt It used to be like that for me, then I did an unknown amount of liquid LSD in my left eye and haven't been the same since. Wait. Yeah, nvm. It's exactly like that.
# ::tokens ["It", "used", "to", "be", "like", "that", "for", "me", ",", "then", "I", "did", "an", "unknown", "amount", "of", "liquid", "LSD", "in", "my", "left", "eye", "and", "have", "n't", "been", "the", "same", "since", ".", "Wait", ".", "Yeah", ",", "nvm", ".", "It", "'s", "exactly", "like", "that", "."]
# ::lemmas ["it", "use", "to", "be", "like", "that", "for", "i", ",", "then", "i", "do", "an", "unknown", "amount", "of", "liquid", "LSD", "in", "my", "left", "eye", "and", "have", "not", "be", "the", "same", "since", ".", "wait", ".", "yeah", ",", "nvm", ".", "it", "be", "exactly", "like", "that", "."]
(c1-15 / multi-sentence
       :snt1 (c1-19 / resemble-01
                    :ARG1 (c1-22 / it)
                    :ARG2 (c1-10 / that)
                    :time (c1-17 / use-03)
                    :beneficiary (c1-6 / i
                                       :part (c1-20 / eye
                                                    :ARG1-of (c1-1 / left-20))))
       :snt2 (c1-9 / and
                   :op1 (c1-24 / do-02
                               :ARG0 c1-6
                               :ARG1 (c1-0 / small-molecule
                                           :name (c1-18 / name
                                                        :op1 "LSD")
                                           :quant (c1-8 / amount
                                                        :ARG1-of (c1-7 / know-01
                                                                       :polarity -))
                                           :mod (c1-12 / liquid))
                               :time (c1-16 / then))
                   :op2 (c1-4 / same-01
                              :ARG1 c1-6
                              :time (c1-3 / since
                                          :op1 c1-24)
                              :polarity -))
       :snt3 (c1-21 / wait-01
                    :ARG1 (c1-5 / you)
                    :mode imperative)
       :snt4 (c1-11 / yeah)
       :snt5 (c1-2 / resemble-01
                   :ARG1 (c1-13 / it)
                   :ARG2 (c1-23 / that)
                   :mod (c1-14 / exact)))

# ::snt Lmaoooo
# ::tokens ["Lmaoooo"]
# ::lemmas ["Lmaoooo"]
(c2-1 / laugh-01
      :ARG0 (c2-2 / i)
      :manner (c2-0 / loud)
      :mode expressive)

# ::snt n then all of a sudden brad pitts like holy shit dude ur right
# ::tokens ["n", "then", "all", "of", "a", "sudden", "brad", "pitts", "like", "holy", "shit", "dude", "ur", "right"]
# ::lemmas ["n", "then", "all", "of", "a", "sudden", "brad", "pitt", "like", "holy", "shit", "dude", "ur", "right"]
(c3-4 / right-06
      :ARG1 (c3-2 / you)
      :ARG2 (c3-6 / pussy
                  :mod (c3-1 / brad)
                  :ARG1-of (c3-8 / resemble-01
                                 :ARG2 (c3-3 / shit
                                             :mod (c3-5 / holy)))
                  :manner (c3-0 / sudden)
                  :mod (c3-7 / all)))

# ::snt Ah yes I remember that story
# ::tokens ["Ah", "yes", "I", "remember", "that", "story"]
# ::lemmas ["ah", "yes", "i", "remember", "that", "story"]
(c5-1 / remember-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-0 / story
                  :mod (c5-2 / that))
      :mod (c5-4 / ah
                 :mode expressive))

# ::snt Yep.
# ::tokens ["Yep", "."]
# ::lemmas ["yep", "."]
(c6-0 / yep)

# ::snt Whistler?
# ::tokens ["Whistler", "?"]
# ::lemmas ["Whistler", "?"]
(c7-1 / person
      :polarity (c7-2 / amr-unknown)
      :name (c7-0 / name
                  :op1 "Whistler"))

# ::snt Really? I'm straight and I think he's dreamy.
# ::tokens ["Really", "?", "I", "'m", "straight", "and", "I", "think", "he", "'s", "dreamy", "."]
# ::lemmas ["really", "?", "i", "be", "straight", "and", "i", "think", "he", "be", "dreamy", "."]
(c8-0 / multi-sentence
      :snt1 (c8-2 / real-04
                  :polarity (c8-6 / amr-unknown))
      :snt2 (c8-5 / and
                  :op1 (c8-1 / straight-05
                             :ARG1 (c8-7 / i))
                  :op2 (c8-4 / think-01
                             :ARG0 c8-7
                             :ARG1 (c8-8 / dreamy
                                         :domain (c8-3 / he)))))

# ::snt Her reputation is tarnished for her brutal behaviour
# ::tokens ["Her", "reputation", "is", "tarnished", "for", "her", "brutal", "behaviour"]
# ::lemmas ["her", "reputation", "be", "tarnish", "for", "her", "brutal", "behaviour"]
(c9-5 / tarnish-01
      :ARG1 (c9-2 / reputation
                  :poss (c9-1 / she))
      :ARG1-of (c9-4 / cause-01
                     :ARG0 (c9-0 / behave-01
                                 :ARG0 c9-1
                                 :ARG1 (c9-3 / brutal-02))))

# ::snt I WHEEZE WHILE SENDING
# ::tokens ["I", "WHEEZE", "WHILE", "SENDING"]
# ::lemmas ["i", "wheeze", "while", "send"]
(c10-1 / wheeze-01
       :ARG0 (c10-2 / i)
       :time (c10-3 / while
                    :op1 (c10-0 / send-01
                                :ARG0 c10-2)))
