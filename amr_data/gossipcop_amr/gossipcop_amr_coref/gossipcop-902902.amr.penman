# ::snt stefan
# ::tokens ["stefan"]
# ::lemmas ["stefan"]
(c1-3 / say-01
      :ARG0 (c1-2 / i)
      :ARG2 (c1-1 / person
                  :name (c1-0 / name
                              :op1 "stefan")))

# ::snt Stefan died but still here and thats the most important news ever for !!
# ::tokens ["Stefan", "died", "but", "still", "here", "and", "that", "s", "the", "most", "important", "news", "ever", "for", "!", "!"]
# ::lemmas ["Stefan", "die", "but", "still", "here", "and", "that", "s", "the", "most", "important", "news", "ever", "for", "!", "!"]
(c2-8 / contrast-01
      :ARG1 (c2-11 / die-01
                   :ARG1 (c2-6 / person
                               :name (c2-1 / name
                                           :op1 "Stefan")))
      :ARG2 (c2-0 / be-located-at-91
                  :ARG1 (c2-5 / news
                              :ARG1-of (c2-10 / important-01
                                              :time (c2-4 / ever)
                                              :ARG2-of (c2-7 / have-degree-91
                                                             :ARG1 c2-5
                                                             :ARG3 (c2-2 / most))))
                  :ARG2 (c2-9 / here)
                  :mod (c2-3 / still)))

# ::snt show this to your wife
# ::tokens ["show", "this", "to", "your", "wife"]
# ::lemmas ["show", "this", "to", "your", "wife"]
(c3-1 / show-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-5 / this)
      :ARG2 (c3-3 / person
                  :ARG0-of (c3-2 / have-rel-role-91
                                 :ARG1 c3-0
                                 :ARG2 (c3-4 / wife)))
      :mode imperative)

# ::snt i cant its still too emosh
# ::tokens ["i", "ca", "nt", "its", "still", "too", "emosh"]
# ::lemmas ["i", "can", "not", "its", "still", "too", "emosh"]
(c4-2 / possible-01
      :ARG1 (c4-3 / they
                  :mod (c4-0 / still)
                  :ARG2-of (c4-1 / have-degree-91
                                 :ARG3 (c4-4 / too)
                                 :ARG1 c4-3))
      :polarity -)

# ::snt Wow. My eyes bled on the first watch. TMI! The second watch.... well it didnt happen
# ::tokens ["Wow", ".", "My", "eyes", "bled", "on", "the", "first", "watch", ".", "TMI", "!", "The", "second", "watch", "....", "well", "it", "did", "nt", "happen"]
# ::lemmas ["wow", ".", "my", "eye", "bleed", "on", "the", "first", "watch", ".", "TMI", "!", "the", "second", "watch", "....", "well", "it", "do", "not", "happen"]
(c5-3 / multi-sentence
      :snt1 (c5-8 / wow-01
                  :mode expressive)
      :snt2 (c5-2 / bleed-01
                  :ARG1 (c5-5 / eye
                              :part-of (c5-9 / i))
                  :time (c5-7 / watch-01
                              :ord (c5-0 / ordinal-entity
                                         :value 1)))
      :snt3 (c5-10 / thing
                   :name (c5-4 / name
                               :op1 "TMI"))
      :snt4 (c5-11 / watch-01
                   :ord (c5-1 / ordinal-entity
                              :value 2)
                   :ARG1-of (c5-6 / have-polarity-91
                                  :ARG2 -)))

# ::snt Somewhere, in Westeros, is cheering in victory; for he survived .
# ::tokens ["Somewhere", ",", "in", "Westeros", ",", "is", "cheering", "in", "victory", ";", "for", "he", "survived", "."]
# ::lemmas ["somewhere", ",", "in", "Westeros", ",", "be", "cheer", "in", "victory", ";", "for", "he", "survive", "."]
(c6-5 / cheer-02
      :ARG0 (c6-2 / somewhere)
      :ARG1 (c6-6 / win-01)
      :location (c6-4 / world-region
                      :name (c6-1 / name
                                  :op1 "Westeros"))
      :ARG1-of (c6-7 / cause-01
                     :ARG0 (c6-0 / survive-01
                                 :ARG0 (c6-3 / he))))
