# ::snt WHAT
# ::tokens ["WHAT"]
# ::lemmas ["what"]
(c1-0 / amr-unknown)

# ::snt Don't remind me....
# ::tokens ["Do", "n't", "remind", "me", "...."]
# ::lemmas ["do", "not", "remind", "i", "...."]
(c2-0 / remind-01
      :ARG0 (c2-1 / you)
      :ARG2 (c2-2 / i)
      :polarity -
      :mode imperative)

# ::snt maybe she needs a ride on the Love Bus
# ::tokens ["maybe", "she", "needs", "a", "ride", "on", "the", "Love", "Bus"]
# ::lemmas ["maybe", "she", "need", "a", "ride", "on", "the", "Love", "Bus"]
(c4-5 / possible-01
      :ARG1 (c4-1 / need-01
                  :ARG0 (c4-2 / she)
                  :ARG1 (c4-3 / ride-01
                              :ARG0 c4-2
                              :ARG1 (c4-0 / bus
                                          :name (c4-4 / name
                                                      :op1 "Love")))))

# ::snt why do we care what happens to celebs, the ugly bitch got dumped by hot guy, what's new
# ::tokens ["why", "do", "we", "care", "what", "happens", "to", "celebs", ",", "the", "ugly", "bitch", "got", "dumped", "by", "hot", "guy", ",", "what", "'s", "new"]
# ::lemmas ["why", "do", "we", "care", "what", "happen", "to", "celebs", ",", "the", "ugly", "bitch", "got", "dump", "by", "hot", "guy", ",", "what", "be", "new"]
(c5-10 / and
       :op1 (c5-5 / care-01
                  :ARG0 (c5-6 / we)
                  :ARG1 (c5-14 / celebrity)
                  :ARG1-of (c5-8 / cause-01
                                 :ARG0 (c5-9 / amr-unknown)))
       :op2 (c5-12 / dump-01
                   :ARG0 (c5-11 / guy
                                :ARG1-of (c5-4 / hot-03))
                   :ARG1 (c5-1 / bitch
                               :mod (c5-13 / ugly))
                   :ARG1-of (c5-0 / cause-01
                                  :ARG0 (c5-7 / amr-unknown)))
       :op3 (c5-2 / new-01
                  :ARG1 (c5-3 / amr-unknown)))

# ::snt lo salv o estaba todo calculado??? mmmmmm
# ::tokens ["lo", "salv", "o", "estaba", "todo", "calculado", "?", "?", "?", "mmmmmm"]
# ::lemmas ["lo", "salv", "o", "estaba", "todo", "calculado", "?", "?", "?", "mmmmmm"]
(c6-1 / multi-sentence
      :snt1 (c6-3 / laugh-01
                  :ARG0 (c6-5 / i)
                  :manner (c6-7 / loud))
      :snt2 (c6-2 / have-03
                  :ARG0 (c6-0 / you)
                  :ARG1 (c6-4 / calculator)
                  :polarity (c6-6 / amr-unknown)))

# ::snt JAJAJA igual yo sigo creyendo en lo de two-party consent que es lo que te deca anoche
# ::tokens ["JAJAJA", "igual", "yo", "sigo", "creyendo", "en", "lo", "de", "two", "-", "party", "consent", "que", "es", "lo", "que", "te", "deca", "anoche"]
# ::lemmas ["JAJAJA", "igual", "yo", "sigo", "creyendo", "en", "lo", "de", "two", "-", "party", "consent", "que", "es", "lo", "que", "te", "deca", "anoche"]
(c7-3 / say-01
      :ARG0 (c7-9 / i)
      :ARG1 (c7-7 / creyendo
                  :domain (c7-0 / you)
                  :ARG1-of (c7-13 / cause-01
                                  :ARG0 (c7-8 / consent-01
                                              :ARG0 (c7-5 / party
                                                          :quant 2)
                                              :mod (c7-6 / lo)
                                              :ARG1-of (c7-1 / mean-01
                                                             :ARG2 (c7-12 / lo
                                                                          :ARG0-of (c7-11 / decieve-01
                                                                                          :ARG1 (c7-10 / anoche)))))))
      :ARG2 (c7-2 / person
                  :name (c7-4 / name
                              :op1 "JAJAJA")))

# ::snt NO TD
# ::tokens ["NO", "TD"]
# ::lemmas ["no", "TD"]
(c8-0 / TD
      :polarity -)

# ::snt I knew it when he did the interview from Monaco he was taken aback when asked about her Orlando speech
# ::tokens ["I", "knew", "it", "when", "he", "did", "the", "interview", "from", "Monaco", "he", "was", "taken", "aback", "when", "asked", "about", "her", "Orlando", "speech"]
# ::lemmas ["i", "know", "it", "when", "he", "do", "the", "interview", "from", "Monaco", "he", "be", "take", "aback", "when", "ask", "about", "her", "Orlando", "speech"]
(c9-5 / know-01
      :ARG0 (c9-9 / i)
      :ARG1 (c9-8 / take-aback-20
                  :ARG0 (c9-10 / ask-01
                               :ARG1 (c9-2 / speak-01
                                           :ARG0 (c9-0 / she)
                                           :location (c9-7 / city
                                                           :name (c9-1 / name
                                                                       :op1 "Orlando")))
                               :ARG2 (c9-4 / he
                                           :ARG1-of c9-8))
                  :time (c9-3 / interview-01
                              :ARG1 c9-4
                              :source (c9-11 / country
                                             :name (c9-6 / name
                                                         :op1 "Monaco")))))

# ::snt omg my heart
# ::tokens ["omg", "my", "heart"]
# ::lemmas ["omg", "my", "heart"]
(c10-1 / heart
       :part-of (c10-2 / i)
       :mod (c10-0 / oh-my-god
                   :mode expressive))

# ::snt this is bullshit and so is Diane Kruger
# ::tokens ["this", "is", "bullshit", "and", "so", "is", "Diane", "Kruger"]
# ::lemmas ["this", "be", "bullshit", "and", "so", "be", "Diane", "Kruger"]
(c11-2 / and
       :op1 (c11-0 / bullshit
                   :domain (c11-5 / this))
       :op2 (c11-3 / bullshit
                   :domain (c11-4 / person
                                  :name (c11-1 / name
                                               :op1 "Diane"
                                               :op2 "Kruger"))))

# ::snt Why are you confirming it, when you don't have an official confirmation? Fuck off.
# ::tokens ["Why", "are", "you", "confirming", "it", ",", "when", "you", "do", "n't", "have", "an", "official", "confirmation", "?", "Fuck", "off", "."]
# ::lemmas ["why", "be", "you", "confirm", "it", ",", "when", "you", "do", "not", "have", "an", "official", "confirmation", "?", "fuck", "off", "."]
(c12-3 / multi-sentence
       :snt1 (c12-5 / cause-01
                    :ARG0 (c12-8 / amr-unknown)
                    :ARG1 (c12-9 / confirm-01
                                 :ARG0 (c12-2 / you)
                                 :ARG1 (c12-7 / it)
                                 :time (c12-4 / have-03
                                              :ARG0 c12-2
                                              :ARG1 (c12-6 / confirm-01
                                                           :mod (c12-0 / official))
                                              :polarity -)))
       :snt2 (c12-1 / fuck-off-03
                    :mode expressive))

# ::snt nooooooo
# ::tokens ["nooooooo"]
# ::lemmas ["nooooooo"]
(c13-0 / no)

# ::snt mi dispiace
# ::tokens ["mi", "dispiace"]
# ::lemmas ["mi", "dispiace"]
(c17-0 / dispiace-00
       :ARG0 (c17-1 / i))

# ::snt VCS TO BRINCANDO CM A MINHA CARA N
# ::tokens ["VCS", "TO", "BRINCANDO", "CM", "A", "MINHA", "CARA", "N"]
# ::lemmas ["VCS", "to", "BRINCANDO", "CM", "a", "minha", "CARA", "n"]
(c18-6 / and
       :op1 (c18-0 / be-from-91
                   :ARG2 (c18-5 / city
                                :name (c18-1 / name
                                             :op1 "Venezuela")))
       :op2 (c18-2 / be-from-91
                   :ARG2 c18-5
                   :name (c18-3 / name
                                :op1 "Benin"))
       :op3 (c18-8 / be-from-91
                   :ARG2 (c18-7 / country
                                :name (c18-4 / name
                                             :op1 "Minha"
                                             :op2 "Cara"))))

# ::snt Oh my God. No. This cannot happen. No no no. T.T
# ::tokens ["Oh", "my", "God", ".", "No", ".", "This", "can", "not", "happen", ".", "No", "no", "no", ".", "T.T"]
# ::lemmas ["oh", "my", "God", ".", "no", ".", "this", "can", "not", "happen", ".", "no", "no", "no", ".", "T.T"]
(c19-2 / multi-sentence
       :snt1 (c19-0 / oh-my-god
                    :mode expressive)
       :snt2 (c19-1 / no)
       :snt3 (c19-5 / possible-01
                    :ARG1 (c19-7 / this)
                    :polarity -)
       :snt4 (c19-4 / no)
       :snt5 (c19-3 / person
                    :name (c19-6 / name
                                 :op1 "T.T.")))

# ::snt oh my
# ::tokens ["oh", "my"]
# ::lemmas ["oh", "my"]
(c21-0 / oh-my-god
       :mode expressive)

# ::snt yeah sorry I'm an idiot my bad
# ::tokens ["yeah", "sorry", "I", "'m", "an", "idiot", "my", "bad"]
# ::lemmas ["yeah", "sorry", "i", "be", "an", "idiot", "my", "bad"]
(c22-5 / and
       :op1 (c22-2 / sorry-01
                   :ARG1 (c22-4 / idiot
                                :domain (c22-3 / i))
                   :mod (c22-1 / yeah
                               :mode expressive))
       :op2 (c22-0 / bad-07
                   :ARG1 c22-4))

# ::snt no
# ::tokens ["no"]
# ::lemmas ["no"]
(c23-0 / no)

# ::snt Oh just engaged huh
# ::tokens ["Oh", "just", "engaged", "huh"]
# ::lemmas ["oh", "just", "engage", "huh"]
(c25-1 / engage-01
       :mod (c25-2 / just)
       :ARG1-of (c25-0 / request-confirmation-91))

# ::snt Whaaaat nooooooo
# ::tokens ["Whaaaat", "nooooooo"]
# ::lemmas ["Whaaaat", "nooooooo"]
(c26-1 / no
       :mod (c26-0 / whaaat
                   :mode expressive))

# ::snt Didn't they JUST get married?
# ::tokens ["Did", "n't", "they", "JUST", "get", "married", "?"]
# ::lemmas ["do", "not", "they", "just", "get", "marry", "?"]
(c27-2 / marry-01
       :ARG1 (c27-3 / they)
       :mod (c27-1 / just)
       :ARG1-of (c27-0 / request-confirmation-91))

# ::snt I am sad
# ::tokens ["I", "am", "sad"]
# ::lemmas ["i", "be", "sad"]
(c29-1 / sad-02
       :ARG1 (c29-0 / i))

# ::snt Exactly
# ::tokens ["Exactly"]
# ::lemmas ["exactly"]
(c31-0 / exact)

# ::snt I think it's more newsworthy when someone actually stays together ...
# ::tokens ["I", "think", "it", "'s", "more", "newsworthy", "when", "someone", "actually", "stays", "together", "..."]
# ::lemmas ["i", "think", "it", "be", "more", "newsworthy", "when", "someone", "actually", "stay", "together", "..."]
(c32-7 / think-01
       :ARG0 (c32-6 / i)
       :ARG1 (c32-1 / newsworthy
                    :time (c32-3 / stay-01
                                 :ARG1 (c32-0 / someone)
                                 :ARG3 (c32-8 / together)
                                 :ARG1-of (c32-4 / actual-02))
                    :ARG2-of (c32-5 / have-degree-91
                                    :ARG1 c32-3
                                    :ARG3 (c32-2 / more))))

# ::snt excuse me no
# ::tokens ["excuse", "me", "no"]
# ::lemmas ["excuse", "i", "no"]
(c33-0 / excuse-01
       :ARG0 (c33-1 / you)
       :ARG1 (c33-2 / i)
       :polarity -
       :mode imperative)

# ::snt This is sad thought she had her life going good
# ::tokens ["This", "is", "sad", "thought", "she", "had", "her", "life", "going", "good"]
# ::lemmas ["this", "be", "sad", "thought", "she", "have", "her", "life", "go", "good"]
(c34-1 / sad-02
       :ARG0 (c34-5 / think-01
                    :ARG1 (c34-2 / have-03
                                 :ARG0 (c34-0 / she)
                                 :ARG1 (c34-6 / go-08
                                              :ARG1 (c34-3 / life
                                                           :poss c34-0)
                                              :ARG2 (c34-4 / good-02)))))

# ::snt I didn't realize they were so different, prob for the best then..
# ::tokens ["I", "did", "n't", "realize", "they", "were", "so", "different", ",", "prob", "for", "the", "best", "then", ".."]
# ::lemmas ["i", "do", "not", "realize", "they", "be", "so", "different", ",", "prob", "for", "the", "good", "then", ".."]
(c35-3 / and
       :op1 (c35-2 / realize-01
                   :ARG0 (c35-6 / i)
                   :ARG1 (c35-9 / differ-02
                                :ARG1 (c35-7 / they)
                                :degree (c35-1 / so))
                   :polarity -)
       :op2 (c35-5 / prob-02
                   :ARG1 (c35-8 / good-02
                                :ARG1 c35-7
                                :ARG2-of (c35-4 / have-degree-91
                                                :ARG1 c35-7
                                                :ARG3 (c35-0 / most)))
                   :time (c35-10 / then)))

# ::snt he was too hot for her anyway
# ::tokens ["he", "was", "too", "hot", "for", "her", "anyway"]
# ::lemmas ["he", "be", "too", "hot", "for", "she", "anyway"]
(c36-3 / have-degree-91
       :ARG1 (c36-4 / he)
       :ARG2 (c36-2 / hot-03
                    :ARG1 c36-4)
       :ARG3 (c36-5 / too)
       :ARG6 (c36-0 / she)
       :mod (c36-1 / anyway))

# ::snt wonder what ugly thng happened btween these til they call it quits-im % sure its LACK OF COMPROMISING i guess koz it mostly is.
# ::tokens ["wonder", "what", "ugly", "thng", "happened", "btween", "these", "til", "they", "call", "it", "quits", "-", "im", "%", "sure", "its", "LACK", "OF", "COMPROMISING", "i", "guess", "koz", "it", "mostly", "is", "."]
# ::lemmas ["wonder", "what", "ugly", "thng", "happen", "btween", "these", "til", "they", "call", "it", "quit", "-", "im", "%", "sure", "its", "lack", "of", "compromising", "i", "guess", "koz", "it", "mostly", "be", "."]
(c38-1 / multi-sentence
       :snt1 (c38-9 / wonder-01
                    :ARG0 (c38-11 / i)
                    :ARG1 (c38-15 / ugly
                                  :domain (c38-12 / thing
                                                  :time (c38-8 / until
                                                               :op1 (c38-10 / call-01
                                                                            :ARG0 (c38-16 / they)
                                                                            :ARG1 (c38-4 / it)
                                                                            :ARG2 (c38-13 / quit-01))))))
       :snt2 (c38-3 / sure-02
                    :ARG0 (c38-14 / i)
                    :ARG1 (c38-7 / lack-01
                                 :ARG0 (c38-0 / it)
                                 :ARG1 (c38-5 / reasonable-02)
                                 :ARG1-of (c38-2 / guess-01
                                                 :ARG0 (c38-17 / i))
                                 :mod (c38-6 / most))))

# ::snt Awww, sad!!
# ::tokens ["Awww", ",", "sad", "!", "!"]
# ::lemmas ["Awww", ",", "sad", "!", "!"]
(c39-1 / sad-02
       :mod (c39-0 / awww
                   :mode expressive))

# ::snt better now then after the "i do" and kids.
# ::tokens ["better", "now", "then", "after", "the", "\"", "i", "do", "\"", "and", "kids", "."]
# ::lemmas ["well", "now", "then", "after", "the", "\"", "i", "do", "\"", "and", "kid", "."]
(c40-2 / have-degree-91
       :ARG2 (c40-6 / good-02
                    :time (c40-0 / now))
       :ARG3 (c40-1 / more)
       :ARG4 (c40-5 / after
                    :op1 (c40-4 / and
                                :op1 (c40-7 / do-02
                                            :ARG0 (c40-8 / i))
                                :op2 (c40-3 / kid))))

# ::snt What happen?
# ::tokens ["What", "happen", "?"]
# ::lemmas ["what", "happen", "?"]
(c41-0 / event
       :mod (c41-1 / amr-unknown))

# ::snt whaaaat??? Lord Gaga and Lady Gaga are no more?! Say it ain't so!
# ::tokens ["whaaaat", "?", "?", "?", "Lord", "Gaga", "and", "Lady", "Gaga", "are", "no", "more", "?", "!", "Say", "it", "ai", "n't", "so", "!"]
# ::lemmas ["whaaaat", "?", "?", "?", "Lord", "Gaga", "and", "Lady", "Gaga", "be", "no", "more", "?", "!", "say", "it", "be", "not", "so", "!"]
(c42-1 / multi-sentence
       :snt1 (c42-8 / whaaat
                    :mode expressive)
       :snt2 (c42-3 / say-01
                    :ARG0 (c42-0 / you)
                    :ARG1 (c42-5 / have-polarity-91
                                 :ARG1 (c42-9 / and
                                              :op1 (c42-6 / person
                                                          :name (c42-2 / name
                                                                       :op1 "Lord"
                                                                       :op2 "Gayana"))
                                              :op2 (c42-4 / person
                                                          :name (c42-7 / name
                                                                       :op1 "Lady"
                                                                       :op2 "Gayana")))
                                 :ARG2 -)
                    :mode imperative))

# ::snt nooooooooooooooooooo
# ::tokens ["nooooooooooooooooooo"]
# ::lemmas ["nooooooooooooooooooo"]
(c43-0 / no)
