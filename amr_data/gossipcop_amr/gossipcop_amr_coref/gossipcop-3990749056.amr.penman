# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c1-0 / amr-unknown)

# ::snt why a boy when you can get a real man
# ::tokens ["why", "a", "boy", "when", "you", "can", "get", "a", "real", "man"]
# ::lemmas ["why", "a", "boy", "when", "you", "can", "get", "a", "real", "man"]
(c2-5 / cause-01
      :ARG0 (c2-6 / amr-unknown)
      :ARG1 (c2-0 / boy)
      :condition (c2-4 / possible-01
                       :ARG1 (c2-7 / get-01
                                   :ARG0 (c2-1 / you)
                                   :ARG1 (c2-2 / man
                                               :ARG1-of (c2-3 / real-04)))))

# ::snt coz is smart enough to get someone better
# ::tokens ["coz", "is", "smart", "enough", "to", "get", "someone", "better"]
# ::lemmas ["coz", "be", "smart", "enough", "to", "get", "someone", "well"]
(c3-5 / have-degree-91
      :ARG1 (c3-6 / person
                  :name (c3-1 / name
                              :op1 "coz"))
      :ARG2 (c3-3 / smart-06
                  :ARG1 c3-6)
      :ARG3 (c3-4 / enough)
      :ARG6 (c3-8 / get-01
                  :ARG0 c3-6
                  :ARG1 (c3-0 / someone
                              :ARG1-of c3-5
                              :ARG2 (c3-7 / good-02
                                          :ARG1 c3-0)
                              :ARG3 (c3-2 / more))))

# ::snt instagram could've told you this
# ::tokens ["instagram", "could", "'ve", "told", "you", "this"]
# ::lemmas ["instagram", "could", "'ve", "tell", "you", "this"]
(c4-3 / possible-01
      :ARG1 (c4-4 / tell-01
                  :ARG0 (c4-2 / publication
                              :name (c4-1 / name
                                          :op1 "Instagram"))
                  :ARG1 (c4-5 / this)
                  :ARG2 (c4-0 / you)))

# ::snt Thank God for her!
# ::tokens ["Thank", "God", "for", "her", "!"]
# ::lemmas ["thank", "God", "for", "she", "!"]
(c5-4 / thank-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-2 / person
                  :name (c5-0 / name
                              :op1 "God"))
      :ARG2 (c5-1 / she))

# ::snt Lol
# ::tokens ["Lol"]
# ::lemmas ["Lol"]
(c6-1 / laugh-01
      :manner (c6-0 / loud)
      :mode expressive)

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c8-0 / good-02)

# ::snt Good, the prick deserves to be alone.
# ::tokens ["Good", ",", "the", "prick", "deserves", "to", "be", "alone", "."]
# ::lemmas ["good", ",", "the", "prick", "deserve", "to", "be", "alone", "."]
(c9-2 / and
      :op1 (c9-3 / good-02)
      :op2 (c9-4 / deserve-01
                 :ARG0 (c9-0 / prick)
                 :ARG1 (c9-1 / alone
                             :domain c9-0)))

# ::snt Hot Button Issue...AGAIN/STILL (May , )
# ::tokens ["Hot", "Button", "Issue", "...", "AGAIN", "/", "STILL", "(", "May", ",", ")"]
# ::lemmas ["Hot", "Button", "Issue", "...", "again", "/", "STILL", "(", "May", ",", ")"]
(c10-5 / and
       :op1 (c10-4 / issue-02
                   :ARG0 (c10-0 / button
                                :ARG1-of (c10-2 / hot-05)))
       :op2 (c10-3 / be-temporally-at-91
                   :ARG2 (c10-6 / date-entity
                                :month 5)
                   :mod (c10-1 / still)))

# ::snt ...but becoming LGBT because she doesn't like bieber??? (May , )
# ::tokens ["...", "but", "becoming", "LGBT", "because", "she", "does", "n't", "like", "bieber", "?", "?", "?", "(", "May", ",", ")"]
# ::lemmas ["...", "but", "become", "lgbt", "because", "she", "do", "not", "like", "bieber", "?", "?", "?", "(", "May", ",", ")"]
(c11-6 / contrast-01
       :polarity (c11-8 / amr-unknown)
       :ARG2 (c11-0 / become-01
                    :ARG1 (c11-3 / she)
                    :ARG2 (c11-4 / lesbian)
                    :ARG1-of (c11-10 / cause-01
                                     :ARG0 (c11-9 / dislike-01
                                                  :ARG0 c11-3
                                                  :ARG1 (c11-5 / person
                                                               :name (c11-1 / name
                                                                            :op1 "Bieber")))))
       :ARG1-of (c11-7 / describe-01
                       :ARG0 (c11-2 / publication
                                    :name c11-1
                                    :op1 "May")))

# ::snt ok, A LOT of people DON'T like..., (May , )
# ::tokens ["ok", ",", "A", "LOT", "of", "people", "DON'T", "like", "...", ",", "(", "May", ",", ")"]
# ::lemmas ["ok", ",", "a", "LOT", "of", "people", "don't", "like", "...", ",", "(", "May", ",", ")"]
(c12-4 / dislike-01
       :ARG0 (c12-1 / person
                    :quant (c12-2 / lot))
       :ARG1-of (c12-0 / okay-04)
       :ARG1-of (c12-3 / wish-01))

# ::snt no way! My hailee
# ::tokens ["no", "way", "!", "My", "hailee"]
# ::lemmas ["no", "way", "!", "my", "hailee"]
(c13-2 / multi-sentence
       :snt1 (c13-0 / way
                    :polarity -)
       :snt2 (c13-1 / hailee
                    :poss (c13-3 / i)))

# ::snt Are they dating?
# ::tokens ["Are", "they", "dating", "?"]
# ::lemmas ["be", "they", "date", "?"]
(c14-0 / date-02
       :polarity (c14-2 / amr-unknown)
       :ARG0 (c14-1 / they))

# ::snt Yeah that's over matters!
# ::tokens ["Yeah", "that", "'s", "over", "matters", "!"]
# ::lemmas ["yeah", "that", "be", "over", "matter", "!"]
(c15-0 / over-01
       :ARG1 (c15-2 / that)
       :ARG2 (c15-1 / matter))

# ::snt Legit may nabasa akong article sa fb
# ::tokens ["Legit", "may", "nabasa", "akong", "article", "sa", "fb"]
# ::lemmas ["Legit", "may", "nabasa", "akong", "article", "sa", "fb"]
(c16-3 / possible-01
       :ARG1 (c16-0 / nabasa
                    :mod (c16-5 / akong)
                    :topic (c16-4 / article)
                    :source (c16-1 / publication
                                   :name (c16-2 / name
                                                :op1 "Fb"))))

# ::snt Legit
# ::tokens ["Legit"]
# ::lemmas ["legit"]
(c17-0 / law)

# ::snt Yes
# ::tokens ["Yes"]
# ::lemmas ["yes"]
(c18-0 / yes)

# ::snt Oh please say there not i love hailee but not justinjust no justjust no
# ::tokens ["Oh", "please", "say", "there", "not", "i", "love", "hailee", "but", "not", "justinjust", "no", "justjust", "no"]
# ::lemmas ["oh", "please", "say", "there", "not", "i", "love", "hailee", "but", "not", "justinjust", "no", "justjust", "no"]
(c19-3 / say-01
       :ARG0 (c19-1 / you)
       :ARG1 (c19-6 / contrast-01
                    :ARG1 (c19-4 / love-01
                                 :ARG0 (c19-8 / i)
                                 :ARG1 (c19-5 / person
                                              :name (c19-2 / name
                                                           :op1 "Hailee"))
                                 :polarity -)
                    :ARG2 (c19-9 / love-01
                                 :ARG0 c19-8
                                 :mod (c19-7 / just)
                                 :mod (c19-10 / just)
                                 :polarity -))
       :mod (c19-0 / oh
                   :mode expressive)
       :mode imperative
       :polite +)

# ::snt One hailee has a boyfriend and two when Justin is seen with a girl doesn't mean there dating smh
# ::tokens ["One", "hailee", "has", "a", "boyfriend", "and", "two", "when", "Justin", "is", "seen", "with", "a", "girl", "does", "n't", "mean", "there", "dating", "smh"]
# ::lemmas ["One", "hailee", "have", "a", "boyfriend", "and", "two", "when", "Justin", "be", "see", "with", "a", "girl", "do", "not", "mean", "there", "date", "smh"]
(c20-11 / and
        :op1 (c20-7 / have-03
                    :ARG0 (c20-8 / person
                                 :name (c20-2 / name
                                              :op1 "Hailee")
                                 :quant 1)
                    :ARG1 (c20-3 / person
                                 :ARG0-of (c20-10 / have-rel-role-91
                                                  :ARG1 c20-8
                                                  :ARG2 (c20-1 / boyfriend))))
        :op2 (c20-6 / have-03
                    :ARG0 c20-8
                    :ARG1 c20-3
                    :time (c20-4 / see-01
                                 :ARG1 (c20-14 / person
                                               :name (c20-9 / name
                                                            :op1 "Justin")
                                               :accompanier (c20-12 / girl)))
                    :ARG1-of (c20-5 / mean-01
                                    :ARG2 (c20-13 / date-02
                                                  :ARG0 c20-14
                                                  :mod (c20-0 / smh
                                                              :mode expressive))
                                    :polarity -)))

# ::snt How does this mean they are dating?
# ::tokens ["How", "does", "this", "mean", "they", "are", "dating", "?"]
# ::lemmas ["how", "do", "this", "mean", "they", "be", "date", "?"]
(c21-0 / mean-01
       :ARG1 (c21-1 / this)
       :ARG2 (c21-3 / date-02
                    :ARG0 (c21-4 / they))
       :manner (c21-2 / amr-unknown))

# ::snt I'm so nervous to know who justin bieber is dating.by the way I think it's Ariana grande
# ::tokens ["I", "'m", "so", "nervous", "to", "know", "who", "justin", "bieber", "is", "dating.by", "the", "way", "I", "think", "it", "'s", "Ariana", "grande"]
# ::lemmas ["i", "be", "so", "nervous", "to", "know", "who", "justin", "bieber", "be", "dating.by", "the", "way", "i", "think", "it", "be", "Ariana", "grande"]
(c22-1 / nervous-01
       :ARG0 (c22-6 / know-01
                    :ARG0 (c22-7 / i)
                    :ARG1 (c22-5 / person
                                 :ARG1-of (c22-8 / date-02
                                                 :ARG0 (c22-2 / person
                                                              :name (c22-4 / name
                                                                           :op1 "Justin"
                                                                           :op2 "Bieber")))))
       :ARG1 c22-7
       :degree (c22-3 / so)
       :mod (c22-0 / by-the-way))

# ::snt I am simply voting for as Top Social Artist in the
# ::tokens ["I", "am", "simply", "voting", "for", "as", "Top", "Social", "Artist", "in", "the"]
# ::lemmas ["i", "be", "simply", "vote", "for", "as", "Top", "Social", "Artist", "in", "the"]
(c23-2 / vote-01
       :ARG0 (c23-5 / i)
       :ARG1 (c23-3 / person
                    :mod (c23-6 / artist
                                :mod (c23-1 / social)
                                :mod (c23-4 / top)))
       :ARG1-of (c23-0 / simple-02))

# ::snt she's had a boyfriend for months where the hell did they even get this idea
# ::tokens ["she", "'s", "had", "a", "boyfriend", "for", "months", "where", "the", "hell", "did", "they", "even", "get", "this", "idea"]
# ::lemmas ["she", "be", "have", "a", "boyfriend", "for", "months", "where", "the", "hell", "do", "they", "even", "get", "this", "idea"]
(c24-12 / get-01
        :ARG0 (c24-9 / they)
        :ARG1 (c24-10 / idea
                      :mod (c24-11 / this))
        :ARG2 (c24-6 / person
                     :ARG0-of (c24-5 / have-rel-role-91
                                     :ARG1 (c24-2 / she)
                                     :ARG2 (c24-0 / boyfriend)))
        :mod (c24-8 / hell
                    :mode expressive)
        :time (c24-3 / after
                     :quant (c24-1 / multiple
                                   :op1 (c24-13 / temporal-quantity
                                                :unit (c24-7 / month)
                                                :quant 1)))
        :mod (c24-4 / even))

# ::snt And people care why
# ::tokens ["And", "people", "care", "why"]
# ::lemmas ["and", "people", "care", "why"]
(c25-0 / and
       :op2 (c25-2 / care-01
                   :ARG0 (c25-1 / person)
                   :ARG1 (c25-3 / thing
                                :ARG0-of (c25-4 / cause-01))))

# ::snt Exactly!!! Rumors r sooo annoying
# ::tokens ["Exactly", "!", "!", "!", "Rumors", "r", "sooo", "annoying"]
# ::lemmas ["exactly", "!", "!", "!", "rumor", "r", "sooo", "annoying"]
(c26-0 / multi-sentence
       :snt1 (c26-3 / exact
                    :mode expressive)
       :snt2 (c26-4 / annoy-01
                    :ARG0 (c26-2 / rumor-01)
                    :degree (c26-1 / so)))

# ::snt Pic of looks like he's walking away from a bloody light sabre fight!
# ::tokens ["Pic", "of", "looks", "like", "he", "'s", "walking", "away", "from", "a", "bloody", "light", "sabre", "fight", "!"]
# ::lemmas ["pic", "of", "look", "like", "he", "be", "walk", "away", "from", "a", "bloody", "light", "sabre", "fight", "!"]
(c27-4 / look-02
       :ARG0 (c27-3 / Pic)
       :ARG1 (c27-6 / walk-01
                    :ARG0 (c27-2 / he)
                    :direction (c27-7 / away
                                      :op1 (c27-0 / fight-01
                                                  :instrument (c27-8 / lightsaber
                                                                     :mod (c27-5 / light))
                                                  :mod (c27-1 / bloody)))))

# ::snt but they should collab
# ::tokens ["but", "they", "should", "collab"]
# ::lemmas ["but", "they", "should", "collab"]
(c28-0 / contrast-01
       :ARG2 (c28-3 / recommend-01
                    :ARG1 (c28-2 / collude-01
                                 :ARG0 (c28-1 / they))))

# ::snt good
# ::tokens ["good"]
# ::lemmas ["good"]
(c29-0 / good-02)

# ::snt she has a boyfriend smh
# ::tokens ["she", "has", "a", "boyfriend", "smh"]
# ::lemmas ["she", "have", "a", "boyfriend", "smh"]
(c30-3 / have-03
       :ARG0 (c30-2 / she)
       :ARG1 (c30-4 / person
                    :ARG0-of (c30-5 / have-rel-role-91
                                    :ARG1 c30-2
                                    :ARG2 (c30-1 / boyfriend)))
       :mod (c30-0 / smh
                   :mode expressive))

# ::snt no fucking shit nice journalism
# ::tokens ["no", "fucking", "shit", "nice", "journalism"]
# ::lemmas ["no", "fucking", "shit", "nice", "journalism"]
(c31-2 / journalism
       :ARG1-of (c31-0 / nice-01)
       :mod (c31-1 / fucking
                   :polarity -))

# ::snt who cares? She's already has a boyfriend.
# ::tokens ["who", "cares", "?", "She", "'s", "already", "has", "a", "boyfriend", "."]
# ::lemmas ["who", "care", "?", "she", "be", "already", "have", "a", "boyfriend", "."]
(c32-2 / multi-sentence
       :snt1 (c32-6 / care-01
                    :ARG0 (c32-9 / amr-unknown))
       :snt2 (c32-4 / have-03
                    :ARG0 (c32-3 / she)
                    :ARG1 (c32-5 / person
                                 :ARG0-of (c32-7 / have-rel-role-91
                                                 :ARG1 (c32-0 / she)
                                                 :ARG2 (c32-1 / boyfriend)))
                    :time (c32-8 / already)))

# ::snt that is brand new information !!!!!
# ::tokens ["that", "is", "brand", "new", "information", "!", "!", "!", "!", "!"]
# ::lemmas ["that", "be", "brand", "new", "information", "!", "!", "!", "!", "!"]
(c33-2 / information
       :domain (c33-3 / that)
       :ARG1-of (c33-1 / new-01
                       :degree (c33-0 / brand)))

# ::snt Who ..
# ::tokens ["Who", ".."]
# ::lemmas ["who", ".."]
(c34-0 / amr-unknown)

# ::snt Who cares ?
# ::tokens ["Who", "cares", "?"]
# ::lemmas ["who", "care", "?"]
(c35-0 / care-01
       :ARG0 (c35-1 / amr-unknown))

# ::snt of course bc she's already have a boyfriend lol
# ::tokens ["of", "course", "bc", "she", "'s", "already", "have", "a", "boyfriend", "lol"]
# ::lemmas ["of", "course", "bc", "she", "be", "already", "have", "a", "boyfriend", "lol"]
(c36-6 / cause-01
       :ARG0 (c36-3 / have-03
                    :ARG0 (c36-2 / she)
                    :ARG1 (c36-4 / person
                                 :ARG0-of (c36-7 / have-rel-role-91
                                                 :ARG1 c36-2
                                                 :ARG2 (c36-1 / boyfriend)))
                    :time (c36-9 / already)
                    :ARG2-of (c36-5 / laugh-01
                                    :ARG0 (c36-8 / i)
                                    :manner (c36-10 / loud)))
       :ARG1 (c36-0 / of-course))

# ::snt Justin is still on his ..He doesn't have time for romance..
# ::tokens ["Justin", "is", "still", "on", "his", "..", "He", "does", "n't", "have", "time", "for", "romance", ".."]
# ::lemmas ["Justin", "be", "still", "on", "his", "..", "he", "do", "not", "have", "time", "for", "romance", ".."]
(c37-2 / multi-sentence
       :snt1 (c37-0 / on-ones-mind-07
                    :ARG1 (c37-6 / person
                                 :name (c37-1 / name
                                              :op1 "Justin"))
                    :mod (c37-3 / still))
       :snt2 (c37-5 / have-03
                    :ARG0 (c37-7 / he)
                    :ARG1 (c37-8 / time
                                 :purpose (c37-4 / romance-01
                                                 :ARG0 c37-7))
                    :polarity -))

# ::snt Thank God!
# ::tokens ["Thank", "God", "!"]
# ::lemmas ["thank", "God", "!"]
(c38-2 / thank-01
       :ARG1 (c38-1 / person
                    :name (c38-0 / name
                                 :op1 "God"))
       :mode expressive)

# ::snt At porque ela tem namorado n
# ::tokens ["At", "porque", "ela", "tem", "namorado", "n"]
# ::lemmas ["at", "porque", "ela", "tem", "namorado", "n"]
(c39-1 / namorado
       :mod (c39-2 / at-)
       :mod (c39-0 / tem))

# ::snt Ayweh may nakita kasi akong article eh hmmm hahaha
# ::tokens ["Ayweh", "may", "nakita", "kasi", "akong", "article", "eh", "hmmm", "hahaha"]
# ::lemmas ["Ayweh", "may", "nakita", "kasi", "akong", "article", "eh", "hmmm", "hahaha"]
(c40-5 / possible-01
       :ARG1 (c40-1 / publication
                    :name (c40-0 / name
                                 :op1 "Nakita"
                                 :op2 "Kasi"
                                 :op3 "Akong")
                    :ARG1-of (c40-2 / read-01))
       :mod (c40-3 / eh
                   :mode expressive)
       :mod (c40-4 / haha
                   :mode expressive))

# ::snt Uyyyy nooo! Si Cameron Smoller daw jowa ni Hailee hehe
# ::tokens ["Uyyyy", "nooo", "!", "Si", "Cameron", "Smoller", "daw", "jowa", "ni", "Hailee", "hehe"]
# ::lemmas ["Uyyyy", "nooo", "!", "Si", "Cameron", "Smoller", "daw", "jowa", "ni", "Hailee", "hehe"]
(c41-1 / multi-sentence
       :snt1 (c41-0 / nooo
                    :degree (c41-7 / way))
       :snt2 (c41-8 / and
                    :op1 (c41-9 / dawjowa
                                :mod (c41-4 / person
                                            :name (c41-3 / name
                                                         :op1 "Si"
                                                         :op2 "Cameron"
                                                         :op3 "Smoller"))
                                :mode expressive)
                    :op2 (c41-2 / person
                                :name (c41-5 / name
                                             :op1 "Hailee")
                                :mod (c41-6 / hehe
                                            :mode expressive))))

# ::snt selos ka naman kay dapat kamo ni Justin naga date?
# ::tokens ["selos", "ka", "naman", "kay", "dapat", "kamo", "ni", "Justin", "naga", "date", "?"]
# ::lemmas ["selos", "ka", "naman", "kay", "dapat", "kamo", "ni", "Justin", "naga", "date", "?"]
(c42-1 / multi-sentence
       :snt1 (c42-0 / naman
                    :domain (c42-4 / person
                                   :name (c42-3 / name
                                                :op1 "selos"))
                    :mode expressive)
       :snt2 (c42-5 / kay-dapat
                    :name (c42-6 / name
                                 :op1 "Kamo"))
       :snt3 (c42-2 / person
                    :name (c42-7 / name
                                 :op1 "Justin"))
       :snt4 (c42-9 / date-02
                    :polarity (c42-8 / amr-unknown)))

# ::snt You go Justin She's gorgeous
# ::tokens ["You", "go", "Justin", "She", "'s", "gorgeous"]
# ::lemmas ["you", "go", "Justin", "she", "be", "gorgeous"]
(c43-1 / say-01
       :ARG0 (c43-3 / i)
       :ARG1 (c43-5 / go-02
                    :ARG0 (c43-2 / person
                                 :name (c43-0 / name
                                              :op1 "Justin")
                                 :ARG2-of c43-1)
                    :mode imperative)
       :topic (c43-4 / gorgeous
                     :domain c43-2))

# ::snt ddkdkfldks
# ::tokens ["ddkdkfldks"]
# ::lemmas ["ddkdkfldks"]
(c44-1 / thing
       :name (c44-0 / name
                    :op1 "ddkdkfldks"))

# ::snt nope that is hailey Baldwin I think
# ::tokens ["nope", "that", "is", "hailey", "Baldwin", "I", "think"]
# ::lemmas ["nope", "that", "be", "hailey", "Baldwin", "i", "think"]
(c45-2 / think-01
       :ARG0 (c45-3 / i)
       :ARG1 (c45-1 / person
                    :name (c45-0 / name
                                 :op1 "Hailey"
                                 :op2 "Baldwin")
                    :domain (c45-4 / that)))

# ::snt Justin
# ::tokens ["Justin"]
# ::lemmas ["Justin"]
(c46-1 / person
       :name (c46-0 / name
                    :op1 "Justin"))

# ::snt This is what Ive been waiting for
# ::tokens ["This", "is", "what", "I", "ve", "been", "waiting", "for"]
# ::lemmas ["this", "be", "what", "i", "ve", "be", "wait", "for"]
(c47-0 / wait-01
       :ARG1 (c47-1 / i)
       :ARG2 (c47-2 / this))

# ::snt Do you really have nothing better to do today?
# ::tokens ["Do", "you", "really", "have", "nothing", "better", "to", "do", "today", "?"]
# ::lemmas ["do", "you", "really", "have", "nothing", "well", "to", "do", "today", "?"]
(c48-8 / do-02
       :polarity (c48-6 / amr-unknown)
       :ARG0 (c48-0 / you)
       :ARG1 (c48-1 / nothing
                    :ARG1-of (c48-4 / have-degree-91
                                    :ARG2 (c48-7 / good-02
                                                 :ARG1 c48-1)
                                    :ARG3 (c48-2 / more)))
       :time (c48-5 / today)
       :ARG1-of (c48-3 / real-04))

# ::snt She denied it
# ::tokens ["She", "denied", "it"]
# ::lemmas ["she", "deny", "it"]
(c49-0 / deny-01
       :ARG0 (c49-2 / she)
       :ARG1 (c49-1 / it))

# ::snt Are Justin bieber and hailee Steinfeld dating or bf or gf?
# ::tokens ["Are", "Justin", "bieber", "and", "hailee", "Steinfeld", "dating", "or", "bf", "or", "gf", "?"]
# ::lemmas ["be", "Justin", "bieber", "and", "hailee", "Steinfeld", "date", "or", "bf", "or", "gf", "?"]
(c50-11 / amr-choice
        :op1 (c50-13 / date-02
                     :ARG0 (c50-10 / and
                                   :op1 (c50-4 / person
                                               :name (c50-1 / name
                                                            :op1 "Justin"
                                                            :op2 "Bieber"))
                                   :op2 (c50-2 / person
                                               :name (c50-3 / name
                                                            :op1 "Hailee"
                                                            :op2 "Steinfeld"))))
        :op2 (c50-8 / date-02
                    :ARG0 c50-10
                    :ARG1 (c50-14 / person
                                  :ARG0-of (c50-5 / have-rel-role-91
                                                  :ARG1 c50-10
                                                  :ARG2 (c50-0 / boyfriend))))
        :op3 (c50-6 / date-02
                    :ARG0 (c50-7 / person
                                 :ARG0-of (c50-9 / have-rel-role-91
                                                 :ARG1 c50-10
                                                 :ARG2 (c50-12 / girlfriend)))))
