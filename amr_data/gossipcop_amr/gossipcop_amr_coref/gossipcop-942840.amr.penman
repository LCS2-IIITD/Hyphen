# ::snt A GOOD GUY NEVER FAILS NO MATTER WHAT.(SORRY CARRIE).MIKE ALWAYS SEEMS TO BE A GOOD GUY.BLESS THE FISHERS...
# ::tokens ["A", "GOOD", "GUY", "NEVER", "FAILS", "NO", "MATTER", "WHAT.(SORRY", "CARRIE).MIKE", "ALWAYS", "SEEMS", "TO", "BE", "A", "GOOD", "GUY.BLESS", "THE", "FISHERS", "..."]
# ::lemmas ["a", "good", "guy", "never", "fails", "no", "MATTER", "WHAT.(SORRY", "carrie).mike", "always", "seems", "to", "be", "a", "GOOD", "GUY.BLESS", "the", "fisher", "..."]
(c1-3 / multi-sentence
      :snt1 (c1-0 / fail-01
                  :ARG1 (c1-15 / guy
                               :ARG1-of (c1-13 / good-02))
                  :time (c1-8 / ever)
                  :ARG1-of (c1-6 / regardless-91
                                 :ARG2 (c1-14 / thing))
                  :polarity -)
      :snt2 (c1-12 / carry-00
                   :time (c1-7 / always))
      :snt3 (c1-5 / seem-01
                  :ARG1 (c1-17 / guy
                               :ARG1-of (c1-16 / good-02)
                               :domain (c1-1 / ship
                                             :name (c1-4 / name
                                                         :op1 "MIKE"))))
      :snt4 (c1-9 / lose-03
                  :ARG0 (c1-2 / you)
                  :ARG1 (c1-10 / person
                               :ARG0-of (c1-11 / fish-01))
                  :mode imperative))

# ::snt Looking for Web Developer? Contact me or
# ::tokens ["Looking", "for", "Web", "Developer", "?", "Contact", "me", "or"]
# ::lemmas ["look", "for", "web", "Developer", "?", "contact", "i", "or"]
(c2-1 / multi-sentence
      :snt1 (c2-3 / look-01
                  :ARG0 (c2-0 / you)
                  :ARG1 (c2-2 / person
                              :ARG0-of (c2-8 / develop-02
                                             :ARG1 (c2-4 / web)))
                  :polarity (c2-7 / amr-unknown))
      :snt2 (c2-5 / contact-01
                  :ARG0 c2-0)
      :ARG1 (c2-6 / i))

# ::snt He doesnt sing very poorly. He just called isnt Carrie
# ::tokens ["He", "does", "nt", "sing", "very", "poorly", ".", "He", "just", "called", "is", "nt", "Carrie"]
# ::lemmas ["he", "do", "not", "sing", "very", "poorly", ".", "he", "just", "call", "be", "not", "Carrie"]
(c4-0 / multi-sentence
      :snt1 (c4-2 / sing-01
                  :ARG0 (c4-5 / he)
                  :manner (c4-6 / poor
                                :degree (c4-4 / very))
                  :polarity -)
      :snt2 (c4-7 / call-02
                  :ARG0 (c4-8 / he)
                  :ARG1 (c4-1 / person
                              :name (c4-3 / name
                                          :op1 "Carrie")
                              :polarity -)
                  :mod (c4-9 / just)))

# ::snt He's cool
# ::tokens ["He", "'s", "cool"]
# ::lemmas ["he", "be", "cool"]
(c5-0 / cool-04
      :ARG1 (c5-1 / he))
