# ::snt That's awesome!
# ::tokens ["That", "'s", "awesome", "!"]
# ::lemmas ["that", "be", "awesome", "!"]
(c1-1 / awesome-02
      :ARG0 (c1-0 / that))

# ::snt Welcome to the red chair
# ::tokens ["Welcome", "to", "the", "red", "chair"]
# ::lemmas ["welcome", "to", "the", "red", "chair"]
(c2-0 / welcome-01
      :ARG2 (c2-1 / chair
                  :ARG1-of (c2-2 / red-02)))

# ::snt WHERE TF IS XTINA??!!
# ::tokens ["WHERE", "TF", "IS", "XTINA", "?", "?", "!", "!"]
# ::lemmas ["where", "TF", "be", "XTINA", "?", "?", "!", "!"]
(c3-1 / be-located-at-91
      :ARG1 (c3-3 / person
                  :name (c3-2 / name
                              :op1 "Xinina"))
      :ARG2 (c3-4 / amr-unknown)
      :mod (c3-0 / fuck
                 :mode expressive)
      :mode expressive)

# ::snt I'm surprised she's on TV instead of Idol but I know she did TV in the UK.
# ::tokens ["I", "'m", "surprised", "she", "'s", "on", "TV", "instead", "of", "Idol", "but", "I", "know", "she", "did", "TV", "in", "the", "UK", "."]
# ::lemmas ["i", "be", "surprised", "she", "be", "on", "tv", "instead", "of", "Idol", "but", "i", "know", "she", "do", "tv", "in", "the", "UK", "."]
(c4-8 / contrast-01
      :ARG1 (c4-3 / surprise-01
                  :ARG0 (c4-1 / be-located-at-91
                              :ARG1 (c4-0 / she)
                              :ARG2 (c4-10 / television)
                              :ARG1-of (c4-9 / instead-of-91
                                             :ARG2 (c4-5 / broadcast-program
                                                         :name (c4-2 / name
                                                                     :op1 "Idol"))))
                  :ARG1 (c4-4 / i))
      :ARG2 (c4-6 / know-01
                  :ARG0 c4-4
                  :ARG1 (c4-11 / do-02
                               :ARG0 c4-0
                               :ARG1 (c4-13 / television)
                               :location (c4-12 / country
                                                :name (c4-7 / name
                                                            :op1 "UK")))))

# ::snt I thought of you as I wrote this news up.
# ::tokens ["I", "thought", "of", "you", "as", "I", "wrote", "this", "news", "up", "."]
# ::lemmas ["i", "think", "of", "you", "as", "i", "write", "this", "news", "up", "."]
(c5-4 / think-01
      :ARG0 (c5-3 / i)
      :ARG1 (c5-0 / you)
      :time (c5-2 / write-01
                  :ARG0 c5-3
                  :ARG1 (c5-1 / news
                              :mod (c5-5 / this))))

# ::snt CHEGA
# ::tokens ["CHEGA"]
# ::lemmas ["chega"]
(c6-1 / person
      :name (c6-0 / name
                  :op1 "ChEGA"))

# ::snt RENAN SE VOCE ME AMA VOC VIRA ESSA BOCA PRA LA
# ::tokens ["RENAN", "SE", "VOCE", "ME", "AMA", "VOC", "VIRA", "ESSA", "BOCA", "PRA", "LA"]
# ::lemmas ["RENAN", "SE", "VOCE", "i", "AMA", "VOC", "vira", "essa", "BOCA", "PRA", "LA"]
(c7-1 / and
      :op1 (c7-5 / travel-01
                 :ARG0 (c7-3 / country
                             :name (c7-0 / name
                                         :op1 "RENAN")))
      :op2 (c7-7 / travel-01
                 :ARG0 c7-3)
      :op3 (c7-4 / travel-01
                 :ARG0 c7-3
                 :ARG4 (c7-6 / city
                             :name (c7-2 / name
                                         :op1 "EsSA"
                                         :op2 "BOCA"
                                         :op3 "LA"))))

# ::snt Looking for Logo, Web Site, Brochure, Flyer, Apps, Brand Identity, UI/UX,Designer? Contact
# ::tokens ["Looking", "for", "Logo", ",", "Web", "Site", ",", "Brochure", ",", "Flyer", ",", "Apps", ",", "Brand", "Identity", ",", "UI", "/", "UX", ",", "Designer", "?", "Contact"]
# ::lemmas ["look", "for", "Logo", ",", "Web", "Site", ",", "Brochure", ",", "Flyer", ",", "Apps", ",", "Brand", "Identity", ",", "UI", "/", "UX", ",", "Designer", "?", "contact"]
(c8-9 / multi-sentence
      :snt1 (c8-2 / look-01
                  :ARG1 (c8-6 / and
                              :op1 (c8-7 / logo)
                              :op2 (c8-0 / site
                                         :mod (c8-17 / web))
                              :op3 (c8-4 / thing
                                         :name (c8-14 / name
                                                      :op1 "Brochure"))
                              :op4 (c8-13 / thing
                                          :name (c8-10 / name
                                                       :op1 "Flyer"))
                              :op5 (c8-19 / thing
                                          :name (c8-15 / name
                                                       :op1 "Appropriations"))
                              :op6 (c8-20 / identity
                                          :mod (c8-8 / brand))
                              :op7 (c8-1 / thing
                                         :name (c8-12 / name
                                                      :op1 "UWP"))
                              :op8 (c8-5 / thing
                                         :name (c8-18 / name
                                                      :op1 "UX"))
                              :op9 (c8-16 / person
                                          :ARG0-of (c8-21 / design-01))))
      :snt2 (c8-11 / contact-01
                   :polarity (c8-3 / amr-unknown)))

# ::snt Jennifer hudson powerfull voice is back as coach
# ::tokens ["Jennifer", "hudson", "powerfull", "voice", "is", "back", "as", "coach"]
# ::lemmas ["Jennifer", "hudson", "powerfull", "voice", "be", "back", "as", "coach"]
(c9-3 / voice
      :mod (c9-4 / powerfull)
      :domain (c9-2 / person
                    :name (c9-1 / name
                                :op1 "Jennifer"
                                :op2 "Hudson")
                    :ARG0-of (c9-5 / coach-01))
      :mod (c9-0 / back))

# ::snt Salty
# ::tokens ["Salty"]
# ::lemmas ["salty"]
(c10-0 / alty)

# ::snt *Yawn*
# ::tokens ["*", "Yawn", "*"]
# ::lemmas ["*", "yawn", "*"]
(c11-0 / yawn-01)

# ::snt I call that betrayal lol
# ::tokens ["I", "call", "that", "betrayal", "lol"]
# ::lemmas ["i", "call", "that", "betrayal", "lol"]
(c12-2 / call-01
       :ARG0 (c12-3 / i)
       :ARG1 (c12-4 / that)
       :ARG2 (c12-0 / betray-01)
       :ARG2-of (c12-1 / laugh-01
                       :ARG0 c12-3
                       :manner (c12-5 / loud)))

# ::snt We know
# ::tokens ["We", "know"]
# ::lemmas ["we", "know"]
(c13-1 / know-01
       :ARG0 (c13-0 / we))

# ::snt They fast tracked this decision after the Idol announcement
# ::tokens ["They", "fast", "tracked", "this", "decision", "after", "the", "Idol", "announcement"]
# ::lemmas ["they", "fast", "track", "this", "decision", "after", "the", "Idol", "announcement"]
(c14-5 / track-01
       :ARG0 (c14-7 / they)
       :ARG1 (c14-6 / thing
                    :ARG1-of (c14-9 / decide-01)
                    :mod (c14-4 / this))
       :ARG1-of (c14-0 / fast-02)
       :time (c14-3 / after
                    :op1 (c14-8 / announce-01
                                :ARG1 (c14-1 / broadcast-program
                                             :name (c14-2 / name
                                                          :op1 "Idol")))))

# ::snt I'm down
# ::tokens ["I", "'m", "down"]
# ::lemmas ["i", "be", "down"]
(c15-0 / down-01
       :ARG1 (c15-1 / i))

# ::snt she's Amazing. Good her!
# ::tokens ["she", "'s", "Amazing", ".", "Good", "her", "!"]
# ::lemmas ["she", "be", "Amazing", ".", "good", "she", "!"]
(c17-1 / multi-sentence
       :snt1 (c17-3 / Amazing-03
                    :ARG1 (c17-2 / she))
       :snt2 (c17-4 / good-02
                    :ARG1 (c17-0 / she)))

# ::snt Can't WAIT!! Such a GREAT TALENT!!! Simon was way off on that call huh?
# ::tokens ["Ca", "n't", "WAIT", "!", "!", "Such", "a", "GREAT", "TALENT", "!", "!", "!", "Simon", "was", "way", "off", "on", "that", "call", "huh", "?"]
# ::lemmas ["can", "not", "wait", "!", "!", "such", "a", "great", "talent", "!", "!", "!", "Simon", "be", "way", "off", "on", "that", "call", "huh", "?"]
(c18-1 / multi-sentence
       :snt1 (c18-6 / possible-01
                    :ARG1 (c18-8 / WAIT-01)
                    :polarity -)
       :snt2 (c18-7 / wonderful-03
                    :degree (c18-3 / such))
       :snt3 (c18-0 / off
                    :op1 (c18-9 / call-02
                                :ARG0 (c18-2 / person
                                             :name (c18-4 / name
                                                          :op1 "Simon"))
                                :mod (c18-10 / that))
                    :ARG1-of (c18-5 / request-confirmation-91)
                    :degree (c18-11 / way)))

# ::snt I'm really going to miss Alicia
# ::tokens ["I", "'m", "really", "going", "to", "miss", "Alicia"]
# ::lemmas ["i", "be", "really", "go", "to", "miss", "Alicia"]
(c19-1 / miss-01
       :ARG0 (c19-4 / i)
       :ARG1 (c19-3 / person
                    :name (c19-0 / name
                                 :op1 "Alicia"))
       :degree (c19-2 / really))

# ::snt Way harsh
# ::tokens ["Way", "harsh"]
# ::lemmas ["way", "harsh"]
(c20-1 / harsh-02
       :degree (c20-0 / way))

# ::snt Perfect
# ::tokens ["Perfect"]
# ::lemmas ["perfect"]
(c21-0 / perfect-02)

# ::snt YES!
# ::tokens ["YES", "!"]
# ::lemmas ["yes", "!"]
(c22-0 / yes)

# ::snt number
# ::tokens ["number"]
# ::lemmas ["number"]
(c23-0 / number)

# ::snt And why Everyone hate Miley?
# ::tokens ["And", "why", "Everyone", "hate", "Miley", "?"]
# ::lemmas ["and", "why", "everyone", "hate", "Miley", "?"]
(c24-6 / and
       :op2 (c24-4 / cause-01
                   :ARG0 (c24-5 / amr-unknown)
                   :ARG1 (c24-2 / hate-01
                                :ARG0 (c24-1 / everyone)
                                :ARG1 (c24-3 / person
                                             :name (c24-0 / name
                                                          :op1 "Miley")))))

# ::snt Gwen. Not Miley. Please!!
# ::tokens ["Gwen", ".", "Not", "Miley", ".", "Please", "!", "!"]
# ::lemmas ["Gwen", ".", "not", "Miley", ".", "please", "!", "!"]
(c25-1 / multi-sentence
       :snt1 (c25-4 / person
                    :name (c25-0 / name
                                 :op1 "Gwen")
                    :mode expressive)
       :snt2 (c25-2 / person
                    :name (c25-3 / name
                                 :op1 "Miley")
                    :polarity -
                    :mode expressive))

# ::snt NO Miley...NO NO NO
# ::tokens ["NO", "Miley", "...", "NO", "NO", "NO"]
# ::lemmas ["no", "Miley", "...", "no", "no", "no"]
(c26-3 / say-01
       :ARG1 (c26-2 / no)
       :ARG2 (c26-0 / person
                    :name (c26-1 / name
                                 :op1 "Miley")))

# ::snt Alright
# ::tokens ["Alright"]
# ::lemmas ["alright"]
(c27-0 / all-right)

# ::snt Keep Gwen, she goes, so did I
# ::tokens ["Keep", "Gwen", ",", "she", "goes", ",", "so", "did", "I"]
# ::lemmas ["Keep", "Gwen", ",", "she", "go", ",", "so", "do", "i"]
(c28-3 / keep-02
       :ARG0 (c28-0 / you)
       :ARG1 (c28-2 / person
                    :name (c28-1 / name
                                 :op1 "Gwen"))
       :ARG0-of (c28-4 / cause-01
                       :ARG1 (c28-6 / go-02
                                    :ARG0 (c28-5 / i)
                                    :ARG1 c28-2))
       :mode imperative)

# ::snt Please keep Gwen or get another female judge.....NOT MILEY CYRUS!!!!! She is absolutely aweful!!!
# ::tokens ["Please", "keep", "Gwen", "or", "get", "another", "female", "judge", ".....", "NOT", "MILEY", "CYRUS", "!", "!", "!", "!", "!", "She", "is", "absolutely", "aweful", "!", "!", "!"]
# ::lemmas ["please", "keep", "Gwen", "or", "get", "another", "female", "judge", ".....", "not", "MILEY", "CYRUS", "!", "!", "!", "!", "!", "she", "be", "absolutely", "aweful", "!", "!", "!"]
(c29-3 / multi-sentence
       :snt1 (c29-0 / or
                    :op1 (c29-9 / keep-01
                                :ARG0 (c29-2 / you)
                                :ARG1 (c29-8 / person
                                             :name (c29-4 / name
                                                          :op1 "Gwen"))
                                :mode imperative
                                :polite +)
                    :op2 (c29-14 / get-01
                                 :ARG0 c29-2
                                 :ARG1 (c29-5 / person
                                              :ARG0-of (c29-11 / judge-01)
                                              :mod (c29-1 / female)
                                              :mod (c29-13 / another))
                                 :mode imperative
                                 :polite +))
       :snt2 (c29-15 / person
                     :name (c29-7 / name
                                  :op1 "MIley"
                                  :op2 "Crossell")
                     :domain (c29-6 / she)
                     :ARG0-of (c29-12 / awe-01
                                      :degree (c29-10 / absolute))
                     :polarity -))

# ::snt Next I want to see the headline " joins "
# ::tokens ["Next", "I", "want", "to", "see", "the", "headline", "\"", "joins", "\""]
# ::lemmas ["next", "i", "want", "to", "see", "the", "headline", "\"", "join", "\""]
(c30-3 / want-01
       :ARG0 (c30-5 / i)
       :ARG1 (c30-1 / see-01
                    :ARG0 c30-5
                    :ARG1 (c30-2 / headline-01
                                 :ARG2 (c30-4 / join-01)))
       :time (c30-0 / next))

# ::snt Guess my time will be freed up season don't need to watch will return if Gwen returns
# ::tokens ["Guess", "my", "time", "will", "be", "freed", "up", "season", "do", "n't", "need", "to", "watch", "will", "return", "if", "Gwen", "returns"]
# ::lemmas ["guess", "my", "time", "will", "be", "free", "up", "season", "do", "not", "need", "to", "watch", "will", "return", "if", "Gwen", "return"]
(c31-10 / guess-01
        :ARG0 (c31-8 / i)
        :ARG1 (c31-0 / free-up-03
                     :ARG1 (c31-9 / time
                                  :poss c31-8)
                     :time (c31-2 / season))
        :ARG0-of (c31-6 / cause-01
                        :ARG1 (c31-3 / return-01
                                     :ARG1 (c31-7 / watch-01
                                                  :ARG0 c31-8
                                                  :ARG1-of (c31-1 / need-01
                                                                  :ARG0 c31-8
                                                                  :polarity -))
                                     :condition (c31-11 / return-01
                                                        :ARG1 (c31-5 / person
                                                                     :name (c31-4 / name
                                                                                  :op1 "Gwen"))))))

# ::snt How many more times are yo going to tweet ffs
# ::tokens ["How", "many", "more", "times", "are", "yo", "going", "to", "tweet", "ffs"]
# ::lemmas ["how", "many", "more", "time", "be", "yo", "go", "to", "tweet", "ff"]
(c32-3 / tweet-02
       :ARG0 (c32-1 / you)
       :time (c32-4 / amr-unknown
                    :mod (c32-2 / more))
       :mod (c32-0 / fuck
                   :mode expressive))

# ::snt PLEASE have her not say "Aks". It will NEVER be a word. It is ALWAYS "ask"
# ::tokens ["PLEASE", "have", "her", "not", "say", "\"", "Aks", "\"", ".", "It", "will", "NEVER", "be", "a", "word", ".", "It", "is", "ALWAYS", "\"", "ask", "\""]
# ::lemmas ["please", "have", "she", "not", "say", "\"", "Aks", "\"", ".", "it", "will", "NEVER", "be", "a", "word", ".", "it", "be", "always", "\"", "ask", "\""]
(c33-2 / multi-sentence
       :snt1 (c33-6 / have-04
                    :ARG0 (c33-1 / you)
                    :ARG1 (c33-3 / say-01
                                 :ARG0 (c33-0 / she)
                                 :ARG1 (c33-10 / aks)
                                 :polarity -)
                    :mode imperative
                    :polite +)
       :snt2 (c33-7 / word
                    :time (c33-5 / ever)
                    :domain (c33-9 / it)
                    :polarity -)
       :snt3 (c33-11 / ask-01
                     :time (c33-8 / always)
                     :domain (c33-4 / it)))

# ::snt Seeded
# ::tokens ["Seeded"]
# ::lemmas ["seed"]
(c34-0 / seed-01)

# ::snt Alicia vai sair e eu nem vi ela. Deixem a Aliciaaaaaa
# ::tokens ["Alicia", "vai", "sair", "e", "eu", "nem", "vi", "ela", ".", "Deixem", "a", "Aliciaaaaaa"]
# ::lemmas ["Alicia", "vai", "sair", "e", "eu", "nem", "vi", "ela", ".", "Deixem", "a", "Aliciaaaaaa"]
(c35-1 / multi-sentence
       :snt1 (c35-11 / and
                     :op1 (c35-6 / vai
                                 :op1 (c35-3 / sair-00
                                             :ARG0 (c35-9 / person
                                                          :name (c35-2 / name
                                                                       :op1 "Alicia"))))
                     :op2 (c35-7 / eu
                                 :op1 (c35-8 / nem)
                                 :op2 (c35-12 / ela)))
       :snt2 (c35-0 / say-01
                    :ARG1 (c35-5 / Deixem
                                 :domain (c35-4 / person
                                                :name (c35-10 / name
                                                              :op1 "Alicia")
                                                :ARG2-of c35-0))))

# ::snt Wonderful choice.
# ::tokens ["Wonderful", "choice", "."]
# ::lemmas ["wonderful", "choice", "."]
(c36-0 / choose-01
       :ARG1-of (c36-1 / wonderful-03))

# ::snt I like Levine &amp; Shelton- but it's odd how they swap out women/POC while white guys stay putDo same on Shark Tank
# ::tokens ["I", "like", "Levine", "&", "amp", ";", "Shelton-", "but", "it", "'s", "odd", "how", "they", "swap", "out", "women", "/", "POC", "while", "white", "guys", "stay", "putDo", "same", "on", "Shark", "Tank"]
# ::lemmas ["i", "like", "Levine", "&", "amp", ";", "Shelton-", "but", "it", "be", "odd", "how", "they", "swap", "out", "woman", "/", "POC", "while", "white", "guy", "stay", "putdo", "same", "on", "Shark", "Tank"]
(c37-15 / contrast-01
        :ARG1 (c37-1 / like-01
                     :ARG0 (c37-20 / i)
                     :ARG1 (c37-10 / and
                                   :op1 (c37-17 / person
                                                :name (c37-16 / name
                                                              :op1 "Levine"))
                                   :op2 (c37-13 / person
                                                :name (c37-14 / name
                                                              :op1 "Shelton"))))
        :ARG2 (c37-6 / odd
                     :domain (c37-0 / swap-out-02
                                    :ARG0 (c37-9 / they)
                                    :ARG1 (c37-7 / slash
                                                 :op1 (c37-19 / woman)
                                                 :op2 (c37-4 / person
                                                             :ARG0-of (c37-3 / prostitute-01)))
                                    :ARG1-of c37-15
                                    :ARG2 (c37-5 / stay-01
                                                 :ARG1 (c37-11 / guy
                                                               :ARG1-of (c37-2 / white-02))
                                                 :ARG3 (c37-8 / put-03
                                                              :ARG0 c37-11))))
        :medium (c37-12 / broadcast-program
                        :name (c37-18 / name
                                      :op1 "Shark"
                                      :op2 "Tank")))

# ::snt Yeeeeaaaaasssssss!!!! Finally!
# ::tokens ["Yeeeeaaaaasssssss", "!", "!", "!", "!", "Finally", "!"]
# ::lemmas ["Yeeeeaaaaasssssss", "!", "!", "!", "!", "finally", "!"]
(c38-2 / multi-sentence
       :snt1 (c38-1 / yep
                    :mode expressive)
       :snt2 (c38-0 / final
                    :mode expressive))
