# ::snt Bravest performer ever. She made her entrance in a cage with a fuckin lion. Other girls can fucking SIT DOWN.
# ::tokens ["Bravest", "performer", "ever", ".", "She", "made", "her", "entrance", "in", "a", "cage", "with", "a", "fuckin", "lion", ".", "Other", "girls", "can", "fucking", "SIT", "DOWN", "."]
# ::lemmas ["bravest", "performer", "ever", ".", "she", "make", "her", "entrance", "in", "a", "cage", "with", "a", "fuckin", "lion", ".", "other", "girl", "can", "fucking", "SIT", "down", "."]
(c2-4 / multi-sentence
      :snt1 (c2-9 / person
                  :ARG0-of (c2-5 / perform-01
                                 :time (c2-7 / ever))
                  :ARG1-of (c2-8 / have-degree-91
                                 :ARG2 (c2-2 / bravo)
                                 :ARG3 (c2-10 / most)))
      :snt2 (c2-16 / enter-01
                   :ARG0 (c2-6 / she)
                   :ARG1 (c2-13 / cage)
                   :instrument (c2-11 / lion
                                      :mod (c2-0 / fucking)))
      :snt3 (c2-14 / possible-01
                   :ARG1 (c2-1 / shit-down-00
                               :ARG0 (c2-15 / girl
                                            :mod (c2-3 / other))
                               :mod (c2-12 / fucking))))

# ::snt Beautiful pic x
# ::tokens ["Beautiful", "pic", "x"]
# ::lemmas ["beautiful", "pic", "x"]
(c3-0 / beautiful-02
      :ARG1 (c3-1 / pic))

# ::snt I'd be the same if I met her
# ::tokens ["I", "'d", "be", "the", "same", "if", "I", "met", "her"]
# ::lemmas ["i", "would", "be", "the", "same", "if", "i", "meet", "she"]
(c4-3 / same-01
      :ARG1 (c4-2 / i)
      :condition (c4-1 / meet-02
                       :ARG0 c4-2
                       :ARG1 (c4-0 / she)))

# ::snt Haha was it a no touching rule? Happy for you to meet your hero
# ::tokens ["Haha", "was", "it", "a", "no", "touching", "rule", "?", "Happy", "for", "you", "to", "meet", "your", "hero"]
# ::lemmas ["Haha", "be", "it", "a", "no", "touching", "rule", "?", "happy", "for", "you", "to", "meet", "your", "hero"]
(c6-1 / multi-sentence
      :snt1 (c6-2 / rule-01
                  :ARG1 (c6-8 / touch-01
                              :polarity -)
                  :domain (c6-7 / it)
                  :mod (c6-4 / haha
                             :mode expressive))
      :snt2 (c6-6 / happy-01
                  :ARG0 (c6-5 / meet-02
                              :ARG0 (c6-0 / you)
                              :ARG1 (c6-3 / hero
                                          :poss c6-0))
                  :ARG1 c6-0))

# ::snt She's just a lassie
# ::tokens ["She", "'s", "just", "a", "lassie"]
# ::lemmas ["she", "be", "just", "a", "lassie"]
(c7-1 / lassie
      :domain (c7-2 / she)
      :mod (c7-0 / just))

# ::snt When you just that hot lol!
# ::tokens ["When", "you", "just", "that", "hot", "lol", "!"]
# ::lemmas ["when", "you", "just", "that", "hot", "lol", "!"]
(c8-0 / be-temporally-at-91
      :ARG2 (c8-2 / hot-03
                  :ARG1 (c8-1 / you)
                  :mod (c8-4 / just)
                  :degree (c8-6 / that))
      :ARG2-of (c8-3 / laugh-01
                     :ARG0 (c8-5 / i)
                     :manner (c8-7 / loud)
                     :mode expressive))

# ::snt Still love her though.
# ::tokens ["Still", "love", "her", "though", "."]
# ::lemmas ["still", "love", "she", "though", "."]
(c9-1 / have-concession-91
      :ARG1 (c9-2 / love-01
                  :ARG1 (c9-3 / she)
                  :mod (c9-0 / still)))

# ::snt This is a grown man? What a loser!
# ::tokens ["This", "is", "a", "grown", "man", "?", "What", "a", "loser", "!"]
# ::lemmas ["this", "be", "a", "grown", "man", "?", "what", "a", "loser", "!"]
(c10-0 / multi-sentence
       :snt1 (c10-1 / man
                    :ARG1-of (c10-6 / grown-04)
                    :domain (c10-3 / this)
                    :polarity (c10-5 / amr-unknown))
       :snt2 (c10-2 / lose-03
                    :degree (c10-4 / amr-unknown)
                    :mode expressive))

# ::snt Oh... I didn't know that people still went to Britney Spears concerts. When is enough enough???
# ::tokens ["Oh", "...", "I", "did", "n't", "know", "that", "people", "still", "went", "to", "Britney", "Spears", "concerts", ".", "When", "is", "enough", "enough", "?", "?", "?"]
# ::lemmas ["oh", "...", "i", "do", "not", "know", "that", "people", "still", "go", "to", "Britney", "Spears", "concert", ".", "when", "be", "enough", "enough", "?", "?", "?"]
(c11-2 / multi-sentence
       :snt1 (c11-9 / know-01
                    :ARG0 (c11-11 / i)
                    :ARG1 (c11-13 / go-02
                                  :ARG0 (c11-8 / person)
                                  :ARG4 (c11-10 / concert
                                                :mod (c11-3 / person
                                                            :name (c11-4 / name
                                                                         :op1 "Britney"
                                                                         :op2 "Spears")))
                                  :mod (c11-5 / still))
                    :mod (c11-0 / oh
                                :mode expressive)
                    :polarity -)
       :snt2 (c11-1 / be-it-06
                    :ARG1 (c11-7 / have-quant-91
                                 :ARG3 (c11-6 / enough))
                    :time (c11-12 / amr-unknown)))

# ::snt She still has fans?....
# ::tokens ["She", "still", "has", "fans", "?", "...."]
# ::lemmas ["she", "still", "have", "fan", "?", "...."]
(c12-3 / have-03
       :polarity (c12-4 / amr-unknown)
       :ARG0 (c12-2 / she)
       :ARG1 (c12-0 / fan)
       :mod (c12-1 / still))

# ::snt Oh, baby, babyHow was I supposed to knowThat something wasn't right here?
# ::tokens ["Oh", ",", "baby", ",", "babyHow", "was", "I", "supposed", "to", "knowThat", "something", "was", "n't", "right", "here", "?"]
# ::lemmas ["oh", ",", "baby", ",", "babyhow", "be", "i", "suppose", "to", "knowthat", "something", "be", "not", "right", "here", "?"]
(c13-3 / multi-sentence
       :snt1 (c13-0 / oh
                    :mode expressive)
       :snt2 (c13-2 / baby)
       :snt3 (c13-6 / baby
                    :manner (c13-10 / amr-unknown)
                    :mode expressive)
       :snt4 (c13-4 / suppose-02
                    :ARG1 (c13-9 / i)
                    :ARG2 (c13-7 / know-01
                                 :ARG0 c13-9
                                 :ARG1 (c13-1 / something
                                              :location (c13-8 / here
                                                               :mod (c13-5 / right)
                                                               :polarity -)))))

# ::snt ?? I'm shocked? She's still performing?
# ::tokens ["?", "?", "I", "'m", "shocked", "?", "She", "'s", "still", "performing", "?"]
# ::lemmas ["?", "?", "i", "be", "shocked", "?", "she", "be", "still", "perform", "?"]
(c14-1 / multi-sentence
       :snt1 (c14-2 / shock-01
                    :polarity (c14-5 / amr-unknown)
                    :ARG1 (c14-4 / i))
       :snt2 (c14-3 / perform-01
                    :ARG0 (c14-0 / she)
                    :polarity (c14-6 / amr-unknown)
                    :mod (c14-7 / still)))

# ::snt Britney Spears still has fans?
# ::tokens ["Britney", "Spears", "still", "has", "fans", "?"]
# ::lemmas ["Britney", "Spears", "still", "have", "fan", "?"]
(c15-3 / have-03
       :ARG0 (c15-4 / person
                    :name (c15-1 / name
                                 :op1 "Britney"
                                 :op2 "Spears"))
       :ARG1 (c15-0 / fan)
       :polarity (c15-5 / amr-unknown)
       :mod (c15-2 / still))

# ::snt After what happened at the Ariana Grande concert in Manchester, I'd worry about any star's sanity if they weren't afraid. This is a crazy
# ::tokens ["After", "what", "happened", "at", "the", "Ariana", "Grande", "concert", "in", "Manchester", ",", "I", "'d", "worry", "about", "any", "star", "'s", "sanity", "if", "they", "were", "n't", "afraid", ".", "This", "is", "a", "crazy"]
# ::lemmas ["after", "what", "happen", "at", "the", "Ariana", "Grande", "concert", "in", "Manchester", ",", "i", "would", "worry", "about", "any", "star", "'s", "sanity", "if", "they", "be", "not", "afraid", ".", "this", "be", "a", "crazy"]
(c16-2 / multi-sentence
       :snt1 (c16-7 / worry-01
                    :ARG0 (c16-4 / sanity
                                 :poss (c16-0 / star
                                              :mod (c16-12 / any)))
                    :ARG1 (c16-11 / i)
                    :condition (c16-1 / fear-01
                                      :ARG0 c16-0
                                      :polarity -)
                    :time (c16-13 / after
                                  :op1 (c16-5 / event
                                              :location (c16-8 / concert
                                                               :name (c16-3 / name
                                                                            :op1 "Ariana"
                                                                            :op2 "Grande")
                                                               :location (c16-14 / city
                                                                                 :name (c16-6 / name
                                                                                              :op1 "Manchester"))))))
       :snt2 (c16-9 / crazy-03
                    :ARG1 (c16-10 / this)))

# ::snt Can't have Taylor Swift getting all the attention.
# ::tokens ["Ca", "n't", "have", "Taylor", "Swift", "getting", "all", "the", "attention", "."]
# ::lemmas ["can", "not", "have", "Taylor", "Swift", "get", "all", "the", "attention", "."]
(c17-2 / possible-01
       :ARG1 (c17-5 / get-01
                    :ARG0 (c17-1 / person
                                 :name (c17-0 / name
                                              :op1 "Taylor"
                                              :op2 "Swift"))
                    :ARG1 (c17-4 / attend-02
                                 :ARG1 c17-1
                                 :mod (c17-3 / all)))
       :polarity -)

# ::snt Was it Kanye trying to steal her mic?
# ::tokens ["Was", "it", "Kanye", "trying", "to", "steal", "her", "mic", "?"]
# ::lemmas ["be", "it", "Kanye", "try", "to", "steal", "her", "mic", "?"]
(c18-7 / try-01
       :ARG0 (c18-5 / person
                    :name (c18-1 / name
                                 :op1 "Kanye"))
       :ARG1 (c18-3 / steal-01
                    :ARG0 c18-5
                    :ARG1 (c18-2 / mic
                                 :poss (c18-0 / she)))
       :domain (c18-6 / it)
       :polarity (c18-4 / amr-unknown))

# ::snt What Trump Just Did Shows How Different He Will Be From Obama
# ::tokens ["What", "Trump", "Just", "Did", "Shows", "How", "Different", "He", "Will", "Be", "From", "Obama"]
# ::lemmas ["what", "Trump", "just", "do", "show", "how", "different", "he", "will", "be", "from", "Obama"]
(c19-2 / show-01
       :ARG0 (c19-7 / thing
                    :ARG1-of (c19-8 / do-02
                                    :ARG0 (c19-4 / person
                                                 :name (c19-0 / name
                                                              :op1 "Trump"))
                                    :time (c19-6 / just)))
       :ARG1 (c19-9 / thing
                    :degree-of (c19-5 / differ-02
                                      :ARG1 c19-4
                                      :ARG2 (c19-1 / person
                                                   :name (c19-3 / name
                                                                :op1 "Obama")))))

# ::snt WATCH: -Year-Old Has MELTDOWN Because Pollution is SOOOOOO Bad
# ::tokens ["WATCH", ":", "-Year", "-", "Old", "Has", "MELTDOWN", "Because", "Pollution", "is", "SOOOOOO", "Bad"]
# ::lemmas ["watch", ":", "-year", "-", "Old", "have", "MELTDOWN", "because", "Pollution", "be", "SOOOOOO", "bad"]
(c20-6 / watch-01
       :ARG1 (c20-7 / cause-01
                    :ARG0 (c20-0 / bad-07
                                 :ARG1 (c20-4 / pollute-01)
                                 :degree (c20-3 / so))
                    :ARG1 (c20-5 / label-01
                                 :ARG1 (c20-2 / person
                                              :age (c20-8 / temporal-quantity
                                                          :unit (c20-1 / year)
                                                          :quant 12)))))

# ::snt Canadian Man Arrested for Islamaphobic Social Media Posts
# ::tokens ["Canadian", "Man", "Arrested", "for", "Islamaphobic", "Social", "Media", "Posts"]
# ::lemmas ["Canadian", "man", "arrest", "for", "Islamaphobic", "Social", "Media", "post"]
(c21-8 / arrest-01
       :ARG1 (c21-1 / man
                    :mod (c21-7 / country
                                :name (c21-0 / name
                                             :op1 "Canada")))
       :ARG2 (c21-5 / post-01
                    :ARG0 c21-1
                    :ARG1 (c21-4 / media
                                 :mod (c21-2 / social))
                    :mod (c21-3 / religious-group
                                :name (c21-6 / name
                                             :op1 "Islamaphobic"))))

# ::snt Death Rattle Now Audible from the Bernie Sanders Campaign
# ::tokens ["Death", "Rattle", "Now", "Audible", "from", "the", "Bernie", "Sanders", "Campaign"]
# ::lemmas ["death", "Rattle", "now", "audible", "from", "the", "Bernie", "Sanders", "campaign"]
(c22-4 / possible-01
       :ARG1 (c22-6 / Audible
                    :medium (c22-5 / campaign-01
                                   :ARG0 (c22-1 / person
                                                :name (c22-0 / name
                                                             :op1 "Bernie"
                                                             :op2 "Sanders")))
                    :time (c22-3 / now)
                    :topic (c22-2 / rattle-01
                                  :ARG1 (c22-7 / die-01))))

# ::snt haha yeah I literally begged everyone but I guess everyone hates me yeah I don't know any big Britney fans in real life
# ::tokens ["haha", "yeah", "I", "literally", "begged", "everyone", "but", "I", "guess", "everyone", "hates", "me", "yeah", "I", "do", "n't", "know", "any", "big", "Britney", "fans", "in", "real", "life"]
# ::lemmas ["haha", "yeah", "i", "literally", "beg", "everyone", "but", "i", "guess", "everyone", "hate", "i", "yeah", "i", "do", "not", "know", "any", "big", "Britney", "fan", "in", "real", "life"]
(c23-2 / multi-sentence
       :snt1 (c23-11 / contrast-01
                     :ARG1 (c23-1 / beg-01
                                  :ARG0 (c23-12 / i)
                                  :ARG2 (c23-6 / everyone)
                                  :manner (c23-8 / literal))
                     :ARG2 (c23-13 / guess-01
                                   :ARG0 c23-12
                                   :ARG1 (c23-7 / hate-01
                                                :ARG0 c23-6
                                                :ARG1 c23-12)))
       :snt2 (c23-9 / know-02
                    :ARG0 (c23-4 / i)
                    :ARG1 (c23-0 / fan
                                 :mod (c23-10 / big)
                                 :mod (c23-15 / country
                                              :name (c23-3 / name
                                                           :op1 "Great"
                                                           :op2 "Britain")))
                    :location (c23-14 / life
                                      :ARG1-of (c23-5 / real-04))
                    :polarity -))

# ::snt I'm excited!
# ::tokens ["I", "'m", "excited", "!"]
# ::lemmas ["i", "be", "excited", "!"]
(c24-0 / excite-01
       :ARG1 (c24-1 / i))

# ::snt holy shit that's so cheap, problem would be the semester would start so it'd have to be a weekend
# ::tokens ["holy", "shit", "that", "'s", "so", "cheap", ",", "problem", "would", "be", "the", "semester", "would", "start", "so", "it", "'d", "have", "to", "be", "a", "weekend"]
# ::lemmas ["holy", "shit", "that", "be", "so", "cheap", ",", "problem", "would", "be", "the", "semester", "would", "start", "so", "it", "would", "have", "to", "be", "a", "weekend"]
(c25-2 / multi-sentence
       :snt1 (c25-7 / cheap-02
                    :ARG1 (c25-9 / that)
                    :degree (c25-3 / so)
                    :mod (c25-0 / shit
                                :mod (c25-5 / holy)
                                :mode expressive))
       :snt2 (c25-6 / problem
                    :domain (c25-11 / start-01
                                    :ARG1 (c25-4 / semester)
                                    :ARG0-of (c25-10 / cause-01
                                                     :ARG1 (c25-1 / obligate-01
                                                                  :ARG2 (c25-8 / weekend))))))

# ::snt alright I am too
# ::tokens ["alright", "I", "am", "too"]
# ::lemmas ["alright", "i", "be", "too"]
(c26-0 / right-06
       :ARG2 (c26-1 / have-mod-91
                    :ARG1 (c26-2 / i)
                    :ARG2 (c26-3 / too)))

# ::snt oh not bad! I was expecting it to be more lol
# ::tokens ["oh", "not", "bad", "!", "I", "was", "expecting", "it", "to", "be", "more", "lol"]
# ::lemmas ["oh", "not", "bad", "!", "i", "be", "expect", "it", "to", "be", "more", "lol"]
(c27-2 / multi-sentence
       :snt1 (c27-1 / bad-07
                    :mod (c27-0 / oh)
                    :polarity -
                    :mode expressive)
       :snt2 (c27-4 / expect-01
                    :ARG0 (c27-7 / i)
                    :ARG1 (c27-5 / more
                                 :domain (c27-3 / it))
                    :ARG2-of (c27-6 / laugh-01
                                    :ARG0 c27-7
                                    :manner (c27-8 / loud)
                                    :mode expressive)))

# ::snt hell yeah XD how much you spent in total going there last time?
# ::tokens ["hell", "yeah", "XD", "how", "much", "you", "spent", "in", "total", "going", "there", "last", "time", "?"]
# ::lemmas ["hell", "yeah", "XD", "how", "much", "you", "spend", "in", "total", "go", "there", "last", "time", "?"]
(c28-1 / multi-sentence
       :snt1 (c28-0 / yeah
                    :mod (c28-5 / hell)
                    :mode expressive)
       :snt2 (c28-3 / spend-02
                    :ARG0 (c28-9 / you)
                    :ARG1 (c28-2 / go-02
                                 :ARG0 c28-9
                                 :ARG4 (c28-8 / there)
                                 :time (c28-10 / time
                                               :mod (c28-6 / last)))
                    :ARG3 (c28-4 / amr-unknown
                                 :ARG2-of (c28-7 / total-01))))

# ::snt yes
# ::tokens ["yes"]
# ::lemmas ["yes"]
(c29-0 / yes)

# ::snt yeah idc about the days either I just wanna see her show lol
# ::tokens ["yeah", "idc", "about", "the", "days", "either", "I", "just", "wanna", "see", "her", "show", "lol"]
# ::lemmas ["yeah", "idc", "about", "the", "day", "either", "i", "just", "wanna", "see", "she", "show", "lol"]
(c30-7 / and
       :op1 (c30-1 / yeah
                   :mode expressive)
       :op2 (c30-4 / want-01
                   :ARG0 (c30-6 / i)
                   :ARG1 (c30-2 / see-01
                                :ARG0 c30-6
                                :ARG1 (c30-0 / show-04
                                             :ARG0 (c30-9 / she)))
                   :mod (c30-5 / just)
                   :ARG2-of (c30-3 / laugh-01
                                   :ARG0 c30-6
                                   :manner (c30-8 / loud))))

# ::snt hopefully B9 is out by then
# ::tokens ["hopefully", "B9", "is", "out", "by", "then"]
# ::lemmas ["hopefully", "B9", "be", "out", "by", "then"]
(c31-4 / hope-01
       :ARG1 (c31-0 / out-05
                    :ARG1 (c31-1 / broadcast-program
                                 :name (c31-2 / name
                                              :op1 "B9"))
                    :time (c31-3 / by
                                 :op1 (c31-5 / then))))

# ::snt I'm down any time after may
# ::tokens ["I", "'m", "down", "any", "time", "after", "may"]
# ::lemmas ["i", "be", "down", "any", "time", "after", "may"]
(c32-1 / possible-01
       :ARG1 (c32-5 / down-03
                    :ARG1 (c32-2 / i)
                    :time (c32-3 / after
                                 :op1 (c32-0 / now)
                                 :mod (c32-4 / any))))

# ::snt I haven't seen her yet ;-; but she's slaying hard I must witness it live
# ::tokens ["I", "have", "n't", "seen", "her", "yet", ";", "-", ";", "but", "she", "'s", "slaying", "hard", "I", "must", "witness", "it", "live"]
# ::lemmas ["i", "have", "not", "see", "she", "yet", ";", "-", ";", "but", "she", "be", "slay", "hard", "i", "must", "witness", "it", "live"]
(c33-3 / multi-sentence
       :snt1 (c33-4 / see-01
                    :ARG0 (c33-11 / i)
                    :ARG1 (c33-0 / she)
                    :time (c33-2 / yet)
                    :polarity -)
       :snt2 (c33-9 / contrast-01
                    :ARG1 (c33-12 / slay-01
                                  :ARG0 (c33-5 / she)
                                  :ARG1-of (c33-7 / hard-02))
                    :ARG2 (c33-1 / obligate-01
                                 :ARG1 (c33-10 / witness-01
                                               :ARG0 (c33-6 / i)
                                               :ARG1 c33-12
                                               :manner (c33-8 / live)))))

# ::snt oh shit XD Chicago lol
# ::tokens ["oh", "shit", "XD", "Chicago", "lol"]
# ::lemmas ["oh", "shit", "XD", "Chicago", "lol"]
(c34-3 / say-01
       :ARG0 (c34-6 / i)
       :ARG1 (c34-0 / shit
                    :mod (c34-1 / oh))
       :ARG2 (c34-5 / city
                    :name (c34-2 / name
                                 :op1 "Chicago"))
       :ARG2-of (c34-4 / laugh-01
                       :ARG0 c34-6
                       :manner (c34-7 / loud)
                       :mode expressive))

# ::snt I'm serious though Dx lol where are you from? :3
# ::tokens ["I", "'m", "serious", "though", "Dx", "lol", "where", "are", "you", "from", "?", ":3"]
# ::lemmas ["i", "be", "serious", "though", "Dx", "lol", "where", "be", "you", "from", "?", ":3"]
(c35-3 / multi-sentence
       :snt1 (c35-6 / have-concession-91
                    :ARG2 (c35-5 / serious-01
                                 :ARG1 (c35-9 / i)))
       :snt2 (c35-0 / say-01
                    :ARG0 c35-9)
       :ARG1 (c35-1 / be-from-91
                    :ARG1 (c35-2 / you)
                    :ARG2 (c35-10 / amr-unknown))
       :ARG2 (c35-7 / person
                    :name (c35-4 / name
                                 :op1 "Dx"))
       :mod (c35-8 / laugh-01
                   :ARG0 c35-9
                   :manner (c35-11 / loud)))

# ::snt dogs are good about that.
# ::tokens ["dogs", "are", "good", "about", "that", "."]
# ::lemmas ["dog", "be", "good", "about", "that", "."]
(c36-0 / good-02
       :ARG1 (c36-1 / dog)
       :topic (c36-2 / that))

# ::snt she's already forgotten it lol
# ::tokens ["she", "'s", "already", "forgotten", "it", "lol"]
# ::lemmas ["she", "be", "already", "forget", "it", "lol"]
(c37-0 / forget-01
       :ARG0 (c37-1 / she)
       :ARG1 (c37-3 / it)
       :time (c37-4 / already)
       :ARG2-of (c37-2 / laugh-01
                       :ARG0 c37-1
                       :manner (c37-5 / loud)))

# ::snt I hope she recovers quickly from that traumatic experience.
# ::tokens ["I", "hope", "she", "recovers", "quickly", "from", "that", "traumatic", "experience", "."]
# ::lemmas ["i", "hope", "she", "recover", "quickly", "from", "that", "traumatic", "experience", "."]
(c38-3 / hope-01
       :ARG0 (c38-4 / i)
       :ARG1 (c38-1 / recover-01
                    :ARG1 (c38-0 / she)
                    :ARG2 (c38-2 / experience-01
                                 :ARG0 c38-0
                                 :ARG1-of (c38-5 / traumatize-01)
                                 :mod (c38-7 / that))
                    :ARG1-of (c38-6 / quick-02)))

# ::snt Hhmmm.... did the song just go on
# ::tokens ["Hhmmm", "....", "did", "the", "song", "just", "go", "on"]
# ::lemmas ["Hhmmm", "....", "do", "the", "song", "just", "go", "on"]
(c39-4 / go-on-15
       :ARG1 (c39-0 / song)
       :polarity (c39-3 / amr-unknown)
       :mod (c39-2 / just)
       :mod (c39-1 / hmm
                   :mode expressive))

# ::snt I seriously would not have Olympics in South Korea . It's a Krazy time . God bless us all.
# ::tokens ["I", "seriously", "would", "not", "have", "Olympics", "in", "South", "Korea", ".", "It", "'s", "a", "Krazy", "time", ".", "God", "bless", "us", "all", "."]
# ::lemmas ["i", "seriously", "would", "not", "have", "Olympics", "in", "South", "Korea", ".", "it", "be", "a", "Krazy", "time", ".", "God", "bless", "we", "all", "."]
(c40-1 / multi-sentence
       :snt1 (c40-3 / serious-01
                    :ARG0 (c40-11 / i)
                    :ARG2 (c40-5 / have-03
                                 :ARG0 c40-11
                                 :ARG1 (c40-13 / game
                                               :name (c40-2 / name
                                                            :op1 "Olympics"))
                                 :location (c40-9 / country
                                                  :name (c40-6 / name
                                                               :op1 "South"
                                                               :op2 "Korea"))
                                 :polarity -))
       :snt2 (c40-12 / time
                     :ARG1-of (c40-14 / crazy-03))
       :snt3 (c40-0 / bless-01
                    :ARG0 (c40-7 / person
                                 :name (c40-8 / name
                                              :op1 "God"))
                    :ARG1 (c40-10 / we
                                  :mod (c40-4 / all))))

# ::snt Wackopeople are Krazy
# ::tokens ["Wackopeople", "are", "Krazy"]
# ::lemmas ["Wackopeople", "be", "Krazy"]
(c41-0 / crazy-03
       :ARG1 (c41-1 / whackopeople))

# ::snt Hi everyone, please click here to support my GoFundMe campaign, Medical
# ::tokens ["Hi", "everyone", ",", "please", "click", "here", "to", "support", "my", "GoFundMe", "campaign", ",", "Medical"]
# ::lemmas ["hi", "everyone", ",", "please", "click", "here", "to", "support", "my", "GoFundMe", "campaign", ",", "Medical"]
(c42-4 / say-01
       :ARG1 (c42-10 / and
                     :op1 (c42-6 / hi)
                     :op2 (c42-7 / click-01
                                 :ARG0 (c42-2 / you)
                                 :ARG1 (c42-8 / here)
                                 :purpose (c42-0 / support-01
                                                 :ARG0 c42-2
                                                 :ARG1 (c42-11 / campaign-01
                                                               :ARG0 (c42-9 / i)
                                                               :ARG1 (c42-1 / organization
                                                                            :name (c42-3 / name
                                                                                         :op1 "GoFundMe"))))
                                 :mode imperative
                                 :polite +))
       :ARG2 (c42-5 / everyone))

# ::snt :how are you not all over this?? Wtf?
# ::tokens [":", "how", "are", "you", "not", "all", "over", "this", "?", "?", "Wtf", "?"]
# ::lemmas [":", "how", "be", "you", "not", "all", "over", "this", "?", "?", "Wtf", "?"]
(c43-2 / multi-sentence
       :snt1 (c43-3 / all-over
                    :domain (c43-1 / you)
                    :manner (c43-4 / amr-unknown)
                    :topic (c43-5 / this)
                    :polarity -)
       :snt2 c43-4
       :mod (c43-0 / fuck
                   :mode expressive))

# ::snt Scary
# ::tokens ["Scary"]
# ::lemmas ["scary"]
(c44-0 / scary-03)

# ::snt Cuz rushing a stage w/ + dudes that can wreck you is a good choice.
# ::tokens ["Cuz", "rushing", "a", "stage", "w/", "+", "dudes", "that", "can", "wreck", "you", "is", "a", "good", "choice", "."]
# ::lemmas ["cuz", "rush", "a", "stage", "w/", "+", "dude", "that", "can", "wreck", "you", "be", "a", "good", "choice", "."]
(c45-4 / cause-01
       :ARG0 (c45-9 / choose-01
                    :ARG1 (c45-2 / rush-01
                                 :ARG1 (c45-0 / you)
                                 :ARG2 (c45-6 / and
                                              :op1 (c45-1 / stage)
                                              :op2 (c45-8 / dude
                                                          :ARG0-of (c45-5 / wreck-01
                                                                          :ARG1 c45-0
                                                                          :ARG1-of (c45-3 / possible-01)))))
                    :ARG1-of (c45-7 / good-02)))

# ::snt No. I teach in south central VA.
# ::tokens ["No", ".", "I", "teach", "in", "south", "central", "VA", "."]
# ::lemmas ["no", ".", "i", "teach", "in", "south", "central", "VA", "."]
(c46-2 / multi-sentence
       :snt1 (c46-1 / no)
       :snt2 (c46-7 / teach-01
                    :ARG0 (c46-6 / i)
                    :location (c46-3 / state
                                     :name (c46-4 / name
                                                  :op1 "VA")
                                     :location (c46-5 / center
                                                      :mod (c46-0 / south)))))

# ::snt my sister told me not to FaceTime her at night because it scares her
# ::tokens ["my", "sister", "told", "me", "not", "to", "FaceTime", "her", "at", "night", "because", "it", "scares", "her"]
# ::lemmas ["my", "sister", "tell", "i", "not", "to", "FaceTime", "she", "at", "night", "because", "it", "scare", "she"]
(c47-8 / tell-01
       :ARG0 (c47-5 / person
                    :ARG0-of (c47-4 / have-rel-role-91
                                    :ARG1 (c47-7 / i)
                                    :ARG2 (c47-3 / sister)))
       :ARG1 (c47-0 / FaceTime-00
                    :ARG0 c47-7
                    :ARG1 c47-5
                    :time (c47-9 / date-entity
                                 :dayperiod (c47-2 / night))
                    :ARG1-of (c47-6 / cause-01
                                    :ARG0 (c47-1 / scare-01
                                                 :ARG0 c47-0
                                                 :ARG1 c47-5))
                    :polarity -)
       :ARG2 c47-7)

# ::snt I could almost pull it off as my costume
# ::tokens ["I", "could", "almost", "pull", "it", "off", "as", "my", "costume"]
# ::lemmas ["i", "could", "almost", "pull", "it", "off", "as", "my", "costume"]
(c48-2 / possible-01
       :ARG1 (c48-0 / pull-off-03
                    :ARG0 (c48-4 / i)
                    :ARG1 (c48-1 / it)
                    :prep-as (c48-3 / costume
                                    :poss c48-4))
       :mod (c48-5 / almost))

# ::snt I'm excited to see that tonight
# ::tokens ["I", "'m", "excited", "to", "see", "that", "tonight"]
# ::lemmas ["i", "be", "excited", "to", "see", "that", "tonight"]
(c49-2 / excite-01
       :ARG0 (c49-1 / see-01
                    :ARG0 (c49-3 / i)
                    :ARG1 (c49-4 / that)
                    :time (c49-5 / date-entity
                                 :dayperiod (c49-0 / night)
                                 :mod (c49-6 / today)))
       :ARG1 c49-3)

# ::snt my friend just told me to"take the hat off and let the sun grow your hair back." I'm not a chia pet. But thanks
# ::tokens ["my", "friend", "just", "told", "me", "to\"take", "the", "hat", "off", "and", "let", "the", "sun", "grow", "your", "hair", "back", ".", "\"", "I", "'m", "not", "a", "chia", "pet", ".", "But", "thanks"]
# ::lemmas ["my", "friend", "just", "tell", "i", "to\"take", "the", "hat", "off", "and", "let", "the", "sun", "grow", "your", "hair", "back", ".", "\"", "i", "be", "not", "a", "chia", "pet", ".", "but", "thank"]
(c50-13 / multi-sentence
        :snt1 (c50-8 / tell-01
                     :ARG0 (c50-18 / person
                                   :ARG0-of (c50-5 / have-rel-role-91
                                                   :ARG1 (c50-20 / i)
                                                   :ARG2 (c50-17 / friend)))
                     :ARG1 (c50-7 / and
                                  :op1 (c50-16 / take-off-07
                                               :ARG0 (c50-2 / you
                                                            :part (c50-19 / hair))
                                               :ARG1 (c50-4 / hat))
                                  :op2 (c50-1 / let-01
                                              :ARG0 c50-2
                                              :ARG1 (c50-9 / grow-01
                                                           :ARG0 (c50-0 / sun)
                                                           :ARG1 c50-19
                                                           :direction (c50-12 / back))))
                     :ARG2 c50-20
                     :time (c50-6 / just))
        :snt2 (c50-14 / pet
                      :mod (c50-15 / chia)
                      :domain (c50-3 / i)
                      :polarity -)
        :snt3 (c50-11 / contrast-01
                      :ARG2 (c50-21 / thank-01
                                    :ARG0 (c50-10 / i))))
