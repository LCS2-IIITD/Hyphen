# ::snt Did this need confirming? Lol
# ::tokens ["Did", "this", "need", "confirming", "?", "Lol"]
# ::lemmas ["do", "this", "need", "confirm", "?", "Lol"]
(c1-1 / multi-sentence
      :snt1 (c1-0 / need-01
                  :polarity (c1-2 / amr-unknown)
                  :ARG0 (c1-6 / this)
                  :ARG1 (c1-4 / confirm-01
                              :ARG1 c1-6))
      :snt2 (c1-3 / laugh-01
                  :ARG0 (c1-5 / i)
                  :manner (c1-7 / loud)
                  :mode expressive))

# ::snt Still have yet to hear anyone say it wasn't him.
# ::tokens ["Still", "have", "yet", "to", "hear", "anyone", "say", "it", "was", "n't", "him", "."]
# ::lemmas ["still", "have", "yet", "to", "hear", "anyone", "say", "it", "be", "not", "he", "."]
(c2-5 / have-11
      :ARG0 (c2-7 / i)
      :ARG1 (c2-1 / yet)
      :ARG2 (c2-6 / hear-01
                  :ARG0 c2-7
                  :ARG1 (c2-2 / say-01
                              :ARG0 (c2-8 / anyone)
                              :ARG1 (c2-4 / have-mod-91
                                          :ARG1 (c2-3 / it)
                                          :ARG2 (c2-9 / he)
                                          :polarity -)))
      :mod (c2-0 / still))

# ::snt Has actually publicly questioned the authenticity of the tape or is it just hearsay source frenzied news ?
# ::tokens ["Has", "actually", "publicly", "questioned", "the", "authenticity", "of", "the", "tape", "or", "is", "it", "just", "hearsay", "source", "frenzied", "news", "?"]
# ::lemmas ["have", "actually", "publicly", "question", "the", "authenticity", "of", "the", "tape", "or", "be", "it", "just", "hearsay", "source", "frenzied", "news", "?"]
(c3-3 / amr-choice
      :op1 (c3-9 / question-03
                 :ARG1 (c3-7 / authentic-02
                             :ARG1 (c3-8 / tape))
                 :ARG1-of (c3-4 / public-02)
                 :ARG1-of (c3-5 / actual-02))
      :op2 (c3-1 / news
                 :ARG1-of (c3-0 / frenzy-00)
                 :mod (c3-2 / source)
                 :mod (c3-6 / just)))

# ::snt So ??? Bill Clinton.
# ::tokens ["So", "?", "?", "?", "Bill", "Clinton", "."]
# ::lemmas ["so", "?", "?", "?", "Bill", "Clinton", "."]
(c4-3 / say-01
      :ARG1 (c4-0 / so)
      :ARG2 (c4-2 / person
                  :name (c4-1 / name
                              :op1 "Bill"
                              :op2 "Clinton")))

# ::snt So Billy, You releasing those tapes bit You in the $$. YourPlan backfired.
# ::tokens ["So", "Billy", ",", "You", "releasing", "those", "tapes", "bit", "You", "in", "the", "$", "$", ".", "YourPlan", "backfired", "."]
# ::lemmas ["so", "Billy", ",", "you", "release", "those", "tape", "bit", "you", "in", "the", "$", "$", ".", "YourPlan", "backfire", "."]
(c5-3 / say-01
      :ARG0 (c5-8 / i)
      :ARG1 (c5-9 / and
                  :op1 (c5-0 / bite-01
                             :ARG0 (c5-4 / release-01
                                         :ARG0 (c5-6 / person
                                                     :name (c5-1 / name
                                                                 :op1 "Billy"))
                                         :ARG1 (c5-7 / tape
                                                     :mod (c5-11 / that)))
                             :ARG1 c5-6
                             :location (c5-10 / dollar))
                  :op2 (c5-5 / backfire-01
                             :ARG1 (c5-2 / plan-01
                                         :ARG0 c5-6)))
      :ARG2 c5-6)

# ::snt On the other hand, maybe he's the creep he appeared to be in trying to destroy Trump
# ::tokens ["On", "the", "other", "hand", ",", "maybe", "he", "'s", "the", "creep", "he", "appeared", "to", "be", "in", "trying", "to", "destroy", "Trump"]
# ::lemmas ["on", "the", "other", "hand", ",", "maybe", "he", "be", "the", "creep", "he", "appear", "to", "be", "in", "try", "to", "destroy", "Trump"]
(c6-4 / contrast-01
      :ARG2 (c6-3 / possible-01
                  :ARG1 (c6-8 / creep
                              :domain (c6-2 / he)
                              :ARG1-of (c6-6 / appear-02)
                              :manner (c6-5 / try-01
                                            :ARG0 c6-2
                                            :ARG1 (c6-7 / destroy-01
                                                        :ARG0 c6-2
                                                        :ARG1 (c6-1 / person
                                                                    :name (c6-0 / name
                                                                                :op1 "Trump")))))))

# ::snt Only when someone targets him for harm are THRY HATMEFM God protects his ownAnd that is Trump. You to make it you. Pray.
# ::tokens ["Only", "when", "someone", "targets", "him", "for", "harm", "are", "THRY", "HATMEFM", "God", "protects", "his", "ownAnd", "that", "is", "Trump", ".", "You", "to", "make", "it", "you", ".", "Pray", "."]
# ::lemmas ["only", "when", "someone", "target", "he", "for", "harm", "be", "thry", "HATMEFM", "God", "protect", "his", "ownand", "that", "be", "Trump", ".", "you", "to", "make", "it", "you", ".", "pray", "."]
(c7-4 / multi-sentence
      :snt1 (c7-8 / have-condition-91
                  :ARG1 (c7-9 / protect-01
                              :ARG0 (c7-5 / person
                                          :name (c7-3 / name
                                                      :op1 "God"))
                              :ARG1 (c7-15 / person
                                           :name (c7-10 / name
                                                        :op1 "Trump")))
                  :ARG2 (c7-14 / target-01
                               :ARG0 (c7-6 / someone)
                               :ARG1 (c7-13 / he)
                               :ARG2 (c7-7 / harm-01
                                           :ARG0 c7-6
                                           :ARG1 c7-13)
                               :mod (c7-1 / only)))
      :snt2 (c7-12 / pray-01
                   :ARG0 (c7-2 / you)
                   :mode imperative)
      :snt3 (c7-11 / make-02
                   :ARG0 (c7-16 / you)
                   :ARG1 (c7-0 / you)))

# ::snt Anything that targets him for harm. God looks after His own.
# ::tokens ["Anything", "that", "targets", "him", "for", "harm", ".", "God", "looks", "after", "His", "own", "."]
# ::lemmas ["anything", "that", "target", "he", "for", "harm", ".", "God", "look", "after", "his", "own", "."]
(c8-0 / multi-sentence
      :snt1 (c8-1 / anything
                  :ARG0-of (c8-8 / target-01
                                 :ARG1 (c8-3 / he)
                                 :ARG2 (c8-7 / harm-01
                                             :ARG0 c8-1
                                             :ARG1 c8-3)))
      :snt2 (c8-4 / look-after-07
                  :ARG0 (c8-9 / god)
                  :ARG1 (c8-5 / person
                              :ARG0-of (c8-2 / have-rel-role-91
                                             :ARG1 c8-9
                                             :ARG2 (c8-6 / child)))))

# ::snt Karma
# ::tokens ["Karma"]
# ::lemmas ["Karma"]
(c9-1 / person
      :name (c9-0 / name
                  :op1 "Karma"))

# ::snt So much for stand by ur man!
# ::tokens ["So", "much", "for", "stand", "by", "ur", "man", "!"]
# ::lemmas ["so", "much", "for", "stand", "by", "ur", "man", "!"]
(c10-2 / much
       :degree (c10-3 / so)
       :topic (c10-0 / stand-11
                     :ARG0 (c10-4 / man
                                  :poss (c10-1 / you))))

# ::snt Seems anything Trump comes near goes to pot.
# ::tokens ["Seems", "anything", "Trump", "comes", "near", "goes", "to", "pot", "."]
# ::lemmas ["seem", "anything", "Trump", "come", "near", "go", "to", "pot", "."]
(c12-2 / seem-01
       :ARG1 (c12-7 / go-01
                    :ARG1 (c12-6 / anything
                                 :ARG1-of (c12-5 / come-01
                                                 :ARG4 (c12-0 / near-02
                                                              :ARG1 (c12-4 / person
                                                                           :name (c12-3 / name
                                                                                        :op1 "Trump")))))
                    :ARG4 (c12-1 / pot)))

# ::snt Why
# ::tokens ["Why"]
# ::lemmas ["why"]
(c13-0 / cause-01
       :ARG0 (c13-1 / amr-unknown))

# ::snt Apparently, everything touches turns to feces.
# ::tokens ["Apparently", ",", "everything", "touches", "turns", "to", "feces", "."]
# ::lemmas ["apparently", ",", "everything", "touch", "turn", "to", "fece", "."]
(c14-2 / turn-02
       :ARG1 (c14-4 / touch-01
                    :ARG0 (c14-1 / everything))
       :ARG2 (c14-0 / feces)
       :manner (c14-3 / apparent))

# ::snt Some women have Character....
# ::tokens ["Some", "women", "have", "Character", "...."]
# ::lemmas ["some", "woman", "have", "Character", "...."]
(c15-1 / have-03
       :ARG0 (c15-0 / woman
                    :quant (c15-3 / some))
       :ARG1 (c15-2 / character))

# ::snt Fivell get ya shell find a way to get to Hes earned it since then.
# ::tokens ["Fivell", "get", "ya", "shell", "find", "a", "way", "to", "get", "to", "He", "s", "earned", "it", "since", "then", "."]
# ::lemmas ["Fivell", "get", "ya", "shell", "find", "a", "way", "to", "get", "to", "he", "s", "earn", "it", "since", "then", "."]
(c16-2 / multi-sentence
       :snt1 (c16-9 / get-01
                    :ARG0 (c16-7 / i)
                    :ARG1 (c16-8 / thing)
                    :ARG2 (c16-1 / you))
       :snt2 (c16-0 / find-01
                    :ARG0 (c16-11 / you)
                    :ARG1 (c16-13 / thing
                                  :manner-of (c16-10 / get-05
                                                     :ARG0 c16-11
                                                     :ARG1 (c16-12 / thing
                                                                   :ARG1-of (c16-4 / earn-01
                                                                                   :ARG0 (c16-5 / he)
                                                                                   :time (c16-3 / since
                                                                                                :op1 (c16-6 / then))))))
                    :mode imperative))

# ::snt Not a chanceShe will walk back this Trump comment
# ::tokens ["Not", "a", "chanceShe", "will", "walk", "back", "this", "Trump", "comment"]
# ::lemmas ["not", "a", "chanceshe", "will", "walk", "back", "this", "Trump", "comment"]
(c17-4 / chance-02
       :ARG1 (c17-5 / walk-01
                    :ARG0 (c17-2 / she)
                    :ARG2 (c17-0 / back)
                    :direction (c17-7 / comment-01
                                      :ARG0 (c17-3 / person
                                                   :name (c17-1 / name
                                                                :op1 "Trump"))
                                      :mod (c17-6 / this)))
       :polarity -)

# ::snt Schuette trying to move to the center after his incessant Trump butt-kissing in the primary?
# ::tokens ["Schuette", "trying", "to", "move", "to", "the", "center", "after", "his", "incessant", "Trump", "butt", "-", "kissing", "in", "the", "primary", "?"]
# ::lemmas ["Schuette", "try", "to", "move", "to", "the", "center", "after", "his", "incessant", "Trump", "butt", "-", "kissing", "in", "the", "primary", "?"]
(c18-10 / try-01
        :ARG0 (c18-6 / person
                     :name (c18-2 / name
                                  :op1 "Schuette"))
        :ARG1 (c18-1 / move-01
                     :ARG1 c18-6
                     :ARG2 (c18-8 / center))
        :polarity (c18-4 / amr-unknown)
        :time (c18-9 / after
                     :op1 (c18-7 / kiss-01
                                 :ARG0 c18-6
                                 :ARG1 (c18-0 / butt
                                              :part-of (c18-3 / person
                                                              :name (c18-5 / name
                                                                           :op1 "Trump")))
                                 :ARG1-of (c18-12 / cease-01
                                                  :polarity -)
                                 :time (c18-11 / primary))))

# ::snt of course it was trumps...truth and trump..arent friends.
# ::tokens ["of", "course", "it", "was", "trumps", "...", "truth", "and", "trump", "..", "arent", "friends", "."]
# ::lemmas ["of", "course", "it", "be", "trump", "...", "truth", "and", "trump", "..", "arent", "friend", "."]
(c19-4 / trump-01
       :ARG0 (c19-6 / and
                    :op1 (c19-7 / truth)
                    :op2 c19-4)
       :ARG1 (c19-3 / person
                    :ARG0-of (c19-2 / have-rel-role-91
                                    :ARG2 (c19-0 / friend))
                    :mod (c19-5 / arent))
       :mod (c19-1 / of-course))

# ::snt And tapes of his Grandfather, or just photos?
# ::tokens ["And", "tapes", "of", "his", "Grandfather", ",", "or", "just", "photos", "?"]
# ::lemmas ["and", "tape", "of", "his", "Grandfather", ",", "or", "just", "photo", "?"]
(c20-1 / and
       :op2 (c20-6 / amr-choice
                   :op1 (c20-7 / tape-02
                               :ARG1 (c20-3 / person
                                            :ARG0-of (c20-2 / have-rel-role-91
                                                            :ARG1 (c20-4 / he)
                                                            :ARG2 (c20-8 / grandfather))))
                   :op2 (c20-0 / photograph-01
                               :mod (c20-5 / just))))

# ::snt What a great human being (NOT)
# ::tokens ["What", "a", "great", "human", "being", "(", "NOT", ")"]
# ::lemmas ["what", "a", "great", "human", "being", "(", "not", ")"]
(c21-1 / being
       :mod (c21-2 / human)
       :mod (c21-0 / great)
       :ARG1-of (c21-3 / have-polarity-91
                       :ARG2 -))

# ::snt Only in the idiots mind. Even his summer dive has brown folk.
# ::tokens ["Only", "in", "the", "idiots", "mind", ".", "Even", "his", "summer", "dive", "has", "brown", "folk", "."]
# ::lemmas ["only", "in", "the", "idiot", "mind", ".", "even", "his", "summer", "dive", "have", "brown", "folk", "."]
(c22-3 / multi-sentence
       :snt1 (c22-6 / mind-05
                    :ARG0 (c22-10 / idiot)
                    :mod (c22-0 / only))
       :snt2 (c22-7 / have-03
                    :ARG0 (c22-11 / dive-01
                                  :ARG0 (c22-9 / he)
                                  :time (c22-8 / date-entity
                                               :season (c22-4 / summer))
                                  :mod (c22-5 / even))
                    :ARG1 (c22-1 / folk
                                 :mod (c22-2 / brown))))

# ::snt If were JUST a moron we'd be in trouble.But hes a mean, racist liar who sold his soul &amp; USSR
# ::tokens ["If", "were", "JUST", "a", "moron", "we", "'d", "be", "in", "trouble", ".", "But", "he", "s", "a", "mean", ",", "racist", "liar", "who", "sold", "his", "soul", "&", "amp", ";", "USSR"]
# ::lemmas ["if", "be", "just", "a", "moron", "we", "would", "be", "in", "trouble", ".", "but", "he", "s", "a", "mean", ",", "racist", "liar", "who", "sell", "his", "soul", "&", "amp", ";", "USSR"]
(c23-1 / multi-sentence
       :snt1 (c23-6 / have-condition-91
                    :ARG1 (c23-13 / in-trouble-02
                                  :ARG1 (c23-9 / we))
                    :ARG2 (c23-5 / moron
                                 :mod (c23-12 / just)
                                 :domain c23-9))
       :snt2 (c23-10 / contrast-01
                     :ARG2 (c23-7 / person
                                  :ARG0-of (c23-8 / lie-08)
                                  :ARG0-of (c23-16 / mean-04)
                                  :mod (c23-4 / racist)
                                  :ARG0-of (c23-3 / sell-01
                                                  :ARG1 (c23-14 / and
                                                                :op1 (c23-0 / soul
                                                                            :poss c23-7)
                                                                :op2 (c23-15 / amp
                                                                             :poss c23-7)))
                                  :domain (c23-11 / he)))
       :snt3 (c23-17 / country
                     :name (c23-2 / name
                                  :op1 "USSR")))

# ::snt happy place has giant wall, E. Euro &amp; no brown ppl. Everyones rich, plays &amp; likes Donny Bigly
# ::tokens ["happy", "place", "has", "giant", "wall", ",", "E.", "Euro", "&", "amp", ";", "no", "brown", "ppl", ".", "Everyones", "rich", ",", "plays", "&", "amp", ";", "likes", "Donny", "Bigly"]
# ::lemmas ["happy", "place", "have", "giant", "wall", ",", "E.", "Euro", "&", "amp", ";", "no", "brown", "ppl", ".", "everyone", "rich", ",", "play", "&", "amp", ";", "like", "Donny", "Bigly"]
(c24-1 / multi-sentence
       :snt1 (c24-6 / have-03
                    :ARG0 (c24-7 / place
                                 :ARG1-of (c24-12 / happy-02))
                    :ARG1 (c24-14 / and
                                  :op1 (c24-9 / wall
                                              :mod (c24-15 / giant))
                                  :op2 (c24-5 / euro)
                                  :op3 (c24-13 / amp)))
       :snt2 (c24-2 / ppl
                    :mod (c24-0 / brown)
                    :polarity -)
       :snt3 (c24-10 / and
                     :op1 (c24-4 / rich
                                 :domain (c24-16 / everyone))
                     :op2 (c24-17 / play-01
                                  :ARG0 c24-16)
                     :op3 (c24-8 / like-01
                                 :ARG0 c24-16
                                 :ARG1 (c24-11 / person
                                               :name (c24-3 / name
                                                            :op1 "Donny"
                                                            :op2 "Bigly")))))

# ::snt Most famous "goddamn dumbbell" in world thinks we're as stupid as he is. Wave our big brains on ur way out
# ::tokens ["Most", "famous", "\"", "goddamn", "dumbbell", "\"", "in", "world", "thinks", "we", "'re", "as", "stupid", "as", "he", "is", ".", "Wave", "our", "big", "brains", "on", "ur", "way", "out"]
# ::lemmas ["most", "famous", "\"", "goddamn", "dumbbell", "\"", "in", "world", "think", "we", "be", "as", "stupid", "as", "he", "be", ".", "wave", "our", "big", "brain", "on", "ur", "way", "out"]
(c25-4 / multi-sentence
       :snt1 (c25-14 / think-01
                     :ARG0 (c25-16 / dumbbell
                                   :mod (c25-15 / goddamn)
                                   :ARG1-of (c25-8 / have-degree-91
                                                   :ARG2 (c25-0 / fame-01
                                                                :ARG1 c25-16)
                                                   :ARG3 (c25-9 / most)
                                                   :ARG5 (c25-12 / world)))
                     :ARG1 (c25-6 / stupid
                                  :domain (c25-11 / we)
                                  :ARG2-of c25-8
                                  :ARG1 c25-11
                                  :ARG3 (c25-7 / equal)
                                  :ARG4 (c25-13 / he)))
       :snt2 (c25-17 / wave-01
                     :ARG0 (c25-3 / you)
                     :ARG1 (c25-2 / brain
                                  :mod (c25-10 / big)
                                  :part-of (c25-5 / we))
                     :direction (c25-1 / out)
                     :mode imperative))

# ::snt Wait. I thought he said it wasn't him? Hmm is it possible he's lying his ass off or just making shit up?
# ::tokens ["Wait", ".", "I", "thought", "he", "said", "it", "was", "n't", "him", "?", "Hmm", "is", "it", "possible", "he", "'s", "lying", "his", "ass", "off", "or", "just", "making", "shit", "up", "?"]
# ::lemmas ["wait", ".", "i", "think", "he", "say", "it", "be", "not", "he", "?", "hmm", "be", "it", "possible", "he", "be", "lie", "his", "ass", "off", "or", "just", "make", "shit", "up", "?"]
(c26-14 / multi-sentence
        :snt1 (c26-17 / wait-01
                      :ARG1 (c26-4 / you)
                      :mode imperative)
        :snt2 (c26-12 / think-01
                      :ARG0 (c26-19 / i)
                      :ARG1 (c26-0 / say-01
                                   :ARG0 (c26-6 / he)
                                   :ARG1 (c26-18 / have-polarity-91
                                                 :ARG1 (c26-5 / he)
                                                 :ARG2 -)))
        :snt3 (c26-16 / possible-01
                      :ARG1 (c26-2 / or
                                   :op1 (c26-1 / lie-08
                                               :ARG0 (c26-15 / he
                                                             :part (c26-11 / ass
                                                                           :mod (c26-13 / off))))
                                   :op2 (c26-7 / make-up-10
                                               :ARG0 c26-15
                                               :ARG1 (c26-3 / shit)
                                               :mod (c26-9 / just)))
                      :polarity (c26-10 / amr-unknown)
                      :mod (c26-8 / hmm
                                  :mode expressive)))

# ::snt And he also claimed that wasnt his voice.
# ::tokens ["And", "he", "also", "claimed", "that", "was", "nt", "his", "voice", "."]
# ::lemmas ["and", "he", "also", "claim", "that", "be", "nt", "his", "voice", "."]
(c27-5 / and
       :op2 (c27-2 / claim-01
                   :ARG0 (c27-1 / he
                                :part (c27-0 / voice
                                             :ARG1-of c27-2))
                   :mod (c27-4 / also)
                   :domain (c27-3 / that
                                  :polarity -)))

# ::snt What an asshole!
# ::tokens ["What", "an", "asshole", "!"]
# ::lemmas ["what", "an", "asshole", "!"]
(c28-1 / asshole
       :degree (c28-0 / so))

# ::snt Oh lordy
# ::tokens ["Oh", "lordy"]
# ::lemmas ["oh", "lordy"]
(c29-0 / lordy
       :mode expressive)

# ::snt Billy Bush was a co-host of AH. They were on board an RV literally covered with Access Hollywood logos.
# ::tokens ["Billy", "Bush", "was", "a", "co", "-", "host", "of", "AH", ".", "They", "were", "on", "board", "an", "RV", "literally", "covered", "with", "Access", "Hollywood", "logos", "."]
# ::lemmas ["Billy", "Bush", "be", "a", "co", "-", "host", "of", "AH", ".", "they", "be", "on", "board", "an", "RV", "literally", "cover", "with", "Access", "Hollywood", "logo", "."]
(c30-2 / multi-sentence
       :snt1 (c30-6 / person
                    :name (c30-1 / name
                                 :op1 "Billy"
                                 :op2 "Bush")
                    :ARG0-of (c30-9 / cohost-01
                                    :ARG1 (c30-3 / show
                                                 :name (c30-5 / name
                                                              :op1 "AH"))))
       :snt2 (c30-0 / board-01
                    :ARG0 (c30-12 / they)
                    :ARG1 (c30-4 / vehicle
                                 :name (c30-7 / name
                                              :op1 "RV")
                                 :ARG1-of (c30-14 / cover-02
                                                  :ARG2 (c30-8 / logo
                                                               :poss (c30-11 / company
                                                                             :name (c30-10 / name
                                                                                           :op1 "Access"
                                                                                           :op2 "Hollywood")))
                                                  :manner (c30-13 / literal)))))

# ::snt Funny how he thinks a secret must be kept, even if it involves evidence of incompetence or lack of moral character.
# ::tokens ["Funny", "how", "he", "thinks", "a", "secret", "must", "be", "kept", ",", "even", "if", "it", "involves", "evidence", "of", "incompetence", "or", "lack", "of", "moral", "character", "."]
# ::lemmas ["funny", "how", "he", "think", "a", "secret", "must", "be", "keep", ",", "even", "if", "it", "involve", "evidence", "of", "incompetence", "or", "lack", "of", "moral", "character", "."]
(c31-0 / funny
       :domain (c31-11 / think-01
                       :ARG0 (c31-6 / he)
                       :ARG1 (c31-1 / obligate-01
                                    :ARG2 (c31-7 / keep-01
                                                 :ARG1 (c31-4 / secret)))
                       :concession (c31-5 / even-if
                                          :op1 (c31-10 / involve-01
                                                       :ARG1 (c31-12 / evidence-01
                                                                     :ARG1 (c31-2 / or
                                                                                  :op1 (c31-9 / competent-01
                                                                                              :polarity -)
                                                                                  :op2 (c31-8 / lack-01
                                                                                              :ARG1 (c31-13 / character
                                                                                                            :ARG1-of (c31-3 / moral-02)))))
                                                       :ARG2 c31-4))))

# ::snt They're not called hot mikes for nothing.
# ::tokens ["They", "'re", "not", "called", "hot", "mikes", "for", "nothing", "."]
# ::lemmas ["they", "be", "not", "call", "hot", "mike", "for", "nothing", "."]
(c32-3 / call-01
       :ARG1 (c32-4 / they)
       :ARG2 (c32-0 / mike
                    :mod (c32-2 / hot))
       :ARG1-of (c32-5 / cause-01
                       :ARG0 (c32-1 / nothing))
       :polarity -)

# ::snt lmao!
# ::tokens ["lmao", "!"]
# ::lemmas ["lmao", "!"]
(c33-1 / laugh-01
       :ARG0 (c33-2 / i
                    :part (c33-3 / ass))
       :ARG3 (c33-0 / off
                    :op1 c33-3)
       :mode expressive)

# ::snt Well, when you put it that way, the statement sounds very silly!... ohhhh!!!
# ::tokens ["Well", ",", "when", "you", "put", "it", "that", "way", ",", "the", "statement", "sounds", "very", "silly", "!", "...", "ohhhh", "!", "!", "!"]
# ::lemmas ["well", ",", "when", "you", "put", "it", "that", "way", ",", "the", "statement", "sound", "very", "silly", "!", "...", "ohhhh", "!", "!", "!"]
(c34-2 / sound-01
       :ARG1 (c34-0 / state-01)
       :ARG2 (c34-8 / silly
                    :degree (c34-3 / very))
       :condition (c34-4 / put-01
                         :ARG0 (c34-1 / you)
                         :ARG1 c34-0
                         :ARG2 (c34-6 / way
                                      :mod (c34-7 / that)))
       :mod (c34-5 / well))

# ::snt It should be clear to all that this man is dangerously delusional.
# ::tokens ["It", "should", "be", "clear", "to", "all", "that", "this", "man", "is", "dangerously", "delusional", "."]
# ::lemmas ["it", "should", "be", "clear", "to", "all", "that", "this", "man", "be", "dangerously", "delusional", "."]
(c36-1 / recommend-01
       :ARG1 (c36-4 / clear-06
                    :ARG1 (c36-6 / delusional
                                 :domain (c36-0 / man
                                                :mod (c36-5 / this))
                                 :ARG0-of (c36-3 / endanger-01))
                    :beneficiary (c36-2 / all)))

# ::snt With its always about the leak, not about WHAT he did that was leaked. Moron.
# ::tokens ["With", "its", "always", "about", "the", "leak", ",", "not", "about", "WHAT", "he", "did", "that", "was", "leaked", ".", "Moron", "."]
# ::lemmas ["with", "its", "always", "about", "the", "leak", ",", "not", "about", "what", "he", "do", "that", "be", "leak", ".", "Moron", "."]
(c38-0 / multi-sentence
       :snt1 (c38-4 / concern-02
                    :ARG0 (c38-6 / it)
                    :ARG1 (c38-2 / leak-01)
                    :time (c38-7 / always))
       :snt2 (c38-10 / concern-02
                     :ARG0 c38-6
                     :ARG1 (c38-5 / thing
                                  :ARG1-of (c38-8 / do-02
                                                  :ARG0 (c38-1 / he))
                                  :ARG1-of (c38-9 / leak-01))
                     :polarity -)
       :snt3 (c38-3 / moron))

# ::snt Wasn't he actually filming a segment for Access Hollywood? I mean really, how stupid does he think we all are?
# ::tokens ["Was", "n't", "he", "actually", "filming", "a", "segment", "for", "Access", "Hollywood", "?", "I", "mean", "really", ",", "how", "stupid", "does", "he", "think", "we", "all", "are", "?"]
# ::lemmas ["be", "not", "he", "actually", "film", "a", "segment", "for", "Access", "Hollywood", "?", "i", "mean", "really", ",", "how", "stupid", "do", "he", "think", "we", "all", "be", "?"]
(c39-2 / multi-sentence
       :snt1 (c39-0 / film-01
                    :ARG0 (c39-6 / he)
                    :ARG1 (c39-4 / segment)
                    :ARG2 (c39-7 / publication
                                 :name (c39-3 / name
                                              :op1 "Access"
                                              :op2 "Hollywood"))
                    :ARG1-of (c39-14 / actual-02)
                    :polarity (c39-13 / amr-unknown))
       :snt2 (c39-8 / mean-01
                    :ARG0 (c39-15 / i)
                    :ARG2 (c39-1 / stupid
                                 :degree (c39-10 / amr-unknown)
                                 :domain (c39-11 / he)
                                 :ARG1-of (c39-12 / think-01
                                                  :ARG0 (c39-9 / we
                                                               :mod (c39-16 / all))))
                    :ARG1-of (c39-5 / real-04)))

# ::snt True true true
# ::tokens ["True", "true", "true"]
# ::lemmas ["true", "true", "true"]
(c40-0 / true-01
       :ARG1 c40-0)

# ::snt Something new happening with this?
# ::tokens ["Something", "new", "happening", "with", "this", "?"]
# ::lemmas ["something", "new", "happen", "with", "this", "?"]
(c41-2 / new-01
       :polarity (c41-3 / amr-unknown)
       :ARG1 (c41-1 / event
                    :mod (c41-0 / this)))

# ::snt seems to live in a fact-free universe of his own delusional creation.
# ::tokens ["seems", "to", "live", "in", "a", "fact", "-", "free", "universe", "of", "his", "own", "delusional", "creation", "."]
# ::lemmas ["seem", "to", "live", "in", "a", "fact", "-", "free", "universe", "of", "his", "own", "delusional", "creation", "."]
(c42-1 / seem-01
       :ARG1 (c42-3 / live-01
                    :ARG0 (c42-2 / he)
                    :location (c42-8 / universe
                                     :ARG1-of (c42-0 / free-04
                                                     :ARG2 (c42-4 / fact))
                                     :poss (c42-6 / thing
                                                  :ARG1-of (c42-5 / create-01
                                                                  :ARG0 c42-2)
                                                  :mod (c42-7 / delusional)))))

# ::snt Trump, you truly are the worst!
# ::tokens ["Trump", ",", "you", "truly", "are", "the", "worst", "!"]
# ::lemmas ["Trump", ",", "you", "truly", "be", "the", "bad", "!"]
(c43-3 / say-01
       :ARG1 (c43-0 / bad-07
                    :ARG1 (c43-5 / person
                                 :name (c43-1 / name
                                              :op1 "Trump"))
                    :ARG1-of (c43-6 / true-01)
                    :ARG2-of (c43-4 / have-degree-91
                                    :ARG1 c43-5
                                    :ARG3 (c43-2 / most)))
       :ARG2 c43-5)

# ::snt Reality &amp; common sense also reveals this as a lie by a lifelong liar.
# ::tokens ["Reality", "&", "amp", ";", "common", "sense", "also", "reveals", "this", "as", "a", "lie", "by", "a", "lifelong", "liar", "."]
# ::lemmas ["Reality", "&", "amp", ";", "common", "sense", "also", "reveal", "this", "as", "a", "lie", "by", "a", "lifelong", "liar", "."]
(c44-1 / reveal-01
       :ARG0 (c44-0 / sense-02
                    :mod (c44-5 / common))
       :ARG1 (c44-6 / this
                    :ARG1-of (c44-3 / lie-08
                                    :ARG0 (c44-4 / person
                                                 :ARG0-of c44-3)
                                    :duration (c44-7 / live-01
                                                     :ARG0 c44-4)))
       :mod (c44-2 / also))

# ::snt Who cares if he was banging groupies. Why not go after ever music, radio, and TV star that has?
# ::tokens ["Who", "cares", "if", "he", "was", "banging", "groupies", ".", "Why", "not", "go", "after", "ever", "music", ",", "radio", ",", "and", "TV", "star", "that", "has", "?"]
# ::lemmas ["who", "care", "if", "he", "be", "bang", "groupie", ".", "why", "not", "go", "after", "ever", "music", ",", "radio", ",", "and", "tv", "star", "that", "have", "?"]
(c45-1 / multi-sentence
       :snt1 (c45-8 / care-01
                    :ARG0 (c45-13 / amr-unknown)
                    :ARG1 (c45-0 / bang-05
                                 :ARG0 (c45-5 / he)
                                 :ARG1 (c45-14 / groupie)))
       :snt2 (c45-16 / cause-01
                     :ARG0 (c45-12 / amr-unknown)
                     :ARG1 (c45-15 / go-03
                                   :ARG0 (c45-10 / he)
                                   :ARG1 (c45-9 / and
                                                :op1 (c45-6 / music)
                                                :op2 (c45-3 / radio)
                                                :op3 (c45-2 / star
                                                            :mod (c45-11 / television))
                                                :ARG0-of (c45-4 / have-03
                                                                :ARG1 c45-9)
                                                :time (c45-7 / ever))
                                   :polarity -)))

# ::snt I guess we viewed it differently. I dont see what he did wrong. She was far more aggressive. Because shes a cute young lady she gets a pass ?
# ::tokens ["I", "guess", "we", "viewed", "it", "differently", ".", "I", "do", "nt", "see", "what", "he", "did", "wrong", ".", "She", "was", "far", "more", "aggressive", ".", "Because", "she", "s", "a", "cute", "young", "lady", "she", "gets", "a", "pass", "?"]
# ::lemmas ["i", "guess", "we", "view", "it", "differently", ".", "i", "do", "not", "see", "what", "he", "do", "wrong", ".", "she", "be", "far", "more", "aggressive", ".", "because", "she", "s", "a", "cute", "young", "lady", "she", "get", "a", "pass", "?"]
(c46-17 / multi-sentence
        :snt1 (c46-14 / guess-01
                      :ARG0 (c46-23 / i)
                      :ARG1 (c46-8 / view-02
                                   :ARG0 (c46-21 / we)
                                   :ARG1 (c46-7 / it)
                                   :ARG2 (c46-24 / differ-02)))
        :snt2 (c46-0 / see-01
                     :ARG0 (c46-15 / i)
                     :ARG1 (c46-13 / thing
                                   :ARG1-of (c46-2 / wrong-02
                                                   :ARG2 (c46-9 / he)))
                     :polarity -)
        :snt3 (c46-22 / have-degree-91
                      :ARG1 (c46-5 / she)
                      :ARG2 (c46-12 / aggressive)
                      :ARG3 (c46-10 / more
                                    :quant (c46-19 / far)))
        :snt4 (c46-3 / get-01
                     :ARG0 (c46-4 / she)
                     :ARG1 (c46-20 / pass)
                     :polarity (c46-11 / amr-unknown)
                     :ARG1-of (c46-18 / cause-01
                                      :ARG0 (c46-1 / lady
                                                   :mod (c46-6 / young)
                                                   :mod (c46-16 / cute)
                                                   :domain c46-4))))

# ::snt Cmon people this was funny, it needs recognition
# ::tokens ["Cmon", "people", "this", "was", "funny", ",", "it", "needs", "recognition"]
# ::lemmas ["Cmon", "people", "this", "be", "funny", ",", "it", "need", "recognition"]
(c47-2 / say-01
       :ARG1 (c47-0 / funny
                    :domain (c47-6 / this)
                    :ARG1-of (c47-5 / cause-01
                                    :ARG0 (c47-1 / need-01
                                                 :ARG0 c47-6
                                                 :ARG1 (c47-3 / recognize-01
                                                              :ARG1 c47-6))))
       :ARG2 (c47-4 / person)
       :mod (c47-7 / cmon))
