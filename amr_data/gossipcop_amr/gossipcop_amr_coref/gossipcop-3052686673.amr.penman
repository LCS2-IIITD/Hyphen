# ::snt Emeka did you come all along from naija to UG to see Kanye West? Kineke
# ::tokens ["Emeka", "did", "you", "come", "all", "along", "from", "naija", "to", "UG", "to", "see", "Kanye", "West", "?", "Kineke"]
# ::lemmas ["emeka", "do", "you", "come", "all", "along", "from", "naija", "to", "UG", "to", "see", "Kanye", "West", "?", "Kineke"]
(c1-1 / multi-sentence
      :snt1 (c1-7 / come-01
                  :ARG1 (c1-5 / person
                              :name (c1-0 / name
                                          :op1 "Emeka"))
                  :ARG3 (c1-14 / city
                               :name (c1-4 / name
                                           :op1 "Naija"))
                  :ARG4 (c1-9 / city
                              :name (c1-6 / name
                                          :op1 "UG"))
                  :purpose (c1-2 / see-01
                                 :ARG0 c1-5
                                 :ARG1 (c1-3 / person
                                             :name (c1-8 / name
                                                         :op1 "Kanye"
                                                         :op2 "West")))
                  :duration (c1-12 / all-along)
                  :polarity (c1-11 / amr-unknown))
      :snt2 (c1-13 / person
                   :name (c1-10 / name
                                :op1 "Kineke")))

# ::snt Urge que censuren a toda esa familia, la gente es mensa y con ese tipo de programas MS!
# ::tokens ["Urge", "que", "censuren", "a", "toda", "esa", "familia", ",", "la", "gente", "es", "mensa", "y", "con", "ese", "tipo", "de", "programas", "MS", "!"]
# ::lemmas ["urge", "que", "censuren", "a", "toda", "esa", "familia", ",", "la", "gente", "es", "mensa", "y", "con", "ese", "tipo", "de", "programas", "MS", "!"]
(c2-2 / multi-sentence
      :snt1 (c2-15 / Urge-01
                   :ARG0 (c2-1 / you
                               :ARG1-of c2-15)
                   :mode imperative)
      :snt2 (c2-10 / censure-01
                   :ARG0 (c2-14 / you)
                   :ARG1 (c2-0 / familia
                               :poss c2-14)
                   :ARG1-of (c2-16 / cause-01
                                   :ARG0 (c2-7 / have-mod-91
                                               :ARG1 (c2-8 / person
                                                           :ARG0-of (c2-11 / have-rel-role-91
                                                                           :ARG1 c2-14
                                                                           :ARG2 (c2-3 / girlfriend)))
                                               :ARG2 (c2-13 / and
                                                            :op1 (c2-9 / mensa)
                                                            :op2 (c2-12 / tipo
                                                                        :mod (c2-6 / ese))
                                                            :topic (c2-4 / programas
                                                                         :name (c2-5 / name
                                                                                     :op1 "MSN")))))))

# ::snt Kkkkkkkkkkkkkkkkkkkkkk
# ::tokens ["Kkkkkkkkkkkkkkkkkkkkkk"]
# ::lemmas ["Kkkkkkkkkkkkkkkkkkkkkk"]
(c3-0 / thing
      :mode expressive)

# ::snt travis e kylie to vivos
# ::tokens ["travis", "e", "kylie", "to", "vivos"]
# ::lemmas ["travis", "e", "kylie", "to", "vivos"]
(c4-4 / and
      :op1 (c4-3 / person
                 :name (c4-0 / name
                             :op1 "Travis"
                             :op2 "Ekylie"))
      :op2 (c4-1 / person
                 :name (c4-2 / name
                             :op1 "Vivos")))

# ::snt Re fucking tweet
# ::tokens ["Re", "fucking", "tweet"]
# ::lemmas ["re", "fuck", "tweet"]
(c5-1 / tweet-01
      :mod (c5-0 / fucking
                 :mode expressive))

# ::snt Dream or nightmare?
# ::tokens ["Dream", "or", "nightmare", "?"]
# ::lemmas ["dream", "or", "nightmare", "?"]
(c6-2 / amr-choice
      :op1 (c6-0 / dream-01)
      :op2 (c6-1 / nightmare))

# ::snt Come on the first part has to be made up i mean who would believe that ..mind you i could believe the maradona bit
# ::tokens ["Come", "on", "the", "first", "part", "has", "to", "be", "made", "up", "i", "mean", "who", "would", "believe", "that", "..", "mind", "you", "i", "could", "believe", "the", "maradona", "bit"]
# ::lemmas ["come", "on", "the", "first", "part", "have", "to", "be", "make", "up", "i", "mean", "who", "would", "believe", "that", "..", "mind", "you", "i", "could", "believe", "the", "maradona", "bit"]
(c7-4 / multi-sentence
      :snt1 (c7-10 / come-on-25
                   :ARG1 (c7-0 / obligate-01
                               :ARG2 (c7-6 / make-up-10
                                           :ARG1 (c7-7 / part
                                                       :ord (c7-1 / ordinal-entity
                                                                  :value 1))))
                   :mode imperative)
      :snt2 (c7-15 / mean-01
                   :ARG0 (c7-12 / i)
                   :ARG2 (c7-2 / believe-01
                               :ARG0 (c7-13 / amr-unknown)
                               :ARG1 (c7-11 / that)))
      :snt3 (c7-5 / possible-01
                  :ARG1 (c7-8 / believe-01
                              :ARG0 c7-12
                              :ARG1 (c7-16 / bit
                                           :mod (c7-9 / maradona)))
                  :condition (c7-14 / mind-03
                                    :ARG1 (c7-3 / you))))

# ::snt I just had that dream too. Must stop drinking.
# ::tokens ["I", "just", "had", "that", "dream", "too", ".", "Must", "stop", "drinking", "."]
# ::lemmas ["i", "just", "have", "that", "dream", "too", ".", "must", "stop", "drink", "."]
(c8-1 / multi-sentence
      :snt1 (c8-7 / dream-01
                  :ARG0 (c8-5 / i)
                  :ARG1 (c8-6 / that)
                  :mod (c8-4 / just)
                  :mod (c8-8 / too))
      :snt2 (c8-0 / obligate-01
                  :ARG2 (c8-2 / stop-01
                              :ARG0 c8-5
                              :ARG1 (c8-3 / drink-01
                                          :ARG0 c8-5))))
