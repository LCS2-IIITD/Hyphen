# ::snt i argued with my mom for around...an hour or more maybe
# ::tokens ["i", "argued", "with", "my", "mom", "for", "around", "...", "an", "hour", "or", "more", "maybe"]
# ::lemmas ["i", "argue", "with", "my", "mom", "for", "around", "...", "an", "hour", "or", "more", "maybe"]
(c1-7 / argue-02
      :ARG0 (c1-6 / i)
      :ARG1 (c1-3 / person
                  :ARG0-of (c1-2 / have-rel-role-91
                                 :ARG1 c1-6
                                 :ARG2 (c1-0 / mom)))
      :duration (c1-8 / around
                      :op1 (c1-5 / temporal-quantity
                                 :unit (c1-4 / hour)
                                 :ARG1-of (c1-1 / possible-01)
                                 :quant 1)))

# ::snt its been a bad day guys
# ::tokens ["its", "been", "a", "bad", "day", "guys"]
# ::lemmas ["its", "be", "a", "bad", "day", "guy"]
(c2-3 / say-01
      :ARG1 (c2-1 / day
                  :ARG1-of (c2-2 / bad-07))
      :ARG2 (c2-0 / guy))

# ::snt It diznae. Ye cannae claim that yin
# ::tokens ["It", "diznae", ".", "Ye", "cannae", "claim", "that", "yin"]
# ::lemmas ["it", "diznae", ".", "ye", "cannae", "claim", "that", "yin"]
(c4-1 / multi-sentence
      :snt1 (c4-3 / possible-01
                  :ARG1 (c4-5 / it)
                  :polarity -)
      :snt2 (c4-2 / possible-01
                  :ARG1 (c4-4 / claim-01
                              :ARG0 (c4-0 / you)
                              :ARG1 (c4-6 / thing
                                          :ARG1-of (c4-8 / do-02
                                                         :ARG0 (c4-7 / you))))
                  :polarity -))

# ::snt Cove diznae count
# ::tokens ["Cove", "diznae", "count"]
# ::lemmas ["cove", "diznae", "count"]
(c6-0 / count-01
      :mod (c6-1 / diznae))

# ::snt Your a white guy from kirkham. Chill your boots lad. You conceded everytime juan pablo angel got the ball on pes
# ::tokens ["Your", "a", "white", "guy", "from", "kirkham", ".", "Chill", "your", "boots", "lad", ".", "You", "conceded", "everytime", "juan", "pablo", "angel", "got", "the", "ball", "on", "pes"]
# ::lemmas ["your", "a", "white", "guy", "from", "kirkham", ".", "chill", "your", "boot", "lad", ".", "you", "concede", "everytime", "juan", "pablo", "angel", "get", "the", "ball", "on", "pe"]
(c9-3 / multi-sentence
      :snt1 (c9-15 / guy
                   :ARG1-of (c9-11 / white-02)
                   :domain (c9-2 / you)
                   :location (c9-12 / city-district
                                    :name (c9-4 / name
                                                :op1 "Kirkham")))
      :snt2 (c9-17 / chill-01
                   :ARG0 (c9-16 / you)
                   :ARG1 (c9-1 / boot
                               :poss c9-16)
                   :mode imperative)
      :snt3 (c9-13 / concede-01
                   :ARG0 (c9-0 / you)
                   :frequency (c9-6 / rate-entity-91
                                    :ARG4 (c9-14 / get-01
                                                 :ARG0 (c9-8 / person
                                                             :name (c9-7 / name
                                                                         :op1 "Juan"
                                                                         :op2 "Pablo"
                                                                         :op3 "Angel"))
                                                 :ARG1 (c9-9 / ball)
                                                 :ARG4 (c9-5 / person
                                                             :name (c9-10 / name
                                                                          :op1 "Pes"))))))

# ::snt Seeing then in Hull tomorrow. Cant wait!
# ::tokens ["Seeing", "then", "in", "Hull", "tomorrow", ".", "Ca", "nt", "wait", "!"]
# ::lemmas ["see", "then", "in", "Hull", "tomorrow", ".", "can", "nt", "wait", "!"]
(c10-1 / multi-sentence
       :snt1 (c10-2 / see-01
                    :ARG1 (c10-4 / city
                                 :name (c10-0 / name
                                              :op1 "Hull"))
                    :time (c10-7 / tomorrow)
                    :mod (c10-8 / then))
       :snt2 (c10-3 / possible-01
                    :ARG1 (c10-5 / wait-01
                                 :ARG1 (c10-6 / i))
                    :polarity -))

# ::snt I am
# ::tokens ["I", "am"]
# ::lemmas ["i", "be"]
(c11-0 / i)

# ::snt ...... and why not Louise. Creativity broadens understanding
# ::tokens ["......", "and", "why", "not", "Louise", ".", "Creativity", "broadens", "understanding"]
# ::lemmas ["......", "and", "why", "not", "Louise", ".", "creativity", "broaden", "understand"]
(c12-1 / multi-sentence
       :snt1 (c12-6 / and
                    :op2 (c12-5 / amr-unknown
                                :ARG0-of (c12-4 / cause-01
                                                :ARG1 (c12-3 / person
                                                             :name (c12-2 / name
                                                                          :op1 "Louise")))
                                :polarity -))
       :snt2 (c12-0 / broaden-01
                    :ARG0 (c12-8 / creativity)
                    :ARG1 (c12-7 / understand-01)))

# ::snt They Better, Long az u Research u Promoting People Exploiting generosity it Should Even out....
# ::tokens ["They", "Better", ",", "Long", "az", "u", "Research", "u", "Promoting", "People", "Exploiting", "generosity", "it", "Should", "Even", "out", "...."]
# ::lemmas ["they", "Better", ",", "Long", "az", "u", "research", "u", "promote", "people", "exploit", "generosity", "it", "should", "even", "out", "...."]
(c13-3 / and
       :op1 (c13-10 / good-02
                    :ARG1 (c13-9 / they)
                    :ARG2-of (c13-6 / have-degree-91
                                    :ARG1 c13-9
                                    :ARG3 (c13-1 / more)))
       :op2 (c13-4 / research-01
                   :ARG0 c13-9)
       :op3 (c13-7 / promote-02
                   :ARG0 c13-9
                   :ARG1 (c13-2 / person
                                :ARG0-of (c13-5 / exploit-01
                                                :ARG1 (c13-8 / generosity)))
                   :ARG1-of (c13-0 / out-06
                                   :mod (c13-11 / even)
                                   :ARG1-of (c13-12 / recommend-01))))

# ::snt Well, every now and then the boys gotta have a little fun!
# ::tokens ["Well", ",", "every", "now", "and", "then", "the", "boys", "got", "ta", "have", "a", "little", "fun", "!"]
# ::lemmas ["well", ",", "every", "now", "and", "then", "the", "boy", "got", "to", "have", "a", "little", "fun", "!"]
(c14-0 / obligate-01
       :ARG2 (c14-1 / fun-01
                    :ARG0 (c14-2 / boy)
                    :quant (c14-5 / little))
       :frequency (c14-4 / rate-entity-91
                         :ARG4 (c14-3 / now-and-then))
       :mod (c14-6 / well))

# ::snt yeah she usually runs the show, so I did giggle a bit
# ::tokens ["yeah", "she", "usually", "runs", "the", "show", ",", "so", "I", "did", "giggle", "a", "bit"]
# ::lemmas ["yeah", "she", "usually", "run", "the", "show", ",", "so", "i", "do", "giggle", "a", "bit"]
(c15-5 / cause-01
       :ARG0 (c15-4 / run-09
                    :ARG0 (c15-3 / she)
                    :ARG1 (c15-0 / show)
                    :mod (c15-8 / usual))
       :ARG1 (c15-7 / giggle-01
                    :ARG0 (c15-6 / i)
                    :degree (c15-1 / bit))
       :mod (c15-2 / yeah
                   :mode expressive))

# ::snt I bet Lucy wasn't too happy with this one, but bless him, he can't help it. There's a tail waving, and it's like the universal symbol for playtime!
# ::tokens ["I", "bet", "Lucy", "was", "n't", "too", "happy", "with", "this", "one", ",", "but", "bless", "him", ",", "he", "ca", "n't", "help", "it", ".", "There", "'s", "a", "tail", "waving", ",", "and", "it", "'s", "like", "the", "universal", "symbol", "for", "playtime", "!"]
# ::lemmas ["i", "bet", "Lucy", "be", "not", "too", "happy", "with", "this", "one", ",", "but", "bless", "he", ",", "he", "can", "not", "help", "it", ".", "there", "be", "a", "tail", "wave", ",", "and", "it", "be", "like", "the", "universal", "symbol", "for", "playtime", "!"]
(c16-10 / multi-sentence
        :snt1 (c16-12 / contrast-01
                      :ARG1 (c16-9 / bet-01
                                   :ARG0 (c16-20 / i)
                                   :ARG2 (c16-6 / happy-01
                                                :ARG0 (c16-3 / one
                                                             :mod (c16-8 / this))
                                                :ARG1 (c16-17 / person
                                                              :name (c16-15 / name
                                                                            :op1 "Lucy"))
                                                :ARG2-of (c16-19 / have-degree-91
                                                                 :ARG1 c16-17
                                                                 :ARG3 (c16-13 / too))
                                                :polarity -))
                      :ARG2 (c16-11 / possible-01
                                    :ARG1 (c16-5 / help-02
                                                 :ARG0 c16-17
                                                 :ARG1 c16-6)
                                    :ARG2-of (c16-1 / bless-01
                                                    :ARG1 c16-17)
                                    :polarity -))
        :snt2 (c16-7 / and
                     :op1 (c16-18 / wave-01
                                  :ARG1 (c16-21 / tail))
                     :op2 (c16-16 / resemble-01
                                  :ARG1 (c16-4 / it)
                                  :ARG2 (c16-0 / symbol
                                               :mod (c16-14 / universal)
                                               :purpose (c16-2 / play-01)))))

# ::snt they do crack me up
# ::tokens ["they", "do", "crack", "me", "up"]
# ::lemmas ["they", "do", "crack", "i", "up"]
(c17-0 / crack-up-03
       :ARG0 (c17-2 / they)
       :ARG1 (c17-1 / i))

# ::snt So. Cute. I could die right now and be happy for the rest of my life! I love these cats!!!!
# ::tokens ["So", ".", "Cute", ".", "I", "could", "die", "right", "now", "and", "be", "happy", "for", "the", "rest", "of", "my", "life", "!", "I", "love", "these", "cats", "!", "!", "!", "!"]
# ::lemmas ["so", ".", "cute", ".", "i", "could", "die", "right", "now", "and", "be", "happy", "for", "the", "rest", "of", "my", "life", "!", "i", "love", "these", "cat", "!", "!", "!", "!"]
(c18-0 / multi-sentence
       :snt1 (c18-7 / cute
                    :domain (c18-2 / so))
       :snt2 (c18-5 / possible-01
                    :ARG1 (c18-10 / and
                                  :op1 (c18-11 / die-01
                                               :ARG1 (c18-9 / i)
                                               :time (c18-1 / now
                                                            :mod (c18-3 / right)))
                                  :op2 (c18-4 / happy-01
                                              :ARG1 c18-9
                                              :duration (c18-12 / rest
                                                                :part-of (c18-6 / live-01
                                                                                :ARG0 c18-9)))))
       :snt3 (c18-13 / love-01
                     :ARG0 c18-9
                     :ARG1 (c18-14 / cat
                                   :mod (c18-8 / this))))

# ::snt I know. I was quick at taking this one. And, he was listening to a podcast on his phone.
# ::tokens ["I", "know", ".", "I", "was", "quick", "at", "taking", "this", "one", ".", "And", ",", "he", "was", "listening", "to", "a", "podcast", "on", "his", "phone", "."]
# ::lemmas ["i", "know", ".", "i", "be", "quick", "at", "take", "this", "one", ".", "and", ",", "he", "be", "listen", "to", "a", "podcast", "on", "his", "phone", "."]
(c19-0 / multi-sentence
       :snt1 (c19-5 / know-01
                    :ARG0 (c19-10 / i))
       :snt2 (c19-9 / quick-02
                    :ARG1 (c19-2 / i)
                    :ARG2 (c19-8 / take-01
                                 :ARG0 c19-2
                                 :ARG1 (c19-11 / this)))
       :snt3 (c19-3 / and
                    :op2 (c19-6 / listen-01
                                :ARG0 (c19-4 / he)
                                :ARG1 (c19-7 / podcast)
                                :medium (c19-1 / phone
                                               :poss c19-4))))

# ::snt "if you didn't want me to play with it, what did you swing it in my face?"
# ::tokens ["\"", "if", "you", "did", "n't", "want", "me", "to", "play", "with", "it", ",", "what", "did", "you", "swing", "it", "in", "my", "face", "?", "\""]
# ::lemmas ["\"", "if", "you", "do", "not", "want", "i", "to", "play", "with", "it", ",", "what", "do", "you", "swing", "it", "in", "my", "face", "?", "\""]
(c20-2 / swing-01
       :ARG0 (c20-1 / you)
       :ARG1 (c20-6 / it)
       :ARG2 (c20-0 / face
                    :part-of (c20-3 / i))
       :polarity (c20-7 / amr-unknown)
       :condition (c20-5 / want-01
                         :ARG0 c20-1
                         :ARG1 (c20-4 / play-01
                                      :ARG0 c20-3
                                      :ARG2 c20-6)
                         :polarity -))

# ::snt what about kitty fun
# ::tokens ["what", "about", "kitty", "fun"]
# ::lemmas ["what", "about", "kitty", "fun"]
(c21-2 / amr-unknown
       :topic (c21-0 / fun-01
                     :ARG1 (c21-1 / kitty)))

# ::snt Not getting off the list
# ::tokens ["Not", "getting", "off", "the", "list"]
# ::lemmas ["not", "get", "off", "the", "list"]
(c22-0 / get-off-23
       :ARG2 (c22-1 / list-01)
       :polarity -)

# ::snt Sweet kitties help everything!
# ::tokens ["Sweet", "kitties", "help", "everything", "!"]
# ::lemmas ["sweet", "kitty", "help", "everything", "!"]
(c23-1 / help-01
       :ARG0 (c23-2 / kitty
                    :mod (c23-3 / sweet))
       :ARG1 (c23-0 / everything))

# ::snt No
# ::tokens ["No"]
# ::lemmas ["no"]
(c24-0 / no)

# ::snt Who resist!
# ::tokens ["Who", "resist", "!"]
# ::lemmas ["who", "resist", "!"]
(c25-0 / resist-01
       :ARG0 (c25-1 / amr-unknown)
       :mode expressive)

# ::snt They are contractually obligated to be unbearably cute from time to time.
# ::tokens ["They", "are", "contractually", "obligated", "to", "be", "unbearably", "cute", "from", "time", "to", "time", "."]
# ::lemmas ["they", "be", "contractually", "obligate", "to", "be", "unbearably", "cute", "from", "time", "to", "time", "."]
(c27-0 / obligate-01
       :ARG1 (c27-4 / they)
       :ARG2 (c27-2 / cute
                    :ARG1-of (c27-3 / worth-02
                                    :ARG2 (c27-1 / wear-01
                                                 :ARG0 c27-4)
                                    :polarity -)
                    :domain c27-4
                    :frequency (c27-6 / time-to-time))
       :manner (c27-5 / contract-02))

# ::snt Dinah is a ginger kitty too.
# ::tokens ["Dinah", "is", "a", "ginger", "kitty", "too", "."]
# ::lemmas ["Dinah", "be", "a", "ginger", "kitty", "too", "."]
(c28-2 / kitty
       :mod (c28-4 / ginger)
       :domain (c28-1 / person
                      :name (c28-0 / name
                                   :op1 "Dinah"))
       :mod (c28-3 / too))

# ::snt he was being pretty adorable
# ::tokens ["he", "was", "being", "pretty", "adorable"]
# ::lemmas ["he", "be", "be", "pretty", "adorable"]
(c29-0 / cute
       :degree (c29-2 / pretty)
       :domain (c29-1 / he))

# ::snt Awwww. Dangnabbit! Now I have to increase my insulin dosage from the sweet.
# ::tokens ["Awwww", ".", "Dangnabbit", "!", "Now", "I", "have", "to", "increase", "my", "insulin", "dosage", "from", "the", "sweet", "."]
# ::lemmas ["Awwww", ".", "Dangnabbit", "!", "now", "i", "have", "to", "increase", "my", "insulin", "dosage", "from", "the", "sweet", "."]
(c30-2 / multi-sentence
       :snt1 (c30-10 / aw
                     :mode expressive)
       :snt2 (c30-4 / say-01
                    :ARG1 (c30-0 / obligate-01
                                 :ARG1 (c30-9 / i)
                                 :ARG2 (c30-5 / increase-01
                                              :ARG0 c30-9
                                              :ARG1 (c30-11 / dosage
                                                            :mod (c30-7 / product
                                                                        :name (c30-3 / name
                                                                                     :op1 "insinsane"))
                                                            :poss c30-9)
                                              :ARG2 (c30-1 / sweet))
                                 :time (c30-6 / now))
                    :ARG2 (c30-8 / dangnabbit)))

# ::snt does a sweet kitty picture help
# ::tokens ["does", "a", "sweet", "kitty", "picture", "help"]
# ::lemmas ["do", "a", "sweet", "kitty", "picture", "help"]
(c31-1 / help-01
       :ARG0 (c31-2 / picture-01
                    :ARG1 (c31-3 / cat
                                 :ARG1-of (c31-0 / sweet-05)))
       :polarity (c31-4 / amr-unknown))

# ::snt Oh! I don't remember if general Kat likes or doesn't like Alice in wonderland
# ::tokens ["Oh", "!", "I", "do", "n't", "remember", "if", "general", "Kat", "likes", "or", "does", "n't", "like", "Alice", "in", "wonderland"]
# ::lemmas ["oh", "!", "i", "do", "not", "remember", "if", "general", "Kat", "like", "or", "do", "not", "like", "Alice", "in", "wonderland"]
(c32-3 / remember-01
       :ARG0 (c32-8 / i)
       :ARG1 (c32-9 / truth-value
                    :polarity-of (c32-6 / like-01
                                        :ARG0 (c32-5 / person
                                                     :name (c32-1 / name
                                                                  :op1 "Kat")
                                                     :ARG1-of (c32-10 / general-02))
                                        :ARG1 (c32-2 / person
                                                     :name (c32-4 / name
                                                                  :op1 "Alice")
                                                     :location (c32-7 / wonderland))))
       :mod (c32-0 / oh
                   :mode expressive)
       :polarity -)

# ::snt Posted what?
# ::tokens ["Posted", "what", "?"]
# ::lemmas ["post", "what", "?"]
(c33-0 / post-01
       :ARG1 (c33-1 / amr-unknown))

# ::snt So sorry General Kat, I was a little busy! Belated Happy
# ::tokens ["So", "sorry", "General", "Kat", ",", "I", "was", "a", "little", "busy", "!", "Belated", "Happy"]
# ::lemmas ["so", "sorry", "General", "Kat", ",", "i", "be", "a", "little", "busy", "!", "Belated", "Happy"]
(c34-2 / multi-sentence
       :snt1 (c34-4 / say-01
                    :ARG1 (c34-0 / sorry-01
                                 :ARG1 (c34-12 / i)
                                 :degree (c34-14 / so)
                                 :ARG1-of (c34-10 / cause-01
                                                  :ARG0 (c34-1 / busy-01
                                                               :ARG1 c34-12
                                                               :degree (c34-8 / little))))
                    :ARG2 (c34-9 / person
                                 :name (c34-3 / name
                                              :op1 "Kat")
                                 :ARG0-of (c34-7 / have-org-role-91
                                                 :ARG2 (c34-13 / general))))
       :snt2 (c34-11 / happy-01
                     :ARG1 (c34-5 / i)
                     :degree (c34-6 / very)))

# ::snt When will you humans ever learn. You all must have meetings. Just to plan ways to upset me.
# ::tokens ["When", "will", "you", "humans", "ever", "learn", ".", "You", "all", "must", "have", "meetings", ".", "Just", "to", "plan", "ways", "to", "upset", "me", "."]
# ::lemmas ["when", "will", "you", "human", "ever", "learn", ".", "you", "all", "must", "have", "meeting", ".", "just", "to", "plan", "way", "to", "upset", "i", "."]
(c35-3 / multi-sentence
       :snt1 (c35-6 / learn-01
                    :ARG0 (c35-5 / human
                                 :domain (c35-2 / you))
                    :time (c35-4 / ever)
                    :time (c35-12 / amr-unknown))
       :snt2 (c35-1 / obligate-01
                    :ARG1 (c35-7 / meet-03
                                 :ARG0 (c35-13 / you
                                               :mod (c35-11 / all))))
       :snt3 (c35-8 / plan-01
                    :ARG0 (c35-0 / you)
                    :ARG1 (c35-9 / way)
                    :purpose (c35-15 / upset-01
                                     :ARG0 c35-0
                                     :ARG1 (c35-14 / i))
                    :mod (c35-10 / just)))

# ::snt maybe I'm remembering wrong, I thought I posted it once and was on the tweet, she might remember, I didn't think the general was a fan lol
# ::tokens ["maybe", "I", "'m", "remembering", "wrong", ",", "I", "thought", "I", "posted", "it", "once", "and", "was", "on", "the", "tweet", ",", "she", "might", "remember", ",", "I", "did", "n't", "think", "the", "general", "was", "a", "fan", "lol"]
# ::lemmas ["maybe", "i", "be", "remember", "wrong", ",", "i", "think", "i", "post", "it", "once", "and", "be", "on", "the", "tweet", ",", "she", "might", "remember", ",", "i", "do", "not", "think", "the", "general", "be", "a", "fan", "lol"]
(c36-8 / and
       :op1 (c36-15 / possible-01
                    :ARG1 (c36-14 / remember-01
                                  :ARG0 (c36-17 / i)
                                  :ARG2-of (c36-16 / wrong-04
                                                   :ARG1 c36-17)))
       :op2 (c36-5 / and
                   :op1 (c36-6 / think-01
                               :ARG0 c36-17
                               :ARG1 (c36-11 / post-01
                                             :ARG0 c36-17
                                             :ARG1 (c36-4 / it)
                                             :frequency 1))
                   :op2 (c36-10 / be-located-at-91
                                :ARG1 c36-17
                                :ARG2 (c36-12 / tweet-01)))
       :op3 (c36-2 / possible-01
                   :ARG1 (c36-3 / remember-01
                                :ARG0 (c36-0 / she)))
       :op4 (c36-18 / think-01
                    :ARG0 c36-17
                    :ARG1 (c36-13 / fan
                                  :domain (c36-7 / general))
                    :ARG2-of (c36-1 / laugh-01
                                    :ARG0 c36-17
                                    :manner (c36-9 / loud))
                    :polarity -))

# ::snt I love Alice! Its my favoritest Disney show ever!! Is it bad?
# ::tokens ["I", "love", "Alice", "!", "Its", "my", "favoritest", "Disney", "show", "ever", "!", "!", "Is", "it", "bad", "?"]
# ::lemmas ["i", "love", "Alice", "!", "its", "my", "favorite", "Disney", "show", "ever", "!", "!", "be", "it", "bad", "?"]
(c37-3 / multi-sentence
       :snt1 (c37-9 / love-01
                    :ARG0 (c37-13 / i)
                    :ARG1 (c37-8 / person
                                 :name (c37-2 / name
                                              :op1 "Alice")))
       :snt2 (c37-7 / have-degree-91
                    :ARG1 (c37-4 / show-04
                                 :ARG0 (c37-12 / company
                                               :name (c37-10 / name
                                                             :op1 "Disney"))
                                 :ARG1 (c37-5 / it))
                    :ARG2 (c37-0 / favoritest)
                    :ARG3 (c37-11 / most)
                    :ARG5 (c37-6 / ever))
       :snt3 (c37-1 / bad-07
                    :ARG1 (c37-15 / it)
                    :polarity (c37-14 / amr-unknown)))

# ::snt oh no you used alice in wonderland!!!
# ::tokens ["oh", "no", "you", "used", "alice", "in", "wonderland", "!", "!", "!"]
# ::lemmas ["oh", "no", "you", "use", "alice", "in", "wonderland", "!", "!", "!"]
(c38-4 / use-01
       :ARG0 (c38-1 / you)
       :ARG1 (c38-3 / alice)
       :location (c38-2 / wonderland)
       :mod (c38-0 / oh-no
                   :mode expressive))

# ::snt Hiya kitty kat, Happy
# ::tokens ["Hiya", "kitty", "kat", ",", "Happy"]
# ::lemmas ["hiya", "kitty", "kat", ",", "Happy"]
(c39-3 / and
       :op1 (c39-0 / hi)
       :op2 (c39-1 / kitty
                   :mod (c39-4 / kat))
       :op3 (c39-2 / happy-01))

# ::snt very cool catina
# ::tokens ["very", "cool", "catina"]
# ::lemmas ["very", "cool", "catina"]
(c41-3 / say-01
       :ARG1 (c41-0 / cool-04
                    :degree (c41-1 / very))
       :ARG2 (c41-2 / catina))

# ::snt Pawsome
# ::tokens ["Pawsome"]
# ::lemmas ["pawsome"]
(c42-0 / pawsome)

# ::snt Aw. Kitty pillows.
# ::tokens ["Aw", ".", "Kitty", "pillows", "."]
# ::lemmas ["aw", ".", "Kitty", "pillow", "."]
(c44-1 / pillow
       :mod (c44-2 / Kitty)
       :mod (c44-0 / aw
                   :mode expressive))

# ::snt And so much of it! Thanks Marsha.
# ::tokens ["And", "so", "much", "of", "it", "!", "Thanks", "Marsha", "."]
# ::lemmas ["and", "so", "much", "of", "it", "!", "thank", "Marsha", "."]
(c45-0 / multi-sentence
       :snt1 (c45-9 / and
                    :op2 (c45-5 / have-quant-91
                                :ARG1 (c45-8 / it)
                                :ARG2 (c45-4 / much)
                                :ARG3 (c45-2 / so)))
       :snt2 (c45-7 / thank-01
                    :ARG0 (c45-3 / i)
                    :ARG1 (c45-6 / person
                                 :name (c45-1 / name
                                              :op1 "Marsha"))))

# ::snt My little monster and slayer.
# ::tokens ["My", "little", "monster", "and", "slayer", "."]
# ::lemmas ["my", "little", "monster", "and", "slayer", "."]
(c46-5 / and
       :op1 (c46-0 / monster)
       :op2 (c46-2 / person
                   :ARG0-of (c46-1 / slayer-01))
       :mod (c46-3 / little)
       :poss (c46-4 / i))

# ::snt yes exactly
# ::tokens ["yes", "exactly"]
# ::lemmas ["yes", "exactly"]
(c47-1 / yes
       :mod (c47-0 / exact))

# ::snt thank you susie!
# ::tokens ["thank", "you", "susie", "!"]
# ::lemmas ["thank", "you", "susie", "!"]
(c49-1 / say-01
       :ARG0 (c49-3 / i)
       :ARG1 (c49-4 / thank-01
                    :ARG0 c49-3
                    :ARG1 (c49-2 / person
                                 :name (c49-0 / name
                                              :op1 "Susie")
                                 :ARG2-of c49-1)))

# ::snt All the gorgeousness
# ::tokens ["All", "the", "gorgeousness"]
# ::lemmas ["all", "the", "gorgeousness"]
(c50-0 / gorgeousness
       :mod (c50-1 / all))
