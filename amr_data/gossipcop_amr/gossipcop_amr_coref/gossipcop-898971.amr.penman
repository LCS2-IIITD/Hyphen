# ::snt Im sure you freedom fighters would love to live by those rules...
# ::tokens ["I", "m", "sure", "you", "freedom", "fighters", "would", "love", "to", "live", "by", "those", "rules", "..."]
# ::lemmas ["i", "m", "sure", "you", "freedom", "fighter", "would", "love", "to", "live", "by", "those", "rule", "..."]
(c1-2 / sure-02
      :ARG0 (c1-6 / i)
      :ARG1 (c1-4 / love-02
                  :ARG0 (c1-1 / you
                              :ARG0-of (c1-0 / fight-01
                                             :ARG2 (c1-5 / free-04)))
                  :ARG1 (c1-8 / live-01
                              :ARG0 c1-1
                              :ARG1 (c1-3 / rule
                                          :mod (c1-7 / that)))))

# ::snt Listen to Kardashians by A7JohnnyMac on ://
# ::tokens ["Listen", "to", "Kardashians", "by", "A7JohnnyMac", "on", ":", "//"]
# ::lemmas ["listen", "to", "Kardashians", "by", "A7JohnnyMac", "on", ":", "//"]
(c2-4 / listen-01
      :ARG0 (c2-3 / person
                  :name (c2-1 / name
                              :op1 "A7JohnnyMac"))
      :ARG1 (c2-0 / broadcast-program
                  :name (c2-2 / name
                              :op1 "K Kardashians")))

# ::snt My tree is tall...
# ::tokens ["My", "tree", "is", "tall", "..."]
# ::lemmas ["my", "tree", "be", "tall", "..."]
(c3-2 / tall
      :domain (c3-1 / tree
                    :poss (c3-0 / i)))

# ::snt Does she store it in her head when Christmas is over?
# ::tokens ["Does", "she", "store", "it", "in", "her", "head", "when", "Christmas", "is", "over", "?"]
# ::lemmas ["do", "she", "store", "it", "in", "her", "head", "when", "Christmas", "be", "over", "?"]
(c4-4 / store-01
      :polarity (c4-7 / amr-unknown)
      :ARG0 (c4-0 / she
                  :part (c4-5 / head))
      :ARG1 (c4-6 / it)
      :ARG2 c4-5
      :time (c4-1 / over-01
                  :ARG1 (c4-2 / festival
                              :name (c4-3 / name
                                          :op1 "Christmas"))))

# ::snt the rich only care about the rich fuck every one else
# ::tokens ["the", "rich", "only", "care", "about", "the", "rich", "fuck", "every", "one", "else"]
# ::lemmas ["the", "rich", "only", "care", "about", "the", "rich", "fuck", "every", "one", "else"]
(c5-6 / care-01
      :ARG0 (c5-5 / person
                  :mod (c5-3 / rich))
      :ARG1 (c5-2 / person
                  :mod (c5-8 / rich))
      :mod (c5-0 / only)
      :mod (c5-1 / fuck-01
                 :ARG0 (c5-4 / everyone
                             :mod (c5-7 / else))
                 :mode expressive))

# ::snt She hasn't shown off the baby tho
# ::tokens ["She", "has", "n't", "shown", "off", "the", "baby", "tho"]
# ::lemmas ["she", "have", "not", "show", "off", "the", "baby", "tho"]
(c6-2 / have-concession-91
      :ARG1 (c6-3 / show-off-03
                  :ARG0 (c6-0 / she)
                  :ARG1 (c6-1 / baby)
                  :polarity -))

# ::snt You know her tree's definitely fake
# ::tokens ["You", "know", "her", "tree", "'s", "definitely", "fake"]
# ::lemmas ["you", "know", "her", "tree", "'s", "definitely", "fake"]
(c7-3 / know-01
      :ARG0 (c7-1 / you)
      :ARG1 (c7-0 / fake-02
                  :ARG1 (c7-4 / tree
                              :poss (c7-2 / she))
                  :mod (c7-5 / definite)))

# ::snt Ya Extra like those overpriced bushes she is coming out with $300 plus for a brush set.
# ::tokens ["Ya", "Extra", "like", "those", "overpriced", "bushes", "she", "is", "coming", "out", "with", "$", "300", "plus", "for", "a", "brush", "set", "."]
# ::lemmas ["Ya", "Extra", "like", "those", "overpriced", "bush", "she", "be", "come", "out", "with", "$", "300", "plus", "for", "a", "brush", "set", "."]
(c8-4 / multi-sentence
      :snt1 (c8-7 / extra
                  :domain (c8-3 / you))
      :snt2 (c8-11 / come-out-09
                   :ARG0 (c8-5 / she)
                   :accompanier (c8-8 / monetary-quantity
                                      :unit (c8-13 / dollar)
                                      :mod (c8-9 / plus)
                                      :purpose (c8-0 / set
                                                     :consist-of (c8-2 / brush))
                                      :quant 300)
                   :ARG1-of (c8-6 / resemble-01
                                  :ARG2 (c8-10 / bush
                                               :ARG1-of (c8-1 / overprice-01)
                                               :mod (c8-12 / that)))))

# ::snt YEAH. SHE SUCKS. THE WHOLE KLAN SUCKS.
# ::tokens ["YEAH", ".", "SHE", "SUCKS", ".", "THE", "WHOLE", "KLAN", "SUCKS", "."]
# ::lemmas ["yeah", ".", "SHE", "suck", ".", "the", "whole", "KLAN", "suck", "."]
(c9-2 / multi-sentence
      :snt1 (c9-1 / yeah
                  :mode expressive)
      :snt2 (c9-4 / suck-03
                  :ARG0 (c9-0 / she))
      :snt3 (c9-7 / suck-03
                  :ARG0 (c9-5 / city
                              :name (c9-3 / name
                                          :op1 "Klan")
                              :mod (c9-6 / whole))))

# ::snt "Giant pink ornaments" Its ugly af and was decorated by the Art director of Four seasons
# ::tokens ["\"", "Giant", "pink", "ornaments", "\"", "Its", "ugly", "af", "and", "was", "decorated", "by", "the", "Art", "director", "of", "Four", "seasons"]
# ::lemmas ["\"", "giant", "pink", "ornament", "\"", "its", "ugly", "af", "and", "be", "decorate", "by", "the", "art", "director", "of", "Four", "season"]
(c10-9 / and
       :op1 (c10-3 / have-mod-91
                   :ARG1 (c10-0 / ornament
                                :ARG1-of (c10-4 / pink-04
                                                :mod (c10-10 / giant)))
                   :ARG2 (c10-8 / af
                                :mod (c10-12 / ugly)))
       :op2 (c10-11 / decorate-01
                    :ARG0 (c10-1 / person
                                 :ARG0-of (c10-7 / have-org-role-91
                                                 :ARG1 (c10-2 / season
                                                              :quant 4)
                                                 :ARG2 (c10-5 / director
                                                              :topic (c10-6 / art))))
                    :ARG1 c10-0))

# ::snt Giant pink ornaments...........Oh.
# ::tokens ["Giant", "pink", "ornaments", "...........", "Oh", "."]
# ::lemmas ["giant", "pink", "ornament", "...........", "oh", "."]
(c11-1 / ornament
       :ARG1-of (c11-3 / pink-04
                       :mod (c11-0 / giant))
       :mod (c11-2 / oh))

# ::snt She's awful. A waste of life
# ::tokens ["She", "'s", "awful", ".", "A", "waste", "of", "life"]
# ::lemmas ["she", "be", "awful", ".", "a", "waste", "of", "life"]
(c13-0 / multi-sentence
       :snt1 (c13-4 / awful
                    :domain (c13-1 / she))
       :snt2 (c13-3 / waste-01
                    :ARG1 (c13-2 / life)))

# ::snt Why?! she ain't got no kids, and this is news, delete this shit TMZ y'all reachin
# ::tokens ["Why", "?", "!", "she", "ai", "n't", "got", "no", "kids", ",", "and", "this", "is", "news", ",", "delete", "this", "shit", "TMZ", "y'", "all", "reachin"]
# ::lemmas ["why", "?", "!", "she", "be", "not", "get", "no", "kid", ",", "and", "this", "be", "news", ",", "delete", "this", "shit", "TMZ", "you", "all", "reachin"]
(c15-2 / multi-sentence
       :snt1 (c15-10 / cause-01
                     :ARG0 (c15-14 / amr-unknown))
       :snt2 (c15-13 / and
                     :op1 (c15-6 / have-03
                                 :ARG0 (c15-4 / she)
                                 :ARG1 (c15-7 / kid)
                                 :polarity -)
                     :op2 (c15-3 / news
                                 :domain (c15-12 / this)))
       :snt3 (c15-16 / delete-01
                     :ARG0 (c15-1 / you)
                     :ARG1 (c15-0 / shit
                                  :mod (c15-17 / this))
                     :mode imperative)
       :snt4 (c15-5 / reach-02
                    :ARG0 (c15-15 / you
                                  :mod (c15-11 / all))
                    :ARG1 (c15-8 / publication
                                 :name (c15-9 / name
                                              :op1 "TMZ"))))

# ::snt Why not. Shes been showing everyone her bush.
# ::tokens ["Why", "not", ".", "She", "s", "been", "showing", "everyone", "her", "bush", "."]
# ::lemmas ["why", "not", ".", "she", "s", "be", "show", "everyone", "her", "bush", "."]
(c16-2 / multi-sentence
       :snt1 (c16-5 / cause-01
                    :ARG0 (c16-6 / amr-unknown)
                    :polarity -)
       :snt2 (c16-3 / show-01
                    :ARG0 (c16-0 / she)
                    :ARG1 (c16-1 / bush
                                 :poss (c16-7 / she))
                    :ARG2 (c16-4 / everyone)))

# ::snt For the record, historical facts, just so you know the truth, via
# ::tokens ["For", "the", "record", ",", "historical", "facts", ",", "just", "so", "you", "know", "the", "truth", ",", "via"]
# ::lemmas ["for", "the", "record", ",", "historical", "fact", ",", "just", "so", "you", "know", "the", "truth", ",", "via"]
(c17-3 / have-purpose-91
       :ARG1 (c17-0 / fact
                    :mod (c17-5 / history))
       :ARG2 (c17-4 / know-01
                    :ARG0 (c17-1 / you)
                    :ARG1 (c17-7 / truth)
                    :mod (c17-6 / just))
       :purpose (c17-2 / record-01))

# ::snt UK, enjoy the ride - Pakistani Islamism Flowing Into The United Kingdom
# ::tokens ["UK", ",", "enjoy", "the", "ride", "-", "Pakistani", "Islamism", "Flowing", "Into", "The", "United", "Kingdom"]
# ::lemmas ["UK", ",", "enjoy", "the", "ride", "-", "Pakistani", "Islamism", "flow", "into", "The", "United", "Kingdom"]
(c18-3 / enjoy-01
       :ARG0 (c18-6 / country
                    :name (c18-1 / name
                                 :op1 "UK"))
       :ARG1 (c18-2 / ride-01
                    :ARG1 (c18-0 / fly-01
                                 :ARG1 (c18-7 / religious-group
                                              :name (c18-4 / name
                                                           :op1 "Islamism")
                                              :mod (c18-8 / country
                                                          :name (c18-5 / name
                                                                       :op1 "Pakistan")))
                                 :direction c18-6))
       :mode imperative)

# ::snt Sooo tired about this. I hate this whole family.
# ::tokens ["Sooo", "tired", "about", "this", ".", "I", "hate", "this", "whole", "family", "."]
# ::lemmas ["Sooo", "tired", "about", "this", ".", "i", "hate", "this", "whole", "family", "."]
(c19-1 / multi-sentence
       :snt1 (c19-5 / tire-01
                    :ARG0 (c19-7 / this)
                    :degree (c19-2 / so))
       :snt2 (c19-3 / hate-01
                    :ARG0 (c19-6 / i)
                    :ARG1 (c19-0 / family
                                 :mod (c19-4 / whole)
                                 :mod (c19-8 / this))))

# ::snt WARNING: TRAMP ALERT
# ::tokens ["WARNING", ":", "TRAMP", "ALERT"]
# ::lemmas ["warning", ":", "TRAMP", "ALERT"]
(c20-0 / warn-01
       :ARG1 (c20-2 / alert-01
                    :ARG2 (c20-1 / flood-01)))

# ::snt It's inspired by overindulgence -
# ::tokens ["It", "'s", "inspired", "by", "overindulgence", "-"]
# ::lemmas ["it", "be", "inspire", "by", "overindulgence", "-"]
(c21-2 / inspire-01
       :ARG0 (c21-1 / overindulgence)
       :ARG1 (c21-0 / it))

# ::snt Dammit.
# ::tokens ["Dammit", "."]
# ::lemmas ["Dammit", "."]
(c22-0 / damn-01)

# ::snt Love how these ppl flaunt their money when I cant even afford college for my kid
# ::tokens ["Love", "how", "these", "ppl", "flaunt", "their", "money", "when", "I", "ca", "nt", "even", "afford", "college", "for", "my", "kid"]
# ::lemmas ["Love", "how", "these", "ppl", "flaunt", "their", "money", "when", "i", "can", "nt", "even", "afford", "college", "for", "my", "kid"]
(c23-6 / love-01
       :ARG1 (c23-0 / flaunt-01
                    :ARG0 (c23-7 / ppl
                                 :mod (c23-11 / this))
                    :ARG1 (c23-1 / money
                                 :poss c23-7)
                    :time (c23-2 / possible-01
                                 :ARG1 (c23-3 / afford-01
                                              :ARG0 (c23-10 / i)
                                              :ARG1 (c23-9 / college)
                                              :beneficiary (c23-12 / person
                                                                   :ARG0-of (c23-5 / have-rel-role-91
                                                                                   :ARG1 c23-10
                                                                                   :ARG2 (c23-8 / kid)))
                                              :mod (c23-4 / even))
                                 :polarity -)))

# ::snt This is a joke right?
# ::tokens ["This", "is", "a", "joke", "right", "?"]
# ::lemmas ["this", "be", "a", "joke", "right", "?"]
(c24-0 / request-confirmation-91
       :ARG1 (c24-1 / joke-01
                    :ARG2 (c24-2 / this)))

# ::snt Watch or Download collection movie special MERRY CHRISTMAS
# ::tokens ["Watch", "or", "Download", "collection", "movie", "special", "MERRY", "CHRISTMAS"]
# ::lemmas ["watch", "or", "Download", "collection", "movie", "special", "MERRY", "CHRISTMAS"]
(c25-0 / or
       :op1 (c25-6 / watch-01
                   :ARG1 (c25-7 / thing
                                :ARG1-of (c25-5 / collect-01)
                                :mod (c25-2 / movie)
                                :ARG1-of (c25-4 / special-02
                                                :ARG2 (c25-1 / festival
                                                             :name (c25-3 / name
                                                                          :op1 "Merry"
                                                                          :op2 "Christmas")))))
       :op2 (c25-8 / download-01
                   :ARG1 c25-7))

# ::snt This foot Christmas Tree is inspired by love.
# ::tokens ["This", "foot", "Christmas", "Tree", "is", "inspired", "by", "love", "."]
# ::lemmas ["this", "foot", "Christmas", "Tree", "be", "inspire", "by", "love", "."]
(c26-4 / inspire-01
       :ARG0 (c26-2 / love)
       :ARG1 (c26-5 / animal
                    :name (c26-1 / name
                                 :op1 "Christmas"
                                 :op2 "Tree")
                    :mod (c26-0 / foot
                                :mod (c26-3 / this))))

# ::snt FFS who cares about any of the Kardashians??? NO ONE
# ::tokens ["FFS", "who", "cares", "about", "any", "of", "the", "Kardashians", "?", "?", "?", "NO", "ONE"]
# ::lemmas ["FFS", "who", "care", "about", "any", "of", "the", "Kardashians", "?", "?", "?", "no", "one"]
(c27-1 / multi-sentence
       :snt1 (c27-6 / care-01
                    :ARG0 (c27-8 / amr-unknown)
                    :ARG1 (c27-5 / person
                                 :mod (c27-7 / any)
                                 :ARG1-of (c27-9 / include-91
                                                 :ARG2 (c27-2 / person
                                                              :name (c27-3 / name
                                                                           :op1 "K Kardashians"))))
                    :mod (c27-0 / fucking
                                :mode expressive))
       :snt2 (c27-4 / no-one))

# ::snt Fuck this girl they're so annoying they aren't that damn interesting y'all are so stuck in they're asses they're WHORES LMAO
# ::tokens ["Fuck", "this", "girl", "they", "'re", "so", "annoying", "they", "are", "n't", "that", "damn", "interesting", "y'", "all", "are", "so", "stuck", "in", "they", "'re", "asses", "they", "'re", "WHORES", "LMAO"]
# ::lemmas ["fuck", "this", "girl", "they", "be", "so", "annoying", "they", "be", "not", "that", "damn", "interesting", "you", "all", "be", "so", "stuck", "in", "they", "be", "ass", "they", "be", "WHORES", "lmao"]
(c28-6 / cause-01
       :ARG0 (c28-4 / have-degree-91
                    :ARG1 (c28-12 / girl
                                  :mod (c28-9 / this))
                    :ARG2 (c28-11 / annoy-01
                                  :ARG0 c28-12)
                    :ARG3 (c28-3 / so)
                    :ARG6 (c28-10 / interest-01
                                  :ARG0 c28-12
                                  :mod (c28-13 / damn)
                                  :ARG1-of (c28-15 / cause-01
                                                   :ARG0 (c28-0 / stick-01
                                                                :ARG1 c28-12
                                                                :ARG2 (c28-14 / ass
                                                                              :poss (c28-2 / you
                                                                                           :mod (c28-7 / all))
                                                                              :ARG2-of c28-0)
                                                                :ARG2-of (c28-8 / have-degree-91
                                                                                :ARG1 (c28-5 / person
                                                                                             :ARG3 (c28-16 / so)))))
                                  :polarity -)
                    :ARG1 (c28-1 / fuck-01
                                 :ARG1 c28-12
                                 :mode expressive)))

# ::snt sooooo over this headline
# ::tokens ["sooooo", "over", "this", "headline"]
# ::lemmas ["sooooo", "over", "this", "headline"]
(c29-0 / over-02
       :ARG1 (c29-3 / thing
                    :ARG2-of (c29-2 / headline-01)
                    :mod (c29-4 / this))
       :degree (c29-1 / so))

# ::snt gender. not sex. sex is an act.
# ::tokens ["gender", ".", "not", "sex", ".", "sex", "is", "an", "act", "."]
# ::lemmas ["gender", ".", "not", "sex", ".", "sex", "be", "an", "act", "."]
(c30-1 / multi-sentence
       :snt1 (c30-4 / and
                    :op1 (c30-5 / gender)
                    :op2 (c30-2 / sex-01
                                :polarity -))
       :snt2 (c30-3 / act-02
                    :domain (c30-0 / sex-01)))

# ::snt Who is she?
# ::tokens ["Who", "is", "she", "?"]
# ::lemmas ["who", "be", "she", "?"]
(c31-1 / she
       :domain (c31-0 / amr-unknown))
