# ::snt your SISTER is PERFECT, KENDALL
# ::tokens ["your", "SISTER", "is", "PERFECT", ",", "KENDALL"]
# ::lemmas ["your", "SISTER", "be", "PERFECT", ",", "KENDALL"]
(c1-3 / say-01
      :ARG0 (c1-6 / i)
      :ARG1 (c1-5 / perfect-02
                  :ARG1 (c1-2 / person
                              :ARG0-of (c1-4 / have-rel-role-91
                                             :ARG1 (c1-7 / person
                                                         :name (c1-1 / name
                                                                     :op1 "Kendall"))
                                             :ARG2 (c1-0 / sister))))
      :ARG2 c1-7)

# ::snt Great news m8.
# ::tokens ["Great", "news", "m8", "."]
# ::lemmas ["great", "news", "m8", "."]
(c2-2 / news
      :mod (c2-0 / great)
      :time (c2-1 / date-entity
                  :month 8))

# ::snt Tell him to message me.
# ::tokens ["Tell", "him", "to", "message", "me", "."]
# ::lemmas ["tell", "he", "to", "message", "i", "."]
(c3-4 / tell-01
      :ARG0 (c3-0 / you)
      :ARG1 (c3-1 / message-01
                  :ARG0 (c3-2 / he)
                  :ARG2 (c3-3 / i))
      :ARG2 c3-2
      :mode imperative)

# ::snt For real? Or you are guessing? Queen is also a butterfly &amp; more Kardashian/Jenner like for a name
# ::tokens ["For", "real", "?", "Or", "you", "are", "guessing", "?", "Queen", "is", "also", "a", "butterfly", "&", "amp", ";", "more", "Kardashian", "/", "Jenner", "like", "for", "a", "name"]
# ::lemmas ["for", "real", "?", "or", "you", "be", "guess", "?", "queen", "be", "also", "a", "butterfly", "&", "amp", ";", "more", "Kardashian", "/", "Jenner", "like", "for", "a", "name"]
(c4-10 / multi-sentence
       :snt1 (c4-14 / real-04
                    :polarity (c4-6 / amr-unknown))
       :snt2 (c4-7 / guess-01
                   :ARG0 (c4-2 / you)
                   :ARG1 (c4-5 / and
                               :op1 (c4-4 / and
                                          :op1 (c4-9 / butterfly)
                                          :op2 (c4-18 / amp)
                                          :domain (c4-8 / queen)
                                          :mod (c4-17 / also))
                               :op2 (c4-1 / resemble-01
                                          :ARG1 (c4-0 / slash
                                                      :op1 (c4-15 / person
                                                                  :name (c4-13 / name
                                                                               :op1 "Kardashian"))
                                                      :op2 (c4-11 / person
                                                                  :name (c4-12 / name
                                                                               :op1 "Jenner")))
                                          :ARG2 (c4-16 / name)
                                          :quant (c4-3 / more)))))

# ::snt Ummm, you have a kid now. Your old life is now gone, forever.
# ::tokens ["Ummm", ",", "you", "have", "a", "kid", "now", ".", "Your", "old", "life", "is", "now", "gone", ",", "forever", "."]
# ::lemmas ["ummm", ",", "you", "have", "a", "kid", "now", ".", "your", "old", "life", "be", "now", "go", ",", "forever", "."]
(c5-4 / multi-sentence
      :snt1 (c5-5 / have-03
                  :ARG0 (c5-2 / you)
                  :ARG1 (c5-6 / kid)
                  :time (c5-3 / now))
      :snt2 (c5-9 / go-02
                  :ARG0 (c5-7 / life
                              :poss (c5-10 / you)
                              :mod (c5-0 / old))
                  :time (c5-8 / now)
                  :duration (c5-1 / forever))
      :mod (c5-11 / umm
                  :mode expressive))

# ::snt That is fair lol
# ::tokens ["That", "is", "fair", "lol"]
# ::lemmas ["that", "be", "fair", "lol"]
(c6-0 / fair-01
      :ARG1 (c6-3 / that)
      :ARG2-of (c6-2 / laugh-01
                     :manner (c6-1 / loud)
                     :mode expressive))

# ::snt You do know millionaire reality isnt regular reality right??
# ::tokens ["You", "do", "know", "millionaire", "reality", "is", "nt", "regular", "reality", "right", "?", "?"]
# ::lemmas ["you", "do", "know", "millionaire", "reality", "be", "not", "regular", "reality", "right", "?", "?"]
(c7-4 / know-01
      :ARG0 (c7-1 / you)
      :ARG1 (c7-3 / real-04
                  :ARG1 (c7-6 / reality
                              :mod (c7-2 / millionaire))
                  :ARG1-of (c7-5 / regular-03)
                  :polarity -)
      :ARG1-of (c7-0 / request-confirmation-91
                     :ARG2 c7-1))

# ::snt Sorry honey. You have a baby now. Your old life is gone.
# ::tokens ["Sorry", "honey", ".", "You", "have", "a", "baby", "now", ".", "Your", "old", "life", "is", "gone", "."]
# ::lemmas ["sorry", "honey", ".", "you", "have", "a", "baby", "now", ".", "your", "old", "life", "be", "go", "."]
(c8-4 / multi-sentence
      :snt1 (c8-6 / say-01
                  :ARG1 (c8-0 / sorry-01)
                  :ARG2 (c8-7 / honey))
      :snt2 (c8-9 / have-05
                  :ARG0 (c8-3 / you)
                  :ARG1 (c8-2 / baby)
                  :time (c8-5 / now))
      :snt3 (c8-10 / go-02
                   :ARG0 (c8-8 / life
                               :poss (c8-11 / you)
                               :mod (c8-1 / old))))

# ::snt The parts she is missing are probably in the cupboard under the sink in the downstairs bathroom. Thats where I hide a lot of my stuff.
# ::tokens ["The", "parts", "she", "is", "missing", "are", "probably", "in", "the", "cupboard", "under", "the", "sink", "in", "the", "downstairs", "bathroom", ".", "That", "s", "where", "I", "hide", "a", "lot", "of", "my", "stuff", "."]
# ::lemmas ["the", "part", "she", "be", "miss", "be", "probably", "in", "the", "cupboard", "under", "the", "sink", "in", "the", "downstairs", "bathroom", ".", "that", "s", "where", "i", "hide", "a", "lot", "of", "my", "stuff", "."]
(c9-2 / multi-sentence
      :snt1 (c9-6 / probable
                  :domain (c9-1 / be-located-at-91
                                :ARG1 (c9-3 / part
                                            :ARG1-of (c9-5 / miss-01
                                                           :ARG0 (c9-4 / she)))
                                :ARG2 (c9-10 / cupboard
                                             :location (c9-14 / under
                                                              :op1 (c9-0 / sink
                                                                         :location (c9-7 / bathroom
                                                                                         :location (c9-13 / downstairs)))))))
      :snt2 (c9-8 / hide-01
                  :ARG0 (c9-11 / i)
                  :ARG1 (c9-15 / stuff
                               :quant (c9-9 / lot)
                               :poss c9-11)
                  :location (c9-12 / that)))

# ::snt Welcome to parenthood
# ::tokens ["Welcome", "to", "parenthood"]
# ::lemmas ["welcome", "to", "parenthood"]
(c10-0 / welcome-01
       :ARG1 (c10-1 / you)
       :ARG2 (c10-2 / parenthood))

# ::snt The babys name is Claudia. Its a type of . Love the flowers
# ::tokens ["The", "babys", "name", "is", "Claudia", ".", "Its", "a", "type", "of", ".", "Love", "the", "flowers"]
# ::lemmas ["the", "baby", "name", "be", "Claudia", ".", "its", "a", "type", "of", ".", "love", "the", "flower"]
(c11-3 / multi-sentence
       :snt1 (c11-2 / name-01
                    :ARG1 (c11-5 / person
                                 :ARG0-of (c11-1 / babysit-01)
                                 :ARG2-of c11-2)
                    :name (c11-4 / name
                                 :op1 "Claudia"))
       :snt2 (c11-8 / type
                    :domain (c11-7 / it))
       :snt3 (c11-6 / love-01
                    :ARG1 (c11-0 / flower)))

# ::snt Yea ok jenners and Kardashians crave attention without it they'd be lost.
# ::tokens ["Yea", "ok", "jenners", "and", "Kardashians", "crave", "attention", "without", "it", "they", "'d", "be", "lost", "."]
# ::lemmas ["yea", "ok", "jenner", "and", "Kardashians", "crave", "attention", "without", "it", "they", "would", "be", "lose", "."]
(c12-0 / okay-04
       :ARG1 (c12-6 / crave-01
                    :ARG0 (c12-8 / and
                                 :op1 (c12-4 / person
                                             :name (c12-1 / name
                                                          :op1 "Jones"))
                                 :op2 (c12-2 / person
                                             :name (c12-3 / name
                                                          :op1 "K Kardashians")))
                    :ARG1 (c12-7 / attend-02
                                 :ARG1 c12-8)
                    :condition (c12-5 / lose-02
                                      :ARG1 c12-8
                                      :polarity -)))

# ::snt So unfair that Kardashian/Jenner babies arent self sufficient.
# ::tokens ["So", "unfair", "that", "Kardashian", "/", "Jenner", "babies", "are", "nt", "self", "sufficient", "."]
# ::lemmas ["so", "unfair", "that", "Kardashian", "/", "Jenner", "baby", "be", "not", "self", "sufficient", "."]
(c13-0 / fair-01
       :ARG2 (c13-6 / suffice-01
                    :ARG0 (c13-2 / baby
                                 :ARG0-of (c13-7 / have-rel-role-91
                                                 :ARG1 (c13-1 / slash
                                                              :op1 (c13-8 / person
                                                                          :name (c13-4 / name
                                                                                       :op1 "Kardashian"))
                                                              :op2 (c13-5 / person
                                                                          :name (c13-9 / name
                                                                                       :op1 "Jenner")))
                                                 :ARG2 (c13-10 / child)))
                    :ARG1 (c13-3 / or)
                    :degree (c13-11 / so)
                    :polarity -)
       :polarity -)

# ::snt OH MY GOD THE SOUL SUCKING SHALLOWNESS. (Hi Perez)
# ::tokens ["OH", "MY", "GOD", "THE", "SOUL", "SUCKING", "SHALLOWNESS", ".", "(", "Hi", "Perez", ")"]
# ::lemmas ["OH", "my", "god", "the", "SOUL", "suck", "SHALLOWNESS", ".", "(", "Hi", "Perez", ")"]
(c15-2 / multi-sentence
       :snt1 (c15-6 / person
                    :name (c15-1 / name
                                 :op1 "Perez")
                    :mode expressive)
       :snt2 (c15-3 / person
                    :name (c15-5 / name
                                 :op1 "God")
                    :mod (c15-0 / oh)
                    :mode expressive)
       :snt3 (c15-4 / say-01
                    :ARG1 (c15-7 / hi)
                    :ARG2 (c15-9 / person
                                 :name (c15-8 / name
                                              :op1 "Perez"))))

# ::snt Hahaha wait until the reality of having to take care of a human sets in.
# ::tokens ["Hahaha", "wait", "until", "the", "reality", "of", "having", "to", "take", "care", "of", "a", "human", "sets", "in", "."]
# ::lemmas ["Hahaha", "wait", "until", "the", "reality", "of", "have", "to", "take", "care", "of", "a", "human", "set", "in", "."]
(c16-5 / wait-01
       :ARG1 (c16-1 / you)
       :time (c16-8 / until
                    :op1 (c16-3 / reality
                                :mod (c16-0 / obligate-01
                                            :ARG2 (c16-6 / care-03
                                                         :ARG1 (c16-4 / human)))
                                :ARG1-of (c16-2 / set-in-07)))
       :mod (c16-7 / haha
                   :mode expressive)
       :mode imperative)

# ::snt a fais ans bb je pense pas qu'il se souvient de toi
# ::tokens ["a", "fais", "ans", "bb", "je", "pense", "pas", "qu'il", "se", "souvient", "de", "toi"]
# ::lemmas ["a", "fais", "ans", "bb", "je", "pense", "pas", "qu'il", "se", "souvient", "de", "toi"]
(c17-8 / and
       :op1 (c17-5 / have-concession-91
                   :ARG1 (c17-6 / pense-01
                                :ARG0 (c17-1 / you)
                                :ARG1 (c17-3 / person
                                             :name (c17-2 / name
                                                          :op1 "bb"
                                                          :op2 "Jesus"))
                                :mode imperative)
                   :ARG2 (c17-0 / be-located-at-91
                                :ARG1 c17-3
                                :ARG2 (c17-7 / city
                                             :name c17-2
                                             :op1 "Paris")))
       :op2 (c17-4 / souvient
                   :domain c17-3))

# ::snt non en quatrime Justin il m'a follow...
# ::tokens ["non", "en", "quatrime", "Justin", "il", "m'a", "follow", "..."]
# ::lemmas ["non", "en", "quatrime", "Justin", "il", "m'a", "follow", "..."]
(c18-2 / say-01
       :ARG0 (c18-5 / i)
       :ARG1 (c18-0 / follow-02
                    :ARG0 (c18-4 / person
                                 :name (c18-1 / name
                                              :op1 "Justin"))
                    :ARG1-of (c18-3 / request-confirmation-91))
       :ARG2 c18-4)

# ::snt des trucs comme a, a arrive que lui
# ::tokens ["des", "trucs", "comme", "a", ",", "a", "arrive", "que", "lui"]
# ::lemmas ["des", "truc", "comme", "a", ",", "a", "arrive", "que", "lui"]
(c19-0 / multi-sentence
       :snt1 (c19-2 / comme-a
                    :des (c19-3 / trucs))
       :snt2 (c19-4 / arrive-01
                    :ARG1-of (c19-1 / request-confirmation-91)))

# ::snt ENORME
# ::tokens ["ENORME"]
# ::lemmas ["ENORME"]
(c20-0 / enoreme)

# ::snt JE T ASSURE! va sur son Twitter tu verra le rt &lt;333
# ::tokens ["JE", "T", "ASSURE", "!", "va", "sur", "son", "Twitter", "tu", "verra", "le", "rt", "&", "lt;333"]
# ::lemmas ["JE", "T", "ASSURE", "!", "va", "sur", "son", "Twitter", "tu", "verra", "le", "rt", "&", "lt;333"]
(c21-2 / multi-sentence
       :snt1 (c21-12 / assume-02
                     :ARG0 (c21-8 / person
                                  :name (c21-1 / name
                                               :op1 "JE"
                                               :op2 "T")))
       :snt2 (c21-3 / possible-01
                    :ARG1 (c21-5 / reply-01
                                 :ARG0 (c21-0 / you)
                                 :ARG2 (c21-13 / publication
                                               :name (c21-7 / name
                                                            :op1 "Twitter"))))
       :snt3 (c21-4 / say-01
                    :ARG0 (c21-11 / i)
                    :ARG1 (c21-6 / verra
                                 :op1 (c21-10 / person
                                              :name (c21-9 / name
                                                           :op1 "Le"
                                                           :op2 "Rt"
                                                           :op3 "&"
                                                           :op4 "lt"
                                                           :op5 "333")
                                              :ARG2-of c21-4))))

# ::snt JURE
# ::tokens ["JURE"]
# ::lemmas ["JURE"]
(c22-0 / sure-02)

# ::snt jordyn woods
# ::tokens ["jordyn", "woods"]
# ::lemmas ["jordyn", "wood"]
(c23-0 / woods
       :name (c23-1 / name
                    :op1 "Jordyn"))

# ::snt laquelle
# ::tokens ["laquelle"]
# ::lemmas ["laquelle"]
(c24-1 / person
       :name (c24-0 / name
                    :op1 "laquelle"))

# ::snt pck la meilleure amie de Kylie a retweete et aim bb
# ::tokens ["pck", "la", "meilleure", "amie", "de", "Kylie", "a", "retweete", "et", "aim", "bb"]
# ::lemmas ["pck", "la", "meilleure", "amie", "de", "Kylie", "a", "retweete", "et", "aim", "bb"]
(c25-3 / and
       :op1 (c25-7 / tweet-02
                   :ARG0 (c25-5 / person
                                :name (c25-0 / name
                                             :op1 "bb"))
                   :ARG1 (c25-1 / person
                                :name (c25-4 / name
                                             :op1 "Mie"
                                             :op2 "de"
                                             :op3 "Kylie"))
                   :mod (c25-2 / meilleure))
       :op2 (c25-6 / aim-02
                   :ARG0 c25-5))

# ::snt PQ t'as autant de j'aime?
# ::tokens ["PQ", "t'as", "autant", "de", "j'aime", "?"]
# ::lemmas ["pq", "t'as", "autant", "de", "j'aime", "?"]
(c26-3 / amr-unintelligible
       :polarity (c26-2 / amr-unknown)
       :mod (c26-0 / autant
                   :mod (c26-1 / j'aime))
       :value "PQ")

# ::snt bb t'as perc mdrr
# ::tokens ["bb", "t'as", "perc", "mdrr"]
# ::lemmas ["bb", "t'as", "perc", "mdrr"]
(c27-3 / say-01
       :ARG0 (c27-5 / i)
       :ARG1 (c27-6 / and
                    :op1 (c27-0 / bb
                                :mode expressive)
                    :op2 (c27-4 / perc
                                :mode expressive))
       :ARG2 (c27-2 / person
                    :name (c27-1 / name
                                 :op1 "Mdrr")))

# ::snt can u retweet this
# ::tokens ["can", "u", "retweet", "this"]
# ::lemmas ["can", "u", "retweet", "this"]
(c28-2 / possible-01
       :ARG1 (c28-1 / retweet-01
                    :ARG0 (c28-0 / you)
                    :ARG1 (c28-3 / this))
       :polarity (c28-4 / amr-unknown))

# ::snt Do you expect grandparents to be at the birth?
# ::tokens ["Do", "you", "expect", "grandparents", "to", "be", "at", "the", "birth", "?"]
# ::lemmas ["do", "you", "expect", "grandparent", "to", "be", "at", "the", "birth", "?"]
(c29-2 / expect-01
       :polarity (c29-6 / amr-unknown)
       :ARG0 (c29-1 / you)
       :ARG1 (c29-0 / be-located-at-91
                    :ARG1 (c29-4 / person
                                 :ARG0-of (c29-3 / have-rel-role-91
                                                 :ARG2 (c29-7 / grandchild)))
                    :ARG2 (c29-5 / bear-02)))

# ::snt missed *** feeling really salty rn
# ::tokens ["missed", "*", "*", "*", "feeling", "really", "salty", "rn"]
# ::lemmas ["miss", "*", "*", "*", "feel", "really", "salty", "rn"]
(c30-4 / say-01
       :ARG0 (c30-7 / i)
       :ARG1 (c30-2 / miss-02
                    :ARG0 c30-7
                    :ARG1 (c30-0 / feel-01
                                 :ARG0 c30-7
                                 :ARG1 (c30-1 / salty
                                              :degree (c30-5 / really))))
       :ARG2 (c30-6 / person
                    :name (c30-3 / name
                                 :op1 "Rn")))

# ::snt Tampoco sabas qu era el pilates. Ya empieza a cobrar pensin.
# ::tokens ["Tampoco", "sabas", "qu", "era", "el", "pilates", ".", "Ya", "empieza", "a", "cobrar", "pensin", "."]
# ::lemmas ["Tampoco", "sabas", "qu", "era", "el", "pilate", ".", "ya", "empieza", "a", "cobrar", "pensin", "."]
(c32-1 / multi-sentence
       :snt1 (c32-3 / sabas
                    :mod (c32-8 / tampoco)
                    :condition (c32-4 / era
                                      :mod (c32-6 / pilates)))
       :snt2 (c32-9 / empieza
                    :domain (c32-0 / you)
                    :ARG1-of (c32-5 / mean-01
                                    :ARG2 (c32-7 / cobrar-01
                                                 :ARG1 (c32-2 / pensin)))))

# ::snt then put your wig back on
# ::tokens ["then", "put", "your", "wig", "back", "on"]
# ::lemmas ["then", "put", "your", "wig", "back", "on"]
(c33-2 / put-on-08
       :ARG0 (c33-1 / you)
       :ARG1 (c33-3 / wig
                    :poss c33-1)
       :time (c33-4 / then)
       :mod (c33-0 / back)
       :mode imperative)

# ::snt is that really a news?
# ::tokens ["is", "that", "really", "a", "news", "?"]
# ::lemmas ["be", "that", "really", "a", "news", "?"]
(c34-2 / news
       :polarity (c34-3 / amr-unknown)
       :domain (c34-1 / that)
       :ARG1-of (c34-0 / real-04))

# ::snt really...
# ::tokens ["really", "..."]
# ::lemmas ["really", "..."]
(c35-0 / real-04)

# ::snt Not true.
# ::tokens ["Not", "true", "."]
# ::lemmas ["not", "true", "."]
(c37-0 / true-01
       :polarity -)

# ::snt Hot + Trending
# ::tokens ["Hot", "+", "Trending"]
# ::lemmas ["hot", "+", "trend"]
(c38-2 / and
       :op1 (c38-0 / hot-04)
       :op2 (c38-1 / trend-01))

# ::snt Yes I do.
# ::tokens ["Yes", "I", "do", "."]
# ::lemmas ["yes", "i", "do", "."]
(c39-0 / do-02
       :ARG1 (c39-1 / i))

# ::snt He's admitting to influencing culture appropriation. Nothing to proud of loser!
# ::tokens ["He", "'s", "admitting", "to", "influencing", "culture", "appropriation", ".", "Nothing", "to", "proud", "of", "loser", "!"]
# ::lemmas ["he", "be", "admit", "to", "influence", "culture", "appropriation", ".", "nothing", "to", "proud", "of", "loser", "!"]
(c40-0 / multi-sentence
       :snt1 (c40-4 / admit-01
                    :ARG0 (c40-5 / he)
                    :ARG1 (c40-10 / influence-01
                                  :ARG0 c40-5
                                  :ARG1 (c40-9 / appropriate-01
                                               :ARG1 (c40-8 / culture))))
       :snt2 (c40-6 / pride-01
                    :ARG0 (c40-3 / i)
                    :ARG1 (c40-1 / person
                                 :ARG0-of (c40-7 / lose-03))
                    :ARG2 (c40-2 / nothing)))

# ::snt When black women said this we were called mad
# ::tokens ["When", "black", "women", "said", "this", "we", "were", "called", "mad"]
# ::lemmas ["when", "black", "woman", "say", "this", "we", "be", "call", "mad"]
(c41-4 / call-01
       :ARG1 (c41-5 / we)
       :ARG2 (c41-1 / mad-04
                    :ARG1 c41-5)
       :time (c41-2 / say-01
                    :ARG0 (c41-3 / woman
                                 :ARG1-of (c41-0 / black-05))
                    :ARG1 (c41-6 / this)))

# ::snt Im guessing yiu dont listen to hip hop
# ::tokens ["I", "m", "guessing", "yiu", "do", "nt", "listen", "to", "hip", "hop"]
# ::lemmas ["i", "m", "guess", "yiu", "do", "not", "listen", "to", "hip", "hop"]
(c42-4 / guess-01
       :ARG0 (c42-3 / i)
       :ARG1 (c42-2 / listen-01
                    :ARG0 (c42-0 / you)
                    :ARG1 (c42-1 / hip-hop)
                    :polarity -))

# ::snt Tyga been poppin since " fukk em fukk em all day.... fukk em all night....
# ::tokens ["Tyga", "been", "poppin", "since", "\"", "fukk", "em", "fukk", "em", "all", "day", "....", "fukk", "em", "all", "night", "...."]
# ::lemmas ["tyga", "been", "poppin", "since", "\"", "fukk", "em", "fukk", "em", "all", "day", "....", "fukk", "em", "all", "night", "...."]
(c43-6 / poppin-00
       :ARG0 (c43-2 / person
                    :name (c43-1 / name
                                 :op1 "Tyga"))
       :time (c43-3 / since
                    :op1 (c43-0 / fuck-01
                                :ARG1 (c43-10 / they)
                                :time (c43-11 / day
                                              :mod (c43-4 / all))
                                :mode expressive)
                    :op2 (c43-7 / fuck-01
                                :ARG1 c43-10
                                :time (c43-8 / date-entity
                                             :dayperiod (c43-5 / night)
                                             :mod (c43-9 / all))
                                :mode expressive)))

# ::snt Hahaha. I'm sure he wants to eat his words lol. I hope he won't want royalties for naming the lipkits lol.
# ::tokens ["Hahaha", ".", "I", "'m", "sure", "he", "wants", "to", "eat", "his", "words", "lol", ".", "I", "hope", "he", "wo", "n't", "want", "royalties", "for", "naming", "the", "lipkits", "lol", "."]
# ::lemmas ["Hahaha", ".", "i", "be", "sure", "he", "want", "to", "eat", "his", "word", "lol", ".", "i", "hope", "he", "will", "not", "want", "royalty", "for", "name", "the", "lipkit", "lol", "."]
(c45-8 / multi-sentence
       :snt1 (c45-5 / haha
                    :mode expressive)
       :snt2 (c45-0 / sure-02
                    :ARG0 (c45-18 / i)
                    :ARG1 (c45-16 / want-01
                                  :ARG0 (c45-17 / he)
                                  :ARG1 (c45-15 / eat-01
                                                :ARG0 c45-17
                                                :ARG1 (c45-2 / word
                                                             :poss c45-17))
                                  :ARG2-of (c45-1 / laugh-01
                                                  :ARG0 c45-18
                                                  :manner (c45-7 / loud))))
       :snt3 (c45-4 / hope-01
                    :ARG0 (c45-3 / i)
                    :ARG1 (c45-12 / want-01
                                  :ARG0 (c45-11 / he)
                                  :ARG1 (c45-14 / royalty
                                                :ARG1-of (c45-9 / cause-01
                                                                :ARG0 (c45-13 / name-01
                                                                              :ARG0 c45-11
                                                                              :ARG1 (c45-6 / lipcat))))
                                  :ARG2-of c45-1
                                  :ARG0 c45-3
                                  :manner (c45-10 / loud)
                                  :polarity -)))

# ::snt Smh he should sit down
# ::tokens ["Smh", "he", "should", "sit", "down"]
# ::lemmas ["smh", "he", "should", "sit", "down"]
(c46-0 / recommend-01
       :ARG1 (c46-3 / sit-down-02
                    :ARG1 (c46-2 / he))
       :mod (c46-1 / smh
                   :mode expressive))

# ::snt Lol ikr
# ::tokens ["Lol", "ikr"]
# ::lemmas ["Lol", "ikr"]
(c47-1 / laugh-01
       :ARG0 (c47-2 / i)
       :manner (c47-0 / loud)
       :mode expressive)

# ::snt his pissed cause his not the babydaddy
# ::tokens ["his", "pissed", "cause", "his", "not", "the", "babydaddy"]
# ::lemmas ["his", "pissed", "cause", "his", "not", "the", "babydaddy"]
(c48-3 / piss-03
       :ARG0 (c48-2 / have-rel-role-91
                    :ARG0 (c48-0 / he)
                    :ARG2 (c48-1 / daddy)
                    :polarity -)
       :ARG1 c48-0)

# ::snt these niggas aint shit..
# ::tokens ["these", "niggas", "ai", "nt", "shit", ".."]
# ::lemmas ["these", "niggas", "be", "not", "shit", ".."]
(c49-2 / shit
       :domain (c49-1 / nigga
                      :mod (c49-0 / this))
       :polarity -)

# ::snt Babe your sis getting sidelined here
# ::tokens ["Babe", "your", "sis", "getting", "sidelined", "here"]
# ::lemmas ["babe", "your", "sis", "getting", "sideline", "here"]
(c50-1 / bugger
       :domain (c50-7 / get-03
                      :ARG1 (c50-5 / person
                                   :ARG0-of (c50-4 / have-rel-role-91
                                                   :ARG1 (c50-2 / you)
                                                   :ARG2 (c50-3 / sister)))
                      :ARG2 (c50-0 / sideline-01
                                   :ARG1 c50-5)
                      :location (c50-6 / here))
       :mode expressive)
