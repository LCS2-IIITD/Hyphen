# ::snt A must-do.
# ::tokens ["A", "must", "-", "do", "."]
# ::lemmas ["a", "must", "-", "do", "."]
(c1-2 / thing
      :ARG1-of (c1-0 / do-02
                     :ARG2-of (c1-1 / obligate-01)))

# ::snt Not Harry, the Queen making sure of prenup and Megs naive thinking she wouldn't be signing one. Megs got a whole lot to learn
# ::tokens ["Not", "Harry", ",", "the", "Queen", "making", "sure", "of", "prenup", "and", "Megs", "naive", "thinking", "she", "would", "n't", "be", "signing", "one", ".", "Megs", "got", "a", "whole", "lot", "to", "learn"]
# ::lemmas ["not", "Harry", ",", "the", "Queen", "make", "sure", "of", "prenup", "and", "Megs", "naive", "thinking", "she", "would", "not", "be", "sign", "one", ".", "meg", "get", "a", "whole", "lot", "to", "learn"]
(c2-9 / multi-sentence
      :snt1 (c2-12 / contrast-01
                   :ARG1 (c2-16 / person
                                :name (c2-14 / name
                                             :op1 "Harry")
                                :polarity -)
                   :ARG2 (c2-6 / and
                               :op1 (c2-15 / ensure-01
                                           :ARG0 (c2-4 / queen)
                                           :ARG1 (c2-19 / impregnate-01))
                               :op2 (c2-5 / think-01
                                          :ARG0 (c2-10 / person
                                                       :name (c2-11 / name
                                                                    :op1 "Meg"))
                                          :ARG1 (c2-0 / sign-02
                                                      :ARG0 c2-10
                                                      :ARG1 (c2-3 / one)
                                                      :polarity -)
                                          :mod (c2-17 / naive))))
      :snt2 (c2-8 / obligate-01
                  :ARG1 (c2-2 / person
                              :name (c2-13 / name
                                           :op1 "Meg"))
                  :ARG2 (c2-1 / learn-01
                              :ARG0 c2-2
                              :ARG1 (c2-7 / lot
                                          :degree (c2-18 / whole)))))

# ::snt Ugh-oh.. bump in the road!! Thatll do it!!
# ::tokens ["Ugh", "-", "oh", "..", "bump", "in", "the", "road", "!", "!", "That", "ll", "do", "it", "!", "!"]
# ::lemmas ["ugh", "-", "oh", "..", "bump", "in", "the", "road", "!", "!", "that", "ll", "do", "it", "!", "!"]
(c3-2 / multi-sentence
      :snt1 (c3-0 / bump-01
                  :ARG0 (c3-1 / you)
                  :location (c3-3 / road)
                  :mod (c3-7 / ugh
                             :mode expressive)
                  :mode imperative)
      :snt2 (c3-6 / do-02
                  :ARG0 (c3-5 / that)
                  :ARG1 (c3-4 / it)))

# ::snt I don't know why she was so surprised, I mean seriously it protects you both. Plus if you believe in your love it shouldn't be a problem.
# ::tokens ["I", "do", "n't", "know", "why", "she", "was", "so", "surprised", ",", "I", "mean", "seriously", "it", "protects", "you", "both", ".", "Plus", "if", "you", "believe", "in", "your", "love", "it", "should", "n't", "be", "a", "problem", "."]
# ::lemmas ["i", "do", "not", "know", "why", "she", "be", "so", "surprised", ",", "i", "mean", "seriously", "it", "protect", "you", "both", ".", "plus", "if", "you", "believe", "in", "your", "love", "it", "should", "not", "be", "a", "problem", "."]
(c4-13 / multi-sentence
       :snt1 (c4-9 / know-01
                   :ARG0 (c4-18 / i)
                   :ARG1 (c4-10 / thing
                                :ARG0-of (c4-15 / cause-01
                                                :ARG1 (c4-0 / surprise-01
                                                            :ARG1 (c4-5 / she)
                                                            :degree (c4-4 / so))))
                   :polarity -)
       :snt2 (c4-8 / mean-01
                   :ARG0 (c4-7 / i)
                   :ARG2 (c4-17 / protect-01
                                :ARG0 (c4-11 / it)
                                :ARG1 (c4-6 / you
                                            :mod (c4-12 / both))
                                :ARG1-of (c4-16 / serious-01)))
       :snt3 (c4-14 / probable
                    :domain (c4-3 / problem
                                  :condition (c4-1 / believe-01
                                                   :ARG0 c4-6
                                                   :ARG1 (c4-2 / love-01
                                                               :ARG0 c4-6))
                                  :polarity -)))

# ::snt Really? She's THAT surprised..... Guess you got your reality check
# ::tokens ["Really", "?", "She", "'s", "THAT", "surprised", ".....", "Guess", "you", "got", "your", "reality", "check"]
# ::lemmas ["really", "?", "she", "be", "that", "surprised", ".....", "guess", "you", "get", "your", "reality", "check"]
(c5-2 / multi-sentence
      :snt1 (c5-3 / surprise-01
                  :polarity (c5-8 / amr-unknown)
                  :ARG1 (c5-0 / she)
                  :degree (c5-6 / that)
                  :ARG1-of (c5-4 / real-04))
      :snt2 (c5-9 / guess-01
                  :ARG1 (c5-7 / get-01
                              :ARG0 (c5-1 / you)
                              :ARG1 (c5-5 / check-01
                                          :ARG1 (c5-10 / reality)
                                          :ARG2 c5-1))))

# ::snt Excellent news!
# ::tokens ["Excellent", "news", "!"]
# ::lemmas ["excellent", "news", "!"]
(c6-0 / excellent-02
      :ARG1 (c6-1 / news)
      :mode expressive)

# ::snt I'm a normal person and going to do a prenup
# ::tokens ["I", "'m", "a", "normal", "person", "and", "going", "to", "do", "a", "prenup"]
# ::lemmas ["i", "be", "a", "normal", "person", "and", "go", "to", "do", "a", "prenup"]
(c7-4 / and
      :op1 (c7-2 / person
                 :domain (c7-3 / i)
                 :ARG1-of (c7-0 / normal-02))
      :op2 (c7-5 / do-02
                 :ARG0 c7-3
                 :ARG1 (c7-1 / prenup-00)))

# ::snt Probably should have discussed this before asking her to marry you.
# ::tokens ["Probably", "should", "have", "discussed", "this", "before", "asking", "her", "to", "marry", "you", "."]
# ::lemmas ["probably", "should", "have", "discuss", "this", "before", "ask", "she", "to", "marry", "you", "."]
(c8-6 / probable
      :domain (c8-4 / recommend-01
                    :ARG1 (c8-8 / discuss-01
                                :ARG1 (c8-7 / this)
                                :time (c8-0 / before
                                            :op1 (c8-5 / ask-02
                                                       :ARG1 (c8-2 / marry-01
                                                                   :ARG0 (c8-3 / she)
                                                                   :ARG1 (c8-1 / you)
                                                                   :ARG2 c8-3))))))

# ::snt That's what you get for picking an American wife.
# ::tokens ["That", "'s", "what", "you", "get", "for", "picking", "an", "American", "wife", "."]
# ::lemmas ["that", "be", "what", "you", "get", "for", "pick", "an", "American", "wife", "."]
(c9-8 / get-01
      :ARG0 (c9-0 / you)
      :ARG1 (c9-7 / that)
      :ARG3 (c9-4 / pick-01
                  :ARG0 c9-0
                  :ARG1 (c9-2 / person
                              :ARG0-of (c9-3 / have-rel-role-91
                                             :ARG1 c9-0
                                             :ARG2 (c9-5 / wife))
                              :mod (c9-6 / country
                                         :name (c9-1 / name
                                                     :op1 "America")))))

# ::snt Ohhh c'mon little girl, grow up.
# ::tokens ["Ohhh", "c'm", "on", "little", "girl", ",", "grow", "up", "."]
# ::lemmas ["ohhh", "come", "on", "little", "girl", ",", "grow", "up", "."]
(c10-4 / and
       :op1 (c10-2 / come-on-25
                   :ARG1 (c10-5 / girl
                                :mod (c10-1 / little))
                   :mod (c10-0 / oh
                               :mode expressive)
                   :mode imperative)
       :op2 (c10-3 / grow-up-04
                   :ARG1 c10-5
                   :mode imperative))

# ::snt Hot Button TOPICS (December , ; :50 HKT)
# ::tokens ["Hot", "Button", "TOPICS", "(", "December", ",", ";", ":", "50", "HKT", ")"]
# ::lemmas ["Hot", "Button", "TOPICS", "(", "December", ",", ";", ":", "50", "HKT", ")"]
(c11-3 / publication-91
       :ARG4 (c11-0 / magazine
                    :name (c11-1 / name
                                 :op1 "Hot"
                                 :op2 "Button"
                                 :op3 "Topics"))
       :time (c11-5 / date-entity
                    :month 12)
       :ARG7 (c11-2 / monetary-quantity
                    :unit (c11-4 / HKT)
                    :quant 50))

# ::snt OK (December , ; :46 HKT)
# ::tokens ["OK", "(", "December", ",", ";", ":", "46", "HKT", ")"]
# ::lemmas ["ok", "(", "December", ",", ";", ":", "46", "HKT", ")"]
(c12-2 / city
       :name (c12-0 / name
                    :op1 "OK")
       :time (c12-4 / date-entity
                    :month 12)
       :ARG1-of (c12-3 / quote-01
                       :ARG2 (c12-1 / string-entity
                                    :value ":46"
                                    :op2 "HKT")))

# ::snt She should sign the darn prenup. After all she's marrying a prince of a guy and that suits tv show will eventualy be cancelled any way. Or is the Queen trying to break them up?
# ::tokens ["She", "should", "sign", "the", "darn", "prenup", ".", "After", "all", "she", "'s", "marrying", "a", "prince", "of", "a", "guy", "and", "that", "suits", "tv", "show", "will", "eventualy", "be", "cancelled", "any", "way", ".", "Or", "is", "the", "Queen", "trying", "to", "break", "them", "up", "?"]
# ::lemmas ["she", "should", "sign", "the", "darn", "prenup", ".", "after", "all", "she", "be", "marry", "a", "prince", "of", "a", "guy", "and", "that", "suit", "tv", "show", "will", "eventualy", "be", "cancel", "any", "way", ".", "or", "be", "the", "Queen", "try", "to", "break", "they", "up", "?"]
(c13-14 / multi-sentence
        :snt1 (c13-19 / recommend-01
                      :ARG1 (c13-0 / sign-up-03
                                   :ARG0 (c13-3 / she)
                                   :ARG1 (c13-21 / prenup-00
                                                 :ARG1 c13-3
                                                 :ARG1-of (c13-24 / darn-01))))
        :snt2 (c13-16 / cancel-01
                      :ARG1 (c13-2 / show-04
                                   :ARG3 (c13-9 / television))
                      :condition (c13-8 / and
                                        :op1 (c13-5 / marry-01
                                                    :ARG1 (c13-18 / she)
                                                    :ARG2 (c13-15 / prince
                                                                  :mod (c13-10 / guy)))
                                        :op2 (c13-1 / suit-01
                                                    :ARG1 c13-5
                                                    :ARG2 (c13-13 / show
                                                                  :mod c13-9))))
        :time (c13-20 / eventual)
        :manner (c13-22 / way
                        :mod (c13-7 / any))
        :snt3 (c13-4 / or
                     :op2 (c13-17 / try-01
                                  :ARG0 (c13-11 / queen)
                                  :ARG1 (c13-12 / break-up-08
                                                :ARG1 (c13-23 / they))
                                  :polarity (c13-6 / amr-unknown))))

# ::snt I would sign a prenup if I truly loved the man. After all she's getting to live like a princess, and if they divorce, she would be in such demand in the US, she'd make millions.
# ::tokens ["I", "would", "sign", "a", "prenup", "if", "I", "truly", "loved", "the", "man", ".", "After", "all", "she", "'s", "getting", "to", "live", "like", "a", "princess", ",", "and", "if", "they", "divorce", ",", "she", "would", "be", "in", "such", "demand", "in", "the", "US", ",", "she", "'d", "make", "millions", "."]
# ::lemmas ["i", "would", "sign", "a", "prenup", "if", "i", "truly", "love", "the", "man", ".", "after", "all", "she", "be", "get", "to", "live", "like", "a", "princess", ",", "and", "if", "they", "divorce", ",", "she", "would", "be", "in", "such", "demand", "in", "the", "US", ",", "she", "would", "make", "millions", "."]
(c14-10 / multi-sentence
        :snt1 (c14-0 / sign-02
                     :ARG0 (c14-18 / i)
                     :ARG1 (c14-17 / prenup)
                     :condition (c14-1 / love-01
                                       :ARG0 c14-18
                                       :ARG1 (c14-4 / man)
                                       :degree (c14-7 / truly)))
        :snt2 (c14-6 / and
                     :op1 (c14-8 / get-22
                                 :ARG0 (c14-3 / she)
                                 :ARG1 (c14-9 / live-01
                                              :ARG0 c14-3
                                              :ARG1-of (c14-16 / resemble-01
                                                               :ARG2 (c14-11 / princess)))
                                 :mod (c14-5 / after-all))
                     :op2 (c14-19 / demand-01
                                  :ARG1 c14-3
                                  :mod (c14-2 / such)
                                  :location (c14-12 / country
                                                    :name (c14-15 / name
                                                                  :op1 "US"))
                                  :condition (c14-13 / divorce-01
                                                     :ARG0 (c14-14 / they)))))

# ::snt a RARE (POINT OF EMPHASIS) sign of tension initiated by FAMILY of (note ALL CAPS in hashtag TWO) (December , )
# ::tokens ["a", "RARE", "(", "POINT", "OF", "EMPHASIS", ")", "sign", "of", "tension", "initiated", "by", "FAMILY", "of", "(", "note", "ALL", "CAPS", "in", "hashtag", "TWO", ")", "(", "December", ",", ")"]
# ::lemmas ["a", "RARE", "(", "POINT", "of", "EMPHASIS", ")", "sign", "of", "tension", "initiate", "by", "FAMILY", "of", "(", "note", "all", "caps", "in", "hashtag", "TWO", ")", "(", "December", ",", ")"]
(c15-4 / signal-07
       :ARG1 (c15-11 / tension)
       :ARG1-of (c15-10 / initiate-01
                        :ARG0 (c15-0 / family
                                     :ARG2-of (c15-2 / note-01
                                                     :ARG0 (c15-1 / you)
                                                     :ARG1 (c15-9 / CAP
                                                                  :mod (c15-5 / all))
                                                     :location (c15-7 / hashtag
                                                                      :mod 2)
                                                     :mode imperative))
                        :time (c15-13 / date-entity
                                      :month 12))
       :ARG1-of (c15-6 / rare-02)
       :ARG1-of (c15-3 / mean-01
                       :ARG2 (c15-8 / point-01
                                    :ARG1 (c15-12 / apocalypse))))

# ::snt WHOA (December , )
# ::tokens ["WHOA", "(", "December", ",", ")"]
# ::lemmas ["whoa", "(", "December", ",", ")"]
(c16-0 / whOA
       :time (c16-1 / date-entity
                    :month 12))

# ::snt ",...including DIVISION OF PROPERTY &amp; SPOUSAL SUPPORT" (December , )
# ::tokens ["\"", ",", "...", "including", "DIVISION", "OF", "PROPERTY", "&", "amp", ";", "SPOUSAL", "SUPPORT", "\"", "(", "December", ",", ")"]
# ::lemmas ["\"", ",", "...", "include", "DIVISION", "OF", "PROPERTY", "&", "amp", ";", "SPOUSAL", "SUPPORT", "\"", "(", "December", ",", ")"]
(c17-6 / include-01
       :ARG1 (c17-7 / and
                    :op1 (c17-8 / divide-02
                                :ARG1 (c17-4 / property))
                    :op2 (c17-2 / support-01
                                :mod (c17-3 / huge)))
       :ARG1-of (c17-5 / describe-01
                       :ARG0 (c17-1 / publication
                                    :name (c17-0 / name
                                                 :op1 "December"))))

# ::snt PRENUP = "a CONTRACT entered in2 prior marriage...," (December , )
# ::tokens ["PRENUP", "=", "\"", "a", "CONTRACT", "entered", "in2", "prior", "marriage", "...", ",", "\"", "(", "December", ",", ")"]
# ::lemmas ["PRENUP", "=", "\"", "a", "contract", "enter", "in2", "prior", "marriage", "...", ",", "\"", "(", "December", ",", ")"]
(c18-3 / equal-01
       :ARG1 (c18-4 / pregnancy)
       :ARG2 (c18-5 / contract-02
                    :ARG1-of (c18-6 / enter-01
                                    :time (c18-1 / prior
                                                 :op1 (c18-0 / marry-01))
                                    :quant 2))
       :time (c18-2 / date-entity
                    :month 12))

# ::snt "the queen", of course, is represented by (December , )
# ::tokens ["\"", "the", "queen", "\"", ",", "of", "course", ",", "is", "represented", "by", "(", "December", ",", ")"]
# ::lemmas ["\"", "the", "queen", "\"", ",", "of", "course", ",", "be", "represent", "by", "(", "December", ",", ")"]
(c19-0 / represent-01
       :ARG0 (c19-2 / date-entity
                    :month 12)
       :ARG1 (c19-1 / queen)
       :mod (c19-3 / of-course))

# ::snt so, "THE QUEEN is PRESSURING them sign a PRENUP" (December , )
# ::tokens ["so", ",", "\"", "THE", "QUEEN", "is", "PRESSURING", "them", "sign", "a", "PRENUP", "\"", "(", "December", ",", ")"]
# ::lemmas ["so", ",", "\"", "the", "queen", "be", "pressure", "they", "sign", "a", "PRENUP", "\"", "(", "December", ",", ")"]
(c20-3 / pressur-01
       :ARG0 (c20-4 / country
                    :name (c20-0 / name
                                 :op1 "QUEEN"))
       :ARG1 (c20-6 / they)
       :ARG2 (c20-2 / sign-01
                    :ARG0 c20-6
                    :ARG1 (c20-1 / promise-01))
       :ARG1-of (c20-7 / describe-01
                       :ARG0 (c20-8 / publication
                                    :time (c20-5 / date-entity
                                                 :month 12))))

# ::snt Update: CELEBRITY INSIDER (December , )
# ::tokens ["Update", ":", "CELEBRITY", "INSIDER", "(", "December", ",", ")"]
# ::lemmas ["update", ":", "celebrity", "INSIDER", "(", "December", ",", ")"]
(c21-1 / update-02
       :ARG0 (c21-2 / publication
                    :name (c21-0 / name
                                 :op1 "CELEBRITY"
                                 :op2 " INSIDER"))
       :time (c21-3 / date-entity
                    :month 12))

# ::snt Interesting perspective...
# ::tokens ["Interesting", "perspective", "..."]
# ::lemmas ["interesting", "perspective", "..."]
(c22-0 / perspective
       :ARG2-of (c22-1 / interest-01))

# ::snt This marriage will never take place. Meghan's an independent American woman, who is not going to be bamboozled by any queen bee over there.
# ::tokens ["This", "marriage", "will", "never", "take", "place", ".", "Meghan", "'s", "an", "independent", "American", "woman", ",", "who", "is", "not", "going", "to", "be", "bamboozled", "by", "any", "queen", "bee", "over", "there", "."]
# ::lemmas ["this", "marriage", "will", "never", "take", "place", ".", "Meghan", "be", "an", "independent", "American", "woman", ",", "who", "be", "not", "go", "to", "be", "bamboozle", "by", "any", "queen", "bee", "over", "there", "."]
(c23-2 / multi-sentence
       :snt1 (c23-6 / marry-01
                    :mod (c23-12 / this)
                    :time (c23-5 / ever)
                    :polarity -)
       :snt2 (c23-9 / woman
                    :mod (c23-10 / country
                                 :name (c23-3 / name
                                              :op1 "America"))
                    :mod (c23-11 / independent)
                    :domain (c23-7 / person
                                   :name (c23-8 / name
                                                :op1 "Meghan"))
                    :ARG1-of (c23-1 / bamboozle-01
                                    :ARG0 (c23-13 / queen
                                                  :mod (c23-4 / any)
                                                  :location (c23-0 / over
                                                                   :op1 (c23-14 / there)))
                                    :ARG1 c23-7
                                    :polarity -)))
