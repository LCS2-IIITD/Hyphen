# ::snt Buy Love Lies when it comes out since you a little too invested
# ::tokens ["Buy", "Love", "Lies", "when", "it", "comes", "out", "since", "you", "a", "little", "too", "invested"]
# ::lemmas ["buy", "love", "lie", "when", "it", "come", "out", "since", "you", "a", "little", "too", "invest"]
(c1-0 / buy-01
      :ARG0 (c1-1 / you)
      :ARG1 (c1-3 / book
                  :name (c1-2 / name
                              :op1 "Love"
                              :op2 "Lies"))
      :time (c1-6 / come-out-09
                  :ARG1 c1-3)
      :ARG1-of (c1-9 / cause-01
                     :ARG0 (c1-7 / invest-01
                                 :ARG0 c1-1
                                 :ARG2-of (c1-4 / have-degree-91
                                                :ARG1 c1-1
                                                :ARG3 (c1-8 / too
                                                            :mod (c1-5 / little)))))
      :mode imperative)

# ::snt BEST COVER EVER the way she closes her eyes when she sings hits me in the feels man
# ::tokens ["BEST", "COVER", "EVER", "the", "way", "she", "closes", "her", "eyes", "when", "she", "sings", "hits", "me", "in", "the", "feels", "man"]
# ::lemmas ["BEST", "COVER", "EVER", "the", "way", "she", "close", "her", "eye", "when", "she", "sing", "hit", "i", "in", "the", "feel", "man"]
(c2-6 / hit-01
      :ARG0 (c2-8 / way
                  :manner-of (c2-9 / close-01
                                   :ARG0 (c2-4 / she
                                               :part (c2-5 / eye
                                                           :ARG1-of c2-9))
                                   :time (c2-0 / sing-01
                                               :ARG0 c2-4))
                  :ARG1-of (c2-10 / have-degree-91
                                  :ARG2 (c2-2 / big)
                                  :ARG3 (c2-3 / most)
                                  :ARG5 (c2-12 / ever)))
      :ARG1 (c2-11 / i)
      :location (c2-1 / feel-05
                      :ARG1 (c2-7 / man)))

# ::snt naya slapvera
# ::tokens ["naya", "slapvera"]
# ::lemmas ["naya", "slapvera"]
(c3-2 / slap-01
      :ARG1 (c3-1 / person
                  :name (c3-0 / name
                              :op1 "Naya")))

# ::snt Keep thinking that keep thinking that maybe one day youll convince hope
# ::tokens ["Keep", "thinking", "that", "keep", "thinking", "that", "maybe", "one", "day", "you", "ll", "convince", "hope"]
# ::lemmas ["keep", "think", "that", "keep", "think", "that", "maybe", "one", "day", "you", "ll", "convince", "hope"]
(c4-4 / keep-02
      :ARG0 (c4-1 / you)
      :ARG1 (c4-7 / think-01
                  :ARG0 c4-1
                  :ARG1 (c4-9 / keep-02
                              :ARG0 c4-1
                              :ARG1 (c4-8 / think-01
                                          :ARG0 c4-1
                                          :ARG1 (c4-5 / possible-01
                                                      :ARG1 (c4-6 / convince-01
                                                                  :ARG0 c4-1
                                                                  :ARG2 (c4-3 / hopeful-03))
                                                      :time (c4-2 / day
                                                                  :mod (c4-0 / one)))))))

# ::snt Queen Demi is living her best life and thats all that matters
# ::tokens ["Queen", "Demi", "is", "living", "her", "best", "life", "and", "that", "s", "all", "that", "matters"]
# ::lemmas ["Queen", "Demi", "be", "live", "her", "good", "life", "and", "that", "s", "all", "that", "matter"]
(c5-8 / and
      :op1 (c5-4 / live-01
                 :ARG0 (c5-3 / person
                             :name (c5-0 / name
                                         :op1 "Demi")
                             :ARG0-of (c5-2 / have-org-role-91
                                            :ARG2 (c5-7 / queen)))
                 :ARG1 (c5-10 / life
                              :poss c5-3
                              :ARG1-of (c5-6 / have-degree-91
                                             :ARG2 (c5-9 / good-02
                                                         :ARG1 c5-10)
                                             :ARG3 (c5-1 / most))))
      :op2 (c5-5 / matter-01
                 :ARG1 c5-4))

# ::snt we really don't
# ::tokens ["we", "really", "do", "n't"]
# ::lemmas ["we", "really", "do", "not"]
(c6-0 / do-02
      :ARG0 (c6-2 / we)
      :ARG1-of (c6-1 / real-04)
      :polarity -)

# ::snt we don't care!!
# ::tokens ["we", "do", "n't", "care", "!", "!"]
# ::lemmas ["we", "do", "not", "care", "!", "!"]
(c7-0 / care-01
      :ARG0 (c7-1 / we)
      :polarity -)

# ::snt is her face photoshopped on her body
# ::tokens ["is", "her", "face", "photoshopped", "on", "her", "body"]
# ::lemmas ["be", "her", "face", "photoshoppe", "on", "her", "body"]
(c8-2 / photoshoot-00
      :ARG1 (c8-0 / face
                  :part-of (c8-3 / she))
      :location (c8-1 / body
                      :poss c8-3))

# ::snt Mariah is skinny
# ::tokens ["Mariah", "is", "skinny"]
# ::lemmas ["Mariah", "be", "skinny"]
(c9-2 / skinny
      :domain (c9-1 / person
                    :name (c9-0 / name
                                :op1 "Mariah")))

# ::snt She's always got baby father drama
# ::tokens ["She", "'s", "always", "got", "baby", "father", "drama"]
# ::lemmas ["she", "be", "always", "get", "baby", "father", "drama"]
(c10-6 / get-02
       :ARG0 (c10-2 / she)
       :ARG1 (c10-7 / drama
                    :mod (c10-4 / person
                                :ARG0-of (c10-3 / have-rel-role-91
                                                :ARG2 (c10-0 / father))
                                :mod (c10-1 / baby)))
       :time (c10-5 / always))

# ::snt we don't care
# ::tokens ["we", "do", "n't", "care"]
# ::lemmas ["we", "do", "not", "care"]
(c11-0 / care-01
       :ARG0 (c11-1 / we)
       :polarity -)

# ::snt Miley is legend btw
# ::tokens ["Miley", "is", "legend", "btw"]
# ::lemmas ["Miley", "be", "legend", "btw"]
(c12-2 / legend
       :domain (c12-0 / person
                      :name (c12-1 / name
                                   :op1 "Miley"))
       :mod (c12-3 / by-the-way))

# ::snt She's crazy
# ::tokens ["She", "'s", "crazy"]
# ::lemmas ["she", "be", "crazy"]
(c14-0 / crazy-03
       :ARG1 (c14-1 / she))

# ::snt Ariana is a legend btw
# ::tokens ["Ariana", "is", "a", "legend", "btw"]
# ::lemmas ["Ariana", "be", "a", "legend", "btw"]
(c15-3 / legend
       :domain (c15-0 / person
                      :name (c15-2 / name
                                   :op1 "Ariana"))
       :mod (c15-1 / just))
