# ::snt For GoT Superfans
# ::tokens ["For", "GoT", "Superfans"]
# ::lemmas ["for", "GoT", "Superfans"]
(c1-1 / have-purpose-91
      :ARG2 (c1-0 / fan
                  :mod (c1-3 / team
                             :name (c1-2 / name
                                         :op1 "GoT"))))

# ::snt :Are you an Archmaester or do you know nothing?
# ::tokens [":", "Are", "you", "an", "Archmaester", "or", "do", "you", "know", "nothing", "?"]
# ::lemmas [":", "be", "you", "an", "Archmaester", "or", "do", "you", "know", "nothing", "?"]
(c2-5 / amr-choice
      :op1 (c2-3 / person
                 :mod (c2-4 / archmaester)
                 :domain (c2-0 / you))
      :op2 (c2-2 / know-01
                 :ARG0 c2-0
                 :ARG1 (c2-1 / nothing)))

# ::snt pffftttt :'v
# ::tokens ["pffftttt", ":", "'", "v"]
# ::lemmas ["pffftttt", ":", "'", "v"]
(c3-1 / thing
      :mod (c3-0 / emoticon
                 :value "pffftttt"))

# ::snt The dead is back from hell
# ::tokens ["The", "dead", "is", "back", "from", "hell"]
# ::lemmas ["the", "dead", "be", "back", "from", "hell"]
(c4-0 / be-from-91
      :ARG1 (c4-3 / person
                  :ARG1-of (c4-4 / die-01))
      :ARG2 (c4-2 / hell)
      :direction (c4-1 / back))

# ::snt u better not make an episode about Dorne otherwise no one will be watching hahahaha
# ::tokens ["u", "better", "not", "make", "an", "episode", "about", "Dorne", "otherwise", "no", "one", "will", "be", "watching", "hahahaha"]
# ::lemmas ["u", "well", "not", "make", "an", "episode", "about", "Dorne", "otherwise", "no", "one", "will", "be", "watch", "hahahaha"]
(c5-4 / have-condition-91
      :ARG1 (c5-1 / make-01
                  :ARG0 (c5-0 / you)
                  :ARG1 (c5-3 / episode
                              :topic (c5-5 / person
                                           :name (c5-2 / name
                                                       :op1 "Dorne")))
                  :polarity -)
      :ARG2 (c5-7 / watch-01
                  :ARG0 (c5-6 / no-one)
                  :ARG1 c5-3)
      :mod (c5-8 / haha
                 :mode expressive))

# ::snt Hmmm
# ::tokens ["Hmmm"]
# ::lemmas ["hmmm"]
(c6-0 / hmm
      :mode expressive)

# ::snt Tja
# ::tokens ["Tja"]
# ::lemmas ["Tja"]
(c8-1 / person
      :name (c8-0 / name
                  :op1 "Tja"))

# ::snt Me mueroooo waaaaawww
# ::tokens ["Me", "mueroooo", "waaaaawww"]
# ::lemmas ["i", "mueroooo", "waaaaawww"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Jesus")
       :domain (c10-2 / i)
       :mode expressive)
