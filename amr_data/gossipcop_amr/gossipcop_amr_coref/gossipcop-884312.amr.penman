# ::snt Income from online very easily per month Earn $5000. Do you want a web site or Awesome logo? knock me now or
# ::tokens ["Income", "from", "online", "very", "easily", "per", "month", "Earn", "$", "5000", ".", "Do", "you", "want", "a", "web", "site", "or", "Awesome", "logo", "?", "knock", "me", "now", "or"]
# ::lemmas ["income", "from", "online", "very", "easily", "per", "month", "earn", "$", "5000", ".", "do", "you", "want", "a", "web", "site", "or", "Awesome", "logo", "?", "knock", "i", "now", "or"]
(c2-13 / multi-sentence
       :snt1 (c2-19 / income
                    :source (c2-3 / online)
                    :ARG1-of (c2-17 / easy-05
                                    :degree (c2-6 / very))
                    :frequency (c2-16 / rate-entity-91
                                      :ARG1 (c2-7 / monetary-quantity
                                                  :unit (c2-20 / dollar)
                                                  :quant 5000)
                                      :ARG2 (c2-11 / temporal-quantity
                                                   :unit (c2-14 / month)
                                                   :quant 1)))
       :snt2 (c2-18 / want-01
                    :polarity (c2-10 / amr-unknown)
                    :ARG0 (c2-4 / you)
                    :ARG1 (c2-12 / or
                                 :op1 (c2-0 / site
                                            :mod (c2-2 / web))
                                 :op2 (c2-1 / logo
                                            :ARG1-of (c2-9 / awe-01)))
                    :polarity c2-10)
       :snt3 (c2-8 / knock-01
                   :ARG0 c2-4
                   :ARG1 (c2-5 / i)
                   :time (c2-15 / now)
                   :mode imperative))

# ::snt He passed away unfortunately
# ::tokens ["He", "passed", "away", "unfortunately"]
# ::lemmas ["he", "pass", "away", "unfortunately"]
(c3-2 / pass-away-16
      :ARG1 (c3-1 / he)
      :ARG2-of (c3-0 / fortunate-01
                     :polarity -))

# ::snt Time stand still
# ::tokens ["Time", "stand", "still"]
# ::lemmas ["time", "stand", "still"]
(c4-2 / stand-04
      :ARG1 (c4-1 / time)
      :ARG2 (c4-0 / still))

# ::snt God no. Please be okay Tom!
# ::tokens ["God", "no", ".", "Please", "be", "okay", "Tom", "!"]
# ::lemmas ["God", "no", ".", "please", "be", "okay", "Tom", "!"]
(c5-2 / multi-sentence
      :snt1 (c5-3 / say-01
                  :ARG0 (c5-9 / i)
                  :ARG1 (c5-1 / no)
                  :ARG2 (c5-7 / person
                              :name (c5-6 / name
                                          :op1 "God"))
                  :snt2-of c5-2)
      :ARG0 (c5-4 / i)
      :ARG1 (c5-0 / okay-04
                  :ARG1 (c5-5 / person
                              :name (c5-8 / name
                                          :op1 "Tom")
                              :ARG2-of c5-2)
                  :mode imperative
                  :polite +))

# ::snt America is having a really bad day. Tom is a national treasure.
# ::tokens ["America", "is", "having", "a", "really", "bad", "day", ".", "Tom", "is", "a", "national", "treasure", "."]
# ::lemmas ["America", "be", "have", "a", "really", "bad", "day", ".", "Tom", "be", "a", "national", "treasure", "."]
(c7-2 / multi-sentence
      :snt1 (c7-4 / have-03
                  :ARG0 (c7-8 / country
                              :name (c7-1 / name
                                          :op1 "America"))
                  :ARG1 (c7-10 / day
                               :ARG1-of (c7-0 / bad-07
                                              :degree (c7-3 / really))))
      :snt2 (c7-9 / treasure
                  :mod (c7-5 / nation)
                  :domain (c7-6 / person
                                :name (c7-7 / name
                                            :op1 "Tom"))))

# ::snt Just retweeted an comment that they supposedly pulled life support b/c no brain activity. Just awful. Horrible day all around.
# ::tokens ["Just", "retweeted", "an", "comment", "that", "they", "supposedly", "pulled", "life", "support", "b", "/", "c", "no", "brain", "activity", ".", "Just", "awful", ".", "Horrible", "day", "all", "around", "."]
# ::lemmas ["just", "retweete", "an", "comment", "that", "they", "supposedly", "pull", "life", "support", "b", "/", "c", "no", "brain", "activity", ".", "just", "awful", ".", "horrible", "you", "all", "around", "."]
(c8-2 / multi-sentence
      :snt1 (c8-12 / tweet-02
                   :ARG0 (c8-11 / i)
                   :ARG1 (c8-8 / comment-01
                               :ARG1 (c8-6 / pull-01
                                           :ARG0 (c8-16 / they)
                                           :ARG1 (c8-3 / support-01
                                                       :ARG1 (c8-7 / life))
                                           :ARG1-of (c8-0 / suppose-01)
                                           :ARG1-of (c8-15 / cause-01
                                                           :ARG0 (c8-4 / activity-06
                                                                       :ARG1 (c8-1 / brain)
                                                                       :polarity -))))
                   :mod (c8-10 / just))
      :snt2 (c8-13 / awful
                   :degree c8-10)
      :snt3 (c8-14 / day
                   :ARG1-of (c8-5 / horrible-02)
                   :mod (c8-9 / all-around)))

# ::snt No, it wasn't.We need radical self care,lots of support for one another. Have to actively monitor how much time we spend absorbing it all.
# ::tokens ["No", ",", "it", "wasn't", ".", "We", "need", "radical", "self", "care", ",", "lots", "of", "support", "for", "one", "another", ".", "Have", "to", "actively", "monitor", "how", "much", "time", "we", "spend", "absorbing", "it", "all", "."]
# ::lemmas ["no", ",", "it", "wasn't", ".", "we", "need", "radical", "self", "care", ",", "lot", "of", "support", "for", "one", "another", ".", "have", "to", "actively", "monitor", "how", "much", "time", "we", "spend", "absorb", "it", "all", "."]
(c9-10 / multi-sentence
       :snt1 (c9-14 / no)
       :snt2 (c9-11 / need-01
                    :ARG0 (c9-16 / we)
                    :ARG1 (c9-9 / and
                                :op1 (c9-12 / care-03
                                            :ARG1 (c9-2 / we)
                                            :ARG1-of (c9-15 / radical-02))
                                :op2 (c9-0 / support-01
                                           :ARG0 c9-2
                                           :ARG1 c9-2
                                           :quant (c9-1 / lot)))
                    :polarity -)
       :snt3 (c9-3 / obligate-01
                   :ARG1 (c9-5 / monitor-01
                               :ARG0 (c9-13 / we)
                               :ARG1 (c9-8 / time
                                           :ARG3-of (c9-4 / spend-01
                                                          :ARG0 c9-13
                                                          :ARG1 (c9-7 / absorb-01
                                                                      :ARG0 c9-13
                                                                      :ARG1 (c9-17 / it
                                                                                   :mod (c9-6 / all)))))
                               :manner (c9-18 / activity-06
                                              :ARG0 c9-13))))

# ::snt Ya- someone put up post w/ comment from therapist= human mind was not made to process grief on this scale/have wrkg theory pulls this center
# ::tokens ["Ya-", "someone", "put", "up", "post", "w/", "comment", "from", "therapist=", "human", "mind", "was", "not", "made", "to", "process", "grief", "on", "this", "scale", "/", "have", "wrkg", "theory", "pulls", "this", "center"]
# ::lemmas ["Ya-", "someone", "put", "up", "post", "w/", "comment", "from", "therapist=", "human", "mind", "be", "not", "make", "to", "process", "grief", "on", "this", "scale", "/", "have", "wrkg", "theory", "pull", "this", "center"]
(c10-8 / cause-01
       :ARG0 (c10-1 / make-02
                    :ARG0 (c10-5 / mind
                                 :mod (c10-7 / human))
                    :ARG1 (c10-6 / process-01
                                 :ARG0 c10-5
                                 :ARG1 (c10-11 / grief)
                                 :manner (c10-3 / scale
                                                :mod (c10-10 / this)))
                    :polarity -)
       :ARG1 (c10-2 / pull-06
                    :ARG0 (c10-13 / theory
                                  :name (c10-4 / name
                                               :op1 " wrkg"))
                    :ARG1 (c10-12 / center
                                  :mod (c10-9 / this)))
       :mod (c10-0 / ya))

# ::snt So sad.
# ::tokens ["So", "sad", "."]
# ::lemmas ["so", "sad", "."]
(c11-1 / sad-02
       :degree (c11-0 / so))

# ::snt He is now dead, there was no brain activity so they took himoff life support
# ::tokens ["He", "is", "now", "dead", ",", "there", "was", "no", "brain", "activity", "so", "they", "took", "himoff", "life", "support"]
# ::lemmas ["he", "be", "now", "dead", ",", "there", "be", "no", "brain", "activity", "so", "they", "take", "himoff", "life", "support"]
(c12-8 / and
       :op1 (c12-9 / die-01
                   :ARG1 (c12-3 / he)
                   :time (c12-1 / now))
       :op2 (c12-7 / activity-06
                   :ARG0 (c12-0 / brain)
                   :ARG0-of (c12-5 / cause-01
                                   :ARG1 (c12-6 / take-off-07
                                                :ARG0 (c12-10 / they)
                                                :ARG1 (c12-2 / support-01
                                                             :ARG1 c12-3
                                                             :mod (c12-4 / life))))
                   :polarity -))

# ::snt So incredibly sad. One of the best of all time. I am so thankful to have seen him play last Monday at the Hollywood Bowl.
# ::tokens ["So", "incredibly", "sad", ".", "One", "of", "the", "best", "of", "all", "time", ".", "I", "am", "so", "thankful", "to", "have", "seen", "him", "play", "last", "Monday", "at", "the", "Hollywood", "Bowl", "."]
# ::lemmas ["so", "incredibly", "sad", ".", "One", "of", "the", "good", "of", "all", "time", ".", "i", "be", "so", "thankful", "to", "have", "see", "he", "play", "last", "Monday", "at", "the", "Hollywood", "Bowl", "."]
(c13-13 / multi-sentence
        :snt1 (c13-0 / sad-02
                     :degree (c13-19 / incredible))
        :snt2 (c13-6 / include-91
                     :ARG1 (c13-4 / one)
                     :ARG2 (c13-10 / thing
                                   :ARG1-of (c13-7 / have-degree-91
                                                   :ARG2 (c13-11 / good-02
                                                                 :ARG1 c13-10)
                                                   :ARG3 (c13-8 / most)
                                                   :ARG5 (c13-14 / time
                                                                 :mod (c13-9 / all)))))
        :snt3 (c13-20 / thankful-02
                      :ARG0 (c13-12 / i)
                      :ARG2 (c13-5 / see-01
                                   :ARG0 c13-12
                                   :ARG1 (c13-17 / play-01
                                                 :ARG0 (c13-18 / he)
                                                 :time (c13-21 / date-entity
                                                               :weekday (c13-15 / monday)
                                                               :mod (c13-1 / last))
                                                 :location (c13-2 / game
                                                                  :name (c13-16 / name
                                                                                :op1 "Hollywood"
                                                                                :op2 "Bowl"))))
                      :degree (c13-3 / so)))

# ::snt Nooooooo
# ::tokens ["Nooooooo"]
# ::lemmas ["Nooooooo"]
(c14-0 / no)

# ::snt I know!
# ::tokens ["I", "know", "!"]
# ::lemmas ["i", "know", "!"]
(c15-0 / know-01
       :ARG0 (c15-1 / i)
       :mode expressive)

# ::snt Oh, NO! Terrible news!!
# ::tokens ["Oh", ",", "NO", "!", "Terrible", "news", "!", "!"]
# ::lemmas ["oh", ",", "no", "!", "terrible", "news", "!", "!"]
(c16-3 / multi-sentence
       :snt1 (c16-0 / oh
                    :mode expressive)
       :snt2 (c16-1 / news
                    :mod (c16-2 / horrible)))

# ::snt I saw......
# ::tokens ["I", "saw", "......"]
# ::lemmas ["i", "see", "......"]
(c17-1 / see-01
       :ARG0 (c17-0 / i))

# ::snt He passed....
# ::tokens ["He", "passed", "...."]
# ::lemmas ["he", "pass", "...."]
(c18-1 / pass-20
       :ARG1 (c18-0 / he))

# ::snt Uno de los ms grandes. Te vamos a extraar.
# ::tokens ["Uno", "de", "los", "ms", "grandes", ".", "Te", "vamos", "a", "extraar", "."]
# ::lemmas ["Uno", "de", "los", "ms", "grande", ".", "te", "vamo", "a", "extraar", "."]
(c19-0 / multi-sentence
       :snt1 (c19-5 / uno
                    :poss (c19-4 / grandes
                                 :mod (c19-3 / ms)))
       :snt2 (c19-1 / vamos
                    :op1 (c19-2 / extraar)))

# ::snt Agreed.
# ::tokens ["Agreed", "."]
# ::lemmas ["agree", "."]
(c20-0 / agree-01)

# ::snt Goodbye Legend . RIP Tom Petty
# ::tokens ["Goodbye", "Legend", ".", "RIP", "Tom", "Petty"]
# ::lemmas ["Goodbye", "Legend", ".", "RIP", "Tom", "Petty"]
(c21-0 / multi-sentence
       :snt1 (c21-6 / goodbye)
       :snt2 (c21-5 / wish-01
                    :ARG1 (c21-3 / rest-01
                                 :ARG1 (c21-4 / person
                                              :name (c21-1 / name
                                                           :op1 "Tom"
                                                           :op2 "Petty"))
                                 :manner (c21-2 / peace))))

# ::snt Sad news indeed. Too young at . Love and prayers to his wife Dana
# ::tokens ["Sad", "news", "indeed", ".", "Too", "young", "at", ".", "Love", "and", "prayers", "to", "his", "wife", "Dana"]
# ::lemmas ["sad", "news", "indeed", ".", "too", "young", "at", ".", "Love", "and", "prayer", "to", "his", "wife", "Dana"]
(c22-2 / multi-sentence
       :snt1 (c22-1 / news
                    :ARG0-of (c22-3 / sad-02)
                    :mod (c22-13 / indeed))
       :snt2 (c22-0 / young
                    :ARG2-of (c22-7 / have-degree-91
                                    :ARG3 (c22-14 / too)))
       :snt3 (c22-5 / and
                    :op1 (c22-8 / love-01
                                :ARG1 (c22-9 / person
                                             :name (c22-10 / name
                                                           :op1 "Dana")
                                             :ARG0-of (c22-12 / have-rel-role-91
                                                              :ARG1 (c22-6 / he)
                                                              :ARG2 (c22-11 / wife))))
                    :op2 (c22-4 / pray-01
                                :ARG1 c22-9)))

# ::snt So sad.
# ::tokens ["So", "sad", "."]
# ::lemmas ["so", "sad", "."]
(c23-1 / sad-02
       :degree (c23-0 / so))

# ::snt RIP Tom Petty
# ::tokens ["RIP", "Tom", "Petty"]
# ::lemmas ["RIP", "Tom", "Petty"]
(c24-4 / wish-01
       :ARG1 (c24-2 / rest-01
                    :ARG1 (c24-3 / person
                                 :name (c24-0 / name
                                              :op1 "Tom"
                                              :op2 "Petty"))
                    :manner (c24-1 / peace)))

# ::snt Yes and no. He's not doing well
# ::tokens ["Yes", "and", "no", ".", "He", "'s", "not", "doing", "well"]
# ::lemmas ["yes", "and", "no", ".", "he", "be", "not", "do", "well"]
(c25-2 / multi-sentence
       :snt1 (c25-5 / and
                    :op1 (c25-0 / yes)
                    :op2 (c25-1 / no))
       :snt2 (c25-4 / well-09
                    :ARG1 (c25-3 / he)
                    :polarity -))

# ::snt This is good news!
# ::tokens ["This", "is", "good", "news", "!"]
# ::lemmas ["this", "be", "good", "news", "!"]
(c26-1 / news
       :ARG1-of (c26-0 / good-02)
       :domain (c26-2 / this))

# ::snt Evidently, he's not. the news had to issue a retraction
# ::tokens ["Evidently", ",", "he", "'s", "not", ".", "the", "news", "had", "to", "issue", "a", "retraction"]
# ::lemmas ["evidently", ",", "he", "be", "not", ".", "the", "news", "have", "to", "issue", "a", "retraction"]
(c27-1 / multi-sentence
       :snt1 (c27-5 / have-polarity-91
                    :ARG1 (c27-6 / he)
                    :mod (c27-4 / evident)
                    :ARG2 -)
       :snt2 (c27-0 / obligate-01
                    :ARG1 (c27-2 / news)
                    :ARG2 (c27-7 / issue-01
                                 :ARG0 c27-2
                                 :ARG1 (c27-3 / retract-01
                                              :ARG0 c27-2))))

# ::snt He is gone
# ::tokens ["He", "is", "gone"]
# ::lemmas ["he", "be", "go"]
(c28-0 / go-02
       :ARG0 (c28-1 / he))

# ::snt st record was huge with me and my buddies. Proud to get it st. Becker now Petty
# ::tokens ["st", "record", "was", "huge", "with", "me", "and", "my", "buddies", ".", "Proud", "to", "get", "it", "st", ".", "Becker", "now", "Petty"]
# ::lemmas ["st", "record", "be", "huge", "with", "i", "and", "my", "buddy", ".", "proud", "to", "get", "it", "st", ".", "Becker", "now", "Petty"]
(c29-1 / multi-sentence
       :snt1 (c29-6 / huge
                    :domain (c29-5 / record)
                    :prep-with (c29-10 / and
                                       :op1 (c29-9 / i)
                                       :op2 (c29-0 / buddy
                                                   :poss c29-9)))
       :snt2 (c29-7 / pride-01
                    :ARG0 (c29-4 / i)
                    :ARG2 (c29-11 / get-01
                                  :ARG0 c29-4
                                  :ARG1 (c29-12 / it)
                                  :mod (c29-2 / person
                                              :name (c29-3 / name
                                                           :op1 "Becker"))
                                  :time (c29-8 / now))))

# ::snt Agreed. His talent has spanned generations
# ::tokens ["Agreed", ".", "His", "talent", "has", "spanned", "generations"]
# ::lemmas ["agree", ".", "his", "talent", "have", "span", "generation"]
(c30-0 / multi-sentence
       :snt1 (c30-2 / agree-01
                    :ARG1 (c30-3 / event))
       :snt2 (c30-1 / span-01
                    :ARG0 (c30-5 / talent
                                 :poss (c30-4 / he))
                    :ARG1 (c30-6 / generation)))

# ::snt It really does hurt.
# ::tokens ["It", "really", "does", "hurt", "."]
# ::lemmas ["it", "really", "do", "hurt", "."]
(c31-1 / hurt-01
       :ARG0 (c31-2 / it)
       :ARG1-of (c31-0 / real-04))

# ::snt Just when you thought the day was bad enough!
# ::tokens ["Just", "when", "you", "thought", "the", "day", "was", "bad", "enough", "!"]
# ::lemmas ["just", "when", "you", "think", "the", "day", "be", "bad", "enough", "!"]
(c32-0 / be-temporally-at-91
       :ARG2 (c32-6 / think-01
                    :ARG0 (c32-1 / you)
                    :ARG1 (c32-3 / have-degree-91
                                 :ARG1 (c32-7 / day)
                                 :ARG2 (c32-4 / bad-07
                                              :ARG1 c32-7)
                                 :ARG3 (c32-2 / enough))
                    :mod (c32-5 / just)))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c33-0 / rest-01
       :ARG1 (c33-1 / you)
       :manner (c33-2 / peace))

# ::snt RIP
# ::tokens ["RIP"]
# ::lemmas ["RIP"]
(c34-0 / rest-01
       :ARG1 (c34-1 / you)
       :manner (c34-2 / peace))

# ::snt God Bless
# ::tokens ["God", "Bless"]
# ::lemmas ["God", "Bless"]
(c35-1 / bless-01
       :ARG0 (c35-2 / person
                    :name (c35-0 / name
                                 :op1 "God")))

# ::snt No
# ::tokens ["No"]
# ::lemmas ["no"]
(c36-0 / no)

# ::snt Pull through Tom. Rooting for you.
# ::tokens ["Pull", "through", "Tom", ".", "Rooting", "for", "you", "."]
# ::lemmas ["pull", "through", "Tom", ".", "root", "for", "you", "."]
(c37-2 / multi-sentence
       :snt1 (c37-5 / pull-through-04
                    :ARG0 (c37-3 / person
                                 :name (c37-1 / name
                                              :op1 "Tom")))
       :snt2 (c37-4 / shoot-02
                    :ARG0 (c37-0 / you
                                 :beneficiary-of c37-4)
                    :mode imperative))

# ::snt Well I started out down a dirty road Started out all alone &amp;The sun went down as I crossed the hill&amp; the town lit up &amp; the world got still
# ::tokens ["Well", "I", "started", "out", "down", "a", "dirty", "road", "Started", "out", "all", "alone", "&", "amp;The", "sun", "went", "down", "as", "I", "crossed", "the", "hill&amp", ";", "the", "town", "lit", "up", "&", "amp", ";", "the", "world", "got", "still"]
# ::lemmas ["well", "i", "start", "out", "down", "a", "dirty", "road", "start", "out", "all", "alone", "&", "amp;The", "sun", "go", "down", "as", "i", "cross", "the", "hill&amp", ";", "the", "town", "light", "up", "&", "amp", ";", "the", "world", "get", "still"]
(c39-10 / and
        :op1 (c39-0 / start-out-05
                    :ARG0 (c39-17 / i)
                    :ARG2 (c39-18 / down
                                  :op1 (c39-15 / road
                                               :ARG1-of (c39-13 / dirty-02))))
        :op2 (c39-4 / start-out-05
                    :ARG0 c39-17
                    :manner (c39-7 / alone
                                   :degree (c39-6 / all)))
        :op3 (c39-9 / go-01
                    :ARG1 (c39-3 / sun)
                    :direction (c39-11 / down)
                    :time (c39-12 / cross-02
                                  :ARG0 c39-17
                                  :ARG1 (c39-5 / hill)))
        :op4 (c39-1 / light-up-08
                    :ARG1 (c39-8 / town))
        :op5 (c39-2 / get-03
                    :ARG1 (c39-16 / world)
                    :ARG2 (c39-14 / still)))

# ::snt RIP Tom Petty
# ::tokens ["RIP", "Tom", "Petty"]
# ::lemmas ["RIP", "Tom", "Petty"]
(c40-4 / wish-01
       :ARG1 (c40-2 / rest-01
                    :ARG1 (c40-3 / person
                                 :name (c40-0 / name
                                              :op1 "Tom"
                                              :op2 "Petty"))
                    :manner (c40-1 / peace)))

# ::snt Omg how much sadder can this day get
# ::tokens ["Omg", "how", "much", "sadder", "can", "this", "day", "get"]
# ::lemmas ["Omg", "how", "much", "sad", "can", "this", "day", "get"]
(c42-4 / possible-01
       :ARG1 (c42-3 / have-degree-91
                    :ARG1 (c42-6 / day
                                 :mod (c42-5 / this))
                    :ARG2 (c42-2 / sad-02)
                    :ARG3 (c42-1 / more))
       :mod (c42-0 / oh-my-god
                   :mode expressive))

# ::snt He's dead , off life support
# ::tokens ["He", "'s", "dead", ",", "off", "life", "support"]
# ::lemmas ["he", "be", "dead", ",", "off", "life", "support"]
(c43-4 / die-01
       :ARG1 (c43-1 / he)
       :ARG0-of (c43-3 / cause-01
                       :ARG1 (c43-0 / support-01
                                    :ARG1 c43-1
                                    :manner (c43-2 / life)
                                    :polarity -)))

# ::snt early reports were misleading/unconfirmed. STILL prayers for him and loved ones
# ::tokens ["early", "reports", "were", "misleading", "/", "unconfirmed", ".", "STILL", "prayers", "for", "him", "and", "loved", "ones"]
# ::lemmas ["early", "report", "be", "mislead", "/", "unconfirmed", ".", "STILL", "prayer", "for", "he", "and", "loved", "one"]
(c46-2 / multi-sentence
       :snt1 (c46-3 / slash
                    :op1 (c46-6 / mislead-01
                                :ARG0 (c46-4 / report-01
                                             :time (c46-5 / early)))
                    :op2 (c46-10 / confirm-01
                                 :ARG1 c46-4
                                 :polarity -))
       :snt2 (c46-7 / pray-01
                    :ARG1 (c46-11 / and
                                  :op1 (c46-8 / he)
                                  :op2 (c46-0 / one
                                              :ARG1-of (c46-9 / love-01)))
                    :mod (c46-1 / still)))

# ::snt he ain't dead yet.
# ::tokens ["he", "ai", "n't", "dead", "yet", "."]
# ::lemmas ["he", "be", "not", "dead", "yet", "."]
(c47-0 / die-01
       :ARG1 (c47-1 / he)
       :time (c47-2 / yet)
       :polarity -)

# ::snt Rest In Peace, you beautiful soul. And thank you for the memories you have given me throughout my life.
# ::tokens ["Rest", "In", "Peace", ",", "you", "beautiful", "soul", ".", "And", "thank", "you", "for", "the", "memories", "you", "have", "given", "me", "throughout", "my", "life", "."]
# ::lemmas ["rest", "in", "Peace", ",", "you", "beautiful", "soul", ".", "and", "thank", "you", "for", "the", "memory", "you", "have", "give", "i", "throughout", "my", "life", "."]
(c48-2 / multi-sentence
       :snt1 (c48-4 / rest-01
                    :ARG1 (c48-3 / soul
                                 :ARG1-of (c48-0 / beautiful-02)
                                 :domain (c48-1 / you))
                    :manner (c48-6 / peace))
       :snt2 (c48-10 / and
                     :op2 (c48-8 / thank-01
                                 :ARG1 c48-1
                                 :ARG2 (c48-5 / memory
                                              :ARG1-of (c48-11 / give-01
                                                               :ARG0 c48-1
                                                               :ARG2 (c48-9 / i)
                                                               :duration (c48-7 / life
                                                                                :poss c48-9))))))

# ::snt Prayers for family R. I. P.
# ::tokens ["Prayers", "for", "family", "R.", "I.", "P."]
# ::lemmas ["prayer", "for", "family", "R.", "I.", "P."]
(c50-2 / pray-01
       :beneficiary (c50-0 / family
                           :name (c50-1 / name
                                        :op1 "R.I."
                                        :op2 "P.")))
