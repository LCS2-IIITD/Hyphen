# ::snt "WE LIVED A LAVISHED LIFESTYLE" WHO GAVE THAT TO YOU ? WHO WAS THE BREADWINNER? TO HURT A BEAUTUFUL WOMAN LIKE THIS AND CHEAT, LIE &amp; STEAL FROM YOUR OWN WOMAN MAKES ME SICK ! STILL DONT UNDERSTAND WHY ? YOU DIDNT DESERVE ANYTHING ! KENDU YOU DISGUST ME !!!
# ::tokens ["\"", "WE", "LIVED", "A", "LAVISHED", "LIFESTYLE", "\"", "WHO", "GAVE", "THAT", "TO", "YOU", "?", "WHO", "WAS", "THE", "BREADWINNER", "?", "TO", "HURT", "A", "BEAUTUFUL", "WOMAN", "LIKE", "THIS", "AND", "CHEAT", ",", "LIE", "&", "amp", ";", "STEAL", "FROM", "YOUR", "OWN", "WOMAN", "MAKES", "ME", "SICK", "!", "STILL", "DONT", "UNDERSTAND", "WHY", "?", "YOU", "DIDNT", "DESERVE", "ANYTHING", "!", "KENDU", "YOU", "DISGUST", "ME", "!", "!", "!"]
# ::lemmas ["\"", "WE", "LIVED", "a", "lavished", "LIFESTYLE", "\"", "who", "give", "that", "to", "you", "?", "who", "be", "the", "breadwinner", "?", "to", "hurt", "a", "BEAUTUFUL", "woman", "like", "this", "and", "cheat", ",", "LIE", "&", "amp", ";", "STEAL", "from", "your", "OWN", "woman", "makes", "i", "SICK", "!", "still", "dont", "understand", "why", "?", "you", "didnt", "deserve", "anything", "!", "KENDU", "you", "disgust", "i", "!", "!", "!"]
(c1-21 / multi-sentence
       :snt1 (c1-17 / give-01
                    :ARG0 (c1-32 / we)
                    :ARG1 (c1-16 / that)
                    :ARG2 (c1-8 / you)
                    :polarity (c1-15 / amr-unknown))
       :snt2 (c1-3 / win-01
                   :ARG0 (c1-14 / amr-unknown)
                   :ARG2 (c1-28 / we))
       :snt3 (c1-13 / and
                    :op1 (c1-10 / hunger-01
                                :ARG0 (c1-36 / amr-unknown)
                                :ARG1 (c1-0 / woman
                                            :ARG1-of (c1-20 / beautiful-02)
                                            :ARG1-of (c1-29 / resemble-01
                                                            :ARG2 (c1-25 / this))))
                    :op2 (c1-33 / and
                                :op1 (c1-11 / meat)
                                :op2 (c1-24 / and
                                            :op1 (c1-2 / lie-08)
                                            :op2 (c1-12 / amp)))
                    :op3 (c1-26 / make-02
                                :ARG0 (c1-1 / steam-02
                                            :ARG0 (c1-19 / woman
                                                         :poss (c1-18 / you))
                                            :ARG1 (c1-34 / i))
                                :ARG1 (c1-6 / sick-05
                                            :ARG1 c1-34)))
       :snt4 (c1-23 / and
                    :op1 (c1-27 / understand-01
                                :ARG0 (c1-9 / i)
                                :ARG1 (c1-35 / thing
                                             :ARG0-of (c1-22 / cause-01))
                                :mod (c1-4 / still)
                                :polarity -)
                    :op2 (c1-30 / deserve-01
                                :ARG0 c1-18
                                :ARG1 (c1-7 / anything)
                                :polarity -))
       :snt5 (c1-31 / embarrass-01
                    :ARG0 (c1-5 / you)
                    :ARG1 c1-9))

# ::snt .... but this is just terrible... I know its a temp amt., but still...
# ::tokens ["....", "but", "this", "is", "just", "terrible", "...", "I", "know", "its", "a", "temp", "amt", ".", ",", "but", "still", "..."]
# ::lemmas ["....", "but", "this", "be", "just", "terrible", "...", "i", "know", "its", "a", "temp", "amt", ".", ",", "but", "still", "..."]
(c2-0 / multi-sentence
      :snt1 (c2-5 / contrast-01
                  :ARG2 (c2-8 / terrible-01
                              :ARG1 (c2-9 / this)
                              :mod (c2-7 / just)))
      :snt2 (c2-12 / contrast-01
                   :ARG1 (c2-3 / know-01
                               :ARG0 (c2-10 / i)
                               :ARG1 (c2-4 / person
                                           :ARG0-of (c2-6 / work-01
                                                          :manner (c2-11 / temporary))
                                           :domain (c2-2 / it)))
                   :ARG2 (c2-1 / still)))

# ::snt Why should Mary J. Blige have to pay her husband $30,000 in spousal support? Doesn't he know how to find a job?
# ::tokens ["Why", "should", "Mary", "J.", "Blige", "have", "to", "pay", "her", "husband", "$", "30,000", "in", "spousal", "support", "?", "Does", "n't", "he", "know", "how", "to", "find", "a", "job", "?"]
# ::lemmas ["why", "should", "Mary", "J.", "Blige", "have", "to", "pay", "her", "husband", "$", "30,000", "in", "spousal", "support", "?", "do", "not", "he", "know", "how", "to", "find", "a", "job", "?"]
(c3-11 / multi-sentence
       :snt1 (c3-13 / cause-01
                    :ARG0 (c3-10 / amr-unknown)
                    :ARG1 (c3-16 / recommend-01
                                 :ARG1 (c3-2 / obligate-01
                                             :ARG1 (c3-17 / person
                                                          :name (c3-15 / name
                                                                       :op1 "Mary"
                                                                       :op2 "J."
                                                                       :op3 "Blige"))
                                             :ARG2 (c3-12 / pay-01
                                                          :ARG0 c3-17
                                                          :ARG1 (c3-5 / monetary-quantity
                                                                      :unit (c3-19 / dollar)
                                                                      :ARG2-of (c3-0 / support-01
                                                                                     :ARG0 (c3-1 / person
                                                                                                 :ARG0-of (c3-6 / have-rel-role-91
                                                                                                                :ARG1 c3-17
                                                                                                                :ARG2 (c3-18 / husband)))
                                                                                     :mod (c3-3 / spouse))
                                                                      :quant 30000)
                                                          :ARG2 c3-1))))
       :snt2 (c3-7 / know-01
                   :ARG0 (c3-4 / he)
                   :ARG1 (c3-9 / thing
                               :manner-of (c3-14 / find-01
                                                 :ARG0 c3-4
                                                 :ARG1 (c3-8 / job)))
                   :polarity c3-10
                   :polarity -))

# ::snt I would've understood if the order was due to back pay from their 'business ' association.
# ::tokens ["I", "would", "'ve", "understood", "if", "the", "order", "was", "due", "to", "back", "pay", "from", "their", "'", "business", "'", "association", "."]
# ::lemmas ["i", "would", "'ve", "understand", "if", "the", "order", "be", "due", "to", "back", "pay", "from", "their", "'", "business", "'", "association", "."]
(c4-8 / understand-01
      :ARG0 (c4-5 / i)
      :condition (c4-7 / due-03
                       :ARG1 (c4-0 / order-01)
                       :ARG2 (c4-3 / pay-01
                                   :ARG0 (c4-6 / association
                                               :mod (c4-1 / business)
                                               :poss (c4-4 / they
                                                           :ARG2-of c4-3))
                                   :mod (c4-2 / back))))

# ::snt Damn... K. Ppl with $$$/assets need to learn... so what, you love the person, don't be stupid.
# ::tokens ["Damn", "...", "K.", "Ppl", "with", "$", "$", "$", "/assets", "need", "to", "learn", "...", "so", "what", ",", "you", "love", "the", "person", ",", "do", "n't", "be", "stupid", "."]
# ::lemmas ["damn", "...", "K.", "Ppl", "with", "$", "$", "$", "/assets", "need", "to", "learn", "...", "so", "what", ",", "you", "love", "the", "person", ",", "do", "not", "be", "stupid", "."]
(c5-3 / multi-sentence
      :snt1 (c5-2 / need-01
                  :ARG0 (c5-7 / person
                              :name (c5-6 / name
                                          :op1 "K."
                                          :op2 "Ppl")
                              :ARG0-of (c5-8 / have-03
                                             :ARG1 (c5-4 / slash
                                                         :op1 (c5-9 / money)
                                                         :op2 (c5-12 / asset))))
                  :ARG1 (c5-10 / learn-01
                               :ARG0 c5-7)
                  :mod (c5-13 / damn
                              :mode expressive))
      :snt2 (c5-11 / and
                   :op1 (c5-14 / love-01
                               :ARG0 (c5-1 / you)
                               :ARG1 (c5-5 / person))
                   :op2 (c5-0 / stupid
                              :domain c5-1
                              :polarity -
                              :mode imperative)))

# ::snt for that bum booo
# ::tokens ["for", "that", "bum", "booo"]
# ::lemmas ["for", "that", "bum", "booo"]
(c6-0 / booo
      :mod (c6-1 / that)
      :mode expressive)

# ::snt That's bullshit! He cheated. She pays.
# ::tokens ["That", "'s", "bullshit", "!", "He", "cheated", ".", "She", "pays", "."]
# ::lemmas ["that", "be", "bullshit", "!", "he", "cheat", ".", "she", "pay", "."]
(c7-1 / multi-sentence
      :snt1 (c7-0 / bullshit
                  :domain (c7-6 / that))
      :snt2 (c7-5 / cheat-03
                  :ARG0 (c7-3 / he))
      :snt3 (c7-4 / pay-01
                  :ARG0 (c7-2 / she)))

# ::snt What a jerk!
# ::tokens ["What", "a", "jerk", "!"]
# ::lemmas ["what", "a", "jerk", "!"]
(c8-0 / jerk
      :degree (c8-1 / so)
      :mode expressive)

# ::snt omgggg. So horrible! How can he do that to her? Terrible
# ::tokens ["omgggg", ".", "So", "horrible", "!", "How", "can", "he", "do", "that", "to", "her", "?", "Terrible"]
# ::lemmas ["omgggg", ".", "so", "horrible", "!", "how", "can", "he", "do", "that", "to", "she", "?", "terrible"]
(c9-1 / multi-sentence
      :snt1 (c9-4 / horrible
                  :degree (c9-2 / so))
      :snt2 (c9-6 / horrible
                  :manner (c9-8 / amr-unknown)
                  :ARG1-of (c9-5 / possible-01)
                  :domain (c9-9 / do-02
                                :ARG0 (c9-3 / he)
                                :ARG1 (c9-7 / that)
                                :ARG2 (c9-0 / she)))
      :snt3 (c9-10 / horrible))

# ::snt Bruh..
# ::tokens ["Bruh", ".."]
# ::lemmas ["Bruh", ".."]
(c10-0 / bruh
       :mode expressive)

# ::snt He's a gold digger. Yes men can be that too! How sad
# ::tokens ["He", "'s", "a", "gold", "digger", ".", "Yes", "men", "can", "be", "that", "too", "!", "How", "sad"]
# ::lemmas ["he", "be", "a", "gold", "digger", ".", "yes", "man", "can", "be", "that", "too", "!", "how", "sad"]
(c11-2 / multi-sentence
       :snt1 (c11-6 / person
                    :ARG0-of (c11-10 / dig-01
                                     :ARG1 (c11-9 / gold))
                    :domain (c11-5 / he))
       :snt2 (c11-3 / possible-01
                    :ARG1 (c11-8 / that
                                 :mod (c11-7 / man)
                                 :mod (c11-11 / too))
                    :mod (c11-1 / yes))
       :snt3 (c11-4 / sad-02
                    :degree (c11-0 / so)))

# ::snt Warm.Prayers.Sent.
# ::tokens ["Warm", ".", "Prayers", ".", "Sent", "."]
# ::lemmas ["warm", ".", "prayer", ".", "send", "."]
(c12-3 / and
       :op1 (c12-1 / warm-01)
       :op2 (c12-2 / pray-01)
       :op3 (c12-0 / sentence-01))

# ::snt Ohh myyy goodness.
# ::tokens ["Ohh", "myyy", "goodness", "."]
# ::lemmas ["Ohh", "myyy", "goodness", "."]
(c13-0 / goodness
       :mod (c13-1 / oh
                   :mode expressive)
       :poss (c13-2 / i)
       :mode expressive)

# ::snt Yikes
# ::tokens ["Yikes"]
# ::lemmas ["yike"]
(c14-0 / yikes)

# ::snt That's some BS! Don't worry Karma is real &amp; it will find him one day.
# ::tokens ["That", "'s", "some", "BS", "!", "Do", "n't", "worry", "Karma", "is", "real", "&", "amp", ";", "it", "will", "find", "him", "one", "day", "."]
# ::lemmas ["that", "be", "some", "bs", "!", "do", "not", "worry", "Karma", "be", "real", "&", "amp", ";", "it", "will", "find", "he", "one", "day", "."]
(c15-4 / multi-sentence
       :snt1 (c15-2 / bullshit-01
                    :ARG1 (c15-13 / that)
                    :mod (c15-6 / some))
       :snt2 (c15-10 / worry-02
                     :ARG0 (c15-3 / you)
                     :ARG1 (c15-7 / and
                                  :op1 (c15-8 / real-04
                                              :ARG1 (c15-9 / person
                                                           :name (c15-5 / name
                                                                        :op1 "Karma")))
                                  :op2 (c15-12 / amp
                                               :domain c15-9))
                     :ARG1-of (c15-11 / cause-01
                                      :ARG0 (c15-0 / find-01
                                                   :ARG0 (c15-14 / it)
                                                   :ARG1 c15-9
                                                   :time (c15-15 / day
                                                                 :mod (c15-1 / one))))
                     :polarity -
                     :mode imperative))

# ::snt A grown ass freak!!!
# ::tokens ["A", "grown", "ass", "freak", "!", "!", "!"]
# ::lemmas ["a", "grown", "ass", "freak", "!", "!", "!"]
(c16-1 / freak
       :ARG1-of (c16-0 / grown-03)
       :mod (c16-2 / ass)
       :mode expressive)

# ::snt that's ridiculous.
# ::tokens ["that", "'s", "ridiculous", "."]
# ::lemmas ["that", "be", "ridiculous", "."]
(c17-0 / ridiculous-02
       :ARG1 (c17-1 / that))

# ::snt One he need to get a JOB!!!!! But men like that not going to have luck.... Mary hold you head up.. Because you will always be on top......
# ::tokens ["One", "he", "need", "to", "get", "a", "JOB", "!", "!", "!", "!", "!", "But", "men", "like", "that", "not", "going", "to", "have", "luck", "....", "Mary", "hold", "you", "head", "up", "..", "Because", "you", "will", "always", "be", "on", "top", "......"]
# ::lemmas ["One", "he", "need", "to", "get", "a", "JOB", "!", "!", "!", "!", "!", "but", "man", "like", "that", "not", "go", "to", "have", "luck", "....", "Mary", "hold", "you", "head", "up", "..", "because", "you", "will", "always", "be", "on", "top", "......"]
(c18-12 / multi-sentence
        :snt1 (c18-18 / need-01
                      :ARG0 (c18-4 / he)
                      :ARG1 (c18-8 / get-01
                                   :ARG0 c18-4
                                   :ARG1 (c18-6 / job))
                      :mod (c18-1 / one))
        :snt2 (c18-14 / contrast-01
                      :ARG2 (c18-21 / have-03
                                    :ARG0 (c18-5 / man
                                                 :ARG1-of (c18-19 / resemble-01
                                                                  :ARG2 (c18-7 / that)))
                                    :ARG1 (c18-0 / luck)
                                    :polarity -))
        :snt3 (c18-3 / hold-01
                     :ARG0 (c18-20 / person
                                   :name (c18-13 / name
                                                 :op1 "Mary"))
                     :ARG1 (c18-16 / head
                                   :part-of (c18-2 / you))
                     :direction (c18-17 / up)
                     :ARG1-of (c18-10 / cause-01
                                      :ARG0 (c18-11 / be-located-at-91
                                                    :ARG1 c18-2
                                                    :ARG2 (c18-15 / top)
                                                    :time (c18-9 / always)))))

# ::snt Terrible
# ::tokens ["Terrible"]
# ::lemmas ["terrible"]
(c19-0 / horrible)

# ::snt I would'nt give him S!!!!!
# ::tokens ["I", "would'nt", "give", "him", "S", "!", "!", "!", "!", "!"]
# ::lemmas ["i", "would'nt", "give", "he", "S", "!", "!", "!", "!", "!"]
(c21-0 / give-01
       :ARG0 (c21-2 / i)
       :ARG1 (c21-3 / string-entity
                    :value "S")
       :ARG2 (c21-1 / he)
       :polarity -)

# ::snt That is messed up. I would be so pissed.
# ::tokens ["That", "is", "messed", "up", ".", "I", "would", "be", "so", "pissed", "."]
# ::lemmas ["that", "be", "mess", "up", ".", "i", "would", "be", "so", "pissed", "."]
(c22-0 / multi-sentence
       :snt1 (c22-2 / mess-up-02
                    :ARG1 (c22-5 / that))
       :snt2 (c22-3 / piss-03
                    :ARG1 (c22-4 / i)
                    :degree (c22-1 / so)))

# ::snt Such a shame...
# ::tokens ["Such", "a", "shame", "..."]
# ::lemmas ["such", "a", "shame", "..."]
(c23-1 / shame
       :mod (c23-0 / such))

# ::snt Why?
# ::tokens ["Why", "?"]
# ::lemmas ["why", "?"]
(c24-0 / cause-01
       :ARG0 (c24-1 / amr-unknown))

# ::snt I feels Mary's biz azz headache on this one... At this point, I just want her to move on and be okay af
# ::tokens ["I", "feels", "Mary", "'s", "biz", "azz", "headache", "on", "this", "one", "...", "At", "this", "point", ",", "I", "just", "want", "her", "to", "move", "on", "and", "be", "okay", "af"]
# ::lemmas ["i", "feel", "Mary", "'s", "biz", "azz", "headache", "on", "this", "one", "...", "at", "this", "point", ",", "i", "just", "want", "she", "to", "move", "on", "and", "be", "okay", "af"]
(c25-10 / multi-sentence
        :snt1 (c25-13 / feel-01
                      :ARG0 (c25-17 / i)
                      :ARG1 (c25-3 / headache
                                   :mod (c25-9 / biz
                                               :mode expressive)
                                   :poss (c25-15 / person
                                                 :name (c25-14 / name
                                                               :op1 "Mary"))
                                   :topic (c25-1 / one
                                                 :mod (c25-7 / this))))
        :snt2 (c25-16 / want-01
                      :ARG0 (c25-2 / i)
                      :ARG1 (c25-6 / and
                                   :op1 (c25-4 / move-01
                                               :ARG1 (c25-0 / she)
                                               :direction (c25-8 / on))
                                   :op2 (c25-18 / okay-04
                                                :ARG1 c25-0))
                      :mod (c25-5 / just)
                      :time (c25-11 / point
                                    :mod (c25-12 / this))))

# ::snt I feel some kinda way.....
# ::tokens ["I", "feel", "some", "kinda", "way", "....."]
# ::lemmas ["i", "feel", "some", "kinda", "way", "....."]
(c26-0 / feel-01
       :ARG0 (c26-4 / i)
       :ARG1 (c26-3 / way
                    :mod (c26-2 / kind
                                :mod (c26-1 / some))))
