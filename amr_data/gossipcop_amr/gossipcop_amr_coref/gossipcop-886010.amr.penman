# ::snt Related
# ::tokens ["Related"]
# ::lemmas ["relate"]
(c1-0 / relate-01)

# ::snt Several years late. They knew the whole time
# ::tokens ["Several", "years", "late", ".", "They", "knew", "the", "whole", "time"]
# ::lemmas ["Several", "years", "late", ".", "they", "know", "the", "whole", "time"]
(c2-1 / multi-sentence
      :snt1 (c2-3 / late
                  :op1 (c2-2 / several
                             :op1 (c2-7 / temporal-quantity
                                        :unit (c2-0 / year)
                                        :quant 1)))
      :snt2 (c2-4 / know-01
                  :ARG0 (c2-8 / they)
                  :duration (c2-6 / time
                                  :mod (c2-5 / whole))))

# ::snt Weinstein trashed so many people- it's hard to understand how someone with so much bounty is so craven- tragic flaw
# ::tokens ["Weinstein", "trashed", "so", "many", "people-", "it", "'s", "hard", "to", "understand", "how", "someone", "with", "so", "much", "bounty", "is", "so", "craven-", "tragic", "flaw"]
# ::lemmas ["Weinstein", "trash", "so", "many", "people-", "it", "be", "hard", "to", "understand", "how", "someone", "with", "so", "much", "bounty", "be", "so", "craven-", "tragic", "flaw"]
(c3-6 / and
      :op1 (c3-7 / trash-01
                 :ARG0 (c3-17 / person
                              :name (c3-16 / name
                                           :op1 "Weinstein"))
                 :ARG1 (c3-10 / person
                              :ARG1-of (c3-4 / have-quant-91
                                             :ARG2 (c3-9 / many)
                                             :ARG3 (c3-0 / so))))
      :op2 (c3-18 / hard-02
                  :ARG1 (c3-14 / understand-01
                               :ARG1 (c3-15 / flaw-01
                                            :ARG1 (c3-2 / someone
                                                        :ARG0-of (c3-3 / have-03
                                                                       :ARG1 (c3-8 / bounty
                                                                                   :ARG1-of (c3-13 / have-quant-91
                                                                                                   :ARG2 (c3-5 / much)
                                                                                                   :ARG3 (c3-1 / so)))))
                                            :mod (c3-11 / craven)
                                            :mod (c3-12 / tragic)))))

# ::snt Just like the POTUS.
# ::tokens ["Just", "like", "the", "POTUS", "."]
# ::lemmas ["just", "like", "the", "POTUS", "."]
(c4-1 / resemble-01
      :ARG2 (c4-0 / government-organization
                  :name (c4-3 / name
                              :op1 "United"
                              :op2 "States"
                              :op3 "of"
                              :op4 "America"))
      :mod (c4-2 / just))

# ::snt Never once did it occur to me in my lifetime to act the clown, making sure everyone thinks me a joke that is never to be taken seriously.
# ::tokens ["Never", "once", "did", "it", "occur", "to", "me", "in", "my", "lifetime", "to", "act", "the", "clown", ",", "making", "sure", "everyone", "thinks", "me", "a", "joke", "that", "is", "never", "to", "be", "taken", "seriously", "."]
# ::lemmas ["never", "once", "do", "it", "occur", "to", "i", "in", "my", "lifetime", "to", "act", "the", "clown", ",", "make", "sure", "everyone", "think", "i", "a", "joke", "that", "be", "never", "to", "be", "take", "seriously", "."]
(c5-8 / act-01
      :ARG0 (c5-7 / i)
      :ARG1 (c5-5 / clown)
      :frequency (c5-1 / rate-entity-91
                       :ARG2 (c5-3 / lifetime
                                   :poss c5-7)
                       :polarity -
                       :ARG1 1)
      :purpose (c5-2 / ensure-01
                     :ARG0 c5-7
                     :ARG1 (c5-6 / think-01
                                 :ARG0 (c5-10 / everyone)
                                 :ARG1 (c5-12 / thing
                                              :ARG2-of (c5-9 / joke-01)
                                              :ARG1-of (c5-11 / take-04
                                                              :ARG2 (c5-0 / serious-01)
                                                              :time (c5-4 / ever)
                                                              :polarity -)))))

# ::snt Hillary clinton is apalled that harvey weinstein never tried to sexually assault her.
# ::tokens ["Hillary", "clinton", "is", "apalled", "that", "harvey", "weinstein", "never", "tried", "to", "sexually", "assault", "her", "."]
# ::lemmas ["Hillary", "clinton", "be", "apalle", "that", "harvey", "weinstein", "never", "try", "to", "sexually", "assault", "she", "."]
(c7-3 / apalled-01
      :ARG1 (c7-6 / person
                  :name (c7-0 / name
                              :op1 "Hillary"
                              :op2 "Clinton"))
      :ARG2 (c7-8 / try-01
                  :ARG0 (c7-1 / person
                              :name (c7-5 / name
                                          :op1 "Harvey"
                                          :op2 "Weinstein"))
                  :ARG1 (c7-7 / assault-01
                              :ARG0 c7-1
                              :ARG1 c7-6
                              :manner (c7-2 / sexual))
                  :time (c7-4 / ever)
                  :polarity -))

# ::snt Just imagine if was a republican. Theyd devote the whole show to the topic.
# ::tokens ["Just", "imagine", "if", "was", "a", "republican", ".", "They", "d", "devote", "the", "whole", "show", "to", "the", "topic", "."]
# ::lemmas ["just", "imagine", "if", "be", "a", "republican", ".", "they", "d", "devote", "the", "whole", "show", "to", "the", "topic", "."]
(c8-1 / multi-sentence
      :snt1 (c8-9 / imagine-01
                  :ARG0 (c8-0 / you)
                  :ARG1 (c8-6 / person
                              :ARG0-of (c8-5 / have-org-role-91
                                             :ARG1 (c8-2 / political-party
                                                         :name (c8-3 / name
                                                                     :op1 "Republican"))))
                  :mod (c8-8 / just)
                  :mode imperative)
      :snt2 (c8-11 / devote-01
                   :ARG0 (c8-10 / they)
                   :ARG1 (c8-4 / show
                               :mod (c8-7 / whole))
                   :ARG2 (c8-12 / topic)))

# ::snt Obama finally gave Late a Night hosts the ok to do Weinstein jokes after days of silence.
# ::tokens ["Obama", "finally", "gave", "Late", "a", "Night", "hosts", "the", "ok", "to", "do", "Weinstein", "jokes", "after", "days", "of", "silence", "."]
# ::lemmas ["Obama", "finally", "give", "late", "a", "Night", "host", "the", "ok", "to", "do", "Weinstein", "joke", "after", "days", "of", "silence", "."]
(c9-15 / give-01
       :ARG0 (c9-9 / person
                   :name (c9-3 / name
                               :op1 "Obama"))
       :ARG1 (c9-0 / okay-04
                   :ARG0 c9-9
                   :ARG1 (c9-12 / joke-01
                                :ARG0 (c9-4 / person
                                            :ARG0-of (c9-8 / host-01
                                                           :ARG1 (c9-2 / broadcast-program
                                                                       :name (c9-10 / name
                                                                                    :op1 "Late"
                                                                                    :op2 "A"
                                                                                    :op3 "Night"))))
                                :ARG2 (c9-14 / person
                                             :name (c9-11 / name
                                                          :op1 "Weinstein")
                                             :ARG2-of c9-15)))
       :time (c9-1 / final)
       :time (c9-7 / after
                   :op1 (c9-5 / silence-01
                              :duration (c9-6 / multiple
                                              :op1 (c9-13 / temporal-quantity
                                                          :unit (c9-16 / day)
                                                          :quant 1)))))

# ::snt Oh, now that its safe to mock him. So brave!
# ::tokens ["Oh", ",", "now", "that", "its", "safe", "to", "mock", "him", ".", "So", "brave", "!"]
# ::lemmas ["oh", ",", "now", "that", "its", "safe", "to", "mock", "he", ".", "so", "brave", "!"]
(c10-4 / multi-sentence
       :snt1 (c10-5 / safe-01
                    :ARG1 (c10-6 / mock-01
                                 :ARG1 (c10-7 / he))
                    :time (c10-3 / now)
                    :mod (c10-0 / oh
                                :mode expressive))
       :snt2 (c10-2 / brave-02
                    :degree (c10-1 / so)
                    :mode expressive))

# ::snt Well, they could've gone with "he's a good person", like Trump did for Ailes &amp; O'Reilly.
# ::tokens ["Well", ",", "they", "could", "'ve", "gone", "with", "\"", "he", "'s", "a", "good", "person", "\"", ",", "like", "Trump", "did", "for", "Ailes", "&", "amp", ";", "O'Reilly", "."]
# ::lemmas ["well", ",", "they", "could", "'ve", "go", "with", "\"", "he", "be", "a", "good", "person", "\"", ",", "like", "Trump", "do", "for", "Ailes", "&", "amp", ";", "O'Reilly", "."]
(c11-6 / possible-01
       :ARG1 (c11-13 / go-06
                     :ARG0 (c11-12 / they)
                     :ARG1 (c11-3 / say-01
                                  :ARG0 c11-12
                                  :ARG1 (c11-11 / good-02
                                                :ARG1 (c11-5 / he)))
                     :ARG1-of (c11-4 / resemble-01
                                     :ARG2 (c11-15 / go-06
                                                   :ARG0 (c11-2 / person
                                                                :name (c11-1 / name
                                                                             :op1 "Trump"))
                                                   :ARG1 (c11-0 / say-01
                                                                :ARG0 c11-2
                                                                :ARG1 (c11-14 / person
                                                                              :name (c11-7 / name
                                                                                           :op1 "Ailes"
                                                                                           :op2 "&amp"))
                                                                :ARG2 (c11-9 / person
                                                                             :name (c11-8 / name
                                                                                          :op1 "O'Reilly"))))))
       :mod (c11-10 / well))
