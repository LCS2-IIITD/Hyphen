# ::snt The diss is that E News circulated this idiotic story. How pathetic for such a large network. Who care what Spencer thinks, who he is
# ::tokens ["The", "diss", "is", "that", "E", "News", "circulated", "this", "idiotic", "story", ".", "How", "pathetic", "for", "such", "a", "large", "network", ".", "Who", "care", "what", "Spencer", "thinks", ",", "who", "he", "is"]
# ::lemmas ["the", "diss", "be", "that", "E", "News", "circulate", "this", "idiotic", "story", ".", "how", "pathetic", "for", "such", "a", "large", "network", ".", "who", "care", "what", "Spencer", "think", ",", "who", "he", "be"]
(c2-10 / multi-sentence
       :snt1 (c2-13 / circulate-01
                    :ARG0 (c2-9 / broadcast-program
                                :name (c2-15 / name
                                             :op1 "E"
                                             :op2 "News"))
                    :ARG1 (c2-0 / story
                                :mod (c2-18 / idiotic)
                                :mod (c2-7 / this)))
       :snt2 (c2-16 / pathetic
                    :degree (c2-4 / so)
                    :domain (c2-12 / network
                                   :mod (c2-2 / large
                                              :mod (c2-3 / such))))
       :snt3 (c2-8 / care-01
                   :ARG0 (c2-6 / amr-unknown)
                   :ARG1 (c2-5 / and
                               :op1 (c2-14 / thing
                                           :ARG1-of (c2-19 / think-01
                                                           :ARG0 (c2-11 / person
                                                                        :name (c2-17 / name
                                                                                     :op1 "Spencer"))))
                               :op2 (c2-1 / thing
                                          :domain c2-11))))

# ::snt Poor guy needs to stay relevant somehow I guess... *Sad*
# ::tokens ["Poor", "guy", "needs", "to", "stay", "relevant", "somehow", "I", "guess", "...", "*", "Sad", "*"]
# ::lemmas ["poor", "guy", "need", "to", "stay", "relevant", "somehow", "i", "guess", "...", "*", "sad", "*"]
(c3-7 / guess-01
      :ARG0 (c3-6 / i)
      :ARG1 (c3-1 / need-01
                  :ARG0 (c3-5 / guy
                              :mod (c3-4 / poor))
                  :ARG1 (c3-2 / stay-01
                              :ARG1 c3-5
                              :ARG3 (c3-3 / relevant-01
                                          :ARG1 c3-5)
                              :manner (c3-0 / somehow)))
      :ARG0-of (c3-8 / sad-02))

# ::snt (Official video) IS OUT NOW!BEAUTIFUL VIDEO BY KING BASS.CHECK IT OUT!!!
# ::tokens ["(", "Official", "video", ")", "IS", "OUT", "NOW!BEAUTIFUL", "VIDEO", "BY", "KING", "BASS.CHECK", "IT", "OUT", "!", "!", "!"]
# ::lemmas ["(", "official", "video", ")", "be", "out", "NOW!BEAUTIFUL", "video", "by", "KING", "BASS.CHECK", "IT", "OUT", "!", "!", "!"]
(c4-5 / multi-sentence
      :snt1 (c4-1 / out-01
                  :ARG1 (c4-6 / video
                              :mod (c4-0 / official))
                  :time (c4-4 / now))
      :snt2 (c4-9 / check-out-05
                  :ARG0 (c4-3 / you)
                  :ARG1 (c4-10 / video
                               :mod (c4-2 / beautiful)
                               :source (c4-8 / person
                                             :name (c4-7 / name
                                                         :op1 "King"
                                                         :op2 "Bass")))
                  :mode imperative))

# ::snt Lol is just that a fucking PRAT him &amp; his wife are the most annoying hated reality losers in the world anyway
# ::tokens ["Lol", "is", "just", "that", "a", "fucking", "PRAT", "him", "&", "amp", ";", "his", "wife", "are", "the", "most", "annoying", "hated", "reality", "losers", "in", "the", "world", "anyway"]
# ::lemmas ["Lol", "be", "just", "that", "a", "fucking", "PRAT", "he", "&", "amp", ";", "his", "wife", "be", "the", "most", "annoying", "hated", "reality", "loser", "in", "the", "world", "anyway"]
(c5-13 / multi-sentence
       :snt1 (c5-16 / upset-01
                    :ARG0 (c5-10 / that)
                    :ARG1 (c5-11 / and
                                 :op1 (c5-4 / he)
                                 :op2 (c5-20 / person
                                             :name (c5-18 / name
                                                          :op1 "amp")))
                    :mod (c5-17 / fucking)
                    :mod (c5-8 / just)
                    :ARG2-of (c5-0 / laugh-01
                                   :manner (c5-12 / loud)
                                   :mode expressive))
       :snt2 (c5-22 / have-degree-91
                    :ARG1 (c5-14 / person
                                 :ARG0-of (c5-3 / have-rel-role-91
                                                :ARG1 (c5-15 / he)
                                                :ARG2 (c5-21 / wife)))
                    :ARG2 (c5-9 / annoy-01
                                :ARG0 c5-14)
                    :ARG3 (c5-5 / most)
                    :ARG5 (c5-2 / person
                                :ARG0-of (c5-6 / lose-02
                                               :ARG1 (c5-19 / reality))
                                :location (c5-1 / world))
                    :mod (c5-7 / anyway)))

# ::snt So
# ::tokens ["So"]
# ::lemmas ["so"]
(c6-0 / so)

# ::snt He gotta stay relevant somehow his obsession with Lauren is never gonna end
# ::tokens ["He", "got", "ta", "stay", "relevant", "somehow", "his", "obsession", "with", "Lauren", "is", "never", "gon", "na", "end"]
# ::lemmas ["he", "got", "to", "stay", "relevant", "somehow", "his", "obsession", "with", "Lauren", "be", "never", "going", "to", "end"]
(c7-0 / obligate-01
      :ARG1 (c7-5 / he)
      :ARG2 (c7-2 / stay-01
                  :ARG1 c7-5
                  :ARG3 (c7-3 / relevant-01
                              :ARG1 c7-5)
                  :manner (c7-1 / somehow))
      :ARG1-of (c7-4 / end-01
                     :time (c7-6 / ever)
                     :polarity -))

# ::snt I see his obsession hasn't wavered after all these years
# ::tokens ["I", "see", "his", "obsession", "has", "n't", "wavered", "after", "all", "these", "years"]
# ::lemmas ["i", "see", "his", "obsession", "have", "not", "waver", "after", "all", "these", "years"]
(c8-2 / see-01
      :ARG0 (c8-6 / i)
      :ARG1 (c8-4 / wave-04
                  :ARG1 (c8-0 / obsess-01
                              :ARG0 (c8-3 / he))
                  :time (c8-7 / after
                              :op1 (c8-1 / year
                                         :mod (c8-5 / this)
                                         :mod (c8-8 / all)))
                  :polarity -))

# ::snt Is this what hes going to do for the next yrs? Trying to stay relevant.
# ::tokens ["Is", "this", "what", "he", "s", "going", "to", "do", "for", "the", "next", "yrs", "?", "Trying", "to", "stay", "relevant", "."]
# ::lemmas ["be", "this", "what", "he", "s", "go", "to", "do", "for", "the", "next", "yrs", "?", "try", "to", "stay", "relevant", "."]
(c9-1 / multi-sentence
      :snt1 (c9-11 / do-02
                   :polarity (c9-4 / amr-unknown)
                   :ARG0 (c9-6 / he)
                   :ARG1 (c9-9 / this)
                   :time (c9-8 / after
                               :op1 (c9-2 / now)
                               :duration (c9-12 / temporal-quantity
                                                :unit (c9-0 / year)
                                                :quant 1)))
      :snt2 (c9-10 / try-01
                   :ARG0 (c9-7 / he)
                   :ARG1 (c9-3 / stay-01
                               :ARG1 c9-7
                               :ARG3 (c9-5 / relevant-01
                                           :ARG1 c9-7))))

# ::snt He's such a jerk not to mention trying to keep himself "relevant".
# ::tokens ["He", "'s", "such", "a", "jerk", "not", "to", "mention", "trying", "to", "keep", "himself", "\"", "relevant", "\"", "."]
# ::lemmas ["he", "be", "such", "a", "jerk", "not", "to", "mention", "try", "to", "keep", "himself", "\"", "relevant", "\"", "."]
(c12-4 / contrast-01
       :ARG1 (c12-5 / jerk
                    :domain (c12-2 / he)
                    :degree (c12-0 / such))
       :ARG2 (c12-6 / try-01
                    :ARG1 (c12-3 / keep-02
                                 :ARG0 c12-2
                                 :ARG1 (c12-1 / relevant-01
                                              :ARG1 c12-2))
                    :polarity -))

# ::snt Ah does Ms. Conrad really give a shit about that piece of vomit no!
# ::tokens ["Ah", "does", "Ms.", "Conrad", "really", "give", "a", "shit", "about", "that", "piece", "of", "vomit", "no", "!"]
# ::lemmas ["ah", "do", "Ms.", "Conrad", "really", "give", "a", "shit", "about", "that", "piece", "of", "vomit", "no", "!"]
(c13-9 / give-16
       :polarity (c13-8 / amr-unknown)
       :ARG0 (c13-5 / person
                    :name (c13-0 / name
                                 :op1 "Ms."
                                 :op2 "Conrad"))
       :ARG1 (c13-2 / shit-01)
       :ARG2 (c13-1 / piece
                    :consist-of (c13-4 / vomit)
                    :mod (c13-6 / that))
       :ARG1-of (c13-3 / real-04)
       :mod (c13-7 / ah
                   :mode expressive))

# ::snt Stop reporting on this jealous buffoon!!
# ::tokens ["Stop", "reporting", "on", "this", "jealous", "buffoon", "!", "!"]
# ::lemmas ["stop", "report", "on", "this", "jealous", "buffoon", "!", "!"]
(c14-2 / stop-01
       :ARG0 (c14-1 / you)
       :ARG1 (c14-3 / report-01
                    :ARG0 c14-1
                    :ARG1 (c14-0 / buffoon
                                 :ARG0-of (c14-4 / jealous-02)
                                 :mod (c14-5 / this)))
       :mode imperative)

# ::snt He's such a moron and so irrelevant. He just wants his minutes of fame to last forever. He proved he will suck at fatherhood as well.
# ::tokens ["He", "'s", "such", "a", "moron", "and", "so", "irrelevant", ".", "He", "just", "wants", "his", "minutes", "of", "fame", "to", "last", "forever", ".", "He", "proved", "he", "will", "suck", "at", "fatherhood", "as", "well", "."]
# ::lemmas ["he", "be", "such", "a", "moron", "and", "so", "irrelevant", ".", "he", "just", "want", "his", "minute", "of", "fame", "to", "last", "forever", ".", "he", "prove", "he", "will", "suck", "at", "fatherhood", "as", "well", "."]
(c15-10 / multi-sentence
        :snt1 (c15-9 / and
                     :op1 (c15-4 / moron
                                 :domain (c15-5 / he)
                                 :degree (c15-0 / such))
                     :op2 (c15-14 / relevant-01
                                  :ARG1 c15-5
                                  :degree c15-0
                                  :polarity -))
        :snt2 (c15-18 / want-01
                      :ARG0 (c15-19 / he)
                      :ARG1 (c15-1 / last-04
                                   :ARG1 (c15-13 / fame
                                                 :poss c15-19
                                                 :duration (c15-12 / multiple
                                                                   :op1 (c15-8 / temporal-quantity
                                                                               :unit (c15-11 / minute)
                                                                               :quant 1)))
                                   :ARG2 (c15-16 / forever))
                      :mod (c15-6 / just))
        :snt3 (c15-15 / prove-01
                      :ARG0 (c15-3 / he)
                      :ARG1 (c15-2 / suck-03
                                   :ARG0 c15-3
                                   :ARG1 (c15-17 / fatherhood)
                                   :mod (c15-7 / as-well))))

# ::snt I guess becoming a father hasn't matured him. Already setting a great example for his son
# ::tokens ["I", "guess", "becoming", "a", "father", "has", "n't", "matured", "him", ".", "Already", "setting", "a", "great", "example", "for", "his", "son"]
# ::lemmas ["i", "guess", "become", "a", "father", "have", "not", "mature", "he", ".", "already", "set", "a", "great", "example", "for", "his", "son"]
(c16-3 / multi-sentence
       :snt1 (c16-14 / guess-01
                     :ARG0 (c16-12 / i)
                     :ARG1 (c16-8 / mature-02
                                  :ARG1 (c16-7 / he)
                                  :ARG2 (c16-2 / become-01
                                               :ARG1 c16-7
                                               :ARG2 (c16-0 / father))
                                  :polarity -))
       :snt2 (c16-4 / set-01
                    :ARG0 (c16-11 / he)
                    :ARG1 (c16-6 / example
                                 :mod (c16-13 / great))
                    :beneficiary (c16-9 / person
                                        :ARG0-of (c16-10 / have-rel-role-91
                                                         :ARG1 c16-11
                                                         :ARG2 (c16-1 / son)))
                    :time (c16-5 / already)))

# ::snt Yep I'm pretty sure it was because of Spencer...
# ::tokens ["Yep", "I", "'m", "pretty", "sure", "it", "was", "because", "of", "Spencer", "..."]
# ::lemmas ["yep", "i", "be", "pretty", "sure", "it", "be", "because", "of", "Spencer", "..."]
(c17-2 / sure-02
       :ARG0 (c17-6 / i)
       :ARG1 (c17-5 / cause-01
                    :ARG0 (c17-4 / person
                                 :name (c17-0 / name
                                              :op1 "Spencer"))
                    :ARG1 (c17-3 / it))
       :degree (c17-1 / pretty))

# ::snt He will always be an idiot and I don't understand why you guys give him attention.
# ::tokens ["He", "will", "always", "be", "an", "idiot", "and", "I", "do", "n't", "understand", "why", "you", "guys", "give", "him", "attention", "."]
# ::lemmas ["he", "will", "always", "be", "an", "idiot", "and", "i", "do", "not", "understand", "why", "you", "guy", "give", "he", "attention", "."]
(c18-2 / and
       :op1 (c18-8 / idiot
                   :domain (c18-3 / he)
                   :time (c18-7 / always))
       :op2 (c18-11 / understand-01
                    :ARG0 (c18-1 / i)
                    :ARG1 (c18-6 / thing
                                 :ARG0-of (c18-4 / cause-01
                                                 :ARG1 (c18-9 / give-01
                                                              :ARG0 (c18-0 / you
                                                                           :mod (c18-10 / guy))
                                                              :ARG1 (c18-5 / attend-02
                                                                           :ARG0 c18-0
                                                                           :ARG1 c18-3)
                                                              :ARG2 c18-8)))
                    :polarity -))

# ::snt It is moments like this where my love for all gets tested &amp; I am reminded where my loyalty lies
# ::tokens ["It", "is", "moments", "like", "this", "where", "my", "love", "for", "all", "gets", "tested", "&", "amp", ";", "I", "am", "reminded", "where", "my", "loyalty", "lies"]
# ::lemmas ["it", "be", "moment", "like", "this", "where", "my", "love", "for", "all", "gets", "test", "&", "amp", ";", "i", "be", "remind", "where", "my", "loyalty", "lie"]
(c20-2 / and
       :op1 (c20-0 / moment
                   :ARG1-of (c20-1 / resemble-01
                                   :ARG2 (c20-7 / this))
                   :time-of (c20-11 / test-01
                                    :ARG1 (c20-3 / love-01
                                                 :ARG0 (c20-6 / i)
                                                 :ARG1 (c20-8 / all))))
       :op2 (c20-9 / remind-01
                   :ARG1 (c20-10 / lie-07
                                 :ARG1 (c20-4 / loyal-01
                                              :ARG1 c20-6)
                                 :ARG2 (c20-5 / amr-unknown))
                   :ARG2 c20-6))

# ::snt HOW DARE HE
# ::tokens ["HOW", "DARE", "HE"]
# ::lemmas ["how", "dare", "he"]
(c21-0 / dare-01
       :ARG0 (c21-1 / he)
       :degree (c21-2 / so)
       :mode imperative)

# ::snt Did a nobody just majorly dis a nobody?
# ::tokens ["Did", "a", "nobody", "just", "majorly", "dis", "a", "nobody", "?"]
# ::lemmas ["do", "a", "nobody", "just", "majorly", "dis", "a", "nobody", "?"]
(c22-5 / disfigure-01
       :polarity (c22-4 / amr-unknown)
       :ARG0 (c22-1 / nobody)
       :ARG1 (c22-2 / nobody)
       :ARG1-of (c22-0 / major-02)
       :mod (c22-3 / just))
