# ::snt ich werde das nie vergessen
# ::tokens ["ich", "werde", "das", "nie", "vergessen"]
# ::lemmas ["ich", "werde", "das", "nie", "vergessen"]
(c1-0 / werde-de-04
      :ARG0 (c1-3 / i)
      :ARG1 (c1-2 / nie
                  :mod (c1-1 / vergessen)))

# ::snt Der Schmerz bleibt ein Leben lang
# ::tokens ["Der", "Schmerz", "bleibt", "ein", "Leben", "lang"]
# ::lemmas ["Der", "Schmerz", "bleibt", "ein", "Leben", "lang"]
(c2-0 / bleibt-00
      :ARG0 (c2-5 / person
                  :name (c2-1 / name
                              :op1 "Der"
                              :op2 "Schmerz"))
      :ARG1 (c2-2 / person
                  :name (c2-4 / name
                              :op1 "Leben"
                              :op2 "Lang")
                  :mod (c2-3 / e)))

# ::snt No way....
# ::tokens ["No", "way", "...."]
# ::lemmas ["no", "way", "...."]
(c3-0 / way
      :quant 0)

# ::snt Kurz wiederbeleben
# ::tokens ["Kurz", "wiederbeleben"]
# ::lemmas ["Kurz", "wiederbeleben"]
(c4-1 / person
      :name (c4-0 / name
                  :op1 "Kurz")
      :mod (c4-2 / wiederbeleben))

# ::snt Literally your case right now
# ::tokens ["Literally", "your", "case", "right", "now"]
# ::lemmas ["literally", "your", "case", "right", "now"]
(c6-4 / case-03
      :ARG0 (c6-0 / you)
      :time (c6-1 / now
                  :mod (c6-2 / right))
      :mod (c6-3 / literal))

# ::snt This was you
# ::tokens ["This", "was", "you"]
# ::lemmas ["this", "be", "you"]
(c7-0 / you
      :domain (c7-1 / this))

# ::snt Ach rezan Bruder
# ::tokens ["Ach", "rezan", "Bruder"]
# ::lemmas ["Ach", "rezan", "Bruder"]
(c10-1 / person
       :name (c10-0 / name
                    :op1 "Ach"
                    :op2 "Rezan"
                    :op3 "Bruder"))

# ::snt Einfach nur dieses oh mein Gott
# ::tokens ["Einfach", "nur", "dieses", "oh", "mein", "Gott"]
# ::lemmas ["einfach", "nur", "diesis", "oh", "mein", "Gott"]
(c11-6 / and
       :op1 (c11-7 / die-01
                   :ARG1 (c11-4 / person
                                :name (c11-1 / name
                                             :op1 "Einfach"))
                   :op2-of c11-6)
       :ARG1 (c11-2 / person
                    :name (c11-3 / name
                                 :op1 "Gott"))
       :mod (c11-0 / oh
                   :op1 (c11-5 / i)
                   :mode expressive))

# ::snt Hdf
# ::tokens ["Hdf"]
# ::lemmas ["hdf"]
(c12-1 / person
       :name (c12-0 / name
                    :op1 "Hdf"))

# ::snt Immer wieder schon es anzusehen haha
# ::tokens ["Immer", "wieder", "schon", "es", "anzusehen", "haha"]
# ::lemmas ["immer", "wieder", "schon", "es", "anzusehen", "haha"]
(c13-6 / and
       :op1 (c13-2 / have-03
                   :ARG0 (c13-5 / i)
                   :ARG1 (c13-0 / schon
                                :mod (c13-3 / wieder)))
       :op2 (c13-4 / have-03
                   :ARG0 c13-5
                   :ARG1 (c13-7 / anzusehen))
       :mod (c13-1 / haha
                   :mode expressive))

# ::snt einfach k views hahaha
# ::tokens ["einfach", "k", "views", "hahaha"]
# ::lemmas ["einfach", "k", "views", "hahaha"]
(c14-1 / view-02
       :ARG0 (c14-3 / person
                    :name (c14-0 / name
                                 :op1 "einfach"))
       :mod (c14-2 / haha
                   :mode expressive))

# ::snt same
# ::tokens ["same"]
# ::lemmas ["same"]
(c15-0 / same-01)

# ::snt REST IN FUCKING PIECE
# ::tokens ["REST", "IN", "FUCKING", "PIECE"]
# ::lemmas ["rest", "in", "FUCKING", "PIECE"]
(c16-0 / rancor
       :mod (c16-1 / fucking
                   :mode expressive))

# ::snt That really sucks
# ::tokens ["That", "really", "sucks"]
# ::lemmas ["that", "really", "suck"]
(c17-2 / suck-03
       :ARG0 (c17-1 / that)
       :degree (c17-0 / really))

# ::snt my xbox would be out the window
# ::tokens ["my", "xbox", "would", "be", "out", "the", "window"]
# ::lemmas ["my", "xbox", "would", "be", "out", "the", "window"]
(c18-1 / be-located-at-91
       :ARG1 (c18-3 / product
                    :name (c18-2 / name
                                 :op1 "xbox")
                    :poss (c18-5 / i))
       :ARG2 (c18-0 / out-06
                    :ARG1 c18-3
                    :ARG2 (c18-4 / window)))

# ::snt it was a teammate...
# ::tokens ["it", "was", "a", "teammate", "..."]
# ::lemmas ["it", "be", "a", "teammate", "..."]
(c19-0 / person
       :ARG0-of (c19-2 / share-01)
       :domain (c19-1 / it))

# ::snt Stupid kid who left the game! Wtf!
# ::tokens ["Stupid", "kid", "who", "left", "the", "game", "!", "Wtf", "!"]
# ::lemmas ["stupid", "kid", "who", "leave", "the", "game", "!", "Wtf", "!"]
(c20-2 / kid
       :mod (c20-1 / stupid)
       :ARG0-of (c20-3 / leave-11
                       :ARG1 (c20-4 / game))
       :mod (c20-0 / fuck
                   :mode expressive))

# ::snt noooooo wayyyy if this happened to me, i would shove my cousin down the stairwell, jesus christ
# ::tokens ["noooooo", "wayyyy", "if", "this", "happened", "to", "me", ",", "i", "would", "shove", "my", "cousin", "down", "the", "stairwell", ",", "jesus", "christ"]
# ::lemmas ["noooooo", "wayyyy", "if", "this", "happen", "to", "i", ",", "i", "would", "shove", "my", "cousin", "down", "the", "stairwell", ",", "jesus", "christ"]
(c22-3 / say-01
       :ARG0 (c22-10 / i)
       :ARG1 (c22-0 / shove-01
                    :ARG0 c22-10
                    :ARG1 (c22-7 / person
                                 :ARG0-of (c22-6 / have-rel-role-91
                                                 :ARG1 c22-10
                                                 :ARG2 (c22-8 / cousin)))
                    :ARG2 (c22-12 / stairwell)
                    :condition (c22-5 / event
                                      :mod c22-10
                                      :mod (c22-11 / this))
                    :degree (c22-9 / way
                                   :mod (c22-4 / so)))
       :ARG2 (c22-2 / person
                    :name (c22-1 / name
                                 :op1 "Jesus"
                                 :op2 "Christ")))

# ::snt I'd be so pissed
# ::tokens ["I", "'d", "be", "so", "pissed"]
# ::lemmas ["i", "would", "be", "so", "piss"]
(c24-0 / piss-03
       :ARG1 (c24-1 / i)
       :degree (c24-2 / so))

# ::snt [kkalJF;ALHFLK;ZMF NALJKDHF KLJVM;LZKHFGASLKHVJ FUCK
# ::tokens ["[", "kkalJF;ALHFLK;ZMF", "NALJKDHF", "KLJVM;LZKHFGASLKHVJ", "FUCK"]
# ::lemmas ["[", "kkalJF;ALHFLK;ZMF", "NALJKDHF", "kljvm;lzkhfgaslkhvj", "FUCK"]
(c26-0 / fuck-01
       :ARG1 (c26-10 / and
                     :op1 (c26-4 / person
                                 :name (c26-1 / name
                                              :op1 "kkalJF"))
                     :op2 (c26-2 / person
                                 :name (c26-3 / name
                                              :op1 "ALHFLK"))
                     :op3 (c26-11 / person
                                  :name (c26-5 / name
                                               :op1 "ZMF"))
                     :op4 (c26-6 / person
                                 :name (c26-7 / name
                                              :op1 "KlJKDHF"))
                     :op5 (c26-9 / person
                                 :name (c26-8 / name
                                              :op1 "LZKHFGASLKHVJ")))
       :mode expressive)

# ::snt I'd punch my monitor
# ::tokens ["I", "'d", "punch", "my", "monitor"]
# ::lemmas ["i", "would", "punch", "my", "monitor"]
(c28-1 / punch-01
       :ARG0 (c28-2 / i)
       :ARG1 (c28-0 / monitor
                    :poss c28-2))

# ::snt OMG du tust mir so leid
# ::tokens ["OMG", "du", "tust", "mir", "so", "leid"]
# ::lemmas ["OMG", "du", "tust", "mir", "so", "leid"]
(c29-3 / leid
       :mod (c29-0 / oh-my-god
                   :mode expressive)
       :domain (c29-4 / person
                      :name (c29-1 / name
                                   :op1 "Mir"))
       :degree (c29-2 / so)
       :mode expressive)

# ::snt That's so unlucky
# ::tokens ["That", "'s", "so", "unlucky"]
# ::lemmas ["that", "be", "so", "unlucky"]
(c30-1 / lucky
       :degree (c30-2 / so)
       :domain (c30-0 / that)
       :polarity -)

# ::snt Lmao
# ::tokens ["Lmao"]
# ::lemmas ["lmao"]
(c31-1 / laugh-01
       :ARG0 (c31-2 / i
                    :part (c31-3 / ass))
       :ARG3 (c31-0 / off
                    :op1 c31-3))

# ::snt I am so sorry...
# ::tokens ["I", "am", "so", "sorry", "..."]
# ::lemmas ["i", "be", "so", "sorry", "..."]
(c32-2 / sorry-01
       :ARG1 (c32-1 / i)
       :degree (c32-0 / so))

# ::snt nooooo
# ::tokens ["nooooo"]
# ::lemmas ["nooooo"]
(c33-0 / no)

# ::snt PEAKKKKKKKKKKK
# ::tokens ["PEAKKKKKKKKKKK"]
# ::lemmas ["peakkkkkkkkkkk"]
(c34-0 / peak-01)

# ::snt Hahaha du Taliban
# ::tokens ["Hahaha", "du", "Taliban"]
# ::lemmas ["Hahaha", "du", "Taliban"]
(c35-0 / du
       :mod (c35-1 / criminal-organization
                   :name (c35-2 / name
                                :op1 "Taliban"))
       :mod (c35-3 / haha
                   :mode expressive))

# ::snt ...
# ::tokens ["..."]
# ::lemmas ["..."]
(c36-0 / amr-empty)

# ::snt :0
# ::tokens [":0"]
# ::lemmas [":0"]
(c37-0 / string-entity
       :value ":0")

# ::snt ehre ????????????????????????????????
# ::tokens ["ehre", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?"]
# ::lemmas ["ehre", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?", "?"]
(c38-0 / eh
       :mode expressive)

# ::snt So you are a suicide bomber????
# ::tokens ["So", "you", "are", "a", "suicide", "bomber", "?", "?", "?", "?"]
# ::lemmas ["so", "you", "be", "a", "suicide", "bomber", "?", "?", "?", "?"]
(c39-3 / cause-01
       :ARG1 (c39-0 / bomb-01
                    :mod (c39-2 / suicide)
                    :domain (c39-1 / you)
                    :polarity (c39-4 / amr-unknown)))

# ::snt its for tac campers or sometimes when people camps in top house but ur right
# ::tokens ["its", "for", "tac", "campers", "or", "sometimes", "when", "people", "camps", "in", "top", "house", "but", "ur", "right"]
# ::lemmas ["its", "for", "tac", "camper", "or", "sometimes", "when", "people", "camp", "in", "top", "house", "but", "ur", "right"]
(c41-11 / contrast-01
        :ARG1 (c41-0 / or
                     :op1 (c41-1 / benefit-01
                                 :ARG0 (c41-14 / camp-02
                                               :ARG0 (c41-8 / person)
                                               :ARG1 (c41-9 / location
                                                            :name (c41-3 / name
                                                                         :op1 "Tac"))))
                     :op2 (c41-7 / benefit-01
                                 :ARG0 c41-14
                                 :ARG1 c41-8
                                 :time (c41-12 / camp-02
                                               :ARG0 (c41-4 / person)
                                               :location (c41-10 / house
                                                                 :mod (c41-13 / top))
                                               :frequency (c41-5 / sometimes))))
        :ARG2 (c41-6 / right-06
                     :ARG1 (c41-2 / you)))

# ::snt i almost cried after this
# ::tokens ["i", "almost", "cried", "after", "this"]
# ::lemmas ["i", "almost", "cry", "after", "this"]
(c42-1 / cry-02
       :ARG0 (c42-4 / i)
       :mod (c42-0 / almost)
       :time (c42-2 / after
                    :op1 (c42-3 / this)))

# ::snt the best thing is that the host was on my team. A sniper called Apoc Zithy fucktard
# ::tokens ["the", "best", "thing", "is", "that", "the", "host", "was", "on", "my", "team", ".", "A", "sniper", "called", "Apoc", "Zithy", "fucktard"]
# ::lemmas ["the", "good", "thing", "be", "that", "the", "host", "be", "on", "my", "team", ".", "a", "sniper", "call", "Apoc", "Zithy", "fucktard"]
(c43-1 / multi-sentence
       :snt1 (c43-5 / have-degree-91
                    :ARG1 (c43-6 / person
                                 :ARG0-of (c43-9 / host-01)
                                 :part-of (c43-11 / team
                                                  :poss (c43-10 / i)))
                    :ARG2 (c43-12 / good-02
                                  :ARG1 c43-6)
                    :ARG3 (c43-7 / most))
       :snt2 (c43-8 / call-01
                    :ARG1 (c43-3 / sniper)
                    :ARG2 (c43-2 / person
                                 :name (c43-4 / name
                                              :op1 "Apoc"
                                              :op2 "Zithy")
                                 :mod (c43-0 / fucktard))))

# ::snt ahhahahahahah true but i use it when someone camps one my tac so i can blow him and myself up
# ::tokens ["ahhahahahahah", "true", "but", "i", "use", "it", "when", "someone", "camps", "one", "my", "tac", "so", "i", "can", "blow", "him", "and", "myself", "up"]
# ::lemmas ["ahhahahahahah", "true", "but", "i", "use", "it", "when", "someone", "camp", "one", "my", "tac", "so", "i", "can", "blow", "he", "and", "myself", "up"]
(c44-7 / contrast-01
       :ARG1 (c44-9 / true-01)
       :ARG2 (c44-10 / use-01
                     :ARG0 (c44-8 / i)
                     :ARG1 (c44-3 / it)
                     :ARG2 (c44-11 / camp-02
                                   :ARG0 (c44-2 / someone)
                                   :ARG1 (c44-0 / one)
                                   :purpose (c44-6 / possible-01
                                                   :ARG1 (c44-1 / blow-up-06
                                                                :ARG0 c44-8
                                                                :ARG1 (c44-4 / and
                                                                             :op1 (c44-5 / he)
                                                                             :op2 c44-8))))))

# ::snt C4s
# ::tokens ["C4s"]
# ::lemmas ["C4s"]
(c45-1 / product
       :name (c45-0 / name
                    :op1 "C4s"))

# ::snt Holy.
# ::tokens ["Holy", "."]
# ::lemmas ["Holy", "."]
(c47-0 / holy)

# ::snt rip
# ::tokens ["rip"]
# ::lemmas ["rip"]
(c48-0 / rip)

# ::snt fuuuuckkk unlucky
# ::tokens ["fuuuuckkk", "unlucky"]
# ::lemmas ["fuuuuckkk", "unlucky"]
(c49-0 / lucky
       :polarity -
       :mode expressive)

# ::snt fuck the on head this could be on with on head
# ::tokens ["fuck", "the", "on", "head", "this", "could", "be", "on", "with", "on", "head"]
# ::lemmas ["fuck", "the", "on", "head", "this", "could", "be", "on", "with", "on", "head"]
(c50-6 / and
       :op1 (c50-0 / fuck-01
                   :ARG0 (c50-2 / you)
                   :ARG1 (c50-3 / head)
                   :mode imperative)
       :op2 (c50-4 / possible-01
                   :ARG1 (c50-1 / on-heads
                                :domain (c50-5 / this))))
