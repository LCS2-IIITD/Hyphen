# ::snt Dont buy from this ignorant, insecure conservative hating bigot.
# ::tokens ["Do", "nt", "buy", "from", "this", "ignorant", ",", "insecure", "conservative", "hating", "bigot", "."]
# ::lemmas ["do", "not", "buy", "from", "this", "ignorant", ",", "insecure", "conservative", "hating", "bigot", "."]
(c1-0 / buy-01
      :ARG0 (c1-1 / you)
      :ARG2 (c1-3 / bigot
                  :ARG0-of (c1-4 / hate-01
                                 :ARG1 (c1-5 / conservative))
                  :ARG1-of (c1-6 / ignorant-02)
                  :mod (c1-2 / insecure)
                  :mod (c1-7 / this))
      :polarity -
      :mode imperative)

# ::snt Jjajajajajajjj vamoooooos !! , de momento salvo alguna portada sorpresa ms, la que me tiene enamorado es la de WINNING ELEVEN
# ::tokens ["Jjajajajajajjj", "vamoooooos", "!", "!", ",", "de", "momento", "salvo", "alguna", "portada", "sorpresa", "ms", ",", "la", "que", "me", "tiene", "enamorado", "es", "la", "de", "WINNING", "ELEVEN"]
# ::lemmas ["Jjajajajajajjj", "vamoooooos", "!", "!", ",", "de", "momento", "salvo", "alguna", "portada", "sorpresa", "ms", ",", "la", "que", "i", "tiene", "enamorado", "es", "la", "de", "WINNING", "ELEVEN"]
(c6-2 / multi-sentence
      :snt1 (c6-5 / vamoooooos
                  :domain (c6-8 / person
                                :name (c6-1 / name
                                            :op1 "Jjajajajajjj"))
                  :mode expressive)
      :snt2 (c6-3 / say-01
                  :ARG0 (c6-12 / i)
                  :ARG1 (c6-13 / and
                               :op1 (c6-0 / salvo-00
                                          :ARG0 c6-12
                                          :mod (c6-7 / moment)
                                          :mod (c6-14 / alguna
                                                      :mod (c6-4 / portada)))
                               :op2 (c6-16 / sorpresa
                                           :mod (c6-15 / ms)))
                  :ARG2 c6-8)
      :snt3 (c6-6 / esop1
                  :domain (c6-11 / possible-01
                                 :ARG1 (c6-9 / win-01
                                             :ARG0 c6-12))
                  :polarity (c6-10 / amr-unknown)))

# ::snt porque eu estava perguntando
# ::tokens ["porque", "eu", "estava", "perguntando"]
# ::lemmas ["porque", "eu", "estava", "perguntando"]
(c7-1 / estava-01
      :ARG1 (c7-0 / eu)
      :mod (c7-2 / perguntando))

# ::snt ah tienes la lista momentnea de todos los con diferentes portadas.
# ::tokens ["ah", "tienes", "la", "lista", "momentnea", "de", "todos", "los", "con", "diferentes", "portadas", "."]
# ::lemmas ["ah", "tiene", "la", "lista", "momentnea", "de", "todo", "los", "con", "diferentes", "portada", "."]
(c8-4 / tienes-01
      :ARG1 (c8-2 / lista
                  :topic (c8-5 / todos
                               :op1 (c8-3 / con-diferentes
                                          :ARG1-of (c8-1 / portada-00))))
      :mod (c8-0 / ah
                 :mode expressive))

# ::snt But I'm not sure if this year will gonna have a Edition and Edition in Europe, like I don't know if in Asia they gonna have the David Beckham Edition.
# ::tokens ["But", "I", "'m", "not", "sure", "if", "this", "year", "will", "gon", "na", "have", "a", "Edition", "and", "Edition", "in", "Europe", ",", "like", "I", "do", "n't", "know", "if", "in", "Asia", "they", "gon", "na", "have", "the", "David", "Beckham", "Edition", "."]
# ::lemmas ["but", "i", "be", "not", "sure", "if", "this", "year", "will", "going", "to", "have", "a", "Edition", "and", "Edition", "in", "Europe", ",", "like", "i", "do", "not", "know", "if", "in", "Asia", "they", "going", "to", "have", "the", "David", "Beckham", "Edition", "."]
(c9-10 / contrast-01
       :ARG2 (c9-2 / sure-02
                   :ARG0 (c9-13 / i)
                   :ARG1 (c9-6 / have-03
                               :ARG0 (c9-0 / year
                                           :mod (c9-14 / this))
                               :ARG1 (c9-3 / and
                                           :op1 (c9-5 / edition)
                                           :op2 (c9-15 / edition))
                               :location (c9-16 / continent
                                                :name (c9-1 / name
                                                            :op1 "Europe"))
                               :ARG1-of (c9-4 / resemble-01
                                              :ARG2 (c9-7 / know-01
                                                          :ARG0 c9-13
                                                          :ARG1 (c9-11 / have-03
                                                                       :ARG0 (c9-9 / they)
                                                                       :ARG1 c9-15
                                                                       :location (c9-12 / continent
                                                                                        :name (c9-8 / name
                                                                                                    :op1 "Asia")))
                                                          :polarity -)))
                   :polarity -))

# ::snt Asia (Korea)ro Evolution Soccer / Winning Eleven Japan:Winning Eleven I'm sure they gonna announce more with new partners.
# ::tokens ["Asia", "(", "Korea)ro", "Evolution", "Soccer", "/", "Winning", "Eleven", "Japan", ":", "Winning", "Eleven", "I", "'m", "sure", "they", "gon", "na", "announce", "more", "with", "new", "partners", "."]
# ::lemmas ["Asia", "(", "Korea)ro", "Evolution", "Soccer", "/", "win", "Eleven", "Japan", ":", "win", "Eleven", "i", "be", "sure", "they", "going", "to", "announce", "more", "with", "new", "partner", "."]
(c10-8 / multi-sentence
       :snt1 (c10-0 / slash
                    :op1 (c10-10 / continent
                                 :name (c10-13 / name
                                               :op1 "Asia"))
                    :op2 (c10-7 / country
                                :name (c10-9 / name
                                             :op1 "Korea"))
                    :op3 (c10-2 / organization
                                :name (c10-15 / name
                                              :op1 "Evolution"
                                              :op2 "Society"))
                    :op4 (c10-1 / company
                                :name (c10-11 / name
                                              :op1 "Winning"
                                              :op2 "Eleven")
                                :poss (c10-12 / country
                                              :name (c10-17 / name
                                                            :op1 "Japan"))))
       :snt2 (c10-3 / sure-02
                    :ARG0 (c10-18 / i)
                    :ARG1 (c10-5 / announce-01
                                 :ARG0 (c10-6 / they)
                                 :ARG1 (c10-4 / more)
                                 :accompanier (c10-16 / partner
                                                      :ARG1-of (c10-14 / new-01)))))

# ::snt Americaro Evolution Soccer Pro Evolution Soccer David Beckham EditionPro Evolution Soccer - Brazil Cover
# ::tokens ["Americaro", "Evolution", "Soccer", "Pro", "Evolution", "Soccer", "David", "Beckham", "EditionPro", "Evolution", "Soccer", "-", "Brazil", "Cover"]
# ::lemmas ["Americaro", "Evolution", "Soccer", "Pro", "Evolution", "soccer", "David", "Beckham", "EditionPro", "Evolution", "Soccer", "-", "Brazil", "Cover"]
(c11-2 / multi-sentence
       :snt1 (c11-0 / broadcast-program
                    :name (c11-1 / name
                                 :op1 "Americaro"
                                 :op2 "Evolution"
                                 :op3 "Society"
                                 :op4 "Pro"
                                 :op5 "Pro"
                                 :op6 "Evolution"
                                 :op7 "Society"
                                 :op8 "David"
                                 :op9 "Beckham"
                                 :op10 "Edition"))
       :snt2 (c11-6 / cover-03
                    :ARG0 (c11-3 / broadcast-program
                                 :name (c11-4 / name
                                              :op1 "Pro"
                                              :op2 "Evolution"
                                              :op3 "Society"))
                    :location (c11-7 / country
                                     :name (c11-5 / name
                                                  :op1 "Brazil"))))

# ::snt WOW !
# ::tokens ["WOW", "!"]
# ::lemmas ["WOW", "!"]
(c12-0 / wow-01
       :mode expressive)

# ::snt What about using that for a training ground?
# ::tokens ["What", "about", "using", "that", "for", "a", "training", "ground", "?"]
# ::lemmas ["what", "about", "use", "that", "for", "a", "training", "ground", "?"]
(c13-0 / amr-unknown
       :topic (c13-3 / use-01
                     :ARG1 (c13-1 / that)
                     :ARG2 (c13-2 / ground
                                  :location-of (c13-4 / train-01))))

# ::snt They should make anyone that looks at it want to vomit.
# ::tokens ["They", "should", "make", "anyone", "that", "looks", "at", "it", "want", "to", "vomit", "."]
# ::lemmas ["they", "should", "make", "anyone", "that", "look", "at", "it", "want", "to", "vomit", "."]
(c14-1 / recommend-01
       :ARG0 (c14-5 / they)
       :ARG1 (c14-0 / make-02
                    :ARG0 c14-5
                    :ARG1 (c14-4 / want-01
                                 :ARG0 (c14-7 / anyone
                                              :ARG0-of (c14-3 / look-01
                                                              :ARG1 (c14-6 / it)))
                                 :ARG1 (c14-2 / vomit-01
                                              :ARG0 c14-7))))

# ::snt I do think that's allowed, but the current agreement requires a stadium, too.
# ::tokens ["I", "do", "think", "that", "'s", "allowed", ",", "but", "the", "current", "agreement", "requires", "a", "stadium", ",", "too", "."]
# ::lemmas ["i", "do", "think", "that", "be", "allow", ",", "but", "the", "current", "agreement", "require", "a", "stadium", ",", "too", "."]
(c15-3 / contrast-01
       :ARG1 (c15-4 / think-01
                    :ARG0 (c15-5 / i)
                    :ARG1 (c15-1 / allow-01
                                 :ARG1 (c15-6 / that)))
       :ARG2 (c15-2 / require-01
                    :ARG0 (c15-7 / agree-01
                                 :time (c15-9 / current))
                    :ARG1 (c15-0 / stadium)
                    :mod (c15-8 / too)))

# ::snt The no-bid deal requires Beckham group to build a stadium there.
# ::tokens ["The", "no", "-", "bid", "deal", "requires", "Beckham", "group", "to", "build", "a", "stadium", "there", "."]
# ::lemmas ["the", "no", "-", "bid", "deal", "require", "Beckham", "group", "to", "build", "a", "stadium", "there", "."]
(c16-3 / require-01
       :ARG0 (c16-8 / deal-01
                    :ARG2 (c16-0 / bid-01
                                 :polarity -))
       :ARG1 (c16-4 / build-01
                    :ARG0 (c16-7 / group
                                 :mod (c16-5 / person
                                             :name (c16-1 / name
                                                          :op1 "Beckham")))
                    :ARG1 (c16-2 / stadium)
                    :location (c16-6 / there))
       :ARG2 c16-7)

# ::snt Is there a clause in the sale that the buyer can't use it to combine it with another county site to make a proposal for affordable housing?
# ::tokens ["Is", "there", "a", "clause", "in", "the", "sale", "that", "the", "buyer", "ca", "n't", "use", "it", "to", "combine", "it", "with", "another", "county", "site", "to", "make", "a", "proposal", "for", "affordable", "housing", "?"]
# ::lemmas ["be", "there", "a", "clause", "in", "the", "sale", "that", "the", "buyer", "can", "not", "use", "it", "to", "combine", "it", "with", "another", "county", "site", "to", "make", "a", "proposal", "for", "affordable", "housing", "?"]
(c17-6 / clause
       :polarity (c17-11 / amr-unknown)
       :part-of (c17-3 / sell-01)
       :domain (c17-5 / possible-01
                      :ARG1 (c17-13 / use-01
                                    :ARG0 (c17-2 / person
                                                 :ARG0-of (c17-1 / buy-01))
                                    :ARG1 (c17-10 / it)
                                    :ARG2 (c17-14 / combine-01
                                                  :ARG0 c17-2
                                                  :ARG1 c17-10
                                                  :ARG2 (c17-0 / site
                                                               :mod (c17-9 / county)
                                                               :mod (c17-12 / another))
                                                  :purpose (c17-8 / propose-01
                                                                  :ARG0 c17-2
                                                                  :ARG1 (c17-4 / house
                                                                               :ARG1-of (c17-7 / afford-01
                                                                                               :ARG1-of c17-5)))))
                      :polarity -))

# ::snt The law...
# ::tokens ["The", "law", "..."]
# ::lemmas ["the", "law", "..."]
(c18-0 / law)

# ::snt Does she ever smile?
# ::tokens ["Does", "she", "ever", "smile", "?"]
# ::lemmas ["do", "she", "ever", "smile", "?"]
(c20-3 / smile-01
       :polarity (c20-0 / amr-unknown)
       :ARG0 (c20-2 / she)
       :time (c20-1 / ever))

# ::snt FFS!
# ::tokens ["FFS", "!"]
# ::lemmas ["FFS", "!"]
(c21-0 / FFS
       :mode expressive)

# ::snt Well if i ask my husband for a carrot he will buy me a whole bag not just one so whos the lucky one Meeeee
# ::tokens ["Well", "if", "i", "ask", "my", "husband", "for", "a", "carrot", "he", "will", "buy", "me", "a", "whole", "bag", "not", "just", "one", "so", "who", "s", "the", "lucky", "one", "Meeeee"]
# ::lemmas ["well", "if", "i", "ask", "my", "husband", "for", "a", "carrot", "he", "will", "buy", "i", "a", "whole", "bag", "not", "just", "one", "so", "who", "s", "the", "lucky", "one", "Meeeee"]
(c22-14 / and
        :op1 (c22-2 / buy-01
                    :ARG0 (c22-5 / person
                                 :ARG0-of (c22-4 / have-rel-role-91
                                                 :ARG1 (c22-13 / i)
                                                 :ARG2 (c22-11 / husband)))
                    :ARG1 (c22-6 / bag
                                 :mod (c22-9 / whole))
                    :ARG2 c22-13
                    :condition (c22-15 / ask-02
                                       :ARG0 c22-5
                                       :ARG1 (c22-10 / carrot)
                                       :ARG2 c22-13))
        :op2 (c22-17 / buy-01
                     :ARG0 c22-5
                     :ARG1 (c22-1 / bag
                                  :mod (c22-12 / just))
                     :ARG2 c22-13
                     :ARG0-of (c22-16 / cause-01
                                      :ARG1 (c22-7 / whos
                                                   :ARG1 (c22-0 / one
                                                                :mod (c22-8 / lucky))
                                                   :mode expressive))
                     :polarity -)
        :mod (c22-3 / well))

# ::snt Accurate
# ::tokens ["Accurate"]
# ::lemmas ["Accurate"]
(c24-0 / accurate
       :polarity -)

# ::snt That was her meal for the day
# ::tokens ["That", "was", "her", "meal", "for", "the", "day"]
# ::lemmas ["that", "be", "her", "meal", "for", "the", "day"]
(c25-2 / meal
       :poss (c25-3 / she)
       :time (c25-0 / day)
       :domain (c25-1 / that))

# ::snt A carrot a day will keep the fat away
# ::tokens ["A", "carrot", "a", "day", "will", "keep", "the", "fat", "away"]
# ::lemmas ["a", "carrot", "a", "day", "will", "keep", "the", "fat", "away"]
(c26-3 / keep-04
       :ARG0 (c26-4 / carrot
                    :frequency (c26-1 / rate-entity-91
                                      :ARG3 (c26-5 / temporal-quantity
                                                   :unit (c26-6 / day)
                                                   :quant 1)))
       :ARG1 (c26-0 / fat-03)
       :ARG2 (c26-2 / away))

# ::snt This is not news
# ::tokens ["This", "is", "not", "news"]
# ::lemmas ["this", "be", "not", "news"]
(c27-0 / news
       :domain (c27-1 / this)
       :polarity -)

# ::snt I eat heatlhy in a morning too.(1 pear or mango).so what,good for her
# ::tokens ["I", "eat", "heatlhy", "in", "a", "morning", "too.(1", "pear", "or", "mango).so", "what", ",", "good", "for", "her"]
# ::lemmas ["i", "eat", "heatlhy", "in", "a", "morning", "too.(1", "pear", "or", "mango).so", "what", ",", "good", "for", "she"]
(c28-2 / multi-sentence
       :snt1 (c28-4 / eat-01
                    :ARG0 (c28-8 / i)
                    :ARG1 (c28-5 / heatlhy)
                    :time (c28-11 / date-entity
                                  :dayperiod (c28-6 / morning))
                    :mod (c28-9 / too))
       :snt2 (c28-0 / or
                    :op1 (c28-7 / pear
                                :quant 1)
                    :op2 (c28-12 / mango))
       :snt3 (c28-10 / good-04
                     :ARG2 (c28-3 / she)
                     :mod (c28-1 / so)))

# ::snt Dammm!!!! Lol!!!!
# ::tokens ["Dammm", "!", "!", "!", "!", "Lol", "!", "!", "!", "!"]
# ::lemmas ["Dammm", "!", "!", "!", "!", "Lol", "!", "!", "!", "!"]
(c29-3 / and
       :op1 (c29-0 / damn
                   :mode expressive)
       :op2 (c29-2 / laugh-01
                   :manner (c29-1 / loud)
                   :mode expressive))

# ::snt He needs to buy her a cheesesteak!!! She is bonie af!!!
# ::tokens ["He", "needs", "to", "buy", "her", "a", "cheesesteak", "!", "!", "!", "She", "is", "bonie", "af", "!", "!", "!"]
# ::lemmas ["he", "need", "to", "buy", "she", "a", "cheesesteak", "!", "!", "!", "she", "be", "bonie", "af", "!", "!", "!"]
(c30-3 / multi-sentence
       :snt1 (c30-2 / need-01
                    :ARG0 (c30-5 / he)
                    :ARG1 (c30-1 / buy-01
                                 :ARG0 c30-5
                                 :ARG1 (c30-7 / cheesesteak)
                                 :ARG4 (c30-4 / she)))
       :snt2 (c30-6 / bonie-faire
                    :domain (c30-0 / she)
                    :mode expressive))

# ::snt Disturbing
# ::tokens ["Disturbing"]
# ::lemmas ["disturb"]
(c31-0 / disturb-01)

# ::snt Explains her resting, all-the-time, biotch face. Should buy her a burger.
# ::tokens ["Explains", "her", "resting", ",", "all", "-", "the", "-", "time", ",", "biotch", "face", ".", "Should", "buy", "her", "a", "burger", "."]
# ::lemmas ["explain", "her", "resting", ",", "all", "-", "the", "-", "time", ",", "biotch", "face", ".", "should", "buy", "she", "a", "burger", "."]
(c32-3 / multi-sentence
       :snt1 (c32-6 / explain-01
                    :ARG1 (c32-0 / face
                                 :mod (c32-2 / biotch)
                                 :ARG1-of (c32-5 / rest-01
                                                 :time (c32-8 / all))
                                 :poss (c32-4 / she)))
       :snt2 (c32-9 / recommend-01
                    :ARG1 (c32-7 / buy-01
                                 :ARG1 (c32-10 / burger)
                                 :ARG4 (c32-1 / she))))

# ::snt That explains her shape
# ::tokens ["That", "explains", "her", "shape"]
# ::lemmas ["that", "explain", "her", "shape"]
(c33-2 / explain-01
       :ARG0 (c33-3 / that)
       :ARG1 (c33-0 / shape
                    :poss (c33-1 / she)))

# ::snt Umm...
# ::tokens ["Umm", "..."]
# ::lemmas ["Umm", "..."]
(c34-0 / umm)

# ::snt Well its good to see shes eating well
# ::tokens ["Well", "its", "good", "to", "see", "she", "s", "eating", "well"]
# ::lemmas ["well", "its", "good", "to", "see", "she", "s", "eat", "well"]
(c35-5 / good-02
       :ARG1 (c35-1 / see-01
                    :ARG1 (c35-2 / eat-01
                                 :ARG0 (c35-0 / she)
                                 :ARG1-of (c35-4 / well-09)))
       :mod (c35-3 / well))

# ::snt agreed.
# ::tokens ["agreed", "."]
# ::lemmas ["agree", "."]
(c36-0 / agree-01)

# ::snt Using your millions to save and points in case it damages your reputation is not a good look.
# ::tokens ["Using", "your", "millions", "to", "save", "and", "points", "in", "case", "it", "damages", "your", "reputation", "is", "not", "a", "good", "look", "."]
# ::lemmas ["use", "your", "millions", "to", "save", "and", "point", "in", "case", "it", "damage", "your", "reputation", "be", "not", "a", "good", "look", "."]
(c37-5 / look-02
       :ARG1 (c37-11 / use-01
                     :ARG0 (c37-0 / you)
                     :ARG1 (c37-1 / multiple
                                  :op1 (c37-4 / monetary-quantity
                                              :unit (c37-10 / dollar)
                                              :quant 1000000)
                                  :poss c37-0)
                     :ARG2 (c37-8 / and
                                  :op1 (c37-2 / save-01
                                              :ARG0 c37-0)
                                  :op2 (c37-6 / point-04
                                              :ARG0 c37-0))
                     :condition (c37-7 / damages-01
                                       :ARG1 (c37-3 / reputation
                                                    :poss c37-0))
                     :ARG0-of c37-7)
       :ARG1-of (c37-9 / good-02)
       :polarity -)

# ::snt He was never a favourite of mine.
# ::tokens ["He", "was", "never", "a", "favourite", "of", "mine", "."]
# ::lemmas ["he", "be", "never", "a", "favourite", "of", "mine", "."]
(c38-0 / favor-01
       :ARG0 (c38-3 / i)
       :ARG1 (c38-2 / he)
       :time (c38-1 / ever)
       :polarity -)

# ::snt He be cheaper taking the points and fine
# ::tokens ["He", "be", "cheaper", "taking", "the", "points", "and", "fine"]
# ::lemmas ["he", "be", "cheap", "take", "the", "point", "and", "fine"]
(c39-7 / and
       :op1 (c39-4 / cheap-02
                   :ARG1 (c39-2 / he)
                   :ARG2-of (c39-5 / have-degree-91
                                   :ARG1 c39-2
                                   :ARG3 (c39-1 / more))
                   :manner (c39-6 / take-01
                                  :ARG0 c39-2
                                  :ARG1 (c39-3 / point)))
       :op2 (c39-0 / fine-03
                   :ARG1 c39-2))

# ::snt says alot about his morals hey!
# ::tokens ["says", "alot", "about", "his", "morals", "hey", "!"]
# ::lemmas ["say", "alot", "about", "his", "moral", "hey", "!"]
(c40-1 / say-01
       :ARG1 (c40-5 / thing
                    :quant (c40-3 / lot)
                    :topic (c40-0 / moral-02
                                  :ARG1 (c40-2 / he)))
       :mod (c40-4 / hey
                   :mode expressive))

# ::snt Maybe he was afraid he'd lose his halo! Pathetic that having money = getting away with whatever you like! I'm sure that it should be classed as setting a precedent! It should be one rule for all!
# ::tokens ["Maybe", "he", "was", "afraid", "he", "'d", "lose", "his", "halo", "!", "Pathetic", "that", "having", "money", "=", "getting", "away", "with", "whatever", "you", "like", "!", "I", "'m", "sure", "that", "it", "should", "be", "classed", "as", "setting", "a", "precedent", "!", "It", "should", "be", "one", "rule", "for", "all", "!"]
# ::lemmas ["maybe", "he", "be", "afraid", "he", "would", "lose", "his", "halo", "!", "pathetic", "that", "have", "money", "=", "get", "away", "with", "whatever", "you", "like", "!", "i", "be", "sure", "that", "it", "should", "be", "class", "as", "set", "a", "precedent", "!", "it", "should", "be", "one", "rule", "for", "all", "!"]
(c41-14 / multi-sentence
        :snt1 (c41-21 / possible-01
                      :ARG1 (c41-18 / fear-01
                                    :ARG0 (c41-9 / he)
                                    :ARG1 (c41-1 / lose-02
                                                 :ARG0 c41-9
                                                 :ARG1 (c41-23 / halo
                                                               :poss c41-9))))
        :snt2 (c41-15 / pathetic
                      :domain (c41-20 / equal-01
                                      :ARG1 (c41-8 / have-03
                                                   :ARG1 (c41-10 / money))
                                      :ARG2 (c41-12 / get-away-08
                                                    :ARG0 (c41-6 / you)
                                                    :ARG1 (c41-22 / whatever
                                                                  :ARG1-of (c41-13 / like-02
                                                                                   :ARG0 c41-6)))))
        :snt3 (c41-0 / sure-02
                     :ARG0 (c41-24 / i)
                     :ARG1 (c41-19 / recommend-01
                                   :ARG1 (c41-17 / class-01
                                                 :ARG1 (c41-7 / it)
                                                 :ARG2 (c41-5 / set-02
                                                              :ARG0 c41-7
                                                              :ARG1 (c41-3 / precedent)))))
        :snt4 (c41-4 / recommend-01
                     :ARG1 (c41-16 / rule-01
                                   :ARG0 (c41-2 / person
                                                :mod (c41-11 / all))
                                   :ARG1 c41-7
                                   :quant 1)))

# ::snt Exactly Wyatt whats the big deal with this story!?
# ::tokens ["Exactly", "Wyatt", "what", "s", "the", "big", "deal", "with", "this", "story", "!", "?"]
# ::lemmas ["exactly", "Wyatt", "what", "s", "the", "big", "deal", "with", "this", "story", "!", "?"]
(c42-3 / ask-01
       :ARG1 (c42-8 / deal-03
                    :ARG1 (c42-2 / story
                                 :mod (c42-7 / this))
                    :mod (c42-0 / big)
                    :polarity (c42-6 / amr-unknown)
                    :manner (c42-4 / exact))
       :ARG2 (c42-5 / person
                    :name (c42-1 / name
                                 :op1 "Wyatt")))

# ::snt But as a role model and a UNICEF Ambassador he should admit he got away with it on a technicality and do the punishment appropriate for the crime he has admitted to.
# ::tokens ["But", "as", "a", "role", "model", "and", "a", "UNICEF", "Ambassador", "he", "should", "admit", "he", "got", "away", "with", "it", "on", "a", "technicality", "and", "do", "the", "punishment", "appropriate", "for", "the", "crime", "he", "has", "admitted", "to", "."]
# ::lemmas ["but", "as", "a", "role", "model", "and", "a", "UNICEF", "Ambassador", "he", "should", "admit", "he", "get", "away", "with", "it", "on", "a", "technicality", "and", "do", "the", "punishment", "appropriate", "for", "the", "crime", "he", "have", "admit", "to", "."]
(c43-10 / contrast-01
        :ARG2 (c43-13 / recommend-01
                      :ARG1 (c43-7 / and
                                   :op1 (c43-5 / admit-01
                                               :ARG0 (c43-3 / he)
                                               :ARG1 (c43-8 / get-away-08
                                                            :ARG0 c43-3
                                                            :ARG1 (c43-17 / it)
                                                            :ARG1-of (c43-9 / cause-01
                                                                            :ARG0 (c43-6 / technicality))))
                                   :op2 (c43-14 / do-02
                                                :ARG0 c43-3
                                                :ARG1 (c43-15 / punish-01
                                                              :ARG1-of (c43-4 / appropriate-02
                                                                              :ARG2 (c43-0 / crime-02
                                                                                           :ARG1-of (c43-18 / admit-01
                                                                                                            :ARG0 c43-3)))))
                                   :ARG1-of c43-9
                                   :ARG0 (c43-16 / and
                                                 :op1 (c43-1 / role-model
                                                             :domain c43-3)
                                                 :op2 (c43-11 / ambassador
                                                              :mod (c43-2 / organization
                                                                          :name (c43-12 / name
                                                                                        :op1 "UNICEF")))))))

# ::snt He didnt think of that
# ::tokens ["He", "did", "nt", "think", "of", "that"]
# ::lemmas ["he", "do", "not", "think", "of", "that"]
(c44-2 / think-01
       :ARG0 (c44-0 / he)
       :ARG1 (c44-1 / that)
       :polarity -)

# ::snt But I guess we wouldnt be discussing this if he didnt speed in the first place!
# ::tokens ["But", "I", "guess", "we", "would", "nt", "be", "discussing", "this", "if", "he", "did", "nt", "speed", "in", "the", "first", "place", "!"]
# ::lemmas ["but", "i", "guess", "we", "would", "not", "be", "discuss", "this", "if", "he", "do", "not", "speed", "in", "the", "first", "place", "!"]
(c45-3 / contrast-01
       :ARG2 (c45-7 / guess-01
                    :ARG0 (c45-5 / i)
                    :ARG1 (c45-8 / discuss-01
                                 :ARG0 (c45-4 / we)
                                 :ARG1 (c45-6 / this)
                                 :condition (c45-0 / speed-01
                                                   :ARG0 (c45-2 / he)
                                                   :mod (c45-1 / in-the-first-place)
                                                   :polarity -)
                                 :polarity -)))

# ::snt The law is the law! It has to have limits and guidelines or what's the point? If the prosecuting party can't get their admin in order in a timely manner then that's on them.....not the alleged offender.
# ::tokens ["The", "law", "is", "the", "law", "!", "It", "has", "to", "have", "limits", "and", "guidelines", "or", "what", "'s", "the", "point", "?", "If", "the", "prosecuting", "party", "ca", "n't", "get", "their", "admin", "in", "order", "in", "a", "timely", "manner", "then", "that", "'s", "on", "them", ".....", "not", "the", "alleged", "offender", "."]
# ::lemmas ["the", "law", "be", "the", "law", "!", "it", "have", "to", "have", "limit", "and", "guideline", "or", "what", "be", "the", "point", "?", "if", "the", "prosecute", "party", "can", "not", "get", "their", "admin", "in", "order", "in", "a", "timely", "manner", "then", "that", "be", "on", "they", ".....", "not", "the", "alleged", "offender", "."]
(c46-16 / multi-sentence
        :snt1 (c46-0 / law
                     :domain (c46-13 / law))
        :snt2 (c46-5 / or
                     :op1 (c46-15 / obligate-01
                                  :ARG2 (c46-6 / have-03
                                               :ARG0 (c46-24 / it)
                                               :ARG1 (c46-11 / and
                                                             :op1 (c46-7 / limit-01)
                                                             :op2 (c46-12 / guideline))))
                     :op2 (c46-23 / point-03
                                  :ARG1 c46-24
                                  :ARG2 (c46-9 / amr-unknown)))
        :snt3 (c46-19 / contrast-01
                      :ARG1 (c46-26 / on-01
                                    :ARG1 (c46-10 / they)
                                    :condition (c46-17 / possible-01
                                                       :ARG1 (c46-2 / get-04
                                                                    :ARG0 (c46-3 / party
                                                                                 :ARG0-of (c46-1 / prosecute-01))
                                                                    :ARG1 (c46-21 / order-03
                                                                                  :ARG1 (c46-4 / government-organization
                                                                                               :ARG0-of (c46-8 / administrate-01)
                                                                                               :poss c46-3)
                                                                                  :ARG1-of (c46-20 / timely-03)))
                                                       :polarity -))
                      :ARG2 (c46-22 / on-01
                                    :ARG1 (c46-14 / person
                                                  :ARG0-of (c46-18 / offend-01
                                                                   :ARG1-of (c46-25 / allege-01)))
                                    :condition c46-17
                                    :polarity -)))

# ::snt Yes but he was speeding and he should have to account for that. I dont understand how a late arriving notice can mean there is no case to answer. The law is an ass in this situation
# ::tokens ["Yes", "but", "he", "was", "speeding", "and", "he", "should", "have", "to", "account", "for", "that", ".", "I", "do", "nt", "understand", "how", "a", "late", "arriving", "notice", "can", "mean", "there", "is", "no", "case", "to", "answer", ".", "The", "law", "is", "an", "ass", "in", "this", "situation"]
# ::lemmas ["yes", "but", "he", "be", "speed", "and", "he", "should", "have", "to", "account", "for", "that", ".", "i", "do", "not", "understand", "how", "a", "late", "arrive", "notice", "can", "mean", "there", "be", "no", "case", "to", "answer", ".", "the", "law", "be", "an", "ass", "in", "this", "situation"]
(c47-12 / multi-sentence
        :snt1 (c47-13 / contrast-01
                      :ARG2 (c47-9 / and
                                   :op1 (c47-0 / speed-01
                                               :ARG1 (c47-4 / he))
                                   :op2 (c47-2 / obligate-01
                                               :ARG1 c47-4
                                               :ARG2 (c47-7 / account-01
                                                            :ARG0 c47-4
                                                            :ARG1 c47-0))))
        :snt2 (c47-15 / understand-01
                      :ARG0 (c47-19 / i)
                      :ARG1 (c47-8 / thing
                                   :manner-of (c47-17 / possible-01
                                                      :ARG1 (c47-5 / mean-01
                                                                   :ARG1 (c47-16 / notice-03
                                                                                 :ARG1 (c47-1 / late)
                                                                                 :ARG1-of (c47-6 / arrive-01))
                                                                   :ARG2 (c47-11 / case-03
                                                                                 :ARG1-of (c47-20 / answer-01)
                                                                                 :polarity -))))
                      :polarity -)
        :snt3 (c47-18 / ass
                      :domain (c47-10 / law)
                      :topic (c47-3 / situation
                                    :mod (c47-14 / this))))

# ::snt But it doesnt make it right.The law DOES need to be changed.Why did he involved mr loophole if he knew he was speeding?Shirking smirking eejit.
# ::tokens ["But", "it", "does", "nt", "make", "it", "right", ".", "The", "law", "DOES", "need", "to", "be", "changed", ".", "Why", "did", "he", "involved", "mr", "loophole", "if", "he", "knew", "he", "was", "speeding?Shirking", "smirking", "eejit", "."]
# ::lemmas ["but", "it", "do", "not", "make", "it", "right", ".", "the", "law", "do", "need", "to", "be", "change", ".", "why", "do", "he", "involve", "mr", "loophole", "if", "he", "know", "he", "be", "speeding?shirke", "smirk", "eejit", "."]
(c48-13 / multi-sentence
        :snt1 (c48-14 / contrast-01
                      :ARG2 (c48-7 / make-02
                                   :ARG0 (c48-18 / it)
                                   :ARG1 (c48-16 / right-02
                                                 :ARG1 c48-18)
                                   :polarity -))
        :snt2 (c48-4 / obligate-01
                     :ARG2 (c48-12 / change-01
                                   :ARG1 (c48-1 / law)))
        :snt3 (c48-6 / involve-01
                     :ARG0 (c48-8 / he)
                     :ARG1 (c48-11 / loophole
                                   :mod (c48-17 / person
                                                :name (c48-15 / name
                                                              :op1 "Mr."
                                                              :op2 "L loophole")))
                     :ARG1-of (c48-2 / cause-01
                                     :ARG0 (c48-10 / amr-unknown))
                     :condition (c48-9 / know-01
                                       :ARG0 c48-8
                                       :ARG1 (c48-0 / speed-01
                                                    :ARG1 c48-17))
                     :snt4 (c48-5 / say-01
                                  :ARG1 (c48-3 / shirking)
                                  :ARG2 c48-17
                                  :name c48-15
                                  :op1 "eejit")))

# ::snt Which was his real mistake...admitting it. He didn't need to as it was irrelevant to the fact the notice of intended prosecution had timed out so a court case wouldn't be happening...
# ::tokens ["Which", "was", "his", "real", "mistake", "...", "admitting", "it", ".", "He", "did", "n't", "need", "to", "as", "it", "was", "irrelevant", "to", "the", "fact", "the", "notice", "of", "intended", "prosecution", "had", "timed", "out", "so", "a", "court", "case", "would", "n't", "be", "happening", "..."]
# ::lemmas ["which", "be", "his", "real", "mistake", "...", "admit", "it", ".", "he", "do", "not", "need", "to", "as", "it", "be", "irrelevant", "to", "the", "fact", "the", "notice", "of", "intend", "prosecution", "have", "time", "out", "so", "a", "court", "case", "would", "not", "be", "happen", "..."]
(c49-0 / multi-sentence
       :snt1 (c49-4 / mistake-02
                    :ARG0 (c49-5 / he)
                    :ARG1 (c49-12 / admit-01
                                  :ARG0 c49-5
                                  :ARG1 (c49-11 / it))
                    :ARG1-of (c49-3 / real-04))
       :snt2 (c49-1 / need-01
                    :ARG0 (c49-9 / he)
                    :ARG1 c49-12
                    :ARG1-of (c49-8 / cause-01
                                    :ARG0 (c49-14 / relevant-01
                                                  :ARG1 (c49-6 / notice-01
                                                               :ARG1 (c49-7 / prosecute-01
                                                                            :ARG1-of (c49-2 / intend-01)))
                                                  :ARG2 (c49-10 / time-out-03
                                                                :ARG1 (c49-15 / case-03
                                                                              :ARG0 (c49-13 / court)))
                                                  :polarity -))
                    :polarity -))

# ::snt Just man up and pay the fine like ordinary people.He admitted speeding.
# ::tokens ["Just", "man", "up", "and", "pay", "the", "fine", "like", "ordinary", "people", ".", "He", "admitted", "speeding", "."]
# ::lemmas ["just", "man", "up", "and", "pay", "the", "fine", "like", "ordinary", "people", ".", "he", "admit", "speeding", "."]
(c50-3 / multi-sentence
       :snt1 (c50-12 / and
                     :op1 (c50-7 / man-up-00
                                 :ARG0 (c50-2 / you)
                                 :mod (c50-10 / just)
                                 :mode imperative)
                     :op2 (c50-8 / pay-01
                                 :ARG0 c50-2
                                 :ARG1 (c50-0 / fine-01)
                                 :mode imperative)
                     :ARG1-of (c50-6 / resemble-01
                                     :ARG2 (c50-4 / person
                                                  :mod (c50-1 / ordinary))))
       :snt2 (c50-11 / admit-01
                     :ARG0 (c50-9 / he)
                     :ARG1 (c50-5 / speed-01
                                  :ARG1 c50-9)))
