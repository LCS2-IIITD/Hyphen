# ::snt whats up with Chris Brown
# ::tokens ["what", "s", "up", "with", "Chris", "Brown"]
# ::lemmas ["what", "s", "up", "with", "Chris", "Brown"]
(c1-0 / whats-up-04
      :ARG1 (c1-2 / person
                  :name (c1-1 / name
                              :op1 "Chris"
                              :op2 "Brown")))

# ::snt its always a great honor
# ::tokens ["its", "always", "a", "great", "honor"]
# ::lemmas ["its", "always", "a", "great", "honor"]
(c2-1 / honor-01
      :mod (c2-0 / great)
      :time (c2-2 / always))

# ::snt GET NEW LOVE VIBES: ME &amp; YOU BY XMAN
# ::tokens ["GET", "NEW", "LOVE", "VIBES", ":", "ME", "&", "amp", ";", "YOU", "BY", "XMAN"]
# ::lemmas ["get", "new", "love", "vibes", ":", "ME", "&", "amp", ";", "you", "by", "XMAN"]
(c3-3 / say-01
      :ARG0 (c3-9 / i)
      :ARG1 (c3-11 / get-01
                   :ARG0 (c3-0 / you)
                   :ARG1 (c3-6 / love-01
                               :ARG1-of (c3-1 / new-01)
                               :ARG1-of (c3-2 / mean-01
                                              :ARG2 (c3-10 / and
                                                           :op1 c3-9
                                                           :op2 (c3-7 / person
                                                                      :name (c3-5 / name
                                                                                  :op1 "amp")))))
                   :mode imperative)
      :ARG2 (c3-4 / person
                  :name (c3-8 / name
                              :op1 "XMAN")))

# ::snt this why i fw chris brown cause he % nigha
# ::tokens ["this", "why", "i", "fw", "chris", "brown", "cause", "he", "%", "nigha"]
# ::lemmas ["this", "why", "i", "fw", "chris", "brown", "cause", "he", "%", "nigha"]
(c4-4 / cause-01
      :ARG0 (c4-6 / this)
      :ARG1 (c4-3 / know-01
                  :ARG0 (c4-5 / i)
                  :ARG1 (c4-2 / person
                              :name (c4-0 / name
                                          :op1 "Chris"
                                          :op2 "Brown"))
                  :ARG1-of (c4-7 / cause-01
                                 :ARG0 (c4-1 / percentage-entity
                                             :value "nigha"))))

# ::snt &amp; both in luv with
# ::tokens ["&", "amp", ";", "both", "in", "luv", "with"]
# ::lemmas ["&", "amp", ";", "both", "in", "luv", "with"]
(c5-4 / and
      :op1 (c5-3 / and
                 :op2 (c5-2 / amp))
      :op2 (c5-0 / be-located-at-91
                 :ARG1 (c5-1 / both)
                 :ARG2 (c5-5 / uv-01)))

# ::snt Download For Free Available On google Play &amp; App Store!
# ::tokens ["Download", "For", "Free", "Available", "On", "google", "Play", "&", "amp", ";", "App", "Store", "!"]
# ::lemmas ["Download", "For", "Free", "Available", "on", "google", "Play", "&", "amp", ";", "App", "Store", "!"]
(c6-5 / available-02
      :ARG2 (c6-6 / download-01
                  :ARG1-of (c6-0 / free-03))
      :medium (c6-4 / and
                    :op1 (c6-3 / company
                               :name (c6-1 / name
                                           :op1 "Google"
                                           :op2 "Play"
                                           :op3 "&"
                                           :op4 "amp"))
                    :op2 (c6-7 / company
                               :name (c6-2 / name
                                           :op1 "App"
                                           :op2 "Store"))))

# ::snt just count up STD's and the one with the most is the loser.
# ::tokens ["just", "count", "up", "STD", "'s", "and", "the", "one", "with", "the", "most", "is", "the", "loser", "."]
# ::lemmas ["just", "count", "up", "STD", "'s", "and", "the", "one", "with", "the", "most", "be", "the", "loser", "."]
(c7-7 / and
      :op1 (c7-5 / count-up-04
                 :ARG1 (c7-8 / disease
                             :name (c7-1 / name
                                         :op1 "STD"))
                 :mod (c7-6 / just))
      :op2 (c7-4 / lose-03
                 :ARG0 (c7-0 / one
                             :ARG1-of (c7-3 / have-quant-91
                                            :ARG3 (c7-2 / most)))))

# ::snt aka nmkjgfsetyuu since I have no idea what you're talking about
# ::tokens ["aka", "nmkjgfsetyuu", "since", "I", "have", "no", "idea", "what", "you", "'re", "talking", "about"]
# ::lemmas ["aka", "nmkjgfsetyuu", "since", "i", "have", "no", "idea", "what", "you", "be", "talk", "about"]
(c8-4 / cause-01
      :ARG0 (c8-3 / have-03
                  :ARG0 (c8-5 / i)
                  :ARG1 (c8-2 / idea
                              :topic (c8-6 / thing
                                           :ARG1-of (c8-7 / talk-01
                                                          :ARG0 (c8-0 / you))
                                           :ARG1-of c8-4))
                  :polarity -)
      :name (c8-1 / name
                  :op1 "nmkjgfsetyuu"))

# ::snt Can't they just share her?
# ::tokens ["Ca", "n't", "they", "just", "share", "her", "?"]
# ::lemmas ["can", "not", "they", "just", "share", "she", "?"]
(c9-3 / possible-01
      :ARG1 (c9-1 / share-01
                  :ARG0 (c9-5 / they)
                  :ARG1 (c9-0 / she)
                  :mod (c9-4 / just))
      :polarity (c9-2 / amr-unknown)
      :polarity -)

# ::snt she's pretty
# ::tokens ["she", "'s", "pretty"]
# ::lemmas ["she", "be", "pretty"]
(c10-0 / pretty
       :domain (c10-1 / she))

# ::snt all of them together weight under lbs
# ::tokens ["all", "of", "them", "together", "weight", "under", "lbs"]
# ::lemmas ["all", "of", "they", "together", "weight", "under", "lb"]
(c11-2 / weight-01
       :ARG1 (c11-3 / they
                    :mod (c11-4 / all))
       :ARG2 (c11-5 / under
                    :op1 (c11-0 / mass-quantity
                                :unit (c11-1 / pound)
                                :quant 1))
       :mod (c11-6 / together))
