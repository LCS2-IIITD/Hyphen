# ::snt The show had lasted episodes over six seasons. It had been nominated for Teen Choice Awards, winning five.
# ::tokens ["The", "show", "had", "lasted", "episodes", "over", "six", "seasons", ".", "It", "had", "been", "nominated", "for", "Teen", "Choice", "Awards", ",", "winning", "five", "."]
# ::lemmas ["the", "show", "have", "last", "episode", "over", "six", "seasons", ".", "it", "have", "be", "nominate", "for", "Teen", "Choice", "Awards", ",", "win", "five", "."]
(c1-1 / multi-sentence
      :snt1 (c1-7 / last-01
                  :ARG1 (c1-3 / show)
                  :ARG2 (c1-5 / episode)
                  :duration (c1-10 / temporal-quantity
                                   :unit (c1-0 / season)
                                   :quant 6))
      :snt2 (c1-2 / nominate-01
                  :ARG1 (c1-9 / it)
                  :ARG2 (c1-4 / award
                              :name (c1-6 / name
                                          :op1 "Teen"
                                          :op2 "Ch Choice"
                                          :op3 "Awards"))
                  :manner (c1-8 / win-01
                                :ARG0 c1-9
                                :ARG1 (c1-11 / thing
                                             :quant 5))))

# ::snt Time flashes forward in the two-hour series finale. Michelle Williams character dies and Dawson goes on to make a TV show called The Creek.
# ::tokens ["Time", "flashes", "forward", "in", "the", "two", "-", "hour", "series", "finale", ".", "Michelle", "Williams", "character", "dies", "and", "Dawson", "goes", "on", "to", "make", "a", "TV", "show", "called", "The", "Creek", "."]
# ::lemmas ["time", "flash", "forward", "in", "the", "two", "-", "hour", "series", "finale", ".", "Michelle", "Williams", "character", "die", "and", "Dawson", "go", "on", "to", "make", "a", "tv", "show", "call", "the", "Creek", "."]
(c2-7 / multi-sentence
      :snt1 (c2-12 / flash-01
                   :ARG1 (c2-5 / time)
                   :direction (c2-15 / forward)
                   :time (c2-16 / final
                                :op1 (c2-0 / series)
                                :duration (c2-11 / temporal-quantity
                                                 :unit (c2-2 / hour)
                                                 :quant 2)))
      :snt2 (c2-4 / and
                  :op1 (c2-19 / die-01
                              :ARG1 (c2-10 / character
                                           :poss (c2-14 / person
                                                        :name (c2-13 / name
                                                                     :op1 "Michelle"
                                                                     :op2 "Williams"))))
                  :op2 (c2-6 / go-on-15
                             :ARG1 (c2-3 / make-01
                                         :ARG0 (c2-8 / person
                                                     :name (c2-9 / name
                                                                 :op1 "Dawson"))
                                         :ARG1 (c2-1 / show
                                                     :name (c2-17 / name
                                                                  :op1 "The"
                                                                  :op2 "Creek")
                                                     :medium (c2-18 / television))))))

# ::snt You da bomb dot com for finding this
# ::tokens ["You", "da", "bomb", "dot", "com", "for", "finding", "this"]
# ::lemmas ["you", "da", "bomb", "dot", "com", "for", "find", "this"]
(c4-3 / say-01
      :ARG0 (c4-5 / i)
      :ARG1 (c4-4 / cause-01
                  :ARG0 (c4-7 / dot-com
                              :mod (c4-1 / bomb))
                  :ARG1 (c4-0 / find-01
                              :ARG0 (c4-2 / you)
                              :ARG1 (c4-6 / this)))
      :ARG2 c4-2)

# ::snt Uhmmmm, years?!
# ::tokens ["Uhmmmm", ",", "years", "?", "!"]
# ::lemmas ["Uhmmmm", ",", "years", "?", "!"]
(c5-2 / multiple
      :op1 (c5-3 / temporal-quantity
                 :unit (c5-1 / year)
                 :quant 1)
      :mod (c5-0 / uhm
                 :mode expressive))

# ::snt The best
# ::tokens ["The", "best"]
# ::lemmas ["the", "good"]
(c6-3 / thing
      :ARG1-of (c6-1 / have-degree-91
                     :ARG2 (c6-0 / good-02)
                     :ARG3 (c6-2 / most)))

# ::snt Min ada lowongan?
# ::tokens ["Min", "ada", "lowongan", "?"]
# ::lemmas ["Min", "ada", "lowongan", "?"]
(c7-1 / person
      :polarity (c7-3 / amr-unknown)
      :name (c7-0 / name
                  :op1 "Min")
      :mod (c7-2 / lowongan))

# ::snt Let's hope not. Let's hope not.
# ::tokens ["Let", "'s", "hope", "not", ".", "Let", "'s", "hope", "not", "."]
# ::lemmas ["let", "us", "hope", "not", ".", "let", "us", "hope", "not", "."]
(c8-0 / multi-sentence
      :snt1 (c8-1 / hope-01
                  :ARG0 (c8-3 / we)
                  :ARG1 (c8-5 / thing
                              :polarity -)
                  :mode imperative)
      :snt2 (c8-4 / hope-01
                  :ARG0 (c8-2 / we)
                  :ARG1 (c8-6 / thing
                              :polarity -)
                  :mode imperative))

# ::snt Those people don't actually exist do they?
# ::tokens ["Those", "people", "do", "n't", "actually", "exist", "do", "they", "?"]
# ::lemmas ["those", "people", "do", "not", "actually", "exist", "do", "they", "?"]
(c9-1 / exist-01
      :ARG1 (c9-2 / person
                  :mod (c9-3 / that))
      :ARG1-of (c9-4 / actual-02)
      :ARG1-of (c9-0 / request-confirmation-91)
      :polarity -)

# ::snt They're all Dawson-Joey shippers, the bastards.
# ::tokens ["They", "'re", "all", "Dawson", "-", "Joey", "shippers", ",", "the", "bastards", "."]
# ::lemmas ["they", "be", "all", "Dawson", "-", "Joey", "shipper", ",", "the", "bastard", "."]
(c10-3 / say-01
       :ARG0 (c10-6 / i)
       :ARG1 (c10-0 / shippers
                    :domain (c10-5 / they
                                   :mod (c10-7 / all))
                    :mod (c10-4 / person
                                :name (c10-2 / name
                                             :op1 "Dawson-Joey")))
       :ARG2 (c10-1 / bastard))

# ::snt ele terminou o namoro? Eram lindos juntos em Dawsons creek
# ::tokens ["ele", "terminou", "o", "namoro", "?", "Eram", "lindos", "juntos", "em", "Dawsons", "creek"]
# ::lemmas ["ele", "terminou", "o", "namoro", "?", "eram", "lindo", "junto", "em", "dawson", "creek"]
(c11-2 / multi-sentence
       :snt1 (c11-0 / be-temporally-at-91
                    :ARG1 (c11-8 / amr-unintelligible
                                 :value "ele")
                    :ARG2 (c11-1 / namoro))
       :snt2 (c11-3 / mean-01
                    :ARG1 (c11-7 / amr-unintelligible
                                 :ARG1-of c11-3
                                 :ARG2 (c11-6 / juntos
                                              :domain (c11-9 / they))
                                 :value "Lindos"))
       :ARG2 (c11-5 / creek
                    :name (c11-4 / name
                                 :op1 "Dawsons"
                                 :op2 " creek")))

# ::snt Cute
# ::tokens ["Cute"]
# ::lemmas ["cute"]
(c12-0 / cute)

# ::snt hi are you there
# ::tokens ["hi", "are", "you", "there"]
# ::lemmas ["hi", "be", "you", "there"]
(c13-0 / be-located-at-91
       :ARG1 (c13-1 / you)
       :ARG2 (c13-2 / there)
       :mode expressive)

# ::snt I'm officially old... lol
# ::tokens ["I", "'m", "officially", "old", "...", "lol"]
# ::lemmas ["i", "be", "officially", "old", "...", "lol"]
(c15-1 / old
       :domain (c15-3 / i)
       :mod (c15-0 / official)
       :ARG2-of (c15-2 / laugh-01
                       :ARG0 c15-3
                       :manner (c15-4 / loud)
                       :mode expressive))

# ::snt another/latest STRAINED relationship (April , ; :35 PDT)
# ::tokens ["another", "/", "latest", "STRAINED", "relationship", "(", "April", ",", ";", ":", "35", "PDT", ")"]
# ::lemmas ["another", "/", "late", "STRAINED", "relationship", "(", "April", ",", ";", ":", "35", "PDT", ")"]
(c16-2 / relation-03
       :ARG1 (c16-1 / slash
                    :op1 (c16-4 / another)
                    :op2 (c16-3 / last))
       :ARG1-of (c16-0 / strike-01)
       :time (c16-5 / date-entity
                    :month 4
                    :time ":35"
                    :timezone "PST"))

# ::snt hashtag TWO talking to the guy who ISN'T a hashtag &amp; hashtag THREE "DOENS'T like it"...,AS EXPECTED (April , ; :35 PDT)
# ::tokens ["hashtag", "TWO", "talking", "to", "the", "guy", "who", "ISN'T", "a", "hashtag", "&", "amp", ";", "hashtag", "THREE", "\"", "DOENS'T", "like", "it\"", "...", ",AS", "EXPECTED", "(", "April", ",", ";", ":", "35", "PDT", ")"]
# ::lemmas ["hashtag", "TWO", "talk", "to", "the", "guy", "who", "isn't", "a", "hashtag", "&", "amp", ";", "hashtag", "THREE", "\"", "DOENS'T", "like", "it\"", "...", ",as", "EXPECTED", "(", "April", ",", ";", ":", "35", "PDT", ")"]
(c17-0 / multi-sentence
       :snt1 (c17-4 / hashtag-01
                    :ARG2 (c17-8 / talk-01
                                 :ARG0 (c17-5 / person
                                              :quant 2)
                                 :ARG2 (c17-9 / guy
                                              :mod (c17-1 / and
                                                          :op1 (c17-7 / hashtag
                                                                      :polarity -)
                                                          :op2 (c17-3 / hashtag
                                                                      :polarity -))))
                    :snt2 (c17-6 / expect-01
                                 :ARG1 (c17-10 / event
                                               :time (c17-2 / date-entity
                                                            :month 4
                                                            :time ":35"
                                                            :timezone "PST")))))

# ::snt Update: CELEBRITY INSIDER: (NOT trending) (April , ; :35 PDT)
# ::tokens ["Update", ":", "CELEBRITY", "INSIDER", ":", "(", "NOT", "trending", ")", "(", "April", ",", ";", ":", "35", "PDT", ")"]
# ::lemmas ["update", ":", "celebrity", "insider", ":", "(", "not", "trend", ")", "(", "April", ",", ";", ":", "35", "PDT", ")"]
(c18-5 / update-02
       :ARG2 (c18-2 / publication
                    :name (c18-0 / name
                                 :op1 "CELEBRITY"
                                 :op2 " INSIDER")
                    :ARG0-of (c18-1 / say-01
                                    :ARG1 (c18-3 / trending
                                                 :polarity -)
                                    :time (c18-4 / date-entity
                                                 :month 4
                                                 :time ":35"
                                                 :timezone "PST"))))

# ::snt Me and Bridget literally just made that connection too!
# ::tokens ["Me", "and", "Bridget", "literally", "just", "made", "that", "connection", "too", "!"]
# ::lemmas ["i", "and", "Bridget", "literally", "just", "make", "that", "connection", "too", "!"]
(c19-3 / connect-01
       :ARG0 (c19-6 / and
                    :op1 (c19-5 / i)
                    :op2 (c19-1 / person
                                :name (c19-0 / name
                                             :op1 "Bridget")))
       :ARG1 (c19-4 / that)
       :mod (c19-7 / just)
       :mod (c19-2 / literal)
       :mod (c19-8 / too))

# ::snt I wonder if they are still close. That hug had a sweet affection
# ::tokens ["I", "wonder", "if", "they", "are", "still", "close", ".", "That", "hug", "had", "a", "sweet", "affection"]
# ::lemmas ["i", "wonder", "if", "they", "be", "still", "close", ".", "that", "hug", "have", "a", "sweet", "affection"]
(c20-1 / multi-sentence
       :snt1 (c20-5 / wonder-01
                    :ARG0 (c20-7 / i)
                    :ARG1 (c20-8 / truth-value
                                 :polarity-of (c20-6 / close-13
                                                     :ARG1 (c20-10 / they)
                                                     :mod (c20-2 / still))))
       :snt2 (c20-3 / affection
                    :ARG1-of (c20-0 / sweet-02)
                    :domain (c20-4 / hug-01
                                   :mod (c20-9 / that))))

# ::snt You see they stressed "very" !
# ::tokens ["You", "see", "they", "stressed", "\"", "very", "\"", "!"]
# ::lemmas ["you", "see", "they", "stress", "\"", "very", "\"", "!"]
(c21-2 / see-01
       :ARG0 (c21-1 / you)
       :ARG1 (c21-0 / stress-01
                    :ARG0 (c21-4 / they)
                    :degree (c21-3 / very)))

# ::snt What does Jamie Foxx have to say about this?!
# ::tokens ["What", "does", "Jamie", "Foxx", "have", "to", "say", "about", "this", "?", "!"]
# ::lemmas ["what", "do", "Jamie", "Foxx", "have", "to", "say", "about", "this", "?", "!"]
(c22-1 / say-01
       :ARG0 (c22-2 / person
                    :name (c22-0 / name
                                 :op1 "Jamie"
                                 :op2 "Foxx"))
       :ARG1 (c22-4 / amr-unknown)
       :ARG3 (c22-3 / this))

# ::snt : 'Coppie nella realt' pt.5Joshua Jackson&amp;Katie Holmes (Dawson's Creek) non ci credo
# ::tokens [":", "'", "Coppie", "nella", "realt", "'", "pt.5Joshua", "Jackson&amp;Katie", "Holmes", "(", "Dawson", "'s", "Creek", ")", "non", "ci", "credo"]
# ::lemmas [":", "'", "Coppie", "nella", "realt", "'", "pt.5Joshua", "Jackson&amp;Katie", "Holmes", "(", "Dawson", "'s", "Creek", ")", "non", "ci", "credo"]
(c23-3 / and
       :op1 (c23-5 / publication
                   :ARG1-of (c23-10 / title-01
                                    :ARG2 (c23-0 / book
                                                 :name (c23-1 / name
                                                              :op1 "Coppie"
                                                              :op2 "nella"
                                                              :op3 "Realt")))
                   :mod 5)
       :op2 (c23-2 / person
                   :name (c23-4 / name
                                :op1 "Joshua"
                                :op2 "Jackson"))
       :op3 (c23-11 / person
                    :name (c23-6 / name
                                 :op1 "Katie"
                                 :op2 "Holmes")
                    :location (c23-7 / location
                                     :name (c23-9 / name
                                                  :op1 "Dawson's"
                                                  :op2 "Creek")))
       :op4 (c23-8 / credo
                   :mod (c23-12 / ci)
                   :polarity -))

# ::snt : 'Coppie nella realt' pt.5Joshua Jackson&amp;Katie Holmes (Dawson's Creek)
# ::tokens [":", "'", "Coppie", "nella", "realt", "'", "pt.5Joshua", "Jackson&amp;Katie", "Holmes", "(", "Dawson", "'s", "Creek", ")"]
# ::lemmas [":", "'", "Coppie", "nella", "realt", "'", "pt.5Joshua", "Jackson&amp;Katie", "Holmes", "(", "Dawson", "'s", "Creek", ")"]
(c24-9 / and
       :op1 (c24-4 / publication
                   :ARG1-of (c24-2 / sign-01
                                   :ARG2 (c24-1 / person
                                                :name (c24-0 / name
                                                             :op1 "Coppie"
                                                             :op2 "nella"
                                                             :op3 "Realt")))
                   :mod 5)
       :op2 (c24-10 / person
                    :name (c24-3 / name
                                 :op1 "Joshua"
                                 :op2 "Jackson"))
       :op3 (c24-7 / person
                   :name (c24-5 / name
                                :op1 "Katie"
                                :op2 "Holmes")
                   :location (c24-6 / location
                                    :name (c24-8 / name
                                                 :op1 "Dawson's"
                                                 :op2 "Creek"))))

# ::snt Dawsons dad still way less annoying than Dawson.
# ::tokens ["Dawsons", "dad", "still", "way", "less", "annoying", "than", "Dawson", "."]
# ::lemmas ["dawson", "dad", "still", "way", "less", "annoying", "than", "Dawson", "."]
(c25-3 / have-degree-91
       :ARG1 (c25-4 / person
                    :ARG0-of (c25-7 / have-rel-role-91
                                    :ARG1 (c25-1 / person
                                                 :name (c25-0 / name
                                                              :op1 "Dawsons"))
                                    :ARG2 (c25-9 / dad)))
       :ARG2 (c25-8 / annoy-01
                    :ARG0 c25-4)
       :ARG3 (c25-5 / less
                    :quant (c25-6 / way))
       :ARG4 c25-1
       :mod (c25-2 / still))

# ::snt Dawson's dad is, as Leibniz might have put it, the daddest of all possible Dads.
# ::tokens ["Dawson", "'s", "dad", "is", ",", "as", "Leibniz", "might", "have", "put", "it", ",", "the", "daddest", "of", "all", "possible", "Dads", "."]
# ::lemmas ["Dawson", "'s", "dad", "be", ",", "as", "Leibniz", "might", "have", "put", "it", ",", "the", "daddest", "of", "all", "possible", "Dads", "."]
(c26-3 / have-degree-91
       :ARG1 (c26-4 / person
                    :ARG0-of (c26-8 / have-rel-role-91
                                    :ARG1 (c26-1 / person
                                                 :name (c26-0 / name
                                                              :op1 "Dawson"))
                                    :ARG2 (c26-11 / dad)))
       :ARG2 (c26-7 / daddest)
       :ARG3 (c26-2 / most)
       :ARG5 c26-11
       :ARG1-of (c26-10 / possible-01)
       :ARG1-of (c26-6 / put-02
                       :ARG0 (c26-9 / person
                                    :name (c26-5 / name
                                                 :op1 "Leibniz"))
                       :ARG1-of (c26-12 / possible-01)))

# ::snt I still think Joey should have gone to France.
# ::tokens ["I", "still", "think", "Joey", "should", "have", "gone", "to", "France", "."]
# ::lemmas ["i", "still", "think", "Joey", "should", "have", "go", "to", "France", "."]
(c27-7 / think-01
       :ARG0 (c27-6 / i)
       :ARG1 (c27-2 / recommend-01
                    :ARG1 (c27-8 / go-02
                                 :ARG0 (c27-4 / person
                                              :name (c27-0 / name
                                                           :op1 "Joey"))
                                 :ARG4 (c27-5 / country
                                              :name (c27-3 / name
                                                           :op1 "France"))))
       :mod (c27-1 / still))

# ::snt still last: Dawson's dad
# ::tokens ["still", "last", ":", "Dawson", "'s", "dad"]
# ::lemmas ["still", "last", ":", "Dawson", "'s", "dad"]
(c28-5 / person
       :ARG0-of (c28-4 / have-rel-role-91
                       :ARG1 (c28-2 / person
                                    :name (c28-1 / name
                                                 :op1 "Dawson"))
                       :ARG2 (c28-6 / dad))
       :ord (c28-0 / ordinal-entity
                   :mod (c28-3 / still)
                   :value "-1"))

# ::snt and a rd for disrespecting The Beek!!
# ::tokens ["and", "a", "rd", "for", "disrespecting", "The", "Beek", "!", "!"]
# ::lemmas ["and", "a", "rd", "for", "disrespect", "the", "Beek", "!", "!"]
(c30-3 / and
       :op2 (c30-1 / rant-01
                   :ARG3 (c30-4 / disrespect-01
                                :ARG1 (c30-2 / person
                                             :name (c30-0 / name
                                                          :op1 "The"
                                                          :op2 "Beek")))))

# ::snt for the tweet and for replying to his own tweet
# ::tokens ["for", "the", "tweet", "and", "for", "replying", "to", "his", "own", "tweet"]
# ::lemmas ["for", "the", "tweet", "and", "for", "reply", "to", "his", "own", "tweet"]
(c31-2 / have-purpose-91
       :ARG2 (c31-0 / and
                    :op1 (c31-4 / thing
                                :ARG1-of (c31-5 / tweet-02
                                                :ARG0 (c31-3 / he)))
                    :op2 (c31-1 / reply-01
                                :ARG0 c31-3
                                :ARG1 c31-4)))

# ::snt Definitive ranking of Dawson's Creek characters after two episodes:1) Joey2) Pacey3) Jen4) Dawson
# ::tokens ["Definitive", "ranking", "of", "Dawson", "'s", "Creek", "characters", "after", "two", "episodes:1", ")", "Joey2", ")", "Pacey3", ")", "Jen4", ")", "Dawson"]
# ::lemmas ["Definitive", "ranking", "of", "Dawson", "'s", "Creek", "character", "after", "two", "episodes:1", ")", "joey2", ")", "Pacey3", ")", "Jen4", ")", "Dawson"]
(c32-3 / rank-01
       :ARG1 (c32-8 / character
                    :poss (c32-2 / show
                                 :name (c32-0 / name
                                              :op1 "Dawson's"
                                              :op2 "Creek")))
       :ARG2 (c32-13 / and
                     :op1 (c32-6 / person
                                 :name (c32-5 / name
                                              :op1 "Joey"))
                     :op2 (c32-1 / person
                                 :name (c32-7 / name
                                              :op1 "Pacey"))
                     :op3 (c32-15 / person
                                  :name (c32-10 / name
                                                :op1 "Jen"))
                     :op4 (c32-9 / person
                                 :name (c32-11 / name
                                               :op1 "Dawson")))
       :mod (c32-14 / definitive)
       :time (c32-12 / after
                     :op1 (c32-4 / episode
                                 :quant 2)))

# ::snt YES! the entire run
# ::tokens ["YES", "!", "the", "entire", "run"]
# ::lemmas ["yes", "!", "the", "entire", "run"]
(c33-0 / run-13
       :mod (c33-1 / entire))

# ::snt Girl I feel like they still lowkey were even in season
# ::tokens ["Girl", "I", "feel", "like", "they", "still", "lowkey", "were", "even", "in", "season"]
# ::lemmas ["girl", "i", "feel", "like", "they", "still", "lowkey", "be", "even", "in", "season"]
(c34-2 / say-01
       :ARG0 (c34-5 / i)
       :ARG1 (c34-0 / feel-02
                    :ARG0 c34-5
                    :ARG1 (c34-4 / low-04
                                 :ARG1 (c34-6 / they)
                                 :mod (c34-1 / still)
                                 :time (c34-8 / season
                                              :mod (c34-3 / even))))
       :ARG2 (c34-7 / girl))

# ::snt they fooled nobody
# ::tokens ["they", "fooled", "nobody"]
# ::lemmas ["they", "fool", "nobody"]
(c35-0 / fool-01
       :ARG0 (c35-2 / they)
       :ARG1 (c35-1 / nobody))

# ::snt sarebbe troppo bello 'twantwait...
# ::tokens ["sarebbe", "troppo", "bello", "'", "twantwait", "..."]
# ::lemmas ["sarebbe", "troppo", "bello", "'", "twantwait", "..."]
(c36-1 / say-01
       :ARG0 (c36-3 / i)
       :ARG1 (c36-4 / twantwait)
       :ARG2 (c36-2 / person
                    :name (c36-0 / name
                                 :op1 "sarebbe")))

# ::snt Natrlich wusste ich noch alle Namen auswendig.
# ::tokens ["Natrlich", "wusste", "ich", "noch", "alle", "Namen", "auswendig", "."]
# ::lemmas ["natrlich", "wusste", "ich", "noch", "alle", "Namen", "auswendig", "."]
(c37-4 / wusste-00
       :ARG0 (c37-2 / person
                    :name (c37-0 / name
                                 :op1 "Natrlich"))
       :ARG1 (c37-3 / we)
       :ARG2 c37-2
       :mod (c37-5 / country
                   :name c37-0
                   :op1 "Namibia")
       :mod (c37-6 / alle)
       :mod (c37-1 / noch)
       :mod (c37-7 / wendig))

# ::snt : "Joshua Jackson, Katie Holmes e a turma do Dawson's Creek j esto no ar!"
# ::tokens [":", "\"", "Joshua", "Jackson", ",", "Katie", "Holmes", "e", "a", "turma", "do", "Dawson", "'s", "Creek", "j", "esto", "no", "ar", "!", "\""]
# ::lemmas [":", "\"", "Joshua", "Jackson", ",", "Katie", "Holmes", "e", "a", "turma", "do", "Dawson", "'s", "Creek", "j", "esto", "no", "ar", "!", "\""]
(c38-2 / say-01
       :ARG0 (c38-7 / and
                    :op1 (c38-4 / person
                                :name (c38-0 / name
                                             :op1 "Joshua"
                                             :op2 "Jackson"))
                    :op2 (c38-1 / person
                                :name (c38-3 / name
                                             :op1 "Katie"
                                             :op2 "Holmes"))
                    :op3 (c38-9 / person
                                :name (c38-5 / name
                                             :op1 "Dawson's"
                                             :op2 "Creek")))
       :ARG1 (c38-8 / do-02
                    :ARG0 c38-7
                    :ARG1 (c38-6 / amr-unintelligible
                                 :value "ok")))

# ::snt I like the idea of Joshua Jackson trying to step to Katie only for Jamie Foxx to roll up on set and give him them hands.
# ::tokens ["I", "like", "the", "idea", "of", "Joshua", "Jackson", "trying", "to", "step", "to", "Katie", "only", "for", "Jamie", "Foxx", "to", "roll", "up", "on", "set", "and", "give", "him", "them", "hands", "."]
# ::lemmas ["i", "like", "the", "idea", "of", "Joshua", "Jackson", "try", "to", "step", "to", "Katie", "only", "for", "Jamie", "Foxx", "to", "roll", "up", "on", "set", "and", "give", "he", "they", "hand", "."]
(c39-11 / like-01
        :ARG0 (c39-14 / i)
        :ARG1 (c39-6 / idea
                     :topic (c39-15 / try-01
                                    :ARG0 (c39-10 / person
                                                  :name (c39-3 / name
                                                               :op1 "Joshua"
                                                               :op2 "Jackson"))
                                    :ARG1 (c39-5 / step-01
                                                 :ARG0 c39-10
                                                 :ARG2 (c39-4 / person
                                                              :name (c39-9 / name
                                                                           :op1 "Katie"))
                                                 :purpose (c39-7 / and
                                                                 :op1 (c39-8 / roll-01
                                                                             :ARG1 (c39-17 / person
                                                                                           :name (c39-12 / name
                                                                                                         :op1 "Jamie"
                                                                                                         :op2 "Foxx"))
                                                                             :ARG2 (c39-0 / set)
                                                                             :direction (c39-2 / up))
                                                                 :op2 (c39-16 / give-01
                                                                              :ARG0 c39-17
                                                                              :ARG1 (c39-13 / hand)
                                                                              :ARG2 c39-17)
                                                                 :mod (c39-1 / only))))))

# ::snt This is the best sentence youve ever tweeted. Keep up the good work
# ::tokens ["This", "is", "the", "best", "sentence", "you", "ve", "ever", "tweeted", ".", "Keep", "up", "the", "good", "work"]
# ::lemmas ["this", "be", "the", "good", "sentence", "you", "ve", "ever", "tweet", ".", "keep", "up", "the", "good", "work"]
(c40-1 / multi-sentence
       :snt1 (c40-2 / sentence
                    :ARG1-of (c40-5 / have-degree-91
                                    :ARG2 (c40-9 / good-02
                                                 :ARG1 c40-2)
                                    :ARG3 (c40-4 / most))
                    :ARG1-of (c40-8 / tweet-02
                                    :ARG0 (c40-0 / you)
                                    :time (c40-3 / ever))
                    :domain (c40-10 / this))
       :snt2 (c40-6 / keep-up-10
                    :ARG0 c40-0
                    :ARG1 (c40-7 / work-01
                                 :ARG0 c40-0
                                 :ARG1-of c40-9)
                    :mode imperative))

# ::snt The show would last episodes over six seasons. It would win five Teen Choice Awards.
# ::tokens ["The", "show", "would", "last", "episodes", "over", "six", "seasons", ".", "It", "would", "win", "five", "Teen", "Choice", "Awards", "."]
# ::lemmas ["the", "show", "would", "last", "episode", "over", "six", "seasons", ".", "it", "would", "win", "five", "Teen", "Choice", "Awards", "."]
(c41-1 / multi-sentence
       :snt1 (c41-6 / last-01
                    :ARG1 (c41-3 / show-04)
                    :ARG2 (c41-5 / episode)
                    :duration (c41-9 / temporal-quantity
                                     :unit (c41-0 / season)
                                     :quant 6))
       :snt2 (c41-7 / win-01
                    :ARG0 (c41-8 / it)
                    :ARG1 (c41-4 / award
                                 :name (c41-2 / name
                                              :op1 "Teen"
                                              :op2 "Ch Choice"
                                              :op3 "Awards")
                                 :quant 5)))

# ::snt The premiere was the final show to be broadcast on the WB before it merged with UPN to become the new CW network.
# ::tokens ["The", "premiere", "was", "the", "final", "show", "to", "be", "broadcast", "on", "the", "WB", "before", "it", "merged", "with", "UPN", "to", "become", "the", "new", "CW", "network", "."]
# ::lemmas ["the", "premiere", "be", "the", "final", "show", "to", "be", "broadcast", "on", "the", "WB", "before", "it", "merge", "with", "UPN", "to", "become", "the", "new", "CW", "network", "."]
(c42-5 / show
       :mod (c42-0 / final)
       :ARG1-of (c42-2 / broadcast-01
                       :medium (c42-6 / broadcast-program
                                      :name (c42-3 / name
                                                   :op1 "WB"))
                       :time (c42-13 / before
                                     :op1 (c42-4 / merge-01
                                                 :ARG1 c42-5
                                                 :ARG2 (c42-10 / company
                                                               :name (c42-7 / name
                                                                            :op1 "UPN"))
                                                 :purpose (c42-1 / become-01
                                                                 :ARG1 c42-5
                                                                 :ARG2 (c42-8 / network
                                                                              :name (c42-11 / name
                                                                                            :op1 "The"
                                                                                            :op2 "CW")
                                                                              :ARG1-of (c42-12 / new-01))))))
       :domain (c42-9 / premiere-01))

# ::snt A high school student immersed in filming an amateur movie with his friends is distracted by well, by nearly everything.
# ::tokens ["A", "high", "school", "student", "immersed", "in", "filming", "an", "amateur", "movie", "with", "his", "friends", "is", "distracted", "by", "well", ",", "by", "nearly", "everything", "."]
# ::lemmas ["a", "high", "school", "student", "immerse", "in", "film", "an", "amateur", "movie", "with", "his", "friend", "be", "distract", "by", "well", ",", "by", "nearly", "everything", "."]
(c43-12 / distract-01
        :ARG0 (c43-4 / everything
                     :degree (c43-1 / near))
        :ARG1 (c43-6 / person
                     :ARG0-of (c43-3 / study-01
                                     :location (c43-5 / high-school))
                     :ARG1-of (c43-10 / immerse-01
                                      :ARG2 (c43-0 / film-01
                                                   :ARG0 c43-6
                                                   :ARG1 (c43-2 / movie
                                                                :mod (c43-11 / amateur))
                                                   :accompanier c43-6
                                                   :ARG0-of (c43-9 / have-rel-role-91
                                                                   :ARG1 c43-6
                                                                   :ARG2 (c43-7 / friend)))))
        :mod (c43-8 / well))

# ::snt We WILL be discussing this reunion at length on our Dawson's Creek podcast this week. Check us out!
# ::tokens ["We", "WILL", "be", "discussing", "this", "reunion", "at", "length", "on", "our", "Dawson", "'s", "Creek", "podcast", "this", "week", ".", "Check", "us", "out", "!"]
# ::lemmas ["we", "will", "be", "discuss", "this", "reunion", "at", "length", "on", "our", "Dawson", "'s", "Creek", "podcast", "this", "week", ".", "check", "we", "out", "!"]
(c44-1 / multi-sentence
       :snt1 (c44-10 / discuss-01
                     :ARG0 (c44-7 / we)
                     :ARG1 (c44-3 / reunite-01
                                  :mod (c44-9 / this))
                     :ARG1-of (c44-4 / long-03)
                     :medium (c44-5 / podcast
                                    :name (c44-2 / name
                                                 :op1 "Dawson's"
                                                 :op2 "Creek")
                                    :poss c44-7)
                     :time (c44-6 / week
                                  :mod (c44-11 / this)))
       :snt2 (c44-8 / check-out-05
                    :ARG0 (c44-0 / you)
                    :ARG1 (c44-12 / we)
                    :mode imperative))

# ::snt VIRAL
# ::tokens ["VIRAL"]
# ::lemmas ["VIRAL"]
(c45-0 / controversy)

# ::snt Coba bayangin ini dicover sama Day6, suaranya Sungjin masuk banget. cover this please..
# ::tokens ["Coba", "bayangin", "ini", "dicover", "sama", "Day6", ",", "suaranya", "Sungjin", "masuk", "banget", ".", "cover", "this", "please", ".."]
# ::lemmas ["Coba", "bayangin", "ini", "dicover", "sama", "Day6", ",", "suaranya", "Sungjin", "masuk", "banget", ".", "cover", "this", "please", ".."]
(c46-2 / multi-sentence
       :snt1 (c46-11 / and
                     :op1 (c46-5 / person
                                 :name (c46-1 / name
                                              :op1 "Coba"
                                              :op2 "Bayangin")
                                 :mod (c46-10 / in-i-dicover))
                     :op2 (c46-3 / person
                                 :name (c46-4 / name
                                              :op1 "Day6"))
                     :op3 (c46-12 / person
                                  :name (c46-6 / name
                                               :op1 "Suaranya"
                                               :op2 "Sungjin")
                                  :mod (c46-7 / masuk)))
       :snt2 (c46-8 / cover-03
                    :ARG0 (c46-0 / you)
                    :ARG1 (c46-9 / this)
                    :mode imperative
                    :polite +))

# ::snt James Van der Beek &amp; Michelle Williams? We dont know them
# ::tokens ["James", "Van", "der", "Beek", "&", "amp", ";", "Michelle", "Williams", "?", "We", "do", "nt", "know", "them"]
# ::lemmas ["James", "Van", "der", "Beek", "&", "amp", ";", "Michelle", "Williams", "?", "we", "do", "not", "know", "they"]
(c47-1 / multi-sentence
       :snt1 (c47-9 / and
                    :op1 (c47-4 / person
                                :name (c47-0 / name
                                             :op1 "James"
                                             :op2 "Van"
                                             :op3 " der"
                                             :op4 "Beek"))
                    :op2 (c47-2 / person
                                :name (c47-3 / name
                                             :op1 "Michelle"
                                             :op2 "Williams"))
                    :polarity (c47-8 / amr-unknown))
       :snt2 (c47-5 / know-02
                    :ARG0 (c47-6 / we)
                    :ARG1 (c47-7 / they)
                    :polarity -))

# ::snt Lacey
# ::tokens ["Lacey"]
# ::lemmas ["lacey"]
(c48-1 / person
       :name (c48-0 / name
                    :op1 "Lacey"))
