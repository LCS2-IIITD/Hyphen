# ::snt Precious!
# ::tokens ["Precious", "!"]
# ::lemmas ["precious", "!"]
(c1-0 / precious
      :mode expressive)

# ::snt I Know
# ::tokens ["I", "Know"]
# ::lemmas ["i", "know"]
(c2-0 / know-01
      :ARG0 (c2-1 / i))

# ::snt Sweet
# ::tokens ["Sweet"]
# ::lemmas ["sweet"]
(c3-0 / sweet)

# ::snt Take a listen and Download my new mixtape Real Life
# ::tokens ["Take", "a", "listen", "and", "Download", "my", "new", "mixtape", "Real", "Life"]
# ::lemmas ["take", "a", "listen", "and", "Download", "my", "new", "mixtape", "Real", "Life"]
(c4-6 / and
      :op1 (c4-4 / listen-01
                 :ARG0 (c4-0 / you)
                 :mode imperative)
      :op2 (c4-7 / download-01
                 :ARG0 c4-0
                 :ARG1 (c4-1 / mixtape
                             :name (c4-2 / name
                                         :op1 "Real"
                                         :op2 "Life")
                             :poss (c4-5 / i)
                             :ARG1-of (c4-3 / new-01))
                 :mode imperative))

# ::snt Jennifer playing the game of love.
# ::tokens ["Jennifer", "playing", "the", "game", "of", "love", "."]
# ::lemmas ["Jennifer", "play", "the", "game", "of", "love", "."]
(c5-2 / play-01
      :ARG0 (c5-3 / person
                  :name (c5-1 / name
                              :op1 "Jennifer"))
      :ARG1 (c5-0 / game
                  :name c5-1
                  :op1 "Love"))

# ::snt Now , call Puff for a track and BEN , for the video , why not throw in the back up dancer for choreography..
# ::tokens ["Now", ",", "call", "Puff", "for", "a", "track", "and", "BEN", ",", "for", "the", "video", ",", "why", "not", "throw", "in", "the", "back", "up", "dancer", "for", "choreography", ".."]
# ::lemmas ["now", ",", "call", "Puff", "for", "a", "track", "and", "BEN", ",", "for", "the", "video", ",", "why", "not", "throw", "in", "the", "back", "up", "dancer", "for", "choreography", ".."]
(c6-10 / and
       :op1 (c6-6 / call-03
                  :ARG0 (c6-1 / you)
                  :ARG1 (c6-5 / person
                              :name (c6-2 / name
                                          :op1 "Puff"))
                  :ARG2 (c6-8 / track)
                  :mode imperative)
       :op2 (c6-13 / throw-in-02
                   :ARG0 c6-1
                   :ARG1 (c6-3 / person
                               :ARG0-of (c6-11 / dance-01)
                               :mod (c6-0 / back-up-09))
                   :purpose (c6-12 / choreography)
                   :purpose (c6-4 / video)
                   :ARG1-of (c6-7 / cause-01
                                  :ARG0 (c6-9 / amr-unknown))
                   :mode imperative))

# ::snt Guess this girl wont have to pay any dues to getting her music or voice heard!
# ::tokens ["Guess", "this", "girl", "wo", "nt", "have", "to", "pay", "any", "dues", "to", "getting", "her", "music", "or", "voice", "heard", "!"]
# ::lemmas ["guess", "this", "girl", "will", "not", "have", "to", "pay", "any", "due", "to", "get", "her", "music", "or", "voice", "hear", "!"]
(c7-9 / guess-01
      :ARG1 (c7-0 / obligate-01
                  :ARG1 (c7-7 / girl
                              :mod (c7-8 / this))
                  :ARG2 (c7-6 / pay-01
                              :ARG0 c7-7
                              :ARG1 (c7-10 / dues
                                           :mod (c7-3 / any))
                              :ARG3 (c7-11 / get-04
                                           :ARG0 c7-7
                                           :ARG1 (c7-5 / hear-01
                                                       :ARG1 (c7-1 / or
                                                                   :op1 (c7-2 / music
                                                                              :poss c7-7)
                                                                   :op2 (c7-4 / voice
                                                                              :poss c7-7)))))
                  :polarity -))

# ::snt so that is news
# ::tokens ["so", "that", "is", "news"]
# ::lemmas ["so", "that", "be", "news"]
(c8-0 / news
      :domain (c8-1 / that))

# ::snt Thought the story was about JLo showing support by singing. I was gonna say that she'd be better at showing support by not singing.
# ::tokens ["Thought", "the", "story", "was", "about", "JLo", "showing", "support", "by", "singing", ".", "I", "was", "gon", "na", "say", "that", "she", "'d", "be", "better", "at", "showing", "support", "by", "not", "singing", "."]
# ::lemmas ["thought", "the", "story", "be", "about", "jlo", "show", "support", "by", "singing", ".", "i", "be", "going", "to", "say", "that", "she", "would", "be", "well", "at", "show", "support", "by", "not", "singe", "."]
(c9-2 / multi-sentence
      :snt1 (c9-13 / think-01
                   :ARG1 (c9-4 / story
                               :topic (c9-0 / show-01
                                            :ARG0 (c9-9 / person
                                                        :name (c9-3 / name
                                                                    :op1 "JLo"))
                                            :ARG1 (c9-15 / support-01)
                                            :manner (c9-5 / sing-01
                                                          :ARG0 c9-9))))
      :snt2 (c9-7 / say-01
                  :ARG0 (c9-12 / i)
                  :ARG1 (c9-14 / good-03
                               :ARG1 (c9-1 / she)
                               :ARG2 (c9-8 / show-01
                                           :ARG0 c9-1
                                           :ARG1 c9-15
                                           :manner (c9-6 / sing-01
                                                         :ARG0 c9-1
                                                         :polarity -))
                               :ARG2-of (c9-10 / have-degree-91
                                               :ARG1 c9-1
                                               :ARG3 (c9-11 / more)))))

# ::snt "Shut up bitch, you ain't my mom"
# ::tokens ["\"", "Shut", "up", "bitch", ",", "you", "ai", "n't", "my", "mom", "\""]
# ::lemmas ["\"", "shut", "up", "bitch", ",", "you", "be", "not", "my", "mom", "\""]
(c10-3 / say-01
       :ARG0 (c10-6 / i)
       :ARG1 (c10-0 / shut-up-06
                    :ARG0 (c10-1 / bitch
                                 :ARG1-of c10-0)
                    :ARG1-of (c10-5 / cause-01
                                    :ARG0 (c10-4 / have-rel-role-91
                                                 :ARG0 c10-1
                                                 :ARG1 c10-6
                                                 :ARG2 (c10-2 / mom)
                                                 :polarity -))
                    :mode imperative)
       :ARG2 c10-1)

# ::snt Grammy winner?
# ::tokens ["Grammy", "winner", "?"]
# ::lemmas ["Grammy", "winner", "?"]
(c11-2 / person
       :polarity (c11-3 / amr-unknown)
       :ARG0-of (c11-0 / win-01
                       :ARG1 (c11-1 / baby)))
