# ::snt . And of course little miss
# ::tokens [".", "And", "of", "course", "little", "miss"]
# ::lemmas [".", "and", "of", "course", "little", "miss"]
(c1-3 / and
      :op2 (c1-1 / miss-01
                 :mod (c1-2 / little)
                 :mod (c1-0 / of-course)))

# ::snt i like her too
# ::tokens ["i", "like", "her", "too"]
# ::lemmas ["i", "like", "she", "too"]
(c2-1 / like-01
      :ARG0 (c2-2 / i)
      :ARG1 (c2-3 / she)
      :mod (c2-0 / too))

# ::snt S vejo branco ganhando mais que preto.
# ::tokens ["S", "vejo", "branco", "ganhando", "mais", "que", "preto", "."]
# ::lemmas ["S", "vejo", "branco", "ganhando", "mais", "que", "preto", "."]
(c3-3 / and
      :op1 (c3-0 / have-polarity-91
                 :ARG1-of (c3-2 / cause-01
                                :ARG0 (c3-4 / ganhando))
                 :op2-of c3-3
                 :ARG2 -)
      :ARG1 (c3-1 / preto)
      :ARG2 -)

# ::snt Nao querendo ser mimizento. Mas ta na cara que questao racial. Olha os ultimos cantores.
# ::tokens ["Nao", "querendo", "ser", "mimizento", ".", "Mas", "ta", "na", "cara", "que", "questao", "racial", ".", "Olha", "os", "ultimos", "cantores", "."]
# ::lemmas ["Nao", "querendo", "ser", "mimizento", ".", "Mas", "ta", "na", "cara", "que", "questao", "racial", ".", "olha", "os", "ultimo", "cantore", "."]
(c4-1 / multi-sentence
      :snt1 (c4-9 / querendo
                  :ARG1-of (c4-5 / mean-01
                                 :ARG2 (c4-3 / ser-01
                                             :ARG2 (c4-10 / mimizento))))
      :snt2 (c4-6 / possible-01
                  :ARG1 (c4-2 / na
                              :op1 (c4-7 / cara
                                         :ARG0-of (c4-8 / quest-01
                                                        :ARG1 (c4-4 / race)))))
      :snt3 (c4-0 / oha
                  :mod (c4-11 / cantor)
                  :mode expressive))

# ::snt Depois anda tem gente que fala que a Kelly no comercial kkk
# ::tokens ["Depois", "anda", "tem", "gente", "que", "fala", "que", "a", "Kelly", "no", "comercial", "kkk"]
# ::lemmas ["Depois", "anda", "tem", "gente", "que", "fala", "que", "a", "Kelly", "no", "comercial", "kkk"]
(c5-8 / and
      :op1 (c5-4 / person
                 :name (c5-1 / name
                             :op1 "Depois"))
      :op2 (c5-2 / person
                 :name (c5-3 / name
                             :op1 "A"
                             :op2 "tem"
                             :op3 "gente"))
      :op3 (c5-0 / fala
                 :domain (c5-9 / person
                               :name (c5-5 / name
                                           :op1 "Kelly")
                               :ARG0-of (c5-6 / have-03
                                              :ARG1 (c5-7 / comercial)
                                              :polarity -))))

# ::snt *ainda erros na injustia
# ::tokens ["*", "ainda", "erros", "na", "injustia"]
# ::lemmas ["*", "ainda", "erros", "na", "injustia"]
(c6-0 / erros
      :domain (c6-1 / amr-unintelligible
                    :value "ainda"))

# ::snt Passo mal com a lenda ter tudo isso e ao receber kk por um reality
# ::tokens ["Passo", "mal", "com", "a", "lenda", "ter", "tudo", "isso", "e", "ao", "receber", "kk", "por", "um", "reality"]
# ::lemmas ["Passo", "mal", "com", "a", "lenda", "ter", "tudo", "isso", "e", "ao", "receber", "kk", "por", "um", "reality"]
(c7-1 / multi-sentence
      :snt1 (c7-5 / pass-off-18
                  :ARG0 (c7-0 / you)
                  :ARG1 (c7-4 / mal-01
                              :ARG0 c7-0
                              :ARG1 (c7-6 / lenda)))
      :snt2 (c7-9 / and
                  :op1 (c7-7 / have-polarity-91
                             :ARG1 (c7-8 / amr-unknown)
                             :op2-of c7-9
                             :ARG2 -)
                  :ARG1 (c7-2 / person
                              :ARG0-of (c7-3 / receber-01))
                  :ARG2 -)
      :op3 c7-7
      :ARG1 (c7-10 / real-04)
      :ARG2 -)

# ::snt E no existe esse mimi de que ela no popular, no acessvel ou idolatrada, ela uma das mais seguidas do Instagram entre esse povo a (tirando a Shakira e MIley)
# ::tokens ["E", "no", "existe", "esse", "mimi", "de", "que", "ela", "no", "popular", ",", "no", "acessvel", "ou", "idolatrada", ",", "ela", "uma", "das", "mais", "seguidas", "do", "Instagram", "entre", "esse", "povo", "a", "(", "tirando", "a", "Shakira", "e", "MIley", ")"]
# ::lemmas ["e", "no", "existe", "esse", "mimi", "de", "que", "ela", "no", "popular", ",", "no", "acessvel", "ou", "idolatrada", ",", "ela", "uma", "das", "mais", "seguida", "do", "Instagram", "entre", "esse", "povo", "a", "(", "tirando", "a", "Shakira", "e", "MIley", ")"]
(c8-10 / multi-sentence
       :snt1 (c8-19 / exist-01
                    :ARG1 (c8-20 / person
                                 :name (c8-18 / name
                                              :op1 "Misi"))
                    :ARG1-of (c8-14 / cause-01
                                    :ARG0 (c8-11 / popular-02
                                                 :ARG1 (c8-8 / ela)
                                                 :polarity -))
                    :polarity -)
       :snt2 (c8-2 / or
                   :op1 (c8-6 / acessvel
                              :polarity -)
                   :op2 (c8-22 / idolatrada
                               :polarity -)
                   :domain (c8-13 / ela))
       :snt3 (c8-17 / uma
                    :mod (c8-23 / das
                                :mod (c8-5 / amr-unknown))
                    :snt4 (c8-3 / have-03
                                :ARG0 (c8-16 / ela)
                                :ARG1 (c8-1 / platform
                                            :name (c8-12 / name
                                                         :op1 "Instagram"))
                                :ARG2-of (c8-9 / entre-01
                                               :ARG1 c8-16
                                               :ARG3 (c8-0 / povo
                                                           :poss (c8-4 / and
                                                                       :op1 (c8-7 / person
                                                                                  :name (c8-21 / name
                                                                                               :op1 "Shakira"))
                                                                       :op2 (c8-24 / person
                                                                                   :name (c8-15 / name
                                                                                                :op1 "MIley"))))))))

# ::snt Pois , ela tem Grammys, ou seja, nem juntado o tanto de Grammy que todo mundo a tem, d o tanto que a Alicia possui.No querendo desmerecer minha Kelly Clarkson rainha, mas aquela coisa n...Alicia deserve better
# ::tokens ["Pois", ",", "ela", "tem", "Grammys", ",", "ou", "seja", ",", "nem", "juntado", "o", "tanto", "de", "Grammy", "que", "todo", "mundo", "a", "tem", ",", "d", "o", "tanto", "que", "a", "Alicia", "possui", ".", "No", "querendo", "desmerecer", "minha", "Kelly", "Clarkson", "rainha", ",", "mas", "aquela", "coisa", "n", "...", "Alicia", "deserve", "better"]
# ::lemmas ["Pois", ",", "ela", "tem", "Grammys", ",", "ou", "seja", ",", "nem", "juntado", "o", "tanto", "de", "Grammy", "que", "todo", "mundo", "a", "tem", ",", "d", "o", "tanto", "que", "a", "Alicia", "possui", ".", "no", "querendo", "desmerecer", "minha", "Kelly", "Clarkson", "rainha", ",", "mas", "aquela", "coisa", "n", "...", "Alicia", "deserve", "well"]
(c9-15 / multi-sentence
       :snt1 (c9-10 / and
                    :op1 (c9-26 / post-scriptum
                                :domain (c9-25 / event
                                               :name (c9-24 / name
                                                            :op1 "Grammys")))
                    :op2 (c9-0 / seja)
                    :op3 (c9-7 / juntado
                               :domain (c9-16 / person
                                              :name (c9-17 / name
                                                           :op1 "Nem"
                                                           :op2 "Juntado")))
                    :op4 c9-25
                    :name (c9-27 / name
                                 :op1 "Grammys")
                    :mod (c9-9 / tanto))
       :op5 (c9-31 / do-02
                   :ARG0 c9-25
                   :ARG1 (c9-22 / tem)
                   :op6-of c9-15)
       :ARG0 c9-25
       :ARG1 (c9-30 / tem)
       :op7 (c9-11 / et-cetera)
       :op8 c9-31
       :ARG0 c9-25
       :ARG1 (c9-1 / tem)
       :op9 (c9-18 / et-cetera
                   :domain (c9-3 / person
                                 :name (c9-21 / name
                                              :op1 "Alicia")
                                 :ARG0-of (c9-2 / possui-01)))
       :snt2 c9-10
       :op1 (c9-4 / have-polarity-91
                  :ARG1 (c9-5 / minha
                              :mod (c9-8 / person
                                         :name (c9-29 / name
                                                      :op1 "Kelly"
                                                      :op2 "Clarkson"))
                              :ARG0-of (c9-20 / desmerecer-00))
                  :op2-of c9-15
                  :ARG2 -)
       :ARG1 (c9-12 / amr-unknown)
       :op3 c9-4
       :ARG1 (c9-6 / amr-unknown)
       :op4 c9-4
       :ARG1 (c9-19 / deserve-01
                    :ARG0 c9-8
                    :ARG1 (c9-13 / thing
                                 :ARG1-of (c9-28 / have-degree-91
                                                 :ARG2 (c9-14 / good-02
                                                              :ARG1 c9-13)
                                                 :ARG3 (c9-23 / more))))
       :ARG2 -
       :ARG2 -
       :ARG2 -
       :ARG2 -
       :ARG2 -)

# ::snt Passado que o Blake e o Adam ganham mais que a Alicia
# ::tokens ["Passado", "que", "o", "Blake", "e", "o", "Adam", "ganham", "mais", "que", "a", "Alicia"]
# ::lemmas ["Passado", "que", "o", "blake", "e", "o", "Adam", "ganham", "mais", "que", "a", "Alicia"]
(c10-4 / passado
       :domain (c10-2 / and
                      :op1 (c10-1 / person
                                  :name (c10-0 / name
                                               :op1 "Blake"))
                      :op2 (c10-7 / person
                                  :name (c10-3 / name
                                               :op1 "Adam"
                                               :op2 "Ganham"))
                      :op3 (c10-6 / person
                                  :name (c10-5 / name
                                               :op1 "Alicia"))))

# ::snt Well that didn't happen. They needed to say something ! Tells you a lot doesn't it
# ::tokens ["Well", "that", "did", "n't", "happen", ".", "They", "needed", "to", "say", "something", "!", "Tells", "you", "a", "lot", "does", "n't", "it"]
# ::lemmas ["well", "that", "do", "not", "happen", ".", "they", "need", "to", "say", "something", "!", "tell", "you", "a", "lot", "do", "not", "it"]
(c11-3 / multi-sentence
       :snt1 (c11-6 / have-polarity-91
                    :ARG1 (c11-10 / that)
                    :mod (c11-8 / well)
                    :ARG2 -)
       :snt2 (c11-2 / need-01
                    :ARG0 (c11-11 / they)
                    :ARG1 (c11-4 / say-01
                                 :ARG0 c11-11
                                 :ARG1 (c11-0 / something)))
       :snt3 (c11-9 / tell-01
                    :ARG1 (c11-7 / lot)
                    :ARG2 (c11-1 / you)
                    :ARG1-of (c11-5 / request-confirmation-91)))

# ::snt Voice sucks!!!!!
# ::tokens ["Voice", "sucks", "!", "!", "!", "!", "!"]
# ::lemmas ["voice", "suck", "!", "!", "!", "!", "!"]
(c12-1 / suck-03
       :ARG0 (c12-0 / voice))

# ::snt Figures
# ::tokens ["Figures"]
# ::lemmas ["figure"]
(c13-0 / figure)

# ::snt Nope, just a Ranfan throwing shade.
# ::tokens ["Nope", ",", "just", "a", "Ranfan", "throwing", "shade", "."]
# ::lemmas ["nope", ",", "just", "a", "Ranfan", "throw", "shade", "."]
(c14-2 / multi-sentence
       :snt1 (c14-1 / nope)
       :snt2 (c14-6 / throw-01
                    :ARG0 (c14-0 / fan
                                 :name (c14-4 / name
                                              :op1 "Ranfan")
                                 :mod (c14-5 / just))
                    :ARG1 (c14-3 / shade)))

# ::snt Ha! True
# ::tokens ["Ha", "!", "True"]
# ::lemmas ["ha", "!", "true"]
(c15-1 / true-01
       :mod (c15-0 / ha
                   :mode expressive))

# ::snt Yeah but she only has followers so....
# ::tokens ["Yeah", "but", "she", "only", "has", "followers", "so", "...."]
# ::lemmas ["yeah", "but", "she", "only", "have", "follower", "so", "...."]
(c16-4 / contrast-01
       :ARG2 (c16-2 / follow-02
                    :ARG0 (c16-3 / she)
                    :mod (c16-1 / only)
                    :mod (c16-0 / so)))

# ::snt Ah...I checked your TL...I figured this wasnt an unbiased opinion
# ::tokens ["Ah", "...", "I", "checked", "your", "TL", "...", "I", "figured", "this", "was", "nt", "an", "unbiased", "opinion"]
# ::lemmas ["ah", "...", "i", "check", "your", "TL", "...", "i", "figure", "this", "be", "not", "an", "unbiased", "opinion"]
(c17-4 / multi-sentence
       :snt1 (c17-6 / ah
                    :mode expressive)
       :snt2 (c17-8 / check-01
                    :ARG0 (c17-9 / i)
                    :ARG1 (c17-10 / thing
                                  :ARG1-of (c17-7 / long-03)
                                  :poss (c17-3 / you)))
       :snt3 (c17-0 / figure-01
                    :ARG0 (c17-5 / i)
                    :ARG1 c17-10
                    :ARG1-of (c17-1 / opine-01)
                    :ARG1-of (c17-2 / bias-01
                                    :polarity -)
                    :domain (c17-11 / this)))

# ::snt I loved Xtina, Blake, Ceelo and Adam!
# ::tokens ["I", "loved", "Xtina", ",", "Blake", ",", "Ceelo", "and", "Adam", "!"]
# ::lemmas ["i", "love", "Xtina", ",", "Blake", ",", "Ceelo", "and", "Adam", "!"]
(c18-4 / love-01
       :ARG0 (c18-8 / i)
       :ARG1 (c18-9 / and
                    :op1 (c18-3 / person
                                :name (c18-0 / name
                                             :op1 "Xtina"))
                    :op2 (c18-1 / person
                                :name (c18-2 / name
                                             :op1 "Blake"))
                    :op3 (c18-10 / person
                                 :name (c18-5 / name
                                              :op1 "Ceelo"))
                    :op4 (c18-6 / person
                                :name (c18-7 / name
                                             :op1 "Adam"))))

# ::snt We want Gwen back
# ::tokens ["We", "want", "Gwen", "back"]
# ::lemmas ["we", "want", "Gwen", "back"]
(c19-4 / want-01
       :ARG0 (c19-3 / we)
       :ARG1 (c19-2 / person
                    :name (c19-1 / name
                                 :op1 "Gwen")
                    :mod (c19-0 / back)))

# ::snt Adam, Blake, Pharrel &amp; Gwen
# ::tokens ["Adam", ",", "Blake", ",", "Pharrel", "&", "amp", ";", "Gwen"]
# ::lemmas ["Adam", ",", "Blake", ",", "Pharrel", "&", "amp", ";", "Gwen"]
(c20-7 / and
       :op1 (c20-3 / person
                   :name (c20-0 / name
                                :op1 "Adam"))
       :op2 (c20-1 / person
                   :name (c20-2 / name
                                :op1 "Blake"))
       :op3 (c20-8 / person
                   :name (c20-4 / name
                                :op1 "Pharcrel"
                                :op2 "&amp"))
       :op4 (c20-5 / person
                   :name (c20-6 / name
                                :op1 "Gwen")))

# ::snt The last season was boring, you repet so many things AND we lost so many others
# ::tokens ["The", "last", "season", "was", "boring", ",", "you", "repet", "so", "many", "things", "AND", "we", "lost", "so", "many", "others"]
# ::lemmas ["The", "last", "season", "be", "boring", ",", "you", "repet", "so", "many", "thing", "and", "we", "lose", "so", "many", "other"]
(c21-2 / bore-02
       :ARG0 (c21-5 / season
                    :mod (c21-8 / last))
       :ARG1-of (c21-9 / cause-01
                       :ARG0 (c21-12 / and
                                     :op1 (c21-6 / repeat-01
                                                 :ARG0 (c21-3 / you)
                                                 :ARG1 (c21-11 / thing
                                                               :quant (c21-4 / many
                                                                             :degree (c21-0 / so))))
                                     :op2 (c21-13 / lose-03
                                                  :ARG0 (c21-10 / we)
                                                  :ARG1 (c21-1 / other
                                                               :quant (c21-7 / many
                                                                             :degree (c21-14 / so)))))))

# ::snt ADAM, GWEEEN, ALICIA and BLAKEE
# ::tokens ["ADAM", ",", "GWEEEN", ",", "ALICIA", "and", "BLAKEE"]
# ::lemmas ["ADAM", ",", "GWEEEN", ",", "ALICIA", "and", "BLAKEE"]
(c23-2 / and
       :op1 (c23-1 / aid-01
                   :op2-of c23-2
                   :op3-of c23-2
                   :op4-of c23-2
                   :ARG1-of c23-2
                   :op5-of c23-2
                   :ARG1-of c23-2)
       :op6 (c23-0 / brief-01))

# ::snt Omg plz bring Gwen back
# ::tokens ["Omg", "plz", "bring", "Gwen", "back"]
# ::lemmas ["Omg", "plz", "bring", "Gwen", "back"]
(c24-1 / bring-01
       :ARG0 (c24-2 / you)
       :ARG1 (c24-5 / person
                    :name (c24-3 / name
                                 :op1 "Gwen"))
       :ARG2 (c24-4 / back)
       :mod (c24-0 / oh-my-god
                   :mode expressive)
       :mode imperative
       :polite +)

# ::snt and and
# ::tokens ["and", "and"]
# ::lemmas ["and", "and"]
(c25-0 / and)

# ::snt Actually loved Adam, Blake, Pharrell and Gwen
# ::tokens ["Actually", "loved", "Adam", ",", "Blake", ",", "Pharrell", "and", "Gwen"]
# ::lemmas ["actually", "love", "Adam", ",", "Blake", ",", "Pharrell", "and", "Gwen"]
(c26-4 / love-01
       :ARG1 (c26-9 / and
                    :op1 (c26-3 / person
                                :name (c26-0 / name
                                             :op1 "Adam"))
                    :op2 (c26-1 / person
                                :name (c26-2 / name
                                             :op1 "Blake"))
                    :op3 (c26-10 / person
                                 :name (c26-5 / name
                                              :op1 "Pharrell"))
                    :op4 (c26-6 / person
                                :name (c26-7 / name
                                             :op1 "Gwen")))
       :ARG1-of (c26-8 / actual-02))

# ::snt Adam, Blake, Gwen, Pharrell
# ::tokens ["Adam", ",", "Blake", ",", "Gwen", ",", "Pharrell"]
# ::lemmas ["Adam", ",", "Blake", ",", "Gwen", ",", "Pharrell"]
(c27-7 / and
       :op1 (c27-3 / person
                   :name (c27-0 / name
                                :op1 "Adam"))
       :op2 (c27-1 / person
                   :name (c27-2 / name
                                :op1 "Blake"))
       :op3 (c27-8 / person
                   :name (c27-4 / name
                                :op1 "Gwen"))
       :op4 (c27-5 / person
                   :name (c27-6 / name
                                :op1 "Pharrell")))

# ::snt From the blonde girl I saw in the promo vid to the person I stan so much right now. Thanks
# ::tokens ["From", "the", "blonde", "girl", "I", "saw", "in", "the", "promo", "vid", "to", "the", "person", "I", "stan", "so", "much", "right", "now", ".", "Thanks"]
# ::lemmas ["from", "the", "blonde", "girl", "i", "see", "in", "the", "promo", "vid", "to", "the", "person", "i", "stan", "so", "much", "right", "now", ".", "thank"]
(c28-3 / multi-sentence
       :snt1 (c28-14 / and
                     :op1 (c28-15 / girl
                                  :mod (c28-1 / blonde)
                                  :ARG1-of (c28-5 / see-01
                                                  :ARG0 (c28-13 / i)
                                                  :medium (c28-8 / video
                                                                 :mod (c28-11 / promote-02))))
                     :op2 (c28-4 / person
                                 :ARG1-of (c28-0 / stan-01
                                                 :ARG0 (c28-6 / i)
                                                 :time (c28-7 / now
                                                              :mod (c28-9 / right))
                                                 :degree (c28-10 / much
                                                                 :degree (c28-17 / so)))))
       :snt2 (c28-12 / thank-01
                     :ARG0 (c28-16 / i)
                     :ARG1 (c28-2 / you)))

# ::snt Especially Gwen, who knew she was involved in my life since I was . If I wasn't a careless kid.
# ::tokens ["Especially", "Gwen", ",", "who", "knew", "she", "was", "involved", "in", "my", "life", "since", "I", "was", ".", "If", "I", "was", "n't", "a", "careless", "kid", "."]
# ::lemmas ["Especially", "Gwen", ",", "who", "know", "she", "be", "involve", "in", "my", "life", "since", "i", "be", ".", "if", "i", "be", "not", "a", "careless", "kid", "."]
(c29-1 / multi-sentence
       :snt1 (c29-7 / person
                    :name (c29-0 / name
                                 :op1 "Gwen")
                    :mod (c29-4 / especially)
                    :ARG0-of (c29-6 / know-01
                                    :ARG1 (c29-10 / involve-01
                                                  :ARG1 c29-7
                                                  :ARG2 (c29-8 / life
                                                               :poss (c29-3 / i))
                                                  :time (c29-2 / since
                                                               :ARG1 c29-3)
                                                  :op1-of c29-2)))
       :snt2 (c29-5 / have-condition-91
                    :ARG2 (c29-11 / kid
                                  :ARG1-of (c29-9 / care-04
                                                  :polarity -)
                                  :domain (c29-12 / i)
                                  :polarity -)))

# ::snt When I saw them on the show, they were strangers to me cuz I don't know them. I just know their music. Now, I'm actually stanning them /
# ::tokens ["When", "I", "saw", "them", "on", "the", "show", ",", "they", "were", "strangers", "to", "me", "cuz", "I", "do", "n't", "know", "them", ".", "I", "just", "know", "their", "music", ".", "Now", ",", "I", "'m", "actually", "stanning", "them", "/"]
# ::lemmas ["when", "i", "see", "they", "on", "the", "show", ",", "they", "be", "stranger", "to", "i", "cuz", "i", "do", "not", "know", "they", ".", "i", "just", "know", "their", "music", ".", "now", ",", "i", "be", "actually", "stanne", "they", "/"]
(c30-1 / multi-sentence
       :snt1 (c30-3 / stranger
                    :domain (c30-12 / they)
                    :time (c30-0 / see-01
                                 :ARG0 (c30-11 / i)
                                 :ARG1 c30-12
                                 :location (c30-16 / show))
                    :ARG1-of (c30-9 / cause-01
                                    :ARG0 (c30-8 / know-02
                                                 :ARG0 c30-11
                                                 :ARG1 c30-12
                                                 :polarity -)))
       :snt2 (c30-13 / know-02
                     :ARG0 (c30-4 / i)
                     :ARG1 (c30-7 / music
                                  :poss (c30-15 / they))
                     :mod (c30-10 / just))
       :snt3 (c30-5 / stone-02
                    :ARG0 (c30-14 / i)
                    :ARG1 c30-15
                    :ARG1-of (c30-6 / actual-02)
                    :time (c30-2 / now)))

# ::snt Season
# ::tokens ["Season"]
# ::lemmas ["Season"]
(c31-0 / season)

# ::snt Thank you!!!!
# ::tokens ["Thank", "you", "!", "!", "!", "!"]
# ::lemmas ["thank", "you", "!", "!", "!", "!"]
(c32-2 / thank-01
       :ARG0 (c32-1 / i)
       :ARG1 (c32-0 / you)
       :mode expressive)

# ::snt I wish they were coming back next time
# ::tokens ["I", "wish", "they", "were", "coming", "back", "next", "time"]
# ::lemmas ["i", "wish", "they", "be", "come", "back", "next", "time"]
(c33-2 / wish-01
       :ARG0 (c33-4 / i)
       :ARG1 (c33-3 / come-01
                    :ARG1 (c33-5 / they)
                    :ARG4 (c33-0 / back)
                    :time (c33-6 / time
                                 :mod (c33-1 / next))))

# ::snt Much as I want u back they did u wrong so don't be hurt again. Hunter is the real winner.
# ::tokens ["Much", "as", "I", "want", "u", "back", "they", "did", "u", "wrong", "so", "do", "n't", "be", "hurt", "again", ".", "Hunter", "is", "the", "real", "winner", "."]
# ::lemmas ["much", "as", "i", "want", "u", "back", "they", "do", "u", "wrong", "so", "do", "not", "be", "hurt", "again", ".", "Hunter", "be", "the", "real", "winner", "."]
(c34-2 / multi-sentence
       :snt1 (c34-11 / wrong-04
                     :ARG0 (c34-13 / they)
                     :ARG1 (c34-1 / you)
                     :concession (c34-10 / want-01
                                         :ARG0 (c34-12 / i)
                                         :ARG1 (c34-0 / back)
                                         :mod (c34-7 / much)))
       :snt2 (c34-8 / hurt-01
                    :ARG1 (c34-14 / you)
                    :mod (c34-5 / again)
                    :polarity -)
       :snt3 (c34-9 / person
                    :ARG0-of (c34-15 / win-01)
                    :ARG1-of (c34-6 / real-04)
                    :domain (c34-3 / person
                                   :name (c34-4 / name
                                                :op1 "Hunter"))))

# ::snt Well Deserved Love This Show But I'm REALLY GOING TO MISS GWEN Good Luck To All The Judges Love To Carson
# ::tokens ["Well", "Deserved", "Love", "This", "Show", "But", "I", "'m", "REALLY", "GOING", "TO", "MISS", "GWEN", "Good", "Luck", "To", "All", "The", "Judges", "Love", "To", "Carson"]
# ::lemmas ["well", "Deserved", "Love", "this", "Show", "but", "i", "be", "really", "go", "to", "MISS", "GWEN", "Good", "Luck", "to", "all", "the", "Judges", "Love", "To", "Carson"]
(c35-9 / contrast-01
       :ARG1 (c35-14 / deserve-01
                     :ARG1 (c35-6 / love-01
                                  :mod (c35-12 / this))
                     :degree (c35-8 / well))
       :ARG2 (c35-11 / intend-01
                     :ARG0 (c35-3 / i)
                     :ARG1 (c35-0 / miss-02
                                  :ARG0 c35-3
                                  :ARG1 (c35-15 / luck
                                                :ARG1-of (c35-13 / good-02)
                                                :poss (c35-7 / person
                                                             :ARG0-of (c35-10 / judge-01)
                                                             :mod (c35-4 / all))
                                                :beneficiary (c35-1 / person
                                                                    :name (c35-2 / name
                                                                                 :op1 "Carson")))
                                  :degree (c35-5 / really))))

# ::snt Good times!
# ::tokens ["Good", "times", "!"]
# ::lemmas ["good", "time", "!"]
(c36-1 / time
       :ARG1-of (c36-0 / good-02))

# ::snt Everyone's joining the Day fun!
# ::tokens ["Everyone", "'s", "joining", "the", "Day", "fun", "!"]
# ::lemmas ["everyone", "'s", "join", "the", "day", "fun", "!"]
(c37-2 / join-01
       :ARG0 (c37-1 / everyone)
       :ARG1 (c37-0 / fun-01
                    :ARG1 (c37-3 / day))
       :mode expressive)

# ::snt Congratulations Chris!
# ::tokens ["Congratulations", "Chris", "!"]
# ::lemmas ["Congratulations", "Chris", "!"]
(c38-3 / say-01
       :ARG1 (c38-0 / congratulate-01)
       :ARG2 (c38-2 / person
                    :name (c38-1 / name
                                 :op1 "Chris"))
       :mode expressive)

# ::snt I soo glad he won the voice tonight
# ::tokens ["I", "soo", "glad", "he", "won", "the", "voice", "tonight"]
# ::lemmas ["i", "soo", "glad", "he", "win", "the", "voice", "tonight"]
(c39-7 / glad-02
       :ARG0 (c39-4 / win-01
                    :ARG0 (c39-3 / he)
                    :ARG1 (c39-2 / voice)
                    :time (c39-8 / date-entity
                                 :dayperiod (c39-0 / night)
                                 :mod (c39-6 / today)))
       :ARG1 (c39-5 / i)
       :degree (c39-1 / so))

# ::snt Aqui no BR a Globo paga R$500 mil pra cada um e fatura mais de R$80 mi com o programa
# ::tokens ["Aqui", "no", "BR", "a", "Globo", "paga", "R$500", "mil", "pra", "cada", "um", "e", "fatura", "mais", "de", "R$80", "mi", "com", "o", "programa"]
# ::lemmas ["Aqui", "no", "BR", "a", "Globo", "paga", "R$500", "mil", "pra", "cada", "um", "e", "fatura", "mais", "de", "R$80", "mi", "com", "o", "programa"]
(c41-2 / multi-sentence
       :snt1 (c41-5 / paga-00
                    :ARG0 (c41-3 / person
                                 :name (c41-1 / name
                                              :op1 "Aqui"
                                              :op2 "No"
                                              :op3 "BR"))
                    :ARG1 (c41-4 / monetary-quantity
                                 :unit (c41-10 / dollar)
                                 :quant 500000)
                    :mod (c41-7 / country
                                :name (c41-6 / name
                                             :op1 "Australia")))
       :snt2 (c41-0 / fatura
                    :mod (c41-9 / amr-unintelligible
                                :value "R$500000")
                    :snt3-of c41-2)
       :mod (c41-8 / amr-unintelligible
                   :value "R$80 mi")
       :snt4 (c41-11 / programa))

# ::snt Agree
# ::tokens ["Agree"]
# ::lemmas ["agree"]
(c42-1 / agree-01
       :ARG0 (c42-0 / i))

# ::snt definitely
# ::tokens ["definitely"]
# ::lemmas ["definitely"]
(c43-0 / definite)

# ::snt alicia is at M, miley is past M and the rest are also higher
# ::tokens ["alicia", "is", "at", "M", ",", "miley", "is", "past", "M", "and", "the", "rest", "are", "also", "higher"]
# ::lemmas ["alicia", "be", "at", "M", ",", "miley", "be", "past", "M", "and", "the", "rest", "be", "also", "high"]
(c44-12 / and
        :op1 (c44-0 / be-located-at-91
                    :ARG1 (c44-6 / person
                                 :name (c44-1 / name
                                              :op1 "alicia"))
                    :ARG2 (c44-13 / university
                                  :name (c44-5 / name
                                               :op1 "M")))
        :op2 (c44-7 / be-located-at-91
                    :ARG1 (c44-2 / person
                                 :name (c44-8 / name
                                              :op1 "Miley"))
                    :ARG2 c44-13)
        :op3 (c44-9 / high-02
                    :ARG1 (c44-4 / rest)
                    :mod (c44-11 / also)
                    :ARG2-of (c44-10 / have-degree-91
                                     :ARG1 c44-4
                                     :ARG3 (c44-3 / more))))

# ::snt I think Alicia Keys is bigger than that.
# ::tokens ["I", "think", "Alicia", "Keys", "is", "bigger", "than", "that", "."]
# ::lemmas ["i", "think", "Alicia", "Keys", "be", "big", "than", "that", "."]
(c45-6 / think-01
       :ARG0 (c45-5 / i)
       :ARG1 (c45-0 / big
                    :ARG2-of (c45-3 / have-degree-91
                                    :ARG1 (c45-4 / person
                                                 :name (c45-1 / name
                                                              :op1 "Alicia"
                                                              :op2 "Keys"))
                                    :ARG3 (c45-2 / more)
                                    :ARG4 (c45-7 / that))))

# ::snt Your Kelly source is outdated....
# ::tokens ["Your", "Kelly", "source", "is", "outdated", "...."]
# ::lemmas ["your", "Kelly", "source", "be", "outdate", "...."]
(c46-0 / outdated
       :domain (c46-3 / source
                      :mod (c46-4 / person
                                  :name (c46-2 / name
                                               :op1 "Kelly"))
                      :poss (c46-1 / you)))

# ::snt well it depends on different sources.
# ::tokens ["well", "it", "depends", "on", "different", "sources", "."]
# ::lemmas ["well", "it", "depend", "on", "different", "source", "."]
(c47-4 / depend-01
       :ARG0 (c47-3 / it)
       :ARG1 (c47-0 / source
                    :ARG1-of (c47-2 / differ-02))
       :mod (c47-1 / well))

# ::snt Everyone was great.
# ::tokens ["Everyone", "was", "great", "."]
# ::lemmas ["everyone", "be", "great", "."]
(c48-0 / great
       :domain (c48-1 / everyone))

# ::snt ? god? Go A.KEYS...Chris....Thx u.
# ::tokens ["?", "god", "?", "Go", "A.KEYS", "...", "Chris", "....", "Thx", "u."]
# ::lemmas ["?", "god", "?", "go", "a.keys", "...", "Chris", "....", "Thx", "u."]
(c49-2 / multi-sentence
       :snt1 (c49-6 / person
                    :polarity (c49-9 / amr-unknown)
                    :name (c49-1 / name
                                 :op1 "God"))
       :snt2 (c49-10 / go-03
                     :ARG0 (c49-0 / you)
                     :ARG1 (c49-3 / person
                                  :name (c49-5 / name
                                               :op1 "A.KEYS"))
                     :mode imperative)
       :snt3 (c49-4 / say-01
                    :ARG0 (c49-8 / i)
                    :ARG2 (c49-11 / person
                                  :name (c49-7 / name
                                               :op1 "Chris"))))
