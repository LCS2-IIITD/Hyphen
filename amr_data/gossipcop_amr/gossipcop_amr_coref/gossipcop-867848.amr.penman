# ::snt Good read for us, Madonna did RECEIVE them after the PRISON copied the juicy ones!!! now two decades later they r POPPING up for ALL to READ
# ::tokens ["Good", "read", "for", "us", ",", "Madonna", "did", "RECEIVE", "them", "after", "the", "PRISON", "copied", "the", "juicy", "ones", "!", "!", "!", "now", "two", "decades", "later", "they", "r", "POPPING", "up", "for", "ALL", "to", "READ"]
# ::lemmas ["good", "read", "for", "we", ",", "Madonna", "do", "receive", "they", "after", "the", "PRISON", "copy", "the", "juicy", "one", "!", "!", "!", "now", "two", "decades", "later", "they", "r", "pop", "up", "for", "all", "to", "read"]
(c1-10 / multi-sentence
       :snt1 (c1-17 / read-01
                    :ARG1-of (c1-9 / good-02)
                    :beneficiary (c1-20 / we))
       :snt2 (c1-2 / receive-01
                   :ARG0 (c1-18 / person
                                :name (c1-16 / name
                                             :op1 "Madonna"))
                   :ARG1 (c1-8 / they)
                   :time (c1-7 / after
                               :op1 (c1-14 / copy-01
                                           :ARG0 (c1-0 / government-organization
                                                       :name (c1-12 / name
                                                                    :op1 "Prison"))
                                           :ARG1 (c1-3 / one
                                                       :mod (c1-5 / juicy)))))
       :snt3 (c1-11 / POP-up-00
                    :ARG0 (c1-15 / they)
                    :time (c1-6 / after
                                :op1 (c1-19 / now)
                                :quant (c1-21 / temporal-quantity
                                              :unit (c1-22 / decade)
                                              :quant 2))
                    :purpose (c1-13 / read-01
                                    :ARG0 (c1-1 / person
                                                :mod (c1-4 / all)))))

# ::snt No shit. But if they're referring to a letter from years ago, why not include a relevant picture of Madonna along with Tupac. That's all.
# ::tokens ["No", "shit", ".", "But", "if", "they", "'re", "referring", "to", "a", "letter", "from", "years", "ago", ",", "why", "not", "include", "a", "relevant", "picture", "of", "Madonna", "along", "with", "Tupac", ".", "That", "'s", "all", "."]
# ::lemmas ["no", "shit", ".", "but", "if", "they", "be", "refer", "to", "a", "letter", "from", "years", "ago", ",", "why", "not", "include", "a", "relevant", "picture", "of", "Madonna", "along", "with", "Tupac", ".", "that", "be", "all", "."]
(c2-12 / multi-sentence
       :snt1 (c2-0 / shit-01
                   :polarity -)
       :snt2 (c2-15 / contrast-01
                    :ARG2 (c2-21 / include-01
                                 :ARG1 (c2-19 / picture-01
                                              :ARG1 (c2-9 / and
                                                          :op1 (c2-13 / person
                                                                      :name (c2-17 / name
                                                                                   :op1 "Madonna"))
                                                          :op2 (c2-3 / person
                                                                     :name (c2-14 / name
                                                                                  :op1 "Tupac")))
                                              :ARG1-of (c2-18 / relevant-01))
                                 :ARG1-of (c2-10 / cause-01
                                                 :ARG0 (c2-7 / amr-unknown))
                                 :condition (c2-4 / refer-03
                                                  :ARG0 (c2-8 / they)
                                                  :ARG1 (c2-2 / letter
                                                              :time (c2-11 / before
                                                                           :op1 (c2-20 / now)
                                                                           :quant (c2-6 / multiple
                                                                                        :op1 (c2-16 / temporal-quantity
                                                                                                    :unit (c2-5 / year)
                                                                                                    :quant 1)))))
                                 :polarity -))
       :snt3 (c2-1 / be-it-08
                   :ARG1 (c2-22 / that)))

# ::snt My thoughts exactly! They're doing it on purpose, but guess what - they're talking about Her she's not talking about them
# ::tokens ["My", "thoughts", "exactly", "!", "They", "'re", "doing", "it", "on", "purpose", ",", "but", "guess", "what", "-", "they", "'re", "talking", "about", "Her", "she", "'s", "not", "talking", "about", "them"]
# ::lemmas ["my", "thought", "exactly", "!", "they", "be", "do", "it", "on", "purpose", ",", "but", "guess", "what", "-", "they", "be", "talk", "about", "she", "she", "be", "not", "talk", "about", "they"]
(c3-2 / multi-sentence
      :snt1 (c3-12 / think-01
                   :ARG0 (c3-11 / i)
                   :ARG1 (c3-7 / exact)
                   :mode expressive)
      :snt2 (c3-10 / contrast-01
                   :ARG1 (c3-14 / do-02
                                :ARG0 (c3-16 / they)
                                :ARG1 (c3-5 / it)
                                :ARG2 (c3-9 / purpose))
                   :ARG2 (c3-13 / guess-01
                                :ARG0 (c3-1 / you)
                                :ARG1 (c3-15 / thing
                                             :domain c3-10
                                             :ARG1 (c3-8 / talk-01
                                                         :ARG0 (c3-3 / they)
                                                         :ARG1 (c3-4 / she))
                                             :ARG2 (c3-6 / talk-01
                                                         :ARG0 (c3-0 / she
                                                                     :ARG1 c3-3)
                                                         :polarity -))
                                :mode imperative)))

# ::snt He is dead, not like you can get a recent picture of him. Wth?!
# ::tokens ["He", "is", "dead", ",", "not", "like", "you", "can", "get", "a", "recent", "picture", "of", "him", ".", "Wth", "?", "!"]
# ::lemmas ["he", "be", "dead", ",", "not", "like", "you", "can", "get", "a", "recent", "picture", "of", "he", ".", "Wth", "?", "!"]
(c4-1 / multi-sentence
      :snt1 (c4-9 / die-01
                  :ARG1 (c4-4 / he)
                  :ARG1-of (c4-3 / resemble-01
                                 :ARG2 (c4-5 / possible-01
                                             :ARG1 (c4-8 / get-01
                                                         :ARG0 (c4-0 / you)
                                                         :ARG1 (c4-2 / picture-01
                                                                     :ARG1 (c4-6 / he)
                                                                     :time (c4-10 / recent)))
                                             :polarity -)
                                 :polarity -))
      :snt2 (c4-7 / amr-unknown
                  :mode expressive))

# ::snt please tell me you seen't this!!!!!!!!!
# ::tokens ["please", "tell", "me", "you", "seen't", "this", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
# ::lemmas ["please", "tell", "i", "you", "seen't", "this", "!", "!", "!", "!", "!", "!", "!", "!", "!"]
(c6-2 / tell-01
      :ARG0 (c6-0 / you)
      :ARG1 (c6-1 / see-01
                  :ARG0 c6-0
                  :ARG1 (c6-4 / this)
                  :polarity -)
      :ARG2 (c6-3 / i)
      :polite +
      :mode imperative)

# ::snt Stolen my ass! They put the letter out so the information would go public. now they're recovering it, &amp; she has plausible deniability
# ::tokens ["Stolen", "my", "ass", "!", "They", "put", "the", "letter", "out", "so", "the", "information", "would", "go", "public", ".", "now", "they", "'re", "recovering", "it", ",", "&", "amp", ";", "she", "has", "plausible", "deniability"]
# ::lemmas ["steal", "my", "ass", "!", "they", "put", "the", "letter", "out", "so", "the", "information", "would", "go", "public", ".", "now", "they", "be", "recover", "it", ",", "&", "amp", ";", "she", "have", "plausible", "deniability"]
(c7-1 / multi-sentence
      :snt1 (c7-3 / steal-01
                  :ARG1 (c7-12 / ass
                               :part-of (c7-11 / i)))
      :snt2 (c7-8 / put-out-10
                  :ARG0 (c7-10 / they)
                  :ARG1 (c7-9 / letter)
                  :purpose (c7-13 / go-08
                                  :ARG1 (c7-4 / information)
                                  :ARG2 (c7-2 / public-02)))
      :snt3 (c7-14 / and
                   :op1 (c7-5 / recover-02
                              :ARG0 (c7-17 / they)
                              :ARG1 (c7-15 / it)
                              :time (c7-6 / now))
                   :op2 (c7-7 / deny-01
                              :ARG0 (c7-0 / she)
                              :mod (c7-16 / plausible))))

# ::snt Don't worry Madonna, I won't buy it!
# ::tokens ["Do", "n't", "worry", "Madonna", ",", "I", "wo", "n't", "buy", "it", "!"]
# ::lemmas ["do", "not", "worry", "Madonna", ",", "i", "will", "not", "buy", "it", "!"]
(c8-4 / worry-01
      :ARG0 (c8-3 / person
                  :name (c8-1 / name
                              :op1 "Madonna"))
      :ARG1-of (c8-5 / cause-01
                     :ARG0 (c8-0 / buy-01
                                 :ARG0 (c8-6 / i)
                                 :ARG1 (c8-2 / it)
                                 :polarity -))
      :polarity -
      :mode imperative)

# ::snt Tmz is complicit in criminal activity they knew it was stolen
# ::tokens ["Tmz", "is", "complicit", "in", "criminal", "activity", "they", "knew", "it", "was", "stolen"]
# ::lemmas ["tmz", "be", "complicit", "in", "criminal", "activity", "they", "know", "it", "be", "steal"]
(c9-4 / complicit
      :domain (c9-2 / person
                    :name (c9-0 / name
                                :op1 "Tmz"))
      :topic (c9-7 / activity-06
                   :ARG1 (c9-8 / criminal-03)
                   :ARG1-of (c9-3 / know-01
                                  :ARG0 (c9-5 / they)
                                  :ARG2 (c9-1 / steal-01
                                              :ARG1 (c9-6 / it)))))

# ::snt I'd be pissed too if someone literally stole my private property to make a quick buck
# ::tokens ["I", "'d", "be", "pissed", "too", "if", "someone", "literally", "stole", "my", "private", "property", "to", "make", "a", "quick", "buck"]
# ::lemmas ["i", "would", "be", "piss", "too", "if", "someone", "literally", "steal", "my", "private", "property", "to", "make", "a", "quick", "buck"]
(c10-5 / piss-03
       :ARG0 (c10-4 / someone)
       :ARG1 (c10-8 / i)
       :condition (c10-0 / steal-01
                         :ARG0 c10-4
                         :ARG1 (c10-3 / property
                                      :ARG1-of (c10-9 / private-02
                                                      :ARG2 c10-8))
                         :manner (c10-6 / literal)
                         :purpose (c10-2 / make-05
                                         :ARG0 c10-4
                                         :ARG1 (c10-1 / buck
                                                      :ARG1-of (c10-10 / quick-02))))
       :mod (c10-7 / too))

# ::snt It won't work. They are HIS (estate's) letters, not hers. Dies she have legal recourse, Harve???
# ::tokens ["It", "wo", "n't", "work", ".", "They", "are", "HIS", "(", "estate", "'s", ")", "letters", ",", "not", "hers", ".", "Dies", "she", "have", "legal", "recourse", ",", "Harve", "?", "?", "?"]
# ::lemmas ["it", "will", "not", "work", ".", "they", "be", "his", "(", "estate", "'s", ")", "letter", ",", "not", "her", ".", "die", "she", "have", "legal", "recourse", ",", "Harve", "?", "?", "?"]
(c11-11 / multi-sentence
        :snt1 (c11-17 / work-09
                      :ARG1 (c11-19 / it)
                      :polarity -)
        :snt2 (c11-12 / contrast-01
                      :ARG1 (c11-1 / letter
                                   :poss (c11-6 / he)
                                   :domain (c11-9 / they)
                                   :mod (c11-15 / estate))
                      :ARG2 (c11-10 / letter
                                    :poss (c11-0 / she)
                                    :ARG1-of (c11-3 / own-01
                                                    :ARG0 c11-0
                                                    :polarity -)))
        :snt3 (c11-4 / say-01
                     :ARG0 (c11-5 / i)
                     :ARG1 (c11-18 / have-03
                                   :ARG0 (c11-2 / she)
                                   :ARG1 (c11-14 / recourse
                                                 :ARG1-of (c11-7 / legal-02))
                                   :polarity (c11-8 / amr-unknown))
                     :ARG2 (c11-16 / person
                                   :name (c11-13 / name
                                                 :op1 "Harve"))))

# ::snt Should've stopped the plastic surgery
# ::tokens ["Should", "'ve", "stopped", "the", "plastic", "surgery"]
# ::lemmas ["should", "'ve", "stop", "the", "plastic", "surgery"]
(c12-0 / recommend-01
       :ARG1 (c12-3 / stop-01
                    :ARG1 (c12-1 / surgery-01
                                 :ARG2 (c12-2 / plastic))))

# ::snt She don't want the world to know how he use to tap that ass?
# ::tokens ["She", "do", "n't", "want", "the", "world", "to", "know", "how", "he", "use", "to", "tap", "that", "ass", "?"]
# ::lemmas ["she", "do", "not", "want", "the", "world", "to", "know", "how", "he", "use", "to", "tap", "that", "ass", "?"]
(c13-5 / want-01
       :ARG0 (c13-0 / she)
       :ARG1 (c13-3 / know-01
                    :ARG0 (c13-4 / world)
                    :ARG1 (c13-7 / thing
                                 :manner-of (c13-10 / tap-01
                                                    :ARG0 (c13-2 / he)
                                                    :ARG1 (c13-1 / ass
                                                                 :mod (c13-6 / that))
                                                    :time (c13-9 / use-03))))
       :polarity (c13-8 / amr-unknown)
       :polarity -)

# ::snt Yes dreadful what some will do for money.
# ::tokens ["Yes", "dreadful", "what", "some", "will", "do", "for", "money", "."]
# ::lemmas ["yes", "dreadful", "what", "some", "will", "do", "for", "money", "."]
(c14-3 / thing
       :mod (c14-4 / dreadful)
       :ARG1-of (c14-2 / do-02
                       :ARG0 (c14-1 / some)
                       :ARG2 (c14-0 / money)))

# ::snt Well maybe its got something to hide in it.
# ::tokens ["Well", "maybe", "its", "got", "something", "to", "hide", "in", "it", "."]
# ::lemmas ["well", "maybe", "its", "get", "something", "to", "hide", "in", "it", "."]
(c15-2 / possible-01
       :ARG1 (c15-1 / have-03
                    :ARG0 (c15-5 / it)
                    :ARG1 (c15-0 / something
                                 :ARG1-of (c15-4 / hide-01
                                                 :location c15-5)))
       :mod (c15-3 / well))

# ::snt Bitch pls u were not really a thing u were the hit girl he smashed, move ur old ass on
# ::tokens ["Bitch", "pls", "u", "were", "not", "really", "a", "thing", "u", "were", "the", "hit", "girl", "he", "smashed", ",", "move", "ur", "old", "ass", "on"]
# ::lemmas ["bitch", "pls", "u", "be", "not", "really", "a", "thing", "u", "be", "the", "hit", "girl", "he", "smash", ",", "move", "ur", "old", "ass", "on"]
(c16-3 / multi-sentence
       :snt1 (c16-5 / say-01
                    :ARG1 (c16-13 / thing
                                  :domain (c16-2 / you)
                                  :ARG1-of (c16-6 / real-04)
                                  :polarity -)
                    :ARG2 (c16-9 / person
                                 :name (c16-4 / name
                                              :op1 "Bitch")))
       :snt2 (c16-7 / and
                    :op1 (c16-14 / girl
                                 :ARG1-of (c16-8 / hit-01
                                                 :ARG0 (c16-11 / he))
                                 :domain (c16-15 / you
                                                 :part (c16-12 / ass
                                                               :mod (c16-1 / old))))
                    :op2 (c16-10 / move-01
                                 :ARG0 (c16-0 / you
                                              :part c16-12)
                                 :ARG1 c16-12
                                 :mode imperative)))

# ::snt She looks like a puma!
# ::tokens ["She", "looks", "like", "a", "puma", "!"]
# ::lemmas ["she", "look", "like", "a", "puma", "!"]
(c17-1 / look-02
       :ARG0 (c17-2 / she)
       :ARG1 (c17-0 / puma))

# ::snt Madonna is a demon.
# ::tokens ["Madonna", "is", "a", "demon", "."]
# ::lemmas ["Madonna", "be", "a", "demon", "."]
(c18-0 / demon
       :domain (c18-2 / person
                      :name (c18-1 / name
                                   :op1 "Madonna")))

# ::snt Well the letter was written to her and if she didn't toss it or give it away, it's her personal property, her keepsake...
# ::tokens ["Well", "the", "letter", "was", "written", "to", "her", "and", "if", "she", "did", "n't", "toss", "it", "or", "give", "it", "away", ",", "it", "'s", "her", "personal", "property", ",", "her", "keepsake", "..."]
# ::lemmas ["well", "the", "letter", "be", "write", "to", "she", "and", "if", "she", "do", "not", "toss", "it", "or", "give", "it", "away", ",", "it", "be", "her", "personal", "property", ",", "her", "keepsake", "..."]
(c19-9 / and
       :op1 (c19-7 / write-01
                   :ARG1 (c19-3 / letter)
                   :ARG2 (c19-2 / she))
       :op2 (c19-4 / property
                   :ARG1-of (c19-1 / personal-02
                                   :ARG2 c19-2)
                   :domain c19-3
                   :ARG1-of (c19-5 / keep-01
                                   :ARG0 c19-2)
                   :condition (c19-0 / or
                                     :op1 (c19-8 / toss-01
                                                 :ARG0 c19-2
                                                 :ARG1 c19-3
                                                 :polarity -)
                                     :op2 (c19-10 / give-away-02
                                                  :ARG0 c19-2
                                                  :ARG1 c19-3
                                                  :polarity -)))
       :mod (c19-6 / well))

# ::snt Was it necessary to post a not so flattering recent photo of ? Tupac's photo is from over years ago. i mean...come on.
# ::tokens ["Was", "it", "necessary", "to", "post", "a", "not", "so", "flattering", "recent", "photo", "of", "?", "Tupac", "'s", "photo", "is", "from", "over", "years", "ago", ".", "i", "mean", "...", "come", "on", "."]
# ::lemmas ["be", "it", "necessary", "to", "post", "a", "not", "so", "flattering", "recent", "photo", "of", "?", "Tupac", "'s", "photo", "be", "from", "over", "years", "ago", ".", "i", "mean", "...", "come", "on", "."]
(c20-10 / multi-sentence
        :snt1 (c20-15 / need-01
                      :polarity (c20-7 / amr-unknown)
                      :ARG1 (c20-17 / post-01
                                    :ARG1 (c20-11 / photo
                                                  :time (c20-16 / recent)
                                                  :ARG0-of (c20-14 / flattering-02
                                                                   :degree (c20-0 / so)
                                                                   :polarity -)
                                                  :source (c20-2 / photo
                                                                 :poss (c20-1 / person
                                                                              :name (c20-12 / name
                                                                                            :op1 "Tupac"))
                                                                 :time (c20-9 / before
                                                                              :op1 (c20-18 / now)
                                                                              :quant (c20-3 / over
                                                                                            :op1 (c20-6 / temporal-quantity
                                                                                                        :unit (c20-4 / year)
                                                                                                        :quant 1))))))
                      :snt2 (c20-5 / mean-01
                                   :ARG0 (c20-19 / i)
                                   :ARG2 (c20-13 / come-on-25
                                                 :ARG1 (c20-8 / you)
                                                 :mode imperative))))

# ::snt She is a senior, he.is gone. Who cares?
# ::tokens ["She", "is", "a", "senior", ",", "he.is", "gone", ".", "Who", "cares", "?"]
# ::lemmas ["she", "be", "a", "senior", ",", "he.is", "go", ".", "who", "care", "?"]
(c21-1 / multi-sentence
       :snt1 (c21-2 / senior
                    :domain (c21-0 / she))
       :snt2 (c21-6 / go-02
                    :ARG0 (c21-3 / he))
       :snt3 (c21-4 / care-01
                    :ARG0 (c21-5 / amr-unknown)))

# ::snt Whatever happened to privacy?
# ::tokens ["Whatever", "happened", "to", "privacy", "?"]
# ::lemmas ["whatever", "happen", "to", "privacy", "?"]
(c22-0 / event
       :mod (c22-1 / privacy)
       :mod (c22-2 / amr-unknown))

# ::snt I think it's disgusting they're trying to profit from auctioning Tupac's letter. It was intended for so she have the rights to it.
# ::tokens ["I", "think", "it", "'s", "disgusting", "they", "'re", "trying", "to", "profit", "from", "auctioning", "Tupac", "'s", "letter", ".", "It", "was", "intended", "for", "so", "she", "have", "the", "rights", "to", "it", "."]
# ::lemmas ["i", "think", "it", "be", "disgusting", "they", "be", "try", "to", "profit", "from", "auction", "Tupac", "'s", "letter", ".", "it", "be", "intend", "for", "so", "she", "have", "the", "right", "to", "it", "."]
(c23-0 / multi-sentence
       :snt1 (c23-10 / think-01
                     :ARG0 (c23-11 / i)
                     :ARG1 (c23-14 / disgust-01
                                   :ARG0 (c23-12 / try-01
                                                 :ARG0 (c23-13 / they)
                                                 :ARG1 (c23-8 / profit-01
                                                              :ARG0 c23-13
                                                              :ARG1 (c23-4 / auction-off-01
                                                                           :ARG0 c23-13
                                                                           :ARG1 (c23-9 / letter
                                                                                        :poss (c23-1 / person
                                                                                                     :name (c23-2 / name
                                                                                                                  :op1 "Tupac"))))))))
       :snt2 (c23-3 / intend-01
                    :ARG1 (c23-7 / have-purpose-91
                                 :ARG1 (c23-15 / it)
                                 :ARG2 (c23-5 / right-05
                                              :ARG1 (c23-6 / she)
                                              :ARG2 c23-15))))

# ::snt Why? Don't people already know what's in the letter?
# ::tokens ["Why", "?", "Do", "n't", "people", "already", "know", "what", "'s", "in", "the", "letter", "?"]
# ::lemmas ["why", "?", "do", "not", "people", "already", "know", "what", "be", "in", "the", "letter", "?"]
(c24-0 / multi-sentence
       :snt1 (c24-4 / cause-01
                    :ARG0 (c24-8 / amr-unknown))
       :snt2 (c24-1 / know-01
                    :ARG0 (c24-2 / person)
                    :ARG1 (c24-6 / thing
                                 :location (c24-3 / letter))
                    :time (c24-7 / already)
                    :polarity (c24-5 / amr-unknown)
                    :polarity -))

# ::snt Y Madonna please tell tha PLANET y ........ I'll wait for it
# ::tokens ["Y", "Madonna", "please", "tell", "tha", "PLANET", "y", "........", "I", "'ll", "wait", "for", "it"]
# ::lemmas ["Y", "Madonna", "please", "tell", "tha", "PLANET", "y", "........", "i", "'ll", "wait", "for", "it"]
(c25-2 / multi-sentence
       :snt1 (c25-7 / tell-01
                    :ARG0 (c25-4 / person
                                 :name (c25-1 / name
                                              :op1 "Madonna"))
                    :ARG2 (c25-0 / you)
                    :polite +
                    :mode imperative)
       :snt2 (c25-5 / wait-01
                    :ARG1 (c25-6 / i)
                    :ARG2 (c25-3 / it)))

# ::snt Madonna looks scary as hell.
# ::tokens ["Madonna", "looks", "scary", "as", "hell", "."]
# ::lemmas ["Madonna", "look", "scary", "as", "hell", "."]
(c26-3 / look-02
       :ARG0 (c26-2 / person
                    :name (c26-0 / name
                                 :op1 "Madonna"))
       :ARG1 (c26-1 / scary-03
                    :ARG0 c26-2
                    :degree (c26-4 / as-hell)))

# ::snt The next question is WHY THO?
# ::tokens ["The", "next", "question", "is", "WHY", "THO", "?"]
# ::lemmas ["the", "next", "question", "be", "why", "THO", "?"]
(c27-3 / question-01
       :ARG1 (c27-2 / cause-01
                    :ARG0 (c27-1 / amr-unknown)
                    :ARG1 (c27-4 / that))
       :mod (c27-0 / next))

# ::snt Wowsers who knew
# ::tokens ["Wowsers", "who", "knew"]
# ::lemmas ["wowser", "who", "know"]
(c28-1 / person
       :ARG0-of (c28-2 / know-01)
       :mod (c28-0 / wowser))

# ::snt Who would buy this stuff? Weirdos
# ::tokens ["Who", "would", "buy", "this", "stuff", "?", "Weirdos"]
# ::lemmas ["who", "would", "buy", "this", "stuff", "?", "weirdo"]
(c29-1 / multi-sentence
       :snt1 (c29-0 / buy-01
                    :ARG0 (c29-3 / amr-unknown)
                    :ARG1 (c29-2 / stuff
                                 :mod (c29-5 / this)))
       :snt2 (c29-4 / weirdo))

# ::snt Why action it off when he's supposed to be dead? Which I still believe he's still alive
# ::tokens ["Why", "action", "it", "off", "when", "he", "'s", "supposed", "to", "be", "dead", "?", "Which", "I", "still", "believe", "he", "'s", "still", "alive"]
# ::lemmas ["why", "action", "it", "off", "when", "he", "be", "suppose", "to", "be", "dead", "?", "which", "i", "still", "believe", "he", "be", "still", "alive"]
(c30-2 / multi-sentence
       :snt1 (c30-8 / cause-01
                    :ARG0 (c30-5 / amr-unknown)
                    :ARG1 (c30-11 / act-off-02
                                  :ARG1 (c30-10 / it)
                                  :time (c30-3 / suppose-02
                                               :ARG1 (c30-6 / he)
                                               :ARG2 (c30-12 / die-01
                                                             :ARG1 c30-6))))
       :snt2 (c30-1 / believe-01
                    :ARG0 (c30-4 / i)
                    :ARG1 (c30-7 / live-01
                                 :ARG0 (c30-9 / he)
                                 :mod (c30-0 / still))
                    :mod (c30-13 / still)))

# ::snt So is The Material Girl but not your Reading Material Girl....got it!
# ::tokens ["So", "is", "The", "Material", "Girl", "but", "not", "your", "Reading", "Material", "Girl", "....", "got", "it", "!"]
# ::lemmas ["so", "be", "The", "Material", "Girl", "but", "not", "your", "Reading", "Material", "Girl", "....", "get", "it", "!"]
(c31-3 / multi-sentence
       :snt1 (c31-7 / contrast-01
                    :ARG1 (c31-6 / publication
                                 :name (c31-1 / name
                                              :op1 "The"
                                              :op2 "Material"
                                              :op3 "Girl"))
                    :ARG2 (c31-2 / publication
                                 :name (c31-5 / name
                                              :op1 "Reading"
                                              :op2 "Material"
                                              :op3 "Girl")
                                 :poss (c31-0 / you)
                                 :polarity -))
       :snt2 (c31-9 / get-02
                    :ARG0 (c31-8 / i)
                    :ARG1 (c31-4 / it)))

# ::snt Too bad we can't read the full story cause of the SHIT ads that keep popping up. "SLOW CLAP" way to go!
# ::tokens ["Too", "bad", "we", "ca", "n't", "read", "the", "full", "story", "cause", "of", "the", "SHIT", "ads", "that", "keep", "popping", "up", ".", "\"", "SLOW", "CLAP", "\"", "way", "to", "go", "!"]
# ::lemmas ["too", "bad", "we", "can", "not", "read", "the", "full", "story", "cause", "of", "the", "SHIT", "ad", "that", "keep", "pop", "up", ".", "\"", "slow", "CLAP", "\"", "way", "to", "go", "!"]
(c33-3 / multi-sentence
       :snt1 (c33-2 / bad-07
                    :ARG1 (c33-8 / possible-01
                                 :ARG1 (c33-6 / read-01
                                              :ARG0 (c33-11 / we)
                                              :ARG1 (c33-5 / story
                                                           :mod (c33-0 / full))
                                              :ARG1-of (c33-12 / cause-01
                                                               :ARG0 (c33-14 / advertise-01
                                                                             :ARG1 (c33-1 / shit)
                                                                             :ARG1-of (c33-4 / pop-up-03)
                                                                             :ARG1-of (c33-9 / keep-02))))
                                 :polarity -)
                    :ARG2-of (c33-7 / have-degree-91
                                    :ARG1 c33-8
                                    :ARG3 (c33-13 / too)))
       :snt2 (c33-10 / way
                     :manner-of (c33-15 / go-06)
                     :ARG1-of (c33-16 / smooth-06)
                     :mode expressive))

# ::snt Oh. I didnt know this. Thanks!
# ::tokens ["Oh", ".", "I", "did", "nt", "know", "this", ".", "Thanks", "!"]
# ::lemmas ["oh", ".", "i", "do", "not", "know", "this", ".", "thank", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-0 / oh
                    :mode expressive)
       :snt2 (c34-3 / know-01
                    :ARG0 (c34-4 / i)
                    :ARG1 (c34-5 / this)
                    :polarity -)
       :snt3 (c34-6 / thank-01
                    :ARG0 c34-4
                    :mode expressive)
       :ARG1 (c34-1 / you))

# ::snt oui, c'est fou !
# ::tokens ["oui", ",", "c'est", "fou", "!"]
# ::lemmas ["oui", ",", "c'", "fou", "!"]
(c35-1 / possible-01
       :ARG1 (c35-0 / foul-01)
       :mod (c35-2 / amr-unintelligible
                   :value "oui")
       :polarity -)

# ::snt Cette lettre est
# ::tokens ["Cette", "lettre", "est"]
# ::lemmas ["Cette", "lettre", "est"]
(c36-0 / case-03
       :ARG1 (c36-2 / rent-01)
       :mod (c36-1 / cette))

# ::snt She should get all her rightful belongings back. They were stolen obviously she would not give personal letters to anyone.
# ::tokens ["She", "should", "get", "all", "her", "rightful", "belongings", "back", ".", "They", "were", "stolen", "obviously", "she", "would", "not", "give", "personal", "letters", "to", "anyone", "."]
# ::lemmas ["she", "should", "get", "all", "her", "rightful", "belonging", "back", ".", "they", "be", "steal", "obviously", "she", "would", "not", "give", "personal", "letter", "to", "anyone", "."]
(c37-3 / multi-sentence
       :snt1 (c37-5 / recommend-01
                    :ARG1 (c37-11 / get-back-09
                                  :ARG0 (c37-4 / she)
                                  :ARG1 (c37-10 / thing
                                                :ARG0-of (c37-2 / belong-01
                                                                :ARG1 c37-4)
                                                :mod (c37-6 / all)
                                                :ARG2-of (c37-13 / rightful-01
                                                                 :ARG1 c37-4))))
       :snt2 (c37-0 / steal-01
                    :ARG1 (c37-14 / they)
                    :ARG1-of (c37-1 / obvious-01
                                    :ARG1 (c37-9 / give-01
                                                 :ARG0 (c37-15 / she)
                                                 :ARG1 (c37-7 / letter
                                                              :ARG1-of (c37-8 / personal-02))
                                                 :ARG2 (c37-12 / anyone)
                                                 :polarity -))))

# ::snt How come TMZ is all nigga shit!!!
# ::tokens ["How", "come", "TMZ", "is", "all", "nigga", "shit", "!", "!", "!"]
# ::lemmas ["how", "come", "TMZ", "be", "all", "nigga", "shit", "!", "!", "!"]
(c38-3 / cause-01
       :ARG0 (c38-5 / amr-unknown)
       :ARG1 (c38-1 / shit
                    :mod (c38-0 / nigga)
                    :domain (c38-6 / company
                                   :name (c38-2 / name
                                                :op1 "TMZ"))
                    :mod (c38-4 / all)))

# ::snt Madonna really. You had some type of relationship with him own it and move on.
# ::tokens ["Madonna", "really", ".", "You", "had", "some", "type", "of", "relationship", "with", "him", "own", "it", "and", "move", "on", "."]
# ::lemmas ["Madonna", "really", ".", "you", "have", "some", "type", "of", "relationship", "with", "he", "own", "it", "and", "move", "on", "."]
(c39-3 / multi-sentence
       :snt1 (c39-7 / person
                    :name (c39-2 / name
                                 :op1 "Madonna")
                    :ARG1-of (c39-5 / real-04))
       :snt2 (c39-10 / and
                     :op1 (c39-0 / own-01
                                 :ARG0 (c39-1 / you)
                                 :ARG1 (c39-11 / relation-03
                                               :ARG0 c39-1
                                               :ARG2 (c39-6 / he)
                                               :mod (c39-9 / type
                                                           :mod (c39-4 / some))))
                     :op2 (c39-8 / move-01
                                 :ARG1 c39-1)))

# ::snt Get over it Madonna Damn! You was thirsty and he didn't want you!
# ::tokens ["Get", "over", "it", "Madonna", "Damn", "!", "You", "was", "thirsty", "and", "he", "did", "n't", "want", "you", "!"]
# ::lemmas ["get", "over", "it", "Madonna", "Damn", "!", "you", "be", "thirsty", "and", "he", "do", "not", "want", "you", "!"]
(c40-2 / multi-sentence
       :snt1 (c40-4 / say-01
                    :ARG0 (c40-10 / i)
                    :ARG1 (c40-0 / over-02
                                 :ARG1 (c40-7 / person
                                              :name (c40-3 / name
                                                           :op1 "Madonna"))
                                 :ARG2 (c40-5 / it)
                                 :mode imperative)
                    :ARG2 c40-7)
       :snt2 (c40-11 / and
                     :op1 (c40-9 / thirst-01
                                 :ARG0 (c40-1 / you))
                     :op2 (c40-8 / want-01
                                 :ARG0 (c40-6 / he)
                                 :ARG1 c40-1
                                 :polarity -)))

# ::snt Why What secrets does it be hold?
# ::tokens ["Why", "What", "secrets", "does", "it", "be", "hold", "?"]
# ::lemmas ["why", "what", "secret", "do", "it", "be", "hold", "?"]
(c41-1 / hold-01
       :ARG0 (c41-2 / it)
       :ARG1 (c41-3 / secret
                    :mod (c41-0 / amr-unknown
                                :purpose-of c41-1)))

# ::snt is afraid and a long line of other similar correspondence will go on sale and show what an "active" youth she had
# ::tokens ["is", "afraid", "and", "a", "long", "line", "of", "other", "similar", "correspondence", "will", "go", "on", "sale", "and", "show", "what", "an", "\"", "active", "\"", "youth", "she", "had"]
# ::lemmas ["be", "afraid", "and", "a", "long", "line", "of", "other", "similar", "correspondence", "will", "go", "on", "sale", "and", "show", "what", "an", "\"", "active", "\"", "youth", "she", "have"]
(c42-10 / and
        :op1 (c42-0 / fear-01)
        :op2 (c42-4 / sell-01
                    :ARG1 (c42-7 / line
                                 :ARG1-of (c42-11 / long-03)
                                 :consist-of (c42-8 / correspondence
                                                    :ARG1-of (c42-5 / resemble-01)
                                                    :mod (c42-1 / other))))
        :op3 (c42-2 / show-01
                    :ARG0 c42-7
                    :ARG1 (c42-6 / have-03
                                 :ARG0 (c42-12 / she)
                                 :ARG1 (c42-3 / youth
                                              :mod (c42-9 / active)))))

# ::snt She should, it was meant for her. It's her letter.!
# ::tokens ["She", "should", ",", "it", "was", "meant", "for", "her", ".", "It", "'s", "her", "letter", ".", "!"]
# ::lemmas ["she", "should", ",", "it", "be", "mean", "for", "she", ".", "it", "be", "her", "letter", ".", "!"]
(c43-1 / multi-sentence
       :snt1 (c43-4 / recommend-01
                    :ARG2 (c43-2 / she))
       :snt2 (c43-5 / mean-02
                    :ARG1 (c43-7 / it)
                    :ARG2 (c43-0 / she))
       :snt3 (c43-6 / letter
                    :poss (c43-8 / she)
                    :domain (c43-3 / it)))

# ::snt Snap
# ::tokens ["Snap"]
# ::lemmas ["snap"]
(c44-1 / person
       :name (c44-0 / name
                    :op1 "Snap"))

# ::snt If the hollywood bicycle doesn't own it how can she/it have any say in the matter.....
# ::tokens ["If", "the", "hollywood", "bicycle", "does", "n't", "own", "it", "how", "can", "she", "/", "it", "have", "any", "say", "in", "the", "matter", "....."]
# ::lemmas ["if", "the", "hollywood", "bicycle", "do", "not", "own", "it", "how", "can", "she", "/", "it", "have", "any", "say", "in", "the", "matter", "....."]
(c45-6 / possible-01
       :ARG1 (c45-5 / have-03
                    :ARG0 (c45-4 / slash
                                 :op1 (c45-0 / she)
                                 :op2 (c45-8 / it))
                    :ARG1 (c45-11 / say-01
                                  :ARG0 c45-4
                                  :ARG1 (c45-2 / matter)
                                  :mod (c45-9 / any)))
       :condition (c45-1 / own-01
                         :ARG0 (c45-7 / company
                                      :name (c45-3 / name
                                                   :op1 "Hollywood"
                                                   :op2 "Bike"))
                         :ARG1 c45-8
                         :polarity -)
       :manner (c45-10 / amr-unknown))

# ::snt Wth happened to her face!?
# ::tokens ["Wth", "happened", "to", "her", "face", "!", "?"]
# ::lemmas ["Wth", "happen", "to", "her", "face", "!", "?"]
(c46-2 / amr-unknown
       :destination (c46-1 / face
                           :part-of (c46-0 / she)))

# ::snt how did it get in their hands.
# ::tokens ["how", "did", "it", "get", "in", "their", "hands", "."]
# ::lemmas ["how", "do", "it", "get", "in", "their", "hand", "."]
(c47-4 / get-03
       :ARG1 (c47-2 / it)
       :ARG2 (c47-0 / in-ones-hands-07
                    :ARG0 (c47-1 / they)
                    :ARG1 c47-2)
       :manner (c47-3 / amr-unknown))

# ::snt Why should we care?
# ::tokens ["Why", "should", "we", "care", "?"]
# ::lemmas ["why", "should", "we", "care", "?"]
(c48-1 / cause-01
       :ARG0 (c48-3 / amr-unknown)
       :ARG1 (c48-0 / recommend-01
                    :ARG1 (c48-4 / care-01
                                 :ARG0 (c48-2 / we))))

# ::snt Everyone should just stay out there business. Legends
# ::tokens ["Everyone", "should", "just", "stay", "out", "there", "business", ".", "Legends"]
# ::lemmas ["everyone", "should", "just", "stay", "out", "there", "business", ".", "legend"]
(c49-2 / multi-sentence
       :snt1 (c49-4 / recommend-01
                    :ARG1 (c49-3 / stay-01
                                 :ARG1 (c49-5 / everyone)
                                 :ARG3 (c49-0 / out-there)
                                 :topic (c49-1 / business
                                               :poss c49-5)
                                 :mod (c49-7 / just)))
       :snt2 (c49-6 / Legends))

# ::snt If the letter was written to her from him...why is it not in her possession and going into auction? What am I missing here?
# ::tokens ["If", "the", "letter", "was", "written", "to", "her", "from", "him", "...", "why", "is", "it", "not", "in", "her", "possession", "and", "going", "into", "auction", "?", "What", "am", "I", "missing", "here", "?"]
# ::lemmas ["if", "the", "letter", "be", "write", "to", "she", "from", "he", "...", "why", "be", "it", "not", "in", "her", "possession", "and", "go", "into", "auction", "?", "what", "be", "i", "miss", "here", "?"]
(c50-0 / multi-sentence
       :snt1 (c50-3 / have-condition-91
                    :ARG1 (c50-7 / cause-01
                                 :ARG0 (c50-12 / amr-unknown)
                                 :ARG1 (c50-11 / and
                                               :op1 (c50-4 / possess-01
                                                           :ARG0 (c50-1 / she)
                                                           :ARG1 (c50-5 / letter))
                                               :op2 (c50-8 / auction-off-01
                                                           :ARG1 c50-5)
                                               :polarity -))
                    :ARG2 (c50-9 / write-01
                                 :ARG0 (c50-10 / he)
                                 :ARG1 c50-5
                                 :ARG2 c50-1))
       :snt2 (c50-6 / miss-01
                    :ARG0 (c50-13 / i)
                    :ARG1 c50-12)
       :location (c50-2 / here))
