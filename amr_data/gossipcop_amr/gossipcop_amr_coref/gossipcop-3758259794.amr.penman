# ::snt Congratulations and Welcome to the wonderful world of twins! I'm a mom of twins! It's the best thing in the entire world!
# ::tokens ["Congratulations", "and", "Welcome", "to", "the", "wonderful", "world", "of", "twins", "!", "I", "'m", "a", "mom", "of", "twins", "!", "It", "'s", "the", "best", "thing", "in", "the", "entire", "world", "!"]
# ::lemmas ["congratulation", "and", "welcome", "to", "the", "wonderful", "world", "of", "twin", "!", "i", "be", "a", "mom", "of", "twin", "!", "it", "be", "the", "good", "thing", "in", "the", "entire", "world", "!"]
(c1-0 / multi-sentence
      :snt1 (c1-13 / and
                   :op1 (c1-8 / congratulate-01)
                   :op2 (c1-9 / welcome-01
                              :ARG2 (c1-7 / world
                                          :ARG1-of (c1-17 / wonderful-03)
                                          :consist-of (c1-11 / twin))))
      :snt2 (c1-4 / have-rel-role-91
                  :ARG0 (c1-12 / i)
                  :ARG1 (c1-16 / twin)
                  :ARG2 (c1-5 / mom))
      :snt3 (c1-14 / thing
                   :ARG1-of (c1-1 / good-02
                                  :ARG2-of (c1-10 / have-degree-91
                                                  :ARG1 c1-14
                                                  :ARG3 (c1-15 / most)
                                                  :ARG5 (c1-3 / thing
                                                              :location (c1-2 / world
                                                                              :mod (c1-6 / entire)))))))

# ::snt Finally. George has become a grandfather.
# ::tokens ["Finally", ".", "George", "has", "become", "a", "grandfather", "."]
# ::lemmas ["finally", ".", "George", "have", "become", "a", "grandfather", "."]
(c2-0 / become-01
      :ARG1 (c2-4 / person
                  :name (c2-1 / name
                              :op1 "George"))
      :ARG2 (c2-2 / person
                  :ARG0-of (c2-3 / have-rel-role-91
                                 :ARG2 (c2-5 / grandfather)))
      :li "-1")

# ::snt So does that mean the George Clooney Effect is no longer a thing?
# ::tokens ["So", "does", "that", "mean", "the", "George", "Clooney", "Effect", "is", "no", "longer", "a", "thing", "?"]
# ::lemmas ["so", "do", "that", "mean", "the", "George", "Clooney", "Effect", "be", "no", "long", "a", "thing", "?"]
(c3-0 / mean-01
      :ARG1 (c3-4 / that)
      :ARG2 (c3-7 / thing
                  :domain (c3-6 / affect-01
                                :ARG0 (c3-3 / person
                                            :name (c3-1 / name
                                                        :op1 "George"
                                                        :op2 "Clooney")))
                  :time (c3-2 / no-longer))
      :polarity (c3-5 / amr-unknown))

# ::snt I wish it to all members of this business forum
# ::tokens ["I", "wish", "it", "to", "all", "members", "of", "this", "business", "forum"]
# ::lemmas ["i", "wish", "it", "to", "all", "member", "of", "this", "business", "forum"]
(c4-7 / wish-01
      :ARG0 (c4-8 / i)
      :ARG1 (c4-3 / it)
      :ARG2 (c4-6 / person
                  :ARG0-of (c4-5 / have-org-role-91
                                 :ARG1 (c4-0 / forum
                                             :mod (c4-1 / business)
                                             :mod (c4-9 / this))
                                 :ARG2 (c4-2 / member))
                  :mod (c4-4 / all)))

# ::snt Ella &amp; Alexander
# ::tokens ["Ella", "&", "amp", ";", "Alexander"]
# ::lemmas ["Ella", "&", "amp", ";", "Alexander"]
(c6-5 / and
      :op1 (c6-3 / person
                 :name (c6-0 / name
                             :op1 "Ella"))
      :op2 (c6-1 / person
                 :name (c6-2 / name
                             :op1 "amp"))
      :op3 (c6-6 / person
                 :name (c6-4 / name
                             :op1 "Alexander")))

# ::snt A beautiful couple giving the world another beautiful couple. God bless your new family!
# ::tokens ["A", "beautiful", "couple", "giving", "the", "world", "another", "beautiful", "couple", ".", "God", "bless", "your", "new", "family", "!"]
# ::lemmas ["a", "beautiful", "couple", "give", "the", "world", "another", "beautiful", "couple", ".", "God", "bless", "your", "new", "family", "!"]
(c7-3 / multi-sentence
      :snt1 (c7-11 / give-01
                   :ARG0 (c7-8 / couple
                               :ARG1-of (c7-1 / beautiful-02))
                   :ARG1 (c7-12 / couple
                                :ARG1-of (c7-5 / beautiful-02)
                                :mod (c7-10 / another))
                   :ARG2 (c7-9 / world))
      :snt2 (c7-13 / bless-01
                   :ARG0 (c7-6 / person
                               :name (c7-4 / name
                                           :op1 "God"))
                   :ARG1 (c7-0 / family
                               :ARG1-of (c7-7 / new-01)
                               :poss (c7-2 / you))
                   :mode imperative))

# ::snt Aww. Congrats
# ::tokens ["Aww", ".", "Congrats"]
# ::lemmas ["Aww", ".", "congrat"]
(c8-0 / congratulate-01
      :mod (c8-1 / aw
                 :mode expressive))

# ::snt Beutifull
# ::tokens ["Beutifull"]
# ::lemmas ["beutifull"]
(c9-1 / person
      :name (c9-0 / name
                  :op1 "Beutifull"))

# ::snt Lo s
# ::tokens ["Lo", "s"]
# ::lemmas ["Lo", "s"]
(c10-0 / lo
       :mode expressive)

# ::snt Congratulations Amal and George, Welcome to the world Alexander and Ella
# ::tokens ["Congratulations", "Amal", "and", "George", ",", "Welcome", "to", "the", "world", "Alexander", "and", "Ella"]
# ::lemmas ["Congratulations", "Amal", "and", "George", ",", "Welcome", "to", "the", "world", "Alexander", "and", "Ella"]
(c11-12 / and
        :op1 (c11-6 / congratulate-01
                    :ARG1 (c11-11 / and
                                  :op1 (c11-3 / person
                                              :name (c11-0 / name
                                                           :op1 "Amal"))
                                  :op2 (c11-1 / person
                                              :name (c11-2 / name
                                                           :op1 "George"))))
        :op2 (c11-7 / welcome-01
                    :ARG1 (c11-8 / and
                                 :op1 (c11-13 / person
                                              :name (c11-4 / name
                                                           :op1 "Alexander"))
                                 :op2 (c11-9 / person
                                             :name (c11-10 / name
                                                           :op1 "Ella")))
                    :ARG2 (c11-5 / world)))

# ::snt sorry sis
# ::tokens ["sorry", "sis"]
# ::lemmas ["sorry", "sis"]
(c12-2 / say-01
       :ARG1 (c12-1 / sorry-01)
       :ARG2 (c12-0 / sis))

# ::snt I can sleep better tonight, knowing this.
# ::tokens ["I", "can", "sleep", "better", "tonight", ",", "knowing", "this", "."]
# ::lemmas ["i", "can", "sleep", "well", "tonight", ",", "know", "this", "."]
(c13-4 / possible-01
       :ARG1 (c13-2 / sleep-01
                    :ARG0 (c13-6 / i)
                    :time (c13-9 / date-entity
                                 :dayperiod (c13-0 / night)
                                 :mod (c13-7 / today))
                    :manner (c13-5 / know-01
                                   :ARG0 c13-6
                                   :ARG1 (c13-10 / this))
                    :ARG1-of (c13-3 / have-degree-91
                                    :ARG2 (c13-8 / good-02
                                                 :ARG1 c13-2)
                                    :ARG3 (c13-1 / more))))

# ::snt Wait, I thought the antichrist was one person!
# ::tokens ["Wait", ",", "I", "thought", "the", "antichrist", "was", "one", "person", "!"]
# ::lemmas ["wait", ",", "i", "think", "the", "antichrist", "be", "one", "person", "!"]
(c14-1 / and
       :op1 (c14-3 / wait-01
                   :ARG1 (c14-0 / you)
                   :mode imperative)
       :op2 (c14-5 / think-01
                   :ARG0 (c14-4 / i)
                   :ARG1 (c14-2 / person
                                :domain (c14-6 / antichrist)
                                :quant 1)))

# ::snt Why is this news
# ::tokens ["Why", "is", "this", "news"]
# ::lemmas ["why", "be", "this", "news"]
(c15-2 / news
       :mod (c15-3 / this)
       :ARG1-of (c15-1 / cause-01
                       :ARG0 (c15-0 / amr-unknown)))

# ::snt Who gives a shit
# ::tokens ["Who", "gives", "a", "shit"]
# ::lemmas ["who", "give", "a", "shit"]
(c16-0 / give-16
       :ARG0 (c16-2 / amr-unknown)
       :ARG1 (c16-1 / shit))

# ::snt Who cares
# ::tokens ["Who", "cares"]
# ::lemmas ["who", "care"]
(c17-0 / care-01
       :ARG0 (c17-1 / amr-unknown))

# ::snt PLOP!
# ::tokens ["PLOP", "!"]
# ::lemmas ["PLOP", "!"]
(c18-1 / plan-01
       :ARG0 (c18-0 / you)
       :mode imperative)

# ::snt So !! What makes these two so special? Who cares
# ::tokens ["So", "!", "!", "What", "makes", "these", "two", "so", "special", "?", "Who", "cares"]
# ::lemmas ["so", "!", "!", "what", "make", "these", "two", "so", "special", "?", "who", "care"]
(c19-1 / multi-sentence
       :snt1 (c19-2 / so
                    :mode expressive)
       :snt2 (c19-4 / care-01
                    :ARG0 (c19-6 / amr-unknown)
                    :ARG1 (c19-3 / make-02
                                 :ARG0 c19-6)
                    :ARG1 (c19-0 / special-02
                                 :ARG1 (c19-5 / thing
                                              :mod (c19-7 / this)
                                              :quant 2)
                                 :degree c19-2)))

# ::snt CongratulationsClooney and Amal.
# ::tokens ["CongratulationsClooney", "and", "Amal", "."]
# ::lemmas ["CongratulationsClooney", "and", "Amal", "."]
(c20-4 / congratulate-01
       :ARG1 (c20-5 / and
                    :op1 (c20-3 / person
                                :name (c20-0 / name
                                             :op1 "Clooney"))
                    :op2 (c20-1 / person
                                :name (c20-2 / name
                                             :op1 "Amal"))))

# ::snt That's nice no one cares.
# ::tokens ["That", "'s", "nice", "no", "one", "cares", "."]
# ::lemmas ["that", "be", "nice", "no", "one", "care", "."]
(c21-2 / nice-01
       :ARG1 (c21-3 / that)
       :ARG1-of (c21-0 / care-01
                       :ARG0 (c21-1 / no-one)))

# ::snt He will be using a walker before those kids get to highschool
# ::tokens ["He", "will", "be", "using", "a", "walker", "before", "those", "kids", "get", "to", "highschool"]
# ::lemmas ["he", "will", "be", "use", "a", "walker", "before", "those", "kid", "get", "to", "highschool"]
(c22-7 / use-01
       :ARG0 (c22-1 / he)
       :ARG1 (c22-3 / walker)
       :time (c22-0 / before
                    :op1 (c22-6 / get-05
                                :ARG1 (c22-2 / kid
                                             :mod (c22-5 / that))
                                :ARG2 (c22-4 / high-school))))

# ::snt Need to stop with the celebrity praises....people have twins daily
# ::tokens ["Need", "to", "stop", "with", "the", "celebrity", "praises", "....", "people", "have", "twins", "daily"]
# ::lemmas ["need", "to", "stop", "with", "the", "celebrity", "praise", "....", "people", "have", "twin", "daily"]
(c23-1 / multi-sentence
       :snt1 (c23-0 / need-01
                    :ARG1 (c23-2 / stop-01
                                 :ARG1 (c23-6 / praise-01
                                              :ARG0 (c23-7 / celebrity))))
       :snt2 (c23-5 / have-05
                    :ARG0 (c23-3 / person)
                    :ARG1 (c23-10 / person
                                  :ARG0-of (c23-8 / have-rel-role-91
                                                  :ARG1 c23-3
                                                  :ARG2 (c23-9 / twin)))
                    :frequency (c23-4 / rate-entity-91
                                      :ARG3 (c23-12 / temporal-quantity
                                                    :unit (c23-11 / day)
                                                    :quant 1))))

# ::snt The only news here is that Clooney should not be fathering children at his old ass age
# ::tokens ["The", "only", "news", "here", "is", "that", "Clooney", "should", "not", "be", "fathering", "children", "at", "his", "old", "ass", "age"]
# ::lemmas ["the", "only", "news", "here", "be", "that", "Clooney", "should", "not", "be", "father", "child", "at", "his", "old", "ass", "age"]
(c24-3 / news
       :mod (c24-0 / only)
       :location (c24-5 / here)
       :topic (c24-4 / recommend-01
                     :ARG1 (c24-1 / father-01
                                  :ARG0 (c24-6 / person
                                               :name (c24-7 / name
                                                            :op1 "Clooney"))
                                  :ARG1 (c24-8 / child)
                                  :time (c24-11 / age-01
                                                :ARG1 c24-6
                                                :mod (c24-2 / old)
                                                :mod (c24-10 / ass
                                                             :part-of (c24-9 / he)))
                                  :polarity -)))

# ::snt Big deal.
# ::tokens ["Big", "deal", "."]
# ::lemmas ["big", "deal", "."]
(c25-0 / deal-03
       :mod (c25-1 / big))

# ::snt Really?! Who cares.
# ::tokens ["Really", "?", "!", "Who", "cares", "."]
# ::lemmas ["really", "?", "!", "who", "care", "."]
(c26-0 / care-01
       :ARG0 (c26-2 / amr-unknown)
       :ARG1-of (c26-1 / real-04)
       :mode expressive)

# ::snt Poor kids born to liberal parents
# ::tokens ["Poor", "kids", "born", "to", "liberal", "parents"]
# ::lemmas ["poor", "kid", "bear", "to", "liberal", "parent"]
(c27-0 / bear-02
       :ARG0 (c27-4 / person
                    :ARG0-of (c27-2 / have-rel-role-91
                                    :ARG2 (c27-1 / parent))
                    :ARG1-of (c27-3 / liberal-02))
       :ARG1 (c27-5 / kid
                    :mod (c27-6 / poor)))

# ::snt Just what the world needs..kids parented by a muslim and an atheist
# ::tokens ["Just", "what", "the", "world", "needs", "..", "kids", "parented", "by", "a", "muslim", "and", "an", "atheist"]
# ::lemmas ["just", "what", "the", "world", "need", "..", "kid", "parent", "by", "a", "muslim", "and", "an", "atheist"]
(c28-12 / thing
        :ARG1-of (c28-1 / need-01
                        :ARG0 (c28-9 / world))
        :mod (c28-10 / just)
        :ARG1-of (c28-0 / mean-01
                        :ARG2 (c28-5 / have-rel-role-91
                                     :ARG0 (c28-3 / and
                                                  :op1 (c28-6 / person
                                                              :mod (c28-4 / religious-group
                                                                          :name (c28-7 / name
                                                                                       :op1 "Islam")))
                                                  :op2 (c28-2 / person
                                                              :mod (c28-11 / atheist)))
                                     :ARG1 (c28-8 / kid)
                                     :ARG2 (c28-13 / parent))))

# ::snt Who gives a crap?
# ::tokens ["Who", "gives", "a", "crap", "?"]
# ::lemmas ["who", "give", "a", "crap", "?"]
(c29-0 / give-16
       :ARG0 (c29-2 / amr-unknown)
       :ARG1 (c29-1 / crap-01))

# ::snt We could care less abt the clooney's
# ::tokens ["We", "could", "care", "less", "abt", "the", "clooney", "'s"]
# ::lemmas ["we", "could", "care", "less", "abt", "the", "clooney", "'s"]
(c30-3 / possible-01
       :ARG1 (c30-2 / have-degree-91
                    :ARG1 (c30-5 / we)
                    :ARG2 (c30-6 / care-01
                                 :ARG0 c30-5
                                 :ARG1 (c30-0 / person
                                              :ARG0-of (c30-7 / have-rel-role-91
                                                              :ARG2 (c30-1 / sister))))
                    :ARG3 (c30-4 / less)))

# ::snt Fox why are you covering this liberal lunatic? No one in their right mind cares about Clooney dumb a**.
# ::tokens ["Fox", "why", "are", "you", "covering", "this", "liberal", "lunatic", "?", "No", "one", "in", "their", "right", "mind", "cares", "about", "Clooney", "dumb", "a", "*", "*", "."]
# ::lemmas ["Fox", "why", "be", "you", "cover", "this", "liberal", "lunatic", "?", "no", "one", "in", "their", "right", "mind", "care", "about", "Clooney", "dumb", "a", "*", "*", "."]
(c31-2 / multi-sentence
       :snt1 (c31-10 / cause-01
                     :ARG0 (c31-14 / amr-unknown)
                     :ARG1 (c31-17 / cover-03
                                   :ARG0 (c31-1 / you)
                                   :ARG1 (c31-6 / lunatic
                                                :mod (c31-12 / this)
                                                :ARG1-of (c31-16 / liberal-02))
                                   :medium (c31-0 / broadcast-program
                                                  :name (c31-3 / name
                                                               :op1 "Fox"))))
       :snt2 (c31-11 / care-01
                     :ARG0 (c31-5 / no-one
                                  :prep-in (c31-7 / mind
                                                  :ARG1-of (c31-4 / right-03)))
                     :ARG1 (c31-13 / ass
                                   :mod (c31-15 / dumb)
                                   :domain (c31-8 / person
                                                  :name (c31-9 / name
                                                               :op1 "Clooney")))))

# ::snt Great more lib elites!
# ::tokens ["Great", "more", "lib", "elites", "!"]
# ::lemmas ["great", "more", "lib", "elite", "!"]
(c32-1 / elite
       :ARG1-of (c32-3 / liberal-02)
       :ARG1-of (c32-2 / have-quant-91
                       :ARG3 (c32-0 / more
                                    :mod (c32-4 / great))))

# ::snt Booker
# ::tokens ["Booker"]
# ::lemmas ["Booker"]
(c33-1 / person
       :ARG0-of (c33-0 / book-01))

# ::snt Two kids brought into the effed up world called Hollywood! They will be raised spoiled with a long life of being in the news and tabloids!
# ::tokens ["Two", "kids", "brought", "into", "the", "effed", "up", "world", "called", "Hollywood", "!", "They", "will", "be", "raised", "spoiled", "with", "a", "long", "life", "of", "being", "in", "the", "news", "and", "tabloids", "!"]
# ::lemmas ["Two", "kid", "bring", "into", "the", "eff", "up", "world", "call", "Hollywood", "!", "they", "will", "be", "raise", "spoil", "with", "a", "long", "life", "of", "be", "in", "the", "news", "and", "tabloid", "!"]
(c34-2 / multi-sentence
       :snt1 (c34-0 / bring-01
                    :ARG1 (c34-8 / kid
                                 :quant 2)
                    :ARG2 (c34-11 / world
                                  :name (c34-1 / name
                                               :op1 "Hollywood")
                                  :mod (c34-6 / effed-up)))
       :snt2 (c34-4 / raise-03
                    :ARG1 (c34-12 / they)
                    :ARG1-of (c34-3 / spoil-01
                                    :ARG0 (c34-9 / life
                                                 :ARG1-of (c34-13 / long-03)
                                                 :consist-of (c34-7 / be-located-at-91
                                                                    :ARG1 c34-12
                                                                    :ARG2 (c34-5 / and
                                                                                 :op1 (c34-10 / news)
                                                                                 :op2 (c34-14 / tabloid)))))))

# ::snt Whose the Father of the Twins? To be named later?
# ::tokens ["Whose", "the", "Father", "of", "the", "Twins", "?", "To", "be", "named", "later", "?"]
# ::lemmas ["whose", "the", "Father", "of", "the", "Twins", "?", "to", "be", "name", "later", "?"]
(c35-1 / multi-sentence
       :snt1 (c35-5 / person
                    :ARG0-of (c35-4 / have-rel-role-91
                                    :ARG1 (c35-8 / twin)
                                    :ARG2 (c35-0 / father))
                    :domain (c35-3 / amr-unknown))
       :snt2 (c35-2 / name-01
                    :time (c35-7 / after
                                 :op1 (c35-6 / now))))

# ::snt Whatever
# ::tokens ["Whatever"]
# ::lemmas ["whatever"]
(c36-0 / whatever)

# ::snt Just added two more Loony Tunes into the Libtard
# ::tokens ["Just", "added", "two", "more", "Loony", "Tunes", "into", "the", "Libtard"]
# ::lemmas ["just", "add", "two", "more", "Loony", "Tunes", "into", "the", "Libtard"]
(c37-2 / add-02
       :ARG1 (c37-6 / tune
                    :mod (c37-4 / loony)
                    :mod (c37-0 / more)
                    :quant 2)
       :ARG2 (c37-3 / product
                    :name (c37-1 / name
                                 :op1 "Libtard"))
       :mod (c37-5 / just))

# ::snt Fox reporting meaningless news. While not reporting this bombshell
# ::tokens ["Fox", "reporting", "meaningless", "news", ".", "While", "not", "reporting", "this", "bombshell"]
# ::lemmas ["Fox", "report", "meaningless", "news", ".", "while", "not", "report", "this", "bombshell"]
(c38-1 / multi-sentence
       :snt1 (c38-3 / report-01
                    :ARG0 (c38-0 / broadcast-program
                                 :name (c38-2 / name
                                              :op1 "Fox"))
                    :ARG1 (c38-4 / news
                                 :ARG1-of (c38-5 / mean-01
                                                 :polarity -)))
       :snt2 (c38-7 / contrast-01
                    :ARG2 (c38-9 / report-01
                                 :ARG0 c38-0
                                 :ARG1 (c38-6 / bomb
                                              :mod (c38-8 / this))
                                 :polarity -)))

# ::snt Oh great. Two more Looney tunes in this world!
# ::tokens ["Oh", "great", ".", "Two", "more", "Looney", "tunes", "in", "this", "world", "!"]
# ::lemmas ["oh", "great", ".", "Two", "more", "Looney", "tune", "in", "this", "world", "!"]
(c39-2 / multi-sentence
       :snt1 (c39-7 / great
                    :mod (c39-0 / oh))
       :snt2 (c39-1 / be-located-at-91
                    :ARG1 (c39-6 / tune
                                 :mod (c39-4 / loony)
                                 :mod (c39-3 / more)
                                 :quant 2)
                    :ARG2 (c39-5 / world
                                 :mod (c39-8 / this))))

# ::snt Fuck George Clooney. Liberal asswipe. We don't care about this shitty person.
# ::tokens ["Fuck", "George", "Clooney", ".", "Liberal", "asswipe", ".", "We", "do", "n't", "care", "about", "this", "shitty", "person", "."]
# ::lemmas ["Fuck", "George", "Clooney", ".", "liberal", "asswipe", ".", "we", "do", "not", "care", "about", "this", "shitty", "person", "."]
(c40-2 / multi-sentence
       :snt1 (c40-0 / fuck-01
                    :ARG1 (c40-5 / person
                                 :name (c40-1 / name
                                              :op1 "George"
                                              :op2 "Clooney"))
                    :mode expressive)
       :snt2 (c40-10 / asswipe
                     :ARG1-of (c40-6 / liberal-02))
       :snt3 (c40-7 / care-01
                    :ARG0 (c40-8 / we)
                    :ARG1 (c40-3 / person
                                 :mod (c40-4 / shitty)
                                 :mod (c40-9 / this))
                    :polarity -))

# ::snt More liberals to cry
# ::tokens ["More", "liberals", "to", "cry"]
# ::lemmas ["more", "liberal", "to", "cry"]
(c41-1 / cry-02
       :ARG0 (c41-2 / person
                    :ARG1-of (c41-3 / liberal-02)
                    :quant (c41-0 / more)))

# ::snt Who care clooney Trader
# ::tokens ["Who", "care", "clooney", "Trader"]
# ::lemmas ["who", "care", "clooney", "Trader"]
(c42-0 / care-01
       :ARG0 (c42-3 / amr-unknown)
       :ARG1 (c42-2 / person
                    :name (c42-1 / name
                                 :op1 "Clone"
                                 :op2 "Trader")))

# ::snt zzzzzzzzzzz
# ::tokens ["zzzzzzzzzzz"]
# ::lemmas ["zzzzzzzzzzz"]
(c43-0 / zzzzzzz)

# ::snt He's preparing to run for political office. He picked the wife that'll appeal to the Left &amp; now the twins seal the perfect political family.
# ::tokens ["He", "'s", "preparing", "to", "run", "for", "political", "office", ".", "He", "picked", "the", "wife", "that", "'ll", "appeal", "to", "the", "Left", "&", "amp", ";", "now", "the", "twins", "seal", "the", "perfect", "political", "family", "."]
# ::lemmas ["he", "be", "prepare", "to", "run", "for", "political", "office", ".", "he", "pick", "the", "wife", "that", "'ll", "appeal", "to", "the", "Left", "&", "amp", ";", "now", "the", "twin", "seal", "the", "perfect", "political", "family", "."]
(c44-12 / multi-sentence
        :snt1 (c44-21 / prepare-02
                      :ARG0 (c44-6 / he
                                   :ARG1-of c44-21)
                      :ARG2 (c44-20 / run-02
                                    :ARG0 c44-6
                                    :ARG1 (c44-4 / office
                                                 :mod (c44-13 / politics))))
        :snt2 (c44-3 / pick-01
                     :ARG0 (c44-23 / he)
                     :ARG1 (c44-2 / person
                                  :ARG0-of (c44-5 / have-rel-role-91
                                                  :ARG1 c44-23
                                                  :ARG2 (c44-22 / wife))
                                  :ARG0-of (c44-9 / appeal-03
                                                  :ARG1 (c44-8 / and
                                                               :op1 (c44-1 / left-19)
                                                               :op2 (c44-10 / person
                                                                            :name (c44-19 / name
                                                                                          :op1 "amp"))))))
        :snt3 (c44-0 / seal-01
                     :ARG0 (c44-24 / person
                                   :ARG0-of (c44-16 / have-rel-role-91
                                                    :ARG1 (c44-7 / he)
                                                    :ARG2 (c44-11 / twin)))
                     :ARG1 (c44-18 / family
                                   :mod (c44-17 / politics)
                                   :ARG1-of (c44-15 / perfect-02))
                     :time (c44-14 / now)))

# ::snt I have never given less of a fuck
# ::tokens ["I", "have", "never", "given", "less", "of", "a", "fuck"]
# ::lemmas ["i", "have", "never", "give", "less", "of", "a", "fuck"]
(c45-4 / give-16
       :ARG0 (c45-3 / i)
       :ARG1 (c45-0 / fuck
                    :mod (c45-2 / less))
       :time (c45-1 / ever)
       :polarity -)

# ::snt Who cares! This is for gossip columns!
# ::tokens ["Who", "cares", "!", "This", "is", "for", "gossip", "columns", "!"]
# ::lemmas ["who", "care", "!", "this", "be", "for", "gossip", "column", "!"]
(c46-0 / multi-sentence
       :snt1 (c46-3 / care-01
                    :ARG0 (c46-1 / amr-unknown))
       :snt2 (c46-2 / have-purpose-91
                    :ARG1 (c46-4 / this)
                    :ARG2 (c46-6 / column
                                 :mod (c46-5 / gossip-01))))

# ::snt I don't understand why this is on news shows. It's Entertainment &amp; does not impact people other than the Clooney family/friends.
# ::tokens ["I", "do", "n't", "understand", "why", "this", "is", "on", "news", "shows", ".", "It", "'s", "Entertainment", "&", "amp", ";", "does", "not", "impact", "people", "other", "than", "the", "Clooney", "family", "/", "friends", "."]
# ::lemmas ["i", "do", "not", "understand", "why", "this", "be", "on", "news", "show", ".", "it", "be", "Entertainment", "&", "amp", ";", "do", "not", "impact", "people", "other", "than", "the", "Clooney", "family", "/", "friend", "."]
(c47-12 / multi-sentence
        :snt1 (c47-17 / understand-01
                      :ARG0 (c47-24 / i)
                      :ARG1 (c47-8 / thing
                                   :ARG0-of (c47-15 / cause-01
                                                    :ARG1 (c47-11 / be-located-at-91
                                                                  :ARG1 (c47-16 / this)
                                                                  :ARG2 (c47-0 / show-04
                                                                               :ARG1 (c47-19 / news)))))
                      :polarity -)
        :snt2 (c47-7 / and
                     :op1 (c47-20 / entertainment)
                     :op2 (c47-6 / amp)
                     :domain (c47-3 / it))
        :snt3 (c47-10 / impact-01
                      :ARG0 c47-3
                      :ARG1 (c47-21 / person
                                    :ARG2-of (c47-9 / except-01
                                                    :ARG1 (c47-2 / slash
                                                                 :op1 (c47-18 / family
                                                                              :ARG1-of (c47-4 / have-org-role-91
                                                                                              :ARG0 (c47-13 / person
                                                                                                            :name (c47-14 / name
                                                                                                                          :op1 "Clooney"))
                                                                                              :ARG2 (c47-5 / member)))
                                                                 :op2 (c47-1 / person
                                                                             :ARG0-of (c47-23 / have-rel-role-91
                                                                                              :ARG1 c47-13
                                                                                              :ARG2 (c47-22 / friend))))))
                      :polarity -))

# ::snt How dare you assume their genders?
# ::tokens ["How", "dare", "you", "assume", "their", "genders", "?"]
# ::lemmas ["how", "dare", "you", "assume", "their", "gender", "?"]
(c48-5 / dare-01
       :ARG0 (c48-0 / you)
       :ARG2 (c48-1 / assume-02
                    :ARG0 c48-0
                    :ARG1 (c48-4 / gender
                                 :poss (c48-3 / they)))
       :manner (c48-2 / amr-unknown))

# ::snt This glass under the category of "Who Cares..."
# ::tokens ["This", "glass", "under", "the", "category", "of", "\"", "Who", "Cares", "...", "\""]
# ::lemmas ["this", "glass", "under", "the", "category", "of", "\"", "who", "Cares", "...", "\""]
(c49-3 / glass
       :mod (c49-1 / this)
       :prep-under (c49-0 / category
                          :op1 (c49-4 / care-01
                                      :ARG0 (c49-2 / amr-unknown))))

# ::snt and we care because?????
# ::tokens ["and", "we", "care", "because", "?", "?", "?", "?", "?"]
# ::lemmas ["and", "we", "care", "because", "?", "?", "?", "?", "?"]
(c50-3 / and
       :op2 (c50-0 / care-01
                   :ARG0 (c50-1 / we)
                   :ARG1-of (c50-4 / cause-01
                                   :ARG0 (c50-2 / amr-unknown))))
