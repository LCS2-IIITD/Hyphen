# ::snt Hope Trump enjoys the ride.
# ::tokens ["Hope", "Trump", "enjoys", "the", "ride", "."]
# ::lemmas ["Hope", "Trump", "enjoy", "the", "ride", "."]
(c1-3 / hope-01
      :ARG1 (c1-2 / enjoy-01
                  :ARG0 (c1-4 / person
                              :name (c1-0 / name
                                          :op1 "Trump"))
                  :ARG1 (c1-1 / ride)))

# ::snt I'm in!
# ::tokens ["I", "'m", "in", "!"]
# ::lemmas ["i", "be", "in", "!"]
(c2-0 / be-located-at-91
      :ARG1 (c2-1 / i))

# ::snt can't wait for this!!!! HUGE viewing party
# ::tokens ["ca", "n't", "wait", "for", "this", "!", "!", "!", "!", "HUGE", "viewing", "party"]
# ::lemmas ["can", "not", "wait", "for", "this", "!", "!", "!", "!", "huge", "view", "party"]
(c3-0 / multi-sentence
      :snt1 (c3-4 / wait-01
                  :ARG1 (c3-5 / i)
                  :ARG2 (c3-6 / this))
      :snt2 (c3-3 / party
                  :mod (c3-2 / huge)
                  :purpose (c3-1 / view-01)))

# ::snt From the Desk of Jim R, Take : Broadway/National Tour: "Rent" (A Review) ...
# ::tokens ["From", "the", "Desk", "of", "Jim", "R", ",", "Take", ":", "Broadway", "/", "National", "Tour", ":", "\"", "Rent", "\"", "(", "A", "Review", ")", "..."]
# ::lemmas ["from", "the", "Desk", "of", "Jim", "R", ",", "take", ":", "Broadway", "/", "National", "Tour", ":", "\"", "rent", "\"", "(", "a", "Review", ")", "..."]
(c4-0 / be-from-91
      :ARG1 (c4-7 / publication
                  :name (c4-2 / name
                              :op1 "Rent")
                  :ARG1-of (c4-1 / mean-01
                                 :ARG2 (c4-3 / publication
                                             :name (c4-6 / name
                                                         :op1 "A"
                                                         :op2 "Review"))))
      :ARG2 (c4-13 / desk
                   :poss (c4-12 / person
                                :name (c4-8 / name
                                            :op1 "Jim"
                                            :op2 "R")))
      :subevent-of (c4-4 / slash
                         :op1 (c4-5 / road
                                    :name (c4-9 / name
                                                :op1 "Broadway"))
                         :op2 (c4-10 / tour
                                     :mod (c4-11 / nation))))

# ::snt ooooh bitch this is news to me. I'm geeked
# ::tokens ["ooooh", "bitch", "this", "is", "news", "to", "me", ".", "I", "'m", "geeked"]
# ::lemmas ["ooooh", "bitch", "this", "be", "news", "to", "i", ".", "i", "be", "geeke"]
(c5-3 / multi-sentence
      :snt1 (c5-1 / bitch
                  :domain (c5-2 / news
                                :domain (c5-6 / this)
                                :beneficiary (c5-5 / i))
                  :mod (c5-0 / oh
                             :mode expressive)
                  :mode expressive)
      :snt2 (c5-7 / geek-00
                  :ARG1 (c5-4 / i)))

# ::snt omg yeah...hopefully it's more along the lines of grease live than what they did with rocky horror
# ::tokens ["omg", "yeah", "...", "hopefully", "it", "'s", "more", "along", "the", "lines", "of", "grease", "live", "than", "what", "they", "did", "with", "rocky", "horror"]
# ::lemmas ["omg", "yeah", "...", "hopefully", "it", "be", "more", "along", "the", "line", "of", "grease", "live", "than", "what", "they", "do", "with", "rocky", "horror"]
(c6-4 / hope-01
      :ARG1 (c6-6 / have-degree-91
                  :ARG1 (c6-8 / it)
                  :ARG2 (c6-9 / along
                              :op1 (c6-5 / line
                                         :mod (c6-12 / live-01
                                                     :manner (c6-10 / grease))))
                  :ARG3 (c6-1 / more)
                  :ARG4 (c6-7 / thing
                              :ARG1-of (c6-11 / do-02
                                              :ARG0 (c6-13 / they)
                                              :ARG3 (c6-3 / horror
                                                          :mod (c6-2 / rock)))))
      :mod (c6-0 / yeah
                 :mode expressive))

# ::snt OMG I'M LATE???
# ::tokens ["OMG", "I'M", "LATE", "?", "?", "?"]
# ::lemmas ["OMG", "i'm", "late", "?", "?", "?"]
(c7-3 / sorry-01
      :polarity (c7-0 / amr-unknown)
      :ARG1 (c7-2 / i)
      :mod (c7-1 / oh-my-god
                 :mode expressive))

# ::snt Five hundred twenty five thousand six hundred minutes...
# ::tokens ["Five", "hundred", "twenty", "five", "thousand", "six", "hundred", "minutes", "..."]
# ::lemmas ["Five", "hundred", "twenty", "five", "thousand", "six", "hundred", "minutes", "..."]
(c8-1 / temporal-quantity
      :unit (c8-0 / minute)
      :quant 5500000)

# ::snt WHAAAAATTTTT
# ::tokens ["WHAAAAATTTTT"]
# ::lemmas ["WHAAAAATTTTT"]
(c9-0 / whaa
      :mode expressive)

# ::snt OMGGGG
# ::tokens ["OMGGGG"]
# ::lemmas ["OMGGGG"]
(c10-0 / oh-my-god
       :mode expressive)

# ::snt Wine and Beer
# ::tokens ["Wine", "and", "Beer"]
# ::lemmas ["wine", "and", "beer"]
(c11-2 / and
       :op1 (c11-0 / wine)
       :op2 (c11-1 / beer))

# ::snt PLEASE CAST SOMEONE AMAZING AS MAUREEN, MIMI, AND JOANNE BECAUSE THATLL MAKE OR BREAK THE SHOW!!!
# ::tokens ["PLEASE", "CAST", "SOMEONE", "AMAZING", "AS", "MAUREEN", ",", "MIMI", ",", "AND", "JOANNE", "BECAUSE", "THATLL", "MAKE", "OR", "BREAK", "THE", "SHOW", "!", "!", "!"]
# ::lemmas ["please", "cast", "someone", "AMAZING", "AS", "MAUREEN", ",", "MIMI", ",", "and", "JOANNE", "because", "thatll", "make", "or", "break", "the", "SHOW", "!", "!", "!"]
(c12-7 / and
       :op1 (c12-12 / teach-01
                    :ARG0 (c12-3 / you)
                    :ARG1 (c12-13 / and
                                  :op1 (c12-11 / incredible
                                               :domain (c12-6 / someone))
                                  :op2 (c12-8 / person
                                              :name (c12-4 / name
                                                           :op1 "Mimi")))
                    :mode imperative
                    :polite +)
       :op2 (c12-10 / join-in-05
                    :ARG0 c12-3
                    :ARG1 (c12-0 / show-04)
                    :ARG1-of (c12-9 / cause-01
                                    :ARG0 (c12-1 / or
                                                 :op1 (c12-5 / make-02
                                                             :ARG0 c12-13
                                                             :ARG1 c12-0)
                                                 :op2 (c12-2 / break-01
                                                             :ARG0 c12-13
                                                             :ARG1 c12-0)))
                    :mode imperative
                    :polite +))

# ::snt YAAAAAAAAAAAAS!!!!
# ::tokens ["YAAAAAAAAAAAAS", "!", "!", "!", "!"]
# ::lemmas ["YAAAAAAAAAAAAS", "!", "!", "!", "!"]
(c13-0 / yah
       :mode expressive)

# ::snt SHUT UP
# ::tokens ["SHUT", "UP"]
# ::lemmas ["SHUT", "UP"]
(c14-1 / shut-up-06
       :ARG0 (c14-0 / you)
       :mode imperative)

# ::snt I can't waittttt *sobbing*
# ::tokens ["I", "ca", "n't", "waittttt", "*", "sobbing", "*"]
# ::lemmas ["i", "can", "not", "waittttt", "*", "sob", "*"]
(c15-1 / possible-01
       :ARG1 (c15-0 / dabble-01
                    :ARG0 (c15-2 / i))
       :polarity -)

# ::snt Omg yess!!
# ::tokens ["Omg", "yess", "!", "!"]
# ::lemmas ["Omg", "yess", "!", "!"]
(c16-1 / yess
       :mod (c16-0 / oh-my-god
                   :mode expressive)
       :mode expressive)

# ::snt SHUT UP!!
# ::tokens ["SHUT", "UP", "!", "!"]
# ::lemmas ["SHUT", "UP", "!", "!"]
(c18-1 / shut-up-06
       :ARG0 (c18-0 / you
                    :ARG1-of c18-1)
       :mode imperative)

# ::snt is it weird we were singing this today????
# ::tokens ["is", "it", "weird", "we", "were", "singing", "this", "today", "?", "?", "?", "?"]
# ::lemmas ["be", "it", "weird", "we", "be", "singe", "this", "today", "?", "?", "?", "?"]
(c19-3 / weird
       :polarity (c19-1 / amr-unknown)
       :domain (c19-0 / sing-01
                      :ARG0 (c19-2 / we)
                      :ARG1 (c19-4 / this)
                      :time (c19-5 / today)))

# ::snt Omg omg omg omg omg omg omg
# ::tokens ["Omg", "omg", "omg", "omg", "omg", "omg", "omg"]
# ::lemmas ["Omg", "omg", "omg", "omg", "omg", "omg", "omg"]
(c20-0 / omg
       :mode expressive)

# ::snt They better not censor shit
# ::tokens ["They", "better", "not", "censor", "shit"]
# ::lemmas ["they", "well", "not", "censor", "shit"]
(c21-1 / recommend-01
       :ARG1 (c21-2 / censor-01
                    :ARG0 (c21-3 / they)
                    :ARG1 (c21-0 / shit)
                    :polarity -))

# ::snt You need the entire uk cast of especially as Angel as Mimi and as Joanne
# ::tokens ["You", "need", "the", "entire", "uk", "cast", "of", "especially", "as", "Angel", "as", "Mimi", "and", "as", "Joanne"]
# ::lemmas ["you", "need", "the", "entire", "uk", "cast", "of", "especially", "as", "Angel", "as", "Mimi", "and", "as", "Joanne"]
(c22-1 / need-01
       :ARG0 (c22-0 / you)
       :ARG1 (c22-8 / cast
                    :mod (c22-4 / entire)
                    :consist-of (c22-10 / and
                                        :op1 (c22-6 / person
                                                    :name (c22-5 / name
                                                                 :op1 "Angel")
                                                    :ARG1-of (c22-3 / resemble-01
                                                                    :ARG2 (c22-2 / person
                                                                                 :name (c22-7 / name
                                                                                              :op1 "Mimi"))
                                                                    :degree (c22-11 / especially)))
                                        :op2 (c22-13 / person
                                                     :name (c22-9 / name
                                                                  :op1 "Joanne")
                                                     :ARG1-of (c22-12 / resemble-01
                                                                      :ARG2 c22-6
                                                                      :degree c22-11)))))

# ::snt so now we know what you've been auditioning for...
# ::tokens ["so", "now", "we", "know", "what", "you", "'ve", "been", "auditioning", "for", "..."]
# ::lemmas ["so", "now", "we", "know", "what", "you", "'ve", "be", "audition", "for", "..."]
(c23-2 / know-01
       :ARG0 (c23-3 / we)
       :ARG1 (c23-4 / thing
                    :ARG1-of (c23-5 / audition-01
                                    :ARG0 (c23-0 / you)))
       :time (c23-1 / now))

# ::snt You're nuts. Rent cannot be compared to those other shows. The only reason it became dated was because people stopped dying from AIDS.
# ::tokens ["You", "'re", "nuts", ".", "Rent", "can", "not", "be", "compared", "to", "those", "other", "shows", ".", "The", "only", "reason", "it", "became", "dated", "was", "because", "people", "stopped", "dying", "from", "AIDS", "."]
# ::lemmas ["you", "be", "nuts", ".", "rent", "can", "not", "be", "compare", "to", "those", "other", "show", ".", "the", "only", "reason", "it", "became", "date", "be", "because", "people", "stop", "die", "from", "AIDS", "."]
(c25-5 / multi-sentence
       :snt1 (c25-4 / nuts
                    :domain (c25-3 / you))
       :snt2 (c25-10 / possible-01
                     :ARG1 (c25-12 / compare-01
                                   :ARG1 (c25-8 / rent-01)
                                   :ARG2 (c25-6 / show-04
                                                :mod (c25-0 / other)
                                                :mod (c25-15 / that)))
                     :polarity -)
       :snt3 (c25-17 / cause-01
                     :ARG0 (c25-1 / stop-01
                                  :ARG1 (c25-16 / die-01
                                                :ARG1 (c25-7 / person)
                                                :ARG1-of c25-17
                                                :ARG0 (c25-13 / disease
                                                              :name (c25-9 / name
                                                                           :op1 "AIDS")))))
       :ARG1 (c25-11 / date-01
                     :ARG1 (c25-14 / it))
       :mod (c25-2 / only))

# ::snt Best musical since Les Miz.
# ::tokens ["Best", "musical", "since", "Les", "Miz", "."]
# ::lemmas ["well", "musical", "since", "Les", "Miz", "."]
(c26-4 / have-degree-91
       :ARG1 (c26-0 / musical)
       :ARG2 (c26-6 / good-02
                    :ARG1 c26-0)
       :ARG3 (c26-3 / most)
       :ARG5 (c26-2 / since
                    :op1 (c26-5 / work-of-art
                                :name (c26-1 / name
                                             :op1 "Les"
                                             :op2 "Miz"))))

# ::snt absolutely not we will be there
# ::tokens ["absolutely", "not", "we", "will", "be", "there"]
# ::lemmas ["absolutely", "not", "we", "will", "be", "there"]
(c27-1 / be-located-at-91
       :ARG1 (c27-0 / we)
       :ARG2 (c27-3 / there)
       :degree (c27-2 / absolute)
       :polarity -)

# ::snt Will this be on in the UK too?
# ::tokens ["Will", "this", "be", "on", "in", "the", "UK", "too", "?"]
# ::lemmas ["will", "this", "be", "on", "in", "the", "UK", "too", "?"]
(c28-0 / on-01
       :ARG1 (c28-3 / this)
       :location (c28-2 / country
                        :name (c28-1 / name
                                     :op1 "UK"))
       :polarity (c28-4 / amr-unknown)
       :mod (c28-5 / too))

# ::snt HOLY SHIT BUT ALSO IM SO SCARED THEY WILL RUIN IT.....it's not a kids musical
# ::tokens ["HOLY", "SHIT", "BUT", "ALSO", "IM", "SO", "SCARED", "THEY", "WILL", "RUIN", "IT", ".....", "it", "'s", "not", "a", "kids", "musical"]
# ::lemmas ["HOLY", "SHIT", "but", "also", "IM", "so", "SCARED", "they", "will", "RUIN", "IT", ".....", "it", "be", "not", "a", "kid", "musical"]
(c29-8 / contrast-01
       :ARG1 (c29-2 / shit
                    :mod (c29-6 / healthy))
       :ARG2 (c29-0 / scare-01
                    :ARG0 (c29-9 / i)
                    :ARG1 (c29-10 / they)
                    :ARG2 (c29-4 / RUIN-01
                                 :ARG0 c29-10
                                 :ARG1 (c29-3 / it))
                    :ARG1-of (c29-11 / cause-01
                                     :ARG0 (c29-1 / musical
                                                  :beneficiary (c29-7 / kid)
                                                  :domain c29-3
                                                  :polarity -))
                    :degree (c29-12 / so)
                    :mod (c29-5 / also)))

# ::snt YALL BETTER NOT BE KIDDING
# ::tokens ["YALL", "BETTER", "NOT", "BE", "KIDDING"]
# ::lemmas ["YALL", "BETTER", "not", "be", "kid"]
(c30-1 / have-degree-91
       :ARG1 (c30-3 / all)
       :ARG2 (c30-0 / bad-07
                    :polarity -)
       :ARG3 (c30-2 / more))

# ::snt I can't wait
# ::tokens ["I", "ca", "n't", "wait"]
# ::lemmas ["i", "can", "not", "wait"]
(c31-1 / possible-01
       :ARG1 (c31-0 / wait-01
                    :ARG1 (c31-2 / i))
       :polarity -)

# ::snt Party at our place
# ::tokens ["Party", "at", "our", "place"]
# ::lemmas ["party", "at", "our", "place"]
(c32-1 / party-01
       :location (c32-2 / place
                        :poss (c32-0 / we)))

# ::snt We're watching this
# ::tokens ["We", "'re", "watching", "this"]
# ::lemmas ["we", "be", "watch", "this"]
(c33-0 / watch-01
       :ARG0 (c33-2 / we)
       :ARG1 (c33-1 / this))

# ::snt YES. for Mimi!!!!
# ::tokens ["YES", ".", "for", "Mimi", "!", "!", "!", "!"]
# ::lemmas ["yes", ".", "for", "Mimi", "!", "!", "!", "!"]
(c35-1 / yes
       :beneficiary (c35-2 / person
                           :name (c35-0 / name
                                        :op1 "Mimi"))
       :mode expressive)

# ::snt omds
# ::tokens ["omds"]
# ::lemmas ["omds"]
(c36-0 / company
       :name (c36-1 / name
                    :op1 "omds"))

# ::snt round lesgo
# ::tokens ["round", "lesgo"]
# ::lemmas ["round", "lesgo"]
(c37-0 / round
       :op1 (c37-1 / lesgo))

# ::snt i'll only watch if liz gillies is maureen and matt bennett is mark
# ::tokens ["i", "'ll", "only", "watch", "if", "liz", "gillies", "is", "maureen", "and", "matt", "bennett", "is", "mark"]
# ::lemmas ["i", "'ll", "only", "watch", "if", "liz", "gillie", "be", "maureen", "and", "matt", "bennett", "be", "mark"]
(c38-6 / watch-01
       :ARG0 (c38-9 / i)
       :mod (c38-0 / only)
       :condition (c38-10 / and
                          :op1 (c38-4 / person
                                      :name (c38-1 / name
                                                   :op1 "Maureen")
                                      :domain (c38-2 / person
                                                     :name (c38-3 / name
                                                                  :op1 "Liz"
                                                                  :op2 "Gillies")))
                          :op2 (c38-11 / person
                                       :name (c38-5 / name
                                                    :op1 "Mark")
                                       :domain (c38-7 / person
                                                      :name (c38-8 / name
                                                                   :op1 "Matt"
                                                                   :op2 "Bennett")))))

# ::snt Cast Barrett Wilbert Weed as Maureen
# ::tokens ["Cast", "Barrett", "Wilbert", "Weed", "as", "Maureen"]
# ::lemmas ["Cast", "Barrett", "Wilbert", "Weed", "as", "Maureen"]
(c39-4 / cast-02
       :ARG1 (c39-3 / person
                    :name (c39-0 / name
                                 :op1 "Barrett"
                                 :op2 "Wilbert"
                                 :op3 "Weed"))
       :ARG2 (c39-1 / person
                    :name (c39-2 / name
                                 :op1 "Maureen")))

# ::snt I did. I'm not happy.
# ::tokens ["I", "did", ".", "I", "'m", "not", "happy", "."]
# ::lemmas ["i", "do", ".", "i", "be", "not", "happy", "."]
(c40-0 / multi-sentence
       :snt1 (c40-4 / do-02
                    :ARG0 (c40-3 / i))
       :snt2 (c40-2 / happy-01
                    :ARG1 (c40-1 / i)
                    :polarity -))

# ::snt NO holy shit
# ::tokens ["NO", "holy", "shit"]
# ::lemmas ["no", "holy", "shit"]
(c41-1 / shit
       :mod (c41-0 / holy)
       :polarity -)

# ::snt omg yes like could all be in it.
# ::tokens ["omg", "yes", "like", "could", "all", "be", "in", "it", "."]
# ::lemmas ["omg", "yes", "like", "could", "all", "be", "in", "it", "."]
(c42-3 / possible-01
       :ARG1 (c42-0 / be-located-at-91
                    :ARG1 (c42-2 / person
                                 :mod (c42-5 / all))
                    :ARG2 (c42-4 / it))
       :mod (c42-1 / yes
                   :mode expressive))

# ::snt yes!!!
# ::tokens ["yes", "!", "!", "!"]
# ::lemmas ["yes", "!", "!", "!"]
(c43-0 / yes)

# ::snt Let's go together omg
# ::tokens ["Let", "'s", "go", "together", "omg"]
# ::lemmas ["let", "us", "go", "together", "omg"]
(c44-1 / let-01
       :ARG1 (c44-4 / go-06
                    :ARG0 (c44-2 / we)
                    :ARG1 (c44-3 / together))
       :mod (c44-0 / oh-my-god
                   :mode expressive))

# ::snt for Mark
# ::tokens ["for", "Mark"]
# ::lemmas ["for", "Mark"]
(c46-1 / benefit-01
       :ARG1 (c46-2 / person
                    :name (c46-0 / name
                                 :op1 "Mark")))

# ::snt Man, are hated this one. No, I will NOT light your f-ing candle. Now piss off.
# ::tokens ["Man", ",", "are", "hated", "this", "one", ".", "No", ",", "I", "will", "NOT", "light", "your", "f", "-", "ing", "candle", ".", "Now", "piss", "off", "."]
# ::lemmas ["man", ",", "be", "hate", "this", "one", ".", "no", ",", "i", "will", "not", "light", "your", "f", "-", "e", "candle", ".", "now", "piss", "off", "."]
(c48-3 / multi-sentence
       :snt1 (c48-6 / hate-01
                    :ARG1 (c48-0 / one
                                 :mod (c48-12 / this))
                    :mod (c48-5 / man))
       :snt2 (c48-7 / light-01
                    :ARG0 (c48-11 / i)
                    :ARG1 (c48-10 / candle
                                  :mod (c48-1 / fucking
                                              :mode expressive)
                                  :poss (c48-2 / you))
                    :mod (c48-4 / no)
                    :polarity -)
       :snt3 (c48-8 / piss-off-02
                    :ARG0 c48-2
                    :time (c48-9 / now)
                    :mode imperative))

# ::snt Like when they did Hairspray and Grease live omfg I wanna be in the live audience so bad I'd die
# ::tokens ["Like", "when", "they", "did", "Hairspray", "and", "Grease", "live", "omfg", "I", "wanna", "be", "in", "the", "live", "audience", "so", "bad", "I", "'d", "die"]
# ::lemmas ["like", "when", "they", "do", "Hairspray", "and", "Grease", "live", "omfg", "i", "wanna", "be", "in", "the", "live", "audience", "so", "bad", "i", "would", "die"]
(c49-9 / want-01
       :ARG0 (c49-12 / i)
       :ARG1 (c49-7 / participate-01
                    :ARG0 c49-12
                    :ARG1 (c49-13 / audience
                                  :mod (c49-6 / live))
                    :ARG1-of (c49-5 / have-degree-91
                                    :ARG2 (c49-1 / bad-07
                                                 :ARG1 c49-9)
                                    :ARG3 (c49-3 / so)
                                    :ARG6 (c49-15 / die-01
                                                  :ARG1 c49-12)))
       :ARG1-of (c49-4 / resemble-01
                       :ARG2 (c49-10 / do-02
                                     :ARG0 (c49-11 / they)
                                     :ARG1 (c49-14 / and
                                                   :op1 (c49-0 / show
                                                               :name (c49-2 / name
                                                                            :op1 "Hairspray"))
                                                   :op2 (c49-17 / show
                                                                :name (c49-8 / name
                                                                             :op1 "Grease")))
                                     :manner (c49-16 / live))))

# ::snt OH GOD PLEASE DO
# ::tokens ["OH", "GOD", "PLEASE", "DO"]
# ::lemmas ["OH", "GOD", "please", "do"]
(c50-1 / do-02
       :ARG0 (c50-2 / you)
       :mod (c50-3 / oh
                   :op1 (c50-0 / god)
                   :mode expressive)
       :mode imperative
       :polite +)
