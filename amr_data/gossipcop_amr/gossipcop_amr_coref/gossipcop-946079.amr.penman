# ::snt Devastated my thoughts and prayers are with her family and friends xxxx
# ::tokens ["Devastated", "my", "thoughts", "and", "prayers", "are", "with", "her", "family", "and", "friends", "xxxx"]
# ::lemmas ["devastate", "my", "thought", "and", "prayer", "be", "with", "her", "family", "and", "friend", "xxxx"]
(c1-2 / multi-sentence
      :snt1 (c1-14 / devastate-01
                   :ARG1 (c1-5 / and
                               :op1 (c1-12 / thing
                                           :ARG1-of (c1-16 / think-01
                                                           :ARG0 (c1-11 / i)))
                               :op2 (c1-13 / thing
                                           :ARG1-of (c1-7 / pray-01
                                                          :ARG0 c1-11))
                               :location (c1-15 / and
                                                :op1 (c1-0 / family
                                                           :ARG1-of (c1-6 / have-org-role-91
                                                                          :ARG0 (c1-4 / she)
                                                                          :ARG2 (c1-8 / member)))
                                                :op2 (c1-3 / person
                                                           :ARG0-of (c1-10 / have-rel-role-91
                                                                           :ARG1 c1-4
                                                                           :ARG2 (c1-9 / friend))))))
      :snt2 (c1-1 / xxxx))

# ::snt Love Island? Never heard of it.
# ::tokens ["Love", "Island", "?", "Never", "heard", "of", "it", "."]
# ::lemmas ["Love", "Island", "?", "never", "hear", "of", "it", "."]
(c2-2 / hear-01
      :ARG1 (c2-3 / island
                  :name (c2-0 / name
                              :op1 "Love"
                              :op2 "Island"))
      :time (c2-1 / ever)
      :polarity (c2-4 / amr-unknown)
      :polarity -)

# ::snt I tell ya what is not breaking news tommy Robinson in prison and all you cling ons begging people to help you and spread the word!Do me a favour! Go get a proper job while your at it find a heart.
# ::tokens ["I", "tell", "ya", "what", "is", "not", "breaking", "news", "tommy", "Robinson", "in", "prison", "and", "all", "you", "cling", "ons", "begging", "people", "to", "help", "you", "and", "spread", "the", "word!Do", "me", "a", "favour", "!", "Go", "get", "a", "proper", "job", "while", "your", "at", "it", "find", "a", "heart", "."]
# ::lemmas ["i", "tell", "ya", "what", "be", "not", "break", "news", "tommy", "Robinson", "in", "prison", "and", "all", "you", "cling", "ons", "beg", "people", "to", "help", "you", "and", "spread", "the", "word!Do", "i", "a", "favour", "!", "go", "get", "a", "proper", "job", "while", "your", "at", "it", "find", "a", "heart", "."]
(c3-16 / multi-sentence
       :snt1 (c3-11 / tell-01
                    :ARG0 (c3-25 / i)
                    :ARG1 (c3-15 / break-18
                                 :ARG1 (c3-20 / news)
                                 :polarity -)
                    :ARG2 (c3-5 / you))
       :snt2 (c3-18 / cling-on-02
                    :ARG0 (c3-12 / you)
                    :ARG1 (c3-1 / beg-01
                                :ARG0 c3-12
                                :ARG1 (c3-21 / person)
                                :ARG2 (c3-10 / and
                                             :op1 (c3-7 / help-01
                                                        :ARG0 c3-21
                                                        :ARG1 c3-12)
                                             :op2 (c3-0 / spread-03
                                                        :ARG0 c3-12
                                                        :ARG1 (c3-23 / word))))
                    :mod (c3-9 / all))
       :snt3 (c3-26 / do-02
                    :ARG0 (c3-4 / you)
                    :ARG1 (c3-19 / favor)
                    :ARG2 (c3-6 / i)
                    :mode imperative)
       :snt4 (c3-13 / go-05
                    :ARG0 c3-4
                    :ARG1 (c3-2 / get-01
                                :ARG0 c3-4
                                :ARG1 (c3-8 / job
                                            :mod (c3-17 / proper))
                                :time (c3-3 / be-located-at-91
                                            :ARG1 c3-4
                                            :ARG2 (c3-14 / it)))
                    :mode imperative)
       :snt5 (c3-22 / find-01
                    :ARG0 c3-4
                    :ARG1 (c3-24 / heart)
                    :mode imperative))

# ::snt What like free tommy?You mean Airheads like you? Shit for brains like you?You have got some Nerve commenting on this and referring to her as brain dead when you come out with Comments like this.You silly vile pathetic piece of shit!!
# ::tokens ["What", "like", "free", "tommy?You", "mean", "Airheads", "like", "you", "?", "Shit", "for", "brains", "like", "you?You", "have", "got", "some", "Nerve", "commenting", "on", "this", "and", "referring", "to", "her", "as", "brain", "dead", "when", "you", "come", "out", "with", "Comments", "like", "this", ".", "You", "silly", "vile", "pathetic", "piece", "of", "shit", "!", "!"]
# ::lemmas ["what", "like", "free", "tommy?you", "mean", "airhead", "like", "you", "?", "shit", "for", "brain", "like", "you?you", "have", "get", "some", "nerve", "comment", "on", "this", "and", "refer", "to", "she", "as", "brain", "dead", "when", "you", "come", "out", "with", "comment", "like", "this", ".", "you", "silly", "vile", "pathetic", "piece", "of", "shit", "!", "!"]
(c4-19 / multi-sentence
       :snt1 (c4-27 / resemble-01
                    :ARG1 (c4-8 / you)
                    :ARG2 (c4-15 / tommy
                                 :ARG1-of (c4-24 / free-04))
                    :polarity (c4-14 / amr-unknown))
       :snt2 (c4-10 / mean-01
                    :ARG0 (c4-16 / you)
                    :ARG2 (c4-28 / person
                                 :mod (c4-13 / airhead)
                                 :ARG1-of (c4-4 / resemble-01
                                                :ARG2 c4-16))
                    :polarity (c4-12 / amr-unknown))
       :snt3 (c4-11 / have-03
                    :ARG0 (c4-6 / you)
                    :ARG1 (c4-23 / thing
                                 :ARG1-of (c4-0 / sense-02)
                                 :mod (c4-7 / some)
                                 :ARG0-of (c4-22 / comment-01
                                                 :ARG3 (c4-29 / this))
                                 :ARG0-of (c4-21 / refer-01
                                                 :ARG1 (c4-18 / brain
                                                              :ARG1-of (c4-30 / die-01))))
                    :time (c4-17 / come-out-09
                                 :ARG0 c4-6
                                 :ARG1 (c4-2 / comment-01
                                             :ARG0 c4-6
                                             :ARG1 (c4-1 / this))))
       :snt4 (c4-20 / piece
                    :consist-of (c4-5 / shit)
                    :ARG1-of (c4-9 / vile-02)
                    :mod (c4-25 / silly)
                    :mod (c4-3 / pathetic)
                    :domain (c4-26 / you)))

# ::snt Who?
# ::tokens ["Who", "?"]
# ::lemmas ["who", "?"]
(c5-0 / amr-unknown)

# ::snt Its sad. Poor girl.
# ::tokens ["Its", "sad", ".", "Poor", "girl", "."]
# ::lemmas ["its", "sad", ".", "poor", "girl", "."]
(c6-0 / multi-sentence
      :snt1 (c6-1 / sad-02
                  :ARG1 (c6-3 / it))
      :snt2 (c6-4 / girl
                  :mod (c6-2 / poor)))

# ::snt WTF?????
# ::tokens ["WTF", "?", "?", "?", "?", "?"]
# ::lemmas ["WTF", "?", "?", "?", "?", "?"]
(c7-1 / amr-unknown
      :mod (c7-0 / fuck
                 :mode expressive))

# ::snt I hope no one ever says something as vile as that to your children.
# ::tokens ["I", "hope", "no", "one", "ever", "says", "something", "as", "vile", "as", "that", "to", "your", "children", "."]
# ::lemmas ["i", "hope", "no", "one", "ever", "say", "something", "as", "vile", "as", "that", "to", "your", "child", "."]
(c11-6 / hope-01
       :ARG0 (c11-10 / i)
       :ARG1 (c11-3 / say-01
                    :ARG0 (c11-2 / no-one)
                    :ARG1 (c11-0 / something
                                 :ARG1-of (c11-4 / resemble-01
                                                 :ARG2 (c11-11 / that)))
                    :ARG2 (c11-7 / person
                                 :ARG0-of (c11-9 / have-rel-role-91
                                                 :ARG1 (c11-1 / you)
                                                 :ARG2 (c11-8 / child)))
                    :time (c11-5 / ever)))

# ::snt No one kills themselves to make headlines
# ::tokens ["No", "one", "kills", "themselves", "to", "make", "headlines"]
# ::lemmas ["no", "one", "kill", "themselves", "to", "make", "headline"]
(c12-3 / kill-01
       :ARG0 (c12-1 / no-one
                    :ARG1-of c12-3)
       :purpose (c12-0 / make-18
                       :ARG0 c12-1
                       :ARG1 (c12-2 / headline)))

# ::snt The trouble is, we think we have time. Enjoy the moment and embrace your family. Love is the only real currency with any worth.Live and let live.God bless and RIP
# ::tokens ["The", "trouble", "is", ",", "we", "think", "we", "have", "time", ".", "Enjoy", "the", "moment", "and", "embrace", "your", "family", ".", "Love", "is", "the", "only", "real", "currency", "with", "any", "worth", ".", "Live", "and", "let", "live", ".", "God", "bless", "and", "RIP"]
# ::lemmas ["the", "trouble", "be", ",", "we", "think", "we", "have", "time", ".", "enjoy", "the", "moment", "and", "embrace", "your", "family", ".", "Love", "be", "the", "only", "real", "currency", "with", "any", "worth", ".", "live", "and", "let", "live", ".", "God", "bless", "and", "RIP"]
(c13-14 / multi-sentence
        :snt1 (c13-10 / think-01
                      :ARG0 (c13-22 / we)
                      :ARG1 (c13-5 / have-03
                                   :ARG0 c13-22
                                   :ARG1 (c13-16 / time)))
        :snt2 (c13-9 / and
                     :op1 (c13-20 / enjoy-01
                                  :ARG0 (c13-4 / you)
                                  :ARG1 (c13-6 / moment)
                                  :mode imperative)
                     :op2 (c13-11 / embrace-01
                                  :ARG0 c13-4
                                  :ARG1 (c13-17 / family
                                                :poss c13-4)
                                  :mode imperative))
        :snt3 (c13-15 / currency
                      :ARG1-of (c13-19 / real-04)
                      :mod (c13-3 / only)
                      :domain (c13-0 / love-01)
                      :ARG1-of (c13-1 / worth-01
                                      :mod (c13-8 / any)))
        :snt4 (c13-7 / and
                     :op1 (c13-13 / bless-01
                                  :ARG0 (c13-21 / person
                                                :name (c13-18 / name
                                                              :op1 "God")))
                     :op2 (c13-2 / rest-01
                                 :ARG1 (c13-12 / you))))

# ::snt When its all over my twitter feed hard to miss it
# ::tokens ["When", "its", "all", "over", "my", "twitter", "feed", "hard", "to", "miss", "it"]
# ::lemmas ["when", "its", "all", "over", "my", "twitter", "feed", "hard", "to", "miss", "it"]
(c14-4 / hard-02
       :ARG1 (c14-1 / miss-02
                    :ARG1 (c14-6 / it))
       :time (c14-7 / all-over
                    :op1 (c14-0 / feed
                                :mod (c14-5 / publication
                                            :name (c14-2 / name
                                                         :op1 "Twitter"))
                                :poss (c14-3 / i))))

# ::snt What a completely ridiculous thing to say - I understand people talk before thinking, but tweeting before thinking?
# ::tokens ["What", "a", "completely", "ridiculous", "thing", "to", "say", "-", "I", "understand", "people", "talk", "before", "thinking", ",", "but", "tweeting", "before", "thinking", "?"]
# ::lemmas ["what", "a", "completely", "ridiculous", "thing", "to", "say", "-", "i", "understand", "people", "talk", "before", "thinking", ",", "but", "tweet", "before", "think", "?"]
(c16-3 / ridiculous-02
       :ARG1 (c16-2 / say-01
                    :ARG1 (c16-8 / contrast-01
                                 :ARG1 (c16-12 / understand-01
                                               :ARG0 (c16-9 / i)
                                               :ARG1 (c16-10 / talk-01
                                                             :ARG0 (c16-7 / person)
                                                             :time (c16-1 / before
                                                                          :op1 (c16-13 / think-01
                                                                                       :ARG0 c16-7))))
                                 :ARG2 (c16-11 / tweet-02
                                               :ARG0 c16-7
                                               :time (c16-6 / before
                                                            :op1 (c16-5 / think-01
                                                                        :ARG0 c16-7)))))
       :ARG1-of (c16-0 / complete-02)
       :polarity (c16-4 / amr-unknown))

# ::snt My point why plaster it all over news hundreds people take the life and dont get make public
# ::tokens ["My", "point", "why", "plaster", "it", "all", "over", "news", "hundreds", "people", "take", "the", "life", "and", "do", "nt", "get", "make", "public"]
# ::lemmas ["my", "point", "why", "plaster", "it", "all", "over", "news", "hundreds", "people", "take", "the", "life", "and", "do", "not", "get", "make", "public"]
(c17-4 / point-04
       :ARG0 (c17-9 / i)
       :ARG1 (c17-1 / plaster-01
                    :ARG1 (c17-3 / it)
                    :ARG2 (c17-10 / all-over
                                  :op1 (c17-0 / news))
                    :ARG0-of (c17-6 / cause-01
                                    :ARG1 (c17-11 / and
                                                  :op1 (c17-8 / take-01
                                                              :ARG0 (c17-12 / person
                                                                            :quant (c17-2 / multiple
                                                                                          :op1 100))
                                                              :ARG1 (c17-5 / life))
                                                  :op2 (c17-7 / publicize-01
                                                              :ARG1 c17-5
                                                              :polarity -)))))

# ::snt Was she really well known really
# ::tokens ["Was", "she", "really", "well", "known", "really"]
# ::lemmas ["be", "she", "really", "well", "know", "really"]
(c18-2 / know-02
       :polarity (c18-4 / amr-unknown)
       :ARG1 (c18-0 / she)
       :degree (c18-3 / well)
       :ARG1-of (c18-1 / real-04))

# ::snt eDgY
# ::tokens ["eDgY"]
# ::lemmas ["eDgY"]
(c19-0 / eDgY)

# ::snt Dont be ignorant. I never watched Love Island and havent the foggiest who this woman is, but she very clearly had a TV presence in some form and thus her death is worth highlighting as she was well known. Regardless, condolences to her loved ones.
# ::tokens ["Do", "nt", "be", "ignorant", ".", "I", "never", "watched", "Love", "Island", "and", "have", "nt", "the", "foggiest", "who", "this", "woman", "is", ",", "but", "she", "very", "clearly", "had", "a", "TV", "presence", "in", "some", "form", "and", "thus", "her", "death", "is", "worth", "highlighting", "as", "she", "was", "well", "known", ".", "Regardless", ",", "condolences", "to", "her", "loved", "ones", "."]
# ::lemmas ["do", "not", "be", "ignorant", ".", "i", "never", "watch", "Love", "Island", "and", "have", "not", "the", "foggy", "who", "this", "woman", "be", ",", "but", "she", "very", "clearly", "have", "a", "tv", "presence", "in", "some", "form", "and", "thus", "her", "death", "be", "worth", "highlighting", "as", "she", "be", "well", "known", ".", "regardless", ",", "condolence", "to", "her", "loved", "one", "."]
(c20-20 / multi-sentence
        :snt1 (c20-32 / ignorant-02
                      :ARG1 (c20-8 / you)
                      :polarity -
                      :mode imperative)
        :snt2 (c20-21 / contrast-01
                      :ARG1 (c20-17 / and
                                    :op1 (c20-30 / watch-01
                                                 :ARG0 (c20-9 / i)
                                                 :ARG1 (c20-19 / broadcast-program
                                                               :name (c20-27 / name
                                                                             :op1 "Love"
                                                                             :op2 "Island"))
                                                 :time (c20-28 / ever)
                                                 :polarity -)
                                    :op2 (c20-12 / have-degree-91
                                                 :ARG1 (c20-15 / amr-unknown
                                                               :domain (c20-4 / woman
                                                                              :mod (c20-16 / this)))
                                                 :ARG2 (c20-2 / big)
                                                 :ARG3 (c20-13 / most)))
                      :ARG2 (c20-31 / have-03
                                    :ARG0 c20-4
                                    :ARG1 (c20-29 / present-02
                                                  :ARG1 (c20-22 / television)
                                                  :mod (c20-26 / form
                                                               :mod (c20-1 / some)))
                                    :ARG0-of (c20-18 / cause-01
                                                     :ARG1 (c20-24 / worth-02
                                                                   :ARG1 (c20-11 / highlight-01
                                                                                 :ARG1 (c20-33 / die-01
                                                                                               :ARG1 c20-4))
                                                                   :ARG1-of (c20-5 / cause-01
                                                                                   :ARG0 (c20-14 / know-02
                                                                                                 :ARG1 c20-4
                                                                                                 :degree (c20-0 / well)))))
                                    :ARG1-of (c20-25 / clear-06
                                                     :degree (c20-10 / very))))
        :snt3 (c20-23 / have-concession-91
                      :ARG1 (c20-7 / condolence
                                   :beneficiary (c20-6 / one
                                                       :ARG1-of (c20-3 / love-01
                                                                       :ARG0 c20-4)))))

# ::snt Never heard of her....still sad at
# ::tokens ["Never", "heard", "of", "her", "....", "still", "sad", "at"]
# ::lemmas ["never", "hear", "of", "she", "....", "still", "sad", "at"]
(c21-1 / multi-sentence
       :snt1 (c21-4 / hear-01
                    :ARG1 (c21-2 / she)
                    :time (c21-3 / ever)
                    :polarity -)
       :snt2 (c21-0 / sad-02
                    :ARG1 (c21-5 / i)
                    :mod (c21-6 / still)))

# ::snt Anonymity of the keyboard. Sadly.
# ::tokens ["Anonymity", "of", "the", "keyboard", ".", "Sadly", "."]
# ::lemmas ["Anonymity", "of", "the", "keyboard", ".", "sadly", "."]
(c22-2 / multi-sentence
       :snt1 (c22-3 / anonymous
                    :domain (c22-0 / keyboard))
       :snt2 (c22-1 / sad-02))

# ::snt As a watford fan id have to say silva lying
# ::tokens ["As", "a", "watford", "fan", "i", "d", "have", "to", "say", "silva", "lying"]
# ::lemmas ["as", "a", "watford", "fan", "i", "d", "have", "to", "say", "silva", "lying"]
(c24-0 / obligate-01
       :ARG1 (c24-8 / i)
       :ARG2 (c24-3 / say-01
                    :ARG0 c24-8
                    :ARG1 (c24-6 / lie-08
                                 :ARG0 (c24-5 / person
                                              :name (c24-2 / name
                                                           :op1 "Silva"))))
       :ARG1-of (c24-7 / cause-01
                       :ARG0 (c24-1 / fan
                                    :mod c24-5
                                    :name (c24-4 / name
                                                 :op1 "Watford"))))

# ::snt Not being funny if she's a star my how far have we fallen sad to hear anyone drying at
# ::tokens ["Not", "being", "funny", "if", "she", "'s", "a", "star", "my", "how", "far", "have", "we", "fallen", "sad", "to", "hear", "anyone", "drying", "at"]
# ::lemmas ["not", "be", "funny", "if", "she", "be", "a", "star", "my", "how", "far", "have", "we", "fall", "sad", "to", "hear", "anyone", "dry", "at"]
(c25-0 / funny
       :condition (c25-2 / star
                         :domain (c25-1 / she))
       :poss (c25-6 / i)
       :topic (c25-4 / fall-07
                     :ARG1 (c25-5 / we)
                     :ARG2 (c25-10 / sad-02
                                   :ARG0 (c25-3 / hear-01
                                                :ARG0 c25-5
                                                :ARG1 (c25-9 / dry-02
                                                             :ARG1 (c25-7 / anyone)))
                                   :ARG1 c25-5
                                   :quant (c25-8 / amr-unknown)))
       :polarity -)

# ::snt Love the way you think
# ::tokens ["Love", "the", "way", "you", "think"]
# ::lemmas ["love", "the", "way", "you", "think"]
(c27-2 / love-01
       :ARG1 (c27-0 / way
                    :manner-of (c27-3 / think-01
                                      :ARG0 (c27-1 / you))))

# ::snt Did she take her own life ??
# ::tokens ["Did", "she", "take", "her", "own", "life", "?", "?"]
# ::lemmas ["do", "she", "take", "her", "own", "life", "?", "?"]
(c28-3 / take-01
       :polarity (c28-1 / amr-unknown)
       :ARG0 (c28-0 / she)
       :ARG1 (c28-2 / life
                    :poss c28-0))

# ::snt eeer Who exactly???? Who is she ???
# ::tokens ["eeer", "Who", "exactly", "?", "?", "?", "?", "Who", "is", "she", "?", "?", "?"]
# ::lemmas ["eeer", "who", "exactly", "?", "?", "?", "?", "who", "be", "she", "?", "?", "?"]
(c29-0 / multi-sentence
       :snt1 (c29-3 / ask-01
                    :ARG0 (c29-7 / i)
                    :ARG1 (c29-6 / amr-unknown
                                 :mod (c29-4 / exact))
                    :ARG2 (c29-5 / person
                                 :name (c29-1 / name
                                              :op1 "Who")
                                 :mode expressive))
       :snt2 (c29-2 / she
                    :mode expressive))

# ::snt What a despicable comment. You should be ashamed of yourself.
# ::tokens ["What", "a", "despicable", "comment", ".", "You", "should", "be", "ashamed", "of", "yourself", "."]
# ::lemmas ["what", "a", "despicable", "comment", ".", "you", "should", "be", "ashamed", "of", "yourself", "."]
(c30-2 / multi-sentence
       :snt1 (c30-5 / comment-01
                    :mod (c30-6 / despicable
                                :degree (c30-3 / so)))
       :snt2 (c30-4 / recommend-01
                    :ARG1 (c30-0 / shame-02
                                 :ARG0 (c30-1 / you
                                              :ARG1-of c30-0))
                    :ARG2 c30-1))

# ::snt Loads of people die daily but they dont get plastered over sky news
# ::tokens ["Loads", "of", "people", "die", "daily", "but", "they", "do", "nt", "get", "plastered", "over", "sky", "news"]
# ::lemmas ["load", "of", "people", "die", "daily", "but", "they", "do", "not", "get", "plaster", "over", "sky", "news"]
(c31-6 / contrast-01
       :ARG1 (c31-9 / die-01
                    :ARG1 (c31-5 / person
                                 :quant (c31-4 / load))
                    :frequency (c31-3 / rate-entity-91
                                      :ARG3 (c31-8 / temporal-quantity
                                                   :unit (c31-7 / day)
                                                   :quant 1)))
       :ARG2 (c31-1 / plaster-01
                    :ARG1 c31-5
                    :ARG2 (c31-0 / news
                                 :mod (c31-2 / sky))
                    :polarity -))

# ::snt So sad , so young, RIP !
# ::tokens ["So", "sad", ",", "so", "young", ",", "RIP", "!"]
# ::lemmas ["so", "sad", ",", "so", "young", ",", "RIP", "!"]
(c32-3 / and
       :op1 (c32-2 / sad-02
                   :degree (c32-0 / so))
       :op2 (c32-1 / young
                   :degree (c32-5 / so))
       :ARG1-of (c32-4 / die-01))

# ::snt Sky news are not doing a headline about her I'm afraid.
# ::tokens ["Sky", "news", "are", "not", "doing", "a", "headline", "about", "her", "I", "'m", "afraid", "."]
# ::lemmas ["sky", "news", "be", "not", "do", "a", "headline", "about", "she", "i", "be", "afraid", "."]
(c33-0 / fear-01
       :ARG0 (c33-5 / i)
       :ARG1 (c33-6 / do-02
                    :ARG0 (c33-1 / broadcast-program
                                 :name (c33-2 / name
                                              :op1 "Sky"
                                              :op2 "News"))
                    :ARG1 (c33-4 / headline
                                 :topic (c33-3 / she))
                    :polarity -))

# ::snt How?
# ::tokens ["How", "?"]
# ::lemmas ["how", "?"]
(c34-0 / amr-unknown)

# ::snt Someone died and YOU want attention?
# ::tokens ["Someone", "died", "and", "YOU", "want", "attention", "?"]
# ::lemmas ["someone", "die", "and", "you", "want", "attention", "?"]
(c35-5 / and
       :op1 (c35-6 / die-01
                   :ARG1 (c35-1 / someone))
       :op2 (c35-2 / want-01
                   :ARG0 (c35-0 / you)
                   :ARG1 (c35-4 / attend-02
                                :ARG1 c35-0)
                   :polarity (c35-3 / amr-unknown)))

# ::snt Too young, thoughts to her family. And yes, the programme is horrendous but its not about that so shush with your horrible comments. RIP
# ::tokens ["Too", "young", ",", "thoughts", "to", "her", "family", ".", "And", "yes", ",", "the", "programme", "is", "horrendous", "but", "its", "not", "about", "that", "so", "shush", "with", "your", "horrible", "comments", ".", "RIP"]
# ::lemmas ["too", "young", ",", "thought", "to", "her", "family", ".", "and", "yes", ",", "the", "programme", "be", "horrendous", "but", "its", "not", "about", "that", "so", "shush", "with", "your", "horrible", "comment", ".", "RIP"]
(c36-11 / multi-sentence
        :snt1 (c36-8 / think-01
                     :ARG0 (c36-0 / she)
                     :ARG2 (c36-15 / family
                                   :ARG1-of (c36-6 / have-degree-91
                                                   :ARG2 (c36-4 / young)
                                                   :ARG3 (c36-14 / too))))
        :snt2 (c36-7 / and
                     :op2 (c36-13 / contrast-01
                                  :ARG1 (c36-18 / horrendous
                                                :domain (c36-17 / program))
                                  :ARG2 (c36-3 / shush
                                               :domain c36-17
                                               :ARG1-of (c36-10 / cause-01
                                                                :ARG0 (c36-1 / comment-01
                                                                             :ARG0 (c36-9 / you)
                                                                             :mod (c36-5 / horrible)))
                                               :degree (c36-2 / so)
                                               :polarity -)))
        :snt3 (c36-16 / rest-01
                      :ARG1 c36-9
                      :mode imperative)
        :manner (c36-12 / peace))

# ::snt Dont drink the stuff since they changed the recipe. Will not put aspartame in my body. Not good for the brain. Maybe thats why so many people cant work out whats a joke and whats not. Too many artificial sweeteners.
# ::tokens ["Do", "nt", "drink", "the", "stuff", "since", "they", "changed", "the", "recipe", ".", "Will", "not", "put", "aspartame", "in", "my", "body", ".", "Not", "good", "for", "the", "brain", ".", "Maybe", "that", "s", "why", "so", "many", "people", "ca", "nt", "work", "out", "what", "s", "a", "joke", "and", "what", "s", "not", ".", "Too", "many", "artificial", "sweeteners", "."]
# ::lemmas ["do", "not", "drink", "the", "stuff", "since", "they", "change", "the", "recipe", ".", "will", "not", "put", "aspartame", "in", "my", "body", ".", "not", "good", "for", "the", "brain", ".", "maybe", "that", "s", "why", "so", "many", "people", "can", "not", "work", "out", "what", "s", "a", "joke", "and", "what", "s", "not", ".", "too", "many", "artificial", "sweetener", "."]
(c37-20 / multi-sentence
        :snt1 (c37-32 / drink-01
                      :ARG0 (c37-7 / you)
                      :ARG1 (c37-0 / stuff)
                      :time (c37-6 / since
                                   :op1 (c37-22 / change-01
                                                :ARG0 (c37-15 / they)
                                                :ARG1 (c37-26 / recipe)))
                      :polarity -
                      :mode imperative)
        :snt2 (c37-27 / put-01
                      :ARG0 (c37-16 / you)
                      :ARG1 (c37-13 / aspartame)
                      :ARG2 (c37-19 / body
                                    :poss (c37-30 / i))
                      :polarity -)
        :snt3 (c37-14 / good-04
                      :ARG2 (c37-2 / brain)
                      :ARG1-of (c37-21 / possible-01)
                      :polarity -)
        :snt4 (c37-4 / possible-01
                     :ARG1 (c37-18 / cause-01
                                   :ARG0 (c37-23 / that)
                                   :ARG1 (c37-3 / possible-01
                                                :ARG1 (c37-28 / work-out-02
                                                              :ARG0 (c37-12 / person
                                                                            :ARG1-of (c37-8 / have-quant-91
                                                                                            :ARG2 (c37-9 / many)
                                                                                            :ARG3 (c37-5 / so)))
                                                              :ARG1 (c37-17 / and
                                                                            :op1 (c37-11 / joke-01)
                                                                            :op2 (c37-31 / thing
                                                                                         :polarity -))
                                                              :polarity -))))
        :snt5 (c37-25 / sweeten
                      :mod (c37-10 / artificial)
                      :ARG1-of (c37-29 / have-quant-91
                                       :ARG2 (c37-24 / many)
                                       :ARG3 (c37-1 / too))))

# ::snt This is desperately sad that a young woman has died, Patricia, but explain please how she was "failed by the system"
# ::tokens ["This", "is", "desperately", "sad", "that", "a", "young", "woman", "has", "died", ",", "Patricia", ",", "but", "explain", "please", "how", "she", "was", "\"", "failed", "by", "the", "system", "\""]
# ::lemmas ["this", "be", "desperately", "sad", "that", "a", "young", "woman", "have", "die", ",", "Patricia", ",", "but", "explain", "please", "how", "she", "be", "\"", "fail", "by", "the", "system", "\""]
(c38-4 / say-01
       :ARG0 (c38-10 / i)
       :ARG1 (c38-7 / contrast-01
                    :ARG1 (c38-0 / sad-02
                                 :ARG0 (c38-12 / die-01
                                               :ARG1 (c38-8 / woman
                                                            :mod (c38-2 / young)))
                                 :ARG1-of (c38-9 / desperate-02))
                    :ARG2 (c38-5 / explain-01
                                 :ARG0 (c38-6 / person
                                              :name (c38-3 / name
                                                           :op1 "Patricia"))
                                 :ARG1 (c38-11 / thing
                                               :manner-of (c38-1 / fail-01
                                                                 :ARG0 (c38-13 / system)
                                                                 :ARG1 c38-8))
                                 :mode imperative
                                 :polite +))
       :ARG2 c38-6)

# ::snt Same gal
# ::tokens ["Same", "gal"]
# ::lemmas ["same", "gal"]
(c39-0 / gal
       :ARG1-of (c39-1 / same-01))

# ::snt Fuck Marco silva
# ::tokens ["Fuck", "Marco", "silva"]
# ::lemmas ["Fuck", "Marco", "silva"]
(c40-2 / say-01
       :ARG0 (c40-4 / i)
       :ARG1 (c40-0 / fuck-01
                    :ARG1 (c40-3 / person
                                 :name (c40-1 / name
                                              :op1 "Marco"
                                              :op2 "Silva")
                                 :ARG2-of c40-2)
                    :mode expressive))

# ::snt I know wtf
# ::tokens ["I", "know", "wtf"]
# ::lemmas ["i", "know", "wtf"]
(c41-1 / know-01
       :ARG0 (c41-2 / i)
       :ARG1 (c41-3 / amr-unknown
                    :mod (c41-0 / fuck
                                :mode expressive)))

# ::snt What a horrible prick you are
# ::tokens ["What", "a", "horrible", "prick", "you", "are"]
# ::lemmas ["what", "a", "horrible", "prick", "you", "be"]
(c42-1 / prick
       :mod (c42-0 / horrible
                   :degree (c42-3 / so))
       :domain (c42-2 / you)
       :mode expressive)

# ::snt Or be like a root and grow down, about six feet down.
# ::tokens ["Or", "be", "like", "a", "root", "and", "grow", "down", ",", "about", "six", "feet", "down", "."]
# ::lemmas ["or", "be", "like", "a", "root", "and", "grow", "down", ",", "about", "six", "feet", "down", "."]
(c43-0 / or
       :op2 (c43-8 / and
                   :op1 (c43-4 / resemble-01
                               :ARG2 (c43-11 / root))
                   :op2 (c43-9 / grow-01
                               :ARG1 (c43-2 / you)
                               :direction (c43-10 / down)
                               :ARG1-of (c43-3 / mean-01
                                               :ARG2 (c43-7 / about
                                                            :op1 (c43-6 / distance-quantity
                                                                        :unit (c43-1 / foot)
                                                                        :quant 6)
                                                            :direction (c43-5 / down))))))

# ::snt i'm honestly still flabbergasted
# ::tokens ["i", "'m", "honestly", "still", "flabbergasted"]
# ::lemmas ["i", "be", "honestly", "still", "flabbergast"]
(c44-0 / flabbergasted
       :domain (c44-2 / i)
       :mod (c44-3 / still)
       :ARG1-of (c44-1 / honest-01))

# ::snt Hes an Everton fan, hes emotionally unstable
# ::tokens ["He", "s", "an", "Everton", "fan", ",", "he", "s", "emotionally", "unstable"]
# ::lemmas ["he", "s", "an", "Everton", "fan", ",", "he", "s", "emotionally", "unstable"]
(c45-0 / fan
       :domain (c45-4 / he)
       :mod (c45-6 / team
                   :name (c45-1 / name
                                :op1 "Everton"))
       :ARG0-of (c45-5 / cause-01
                       :ARG1 (c45-2 / stable-03
                                    :ARG1 c45-4
                                    :manner (c45-3 / emotion)
                                    :polarity -)))

# ::snt Such a young age, but no idea who she is. Sorry.
# ::tokens ["Such", "a", "young", "age", ",", "but", "no", "idea", "who", "she", "is", ".", "Sorry", "."]
# ::lemmas ["such", "a", "young", "age", ",", "but", "no", "idea", "who", "she", "be", ".", "sorry", "."]
(c46-2 / multi-sentence
       :snt1 (c46-7 / contrast-01
                    :ARG1 (c46-9 / age-01
                                 :ARG2 (c46-1 / young
                                              :degree (c46-3 / such)))
                    :ARG2 (c46-5 / have-03
                                 :ARG0 (c46-8 / i)
                                 :ARG1 (c46-4 / idea
                                              :topic (c46-6 / person
                                                            :domain (c46-0 / she)))
                                 :polarity -))
       :snt2 (c46-10 / sorry-01
                     :ARG1 c46-8))

# ::snt So young.. Thoughts are with the family.. Rip..
# ::tokens ["So", "young", "..", "Thoughts", "are", "with", "the", "family", "..", "Rip", ".."]
# ::lemmas ["so", "young", "..", "thought", "be", "with", "the", "family", "..", "Rip", ".."]
(c47-2 / multi-sentence
       :snt1 (c47-1 / young
                    :degree (c47-4 / so))
       :snt2 (c47-6 / think-01
                    :accompanier (c47-0 / family))
       :snt3 (c47-5 / person
                    :name (c47-3 / name
                                 :op1 "Rip")))

# ::snt Has a sense of humour left GB. Everything is taken literally these days.
# ::tokens ["Has", "a", "sense", "of", "humour", "left", "GB", ".", "Everything", "is", "taken", "literally", "these", "days", "."]
# ::lemmas ["have", "a", "sense", "of", "humour", "leave", "GB", ".", "everything", "be", "take", "literally", "these", "days", "."]
(c48-0 / multi-sentence
       :snt1 (c48-5 / leave-15
                    :ARG0 (c48-4 / have-03
                                 :ARG1 (c48-2 / sense-01
                                              :ARG1 (c48-7 / humor)))
                    :ARG1 (c48-6 / person
                                 :name (c48-1 / name
                                              :op1 "GB")))
       :snt2 (c48-8 / take-04
                    :ARG1 (c48-3 / everything)
                    :ARG2 (c48-10 / literal)
                    :time (c48-9 / day
                                 :mod (c48-11 / this))))

# ::snt Tosser
# ::tokens ["Tosser"]
# ::lemmas ["tosser"]
(c49-1 / person
       :name (c49-0 / name
                    :op1 "Tosser"))

# ::snt Hope all the rest follow suit.
# ::tokens ["Hope", "all", "the", "rest", "follow", "suit", "."]
# ::lemmas ["hope", "all", "the", "rest", "follow", "suit", "."]
(c50-1 / hope-01
       :ARG1 (c50-0 / follow-suit-06
                    :ARG0 (c50-3 / rest
                                 :mod (c50-2 / all))))
