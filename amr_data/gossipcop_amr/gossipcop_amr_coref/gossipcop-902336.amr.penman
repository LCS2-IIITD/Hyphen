# ::snt And she doesn't have to prove shit to you. You just shouldn't be questioning her.
# ::tokens ["And", "she", "does", "n't", "have", "to", "prove", "shit", "to", "you", ".", "You", "just", "should", "n't", "be", "questioning", "her", "."]
# ::lemmas ["and", "she", "do", "not", "have", "to", "prove", "shit", "to", "you", ".", "you", "just", "should", "not", "be", "question", "she", "."]
(c1-3 / multi-sentence
      :snt1 (c1-9 / and
                  :op2 (c1-0 / obligate-01
                             :ARG1 (c1-4 / she)
                             :ARG2 (c1-6 / prove-01
                                         :ARG0 c1-4
                                         :ARG1 (c1-1 / shit)
                                         :ARG2 (c1-2 / you))
                             :polarity -))
      :snt2 (c1-5 / recommend-01
                  :ARG1 (c1-8 / question-03
                              :ARG0 (c1-10 / you)
                              :ARG1 (c1-11 / she)
                              :polarity -)
                  :mod (c1-7 / just)))

# ::snt Keep your gross ass opinions to yourself. No one wants to see you calling someone fake. People with what me and Solange have, get treated like liars enough as it is. So fuck off.
# ::tokens ["Keep", "your", "gross", "ass", "opinions", "to", "yourself", ".", "No", "one", "wants", "to", "see", "you", "calling", "someone", "fake", ".", "People", "with", "what", "me", "and", "Solange", "have", ",", "get", "treated", "like", "liars", "enough", "as", "it", "is", ".", "So", "fuck", "off", "."]
# ::lemmas ["keep", "your", "gross", "ass", "opinion", "to", "yourself", ".", "no", "one", "want", "to", "see", "you", "call", "someone", "fake", ".", "people", "with", "what", "i", "and", "Solange", "have", ",", "get", "treat", "like", "liar", "enough", "as", "it", "be", ".", "so", "fuck", "off", "."]
(c2-14 / multi-sentence
       :snt1 (c2-8 / keep-02
                   :ARG0 (c2-6 / you)
                   :ARG1 (c2-10 / thing
                                :ARG1-of (c2-4 / opine-01
                                               :ARG0 c2-6)
                                :ARG1-of (c2-11 / gross-05))
                   :beneficiary c2-6
                   :mode imperative)
       :snt2 (c2-24 / want-01
                    :ARG0 (c2-20 / no-one)
                    :ARG1 (c2-0 / see-01
                                :ARG0 c2-20
                                :ARG1 (c2-17 / call-01
                                             :ARG0 (c2-12 / you)
                                             :ARG1 (c2-5 / someone)
                                             :ARG2 (c2-19 / fake-02
                                                          :ARG1 c2-5))))
       :snt3 (c2-18 / treat-01
                    :ARG1 (c2-22 / person
                                 :ARG0-of (c2-7 / have-03
                                                :ARG1 (c2-26 / thing
                                                             :ARG0 (c2-9 / and
                                                                         :op1 (c2-27 / i)
                                                                         :op2 (c2-15 / person
                                                                                     :name (c2-16 / name
                                                                                                  :op1 "Solange")))
                                                             :ARG1-of c2-7))))
       :ARG2 (c2-2 / person
                   :ARG0-of (c2-1 / lie-08))
       :ARG1-of (c2-25 / have-degree-91
                       :ARG2 (c2-13 / bad-07
                                    :ARG1 c2-18)
                       :ARG3 (c2-21 / enough))
       :snt4 (c2-23 / fuck-off-03
                    :ARG0 (c2-3 / you)
                    :mode imperative))

# ::snt Hope they get it under control!!!!
# ::tokens ["Hope", "they", "get", "it", "under", "control", "!", "!", "!", "!"]
# ::lemmas ["hope", "they", "get", "it", "under", "control", "!", "!", "!", "!"]
(c3-1 / hope-01
      :ARG0 (c3-3 / i)
      :ARG1 (c3-2 / control-01
                  :ARG0 (c3-4 / they)
                  :ARG1 (c3-0 / it))
      :mode expressive)

# ::snt WHO????
# ::tokens ["WHO", "?", "?", "?", "?"]
# ::lemmas ["who", "?", "?", "?", "?"]
(c4-0 / amr-unknown)

# ::snt Wow there are just too many illnesses falling out the sky these days! Once again I must preach how imperative it is "if you don't feel good get yourself checked" always felt crappydiagnosed at
# ::tokens ["Wow", "there", "are", "just", "too", "many", "illnesses", "falling", "out", "the", "sky", "these", "days", "!", "Once", "again", "I", "must", "preach", "how", "imperative", "it", "is", "\"", "if", "you", "do", "n't", "feel", "good", "get", "yourself", "checked", "\"", "always", "felt", "crappydiagnosed", "at"]
# ::lemmas ["wow", "there", "be", "just", "too", "many", "illness", "fall", "out", "the", "sky", "these", "day", "!", "once", "again", "i", "must", "preach", "how", "imperative", "it", "be", "\"", "if", "you", "do", "not", "feel", "good", "get", "yourself", "check", "\"", "always", "felt", "crappydiagnose", "at"]
(c5-11 / multi-sentence
       :snt1 (c5-14 / fall-01
                    :ARG1 (c5-19 / ill-01
                                 :ARG1-of (c5-6 / have-quant-91
                                                :ARG2 (c5-5 / many)
                                                :ARG3 (c5-7 / too)))
                    :ARG4 (c5-0 / sky)
                    :time (c5-20 / day
                                 :mod (c5-13 / this))
                    :mod (c5-18 / wow
                                :mode expressive))
       :snt2 (c5-1 / obligate-01
                   :ARG1 (c5-4 / i)
                   :ARG2 (c5-15 / preach-01
                                :ARG0 c5-4
                                :degree (c5-2 / so)
                                :domain (c5-16 / feel-01
                                               :ARG0 (c5-3 / you)
                                               :ARG1 (c5-12 / check-01
                                                            :ARG1 c5-3)
                                               :condition (c5-17 / feel-01
                                                                 :ARG0 c5-3
                                                                 :ARG1 (c5-8 / good-02)
                                                                 :polarity -))
                                :ARG1 imperative))
       :mod (c5-9 / again
                  :mod (c5-10 / once)))
