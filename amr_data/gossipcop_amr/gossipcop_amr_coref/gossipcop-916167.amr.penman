# ::snt Get a job Kevin Federline!
# ::tokens ["Get", "a", "job", "Kevin", "Federline", "!"]
# ::lemmas ["get", "a", "job", "Kevin", "Federline", "!"]
(c1-1 / say-01
      :ARG0 (c1-4 / i)
      :ARG1 (c1-5 / get-01
                  :ARG0 (c1-2 / person
                              :name (c1-0 / name
                                          :op1 "Kevin"
                                          :op2 "Federline"))
                  :ARG1 (c1-3 / job)
                  :mode imperative)
      :ARG2 c1-2)

# ::snt Get a job Kevin!
# ::tokens ["Get", "a", "job", "Kevin", "!"]
# ::lemmas ["get", "a", "job", "Kevin", "!"]
(c2-1 / say-01
      :ARG0 (c2-4 / i)
      :ARG1 (c2-5 / get-01
                  :ARG0 (c2-2 / person
                              :name (c2-0 / name
                                          :op1 "Kevin"))
                  :ARG1 (c2-3 / job)
                  :mode imperative)
      :ARG2 c2-2)

# ::snt The nerve of this parasite. I hope he get his worst Karma
# ::tokens ["The", "nerve", "of", "this", "parasite", ".", "I", "hope", "he", "get", "his", "worst", "Karma"]
# ::lemmas ["the", "nerve", "of", "this", "parasite", ".", "i", "hope", "he", "get", "his", "bad", "Karma"]
(c3-2 / multi-sentence
      :snt1 (c3-1 / nerve
                  :poss (c3-5 / parasite
                              :mod (c3-10 / this)))
      :snt2 (c3-4 / hope-01
                  :ARG0 (c3-9 / i)
                  :ARG1 (c3-11 / get-01
                               :ARG0 (c3-8 / he)
                               :ARG1 (c3-12 / thing
                                            :name (c3-6 / name
                                                        :op1 "Karma")
                                            :ARG1-of (c3-0 / bad-04
                                                           :ARG2-of (c3-3 / have-degree-91
                                                                          :ARG1 c3-12
                                                                          :ARG3 (c3-7 / most)))))))

# ::snt You want more money Kevin you better work bitch.
# ::tokens ["You", "want", "more", "money", "Kevin", "you", "better", "work", "bitch", "."]
# ::lemmas ["you", "want", "more", "money", "Kevin", "you", "well", "work", "bitch", "."]
(c5-2 / say-01
      :ARG0 (c5-6 / i)
      :ARG1 (c5-5 / want-01
                  :ARG0 (c5-4 / person
                              :name (c5-0 / name
                                          :op1 "Kevin"))
                  :ARG1 (c5-1 / money
                              :mod (c5-3 / more)))
      :ARG2 c5-4)

# ::snt Honestly I was just trolling. I honestly think that the way child support works in this country is absurd.
# ::tokens ["Honestly", "I", "was", "just", "trolling", ".", "I", "honestly", "think", "that", "the", "way", "child", "support", "works", "in", "this", "country", "is", "absurd", "."]
# ::lemmas ["honestly", "i", "be", "just", "trolling", ".", "i", "honestly", "think", "that", "the", "way", "child", "support", "work", "in", "this", "country", "be", "absurd", "."]
(c6-0 / multi-sentence
      :snt1 (c6-11 / troll-01
                   :ARG0 (c6-10 / i)
                   :mod (c6-9 / just)
                   :ARG1-of (c6-4 / honest-01))
      :snt2 (c6-14 / think-01
                   :ARG0 (c6-2 / i)
                   :ARG1 (c6-3 / absurd
                               :domain (c6-6 / way
                                             :manner-of (c6-5 / work-09
                                                              :ARG1 (c6-1 / support-01
                                                                          :ARG1 (c6-7 / child))
                                                              :location (c6-13 / country
                                                                               :mod (c6-12 / this)))))
                   :ARG1-of (c6-8 / honest-01)))

# ::snt Because of ...
# ::tokens ["Because", "of", "..."]
# ::lemmas ["because", "of", "..."]
(c7-0 / cause-01)

# ::snt No, he has sole custody but from the goodness of his heart he agreed to share the kids with her.
# ::tokens ["No", ",", "he", "has", "sole", "custody", "but", "from", "the", "goodness", "of", "his", "heart", "he", "agreed", "to", "share", "the", "kids", "with", "her", "."]
# ::lemmas ["no", ",", "he", "have", "sole", "custody", "but", "from", "the", "goodness", "of", "his", "heart", "he", "agree", "to", "share", "the", "kid", "with", "she", "."]
(c8-5 / contrast-01
      :ARG1 (c8-3 / have-03
                  :ARG0 (c8-6 / he
                              :part (c8-2 / heart))
                  :ARG1 (c8-9 / custody
                              :mod (c8-1 / sole)))
      :ARG2 (c8-7 / agree-01
                  :ARG0 c8-6
                  :ARG1 (c8-0 / share-01
                              :ARG0 c8-6
                              :ARG1 (c8-4 / kid)
                              :ARG2 (c8-10 / she))
                  :source (c8-8 / goodness
                                :poss c8-2)))

# ::snt On the paper unfortunately yes
# ::tokens ["On", "the", "paper", "unfortunately", "yes"]
# ::lemmas ["on", "the", "paper", "unfortunately", "yes"]
(c9-1 / yes
      :location (c9-2 / paper)
      :ARG2-of (c9-0 / fortunate-01
                     :polarity -))

# ::snt So? She works her ass off, what does he do, why should she pay him any dime? The kids spend most of the time with her anyway.
# ::tokens ["So", "?", "She", "works", "her", "ass", "off", ",", "what", "does", "he", "do", ",", "why", "should", "she", "pay", "him", "any", "dime", "?", "The", "kids", "spend", "most", "of", "the", "time", "with", "her", "anyway", "."]
# ::lemmas ["so", "?", "she", "work", "her", "ass", "off", ",", "what", "do", "he", "do", ",", "why", "should", "she", "pay", "he", "any", "dime", "?", "the", "kid", "spend", "most", "of", "the", "time", "with", "she", "anyway", "."]
(c10-12 / multi-sentence
        :snt1 (c10-0 / so)
        :snt2 (c10-10 / and
                      :op1 (c10-22 / work-01
                                   :ARG0 (c10-3 / she)
                                   :degree (c10-9 / ass-off))
                      :op2 (c10-20 / do-02
                                   :ARG0 (c10-5 / he)
                                   :ARG1 (c10-8 / amr-unknown))
                      :op3 (c10-14 / cause-01
                                   :ARG0 (c10-26 / amr-unknown)
                                   :ARG1 (c10-19 / recommend-01
                                                 :ARG1 (c10-21 / pay-01
                                                               :ARG0 (c10-2 / she)
                                                               :ARG1 (c10-15 / dime
                                                                             :mod (c10-23 / any))
                                                               :ARG2 (c10-24 / he)))))
        :snt3 (c10-18 / spend-02
                      :ARG0 (c10-13 / person
                                    :ARG0-of (c10-4 / have-rel-role-91
                                                    :ARG1 (c10-1 / she)
                                                    :ARG2 (c10-6 / kid)))
                      :ARG1 (c10-11 / time
                                    :ARG1-of (c10-25 / include-91
                                                     :ARG2 (c10-16 / time)
                                                     :ARG3 (c10-7 / most)))
                      :accompanier c10-2
                      :mod (c10-17 / anyway)))

# ::snt Yeaaah because he really wants the money for Jayden and Preston, totally not for him, if the boys go, his income goes as well...i pray that Britney will get custody back and just be over with this parasite once and for all.
# ::tokens ["Yeaaah", "because", "he", "really", "wants", "the", "money", "for", "Jayden", "and", "Preston", ",", "totally", "not", "for", "him", ",", "if", "the", "boys", "go", ",", "his", "income", "goes", "as", "well", "...", "i", "pray", "that", "Britney", "will", "get", "custody", "back", "and", "just", "be", "over", "with", "this", "parasite", "once", "and", "for", "all", "."]
# ::lemmas ["Yeaaah", "because", "he", "really", "want", "the", "money", "for", "Jayden", "and", "Preston", ",", "totally", "not", "for", "he", ",", "if", "the", "boy", "go", ",", "his", "income", "go", "as", "well", "...", "i", "pray", "that", "Britney", "will", "get", "custody", "back", "and", "just", "be", "over", "with", "this", "parasite", "once", "and", "for", "all", "."]
(c11-17 / multi-sentence
        :snt1 (c11-20 / cause-01
                      :ARG0 (c11-15 / contrast-01
                                    :ARG1 (c11-26 / want-01
                                                  :ARG0 (c11-6 / he)
                                                  :ARG1 (c11-7 / money)
                                                  :ARG2 (c11-12 / and
                                                                :op1 (c11-24 / person
                                                                             :name (c11-22 / name
                                                                                           :op1 "Jayden"))
                                                                :op2 (c11-18 / person
                                                                             :name (c11-19 / name
                                                                                           :op1 "Preston")))
                                                  :ARG1-of (c11-23 / real-04))
                                    :ARG2 (c11-0 / want-01
                                                 :ARG0 c11-6
                                                 :ARG1 c11-7
                                                 :degree (c11-11 / total)
                                                 :polarity -))
                      :ARG1 (c11-13 / go-02
                                    :ARG0 (c11-10 / and
                                                  :op1 c11-6
                                                  :op2 c11-18)
                                    :mod (c11-8 / as-well)))
        :snt2 (c11-4 / pray-01
                     :ARG0 (c11-27 / i)
                     :ARG1 (c11-28 / and
                                   :op1 (c11-3 / get-back-09
                                               :ARG0 (c11-1 / person
                                                            :name (c11-25 / name
                                                                          :op1 "Britney"))
                                               :ARG1 (c11-2 / custody))
                                   :op2 (c11-5 / over-02
                                               :ARG1 (c11-14 / parasite
                                                             :mod (c11-21 / this))
                                               :mod (c11-9 / just)
                                               :mod (c11-16 / once-and-for-all)))))

# ::snt Britney should totally go to court with this piece of shit of a man and ask for sole custody, the kids seem so happy with her and shes doing so great. What kind of father is he, what kind of example does he sets for the boys?! It feels like he is using the boys and it s sad.
# ::tokens ["Britney", "should", "totally", "go", "to", "court", "with", "this", "piece", "of", "shit", "of", "a", "man", "and", "ask", "for", "sole", "custody", ",", "the", "kids", "seem", "so", "happy", "with", "her", "and", "she", "s", "doing", "so", "great", ".", "What", "kind", "of", "father", "is", "he", ",", "what", "kind", "of", "example", "does", "he", "sets", "for", "the", "boys", "?", "!", "It", "feels", "like", "he", "is", "using", "the", "boys", "and", "it", "s", "sad", "."]
# ::lemmas ["Britney", "should", "totally", "go", "to", "court", "with", "this", "piece", "of", "shit", "of", "a", "man", "and", "ask", "for", "sole", "custody", ",", "the", "kid", "seem", "so", "happy", "with", "she", "and", "she", "s", "do", "so", "great", ".", "what", "kind", "of", "father", "be", "he", ",", "what", "kind", "of", "example", "do", "he", "set", "for", "the", "boy", "?", "!", "it", "feel", "like", "he", "be", "use", "the", "boy", "and", "it", "s", "sad", "."]
(c12-19 / multi-sentence
        :snt1 (c12-30 / recommend-01
                      :ARG1 (c12-14 / and
                                    :op1 (c12-15 / go-02
                                                 :ARG0 (c12-32 / person
                                                               :name (c12-28 / name
                                                                             :op1 "Britney"))
                                                 :ARG4 (c12-23 / court)
                                                 :manner (c12-20 / piece
                                                                 :consist-of (c12-0 / shit)
                                                                 :mod (c12-13 / this))
                                                 :mod (c12-24 / total))
                                    :op2 (c12-12 / ask-02
                                                 :ARG0 c12-32
                                                 :ARG1 (c12-16 / custody
                                                               :mod (c12-5 / sole)))))
        :snt2 (c12-11 / and
                      :op1 (c12-4 / seem-01
                                  :ARG1 (c12-8 / happy-01
                                               :ARG0 (c12-29 / she)
                                               :ARG1 (c12-9 / kid)
                                               :degree (c12-1 / so)))
                      :op2 (c12-37 / do-02
                                   :ARG0 c12-29
                                   :ARG1 (c12-2 / great
                                                :degree (c12-18 / so))))
        :snt3 (c12-21 / and
                      :op1 (c12-3 / person
                                  :ARG0-of (c12-35 / have-rel-role-91
                                                   :ARG1 (c12-7 / he)
                                                   :ARG2 (c12-27 / father)
                                                   :mod (c12-34 / amr-unknown))
                                  :domain c12-7)
                      :op2 (c12-22 / set-02
                                   :ARG0 c12-7
                                   :ARG1 (c12-31 / example
                                                 :mod (c12-25 / amr-unknown))
                                   :beneficiary (c12-17 / boy)))
        :snt4 (c12-10 / and
                      :op1 (c12-33 / feel-01
                                   :ARG1 (c12-26 / use-01
                                                 :ARG0 c12-7
                                                 :ARG1 c12-17))
                      :op2 (c12-6 / sad-02
                                  :ARG1 (c12-36 / it))))

# ::snt Broke ass man asking his ex for $
# ::tokens ["Broke", "ass", "man", "asking", "his", "ex", "for", "$"]
# ::lemmas ["break", "ass", "man", "ask", "his", "ex", "for", "$"]
(c13-9 / ask-02
       :ARG0 (c13-2 / man
                    :mod (c13-8 / ass
                                :ARG1-of (c13-1 / break-01)))
       :ARG1 (c13-5 / monetary-quantity
                    :quant (c13-0 / $1)
                    :ARG2 (c13-6 / person
                                 :ARG0-of (c13-7 / have-rel-role-91
                                                 :ARG1 c13-2
                                                 :ARG2 (c13-3 / significant-other)
                                                 :time (c13-4 / ex)))))

# ::snt loser
# ::tokens ["loser"]
# ::lemmas ["loser"]
(c14-1 / have-degree-91
       :ARG2 (c14-0 / close-10)
       :ARG3 (c14-2 / more))

# ::snt Get a freakin job ole broke ass. Hes wack
# ::tokens ["Get", "a", "freakin", "job", "ole", "broke", "ass", ".", "He", "s", "wack"]
# ::lemmas ["get", "a", "freakin", "job", "ole", "break", "ass", ".", "he", "s", "wack"]
(c15-4 / multi-sentence
       :snt1 (c15-8 / get-01
                    :ARG0 (c15-3 / you)
                    :ARG1 (c15-6 / job
                                 :mod (c15-0 / freak))
                    :ARG4 (c15-7 / ass
                                 :ARG1-of (c15-2 / break-01)
                                 :mod (c15-1 / old))
                    :mode imperative)
       :snt2 (c15-5 / wack
                    :domain (c15-9 / you)
                    :mode expressive))

# ::snt We hate a freeloading pig. He needs to get a job.
# ::tokens ["We", "hate", "a", "freeloading", "pig", ".", "He", "needs", "to", "get", "a", "job", "."]
# ::lemmas ["we", "hate", "a", "freeloading", "pig", ".", "he", "need", "to", "get", "a", "job", "."]
(c16-1 / multi-sentence
       :snt1 (c16-3 / hate-01
                    :ARG0 (c16-5 / we)
                    :ARG1 (c16-4 / pig
                                 :ARG0-of (c16-0 / freeload-00)))
       :snt2 (c16-2 / need-01
                    :ARG0 (c16-6 / he)
                    :ARG1 (c16-8 / get-01
                                 :ARG0 c16-6
                                 :ARG1 (c16-7 / job))))

# ::snt By child support he means kevin federline support
# ::tokens ["By", "child", "support", "he", "means", "kevin", "federline", "support"]
# ::lemmas ["by", "child", "support", "he", "mean", "kevin", "federline", "support"]
(c17-1 / mean-01
       :ARG0 (c17-4 / he)
       :ARG1 (c17-3 / support-01
                    :ARG1 (c17-6 / child))
       :ARG2 (c17-0 / support-01
                    :ARG1 (c17-5 / person
                                 :name (c17-2 / name
                                              :op1 "kevin"
                                              :op2 "Federline"))))

# ::snt douche bag!
# ::tokens ["douche", "bag", "!"]
# ::lemmas ["douche", "bag", "!"]
(c18-1 / bag
       :mod (c18-0 / douche))

# ::snt Kevin- be a man, get a job, and stop living off your ex... Brittney is doing well now, and you want to feed off it... she's a good mom, and her only responsibility is to her children, not your life style...
# ::tokens ["Kevin-", "be", "a", "man", ",", "get", "a", "job", ",", "and", "stop", "living", "off", "your", "ex", "...", "Brittney", "is", "doing", "well", "now", ",", "and", "you", "want", "to", "feed", "off", "it", "...", "she", "'s", "a", "good", "mom", ",", "and", "her", "only", "responsibility", "is", "to", "her", "children", ",", "not", "your", "life", "style", "..."]
# ::lemmas ["Kevin-", "be", "a", "man", ",", "get", "a", "job", ",", "and", "stop", "live", "off", "your", "ex", "...", "Brittney", "be", "do", "well", "now", ",", "and", "you", "want", "to", "feed", "off", "it", "...", "she", "be", "a", "good", "mom", ",", "and", "her", "only", "responsibility", "be", "to", "her", "child", ",", "not", "your", "life", "style", "..."]
(c19-18 / multi-sentence
        :snt1 (c19-0 / say-01
                     :ARG0 (c19-33 / i)
                     :ARG1 (c19-14 / and
                                   :op1 (c19-10 / man
                                                :domain (c19-29 / person
                                                                :name (c19-25 / name
                                                                              :op1 "Kevin")))
                                   :op2 (c19-15 / get-01
                                                :ARG0 c19-29
                                                :ARG1 (c19-12 / job)
                                                :mode imperative)
                                   :op3 (c19-7 / stop-01
                                               :ARG0 c19-29
                                               :ARG1 (c19-1 / live-off-04
                                                            :ARG0 c19-29
                                                            :ARG1 (c19-19 / person
                                                                          :name (c19-20 / name
                                                                                        :op1 "Britney")
                                                                          :ARG0-of (c19-11 / have-rel-role-91
                                                                                           :ARG1 c19-29
                                                                                           :ARG2 (c19-6 / significant-other)
                                                                                           :time (c19-28 / ex))))
                                               :mode imperative))
                     :ARG2 c19-29)
        :snt2 (c19-13 / and
                      :op1 (c19-31 / well-09
                                   :ARG1 (c19-5 / person
                                                :name (c19-30 / name
                                                              :op1 "Britney"))
                                   :time (c19-22 / now))
                      :op2 (c19-2 / want-01
                                  :ARG0 c19-5
                                  :ARG1 (c19-24 / feed-off-04
                                                :ARG0 c19-5
                                                :ARG1 c19-5))
                      :op3 (c19-4 / good-02
                                  :ARG1 (c19-32 / have-rel-role-91
                                                :ARG0 c19-5
                                                :ARG2 (c19-23 / mom)))
                      :op4 (c19-27 / responsible-03
                                   :ARG0 c19-5
                                   :ARG1 (c19-3 / person
                                                :ARG0-of (c19-9 / have-rel-role-91
                                                                :ARG1 c19-5
                                                                :ARG2 (c19-21 / child)))
                                   :mod (c19-8 / only)
                                   :ARG1-of (c19-17 / contrast-01
                                                    :ARG2 (c19-26 / style
                                                                  :mod (c19-16 / life)
                                                                  :poss c19-5
                                                                  :polarity -)))))

# ::snt Kevin, try to get a job...
# ::tokens ["Kevin", ",", "try", "to", "get", "a", "job", "..."]
# ::lemmas ["Kevin", ",", "try", "to", "get", "a", "job", "..."]
(c20-1 / say-01
       :ARG0 (c20-4 / i)
       :ARG1 (c20-5 / try-01
                    :ARG0 (c20-2 / person
                                 :name (c20-0 / name
                                              :op1 "Kevin"))
                    :ARG1 (c20-6 / get-01
                                 :ARG0 c20-2
                                 :ARG1 (c20-3 / job)))
       :ARG2 c20-2)

# ::snt He was on VladTV saying that he was one of the biggest stars at the time. No one cared about him.
# ::tokens ["He", "was", "on", "VladTV", "saying", "that", "he", "was", "one", "of", "the", "biggest", "stars", "at", "the", "time", ".", "No", "one", "cared", "about", "him", "."]
# ::lemmas ["he", "be", "on", "VladTV", "say", "that", "he", "be", "one", "of", "the", "big", "star", "at", "the", "time", ".", "no", "one", "care", "about", "he", "."]
(c21-2 / multi-sentence
       :snt1 (c21-4 / say-01
                    :ARG0 (c21-6 / he)
                    :ARG1 (c21-12 / include-91
                                  :ARG1 c21-6
                                  :ARG2 (c21-0 / star
                                               :time (c21-13 / time)
                                               :ARG1-of (c21-11 / have-degree-91
                                                                :ARG2 (c21-1 / big)
                                                                :ARG3 (c21-7 / most))))
                    :medium (c21-8 / broadcast-program
                                   :name (c21-3 / name
                                                :op1 "VladTV")))
       :snt2 (c21-10 / care-01
                     :ARG0 (c21-9 / no-one)
                     :ARG1 (c21-5 / he)))

# ::snt Barf!
# ::tokens ["Barf", "!"]
# ::lemmas ["Barf", "!"]
(c22-0 / bad-07
       :mode expressive)

# ::snt Get a job
# ::tokens ["Get", "a", "job"]
# ::lemmas ["get", "a", "job"]
(c23-0 / get-01
       :ARG0 (c23-1 / you)
       :ARG1 (c23-2 / job)
       :mode imperative)

# ::snt Omg! What a fucking loser !!! he needs to get a fucking job!!!
# ::tokens ["Omg", "!", "What", "a", "fucking", "loser", "!", "!", "!", "he", "needs", "to", "get", "a", "fucking", "job", "!", "!", "!"]
# ::lemmas ["Omg", "!", "what", "a", "fucking", "loser", "!", "!", "!", "he", "need", "to", "get", "a", "fucking", "job", "!", "!", "!"]
(c24-2 / multi-sentence
       :snt1 (c24-0 / oh-my-god
                    :mode expressive)
       :snt2 (c24-7 / person
                    :ARG0-of (c24-6 / lose-03)
                    :mod (c24-1 / fucking
                                :degree (c24-4 / so)
                                :mode expressive))
       :snt3 (c24-3 / need-01
                    :ARG0 (c24-5 / he)
                    :ARG1 (c24-9 / get-01
                                 :ARG0 c24-5
                                 :ARG1 (c24-8 / job
                                              :mod c24-1))))

# ::snt Bahaha smh
# ::tokens ["Bahaha", "smh"]
# ::lemmas ["Bahaha", "smh"]
(c25-0 / bahaha
       :mod (c25-1 / smh)
       :mode expressive)

# ::snt It seems like she has the kids most of the time now
# ::tokens ["It", "seems", "like", "she", "has", "the", "kids", "most", "of", "the", "time", "now"]
# ::lemmas ["it", "seem", "like", "she", "have", "the", "kid", "most", "of", "the", "time", "now"]
(c26-2 / seem-01
       :ARG1 (c26-3 / have-03
                    :ARG0 (c26-0 / she)
                    :ARG1 (c26-4 / kid)
                    :time (c26-5 / time
                                 :mod (c26-1 / most))))

# ::snt Seriously? What a,slug, go get a job buddy!
# ::tokens ["Seriously", "?", "What", "a", ",", "slug", ",", "go", "get", "a", "job", "buddy", "!"]
# ::lemmas ["seriously", "?", "what", "a", ",", "slug", ",", "go", "get", "a", "job", "buddy", "!"]
(c27-2 / multi-sentence
       :snt1 (c27-3 / serious-01
                    :polarity (c27-8 / amr-unknown))
       :snt2 (c27-9 / go-05
                    :ARG0 (c27-1 / you)
                    :ARG1 (c27-7 / get-01
                                 :ARG0 c27-1
                                 :ARG1 (c27-6 / job)
                                 :ARG4 (c27-5 / person
                                              :ARG0-of (c27-4 / have-rel-role-91
                                                              :ARG1 c27-1
                                                              :ARG2 (c27-0 / buddy))))
                    :degree (c27-10 / amr-unknown)
                    :mode imperative))

# ::snt Go get a job dude
# ::tokens ["Go", "get", "a", "job", "dude"]
# ::lemmas ["go", "get", "a", "job", "dude"]
(c28-0 / say-01
       :ARG0 (c28-3 / i)
       :ARG1 (c28-4 / go-05
                    :ARG0 (c28-5 / dude)
                    :ARG1 (c28-2 / get-01
                                 :ARG0 c28-5
                                 :ARG1 (c28-1 / job))
                    :mode imperative)
       :ARG2 c28-5)

# ::snt Glad to see the brother get it!! Bout time!!
# ::tokens ["Glad", "to", "see", "the", "brother", "get", "it", "!", "!", "Bout", "time", "!", "!"]
# ::lemmas ["Glad", "to", "see", "the", "brother", "get", "it", "!", "!", "bout", "time", "!", "!"]
(c29-1 / multi-sentence
       :snt1 (c29-9 / glad-02
                    :ARG0 (c29-2 / see-01
                                 :ARG0 (c29-8 / i)
                                 :ARG1 (c29-7 / get-01
                                              :ARG0 (c29-5 / person
                                                           :ARG0-of (c29-4 / have-rel-role-91
                                                                           :ARG1 c29-8
                                                                           :ARG2 (c29-0 / brother)))
                                              :ARG1 (c29-3 / it)))
                    :ARG1 c29-8)
       :snt2 (c29-6 / Bout-time))

# ::snt What a scumbag!!
# ::tokens ["What", "a", "scumbag", "!", "!"]
# ::lemmas ["what", "a", "scumbag", "!", "!"]
(c30-1 / scumbag
       :degree (c30-0 / so))

# ::snt LEAVE BRITNEY ALONE KEVIN!
# ::tokens ["LEAVE", "BRITNEY", "ALONE", "KEVIN", "!"]
# ::lemmas ["leave", "BRITNEY", "ALONE", "KEVIN", "!"]
(c31-0 / carry-01
       :ARG0 (c31-2 / you)
       :ARG1 (c31-3 / person
                    :name (c31-1 / name
                                 :op1 "Benjamin"
                                 :op2 "Alone"
                                 :op3 "KEVIN"))
       :mode imperative)

# ::snt Does this surprise anyone ? Count your days ,these kids will turn one day.
# ::tokens ["Does", "this", "surprise", "anyone", "?", "Count", "your", "days", ",", "these", "kids", "will", "turn", "one", "day", "."]
# ::lemmas ["do", "this", "surprise", "anyone", "?", "count", "your", "day", ",", "these", "kid", "will", "turn", "one", "day", "."]
(c32-1 / multi-sentence
       :snt1 (c32-2 / surprise-01
                    :polarity (c32-9 / amr-unknown)
                    :ARG0 (c32-7 / this)
                    :ARG1 (c32-8 / anyone))
       :snt2 (c32-5 / count-01
                    :ARG0 (c32-0 / you)
                    :ARG1 (c32-11 / day
                                  :poss c32-0)
                    :ARG1-of (c32-12 / cause-01
                                     :ARG0 (c32-4 / turn-02
                                                  :ARG1 (c32-3 / kid
                                                               :mod (c32-10 / this))
                                                  :ARG2 (c32-6 / day
                                                               :quant 1)))
                    :mode imperative))

# ::snt Really?!
# ::tokens ["Really", "?", "!"]
# ::lemmas ["really", "?", "!"]
(c33-0 / real-04
       :polarity (c33-1 / amr-unknown))

# ::snt K-Fed needs to go apply at FedEx.
# ::tokens ["K", "-", "Fed", "needs", "to", "go", "apply", "at", "FedEx", "."]
# ::lemmas ["K", "-", "Fed", "need", "to", "go", "apply", "at", "FedEx", "."]
(c34-0 / need-01
       :ARG0 (c34-2 / company
                    :name (c34-1 / name
                                 :op1 "Fed"))
       :ARG1 (c34-4 / go-05
                    :ARG0 c34-2
                    :ARG1 (c34-3 / apply-01
                                 :ARG0 c34-2
                                 :ARG2 c34-2)))

# ::snt Wow! Moocher!
# ::tokens ["Wow", "!", "Moocher", "!"]
# ::lemmas ["wow", "!", "Moocher", "!"]
(c35-1 / person
       :name (c35-0 / name
                    :op1 "Moocher")
       :ARG0-of (c35-2 / wow-01
                       :mode expressive)
       :mode expressive)

# ::snt Looser
# ::tokens ["Looser"]
# ::lemmas ["looser"]
(c36-1 / have-degree-91
       :ARG2 (c36-2 / looser)
       :ARG3 (c36-0 / more))

# ::snt A class fkn bum. Smh
# ::tokens ["A", "class", "fkn", "bum", ".", "Smh"]
# ::lemmas ["a", "class", "fkn", "bum", ".", "Smh"]
(c37-2 / multi-sentence
       :snt1 (c37-1 / bum
                    :domain (c37-4 / class)
                    :mod (c37-0 / fucking
                                :mode expressive))
       :snt2 (c37-3 / smh
                    :mode expressive))

# ::snt Seriously dude...they are always with her she is providing them what they need worry about yourself!
# ::tokens ["Seriously", "dude", "...", "they", "are", "always", "with", "her", "she", "is", "providing", "them", "what", "they", "need", "worry", "about", "yourself", "!"]
# ::lemmas ["seriously", "dude", "...", "they", "be", "always", "with", "she", "she", "be", "provide", "they", "what", "they", "need", "worry", "about", "yourself", "!"]
(c38-2 / say-01
       :ARG1 (c38-6 / and
                    :op1 (c38-0 / serious-01)
                    :op2 (c38-3 / provide-01
                                :ARG0 (c38-9 / she)
                                :ARG1 (c38-4 / thing
                                             :ARG1-of (c38-1 / need-01
                                                             :ARG0 (c38-8 / they
                                                                          :ARG2-of c38-3)))
                                :time (c38-5 / always)))
       :ARG2 (c38-7 / dude))

# ::snt Shit I would too, shes got that Vegas residency and shit
# ::tokens ["Shit", "I", "would", "too", ",", "she", "s", "got", "that", "Vegas", "residency", "and", "shit"]
# ::lemmas ["shit", "i", "would", "too", ",", "she", "s", "get", "that", "Vegas", "residency", "and", "shit"]
(c39-3 / and
       :op1 (c39-2 / shit-01
                   :ARG0 (c39-6 / i)
                   :mod (c39-7 / too))
       :op2 (c39-8 / get-02
                   :ARG0 (c39-0 / she)
                   :ARG1 (c39-9 / and
                                :op1 (c39-4 / residency
                                            :location (c39-5 / city
                                                             :name (c39-1 / name
                                                                          :op1 "Vegas"))
                                            :mod (c39-10 / that))
                                :op2 (c39-11 / shit-01))))

# ::snt Bull poop. He's got enough.
# ::tokens ["Bull", "poop", ".", "He", "'s", "got", "enough", "."]
# ::lemmas ["bull", "poop", ".", "he", "be", "get", "enough", "."]
(c40-1 / multi-sentence
       :snt1 (c40-4 / poop
                    :mod (c40-0 / bull))
       :snt2 (c40-3 / have-03
                    :ARG0 (c40-6 / he)
                    :ARG1 (c40-7 / thing
                                 :ARG1-of (c40-2 / have-quant-91
                                                 :ARG3 (c40-5 / enough)))))

# ::snt Get a job dead beat
# ::tokens ["Get", "a", "job", "dead", "beat"]
# ::lemmas ["get", "a", "job", "dead", "beat"]
(c41-4 / get-01
       :ARG0 (c41-1 / you)
       :ARG1 (c41-3 / job)
       :ARG1-of (c41-2 / cause-01
                       :ARG0 (c41-0 / beat-01
                                    :ARG1 c41-1))
       :mode imperative)

# ::snt Get a job. Stop relying on your hard working x wife to support you.
# ::tokens ["Get", "a", "job", ".", "Stop", "relying", "on", "your", "hard", "working", "x", "wife", "to", "support", "you", "."]
# ::lemmas ["get", "a", "job", ".", "stop", "rely", "on", "your", "hard", "work", "x", "wife", "to", "support", "you", "."]
(c42-2 / multi-sentence
       :snt1 (c42-11 / get-01
                     :ARG0 (c42-1 / you)
                     :ARG1 (c42-10 / job)
                     :mode imperative)
       :snt2 (c42-3 / stop-01
                    :ARG0 c42-1
                    :ARG1 (c42-4 / rely-01
                                 :ARG0 c42-1
                                 :ARG1 (c42-6 / person
                                              :ARG0-of (c42-5 / have-rel-role-91
                                                              :ARG1 c42-1
                                                              :ARG2 (c42-8 / wife))
                                              :ARG0-of (c42-7 / work-01
                                                              :ARG1-of (c42-9 / hard-02)))
                                 :ARG2 (c42-0 / support-01
                                              :ARG0 c42-6
                                              :ARG1 c42-1))
                    :mode imperative))

# ::snt Go away Kevin
# ::tokens ["Go", "away", "Kevin"]
# ::lemmas ["go", "away", "Kevin"]
(c43-1 / say-01
       :ARG0 (c43-3 / i)
       :ARG1 (c43-5 / go-02
                    :ARG0 (c43-2 / person
                                 :name (c43-0 / name
                                              :op1 "Kevin"))
                    :ARG4 (c43-4 / away)
                    :mode imperative)
       :ARG2 c43-2)

# ::snt Theres a name for Men like that P...e
# ::tokens ["There", "s", "a", "name", "for", "Men", "like", "that", "P", "...", "e"]
# ::lemmas ["there", "s", "a", "name", "for", "man", "like", "that", "p", "...", "e"]
(c44-1 / name-01
       :ARG1 (c44-0 / man
                    :ARG1-of (c44-2 / resemble-01
                                    :ARG2 (c44-5 / that)))
       :ARG2 (c44-4 / person
                    :name (c44-3 / name
                                 :op1 "P...e")))

# ::snt wtf... please dont brit.. get a job kevin
# ::tokens ["wtf", "...", "please", "do", "nt", "brit", "..", "get", "a", "job", "kevin"]
# ::lemmas ["wtf", "...", "please", "do", "not", "brit", "..", "get", "a", "job", "kevin"]
(c45-3 / say-01
       :ARG0 (c45-8 / i)
       :ARG1 (c45-9 / and
                    :op1 (c45-5 / please
                                :domain (c45-2 / person
                                               :mod (c45-6 / country
                                                           :name (c45-1 / name
                                                                        :op1 "United"
                                                                        :op2 "Kingdom")))
                                :mod (c45-0 / fuck
                                            :mode expressive)
                                :polarity -
                                :mode imperative)
                    :op2 (c45-10 / get-01
                                 :ARG0 (c45-11 / person
                                               :name (c45-4 / name
                                                            :op1 "Kevin"))
                                 :ARG1 (c45-7 / job)
                                 :mode imperative
                                 :polite +))
       :ARG2 c45-11)

# ::snt Get a job or a higher paying one. Quit living off your ex wife. Redickulous.
# ::tokens ["Get", "a", "job", "or", "a", "higher", "paying", "one", ".", "Quit", "living", "off", "your", "ex", "wife", ".", "Redickulous", "."]
# ::lemmas ["get", "a", "job", "or", "a", "high", "pay", "one", ".", "Quit", "live", "off", "your", "ex", "wife", ".", "Redickulous", "."]
(c46-11 / multi-sentence
        :snt1 (c46-8 / get-01
                     :ARG0 (c46-2 / you)
                     :ARG1 (c46-1 / or
                                  :op1 (c46-6 / job)
                                  :op2 (c46-10 / one
                                               :ARG3-of (c46-15 / pay-01
                                                                :ARG1-of (c46-4 / have-degree-91
                                                                                :ARG2 (c46-17 / high-02)
                                                                                :ARG3 (c46-5 / more)))))
                     :mode imperative)
        :snt2 (c46-7 / quit-01
                     :ARG0 (c46-9 / you)
                     :ARG1 (c46-0 / live-01
                                  :ARG0 c46-9
                                  :manner (c46-18 / off
                                                  :op1 (c46-12 / person
                                                               :ARG0-of (c46-3 / have-rel-role-91
                                                                               :ARG1 c46-9
                                                                               :ARG2 (c46-16 / wife)
                                                                               :time (c46-14 / ex)))))
                     :mode imperative)
        :snt3 (c46-13 / ridiculous-02))

# ::snt Lmaoooo hes trying so hard to be relevant like leave Britney alone shes happy
# ::tokens ["Lmaoooo", "he", "s", "trying", "so", "hard", "to", "be", "relevant", "like", "leave", "Britney", "alone", "she", "s", "happy"]
# ::lemmas ["Lmaoooo", "he", "s", "try", "so", "hard", "to", "be", "relevant", "like", "leave", "Britney", "alone", "she", "s", "happy"]
(c48-0 / multi-sentence
       :snt1 (c48-7 / laugh-01
                    :ARG0 (c48-12 / i)
                    :manner (c48-14 / loud)
                    :mode expressive)
       :snt2 (c48-13 / try-01
                     :ARG0 (c48-6 / he)
                     :ARG1 (c48-3 / relevant-01
                                  :ARG1 c48-6)
                     :manner (c48-11 / hard-02
                                     :degree (c48-2 / so))
                     :example (c48-8 / leave-14
                                     :ARG0 c48-6
                                     :ARG1 (c48-4 / alone
                                                  :domain (c48-9 / person
                                                                 :name (c48-1 / name
                                                                              :op1 "Britney")))
                                     :ARG0-of (c48-10 / cause-01
                                                      :ARG1 (c48-5 / happy-01
                                                                   :ARG1 c48-9)))))

# ::snt Dam
# ::tokens ["Dam"]
# ::lemmas ["dam"]
(c49-1 / person
       :name (c49-0 / name))

# ::snt Omg... what a loser. How about getting a job Kevin?
# ::tokens ["Omg", "...", "what", "a", "loser", ".", "How", "about", "getting", "a", "job", "Kevin", "?"]
# ::lemmas ["Omg", "...", "what", "a", "loser", ".", "how", "about", "get", "a", "job", "Kevin", "?"]
(c50-2 / multi-sentence
       :snt1 (c50-6 / person
                    :ARG0-of (c50-7 / lose-03
                                    :degree (c50-4 / so))
                    :mod (c50-0 / oh-my-god
                                :mode expressive))
       :snt2 (c50-1 / suggest-01
                    :ARG0 (c50-9 / i)
                    :ARG1 (c50-10 / get-01
                                  :ARG0 (c50-3 / person
                                               :name (c50-5 / name
                                                            :op1 "Kevin"))
                                  :ARG1 (c50-8 / job))))
