# ::snt My mom didnt talk to me or my dad for like a week
# ::tokens ["My", "mom", "did", "nt", "talk", "to", "me", "or", "my", "dad", "for", "like", "a", "week"]
# ::lemmas ["my", "mom", "do", "not", "talk", "to", "i", "or", "my", "dad", "for", "like", "a", "week"]
(c1-9 / talk-01
      :ARG0 (c1-4 / person
                  :ARG0-of (c1-3 / have-rel-role-91
                                 :ARG1 (c1-8 / i)
                                 :ARG2 (c1-1 / mom)))
      :ARG2 (c1-0 / or
                  :op1 c1-8
                  :op2 (c1-2 / person
                             :ARG0-of (c1-7 / have-rel-role-91
                                            :ARG1 c1-8
                                            :ARG2 (c1-10 / dad))))
      :duration (c1-5 / like
                      :op1 (c1-11 / temporal-quantity
                                  :unit (c1-6 / week)
                                  :quant 1))
      :polarity -)

# ::snt That's a really suss looking picture
# ::tokens ["That", "'s", "a", "really", "suss", "looking", "picture"]
# ::lemmas ["that", "be", "a", "really", "suss", "look", "picture"]
(c2-2 / picture
      :ARG0-of (c2-3 / look-02
                     :ARG1 (c2-0 / suss)
                     :degree (c2-1 / really))
      :domain (c2-4 / that))

# ::snt he go play one year somewhere else ride the bench most of the year and come back crying
# ::tokens ["he", "go", "play", "one", "year", "somewhere", "else", "ride", "the", "bench", "most", "of", "the", "year", "and", "come", "back", "crying"]
# ::lemmas ["he", "go", "play", "one", "year", "somewhere", "else", "ride", "the", "bench", "most", "of", "the", "year", "and", "come", "back", "cry"]
(c3-11 / and
       :op1 (c3-12 / go-05
                   :ARG0 (c3-6 / he)
                   :ARG1 (c3-7 / play-01
                               :ARG0 c3-6)
                   :ARG2 (c3-3 / somewhere
                               :mod (c3-5 / else))
                   :duration (c3-10 / temporal-quantity
                                    :unit (c3-1 / year)
                                    :quant 1))
       :op2 (c3-4 / ride-01
                  :ARG0 c3-6
                  :ARG1 (c3-0 / bench)
                  :time (c3-13 / year
                               :mod (c3-2 / most)))
       :op3 (c3-9 / come-01
                  :ARG1 c3-6
                  :direction (c3-8 / back)
                  :manner (c3-14 / cry-02
                                 :ARG0 c3-6)))

# ::snt Yep!!
# ::tokens ["Yep", "!", "!"]
# ::lemmas ["yep", "!", "!"]
(c4-0 / yep
      :mode expressive)

# ::snt I honestly think he would retire before he would go to another team
# ::tokens ["I", "honestly", "think", "he", "would", "retire", "before", "he", "would", "go", "to", "another", "team"]
# ::lemmas ["i", "honestly", "think", "he", "would", "retire", "before", "he", "would", "go", "to", "another", "team"]
(c5-6 / think-01
      :ARG0 (c5-5 / i)
      :ARG1 (c5-1 / retire-01
                  :ARG0 (c5-3 / he)
                  :time (c5-0 / before
                              :op1 (c5-7 / go-02
                                         :ARG0 c5-3
                                         :ARG4 (c5-8 / team
                                                     :mod (c5-2 / another)))))
      :ARG1-of (c5-4 / honest-01))

# ::snt That's cuz u cheap, fool!
# ::tokens ["That", "'s", "cuz", "u", "cheap", ",", "fool", "!"]
# ::lemmas ["that", "be", "cuz", "u", "cheap", ",", "fool", "!"]
(c6-2 / cause-01
      :ARG0 (c6-4 / cheap-02
                  :ARG1 (c6-1 / you
                              :ARG1-of (c6-0 / fool-01)))
      :ARG1 (c6-3 / that))

# ::snt those hush puppies tho
# ::tokens ["those", "hush", "puppies", "tho"]
# ::lemmas ["those", "hush", "puppy", "tho"]
(c7-1 / have-concession-91
      :ARG1 (c7-2 / puppy
                  :mod (c7-0 / hush)
                  :mod (c7-3 / that)))

# ::snt I'd do that!!
# ::tokens ["I", "'d", "do", "that", "!", "!"]
# ::lemmas ["i", "would", "do", "that", "!", "!"]
(c8-0 / do-02
      :ARG0 (c8-1 / i)
      :ARG1 (c8-2 / that))

# ::snt yea and we should believe you when you was on here thinking whiteside was going to la off a fake tweet
# ::tokens ["yea", "and", "we", "should", "believe", "you", "when", "you", "was", "on", "here", "thinking", "whiteside", "was", "going", "to", "la", "off", "a", "fake", "tweet"]
# ::lemmas ["yea", "and", "we", "should", "believe", "you", "when", "you", "be", "on", "here", "think", "whiteside", "be", "go", "to", "la", "off", "a", "fake", "tweet"]
(c9-12 / and
       :op2 (c9-4 / recommend-01
                  :ARG1 (c9-1 / believe-01
                              :ARG0 (c9-9 / we)
                              :ARG1 (c9-2 / you)
                              :time (c9-5 / be-located-at-91
                                          :ARG1 c9-2
                                          :ARG2 (c9-6 / here))
                              :manner (c9-10 / think-01
                                             :ARG0 c9-2
                                             :ARG1 (c9-7 / la-off-00
                                                         :ARG0 (c9-8 / person
                                                                     :name (c9-3 / name
                                                                                 :op1 "White"
                                                                                 :op2 "States"))
                                                         :ARG1 (c9-13 / thing
                                                                      :ARG1-of (c9-11 / tweet-01)
                                                                      :ARG1-of (c9-0 / fake-02)))))))

# ::snt Its like leaving Pappadeaux's to go get food from Captain D's
# ::tokens ["Its", "like", "leaving", "Pappadeaux", "'s", "to", "go", "get", "food", "from", "Captain", "D", "'s"]
# ::lemmas ["its", "like", "leave", "Pappadeaux", "'s", "to", "go", "get", "food", "from", "Captain", "D", "'s"]
(c10-3 / resemble-01
       :ARG1 (c10-7 / it)
       :ARG2 (c10-5 / leave-11
                    :ARG2 (c10-6 / city
                                 :name (c10-1 / name
                                              :op1 "Pappadeaux's"))
                    :purpose (c10-9 / go-02
                                    :ARG0 (c10-2 / i)
                                    :ARG4 (c10-8 / get-01
                                                 :ARG0 c10-2
                                                 :ARG1 (c10-0 / food)
                                                 :ARG2 (c10-10 / company
                                                               :name (c10-4 / name
                                                                            :op1 "Captain"
                                                                            :op2 "D's"))))))

# ::snt veryyyyy true!!!
# ::tokens ["veryyyyy", "true", "!", "!", "!"]
# ::lemmas ["veryyyyy", "true", "!", "!", "!"]
(c11-1 / true-01
       :degree (c11-0 / very))

# ::snt makes sense. But I do think Whiteside would be nice here
# ::tokens ["makes", "sense", ".", "But", "I", "do", "think", "Whiteside", "would", "be", "nice", "here"]
# ::lemmas ["make", "sense", ".", "but", "i", "do", "think", "Whiteside", "would", "be", "nice", "here"]
(c12-0 / multi-sentence
       :snt1 (c12-2 / sense-02)
       :snt2 (c12-5 / contrast-01
                    :ARG2 (c12-8 / think-01
                                 :ARG0 (c12-7 / i)
                                 :ARG1 (c12-1 / nice-01
                                              :ARG1 (c12-4 / person
                                                           :ARG1-of (c12-6 / white-02))
                                              :location (c12-3 / here)))))

# ::snt Lol gotcha Vash. Just saying you leave Dallas to go to Miami, you dont leave Miami to go to Dallas
# ::tokens ["Lol", "gotcha", "Vash", ".", "Just", "saying", "you", "leave", "Dallas", "to", "go", "to", "Miami", ",", "you", "do", "nt", "leave", "Miami", "to", "go", "to", "Dallas"]
# ::lemmas ["Lol", "gotcha", "Vash", ".", "just", "say", "you", "leave", "Dallas", "to", "go", "to", "Miami", ",", "you", "do", "not", "leave", "Miami", "to", "go", "to", "Dallas"]
(c13-3 / say-01
       :ARG0 (c13-11 / i)
       :ARG1 (c13-12 / and
                     :op1 (c13-0 / say-01
                                 :ARG0 c13-11
                                 :ARG1 (c13-5 / leave-11
                                              :ARG0 (c13-1 / you)
                                              :ARG1 (c13-9 / city
                                                           :name (c13-2 / name
                                                                        :op1 "Dallas"))
                                              :purpose (c13-13 / go-02
                                                               :ARG0 c13-1
                                                               :ARG4 (c13-17 / city
                                                                             :name (c13-4 / name
                                                                                          :op1 "Miami"))))
                                 :mod (c13-10 / just))
                     :op2 (c13-15 / leave-11
                                  :ARG0 c13-1
                                  :ARG1 c13-9
                                  :purpose (c13-14 / go-02
                                                   :ARG0 c13-1
                                                   :ARG4 c13-17)
                                  :polarity -))
       :ARG2 (c13-6 / person
                    :name (c13-7 / name
                                 :op1 "Vash"))
       :manner (c13-8 / laugh-01
                      :ARG0 c13-11
                      :manner (c13-16 / loud)
                      :mode expressive))

# ::snt Walt, let ME do the off-the-wall similes. That one wasn't bad tho
# ::tokens ["Walt", ",", "let", "ME", "do", "the", "off", "-", "the", "-", "wall", "similes", ".", "That", "one", "was", "n't", "bad", "tho"]
# ::lemmas ["Walt", ",", "let", "i", "do", "the", "off", "-", "the", "-", "wall", "simile", ".", "that", "one", "be", "not", "bad", "tho"]
(c14-4 / multi-sentence
       :snt1 (c14-8 / let-01
                    :ARG0 (c14-7 / person
                                 :name (c14-3 / name
                                              :op1 "Walt"))
                    :ARG1 (c14-11 / do-02
                                  :ARG0 (c14-9 / i)
                                  :ARG1 (c14-5 / simile
                                               :mod (c14-0 / off-the-wall)))
                    :mode imperative)
       :snt2 (c14-2 / bad-07
                    :ARG1 (c14-1 / one
                                 :mod (c14-10 / that))
                    :ARG1-of (c14-6 / have-concession-91)
                    :polarity -))

# ::snt If parsons got a max he would have left
# ::tokens ["If", "parsons", "got", "a", "max", "he", "would", "have", "left"]
# ::lemmas ["if", "parson", "get", "a", "max", "he", "would", "have", "leave"]
(c15-3 / leave-15
       :ARG0 (c15-2 / person
                    :name (c15-0 / name
                                 :op1 "P parsons"))
       :condition (c15-4 / get-01
                         :ARG0 c15-2
                         :ARG1 (c15-1 / maximum)))

# ::snt oooooh. Didn't know that
# ::tokens ["oooooh", ".", "Did", "n't", "know", "that"]
# ::lemmas ["oooooh", ".", "do", "not", "know", "that"]
(c16-2 / multi-sentence
       :snt1 (c16-0 / oh
                    :mode expressive)
       :snt2 (c16-3 / know-01
                    :ARG1 (c16-1 / that)
                    :polarity -))

# ::snt Dirk is staying regardless. He opted out because he didn't want Parsons to get a max deal
# ::tokens ["Dirk", "is", "staying", "regardless", ".", "He", "opted", "out", "because", "he", "did", "n't", "want", "Parsons", "to", "get", "a", "max", "deal"]
# ::lemmas ["Dirk", "be", "stay", "regardless", ".", "he", "opt", "out", "because", "he", "do", "not", "want", "parson", "to", "get", "a", "max", "deal"]
(c17-2 / multi-sentence
       :snt1 (c17-3 / stay-01
                    :ARG1 (c17-7 / person
                                 :name (c17-1 / name
                                              :op1 "Dirk"))
                    :ARG1-of (c17-5 / regardless-91))
       :snt2 (c17-0 / opt-01
                    :ARG0 (c17-6 / he)
                    :ARG1-of (c17-10 / cause-01
                                     :ARG0 (c17-11 / want-01
                                                   :ARG0 c17-6
                                                   :ARG1 (c17-12 / get-01
                                                                 :ARG0 (c17-4 / person
                                                                              :name (c17-8 / name
                                                                                           :op1 "Parsons"))
                                                                 :ARG1 (c17-13 / deal
                                                                               :mod (c17-9 / max)))
                                                   :polarity -))))

# ::snt but do you think it would make Dirk stay?
# ::tokens ["but", "do", "you", "think", "it", "would", "make", "Dirk", "stay", "?"]
# ::lemmas ["but", "do", "you", "think", "it", "would", "make", "Dirk", "stay", "?"]
(c18-6 / contrast-01
       :ARG2 (c18-8 / think-01
                    :ARG0 (c18-0 / you)
                    :ARG1 (c18-1 / make-02
                                 :ARG0 (c18-7 / it)
                                 :ARG1 (c18-3 / stay-01
                                              :ARG1 (c18-5 / person
                                                           :name (c18-2 / name
                                                                        :op1 "Dirk"))))
                    :polarity (c18-4 / amr-unknown)))

# ::snt Jessica Simpson
# ::tokens ["Jessica", "Simpson"]
# ::lemmas ["Jessica", "Simpson"]
(c19-1 / person
       :name (c19-0 / name
                    :op1 "Jessica"
                    :op2 "Simpson"))

# ::snt who's that face behind her
# ::tokens ["who", "'s", "that", "face", "behind", "her"]
# ::lemmas ["who", "be", "that", "face", "behind", "she"]
(c20-0 / face
       :location (c20-1 / behind
                        :op1 (c20-2 / she))
       :mod (c20-3 / that)
       :domain (c20-4 / amr-unknown))

# ::snt ard those her Bionic boots
# ::tokens ["ard", "those", "her", "Bionic", "boots"]
# ::lemmas ["ard", "those", "her", "Bionic", "boot"]
(c21-2 / ard
       :op1 (c21-0 / boot
                   :mod (c21-3 / bionic)
                   :poss (c21-1 / she)
                   :mod (c21-4 / that)))

# ::snt Did you really fumble against the Seahawks in that crucial divisional series or was that you playing hero ball?
# ::tokens ["Did", "you", "really", "fumble", "against", "the", "Seahawks", "in", "that", "crucial", "divisional", "series", "or", "was", "that", "you", "playing", "hero", "ball", "?"]
# ::lemmas ["do", "you", "really", "fumble", "against", "the", "Seahawks", "in", "that", "crucial", "divisional", "series", "or", "be", "that", "you", "play", "hero", "ball", "?"]
(c22-5 / amr-choice
       :op1 (c22-0 / fumble-01
                   :ARG0 (c22-2 / you)
                   :ARG1 (c22-10 / team
                                 :name (c22-3 / name
                                              :op1 "Seattle"))
                   :ARG1-of (c22-6 / real-04)
                   :time (c22-4 / series
                                :mod (c22-11 / division)
                                :mod (c22-9 / crucial)
                                :mod (c22-12 / that)))
       :op2 (c22-8 / play-01
                   :ARG0 c22-2
                   :ARG1 (c22-1 / ball
                                :mod (c22-7 / hero))))

# ::snt BREAKING
# ::tokens ["BREAKING"]
# ::lemmas ["breaking"]
(c23-0 / break-13)

# ::snt Ok...When I am updated on the possible life of Jessica Simpson...It is time to unfollow. Sorry but really how does she matter to anyone?
# ::tokens ["Ok", "...", "When", "I", "am", "updated", "on", "the", "possible", "life", "of", "Jessica", "Simpson", "...", "It", "is", "time", "to", "unfollow", ".", "Sorry", "but", "really", "how", "does", "she", "matter", "to", "anyone", "?"]
# ::lemmas ["ok", "...", "when", "i", "be", "update", "on", "the", "possible", "life", "of", "Jessica", "Simpson", "...", "it", "be", "time", "to", "unfollow", ".", "sorry", "but", "really", "how", "do", "she", "matter", "to", "anyone", "?"]
(c24-3 / multi-sentence
       :snt1 (c24-14 / time
                     :time-of (c24-0 / follow-02
                                     :ARG0 (c24-13 / i))
                     :domain (c24-16 / update-02
                                     :ARG1 c24-13
                                     :ARG2 (c24-10 / life
                                                   :ARG1-of (c24-11 / possible-01)
                                                   :poss (c24-4 / person
                                                                :name (c24-5 / name
                                                                             :op1 "Jessica"
                                                                             :op2 "Simpson"))))
                     :ARG1-of (c24-1 / okay-04))
       :snt2 (c24-12 / contrast-01
                     :ARG1 (c24-6 / sorry-01
                                  :ARG1 c24-13)
                     :ARG2 (c24-9 / matter-01
                                  :ARG1 (c24-2 / she)
                                  :ARG2 (c24-7 / anyone)
                                  :manner (c24-15 / amr-unknown)
                                  :ARG1-of (c24-8 / real-04))))

# ::snt GOOD LUCK AND I LOVE YOU MY WIFE MRS JESSICA MBAVARIRE LOVE HUSBAND MAX
# ::tokens ["GOOD", "LUCK", "AND", "I", "LOVE", "YOU", "MY", "WIFE", "MRS", "JESSICA", "MBAVARIRE", "LOVE", "HUSBAND", "MAX"]
# ::lemmas ["GOOD", "LUCK", "and", "i", "love", "you", "my", "wife", "MRS", "JESSICA", "MBAVARIRE", "LOVE", "HUSBAND", "MAX"]
(c25-11 / and
        :op1 (c25-5 / laugh-01
                    :manner (c25-12 / good-02))
        :op2 (c25-13 / love-01
                     :ARG0 (c25-10 / i)
                     :ARG1 (c25-0 / you))
        :op3 (c25-3 / say-01
                    :ARG0 c25-10
                    :ARG1 (c25-6 / love-01
                                 :ARG0 c25-10
                                 :ARG1 (c25-7 / person
                                              :name (c25-1 / name
                                                           :op1 "Jessica"
                                                           :op2 "Mariani")
                                              :ARG0-of (c25-4 / have-rel-role-91
                                                              :ARG1 c25-10
                                                              :ARG2 (c25-9 / wife))))
                    :ARG2 (c25-2 / person
                                 :name (c25-8 / name
                                              :op1 "HUSBAND"
                                              :op2 "Max"))))

# ::snt i said my whole family, didn't i?
# ::tokens ["i", "said", "my", "whole", "family", ",", "did", "n't", "i", "?"]
# ::lemmas ["i", "say", "my", "whole", "family", ",", "do", "not", "i", "?"]
(c26-1 / say-01
       :ARG0 (c26-4 / i)
       :ARG1 (c26-0 / family
                    :mod (c26-3 / whole)
                    :poss c26-4)
       :ARG1-of (c26-2 / request-confirmation-91))

# ::snt ur on twitter at the dinner table
# ::tokens ["ur", "on", "twitter", "at", "the", "dinner", "table"]
# ::lemmas ["ur", "on", "twitter", "at", "the", "dinner", "table"]
(c27-0 / be-located-at-91
       :ARG1 (c27-2 / publication
                    :name (c27-1 / name
                                 :op1 "Twitter"))
       :ARG2 (c27-3 / table
                    :mod (c27-4 / dinner)))

# ::snt i just showed this to my whole family at the dinner table
# ::tokens ["i", "just", "showed", "this", "to", "my", "whole", "family", "at", "the", "dinner", "table"]
# ::lemmas ["i", "just", "show", "this", "to", "my", "whole", "family", "at", "the", "dinner", "table"]
(c28-1 / show-01
       :ARG0 (c28-4 / i)
       :ARG1 (c28-5 / this)
       :ARG2 (c28-0 / family
                    :mod (c28-2 / whole)
                    :poss c28-4)
       :location (c28-7 / table
                        :purpose (c28-6 / dinner))
       :mod (c28-3 / just))

# ::snt thaNKS FOR REMINDING ME
# ::tokens ["thaNKS", "FOR", "REMINDING", "ME"]
# ::lemmas ["thanks", "for", "remind", "i"]
(c29-4 / thank-01
       :ARG0 (c29-3 / i)
       :ARG1 (c29-2 / person
                    :name (c29-0 / name
                                 :op1 "thaek"))
       :ARG2 (c29-1 / remember-01
                    :ARG0 c29-2
                    :ARG1 c29-3))

# ::snt Overrated
# ::tokens ["Overrated"]
# ::lemmas ["overrate"]
(c30-0 / overrate-01)

# ::snt Just all over the ground...
# ::tokens ["Just", "all", "over", "the", "ground", "..."]
# ::lemmas ["just", "all", "over", "the", "ground", "..."]
(c31-2 / all-over
       :op1 (c31-0 / ground)
       :mod (c31-1 / just))

# ::snt Or she's drunk again
# ::tokens ["Or", "she", "'s", "drunk", "again"]
# ::lemmas ["or", "she", "be", "drunk", "again"]
(c32-0 / or
       :op2 (c32-2 / drunk
                   :domain (c32-3 / she)
                   :mod (c32-1 / again)))

# ::snt A bit worse forwear: and the shoes.
# ::tokens ["A", "bit", "worse", "forwear", ":", "and", "the", "shoes", "."]
# ::lemmas ["a", "bit", "bad", "forwear", ":", "and", "the", "shoe", "."]
(c33-0 / bad-04
       :ARG2 (c33-6 / and
                    :op1 (c33-5 / wear-01)
                    :op2 (c33-2 / shoe))
       :ARG2-of (c33-3 / have-degree-91
                       :ARG3 (c33-1 / more
                                    :quant (c33-4 / bit))))

# ::snt OR by the looks of it, , again.
# ::tokens ["OR", "by", "the", "looks", "of", "it", ",", ",", "again", "."]
# ::lemmas ["or", "by", "the", "look", "of", "it", ",", ",", "again", "."]
(c34-0 / or
       :op2 (c34-1 / look-02
                   :ARG1 (c34-2 / it)
                   :mod (c34-3 / again)))

# ::snt LMAO!!her look thoPriceless
# ::tokens ["LMAO!!her", "look", "thoPriceless"]
# ::lemmas ["lmao!!her", "look", "thopriceless"]
(c35-2 / look-02
       :ARG0 (c35-0 / she)
       :ARG1 (c35-1 / price-01
                    :polarity -)
       :mod (c35-5 / laugh-01
                   :ARG0 (c35-4 / i)
                   :manner (c35-3 / loud)
                   :mode expressive)
       :mode expressive)

# ::snt By the Looks if this wonder if she'll ever will return to Music or a tour?!
# ::tokens ["By", "the", "Looks", "if", "this", "wonder", "if", "she", "'ll", "ever", "will", "return", "to", "Music", "or", "a", "tour", "?", "!"]
# ::lemmas ["by", "the", "look", "if", "this", "wonder", "if", "she", "'ll", "ever", "will", "return", "to", "Music", "or", "a", "tour", "?", "!"]
(c37-6 / wonder-01
       :ARG0 (c37-7 / this)
       :ARG1 (c37-9 / truth-value
                    :polarity-of (c37-3 / return-01
                                        :ARG1 (c37-2 / she)
                                        :ARG4 (c37-0 / or
                                                     :op1 (c37-1 / music)
                                                     :op2 (c37-8 / tour))
                                        :time (c37-4 / ever)))
       :ARG1-of (c37-5 / look-02))

# ::snt Lol she eyes open big
# ::tokens ["Lol", "she", "eyes", "open", "big"]
# ::lemmas ["Lol", "she", "eye", "open", "big"]
(c38-0 / open-01
       :ARG0 (c38-3 / eye
                    :part-of (c38-2 / she))
       :mod (c38-1 / big)
       :ARG2-of (c38-4 / laugh-01
                       :manner (c38-5 / loud)
                       :mode expressive))

# ::snt How about instead of blaming the shoe you blame the alcohol for the millionth times.
# ::tokens ["How", "about", "instead", "of", "blaming", "the", "shoe", "you", "blame", "the", "alcohol", "for", "the", "millionth", "times", "."]
# ::lemmas ["how", "about", "instead", "of", "blame", "the", "shoe", "you", "blame", "the", "alcohol", "for", "the", "millionth", "time", "."]
(c40-5 / instead-of-91
       :ARG1 (c40-0 / blame-01
                    :ARG0 (c40-1 / you)
                    :ARG1 (c40-3 / alcohol)
                    :ARG2 (c40-6 / time
                                 :quant 1000000))
       :ARG2 (c40-4 / blame-01
                    :ARG0 c40-1
                    :ARG1 (c40-2 / shoe))
       :mod (c40-7 / amr-unknown))

# ::snt Hahahahaha
# ::tokens ["Hahahahaha"]
# ::lemmas ["Hahahahaha"]
(c41-0 / haha
       :mode expressive)

# ::snt Hi its creative logo design you need logo contact this link
# ::tokens ["Hi", "its", "creative", "logo", "design", "you", "need", "logo", "contact", "this", "link"]
# ::lemmas ["hi", "its", "creative", "logo", "design", "you", "need", "logo", "contact", "this", "link"]
(c42-1 / multi-sentence
       :snt1 (c42-3 / hi)
       :snt2 (c42-6 / cause-01
                    :ARG0 (c42-9 / design-01
                                 :ARG1 (c42-4 / logo)
                                 :mod (c42-11 / creative))
                    :ARG1 (c42-2 / need-01
                                 :ARG0 (c42-0 / you)
                                 :ARG1 (c42-10 / logo)))
       :snt3 (c42-7 / contact-01
                    :ARG0 c42-0
                    :ARG1 (c42-5 / link
                                 :mod (c42-8 / this))
                    :mode imperative))

# ::snt Time to buy Stilettos!
# ::tokens ["Time", "to", "buy", "Stilettos", "!"]
# ::lemmas ["time", "to", "buy", "Stilettos", "!"]
(c43-3 / time
       :time-of (c43-2 / buy-01
                       :ARG1 (c43-0 / shoe
                                    :mod (c43-1 / stiletto))))

# ::snt GOOD LUCK AND I LOVE YOU MY WIFE MRS JESS MBAVARIRE LOVE HUSBAND MAX
# ::tokens ["GOOD", "LUCK", "AND", "I", "LOVE", "YOU", "MY", "WIFE", "MRS", "JESS", "MBAVARIRE", "LOVE", "HUSBAND", "MAX"]
# ::lemmas ["GOOD", "LUCK", "and", "i", "love", "you", "my", "wife", "MRS", "JESS", "MBAVARIRE", "LOVE", "HUSBAND", "MAX"]
(c44-11 / and
        :op1 (c44-4 / laugh-01
                    :ARG0 (c44-10 / i)
                    :manner (c44-12 / good-02)
                    :mode expressive)
        :op2 (c44-13 / love-01
                     :ARG0 c44-10
                     :ARG1 (c44-5 / person
                                  :name (c44-0 / name
                                               :op1 "JESS"
                                               :op2 "Mariani")
                                  :ARG0-of (c44-3 / have-rel-role-91
                                                  :ARG1 c44-10
                                                  :ARG2 (c44-8 / wife))))
        :op3 (c44-6 / love-01
                    :ARG0 c44-10
                    :ARG1 (c44-1 / person
                                 :name (c44-7 / name
                                              :op1 "Max")
                                 :ARG0-of (c44-9 / have-rel-role-91
                                                 :ARG1 c44-10
                                                 :ARG2 (c44-2 / husband)))))

# ::snt Every time I see in dukes of hazard, I die a little inside
# ::tokens ["Every", "time", "I", "see", "in", "dukes", "of", "hazard", ",", "I", "die", "a", "little", "inside"]
# ::lemmas ["every", "time", "i", "see", "in", "duke", "of", "hazard", ",", "i", "die", "a", "little", "inside"]
(c45-7 / die-01
       :ARG1 (c45-6 / i)
       :degree (c45-4 / little)
       :location (c45-1 / inside)
       :frequency (c45-2 / rate-entity-91
                         :ARG4 (c45-0 / see-01
                                      :ARG0 c45-6
                                      :ARG1 (c45-5 / duke
                                                   :ARG2-of (c45-3 / hazardous-02)))))

# ::snt Pretty disgusting
# ::tokens ["Pretty", "disgusting"]
# ::lemmas ["pretty", "disgusting"]
(c46-0 / disgust-01
       :degree (c46-1 / pretty))
