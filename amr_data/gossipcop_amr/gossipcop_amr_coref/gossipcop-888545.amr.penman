# ::snt Now that's a big ask Alex. Give it a try, I would follow you with interest.
# ::tokens ["Now", "that", "'s", "a", "big", "ask", "Alex", ".", "Give", "it", "a", "try", ",", "I", "would", "follow", "you", "with", "interest", "."]
# ::lemmas ["now", "that", "be", "a", "big", "ask", "Alex", ".", "give", "it", "a", "try", ",", "i", "would", "follow", "you", "with", "interest", "."]
(c1-4 / multi-sentence
      :snt1 (c1-6 / ask-01
                  :ARG1 (c1-10 / that)
                  :ARG2 (c1-8 / person
                              :name (c1-3 / name
                                          :op1 "Alex"))
                  :mod (c1-1 / big)
                  :time (c1-7 / now))
      :snt2 (c1-9 / and
                  :op1 (c1-11 / give-01
                              :ARG0 (c1-2 / you)
                              :ARG1 (c1-12 / it)
                              :ARG2 (c1-15 / try-01
                                           :ARG0 c1-2)
                              :mode imperative)
                  :op2 (c1-0 / follow-01
                             :ARG1 (c1-5 / i)
                             :ARG2 (c1-13 / you)
                             :manner (c1-14 / interest-01
                                            :ARG1 c1-5))))

# ::snt An enraged Alec Baldwin unleashed a volcanic tirade of threats and insults on his -year-old daughter, Ireland, calling her a "thoughtless little pig," and bashing her mother Kim Basinger.
# ::tokens ["An", "enraged", "Alec", "Baldwin", "unleashed", "a", "volcanic", "tirade", "of", "threats", "and", "insults", "on", "his", "-year", "-", "old", "daughter", ",", "Ireland", ",", "calling", "her", "a", "\"", "thoughtless", "little", "pig", ",", "\"", "and", "bashing", "her", "mother", "Kim", "Basinger", "."]
# ::lemmas ["an", "enraged", "Alec", "Baldwin", "unleash", "a", "volcanic", "tirade", "of", "threat", "and", "insult", "on", "his", "-year", "-", "old", "daughter", ",", "Ireland", ",", "call", "she", "a", "\"", "thoughtless", "little", "pig", ",", "\"", "and", "bash", "her", "mother", "Kim", "Basinger", "."]
(c2-17 / unleash-01
       :ARG0 (c2-19 / person
                    :name (c2-18 / name
                                 :op1 "Alec"
                                 :op2 "Baldwin")
                    :ARG1-of (c2-9 / anger-01))
       :ARG1 (c2-10 / tirade
                    :consist-of (c2-8 / and
                                      :op1 (c2-16 / threaten-01)
                                      :op2 (c2-22 / insult-01))
                    :mod (c2-5 / volcano)
                    :consist-of (c2-7 / and
                                      :op1 (c2-15 / call-01
                                                  :ARG0 c2-19
                                                  :ARG1 (c2-13 / person
                                                               :name (c2-14 / name
                                                                            :op1 "Ireland")
                                                               :ARG0-of (c2-6 / have-rel-role-91
                                                                              :ARG1 c2-19
                                                                              :ARG2 (c2-24 / daughter))
                                                               :age (c2-23 / temporal-quantity
                                                                           :unit (c2-4 / year)
                                                                           :quant 1))
                                                  :ARG2 (c2-3 / pig
                                                              :mod (c2-1 / little)
                                                              :mod (c2-0 / think-01
                                                                         :polarity -)))
                                      :op2 (c2-11 / bash-01
                                                  :ARG0 c2-19
                                                  :ARG1 (c2-2 / person
                                                              :name (c2-20 / name
                                                                           :op1 "Kim"
                                                                           :op2 "Basinger")
                                                              :ARG0-of (c2-21 / have-rel-role-91
                                                                              :ARG1 c2-13
                                                                              :ARG2 (c2-12 / mother)))))))

# ::snt No.
# ::tokens ["No", "."]
# ::lemmas ["no", "."]
(c4-0 / no)

# ::snt Trump always asks everyone if they remember who he was before POTUS, always brags about looking like Alec Baldwin...but who believes that...
# ::tokens ["Trump", "always", "asks", "everyone", "if", "they", "remember", "who", "he", "was", "before", "POTUS", ",", "always", "brags", "about", "looking", "like", "Alec", "Baldwin", "...", "but", "who", "believes", "that", "..."]
# ::lemmas ["Trump", "always", "ask", "everyone", "if", "they", "remember", "who", "he", "be", "before", "POTUS", ",", "always", "brag", "about", "look", "like", "Alec", "Baldwin", "...", "but", "who", "believe", "that", "..."]
(c6-14 / contrast-01
       :ARG1 (c6-9 / and
                   :op1 (c6-7 / ask-01
                              :ARG0 (c6-18 / person
                                           :name (c6-15 / name
                                                        :op1 "Trump"))
                              :ARG1 (c6-8 / truth-value
                                          :polarity-of (c6-16 / remember-01
                                                              :ARG0 (c6-17 / everyone)
                                                              :ARG1 (c6-12 / person
                                                                           :domain c6-18
                                                                           :time (c6-11 / before
                                                                                        :op1 (c6-5 / have-org-role-91
                                                                                                   :ARG0 c6-18
                                                                                                   :ARG1 (c6-10 / country
                                                                                                                :name (c6-13 / name
                                                                                                                             :op1 "United"
                                                                                                                             :op2 "States"))
                                                                                                   :ARG2 (c6-3 / president))))))
                              :ARG2 c6-17
                              :time (c6-6 / always))
                   :op2 (c6-0 / brag-01
                              :ARG0 c6-18
                              :ARG1 (c6-1 / look-02
                                          :ARG0 c6-18
                                          :ARG1 (c6-2 / person
                                                      :name (c6-19 / name
                                                                   :op1 "Alec"
                                                                   :op2 "Baldwin")))
                              :time (c6-21 / always)))
       :ARG2 (c6-4 / believe-01
                   :ARG0 (c6-20 / amr-unknown)
                   :ARG1 c6-16))

# ::snt Lmao!
# ::tokens ["Lmao", "!"]
# ::lemmas ["Lmao", "!"]
(c7-1 / laugh-01
      :ARG0 (c7-2 / i)
      :manner (c7-0 / loud)
      :mode expressive)

# ::snt What, me worry over what Mad Magazine thinks about politics?
# ::tokens ["What", ",", "me", "worry", "over", "what", "Mad", "Magazine", "thinks", "about", "politics", "?"]
# ::lemmas ["what", ",", "i", "worry", "over", "what", "Mad", "Magazine", "think", "about", "politic", "?"]
(c8-4 / worry-01
      :ARG0 (c8-2 / amr-unknown)
      :ARG1 (c8-5 / think-01
                  :ARG0 (c8-0 / magazine
                              :name (c8-1 / name
                                          :op1 "Mad"
                                          :op2 "Magazine"))
                  :ARG1 (c8-3 / politics)))

# ::snt Trust me, Id vote for Baldwin if it meant wed get that schmuck Trump out of the White House!
# ::tokens ["Trust", "me", ",", "I", "d", "vote", "for", "Baldwin", "if", "it", "meant", "we", "d", "get", "that", "schmuck", "Trump", "out", "of", "the", "White", "House", "!"]
# ::lemmas ["trust", "i", ",", "i", "d", "vote", "for", "Baldwin", "if", "it", "mean", "we", "d", "get", "that", "schmuck", "Trump", "out", "of", "the", "White", "House", "!"]
(c9-11 / trust-01
       :ARG0 (c9-1 / you)
       :ARG1 (c9-6 / vote-01
                   :ARG0 (c9-10 / i)
                   :ARG1 (c9-8 / person
                               :name (c9-2 / name
                                           :op1 "Baldwin"))
                   :condition (c9-3 / mean-01
                                    :ARG2 (c9-12 / get-05
                                                 :ARG0 c9-1
                                                 :ARG1 (c9-0 / out-06
                                                             :ARG1 (c9-4 / person
                                                                         :name (c9-7 / name
                                                                                     :op1 "Trump")
                                                                         :mod (c9-5 / schmuck
                                                                                    :mode expressive))
                                                             :ARG2 (c9-13 / government-organization
                                                                          :name (c9-9 / name
                                                                                      :op1 "White"
                                                                                      :op2 "House"))))
                                    :ARG1 c9-6))
       :ARG2 c9-10
       :mode imperative)

# ::snt He should run as his Trump alter-ego. That would be hilarious.
# ::tokens ["He", "should", "run", "as", "his", "Trump", "alter", "-", "ego", ".", "That", "would", "be", "hilarious", "."]
# ::lemmas ["he", "should", "run", "as", "his", "Trump", "alter", "-", "ego", ".", "that", "would", "be", "hilarious", "."]
(c10-0 / multi-sentence
       :snt1 (c10-2 / recommend-01
                    :ARG1 (c10-8 / run-02
                                 :ARG0 (c10-3 / he)
                                 :manner (c10-7 / alter-01
                                                :ARG1 c10-3
                                                :ARG2 (c10-4 / person
                                                             :name (c10-1 / name
                                                                          :op1 "Trump")))))
       :snt2 (c10-5 / hilarious
                    :domain (c10-6 / that)))

# ::snt I think Alec would win and be better than trump. but that doesnt mean Id want him to run. President is not an entry level position.
# ::tokens ["I", "think", "Alec", "would", "win", "and", "be", "better", "than", "trump", ".", "but", "that", "does", "nt", "mean", "I", "d", "want", "him", "to", "run", ".", "President", "is", "not", "an", "entry", "level", "position", "."]
# ::lemmas ["i", "think", "Alec", "would", "win", "and", "be", "well", "than", "trump", ".", "but", "that", "do", "not", "mean", "I", "d", "want", "he", "to", "run", ".", "President", "be", "not", "an", "entry", "level", "position", "."]
(c11-11 / multi-sentence
        :snt1 (c11-14 / contrast-01
                      :ARG1 (c11-8 / think-01
                                   :ARG0 (c11-22 / i)
                                   :ARG1 (c11-9 / and
                                                :op1 (c11-20 / win-01
                                                             :ARG0 (c11-19 / person
                                                                           :name (c11-16 / name
                                                                                         :op1 "Alec")))
                                                :op2 (c11-10 / good-03
                                                             :ARG1 c11-19
                                                             :ARG2-of (c11-5 / have-degree-91
                                                                             :ARG1 c11-19
                                                                             :ARG3 (c11-6 / more)
                                                                             :ARG4 (c11-12 / person
                                                                                           :name (c11-13 / name
                                                                                                         :op1 " trump"))))))
                      :ARG2 (c11-15 / mean-01
                                    :ARG1 c11-9
                                    :ARG2 (c11-1 / want-01
                                                 :ARG0 (c11-4 / i)
                                                 :ARG1 (c11-17 / run-02
                                                               :ARG0 c11-19))
                                    :polarity -))
        :snt2 (c11-3 / position
                     :mod (c11-0 / level
                                 :mod (c11-18 / entry))
                     :domain (c11-2 / person
                                    :ARG0-of (c11-21 / have-org-role-91
                                                     :ARG2 (c11-7 / president)))
                     :polarity -))

# ::snt And hes ABSOLUTELY right!
# ::tokens ["And", "he", "s", "ABSOLUTELY", "right", "!"]
# ::lemmas ["and", "he", "s", "absolutely", "right", "!"]
(c12-3 / and
       :op2 (c12-0 / right-06
                   :ARG1 (c12-1 / he)
                   :mod (c12-2 / absolute)))

# ::snt As opposed to be on video (several times) lusting after his daughter? I'm team or team .
# ::tokens ["As", "opposed", "to", "be", "on", "video", "(", "several", "times", ")", "lusting", "after", "his", "daughter", "?", "I", "'m", "team", "or", "team", "."]
# ::lemmas ["as", "oppose", "to", "be", "on", "video", "(", "several", "time", ")", "lust", "after", "his", "daughter", "?", "i", "be", "team", "or", "team", "."]
(c13-0 / or
       :op1 (c13-8 / team)
       :op2 (c13-12 / team)
       :polarity (c13-10 / amr-unknown)
       :domain (c13-9 / i)
       :ARG1-of (c13-2 / instead-of-91
                       :ARG2 (c13-5 / lust-01
                                    :ARG0 c13-9
                                    :ARG1 (c13-6 / person
                                                 :ARG0-of (c13-4 / have-rel-role-91
                                                                 :ARG1 (c13-7 / he)
                                                                 :ARG2 (c13-11 / daughter)))
                                    :medium (c13-3 / video)
                                    :frequency (c13-1 / several))))

# ::snt Egocentric is not Trump's only personality flaw. Team Alec over here.
# ::tokens ["Egocentric", "is", "not", "Trump", "'s", "only", "personality", "flaw", ".", "Team", "Alec", "over", "here", "."]
# ::lemmas ["Egocentric", "be", "not", "Trump", "'s", "only", "personality", "flaw", ".", "Team", "Alec", "over", "here", "."]
(c14-2 / multi-sentence
       :snt1 (c14-0 / flaw-01
                    :ARG0 (c14-6 / personality)
                    :ARG1 (c14-3 / person
                                 :name (c14-4 / name
                                              :op1 "Trump"))
                    :mod (c14-1 / only
                                :polarity -))
       :snt2 (c14-8 / team
                    :name (c14-5 / name
                                 :op1 "Alec")
                    :location (c14-7 / here)))

# ::snt Well he has TV, movies, divorced &amp; a tape yelling at his kid... does he have any other qualifications to be president of the USA?
# ::tokens ["Well", "he", "has", "TV", ",", "movies", ",", "divorced", "&", "amp", ";", "a", "tape", "yelling", "at", "his", "kid", "...", "does", "he", "have", "any", "other", "qualifications", "to", "be", "president", "of", "the", "USA", "?"]
# ::lemmas ["well", "he", "have", "tv", ",", "movie", ",", "divorce", "&", "amp", ";", "a", "tape", "yell", "at", "his", "kid", "...", "do", "he", "have", "any", "other", "qualification", "to", "be", "president", "of", "the", "USA", "?"]
(c15-12 / multi-sentence
        :snt1 (c15-4 / have-03
                     :ARG0 (c15-21 / he)
                     :ARG1 (c15-9 / and
                                  :op1 (c15-10 / television)
                                  :op2 (c15-5 / movie)
                                  :op3 (c15-22 / divorce-01
                                               :ARG0 c15-21)
                                  :op4 (c15-19 / product
                                               :name (c15-18 / name
                                                             :op1 "&"
                                                             :op2 "amp"))
                                  :op5 (c15-16 / tape-02
                                               :ARG0 c15-21
                                               :ARG1 (c15-2 / yell-01
                                                            :ARG0 c15-21
                                                            :ARG1 (c15-13 / person
                                                                          :ARG0-of (c15-3 / have-rel-role-91
                                                                                          :ARG1 c15-21
                                                                                          :ARG2 (c15-6 / kid))))))
                     :mod (c15-20 / well))
        :snt2 (c15-8 / qualify-02
                     :polarity (c15-11 / amr-unknown)
                     :ARG1 (c15-17 / he)
                     :ARG2 (c15-7 / have-org-role-91
                                  :ARG0 c15-17
                                  :ARG1 (c15-15 / country
                                                :name (c15-14 / name
                                                              :op1 "USA"))
                                  :ARG2 (c15-0 / president))
                     :mod (c15-1 / other)))

# ::snt In all honesty, all celebrities should be automatically banned from running for president.
# ::tokens ["In", "all", "honesty", ",", "all", "celebrities", "should", "be", "automatically", "banned", "from", "running", "for", "president", "."]
# ::lemmas ["in", "all", "honesty", ",", "all", "celebrity", "should", "be", "automatically", "ban", "from", "run", "for", "president", "."]
(c16-1 / recommend-01
       :ARG1 (c16-0 / ban-01
                    :ARG1 (c16-7 / run-02
                                 :ARG0 (c16-4 / celebrity
                                              :mod (c16-6 / all))
                                 :ARG1 (c16-3 / president))
                    :ARG2 c16-4
                    :manner (c16-5 / automatic))
       :ARG1-of (c16-2 / honest-01
                       :mod c16-6))

# ::snt he seems to have something that the very stable genius does not: values.
# ::tokens ["he", "seems", "to", "have", "something", "that", "the", "very", "stable", "genius", "does", "not", ":", "values", "."]
# ::lemmas ["he", "seem", "to", "have", "something", "that", "the", "very", "stable", "genius", "do", "not", ":", "value", "."]
(c17-1 / seem-01
       :ARG1 (c17-4 / have-03
                    :ARG0 (c17-6 / he)
                    :ARG1 (c17-0 / something
                                 :ARG1-of (c17-3 / have-03
                                                 :ARG0 (c17-7 / genius
                                                              :ARG1-of (c17-8 / stable-03
                                                                              :degree (c17-2 / very)))
                                                 :polarity -)
                                 :mod (c17-5 / value))))

# ::snt At least he isn't lusting after his daughter lime Trump does that sicko lusts after his own daughter ugh
# ::tokens ["At", "least", "he", "is", "n't", "lusting", "after", "his", "daughter", "lime", "Trump", "does", "that", "sicko", "lusts", "after", "his", "own", "daughter", "ugh"]
# ::lemmas ["at", "least", "he", "be", "not", "lust", "after", "his", "daughter", "lime", "Trump", "do", "that", "sicko", "lust", "after", "his", "own", "daughter", "ugh"]
(c21-1 / multi-sentence
       :snt1 (c21-7 / lust-01
                    :ARG0 (c21-5 / he)
                    :ARG1 (c21-6 / person
                                 :name (c21-0 / name
                                              :op1 "Lime"
                                              :op2 "Trump")
                                 :ARG0-of (c21-10 / have-rel-role-91
                                                  :ARG1 c21-5
                                                  :ARG2 (c21-12 / daughter)))
                    :mod (c21-11 / at-least)
                    :polarity -)
       :snt2 (c21-9 / do-02
                    :ARG0 (c21-4 / he)
                    :ARG1 (c21-13 / lust-01
                                  :ARG0 c21-4
                                  :ARG1 (c21-2 / person
                                               :ARG0-of (c21-14 / have-rel-role-91
                                                                :ARG1 c21-4
                                                                :ARG2 (c21-8 / daughter)))
                                  :ARG1-of (c21-3 / sick-02))
                    :mod (c21-15 / ugh
                                 :mode expressive)))

# ::snt Yeah you go right ahead. .. we will all need a good comedy show..
# ::tokens ["Yeah", "you", "go", "right", "ahead", ".", "..", "we", "will", "all", "need", "a", "good", "comedy", "show", ".."]
# ::lemmas ["yeah", "you", "go", "right", "ahead", ".", "..", "we", "will", "all", "need", "a", "good", "comedy", "show", ".."]
(c22-1 / multi-sentence
       :snt1 (c22-9 / go-06
                    :ARG0 (c22-0 / you)
                    :ARG2 (c22-8 / ahead
                                 :mod (c22-4 / right))
                    :mod (c22-11 / yeah
                                 :mode expressive))
       :snt2 (c22-2 / need-01
                    :ARG0 (c22-5 / we
                                 :mod (c22-7 / all))
                    :ARG1 (c22-3 / show-04
                                 :ARG1 (c22-6 / comedy)
                                 :ARG1-of (c22-10 / good-02))))

# ::snt Alec Baldwin is a approval seeking douchebag!
# ::tokens ["Alec", "Baldwin", "is", "a", "approval", "seeking", "douchebag", "!"]
# ::lemmas ["Alec", "Baldwin", "be", "a", "approval", "seek", "douchebag", "!"]
(c23-4 / douchebag
       :ARG0-of (c23-1 / seek-01
                       :ARG1 (c23-3 / approve-01))
       :domain (c23-2 / person
                      :name (c23-0 / name
                                   :op1 "Alec"
                                   :op2 "Baldwin")))

# ::snt I wonder what she'll buy him for Father's Day...
# ::tokens ["I", "wonder", "what", "she", "'ll", "buy", "him", "for", "Father", "'s", "Day", "..."]
# ::lemmas ["i", "wonder", "what", "she", "'ll", "buy", "he", "for", "Father", "'s", "Day", "..."]
(c25-5 / wonder-01
       :ARG0 (c25-6 / i)
       :ARG1 (c25-7 / thing
                    :ARG1-of (c25-1 / buy-01
                                    :ARG0 (c25-3 / she)
                                    :ARG2 (c25-4 / he)
                                    :purpose (c25-0 / festival
                                                    :name (c25-2 / name
                                                                 :op1 "Father"
                                                                 :op2 "'s"
                                                                 :op3 "Day")))))

# ::snt Please run.
# ::tokens ["Please", "run", "."]
# ::lemmas ["please", "run", "."]
(c26-0 / run-02
       :ARG0 (c26-1 / you)
       :mode imperative
       :polite +)

# ::snt ...yeah.....'sounds "presidential"....
# ::tokens ["...", "yeah", ".....", "'sounds", "\"", "presidential", "\"", "...."]
# ::lemmas ["...", "yeah", ".....", "'sound", "\"", "presidential", "\"", "...."]
(c27-3 / sound-01
       :ARG1 (c27-2 / it)
       :ARG2 (c27-1 / presidential)
       :mod (c27-0 / yeah
                   :mode expressive))

# ::snt No wonder she doesn't want to pick up the call.
# ::tokens ["No", "wonder", "she", "does", "n't", "want", "to", "pick", "up", "the", "call", "."]
# ::lemmas ["no", "wonder", "she", "do", "not", "want", "to", "pick", "up", "the", "call", "."]
(c28-3 / wonder-02
       :ARG1 (c28-2 / want-01
                    :ARG0 (c28-0 / she)
                    :ARG1 (c28-1 / pick-up-04
                                 :ARG0 c28-0
                                 :ARG1 (c28-4 / call-02))
                    :polarity -)
       :polarity -)

# ::snt Waste of time for this Bozo to run for POTUS.
# ::tokens ["Waste", "of", "time", "for", "this", "Bozo", "to", "run", "for", "POTUS", "."]
# ::lemmas ["waste", "of", "time", "for", "this", "Bozo", "to", "run", "for", "POTUS", "."]
(c29-6 / waste-01
       :ARG1 (c29-8 / time)
       :ARG2 (c29-2 / run-02
                    :ARG0 (c29-4 / person
                                 :name (c29-0 / name
                                              :op1 "Bozo")
                                 :mod (c29-9 / this))
                    :ARG1 (c29-3 / have-org-role-91
                                 :ARG0 c29-4
                                 :ARG1 (c29-7 / country
                                              :name (c29-5 / name
                                                           :op1 "United"
                                                           :op2 "States"))
                                 :ARG2 (c29-1 / president))))

# ::snt is such a Dick, A very Abusive Dick.
# ::tokens ["is", "such", "a", "Dick", ",", "A", "very", "Abusive", "Dick", "."]
# ::lemmas ["be", "such", "a", "Dick", ",", "a", "very", "abusive", "Dick", "."]
(c30-2 / have-mod-91
       :ARG2 (c30-4 / Dick
                    :ARG0-of (c30-3 / abuse-01
                                    :degree (c30-1 / very)))
       :mod (c30-0 / such))

# ::snt Wow...who says that to their year old daughter? An AH....
# ::tokens ["Wow", "...", "who", "says", "that", "to", "their", "year", "old", "daughter", "?", "An", "AH", "...."]
# ::lemmas ["wow", "...", "who", "say", "that", "to", "their", "year", "old", "daughter", "?", "an", "AH", "...."]
(c31-1 / multi-sentence
       :snt1 (c31-3 / say-01
                    :ARG0 (c31-10 / amr-unknown)
                    :ARG1 (c31-8 / that)
                    :ARG2 (c31-6 / person
                                 :ARG0-of (c31-5 / have-rel-role-91
                                                 :ARG1 (c31-12 / they)
                                                 :ARG2 (c31-11 / daughter))
                                 :age (c31-9 / temporal-quantity
                                             :unit (c31-0 / year)
                                             :quant 1))
                    :mod (c31-7 / wow
                                :mode expressive))
       :snt2 (c31-2 / person
                    :name (c31-4 / name
                                 :op1 "An"
                                 :op2 "ah")
                    :mode expressive))

# ::snt He shouldnt have even had her much less been allowed to visit/see her.Ill take a stab in the dark on why she wasnt answering his calls...
# ::tokens ["He", "should", "nt", "have", "even", "had", "her", "much", "less", "been", "allowed", "to", "visit", "/", "see", "her", ".", "Ill", "take", "a", "stab", "in", "the", "dark", "on", "why", "she", "was", "nt", "answering", "his", "calls", "..."]
# ::lemmas ["he", "should", "not", "have", "even", "have", "her", "much", "less", "be", "allow", "to", "visit", "/", "see", "she", ".", "Ill", "take", "a", "stab", "in", "the", "dark", "on", "why", "she", "be", "not", "answer", "his", "call", "..."]
(c32-12 / multi-sentence
        :snt1 (c32-15 / recommend-01
                      :ARG1 (c32-10 / allow-01
                                    :ARG1 (c32-0 / slash
                                                 :op1 (c32-5 / visit-01
                                                             :ARG0 (c32-6 / he)
                                                             :ARG1 (c32-4 / she))
                                                 :op2 (c32-3 / see-01
                                                             :ARG0 c32-6
                                                             :ARG1 c32-4)
                                                 :mod (c32-2 / less
                                                             :quant (c32-7 / much)))
                                    :mod (c32-16 / even))
                      :polarity -)
        :snt2 (c32-14 / stab-01
                      :ARG0 (c32-18 / i)
                      :ARG1 (c32-9 / thing
                                   :ARG0-of (c32-13 / cause-01
                                                    :ARG1 (c32-8 / answer-01
                                                                 :ARG0 (c32-1 / she)
                                                                 :ARG1 (c32-11 / call-02
                                                                               :ARG0 (c32-17 / he))
                                                                 :polarity -)))
                      :manner (c32-19 / dark)))

# ::snt Seriously?
# ::tokens ["Seriously", "?"]
# ::lemmas ["seriously", "?"]
(c33-1 / serious-01
       :polarity (c33-0 / amr-unknown))

# ::snt What a feckless cunt
# ::tokens ["What", "a", "feckless", "cunt"]
# ::lemmas ["what", "a", "feckless", "cunt"]
(c34-0 / cunt
       :mod (c34-1 / feckless
                   :degree (c34-2 / so))
       :mode expressive)

# ::snt After a week or so, he'll be outta breath...
# ::tokens ["After", "a", "week", "or", "so", ",", "he", "'ll", "be", "outta", "breath", "..."]
# ::lemmas ["after", "a", "week", "or", "so", ",", "he", "'ll", "be", "outta", "breath", "..."]
(c35-1 / out-06
       :ARG1 (c35-4 / he)
       :ARG2 (c35-2 / breathe-01
                    :ARG0 c35-4)
       :time (c35-7 / after
                    :op1 (c35-0 / or
                                :op1 (c35-6 / temporal-quantity
                                            :unit (c35-5 / week)
                                            :quant 1)
                                :op2 (c35-3 / so))))

# ::snt I hope he does run for president so I could see him lose!
# ::tokens ["I", "hope", "he", "does", "run", "for", "president", "so", "I", "could", "see", "him", "lose", "!"]
# ::lemmas ["i", "hope", "he", "do", "run", "for", "president", "so", "i", "could", "see", "he", "lose", "!"]
(c36-3 / hope-01
       :ARG0 (c36-7 / i)
       :ARG1 (c36-2 / run-02
                    :ARG0 (c36-6 / he)
                    :ARG1 (c36-4 / president))
       :purpose (c36-0 / possible-01
                       :ARG1 (c36-1 / see-01
                                    :ARG0 c36-7
                                    :ARG1 (c36-5 / lose-03
                                                 :ARG0 c36-6))))

# ::snt what a creep.. dads need to teach their daughters about their worth. speaking to them like Baldwin did, teaches them they are worthless.
# ::tokens ["what", "a", "creep", "..", "dads", "need", "to", "teach", "their", "daughters", "about", "their", "worth", ".", "speaking", "to", "them", "like", "Baldwin", "did", ",", "teaches", "them", "they", "are", "worthless", "."]
# ::lemmas ["what", "a", "creep", "..", "dad", "need", "to", "teach", "their", "daughter", "about", "their", "worth", ".", "speak", "to", "they", "like", "Baldwin", "do", ",", "teach", "they", "they", "be", "worthless", "."]
(c37-7 / multi-sentence
       :snt1 (c37-10 / creep
                     :degree (c37-0 / so))
       :snt2 (c37-13 / need-01
                     :ARG0 (c37-15 / person
                                   :ARG0-of (c37-5 / have-rel-role-91
                                                   :ARG2 (c37-18 / dad)))
                     :ARG1 (c37-6 / teach-01
                                  :ARG0 c37-15
                                  :ARG1 (c37-16 / worth-01
                                                :ARG1 c37-15)
                                  :ARG2 (c37-8 / person
                                               :ARG0-of (c37-17 / have-rel-role-91
                                                                :ARG1 c37-15
                                                                :ARG2 (c37-11 / daughter))))
                     :snt3 (c37-12 / teach-01
                                   :ARG0 (c37-3 / speak-01
                                                :ARG0 (c37-4 / you)
                                                :ARG2 c37-8
                                                :ARG1-of (c37-14 / resemble-01
                                                                 :ARG0 (c37-2 / person
                                                                              :name (c37-9 / name
                                                                                           :op1 "Baldwin"))
                                                                 :ARG2 c37-3)))
                     :ARG1 (c37-1 / worth-01
                                  :ARG1 c37-8
                                  :polarity -)
                     :ARG2 c37-8))

# ::snt He won't say a word because that's the kind of pussy he is.
# ::tokens ["He", "wo", "n't", "say", "a", "word", "because", "that", "'s", "the", "kind", "of", "pussy", "he", "is", "."]
# ::lemmas ["he", "will", "not", "say", "a", "word", "because", "that", "be", "the", "kind", "of", "pussy", "he", "be", "."]
(c38-0 / say-01
       :ARG0 (c38-1 / he)
       :ARG1 (c38-4 / word)
       :ARG1-of (c38-5 / cause-01
                       :ARG0 (c38-2 / pussy
                                    :domain c38-1
                                    :mod (c38-3 / kind
                                                :mod (c38-6 / that))))
       :polarity -)

# ::snt Yea I would pump the brakes . In fact, if I were you, I would stomp on them.
# ::tokens ["Yea", "I", "would", "pump", "the", "brakes", ".", "In", "fact", ",", "if", "I", "were", "you", ",", "I", "would", "stomp", "on", "them", "."]
# ::lemmas ["yea", "i", "would", "pump", "the", "brake", ".", "in", "fact", ",", "if", "i", "be", "you", ",", "i", "would", "stomp", "on", "they", "."]
(c39-2 / multi-sentence
       :snt1 (c39-5 / pump-01
                    :ARG0 (c39-6 / i)
                    :ARG1 (c39-0 / brake))
       :snt2 (c39-3 / stomp-01
                    :ARG0 (c39-4 / i)
                    :ARG1 (c39-7 / they)
                    :condition (c39-1 / you
                                      :domain c39-4)
                    :mod (c39-8 / in-fact)))

# ::snt I'll never forget that tape.
# ::tokens ["I", "'ll", "never", "forget", "that", "tape", "."]
# ::lemmas ["i", "'ll", "never", "forget", "that", "tape", "."]
(c40-0 / forget-01
       :ARG0 (c40-3 / i)
       :ARG1 (c40-2 / tape
                    :mod (c40-4 / that))
       :time (c40-1 / ever)
       :polarity -)

# ::snt That would be a fun to watch.
# ::tokens ["That", "would", "be", "a", "fun", "to", "watch", "."]
# ::lemmas ["that", "would", "be", "a", "fun", "to", "watch", "."]
(c41-0 / fun-01
       :ARG1 (c41-2 / watch-01
                    :ARG1 (c41-1 / that)))

# ::snt couldn't run for dog catcher and win
# ::tokens ["could", "n't", "run", "for", "dog", "catcher", "and", "win"]
# ::lemmas ["could", "not", "run", "for", "dog", "catcher", "and", "win"]
(c42-2 / possible-01
       :ARG1 (c42-6 / and
                    :op1 (c42-1 / run-02
                                :ARG0 (c42-5 / i)
                                :prep-for (c42-0 / person
                                                 :ARG0-of (c42-3 / catch-01
                                                                 :ARG1 (c42-7 / dog))))
                    :op2 (c42-4 / win-01
                                :ARG0 c42-5))
       :polarity -)

# ::snt Cmon Alex.
# ::tokens ["Cmon", "Alex", "."]
# ::lemmas ["Cmon", "Alex", "."]
(c43-1 / say-01
       :ARG0 (c43-4 / i)
       :ARG1 (c43-3 / cmon-01
                    :ARG0 (c43-2 / person
                                 :name (c43-0 / name
                                              :op1 "Alex")
                                 :ARG2-of c43-1)
                    :mode imperative))

# ::snt There is a lot of evidence. Wait Mueller will show you.
# ::tokens ["There", "is", "a", "lot", "of", "evidence", ".", "Wait", "Mueller", "will", "show", "you", "."]
# ::lemmas ["there", "be", "a", "lot", "of", "evidence", ".", "wait", "Mueller", "will", "show", "you", "."]
(c44-1 / multi-sentence
       :snt1 (c44-4 / evidence
                    :quant (c44-5 / lot))
       :snt2 (c44-7 / wait-01
                    :ARG1 (c44-0 / you)
                    :ARG2 (c44-3 / show-01
                                 :ARG0 (c44-6 / person
                                              :name (c44-2 / name
                                                           :op1 "Mueller"))
                                 :ARG2 (c44-8 / you))
                    :mode imperative))

# ::snt You have some evidence or more feet stomping?
# ::tokens ["You", "have", "some", "evidence", "or", "more", "feet", "stomping", "?"]
# ::lemmas ["you", "have", "some", "evidence", "or", "more", "foot", "stomp", "?"]
(c45-7 / have-03
       :polarity (c45-8 / amr-unknown)
       :ARG0 (c45-3 / you)
       :ARG1 (c45-0 / or
                    :op1 (c45-6 / evidence-01
                                :mod (c45-5 / some))
                    :op2 (c45-1 / stomp-01
                                :ARG0 (c45-2 / foot
                                             :quant (c45-4 / more)))))

# ::snt No, no you would not. Everyone knows how stupid you are.
# ::tokens ["No", ",", "no", "you", "would", "not", ".", "Everyone", "knows", "how", "stupid", "you", "are", "."]
# ::lemmas ["no", ",", "no", "you", "would", "not", ".", "everyone", "know", "how", "stupid", "you", "be", "."]
(c47-3 / multi-sentence
       :snt1 (c47-2 / no)
       :snt2 (c47-8 / do-02
                    :ARG0 (c47-1 / you)
                    :polarity -)
       :snt3 (c47-6 / know-01
                    :ARG0 (c47-5 / everyone)
                    :ARG1 (c47-4 / stupid
                                 :domain (c47-7 / you)
                                 :degree (c47-0 / so))))

# ::snt Goober
# ::tokens ["Goober"]
# ::lemmas ["Goober"]
(c48-0 / goober)

# ::snt Please run so you can show us all how smart you really are
# ::tokens ["Please", "run", "so", "you", "can", "show", "us", "all", "how", "smart", "you", "really", "are"]
# ::lemmas ["please", "run", "so", "you", "can", "show", "we", "all", "how", "smart", "you", "really", "be"]
(c49-3 / run-02
       :ARG0 (c49-1 / you)
       :purpose (c49-5 / possible-01
                       :ARG1 (c49-2 / show-01
                                    :ARG0 c49-1
                                    :ARG1 (c49-7 / thing
                                                 :degree-of (c49-0 / smart-06
                                                                   :ARG1 c49-1
                                                                   :ARG1-of (c49-8 / real-04)))
                                    :ARG2 (c49-6 / we
                                                 :mod (c49-4 / all))))
       :mode imperative
       :polite +)

# ::snt ..... he couldn't beat... himself off.....
# ::tokens [".....", "he", "could", "n't", "beat", "...", "himself", "off", "....."]
# ::lemmas [".....", "he", "could", "not", "beat", "...", "himself", "off", "....."]
(c50-3 / possible-01
       :ARG1 (c50-1 / beat-03
                    :ARG0 (c50-2 / he
                                 :ARG1-of c50-1)
                    :mod (c50-0 / off))
       :polarity -)
