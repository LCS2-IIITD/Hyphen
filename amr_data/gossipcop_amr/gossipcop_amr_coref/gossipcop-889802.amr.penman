# ::snt I pray that he is well or will be well
# ::tokens ["I", "pray", "that", "he", "is", "well", "or", "will", "be", "well"]
# ::lemmas ["i", "pray", "that", "he", "be", "well", "or", "will", "be", "well"]
(c1-2 / pray-01
      :ARG0 (c1-5 / i)
      :ARG1 (c1-0 / or
                  :op1 (c1-4 / well-05
                             :ARG1 (c1-1 / he))
                  :op2 (c1-3 / well-05
                             :ARG1 c1-1)))

# ::snt Prayers to him
# ::tokens ["Prayers", "to", "him"]
# ::lemmas ["prayer", "to", "he"]
(c2-1 / pray-01
      :ARG2 (c2-0 / he))

# ::snt quick recovery
# ::tokens ["quick", "recovery"]
# ::lemmas ["quick", "recovery"]
(c3-0 / recover-01
      :ARG1-of (c3-1 / quick-02))

# ::snt Wish him luck
# ::tokens ["Wish", "him", "luck"]
# ::lemmas ["wish", "he", "luck"]
(c4-0 / wish-01
      :ARG0 (c4-3 / i)
      :ARG1 (c4-2 / luck)
      :ARG2 (c4-1 / he))

# ::snt Everybody will be relieved to hear, his ego is undamaged
# ::tokens ["Everybody", "will", "be", "relieved", "to", "hear", ",", "his", "ego", "is", "undamaged"]
# ::lemmas ["everybody", "will", "be", "relieve", "to", "hear", ",", "his", "ego", "be", "undamaged"]
(c5-1 / relieve-01
      :ARG0 (c5-3 / hear-01
                  :ARG1 (c5-5 / disparage-01
                              :ARG1 (c5-2 / ego
                                          :poss (c5-4 / he))))
      :ARG1 (c5-0 / everybody))

# ::snt My maiden name Beard !wonder if we're related? ??
# ::tokens ["My", "maiden", "name", "Beard", "!", "wonder", "if", "we", "'re", "related", "?", "?", "?"]
# ::lemmas ["my", "maiden", "name", "Beard", "!", "wonder", "if", "we", "be", "relate", "?", "?", "?"]
(c6-2 / say-01
      :ARG1 (c6-1 / name
                  :op1 "Beard")
      :ARG2 (c6-6 / i)
      :mod (c6-0 / maiden)
      :ARG2 (c6-5 / wonder-01
                  :ARG0 c6-6
                  :ARG1 (c6-7 / truth-value
                              :polarity-of (c6-3 / relate-01
                                                 :ARG1 (c6-4 / we))))
      :mode expressive)

# ::snt Hope u OK Simon best wishes from wildcard with Simon Cowell puppets mad mumMrs H!
# ::tokens ["Hope", "u", "OK", "Simon", "best", "wishes", "from", "wildcard", "with", "Simon", "Cowell", "puppets", "mad", "mumMrs", "H", "!"]
# ::lemmas ["hope", "u", "ok", "Simon", "good", "wish", "from", "wildcard", "with", "Simon", "Cowell", "puppet", "mad", "mumMrs", "H", "!"]
(c7-5 / hope-01
      :ARG0 (c7-14 / i)
      :ARG1 (c7-0 / okay-01
                  :ARG0 (c7-6 / person
                              :name (c7-1 / name
                                          :op1 "Wildcard")
                              :accompanier (c7-2 / puppet
                                                 :mod (c7-15 / person
                                                             :name (c7-7 / name
                                                                         :op1 "Simon"
                                                                         :op2 "Cowell"))
                                                 :ARG0-of (c7-3 / mad-02
                                                                :ARG1 (c7-10 / person
                                                                             :name (c7-8 / name
                                                                                         :op1 "Mrs"
                                                                                         :op2 "H")
                                                                             :ARG0-of (c7-13 / have-rel-role-91
                                                                                             :ARG2 (c7-9 / mum))))))
                  :ARG1 (c7-16 / person
                               :name (c7-12 / name
                                            :op1 "Simon"))
                  :ARG2-of (c7-4 / have-degree-91
                                 :ARG1 (c7-11 / wish-01
                                              :ARG3 (c7-17 / most)))))

# ::snt Tripped over his ego
# ::tokens ["Tripped", "over", "his", "ego"]
# ::lemmas ["trip", "over", "his", "ego"]
(c8-2 / trip-03
      :ARG1 (c8-0 / ego
                  :poss (c8-1 / he)))

# ::snt Did he fall onto a cucumber. . .again
# ::tokens ["Did", "he", "fall", "onto", "a", "cucumber", ".", ".", ".again"]
# ::lemmas ["do", "he", "fall", "onto", "a", "cucumber", ".", ".", ".again"]
(c9-0 / fall-01
      :polarity (c9-4 / amr-unknown)
      :ARG1 (c9-1 / he)
      :ARG4 (c9-2 / cucumber)
      :mod (c9-3 / again))

# ::snt who push him ?" lmao
# ::tokens ["who", "push", "him", "?", "\"", "lmao"]
# ::lemmas ["who", "push", "he", "?", "\"", "lmao"]
(c10-1 / push-04
       :ARG0 (c10-4 / amr-unknown)
       :ARG1 (c10-0 / he)
       :mod (c10-2 / laugh-01
                   :ARG0 (c10-3 / i)
                   :manner (c10-5 / loud)
                   :mode expressive))

# ::snt Hope he didn't fall off his wallet and onto his ego
# ::tokens ["Hope", "he", "did", "n't", "fall", "off", "his", "wallet", "and", "onto", "his", "ego"]
# ::lemmas ["hope", "he", "do", "not", "fall", "off", "his", "wallet", "and", "onto", "his", "ego"]
(c11-3 / hope-01
       :ARG0 (c11-6 / i)
       :ARG1 (c11-0 / fall-01
                    :ARG1 (c11-5 / he
                                 :part (c11-4 / wallet))
                    :ARG4 (c11-1 / onto
                                 :op1 (c11-2 / ego
                                             :poss c11-5))
                    :polarity -))

# ::snt Get well soon Im praying you will have a speedy recovery you are amazing and Im a huge huge fan of yours
# ::tokens ["Get", "well", "soon", "I", "m", "praying", "you", "will", "have", "a", "speedy", "recovery", "you", "are", "amazing", "and", "I", "m", "a", "huge", "huge", "fan", "of", "yours"]
# ::lemmas ["get", "well", "soon", "i", "m", "pray", "you", "will", "have", "a", "speedy", "recovery", "you", "be", "amazing", "and", "i", "m", "a", "huge", "huge", "fan", "of", "your"]
(c12-4 / multi-sentence
       :snt1 (c12-12 / get-05
                     :ARG1 (c12-3 / you)
                     :ARG2 (c12-9 / well-05
                                  :ARG1 c12-3)
                     :time (c12-5 / soon)
                     :mode imperative)
       :snt2 (c12-11 / and
                     :op1 (c12-8 / pray-01
                                 :ARG0 (c12-10 / i)
                                 :ARG1 (c12-6 / recover-01
                                              :ARG1 c12-3
                                              :ARG1-of (c12-1 / speedy-03)))
                     :op2 (c12-13 / amaze-01
                                  :ARG0 (c12-14 / you))
                     :op3 (c12-2 / fan
                                 :domain c12-10
                                 :mod (c12-7 / huge
                                             :mod-of c12-2))
                     :poss (c12-0 / you)))

# ::snt Get well soon praying for you!
# ::tokens ["Get", "well", "soon", "praying", "for", "you", "!"]
# ::lemmas ["get", "well", "soon", "pray", "for", "you", "!"]
(c13-5 / get-03
       :ARG1 (c13-0 / you)
       :ARG2 (c13-3 / well-05
                    :ARG1 c13-0)
       :time (c13-1 / soon)
       :ARG2-of (c13-2 / pray-01
                       :ARG0 (c13-4 / i)
                       :ARG1 c13-0)
       :mode imperative)

# ::snt Hope you'll be okay!!! Scary!!!!
# ::tokens ["Hope", "you", "'ll", "be", "okay", "!", "!", "!", "Scary", "!", "!", "!", "!"]
# ::lemmas ["hope", "you", "'ll", "be", "okay", "!", "!", "!", "scary", "!", "!", "!", "!"]
(c14-2 / multi-sentence
       :snt1 (c14-4 / hope-01
                    :ARG0 (c14-5 / i)
                    :ARG1 (c14-0 / okay-03
                                 :ARG1 (c14-1 / you)))
       :snt2 (c14-3 / scary-03
                    :mode expressive))

# ::snt Get well soon
# ::tokens ["Get", "well", "soon"]
# ::lemmas ["get", "well", "soon"]
(c15-0 / get-03
       :ARG1 (c15-2 / you)
       :ARG2 (c15-1 / well-05
                    :ARG1 c15-2)
       :time (c15-3 / soon)
       :mode imperative)

# ::snt He was trying to fall asleep at in the morning?
# ::tokens ["He", "was", "trying", "to", "fall", "asleep", "at", "in", "the", "morning", "?"]
# ::lemmas ["he", "be", "try", "to", "fall", "asleep", "at", "in", "the", "morning", "?"]
(c16-4 / try-01
       :polarity (c16-5 / amr-unknown)
       :ARG0 (c16-3 / he)
       :ARG1 (c16-0 / fall-07
                    :ARG1 c16-3
                    :ARG2 (c16-2 / sleep-01
                                 :ARG0 c16-3))
       :time (c16-6 / date-entity
                    :dayperiod (c16-1 / morning)))

# ::snt Publicity stunt dan does his bidding once again taking the public for fools.
# ::tokens ["Publicity", "stunt", "dan", "does", "his", "bidding", "once", "again", "taking", "the", "public", "for", "fools", "."]
# ::lemmas ["publicity", "stunt", "dan", "do", "his", "bidding", "once", "again", "take", "the", "public", "for", "fool", "."]
(c18-5 / and
       :op1 (c18-9 / do-02
                   :ARG0 (c18-6 / person
                                :name (c18-2 / name
                                             :op1 "Dan"))
                   :ARG1 (c18-8 / thing
                                :ARG1-of (c18-4 / stunt-01
                                                :ARG0 c18-6
                                                :ARG2 (c18-3 / public-02))))
       :op2 (c18-11 / take-01
                    :ARG0 c18-6
                    :ARG1 (c18-10 / public-02)
                    :ARG3 (c18-0 / fool)
                    :mod (c18-7 / again
                                :mod (c18-1 / once))))

# ::snt Poor old Simon, I hope he's all right!
# ::tokens ["Poor", "old", "Simon", ",", "I", "hope", "he", "'s", "all", "right", "!"]
# ::lemmas ["poor", "old", "Simon", ",", "i", "hope", "he", "be", "all", "right", "!"]
(c20-3 / hope-01
       :ARG0 (c20-5 / i)
       :ARG1 (c20-6 / all-right
                    :domain (c20-4 / person
                                   :name (c20-1 / name
                                                :op1 "Simon")
                                   :mod (c20-2 / poor)
                                   :mod (c20-0 / old)))
       :mode expressive)

# ::snt He'll miss X factor show - lucky him. Some people will do anything to avoid watching this rubbish.
# ::tokens ["He", "'ll", "miss", "X", "factor", "show", "-", "lucky", "him", ".", "Some", "people", "will", "do", "anything", "to", "avoid", "watching", "this", "rubbish", "."]
# ::lemmas ["he", "'ll", "miss", "X", "factor", "show", "-", "lucky", "he", ".", "some", "people", "will", "do", "anything", "to", "avoid", "watch", "this", "rubbish", "."]
(c21-2 / multi-sentence
       :snt1 (c21-5 / miss-02
                    :ARG0 (c21-6 / he)
                    :ARG1 (c21-3 / show
                                 :name (c21-1 / name
                                              :op1 "X"
                                              :op2 "Factor"))
                    :ARG0-of (c21-15 / mean-01
                                     :ARG1 (c21-7 / lucky
                                                  :domain (c21-10 / he))))
       :snt2 (c21-14 / do-02
                     :ARG0 (c21-8 / person
                                  :mod (c21-0 / some))
                     :ARG1 (c21-13 / anything)
                     :purpose (c21-12 / avoid-01
                                      :ARG0 c21-8
                                      :ARG1 (c21-9 / watch-01
                                                   :ARG0 c21-8
                                                   :ARG1 (c21-4 / rubbish
                                                                :mod (c21-11 / this))))))

# ::snt Is alirght
# ::tokens ["Is", "alirght"]
# ::lemmas ["be", "alirght"]
(c22-1 / thing
       :polarity (c22-0 / amr-unknown))

# ::snt I hope he's get well soon
# ::tokens ["I", "hope", "he", "'s", "get", "well", "soon"]
# ::lemmas ["i", "hope", "he", "be", "get", "well", "soon"]
(c24-1 / hope-01
       :ARG0 (c24-3 / i)
       :ARG1 (c24-4 / get-well-09
                    :ARG1 (c24-2 / he)
                    :time (c24-0 / soon)))

# ::snt Cancel tonight's show it's not too late
# ::tokens ["Cancel", "tonight", "'s", "show", "it", "'s", "not", "too", "late"]
# ::lemmas ["Cancel", "tonight", "'s", "show", "it", "be", "not", "too", "late"]
(c25-6 / cancel-01
       :ARG0 (c25-0 / you)
       :ARG1 (c25-2 / show-04
                    :time (c25-8 / date-entity
                                 :dayperiod (c25-1 / night)
                                 :mod (c25-7 / today)))
       :ARG1-of (c25-9 / cause-01
                       :ARG0 (c25-3 / have-degree-91
                                    :ARG1 c25-2
                                    :ARG2 (c25-4 / late)
                                    :ARG3 (c25-5 / too
                                                 :polarity -)))
       :mode imperative)

# ::snt You don't suppose someone could have pushed him? Maybe one of many singers he's insulted over the years?
# ::tokens ["You", "do", "n't", "suppose", "someone", "could", "have", "pushed", "him", "?", "Maybe", "one", "of", "many", "singers", "he", "'s", "insulted", "over", "the", "years", "?"]
# ::lemmas ["you", "do", "not", "suppose", "someone", "could", "have", "push", "he", "?", "maybe", "one", "of", "many", "singer", "he", "be", "insult", "over", "the", "years", "?"]
(c26-2 / multi-sentence
       :snt1 (c26-4 / suppose-01
                    :ARG0 (c26-1 / you)
                    :ARG1 (c26-8 / possible-01
                                 :ARG1 (c26-3 / push-04
                                              :ARG0 (c26-0 / someone)
                                              :ARG1 (c26-7 / he)))
                    :polarity -)
       :snt2 (c26-14 / possible-01
                     :ARG1 (c26-10 / person
                                   :ARG1-of (c26-13 / include-91
                                                    :ARG2 (c26-15 / person
                                                                  :ARG0-of (c26-17 / sing-01)
                                                                  :ARG1-of (c26-5 / insult-01
                                                                                  :ARG0 (c26-11 / he)
                                                                                  :duration (c26-9 / multiple
                                                                                                   :op1 (c26-12 / temporal-quantity
                                                                                                                :unit (c26-16 / year)
                                                                                                                :quant 1)))))
                                   :quant 1)
                     :polarity (c26-6 / amr-unknown)))

# ::snt Somebody buy that cheapskate a shirt.
# ::tokens ["Somebody", "buy", "that", "cheapskate", "a", "shirt", "."]
# ::lemmas ["somebody", "buy", "that", "cheapskate", "a", "shirt", "."]
(c27-1 / buy-01
       :ARG0 (c27-2 / somebody)
       :ARG1 (c27-0 / shirt)
       :ARG4 (c27-3 / cheapskate
                    :mod (c27-4 / that)))

# ::snt He fell over omg breaking news
# ::tokens ["He", "fell", "over", "omg", "breaking", "news"]
# ::lemmas ["he", "fall", "over", "omg", "break", "news"]
(c29-0 / fall-over-08
       :ARG1 (c29-4 / he)
       :mod (c29-3 / news
                   :ARG1-of (c29-2 / break-13)
                   :mod (c29-1 / oh-my-god
                               :mode expressive)))

# ::snt Cheap publicity stunt...!!
# ::tokens ["Cheap", "publicity", "stunt", "...", "!", "!"]
# ::lemmas ["cheap", "publicity", "stunt", "...", "!", "!"]
(c30-3 / thing
       :ARG1-of (c30-0 / stunt-02
                       :purpose (c30-2 / publicize-01))
       :ARG1-of (c30-1 / cheap-02))

# ::snt How did that happen when he lives in a bungalow?
# ::tokens ["How", "did", "that", "happen", "when", "he", "lives", "in", "a", "bungalow", "?"]
# ::lemmas ["how", "do", "that", "happen", "when", "he", "live", "in", "a", "bungalow", "?"]
(c31-1 / have-manner-91
       :ARG1 (c31-4 / that)
       :ARG2 (c31-5 / amr-unknown)
       :time (c31-2 / live-01
                    :ARG0 (c31-3 / he)
                    :location (c31-0 / bungalow)))

# ::snt Phew just a fall i was thinking it was much more than that like he caught a chest hair in his shirt button.
# ::tokens ["Phew", "just", "a", "fall", "i", "was", "thinking", "it", "was", "much", "more", "than", "that", "like", "he", "caught", "a", "chest", "hair", "in", "his", "shirt", "button", "."]
# ::lemmas ["Phew", "just", "a", "fall", "i", "be", "think", "it", "be", "much", "more", "than", "that", "like", "he", "catch", "a", "chest", "hair", "in", "his", "shirt", "button", "."]
(c32-4 / and
       :op1 (c32-0 / fall-01
                   :mod (c32-14 / just)
                   :mod (c32-8 / phew
                               :mode expressive))
       :op2 (c32-16 / think-01
                    :ARG0 (c32-15 / i)
                    :ARG1 (c32-9 / fall-01
                                 :ARG1-of (c32-7 / have-quant-91
                                                 :ARG3 (c32-2 / more
                                                              :quant (c32-10 / much))
                                                 :ARG4 (c32-11 / fall-01
                                                               :ARG1-of (c32-5 / resemble-01
                                                                               :ARG2 (c32-12 / catch-01
                                                                                             :ARG0 (c32-13 / he)
                                                                                             :ARG1 (c32-6 / hair
                                                                                                          :mod (c32-17 / chest))
                                                                                             :ARG2 (c32-1 / button
                                                                                                          :part-of (c32-3 / shirt
                                                                                                                          :poss c32-13)))))))))

# ::snt Hope they cut those fucking horrible baggy jeans he wears off him
# ::tokens ["Hope", "they", "cut", "those", "fucking", "horrible", "baggy", "jeans", "he", "wears", "off", "him"]
# ::lemmas ["hope", "they", "cut", "those", "fucking", "horrible", "baggy", "jean", "he", "wear", "off", "he"]
(c33-4 / hope-01
       :ARG0 (c33-9 / i)
       :ARG1 (c33-5 / cut-02
                    :ARG0 (c33-10 / they)
                    :ARG1 (c33-8 / jeans
                                 :mod (c33-2 / baggy)
                                 :mod (c33-7 / horrible)
                                 :mod (c33-0 / fucking
                                             :mode expressive)
                                 :ARG1-of (c33-6 / wear-01
                                                 :ARG0 (c33-3 / he)
                                                 :manner (c33-1 / off)))))

# ::snt ANY THING THAT STOP X FACTOR WELL WORTH A FALL SO GOOD NEWS
# ::tokens ["ANY", "THING", "THAT", "STOP", "X", "FACTOR", "WELL", "WORTH", "A", "FALL", "SO", "GOOD", "NEWS"]
# ::lemmas ["any", "thing", "that", "stop", "x", "factor", "well", "WORTH", "a", "fall", "so", "good", "news"]
(c35-5 / stop-01
       :ARG0 (c35-8 / anything
                    :mod (c35-7 / any))
       :ARG1 (c35-3 / news
                    :ARG1-of (c35-9 / good-02
                                    :degree (c35-0 / so))
                    :mod (c35-1 / fact)
                    :ARG1-of (c35-6 / have-degree-91
                                    :ARG2 (c35-2 / bad-07
                                                 :ARG1 c35-3)
                                    :ARG3 (c35-4 / more))))

# ::snt Sinnita?
# ::tokens ["Sinnita", "?"]
# ::lemmas ["Sinnita", "?"]
(c36-1 / person
       :polarity (c36-2 / amr-unknown)
       :name (c36-0 / name
                    :op1 "Sinnita"))

# ::snt Feck off with the dramatics Dan, Simons home ! Bet you was hoping he was seriously injured so you could post your lying bullshit!
# ::tokens ["Feck", "off", "with", "the", "dramatics", "Dan", ",", "Simons", "home", "!", "Bet", "you", "was", "hoping", "he", "was", "seriously", "injured", "so", "you", "could", "post", "your", "lying", "bullshit", "!"]
# ::lemmas ["feck", "off", "with", "the", "dramatic", "Dan", ",", "Simons", "home", "!", "bet", "you", "be", "hope", "he", "be", "seriously", "injure", "so", "you", "could", "post", "your", "lie", "bullshit", "!"]
(c37-12 / multi-sentence
        :snt1 (c37-9 / kick-off-04
                     :ARG0 (c37-18 / i)
                     :ARG1 (c37-16 / person
                                   :name (c37-15 / name
                                                 :op1 "Dan")
                                   :mod (c37-19 / dramatics))
                     :location (c37-8 / home
                                      :poss (c37-13 / person
                                                    :name (c37-14 / name
                                                                  :op1 "Simons")))
                     :mode expressive)
        :snt2 (c37-11 / bet-01
                      :ARG0 (c37-6 / i)
                      :ARG1 (c37-17 / hope-01
                                    :ARG0 (c37-5 / you)
                                    :ARG1 (c37-10 / injure-01
                                                  :ARG1 (c37-7 / he)
                                                  :ARG1-of (c37-0 / serious-02)
                                                  :purpose (c37-4 / possible-01
                                                                  :ARG1 (c37-3 / post-01
                                                                               :ARG0 c37-5
                                                                               :ARG1 (c37-1 / bullshit-01
                                                                                            :ARG0 c37-5
                                                                                            :ARG1 (c37-2 / lie-08))))))
                      :mode expressive))

# ::snt Nice choice of words there . Breaking
# ::tokens ["Nice", "choice", "of", "words", "there", ".", "Breaking"]
# ::lemmas ["nice", "choice", "of", "word", "there", ".", "break"]
(c38-2 / multi-sentence
       :snt1 (c38-3 / choose-01
                    :ARG1 (c38-4 / word)
                    :ARG1-of (c38-1 / nice-01)
                    :location (c38-5 / there))
       :snt2 (c38-0 / break-01))

# ::snt Well he is getting on a bit.
# ::tokens ["Well", "he", "is", "getting", "on", "a", "bit", "."]
# ::lemmas ["well", "he", "be", "get", "on", "a", "bit", "."]
(c39-0 / get-on-21
       :ARG1 (c39-3 / he)
       :degree (c39-2 / bit)
       :mod (c39-1 / well))

# ::snt Probably couldn't break his fall because his t-shirt's too tight.
# ::tokens ["Probably", "could", "n't", "break", "his", "fall", "because", "his", "t", "-", "shirt", "'s", "too", "tight", "."]
# ::lemmas ["probably", "could", "not", "break", "his", "fall", "because", "his", "t", "-", "shirt", "'s", "too", "tight", "."]
(c40-4 / probable
       :domain (c40-5 / cause-01
                      :ARG0 (c40-7 / tight-05
                                   :ARG1 (c40-9 / t-shirt
                                                :poss (c40-3 / he))
                                   :ARG2-of (c40-6 / have-degree-91
                                                   :ARG1 c40-9
                                                   :ARG3 (c40-8 / too)))
                      :ARG1 (c40-2 / possible-01
                                   :ARG1 (c40-1 / break-13
                                                :ARG0 c40-3
                                                :ARG1 (c40-0 / fall-01
                                                             :ARG1 c40-3))
                                   :polarity -)))

# ::snt And here I thought he was a real stand up guy. But seriously hope hes doing well.
# ::tokens ["And", "here", "I", "thought", "he", "was", "a", "real", "stand", "up", "guy", ".", "But", "seriously", "hope", "he", "s", "doing", "well", "."]
# ::lemmas ["and", "here", "i", "think", "he", "be", "a", "real", "stand", "up", "guy", ".", "but", "seriously", "hope", "he", "s", "do", "well", "."]
(c41-1 / multi-sentence
       :snt1 (c41-3 / and
                    :op2 (c41-11 / think-01
                                 :ARG0 (c41-10 / i)
                                 :ARG1 (c41-12 / guy
                                               :ARG0-of (c41-2 / stand-up-07)
                                               :ARG1-of (c41-4 / real-04)
                                               :domain (c41-6 / he))
                                 :location (c41-9 / here)))
       :snt2 (c41-7 / contrast-01
                    :ARG2 (c41-5 / hope-01
                                 :ARG0 c41-10
                                 :ARG1 (c41-8 / well-09
                                              :ARG1 (c41-13 / he))
                                 :ARG1-of (c41-0 / serious-01))))

# ::snt Maybe he shouldnt wear dark glasses everywhere.
# ::tokens ["Maybe", "he", "should", "nt", "wear", "dark", "glasses", "everywhere", "."]
# ::lemmas ["maybe", "he", "should", "not", "wear", "dark", "glass", "everywhere", "."]
(c42-3 / possible-01
       :ARG1 (c42-0 / recommend-01
                    :ARG1 (c42-4 / wear-01
                                 :ARG0 (c42-2 / he)
                                 :ARG1 (c42-5 / glasses
                                              :ARG1-of (c42-6 / dark-02))
                                 :location (c42-1 / everywhere))
                    :polarity -))

# ::snt I hope he gets better soon
# ::tokens ["I", "hope", "he", "gets", "better", "soon"]
# ::lemmas ["i", "hope", "he", "get", "well", "soon"]
(c43-1 / hope-01
       :ARG0 (c43-4 / i)
       :ARG1 (c43-5 / get-03
                    :ARG1 (c43-3 / he)
                    :ARG2 (c43-2 / well-05
                                 :ARG1 c43-3)
                    :time (c43-0 / soon)))

# ::snt HA!
# ::tokens ["HA", "!"]
# ::lemmas ["ha", "!"]
(c44-0 / ha
       :mode expressive)

# ::snt Maybe Eric pushed him
# ::tokens ["Maybe", "Eric", "pushed", "him"]
# ::lemmas ["maybe", "Eric", "push", "he"]
(c45-3 / possible-01
       :ARG1 (c45-1 / push-04
                    :ARG0 (c45-4 / person
                                 :name (c45-0 / name
                                              :op1 "Eric"))
                    :ARG1 (c45-2 / he)))

# ::snt Hope you soon feel better Simon so sorry to hear about your fall , was going too make a joke but don't know as it's appropriate
# ::tokens ["Hope", "you", "soon", "feel", "better", "Simon", "so", "sorry", "to", "hear", "about", "your", "fall", ",", "was", "going", "too", "make", "a", "joke", "but", "do", "n't", "know", "as", "it", "'s", "appropriate"]
# ::lemmas ["hope", "you", "soon", "feel", "well", "Simon", "so", "sorry", "to", "hear", "about", "your", "fall", ",", "be", "go", "too", "make", "a", "joke", "but", "do", "not", "know", "as", "it", "be", "appropriate"]
(c46-0 / say-01
       :ARG0 (c46-18 / i)
       :ARG1 (c46-4 / hope-01
                    :ARG0 c46-18
                    :ARG1 (c46-12 / feel-01
                                  :ARG0 (c46-15 / person
                                                :name (c46-13 / name
                                                              :op1 "Simon"))
                                  :ARG1 (c46-8 / good-02
                                               :ARG2-of (c46-17 / have-degree-91
                                                                :ARG1 c46-15
                                                                :ARG3 (c46-10 / more)))
                                  :time (c46-2 / soon)))
       :ARG2 c46-15
       :ARG1-of (c46-11 / cause-01
                        :ARG0 (c46-9 / contrast-01
                                     :ARG1 (c46-1 / sorry-01
                                                  :ARG1 c46-18
                                                  :ARG2 (c46-3 / hear-01
                                                               :ARG0 c46-18
                                                               :ARG1 (c46-16 / fall-05
                                                                             :ARG1 c46-15))
                                                  :degree (c46-14 / so))
                                     :ARG2 (c46-5 / know-01
                                                  :ARG0 c46-18
                                                  :ARG1 (c46-7 / appropriate-02
                                                               :ARG1 (c46-6 / joke-01
                                                                            :ARG0 c46-18))
                                                  :polarity -))))

# ::snt Sorry
# ::tokens ["Sorry"]
# ::lemmas ["sorry"]
(c47-0 / sorry-01)

# ::snt Its him not her!
# ::tokens ["Its", "him", "not", "her", "!"]
# ::lemmas ["its", "he", "not", "she", "!"]
(c48-0 / contrast-01
       :ARG1 (c48-1 / he)
       :ARG2 (c48-2 / she
                    :polarity -))

# ::snt Planes only fly so fast she will get there when she gets there doh!
# ::tokens ["Planes", "only", "fly", "so", "fast", "she", "will", "get", "there", "when", "she", "gets", "there", "doh", "!"]
# ::lemmas ["plane", "only", "fly", "so", "fast", "she", "will", "get", "there", "when", "she", "get", "there", "doh", "!"]
(c49-0 / fly-01
       :ARG1 (c49-5 / plane)
       :ARG1-of (c49-6 / fast-02
                       :ARG2-of (c49-4 / have-degree-91
                                       :ARG1 c49-0
                                       :ARG3 (c49-3 / so)
                                       :ARG6 (c49-8 / get-05
                                                    :ARG1 (c49-1 / she)
                                                    :ARG2 (c49-7 / there)
                                                    :time c49-0)))
       :mod (c49-2 / only)
       :mod (c49-9 / doh
                   :mode expressive))

# ::snt Hell be there not a cat in hells chance of him missing it
# ::tokens ["Hell", "be", "there", "not", "a", "cat", "in", "hells", "chance", "of", "him", "missing", "it"]
# ::lemmas ["hell", "be", "there", "not", "a", "cat", "in", "hells", "chance", "of", "he", "miss", "it"]
(c50-2 / chance-02
       :ARG1 (c50-0 / miss-02
                    :ARG0 (c50-1 / he)
                    :ARG1 (c50-4 / it))
       :ARG2 (c50-5 / cat)
       :location (c50-3 / hell
                        :mode expressive)
       :polarity -)
